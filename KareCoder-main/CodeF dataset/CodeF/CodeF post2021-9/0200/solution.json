["answers = []\nfor _ in range(int(input())):\n    (u, v) = map(int, input().split())\n    answers.append((-u ** 2, v ** 2))\nfor answer in answers:\n    print(answer[0], answer[1])", "t = int(input())\narr = [list(map(int, input().split())) for i in range(t)]\nfor i in range(t):\n    print(arr[i][0] ** 2 * -1, arr[i][1] ** 2)", "t = int(input())\nnth = []\nmth = []\nfor i in range(t):\n    inp = input().split(' ')\n    nth.append(int(inp[0]))\n    mth.append(int(inp[1]))\nfor i in range(t):\n    print(-1 * nth[i] * nth[i], mth[i] * mth[i])", "for _ in range(int(input())):\n    (u, v) = map(int, input().split())\n    u *= u\n    v *= v\n    print(u * -1, end=' ')\n    print(v)", "import sys\nfast_input = sys.stdin.readline\nsys.setrecursionlimit(10 ** 8)\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    print(-1 * x * x, y * y)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nwhile t > 0:\n    n = [int(x) for x in input().split(' ')]\n    print(-1 * n[0] * n[0], n[1] * n[1])\n    t -= 1", "import sys\ninput = sys.stdin.readline\nt = int(input().strip())\nfor _ in range(t):\n    (u, v) = map(int, input().split())\n    print(-u ** 2, v ** 2)", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    (u, v) = map(int, inp().split())\n    print(-u * u, v * v)\n\ndef main():\n    inp = sys.stdin.readline\n    for i in range(int(inp())):\n        solve()\nmain()", "N = int(input())\nfor i in range(N):\n    A = input().split()\n    u = int(A[0])\n    v = int(A[1])\n    print(-u ** 2, v ** 2)", "ans = []\nfor _ in range(int(input())):\n    (q, w) = map(int, input().split(' '))\n    ans.append((-q ** 2, w ** 2))\nfor _ in ans:\n    print(*_)", "n = int(input())\nfor i in range(n):\n    (u, v) = map(int, input().split())\n    print(-u ** 2, v ** 2)", "for _ in range(int(input())):\n    (u, v) = map(int, input().split())\n    y = v ** 2\n    x = -1 * u ** 2\n    print(x, y)", "def solve():\n    (u, v) = map(int, input().split())\n    print(-u * u, v * v)\nt = int(input())\nfor i in range(t):\n    solve()", "def solve(u, v):\n    return [-u ** 2, v ** 2]\nans = []\nfor _ in range(int(input())):\n    (u, v) = map(int, input().split())\n    ans.append(solve(u, v))\nfor a in ans:\n    print(*a)", "n = int(input())\nfor x in range(n):\n    (u, v) = [int(y) for y in input().split()]\n    print(-1 * u ** 2, v ** 2)", "n = int(input())\na = []\nfor i in range(n):\n    (u, v) = map(int, input().split())\n    a.append(-1 * u ** 2)\n    a.append(v ** 2)\nfor i in range(0, len(a) // 2):\n    print(a[2 * i], a[2 * i + 1])", "t = int(input())\nk = []\nfor i in range(t):\n    k.append(list(map(int, input().split())))\nfor d in k:\n    print(d[0] * d[0] * -1, d[1] ** 2)", "t = int(input())\nfor i in range(t):\n    (u, v) = map(int, input().split())\n    print(-u * u, v * v)", "t = int(input())\nfor i in range(t):\n    (u, v) = map(int, input().split())\n    y = v ** 2\n    print(-u ** 2, y)", "def main():\n    for _ in range(int(input())):\n        (u, v) = map(int, input().split())\n        print(f'{-(u * u)} {v * v}')\nmain()", "t = int(input())\nans = []\nfor i in range(t):\n    (u, v) = map(int, input().split())\n    for y in range(v ** 2, 10 ** 18 + 1, v ** 2):\n        x = -1 * (y // v ** 2) * u ** 2\n        if x * v ** 2 == -1 * y * u ** 2:\n            break\n    ans.append((x, y))\nfor (x, y) in ans:\n    print(x, y)", "t = int(input())\nnumbs = [list(map(int, input().split())) for i in range(t)]\nfor i in range(t):\n    print(-numbs[i][0] ** 2, numbs[i][1] ** 2)", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    print(-a * a, b * b)", "t = int(input())\nfor _ in range(t):\n    (u, v) = map(int, input().split())\n    print(-u * u, v * v)", "k = int(input())\nu = [0] * k\nv = [0] * k\nfor i in range(k):\n    (u[i], v[i]) = map(int, input().split())\nfor i in range(k):\n    print(-u[i] ** 2, v[i] ** 2)", "n = int(input())\nfor i in range(n):\n    temp = input().split(' ')[:2]\n    u = int(temp[0])\n    v = int(temp[1])\n    x = -1 * (u * u)\n    y = v * v\n    print(x, y, end=' ')\n    print()", "def solve(u, v):\n    ans = []\n    ans.append(-u * u)\n    ans.append(v * v)\n    return ans\nt = int(input())\nfor i in range(t):\n    (u, v) = map(int, input().split())\n    ans = solve(u, v)\n    print(*ans)", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    print(-(a * a), b * b)", "t = int(input())\nx = []\nfor i in range(t):\n    m = str(input()).split()\n    x.append([-1 * int(m[0]) * int(m[0]), int(m[1]) * int(m[1])])\nfor i in range(t):\n    print(x[i][0], x[i][1])", "for i in range(int(input())):\n    a = list(map(int, input().split()))\n    print(-1 * a[0] * a[0], a[1] * a[1])", "def solve(uv):\n    u = uv[0]\n    v = uv[1]\n    x = -u ** 2\n    y = v ** 2\n    return (x, y)\nt = int(input())\nfor i in range(t):\n    s = list(map(int, input().split()))\n    (x, y) = solve(s)\n    print(x, y)", "for _ in range(int(input())):\n    (u, v) = map(int, input().split())\n    print(-u ** 2, v ** 2)", "t = int(input())\nfor _ in range(t):\n    (u, v) = map(int, input().split())\n    x = -1 * u ** 2\n    y = v ** 2\n    print(x, y)", "def main():\n    n = int(input())\n    l = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        l.append([a, b])\n    for i in range(n):\n        print(f'{-l[i][0] * l[i][0]} {l[i][1] * l[i][1]}')\nmain()", "n = int(input())\nfor i in range(n):\n    (u, v) = tuple(map(int, input().split()))\n    x = -u ** 2\n    y = v ** 2\n    print(x, y)", "t = int(input())\nanswers = []\nfor _ in range(t):\n    arr = list(map(int, input().split()))\n    u = arr[0]\n    v = arr[1]\n    x = int(-1 * (u * u))\n    y = int(v * v)\n    answers.append(str(x) + ' ' + str(y))\nfor ans in answers:\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (u, v) = map(int, input().split())\n    (x, y) = (-u ** 2, v ** 2)\n    print(x, y)", "def main():\n    count_pairs = int(input())\n    res = []\n    for i in range(0, count_pairs):\n        u_and_v = input().split(' ')\n        x = -1 * (int(u_and_v[0]) * int(u_and_v[0]))\n        y = int(u_and_v[1]) * int(u_and_v[1])\n        res.append(f'{x} {y}')\n    for i in range(0, len(res)):\n        print(res[i])\nmain()", "t = int(input().strip())\nfor i in range(t):\n    (u, v) = map(int, input().split())\n    y = v ** 2\n    x = -u ** 2\n    print(x, y)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (u, v) = map(int, input().split(' '))\n    x = -(u * u)\n    y = -(x * v * v) // (u * u)\n    t1 = (x * v + y * u) * (u + v)\n    t2 = (x + y) * (u * v)\n    if t1 == t2:\n        print(x, y)", "t = int(input())\nfor _ in range(t):\n    (u, v) = map(int, input().split())\n    x = -u * u\n    y = v * v\n    print(x, y)", "N = int(input())\nX = []\nY = []\nfor i in range(0, N):\n    (U, V) = map(int, input().split())\n    x = -U ** 2\n    y = V ** 2\n    X.append(x)\n    Y.append(y)\nfor i in range(N):\n    print(X[i], Y[i])", "n = int(input())\nfor i in range(n):\n    (a, b) = list(map(int, input().split()))\n    print(-a ** 2, b ** 2)", "n = int(input())\nfor i in range(n):\n    x = input().split()\n    k = int(x[0])\n    m = int(x[1])\n    a = k * k\n    l = m * m\n    print(str(-a) + ' ' + str(l))", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    i = -a\n    j = b\n    g = (-a ** 2 + b ** 2) / (a + b)\n    if i + j == g and i != 0 and (j != 0):\n        print(-a ** 2, b ** 2)\n    else:\n        print(-a ** 2 * 2, b ** 2 * 2)", "t = int(input())\nfor i in range(t):\n    (v, u) = map(int, input().split())\n    print(-v ** 2, u ** 2)", "t = int(input())\nfor i in range(t):\n    (u, v) = list(map(int, input().split()))\n    if u == v:\n        print('-1 1')\n    else:\n        x = -1 * pow(u, 2)\n        y = pow(v, 2)\n        if x / u + y / v == (x + y) / (u + v):\n            print(x, y)\n        else:\n            for j in range(2, max(u, v) + 1):\n                if x * j / u + y * j / v == (x * j + y * j) / (u + v):\n                    x *= j\n                    y *= j\n            print(x, y)", "t = input()\ncol = int(t.strip())\narr = []\nfor i in range(col):\n    chi2 = input()\n    arr.append(chi2.strip())\nfor chi in arr:\n    (u1, v1) = chi.split(' ')\n    u = int(u1)\n    v = int(v1)\n    x = -(u * u)\n    y = v * v\n    print(x, y)", "n = int(input())\nlist1 = []\nfor i in range(n):\n    (a1, a2) = map(int, input().split())\n    list1.append([-a1 ** 2, a2 ** 2])\nfor i in list1:\n    print(*i)", "import math\nn = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    print(-1 * a ** 2, b ** 2)", "t = int(input())\nans = []\nfor i in range(t):\n    (v, b) = map(int, input().split())\n    ans.append([-v ** 2, b ** 2])\n    print(-v ** 2, b ** 2)", "a = int(input())\nb = []\nfor i in range(a):\n    b.append(input().split(' '))\nfor i in range(a):\n    print(str(int(b[i][0]) * int(b[i][0]) * -1) + ' ' + str(int(b[i][1]) * int(b[i][1])))", "inp1 = int(input())\nfor i in range(inp1):\n    (a, b) = input().split()\n    a = int(a)\n    b = int(b)\n    print('-' + str(a * a) + ' ' + str(b * b))", "ans = []\nt1 = int(input())\nfor t in range(t1):\n    (u, v) = map(int, input().split())\n    zn = u + v\n    if u == v:\n        (x, y) = (-1 * u, u)\n    else:\n        (x, y) = (-1 * u ** 2, v ** 2)\n    ans.append([x, y])\nfor i in range(t1):\n    print(*ans[i])", "for q in range(int(input())):\n    (u, v) = map(int, input().split())\n    print(-u ** 2, v ** 2)", "tst = int(input())\nfor i in range(tst):\n    (x, y) = map(int, input().split())\n    print(-(x * x), y * y)", "def mathematical():\n    t = int(input())\n    for i in range(t):\n        (U, V) = input().split()\n        u = int(U)\n        v = int(V)\n        a = u * u\n        b = v * v\n        print('-' + str(a) + ' ' + str(b))\nmathematical()", "t = int(input())\nfor i in range(t):\n    (u, v) = list(map(int, input().split()))\n    print(-u * u, v * v)", "for _ in range(int(input().strip())):\n    (u, v) = map(int, input().strip().split())\n    x = -u * u\n    y = v * v\n    print(x, y)", "for _ in range(int(input())):\n    (u, v) = map(int, input().split())\n    print(-1 * u * u, v * v)", "for _ in range(int(input())):\n    (u, v) = map(int, input().split())\n    print(-u * u, v * v)", "num = int(input())\nfor i in range(num):\n    (x, y) = map(int, input().split())\n    print('-' + str(x ** 2) + ' ' + str(y ** 2))", "for _ in range(int(input())):\n    (u, v) = map(int, input().split())\n    print(-u * u, v * v)", "import sys\nimport math\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef solve(a, b):\n    res = []\n    x = -((a + b) * a - a * b)\n    y = (a + b) * b - a * b\n    res.append(x)\n    res.append(y)\n    return res\nres = []\niter = inp()\ni = 0\nwhile i < iter:\n    pair = inlt()\n    sol = solve(pair[0], pair[1])\n    res.append(sol)\n    i += 1\nfor r in res:\n    print(str(r[0]) + ' ' + str(r[1]))"]