["def solution():\n    (n, m) = map(int, input().strip().split())\n    q = int(input())\n    a_b = set()\n    for _ in range(q):\n        (a, b) = map(int, input().strip().split())\n        a_b.add((a, b) if n < m else (b, a))\n    if n > m:\n        (n, m) = (m, n)\n    dp = [-1] * (n + 1)\n    dp[1] = 1\n    result = 0\n    while dp[n] != m:\n        new_dp = dp[:]\n        for i in range(1, n + 1):\n            if dp[i] == -1:\n                continue\n            x = i + dp[i] + ((i, dp[i]) in a_b)\n            new_dp[i] = max(new_dp[i], min(x, m))\n            new_dp[min(x, n)] = max(new_dp[min(x, n)], dp[i])\n        dp = new_dp\n        result += 1\n    return result\nprint(solution())", "(n, m) = map(int, input().strip().split())\nbonus = set()\nx = int(input())\nfor _ in range(x):\n    (a, b) = map(int, input().strip().split())\n    bonus.add((a, b) if n < m else (b, a))\nif n > m:\n    (n, m) = (m, n)\nweapon_on_armor = [-1] * (n + 1)\nweapon_on_armor[1] = 1\nanswer = 0\nwhile weapon_on_armor[n] != m:\n    weapon_on_armor_potential = weapon_on_armor.copy()\n    for armor in range(1, n + 1):\n        if weapon_on_armor[armor] == -1:\n            continue\n        current_power = armor + weapon_on_armor[armor] + ((armor, weapon_on_armor[armor]) in bonus)\n        new_weapon = min(current_power, m)\n        new_armor = min(current_power, n)\n        weapon_on_armor_potential[armor] = max(weapon_on_armor_potential[armor], new_weapon)\n        weapon_on_armor_potential[new_armor] = max(weapon_on_armor_potential[new_armor], weapon_on_armor[armor])\n    answer += 1\n    weapon_on_armor = weapon_on_armor_potential\nprint(answer)"]