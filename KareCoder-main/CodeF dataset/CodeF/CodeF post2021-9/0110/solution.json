["t = int(input())\nfor _ in range(t):\n    grid = []\n    col = int(input())\n    r1 = list(input())\n    r2 = list(input())\n    a = 0\n    while col > 0:\n        if r1[0] == '0' and r2[0] == '0' or (r1[0] == '0' and r2[0] == '1') or (r1[0] == '1' and r2[0] == '0'):\n            r1.remove(r1[0])\n            r2.remove(r2[0])\n            col -= 1\n        elif r1[0] == '1' and r2[0] == '1':\n            r1.remove(r1[0])\n            r2.remove(r2[0])\n            col -= 1\n            a += 1\n    if a == 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    first = input()\n    second = input()\n    for i in range(n):\n        if first[i] == second[i] == '1':\n            print('NO')\n            break\n    else:\n        print('YES')", "def solve():\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    bad = False\n    for i in range(n):\n        bad |= s1[i] == '1' and s2[i] == '1'\n    if bad:\n        print('NO')\n    else:\n        print('YES')\nt = int(input())\nfor i in range(t):\n    solve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    row = []\n    for _ in range(2):\n        row.append(input())\n    ok = True\n    for i in range(1, n, 1):\n        if ok and (row[0][i] != '1' or row[1][i] != '1'):\n            ok = True\n        else:\n            ok = False\n    if ok:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    y = 0\n    for i in range(n):\n        if a[i] == '1' and b[i] == '1':\n            y = 1\n            break\n    if y == 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    q = int(input())\n    a = input()\n    b = input()\n    f = 'YES'\n    for i in range(q):\n        if a[i] == b[i] and a[i] == '1':\n            f = 'NO'\n            break\n    print(f)", "t = int(input())\nfor j in range(0, t):\n    n = int(input())\n    r = input()\n    s = input()\n    o = 'YES'\n    for i in range(0, n):\n        if r[i] == s[i] and r[i] == '1':\n            o = 'NO'\n            break\n    print(o)", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    for i in range(n):\n        if a[i] == '1' and b[i] == '1':\n            print('NO')\n            break\n    else:\n        print('YES')", "N = int(input())\nfor i in range(N):\n    n = int(input())\n    a1 = str(input())\n    a2 = str(input())\n    k = 0\n    for j in range(n):\n        if a1[j] == '1' and a2[j] == '1':\n            print('NO')\n            k = 1\n            break\n    if k == 0:\n        print('YES')", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    x = input()\n    y = input()\n    kt = True\n    for i in range(n):\n        if x[i] == '1' and y[i] == '1':\n            kt = False\n            break\n    print('YES' if kt else 'NO')", "for _ in range(int(input())):\n    column = int(input())\n    row1 = input()\n    row2 = input()\n    count = 0\n    for i in range(column):\n        if row1[i] == row2[i] and row1[i] == '1':\n            count += 1\n            print('NO')\n            break\n    if count == 0:\n        print('YES')", "def solve(arr, n):\n    for i in range(n):\n        if arr[i] == (1, 1):\n            return 'NO'\n    return 'YES'\nfor i in range(int(input())):\n    n = int(input())\n    arr = []\n    p1 = [int(x) for x in input()]\n    p2 = [int(x) for x in input()]\n    arr = list(zip(p1, p2))\n    print(solve(arr, n))", "def process_request(m, string_one, string_two):\n    i = 0\n    change = True\n    two = True\n    one = False\n    while i < m:\n        if two:\n            if string_two[i + 1] == '0':\n                i += 1\n                change = True\n                if i == m - 1:\n                    return 'YES'\n            elif change:\n                two = False\n                one = True\n                change = False\n            else:\n                return 'NO'\n        if one:\n            if string_one[i + 1] == '0':\n                i += 1\n                change = True\n                if i == m - 1:\n                    return 'YES'\n            elif change:\n                two = True\n                one = False\n                change = False\n            else:\n                return 'NO'\n\ndef main():\n    n = int(input())\n    requests = []\n    for _ in range(n):\n        m = int(input())\n        string_one = input()\n        string_two = input()\n        requests.append([m, string_one, string_two])\n    for request in requests:\n        (m, string_one, string_two) = request\n        print(process_request(m, string_one, string_two))\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    for i in range(n):\n        if a[i] == '1' and b[i] == '1':\n            print('NO')\n            break\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    lis = input()\n    lis1 = input()\n    for i in range(n):\n        if lis[i] == '1' and lis1[i] == '1':\n            print('NO')\n            break\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [[], []]\n    a[0] = input()\n    a[1] = input()\n    ans = 'YES'\n    for i in range(1, n):\n        if a[0][i] == a[1][i] == '1':\n            ans = 'NO'\n            break\n    print(ans)", "n = int(input())\nwhile n > 0:\n    n1 = int(input())\n    s = str(input())\n    s1 = str(input())\n    d = []\n    d1 = []\n    for i in s:\n        d += [i]\n    for j in s1:\n        d1 += [j]\n    ans = 'YES'\n    for i in range(n1):\n        if int(d[i]) == 1 and int(d1[i]) == 1:\n            ans = 'NO'\n            break\n    if d1[n1 - 1] == '1':\n        ans = 'NO'\n    print(ans)\n    n -= 1", "t = int(input())\nwhile t:\n    n = int(input())\n    s = input()\n    s1 = input()\n    f = True\n    for i in range(0, len(s)):\n        if s[i] == '1' and s1[i] == '1':\n            print('NO')\n            f = False\n            break\n    if f == True:\n        print('YES')\n    t -= 1", "for test_case in range(int(input())):\n    n = int(input())\n    c1 = int(input(), 2)\n    c2 = int(input(), 2)\n    if c1 & c2:\n        print('NO')\n    else:\n        print('YES')", "for iteration in range(int(input())):\n    n = int(input())\n    r1 = input()\n    r2 = input()\n    found = False\n    for index in range(n):\n        if r1[index] == '1' and r2[index] == '1':\n            found = True\n            break\n    print('NO') if found else print('YES')", "t = int(input())\nfor i in range(t):\n    y = 1\n    n = int(input())\n    x1 = input()\n    x2 = input()\n    for j in range(n):\n        if x1[j] == '1' and x2[j] == '1':\n            print('NO')\n            y = 0\n            break\n    if y == 1:\n        print('YES')", "for _ in range(0, int(input())):\n    input()\n    c = any((x == '1' and y == '1' for (x, y) in zip(input(), input())))\n    print(['YES', 'NO'][c])", "for _ in range(int(input())):\n    n = int(input())\n    l1 = list(input())\n    l2 = list(input())\n    if '11' in [l1[i] + l2[i] for i in range(n)]:\n        print('NO')\n    else:\n        print('YES')", "z = int(input())\nfor _ in range(z):\n    n = int(input())\n    s = zip(input(), input())\n    if ('1', '1') in s:\n        print('NO')\n    else:\n        print('YES')", "n = int(input())\nfor _ in range(n):\n    c = int(input())\n    r1 = input()\n    r2 = input()\n    for i in range(c):\n        if r1[i] == '1' and r2[i] == '1':\n            print('NO')\n            break\n        elif i == c - 1:\n            print('YES')", "N = int(input())\nfor _ in range(N):\n    C = int(input())\n    L = list()\n    L.append(input())\n    L.append(input())\n    flag = 0\n    for i in range(C - 1):\n        if L[0][i + 1] == '1' and L[1][i + 1] == '1':\n            flag = 1\n            break\n    if flag == 1:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    matrix1 = input()\n    matrix2 = input()\n    for i in range(n):\n        if matrix1[i] == '1' and matrix2[i] == '1':\n            print('NO')\n            break\n    else:\n        print('YES')", "def solve():\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    bad = False\n    for i in range(n):\n        bad |= s1[i] == '1' and s2[i] == '1'\n    if bad:\n        print('NO')\n    else:\n        print('YES')\nt = int(input())\nfor i in range(t):\n    solve()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    (s1, s2) = (input(), input())\n    ans = True\n    for i in range(n):\n        if s1[i] == '1' and s2[i] == '1':\n            ans = False\n    print('YES' if ans else 'NO')", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = input()\n    b = input()\n    c = 0\n    for i in range(len(a)):\n        if a[i] == '1' and b[i] == '1':\n            c = c + 1\n    if c > 0:\n        print('NO')\n    else:\n        print('YES')\n    t = t - 1", "t = int(input())\nfinal = []\nfor j in range(0, t):\n    n = int(input())\n    rows = []\n    for i in range(0, 2):\n        num = input()\n        v = list(map(int, str(num)))\n        rows.append(v)\n    pos_y = 0\n    pos_x = 0\n    ans = ''\n    while pos_x < n - 1:\n        x = True\n        if pos_y == 0 and rows[1][pos_x + 1] == 0:\n            pos_x = pos_x + 1\n            pos_y = 1\n        elif pos_y == 1 and rows[0][pos_x + 1] == 0:\n            pos_x = pos_x + 1\n            pos_y = 0\n        elif rows[pos_y][pos_x + 1] == 0:\n            pos_x = pos_x + 1\n        else:\n            x = False\n            ans = 'NO'\n            break\n    if x == True:\n        if pos_y == 1:\n            ans = 'YES'\n        elif pos_y == 0 and rows[1][n - 1] == 0:\n            ans = 'YES'\n        else:\n            ans = 'NO'\n    final.append(ans)\nfor i in range(0, t):\n    print(final[i])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s0 = input()\n    s1 = input()\n    x = [0, 0]\n    for j in range(n - 1):\n        if s1[j + 1] == '0':\n            x[1] += 1\n            if x[0] == 0:\n                x[0] += 1\n        elif s0[j + 1] == '0' and s1[j + 1] == '1':\n            x[1] += 1\n            if x[0] == 1:\n                x[0] == 0\n    if x == [1, n - 1]:\n        print('YES')\n    else:\n        print('NO')", "I = input\nexec(int(I()) * \"I();print('YNEOS'[int(I(),2)&int(I(),2)>0::2]);\")", "t = int(input())\nfor inh in range(0, t):\n    n = int(input())\n    a = input()\n    b = input()\n    (ans, i) = (True, 0)\n    while i < n:\n        if a[i] == '1' and b[i] == '1':\n            ans = False\n            break\n        i += 1\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "def solve():\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    bad = False\n    for i in range(n):\n        bad |= s1[i] == '1' and s2[i] == '1'\n    if bad:\n        print('NO')\n    else:\n        print('YES')\nt = int(input())\nfor i in range(t):\n    solve()", "t = int(input())\nfor test_iteration in range(t):\n    res = 'YES'\n    n = int(input())\n    first_line = input()\n    second_line = input()\n    first_line = [int(char) for char in first_line]\n    second_line = [int(char) for char in second_line]\n    for _ in zip(first_line, second_line):\n        if _ == (1, 1):\n            res = 'NO'\n            break\n        else:\n            continue\n    print(res)", "a = int(input())\nfor _ in range(a):\n    b = int(input())\n    x = input()\n    y = input()\n    c = 0\n    for i in range(b - 1):\n        if x[i] == x[i + 1] == '0' or y[i] == y[i + 1] == '0' or x[i] == y[i + 1] == '0' or (y[i] == x[i + 1] == '0'):\n            c += 1\n        else:\n            break\n    if c == b - 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    z = False\n    for x in range(n):\n        if a[x] == '1' and b[x] == '1':\n            print('NO')\n            z = True\n            break\n    if z:\n        continue\n    print('YES')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    grids = []\n    up = input()\n    down = input()\n    possible = True\n    for i in range(n):\n        if up[i] == down[i] == '1':\n            possible = False\n            break\n    if possible:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    columnLength = int(input())\n    row1 = input()\n    row2 = input()\n    status = 'YES'\n    for index in range(columnLength):\n        if row1[index] == row2[index] == '1':\n            status = 'NO'\n            break\n    print(status)", "I = input\nexec(int(I()) * \"I();print('YNEOS'[int(I(),2)&int(I(),2)>0::2]);\")", "n = int(input())\nfor i in range(n):\n    n1 = int(input())\n    (first, second) = (input(), input())\n    a = True\n    for g in range(n1):\n        if first[g] == '1' and first[g] == second[g]:\n            print('NO')\n            a = False\n            break\n    if a:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = str(input())\n    m = str(input())\n    k = []\n    for j in range(n):\n        if l[j] == '0' and m[j] == '1':\n            k.append(0)\n        elif l[j] == '1' and m[j] == '0':\n            k.append(0)\n        elif l[j] == '0' and m[j] == '0':\n            k.append(0)\n        else:\n            k.append(1)\n    if all((ele == 0 for ele in k)):\n        print('YES')\n    else:\n        print('NO')", "import sys, os.path\nif os.path.exists('inp.txt'):\n    sys.stdin = open('inp.txt', 'r')\n    sys.stdout = open('out.txt', 'w')\n\ndef solve(n, first, second):\n    for i in range(n):\n        if first[i] == second[i] == '1':\n            return 'NO'\n    return 'YES'\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    first = input()\n    second = input()\n    print(solve(n, first, second))", "import math\nfor i in range(int(input())):\n    t = int(input())\n    s1 = input()\n    s2 = input()\n    d = False\n    for i in range(t):\n        d |= s1[i] == '1' and s2[i] == '1'\n    if d:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    a = int(input(), 2)\n    b = int(input(), 2)\n    if not a & b:\n        print('YES')\n    else:\n        print('NO')", "a = int(input())\nfor i in range(a):\n    L = []\n    b = int(input())\n    for j in range(2):\n        c = input()\n        L.append(c)\n    for i in range(len(L[0])):\n        if L[0][i] == '1' and L[1][i] == '1':\n            print('NO')\n            break\n    else:\n        print('YES')", "t = int(input())\nfor o in range(t):\n    n = int(input())\n    screen = [[], []]\n    screen[0] = [int(x) for x in input()]\n    screen[1] = [int(x) for x in input()]\n    ret = True\n    for x in range(1, n):\n        if screen[0][x] == 1 and screen[1][x] == 1:\n            ret = False\n            break\n    if ret:\n        print('YES')\n    else:\n        print('NO')", "I = input\nexec(int(I()) * \"I();print('YNEOS'[int(I(),2)&int(I(),2)>0::2]);\")", "k = int(input())\nwhile k > 0:\n    n = int(input())\n    sus = input()\n    jos = input()\n    x = 0\n    y = 0\n    raspuns = 0\n    posibil = 1\n    while posibil == 1 and x + 1 < n and (raspuns == 0):\n        if sus[x + 1] == '1' and jos[x + 1] == '1':\n            posibil = 0\n        elif jos[x + 1] == '0':\n            x = x + 1\n        elif sus[x + 1] == '0':\n            x = x + 1\n        if x == n - 1 and jos[x] == '0':\n            raspuns = 1\n    if raspuns == 1:\n        print('YES')\n    else:\n        print('NO')\n    k = k - 1", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    ok = True\n    for i in range(n):\n        if a[i] == '1' and b[i] == '1':\n            ok = False\n            break\n    if ok:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    n = int(input())\n    maze = []\n    for j in range(2):\n        maze.append(input())\n    if maze[0][0] == '1' or maze[1][n - 1] == '1':\n        print('NO')\n        continue\n    flag = 0\n    for j in range(n - 1):\n        cnt = 0\n        if maze[0][j + 1] == '1':\n            cnt += 1\n        if maze[1][j + 1] == '1':\n            cnt += 1\n        if cnt == 2:\n            flag = 1\n            break\n    if flag:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    for j in range(n):\n        if a[j] == '1' and b[j] == '1':\n            print('NO')\n            break\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    for i in range(n):\n        if a[i] == '1' and b[i] == '1':\n            print('NO')\n            break\n    else:\n        print('YES')", "def solve():\n    n = int(input())\n    a = input()\n    b = input()\n    bad = False\n    for i in range(n):\n        bad |= a[i] == '1' and b[i] == '1'\n    if bad:\n        print('NO')\n    else:\n        print('YES')\nt = int(input())\nfor i in range(t):\n    solve()", "n = int(input())\nfor i in range(n):\n    input()\n    a = input()\n    b = input()\n    flag = 'YES'\n    for j in range(len(a)):\n        if a[j] == '1' and b[j] == '1':\n            flag = 'NO'\n            break\n    print(flag)", "t = int(input())\nwhile t != 0:\n    ans = False\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    for i in range(n):\n        if s1[i] != '1' or s2[i] != '1':\n            continue\n        ans = True\n        break\n    if ans:\n        print('NO', '\\n')\n    else:\n        print('YES', '\\n')\n    t -= 1", "import math\nfor i in range(int(input())):\n    n = int(input())\n    r1 = input()\n    r2 = input()\n    d = 0\n    if set(r1) == {'0'} and set(r2) == {'0'}:\n        print('YES')\n    else:\n        for k in range(1, n):\n            if r1[k] == '1' and r2[k] == '1':\n                print('NO')\n                d = 1\n                break\n        if d == 0:\n            print('YES')", "t = int(input())\nfor zz in range(t):\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    i = 0\n    c = 0\n    if s1[0] == '0' or s2[0] == '0':\n        while True:\n            if i == n - 1:\n                break\n            if s1[i + 1] == '0' or s2[i + 1] == '0':\n                i += 1\n            elif s1[i + 1] == '1' and s2[i + 1] == '1':\n                c = 1\n                break\n        if c == 1:\n            print('NO')\n        else:\n            print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    r1 = input()\n    r2 = input()\n    ans = 'YES'\n    for i in range(n):\n        if r1[i] == '1' == r2[i]:\n            ans = 'NO'\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    x = input()\n    y = input()\n    z = 'YES'\n    for j in range(n):\n        if x[j] == '1' and y[j] == '1':\n            z = 'NO'\n            break\n    print(z)", "for _ in range(int(input())):\n    n = int(input())\n    l0 = input()\n    l1 = input()\n    assert len(l0) == len(l1) == n\n    for i in range(n):\n        if l0[i] == l1[i] == '1':\n            print('NO')\n            break\n    else:\n        print('YES')", "test_cases = int(input())\nfor x in range(test_cases):\n    columns = int(input())\n    string1 = list(map(int, list(input())))\n    string2 = list(map(int, list(input())))\n    for y in range(columns - 1):\n        if string1[y + 1] and string2[y + 1]:\n            print('NO')\n            break\n    else:\n        print('YES')", "for _ in range(int(input())):\n    s = 0\n    a = int(input())\n    b = input()\n    c = input()\n    for i in range(a):\n        if b[i] == '0':\n            continue\n        elif c[i] == '0':\n            continue\n        else:\n            s += 1\n            break\n    if s == 0:\n        print('YES')\n    else:\n        print('NO')", "def solve():\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    bad = False\n    for i in range(n):\n        bad |= s1[i] == '1' and s2[i] == '1'\n    if bad:\n        print('NO')\n    else:\n        print('YES')\nt = int(input())\nfor i in range(t):\n    solve()", "import math\nt = int(input())\nwhile t:\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    a = []\n    b = []\n    flag = 0\n    for i in range(n):\n        if s1[i] == '1' and s2[i] == '1':\n            flag = 1\n    if flag:\n        print('NO')\n    else:\n        print('YES')\n    t -= 1", "from sys import stdin, stdout\nfor _ in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    r = False\n    for i in range(n):\n        r |= a[i] == '1' and b[i] == '1'\n    if r:\n        print('NO')\n    else:\n        print('YES')", "for _ in [0] * int(input()):\n    input()\n    print('YNEOS'[int(input(), 2) & int(input(), 2) > 0::2])", "def dfsSimilar():\n    N = 100 + 10\n    t = int(input())\n    (dx, dy) = ((0, 1, 0, -1, -1, 1, -1, 1), (1, 0, -1, 0, 1, 1, -1, -1))\n\n    def dfs(x, y):\n        vs[x][y] = True\n        for d in range(8):\n            (nx, ny) = (x + dx[d], y + dy[d])\n            if 0 <= nx < 2 and 0 <= ny < c and (grid[nx][ny] == '0') and (not vs[nx][ny]):\n                dfs(nx, ny)\n    for _ in range(t):\n        c = int(input())\n        (grid, vs) = ([], [[False] * c for _ in range(2)])\n        for __ in range(2):\n            grid.append(list(input()))\n        dfs(0, 0)\n        print('YES' if vs[1][c - 1] else 'NO')\n\ndef smart():\n    t = int(input())\n    for _ in range(t):\n        g = []\n        col = int(input())\n        for __ in range(2):\n            g.append(list(input()))\n        flag = True\n        for check_c in range(col):\n            if g[0][check_c] == '1' and g[1][check_c] == '1':\n                flag = False\n                break\n        print('YES' if flag else 'NO')\nsmart()", "def solve():\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    bad = False\n    for i in range(n):\n        bad |= s1[i] == '1' and s2[i] == '1'\n    if bad:\n        print('NO')\n    else:\n        print('YES')\nt = int(input())\nfor i in range(t):\n    solve()", "a = int(input())\nfor _ in range(a):\n    n = int(input())\n    a = input()\n    b = input()\n    flag = 1\n    for i in range(n):\n        if a[i] == b[i] == '1':\n            flag = 0\n            break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    d = []\n    for i in range(2):\n        s = input()\n        d.append(s)\n    for j in range(n):\n        if d[0][j] == d[1][j] == '1':\n            print('NO')\n            break\n    else:\n        print('YES')", "for i in range(int(input())):\n    a = int(input())\n    lis = input()\n    lis2 = input()\n    ans = 0\n    c = 1\n    for i in range(a):\n        if lis[i] == '1' and lis2[i] == '1':\n            ans = 1\n            break\n    if ans:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    a = []\n    for i in range(2):\n        x = input()\n        b = []\n        for j in x:\n            b.append(j)\n        a.append(b)\n    t = True\n    for i in range(n):\n        da = False\n        for j in range(2):\n            if a[j][i] == '0':\n                da = True\n        if da == False:\n            print('NO')\n            t = False\n            break\n    if t:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    mat = []\n    for j in range(2):\n        row = str(input())\n        mat.append(list(row))\n    suc = 1\n    for j in range(n):\n        if mat[0][j] == '1' and mat[1][j] == '1':\n            print('NO')\n            suc = 0\n            break\n    if suc == 1:\n        print('YES')", "def solve():\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    bad = False\n    for i in range(n):\n        bad |= s1[i] == '1' and s2[i] == '1'\n    if bad:\n        print('NO')\n    else:\n        print('YES')\nt = int(input())\nfor i in range(t):\n    solve()", "for i in range(int(input())):\n    a = int(input())\n    b = input()\n    c = input()\n    for i in range(a):\n        if b[i] == c[i] == '1':\n            print('NO')\n            break\n    else:\n        print('YES')", "for i in range(int(input())):\n    a = int(input())\n    b = input()\n    c = input()\n    try:\n        for i in range(a + 1):\n            if '1' == b[i] == c[i]:\n                print('NO')\n                break\n    except:\n        print('YES')", "I = input\nexec(int(I()) * \"I();print('YNEOS'[int(I(),2)&int(I(),2)>0::2]);\")", "for _ in range(int(input())):\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    b = True\n    for i in range(len(s1)):\n        if s1[i] == '1' and s2[i] == '1':\n            print('NO')\n            b = False\n            break\n    if b == True:\n        print('YES')", "def solve():\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    bad = False\n    for i in range(n):\n        bad |= s1[i] == '1' and s2[i] == '1'\n    if bad:\n        print('NO')\n    else:\n        print('YES')\nt = int(input())\nfor i in range(t):\n    solve()", "testcases = input()\ntestcases = int(testcases)\nfor caseNr in range(1, testcases + 1):\n    n = int(input())\n    line1 = input()\n    line2 = input()\n    check = True\n    for i in range(n - 1):\n        if line1[i] == line2[i] and line1[i] == '1':\n            check = False\n    if check == False:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    check = False\n    for i in range(n):\n        check |= s1[i] == '1' and s2[i] == '1'\n    if check:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    row_1 = input()\n    row_2 = input()\n    for i in range(n):\n        check = 0\n        if row_1[i] == '1' and row_2[i] == '1':\n            check = 1\n            break\n    if check == 0:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    for i in range(1, n - 1):\n        if s1[i] == s2[i] == '1':\n            print('NO')\n            break\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s1 = list(input())\n    s2 = list(input())\n    res = True\n    for (c1, c2) in zip(s1, s2):\n        if c1 == '1' and c2 == '1':\n            res = False\n            break\n    print('YES' if res else 'NO')", "testCases = int(input())\nfor _ in range(testCases):\n    column = int(input())\n    row1 = input()\n    row2 = input()\n    for i in range(column - 1):\n        if not (row1[i] == '0' or row2[i] == '0'):\n            print('NO')\n            break\n        if i == column - 2:\n            print('YES')", "for i in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    ans = 'YES'\n    for j in range(n):\n        if a[j] == '1' and b[j] == '1':\n            ans = 'NO'\n    print(ans)", "a = [*open(0)][1:]\nfor _ in range(len(a) // 3):\n    print((int(a[3 * _ + 1], 2) & int(a[3 * _ + 2], 2) == 0) * 'YES' or 'NO')", "for i in range(int(input())):\n    n = input()\n    a = input()\n    b = input()\n    ansN = False\n    for j in range(int(n)):\n        if int(a[j]) + int(b[j]) == 2:\n            ansN = True\n            break\n    if not ansN:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, s) = (int(input()), 'YES')\n    for (i, j) in zip(input(), input()):\n        if i == j == '1':\n            s = 'NO'\n            break\n    print(s)", "def solve():\n    t = int(input().strip())\n    for _ in range(t):\n        n = int(input().strip())\n        game = []\n        game.append(input().strip())\n        game.append(input().strip())\n        possible = True\n        for i in range(n):\n            if game[0][i] == '1' and game[1][i] == '1':\n                possible = False\n                break\n        if possible:\n            print('YES')\n        else:\n            print('NO')\nsolve()", "def solve():\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    for (c1, c2) in zip(s1, s2):\n        if c1 == c2 == '1':\n            print('NO')\n            return\n    print('YES')\nfor _ in range(int(input())):\n    solve()", "for t in range(int(input())):\n    int(input())\n    print('NO' if any(map(all, zip(map(int, input()), map(int, input())))) else 'YES')"]