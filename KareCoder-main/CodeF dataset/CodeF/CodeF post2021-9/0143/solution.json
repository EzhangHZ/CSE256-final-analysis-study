["import math\nt = int(input())\nfor t1 in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m1 = max(l)\n    l.pop(l.index(m1))\n    m2 = max(l)\n    mi1 = min(l)\n    l.pop(l.index(mi1))\n    mi2 = min(l)\n    print(m1 + m2 - mi1 - mi2)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = list(set(l))\n    if len(a) == 1:\n        print(0)\n    elif len(a) == 2:\n        print(max(a) - min(a))\n    else:\n        min1 = min(l)\n        l.remove(min1)\n        min2 = min(l)\n        l.remove(min2)\n        max1 = max(l)\n        l.remove(max1)\n        max2 = max(l)\n        l.remove(max2)\n        print(max1 + max2 - min1 - min2)", "t = int(input())\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    print(arr[-1] + arr[-2] - arr[0] - arr[1])\n    t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    s1 = a.pop(a.index(max(a))) - a.pop(a.index(min(a)))\n    print(s1 + (max(a) - min(a)))", "def sums(lis):\n    min1 = min(lis)\n    max1 = max(lis)\n    lis.remove(min1)\n    lis.remove(max1)\n    min2 = min(lis)\n    max2 = max(lis)\n    print(max1 + max2 - min1 - min2)\ntc = int(input())\nfor _ in range(tc):\n    t = int(input())\n    templist = list(map(int, input().split()[:t]))\n    sums(templist)", "t = int(input())\nwhile t:\n    n = int(input())\n    li = list(map(int, input().split()))\n    li.sort()\n    ans = li[-1] - li[0] + (li[-2] - li[1])\n    print(ans)\n    t -= 1", "n = int(input())\nfor i in range(n):\n    num = int(input())\n    string = str(input())\n    arr = list(string.split(' '))\n    arr = [int(x) for x in arr]\n    max1 = arr.pop(arr.index(max(arr)))\n    min1 = arr.pop(arr.index(min(arr)))\n    max2 = arr.pop(arr.index(max(arr)))\n    min2 = arr.pop(arr.index(min(arr)))\n    print(max1 + max2 - (min1 + min2))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ma = max(l)\n    mi = min(l)\n    l.remove(max(l))\n    l.remove(min(l))\n    mat = max(l)\n    mit = min(l)\n    print(ma + mat - mi - mit)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a1 = max(a)\n    a2 = min(a)\n    a.remove(a1)\n    a.remove(a2)\n    a3 = max(a)\n    a4 = min(a)\n    print(a1 - a2 + (a3 - a4))", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    a = max(lst)\n    lst.remove(a)\n    b = max(lst)\n    c = min(lst)\n    lst.remove(c)\n    d = min(lst)\n    print(a + b - c - d)", "t = int(input())\nfor ti in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    M = max(a)\n    m = min(a)\n    a.remove(M)\n    a.remove(m)\n    MM = max(a)\n    mm = min(a)\n    print(M + MM - m - mm)", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    m = list(map(int, input().split()))\n    a = max(m)\n    b = min(m)\n    m.remove(a)\n    m.remove(b)\n    c = max(m)\n    d = min(m)\n    print(a + c - b - d)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    MAX = max(a)\n    MIN = min(a)\n    aN = list(a)\n    aN.remove(MAX)\n    aN.remove(MIN)\n    print(MAX - MIN + max(aN) - min(aN))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))[:n]\n    a.sort()\n    print(a[n - 1] + a[n - 2] - a[0] - a[1])", "def ans(a):\n    l = a\n    g = max(a)\n    h = min(a)\n    l.remove(g)\n    l.remove(h)\n    enter = g - h + max(l) - min(l)\n    return enter\nt = int(input(''))\nlst = []\nfor i in range(t):\n    le = int(input())\n    l = [int(x) for x in input().split()]\n    lst.append(ans(l))\nfor i in lst:\n    print(i)", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a.count(a[0]) == n:\n        print(0)\n    else:\n        b = list()\n        diff = max(a) - min(a)\n        a.remove(max(a))\n        a.remove(min(a))\n        diff1 = max(a) - min(a)\n        print(diff + diff1)", "for _ in range(int(input())):\n    input()\n    li = [int(e) for e in input().split()]\n    (mx, mn) = (max(li), min(li))\n    (li.remove(mx), li.remove(mn))\n    (ndMx, ndMn) = (max(li), min(li))\n    print(mx + ndMx - mn - ndMn)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lis = list(map(int, input().rstrip(' ').split(' ')))\n    maximum = max(lis)\n    minimum = min(lis)\n    lis.remove(maximum)\n    lis.remove(minimum)\n    secmax = max(lis)\n    secmin = min(lis)\n    print(maximum + secmax - secmin - minimum)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = a[-1] - a[0] + (a[-2] - a[1])\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    a = arr[-1]\n    b = arr[-2]\n    c = arr[0]\n    d = arr[1]\n    ans = a - c + (b - d)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = max(l) - min(l)\n    l.remove(max(l))\n    l.remove(min(l))\n    ans += max(l) - min(l)\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = max(l) - min(l)\n    l.remove(max(l))\n    l.remove(min(l))\n    ans += max(l) - min(l)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (Mx, mx, Mn, mn) = (0, 0, 1000000000.0 + 10, 1000000000.0 + 10)\n    for el in arr:\n        if el > mx:\n            if el > Mx:\n                (Mx, mx) = (el, Mx)\n            else:\n                mx = el\n        if el < mn:\n            if el < Mn:\n                (Mn, mn) = (el, Mn)\n            else:\n                mn = el\n    print(Mx - Mn + mx - mn)", "from math import *\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    ans = l[n - 1] + l[n - 2] - l[0] - l[1]\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    a = max(l)\n    l.remove(a)\n    b = max(l)\n    l.remove(b)\n    c = min(l)\n    l.remove(c)\n    d = min(l)\n    r = a + b - c - d\n    print(r)", "for _ in range(int(input())):\n    n = int(input())\n    v = list(map(int, input().split()))[:n]\n    (m1, n1) = (max(v), min(v))\n    for i in [m1, n1]:\n        v.remove(i)\n    (m2, n2) = (max(v), min(v))\n    print(m1 + m2 - n1 - n2)", "t = int(input())\nfor i in range(t):\n    p = int(input())\n    l = list(map(int, input().split()))\n    g = len(l)\n    l.sort()\n    print(l[g - 1] + l[g - 2] - l[0] - l[1])", "for _ in range(int(input())):\n    len_arr = int(input())\n    list1 = list(map(int, input().split()))\n    max_1 = max(list1)\n    list1.remove(max(list1))\n    max_2 = max(list1)\n    mini_1 = min(list1)\n    list1.remove(min(list1))\n    mini_2 = min(list1)\n    print(max_1 - mini_1 + max_2 - mini_2)", "def InterestingSum(l):\n    (min1, max1) = (min(l), max(l))\n    l.pop(l.index(max1))\n    l.pop(l.index(min1))\n    (min2, max2) = (min(l), max(l))\n    print(max1 - min1 + (max2 - min2))\nt = int(input())\nl = []\nfor i in range(t):\n    n = int(input())\n    m = list(map(int, input().split()))\n    l.append(m)\nfor i in l:\n    InterestingSum(i)", "class Solution:\n\n    def maxBeauty(self, arr):\n        arrMin = min(arr)\n        minIdx = arr.index(arrMin)\n        del arr[minIdx]\n        nMin = min(arr)\n        arrMax = max(arr)\n        maxIdx = arr.index(arrMax)\n        del arr[maxIdx]\n        nMax = max(arr)\n        return arrMax + nMax - arrMin - nMin\nob = Solution()\nt = int(input())\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().strip().split()))\n    res = ob.maxBeauty(arr)\n    print(res)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    arr = sorted(list(map(int, input().split())))\n    print(sum(arr[-2:]) - sum(arr[:2]))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = list(map(int, input().split()))\n    s.sort()\n    print(s[n - 1] + s[n - 2] - s[1] - s[0])", "t = int(input())\na = 1\nwhile a <= t:\n    n = int(input())\n    arr = input().split()\n    b = map(int, arr)\n    l = list(b)\n    m1 = max(l)\n    n1 = min(l)\n    l.remove(m1)\n    l.remove(n1)\n    m2 = max(l)\n    n2 = min(l)\n    c = m1 - n1\n    d = m2 - n2\n    print(c + d)\n    a = a + 1", "y = int(input())\nx = [0] * y\nf = 0\nwhile y > 0:\n    n = int(input())\n    t = list(map(int, input().split()))\n    sum = max(t) - min(t)\n    t.remove(max(t))\n    t.remove(min(t))\n    x[f] = sum + max(t) - min(t)\n    y -= 1\n    f += 1\nfor i in x:\n    print(i)", "for s in [*open(0)][2::2]:\n    (a, b, *_, c, d) = sorted(map(int, s.split()))\n    print(c + d - a - b)", "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    lis.sort()\n    print(lis[-1] + lis[-2] - lis[1] - lis[0])", "n = int(input())\np = []\nfor i in range(n):\n    input()\n    ns = [int(j) for j in input().split()]\n    n1 = max(ns) - min(ns)\n    ns.remove(max(ns))\n    ns.remove(min(ns))\n    n2 = max(ns) - min(ns)\n    p.append(str(n1 + n2))\nprint('\\n'.join(p))", "def get_Highest_Sum(list):\n    sum = max(list) - min(list)\n    list.remove(max(list))\n    list.remove(min(list))\n    sum += max(list) - min(list)\n    return sum\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    print(get_Highest_Sum(nums))", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l1 = l\n    minn1 = min(l)\n    maxx1 = max(l)\n    del l[l.index(minn1)]\n    del l[l.index(maxx1)]\n    minn2 = min(l)\n    maxx2 = max(l)\n    if l1.index(minn2) != 0 and l1.index(maxx2) != 0 or l1.count(minn2) > 1 or l1.count(maxx2) > 0:\n        print(maxx1 - minn1 + (maxx2 - minn2))\n    else:\n        while l1.index(minn2) == 0 and l1.index(maxx2) == 0:\n            del l[l.index(minn2)]\n            del l[l.index(maxx2)]\n            minn2 = min(l)\n            maxx2 = max(l)\n        print(maxx1 - minn1 + (maxx2 - minn1))", "q = int(input())\nfor i in range(q):\n    n = int(input())\n    r1 = list(map(int, input().split()))\n    r1.sort()\n    print(r1[-1] + r1[-2] - r1[0] - r1[1])", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = max(a) - min(a)\n    a.remove(max(a))\n    a.remove(min(a))\n    y = max(a) - min(a)\n    print(x + y)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[-1] - a[0] + a[-2] - a[1])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    beauty = 0\n    for i in range(2):\n        beauty += max(a) - min(a)\n        a.remove(max(a))\n        a.remove(min(a))\n    print(beauty)", "a = int(input())\nfor i in range(a):\n    b = int(input())\n    c = list(map(int, input().split()))\n    c.sort()\n    print(c[-1] + c[-2] - (c[0] + c[1]))", "for _ in range(int(input())):\n    input()\n    li = sorted(map(int, input().split()))\n    li = list(li)\n    print(li[-1] + li[-2] - li[0] - li[1])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = input().split()\n    arr = [int(i) for i in arr]\n    arr.sort()\n    print(arr[-1] + arr[-2] - arr[0] - arr[1])", "from math import *\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[-1] + a[-2] - a[0] - a[1])", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    print(l[-1] + l[-2] - l[0] - l[1])", "for _ in range(int(input())):\n    n = int(input())\n    mas = list(map(int, input().split()))\n    mas.sort()\n    print(mas[-1] + mas[-2] - mas[0] - mas[1])", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    print(l[-1] + l[-2] - l[0] - l[1])", "for pratyush in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[n - 1] - a[0] - a[1] + a[n - 2])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = sorted(map(int, input().split()))\n    print(sum(a[-2:]) - sum(a[:2]))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[-1] - a[0] + a[-2] - a[1])", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef solve():\n    n = inp()\n    nums = inlt()\n    nums.sort()\n    ans = nums[-1] + nums[-2] - nums[0] - nums[1]\n    return ans\nfor _ in range(inp()):\n    print(solve())", "a = int(input())\nfor y in range(a):\n    a = int(input())\n    b = list(map(int, input().split()))\n    b.sort()\n    j = b[-1] + b[-2] - (b[0] + b[1])\n    print(j)", "for _ in range(int(input())):\n    result = 0\n    _ = int(input())\n    tmp = list(input().split())\n    a = [int(_) for _ in tmp]\n    t = max(a)\n    result += t\n    a.remove(t)\n    t = max(a)\n    result += t\n    a.remove(t)\n    t = min(a)\n    result -= t\n    a.remove(t)\n    t = min(a)\n    result -= t\n    a.remove(t)\n    print(result)", "length = int(input())\nfor _ in range(length):\n    n = int(input())\n    lst = list(map(int, input().split(' ')))\n    lst.sort()\n    print(lst[-1] + lst[-2] - lst[0] - lst[1])", "for test in range(int(input())):\n    n = int(input())\n    lt = list(map(int, input().split()))\n    lt.sort()\n    print(lt[-1] + lt[-2] - lt[0] - lt[1])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    ans = a[-1] - a[0] + a[-2] - a[1]\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    lst.sort()\n    print(lst[n - 1] + lst[n - 2] - lst[0] - lst[1])", "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    max1 = max(arr)\n    min1 = min(arr)\n    arr.remove(max1)\n    arr.remove(min1)\n    max2 = max(arr)\n    min2 = min(arr)\n    print(max1 - min1 + (max2 - min2))\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    array = list(map(int, input().split()))\n    array.sort()\n    print(array[-1] + array[-2] - array[0] - array[1])\n    t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    s = 0\n    m = max(l)\n    m1 = min(l)\n    s += m - m1\n    l.remove(m)\n    l.remove(m1)\n    m = max(l)\n    m1 = min(l)\n    s += m - m1\n    print(s)", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\ng = lambda : [*map(int, input().split())]\nfor _ in range(int(input())):\n    N = int(input())\n    nums = g()\n    nums.sort()\n    ans = nums[-1] + nums[-2] - nums[0] - nums[1]\n    print(ans)", "t = int(input())\nfor i in range(1, t + 1):\n    n = int(input())\n    a = [int(j) for j in input().split()]\n    a.sort()\n    print(a[n - 1] + a[n - 2] - a[0] - a[1])", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    b = a[0] + a[1]\n    c = a[-1] + a[-2]\n    print(c - b)", "import sys\nimport math\nimport bisect\nfrom sys import stdin, stdout\nfrom math import gcd, floor, sqrt, log\nfrom collections import defaultdict as dd\nfrom bisect import bisect_left as bl, bisect_right as br\nsys.setrecursionlimit(100000000)\ninp = lambda : int(input())\nstrng = lambda : input().strip()\njn = lambda x, l: x.join(map(str, l))\nstrl = lambda : list(input().strip())\nmul = lambda : map(int, input().strip().split())\nmulf = lambda : map(float, input().strip().split())\nseq = lambda : list(map(int, input().strip().split()))\nceil = lambda x: int(x) if x == int(x) else int(x) + 1\nceildiv = lambda x, d: x // d if x % d == 0 else x // d + 1\nflush = lambda : stdout.flush()\nstdstr = lambda : stdin.readline()\nstdint = lambda : int(stdin.readline())\nstdpr = lambda x: stdout.write(str(x))\nmod = 1000000007\n\ndef solve(n, a):\n    a.sort()\n    print(a[n - 1] + a[n - 2] - a[0] - a[1])\nfor ii in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    solve(n, a)", "R = lambda : [*map(int, input().split())]\nfor _ in range(int(input())):\n    n = int(input())\n    a = R()\n    a.sort()\n    print(a[-1] + a[-2] - a[1] - a[0])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    L = list(map(int, input().split()))\n    L.sort()\n    print(L[-1] + L[-2] - L[0] - L[1])", "def help():\n    n = int(input())\n    a = [int(y) for y in input().split()]\n    x = max(a)\n    a.remove(x)\n    y = max(a)\n    a.remove(y)\n    z = min(a)\n    a.remove(z)\n    w = min(a)\n    a.remove(w)\n    print(x + y - z - w)\nt = int(input())\nfor i in range(0, t):\n    help()", "t = int(input())\nwhile t:\n    n = int(input())\n    m = list(map(int, input().split()))\n    m.sort()\n    print(m[-1] - m[0] + (m[-2] - m[1]))\n    t -= 1", "import math\n\ndef solve():\n    n = int(input())\n    lst = list(map(int, input().split(' ')))\n    lst.sort()\n    print(lst[-1] + lst[-2] - lst[0] - lst[1])\nt = int(input())\nwhile t:\n    t -= 1\n    solve()", "import sys\nfrom os import path\nimport os\nif path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nimport math\n\ndef beauty(a, l, r):\n    t1 = a[:l] + a[r + 1:]\n    t2 = a[l:r + 1]\n    return max(t1) - min(t1) + max(t2) - min(t1)\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[-1] + a[-2] - a[0] - a[1])", "import math\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    A = list(map(int, input().split()))\n    A.sort()\n    print(A[-1] + A[-2] - A[0] - A[1])", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[n - 1] - a[0] + (a[n - 2] - a[1]))", "t = int(input())\nres = []\nfor _ in range(t):\n    n = int(input())\n    nums = [int(x) for x in input().split()]\n    nums.sort(reverse=True)\n    res.append(nums[0] + nums[1] - nums[-1] - nums[-2])\nfor val in res:\n    print(val)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[n - 1] - a[0] + (a[n - 2] - a[1]))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    max1 = max(l)\n    l.remove(max1)\n    max2 = max(l)\n    l.remove(max2)\n    min1 = min(l)\n    l.remove(min1)\n    min2 = min(l)\n    l.remove(min2)\n    print(max1 + max2 - min1 - min2)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[n - 1] - a[0] + (a[n - 2] - a[1]))", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    lst.sort()\n    print(lst[n - 1] + lst[n - 2] - lst[0] - lst[1])", "inp = lambda : int(input())\nstrng = lambda : input().strip()\njn = lambda x, l: x.join(map(str, l))\nstrl = lambda : list(input().strip())\nmul = lambda : map(int, input().strip().split())\nmulf = lambda : map(float, input().strip().split())\nseq = lambda : list(map(int, input().strip().split()))\nceil = lambda x: int(x) if x == int(x) else int(x) + 1\nceildiv = lambda x, d: x // d if x % d == 0 else x // d + 1\nflush = lambda : stdout.flush()\nstdstr = lambda : stdin.readline()\nstdint = lambda : int(stdin.readline())\nstdpr = lambda x: stdout.write(str(x))\nmod = 10 ** 9 + 7\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n\ndef solve():\n    length = inp()\n    arr = seq()\n    arr.sort()\n    return arr[-1] - arr[0] + arr[-2] - arr[1]\n\ndef main():\n    testcases = inp()\n    for test in range(testcases):\n        print(solve())\nmain()", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[n - 1] - a[0] + (a[n - 2] - a[1]))", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    ma = max(l)\n    place = l.index(ma)\n    a = l\n    l[place] = 0\n    mo = max(l)\n    l[place] = ma\n    mia = min(a)\n    place = a.index(mia)\n    a[place] = max(a)\n    mio = min(a)\n    print(ma + mo - mia - mio)", "for _ in range(int(input())):\n    n = int(input())\n    mass = list(map(int, input().split()))\n    mass.sort()\n    (a, b) = (max(mass), min(mass))\n    imax = mass.index(a)\n    imin = mass.index(b)\n    del mass[imax]\n    del mass[imin]\n    (c, d) = (max(mass), min(mass))\n    print(a - b + (c - d))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    max1 = max(a)\n    max1_p = a.index(max1)\n    min1 = min(a)\n    min1_p = a.index(min1)\n    max2 = 0\n    min2 = float('inf')\n    for i in range(n):\n        if a[i] < min2 and i != min1_p:\n            min2 = a[i]\n        if a[i] > max2 and i != max1_p:\n            max2 = a[i]\n    print(max1 + max2 - min1 - min2)", "t = int(input())\nwhile t:\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    arr.sort()\n    res = arr[n - 1] + arr[n - 2] - arr[0] - arr[1]\n    print(res)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    a = arr.pop(arr.index(max(arr)))\n    b = arr.pop(arr.index(max(arr)))\n    c = arr.pop(arr.index(min(arr)))\n    d = arr.pop(arr.index(min(arr)))\n    print(a + b - c - d)\n    t -= 1", "import math\nimport os\nimport random\nimport re\nimport sys\nfrom math import gcd\nfrom math import sqrt\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    mx = max(arr)\n    mn = min(arr)\n    arr.remove(max(arr))\n    arr.remove(min(arr))\n    se_mx = max(arr)\n    se_mn = min(arr)\n    first = mx - mn\n    second = se_mx - se_mn\n    print(first + second)", "t = int(input())\nfor o in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = max(a) - min(a)\n    a.pop(a.index(max(a)))\n    a.pop(a.index(min(a)))\n    print(s + max(a) - min(a))", "t = int(input())\nfor i in range(t):\n    l = int(input())\n    li = list(map(int, input().split()))\n    sum = max(li)\n    li.remove(max(li))\n    sum += max(li) - min(li)\n    li.remove(min(li))\n    sum -= min(li)\n    print(sum)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = input().split()\n    ln = []\n    for j in l:\n        ln.append(int(j))\n    ln.sort()\n    print(ln[n - 1] + ln[n - 2] - ln[0] - ln[1])", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    s1 = input()\n    arr = [int(x) for x in s1.split()]\n    beauty = 0\n    temp = max(arr)\n    beauty += temp\n    arr.remove(temp)\n    temp = max(arr)\n    beauty += temp\n    arr.remove(temp)\n    temp = min(arr)\n    beauty -= temp\n    arr.remove(temp)\n    temp = min(arr)\n    beauty -= temp\n    arr.remove(temp)\n    print(beauty)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = [int(k) for k in input().split()]\n    arr.sort()\n    a = arr[-1]\n    b = arr[0]\n    c = a - b\n    d = arr[-2]\n    e = arr[1]\n    f = d - e\n    print(c + f)", "import bisect\nfrom collections import deque, defaultdict\nT = int(input())\nq = []\nfor i in range(T):\n    n = int(input())\n    data = [int(i) for i in input().split()]\n    q.append((n, data))\n\ndef solve(n, data):\n    maxx1 = max(data)\n    minn1 = min(data)\n    data.remove(maxx1)\n    data.remove(minn1)\n    maxx2 = max(data)\n    minn2 = min(data)\n    print(maxx1 - minn1 + maxx2 - minn2)\nfor (n, data) in q:\n    solve(n, data)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split(None, n)[:n]))\n    a.sort()\n    print(a[n - 1] + a[n - 2] - a[0] - a[1])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = sorted(list(map(int, input().split())))\n    print(arr[n - 1] + arr[n - 2] - arr[0] - arr[1])", "for i in range(int(input())):\n    n = int(input())\n    l = sorted(list(map(int, input().split())))\n    print(l[-1] + l[-2] - l[0] - l[1])", "p = lambda a: print(a)\niip = lambda : int(input())\nsip = lambda : input()\nmip = lambda : map(int, input().strip().split())\nlip = lambda : list(map(int, input().strip().split()))\nceil = lambda x: int(x) if x == int(x) else int(x) + 1\nflr = lambda x: int(x)\ntstcs = lambda : range(int(input()))\nfor t in tstcs():\n    n = iip()\n    l = lip()\n    l.sort()\n    a = l[0]\n    b = l[1]\n    c = l[n - 1]\n    d = l[n - 2]\n    print(c + d - a - b)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    xs = input()\n    xs = [int(x) for x in xs.split()]\n    max1 = max(xs)\n    new_list = xs\n    new_list.remove(max(new_list))\n    max2 = max(new_list)\n    min1 = min(xs)\n    new_list = xs\n    new_list.remove(min(new_list))\n    min2 = min(new_list)\n    print(max1 - min1 + max2 - min2)"]