["n = int(input())\nh = []\nfor i in range(n):\n    k = int(input())\n    a = list(map(int, input().split()))\n    j = 1\n    l = 0\n    l2 = 0\n    ll = 0\n    ll2 = 0\n    for i in range(k):\n        if a[i] >= j:\n            l = l + 1\n        else:\n            j = a[i]\n            if l % 2 == 0:\n                ll = ll + (l + 1) * (l // 2)\n            else:\n                ll = ll + ((l + 1) * (l // 2) + l // 2 + 1)\n            if l2 % 2 == 0:\n                ll = ll - (l2 + 1) * (l2 // 2)\n            else:\n                ll = ll - ((l2 + 1) * (l2 // 2) + l2 // 2 + 1)\n            l2 = a[i] - 1\n            l = a[i]\n        j = j + 1\n    if l % 2 == 0:\n        ll = ll + (l + 1) * (l // 2)\n    else:\n        ll = ll + ((l + 1) * (l // 2) + l // 2 + 1)\n    if l2 % 2 == 0:\n        ll = ll - (l2 + 1) * (l2 // 2)\n    else:\n        ll = ll - ((l2 + 1) * (l2 // 2) + l2 // 2 + 1)\n    h.append(ll)\nfor t in h:\n    print(t)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 1\n    s = 0\n    for z in a:\n        if z >= i:\n            s += i\n            i += 1\n        else:\n            s += z\n            i = z + 1\n    print(s)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = 0\n    s = 0\n    for r in range(n):\n        if a[r] < r - l + 1:\n            l = r - a[r] + 1\n        s += r - l + 1\n    print(s)", "def sum(n):\n    return (n + 1) * n // 2\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (ans, now, i) = (0, 0, 0)\n    for i in range(n):\n        now += 1\n        if a[i] < now:\n            ans += sum(now - 1) - sum(a[i] - 1)\n            now = a[i]\n    ans += sum(now)\n    print(ans)", "import math\nimport collections\nimport bisect\nimport heapq\nfrom collections import deque\nfrom math import sqrt, ceil, floor\n\ndef inp_arr():\n    return list(map(int, input().strip().split(' ')))\n\ndef inp_int():\n    return int(input())\n\ndef inp_str():\n    return input()\n\ndef solve():\n    (n,) = inp_arr()\n    a = inp_arr()\n    ans = 0\n    need = 1\n    cnt = 0\n    diff = 0\n    for x in a:\n        if x >= need:\n            ans += need\n            need += 1\n        else:\n            diff = need - x\n            need = need - diff\n            ans += need\n            need += 1\n    print(ans)\ntt = inp_int()\nfor t in range(tt):\n    solve()", "t = int(input(''))\nfor i in range(t):\n    n = int(input(''))\n    l = list(map(int, input('').split()))\n    c = 0\n    a = 1\n    for i in range(n):\n        if l[i] >= a:\n            c += a\n            a += 1\n        else:\n            c += l[i]\n            a = l[i] + 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = n\n    g = 0\n    curr = 1\n    for i in range(n):\n        if arr[i] >= curr:\n            curr += 1\n            ans += g\n            g += 1\n        else:\n            curr = arr[i] + 1\n            g = arr[i]\n            ans += g - 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr1 = list(map(int, input().split()))\n    r = []\n    result = 0\n    start = 0\n    sub = 0\n    for i in range(n):\n        if i - sub >= arr1[i]:\n            sub = -arr1[i] + i + 1\n            result += int((start + 1) * start / 2)\n            start = arr1[i]\n            result -= int(start * (start - 1) / 2)\n        else:\n            start += 1\n    else:\n        result += int((start + 1) * start / 2)\n    print(result)", "def good_subarray(n, a):\n    i = 0\n    j = 0\n    k = 1\n    result = 0\n    while j < n:\n        while i < n and k > a[j]:\n            i += 1\n            k -= 1\n        result += j - i + 1\n        j += 1\n        k += 1\n    return result\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(good_subarray(n, a))", "from math import comb\n\ndef main():\n    n_tests = int(input())\n    for _ in range(n_tests):\n        n = int(input())\n        data = list(map(int, input().split(' ')))\n        (result, x) = (0, 0)\n        for i in range(1, n + 1):\n            x += 1\n            x = min(x, i, data[i - 1])\n            result += x\n        print(result)\nmain()", "from sys import setrecursionlimit, stdin\nsetrecursionlimit(1 << 20)\nreadline = stdin.readline\nMOD = 998244353\n\ndef I():\n    return int(readline())\n\ndef ST():\n    return readline()[:-1]\n\ndef LI():\n    return list(map(int, readline().split()))\n\ndef LII():\n    return list(map(lambda x: int(x) - 1, readline().split()))\n\ndef LF(x, func):\n    return [func() for _ in [0] * x]\n\ndef SPI():\n    return map(int, readline().split())\n\ndef SPII():\n    return map(lambda x: int(x) - 1, readline().split())\n\ndef FIE(x):\n    return [readline()[:-1] for _ in [0] * x]\n\ndef solve():\n    N = I()\n    A = LI()\n    L = 0\n    R = 0\n    ans = 0\n    while True:\n        length = R - L\n        if R == N:\n            break\n        if L == R:\n            R += 1\n            ans += length + 1\n        elif A[R] >= length + 1:\n            R += 1\n            ans += length + 1\n        else:\n            L += 1\n    print(ans)\nt = I()\nfor _ in range(t):\n    solve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    b = [int(x) for x in input().split()]\n    tot = 0\n    starts = 0\n    j = 1\n    for i in range(n):\n        tot += 1\n        if b[i] >= j:\n            tot += starts\n            starts += 1\n            j += 1\n        else:\n            starts = b[i]\n            j = b[i] + 1\n            tot += starts - 1\n    print(tot)", "def cal(n, arr):\n    ans = 0\n    i = j = 0\n    tag = -1\n    for i in range(n):\n        while j < n and arr[j] + tag - j >= 0:\n            j += 1\n        if j < n:\n            ans += j - i\n            tag += 1\n        else:\n            ans += (j - i) * (j - i + 1) // 2\n            break\n    return ans\nfor jj in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    print(cal(n, arr))", "def fac(n):\n    if n == 1:\n        return 1\n    p = 1\n    for i in range(2, n + 1):\n        p *= i\n    return p\n\ndef cn2(n):\n    return n * (n - 1) // 2 + n\n\ndef main():\n    i = int(input())\n    for _ in range(i):\n        n = int(input().strip('\\r\\n'))\n        a = [int(x) for x in input().strip('\\r\\n').split()]\n        lens = []\n        last_good = 0\n        len_good = 0\n        res = 0\n        j = 0\n        start = 0\n        while j < n:\n            j = start\n            i = 0\n            while j < n and a[j] > i:\n                i += 1\n                j += 1\n            res += cn2(i)\n            if j < n:\n                start = j - a[j] + 1\n                if a[j] > 1:\n                    res -= cn2(a[j] - 1)\n        print(res)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    i = 0\n    j = 0\n    z = 0\n    while j < n:\n        if i != 0 or j != 0:\n            i = j - l[j] + 1\n            z -= (j - i) * (j - i + 1) / 2\n        while j < n and l[j] > j - i:\n            j += 1\n        z += (j - i) * (j - i + 1) / 2\n    print(int(z))", "def gcd(y, z):\n    while z:\n        (y, z) = (z, y % z)\n    return abs(y)\n\ndef solve():\n    n = int(input())\n    a = input().split()\n    a = [int(x) for x in a]\n    i = 0\n    j = 0\n    res = 0\n    while i < n:\n        while j < n and a[j] >= j - i + 1:\n            j += 1\n        res += j - i\n        i += 1\n    print(res)\nt = int(input())\nfor k in range(t):\n    solve()", "class T:\n\n    def solve(self):\n        n = int(input())\n        a = list(map(int, input().split()))\n        (i, j, ws, ans) = (0, 0, 1, 0)\n        for i in range(n):\n            while j < n and ws > a[i]:\n                j += 1\n                ws -= 1\n            ans += i - j + 1\n            ws += 1\n        return ans\nfor t in range(int(input())):\n    obj = T()\n    print(obj.solve())", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    ans = 1\n    dp = [0 for i in range(n)]\n    dp[0] = 1\n    for i in range(n):\n        if l[i] >= dp[i - 1] + 1:\n            dp[i] = dp[i - 1] + 1\n        else:\n            dp[i] = l[i]\n    ans = sum(dp)\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split(' ')))\n    ans = 0\n    not_take = 0\n    for (i, v) in enumerate(lst):\n        if i + 1 > v:\n            not_take = max(not_take, i + 1 - v)\n        ans += i + 1 - not_take\n    print(ans)", "from math import gcd\n\ndef solve():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    r = 0\n    ans = 0\n    for l in range(n):\n        while r < l or (r < n and a[r] >= r - l + 1):\n            r += 1\n        ans += r - l\n    print(ans)\nt = int(input())\nfor _ in range(t):\n    solve()", "import sys\nfrom collections import *\nsys.setrecursionlimit(10 ** 5)\nitr = (line for line in sys.stdin.read().strip().split('\\n'))\nINP = lambda : next(itr)\n\ndef ni():\n    return int(INP())\n\ndef nl():\n    return [int(_) for _ in INP().split()]\n\ndef solve(n, a):\n    good = False\n    maxlens = [] * n\n    possible = 0\n    i = 0\n    streak = 1\n    j = 1\n    while i < n:\n        while j < n and a[j] >= j - i + 1:\n            streak += 1\n            j += 1\n        possible += streak\n        i += 1\n        streak -= 1\n    print(int(possible))\nt = ni()\nfor case in range(t):\n    n = ni()\n    a = nl()\n    solve(n, a)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    res = [0]\n    for i in range(1, n):\n        if a[i] > 1:\n            capacity = a[i] - 2\n            m = min(res[-1], capacity)\n            res.append(m + 1)\n        else:\n            res.append(0)\n    print(sum(res) + n)", "def good_array(n, a):\n    (i, j, k) = (0, 0, 1)\n    result = 0\n    while j < n:\n        while i < n and k > a[j]:\n            i += 1\n            k -= 1\n        result += j - i + 1\n        j += 1\n        k += 1\n    return result\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(good_array(n, a))", "def foo(n, a):\n    ans = [0] * n\n    ans[0] = 1\n    for i in range(1, n):\n        ans[i] = min(ans[i - 1] + 1, i + 1, a[i])\n    return sum(ans)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    print(foo(n, a))", "import sys\nfrom math import sqrt, gcd, factorial, ceil, floor, pi, isqrt\nfrom collections import deque, Counter, OrderedDict\nfrom heapq import heapify, heappush, heappop\ninput = lambda : sys.stdin.readline()\nI = lambda : int(input())\nS = lambda : input().strip()\nM = lambda : map(int, input().strip().split())\nL = lambda : list(map(int, input().strip().split()))\nmod = 10 ** 9 + 7\nfor _ in range(I()):\n    n = I()\n    a = L()\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        dp[i] = min(dp[i - 1] + 1, a[i - 1])\n    print(sum(dp))", "t = int(input())\nfor _ in range(t):\n    q = int(input())\n    a = list(map(int, input().split()))\n    r = 0\n    y = [0]\n    for i in range(q):\n        y.append(min(i + 1, a[i], y[i] + 1))\n    print(sum(y))", "def solve():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    count = 0\n    i = 0\n    for j in range(n):\n        difference = max(0, j - i + 1 - a[j])\n        if i + difference > j:\n            i = j + 1\n            continue\n        i += difference\n        count += j - i + 1\n    return count\nt = int(input())\nfor _ in range(t):\n    print(solve())", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    t = [1 for _ in range(n)]\n    for i in range(1, n):\n        t[i] = min(l[i], t[i - 1] + 1)\n    print(sum(t))", "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    ans = 0\n    stk = list()\n    for ele in lis:\n        while len(stk) >= ele:\n            stk.pop()\n        stk.append(ele)\n        ans += len(stk)\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = 0\n    s = 0\n    for r in range(n):\n        while a[r] < r - l + 1:\n            l += 1\n        s += r - l + 1\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (c, x) = (0, 0)\n    for i in range(n):\n        x = max(x, i + 1 - l[i])\n        c += i - x + 1\n    print(c)", "def func(a, n):\n    res = 1\n    pairs = [0 for _ in range(n)]\n    pairs[0] = 1\n    for i in range(1, n):\n        pairs[i] = min(a[i], i + 1, pairs[i - 1] + 1)\n        res += pairs[i]\n    return res\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = [int(a) for a in input().split(' ')]\n    print(func(a, n))", "n = int(input())\nfor _ in range(n):\n    m = input()\n    a = [int(x) for x in input().split(' ')]\n    i = 0\n    ans = 0\n    for j in range(len(a)):\n        while True:\n            if a[j] >= j - i + 1:\n                break\n            else:\n                i += 1\n        ans += j - i + 1\n    print(ans)", "import os\nimport math\nimport collections\nimport bisect\nimport functools\nimport itertools\nimport heapq\n\ndef solve(a, n):\n    res = 0\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        dp[i] = min(dp[i - 1] + 1, a[i - 1])\n        res += dp[i]\n    return res\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    print(solve(a, n))", "import bisect\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    dp = [0 for i in range(n)]\n    dp[0] = 1\n    for i in range(1, n):\n        dp[i] = min(dp[i - 1] + 1, l[i])\n    print(sum(dp))", "def inp():\n    return int(input())\n\ndef strng():\n    return input().strip()\n\ndef jn(x, l):\n    return x.join(map(str, l))\n\ndef strl():\n    return list(input().strip())\n\ndef mul():\n    return map(int, input().strip().split())\n\ndef mulf():\n    return map(float, input().strip().split())\n\ndef seq():\n    return list(map(int, input().strip().split()))\n\ndef ceil(x):\n    return int(x) if x == int(x) else int(x) + 1\n\ndef ceildiv(x, d):\n    return x // d if x % d == 0 else x // d + 1\nfor i in range(inp()):\n    n = inp()\n    lst = seq()\n    cnt = 0\n    last = 0\n    for i in range(n):\n        dx = i - lst[i] + 1\n        last = max(last, dx)\n        cnt += i - last + 1\n    print(cnt)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    i = 0\n    j = 0\n    k = 1\n    ct = 0\n    while j < n:\n        while i < n and k > l[j]:\n            i += 1\n            k -= 1\n        ct += j - i + 1\n        j += 1\n        k += 1\n    print(ct)", "def N():\n    return int(input())\n\ndef A():\n    return [int(x) for x in input().split()]\n\ndef S():\n    return input()\nfor _ in range(N()):\n    n = N()\n    if '5gerg5g' == 282752:\n        print('Tanmay')\n    a = A()\n    c = b = k = 0\n    for i in range(n):\n        while b < n and a[b] > k:\n            b += 1\n            k += 1\n        c += b - i\n        k -= 1\n    print(c)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    ans = 0\n    i = 0\n    j = 0\n    k = 1\n    while j < n:\n        while i < n and k > lst[j]:\n            i += 1\n            k -= 1\n        ans += j - i + 1\n        j += 1\n        k += 1\n    print(ans)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    i = 0\n    j = 0\n    k = 1\n    ans = 0\n    while j < n:\n        while i < n and k > arr[j]:\n            i += 1\n            k -= 1\n        ans += j - i + 1\n        j += 1\n        k += 1\n    print(ans)\n    t = t - 1", "x = int(input())\nfor i in range(0, x):\n    c = input()\n    a = list(map(int, input().split()))\n    dp = [1 for k in range(0, len(a))]\n    s = 1\n    for k in range(1, len(a)):\n        if a[k] <= a[k - 1]:\n            dp[k] = min(dp[k - 1] + 1, a[k])\n        else:\n            dp[k] = dp[k - 1] + 1\n        s = s + dp[k]\n    print(s)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (i, j) = (0, 0)\n    k = 1\n    c = 0\n    while j < n:\n        while i < n and k > a[j]:\n            i += 1\n            k -= 1\n        c += j - i + 1\n        j += 1\n        k += 1\n    print(c)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 0\n    j = 0\n    k = 1\n    ans = 0\n    while j < n:\n        while i < n and k > a[j]:\n            i += 1\n            k -= 1\n        ans += j - i + 1\n        j += 1\n        k += 1\n    print(ans)", "test = int(input())\nfor t in range(test):\n    n = int(input())\n    A = list(map(int, input().split()))\n    count = 0\n    i = 0\n    j = 0\n    k = 1\n    while i < n:\n        while j < n and k > A[i]:\n            j += 1\n            k -= 1\n        count += i - j + 1\n        i += 1\n        k += 1\n    print(count)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    (i, j, k) = (0, 0, 1)\n    count = 0\n    while i < n:\n        while j < n and k > x[i]:\n            j += 1\n            k -= 1\n        count += i - j + 1\n        i += 1\n        k += 1\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    ans = [1] * n\n    i = 0\n    j = 0\n    k = 1\n    while i < n:\n        if j < n and l[j] >= k:\n            j += 1\n            k += 1\n        else:\n            ans[i] = j - i\n            i += 1\n            k -= 1\n    print(sum(ans))", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    result = 0\n    j = 0\n    k = 1\n    for i in range(n):\n        while j < n and k > a[i]:\n            j = j + 1\n            k = k - 1\n        result += i - j + 1\n        k = k + 1\n    print(result)", "for s in [*open(0)][2::2]:\n    i = j = r = 0\n    for x in s.split():\n        while int(x) <= j - i:\n            i += 1\n        r += j - i + 1\n        j += 1\n    print(r)", "for s in [*open(0)][2::2]:\n    i = j = r = 0\n    for x in s.split():\n        j += 1\n        i = max(i, j - int(x))\n        r += j - i\n    print(r)", "for s in [*open(0)][2::2]:\n    i = j = r = 0\n    for x in s.split():\n        j += 1\n        i = max(i, j - int(x))\n        r += j - i\n    print(r)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    count = 0\n    (i, j, k) = (0, 0, 1)\n    while i < n:\n        while j < n and k > a[i]:\n            j += 1\n            k -= 1\n        count += i - j + 1\n        i += 1\n        k += 1\n    print(count)", "import sys\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    i = 0\n    j = 0\n    k = 1\n    ans = 0\n    while j < n:\n        while i < n and k > arr[j]:\n            i += 1\n            k -= 1\n        ans += j - i + 1\n        j += 1\n        k += 1\n    print(ans)", "import math\nfor z in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    (res, i, j) = (0, 0, 0)\n    k = 1\n    while j < n:\n        while i < n and k > a[j]:\n            i += 1\n            k -= 1\n        res += j - i + 1\n        j += 1\n        k += 1\n    print(res)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 0\n    j = 0\n    k = 1\n    res = 0\n    while j < n:\n        while i < n and k > a[j]:\n            i += 1\n            k -= 1\n        res += j - i + 1\n        j += 1\n        k += 1\n    print(res)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (i, j) = (0, 0)\n    k = 1\n    ans = 0\n    while j < n:\n        while i < n:\n            if k > a[j]:\n                i += 1\n                k -= 1\n            else:\n                break\n        ans += j - i + 1\n        j += 1\n        k += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (i, j, k) = (0, 0, 1)\n    ans = 0\n    while j < n:\n        while i < n and k > a[j]:\n            i += 1\n            k -= 1\n        ans += j - i + 1\n        j += 1\n        k += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    prev = 0\n    c = 1\n    for i in range(1, n):\n        c += min(prev + 1, arr[i] - 1) + 1\n        prev = min(prev + 1, arr[i] - 1)\n    print(c)", "for s in [*open(0)][2::2]:\n    i = j = r = 0\n    for x in s.split():\n        while int(x) <= j - i:\n            i += 1\n        j += 1\n        r += j - i\n    print(r)", "for s in [*open(0)][2::2]:\n    i = j = r = 0\n    for x in s.split():\n        j += 1\n        i = max(i, j - int(x))\n        r += j - i\n    print(r)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = input().split()\n    arr = [int(i) for i in arr]\n    (_sum, eidx, minv) = (0, 0, 0)\n    for (i, num) in enumerate(arr):\n        while eidx < n:\n            if arr[eidx] - eidx - 1 + i < 0:\n                break\n            eidx += 1\n        _sum += eidx - i\n    print(_sum)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (i, j, k) = (0, 0, 1)\n    ans = 0\n    while j < n:\n        while i < n and k > l[j]:\n            i += 1\n            k -= 1\n        ans += j - i + 1\n        j += 1\n        k += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, li) = (int(input()), [*map(int, input().split())])\n    x = z = 0\n    (idx, ctr) = (1, 0)\n    while x < n:\n        while idx > li[x] and z < n:\n            z += 1\n            idx -= 1\n        ctr += x - z + 1\n        x += 1\n        idx += 1\n    print(ctr)", "for s in [*open(0)][2::2]:\n    i = j = r = 0\n    for x in s.split():\n        j += 1\n        i = max(i, j - int(x))\n        r += j - i\n    print(r)", "for s in [*open(0)][2::2]:\n    i = j = r = 0\n    for x in s.split():\n        j += 1\n        i = max(i, j - int(x))\n        r += j - i\n    print(r)", "for kfdvb in [*open(0)][2::2]:\n    i = j = r = 0\n    for c in kfdvb.split():\n        j += 1\n        i = max(i, j - int(c))\n        r += j - i\n    print(r)", "for _ in range(int(input())):\n    n = int(input())\n    qu = [int(i) for i in input().split()]\n    l = 0\n    r = 0\n    res = 0\n    while l < n:\n        while r < n and qu[r] - (r - l + 1) >= 0:\n            r += 1\n        res += r - l\n        l += 1\n    print(res)", "for stg in [*open(0)][2::2]:\n    l = m = n = 0\n    for z in stg.split():\n        m += 1\n        l = max(l, m - int(z))\n        n += m - l\n    print(n)", "for s in [*open(0)][2::2]:\n    i = j = r = 0\n    for x in s.split():\n        j += 1\n        i = max(i, j - int(x))\n        r += j - i\n    print(r)", "import math\ntestcases = int(input())\nwhile testcases > 0:\n    testcases -= 1\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    termination = []\n    for i in range(n):\n        if a[i] >= i + 1:\n            continue\n        while len(termination) < i + 1 - a[i]:\n            length = len(termination)\n            value = i - length\n            termination.append(int(value))\n    if len(termination) < n:\n        while len(termination) < n:\n            length = len(termination)\n            value = n - length\n            termination.append(int(value))\n    print(sum(termination))", "import math as mm\nfor _ in range(int(input())):\n    size = int(input())\n    l = list(map(int, input().split()))\n    p = 0\n    q = 0\n    r = 1\n    s = 0\n    t = 0\n    while q < size:\n        t += l[q]\n        while r > l[q] and p < size and (q < size):\n            p += 1\n            r -= 1\n        s += q - p + 1\n        q += 1\n        r += 1\n    print(s)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    res = 0\n    j = 0\n    k = 1\n    for i in range(N):\n        while j < N and k > A[i]:\n            j += 1\n            k -= 1\n        res += i - j + 1\n        i += 1\n        k += 1\n    print(res)", "t = eval(input())\nfor i in range(t):\n    n = eval(input())\n    a = list(map(int, input().split()))\n    dp = [0] * n\n    dp[0] = 1\n    for i in range(1, n):\n        dp[i] = min(i + 1, a[i], dp[i - 1] + 1)\n    print(sum(dp))", "for p in [*open(0)][2::2]:\n    i = 0\n    j = 0\n    r = 0\n    for x in p.split():\n        j += 1\n        i = max(i, j - int(x))\n        r += j - i\n    print(r)", "for s in [*open(0)][2::2]:\n    i = j = r = 0\n    for x in s.split():\n        j += 1\n        i = max(i, j - int(x))\n        r += j - i\n    print(r)", "for s in [*open(0)][2::2]:\n    a = s.split()\n    i = j = r = 0\n    while j < len(a):\n        if int(a[j]) > j - i:\n            r += j - i + 1\n            j += 1\n        else:\n            i += 1\n    print(r)", "import sys\ninput = sys.stdin.readline\nt = []\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    (i, res) = (1, 0)\n    before = 0\n    for k in a:\n        if k >= i:\n            i += 1\n        else:\n            res += i * (i - 1) // 2 - before * (before + 1) // 2\n            i = k + 1\n            before = k - 1\n    res += i * (i - 1) // 2 - before * (before + 1) // 2\n    t.append(res)\nfor x in t:\n    print(x)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    beg = 0\n    for j in range(n):\n        if a[j] < j - beg + 1:\n            s += (j - beg) * (j - beg + 1) // 2\n            s -= (a[j] - 1) * a[j] // 2\n            beg = j - a[j] + 1\n            continue\n    s += (n - beg) * (n - beg + 1) // 2\n    print(s)", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    a = [0]\n    s = input().split()\n    for i in range(n):\n        a.append(int(s[i]))\n    l = 1\n    r = 1\n    res = 0\n    while True:\n        if r < l:\n            r = l\n        if l == n:\n            break\n        if r != n:\n            if a[r + 1] >= r - l + 2:\n                r += 1\n                continue\n        res += r - l + 1\n        l += 1\n    print(res + 1)", "import sys\ninput = sys.stdin.readline\nfor j in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    (ans, val) = (0, 1)\n    for i in range(n):\n        if arr[i] >= val:\n            ans += val\n            val += 1\n        else:\n            ans += arr[i]\n            val = arr[i] + 1\n    print(ans)", "t = []\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    if n == 1:\n        t += [1]\n        continue\n    (i, res) = (1, 0)\n    before = 0\n    for k in a:\n        if k >= i:\n            i += 1\n        else:\n            res += i * (i - 1) // 2 - before * (before + 1) // 2\n            i = k + 1\n            before = k - 1\n    res += i * (i - 1) // 2 - before * (before + 1) // 2\n    t.append(res)\nfor x in t:\n    print(x)", "output = ''\nfor caseno in range(int(input())):\n    answer = 0\n    n = int(input())\n    l = list(map(int, input().split()))\n    i = 0\n    prev = 0\n    for i in l:\n        curr = min(prev + 1, i)\n        prev = curr\n        answer += curr\n    output += str(answer) + '\\n'\nprint(output)", "from sys import stdin\nfor i in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    nums = list(map(int, stdin.readline().strip().split()))\n    ans = n\n    k = 0\n    for i in range(n):\n        k = max(i - (nums[i] - 1), k)\n        ans += min(i - k, nums[i] - 1)\n    print(ans)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    i = 0\n    j = 0\n    while i < n and a[i] >= 1:\n        count += j - i\n        while j < n and a[j] >= j - i + 1:\n            count += 1\n            j += 1\n        i += 1\n    print(count)", "from math import comb\nfor _ in range(int(input())):\n    input()\n    a = list(map(int, input().split()))\n    currentSize = 0\n    numbComb = 0\n    l = [0 for _ in range(len(a) + 1)]\n    for i in range(len(a)):\n        for j in range(l[i], len(a)):\n            if a[j] <= j - i:\n                l[i + 1] = j - 1\n                break\n        else:\n            l[i + 1] = len(a) - 1\n    l.pop(0)\n    for i in range(len(a)):\n        numbComb += l[i] - i + 1\n    print(numbComb)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 1\n    ans = 0\n    i = 0\n    j = 0\n    while i < n:\n        if j == n:\n            ans += count - 1\n            count -= 1\n            i += 1\n        else:\n            while j < n and a[j] >= count:\n                count += 1\n                j += 1\n            ans += count - 1\n            count -= 1\n            i += 1\n    print(ans)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().strip().split()))\n    l = [i - 1 for i in l]\n    (k, co, ol) = (0, 0, 0)\n    ans = 0\n    for i in range(n):\n        if l[i] == 0:\n            if co > 0:\n                ans += (co - ol) * (co - ol + 1) // 2 + ol * (co - ol)\n            k = 1\n            ol = 0\n            co = 1\n        elif l[i] >= k:\n            co += 1\n            k += 1\n        else:\n            ans += (co - ol) * (co - ol + 1) // 2 + ol * (co - ol)\n            ol = l[i]\n            k = ol + 1\n            co = k\n    ans += (co - ol) * (co - ol + 1) // 2 + ol * (co - ol)\n    print(ans)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().strip().split()))\n    l = [i - 1 for i in l]\n    (k, co, ol) = (0, 0, 0)\n    ans = 0\n    for i in range(n):\n        if l[i] == 0:\n            if co > 0:\n                ans += (co - ol) * (co - ol + 1) // 2 + ol * (co - ol)\n            k = 1\n            ol = 0\n            co = 1\n        elif l[i] >= k:\n            co += 1\n            k += 1\n        else:\n            ans += (co - ol) * (co - ol + 1) // 2 + ol * (co - ol)\n            ol = l[i]\n            k = ol + 1\n            co = k\n    ans += (co - ol) * (co - ol + 1) // 2 + ol * (co - ol)\n    print(ans)", "t = []\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    (i, res) = (1, 0)\n    before = 0\n    for k in a:\n        if k >= i:\n            i += 1\n        else:\n            res += i * (i - 1) // 2 - before * (before + 1) // 2\n            i = k + 1\n            before = k - 1\n    res += i * (i - 1) // 2 - before * (before + 1) // 2\n    t.append(res)\nfor x in t:\n    print(x)", "test = int(input())\nfor _ in range(test):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    stack = []\n    cnt = 0\n    for i in range(len(arr)):\n        while len(stack) != 0:\n            if i - stack[0] + 1 > arr[i]:\n                del stack[0]\n            else:\n                cnt += len(stack)\n                break\n        stack.append(i)\n        cnt += 1\n    print(cnt)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    ai = list(map(int, input().split()))\n    ans = [0 for i in range(n)]\n    (l, r) = (0, 0)\n    while l < n:\n        while r < n:\n            if ai[r] < r + 1 - l:\n                break\n            r += 1\n            ans[l] += 1\n        l += 1\n    for i in range(1, n):\n        ans[i] += ans[i - 1] - 1\n    print(sum(ans))", "def solve(n, a):\n    if n == 1:\n        return 1\n    num_pairs = 0\n    (left_index, right_index) = (0, 0)\n    while right_index < n:\n        while left_index < right_index and a[right_index] < right_index - left_index + 1:\n            left_index += 1\n        num_pairs += right_index - left_index + 1\n        right_index += 1\n    return num_pairs\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(component) for component in input().split(' ')]\n    print(solve(n, a))", "def solve():\n    n = int(input())\n    a = input().split()\n    ans = 0\n    last = 0\n    for i in range(n):\n        if last + 1 > int(a[i]):\n            ans += int(a[i])\n            last = int(a[i])\n        else:\n            ans += last + 1\n            last += 1\n    print(ans)\nt = int(input())\nfor i in range(t):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = 0\n    r = 0\n    if n == 1:\n        print(1)\n    else:\n        for i in range(n):\n            c1 = 0\n            r -= l * (l + 1) // 2\n            for j in range(i + l, n):\n                if a[j] > l:\n                    l += 1\n                else:\n                    c1 = 1\n                    break\n            r += l * (l + 1) // 2\n            l -= 1\n            if c1 == 0:\n                break\n        print(r)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(ii) for ii in input().split()]\n    if n == 1:\n        print(1)\n        continue\n    last = 0\n    ans = 0\n    for i in range(n):\n        if last < a[i]:\n            last += 1\n        else:\n            last = a[i]\n        ans += last\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    if n == 1:\n        print(1)\n        continue\n    (i, res) = (1, 0)\n    before = 0\n    for k in a:\n        if k >= i:\n            i += 1\n        else:\n            res += i * (i - 1) // 2 - before * (before + 1) // 2\n            i = k + 1\n            before = k - 1\n    res += i * (i - 1) // 2 - before * (before + 1) // 2\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    if n == 1:\n        print(1)\n        continue\n    (i, res) = (1, 0)\n    for k in a:\n        if k >= i:\n            res += i\n            i += 1\n        else:\n            res += k\n            i = k + 1\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    if n == 1:\n        print(1)\n        continue\n    (i, res) = (1, 0)\n    before = 0\n    for k in a:\n        if k >= i:\n            i += 1\n        else:\n            res += i * (i - 1) // 2 - before * (before + 1) // 2\n            i = k + 1\n            before = k - 1\n    res += i * (i - 1) // 2 - before * (before + 1) // 2\n    print(res + 1 - 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    k = 1\n    answer = 1\n    for j in range(1, n):\n        if a[j] >= k + 1:\n            answer += k + 1\n            k += 1\n        else:\n            answer += a[j]\n            k = a[j]\n    print(answer)", "def solve(a):\n    (i, j) = (0, 0)\n    ans = 0\n    while j < len(a):\n        while j < len(a) and a[j] > j - i:\n            ans += j - i + 1\n            j += 1\n        i += 1\n    return ans\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        a = [int(e) for e in input().split()]\n        print(solve(a))\nmain()"]