["for s in [*open(0)][1:]:\n    (*a, m) = map(int, s.split())\n    print('NYOE S'[2 * max(a) - m - 2 < sum(a) > m + 2::2])", "import sys\ninput = sys.stdin.readline\nfor i in range(int(input())):\n    (a, b, c, m) = map(int, input().split())\n    if a + b + c - 3 < m:\n        print('NO')\n        continue\n    (a, b, c) = sorted([a, b, c])\n    if c - a - b - 1 > m:\n        print('NO')\n        continue\n    print('YES')", "import sys\nt_str = sys.stdin.readline().rstrip()\nif t_str != '':\n    t = int(t_str)\n    while t > 0:\n        (a, b, c, m) = [int(num) for num in sys.stdin.readline().rstrip().split(' ')]\n        if a - 1 > b + c + m or b - 1 > a + c + m or c - 1 > b + a + m:\n            print('NO')\n        elif a + b + c - 3 >= m:\n            print('YES')\n        else:\n            print('NO')\n        t -= 1", "from sys import stdin\ninput = stdin.readline\nfor i in range(int(input())):\n    (a, b, c, m) = map(int, input().split())\n    mx = a - 1 + b - 1 + c - 1\n    x = sorted([a, b, c])\n    mn = x[2] - x[1] - x[0] - 1\n    if m >= mn and m <= mx:\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = iter(sys.stdin.read().splitlines()).__next__\n\ndef solve(a, b, c, m):\n    (a, b, c) = sorted([a, b, c])\n    max_matches = c - 1 + b - 1 + a - 1\n    min_matches = c - 1 - a - b\n    return min_matches <= m <= max_matches\nTC = int(input())\nfor tc in range(TC):\n    (a, b, c, m) = map(int, input().split())\n    res = solve(a, b, c, m)\n    print('YES' if res else 'NO')", "import sys\ninput = sys.stdin.readline\n\ndef prb():\n    l = list(map(int, input().split()))\n    m = l[3]\n    l.remove(l[3])\n    l.sort()\n    a = l[0]\n    b = l[1]\n    c = l[2]\n    if a + b + c - 3 < m or c - (m + 1) > b + a:\n        return 'NO'\n    return 'YES'\nfor _ in range(int(input())):\n    print(prb())", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (a, b, c, m) = map(int, input().split())\n    if m > a - 1 + b - 1 + c - 1:\n        print('NO')\n        return\n    if a > b:\n        (a, b) = (b, a)\n    if a > c:\n        (a, c) = (c, a)\n    if b > c:\n        (b, c) = (c, b)\n    e = c - 1\n    w = min(e, b)\n    e -= w\n    b -= w\n    d = 2 * w\n    if b > 0:\n        d += b\n        e += b - 1\n    w = min(e, a)\n    e -= w\n    a -= w\n    if a > 0:\n        w = min(d, a)\n        a -= w\n        d -= w\n        e += max(a - 1, 0)\n    if m < e:\n        print('NO')\n    else:\n        print('YES')\nfor i in range(int(input())):\n    solve()", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (a, b, c, m) = map(int, input().split())\n    if m > a - 1 + b - 1 + c - 1:\n        print('NO')\n        return\n    if a > b:\n        (a, b) = (b, a)\n    if a > c:\n        (a, c) = (c, a)\n    if b > c:\n        (b, c) = (c, b)\n    if a + b < c + 1:\n        e = c - a - b - 1\n    else:\n        e = 0\n    if m < e:\n        print('NO')\n    else:\n        print('YES')\nfor i in range(int(input())):\n    solve()", "for s in [*open(0)][1:]:\n    (*a, m) = map(int, s.split())\n    print('NYOE S'[2 * max(a) - m - 2 < sum(a) > m + 2::2])", "for s in [*open(0)][1:]:\n    (*a, m) = map(int, s.split())\n    print('NYOE S'[2 * max(a) - m - 2 < sum(a) > m + 2::2])", "for s in [*open(0)][1:]:\n    (*a, m) = map(int, s.split())\n    print('NYOE S'[2 * max(a) - m - 2 < sum(a) > m + 2::2])", "import sys\ninput = sys.stdin.readline\nfrom math import log2, ceil\nfor _ in range(int(input())):\n    (a, b, c, m) = map(int, input().split())\n    (a, b, c) = (max(a, b, c), a + b + c - max(a, b, c) - min(a, b, c), min(a, b, c))\n    if m > a + b + c - 3 or a > b + c + m + 1:\n        print('NO')\n    else:\n        print('YES')", "n = int(input())\ncases = []\nfor i in range(n):\n    cases.append([int(i) for i in input().split()])\nfor i in range(len(cases)):\n    (a, b, c, m) = (cases[i][0], cases[i][1], cases[i][2], cases[i][3])\n    (a, b, c) = sorted([a, b, c])\n    if c - 1 - (a + b) <= m <= a - 1 + (b - 1) + (c - 1):\n        print('YES')\n    else:\n        print('NO')", "def get_input():\n    t = int(input())\n    ta = []\n    for i in range(t):\n        ta.append([int(d) for d in input().split(' ')])\n    return ta\n\ndef solve(n):\n    p = n[-1]\n    n = n[:-1]\n    n = sorted(n)\n    if p <= n[0] + n[1] + n[2] - 3 and p >= n[2] - n[1] - n[0] - 1:\n        return 'YES'\n    return 'NO'\n\ndef main():\n    ta = get_input()\n    for t in ta:\n        print(solve(t))\nmain()", "for s in [*open(0)][1:]:\n    (*a, m) = map(int, s.split())\n    print('NYOE S'[2 * max(a) - m - 2 < sum(a) > m + 2::2])", "import sys\ninput = sys.stdin.readline\nfor i in range(int(input())):\n    (a, b, c, m) = map(int, input().split())\n    (a, b, c) = sorted([a, b, c])\n    Min = max(c - (a + b + 1), 0)\n    Max = sum((max(i - 1, 0) for i in (a, b, c)))\n    if Min <= m <= Max:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin\ninput = stdin.readline\nrn = lambda : int(input())\nrns = lambda : map(int, input().split())\nrl = lambda : list(map(int, input().split()))\nrs = lambda : input().strip()\nYN = lambda x: print('YES') if x else print('NO')\nmod = 10 ** 9 + 7\nfor _ in range(rn()):\n    (a, b, c, m) = rns()\n    (a, b, c) = sorted([a, b, c], reverse=True)\n    ma = a + b + c - 3\n    mi = a - b - 1\n    mi = max(0, mi - c)\n    YN(mi <= m <= ma)", "from sys import stdin\ninput = stdin.readline\nfor i in range(int(input())):\n    (a, b, c, m) = map(int, input().split())\n    mx = a - 1 + b - 1 + c - 1\n    x = sorted([a, b, c])\n    mn = max(0, x[2] - x[1] - x[0] - 1, 0)\n    if m >= mn and m <= mx:\n        print('YES')\n    else:\n        print('NO')", "for s in [*open(0)][1:]:\n    (*a, m) = map(int, s.split())\n    print('NYOE S'[2 * max(a) - m - 2 < sum(a) > m + 2::2])", "for s in [*open(0)][1:]:\n    (*a, m) = map(int, s.split())\n    print('NYOE S'[2 * max(a) - m - 2 < sum(a) > m + 2::2])", "N = []\nfor _ in range(int(input())):\n    N.append([int(x) for x in input().split(' ')])\nfor n in N:\n    (f, s, t) = sorted(n[:3])\n    m = n[-1]\n    (fmin, fmax) = [max(s - (f + 1), 0), max(0, f - 1 + s - 1)]\n    (lmin, lmax) = [max(0, t - (s + f + 1)), max(0, t - 1 + fmax)]\n    if lmin <= m <= lmax:\n        print('YES')\n    else:\n        print('NO')", "import sys\n\ndef get_ints():\n    return list(map(int, sys.stdin.readline().strip().split()))\n(t,) = get_ints()\nwhile t > 0:\n    (a, b, c, m) = get_ints()\n    if b < c:\n        (b, c) = (c, b)\n    if a < b:\n        (a, b) = (b, a)\n    if b < c:\n        (b, c) = (c, b)\n    t -= 1\n    if a - b - c - 1 <= m and m <= max(a - 1, 0) + max(b - 1, 0) + max(c - 1, 0):\n        print('YES')\n    else:\n        print('NO')", "def combinatorics_homework(a, b, c, m):\n    check_have = a - 1 + b - 1 + c - 1\n    if check_have < m:\n        return False\n    l = sorted([a, b, c])\n    if l[2] - l[1] - l[0] - 1 > m:\n        return False\n    return True\nn = int(input())\ntest_case = list()\nfor i in range(n):\n    s = input()\n    a = list(map(int, s.split()))\n    test_case.append(a)\nfor d in test_case:\n    (a, b, c, m) = (d[0], d[1], d[2], d[3])\n    if combinatorics_homework(a, b, c, m):\n        print('YES')\n    else:\n        print('NO')", "for s in [*open(0)][1:]:\n    (*a, m) = map(int, s.split())\n    print('NYOE S'[2 * max(a) - m - 2 < sum(a) > m + 2::2])", "for s in [*open(0)][1:]:\n    (*a, m) = map(int, s.split())\n    print('NYOE S'[2 * max(a) - m - 2 < sum(a) > m + 2::2])", "q = int(input())\nresult = []\nfor i in range(q):\n    str = input()\n    arr = str.split(' ')\n    arr = [int(x) for x in arr]\n    m = arr[3]\n    arr.pop()\n    arr.sort()\n    (a, b, c) = arr\n    if c - 1 - a - b <= m <= a + b + c - 3:\n        result.append('YES')\n    else:\n        result.append('NO')\nfor x in result:\n    print(x)", "from collections import deque, Counter\nfrom collections import defaultdict as dfd\nfrom bisect import bisect, bisect_left\nfrom math import sqrt, gcd, ceil, factorial, log2\nfrom heapq import heapify, heappush, heappop\nMOD = 10 ** 9 + 7\ninf = float('inf')\nans_ = []\n\ndef nin():\n    return int(input())\n\ndef ninf():\n    return int(file.readline())\n\ndef st():\n    return input().strip()\n\ndef stf():\n    return file.readline().strip()\n\ndef read():\n    return list(map(int, input().strip().split()))\n\ndef readf():\n    return list(map(int, file.readline().strip().split()))\n\ndef readfl():\n    return list(map(float, input().strip().split()))\n\ndef readffl():\n    return list(map(float, file.readline().strip().split()))\n\ndef solve():\n    for _ in range(nin()):\n        (a, b, c, m) = read()\n        (a, b, c) = sorted([a, b, c])\n        mini = c - (a + b + 1)\n        maxi = a + b + c - 3\n        if mini <= m <= maxi:\n            ans_.append('YES')\n        else:\n            ans_.append('NO')\nsolve()\nfor i in ans_:\n    print(i)", "def read_stuff():\n    n = int(input())\n    array = []\n    for i in range(n):\n        row = []\n        (one, two, three, four) = map(int, input().strip().split())\n        row.append(one)\n        row.append(two)\n        row.append(three)\n        row.append(four)\n        array.append(row)\n    for i in range(n):\n        a = array[i][0]\n        b = array[i][1]\n        c = array[i][2]\n        m = array[i][3]\n        done = False\n        if a - 1 + (b - 1) + (c - 1) < m:\n            print('NO')\n            done = True\n        elif a > b + c:\n            if abs(b + c - a) - 1 > m:\n                print('NO')\n                done = True\n        elif b > a + c:\n            if abs(a + c - b) - 1 > m:\n                print('NO')\n                done = True\n        elif c > b + a:\n            if abs(a + b - c) - 1 > m:\n                print('NO')\n                done = True\n        if not done:\n            print('YES')\nread_stuff()", "import sys\ninput = sys.stdin.readline\nt = int(input())\nwhile t > 0:\n    (a, b, c, m) = map(int, input().split())\n    (a, b, c) = sorted([a, b, c])\n    if a + b + c - 3 >= m >= c - a - b - 1:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "N = []\nfor _ in range(int(input())):\n    N.append([int(x) for x in input().split(' ')])\nfor n in N:\n    (f, s, t) = sorted(n[:3])\n    m = n[-1]\n    (lmin, lmax) = (t - s - f - 1, t + f + s - 3)\n    if lmin <= m <= lmax:\n        print('YES')\n    else:\n        print('NO')", "test = int(input())\n\ndef min_pair(x, y, z):\n    num = [x, y, z]\n    num.sort()\n    sum = num[2] - num[1] - num[0] - 1\n    return sum\nfor case in range(test):\n    (a, b, c, m) = input().split()\n    (a, b, c, m) = (int(a), int(b), int(c), int(m))\n    n = min_pair(a, b, c)\n    if a + b + c - 3 >= m >= n:\n        print('YES')\n    else:\n        print('NO')", "for s in [*open(0)][1:]:\n    (a, b, c, k) = map(int, s.split())\n    (a, b, c) = sorted([a, b, c])\n    M = sum((x - 1 for x in [a, b, c]))\n    m = max(0, c - b - a - 1)\n    print('NYOE S'[m <= k <= M::2])", "time = eval(input())\ntz = []\nfor i in range(time):\n    num = input().split()\n    num = [int(x) for x in num]\n    p = int(num[0]) - 1 + (int(num[1]) - 1) + (int(num[2]) - 1)\n    s = num[:-1]\n    s.sort()\n    m = s[-1] - s[-2] - s[-3] - 1\n    if m < 0:\n        m = 0\n    if m <= int(num[3]) <= p:\n        tz.append('YES')\n    else:\n        tz.append('NO')\nfor i in tz:\n    print(i)", "for s in [*open(0)][1:]:\n    (a, b, c, k) = map(int, s.split())\n    (a, b, c) = sorted([a, b, c])\n    M = sum((x - 1 for x in [a, b, c]))\n    m = max(0, c - b - a - 1)\n    print('NYOE S'[m <= k <= M::2])", "import sys\nimport math\nt = int(sys.stdin.readline())\nfor test in range(t):\n    (a, b, c, m) = map(int, sys.stdin.readline().split())\n    total = a + b + c\n    key = max(a, b, c)\n    most = total - 3\n    least = max(0, 2 * key - total - 1)\n    if least <= m <= most:\n        print('YES')\n    else:\n        print('NO')", "n = m = int(input())\na = []\nfor j in range(m):\n    l = input().split()\n    l = list(map(int, l))\n    m = l.pop(3)\n    l.sort()\n    mx = l[0] + l[1] + l[2] - 3\n    mn = max(0, l[2] - l[1] - l[0] - 1)\n    if (m >= mn) & (m <= mx):\n        a.append(1)\n    else:\n        a.append(0)\nfor i in range(n):\n    if a[i] == 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (a, b, c, m) = map(int, input().split())\n    (a, b, c) = sorted([a, b, c])\n    print('YES' if c - (a + b + 1) <= m <= a + b + c - 3 else 'NO')", "def max(list):\n    highest_value_position = 0\n    maximum = list[0]\n    for position in range(len(list) - 1):\n        if list[position] > maximum:\n            maximum = list[position]\n            highest_value_position = position\n    return highest_value_position\n\ndef judge(list):\n    max_position = max(list)\n    max_value = list[max_position] - 1\n    highest_adjacent = 0\n    for i in range(len(list) - 1):\n        highest_adjacent = highest_adjacent + list[i] - 1\n        if i != max_position:\n            max_value = max_value - list[i]\n    if max_value < 0:\n        lowest = 0\n    else:\n        lowest = max_value\n    if highest_adjacent >= list[3] >= lowest:\n        return True\n    else:\n        return False\nint_list_2D = []\nt = int(input())\nfor i in range(t):\n    int_list = []\n    (a, b, c, m) = input().split()\n    a = int(a)\n    b = int(b)\n    c = int(c)\n    m = int(m)\n    int_list.append(a)\n    int_list.append(b)\n    int_list.append(c)\n    int_list.append(m)\n    int_list_2D.append(int_list)\nfor list in int_list_2D:\n    y = judge(list)\n    if y:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\ninputs = []\nfor i in range(n):\n    inputs.append(str(input()).split(' '))\nfor j in inputs:\n    for t in range(len(j)):\n        j[t] = int(j[t])\nfor q in inputs:\n    (a, b, c, m) = q\n    (a, b, c, m) = (int(a), int(b), int(c), int(m))\n    count = 0\n    avalue = 0\n    bvalue = 0\n    cvalue = 0\n    if a >= b and a >= c:\n        maxt = 'a'\n    elif b >= a and b >= c:\n        maxt = 'b'\n    elif c >= a and c >= b:\n        maxt = 'c'\n    if a >= 2:\n        count += 1\n        avalue = a\n    if b >= 2:\n        count += 1\n        bvalue = b\n    if c >= 2:\n        count += 1\n        cvalue = c\n    if m <= avalue + bvalue + cvalue - count:\n        if maxt == 'a' and m >= a - (b + c) - 1 or (maxt == 'b' and m >= b - (a + c) - 1) or (maxt == 'c' and m >= c - (a + b) - 1):\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "n = int(input())\nwhile n > 0:\n    (a, b, c, m) = map(int, input().split())\n    (a, b, c) = sorted([a, b, c])\n    if c - (a + b + 1) <= m <= a + b + c - 3:\n        print('YES')\n    else:\n        print('NO')\n    n -= 1", "def mini(a, b, c):\n    if b + c < a - 1:\n        return a - b - c - 1\n    elif a + c < b - 1:\n        return b - a - c - 1\n    elif a + b < c - 1:\n        return c - a - b - 1\n    return 0\nfor _ in range(int(input())):\n    (a, b, c, m) = map(int, input().split())\n    if mini(a, b, c) <= m <= a + b + c - 3:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t > 0:\n    n = 0\n    (a, b, c, m) = map(int, input().split())\n    if a > c:\n        (a, c) = (c, a)\n    if b > c:\n        (b, c) = (c, b)\n    if a > 0:\n        n += a - 1\n    if b > 0:\n        n += b - 1\n    if c > 0:\n        n += c - 1\n    if n >= m and m >= c - (a + b + 1):\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (a, b, c, m) = map(int, input().split())\n    l = [a, b, c]\n    l.sort(reverse=True)\n    c = l[0]\n    b = l[1]\n    a = l[2]\n    if c - 1 - (a + b) <= m <= a + b + c - 3:\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nfor _ in range(T):\n    (A, B, C, M) = map(int, input().split())\n    (A, B, C) = sorted((A, B, C))\n    if M >= A + B + C - 2:\n        ans = 'NO'\n    elif A + B >= C - 1:\n        ans = 'YES'\n    elif M >= C - A - B - 1:\n        ans = 'YES'\n    else:\n        ans = 'NO'\n    print(ans)", "t = int(input())\nfor tt in range(t):\n    (a, b, c, m) = map(int, input().split())\n    if a + b + c - 3 < m:\n        print('NO')\n    elif a > b + c + m + 1 or b > a + c + m + 1 or c > a + b + m + 1:\n        print('NO')\n    else:\n        print('YES')", "for t in range(int(input())):\n    (a, b, c, m) = list(map(int, input().split()))\n    l = [a, b, c]\n    l.sort()\n    if l[0] + l[1] >= l[-1] - 1:\n        if m >= 0 and m <= a + b + c - 3:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        mmin = l[-1] - (l[0] + l[1] + 1)\n        if m >= mmin and m <= a + b + c - 3:\n            print('YES')\n        elif mmin >= a + b + c - 3 and m >= mmin:\n            print('YES')\n        else:\n            print('NO')", "import math\nimport heapq\nimport string\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right, insort\nimport sys\ninput = sys.stdin.readline\nS = lambda : input().rstrip()\nI = lambda : int(S())\nM = lambda : map(int, S().split())\nL = lambda : list(M())\nH = 1000000000 + 7\nfor _ in range(I()):\n    (a, b, c, m) = M()\n    if m > a + b + c - 3:\n        print('NO')\n        continue\n    l = [a, b, c]\n    l.sort()\n    t = l[2] - l[1] - l[0]\n    if t > 1 and m < t - 1:\n        print('NO')\n        continue\n    print('YES')", "for _ in range(int(input())):\n    (a, b, c, m) = map(int, input().split())\n    if a - 1 > b + c + m or b - 1 > a + c + m or c - 1 > a + b + m:\n        print('NO')\n    elif a + b + c - 3 >= m:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (a, b, c, m) = map(int, input().split())\n    if m > a + b + c - 3:\n        print('NO')\n    else:\n        t = [a, b, c]\n        t.sort()\n        if m >= t[2] - (t[1] + t[0] + 1):\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nwhile t:\n    (a, b, c, m) = map(int, input().split())\n    if a - 1 > b + c + m or b - 1 > a + c + m or c - 1 > a + b + m:\n        print('NO')\n    elif a + b + c - 3 >= m:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "test = int(input())\nfor _ in range(test):\n    (l, m, n, o) = map(int, input().split())\n    len = [l, m, n]\n    len.sort()\n    loweruu = len[2]\n    loweruu -= len[1]\n    loweruu -= len[0]\n    loweruu -= 1\n    higheruu = len[0] - 1\n    higheruu += len[1] - 1\n    higheruu += len[2] - 1\n    if o >= loweruu and o <= higheruu:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor case in range(t):\n    (a, b, c, m) = map(int, input().split())\n    arr = [a, b, c]\n    arr.sort()\n    maxi = a + b + c - 3\n    mini = arr[2] - arr[1] - arr[0] - 1\n    if mini <= m <= maxi:\n        print('YES')\n    else:\n        print('NO')", "def combination(a, b, c, m):\n    if a + b + c - 3 < m:\n        return False\n    if m < a - b - c - 1 or m < b - a - c - 1 or m < c - a - b - 1:\n        return False\n    return True\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        inpt = input().split(' ')\n        if combination(int(inpt[0]), int(inpt[1]), int(inpt[2]), int(inpt[3])):\n            print('YES')\n        else:\n            print('NO')\nmain()", "for i in range(int(input())):\n    (a, b, c, m) = map(int, input().split())\n    (a, b, c) = sorted([a, b, c])\n    if c - (a + b + 1) <= m <= a + b + c - 3:\n        print('YES')\n    else:\n        print('NO')", "def CombiH(A):\n    m = A[3]\n    tA = A[0:3]\n    tA.sort()\n    Max = tA[0] + tA[1] + tA[2] - 3\n    Min = tA[2] - 1 - tA[1] - tA[0]\n    if m >= Min and m <= Max:\n        print('YES')\n    else:\n        print('NO')\n    return 0\nnum_of_case = int(input())\nlist_of_case = []\nfor i in range(num_of_case):\n    I = input().split()\n    for j in range(4):\n        I[j] = int(I[j])\n    list_of_case.append(I)\nfor i in range(num_of_case):\n    CombiH(list_of_case[i])", "t = int(input())\n\ndef main():\n    for i in range(t):\n        func()\n\ndef func():\n    (a, b, c, m) = input().split()\n    a = int(a)\n    b = int(b)\n    c = int(c)\n    m = int(m)\n    l = [a, b, c]\n    l = sorted(l)\n    d = a - 1 + (b - 1) + (c - 1)\n    if d >= m:\n        k = l[2] - (l[1] + l[0] + 1)\n        if m >= k:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')\nmain()", "for _ in range(int(input())):\n    (a, b, c, m) = map(int, input().split())\n    lst = sorted([a, b, c])\n    mx = a - 1 + (b - 1) + (c - 1)\n    if mx >= m:\n        x = lst[2] - (lst[1] + lst[0] + 1)\n        if m >= x:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "def exists_string(nums, m):\n    nums.sort()\n    diff = nums[2] - nums[1] - nums[0]\n    mini = diff - 1\n    if diff <= 1:\n        mini = 0\n    maxi = nums[2] + nums[1] + nums[0] - 3\n    if m >= mini and m <= maxi:\n        return 'YES'\n    else:\n        return 'NO'\niterations = int(input())\nfor i in range(0, iterations):\n    nums = input().split(' ')\n    nums = [int(x) for x in nums]\n    m = nums[3]\n    print(exists_string(nums[:3], m))", "for t in range(int(input())):\n    (a, b, c, d) = map(int, input().split())\n    l = [a, b, c]\n    l.sort()\n    m = l[2] - (l[0] + l[1])\n    n = 0 if m <= 0 else m - 1\n    q = 'YES' if n <= d and sum(l) - 3 >= d else 'NO'\n    print(q)", "for _ in range(int(input())):\n    (A, B, C, n) = map(int, input().split())\n    (A, B, C) = sorted([A, B, C])\n    print('YES' if C - (A + B + 1) <= n <= A + B + C - 3 else 'NO')", "t = int(input())\nwhile t:\n    t -= 1\n    (a, b, c, m) = map(int, input().split())\n    Q = [a, b, c]\n    if m > a + b + c - 3 or m < max(Q) - (sum(Q) - max(Q)) - 1:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (a, b, c, m) = map(int, input().split())\n    (a, b, c) = sorted([a, b, c])\n    print('YES' if c - (a + b + 1) <= m <= a + b + c - 3 else 'NO')", "for _ in range(int(input())):\n    (a, b, c, m) = map(int, input().split())\n    (a, b, c) = sorted([a, b, c])\n    if m <= a + b + c - 3 and m >= c - (a + b + 1):\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nfor i in range(n):\n    (a, b, c, m) = map(int, input().split())\n    if a + b + c - 3 >= m and 2 * max(a, b, c) - (a + b + c + 1) <= m:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(0, t):\n    (a, b, c, m) = map(int, input().split())\n    l = [a, b, c]\n    l.sort()\n    mx = l[0] + l[1] + l[2] - 3\n    mn = l[2] - l[1] - l[0] - 1\n    if m >= mn and m <= mx:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nwhile n > 0:\n    (a, b, c, m) = map(int, input().split())\n    (a, b, c) = sorted([a, b, c])\n    if c - (a + b + 1) <= m and m <= a + b + c - 3:\n        print('YES')\n    else:\n        print('NO')\n    n -= 1", "t = int(input())\nwhile t > 0:\n    (a, b, c, m) = [int(x) for x in input().split()]\n    if a > c:\n        (a, c) = (c, a)\n    if b > c:\n        (b, c) = (c, b)\n    s = a - 1 + (b - 1) + (c - 1)\n    if c - (a + b + 1) <= m <= s:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (a, b, c, m) = map(int, input().split())\n    max = a + b + c - 3\n    sequence = [a, b, c]\n    sequence.sort()\n    (i_0, i_1, i_2) = (sequence[0], sequence[1], sequence[2])\n    if i_0 + i_1 - i_2 < 0:\n        min = -i_0 - i_1 + i_2 - 1\n    elif i_0 + i_1 - i_2 >= 0:\n        min = 0\n    if min <= m <= max:\n        output = 'YES'\n    else:\n        output = 'NO'\n    print(output)", "def prb():\n    l = list(map(int, input().split()))\n    m = l[3]\n    l.remove(l[3])\n    l.sort()\n    a = l[0]\n    b = l[1]\n    c = l[2]\n    if a + b + c - 3 < m:\n        return 'NO'\n    if c - (m + 1) > b + a:\n        return 'NO'\n    return 'YES'\nfor _ in range(int(input())):\n    print(prb())", "for i in range(int(input())):\n    (a, b, c, m) = map(int, input().split())\n    if m > a + b + c - 3:\n        print('NO')\n        continue\n    else:\n        abc = sorted([a, b, c])\n        if m < abc[2] - abc[1] - abc[0] - 1:\n            print('NO')\n            continue\n    print('YES')", "def max(list):\n    highest_value_position = 0\n    maximum = list[0]\n    for position in range(len(list) - 1):\n        if list[position] > maximum:\n            maximum = list[position]\n            highest_value_position = position\n    return highest_value_position\n\ndef judge(list):\n    max_position = max(list)\n    max_value = list[max_position] - 1\n    highest_adjacent = 0\n    lowest = 0\n    for i in range(len(list) - 1):\n        highest_adjacent = highest_adjacent + list[i] - 1\n        if i != max_position:\n            max_value = max_value - list[i]\n    if max_value < 0:\n        lowest = 0\n    else:\n        lowest = max_value\n    if highest_adjacent >= list[3] >= lowest:\n        return True\n    else:\n        return False\nint_list_2D = []\nt = int(input())\nfor i in range(t):\n    int_list = []\n    (a, b, c, m) = input().split()\n    a = int(a)\n    b = int(b)\n    c = int(c)\n    m = int(m)\n    int_list.append(a)\n    int_list.append(b)\n    int_list.append(c)\n    int_list.append(m)\n    int_list_2D.append(int_list)\nfor list in int_list_2D:\n    y = judge(list)\n    if y:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (a, b, c, m) = map(int, input().split())\n    (a, b, c) = sorted([a, b, c])\n    print('YES' if c - 1 - a - b <= m <= a + b + c - 3 else 'NO')", "for _ in range(int(input())):\n    (a, b, c, m) = map(int, input().split())\n    l = [a, b, c]\n    l = sorted(l)\n    ex = l[-1] - (1 + l[0] + l[1])\n    ex = max(0, ex)\n    if ex <= m <= a + b + c - 3:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (a, b, c, m) = map(int, input().split())\n    (a, b, c) = sorted([a, b, c])\n    print('YES' if c - (a + b + 1) <= m <= a + b + c - 3 else 'NO')", "T = int(input())\nfor _ in range(T):\n    (a, b, c, m) = map(int, input().split())\n    (a, b, c) = sorted([a, b, c])\n    print('YES' if c - (a + b + 1) <= m <= a + b + c - 3 else 'NO')", "import math\nt = int(input())\nfor _ in range(t):\n    (a, b, c, m) = map(int, input().split())\n    (a, b, c) = sorted([a, b, c])\n    print('YES' if c - 1 - a - b <= m <= a + b + c - 3 else 'NO')", "def main():\n    for test in range(int(input())):\n        (a, b, c, m) = map(int, input().split())\n        x = 0\n        letters = sorted([a, b, c])\n        for i in letters:\n            if i != 0:\n                x += 1\n        all_pairs = a + b + c - x\n        if m > all_pairs:\n            print('NO')\n        elif m == all_pairs:\n            print('YES')\n        else:\n            if letters[0] + letters[1] > letters[2]:\n                print('YES')\n                continue\n            else:\n                temp = letters[2] - letters[1] - letters[0]\n            if temp != 0:\n                temp -= 1\n            if m < temp:\n                print('NO')\n            else:\n                print('YES')\nmain()", "for _ in range(int(input())):\n    (a, b, c, m) = map(int, input().split())\n    (a, b, c) = sorted([a, b, c])\n    highest = a - 1 + (b - 1) + (c - 1)\n    lowest = c - (a + b + 1)\n    print('YES' if lowest <= m <= highest else 'NO')", "for i in range(int(input())):\n    (a, b, c, m) = map(int, input().split())\n    max_l = max([a, b, c])\n    print('YES' if 2 * max_l - (a + b + c + 1) <= m <= a + b + c - 3 else 'NO')", "for _ in range(int(input())):\n    (a, b, c, m) = map(int, input().split())\n    (a, b, c) = sorted([a, b, c])\n    print('YES' if c - (a + b + 1) <= m <= a + b + c - 3 else 'NO')", "t = int(input())\nfor i in range(t):\n    (a, b, c, m) = map(int, input().split())\n    pmax = a + b + c - 3\n    (a, b, c) = sorted([a, b, c])\n    pmin = c - (a + b + 1)\n    if m >= pmin and m <= pmax:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t > 0:\n    (a, b, c, m) = map(int, input().strip().split())\n    ma = a + b + c - 3\n    ans = []\n    ans.append(a)\n    ans.append(b)\n    ans.append(c)\n    ans.sort()\n    mi = ans[-1] - ans[-2] - ans[-3] - 1\n    if m >= mi and m <= ma:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "def combinatorics(a, b, c, m):\n    ceiling = a - 1 + b - 1 + c - 1\n    (x, y, z) = sorted([a, b, c])\n    floor = z - x - y - 1\n    if floor <= m <= ceiling:\n        return 'YES'\n    return 'NO'\nt = int(input())\nfor _ in range(t):\n    (a, b, c, m) = map(int, input().split(' '))\n    print(combinatorics(a, b, c, m))", "import math\nfor i in range(int(input())):\n    (a, b, c, m) = map(int, input().split())\n    (a, b, c) = sorted([a, b, c])\n    if c - (a + b + 1) <= m and a + b + c - 3 >= m:\n        print('YES')\n    else:\n        print('NO')"]