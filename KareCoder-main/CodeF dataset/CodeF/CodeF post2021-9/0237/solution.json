["t = int(input())\ng = []\nfor i in range(t):\n    n = int(input())\n    mass = input().split(' ')\n    if mass.count('1') > 0:\n        g.append(2 ** mass.count('0') * mass.count('1'))\n    else:\n        g.append('0')\nprint(*g, sep='\\n')", "for s in [*open(0)][2::2]:\n    f = s.split().count\n    print(f('1') << f('0'))", "import sys\ninput = sys.stdin.readline\nprint = sys.stdout.write\na = int(input())\nfor i in range(a):\n    b = int(input())\n    c = list(map(int, input().split()))\n    ans = 0\n    ans2 = 0\n    for i in c:\n        if i == 1:\n            ans += 1\n        elif i == 0:\n            ans2 += 1\n    print(str(ans * 2 ** ans2) + '\\n')", "import sys, math\ninput = sys.stdin.readline\nINF = int(1000000000.0) + 7\n\ndef solve():\n    n = int(input())\n    data = list(map(int, input().split()))\n    z = data.count(0)\n    o = data.count(1)\n    print(o * pow(2, z))\nt = int(input())\nwhile t:\n    t -= 1\n    solve()", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    one = arr.count(1)\n    zero = arr.count(0)\n    print(one * 2 ** zero)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    z = a.count(0)\n    o = a.count(1)\n    print(o * 2 ** z)", "n = int(input())\nlist1 = []\nfor i in range(n):\n    n1 = int(input())\n    list1.append([int(x) for x in input().split()])\nfor i in list1:\n    if i.count(0) != 0 and i.count(1) != 0:\n        print(2 ** i.count(0) * i.count(1))\n    elif i.count(1) != 0:\n        print(i.count(1))\n    else:\n        print(0)", "import sys\ninp = sys.stdin.readline\n\ndef solve():\n    n = int(inp())\n    c1 = 0\n    c0 = 0\n    for i in map(int, inp().split()):\n        if i == 1:\n            c1 += 1\n        elif i == 0:\n            c0 += 1\n    print(c1 * 2 ** c0)\n\ndef main():\n    for i in range(int(inp())):\n        solve()\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    o = a.count(1)\n    z = a.count(0)\n    if z > 0:\n        print(int(pow(2, z)) * o)\n    else:\n        print(o)", "from sys import stdin\n\ndef read_input():\n    n = map(int, stdin.readline().split())\n    a = list(map(int, stdin.readline().split()))\n    return (n, a)\n\ndef solve(n, a):\n    (zero, one) = (0, 0)\n    for ai in a:\n        if ai == 0:\n            zero += 1\n        elif ai == 1:\n            one += 1\n    return one * 2 ** zero\n\ndef main():\n    t = int(stdin.readline())\n    for _ in range(t):\n        input = read_input()\n        answer = solve(*input)\n        print(answer)\nmain()", "import sys, os.path\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nfor t in range(int(input())):\n    n = int(input())\n    (c0, c1) = (0, 0)\n    num = list(map(int, input().split()))\n    for i in num:\n        if i == 1:\n            c1 += 1\n        elif i == 0:\n            c0 += 1\n    print(c1 * 2 ** c0)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    cnt0 = 0\n    cnt1 = 0\n    for x in a:\n        if x == 1:\n            cnt1 += 1\n        elif x == 0:\n            cnt0 += 1\n    print(cnt1 * (1 << cnt0))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = a.count(1)\n    y = a.count(0)\n    print(x * 2 ** y, '\\n')", "import math\nt = int(input())\nfor tc in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    o = arr.count(1)\n    z = arr.count(0)\n    print(o * 2 ** z)", "cases = int(input())\nfor _ in range(cases):\n    num = int(input())\n    arr = list(map(int, input().split()))\n    ans = arr.count(1) * 2 ** arr.count(0)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    ai = list(map(int, input().split()))\n    ctz = ai.count(0)\n    cto = ai.count(1)\n    print(pow(2, ctz) * cto)", "import sys\ninp = sys.stdin.readline()\ntest = int(inp.strip('\\n'))\nresult = ''\nfor i in range(test):\n    inp = sys.stdin.readline()\n    n = int(inp.strip('\\n'))\n    inp = sys.stdin.readline()\n    a = list(map(int, inp.strip('\\n').split()))\n    ones = zeroes = 0\n    for val in a:\n        if val == 0:\n            zeroes += 1\n        elif val == 1:\n            ones += 1\n    val = ones * (1 << zeroes)\n    sys.stdout.write(str(val) + '\\n')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (zeros, ones) = (a.count(0), a.count(1))\n    ans = ones * 2 ** zeros\n    print(ans)", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    j = arr.count(0)\n    o = arr.count(1)\n    if o == 0:\n        print(0)\n    else:\n        print(o * 2 ** j)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    m = input().split()\n    a = m.count('0')\n    b = m.count('1')\n    print(2 ** a * b)", "n = int(input())\na = []\nfor i in range(n):\n    n1 = int(input())\n    arr = list(map(int, input().split()))\n    b = sum(arr)\n    c = arr.count(1)\n    d = arr.count(0)\n    if sum == 1 and c > 0 and (d > 0):\n        a.append(1)\n    elif sum != 1 and c > 0 and (d > 0):\n        a.append(c * 2 ** d)\n    elif sum != 1 and c > 0 and (d == 0):\n        a.append(c)\n    elif c == 0:\n        a.append(0)\nfor i in range(n):\n    print(a[i])", "t = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    m = input().split()\n    if bool(m.count('0')):\n        ans.append(2 ** m.count('0') * m.count('1'))\n    else:\n        ans.append(m.count('1'))\nfor i in range(len(ans)):\n    print(ans[i])", "n = int(input())\nfor i in range(n):\n    k = int(input())\n    s = input().split()\n    c_0 = 0\n    c_1 = 0\n    for j in s:\n        if j == '0':\n            c_0 += 1\n        elif j == '1':\n            c_1 += 1\n    print(2 ** c_0 * c_1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input().split(' ')\n    one = 0\n    zero = 0\n    for j in s:\n        if j == '1':\n            one += 1\n        if j == '0':\n            zero += 1\n    print(one + one * (2 ** zero - 1))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if a.count(1) == 0:\n        print(0)\n    else:\n        k = a.count(1)\n        if a.count(0) > 0:\n            k *= 2 ** a.count(0)\n        print(k)", "t = int(input())\nfor i in range(0, t):\n    num = int(input())\n    l = list(map(int, input().split()))\n    a = 0\n    b = 0\n    for i in range(0, num):\n        if l[i] == 1:\n            a += 1\n        if l[i] == 0:\n            b += 1\n    print(2 ** b * a)", "from math import pow\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    c1 = arr.count(1)\n    c0 = arr.count(0)\n    print(int(pow(2, c0) * c1))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    cnt_1 = 0\n    cnt_0 = 0\n    a = input().split()\n    for i in a:\n        if i == '1':\n            cnt_1 += 1\n        elif i == '0':\n            cnt_0 += 1\n    print(cnt_1 * 2 ** cnt_0)", "def las(ltt, sltt):\n    l = ltt.count(1)\n    if l == 0:\n        return 0\n    out = l\n    p = ltt.count(0)\n    x = 2 ** p * l\n    if p == 0:\n        return out\n    return x\n\ndef main():\n    nc = int(input())\n    for i in range(nc):\n        sltt = int(input())\n        ltt = list(map(int, input().split()))\n        print(las(ltt, sltt))\nmain()", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(a.count('1') << a.count('0'))", "from math import comb\n\ndef main():\n    import sys\n    input = sys.stdin.readline\n    M = int(1000000000.0 + 7)\n    for _ in range(int(input())):\n        n = int(input())\n        l = list(map(int, input().split()))\n        o = l.count(1)\n        z = l.count(0)\n        s = 1\n        if o > 0:\n            for i in range(z):\n                s += comb(z, i + 1)\n            s *= o\n            print(s)\n        else:\n            print(0)\nmain()", "from math import comb\n\ndef main():\n    import sys\n    input = sys.stdin.readline\n    M = int(1000000000.0 + 7)\n    for _ in range(int(input())):\n        n = int(input())\n        l = list(map(int, input().split()))\n        o = l.count(1)\n        z = l.count(0)\n        s = 1\n        if o > 0:\n            for i in range(z):\n                s += comb(z, i + 1)\n            s *= o\n            print(s)\n        else:\n            print(0)\nmain()", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(l.count(1) * 2 ** l.count(0))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().strip().split()))\n    one_count = arr.count(1)\n    zero_count = arr.count(0)\n    print(one_count * pow(2, zero_count))", "from math import *\nfrom collections import *\nfrom itertools import *\nfrom functools import *\nfrom bisect import *\nfrom heapq import *\nfrom operator import *\nfrom sys import *\nsetrecursionlimit(100000000)\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = l.count(1) * 2 ** l.count(0)\n    print(ans)", "for s in [*open(0)][2::2]:\n    f = s.split().count\n    print(f('1') << f('0'))", "t = int(input())\nwhile t:\n    n = int(input())\n    a = input().split()\n    cnt = a.count('1')\n    cnt2 = 2 ** a.count('0')\n    print(cnt * cnt2)\n    t = t - 1", "import sys\nimport bisect\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    (zeros, ones) = (a.count(0), a.count(1))\n    print(ones * 2 ** zeros)\nt = int(input())\nfor _ in range(t):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(a.count(1) * 2 ** a.count(0))", "t = int(input())\nanswer = []\nfor a in range(t):\n    n = int(input())\n    lst = list(map(lambda x: int(x), input().split()))\n    c0 = lst.count(0)\n    c1 = lst.count(1)\n    answer.append(2 ** c0 * c1)\nprint('\\n'.join([str(i) for i in answer]))", "for s in [*open(0)][2::2]:\n    f = s.split().count\n    print(f('1') << f('0'))", "for i in range(int(input())):\n    n = input()\n    mas = list(map(int, input().split()))\n    zero = 0\n    one = 0\n    a = 0\n    for i in mas:\n        if i == 0:\n            zero += 1\n        if i == 1:\n            one += 1\n    print(one * 2 ** zero)", "n = int(input())\nfor i in range(n):\n    line = input().split()\n    line = input().split()\n    a = 0\n    b = 0\n    for c in line:\n        if c == '0':\n            a += 1\n        if c == '1':\n            b += 1\n    print(2 ** a * b)", "for s in [*open(0)][2::2]:\n    f = s.split().count\n    print(f('1') << f('0'))", "t = int(input())\nfor t_i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    zer = a.count(0)\n    one = a.count(1)\n    print(2 ** zer * one)", "for s in [*open(0)][2::2]:\n    l = [*map(int, s.split())]\n    print(l.count(1) * 2 ** l.count(0))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x1 = a.count(1)\n    x0 = a.count(0)\n    print(2 ** x0 * x1)", "for s in [*open(0)][2::2]:\n    f = s.split().count\n    print(f('1') << f('0'))", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(a.count(1) * 2 ** a.count(0))", "t = int(input())\nfor T in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    (one, zero) = (a.count(1), a.count(0))\n    ans = one + (pow(2, zero) - 1) * one\n    print(ans)", "for s in [*open(0)][2::2]:\n    f = s.split().count\n    print(f('1') << f('0'))", "import math\nTEST_MODE = False\n\ndef cust_print(stuff):\n    if TEST_MODE:\n        print(stuff)\n    else:\n        pass\noutput = []\n\ndef f(n, a):\n    output.append(str(pow(2, a.count('0')) * a.count('1')))\ntest_cases = int(input())\nfor i in range(test_cases):\n    cust_print(f'\\n---- Call {i + 1} ----\\n')\n    n = int(input())\n    a = input().split()\n    f(n, a)\ncust_print('\\n---- Final output ----\\n')\nprint('\\n'.join(output))", "import sys\n\ndef readnum():\n    input = sys.stdin.readline\n    a = list(map(int, input().split()))\n    return a\n\ndef print(val):\n    sys.stdout.write(str(val) + '\\n')\nt = readnum()[0]\nfor _ in range(t):\n    n = readnum()[0]\n    arr = readnum()\n    (zeros, ones) = (0, 0)\n    for i in range(n):\n        if arr[i] == 1:\n            ones += 1\n        elif arr[i] == 0:\n            zeros += 1\n    print(ones * 2 ** zeros)", "import sys\ninput = sys.stdin.readline\nfor tc in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    z = a.count(0)\n    o = a.count(1)\n    print(2 ** z * o)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    x = arr.count(1)\n    y = arr.count(0)\n    print(x * 2 ** y)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    x = arr.count(1)\n    y = arr.count(0)\n    print(x * 2 ** y)", "for s in [*open(0)][2::2]:\n    f = s.split().count\n    print(f('1') << f('0'))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = l.count(1)\n    k = l.count(0)\n    s = sum(l)\n    if s - 1 == 0:\n        ans = pow(2, k)\n        print(ans)\n    else:\n        arr = m * 1\n        b = pow(2, k) - 1\n        ans = arr + arr * b\n        print(ans)", "for s in [*open(0)][2::2]:\n    f = s.split().count\n    print(f('1') << f('0'))", "for _ in range(0, int(input())):\n    n = int(input())\n    v = input().split()\n    o = v.count('1')\n    z = v.count('0')\n    print(2 ** z * o)", "for i in range(int(input())):\n    n = int(input())\n    A = [int(k) for k in input().split()]\n    o = A.count(1)\n    z = A.count(0)\n    print(2 ** z * o)", "for z in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().strip().split()))\n    (a, b) = (0, 0)\n    k = 0\n    if 0 in l:\n        a = l.count(0)\n    if 1 in l:\n        b = l.count(1)\n        k += 1\n    a = 2 ** a\n    if k == 0:\n        print(0)\n    else:\n        print(a * b)", "testes = int(input())\nresultados = [None] * testes\nfor i in range(testes):\n    n = int(input())\n    sequencia = list(map(int, input().split(' ')))\n    if 1 in sequencia:\n        if 0 in sequencia:\n            resultados[i] = sequencia.count(1) * 2 ** sequencia.count(0)\n        else:\n            resultados[i] = sequencia.count(1)\n    else:\n        resultados[i] = 0\nprint(*resultados, sep='\\n')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(arr.count(1) * 2 ** arr.count(0))", "for i in range(int(input())):\n    n = int(input())\n    a = input().split()\n    print(a.count('1') * 2 ** a.count('0'))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ones = 0\n    zero = 0\n    for i in arr:\n        if i == 1:\n            ones += 1\n        elif i == 0:\n            zero += 1\n    print(2 ** zero * ones)", "import math\n\ndef intlist():\n    return [int(i) for i in input().split(' ')]\n\ndef stringlsit():\n    return input().split(' ')\n\ndef solve():\n    n = int(input())\n    a = intlist()\n    ones = a.count(1)\n    zeros = a.count(0)\n    return ones * 2 ** zeros\nt = input()\nfor tt in range(int(t)):\n    print(solve())", "t = int(input())\nfor i in range(t):\n    a = int(input())\n    x = list(map(int, input().split()))\n    r = x.count(1) * 2 ** x.count(0)\n    print(r)", "import math\nt = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    z = a.count(0)\n    o = a.count(1)\n    print(int(math.pow(2, z) * o))\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    ones = 0\n    zeros = 0\n    for i in a:\n        if i == 0:\n            zeros += 1\n        elif i == 1:\n            ones += 1\n    print(ones * 2 ** zeros)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    z = 0\n    o = 0\n    for i in a:\n        if i == 0:\n            z += 1\n        if i == 1:\n            o += 1\n    print(2 ** z * o)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    cnt = 0\n    (z, o) = (0, 0)\n    for x in a:\n        if x == 0:\n            z += 1\n        elif x == 1:\n            o += 1\n    print(pow(2, z) * o)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c1 = a.count(1)\n    c0 = a.count(0)\n    print(2 ** c0 * c1)", "num = int(input())\nfor i in range(num):\n    n = int(input())\n    arr = input().split(' ')\n    arr = list(map(int, arr))\n    tot = 1\n    a = arr.count(1)\n    b = arr.count(0)\n    if a == 0:\n        print(0)\n    elif b == 0:\n        print(tot * a)\n    else:\n        print(tot * a * 2 ** b)", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(a.count(1) * 2 ** a.count(0))\nt = int(input())\nfor i in range(t):\n    solve()", "for s in [*open(0)][2::2]:\n    f = s.split().count\n    print(f('1') << f('0'))", "for s in [*open(0)][2::2]:\n    f = s.split().count\n    print(f('1') << f('0'))", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    cnt = [0] * 2\n    for num in arr:\n        if num <= 1:\n            cnt[num] += 1\n    return cnt[1] * 2 ** cnt[0]\nfor _ in range(int(input())):\n    print(solve())", "for s in [*open(0)][2::2]:\n    f = s.split().count\n    print(f('1') << f('0'))", "t = int(input())\nfor _ in range(t):\n    a = int(input())\n    n = list(map(int, input().split()))\n    one = n.count(1)\n    zero = n.count(0)\n    print(2 ** zero * one)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = input().split()\n    l1 = []\n    for j in a:\n        l1.append(int(j))\n    a1 = l1.count(0)\n    a2 = l1.count(1)\n    print(pow(2, a1) * a2)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = input().split()\n    l1 = []\n    for j in a:\n        l1.append(int(j))\n    a1 = l1.count(0)\n    a2 = l1.count(1)\n    print(pow(2, a1) * a2)", "for s in [*open(0)][2::2]:\n    f = s.split().count\n    print(f('1') << f('0'))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    k = l.count(1)\n    p = l.count(0)\n    print(2 ** p * k)", "t = int(input().strip())\nfor _ in range(t):\n    n = input()\n    a = [int(i) for i in input().strip().split()]\n    zeros = 0\n    ones = 0\n    for i in a:\n        if i == 1:\n            ones += 1\n        elif i == 0:\n            zeros += 1\n    print(ones * 2 ** zeros)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    full = sum(a)\n    ones = a.count(1)\n    zeros = a.count(0)\n    print(ones * (2 ** zeros if zeros else 1))", "import math\n\ndef comb(n, p):\n    C = math.factorial(n) / (math.factorial(p) * math.factorial(n - p))\n    return int(C)\nt = int(input())\nfor i in range(t):\n    tam = int(input())\n    nums = list(map(int, input().split()))\n    if 1 not in nums:\n        print(0)\n        continue\n    uns = nums.count(1)\n    zeros = nums.count(0)\n    soma = 0\n    if sum(nums) == 1:\n        soma += 1\n    elif uns == 1:\n        soma += 1\n    if uns > 1:\n        soma += comb(uns, uns - 1)\n    soma = soma * 2 ** zeros\n    print(soma)", "t = int(input())\nfor i in range(t):\n    input()\n    array = input().split()\n    total = 0\n    for j in array:\n        if j == '1':\n            total += 1\n    for j in array:\n        if j == '0':\n            total *= 2\n    print(total)", "def fatorial(n):\n    aux = n\n    result = 1\n    if n == 0:\n        return 1\n    while aux > 0:\n        result = result * aux\n        aux = aux - 1\n    return result\ntest = int(input())\nfor i in range(0, test):\n    n = int(input())\n    array = list(map(int, input().split()[:n]))\n    ones = 0\n    zeros = 0\n    for k in array:\n        if k == 1:\n            ones = ones + 1\n        elif k == 0:\n            zeros = zeros + 1\n    if ones < 1:\n        print(0)\n    else:\n        comb = ones\n        if zeros > 0:\n            comb = comb * 2 ** zeros\n        print(int(comb))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    one = a.count(1)\n    zero = a.count(0)\n    print(one * 2 ** zero)", "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    (one, zero) = (s.count(1), s.count(0))\n    print(2 ** zero * one)", "import math\ncase = int(input())\nfor i in range(case):\n    n = int(input())\n    ll = list(input().split())\n    (zero, one) = (ll.count('0'), ll.count('1'))\n    print(2 ** zero * one)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (c0, c1) = (a.count(0), a.count(1))\n    print(2 ** c0 * c1)", "import math\n\ndef primeFactors(n):\n    l = []\n    c = 2\n    while n > 1:\n        if n % c == 0:\n            l.append(c)\n            n = n / c\n        else:\n            c = c + 1\n    return l\n\ndef primeFactors(n):\n    l = []\n    c = 2\n    while n > 1:\n        if n % c == 0:\n            l.append(c)\n            n = n / c\n        else:\n            c = c + 1\n    return l\n\ndef prime(n):\n    prime_flag = 0\n    if n > 1:\n        for i in range(2, int(math.sqrt(n)) + 1):\n            if n % i == 0:\n                prime_flag = 1\n                break\n    return prime_flag\nt = int(input())\nwhile t:\n    n = int(input())\n    l = list(map(int, input().split()))\n    if 1 not in l:\n        print(0)\n    else:\n        z = l.count(0)\n        one = l.count(1)\n        ans = math.pow(2, z) * one\n        print(int(ans))\n    t = t - 1", "import sys\nl = sys.stdin.readlines()\nl = l[2:]\n\ndef full(arr):\n    ones = 0\n    zeros = 0\n    for x in arr:\n        if x == 1:\n            ones += 1\n        if x == 0:\n            zeros += 1\n    return ones * 2 ** zeros\nfor x in l[::2]:\n    print(full([int(x) for x in x.split()]))", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    c0 = a.count(0)\n    c1 = a.count(1)\n    print(c1 * 2 ** c0)\n\ndef main():\n    for _ in range(int(input())):\n        solve()\nmain()", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = l.count(1)\n    e = l.count(0)\n    print(d * 2 ** e)", "t = int(input())\nfor i in range(t):\n    int(input())\n    array = list(map(int, input().split()))\n    print(2 ** array.count(0) * array.count(1))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = list(map(int, input().split()))\n    if s.count(1) == 0:\n        print(0)\n    else:\n        print(2 ** s.count(0) * s.count(1))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    n0 = 0\n    n1 = 0\n    for ele in a:\n        if ele == 1:\n            n1 += 1\n        elif ele == 0:\n            n0 += 1\n    if n1 == 0:\n        print(0)\n    else:\n        print(n1 * int(pow(2, n0)))"]