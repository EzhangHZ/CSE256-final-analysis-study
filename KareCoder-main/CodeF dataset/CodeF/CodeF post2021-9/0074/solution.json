["for _ in range(int(input())):\n    x = int(input())\n    l = list(map(int, input().split()))\n    ma = max(l)\n    print(l.index(ma) + 1)", "import sys\ninput = sys.stdin.readline\ntests = int(input())\nfor test in range(tests):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(1 + a.index(max(a)))", "output = ''\nfor caseno in range(int(input())):\n    n = int(input())\n    l = map(int, input().split())\n    cur_max = 0\n    answer = -1\n    for (ind, val) in enumerate(l):\n        if val > cur_max:\n            cur_max = val\n            answer = ind + 1\n    output += str(answer) + '\\n'\nprint(output)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input().split(' ')\n    cnt = list(map(int, s))\n    print(cnt.index(max(cnt)) + 1)", "def solve():\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    max_idx = 0\n    max_num = arr[0]\n    for i in range(1, n):\n        if arr[i] > max_num:\n            max_num = arr[i]\n            max_idx = i\n    print(max_idx + 1)\nt = int(input())\nfor _ in range(t):\n    solve()", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    v = list(map(int, input().split()))\n    p = 0\n    for j in range(m):\n        if v[j] > p:\n            p = v[j]\n            q = j\n    print(q + 1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(a.index(max(a)) + 1)", "t = int(input())\nfor testcase in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    print(arr.index(max(arr)) + 1)", "no_of_cases = int(input())\na = no_of_cases\ncases = []\nfullcase = []\nwhile a > 0:\n    cases.append(int(input()))\n    b = input().split()\n    c = []\n    for i in b:\n        c.append(int(i))\n    fullcase.append(c)\n    a = a - 1\nfor i in fullcase:\n    max = 0\n    index = 0\n    for j in i:\n        index = index + 1\n        if j > max:\n            max = j\n            maxindex = index\n    print(maxindex)", "k = int(input())\nfor j in range(k):\n    s = int(input())\n    t = list(map(int, input().split()))\n    r = max(t)\n    print(t.index(r) + 1)", "a = int(input())\nfor i in range(a):\n    _ = input()\n    arr = [int(x) for x in input().split()]\n    print(arr.index(max(arr)) + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = list(map(int, input().split()))\n    max = 0\n    for j in x:\n        if max < j:\n            max = j\n    j = 0\n    while j < n:\n        if max == x[j]:\n            print(j + 1)\n            break\n        j = j + 1", "import sys\ninput = sys.stdin.readline\nN = int(input())\nfor _ in range(N):\n    _ = int(input())\n    C = list(map(int, input().split()))\n    maxv = max(C)\n    print(C.index(maxv) + 1)", "n = int(input())\np = []\nfor j in range(n):\n    m = int(input())\n    A = list(map(int, input().split()))\n    h = max(A)\n    t = A.index(h)\n    p.append(t)\nfor y in p:\n    print(y + 1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(a.index(max(a)) + 1)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(l.index(max(l)) + 1)", "def sol(l):\n    if len(l) == 1:\n        return 1\n    else:\n        return l.index(max(l)) + 1\nt = int(input())\nfor _ in range(t):\n    n = input()\n    l = [int(i) for i in input().split()]\n    print(sol(l))", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(a.index(max(a, key=int)) + 1)", "for S in [*open(0)][2::2]:\n    x = S.split()\n    print(x.index(max(x, key=int)) + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    cnt = list(map(int, input().split()))\n    index = 1\n    a = cnt[0]\n    for i in range(n):\n        if cnt[i] > a:\n            a = cnt[i]\n            index = i + 1\n    print(index)", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(a.index(max(a, key=int)) + 1)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    s = input()\n    a = [int(i) for i in s.split(' ')]\n    ans = max(range(len(a)), key=a.__getitem__)\n    print(ans + 1)\n    t -= 1", "q = int(input())\nfor _ in range(q):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(a.index(max(a)) + 1)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(a.index(max(a)) + 1)", "def num():\n    c = int(input())\n    return c\n\ndef stri():\n    c = str(input())\n    return c\n\ndef vector():\n    c = list(map(int, input().split()))\n    return c\n\ndef strvector():\n    c = list(map(str, input().split()))\n    return c\nimport math\nfrom collections import defaultdict\n\ndef isprime(num):\n    a = 2\n    while a <= math.sqrt(num):\n        if num % a < 1:\n            return False\n        a = a + 1\n    return num > 1\nt = num()\nwhile t > 0:\n    t -= 1\n    n = num()\n    arr = vector()\n    c = max(arr)\n    x = arr.index(c)\n    print(x + 1)", "import sys, math\ninput = sys.stdin.readline\nINF = int(1000000000.0) + 7\nMOD = 998244353\n\ndef solve():\n    n = int(input())\n    data = list(map(int, input().split()))\n    mx = max(data)\n    for i in range(n):\n        if data[i] == mx:\n            print(i + 1)\n            return\nt = 1\nt = int(input())\nfor i in range(1, t + 1):\n    solve()", "for _ in range(int(input())):\n    x = int(input())\n    l = list(map(int, input().split()))\n    print(l.index(max(l)) + 1)", "for _ in range(int(input())):\n    n = int(input())\n    nums = [int(i) for i in input().split()]\n    print(nums.index(max(nums)) + 1)", "for _ in range(int(input())):\n    x = int(input())\n    y = list(map(int, input().split()))\n    a = 0\n    b = 0\n    for i in range(x):\n        if y[i] > a:\n            a = y[i]\n            b = i + 1\n    print(b)", "import sys\ninput = sys.stdin.readline\n\ndef print(*args, end='\\n', sep=' ') -> None:\n    sys.stdout.write(sep.join(map(str, args)) + end)\n\ndef Solve():\n    for t in range(int(input())):\n        n = int(input())\n        cnt = list(map(int, input().split()))\n        print(cnt.index(max(cnt)) + 1)\nSolve()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(a.index(max(a)) + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    maxInd = -1\n    maxx = -100\n    for i in range(n):\n        if maxx < a[i]:\n            maxx = a[i]\n            maxInd = i\n    print(maxInd + 1)", "for t in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    summ = sum(s)\n    m = max(s)\n    if m * 2 > summ:\n        print(s.index(m) + 1)\n    else:\n        print(1)", "a = int(input())\nfor i in range(a):\n    b = int(input())\n    c = list(map(int, input().split()))\n    print(c.index(max(c)) + 1)", "import os.path\nfrom math import gcd, floor, ceil\nfrom collections import *\nimport sys\nmod = 1000000007\nINF = float('inf')\n\ndef st():\n    return list(sys.stdin.readline().strip())\n\ndef li():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef mp():\n    return map(int, sys.stdin.readline().split())\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef pr(n):\n    return sys.stdout.write(str(n) + '\\n')\n\ndef prl(n):\n    return sys.stdout.write(str(n) + ' ')\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nt = inp()\nfor _ in range(t):\n    n = inp()\n    l = li()\n    m = 0\n    for i in range(n):\n        if l[i] > m:\n            k = i\n            m = l[i]\n    print(k + 1)", "n = int(input())\nfor _ in range(n):\n    a = int(input())\n    b = list(map(int, input().strip().split()))\n    c = max(b)\n    print(b.index(c) + 1)", "for t in range(0, int(input())):\n    n = int(input())\n    my_list = list(map(int, input().split()))\n    max_ = max(my_list)\n    print(my_list.index(max_) + 1)", "t = int(input())\nfor r in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(l.index(max(l)) + 1)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(l.index(max(l)) + 1)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(l.index(max(l)) + 1)", "n = int(input())\nfor p in range(0, n):\n    m = int(input())\n    a = list(map(int, input().split()))\n    l = max(a)\n    c = a.index(l)\n    print(c + 1)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(l.index(max(l)) + 1)", "n = int(input())\nfor _ in range(n):\n    k = int(input())\n    p = list(map(int, input().split()))\n    print(p.index(max(p)) + 1)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(l.index(max(l)) + 1)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = max(l)\n    print(l.index(m) + 1)", "for _ in range(int(input())):\n    n = int(input())\n    A = map(int, input().split())\n    A = list(A)\n    print(A.index(max(A)) + 1)", "ad = int(input())\nfor i in range(ad):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ma = 0\n    mai = 1\n    r = a.index(max(a))\n    print(r + 1)", "a = int(input())\nfor i in range(a):\n    _ = input()\n    arr = [int(x) for x in input().split()]\n    print(arr.index(max(arr)) + 1)", "def solution(x):\n    mx = 0\n    idx = 0\n    for i in range(len(x)):\n        if x[i] > mx:\n            mx = x[i]\n            idx = i\n    return idx\nT = int(input().strip())\nwhile T > 0:\n    T -= 1\n    n = int(input().strip())\n    x = list(map(int, input().strip().split()))\n    print(solution(x) + 1)", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    a = max(lst)\n    print(lst.index(a) + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = [int(x) for x in input().split()]\n    print(s.index(max(s)) + 1)", "def maximum(a):\n    i = 0\n    temp = 0\n    maximum = a[0]\n    for i in range(1, len(a)):\n        if a[i] > maximum:\n            maximum = a[i]\n            temp = i\n    return temp + 1\nt = int(input())\narr1 = []\nfor i in range(t):\n    arr = []\n    n = int(input())\n    arr = list(map(int, input().split(sep=' ')))\n    arr1.append(maximum(arr))\nfor i in range(t):\n    print(arr1[i])", "a = int(input())\nfor i in range(a):\n    col = int(input())\n    if col == 1:\n        b = int(input())\n        print(1)\n    else:\n        P = list(map(int, input().split()))\n        print(P.index(max(P)) + 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = list(map(int, input().split()))\n    ma = max(x)\n    print(x.index(ma) + 1)", "res = []\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    balls = [int(x) for x in input().split()]\n    res.append(balls.index(max(balls)) + 1)\nprint(*res, sep='\\n')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(l.index(max(l)) + 1)", "answer = []\nfor i in range(int(input())):\n    kc = int(input())\n    ksh = list(map(int, input().split()[:kc]))\n    answer.append(ksh.index(max(ksh)) + 1)\nprint(*answer, sep='\\n')", "from operator import indexOf\nresults = []\nnaborov = int(input())\nfor i in range(0, naborov):\n    k = int(input())\n    mas = list(map(int, input().split()))\n    results.append(mas.index(max(mas)) + 1)\nfor res in results:\n    print(res)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    i = arr.index(max(arr))\n    print(i + 1)", "for _ in ' ' * int(input()):\n    _ = input()\n    x = list(map(int, input().split()))\n    print(x.index(max(x)) + 1)", "n = int(input())\nl = []\nfor i in range(n):\n    l = []\n    nc = int(input())\n    l = list(map(int, input().split()))\n    m = max(l)\n    print(l.index(m) + 1)", "testcases = int(input())\nfor eachcase in range(testcases):\n    length = int(input())\n    array = list(map(int, input().split()))\n    maxcolor = 1\n    index = 1\n    for color in range(length):\n        if maxcolor < array[color]:\n            maxcolor = array[color]\n            index = color + 1\n    print(index)", "from sys import stdin, stdout\n\ndef solve():\n    n = int(stdin.readline())\n    cnt = list(map(int, stdin.readline().split()))\n    (m, index) = (0, 0)\n    for i in range(n):\n        if cnt[i] > m:\n            m = cnt[i]\n            index = i + 1\n    print(index)\n\ndef main():\n    t = stdin.readline()\n    for i in range(int(t)):\n        solve()\nmain()", "for i in range(int(input())):\n    n = int(input())\n    cnt = list(map(int, input().split()))\n    print(cnt.index(max(cnt)) + 1)", "import sys\narr = []\nfor line in sys.stdin:\n    nums = [int(x) for x in line.strip().split()]\n    for j in nums:\n        arr.append(j)\ntest_cases = arr[0]\ni = 1\nfor tc in range(test_cases):\n    n = arr[i]\n    i += 1\n    cnt = arr[i:i + n]\n    i += n\n    max_i = cnt.index(max(cnt))\n    print(max_i + 1)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef mainak(n):\n    ts = 0\n    for (idx, i) in enumerate(n):\n        if i > n[ts]:\n            ts = idx\n    return ts + 1\nt = inp()\nfor _ in range(t):\n    n = int(input().strip())\n    nums = [int(x) for x in input().strip().split()]\n    print(mainak(nums))", "def revisited():\n    n = int(input())\n    lst_ans = []\n    for i in range(n):\n        diff_col = int(input())\n        cnt = list(map(int, input().split()))\n        i = cnt.index(max(cnt)) + 1\n        lst_ans.append(i)\n    for k in lst_ans:\n        print(k)\nrevisited()", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    maxC = max(c)\n    i = c.index(maxC)\n    print(i + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    cnt = list(map(int, input().split()))\n    index = 1\n    a = cnt[0]\n    for i in range(n):\n        if cnt[i] > a:\n            a = cnt[i]\n            index = i + 1\n    print(index)", "def main():\n    for t in range(int(input())):\n        n = int(input())\n        a = [0] + list(map(int, input().split()))\n        (pos, mx) = (0, 0)\n        for i in range(1, n + 1):\n            if a[i] > mx:\n                mx = a[i]\n                pos = i\n        print(pos)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(l.index(max(l)) + 1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(a.index(max(a)) + 1)", "def solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    _max = -1\n    pos = 0\n    for i in range(n):\n        if arr[i] > _max:\n            _max = arr[i]\n            pos = i + 1\n    print(pos)\ntest_case = int(input())\nfor i in range(test_case):\n    solve()", "def func(n, str):\n    str = str.split()\n    str = [int(i) for i in str]\n    return str.index(max(str))\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    str = input()\n    ans = func(n, str)\n    print(ans + 1)", "for _ in [0] * int(input()):\n    input()\n    a = list(map(int, input().split()))\n    print(1 + a.index(max(a)))", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(a.index(max(a, key=int)) + 1)", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    m = l[0]\n    ind = 1\n    for i in range(1, len(l) + 1):\n        if l[i - 1] > m:\n            m = l[i - 1]\n            ind = i\n    print(ind)", "for _ in range(int(input())):\n    n = int(input())\n    cnt = [int(x) for x in input().split()]\n    max_idx = -1\n    max_cnt = -1\n    for i in range(n):\n        curr_cnt = cnt[i]\n        if curr_cnt > max_cnt:\n            max_cnt = curr_cnt\n            max_idx = i + 1\n    print(max_idx)", "for _ in [0] * int(input()):\n    input()\n    a = list(map(int, input().split()))\n    print(1 + a.index(max(a)))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(arr.index(max(arr)) + 1)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(l.index(max(l)) + 1)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = max(a)\n    print(a.index(x) + 1)", "t = int(input())\nwhile t:\n    n = int(input())\n    maxi = -1\n    balls = list(map(int, input().split()))\n    for i in range(n):\n        if balls[i] > maxi:\n            maxi = balls[i]\n            ans = i + 1\n    print(ans)\n    t -= 1", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(a.index(max(a, key=int)) + 1)", "t = int(input())\nfor i in range(t):\n    numcolors = input()\n    colors = list(map(int, input().split()))\n    maxnum = max(colors)\n    for i in range(len(colors)):\n        if colors[i] == maxnum:\n            print(i + 1)\n            break\n\ndef test():\n    colors = [1, 3, 5, 14, 14]\n    maxnum = max(colors)\n    for i in range(len(colors)):\n        if colors[i] == maxnum:\n            print(i + 1)\n            break", "def solution(arr):\n    print(arr.index(max(arr)) + 1)\nt = int(input())\nfor _ in range(t):\n    n = input()\n    arr = list(map(int, input().split(' ')))\n    solution(arr)", "for _ in [0] * int(input()):\n    input()\n    a = list(map(int, input().split()))\n    print(1 + a.index(max(a)))"]