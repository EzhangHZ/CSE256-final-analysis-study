["import sys\ninputs = ''.join(sys.stdin.readlines()).strip().split('\\n')[2::2]\nfor i in inputs:\n    if len(i.split()) > 1:\n        print(1, len(i.split()))\n    else:\n        print(1, 1)", "import sys\n\ndef solve():\n    input = sys.stdin.readline\n    n = int(input())\n    input()\n    print(f'{1} {n}')\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "import sys\ns = sys.stdin.read()\nlines = s.split('\\n')\nfor index in range(1, len(lines) - 2, 2):\n    lenght = int(lines[index])\n    data = lines[index + 1]\n    print(1, lenght)", "for s in [*open(0)][2::2]:\n    print(1, len(s.split()))", "import sys\nfrom collections import deque\nn = int(sys.stdin.readline().strip())\nfor i in range(n):\n    m = int(sys.stdin.readline().strip())\n    o = sys.stdin.readline()\n    print(1, m)", "for i in [*open(0)][2::2]:\n    print(1, end=' ')\n    print(len(i.split()))", "for i in [*open(0)][1::2]:\n    print(1, i, end='')", "for s in [*open(0)][2::2]:\n    print(1, len(s.split()))", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\ntest_cases = inp()\ninp_arr = []\nfor i in range(test_cases):\n    num = inp()\n    nums = inlt()\n    inp_arr.append(nums)\n\ndef findResult(nums):\n    return f'1 {len(nums)}'\nresult = [findResult(cheeses) for cheeses in inp_arr]\nfor m in result:\n    print(m)", "ans = []\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ans.append([1, n])\nfor i in ans:\n    print(*i)", "import sys\ninput = iter(sys.stdin.read().splitlines()).__next__\nTC = int(input())\nfor tc in range(TC):\n    N = int(input())\n    A = list(map(int, input().split()))\n    print(1, N)", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    n = int(inp())\n    inp()\n    print(1, n)\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "import sys\nimport math\nFILE = False\nif FILE:\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\n\ndef get_int():\n    return int(sys.stdin.readline())\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef write_int(n):\n    return sys.stdout.write(str(n) + '\\n')\n\ndef write_list(list):\n    sys.stdout.write(' '.join(map(str, list)) + '\\n')\n\ndef compute_cost(x, y):\n    if x == 0:\n        return y * y\n    if y == 0:\n        return x * x\n    return x * y\ntest_cases = get_int()\nfor test in range(test_cases):\n    n = get_int()\n    input = [int(x) for x in get_string().split()]\n    print(1, n)", "def main():\n    t = int(input())\n    result = []\n    for i in range(t):\n        n = int(input())\n        arr = [int(x) for x in input().split()]\n        result.append('1 ' + str(n))\n    print(*result, sep='\\n')\nmain()", "import sys\ninp = sys.stdin.readline\ninput = lambda : inp().strip()\nii = lambda : int(input())\nmi = lambda : map(int, input().split())\nli = lambda : list(map(int, input().split()))\nfor _ in range(ii()):\n    n = ii()\n    nums = li()\n    print(1, n)", "import os.path\nfrom math import gcd, floor, ceil\nfrom collections import *\nimport sys\nmod = 1000000007\nINF = float('inf')\n\ndef st():\n    return list(sys.stdin.readline().strip())\n\ndef li():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef mp():\n    return map(int, sys.stdin.readline().split())\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef pr(n):\n    return sys.stdout.write(str(n) + '\\n')\n\ndef prl(n):\n    return sys.stdout.write(str(n) + ' ')\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nt = inp()\nfor i in range(t):\n    n = inp()\n    l = li()\n    print(1, n)", "t = int(input())\no = []\nfor i in range(t):\n    n = int(input())\n    a = input().split()\n    a2 = set(a)\n    L = 0\n    R = n - 1\n    if len(a2) == len(a):\n        o.append((L + 1, R + 1))\n    else:\n        for j in range(n):\n            if a[j] in a2:\n                L = j\n                break\n        for j in range(n - 1, -1, -1):\n            if a[j] in a2:\n                R = j\n                break\n        o.append((L + 1, R + 1))\nfor e in o:\n    print(e[0], e[1])", "def solve():\n    n = input()\n    a = input()\n    print('1 ' + n)\nt = int(input())\nfor _ in range(t):\n    solve()", "import sys\nfrom bisect import bisect_left, bisect_right\nfrom heapq import heapify, heappush, heappop\nfrom collections import deque\nfrom math import gcd, sqrt, log10, log2, floor, ceil, sqrt\nfrom collections import deque, defaultdict\ninput = sys.stdin.readline\n\ndef il():\n    return [int(a) for a in input().strip().split()]\n\ndef ip():\n    return input().strip()\n\ndef ii():\n    return int(input())\nmod = 1000000000 + 7\ndx = [-1, -2, 1, 2, 2, -2, -1, 1]\ndy = [2, 1, 2, 1, -1, -1, -2, -2]\nfor _ in range(ii()):\n    n = ii()\n    arr = il()\n    print(1, n)", "t = int(input())\ns = []\nfor i in range(t):\n    n = int(input())\n    p = -n\n    k = list(map(int, input().split()))\n    if len(k) - 1 - len(set(k)) < -1:\n        s.append('1 1')\n    else:\n        s.append('1 ' + str(len(k)))\nfor h in s:\n    print(h)", "t = int(input())\nfor i in range(t):\n    print(f'1 {input()}')\n    input()", "import sys\nfrom collections import *\nsys.setrecursionlimit(10 ** 5)\nitr = (line for line in sys.stdin.read().strip().split('\\n'))\nINP = lambda : next(itr)\n\ndef ni():\n    return int(INP())\n\ndef nl():\n    return [int(_) for _ in INP().split()]\n\ndef solve(n, a):\n    print(1, n)\nt = ni()\nfor case in range(t):\n    n = ni()\n    a = nl()\n    solve(n, a)", "t = input()\nfor i in range(0, int(t)):\n    n = input()\n    a = input().split(' ')\n    print('1 ' + n)", "def ans(n, a):\n    return [1, n]\nT = int(input())\nr = []\nfor i in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = ans(n, a)\n    r.append(c)\nfor i in range(T):\n    print(' '.join(map(str, r[i])))", "t = int(input())\nfor coasdjf in range(t):\n    n = int(input())\n    s = input()\n    print(f'1 {n}')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input()\n    print(1, n)", "for _ in range(int(input())):\n    n = int(input())\n    input()\n    print(f'1 {n}')", "for _ in range(int(input())):\n    N = int(input())\n    input()\n    print('1', N)", "def sol():\n    n = int(input())\n    for i in range(n):\n        le = int(input())\n        l = map(int, input().split(' '))\n        print(1, le)\nsol()", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    b = input()\n    print(1, a)", "for _ in range(int(input())):\n    x = int(input())\n    input()\n    print(1, x)", "t = int(input())\nfor i in range(t):\n    n = input()\n    a = list(input().split())\n    print('1 ', n)", "for _ in range(int(input())):\n    n = int(input())\n    input()\n    print(1, n)", "n = input()\nfor d in range(int(n)):\n    input()\n    a = input().split()\n    print('1 ' + str(len(a)))", "for _ in range(int(input())):\n    print(1, input())\n    input()", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    _ = input()\n    print(1, n)", "n = int(input())\nfor i in range(n):\n    x = int(input())\n    l = input().split(' ')\n    print(1, len(l))", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    b = input()\n    print(1, end=' ')\n    print(a)", "for i in range(int(input())):\n    n = int(input())\n    dp = input()\n    print(1, n)", "for s in range(int(input())):\n    bucket = input()\n    paint = input()\n    print('1', bucket)", "for i in range(int(input())):\n    print(1, int(input()))\n    input()", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    l1 = input()\n    print('1', n)", "for _ in range(int(input())):\n    n = int(input())\n    x = input()\n    print(1, n)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input().split()\n    print(1, n)", "for (n, _) in ((int(input()), input()) for _ in range(int(input()))):\n    print(1, n)", "for _ in range(int(input())):\n    n = int(input())\n    x = input()\n    print(1, n)", "for _ in range(int(input())):\n    n = int(input())\n    x = input()\n    print(1, n)", "t = int(input())\nfor _ in range(t):\n    (n, a) = (int(input()), (int(i) for i in input().split()))\n    res = (1, n)\n    print(*res)", "for i in range(int(input())):\n    i = input()\n    input()\n    print(1, i)", "for _ in range(int(input())):\n    n = int(input())\n    arr = input().split()\n    print(1, n)", "n = int(input())\nfor i in range(n):\n    x = int(input())\n    y = input()\n    print(1, x)", "for i in range(int(input())):\n    n = int(input())\n    list1 = input().split()\n    print(1, n)", "x = int(input())\nfor i in range(x):\n    p = int(input())\n    data = input()\n    data_lst = data.split(' ')\n    print(1, len(data_lst))", "for _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    print(1, n)", "for _ in range(int(input())):\n    n = int(input())\n    l = input()\n    print(1, n)", "for i in range(int(input())):\n    a = int(input())\n    b = input().split()\n    print(1, ' ', a)", "for t in range(0, int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(1, n)", "T = int(input())\nfor tc in range(T):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    print(1, n)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = map(int, input().split())\n    print(1, n)", "T = int(input())\nfor h in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(f'1 {n}')", "x = int(input())\nwhile x:\n    x -= 1\n    y = int(input())\n    z = input()\n    print(1, y, sep=' ')", "for _ in range(int(input())):\n    print(1, int(input()))\n    _ = input()", "def sol():\n    n = int(input())\n    a = map(int, input().split())\n    print(1, n)\nfor i in range(int(input())):\n    sol()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    xs = map(int, input().split())\n    print(1, n)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input()\n    print(1, n)", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    b = input()\n    print(1, a)", "for run in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(1, n)", "for run in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(1, n)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = input().split()\n    print(1, n)", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    colors = map(int, input().split())\n    print(1, n)", "for __ in range(int(input())):\n    n = int(input())\n    a = input()\n    print(1, n)", "def processing(array, n):\n    return f'{1} {n}'\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    array = [int(i) for i in input().split()]\n    print(processing(array, n))\n    t -= 1", "t = int(input())\nfor t1 in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(1, n)", "for i in range(int(input())):\n    n = int(input())\n    k = [int(i) for i in input().split()]\n    print(1, n)", "for i in range(int(input())):\n    n = int(input())\n    k = [int(i) for i in input().split()]\n    print(1, n)", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    print(1, n)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = map(int, input().split())\n    print(1, n)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    print(1, n)", "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    print(1, n)", "def solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(1, len(arr))\n    return\nfor _ in range(int(input())):\n    solve()", "t = int(input())\nfor p in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    print(1, n)", "t = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(1, n)"]