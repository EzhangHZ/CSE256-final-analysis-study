["for s in [*open(0)][1:]:\n    (a, b) = sorted(map(int, s.split()))\n    print(a + min(b, 3 * a) >> 2)", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(min(a, b, a + b >> 2))", "import sys\ninput = sys.stdin.readline\nT = int(input())\nfor _ in range(T):\n    (a, b) = map(int, input().split())\n    print(min((a + b) // 4, a, b))", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(min(a, b, a + b >> 2))", "from sys import stdin, stdout\nfrom collections import defaultdict\ninput = stdin.readline\nfrom random import randint\nimport math\nimport sys\nsys.setrecursionlimit(10 ** 6)\n\ndef foo(a, b):\n    if a >= 3 * b or b >= 3 * a:\n        return min(a, b)\n    return (a + b) // 4\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(foo(a, b))", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(min(a, b, a + b >> 2))", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(min(a, b, a + b >> 2))", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(min(a, b, a + b >> 2))", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(min(a, b, a + b >> 2))", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(min(a, b, a + b >> 2))", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(min(a, b, a + b >> 2))", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    (a, b) = map(int, sys.stdin.readline().split())\n    res = min((a + b) // 4, min(a, b))\n    print(res)", "for s in [*open(0)][1:]:\n    (n, m) = map(int, s.split())\n    print(min((n + m) // 4, n, m))", "for s in [*open(0)][1:]:\n    (a, b) = sorted(map(int, s.split()))\n    print(a + min(b, 3 * a) >> 2)", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(min(a, b, a + b >> 2))", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(min(a, b, a + b >> 2))", "def solve(t):\n    data = [list(map(int, input().split())) for i in range(t)]\n    commands_amo = [''] * t\n    for i in range(t):\n        if data[i][0] == data[i][1]:\n            commands_amo[i] = str(data[i][0] // 2)\n        elif min(data[i]) < sum(data[i]) // 4:\n            commands_amo[i] = str(min(data[i]))\n        else:\n            commands_amo[i] = str(sum(data[i]) // 4)\n    return '\\n'.join(commands_amo)\nprint(solve(int(input())))", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(min(a, b, a + b >> 2))", "from sys import stdin, stdout\nfor _ in range(int(stdin.readline())):\n    (a, b) = map(int, stdin.readline().split())\n    ans = (a + b) // 4\n    ans = min(a, b, ans)\n    print(ans)", "import sys\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef LI1():\n    return list(map(int1, sys.stdin.readline().split()))\n\ndef LLI1(rows_number):\n    return [LI1() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline().rstrip()\ndij = [(0, 1), (1, 0), (0, -1), (-1, 0)]\ninf = 4294967295\nmd = 998244353\n\ndef solve():\n    (a, b) = LI()\n    ans = min((a + b) // 4, a, b)\n    print(ans)\nfor testcase in range(II()):\n    solve()", "from sys import stdin, stdout\nimport sys\nimport math\nimport itertools\nfrom collections import defaultdict\nsys.setrecursionlimit(10 ** 6)\nimport re\n\ndef main():\n    t = int(stdin.readline().strip())\n    for j in range(1, t + 1):\n        (a, b) = map(int, stdin.readline().strip().split())\n        pos = min(a, b)\n        if a + b >= pos * 4:\n            ans = pos\n        else:\n            ans = (a + b) // 4\n        print(ans)\nmain()", "t = int(input())\nres = []\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    max_n = (a + b) // 4\n    if a < max_n:\n        res.append(a)\n    elif b < max_n:\n        res.append(b)\n    else:\n        res.append(max_n)\nfor r in res:\n    print(r)", "import sys\ninput = lambda : sys.stdin.readline().rstrip('\\r\\n')\ninp = lambda : list(map(int, sys.stdin.readline().rstrip('\\r\\n').split()))\ntc = 1\ntc = int(input())\nfor _ in range(tc):\n    (a, b) = map(int, input().split())\n    if a + b >= 4:\n        print(min(a, b, (a + b) // 4))\n    else:\n        print(0)", "import sys\n\ndef solve(a, b):\n    if a == 0 or b == 0:\n        print(0)\n    elif a == b:\n        print((a + b) // 4)\n    else:\n        if a > b:\n            ans = min((a + b) // 4, b)\n        else:\n            ans = min((a + b) // 4, a)\n        print(ans)\n\ndef main():\n    test_case = int(sys.stdin.readline())\n    for tc in range(test_case):\n        (a, b) = map(int, sys.stdin.readline().split())\n        solve(a, b)\nmain()", "import sys\nimport bisect\nimport math\ninput = lambda : sys.stdin.readline().strip()\nmod = 10 ** 9 + 9\n\ndef solve():\n    (a, b) = map(int, input().split())\n    m = min(a, b)\n    (a, b) = (a - m, b - m)\n    x = (a + b) // 2\n    if m <= x:\n        return m\n    else:\n        y = m - x\n        return x + y // 2\nt = 1\nt = int(input())\nfor _ in range(t):\n    print(solve())", "t = int(input())\nlist1 = []\nfor i in range(t):\n    list1.append([int(x) for x in input().split()])\nfor i in range(t):\n    print(min(list1[i][0], list1[i][1], sum(list1[i]) // 4))", "import sys\n\ndef f(l, n, f):\n    a = 0\n    x = n - 1\n    while a <= x:\n        m = a + (x - a) // 2\n        if l[m] == f:\n            return m\n        elif l[m] > f:\n            x = m - 1\n        else:\n            a = m + 1\n    return None\nfor i in range(int(sys.stdin.readline())):\n    (a, b) = map(int, sys.stdin.readline().split())\n    t = (a + b) // 4\n    if min(a, b) >= t:\n        print(t)\n    else:\n        print(min(a, b))", "import sys\n\ndef input():\n    return sys.stdin.readline().rstrip()\nt = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    print(min((x + y) // 4, min(x, y)))", "import sys\nfor _ in range(int(sys.stdin.readline().strip())):\n    (a, b) = map(int, sys.stdin.readline().split())\n    ans = (a + b) // 4\n    if ans > a or ans > b:\n        ans = min(a, b)\n    sys.stdout.write(str(ans) + '\\n')", "from sys import stdin\ninput = stdin.readline\n\ndef can(m, a, b):\n    mini = min(a, b)\n    maxi = max(a, b)\n    if m <= mini and maxi - 2 * m >= 0:\n        return True\n    return False\n\ndef maxteams(a, b):\n    lb = 0\n    ub = 1000000000\n    while lb <= ub:\n        mid = lb + (ub - lb) // 2\n        if can(mid, a, b):\n            if can(mid + 1, a, b) == False:\n                return mid\n            else:\n                lb = mid + 1\n        else:\n            ub = mid - 1\n    return 0\nfor _ in range(int(input())):\n    (a, b) = [int(i) for i in input().split()]\n    print(min((a + b) // 4, min(a, b)))", "import sys\nfrom sys import stdin, stdout\nfrom math import ceil, floor, sqrt, log, log2, log10\nfrom collections import Counter\nint_max = float('inf')\nint_min = -float('inf')\nmod = 10 ** 9 + 7\nANS = []\ninput = stdin.readline\n\ndef solve():\n    pass\nt = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    print(min(a, b, (a + b) // 4))", "def cal(x, y):\n    if x >= 3 * y or y >= 3 * x:\n        return min(x, y)\n    else:\n        return (x + y) // 4\nn = input()\noutput = []\nfor i in range(int(n)):\n    (x, y) = map(int, input().split())\n    output.append(str(cal(int(x), int(y))))\nprint('\\n'.join(output))", "def team(a, b):\n    return min((a + b) // 4, a, b)\nx = int(input())\nm = []\nfor i in range(x):\n    z = input()\n    z1 = z.split(' ')\n    z2 = [int(t) for t in z1]\n    m.append(z2)\nfor j in range(x):\n    print(team(m[j][0], m[j][1]))", "number = int(input())\nfinal = []\nfor i in range(0, number):\n    pm = input()\n    pm = pm.split()\n    for i in range(len(pm)):\n        pm[i] = int(pm[i])\n    p = pm[0]\n    m = pm[1]\n    small = 0\n    big = 0\n    mini = 0\n    if p < m:\n        small = p\n        big = m\n    else:\n        small = m\n        big = p\n    mini = min((small + big) // 4, small)\n    final.append(mini)\nfor i in range(len(final)):\n    final[i] = str(final[i])\nfinal = '\\n'.join(final)\nprint(final)", "r = int(input())\nnum = []\nfor i in range(r):\n    num.append(input().split())\nfor i in range(r):\n    a = int(num[i][0])\n    b = int(num[i][1])\n    print(min(a, b, (a + b) // 4))", "import sys\ninput = sys.stdin.readline\nM = 1000000007\n\ndef solve():\n    (a, b) = map(int, input().split())\n    return min(a, b, (a + b) // 4)\nfor _ in range(int(input())):\n    print(solve())", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(min(a, b, a + b >> 2))", "def solver(a, b):\n    result = 0\n    sum_val = a + b\n    offset = 4\n    if a > b:\n        lower_val = b\n        higher_val = a\n    elif a < b:\n        lower_val = a\n        higher_val = b\n    else:\n        counter_2 = a // 2\n        return int(counter_2)\n    if sum_val < offset:\n        return 0\n    if higher_val >= lower_val * 3:\n        return lower_val\n    return sum_val // 4\nres_list = []\ncount_t = int(input())\nfor i in range(count_t):\n    (a, b) = map(int, input().split())\n    res = solver(a, b)\n    res_list.append(res)\nfor i in res_list:\n    print(i)", "k = []\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    if (a + b) // 4 < a and (a + b) // 4 < b:\n        k.append((a + b) // 4)\n    else:\n        k.append(min(a, b))\nfor t in k:\n    print(t)", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(min(a, b, (a + b) // 4))", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(min(a, b, a + b >> 2))", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(min(a, b, a + b >> 2))", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(min(a, b, a + b >> 2))", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(min(a, b, a + b >> 2))", "from sys import stdin\n\ndef solve():\n    results = []\n    for _ in range(int(stdin.readline().strip())):\n        (a, b) = map(int, stdin.readline().rstrip().split())\n        c = min(a, b)\n        ans = min((a + b) // 4, c)\n        results.append(ans)\n    print('\\n'.join(map(str, results)))\nsolve()", "t = int(input())\nsalida = list()\nfor i in range(t):\n    aux = input().split()\n    a = 0.0\n    b = 0.0\n    if int(aux[0]) >= int(aux[1]):\n        a = int(aux[0])\n        b = int(aux[1])\n    else:\n        a = int(aux[1])\n        b = int(aux[0])\n    if b == 0 or a + b < 4:\n        salida.append(0)\n    elif a == b:\n        salida.append(b // 2)\n    elif a >= 3 * b:\n        salida.append(b)\n    else:\n        salida.append(int((a - b) / 2 + (3 * b - a) / 4))\nfor s in salida:\n    print(s)", "from sys import stdin, stdout\nfrom collections import defaultdict\ninput = stdin.readline\nfrom random import randint\nimport math\nimport sys\nsys.setrecursionlimit(10 ** 6)\n\ndef foo(a, b):\n    if a < b:\n        (a, b) = (b, a)\n    if a == 0 or b == 0 or a + b < 4:\n        return 0\n    if a + b == 4:\n        return 1\n    if a >= 3 * b or b >= 3 * a:\n        return min(a, b)\n    if a == b:\n        return a // 2\n    diff = a - b\n    steps = (a - b) // 2\n    if steps != 0:\n        return steps + foo(a - 3 * steps, b - steps)\n    elif b > 100:\n        z = (b - 10) // 2\n        return z + foo(a - 2 * z, b - 2 * z)\n    else:\n        return 1 + foo(a - 3, b - 1)\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    try:\n        print(foo(a, b))\n    except:\n        print(str(a) + '-' + str(b))", "n_of_inputs = int(input())\nteams = [map(int, input().split()) for _ in range(n_of_inputs)]\nfor team in teams:\n    team = sorted(team, reverse=True)\n    if team[1] * 3 <= team[0]:\n        print(team[1])\n    elif team[0] - team[1] < 2:\n        print(team[1] // 2)\n    else:\n        x = (team[1] - team[0]) // -2\n        team[0] -= x * 3\n        team[1] -= x\n        print(x + team[1] // 2)", "arr = []\nfor i in range(int(input())):\n    arr.append(list(map(int, input().split())))\nfor a in arr:\n    if min(a) < 1:\n        print(0)\n    else:\n        print(min(sum(a) // 4, min(a)))", "arr = []\nfor i in range(int(input())):\n    arr.append(list(map(int, input().split())))\nfor a in arr:\n    (m, s) = (min(a), sum(a) // 4)\n    o = min(s, m)\n    if m < 1:\n        print(0)\n    else:\n        print(o)", "t = int(input(''))\nx = []\nfor i in range(t):\n    x.append(input('').split())\nfor i in x:\n    a = int(i[0])\n    b = int(i[1])\n    n = (a + b) // 4\n    if a < n:\n        n = a\n    if b < n:\n        n = b\n    print(n)", "t = int(input(''))\nres = []\nfor i in range(t):\n    (a, b) = input('').split()\n    a = int(a)\n    b = int(b)\n    n = (a + b) // 4\n    if a < n:\n        n = a\n    if b < n:\n        n = b\n    res.append(n)\nfor i in res:\n    print(i)", "import math\nimport sys\nimport itertools\nimport fractions\nwtf = sys.stdin.read()\nwtf = wtf.strip().split('\\n')\nmem = {}\nfor t in wtf[1:]:\n    (a, b) = map(int, t.split())\n    c = (a + b) // 4\n    d = min(a, b)\n    print(c if c <= d else d)\n    continue\n    if a == b:\n        print(a // 2)\n    else:\n        c = max(a, b)\n        d = min(a, b)\n        (q, r) = divmod(c, 3)\n        ans = 0\n        for i in range(q + 1):\n            print(a, b, c, d, q, r)\n            if d <= q:\n                ans = d\n                break\n            (Q, R) = divmod(d - q, 3)\n            if R == 0:\n                ans = q + Q\n                break\n            r += 3\n            q -= 1\n        print(ans)", "import sys\ninput = sys.stdin.read()\ninput = input.strip().split('\\n')\nfor line in input[1:]:\n    group = line.split(' ')\n    m = int(group[0])\n    p = int(group[1])\n    if m == 0 or p == 0:\n        print(0)\n    else:\n        total = m + p\n        smallest = min(m, p)\n        print(min(smallest, total // 4))", "t = int(input())\nfor i in range(t):\n    (m, p) = map(int, input().split())\n    if m // 3 > p:\n        print(p)\n    elif p // 3 > m:\n        print(m)\n    else:\n        print((m + p) // 4)", "for i in range(int(input())):\n    (coders, pros) = map(int, input().split())\n    if coders * 3 >= pros and pros * 3 >= coders:\n        print((coders + pros) // 4)\n    else:\n        print(min(pros, coders))", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    s = 0\n    if b > a:\n        (a, b) = (b, a)\n    s = (a + b) // 4\n    if s > b:\n        print(b)\n    else:\n        print(s)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    num = (a + b) // 4\n    print(min(a, b, num))", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if a > b:\n        if a >= 3 * b:\n            print(b)\n        else:\n            print(int((3 * b - a) / 4 + (a - b) / 2))\n    elif 3 * a <= b:\n        print(a)\n    else:\n        print(int((3 * a - b) / 4 + (b - a) / 2))", "def func(a, b):\n    tt = (a + b) // 4\n    if tt <= a and tt <= b:\n        return tt\n    elif tt <= a:\n        return b\n    else:\n        return a\nfor t in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(func(a, b))", "def main():\n    t = int(input())\n    for _ in range(0, t):\n        (a, b) = map(int, input().split(' '))\n        print(min(a, min(b, int((a + b) / 4))))\nmain()", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    mini = min(a, b)\n    maxi = max(a, b)\n    if maxi >= 3 * mini:\n        ans = mini\n    else:\n        ans = (a + b) // 4\n    print(ans)", "x = int(input())\nwhile x != 0:\n    (c, d) = map(int, input().split())\n    val = min(int((c + d) / 4), c, d)\n    print(val)\n    x = x - 1", "t = int(input())\nfor _ in range(t):\n    a = input().strip().split(' ')\n    p = int(a[0])\n    m = int(a[1])\n    ans = 0\n    t = (p + m) // 4\n    if p <= t:\n        ans = p\n    elif m <= t:\n        ans = m\n    else:\n        ans = t\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    teams = (a + b) // 4\n    if teams <= a and teams <= b:\n        print(teams)\n    else:\n        print(min(a, b))", "for _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    s1 = (m + n) // 4\n    s2 = min(m, n)\n    if s1 < s2:\n        print(s1)\n    else:\n        print(s2)", "for _ in range(int(input())):\n    (a, b) = sorted(map(int, input().split()))\n    if a * 3 >= b:\n        print((a + b) // 4)\n    else:\n        print(a)", "for x in range(int(input())):\n    (p, q) = list(map(int, input().split()))\n    print(min((p + q) // 4, min(p, q)))", "t = int(input())\nfor i in range(t):\n    (a, b) = [int(i) for i in input().split()]\n    p = (a + b) // 4\n    print(min(a, b, p))", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    n = (a + b) // 4\n    if a == b:\n        print(n)\n    elif a < b and a >= n:\n        print(n)\n    elif a < b and a < n:\n        print(a)\n    elif b < a and b >= n:\n        print(n)\n    elif b < a and b < n:\n        print(b)", "import math\nanswers = []\nans = 0\nn = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    c = a\n    if a > b:\n        c = b\n        b = a\n        a = c\n    ost = a + b\n    if (b - a) // 2 > a:\n        ans += a\n        a = 0\n        b = b - 3 * a\n    else:\n        ans += (b - c) // 2\n        a -= (b - c) // 2\n        b -= (b - c) // 2 * 3\n    c = a\n    ans_c = min(c // 2, b // 2)\n    a -= min(c // 2, b // 2) * 2\n    b -= min(c // 2, b // 2) * 2\n    ans = ans_c + ans\n    answers.append(ans)\n    ans = 0\nfor i in range(n):\n    print(answers[i])", "t = int(input())\nfor _ in range(t):\n    k = input().split(' ')\n    x = int(k[0])\n    y = int(k[1])\n    tam = int((x + y) / 4)\n    if x == y:\n        print(int(x / 2))\n    elif x < y:\n        if tam < x:\n            print(tam)\n        else:\n            print(x)\n    elif tam < y:\n        print(tam)\n    else:\n        print(y)", "t = int(input())\nfor i in range(t):\n    s = input().split()\n    a = int(s[0])\n    b = int(s[1])\n    print(min(min(a, b), (a + b) // 4))", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    print(min(a, b, (a + b) // 4))", "n = int(input())\n\ndef solve(a, b):\n    if a == 0 or b == 0:\n        return 0\n    tmpA = a\n    if b > a:\n        a = b\n        b = tmpA\n    return min(b, (a + b) // 4)\nwhile n > 0:\n    (a, b) = list(map(int, input().split(' ')))\n    print(solve(a, b))\n    n -= 1", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    print(min([a, b, (a + b) // 4]))", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    x = int((a + b) / 4)\n    if x > b:\n        x = b\n    elif x > a:\n        x = a\n    if x < 1:\n        print(0)\n    else:\n        print(x)", "for _ in range(int(input())):\n    (a, b) = [int(x) for x in input().split()]\n    print(min(a, b, (a + b) // 4))", "import math\n\ndef intlist():\n    return [int(i) for i in input().split(' ')]\n\ndef stringlsit():\n    return input().split(' ')\n\ndef solve():\n    (a, b) = intlist()\n    return min(a, b, (a + b) // 4)\nt = input()\nfor tt in range(int(t)):\n    print(solve())", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if a >= b:\n        if 3 * b <= a:\n            print(b)\n            continue\n        else:\n            summ = (a - b) // 2\n            a -= summ * 3\n            b -= summ\n            summ += (a + b) // 4\n            print(summ)\n            continue\n    elif 3 * a <= b:\n        print(a)\n        continue\n    else:\n        summ = (b - a) // 2\n        b -= summ * 3\n        a -= summ\n        summ += (a + b) // 4\n        print(summ)\n        continue", "for _ in range(int(input())):\n    (a, b) = [int(i) for i in input().split()]\n    print(min(a, b, (a + b) // 4))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(min(a, b, (a + b) // 4))", "import math\nletters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\nt = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    MAX_TEAM = (a + b) // 4\n    if a >= MAX_TEAM:\n        if b >= MAX_TEAM:\n            print(MAX_TEAM)\n        else:\n            print(b)\n    else:\n        print(a)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    print(min(a, b, (a + b) // 4))", "def team():\n    (a, b) = map(int, input().split())\n    min_val = min(a, b)\n    temp = (a + b) // 4\n    return min(min_val, temp)\ntestCase = int(input())\nfor _ in range(testCase):\n    print(team())", "for _ in range(int(input())):\n    (p, m) = input().split()\n    p = int(p)\n    m = int(m)\n    if p <= 3 * m and m <= 3 * p:\n        print((p + m) // 4)\n        continue\n    else:\n        print(min(p, m))", "for _ in range(int(input())):\n    (a, b) = list(map(int, input().split()))\n    print(min(a, b, (a + b) // 4))", "t = int(input())\nfor _ in range(t):\n    line = input()\n    (a, b) = [int(q) for q in line.split()]\n    print(min((a + b) // 4, a, b))", "def team(a, b):\n    if a > b:\n        (a, b) = (b, a)\n    if a == 0:\n        return 0\n    if 3 * a <= b:\n        return a\n    return (a + b) // 4\ntotal = int(input())\nfor i in range(total):\n    line = input().split()\n    a = int(line[0])\n    b = int(line[1])\n    print(team(a, b))", "for i in range(int(input())):\n    (x, y) = map(int, input().split())\n    z = (x + y) // 4\n    if min(x, y) >= z:\n        print(z)\n    else:\n        print(min(x, y))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = a if a < b else b\n    d = (a + b) // 4\n    s = c if c < d else d\n    print(s)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    if a > b:\n        big = a\n        sma = b\n    else:\n        big = b\n        sma = a\n    if big > sma * 3:\n        big = sma * 3\n    ans = int((big + sma - (big + sma) % 4) / 4)\n    print(ans)", "for t in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a <= b * 3 and b <= a * 3:\n        print((a + b) // 4)\n    else:\n        print(min(a, b))", "for i in range(int(input())):\n    a = input().split()\n    l = []\n    for z in range(2):\n        l.append(int(a[0 + z]))\n    o = l[0] + l[1]\n    op = o // 4\n    if o < 4:\n        print(0)\n    elif op <= l[0] and op <= l[1]:\n        print(op)\n    elif op >= l[0] and op <= l[1]:\n        print(l[0])\n    elif op <= l[0] and op >= l[1]:\n        print(l[1])", "t = int(input())\nODD = {'1', '3', '5', '7', '9'}\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    if a > b:\n        (a, b) = (b, a)\n    if b >= 3 * a:\n        print(a)\n    else:\n        print((a + b) // 4)", "for i in range(int(input().strip())):\n    (a, b) = map(int, input().strip().split())\n    if a == b:\n        print((a + b) // 4)\n    elif a >= 3 * b:\n        print(b)\n    elif b >= 3 * a:\n        print(a)\n    else:\n        print((a + b) // 4)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    m = min(a, b)\n    x = max(a, b)\n    a = x - m\n    if a // 2 >= m:\n        print(m)\n    else:\n        m = m - a // 2\n        print(m // 2 + a // 2)", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    c = (a + b) // 4\n    print(min(a, b, c))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = min((n + m) // 4, min(n, m))\n    print(a)"]