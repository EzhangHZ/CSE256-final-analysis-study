["t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    l = 0\n    r = n - 1\n    left = []\n    right = []\n    while l < r:\n        while l < n and s[l] != '1':\n            l += 1\n        while r >= 0 and s[r] != '0':\n            r -= 1\n        if l >= r:\n            break\n        left.append(l + 1)\n        right.append(r + 1)\n        l += 1\n        r -= 1\n    l = len(left)\n    r = len(right)\n    right = right[::-1]\n    if l + r == 0:\n        print('0')\n    else:\n        print('1')\n        print(l + r, end=' ')\n        for e in left:\n            print(e, end=' ')\n        for e in right:\n            print(e, end=' ')\n        print()", "def fun(ans):\n    o = []\n    z = []\n    i = 0\n    j = len(ans) - 1\n    while i < j:\n        if ans[i] != '1':\n            i += 1\n        if ans[j] != '0':\n            j -= 1\n        if i < j and ans[j] == '0' and (ans[i] == '1'):\n            o.append(i + 1)\n            z.append(j + 1)\n            i += 1\n            j -= 1\n    x = o + z[::-1]\n    return x\nfor _ in range(int(input())):\n    x = input()\n    arr = input()\n    x = fun(arr)\n    if not x:\n        print(0)\n    else:\n        print(1)\n        print(len(x), end=' ')\n        for i in x:\n            print(i, end=' ')\n        print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    v = 0\n    op = []\n    c = s.count('1')\n    for i in range(n):\n        if s[i] == '0' and i > n - 1 - c:\n            op.append(i + 1)\n            v += 1\n        elif s[i] == '1' and i <= n - 1 - c:\n            op.append(i + 1)\n            v += 1\n    if v == 0:\n        print(0)\n    else:\n        print(1)\n        print(v, end=' ')\n        for i in op:\n            print(i, end=' ')\n        print()", "import sys\ninp = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    a = list(input().strip())\n    r = []\n    while True:\n        i = 0\n        j = len(a) - 1\n        f = []\n        b = []\n        while True:\n            while i < len(a):\n                if a[i] == '1':\n                    break\n                i += 1\n            while j >= 0:\n                if a[j] == '0':\n                    break\n                j -= 1\n            if i < j:\n                f.append(i + 1)\n                b.append(j + 1)\n                (a[i], a[j]) = (a[j], a[i])\n                z = 1\n            else:\n                break\n        if len(f):\n            b.reverse()\n            r.append(f + b)\n        else:\n            break\n    print(len(r))\n    for i in r:\n        print(len(i), end=' ')\n        print(' '.join(map(str, i)))\n\ndef main():\n    for i in range(int(inp())):\n        solve()\nmain()", "for _ in range(int(input())):\n    input()\n    s = [int(x) for x in input()]\n    x = [0, 0]\n    for i in s:\n        x[i] += 1\n    y = []\n    for (i, j) in enumerate(s):\n        if j == 1 and i < x[0]:\n            y.append(i + 1)\n        elif j == 0 and i >= x[0]:\n            y.append(i + 1)\n    print(1 if y else 0)\n    if y:\n        print(len(y), *y)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    a = 0\n    for i in range(n):\n        if s[i] == '0':\n            a += 1\n    ans = []\n    for i in range(n):\n        if i < a and s[i] == '1':\n            ans += [i + 1]\n        elif i >= a and s[i] == '0':\n            ans += [i + 1]\n    if len(ans) == 0:\n        print(0)\n    elif len(ans) > 0:\n        print(1)\n        print(len(ans), end=' ')\n        for i in ans:\n            print(i, end=' ')\n        print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    a = sorted(s)\n    a = ''.join(a)\n    if s == a:\n        print(0)\n    else:\n        count = 0\n        l = []\n        for i in range(n):\n            if a[i] == s[i]:\n                pass\n            else:\n                count += 1\n                l.append(i + 1)\n        l = sorted(l)\n        print(1)\n        print(count, *l)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    f0 = []\n    f1 = []\n    for (i, x) in enumerate(s):\n        if x == '0':\n            f0.append(i + 1)\n        else:\n            f1.append(i + 1)\n    f0.reverse()\n    if not f0 or not f1 or f0[0] < f1[0]:\n        print(0)\n        continue\n    print(1)\n    res = []\n    for i in range(min(len(f1), len(f0))):\n        if f1[i] < f0[i]:\n            res.append(f0[i])\n            res.append(f1[i])\n    print(len(res), end=' ')\n    res.sort()\n    for x in res:\n        print(x, end=' ')\n    print()", "T = int(input())\nwhile T:\n    T -= 1\n    n = int(input())\n    s = input()\n    on = 0\n    zr = 0\n    for i in s:\n        if i == '1':\n            on += 1\n        else:\n            zr += 1\n    if ''.join(sorted(s)) == s:\n        print(0)\n        continue\n    print(1)\n    a = []\n    for i in range(len(s)):\n        if i < zr and s[i] == '1':\n            a.append(i)\n        elif s[i] == '0' and i >= zr:\n            a.append(i)\n    print(len(a), end=' ')\n    for i in a:\n        print(i + 1, end=' ')\n    print()", "for i in range(int(input())):\n    n = int(input())\n    string = input()\n    zero = string.count('0')\n    one = string.count('1')\n    (notcorz, notcorro) = ([], [])\n    for j in range(zero, n):\n        if string[j] == '0':\n            notcorro.append(j)\n    for j in range(zero):\n        if string[j] == '1':\n            notcorz.append(j)\n    if len(notcorz) + len(notcorro) == 0:\n        print(0)\n        continue\n    else:\n        print(1)\n        print(len(notcorro) + len(notcorz), end=' ')\n        for el in notcorz:\n            print(el + 1, end=' ')\n        for el in notcorro:\n            print(el + 1, end=' ')\n        print()", "for ii in range(int(input())):\n    n = int(input())\n    s = list(input())\n    (a, o, z, co, cz, cou) = ([], [], [], 0, 0, 0)\n    for jj in range(n):\n        if s[jj] == '0':\n            cz += 1\n            z.append(jj)\n        else:\n            co += 1\n            o.append(jj)\n    for jj in o:\n        if jj < cz:\n            a.append(jj + 1)\n        else:\n            break\n    for jj in z:\n        if jj >= cz:\n            a.append(jj + 1)\n    if a:\n        print(1)\n        print(len(a), *a)\n    else:\n        print(0)", "t = int(input())\nwhile t:\n    t = t - 1\n    n = int(input())\n    s = input()\n    q = sorted(s)\n    res = []\n    for i in range(n):\n        if s[i] != q[i]:\n            res.append(i)\n    if len(res) == 0:\n        print(0)\n    else:\n        print(1)\n        ans = []\n        for i in res:\n            ans.append(i + 1)\n        print(len(res), *ans)", "ret = []\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    how1 = s.count('1')\n    f = []\n    ans = '0' * (n - how1) + '1' * how1\n    for i in range(n):\n        if s[i] != ans[i]:\n            f.append(i + 1)\n    if f:\n        g = [1, len(f)]\n        g.extend(f)\n        ret.append(g)\n    else:\n        ret.append([0])\nfor i in range(t):\n    if ret[i][0] == 1:\n        print(1)\n        print(*ret[i][1:])\n    else:\n        print(0)", "def dosth(n, st):\n    arr = []\n    ids = sorted(st)\n    for (x, (i, j)) in enumerate(zip(st, ids)):\n        if i != j:\n            arr.append(x + 1)\n    if not arr:\n        print(0)\n        return\n    print(1)\n    print(len(arr), *arr)\nt = eval(input())\nfor _ in range(t):\n    n = eval(input())\n    st = input()\n    dosth(n, st)", "def solve(n, s):\n    left = 0\n    right = n - 1\n    ans1 = []\n    ans2 = []\n    while left < n and right >= 0:\n        while s[left] != '1':\n            left += 1\n            if left == n:\n                return (ans1, ans2)\n        while s[right] != '0':\n            right -= 1\n            if right == -1:\n                return (ans1, ans2)\n        if left < right:\n            ans1.append(left + 1)\n            ans2.insert(0, right + 1)\n            left += 1\n            right -= 1\n        else:\n            return (ans1, ans2)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    (out, outt) = solve(n, s)\n    out.extend(outt)\n    if len(out) == 0:\n        print(0)\n    else:\n        print(1)\n        print(len(out), end=' ')\n        for ele in out:\n            print(ele, end=' ')\n        print()", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    l = list(s)\n    l = sorted(l)\n    (a1, a2) = ([], [])\n    for i in range(n):\n        if s[i] != l[i] and s[i] == '1':\n            a1.append(i + 2 - 1)\n    for i in range(n - 1, -1, -1):\n        if s[i] != l[i] and l[i] == '1':\n            a2 = [i + 1] + a2\n    if not (a1 != [] or a2 != []):\n        print(0)\n    else:\n        print(1)\n        print(len(a1 + a2), *a1, *a2)", "for _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    zero = s.count('0')\n    ans = []\n    for i in range(zero):\n        if s[i] == '1':\n            ans.append(i + 1)\n    for i in range(zero, n):\n        if s[i] == '0':\n            ans.append(i + 1)\n    if ans:\n        print(1)\n        print(len(ans), *ans)\n    else:\n        print(0)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    a = ''.join(sorted(s))\n    if a == s:\n        print(0)\n    else:\n        ans = []\n        for i in range(n):\n            if a[i] != s[i]:\n                ans.append(i + 1)\n        print(1)\n        print(len(ans), *ans)", "def isSorted(s):\n    if s == s.sort():\n        return True\n    else:\n        return False\n\ndef solve(s):\n    s = [int(x) for x in list(s)]\n    if s == sorted(s):\n        return (0, 0)\n    arr = []\n    j = len(s) - 1\n    for i in range(len(s)):\n        if s[i] == 0:\n            continue\n        else:\n            while j > i:\n                if s[j] == 1:\n                    j -= 1\n                    continue\n                else:\n                    arr.append(i + 1)\n                    arr.append(j + 1)\n                    j -= 1\n                    break\n    arr.sort()\n    return (1, [len(arr)] + arr)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    (val, arr) = solve(s)\n    if val == 0:\n        print(0)\n    else:\n        print(val)\n        print(*arr)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    s = input()\n    i = 0\n    j = n - 1\n    while i < n and s[i] == '0':\n        i += 1\n    while j >= 0 and s[j] == '1':\n        j -= 1\n    a = []\n    b = []\n    while i < j and i < n and (j >= 0):\n        a.append(i)\n        b.append(j)\n        i += 1\n        j -= 1\n        while i < n and s[i] == '0':\n            i += 1\n        while j >= 0 and s[j] == '1':\n            j -= 1\n    b.reverse()\n    ans = a + b\n    if len(ans) == 0:\n        t -= 1\n        print('0')\n        continue\n    print(1)\n    print(len(ans), end=' ')\n    if len(ans) > 0:\n        print(' '.join([str(a + 1) for a in ans]))\n    t -= 1", "test = int(input())\nfor _ in range(test):\n    n = int(input())\n    s = input()\n    pos = []\n    (start, end) = (0, n - 1)\n    while start < end:\n        while start < end and s[start] != '1':\n            start += 1\n        while start < end and s[end] != '0':\n            end -= 1\n        if start < end:\n            pos.append(start + 1)\n            pos.append(end + 1)\n            start += 1\n            end -= 1\n    if pos:\n        pos.sort()\n        print(1)\n        print(len(pos), end=' ')\n        for p in pos:\n            print(p, end=' ')\n        print()\n    else:\n        print(0)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = list(input())\n    one = s.count('1')\n    zero = s.count('0')\n    arr = []\n    c = 0\n    flag = 0\n    for i in range(n):\n        if i <= zero - 1:\n            if s[i] == '1':\n                arr.append(i)\n                flag = 1\n        elif i > zero - 1:\n            if s[i] == '0':\n                arr.append(i)\n                flag = 1\n    if flag == 0:\n        print(0)\n        continue\n    for i in range(len(arr) // 2):\n        (s[arr[i]], s[arr[len(arr) - 1 - i]]) = (s[arr[len(arr) - 1 - i]], s[arr[i]])\n    print(1)\n    print(len(arr), end=' ')\n    for i in range(len(arr)):\n        print(arr[i] + 1, end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(int(input()))\n    lis = input()\n    c = 0\n    s1 = ''\n    s = ''\n    x = n - 1\n    y = 0\n    while x >= 0 or y <= x:\n        if lis[x] == '1':\n            pass\n        else:\n            for y1 in range(y, x):\n                if lis[y1] == '0':\n                    pass\n                else:\n                    c += 1\n                    s1 += ' ' + str(y1 + 1)\n                    s = str(x + 1) + ' ' + s\n                    y = y1 + 1\n                    break\n        x -= 1\n    if c:\n        print(1)\n        print(str(c * 2) + s1 + ' ' + s)\n    else:\n        print(c)", "t = int(input())\nfor case in range(t):\n    n = int(input())\n    s = list(input())\n    swap = []\n    k = 0\n    for i in range(n):\n        if s[i] == '1':\n            k += 1\n    for i in range(n):\n        if i < n - k and s[i] == '1':\n            swap.append(i + 1)\n        elif i >= n - k and s[i] == '0':\n            swap.append(i + 1)\n    swap_str = str(len(swap)) + ' '\n    for i in range(len(swap)):\n        swap_str = swap_str + str(swap[i]) + ' '\n    if len(swap) != 0:\n        print('1')\n        print(swap_str[:-1])\n    else:\n        print('0')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    one = s.count('1')\n    if not one:\n        print(0)\n    else:\n        pos = list()\n        for i in range(n - one):\n            if s[i] == '1':\n                pos.append(str(i + 1))\n        if pos == []:\n            print(0)\n        else:\n            posz = list()\n            for i in range(n - one, n):\n                if s[i] == '0':\n                    posz.append(str(i + 1))\n            print(1)\n            print(len(pos) + len(posz), ' '.join(pos), ' '.join(posz))", "import sys\nT = int(sys.stdin.readline())\nfor r in range(T):\n    t = sys.stdin.readline()\n    a = list(sys.stdin.readline().rstrip())\n    b = sorted(a)\n    count = 0\n    result = []\n    for i in range(len(a)):\n        if a[i] != b[i]:\n            result.append(i + 1)\n            count += 1\n    if count == 0:\n        print('0')\n    else:\n        print('1')\n        print(count, end=' ')\n        for i in result:\n            print(i, end=' ')\n        print('')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(input())\n    ans = 0\n    al = []\n    x = []\n    while a != list(sorted(a)):\n        i = 0\n        j = n - 1\n        while i < j:\n            if a[i] == '0':\n                i += 1\n            if a[j] == '1':\n                j -= 1\n            if a[i] != '0' and a[j] != '1' and (i < j):\n                (a[i], a[j]) = (a[j], a[i])\n                x.append(i + 1)\n                x.append(j + 1)\n                i += 1\n                j -= 1\n        al.append([len(x)] + list(sorted(x)))\n        x = []\n    print(len(al))\n    for i in al:\n        print(*i)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    v = ''.join(sorted(list(s)))\n    a = []\n    for i in range(n):\n        if s[i] != v[i]:\n            a.append(i + 1)\n    if a:\n        print(1)\n    print(len(a), *a)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    k = n\n    ans = []\n    i = 0\n    j = n - 1\n    while i < j:\n        while i < j and s[i] != '1':\n            i += 1\n        while i < j and s[j] != '0':\n            j -= 1\n        if s[i] == '1' and s[j] == '0':\n            ans += [i + 1] + [j + 1]\n        i += 1\n        j -= 1\n    if len(ans) == 0:\n        print(0)\n        continue\n    ans.sort()\n    print(1)\n    ans = [len(ans)] + ans\n    print(*ans)", "import sys\nimport bisect\nimport math\ninput = lambda : sys.stdin.readline().strip()\nmod = 10 ** 9 + 9\n\ndef solve():\n    n = int(input())\n    s = input()\n    if '10' not in s:\n        print(0)\n    else:\n        print(1)\n        zeros = [i for i in range(n) if s[i] == '0']\n        end = len(zeros) - 1\n        a = []\n        for i in range(n):\n            if end < 0 or i > zeros[end]:\n                break\n            if s[i] == '1':\n                a.extend([i, zeros[end]])\n                end -= 1\n        a.sort()\n        print(str(len(a)) + ' ' + ' '.join((str(x + 1) for x in a)))\nt = 1\nt = int(input())\nfor _ in range(t):\n    solve()", "t = int(input())\nfor m in range(t):\n    n = int(input())\n    s = list(input())\n    i = 0\n    k = 0\n    j = n - 1\n    a = []\n    while i < j:\n        while i <= j and s[j] == '1':\n            j -= 1\n        while i <= j and s[i] == '0':\n            i += 1\n        if i <= j:\n            a = a[:k] + [i + 1] + [j + 1] + a[k:]\n            k += 1\n            j -= 1\n            i += 1\n    if k:\n        print(1)\n        print(k * 2, *a)\n    else:\n        print(0)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(input())\n    aa = sorted(a)\n    if a == aa:\n        print(0)\n    else:\n        s = []\n        for i in range(n):\n            if a[i] != aa[i]:\n                s.append(i + 1)\n        print(1)\n        print(len(s), *s)", "def solve():\n    for test in range(int(input())):\n        n = int(input())\n        s = input()\n        n0 = s.count('0')\n        ans = []\n        for i in range(n0):\n            if s[i] == '1':\n                ans.append(i + 1)\n        for i in range(n0, n):\n            if s[i] == '0':\n                ans.append(i + 1)\n        if len(ans) > 0:\n            print(1)\n            print(len(ans), end=' ')\n            print(' '.join((str(x) for x in ans)))\n        else:\n            print(0)\nsolve()", "for _ in range(int(input())):\n    n = int(input())\n    arr = input()\n    zero = arr.count('0')\n    ans = []\n    for i in range(zero):\n        if arr[i] == '1':\n            ans.append(i + 1)\n    for i in range(n - 1, zero - 1, -1):\n        if arr[i] == '0':\n            ans.append(i + 1)\n    if not ans:\n        print(0)\n        continue\n    print(1)\n    print(len(ans), end=' ')\n    print(*sorted(ans))", "t = int(input())\nfor anh in range(t):\n    n = int(input())\n    s = list(input())\n    ss = sorted(s)\n    if s == ss:\n        print(0)\n    else:\n        print(1)\n        l = []\n        for i in range(n):\n            if s[i] != ss[i]:\n                l.append(str(i + 1))\n        print(len(l), end=' ')\n        print(' '.join(l))", "def solve():\n    n = int(input())\n    s = input()\n    ones = []\n    prefix_sum = [0] * n\n    if s[0] == '1':\n        prefix_sum[0] = 1\n    for i in range(n):\n        if s[i] == '1':\n            ones.append(i)\n            prefix_sum[i] = prefix_sum[i - 1] + 1\n        else:\n            prefix_sum[i] = prefix_sum[i - 1]\n    sub = 0\n    result = []\n    for i in reversed(range(n)):\n        if s[i] == '0' and prefix_sum[i] - sub > 0:\n            result.append(ones[sub])\n            result.append(i)\n            sub += 1\n    result.sort()\n    if len(result) == 0:\n        print(0)\n        return\n    print(1)\n    print(len(result), end=' ')\n    for i in result:\n        print(i + 1, end=' ')\n    print()\n\ndef main():\n    tt = int(input())\n    for t in range(tt):\n        solve()\nmain()", "for tt in range(int(input())):\n    n = int(input())\n    s = input()\n    l = [int(x) for x in list(s)]\n    ll = l + []\n    ll.sort()\n    m = 0\n    ansm = ''\n    if l == ll:\n        print(0)\n        continue\n    c0 = l.count(0)\n    c1 = l.count(1)\n    ixx = []\n    for i in range(n - c1):\n        if l[i] == 1:\n            ixx.append(str(i + 1))\n    for i in range(n - c1, n):\n        if l[i] == 0:\n            ixx.append(str(i + 1))\n    print(1)\n    print(f\"{len(ixx)} {' '.join(ixx)}\")", "for tt in range(int(input())):\n    n = int(input())\n    s = input()\n    l = [int(x) for x in list(s)]\n    b_a = l + []\n    b_a.sort()\n    m = 0\n    ansm = ''\n    if l == b_a:\n        print(0)\n        continue\n    c0 = l.count(0)\n    c1 = l.count(1)\n    ans = []\n    for i in range(n - c1):\n        if l[i] == 1:\n            ans.append(str(i + 1))\n    for i in range(n - c1, n):\n        if l[i] == 0:\n            ans.append(str(i + 1))\n    print(1)\n    print(f\"{len(ans)} {' '.join(ans)}\")", "for _ in range(int(input())):\n    safd = input()\n    s = list(input())\n    ans = []\n    while s != sorted(s):\n        l = []\n        i = 0\n        j = len(s) - 1\n        while i < j:\n            while i < len(s) and s[i] != '1':\n                i += 1\n            while j >= 0 and s[j] != '0':\n                j -= 1\n            if i < len(s) and s[i] == '1' and (j >= 0) and (s[j] == '0') and (i < j):\n                l.append(i)\n                l.append(j)\n            i += 1\n            j -= 1\n        l = sorted(l)\n        ans.append(l)\n        zeros = 0\n        ones = 0\n        for k in l:\n            if s[k] == '0':\n                zeros += 1\n            else:\n                ones += 1\n        for k in l:\n            if zeros > 0:\n                s[k] = '0'\n                zeros -= 1\n            else:\n                s[k] = '1'\n                ones -= 1\n    print(len(ans))\n    for g in ans:\n        print(len(g), end=' ')\n        for t in g:\n            print(t + 1, end=' ')\n        print()", "q = int(input())\nfor tc in range(q):\n    n = int(input())\n    s = input()\n    t = ''.join(sorted(s))\n    ans = []\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            ans.append(i)\n    val = 1 if len(ans) > 0 else 0\n    print(val)\n    if val > 0:\n        print(len(ans), end=' ')\n    for elem in range(len(ans)):\n        print(ans[elem] + 1, end=' ')\n    print()", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    s = input()\n    ones = []\n    for j in range(m):\n        if s[j] == '1':\n            ones.append(j)\n    zeros = []\n    for j in range(len(ones)):\n        if s[m - 1 - j] == '0':\n            zeros.append(m - 1 - j)\n        else:\n            ones.remove(m - 1 - j)\n    l = ones + zeros\n    if len(l):\n        print(1)\n        print(len(l), end=' ')\n        l.sort()\n        for i in range(len(l)):\n            print(l[i] + 1, end=' ')\n        print()\n    else:\n        print(0)", "def main():\n    for t in range(int(input())):\n        n = int(input())\n        string = list(input())\n        ones = string.count('1')\n        zeros = string.count('0')\n        ans = []\n        for (i, j) in enumerate(string):\n            if i < zeros:\n                if j == '1':\n                    ans.append(i + 1)\n            elif j == '0':\n                ans.append(i + 1)\n        if ans:\n            print(1)\n            print(len(ans), end=' ')\n            print(*ans, sep=' ')\n        else:\n            print(0)\nmain()", "tst = int(input())\nfor i in range(tst):\n    n = int(input())\n    s = input()\n    srt = ''.join(sorted(list(s)))\n    ans = []\n    if srt == s:\n        print(0)\n    else:\n        print(1)\n        for i in range(len(s)):\n            if srt[i] != s[i]:\n                ans.append(i + 1)\n        print(len(ans), end=' ')\n        print(*ans)", "import sys, os, io\nimport math\nimport bisect\nt = int(input())\nfor a0 in range(t):\n    n = int(input())\n    s = input()\n    z = 0\n    for i in s:\n        if i == '0':\n            z += 1\n    res = []\n    for i in range(n):\n        if i < z and s[i] == '1':\n            res.append(i + 1)\n        if i >= z and s[i] == '0':\n            res.append(i + 1)\n    if len(res) == 0:\n        print(0)\n    else:\n        print(1)\n        res.insert(0, len(res))\n        print(*res)", "def revSort(string):\n    ans = []\n    n = len(string)\n    l = []\n    for x in string:\n        l.append(int(x))\n    m = sorted(l)\n    if l == m:\n        return 0\n    else:\n        for x in range(n):\n            if l[x] != m[x]:\n                ans.append(x + 1)\n    return [len(ans)] + ans\nt = int(input())\nfinal = []\nfor _ in range(t):\n    n = int(input())\n    string = input()\n    a = revSort(string)\n    if a == 0:\n        final.append(0)\n    else:\n        final.append(1)\n        final.append(a)\nfor _ in range(len(final)):\n    p = final[_]\n    if type(p) == list:\n        for x in p:\n            print(x, end=' ')\n        print()\n    else:\n        print(p)", "for _ in range(int(input())):\n    n = int(input())\n    str_ = input()\n    ind = []\n    cnt = str_.count('0')\n    for i in range(cnt):\n        if str_[i] == '1':\n            ind.append(i + 1)\n    for i in range(cnt, n):\n        if str_[i] == '0':\n            ind.append(i + 1)\n    if len(ind) == 0:\n        print(0)\n    else:\n        print(1)\n        print(len(ind), *ind)", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    s = input()\n    z = s.count('0')\n    o = s.count('1')\n    arr = [i for i in s]\n    lis = sorted(s)\n    ans = []\n    for i in range(z):\n        if s[i] == '1':\n            ans.append(i + 1)\n    for i in range(z, n):\n        if s[i] == '0':\n            ans.append(i + 1)\n    if ans:\n        print(1)\n        print(len(ans), end=' ')\n        print(*ans)\n    else:\n        print(0)", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    s = input()\n    z = s.count('0')\n    o = s.count('1')\n    ans = []\n    for i in range(z):\n        if s[i] == '1':\n            ans.append(i + 1)\n    for i in range(z, n):\n        if s[i] == '0':\n            ans.append(i + 1)\n    if ans:\n        print(1)\n        print(len(ans), end=' ')\n        print(*ans)\n    else:\n        print(0)", "import sys\nimport bisect\nimport math\ninput = lambda : sys.stdin.readline().strip()\nmod = 10 ** 9 + 9\n\ndef solve():\n    n = int(input())\n    s = input()\n    if '10' not in s:\n        print(0)\n    else:\n        print(1)\n        zeros = [i for i in range(n) if s[i] == '0']\n        end = len(zeros) - 1\n        a = []\n        for i in range(n):\n            if end < 0 or i > zeros[end]:\n                break\n            if s[i] == '1':\n                a.extend([i, zeros[end]])\n                end -= 1\n        a.sort()\n        print(str(len(a)) + ' ' + ' '.join((str(x + 1) for x in a)))\nt = 1\nt = int(input())\nfor _ in range(t):\n    solve()", "for _ in range(int(input())):\n    (_, line) = (input(), input())\n    count_one = line.count('1')\n    index_change = [i for (i, el) in enumerate(line, 1) if i <= len(line) - count_one and el == '1' or (i > len(line) - count_one and el == '0')]\n    if len(index_change) != 0:\n        print(1)\n        print(len(index_change), *index_change)\n    else:\n        print(0)", "n = int(input())\nfor i in range(n):\n    x = int(input())\n    s0 = input()\n    s1 = [int(i) for i in str(s0)]\n    s2 = sorted(s1)\n    ans = []\n    for i in range(len(s1)):\n        if s1[i] != s2[i]:\n            ans.append(i + 1)\n    if len(ans) == 0:\n        print(0)\n    else:\n        print(1)\n        print(len(ans), end=' ')\n        print(' '.join(map(str, ans)))", "q = int(input())\nfor tc in range(q):\n    n = int(input())\n    s = input()\n    t = ''.join(sorted(s))\n    ans = []\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            ans.append(i)\n    val = 1 if len(ans) > 0 else 0\n    print(val)\n    if val > 0:\n        print(len(ans), end=' ')\n    for elem in range(len(ans)):\n        print(ans[elem] + 1, end=' ')\n    print()", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    s = input()\n    sort_s = ''.join(sorted(s))\n    index = []\n    for i in range(n):\n        if s[i] != sort_s[i]:\n            index.append(i + 1)\n    if len(index) == 0:\n        print(0)\n    else:\n        print(1)\n        print(len(index), end=' ')\n    for i in index:\n        print(i, end=' ')\n    print()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    c = 0\n    l1 = []\n    l = ''.join(sorted(s))\n    for i in range(len(s)):\n        if s[i] != l[i]:\n            l1.append(i)\n    if len(l1) == 0:\n        print(0)\n    else:\n        print(1)\n    if len(l1) > 0:\n        print(len(l1), end=' ')\n    for i in l1:\n        print(i + 1, end=' ')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    c = 0\n    l1 = []\n    l = ''.join(sorted(s))\n    for i in range(len(s)):\n        if s[i] != l[i]:\n            l1.append(i)\n    if len(l1) == 0:\n        print(0)\n    else:\n        print(1)\n        print(len(l1), end=' ')\n        for i in l1:\n            print(i + 1, end=' ')\n        print()", "def solve(n, s):\n    if s == sorted(s):\n        print(0)\n        return\n    j = n - 1\n    while j >= 0 and s[j] == '1':\n        j -= 1\n    i = 0\n    while i < n and s[i] == '0':\n        i += 1\n    ans = []\n    while i < j and j >= 0 and (i < n):\n        if s[i] == '1' and s[j] == '0':\n            ans.append(i + 1)\n            ans.append(j + 1)\n            i += 1\n            j -= 1\n        else:\n            if s[i] == '0':\n                i += 1\n            if s[j] == '1':\n                j -= 1\n    ans = [len(ans)] + sorted(ans)\n    print(1)\n    print(*ans)\nfor _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    solve(n, s)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = str(input())\n    b = list(a)\n    m = 0\n    for x in b:\n        m += '1' == x\n    m = n - m\n    res = []\n    for i in range(n):\n        if i < m:\n            if b[i] == '1':\n                res.append(i)\n        elif b[i] == '0':\n            res.append(i)\n    if len(res) == 0:\n        print(0)\n        continue\n    print(1)\n    print(len(res), end=' ')\n    for x in res:\n        print(x + 1, end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    string = input()\n    sort = sorted(string)\n    misplace = []\n    for i in range(n):\n        if string[i] != sort[i]:\n            misplace.append(i + 1)\n    if len(misplace):\n        print(1)\n        print(len(misplace), end=' ')\n        print(*misplace)\n    else:\n        print(0)", "def flip(st):\n    i1 = st.index(1)\n    st.reverse()\n    i2 = st.index(0)\n    st.reverse()\n    i2 = n - i2 - 1\n    temp = st[i1]\n    st[i1] = st[i2]\n    st[i2] = temp\n    return (i1, i2, st)\nN = int(input())\nfor i in range(N):\n    sub = []\n    n = int(input())\n    s = list(input())\n    s = [int(s[i]) for i in range(n)]\n    c = 0\n    while s != sorted(s):\n        (a, b, s) = flip(s)\n        sub = sub + [a, b]\n        c = c + 1\n    print(int(bool(c)), '\\n')\n    sub.sort()\n    if bool(c):\n        print(len(sub), end=' ')\n        for i in range(len(sub)):\n            print(sub[i] + 1, end=' ')\n        print('\\n')", "for j in range(int(input())):\n    n = int(input())\n    s = list(input())\n    ss = sorted(s)\n    if s == ss:\n        print(0)\n    else:\n        print(1)\n        l = []\n        for i in range(n):\n            if s[i] != ss[i]:\n                l.append(str(i + 1))\n        print(len(l), end=' ')\n        print(' '.join(l))", "for i in range(int(input())):\n    n = int(input())\n    string = input()\n    ans = []\n    low = 0\n    high = n - 1\n    cnt = 0\n    while low <= high:\n        if string[low] == '1':\n            while string[high] == '1' and high > low:\n                high -= 1\n            if string[high] == '0':\n                ans.append(low + 1)\n                ans.append(high + 1)\n                high -= 1\n                cnt += 2\n        low += 1\n    if ans == []:\n        print(0)\n    else:\n        print(1)\n        print(cnt, end=' ')\n        for j in range(0, cnt, 2):\n            print(ans[j], end=' ')\n        for j in range(cnt - 1, -1, -2):\n            print(ans[j], end=' ')\n        print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(input())\n    c = sorted(a)\n    ans = 0\n    one = a.count('1')\n    two = a.count('0')\n    ck = []\n    for j in range(n - 1):\n        if a == c:\n            break\n        ans += 1\n        now = 0\n        rep = []\n        for i in range(n - one, n):\n            if a[i] == '0':\n                rep.append(i)\n                now += 1\n        ll = now\n        for i in range(two):\n            if a[i] == '1':\n                rep.append(i)\n                ll -= 1\n        rep.sort()\n        ck.append(rep)\n        for i in range(len(rep) // 2):\n            (a[rep[i]], a[rep[len(rep) - i - 1]]) = (a[rep[len(rep) - i - 1]], a[rep[i]])\n    print(ans)\n    for i in ck:\n        print(len(i), end=' ')\n        for j in i:\n            print(j + 1, end=' ')\n        print()", "for t in range(int(input())):\n    l = int(input())\n    s = input()\n    zC = 0\n    for i in s:\n        if i == '0':\n            zC += 1\n    yadda = []\n    for i in range(0, zC):\n        if s[i] == '1':\n            yadda.append(i + 1)\n    for i in range(zC, l):\n        if s[i] == '0':\n            yadda.append(i + 1)\n    if len(yadda) == 0:\n        print(0)\n    else:\n        print(1)\n        print(len(yadda), ' '.join([str(i) for i in yadda]))", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    s = input()\n    left = 0\n    left_idxes = []\n    right = m - 1\n    right_idxes = []\n    while left <= right:\n        while left <= right and s[right] == '1':\n            right -= 1\n        while left <= right and s[left] == '0':\n            left += 1\n        if left <= right and s[left] == '1' and (s[right] == '0'):\n            left_idxes.append(str(left + 1))\n            right_idxes.append(str(right + 1))\n            left += 1\n            right -= 1\n    if len(left_idxes) == 0:\n        print('0')\n    else:\n        print('1')\n        right_idxes.reverse()\n        print('{} {}'.format(len(left_idxes) * 2, ' '.join(left_idxes + right_idxes)))", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    ch = str(input())\n    ct1 = 0\n    for i in range(n):\n        if ch[i] == '1':\n            ct1 = ct1 + 1\n    ct0 = 0\n    ls = list()\n    for i in range(ct1):\n        if ch[n - i - 1] == '0':\n            ct0 = ct0 + 1\n            ls.append(n - i)\n    if ct0 == 0:\n        print(0)\n    else:\n        print(1)\n        print(ct0 * 2, end=' ')\n        ls.reverse()\n        lp = ct0\n        j = 0\n        while lp > 0:\n            if ch[j] == '1':\n                print(j + 1, end=' ')\n                lp = lp - 1\n            j = j + 1\n        for i in range(ct0):\n            print(ls[i], end=' ')\n        print()", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    k = ''.join(sorted(s))\n    a = []\n    for i in range(len(s)):\n        if s[i] != k[i]:\n            a.append(i)\n    val = 1 if len(a) > 0 else 0\n    print(val)\n    if val > 0:\n        print(len(a), end=' ')\n    for j in range(len(a)):\n        print(a[j] + 1, end=' ')\n    print()", "for j in range(int(input())):\n    n = int(input())\n    s = list(input())\n    ss = sorted(s)\n    if s == ss:\n        print(0)\n    else:\n        print(1)\n        l = []\n        for i in range(n):\n            if s[i] != ss[i]:\n                l.append(str(i + 1))\n        print(len(l), end=' ')\n        print(' '.join(l))", "for j in range(int(input())):\n    n = int(input())\n    s = list(input())\n    ss = sorted(s)\n    if s == ss:\n        print(0)\n    else:\n        print(1)\n        l = []\n        for i in range(n):\n            if s[i] != ss[i]:\n                l.append(str(i + 1))\n        print(len(l), end=' ')\n        print(' '.join(l))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    a = ''.join(sorted(s))\n    ans = []\n    if s == a:\n        print(0)\n    else:\n        print(1)\n        for i in range(n):\n            if s[i] != a[i]:\n                ans.append(i + 1)\n        ans.insert(0, len(ans))\n        print(*ans)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(input())\n    b = sorted(a)\n    c = []\n    if a == b:\n        print(0)\n    else:\n        i = 0\n        for x in a:\n            if x != b[i]:\n                c.append(i + 1)\n            i += 1\n        print(1)\n        print(len(c), *c)", "from sys import stdin\nMOD = 10000000000.0 + 7\n\ndef rl() -> str:\n    return stdin.readline().rstrip()\n\ndef ri() -> str:\n    return int(rl())\n\ndef rii() -> str:\n    return list(map(int, rl().split()))\n\ndef form(mean, dev):\n    return abs(mean - dev)\nt = ri()\nfor _ in range(t):\n    n = ri()\n    s = rl()\n    ones = s.count('1')\n    swaps = []\n    for (i, e) in enumerate(s[:len(s) - ones]):\n        if e == '1':\n            swaps.append(str(i + 1))\n    for (i, e) in enumerate(s[len(s) - ones:]):\n        if e == '0':\n            swaps.append(str(i + (len(s) - ones) + 1))\n    if len(swaps) > 1:\n        print(1)\n        print(len(swaps), ' '.join(swaps))\n    else:\n        print(0)", "def readint():\n    return int(input())\n\ndef readarr():\n    return list(map(int, input().split()))\n\ndef readmore():\n    return map(int, input().split())\n\ndef main():\n    t = readint()\n    for _ in range(t):\n        n = readint()\n        s = input()\n        (i, j) = (0, n - 1)\n        i_list = []\n        while i < j:\n            if s[i] == '0':\n                i += 1\n                continue\n            if s[j] == '1':\n                j -= 1\n                continue\n            i_list.append(i + 1)\n            i_list.append(j + 1)\n            i += 1\n            j -= 1\n        k = len(i_list)\n        if k > 0:\n            print(1)\n            i_list.sort()\n            print(k, *i_list)\n        else:\n            print(0)\nmain()", "import sys\nimport math\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef SI():\n    return sys.stdin.readline().strip()\n\ndef gcd(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return x\n\ndef pow(n, exponent):\n    if exponent == 0 or n == 1:\n        return 1\n    if exponent == 1:\n        return n\n    if exponent == -1:\n        return 1 / n\n    a = exponent // 2\n    return pow(n, a) * pow(n, exponent - a)\nfor __ in range(II()):\n    n = II()\n    st = SI()\n    arr = list(st)\n    arr.sort()\n    cost = 0\n    ans = []\n    for i in range(n):\n        if arr[i] != st[i]:\n            cost += 1\n            ans.append(i + 1)\n    if len(ans) == 0:\n        print(0)\n    else:\n        print(1)\n        print(len(ans), *ans)", "x = int(input())\nfor t in range(x):\n    n = int(input())\n    s = input()\n    ls = sorted(s)\n    ans = []\n    for i in range(len(ls)):\n        if s[i] != ls[i]:\n            ans.append(i + 1)\n    if len(ans) == 0:\n        print(0)\n    else:\n        print(1)\n        print(len(ans), end=' ')\n        for i in ans:\n            print(i, end=' ')\n        print()", "q = int(input())\nfor tc in range(q):\n    n = int(input())\n    s = input()\n    t = ''.join(sorted(s))\n    ans = []\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            ans.append(i)\n    val = 1 if len(ans) > 0 else 0\n    print(val)\n    if val > 0:\n        print(len(ans), end=' ')\n    for elem in range(len(ans)):\n        print(ans[elem] + 1, end=' ')\n    print()", "class Solution:\n\n    def reverseSort(self, binary: str) -> None:\n        ptr1 = 0\n        ptr2 = len(binary) - 1\n        ans = []\n        while ptr1 < ptr2:\n            if binary[ptr1] == '1' and binary[ptr2] == '0':\n                ans.append(ptr1 + 1)\n                ans.append(ptr2 + 1)\n                ptr1 += 1\n                ptr2 -= 1\n            elif binary[ptr1] == '0':\n                ptr1 += 1\n            elif binary[ptr2] == '1':\n                ptr2 -= 1\n        if len(ans) == 0:\n            print(0)\n        else:\n            print(1)\n            print(len(ans), *sorted(ans))\nobj = Solution()\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    binary = input()\n    obj.reverseSort(binary)", "for _ in range(int(input())):\n    n = int(input())\n    s = str(input())\n    s1 = sorted(s)\n    ans = []\n    for i in range(n):\n        if s[i] != s1[i]:\n            ans.append(i + 1)\n    ans.insert(0, len(ans))\n    if ans[0] == 0:\n        print(*ans)\n    else:\n        print(1)\n        print(*ans)", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    a = input()\n    a = [int(i) for i in a]\n    s = sum(a)\n    d = []\n    for j in range(n - s):\n        if a[j] == 1:\n            d.append(j + 1)\n    for j in range(n - s, n):\n        if a[j] == 0:\n            d.append(j + 1)\n    if len(d) == 0:\n        print(0)\n    else:\n        print(1)\n        print(len(d), *d)", "import collections\nimport math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = list(input())\n    s1 = []\n    (left, right) = (0, n - 1)\n    move = 1\n    while left <= right:\n        if s[left] == '1' and s[right] == '0':\n            s1.append(left)\n            s1.append(right)\n            left += 1\n            right -= 1\n        elif s[left] == '0':\n            left += 1\n        elif s[right] == '1':\n            right -= 1\n    if len(s1) == 0:\n        print(0)\n    else:\n        s1.sort()\n        print(move)\n        print(len(s1), end=' ')\n        for i in s1:\n            print(i + 1, end=' ')\n        print('\\r')", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    s = input()\n    srtd = ''.join(sorted(s))\n    ans = []\n    for i in range(len(s)):\n        if s[i] != srtd[i]:\n            ans.append(i)\n    flag = 1 if len(ans) > 0 else 0\n    print(flag)\n    if flag > 0:\n        print(len(ans), end=' ')\n    for i in range(len(ans)):\n        print(ans[i] + 1, end=' ')\n    print()", "for j in range(int(input())):\n    n = int(input())\n    s = list(input())\n    ss = sorted(s)\n    if s == ss:\n        print(0)\n    else:\n        print(1)\n        l = [i + 1 for i in range(n) if s[i] != ss[i]]\n        print(len(l), *l)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    res = ['0'] * s.count('0') + ['1'] * s.count('1')\n    i = []\n    for x in range(n):\n        if s[x] != res[x]:\n            i.append(x + 1)\n    if i:\n        print(1)\n        print(len(i), end=' ')\n        print(*i)\n    else:\n        print(0)", "class Solution:\n\n    def reverseSort(self, binary: str) -> None:\n        ptr1 = 0\n        ptr2 = len(binary) - 1\n        ans = []\n        while ptr1 < ptr2:\n            if binary[ptr1] == '1' and binary[ptr2] == '0':\n                ans.append(ptr1 + 1)\n                ans.append(ptr2 + 1)\n                ptr1 += 1\n                ptr2 -= 1\n            elif binary[ptr1] == '0':\n                ptr1 += 1\n            elif binary[ptr2] == '1':\n                ptr2 -= 1\n        if len(ans) == 0:\n            print(0)\n        else:\n            print(1)\n            print(len(ans), *sorted(ans))\nobj = Solution()\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    binary = input()\n    obj.reverseSort(binary)", "for _ in range(int(input())):\n    x = int(input())\n    y = list(input())\n    s = sorted(y)\n    if y == s:\n        print(0)\n    else:\n        print(1)\n        l = []\n        for i in range(len(y)):\n            if y[i] != s[i]:\n                l.append(i + 1)\n        print(len(l), end=' ')\n        print(*l)", "for u in range(int(input())):\n    (n, s) = (int(input()), ' ' + input())\n    (c, lst) = (s.count('1'), [])\n    for x in range(n, n - c, -1):\n        if s[x] == '0':\n            lst.append(x)\n    if len(lst) == 0:\n        print(0)\n    else:\n        print(1)\n        for x in range(n - c, 0, -1):\n            if s[x] == '1':\n                lst.append(x)\n        print(len(lst), *lst[::-1])", "test = int(input())\nfor _ in range(test):\n    n = int(input())\n    astring = input()\n    zeros = astring.count('0')\n    ans = []\n    for i in range(zeros):\n        if astring[i] == '1':\n            ans.append(i + 1)\n    for j in range(zeros, n):\n        if astring[j] == '0':\n            ans.append(j + 1)\n    x = len(ans)\n    if x > 0:\n        print(1)\n        print(x, *ans)\n    else:\n        print(x)", "q = int(input())\nfor tc in range(q):\n    n = int(input())\n    s = input()\n    t = ''.join(sorted(s))\n    ans = []\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            ans.append(i)\n    val = 1 if len(ans) > 0 else 0\n    print(val)\n    if val > 0:\n        print(len(ans), end=' ')\n    for elem in range(len(ans)):\n        print(ans[elem] + 1, end=' ')\n    print()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    l = list(s)\n    l1 = sorted(l)\n    if l == l1:\n        print(0)\n    else:\n        k = []\n        for i in range(n):\n            if s[i] != l1[i]:\n                k.append(i + 1)\n        k.insert(0, len(k))\n        print(1)\n        for i in range(len(k)):\n            print(k[i], end=' ')\n        print()", "for j in range(int(input())):\n    n = int(input())\n    s = list(input())\n    ss = sorted(s)\n    if s == ss:\n        print(0)\n    else:\n        print(1)\n        l = []\n        for i in range(n):\n            if s[i] != ss[i]:\n                l.append(str(i + 1))\n        print(len(l), end=' ')\n        print(' '.join(l))", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    s = list(sys.stdin.readline().strip())\n    sorted_string = ''.join(sorted(s))\n    res = []\n    for i in range(len(s)):\n        if s[i] != sorted_string[i]:\n            res.append(i)\n    if len(res) > 0:\n        print(1)\n        print(len(res), end=' ')\n        print(' '.join(map(lambda x: str(x + 1), res)))\n    else:\n        print(0)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(input())\n    rlst = lst[::-1]\n    try:\n        if lst.index('1') > n - rlst.index('0') - 1:\n            print(0)\n        else:\n            ans = []\n            while lst.index('1') < n - rlst.index('0') - 1:\n                one = lst.index('1')\n                zero = n - rlst.index('0') - 1\n                ans.append(one + 1)\n                ans.append(zero + 1)\n                (lst[one], lst[zero]) = (lst[zero], lst[one])\n                rlst = lst[::-1]\n            ans.sort()\n            print(1)\n            print(len(ans), end=' ')\n            print(*ans)\n    except ValueError:\n        print(0)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    rev = ''.join(sorted(s))\n    if s != rev:\n        print(1)\n        c = 0\n        ans = []\n        for i in range(n):\n            if s[i] != rev[i]:\n                c += 1\n                ans.append(i + 1)\n        print(c, *ans)\n    else:\n        print(0)", "for z in range(int(input())):\n    n = int(input())\n    s = input()\n    s1 = ''.join(sorted(s))\n    d = 0\n    for _ in range(len(s)):\n        if s[_] != s1[_]:\n            d += 1\n    if d == 0:\n        print(0)\n    else:\n        print(1)\n        print(d, end=' ')\n        for _ in range(len(s1)):\n            if s[_] != s1[_]:\n                print(_ + 1, end=' ')", "import sys\ninput = sys.stdin.readline\n\ndef solve(n, s):\n    (front, back) = (0, n - 1)\n    res = []\n    while front < back:\n        if s[back] == '1':\n            back -= 1\n        elif s[front] == '0':\n            front += 1\n        else:\n            (f, b) = ([], [])\n            while front < back:\n                if s[front] == '0':\n                    front += 1\n                    continue\n                elif s[back] == '1':\n                    back -= 1\n                    continue\n                b.append(back + 1)\n                f.append(front + 1)\n                back -= 1\n                front += 1\n            if len(f) > 0 and len(b) > 0:\n                res.append([len(f) + len(b)] + f + b[::-1])\n    print(len(res))\n    for each in res:\n        print(*each)\nfor _ in range(int(input())):\n    n = int(input())\n    s = input().strip()\n    solve(n, s)", "tcs = int(input())\nfor i in range(tcs):\n    ln = int(input())\n    st = list(map(int, input()))\n    if sorted(st) == st:\n        print(0)\n    else:\n        finalIndexes = []\n        members = 0\n        numZeros = st.count(0)\n        numOnes = st.count(1)\n        for i in range(numZeros):\n            if st[i] == 1:\n                finalIndexes.append(i + 1)\n                members += 1\n        for i in range(numZeros, ln):\n            if st[i] == 0:\n                finalIndexes.append(i + 1)\n                members += 1\n        print(1)\n        print(members, *finalIndexes)", "for _ in range(int(input())):\n    a = int(input())\n    b = input()\n    c = list(b)\n    x = sorted(c)\n    y = []\n    if c == x:\n        print(0)\n    else:\n        for i in range(len(c)):\n            if c[i] != x[i]:\n                y.append(i + 1)\n        print(1)\n        print(len(y), *y)", "cases = int(input())\nwhile cases > 0:\n    n = int(input())\n    p = list(input())\n    t = p.copy()\n    tot = 0\n    count1 = p.count('1')\n    for i in reversed(range(0, n)):\n        if p[i] == '0' and n - count1 <= i:\n            t[i] = '1'\n            tot += 2\n        elif p[i] == '1' and n - count1 > i:\n            t[i] = '0'\n    if p == t:\n        print(0)\n    else:\n        print(1)\n        print(tot, end=' ')\n        for i in range(n):\n            if p[i] != t[i]:\n                print(i + 1, end=' ')\n        print()\n    cases -= 1", "import sys\ninput = sys.stdin.readline\n\ndef check(S):\n    last_0 = -1\n    already = 0\n    first_1 = 0\n    for (i, x) in enumerate(S):\n        if x == '0':\n            last_0 = i\n        elif already == 1:\n            continue\n        else:\n            first_1 = i\n            already = 1\n    return last_0 < first_1\nT = int(input())\nfor t in range(T):\n    n = int(input())\n    s = input()\n    if check(s):\n        print(0)\n    else:\n        zero_index = n - 1\n        one_index = 0\n        onehalf = []\n        zerohalf = []\n        while one_index < zero_index:\n            while one_index < n and s[one_index] != '1':\n                one_index += 1\n            while zero_index >= 0 and s[zero_index] != '0':\n                zero_index -= 1\n            if one_index >= zero_index:\n                break\n            onehalf.append(one_index + 1)\n            zerohalf.append(zero_index + 1)\n            one_index += 1\n            zero_index -= 1\n        print(1)\n        print(len(onehalf) + len(zerohalf), end=' ')\n        for x in onehalf:\n            print(x, end=' ')\n        for x in reversed(zerohalf):\n            print(x, end=' ')\n        print()", "import math\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    k = [int(x) for x in input()]\n    i = 0\n    j = n - 1\n    l = []\n    while i < j:\n        if k[i] == 0:\n            i = i + 1\n        elif k[j] == 1:\n            j = j - 1\n        else:\n            l.append([i, j])\n            i = i + 1\n            j = j - 1\n    if len(l) > 0:\n        print(1)\n        print(len(l * 2), end=' ')\n        for i in l:\n            print(i[0] + 1, end=' ')\n        for i in l[::-1]:\n            print(i[1] + 1, end=' ')\n        print()\n    else:\n        print(0)\n    t = t - 1"]