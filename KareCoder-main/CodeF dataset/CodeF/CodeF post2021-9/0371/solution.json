["import sys\ninput = lambda : sys.stdin.readline()[:-1]\nni = lambda : int(input())\nna = lambda : list(map(int, input().split()))\nsys.setrecursionlimit(10 ** 7)\nyes = lambda : print('yes')\nYes = lambda : print('Yes')\nYES = lambda : print('YES')\nno = lambda : print('no')\nNo = lambda : print('No')\nNO = lambda : print('NO')\n\ndef f(a):\n    for i in range(len(a) - 1):\n        if a[i] > a[i + 1]:\n            return False\n    return True\nt = ni()\nfor _ in range(t):\n    (n, x) = na()\n    a = na()\n    if x * 2 <= n:\n        YES()\n        continue\n    else:\n        x = n - x\n        if x == 0:\n            if f(a):\n                YES()\n            else:\n                NO()\n            continue\n        b = a[:x] + a[-x:]\n        b = sorted(b)\n        ans = 1\n        if b[x - 1] > a[x]:\n            ans = 0\n        if b[x] < a[n - x - 1]:\n            ans = 0\n        for i in range(x, n - x - 1):\n            if a[i] > a[i + 1]:\n                ans = 0\n        if ans:\n            YES()\n        else:\n            NO()", "import sys\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef LI1():\n    return list(map(int1, sys.stdin.readline().split()))\n\ndef LLI1(rows_number):\n    return [LI1() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline().rstrip()\ninf = 10 ** 16\nmd = 998244353\n\ndef solve():\n    (n, x) = LI()\n    aa = LI()\n    l = n - x\n    r = x\n    if l >= r:\n        print('YES')\n        return\n    bb = aa[:l] + aa[r:]\n    bb.sort()\n    aa = bb[:l] + aa[l:r] + bb[l:]\n    for i in range(n - 1):\n        if aa[i] > aa[i + 1]:\n            print('NO')\n            return\n    print('YES')\nfor testcase in range(II()):\n    solve()", "from sys import stdin\n\ndef read_input():\n    (n, x) = map(int, stdin.readline().split())\n    a = list(map(int, stdin.readline().split()))\n    return (n, x, a)\n\ndef solve(n, x, a):\n    b = a[:]\n    b.sort()\n    for i in range(n - x, x):\n        if a[i] != b[i]:\n            return 'NO'\n    return 'YES'\n\ndef main():\n    t = int(stdin.readline())\n    for _ in range(t):\n        input = read_input()\n        answer = solve(*input)\n        print(answer)\nmain()", "from sys import stdin\n\ndef solve():\n    results = []\n    for _ in range(int(stdin.readline().strip())):\n        (N, X) = map(int, stdin.readline().strip().split())\n        A = list(map(int, stdin.readline().strip().split()))\n        sortedA = sorted(A)\n        if A == sortedA:\n            results.append('YES')\n            continue\n        if N <= X:\n            results.append('NO')\n            continue\n        if X <= N // 2:\n            results.append('YES')\n            continue\n        if A[N - X:X] == sortedA[N - X:X]:\n            results.append('YES')\n        else:\n            results.append('NO')\n    print('\\n'.join(map(str, results)))\nsolve()", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    (n, x) = list(map(int, stdin.readline().split()))\n    a = list(map(int, stdin.readline().split()))\n    b = sorted(a)\n    end = x\n    start = n - x\n    res = 'YES'\n    for i in range(start, end):\n        if a[i] != b[i]:\n            res = 'NO'\n            break\n    print(res)", "import random\nimport sys\n\ndef input():\n    return sys.stdin.readline().strip('\\n')\n\ndef cin_int_ls():\n    return list(map(int, input().split()))\n\ndef cin_int():\n    return int(input())\nimport random\n\ndef bf(ls, k):\n    memo = set()\n    psb = [ls]\n    memo.add(tuple(ls))\n    for _ in range(1000):\n        l = random.randint(0, len(ls) - k)\n        r = l + random.randint(k, len(ls))\n        if r < len(ls):\n            for i in psb:\n                (i[l], i[r]) = (i[r], i[l])\n                memo.add(tuple(i))\n    for i in sorted(list(memo)):\n        print(i)\n\ndef sv(ls, x):\n    if len(ls) >= 2 * x:\n        return True\n    ols = sorted(ls)\n    rg = len(ls) - x\n    n = len(ls)\n    memo = set(ols[:rg] + ols[n - rg:])\n    for i in range(len(ls) // 2 + 1):\n        if i < rg and ls[i] in memo and (ls[-i - 1] in memo):\n            continue\n        elif i >= rg and ls[i] == ols[i] and (ls[-i - 1] == ols[-i - 1]):\n            continue\n        else:\n            return False\n    return True\n\ndef main():\n    for _ in range(cin_int()):\n        (n, x) = cin_int_ls()\n        ls = cin_int_ls()\n        if sv(ls, x):\n            print('YES')\n        else:\n            print('NO')\nmain()", "import sys\nimport math\nfrom bisect import bisect_right as br\nfrom itertools import combinations as cb\n\ndef int_arr():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef str_arr():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef input():\n    return sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    (n, x) = int_arr()\n    arr = int_arr()\n    temp = arr.copy()\n    temp.sort()\n    if x <= n // 2 or arr == temp:\n        print('YES')\n        continue\n    ul = x\n    ll = n - x + 1\n    sub = arr[ll - 1:ul]\n    sub2 = temp[ll - 1:ul]\n    if sub == sub2:\n        print('YES')\n    else:\n        print('NO')", "import random\nimport sys\n\ndef input():\n    return sys.stdin.readline().strip('\\n')\n\ndef cin_int_ls():\n    return list(map(int, input().split()))\n\ndef cin_int():\n    return int(input())\nimport random\n\ndef bf(ls, k):\n    memo = set()\n    psb = [ls]\n    memo.add(tuple(ls))\n    for _ in range(1000):\n        l = random.randint(0, len(ls) - k)\n        r = l + random.randint(k, len(ls))\n        if r < len(ls):\n            for i in psb:\n                (i[l], i[r]) = (i[r], i[l])\n                memo.add(tuple(i))\n    for i in sorted(list(memo)):\n        print(i)\n\ndef sv(ls, x):\n    ols = sorted(ls)\n    rg = len(ls) - x\n    n = len(ls)\n    memo = set(ols[:rg] + ols[n - rg:])\n    if len(ls) % 2 == 1:\n        i = len(ls) // 2\n        if i >= rg:\n            if ls[i] != ols[i]:\n                return False\n    for i in range(len(ls) // 2):\n        if i < rg and ls[i] in memo and (ls[-i - 1] in memo):\n            continue\n        elif i >= rg and ls[i] == ols[i] and (ls[-i - 1] == ols[-i - 1]):\n            continue\n        else:\n            return False\n    return True\n\ndef main():\n    for _ in range(cin_int()):\n        (n, x) = cin_int_ls()\n        ls = cin_int_ls()\n        if sv(ls, x):\n            print('YES')\n        else:\n            print('NO')\nmain()", "for step in range(int(input())):\n    (n, x) = map(int, input().split())\n    nums = list(map(int, input().split()))\n    is_yes = False\n    if n // 2 >= x:\n        is_yes = True\n    elif nums[n - x:x] == sorted(nums)[n - x:x]:\n        is_yes = True\n    print('YES' if is_yes else 'NO')", "import sys\nfrom sys import stdin, stdout\nfrom math import ceil, floor, sqrt, log, log2, log10\nfrom collections import Counter\nint_max = float('inf')\nint_min = -float('inf')\nmod = 10 ** 9 + 7\nANS = []\ninput = stdin.readline\n\ndef solve():\n    pass\nt = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if n >= 2 * x:\n        print('YES')\n        continue\n    else:\n        temp = arr[:]\n        temp.sort()\n        f = 1\n        for i in range(n - x, x):\n            if temp[i] != arr[i]:\n                f = 0\n        print('YES' if f == 1 else 'NO')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 'YES'\n    b = a.copy()\n    b.sort()\n    if n >= 2 * x:\n        print(ans)\n    else:\n        for i in range(n - x, x):\n            if a[i] != b[i]:\n                ans = 'NO'\n        print(ans)", "for _ in range(int(input())):\n    (n, h) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    ans = sorted(arr)\n    flag = 1\n    for i in range(n - h, h):\n        if ans[i] != arr[i]:\n            flag = 0\n            break\n    if flag == 0:\n        print('NO')\n    else:\n        print('YES')", "games = int(input())\nres = []\nwhile games != 0:\n    nn = input()\n    nnn = list(nn.split(' '))\n    n = int(nnn[0])\n    x = int(nnn[1])\n    chisla = input()\n    m = [int(t) for t in chisla.split(' ')]\n    m2 = []\n    for z in m:\n        m2.append(z)\n    m2.sort()\n    if x <= int(n / 2):\n        res.append('YES')\n        games -= 1\n        continue\n    if x > int(n / 2):\n        new_m2 = m2[n - x:x]\n        new_m = m[n - x:x]\n        if new_m == new_m2:\n            res.append('YES')\n            games -= 1\n            continue\n        else:\n            res.append('NO')\n            games -= 1\n            continue\n    games -= 1\nfor x in res:\n    print(x)", "for __ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if n >= 2 * x:\n        print('YES')\n        continue\n    b = sorted(a)\n    if a[n - x:x] == b[n - x:x]:\n        print('YES')\n    else:\n        print('NO')", "games = int(input())\nres = []\nwhile games != 0:\n    nn = input()\n    nnn = list(nn.split(' '))\n    n = int(nnn[0])\n    x = int(nnn[1])\n    chisla = input()\n    m = [int(t) for t in chisla.split(' ')]\n    m2 = []\n    for z in m:\n        m2.append(z)\n    m2.sort()\n    if x <= int(n / 2):\n        res.append('YES')\n        games -= 1\n        continue\n    if x > int(n / 2):\n        new_m2 = m2[n - x:x]\n        new_m = m[n - x:x]\n        if new_m == new_m2:\n            res.append('YES')\n            games -= 1\n            continue\n        else:\n            res.append('NO')\n            games -= 1\n            continue\n    games -= 1\nfor x in res:\n    print(x)", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    x = list(map(int, input().split()))\n    if b >= len(x):\n        if x == sorted(x):\n            print('YES')\n        else:\n            print('NO')\n    elif a - b > b - 1:\n        print('YES')\n    else:\n        c = sorted(x)\n        if x[a - b:b] == c[a - b:b]:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 'YES'\n    b = a.copy()\n    b.sort()\n    if n >= 2 * x:\n        print(ans)\n    else:\n        for i in range(n - x, x, 1):\n            if a[i] != b[i]:\n                ans = 'NO'\n        print(ans)", "from sys import stdin\n\ndef test():\n    line = stdin.readline().split()\n    (n, k) = (int(_) for _ in line)\n    a = [int(_) for _ in stdin.readline().split()]\n    l = max(0, n - k)\n    r = min(n, k)\n    p = a[0:l] + a[r:n]\n    p.sort()\n    b = p[0:l] + a[l:r] + p[l:2 * l]\n    for i in range(0, n - 1):\n        if b[i + 1] < b[i]:\n            return False\n    return True\ntk = int(stdin.readline())\nfor i in range(0, tk):\n    if test():\n        print('YES')\n    else:\n        print('NO')", "from math import ceil, gcd\nfrom math import factorial as fact, comb as ncr\nfrom math import sqrt\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom array import array\nfrom collections import Counter as ctr\nfrom collections import deque as dq\n\ndef li():\n    return list(map(int, input().split()))\n\ndef arr(a):\n    return array('i', a)\n\ndef solve():\n    for _ in range(int(input())):\n        (n, x) = li()\n        a = li()\n        b = sorted(a)\n        if a == b:\n            print('YES')\n        elif x >= n:\n            print('NO')\n        elif n >= x * 2:\n            print('YES')\n        else:\n            lm = n - x\n            ul = x\n            f = True\n            for i in range(n - x, x):\n                if a[i] != b[i]:\n                    f = False\n                    print('NO')\n                    break\n            if f:\n                print('YES')\nsolve()", "Input = '\\n5\\n3 3\\n3 2 1\\n4 3\\n1 2 3 4\\n5 2\\n5 1 2 3 4\\n5 4\\n1 2 3 4 4\\n3 2\\n2 3 1\\n'[1:-1].split('\\n')\nt = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    A = sorted(a)\n    if a == A:\n        print('YES')\n    elif x >= n:\n        print('NO')\n    else:\n        N = n - (n - x) * 2\n        if N <= 0:\n            print('YES')\n        else:\n            P = n - x\n            print('YES' if a[P:P + N] == A[P:P + N] else 'NO')", "def solve(xs, n, k):\n    sorted_xs = sorted(xs)\n    if xs == sorted_xs:\n        return True\n    if k < n // 2:\n        return True\n    (left, right) = (n - k, k)\n    if sorted_xs[left:right] != xs[left:right]:\n        return False\n    return True\n\ndef main():\n    for _ in range(int(input())):\n        (n, x) = [int(x) for x in input().split()]\n        xs = [int(x) for x in input().split()]\n        ans = 'YES' if solve(xs, n, x) else 'NO'\n        print(ans)\nmain()", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    s = list(map(int, input().split()))\n    if x <= n // 2:\n        print('YES')\n    else:\n        u = s[:]\n        s.sort()\n        k = 2 * (x - n // 2) - n % 2\n        for j in range((n - k) // 2, (n - k) // 2 + k):\n            if s[j] != u[j]:\n                print('NO')\n                break\n        else:\n            print('YES')", "case = int(input())\nfor i in range(case):\n    (n, x) = (int(v) for v in input().split())\n    list1 = [int(u) for u in input().split()]\n    if n == 1:\n        print('YES')\n    elif n - x < 1:\n        for m in range(n):\n            if m == n - 1:\n                print('YES')\n            elif list1[m + 1] < list1[m]:\n                print('NO')\n                break\n    elif 2 * x <= n:\n        print('YES')\n    else:\n        lr = []\n        middle = []\n        left = n - x\n        for j in range(n):\n            if j < left or j > n - left - 1:\n                lr.append(list1[j])\n            else:\n                middle.append(list1[j])\n        for k in range(len(middle)):\n            if k == len(middle) - 1:\n                lr.sort()\n                if middle[0] < lr[len(lr) // 2 - 1] or middle[len(middle) - 1] > lr[len(lr) // 2]:\n                    print('NO')\n                else:\n                    print('YES')\n            elif middle[k + 1] < middle[k]:\n                print('NO')\n                break", "from collections import deque, Counter, defaultdict\nimport math\nimport heapq\nT = int(input())\nfor _ in range(T):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    a = sorted(arr)\n    if arr == a:\n        print('YES')\n    elif n - 1 < x:\n        print('NO')\n    else:\n        l1 = 0\n        l2 = l1 + x\n        r2 = n - 1\n        r1 = r2 - x\n        ans = False\n        if l2 - r1 > 1:\n            for i in range(r1 + 1, l2):\n                if a[i] != arr[i]:\n                    print('NO')\n                    ans = True\n                    break\n            if ans == False:\n                print('YES')\n        else:\n            print('YES')", "def can_sort(aa, x):\n    n = len(aa)\n    if all((aa[i] <= aa[i + 1] for i in range(n - 1))):\n        return True\n    if x <= 1:\n        return True\n    if x >= n:\n        return False\n    if x <= n - x - 1 + 1:\n        return True\n    aa_sorted = sorted(aa)\n    if all((aa[i] == aa_sorted[i] for i in range(n - x - 1 + 1, x))):\n        return True\n    return False\nn_t = int(input())\nfor t in range(n_t):\n    (n, x) = map(int, input().split(' '))\n    aa = list(map(int, input().split(' ')))\n    assert len(aa) == n\n    result = can_sort(aa, x)\n    print('YES' if result else 'NO')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    (*arr,) = map(int, input().split())\n    arr2 = arr[:]\n    arr2.sort()\n    ok = 'YES'\n    for i in range(n):\n        if arr[i] != arr2[i] and i - x < 0 and (i + x >= n):\n            ok = 'NO'\n            break\n    print(ok)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l1 = []\n    l1 = l.copy()\n    l1.sort()\n    if l == l1:\n        print('YES')\n    elif k <= n // 2:\n        print('YES')\n    elif k > n // 2:\n        c = 0\n        for i in range(n - k, k):\n            if l[i] != l1[i]:\n                c = -1\n                break\n        if c == 0:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = sorted(a)\n    check = False\n    for i in range(n):\n        if i - x < 0 and i + x >= n and (a[i] != b[i]):\n            check = True\n            break\n    if check:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    (n, x) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    if n == 1 or x <= n // 2 or a == sorted(a):\n        print('YES')\n    else:\n        b = sorted(a)\n        no = False\n        for j in range(n - x, x):\n            if a[j] != b[j]:\n                print('NO')\n                no = True\n                break\n        if not no:\n            print('YES')", "def result(x, array_list, length):\n    if length >= 2 * x:\n        print('YES')\n    else:\n        bc = array_list.copy()\n        bc.sort()\n        if bc[length - x:x] == array_list[length - x:x]:\n            print('YES')\n        else:\n            print('NO')\nfor i in range(int(input())):\n    ab = list(map(int, input().split()))\n    bc = list(map(int, input().split()))\n    result(ab[1], bc, ab[0])", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if a == sorted(a):\n        print('YES')\n    elif n >= 2 * x:\n        print('YES')\n    else:\n        flag = True\n        b = a.copy()\n        b.sort()\n        for j in range(n - x, x):\n            if a[j] != b[j]:\n                flag = False\n                break\n        if flag == False:\n            print('NO')\n        else:\n            print('YES')", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, x) = map(int, input().split())\n    (*a,) = map(int, input().split())\n    s = None\n    m = []\n    b = []\n    for i in range(n):\n        if i - x < 0 and i + x >= n:\n            if s is None:\n                s = i\n            m.append(a[i])\n        else:\n            b.append(a[i])\n    if s is None:\n        print('YES')\n    else:\n        b.sort()\n        c = b[:s] + m + b[s:]\n        a.sort()\n        if c == a:\n            print('YES')\n        else:\n            print('NO')\nfor i in range(int(input())):\n    solve()", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = sorted(a)\n    if a == s:\n        print('YES')\n    elif 2 * x > n - 1:\n        if s[n - x:x] == a[n - x:x]:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('YES')", "def f():\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    m = sorted(l)\n    for i in range(n):\n        if i - x < 0 and i + x >= n:\n            if l[i] != m[i]:\n                return 'NO'\n    return 'YES'\nfor _ in range(int(input())):\n    print(f())", "def solve():\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    sarr = sorted(arr)\n    flag = 0\n    for i in range(n):\n        if sarr[i] != arr[i]:\n            if n - i - 1 >= x or i >= x:\n                continue\n            else:\n                print('NO')\n                return\n    print('YES')\nt = int(input())\nfor i in range(t):\n    solve()", "for i in range(int(input())):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    brr = sorted(arr)\n    a = n - x\n    b = x - 1\n    for i in range(a, b + 1):\n        if arr[i] != brr[i]:\n            print('NO')\n            break\n    else:\n        print('YES')", "for i in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = sorted(l)\n    ans = 'YES'\n    for i in range(x):\n        if i + x < n:\n            continue\n        elif l[i] != s[i]:\n            ans = 'NO'\n            break\n    print(ans)", "for _ in range(int(input())):\n    (n, x) = list(map(int, input().split()))\n    n_a = list(map(int, input().split()))\n    a_s = sorted(n_a)\n    bad = 0\n    for i in range(n - x, x):\n        if a_s[i] != n_a[i]:\n            bad = 1\n            break\n    if bad:\n        print('NO')\n    else:\n        print('YES')", "from random import *\nfrom math import *\nT = int(input())\nfor t in range(T):\n    (n, x) = map(int, input().split())\n    A = list(map(int, input().split()))\n    if x >= n:\n        if A == sorted(A):\n            print('YES')\n        else:\n            print('NO')\n        continue\n    main = set()\n    for i in range(x, n):\n        main.add(i)\n    for i in range(n - 1 - x, -1, -1):\n        main.add(i)\n    if len(main) == len(A):\n        print('YES')\n        continue\n    cur = []\n    for i in range(n):\n        if i not in main:\n            cur.append(A[i])\n    if cur != sorted(cur):\n        print('NO')\n    else:\n        all = []\n        for i in main:\n            all.append(A[i])\n        all.sort()\n        if all[len(all) // 2 - 1] > cur[0] or all[len(all) // 2] < cur[-1]:\n            print('NO')\n        else:\n            print('YES')", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = sorted(a)\n    if x <= n // 2:\n        print('YES')\n    else:\n        y = 0\n        for i in range(n - x, x):\n            if a[i] != b[i]:\n                y = 1\n                break\n        if y == 0:\n            print('YES')\n        else:\n            print('NO')", "def hemose_shopping(a, x, n):\n    if 2 * x < n:\n        return 'YES'\n    a_ = sorted(a)\n    for i in range(1, n + 1):\n        if a[i - 1] != a_[i - 1]:\n            if i - x < 1:\n                if i + x > n:\n                    return 'NO'\n    return 'YES'\nt = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split(' '))\n    a = list(map(int, input().split(' ')))\n    print(hemose_shopping(a, x, n))", "def main():\n    t = int(input())\n    if t == 20000:\n        print('BRUHHH')\n    for _ in range(t):\n        (n, x) = map(int, input().split())\n        arr = list(map(int, input().split()))\n        a = arr.copy()\n        a.sort()\n        f = True\n        for i in range(n):\n            d1 = i\n            d2 = n - 1 - i\n            if arr[i] != a[i] and d1 < x and (d2 < x):\n                print('NO')\n                f = False\n                break\n        if f:\n            print('YES')\nmain()", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = sorted(a)\n    if b == a or x <= n // 2:\n        print('YES')\n    elif x >= n:\n        print('NO')\n    else:\n        z = 0\n        for i in range(n - x, x):\n            if a[i] != b[i]:\n                z = -1\n                break\n        if z == 0:\n            print('YES')\n        else:\n            print('NO')", "for fgbhjm in range(int(input())):\n    (n, x) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    if x <= n // 2 + n % 2 - 1:\n        print('YES')\n    else:\n        s = sorted(a)\n        ans = True\n        dif = x - n // 2 + n % 2 - 1\n        for i in range(n):\n            if i - 0 < x and n - i - 1 < x and (a[i] != s[i]):\n                ans = False\n                break\n        if ans:\n            print('YES')\n        else:\n            print('NO')", "def fun(arr, n, x):\n    brr = arr.copy()\n    brr.sort()\n    if arr == brr:\n        return 'YES'\n    if x <= n // 2:\n        return 'YES'\n    else:\n        if n == x:\n            return 'NO'\n        for i in range(n - x, x):\n            if arr[i] != brr[i]:\n                return 'NO'\n        return 'YES'\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    arr = [int(i) for i in input().split()]\n    print(fun(arr, n, x))", "def fun(ls, lt):\n    st = sorted(ls)\n    (n, x) = lt\n    if x <= n // 2:\n        print('YES')\n        return\n    last_index = min(x, n)\n    for i in range(0, last_index):\n        if i + x <= n - 1:\n            continue\n        elif st[i] != ls[i]:\n            print('NO')\n            return\n    print('YES')\nT = int(input())\nfor i in range(T):\n    lt = list(map(int, input().split()))\n    ls = list(map(int, input().split()))\n    fun(ls, lt)", "t = int(input())\nfor x in range(t):\n    b = [int(y) for y in input().split()]\n    n = b[0]\n    x = b[1]\n    a = [int(y) for y in input().split()]\n    if n >= 2 * x:\n        print('YES')\n    else:\n        c = []\n        for z in range(n):\n            c.append(a[z])\n        c.sort()\n        for z in range(n - x, x):\n            if a[z] != c[z]:\n                ans = -1\n                break\n            else:\n                ans = 0\n        if ans == 0:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    if x <= n // 2:\n        print('YES')\n    else:\n        f = 0\n        t = l[:]\n        t.sort()\n        for i in range(n):\n            if t[i] != l[i]:\n                f = 1\n        if f == 0:\n            print('YES')\n            continue\n        f = 0\n        for i in range(n - x, x):\n            if l[i] != t[i]:\n                f = 1\n        if f == 1:\n            print('NO')\n        else:\n            print('YES')", "T = int(input())\nfor t in range(T):\n    (n, x) = [int(k) for k in input().split(' ')]\n    a = [int(k) for k in input().split(' ')]\n    sorted_a = sorted(a)\n    middle = a[n - x:x]\n    middle_sorted = sorted_a[n - x:x]\n    if middle == middle_sorted:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor o in range(0, t, 1):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    if n >= 2 * k:\n        print('YES')\n    else:\n        c = 0\n        a = sorted(l)\n        for j in range(n - k, k, 1):\n            if a[j] != l[j]:\n                c = c + 1\n                break\n        if c == 0:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    li = list(map(int, input().split()))\n    res = li.copy()\n    res.sort()\n    if res == li:\n        print('YES')\n    else:\n        f = 0\n        for i in range(n):\n            if li[i] != res[i]:\n                if i + x < n or i - x >= 0:\n                    True\n                else:\n                    f = 1\n        if f == 1:\n            print('NO')\n        else:\n            print('YES')", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    l = list(map(int, input().split()))\n    j = sorted(l)\n    if l == j:\n        print('YES')\n    elif b >= a:\n        print('NO')\n    elif b <= a // 2:\n        print('YES')\n    elif a % 2 == 1:\n        if l[a - b:b] == j[a - b:b]:\n            print('YES')\n        else:\n            print('NO')\n    elif l[a - b:b] == j[a - b:b]:\n        print('YES')\n    else:\n        print('NO')", "import math\nt = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = []\n    for i in range(n):\n        b.append(a[i])\n    b.sort()\n    val = n - x\n    if val >= math.ceil(n / 2):\n        print('YES')\n        continue\n    flag = 0\n    for i in range(val, n - val):\n        if a[i] != b[i]:\n            flag = 1\n            break\n    if flag == 1:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    tarr = sorted(arr)\n    if arr == tarr:\n        print('YES')\n    else:\n        lind = n - 1 - x + 1\n        rind = x - 1\n        if lind > rind:\n            print('YES')\n        elif tarr[lind:rind + 1] == arr[lind:rind + 1]:\n            print('YES')\n        else:\n            print('NO')", "import sys\ninput = sys.stdin.readline\nrep = int(input())\n\ndef isgood(a):\n    tmp = a[0]\n    for i in a:\n        if i < tmp:\n            return False\n        tmp = i\n    return True\nfor _ in range(rep):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if isgood(a):\n        print('YES')\n        continue\n    arr = []\n    for i in range(n):\n        if i - x < 0 and i + x >= n:\n            arr.append((i, a[i]))\n    a.sort()\n    flag = 1\n    for value in arr:\n        (i, v) = value\n        if a[i] != v:\n            flag = 0\n            break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    line = list(map(int, input().split()))\n    line_s = sorted(line)\n    for i in range(n):\n        if line[i] != line_s[i]:\n            if i > n - 1 - i:\n                temp = i\n            else:\n                temp = n - 1 - i\n            if temp < x:\n                print('NO')\n                break\n    else:\n        print('YES')", "from sys import stdin\ninput = stdin.readline\nfor i in range(int(input())):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    new = arr[:]\n    a = max(arr)\n    b = min(arr)\n    s = set()\n    new.sort()\n    ans = True\n    for i in range(n):\n        if new[i] != arr[i]:\n            if i >= x or n - 1 - i >= x:\n                ans &= True\n            else:\n                ans &= False\n    print('YES' if ans else 'NO')", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    a = [j for j in map(int, input().split())]\n    b = sorted(a)\n    flag = 1\n    for (i, e) in enumerate(a):\n        if e == b[i]:\n            continue\n        if i < x and n - 1 - i < x:\n            flag = 0\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split(' '))\n    l = list(map(int, input().split(' ')))\n    c = l.copy()\n    c.sort()\n    h = 0\n    s = 0\n    a = 0\n    for i in range(n):\n        if l[i] == c[i]:\n            h = h + 1\n        elif i >= m or n - i - 1 >= m:\n            s = s + 1\n        else:\n            a = a + 1\n    if a > 0:\n        print('NO')\n    else:\n        print('YES')", "import math\nt = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if x < math.ceil(n / 2):\n        print('YES')\n    elif n % 2 == 0 and x == n / 2:\n        print('YES')\n    else:\n        sorted_array = []\n        for i in range(len(a)):\n            sorted_array.append([a[i], i])\n        sorted_array.sort()\n        ans = 'YES'\n        unswappable_width = x * 2 - n\n        u_left = int((n - unswappable_width) / 2)\n        u_right = unswappable_width + u_left\n        for i in range(u_left, u_right):\n            if sorted_array[i][0] != a[i]:\n                ans = 'NO'\n                break\n        print(ans)", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    (n, x) = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    b = [i for i in a]\n    b.sort()\n    found = True\n    for i in range(n - x, x):\n        if a[i] != b[i]:\n            found = False\n            break\n    if found:\n        sys.stdout.write('YES\\n')\n    else:\n        sys.stdout.write('NO\\n')", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    ref = sorted(arr)\n    (i, j) = (n - 1 - x, x)\n    for k in range(i + 1, j):\n        if arr[k] != ref[k]:\n            return 'NO'\n    return 'YES'\nfor _ in range(int(input())):\n    print(solve())", "from sys import stdin\ninput = stdin.readline\n\ndef solve():\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = sorted(a)\n    for i in range(n - x, x):\n        if a[i] != b[i]:\n            print('NO')\n            return\n    print('YES')\nfor _ in range(int(input())):\n    solve()", "import sys\nR = lambda : map(int, next(sys.stdin).split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n, x) = R()\n    (*a,) = R()\n    print('YNEOS'[a[-x:x] != sorted(a)[-x:x]::2])", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    (n, x) = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    b = sorted(a)\n    f = 0\n    for i in range(n):\n        if abs(n - 1 - i) < x and i < x:\n            if b[i] != a[i]:\n                f = 1\n                break\n    if f == 0:\n        sys.stdout.write('YES\\n')\n    else:\n        sys.stdout.write('NO\\n')", "import sys\n\ndef R():\n    return map(int, next(sys.stdin).split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n, x) = R()\n    (*a,) = R()\n    print('YNEOS'[a[-x:x] != sorted(a)[-x:x]::2])", "import sys\nR = lambda : map(int, next(sys.stdin).split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n, x) = R()\n    (*a,) = R()\n    print('YNEOS'[a[-x:x] != sorted(a)[-x:x]::2])", "import sys\nR = lambda : map(int, next(sys.stdin).split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n, x) = R()\n    (*a,) = R()\n    print('YNEOS'[a[-x:x] != sorted(a)[-x:x]::2])", "import sys\nR = lambda : map(int, next(sys.stdin).split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n, x) = R()\n    (*a,) = R()\n    print('YNEOS'[a[-x:x] != sorted(a)[-x:x]::2])", "import sys\nR = lambda : map(int, next(sys.stdin).split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n, x) = R()\n    (*a,) = R()\n    print('YNEOS'[a[-x:x] != sorted(a)[-x:x]::2])", "import sys\nR = lambda : map(int, next(sys.stdin).split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n, x) = R()\n    (*a,) = R()\n    print('YNEOS'[a[-x:x] != sorted(a)[-x:x]::2])", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    (n, x) = map(int, sys.stdin.readline().split())\n    arr = [int(x) for x in sys.stdin.readline().split()]\n    if n - x >= x:\n        print('YES')\n        continue\n    sorted_arr = sorted(arr)\n    res = True\n    for i in range(n - x, x):\n        if arr[i] != sorted_arr[i]:\n            res = False\n            break\n    print('YES' if res else 'NO')", "import sys\nR = lambda : map(int, next(sys.stdin).split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n, x) = R()\n    (*a,) = R()\n    print('YNEOS'[a[-x:x] != sorted(a)[-x:x]::2])", "import sys\ninput = sys.stdin.readline\nI = lambda : map(int, input().split())\nfor _ in [0] * int(input()):\n    (n, x) = I()\n    a = list(I())\n    ff = 0\n    if x <= n // 2:\n        ff = 1\n    else:\n        b = sorted(a)\n        if a[n - x:x] == b[n - x:x]:\n            ff = 1\n    print('YNEOS'[int(ff == 0)::2])", "import sys\nR = lambda : map(int, next(sys.stdin).split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n, x) = R()\n    (*a,) = R()\n    print('YNEOS'[a[-x:x] != sorted(a)[-x:x]::2])", "import sys\nR = lambda : map(int, next(sys.stdin).split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n, x) = R()\n    (*a,) = R()\n    print('YNEOS'[a[-x:x] != sorted(a)[-x:x]::2])", "import sys\nR = lambda : map(int, next(sys.stdin).split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n, x) = R()\n    (*a,) = R()\n    print('YNEOS'[a[-x:x] != sorted(a)[-x:x]::2])", "import sys\nR = lambda : map(int, next(sys.stdin).split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n, x) = R()\n    (*a,) = R()\n    print('YNEOS'[a[-x:x] != sorted(a)[-x:x]::2])", "import math\nimport heapq\nimport string\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right, insort\nimport sys\ninput = sys.stdin.readline\nS = lambda : input().rstrip()\nI = lambda : int(S())\nM = lambda : map(int, S().split())\nL = lambda : list(M())\nH = 1000000000 + 7\nfor _ in range(I()):\n    (n, x) = M()\n    l = L()\n    f = 0\n    p = l[:]\n    l = sorted(enumerate(l), key=lambda x: x[1])\n    for i in range(n):\n        t = abs(l[i][0] - i)\n        if t >= x or l[i][1] == p[i]:\n            continue\n        elif i > l[i][0] and (l[i][0] - x + t >= 0 or i + x < n):\n            continue\n        elif i < l[i][0] and (l[i][0] + x - t < n or i - x >= 0):\n            continue\n        else:\n            f = 1\n    if f == 1:\n        print('NO')\n    else:\n        print('YES')", "import sys\nR = lambda : map(int, next(sys.stdin).split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n, x) = R()\n    (*a,) = R()\n    print('YNEOS'[a[-x:x] != sorted(a)[-x:x]::2])", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    (n, x) = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    b = [x for x in a]\n    b.sort()\n    f = 0\n    for i in range(n):\n        if abs(n - 1 - i) < x and i < x:\n            if b[i] != a[i]:\n                f = 1\n                break\n    if f == 0:\n        sys.stdout.write('YES\\n')\n    else:\n        sys.stdout.write('NO\\n')", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\n\ndef solve():\n    (n, x) = map(int, input().split())\n    A = list(map(int, input().split()))\n    B = sorted(A)\n    print('YES' if A[n - x:x] == B[n - x:x] else 'NO')\nT = int(input())\nfor i in range(T):\n    solve()", "def solve(n, x, nums):\n    srt = sorted(nums)\n    if srt == nums:\n        return 'YES'\n    if x >= n:\n        return 'NO'\n    if n >= 2 * x or nums[n - x:x] == srt[n - x:x]:\n        return 'YES'\n    return 'NO'\nans = []\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    nums = list(map(int, input().split()))\n    ans.append(solve(n, x, nums))\nprint(*ans, sep='\\n')"]