["for s in [*open(0)][2::2]:\n    print((i := s.find('ab'[s[0] < 'b'])), i + (i > 0))", "for s in [*open(0)][2::2]:\n    print((i := s.find('ab'[s[0] < 'b'])), i + (i > 0))", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    l = -1\n    r = -1\n    for i in range(n - 1):\n        if s[i] != s[i + 1]:\n            l = i + 1\n            r = i + 2\n            break\n    print(l, r)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    a = {0: 0}\n    c = 0\n    for (i, x) in enumerate(s):\n        if x == 'a':\n            c += 1\n        else:\n            c -= 1\n        if c in a:\n            print(a[c] + 1, i + 1)\n            break\n        a[c] = i + 1\n    else:\n        print(-1, -1)", "def solve():\n    T = int(input())\n    for i in range(T):\n        n = int(input())\n        str = input()\n        check = 0\n        for i in range(n - 1):\n            if str[i] != str[i + 1]:\n                print(i + 1, i + 2)\n                check = 1\n                break\n        if check == 0:\n            print(-1, -1)\nsolve()", "for s in [*open(0)][2::2]:\n    print((i := s.find('ab'[s[0] < 'b'])), i + (i > 0))", "for s in [*open(0)][2::2]:\n    print((i := s.find('ab'[s[0] < 'b'])), i + (i > 0))", "for s in [*open(0)][2::2]:\n    print((i := s.find('ab'[s[0] < 'b'])), i + (i > 0))", "for s in [*open(0)][2::2]:\n    print(*([(i := s.find('ab'[s[0] < 'b']))] * 2, [i, i + 1])[i > 0])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    str = input()\n    flag = False\n    for i in range(n - 1):\n        if str[i] != str[i + 1]:\n            print(i + 1, i + 2)\n            flag = True\n            break\n    if flag == False:\n        print(-1, -1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    for i in range(n - 1):\n        if s[i] != s[i + 1]:\n            print(i + 1, i + 2)\n            break\n    else:\n        print(-1, -1)", "import sys\ntokens = ''.join(sys.stdin.readlines()).split()[::-1]\n\ndef next():\n    return tokens.pop()\n\ndef nextInt():\n    return int(next())\n\ndef nextFloat():\n    return float(next())\n\ndef getIntArray(n):\n    return [nextInt() for _ in range(n)]\n\ndef getFloatArray(n):\n    return [nextFloat() for _ in range(n)]\n\ndef getStringArray(n):\n    return [next() for _ in range(n)]\nflush = sys.stdout.flush\ntestcase = True\n\ndef solve(testcase=1):\n    nextInt()\n    S = next()\n    for i in range(1, len(S)):\n        if S[i - 1] != S[i]:\n            print(i, i + 1)\n            return\n    print(-1, -1)\nif testcase is None:\n    testcaseCount = 1\n    while tokens:\n        solve(testcaseCount)\n        testcaseCount += 1\nelse:\n    testcaseCount = nextInt() if testcase else 1\n    for tc in range(testcaseCount):\n        solve(tc + 1)\n    assert not tokens", "from sys import stdin, stdout\nimport sys\nimport math\nimport itertools\nfrom collections import defaultdict\nsys.setrecursionlimit(10 ** 6)\n\ndef main():\n    t = int(stdin.readline().strip())\n    for j in range(1, t + 1):\n        n = int(stdin.readline().strip())\n        s = stdin.readline().strip()\n        flag = 1\n        for i in range(n - 1):\n            if s[i] != s[i + 1]:\n                print(i + 1, i + 2)\n                flag = 0\n                break\n        if flag:\n            print(-1, -1)\nmain()", "import sys\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef LI1():\n    return list(map(int1, sys.stdin.readline().split()))\n\ndef LLI1(rows_number):\n    return [LI1() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline().rstrip()\ninf = 10 ** 16\nmd = 10 ** 9 + 7\n\ndef solve():\n    n = II()\n    s = SI()\n    ctoi = {0: 0}\n    cnt = 0\n    for (i, c) in enumerate(s):\n        if c == 'a':\n            cnt += 1\n        else:\n            cnt -= 1\n        if cnt in ctoi:\n            print(ctoi[cnt] + 1, i + 1)\n            return\n        ctoi[cnt] = i + 1\n    print(-1, -1)\nfor testcase in range(II()):\n    solve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    b = s[0]\n    flag = False\n    if len(s) > 1:\n        for i in range(1, len(s)):\n            if s[i] != b:\n                print(i, i + 1)\n                flag = True\n                break\n        if not flag:\n            print(-1, -1)\n    else:\n        print(-1, -1)", "t = int(input())\nfor hh in range(0, t):\n    n = int(input())\n    s = input()\n    if n == 1:\n        print(-1, -1)\n    else:\n        flag = 0\n        for i in range(0, n - 1):\n            if s[i] != s[i + 1]:\n                print(i + 1, i + 2)\n                flag = 1\n                break\n        if flag == 0:\n            print(-1, -1)", "t = int(input())\nfor time in range(t):\n    length = int(input())\n    st = input()\n    flag = False\n    l = 0\n    r = 0\n    for i in range(1, len(st)):\n        temp1 = st[i - 1]\n        temp2 = st[i]\n        if temp1 != temp2:\n            flag = True\n            l = i\n            r = i + 1\n            break\n    if flag == True:\n        print(l, r)\n        flag = False\n    else:\n        print('-1 -1')", "inp = int(input())\nl_1 = []\nl_2 = []\nfor i in range(inp):\n    l_1.append(input())\n    l_2.append(input())\nfor j in l_2:\n    if len(j) < 2:\n        print(-1, -1)\n    elif 'a' not in j or 'b' not in j:\n        print(-1, -1)\n    else:\n        oo = []\n        for i in range(len(j) - 1):\n            if j[i] != j[i + 1]:\n                oo.append(i)\n        print(oo[0] + 1, oo[0] + 2)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(input())\n    if l.count('a') == n or l.count('b') == n:\n        print('-1 -1')\n    else:\n        for j in range(len(l) - 1):\n            if l[j] == 'a' and l[j + 1] == 'b' or (l[j] == 'b' and l[j + 1] == 'a'):\n                print(str(j + 1), str(j + 2))\n                break", "for s in [*open(0)][2::2]:\n    print((i := s.find('ab'[s[0] < 'b'])), i + (i > 0))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    for i in range(n - 1):\n        if s[i] != s[i + 1]:\n            print(i + 1, i + 2)\n            break\n    else:\n        print(-1, -1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    for i in range(n - 1):\n        if s[i] != s[i + 1]:\n            print(i + 1, i + 2)\n            break\n    else:\n        print(-1, -1)", "for i in range(int(input())):\n    k = int(input())\n    fl = False\n    s = input()\n    for j in range(1, k):\n        if s[j] != s[j - 1]:\n            print(j, j + 1)\n            fl = True\n            break\n    if not fl:\n        print(-1, -1)", "for s in [*open(0)][2::2]:\n    print((i := s.find('ab'[s[0] < 'b'])), i + (i > 0))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    per = s[0]\n    ans = 0\n    for i in range(1, n):\n        if s[i] != per:\n            ans = i\n            break\n    if ans:\n        print(ans, ans + 1)\n    else:\n        print(-1, -1)", "cases = int(input())\nwhile cases > 0:\n    len = int(input())\n    s = input()\n    li = list(s)\n    for i in range(len - 1):\n        if s[i] != s[i + 1]:\n            print(i + 1, i + 2)\n            break\n    else:\n        print(-1, -1)\n    cases -= 1", "def codeforces1569A_solution(xs):\n    if xs.count('a') == 0 or xs.count('b') == 0:\n        return (-1, -1)\n    (current, begin) = (xs[0], 1)\n    for (i, x) in enumerate(xs[1:]):\n        if current == x:\n            begin += 1\n        else:\n            return (begin, i + 2)\n\ndef codeforces1569A():\n    for _ in range(int(input())):\n        n = int(input())\n        s = input()\n        (a, b) = codeforces1569A_solution(s)\n        print(a, b)\ncodeforces1569A()", "for _ in range(int(input())):\n    length = int(input())\n    string = input()\n    Y = 0\n    for i in range(length - 1):\n        if string[i] != string[i + 1]:\n            print(i + 1, i + 2)\n            Y += 1\n            break\n    if Y == 0:\n        print(-1, -1)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    s = input()\n    f = False\n    for i in range(0, n - 1):\n        if s[i] != s[i + 1]:\n            print('{} {}'.format(i + 1, i + 2))\n            f = True\n            break\n    if not f:\n        print('-1 -1')\n    t -= 1", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline().rstrip())\n    data = sys.stdin.readline().rstrip()\n    (l, r) = (-1, -1)\n    for i in range(len(data) - 1):\n        if data[i] != data[i + 1]:\n            (l, r) = (i + 1, i + 1 + 1)\n            break\n    print(f'{l} {r}' if l != -1 and r != -1 else f'-1 -1')", "for s in [*open(0)][2::2]:\n    print((i := s.find('ab'[s[0] < 'b'])), i + (i > 0))", "import math\n\ndef main():\n    for i in range(int(input())):\n        n = int(input())\n        s = input()\n        for j in range(n - 1):\n            if s[j] != s[j + 1]:\n                print(j + 1, j + 2)\n                break\n        else:\n            print(-1, -1)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    for i in range(n - 1):\n        if s[i] != s[i + 1]:\n            print(i + 1, i + 2)\n            break\n    else:\n        print(-1, -1)\n1", "for _ in range(int(input())):\n    n = int(input())\n    s = str(input())\n    if n == 1:\n        print(-1, -1)\n    else:\n        a = 0\n        b = 0\n        on = 0\n        for i in range(len(s) - 1):\n            if s[i] != s[i + 1]:\n                a = i + 1\n                b = i + 2\n                print(a, b)\n                break\n        else:\n            print(-1, -1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    for i in range(n - 1):\n        if s[i] != s[i + 1]:\n            print(i + 1, i + 2)\n            break\n    else:\n        print(-1, -1)", "def main() -> None:\n    for t in range(int(input())):\n        n = int(input())\n        s = input()\n        found = False\n        for i in range(n - 1):\n            if s[i] != s[i + 1]:\n                print(str(i + 1) + ' ' + str(i + 2))\n                found = True\n                break\n        if not found:\n            print('-1 -1')\nmain()", "tc = int(input())\nfor t in range(tc):\n    l = int(input())\n    s = input()\n    ans = -1\n    for i in range(len(s) - 1):\n        if s[i] != s[i + 1]:\n            ans = [i + 1, i + 2]\n            break\n    if ans == -1:\n        print('-1 -1')\n    else:\n        print(ans[0], ans[1])", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    for i in range(n - 1):\n        if s[i] != s[i + 1]:\n            print(i + 1, i + 2)\n            break\n    else:\n        print(-1, -1)", "for s in [*open(0)][2::2]:\n    print((i := s.find('ab'[s[0] < 'b'])), i + (i > 0))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    for i in range(n - 1):\n        if s[i] != s[i + 1]:\n            print(i + 1, i + 2)\n            break\n    else:\n        print(-1, -1)", "numcases = int(input())\nfor i in range(numcases):\n    input()\n    str = input()\n    start = str[0]\n    first = 0\n    if start == 'a':\n        first = str.find('b')\n    else:\n        first = str.find('a')\n    if first == -1:\n        print('-1 -1')\n    else:\n        print(first, first + 1)", "def solution():\n    for t in range(int(input())):\n        n = int(input())\n        s = input()\n        (l, r) = (-1, -1)\n        (sa, sb) = (s.find('a'), s.find('b'))\n        if sa == -1 or sb == -1:\n            pass\n        else:\n            r = max(sa, sb) + 1\n            l = r - 1\n        print('{0:} {1:}'.format(l, r))\n    return\nsolution()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    if s.count('a') * s.count('b') == 0:\n        print(-1, -1)\n    else:\n        for i in range(1, n):\n            if s[i] != s[i - 1]:\n                print(i, i + 1)\n                break", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    s = input()\n    for i in range(n - 1):\n        if s[i] != s[i + 1]:\n            print(i + 1, i + 2)\n            break\n    else:\n        print(-1, -1)", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    s = input()\n    ans = [-1, -1]\n    for i in range(n - 1):\n        if s[i] == 'a' and s[i + 1] == 'b' or (s[i + 1] == 'a' and s[i] == 'b'):\n            ans = [i + 1, i + 2]\n            break\n    print(*ans)", "def balance_string(str):\n    if not 'b' in str or not 'a' in str:\n        print(-1, -1)\n    elif str.index('a') < str.index('b'):\n        count_head = str.index('a') + 1\n        count_tail = str.index('a') + 1\n        for ele in str[count_head:]:\n            if ele == 'a':\n                count_head += 1\n            count_tail = count_head\n            if ele == 'b':\n                count_tail += 1\n                break\n        print(count_head, count_tail)\n    else:\n        count_head = str.index('b') + 1\n        count_tail = str.index('b') + 1\n        for ele in str[count_head:]:\n            if ele == 'b':\n                count_head += 1\n            count_tail = count_head\n            if ele == 'a':\n                count_tail += 1\n                break\n        print(count_head, count_tail)\nex = eval(input())\nfor i in range(ex):\n    n = eval(input())\n    str = input()[:n]\n    balance_string(str)", "n = int(input())\nS = []\nfor i in range(0, n):\n    a = input()\n    S.append(input())\nfor i in range(0, n):\n    a = 0\n    b = 0\n    K = 0\n    for k in range(0, len(S[i])):\n        if S[i][k] == 'a':\n            a += 1\n            if b != 0:\n                K = k\n                break\n        if S[i][k] == 'b':\n            b += 1\n            if a != 0:\n                K = k\n                break\n    if K != 0:\n        print(K, K + 1)\n    else:\n        print(-1, -1)", "t = int(input())\nan = []\nfor _ in range(t):\n    c = int(input())\n    s = input()\n    if 'a' in s and 'b' in s:\n        if s[0] == 'a':\n            l = s.index('b')\n            r = l - 1\n        else:\n            l = s.index('a')\n            r = l - 1\n        an.append([r + 1, l + 1])\n    else:\n        an.append([-1, -1])\nfor _ in an:\n    print(_[0], _[1])", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    for i in range(n - 1):\n        if s[i] != s[i + 1]:\n            print(i + 1, i + 2)\n            break\n    else:\n        print(-1, -1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    for i in range(n - 1):\n        if s[i] != s[i + 1]:\n            print(i + 1, i + 2)\n            break\n    else:\n        print(-1, -1)", "for t in range(int(input())):\n    n = int(input())\n    str = input()\n    for i in range(n - 1):\n        if str[i] != str[i + 1]:\n            print(i + 1, i + 2)\n            break\n    else:\n        print(-1, -1)", "for t in range(int(input())):\n    n = int(input())\n    s = input()\n    for i in range(n - 1):\n        if s[i] == 'a' and s[i + 1] == 'b' or (s[i] == 'b' and s[i + 1] == 'a'):\n            print(i + 1, i + 2)\n            break\n    else:\n        print(-1, -1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    for i in range(n - 1):\n        if s[i] != s[i + 1]:\n            print(i + 1, i + 2)\n            break\n    else:\n        print(-1, -1)", "from collections import Counter\n\ndef solve():\n    n = int(input())\n    s = input()\n    for (i, char) in enumerate(s[:-1]):\n        if char != s[i + 1]:\n            return [i + 1, i + 2]\n    return [-1, -1]\nfor _ in range(int(input())):\n    print(*solve())", "t = input()\nt = int(t)\nwhile t > 0:\n    n = int(input())\n    s = input()\n    for v in range(n - 1):\n        if s[v] != s[v + 1]:\n            print(v + 1, v + 2)\n            break\n    else:\n        print(-1, -1)\n    t -= 1", "def func(s):\n    for i in range(len(s) - 1):\n        if s[i] != s[i + 1]:\n            return [i + 1, i + 2]\n    else:\n        return [-1, -1]\nt = int(input())\nwhile t:\n    input()\n    print(*func(input()))\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    z = 0\n    for i in range(n - 1):\n        if s[i] == 'a' and s[i + 1] == 'b' or (s[i] == 'b' and s[i + 1] == 'a'):\n            z = -1\n            x = i + 1\n            y = i + 2\n            break\n    if z == 0:\n        print(-1, -1)\n    else:\n        print(x, y)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    if n == 1:\n        print(-1, -1)\n    else:\n        l = r = -1\n        for i in range(1, n):\n            if s[i] != s[i - 1]:\n                l = i\n                r = i + 1\n                break\n        print(l, r)", "t = int(input())\nwhile t:\n    t = t - 1\n    check = False\n    n = int(input())\n    s = input()\n    for i in range(1, len(s)):\n        if s[i] != s[i - 1]:\n            print(f'{i} {i + 1}')\n            check = True\n            break\n    if not check:\n        print(f'{-1} {-1}')\n    else:\n        check = False", "lan = []\nfor _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    flag = False\n    for i in range(n - 1):\n        if s[i] != s[i + 1]:\n            lan.append(f'{i + 1} {i + 2}')\n            flag = True\n            break\n        else:\n            continue\n    if flag == False:\n        lan.append(f'{-1} {-1}')\nfor i in lan:\n    print(*i, sep='')", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    for i in range(n - 1):\n        if s[i] != s[i + 1]:\n            print(i + 1, i + 2)\n            break\n    else:\n        print(-1, -1)", "def F():\n    n = int(input())\n    t = input()\n    a = 0\n    b = 0\n    for i in range(n):\n        if t[i] == 'a':\n            a += 1\n        else:\n            b += 1\n        if a > 0 and b > 0:\n            return (i, i + 1)\n    return (-1, -1)\nfor i in range(int(input())):\n    print(*F())", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    s = input()\n    if n == 1:\n        print('-1 -1')\n    else:\n        flag = 1\n        firstEle = s[0]\n        for i in range(n):\n            if i == 0:\n                continue\n            elif s[i] != firstEle:\n                print('{} {}'.format(i, i + 1))\n                flag = 0\n                break\n        if flag:\n            print('-1 -1')", "def sub(s, n):\n    for i in range(n - 1):\n        if s[i] == 'a' and s[i + 1] == 'b':\n            print(i + 1, i + 2)\n            return\n        if s[i] == 'b' and s[i + 1] == 'a':\n            print(i + 1, i + 2)\n            return\n    print(-1, -1)\nfor t in range(int(input())):\n    n = int(input())\n    s = input()\n    sub(s, n)", "for i in range(int(input())):\n    n = int(input())\n    s = str(input())\n    for i in range(n - 1):\n        if s[i] != s[i + 1]:\n            print(i + 1, i + 2)\n            break\n    else:\n        print(-1, -1)", "for s in [*open(0)][2::2]:\n    print((i := s.find('ab'[s[0] < 'b'])), i + (i > 0))", "for s in [*open(0)][2::2]:\n    print((i := s.find('ab'[s[0] < 'b'])), i + (i > 0))", "import re\nn = int(input())\nwhile n > 0:\n    length = int(input())\n    s = input()\n    if re.match('a+b', s) or re.match('b+a', s):\n        for i in range(len(s) - 1):\n            if s[i] == 'a' and s[i + 1] == 'b' or (s[i + 1] == 'a' and s[i] == 'b'):\n                l = i + 1\n                break\n        print(l, l + 1)\n    else:\n        print('-1 -1')\n    n -= 1", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    for i in range(n - 1):\n        if s[i] != s[i + 1]:\n            print(i + 1, i + 2)\n            break\n    else:\n        print(-1, -1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    for i in range(n - 1):\n        if s[i:i + 2] in ['ab', 'ba']:\n            print(i + 1, i + 2)\n            break\n    else:\n        print(-1, -1)", "while True:\n    try:\n        t = eval(input())\n        for i in range(t):\n            n = eval(input())\n            s = input()\n            f = True\n            for j in range(n - 1):\n                if s[j] == 'a' and s[j + 1] == 'b' or (s[j] == 'b' and s[j + 1] == 'a'):\n                    print(j + 1, j + 2)\n                    f = False\n                    break\n            if f:\n                print(-1, -1)\n    except:\n        break"]