["def is_even_perm(a):\n    count = 0\n    for i in range(len(a)):\n        while a[i] != i + 1:\n            j = a[i] - 1\n            (a[i], a[j]) = (a[j], a[i])\n            count += 1\n    return count % 2 == 0\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if n == 1 or len(a) > len(set(a)):\n        print('YES')\n        continue\n    print('YES' if is_even_perm(a) else 'NO')", "def main():\n    tests = int(input())\n    for _ in range(tests):\n        elount = int(input())\n        array = [int(x) - 1 for x in input().split()]\n        if len(set(array)) != elount:\n            print('YES')\n            continue\n        print('YES' if can_be_trisorted(array) else 'NO')\n\ndef can_be_trisorted(arr):\n    swaps = 0\n    for i in range(len(arr)):\n        while arr[i] != i:\n            j = arr[i]\n            (arr[i], arr[j]) = (arr[j], arr[i])\n            swaps = 1 - swaps\n    return swaps == 0\nmain()", "def is_even_perm(a):\n    count = 0\n    for i in range(len(a)):\n        while a[i] != i + 1:\n            j = a[i] - 1\n            (a[i], a[j]) = (a[j], a[i])\n            count += 1\n    return count % 2 == 0\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if n == 1 or len(a) > len(set(a)):\n        print('YES')\n        continue\n    print('YES' if is_even_perm(a) else 'NO')", "for _ in range(int(input())):\n    (n, a) = (int(input()), list(map(int, input().split())))\n    if len(set(a)) < n:\n        print('YES')\n        continue\n    sorted_a = sorted(a)\n    num2i = {num: i for (i, num) in enumerate(sorted_a)}\n    vis = [0] * n\n    ans = 0\n    for i in range(n):\n        if vis[i]:\n            continue\n        (size, cur) = (0, i)\n        while not vis[cur]:\n            vis[cur] = 1\n            (size, cur) = (size + 1, num2i[a[cur]])\n        ans += size % 2 == 0\n    print('YES') if ans == 0 or ans % 2 == 0 else print('NO')", "for _ in range(int(input())):\n    (n, a) = (int(input()), list(map(int, input().split())))\n    if len(set(a)) < n:\n        print('YES')\n        continue\n    sorted_a = sorted(a)\n    num2i = {num: i for (i, num) in enumerate(sorted_a)}\n    vis = [0] * n\n    ans = 0\n    for i in range(n):\n        if vis[i]:\n            continue\n        (size, cur) = (0, i)\n        while not vis[cur]:\n            vis[cur] = 1\n            (size, cur) = (size + 1, num2i[a[cur]])\n        ans += size % 2 == 0\n    print('YES') if ans == 0 or ans % 2 == 0 else print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    if n == 1:\n        print('YES')\n    elif n == 2:\n        if x[0] <= x[1]:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        ans = 'NO'\n        temp = [0] * n\n        for i in range(n):\n            temp[x[i] - 1] += 1\n            if temp[x[i] - 1] > 1:\n                ans = 'YES'\n                break\n        if ans == 'NO':\n            p = 0\n            for i in range(n):\n                while x[i] != i + 1:\n                    temp1 = x[i]\n                    temp2 = x[x[i] - 1]\n                    x[x[i] - 1] = temp1\n                    x[i] = temp2\n                    p += 1\n            if p % 2 == 0:\n                ans = 'YES'\n        print(ans)", "from operator import itemgetter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    if len(set(arr)) < n:\n        print('YES')\n    else:\n        s = list(map(itemgetter(0), sorted(list(enumerate(arr)), key=itemgetter(1))))\n        d = set(range(n))\n        ans = 0\n        while d:\n            z = d.pop()\n            while s[z] in d:\n                ans += 1\n                z = s[z]\n                d.remove(z)\n        print('YES' if ans % 2 == 0 else 'NO')", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if len(set(a)) != len(a):\n        print('YES')\n    elif n == 1:\n        print('YES')\n    else:\n        curridxs = {}\n        for (i, x) in enumerate(a):\n            curridxs[x] = i\n        sorteda = sorted(a)\n        for i in range(n - 2):\n            if sorteda[i] != a[i]:\n                firsti = i\n                secondi = curridxs[sorteda[i]]\n                thirdi = i + 1 if secondi != i + 1 else n - 1\n                firstc = a[firsti]\n                secondc = a[secondi]\n                thirdc = a[thirdi]\n                tempi = firsti\n                a[firsti] = secondc\n                a[secondi] = thirdc\n                a[thirdi] = firstc\n                curridxs[firstc] = thirdi\n                curridxs[secondc] = firsti\n                curridxs[thirdc] = secondi\n        if a[n - 2] < a[n - 1]:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print('YES')\n        continue\n    h = n != len(set(a))\n    b = sorted(a)\n    d = dict()\n    for (i, x) in enumerate(a):\n        d[x] = d.get(x, set())\n        d[x].add(i)\n    i = n - 1\n    while i > 1:\n        r = a[i]\n        t = b[i]\n        if r != t:\n            ti = 0\n            for tix in d[t]:\n                ti = tix\n                break\n            z = 0\n            if ti == z:\n                z = 1\n            az = a[z]\n            a[i] = t\n            d[t].remove(ti)\n            a[ti] = a[z]\n            d[az].remove(z)\n            d[az].add(ti)\n            a[z] = r\n            d[r].remove(i)\n            d[r].add(z)\n        i -= 1\n    if a[0] == b[0] and a[1] == b[1]:\n        print('YES')\n    elif h:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    h = n != len(set(a))\n    if h or n == 1:\n        print('YES')\n        continue\n    b = sorted(a)\n    d = dict()\n    for (i, x) in enumerate(a):\n        d[x] = d.get(x, set())\n        d[x].add(i)\n    i = n - 1\n    while i > 1:\n        r = a[i]\n        t = b[i]\n        if r != t:\n            ti = 0\n            for tix in d[t]:\n                ti = tix\n                break\n            z = 0\n            if ti == z:\n                z = 1\n            az = a[z]\n            a[i] = t\n            d[t].remove(ti)\n            a[ti] = a[z]\n            d[az].remove(z)\n            d[az].add(ti)\n            a[z] = r\n            d[r].remove(i)\n            d[r].add(z)\n        i -= 1\n    if a[0] == b[0] and a[1] == b[1]:\n        print('YES')\n    else:\n        print('NO')"]