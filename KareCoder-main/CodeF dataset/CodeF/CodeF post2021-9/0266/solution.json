["import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    I = list(map(int, input().split()))\n    i = 0\n    check = True\n    while i < n - 1 and I[i] <= I[i + 1]:\n        i += 1\n    while i < n - 1:\n        if I[i] < I[i + 1]:\n            check = False\n            break\n        i += 1\n    if check:\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = 0\n    idx = -1\n    for i in range(n - 1):\n        if a[i] > a[i + 1]:\n            idx = i\n            break\n    if idx == -1:\n        return 1\n    for i in range(idx, n - 1):\n        if a[i] < a[i + 1]:\n            f = 1\n    if f:\n        return 0\n    return 1\nfor __ in range(int(input())):\n    print('YES' if solve() else 'NO')", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    inc = True\n    flag = True\n    for i in range(1, n):\n        if a[i] == a[i - 1]:\n            continue\n        if a[i] > a[i - 1]:\n            if inc:\n                continue\n            else:\n                flag = False\n                break\n        elif inc:\n            inc = False\n        else:\n            continue\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\n\ndef solution(a, n):\n    reverse = False\n    current = a[0]\n    for i in range(1, n):\n        if reverse is False:\n            if a[i] < current:\n                reverse = True\n        if reverse is True:\n            if a[i] > current:\n                print('NO')\n                return\n        current = a[i]\n    print('YES')\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    solution(a, n)", "def main():\n    for _ in range(int(input())):\n        print('YES' if problem() else 'NO')\n\ndef problem():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    mode = 'increasing'\n    for i in range(1, n):\n        if mode == 'increasing':\n            if arr[i] < arr[i - 1]:\n                mode = 'decreasing'\n        elif arr[i] > arr[i - 1]:\n            return False\n    return True\nimport sys\ninput = sys.stdin.readline\nsys.exit(main())", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    v = max(arr)\n    mid = 0\n    for i in range(n):\n        if arr[i] == v:\n            mid = i\n            break\n    for i in range(n - 1):\n        if i < mid and arr[i] > arr[i + 1]:\n            return 'NO'\n        if i >= mid and arr[i] < arr[i + 1]:\n            return 'NO'\n    return 'YES'\nfor _ in range(int(input())):\n    print(solve())", "import sys\ninput = sys.stdin.readline\n\ndef solve(n, a):\n    if n == 1:\n        return 'YES'\n    sol = True\n    (mx_idx, mx) = (0, a[0])\n    for (i, a_i) in enumerate(a):\n        if a_i > mx:\n            (mx, mx_idx) = (a_i, i)\n    for i in range(0, mx_idx - 1):\n        if a[i] > a[i + 1]:\n            sol = False\n            break\n    for i in range(mx_idx, n - 1):\n        if a[i] < a[i + 1]:\n            sol = False\n            break\n    return 'YES' if sol else 'NO'\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    print(solve(n, a))", "t = int(input())\nans = [''] * t\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    isUp = True\n    isGood = True\n    prev = a[0]\n    for j in range(1, n):\n        if isUp and prev > a[j]:\n            isUp = False\n        elif not isUp and prev < a[j]:\n            isGood = False\n        prev = a[j]\n    if isGood:\n        ans[i] = 'YES'\n    else:\n        ans[i] = 'NO'\nfor i in range(t):\n    print(ans[i])", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\ntests = inp()\nfor j in range(0, tests):\n    n = inp()\n    x = inlt()\n    resul = 'YES'\n    y = 0\n    z = 0\n    min_val = -1\n    for i in range(1, len(x) - 1):\n        if x[i] < x[i - 1]:\n            min_val = x[i]\n        if min_val != -1 and min_val < x[i + 1]:\n            resul = 'NO'\n    print(resul)", "import sys\ninput = sys.stdin.readline\nimport math\nimport copy\nimport collections\nfrom collections import deque\nimport heapq\nimport itertools\nfrom collections import defaultdict\nfrom collections import Counter\nfor x in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    cur = arr[0]\n    dec = False\n    works = True\n    for i in arr:\n        if i < cur:\n            dec = True\n        if i > cur and dec:\n            print('NO')\n            works = False\n            break\n        cur = i\n    if works:\n        print('YES')", "import sys\nfrom os import path\nif path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\n\ndef get_int():\n    return int(sys.stdin.readline())\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef solve(arr):\n    M = max(arr)\n    count = arr[0]\n    for i in range(1, len(arr)):\n        count += max(0, arr[i] - arr[i - 1])\n    return count == M\nt = get_int()\nfor _ in range(t):\n    n = get_int()\n    arr = list(map(int, get_string().split()))\n    sys.stdout.write('YES\\n' if solve(arr) else 'NO\\n')", "import sys\ninput = sys.stdin.readline\nfrom collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = False\n    for i in range(n - 1):\n        if arr[i] > arr[i + 1]:\n            count = True\n        if arr[i] < arr[i + 1] and count:\n            print('NO')\n            break\n    else:\n        print('YES')", "import itertools\nimport sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nfor _ in range(inp()):\n    n = inp()\n    arr = [k for (k, _) in itertools.groupby(inlt())]\n    ans = True\n    for i in range(1, len(arr) - 1):\n        if arr[i] < arr[i - 1] and arr[i] < arr[i + 1]:\n            ans = False\n            break\n    print('YES' if ans else 'NO')", "def optimal_reduction(n, seq):\n    prefix_non_decreasing = 1\n    suffix_non_increasing = 1\n    i = 0\n    while i < n - 1 and seq[i] <= seq[i + 1]:\n        prefix_non_decreasing += 1\n        i += 1\n    i = n - 2\n    while i > -1 and seq[i + 1] <= seq[i]:\n        suffix_non_increasing += 1\n        i -= 1\n    if prefix_non_decreasing + suffix_non_increasing >= n:\n        return 'YES'\n    else:\n        return 'NO'\nt = int(input())\ntest_cases = [(int(input()), tuple(map(int, input().split()))) for _ in range(t)]\nanswers = [optimal_reduction(n, seq) for (n, seq) in test_cases]\nfor a in answers:\n    print(a)", "def solve(p):\n    state = 0\n    prev = -1\n    for v in p:\n        if state == 0:\n            if v >= prev:\n                state = 0\n            else:\n                state = 1\n        else:\n            if v > prev:\n                return False\n            pass\n        prev = v\n    return True\n\ndef main():\n    n = int(input())\n    for _ in range(n):\n        n = int(input())\n        points = [int(x) for x in input().split()]\n        print('YES' if solve(points) else 'NO')\n        pass\n    pass\nmain()", "import sys\nfrom collections import Counter, defaultdict, deque\nfrom math import gcd, sqrt, ceil, log\n\ndef li():\n    return [int(i) for i in sys.stdin.readline().split()]\n\ndef si():\n    return sys.stdin.readline().split()\n\ndef ii():\n    return int(sys.stdin.readline())\n\ndef ip():\n    return input()\nfor tastcas in range(int(input())):\n    n = ii()\n    a = li()\n    f = 0\n    i = 0\n    if n < 3:\n        print('YES')\n        continue\n    while i < n - 1:\n        if a[i + 1] < a[i]:\n            f = 1\n            break\n        i += 1\n    while i < n - 1:\n        if a[i + 1] > a[i]:\n            f = 2\n            break\n        i += 1\n    if f == 2:\n        print('NO')\n    else:\n        print('YES')", "def check(l):\n    a = 0\n    b = len(l) - 1\n    while a != b:\n        if l[a] <= l[a + 1] or l[b] <= l[b - 1]:\n            if l[a] <= l[a + 1]:\n                a = a + 1\n            else:\n                b = b - 1\n        else:\n            return False\n    return True\nli = []\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    lis = input()\n    l = lis.split()\n    for i in range(len(l)):\n        l[i] = int(l[i])\n    li.append(check(l))\nfor i in li:\n    if i:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nres = []\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [a[0]]\n    lastItem = a[0]\n    for i in range(1, n):\n        if a[i] != lastItem:\n            b.append(a[i])\n            lastItem = a[i]\n    isOK = True\n    for i in range(1, len(b) - 1):\n        if b[i - 1] > b[i] < b[i + 1]:\n            isOK = False\n            break\n    if isOK:\n        res.append('YES')\n    else:\n        res.append('NO')\nfor r in res:\n    print(r)", "import math\n\ndef solve():\n    n = int(input())\n    increasing = True\n    previous = -math.inf\n    numbers = list(map(int, input().split()))\n    answer = 'YES'\n    for x in numbers:\n        if increasing:\n            if x >= previous:\n                pass\n            else:\n                increasing = False\n        elif x <= previous:\n            pass\n        else:\n            answer = 'NO'\n            break\n        previous = x\n    print(answer)\nT = int(input())\nfor _ in range(T):\n    solve()", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    data = list(map(int, input().split()))\n    max_value = max(data)\n    max_idx = data.index(max_value)\n    diff = []\n    flag = True\n    for i in range(max_idx):\n        if data[i + 1] - data[i] < 0:\n            flag = False\n    for i in range(max_idx, n - 1):\n        if data[i + 1] - data[i] > 0:\n            flag = False\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\n\ndef s(nums):\n    if sorted(nums) == nums:\n        return True\n    elif sorted(nums, reverse=True) == nums:\n        return True\n    else:\n        return False\nfor __ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    idx = lst.index(max(lst))\n    lst1 = lst[:idx + 1]\n    lst2 = lst[idx:]\n    if s(lst1) and s(lst2):\n        print('YES')\n    else:\n        print('NO')", "out = []\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    if max(a) == min(a):\n        out.append('YES')\n        continue\n    if a == sorted(a) or a == sorted(a, reverse=True):\n        out.append('YES')\n        continue\n    ok = 'YES'\n    p0 = a.index(max(a))\n    for i in range(p0, n - 1):\n        if a[i + 1] > a[i]:\n            ok = 'NO'\n    for i in range(p0 - 1):\n        if a[i + 1] < a[i]:\n            ok = 'NO'\n    out.append(ok)\nfor i in out:\n    print(i)", "import sys\nimport collections\nfrom math import ceil, gcd, sqrt, log\nimport bisect\nINF = float('inf')\nmod = 1000000007\n\ndef solve():\n    n = int(input())\n    A = list(map(int, input().split()))\n    i = 1\n    while i < n and A[i] >= A[i - 1]:\n        i += 1\n    while i < n and A[i] <= A[i - 1]:\n        i += 1\n    if i == n:\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "t = int(input())\nans = []\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    flag = 1\n    M = a[0]\n    for i in range(1, n - 1):\n        M = max(a[i], M)\n        if M > a[i] and a[i] < a[i + 1]:\n            flag = 0\n            break\n    if flag:\n        ans.append('YES')\n    else:\n        ans.append('NO')\nfor i in range(t):\n    print(ans[i])", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    s = [int(x) for x in input().split()]\n    m = max(s)\n    j = s.index(m)\n    f = 0\n    for l in range(0, j):\n        if s[l] > s[l + 1]:\n            f = 1\n            break\n    for k in range(j + 1, n - 1):\n        if s[k] < s[k + 1]:\n            f = 1\n            break\n    if f:\n        print('NO')\n    else:\n        print('YES')", "def trim(L):\n    if L[0] == 0:\n        return trim(L[1:])\n    else:\n        return L\n\ndef make(k):\n    import itertools\n    list1 = list(k)\n    list1 = [g for (g, _) in itertools.groupby(list1)]\n    return list1\n\ndef fn(L):\n    k = trim(L)\n    k = trim(k[::-1])\n    if len(k) < 3:\n        return 'YES'\n    for i in range(len(k) - 2):\n        if k[i] > k[i + 1] and k[i + 1] < k[i + 2]:\n            return 'NO'\n    k = make(k)\n    if len(k) < 3:\n        return 'YES'\n    for i in range(len(k) - 2):\n        if k[i] > k[i + 1] and k[i + 1] < k[i + 2]:\n            return 'NO'\n    return 'YES'\na = int(input())\nop = []\nfor i in range(a):\n    b = int(input())\n    c = input()\n    c = c.split()\n    c = [int(o) for o in c]\n    op.append(fn(c))\nfor t in op:\n    print(t)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = a.index(max(a))\n    b = a[:i]\n    c = a[i:]\n    if b == sorted(b) and c == sorted(c)[::-1]:\n        print('YES')\n    else:\n        print('NO')", "def peak(arr):\n    res = 0\n    cur = arr[0]\n    flag = 0\n    for i in arr:\n        if flag == 0 and i < cur:\n            flag = 1\n            res = cur\n        elif flag == 1 and i > cur:\n            return 'NO'\n        cur = i\n    return 'YES'\nt = int(input())\nfor test in range(t):\n    n = int(input())\n    arr = [int(_) for _ in input().split()]\n    print(peak(arr))", "t = int(input())\n\ndef f(a, n):\n    maxVal = 0\n    maxI = 0\n    reachedMax = False\n    for i in range(0, n - 1):\n        if not reachedMax and a[i + 1] < a[i]:\n            reachedMax = True\n        if reachedMax and a[i + 1] > a[i]:\n            return 'NO'\n    return 'YES'\nfor i in range(t):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    print(f(ls, n))", "def solve():\n    t = 1\n    t = int(input())\n    while t:\n        t -= 1\n        n = int(input())\n        a = [int(x) for x in input().split()]\n        max_b = max(a)\n        max_a = 0\n        for i in range(n - 1):\n            if a[i] > a[i + 1]:\n                max_a += a[i] - a[i + 1]\n        max_a += a[n - 1]\n        if max_a <= max_b:\n            print('YES')\n        else:\n            print('NO')\nsolve()", "import sys\n\ndef solve():\n    for _ in range(int(input())):\n        input()\n        a = list(map(int, input().split()))\n        s = a.index(max(a))\n        (L, R) = (a[:s], a[s:])\n        if L == sorted(L) and R == sorted(R, reverse=True):\n            print('YES')\n        else:\n            print('NO')\n\ndef main():\n    solve()\nmain()", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    i = 0\n    while i + 1 < n and l[i + 1] >= l[i]:\n        i = i + 1\n    while i + 1 < n and l[i + 1] <= l[i]:\n        i = i + 1\n    if i + 1 == n:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = input().split()\n    arr = [int(i) for i in arr]\n    increaseMode = True\n    isMin = True\n    for i in range(len(arr) - 1):\n        if increaseMode and arr[i + 1] < arr[i]:\n            increaseMode = False\n        if not increaseMode and arr[i + 1] > arr[i]:\n            isMin = False\n            break\n    print('YES' if isMin else 'NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    idx = a.index(max(a))\n    if a[:idx] == sorted(a[:idx]) and a[idx:] == sorted(a[idx:], reverse=True):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = 1\n    for i in range(1, n):\n        if l[i - 1] > l[i]:\n            s = 0\n        elif l[i - 1] < l[i] and s == 0:\n            print('NO')\n            break\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    err = 0\n    for i in range(1, n):\n        if arr[i] < arr[i - 1] and err == 0:\n            err += 1\n        if arr[i] > arr[i - 1] and err == 1:\n            print('NO')\n            err += 1\n            break\n    if err != 2:\n        print('YES')", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    list0 = list(map(int, input().split()))\n    index = list0.index(max(list0))\n    list1 = list0[:index + 1]\n    list2 = list0[index:]\n    temp = []\n    for num in list2:\n        temp.append(num)\n    list2.sort()\n    list2.reverse()\n    if sorted(list1) == list1 and list2 == temp:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    index = a.index(max(a))\n    a1 = a[:index + 1]\n    a2 = a[index:]\n    temp = list(a2)\n    a2.sort(reverse=True)\n    if sorted(a1) == a1 and a2 == temp:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    inc = 0\n    dec = 0\n    flag = False\n    arr = list(map(int, input().split()))\n    for i in range(1, n):\n        if arr[i] > arr[i - 1]:\n            if dec == 0:\n                inc = 1\n            else:\n                flag = True\n                break\n        elif arr[i] < arr[i - 1]:\n            dec = 1\n    if flag:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    flag = 0\n    ans = 0\n    for j in range(n - 1):\n        if flag == 0:\n            if a[j + 1] >= a[j]:\n                continue\n            else:\n                flag = 1\n        if flag == 1:\n            if a[j + 1] <= a[j]:\n                continue\n            else:\n                ans = 1\n                break\n    if ans == 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [0]\n    flag = True\n    a = list(map(int, input().split()))\n    ind = n\n    for i in range(n - 1):\n        if a[i] > a[i + 1]:\n            ind = i\n            break\n    for i in range(ind, n - 1):\n        if a[i] < a[i + 1]:\n            flag = False\n            break\n    print('YES') if flag else print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = input()\n    arr = arr.split()\n    a = [int(x) for x in arr]\n    mx = max(a)\n    mx_ind = a.index(mx)\n    a0 = a[:mx_ind]\n    b0 = a0.copy()\n    b0.sort()\n    a1 = a[mx_ind:]\n    b1 = a1.copy()\n    b1.sort(reverse=True)\n    if a0 == b0 and a1 == b1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    i = 1\n    while i < n and arr[i] >= arr[i - 1]:\n        i += 1\n    while i < n and arr[i] <= arr[i - 1]:\n        i += 1\n    print('YES' if i == n else 'NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    i = 0\n    while i + 1 < n and l[i + 1] >= l[i]:\n        i += 1\n    while i + 1 < n and l[i + 1] <= l[i]:\n        i += 1\n    if i + 1 == n:\n        print('YES')\n    else:\n        print('NO')", "for pratyush in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = a.copy()\n    b.sort()\n    (x, y, i, f) = (0, n - 1, 0, 1)\n    while x <= y:\n        if a[x] == b[i]:\n            x += 1\n            i += 1\n        elif a[y] == b[i]:\n            y -= 1\n            i += 1\n        else:\n            f = 0\n            break\n    if f:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    inx = a.index(max(a))\n    if a[:inx] == sorted(a[:inx]) and a[inx:] == sorted(a[inx:], reverse=True):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a_sort = sorted(a)\n    if a == a_sort or a == a_sort[::-1]:\n        print('YES')\n        continue\n    idx = a.index(max(a))\n    if sorted(a[:idx]) == a[:idx] and sorted(a[idx:])[::-1] == a[idx:]:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    _seq = [int(x) for x in input().split(' ')]\n    seq = [_seq[0]]\n    for s in _seq[1:]:\n        if s != seq[-1]:\n            seq.append(s)\n    ans = 'YES'\n    for i in range(1, len(seq) - 1):\n        if seq[i - 1] > seq[i] < seq[i + 1]:\n            ans = 'NO'\n            break\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    flag = 0\n    c = 0\n    for i in range(n - 1):\n        if l[i + 1] > l[i] and flag == 1:\n            c = 1\n            break\n        elif l[i + 1] < l[i]:\n            flag = 1\n    if c == 1:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    size = int(input())\n    array = tuple(map(int, input().strip().split(' ')))\n    (left, right) = (-1, -1)\n    for idx in range(0, len(array) - 1):\n        if array[idx + 1] >= array[idx]:\n            continue\n        left = idx\n        break\n    for idx in range(len(array) - 1, -1, -1):\n        if array[idx - 1] >= array[idx]:\n            continue\n        right = idx\n        break\n    yes = left >= right or left == -1 or right == -1\n    print('YES' if yes else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = max(l)\n    i = l.index(m)\n    s = 'NO'\n    if l[:i] == sorted(l[:i]) and l[i:n] == sorted(l[i:n])[::-1]:\n        s = 'YES'\n    print(s)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    indx = list1.index(max(list1))\n    if list1[:indx] == sorted(list1[:indx]) and list1[indx:] == sorted(list1[indx:], reverse=True):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    inp = list(map(int, input().split()))\n    maxdex = inp.index(max(inp))\n    flag = 0\n    for i in range(1, maxdex):\n        if inp[i] < inp[i - 1]:\n            flag = 1\n            break\n    if flag == 0:\n        for i in range(maxdex + 1, n - 1):\n            if inp[i] < inp[i + 1]:\n                flag = 1\n                break\n    if flag == 1:\n        print('NO')\n    else:\n        print('YES')", "def solve():\n    b = int(input())\n    c = list(map(int, input().split(maxsplit=b - 1)))\n    count = 0\n    for x in range(1, b - 1):\n        if c[x - 1] > c[x] and count == 0:\n            count += 1\n        if c[x] < c[x + 1] and count == 1:\n            print('NO')\n            count += 1\n            break\n    if count != 2:\n        print('YES')\na = int(input())\nfor _ in range(a):\n    solve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    flag = False\n    flag2 = True\n    x = a[0]\n    for i in a:\n        if i < x:\n            flag = True\n        if flag:\n            if i > x:\n                flag2 = False\n                break\n        x = i\n    if flag2:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    first = False\n    second = False\n    for i in range(n - 1):\n        if not first and arr[i] > arr[i + 1]:\n            first = True\n        elif first and arr[i] < arr[i + 1]:\n            second = True\n        else:\n            pass\n    if second:\n        print('NO')\n    else:\n        print('YES')", "def solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    i = 0\n    while i < n - 1 and arr[i + 1] >= arr[i]:\n        i += 1\n    if i == n - 1:\n        print('YES')\n        return\n    j = 1\n    while j < n and arr[n - j - 1] >= arr[n - j]:\n        j += 1\n    if j == n:\n        print('YES')\n        return\n    if i + j + 1 >= n:\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nfor _ in range(t):\n    solve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    sequence = [int(num) for num in input().split()]\n    num_changes = 0\n    is_increasing = True\n    for i in range(n - 1):\n        if is_increasing and sequence[i] > sequence[i + 1]:\n            is_increasing = False\n            num_changes += 1\n        elif not is_increasing and sequence[i] < sequence[i + 1]:\n            is_increasing = True\n            num_changes += 1\n    if num_changes >= 2:\n        print('NO')\n    else:\n        print('YES')", "for f in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    da = True\n    br = n - 1\n    dosad = a[0]\n    for i in range(n - 1):\n        if dosad > a[i + 1]:\n            br = i + 1\n            dosad = a[i + 1]\n            break\n        dosad = a[i + 1]\n    for i in range(br, n - 1):\n        if dosad < a[i + 1]:\n            da = False\n            break\n        dosad = a[i + 1]\n    if not da:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    mx = max(arr)\n    pos_mx = arr.index(mx)\n    arr21 = arr[:pos_mx]\n    arr22 = arr[pos_mx:]\n    arr211 = sorted(arr21)\n    arr222 = sorted(arr22, reverse=True)\n    if arr211 == arr21 and arr222 == arr22:\n        print('YES')\n        continue\n    print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    array = list(map(int, input().split()))\n    array.insert(0, -1)\n    array.append(-1)\n    glav = True\n    flag = True\n    j = 1\n    while flag:\n        if array[j] >= array[j - 1]:\n            j += 1\n        else:\n            flag = False\n    for k in range(j, n + 1):\n        if array[k] <= array[k - 1]:\n            continue\n        else:\n            glav = False\n            break\n    if glav:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    T = list(map(int, input().split()))\n    Ind = T.index(max(T))\n    if T[:Ind] == sorted(T[:Ind]) and T[Ind:] == sorted(T[Ind:], reverse=True):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    if n < 3:\n        print('YES')\n    else:\n        flag = False\n        for i in range(n - 1):\n            if a[i] > a[i + 1]:\n                flag = True\n            if flag and a[i] < a[i + 1]:\n                print('NO')\n                break\n        else:\n            print('YES')", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    lmax = l.index(max(l))\n    lleft = l[:lmax]\n    lright = l[lmax + 1:]\n    if lleft == sorted(lleft) and lright == sorted(lright, reverse=True):\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    flag = 0\n    for i in range(0, n - 1):\n        if arr[i] > arr[i + 1]:\n            flag = 1\n        if flag == 1 and arr[i] < arr[i + 1]:\n            flag = 2\n            break\n    if flag == 2:\n        print('NO')\n    else:\n        print('YES')", "for z in range(0, int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 'YES'\n    x = -1\n    for i in range(0, n - 1):\n        if l[i] > l[i + 1]:\n            x = i\n            break\n    if x != -1:\n        for j in range(x + 1, n - 1):\n            if l[j + 1] > l[j]:\n                ans = 'NO'\n                break\n    print(ans)", "for z in range(0, int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 'YES'\n    x = -1\n    for i in range(0, n - 1):\n        if l[i] > l[i + 1]:\n            x = i\n            break\n    if x != -1:\n        for j in range(x + 1, n - 1):\n            if l[j + 1] > l[j]:\n                ans = 'NO'\n                break\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    j = 1\n    while j < len(arr) and arr[j] >= arr[j - 1]:\n        j = j + 1\n    while j < len(arr) and arr[j] <= arr[j - 1]:\n        j = j + 1\n    if j == n:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    i = lst.index(max(lst))\n    l1 = lst[:i + 1]\n    l2 = lst[i:]\n    l2 = l2[::-1]\n    if sorted(l1) == l1 and l2 == sorted(l2):\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    i = 0\n    while i + 1 < n and l[i + 1] >= l[i]:\n        i = i + 1\n    while i + 1 < n and l[i + 1] <= l[i]:\n        i = i + 1\n    if i + 1 == n:\n        print('YES')\n    else:\n        print('NO')", "for t in range(int(input())):\n    n = int(input())\n    lst = [int(i) for i in input().split()]\n    inc = 0\n    dec = 0\n    f = 0\n    for i in range(1, n):\n        if lst[i] > lst[i - 1]:\n            if dec == 0:\n                inc = 1\n            else:\n                f = 1\n                break\n        elif lst[i] < lst[i - 1]:\n            dec = 1\n    if f:\n        print('NO')\n    else:\n        print('YES')", "import sys\nv = int(sys.stdin.readline())\nfor _ in range(v):\n    n = int(sys.stdin.readline())\n    p = list(map(int, input().split()))[:n]\n    sol = 'YES'\n    c = False\n    for i in range(1, n):\n        if p[i - 1] > p[i]:\n            c = True\n        elif p[i - 1] < p[i] and c:\n            sol = 'NO'\n            break\n    sys.stdout.write(str(sol) + '\\n')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    i = l.index(max(l))\n    a = l[:i + 1]\n    b = l[i:][::-1]\n    if a == sorted(a):\n        if b == sorted(b):\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "from mimetypes import suffix_map\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    prefix_len = 1\n    while prefix_len < n and arr[prefix_len - 1] <= arr[prefix_len]:\n        prefix_len += 1\n    suf_len = 1\n    j = n - 2\n    while suf_len < n and arr[n - suf_len - 1] >= arr[n - suf_len]:\n        suf_len += 1\n    if prefix_len + suf_len >= n:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (s, f) = (0, 0)\n    for i in range(n - 1):\n        if a[i] > a[i + 1]:\n            s = 1\n        elif a[i] < a[i + 1] and s == 1:\n            print('NO')\n            f = 1\n            break\n    if f == 0:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    i = 1\n    while i < n and arr[i] >= arr[i - 1]:\n        i += 1\n    while i < n and arr[i] <= arr[i - 1]:\n        i += 1\n    print('YES' if i == n else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    i = 1\n    while i < n and arr[i] >= arr[i - 1]:\n        i += 1\n    while i < n and arr[i] <= arr[i - 1]:\n        i += 1\n    print('YES' if i == n else 'NO')", "testCase = int(input())\nfor i in range(testCase):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ind = 0\n    while ind + 1 < n and arr[ind] <= arr[ind + 1]:\n        ind += 1\n    while ind + 1 < n and arr[ind] >= arr[ind + 1]:\n        ind += 1\n    if ind + 1 == n:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    u = 0\n    v = 0\n    for j in range(1, n - 1):\n        if a[j] < a[j - 1]:\n            u += 1\n            v = j\n            break\n    for k in range(v, n - 1):\n        if a[k] < a[k + 1]:\n            u += 1\n            break\n    if u >= 2:\n        print('NO')\n    else:\n        print('YES')", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 1\n    while i < n and a[i] >= a[i - 1]:\n        i += 1\n    while i < n and a[i] <= a[i - 1]:\n        i += 1\n    if i == n:\n        print('YES')\n    else:\n        print('NO')", "def check(n, arr, narr):\n    (l, r) = (0, n - 1)\n    i = 0\n    while l <= r:\n        if arr[l] == narr[i]:\n            l += 1\n            i += 1\n        elif arr[r] == narr[i]:\n            r -= 1\n            i += 1\n        else:\n            return False\n    return True\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    narr = arr.copy()\n    narr.sort()\n    if check(n, arr, narr):\n        print('YES')\n    else:\n        print('NO')", "def solve():\n    n = int(input())\n    lst = list(map(int, input().split(' ')))\n    flag = False\n    for i in range(n - 1):\n        if flag and lst[i + 1] > lst[i]:\n            print('NO')\n            return\n        if lst[i + 1] < lst[i]:\n            flag = True\n    print('YES')\nt = int(input())\nwhile t:\n    t -= 1\n    solve()", "def check():\n    b = [a[0]]\n    for i in range(1, len(a)):\n        if a[i] != b[-1]:\n            b.append(a[i])\n    if len(b) <= 1:\n        return True\n    if b[1] < b[0]:\n        for i in range(1, len(b)):\n            if b[i] > b[i - 1]:\n                return False\n        return True\n    j = 0\n    while j < len(b) - 1 and b[j] < b[j + 1]:\n        j += 1\n    for k in range(j, len(b) - 1):\n        if b[k] < b[k + 1]:\n            return False\n    return True\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    print('YES' if check() else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().rstrip().split()))\n    count = False\n    for i in range(n - 1):\n        if arr[i] > arr[i + 1]:\n            count = True\n        if arr[i] < arr[i + 1] and count:\n            print('NO')\n            break\n    else:\n        print('YES')"]