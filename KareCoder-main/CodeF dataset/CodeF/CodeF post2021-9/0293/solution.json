["from collections import *\nfrom itertools import permutations\nimport sys\nimport math\nsys.setrecursionlimit(10 ** 5)\nitr = (line for line in sys.stdin.read().split('\\n'))\nINP = lambda : next(itr)\n\ndef ni():\n    return int(INP())\n\ndef nl():\n    return [int(_) for _ in INP().split()]\n\ndef err(*s):\n    print(*s, file=sys.stderr)\n\ndef pl(a):\n    print(' '.join(map(str, a)))\n\ndef solve(n, a, b):\n    if a > b:\n        return 1\n    else:\n        return math.ceil(n / a)\n\ndef main():\n    t = ni()\n    for _ in range(t):\n        (n, a, b) = nl()\n        print(solve(n, a, b))\nmain()", "import sys\ninput = sys.stdin.readline\nimport math\n\ndef print_str_line(str):\n    sys.stdout.write(str + '\\n')\n\ndef print_number(number):\n    print_str_line(f'{number}')\n\ndef ans(n, a, b):\n    if a > b:\n        return 1\n    ans = math.ceil(n / a)\n    return ans\nnumber_of_test_cases = int(input())\nfor i in range(number_of_test_cases):\n    (n, a, b) = [int(num) for num in input().split(' ')]\n    _ans = ans(n, a, b)\n    print_number(_ans)", "import sys\ns = sys.stdin.read()\nlines = s.split('\\n')\nimport math\n\ndef solve(a, b, c):\n    if c < b:\n        print(1)\n        return\n    result = math.ceil(a / b)\n    print(result)\nfor line in lines[1:-1]:\n    (a, b, c) = map(int, line.split())\n    solve(a, b, c)", "import sys\ns = sys.stdin.read()\nlines = s.split('\\n')\nimport math\n\ndef memorize(func):\n    cache = {}\n\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        key = str(args) + str(kwargs)\n        if key not in cache:\n            cache[key] = func(*args, **kwargs)\n        return cache[key]\n    return wrapper\n\ndef cal_ceil(a, b):\n    return math.ceil(a / b)\n\ndef solve(a, b, c):\n    if c < b:\n        print(1)\n        return\n    result = cal_ceil(a, b)\n    print(result)\nfor line in lines[1:-1]:\n    (a, b, c) = map(int, line.split())\n    solve(a, b, c)", "import sys, math\nrd = sys.stdin.readline\nfor _ in range(int(rd())):\n    (n, a, b) = map(int, rd().split())\n    if a > b:\n        print(1)\n    else:\n        print(math.ceil(n / a))", "import math\n\ndef ans(n, a, b):\n    if b >= a:\n        r = int(math.ceil(n / a))\n        return r\n    else:\n        return 1\nt = int(input())\nl = []\nfor i in range(t):\n    (n, a, b) = map(int, input().split())\n    l.append(ans(n, a, b))\nfor i in range(t):\n    print(l[i])", "import sys\ninput = sys.stdin.readline\nt = int(input())\nwhile t > 0:\n    (n, a, b) = map(int, input().split())\n    if a > b:\n        print(1)\n    else:\n        print(int((n + a - 1) / a))\n    t -= 1", "samples = [*open(0)]\ncount = samples[0]\ni = 1\nwhile i < len(samples):\n    [n, a, b] = samples[i].split(' ')\n    if int(a) > int(b):\n        print(1)\n    else:\n        n = int(n) / int(a) + (int(n) % int(a) > 0)\n        print(int(n))\n    i += 1", "import sys\nfrom os import path\n\ndef input():\n    return sys.stdin.readline().strip()\n\ndef solve(n, a, b):\n    (q, r) = (n // a, n % a)\n    if a > b:\n        print(1)\n    elif q and (not r):\n        print(q)\n    elif q and bool(r):\n        print(q + 1)\n    elif not q:\n        print(1)\n\ndef main():\n    testcases = int(input())\n    for _ in range(testcases):\n        (n, a, b) = map(int, input().split())\n        solve(n, a, b)\nif path.exists('Tests'):\n    sys.stdin = open('Tests/input_1.txt', 'r')\n    sys.stdout = open('Tests/output_1a.txt', 'w')\nmain()", "def exchange_rates(lyst):\n    val = lyst[0]\n    gold_to_silver = lyst[1]\n    silver_to_gold = lyst[2]\n    if val <= gold_to_silver or gold_to_silver > silver_to_gold:\n        return 1\n    elif val / gold_to_silver % 1 == 0:\n        return int(val / gold_to_silver)\n    else:\n        return int(val / gold_to_silver) + 1\n\ndef printer(lyst):\n    for i in range(len(lyst)):\n        print(lyst[i])\nfinal_list = []\ncases = int(input())\nfor _ in range(cases):\n    arr = list(input().split(' '))\n    for j in range(len(arr)):\n        arr[j] = int(arr[j])\n    final_list.append(exchange_rates(arr))\nprinter(final_list)", "import sys\nfrom functools import wraps\ns = sys.stdin.read()\nlines = s.split('\\n')\nimport math\n\ndef memorize(func):\n    cache = {}\n\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        key = str(args) + str(kwargs)\n        if key not in cache:\n            cache[key] = func(*args, **kwargs)\n        return cache[key]\n    return wrapper\n\ndef cal_ceil(a, b):\n    return math.ceil(a / b)\n\ndef solve(a, b, c):\n    if c < b:\n        print(1)\n        return\n    result = cal_ceil(a, b)\n    print(result)\nfor line in lines[1:-1]:\n    (a, b, c) = map(int, line.split())\n    solve(a, b, c)", "t = int(input())\nout = []\nfor i in range(t):\n    (n, a, b) = map(int, input().split())\n    if a > b:\n        out.append(1)\n    else:\n        out.append(n // a + bool(n % a))\nfor k in out:\n    print(k)", "t = int(input())\nprin = []\nfor i in range(t):\n    (n, a, b) = input().split()\n    (n, a, b) = (int(n), int(a), int(b))\n    if a - b <= 0:\n        q = int(n / a)\n        if n % a == 0:\n            prin.append(q)\n        else:\n            prin.append(q + 1)\n    else:\n        prin.append(1)\nfor i in prin:\n    print(i)", "test_case = int(input())\nans = []\nfor i in range(test_case):\n    (n, s, b) = input().split()\n    if int(s) >= int(n):\n        ans.append(1)\n    elif int(s) <= int(b):\n        if int(n) % int(s) == 0:\n            ans.append(int(n) // int(s))\n        else:\n            ans.append(int(n) // int(s) + 1)\n    else:\n        ans.append(1)\nfor i in range(test_case):\n    print(ans[i])", "from sys import stdin\n\ndef main():\n    for _ in range(int(stdin.readline().strip())):\n        (n, a, b) = list(map(int, stdin.readline().strip().split()))\n        print(exchange(n, a, b))\n\ndef exchange(n, a, b):\n    if a > b:\n        return 1\n    else:\n        return n // a + (n % a != 0)\nmain()", "from math import ceil\nn = int(input())\nresults = []\nfor i in range(n):\n    nums = input()\n    nums = nums.split()\n    nums = list(map(lambda x: int(x), nums))\n    if nums[1] > nums[2]:\n        results.append(1)\n    elif nums[1] <= nums[2]:\n        ans = nums[0] / nums[1]\n        results.append(ceil(ans))\nfor item in results:\n    print(item)", "from math import ceil\ncases = int(input())\ninp = []\nfor _ in range(cases):\n    inp.append([int(x) for x in input().split(' ')])\nfor x in inp:\n    if x[1] > x[2]:\n        print(1)\n    else:\n        print(ceil(x[0] / x[1]))", "from math import ceil\ncases = int(input())\ninp = []\nfor _ in range(cases):\n    inp.append([int(x) for x in input().split(' ')])\nfor x in inp:\n    if x[1] > x[2]:\n        print(1)\n    else:\n        print(ceil(x[0] / x[1]))", "import math\nt = int(input(''))\nA = []\nfor i in range(t):\n    (n, a, b) = [int(p) for p in input('').split()]\n    A.append([n, a, b])\nfor i in range(t):\n    arr = A[i]\n    if arr[1] > arr[2]:\n        print(1)\n    else:\n        print(math.ceil(arr[0] / arr[1]))", "t = int(input())\nfor i in range(t):\n    (n, a, b) = map(int, input().split())\n    if a <= b:\n        print(-(-n // a))\n    else:\n        print(1)", "for _ in '0' * int(input()):\n    (n, a, b) = map(int, input().split())\n    print(1 if a > b else n // a + (n % a != 0))", "for _ in '0' * int(input()):\n    (n, a, b) = map(int, input().split())\n    print(1 if a > b else n // a + (n % a != 0))", "t = int(input())\nimport math\nwhile t > 0:\n    (n, a, b) = input().split()\n    (n, a, b) = (int(n), int(a), int(b))\n    if b < a:\n        print(1)\n    else:\n        print(math.ceil(n / a))\n    t -= 1", "from math import ceil\nfor ijij in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    if a <= b:\n        print(ceil(n / a))\n    else:\n        print(1)", "import math\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    if a <= b:\n        ans = math.ceil(n / a)\n    else:\n        ans = 1\n    print(ans)", "from math import ceil\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    if a > b:\n        print(1)\n    else:\n        print(int(ceil(n / a)))", "def sol(n, g, s):\n    if s >= g:\n        if n % g != 0:\n            return n // g + 1\n        return n // g\n    return 1\nfor _ in range(int(input())):\n    a = input().split()\n    print(sol(int(a[0]), int(a[1]), int(a[2])))", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    print(1 if b > c else (a + b - 1) // b)", "import math\nt = int(input())\nx = 0\nwhile x < t:\n    (n, a, b) = map(int, input().split(' '))\n    if a <= b:\n        print(math.ceil(n / a))\n    else:\n        print(1)\n    x = x + 1", "for i in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    ans = 0\n    if b < a:\n        ans = 1\n    else:\n        ans = n // a\n        if n % a:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    print(1 if a > b else (n + a - 1) // a)", "import math as kim\nn = int(input())\nfor _ in range(n):\n    (n, a, b) = [int(i) for i in input().split()]\n    if a > b:\n        print(1)\n    else:\n        t = kim.ceil(n / a)\n        print(t)", "from math import ceil\nfor _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    if b > c:\n        print(1)\n    else:\n        print(ceil(a / b))", "tests = int(input())\nfor _ in range(tests):\n    (n, a, b) = list(map(int, input().split()))\n    if a > b:\n        print(1)\n    else:\n        print(n // a + (1 if n % a else 0))", "import math\nt = int(input())\nfor i in range(t):\n    (n, a, b) = input().split()\n    n = int(n)\n    a = int(a)\n    b = int(b)\n    if a <= b:\n        print(math.ceil(n / a))\n    else:\n        print('1')", "import sys\nt = int(input())\nfor _ in range(t):\n    nab = [int(ii) for ii in input().split()]\n    (n, a, b) = (nab[0], nab[1], nab[2])\n    if b < a:\n        print(1)\n    else:\n        print((n - 1) // a + 1)", "import math\nt = int(input())\nfor i in range(t):\n    (n, a, b) = map(int, input().split())\n    count = 0\n    if a < b:\n        count = math.ceil(n / a)\n    elif a > b:\n        count = 1\n    elif a == b:\n        count = math.ceil(n / a)\n    print(count)", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    print(1 if b > c else (a + b - 1) // b)", "import math\n\ndef solve(n, a, b):\n    argent = 0\n    mission = 0\n    if a <= b:\n        mission = math.ceil(n / a)\n    else:\n        mission += 1\n    return mission\n\ndef test():\n    t = int(input())\n    for j in range(t):\n        (n, a, b) = [int(x) for x in input().split()]\n        print(solve(n, a, b))\ntest()", "t = int(input())\nfor i in range(t):\n    raw = input()\n    (n, a, b) = map(int, raw.split())\n    if a > b:\n        print(1)\n    else:\n        print(n // a + (n % a > 0))", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    print(1 if a > b else n // a + (n % a != 0))", "import math\nfor i in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    m = n // a\n    if a <= b:\n        print(int(math.ceil(n / a)))\n    else:\n        print(1)", "t = int(input())\nfor i in range(t):\n    (n, a, b) = map(int, input().split())\n    if b >= a:\n        print(n // a + (n % a != 0))\n    else:\n        print(1)", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    if b < a:\n        print(1)\n    else:\n        print(n // a + (1 if n % a != 0 else 0))", "import math\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    if a > b:\n        print(1)\n    else:\n        print(math.ceil(n / a))", "T = int(input())\nfor i in range(T):\n    (n, a, b) = list(map(int, input().split()))\n    k = n // a\n    if a >= n or (b < a and a < n):\n        print(1)\n    elif b >= a:\n        if n % a == 0:\n            print(k)\n        else:\n            print(k + 1)", "import math\nfor i in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    if a > b:\n        print(1)\n    else:\n        print(math.ceil(n / a))", "import math\nfor i in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    if a > b:\n        print(1)\n    else:\n        print(math.ceil(n / a))", "import math\nt = int(input())\nwhile t > 0:\n    t -= 1\n    (n, a, b) = list(map(int, input().split(' ')))\n    if b < a:\n        print(1)\n    else:\n        print(math.ceil(n / a))", "import math\n\ndef monocarp(n, a, b):\n    if n == 0:\n        return 0\n    elif a > b:\n        return 1\n    else:\n        return math.ceil(n / a)\nt = int(input())\nfor i in range(t):\n    lis = list(map(int, input().split()))\n    print(monocarp(lis[0], lis[1], lis[2]))", "for i in range(int(input())):\n    line = input().split(' ')\n    n = int(line[0])\n    a = int(line[1])\n    b = int(line[2])\n    if a > b:\n        print(1)\n    else:\n        print((n - 1) // a + 1)", "import math\nnum = int(input())\nfor j in range(num):\n    txt = input()\n    x = txt.split()\n    n = int(x[0])\n    a = int(x[1])\n    b = int(x[2])\n    if a <= b:\n        quest = math.ceil(n / a)\n        print(quest)\n    else:\n        print(1)", "def main():\n    al = int(input())\n    for i in range(al):\n        (n, a, b) = [int(x) for x in input().split()]\n        if a > b:\n            print(1)\n        else:\n            print((n + a - 1) // a)\nmain()", "t = int(input())\nfor tests in range(t):\n    (p, a, b) = map(int, input().split())\n    if a > b:\n        print(1)\n    elif p % a == 0:\n        print(p // a)\n    else:\n        print(p // a + 1)", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    if a > b:\n        print(1)\n    else:\n        res1 = (n + a - 1) // a\n        print(res1)", "test_cases = int(input())\nfor _ in range(test_cases):\n    (n, a, b) = map(int, input().split())\n    quests = 0\n    if a > b:\n        print(1)\n    else:\n        temp = n // a\n        if n % a != 0:\n            temp += 1\n        print(temp)", "num_of_cases = int(input())\nfor case in range(num_of_cases):\n    (n, a, b) = map(int, input().split())\n    if a > b:\n        print(1)\n    else:\n        print((n - 1) // a + 1)", "from math import ceil\nfor ijij in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    if a <= b:\n        print(ceil(n / a))\n    else:\n        print(1)", "for t in range(int(input())):\n    (n, a, b) = list(map(int, input().split()))\n    if b < a:\n        print(1)\n        continue\n    r = n // a\n    if r == n / a:\n        print(r)\n    else:\n        print(r + 1)", "import math\nfor _ in range(int(input())):\n    (n, a, b) = list(map(int, input().split(' ')))\n    if a > b:\n        print(1)\n    else:\n        print(math.ceil(n / a))", "import math\nt = int(input())\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    if a > b:\n        print(1)\n    else:\n        print(math.ceil(n / a))", "import math\n\ndef solve(n, a, b):\n    res = 1\n    if a <= b:\n        res = math.ceil(n / a)\n    print(res)\nt = int(input())\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    solve(n, a, b)", "import math\nt = int(input())\nfor i in range(t):\n    (n, a, b) = map(int, input().split())\n    if a > b:\n        print(1)\n    else:\n        print(math.ceil(n / a))", "import math\n\ndef solve():\n    [n, a, b] = [int(num) for num in input().split()]\n    if b < a:\n        print(1)\n    else:\n        quests = n / a\n        print(math.ceil(quests))\nfor _ in range(int(input())):\n    solve()", "import math\nt = int(input())\nquests = 0\ns_coins = 0\nfor i in range(t):\n    quests = 0\n    (n, a, b) = map(int, input().split())\n    quests = math.ceil(n / a)\n    if a > b:\n        quests = 1\n        pass\n    print(quests)", "import math\nt = int(input())\nfor test in range(t):\n    (n, a, b) = map(int, input().split())\n    if a <= b:\n        x = math.ceil(n / a)\n    else:\n        x = 1\n    print(x)", "t = int(input())\nfor i in range(t):\n    inp = list(map(int, input().split()))\n    n = inp[0]\n    a = inp[1]\n    b = inp[2]\n    if a > b:\n        print('1')\n    elif n % a != 0:\n        print(str(int(n / a) + 1))\n    else:\n        print(str(int(n / a)))", "def solve(N, A, B) -> int:\n    if B < A:\n        return 1\n    return (N + A - 1) // A\n\ndef run_test_case() -> None:\n    (N, A, B) = list(map(int, input().split()))\n    print(solve(N, A, B))\n\ndef main():\n    T = int(input())\n    while T > 0:\n        T -= 1\n        run_test_case()\nmain()", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = list(map(int, input().split()))\n    if a > b:\n        print(1)\n    else:\n        print(-(-n // a))", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = list(map(int, input().split()))\n    print(1 if a > b else -(-n // a))", "from math import ceil\n\ndef func(n, a, b):\n    if a > b:\n        return 1\n    return ceil(n / a)\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        (n, a, b) = map(int, input().split())\n        print(func(n, a, b))\nmain()", "t = int(input())\nfor i in range(0, t):\n    (n, a, b) = map(int, input().split())\n    if a > b:\n        print('1')\n    else:\n        print((n + a - 1) // a)", "import math\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    if b < a:\n        print('1')\n    else:\n        print(math.ceil(n / a))", "for i in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    print([(n - 1) // a + 1, 1][a > b or a >= n])", "for i in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    if a > b:\n        print(1)\n    else:\n        ans = n // a\n        if n % a != 0:\n            ans += 1\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = list(map(int, input().split()))\n    print(1 if a > b else -(-n // a))", "import math\nfor __ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    if a <= b:\n        print(math.ceil(n / a))\n    else:\n        print(1)", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    print(1 if a > b else n // a + (n % a != 0))", "from math import *\nfor _ in ' ' * int(input()):\n    (n, a, b) = map(int, input().split())\n    if b >= a:\n        print(ceil(n / a))\n    else:\n        print(1)", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    (total, a, b) = (int(i) for i in input().split(' '))\n    if a > b:\n        print(1)\n    else:\n        print(int(ceil(total / a)))", "import math\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    if b >= a:\n        print(math.ceil(n / a))\n    else:\n        print(1)", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().strip().split())\n    if a <= b:\n        quests_no = -(-n // a)\n    else:\n        quests_no = 1\n    print(quests_no)", "import math\nt = int(input())\nwhile t > 0:\n    (n, a, b) = [int(x) for x in input().split(' ')]\n    if b < a:\n        print(1)\n    else:\n        x = math.ceil(n / a)\n        print(x)\n    t -= 1", "for _ in range(int(input())):\n    (n, a, b) = list(map(int, input().split()))\n    if b < a:\n        print(1)\n    elif n % a == 0:\n        print(n // a)\n    else:\n        print(n // a + 1)", "import math\nfor i in range(int(input())):\n    (n, a, b) = map(int, input().split(' '))\n    if a > b:\n        print(1)\n    else:\n        print(math.ceil(n / a))", "def main():\n    t = int(input())\n    for i in range(t):\n        (n, a, b) = map(int, input().split())\n        if a > b:\n            print(1)\n        else:\n            print((n + a - 1) // a)\nmain()", "t = int(input())\nfor t1 in range(t):\n    (n, a, b) = map(int, input().split())\n    if a > b:\n        print(1)\n    elif n % a == 0:\n        print(n // a)\n    else:\n        print(1 + n // a)", "import math\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    if a <= b:\n        print(math.ceil(n / a))\n    else:\n        print(1)", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    if a > b:\n        print(1)\n    else:\n        x = n // a\n        m = n % a\n        if m == 0:\n            print(x)\n        else:\n            print(x + 1)", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    if a > b:\n        print(1)\n    else:\n        x = n // a\n        m = n % a\n        if m == 0:\n            print(x)\n        else:\n            print(x + 1)", "def gold(n, a, b):\n    if a > n:\n        return 1\n    elif a <= b:\n        if n % a > 0:\n            return int(n / a) + 1\n        else:\n            return int(n / a)\n    elif b < a:\n        return 1\ntc = int(input())\nfor i in range(tc):\n    (a, b, c) = map(int, input().split())\n    print(gold(a, b, c))", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    if a > b:\n        print(1)\n    else:\n        print((n + a - 1) // a)", "import math\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    if b < a:\n        print(1)\n    else:\n        print(math.ceil(n / a))", "import os, sys, io, math\nfrom array import *\nfrom math import *\nfrom bisect import *\nfrom heapq import *\nfrom functools import *\nfrom itertools import *\nfrom collections import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\nfor _ in range(IN()):\n    (n, a, b) = map(int, input().split())\n    print(1 if a > b else ceil(n / a))", "for _ in '0' * int(input()):\n    (n, a, b) = map(int, input().split())\n    print(1 if a > b else n // a + (n % a != 0))", "import math\n\ndef exchange(goal, g_to_s, s_to_g):\n    if g_to_s > s_to_g:\n        return 1\n    else:\n        return math.ceil(goal / g_to_s)\nfor _ in range(int(input())):\n    (goal, g_to_s, s_to_g) = map(int, input().split())\n    print(exchange(goal, g_to_s, s_to_g))", "import math\nimport sys\n\ndef listInput():\n    return list(map(int, input.split()))\n\ndef solve():\n    inputString = input()\n    lst = list(map(int, inputString.split()))\n    n = lst[0]\n    a = lst[1]\n    b = lst[2]\n    if b < a:\n        print(1)\n    else:\n        c = math.ceil(n / a)\n        print(c)\nt = int(input())\nwhile t > 0:\n    solve()\n    t -= 1", "import math\nt = int(input())\nfor k in range(t):\n    (n, a, b) = (int(x) for x in input().split())\n    if b >= a:\n        answer = math.ceil(n / a)\n    else:\n        answer = 1\n    print(answer)", "for jj in range(int(input())):\n    (n, a, b) = [int(i) for i in input().split()]\n    if a > b:\n        print(1)\n    else:\n        print((n - 1) // a + 1)", "T = int(input())\nfor t in range(T):\n    (n, a, b) = map(int, input().strip().split())\n    if a <= b:\n        print(int(n / a) + (n % a != 0))\n    else:\n        print(int(b / a) + (b % a != 0))"]