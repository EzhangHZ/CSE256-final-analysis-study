["import math\nt = int(input())\npalindroms = []\nfor i in range(24):\n    if i % 10 < 6:\n        if i < 10:\n            e = '0' + str(i)\n            a = str(i % 10) + str(i // 10)\n            palindroms.append(e + a)\n        else:\n            a = i % 10 * 10 + i // 10\n            palindroms.append(str(i * 100 + a))\nfor i in range(t):\n    (s, y) = input().split()\n    (h, m) = s.split(':')\n    time = int(h) * 60 + int(m)\n    x = int(y)\n    otvet = 0\n    min_step = math.gcd(x, 1440)\n    for j in range(len(palindroms)):\n        if (int(palindroms[j]) % 100 + int(palindroms[j]) // 100 * 60 - time) % min_step == 0:\n            otvet += 1\n    print(otvet)", "from math import gcd\npalindromes = [int(s.split(':')[0]) * 60 + int(s.split(':')[1]) for s in ['00:00', '01:10', '02:20', '03:30', '04:40', '05:50', '10:01', '11:11', '12:21', '13:31', '14:41', '15:51', '20:02', '21:12', '22:22', '23:32']]\nfor _ in range(int(input())):\n    c = 0\n    (s, x) = input().split(' ')\n    s = int(s.split(':')[0]) * 60 + int(s.split(':')[1])\n    x = int(x)\n    for p in palindromes:\n        if (p - s) % 1440 % gcd(x, 1440) == 0:\n            c += 1\n    print(c)", "def gcd(x, y):\n    if x < y:\n        z = x\n        x = y\n        y = z\n    while y != 0:\n        z = x % y\n        x = y\n        y = z\n    return x\n\ndef f(x):\n    a = x % 10\n    b = x // 10\n    return a * 10 + b\nrec = []\nfor i in range(24):\n    for j in range(60):\n        if i == f(j):\n            rec.append(i * 60 + j)\nn = int(input(''))\nfor i in range(n):\n    a = input('').split(' ')\n    m = int(a[1])\n    t = a[0].split(':')\n    x = int(t[0]) * 60 + int(t[1])\n    s = 0\n    for j in rec:\n        if (j - x) % gcd(m, 1440) == 0:\n            s += 1\n    print(s)", "def hcf(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return x\n\ndef clock(sx):\n    ans = 0\n    x = int(sx[1])\n    time = int(sx[0][0:2]) * 60 + int(sx[0][3:5])\n    k = 1440 // hcf(x, 1440)\n    if k == 1440:\n        return 16\n    for i in range(k):\n        t = time % 1440\n        if t <= 350:\n            if t % 70 == 0:\n                ans += 1\n        elif t >= 601 and t <= 951:\n            if t == 601 or t == 671 or t == 741 or (t == 811) or (t == 881) or (t == 951):\n                ans += 1\n        elif t >= 1202 and t <= 1412:\n            if t == 1202 or t == 1272 or t == 1342 or (t == 1412):\n                ans += 1\n        time += x\n    return ans\ntests = int(input())\nfor _ in range(tests):\n    sx = input().split()\n    print(clock(sx))", "def solve():\n    pali = {0, 70, 140, 210, 280, 350, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 1412}\n    (c, mins) = input().split()\n    mins = int(mins)\n    c = c.split(':')\n    time = int(c[0]) * 60 + int(c[1])\n    res = 0\n    if time in pali:\n        res += 1\n    start = time\n    time += mins\n    time %= 1440\n    while time != start:\n        if time in pali:\n            res += 1\n        time += mins\n        time %= 1440\n    print(res)\n    return\n\ndef main():\n    for _ in range(int(input())):\n        solve()\n    return\nmain()", "for _ in range(int(input())):\n    (t, x) = input().split()\n    (h, m) = map(int, t.split(':'))\n    x = int(x)\n    t = h * 60 + m\n    arr = {0, 70, 140, 210, 280, 350, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 1412}\n    ans = 0\n    total = 24 * 60\n    i = t\n    if t in arr:\n        ans += 1\n    t = (t + x) % total\n    while i != t:\n        if t in arr:\n            ans += 1\n        t = (t + x) % total\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    pal = {0, 70, 140, 210, 280, 350, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 1412}\n    (s, x) = [i for i in input().strip().split()]\n    s = [int(i) for i in s.split(':')]\n    x = int(x)\n    org = s[0] * 60 + s[1]\n    curr = org\n    count = 0\n    while True:\n        if curr in pal:\n            count += 1\n        curr += x\n        curr %= 1440\n        if curr == org:\n            break\n    print(count)", "for _ in range(int(input())):\n    (t, x) = input().split()\n    (h, m) = map(int, t.split(':'))\n    x = int(x)\n    t = h * 60 + m\n    arr = {0, 70, 140, 210, 280, 350, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 1412}\n    ans = 0\n    mod = 24 * 60\n    i = t\n    if t in arr:\n        ans += 1\n    t = (t + x) % mod\n    while i != t:\n        if t in arr:\n            ans += 1\n        t = (t + x) % mod\n    print(ans)", "def solve():\n    pp = ['00:00', '01:10', '02:20', '03:30', '04:40', '05:50', '10:01', '11:11', '12:21', '13:31', '14:41', '15:51', '20:02', '21:12', '22:22', '23:32']\n    p = []\n    for i in pp:\n        a = i.split(':')\n        p.append(int(a[0]) * 60 + int(a[1]))\n    t = int(input())\n    for _ in range(t):\n        l = input().split()\n        hh = l[0].split(':')\n        ans = 0\n        hi = int(hh[0]) * 60 + int(hh[1])\n        if hi in p:\n            ans += 1\n        m = int(l[1])\n        h = (hi + m) % 1440\n        while h != hi:\n            if h in p:\n                ans += 1\n            h = (h + m) % 1440\n        print(ans)\nsolve()", "def sol():\n    vv = input()\n    date = vv.split(' ')\n    x = int(date[1])\n    tm = date[0].split(':')\n    h1 = int(tm[0]) // 10\n    h2 = int(tm[0]) % 10\n    m2 = int(tm[1]) // 10\n    m1 = int(tm[1]) % 10\n    s = int(tm[0]) * 60 + int(tm[1])\n    ans = 0\n    if (h1 == m1) & (m2 == h2):\n        ans += 1\n    tim = s + x\n    tim = tim % 1440\n    while tim != s:\n        h = tim // 60\n        m = tim % 60\n        h1 = h // 10\n        h2 = h % 10\n        m2 = m // 10\n        m1 = m % 10\n        if (h1 == m1) & (h2 == m2):\n            ans += 1\n        tim = tim + x\n        tim = tim % 1440\n    print(ans)\nt1 = input()\nt = int(t1)\nwhile t > 0:\n    sol()\n    t = t - 1", "for _ in range(int(input())):\n    (t, x) = input().split()\n    (h, m) = map(int, t.split(':'))\n    x = int(x)\n    t = h * 60 + m\n    arr = [0, 70, 140, 210, 280, 350, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 1412]\n    s = set()\n    i = t\n    ans = 0\n    mod = 1440\n    if t in arr:\n        ans += 1\n    t = (t + x) % mod\n    while i != t:\n        if t in arr:\n            ans += 1\n        t = (t + x) % mod\n    print(ans)", "def pal(v):\n    return int(str(1001 + v % 60 * 10) == str(1001 + v // 60 * 10)[::-1])\np = [0] * 1441\nfor i in range(1441):\n    p[i] = pal(i)\nfor _ in range(int(input())):\n    s = input()\n    (s, x) = s.split()\n    v = int(s[:2]) * 60 + int(s[3:])\n    x = int(x)\n    nv = (v + x) % 1440\n    ans = p[v]\n    while nv != v:\n        ans += p[nv]\n        nv = (nv + x) % 1440\n    print(ans)", "def pal(v):\n    return int(str(1001 + v % 60 * 10) == str(1001 + v // 60 * 10)[::-1])\np = [0] * 1441\nfor i in range(1441):\n    p[i] = pal(i)\nfor _ in range(int(input())):\n    s = input()\n    (s, x) = s.split()\n    v = int(s[:2]) * 60 + int(s[3:])\n    x = int(x)\n    nv = (v + x) % 1440\n    ans = p[v]\n    while nv != v:\n        ans += p[nv]\n        nv = (nv + x) % 1440\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (s, x) = input().split()\n    palin = {0, 70, 140, 210, 280, 350, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 1412}\n    pal = set()\n    minut = (int(s[0]) * 10 + int(s[1])) * 60 + int(s[3]) * 10 + int(s[4])\n    for j in range(1440):\n        pal.add(minut)\n        minut = (minut + int(x)) % 1440\n    a_per_b = palin.intersection(pal)\n    print(len(a_per_b))", "def sol():\n    palindrom_time = [0, 70, 140, 210, 280, 350, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 1412]\n    (s, x) = input().split()\n    x = int(x)\n    time = int(s[:2]) * 60 + int(s[3:])\n    stop = time\n    count = 0\n    while True:\n        time = (time + x) % 1440\n        if time in palindrom_time:\n            count += 1\n        if time == stop:\n            break\n    print(count)\nfor t in range(int(input())):\n    sol()", "from functools import lru_cache\n\n@lru_cache(None)\ndef check_palindrome(num: int):\n    (hours, mins) = divmod(num, 60)\n    return f'{hours:02d}'[::-1] == f'{mins:02d}'\nMAX = 24 * 60\n\n@lru_cache(None)\ndef check_time(t: int, x: int):\n    s = set()\n    ans = 0\n    while t not in s:\n        if check_palindrome(t):\n            ans += 1\n        s.add(t)\n        t = (t + x) % MAX\n    return ans\n\ndef f():\n    (t, x) = input().split()\n    (h, m) = map(int, t.split(':'))\n    t = h * 60 + m\n    x = int(x)\n    print(check_time(t, x))\nfor _ in range(int(input())):\n    f()", "for _ in range(int(input())):\n    (s, a) = input().split()\n    a = int(a)\n    current = int(s[:2]) * 60 + int(s[3:])\n    d_time = current\n    m = set()\n    palindrome = [0, 70, 140, 210, 280, 350, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 1412]\n    while True:\n        if d_time in palindrome:\n            m.add(d_time)\n        d_time = (d_time + a) % 1440\n        if d_time == current:\n            break\n    print(len(m))", "def test():\n    s = input()\n    h = int(s[0:2])\n    m = int(s[3:5])\n    x = int(s[6:])\n    inh = h\n    inm = m\n    do = 0\n    count = 0\n    while (h != inh or m != inm) or do == 0:\n        do = 1\n        if h % 10 == m // 10 and h // 10 == m % 10:\n            count += 1\n        carry = (m + x) // 60\n        m = (m + x) % 60\n        h = (carry + h) % 24\n    print(count)\nt = int(input())\nfor i in range(t):\n    test()", "def is_pal(m: int) -> bool:\n    h = m // 60\n    m = m % 60\n    return h // 10 == m % 10 and h % 10 == m // 10\n\ndef solve():\n    (s_time, sx) = input().split()\n    (h, m) = map(int, s_time.split(':'))\n    m = h * 60 + m\n    x = int(sx)\n    s = set()\n    for _ in range(1441):\n        if is_pal(m):\n            if m in s:\n                break\n            s.add(m)\n        m = (m + x) % 1440\n    print(len(s))\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "import collections\nimport math\nimport sys\nfrom queue import PriorityQueue\nfrom random import randint\n\ndef main(testnumber):\n    (time, x) = input().split()\n    x = int(x)\n    (h, m) = map(int, time.split(':'))\n    m += h * 60\n    s = set()\n    for i in range(1441):\n        m %= 1440\n        minutes = m % 60\n        hours = m // 60\n        minute_rev = minutes % 10 * 10 + minutes // 10\n        if hours == minute_rev:\n            s.add(hours)\n        m += x\n    print(len(s))\nt = int(input())\ncnt = 1\nwhile t > 0:\n    main(cnt)\n    cnt += 1\n    t -= 1", "pali_time = [0, 70, 140, 210, 280, 350, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 1412]\nfor _ in [0] * int(input()):\n    (s, a) = input().split()\n    t = 0\n    a = int(a)\n    current = int(s[:2]) * 60 + int(s[3:])\n    d_time = current\n    m = set()\n    while True:\n        if d_time in pali_time:\n            m.add(d_time)\n        d_time = (d_time + a) % 1440\n        if d_time == current:\n            break\n    print(len(m))", "pal = [0, 70, 140, 210, 280, 350, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 1412]\nfor _ in range(int(input())):\n    count = 0\n    l = list(map(str, input().split()))\n    (hh, mm) = [int(x) for x in l[0].split(':')]\n    x = int(l[1])\n    d = 60 * hh + mm\n    if d in pal:\n        count += 1\n    z = (d + x) % 1440\n    while z != d:\n        if z in pal:\n            count += 1\n        z = (z + x) % 1440\n    print(count)", "import sys\ntry:\n    sys.stdin = open('input.txt')\nexcept FileNotFoundError:\n    pass\npalindromes = []\nfor i in range(24):\n    si = str(i)\n    if len(si) == 1:\n        si = '0' + si\n    m = int(si[1] + si[0])\n    if m > 59:\n        continue\n    palindromes.append(i * 60 + m)\nn = int(input())\nfor i in range(n):\n    (s, x) = input().split()\n    s = s.split(':')\n    x = int(x)\n    t = int(s[0]) * 60 + int(s[1])\n    tt = t\n    p_copy = palindromes.copy()\n    ans = 0\n    while True:\n        tt += x\n        tt %= 1440\n        if tt in p_copy:\n            ans += 1\n            p_copy.remove(tt)\n        if tt == t:\n            break\n    print(ans)", "import sys\n\ndef my_gcd(a, b):\n    a_1 = max(a, b)\n    b_1 = min(a, b)\n    while b_1 != 0:\n        a_1 = a_1 % b_1\n        (a_1, b_1) = (max(a_1, b_1), min(a_1, b_1))\n    return a_1\nn = int(sys.stdin.readline())\nfor i in range(n):\n    data = sys.stdin.readline().split()\n    step = int(data[1])\n    hours = int(data[0][0:2])\n    minutes = int(data[0][3:])\n    times = 1440 // my_gcd(1440, step)\n    number_of_poli = 0\n    for t in range(times):\n        minutes += step\n        hours += minutes // 60\n        hours = hours % 24\n        minutes = minutes % 60\n        if hours // 10 == minutes % 10 and hours % 10 == minutes // 10:\n            number_of_poli += 1\n    print(number_of_poli)", "t = int(input())\nfor z in range(t):\n    (ti, r) = input().split()\n    h = ti[0:2]\n    m = ti[3:5]\n    (h, m, r) = (int(h), int(m), int(r))\n    count = 0\n    time = h * 60 + m\n    li = [0, 70, 140, 210, 280, 350, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 1412]\n    for i in range(1440):\n        if (time + i * r) % 1440 in li:\n            count += 1\n            ind = li.index((time + i * r) % 1440)\n            li.pop(ind)\n    print(count)", "import sys\n\ndef isit(h, m):\n    m = m % 10 * 10 + int(m / 10)\n    return m == h\n\ndef solve():\n    i = input().split()\n    (h, m) = map(int, i[0].split(':'))\n    (h1, m1) = (h, m)\n    x = int(i[1])\n    cnt = 0\n    hs = int(x / 60)\n    ms = x % 60\n    while True:\n        if isit(h, m):\n            cnt += 1\n        h += hs\n        h %= 24\n        m += ms\n        if m > 59:\n            m %= 60\n            h += 1\n            h %= 24\n        if h1 == h and m1 == m:\n            print(cnt)\n            break\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    solve()", "z = [0, 70, 140, 210, 280, 350, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 1412]\nfor _ in range(int(input())):\n    (a, b) = input().split()\n    (h, m) = map(int, a.split(':'))\n    x = 60 * h + m\n    b = int(b)\n    d = {}\n    cnt = 0\n    while True:\n        if x in d:\n            break\n        else:\n            d[x] = 1\n        if x in z:\n            cnt += 1\n        x = (x + b) % 1440\n    print(cnt)", "t = int(input())\npalindromes = [0, 70, 140, 210, 280, 350, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 1412]\nfor _ in range(t):\n    info = input()\n    hours = int(info[0:2])\n    minutes = int(info[3:5])\n    step_size = int(info[6:])\n    start_time = hours * 60 + minutes\n    time = start_time\n    result = 0\n    while True:\n        time = (time + step_size) % 1440\n        if time in palindromes:\n            result += 1\n        if time == start_time:\n            break\n    print(result)", "t = int(input())\nfor i in range(t):\n    time = input().split()\n    hour = int(time[0][0:2])\n    minute = int(time[0][3:5])\n    initialHour = hour\n    initialMinute = minute\n    x = int(time[1])\n    palindromes = 0\n    while True:\n        minute += x\n        hour += minute // 60\n        minute %= 60\n        hour %= 24\n        if hour == 10 * (minute % 10) + minute // 10:\n            palindromes += 1\n        if hour == initialHour and minute == initialMinute:\n            break\n    print(palindromes)", "def solution():\n    inp = input().split()\n    s = list(map(int, inp[0].split(':')))\n    i = int(inp[1])\n    ih = i // 60\n    im = i % 60\n    old = s[:]\n    count = 0\n    while True:\n        nm = (old[1] + im) % 60\n        nh = (old[0] + ih + (old[1] + im) // 60) % 24\n        if nm % 10 == nh // 10 and nm // 10 == nh % 10:\n            count += 1\n        old = [nh, nm]\n        if old[0] == s[0] and old[1] == s[1]:\n            break\n    print(count)\nt = int(input())\nwhile t:\n    solution()\n    t -= 1", "def isp(t):\n    h = t // 60\n    m = t % 60\n    return h // 10 == m % 10 and h % 10 == m // 10\nt = int(input())\nfor _ in range(t):\n    (d, i) = input().split()\n    (hs, ms) = d.split(':')\n    b = int(hs) * 60 + int(ms)\n    i = int(i)\n    r = 0\n    if isp(b):\n        r += 1\n    c = (b + i) % (24 * 60)\n    while c != b:\n        if isp(c):\n            r += 1\n        c = (c + i) % (24 * 60)\n    print(r)", "t = int(input())\npale = [0, 70, 140, 210, 280, 350, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 1412]\nfor j in range(t):\n    (a, b) = input().split()\n    b = int(b)\n    (hh, mm) = map(int, a.split(':'))\n    a = hh * 60 + mm\n    p = 0\n    x = a\n    if a in pale:\n        p += 1\n    a += b\n    if a >= 1440:\n        a -= 1440\n    while a != x:\n        if a in pale:\n            p += 1\n        a += b\n        if a >= 1440:\n            a -= 1440\n    print(p)", "def IsP(t):\n    (h, m) = (t // 60, t % 60)\n    return h // 10 == m % 10 and h % 10 == m // 10\nt = int(input())\nfor _ in range(t):\n    (st, p) = input().split()\n    p = int(p)\n    t = int(st[:2]) * 60 + int(st[3:])\n    count = 1 if IsP(t) else 0\n    ct = t\n    while (ct + p) % (24 * 60) != t:\n        ct = (ct + p) % (24 * 60)\n        if IsP(ct):\n            count += 1\n    print(count)", "for _ in range(int(input())):\n    li = [0, 70, 140, 210, 280, 350, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 1412]\n    (time, minn) = [i for i in input().split(' ')]\n    time = time.split(':')\n    minn = int(minn)\n    sumMinutes = int(time[0]) * 60 + int(time[1])\n    minx = sumMinutes\n    count = 0\n    while True:\n        if minx in li:\n            count += 1\n        minx += minn\n        if minx >= 1440:\n            minx -= 1440\n        if minx == sumMinutes:\n            break\n    print(count)", "pal = [0, 70, 140, 210, 280, 350, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 1412]\nfor _ in range(int(input())):\n    (time, x) = map(str, input().split())\n    hrs = int(time[0:2]) * 60\n    x = int(x)\n    mins = int(time[3:5])\n    total = mins + hrs\n    ans = 0\n    initial = total\n    total %= 1440\n    if total in pal:\n        ans += 1\n    total += x\n    total %= 1440\n    while total != initial:\n        if total in pal:\n            ans += 1\n        total += x\n        total %= 1440\n    print(ans)", "def isp(t):\n    h = t // 60\n    m = t % 60\n    return h // 10 == m % 10 and h % 10 == m // 10\nt = int(input())\nwhile t != 0:\n    (d, i) = input().split()\n    (hs, ms) = d.split(':')\n    b = int(hs) * 60 + int(ms)\n    i = int(i)\n    r = 0\n    if isp(b):\n        r += 1\n    c = (b + i) % (24 * 60)\n    while c != b:\n        if isp(c):\n            r += 1\n        c = (c + i) % 1440\n    print(r)\n    t -= 1", "import math\nfor fuckfuckfuckfuckfuckfuckfuck in range(int(input())):\n    (x, y) = input().split()\n    oz = 0\n    y = int(y)\n    y = math.gcd(1440, y)\n    (w, z) = map(int, x.split(':'))\n    v = [0, 70, 140, 210, 280, 350, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 1412]\n    u = w * 60 + z\n    for fucktheclock in range(1440 // y):\n        u = u + y\n        if u >= 1440:\n            u = u - 1440\n        if u in v:\n            oz = oz + 1\n    print(oz)", "def check():\n    smth = [str(i) for i in input().split()]\n    s = smth[0]\n    x = int(smth[1])\n    b = set()\n    counter = 0\n    first = int(s[0] + s[1])\n    second = int(s[3] + s[4])\n    b.add((first, second))\n    while True:\n        second += x\n        if second > 59:\n            first += second // 60\n            first %= 24\n            second %= 60\n        if (first, second) in b:\n            break\n        else:\n            b.add((first, second))\n    for i in b:\n        if i[0] // 10 == i[1] % 10 and i[0] % 10 == i[1] // 10:\n            counter += 1\n    return counter\nt = int(input())\nfor i in range(t):\n    print(check())", "for _ in range(int(input())):\n    a = [0, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 70, 140, 210, 280, 350, 1412]\n    (n, m) = input().split()\n    (n, m) = (int(n[:2]) * 60 + int(n[3:]), int(m))\n    c = 0\n    for i in range(24 * 60):\n        n = (n + m) % 1440\n        if n in a:\n            a.remove(n)\n            c += 1\n            if c == 16:\n                break\n    print(c)", "def add_time(t, h, m):\n    m += t\n    h += m // 60\n    m = m % 60\n    h = h % 24\n    return (h, m)\n\ndef is_pal(h, m):\n    return h // 10 == m % 10 and h % 10 == m // 10\nn = int(input())\nfor i in range(n):\n    (time, t) = input().split()\n    t = int(t)\n    (h, m) = time.split(':')\n    h = int(h)\n    m = int(m)\n    (old_h, old_m) = (h, m)\n    k = 0\n    if is_pal(h, m):\n        k += 1\n    (h, m) = add_time(t, h, m)\n    while h != old_h or m != old_m:\n        if is_pal(h, m):\n            k += 1\n        (h, m) = add_time(t, h, m)\n    print(k)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (s, x) = input().split()\n    x = int(x)\n    s = list(map(int, s.split(':')))\n    count = 0\n    palindrome = {(0, 0), (10, 1), (20, 2), (1, 10), (2, 20), (3, 30), (4, 40), (5, 50), (13, 31), (14, 41), (15, 51), (11, 11), (12, 21), (22, 22), (21, 12), (23, 32)}\n    (m, h) = (s[1], s[0])\n    org = (h, m)\n    while True:\n        if (h, m) in palindrome:\n            count += 1\n        m += x\n        h += m // 60\n        h %= 24\n        m %= 60\n        if org == (h, m):\n            break\n    print(count)", "import sys\ninput = sys.stdin.readline\n\ndef MI():\n    return map(int, input().split())\n\ndef LI():\n    return list(map(int, input().split()))\n\ndef S():\n    return input().rstrip()\nsys.setrecursionlimit(10 ** 6)\nINF = 1 << 60\nt = int(input())\nfor _ in range(t):\n    s = S()\n    h = int(s[0] + s[1])\n    m = int(s[3] + s[4])\n    x = int(s[6:])\n    check = set()\n    if h // 10 == m % 10 and h % 10 == m // 10:\n        ans = 1\n        check.add(h)\n    else:\n        ans = 0\n    for i in range(1441):\n        m += x\n        tmp = m // 60\n        m %= 60\n        h += tmp\n        h %= 24\n        if h in check:\n            continue\n        if h // 10 == m % 10 and h % 10 == m // 10:\n            ans += 1\n            check.add(h)\n    print(ans)", "t = int(input())\npalindrome = [0, 70, 140, 210, 280, 350, 671, 1342, 601, 1202, 741, 811, 881, 951, 1272, 1412]\nwhile t:\n    (n, x) = map(str, input().split())\n    x = int(x)\n    temp = n[0] + n[1]\n    temp1 = n[3] + n[4]\n    sati = int(temp)\n    minute = int(temp1)\n    kraj = False\n    cnt = 0\n    minute += sati * 60\n    pocetak = minute + 0\n    while 1:\n        minute += x\n        minute %= 1440\n        if minute in palindrome:\n            cnt += 1\n        if minute == pocetak:\n            kraj = True\n        if kraj:\n            break\n    print(cnt)\n    t -= 1", "for _ in range(int(input())):\n    (s, x) = [x for x in input().split()]\n    l = set([0, 70, 140, 210, 280, 350, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 1412])\n    if False:\n        print('Tanmay')\n    x = int(x)\n    t = int(s[3:]) + int(s[:2]) * 60\n    c = 0\n    z = t\n    a = set()\n    z = t - x\n    while z >= 0:\n        a.add(z)\n        z -= x\n    while z < 1440:\n        a.add(z)\n        z += x\n    while True:\n        if z % 1440 in a:\n            break\n        a.add(z % 1440)\n        z += x\n    for i in set(a):\n        if i in l:\n            c += 1\n    print(c)", "pal = [0, 1001, 110, 1111, 2002, 220, 2222, 1221, 2112, 1331, 2332, 1441, 1551, 330, 440, 550]\ntpal = [60 * (x // 100) + x % 100 for x in pal]\ntpal.sort()\nfor t in range(int(input())):\n    (start, period) = input().split()\n    (hh, mm) = map(int, start.split(':'))\n    p = int(period)\n    count = 0\n    st1 = (hh * 60 + mm) % 1440\n    if tpal.count(st1) == 1:\n        count += 1\n    st = (st1 + p) % 1440\n    while st != st1:\n        if tpal.count(st) == 1:\n            count += 1\n        st += p\n        st = st % 1440\n    print(count)", "for _ in range(int(input())):\n    s = input()\n    hr = s[0:2]\n    mn = s[3:5]\n    x = s[6:]\n    hr = int(hr)\n    mn = int(mn)\n    x = int(x)\n    t = hr * 60 + mn\n    valid = [0, 70, 140, 210, 280, 350, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 1412]\n    ans = []\n    ans.append(t)\n    temp = (t + x) % 1440\n    ans.append(temp)\n    while temp != t:\n        temp += x\n        if temp >= 1400:\n            temp = temp % 1440\n        ans.append(temp)\n    ans = list(set(ans))\n    cnt = 0\n    for x in ans:\n        if x in valid:\n            cnt += 1\n    print(cnt)", "arr = [0, 70, 140, 210, 280, 350, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 1412]\n\ndef minutes(s):\n    (x, y) = s.split(':')\n    return int(x) * 60 + int(y)\nfor _ in range(int(input())):\n    (t, x) = input().split(' ')\n    x = int(x)\n    m = minutes(t)\n    ans = 0\n    s = [0] * 16\n    for __ in range(1440):\n        m += x\n        m = m % 1440\n        if m in arr and s[arr.index(m)] == 0:\n            s[arr.index(m)] += 1\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    h = int(s[:2])\n    m = int(s[3:5])\n    x = int(s[6:])\n    t = h * 60 + m\n    pal = set()\n    for i in range(1440):\n        h = t // 60 % 24\n        m = t % 60\n        if h // 10 == m % 10 and h % 10 == m // 10:\n            if (h, m) in pal:\n                break\n            pal.add((h, m))\n        t += x\n    print(len(pal))", "pal_min = [0, 70, 140, 210, 280, 350, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 1412]\nfor _ in range(int(input())):\n    (t, x) = input().split()\n    (h, m) = map(int, t.split(':'))\n    minutes = m + h * 60\n    ans = 0\n    set_ = set()\n    for i in range(1440):\n        set_.add(minutes)\n        minutes = (minutes + int(x)) % 1440\n    for i in pal_min:\n        if i in set_:\n            ans += 1\n    print(ans)", "prelist = [0, 70, 140, 210, 280, 350, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 1412]\nfor _ in range(int(input())):\n    a = list()\n    l = input().split()\n    l[1] = int(l[1])\n    (starth, startm) = map(int, l[0].split(':'))\n    ans = 0\n    hh = starth * 60 + startm\n    while True:\n        if hh in prelist:\n            ans += 1\n        hh += l[1]\n        if hh >= 60 * 24:\n            hh -= 1440\n        if hh == starth * 60 + startm:\n            break\n    print(ans)", "a = [0]\nfor i in range(1, 6):\n    a.append(i * 60 + i * 10)\nfor i in range(10, 16):\n    a.append(i * 60 + int(str(i)[::-1]))\nfor i in range(20, 24):\n    a.append(i * 60 + int(str(i)[::-1]))\nt = int(input())\nfor _ in range(t):\n    (s, x) = input().split()\n    x = int(x)\n    c = int(s[:2]) * 60 + int(s[3:])\n    if x + c >= 1440:\n        b = x + c - 1440\n    else:\n        b = x + c\n    ans = 0\n    if c in a:\n        ans = 1\n    while b != c:\n        if b in a:\n            ans += 1\n        if x + b >= 1440:\n            b += x - 1440\n        else:\n            b += x\n    print(ans)", "for i in range(int(input())):\n    (time, p) = input().split()\n    (p_h, p_m) = divmod(int(p), 60)\n    (h, m) = map(int, time.split(':'))\n    (t_h, t_m) = (h, m)\n    first = True\n    cnt = 0\n    while first or h != t_h or m != t_m:\n        first = False\n        if t_h // 10 == t_m % 10 and t_h % 10 == t_m // 10:\n            cnt += 1\n        t_h = (t_h + p_h + (t_m + p_m) // 60) % 24\n        t_m = (t_m + p_m) % 60\n    print(cnt)", "n = int(input())\nfor i in range(n):\n    lst = list(input().split())\n    increase = int(lst[1])\n    all = set()\n    if lst[1] == '1440':\n        if lst[0][0] == lst[0][-1] and lst[0][1] == lst[0][-2]:\n            print(1)\n        else:\n            print(0)\n    else:\n        num1 = 0\n        num2 = 0\n        if lst[0][0] == '0':\n            num2 += int(lst[0][1])\n        else:\n            num2 += int(lst[0][0] + lst[0][1])\n        if lst[0][-2] == '0':\n            num1 += int(lst[0][-1])\n        else:\n            num1 += int(lst[0][-2] + lst[0][-1])\n        for j in range(1440):\n            num1 += increase % 60\n            num2 += increase // 60\n            if num1 > 59:\n                num2 += 1\n                num1 -= 60\n            if num2 > 23:\n                num2 -= 24\n            if num2 % 10 == num1 // 10 and num2 // 10 == num1 % 10:\n                all.add(num1)\n        print(len(all))", "def ispal(t):\n    m = t % 60\n    m1 = m // 10\n    m2 = m % 10\n    h = t // 60\n    h1 = h // 10\n    h2 = h % 10\n    return m1 == h2 and m2 == h1\nt = int(input())\nfor i in range(t):\n    (st, smin) = input().split()\n    smin = int(smin)\n    time = int(st[:2]) * 60 + int(st[3:])\n    t0 = time\n    count = 0\n    if ispal(time):\n        count += 1\n    time = (time + smin) % 1440\n    while time != t0:\n        if ispal(time):\n            count += 1\n        time = (time + smin) % 1440\n    print(count)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    h0 = int(s[:2])\n    m0 = int(s[3:5])\n    x = int(s[6:])\n    (t0, t) = (h0 * 60 + m0, (h0 * 60 + m0 + x) % 1440)\n    ans = 0\n    if h0 % 10 == m0 // 10 and h0 // 10 == m0 % 10:\n        ans += 1\n    while t != t0:\n        (h, m) = (t // 60, t % 60)\n        if h % 10 == m // 10 and h // 10 == m % 10:\n            ans += 1\n        t += x\n        t %= 1440\n    print(ans)", "from math import ceil\n\ndef solution(h, m, min_delta):\n\n    def plus_time(h, m, min_delta):\n        m += min_delta\n        h += m // 60\n        m %= 60\n        h %= 24\n        return (h, m)\n\n    def is_palindrome(h, m):\n        if h // 10 == m % 10 and h % 10 == m // 10:\n            return True\n    i = 1\n    ans = 0\n    time = ()\n    while time != (h, m):\n        time = plus_time(h, m, min_delta * i)\n        if is_palindrome(*time):\n            ans += 1\n        i += 1\n    return ans\nfor i in range(int(input())):\n    (time, min_delta) = input().split()\n    (h, m) = time.split(':')\n    print(solution(int(h), int(m), int(min_delta)))", "t = int(input())\nwhile t:\n    (time, s) = input().split()\n    (time_hour, time_min) = time.split(':')\n    time_hour = int(time_hour)\n    time_min = int(time_min)\n    (origianl_hour, original_min) = (time_hour, time_min)\n    s = int(s)\n    count = 0\n    time_done = 0\n    app = []\n    while True:\n        if time_hour == origianl_hour and time_min == original_min and (time_done != 0):\n            break\n        if time_min == time_hour % 10 * 10 + time_hour // 10:\n            count += 1\n        time_min += s\n        hour_rem = time_min // 60\n        time_min %= 60\n        time_hour += hour_rem\n        time_hour %= 24\n        time_done += 1\n    print(count)\n    t -= 1", "T = int(input())\nwhile T:\n    T -= 1\n    N = 1440\n    arr = [0, 70, 140, 210, 280, 350, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 1412]\n    arr.sort()\n    (a, b) = input().split()\n    b = int(b)\n    (h, m) = a.split(':')\n    x = int(h) * 60 + int(m)\n    se = set()\n    ans = 0\n    while True:\n        if len(se) == 0:\n            se.add(x)\n            if x in arr:\n                ans += 1\n            x += b\n            x %= N\n        elif x in se:\n            break\n        else:\n            se.add(x)\n            if x in arr:\n                ans += 1\n            x += b\n            x %= N\n    print(ans)", "def gcd(aa, bb):\n    return bb if aa == 0 else gcd(bb % aa, aa)\n\ndef lcm(first_num: int, second_num: int) -> int:\n    return first_num // gcd(first_num, second_num) * second_num\nnumbers = (0, 70, 140, 210, 280, 350, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 1412)\nfor x in range(int(input())):\n    (a, b) = input().split()\n    b = int(b)\n    (c, d) = [int(y) for y in a.split(':')]\n    time = c * 60 + d\n    common = lcm(1440, b)\n    times = common // b\n    set_of_times = []\n    for y in range(times + 1):\n        set_of_times.append((time + y * b) % 1440)\n    n = sum((el in numbers for el in set(set_of_times)))\n    print(n)\npass", "t = int(input())\nfor i in range(t):\n    (s, minutes) = input().split()\n    minutes = int(minutes)\n    palindrome = [0, 70, 140, 210, 280, 350, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 1412]\n    curr_minutes = 0\n    curr_minutes += int(s.split(':')[0]) * 60\n    curr_minutes += int(s.split(':')[1])\n    cnt = 0\n    i = 0\n    st = set()\n    while i <= 1440:\n        curr_minutes += minutes\n        curr_minutes %= 1440\n        st.add(curr_minutes)\n        i += 1\n    for i in st:\n        if i in palindrome:\n            cnt += 1\n    print(cnt)", "t = int(input())\nc = [0, 70, 140, 210, 280, 350, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 1412]\nfor l in range(t):\n    (a, b) = [i for i in input().split()]\n    b = int(b)\n    a = [int(i) for i in a.split(':')]\n    a = a[0] * 60 + a[1]\n    cnt = 0\n    a1 = set()\n    for i in range(2022):\n        a1.add(a)\n        a += b\n        a %= 1440\n    for i in a1:\n        if i in c:\n            cnt += 1\n    print(cnt)", "for _ in range(int(input())):\n    (time, x) = input().split()\n    (mm, ss) = map(int, time.split()[0].split(':'))\n    x = int(x)\n    tt = mm * 60 + ss\n    tt2 = tt\n    ans = 0\n    bad = False\n    while not bad:\n        m = tt2 // 60\n        s = tt2 % 60\n        if m == s % 10 * 10 + s // 10:\n            ans += 1\n        tt2 += x\n        tt2 %= 1440\n        if tt2 == tt:\n            bad = True\n    print(ans)", "p = []\nfor h in range(24):\n    for m in range(60):\n        s = ('0' if h < 10 else '') + str(h) + ':' + ('0' if m < 10 else '') + str(m)\n        p += (s == s[::-1],)\nt = int(input())\nfor _ in range(t):\n    (t, x) = input().split()\n    (h, m) = map(int, t.split(':'))\n    x = int(x)\n    t = 60 * h + m\n    nh = h\n    nm = m\n    b = 0\n    cnt = 0\n    while (nh, nm) != (h, m) or b == 0:\n        nm += x\n        nh += nm // 60\n        nm %= 60\n        nh %= 24\n        cnt += p[60 * nh + nm]\n        b = 1\n    print(cnt)", "for _ in range(int(input())):\n    i = input()\n    (mm, ss) = map(int, i.split()[0].split(':'))\n    x = int(i.split()[1])\n    tt = mm * 60 + ss\n    t = tt\n    cnt = 0\n    flag = False\n    while not flag:\n        m = t // 60\n        s = t % 60\n        if m == s % 10 * 10 + s // 10:\n            cnt += 1\n        t += x\n        t %= 1440\n        if t == tt:\n            flag = True\n    print(cnt)", "for t in range(int(input())):\n    s = input().split()\n    s[0] = s[0].split(':')\n    hs = int(s[0][0])\n    mins = int(s[0][1])\n    x = int(s[1])\n    pals = [[0, 0], [1, 10], [2, 20], [3, 30], [4, 40], [5, 50], [10, 1], [11, 11], [12, 21], [13, 31], [14, 41], [15, 51], [20, 2], [21, 12], [22, 22], [23, 32]]\n    hs_now = hs\n    mins_now = mins\n    if x == 1440 and [hs, mins] in pals:\n        print(1)\n    else:\n        k = 0\n        if [hs, mins] in pals:\n            k += 1\n            pals.pop(pals.index([hs, mins]))\n        mins_now = mins\n        hs_now = hs\n        mins_now += x\n        hs_now += mins_now // 60\n        mins_now %= 60\n        hs_now %= 24\n        while hs_now != hs or mins_now != mins:\n            if [hs_now, mins_now] in pals:\n                k += 1\n                pals.pop(pals.index([hs_now, mins_now]))\n            mins_now += x\n            hs_now += mins_now // 60\n            mins_now %= 60\n            hs_now %= 24\n        print(k)", "def str_int(a):\n    return int(a[0]) * 10 + int(a[1])\n\ndef is_palin(a, b):\n    if a == b % 10 * 10 + b // 10:\n        return True\n    else:\n        return False\n\ndef min_to_str(a):\n    hh = a // 60 % 24\n    mm = a % 60\n    return is_palin(hh, mm)\nt = int(input())\nwhile t > 0:\n    t -= 1\n    a = input().split()\n    x = int(a[1])\n    b = a[0].split(':')\n    hh = str_int(b[0])\n    mm = str_int(b[1])\n    minuts = hh * 60 + mm\n    y = (minuts + x) % 1440\n    s = 0\n    while y != minuts:\n        if min_to_str(y):\n            s += 1\n        y += x\n        y = y % 1440\n    if min_to_str(minuts):\n        s += 1\n    print(s)", "for p in range(int(input())):\n    (s, x) = input().split()\n    x = int(x)\n    pals = set()\n    hours = ['0' + str(i) for i in range(10)] + [str(i) for i in range(10, 24)]\n    mins = ['0' + str(i) for i in range(10)] + [str(i) for i in range(10, 60)]\n    t_h = int(s[0] + s[1])\n    t_m = int(s[3] + s[4])\n    s0 = hours[t_h] + mins[t_m]\n    t0 = t_h * 60 + t_m\n    if s0 == s0[::-1]:\n        pals.add(s0)\n    ntime = (t_h * 60 + t_m + x) % (60 * 24)\n    while ntime != t0:\n        n_h = ntime // 60\n        n_m = ntime % 60\n        s_n = hours[n_h] + mins[n_m]\n        if s_n == s_n[::-1]:\n            pals.add(s_n)\n        ntime = (ntime + x) % (60 * 24)\n    print(len(pals))", "for _ in range(int(input())):\n    arr = input().split()\n    a = arr[0]\n    b = int(arr[1])\n    cnt = 0\n    reva = a[::-1]\n    if a == reva:\n        cnt += 1\n    (h, m) = (b // 60, b % 60)\n    (lx, rx) = (int(a[:2]), int(a[3:]))\n    lx1 = lx\n    rx1 = rx\n    lx += h\n    rx += m\n    if rx > 59:\n        lx += 1\n        rx -= 60\n    if lx > 23:\n        lx -= 24\n    while lx != lx1 or rx1 != rx:\n        if lx // 10 == rx % 10 and lx % 10 == rx // 10:\n            cnt += 1\n        lx += h\n        rx += m\n        if rx > 59:\n            lx += 1\n            rx -= 60\n        if lx > 23:\n            lx -= 24\n    print(cnt)", "pal = [0, 70, 140, 210, 280, 350, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 1412]\nfor _ in range(int(input())):\n    data = input()\n    hr = int(data[:2]) * 60\n    mn = int(data[3:5])\n    gm = hr + mn\n    am = int(data[6:])\n    i = 1\n    count = 0\n    while True:\n        cm = gm + i * am\n        if cm >= 24 * 60:\n            cm = cm % (24 * 60)\n        if cm in pal:\n            count += 1\n        if cm == gm:\n            break\n        i += 1\n    print(count)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\nn = inp()\npalindromes = {0, 70, 140, 210, 280, 350, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 1412}\nfor _ in range(n):\n    (time, minutesToAdd) = input().strip().split(' ')\n    time = time.split(':')\n    timeInMinutes = int(time[0]) * 60 + int(time[1])\n    seen = set()\n    count = 0\n    while timeInMinutes not in seen:\n        seen.add(timeInMinutes)\n        if timeInMinutes in palindromes:\n            count += 1\n        timeInMinutes += int(minutesToAdd)\n        if timeInMinutes >= 1440:\n            timeInMinutes -= 1440\n    print(count)", "import re\npali_clk = [0, 70, 140, 210, 280, 350, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 1412]\nfor _ in range(int(input())):\n    a = input()\n    a = re.split(':| ', a)\n    num = 0\n    now = int(a[0]) * 60 + int(a[1])\n    current = now\n    while True:\n        if current in pali_clk:\n            num += 1\n        current = (current + int(a[2])) % 1440\n        if current == now:\n            break\n    print(num)", "l = {0: 0, 1: 10, 2: 20, 3: 30, 4: 40, 5: 50, 10: 1, 11: 11, 12: 21, 13: 31, 14: 41, 15: 51, 20: 2, 21: 12, 22: 22, 23: 32}\nt = int(input())\nfor _ in range(t):\n    k = input().split(' ')\n    t = int(k[1])\n    (h, m) = map(int, k[0].split(':'))\n    hi = h\n    mi = m\n    d = 0\n    th = t // 60\n    tm = t % 60\n    if l.get(h, -1) == m:\n        d += 1\n    while True:\n        r = (m + tm) // 60\n        m = (m + tm) % 60\n        h = h + th + r\n        if h > 23:\n            h -= 24\n        if h == hi and m == mi:\n            break\n        if l.get(h, -1) == m:\n            d += 1\n    print(d)", "for t in range(int(input())):\n    (s, k) = input().split()\n    palindrome = [0, 70, 140, 210, 280, 350, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 1412]\n    m = int(s[:2]) * 60 + int(s[3:])\n    m_list = set()\n    seen = set()\n    while m not in seen:\n        if m in palindrome:\n            m_list.add(m)\n        seen.add(m)\n        m = (m + int(k)) % 1440\n    print(len(m_list))", "def the_clock(s):\n    (t, x) = input().split()\n    x = int(x)\n    t = list(map(int, t.split(':')))\n    (t1, t2) = t\n    h = x // 60\n    m = x % 60\n    count = 0\n    while True:\n        t[0] += h\n        t[1] += m\n        if t[1] >= 60:\n            t[0] += 1\n            t[1] -= 60\n        if t[0] >= 24:\n            t[0] -= 24\n        if (t[0], t[1]) in s:\n            count += 1\n        if t[0] == t1 and t[1] == t2:\n            break\n    return count\nn = int(input())\ns = set()\nfor i in range(6):\n    s.add((i, i * 10))\nfor i in range(10, 16):\n    s.add((i, int(str(i)[::-1])))\nfor i in range(20, 25):\n    s.add((i, int(str(i)[::-1])))\nfor i in range(n):\n    print(the_clock(s))", "from math import gcd\nt = int(input())\n\ndef add_minutes(hour, minute, add):\n    hour = (hour + (minute + add) // 60) % 24\n    minute = (minute + add) % 60\n    return (hour, minute)\n\ndef is_palindrome(hour, minute):\n    return hour % 10 == minute // 10 and hour // 10 == minute % 10\nfor _ in range(t):\n    (time, add) = input().split()\n    (hour, minute) = map(int, time.split(':'))\n    add = int(add)\n    output = 0\n    repeat = 24 * 60 // gcd(24 * 60, add)\n    for i in range(repeat):\n        if is_palindrome(hour, minute):\n            output += 1\n        (hour, minute) = add_minutes(hour, minute, add)\n    print(output)", "t = int(input())\npalindromes = [0, 70, 140, 210, 280, 350, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 1412]\nwhile t > 0:\n    (time, mins) = list(map(str, input().split(' ')))\n    mins = int(mins)\n    (hh, mm) = list(map(int, time.split(':')))\n    total = hh * 60 + mm\n    t_set = set()\n    for _ in range(2000):\n        t_set.add(total)\n        total += mins\n        total %= 1440\n    count = 0\n    for minutes in t_set:\n        if minutes in palindromes:\n            count += 1\n    print(count)\n    t -= 1", "t = int(input())\npalindromes = [0, 70, 140, 210, 280, 350, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 1412]\nwhile t > 0:\n    (time, mins) = list(map(str, input().split(' ')))\n    mins = int(mins)\n    (hh, mm) = list(map(int, time.split(':')))\n    total = hh * 60 + mm\n    count = 0\n    s = set()\n    for _ in range(2000):\n        if total in s:\n            break\n        if total not in s and total in palindromes:\n            count += 1\n            s.add(total)\n        total += mins\n        total %= 1440\n    print(count)\n    t -= 1", "t = int(input())\npalindromes = [0, 70, 140, 210, 280, 350, 601, 671, 741, 811, 881, 951, 1202, 1272, 1342, 1412]\nwhile t > 0:\n    (time, mins) = list(map(str, input().split(' ')))\n    mins = int(mins)\n    (hh, mm) = list(map(int, time.split(':')))\n    total = hh * 60 + mm\n    count = 0\n    s = set()\n    for _ in range(2000):\n        if total not in s and total in palindromes:\n            count += 1\n            s.add(total)\n        total += mins\n        total %= 1440\n    print(count)\n    t -= 1", "for _ in range(int(input())):\n    (s, x) = input().split()\n    x = int(x)\n    (h, m) = map(int, s.split(':'))\n    t = h * 60 + m\n    cnt = 0\n    while True:\n        t += x\n        (h1, m1) = divmod(t, 60)\n        h1 %= 24\n        (a, b) = divmod(h1, 10)\n        (c, d) = divmod(m1, 10)\n        cnt += a == d and b == c\n        if h1 == h and m1 == m:\n            break\n    print(cnt)", "import sys\ninput = sys.stdin.readline\n\ndef A():\n    return [int(i) for i in input().split()]\n\ndef inp():\n    return int(input())\n\ndef solve():\n    (n, t) = input().split()\n    t = int(t)\n    (x1, x2) = map(int, n.split(':'))\n    ans = 0\n    o1 = x1\n    o2 = x2\n    while 1:\n        x2 += t % 60\n        if x2 >= 60:\n            x1 += 1\n        x2 %= 60\n        x1 += t // 60\n        x1 %= 24\n        c2 = str(x2)\n        c1 = str(x1)\n        if x1 < 10:\n            c1 = '0' + c1\n        if x2 < 10:\n            c2 = '0' + c2\n        if c1 == c2[::-1]:\n            ans += 1\n        if x1 == o1 and x2 == o2:\n            return ans\nt = inp()\nfor _ in range(t):\n    print(solve())", "def solve():\n    (s, x) = input().split()\n    x = int(x)\n    if x == 1:\n        print('16')\n        return\n    (hh, mm) = (x // 60, x % 60)\n    (sth, stm) = map(int, s.split(':'))\n    (ith, itm) = (sth, stm)\n    ans = 0\n    while True:\n        sth = (sth + hh + (stm + mm) // 60) % 24\n        stm = (stm + mm) % 60\n        ssth = str(sth) if sth >= 10 else f'0{sth}'\n        sstm = str(stm) if stm >= 10 else f'0{stm}'\n        ssthm = f'{ssth}:{sstm}'\n        if ssthm == ssthm[::-1]:\n            ans += 1\n        if sth == ith and stm == itm:\n            break\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    [hhmm, k] = input().split(' ')\n    k = int(k)\n    [hh, mm] = list(map(int, hhmm.split(':')))\n    st = set()\n    ans = 0\n    [dh, dm] = [k // 60, k % 60]\n    while True:\n        if st.__contains__(hh * 100 + mm):\n            break\n        else:\n            st.add(hh * 100 + mm)\n        if hh // 10 == mm % 10 and hh % 10 == mm // 10:\n            ans += 1\n        mm += dm\n        hh += dh\n        if mm >= 60:\n            hh += 1\n        mm %= 60\n        hh %= 24\n    print(ans)", "for _ in range(int(input())):\n    (s, x) = input().split()\n    x = int(x)\n    (h, m) = map(int, s.split(':'))\n    time = h * 60 + m\n    count = 0\n    i = 0\n    while True:\n        time += x\n        (h1, m1) = divmod(time, 60)\n        h1 %= 24\n        (a, b) = divmod(h1, 10)\n        (c, d) = divmod(m1, 10)\n        count += a == d and b == c\n        if h1 == h and m1 == m:\n            break\n        i += 1\n    print(count)", "def clock_looking(start_time, check_interval):\n    curr_time = start_time\n    curr_minute = time_to_minute(curr_time)\n    seen = set()\n    palindrome_times = set()\n    while curr_minute not in seen:\n        if curr_time == curr_time[::-1]:\n            palindrome_times.add(curr_time)\n        seen.add(curr_minute)\n        curr_minute = (curr_minute + check_interval) % 1440\n        curr_time = minute_to_time(curr_minute)\n    return len(palindrome_times)\n\ndef time_to_minute(time):\n    (hour, minute) = tuple(map(int, time.split(':')))\n    return hour * 60 + minute\n\ndef minute_to_time(minute):\n    (hour, minute) = (minute // 60, minute % 60)\n    return '%02d:%02d' % (hour, minute)\nnum_test_cases = int(input())\nfor _ in range(num_test_cases):\n    (start_time, check_interval) = input().split()\n    check_interval = int(check_interval)\n    print(clock_looking(start_time, check_interval))", "def solve(hi, mi, x):\n    (hm, mm) = (hi, mi)\n    (ha, ma) = (x // 60, x % 60)\n    c = 0\n    minutes = x\n    while 1:\n        if str(hm).zfill(2) == str(mm).zfill(2)[::-1]:\n            c += 1\n        mm += ma\n        hm += ha\n        if mm >= 60:\n            hm += 1\n            mm = mm % 60\n        if hm >= 24:\n            hm = hm % 24\n        minutes += x\n        if hi == hm and mi == mm:\n            break\n    return c\nt = int(input())\nfor _ in range(t):\n    _input = input().split()\n    (hi, mi) = [int(x) for x in _input[0].split(':')]\n    x = int(_input[1])\n    print(solve(hi, mi, x))", "DAY = 24 * 60\n\ndef solve(hour, minute, interval):\n    time = hour * 60 + minute\n    seen = set()\n    while time not in seen:\n        seen.add(time)\n        time += interval\n        time %= DAY\n    return sum(map(check_palindrome, seen))\n\ndef check_palindrome(time):\n    (hour, minute) = divmod(time, 60)\n    return f'{hour:02d}' == f'{minute:02d}'[::-1]\nfor _ in range(int(input())):\n    (time_str, interval_str) = input().split()\n    (hour, minute) = map(int, time_str.split(':'))\n    print(solve(hour, minute, int(interval_str)))", "import math\nM = 1440\nfor s in [*open(0)][1:]:\n    ((h, m), (x,)) = (map(int, u.split(':')) for u in s.split())\n    m += h * 60\n    print(sum((t == t[::-1] for t in (f'{t % M // 60:02}{t % 60:02}' for t in range(m, m + M, math.gcd(x, M))))))", "def gettime(n):\n    return '%02d:%02d' % (n // 60, n % 60)\nfor _ in range(int(input())):\n    (s, n) = input().split()\n    n = int(n)\n    cnt = 0\n    if s == s[::-1]:\n        cnt += 1\n    (h, m) = map(int, s.split(':'))\n    time = h * 60 + m\n    T = time\n    time += n\n    time %= 1440\n    while time != T:\n        s = gettime(time)\n        if s == s[::-1]:\n            cnt += 1\n        time += n\n        time %= 1440\n    print(cnt)", "def rev(x):\n    if x < 10:\n        return x * 10\n    r = 0\n    while x > 0:\n        r *= 10\n        r += x % 10\n        x //= 10\n    return r\nfor test in range(int(input())):\n    (s, d) = input().split()\n    (h, m) = map(int, s.split(':'))\n    d = int(d)\n    un = set()\n    ans = 0\n    while True:\n        hh = (m + d) // 60\n        h = (h + hh) % 24\n        m = (m + d) % 60\n        if (h, m) in un:\n            break\n        if h == rev(m):\n            ans += 1\n        un.add((h, m))\n    print(ans)", "from collections import defaultdict\nfrom math import gcd\n\ndef get_time(v):\n    return '%02d:%02d' % (v // 60, v % 60)\n\ndef lcm(a, b):\n    return a // gcd(a, b) * b\nfor _ in range(int(input())):\n    (time_s, d) = input().split()\n    d = int(d)\n    (h, m) = map(int, time_s.split(':'))\n    cur = h * 60 + m\n    ans = 0\n    las = cur + lcm(1440, d)\n    for ti in range(cur, las, d):\n        time_s = get_time(ti % 1440)\n        if time_s == time_s[::-1]:\n            ans += 1\n    print(ans)", "n = int(input())\nfor x in range(n):\n    (time, freq) = input().split()\n    freq = int(freq)\n    time = list(map(int, time.split(':')))\n    seen = [time]\n    cnt = 0\n    if time[0] // 10 == time[1] % 10 and time[0] % 10 == time[1] // 10:\n        cnt += 1\n    while True:\n        time = [(time[0] + freq // 60 + (time[1] + freq % 60) // 60) % 24, (time[1] + freq % 60) % 60]\n        if time[0] == seen[0][0] and time[1] == seen[0][1]:\n            break\n        seen.append(time)\n        if time[0] // 10 == time[1] % 10 and time[0] % 10 == time[1] // 10:\n            cnt += 1\n    print(cnt)", "t = int(input())\nfor q in range(t):\n    a = input()\n    (h, m) = map(int, a[:5].split(':'))\n    (hh, mm) = (h, m)\n    r = int(a[6:])\n    cnt = 0\n    hh = (hh + (mm + r) // 60) % 24\n    mm = (mm + r) % 60\n    if f'{hh:02}' == f'{mm:02}'[::-1]:\n        cnt += 1\n    while h != hh or m != mm:\n        hh = (hh + (mm + r) // 60) % 24\n        mm = (mm + r) % 60\n        if f'{hh:02}' == f'{mm:02}'[::-1]:\n            cnt += 1\n    print(cnt)", "from collections import defaultdict\nfrom math import gcd\n\ndef get_time(v):\n    return '%02d:%02d' % (v // 60, v % 60)\n\ndef lcm(a, b):\n    return a // gcd(a, b) * b\nfor _ in range(int(input())):\n    (time_s, d) = input().split()\n    d = int(d)\n    (h, m) = map(int, time_s.split(':'))\n    cur = h * 60 + m\n    ans = 0\n    las = cur + lcm(1440, d)\n    for ti in range(cur, las, d):\n        time_s = get_time(ti % 1440)\n        if time_s == time_s[::-1]:\n            ans += 1\n    print(ans)", "import re\nimport math\nM = 1440\nfor s in [*open(0)][1:]:\n    (h, m, x) = map(int, re.split(' |:', s))\n    m += h * 60\n    print(sum((t == t[::-1] for t in (f'{t % M // 60:02}{t % 60:02}' for t in range(m, m + M, math.gcd(x, M))))))", "import re, math\nM = 1440\nfor s in [*open(0)][1:]:\n    (h, m, x) = map(int, re.split(' |:', s))\n    m += h * 60\n    print(sum((t == t[::-1] for t in (f'{t % M // 60:02}{t % 60:02}' for t in range(m, m + M, math.gcd(x, M))))))", "import re, math\nM = 1440\nfor s in [*open(0)][1:]:\n    (h, m, x) = map(int, re.split(' |:', s))\n    m += h * 60\n    print(sum((t == t[::-1] for t in (f'{t % M // 60:02}{t % 60:02}' for t in range(m, m + M, math.gcd(x, M))))))", "import re, math\nfor s in [*open(0)][1:]:\n    (h, m, x) = map(int, re.split(' |:', s))\n    m += h * 60\n    print(sum((t == t[::-1] for t in (f'{t % 1440 // 60:02}{t % 60:02}' for t in range(m, m + 1440, math.gcd(x, 1440))))))", "for t in range(int(input())):\n    (s, x) = input().split()\n    x = int(x)\n    (h, m) = map(int, s.split(':'))\n    t = h * 60 + m\n    ans = 0\n    while True:\n        t += x\n        (h1, m1) = divmod(t, 60)\n        h1 %= 24\n        (a, b) = divmod(h1, 10)\n        (c, d) = divmod(m1, 10)\n        ans += a == d and b == c\n        if h1 == h and m1 == m:\n            break\n    print(ans)", "import re, math\nM = 1440\nfor s in [*open(0)][1:]:\n    (h, m, x) = map(int, re.split(' |:', s))\n    m += h * 60\n    print(sum((t == t[::-1] for t in (f'{t % M // 60:02}{t % 60:02}' for t in range(m, m + M, math.gcd(x, M))))))"]