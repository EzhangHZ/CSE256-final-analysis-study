["for s in [*open(0)][2::2]:\n    print(min(2, len(''.join((' *'[x > '0'] for x in s.split())).split())))", "for s in [*open(0)][2::2]:\n    print(min(2, len(''.join((' *'[x > '0'] for x in s.split())).split())))", "for s in [*open(0)][2::2]:\n    print(min(2, len(''.join((' *'[x > '0'] for x in s.split())).split())))", "for s in [*open(0)][2::2]:\n    print(min(2, len(''.join((' *'[x > '0'] for x in s.split())).split())))", "for s in [*open(0)][2::2]:\n    print(len(''.join((' *'[x > '0'] for x in s.split())).split(None, 1)))", "for s in [*open(0)][2::2]:\n    print(len(''.join((' *'[x > '0'] for x in s.split())).split(None, 1)))", "for s in [*open(0)][2::2]:\n    print(len(''.join((' *'[x > '0'] for x in s.split())).split(None, 1)))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if 0 not in a:\n        print(1)\n    else:\n        check = 0\n        block = 0\n        for i in range(len(a)):\n            if a[i] != 0:\n                if check == 0:\n                    block += 1\n                    check = 1\n                    if block == 2:\n                        break\n            else:\n                check = 0\n        print(block)", "for s in [*open(0)][2::2]:\n    print(len(''.join((' *'[x > '0'] for x in s.split())).split(None, 1)))", "for srg in [*open(0)][2::2]:\n    print(len(''.join((' *'[d > '0'] for d in srg.split())).split(None, 1)))", "t = int(input())\nans = []\nfor e in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if all(map(lambda x: x == 0, a)):\n        ans.append(0)\n    elif not 0 in a:\n        ans.append(1)\n    else:\n        (c1, c2) = (0, 0)\n        for e in a:\n            if e == 0:\n                c1 += 1\n            else:\n                break\n        a.reverse()\n        for e in a:\n            if e == 0:\n                c2 += 1\n            else:\n                break\n        a.reverse()\n        if c2 == 0:\n            c2 = -n\n        if 0 in a[c1:-c2]:\n            ans.append(2)\n        else:\n            ans.append(1)\nprint('\\n'.join(map(str, ans)))", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef NIT_destroys_universe(n, a):\n    non_zero_segment = 0\n    on_non_zero_segment = False\n    for i in a:\n        if i > 0 and (not on_non_zero_segment):\n            non_zero_segment += 1\n            on_non_zero_segment = True\n        elif i == 0 and on_non_zero_segment:\n            on_non_zero_segment = False\n        if non_zero_segment >= 2:\n            break\n    return non_zero_segment if non_zero_segment < 2 else 2\ntests = inp()\nfor test in range(tests):\n    n = inp()\n    a = inlt()\n    print(NIT_destroys_universe(n, a))", "res = []\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    s = False\n    for e in a:\n        if e != 0 and (not s):\n            c += 1\n            s = True\n        elif e == 0:\n            s = False\n    if c == 0:\n        res.append(0)\n    elif c == 1:\n        res.append(1)\n    else:\n        res.append(2)\nfor e in res:\n    print(e)", "import sys\n\ndef main(a, n):\n    i = 0\n    res = 0\n    while i < n and a[i] == 0:\n        i += 1\n    while i < n:\n        res += 1\n        while i < n and a[i] != 0:\n            i += 1\n        while i < n and a[i] == 0:\n            i += 1\n    return 2 if res > 2 else res\nres = []\nnum = int(sys.stdin.readline())\nfor i in range(num):\n    n = int(sys.stdin.readline())\n    a = [int(i) for i in sys.stdin.readline().split()]\n    res.append(main(a, n))\nprint(*res, sep='\\n')", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    universe = list(map(int, input().split()))\n    answer = 0\n    cur_num = 0\n    for num in universe:\n        if answer >= 2:\n            print(answer)\n            break\n        if cur_num == 0 and num != 0:\n            answer += 1\n            cur_num = num\n        elif num == 0:\n            cur_num = 0\n    else:\n        print(answer)", "x = int(input())\nodg = []\nfor x in range(0, x):\n    n = int(input())\n    l = input()\n    l = ' ' + l\n    l = l.split(' 0')\n    l = list(filter(lambda a: a != '' and a != ' ', l))\n    if len(l) <= 1:\n        odg.append(len(l))\n    else:\n        odg.append(2)\nfor e in odg:\n    print(e)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    cnt = 0\n    for i in range(1, n):\n        if arr[i] > 0 and arr[i - 1] == 0:\n            cnt += 1\n    cnt += 1 if arr[0] > 0 else 0\n    return min(cnt, 2)\nfor _ in range(int(input())):\n    print(solve())", "from os import error\nimport sys\ninput = sys.stdin.readline\nDEBUG = False\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef solve():\n    n = inp()\n    datum = inlt()\n    ans = 0\n    datum.insert(0, 0)\n    datum.append(0)\n    for (i, v) in enumerate(datum):\n        if i == 0:\n            continue\n        if datum[i - 1] == 0 and datum[i] != 0:\n            ans += 1\n    return min(ans, 2)\nq = inp()\nfor t in range(q):\n    ans = solve()\n    print(ans)", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    n = int(inp())\n    a = 0\n    r = 0\n    for x in map(int, inp().split()):\n        if x == 0:\n            if a == 1:\n                r += 1\n                a = 0\n        else:\n            a = 1\n    print(min(r + a, 2))\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "import sys\nzz = not __debug__\nif not zz:\n    input = sys.stdin.readline\nelse:\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nn = int(input())\nfor i in range(n):\n    l = int(input())\n    a = [int(i) for i in input().split()]\n    count = 0\n    i = 0\n    while i < l:\n        if a[i] == 0:\n            i += 1\n            continue\n        else:\n            while i < l and a[i] != 0:\n                i += 1\n            count += 1\n            continue\n    if count <= 1:\n        print(count)\n    else:\n        print(2)", "t = int(input())\n\ndef find_subsets_greater_than_zero(s: list):\n    count = 0\n    active = False\n    for i in range(len(s)):\n        if s[i] > 0:\n            if not active:\n                count += 1\n                active = True\n        elif active:\n            active = False\n    return count\nl = []\nresults = []\nfor i in range(t):\n    n = int(input())\n    universe = [int(x) for x in input().split(' ')]\n    subsets_of_non_zeros = find_subsets_greater_than_zero(universe)\n    if subsets_of_non_zeros < 2:\n        results.append(subsets_of_non_zeros)\n    else:\n        results.append(2)\nfor res in results:\n    print(res)", "for a in [*open(0)][2::2]:\n    a = [*map(int, a.split())]\n    z = 0\n    ans = 0\n    for i in a:\n        if i != 0:\n            z += 1\n        else:\n            ans += z > 0\n            z = 0\n    ans += z > 0\n    print(min(ans, 2))", "for _ in range(int(input())):\n    a = int(input())\n    l = input().split(' 0 ')\n    x = 0\n    for i in l:\n        if i == '0' or i == '0 0':\n            pass\n        else:\n            x += 1\n    if x > 2:\n        print(2)\n    else:\n        print(x)", "for _ in range(int(input())):\n    input()\n    a = input().split()\n    prev0 = True\n    cnt = 0\n    for x in a:\n        if x == '0':\n            if not prev0:\n                prev0 = True\n        elif prev0:\n            prev0 = False\n            cnt += 1\n    print(min(cnt, 2))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (N, A) = (int(input()), list(map(int, input().split())))\n    L = 0\n    for i in range(N):\n        if A[i] != 0:\n            break\n        L += 1\n    R = N\n    for i in range(N - 1, -1, -1):\n        R -= 1\n        if A[i] != 0:\n            break\n    if N == 1 and A[0] != 0:\n        print(1)\n    elif L > R:\n        print(0)\n    else:\n        ans = 1\n        for i in range(L, R):\n            if A[i] == 0 and A[i + 1] != 0:\n                ans += 1\n        print(min(ans, 2))", "t = int(input())\nfor _ in range(t):\n    n = [int(x) for x in input()]\n    arr = input().split()\n    ans = 0\n    is0 = True\n    for a in arr:\n        if a == '0':\n            is0 = True\n        else:\n            if is0:\n                ans += 1\n            is0 = False\n        if ans >= 2:\n            break\n    print(ans)", "fptr = open(0)\nfor _ in range(int(next(fptr))):\n    n = int(next(fptr))\n    a = list(map(int, next(fptr).split()))\n    l = r = -1\n    count = temp = 0\n    for i in range(n):\n        if l == -1 and a[i] != 0:\n            l = i\n        elif a[i] != 0:\n            r = i\n            count += temp\n            temp = 0\n        elif a[i] == 0 and l != -1:\n            temp += 1\n    if count:\n        print(2)\n    elif l != -1:\n        print(1)\n    else:\n        print(0)", "ans = []\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = 0\n    i = 0\n    while i < n:\n        if a[i] != 0:\n            j = i\n            x += 1\n            while j < n:\n                if a[j] == 0:\n                    break\n                j += 1\n                i += 1\n        else:\n            i += 1\n    ans.append(x)\nfor i in ans:\n    if i == 0:\n        print(i)\n    elif i == 1:\n        print(i)\n    else:\n        print('2')", "n = int(input())\na = []\nfor i in range(n):\n    x = int(input())\n    k = 0\n    kolnol = 0\n    s = list(map(int, input().split()))\n    nol = s.count(0)\n    if nol == len(s):\n        a.append(0)\n    elif nol == 0:\n        a.append(1)\n    else:\n        for j in range(len(s) - 1):\n            if s[j] != 0 and s[j + 1] == 0:\n                if kolnol + (len(s) - 1 - j) == nol:\n                    a.append(1)\n                    k = -1\n                else:\n                    a.append(2)\n                    k = -1\n                break\n            if s[j] == 0:\n                kolnol += 1\n        if k == 0:\n            a.append(1)\nfor i in a:\n    print(i)", "import math, sys\ninput = sys.stdin.readline\nS = lambda : input().rstrip()\nI = lambda : int(S())\nM = lambda : map(int, S().split())\nL = lambda : list(M())\nmod1 = 1000000007\nmod2 = 998244353\nfor _ in range(I()):\n    n = I()\n    arr = L()\n    cnt = 0\n    i = 0\n    while i < n:\n        if arr[i] == 0:\n            i += 1\n        else:\n            cnt += 1\n            while i < n and arr[i] != 0:\n                i += 1\n    print(min(cnt, 2))", "import os.path\nfrom math import gcd, floor, ceil\nfrom collections import *\nimport sys\nmod = 1000000007\nINF = float('inf')\n\ndef st():\n    return list(sys.stdin.readline().strip())\n\ndef li():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef mp():\n    return map(int, sys.stdin.readline().split())\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef pr(n):\n    return sys.stdout.write(str(n) + '\\n')\n\ndef prl(n):\n    return sys.stdout.write(str(n) + ' ')\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nt = inp()\nfor i in range(t):\n    n = inp()\n    l = li()\n    c1 = 0\n    c = l.count(0)\n    if n == 1:\n        if l[0] == 0:\n            pr(0)\n        else:\n            pr(1)\n    else:\n        k = l.count(0)\n        if k == n:\n            pr(0)\n        else:\n            i = 0\n            j = n - 1\n            while i <= j:\n                if l[i] != 0 and l[j] != 0:\n                    break\n                elif l[i] == 0 and l[j] != 0:\n                    i += 1\n                    c -= 1\n                elif l[i] != 0 and l[j] == 0:\n                    j -= 1\n                    c -= 1\n                elif l[i] == 0 and l[j] == 0:\n                    i += 1\n                    j -= 1\n                    c -= 2\n            if c > 0:\n                pr(2)\n            else:\n                pr(1)", "for i in range(int(input())):\n    n = input()\n    c = 0\n    ans = 0\n    for i in input().split():\n        if i == '0':\n            if c:\n                ans += 1\n            c = 0\n        else:\n            c += 1\n    if c:\n        ans += 1\n    print(min(ans, 2))", "t = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    i = 0\n    j = n - 1\n    while True:\n        if i == n or j == -1:\n            break\n        if a[i] == 0:\n            i += 1\n            if a[j] == 0:\n                j -= 1\n        elif a[j] == 0:\n            j -= 1\n            if a[i] == 0:\n                i += 1\n        else:\n            break\n    if sum(a) == 0:\n        ans.append(0)\n    else:\n        zero = 0\n        for j in a[i:j + 1]:\n            if j == 0:\n                zero = 1\n                break\n        if zero == 0:\n            ans.append(1)\n        else:\n            ans.append(2)\nfor i in ans:\n    print(i)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(input().split())\n    Num_Zero = arr.count('0')\n    Num_Non_Zero = n - Num_Zero\n    Cont_Non_Zero = 0\n    if Num_Non_Zero == 0:\n        print(0)\n    else:\n        Cont_Non_Zero = 0\n        i = 0\n        while i < n:\n            if arr[i] != '0':\n                while i < n and arr[i] != '0':\n                    Cont_Non_Zero += 1\n                    i += 1\n                break\n            i += 1\n        if Cont_Non_Zero == Num_Non_Zero:\n            print('1')\n        else:\n            print(2)", "x = int(input())\nv = []\nb = 1\nans = 0\nans2 = 0\ny = []\nfor _ in range(x):\n    n = int(input())\n    v = list(map(int, input().split()))\n    for i in range(n):\n        if v[i] == 0:\n            if b == 0:\n                ans += 1\n                b = 1\n        else:\n            b = 0\n    v = []\n    if b == 0:\n        ans += 1\n        b = 1\n    b = 1\n    if ans > 2:\n        ans = 2\n    y.append(ans)\n    ans = 0\nfor i in range(len(y)):\n    print(y[i])", "from collections import deque\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if sum(arr) == 0:\n        print(0)\n    else:\n        d = deque(arr)\n        while d and d[0] == 0:\n            d.popleft()\n        while d and d[-1] == 0:\n            d.pop()\n        if 0 in d:\n            print(2)\n        else:\n            print(1)", "def solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if arr.count(0) == n:\n        print(0)\n        return\n    prev = -1\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            if prev == -1:\n                prev = i\n            elif i - prev > 1:\n                print(2)\n                return\n            else:\n                prev = i\n    print(1)\n    return\nfor i in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if not any(a):\n        print(0)\n        continue\n    while not a[-1]:\n        a.pop()\n    a.reverse()\n    while not a[-1]:\n        a.pop()\n    print(1 if all(a) else 2)", "def main():\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        if sum(a) == 0:\n            print(0)\n            continue\n        i = 0\n        while i < n and a[i] == 0:\n            i += 1\n        while i < n and a[i] != 0:\n            i += 1\n        while i < n and a[i] == 0:\n            i += 1\n        if i == n:\n            print(1)\n            continue\n        print(2)\nmain()", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[0] != 0:\n        count = 1\n    else:\n        count = 0\n    for i in range(1, n):\n        if a[i] != 0:\n            if a[i - 1] == 0:\n                count += 1\n    if count > 2:\n        print(2)\n    else:\n        print(count)", "t = int(input())\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    cnt = 0\n    for i in range(len(arr)):\n        if arr[i] != 0 and (i == 0 or arr[i - 1] == 0):\n            cnt += 1\n    print(min(cnt, 2))\nfor _ in range(t):\n    solve()", "t = int(input())\n\ndef ndu(arr):\n    c = 0\n    for i in range(1, len(arr)):\n        if arr[i] != 0 and arr[i - 1] == 0:\n            c += 1\n    if arr[0] != 0:\n        c += 1\n    if c >= 2:\n        return 2\n    return c\nfor i in range(t):\n    n = int(input())\n    i = [int(i) for i in input().split()]\n    ans = ndu(i)\n    print(ans)", "num_of_cases = int(input())\nfor _ in range(num_of_cases):\n    N = int(input())\n    arr = [int(x) for x in input().split(' ')]\n    res = 0\n    nonzero_start = False\n    for num in arr:\n        if num != 0:\n            if nonzero_start == False:\n                nonzero_start = True\n        elif nonzero_start == True:\n            res += 1\n            nonzero_start = False\n    if nonzero_start == True:\n        res += 1\n    if res == 0:\n        print(0)\n    elif res == 1:\n        print(1)\n    else:\n        print(2)", "import types\nfrom functools import lru_cache\n\ndef main():\n    t = int(input())\n    for test in range(t):\n        n = int(input())\n        a = iin()\n        count = 0\n        zero = True\n        for i in a:\n            if i != 0 and zero:\n                zero = False\n                count += 1\n                if count > 2:\n                    break\n            elif i == 0:\n                zero = True\n        print(min(2, count))\n\ndef iin():\n    return [int(i) for i in input().split()]\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    f = True\n    ans = 0\n    done = False\n    for i in arr:\n        if i > 0:\n            if f:\n                ans += 1\n                f = False\n                if ans > 1:\n                    done = True\n        else:\n            f = True\n        if done:\n            break\n    print(ans)", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = j = 0\n    c = 0\n    while j < n:\n        if a[i] == 0 and i == j:\n            i += 1\n            j = i\n        elif a[j] == 0:\n            i = j\n            c += 1\n        else:\n            j += 1\n    if a[-1] != 0:\n        c += 1\n    if c > 1:\n        c = 2\n    print(c)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if not any(a):\n        print(0)\n    else:\n        (c1, c2) = (0, 0)\n        for e in a:\n            if e == 0:\n                c1 += 1\n            else:\n                break\n        a.reverse()\n        for e in a:\n            if e == 0:\n                c2 += 1\n            else:\n                break\n        a.reverse()\n        if c2 == 0:\n            c2 = -n\n        if 0 in a[c1:-c2]:\n            print(2)\n        else:\n            print(1)", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    cnt = 0\n    for i in range(n):\n        if a[cnt] != 0:\n            ans = ans + 1\n            while a[cnt] != 0:\n                cnt = cnt + 1\n                if cnt == n:\n                    break\n        cnt = cnt + 1\n        if cnt >= n:\n            break\n    ans = min(ans, 2)\n    print(ans)\n\ndef main():\n    for _ in range(int(input())):\n        solve()\nmain()", "def input_n():\n    return int(input())\n\ndef input_n_m():\n    return (int(i) for i in input().split())\n\ndef input_nums():\n    return [int(i) for i in input().split()]\n\ndef input_s():\n    return ''.join(input().split())\n\ndef solve(nums):\n    (group, pre) = (0, 0)\n    for n in nums:\n        if n > 0 and pre == 0:\n            group += 1\n        pre = n\n    return {0: 0, 1: 1}.get(group, 2)\nrows = input_n()\nfor _ in range(rows):\n    n = input_n()\n    nums = input_nums()\n    print(solve(nums))", "import math\nt = int(input())\nfor z in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    ans = 2\n    if a.count(0) == n:\n        ans = 0\n    else:\n        i = 0\n        j = n - 1\n        x = a.count(0)\n        while a[i] == 0:\n            i += 1\n            x -= 1\n        while a[j] == 0:\n            j -= 1\n            x -= 1\n        if x == 0:\n            ans = 1\n        else:\n            ans = 2\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    cnt = 0\n    flag = 0\n    if a == [0] * n:\n        print(0)\n        continue\n    else:\n        ans = 1\n        for num in a:\n            if cnt >= 2:\n                ans = 2\n                break\n            if num == 0:\n                flag = 0\n            elif flag == 0:\n                cnt = cnt + 1\n                flag = 1\n        if cnt >= 2:\n            ans = 2\n        print(ans)", "t = int(input())\n\ndef ndu(arr):\n    c = 0\n    for i in range(1, len(arr)):\n        if arr[i] != 0 and arr[i - 1] == 0:\n            c += 1\n        if c == 2:\n            break\n    if arr[0] != 0:\n        c += 1\n    if c >= 2:\n        return 2\n    return c\nfor i in range(t):\n    n = int(input())\n    i = [int(i) for i in input().split()]\n    ans = ndu(i)\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    if l[0] != 0:\n        ans += 1\n    for i in range(n - 1):\n        if l[i + 1] != 0 and l[i] == 0:\n            ans += 1\n    print(min(ans, 2))", "for i in range(int(input())):\n    n = int(input())\n    c = [int(j) for j in input().split()]\n    if sum(c) == 0:\n        print(0)\n    else:\n        u = 0\n        while c[u] == 0:\n            u += 1\n        while c[-1] == 0:\n            c.pop()\n        print([1, 2][0 in c[u:]])", "T = int(input())\nfor i in range(T):\n    n = input()\n    ans = 0\n    lst = list(map(int, input().split())) + [0]\n    prev = 0\n    for x in lst:\n        if not x and prev:\n            ans = ans + 1\n        prev = x\n    print(min(2, ans))", "def main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    zero = 0\n    for z in arr:\n        if z == 0:\n            zero += 1\n    if zero == n:\n        return 0\n    if zero == 0:\n        return 1\n    i = 0\n    while i < n:\n        if arr[i] != 0:\n            break\n        i += 1\n    j = n - 1\n    while j > 0:\n        if arr[j] != 0:\n            break\n        j -= 1\n    aux = arr[i:j + 1]\n    for z in aux:\n        if z == 0:\n            return 2\n    return 1\nfor _ in range(int(input())):\n    print(main())", "t = int(input())\nfor _ in range(t):\n    (n,) = map(int, input().split())\n    a = list(map(int, input().split()))\n    z = 0\n    for i in a:\n        if i == 0:\n            z += 1\n    if z == n:\n        print(0)\n        continue\n    (i, j) = (0, n - 1)\n    while i < n and a[i] == 0:\n        i += 1\n    while j > -1 and a[j] == 0:\n        j -= 1\n        i += 1\n    if i == z:\n        print(1)\n        continue\n    print(2)", "t = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    j = 0\n    k = 0\n    for r in range(n):\n        if a[r] != 0:\n            k += 1\n        elif k != 0:\n            j += 1\n            k = 0\n    if k != 0:\n        j += 1\n    if j > 2:\n        print(2)\n    else:\n        print(j)", "T = int(input())\nwhile T:\n    T -= 1\n    N = int(input())\n    arr = list(map(int, input().split()))\n    i = 0\n    c = 0\n    d = 0\n    while i < N and arr[i] == 0:\n        i += 1\n    if i == N:\n        print(0)\n        continue\n    j = N - 1\n    while j >= 0 and arr[j] == 0:\n        j -= 1\n    while i < j + 1:\n        if arr[i] == 0:\n            c += 1\n            while i < N and arr[i] == 0:\n                i += 1\n        else:\n            d = 1\n            i += 1\n    if d == 0:\n        print(0)\n    elif c == 0:\n        print(1)\n    else:\n        print(2)", "import math\nt = int(input())\nwhile t:\n    t -= 1\n    h = input()\n    a = int(h)\n    lis = input().split()\n    lis = [int(x) for x in lis]\n    if max(lis) == 0:\n        print(0)\n        continue\n    if a == 1:\n        print(1)\n        continue\n    fir = 0\n    if lis[0] != 0 and lis[1] == 0:\n        fir += 1\n    lis[0] = 0\n    for ind in range(1, a):\n        if lis[ind] != 0 and lis[ind - 1] == 0:\n            fir += 1\n        if fir == 2:\n            break\n    print(fir)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    j = 0\n    c = 0\n    while j < n and c != 2:\n        if a[j]:\n            while j < n and a[j] != 0:\n                j += 1\n            c += 1\n        else:\n            while j < n and a[j] == 0:\n                j += 1\n    print(c)", "def solve(A):\n    ans = 0\n    prev = -1\n    for i in A:\n        if prev > 0 and i > 0:\n            continue\n        if prev > 0 and i == 0:\n            ans += 1\n        prev = i\n    if prev > 0:\n        ans += 1\n    return ans if ans < 2 else 2\n\ndef read():\n    A = []\n    line = input()\n    n = int(line)\n    line = input()\n    ss = line.split(' ')\n    for s in ss:\n        A.append(int(s))\n    return A\n\ndef main():\n    n = int(input())\n    for _ in range(n):\n        A = read()\n        print(solve(A))\n    pass\nmain()", "def meow(l, n):\n    i = 0\n    count = 0\n    mem = 0\n    while i < n - 1:\n        if l[i] != 0:\n            if l[i + 1] == 0:\n                j = 0\n                while j < n - i - 1:\n                    if l[i + 1 + j] != 0:\n                        return 2\n                    j = j + 1\n                return 1\n        i = i + 1\n    if l[n - 1] == 0:\n        return 0\n    else:\n        return 1\ntt = 0\nt = int(input())\nwhile tt < t:\n    nu = int(input())\n    ok = list(map(int, input().split()))\n    print(meow(ok, nu))\n    tt = tt + 1", "tests = int(input())\nfor _ in range(tests):\n    n = int(input())\n    v = list(map(int, input().split()))\n    prev = -1\n    ans = 0\n    breakk = False\n    for (i, x) in enumerate(v):\n        if i == 0:\n            if x != 0:\n                ans += 1\n            prev = x\n            continue\n        if x != 0 and prev == 0:\n            ans += 1\n            if ans == 2:\n                print(ans)\n                breakk = True\n                break\n            prev = x\n            continue\n        prev = x\n    if not breakk:\n        print(ans)", "for i in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    mode = 0\n    count = 0\n    for i in s:\n        if i:\n            if mode == 0:\n                count += 1\n                mode = 1\n        else:\n            mode = 0\n    print(min(count, 2))", "n = int(input())\nfor _ in range(n):\n    long = int(input())\n    l = list(map(int, input().split()))\n    ind = 0\n    for i in range(long):\n        if l[i] != 0:\n            ind = 1\n            break\n    if ind == 0:\n        print(0)\n    else:\n        x = i\n        for i in range(long - 1, -1, -1):\n            if l[i] != 0:\n                break\n        y = i\n        if 0 not in l[x:y + 1]:\n            print(1)\n        else:\n            print(2)", "def func():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    l = 0\n    c = 0\n    if arr[0] != 0:\n        c += 1\n    while l < n - 1:\n        if arr[l] == 0 and arr[l + 1] != 0:\n            c += 1\n        l += 1\n    if c >= 2:\n        print(2)\n    else:\n        print(c)\ntc = int(input())\nwhile tc > 0:\n    func()\n    tc -= 1", "for _ in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    if li.count(0) == n:\n        print(0)\n        continue\n    if 0 not in li:\n        print(1)\n        continue\n    c = d = -1\n    for i in range(n):\n        if li[i] != 0:\n            if c == -1:\n                c = i\n            d = i\n    if 0 not in li[c:d + 1]:\n        print(1)\n        continue\n    print(2)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if l == [0] * n:\n        print(0)\n    else:\n        groups = 0\n        for j in range(n):\n            if l[j] > 0 and (j == 0 or l[j - 1] == 0):\n                groups += 1\n        if groups >= 2:\n            print(2)\n        else:\n            print(1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    for i in range(1, n):\n        if arr[i] != 0 and arr[i - 1] == 0:\n            ans += 1\n    if arr[0] != 0:\n        ans += 1\n    print(min(ans, 2))", "import sys\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        solve()\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    i = 0\n    swich = False\n    while i < n:\n        if a[i] != 0 and (not swich):\n            swich = True\n            c += 1\n            if c >= 2:\n                break\n        elif a[i] == 0 and swich:\n            swich = False\n        i += 1\n    print(c)\nmain()", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (first_done, last_done) = (False, False)\n    first_nz = 0\n    last_nz = n - 1\n    for i in range(n):\n        if first_done and last_done:\n            break\n        else:\n            if a[i] != 0 and first_done == False:\n                first_nz = i\n                first_done = True\n            if a[n - i - 1] != 0 and last_done == False:\n                last_nz = n - i - 1\n                last_done = True\n    if (first_nz == 0 and a[first_nz] == 0) and (last_nz == n - 1 and a[last_nz] == 0):\n        print('0')\n        continue\n    if 0 in a[first_nz:last_nz]:\n        print('2')\n        continue\n    else:\n        print('1')\n        continue", "t = int(input())\nfor i in range(t):\n    s = input()\n    n = int(s.split()[0])\n    arr = input().split()\n    arr = list(map(int, arr))\n    lnz = n\n    rnz = -1\n    for i in range(n):\n        if arr[i] != 0:\n            lnz = i\n            break\n    if lnz == n:\n        print(0)\n        continue\n    for i in range(n - 1, -1, -1):\n        if arr[i] != 0:\n            rnz = i\n            break\n    res = 1\n    for i in range(lnz, rnz + 1):\n        if arr[i] == 0:\n            res = 2\n            break\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if 0 not in a:\n        print(1)\n    else:\n        check = 0\n        block = 0\n        for i in range(len(a)):\n            if a[i] != 0:\n                if check == 0:\n                    block += 1\n                    check = 1\n                    if block == 2:\n                        break\n            else:\n                check = 0\n        print(block)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    z = 0\n    for i in arr:\n        if i == 0:\n            z += 1\n    if z == n:\n        print(0)\n    elif z == 0:\n        print(1)\n    else:\n        s = 0\n        for i in range(n):\n            if arr[i] == 0:\n                continue\n            if i == n - 1 or arr[i + 1] == 0:\n                s += 1\n        if s == 1:\n            print(1)\n        else:\n            print(2)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    a = 0\n    for i in range(n):\n        if l[i] != 0:\n            c += 1\n        elif c != 0:\n            a += 1\n            c = 0\n    if c != 0:\n        a += 1\n    if a > 2:\n        a = 2\n    print(a)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    for i in range(1, n):\n        if arr[i] != 0 and arr[i - 1] == 0:\n            ans += 1\n    if arr[0] != 0:\n        ans += 1\n    print(min(ans, 2))", "for t in range(int(input())):\n    input()\n    s = [0] + [*map(int, input().split())]\n    c = 0\n    for i in range(len(s) - 1):\n        if s[i] == 0 and s[i + 1] != 0:\n            c += 1\n    print(min(c, 2))", "from collections import deque\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    if len(set(a)) == 1 and a[0] == 0:\n        print('0\\n')\n        continue\n    a = deque(a)\n    while a and a[-1] == 0:\n        a.pop()\n    while a and a[0] == 0:\n        a.popleft()\n    if 0 in a:\n        print('2\\n')\n    else:\n        print('1\\n')", "import collections\nimport collections\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    if len(set(a)) == 1 and a[0] == 0:\n        print('0\\n')\n        continue\n    a = collections.deque(a)\n    while a and a[-1] == 0:\n        a.pop()\n    while a and a[0] == 0:\n        a.popleft()\n    if 0 in a:\n        print('2\\n')\n    else:\n        print('1\\n')", "num_inp = lambda : int(input())\narr_inp = lambda : list(map(int, input().split()))\nsp_inp = lambda : map(int, input().split())\nstr_inp = lambda : input()\nt = num_inp()\nfor _ in range(t):\n    n = num_inp()\n    l = arr_inp()\n    count = l.count(0)\n    if count == n:\n        print(0)\n        continue\n    count = 0\n    ind = -1\n    for i in range(n):\n        if l[i] == 0:\n            if i - ind > 1:\n                count += 1\n            ind = i\n    if n - ind >= 2:\n        count += 1\n    if count >= 2:\n        print(2)\n    else:\n        print(1)", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split())) + [0]\n    c = 0\n    pre = 0\n    for i in A:\n        if i == 0 and pre != 0:\n            c += 1\n        pre = i\n    print(min(c, 2))", "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    x = 1 if s[0] > 0 else 0\n    for i in range(1, n):\n        if s[i] > 0 and s[i - 1] == 0:\n            x += 1\n        if x >= 2:\n            break\n    print(x)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if len(set(a)) == 1:\n        if a[0] == 0:\n            print(0)\n        else:\n            print(1)\n    else:\n        n += 1\n        a.append(0)\n        nit = 0\n        for i in range(n - 1):\n            if a[i] != 0 and a[i + 1] == 0:\n                nit += 1\n        if nit == 1:\n            print(1)\n        else:\n            print(2)", "def destroy_count(a, n):\n    count = 0\n    if a[0] != 0:\n        count += 1\n    for i in range(1, n):\n        if a[i - 1] == 0 and a[i] != 0:\n            count += 1\n            if count > 2:\n                return 2\n    return count\nt = int(input().strip())\nfor _ in range(t):\n    n = int(input().strip())\n    a = list(map(int, input().rstrip().split()))\n    ans = destroy_count(a, n)\n    print(ans)", "def solve(a, n):\n    if a.count(0) == n:\n        print(0)\n        return\n    (l, r) = (0, n - 1)\n    while a[l] == 0:\n        l += 1\n    while a[r] == 0:\n        r -= 1\n    for i in range(l, r + 1):\n        if a[i] == 0:\n            print(2)\n            return\n    print(1)\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    solve(a, n)", "for _ in range(int(input())):\n    n = int(input())\n    arr = (*map(int, input().split()),)\n    count = 0\n    last = 0\n    for num in arr:\n        if num == 0:\n            if last != 0:\n                count += 1\n        last = num\n    if last != 0:\n        count += 1\n    print(min(count, 2))", "for h in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    if x.count(0) == n:\n        print(0)\n    else:\n        c = 0\n        if x[0] != 0:\n            c += 1\n        for i in range(1, n):\n            if x[i - 1] == 0 and x[i] != 0:\n                c += 1\n        if c == 1:\n            print(1)\n        else:\n            print(2)", "from collections import deque\nt = int(input())\nfor elem in range(t):\n    n = int(input())\n    d = deque([int(el) for el in input().split()])\n    c = d.count(0)\n    if c == n:\n        print(0)\n    elif c == 0:\n        print(1)\n    else:\n        while d[-1] == 0:\n            d.pop()\n            c -= 1\n        while d[0] == 0:\n            d.popleft()\n            c -= 1\n        if c == 0:\n            print(1)\n        else:\n            print(2)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = a.count(0)\n    if c == n:\n        print(0)\n    elif c == 0:\n        print(1)\n    else:\n        k = 0\n        for i in range(n):\n            if i == 0:\n                if a[i] != 0:\n                    k += 1\n            elif a[i] != 0 and a[i - 1] == 0:\n                k += 1\n        if k < 2:\n            print(1)\n        else:\n            print(2)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    i = 0\n    ar = arr.copy()\n    if 1 == 2:\n        a = 0\n    else:\n        ans = 0\n        i = 0\n        while i < n:\n            if ar[i] != 0:\n                ans += 1\n                while i < n and ar[i] != 0:\n                    i += 1\n            i += 1\n        ans = min(2, ans)\n        print(ans)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    count = 0\n    a = []\n    for el in arr:\n        if el != 0:\n            a.append(el)\n        elif len(a) > 0:\n            count += 1\n            a = []\n    if len(a) > 0:\n        count += 1\n    print(min(2, count))", "import sys\nimport collections\nfrom math import ceil, gcd, sqrt, log\nimport bisect\nINF = float('inf')\nmod = 1000000007\n\ndef solve():\n    n = int(input())\n    A = list(map(int, input().split()))\n    count = A.count(0)\n    if count == n:\n        print(0)\n        return\n    flag = 0\n    ok = 0\n    k = 0\n    for i in range(n):\n        if A[i] > 0 and flag == 0 and (ok < 1):\n            flag = 1\n            ok += 1\n        elif A[i] > 0 and flag == 1:\n            k += 1\n            continue\n        elif A[i] == 0:\n            flag = 0\n        else:\n            break\n        k += 1\n    if k == n:\n        print(1)\n    else:\n        print(2)\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    flag = 0\n    c = 0\n    a = 0\n    for i in l:\n        if i == 0:\n            if a == 0:\n                continue\n            else:\n                a = 0\n                c += 1\n        else:\n            a += 1\n    if a > 0:\n        print(min(2, c + 1))\n    else:\n        print(min(2, c))", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[0] == 0 and len(set(a)) == 1:\n        print(0)\n        return\n    arr = [a[0]]\n    for i in range(1, n):\n        if a[i] == arr[-1]:\n            continue\n        arr.append(a[i])\n    x = arr[1:-1].count(0)\n    if x == 0:\n        print(1)\n    else:\n        print(2)\nfor t in range(int(input())):\n    solve()", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if arr.count(0) == n:\n        print(0)\n    else:\n        l = 0\n        r = n - 1\n        count = 0\n        while arr[l] == 0:\n            l += 1\n            count += 1\n        while arr[r] == 0:\n            r -= 1\n            count += 1\n        if count == arr.count(0):\n            print(1)\n        else:\n            print(2)"]