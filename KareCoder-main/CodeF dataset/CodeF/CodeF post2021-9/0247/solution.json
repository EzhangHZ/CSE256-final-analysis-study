["import sys\n\ndef _hy_anon_var_2(*_hyx_GXUffffX2):\n\n    def solution(arr):\n        max_elt = 0\n        steps = -1\n        for x in reversed(arr):\n            if x > max_elt:\n                steps += 1\n                max_elt = x\n                _hy_anon_var_1 = None\n            else:\n                _hy_anon_var_1 = None\n        return steps\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        print(solution(arr))\n_hyx_GXUffffX1 = _hy_anon_var_2(*sys.argv)\n_hy_anon_var_3 = sys.exit(_hyx_GXUffffX1) if isinstance(_hyx_GXUffffX1, int) else None", "def solution(arr):\n    max_elt = 0\n    steps = -1\n    for x in reversed(arr):\n        if x > max_elt:\n            steps += 1\n            max_elt = x\n            _hy_anon_var_1 = None\n        else:\n            _hy_anon_var_1 = None\n    return steps\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(solution(arr))", "def solve():\n    num = int(input())\n    mas = list(map(int, input().split()))\n    count = 0\n    max = mas[-1]\n    for i in range(num - 1, -1, -1):\n        element = mas[i]\n        if element > max:\n            max = element\n            count += 1\n    return count\ncount_of_data = int(input())\nfor i in range(count_of_data):\n    print(solve())", "from sys import stdin, stdout\n\ndef main():\n    for _ in range(int(stdin.readline().strip())):\n        n = int(stdin.readline().strip())\n        a = list(map(int, stdin.readline().split()))\n        c = a[-1]\n        r = 0\n        for i in a[::-1]:\n            if i > c:\n                c = i\n                r += 1\n        print(r)\nmain()", "def main():\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        (res, old) = (0, a[-1])\n        for i in range(n - 2, -1, -1):\n            if a[i] > old:\n                old = a[i]\n                res += 1\n        print(res)\nmain()", "def mass_counter(l):\n    times = 0\n    max_number = l[-1]\n    for i in range(len(l) - 2, -1, -1):\n        if l[i] > max_number:\n            max_number = l[i]\n            times += 1\n    return times\nfor _ in range(int(input())):\n    _ = input()\n    print(mass_counter(list(map(int, input().split()))))", "def count(kol):\n    lenmas = int(input())\n    chisla = list(map(int, input().split()))\n    next = -1\n    count = -1\n    for i in range(lenmas - 1, -1, -1):\n        if next < chisla[i]:\n            next = chisla[i]\n            count = count + 1\n        else:\n            pass\n    print(count)\nkol = int(input())\nfor i in range(kol):\n    count(kol)", "def solve():\n    n = int(input())\n    arr = list(map(int, input().split()))[::-1]\n    cnt = 0\n    mx = arr[0]\n    for i in range(1, n):\n        if arr[i] > mx:\n            mx = arr[i]\n            cnt += 1\n    return cnt\nfor _ in range(int(input())):\n    print(solve())", "def main():\n    tests = int(input())\n    for _ in range(tests):\n        input()\n        array = [int(x) for x in input().split()]\n        print(everse_array(array))\n\ndef everse_array(arr):\n    elements = iter(reversed(arr))\n    eversount = 0\n    curax = next(elements)\n    for el in elements:\n        if el > curax:\n            curax = el\n            eversount += 1\n    return eversount\nmain()", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mx = a[-1]\n    c = 0\n    for x in a[::-1]:\n        if x > mx:\n            mx = x\n            c += 1\n    print(c)", "def solve(n, arr):\n    maxValue = max(arr)\n    curr = arr[-1]\n    if maxValue == curr:\n        print(0)\n        return\n    count = 1\n    idx = n - 1\n    while arr[idx] < maxValue:\n        if arr[idx] > curr:\n            curr = arr[idx]\n            count += 1\n        idx -= 1\n    print(count)\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    solve(n, arr)", "for _ in range(int(input())):\n    e = int(input())\n    nums = list(map(int, input().split()))\n    nums.reverse()\n    max = 0\n    counter = -1\n    for i in nums:\n        if i > max:\n            max = i\n            counter += 1\n    print(counter)", "t = int(input())\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    max = 0\n    count = 0\n    for i in arr[::-1]:\n        if i > max:\n            max = i\n            count += 1\n    print(count - 1)\n    t -= 1", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    lst = a[n - 1]\n    cnt = 0\n    for i in range(n - 2, -1, -1):\n        if lst < a[i]:\n            lst = a[i]\n            cnt += 1\n    print(cnt)\nt = int(input())\nfor i in range(t):\n    solve()", "for s in [*open(0)][2::2]:\n    r = -1\n    m = 0\n    for x in map(int, s.split()[::-1]):\n        if x > m:\n            r += 1\n            m = x\n    print(r)", "import math\n\ndef solve():\n    n = int(input())\n    l = list(map(int, input().split()))\n    mx = 0\n    count = -1\n    for i in l[::-1]:\n        if i > mx:\n            mx = i\n            count += 1\n    print(count)\nn = int(input())\nfor _ in range(n):\n    solve()", "def solve(n, a):\n    count = 0\n    cur = a[-1]\n    for (i, num) in enumerate(a[::-1]):\n        if num > cur:\n            count += 1\n            cur = num\n    return count\nans = []\nfor _ in range(int(input())):\n    ans.append(solve(int(input()), list(map(int, input().split()))))\nprint(*ans, sep='\\n')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    data = list(map(int, input().split()))\n    num = data[-1]\n    cur_max = num\n    count = 0\n    for k in data[::-1]:\n        if k > cur_max:\n            count += 1\n            cur_max = k\n    print(count)", "import math\n\ndef modInverse(p, q):\n    mod = 998244353\n    expo = 0\n    expo = mod - 2\n    while expo:\n        if expo & 1:\n            p = p * q % mod\n        q = q * q % mod\n        expo >>= 1\n    return p\n\ndef answer(x, y, li):\n    s = []\n    for p in range(0, len(li) - 1):\n        s.append(li[p + 1] - li[p])\n    s.append(int(1e+18))\n\n    def solu(s, fi, y):\n        m = 0\n        for j in range(0, len(s)):\n            m = m + min(s[j], fi)\n        return m >= y\n    low = 1\n    high = int(1e+18)\n    ans = 0\n    while low < high:\n        fi = (low + high) // 2\n        if solu(s, fi, y):\n            high = fi\n            ans = fi\n        else:\n            low = fi + 1\n    return ans\nt = int(input())\nfor i in range(0, t):\n    x = int(input())\n    s = input()\n    r = -1\n    m = 0\n    for x in map(int, s.split()[::-1]):\n        if x > m:\n            r += 1\n            m = x\n    print(r)", "from collections import Counter\nfrom itertools import accumulate, product\nimport operator\nimport math\n\ndef solve():\n    n = int(input())\n    A = [int(char) for char in input().split()]\n    MAX = max(A)\n    if A[-1] == MAX:\n        return 0\n    (k, prev) = (1, A[-1])\n    for i in range(n - 2, -1, -1):\n        num = A[i]\n        if num == MAX:\n            break\n        if num > prev:\n            prev = num\n            k += 1\n    return k\nfor _ in range(int(input())):\n    print(solve())", "for s in [*open(0)][2::2]:\n    r = -1\n    m = 0\n    for x in map(int, s.split()[::-1]):\n        if x > m:\n            r += 1\n            m = x\n    print(r)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    i = a[-1]\n    for j in range(n - 1, -1, -1):\n        if a[j] > i:\n            ans += 1\n            i = a[j]\n    print(ans)", "import collections\n\ndef readLine():\n    return list(map(int, input().strip().split()))\n\ndef readInt():\n    return int(input())\n\ndef readString():\n    return input()\n\ndef tcase():\n    t = readInt()\n    for _ in range(t):\n        solve()\n\ndef solve():\n    n = readInt()\n    arr = readLine()\n    m = -1\n    k = 0\n    for i in range(n - 1, -1, -1):\n        if arr[i] > m:\n            m = arr[i]\n            k += 1\n    print(k - 1)\ntcase()", "import math\n\ndef test():\n    n = count = -1\n    mx = mx1 = 0\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(n):\n        if a[i] > mx:\n            mx = a[i]\n    for i in range(n - 1, -1, -1):\n        if a[i] > mx1:\n            mx1 = a[i]\n            count += 1\n    print(count)\nt = int(input())\nfor i in range(t):\n    test()", "def vyvorot(n, a):\n    ma = max(a)\n    cnt = 0\n    k = a[len(a) - 1]\n    for i in range(len(a) - 1, -1, -1):\n        if a[i] > k:\n            cnt += 1\n            k = a[i]\n    return cnt\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(vyvorot(n, a))", "def solve(a) -> int:\n    if len(a) == 1:\n        return 0\n    res = 0\n    cur = a[-1]\n    for i in range(len(a) - 1, -1, -1):\n        if a[i] > cur:\n            cur = a[i]\n            res += 1\n    return res\nfor _ in range(int(input())):\n    _ = input()\n    print(solve([int(i) for i in input().split()]))", "for s in [*open(0)][2::2]:\n    r = -1\n    m = 0\n    for x in map(int, s.split()[::-1]):\n        if x > m:\n            r += 1\n            m = x\n    print(r)", "from sys import stdin, stdout\n\ndef main():\n    t = int(stdin.readline())\n    for i in range(t):\n        n = int(stdin.readline())\n        save = list(map(int, stdin.readline().split()))\n        (ind, m) = (0, 0)\n        check = 0\n        count = 0\n        for k in range(len(save)):\n            if save[k] >= m:\n                ind = k\n                m = save[k]\n        save = save[ind + 1:]\n        save = save[::-1]\n        for j in range(len(save)):\n            if save[j] > check:\n                count += 1\n                check = save[j]\n        print(count)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = -1\n    ma = 0\n    for i in range(len(a) - 1, -1, -1):\n        if a[i] > ma:\n            ma = a[i]\n            k += 1\n    print(k)", "def counter():\n    n = int(input())\n    nums = list(map(int, input().split()))\n    cur = -1\n    cnt = -1\n    for i in range(n - 1, -1, -1):\n        if cur < nums[i]:\n            cnt += 1\n            cur = nums[i]\n    print(cnt)\nt = int(input())\nfor i in range(t):\n    counter()", "def main():\n    n = int(input())\n    arr = list(map(int, input().split()))[::-1]\n    comp = int()\n    k = 0\n    for i in range(n):\n        if i == 0:\n            comp = arr[i]\n        elif arr[i] > comp:\n            comp = arr[i]\n            k += 1\n    print(k)\nfor _ in range(int(input())):\n    main()", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    count = 0\n    max = l[-1]\n    for i in range(len(l) - 1, -1, -1):\n        if l[i] > max:\n            max = l[i]\n            count += 1\n    print(count)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = -1\n    num = 0\n    for i in range(-1, -n - 1, -1):\n        if a[i] > num:\n            num = a[i]\n            c += 1\n    print(c)", "def main():\n    m = int(input())\n    for i in range(m):\n        n = int(input())\n        l = list(map(int, input().split()))\n        max = 0\n        max_i = 0\n        for j in range(n):\n            if l[j] > max:\n                max = l[j]\n                max_i = j\n        mes_m = l[-1]\n        count = 0\n        for j in range(n - 1, max_i - 1, -1):\n            if l[j] > mes_m:\n                mes_m = l[j]\n                count += 1\n        print(count)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    q = l[-1]\n    ans = 0\n    for i in l[::-1]:\n        if i > q:\n            ans += 1\n            q = i\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, list(input().split())))\n    arr = a[::-1]\n    x = arr[0]\n    count = 0\n    for j in arr:\n        if j > x:\n            count = count + 1\n            x = j\n    print(count)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(j) for j in input().split()]\n    res = last = 0\n    for i in arr[::-1]:\n        if last < i:\n            res += 1\n            last = i\n    print(res - 1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    mx = 0\n    ans = 0\n    for i in range(n - 1, -1, -1):\n        if arr[i] > mx:\n            mx = arr[i]\n            ans += 1\n    ans -= 1\n    print(ans)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    maxE = 0\n    maxV = a[len(a) - 1]\n    for c in range(len(a) - 1, -1, -1):\n        if a[c] > maxV:\n            maxE += 1\n            maxV = a[c]\n    print(maxE)", "def solve():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    d = max(a)\n    x = a[-1]\n    ans = 0\n    for i in range(n - 2, -1, -1):\n        if a[i] > x:\n            ans += 1\n            x = a[i]\n        if a[i] == d:\n            break\n    print(ans)\nt = int(input())\nfor _ in range(t):\n    solve()", "for _ in range(int(input())):\n    input()\n    a = list(map(int, input().split()))\n    count = -1\n    last_cut = 0\n    for el in reversed(a):\n        if el > last_cut:\n            count += 1\n            last_cut = el\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    c = 0\n    an = A[-1]\n    for i in range(n - 1, -1, -1):\n        if an < A[i]:\n            c += 1\n            an = A[i]\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    h = a[n - 1]\n    for i in range(n - 1, -1, -1):\n        if a[i] > h:\n            c += 1\n            h = a[i]\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    h = a[n - 1]\n    for i in range(n - 1, -1, -1):\n        if a[i] > h:\n            c += 1\n            h = a[i]\n    print(c)", "t = int(input())\nfor ns in range(t):\n    n = int(input())\n    s = list(map(int, input().split()))\n    s = s[::-1]\n    ans = 0\n    mx = max(s)\n    help = s[0]\n    for i in s:\n        if i > help:\n            help = i\n            ans += 1\n        if help == mx:\n            break\n    print(ans)", "from math import *\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom collections import Counter as ctr\nfrom collections import deque as dq\nfrom array import array\nfrom re import search\nli = lambda : list(map(int, input().split()))\narr = lambda a: array('i', a)\nbi = lambda n: bin(n).replace('0b', '')\nyn = lambda f: print('NYOE S'[f::2])\nsbstr = lambda a, s: search('.*'.join(a), s)\n\ndef solve():\n    for _ in range(int(input())):\n        n = int(input())\n        a = li()[::-1]\n        c = 0\n        m = max(a)\n        t = a[0]\n        for i in range(n):\n            if a[i] > t:\n                t = a[i]\n                c += 1\n            elif t == m:\n                break\n        print(c)\nsolve()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = a[::-1]\n    m = b[0]\n    ans = 0\n    for j in range(n):\n        if m < b[j]:\n            ans += 1\n            m = b[j]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    alist = list(map(int, input().split()))\n    (el, quantity) = (alist[n - 1], 0)\n    for i in range(n - 2, -1, -1):\n        if alist[i] > el:\n            quantity += 1\n            el = alist[i]\n    print(quantity)", "def main():\n    m = int(input())\n    for i in range(m):\n        n = int(input())\n        l = list(map(int, input().split()))\n        max = 0\n        max_i = 0\n        for j in range(n):\n            if l[j] > max:\n                max = l[j]\n                max_i = j\n        mes_m = l[-1]\n        count = 0\n        for j in range(n - 1, max_i - 1, -1):\n            if l[j] > mes_m:\n                mes_m = l[j]\n                count += 1\n        print(count)\nmain()", "for i in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    im = n - list(reversed(s)).index(max(s)) - 1\n    po = s[-1]\n    k = 0\n    for i in range(n - 2, im - 1, -1):\n        if s[i] > po:\n            k += 1\n            po = s[i]\n    print(k)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    mx = A[n - 1]\n    k = 0\n    for i in range(n - 1, -1, -1):\n        if A[i] > mx:\n            k += 1\n            mx = A[i]\n    print(k)", "for _ in range(int(input())):\n    n = int(input())\n    nums = [int(el) for el in input().split()[::-1]]\n    k = 0\n    x = nums[0]\n    for el in nums:\n        if el > x:\n            x = el\n            k += 1\n    print(k)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = 0\n    x = a[-1]\n    for j in range(n - 2, -1, -1):\n        if a[j] > x:\n            k += 1\n            x = a[j]\n    print(k)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    m = list(map(int, input().split()))\n    ind = m.index(max(m))\n    t = 0\n    new_max = max(m)\n    flag = True\n    maxim = m[-1]\n    for elem in m[::-1]:\n        if elem > maxim:\n            maxim = elem\n            t += 1\n    print(t)", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    s = list(map(int, input().split()))\n    ans = 0\n    x = s[-1]\n    m = max(s)\n    for j in s[::-1]:\n        if j > x:\n            x = j\n            ans += 1\n        if j == m:\n            print(ans)\n            break", "t = int(input())\nall = []\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    counter = 0\n    an = a[-1]\n    for i in range(n - 1, -1, -1):\n        if a[i] > an:\n            counter += 1\n            an = a[i]\n    all.append(counter)\nfor el in all:\n    print(el)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a_n = a[-1]\n    count = 0\n    for i in range(n - 1, -1, -1):\n        if a[i] > a_n:\n            a_n = a[i]\n            count += 1\n    print(count)", "def lastmax(n, lst):\n    m = lst[-1]\n    a = 0\n    for i in range(n - 1, -1, -1):\n        if lst[i] > m:\n            a += 1\n            m = lst[i]\n    return a\nfor i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    print(lastmax(n, lst))", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()][::-1]\n    f = max(a)\n    ans = 0\n    now = a[0]\n    for i in a:\n        if i > now:\n            ans += 1\n            now = i\n        if i == f:\n            break\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    c = 0\n    arr = arr[::-1]\n    t = arr[0]\n    for i in arr:\n        if i > t:\n            c += 1\n            t = i\n    print(c)", "t = int(input())\nfor r in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    m = A[n - 1]\n    r = 0\n    for i in range(n - 2, -1, -1):\n        if A[i] > m:\n            m = A[i]\n            r += 1\n    print(r)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    count = 0\n    last = arr[-1]\n    for i in range(n - 1, -1, -1):\n        if arr[i] > last:\n            count += 1\n            last = arr[i]\n    print(count)", "def solve():\n    n = int(input())\n    a = list(input().split())\n    dem = 0\n    for i in range(n):\n        a[i] = int(a[i])\n    ma = a[n - 1]\n    for i in range(n - 2, -1, -1):\n        if a[i] > ma:\n            dem += 1\n            ma = a[i]\n    print(dem)\nfor i in range(int(input())):\n    solve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    mas = list(map(int, input().split()))[::-1]\n    c = 0\n    x = 0\n    for i in range(len(mas)):\n        if x < mas[i]:\n            x = mas[i]\n            c += 1\n    print(c - 1)", "import sys\n\ndef solve(arr):\n    mx = max(arr)\n    ans = 1\n    i = 0\n    last = arr[-1]\n    if arr[-1] == mx:\n        return 0\n    for i in range(len(arr) - 1, -1, -1):\n        if arr[i] == mx:\n            return ans\n        if arr[i] > last:\n            ans += 1\n            last = arr[i]\n    return ans\nt = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    arr = list(map(int, sys.stdin.readline().strip().split()))\n    print(solve(arr))", "for _ in range(int(input())):\n    x = int(input())\n    array = list(map(int, input().split()))\n    great = max(array)\n    array = list(reversed(array))\n    ans = 0\n    temp = array[0]\n    for i in array:\n        if i > temp and temp != great:\n            ans += 1\n            temp = i\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = l[-1]\n    c = 0\n    for i in range(n - 1, -1, -1):\n        if l[i] > x:\n            x = l[i]\n            c += 1\n    if x == l[-1]:\n        print(0)\n    else:\n        print(c)", "tt = int(input())\nfor TT in range(tt):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    mx = a[-1]\n    cnt = 0\n    for x in reversed(a):\n        if x > mx:\n            mx = x\n            cnt += 1\n    print(cnt)", "cases = int(input())\nfor i in range(cases):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = 0\n    max = arr[n - 1]\n    for (i, item) in enumerate(reversed(arr)):\n        if item > max:\n            max = item\n            count += 1\n    print(count)", "k = int(input())\nfor _ in range(k):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    max_till_now = arr[-1]\n    ans = 0\n    for i in range(n - 2, -1, -1):\n        if arr[i] <= max_till_now:\n            continue\n        else:\n            ans += 1\n            max_till_now = arr[i]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (x, c) = (l[-1], 0)\n    for i in range(n - 1, -1, -1):\n        if l[i] > x:\n            x = l[i]\n            c += 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (x, c) = (l[-1], 0)\n    for i in reversed(range(n)):\n        if l[i] > x:\n            x = l[i]\n            c += 1\n    print(c)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    last = n - 1\n    k = 0\n    for i in range(n - 1, -1, -1):\n        if a[i] > a[last]:\n            k += 1\n            last = i\n    print(k)", "for _ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    le = ar[-1]\n    c = 0\n    for i in ar[::-1]:\n        if i > le:\n            le = i\n            c += 1\n    print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    count = 0\n    ms = a[-1]\n    for j in range(len(a) - 1, -1, -1):\n        if a[j] > ms:\n            count += 1\n            ms = a[j]\n    print(count)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(j) for j in input().split()]\n    m = a[-1]\n    k = 0\n    for i in range(n - 2, -1, -1):\n        if a[i] > m:\n            k += 1\n            m = a[i]\n    print(k)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    MAX = max(arr)\n    count = 0\n    cur = arr[-1]\n    if cur == MAX:\n        print(count)\n    else:\n        for i in range(n - 2, -1, -1):\n            if arr[i] > cur:\n                cur = arr[i]\n                count += 1\n        print(count)", "t = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    maxE = 0\n    maxV = a[len(a) - 1]\n    for c in range(len(a) - 1, -1, -1):\n        if a[c] > maxV:\n            maxE += 1\n            maxV = a[c]\n    print(maxE)\n    t -= 1", "from sys import stdin, stdout\nimport math\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    cnt = 0\n    mx = a[-1]\n    for i in range(n - 2, -1, -1):\n        if a[i] > mx:\n            mx = a[i]\n            cnt += 1\n    print(cnt)", "for s in [*open(0)][2::2]:\n    a = [*map(int, s.split())]\n    c = ans = 0\n    for x in a[::-1]:\n        if x > c:\n            c = x\n            ans += 1\n    print(ans - 1)", "t = int(input())\nwhile t:\n    n = int(input())\n    mas = list(map(int, input().split()))\n    ans = 0\n    mx = mas[-1]\n    for i in range(n - 2, -1, -1):\n        if mas[i] > mx:\n            mx = mas[i]\n            ans += 1\n    print(ans)\n    t -= 1", "m = int(input())\nfor i in range(m):\n    n = int(input())\n    a = list(map(int, input().split()))\n    max = a[-1]\n    k = 0\n    for i in range(n - 2, -1, -1):\n        if a[i] > max:\n            k += 1\n            max = a[i]\n    print(k)", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    m = l[-1]\n    for i in range(len(l) - 1, -1, -1):\n        if l[i] > m:\n            m = l[i]\n            c += 1\n    print(c)", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    max = a[n - 1]\n    q = 0\n    for i in range(n - 2, -1, -1):\n        if a[i] > max:\n            q += 1\n            max = a[i]\n    print(q)", "def arrayEversion(n, array):\n    m = max(array)\n    max_index = 0\n    for x in reversed(range(n)):\n        if array[x] == m:\n            max_index = x\n            break\n    if m == array[-1]:\n        return 0\n    if m == array[-2]:\n        return 1\n    else:\n        prev = array[-1]\n        c = 0\n        for x in reversed(range(max_index, n - 1)):\n            if array[x] > prev:\n                c += 1\n                prev = array[x]\n        return c\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(arrayEversion(n, l))", "for _ in range(int(input())):\n    input()\n    array = [int(i) for i in input().split()][::-1]\n    (r, el, max_el) = (0, 0, max(array))\n    for i in array:\n        if i == max_el:\n            break\n        elif i > el:\n            el = i\n            r += 1\n    print(r)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))[::-1]\n    c = 0\n    f = arr[0]\n    for i in range(1, n):\n        if arr[i] > f:\n            c += 1\n            f = arr[i]\n    print(c)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    array = list(map(int, input().split()))\n    maxx = max(array)\n    current = array[-1]\n    k = 0\n    for i in range(n - 2, -1, -1):\n        if array[i] > current:\n            k += 1\n            current = array[i]\n            if current == maxx:\n                break\n    print(k)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    max_num = a[-1]\n    for i in range(n - 1, -1, -1):\n        if a[i] > max_num:\n            max_num = a[i]\n            count += 1\n    print(count)", "t = int(input())\nfor t0 in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = a[::-1]\n    x = b[0]\n    c = 0\n    for i in range(1, n):\n        if b[i] > x:\n            x = b[i]\n            c += 1\n    print(c)", "for _ in range(int(input())):\n    input()\n    k = 0\n    t = 0\n    a = list(map(int, input().split()))\n    m = max(a)\n    for x in reversed(a):\n        if x == m:\n            print(k)\n            break\n        elif x > t:\n            k += 1\n            t = x", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    mn = lst[n - 1]\n    rs = 0\n    for i in range(n - 1, -1, -1):\n        if lst[i] > mn:\n            rs += 1\n            mn = lst[i]\n    print(rs)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    last = a[-1]\n    for i in range(n - 1, -1, -1):\n        if a[i] > last:\n            count += 1\n            last = a[i]\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    h = a[n - 1]\n    for i in range(n - 1, -1, -1):\n        if a[i] > h:\n            c += 1\n            h = a[i]\n    print(c)", "t = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    if a[n - 1] == m:\n        print(0)\n    else:\n        k = 0\n        ele = a[n - 1]\n        for i in range(n - 2, -1, -1):\n            if a[i] > ele:\n                k += 1\n                ele = a[i]\n        print(k)\n    t -= 1", "import sys\nimport bisect\ninp = sys.stdin.readline\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\nfor _ in range(int(inp())):\n    n = int(inp())\n    a = [int(i) for i in inp().split()]\n    ans = 0\n    m = a[-1]\n    for i in range(n - 1, -1, -1):\n        if a[i] > m:\n            ans += 1\n            m = a[i]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    l = 0\n    for i in range(n - 1, -1, -1):\n        if l < a[i]:\n            c += 1\n            l = a[i]\n    print(c - 1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    m = max(arr)\n    res = 0\n    t_max = 0\n    for i in range(n - 1, -1, -1):\n        if arr[i] == m:\n            break\n        if arr[i] <= t_max:\n            continue\n        t_max = arr[i]\n        res += 1\n    print(res)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    w = list(map(int, input().split()))[::-1]\n    c = w[0]\n    count = 0\n    for i in range(1, n):\n        if w[i] > c:\n            c = w[i]\n            count += 1\n    print(count)"]