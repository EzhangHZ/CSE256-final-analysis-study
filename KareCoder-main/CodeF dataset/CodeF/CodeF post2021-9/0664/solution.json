["from itertools import *\nfor x in [*open(0)][2::2]:\n    a = [*accumulate([0] + [int(x) for x in x.split()])]\n    print(max(a) - min(a))", "from itertools import *\nfor x in [*open(0)][2::2]:\n    a = [*accumulate([0] + list(map(int, x.split())))]\n    print(max(a) - min(a))", "for x in [*open(0)][2::2]:\n    b = [0]\n    for y in list(map(int, x.split())):\n        b += [b[-1] + y]\n    print(max(b) - min(b))", "for x in [*open(0)][2::2]:\n    b = [0]\n    for y in list(map(int, x.split())):\n        b += [b[-1] + y]\n    print(max(b) - min(b))", "for x in [*open(0)][2::2]:\n    b = [0]\n    for y in list(map(int, x.split())):\n        b += [b[-1] + y]\n    print(max(b) - min(b))", "for m in [*open(0)][2::2]:\n    b = [0]\n    for y in list(map(int, m.split())):\n        b += [b[-1] + y]\n    print(max(b) - min(b))", "for x in [*open(0)][2::2]:\n    b = [0]\n    for y in list(map(int, x.split())):\n        b += [b[-1] + y]\n    print(max(b) - min(b))", "for fT_lk in [*open(0)][2::2]:\n    l_hDw = [0]\n    for k_Upl in list(map(int, fT_lk.split())):\n        l_hDw += [l_hDw[-1] + k_Upl]\n    print(max(l_hDw) - min(l_hDw))", "for x in [*open(0)][2::2]:\n    b = [0]\n    for y in list(map(int, x.split())):\n        b += [b[-1] + y]\n    print(max(b) - min(b))", "import itertools\nT = int(input())\nfor t in range(T):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    ps = list(itertools.accumulate(nums))\n    maxi = max(ps)\n    mini = min(ps)\n    print(abs(max(maxi, 0)) + abs(min(mini, 0)))", "def read_test():\n    test_size = int(input())\n    nums = list(map(int, input().split(' ')))\n    return nums\n\ndef read_input():\n    test_count = int(input())\n    tests = []\n    for _ in range(test_count):\n        tests.append(read_test())\n    return tests\n\ndef solve(test):\n    subseq_plus = 0\n    subseq_minus = 0\n    for num in test:\n        if num > 0:\n            subseq_plus -= min(num, subseq_plus)\n            subseq_minus += num\n        elif num < 0:\n            subseq_minus -= min(-num, subseq_minus)\n            subseq_plus += -num\n    return subseq_plus + subseq_minus\n\ndef main():\n    tests = read_input()\n    for test in tests:\n        print(solve(test))\nmain()", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = [0] * (n + 1)\n    for i in range(n):\n        s[i + 1] = s[i] + a[i]\n    ans = max(s) - min(s)\n    print(ans)\nt = int(input())\nfor i in range(t):\n    solve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = [0] + list(map(int, input().split()))\n    for x in range(n):\n        lst[x + 1] += lst[x]\n    print(max(lst) - min(lst))", "v = int(input())\nfor _ in range(v):\n    p = int(input())\n    d = [0] + list(map(int, input().split()))\n    for j in range(p):\n        d[j + 1] += d[j]\n    print(max(d) - min(d))", "for x in [*open(0)][2::2]:\n    (s, a, b) = (0, 0, 0)\n    for y in list(map(int, x.split())):\n        s += y\n        a = min(a, s)\n        b = max(b, s)\n    print(b - a)", "t = int(input(''))\nfor _ in range(t):\n    n = int(input(''))\n    A = [int(x) for x in input('').split(' ')]\n    smsa = [0] * (n + 1)\n    for i in range(n):\n        smsa[i + 1] = smsa[i] + A[i]\n    print(max(smsa) - min(smsa))", "for _ in range(int(input())):\n    n = int(input())\n    a = [0] + [int(x) for x in input().split()]\n    for i in range(n):\n        a[i + 1] += a[i]\n    print(max(a) - min(a))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (ans1, ans2) = (0, 0)\n    for i in range(n):\n        ans1 += a[i]\n        ans2 -= a[i]\n        if ans1 < 0:\n            ans1 = 0\n        if ans2 < 0:\n            ans2 = 0\n    print(ans1 + ans2)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [0] + list(map(int, input().split()))\n    for i in range(n):\n        a[i + 1] += a[i]\n    print(max(a) - min(a))"]