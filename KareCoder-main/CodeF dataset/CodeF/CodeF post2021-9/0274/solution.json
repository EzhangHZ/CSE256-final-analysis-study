["r = int(input())\nres = []\nfor i in range(r):\n    (a, b) = map(int, input().split())\n    x_1 = input().split()\n    x_max = int(x_1[-1]) - int(x_1[1])\n    x_2 = input().split()\n    x_max = max(int(x_2[-1]) - int(x_2[1]), x_max)\n    y_1 = input().split()\n    y_max = int(y_1[-1]) - int(y_1[1])\n    y_2 = input().split()\n    y_max = max(int(y_2[-1]) - int(y_2[1]), y_max)\n    res.append(max(x_max * b, y_max * a))\nfor i in res:\n    print(i)", "n = int(input())\nresults = []\nfor i in range(n):\n    (w, h) = input().split()\n    (w, h) = (int(w), int(h))\n    lower = input().split()\n    mlower = int(lower[-1]) - int(lower[1])\n    upper = input().split()\n    mupper = int(upper[-1]) - int(upper[1])\n    left = input().split()\n    mleft = int(left[-1]) - int(left[1])\n    right = input().split()\n    mright = int(right[-1]) - int(right[1])\n    results.append(max(h * max(mlower, mupper), w * max(mleft, mright)))\nfor result in results:\n    print(result)", "import sys\ncases = int(sys.stdin.readline())\nfor i in range(cases):\n    (w, h) = map(int, sys.stdin.readline().split())\n    x_1 = list(map(int, sys.stdin.readline().split()))\n    x_2 = list(map(int, sys.stdin.readline().split()))\n    x = max((x_1[-1] - x_1[1]) * h, (x_2[-1] - x_2[1]) * h)\n    y_1 = list(map(int, sys.stdin.readline().split()))\n    y_2 = list(map(int, sys.stdin.readline().split()))\n    y = max((y_1[-1] - y_1[1]) * w, (y_2[-1] - y_2[1]) * w)\n    print(max(x, y))", "t = int(input())\nresult = []\nwhile t:\n    (w, h) = list(map(int, input().split()))\n    x1 = input().split()\n    x2 = input().split()\n    y1 = input().split()\n    y2 = input().split()\n    aire_1 = (int(x1[-1]) - int(x1[1])) * h\n    aire_2 = (int(x2[-1]) - int(x2[1])) * h\n    aire_3 = (int(y1[-1]) - int(y1[1])) * w\n    aire_4 = (int(y2[-1]) - int(y2[1])) * w\n    result.append(max(aire_1, aire_2, aire_3, aire_4))\n    t -= 1\nfor x in result:\n    print(x)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (w, h) = map(int, input().split())\n    x1 = list(map(int, input().split()))\n    x2 = list(map(int, input().split()))\n    y1 = list(map(int, input().split()))\n    y2 = list(map(int, input().split()))\n    (a, b, c, d) = (x1[-1] - x1[1], x2[-1] - x2[1], y1[-1] - y1[1], y2[-1] - y2[1])\n    return max(a * h, b * h, c * w, d * w)\nfor _ in range(int(input())):\n    print(solve())", "import sys\nfrom sys import stdin, stdout\nfrom math import ceil, floor, sqrt, log, log2, log10\nfrom collections import Counter\nint_max = float('inf')\nint_min = -float('inf')\nmod = 10 ** 9 + 7\nANS = []\ninput = stdin.readline\n\ndef solve():\n    pass\nt = int(input())\nfor i in range(t):\n    (w, h) = map(int, input().split())\n    a1 = list(map(int, input().split()))\n    a2 = list(map(int, input().split()))\n    b1 = list(map(int, input().split()))\n    b2 = list(map(int, input().split()))\n    maxx = -1\n    maxx = max(maxx, h * (a1[-1] - a1[1]), h * (a2[-1] - a2[1]))\n    maxx = max(maxx, w * (b1[-1] - b1[1]), w * (b2[-1] - b2[1]))\n    print(maxx)", "import sys\nimport bisect\nimport math\nfrom collections import deque\ninput = lambda : sys.stdin.readline().strip()\nmod = 10 ** 9 + 7\n\ndef solve():\n    (w, h) = map(int, input().split())\n    x1 = list(map(int, input().split()))\n    x2 = list(map(int, input().split()))\n    y1 = list(map(int, input().split()))\n    y2 = list(map(int, input().split()))\n    return max((x1[-1] - x1[1]) * h, (x2[-1] - x2[1]) * h, (y1[-1] - y1[1]) * w, (y2[-1] - y2[1]) * w)\nt = 1\nt = int(input())\nfor _ in range(t):\n    print(solve())", "import heapq\nimport sys\nimport math\nfrom collections import deque\nfrom bisect import bisect_left, bisect_right\nI = sys.stdin.readline\nII = lambda : int(I())\nIN = lambda x: map(int, x.split())\nFN = lambda x: map(float, x.split())\nL = lambda x: list(IN(x))\nM = 1000000007\nP = print\nT = True\nF = False\nfor _ in range(II()):\n    (w, h) = IN(I())\n    y0 = L(I())\n    yh = L(I())\n    x0 = L(I())\n    xw = L(I())\n    a = [w * (x0[-1] - x0[1]), (xw[-1] - xw[1]) * w, h * (yh[-1] - yh[1]), h * (y0[-1] - y0[1])]\n    print(max(a))", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    (w, h) = map(int, stdin.readline().split())\n    y0 = list(map(int, stdin.readline().split()))\n    yh = list(map(int, stdin.readline().split()))\n    x0 = list(map(int, stdin.readline().split()))\n    xw = list(map(int, stdin.readline().split()))\n    a = (y0[-1] - y0[1]) * h\n    b = (yh[-1] - yh[1]) * h\n    c = (x0[-1] - x0[1]) * w\n    d = (xw[-1] - xw[1]) * w\n    print(max(a, b, c, d))", "import sys\nIN = sys.stdin\nOUT = sys.stdout\ntc = int(IN.readline())\nfor ti in range(tc):\n    (w, h) = map(int, IN.readline().strip().split())\n    a1 = tuple(map(int, IN.readline().strip().split()))\n    a2 = tuple(map(int, IN.readline().strip().split()))\n    a3 = tuple(map(int, IN.readline().strip().split()))\n    a4 = tuple(map(int, IN.readline().strip().split()))\n    ans = 0\n    c = (a1[-1] - a1[1]) * h\n    if ans < c:\n        ans = c\n    c = (a2[-1] - a2[1]) * h\n    if ans < c:\n        ans = c\n    c = (a3[-1] - a3[1]) * w\n    if ans < c:\n        ans = c\n    c = (a4[-1] - a4[1]) * w\n    if ans < c:\n        ans = c\n    print(ans)", "import sys\nfrom collections import deque\n\ndef g(l, n, f):\n    a = 0\n    x = n - 1\n    while a <= x:\n        m = a + (x - a) // 2\n        if l[m] == f:\n            return m\n        elif l[m] > f:\n            x = m - 1\n        else:\n            a = m + 1\n    return None\n\ndef f(l):\n    return l[-1] - l[1]\nfor _ in range(int(sys.stdin.readline())):\n    (w, h) = map(int, sys.stdin.readline().split())\n    l1 = list(map(int, sys.stdin.readline().split()))\n    l2 = list(map(int, sys.stdin.readline().split()))\n    l3 = list(map(int, sys.stdin.readline().split()))\n    l4 = list(map(int, sys.stdin.readline().split()))\n    l = [h * f(l1), h * f(l2), w * f(l3), w * f(l4)]\n    print(max(l))", "import sys\n\ndef main():\n    input = sys.stdin.readline\n    print = sys.stdout.write\n    t = int(input())\n    for j in [0] * t:\n        (w, h) = map(int, input().split())\n        nums1 = list(map(int, input().split()))\n        nums2 = list(map(int, input().split()))\n        nums3 = list(map(int, input().split()))\n        nums4 = list(map(int, input().split()))\n        sidex = max(nums1[-1] - nums1[1], nums2[-1] - nums2[1])\n        sidey = max(nums3[-1] - nums3[1], nums4[-1] - nums4[1])\n        print(str(max(sidex * h, sidey * w)) + '\\n')\nmain()", "t = int(input())\narea = list()\nfor i in range(t):\n    aux = input().split()\n    w = int(aux[0])\n    h = int(aux[1])\n    aux = input().split()\n    b1 = int(aux[-1]) - int(aux[1])\n    aux = input().split()\n    b2 = int(aux[-1]) - int(aux[1])\n    aux = input().split()\n    b3 = int(aux[-1]) - int(aux[1])\n    aux = input().split()\n    b4 = int(aux[-1]) - int(aux[1])\n    area.append(max(b1 * h, b2 * h, b3 * w, b4 * w))\nfor a in area:\n    print(a)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (w, h) = map(int, input().split())\n    x1 = list(map(int, input().split()))\n    x2 = list(map(int, input().split()))\n    y1 = list(map(int, input().split()))\n    y2 = list(map(int, input().split()))\n    print(max(max(x1[-1] - x1[1], x2[-1] - x2[1]) * h, max(y1[-1] - y1[1], y2[-1] - y2[1]) * w))", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    (w, h) = map(int, input().split())\n    left = [int(i) for i in input().split()]\n    right = [int(i) for i in input().split()]\n    top = [int(i) for i in input().split()]\n    bot = [int(i) for i in input().split()]\n    max_left = (left[-1] - left[1]) * h\n    max_right = (right[-1] - right[1]) * h\n    max_top = (top[-1] - top[1]) * w\n    max_bot = (bot[-1] - bot[1]) * w\n    print(max(max_left, max_right, max_top, max_bot))", "import sys\ninput = sys.stdin.readline\nT = int(input())\nfor t in range(T):\n    (w, h) = map(int, input().strip().split())\n    xo = list(map(int, input().strip().split()))\n    xh = list(map(int, input().strip().split()))\n    oy = list(map(int, input().strip().split()))\n    wy = list(map(int, input().strip().split()))\n    ans = 0\n    ans = max(ans, (xo[xo[0]] - xo[1]) * h)\n    ans = max(ans, (xh[xh[0]] - xh[1]) * h)\n    ans = max(ans, (oy[oy[0]] - oy[1]) * w)\n    ans = max(ans, (wy[wy[0]] - wy[1]) * w)\n    print(ans)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nfrom collections import Counter\nt = inp()\nfor _ in range(t):\n    (w, h) = invr()\n    A = inlt()\n    B = inlt()\n    C = inlt()\n    D = inlt()\n    print(max(max(A[-1] - A[1], B[-1] - B[1]) * h, max(C[-1] - C[1], D[-1] - D[1]) * w))", "from sys import stdin, stdout\nfor _ in range(int(stdin.readline())):\n    (w, h) = map(int, stdin.readline().split())\n    h1 = list(map(int, stdin.readline().split()))\n    h2 = list(map(int, stdin.readline().split()))\n    v1 = list(map(int, stdin.readline().split()))\n    v2 = list(map(int, stdin.readline().split()))\n    h1[1:].sort()\n    h2[1:].sort()\n    v1[1:].sort()\n    v2[1:].sort()\n    print(max(h * (h1[-1] - h1[1]), h * (h2[-1] - h2[1]), w * (v1[-1] - v1[1]), w * (v2[-1] - v2[1])))", "import sys\ninput = lambda : sys.stdin.readline().rstrip('\\r\\n')\ninp = lambda : list(map(int, sys.stdin.readline().rstrip('\\r\\n').split()))\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    a = inp()\n    b = inp()\n    c = inp()\n    d = inp()\n    print(max((a[-1] - a[1]) * y, (b[-1] - b[1]) * y, (c[-1] - c[1]) * x, (d[-1] - d[1]) * x))", "import sys\nimport math\nfrom bisect import bisect_right as br\nfrom collections import deque\nfrom itertools import combinations as cb\n\ndef int_arr():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef str_arr():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef input():\n    return sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    (w, h) = int_arr()\n    x1 = int_arr()\n    x2 = int_arr()\n    y1 = int_arr()\n    y2 = int_arr()\n    ans = max((x1[-1] - x1[1]) * h, (x2[-1] - x2[1]) * h, (y2[-1] - y2[1]) * w, (y1[-1] - y1[1]) * w)\n    print(ans)", "import sys\n\ndef solve():\n    T = int(sys.stdin.readline().rstrip())\n    for _ in range(T):\n        (w, h) = list(map(int, sys.stdin.readline().rstrip().split(' ')))\n        widths = []\n        (_, *X) = list(map(int, sys.stdin.readline().rstrip().split(' ')))\n        widths.append(X[len(X) - 1] - X[0])\n        (_, *X) = list(map(int, sys.stdin.readline().rstrip().split(' ')))\n        widths.append(X[len(X) - 1] - X[0])\n        heights = []\n        (_, *Y) = list(map(int, sys.stdin.readline().rstrip().split(' ')))\n        heights.append(Y[len(Y) - 1] - Y[0])\n        (_, *Y) = list(map(int, sys.stdin.readline().rstrip().split(' ')))\n        heights.append(Y[len(Y) - 1] - Y[0])\n        print(max(widths[0] * h, widths[1] * h, heights[0] * w, heights[1] * w))\nsolve()", "import sys\ninput = sys.stdin.readline\nM = 1000000007\n\ndef solve():\n    (w, h) = map(int, input().split())\n    (_, *br) = list(map(int, input().split()))\n    br.sort()\n    (_, *tr) = list(map(int, input().split()))\n    tr.sort()\n    (_, *rc) = list(map(int, input().split()))\n    rc.sort()\n    (_, *lc) = list(map(int, input().split()))\n    lc.sort()\n    return max(max(br[-1] - br[0], tr[-1] - tr[0]) * h, max(rc[-1] - rc[0], lc[-1] - lc[0]) * w)\nfor _ in range(int(input())):\n    print(solve())", "t = int(input())\nstr_sets = []\nfor _ in range(t):\n    a = [input() for _ in range(5)]\n    str_sets.append(a)\n\ndef bigest_w(str_set):\n    (_, a, *_, b) = str_set.split()\n    return int(b) - int(a)\nfor str_set in str_sets:\n    (h, w) = map(int, str_set[0].split())\n    each_w = (bigest_w(x) for x in str_set[1:])\n    areas = (s * l for (s, l) in zip([w, w, h, h], each_w))\n    print(max(areas))", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef inlt_s():\n    return list(input().strip())\nfrom collections import defaultdict\nimport copy\nimport math\n\nclass Solution:\n\n    def solve(self, inp, w, h):\n        (A, B, C, D) = inp\n        base1 = int(A[-1]) - int(A[1])\n        height1 = h\n        base2 = int(B[-1]) - int(B[1])\n        height2 = h\n        base3 = int(C[-1]) - int(C[1])\n        height3 = w\n        base4 = int(D[-1]) - int(D[1])\n        height4 = w\n        return max(base1 * height1, base2 * height2, base3 * height3, base4 * height4)\nt = inp()\nOB = Solution()\nfor j in range(t):\n    (w, h) = invr()\n    inp = []\n    for i in range(4):\n        lst = inlt()\n        inp.append(lst)\n    sol = OB.solve(inp, w, h)\n    print(sol)", "from collections import Counter\nfrom math import ceil, floor, log, gcd\nimport bisect as bs\nimport sys\ninput = sys.stdin.readline\ninp_lis = lambda : list(map(int, input().split()))\ninp_multi = lambda : map(int, input().split())\ninp_int = lambda : int(input().strip())\nfor _ in range(int(input().strip())):\n    (w, h) = inp_multi()\n    l = []\n    for q in range(4):\n        t = inp_lis()\n        li = t[1:]\n        li.sort()\n        if q < 2:\n            h1 = h\n        else:\n            h1 = w\n        l.append((li[-1] - li[0]) * h1)\n    print(max(l))", "import heapq\nfrom collections import Counter\nimport math\nimport sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef inis():\n    return input().split()\nfor _ in range(inp()):\n    (w, h) = invr()\n    mx = 0\n    for i in range(4):\n        x = inlt()\n        x = x[1:]\n        mx = max(mx, (x[-1] - x[0]) * (h if i < 2 else w))\n    print(mx)", "ans = []\nfor _ in range(int(input())):\n    (w, h) = map(int, input().split())\n    hor1 = list(map(int, input().split()))\n    hor2 = list(map(int, input().split()))\n    ver1 = list(map(int, input().split()))\n    ver2 = list(map(int, input().split()))\n    ans.append(max(w * max(ver1[-1] - ver1[1], ver2[-1] - ver2[1]), h * max(hor1[-1] - hor1[1], hor2[-1] - hor2[1])))\nprint(*ans, sep='\\n')", "testNum = int(input())\ni = 0\nansArray = []\nwhile i < testNum:\n    incord = input().split()\n    cord = list(map(int, incord))\n    x_1 = list(map(int, input().split()))\n    x_2 = list(map(int, input().split()))\n    y_1 = list(map(int, input().split()))\n    y_2 = list(map(int, input().split()))\n    a = (x_1[x_1[0]] - x_1[1]) * cord[1]\n    b = (x_2[x_2[0]] - x_2[1]) * cord[1]\n    c = (y_1[y_1[0]] - y_1[1]) * cord[0]\n    d = (y_2[y_2[0]] - y_2[1]) * cord[0]\n    ansArray.append(max(a, b, c, d))\n    i += 1\nfor x in ansArray:\n    print(x)", "t = int(input())\nres = []\nfor j in range(t):\n    a = list(map(int, input().split()))\n    w = a[0]\n    h = a[1]\n    b = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    e = list(map(int, input().split()))\n    bb = (b[-1] - b[1]) * h\n    cc = (c[-1] - c[1]) * h\n    dd = (d[-1] - d[1]) * w\n    ee = (e[-1] - e[1]) * w\n    r = max(bb, cc, dd, ee)\n    res.append(r)\nfor i in range(len(res)):\n    print(res[i])", "import sys\ninput = sys.stdin.readline\n\ndef get_line():\n    array = list(map(int, input().split()))\n    array.pop(0)\n    return array\nfor _ in range(int(input())):\n    (w, h) = map(int, input().split())\n    horizontal_1 = get_line()\n    horizontal_2 = get_line()\n    vertical_1 = get_line()\n    vertical_2 = get_line()\n    horizontal_area_1 = (max(horizontal_1) - min(horizontal_1)) * h\n    horizontal_area_2 = (max(horizontal_2) - min(horizontal_2)) * h\n    vertical_area_1 = (max(vertical_1) - min(vertical_1)) * w\n    vertical_area_2 = (max(vertical_2) - min(vertical_2)) * w\n    print(max(horizontal_area_1, horizontal_area_2, vertical_area_1, vertical_area_2))", "t = int(input())\nresult = []\nwhile t:\n    (w, h) = list(map(int, input().split()))\n    x1 = list(map(int, input().split()))[1:]\n    x2 = list(map(int, input().split()))[1:]\n    y1 = list(map(int, input().split()))[1:]\n    y2 = list(map(int, input().split()))[1:]\n    aire_1 = (x1[-1] - x1[0]) * h\n    aire_2 = (x2[-1] - x2[0]) * h\n    aire_3 = (y1[-1] - y1[0]) * w\n    aire_4 = (y2[-1] - y2[0]) * w\n    result.append(max(aire_1, aire_2, aire_3, aire_4))\n    t -= 1\nfor x in result:\n    print(x)", "import math\nt = int(input())\nfor i in range(t):\n    n = input().split(' ')\n    (w, h) = (int(n[0]), int(n[1]))\n    x_o = input().split(' ')\n    x_h = input().split(' ')\n    y_o = input().split(' ')\n    y_w = input().split(' ')\n    abs1 = int(x_o[-1]) - int(x_o[1])\n    abs2 = int(x_h[-1]) - int(x_h[1])\n    abs3 = int(y_w[-1]) - int(y_w[1])\n    abs4 = int(y_o[-1]) - int(y_o[1])\n    area = max(abs1 * h, abs2 * h, abs3 * w, abs4 * w)\n    print(area)", "t = int(input())\nfor _ in range(t):\n    (w, h) = map(int, input().split())\n    s1 = list(map(int, input().split()))\n    s2 = list(map(int, input().split()))\n    stol1 = list(map(int, input().split()))\n    stol2 = list(map(int, input().split()))\n    m = max((s1[-1] - s1[1]) * h, (s2[-1] - s2[1]) * h, (stol1[-1] - stol1[1]) * w, (stol2[-1] - stol2[1]) * w)\n    print(m)", "t = int(input())\nfor i in range(t):\n    (w, h) = input().split()\n    (w, h) = (int(w), int(h))\n    max_res = 0\n    x1 = input().split()\n    x2 = input().split()\n    y1 = input().split()\n    y2 = input().split()\n    base1 = int(x1[len(x1) - 1]) - int(x1[1])\n    base2 = int(x2[len(x2) - 1]) - int(x2[1])\n    height1 = int(y1[len(y1) - 1]) - int(y1[1])\n    height2 = int(y2[len(y2) - 1]) - int(y2[1])\n    print(max(h * max(base1, base2), w * max(height1, height2)))", "def find(w, h, hdown, hup, vleft, vright):\n    x = max(int(hdown[-1]) - int(hdown[1]), int(hup[-1]) - int(hup[1]))\n    y = max(int(vleft[-1]) - int(vleft[1]), int(vright[-1]) - int(vright[1]))\n    return max(x * h, y * w)\ncases = int(input())\nfor _ in range(cases):\n    line = input().split()\n    (w, h) = (int(line[0]), int(line[1]))\n    hdown = input().split()\n    hup = input().split()\n    vleft = input().split()\n    vright = input().split()\n    print(find(w, h, hdown, hup, vleft, vright))", "def area(b, h):\n    area = 0.5 * b * h\n    return area\n\ndef greater(a, b):\n    if a > b:\n        return a\n    else:\n        return b\nt = int(input())\nfl = []\nfor i in range(0, t):\n    (w, h) = map(int, input().split())\n    x1 = list(map(int, input().split()))\n    x2 = list(map(int, input().split()))\n    y1 = list(map(int, input().split()))\n    y2 = list(map(int, input().split()))\n    dx1 = x1[x1[0]] - x1[1]\n    dx2 = x2[x2[0]] - x2[1]\n    dy1 = y1[y1[0]] - y1[1]\n    dy2 = y2[y2[0]] - y2[1]\n    base = greater(dx1, dx2)\n    xarea = area(base, h)\n    height = greater(dy1, dy2)\n    yarea = area(w, height)\n    farea = greater(xarea, yarea)\n    fl.append(farea * 2)\nfor i in fl:\n    print(int(i))", "t = int(input())\nfor i in range(t):\n    s1 = input().split()\n    s2 = input().split()\n    s3 = input().split()\n    s4 = input().split()\n    s5 = input().split()\n    w = int(s1[0])\n    h = int(s1[1])\n    xmax1 = int(s2[-1])\n    xmin1 = int(s2[1])\n    xmax2 = int(s3[-1])\n    xmin2 = int(s3[1])\n    ymax1 = int(s4[-1])\n    ymin1 = int(s4[1])\n    ymax2 = int(s5[-1])\n    ymin2 = int(s5[1])\n    x = max(xmax1 - xmin1, xmax2 - xmin2)\n    y = max(ymax1 - ymin1, ymax2 - ymin2)\n    ans = max(x * h, y * w)\n    print(ans)", "for _ in range(int(input())):\n    wh = input().split()\n    w = wh[0]\n    h = wh[1]\n    a = input().split()\n    b = input().split()\n    c = input().split()\n    d = input().split()\n    print(max((int(a[-1]) - int(a[1])) * int(h), (int(b[-1]) - int(b[1])) * int(h), (int(c[-1]) - int(c[1])) * int(w), (int(d[-1]) - int(d[1])) * int(w)))", "t = int(input())\nfor k in range(t):\n    s = input().split(' ')\n    (w, h) = list(map(int, s))\n    h1 = input().split(' ')\n    h2 = input().split(' ')\n    v1 = input().split(' ')\n    v2 = input().split(' ')\n    baseh = max(int(h1[-1]) - int(h1[1]), int(h2[-1]) - int(h2[1]))\n    basev = max(int(v1[-1]) - int(v1[1]), int(v2[-1]) - int(v2[1]))\n    print(max(baseh * h, basev * w))", "n = int(input())\nfor i in range(n):\n    L = input().split(' ')\n    w = int(L[0])\n    h = int(L[1])\n    L = input().split(' ')\n    s1 = (int(L[-1]) - int(L[1])) * h\n    L = input().split(' ')\n    s2 = (int(L[-1]) - int(L[1])) * h\n    L = input().split(' ')\n    s3 = (int(L[-1]) - int(L[1])) * w\n    L = input().split(' ')\n    s4 = (int(L[-1]) - int(L[1])) * w\n    print(max(s1, s2, s3, s4))", "n = int(input())\nkiller = []\nfor i in range(n):\n    mylist1 = list(map(int, input().split()))\n    mylist2 = list(map(int, input().split()))\n    mylist3 = list(map(int, input().split()))\n    mylist4 = list(map(int, input().split()))\n    mylist5 = list(map(int, input().split()))\n    mylist2.pop(0)\n    mylist3.pop(0)\n    mylist4.pop(0)\n    mylist5.pop(0)\n    area1 = (max(mylist2) - min(mylist2)) * mylist1[1]\n    area2 = (max(mylist3) - min(mylist3)) * mylist1[1]\n    area3 = (max(mylist4) - min(mylist4)) * mylist1[0]\n    area4 = (max(mylist5) - min(mylist5)) * mylist1[0]\n    killer.append(max(area1, area2, area3, area4))\nprint(*killer, sep='\\n')", "for _ in range(int(input())):\n    mx = 0\n    (w, h) = list(map(int, input().split()))\n    for i in range(4):\n        if i == 2:\n            h = w\n        ar = input().split()\n        mx = max(mx, (int(ar[-1]) - int(ar[1])) * h)\n    print(mx)", "def main():\n    (w, h) = map(int, input().split())\n    ans = 0\n    arr = list(map(int, input().split()))\n    if (arr[-1] - arr[1]) * h > ans:\n        ans = (arr[-1] - arr[1]) * h\n    arr = list(map(int, input().split()))\n    if (arr[-1] - arr[1]) * h > ans:\n        ans = (arr[-1] - arr[1]) * h\n    arr = list(map(int, input().split()))\n    if (arr[-1] - arr[1]) * w > ans:\n        ans = (arr[-1] - arr[1]) * w\n    arr = list(map(int, input().split()))\n    if (arr[-1] - arr[1]) * w > ans:\n        ans = (arr[-1] - arr[1]) * w\n    return ans\nfor _ in range(int(input())):\n    print(main())", "for _ in range(int(input())):\n    (w, h) = map(int, input().strip().split())\n    (_, *xbs) = map(int, input().strip().split())\n    (_, *xus) = map(int, input().strip().split())\n    (_, *yls) = map(int, input().strip().split())\n    (_, *yrs) = map(int, input().strip().split())\n    ars = [abs(xbs[0] - xbs[-1]) * h, abs(xus[0] - xus[-1]) * h, abs(yls[0] - yls[-1]) * w, abs(yrs[0] - yrs[-1]) * w]\n    print(max(ars))", "t = int(input())\nl = [0] * t\nfor i in range(t):\n    (w, h) = map(int, input().split())\n    (h1, h2, v1, v2) = [sorted(list(map(int, input().split()))[1:]) for j in range(4)]\n    l[i] = max((v1[-1] - v1[0]) * w, (v2[-1] - v2[0]) * w, (h1[-1] - h1[0]) * h, (h2[-1] - h2[0]) * h)\nfor i in l:\n    print(i)", "test_cases = int(input())\nfor i in range(0, test_cases):\n    (w, h) = input().split()\n    w = int(w)\n    h = int(h)\n    x0 = input().split()\n    x1 = input().split()\n    base = int(x0[int(x0[0])]) - int(x0[1])\n    top = int(x1[int(x1[0])]) - int(x1[1])\n    temp1 = max(base, top) * h\n    y0 = input().split()\n    y1 = input().split()\n    base = int(y0[int(y0[0])]) - int(y0[1])\n    top = int(y1[int(y1[0])]) - int(y1[1])\n    temp2 = max(base, top) * w\n    print(max(temp1, temp2))", "t = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    res = max(max(a[-1] - a[1], b[-1] - b[1]) * y, max(c[-1] - c[1], d[-1] - d[1]) * x)\n    print(res)", "t = int(input())\nfor test_case in range(t):\n    (w, h) = map(int, input().split())\n    x_firstLine = list(map(int, input().split()))\n    x_secondLine = list(map(int, input().split()))\n    y_firstLine = list(map(int, input().split()))\n    y_secondLine = list(map(int, input().split()))\n    x_firstLine_distance = x_firstLine[-1] - x_firstLine[1]\n    x_secondLine_distance = x_secondLine[-1] - x_secondLine[1]\n    y_firstLine_distance = y_firstLine[-1] - y_firstLine[1]\n    y_secondLine_distance = y_secondLine[-1] - y_secondLine[1]\n    if x_firstLine_distance > x_secondLine_distance:\n        highest_distance_x = x_firstLine_distance\n    else:\n        highest_distance_x = x_secondLine_distance\n    if y_firstLine_distance > y_secondLine_distance:\n        highest_distance_y = y_firstLine_distance\n    else:\n        highest_distance_y = y_secondLine_distance\n    Area_1 = highest_distance_x * h\n    Area_2 = highest_distance_y * w\n    if Area_1 > Area_2:\n        print(Area_1)\n    else:\n        print(Area_2)", "for _ in range(int(input())):\n    (w, h) = map(int, input().split())\n    xa = list(map(int, input().split()))\n    xb = list(map(int, input().split()))\n    ya = list(map(int, input().split()))\n    yb = list(map(int, input().split()))\n    choices = [(xa[-1] - xa[1]) * h, (xb[-1] - xb[1]) * h, (ya[-1] - ya[1]) * w, (yb[-1] - yb[1]) * w]\n    res = max(choices)\n    print(res)", "def solve(h, w, l1, l2, l3, l4):\n    a1 = (l1[-1] - l1[1]) * h\n    a2 = (l2[-1] - l2[1]) * h\n    a3 = (l3[-1] - l3[1]) * w\n    a4 = (l4[-1] - l4[1]) * w\n    return max(a1, a2, a3, a4)\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        (w, h) = map(int, input().split())\n        l1 = list(map(int, input().split()))\n        l2 = list(map(int, input().split()))\n        l3 = list(map(int, input().split()))\n        l4 = list(map(int, input().split()))\n        print(solve(h, w, l1, l2, l3, l4))\nmain()", "for _ in range(int(input())):\n    mx = 0\n    (w, h) = list(map(int, input().split()))\n    for i in range(4):\n        if i == 2:\n            h = w\n        ar = input().split()\n        mx = max(mx, (int(ar[-1]) - int(ar[1])) * h)\n    print(mx)", "for iii in range(int(input())):\n    (x, y) = map(int, input().split())\n    q1 = list(map(int, input().split()))\n    q2 = list(map(int, input().split()))\n    q3 = list(map(int, input().split()))\n    q4 = list(map(int, input().split()))\n    w1 = (q1[1] - q1[-1]) * y * -1\n    w2 = (q2[1] - q2[-1]) * y * -1\n    w3 = (q3[1] - q3[-1]) * x * -1\n    w4 = (q4[1] - q4[-1]) * x * -1\n    print(max(w1, w2, w3, w4))", "for t in range(int(input())):\n    (w, h) = map(int, input().split())\n    ans = 0\n    for i in range(4):\n        arr = list(map(int, input().split()))[1:]\n        ans = max(ans, (arr[-1] - arr[0]) * (h if i < 2 else w))\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    print(max((a[-1] - a[1]) * m, (b[-1] - b[1]) * m, (c[-1] - c[1]) * n, (d[-1] - d[1]) * n))", "import math\n\ndef process(w, h, bottom, top, left, right):\n    best = 0\n    width = bottom[-1] - bottom[0]\n    area = width * h\n    best = max(best, area)\n    width = -top[0] + top[-1]\n    area = width * h\n    best = max(best, area)\n    width = -left[0] + left[-1]\n    area = width * w\n    best = max(best, area)\n    width = -right[0] + right[-1]\n    area = width * w\n    best = max(best, area)\n    return best\n\ndef test():\n    for _ in range(int(input())):\n        (w, h) = map(int, input().split())\n        bottom = list(map(int, input().split()))[1:]\n        top = list(map(int, input().split()))[1:]\n        left = list(map(int, input().split()))[1:]\n        right = list(map(int, input().split()))[1:]\n        result = process(w, h, bottom, top, left, right)\n        print(result)\ntest()", "t = int(input())\nfor _ in range(t):\n    (w, h) = map(int, input().split())\n    top = list(map(int, input().split()))\n    bottom = list(map(int, input().split()))\n    left = list(map(int, input().split()))\n    right = list(map(int, input().split()))\n    ans = max((top[-1] - top[1]) * h, (bottom[-1] - bottom[1]) * h, (left[-1] - left[1]) * w, (right[-1] - right[1]) * w)\n    print(ans)", "for k in range(int(input())):\n    (w, h) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    ans1 = (a[-1] - a[1]) * h\n    ans2 = (b[-1] - b[1]) * h\n    ans3 = (c[-1] - c[1]) * w\n    ans4 = (d[-1] - d[1]) * w\n    ans = max(ans1, ans2, ans3, ans4)\n    print(ans)", "for i in range(int(input())):\n    (x, y) = tuple(map(int, input().split()))\n    xl = list(map(int, input().split()))\n    xu = list(map(int, input().split()))\n    yl = list(map(int, input().split()))\n    yu = list(map(int, input().split()))\n    a = (xl[-1] - xl[1]) * y\n    b = (xu[-1] - xu[1]) * y\n    c = (yl[-1] - yl[1]) * x\n    d = (yu[-1] - yu[1]) * x\n    print(max(a, b, c, d))", "t = int(input())\nfor i in range(t):\n    (h, w) = [int(x) for x in input().split()]\n    hor1 = [int(x) for x in input().split()]\n    hor2 = [int(x) for x in input().split()]\n    hor1 = hor1[1:]\n    hor2 = hor2[1:]\n    ver1 = [int(x) for x in input().split()]\n    ver2 = [int(x) for x in input().split()]\n    ver1 = ver1[1:]\n    ver2 = ver2[1:]\n    hors = []\n    vers = []\n    hors.append(hor1[len(hor1) - 1] - hor1[0])\n    hors.append(hor2[len(hor2) - 1] - hor2[0])\n    vers.append(ver1[len(ver1) - 1] - ver1[0])\n    vers.append(ver2[len(ver2) - 1] - ver2[0])\n    area = max(h * max(vers), w * max(hors))\n    print(area)", "t = int(input())\nfor k in range(t):\n    (x, y) = map(int, input().split())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    l3 = list(map(int, input().split()))\n    l4 = list(map(int, input().split()))\n    m1 = (l1[-1] - l1[1]) * y\n    m2 = (l2[-1] - l2[1]) * y\n    m3 = (l3[-1] - l3[1]) * x\n    m4 = (l4[-1] - l4[1]) * x\n    res = max([m1, m2, m3, m4])\n    print(res)", "for t in range(int(input())):\n    (w, h) = map(int, input().split())\n    v1 = list(map(int, input().split()))\n    v2 = list(map(int, input().split()))\n    h1 = list(map(int, input().split()))\n    h2 = list(map(int, input().split()))\n    values = [(v1[-1] - v1[1]) * h, (v2[-1] - v2[1]) * h, (h1[-1] - h1[1]) * w, (h2[-1] - h2[1]) * w]\n    print(max(values))", "for _ in range(int(input())):\n    (w, h) = map(int, input().split())\n    h1 = list(map(int, input().split()))\n    h2 = list(map(int, input().split()))\n    v1 = list(map(int, input().split()))\n    v2 = list(map(int, input().split()))\n    a1 = h1[-1] - h1[1]\n    a2 = h2[-1] - h2[1]\n    a3 = v1[-1] - v1[1]\n    a4 = v2[-1] - v2[1]\n    l1 = max(a1, a2) * h\n    l2 = max(a3, a4) * w\n    print(max(l1, l2))", "for _ in range(0, int(input())):\n    (a, b) = map(int, input().split())\n    c = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    e = list(map(int, input().split()))\n    f = list(map(int, input().split()))\n    ca = c[len(c) - 1] - c[1]\n    da = d[len(d) - 1] - d[1]\n    ea = e[len(e) - 1] - e[1]\n    fa = f[len(f) - 1] - f[1]\n    print(max(ea * a, fa * a, da * b, ca * b))", "t = int(input())\nfor _ in range(t):\n    (w, h) = [int(x) for x in input().split()]\n    x1s = [int(x) for x in input().split()][1:]\n    x2s = [int(x) for x in input().split()][1:]\n    y1s = [int(x) for x in input().split()][1:]\n    y2s = [int(x) for x in input().split()][1:]\n    maxX1 = (x1s[-1] - x1s[0]) * h\n    maxX2 = (x2s[-1] - x2s[0]) * h\n    maxY1 = (y1s[-1] - y1s[0]) * w\n    maxY2 = (y2s[-1] - y2s[0]) * w\n    print(max(maxX1, maxX2, maxY1, maxY2))", "for _ in range(int(input())):\n    mx = 0\n    (w, h) = list(map(int, input().split()))\n    for i in range(4):\n        if i == 2:\n            h = w\n        ar = input().split()\n        mx = max(mx, (int(ar[-1]) - int(ar[1])) * h)\n    print(mx)", "T = int(input())\nfor i in range(T):\n    [w, h] = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    max = (a[-1] - a[1]) * h\n    a = list(map(int, input().split()))\n    temp = (a[-1] - a[1]) * h\n    if temp > max:\n        max = temp\n    a = list(map(int, input().split()))\n    temp = (a[-1] - a[1]) * w\n    if temp > max:\n        max = temp\n    a = list(map(int, input().split()))\n    temp = (a[-1] - a[1]) * w\n    if temp > max:\n        max = temp\n    print(max)", "for _ in range(int(input())):\n    (w, h) = map(int, input().split())\n    ans = 0\n    for i in range(4):\n        a = [int(x) for x in input().split()][1:]\n        ans = max(ans, (a[-1] - a[0]) * (h if i < 2 else w))\n    print(ans)", "for _ in range(int(input())):\n    (w, h) = map(int, input().split())\n    ans = 0\n    for i in range(4):\n        a = [int(x) for x in input().split()][1:]\n        ans = max(ans, (a[-1] - a[0]) * (h if i < 2 else w))\n    print(ans)", "for _ in range(int(input())):\n    (w, h) = map(int, input().split())\n    ans = 0\n    for i in range(4):\n        a = [int(x) for x in input().split()][1:]\n        ans = max(ans, (a[-1] - a[0]) * (h if i < 2 else w))\n    print(ans)", "def solve():\n    (w, h) = map(int, input().split())\n    h1 = list(map(int, input().split()))\n    h2 = list(map(int, input().split()))\n    v1 = list(map(int, input().split()))\n    v2 = list(map(int, input().split()))\n    maxh1 = (h1[h1[0]] - h1[1]) * h\n    maxh2 = (h2[h2[0]] - h2[1]) * h\n    maxv1 = (v1[v1[0]] - v1[1]) * w\n    maxv2 = (v2[v2[0]] - v2[1]) * w\n    print(max(maxh1, maxh2, maxv1, maxv2))\ncases = int(input())\nfor i in range(cases):\n    solve()", "t = int(input())\nwhile t:\n    t -= 1\n    (w, h) = map(int, input().split())\n    h1 = list(map(int, input().split()))\n    h2 = list(map(int, input().split()))\n    v1 = list(map(int, input().split()))\n    v2 = list(map(int, input().split()))\n    mh = h * max(h1[-1] - h1[1], h2[-1] - h2[1])\n    mv = w * max(v1[-1] - v1[1], v2[-1] - v2[1])\n    print(max(mh, mv))", "for _ in range(int(input())):\n    sides = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    d = list(map(int, input().split()))\n    area = max((a[-1] - a[1]) * sides[1], (b[-1] - b[1]) * sides[1], (c[-1] - c[1]) * sides[0], (d[-1] - d[1]) * sides[0])\n    print(area)", "def solve_test(w, h, points_b, points_t, points_l, points_r):\n\n    def get_val(points, height):\n        return abs(points[0] - points[-1]) * height\n    largest = max(get_val(points_b, h), get_val(points_t, h), get_val(points_l, w), get_val(points_r, w))\n    print(largest)\nmode = 'o'\nif mode == 'file':\n    f = open('input.txt', 'r')\n\n    def read():\n        return f.readline()\nelse:\n    read = input\ntestcases = int(read())\nfor _ in range(testcases):\n    (w, h) = tuple([int(inp) for inp in read().split(' ')])\n    points_b = [int(p) for p in read().split(' ')[1:]]\n    points_t = [int(p) for p in read().split(' ')[1:]]\n    points_l = [int(p) for p in read().split(' ')[1:]]\n    points_r = [int(p) for p in read().split(' ')[1:]]\n    solve_test(w, h, points_b, points_t, points_l, points_r)\nif mode == 'file':\n    f.close()", "for _ in range(int(input())):\n    (w, h) = map(int, input().split())\n    ans = 0\n    for i in range(4):\n        a = [int(x) for x in input().split()][1:]\n        ans = max(ans, (a[-1] - a[0]) * (h if i < 2 else w))\n    print(ans)", "for _ in range(int(input())):\n    (w, h) = map(int, input().split())\n    ans = 0\n    for i in range(4):\n        a = [int(x) for x in input().split()][1:]\n        ans = max(ans, (a[-1] - a[0]) * (h if i < 2 else w))\n    print(ans)", "for _ in range(int(input())):\n    (w, h) = map(int, input().split())\n    ans = 0\n    for i in range(4):\n        a = [int(x) for x in input().split()][1:]\n        ans = max(ans, (a[-1] - a[0]) * (h if i < 2 else w))\n    print(ans)", "for _ in range(int(input())):\n    (w, h) = map(int, input().split())\n    ans = 0\n    for i in range(4):\n        a = [int(x) for x in input().split()][1:]\n        ans = max(ans, (a[-1] - a[0]) * (h if i < 2 else w))\n    print(ans)", "for _ in range(int(input())):\n    (w, h) = map(int, input().split())\n    ans = 0\n    for i in range(4):\n        a = [int(x) for x in input().split()][1:]\n        ans = max(ans, (a[-1] - a[0]) * (h if i < 2 else w))\n    print(ans)", "for _ in range(int(input())):\n    (w, h) = map(int, input().split())\n    ans = 0\n    for i in range(4):\n        a = [int(x) for x in input().split()][1:]\n        ans = max(ans, (a[-1] - a[0]) * (h if i < 2 else w))\n    print(ans)", "for _ in range(int(input())):\n    (w, h) = map(int, input().split())\n    ans = 0\n    for i in range(4):\n        a = [int(x) for x in input().split()][1:]\n        ans = max(ans, (a[-1] - a[0]) * (h if i < 2 else w))\n    print(ans)", "a = int(input())\nfor x in range(a):\n    (b, c) = map(int, input().split())\n    e = list(map(int, input().split()))\n    f = list(map(int, input().split()))\n    g = list(map(int, input().split()))\n    h = list(map(int, input().split()))\n    j = max(c * (e[-1] - e[1]), c * (f[-1] - f[1]), b * (g[-1] - g[1]), b * (h[-1] - h[1]))\n    print(j)", "def main():\n    T = int(input())\n    for i in range(T):\n        (h, w) = list(map(int, input().split(' ')))\n        x_1 = list(map(int, input().split(' ')))\n        x_2 = list(map(int, input().split(' ')))\n        y_1 = list(map(int, input().split(' ')))\n        y_2 = list(map(int, input().split(' ')))\n        x_1_a = (x_1[len(x_1) - 1] - x_1[1]) * w\n        x_2_a = (x_2[len(x_2) - 1] - x_2[1]) * w\n        y_1_a = (y_1[len(y_1) - 1] - y_1[1]) * h\n        y_2_a = (y_2[len(y_2) - 1] - y_2[1]) * h\n        res = max(max(max(x_1_a, x_2_a), y_1_a), y_2_a)\n        print(res)\nmain()", "R = lambda : map(int, input().split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (w, h) = R()\n    r = 0\n    for x in [h, h, w, w]:\n        (k, m, *_, M) = R()\n        r = max(r, x * (M - m))\n    print(r)", "def main():\n    t = int(input())\n    for tt in range(t):\n        (w, h) = [int(x) for x in input().split()]\n        d_area = []\n        height = [h, h, w, w]\n        for i in range(4):\n            line = [int(x) for x in input().split()]\n            d_area.append(height[i] * (line[-1] - line[1]))\n        print(max(d_area))\nmain()", "test = int(input())\nfor i in range(test):\n    (w, h) = map(int, input().split())\n    x1 = list(map(int, input().split()))\n    xo = x1[len(x1) - 1] - x1[1]\n    x2 = list(map(int, input().split()))\n    x = x2[len(x2) - 1] - x2[1]\n    y1 = list(map(int, input().split()))\n    yo = y1[len(y1) - 1] - y1[1]\n    y2 = list(map(int, input().split()))\n    y = y2[len(y2) - 1] - y2[1]\n    print(max(xo * h, x * h, yo * w, y * w))", "def solve():\n    (w, h) = [int(x) for x in input().split()]\n    ret = 0\n    H = [h, h, w, w]\n    for h in H:\n        A = [int(x) for x in input().split()]\n        ret = max(ret, h * (A[-1] - A[1]))\n    print(ret)\nt = int(input())\nfor _ in range(t):\n    solve()", "t = int(input())\nfor _ in range(t):\n    (w, h) = map(int, input().split())\n    bot = list(map(int, input().split()))\n    top = list(map(int, input().split()))\n    left = list(map(int, input().split()))\n    right = list(map(int, input().split()))\n    print(max((bot[-1] - bot[1]) * h, (top[-1] - top[1]) * h, (left[-1] - left[1]) * w, (right[-1] - right[1]) * w))", "for _ in range(int(input())):\n    (w, h) = map(int, input().split())\n    hor0 = list(map(int, input().split()))\n    horh = list(map(int, input().split()))\n    ver0 = list(map(int, input().split()))\n    verw = list(map(int, input().split()))\n    hor0.pop(0)\n    horh.pop(0)\n    ver0.pop(0)\n    verw.pop(0)\n    ah = max(hor0[len(hor0) - 1] - hor0[0], horh[len(horh) - 1] - horh[0]) * h\n    av = max(ver0[len(ver0) - 1] - ver0[0], verw[len(verw) - 1] - verw[0]) * w\n    print(max(ah, av))", "I = lambda : list(map(int, input().split()))\nfor _ in range(int(input())):\n    p = I()\n    a = [I(), I(), I(), I()]\n    x = [0, 0]\n    for i in range(2):\n        x[i] = max(a[2 * i][-1] - a[2 * i][1], a[2 * i + 1][-1] - a[2 * i + 1][1]) * p[1 - i]\n    print(max(x))", "for _ in range(int(input())):\n    (w, h) = map(int, input().split())\n    x1 = list(map(int, input().split()))\n    x2 = list(map(int, input().split()))\n    y1 = list(map(int, input().split()))\n    y2 = list(map(int, input().split()))\n    print(max(max(x1[-1] - x1[1], x2[-1] - x2[1]) * h, max(y1[-1] - y1[1], y2[-1] - y2[1]) * w))", "def maxd():\n    L = list(map(int, input().split()))\n    return L[-1] - L[1]\nfor _ in range(int(input())):\n    (w, h) = map(int, input().split())\n    al = [maxd() * h, maxd() * h, maxd() * w, maxd() * w]\n    print(max(al))", "t = int(input())\nfor z in range(t):\n    (w, h) = [int(i) for i in input().split(' ')]\n    sol = []\n    for i in range(4):\n        a = [int(i) for i in input().split(' ')]\n        if i < 2:\n            sol.append((a[-1] - a[1]) * h)\n        elif i >= 2:\n            sol.append((a[-1] - a[1]) * w)\n    print(max(sol))", "def larger(a, b):\n    if a >= b:\n        return a\n    else:\n        return b\n\ndef hori_can(h1, h2, h):\n    can1 = h1[h1[0]] - h1[1]\n    can2 = h2[h2[0]] - h2[1]\n    return larger(can1, can2) * h\n\ndef vert_can(v1, v2, w):\n    can1 = v1[v1[0]] - v1[1]\n    can2 = v2[v2[0]] - v2[1]\n    return larger(can1, can2) * w\ntest_cases = int(input())\nfor i in range(test_cases):\n    dim = input()\n    dim = dim.split()\n    dim = [int(i) for i in dim]\n    h1 = input()\n    h1 = h1.split()\n    h1 = [int(i) for i in h1]\n    h2 = input()\n    h2 = h2.split()\n    h2 = [int(i) for i in h2]\n    v1 = input()\n    v1 = v1.split()\n    v1 = [int(i) for i in v1]\n    v2 = input()\n    v2 = v2.split()\n    v2 = [int(i) for i in v2]\n    print(larger(hori_can(h1, h2, dim[1]), vert_can(v1, v2, dim[0])))", "testcases = int(input())\nfor _ in range(testcases):\n    coordinates = input().split()\n    w = int(coordinates[0])\n    h = int(coordinates[1])\n    trianglesizes = []\n    for _ in range(2):\n        points_all = input().split()\n        amount_points = int(points_all[0])\n        trianglesizes.append((int(points_all[amount_points]) - int(points_all[1])) * h)\n    for _ in range(2):\n        points_all = input().split()\n        amount_points = int(points_all[0])\n        trianglesizes.append((int(points_all[amount_points]) - int(points_all[1])) * w)\n    print(max(trianglesizes))", "t = int(input())\nz = 1\nwhile z <= t:\n    n = input().split()\n    w = int(n[0])\n    h = int(n[1])\n    b = 1\n    f = []\n    while b <= 4:\n        if b == 1 or b == 2:\n            p = input().split()\n            c = int(p[0])\n            d = int(p[c]) - int(p[1])\n            e = d * h\n            f.append(e)\n            b = b + 1\n        elif b == 3 or b == 4:\n            p = input().split()\n            c = int(p[0])\n            d = int(p[c]) - int(p[1])\n            e = d * w\n            f.append(e)\n            b = b + 1\n    print(max(f))\n    z = z + 1", "case = int(input())\nfor i in range(case):\n    (w, h) = map(int, input().split())\n    x1 = list(map(int, input().split()))\n    x2 = list(map(int, input().split()))\n    y1 = list(map(int, input().split()))\n    y2 = list(map(int, input().split()))\n    print(max(max(y1[-1] - y1[1], y2[-1] - y2[1]) * w, max(x1[-1] - x1[1], x2[-1] - x2[1]) * h))", "t = int(input())\nfor i in range(t):\n    (w, h) = map(int, input().split())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    l3 = list(map(int, input().split()))\n    l4 = list(map(int, input().split()))\n    m1 = max(l1[-1] - l1[1], l2[-1] - l2[1])\n    m2 = max(l3[-1] - l3[1], l4[-1] - l4[1])\n    print(max(m1 * h, m2 * w))"]