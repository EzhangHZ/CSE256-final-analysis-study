["for s in [*open(0)][2::2]:\n    print(s[:s.count('0') * 2].count('1'))", "for s in [*open(0)][2::2]:\n    print(s[:s.count('0') * 2].count('1'))", "for s in [*open(0)][2::2]:\n    print(s[:s.count('0') * 2].count('1'))", "for s in [*open(0)][2::2]:\n    print(s[:s.count('0') * 2].count('1'))", "for s in [*open(0)][2::2]:\n    print(s[:s.count('0') * 2].count('1'))", "for s in [*open(0)][2::2]:\n    print(s[:s.count('0') * 2].count('1'))", "for s in [*open(0)][2::2]:\n    print(s[:s.count('0') * 2].count('1'))", "for s in [*open(0)][2::2]:\n    print(s[:s.count('0') * 2].count('1'))", "for s in [*open(0)][2::2]:\n    print(s[:s.count('0') * 2].count('1'))", "for l in [*open(0)][2::2]:\n    print(l[:l.count('0') * 2].count('1'))", "for s in [*open(0)][2::2]:\n    print(s[:s.count('0') * 2].count('1'))", "for s in [*open(0)][2::2]:\n    print(s[:s.count('0') * 2].count('1'))", "for s in [*open(0)][2::2]:\n    print(s[:s.count('0') * 2].count('1'))", "for s in [*open(0)][2::2]:\n    print(s[:s.count('0') * 2].count('1'))", "for s in [*open(0)][2::2]:\n    print(s[:s.count('0') * 2].count('1'))", "for s in [*open(0)][2::2]:\n    print(s[:s.count('0') * 2].count('1'))", "for s in [*open(0)][2::2]:\n    print(s[:s.count('0') * 2].count('1'))", "for s in [*open(0)][2::2]:\n    print(s[:s.count('0') * 2].count('1'))", "for s in [*open(0)][2::2]:\n    print(s[:s.count('0') * 2].count('1'))", "for s in [*open(0)][2::2]:\n    print(s[:s.count('0') * 2].count('1'))", "for s in [*open(0)][2::2]:\n    print(s[:s.count('0') * 2].count('1'))", "for s in [*open(0)][2::2]:\n    print(s[:s.count('0') * 2].count('1'))", "for s in [*open(0)][2::2]:\n    print(s[:s.count('0') * 2].count('1'))", "for s in [*open(0)][2::2]:\n    print(s[:s.count('0') * 2].count('1'))", "for s in [*open(0)][2::2]:\n    print(s[:s.count('0') * 2].count('1'))", "for s in [*open(0)][2::2]:\n    print(s[:s.count('0') * 2].count('1'))", "for s in [*open(0)][2::2]:\n    print(s[:s.count('0') * 2].count('1'))", "for q in [*open(0)][2::2]:\n    print(q[:q.count('0') * 2].count('1'))", "for s in [*open(0)][2::2]:\n    print(s[:s.count('0') * 2].count('1'))", "for j in [*open(0)][2::2]:\n    print(j[:j.count('0') * 2].count('1'))", "for a in [*open(0)][2::2]:\n    print(a[:a.count('0') * 2].count('1'))", "for t in [*open(0)][2::2]:\n    print(t[:t.count('0') * 2].count('1'))", "for sa in [*open(0)][2::2]:\n    print(sa[:sa.count('0') * 2].count('1'))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    input()\n    a = input().split()\n    print(a[:a.count('0')].count('1'))", "for s in [*open(0)][2::2]:\n    print(s[:s.count('0') * 2].count('1'))", "for x in [*open(0)][2::2]:\n    print(x[:x.count('0') * 2].count('1'))", "for s in [*open(0)][2::2]:\n    print(s[:s.count('0') * 2].count('1'))", "for k in [*open(0)][2::2]:\n    print(k[:k.count('0') * 2].count('1'))", "for s in [*open(0)][2::2]:\n    k = s.count('0') * 2\n    print(max(s[:k].count('1'), s[k:].count('0')))", "for s in [*open(0)][2::2]:\n    print(s[:s.count('0') * 2].count('1'))", "for s in [*open(0)][2::2]:\n    print(s[:s.count('0') * 2].count('1'))", "for s in [*open(0)][2::2]:\n    print(s[:s.count('0') * 2].count('1'))", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    cnt0 = l.count(0)\n    c = l[:cnt0]\n    print(c.count(1))", "import sys\n\ndef main():\n    T = int(sys.stdin.readline())\n    for _ in range(T):\n        N = int(sys.stdin.readline())\n        arr = list(map(int, sys.stdin.readline().split()))\n        _chg = 0\n        (i, j) = (0, N - 1)\n        while i < j:\n            while i < N and arr[i] == 0:\n                i += 1\n            while j >= 0 and arr[j] == 1:\n                j -= 1\n            if i < j:\n                _chg += 1\n            i += 1\n            j -= 1\n        print(_chg)\nmain()", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (f, b) = (0, n - 1)\n    ans = 0\n    while f < b:\n        if arr[f] == 0:\n            f += 1\n        else:\n            while f < b and arr[b] == 1:\n                b -= 1\n            if f < b:\n                ans += 1\n                arr[b] = 1\n                f += 1\n    return ans\nfor _ in range(int(input())):\n    print(solve())", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    cnt = 0\n    ones = sum(a)\n    zeros = n - ones\n    for i in range(n):\n        if zeros <= 0:\n            break\n        if a[i] == 1:\n            ones -= 1\n            zeros -= 1\n            cnt += 1\n        else:\n            zeros -= 1\n    print(cnt)", "for s in [*open(0)][2::2]:\n    l = [*map(int, s.split())]\n    (a, b) = (l.count(0), l.count(1))\n    ans = 0\n    for x in l:\n        if a <= 0:\n            break\n        a -= 1\n        if x:\n            ans += 1\n    print(ans)", "def min_number(ls):\n    return sum(ls[:len(ls) - sum(ls)])\nn = int(input())\nanswer = []\nfor i in range(n):\n    a = input()\n    ls = list(map(int, input().split()))\n    answer.append(min_number(ls))\nfor i in answer:\n    print(i)", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        (i, j) = (0, n - 1)\n        sol = 0\n        while i < j:\n            if a[j] == 0 and a[i] == 1:\n                sol += 1\n                i += 1\n                j -= 1\n            elif a[j] == 0:\n                i += 1\n            elif a[i] == 1:\n                j -= 1\n            else:\n                i += 1\n                j -= 1\n        print(sol)\nmain()", "import sys\nimport sys, threading\nfrom heapq import heapify, heappop, heappush\nfrom math import log10, floor, pow, gcd, sqrt, inf, log2, ceil\nfrom collections import defaultdict, deque, Counter\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef main():\n    tests = inp()\n    for _ in range(tests):\n        n = inp()\n        a = inlt()\n        left = 0\n        right = n - 1\n        count = 0\n        while left < right:\n            while right > left and a[right] != 0:\n                right -= 1\n            while left < right and a[left] != 1:\n                left += 1\n            if left < right:\n                count += 1\n                left += 1\n                right -= 1\n        print(count)\nmain()", "fl = 'input.txt'\nimport sys\nimport math\nflh = sys.stdin\ntest_cases = int(flh.readline())\nres = []\nfor case in range(test_cases):\n    n = int(flh.readline())\n    a = [int(x) for x in flh.readline().strip().split()]\n    s = n - sum(a)\n    print(sum(a[:s]))", "import io\nimport sys\n\ndef calculate(n: int, a: list) -> int:\n    left = 0\n    right = n - 1\n    steps = 0\n    while left < right:\n        if a[right] != 0:\n            right -= 1\n            continue\n        if a[left] != 1:\n            left += 1\n            continue\n        a[right] += a[left]\n        left += 1\n        steps += 1\n    return steps\n\ndef main():\n    t = int(sys.stdin.readline())\n    for i in range(t):\n        n = int(sys.stdin.readline())\n        a = list(map(int, sys.stdin.readline().split()))\n        print(calculate(n, a))\nmain()", "import sys\nnum_of_cases = int(sys.stdin.readline().rstrip())\nfor _ in range(num_of_cases):\n    ans = 0\n    total_num = int(sys.stdin.readline().rstrip())\n    nums = sys.stdin.readline().rstrip().split()\n    i = 0\n    j = total_num - 1\n    while i < j:\n        if nums[i] == '1' and nums[j] == '0':\n            ans += 1\n            i += 1\n            j -= 1\n        else:\n            if nums[i] == '0':\n                i += 1\n            if nums[j] == '1':\n                j -= 1\n    print(ans)", "import os.path\nfrom math import gcd, floor, ceil\nfrom collections import *\nimport sys\nmod = 1000000007\nINF = float('inf')\n\ndef st():\n    return list(sys.stdin.readline().strip())\n\ndef li():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef mp():\n    return map(int, sys.stdin.readline().split())\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef pr(n):\n    return sys.stdout.write(str(n) + '\\n')\n\ndef prl(n):\n    return sys.stdout.write(str(n) + ' ')\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nt = inp()\nfor i in range(t):\n    n = inp()\n    l = li()\n    f = 0\n    k = 0\n    c = l.count(1)\n    for i in range(len(l) - 1, len(l) - c - 1, -1):\n        if l[i] == 0:\n            k += 1\n    print(k)", "def Rebel(arr):\n    n = arr.count(1)\n    rev = arr[::-1]\n    ans = 0\n    for i in range(0, n):\n        x = rev[i]\n        if x != 1:\n            ans += 1\n    return ans\nOUTPUT = []\nfor _ in range(int(input())):\n    N = int(input())\n    arr = [int(x) for x in input().split()]\n    OUTPUT.append(Rebel(arr))\nfor _ in OUTPUT:\n    print(_)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nn = inp()\n\ndef solution(a):\n    (i, j) = (0, len(a) - 1)\n    res = 0\n    while i < j:\n        while i < len(a) and a[i] == 0:\n            i += 1\n        while j >= 0 and a[j] == 1:\n            j -= 1\n        if i < j:\n            res += 1\n        i += 1\n        j -= 1\n    print(res)\nfor i in range(n):\n    len_a = inp()\n    a = inlt()\n    solution(a)", "testcases = []\nfor i in range(int(input())):\n    input()\n    testcases.append(input().split(' '))\nfor tc in testcases:\n    s = sorted(tc)\n    count = 0\n    for i in range(len(s)):\n        if s[i] != tc[i]:\n            count += 1\n    print(int(count / 2))", "n = int(input())\ni = 0\nwhile i < n:\n    x = int(input())\n    t = input().split()\n    print(t[:t.count('0')].count('1'))\n    i += 1", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    i = 0\n    j = n - 1\n    while i < j:\n        if l[i] == 0:\n            i += 1\n        elif l[j] == 0:\n            ans += 1\n            i += 1\n            j -= 1\n        else:\n            j -= 1\n    print(ans)", "import sys\nT = int(sys.stdin.readline().strip())\nfor t in range(0, T):\n    n = int(sys.stdin.readline().strip())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    i = 0\n    j = n - 1\n    ans = 0\n    while i < j:\n        if a[i] == 0:\n            i += 1\n        elif a[j] == 1:\n            j -= 1\n        else:\n            ans += 1\n            i += 1\n            j -= 1\n    print(ans)", "from sys import stdin\nt = int(stdin.readline().strip())\nfor i in range(t):\n    n = int(stdin.readline().strip())\n    a = list(map(str, stdin.readline().split()))\n    a2 = sorted(a)\n    a3 = 0\n    for i in range(n):\n        if a[i] != a2[i]:\n            a3 += 1\n    print(a3 // 2)", "n = int(input())\nanswer = []\nfor i in range(n):\n    x = input()\n    a = input().split()\n    x = sorted(a)\n    moves = 0\n    for i in range(0, len(a)):\n        if a[i] != x[i]:\n            moves += 0.5\n    answer.append(round(moves))\nfor i in answer:\n    print(i)", "import sys\ninput = sys.stdin.readline\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l1 = sorted(l)\n    cnt = 0\n    if l == l1:\n        cnt = 0\n    for i in range(len(l)):\n        if l[i] != l1[i]:\n            cnt += 1\n    print(cnt // 2)", "t = int(input())\na = [0] * t\nb = []\nc = []\nfor i in range(t):\n    k = int(input())\n    b.append(k)\n    a[i] = [int(j) for j in input().split()]\ns = 0\nfor i in range(t):\n    c = a[i]\n    if c.count(0) == 0 or c.count(1) == 0:\n        print(0)\n        continue\n    l = c.count(0)\n    d = c[:l]\n    print(d.count(1))", "for i in range(int(input())):\n    n = int(input())\n    L = input().split()\n    c = 0\n    for i in range(n - 1, n - L.count('1') - 1, -1):\n        if L[i] == '0':\n            c += 1\n    print(c)", "t = int(input())\nsp = []\nsm = []\nfor i in range(t):\n    n = int(input())\n    ab = input()\n    ab = ab.split()\n    sm.append([int(x) for x in ab])\nfor i in range(t):\n    b = sm[i].copy()\n    b.sort()\n    if 1 in b:\n        ind_1 = b.index(1)\n    else:\n        print(0)\n        continue\n    b = sm[i].copy()\n    print(b[:ind_1].count(1))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = input().split()\n    Operation1 = lst.count('0')\n    n1 = lst.count('1')\n    n1_ = lst[n - n1:n + 1].count('1')\n    Operation2 = n1 - n1_\n    print(min(Operation2, Operation1))", "import math\nimport sys\nfrom collections import deque, OrderedDict, defaultdict\nimport heapq, re\nfrom collections import Counter\n\ndef inp():\n    return sys.stdin.readline().rstrip()\n\ndef mpp():\n    return map(int, inp().split())\n\ndef lis():\n    return list(mpp())\n\ndef yn(n):\n    if n:\n        return 'YES'\n    else:\n        return 'NO'\n\ndef cd(s):\n    return ord(s) - ord('a') + 1\nprime = [True for i in range(10000)]\n\ndef sieve(n):\n    p = 2\n    prime[1] = False\n    while p * p <= n:\n        if prime[p] == True:\n            for i in range(p * p, n + 1, p):\n                prime[i] = False\n        p += 1\n\ndef hcf(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return x\n\ndef fn(arr, n):\n    c = sorted(arr)\n    if arr == c:\n        return 0\n    cn = 0\n    for i in range(n):\n        if arr[i] != c[i]:\n            cn += 1\n    return cn // 2\n\ndef main():\n    t = int(inp())\n    for _ in range(t):\n        n = int(inp())\n        arr = lis()\n        print(fn(arr, n))\nmain()", "import sys\ninput = sys.stdin.readline\nfor test in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    i = 0\n    j = n - 1\n    while i < j:\n        while i < j and a[i] != 1:\n            i += 1\n        while i < j and a[j] != 0:\n            j -= 1\n        if i < j:\n            c += 1\n            i += 1\n            j -= 1\n    print(c)", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    n = int(inp())\n    a = list(map(int, inp().split()))\n    j = n - 1\n    i = 0\n    ans = 0\n    while True:\n        while j >= 0 and a[j] > 0:\n            j -= 1\n        while i < n and a[i] == 0:\n            i += 1\n        if j < i:\n            break\n        a[i] -= 1\n        a[j] += 1\n        ans += 1\n    print(ans)\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "def solve():\n    n = int(input())\n    a = input().replace(' ', '')\n    j = n - 1\n    cnt = i = 0\n    while i < j:\n        while i < j and a[i] == '0':\n            i += 1\n        while i < j and a[j] == '1':\n            j -= 1\n        if i < j:\n            cnt += 1\n            i += 1\n            j -= 1\n    print(cnt)\nfor i in range(int(input())):\n    solve()", "from sys import stdin\n\ndef read():\n    return stdin.readline().strip()\nfor _ in range(int(read())):\n    n = int(read())\n    arr = list(map(int, read().split(' ')))\n    s = 0\n    i = 0\n    j = len(arr) - 1\n    while i < j:\n        if arr[i] == 0:\n            i += 1\n        elif arr[j] == 1:\n            j -= 1\n        else:\n            s += 1\n            i += 1\n            arr[j] = 1\n    print(s)", "n = int(input())\nlst_ans = []\nfor i in range(n):\n    len_1 = int(input())\n    list01 = list(map(int, input().split()))\n    j = len_1 - 1\n    i = 0\n    count_1 = 0\n    while True:\n        if i <= j:\n            if list01[j] == 0:\n                if list01[i] == 1:\n                    (list01[j], list01[i]) = (list01[i], list01[j])\n                    count_1 += 1\n                    j = j - 1\n                i += 1\n            else:\n                j = j - 1\n        else:\n            break\n    lst_ans.append(count_1)\nfor g in lst_ans:\n    print(g)", "def check(m):\n    if str(m) == str(sorted(m)):\n        return 1\n    else:\n        return 0\nt = int(input())\nfor i in range(t):\n    n = input()\n    m = list(map(int, input().split()))\n    ans = 0\n    num = m.count(1)\n    m1 = m[len(m) - num:]\n    print(m1.count(0))", "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    n = int(sys.stdin.readline())\n    array = list(map(int, sys.stdin.readline().split()))\n    reverseArray = sorted(array)\n    if array == reverseArray:\n        print(0)\n        continue\n    operationCount = 0\n    ptr1 = 0\n    ptr2 = n - 1\n    while ptr2 > ptr1:\n        if array[ptr2] != 0:\n            ptr2 -= 1\n            continue\n        if array[ptr1] != 1:\n            ptr1 += 1\n            continue\n        if ptr2 > ptr1:\n            array[ptr2] = 1\n            operationCount += 1\n            ptr2 -= 1\n            ptr1 += 1\n    print(operationCount)\n    continue", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = l.count(0)\n    print(l[:a].count(1))", "t = int(input())\ntcount = []\nfor i in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    i = 0\n    j = n - 1\n    count = 0\n    while i < j:\n        while i < n and A[i] != 1:\n            i += 1\n        while j >= 0 and A[j] != 0:\n            j -= 1\n        if i > j:\n            break\n        A[j] += A[i]\n        A[i] = 0\n        i += 1\n        j -= 1\n        count += 1\n    tcount.append(count)\nprint(*tcount, sep='\\n')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    one = sum(lst)\n    print(one - sum(lst[n - one:]))", "from sys import stdin\nfrom collections import Counter\n\ndef readint():\n    return int(stdin.readline())\n\ndef readarray(typ):\n    return list(map(typ, stdin.readline().split()))\nt = readint()\nfor _ in range(t):\n    n = readint()\n    A = readarray(int)\n    c_whole = Counter(A)\n    final_index = n - c_whole[1]\n    c_partial = Counter(A[:final_index])\n    print(c_partial[1])", "a = int(input())\nsp = []\nfor i in range(a):\n    j = int(input())\n    n = list(map(int, input().split()))\n    x = sorted(n)\n    k = 0\n    for t in range(j):\n        if x[t] != n[t]:\n            k += 1\n    sp.append(k // 2)\nfor y in sp:\n    print(y)", "a = int(input())\nsp = []\nfor i in range(a):\n    j = int(input())\n    n = list(map(int, input().split()))\n    x = sorted(n)\n    k = 0\n    for t in range(j):\n        if x[t] != n[t]:\n            k += 1\n    sp.append(k / 2)\nfor y in sp:\n    print(int(y))", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    x = sum(lst)\n    print(x - sum(lst[-x:]))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    boo = a[:a.count(0)]\n    print(boo.count(1))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(l[:l.count(0)].count(1))", "for _ in range(int(input())):\n    total = int(input())\n    k = list(map(int, input().split()))\n    print(sum(k[0:total - sum(k)]))", "t = int(input())\nl = []\nfor i in range(t):\n    size = int(input())\n    a = list(map(int, input().split()))\n    x = sorted(a)\n    k = 0\n    for i in range(size):\n        if x[i] != a[i]:\n            k += 1\n    l.append(k // 2)\nfor i in l:\n    print(i)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    total = sum(a)\n    print(sum(a[:n - total]))", "for i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(sum(arr[:n - sum(arr)]))", "for i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(sum(arr[:n - sum(arr)]))", "for i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(sum(arr[:n - sum(arr)]))", "t = int(input())\nnum_swap = []\nfor i in range(1, t + 1):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    one_ptr = 0\n    zero_ptr = n - 1\n    swaps = 0\n    while one_ptr < zero_ptr:\n        if arr[one_ptr] == 1 and arr[zero_ptr] == 0:\n            one_ptr += 1\n            zero_ptr -= 1\n            swaps += 1\n        if arr[one_ptr] != 1:\n            one_ptr += 1\n        if arr[zero_ptr] != 0:\n            zero_ptr -= 1\n    num_swap.append(swaps)\nfor i in range(len(num_swap)):\n    print(num_swap[i])", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(l[:l.count(0)].count(1))", "for i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(sum(arr[:n - sum(arr)]))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(l[:l.count(0)].count(1))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(l[:l.count(0)].count(1))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(l[:l.count(0)].count(1))", "for _ in range(int(input())):\n    j = int(input())\n    list1 = list(map(int, input().split()))\n    print(list1[:list1.count(0)].count(1))"]