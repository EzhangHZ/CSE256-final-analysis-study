["import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    s = input()[:-1]\n    n = len(s)\n    (l, r) = (0, n - 1)\n    while l < r:\n        if s[l] == s[r]:\n            l += 1\n            r -= 1\n        else:\n            break\n    s = s[l:r + 1]\n    res = 'Draw'\n    for i in range(1, len(s), 2):\n        if s[i] != s[i - 1]:\n            res = 'Alice'\n            break\n    print(res)", "N = int(input())\nfor _ in range(N):\n    S = input()\n    ans = 'Draw'\n    f = 0\n    while len(S) != 0 and S[0] == S[-1]:\n        S = S[1:-1]\n    for i in range(len(S) // 2):\n        if ord(S[2 * i]) != ord(S[2 * i + 1]):\n            ans = 'Alice'\n            print(ans)\n            f = 1\n            break\n    if f == 0:\n        print('Draw')", "N = int(input())\nfor _ in range(N):\n    S = input()\n    ans = 'Draw'\n    while len(S) != 0 and S[0] == S[-1]:\n        S = S[1:-1]\n    for i in range(len(S) // 2):\n        if S[2 * i] != S[2 * i + 1]:\n            ans = 'Alice'\n    print(ans)", "t = int(input())\nfor i in range(t):\n    s = input()\n    while s and s[-1] == s[0]:\n        s = s[1:-1]\n    d = 1\n    for j in range(len(s) // 2):\n        if s[j * 2] != s[j * 2 + 1]:\n            d = 0\n    if d:\n        print('Draw')\n    else:\n        print('Alice')", "t = int(input())\nfor i in range(t):\n    s = input()\n    while s and s[-1] == s[0]:\n        s = s[1:-1]\n    d = 1\n    for j in range(0, len(s), 2):\n        if s[j] != s[j + 1]:\n            d = 0\n    print('Draw' if d else 'Alice')", "t = int(input())\nfor i in range(t):\n    s = input()\n    while s and s[-1] == s[0]:\n        s = s[1:-1]\n    d = 1\n    for j in range(0, len(s), 2):\n        if s[j] != s[j + 1]:\n            d = 0\n    print('Draw' if d else 'Alice')", "for _ in range(int(input())):\n    s = input()\n    while s and s[-1] == s[0]:\n        s = s[1:-1]\n    d = 1\n    for j in range(0, len(s), 2):\n        if s[j] != s[j + 1]:\n            d = 0\n    print('Draw' if d else 'Alice')", "for _ in range(int(input())):\n    s = input()\n    while s and s[-1] == s[0]:\n        s = s[1:-1]\n    d = 1\n    for j in range(0, len(s), 2):\n        d *= s[j] == s[j + 1]\n    print(['Alice', 'Draw'][d])", "for _ in range(int(input())):\n    s = input()\n    while s and s[-1] == s[0]:\n        s = s[1:-1]\n    d = 1\n    for j in range(0, len(s), 2):\n        d *= s[j] == s[j + 1]\n    print(['Alice', 'Draw'][d])", "for _ in range(int(input())):\n    s = input().strip()\n    ans = 'Draw'\n    while len(s) != 0 and s[0] == s[-1]:\n        s = s[1:-1]\n    for i in range(len(s) // 2):\n        if s[2 * i] != s[2 * i + 1]:\n            ans = 'Alice'\n    print(ans)", "for _ in range(int(input())):\n    n = input()\n    while n and n[-1] == n[0]:\n        n = n[1:-1]\n    x = 1\n    for i in range(0, len(n), 2):\n        x *= n[i] == n[i + 1]\n    print(['Alice', 'Draw'][x])", "for _ in range(int(input())):\n    l = input()\n    while l and l[-1] == l[0]:\n        l = l[1:-1]\n    m = 1\n    for i in range(0, len(l), 2):\n        m *= l[i] == l[i + 1]\n    print(['Alice', 'Draw'][m])", "t = int(input())\nfor i in range(t):\n    s = input()\n    while s and s[-1] == s[0]:\n        s = s[1:-1]\n    d = 1\n    for j in range(0, len(s), 2):\n        if s[j] != s[j + 1]:\n            d = 0\n    print('Draw' if d else 'Alice')", "import sys\nrd = sys.stdin.readline\nfor _ in range(int(rd())):\n    s = rd().strip()\n    while s and s[-1] == s[0]:\n        s = s[1:-1]\n    m = 1\n    for i in range(0, len(s) - 1, 2):\n        m *= s[i] == s[i + 1]\n    if not m:\n        print('Alice')\n    else:\n        print('Draw')", "def solution(string):\n    n = len(string)\n    (left, right) = (0, n - 1)\n    while left < right and string[left] == string[right]:\n        left += 1\n        right -= 1\n    flag = False\n    for i in range(left, right + 1, 2):\n        if string[i] != string[i + 1]:\n            flag = True\n            break\n    if flag:\n        print('Alice')\n    else:\n        print('Draw')\nt = int(input())\nfor _ in range(t):\n    string = input()\n    solution(string)", "for i in range(int(input())):\n    s = input()\n    while s and s[-1] == s[0]:\n        s = s[1:-1]\n    d = 1\n    for j in range(0, len(s), 2):\n        d *= s[j] == s[j + 1]\n    print(['Alice', 'Draw'][d])", "def solve(s):\n    while len(s) and s[0] == s[-1]:\n        s = s[1:len(s) - 1]\n    for i in range(len(s) // 2):\n        if s[2 * i] != s[2 * i + 1]:\n            return 'Alice'\n    return 'Draw'\nt = int(input())\nfor _ in range(t):\n    s = input()\n    print(solve(s))", "for _ in range(int(input())):\n    s = input()\n    while s and s[-1] == s[0]:\n        s = s[1:-1]\n    d = 1\n    for j in range(0, len(s), 2):\n        d *= s[j] == s[j + 1]\n    print(['Alice', 'Draw'][d])", "for i in range(int(input())):\n    strn = input()\n    while strn and strn[-1] == strn[0]:\n        strn = strn[1:-1]\n    d = 1\n    for j in range(0, len(strn), 2):\n        d *= strn[j] == strn[j + 1]\n    print(['Alice', 'Draw'][d])", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    s = input()[:-1]\n    n = len(s)\n    (l, r) = (0, n - 1)\n    while l < r:\n        if s[l] == s[r]:\n            l += 1\n            r -= 1\n        else:\n            break\n    s = s[l:r + 1]\n    res = 'Draw'\n    for i in range(1, len(s), 2):\n        if s[i] != s[i - 1]:\n            res = 'Alice'\n            break\n    print(res)", "def f(s) -> int:\n    while s != '' and s[0] == s[-1]:\n        s = s[1:-1]\n    while s != '' and s[0] == s[1]:\n        s = s[2:]\n    if s == '':\n        return 1\n    else:\n        return 0\nn = int(input())\nans = ['Alice', 'Draw']\nfor _ in range(0, n):\n    s = input()\n    print(ans[f(s)])", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    s = input()[:-1]\n    n = len(s)\n    (l, r) = (0, n - 1)\n    while l < r:\n        if s[l] == s[r]:\n            l += 1\n            r -= 1\n        else:\n            break\n    s = s[l:r + 1]\n    res = 'Draw'\n    for i in range(1, len(s), 2):\n        if s[i] != s[i - 1]:\n            res = 'Alice'\n            break\n    print(res)", "N = int(input())\nfor _ in range(N):\n    S = input()\n    ans = 'Draw'\n    while len(S) != 0 and S[0] == S[-1]:\n        S = S[1:-1]\n    for i in range(len(S) // 2):\n        if S[2 * i] != S[2 * i + 1]:\n            ans = 'Alice'\n    print(ans)", "N = int(input())\nfor _ in range(N):\n    S = input()\n    ans = 'Draw'\n    while len(S) != 0 and S[0] == S[-1]:\n        S = S[1:-1]\n    for i in range(len(S) // 2):\n        if ord(S[2 * i]) != ord(S[2 * i + 1]):\n            ans = 'Alice'\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    while s and s[-1] == s[0]:\n        s = s[1:-1]\n    d = 1\n    for j in range(0, len(s), 2):\n        d *= s[j] == s[j + 1]\n    print(['Alice', 'Draw'][d])", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    s = input()[:-1]\n    n = len(s)\n    (l, r) = (0, n - 1)\n    while l < r:\n        if s[l] == s[r]:\n            l += 1\n            r -= 1\n        else:\n            break\n    s = s[l:r + 1]\n    res = 'Draw'\n    for i in range(1, len(s), 2):\n        if s[i] != s[i - 1]:\n            res = 'Alice'\n            break\n    print(res)", "for i in range(int(input())):\n    l = input()\n    while l and l[-1] == l[0]:\n        l = l[1:-1]\n    m = 1\n    for i in range(0, len(l), 2):\n        m *= l[i] == l[i + 1]\n    print(['Alice', 'Draw'][m])", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    b = input()[:-1]\n    m = len(b)\n    (l, r) = (0, m - 1)\n    while l < r:\n        if b[l] == b[r]:\n            l += 1\n            r -= 1\n        else:\n            break\n    b = b[l:r + 1]\n    res = 'Draw'\n    for i in range(1, len(b), 2):\n        if b[i] != b[i - 1]:\n            res = 'Alice'\n            break\n    print(res)", "for _ in range(int(input())):\n    s = input()\n    while s and s[-1] == s[0]:\n        s = s[1:-1]\n    d = 1\n    for j in range(0, len(s), 2):\n        d *= s[j] == s[j + 1]\n    print(['Alice', 'Draw'][d])", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    s = input()[:-1]\n    n = len(s)\n    (l, r) = (0, n - 1)\n    while l < r:\n        if s[l] == s[r]:\n            l += 1\n            r -= 1\n        else:\n            break\n    s = s[l:r + 1]\n    res = 'Draw'\n    for i in range(1, len(s), 2):\n        if s[i] != s[i - 1]:\n            res = 'Alice'\n            break\n    print(res)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    s = input()[:-1]\n    n = len(s)\n    (l, r) = (0, n - 1)\n    while l < r:\n        if s[l] == s[r]:\n            l += 1\n            r -= 1\n        else:\n            break\n    s = s[l:r + 1]\n    res = 'Draw'\n    for i in range(1, len(s), 2):\n        if s[i] != s[i - 1]:\n            res = 'Alice'\n            break\n    print(res)", "N = int(input())\nfor _ in range(N):\n    S = input()\n    ans = 'Draw'\n    while len(S) != 0 and S[0] == S[-1]:\n        S = S[1:-1]\n    for i in range(len(S) // 2):\n        if S[2 * i] != S[2 * i + 1]:\n            ans = 'Alice'\n    print(ans)", "for _ in range(int(input())):\n    n = 1\n    s = input()\n    while s and s[-1] == s[0]:\n        s = s[1:-1]\n    for j in range(0, len(s), 2):\n        n *= s[j] == s[j + 1]\n    print(['Alice', 'Draw'][n])", "for _ in range(int(input())):\n    s = input()\n    while s and s[-1] == s[0]:\n        s = s[1:-1]\n    d = 1\n    for j in range(0, len(s), 2):\n        d *= s[j] == s[j + 1]\n    print(['Alice', 'Draw'][d])", "for _ in range(int(input())):\n    s = input()\n    while s and s[-1] == s[0]:\n        s = s[1:-1]\n    d = 1\n    for j in range(0, len(s), 2):\n        d *= s[j] == s[j + 1]\n    print(['Alice', 'Draw'][d])", "for _ in range(int(input())):\n    s = input()\n    l = 0\n    r = len(s) - 1\n    c = 0\n    while l < r and s[l] == s[r]:\n        l += 1\n        r -= 1\n    for i in range(l, r, 2):\n        if s[i] == s[i + 1]:\n            continue\n        c = 1\n    if c == 0:\n        print('Draw')\n    else:\n        print('Alice')", "import sys\nsys.setrecursionlimit(6100)\ntest = int(input())\n\ndef solve(i, j, last, turn):\n    ans = False\n    if i > j:\n        return True\n    if (i, j, last, turn) in dp:\n        return dp[i, j, last, turn]\n    if turn == 0:\n        a = solve(i + 1, j, s[i], turn ^ 1)\n        b = solve(i, j - 1, s[j], turn ^ 1)\n        if a and b:\n            ans = True\n    else:\n        if s[i] == last:\n            ans |= solve(i + 1, j, s[i], turn ^ 1)\n        if s[j] == last:\n            ans |= solve(i, j - 1, s[j], turn ^ 1)\n    dp[i, j, last, turn] = ans\n    return ans\nwhile test:\n    test -= 1\n    s = input()\n    pal = True\n    (i, j) = (0, len(s) - 1)\n    while i <= j:\n        if s[i] != s[j]:\n            pal = False\n            break\n        i += 1\n        j -= 1\n    if pal:\n        print('Draw')\n        continue\n    dp = {}\n    if solve(0, len(s) - 1, '', 0):\n        print('Draw')\n    else:\n        print('Alice')", "def get_lst_pos(beg, ed, lst_pos):\n    if lst_pos == 0:\n        return beg - 1\n    else:\n        return ed + 1\n\ndef solve():\n    s = list(input().strip())\n    n = len(s)\n    dp = [[0 for j in range(n)] for i in range(n)]\n    for i in range(n - 1):\n        if s[i] != s[i + 1]:\n            dp[i][i + 1] = 1\n    for s_len in range(4, n + 1, 2):\n        for beg in range(0, n - 3):\n            ed = beg + s_len - 1\n            if ed >= n:\n                break\n            if dp[beg + 1][ed - 1] == 1 and (dp[beg + 2][ed] == 1 or (dp[beg + 2][ed] == 0 and ord(s[beg]) < ord(s[beg + 1]))):\n                dp[beg][ed] = 1\n            elif dp[beg + 1][ed - 1] == 1 and (dp[beg][ed - 2] == 1 or (dp[beg][ed - 2] == 0 and ord(s[ed]) < ord(s[ed - 1]))):\n                dp[beg][ed] = 1\n            elif dp[beg + 1][ed - 1] == 0 and s[beg] != s[ed]:\n                dp[beg][ed] = 1\n            else:\n                dp[beg][ed] = 0\n    print('Alice' if dp[0][n - 1] == 1 else 'Draw')\nt = int(input().strip())\nfor _ in range(t):\n    solve()", "def codeforces(s):\n    n = len(s)\n    dp = [0 for i in range(n - 1)]\n    for i in range(n - 1):\n        if s[i] != s[i + 1]:\n            dp[i] = 1\n    x = n // 2\n    for i in range(2, x + 1):\n        tp = [0 for i in range(n - 2 * i + 1)]\n        for ind in range(n - 2 * i + 1):\n            a = ind + 2 * (i - 1)\n            x = dp[ind + 1] or s[ind] < s[a + 1]\n            y = dp[ind] or s[a + 1] < s[a]\n            z = dp[ind + 2] or s[ind] < s[ind + 1]\n            p = dp[ind + 1] or s[a + 1] < s[ind]\n            tp[ind] = x and z or (y and p)\n        dp = tp\n    return dp[0]\nt = int(input())\nfor test in range(t):\n    s = input()\n    if codeforces(s):\n        print('Alice')\n    else:\n        print('Draw')", "from functools import lru_cache\nt = int(input())\nfor _ in range(t):\n    s = input()\n    l = len(s)\n    dp = [[True for i in range(l + 1)] for j in range(l + 1)]\n    for k in range(2, l + 1, 2):\n        for i in range(l + 1 - k):\n            j = i + k\n            dp[i][j] = s[i] == s[j - 1] and dp[i + 1][j - 1] or (s[i] == s[i + 1] and dp[i + 2][j]) & (s[j - 1] == s[j - 2] and dp[i][j - 2])\n    if dp[0][-1]:\n        print('Draw')\n    else:\n        print('Alice')"]