["mod = 998244353\n\ndef fact(n):\n    numb = 1\n    for i in range(1, n + 1):\n        numb = numb * i % mod\n    return numb\n\ndef fact1(n, k):\n    numb = 1\n    for i in range(1, n + 1):\n        if i != k + 1:\n            numb = numb * i % mod\n    return numb\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if a[-1] == a[-2]:\n        print(fact(n))\n    elif a[-1] > a[-2] + 1:\n        print(0)\n    else:\n        k = a.count(a[-2])\n        ans = fact1(n, k)\n        ans *= k\n        ans %= mod\n        print(ans)", "mod = 998244353\n\ndef fact(n):\n    numb = 1\n    for i in range(1, n + 1):\n        numb = numb * i % mod\n    return numb\n\ndef fact1(n, k):\n    numb = 1\n    for i in range(1, n + 1):\n        if i != k + 1:\n            numb = numb * i % mod\n    return numb\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if a[-1] == a[-2]:\n        print(fact(n))\n    elif a[-1] > a[-2] + 1:\n        print(0)\n    else:\n        k = a.count(a[-2])\n        ans = fact1(n, k)\n        ans *= k\n        ans %= mod\n        print(ans)", "def factorial(n):\n    ans = 1\n    for k in range(2, n + 1):\n        ans = ans * k % MOD\n    return ans\n\ndef factorial_absent(n, absent):\n    ans = 1\n    for k in range(2, n + 1):\n        if k != absent:\n            ans = ans * k % MOD\n    return ans\nMOD = 998244353\nTestCases = int(input())\nfor _ in range(TestCases):\n    N = int(input())\n    a = list(map(int, input().split()))\n    mx = max(a)\n    mx_count = a.count(mx)\n    mx2_count = a.count(mx - 1)\n    if mx_count > 1:\n        print(factorial(N))\n    elif mx2_count == 0:\n        print(0)\n    else:\n        print((factorial(N) - factorial_absent(N, mx2_count + 1) + MOD) % MOD)", "M = 998244353\nf = [1]\nfor i in range(1, 8 ** 6):\n    f += (f[-1] * i % M,)\nfor s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(f[len(a)] * (1 < a.count((m := max(a))) or 1 - pow(a.count(m - 1) + 1, M - 2, M)) % M)", "mod = 998244353\nfor _ in range(int(input())):\n    ans = 1\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    num_max = max(l)\n    count_max = l.count(num_max)\n    count_premax = l.count(num_max - 1)\n    if count_max > 1:\n        for i in range(1, n + 1):\n            ans = ans * i % mod\n    elif count_premax == 0:\n        ans = 0\n    else:\n        for i in range(1, n + 1):\n            if i != count_premax + 1 and i != count_premax:\n                ans = ans * i % mod\n            if i == count_premax:\n                ans = ans * i * i % mod\n    print(ans)", "M = 998244353\nf = [1]\nfor i in range(1, 8 ** 6):\n    f += (f[-1] * i % M,)\nfor s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(f[len(a)] * (1 < a.count((m := max(a))) or 1 - pow(a.count(m - 1) + 1, M - 2, M)) % M)", "import sys\n\ndef readnum():\n    input = sys.stdin.readline\n    a = list(map(int, input().split()))\n    return a\n\ndef printf(val):\n    sys.stdout.write(str(val) + '\\n')\n\ndef power(a, b, mod):\n    if b == 1:\n        return a\n    if b == 0:\n        return 1\n    ans = power(a, b // 2, mod)\n    ans *= ans\n    if b % 2:\n        ans *= a\n    ans = ans % mod\n    return ans\nt = readnum()[0]\n\ndef factorial(n, start, skip, mod):\n    res = start\n    for i in range(1, n + 1):\n        if i == skip:\n            continue\n        res *= i\n        res = res % mod\n    return res\nfor _ in range(t):\n    n = readnum()\n    arr = readnum()\n    (max_f, max_s) = (0, 0)\n    for i in range(len(arr)):\n        if arr[i] > max_f:\n            max_s = max_f\n            max_f = arr[i]\n        elif arr[i] > max_s:\n            max_s = arr[i]\n    max_f_c = sum([max_f == i for i in arr])\n    max_s_c = sum([max_s == i for i in arr])\n    if max_f_c > 1:\n        print(factorial(len(arr), 1, None, 998244353))\n    elif max_f - max_s > 1:\n        print(0)\n    else:\n        print(factorial(len(arr), max_s_c, max_s_c + 1, 998244353))", "def jc(n):\n    t = 1\n    for i in range(1, n + 1):\n        t *= i\n        t %= 998244353\n    return t\nfor _ in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    imax = max(l)\n    if l.count(imax) != 1:\n        print(jc(n))\n    elif l.count(imax - 1) == 0:\n        print(0)\n    else:\n        x = l.count(imax - 1)\n        y = n - 1 - x\n        j = jc(x)\n        tmp = x + 2\n        for i in range(y):\n            j *= tmp + i\n            j %= 998244353\n        print((jc(n) - j) % 998244353)", "M = 998244353\nf = [1]\nfor i in range(1, 8 ** 6):\n    f += (f[-1] * i % M,)\nfor s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(f[len(a)] * (1 < a.count((m := max(a))) or 1 - pow(a.count(m - 1) + 1, M - 2, M)) % M)", "def answer():\n    from collections import Counter\n    n = int(input())\n    a = list(map(int, input().split()))\n    mod = 998244353\n    a.sort()\n    M = a[-1]\n    m = a[-2]\n    if M - m > 1:\n        print(0)\n        return\n    if M == m:\n        tmp = 1\n        for i in range(2, n + 1):\n            tmp *= i\n            tmp %= mod\n        print(tmp % mod)\n    else:\n        c = Counter(a)\n        tmp = 1\n        for i in range(2, n + 1):\n            tmp *= i\n            tmp %= mod\n        cm = c[m]\n        tmp *= pow(1 + cm, -1, mod)\n        tmp *= pow(cm, 1, mod)\n        print(tmp % mod)\nt = int(input())\nfor _ in range(t):\n    answer()", "t = int(input())\n\ndef jc(n):\n    t = 1\n    for i in range(1, n + 1):\n        t *= i\n        t %= 998244353\n    return t\nfor dalskdjsa in range(t):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    imax = max(l)\n    if l.count(imax) != 1:\n        print(jc(n))\n    elif l.count(imax - 1) == 0:\n        print(0)\n    else:\n        x = l.count(imax - 1)\n        y = n - 1 - x\n        j = jc(x)\n        tmp = x + 2\n        for i in range(y):\n            j *= tmp + i\n            j %= 998244353\n        print((jc(n) - j) % 998244353)", "t = int(input())\n\ndef jc(n):\n    t = 1\n    for i in range(1, n + 1):\n        t *= i\n        t %= 998244353\n    return t\nfor dalskdjsa in range(t):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    imax = max(l)\n    if l.count(imax) != 1:\n        print(jc(n))\n    elif l.count(imax - 1) == 0:\n        print(0)\n    else:\n        x = l.count(imax - 1)\n        y = n - 1 - x\n        j = jc(x)\n        tmp = x + 2\n        for i in range(y):\n            j *= tmp + i\n            j %= 998244353\n        print((jc(n) - j) % 998244353)", "t = int(input())\n\ndef jc(n):\n    t = 1\n    for i in range(1, n + 1):\n        t *= i\n        t %= 998244353\n    return t\nfor dalskdjsa in range(t):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    imax = max(l)\n    if l.count(imax) != 1:\n        print(jc(n))\n    elif l.count(imax - 1) == 0:\n        print(0)\n    else:\n        x = l.count(imax - 1)\n        y = n - 1 - x\n        j = jc(x)\n        tmp = x + 2\n        for i in range(y):\n            j *= tmp + i\n            j %= 998244353\n        print((jc(n) - j) % 998244353)", "def answer():\n    from collections import Counter\n    n = int(input())\n    a = list(map(int, input().split()))\n    mod = 998244353\n    a.sort()\n    M = a[-1]\n    m = a[-2]\n    if M - m > 1:\n        print(0)\n        return\n    if M == m:\n        tmp = 1\n        for i in range(2, n + 1):\n            tmp *= i\n            tmp %= mod\n        print(tmp % mod)\n    else:\n        c = Counter(a)\n        tmp = 1\n        for i in range(2, n + 1):\n            tmp *= i\n            tmp %= mod\n        cm = c[m]\n        tmp *= pow(1 + cm, -1, mod)\n        tmp *= pow(cm, 1, mod)\n        print(tmp % mod)\nt = int(input())\nfor _ in range(t):\n    answer()", "def answer():\n    from collections import Counter\n    n = int(input())\n    a = list(map(int, input().split()))\n    mod = 998244353\n    a.sort()\n    M = a[-1]\n    m = a[-2]\n    if M - m > 1:\n        print(0)\n        return\n    if M == m:\n        tmp = 1\n        for i in range(2, n + 1):\n            tmp *= i\n            tmp %= mod\n        print(tmp % mod)\n    else:\n        c = Counter(a)\n        tmp = 1\n        for i in range(2, n + 1):\n            tmp *= i\n            tmp %= mod\n        cm = c[m]\n        tmp *= pow(1 + cm, -1, mod)\n        tmp *= pow(cm, 1, mod)\n        print(tmp % mod)\nt = int(input())\nfor _ in range(t):\n    answer()", "t = int(input())\n\ndef jc(n):\n    t = 1\n    for i in range(1, n + 1):\n        t *= i\n        t %= 998244353\n    return t\nfor dalskdjsa in range(t):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    imax = max(l)\n    if l.count(imax) != 1:\n        print(jc(n))\n    elif l.count(imax - 1) == 0:\n        print(0)\n    else:\n        x = l.count(imax - 1)\n        y = n - 1 - x\n        j = jc(x)\n        tmp = x + 2\n        for i in range(y):\n            j *= tmp + i\n            j %= 998244353\n        print((jc(n) - j) % 998244353)", "M = 998244353\nf = [1]\nfor i in range(1, 8 ** 6):\n    f += (f[-1] * i % M,)\nfor s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(f[len(a)] * (1 < a.count((m := max(a))) or 1 - pow(a.count(m - 1) + 1, M - 2, M)) % M)", "TC = int(input())\nfor test in range(TC):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    h = max(nums)\n    countH = nums.count(h)\n    if countH > 1:\n        prod = 1\n        for i in range(1, n + 1):\n            prod = prod * i % 998244353\n        print(prod)\n    else:\n        countN = nums.count(h - 1)\n        if countN > 0:\n            prod = countN\n            for i in range(1, n + 1):\n                if i != countN + 1:\n                    prod = prod * i % 998244353\n            print(prod)\n        else:\n            print(0)", "M = 998244353\nf = [1]\nfor i in range(1, 8 ** 6):\n    f += (f[-1] * i % M,)\nfor s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(f[len(a)] * (1 < a.count((m := max(a))) or 1 - pow(a.count(m - 1) + 1, M - 2, M)) % M)", "MOD = 998244353\nfac = {0: 1, 1: 1}\nfor t in range(int(input())):\n    n = int(input())\n    problems = [int(i) for i in input().split()]\n    m = max(problems)\n    cm = problems.count(m)\n    cs = problems.count(m - 1)\n    ans = 1\n    if cm > 1:\n        for i in range(1, n + 1):\n            ans = ans * i % MOD\n        print(ans)\n    elif cs == 0:\n        print(0)\n    else:\n        for i in range(1, n + 1):\n            if i != cs + 1:\n                ans = ans * i % MOD\n        print(cs * ans % MOD)", "t = int(input())\n\ndef jc(n):\n    t = 1\n    for i in range(1, n + 1):\n        t *= i\n        t %= 998244353\n    return t\nfor dalskdjsa in range(t):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    imax = max(l)\n    if l.count(imax) != 1:\n        print(jc(n))\n    elif l.count(imax - 1) == 0:\n        print(0)\n    else:\n        x = l.count(imax - 1)\n        y = n - 1 - x\n        j = jc(x)\n        tmp = x + 2\n        for i in range(y):\n            j *= tmp + i\n            j %= 998244353\n        print((jc(n) - j) % 998244353)", "MOD = 998244353\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (max1, max2) = (0, 0)\n    for i in a:\n        if i >= max1:\n            max2 = max1\n            max1 = i\n        elif i >= max2:\n            max2 = i\n    ans = 1\n    if max1 != max2:\n        if max1 > max2 + 1:\n            print(0)\n        else:\n            count = 0\n            for i in a:\n                if i == max2:\n                    count += 1\n            for i in range(1, n + 1):\n                if i != count + 1:\n                    ans = ans * i % MOD\n                else:\n                    ans = ans * count % MOD\n            print(ans)\n    else:\n        for i in range(1, n + 1):\n            ans = ans * i % MOD\n        print(ans)", "MOD = 998244353\n\ndef fact(n: int) -> int:\n    while len(fact.v) <= n:\n        fact.v.append(fact.v[-1] * len(fact.v) % MOD)\n    return fact.v[n]\nfact.v = [1]\n\ndef inv(x: int) -> int:\n    return pow(x, MOD - 2, MOD)\n\ndef comb(n: int, k: int) -> int:\n    return fact(n) * inv(fact(k)) * inv(fact(n - k)) % MOD\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = max(a)\n    c0 = a.count(x)\n    if c0 > 1:\n        print(fact(n))\n    else:\n        c1 = a.count(x - 1)\n        if c1 == 0:\n            print(0)\n        else:\n            print(comb(n, c1 + 1) * c1 * fact(c1) * fact(n - c1 - 1) % MOD)", "from collections import Counter, deque\nfrom sys import stdout\nimport time\nfrom math import factorial, log\n\ndef mod_fac(e, s=1):\n    p = 1\n    for i in range(s, e + 1):\n        p = p * i % mod\n    return p\n\ndef main():\n    n = int(input())\n    a = list(sorted([int(i) for i in input().split()]))[::-1]\n    mx = a[0]\n    nmx = 0\n    for i in range(n):\n        el = a[i]\n        if el == mx:\n            nmx += 1\n            if nmx > 1:\n                print(mod_fac(n))\n                return\n        else:\n            mxx = a[i]\n            break\n    if mxx < mx - 1:\n        print(0)\n        return\n    k = a.count(mxx)\n    print((mod_fac(n) - mod_fac(n, k + 2) * mod_fac(k)) % mod)\nmod = 998244353\nfor t in range(int(input())):\n    main()", "M = 998244353\n\ndef solve(n, l):\n    m = max(l)\n    c1 = l.count(m)\n    c2 = l.count(m - 1)\n    (ans1, ans2) = (1, 1)\n    for i in range(1, n + 1):\n        ans1 = ans1 * i % M\n        if i != c2 + 1:\n            ans2 = ans2 * i % M\n    if c1 >= 2:\n        print(ans1)\n    else:\n        print((ans1 - ans2) % M)\nt = int(input())\nwhile t:\n    n = int(input())\n    l = [int(i) for i in input().split(' ')]\n    solve(n, l)\n    t -= 1", "from collections import defaultdict as dd\nimport sys\ninput = lambda : sys.stdin.readline().rstrip()\n\ndef solve(N, A):\n    ans = 0\n    MOD = 998244353\n    num = dd(int)\n    maxnum = 0\n    for a in A:\n        maxnum = max(maxnum, a)\n        num[a] += 1\n    if num[maxnum] >= 2:\n        ans = 1\n        for i in range(N):\n            ans *= i + 1\n            ans %= MOD\n    elif num[maxnum - 1] > 0:\n        n2 = num[maxnum - 1]\n        p2 = 1\n        for i in range(n2):\n            p2 *= i + 1\n            p2 %= MOD\n        p1 = p2 * (n2 + 1) % MOD\n        ans = (p1 - p2) % MOD\n        nokori = 1\n        for i in range(N - (n2 + 1)):\n            nokori *= n2 + 2 + i\n            nokori %= MOD\n        ans = ans * nokori % MOD\n    return ans\nT = int(input())\nfor i in range(1, T + 1):\n    N = int(input())\n    A = list(map(int, input().split()))\n    ans = solve(N, A)\n    print(ans)", "def f(n):\n    res = 1\n    for i in range(2, n + 1):\n        res = res * i % 998244353\n    return res\n\ndef g(a, b):\n    res = 1\n    for i in range(2, a + b + 1):\n        if i != b:\n            res = res * i % 998244353\n    res = res * (b - 1) % 998244353\n    return res\nfor t in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    mx = max(s)\n    if n == 1:\n        print(1 if mx <= 1 else 0)\n    if s.count(mx) == 1:\n        smx = [0, 0]\n        for i in s:\n            if i != mx:\n                if i == smx[0]:\n                    smx[1] += 1\n                else:\n                    smx = max(smx, [i, 1])\n        if smx[0] == mx - 1:\n            print(g(n - smx[1] - 1, smx[1] + 1))\n        else:\n            print(0)\n    else:\n        print(f(n))", "def fact(n):\n    t = 1\n    for i in range(1, n + 1):\n        t *= i\n        t %= 998244353\n    return t\nfor _ in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    imax = max(l)\n    if l.count(imax) != 1:\n        print(fact(n))\n    elif l.count(imax - 1) == 0:\n        print(0)\n    else:\n        x = l.count(imax - 1)\n        y = n - 1 - x\n        j = fact(x)\n        tmp = x + 2\n        for i in range(y):\n            j *= tmp + i\n            j %= 998244353\n        print((fact(n) - j) % 998244353)", "from math import factorial\nMOD = 998244353\n\ndef fact(n, skip):\n    f = 1\n    sub = 1\n    for i in range(2, n + 1):\n        f = f * i % MOD\n        if i != skip:\n            sub = sub * i % MOD\n    return (f, sub)\n\ndef smart_fact(n):\n    r = 1\n    while n > 1:\n        if n / MOD % 2 == 1:\n            r = MOD - r\n        r = r * factorial(n % MOD) % MOD\n        n //= MOD\n    return r\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        words = input().split(' ')\n        jury = (int(i) for i in words)\n        jury = sorted(jury, reverse=True)\n        (first, second) = jury[:2]\n        diff = first - second\n        if diff == 0:\n            (res, _) = fact(n, 0)\n            print(res)\n            continue\n        if diff == 1:\n            times = 1\n            for t in jury[2:]:\n                if second == t:\n                    times += 1\n            (res, sub) = fact(n, times + 1)\n            res = (res - sub + MOD) % MOD\n            print(res)\n            continue\n        print(0)\nmain()", "T = 1\nT = int(input())\nwhile T:\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    i = 1\n    if a[n - 1] - a[n - 2] > 1:\n        print(0)\n    else:\n        seg_max = 0\n        MOD = 998244353\n        for i in range(n - 1):\n            if a[i] == a[n - 2]:\n                seg_max += 1\n        if a[n - 1] == a[n - 2]:\n            ans = 1\n            for i in range(1, n + 1):\n                ans = ans * i % MOD\n            print(ans)\n        else:\n            ans = 1\n            for i in range(1, n + 1):\n                if i == seg_max + 1:\n                    ans = ans * seg_max % MOD\n                else:\n                    ans = ans * i % MOD\n            print(ans)\n    T -= 1", "from collections import Counter\n\ndef modFact(n, p):\n    if n >= p:\n        return 0\n    result = 1\n    for i in range(1, n + 1):\n        result = result * i % p\n    return result\nMOD = 998244353\nfor _ in range(int(input())):\n    n = int(input())\n    a = map(int, input().split())\n    c = Counter(a)\n    k = sorted(c.keys())\n    if len(k) == 1:\n        print(modFact(n, MOD))\n    else:\n        k1 = k[-1]\n        v1 = c[k1]\n        k2 = k[-2]\n        v2 = c[k2]\n        if v1 > 1:\n            print(modFact(n, MOD))\n        elif k1 - k2 > 1:\n            print(0)\n        else:\n            ans = modFact(n, MOD) * v2 * pow(1 + v2, -1, MOD)\n            print(ans % MOD)", "def fac(n, m):\n    ans = 1\n    for i in range(1, n + 1):\n        ans = ans * i % m\n    return ans\nsrd = int(input())\nfor fghj in range(srd):\n    n = int(input())\n    s = list(map(int, input().split()))\n    s.sort(reverse=True)\n    x = True\n    for i in range(n - 1):\n        if s[i] != s[0]:\n            break\n        if s[i] - s[i + 1] > 1:\n            x = False\n            break\n    mf = 1\n    sf = 0\n    temp = s[0]\n    for i in range(1, n):\n        if s[i] == temp:\n            mf += 1\n        else:\n            temp = s[i]\n            break\n    for i in range(1, n):\n        if s[i] == temp:\n            sf += 1\n        elif temp > s[i]:\n            break\n    if not x and mf == 1:\n        print(0)\n        continue\n    if mf > 1:\n        print(fac(n, 998244353))\n    else:\n        print(int(int(fac(n, 998244353) - fac(n, 998244353 * (sf + 1)) / (sf + 1)) % 998244353))", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    m = max(A)\n    k = A.count(m - 1)\n    ans = 1\n    sub = 1\n    for i in range(2, n + 1):\n        ans = ans * i % 998244353\n        if i != k + 1:\n            sub = sub * i % 998244353\n    if A.count(m) > 1:\n        k = A.count(m - 1)\n        ans = ans % 998244353\n        print(ans)\n    elif A.count(m - 1) == 0:\n        print(0)\n    else:\n        ans = ans - sub\n        ans = ans % 998244353\n        print(ans)", "from functools import lru_cache\nM = 998244353\nfs = [1, 1]\n\ndef factorial(n):\n    while n >= len(fs):\n        fs.append(fs[-1] * len(fs) % M)\n    return fs[n]\nfor _ in range(int(input())):\n    n = int(input())\n    a = sorted(map(int, input().split()))\n    if a[-1] == a[-2]:\n        ans = factorial(n)\n    elif a[-1] == a[-2] + 1:\n        x = 1\n        i = n - 2\n        while i - 1 >= 0 and a[i - 1] == a[-2]:\n            i -= 1\n            x += 1\n        ans = factorial(n) * x * pow(x + 1, -1, M)\n    else:\n        ans = 0\n    print(ans % M)", "v = 2 * 10 ** 5 + 1\nfact = [1] * v\nmod = 998244353\nfor i in range(1, v):\n    fact[i] = fact[i - 1] * i % mod\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    maxi = max(a)\n    if maxi == 1:\n        print(fact[n])\n    elif a.count(maxi) > 1:\n        print(fact[n])\n    elif a.count(maxi - 1) == 0:\n        print('0')\n    else:\n        smaxi = a.count(maxi - 1)\n        ans = fact[n]\n        t = smaxi + 1\n        ans -= fact[n] * pow(fact[t], -1, mod) * fact[smaxi]\n        print(ans % mod)", "tst = int(input())\nfor _ in range(tst):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    m = max(arr)\n    c = arr.count(m)\n    k = arr.count(m - 1)\n    mod = 998244353\n    ans = 1\n    sub = 1\n    for i in range(1, n + 1):\n        ans = ans * i % mod\n        if i != k + 1:\n            sub = sub * i % mod\n    if c >= 2:\n        print(ans % mod)\n    else:\n        print((ans - sub) % mod)", "for j in range(int(input())):\n    n = int(input())\n    mas_sort = list(map(int, input().split()))\n    mas_sort = sorted(mas_sort)\n    maximum = mas_sort[-1]\n    count_maximums = mas_sort.count(maximum)\n    count_premaximums = mas_sort.count(maximum - 1)\n    result_normal = 1\n    correction = 1\n    for i in range(1, n + 1):\n        result_normal = result_normal * i % 998244353\n        if i != count_premaximums + 1:\n            correction = correction * i % 998244353\n    if count_maximums == 1:\n        result_normal = (result_normal - correction + 998244353) % 998244353\n    print(result_normal)", "for j in range(int(input())):\n    n = int(input())\n    mas_sort = list(map(int, input().split()))\n    mas_sort = sorted(mas_sort)\n    maximum = mas_sort[-1]\n    count_maximums = mas_sort.count(maximum)\n    count_premaximums = mas_sort.count(maximum - 1)\n    result_normal = 1\n    correction = 1\n    for i in range(1, n + 1):\n        result_normal = result_normal * i % 998244353\n        if i != count_premaximums + 1:\n            correction = correction * i % 998244353\n    if count_maximums == 1:\n        result_normal = (result_normal - correction + 998244353) % 998244353\n    print(result_normal)", "p = 998244353\nt = int(input())\nfor xx in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    arr.sort()\n    r = arr[-1]\n    m = 0\n    for i in range(n - 1, -1, -1):\n        if arr[i] == r:\n            m += 1\n        else:\n            break\n    if m > 1:\n        ans = 1\n        for i in range(1, n + 1):\n            ans = ans * i % p\n        print(ans)\n    elif arr[-1] - arr[-2] > 1:\n        print(0)\n    else:\n        s = arr[-2]\n        d = 0\n        for i in range(n - 2, -1, -1):\n            if arr[i] == s:\n                d += 1\n            else:\n                break\n        ans = 1\n        for i in range(1, n + 1):\n            if i == d + 1:\n                ans = ans * d % p\n            else:\n                ans = ans * i % p\n        print(ans)", "import math\nMOD = 998244353\n\ndef solve(arr):\n    n = len(arr)\n    max_val = max(arr)\n    max_count = arr.count(max_val)\n    prev_count = arr.count(max_val - 1)\n    res = 1\n    extra = 1\n    for i in range(1, n + 1):\n        res = res * i % MOD\n        if i != prev_count + 1:\n            extra = extra * i % MOD\n    return res - (max_count == 1) * extra\nfor _ in '_' * int(input()):\n    input()\n    print(solve(sorted([*map(int, input().split())])) % 998244353)", "def cc(n):\n    su = 1\n    for i in range(1, n + 1):\n        su *= i\n        su %= 998244353\n    return su\nn = int(input())\nfor _ in range(n):\n    nn = int(input())\n    arr = [int(c) for c in input().split()]\n    arr.sort(reverse=True)\n    co = arr[0] - arr[1]\n    if co > 1:\n        print(0)\n    elif co == 0:\n        aa = cc(nn)\n        print(int(aa))\n    else:\n        kk = arr.count(arr[0] - 1)\n        aa = cc(nn)\n        bb = cc(kk)\n        for j in range(1, nn - kk):\n            bb *= kk + 1 + j\n            bb %= 998244353\n        print(int(aa - bb) % 998244353)", "t = int(input())\nfor w in range(t):\n    n = int(input())\n    N = list(map(int, input().split()))\n    firstMaximum = 0\n    secondMaximum = 0\n    for i in range(n):\n        if N[i] > firstMaximum:\n            secondMaximum = firstMaximum\n            firstMaximum = N[i]\n        elif N[i] > secondMaximum:\n            secondMaximum = N[i]\n    firstMaxCount = 0\n    secondMaxCount = 0\n    for i in range(n):\n        if N[i] == firstMaximum:\n            firstMaxCount += 1\n        elif N[i] == secondMaximum:\n            secondMaxCount += 1\n    if firstMaxCount > 1:\n        res = 1\n        for i in range(1, n + 1):\n            res *= i\n            res %= 998244353\n        print(res)\n    elif firstMaximum != secondMaximum + 1:\n        print(0)\n    else:\n        res = 1\n        for i in range(1, n + 1):\n            if i == secondMaxCount + 1:\n                continue\n            res *= i\n            res %= 998244353\n        res *= secondMaxCount\n        res %= 998244353\n        print(res)", "from math import factorial\nv = 2 * 10 ** 5 + 1\nfact = [1] * v\nmod = 998244353\nfor i in range(1, v):\n    fact[i] = fact[i - 1] * i\n    fact[i] = fact[i] % mod\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    maxi = max(a)\n    if maxi == 1:\n        print(fact[n])\n    elif a.count(maxi) > 1:\n        print(fact[n])\n    elif a.count(maxi - 1) == 0:\n        print('0')\n    else:\n        smaxi = a.count(maxi - 1)\n        ans = fact[n] * smaxi * pow(smaxi + 1, -1, mod)\n        print(ans % mod)", "(P, fac) = (998244353, [1] * 200005)\nfor i in range(1, len(fac)):\n    fac[i] = fac[i - 1] * i % P\nfor _ in range(int(input())):\n    (n, a) = (int(input()), list(map(int, input().split())))\n    m = max(a)\n    print(fac[n] * (a.count(m) > 1 or 1 - pow(a.count(m - 1) + 1, P - 2, P) + P) % P)", "for _ in range(int(input())):\n    mod = 998244353\n    n = int(input())\n    arr = list(map(int, input().split()))\n    max_arr = max(arr)\n    count_mx = arr.count(max_arr)\n    k = arr.count(max_arr - 1)\n    res = 1\n    tmp = 1\n    for i in range(1, n + 1):\n        res = res * i % mod\n        if i != k + 1:\n            tmp = tmp * i % mod\n    if count_mx == 1:\n        res = (res - tmp) % mod\n    print(res % mod)", "big = 998244353\nN = int(input())\nfor test in range(N):\n    n = int(input())\n    alpha = list(map(int, input().split()))\n    maxx = max(alpha)\n    count = 0\n    for i in alpha:\n        if i == maxx:\n            count += 1\n    if count > 1:\n        ans = 1\n        for i in range(1, n + 1):\n            ans = ans * i % big\n        print(ans)\n    else:\n        count2 = 0\n        for i in alpha:\n            if i == maxx - 1:\n                count2 += 1\n        ans = 1\n        for i in range(1, n + 1):\n            ans = ans * i % big\n        temp = 1\n        for i in range(1, n + 1):\n            if i != count2 + 1:\n                temp = temp * i % big\n        if ans - temp < 0:\n            print((ans - temp + big) % big)\n        else:\n            print(ans - temp)", "t = int(input())\nmod = 998244353\nfor asdad in range(t):\n    mx = 0\n    mcnt = 0\n    n = int(input())\n    liste = [-1]\n    for a in input().split():\n        liste.append(int(a))\n        mx = max(mx, int(a))\n    mcnt = liste.count(mx)\n    (p, b) = (1, 1)\n    ans = 1\n    if mcnt == 1:\n        mcnt = liste.count(mx - 1)\n        p = mcnt + 1\n        b = mcnt\n    for i in range(1, n + 1):\n        if i == p:\n            ans = ans * b % mod\n        else:\n            ans = ans * i % mod\n    print(ans)", "MOD = 998244353\n\ndef factorial(n):\n    r = 1\n    for i in range(2, n + 1):\n        r = r * i % MOD\n    return r\n\ndef f(a, b):\n    r = 1\n    for i in range(a, b + 1):\n        r = r * i % MOD\n    return r\nfrom collections import Counter\nfrom math import comb as comb\n\ndef solve(n, ais):\n    ais.sort(reverse=True)\n    freq = Counter(ais)\n    max = ais[0]\n    count_max = freq[max]\n    if count_max > 1:\n        return factorial(n)\n    secmax = ais[1]\n    if secmax + 1 < max:\n        return 0\n    count_secmax = freq[secmax]\n    not_nice = f(count_max + count_secmax + 1, n) * factorial(count_secmax)\n    return (MOD + factorial(n) - not_nice) % MOD\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    ais = list(map(int, input().split()))\n    print(solve(n, ais))", "from math import *\nk = 998244353\np = [1] * (2 * 10 ** 5 + 1)\nfor i in range(2, len(p)):\n    p[i] = i % k * p[i - 1] % k\n\ndef power(x, y, m):\n    if y == 0:\n        return 1\n    p = power(x, y // 2, m) % m\n    p = p * p % m\n    if y % 2 == 0:\n        return p\n    else:\n        return x * p % m\n\ndef mi(a, m):\n    return power(a, m - 2, m)\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    if a.count(m) > 1:\n        print(p[n])\n    else:\n        s = -1\n        c = 0\n        for i in a:\n            if i != m and i > s:\n                s = i\n                c = 1\n            elif i != m and i == s:\n                c += 1\n        if m - s > 1:\n            print(0)\n        else:\n            m = p[n] * (c % k) * mi(c + 1, k) % k\n            print(m)", "(P, fac) = (998244353, [1])\nfor i in range(1, 2 ** 18):\n    fac += [fac[-1] * i % P]\nfor _ in range(int(input())):\n    (n, a) = (int(input()), list(map(int, input().split())))\n    print(fac[n] * (a.count((m := max(a))) > 1 or 1 - pow(a.count(m - 1) + 1, P - 2, P) + P) % P)", "import sys\nimport math\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    cnt = {}\n    m = 998244353\n    mv = max(arr)\n    smv = -1\n    for i in range(n):\n        if arr[i] not in cnt:\n            cnt[arr[i]] = 0\n        cnt[arr[i]] += 1\n        if arr[i] < mv:\n            smv = max(smv, arr[i])\n    if smv == -1 or cnt[mv] >= 2:\n        ans = 1\n        for j in range(1, n + 1):\n            ans *= j\n            ans %= m\n        return ans % m\n    elif mv - smv == 1:\n        num = cnt[smv]\n        ans = 1\n        inc = 1\n        for j in range(1, n + 1):\n            ans *= j\n            ans %= m\n            if j != num + 1:\n                inc *= j\n                inc %= m\n        return (ans - inc) % m\n    else:\n        return 0\nfor _ in range(int(input())):\n    print(main())", "MOD = 998244353\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(c) for c in input().split()]\n    mx = max(arr)\n    cmx = arr.count(mx)\n    k = arr.count(mx - 1)\n    ans = 1\n    sub = 1\n    for i in range(1, n + 1):\n        ans = ans * i % MOD\n        if i != k + 1:\n            sub = sub * i % MOD\n    if cmx == 1:\n        ans = (ans - sub + MOD) % MOD\n    print(ans)", "import math\nmod = 998244353\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if a[-1] == a[-2]:\n        ans = 1\n        for j in range(1, n + 1):\n            ans *= j\n            ans %= mod\n        print(ans)\n    elif a[-1] - a[-2] >= 2:\n        print(0)\n    else:\n        x = a.count(a[-2])\n        ans = 1\n        for j in range(1, n + 1):\n            if j == x + 1:\n                ans *= j - 1\n            else:\n                ans *= j\n            ans %= mod\n        print(ans)", "t = int(input())\nmod = 998244353\nfor asdad in range(t):\n    mx = 0\n    mcnt = 0\n    n = int(input())\n    liste = [-1]\n    for a in input().split():\n        liste.append(int(a))\n        mx = max(mx, int(a))\n    mcnt = liste.count(mx)\n    (p, b) = (1, 1)\n    ans = 1\n    if mcnt == 1:\n        mcnt = liste.count(mx - 1)\n        p = mcnt + 1\n        b = mcnt\n    for i in range(1, n + 1):\n        if i == p:\n            ans = ans * b % mod\n        else:\n            ans = ans * i % mod\n    print(ans)", "def sol():\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    m = 998244353\n    fact = (n + 1) * [0]\n    fact[0] = 1\n    for i in range(1, n + 1):\n        fact[i] = fact[i - 1] * i % m\n    if n == 1:\n        return 1\n    cnt = dict()\n    maksi = 0\n    for el in arr:\n        cnt[el] = cnt.get(el, 0) + 1\n        maksi = max(maksi, el)\n    if cnt[maksi] != 1:\n        return fact[n]\n    if maksi - 1 not in cnt:\n        return 0\n    rozne = cnt[maksi - 1]\n    inne = n - 1 - rozne\n    lewa = 1\n    ans = 0\n    for i in range(n, rozne, -1):\n        ans = (ans + fact[rozne + inne] * lewa) % m\n        lewa = lewa * inne % m\n        inne -= 1\n    return (fact[n] - ans) % m\n\ndef main():\n    for i in range(int(input())):\n        print(sol())\nmain()", "LIM = 200005\nMOD = 998244353\ndp = [1] * LIM\nfor i in range(2, LIM):\n    dp[i] = dp[i - 1] * i % MOD\ninv = [0] * LIM\ninv[-1] = pow(dp[-1], -1, mod=MOD)\nfor i in range(LIM - 2, -1, -1):\n    inv[i] = inv[i + 1] * (i + 1) % MOD\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if a[-1] - a[-2] > 1:\n        print(0)\n    else:\n        if a[-1] == a[-2]:\n            for i in range(1, n + 1):\n                print(dp[n])\n                return\n        k = a.count(a[-2])\n        ans = k * dp[n] * pow(k + 1, -1, mod=MOD) % MOD\n        print(ans)\nt = int(input())\nfor _ in range(t):\n    solve()", "LIM = 200005\nMOD = 998244353\ndp = [1] * LIM\nfor i in range(2, LIM):\n    dp[i] = dp[i - 1] * i % MOD\ninv = [0] * LIM\ninv[-1] = pow(dp[-1], -1, mod=MOD)\nfor i in range(LIM - 2, -1, -1):\n    inv[i] = inv[i + 1] * (i + 1) % MOD\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if a[-1] - a[-2] > 1:\n        print(0)\n        return\n    else:\n        if a[-1] == a[-2]:\n            print(dp[n])\n            return\n        k = a.count(a[-2])\n        res = k * dp[k]\n        x = n - 1 - k\n        y = n\n        while x > 0:\n            res = res * y % MOD\n            x -= 1\n            y -= 1\n        print(res % MOD)\n        return\nt = int(input())\nfor _ in range(t):\n    solve()", "m = int(998244353)\nX = 2 * 10 ** 5\nfactorial = [1]\nfor k in range(1, X + 1):\n    factorial.append(factorial[-1] * k % m)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    sorted_ls = sorted(ls)\n    if sorted_ls[-1] - sorted_ls[-2] > 1:\n        print(0)\n    elif sorted_ls[-1] - sorted_ls[-2] == 0:\n        print(factorial[n])\n    else:\n        total_possible = factorial[n]\n        max_element = sorted_ls[-1]\n        reduced = 0\n        diff_greater_one = 0\n        local_fac = [1]\n        for i in range(1, n):\n            x = local_fac[-1] * i % m\n            local_fac.append(x)\n        for k in range(n - 1):\n            if max_element - sorted_ls[k] > 1:\n                diff_greater_one += 1\n        diff_one = n - 1 - diff_greater_one\n        lk = [1]\n        for k in range(1, diff_greater_one + 1):\n            temp = lk[-1] * ((diff_greater_one - k + 1) % m) % m\n            lk.append(temp)\n        for k in range(diff_greater_one + 1):\n            temp = local_fac[n - 1 - k] * lk[k] % m\n            reduced += temp\n        answer = (total_possible - reduced) % m\n        print(answer)", "MOD = 998244353\nN = 200006\nfact = [0 for _ in range(N)]\ninvfact = [0 for _ in range(N)]\nfact[0] = 1\nfor i in range(1, N):\n    fact[i] = fact[i - 1] * i % MOD\ninvfact[N - 1] = pow(fact[N - 1], MOD - 2, MOD)\nfor i in range(N - 2, -1, -1):\n    invfact[i] = invfact[i + 1] * (i + 1) % MOD\n\ndef nCk(n, k):\n    if k < 0 or n < k:\n        return 1\n    else:\n        return fact[n] * invfact[k] * invfact[n - k] % MOD\n\ndef nHk(n, k):\n    return nCk(n + k - 1, k)\nimport sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    maxist = -1\n    secist = -1\n    for i in range(n):\n        maxist = max(maxist, a[i])\n    sum = 0\n    sux = 0\n    for i in range(n):\n        if a[i] == maxist:\n            sum += 1\n        else:\n            secist = max(secist, a[i])\n    for i in range(n):\n        if a[i] == secist:\n            sux += 1\n    if sum > 1:\n        print(fact[n])\n        return\n    if maxist - secist > 1:\n        print(0)\n        return\n    ans = 0\n    for i in range(0, n - sux):\n        ans += fact[n - 1 - i] * fact[i] * nCk(n - sux - 1, i)\n    print((fact[n] - ans) % MOD)\nfor _ in range(int(input())):\n    main()", "import math\nfac = [1]\nmod = 998244353\nfor i in range(1, 5 * 10 ** 5):\n    val = fac[-1] % mod * i % mod\n    val %= mod\n    fac.append(val)\n\ndef nCr(a, b):\n    second_val = fac[a - b] * fac[b]\n    return pow(fac[a], 1, mod) * pow(second_val, -1, mod)\n\ndef main(arr):\n    arr.sort()\n    n = len(arr)\n    if arr[-1] - arr[-2] > 2:\n        return 0\n    if arr[-1] - arr[-2] == 0:\n        return fac[n]\n    less = 0\n    max_val = arr[-1]\n    for e in arr:\n        if e + 1 == max_val:\n            less += 1\n    ans = fac[n]\n    for i in range(less, n):\n        nums = n - i - 1\n        val = nCr(n - less - 1, nums) * fac[nums] * fac[i] % mod\n        ans -= val\n    return ans % mod\nt = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = main(arr)\n    ans.append(s)\nfor e in ans:\n    print(e)"]