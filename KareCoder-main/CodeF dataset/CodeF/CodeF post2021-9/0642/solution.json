["import sys\n\ndef read(f):\n    (n, x, y) = map(int, f.readline().split())\n    a = f.readline().strip()\n    b = f.readline().strip()\n    zs = [i for (i, (c, d)) in enumerate(zip(a, b)) if c != d]\n    return (zs, x, y)\n\ndef solve():\n    (zs, x, y) = read(sys.stdin)\n    if len(zs) % 2 != 0:\n        print(-1)\n        return\n    if len(zs) == 0:\n        print(0)\n        return\n    if x >= y:\n        if len(zs) == 2 and zs[0] + 1 == zs[1]:\n            print(min(x, 2 * y))\n        else:\n            print(len(zs) // 2 * y)\n    else:\n        f = []\n        for (i, z) in enumerate(zs):\n            if i == 0:\n                cur = y\n            elif i == 1:\n                cur = min(2 * y, 2 * x * (z - zs[0]))\n            else:\n                cur = min(2 * x * (z - zs[i - 1]) + f[i - 2], y + f[i - 1])\n            f.append(cur)\n        print(f[-1] // 2)\n\ndef main():\n    T = int(input().strip())\n    for t in range(1, T + 1):\n        solve()\nmain()", "import sys\n\ndef read(f):\n    (n, x, y) = map(int, f.readline().split())\n    a = f.readline().strip()\n    b = f.readline().strip()\n    zs = [i for (i, (c, d)) in enumerate(zip(a, b)) if c != d]\n    return (zs, x, y)\n\ndef solve():\n    (zs, x, y) = read(sys.stdin)\n    if len(zs) % 2 != 0:\n        print(-1)\n        return\n    if len(zs) == 0:\n        print(0)\n        return\n    if x >= y:\n        if len(zs) == 2 and zs[0] + 1 == zs[1]:\n            print(min(x, 2 * y))\n        else:\n            print(len(zs) // 2 * y)\n    else:\n        f = []\n        for (i, z) in enumerate(zs):\n            if i == 0:\n                cur = y\n            elif i == 1:\n                cur = min(2 * y, 2 * x * (z - zs[0]))\n            else:\n                cur = min(2 * x * (z - zs[i - 1]) + f[i - 2], y + f[i - 1])\n            f.append(cur)\n        print(f[-1] // 2)\n\ndef main():\n    T = int(input().strip())\n    for t in range(1, T + 1):\n        solve()\nmain()", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, x, y) = map(int, input().split())\n    A = input().strip()\n    B = input().strip()\n    diff = []\n    for i in range(n):\n        if A[i] != B[i]:\n            diff.append(i)\n    m = len(diff)\n    if x >= y:\n        if m % 2:\n            return -1\n        elif m == 2:\n            return y if diff[0] + 1 < diff[1] else min(2 * y, x)\n        else:\n            return y * (m // 2)\n    elif m % 2:\n        return -1\n    elif m == 0:\n        return 0\n    else:\n        dp = [[0, 0] for _ in range(m + 1)]\n        dp[-1] = [0, float('inf')]\n        dp[-2] = [float('inf'), y]\n        for i in range(m - 2, -1, -1):\n            dp[i][0] = min((diff[i + 1] - diff[i]) * x + dp[i + 2][0], dp[i + 1][1])\n            dp[i][1] = min((diff[i + 1] - diff[i]) * x + dp[i + 2][1], y + dp[i + 1][0])\n        return dp[0][0]\nfor _ in range(int(input())):\n    print(solve())", "from re import A\n\ndef cal(l):\n    if len(l) == 0:\n        return 0\n    if len(l) == 2:\n        if l[1] - l[0] == 1:\n            return min(x, 2 * y)\n        else:\n            return min(y, x * (l[1] - l[0]))\n    if y <= x:\n        return len(l) // 2 * y\n    else:\n        (a, b) = (0, 0)\n        for i in range(len(l) - 1):\n            d = a\n            c = max(a, b + max(y - x * (l[i + 1] - l[i]), 0))\n            (a, b) = (c, d)\n        return len(l) // 2 * y - a\nfor _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    a = input()\n    b = input()\n    l = []\n    for i in range(n):\n        if a[i] != b[i]:\n            l.append(i)\n    if len(l) % 2 == 0:\n        print(cal(l))\n    else:\n        print(-1)", "def cal():\n    if len(p) == 0:\n        return 0\n    if len(p) == 2:\n        if p[1] == p[0] + 1:\n            return min(x, 2 * y)\n        else:\n            return min(y, x * (p[1] - p[0]))\n    if y <= x:\n        return len(p) // 2 * y\n    else:\n        (a, b) = (0, 0)\n        for i in range(len(p) - 1):\n            d = a\n            c = max(a, b + max(y - x * (p[i + 1] - p[i]), 0))\n            (a, b) = (c, d)\n        return len(p) // 2 * y - a\nfor jj in range(int(input())):\n    (n, x, y) = [int(i) for i in input().split()]\n    a = input()\n    b = input()\n    p = []\n    for i in range(n):\n        if a[i] != b[i]:\n            p.append(i)\n    if len(p) % 2 == 1:\n        print(-1)\n    else:\n        print(cal())", "from functools import lru_cache\nimport sys\nsys.setrecursionlimit(10 ** 7)\nfor _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    s1 = input()\n    s2 = input()\n    count = 0\n    arr = []\n    for i in range(n):\n        if s1[i] != s2[i]:\n            count += 1\n            arr.append(i)\n    if count == 0:\n        print(0)\n        continue\n    if count & 1:\n        print(-1)\n        continue\n    if x >= y:\n        if count == 2 and arr[0] + 1 == arr[1]:\n            if n >= 4:\n                if 2 * y < x:\n                    print(2 * y)\n                else:\n                    print(x)\n            else:\n                print(y)\n        else:\n            print(count // 2 * y)\n        continue\n    n = len(arr)\n\n    @lru_cache(None)\n    def fun(pre, i):\n        if pre == -1:\n            if i + 2 < n:\n                return min(fun(1, i + 3) + (arr[i + 2] - arr[i + 1]) * x, fun(-1, i + 2) + min((arr[i + 1] - arr[i]) * x, y))\n            else:\n                return min((arr[i + 1] - arr[i]) * x, y)\n        elif i + 1 < n:\n            return min(fun(pre, i + 2) + (arr[i + 1] - arr[i]) * x, fun(-1, i + 1) + y)\n        else:\n            return y\n    print(fun(-1, 0))", "def solve():\n    if len(p) == 0:\n        return 0\n    if len(p) == 2:\n        if p[1] == p[0] + 1:\n            return min(x, 2 * y)\n        else:\n            return min(y, x * (p[1] - p[0]))\n    if y <= x:\n        return len(p) // 2 * y\n    else:\n        (a, b) = (0, 0)\n        for i in range(len(p) - 1):\n            d = a\n            c = max(a, b + max(y - x * (p[i + 1] - p[i]), 0))\n            (a, b) = (c, d)\n        return len(p) // 2 * y - a\nfor jj in range(int(input())):\n    (n, x, y) = [int(i) for i in input().split()]\n    a = input()\n    b = input()\n    p = []\n    for i in range(n):\n        if a[i] != b[i]:\n            p.append(i)\n    if len(p) % 2 == 1:\n        print(-1)\n    else:\n        print(solve())"]