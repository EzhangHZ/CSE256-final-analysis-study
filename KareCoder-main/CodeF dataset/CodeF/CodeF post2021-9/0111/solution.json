["for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    c = 0\n    for i in range(n):\n        if s[i] == 'Q':\n            c = c + 1\n        elif c == 0:\n            c = 0\n        else:\n            c = c - 1\n    if c != 0:\n        print('No')\n    else:\n        print('Yes')", "input = __import__('sys').stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    stack = []\n    for i in range(n):\n        if s[i] == 'Q':\n            stack.append('Q')\n        try:\n            if s[i] == 'A':\n                stack.pop()\n        except IndexError:\n            continue\n    if stack:\n        print('No')\n    else:\n        print('Yes')", "def check():\n    n = int(input())\n    s = input()\n    count = 0\n    for i in range(len(s)):\n        if s[i] == 'Q':\n            count += 1\n        elif count >= 1:\n            count -= 1\n    if count == 0:\n        print('Yes')\n    else:\n        print('No')\n\ndef main():\n    test_cases = int(input())\n    for i in range(test_cases):\n        check()\nmain()", "def function(t, s):\n    Q = 0\n    for i in s:\n        if i == 'A':\n            if Q > 0:\n                Q -= 1\n        elif i == 'Q':\n            Q += 1\n    return 'Yes' if Q <= 0 else 'No'\nl = int(input())\nwhile l > 0:\n    l -= 1\n    n = int(input())\n    s = input()\n    print(function(n, s))", "t = int(input())\nlist = []\nfor i in range(t):\n    w = int(input())\n    QA = input()\n    count = 0\n    for e in QA:\n        if e == 'Q':\n            count += 1\n        elif count > 0:\n            count -= 1\n    if count == 0:\n        list.append('Yes')\n    else:\n        list.append('No')\nfor e in list:\n    print(e)", "input_count = int(input())\nresult = ''\nfor _ in range(input_count):\n    qa_count = int(input())\n    qa = input()\n    q_count = 0\n    for char in qa:\n        if char == 'Q':\n            q_count += 1\n        elif char == 'A' and q_count > 0:\n            q_count -= 1\n    if q_count == 0:\n        result += 'Yes\\n'\n    else:\n        result += 'No\\n'\nprint(result)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    a = 0\n    valid = True\n    for i in range(n - 1, -1, -1):\n        if s[i] == 'A':\n            a += 1\n        else:\n            if a == 0:\n                valid = False\n                break\n            a -= 1\n    if valid:\n        print('Yes')\n    else:\n        print('No')", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    s = input()\n    q = 0\n    a = 0\n    for i in s:\n        if i == 'Q':\n            q += 1\n        else:\n            q -= 1\n            if q < 0:\n                q = 0\n    if q > 0:\n        print('No')\n    else:\n        print('Yes')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    x = 0\n    for i in s:\n        if i == 'Q':\n            x += 1\n        else:\n            x = max(0, x - 1)\n    if x == 0:\n        print('Yes')\n    else:\n        print('No')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    cnt = 0\n    for c in s:\n        if c == 'Q':\n            cnt += 1\n        elif cnt > 0:\n            cnt -= 1\n    if cnt == 0:\n        print('Yes')\n    else:\n        print('No')", "def check(arr):\n    tot = 0\n    for i in arr:\n        if i == 'Q':\n            if tot < 0:\n                tot = 0\n            tot += 1\n        else:\n            tot -= 1\n    if tot <= 0:\n        print('Yes')\n    else:\n        print('No')\nt = int(input())\nfor _ in range(t):\n    n = input()\n    arr = input()\n    check(arr)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    (cq, ca) = (0, 0)\n    didnt = False\n    for c in reversed(s):\n        if c == 'Q':\n            cq += 1\n        else:\n            ca += 1\n        if cq > ca:\n            print('No')\n            didnt = True\n            break\n    if not didnt:\n        print('Yes')", "num = int(input(''))\nwhile num:\n    num = num - 1\n    w = int(input(''))\n    b = input('')\n    flag = 0\n    if b[0] == 'A' or b[-1] == 'Q':\n        flag = 1\n        print('No')\n    else:\n        for (index, each_char) in enumerate(b):\n            n = w - index\n            if each_char == 'Q':\n                q = b[index:].count('Q')\n                a = n - q\n                if q > a:\n                    flag = 1\n                    print('No')\n                    break\n                else:\n                    pass\n            else:\n                pass\n    if flag == 0:\n        print('Yes')", "for _ in range(int(input())):\n    k = int(input())\n    s = input()\n    if s[-1] != 'A':\n        print('No')\n        continue\n    ix = 0\n    yi = 0\n    checkjbdshjdhbjsdjk = 0\n    for i in range(k - 1, -1, -1):\n        if s[i] == 'A':\n            yi += 1\n        else:\n            ix += 1\n        if ix > yi:\n            print('No')\n            checkjbdshjdhbjsdjk = 1\n            break\n    if not checkjbdshjdhbjsdjk:\n        print('Yes')", "t = int(input(''))\nfor i in range(t):\n    n = int(input(''))\n    s = input('')\n    a = 0\n    q = 0\n    e = 0\n    for i in range(n - 1, -1, -1):\n        if s[i] == 'Q':\n            q += 1\n        else:\n            a += 1\n        if q > a:\n            print('No')\n            e = 1\n            break\n    if e == 0:\n        print('Yes')", "def func(n, s):\n    count = 0\n    for ch in s:\n        count += 1 if ch == 'Q' else -1\n        count = max(0, count)\n    return count == 0\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    s = list(input())\n    print('Yes' if func(n, s) else 'No')", "class Sol:\n\n    def pattern(self, string):\n        count = 0\n        for i in string:\n            if i == 'Q':\n                count = count - 1\n            else:\n                count = count + 1\n            count = min(count, 0)\n        if count < 0:\n            print('No')\n        else:\n            print('Yes')\nobj = Sol()\ntestcases = int(input())\nfor i in range(testcases):\n    length = int(input())\n    string = input()\n    obj.pattern(string)", "def solve():\n    _ = int(input())\n    t = input()\n    ctn = 0\n    for i in t:\n        if i == 'Q':\n            ctn += 1\n        else:\n            ctn -= 1\n        if ctn < 0:\n            ctn = 0\n    return 'Yes' if ctn == 0 else 'No'\nt = int(input())\nfor _ in range(t):\n    print(solve())", "N = int(input())\ncases = []\nfor i in range(N):\n    cases.append([int(input()), input()])\n\ndef main():\n    for case in cases:\n        l = case[0]\n        dialog = case[1]\n        Qs = 0\n        for i in range(l):\n            if dialog[i] == 'Q':\n                Qs += 1\n            elif dialog[i] == 'A':\n                if Qs >= 1:\n                    Qs -= 1\n                else:\n                    Qs = 0\n        if Qs == 0:\n            print('Yes')\n        else:\n            print('No')\nmain()", "t = input()\nt = int(t)\nanswers = []\nfor i in range(t):\n    n = input()\n    n = int(n)\n    aq = 0\n    messages = input()\n    for j in range(n):\n        if messages[j] == 'Q':\n            aq += 1\n        elif aq != 0:\n            aq -= 1\n    answers.append('Yes' if aq == 0 else 'No')\nfor i in range(t):\n    print(answers[i])", "def solve(n, string):\n    if string[0] != 'Q':\n        return 'No'\n    a = 0\n    q = 0\n    for c in string[::-1]:\n        if c == 'Q':\n            q += 1\n        elif c == 'A':\n            a += 1\n        if q > a:\n            return 'No'\n    return 'Yes'\n\ndef main():\n    for t in range(int(input())):\n        n = int(input())\n        string = input()\n        print(solve(n, string))\nmain()", "for t in [*open(0)][2::2]:\n    c = 0\n    for x in t[:-1]:\n        c = max(0, c + 2 * (x > 'A') - 1)\n    print('YNeos'[c > 0::2])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    k = 0\n    for j in range(len(s)):\n        if s[j] == 'Q':\n            k += 1\n        else:\n            k -= 1\n            if k < 0:\n                k = 0\n    if k > 0:\n        print('No')\n    else:\n        print('Yes')", "start = int(input())\na = 0\nq = 0\nfor x in range(start):\n    a = 0\n    q = 0\n    how_many = int(input())\n    text = input()\n    text = text.lower()\n    for x in range(how_many):\n        if text[x] == 'a':\n            if q > 0:\n                q = q - 1\n        else:\n            q += 1\n    if q == 0:\n        print('Yes')\n    else:\n        print('No')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    count = 0\n    inpt = input()\n    for chr in inpt:\n        if chr == 'Q':\n            count += 1\n        elif chr == 'A':\n            count -= 1\n        if count < 0:\n            count = 0\n    if count == 0:\n        print('Yes')\n    else:\n        print('No')", "testCases = int(input())\nresults = []\nfor i in range(testCases):\n    num = int(input())\n    QA = ''\n    Q = []\n    while len(QA) < num:\n        QA = input()\n    for j in QA:\n        if j == 'Q':\n            Q.append(j)\n        elif len(Q) != 0:\n            Q.pop()\n    if len(Q) > 0:\n        results.append('No')\n    else:\n        results.append('Yes')\nfor res in results:\n    print(res)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    ans = 0\n    for i in s:\n        if i == 'Q':\n            ans += 1\n        elif ans != 0:\n            ans -= 1\n    if ans != 0:\n        print('No')\n    else:\n        print('Yes')", "n = int(input())\na = []\nfor i in range(n):\n    l = int(input())\n    b = input()\n    q = b.count('Q')\n    aa = b.count('A')\n    h = 0\n    if q <= aa and b[-1] != 'Q':\n        for j in range(len(b)):\n            if b[j] == 'Q':\n                h += 1\n            else:\n                h -= 1\n            if h < 0:\n                h = 0\n        if h == 0:\n            a.append('Yes')\n        else:\n            a.append('No')\n    else:\n        a.append('No')\nfor i in a:\n    print(i, end='\\n')", "import sys\ninput = sys.stdin.readline\n\ndef readList():\n    return list(map(int, input().split()))\n\ndef readInt():\n    return int(input())\n\ndef readInts():\n    return map(int, input().split())\n\ndef readStr():\n    return input().strip()\n\ndef solve():\n    n = readInt()\n    S = readStr()\n    cnt = 0\n    for i in range(n - 1, -1, -1):\n        if S[i] == 'A':\n            cnt += 1\n        else:\n            cnt -= 1\n            if cnt < 0:\n                return 'No'\n    return 'Yes'\nfor _ in range(int(input())):\n    print(solve())", "for i in range(int(input())):\n    n = int(input())\n    s = list(input())\n    l = []\n    for i in s:\n        if i == 'Q':\n            l.append('a')\n        if i == 'A' and len(l) > 0:\n            l.pop(-1)\n    if len(l) == 0:\n        print('Yes')\n    else:\n        print('No')", "t = int(input())\nfor x in range(t):\n    num = 0\n    n = int(input())\n    dialog = input()\n    for i in range(n):\n        if dialog[-i - 1] == 'A':\n            num += 1\n        else:\n            num -= 1\n        if num < 0:\n            print('No')\n            break\n        if i == n - 1 and num >= 0:\n            print('Yes')", "t = int(input())\nnum = 0\nwhile num < t:\n    n = input()\n    if 'Q' not in n and 'A' not in n:\n        pass\n    else:\n        num += 1\n        count = 0\n        for i in n:\n            if i == 'Q':\n                count += 1\n            elif count > 0:\n                count -= 1\n        if count == 0:\n            print('Yes')\n        else:\n            print('No')", "cases = int(input())\noutputs = []\nfor i in range(cases):\n    n = int(input())\n    messages = input()\n    count = 0\n    doubleup = False\n    for j in range(n):\n        if messages[j] == 'Q':\n            count += 1\n        if messages[j] == 'A':\n            if count == 0:\n                continue\n            else:\n                count -= 1\n    if count > 0:\n        outputs.append('No')\n    else:\n        outputs.append('Yes')\nfor i in range(len(outputs)):\n    print(outputs[i])", "n = int(input())\na = []\nfor i in range(n):\n    l = int(input())\n    b = input()\n    q = b.count('Q')\n    aa = b.count('A')\n    h = 0\n    if q <= aa and b[-1] != 'Q':\n        for j in range(len(b)):\n            if b[j] == 'Q':\n                h += 1\n            else:\n                h -= 1\n            if h < 0:\n                h = 0\n        if h == 0:\n            a.append('Yes')\n        else:\n            a.append('No')\n    else:\n        a.append('No')\nfor i in a:\n    print(i, end='\\n')", "import math\nfor i in range(int(input())):\n    a = int(input())\n    string = str(input())\n    bol = True\n    if string[-1] == 'Q':\n        bol = False\n    elif list(string).count('A') < math.ceil(a / 2):\n        bol = False\n    else:\n        pass\n    if bol:\n        listt = []\n        counter = 1\n        for i in range(len(string) - 1):\n            if string[i] == string[i + 1]:\n                counter += 1\n            else:\n                listt.append(counter)\n                counter = 1\n        listt.append(len(string) - sum(listt))\n        dp1 = 0\n        dp2 = 0\n        for i in range(len(listt) // 2 - 1, -1, -1):\n            dp1 += listt[2 * i + 1]\n            dp2 += listt[2 * i]\n            if dp1 < dp2:\n                bol = False\n                break\n            else:\n                pass\n    if bol:\n        print('Yes')\n    else:\n        print('No')", "def solve():\n    n = int(input())\n    s = list(input())\n    if s[n - 1] == 'Q':\n        print('No')\n    else:\n        ot = 'Yes'\n        i = n - 2\n        l = [0, 1]\n        while i >= 0:\n            if s[i] == 'Q':\n                l[0] += 1\n            else:\n                l[1] += 1\n            if l[0] > l[1]:\n                ot = 'No'\n            i -= 1\n        print(ot)\nt = int(input())\nwhile t > 0:\n    solve()\n    t -= 1", "for i in range(int(input())):\n    n = int(input())\n    stri = input()\n    count = 0\n    for i in range(n):\n        if stri[i] == 'Q':\n            count += 1\n        if stri[i] == 'A':\n            count = 0 if count < 1 else count - 1\n    print('YNeos'[count > 0::2])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    msg = input()\n    x = 0\n    for letter in msg:\n        if letter == 'Q':\n            x += 1\n        else:\n            x = max(0, x - 1)\n    if x == 0:\n        print('Yes')\n    else:\n        print('No')", "n = int(input())\nd = []\nfor i in range(n):\n    len_ = int(input())\n    res = input()\n    if len_ == 1:\n        d.append('No')\n        continue\n    k = 0\n    c = ''\n    for i in res[::-1]:\n        if i == 'Q':\n            k -= 1\n        if i == 'A':\n            k += 1\n        if k < 0:\n            break\n    if k >= 0:\n        c = 'Yes'\n    else:\n        c = 'No'\n    d.append(c)\nfor i in d:\n    print(i)", "class Solution:\n\n    def solve(n: int, line: str):\n        q_lst = []\n        for i in range(n):\n            if line[i] == 'Q':\n                q_lst.append('Q')\n                continue\n            if q_lst:\n                q_lst.pop()\n        if not q_lst:\n            return 'Yes'\n        return 'No'\n\n    def technicalSupp():\n        for i in range(int(input())):\n            num_line = int(input())\n            line = input()\n            print(Solution.solve(num_line, line))\nSolution.technicalSupp()", "for x in range(int(input())):\n    n = int(input())\n    s = input()\n    q = 0\n    if s[0] == 'A':\n        print('NO')\n    else:\n        for i in s:\n            if i == 'Q':\n                q += 1\n            elif q > 0:\n                q -= 1\n        if q <= 0:\n            print('Yes')\n        else:\n            print('No')", "n = int(input())\nans = []\nfor i in range(n):\n    stack = []\n    m = int(input())\n    ask = list(input())\n    for j in range(m):\n        if ask[j] == 'Q':\n            stack.append('Q')\n        elif len(stack) > 0:\n            stack.pop()\n    ans.append('Yes' if stack.count('Q') == 0 else 'No')\nfor i in ans:\n    print(i)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input()\n    b = a[::-1]\n    A_count = 0\n    Q_count = 0\n    for i in b:\n        if i == 'Q':\n            Q_count += 1\n        else:\n            A_count += 1\n        if Q_count > A_count:\n            print('No')\n            break\n    else:\n        print('Yes')", "n = int(input())\nlis = []\nfor _ in range(n):\n    k = int(input())\n    s = input()\n    count = 0\n    for i in range(k):\n        if s[i] == 'Q':\n            count -= 1\n        elif s[i] == 'A' and count < 0:\n            count += 1\n    if count >= 0:\n        lis.append('Yes')\n    else:\n        lis.append('No')\nfor elem in lis:\n    print(elem)", "n = int(input())\nfor _ in range(n):\n    l = int(input())\n    s = input()\n    c = 0\n    for i in s:\n        if i == 'Q':\n            c += 1\n        elif c == 0:\n            c = 0\n        else:\n            c -= 1\n    if c > 0:\n        print('No')\n    else:\n        print('Yes')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    st = input()\n    lst = len(st)\n    stri = st[::-1]\n    cra = 0\n    crq = 0\n    flag = 0\n    for i in range(lst):\n        if stri[i] == 'A':\n            cra += 1\n        else:\n            cra -= 1\n        if cra < 0:\n            print('No')\n            flag = 1\n            break\n    if flag == 0:\n        print('Yes')", "test = int(input())\nfor i in range(test):\n    queue_count = int(input())\n    queue = input()\n    q_count = 0\n    for i in queue:\n        if i == 'Q':\n            q_count += 1\n        elif q_count > 0:\n            q_count -= 1\n    if q_count == 0:\n        print('Yes')\n    else:\n        print('No')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    qa = input()\n    count = 0\n    for i in range(0, len(qa)):\n        if qa[i] == 'Q':\n            count += 1\n        elif count > 0:\n            count -= 1\n    if count > 0:\n        print('No')\n    else:\n        print('Yes')", "for i in range(int(input())):\n    _ = input()\n    Q = 0\n    A = 0\n    for c in input():\n        if c == 'Q':\n            Q += 1\n        elif A < Q:\n            A += 1\n    if A >= Q:\n        print('Yes')\n    else:\n        print('No')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    count_Q = 0\n    count_A = 0\n    for i in range(n):\n        if s[i] == 'Q':\n            count_Q += 1\n        else:\n            count_Q -= 1\n            if count_Q <= 0:\n                count_Q = 0\n    if count_Q == 0:\n        print('Yes')\n    else:\n        print('No')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    jada = str(input())\n    jada_list = [str(x) for x in jada]\n    if jada.count('Q') > jada.count('A') or jada[-1] == 'Q':\n        print('No')\n    else:\n        b = True\n        jada_list.reverse()\n        Q = 0\n        A = 0\n        for i in jada_list:\n            if i == 'Q':\n                Q += 1\n            else:\n                A += 1\n            if Q > A:\n                print('No')\n                b = False\n                break\n        if b:\n            print('Yes')", "for i in range(int(input())):\n    num = int(input())\n    a = list(input())\n    t = 0\n    for i in range(len(a) - 1, -1, -1):\n        if a[i] == 'A':\n            t += 1\n        else:\n            t -= 1\n            if t < 0:\n                break\n    if t < 0:\n        print('No')\n    else:\n        print('Yes')", "def solve():\n    t = int(input())\n    while t:\n        t -= 1\n        n = int(input())\n        str = input()\n        q = 0\n        for i in range(len(str)):\n            if str[i] == 'Q':\n                q += 1\n            elif q != 0:\n                q -= 1\n        if q == 0:\n            print('Yes')\n        else:\n            print('No')\nsolve()", "t = int(input())\nfor n in range(t):\n    n = int(input())\n    s = input()\n    count = 0\n    for letter in s:\n        if letter == 'A' and (not count):\n            continue\n        if letter == 'Q':\n            count += 1\n        else:\n            count -= 1\n    if count > 0:\n        print('No')\n    else:\n        print('Yes')", "for _ in range(int(input())):\n    n = int(input())\n    t = list(input())\n    k = 0\n    for x in t:\n        if x == 'Q':\n            k += 1\n        elif k > 0:\n            k -= 1\n    if k == 0:\n        print('Yes')\n    else:\n        print('No')", "def solution(dialog):\n    state = 0\n    for ch in dialog:\n        if ch == 'Q':\n            state += 1\n        elif state > 0:\n            state -= 1\n    if state == 0:\n        print('Yes')\n    else:\n        print('No')\n    return\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    tx = input()\n    solution(tx)", "noOfTestCases = input()\ncharTestCase = []\ntestCase = []\ncnt = 0\nfor i in range(0, int(noOfTestCases)):\n    charTestCase.append(input())\n    testCase.append(input())\nfor testcases in testCase:\n    for chr in testcases:\n        if chr.upper() == 'Q':\n            cnt = cnt + 1\n        elif chr.upper() == 'A':\n            if cnt > 0:\n                cnt = cnt - 1\n    if cnt > 0:\n        print('No')\n    else:\n        print('Yes')\n    cnt = 0", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    s = input()\n    p = 0\n    for ch in s[::-1]:\n        if ch == 'A':\n            p += 1\n        else:\n            p -= 1\n        if p < 0:\n            print('No')\n            break\n    else:\n        print('Yes')", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    s = input()\n    p = 0\n    for ch in s[::-1]:\n        if ch == 'A':\n            p += 1\n        else:\n            p -= 1\n        if p < 0:\n            print('No')\n            break\n    else:\n        print('Yes')", "for i in range(int(input())):\n    n = int(input())\n    li = input()\n    pending = 0\n    for m in li:\n        if m == 'Q':\n            pending += 1\n        elif pending > 0:\n            pending -= 1\n    if pending == 0:\n        print('Yes')\n    else:\n        print('No')", "output = []\n\ndef calc():\n    number = input()\n    string = input()\n    if string.endswith('Q'):\n        output.append('No')\n        return 0\n    q = 0\n    for x in string:\n        if x == 'Q':\n            q += 1\n        elif x == 'A':\n            q = max(q - 1, 0)\n    if q > 0:\n        output.append('No')\n    else:\n        output.append('Yes')\ntest_cases = int(input())\nfor i in range(test_cases):\n    calc()\nfor i in output:\n    print(i)", "output = []\n\ndef calc():\n    number = input()\n    string = input()\n    q = 0\n    for x in string:\n        if x == 'Q':\n            q += 1\n        elif x == 'A':\n            q = max(q - 1, 0)\n    if q > 0:\n        output.append('No')\n    else:\n        output.append('Yes')\ntest_cases = int(input())\nfor i in range(test_cases):\n    calc()\nfor i in output:\n    print(i)", "tst = int(input())\nfor i in range(tst):\n    num = int(input())\n    st = input()\n    nQ = 0\n    nA = 0\n    for j in range(num):\n        if st[j] == 'Q':\n            nQ = nQ + 1\n        else:\n            nQ = nQ - 1\n        if nQ < 0:\n            nQ = 0\n    if nQ == 0:\n        print('Yes')\n    else:\n        print('No')", "n = int(input())\ntemp = []\nfor i in range(n):\n    questions = 0\n    x = int(input())\n    inp = input()\n    for j in range(x):\n        if inp[j] == 'Q':\n            questions = questions + 1\n        elif questions > 0:\n            questions = questions - 1\n    if questions == 0:\n        temp.append('Yes')\n    else:\n        temp.append('No')\nfor k in range(n):\n    print(temp[k])", "import collections\nimport math\nimport sys\nfrom queue import PriorityQueue\n\ndef main(testnumber):\n    n = int(input())\n    s = str(input())\n    q = 0\n    for i in range(len(s)):\n        if s[i] == 'Q':\n            q += 1\n        else:\n            q -= 1\n        if q < 0:\n            q = 0\n    if q == 0:\n        print('Yes')\n    else:\n        print('No')\nt = int(input())\ncnt = 1\nwhile t > 0:\n    main(cnt)\n    cnt += 1\n    t -= 1", "for _ in range(int(input())):\n    n = input()\n    s = input()\n    a = 0\n    for i in s:\n        if i == 'Q':\n            a += 1\n        else:\n            a = max(0, a - 1)\n    print(['Yes', 'No'][a > 0])", "def solve():\n    l = int(input())\n    s = input()\n    q = 0\n    for let in s:\n        if let == 'Q':\n            q += 1\n        else:\n            q = max(0, q - 1)\n    if q:\n        print('No')\n    else:\n        print('Yes')\nt = int(input())\nfor i in range(t):\n    solve()", "def func():\n    n = int(input())\n    s = input()\n    c = 0\n    for i in s:\n        if c < 0:\n            c = 0\n        if i == 'Q':\n            c += 1\n        if i == 'A':\n            c -= 1\n    if c > 0:\n        print('No')\n    else:\n        print('Yes')\nt = int(input())\nfor _ in range(t):\n    func()", "for jj in range(int(input())):\n    n = int(input())\n    s = input()\n    q = 0\n    for i in s:\n        if i == 'Q':\n            q += 1\n        elif q > 0:\n            q -= 1\n    if q == 0:\n        print('Yes')\n    else:\n        print('No')", "from collections import deque\nfor i in range(int(input())):\n    n = int(input())\n    a = list(input())\n    st = 0\n    for i in a:\n        if i == 'Q':\n            st += 1\n        elif i == 'A' and st > 0:\n            st -= 1\n    if st > 0:\n        print('No')\n    else:\n        print('Yes')", "tests = int(input())\nfor test in range(tests):\n    n = int(input())\n    order = input()\n    stack = []\n    for i in range(len(order)):\n        if order[i] == 'Q':\n            stack.append(i)\n        elif order[i] == 'A' and stack:\n            stack.pop()\n    if stack == []:\n        print('Yes')\n    else:\n        print('No')", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    q = 0\n    for c in s:\n        if c == 'Q':\n            q += 1\n        else:\n            q = max(0, q - 1)\n    if q:\n        print('No')\n    else:\n        print('Yes')", "def solve(a, b):\n    m = 0\n    for i in b:\n        if i == 'Q':\n            m = m + 1\n        else:\n            m = max(m - 1, 0)\n    if m < 1:\n        return 'Yes'\n    else:\n        return 'No'\nfor _ in range(int(input())):\n    a = int(input())\n    b = input()\n    print(solve(a, b))", "import sys\nfrom collections import *\nsys.setrecursionlimit(10 ** 5)\nitr = (line for line in sys.stdin.read().strip().split('\\n'))\nINP = lambda : next(itr)\n\ndef ni():\n    return int(INP())\n\ndef nl():\n    return [int(_) for _ in INP().split()]\n\ndef solve():\n    n = ni()\n    s = list(INP())\n    (a, q) = (0, 0)\n    for i in range(n - 1, -1, -1):\n        if s[i] == 'Q':\n            a -= 1\n            if a < 0:\n                print('No')\n                return\n        else:\n            a += 1\n    print('Yes')\n    return\nt = ni()\nfor case in range(t):\n    solve()", "for _ in range(int(input())):\n    l = int(input())\n    s = input()\n    nq = 0\n    na = 0\n    for i in s:\n        if i == 'Q':\n            nq += 1\n        elif i == 'A':\n            if nq > 0:\n                nq -= 1\n    if nq > 0:\n        print('No')\n    else:\n        print('Yes')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    p = 1\n    for i in range(1, len(s)):\n        if s[i] == 'Q':\n            p += 1\n        else:\n            p = max(p - 1, 0)\n    if p:\n        print('No')\n    else:\n        print('Yes')"]