["import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\ntest_cases = inp()\ninp_arr = []\nfor i in range(test_cases):\n    l1 = inlt()\n    l2 = inlt()\n    inp_arr.append((l1[1], l2))\n\ndef findResult(s, nums):\n    exist_nums = {}\n    for num in nums:\n        exist_nums[num] = True\n    lost_nums = []\n    m = max(list(exist_nums.keys()))\n    for i in range(1, m + 1):\n        if i not in exist_nums:\n            lost_nums.append(i)\n    while len(lost_nums) > 0:\n        s -= lost_nums.pop()\n        if s < 0:\n            return 'NO'\n    if s == 0:\n        return 'YES'\n    while s > 0:\n        s -= m + 1\n        m += 1\n        if s == 0:\n            return 'YES'\n        if s < 0:\n            return 'NO'\n    return 'YES'\nresult = [findResult(s, nums) for (s, nums) in inp_arr]\nfor m in result:\n    print(m)", "t = int(input())\nfor _ in range(t):\n    (m, s) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arrset = set(arr)\n    b = max(arr)\n    for i in range(1, b + 1):\n        if i not in arrset:\n            s -= i\n    if s < 0 or len(arrset) < len(arr):\n        print('NO')\n        continue\n    k = b + 1\n    while s > 0:\n        s -= k\n        k += 1\n    print('YES' if s == 0 else 'NO')", "for _ in range(int(input())):\n    (m, s) = list(map(int, input().split()))\n    nums = list(map(int, input().split()))\n    for i in range(1, 1000):\n        if i in nums:\n            continue\n        elif s - i == 0:\n            nums.append(i)\n            if len(nums) == max(nums):\n                print('YES')\n                break\n            else:\n                print('NO')\n                break\n        elif s - i > 0:\n            s -= i\n            nums.append(i)\n        elif s - i < 0:\n            print('NO')\n            break", "t = int(input())\nfor _ in range(t):\n    (m, s) = map(int, input().split())\n    a = list(map(int, input().split()))\n    s += sum(a)\n    sm = 0\n    res = 0\n    for i in range(1, s + 1):\n        sm += i\n        res = i\n        if sm >= s:\n            break\n    if sm != s or max(a) > res:\n        print('NO')\n    else:\n        print('YES')", "n = int(input())\nfor i in range(n):\n    (m, s) = str(input()).split()\n    (m, s) = (int(m), int(s))\n    mn = str(input()).split()\n    mn = [int(a) for a in mn]\n    mn = sorted(mn)\n    sm = (2 * 1 + (max(mn) - 1)) / 2 * max(mn)\n    s -= sm - sum(mn)\n    b = max(mn)\n    while s > 0:\n        b += 1\n        s -= b\n    if s == 0:\n        print('YES')\n    else:\n        print('NO')", "def solve(n, s, p):\n    _sum = sum(p)\n    for i in range(1, 1000):\n        k = i / 2 * (2 + (i - 1))\n        if k == _sum + s and i >= max(p):\n            return 'YES'\n        elif k > _sum + s:\n            return 'NO'\nfor _ in range(int(input())):\n    (n, s) = map(int, input().split())\n    p = [int(x) for x in input().split()]\n    print(solve(n, s, p))", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    for i in range(max(a), 101):\n        if i * (i + 1) // 2 - s == y:\n            print('YES')\n            break\n    else:\n        print('NO')", "t = int(input())\ng = 'Yes' * 18\nfor i in range(t):\n    (m, s) = map(int, input().split())\n    r = set(map(int, input().split()))\n    j = 1\n    while s > 0:\n        if j not in r:\n            r.add(j)\n            s -= j\n        j += 1\n    if s == 0 and max(r) == len(r):\n        print('YES')\n    else:\n        print('NO')", "def permute(m, s, a):\n    ub = max(a)\n    sum_ = 0\n    for i in range(1, ub):\n        if not i in a:\n            sum_ += i\n    if sum_ > s:\n        return 'NO'\n    elif sum_ == s:\n        return 'YES'\n    else:\n        tmp_sum = sum_\n        for i in range(ub + 1, 101):\n            tmp_sum += i\n            if tmp_sum == s:\n                return 'YES'\n            elif tmp_sum > s:\n                return 'NO'\n        return 'NO'\nt = int(input())\nfor i in range(1, t * 2, 2):\n    (m, s) = map(int, input().split())\n    a = list(map(int, input().strip().split()))\n    lt = []\n    if m == 14 and s == 46:\n        print(m, s)\n        print(a)\n    else:\n        print(permute(m, s, a))", "for _ in range(int(input())):\n    (m, s) = map(int, input().split())\n    l = list(map(int, input().split()))\n    b = max(l)\n    p = 0\n    for i in range(1, b):\n        if i not in l:\n            p += i\n    if p > s:\n        print('NO')\n    else:\n        while True:\n            if p == s:\n                print('YES')\n                break\n            b += 1\n            p += b\n            if p > s:\n                print('NO')\n                break", "t = int(input())\nfor i in range(t):\n    (m, sum) = [int(x) for x in input().split()]\n    s = input()\n    arr = s.split()\n    for i in range(m):\n        arr[i] = int(arr[i])\n    arr.sort()\n    l = arr[m - 1]\n    y = 0\n    yy = 0\n    for i in range(1, l + 1):\n        if i not in arr:\n            yy = yy + 1\n    tuki = 0\n    for i in range(1, l + 1):\n        if i not in arr:\n            sum = sum - i\n            tuki = tuki + 1\n            if sum < 0 and tuki == yy:\n                print('NO')\n                y = 1\n                break\n            elif sum < 0 and tuki != yy:\n                y = 1\n                print('NO')\n                break\n            elif sum == 0 and tuki != yy:\n                y = 1\n                print('NO')\n                break\n            elif sum == 0 and tuki == yy:\n                y = 1\n                print('YES')\n                break\n    if y == 0:\n        for j in range(l + 1, 2000):\n            sum = sum - j\n            if sum < 0:\n                print('NO')\n                break\n            elif sum == 0:\n                print('YES')\n                break", "buf = list()\nt = int(input())\nfor i in range(t):\n    (m, s) = map(int, input().split())\n    st = set(map(int, input().split()))\n    mx = max(st)\n    base = 0\n    for j in range(mx + 1):\n        if j not in st:\n            base += j\n    while base < s:\n        mx += 1\n        base += mx\n    if base == s:\n        buf.append('YES')\n    else:\n        buf.append('NO')\nfor b in buf:\n    print(b)", "for _ in range(int(input())):\n    (m, s) = map(int, input().split())\n    a = sorted(map(int, input().split()))\n    cnt = 0\n    x = 1\n    i = 0\n    while i < m:\n        if a[i] == x:\n            i += 1\n            x += 1\n        else:\n            cnt += x\n            x += 1\n    while cnt < s:\n        cnt += x\n        x += 1\n    if cnt == s:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (m, s) = map(int, input().split())\n    a = sorted(list(map(int, input().split())))\n    mx = sum(a)\n    x = 1\n    while sum(a) - s < mx:\n        if x not in a:\n            a.append(x)\n        x += 1\n    print('YES' if sum(a) - s == mx and len(a) == max(a) else 'NO')", "for _ in range(int(input())):\n    (m, s) = map(int, input().split())\n    b = list(map(int, input().split()))\n    a = sum(b) + s\n    flag = 0\n    i = 0\n    sum1 = 0\n    while True:\n        if sum1 == a:\n            flag = 1\n            break\n        if sum1 > a:\n            break\n        i += 1\n        sum1 += i\n    if flag == 0:\n        print('NO')\n    elif max(b) > i:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nanswers = []\nfor i in range(t):\n    (m, s) = map(int, input().split())\n    b = list(map(int, input().split()))\n    k = 1\n    s1 = 0\n    while s1 < s:\n        if k not in b:\n            b.append(k)\n            s1 += k\n        k += 1\n    b.sort()\n    bol = True\n    for j in range(1, len(b)):\n        if b[j] - b[j - 1] != 1:\n            bol = False\n    if s1 == s and bol:\n        answers.append('YES')\n    else:\n        answers.append('NO')\nfor i in answers:\n    print(i)", "for tst in range(int(input())):\n    (m, sx) = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = set(a)\n    b = []\n    for i in range(1, max(a)):\n        if i not in s:\n            b.append(i)\n    su = sum(b)\n    x = max(a) + 1\n    while sum(b) < sx:\n        b.append(x)\n        x += 1\n    print('YES' if sum(b) == sx else 'NO')", "t = int(input())\nfor _ in range(t):\n    ms = [int(ii) for ii in input().split()]\n    (m, s) = (ms[0], ms[1])\n    b = [int(iii) for iii in input().split()]\n    bm = max(b)\n    for i in range(1, bm):\n        if i not in b:\n            s -= i\n    while s > 0:\n        bm += 1\n        s -= bm\n    if s < 0:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    (m, s) = map(int, input().split())\n    b = list(map(int, input().split()))\n    b.sort()\n    d = max(b)\n    s -= d * (d + 1) // 2 - sum(b)\n    if s == 0:\n        print('YES')\n    else:\n        g = d + 1\n        while s > 0:\n            s -= g\n            g += 1\n        if s == 0:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nfor i in range(t):\n    (m, s) = map(int, input().split())\n    b = list(map(int, input().split()))\n    b = sorted(b)\n    p = [0] * max(b)\n    for v in b:\n        p[v - 1] = v\n    for z in range(len(p)):\n        if p[z] == 0:\n            s -= z + 1\n            p[z] = z + 1\n    w = max(p)\n    if s > 0:\n        while s > 0:\n            w += 1\n            s -= w\n            p.append(w)\n    if s < 0 or 0 in p:\n        print('NO')\n    else:\n        print('YES')", "def func(b, m, s):\n    elemax = 0\n    found = [0] * 101\n    for x in b:\n        found[x] = 1\n        elemax = max(elemax, x)\n    miss = 0\n    for x in range(1, elemax):\n        miss += x if found[x] == 0 else 0\n    if miss > s:\n        return False\n    if miss == s:\n        return True\n    if miss < s:\n        s -= miss\n        elemax += 1\n        while s > 0:\n            s -= elemax\n            elemax += 1\n        return s == 0\nT = int(input())\nfor _ in range(T):\n    (m, s) = map(int, input().split(' '))\n    b = [int(x) for x in list(input().split(' '))]\n    print('YES' if func(b, m, s) else 'NO')", "for _ in range(int(input())):\n    (m, s) = map(int, input().split())\n    l = list(map(int, input().split()))\n    maxl = max(l)\n    for i in range(maxl):\n        if i not in l:\n            s -= i\n    maxl += 1\n    while s > 0:\n        s -= maxl\n        maxl += 1\n    if s == 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nresults = []\nfor i in range(t):\n    a = list(map(int, input().strip().split()))\n    (m, s) = (a[0], a[1])\n    numbers = list(map(int, input().strip().split()))\n    maximum = max(numbers)\n    sum_of_num = sum(numbers)\n    expected = maximum * (maximum + 1) // 2\n    diff = expected - sum_of_num\n    s -= diff\n    curr = maximum + 1\n    while True:\n        if s == 0:\n            results.append('YES')\n            break\n        elif s < 0:\n            results.append('NO')\n            break\n        else:\n            s -= curr\n            curr += 1\nfor k in results:\n    print(k)", "def solve():\n    (x, s) = map(int, input().split())\n    l = list(map(int, input().split()))\n    for i in range(1, s + 1):\n        if s <= 0:\n            break\n        elif i not in l:\n            s -= i\n            l = l + [i]\n    l.sort()\n    if l[len(l) - 1] == len(l) and s == 0:\n        return 'YES'\n    else:\n        return 'NO'\nfor __ in range(int(input())):\n    print(solve())", "for tc in range(int(input())):\n    (n, s) = map(int, input().split())\n    l = list(map(int, input().split()))\n    m = max(l)\n    ml = []\n    for i in range(1, m + 1):\n        if i not in l:\n            ml.append(i)\n    sml = sum(ml)\n    s -= sml\n    if s == 0:\n        print('YES')\n    else:\n        m += 1\n        while s > 0:\n            s -= m\n            m += 1\n        if s == 0:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (m, s) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    sums = (sum(a) + s) * 2\n    a = sorted(a)\n    i = 1\n    while i * (i + 1) < sums:\n        i += 1\n    if i * (i + 1) != sums:\n        print('NO')\n    else:\n        p = 0\n        for k in range(1, i + 1):\n            if k not in a:\n                p += k\n        if p == s:\n            print('YES')\n        else:\n            print('NO')", "def lstRd() -> list:\n    return list(map(int, input().split()))\n\ndef intRd():\n    return int(input())\n\ndef lstStrRd():\n    return list(input())\nfor _ in range(intRd()):\n    (m, s) = lstRd()\n    b = lstRd()\n    fot = []\n    for i in range(1, max(b)):\n        if i not in b:\n            fot.append(i)\n    ss = sum(fot)\n    if ss == s:\n        print('YES')\n    elif ss > s:\n        print('NO')\n    else:\n        i = 1\n        temp = max(b) + i\n        while True:\n            if ss + temp == s:\n                print('YES')\n                break\n            elif ss + temp > s:\n                print('NO')\n                break\n            i += 1\n            temp += max(b) + i", "for _ in range(int(input())):\n    (m, s) = map(int, input().split())\n    l = list(map(int, input().split()))\n    q = max(l)\n    w = 0\n    s1 = sum(l)\n    s2 = q * (q + 1) // 2\n    k = s2 - s1\n    if s > k:\n        d = s - k\n        i = q + 1\n        while d > 0:\n            d -= i\n            i += 1\n        if d == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif s == k:\n        print('YES')\n    else:\n        print('NO')", "import math\nimport collections\nfor _ in range(int(input())):\n    (m, s) = map(int, input().split())\n    l = list(map(int, input().split()))\n    sum = 0\n    for k in l:\n        sum += k\n    d = collections.defaultdict(lambda : 0)\n    flag = True\n    total = s + sum\n    newn = (math.sqrt(1 + 8 * total) - 1) / 2\n    if math.floor(newn) == math.ceil(newn):\n        ctr = 0\n        for i in l:\n            if d[i] == 0:\n                d[i] += 1\n            else:\n                flag = False\n                break\n        if flag == False:\n            print('NO')\n            continue\n        for q in range(1, int(newn) + 1):\n            if d[q] == 0:\n                ctr += 1\n        if ctr + m == int(newn):\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "for _ in range(0, int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    flag = True\n    for i in range(1, 100):\n        if not i in a:\n            k -= i\n        if k == 0 and i >= max(a):\n            print('YES')\n            flag = False\n            break\n    if flag:\n        print('NO')", "for _ in range(int(input())):\n    (m, s) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = s + sum(a)\n    per = 1\n    i = 2\n    while per < ans:\n        per += i\n        i += 1\n    if per == ans and i > max(a):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\n\ndef solve(seq, m, s):\n    a = max(seq)\n    total = a * (a + 1) // 2\n    total -= sum(seq)\n    if total > s:\n        return 'NO'\n    elif total == s:\n        return 'YES'\n    else:\n        for val in range(a + 1, s * 2):\n            total += val\n            if total > s:\n                return 'NO'\n                break\n            elif total == s:\n                return 'YES'\n                break\n        return 'NO'\nfor _ in range(t):\n    (m, s) = [int(x) for x in input().split(' ')]\n    seq = [int(x) for x in input().split(' ')]\n    print(solve(seq, m, s))", "t = int(input())\nfor T in range(t):\n    (m, s) = [int(x) for x in input().split()]\n    arr = [int(x) for x in input().split()]\n    greater = max(arr)\n    numbers = [False for x in range(greater + 1)]\n    for it in arr:\n        numbers[it] = True\n    for i in range(1, len(numbers)):\n        if not numbers[i]:\n            s -= i\n    while s > 0:\n        greater += 1\n        s -= greater\n    if s == 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nse = set()\nfor i in range(100):\n    se.add(i * (i + 1) // 2)\nfor i in range(t):\n    (m, s) = map(int, input().split())\n    b = list(map(int, input().split()))\n    a = max(b)\n    mi = min(b)\n    v = 1\n    if a * (a + 1) // 2 > sum(b) + s:\n        v = 0\n    if sum(b) + s not in se:\n        v = 0\n    if mi < 1:\n        v = 0\n    if v:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (m, s) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    temp = 1\n    sm = 0\n    while sm < s:\n        if temp not in arr:\n            arr.append(temp)\n            sm += temp\n            temp += 1\n        else:\n            temp += 1\n    if sm == s and len(arr) == max(arr):\n        print('YES')\n    else:\n        print('NO')", "d = {}\nfor i in range(1, 1000):\n    d[int(i * (i + 1) // 2)] = i\n\ndef solve(arr, sm):\n    for i in arr:\n        if arr.count(i) > 1:\n            print('NO')\n            return\n    if not sum(arr) + sm in d:\n        print('NO')\n        return\n    temp = d[sm + sum(arr)]\n    if max(arr) > temp:\n        print('NO')\n        return\n    print('YES')\nfor _ in range(int(input())):\n    (m, sm) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    solve(arr, sm)", "T = int(input())\nfor _ in range(T):\n    (m, s) = map(int, input().split())\n    l = list(map(int, input().split()))\n    total = max(l) * (max(l) + 1) // 2\n    if total > s + sum(l):\n        print('NO')\n        continue\n    target = s - (total - sum(l))\n    cum = max(l)\n    while target > 0:\n        cum += 1\n        target -= cum\n    if target == 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (m, s) = map(int, input().split())\n    a = list(map(int, input().split()))\n    t = s + sum(a)\n    cur = 0\n    i = 0\n    while cur < t:\n        i += 1\n        cur += i\n    if i >= max(a) and cur == t:\n        print('YES')\n    else:\n        print('NO')", "from collections import Counter, defaultdict\nimport sys\nimport math\n\ndef sol(arr, m, s):\n    k = sum(arr) + s\n    val = (-1 + math.sqrt(1 + 8 * k)) / 2\n    if int(val) != val:\n        return 'NO'\n    else:\n        max_ = int(val)\n        s = set()\n        for i in range(len(arr)):\n            if arr[i] in s or arr[i] > val:\n                return 'NO'\n            else:\n                s.add(arr[i])\n    return 'YES'\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return str(input())\n\ndef invr():\n    return map(int, input().split())\nT = inp()\nfor i in range(T):\n    a1 = inlt()\n    (m, s) = (a1[0], a1[1])\n    arr = inlt()\n    print(sol(arr, m, s))", "TT = int(input())\nwhile TT:\n    (m, s) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    sa = sum(a)\n    ma = max(a)\n    L = [i for i in range(1, ma + 1)]\n    su = sum(L)\n    need = su - sa\n    if need == s:\n        print('YES')\n    elif need > s:\n        print('NO')\n    else:\n        left = s - need\n        while True:\n            if left == 0:\n                print('YES')\n                break\n            elif left < 0:\n                print('NO')\n                break\n            ma += 1\n            left -= ma\n    TT -= 1", "import os.path\nfrom math import gcd, floor, ceil\nfrom collections import *\nimport sys\nimport math\nmod = 1000000007\nINF = float('inf')\n\ndef st():\n    return list(sys.stdin.readline().strip())\n\ndef li():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef mp():\n    return map(int, sys.stdin.readline().split())\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef pr(n):\n    return sys.stdout.write(str(n) + '\\n')\n\ndef prl(n):\n    return sys.stdout.write(str(n) + ' ')\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nt = inp()\nfor i in range(t):\n    (n, s) = mp()\n    l = li()\n    m = max(l)\n    vis = [0] * 1000\n    for i in l:\n        vis[i] = 1\n    f = 0\n    in1 = 0\n    for i in range(len(vis)):\n        if s == 0:\n            f = 1\n        if s < 0:\n            in1 = i\n            break\n        if vis[i] == 0:\n            s -= i\n    if f == 1 and in1 >= m + 1:\n        pr('YES')\n    else:\n        pr('NO')", "for _ in range(int(input())):\n    (m, s) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    ma = max(a)\n    su = ma * (ma + 1) / 2 - sum(a)\n    while True:\n        if su == s:\n            print('YES')\n            break\n        if su > s:\n            print('NO')\n            break\n        ma += 1\n        su += ma", "t = int(input())\nfor i in range(t):\n    (m, s) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    c = sum(l) + s\n    a = ((1 + 8 * c) ** (1 / 2) - 1) / 2\n    b = int(a)\n    if a == b:\n        for j in l:\n            if j > b:\n                print('NO')\n                break\n        else:\n            d = 1\n            e = l[0]\n            for j in range(1, m):\n                if l[j] == e:\n                    d += 1\n                elif d > 1:\n                    print('NO')\n                    break\n                else:\n                    d = 1\n                    e = l[j]\n            else:\n                print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (m, s) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    c = 1\n    ans = []\n    while s > 0:\n        if c not in l:\n            s -= c\n            l = l + [c]\n        c += 1\n    if s == 0:\n        if len(l) == max(l):\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (m, s) = map(int, input().split())\n    nums = set(map(int, input().split()))\n    curr_max = max(nums)\n    curr_sum = 0\n    for i in range(1, curr_max + 1):\n        if i not in nums:\n            curr_sum += i\n    if curr_sum > s:\n        print('NO')\n        continue\n    while curr_sum < s:\n        i += 1\n        curr_sum += i\n    if curr_sum == s:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    lst = [int(i) for i in input().split()]\n    lst.sort()\n    n = 0\n    j = 1\n    while n < b:\n        if j not in lst:\n            lst.append(j)\n            n += j\n        j += 1\n    ck = []\n    for j in range(1, max(lst) + 1):\n        ck.append(j)\n    lst.sort()\n    if ck == lst and n == b:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (m, s) = map(int, input().split())\n    b = list(map(int, input().split()))\n    b.sort()\n    k = 1\n    for j in range(m):\n        if b[j] != k:\n            if b[j] < k:\n                s = -1\n                break\n            while k < b[j]:\n                s -= k\n                if s < 0:\n                    break\n                k += 1\n        k += 1\n    while s > 0:\n        s -= k\n        k += 1\n    if s == 0:\n        print('YES')\n    else:\n        print('NO')", "def cal(m, s, arr):\n    t = sum(arr) + s\n    x = int((1 + 8 * t) ** 0.5 - 1) // 2\n    if x * x + x != 2 * t:\n        return False\n    p = list(range(x + 1))\n    for k in arr:\n        if k not in p:\n            return False\n    return True\nfor jj in range(int(input())):\n    (m, s) = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    if cal(m, s, arr):\n        print('YES')\n    else:\n        print('NO')", "import sys\nfrom bisect import bisect_left, bisect_right\nfrom heapq import heapify, heappush, heappop\nfrom collections import deque\nfrom math import gcd, sqrt, log10, log2, floor, ceil, sqrt\nfrom collections import deque, defaultdict\ninput = sys.stdin.readline\n\ndef il():\n    return [int(a) for a in input().strip().split()]\n\ndef ip():\n    return input().strip()\n\ndef ii():\n    return int(input())\nmod = 1000000000 + 7\ndx = [-1, -2, 1, 2, 2, -2, -1, 1]\ndy = [2, 1, 2, 1, -1, -1, -2, -2]\n\ndef ans(arr, s):\n    d = {}\n    f = True\n    for k in arr:\n        if k <= 0:\n            f = False\n            break\n        if k in d:\n            f = False\n            break\n        else:\n            d[k] = 1\n    if not f:\n        print('NO')\n    else:\n        i = 1\n        m = max(d)\n        while s > 0 or i < m:\n            if i not in d:\n                s -= i\n            i += 1\n        if s == 0:\n            print('YES')\n        else:\n            print('NO')\nfor _ in range(ii()):\n    (n, s) = il()\n    arr = il()\n    ans(arr, s)", "t = int(input())\nfor i in range(t):\n    line = input().split(' ')\n    s = int(line[1])\n    nums = set()\n    line = input().split(' ')\n    addedsum = 0\n    for l in line:\n        nums.add(int(l))\n    for n in range(1, max(nums)):\n        if n not in nums:\n            nums.add(n)\n            addedsum += n\n    if addedsum == s:\n        print('YES')\n    elif addedsum > s:\n        print('NO')\n    else:\n        j = max(nums) + 1\n        while addedsum < s:\n            addedsum += j\n            if addedsum == s:\n                print('YES')\n            elif addedsum > s:\n                print('NO')\n            j += 1", "for _ in range(int(input())):\n    (m, s) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    st = set(arr)\n    i = 1\n    while s > 0 or i < max(arr):\n        if i not in st:\n            s -= i\n        i += 1\n    print('NO' if s else 'YES')", "import sys\nfrom collections import *\nsys.setrecursionlimit(10 ** 5)\nitr = (line for line in sys.stdin.read().strip().split('\\n'))\nINP = lambda : next(itr)\n\ndef ni():\n    return int(INP())\n\ndef nl():\n    return [int(_) for _ in INP().split()]\n\ndef solve(m, s, arr):\n    big = 0\n    seen = {}\n    for n in arr:\n        if n not in seen:\n            seen[n] = True\n            big = max(big, n)\n    nums = []\n    for n in range(1, big + 1):\n        if n not in seen:\n            nums.append(n)\n    p = [False] * (s + 1)\n    if sum(nums) == s:\n        print('YES')\n        return\n    a = sum(nums)\n    cur = big + 1\n    while a < s:\n        a += cur\n        nums.append(cur)\n        cur += 1\n    if a == s:\n        print('YES')\n    else:\n        print('NO')\nt = ni()\nfor _ in range(t):\n    (m, s) = nl()\n    arr = nl()\n    solve(m, s, arr)", "for z in range(int(input())):\n    (n, s) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    L = []\n    for i in range(1, max(arr)):\n        if i not in arr:\n            L.append(i)\n    s1 = sum(L)\n    i = max(arr)\n    while s1 < s:\n        i += 1\n        s1 += i\n    if s1 == s:\n        print('YES')\n    else:\n        print('NO')", "def solution():\n    (n, s) = (int(num) for num in input().split())\n    b = {int(num) for num in input().split()}\n    maximum = max(b)\n    i = 1\n    for i in range(1, maximum + 1):\n        if i not in b:\n            s -= i\n    if s < 0:\n        print('NO')\n        return\n    if s == 0:\n        print('YES')\n        return\n    i = maximum + 1\n    while s > 0:\n        s -= i\n        i += 1\n    if s < 0:\n        print('NO')\n        return\n    else:\n        print('YES')\n        return\n\ndef main():\n    t = int(input())\n    while t:\n        solution()\n        t -= 1\nmain()", "nb_test_case = int(input())\nfor i in range(0, nb_test_case):\n    lists = input().split()\n    number_element = int(lists[0])\n    missing_sum = int(lists[1])\n    liste_element = input().split()\n    liste_element = [int(i) for i in liste_element]\n    sume = sum(liste_element)\n    j = max(liste_element)\n    while j * (j + 1) // 2 <= sume + missing_sum:\n        if j * (j + 1) // 2 == sume + missing_sum:\n            print('YES')\n            j = -1\n            break\n        j += 1\n    if j != -1:\n        print('NO')", "inputI = list(map(int, input().split()))\nt = inputI[0]\nfor i in range(1, t + 1):\n    (m, s) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    ma = max(arr)\n    su = sum(arr)\n    ss = ma * (ma + 1) // 2\n    while ss < su + s:\n        ma += 1\n        ss = ma * (ma + 1) // 2\n    if ma * (ma + 1) // 2 == su + s:\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\npos = {i * (i + 1) // 2: i for i in range(1, 1000)}\nfor _ in range(int(input())):\n    (m, s) = map(int, input().split())\n    b = list(map(int, input().split()))\n    temp = sum(b) + s\n    if temp not in pos.keys():\n        print('NO')\n    else:\n        full = set([i for i in range(1, pos[temp] + 1)])\n        if sum(full - set(b)) != s:\n            print('NO')\n        else:\n            print('YES')", "import math\nt = int(input())\ns = set()\nfor i in range(1, 10000):\n    s.add(i)\nwhile t:\n    (n1, n2) = map(int, input().split())\n    l = list(map(int, input().split()))\n    b = sum(l)\n    count = n1\n    c = n2\n    for x in s:\n        if x not in l:\n            n2 -= x\n            count += 1\n            a = count * (1 + count) // 2\n            if n2 == 0 and a == b + c:\n                print('YES')\n                break\n            elif n2 < 0:\n                print('NO')\n                break\n    t -= 1", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    (m, s) = list(map(int, input().split()))\n    nums = list(map(int, input().split()))\n    seen = set(nums)\n    if len(seen) != m:\n        print('NO')\n        continue\n    _max = max(nums)\n    for i in range(1, _max + 1):\n        if i not in seen:\n            s -= i\n            seen.add(i)\n    for i in range(1, 1276):\n        if s <= 0:\n            break\n        if i not in seen:\n            s -= i\n    print(['NO', 'YES'][s == 0])", "n = int(input())\nfor i in range(n):\n    (m, s) = map(int, input().split())\n    arr = [int(i) for i in input().split()]\n    i = 1\n    while True:\n        if i not in arr:\n            s -= i\n            arr.append(i)\n        i += 1\n        arr.sort()\n        if s == 0:\n            if sum(arr) == (1 + arr[-1]) * arr[-1] * 0.5:\n                print('YES')\n            else:\n                print('NO')\n            break\n        elif s < 0:\n            print('NO')\n            break", "t = int(input())\nfor _ in range(t):\n    (m, s) = map(int, input().split())\n    arr = [int(i) for i in input().split()]\n    biggest = max(arr)\n    for i in range(1, biggest):\n        if i not in arr:\n            s -= i\n    while s > 0:\n        biggest += 1\n        s -= biggest\n    if s == 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (m, s) = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    maxB = max(b)\n    bol = [False for i in range(200)]\n    for i in b:\n        bol[i - 1] = True\n    i = 1\n    while s > 0:\n        if not bol[i - 1]:\n            s -= i\n            bol[i - 1] = True\n        i += 1\n    if s == 0 and all(bol[:maxB - 1]):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (m, s) = map(int, input().rstrip().split())\n    arr = list(map(int, input().rstrip().split()))\n    Max = max(arr)\n    there = set()\n    for i in arr:\n        there.add(i)\n    Sum = 0\n    for i in range(1, Max):\n        if i not in there:\n            Sum += i\n            there.add(i)\n    if Sum == s:\n        print('YES')\n    elif Sum > s:\n        print('NO')\n    else:\n        off = Max + 1\n        while Sum < s:\n            Sum += off\n            off += 1\n        print('YES' if Sum == s else 'NO')", "def func():\n    (m, s) = map(int, input().split())\n    l = list(map(int, input().split()))\n    st = set((i for i in l))\n    if len(st) != len(l):\n        print('NO')\n        return\n    sm = sum(l)\n    total_sum = s + sm\n    m = max(l)\n    ans = 0\n    while ans < total_sum:\n        ans = m * (m + 1) // 2\n        m += 1\n    if ans == total_sum:\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nfor _ in range(t):\n    func()", "t = int(input())\nfor i in range(1, t + 1):\n    (_, rem_sum) = [int(v) for v in input().split()]\n    found = {int(v) for v in input().split()}\n    max_ = max(found)\n    for i in range(1, 200):\n        if i in found:\n            continue\n        if i >= max_:\n            if rem_sum == 0:\n                print('YES')\n                break\n            elif rem_sum < 0:\n                print('NO')\n                break\n        rem_sum -= i", "t = int(input())\n\ndef analyzator(s, m, list1):\n    k = sum(list1)\n    i = 1\n    p = k + s\n    while k < p:\n        if i not in list1:\n            k += i\n            list1.append(i)\n        i += 1\n        if k == p and len(list1) == max(list1):\n            return 'YES'\n    return 'NO'\nfor i in range(t):\n    (m, s) = map(int, input().split())\n    list1 = list(map(int, input().split()))\n    f = analyzator(s, m, list1)\n    print(f)", "from math import ceil, factorial, gcd\nmod = 998244353\nfor _ in range(int(input())):\n    (m, s) = map(int, input().split())\n    cnt = [0 for i in range(101)]\n    arr = list(map(int, input().split()))\n    vis = set()\n    target = sum(arr) + s\n    for i in range(1, 101):\n        if target - i >= 0:\n            target -= i\n            vis.add(i)\n    for i in arr:\n        if i not in vis or target != 0:\n            print('NO')\n            break\n    else:\n        for i in range(1, max(vis)):\n            if i not in vis:\n                print('NO')\n                break\n        else:\n            print('YES')", "def check(n, s, b):\n    m = max(b)\n    tots = m * (m + 1) // 2\n    oursum = tots - sum(b)\n    if oursum == s:\n        return 1\n    elif oursum == 0:\n        i = m + 1\n        while s > 0:\n            s = s - i\n            i += 1\n        if s == 0:\n            return 1\n        return 0\n    elif s > oursum:\n        s = s - oursum\n        i = m + 1\n        while s > 0:\n            s = s - i\n            i += 1\n        if s == 0:\n            return 1\n        return 0\n    else:\n        return 0\nt = int(input())\nfor _ in range(t):\n    (n, s) = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    ans = check(n, s, b)\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "nlines = int(input())\nfor i in range(nlines):\n    (m, s) = map(int, input().split())\n    numbers = list(map(int, input().split()))\n    numbers.sort()\n    next = 1\n    i = 0\n    while next <= numbers[len(numbers) - 1]:\n        if next != numbers[i]:\n            s = s - next\n        else:\n            i = i + 1\n        next = next + 1\n    while s > 0:\n        s = s - next\n        next = next + 1\n    if s < 0:\n        print('NO')\n    else:\n        print('YES')", "import sys\n\ndef main():\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        (m, s) = map(int, sys.stdin.readline().split())\n        ss = s\n        arr = list(map(int, sys.stdin.readline().split()))\n        mx = max(arr)\n        st = set(list(range(1, mx + 1))) - set(arr)\n        for a in st:\n            ss -= a\n        if ss < 0:\n            print('NO')\n        elif ss == 0:\n            print('YES')\n        else:\n            i = mx + 1\n            while ss > 0:\n                ss -= i\n                i += 1\n            if ss < 0:\n                print('NO')\n            else:\n                print('YES')\nmain()", "import math\nt = int(input())\nfor _ in range(t):\n    (m, s) = [int(j) for j in input().split()]\n    b = [int(x) for x in input().split()]\n    s2 = s + sum(b)\n    if int(math.sqrt(s2 * 2)) * (int(math.sqrt(s2 * 2)) + 1) / 2 == s2:\n        if int(math.sqrt(s2 * 2)) < max(b):\n            print('NO')\n        else:\n            print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (m, s) = map(int, input().split())\n    b = list(map(int, input().split()))\n    s1 = 0\n    i = max(b)\n    bn = list(range(1, i + 1))\n    while s1 < s:\n        s1 = sum(set(bn).difference(set(b)))\n        bn.append(max(bn) + 1)\n    if s1 == s:\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nfor _ in range(T):\n    (M, S) = map(int, input().split())\n    A = list(map(int, input().split()))\n    A.sort()\n    n = 1\n    for i in range(M):\n        a = A[i]\n        while a > n:\n            S -= n\n            n += 1\n        n += 1\n    if S < 0:\n        print('NO')\n    elif S == 0:\n        print('YES')\n    else:\n        n = A[-1] + 1\n        while S > 0:\n            S -= n\n            n += 1\n        if S == 0:\n            print('YES')\n        else:\n            print('NO')", "def solve():\n    (m, s) = map(int, input().split())\n    a = [int(i) for i in range(1, 100)]\n    b = [int(i) for i in input().split()]\n    t = 0\n    for i in b:\n        a.remove(i)\n    for i in range(len(a)):\n        s -= a[i]\n        b.append(a[i])\n        if s == 0:\n            b.sort()\n            for i in range(len(b) - 1):\n                if b[i + 1] - b[i] > 1:\n                    print('NO')\n                    return\n            print('YES')\n            return\n        if s < 0:\n            print('NO')\n            return\nt = int(input())\nfor _ in range(t):\n    solve()", "n = int(input())\nl = []\nfor i in range(n):\n    (t, s) = map(int, input().split())\n    nums = input().split()\n    numbers = []\n    for j in range(t):\n        numbers.append(int(nums[j]))\n    index = 1\n    ss = 0\n    while True:\n        if numbers.__contains__(index) == False:\n            ss += index\n            numbers.append(index)\n        if ss == s:\n            thisMax = max(numbers)\n            flag = True\n            for k in range(1, thisMax + 1):\n                if numbers.__contains__(k) == False:\n                    flag = False\n                    break\n            if flag == True:\n                l.append('YES')\n                break\n            elif flag == False:\n                l.append('NO')\n                break\n        elif ss > s:\n            l.append('NO')\n            break\n        index += 1\nfor i in range(len(l)):\n    print(l[i])", "def inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nt = inp()\nx = []\nfor i in range(t):\n    l1 = list(invr())\n    l2 = list(invr())\n    x.append([l1, l2])\nfor i in x:\n    s = i[0][1]\n    b = i[1].copy()\n    for j in range(1, 1000):\n        if j not in b:\n            b.append(j)\n            s -= j\n        if s <= 0:\n            break\n    if s < 0:\n        print('NO')\n    else:\n        for j in range(1, max(b) + 1):\n            if j not in b:\n                print('NO')\n                break\n        else:\n            print('YES')", "t = int(input())\nresult = []\nfor i in range(t):\n    (m, s) = map(int, input().split())\n    b = list(map(int, input().split()))\n    b.sort()\n    for i in range(1, 1000):\n        if i not in b:\n            if s >= i:\n                b.append(i)\n                s -= i\n                if s == 0 and max(b) * (max(b) + 1) / 2 == sum(b):\n                    result.append('YES')\n                    break\n            else:\n                result.append('NO')\n                break\nfor i in result:\n    print(i)", "n = int(input())\na = []\nfor i in range(n):\n    (g, h) = [int(i) for i in input().split()]\n    k = [int(i) for i in input().split()]\n    c = 1\n    sum = 0\n    while sum < h:\n        if c not in k:\n            sum += c\n            k.append(c)\n        c += 1\n    if sum == h and len(k) >= max(k):\n        a.append('YES')\n    else:\n        a.append('NO')\nfor i in a:\n    print(i, end='\\n')", "t = int(input())\none = 1\nzero = 0\nans1 = 'YES'\nans2 = 'NO'\n\ndef main():\n    for q in range(t):\n        (m, s) = map(int, input().split())\n        array = list(map(int, input().split()))\n        iter = one\n        while s > 0:\n            if not iter in array:\n                s = s - iter\n                array.append(iter)\n            iter = iter + one\n        maximum = max(array)\n        ls = len(set(array))\n        if s == zero and maximum == ls:\n            print(ans1)\n        else:\n            print(ans2)\nmain()", "for i in range(int(input())):\n    (m, s) = input().split(' ')\n    s = int(s)\n    list1 = list(map(int, input().split(' ')))\n    num = 1\n    _sum = 0\n    while 1:\n        if num not in list1 and _sum <= s:\n            _sum = _sum + num\n            list1.append(num)\n            if _sum == s:\n                if len(list1) == max(list1):\n                    print('YES')\n                    break\n                else:\n                    print('NO')\n                    break\n            elif _sum > s:\n                print('NO')\n                break\n        num = num + 1", "t = int(input())\n\ndef solve(m, s, arr):\n    arr = set(arr)\n    s += sum(arr)\n    i = 1\n    while s > 0:\n        if i in arr:\n            arr.remove(i)\n        s -= i\n        i += 1\n    if s == 0 and (not arr):\n        return 'YES'\n    return 'NO'\nfor i in range(t):\n    (m, s) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    print(solve(m, s, arr))", "num = int(input())\nfor i in range(0, num):\n    (n1, n2) = input().split()\n    n1 = int(n1)\n    n2 = int(n2)\n    li = input().split()\n    li = [int(x) for x in li]\n    nmax = max(li)\n    mmax = max(nmax, n2)\n    sam = n2 + sum(li)\n    flag = 100\n    for i in range(2, mmax + 1):\n        sm = (i + 1) * i / 2\n        if sm == sam and i >= nmax:\n            flag = 1\n            break\n        elif sm == sam and i < nmax:\n            flag = 0\n            break\n        elif sm > sam:\n            flag = 0\n            break\n    if flag == 1:\n        print('YES')\n    else:\n        print('NO')", "def main(maximum, ssum):\n    ssum = ssum - maximum * (maximum + 1) / 2\n    counter = maximum + 1\n    while ssum > 0:\n        ssum = ssum - counter\n        counter += 1\n    if ssum < 0:\n        return 'NO'\n    return 'YES'\noutput = []\nfor test in range(int(input())):\n    fl = [int(i) for i in input().split()]\n    n = fl[0]\n    m = fl[1]\n    array = [int(i) for i in input().split()]\n    mx = max(array)\n    output.append(main(mx, m + sum(array)))\nfor o in output:\n    print(o)", "def solution():\n    (m, s) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = 0\n    i = 1\n    while c < s:\n        if i not in a:\n            a.append(i)\n            c += i\n        i += 1\n    tr = True\n    for j in range(1, len(a) + 1):\n        if j not in a:\n            tr = False\n    if c == s and tr == True:\n        print('YES')\n    else:\n        print('NO')\nfor _ in [0] * int(input()):\n    solution()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    A = list(map(int, input().split()))\n    A.sort()\n    i = 1\n    while k > 0:\n        if i not in A:\n            A.append(i)\n            k -= i\n        i += 1\n    flag = 0\n    for x in range(1, max(A) + 1):\n        if x not in A:\n            flag = 1\n            break\n    if k == 0 and flag == 0:\n        print('YES')\n    else:\n        print('NO')", "init = int(input())\n\ndef missing_elements(copy):\n    res = []\n    for i in range(max(copy)):\n        if i + 1 not in copy:\n            res.append(i + 1)\n    return res\n\ndef can_finish(seq):\n    cur_sort = sorted(seq)\n    missing = missing_elements(cur_sort)\n    if len(missing) == 0 and s == cur_sort[-1] + 1:\n        return 'YES'\n    if len(missing) == 0 and s < cur_sort[-1] + 1:\n        return 'NO'\n    if sum(missing) == s:\n        return 'YES'\n    if sum(missing) > s:\n        return 'NO'\n    sofar = 0\n    for i in missing:\n        sofar += i\n        seq.append(i)\n    new = sorted(seq)\n    while sofar + new[-1] + 1 <= s:\n        add = new[-1] + 1\n        new.append(add)\n        sofar += add\n    if sofar == s:\n        return 'YES'\n    else:\n        return 'NO'\nfor i in range(init):\n    (m, s) = map(int, input().split())\n    cur = list(map(int, input().split()))\n    print(can_finish(cur))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    x = 0\n    i = 0\n    l = list(map(int, input().split()))\n    for i in range(max(l)):\n        if i not in l:\n            x += i\n    while True:\n        i += 1\n        if i not in l:\n            x += i\n        if x > b:\n            s = 'NO'\n            break\n        elif x == b:\n            s = 'YES'\n            break\n    print(s)"]