["t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, m) = map(int, input().split())\n    s1 = '1'\n    while True:\n        s1 += '0'\n        if len(s1) == m:\n            break\n        s1 += '0'\n        if len(s1) == m:\n            break\n        s1 += '1'\n        if len(s1) == m:\n            break\n        s1 += '1'\n        if len(s1) == m:\n            break\n    s2 = ''\n    for i in range(m):\n        if s1[i] == '1':\n            s2 += '0'\n        else:\n            s2 += '1'\n    s1 = ' '.join(s1)\n    s2 = ' '.join(s2)\n    print(s1)\n    n -= 1\n    while True:\n        if n == 0:\n            break\n        n -= 1\n        print(s2)\n        if n == 0:\n            break\n        n -= 1\n        print(s2)\n        if n == 0:\n            break\n        n -= 1\n        print(s1)\n        if n == 0:\n            break\n        n -= 1\n        print(s1)", "t = int(input())\nfor _ in range(t):\n    (n, m) = input().split(' ')\n    (n, m) = (int(n), int(m))\n    (s1, s2) = ('', '')\n    for i in range(m):\n        if i % 4 == 0 or i % 4 == 3:\n            s1 = s1 + '1 '\n            s2 = s2 + '0 '\n        else:\n            s1 = s1 + '0 '\n            s2 = s2 + '1 '\n    for i in range(n):\n        if i % 4 == 0 or i % 4 == 3:\n            print(s1)\n        else:\n            print(s2)", "t = int(input())\nfor _ in range(t):\n    (n, m) = [int(x) for x in input().split()]\n    row = [1, 0, 0, 1]\n    while len(row) < m:\n        row += [1, 0, 0, 1]\n    if m % 4:\n        row = row[:-2]\n    row2 = [1 - x for x in row]\n    row = ' '.join((str(x) for x in row))\n    row2 = ' '.join((str(x) for x in row2))\n    for _ in range(n // 4):\n        print(row)\n        print(row2)\n        print(row2)\n        print(row)\n    if n % 4:\n        print(row)\n        print(row2)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nout = []\nfor _ in range(t):\n    (n, m) = [int(x) for x in input().split()]\n    line1 = '1 0 0 1 ' * (m // 4)\n    line2 = '0 1 1 0 ' * (m // 4)\n    seq1 = [1, 0, 0, 1]\n    seq2 = [0, 1, 1, 0]\n    for i in range(m % 4):\n        line1 += str(seq1[i]) + ' '\n        line2 += str(seq2[i]) + ' '\n    line1 += '\\n'\n    line2 += '\\n'\n    order = True\n    for i in range(n // 2):\n        if order:\n            out.append(line1)\n            out.append(line2)\n        else:\n            out.append(line2)\n            out.append(line1)\n        order = not order\nprint(''.join(out))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    st = '1 0 '\n    st_m = '0 1 '\n    one = ''\n    two = ''\n    for i in range(m // 2):\n        if i % 2:\n            one += st\n            two += st_m\n        else:\n            one += st_m\n            two += st\n    if n == 2:\n        print(one)\n        print(two)\n        continue\n    for i in range(n // 2):\n        if i % 2:\n            print(one)\n            print(two)\n        else:\n            print(two)\n            print(one)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = '01'\n    b = '10'\n    ms = ''\n    ns = ''\n    for i in range(m // 2):\n        if i % 2 == 0:\n            ms = ms + a\n            ns = ns + b\n        else:\n            ms = ms + b\n            ns = ns + a\n    for j in range(n // 2):\n        if j % 2 == 0:\n            print(' '.join(list(ms)))\n            print(' '.join(list(ns)))\n        else:\n            print(' '.join(list(ns)))\n            print(' '.join(list(ms)))", "ncase = int(input())\nfor case in range(1, ncase + 1):\n    (n, m) = [int(s) for s in input().split(' ')]\n    flag = 0\n    for i in range(n):\n        if i % 4 == 0 or i % 4 == 3:\n            if m % 4 == 0:\n                print(' '.join(['1', '0', '0', '1'] * (m // 4)))\n            else:\n                print('1 0' + ' 0 1 1 0' * (m // 4))\n        elif m % 4 == 0:\n            print(' '.join(['0', '1', '1', '0'] * (m // 4)))\n        else:\n            print('0 1' + ' 1 0 0 1' * (m // 4))", "for _ in range(int(input())):\n    a = list(map(int, input().split()))\n    for i in range(a[0]):\n        if i % 4 == 0 or i % 4 == 3:\n            print(int(a[1] / 4) * '1 0 0 1 ' + int(a[1] % 4 / 2) * '1 0')\n        else:\n            print(int(a[1] / 4) * '0 1 1 0 ' + int(a[1] % 4 / 2) * '0 1')", "t = int(input())\nwhile t > 0:\n    (m, n) = list(map(int, input().split(' ')))\n    c = ''\n    d = ''\n    a = '0 1'\n    b = '1 0'\n    for i in range(1, n // 2 + 1):\n        if i % 2 == 0:\n            c += b + ' '\n            d += a + ' '\n        else:\n            c += a + ' '\n            d += b + ' '\n    for j in range(1, m // 2 + 1):\n        if j % 2 == 0:\n            print(c)\n            print(d)\n        else:\n            print(d)\n            print(c)\n    t -= 1", "import sys\n\ndef solve():\n    (n, m) = map(int, sys.stdin.readline().split())\n    pattern1 = '1 0 0 1 '\n    pattern2 = '0 1 1 0 '\n    remainder = m % 4 * 2\n    quotient = m // 4\n    pattern1 = pattern1 * quotient + pattern1[:remainder]\n    pattern2 = pattern2 * quotient + pattern2[:remainder]\n    pattern_type = False\n    sys.stdout.write(pattern1 + '\\n')\n    x = 0\n    for i in range(1, n):\n        x += 1\n        if pattern_type:\n            sys.stdout.write(pattern1 + '\\n')\n        else:\n            sys.stdout.write(pattern2 + '\\n')\n        if x == 2:\n            pattern_type = not pattern_type\n            x = 0\n\ndef main():\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        solve()\nmain()", "tc = int(input())\nwhile tc > 0:\n    A = [int(i) for i in input().split(' ')]\n    R1 = ['0', '1']\n    R2 = ['1', '0']\n    L1 = ['1', '0']\n    L2 = ['0', '1']\n    R3 = ['1', '0']\n    R4 = ['0', '1']\n    L3 = ['0', '1']\n    L4 = ['1', '0']\n    n = A[0] // 2\n    m = A[1] // 2\n    ans = []\n    for i in range(n):\n        curr1 = []\n        curr2 = []\n        if i % 2 == 0:\n            for j in range(m):\n                if j % 2 == 0:\n                    curr1 += R1\n                    curr2 += R2\n                else:\n                    curr1 += L1\n                    curr2 += L2\n        else:\n            for j in range(m):\n                if j % 2 == 0:\n                    curr1 += R3\n                    curr2 += R4\n                else:\n                    curr1 += L3\n                    curr2 += L4\n        ans = ans + [curr1] + [curr2]\n    for i in range(2 * n):\n        print(' '.join(ans[i]))\n    tc = tc - 1", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    for i in range(n // 4):\n        print('1 0 0 1 ' * (m // 4) + '1 0' * (m % 4 // 2))\n        print('0 1 1 0 ' * (m // 4) + '0 1' * (m % 4 // 2))\n        print('0 1 1 0 ' * (m // 4) + '0 1' * (m % 4 // 2))\n        print('1 0 0 1 ' * (m // 4) + '1 0' * (m % 4 // 2))\n    if n % 4 == 2:\n        print('1 0 0 1 ' * (m // 4) + '1 0' * (m % 4 // 2))\n        print('0 1 1 0 ' * (m // 4) + '0 1' * (m % 4 // 2))", "num_of_matrixes = int(input())\ndimensions = [tuple(map(int, input().split())) for _ in range(num_of_matrixes)]\n\ndef print_matrix(n, m):\n    block_width = m // 2\n    block_height = n // 2\n    big_result = []\n    for row in range(block_height):\n        unit1 = '1 0 '\n        unit2 = '0 1 '\n        str_1 = []\n        str_2 = []\n        for column in range(block_width):\n            if row % 2 == 0:\n                str_1.append(unit1)\n                str_2.append(unit2)\n            else:\n                str_1.append(unit2)\n                str_2.append(unit1)\n            (unit1, unit2) = (unit2, unit1)\n        big_result.append(''.join(str_1)[:-1])\n        big_result.append(''.join(str_2)[:-1])\n    for line in big_result:\n        print(line)\nfor item in dimensions:\n    print_matrix(*item)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    A = '11'\n    B = '00'\n    row1 = []\n    row2 = []\n    for i in range(m // 2):\n        if i % 2 == 0:\n            row1.append(A)\n            row2.append(B)\n        else:\n            row1.append(B)\n            row2.append(A)\n    row1 = ''.join(row1)\n    row2 = ''.join(row2)\n    if row1[-1] == '0':\n        row1 = row1[1:] + '1'\n    else:\n        row1 = row1[1:] + '0'\n    if row2[-1] == '0':\n        row2 = row2[1:] + '1'\n    else:\n        row2 = row2[1:] + '0'\n    col = []\n    for i in range(n // 2):\n        if i % 2 == 0:\n            col.append(A)\n        else:\n            col.append(B)\n    col = ''.join(col)\n    if col[-1] == '0':\n        col = col[1:] + '1'\n    else:\n        col = col[1:] + '0'\n    for el in col:\n        if el == '1':\n            print(' '.join(row1))\n        else:\n            print(' '.join(row2))", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    pairs = ['1 0 ', '0 1 ']\n    rows = ['', '']\n    for i in range(m // 2):\n        rows[0] += pairs[i % 2]\n        rows[1] += pairs[i % 2 - 1]\n    pair_rows = [rows[0] + '\\n' + rows[1] + '\\n', rows[1] + '\\n' + rows[0] + '\\n']\n    matrix = ''\n    for i in range(n // 2):\n        matrix += pair_rows[i % 2]\n    print(matrix.strip())", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    m //= 2\n    n //= 2\n    s = '1 ' + '0 0 1 1 ' * ((m - 1) // 2)\n    if m % 2 == 0:\n        s += '0 0 1'\n    else:\n        s += '0'\n    print(s)\n    s1 = ''.join(({'0': '1', '1': '0', ' ': ' '}[c] for c in s))\n    print((s1 + '\\n' + s1 + '\\n' + s + '\\n' + s + '\\n') * ((n - 1) // 2), end='')\n    if n % 2:\n        print(s1)\n    else:\n        print(s1 + '\\n' + s1 + '\\n' + s)", "t = int(input())\nfor z in range(t):\n    (n, m) = [int(x) for x in input().split()]\n    l1 = [1, 0]\n    l2 = [0, 1]\n    p = []\n    q = []\n    s = ''\n    r = ''\n    for i in range(m // 2):\n        if i % 2 == 0:\n            p = p + l1\n            q = q + l2\n        else:\n            p = p + l2\n            q = q + l1\n    for i in p:\n        x = str(i)\n        s = s + x + ' '\n    for i in q:\n        y = str(i)\n        r = r + y + ' '\n    print(s)\n    for i in range((n - 2) // 2):\n        if i % 2 == 0:\n            print(r)\n            print(r)\n        else:\n            print(s)\n            print(s)\n    if n % 4 == 0:\n        print(s)\n    else:\n        print(r)", "a = int(input())\nfor i in range(a):\n    b = list(map(int, input().split()))\n    row = b[1]\n    main = '1 0 0 1 '\n    st = ''\n    de = row % 4\n    se = row // 4\n    st += main * se\n    if de == 1:\n        st += '1'\n    if de == 2:\n        st += '1 0'\n    if de == 3:\n        st += '1 0 0'\n    column = st.replace('0', '2')\n    column = column.replace('1', '0')\n    column = column.replace('2', '1')\n    m = 1\n    final = ''\n    for k in range(b[0]):\n        if k % 2 != 0:\n            final += st + '\\n'\n            m = 1\n        else:\n            final += column + '\\n'\n            m = 0\n        if m == 1:\n            sd = st\n            st = column\n            column = sd\n    print(final[:-1])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    pt1 = [1, 0]\n    pt2 = [0, 1]\n    save1 = []\n    save2 = []\n    p1 = ''\n    p2 = ''\n    for i in range(m // 2):\n        if i % 2 == 0:\n            save1 += pt1\n            save2 += pt2\n        else:\n            save1 += pt2\n            save2 += pt1\n    p1 = ' '.join(map(str, save1))\n    p2 = ' '.join(map(str, save2))\n    print(p1)\n    for i in range((n - 2) // 2):\n        if i % 2 == 0:\n            print(p2)\n            print(p2)\n        else:\n            print(p1)\n            print(p1)\n    if n % 4 == 0:\n        print(p1)\n    else:\n        print(p2)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if m % 4 == 0:\n        first = '0 1 1 0 ' * (m // 4)\n        second = '1 0 0 1 ' * (m // 4)\n    elif m == 2:\n        first = '0 1'\n        second = '1 0'\n    else:\n        first = '0 1 1 0 ' * (m // 4) + '0 1 '\n        second = '1 0 0 1 ' * (m // 4) + '1 0 '\n    if n % 4 != 0:\n        print(first)\n        for i in range((n - 2) // 4):\n            print(second)\n            print(second)\n            print(first)\n            print(first)\n        print(second)\n    else:\n        print(first)\n        for i in range((n - 4) // 4):\n            print(second)\n            print(second)\n            print(first)\n            print(first)\n        print(second)\n        print(second)\n        print(first)", "def criarMatriz(n, m):\n    padrao1 = '1 0 '\n    padrao2 = '0 1 '\n    cntlin = True\n    cntCol = 0\n    linhaMult3 = ''\n    outrasLinhas = ''\n    for i in range(m // 2):\n        if cntlin:\n            linhaMult3 += padrao1\n            outrasLinhas += padrao2\n        else:\n            linhaMult3 += padrao2\n            outrasLinhas += padrao1\n        cntlin = not cntlin\n    linhaMult3 = linhaMult3.strip()\n    outrasLinhas = outrasLinhas.strip()\n    for i in range(n):\n        if i % 4 == 0 or i % 4 == 3:\n            print(linhaMult3)\n        else:\n            print(outrasLinhas)\nnumCase = int(input())\nfor i in range(numCase):\n    nm = list(map(int, input().split(' ')))\n    criarMatriz(nm[0], nm[1])", "def generate_line(current, columns):\n    line = []\n    for _ in range(columns // 2):\n        if current:\n            line += '1'\n            line += '0'\n        else:\n            line += '0'\n            line += '1'\n        current = not current\n    return ' '.join(line)\nn = int(input())\nfor _ in range(n):\n    (rows, columns) = [int(x) for x in input().split()]\n    for row in range(rows // 2):\n        start = True\n        if row % 2 != 0:\n            start = False\n        print(generate_line(start, columns))\n        print(generate_line(not start, columns))", "t = int(input())\nfor _ in range(t):\n    (h, w) = map(int, input().split())\n    a = ''\n    b = ''\n    for i in range(1, w // 2 + 1):\n        if i % 2 == 0:\n            a += '1 0 '\n            b += '0 1 '\n        else:\n            a += '0 1 '\n            b += '1 0 '\n    for i in range(1, h // 2 + 1):\n        if i % 2 == 0:\n            print(b)\n            print(a)\n        else:\n            print(a)\n            print(b)", "t = int(input())\nfor _ in range(t):\n    (n, m) = (int(ii) for ii in input().split())\n    (a, b) = ('0 1', '1 0')\n    for i in range(m // 2 - 1):\n        if i % 2 == 0:\n            a += ' 1 0'\n            b += ' 0 1'\n        else:\n            a += ' 0 1'\n            b += ' 1 0'\n    for j in range(n // 2):\n        if j % 2 == 0:\n            print(a)\n            print(b)\n        else:\n            print(b)\n            print(a)", "n = int(input())\nwhile n:\n    (a, b) = map(int, input().split())\n    row = [0]\n    for i in range(b // 2 - 1):\n        row.append((row[-1] + 1) % 2)\n    for i in range(a // 2):\n        output = [[], []]\n        nrow = []\n        for v in row:\n            if v == 0:\n                output[0] += ['0', '1']\n                output[1] += ['1', '0']\n                nrow.append(1)\n            else:\n                output[1] += ['0', '1']\n                output[0] += ['1', '0']\n                nrow.append(0)\n        print(' '.join(output[0]))\n        print(' '.join(output[1]))\n        row = nrow\n    n -= 1", "for i in range(int(input())):\n    (n, m) = input().split()\n    n = int(n)\n    m = int(m)\n    inversed = False\n    for k in range(int(n / 2)):\n        if inversed:\n            s = ''\n            for j in range(int(m / 2)):\n                if j % 2 == 0:\n                    s = s + '1 0 '\n                else:\n                    s = s + '0 1 '\n            print(s[:-1])\n            s = ''\n            for j in range(int(m / 2)):\n                if j % 2 == 0:\n                    s = s + '0 1 '\n                else:\n                    s = s + '1 0 '\n            print(s[:-1])\n            inversed = False\n        else:\n            s = ''\n            for j in range(int(m / 2)):\n                if j % 2 == 0:\n                    s = s + '0 1 '\n                else:\n                    s = s + '1 0 '\n            print(s[:-1])\n            s = ''\n            for j in range(int(m / 2)):\n                if j % 2 == 0:\n                    s = s + '1 0 '\n                else:\n                    s = s + '0 1 '\n            print(s[:-1])\n            inversed = True", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    pat1 = [1, 0]\n    pat2 = [0, 1]\n    cur1 = []\n    for j in range(0, m, 2):\n        cur1 += pat1\n        pat1 = pat1[::-1]\n    cur2 = []\n    for j in range(0, m, 2):\n        cur2 += pat2\n        pat2 = pat2[::-1]\n    ans = []\n    ans.append(cur1)\n    path = -1\n    for i in range(1, n - 1, 2):\n        ans.append(cur1 if path == 1 else cur2)\n        ans.append(cur1 if path == 1 else cur2)\n        path *= -1\n    ans.append(cur1 if n % 4 == 0 else cur2)\n    for row in ans:\n        print(' '.join([str(i) for i in row]))", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    pattern = [[0, 1, 1, 0], [1, 0, 0, 1], [1, 0, 0, 1], [0, 1, 1, 0]]\n    repeatHor = m // 4\n    extraHor = False\n    if m % 4 == 2:\n        extraHor = True\n    repeatVert = n // 4\n    extraVert = False\n    if n % 4 == 2:\n        extraVert = True\n    line1 = '0 1 1 0 ' * repeatHor\n    if extraHor:\n        line1 += '0 1'\n    line2 = '1 0 0 1 ' * repeatHor\n    if extraHor:\n        line2 += '1 0'\n    line3 = '1 0 0 1 ' * repeatHor\n    if extraHor:\n        line3 += '1 0'\n    line4 = '0 1 1 0 ' * repeatHor\n    if extraHor:\n        line4 += '0 1'\n    for i in range(repeatVert):\n        print(line1)\n        print(line2)\n        print(line3)\n        print(line4)\n    if extraVert:\n        print(line1)\n        print(line2)", "t = int(input())\nwhile t:\n    t = t - 1\n    (n, m) = map(int, input().split())\n    res = []\n    for j in range(2):\n        st = ''\n        for i in range(m):\n            if j == 0:\n                ff = '1 '\n            else:\n                ff = '0 '\n            if i == 0:\n                st += ff\n                if ff == '1 ':\n                    ss = '0 '\n                else:\n                    ss = '1 '\n                cnt = 0\n            else:\n                if cnt == 2:\n                    if ss == '0 ':\n                        ss = '1 '\n                    else:\n                        ss = '0 '\n                    cnt = 0\n                st += ss\n                cnt += 1\n        st = st.strip()\n        res.append(st)\n    mat = []\n    for i in range(n):\n        if i == 0:\n            mat.append(res[0])\n            cnt = 0\n            cc = 1\n        else:\n            if cnt == 2:\n                if cc == 1:\n                    cc = 0\n                else:\n                    cc = 1\n                cnt = 0\n            mat.append(res[cc])\n            cnt += 1\n    for i in mat:\n        print(i)", "def task(n, m):\n    grid = []\n    for i in range(0, n):\n        row = []\n        for j in range(0, m):\n            a = i % 4\n            b = j % 4\n            if a == b or b + a == 3:\n                row.append('1')\n            else:\n                row.append('0')\n        print(' '.join(row))\nt = int(input())\nfor i in range(0, t):\n    (n, m) = list(map(int, input().split()))\n    task(n, m)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    p = '1'\n    pp = '0'\n    s1 = ''\n    s2 = ''\n    for i in range(m):\n        if pp == '0' and p == '1':\n            s1 += ' 1'\n            pp = '1'\n        elif pp == '0' and p == '0':\n            s1 += ' 1'\n            p = '1'\n        elif pp == '1' and p == '0':\n            s1 += ' 0'\n            pp = '0'\n        elif pp == '1' and p == '1':\n            s1 += ' 0'\n            p = '0'\n    p = '0'\n    pp = '1'\n    for i in range(m):\n        if pp == '0' and p == '1':\n            s2 += ' 1'\n            pp = '1'\n        elif pp == '0' and p == '0':\n            s2 += ' 1'\n            p = '1'\n        elif pp == '1' and p == '0':\n            s2 += ' 0'\n            pp = '0'\n        elif pp == '1' and p == '1':\n            s2 += ' 0'\n            p = '0'\n    p = '1'\n    pp = '0'\n    s1 = s1.strip()\n    s2 = s2.strip()\n    for i in range(n):\n        if pp == '0' and p == '1':\n            print(s1)\n            pp = '1'\n        elif pp == '0' and p == '0':\n            print(s1)\n            p = '1'\n        elif pp == '1' and p == '0':\n            print(s2)\n            pp = '0'\n        elif pp == '1' and p == '1':\n            print(s2)\n            p = '0'", "b = {0: [['1', '0'], ['0', '1']], 1: [['0', '1'], ['1', '0']]}\nt = int(input().strip())\nfor _ in range(t):\n    (n, m) = [int(i) for i in input().strip().split()]\n    for i in range(n // 2):\n        l = i % 2\n        l1 = []\n        l2 = []\n        for j in range(m // 2):\n            s = b[(l + j) % 2]\n            l1 += s[0]\n            l2 += s[1]\n        print(' '.join(l1))\n        print(' '.join(l2))", "def main():\n    seq = '1001'\n    ps = [0, 2, 2, 0]\n    N = int(input())\n    for _ in range(N):\n        (h, w) = map(int, input().split())\n        mat = [[None] * w for _ in range(h)]\n        for r in range(h):\n            i = ps[r % 4]\n            c = 0\n            while c < w:\n                mat[r][c] = seq[i]\n                c += 1\n                i = (i + 1) % len(seq)\n        for r in range(h):\n            print(' '.join(mat[r]))\n\ndef init():\n    import os\n    import sys\n    sys.setrecursionlimit(2 * 10 ** 6)\n    if 'CP_LOCAL_ENV' in os.environ:\n        sys.stdin = open('cf_test_b.txt')\ninit()\nmain()", "for _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    pat1 = [1, 0]\n    pat2 = [0, 1]\n    r1 = (pat1 + pat2) * (n // 4) + pat1 * (n % 4 == 2)\n    r2 = (pat2 + pat1) * (n // 4) + pat2 * (n % 4 == 2)\n    for i in range(m):\n        if i % 4 == 1 or i % 4 == 2:\n            print(' '.join(map(str, r2)))\n        else:\n            print(' '.join(map(str, r1)))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = [[0 for j in range(m)] for i in range(n)]\n    for i in range(n // 2):\n        for j in range(m // 2):\n            if (i + j) % 2 == 0:\n                a[2 * i][2 * j] = '1'\n                a[2 * i][2 * j + 1] = '0'\n                a[2 * i + 1][2 * j] = '0'\n                a[2 * i + 1][2 * j + 1] = '1'\n            else:\n                a[2 * i][2 * j] = '0'\n                a[2 * i][2 * j + 1] = '1'\n                a[2 * i + 1][2 * j] = '1'\n                a[2 * i + 1][2 * j + 1] = '0'\n    for i in range(n):\n        print(' '.join(a[i]))", "import sys\nimport string\nfrom decimal import Decimal\nfrom math import log\n\ndef inp():\n    return int(input())\n\ndef inplist():\n    return list(map(int, input().split()))\n\ndef inpstrlist():\n    s = input()\n    return list(s[:len(s)])\n\ndef invr():\n    return map(int, input().split())\nt = int(input())\nfor _ in range(t):\n    (n, m) = invr()\n    first = '1 0 0 1 ' * 20\n    second = '0 1 1 0 ' * 20\n    third = '0 1 1 0 ' * 20\n    fourth = '1 0 0 1 ' * 20\n    for i in range(n):\n        if i % 4 == 0:\n            print(first[:2 * m])\n        elif i % 4 == 1:\n            print(second[:2 * m])\n        elif i % 4 == 2:\n            print(third[:2 * m])\n        else:\n            print(fourth[:2 * m])", "for _ in range(int(input())):\n    (m, n) = [int(a) for a in input().split()]\n    arr = [['0'] * n for i in range(m)]\n    for i in range(m):\n        for j in range(n):\n            if i % 4 in [0, 3] and j % 4 in [0, 3] or (i % 4 in [1, 2] and j % 4 in [1, 2]):\n                arr[i][j] = '1'\n        print(' '.join(arr[i]))", "import sys\nd = (((0, 0), (1, 1)), ((1, 0), (0, 1)))\ninputs = sys.stdin.readlines()\nfor i in range(1, len(inputs)):\n    (n, m) = map(int, inputs[i].split())\n    board = [['0' for _ in range(m)] for _ in range(n)]\n    for i in range(0, n, 2):\n        di = i // 2 % 2\n        for j in range(0, m, 2):\n            for dd in d[di]:\n                board[i + dd[0]][j + dd[1]] = '1'\n            di = (di + 1) % 2\n    for b in board:\n        sys.stdout.write(' '.join(b) + '\\n')", "def solve():\n    odd_pattern = [1, 0, 0, 1]\n    even_pattern = [0, 1, 1, 0]\n    row_pattern = [1, 0, 0, 1]\n    num_tests = int(input())\n    for t in range(num_tests):\n        (rows, cols) = map(int, input().split())\n        if rows == 2 and cols == 2:\n            print('1 0')\n            print('0 1')\n        else:\n            for n in range(rows):\n                new_row = []\n                for m in range(cols):\n                    if row_pattern[n % 4] == 1:\n                        num = even_pattern[m % 4]\n                    else:\n                        num = odd_pattern[m % 4]\n                    new_row.append(str(num))\n                print(' '.join(new_row))\nsolve()", "n = int(input())\ntest_cases = []\nfor i in range(n):\n    test_cases.append([int(i) for i in input().split()])\nfor test_case in test_cases:\n    (l, m) = test_case\n    matrix = [[0 for _ in range(m)] for _ in range(l)]\n    matrix[0][0] = 1\n    matrix[1][1] = 1\n    for i in range(1, int(m / 2)):\n        matrix[0][1 + i * 2] = matrix[0][(i - 1) * 2]\n        matrix[1][0 + i * 2] = matrix[1][(i - 1) * 2 + 1]\n        matrix[1][1 + i * 2] = matrix[1][(i - 1) * 2]\n        matrix[0][0 + i * 2] = matrix[0][(i - 1) * 2 + 1]\n    for i in range(1, int(l / 2)):\n        matrix[i * 2] = matrix[(i - 1) * 2 + 1]\n        matrix[i * 2 + 1] = matrix[(i - 1) * 2]\n    for i in range(len(matrix)):\n        print(' '.join(map(str, matrix[i])))", "def solve():\n    (n, m) = map(int, input().split())\n    ans = [[0] * m for _ in range(n)]\n    for i in range(0, n, 2):\n        for j in range(0, m, 2):\n            if (i // 2 + j // 2) % 2 == 0:\n                ans[i + 1][j] = 1\n                ans[i][j + 1] = 1\n            else:\n                ans[i][j] = 1\n                ans[i + 1][j + 1] = 1\n    for a in ans:\n        print(' '.join((str(x) for x in a)))\nfor _ in range(int(input())):\n    solve()", "t = int(input())\npattern1 = [1, 0, 0, 1] * 20\npattern2 = [0, 1, 1, 0] * 20\n\ndef f(m, n):\n    for i in range(m):\n        l = pattern1[:n] if i % 4 in [0, 3] else pattern2[:n]\n        print(' '.join(map(str, l)))\nfor _ in range(t):\n    (m, n) = map(int, input().split())\n    f(m, n)", "import io, os, sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    row = [1, 0]\n    for j in range(2, m):\n        if j % 2 == 0:\n            row.append(row[-1])\n        else:\n            row.append(row[-1] ^ 1)\n    for i in range(n):\n        print(' '.join([str(r) for r in row]))\n        if i % 2 == 0:\n            row = [r ^ 1 for r in row]", "testcases = int(input())\nfor _ in range(testcases):\n    (cols, rows) = list(map(int, input().split()))\n    ans = [[0 for i in range(rows)] for j in range(cols)]\n    column = len(ans[0])\n    rows = len(ans)\n    for row in range(0, rows, 2):\n        for col in range(0, column, 2):\n            if (row + col) % 4 == 0:\n                ans[row][col] = str(0)\n                ans[row + 1][col] = str(1)\n                ans[row][col + 1] = str(1)\n                ans[row + 1][col + 1] = str(0)\n            else:\n                ans[row][col] = str(1)\n                ans[row + 1][col] = str(0)\n                ans[row][col + 1] = str(0)\n                ans[row + 1][col + 1] = str(1)\n    ans = [' '.join(num) for num in ans]\n    print('\\n'.join(ans))", "tests = int(input())\nfor i in range(0, tests):\n    (n, m) = map(int, input().split()[:2])\n    board = list()\n    count = 0\n    turn = 1\n    for t in range(0, n):\n        new_line = list()\n        for i in range(0, int(m / 2)):\n            if t == 0 or turn == 0:\n                if i % 2 == 0:\n                    new_line.append(0)\n                    new_line.append(1)\n                else:\n                    new_line.append(1)\n                    new_line.append(0)\n            elif i % 2 == 0:\n                new_line.append(1)\n                new_line.append(0)\n            else:\n                new_line.append(0)\n                new_line.append(1)\n        if t == 0 or count <= 2:\n            count = count + 1\n        if count > 2:\n            if turn == 1:\n                turn = 0\n            else:\n                turn = 1\n            count = 1\n        board.append(new_line)\n    for j in board:\n        print(' '.join(map(str, j)))", "a = int(input())\nju = [[1, 0, 0, 1], [0, 1, 1, 0], [0, 1, 1, 0], [1, 0, 0, 1]]\nfor i in range(a):\n    (n, m) = map(int, input().split())\n    for j in range(n):\n        ans = []\n        for k in range(m):\n            ans.append(str(ju[j % 4][k % 4]))\n        print(' '.join(ans))", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    (n, m) = [int(i) for i in input().split()]\n    k = 0\n    p = 0\n    if n >= 4:\n        for i in range(0, n // 4, 1):\n            if m >= 4:\n                for j in range(0, m // 4, 1):\n                    print('1 0 0 1 ', end='')\n            if m % 4 != 0:\n                print('1 0 ', end='')\n            print('\\n')\n            if m >= 4:\n                for j in range(0, m // 4, 1):\n                    print('0 1 1 0 ', end='')\n            if m % 4 != 0:\n                print('0 1 ', end='')\n            print('\\n')\n            if m >= 4:\n                for j in range(0, m // 4, 1):\n                    print('0 1 1 0 ', end='')\n            if m % 4 != 0:\n                print('0 1 ', end='')\n            print('\\n')\n            if m >= 4:\n                for j in range(0, m // 4, 1):\n                    print('1 0 0 1 ', end='')\n            if m % 4 != 0:\n                print('1 0 ', end='')\n            print('\\n')\n    if n % 4 != 0:\n        if m >= 4:\n            for j in range(0, m // 4, 1):\n                print('1 0 0 1 ', end='')\n        if m % 4 != 0:\n            print('1 0 ', end='')\n        print('\\n')\n        if m >= 4:\n            for j in range(0, m // 4, 1):\n                print('0 1 1 0 ', end='')\n        if m % 4 != 0:\n            print('0 1 ', end='')\n        print('\\n')", "def GenerateMatrix(n, m):\n    matrix = list()\n    baseMatrix = [[0, 1, 1, 0], [1, 0, 0, 1], [1, 0, 0, 1], [0, 1, 1, 0]]\n    for i in range(n):\n        matrix.append(list())\n        for j in range(m):\n            matrix[i].append(baseMatrix[i % 4][j % 4])\n    return matrix\n\ndef ShowMatrix(matrix):\n    for i in range(len(matrix)):\n        print(' '.join([str(el) for el in matrix[i]]))\n\ndef GetNeigboursCount(matrix, i, j):\n    n = len(matrix)\n    m = len(matrix[0])\n    own = matrix[i][j]\n    count = 0\n    if i - 1 >= 0 and matrix[i - 1][j] != own:\n        count += 1\n    if i + 1 < n and matrix[i + 1][j] != own:\n        count += 1\n    if j - 1 >= 0 and matrix[i][j - 1] != own:\n        count += 1\n    if j + 1 < m and matrix[i][j + 1] != own:\n        count += 1\n    return count\n\ndef CheckMatrix(matrix):\n    n = len(matrix)\n    m = len(matrix[0])\n    newMatrix = matrix\n    for i in range(n):\n        for j in range(m):\n            if GetNeigboursCount(matrix, i, j) != 2:\n                newMatrix[i][j] = 3 if matrix[i][j] == 0 else 4\n    ShowMatrix(newMatrix)\nn = int(input())\nfor i in range(n):\n    (x, y) = [int(i) for i in input().split()]\n    matrix = GenerateMatrix(x, y)\n    ShowMatrix(matrix)", "def fu():\n    return map(int, input().split(' '))\n\ndef kil_(nm):\n    (n, m) = nm\n    AA = ''\n    for i in range(n):\n        A = ''\n        for j in range(m):\n            if j % 2 == (i + int(j / 2) + int(i / 2)) % 2:\n                A += '1' + ' '\n            else:\n                A += '0' + ' '\n        AA += A[:-1] + '\\n'\n    return AA[:-1]\n\ndef kil(a):\n    t = int(input())\n    A = ''\n    for i in range(t):\n        A += kil_(a()) + '\\n'\n    print(A[:-1])\nkil(fu)", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    a //= 2\n    b //= 2\n    l = ['1 0', '0 1', '0 1', '1 0']\n    for i in range(2 * a):\n        for j in range(b):\n            print(l[(i + 2 * j) % 4], end=' ')\n        print()", "for _ in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    a = [[1 if i % 4 in [0, 3] and j % 4 in [0, 3] or (i % 4 in [1, 2] and j % 4 in [1, 2]) else 0 for j in range(m)] for i in range(n)]\n    for i in range(n):\n        print(' '.join((str(j) for j in a[i])))", "C = int(input())\nwhile C:\n    (n, m) = map(int, input().split())\n    board = [[0 for c in range(m)] for r in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                if j % 4 == 0 or j % 4 == 3:\n                    board[i][j] = '1'\n                else:\n                    board[i][j] = '0'\n            elif i % 2 == 1:\n                if board[i - 1][j] == '1':\n                    board[i][j] = '0'\n                else:\n                    board[i][j] = '1'\n            elif i % 2 == 0:\n                if board[i - 1][j] == '0':\n                    board[i][j] = '0'\n                else:\n                    board[i][j] = '1'\n        print(' '.join(board[i]))\n    C -= 1", "for i in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    a = [0] * n\n    for i in range(n):\n        a[i] = [0] * m\n    for i in range(n):\n        for j in range(m):\n            if i % 4 == 0 or i % 4 == 3:\n                if j % 4 == 0 or j % 4 == 3:\n                    a[i][j] = 1\n            elif j % 4 == 1 or j % 4 == 2:\n                a[i][j] = 1\n        print(' '.join(list(map(str, a[i]))))", "T = int(input())\nfor t in range(T):\n    (r, c) = map(int, input().split())\n    marker = 0\n    mark = [None] * r\n    mark[0] = marker\n    start = 0\n    r_marker = 1 - marker\n    for i in range(1, r - 1):\n        if start < 2:\n            mark[i] = r_marker\n            start += 1\n        else:\n            r_marker = 1 - r_marker\n            mark[i] = r_marker\n            start = 1\n    mark[-1] = 1 - mark[-2]\n    for i in range(r):\n        result = [None] * c\n        result[0] = str(mark[i])\n        r_start = 0\n        r_marker = 1 - mark[i]\n        for j in range(1, c - 1):\n            if r_start < 2:\n                result[j] = str(r_marker)\n                r_start += 1\n            else:\n                r_marker = 1 - r_marker\n                result[j] = str(r_marker)\n                r_start = 1\n        result[-1] = str(1 - int(result[-2]))\n        print(' '.join(result))", "tests = int(input())\nfor i in range(0, tests):\n    (n, m) = map(int, input().split()[:2])\n    board = list()\n    count = 0\n    turn = 1\n    for t in range(0, n):\n        new_line = list()\n        for i in range(0, int(m / 2)):\n            if t == 0 or turn == 0:\n                if i % 2 == 0:\n                    new_line.append(0)\n                    new_line.append(1)\n                else:\n                    new_line.append(1)\n                    new_line.append(0)\n            elif i % 2 == 0:\n                new_line.append(1)\n                new_line.append(0)\n            else:\n                new_line.append(0)\n                new_line.append(1)\n        if t == 0 or count <= 2:\n            count = count + 1\n        if count > 2:\n            if turn == 1:\n                turn = 0\n            else:\n                turn = 1\n            count = 1\n        board.append(new_line)\n    for j in board:\n        print(' '.join(map(str, j)))", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    for j in range(a):\n        for k in range(b // 2):\n            if (j % 4 == 0 or j % 4 == 3) and k % 2 == 0 or ((j % 4 == 2 or j % 4 == 1) and k % 2 == 1):\n                print('1 0', end=' ')\n            else:\n                print('0 1', end=' ')\n        print()", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    l = ['1 0', '0 1', '0 1', '1 0']\n    for i in range(a):\n        for j in range(b // 2):\n            print(l[(i + 2 * j) % 4], end=' ')\n        print()", "test = int(input())\na = '0 1'\nb = '1 0'\nfor i in range(test):\n    [height, length] = map(int, input().split())\n    dd = 0\n    for k in range(height):\n        if k % 2 != 0:\n            dd += 1\n        for j in range(int(length / 2)):\n            if (j + dd) % 2 == 0:\n                print(a, end=' ')\n                continue\n            print(b, end=' ')\n        print()", "t = int(input())\nfor _ in range(t):\n    (n, m) = [int(x) // 2 for x in input().split()]\n    sub_matrix_even = ['1 0 ', '0 1 ']\n    sub_matrix_odd = ['0 1 ', '1 0 ']\n    for j in range(n):\n        for i in range(m):\n            if (i + j) % 2 == 0:\n                print(sub_matrix_even[0], end='')\n            else:\n                print(sub_matrix_odd[0], end='')\n        print()\n        for i in range(m):\n            if (i + j) % 2 == 0:\n                print(sub_matrix_even[1], end='')\n            else:\n                print(sub_matrix_odd[1], end='')\n        print()", "t = int(input())\noptions = [[[1, 0], [0, 1]], [[0, 1], [1, 0]]]\nfor _ in range(t):\n    [n, m] = [int(c) for c in input().split()]\n    ans = [[0 for _ in range(m)] for _ in range(n)]\n    for i in range(0, n, 2):\n        for j in range(0, m, 2):\n            op = options[int((i / 2 + j / 2) % 2)]\n            ans[i][j:j + 2] = op[0]\n            ans[i + 1][j:j + 2] = op[1]\n    for row in ans:\n        print(' '.join([str(a) for a in row]))", "for _ in range(int(input())):\n    (n, m) = [int(_) for _ in input().split()]\n    ten = '1 0'\n    one = '0 1'\n    for i in range(0, n, 2):\n        if i % 4 == 0 or i % 4 == 3:\n            for j in range(0, m // 2):\n                if j % 2 == 0:\n                    print(ten, end=' ')\n                else:\n                    print(one, end=' ')\n            print()\n            for j in range(0, m // 2):\n                if j % 2 == 0:\n                    print(one, end=' ')\n                else:\n                    print(ten, end=' ')\n            print()\n        else:\n            for j in range(0, m // 2):\n                if j % 2 == 0:\n                    print(one, end=' ')\n                else:\n                    print(ten, end=' ')\n            print()\n            for j in range(0, m // 2):\n                if j % 2 == 0:\n                    print(ten, end=' ')\n                else:\n                    print(one, end=' ')\n            print()", "t = int(input())\nfor _ in range(t):\n    (row, col) = list(map(int, input().split()))\n    for j in range(row // 2):\n        if j % 2 == 0:\n            group = col // 2\n            i = 0\n            while group:\n                if i % 2 == 0:\n                    print('1 0', end=' ')\n                else:\n                    print('0 1', end=' ')\n                i += 1\n                group -= 1\n            print()\n            group = col // 2\n            i = 0\n            while group:\n                if i % 2 == 0:\n                    print('0 1', end=' ')\n                else:\n                    print('1 0', end=' ')\n                i += 1\n                group -= 1\n            print()\n        else:\n            group = col // 2\n            i = 0\n            while group:\n                if i % 2 == 0:\n                    print('0 1', end=' ')\n                else:\n                    print('1 0', end=' ')\n                i += 1\n                group -= 1\n            print()\n            group = col // 2\n            i = 0\n            while group:\n                if i % 2 == 0:\n                    print('1 0', end=' ')\n                else:\n                    print('0 1', end=' ')\n                i += 1\n                group -= 1\n            print()", "t = int(input().strip())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    half_m = m // 2\n    for i in range(n):\n        if i % 4 == 0 or i % 4 == 3:\n            for j in range(half_m):\n                if j % 2:\n                    print('0 1', end=' ')\n                else:\n                    print('1 0', end=' ')\n        else:\n            for j in range(half_m):\n                if j % 2:\n                    print('1 0', end=' ')\n                else:\n                    print('0 1', end=' ')\n        print('')", "t = int(input())\nfor x in range(t):\n    (h, w) = map(int, input().split())\n    for a in range(1, h + 1):\n        str_ = ''\n        for b in range(1, w + 1):\n            str_ += str(int((a % 4 <= 1) != (b % 4 <= 1))) + ' '\n        print(str_)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    c1 = 2\n    for i in range(n):\n        ans = ''\n        if c1 > 2:\n            start = 0\n        else:\n            start = 1\n        c2 = 2\n        for j in range(m):\n            if c2 > 2:\n                ans += str(abs(start - 1))\n            else:\n                ans += str(start)\n            ans += ' '\n            c2 += 1\n            if c2 > 4:\n                c2 = 1\n        c1 += 1\n        if c1 > 4:\n            c1 = 1\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    for i in range(1, n + 1):\n        for j in range(m // 2):\n            c = j + i // 2\n            if c % 2:\n                print('1 0', end=' ')\n            else:\n                print('0 1', end=' ')\n        print()", "import math\n\ndef func():\n    (n, m) = map(int, input().split())\n    l1 = [1, 0, 0, 1]\n    l2 = [0, 1, 1, 0]\n    l1 *= math.ceil(m / 4)\n    l2 *= math.ceil(m / 4)\n    l1 = l1[:m]\n    l2 = l2[:m]\n    f = 0\n    for i in range(n // 2):\n        if not f:\n            print(*l1)\n            print(*l2)\n            f = 1\n        else:\n            print(*l2)\n            print(*l1)\n            f = 0\nt = int(input())\nfor _ in range(t):\n    func()", "t = int(input())\nnm_list = []\nfor i in range(t):\n    nm_list.append([int(elm) for elm in input().split(' ')])\narray_list = []\nfor nm in nm_list:\n    x = [[0] * nm[1] for i in range(nm[0])]\n    c_n = 1\n    for i in range(nm[0]):\n        c_m = c_n\n        for j in range(nm[1]):\n            x[i][j] = str(c_m)\n            if j % 2 == 0:\n                c_m = -(c_m - 1)\n        if i % 2 == 0:\n            c_n = -(c_n - 1)\n    array_list.append(x)\nfor array in array_list:\n    for i in range(len(array)):\n        print(' '.join([str(elm) for elm in array[i]]))", "testcases = int(input())\nfor i in range(testcases):\n    (n, m) = map(int, input().split())\n    li = []\n    a1 = []\n    a2 = []\n    for k in range(m):\n        if k == 0:\n            a1.append(1)\n        elif (k + 1) % 4 == 0 or k % 4 == 0:\n            a1.append(1)\n        else:\n            a1.append(0)\n    for s in range(m):\n        if s == 0:\n            a2.append(0)\n        elif (s + 1) % 4 == 0 or s % 4 == 0:\n            a2.append(0)\n        else:\n            a2.append(1)\n    for p in range(n):\n        if p == 0:\n            print(*a1)\n        elif p % 4 == 0 or (p + 1) % 4 == 0:\n            print(*a1)\n        else:\n            print(*a2)", "n = int(input())\narr = []\nres = []\ntry:\n    while n > 0:\n        string = [int(x) for x in input().split()]\n        if string:\n            arr.append(string)\n            n -= 1\nexcept Exception:\n    pass\n\ndef fnc(x):\n    res = []\n    for i in range(x[0]):\n        res.append([])\n        for j in range(x[1]):\n            if i == 0 and j == 0:\n                res[i].append(1)\n            elif i == 1 and j == 0:\n                res[i].append(0)\n            elif j == 0:\n                if res[i - 1][0] == 0 and res[i - 2][0] == 1 or (res[i - 1][0] == 1 and res[i - 2][0] == 1):\n                    res[i].append(0)\n                else:\n                    res[i].append(1)\n            elif i == 0 and j == 1:\n                res[i].append(0)\n            elif i == 1 and j == 0:\n                res[i].append(1)\n            elif res[i][j - 1] == 0 and res[i][j - 2] == 1 or (res[i][j - 1] == 1 and res[i][j - 2] == 1):\n                res[i].append(0)\n            else:\n                res[i].append(1)\n    return res\n\ndef printRes(res):\n    for x in range(len(res)):\n        print(' '.join(list(map(str, res[x]))))\nfor x in range(len(arr)):\n    printRes(fnc(arr[x]))", "for _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    a = [1, 0, 0, 1]\n    b = [0, 1, 1, 0]\n    k = n // 4\n    r = n % 4\n    a = a * k + a[:r]\n    b = b * k + b[:r]\n    for i in range(1, m + 1):\n        if i % 4 == 1 or i % 4 == 0:\n            print(*a)\n        else:\n            print(*b)", "l = int(input())\nfor i in range(l):\n    (n, m) = input().split()\n    n = int(n)\n    m = int(m)\n    mtx = [[-1 for i in range(m)] for j in range(n)]\n    mtx[0][0] = 1\n    indexA = 0\n    for a in range(n - 1):\n        add = [0, 1]\n        mtx[1 + a][0] = add[indexA % 2]\n        if (a + 1) % 2 == 0:\n            indexA += 1\n    for c in range(n):\n        indexB = 0\n        for b in range(m - 1):\n            if mtx[c][0] == 1:\n                add = [0, 1]\n                mtx[c][1 + b] = add[indexB % 2]\n                if (b + 1) % 2 == 0:\n                    indexB += 1\n            else:\n                add = [1, 0]\n                mtx[c][1 + b] = add[indexB % 2]\n                if (b + 1) % 2 == 0:\n                    indexB += 1\n        indexB = 0\n    for k in range(n):\n        result = ' '.join((str(item) for item in mtx[k]))\n        print(result)", "import math\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    check = True\n    ans = []\n    a1 = []\n    a2 = []\n    for i in range(0, m, 2):\n        if check:\n            a1.append(0)\n            a1.append(1)\n            a2.append(1)\n            a2.append(0)\n            check = False\n        else:\n            a1.append(1)\n            a1.append(0)\n            a2.append(0)\n            a2.append(1)\n            check = True\n    check = True\n    for i in range(0, n, 2):\n        if check:\n            ans.append(a1)\n            ans.append(a2)\n            check = False\n        else:\n            ans.append(a2)\n            ans.append(a1)\n            check = True\n    for i in ans:\n        print(*i)", "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    q = m // 4\n    r = m % 4\n    s1 = ''\n    for j in range(q):\n        s1 += '1001'\n    if r > 0:\n        s1 += '10'\n    s0 = ''\n    for j in range(q):\n        s0 += '0110'\n    if r > 0:\n        s0 += '01'\n    q1 = n // 4\n    r1 = n % 4\n    ans = []\n    for j in range(q1):\n        ans.append(s1)\n        ans.append(s0)\n        ans.append(s0)\n        ans.append(s1)\n    if r1 > 0:\n        ans.append(s1)\n        ans.append(s0)\n    for j in ans:\n        lst = list(j)\n        print(*lst)", "def Thing(x):\n    return x % 4 in [0, 3]\nfor qwer in range(int(input())):\n    aaa = [int(lskadng) for lskadng in input().split()]\n    for i in range(aaa[0]):\n        lol = ''\n        for j in range(aaa[1]):\n            lol += str((Thing(i) + Thing(j)) % 2)\n            if j != aaa[1] - 1:\n                lol += ' '\n        print(lol)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = [0] * m\n    flag = False\n    c = 0\n    for i in range(m):\n        if i % 4 == 0 or i % 4 == 3:\n            a[i] = 1\n    b = [0] * m\n    for i in range(m):\n        if a[i] == 0:\n            b[i] = 1\n        else:\n            b[i] = 0\n    for j in range(n):\n        if j % 4 == 0 or j % 4 == 3:\n            print(*a)\n        else:\n            print(*b)", "t = int(input())\nfor _ in range(0, t):\n    inputs = [int(num) for num in input().split()]\n    n = inputs[0]\n    m = inputs[1]\n    row1 = [1]\n    k = 0\n    for i in range(0, (m - 2) // 2):\n        if i % 2 == 0:\n            row1.append(0)\n            row1.append(0)\n            k = 1\n        else:\n            row1.append(1)\n            row1.append(1)\n            k = 0\n    if k == 0:\n        row1.append(0)\n    else:\n        row1.append(1)\n    row2 = [0]\n    k = 0\n    for i in range(0, (m - 2) // 2):\n        if i % 2 == 0:\n            row2.append(1)\n            row2.append(1)\n            k = 1\n        else:\n            row2.append(0)\n            row2.append(0)\n            k = 0\n    if k == 0:\n        row2.append(1)\n    else:\n        row2.append(0)\n    print(*row1)\n    k = 0\n    for i in range(0, (n - 2) // 2):\n        if i % 2 == 0:\n            print(*row2)\n            print(*row2)\n            k = 1\n        else:\n            print(*row1)\n            print(*row1)\n            k = 0\n    if k == 0:\n        print(*row2)\n    else:\n        print(*row1)", "tc = int(input())\nfor i in range(tc):\n    (nt, mt) = map(int, input().split())\n    op = []\n    str_a = '10'\n    str_b = '01'\n    str_1 = ''\n    str_2 = ''\n    for j in range(mt // 2):\n        if j % 2 != 0:\n            str_2 += str_a\n            str_1 += str_b\n        else:\n            str_1 += str_a\n            str_2 += str_b\n    for g in range(nt):\n        if g % 4 == 0 or g % 4 == 3:\n            op.append(list(str_1))\n        else:\n            op.append(list(str_2))\n    for h in range(len(op)):\n        print(*op[h])", "for s in [*open(0)][1:]:\n    (n, m) = map(int, s.split())\n    for r in (([([0, 0, 1, 1] * m)[1:m + 1]] * 2 + [([1, 1, 0, 0] * m)[1:m + 1]] * 2) * n)[1:n + 1]:\n        print(*r)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    output_arr = []\n    a = '10'\n    b = '01'\n    string = ''\n    string2 = ''\n    for i in range(k // 2):\n        if i % 2 == 0:\n            string += a\n            string2 += b\n        else:\n            string += b\n            string2 += a\n    for i in range(n):\n        if i % 4 == 0 or i % 4 == 3:\n            output_arr.append(list(string))\n        else:\n            output_arr.append(list(string2))\n    for i in range(len(output_arr)):\n        print(*output_arr[i])", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    L = [1]\n    M = [0]\n    for i in range(1, m):\n        if i % 4 == 1 or i % 4 == 2:\n            L.append(0)\n            M.append(1)\n        else:\n            L.append(1)\n            M.append(0)\n    for i in range(n):\n        if i % 4 == 0 or i % 4 == 3:\n            print(*L)\n        else:\n            print(*M)", "for s in [*open(0)][1:]:\n    (n, m) = map(int, s.split())\n    for r in (([([0, 0, 1, 1] * m)[1:m + 1]] * 2 + [([1, 1, 0, 0] * m)[1:m + 1]] * 2) * n)[1:n + 1]:\n        print(*r)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    row = [0] * m\n    for i in range(m):\n        if i % 4 == 0 or i % 4 == 3:\n            row[i] = 1\n    row2 = [int(not i) for i in row]\n    for i in range(n):\n        if i % 4 == 0 or i % 4 == 3:\n            print(*row)\n        else:\n            print(*row2)", "first = [0, 1, 1, 0] * 15\nsecond = [1, 0, 0, 1] * 15\nfinal = [first, second, second, first] * 15\nfor _ in range(int(input())):\n    (row, col) = map(int, input().split())\n    for i in range(row):\n        print(*final[i][:col])", "def ss(n, m):\n    lst = []\n    a = [1, 0, 0, 1] * (m // 4) + [1, 0] * (m % 4 - 1)\n    b = [0, 1, 1, 0] * (m // 4) + [0, 1] * (m % 4 - 1)\n    for i in range(n // 2):\n        if i % 2 == 0:\n            lst.append(a)\n            lst.append(b)\n        else:\n            lst.append(b)\n            lst.append(a)\n    return lst\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    lst = ss(n, m)\n    for i in lst:\n        print(*i)", "def solve():\n    (n, m) = map(int, input().split())\n    res = ['' for _ in range(n)]\n    m //= 2\n    n //= 2\n    b = True\n    for i in range(n):\n        for j in range(m):\n            if b:\n                res[i * 2] += '10'\n                res[i * 2 + 1] += '01'\n            else:\n                res[i * 2] += '01'\n                res[i * 2 + 1] += '10'\n            b = not b\n        if res[i * 2][0] == '1':\n            b = False\n        else:\n            b = True\n    for i in res:\n        print(*list(i))\n    return\n\ndef main():\n    for _ in range(int(input())):\n        solve()\n    return\nmain()", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n == 2 and m == 2:\n        print(1, 0)\n        print(0, 1)\n        continue\n    a = []\n    b = [1, 0]\n    c = [0, 1]\n    t = 1\n    d = []\n    for j in range(m // 2):\n        if t == 1:\n            d += b\n        else:\n            d += c\n        t = t ^ 1\n    a += [d]\n    for i in range(1, n):\n        if i % 2 == 1:\n            t = a[i - 1][0] ^ 1\n        elif i % 2 == 0:\n            t = a[i - 1][0]\n        d = []\n        for j in range(m // 2):\n            if t == 1:\n                d += b\n            else:\n                d += c\n            t = t ^ 1\n        a += [d]\n    for i in a:\n        print(*i)", "for _ in range(int(input())):\n    (n, m) = [int(y) for y in input().split()]\n    chng = 1\n    inp = 1\n    tmp1 = []\n    tmp2 = []\n    for i in range(m):\n        if chng == 2:\n            inp ^= 1\n            chng = 0\n        tmp1.append(inp)\n        tmp2.append(inp ^ 1)\n        chng += 1\n    flag = True\n    a = []\n    for i in range(int(n // 2)):\n        if flag:\n            a.append(tmp1)\n            a.append(tmp2)\n            flag = False\n        else:\n            a.append(tmp2)\n            a.append(tmp1)\n            flag = True\n    for i in range(n):\n        print(*a[i])", "for _ in range(int(input())):\n    a = [1, 0, 0, 1] * 13\n    b = [0, 1, 1, 0] * 13\n    (m, n) = list(map(int, input().split()))\n    for i in range(m):\n        if i % 4 == 0:\n            print(*b[:n])\n        elif i % 4 == 1:\n            print(*a[:n])\n        elif i % 4 == 2:\n            print(*a[:n])\n        elif i % 4 == 3:\n            print(*b[:n])", "test = int(input())\nwhile test:\n    (n, m) = map(int, input().split())\n    row = [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1]\n    order = [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1]\n    same = row[:m]\n    rev = []\n    for i in same:\n        if i == 0:\n            rev.append(1)\n        else:\n            rev.append(0)\n    print(*same)\n    for i in range(n - 2):\n        if order[i]:\n            print(*same)\n        else:\n            print(*rev)\n    if n // 2 % 2 == 0:\n        print(*same)\n    else:\n        print(*rev)\n    test -= 1", "def main():\n    t = int(input())\n    for _ in range(t):\n        (n, m) = map(int, input().split())\n        field = [[0] * m for _ in range(n)]\n        for i in range(n):\n            for j in range(m):\n                if i % 4 == 0 or i % 4 == 3:\n                    if j % 4 == 1 or j % 4 == 2:\n                        field[i][j] = 1\n                elif j % 4 == 0 or j % 4 == 3:\n                    field[i][j] = 1\n        for f in field:\n            print(*f)\nmain()", "def solve(n, m):\n    l = [[0] * m for k in range(n)]\n    for i in range(n):\n        if (i + 1) % 4 == 0 or (i + 1) % 4 == 1:\n            for j in range(m):\n                if (j + 1) % 4 == 0 or (j + 1) % 4 == 1:\n                    l[i][j] = 1\n                else:\n                    l[i][j] = 0\n        else:\n            for j in range(m):\n                if (j + 1) % 4 == 0 or (j + 1) % 4 == 1:\n                    l[i][j] = 0\n                else:\n                    l[i][j] = 1\n    return l\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    final = solve(n, m)\n    for i in final:\n        print(*i)", "def soln():\n    (x, y) = map(int, input().split())\n    ans = []\n    l1 = [1, 0, 0, 1]\n    l2 = [0, 1, 1, 0]\n    if y % 4 == 2:\n        val1 = [1, 0, 0, 1] * (y // 4) + l1[:2]\n        val2 = [0, 1, 1, 0] * (y // 4) + l2[:2]\n    else:\n        val1 = [1, 0, 0, 1] * (y // 4)\n        val2 = [0, 1, 1, 0] * (y // 4)\n    ans = []\n    cnt = 1\n    for i in range(x // 2):\n        if cnt == 1:\n            ans.append(val1)\n            ans.append(val2)\n            cnt = 0\n        else:\n            ans.append(val2)\n            ans.append(val1)\n            cnt = 1\n    for i in ans:\n        print(*i)\nt = int(input())\nfor _ in range(0, t):\n    soln()", "for _ in range(int(input())):\n    (n, m) = [int(x) for x in input().split()]\n    ans = [[], []]\n    flag = 0\n    for i in range(m // 2):\n        if flag == 0:\n            ans[0].append(1)\n            ans[0].append(0)\n            flag = 1\n        else:\n            ans[0].append(0)\n            ans[0].append(1)\n            flag = 0\n    flag = 0\n    for i in range(m // 2):\n        if flag == 1:\n            ans[1].append(1)\n            ans[1].append(0)\n            flag = 0\n        else:\n            ans[1].append(0)\n            ans[1].append(1)\n            flag = 1\n    p = []\n    flag = 0\n    for i in range(n // 2):\n        if flag == 0:\n            p.append(ans[0])\n            p.append(ans[1])\n            flag = 1\n        else:\n            p.append(ans[1])\n            p.append(ans[0])\n            flag = 0\n    for i in range(n):\n        print(*p[i])", "for s in [*open(0)][1:]:\n    (n, m) = map(int, s.split())\n    for r in (([([0, 0, 1, 1] * m)[1:m + 1]] * 2 + [([1, 1, 0, 0] * m)[1:m + 1]] * 2) * n)[1:n + 1]:\n        print(*r)", "for s in [*open(0)][1:]:\n    (n, m) = map(int, s.split())\n    print(*((i ^ j) % 4 // 2 for i in range(1, n + 1) for j in range(1, m + 1)))", "for s in [*open(0)][1:]:\n    (n, m) = map(int, s.split())\n    print(*((i ^ j) % 4 // 2 for i in range(1, n + 1) for j in range(1, m + 1)))", "for s in [*open(0)][1:]:\n    (n, m) = map(int, s.split())\n    print(*((i ^ j) % 4 // 2 for i in range(1, n + 1) for j in range(1, m + 1)))", "for s in [*open(0)][1:]:\n    (n, m) = map(int, s.split())\n    print(*((i ^ j) % 4 // 2 for i in range(1, n + 1) for j in range(1, m + 1)))"]