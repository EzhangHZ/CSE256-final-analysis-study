["def check(pars, dep, k):\n    _oper = 0\n    depths = [1 for i in range(len(pars))]\n    for i in range(len(pars) - 1, 0, -1):\n        if depths[i] == dep and pars[i] != 0:\n            _oper += 1\n        else:\n            par = pars[i]\n            depths[par] = max(depths[par], depths[i] + 1)\n    return _oper <= k\nt = int(input())\nfor _ in range(t):\n    (n, k) = input().split()\n    (n, k) = (int(n), int(k))\n    pars = [0]\n    pars_temp = input().split()\n    pars += [int(i) - 1 for i in pars_temp]\n    (low, high) = (1, n - 1)\n    while low < high:\n        mid = (low + high) // 2\n        if check(pars, mid, k):\n            high = mid - 1\n        else:\n            low = mid + 1\n    if high >= 1 and check(pars, high, k):\n        print(high)\n    else:\n        print(high + 1)", "for _ in range(int(input())):\n    (q, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, q - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (q + 1)\n        for i in range(q, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (nrestedges, krestedges) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, nrestedges - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (nrestedges + 1)\n        for i in range(nrestedges, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= krestedges:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (s, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, s - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (s + 1)\n        for i in range(s, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (num, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, num - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (num + 1)\n        for i in range(num, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, o) = (1, n - 1)\n    while l < o:\n        mid = (l + o) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            o = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [-1, 0] + [int(i) for i in input().split()]\n    (l, r) = (1, n - 1)\n    while l < r:\n        mid = (l + r) // 2\n        tot = 0\n        h = [0] * (n + 1)\n        for i in range(n, 1, -1):\n            if h[i] == mid - 1 and arr[i] != 1:\n                tot += 1\n            else:\n                h[arr[i]] = max(h[arr[i]], h[i] + 1)\n        if tot <= k:\n            r = mid\n        else:\n            l = mid + 1\n    print(l)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, k) = map(int, input().split())\n    P = list(map(int, input().split()))\n    child = [[] for _ in range(n + 1)]\n    par = [-1] * (n + 1)\n    for i in range(1, n):\n        child[P[i - 1]].append(i + 1)\n        par[i + 1] = P[i - 1]\n    stack = [(0, 1)]\n    depth = [0] * (n + 1)\n    while stack:\n        (d, node) = stack.pop()\n        depth[node] = d\n        for ch in child[node]:\n            stack.append((d + 1, ch))\n    D = sorted([(v, i + 1) for (i, v) in enumerate(depth[1:])])\n    (lo, hi) = (1, n - 1)\n    while lo < hi:\n        mid = (lo + hi) // 2\n        cnt = 0\n        vis = set()\n        i = n - 1\n        while i >= 0 and cnt <= k:\n            (d, idx) = D[i]\n            if d <= mid or idx in vis:\n                i -= 1\n                continue\n            curr = 0\n            while idx > 0 and curr < mid - 1:\n                idx = par[idx]\n                curr += 1\n            stack = [idx]\n            vis.add(idx)\n            while stack:\n                node = stack.pop()\n                for ch in child[node]:\n                    if ch not in vis:\n                        vis.add(ch)\n                        stack.append(ch)\n            cnt += 1\n            i -= 1\n        if cnt <= k:\n            hi = mid\n        else:\n            lo = mid + 1\n    return hi\nfor _ in range(int(input())):\n    print(solve())"]