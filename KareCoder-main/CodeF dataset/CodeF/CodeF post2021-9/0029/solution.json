["for n in [*map(int, open(0))][1:]:\n    print((n < 2) - -n // 3)", "from sys import stdin, stdout\n\ndef ans():\n    n = int(stdin.readline())\n    if n % 3 == 0:\n        print(n // 3)\n    elif n > 3:\n        print(n // 3 + 1)\n    elif n == 1:\n        print(2)\n    else:\n        print(1)\nt = int(stdin.readline())\nfor _ in range(t):\n    ans()", "for no in [*map(int, open(0))][1:]:\n    print((no < 2) - -no // 3)", "for n in [*map(int, open(0))][1:]:\n    print((n < 2) - -n // 3)", "for n in [*map(int, open(0))][1:]:\n    print((n < 2) - -n // 3)", "def solve():\n    n = int(input())\n    if n == 1:\n        return 2\n    ans = n // 3\n    if n % 3 == 0:\n        return ans\n    return ans + 1\nt = int(input())\nans = []\nwhile t:\n    ans.append(str(solve()))\n    t -= 1\nprint('\\n'.join(ans))", "for liuo in [*map(int, open(0))][1:]:\n    print((liuo < 2) - -liuo // 3)", "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    n = int(sys.stdin.readline())\n    r = n % 3\n    if n == 1:\n        print(2)\n    elif r == 0:\n        print(n // 3)\n    elif r == 1:\n        a = (n - 4) // 3\n        print(a + 2)\n    else:\n        a = n // 3\n        print(a + 1)", "from sys import stdin, stdout\nn = int(stdin.readline())\nfor _ in range(n):\n    i = int(stdin.readline())\n    if i == 1:\n        print(2)\n    elif i == 2:\n        print(1)\n    elif i == 3:\n        print(1)\n    elif i % 3 == 0:\n        print(i // 3)\n    else:\n        print(i // 3 + 1)", "for n in [*map(int, open(0))][1:]:\n    print((n < 2) - -n // 3)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    if n == 2:\n        print(1)\n    elif n == 1:\n        print(2)\n    elif n == 4:\n        print(2)\n    elif n % 3 == 0:\n        print(int(n / 3))\n    else:\n        print(int(n / 3 + 1))", "import sys\nimport math\n\ndef main():\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n = int(sys.stdin.readline())\n        m = abs(n)\n        if m == 1:\n            print(2)\n        else:\n            print((m + 2) // 3)\n    return\nmain()", "for n in [*map(int, open(0))][1:]:\n    print((n < 2) - -n // 3)", "for l in [*map(int, open(0))][1:]:\n    print((l < 2) - -l // 3)", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    res = 0\n    if n == 1:\n        res = int(2)\n    elif n % 3 == 0:\n        res = int(n / 3)\n    elif n % 3 == 1:\n        res = int(2 + (n - 4) / 3)\n    elif n % 3 == 2:\n        res = int(1 + n / 3)\n    sys.stdout.write(str(res) + '\\n')", "from sys import stdin\nrd = stdin.readline\nfor _ in range(int(rd())):\n    n = int(rd())\n    if n % 3 != 0 and n != 1:\n        print(n // 3 + 1)\n    elif n == 1:\n        print(2)\n    else:\n        print(n // 3)", "from sys import setrecursionlimit, stdin\nsetrecursionlimit(1 << 20)\nreadline = stdin.readline\n\ndef I():\n    return int(readline())\n\ndef ST():\n    return readline()[:-1]\n\ndef LI():\n    return list(map(int, readline().split()))\n\ndef LII():\n    return list(map(lambda x: int(x) - 1, readline().split()))\n\ndef LF(x, func):\n    return [func() for _ in [0] * x]\n\ndef SPI():\n    return map(int, readline().split())\n\ndef SPII():\n    return map(lambda x: int(x) - 1, readline().split())\n\ndef FIE(x):\n    return [readline()[:-1] for _ in [0] * x]\nN = I()\nfor _ in range(N):\n    a = I()\n    if a == 1:\n        print(2)\n    else:\n        print((a + 2) // 3)", "import sys\nfrom sys import stdin, stdout\nfrom math import ceil, floor, sqrt, log, log2, log10\nfrom collections import Counter\nint_max = float('inf')\nint_min = -float('inf')\nmod = 10 ** 9 + 7\nANS = []\ninput = stdin.readline\n\ndef solve():\n    pass\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    if n == 1:\n        print(2)\n        continue\n    if n % 3 == 0:\n        print(n // 3)\n    else:\n        print(n // 3 + 1)", "n = int(input())\na = list()\nfor i in range(n):\n    k = int(input())\n    if k < 3:\n        a.append(3 - k)\n    else:\n        a.append((k - 1) // 3 + 1)\nfor i in a:\n    print(i)", "t = int(input())\nk = []\nfor i in range(t):\n    a = int(input())\n    if (a / 3).is_integer() == True:\n        k.append(a / 3)\n    elif a == 1 or a == -1:\n        k.append(2)\n    else:\n        k.append(int(a / 3) + 1)\nfor i in k:\n    print(int(i))", "import sys\nimport math\nfrom collections import Counter\nfrom collections import defaultdict\n\ndef get_ints():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef solve(n):\n    if n == 1:\n        return 2\n    if n == 2 or n == 3:\n        return 1\n    elif n % 3 == 0:\n        return n // 3\n    else:\n        return n // 3 + 1\nt = int(input())\nfor _ in range(t):\n    n = get_ints()\n    print(solve(n[0]))", "trials = int(input())\nanswer_list = []\nfor _ in range(trials):\n    i = int(input())\n    if i == 1:\n        answer_list.append(2)\n        continue\n    y = i % 3\n    if y == 0:\n        ans = i / 3\n    else:\n        ans = i // 3 + 1\n    ans = int(ans)\n    answer_list.append(ans)\nfor g in answer_list:\n    print(g)", "def solution(arr):\n    res = [2, 1, 1, 2, 2, 2]\n    for it in arr:\n        if it < 7:\n            print(res[it - 1])\n        else:\n            print((it - 7) // 3 + 3)\nn = int(input())\nask = []\nfor i in range(n):\n    ask.append(int(input()))\nsolution(ask)", "t = int(input())\na = []\nfor i in range(t):\n    a.append(int(input()))\nfor i in range(t):\n    if a[i] == 1:\n        print(2)\n    elif a[i] == 4:\n        print(2)\n    elif a[i] == 7:\n        print(3)\n    elif a[i] % 3 == 0:\n        print(a[i] // 3)\n    else:\n        print(a[i] // 3 + 1)", "no = int(input())\nx = []\ni = 0\nwhile i < no:\n    x.append(int(input()))\n    i += 1\nfor k in x:\n    if k == 2 or k == 3:\n        print(1)\n    elif k == 1:\n        print(2)\n    elif k % 3 == 0:\n        print(str(int(k / 3)))\n    elif k % 3 == 1:\n        print(str(int((k + 2) / 3)))\n    elif k % 3 == 2:\n        print(str(int((k + 1) / 3)))", "n = int(input())\nc = []\nfor i in range(n):\n    a = int(input())\n    if a == 1:\n        r = 2\n    elif a % 3 == 0:\n        r = int(a / 3)\n    else:\n        r = int(a / 3 + 1)\n    c.append(r)\nfor i in c:\n    print(i)", "number = int(input())\nmass = []\nfor i in range(number):\n    rez = int(input())\n    mass.append(rez)\nfor i in range(len(mass)):\n    if mass[i] % 3 == 0:\n        print(mass[i] // 3)\n    elif mass[i] % 3 == 1 and mass[i] != 1:\n        print(mass[i] // 3 + 1)\n    elif mass[i] % 3 == 1 and mass[i] == 1:\n        print(2)\n    else:\n        print(mass[i] // 3 + 1)", "for n in [*map(int, open(0))][1:]:\n    print((n < 2) - -n // 3)", "for n in [*map(int, open(0))][1:]:\n    print((n < 2) - -n // 3)", "n = int(input())\nl = []\nfor i in range(n):\n    z = int(input())\n    l.append(z)\nfor i in l:\n    if i == 1:\n        print(2)\n    elif i % 3 == 0:\n        print(int(i / 3))\n    else:\n        print(int(i // 3 + 1))", "x = int(input())\nval = []\nfor i in range(0, x):\n    val.append(int(input()))\nfor i in val:\n    if i == 1:\n        print('2')\n        continue\n    elif i == 2:\n        print('1')\n        continue\n    else:\n        q = int(i / 3)\n        if i % 3 == 0:\n            print(q)\n        else:\n            print(int(q + 1))", "for n in [*map(int, open(0))][1:]:\n    print((n < 2) - -n // 3)", "import sys\nfrom sys import stdin, stdout\nfrom math import ceil, floor, sqrt, log, log2, log10\nfrom collections import Counter\nint_max = float('inf')\nint_min = -float('inf')\nmod = 10 ** 9 + 7\nANS = []\ninput = stdin.readline\n\ndef solve():\n    pass\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    if n == 1:\n        print(2)\n        continue\n    if n % 3 == 0:\n        print(n // 3)\n    else:\n        print(n // 3 + 1)", "t = int(input())\na = []\nfor i in range(t):\n    a += [abs(int(input()))]\nfor x in a:\n    if x % 3 == 0:\n        print(x // 3)\n    elif x == 1:\n        print(2)\n    elif x % 6 in [4, 5]:\n        print(x // 6 * 2 + 2)\n    elif x % 6 in [1, 2]:\n        print(x // 6 * 2 + 1)", "t = int(input())\na = [0 for i in range(t)]\nb = [0 for i in range(t)]\nfor i in range(t):\n    a[i] = int(input())\nfor i in range(t):\n    if a[i] == 1:\n        print(2)\n    elif a[i] == 2:\n        print(1)\n    elif a[i] == 3:\n        print(1)\n    elif a[i] == 4:\n        print(2)\n    else:\n        b[i] = a[i] // 3\n        m3 = a[i] % 3\n        if m3 > 0:\n            b[i] += 1\n        print(b[i])", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    if n % 3 == 0:\n        print(int(n / 3))\n    elif n % 3 == 1:\n        if n % 2 == 0:\n            print(int(min(n / 2, 1 + (n - 1) / 3)))\n        elif n > 4:\n            print(int(min(2 + (n - 1) / 3, 1 + (n + 2) / 3, 2 + (n - 4) / 3)))\n        else:\n            print(int(min(2 + (n - 1) / 3, 1 + (n + 2) / 3)))\n    elif n % 3 == 2:\n        if n % 2 == 0:\n            print(int(min(n / 2, 1 + (n - 2) / 3)))\n        else:\n            print(int(min(1 + (n - 2) / 3, 2 + (n + 1) / 3)))", "def sol1(i, x):\n    if (i - 2) % 3 == 0:\n        print(x + (i - 2) // 3)\n    else:\n        sol1(i - 2, x + 1)\n\ndef sol(i, x):\n    if (i - 2) % 3 == 0 and i - 2 != 0:\n        print(1 + x + (i - 2) // 3)\n    elif (i - 2) % 3 == 0 and i - 2 == 0:\n        print(1 + x)\n    else:\n        sol(i - 2, x + 1)\nn = int(input())\nl = []\nfor i in range(n):\n    l.append(int(input()))\nfor i in l:\n    p3 = 0\n    p2 = 0\n    if i == 1:\n        print(2)\n    elif i % 3 == 0:\n        print(i // 3)\n    elif i % 2 == 0:\n        x = 1\n        p2 = sol1(i, x)\n    elif i % 2 != 0 and i % 3 != 0:\n        if (i - 2) % 3 == 0:\n            print(1 + (i - 2) // 3)\n        elif (i - 3) % 2 == 0:\n            x = 1\n            sol(i - 3, x)", "for n in [*map(int, open(0))][1:]:\n    print((n < 2) - -n // 3)", "for n in [*map(int, open(0))][1:]:\n    print((n < 2) - -n // 3)", "t = int(input())\nn = []\nresult = []\nfor i in range(t):\n    n.append(int(input()))\nfor i in range(t):\n    if abs(n[i]) == 1:\n        r = 2\n    elif abs(n[i]) == 2:\n        r = 1\n    elif abs(n[i]) % 3 == 0:\n        r = abs(n[i]) // 3\n    else:\n        r = abs(n[i]) // 3 + 1\n    result.append(r)\nprint(*result, sep='\\n')", "t = int(input())\nl = []\nfor i in range(0, t):\n    n = int(input())\n    if n < 3:\n        x = 3 - n\n    elif n % 3 == 1:\n        x = n // 3 + pow(n % 3 + 1, 0)\n    else:\n        x = n // 3 + (0 < n % 3)\n    l.append(x)\nfor i in range(0, t):\n    print(l[i])", "for n in [*map(int, open(0))][1:]:\n    print((n < 2) - -n // 3)", "def ans(n):\n    count = 0\n    n = abs(n)\n    if n == 1:\n        return 2\n    if n % 3 == 1 or n % 3 == 2:\n        return n // 3 + 1\n    if n % 3 == 0:\n        return n // 3\nT = int(input())\nr = []\nfor _ in range(T):\n    n = int(input())\n    a = ans(n)\n    r.append(a)\nfor i in range(T):\n    print(r[i])", "no = int(input())\nlist = [int(input()) for i in range(no)]\nfor i in range(no):\n    n = list[i]\n    if n == 1:\n        print(2)\n    else:\n        if n % 3 == 0:\n            print(int(n / 3))\n        if n % 3 == 1:\n            print(2 + int((n - 4) / 3))\n        if n % 3 == 2:\n            print(1 + int((n - 2) / 3))", "count = int(input())\ngoals = []\nfor i in range(count):\n    goals.append(int(input()))\n\ndef eval_time(g):\n    if g % 3 == 0:\n        return int(g / 3)\n    if g % 3 == 2:\n        return g // 3 + 1\n    if g == 4:\n        return int(g / 2)\n    if g % 3 == 1:\n        if g - 4 > 0:\n            return (g - 4) // 3 + 2\n        else:\n            return 2\nfor g in goals:\n    print(eval_time(g))", "for n in [*map(int, open(0))][1:]:\n    print((n < 2) - -n // 3)", "nb = int(input())\nres = []\nfor i in range(nb):\n    goal = int(input())\n    if goal == 1:\n        res.append(2)\n    elif goal % 3 == 0:\n        res.append(goal // 3)\n    elif goal % 3 == 1 or goal % 3 == 2:\n        res.append(1 + goal // 3)\nfor i in res:\n    print(i)", "t = int(input(''))\ntestes = []\nfor i in range(0, t):\n    n = int(input(''))\n    testes.append(n)\nresultados = []\nfor teste in testes:\n    if teste == 1 or teste == 4:\n        resultados.append(2)\n    elif teste == 2 or teste == 3:\n        resultados.append(1)\n    elif teste % 3 == 0:\n        resultados.append(teste / 3)\n    elif teste % 3 == 1:\n        teste -= 4\n        resultados.append(teste / 3 + 2)\n    elif teste % 3 == 2:\n        resultados.append(teste / 3 + 1)\nfor resultado in resultados:\n    print(int(resultado))", "from math import ceil\nimport sys\ninput = sys.stdin.readline\n\ndef print(*args, end='\\n', sep=' ') -> None:\n    sys.stdout.write(sep.join(map(str, args)) + end)\n\ndef Solve():\n    for t in range(int(input())):\n        n = int(input())\n        if n == 1:\n            print(2)\n        elif n == 2 or n == 3:\n            print(1)\n        else:\n            print(ceil(n / 3))\nSolve()", "def func():\n    inputs = []\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        inputs.append(n)\n    for n in inputs:\n        if n == 1:\n            print(2)\n        elif n % 3 == 0:\n            min = int(n / 3)\n            print(min)\n        elif n % 2 == 1:\n            min = n // 3 + 1\n            print(min)\n        else:\n            test = n\n            while True:\n                test = test - 2\n                if test % 3 == 0:\n                    break\n            test2 = n\n            while True:\n                test2 = test2 + 2\n                if test2 % 3 == 0:\n                    break\n            dif1 = abs(test - n)\n            dif2 = abs(test2 - n)\n            min1 = int(test / 3 + dif1 / 2)\n            min2 = int(test2 / 3 + dif2 / 2)\n            if min1 < min2:\n                print(min1)\n            else:\n                print(min2)\nfunc()", "x = input().split(' ')\nt = int(x[0])\nq = []\nfor i in range(t):\n    w = input().split(' ')\n    q.append(int(w[0]))\nfor j in q:\n    j = int(j)\n    if j == 1:\n        print(2)\n    elif j % 3 == 0:\n        print(int(j / 3))\n    else:\n        print(int(int(j / 3) + 1))", "import math\nt = int(input())\nans = [0] * t\nf = 0\nwhile t > 0:\n    n = int(input())\n    if n == 1:\n        ans[f] = 2\n    elif n % 3 == 1:\n        ans[f] = math.floor(n / 3) + 1\n    else:\n        count = math.floor(n / 3)\n        if n % 3 == 2:\n            count += 1\n        elif n % 3 == 1:\n            count += 2\n        ans[f] = count\n    f += 1\n    t -= 1\nfor i in ans:\n    print(i)", "n = int(input())\ninp = []\nfor i in range(n):\n    inp.append(int(input()))\nfor element in inp:\n    minute = 0\n    while element != 0:\n        if element == 4:\n            minute += 2\n            element = 0\n        elif element >= 3:\n            minute += element // 3\n            element = element % 3\n            if element == 1:\n                element = 4\n                minute -= 1\n        elif element == 2:\n            minute += 1\n            element = 0\n        elif element == 1:\n            minute += 2\n            element = 0\n    print(minute)", "x = int(input())\nresult = []\nfor i in range(x):\n    num = int(input())\n    if num % 3 == 0:\n        result.append(num // 3)\n    elif num == 1:\n        result.append(2)\n    else:\n        result.append(num // 3 + 1)\nfor i in result:\n    print(i)", "kactane = int(input())\nt = [0] * 10000\nfor i in range(0, kactane):\n    t[i] = int(input())\nfor k in range(0, kactane):\n    if t[k] != 1 and t[k] % 3 == 1:\n        sonuc = t[k] // 3 + 1\n        print(sonuc)\n    if t[k] % 3 == 0:\n        sonuc = t[k] // 3\n        print(sonuc)\n    if t[k] % 3 == 2:\n        sonuc = t[k] // 3 + 1\n        print(sonuc)\n    if t[k] == 1:\n        print('2')", "from collections import Counter\nimport string\nimport math\nimport bisect\nimport sys\nfrom fractions import Fraction\n\ndef array_int():\n    return [int(i) for i in sys.stdin.readline().split()]\n\ndef vary(arrber_of_variables):\n    if arrber_of_variables == 1:\n        return int(sys.stdin.readline())\n    if arrber_of_variables >= 2:\n        return map(int, sys.stdin.readline().split())\n\ndef makedict(var):\n    return dict(Counter(var))\nmod = 10 ** 9 + 7\ntestcases = vary(1)\nfor _ in range(testcases):\n    n = vary(1)\n    if n == 4:\n        print(2)\n        continue\n    if n == 7:\n        print(3)\n        continue\n    ans1 = n - n // 3 * 3\n    if ans1 == 0:\n        print(n // 3)\n        continue\n    if ans1 == 2:\n        print(n // 3 + 1)\n    elif n - 4 >= 0 and (n - 4) % 3 == 0:\n        print(2 + (n - 4) // 3)\n    else:\n        print(n // 3 + 2)", "def solve(n):\n    if n == 1:\n        return 2\n    if n == 2 or n == 3:\n        return 1\n    if n % 3 == 0:\n        return n // 3\n    else:\n        return n // 3 + 1\nt = int(input())\nans = []\nfor _ in range(t):\n    n = int(input())\n    ans.append(solve(n))\nfor i in ans:\n    print(i)", "def calculatePath(n):\n    if n < 0:\n        n *= -1\n    numbers = {2: 0, 3: 0}\n    if n == 1:\n        numbers[3] = 1\n        numbers[2] = 1\n        return numbers[3] + numbers[2]\n    remains = n % 3\n    numbers[3] = int((n - remains) / 3)\n    n -= 3 * numbers[3]\n    if remains == 1:\n        numbers[3] -= 1\n        n += 3\n        numbers[2] = 2\n        n -= 2 * 2\n    elif remains == 2:\n        numbers[2] += 1\n        n -= 2\n    return numbers[3] + numbers[2]\ntestcase = int(input())\nres = []\nwhile testcase > 0:\n    n = int(input())\n    res.append(calculatePath(n))\n    testcase -= 1\nfor n in res:\n    print(n)", "def solve(n):\n    if n == 1:\n        return 2\n    return (n + 2) // 3\nnum_cases = int(input(''))\nresults = []\nfor i in range(num_cases):\n    results.append(solve(int(input())))\nfor r in results:\n    print(r)", "import math\na = int(input())\nb = []\nwhile a > 0:\n    i = abs(int(input()))\n    b.append(math.ceil(i / 3) if i != 1 else 2)\n    a -= 1\nfor i in b:\n    print(i)", "import sys\nt = int(sys.stdin.readline())\nwhile t:\n    t -= 1\n    n = int(sys.stdin.readline())\n    x = 0\n    m = 0\n    while x != n:\n        m += 1\n        d = n - x\n        if d == 1:\n            x += 3\n        elif d == -2:\n            x -= 2\n        elif d == 4 or d == 2:\n            x += 2\n        elif d < 6:\n            x += 3\n        else:\n            s = d / 3\n            if s == int(s):\n                m += int(s) - 1\n                x += 3 * int(s)\n            else:\n                m += int(s) - 2\n                x += 3 * (int(s) - 1)\n    print(m)", "t = int(input())\nlist1 = []\nfor i in range(0, t):\n    n = int(input())\n    list1.append(n)\nfor j in range(0, t):\n    p = list1[j]\n    if p == 1:\n        ans = 2\n    elif p % 3 == 0:\n        ans = int(p / 3)\n    else:\n        ans = int(p / 3) + 1\n    print(ans)", "n = int(input())\nA = []\nfor i in range(0, n):\n    m = int(input())\n    A.append(m)\nfor i in range(0, n):\n    if A[i] == 1:\n        print('2')\n    elif A[i] % 3 == 0 or A[i] % 3 == 2 or A[i] % 3 == 1:\n        if A[i] % 3 == 0:\n            a = int(A[i] / 3)\n            print(a)\n        elif A[i] % 3 == 2:\n            c = A[i] - 2\n            d = int(c / 3)\n            e = d + 1\n            print(e)\n        elif A[i] % 3 == 1:\n            c = A[i] - 4\n            d = int(c / 3)\n            e = d + 2\n            print(e)\n    elif A[i] % 2 == 0:\n        b = int(A[i] / 2)\n        print(b)\n    else:\n        f = A[i] - 1\n        g = int(c / 2)\n        h = d + 1\n        print(h)", "def minPaths(n):\n    return 2 if n == 1 else (2 + n) // 3\nn = int(input())\nl = []\nfor i in range(n):\n    l.append(int(input()))\nfor i in range(n):\n    print(minPaths(l[i]))", "def Minute(x):\n    return_list = []\n    for i in x:\n        if i == 1:\n            return_list.append(2)\n        elif i == 2:\n            return_list.append(1)\n        elif i % 3 == 0:\n            return_list.append(i / 3)\n        elif i % 3 == 2:\n            return_list.append((i - 2) / 3 + 1)\n        elif i % 3 == 1:\n            return_list.append((i - 1) / 3 + 1)\n    return return_list\ntestcase = input('')\nn_list = []\nif testcase.isnumeric() and 1 <= int(testcase) <= 10 ** 4:\n    for i in range(int(testcase)):\n        n_take = input('')\n        if n_take.isnumeric() and 1 <= int(n_take) <= 10 ** 9:\n            n_list.append(int(n_take))\n        else:\n            quit()\nelse:\n    quit()\nanswers = Minute(n_list)\nfor i in answers:\n    print(int(i))", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    if n == 1:\n        return 2\n    elif n % 3 == 0:\n        return n // 3\n    elif n % 3 == 2:\n        return n // 3 + 1\n    else:\n        return (n - 4) // 3 + 2\nfor _ in range(int(input())):\n    print(solve())", "a = int(input())\ngoals = []\ni = 0\nwhile i < a:\n    b = int(input())\n    goals.append(b)\n    i = i + 1\ninitial = 0\nfor x in goals:\n    steps = 0\n    remain = x\n    if remain % 3 == 0:\n        steps = int(remain / 3)\n    elif remain % 3 == 1 and remain != 1:\n        steps = int(remain / 3) + 1\n    elif remain == 1:\n        steps = 2\n    elif remain % 3 == 2:\n        steps = int(remain / 3) + 1\n    print(steps)", "for _ in range(int(input())):\n    n = int(input())\n    if n % 3 == 0:\n        print(n // 3)\n    elif n % 3 == 1:\n        if n == 1:\n            print(2)\n        else:\n            print(n // 3 + 1)\n    else:\n        print(n // 3 + 1)", "t = int(input())\nA = [0] * t\nfor i in range(t):\n    A[i] = int(input())\nfor i in range(t):\n    if A[i] > 3:\n        a = int(A[i] / 2)\n        b = int(A[i] / 3)\n        c = A[i] % 3\n        if c != 0:\n            b = b + 1\n        print(min(a, b))\n    elif A[i] == 3 or A[i] == 2:\n        print('1')\n    else:\n        print('2')", "re = []\nnumcase = int(input())\nfor i in range(numcase):\n    goal = int(input())\n    if goal < 0:\n        goal = -goal\n    if goal == 1 or goal == -1:\n        re.append(2)\n    elif goal % 3 == 0:\n        re.append(goal // 3)\n    elif goal % 3 == 1:\n        re.append((goal - 4) // 3 + 2)\n    elif goal % 3 == 2:\n        re.append((goal - 2) // 3 + 1)\nfor term in re:\n    print(term)", "import math\nt = int(input())\nanswer_list = []\nfor i in range(t):\n    a = math.fabs(int(input()))\n    b = a // 3\n    c = a - b * 3\n    if a == 1:\n        d = 2\n    elif a == 2:\n        d = 1\n    elif a >= 3 and c != 0:\n        d = b + 1\n    else:\n        d = b\n    answer_list.append(int(d))\nprint(*answer_list, sep='\\n')", "for _ in range(int(input())):\n    N = int(input())\n    if N == 1:\n        print(2)\n        continue\n    q = N // 3\n    print(q + 1 if N % 3 else q)", "def solve():\n    x = int(input())\n    for _ in range(x):\n        n = int(input())\n        if n == 1:\n            print(2)\n        else:\n            c = n // 3\n            if n % 3:\n                c += 1\n            print(c)\nsolve()", "for _ in range(int(input())):\n    n = int(input())\n    print(1 + (n == 1) if n <= 3 else (n + 2) // 3)", "for _ in range(int(input())):\n    n = int(input())\n    print(1 + (n == 1) if n <= 3 else (n + 2) // 3)", "a = int(input())\nf = []\nfor i in range(1, a + 1):\n    b = int(input())\n    if b == 1:\n        f.append(2)\n    elif b % 3 == 0:\n        f.append(b // 3)\n    elif b % 3 > 0:\n        f.append(b // 3 + 1)\nfor t in f:\n    print(t)", "for _ in range(int(input())):\n    n = int(input())\n    ans = n // 3\n    if n % 3 == 1 and n > 1:\n        ans += 1\n    elif n % 3 == 1 and n == 1:\n        ans += 2\n    elif n % 3 == 2:\n        ans += 1\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n    elif n % 3 == 0:\n        print(n // 3)\n    elif n % 3 == 1:\n        print(n // 3 + 1)\n    else:\n        print((n + 1) // 3)", "for i in range(int(input())):\n    a = int(input())\n    if a % 3 == 0:\n        print(a // 3)\n    elif a == 1:\n        print('2')\n    else:\n        print(a // 3 + 1)", "t = int(input())\nfor i in range(t):\n    n = abs(int(input()))\n    if n % 3 == 0:\n        print(n // 3)\n    elif n % 3 == 1:\n        print(n // 3 + 1 + int(n == 1))\n    else:\n        print(n // 3 + 1)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n    elif n == 2:\n        print(1)\n    elif n == 3:\n        print(1)\n    elif n % 3 == 0:\n        print(n // 3)\n    elif n % 3 == 1:\n        if n == 4:\n            print(2)\n        else:\n            print(n // 3 + 1)\n    else:\n        print(n // 3 + 1)", "for _ in range(int(input())):\n    n = int(input())\n    if n % 3 == 2 and n != 2:\n        print(n // 3 + 1)\n    elif n % 3 == 0:\n        print(n // 3)\n    elif n == 1:\n        print(2)\n    elif n == 2:\n        print(1)\n    else:\n        print(n // 3 + 1)", "import math\nt = int(input())\nwhile t:\n    t -= 1\n    a = int(input())\n    if a == 1:\n        print(2)\n        continue\n    if a % 3 == 0:\n        print(int(a / 3))\n        continue\n    else:\n        print(a // 3 + 1)\n        continue", "for _ in range(int(input())):\n    n = int(input())\n    if n % 3 == 0:\n        print(n // 3)\n    elif n % 3 == 1:\n        if n >= 4:\n            print(n // 3 + 1)\n        else:\n            print(n // 3 + 2)\n    else:\n        print(n // 3 + 1)", "def inp_a():\n    return [int(x) for x in input().split()]\n\ndef inp_s(k):\n    arr = []\n    for i in range(k):\n        arr.append(input())\n    return arr\n\ndef help():\n    pass\nfor _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n    elif n % 3 == 0:\n        print(n // 3)\n    elif n % 3 == 1:\n        print(min(n // 3 + 1, n // 2))\n    elif n % 3 == 2:\n        print(n // 3 + 1)", "t = int(input())\nfor i in range(t):\n    s = 0\n    n = int(input())\n    if n == 1:\n        print(2)\n    elif n % 3 >= 1:\n        print(n // 3 + 1)\n    else:\n        print(n // 3)", "for _ in range(int(input())):\n    n = int(input())\n    k = n // 6\n    if n == 1:\n        print(2)\n        continue\n    if n % 6 == 0:\n        print(2 * k)\n    elif n % 6 <= 2:\n        print(2 * (k - 1) + 3)\n    elif n % 6 == 3:\n        print(2 * k + 1)\n    else:\n        print(2 * k + 2)", "def solve(n):\n    if n == 1:\n        return 2\n    if n % 3 == 0:\n        return n // 3\n    elif n % 3 == 1:\n        return 1 + solve(n - 1)\n    else:\n        return 1 + solve(n - 2)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print(solve(n))", "for _ in range(int(input())):\n    n = int(input())\n    k = n // 6\n    if n == 1:\n        print(2)\n        continue\n    if n % 6 == 0:\n        print(2 * k)\n    elif n % 6 <= 2:\n        print(2 * (k - 1) + 3)\n    elif n % 6 == 3:\n        print(2 * k + 1)\n    else:\n        print(2 * k + 2)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 1:\n        print(2)\n        continue\n    ans = n // 3\n    mod = n % 3\n    if mod == 0:\n        print(ans)\n    else:\n        print(ans + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n == 1:\n        print(2)\n    elif n == 2:\n        print(1)\n    elif n == 3:\n        print(1)\n    elif n % 3 == 0:\n        print(n // 3)\n    else:\n        print(n // 3 + 1)", "n = int(input())\n\ndef solve(x):\n    if x % 3 == 0:\n        return x // 3\n    t = x // 3\n    for f in range(t, -1, -1):\n        if (x - f * 3) % 2 == 0:\n            return f + (x - f * 3) // 2\n    return t + 2\nfor _ in range(n):\n    x = int(input())\n    print(solve(x))", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n    elif n % 3 == 0:\n        print(n // 3)\n    else:\n        print(n // 3 + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = abs(n)\n    b = a // 3\n    c = a // 2\n    if a == 1:\n        print(2)\n    elif a % 3 == 0:\n        print(b)\n    else:\n        print(b + 1)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n    elif n % 3 == 0:\n        print(n // 3)\n    else:\n        print(n // 3 + 1)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(2)\n    elif n % 3 == 0:\n        print(n // 3)\n    else:\n        print(n // 3 + 1)", "c = int(input())\nfor _ in range(c):\n    n = int(input())\n    print(1 + (n == 1) if n <= 3 else (n + 2) // 3)", "c = int(input())\nfor _ in range(c):\n    n = int(input())\n    print(1 + (n == 1) if n <= 3 else (n + 2) // 3)"]