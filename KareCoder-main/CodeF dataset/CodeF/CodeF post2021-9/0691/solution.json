["MOD = 10 ** 9 + 7\ncolor = {'white': 0, 'yellow': 5, 'green': 2, 'blue': 3, 'red': 4, 'orange': 1}\nspecial = {}\nmarked = set()\nk = int(input())\nn = int(input())\ndp = {}\n\ndef solve(i, j):\n    if special.get(i, -1) != -1 and special[i] != j:\n        return 0\n    if dp[i][j] != -1:\n        return dp[i][j]\n    nodel = 2 * i\n    noder = 2 * i + 1\n    suml = 0\n    sumr = 0\n    for col in range(6):\n        if col != 5 - j and col != j:\n            if nodel in marked:\n                suml += solve(nodel, col)\n            else:\n                suml = 1\n            if noder in marked:\n                sumr += solve(noder, col)\n            else:\n                sumr = 1\n    dp[i][j] = suml * sumr % MOD\n    return dp[i][j]\nfor _ in range(n):\n    (v, s) = input().split(' ')\n    v = int(v)\n    special[v] = color[s]\n    while v not in marked and v >= 1:\n        marked.add(v)\n        dp[v] = [-1] * 6\n        v //= 2\nres = 0\nfor col in range(6):\n    res += solve(1, col)\nunmarked_node = 2 ** k - 1 - len(marked)\nability_unmarked = pow(4, unmarked_node, MOD)\nres %= MOD\nres = res * ability_unmarked % MOD\nprint(res)"]