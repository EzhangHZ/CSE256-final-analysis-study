["import sys\nfrom math import *\ninput = lambda : sys.stdin.readline().rstrip()\nfor _ in [0] * int(input()):\n    n = int(input())\n    ls = 1\n    lt = 1\n    tna = 0\n    sna = 0\n    for _ in [0] * n:\n        (c, k, x) = input().split()\n        k = int(k)\n        if int(c) == 1:\n            ls += k * len(x)\n            sna |= len(x) - x.count('a')\n        else:\n            lt += k * len(x)\n            tna |= len(x) - x.count('a')\n        if tna:\n            print('YES')\n        elif sna:\n            print('NO')\n        else:\n            print(['NO', 'YES'][ls < lt])", "import sys\nfrom math import *\ninput = lambda : sys.stdin.readline().rstrip()\nfor _ in [0] * int(input()):\n    n = int(input())\n    l = 1\n    lt = 1\n    na = 0\n    sna = 0\n    for _ in [0] * n:\n        (c, k, x) = input().split()\n        k = int(k)\n        if int(c) == 1:\n            l += k * len(x)\n            sna |= len(x) - x.count('a')\n        else:\n            lt += k * len(x)\n            na |= len(x) - x.count('a')\n        if na:\n            print('YES')\n        elif sna:\n            print('NO')\n        else:\n            print(['NO', 'YES'][l < lt])", "import sys\nR = sys.stdin.readline\nfor _ in range(int(R())):\n    a0 = a1 = 1\n    for _ in range(int(R())):\n        (t, l, s) = R().split()\n        (t, l) = (int(t), int(l))\n        if not a1:\n            print('YES')\n        elif not all((c == 'a' for c in s)):\n            if t == 1:\n                a0 = 0\n                print('NO')\n            else:\n                a1 = 0\n                print('YES')\n        else:\n            if not a0:\n                print('NO')\n                continue\n            if t == 1:\n                a0 += l * len(s)\n            else:\n                a1 += l * len(s)\n            print('YES' if a1 > a0 else 'NO')", "import sys\nR = sys.stdin.readline\nfor _ in range(int(R())):\n    a0 = a1 = 1\n    for _ in range(int(R())):\n        (t, l, s) = R().split()\n        (t, l) = (int(t), int(l))\n        if not a1:\n            print('YES')\n        elif not all((c == 'a' for c in s)):\n            if t == 1:\n                a0 = 0\n                print('NO')\n            else:\n                a1 = 0\n                print('YES')\n        else:\n            if not a0:\n                print('NO')\n                continue\n            if t == 1:\n                a0 += l * len(s)\n            else:\n                a1 += l * len(s)\n            print('YES' if a1 > a0 else 'NO')", "import sys\nR = sys.stdin.readline\nfor _ in range(int(R())):\n    a0 = a1 = 1\n    for _ in range(int(R())):\n        (t, l, s) = R().split()\n        (t, l) = (int(t), int(l))\n        if not a1:\n            print('YES')\n        elif not all((c == 'a' for c in s)):\n            if t == 1:\n                a0 = 0\n                print('NO')\n            else:\n                a1 = 0\n                print('YES')\n        else:\n            if not a0:\n                print('NO')\n                continue\n            if t == 1:\n                a0 += l * len(s)\n            else:\n                a1 += l * len(s)\n            print('YES' if a1 > a0 else 'NO')", "import sys\nfrom math import *\ninput = lambda : sys.stdin.readline().rstrip()\nfor _ in [0] * int(input()):\n    n = int(input())\n    ls = 1\n    lt = 1\n    tna = 0\n    sna = 0\n    for _ in [0] * n:\n        (c, k, x) = input().split()\n        k = int(k)\n        if int(c) == 1:\n            ls += k * len(x)\n            sna |= len(x) - x.count('a')\n        else:\n            lt += k * len(x)\n            tna |= len(x) - x.count('a')\n        if tna:\n            print('YES')\n        elif sna:\n            print('NO')\n        else:\n            print(['NO', 'YES'][ls < lt])", "import sys\nfrom math import *\ninput = lambda : sys.stdin.readline().rstrip()\nfor _ in [0] * int(input()):\n    n = int(input())\n    ls = 1\n    lt = 1\n    tna = 0\n    sna = 0\n    for _ in [0] * n:\n        (c, k, x) = input().split()\n        k = int(k)\n        if int(c) == 1:\n            ls += k * len(x)\n            sna |= len(x) - x.count('a')\n        else:\n            lt += k * len(x)\n            tna |= len(x) - x.count('a')\n        if tna:\n            print('YES')\n        elif sna:\n            print('NO')\n        else:\n            print(['NO', 'YES'][ls < lt])", "import sys\nfrom math import *\ninput = lambda : sys.stdin.readline().rstrip()\nfor _ in [0] * int(input()):\n    n = int(input())\n    ls = 1\n    lt = 1\n    tna = 0\n    sna = 0\n    for _ in [0] * n:\n        (c, k, x) = input().split()\n        k = int(k)\n        if int(c) == 1:\n            ls += k * len(x)\n            sna |= len(x) - x.count('a')\n        else:\n            lt += k * len(x)\n            tna |= len(x) - x.count('a')\n        if tna:\n            print('YES')\n        elif sna:\n            print('NO')\n        else:\n            print(['NO', 'YES'][ls < lt])", "import sys\nfrom math import *\ninput = lambda : sys.stdin.readline().rstrip()\nfor _ in [0] * int(input()):\n    n = int(input())\n    l = 1\n    lt = 1\n    na = 0\n    sna = 0\n    for _ in [0] * n:\n        (c, k, x) = input().split()\n        k = int(k)\n        if int(c) == 1:\n            l += k * len(x)\n            sna |= len(x) - x.count('a')\n        else:\n            lt += k * len(x)\n            na |= len(x) - x.count('a')\n        if na:\n            print('YES')\n        elif sna:\n            print('NO')\n        else:\n            print(['NO', 'YES'][l < lt])", "import sys\nfrom math import *\ninput = lambda : sys.stdin.readline().rstrip()\nfor _ in [0] * int(input()):\n    n = int(input())\n    ls = 1\n    lt = 1\n    tna = 0\n    sna = 0\n    for _ in [0] * n:\n        (c, k, x) = input().split()\n        k = int(k)\n        if int(c) == 1:\n            ls += k * len(x)\n            sna |= len(x) - x.count('a')\n        else:\n            lt += k * len(x)\n            tna |= len(x) - x.count('a')\n        if tna:\n            print('YES')\n        elif sna:\n            print('NO')\n        else:\n            print(['NO', 'YES'][ls < lt])", "import sys\nfrom math import *\ninput = lambda : sys.stdin.readline().rstrip()\nfor _ in [0] * int(input()):\n    n = int(input())\n    ls = 1\n    lt = 1\n    tna = 0\n    sna = 0\n    for _ in [0] * n:\n        (c, k, x) = input().split()\n        k = int(k)\n        if int(c) == 1:\n            ls += k * len(x)\n            sna |= len(x) - x.count('a')\n        else:\n            lt += k * len(x)\n            tna |= len(x) - x.count('a')\n        if tna:\n            print('YES')\n        elif sna:\n            print('NO')\n        else:\n            print(['NO', 'YES'][ls < lt])", "import sys\nfrom math import *\ninput = lambda : sys.stdin.readline().rstrip()\nfor _ in [0] * int(input()):\n    n = int(input())\n    ls = 1\n    lt = 1\n    tna = 0\n    sna = 0\n    for _ in [0] * n:\n        (c, k, x) = input().split()\n        k = int(k)\n        if int(c) == 1:\n            ls += k * len(x)\n            sna |= len(x) - x.count('a')\n        else:\n            lt += k * len(x)\n            tna |= len(x) - x.count('a')\n        if tna:\n            print('YES')\n        elif sna:\n            print('NO')\n        else:\n            print(['NO', 'YES'][ls < lt])", "import sys\nfrom math import *\ninput = lambda : sys.stdin.readline().rstrip()\nfor _ in [0] * int(input()):\n    n = int(input())\n    ls = 1\n    lt = 1\n    tna = 0\n    sna = 0\n    for _ in [0] * n:\n        (c, k, x) = input().split()\n        k = int(k)\n        if int(c) == 1:\n            ls += k * len(x)\n            sna |= len(x) - x.count('a')\n        else:\n            lt += k * len(x)\n            tna |= len(x) - x.count('a')\n        if tna:\n            print('YES')\n        elif sna:\n            print('NO')\n        else:\n            print(['NO', 'YES'][ls < lt])", "import sys\nfrom math import *\ninput = lambda : sys.stdin.readline().rstrip()\nfor _ in [0] * int(input()):\n    n = int(input())\n    ls = 1\n    lt = 1\n    tna = 0\n    sna = 0\n    for _ in [0] * n:\n        (c, k, x) = input().split()\n        k = int(k)\n        if int(c) == 1:\n            ls += k * len(x)\n            sna |= len(x) - x.count('a')\n        else:\n            lt += k * len(x)\n            tna |= len(x) - x.count('a')\n        if tna:\n            print('YES')\n        elif sna:\n            print('NO')\n        else:\n            print(['NO', 'YES'][ls < lt])", "import sys\nfrom math import *\ninput = lambda : sys.stdin.readline().rstrip()\nfor _ in [0] * int(input()):\n    n = int(input())\n    ls = 1\n    lt = 1\n    tna = 0\n    sna = 0\n    for _ in [0] * n:\n        (c, k, x) = input().split()\n        k = int(k)\n        if int(c) == 1:\n            ls += k * len(x)\n            sna |= len(x) - x.count('a')\n        else:\n            lt += k * len(x)\n            tna |= len(x) - x.count('a')\n        if tna:\n            print('YES')\n        elif sna:\n            print('NO')\n        else:\n            print(['NO', 'YES'][ls < lt])", "import sys\nfrom math import *\ninput = lambda : sys.stdin.readline().rstrip()\nfor _ in [0] * int(input()):\n    n = int(input())\n    ls = 1\n    lt = 1\n    tna = 0\n    sna = 0\n    for _ in [0] * n:\n        (c, k, x) = input().split()\n        k = int(k)\n        if int(c) == 1:\n            ls += k * len(x)\n            sna |= len(x) - x.count('a')\n        else:\n            lt += k * len(x)\n            tna |= len(x) - x.count('a')\n        if tna:\n            print('YES')\n        elif sna:\n            print('NO')\n        else:\n            print(['NO', 'YES'][ls < lt])", "import sys\nfrom math import *\ninput = lambda : sys.stdin.readline().rstrip()\nfor _ in [0] * int(input()):\n    n = int(input())\n    ls = 1\n    lt = 1\n    tna = 0\n    sna = 0\n    for _ in [0] * n:\n        (c, k, x) = input().split()\n        k = int(k)\n        if int(c) == 1:\n            ls += k * len(x)\n            sna |= len(x) - x.count('a')\n        else:\n            lt += k * len(x)\n            tna |= len(x) - x.count('a')\n        if tna:\n            print('YES')\n        elif sna:\n            print('NO')\n        else:\n            print(['NO', 'YES'][ls < lt])", "import sys\nfrom math import *\ninput = lambda : sys.stdin.readline().rstrip()\nfor _ in [0] * int(input()):\n    n = int(input())\n    l = 1\n    lt = 1\n    na = 0\n    sna = 0\n    for _ in [0] * n:\n        (c, k, x) = input().split()\n        k = int(k)\n        if int(c) == 1:\n            l += k * len(x)\n            sna |= len(x) - x.count('a')\n        else:\n            lt += k * len(x)\n            na |= len(x) - x.count('a')\n        if na:\n            print('YES')\n        elif sna:\n            print('NO')\n        else:\n            print(['NO', 'YES'][l < lt])", "import sys\nfrom math import *\ninput = lambda : sys.stdin.readline().rstrip()\nfor _ in [0] * int(input()):\n    n = int(input())\n    ls = 1\n    lt = 1\n    tna = 0\n    sna = 0\n    for _ in [0] * n:\n        (c, k, x) = input().split()\n        k = int(k)\n        if int(c) == 1:\n            ls += k * len(x)\n            sna |= len(x) - x.count('a')\n        else:\n            lt += k * len(x)\n            tna |= len(x) - x.count('a')\n        if tna:\n            print('YES')\n        elif sna:\n            print('NO')\n        else:\n            print(['NO', 'YES'][ls < lt])", "import sys\ninput = lambda : sys.stdin.readline().rstrip('\\r\\n')\ninput_values = lambda : map(int, input().split())\nfor _ in range(int(input())):\n    (f, f1, c, d) = (0, 0, 1, 1)\n    for __ in range(int(input())):\n        [p, k, s] = list(input().split())\n        p = int(p)\n        k = int(k)\n        if p == 1:\n            r = 0\n            for j in s:\n                if j == 'a':\n                    r += 1\n                else:\n                    f = 1\n            c = c + r * k\n        else:\n            r = 0\n            for j in s:\n                if j == 'a':\n                    r += 1\n                else:\n                    f1 = 1\n            d = d + r * k\n        if f1:\n            print('YES')\n        elif f == 0:\n            if c >= d:\n                print('NO')\n            else:\n                print('YES')\n        else:\n            print('NO')", "import sys\nfrom math import *\ninput = lambda : sys.stdin.readline().rstrip()\nfor _ in [0] * int(input()):\n    n = int(input())\n    l = 1\n    lt = 1\n    na = 0\n    sna = 0\n    for _ in [0] * n:\n        (c, k, x) = input().split()\n        k = int(k)\n        if int(c) == 1:\n            l += k * len(x)\n            sna |= len(x) - x.count('a')\n        else:\n            lt += k * len(x)\n            na |= len(x) - x.count('a')\n        if na:\n            print('YES')\n        elif sna:\n            print('NO')\n        else:\n            print(['NO', 'YES'][l < lt])", "import sys\nfrom math import *\ninput = lambda : sys.stdin.readline().rstrip()\nfor _ in [0] * int(input()):\n    n = int(input())\n    ls = 1\n    lt = 1\n    tna = 0\n    sna = 0\n    for _ in [0] * n:\n        (c, k, x) = input().split()\n        k = int(k)\n        if int(c) == 1:\n            ls += k * len(x)\n            sna |= len(x) - x.count('a')\n        else:\n            lt += k * len(x)\n            tna |= len(x) - x.count('a')\n        if tna:\n            print('YES')\n        elif sna:\n            print('NO')\n        else:\n            print(['NO', 'YES'][ls < lt])", "import sys\nfrom heapq import heapify, heappush, heappop\nfrom math import ceil, floor, sqrt, gcd\nfrom collections import defaultdict, deque\ninput = lambda : sys.stdin.readline().rstrip('\\r\\n')\n\ndef int_arr():\n    return list(map(int, input().split()))\n\ndef str_arr():\n    return list(map(str, input().split()))\n\ndef get_str():\n    return map(str, input().split())\n\ndef get_int():\n    return map(int, input().split())\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\nmod = 1000000007\n\ndef f(arr):\n    for i in range(25, -1, -1):\n        if arr[i] > 0:\n            return i\n\ndef solve():\n    n = int(input())\n    s = [0 for i in range(26)]\n    t = [0 for i in range(26)]\n    s[0] += 1\n    t[0] += 1\n    for i in range(n):\n        (num, k, x) = get_str()\n        k = int(k)\n        if num == '1':\n            for j in x:\n                s[ord(j) - 97] += k\n        else:\n            for j in x:\n                t[ord(j) - 97] += k\n        (a, b) = (f(s), f(t))\n        if b != 0:\n            print('YES')\n        elif a == b == 0 and s[a] < t[b]:\n            print('YES')\n        else:\n            print('NO')\nT = 1\nT = int(input())\nwhile T:\n    solve()\n    T -= 1", "def solve(fs, ft, sc, tc):\n    if ft:\n        return 'YES'\n    elif fs:\n        return 'NO'\n    return 'YES' if sc < tc else 'NO'\n\ndef main():\n    for _ in range(int(input())):\n        q = int(input())\n        (sa, ta) = (0, 0)\n        (fs, ft) = (False, False)\n        for _ in range(q):\n            (d, k, x) = input().split()\n            (d, k) = (int(d), int(k))\n            if d == 1:\n                for e in x:\n                    if e != 'a':\n                        fs = True\n                    else:\n                        sa += k\n            else:\n                for e in x:\n                    if e != 'a':\n                        ft = True\n                    else:\n                        ta += k\n            print(solve(fs, ft, sa, ta))\nmain()", "def lexicographical():\n    t1 = int(input())\n    for i in range(t1):\n        q = int(input())\n        sa = sb = la = lb = 'a'\n        lena = lenb = 1\n        for j in range(q):\n            (d, k, x) = input().split()\n            k = int(k)\n            if d == '1':\n                if max(x) > la:\n                    la = max(x)\n                lena += k * len(x)\n            else:\n                if max(x) > lb:\n                    lb = max(x)\n                lenb += k * len(x)\n            if sa < lb:\n                print('YES')\n            elif la == lb:\n                if lena < lenb:\n                    print('YES')\n                else:\n                    print('NO')\n            else:\n                print('NO')\nlexicographical()", "import sys\ninput = sys.stdin.readline\nfor t in range(int(input())):\n    res = 'abcdefghijklmnopqrstuvwxyz'\n    dct1 = {i: 0 for i in res}\n    dct2 = {i: 0 for i in res}\n    (dct1['a'], dct2['a']) = (1, 1)\n    for i in range(int(input())):\n        (a, b, c) = input().split(' ')\n        c = c[:-1]\n        if a == '1':\n            for i in c:\n                dct1[i] += int(b)\n        else:\n            for i in c:\n                dct2[i] += int(b)\n        for i in res:\n            if dct2[i] != 0 and i != 'a':\n                print('YES')\n                break\n        else:\n            if dct1['a'] >= dct2['a']:\n                print('NO')\n            else:\n                for i in dct1:\n                    if dct1[i] != 0 and i != 'a':\n                        print('NO')\n                        break\n                else:\n                    print('YES')", "def solve(fs, ft, sc, tc):\n    if ft:\n        return 'YES'\n    elif fs:\n        return 'NO'\n    return 'YES' if sc < tc else 'NO'\n\ndef main():\n    for _ in range(int(input())):\n        q = int(input())\n        (sa, ta) = (0, 0)\n        (fs, ft) = (False, False)\n        for _ in range(q):\n            (d, k, x) = input().split()\n            (d, k) = (int(d), int(k))\n            if d == 1:\n                for e in x:\n                    if e != 'a':\n                        fs = True\n                    else:\n                        sa += k\n            else:\n                for e in x:\n                    if e != 'a':\n                        ft = True\n                    else:\n                        ta += k\n            print(solve(fs, ft, sa, ta))\nmain()", "import sys\nfrom typing import List, Tuple, Dict\nfrom collections import defaultdict, deque, namedtuple\nfrom heapq import heappush as push, heappop as pop\nMOD = int(1000000000.0 + 7)\nINF = float('inf')\nINT_MAX = sys.maxsize\nsys.setrecursionlimit(MOD)\n\ndef solve():\n    q = int(input())\n    s = 'a'\n    t = 'a'\n    sflag = True\n    tflag = True\n    sCnt = 1\n    tCnt = 1\n    while q:\n        (d, k, x) = input().split()\n        d = int(d)\n        k = int(k)\n        for char in x:\n            if d == 1:\n                if char != 'a':\n                    sflag = False\n                sCnt += k\n            elif d == 2:\n                if char != 'a':\n                    tflag = False\n                tCnt += k\n        if not tflag:\n            print('YES')\n        elif sflag and sCnt < tCnt:\n            print('YES')\n        else:\n            print('NO')\n        q -= 1\nt = int(input())\nwhile t:\n    solve()\n    t -= 1", "for _ in range(int(input())):\n    q = int(input())\n    s_a = 1\n    t_a = 1\n    t_has_other = False\n    s_len = 1\n    for _ in range(q):\n        (to, k, x) = input().split()\n        if t_has_other:\n            print('YES')\n            continue\n        k = int(k)\n        a_count = x.count('a')\n        if to == '1':\n            s_a += k * a_count\n            s_len += k * len(x)\n        else:\n            if a_count != len(x):\n                t_has_other = True\n                print('YES')\n                continue\n            t_a += k * a_count\n        if s_len == s_a and s_a >= t_a or s_len != s_a:\n            print('NO')\n        else:\n            print('YES')", "for _ in range(int(input())):\n    (a_in_s, a_in_t) = (1, 1)\n    ck = False\n    (nota_in_s, nota_in_t) = (False, False)\n    for __ in range(int(input())):\n        (d, k, x) = input().split()\n        no_a = x.count('a') * int(k)\n        x = x.replace('a', '')\n        if int(d) == 1:\n            if x != '':\n                nota_in_s = True\n            a_in_s += no_a\n        else:\n            if x != '':\n                ck = True\n                nota_in_t = True\n            a_in_t += no_a\n        if ck:\n            print('YES')\n            continue\n        if nota_in_s and (not nota_in_t):\n            print('NO')\n            continue\n        if a_in_s < a_in_t:\n            print('YES')\n        else:\n            print('NO')", "tests = int(input())\nfor _ in range(tests):\n    q = int(input())\n    s = t = 1\n    talla = True\n    salla = True\n    for _ in range(q):\n        (d, k, x) = input().split()\n        (d, k) = (int(d), int(k))\n        if not talla:\n            print('YES')\n            continue\n        for c in x:\n            if c != 'a':\n                if d == 1:\n                    salla = False\n                else:\n                    talla = False\n                break\n        else:\n            if d == 1:\n                s += k * len(x)\n            else:\n                t += k * len(x)\n        if not talla:\n            print('YES')\n            continue\n        if not salla:\n            print('NO')\n            continue\n        if s < t:\n            print('YES')\n        else:\n            print('NO')", "test = int(input())\nfor j in range(test):\n    s = 'a'\n    t = 'a'\n    maxg = 'a'\n    maxf = 'a'\n    l1 = 1\n    l2 = 1\n    r = int(input())\n    alwaysTrue = False\n    for i in range(r):\n        if alwaysTrue:\n            input()\n            print('YES')\n        else:\n            ch = input()\n            tab = ch.split()\n            w = tab[0]\n            k = int(tab[1])\n            x = tab[2]\n            newmax = max(x)\n            if w == '1':\n                if newmax == 'a':\n                    l1 = l1 + len(x) * k\n                if newmax > maxf:\n                    maxf = newmax\n            else:\n                if newmax == 'a':\n                    l2 = l2 + len(x) * k\n                if newmax > maxg:\n                    maxg = newmax\n            if maxg > 'a':\n                alwaysTrue = True\n                print('YES')\n            elif maxg == 'a' and 'a' == maxf:\n                if l2 > l1:\n                    print('YES')\n                else:\n                    print('NO')\n            else:\n                print('NO')", "for _ in range(int(input())):\n    q = int(input())\n    s_a = 1\n    t_a = 1\n    s_has_other = False\n    t_has_other = False\n    for _ in range(q):\n        (to, k, x) = input().split()\n        if t_has_other:\n            print('YES')\n            continue\n        if to == '1':\n            if not s_has_other:\n                a_count = x.count('a')\n                if a_count != len(x):\n                    s_has_other = True\n                else:\n                    k = int(k)\n                    s_a += k * a_count\n        else:\n            a_count = x.count('a')\n            if a_count != len(x):\n                t_has_other = True\n                print('YES')\n                continue\n            k = int(k)\n            t_a += k * a_count\n        if s_has_other or s_a >= t_a:\n            print('NO')\n        else:\n            print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    (s, t) = (False, False)\n    (ls, lt) = (0, 0)\n    for _ in range(n):\n        (d, k, x) = input().split()\n        (d, k) = (int(d), int(k))\n        for i in x:\n            if d == 1:\n                if i != 'a':\n                    s = True\n                else:\n                    ls += k\n            elif i != 'a':\n                t = True\n            else:\n                lt += k\n        if t:\n            print('YES')\n        elif not s and ls < lt:\n            print('YES')\n        else:\n            print('NO')", "testcase = int(input())\nfor i in range(testcase):\n    numQuery = int(input())\n    size = [1, 1]\n    onlyA = [True, True]\n    for j in range(numQuery):\n        query = input().split()\n        index = int(query[0]) - 1\n        times = int(query[1])\n        size[index] += times * len(query[2])\n        onlyA[index] &= query[2].count('a') == len(query[2])\n        if not onlyA[1] or (onlyA[0] and size[0] < size[1]):\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    f1 = 0\n    f2 = 0\n    cn1 = 0\n    cn2 = 0\n    for i in range(n):\n        l = input().split()\n        if l[0] == '1':\n            c1 = 0\n            for x in l[2]:\n                if x == 'a':\n                    c1 += 1\n                else:\n                    f1 = 1\n            cn1 += c1 * int(l[1])\n        else:\n            c2 = 0\n            for x in l[2]:\n                if x == 'a':\n                    c2 += 1\n                else:\n                    f2 = 1\n            cn2 += c2 * int(l[1])\n        if f2:\n            print('YES')\n        elif f1:\n            print('NO')\n        elif cn1 >= cn2:\n            print('NO')\n        else:\n            print('YES')", "testcase = int(input())\nfor i in range(testcase):\n    numQuery = int(input())\n    size = [1, 1]\n    onlyA = [True, True]\n    for j in range(numQuery):\n        query = input().split()\n        index = int(query[0]) - 1\n        times = int(query[1])\n        size[index] += times * len(query[2])\n        onlyA[index] &= query[2].count('a') == len(query[2])\n        if not onlyA[1] or (onlyA[0] and size[0] < size[1]):\n            print('YES')\n        else:\n            print('NO')", "def solve():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        only_a_in_s = True\n        only_a_in_t = True\n        a_count_in_t = 1\n        a_count_in_s = 1\n        for _ in range(n):\n            (d, k, x) = input().split()\n            d = int(d)\n            k = int(k)\n            if not only_a_in_t:\n                print('YES')\n                continue\n            a_count = sum((char_ == 'a' for char_ in x))\n            if d == 2:\n                if a_count != len(x):\n                    only_a_in_t = False\n                    print('YES')\n                    continue\n                a_count_in_t += a_count * k\n            else:\n                if a_count != len(x):\n                    only_a_in_s = False\n                a_count_in_s += a_count * k\n            if only_a_in_s:\n                print('YES' if a_count_in_s < a_count_in_t else 'NO')\n            else:\n                print('NO')\nsolve()", "import sys, math, bisect\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    s = {}\n    t = {}\n    for i in range(97, 123):\n        s[chr(i)] = 0\n        t[chr(i)] = 0\n    s['a'] = t['a'] = 1\n    q = int(input())\n    for i in range(q):\n        (d, k, x) = [x for x in input().split()]\n        if d == '1':\n            for i in x:\n                s[i] += int(k)\n        else:\n            for i in x:\n                t[i] += int(k)\n\n        def nextOK(i):\n            for j in range(ord(i) + 1, 123):\n                if t[chr(j)] != 0:\n                    return True\n            return False\n\n        def same(i):\n            if s[i] < t[i]:\n                return True\n            return False\n\n        def wearentsame(i):\n            for j in range(ord(i) + 1, 123):\n                if s[chr(j)] != 0:\n                    return False\n            return True\n        for i in s:\n            if s[i] != 0:\n                if nextOK(i):\n                    print('YES')\n                elif same(i) and wearentsame(i):\n                    print('YES')\n                else:\n                    print('NO')\n                break", "for _ in range(int(input())):\n    n = int(input())\n    cnt_s = 1\n    cnt_t = 1\n    check_s = False\n    check_t = False\n    for __ in range(n):\n        (q, k, x) = input().split()\n        k = int(k)\n        q = int(q)\n        for i in x:\n            if q == 1:\n                if i != 'a':\n                    check_s = True\n                else:\n                    cnt_s += k\n            elif i != 'a':\n                check_t = True\n            else:\n                cnt_t += k\n        if check_t or (not check_s and cnt_s < cnt_t):\n            print('YES')\n        else:\n            print('NO')", "import os\nimport math\nimport collections\nimport bisect\nimport functools\nimport itertools\nimport heapq\nimport string\n\ndef solve(a1, a2, c1, c2):\n    if c2:\n        return 'YES'\n    if not c1:\n        return 'YES' if a1 < a2 else 'NO'\n    return 'NO'\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    (a1, a2, c1, c2) = (1, 1, False, False)\n    for __ in range(n):\n        (i, k, x) = input().split()\n        if i == '1':\n            k = int(k)\n            for c in x:\n                if c != 'a':\n                    c1 = True\n                else:\n                    a1 += k\n        else:\n            k = int(k)\n            for c in x:\n                if c != 'a':\n                    c2 = True\n                else:\n                    a2 += k\n        print(solve(a1, a2, c1, c2))", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    allYES = 0\n    a1 = 1\n    a2 = 1\n    b = 0\n    for y in range(n):\n        S = input().split()\n        if allYES == 1:\n            print('YES')\n        else:\n            (S[0], S[1]) = (int(S[0]), int(S[1]))\n            if S[0] == 2:\n                for i in S[2]:\n                    if i != 'a':\n                        allYES = 1\n                        break\n                a2 += len(S[2]) * S[1]\n            if S[0] == 1:\n                for i in S[2]:\n                    if i != 'a':\n                        b += S[1]\n                    else:\n                        a1 += S[1]\n            if allYES == 1:\n                print('YES')\n            elif b == 0 and a1 < a2:\n                print('YES')\n            else:\n                print('NO')", "t = int(input())\nwhile t > 0:\n    t -= 1\n    q = int(input())\n    s_a = 1\n    s_not_a = 0\n    t_a = 1\n    t_not_a = 0\n    for i in range(q):\n        st = input().split()\n        d = int(st[0])\n        k = int(st[1])\n        x = st[2]\n        x_a = 0\n        x_not_a = 0\n        for simb in x:\n            if simb == 'a':\n                x_a += 1\n            else:\n                x_not_a += 1\n        x_a *= k\n        x_not_a *= k\n        if d == 1:\n            s_a += x_a\n            s_not_a += x_not_a\n        else:\n            t_a += x_a\n            t_not_a += x_not_a\n        if t_not_a > 0 or (s_a < t_a and s_not_a == 0):\n            print('YES')\n        else:\n            print('NO')", "def fnd_min_max(lst_1, sz_1, lst_2, sz_2):\n    if len(lst_1) == len(lst_2) and len(lst_1) == 1:\n        if sz_1 < sz_2:\n            return 'YES'\n        else:\n            return 'NO'\n    elif len(lst_2) == 1 and len(lst_1) > 1:\n        return 'NO'\n    return 'YES'\n\ndef parsing():\n    n = int(input())\n    while n > 0:\n        kk = int(input())\n        first = set('a')\n        len_a = 1\n        second = set('a')\n        len_b = 1\n        while kk > 0:\n            arr = input().split(' ')\n            (d, k, st) = (int(arr[0]), int(arr[1]), arr[2])\n            if d == 1:\n                first = first.union(set(st))\n                len_a += len(st) * k\n            else:\n                second = second.union(set(st))\n                len_b += len(st) * k\n            print(fnd_min_max(first, len_a, second, len_b))\n            kk -= 1\n        n -= 1\nparsing()", "testcase = int(input())\nfor i in range(testcase):\n    numQuery = int(input())\n    size = [1, 1]\n    onlyA = [True, True]\n    for j in range(numQuery):\n        query = input().split()\n        index = int(query[0]) - 1\n        times = int(query[1])\n        size[index] += times * len(query[2])\n        onlyA[index] &= query[2].count('a') == len(query[2])\n        if not onlyA[1] or (onlyA[0] and size[0] < size[1]):\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    q = int(input())\n    (s, t) = (1, 1)\n    ss = 0\n    tt = 0\n    for i in range(q):\n        (d, k, x) = map(str, input().split())\n        d = int(d)\n        k = int(k)\n        if d == 1 and tt != 1:\n            s += len(x) * k\n            if len(x) - x.count('a') > 0:\n                ss = 1\n        else:\n            t += len(x) * k\n            if len(x) - x.count('a') > 0:\n                tt = 1\n        if tt == 1:\n            print('YES')\n        elif s >= t or ss == 1:\n            print('NO')\n        else:\n            print('YES')", "for _ in range(int(input())):\n    mxa = 'a'\n    mxb = 'a'\n    mxac = 1\n    mxbc = 1\n    mna = 'a'\n    mnb = 'a'\n    mnac = 1\n    mnbc = 1\n    for __ in range(int(input())):\n        a = input().split()\n        mx = max(a[2])\n        mn = min(a[2])\n        n = int(a[1])\n        if a[0] == '1':\n            if mx > mxa:\n                mxa = mx\n                mxac = n * a[2].count(mx)\n            elif mx == mxa:\n                mxac += n * a[2].count(mx)\n            if mn < mna:\n                mna = mn\n                mnac = n * a[2].count(mn)\n            elif mn == mna:\n                mnac += n * a[2].count(mn)\n        if a[0] == '2':\n            if mx > mxb:\n                mxb = mx\n                mxbc = n * a[2].count(mx)\n            elif mx == mxb:\n                mxbc += n * a[2].count(mx)\n            if mn < mnb:\n                mnb = mn\n                mnbc = n * a[2].count(mn)\n            elif mn == mnb:\n                mnbc += n * a[2].count(mn)\n        if mna < mxb:\n            print('YES')\n        elif mna == mxb and mxa == mxb and (mnac < mxbc):\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    cnt_s = 1\n    cnt_t = 1\n    check_s = False\n    check_t = False\n    for __ in range(n):\n        (q, k, x) = input().split()\n        k = int(k)\n        q = int(q)\n        for i in x:\n            if q == 1:\n                if i != 'a':\n                    check_s = True\n                else:\n                    cnt_s += k\n            elif i != 'a':\n                check_t = True\n            else:\n                cnt_t += k\n        if check_t or (not check_s and cnt_s < cnt_t):\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = [1, False]\n    t = [1, False]\n    for i in range(n):\n        (num, count, sym) = map(str, input().split())\n        num = int(num)\n        count = int(count)\n        if sym != len(sym) * 'a':\n            if num == 1:\n                s[1] = True\n            else:\n                t[1] = True\n        elif num == 1:\n            s[0] += len(sym) * count\n        else:\n            t[0] += len(sym) * count\n        if t[1] == True:\n            print('YES')\n        elif s[0] >= t[0]:\n            print('NO')\n        elif s[1]:\n            print('NO')\n        else:\n            print('YES')", "from math import gcd\nfor _ in range(int(input())):\n    s = {'a': 1}\n    t = {'a': 1}\n    for __ in range(int(input())):\n        (d, k, x) = input().split()\n        (d, k) = (int(d), int(k))\n        for c in x:\n            if d == 1:\n                s[c] = s.get(c, 0) + k\n            else:\n                t[c] = t.get(c, 0) + k\n        print('YES' if len(t) > 1 or (len(s) == 1 and s['a'] < t['a']) else 'NO')", "import string\nfrom collections import Counter\n\ndef solve(fs, ft, sc, tc):\n    if ft:\n        return 'YES'\n    elif fs:\n        return 'NO'\n    return 'YES' if sc < tc else 'NO'\n\ndef main():\n    for _ in range(int(input())):\n        q = int(input())\n        (s, t) = (Counter('a'), Counter('a'))\n        (fs, ft) = (False, False)\n        for _ in range(q):\n            (d, k, x) = input().split()\n            (d, k) = (int(d), int(k))\n            if d == 1:\n                for e in x:\n                    if e != 'a':\n                        fs = True\n                    s[e] += k\n            else:\n                for e in x:\n                    if e != 'a':\n                        ft = True\n                    t[e] += k\n            print(solve(fs, ft, s['a'], t['a']))\nmain()", "t = int(input())\nfor t1 in range(t):\n    q = int(input())\n    ind = 0\n    n2 = 1\n    n1 = 1\n    c1 = 1\n    c2 = 1\n    for q1 in range(q):\n        si = list(input().split())\n        (d, k) = (int(si[0]), int(si[1]))\n        s = si[2]\n        if ind == 0:\n            if d == 2:\n                for i in range(len(s)):\n                    if s[i] != 'a':\n                        ind = 1\n                        break\n                    else:\n                        n2 += k\n                c2 += len(s) * k\n            if d == 1:\n                for i in range(len(s)):\n                    if s[i] == 'a':\n                        n1 += k\n                c1 += len(s) * k\n        if ind == 0:\n            if c1 > c2:\n                print('NO')\n            elif c1 == n1 and c1 < c2:\n                print('YES')\n            else:\n                print('NO')\n        else:\n            print('YES')", "import string\nfrom collections import Counter\n\ndef solve(fs, ft, sc, tc):\n    if ft:\n        return 'YES'\n    elif fs:\n        return 'NO'\n    if sc < tc:\n        return 'YES'\n    return 'NO'\n\ndef main():\n    for _ in range(int(input())):\n        q = int(input())\n        (s, t) = (Counter('a'), Counter('a'))\n        (fs, ft) = (False, False)\n        for _ in range(q):\n            (d, k, x) = input().split()\n            (d, k) = (int(d), int(k))\n            if d == 1:\n                for e in x:\n                    if e != 'a':\n                        fs = True\n                    s[e] += k\n            else:\n                for e in x:\n                    if e != 'a':\n                        ft = True\n                    t[e] += k\n            print(solve(fs, ft, s['a'], t['a']))\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    (alist, olist) = ([1, 1], [0, 0])\n    for __ in range(n):\n        (q, k, s) = input().split()\n        for c in s:\n            if c == 'a':\n                alist[int(q) - 1] += int(k)\n            else:\n                olist[int(q) - 1] += int(k)\n        if olist[1]:\n            print('YES')\n        elif olist[0] == 0 and alist[0] < alist[1]:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nfor _ in range(t):\n    q = int(input())\n    s_a_count = 1\n    t_a_count = 1\n    other_than_a_t = False\n    other_than_a_s = False\n    for _ in range(q):\n        line = list(map(str, input().rstrip().split()))\n        if line[0] == '2':\n            if other_than_a_t:\n                pass\n            else:\n                for char in line[2]:\n                    if char != 'a':\n                        other_than_a_t = True\n                        break\n                    else:\n                        t_a_count += int(line[1])\n        elif other_than_a_t:\n            pass\n        else:\n            for char in line[2]:\n                if char != 'a':\n                    other_than_a_s = True\n                else:\n                    s_a_count += int(line[1])\n        print('YES' if other_than_a_t or (not other_than_a_s and s_a_count < t_a_count) else 'NO')", "t = int(input())\nfor _ in range(t):\n    q = int(input())\n    s_a_count = 1\n    t_a_count = 1\n    other_than_a_t = False\n    other_than_a_s = False\n    for _ in range(q):\n        line = list(map(str, input().rstrip().split()))\n        if line[0] == '2':\n            for char in line[2]:\n                if char != 'a':\n                    other_than_a_t = True\n                    break\n                else:\n                    t_a_count += int(line[1])\n        else:\n            for char in line[2]:\n                if char != 'a':\n                    other_than_a_s = True\n                else:\n                    s_a_count += int(line[1])\n        print('YES' if other_than_a_t or (not other_than_a_s and s_a_count < t_a_count) else 'NO')", "import collections\nLETTERS = 'abcdefghijklmnopqrstuvwxyz'\n\ndef solve():\n    t = int(input())\n    for _ in range(t):\n        q = int(input())\n        s = collections.defaultdict(int)\n        t = collections.defaultdict(int)\n        s['a'] = 1\n        t['a'] = 1\n        for _ in range(q):\n            (d, k, x) = input().split()\n            d = int(d)\n            k = int(k)\n            if d == 1:\n                for letter in x:\n                    s[letter] += k\n            else:\n                for letter in x:\n                    t[letter] += k\n            s_overall_count = 0\n            last_diff = None\n            for (index, letter) in enumerate(LETTERS):\n                s_count = s[letter]\n                t_count = t[letter]\n                if not s_count and (not t_count):\n                    continue\n                if t_count > 0 and s_overall_count > 0:\n                    print('YES')\n                    break\n                last_diff = t_count - s_count\n                s_overall_count += s_count\n            else:\n                print('YES' if last_diff > 0 else 'NO')\nsolve()", "for _ in range(int(input())):\n    n = int(input())\n    (s, tot) = (1, 1)\n    t = 1\n    p = False\n    for i in range(n):\n        (op, k, x) = map(str, input().split())\n        k = int(k)\n        for j in x:\n            if p:\n                break\n            if op == '1':\n                if ord(j) == ord('a'):\n                    s += k\n                    tot += k\n                else:\n                    tot += k\n            elif ord(j) - ord('a') != 0:\n                p = True\n            else:\n                t += k\n        if p:\n            print('YES')\n        elif t <= tot:\n            print('NO')\n        elif tot == s:\n            print('YES')\n        else:\n            print('NO')", "from collections import Counter\n\ndef cal(dics, dict):\n    if len(dict) > 1:\n        return 'YES'\n    if dict['a'] <= dics['a']:\n        return 'NO'\n    if len(dics) > 1:\n        return 'NO'\n    return 'YES'\nfor jj in range(int(input())):\n    dics = {'a': 1}\n    dict = {'a': 1}\n    n = int(input())\n    for _ in range(n):\n        arr = input().split()\n        if arr[0] == '1':\n            p = dics\n        else:\n            p = dict\n        k = int(arr[1])\n        ck = Counter(arr[2])\n        for x in ck.keys():\n            if x not in p:\n                p[x] = ck[x] * k\n            else:\n                p[x] += ck[x] * k\n        print(cal(dics, dict))", "for _ in range(int(input())):\n    n = int(input())\n    one = [0] * 26\n    two = [0] * 26\n    one[0] = two[0] = 1\n    oc = 1\n    for i in range(n):\n        (d, k, x) = input().split()\n        d = int(d)\n        k = int(k)\n        if d == 1:\n            for i in x:\n                one[ord(i) - 97] += k\n                oc += k\n        else:\n            for i in x:\n                two[ord(i) - 97] += k\n        f = False\n        for i in range(1, 26):\n            if two[i] > 0:\n                f = True\n                break\n        if f:\n            print('YES')\n        elif oc - one[0] > 0:\n            print('NO')\n        elif one[0] >= two[0]:\n            print('NO')\n        else:\n            print('YES')", "o = int(input())\nwhile o:\n    o -= 1\n    n = int(input())\n    s = [1] + [0] * 25\n    t = [1] + [0] * 25\n    while n:\n        n -= 1\n        (d, k, x) = input().split()\n        d = int(d)\n        k = int(k)\n        for c in x:\n            if d == 1:\n                s[ord(c) - ord('a')] += k\n            else:\n                t[ord(c) - ord('a')] += k\n        if sum(s) == s[0] and sum(t) == t[0]:\n            print('YES' if s[0] < t[0] else 'NO')\n            continue\n        for i in range(26):\n            if s[i] > 0:\n                if sum(t[i + 1:]) > 0:\n                    print('YES')\n                    break\n        else:\n            print('NO')", "for t in range(int(input())):\n    res = 'abcdefghijklmnopqrstuvwxyz'\n    dct1 = {i: 0 for i in res}\n    dct2 = {i: 0 for i in res}\n    (dct1['a'], dct2['a']) = (1, 1)\n    for i in range(int(input())):\n        (a, b, c) = input().split(' ')\n        if a == '1':\n            for i in c:\n                dct1[i] += int(b)\n        else:\n            for i in c:\n                dct2[i] += int(b)\n        for i in res:\n            if dct2[i] != 0 and i != 'a':\n                print('YES')\n                break\n        else:\n            if dct1['a'] >= dct2['a']:\n                print('NO')\n            else:\n                for i in dct1:\n                    if dct1[i] != 0 and i != 'a':\n                        print('NO')\n                        break\n                else:\n                    print('YES')", "for _ in range(int(input())):\n    len1 = len2 = 1\n    letters1 = [0] * 26\n    letters2 = [0] * 26\n    letters1[0] = letters2[0] = 1\n    for _ in range(int(input())):\n        (d, k, s) = input().split()\n        (d, k) = map(int, (d, k))\n        if d == 1:\n            len1 += len(s) * k\n        elif d == 2:\n            len2 += len(s) * k\n        for x in s:\n            if d == 1:\n                letters1[ord(x) - ord('a')] += k\n            elif d == 2:\n                letters2[ord(x) - ord('a')] += k\n        if any(letters2[1:]):\n            print('YES')\n        else:\n            k = 0\n            i = 0\n            while i < 26 and letters1[i] == letters2[i]:\n                k += letters1[i]\n                i += 1\n            if i == 26:\n                print('NO')\n            elif letters1[i] < letters2[i] and len1 - k - letters1[i]:\n                print('NO')\n            elif letters1[i] < letters2[i] and (not len1 - k - letters1[i]):\n                print('YES')\n            elif letters1[i] > letters2[i] and len2 - k - letters2[i]:\n                print('YES')\n            else:\n                print('NO')", "import sys, os\nif os.getlogin() == 'arun':\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nfrom collections import defaultdict\nfrom math import comb\nimport math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    d1 = defaultdict(lambda : 0)\n    d2 = defaultdict(lambda : 0)\n    d1['a'] += 1\n    d2['a'] += 1\n    sm1 = sm2 = 1\n    for i in range(n):\n        (a, b, st) = input().split()\n        a = int(a)\n        b = int(b)\n        if a == 1:\n            for x in st:\n                d1[x] += b\n                sm1 += b\n        else:\n            for x in st:\n                d2[x] += b\n                sm2 += b\n        k1 = sorted(list(d1.keys()))\n        k2 = sorted(list(d2.keys()), key=lambda x: -ord(x))\n        if k1[0] < k2[0]:\n            print('YES')\n        elif k1[0] == k2[0] and d1[k1[0]] < d2[k2[0]] and (sm1 - d1[k1[0]] == 0):\n            print('YES')\n        elif k1[0] == k2[0] and d1[k1[0]] < d2[k2[0]]:\n            print('NO')\n        elif k1[0] > k2[0]:\n            print('NO')\n        else:\n            print('NO')", "t = int(input())\nfor tt in range(t):\n    q = int(input())\n    s1 = [1] + [0] * 25\n    t1 = [1] + [0] * 25\n    for qq in range(q):\n        (x, y, s) = input().split()\n        (x, y) = (int(x), int(y))\n        if x == 1:\n            for r in s:\n                s1[ord(r) - ord('a')] += y\n        else:\n            for rr in s:\n                t1[ord(rr) - ord('a')] += y\n        i = 0\n        j = 25\n        while s1[i] == 0:\n            i += 1\n        while t1[j] == 0:\n            j -= 1\n        if i < j or (sum(s1) == s1[i] and sum(t1) == t1[j] and (s1[i] < t1[j])) or (sum(s1) != s1[i] and sum(t1) != t1[j] and (s1[i] > t1[j])):\n            print('YES')\n        else:\n            print('NO')", "iter = int(input())\nfor _ in range(iter):\n    q = int(input())\n    ass = [0] * 26\n    ass[0] = 1\n    at = [0] * 26\n    at[0] = 1\n    for i in range(q):\n        inp = input().split(' ')\n        x = inp[2]\n        c = inp[0]\n        k = int(inp[1])\n        if c == '1':\n            for char in x:\n                ass[ord(char) - 97] += k\n        else:\n            for char in x:\n                at[ord(char) - 97] += k\n        ss = 0\n        while ass[ss] == 0:\n            ss += 1\n        tf = 25\n        while at[tf] == 0:\n            tf -= 1\n        if ss < tf:\n            print('YES')\n        elif tf < ss:\n            print('NO')\n        elif ass[ss] < at[tf]:\n            ss += 1\n            while ss != 26 and ass[ss] == 0:\n                ss += 1\n            if ss == 26:\n                print('YES')\n            else:\n                print('NO')\n        else:\n            print('NO')", "def f():\n    s = [1] + 25 * [0]\n    t = [1] + 25 * [0]\n    q = int(input())\n    for i in range(q):\n        (a, b, d) = map(str, input().split())\n        b = int(b)\n        if a == '1':\n            for i in d:\n                s[ord(i) - ord('a')] += b\n        else:\n            for i in d:\n                t[ord(i) - ord('a')] += b\n        ans = True\n        for i in range(26):\n            if ans and s[i] > t[i] and (sum(t[i + 1:]) > 0):\n                print('YES')\n                ans = False\n            if ans and s[i] != 0 and (sum(t[i + 1:]) > 0):\n                print('YES')\n                ans = False\n            if ans and s[i] < t[i] and (sum(t[i + 1:]) == sum(s[i + 1:]) == 0):\n                print('YES')\n                ans = False\n        if ans:\n            print('NO')\nt = int(input())\nfor i in range(t):\n    f()", "for _ in range(int(input())):\n    a1 = [0] * 26\n    a2 = [0] * 26\n    a1[0] = 1\n    a2[0] = 1\n    a1_len = 1\n    a2_len = 1\n    for __ in range(int(input())):\n        (d, k, q) = input().split()\n        k = int(k)\n        ans = 'NO'\n        if d == '1':\n            a1_len += k * len(q)\n            for x in range(len(q)):\n                a1[ord(q[x]) - 97] += k\n        if d == '2':\n            a2_len += k * len(q)\n            for x in range(len(q)):\n                a2[ord(q[x]) - 97] += k\n        a1_letters = 0\n        a2_letters = 0\n        for x in range(26):\n            if a1[x] != 0:\n                a1_letters += 1\n            if a2[x] != 0:\n                a2_letters += 1\n        if a1_letters > 1 and a2_letters > 1:\n            ans = 'YES'\n        elif a1_letters == a2_letters:\n            if a1_letters == 1:\n                if a1[0] < a2[0]:\n                    ans = 'YES'\n            else:\n                ans = 'YES'\n        elif a1_letters == 1 and a2_letters != 1:\n            ans = 'YES'\n        print(ans)", "for _ in range(int(input())):\n    s = {chr(ord('a') + i): 0 for i in range(26)}\n    s['a'] = 1\n    t = {chr(ord('a') + i): 0 for i in range(26)}\n    t['a'] = 1\n    ls = 1\n    lt = 1\n    for u in range(int(input())):\n        (d, k, h) = input().split()\n        k = int(k)\n        if d == '1':\n            for r in h:\n                s[r] += k\n                ls += k\n        elif d == '2':\n            for r in h:\n                t[r] += k\n                lt += k\n        h = ''\n        for i in range(26):\n            if h != '' and t[chr(ord('a') + i)] > 0:\n                print('YES')\n                break\n            if h == '' and s[chr(ord('a') + i)] > 0:\n                h = chr(ord('a') + i)\n        else:\n            if s[h] == ls and (t[h] > s[h] or (t[h] == s[h] and lt > ls)):\n                print('YES')\n            else:\n                print('NO')", "from collections import Counter\nt = int(input())\nfor __ in range(t):\n    q = int(input())\n    s = [1] + [0] * 26\n    t = [1] + [0] * 26\n    for __ in range(q):\n        (d, k, cs) = input().split(' ')\n        d = int(d)\n        k = int(k)\n        cd = Counter(cs)\n        if d == 1:\n            for (c, cc) in cd.items():\n                s[ord(c) - ord('a')] += cc * k\n        else:\n            for (c, cc) in cd.items():\n                t[ord(c) - ord('a')] += cc * k\n        rptr = 25\n        isv = 'YES'\n        nt = t.copy()\n        for lptr in range(26):\n            if s[lptr] == 0:\n                continue\n            while rptr >= 0 and nt[rptr] == 0:\n                rptr -= 1\n            if lptr < rptr:\n                break\n            elif lptr > rptr:\n                isv = 'NO'\n                break\n            elif s[lptr] < nt[rptr]:\n                nt[rptr] -= s[lptr]\n            else:\n                isv = 'NO'\n                break\n        print(isv)"]