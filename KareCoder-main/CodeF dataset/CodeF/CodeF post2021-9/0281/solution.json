["class Input:\n\n    def __init__(self, file=''):\n        self.file = file\n        if file:\n            self.f = open(file, 'r')\n            self.read = self.f.readline\n        else:\n            self.read = input\ninp = Input('')\nt = int(inp.read())\nfor _ in range(t):\n    n = int(inp.read())\n    a = list(map(int, inp.read().split(' ')))\n    sorted_id = sorted(list(range(n)), key=lambda x: a[x], reverse=True)\n    out_sum = sum([a[sorted_id[i]] * (i // 2 + 1) * 2 for i in range(n)])\n    order = [i + 1 for i in list(reversed(sorted_id[1::2]))] + [0] + [j + 1 for j in sorted_id[::2]]\n    out_arr = sorted(list(range(n + 1)), key=lambda x: order[x])\n    print(out_sum)\n    print(*out_arr)", "def solve():\n    for t in range(int(input())):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        a = [[arr[i], i] for i in range(len(arr))]\n        a.sort(key=lambda x: x[0], reverse=True)\n        mid = (n + 2) // 2\n        left = mid - 1\n        right = mid + 1\n        isleft = True\n        ans = [None] * n\n        res = 0\n        for i in range(n):\n            (cnt, idx) = (a[i][0], a[i][1])\n            if isleft:\n                ans[idx] = left\n                cost = 2 * (mid - left)\n                res += cnt * cost\n                left -= 1\n            else:\n                ans[idx] = right\n                cost = 2 * (right - mid)\n                res += cnt * cost\n                right += 1\n            isleft = not isleft\n        print(res)\n        print(mid, end=' ')\n        for ele in ans:\n            print(ele, end=' ')\n        print()\nsolve()", "import math\nfor _ in range(int(input())):\n    N = int(input())\n    a = list(map(int, input().split()))\n    op = sorted(list(zip(a, [i for i in range(N)])))\n    l1 = [-1 for _ in range(N + 1)]\n    for i in range(0, N, 2):\n        l1[op[i][1] + 1] = i // 2\n    count = N\n    for j in range(1, N, 2):\n        l1[op[j][1] + 1] = count\n        count -= 1\n    l1[0] = count\n    tot = 0\n    for i in range(1, N + 1):\n        tot += 2 * abs(l1[i] - l1[0]) * a[i - 1]\n    print(tot)\n    print(*l1)", "import sys\nimport bisect\nimport math\nfrom collections import deque\ninput = lambda : sys.stdin.readline().strip()\nmod = 10 ** 9 + 9\n\ndef solve():\n    n = int(input())\n    b = list(map(int, input().split()))\n    a = []\n    for i in range(n):\n        a.append([b[i], i + 1])\n    queue = deque()\n    queue.append(0)\n    a.sort(reverse=True)\n    for i in range(0, n, 2):\n        queue.append(a[i][1])\n    for i in range(1, n, 2):\n        queue.appendleft(a[i][1])\n    a = [x for x in queue]\n    arr = [0] * (n + 1)\n    for i in range(n + 1):\n        arr[a[i]] = i\n    ans = 0\n    for i in range(1, n + 1):\n        ans += 2 * abs(arr[i] - arr[0]) * b[i - 1]\n    return str(ans) + '\\n' + ' '.join((str(x) for x in arr))\nt = 1\nt = int(input())\nfor _ in range(t):\n    print(solve())"]