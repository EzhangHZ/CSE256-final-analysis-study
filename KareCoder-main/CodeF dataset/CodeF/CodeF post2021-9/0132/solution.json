["from sys import stdin\ninput = stdin.readline\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        s = input()\n        c = 0\n        for i in range(n):\n            if s[i] == '0':\n                if i + 1 < n and s[i + 1] != '1':\n                    c += 2\n                elif i + 2 < n and s[i + 2] != '1':\n                    c += 1\n        print(c)\nmain()", "for s in [*open(0)][2::2]:\n    print(sum((2 - len(x[:2]) for x in s.split('0')[1:-1])))", "def solve():\n    count = 0\n    t = int(input(''))\n    cases = [(int(input('')), input('')) for _ in range(t)]\n    for (n, s) in cases:\n        count = 0\n        for i in range(n):\n            if s[i] == '0' and i != n - 1:\n                if s[i + 1] == '0':\n                    count += 2\n                elif s[i + 1] == '1' and i != n - 2:\n                    if s[i + 2] == '0':\n                        count += 1\n        print(count)\nsolve()", "for s in [*open(0)][2::2]:\n    print(sum((2 - len(x[:2]) for x in s.split('0')[1:-1])))", "x = int(input().strip())\nfor i in range(x):\n    a = int(input().strip())\n    n = input()\n    while n.count('00') > 0 or n.count('010') > 0:\n        n = n.replace('00', '0110')\n        n = n.replace('010', '0110')\n    print(len(n) - a)", "import sys\n\ndef main():\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n = int(sys.stdin.readline())\n        s = sys.stdin.readline().rstrip()\n        count = 0\n        left = -1\n        right = -1\n        for i in range(n):\n            if s[i] == '0':\n                if left == -1 and right == -1:\n                    left = right = i\n                elif left != -1 and i > right:\n                    left = right\n                    right = i\n                if right - left == 1:\n                    count += 2\n                elif right - left == 2:\n                    count += 1\n        print(count)\nmain()", "def solve(s):\n    if s == '00':\n        return 2\n    else:\n        (r, p, d) = (0, '1', '1')\n        for i in s:\n            if i == '0':\n                if d == '0':\n                    r += 2\n                elif p == '0':\n                    r += 1\n            (p, d) = (d, i)\n        return r\nfor i in range(int(input())):\n    l = input()\n    print(solve(input()))", "for s in [*open(0)][2::2]:\n    print(sum((2 - min(2, len(x)) for x in f'**{s}*'.split('0'))))", "def solve(s):\n    c = 0\n    i = 0\n    while i < len(s) and s[i] != '0':\n        i += 1\n    last_index = i\n    while i < len(s):\n        if s[i] == '0':\n            if i - last_index == 1:\n                c += 2\n            elif i - last_index == 2:\n                c += 1\n            last_index = i\n        i += 1\n    return str(c)\nt = int(input())\nout = []\nfor case in range(t):\n    input()\n    s = input()\n    out.append(solve(s))\nprint('\\n'.join(out))", "for s in [*open(0)][2::2]:\n    print(sum((2 - len(x[:2]) for x in s.split('0')[1:-1])))", "tc = int(input())\nfor i in range(tc):\n    x = int(input())\n    y = input()\n    str1 = y\n    str1 = str1.replace('00', '0110')\n    str1 = str1.replace('00', '0110')\n    str1 = str1.replace('010', '0110')\n    str1 = str1.replace('010', '0110')\n    print(abs(y.count('1') - str1.count('1')))", "a = int(input())\nfor i in range(a):\n    b = int(input())\n    c = input()\n    count = 0\n    while True:\n        if '00' not in c and '010' not in c:\n            break\n        if '00' in c:\n            count += c.count('00') * 2\n            c = c.replace('00', '0110')\n        elif '010' in c:\n            count += c.count('010')\n            c = c.replace('010', '0110')\n    print(count)", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    s = input()\n    while len(s) != 0 and s[0] == '1':\n        s = s[1:]\n    while len(s) != 0 and s[-1] == '1':\n        s = s[:-1]\n    while '111' in s:\n        s = s.replace('111', '11')\n    if len(s) > 1:\n        print((s.count('0') - 1) * 2 - s.count('1'))\n    else:\n        print('0')", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    s = input()\n    b = 0\n    ct = 0\n    for i in s:\n        if i == '0':\n            if ct:\n                b += ct\n            ct = 2\n        elif ct:\n            ct -= 1\n    print(b)", "for _ in range(int(input())):\n    n = int(input())\n    str = input()\n    count = 0\n    for i in range(n - 1):\n        if str[i] == '0' and str[i + 1] == '0':\n            count += 2\n        elif str[i] == '0':\n            if i < n - 2 and str[i + 2] == '0':\n                count += 1\n    print(count)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    s = input()\n    if '1' in s and '0' not in s:\n        print('0')\n    else:\n        c = 0\n        while s[0] == '1':\n            s = s[1:]\n        while s[-1] == '1':\n            s = s[:-1]\n        women = list(s.split('0'))\n        for w in women:\n            if len(w) == 1:\n                c -= 1\n            elif len(w) >= 2:\n                c -= 2\n        z = s.count('0') - 1\n        c += 2 * z\n        print(c)", "def solve():\n    n = int(input())\n    a = input()\n    ans = 0\n    for x in range(n - 1):\n        if a[x] == '0' and a[x + 1] == '0':\n            ans += 2\n        elif x + 2 < n and a[x] == '0' and (a[x + 1] == '1') and (a[x + 2] == '0'):\n            ans += 1\n    print(ans)\ntst = int(input())\nfor i in range(tst):\n    solve()", "def main():\n    n = int(input())\n    line = input()\n    res = 0\n    for (i, c) in enumerate(line):\n        if c == '1':\n            continue\n        if i + 1 < len(line) and line[i + 1] == '0':\n            res += 2\n        elif i + 2 < len(line) and line[i + 1:i + 3] == '10':\n            res += 1\n    return res\nt = int(input())\nprint('\\n'.join((str(main()) for _ in range(t))))", "def solve(s):\n    n0 = s.count('0')\n    n1 = s.count('1')\n    if n0 == 0:\n        if n1 == 0:\n            return 1\n        else:\n            return 0\n    res = 0\n    cnt = 2\n    for i in range(len(s)):\n        if s[i] == '0':\n            if cnt < 2:\n                res += 2 - cnt\n            cnt = 0\n        else:\n            cnt += 1\n    return res\nt = int(input())\nfor _ in range(t):\n    n = input()\n    s = input()\n    res = solve(s)\n    print(res)", "for i in range(int(input())):\n    ab = int(input())\n    abc = input()\n    count = 0\n    for j in range(ab):\n        if abc[j] == '0':\n            if j + 1 < ab and abc[j + 1] == '0':\n                count += 2\n            elif j + 2 < ab and abc[j + 2] == '0':\n                count += 1\n    print(count)", "for s in [*open(0)][2::2]:\n    print(sum((2 - min(2, len(x)) for x in s.split('0')[1:-1])))", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nn = inp()\nfor i in range(n):\n    k = inp()\n    s = insr()\n    count = 0\n    if k == 1:\n        print(0)\n        continue\n    if s[0] == s[1] and s[0] == '0':\n        count += 2\n    for j in range(1, k - 1):\n        if s[j] == '0' and s[j + 1] == '0':\n            count += 2\n        if s[j] == '1' and s[j - 1] == '0' and (s[j + 1] == '0'):\n            count += 1\n    print(count)", "for s in [*open(0)][2::2]:\n    print(sum((2 - min(2, len(x)) for x in s.split('0')[1:-1])))", "for _ in range(int(input())):\n    a = int(input())\n    s = input()\n    (o, z, ans) = (0, 0, 0)\n    for i in range(a):\n        if s[i] == '1':\n            continue\n        if i < a - 1 and s[i + 1] == '0':\n            ans += 2\n        elif i < a - 2 and s[i + 1] == '1' and (s[i + 2] == '0'):\n            ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    st = input()\n    (a, b) = (0, 0)\n    ans = 0\n    i = 0\n    while i < n and st[i] != '0':\n        i += 1\n    c = 2\n    while i < n:\n        if st[i] == '0':\n            if c < 2:\n                ans += 2 - c\n            c = 0\n        else:\n            c += 1\n        i += 1\n    print(ans)", "for s in [*open(0)][2::2]:\n    print(sum((2 - len(x[:2]) for x in s.split('0')[1:-1])))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    num_str = input()\n    last_zero_idx = -100\n    total = 0\n    for j in range(n):\n        if num_str[j] == '0':\n            if j - last_zero_idx == 1:\n                total += 2\n            elif j - last_zero_idx == 2:\n                total += 1\n            last_zero_idx = j\n    print(total)", "def cosplay(s):\n    res = 0\n    ct = 0\n    seen = False\n    for i in range(len(s)):\n        if s[i] == '0':\n            if not seen:\n                seen = True\n            else:\n                if ct >= 2:\n                    pass\n                else:\n                    res += 2 - ct\n                ct = 0\n        elif seen:\n            ct += 1\n    return res\nt = int(input())\nfor x in range(t):\n    n = int(input())\n    s = input()\n    ans = cosplay(s)\n    print(ans)", "for _ in range(int(input())):\n    (n, line, count) = (int(input()), input(), 0)\n    for i in range(n - 1):\n        if line[i] == '0':\n            if line[i + 1] == '0':\n                count += 2\n            elif i < n - 2:\n                if line[i + 1] == '1' and line[i + 2] == '0':\n                    count += 1\n    print(count)", "import math, os, io, heapq\nfrom functools import reduce\nfrom sys import stdin, stdout\nfrom collections import Counter, deque, defaultdict\nfrom itertools import product\nimport bisect\n\ndef getList(method=int):\n    return list(map(method, input().split()))\n\ndef getInt():\n    return int(input())\n\ndef solve():\n    (n, s) = (getInt(), input())\n    (ans, lst) = (0, -1)\n    for i in range(n):\n        if s[i] == '0':\n            ones = i - lst - 1\n            if lst >= 0 and ones < 2:\n                ans += 2 - ones\n            lst = i\n    print(ans)\nfor _ in range(getInt()):\n    solve()", "t = int(input())\nfor i in range(t):\n    input()\n    line = input()\n    count = 0\n    for i in range(len(line) - 1):\n        if line[i] == '0':\n            if line[i + 1] == '0':\n                count += 2\n            elif i + 2 < len(line) and line[i + 2] == '0':\n                count += 1\n    print(count)", "def beautiful(line: str):\n    if len(line) < 3:\n        if line == '00':\n            return 2\n        return 0\n    db = {'000': (4, '10'), '001': (2, '01'), '010': (1, '10'), '011': (0, '11'), '100': (2, '10'), '101': (0, '01'), '110': (0, '10'), '111': (0, '11')}\n    ans = 0\n    last = line[0:2]\n    for num in range(2, len(line)):\n        (amt, last) = db[last + line[num]]\n        ans += amt\n    return ans\nout_file = ''\nnum_test = int(input())\nfor i in range(num_test):\n    length = input()\n    string = input()\n    out_file += f'{beautiful(string)}\\n'\nprint(out_file)", "for _ in range(int(input(''))):\n    input()\n    s = input()\n    ans = 0\n    cnt = 2\n    for c in s:\n        if c == '1':\n            cnt += 1\n        else:\n            ans += max(2 - cnt, 0)\n            cnt = 0\n    print(ans)", "n = int(input())\nfor i in range(n):\n    x = input()\n    s = input()\n    total = 0\n    while '00' in s or '010' in s:\n        if '00' in s:\n            y = s.count('00')\n            s = s.replace('00', '0110')\n            total += y * 2\n        elif '010' in s:\n            y = s.count('010')\n            s = s.replace('010', '0110')\n            total += y\n    print(total)", "for t in range(int(input())):\n    n = int(input())\n    a = input()\n    x = -1\n    sum = 0\n    for i in range(n):\n        if a[i] == '0':\n            if x != -1:\n                s = i - x\n                if s == 1:\n                    sum += 2\n                elif s == 2:\n                    sum += 1\n            x = i\n    print(sum)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n\n    def solve(n, s):\n        count = 0\n        for i in range(1, n):\n            if s[i] == '0' and s[i - 1] == '0':\n                count += 2\n            elif s[i] == '1' and s[i - 1] == '0':\n                if i + 1 < n and s[i + 1] == '0':\n                    count += 1\n        return count\n    print(solve(n, s))", "import sys\ninput = lambda : sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    n = int(input())\n    a = input()\n    x = 0\n    count = 2\n    for i in a:\n        if i == '1':\n            count += 1\n        else:\n            if 2 - count >= 0:\n                x += 2 - count\n            count = 0\n    print(x)", "num = int(input())\nfor i in range(num):\n    n = int(input())\n    str = input()\n    l1 = len(str)\n    while str.count('00') != 0 or str.count('010') != 0:\n        str = str.replace('00', '0110')\n        str = str.replace('010', '0110')\n    l2 = len(str)\n    print(l2 - l1)", "def main():\n    for t in range(int(input())):\n        n = int(input())\n        s = input()\n        print(solver(s, n))\n\ndef solver(s, n):\n    answ = 0\n    i = 0\n    s += '111111'\n    while i < n:\n        if s[i] == '0':\n            if s[i + 1] == '0' and s[i + 2] == '0':\n                answ += 4\n                i += 2\n                continue\n            elif s[i + 1] == '0' and s[i + 2] == '1' and (s[i + 3] == '0'):\n                answ += 3\n                i += 2\n                continue\n            elif s[i + 1] == '0' and s[i + 2] == '1' and (s[i + 3] == '1'):\n                answ += 2\n                i += 2\n                continue\n            elif s[i + 1] == '1' and s[i + 2] == '0':\n                answ += 1\n                i += 2\n                continue\n            elif s[i + 1] == '1' and s[i + 2] == '1':\n                answ += 0\n                i += 2\n                continue\n        i += 1\n    return answ\nmain()", "for i in range(int(input())):\n    l = int(input())\n    x = input()\n    a = 0\n    for j in range(1, l):\n        if x[j - 1] == '0' and x[j] == '0':\n            a += 2\n        elif j + 1 < l:\n            if x[j - 1] == '0' and x[j] == '1' and (x[j + 1] == '0'):\n                a += 1\n    print(a)", "for s in [*open(0)][2::2]:\n    print(sum((2 - len(x[:2]) for x in s.split('0')[1:-1])))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    c = len(s)\n    s = s.replace('010', '0110')\n    s = s.replace('00', '0110')\n    s = s.replace('010', '0110')\n    s = s.replace('00', '0110')\n    cc = len(s)\n    print(cc - c)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    (prev_ind, ans) = (-3, 0)\n    for i in range(n):\n        if s[i] == '0':\n            if prev_ind == i - 1:\n                ans += 2\n            elif prev_ind == i - 2:\n                ans += 1\n            prev_ind = i\n    print(ans)", "for s in [*open(0)][2::2]:\n    print(sum((2 - len(x[:2]) for x in s.split('0')[1:-1])))", "tc = int(input())\nfor _ in range(tc):\n    n = input()\n    x = input()\n    op = 0\n    cnt = 2\n    for i in x:\n        if i == '1':\n            cnt += 1\n        else:\n            op += max(2 - cnt, 0)\n            cnt = 0\n    print(op)", "from collections import Counter\n\ndef read_single_num():\n    return int(input())\n\ndef read_nums():\n    return [int(x) for x in input().split()]\nt = read_single_num()\nfor i in range(t):\n    n = read_single_num()\n    s = input()\n    (m, f) = (0, 2)\n    ans = 0\n    for ch in s:\n        if ch == '0':\n            if f < 2:\n                ans += 2 - f\n            f = 0\n        else:\n            f += 1\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    s = list(input())\n    i = 0\n    count = 0\n    while i < n:\n        if s[i] == '1':\n            i += 1\n            continue\n        elif i + 1 < n:\n            if s[i + 1] == '0':\n                count += 2\n                i += 1\n                continue\n            elif i + 2 < n:\n                if s[i + 2] == '1':\n                    i += 3\n                    continue\n                else:\n                    count += 1\n                    i += 1\n            else:\n                break\n        else:\n            break\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = 0\n    for i in range(n - 1):\n        if s[i] == '0' and s[i + 1] == '0':\n            ans += 2\n    for i in range(n - 2):\n        if s[i] == '0' and s[i + 1] == '1' and (s[i + 2] == '0'):\n            ans += 1\n    print(ans)", "def main():\n    input()\n    s = input()\n    ans = 0\n    prev = 2\n    prev2 = 2\n    for (i, symb) in enumerate(map(int, s)):\n        if symb == prev == 0:\n            ans += 2\n            (prev2, prev) = (1, symb)\n        elif symb == 0 and prev == 1 and (prev2 == 0):\n            ans += 1\n            (prev2, prev) = (1, symb)\n        else:\n            (prev2, prev) = (prev, symb)\n    print(ans)\nt = int(input())\nfor _ in range(t):\n    main()", "def Solve():\n    n = int(input())\n    s = input()\n    d = []\n    for i in range(len(s)):\n        if s[i] == '0':\n            d.append(i)\n    c = 0\n    for i in range(1, len(d)):\n        if d[i] - d[i - 1] < 3:\n            c = c + 3 - (d[i] - d[i - 1])\n    print(c)\nq = int(input())\nwhile q > 0:\n    Solve()\n    q = q - 1", "def solver():\n    n = int(input())\n    for _ in range(n):\n        l = int(input())\n        f = input()\n        len_fin = 0\n        for i in range(l):\n            if f[i] != '1':\n                if i < l - 1:\n                    if f[i + 1] == '0':\n                        len_fin += 2\n                    elif i < l - 2 and f[i + 2] == '0':\n                        len_fin += 1\n        print(len_fin)\nsolver()", "for _ in ' ' * int(input()):\n    n = int(input())\n    s = list(input())\n    c = 0\n    for i in range(1, n):\n        if s[i] == '0':\n            if s[i - 1] == '0':\n                c += 2\n            elif i > 1:\n                if s[i - 2] == '0':\n                    c += 1\n    print(c)", "def main():\n    n = int(input())\n    s = input()\n    ans = 0\n    flag = 0\n    cur = 0\n    for i in range(n):\n        if s[i] == '0':\n            if flag == 0:\n                flag = 1\n                cur = 0\n            else:\n                ans += max(0, 2 - cur)\n                cur = 0\n        else:\n            cur += 1\n    print(ans)\nt = int(input())\nwhile t > 0:\n    main()\n    t -= 1", "def solve():\n    ans1 = 0\n    for i in range(n - 1):\n        if x[i] == '0' and x[i + 1] == '0':\n            ans1 += 1\n    ans2 = 0\n    for i in range(n - 2):\n        if x[i] == '0' and x[i + 1] == '1' and (x[i + 2] == '0'):\n            ans2 += 1\n    return ans1 * 2 + ans2\nfrom sys import stdin\ninput = stdin.readline\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    x = input().strip()\n    print(solve())", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = 0\n    c = 0\n    for i in range(n):\n        if s[i] == '0':\n            if c == 1:\n                ans += 2\n            elif c == 2:\n                c = 1\n                ans += 1\n            else:\n                c += 1\n            if c > 3:\n                c = 1\n        elif c > 0:\n            c += 1\n            if c > 3:\n                c = 0\n    print(ans)", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    s = input()\n    ans = 0\n    for i in range(n - 2):\n        if s[i] == '0':\n            if s[i + 1] == '0':\n                ans += 2\n            elif s[i + 2] == '0':\n                ans += 1\n    if n >= 2:\n        if s[-2:] == '00':\n            ans += 2\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    Cos = input()\n    Cos = Cos + ' '\n    zeros = 0\n    count = 0\n    for q in range(len(Cos) - 1):\n        if Cos[q] == '0' and Cos[q + 1] == '0':\n            count += 2\n        elif Cos[q] == '0' and Cos[q + 1] == '1' and (Cos[q + 2] == '0'):\n            count += 1\n    print(count)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    count = 0\n    prev_prev = ''\n    prev = ''\n    for c in s:\n        if c == '0' and c == prev:\n            count += 2\n        elif c == '0' and prev == '1' and (prev_prev == '0'):\n            count += 1\n        prev_prev = prev\n        prev = c\n    print(count)", "def make_great(ryad):\n    n = 0\n    for i in range(1, len(ryad)):\n        if ryad[i - 1] == '0' and ryad[i] == '0':\n            n += 2\n        elif ryad[i - 1] == '0' and ryad[i] == '1':\n            if i < len(ryad) - 1:\n                if ryad[i + 1] == '0':\n                    n += 1\n                else:\n                    pass\n    return n\nms = []\na = int(input())\nfor i in range(a):\n    b = int(input())\n    s = input()\n    ms.append(make_great(s))\nfor i in ms:\n    print(i)", "for s in [*open(0)][2::2]:\n    print(sum((2 - min(2, len(x)) for x in ('**' + s + '*').split('0'))))", "a = int(input())\nfor b in range(a):\n    n = int(input())\n    s = input()\n    c = 0\n    for i in range(n - 2):\n        if s[i] == '0':\n            if s[i + 1] == '0':\n                c += 2\n            elif s[i + 1] == '1':\n                if s[i + 2] == '0':\n                    c += 1\n    if s[-2:] == '00':\n        c += 2\n    print(c)", "def function(n, s):\n    count = 0\n    i = 0\n    prev = -3\n    while i < n:\n        if s[i] == '0':\n            if i - prev == 1:\n                count += 2\n            elif i - prev == 2:\n                count += 1\n            prev = i\n        i += 1\n    return count\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        s = input()\n        print(function(n, s))\nmain()", "t = int(input())\nfor ele in range(t):\n    n = int(input())\n    s = input()\n    cnt = 0\n    for i in range(len(s) - 1):\n        if s[i] == '0' and s[i + 1] == '0':\n            cnt += 2\n        elif s[i] == '0' and s[i + 1] == '1' and (i + 1 != len(s) - 1) and (s[i + 2] == '0'):\n            cnt += 1\n    print(cnt)", "for j in range(int(input())):\n    n = int(input())\n    s = input()\n    k = 0\n    k1 = -1\n    for i in range(n):\n        if s[i] == '0':\n            if -1 < k1 < 2:\n                k = k + 2 - k1\n            k1 = 0\n        elif s[i] == '1' and k1 != -1:\n            k1 += 1\n    print(k)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = 0\n    for i in range(n - 1):\n        if i == n - 2:\n            if s[i] == '0' and s[i + 1] == '0':\n                ans += 2\n        elif s[i] == '0':\n            if s[i + 1] == '1':\n                if s[i + 2] == '1':\n                    continue\n                else:\n                    ans += 1\n            else:\n                ans += 2\n    print(ans)", "rrr = int(input())\nrr = []\nlst1 = []\nfor j in range(rrr):\n    n = int(input())\n    lst = list(input())\n    res = 0\n    s = 0\n    for i in range(len(lst) - 1):\n        if lst[i] == '1' and lst[i - 1] == '0' and (lst[i + 1] == '0') and (i != 0):\n            res += 1\n        elif lst[i] == '0' and lst[i + 1] == '0':\n            res += 2\n    rr.append(str(res))\nprint('\\n'.join(rr))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    if len(s) == 0 and s[0] == 0:\n        print(1)\n        continue\n    i = 0\n    while i < n and s[i] != '0':\n        i += 1\n    if i == n:\n        print(0)\n        continue\n    ans = 0\n    summ = 2\n    while i < n:\n        if s[i] == '0':\n            if summ < 2:\n                ans += 2 - summ\n            summ = 0\n        else:\n            summ += 1\n        i += 1\n    print(ans)", "t = int(input())\nfor r in range(t):\n    n = int(input())\n    s = input()\n    c = 0\n    for i in range(len(s) - 1):\n        if s[i] == '0':\n            if s[i + 1] == '0':\n                c += 2\n            elif i != len(s) - 2:\n                if s[i + 2] == '0':\n                    c += 1\n    print(c)", "for _ in range(int(input())):\n    a = int(input())\n    b = input()\n    c = 0\n    for i in range(len(b) - 1):\n        if b[i] == '0' and b[i + 1] == '0':\n            c += 2\n        elif i != len(b) - 2 and (b[i] == '0' and b[i + 1] == '1' and (b[i + 2] == '0')):\n            c += 1\n    print(c)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    s = input()\n    f = 0\n    ans = 0\n    pos = s.find('0')\n    for i in range(pos + 1, n):\n        if s[i] == '0':\n            if f < 2:\n                ans += 2 - f\n            f = 0\n        else:\n            f += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = list(input())\n    ret = 0\n    s.append('\\n')\n    for i in range(n - 1):\n        if s[i] == '0' and s[i + 1] == '0':\n            ret += 2\n        elif s[i] == '0' and s[i + 1] == '1' and (s[i + 2] == '0'):\n            ret += 1\n    print(ret)", "t = int(input())\nfor t1 in range(t):\n    n = int(input())\n    s = input()\n    l = list(s)\n    flag = -1\n    count = 0\n    indi = -1\n    for (x, y) in zip(l, l[1:]):\n        indi += 1\n        if x == '0' and y == '0':\n            count += 2\n        elif x == '0' and y == '1' and (indi + 2 < len(s)):\n            if l[indi + 2] == '0':\n                count += 1\n    print(count)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    count = 0\n    d = 0\n    z = -1\n    for i in range(n):\n        if s[i] == '0':\n            if z > -1:\n                if d < 2:\n                    count += 2 - d\n            z = i\n            d = 0\n        elif s[i] == '1':\n            d += 1\n    print(count)", "import sys\nimport math\nimport itertools\nmod = 10 ** 9 + 7\n\ndef ri():\n    return int(input())\n\ndef rl():\n    return list(map(int, input().split()))\n\ndef rls():\n    return list(map(str, input().split()))\n\ndef rm():\n    return map(int, input().split())\n\ndef isPowerOfTwo(x):\n    return x and (not x & x - 1)\n\ndef decimalToBinary(n):\n    return bin(n).replace('0b', '')\n\ndef nextPowerOf2(n):\n    n -= 1\n    n |= n >> 1\n    n |= n >> 2\n    n |= n >> 4\n    n |= n >> 8\n    n |= n >> 16\n    n += 1\n    return n\n\ndef highestPowerof2(x):\n    x |= x >> 1\n    x |= x >> 2\n    x |= x >> 4\n    x |= x >> 8\n    x |= x >> 16\n    return x ^ x >> 1\nfor _ in range(ri()):\n    n = ri()\n    s = input().split('1')\n    c = 0\n    for i in range(len(s) - 1):\n        if s[i] != '' and s[i + 1] != '':\n            c += 1\n        if s[i] != '':\n            co = s[i].count('0')\n            c += (co - 1) * 2\n    if s[-1] != '':\n        co = s[-1].count('0')\n        c += (co - 1) * 2\n    print(c)", "import sys\nfrom collections import defaultdict\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\ntc = inp()\nwhile tc:\n    length = inp()\n    cosPlayers = insr()\n    firstZero = -1\n    secondZero = -1\n    ind = 0\n    OnesFound = 0\n    totalPlayersNeeded = 0\n    while ind != length:\n        if cosPlayers[ind] == '0':\n            if firstZero == -1:\n                firstZero = ind\n                OnesFound = 0\n            else:\n                if OnesFound < 2:\n                    totalPlayersNeeded += 2 - OnesFound\n                OnesFound = 0\n                firstZero = ind\n        else:\n            OnesFound += 1\n        ind += 1\n    print(totalPlayersNeeded)\n    tc -= 1", "import sys\nimport math\nfrom sys import stdin, stdout\n\ndef get_ints_in_variables():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_int():\n    return int(input())\n\ndef get_ints_in_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_list_of_list(n):\n    return [list(map(int, sys.stdin.readline().strip().split())) for _ in range(n)]\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef main():\n    for t in range(get_int()):\n        n = int(input())\n        s = input()\n        ans = 0\n        for i in range(0, n - 1):\n            if s[i] == '0' and s[i + 1] == '0':\n                ans += 2\n            elif i + 2 < n:\n                if s[i] == '0' and s[i + 1] == '1' and (s[i + 2] == '0'):\n                    ans += 1\n        print(ans)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    cnt = 0\n    for i in range(1, n):\n        if s[i] == '0' and s[i - 1] == '0':\n            cnt += 2\n    for i in range(1, n - 1):\n        if s[i] == '1' and s[i - 1] == '0' and (s[i + 1] == '0'):\n            cnt += 1\n    print(cnt)", "t = int(input())\nwhile t:\n    n = int(input())\n    s = input()\n    ans = 0\n    for i in range(n):\n        if i < n - 1:\n            if s[i] == '0' and s[i + 1] == '0':\n                ans += 2\n            elif s[i] == '0' and i < n - 2 and (s[i + 1] == '1') and (s[i + 2] == '0'):\n                ans += 1\n    print(ans)\n    t -= 1", "def solve():\n    ans = 0\n    n = input()\n    k = input()\n    ze = []\n    for i in range(len(k)):\n        if k[i] == '0':\n            ze.append(i)\n    for i in range(1, len(ze)):\n        diff = ze[i] - ze[i - 1]\n        if diff <= 2:\n            ans += 3 - diff\n    print(ans)\nt = int(input())\nfor i in range(1, t + 1):\n    solve()", "t = int(input())\nfor _ in range(t):\n    n = input()\n    s = input()\n    ans = 0\n    cnt = 2\n    for c in s:\n        if c == '1':\n            cnt += 1\n        else:\n            ans += max(2 - cnt, 0)\n            cnt = 0\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = input()\n    s = input()\n    ans = 0\n    cnt = 2\n    for c in s:\n        if c == '1':\n            cnt += 1\n        else:\n            ans += max(2 - cnt, 0)\n            cnt = 0\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    cnt = 0\n    lst = [*s, 'a', 'a']\n    for i in range(n):\n        if lst[i] == '0' and lst[i + 1] == '1' and (lst[i + 2] == '0'):\n            cnt += 1\n        if lst[i] == '0' and lst[i + 1] == '0':\n            cnt += 2\n    print(cnt)", "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input()))\n    ans = 0\n    if n == 1:\n        print(0)\n    else:\n        for i in range(n - 2):\n            if s[i] == 0:\n                if s[i + 1] == 0:\n                    ans += 2\n                elif s[i + 2] == 0:\n                    ans += 1\n        if s[n - 2] + s[n - 1] == 0:\n            ans += 2\n        print(ans)", "a = int(input())\nfor j in range(a):\n    b = int(input())\n    c = input()\n    d = 0\n    for i in range(b - 1):\n        if c[i] == '0' and c[i + 1] == '0':\n            d = d + 2\n        elif c[i] == '0' and c[i + 1] == '1' and (i != b - 2):\n            if c[i + 2] == '0':\n                d = d + 1\n            else:\n                pass\n        else:\n            pass\n    print(d)", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    s = input()\n    l = len(s)\n    ans = 0\n    for j in range(l - 1):\n        if s[j] == '0':\n            if s[j + 1] == '0':\n                ans += 2\n            elif not j + 3 > l:\n                if s[j + 2] == '0':\n                    ans += 1\n    print(ans)", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    s = input()\n    l = len(s)\n    ans = 0\n    for j in range(l - 1):\n        if s[j] == '0':\n            if s[j + 1] == '0':\n                ans += 2\n            elif not j + 3 > l:\n                if s[j + 2] == '0':\n                    ans += 1\n    print(ans)", "for u in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = 0\n    for i in range(n):\n        if s[i:i + 2] == '00':\n            ans += 2\n        elif s[i:i + 3] == '010':\n            ans += 1\n    print(ans)", "for _ in [0] * int(input()):\n    n = int(input())\n    s = input()\n    t = 0\n    for i in range(n):\n        if s[i] == '0':\n            if i + 2 < n:\n                if s[i + 1] == '0':\n                    t = t + 2\n                elif s[i + 2] == '0':\n                    t = t + 1\n            elif i + 1 < n:\n                if s[i + 1] == '0':\n                    t = t + 2\n    print(t)", "def check(n, s):\n    z = 0\n    one = 0\n    total = 0\n    ind = 0\n    for i in range(n):\n        if s[i] == '0':\n            ind = i\n            break\n    for i in range(ind + 1, n):\n        if s[i] == '0':\n            val = i - ind - 1\n            if val < 2:\n                total += 2 - val\n            ind = i\n    return total\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    print(check(n, s))", "T = int(input())\nfor t in range(T):\n    s = -1\n    f = 0\n    f1 = 0\n    n = int(input())\n    row = input()\n    for i in range(len(row)):\n        if row[i] == '0':\n            if s != -1:\n                if i - s == 1:\n                    f = f + 2\n                if i - s == 2:\n                    f = f + 1\n            s = i\n    print(f)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    c = 0\n    for i in range(n):\n        if i + 1 < n and s[i] == '0' and (s[i + 1] == '0'):\n            c += 2\n        elif i + 2 < n and s[i] == '0' and (s[i + 1] == '1') and (s[i + 2] == '0'):\n            c += 1\n    print(c)", "n = int(input())\nfor i in range(n):\n    k = int(input())\n    s = input()\n    c = 2\n    ans = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            c += 1\n        else:\n            if c < 2:\n                ans += 2 - c\n            c = 0\n    print(ans)", "import sys\nimport math\ndata = sys.stdin.readlines()\nnumCases = int(data[0])\ncases = []\nfor each in range(1, numCases + 1):\n    input_ = data[each * 2].replace('\\n', '')\n    cases.append(input_)\nfor line in cases:\n    res = 0\n    prev_0 = -1\n    for ind in range(len(line)):\n        if line[ind] == '0':\n            if prev_0 != -1:\n                if ind - prev_0 == 1:\n                    res += 2\n                elif ind - prev_0 == 2:\n                    res += 1\n            prev_0 = ind\n    print(res)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    s = input()\n    ans = 0\n    cnt = 2\n    for c in s:\n        if c == '1':\n            cnt += 1\n        else:\n            ans += max(2 - cnt, 0)\n            cnt = 0\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    p = -1\n    result = 0\n    for i in range(n):\n        if s[i] == '0':\n            if p != -1:\n                if i - p == 1:\n                    result += 2\n                elif i - p == 2:\n                    result += 1\n            p = i\n    if n == 0 and s[0] == '0':\n        print(1)\n    else:\n        print(result)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    s = input().rstrip()\n    ans = 0\n    cnt = 2\n    for c in s:\n        if c == '1':\n            cnt += 1\n        else:\n            ans += max(2 - cnt, 0)\n            cnt = 0\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = input()\n    s = input()\n    ans = 0\n    cnt = 2\n    for c in s:\n        if c == '1':\n            cnt += 1\n        else:\n            ans += max(2 - cnt, 0)\n            cnt = 0\n    print(ans)", "import re\nfor _ in range(int(input())):\n    x = int(input())\n    y = input()\n    print(2 * len(re.findall('(?=00)', y)) + len(re.findall('(?=010)', y)))", "for _ in range(int(input())):\n    n = int(input())\n    l = input().strip()\n    ans = 0\n    for i in range(n - 1):\n        if l[i] == l[i + 1]:\n            if l[i] == '0':\n                ans += 2\n        elif i < n - 2 and l[i] == '0' and (l[i + 2] == '0'):\n            ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = input()\n    s = input()\n    ans = 0\n    cnt = 2\n    for c in s:\n        if c == '1':\n            cnt += 1\n        else:\n            ans += max(2 - cnt, 0)\n            cnt = 0\n    print(ans)"]