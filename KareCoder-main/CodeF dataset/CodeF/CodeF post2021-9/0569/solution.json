["from collections import defaultdict\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    graph = [1] * (n + 1)\n    routes = []\n    for _ in range(m):\n        (a, b) = map(int, input().split())\n        routes.append(sorted((a, b)))\n        graph[a] += 1\n        graph[b] += 1\n    ans = []\n    if m == n * (n - 1) / 2:\n        print(3)\n        for (a, b) in routes:\n            if (a, b) == (1, 2):\n                ans.append(3)\n            elif a == 1:\n                ans.append(2)\n            else:\n                ans.append(1)\n    else:\n        print(2)\n        for i in range(1, n + 1):\n            if graph[i] < n:\n                v = i\n                break\n        for (a, b) in routes:\n            if a == v or b == v:\n                ans.append(1)\n            else:\n                ans.append(2)\n    print(*ans)"]