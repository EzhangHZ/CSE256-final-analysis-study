["for s in [*open(0)][2::2]:\n    a = list(map(abs, map(int, s.split())))\n    print(sum(a) - s.count('-') % 2 * 2 * min(a))", "for k in [*open(0)][2::2]:\n    a = (*map(abs, map(int, k.split())),)\n    print(sum(a) - k.count('-') % 2 * 2 * min(a))", "for s in [*open(0)][2::2]:\n    a = (*map(abs, map(int, s.split())),)\n    print(sum(a) - s.count('-') % 2 * 2 * min(a))", "for _ in range(int(input())):\n    input()\n    s = input()\n    a = list(map(abs, map(int, s.split())))\n    print(sum(a) - 2 * (s.count('-') % 2) * min(a))", "for s in [*open(0)][2::2]:\n    a = (*map(abs, map(int, s.split())),)\n    print(sum(a) - s.count('-') % 2 * 2 * min(a))", "import sys\n\ndef solve(n, array):\n    absarray = [abs(i) for i in array]\n    fn = 0\n    for ar in array:\n        if ar < 0:\n            fn += 1\n    if not fn % 2:\n        return sum(absarray)\n    return sum(absarray) - 2 * min(absarray)\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(sys.stdin.readline())\n        array = list(map(int, sys.stdin.readline().split()))\n        print(solve(n, array))\nmain()", "for i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans1 = list(map(abs, arr))\n    ans2 = sum((1 for i in arr if i < 0))\n    if ans2 % 2 == 0:\n        print(sum(ans1))\n    else:\n        result = min(ans1)\n        print(sum(ans1) - 2 * result)", "for s in [*open(0)][2::2]:\n    a = (*map(abs, map(int, s.split())),)\n    print(sum(a) - s.count('-') % 2 * 2 * min(a))", "for s in [*open(0)][2::2]:\n    a = (*map(abs, map(int, s.split())),)\n    print(sum(a) - s.count('-') % 2 * 2 * min(a))", "import sys\n\ndef solve(length_, line):\n    ii = line.count('-')\n    line = line.split()\n    val_ = list(map(abs, map(int, line)))\n    if int(str(ii)[-1]) % 2 == 1:\n        return sum(val_) - 2 * min(val_)\n    else:\n        return sum(val_)\n\ndef main():\n    test_num = 0\n    line = sys.stdin.readline().rstrip()\n    tot_tests = int(line)\n    while test_num < tot_tests:\n        line = sys.stdin.readline().rstrip()\n        length_ = int(line)\n        line = sys.stdin.readline().rstrip()\n        result_ = solve(length_, line)\n        sys.stdout.write(str(result_) + '\\n')\n        test_num += 1\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = sum((x < 0 for x in a))\n    a = list(map(abs, a))\n    s = sum(a)\n    if c & 1:\n        s -= 2 * min(a)\n    print(s)", "for s in [*open(0)][2::2]:\n    a = (*map(abs, map(int, s.split())),)\n    print(sum(a) - s.count('-') % 2 * 2 * min(a))", "for s in [*open(0)][2::2]:\n    a = (*map(abs, map(int, s.split())),)\n    print(sum(a) - s.count('-') % 2 * 2 * min(a))", "for s in [*open(0)][2::2]:\n    a = (*map(abs, map(int, s.split())),)\n    print(sum(a) - s.count('-') % 2 * 2 * min(a))", "for s in [*open(0)][2::2]:\n    a = (*map(abs, map(int, s.split())),)\n    print(sum(a) - s.count('-') % 2 * 2 * min(a))", "for s in [*open(0)][2::2]:\n    a = (*map(abs, map(int, s.split())),)\n    print(sum(a) - s.count('-') % 2 * 2 * min(a))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    negative = sum((x < 0 for x in arr))\n    sm = sum(map(abs, arr))\n    if negative % 2:\n        print(sm - min(map(abs, arr)) * 2)\n    else:\n        print(sm)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    total = sum(map(abs, a))\n    num_negative = 0\n    for num in a:\n        if num < 0:\n            num_negative += 1\n    if num_negative % 2 == 1:\n        total -= 2 * min(map(abs, a))\n    print(total)", "t = int(input())\nresp = ''\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr_plus = list(map(abs, arr))\n    cntr = 0\n    for j in arr:\n        if j < 0:\n            cntr += 1\n    resp += f'{sum(arr_plus) - 2 * (0 if cntr % 2 == 0 else min(arr_plus))}\\n'\nprint(resp)", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    cnt = 0\n    for i in a:\n        cnt += i < 0\n    b = list(map(abs, a))\n    print(sum(b) - 2 * min(b) * (cnt % 2))\nfor i in range(int(input())):\n    solve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    k = [abs(x) for x in l]\n    cnt = 0\n    for j in l:\n        if j < 0:\n            cnt += 1\n    if cnt % 2 == 0:\n        print(sum(k))\n    else:\n        print(sum(k) - 2 * min(k))", "def start():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans1 = sum(map(abs, arr))\n    ans2 = sum([1 for x in arr if x < 0])\n    if ans2 % 2 == 0:\n        print(ans1)\n        return\n    res = min(map(abs, arr))\n    print(ans1 - 2 * res)\nt = int(input())\nwhile t != 0:\n    t -= 1\n    start()", "import sys\n\ndef answer():\n    pass\n\ndef solution():\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    m = 1000000000000\n    s = 0\n    for i in a:\n        if abs(i) < m:\n            m = abs(i)\n        if i < 0:\n            c += 1\n        s += abs(i)\n    if c % 2 == 0:\n        print(s)\n    else:\n        print(s - m * 2)\nt = int(input())\nfor _ in range(t):\n    solution()", "for t in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        if l1[i] < 0:\n            l1[i] = -l1[i]\n            count += 1\n    if count % 2 == 0:\n        print(sum(l1))\n    else:\n        print(sum(l1) - 2 * min(l1))", "def main():\n    test_cases = int(input().strip())\n    for _ in range(test_cases):\n        n = int(input().strip())\n        a = list(map(int, input().strip().split()))\n        t = 0\n        s = []\n        for i in a:\n            s.append(abs(i))\n            if i <= 0:\n                t += 1\n        result = sum(s)\n        if t % 2 != 0:\n            result -= min(s) * 2\n        print(result)\nmain()", "def operation(lista, n):\n    neg = 0\n    for i in range(n):\n        if lista[i] < 0:\n            neg += 1\n    suma = sum(map(abs, lista))\n    if neg % 2 == 0:\n        return suma\n    lista = map(abs, lista)\n    return suma - 2 * min(lista)\ncases = int(input())\nfor i in range(cases):\n    n = int(input())\n    num = list(map(int, input().split()))\n    print(operation(num, n))", "def solve():\n    t = 1\n    t = int(input())\n    while t:\n        t -= 1\n        n = int(input())\n        a = [int(x) for x in input().split()]\n        ngc = 0\n        for i in range(n):\n            if a[i] < 0:\n                a[i] = abs(a[i])\n                ngc += 1\n        maxi = sum(a)\n        print(maxi - 2 * min(a) if ngc % 2 else maxi)\nsolve()", "def solve():\n    t = int(input())\n    while t != 0:\n        n = int(input())\n        cnt = 0\n        ans = 0\n        mn = 999999999999999999\n        num = list(map(int, input().split()))\n        for a in num:\n            if a < 0:\n                cnt += 1\n                ans += abs(a)\n                if abs(a) < mn:\n                    mn = abs(a)\n            else:\n                ans += a\n                if a < mn:\n                    mn = a\n        if cnt % 2 == 0:\n            print(ans)\n        else:\n            print(ans - 2 * mn)\n        t -= 1\nsolve()", "def solve():\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = list(map(lambda x: abs(x), l))\n    negative = sum((1 for i in l if i < 0))\n    if negative % 2:\n        print(sum(m) - min(m) * 2)\n    else:\n        print(sum(m))\nfor _ in range(int(input())):\n    solve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = 0\n    for el in a:\n        if el < 0:\n            k += 1\n    if k % 2 == 0:\n        print(sum(list(map(abs, a))))\n    else:\n        print(sum(list(map(abs, a))) - 2 * min(list(map(abs, a))))", "t = int(input())\nans = []\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    (c1, c2) = (0, 0)\n    for i in a:\n        if i < 0:\n            c1 += 1\n        elif i == 0:\n            c2 += 1\n    a = list(map(abs, a))\n    if c1 % 2 != 0 and c2 == 0:\n        res = sum(a) - 2 * min(a)\n    else:\n        res = sum(a)\n    ans.append(res)\nfor _ in ans:\n    print(_)", "def fun(a, t):\n    odd_count = 0\n    temp = [abs(ii) for ii in t]\n    for _ in t:\n        if _ < 0:\n            odd_count += 1\n    if odd_count % 2 == 0:\n        return sum(temp)\n    return sum(temp) - 2 * min(temp)\nfor _ in range(int(input())):\n    a = int(input())\n    t = [int(i) for i in input().split()]\n    print(fun(a, t))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    absed_a = list(map(abs, a))\n    count = 0\n    for el in a:\n        if el < 1:\n            count = count + 1\n    if count % 2 == 0:\n        print(sum(absed_a))\n    else:\n        print(sum(absed_a) - 2 * min(absed_a))", "for s in [*open(0)][2::2]:\n    a = (*map(abs, map(int, s.split())),)\n    print(sum(a) - s.count('-') % 2 * 2 * min(a))", "for nnm in range(int(input(''))):\n    n = int(input(''))\n    k = [int(x) for x in input('').split(' ')]\n    l = [abs(x) for x in k]\n    if n == 2:\n        print(max(sum(k), -sum(k)))\n    else:\n        neg = sum([1 if x < 0 else 0 for x in k])\n        if neg % 2 == 1:\n            print(sum(l) - 2 * min(l))\n        else:\n            print(sum(l))", "def solve():\n    n = int(input())\n    lst = list(map(int, input().split()))\n    negs = 0\n    for i in range(n):\n        if lst[i] < 0:\n            negs += 1\n    if negs % 2 == 0:\n        print(sum((abs(x) for x in lst)))\n    else:\n        print(sum((abs(x) for x in lst)) - 2 * min((abs(x) for x in lst)))\nt = int(input())\nfor _ in range(t):\n    solve()", "for i in range(int(input())):\n    b = int(input())\n    c = list(map(int, input().split()))\n    d = abs(c[0])\n    m = 0\n    k = 0\n    m1 = 0\n    for i in c:\n        if i < 0:\n            i = -i\n            k += 1\n        m += i\n        if i < d:\n            d = i\n    if k % 2 == 1:\n        print(m - d * 2)\n    else:\n        print(m)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    temp = [abs(i) for i in arr]\n    tot = sum(temp)\n    totneg = len([i for i in arr if i < 0])\n    if not totneg % 2:\n        print(tot)\n        continue\n    min_ = min(temp)\n    print(tot - 2 * min_)", "a = int(input())\nfor _ in range(a):\n    c = int(input())\n    b = list(map(int, input().split()))\n    e = 0\n    gt = 0\n    for i in b:\n        if i <= 0:\n            gt += 1\n    b = list(map(lambda x: abs(x), b))\n    if gt % 2 == 0:\n        print(sum(b))\n    else:\n        print(sum(b) - 2 * min(b))", "num = int(input())\n_ = 0\nx = []\ny = []\nwhile _ < num:\n    y.append(int(input()))\n    x.append(list(map(int, input().split())))\n    _ += 1\nfor i in range(num):\n    n = x[i]\n    m = y[i]\n    count = 0\n    for t in n:\n        if t < 0:\n            count += 1\n    if count % 2 == 0:\n        n = list(map(abs, n))\n        print(sum(n))\n    elif count % 2 != 0:\n        n = list(map(abs, n))\n        print(sum(n) - 2 * min(n))", "cases = int(input())\nfor _ in range(cases):\n    N = int(input())\n    nums = list(map(int, input().split()))\n    pos = []\n    neg = []\n    smallest = 100000000000.0\n    for i in nums:\n        if abs(i) < smallest:\n            smallest = abs(i)\n        if i > 0:\n            pos.append(i)\n        else:\n            neg.append(i * -1)\n    if len(neg) % 2 == 0:\n        print(sum(pos) + sum(neg))\n    else:\n        print(sum(pos) + sum(neg) - smallest * 2)", "for _ in range(int(input())):\n    n = int(input())\n    num = list(map(int, input().split()))\n    cnt = 0\n    for i in range(n):\n        if num[i] < 0:\n            cnt += 1\n            num[i] = -num[i]\n    if cnt % 2 == 0:\n        print(sum(num))\n    else:\n        print(sum(num) - 2 * min(num))", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    a = list(map(int, input().split()))\n    neg = []\n    for i in a:\n        if i <= 0:\n            neg.append(i)\n    sp = 10 ** 10\n    for i in a:\n        if i > 0:\n            if sp > i:\n                sp = i\n    if len(neg) % 2 == 0:\n        print(sum(a) - 2 * sum(neg))\n    else:\n        if abs(sorted(neg)[-1]) < sp:\n            sp = abs(sorted(neg)[-1])\n        print(sum(a) - 2 * sum(neg) - 2 * sp)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    neg = 0\n    for i in range(n):\n        if l[i] < 0:\n            neg += 1\n            l[i] = -l[i]\n    if neg & 1:\n        print(sum(l) - 2 * min(l))\n    else:\n        print(sum(l))", "for _ in range(int(input().strip())):\n    n = int(input().strip())\n    a = list(map(int, input().split()))\n    print(sum((abs(x) for x in a)) - (sum((x <= 0 for x in a)) & 1) * 2 * min((abs(x) for x in a)))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    absa = list(map(abs, a))\n    negs = sum([1 for i in a if i <= 0])\n    ans = sum(absa) if negs % 2 == 0 else sum(absa) - 2 * min(absa)\n    print(ans)", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    t = int(input().strip())\n    for _ in range(t):\n        n = int(input().strip())\n        a = [int(x) for x in input().strip().split()]\n        negs = 0\n        sum = 0\n        for i in range(n):\n            if a[i] < 0:\n                negs += 1\n                a[i] = -a[i]\n            sum += a[i]\n        if negs % 2 == 1:\n            sum -= 2 * min(a)\n        print(sum)\nmain()", "def solve(n, arr):\n    negcount = sum([i < 0 for i in arr])\n    arr = [abs(i) for i in arr]\n    if negcount & 1:\n        return sum(arr) - (min(arr) << 1)\n    return sum(arr)\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(solve(n, arr))", "import os\nimport math\nimport collections\nimport bisect\nimport functools\nimport itertools\nimport heapq\n\ndef solve(a, n):\n    neg = len([x for x in a if x < 0])\n    a = [abs(x) for x in a]\n    if neg % 2 == 0:\n        return sum(a)\n    return sum(a) - 2 * min(a)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(a, n))", "t = int(input())\nfor test_case in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    negative_count = 0\n    for i in range(n):\n        if arr[i] < 0:\n            negative_count += 1\n            arr[i] *= -1\n    minimum = min(arr)\n    if negative_count % 2 == 0:\n        print(sum(arr))\n    else:\n        print(sum(arr) - minimum - minimum)", "for i in range(int(input())):\n    num = int(input())\n    n = list(map(int, input().strip().split()))\n    sumy = sum((1 for i in n if i < 0))\n    newlist = [abs(i) for i in n]\n    miny = min(newlist)\n    if sumy % 2 == 1:\n        print(sum(newlist) - miny - miny)\n    else:\n        print(sum(newlist))", "n = int(input())\nfor _ in range(n):\n    n1 = int(input())\n    li = list(map(int, input().split()))\n    cn = 0\n    for i in range(len(li)):\n        if li[i] < 0:\n            cn += 1\n            li[i] = -li[i]\n    if cn % 2 == 0:\n        s = sum(li)\n        print(s)\n    else:\n        s = sum(li) - 2 * min(li)\n        print(s)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    t = 0\n    s = []\n    for i in a:\n        s.append(abs(i))\n        if i <= 0:\n            t += 1\n    if t % 2 == 0:\n        print(sum(s))\n    else:\n        print(sum(s) - min(s) * 2)", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    a = [abs(x) for x in l]\n    ne = 0\n    ans = 0\n    e = 0\n    for ele in l:\n        if ele < 0:\n            e += 1\n    if a == l:\n        ans = sum(l)\n    elif e % 2 == 0:\n        ans = sum(a)\n    else:\n        ans = sum(a) - 2 * abs(min(a))\n    print(ans)", "def solve():\n    num_elements = int(input().strip())\n    values = [int(x) for x in input().strip().split()]\n    sum_of_values = 0\n    num_negative = 0\n    for value in values:\n        sum_of_values += abs(value)\n        if value < 0:\n            num_negative += 1\n    for (i, value) in enumerate(values):\n        if value < 0:\n            values[i] = abs(value)\n    if num_negative % 2 == 0:\n        print(sum_of_values)\n        return\n    min_value = min(values)\n    print(sum_of_values - 2 * min_value)\nnum_tests = int(input().strip())\nfor _ in range(num_tests):\n    solve()", "t = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    list1 = [int(num) for num in input().split()]\n    negs = 0\n    for i in range(0, n):\n        if list1[i] < 0:\n            negs += 1\n            list1[i] = list1[i] * -1\n    if negs % 2 == 0:\n        print(sum(list1))\n    else:\n        print(sum(list1) - 2 * min(list1))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = list(map(int, input().split(' ')))\n    res = 0\n    z = 0\n    for i in x:\n        if i < 0:\n            z += 1\n    if z == 0:\n        print(sum(x))\n    elif z % 2 == 0:\n        for i in x:\n            res += abs(i)\n        print(res)\n    else:\n        if 0 in x:\n            m = [abs(i) for i in x]\n            res = sum(m)\n        else:\n            m = [abs(i) for i in x]\n            v = min(m)\n            res = sum(m) - min(m) - min(m)\n        print(res)", "import sys, math, bisect, collections, itertools, heapq\nfrom collections import defaultdict, deque\nsys.setrecursionlimit(50000)\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    l = list(map(int, sys.stdin.readline().split()))\n    count = 0\n    for i in range(n):\n        if l[i] < 0:\n            count += 1\n            l[i] *= -1\n    if count % 2 == 0:\n        print(sum(l))\n    else:\n        print(sum(l) - 2 * min(l))", "for i in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    count = 0\n    x = []\n    for i in s:\n        if i < 0:\n            count += 1\n            x.append(abs(i))\n        else:\n            x.append(i)\n    if count % 2 == 0:\n        print(sum(x))\n    else:\n        print(sum(x) - 2 * min(x))", "from collections import defaultdict\ntests = int(input())\nfor _ in range(tests):\n    lgth = int(input()) - 1\n    numbers = list(map(int, input().split()))\n    zero = False\n    _ve = 0\n    for n in numbers:\n        if n == 0:\n            zero = True\n            break\n        if n < 0:\n            _ve += 1\n    numbers = list(map(abs, numbers))\n    if zero or _ve % 2 == 0:\n        print(sum(numbers))\n    else:\n        print(sum(numbers) - 2 * min(numbers))", "def main():\n    test_cases = int(input().strip())\n    for _ in range(test_cases):\n        n = int(input().strip())\n        a = list(map(int, input().strip().split()))\n        t = 0\n        s = []\n        for i in a:\n            s.append(abs(i))\n            if i <= 0:\n                t += 1\n        result = sum(s)\n        if t % 2 != 0:\n            result -= min(s) * 2\n        print(result)\nmain()", "t = int(input())\nfor _ in range(t):\n    l = int(input())\n    list1 = list(map(int, input().split()))\n    num = 0\n    minn = abs(max(list1))\n    for i in list1:\n        if i <= 0:\n            num += 1\n        if abs(i) < minn:\n            minn = abs(i)\n    ans = 0\n    if num & 1 == 0:\n        ans = sum(map(abs, list1))\n    else:\n        ans = sum(map(abs, list1)) - minn * 2\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    t = 0\n    s = []\n    for i in a:\n        s.append(abs(i))\n        if i <= 0:\n            t += 1\n    if t % 2 != 0:\n        print(sum(s) - 2 * min(s))\n    else:\n        print(sum(s))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    num = 0\n    for i in l:\n        if i < 0:\n            num += 1\n    if num % 2 == 0:\n        print(sum((abs(x) for x in l)))\n    else:\n        print(sum((abs(x) for x in l)) - 2 * min((abs(x) for x in l)))", "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    count = 0\n    z = []\n    for i in s:\n        if i < 0:\n            count += 1\n            z.append(abs(i))\n        else:\n            z.append(i)\n    if count % 2:\n        print(sum(z) - 2 * min(z))\n    else:\n        print(sum(z))", "def fun(a, t):\n    odd_count = 0\n    for _ in range(a):\n        if t[_] < 0:\n            odd_count += 1\n            t[_] = -1 * t[_]\n    if odd_count % 2 == 0:\n        return sum(t)\n    return sum(t) - 2 * min(t)\nfor _ in range(int(input())):\n    a = int(input())\n    t = [int(i) for i in input().split()]\n    print(fun(a, t))", "def max_sum(n, arr):\n    count_neg = 0\n    sum = 0\n    is_zero = False\n    greatest_neg = 9999999999\n    for i in range(n):\n        if arr[i] < 0:\n            sum = sum - arr[i]\n            count_neg += 1\n        elif arr[i] > 0:\n            sum += arr[i]\n        elif arr[i] == 0:\n            is_zero = True\n        if abs(arr[i]) < greatest_neg:\n            greatest_neg = abs(arr[i])\n    if count_neg % 2 == 1 and is_zero == False:\n        print(sum - 2 * greatest_neg)\n    else:\n        print(sum)\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        max_sum(n, arr)\nmain()", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    dem = 0\n    sum = 0\n    for i in range(len(a)):\n        if a[i] < 0:\n            dem += 1\n            a[i] = -a[i]\n        sum = sum + a[i]\n    if dem % 2 == 0:\n        print(sum)\n    else:\n        print(sum - min(a) * 2)", "n = int(input())\nfor i in range(n):\n    l = int(input())\n    s = [int(i) for i in input().split()]\n    n = 0\n    for i in s:\n        if i <= 0:\n            n += 1\n    sa = list(map(abs, s))\n    if n % 2 == 0:\n        print(sum(sa))\n    else:\n        print(sum(sa) - min(sa) * 2)", "for t in range(int(input())):\n    (n, a) = (int(input()), [int(x) for x in input().split()])\n    negcnt = 0\n    for i in range(n):\n        if a[i] < 0:\n            negcnt += 1\n            a[i] = -a[i]\n    if negcnt % 2 == 0:\n        print(sum(a))\n    else:\n        print(sum(a) - 2 * min(a))", "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    n = int(sys.stdin.readline())\n    lst = list(map(int, sys.stdin.readline().split()))\n    ele = 0\n    for j in lst:\n        if j < 0:\n            ele += 1\n    arr = []\n    for j in lst:\n        arr.append(abs(j))\n    if ele % 2 == 0:\n        print(sum(arr))\n    else:\n        mi = min(arr)\n        s = sum(arr)\n        print(s - 2 * mi)", "out = []\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    cntm = 0\n    for i in a:\n        if i <= 0:\n            cntm += 1\n    a1 = [abs(i) for i in a]\n    if cntm % 2 == 0:\n        out.append(sum(a1))\n    else:\n        out.append(sum(a1) - min(a1) * 2)\nfor i in out:\n    print(i)", "t = int(input())\nres = []\n\ndef max_sum_flip(a):\n    n = len(a)\n    total_sum = 0\n    num_of_negatives = 0\n    for i in range(n):\n        if a[i] < 0:\n            num_of_negatives += 1\n            a[i] = -a[i]\n        total_sum += a[i]\n    if num_of_negatives % 2 == 0:\n        return total_sum\n    else:\n        return total_sum - 2 * min(a)\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    res.append(max_sum_flip(a))\nfor i in res:\n    print(i)", "import sys, math, cmath, time\nfrom bisect import bisect_left\nstart_time = time.time()\n\ndef solve():\n    n = inp()\n    l = [int(k) for k in inps()]\n    a = []\n    c = 0\n    for i in l:\n        a.append(abs(i))\n        if i < 0:\n            c += 1\n    if c % 2 == 0:\n        print(sum(a))\n        return\n    else:\n        print(sum(a) - 2 * min(a))\n\ndef main():\n    testcases = 1\n    testcases = inp()\n    for each_testcase in range(testcases):\n        solve()\n\ndef inp():\n    return int(input())\n\ndef inps():\n    return input().split()\nONLINE_JUDGE = __debug__\nif ONLINE_JUDGE:\n    input = sys.stdin.readline\nmain()", "import sys\nn = int(next(sys.stdin))\nfor i in range(n):\n    next(sys.stdin)\n    arr = next(sys.stdin).strip().split(' ')\n    arr = list((int(j) for j in arr))\n    m = 10 ** 9\n    c = 0\n    s = 0\n    for j in arr:\n        if abs(j) < m:\n            m = abs(j)\n        if j < 0:\n            c += 1\n        s += abs(j)\n    print(s - c % 2 * m * 2)", "def setlen(s):\n    return len(set(s))\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    minus = 0\n    inp = list(map(int, input().split()))\n    for i in range(n):\n        if inp[i] < 0:\n            minus += 1\n            inp[i] = -inp[i]\n    res = sum(inp)\n    if minus % 2 == 1:\n        res -= 2 * min(inp)\n    print(res)", "import sys\nfrom collections import deque\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nn = inp()\nfor _ in range(n):\n    m = inp()\n    array = inlt()\n    sm = sum(array)\n    pos = []\n    neg = []\n    for i in array:\n        if i >= 0:\n            pos.append(i)\n        else:\n            neg.append(i)\n    answer = sm\n    if len(array) == len(pos):\n        answer = sm\n    elif len(neg) % 2 == 0:\n        answer = sm + 2 * -1 * sum(neg)\n    else:\n        neg_max = max(neg)\n        neg_sum = sum(neg)\n        pos_sum = sum(pos)\n        if not pos:\n            answer = -sm + 2 * neg_max\n        else:\n            pos_min = min(pos)\n            answer = sm - (neg_sum - neg_max) * 2\n            if pos_min < abs(neg_max):\n                answer -= pos_min * 2\n                answer -= neg_max * 2\n    print(answer)", "def solve(arr):\n    num_of_neg = 0\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            num_of_neg += 1\n            arr[i] *= -1\n    s = sum(arr)\n    if not num_of_neg % 2:\n        return s\n    else:\n        return s - 2 * min(arr)\nn = int(input())\nfor _ in range(n):\n    l = int(input())\n    arr = [int(_) for _ in input().split()]\n    print(solve(arr))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = list(map(int, input().split()))\n    c = 0\n    for k in range(n):\n        if s[k] < 0:\n            c += 1\n            s[k] = abs(s[k])\n    if c % 2 == 0:\n        total = sum(s)\n    if c % 2 == 1:\n        total = sum(s) - 2 * min(s)\n    print(total)", "import sys\ninput = sys.stdin.readline\ntests = int(input())\nfor test in range(tests):\n    n = int(input())\n    a = list(map(int, input().split()))\n    even_negatives = True\n    minimum = abs(a[0])\n    summan = 0\n    for integ in a:\n        if abs(integ) < minimum:\n            minimum = abs(integ)\n        if integ < 0:\n            even_negatives = not even_negatives\n            summan -= integ\n        else:\n            summan += integ\n    if even_negatives:\n        print(summan)\n    else:\n        print(summan - 2 * minimum)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    minus_count = 0\n    for i in a:\n        if i < 0:\n            minus_count += 1\n    if minus_count % 2 == 0:\n        print(sum([i if i >= 0 else -i for i in a]))\n    else:\n        amin = min([abs(i) for i in a])\n        print(sum([i if i >= 0 else -i for i in a]) - 2 * amin)", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    zero = 0 in lst\n    neg = sum((int(x < 0) for x in lst))\n    if neg % 2 == 0:\n        print(sum((abs(x) for x in lst)))\n    elif zero:\n        print(sum((abs(x) for x in lst)))\n    else:\n        Min = float('inf')\n        for x in lst:\n            if abs(x) < Min:\n                Min = abs(x)\n        print(sum((abs(x) for x in lst)) - 2 * Min)", "for _ in range(int(input())):\n    ln = int(input())\n    ls = list(map(int, input().split()))\n    nc = 0\n    ab = []\n    for i in ls:\n        if i < 0:\n            nc += 1\n        ab.append(abs(i))\n    if nc % 2 == 0:\n        print(sum(ab))\n    elif 0 in ab:\n        print(sum(ab))\n    else:\n        print(sum(ab) - 2 * min(ab))", "ri = lambda : int(input())\nrl = lambda : list(map(int, input().split()))\nrs = lambda : input()\n\ndef solve():\n    n = ri()\n    a = rl()\n    neg = total = 0\n    _min = float('inf')\n    for num in a:\n        if num < 0:\n            neg += 1\n        total += abs(num)\n        _min = min(_min, abs(num))\n    if neg & 1:\n        total -= _min * 2\n    return total\n\ndef main():\n    for _ in range(ri()):\n        print(solve())\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    negatives = 0\n    zeroes = False\n    for i in range(n):\n        if arr[i] < 0:\n            negatives += 1\n            arr[i] = abs(arr[i])\n        if arr[i] == 0:\n            zeroes = True\n    sum_ = sum(arr)\n    if negatives % 2 == 0 or zeroes == True:\n        print(sum_)\n    else:\n        print(sum_ - 2 * min(arr))", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    negatives = 0\n    zeros = 0\n    sumofelements = 0\n    for i in a:\n        if i > 0:\n            sumofelements += i\n        else:\n            sumofelements -= i\n        if i < 0:\n            negatives += 1\n        if i == 0:\n            zeros += 1\n    min = 10000000000\n    for i in a:\n        if i > 0:\n            if i < min:\n                min = i\n        elif -i < min:\n            min = -i\n    if negatives % 2 == 0 or zeros > 0:\n        print(sumofelements)\n    else:\n        print(sumofelements - 2 * min)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    negatives = 0\n    zeros = 0\n    sumofelements = 0\n    for i in a:\n        if i > 0:\n            sumofelements += i\n        else:\n            sumofelements -= i\n        if i < 0:\n            negatives += 1\n        if i == 0:\n            zeros += 1\n    min = 10000000000\n    for i in a:\n        if i > 0:\n            if i < min:\n                min = i\n        elif -i < min:\n            min = -i\n    if negatives % 2 == 0 or zeros > 0:\n        print(sumofelements)\n    else:\n        print(sumofelements - 2 * min)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    if 0 in ar:\n        print(sum([abs(j) for j in ar]))\n    else:\n        summ = 0\n        for j in ar:\n            if j < 0:\n                summ += 1\n        if summ % 2 == 0:\n            print(sum([abs(j) for j in ar]))\n        else:\n            k = 1000000000\n            summ = 0\n            for j in ar:\n                summ += abs(j)\n                if abs(j) < k:\n                    k = abs(j)\n            print(summ - k * 2)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    L = list(map(int, input().split()))\n    count = 0\n    for i in L:\n        if 0 > i:\n            count += 1\n        else:\n            pass\n    R = []\n    for j in L:\n        R.append(abs(j))\n    if count % 2 == 0:\n        answer = sum(R)\n    else:\n        answer = sum(R) - 2 * min(R)\n    print(answer)", "for test_case in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    min_abs = 1000000000\n    sum_abs = 0\n    negative_count = 0\n    for i in a:\n        if abs(i) < min_abs:\n            min_abs = abs(i)\n        if i < 0:\n            negative_count += 1\n        sum_abs += abs(i)\n    if negative_count % 2 == 1:\n        sum_abs -= 2 * min_abs\n    print(sum_abs)", "for i in range(int(input())):\n    n = int(input())\n    mas = list(map(int, input().split()))\n    kol = 0\n    for j in range(n):\n        if mas[j] < 0:\n            kol += 1\n            mas[j] = abs(mas[j])\n    if kol % 2 == 0:\n        print(sum(mas))\n    else:\n        print(sum(mas) - 2 * min(mas))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(v) for v in input().split()]\n    absarr = [abs(v) for v in arr]\n    smallest = min(absarr)\n    numberNeg = len([v for v in arr if v < 0])\n    numberPos = len(arr) - numberNeg\n    if numberNeg % 2 == 0:\n        print(sum(absarr))\n    else:\n        print(sum(absarr) - 2 * smallest)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    negs = 0\n    for i in l:\n        if i <= 0:\n            negs += 1\n    if negs % 2 == 0:\n        ans = 0\n        for i in l:\n            ans += abs(i)\n        print(ans)\n    else:\n        for i in range(n):\n            l[i] = abs(l[i])\n        print(sum(l) - 2 * min(l))", "def op(n, a):\n    s = 0\n    minn = abs(a[0])\n    c = 0\n    for i in range(n):\n        s += abs(a[i])\n        if abs(a[i]) < minn:\n            minn = abs(a[i])\n        if a[i] < 0:\n            c += 1\n    if c % 2 == 0:\n        return s\n    else:\n        return s - 2 * minn\nt = int(input())\nb = []\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b.append(op(n, a))\nfor i in b:\n    print(i)", "for _ in range(int(input())):\n    n = int(input())\n    num = list(map(int, input().split()))\n    cnt = 0\n    for i in range(n):\n        if num[i] < 0:\n            cnt += 1\n            num[i] = -num[i]\n    if cnt % 2 == 0:\n        print(sum(num))\n    else:\n        print(sum(num) - 2 * min(num))", "for _ in range(int(input())):\n    n1 = int(input())\n    l = list(map(int, input().split()))\n    n = 0\n    for i in l:\n        if i < 0:\n            n += 1\n    for i in range(n1):\n        l[i] = abs(l[i])\n    if n % 2 == 0:\n        print(sum(l))\n    else:\n        print(sum(l) - min(l) * 2)", "for _ in range(int(input())):\n    input()\n    s = list(map(int, input().split()))\n    mi = abs(s[0])\n    su = 0\n    k = 0\n    for i in s:\n        if i < 0:\n            k += 1\n        a = abs(i)\n        if mi > a:\n            mi = a\n        su += a\n    if k % 2 == 1:\n        su -= mi * 2\n    print(su)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    for i in a:\n        b.append(abs(i))\n    non = 0\n    for i in a:\n        if i < 0:\n            non += 1\n    if non % 2 == 0:\n        print(sum(b))\n    else:\n        print(sum(b) - 2 * min(b))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    li = list(map(int, input().split()))\n    neg = 0\n    tot = 0\n    for i in li:\n        if i < 0:\n            neg ^= 1\n        tot += abs(i)\n    if neg:\n        tot -= min([abs(x) for x in li]) * 2\n    print(tot)"]