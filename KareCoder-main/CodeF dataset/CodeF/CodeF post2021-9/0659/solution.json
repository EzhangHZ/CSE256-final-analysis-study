["import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    (n, m) = map(int, inp().split())\n    a = list(map(int, inp().split()))\n    bad = set()\n    for i in range(m):\n        bad.add(tuple(sorted(map(int, inp().split()))))\n    a.sort(reverse=True)\n    cnt = []\n    i = 0\n    while i < n:\n        j = i + 1\n        while j < n:\n            if a[j] != a[i]:\n                break\n            j += 1\n        c = j - i\n        while c >= len(cnt):\n            cnt.append([])\n        cnt[c].append(a[i])\n        i = j\n    best = -1\n    for i in range(len(cnt)):\n        for u in cnt[i]:\n            for j in range(i + 1):\n                for v in cnt[j]:\n                    if u < v:\n                        if (u, v) not in bad:\n                            best = max(best, (u + v) * (i + j))\n                            break\n                    elif u > v:\n                        if (v, u) not in bad:\n                            best = max(best, (u + v) * (i + j))\n                            break\n    print(best)\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    (n, m) = map(int, inp().split())\n    a = list(map(int, inp().split()))\n    bad = set()\n    for i in range(m):\n        bad.add(tuple(sorted(map(int, inp().split()))))\n    a.sort(reverse=True)\n    cnt = []\n    i = 0\n    while i < n:\n        j = i + 1\n        while j < n:\n            if a[j] != a[i]:\n                break\n            j += 1\n        c = j - i\n        while c >= len(cnt):\n            cnt.append([])\n        cnt[c].append(a[i])\n        i = j\n    best = -1\n    for i in range(len(cnt)):\n        for u in cnt[i]:\n            for j in range(i + 1):\n                for v in cnt[j]:\n                    if u < v:\n                        if (u, v) not in bad:\n                            best = max(best, (u + v) * (i + j))\n                            break\n                    elif u > v:\n                        if (v, u) not in bad:\n                            best = max(best, (u + v) * (i + j))\n                            break\n    print(best)\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    (n, m) = map(int, inp().split())\n    a = list(map(int, inp().split()))\n    bad = set()\n    for i in range(m):\n        bad.add(tuple(sorted(map(int, inp().split()))))\n    a.sort(reverse=True)\n    cnt = []\n    i = 0\n    while i < n:\n        j = i + 1\n        while j < n:\n            if a[j] != a[i]:\n                break\n            j += 1\n        c = j - i\n        while c >= len(cnt):\n            cnt.append([])\n        cnt[c].append(a[i])\n        i = j\n    best = -1\n    for i in range(len(cnt)):\n        for u in cnt[i]:\n            for j in range(i + 1):\n                for v in cnt[j]:\n                    if u < v:\n                        if (u, v) not in bad:\n                            best = max(best, (u + v) * (i + j))\n                            break\n                    elif u > v:\n                        if (v, u) not in bad:\n                            best = max(best, (u + v) * (i + j))\n                            break\n    print(best)\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "import math, bisect, heapq, random, sys, itertools\ninput = sys.stdin.readline\nints = lambda : list(map(int, input().split()))\nalpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\np = 10 ** 9 + 7\nANS = []\nfor t in range(int(input())):\n    (n, m) = ints()\n    a = ints()\n    bad = set()\n    for i in range(m):\n        (x, y) = ints()\n        bad.add((x, y))\n        bad.add((y, x))\n    store = {}\n    for i in a:\n        if i not in store:\n            store[i] = 0\n        store[i] += 1\n    count = {}\n    for i in store:\n        if store[i] not in count:\n            count[store[i]] = []\n        count[store[i]].append(i)\n    for i in count:\n        count[i].sort(reverse=True)\n    cntx = sorted(count.keys())\n    ans = 0\n    for i in range(len(cntx)):\n        ctx = cntx[i]\n        for x in count[ctx]:\n            for j in range(i + 1):\n                cty = cntx[j]\n                for y in count[cty]:\n                    if x != y and (x, y) not in bad:\n                        ans = max(ans, (x + y) * (ctx + cty))\n                        break\n    ANS.append(ans)\nprint(*ANS, sep='\\n')"]