["import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    if x == 0 and y == 0:\n        print(0)\n    elif x == 0 or y == 0:\n        print(1)\n    elif (x ** 2 + y ** 2) ** 0.5 % 1 == 0:\n        print(1)\n    else:\n        print(2)", "import sys\nt = int(sys.stdin.readline())\nfor k in range(0, t):\n    (x, y) = map(int, sys.stdin.readline().split())\n    r = (x ** 2 + y ** 2) ** 0.5\n    if r == 0:\n        s = '0'\n    elif r % 1 == 0:\n        s = '1'\n    else:\n        s = '2'\n    sys.stdout.write(s + '\\n')", "n_test_cases = int(input())\nresults = []\nfor _ in range(n_test_cases):\n    (x, y) = tuple([int(x) for x in input().split()])\n    if x == 0 and y == 0:\n        results.append(0)\n        continue\n    a = (x * x + y * y) ** 0.5\n    if a - int(a) == 0:\n        results.append(1)\n    else:\n        results.append(2)\nfor result in results:\n    print(result)", "import sys\nrl = sys.stdin.readline\nT = int(rl())\nfor _ in range(T):\n    (x, y) = map(int, rl().split())\n    if x == 0 and y == 0:\n        print(0)\n    elif (x ** 2 + y ** 2) ** (1 / 2) == int((x ** 2 + y ** 2) ** (1 / 2)):\n        print(1)\n    else:\n        print(2)", "def solve():\n    if n == 0 and m == 0:\n        return 0\n    if ((n ** 2 + m ** 2) ** 0.5).is_integer():\n        return 1\n    return 2\nfrom sys import stdin\ninput = stdin.readline\nt = int(input())\nfor i in range(t):\n    (n, m) = [int(x) for x in input().split()]\n    print(solve())", "n = int(input())\nres = ''\nfor x in range(n):\n    (x, y) = map(int, input().split())\n    c = 0\n    (x1, y1) = (0, 0)\n    s = (x ** 2 + y ** 2) ** (1 / 2)\n    if s - int(s) == 0 and (x != 0 or y != 0):\n        res += '1\\n'\n    elif x == 0 and y == 0:\n        res += '0\\n'\n    else:\n        res += '2\\n'\nprint(res)", "for s in [*open(0)][1:]:\n    (x, y) = map(int, s.split())\n    print((x | y > 0) + (int((d := ((x * x + y * y) ** 0.5))) < d))", "for s in [*open(0)][1:]:\n    (x, y) = map(int, s.split())\n    print((x | y > 0) + (int((d := ((x * x + y * y) ** 0.5))) < d))", "for s in [*open(0)][1:]:\n    (x, y) = map(int, s.split())\n    print((x | y > 0) + (int((d := ((x * x + y * y) ** 0.5))) < d))", "for s in [*open(0)][1:]:\n    (x, y) = map(int, s.split())\n    print((x | y > 0) + (int((d := ((x * x + y * y) ** 0.5))) < d))", "import math\nimport sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nt = inp()\nfor i in range(t):\n    (x, y) = invr()\n    temp = math.sqrt(y ** 2 + x ** 2)\n    if int(temp) == 0:\n        print(0)\n        continue\n    elif temp == int(temp):\n        print(1)\n        continue\n    print(2)", "for s in [*open(0)][1:]:\n    (x, y) = map(int, s.split())\n    print((x | y > 0) + (int((d := ((x * x + y * y) ** 0.5))) < d))", "import sys\ninput = sys.stdin.readline\nprint = sys.stdout.write\n\ndef main():\n    a = int(input())\n    for i in range(a):\n        (x, y) = map(int, input().split())\n        if x == 0 and y == 0:\n            print(f'0\\n')\n        elif round((x ** 2 + y ** 2) ** 0.5) == (x ** 2 + y ** 2) ** 0.5:\n            print(f'1\\n')\n        else:\n            print(f'2\\n')\nmain()", "import math, sys\ninput = sys.stdin.readline\nS = lambda : input().rstrip()\nI = lambda : int(S())\nM = lambda : map(int, S().split())\nL = lambda : list(M())\nmod1 = 1000000007\nmod2 = 998244353\nfor _ in range(I()):\n    (x, y) = M()\n    if x == 0 and y == 0:\n        print(0)\n        continue\n    if (x * x + y * y) ** 0.5 == int((x * x + y * y) ** 0.5):\n        print(1)\n    else:\n        print(2)", "from math import sqrt\nt = int(input())\nwhile t > 0:\n    t = t - 1\n    [x, y] = input().split()\n    x = int(x)\n    y = int(y)\n    if x == 0 and y == 0:\n        print(0)\n        continue\n    if sqrt(x * x + y * y) == int(sqrt(x * x + y * y)):\n        print(1)\n    else:\n        print(2)", "import sys\n\ndef test():\n    (x, y) = sys.stdin.readline().strip().split(' ')\n    x = int(x)\n    y = int(y)\n    if x == 0 and y == 0:\n        print(0)\n    else:\n        sq = x * x + y * y\n        if int(sq ** 0.5 + 0.5) ** 2 == sq:\n            print(1)\n        else:\n            print(2)\nnum_test = int(sys.stdin.readline())\nfor _ in range(num_test):\n    test()", "import math\nimport sys\ninput = sys.stdin.readline\nfor i in range(int(input())):\n    (x, y) = tuple(map(int, input().split()))\n    s = int(math.sqrt(x * x + y * y))\n    if x == 0 and y == 0:\n        print(0, end='\\n')\n    elif s * s == x * x + y * y:\n        print(1, end='\\n')\n    else:\n        print(2, end='\\n')", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nfor _ in range(inp()):\n    lst = inlt()\n    tmp = (lst[0] ** 2 + lst[1] ** 2) ** 0.5\n    if tmp == 0:\n        print(0)\n    elif tmp == int(tmp):\n        print(1)\n    else:\n        print(2)", "import math\nimport sys\ninput = sys.stdin.readline\nfor i in range(int(input())):\n    (x, y) = tuple(map(int, input().split()))\n    s = int(math.sqrt(x * x + y * y))\n    if x == 0 and y == 0:\n        print(0, end='\\n')\n    elif s * s == x * x + y * y:\n        print(1, end='\\n')\n    else:\n        print(2, end='\\n')", "import math\nt = int(input())\nwhile t > 0:\n    t -= 1\n    (x, y) = map(int, input().split())\n    if x == 0 and y == 0:\n        print(0)\n    else:\n        s = math.sqrt(x ** 2 + y ** 2)\n        if s == int(s):\n            print(1)\n        else:\n            print(2)", "for s in [*open(0)][1:]:\n    (x, y) = map(int, s.split())\n    print(any((x, y)) + (int((d := ((x * x + y * y) ** 0.5))) < d))", "T = int(input())\nwhile T:\n    T -= 1\n    (x, y) = map(int, input().split())\n\n    def Euclidean(p1, p2):\n        return ((p1[0] - p2[0]) ** 2 + (p1[1] - p2[1]) ** 2) ** 0.5\n    init = (0, 0)\n    goal = (x, y)\n    if goal == init:\n        print(0)\n    elif Euclidean(init, goal).is_integer():\n        print(1)\n    else:\n        print(2)", "t = int(input())\na = []\nfor _ in range(t):\n    a.append(list(map(int, input().split())))\nfor i in range(t):\n    if a[i][0] == 0 and a[i][1] == 0:\n        print(0)\n    elif int((a[i][0] ** 2 + a[i][1] ** 2) ** 0.5) == (a[i][0] ** 2 + a[i][1] ** 2) ** 0.5:\n        print(1)\n    else:\n        print(2)", "import math\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    x = math.sqrt(a ** 2 + b ** 2)\n    if a == 0 and b == 0:\n        print(0)\n    elif math.floor(x) == math.ceil(x):\n        print(1)\n    else:\n        print(2)", "import sys\nfrom math import *\n\ndef get_ints():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\nt = get_ints()[0]\nfor _ in range(t):\n    (x, y) = get_ints()\n    if x == 0 and y == 0:\n        print(0)\n        continue\n    a = int(sqrt(x * x + y * y))\n    if a * a == x * x + y * y or (a - 1) * (a - 1) == x * x + y * y or (a + 1) * (a + 1) == x * x + y * y:\n        print(1)\n    else:\n        print(2)", "n = int(input())\nfor i in range(n):\n    c = input().split()\n    x = int(c[0])\n    y = int(c[1])\n    o = ((0 - x) ** 2 + (0 - y) ** 2) ** 0.5\n    if x == y == 0:\n        print(0)\n    elif o == int(o):\n        print(1)\n    else:\n        print(2)", "import math\nt = input()\ni = 1\ninp = ''\nwhile i <= int(t):\n    k = input()\n    ll = k.split(' ')\n    k = list(ll)\n    dis = math.sqrt(int(k[0]) ** 2 + int(k[1]) ** 2)\n    if k == ['0', '0']:\n        inp = inp + '0\\n'\n    elif dis - int(dis) == 0:\n        inp = inp + '1\\n'\n    else:\n        inp = inp + '2\\n'\n    i += 1\nprint(inp)", "import math\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    if x == 0 and y == 0:\n        print(0)\n    else:\n        k = int(math.sqrt(x ** 2 + y ** 2))\n        if k ** 2 == x ** 2 + y ** 2:\n            print(1)\n        else:\n            print(2)", "import sys\n\ndef main():\n    t = int(sys.stdin.readline().strip())\n    for _ in range(t):\n        (x, y) = map(int, sys.stdin.readline().split())\n        r = (x ** 2 + y ** 2) ** 0.5\n        if x == 0 and y == 0:\n            print(0)\n        elif int(r) == r:\n            print(1)\n        else:\n            print(2)\nmain()", "import sys\nimport math\nt = int(input())\nfor _ in range(t):\n    (a, b) = map(int, sys.stdin.readline().split())\n    x = math.sqrt(a ** 2 + b ** 2)\n    if x == 0:\n        print(0)\n    elif int(x) == x:\n        print(1)\n    else:\n        print(2)", "import math\nans = ''\nfor _ in range(int(input())):\n    (x, y) = list(map(int, input().split()))\n    if x == 0 and y == 0:\n        ans += '0\\n'\n    elif math.sqrt(x ** 2 + y ** 2) % 1 == 0:\n        ans += '1\\n'\n    else:\n        ans += str(2) + '\\n'\nprint(ans)", "from collections import Counter\nfrom math import sqrt, ceil, floor, log, gcd\nimport bisect as bs\nimport sys\ninput = sys.stdin.readline\ninp_lis = lambda : list(map(int, input().split()))\ninp_multi = lambda : map(int, input().split())\ninp_int = lambda : int(input().strip())\nfor _ in range(int(input().strip())):\n    (x, y) = inp_multi()\n    temp = sqrt(x ** 2 + y ** 2)\n    if x == 0 and y == 0:\n        print(0)\n        continue\n    if floor(temp) == ceil(temp):\n        print(1)\n    else:\n        print(2)", "import math\nt = int(input())\nl = []\nfor i in range(t):\n    s = input()\n    s = s.split()\n    x = int(s[0])\n    y = int(s[1])\n    if x == 0 and y == 0:\n        l.append(0)\n    elif math.sqrt(x ** 2 + y ** 2) == int(math.sqrt(x ** 2 + y ** 2)):\n        l.append(1)\n    else:\n        l.append(2)\nfor i in l:\n    print(i)", "import math\nk = int(input())\nfor z in range(k):\n    (a, b) = input().split()\n    a = int(a)\n    b = int(b)\n    root = math.sqrt(int(a) ** 2 + int(b) ** 2)\n    ans = 0\n    if root == 0:\n        pass\n    elif root == int(root):\n        ans += 1\n    else:\n        ans += 2\n    print(ans)", "import math\nn = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    if a + b == 0:\n        print(0)\n    elif math.sqrt(a * a + b * b) % 1 == 0:\n        print(1)\n    else:\n        print(2)", "import math\ntc = int(input())\nfor i in range(tc):\n    (x2, y2) = map(int, input().split())\n    x1 = 0\n    y1 = 0\n    if x2 == 0 and y2 == 0:\n        print(0)\n    else:\n        distance = math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2))\n        if distance == int(distance):\n            print(1)\n        else:\n            print(2)", "t = int(input())\nanswers = [0] * 0\nfor i in range(t):\n    (x, y) = [int(num) for num in input().split()]\n    if x == 0 and y == 0:\n        answers.append(0)\n    elif (x ** 2 + y ** 2) ** 0.5 == int((x ** 2 + y ** 2) ** 0.5):\n        answers.append(1)\n    else:\n        answers.append(2)\nfor i in answers:\n    print(i)", "import math\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    if x == 0 and y == 0:\n        print(0)\n    else:\n        distance = math.sqrt(x * x + y * y)\n        if distance.is_integer():\n            print('1')\n        else:\n            print('2')", "m = []\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    k = (x ** 2 + y ** 2) ** (1 / 2)\n    l = int(k)\n    if l == k:\n        if k == 0:\n            m.append(0)\n        else:\n            m.append(1)\n    else:\n        m.append(2)\nfor mo in m:\n    print(mo)", "import math\nt = int(input())\nfor i in range(t):\n    (x, y) = map(int, input().split())\n    temp = math.sqrt(x * x + y * y)\n    if temp == 0:\n        print(0)\n    elif temp.is_integer():\n        print(1)\n    else:\n        print(2)", "t = int(input())\nfor _ in range(t):\n    (a, b) = list(map(int, input().split()))\n    d = (a * a + b * b) ** 0.5\n    if d == 0:\n        print(0)\n    elif d.is_integer():\n        print(1)\n    else:\n        print(2)", "x = int(input())\ny = list()\nfor i in range(x):\n    l = list(map(int, input().split()))\n    y.append(l)\nfor i in range(len(y)):\n    if y[i][0] == 0 and y[i][1] == 0:\n        print(0)\n        continue\n    if y[i][0] == 0:\n        print(1)\n        continue\n    if y[i][1] == 0:\n        print(1)\n        continue\n    euclid = (y[i][0] ** 2 + y[i][1] ** 2) ** 0.5\n    if euclid % 1 == 0:\n        print(1)\n    else:\n        print(2)", "n = int(input())\npoints = [[int(i) for i in input().split()] for _ in range(n)]\nsquares = set([i * i for i in range(72)])\nfor (x, y) in points:\n    if x == 0 and y == 0:\n        print(0)\n    elif x * x + y * y in squares:\n        print(1)\n    else:\n        print(2)", "import math\nt = int(input())\nans = []\nfor _ in range(t):\n    (x, y) = input().split()\n    x = int(x)\n    y = int(y)\n    if x == 0 and y == 0:\n        ans.append(0)\n    elif math.sqrt(x ** 2 + y ** 2) % 1 == 0:\n        ans.append(1)\n    else:\n        ans.append(2)\nfor x in ans:\n    print(x)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nimport math\n\ndef solve(x, y):\n    if x == y == 0:\n        return 0\n    else:\n        d = math.sqrt(x * x + y * y)\n        if int(d) == d:\n            return 1\n        else:\n            return 2\ncount = inp()\nfor i in range(count):\n    [x, y] = inlt()\n    steps = solve(x, y)\n    print(f'{steps}')", "t = int(input())\ns = ''\nfor i in range(0, t):\n    (x, y) = map(int, input().split())\n    c = (x ** 2 + y ** 2) ** 0.5\n    d = int(c)\n    if x == 0 and y == 0:\n        s = s + '0' + '\\n'\n    elif d - c == 0:\n        s = s + '1' + '\\n'\n    else:\n        s = s + '2' + '\\n'\nprint(s)", "t = int(input())\ns = ''\nfor i in range(0, t):\n    (x, y) = map(int, input().split())\n    c = (x ** 2 + y ** 2) ** 0.5\n    d = int(c)\n    if x == 0 and y == 0:\n        s = s + '0' + '\\n'\n    elif d - c == 0:\n        s = s + '1' + '\\n'\n    else:\n        s = s + '2' + '\\n'\nprint(s)", "import math\nout = []\n\ndef min_moves():\n    y = list(map(int, input().strip().split()))\n    dist = math.pow(y[0], 2) + math.pow(y[1], 2)\n    eu_dist = math.sqrt(dist)\n    if y[0] == 0 and y[1] == 0:\n        out.append(0)\n    elif eu_dist.is_integer():\n        out.append(1)\n    else:\n        out.append(2)\niter = int(input())\nwhile iter > 0:\n    min_moves()\n    iter -= 1\nfor i in range(0, len(out)):\n    print(out[i])", "import math\nt = int(input())\nfor j in range(t):\n    (x, y) = input().split()\n    x = int(x)\n    y = int(y)\n    z = math.sqrt(x ** 2 + y ** 2)\n    if x == 0 and y == 0:\n        print(0)\n    elif int(z + 0.5) ** 2 == x ** 2 + y ** 2:\n        print(1)\n    else:\n        print(2)", "t = int(input())\no = []\nfor i in range(t):\n    (x, y) = map(int, input().split())\n    if x == 0 and y == 0:\n        o.append(0)\n    elif int((x ** 2 + y ** 2) ** 0.5) == float((x ** 2 + y ** 2) ** 0.5):\n        o.append(1)\n    else:\n        o.append(2)\nprint(*o, sep='\\n')", "from math import sqrt\ntest_cases = int(input(''))\ndestination_points = []\nfor i in range(test_cases):\n    point_input = input('')\n    point_tuple = (int(point_input.split(' ')[0]), int(point_input.split(' ')[1]))\n    destination_points.append(point_tuple)\nfor point in destination_points:\n    if point == (0, 0):\n        print(0)\n    elif sqrt(point[0] ** 2 + point[1] ** 2) / 1 == sqrt(point[0] ** 2 + point[1] ** 2) // 1:\n        print(1)\n    else:\n        print(2)", "for s in [*open(0)][1:]:\n    (x, y) = map(int, s.split())\n    print((x | y > 0) + (int((d := ((x * x + y * y) ** 0.5))) < d))", "for s in [*open(0)][1:]:\n    (x, y) = map(int, s.split())\n    print((x | y > 0) + (int((d := ((x * x + y * y) ** 0.5))) < d))", "for s in [*open(0)][1:]:\n    (x, y) = map(int, s.split())\n    print((x | y > 0) + (int((d := ((x * x + y * y) ** 0.5))) < d))", "for z in [*open(0)][1:]:\n    (u, o) = map(int, z.split())\n    print((u | o > 0) + (int((d := ((u * u + o * o) ** 0.5))) < d))", "import math\n\ndef pitagorizo(x, y):\n    resultEcuacion = math.sqrt(pow(0 - x, 2) + pow(0 - y, 2))\n    if x == 0 and y == 0:\n        print('0')\n    elif resultEcuacion == int(resultEcuacion):\n        print('1')\n    else:\n        print('2')\nt = int(input())\nxy = list()\nfor i in range(0, t):\n    variables = input().split(' ')\n    xy.append([int(variables[0]), int(variables[1])])\nfor i in range(0, t):\n    pitagorizo(xy[i][0], xy[i][1])", "from os import read\nimport sys\ninput = lambda : sys.stdin.readline()\n\ndef read_ints():\n    return [int(x) for x in input().split(' ')]\n\ndef read_int():\n    return int(input())\nsquare = set()\nfor i in range(100):\n    square.add(i * i)\nT = read_int()\nans = []\nfor _ in range(T):\n    (x, y) = read_ints()\n    if x == 0 and y == 0:\n        ans.append('0')\n        continue\n    if x * x + y * y in square:\n        ans.append('1')\n    else:\n        ans.append('2')\nprint('\\n'.join(ans))", "from sys import stdin, stdout\nfrom collections import Counter, defaultdict\nimport math\ninput = stdin.readline\nt = int(input().strip())\nfor _ in range(t):\n    (x, y) = list(map(int, input().strip().split()))\n    res = math.sqrt(x ** 2 + y ** 2)\n    if x == 0 and y == 0:\n        print(0)\n        continue\n    if math.ceil(res) == math.floor(res):\n        print(1)\n    else:\n        print(2)", "from sys import stdin, stdout\nfrom collections import Counter, defaultdict\nimport math\ninput = stdin.readline\nt = int(input().strip())\nfor _ in range(t):\n    (x, y) = list(map(int, input().strip().split()))\n    res = math.sqrt(x ** 2 + y ** 2)\n    if x == 0 and y == 0:\n        print(0)\n        continue\n    if math.ceil(res) == math.floor(res):\n        print(1)\n    else:\n        print(2)", "from sys import stdin\nfrom math import log, floor, ceil, gcd\nfrom collections import defaultdict as dd\ninput = stdin.readline\ninp = lambda : int(stdin.readline())\nrs = lambda : stdin.readline().strip()\n\ndef ra(typ):\n    return list(map(typ, stdin.readline().split()))\n\ndef rv(typ):\n    return map(typ, stdin.readline().split())\n\ndef main():\n    for _ in range(inp()):\n        (x, y) = rv(int)\n        if x == 0 and y == 0:\n            print(0)\n        else:\n            d = (x ** 2 + y ** 2) ** 0.5\n            if d == floor(d):\n                print(1)\n            else:\n                print(2)\nmain()", "t = int(input())\n\ndef getDistance(a, b):\n    return float(((a[0] - b[0]) ** 2 + (a[1] - b[1]) ** 2) ** 0.5)\ntest_cases = []\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    test_cases.append([a, b])\nfor i in range(t):\n    current = test_cases[i]\n    if current == [0, 0]:\n        print(0)\n    elif getDistance(current, [0, 0]).is_integer():\n        print(1)\n    else:\n        print(2)", "import math\nfrom time import process_time\nt = int(input())\nans = []\nsteps = 0\nfor tests in range(t):\n    (x, y) = map(int, input().split())\n    if math.sqrt(x ** 2 + y ** 2).is_integer():\n        if x == y == 0:\n            steps = 0\n            ans.append(steps)\n        if x != 0 or y != 0:\n            steps = 1\n            ans.append(steps)\n    if not math.sqrt(x ** 2 + y ** 2).is_integer():\n        steps = 2\n        ans.append(steps)\nprint(*ans, sep='\\n')", "import math\nfrom math import sqrt\n\ndef is_square(n):\n    return sqrt(n).is_integer()\nfor t in range(int(input())):\n    (x, y) = map(int, input().split())\n    if x == 0 and y == 0:\n        print(0)\n    elif is_square(x * x + y * y):\n        print(1)\n    else:\n        print(2)", "import math\ncantidadOperaciones = int(input())\ni = 0\nlistaOperaciones = []\nwhile i < cantidadOperaciones:\n    operacion = input()\n    listaOperaciones.append(operacion)\n    i += 1\nfor elemento in listaOperaciones:\n    if len(elemento) == 3:\n        x = int(elemento[0])\n        y = int(elemento[2])\n        numero = math.sqrt(pow(0 - x, 2) + pow(0 - y, 2))\n        if x == 0 and y == 0:\n            print(0)\n        elif numero % 1 == 0:\n            print(1)\n        else:\n            print(2)\n    if len(elemento) == 4:\n        x = int(elemento[0:2])\n        y = int(elemento[2] + elemento[3])\n        numero = math.sqrt(pow(0 - x, 2) + pow(0 - y, 2))\n        if numero % 1 == 0:\n            print(1)\n        else:\n            print(2)\n    if len(elemento) == 5:\n        x = int(elemento[0:2])\n        y = int(elemento[3] + elemento[4])\n        numero = math.sqrt(pow(0 - x, 2) + pow(0 - y, 2))\n        if numero % 1 == 0:\n            print(1)\n        else:\n            print(2)", "for s in [*open(0)][1:]:\n    (x, y) = map(int, s.split())\n    print((x | y > 0) + (int((d := ((x * x + y * y) ** 0.5))) < d))", "for s in [*open(0)][1:]:\n    (x, y) = map(int, s.split())\n    print((x | y > 0) + (int((d := ((x * x + y * y) ** 0.5))) < d))", "for s in [*open(0)][1:]:\n    (x, y) = map(int, s.split())\n    print((x | y > 0) + (int((d := ((x * x + y * y) ** 0.5))) < d))", "import math\nnumCases = int(input())\nlistMoves = []\nresult = [0] * numCases\nfor i in range(numCases):\n    listMoves.append(list(map(int, input().split())))\nfor i in range(numCases):\n    x = listMoves[i][0]\n    y = listMoves[i][1]\n    if x == y == 0:\n        result[i] = 0\n    elif math.sqrt(x * x + y * y).is_integer():\n        result[i] = 1\n    else:\n        result[i] = 2\nfor i in range(numCases):\n    print(result[i])", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    if x == 0 and y == 0:\n        print(0)\n    elif (x * x + y * y) ** (1 / 2) == int((x * x + y * y) ** (1 / 2)):\n        print(1)\n    else:\n        print(2)", "for s in [*open(0)][1:]:\n    (x, y) = map(int, s.split())\n    print((x | y > 0) + (int((d := ((x * x + y * y) ** 0.5))) < d))", "t = int(input())\nfor i in range(t):\n    (x, y) = map(int, input().split())\n    num = (x ** 2 + y ** 2) ** 0.5\n    if num == int(num):\n        if num == 0:\n            print(0)\n        else:\n            print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    if x == 0 and y == 0:\n        print(0)\n    elif (x ** 2 + y ** 2) ** 0.5 % 1 == 0:\n        print(1)\n    else:\n        print(2)", "import math\nn = eval(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    if a == 0 and b == 0:\n        print(0)\n    elif math.sqrt(a * a + b * b) == int(math.sqrt(a * a + b * b)):\n        print(1)\n    else:\n        print(2)", "import sys\nfor _ in range(int(input())):\n    (x1, y1) = list(map(int, sys.stdin.readline().split()))\n    if x1 == y1 == 0:\n        print(0)\n    else:\n        x = (x1 ** 2 + y1 ** 2) ** 0.5\n        if int(x) == x:\n            print(1)\n        else:\n            print(2)", "import math\nt = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    s = x ** 2 + y ** 2\n    if x == y == 0:\n        print(0)\n    elif math.sqrt(s) == math.isqrt(s):\n        print(1)\n    else:\n        print(2)", "import math\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    if x == y == 0:\n        print(0)\n    elif math.sqrt(x ** 2 + y ** 2).is_integer():\n        print(1)\n    else:\n        print(2)", "import math as akjshdjkasdhaaa\nfor _ in range(int(input())):\n    (lskdjalkdasld, ajksdhjksahdkja) = list(map(int, input().split()))\n    if lskdjalkdasld == 0 and ajksdhjksahdkja == 0:\n        print(0)\n    elif akjshdjkasdhaaa.sqrt(lskdjalkdasld ** 2 + ajksdhjksahdkja ** 2) == int(akjshdjkasdhaaa.sqrt(lskdjalkdasld ** 2 + ajksdhjksahdkja ** 2)):\n        print(1)\n    else:\n        print(2)", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if a == b == 0:\n        print(0)\n    elif ((0 - a) ** 2 + (0 - b) ** 2) ** 0.5 == int(((0 - a) ** 2 + (0 - b) ** 2) ** 0.5):\n        print(1)\n    else:\n        print(2)", "import math\ntestcases = int(input())\nfor i in range(testcases):\n    (x, y) = map(int, input().split())\n    z = x * x\n    w = y * y\n    q = math.sqrt(z + w)\n    if x == 0 and y == 0:\n        print(0)\n    elif q % int(q) == 0.0:\n        print(1)\n    else:\n        print(2)", "def solve():\n    for _ in range(int(input())):\n        (a, b) = map(int, input().split())\n        t = a ** 2 + b ** 2\n        if a == 0 and b == 0:\n            print(0)\n        elif int(t ** 0.5) ** 2 == t:\n            print(1)\n        else:\n            print(2)\nsolve()", "import math\nt = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    if x == 0 and y == 0:\n        print(0)\n    else:\n        n = x ** 2 + y ** 2\n        r = math.sqrt(n)\n        if int(r + 0.5) ** 2 == n:\n            print(1)\n        else:\n            print(2)", "import math\nfor i in range(int(input())):\n    (x, y) = map(int, input().split())\n    r = (x - 0) * (x - 0) + (y - 0) * (y - 0)\n    r = math.sqrt(r)\n    if r == 0:\n        print('0')\n    elif r.is_integer():\n        print('1')\n    else:\n        print('2')", "t = int(input())\nfor _ in range(0, t):\n    inputs = [int(num) for num in input().split()]\n    x = inputs[0]\n    y = inputs[1]\n    sqrt1 = (x * x + y * y) ** (1 / 2)\n    if x == 0 and y == 0:\n        print(0)\n    elif sqrt1 == int(sqrt1):\n        print(1)\n    else:\n        print(2)", "T = int(input())\nl = [i * i for i in range(1, 101)]\nfor t in range(T):\n    (a, b) = map(int, input().split())\n    c = a * a + b * b\n    if c == 0:\n        print(0)\n    elif c in l:\n        print(1)\n    else:\n        print(2)", "for i in range(int(input())):\n    (x, y) = map(int, input().split())\n    s = x ** 2 + y ** 2\n    p = pow(s, 1 / 2)\n    q = p\n    if x == 0 and y == 0:\n        print(0)\n    elif int(q) == p:\n        print(1)\n    else:\n        print(2)", "import math\nfor _ in range(int(input())):\n    (x, y) = list(map(int, input().split()))\n    if x == 0 and y == 0:\n        print(0)\n    else:\n        t = int(math.sqrt(x ** 2 + y ** 2))\n        if t * t == x ** 2 + y ** 2:\n            print(1)\n        else:\n            print(2)", "import math\n\ndef euclid(x1, y1, x2, y2):\n    k = math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2))\n    return k\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == 0 and b == 0:\n        print(0)\n    elif euclid(0, 0, a, b).is_integer():\n        print(1)\n    else:\n        print(2)", "ans = []\nfor i in range(int(input())):\n    (x1, y1) = map(int, input().strip().split())\n    temp = (x1 ** 2 + y1 ** 2) ** 0.5\n    if x1 == 0 and y1 == 0:\n        ans.append(0)\n    elif int(temp) == temp:\n        ans.append(1)\n    else:\n        ans.append(2)\nfor i in ans:\n    print(i)", "import math as m\nT = int(input())\nfor i in range(T):\n    list1 = []\n    listx = input().split()\n    for o in listx:\n        list1.append(int(o))\n    eucli = m.sqrt(list1[0] * list1[0] + list1[1] * list1[1])\n    if list1[0] == 0 and list1[1] == 0:\n        print(0)\n    elif eucli - int(eucli) == 0:\n        print(1)\n    else:\n        print(2)", "from math import sqrt\ntest = int(input())\nans = []\nfor x in range(test):\n    (x, y) = tuple(map(int, input().split()))\n    if sqrt(x ** 2 + y ** 2) == 0:\n        ans.append(0)\n    elif sqrt(x ** 2 + y ** 2).is_integer():\n        ans.append(1)\n    else:\n        ans.append(2)\nfor a in ans:\n    print(a)", "for i in range(int(input())):\n    (f, c) = map(int, input().split())\n    x = (f ** 2 + c ** 2) ** (1 / 2)\n    if f == 0 and c == 0:\n        print(0)\n    elif x % 1 == 0:\n        print(1)\n    else:\n        print(2)", "import math\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    if x == 0 and y == 0:\n        print(0)\n    else:\n        k = x ** 2 + y ** 2\n        r = math.isqrt(k)\n        if r * r == k:\n            print(1)\n        else:\n            print(2)", "import math\nfor j in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = math.sqrt(pow(a, 2) + pow(b, 2))\n    if a == 0 and b == 0:\n        print(0)\n    elif c - int(c) == 0:\n        print(1)\n    else:\n        print(2)", "t = int(input())\nimport math\n\ndef nuqta(a, b):\n    if a == 0 and b == 0:\n        print(0)\n    elif math.sqrt(abs(0 - a) ** 2 + abs(0 - b) ** 2) % 1 == 0:\n        print(1)\n    else:\n        print(2)\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    nuqta(a, b)", "import math\nt = int(input())\nwhile t:\n    t = t - 1\n    (x, y) = input().split()\n    x = int(x)\n    y = int(y)\n    d = math.sqrt(x ** 2 + y ** 2)\n    e = d % 1\n    if x == 0 and y == 0:\n        print(0)\n    elif e == 0:\n        print(1)\n    else:\n        print(2)", "from math import pow, sqrt\nn = int(input())\nfor i in range(n):\n    res = input().split()\n    x = int(res[0])\n    y = int(res[1])\n    ED = sqrt(pow(-x, 2) + pow(-y, 2))\n    if x == y == 0:\n        print(0)\n    elif ED % 1 == 0:\n        print(1)\n    else:\n        print(2)", "t = int(input())\nfor zxc in range(t):\n    (x, y) = map(int, input().split())\n    s = (x ** 2 + y ** 2) ** 0.5\n    if x == y and x == 0:\n        print(0)\n    elif int(s) == s:\n        print(1)\n    else:\n        print(2)", "import math\nt = int(input())\nfor k in range(t):\n    (x, y) = map(int, input().split())\n    if (x, y) == (0, 0):\n        print(0)\n    elif math.sqrt(x ** 2 + y ** 2) - int(math.sqrt(x ** 2 + y ** 2)) == 0:\n        print(1)\n    else:\n        print(2)"]