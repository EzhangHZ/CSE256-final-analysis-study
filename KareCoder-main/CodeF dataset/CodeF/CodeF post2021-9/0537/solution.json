["import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    AB = [list(map(int, input().split())) for _ in range(n)]\n    (cntT, cntD) = ({}, {})\n    for i in range(n):\n        (t, d) = AB[i]\n        if t not in cntT:\n            cntT[t] = 0\n        if d not in cntD:\n            cntD[d] = 0\n        cntT[t] += 1\n        cntD[d] += 1\n    ans = n * (n - 1) * (n - 2) // 6\n    for i in range(n):\n        (t, d) = AB[i]\n        ans -= (cntT[t] - 1) * (cntD[d] - 1)\n    return ans\nfor _ in range(int(input())):\n    print(solve())", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    (a, b) = (dict(), dict())\n    res = n * (n - 1) * (n - 2) // 6\n    xy = []\n    for _ in range(n):\n        (x, y) = map(int, input().split())\n        try:\n            a[x] += 1\n        except:\n            a[x] = 1\n        try:\n            b[y] += 1\n        except:\n            b[y] = 1\n        xy.append([x, y])\n    for (x, y) in xy:\n        res -= (a[x] - 1) * (b[y] - 1)\n    print(res)", "import sys\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\nI = lambda : int(input())\nRI = lambda : map(int, input().split())\nRL = lambda : list(map(int, input().split()))\nRS = lambda : set(map(int, input().split()))\nRT = lambda : tuple(map(int, input().split()))\nRLN = lambda n: [list(map(int, input().split())) for _ in range(n)]\nRSN = lambda n: [set(map(int, input().split())) for _ in range(n)]\nINF = 10 ** 18\nEPS = 10 ** (-9)\nimport collections\n\ndef solve():\n    n = I()\n    p = RLN(n)\n    a = collections.Counter((x for (x, _) in p))\n    b = collections.Counter((x for (_, x) in p))\n    ans = n * (n - 1) * (n - 2) // 6\n    for (i, j) in p:\n        ans -= (a[i] - 1) * (b[j] - 1)\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    (a, b) = (dict(), dict())\n    res = n * (n - 1) * (n - 2) // 6\n    xy = []\n    for _ in range(n):\n        (x, y) = map(int, input().split())\n        if x in a.keys():\n            a[x] += 1\n        else:\n            a[x] = 1\n        if y in b.keys():\n            b[y] += 1\n        else:\n            b[y] = 1\n        xy.append([x, y])\n    for (x, y) in xy:\n        res -= (a[x] - 1) * (b[y] - 1)\n    print(res)", "import sys\nimport collections\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    p = [list(map(int, input().split())) for _ in range(n)]\n    a = collections.Counter((x for (x, _) in p))\n    b = collections.Counter((x for (_, x) in p))\n    ans = n * (n - 1) * (n - 2) // 6\n    for (i, j) in p:\n        ans -= (a[i] - 1) * (b[j] - 1)\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "import math\nimport heapq\nimport string\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right, insort\nimport sys\ninput = sys.stdin.readline\nS = lambda : input().rstrip()\nI = lambda : int(S())\nM = lambda : map(int, S().split())\nL = lambda : list(M())\nH = 1000000000 + 7\nfor _ in range(I()):\n    n = I()\n    l = []\n    for i in range(n):\n        l.append(L())\n    d1 = {}\n    d2 = {}\n    for i in range(n):\n        d1[l[i][0]] = d1.get(l[i][0], 0) + 1\n        d2[l[i][1]] = d2.get(l[i][1], 0) + 1\n    p = 0\n    for i in range(n):\n        p += (d1[l[i][0]] - 1) * (d2[l[i][1]] - 1)\n    print(n * (n - 1) * (n - 2) // 6 - p)", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    for i in range(n):\n        l.append(list(input().split()))\n    t = n * (n - 1) * (n - 2) // 6\n    xd = {}\n    yd = {}\n    for i in l:\n        (x, y) = i\n        if x in xd:\n            xd[x] += 1\n        else:\n            xd[x] = 1\n        if y in yd:\n            yd[y] += 1\n        else:\n            yd[y] = 1\n    s = 0\n    for i in l:\n        (x, y) = i\n        s += (xd[x] - 1) * (yd[y] - 1)\n    print(t - s)", "t = int(input())\nout = ''\nfor _ in range(t):\n    n = int(input())\n    a = []\n    b = []\n    countA = [[] for _ in range(n)]\n    countB = [[] for _ in range(n)]\n    for _ in range(n):\n        (ai, bi) = [int(x) - 1 for x in input().split()]\n        a.append(ai)\n        b.append(bi)\n        countA[ai].append(bi)\n        countB[bi].append(ai)\n    ways = n * (n - 1) * (n - 2) // (3 * 2)\n    for rep in countA:\n        for x in rep:\n            ways -= (len(countB[x]) - 1) * (len(rep) - 1)\n    out += str(ways) + '\\n'\nprint(out)", "def solve():\n    n = int(input())\n    tot = n * (n - 1) * (n - 2) // 6\n    (ca, cb) = ([0] * (n + 1), [0] * (n + 1))\n    (a, b) = ([0] * n, [0] * n)\n    for i in range(n):\n        (a[i], b[i]) = map(int, input().split())\n        ca[a[i]] = ca[a[i]] + 1\n        cb[b[i]] = cb[b[i]] + 1\n    for i in range(n):\n        tot = tot - (ca[a[i]] - 1) * (cb[b[i]] - 1)\n    print(tot)\nt = int(input())\nfor i in range(t):\n    solve()", "t = int(input())\nfor _ in range(t):\n    first = {}\n    second = {}\n    ii = []\n    n = int(input())\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        if a in first:\n            first[a] += 1\n        else:\n            first[a] = 1\n        if b in second:\n            second[b] += 1\n        else:\n            second[b] = 1\n        ii.append([a, b])\n    res = n * (n - 1) * (n - 2) // 6\n    v = 0\n    for i in ii:\n        v += (first[i[0]] - 1) * (second[i[1]] - 1)\n    print(res - v)", "def nc3(n):\n    if n < 3:\n        return 0\n    return n * (n - 1) * (n - 2) // 6\n\ndef nc2(n):\n    if n < 2:\n        return 0\n    return n * (n - 1) // 2\nfor _ in range(int(input())):\n    n = int(input())\n    x = {}\n    y = {}\n    l = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        if a in x:\n            x[a] += 1\n        else:\n            x[a] = 1\n        if b in y:\n            y[b] += 1\n        else:\n            y[b] = 1\n        l.append([a, b])\n    ans = nc3(n)\n    for (a, b) in l:\n        ans -= (x[a] - 1) * (y[b] - 1)\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    difficult = dict()\n    topic = dict()\n    l = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        l.append((a, b))\n        if b in difficult:\n            difficult[b] += 1\n        else:\n            difficult[b] = 1\n        if a in topic:\n            topic[a] += 1\n        else:\n            topic[a] = 1\n    ans = 0\n    for i in l:\n        ans += (topic[i[0]] - 1) * (difficult[i[1]] - 1)\n    print(n * (n - 1) * (n - 2) // 6 - ans)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    topic_count = [0] * (n + 1)\n    diff_count = [0] * (n + 1)\n    x = [0] * n\n    y = [0] * n\n    result = n * (n - 1) * (n - 2) // 6\n    for i in range(n):\n        inputs = input().split()\n        (x[i], y[i]) = (int(inputs[0]), int(inputs[1]))\n        topic_count[x[i]] += 1\n        diff_count[y[i]] += 1\n    for i in range(n):\n        result -= (topic_count[x[i]] - 1) * (diff_count[y[i]] - 1)\n    print(result)", "from collections import Counter, defaultdict\nm = int(input())\n\ndef solve(n: int, arr: list) -> None:\n    cnt_x = defaultdict(int)\n    cnt_y = defaultdict(int)\n    for (x, y) in arr:\n        cnt_x[x] += 1\n        cnt_y[y] += 1\n    ans = 0\n    for (x, y) in arr:\n        ans += (cnt_x[x] - 1) * (cnt_y[y] - 1)\n    print(n * (n - 1) * (n - 2) // 6 - ans)\nwhile m > 0:\n    n = int(input())\n    arr = list()\n    for _ in range(n):\n        a = input().split()\n        arr.append((int(a[0]), int(a[1])))\n    solve(n, arr)\n    m -= 1", "for t in range(int(input())):\n    n = int(input())\n    dx = {}\n    dy = {}\n    arr = []\n    for i in range(n):\n        (x, y) = [int(k) for k in input().split()]\n        dx[x] = dx.get(x, 0) + 1\n        dy[y] = dy.get(y, 0) + 1\n        arr.append((x, y))\n    ans = n * (n - 1) // 2 * (n - 2) // 3\n    for (x, y) in arr:\n        ans -= (dx[x] - 1) * (dy[y] - 1)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    (a, b) = ([], [])\n    counta = [-1] * (n + 1)\n    countb = [-1] * (n + 1)\n    for _ in range(n):\n        (x, y) = map(int, input().strip().split())\n        a.append(x)\n        b.append(y)\n        counta[x] += 1\n        countb[y] += 1\n    ans = n * (n - 1) * (n - 2) // 6\n    for i in range(n):\n        ans -= counta[a[i]] * countb[b[i]]\n    print(ans)", "import collections\nt = int(input())\nwhile t:\n    n = int(input())\n    a = []\n    b = []\n    freqa = [0] * (n + 1)\n    freqb = [0] * (n + 1)\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        a.append(x)\n        b.append(y)\n        freqa[x] += 1\n        freqb[y] += 1\n    answer = n * (n - 1) * (n - 2) // 6\n    for i in range(n):\n        answer = answer - (freqa[a[i]] - 1) * (freqb[b[i]] - 1)\n    print(answer)\n    t = t - 1", "mxn = 10 ** 10\nfor _ in range(int(input())):\n    n = int(input())\n    dct = [[] for i in range(n + 1)]\n    second = [0] * (n + 1)\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        dct[a].append(b)\n        second[b] += 1\n    temp = 0\n    for ls in dct:\n        ln = len(ls) - 1\n        for num in ls:\n            temp += ln * (second[num] - 1)\n    res = n * (n - 1) * (n - 2) // 6 - temp\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    a = list()\n    b = list()\n    d1 = [-1] * (n + 1)\n    d2 = [-1] * (n + 1)\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        a.append(x)\n        b.append(y)\n        d1[x] += 1\n        d2[y] += 1\n    vid = n * (n - 1) * (n - 2) // 6\n    for i in range(n):\n        vid -= d1[a[i]] * d2[b[i]]\n    print(vid)", "for _ in range(int(input())):\n    n = int(input())\n    cnt1 = [0] * n\n    cnt2 = [0] * n\n    li = []\n    for _ in range(n):\n        line = input().split()\n        a = int(line[0]) - 1\n        b = int(line[1]) - 1\n        cnt1[a] += 1\n        cnt2[b] += 1\n        li.append((a, b))\n    total = 1\n    for i in range(3):\n        total *= n - i\n    for i in range(1, 4):\n        total //= i\n    for (a, b) in li:\n        total -= (cnt1[a] - 1) * (cnt2[b] - 1)\n    print(total)", "for _ in range(int(input())):\n    n = int(input())\n    (a, b) = ([], [])\n    counta = [-1] * (n + 1)\n    countb = [-1] * (n + 1)\n    for _ in range(n):\n        (x, y) = map(int, input().strip().split())\n        a.append(x)\n        b.append(y)\n        counta[x] += 1\n        countb[y] += 1\n    ans = n * (n - 1) * (n - 2) // 6\n    for i in range(n):\n        ans -= counta[a[i]] * countb[b[i]]\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    A = []\n    B = []\n    c1 = [0] * (n + 1)\n    d1 = [0] * (n + 1)\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        A.append(a)\n        B.append(b)\n        c1[a] += 1\n        d1[b] += 1\n    ans = n * (n - 1) * (n - 2) // 6\n    for i in range(n):\n        ans -= (c1[A[i]] - 1) * (d1[B[i]] - 1)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    (d1, d2) = ({}, {})\n    l = []\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        if x in d1:\n            d1[x] += 1\n        else:\n            d1[x] = 1\n        if y in d2:\n            d2[y] += 1\n        else:\n            d2[y] = 1\n        l.append([x, y])\n    ans = n * (n - 1) * (n - 2) // 6\n    for i in range(n):\n        ans -= (d1[l[i][0]] - 1) * (d2[l[i][1]] - 1)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    (d1, d2) = ({}, {})\n    l = []\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        if x in d1:\n            d1[x] += 1\n        else:\n            d1[x] = 1\n        if y in d2:\n            d2[y] += 1\n        else:\n            d2[y] = 1\n        l.append([x, y])\n    ans = n * (n - 1) * (n - 2) // 6\n    for i in range(n):\n        ans -= (d1[l[i][0]] - 1) * (d2[l[i][1]] - 1)\n    print(max(ans, 0))", "t = int(input())\nmass = list()\ndic1 = dict()\ndic2 = dict()\nfor num in range(t):\n    n = int(input())\n    mass.clear()\n    dic1.clear()\n    dic2.clear()\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        if a in dic1.keys():\n            dic1[a] += 1\n        else:\n            dic1[a] = 0\n        if b in dic2.keys():\n            dic2[b] += 1\n        else:\n            dic2[b] = 0\n        mass.append([a, b])\n    ans = n * (n - 1) * (n - 2) // 6\n    for i in range(n):\n        ans -= dic1[mass[i][0]] * dic2[mass[i][1]]\n    print(ans)", "z = int(input())\nfor i in range(z):\n    n = int(input())\n    table1 = [-1] * (n + 1)\n    table2 = [-1] * (n + 1)\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n        table1[a[i][0]] += 1\n        table2[a[i][1]] += 1\n    total = n * (n - 1) * (n - 2) // 6\n    for i in range(n):\n        total -= table1[a[i][0]] * table2[a[i][1]]\n    print(total)", "for i in range(int(input())):\n    n = int(input())\n    zadachi = [[int(j) for j in input().split()] for k in range(n)]\n    otv = 0\n    a = dict()\n    b = dict()\n    for j in range(n):\n        if zadachi[j][0] not in a:\n            a[zadachi[j][0]] = 1\n        else:\n            a[zadachi[j][0]] += 1\n        if zadachi[j][1] not in b:\n            b[zadachi[j][1]] = 1\n        else:\n            b[zadachi[j][1]] += 1\n    ans = n * (n - 1) * (n - 2) // 6\n    for j in range(n):\n        ans -= (a[zadachi[j][0]] - 1) * (b[zadachi[j][1]] - 1)\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    zadachi = [[int(j) for j in input().split()] for k in range(n)]\n    otv = 0\n    a = dict()\n    b = dict()\n    for j in range(n):\n        if zadachi[j][0] not in a:\n            a[zadachi[j][0]] = 1\n        else:\n            a[zadachi[j][0]] += 1\n        if zadachi[j][1] not in b:\n            b[zadachi[j][1]] = 1\n        else:\n            b[zadachi[j][1]] += 1\n    ans = n * (n - 1) * (n - 2) // 6\n    for j in range(n):\n        ans -= (a[zadachi[j][0]] - 1) * (b[zadachi[j][1]] - 1)\n    print(ans)", "from collections import defaultdict\n\ndef func():\n    dic1 = defaultdict(int)\n    dic2 = defaultdict(int)\n    for i in range(n):\n        dic1[problems[i][0]] += 1\n        dic2[problems[i][1]] += 1\n    ans = n * (n - 1) * (n - 2) // 6\n    for i in range(n):\n        ans -= (dic1[problems[i][0]] - 1) * (dic2[problems[i][1]] - 1)\n    print(ans)\nfor _ in range(int(input())):\n    n = int(input())\n    problems = [list(map(int, input().split())) for __ in range(n)]\n    func()", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = [0] * (n + 1)\n    b = [0] * (n + 1)\n    ca = [0] * (n + 1)\n    cb = [0] * (n + 1)\n    for i in range(1, n + 1):\n        (x, y) = map(int, input().split())\n        a[i] = x\n        b[i] = y\n        ca[a[i]] += 1\n        cb[b[i]] += 1\n    ans = n * (n - 1) * (n - 2) // 6\n    for i in range(1, n + 1):\n        ans -= (ca[a[i]] - 1) * (cb[b[i]] - 1)\n    print(ans)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = []\n    b = []\n    c = dict()\n    d = dict()\n    for _ in range(n):\n        (a1, b1) = map(int, input().split())\n        a.append(a1)\n        b.append(b1)\n        c[a1] = c.get(a1, 0) + 1\n        d[b1] = d.get(b1, 0) + 1\n    r = n * (n - 1) * (n - 2) / 6\n    for i in range(n):\n        r -= (c[a[i]] - 1) * (d[b[i]] - 1)\n    print(int(r))", "t = int(input())\nmass = list()\ndic1 = dict()\ndic2 = dict()\nfor num in range(t):\n    n = int(input())\n    mass.clear()\n    dic1.clear()\n    dic2.clear()\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        if a in dic1.keys():\n            dic1[a] += 1\n        else:\n            dic1[a] = 1\n        if b in dic2.keys():\n            dic2[b] += 1\n        else:\n            dic2[b] = 1\n        mass.append([a, b])\n    ans = n * (n - 1) * (n - 2) // 6\n    for i in range(n):\n        ans -= (dic1[mass[i][0]] - 1) * (dic2[mass[i][1]] - 1)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    Topic = []\n    Diff = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        Topic.append(a)\n        Diff.append(b)\n    T_map = dict.fromkeys(Topic, 0)\n    D_map = dict.fromkeys(Diff, 0)\n    for i in Topic:\n        T_map[i] += 1\n    for i in Diff:\n        D_map[i] += 1\n    good_trip = int(n * (n - 1) * (n - 2) / 6)\n    bad_trip = 0\n    for i in range(n):\n        bad_trip += (T_map[Topic[i]] - 1) * (D_map[Diff[i]] - 1)\n    print(good_trip - bad_trip)", "import sys\ninput = sys.stdin.readline\nfrom collections import Counter as C\nf = input\nfor i in ' ' * int(f()):\n    n = int(f())\n    ls = []\n    l1 = C()\n    l2 = C()\n    for i in ' ' * n:\n        (a, b) = map(int, f().split())\n        ls.append([a, b])\n        l1[a] += 1\n        l2[b] += 1\n    z = n * (n - 1) * (n - 2) // 6\n    for (a, b) in ls:\n        z -= (l1[a] - 1) * (l2[b] - 1)\n    print(z)", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    inp = []\n    t = defaultdict(int)\n    d = defaultdict(int)\n    ans = n * (n - 1) * (n - 2) // 6\n    for _ in range(n):\n        (a, b) = map(int, input().split())\n        inp.append([a, b])\n        t[a] += 1\n        d[b] += 1\n    for i in range(n):\n        (l, m) = inp[i]\n        ans -= (t[l] - 1) * (d[m] - 1)\n    print(ans)", "from math import comb\nfrom collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    d = defaultdict(list)\n    sec = defaultdict(int)\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        d[a].append(b)\n        sec[b] += 1\n    ans = comb(n, 3)\n    for x in d.keys():\n        for i in d[x]:\n            ans -= (len(d[x]) - 1) * (sec[i] - 1)\n    print(ans)", "t = int(input())\nfor t1 in range(t):\n    n = int(input())\n    a = [0] * n\n    b = [0] * n\n    a1 = {}\n    b1 = {}\n    u1 = []\n    u2 = []\n    for i in range(n):\n        (fi, se) = map(int, input().split())\n        a[i] = fi\n        b[i] = se\n        if a[i] in a1:\n            a1[a[i]] += 1\n        else:\n            a1[a[i]] = 1\n            u1.append(a[i])\n        if b[i] in b1:\n            b1[b[i]] += 1\n        else:\n            b1[b[i]] = 1\n            u2.append(b[i])\n    sum = int(n * (n - 1) * (n - 2) / 6)\n    for i in range(n):\n        sum = sum - (a1[a[i]] - 1) * (b1[b[i]] - 1)\n    print(sum)", "for _ in range(int(input())):\n    n = int(input())\n    t = dict()\n    d = dict()\n    arr = list()\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        arr.append([a, b])\n        try:\n            t[a] += 1\n        except:\n            t[a] = 1\n        try:\n            d[b] += 1\n        except:\n            d[b] = 1\n    ans = n * (n - 1) * (n - 2) // 6\n    for i in range(n):\n        ans -= (t[arr[i][0]] - 1) * (d[arr[i][1]] - 1)\n    print(ans)", "import math\nfrom collections import defaultdict\nmod = 10 ** 9 + 7\n\ndef bexp(a, b):\n    res = 1\n    while b:\n        if b % 2:\n            res = res * a % mod\n            b = b - 1\n        else:\n            a = a * a % mod\n            b = b // 2\n    return res\nfor cases in range(int(input())):\n    n = int(input())\n    l = []\n    da = defaultdict(int)\n    db = defaultdict(int)\n    for i in range(0, n):\n        (a, b) = map(int, input().split())\n        l.append([a, b])\n        da[a] += 1\n        db[b] += 1\n    ans = n * (n - 1) * (n - 2) // 6\n    for i in range(0, n):\n        a = l[i][0]\n        b = l[i][1]\n        ans = ans - (da[a] - 1) * (db[b] - 1)\n    print(max(0, ans))", "x = int(input())\nfor q in range(x):\n    y = int(input())\n    a = []\n    a0 = [0 for i in range(y)]\n    a1 = [0 for i in range(y)]\n    for i in range(y):\n        a.append(list(map(int, input().split())))\n        a0[a[i][0] - 1] += 1\n        a1[a[i][1] - 1] += 1\n    ans = y * (y - 1) * (y - 2) // 6\n    for i in range(y):\n        ans = ans - (a0[a[i][0] - 1] - 1) * (a1[a[i][1] - 1] - 1)\n    print(ans)", "from collections import Counter\n\ndef cn3(m):\n    return m * (m - 1) * (m - 2) // 6\n\ndef solve_case():\n    n = int(input())\n    a = [-1] * n\n    b = [-1] * n\n    for i in range(n):\n        (a[i], b[i]) = map(int, input().split())\n    ca = Counter(a)\n    cb = Counter(b)\n    pair_sum = 0\n    for i in range(n):\n        pair_sum += (ca[a[i]] - 1) * (cb[b[i]] - 1)\n    ans = cn3(n) - pair_sum\n    print(ans)\nT = int(input())\nfor t in range(T):\n    solve_case()", "from collections import Counter\n\ndef solve():\n    n = int(input())\n    tuples = [list(map(int, input().split())) for _ in range(n)]\n    counter_topic = Counter([a for (a, b) in tuples])\n    counter_diff = Counter([b for (a, b) in tuples])\n    all_comb = n * (n - 2) * (n - 1) // 6\n    ans = 0\n    for (a, b) in tuples:\n        same_topic = counter_topic[a] - 1\n        same_diff = counter_diff[b] - 1\n        ans += same_topic * same_diff\n    return all_comb - ans\nfor i in range(int(input())):\n    print(solve())", "from collections import deque, defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    a = []\n    d1 = defaultdict(list)\n    d2 = defaultdict(list)\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        d1[x].append(y)\n        d2[y].append(x)\n    ans = n * (n - 1) * (n - 2) // 6\n    for i in d1:\n        s = len(d1[i])\n        for u in d1[i]:\n            cnt = len(d2[u]) - 1\n            ans -= cnt * (s - 1)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    t = dict()\n    d = dict()\n    arr = list()\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        arr.append([a, b])\n        try:\n            t[a] += 1\n        except:\n            t[a] = 1\n        try:\n            d[b] += 1\n        except:\n            d[b] = 1\n    ans = n * (n - 1) * (n - 2) // 6\n    for i in range(n):\n        ans -= (t[arr[i][0]] - 1) * (d[arr[i][1]] - 1)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = []\n    b = []\n    for i in range(n):\n        (ai, bi) = map(int, input().split())\n        ai -= 1\n        bi -= 1\n        a.append(ai)\n        b.append(bi)\n    ca = [0] * n\n    cb = [0] * n\n    for i in range(n):\n        ca[a[i]] += 1\n        cb[b[i]] += 1\n    nn = 0\n    for i in range(n):\n        nn += (ca[a[i]] - 1) * (cb[b[i]] - 1)\n    ans = n * (n - 1) * (n - 2) // 6\n    print(ans - nn)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    (a, b) = ([], [])\n    c = dict()\n    d = dict()\n    for i in range(n):\n        (x, y) = [int(i) for i in input().split()]\n        a.append(x)\n        b.append(y)\n        c[x] = c.get(x, 0) + 1\n        d[y] = d.get(y, 0) + 1\n    ans = 0\n    n1 = n\n    for i in range(n):\n        ans += (n1 - 2) * (n1 - 1) / 2 - (c[a[i]] - 1) * (d[b[i]] - 1)\n        n1 -= 1\n    print(int(ans))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    rows = [0] * n\n    cols = [0] * n\n    counts = {}\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        rows[a - 1] += 1\n        cols[b - 1] += 1\n        if (a - 1, b - 1) in counts:\n            counts[a - 1, b - 1] += 1\n        else:\n            counts[a - 1, b - 1] = 1\n    total = n * (n - 1) * (n - 2) // 6\n    for guy in counts:\n        (x, y) = guy\n        a = counts[guy]\n        total -= a * (a - 1) * (a - 2) // 6\n        total -= a * (a - 1) * (n - a) // 2\n        total -= a * (rows[x] - a) * (cols[y] - a)\n    print(total)", "from math import factorial as f\n\ndef comb(n, m):\n    if m > n:\n        return 0\n    if m == n:\n        return 1\n    i = n - m\n    r = n\n    for j in range(i + 1, n):\n        r *= j\n    return r / f(m)\nt = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    v = [[0, 0] for i in range(0, n)]\n    d1 = dict()\n    d2 = dict()\n    for i in range(0, n):\n        (a, b) = map(int, input().split())\n        v[i] = [a, b]\n        if d1.get(a) == None:\n            d1[a] = 1\n        else:\n            d1[a] += 1\n        if d2.get(b) == None:\n            d2[b] = 1\n        else:\n            d2[b] += 1\n    result = comb(n, 3)\n    for i in range(0, n):\n        (a, b) = v[i]\n        if d1[a] > 1 and d2[b] > 1:\n            result -= (d1[a] - 1) * (d2[b] - 1)\n    print('%.0f' % result)", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    li = []\n    topics = defaultdict(list)\n    diff = defaultdict(int)\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        topics[a].append(b)\n        diff[b] += 1\n    to_sub = 0\n    for (k, v) in topics.items():\n        p = len(v)\n        for i in range(p):\n            to_sub += (diff[v[i]] - 1) * (p - 1)\n    total_comb = n * (n - 1) * (n - 2) // 6\n    print(total_comb - to_sub)", "from collections import Counter as C\nf = input\nfor i in ' ' * int(f()):\n    n = int(f())\n    ls = []\n    l1 = C()\n    l2 = C()\n    for i in ' ' * n:\n        (a, b) = map(int, f().split())\n        ls.append([a, b])\n        l1[a] += 1\n        l2[b] += 1\n    z = n * (n - 1) * (n - 2) // 6\n    for (a, b) in ls:\n        z -= (l1[a] - 1) * (l2[b] - 1)\n    print(z)", "for _ in range(int(input())):\n    n = int(input())\n    a = list()\n    b = list()\n    d1 = [-1] * (n + 1)\n    d2 = [-1] * (n + 1)\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        a.append(x)\n        b.append(y)\n        d1[x] += 1\n        d2[y] += 1\n    vid = n * (n - 1) * (n - 2) // 6\n    for i in range(n):\n        vid -= d1[a[i]] * d2[b[i]]\n    print(vid)", "from collections import Counter as C\nf = input\nfor i in ' ' * int(f()):\n    n = int(f())\n    ls = []\n    l1 = C()\n    l2 = C()\n    for i in ' ' * n:\n        (a, b) = map(int, f().split())\n        ls.append([a, b])\n        l1[a] += 1\n        l2[b] += 1\n    z = n * (n - 1) * (n - 2) // 6\n    for (a, b) in ls:\n        z -= (l1[a] - 1) * (l2[b] - 1)\n    print(z)", "from collections import Counter as C\nf = input\nfor i in ' ' * int(f()):\n    n = int(f())\n    ls = []\n    l1 = C()\n    l2 = C()\n    for i in ' ' * n:\n        (a, b) = map(int, f().split())\n        ls.append([a, b])\n        l1[a] += 1\n        l2[b] += 1\n    z = n * (n - 1) * (n - 2) // 6\n    for (a, b) in ls:\n        z -= (l1[a] - 1) * (l2[b] - 1)\n    print(z)", "T = int(input())\nfrom collections import Counter\nfor _ in range(T):\n    N = int(input())\n    AB = [tuple(map(int, input().split())) for i in range(N)]\n    ans = N * (N - 1) * (N - 2) // 6\n    ca = Counter()\n    cb = Counter()\n    for (a, b) in AB:\n        ca[a] += 1\n        cb[b] += 1\n    for (a, b) in AB:\n        ans -= (ca[a] - 1) * (cb[b] - 1)\n    print(ans)", "T = int(input())\nfrom collections import Counter\nfor _ in range(T):\n    N = int(input())\n    AB = [tuple(map(int, input().split())) for i in range(N)]\n    ans = N * (N - 1) * (N - 2) // 6\n    ca = Counter()\n    cb = Counter()\n    for (a, b) in AB:\n        ca[a] += 1\n        cb[b] += 1\n    for (a, b) in AB:\n        ans -= (ca[a] - 1) * (cb[b] - 1)\n    print(ans)", "from collections import Counter as C\nf = input\nfor i in ' ' * int(f()):\n    n = int(f())\n    ls = []\n    l1 = C()\n    l2 = C()\n    for i in ' ' * n:\n        (a, b) = map(int, f().split())\n        ls.append([a, b])\n        l1[a] += 1\n        l2[b] += 1\n    z = n * (n - 1) * (n - 2) // 6\n    for (a, b) in ls:\n        z -= (l1[a] - 1) * (l2[b] - 1)\n    print(z)", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = defaultdict(int)\n    r = defaultdict(int)\n    ll = defaultdict(list)\n    lr = defaultdict(list)\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        l[x] += 1\n        r[y] += 1\n        ll[x].append(y)\n        lr[y].append(x)\n    sl = defaultdict(int)\n    for x in ll:\n        for y in ll[x]:\n            sl[x] += r[y]\n    invalid = 0\n    for x in l:\n        invalid += (l[x] - 1) * (sl[x] - l[x])\n    print(n * (n - 1) * (n - 2) // 6 - invalid)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    ls = []\n    l1 = Counter()\n    l2 = Counter()\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        ls.append([a, b])\n        l1[a] += 1\n        l2[b] += 1\n    z = n * (n - 1) * (n - 2) // 6\n    for (a, b) in ls:\n        z -= (l1[a] - 1) * (l2[b] - 1)\n    print(z)", "import collections\nt = int(input())\nwhile t:\n    n = int(input())\n    a = []\n    b = []\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        a.append(x)\n        b.append(y)\n    answer = n * (n - 1) * (n - 2) // 6\n    frequencyDicta = collections.Counter(a)\n    frequencyDictb = collections.Counter(b)\n    for i in range(n):\n        answer = answer - (frequencyDicta[a[i]] - 1) * (frequencyDictb[b[i]] - 1)\n    print(answer)\n    t = t - 1"]