["for _ in range(int(input())):\n    (n, _) = map(int, input().split())\n    (length, count) = (0, 0)\n    for x in sorted(map(int, input().split()), reverse=True):\n        if length < x:\n            length = length + n - x\n            count = count + 1\n        else:\n            break\n    print(count)", "from bisect import bisect_right\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = sorted(list(map(int, input().split())))\n    c = 0\n    ans = 0\n    p = []\n    for i in a[::-1]:\n        if c < i:\n            ans += 1\n        else:\n            break\n        c += n - i\n    print(ans)", "def mices_saved(n, k, mices):\n    mices.sort()\n    cat = 0\n    pos = len(mices) - 1\n    result = 0\n    while pos > -1 and cat < mices[pos]:\n        cat += n - mices[pos]\n        pos -= 1\n        result += 1\n    return result\ntest_cases = int(input())\nfor i in range(test_cases):\n    (n, k) = list(map(int, input().split()))\n    mices = list(map(int, input().split()))\n    print(mices_saved(n, k, mices))", "def solve():\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr = sorted(arr)\n    cat = 0\n    ans = 0\n    for i in range(k - 1, -1, -1):\n        x = arr[i]\n        if x <= cat:\n            break\n        dis = n - x\n        cat += dis\n        ans += 1\n    print(ans)\nt = int(input())\nfor i in range(t):\n    solve()", "res = []\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    cat = 0\n    cnt = 0\n    for i in a:\n        if i <= cat:\n            break\n        cat += n - i\n        cnt += 1\n    res.append(cnt)\nprint(*res, sep='\\n')", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    mice = list(map(int, input().split()))\n    mice.sort()\n    cat = 0\n    flag = 0\n    for j in range(k - 1, -1, -1):\n        cat = cat + n - mice[j]\n        if cat > n - 1:\n            cat = cat - (n - mice[j])\n            flag = 1\n            break\n    if flag == 0:\n        print(k)\n    else:\n        print(max(k - (j + 1), 1))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    x = sorted(map(int, input().split()))\n    cat = ans = 0\n    for i in x[::-1]:\n        if cat >= i:\n            break\n        cat += n - i\n        ans += 1\n    print(ans)", "def solve(mice, n, k):\n    mice = sorted(mice)\n    cat = 0\n    saved = 0\n    end = k - 1\n    while cat < n and end >= 0:\n        mx = mice[end]\n        move = n - mx\n        if cat < mx:\n            saved += 1\n        cat += move\n        end -= 1\n    print(saved)\nt = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    mice = list(map(int, input().split()))\n    solve(mice, n, k)\n    t -= 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = sorted(map(int, input().split()), reverse=True)\n    cat = 0\n    temp = 0\n    for i in lst:\n        if i <= cat:\n            break\n        temp += 1\n        cat += n - i\n    print(temp)", "def save():\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    l = len(a)\n    c = 0\n    for i in range(l - 1, 0, -1):\n        c += n - a[i]\n        if a[i - 1] - c <= 0:\n            k -= i\n            break\n    return k\nt = int(input())\nres = ''\nwhile t > 0:\n    t -= 1\n    res += f'{save()}\\n'\nprint(res)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    x = list(map(int, input().split()))\n    x.sort()\n    x = x[::-1]\n    now = 0\n    cnt = 0\n    for g in x:\n        if now >= g:\n            break\n        cnt += 1\n        now += n - g\n    print(cnt)", "import sys\ninput = sys.stdin.readline\nfor tc in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = sorted(map(int, input().split()))\n    (sm, cnt) = (0, 0)\n    for i in a[::-1]:\n        if i <= sm:\n            break\n        cnt += 1\n        sm += n - i\n    print(cnt)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    num = list(map(int, input().split()))\n    num.sort()\n    num.reverse()\n    (ans, count) = (0, 0)\n    for i in range(k):\n        if ans >= num[i]:\n            break\n        else:\n            ans = ans + n - num[i]\n            count += 1\n    print(count)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    x = sorted(list(map(int, input().split())))\n    hole = 0\n    c = 0\n    for i in x[::-1]:\n        if i <= c:\n            break\n        hole += 1\n        c += n - i\n    print(hole)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = sorted(map(int, input().split()))\n    (c, ans) = (0, 0)\n    for i in l[::-1]:\n        if i <= c:\n            break\n        ans += 1\n        c += n - i\n    print(ans)", "for s in range(int(input())):\n    sum = 0\n    flag = 0\n    (n, k) = [int(i) for i in input().split()]\n    mice = [int(i) for i in input().split()]\n    mice.sort(reverse=True)\n    for i in range(k):\n        sum += n - mice[i]\n        if sum >= n:\n            flag = 1\n            print(i)\n            break\n    if flag == 0:\n        print(k)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    lst.sort(reverse=True)\n    c = 0\n    cnt = 0\n    for i in lst:\n        if c < i:\n            cnt += 1\n            c += n - i\n        else:\n            break\n    print(cnt)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = sorted(map(int, input().split()))\n    (c, ans) = (0, 0)\n    for i in l[::-1]:\n        if i <= c:\n            break\n        ans += 1\n        c += n - i\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    i = 0\n    count = 0\n    for j in l:\n        if i < j:\n            count += 1\n            i += n - j\n        else:\n            break\n    print(count)", "def main():\n    (n, k) = map(int, input().split())\n    x = list(map(int, input().split()))\n    x.sort(reverse=True)\n    ans = 0\n    c_i = 0\n    i = 0\n    while c_i < n and i < k:\n        if x[i] > c_i:\n            ans += 1\n            c_i += n - x[i]\n            i += 1\n        else:\n            break\n    print(ans)\nt = int(input())\nwhile t > 0:\n    t -= 1\n    main()", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = sorted(list(map(int, input().split())))[::-1]\n    r = k\n    summ = 0\n    for i in range(k):\n        summ += n - lst[i]\n        if summ >= n:\n            r = i\n            break\n    print(r)", "import sys\n\ndef mgc(n, k, arr):\n    cat = 0\n    while arr:\n        temp = arr.pop()\n        if cat < temp:\n            cat += n - temp\n        else:\n            return k - len(arr) - 1\n    return k\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = sorted(list(map(int, input().split())))\n    print(mgc(n, k, arr))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = sorted(map(int, input().split()))\n    (c, ans) = (0, 0)\n    for i in l[::-1]:\n        if i <= c:\n            break\n        ans += 1\n        c += n - i\n    print(ans)", "nTests = int(input())\nfor tests in range(0, nTests):\n    nk = list(map(int, input().split()))\n    n = nk[0]\n    k = nk[1]\n    mice = list(map(int, input().split()))\n    mice.sort(reverse=True)\n    saved = 0\n    dist = n\n    for closest in mice:\n        dist -= n - closest\n        if dist <= 0:\n            break\n        else:\n            saved += 1\n    print(saved)", "t = int(input())\nfor i in range(t):\n    (n, k) = [int(i) for i in input().split()]\n    x = [int(i) for i in input().split()]\n    mouse = 0\n    ans = 0\n    x.sort(reverse=True)\n    for j in x:\n        if mouse >= j:\n            break\n        ans += 1\n        mouse += n - j\n    print(ans)", "def save_more_mice(n, mice):\n    mice.sort()\n    mice_saved = 0\n    cat = 0\n    while len(mice) > 0:\n        mouse = mice.pop()\n        if mouse <= cat:\n            break\n        steps_to_hole = n - mouse\n        mice_saved += 1\n        cat += steps_to_hole\n    return mice_saved\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split(' '))\n    mice = list(map(int, input().split(' ')))\n    print(save_more_mice(n, mice))", "n = int(input())\nfor i in range(n):\n    (n, k) = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    b = sorted(b, reverse=True)\n    s = 0\n    n1 = n\n    for j in b:\n        if n1 - (n - j) > 0:\n            n1 -= n - j\n            s += 1\n        else:\n            break\n    print(s)", "t = int(input())\nfor j in range(0, t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    c = 0\n    f = 0\n    for i in range(0, k):\n        if l[i] > c:\n            c += n - l[i]\n            f += 1\n        else:\n            break\n    print(f)", "T = int(input().strip())\nfor t in range(T):\n    (hole, mice) = map(int, input().split())\n    M = list(map(int, input().split()))\n    M.sort(reverse=True)\n    cat = 0\n    saved = 0\n    for m in M:\n        dist = hole - m\n        if dist < hole - cat:\n            saved += 1\n            cat += dist\n        else:\n            break\n    print(saved)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    L = [*map(int, input().split())]\n    L.sort(reverse=True)\n    ans = 0\n    cat = 0\n    for el in L:\n        step = n - el\n        if cat >= el:\n            break\n        ans += 1\n        cat += step\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort(reverse=True)\n    sumy = 0\n    count = 0\n    for i in arr:\n        if sumy < i:\n            sumy += n - i\n            count += 1\n        if sumy > i:\n            break\n    print(count)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    x = list(map(int, input().split()))\n    x.sort()\n    s = n - x[k - 1]\n    i = k - 1\n    while i >= 0 and s <= n - 1:\n        i -= 1\n        s += n - x[i]\n    print(k - 1 - i)", "n = int(input())\nfor i in range(n):\n    count = 0\n    cat = 0\n    (n, k) = map(int, input().split())\n    coords = list(map(int, input().split()))\n    coords.sort(reverse=True)\n    for x in coords:\n        if x <= cat:\n            break\n        else:\n            count += 1\n            cat += n - x\n    print(count)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    (c, pos) = (0, 0)\n    for i in a:\n        if i <= pos:\n            break\n        pos += n - i\n        c += 1\n    print(c)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = sorted(list(map(int, input().split())))\n    (c, ans) = (0, 0)\n    for i in a[::-1]:\n        if i <= c:\n            break\n        ans += 1\n        c += n - i\n    print(ans)", "for _ in range(int(input())):\n    [n, k] = [int(i) for i in input().split(' ')]\n    l = [int(i) for i in input().split(' ')]\n    step = n - 1\n    l.sort()\n    ans = 0\n    for i in range(len(l) - 1, -1, -1):\n        step -= n - l[i]\n        if step >= 0:\n            ans += 1\n        else:\n            break\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    x = [int(x) for x in input().split()]\n    x.sort()\n    x.reverse()\n    total = 0\n    answer = 0\n    for i in x:\n        difference = n - i\n        if difference + total < n:\n            total += difference\n            answer += 1\n        else:\n            break\n    print(answer)", "n = int(input())\nfor i in range(n):\n    (k, x) = input().split()\n    (c, ans) = (0, 0)\n    (k, x) = (int(k), int(x))\n    l = sorted(list(map(int, input().split())))\n    for i in range(x - 1, -1, -1):\n        if l[i] <= c:\n            break\n        c += k - l[i]\n        if c >= k:\n            break\n        else:\n            ans += 1\n    print(ans)", "t = int(input())\nL = []\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    l = sorted(list(map(int, input().split())), reverse=True)\n    s = n - 1\n    m = 0\n    for i in l:\n        togo = n - i\n        if togo <= s:\n            s -= togo\n            m += 1\n        else:\n            break\n    L.append(m)\nfor i in L:\n    print(i)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    mice = sorted(list(map(int, input().split())))\n    (sm, ans) = (0, 0)\n    for i in range(len(mice) - 1, -1, -1):\n        if (sm := (sm + n - mice[i])) >= n:\n            break\n        ans += 1\n    print(ans)", "def save(n, k, x):\n    x.sort()\n    p = 0\n    count = 0\n    for i in range(k - 1, -1, -1):\n        if x[i] > p:\n            p += n - x[i]\n            count += 1\n        else:\n            break\n    return count\nT = int(input())\nfor i in range(T):\n    (n, k) = map(int, input().split())\n    x = list(map(int, input().split()))\n    print(save(n, k, x))", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nfor _ in range(int(inp())):\n    (n, k) = map(int, input().split())\n    l = sorted(map(int, input().split()))\n    ans = 0\n    cat = 0\n    for i in reversed(l):\n        if cat >= i:\n            break\n        cat += n - i\n        ans += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = sorted(map(int, input().split()))\n    (c, ans) = (0, 0)\n    for i in l[::-1]:\n        if i <= c:\n            break\n        ans += 1\n        c += n - i\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    list1 = sorted(list(map(int, input().split())))[::-1]\n    sums = 0\n    idx = k\n    for i in range(k):\n        sums += n - list1[i]\n        if sums >= n:\n            idx = i\n            break\n    print(idx)", "test = int(input())\nwhile test > 0:\n    p = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    catpos = 0\n    total = 0\n    for i in l:\n        if catpos < i:\n            catpos += p[0] - i\n            total += 1\n        else:\n            break\n    print(total)\n    test -= 1", "def solve(n, k, locs):\n    total = 0\n    count = 0\n    i = 0\n    while i < k and locs[i] > total:\n        count += 1\n        total += n - locs[i]\n        i += 1\n    return count\nans = []\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ans.append(solve(n, k, sorted(list(map(int, input().split())), reverse=True)))\nprint(*ans, sep='\\n')", "def saveMice(n, k, array):\n    array.sort()\n    cat_position = 0\n    x = k - 1\n    count = 0\n    while x >= 0 and array[x] > cat_position:\n        cat_position += n - array[x]\n        x -= 1\n        count += 1\n    return count\nt = int(input())\nfinal = []\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    final.append(saveMice(n, k, l))\nfor _ in range(t):\n    print(final[_])", "def solve():\n    [n, k] = [int(x) for x in input().split()]\n    posiciones = [n - int(x) for x in input().split()]\n    posiciones.sort()\n    pasosUsados = 0\n    i = 0\n    salvados = 0\n    while i < k and pasosUsados + posiciones[i] < n:\n        pasosUsados = pasosUsados + posiciones[i]\n        i = i + 1\n        salvados = salvados + 1\n    print(salvados)\nt = int(input())\nfor i in range(t):\n    solve()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = sorted(map(int, input().split()))\n    (c, ans) = (0, 0)\n    for i in l[::-1]:\n        if i <= c:\n            break\n        ans += 1\n        c += n - i\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    i = 0\n    saved = 0\n    for x in a[::-1]:\n        if i < x:\n            jump = n - x\n            i += jump\n            saved += 1\n        else:\n            break\n    print(saved)", "for tc in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = sorted(map(int, input().split()))\n    (sm, cnt) = (0, 0)\n    for i in a[::-1]:\n        if i <= sm:\n            break\n        cnt += 1\n        sm += n - i\n    print(cnt)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    x = [int(x) for x in input().split()]\n    x.sort(reverse=True)\n    if k == 1:\n        print(1)\n    else:\n        sums = 0\n        i = 0\n        while i < k and x[i] - sums > 0:\n            sums += n - x[i]\n            i += 1\n        print(i)", "def retornarVivos(t, lista):\n    k = 0\n    soma = 0\n    for i in range(len(lista)):\n        soma += t - int(lista[i])\n        if soma >= t:\n            return k\n        k += 1\n    return k\nn = int(input())\nwhile n > 0:\n    x = input()\n    (t, r) = x.split(' ')\n    (t, r) = (int(t), int(r))\n    lista = list(map(int, input().split(' ')))\n    lista.sort()\n    lista.reverse()\n    print(retornarVivos(int(t), lista))\n    n -= 1", "def resolve():\n    buraco = int(input().split(' ')[0])\n    ratos_str = input().split(' ')\n    ratos = sorted([buraco - int(x) for x in ratos_str])\n    gato = 0\n    ratos_salvos = 0\n    while ratos_salvos < len(ratos) and gato < buraco - ratos[ratos_salvos]:\n        gato += ratos[ratos_salvos]\n        ratos_salvos += 1\n    print(ratos_salvos)\nncasos = int(input())\nfor _ in range(ncasos):\n    resolve()", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = sorted(map(int, input().split()))\n    (c, ans) = (0, 0)\n    for i in l[::-1]:\n        if c >= i:\n            break\n        ans += 1\n        c += n - i\n    print(ans)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    w = sorted(map(int, input().split()), reverse=True)\n    c = 0\n    ans = 0\n    for i in range(k):\n        if c < w[i]:\n            c += n - w[i]\n            ans += 1\n        else:\n            break\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = sorted(map(int, input().split()))\n    (c, ans) = (0, 0)\n    for i in l[::-1]:\n        if i <= c:\n            break\n        ans += 1\n        c += n - i\n    print(ans)", "for _ in range(int(input())):\n    (n, _) = map(int, input().split())\n    (length, count) = (0, 0)\n    for x in sorted(map(int, input().split()), reverse=True):\n        if length < x:\n            length = length + n - x\n            count = count + 1\n        else:\n            break\n    print(count)", "in_ = int(input())\nfor i in range(in_):\n    [n, k] = map(int, input().split(' '))\n    x = list(map(int, input().split(' ')))\n    x.sort(reverse=True)\n    m = 0\n    a = 0\n    for j in range(k):\n        m += n - x[j]\n        if m < n:\n            a += 1\n        else:\n            break\n    print(a)", "def solve():\n    (n, k) = (int(s) for s in input().split())\n    a = [int(s) for s in input().split()]\n    a.sort(reverse=True)\n    cat_position = 0\n    total = 0\n    for i in range(k):\n        if cat_position < a[i]:\n            cat_position += n - a[i]\n            total += 1\n        else:\n            break\n    print(total)\nt = 1\nt = int(input())\nfor _ in range(t):\n    solve()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    A = list(map(int, input().split()))\n    A.sort(reverse=True)\n    ans = 0\n    res = 0\n    for i in range(k):\n        if A[i] > res:\n            res += n - A[i]\n            ans += 1\n        else:\n            break\n    print(ans)", "for i in range(int(input())):\n    ans = 'YES'\n    (n, k) = map(int, input().split())\n    s = sorted(list(map(int, input().split())), reverse=True)\n    t1 = 0\n    ans = 0\n    for i in range(k):\n        if s[i] > t1:\n            t1 += n - s[i]\n            ans += 1\n        else:\n            break\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = sorted(list(map(int, input().split())))\n    c = 0\n    ans = 0\n    for i in arr[::-1]:\n        if i <= c:\n            break\n        ans += 1\n        c += n - i\n    print(ans)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = sorted(list(map(int, input().split())))\n    c = 0\n    ans = 0\n    for i in arr[::-1]:\n        if i <= c:\n            break\n        ans += 1\n        c += n - i\n    print(ans)", "import sys\nN = int(200000.0 + 5)\nsys.setrecursionlimit(N)\n\ndef charming():\n    (n, k) = map(int, input().split())\n    x = list(map(int, input().split()))\n    x.sort(reverse=True)\n    res = 0\n    move = 0\n    while res < k and x[res] > move:\n        move += n - x[res]\n        res += 1\n    print(res)\nfor t in range(int(input())):\n    charming()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    A = sorted(list(map(int, input().split())))\n    A = A[::-1]\n    c = 0\n    s = 0\n    for i in A:\n        if s >= i:\n            break\n        s += n - i\n        c += 1\n    print(c)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    lst.sort(reverse=True)\n    c = 0\n    cat = 0\n    for i in lst:\n        if i <= cat:\n            break\n        else:\n            c += 1\n            cat += n - i\n    print(c)", "from sys import stdin\nimport bisect\ninput = stdin.readline\nip = lambda : input().rstrip('\\n')\nIP = lambda : list(map(int, ip().split()))\nfor i in range(int(ip())):\n    (n, k) = IP()\n    lst = sorted(IP(), reverse=1)\n    cur = 0\n    ret = 0\n    for i in lst:\n        if cur >= i:\n            break\n        ret += 1\n        cur += n - i\n    print(ret)", "t = int(input())\nfor case in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    steps = 0\n    count = 0\n    for i in range(k):\n        if steps >= a[i]:\n            break\n        else:\n            count += 1\n            steps += n - a[i]\n    print(count)", "def fun(n, k, arr):\n    arr.sort()\n    time = n - 1\n    cnt = 0\n    tot = 0\n    i = k - 1\n    while i > -1 and tot < time:\n        tot += n - arr[i]\n        i -= 1\n        cnt += 1\n    if tot > time:\n        return cnt - 1\n    return cnt\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    ans = fun(n, k, arr)\n    print(ans)", "def solve():\n    t = int(input())\n    for _ in range(t):\n        (n, k) = [int(s) for s in input().split()]\n        x = sorted([int(s) for s in input().split()])\n        ans = 0\n        cat_x = 0\n        mouse_i = k - 1\n        while mouse_i > -1 and cat_x < x[mouse_i]:\n            cat_x += n - x[mouse_i]\n            ans += 1\n            mouse_i -= 1\n        print(ans)\nsolve()", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = sorted(map(int, input().split()), reverse=True)\n    res = [n - arr[0]]\n    for i in range(1, len(arr)):\n        res.append(res[-1] + n - arr[i])\n        if res[-1] >= n:\n            break\n    else:\n        print(len(res))\n        continue\n    print(max(1, len(res) - 1))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    mice = list(map(int, input().split()))\n    mice.sort()\n    cat = 0\n    safe = 0\n    for i in range(k - 1, -1, -1):\n        if cat >= mice[i]:\n            break\n        else:\n            cat += n - mice[i]\n            safe += 1\n    print(safe)", "def new_func():\n    for _ in range(int(input())):\n        (n, k) = map(int, input().split())\n        l = list(map(int, input().split()))\n        l = sorted(l)\n        ans = 0\n        i = 0\n        while i <= n:\n            if i >= l[-1]:\n                break\n            i += n - l[-1]\n            ans += 1\n            l.pop()\n            if len(l) == 0:\n                break\n        print(ans)\nnew_func()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = sorted(map(int, input().split()))\n    (c, ans) = (0, 0)\n    for i in l[::-1]:\n        if i <= c:\n            break\n        ans += 1\n        c += n - i\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = sorted(map(int, input().split()))\n    (c, ans) = (0, 0)\n    for i in l[::-1]:\n        if i <= c:\n            break\n        ans += 1\n        c += n - i\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    (ans, cnt) = (0, 0)\n    for i in range(len(arr) - 1, -1, -1):\n        if cnt < arr[i]:\n            ans += 1\n            cnt += n - arr[i]\n        else:\n            break\n    print(ans)", "def test(n, arr):\n    arr.sort()\n    ans = 0\n    (right, start) = (len(arr) - 1, 0)\n    while right >= 0 and start < arr[right]:\n        temp = n - arr[right]\n        start += temp\n        ans += 1\n        right -= 1\n    return ans\nT = int(input())\nfor i in range(T):\n    (n, k) = map(int, input().split())\n    arr = [int(x) for x in input().split()]\n    ans = test(n, arr)\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    c = 0\n    ans = 0\n    for i in range(k):\n        if c >= arr[-1]:\n            break\n        else:\n            c += n - arr[-1]\n            ans += 1\n            arr.pop(-1)\n    print(ans)", "u = int(input())\nfor _ in range(u):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    c = 0\n    m = 0\n    for i in range(k - 1, -1, -1):\n        t = n - a[i]\n        c = c + t\n        m = m + 1\n        if c > n - 1:\n            m = m - 1\n            break\n    print(m)", "t = int(input())\nfor i in range(0, t):\n    (n, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    lst.sort()\n    step = 0\n    saftMice = 0\n    for i in range(-1, -k - 1, -1):\n        if lst[i] > step:\n            saftMice += 1\n            step += n - lst[i]\n        else:\n            break\n    print(saftMice)", "t = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    mices = list(map(int, input().split()))\n    mices.sort(reverse=True)\n    elapsedMin = 0\n    savedMices = 0\n    catPos = 0\n    for mice in mices:\n        if catPos >= mice:\n            break\n        miceNeededJumps = n - mice + elapsedMin\n        elapsedMin = miceNeededJumps\n        savedMices += 1\n        catPos = miceNeededJumps\n    print(savedMices)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = sorted(map(int, input().split()))\n    (c, ans) = (0, 0)\n    for i in l[::-1]:\n        if i <= c:\n            break\n        ans += 1\n        c += n - i\n    print(ans)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().split())\n    mice = list(map(int, input().strip().split()))\n    mice = sorted(mice)\n    (cat, ans) = (0, 0)\n    for i in mice[::-1]:\n        if cat >= i:\n            break\n        ans += 1\n        cat += n - i\n    print(ans)", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    time = ct = 0\n    for i in l:\n        if time + (n - i) >= n:\n            break\n        else:\n            time += n - i\n        ct += 1\n    print(ct)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    sum = 0\n    count = 0\n    list_nk = list(map(int, input().split()))\n    list_mice = list(map(int, input().split()))\n    list_mice.sort(reverse=False)\n    for j in range(list_nk[1] - 1, -1, -1):\n        if sum >= list_mice[j]:\n            break\n        sum = sum + (list_nk[0] - list_mice[j])\n        count += 1\n    print(count)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    ans = 0\n    t = n\n    for i in l:\n        if t - (n - i) > 0:\n            t -= n - i\n            ans += 1\n        else:\n            break\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    ans = 0\n    t = n\n    for i in l:\n        if t - (n - i) > 0:\n            t -= n - i\n            ans += 1\n        else:\n            break\n    print(ans)", "nTests = int(input())\nfor te in range(0, nTests):\n    nk = list(map(int, input().split()))\n    n = nk[0]\n    k = nk[1]\n    mice = list(map(int, input().split()))\n    mice.sort(reverse=True)\n    saved = 0\n    dist = n\n    for closest in mice:\n        dist -= n - closest\n        if dist <= 0:\n            break\n        else:\n            saved += 1\n    print(saved)", "t = int(input())\n\ndef solve():\n    (n, k) = map(int, input().split())\n    arr = sorted(list(map(int, input().split())))\n    rem = n - 1\n    ans = 0\n    for i in reversed(arr):\n        if rem <= 0:\n            break\n        if n - i <= rem:\n            rem -= n - i\n            ans += 1\n        else:\n            break\n    print(ans)\nfor i in range(t):\n    solve()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    x = sorted(map(int, input().split()), reverse=True)\n    cat_position = 0\n    count_saved_mouses = 0\n    for i in range(k):\n        if x[i] <= cat_position:\n            break\n        count_saved_mouses += 1\n        cat_position += n - x[i]\n    print(count_saved_mouses)", "for i in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    cum = 0\n    mice = list(map(int, input().split()))\n    mice.sort()\n    c = 0\n    for j in mice[::-1]:\n        if cum < j:\n            c += 1\n        else:\n            print(c)\n            break\n        cum += n - j\n    else:\n        print(c)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    sort_a = sorted(a)\n    c = 0\n    ans = 0\n    for i in range(k - 1, -1, -1):\n        if sort_a[i] <= c:\n            break\n        else:\n            c += n - sort_a[i]\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    (i, c) = (0, 0)\n    while i < k and c < a[i]:\n        c += n - a[i]\n        i += 1\n    print(i)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    x = list(map(int, input().split()))\n    x.sort()\n    time = 0\n    res = 0\n    cat = 0\n    for i in range(k - 1, -1, -1):\n        if cat < x[i]:\n            res += 1\n            cat += n - x[i]\n        else:\n            break\n    print(res)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, k) = map(int, input().split())\n    x = list(map(int, input().split()))\n    x.sort(reverse=True)\n    c = 0\n    ans = 0\n    for xi in x:\n        if xi > c:\n            ans += 1\n            c += n - xi\n        else:\n            break\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "t = int(input())\nfor i in range(t):\n    (n, k) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    t = n - 1\n    c = 0\n    for i in l:\n        t -= n - i\n        if t >= 0:\n            c += 1\n        else:\n            break\n    print(c)", "from math import gcd\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    mice = sorted(map(int, input().split()))[:k]\n    cat = 0\n    while mice and mice[-1] > cat:\n        steps = n - mice[-1]\n        mice.pop()\n        cat += steps\n    print(k - len(mice))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    mo = 0\n    ca = 0\n    for i in range(k):\n        tc = n - a[i]\n        if ca >= a[i]:\n            break\n        else:\n            mo += 1\n            ca += tc\n    print(mo)"]