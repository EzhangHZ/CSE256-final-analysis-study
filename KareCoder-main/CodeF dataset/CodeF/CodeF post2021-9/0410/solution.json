["import sys\ninput = sys.stdin.readline\nt = int(input())\nout = ''\nfor _ in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    if arr.count(0) == n:\n        out += '0\\n'\n    else:\n        out += str(max(1, max(arr) * 2 - sum(arr))) + '\\n'\nprint(out)", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    t = int(input())\n    out = ''\n    for _ in range(t):\n        n = int(input())\n        arr = [int(x) for x in input().split()]\n        if arr.count(0) == n:\n            out += '0\\n'\n        else:\n            out += str(max(1, max(arr) * 2 - sum(arr))) + '\\n'\n    print(out)\nmain()", "import sys\nfrom math import ceil\ninput = sys.stdin.readline\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        print(solution(a))\n\ndef solution(a):\n    mx = max(a)\n    total = sum(a)\n    if mx == 0:\n        return 0\n    extra_balls = 2 * mx - total if mx > total // 2 else 1\n    return extra_balls\n\ndef test():\n    print(solution([0, 0, 0]) == 0)\n    print(solution([2, 3, 3, 3]) == 1)\n    print(solution([1, 5, 3]) == 1)\n    print(solution([1, 4, 1, 1]) == 1)\n    print(solution([1, 4, 1, 0]) == 2)\n    print(solution([1, 5, 1, 0]) == 3)\n    print(solution([1, 6, 1, 0]) == 4)\n    print(solution([1000000000, 1000000000, 1000000000, 1000000000]) == 1)\nmain()", "from sys import stdin\ninput = stdin.readline\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        pass_ = list(map(int, input().split()))\n        pass_.sort()\n        x = sum(pass_[:n - 1])\n        y = pass_[n - 1]\n        if x + y == 0:\n            print(0)\n        elif x >= y:\n            print(1)\n        else:\n            print(y - x)\nmain()", "def solve(n, arr):\n    arr.sort()\n    if sum(arr) == 0:\n        return 0\n    s = sum(arr[:-1]) + 1\n    if arr[-1] <= s:\n        return 1\n    return arr[-1] - s + 1\nfrom sys import stdin\ninput = stdin.readline\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    print(solve(n, arr))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    largest = max(arr)\n    if largest == 0:\n        print(0)\n        continue\n    print(max(1, 2 * largest - sum(arr)))", "import sys\ninput = sys.stdin.readline\n\ndef solve(n, arr):\n    ma = max(arr)\n    S = sum(arr)\n    if 2 * ma <= S:\n        print(1) if S > 0 else print(0)\n    else:\n        print(2 * ma - S)\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    solve(n, arr)", "lst = []\nfor s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(any(a) + max(0, 2 * max(a) - sum(a) - 1))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(any(a) + max(0, 2 * max(a) - sum(a) - 1))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(any(a) + max(0, 2 * max(a) - sum(a) - 1))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(any(a) + max(0, 2 * max(a) - sum(a) - 1))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(any(a) + max(0, 2 * max(a) - sum(a) - 1))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(any(a) + max(0, 2 * max(a) - sum(a) - 1))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(any(a) + max(0, 2 * max(a) - sum(a) - 1))", "import math\nfrom collections import Counter, defaultdict, deque\nfrom re import I\nfrom sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    m = max(a)\n    s = sum(a)\n    if s != 0:\n        print(max(1, 2 * m - s))\n    else:\n        print(0)", "from sys import stdin\n\ndef solve(n, arr):\n    sm = sum(arr)\n    if sum(arr) == 0:\n        return 0\n    ct = max(arr)\n    return max(1, ct * 2 - sm)\ninput = stdin.readline\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    print(solve(n, arr))", "def main():\n    import sys\n    input = sys.stdin.readline\n\n    def answer():\n        n = int(input())\n        a = list(map(int, input().split()))\n        if set(a) == {0}:\n            print(0)\n            return\n        print(max(2 * max(a) - sum(a), 1))\n    for _ in range(int(input())):\n        answer()\nmain()", "from math import *\nimport sys\nimport heapq\ncin = lambda : sys.stdin.readline().strip()\ncout = sys.stdout.write\n\ndef print_test_cases(tt, ans):\n    cout(f'Case #{tt}: {ans}\\n')\n\ndef read_line():\n    return list(map(int, cin().split()))\n\ndef solve(tt):\n    cin()\n    arr = read_line()\n    arr = [i for i in arr if i > 0]\n    if not arr:\n        cout('0\\n')\n        return\n    largest = max(arr)\n    rest = sum(arr) - largest\n    if largest <= rest:\n        cout('1\\n')\n    else:\n        cout(str(largest - rest) + '\\n')\n\ndef main():\n    T = int(cin())\n    for tt in range(1, T + 1):\n        solve(tt)\nmain()", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a_s = sorted(a)\n    s_1 = sum(a_s[:-1])\n    s = s_1 + a_s[n - 1]\n    if s == 0:\n        print(0)\n    elif a_s[n - 1] > s_1:\n        print(a_s[n - 1] - s_1)\n    else:\n        print(1)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if sum(a) >= 2 * max(a):\n        if max(a) == 0:\n            print(0)\n        else:\n            print(1)\n    else:\n        print(2 * max(a) - sum(a))", "from sys import stdin\ninput = stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    mx = max(a)\n    if s == 0:\n        print(0)\n    elif mx - (s - mx) <= 1:\n        print(1)\n    else:\n        print(mx - (s - mx))", "from sys import stdin, stdout\nfor _ in range(int(stdin.readline())):\n    num = int(stdin.readline())\n    arr = list(map(int, stdin.readline().split()))\n    sm = sum(arr)\n    mx = max(arr)\n    if sm == 0:\n        ans = 0\n    else:\n        ans = 1\n    if mx <= sm // 2:\n        print(ans)\n    else:\n        extra = mx - (sm - mx)\n        print(extra)", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(any(a) + max(0, 2 * max(a) - sum(a) - 1))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(any(a) + max(0, 2 * max(a) - sum(a) - 1))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(any(a) + max(0, 2 * max(a) - sum(a) - 1))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(any(a) + max(0, 2 * max(a) - sum(a) - 1))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(any(a) + max(0, 2 * max(a) - sum(a) - 1))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(any(a) + max(0, 2 * max(a) - sum(a) - 1))", "t = int(input())\nout = ''\nfor _ in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    if arr.count(0) == n:\n        out += '0\\n'\n    else:\n        out += str(max(1, max(arr) * 2 - sum(arr))) + '\\n'\nprint(out)", "t = int(input())\nout = ''\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if arr.count(0) == n:\n        out += '0\\n'\n    else:\n        out += str(max(1, max(arr) * 2 - sum(arr))) + '\\n'\nprint(out)", "import sys\nimport math\nfrom bisect import bisect_right as br\nfrom collections import deque\nfrom itertools import combinations as cb\n\ndef int_arr():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef str_arr():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef input():\n    return sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    n = int(input())\n    arr = int_arr()\n    mx = max(arr)\n    sm = sum(arr)\n    if sm == 0:\n        print(0)\n        continue\n    rem = sm - mx\n    if rem >= mx - 1:\n        print(1)\n    else:\n        print(mx - rem)", "def main():\n    s = []\n    t = int(input())\n    for test in range(t):\n        n = int(input())\n        p_per_player = list(input().split())\n        somma = 0\n        for i in range(n):\n            p_per_player[i] = int(p_per_player[i])\n        massimo = max(p_per_player)\n        p_per_player.remove(massimo)\n        for e in p_per_player:\n            somma += e\n        if massimo == 0:\n            s.append(0)\n        elif massimo > somma:\n            s.append(massimo - somma)\n        else:\n            s.append(1)\n    for ss in s:\n        print(int(ss))\nmain()", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mx = max(a)\n    mi = min(a)\n    tot = sum(a)\n    if mi == mx == 0:\n        print(0)\n        continue\n    if 2 * mx <= tot:\n        print(1)\n    else:\n        print(2 * mx - tot)", "import sys\ncount = int(sys.stdin.readline())\nans = [0] * count\nfor i in range(count):\n    n = int(sys.stdin.readline())\n    players = list(map(int, sys.stdin.readline().split(' ')))\n    max = 0\n    sum = 0\n    for j in range(n):\n        sum += players[j]\n        if players[j] > max:\n            sum += max\n            max = players[j]\n            sum -= players[j]\n    if sum == 0 and max == 0:\n        ans[i] = 0\n    elif max - sum <= 1:\n        ans[i] = 1\n    else:\n        ans[i] = max - sum\nfor j in range(count):\n    print(ans[j])", "t = int(input())\nout = []\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if arr.count(0) == n:\n        out.append('0\\n')\n    else:\n        out.append(str(max(1, max(arr) * 2 - sum(arr))) + '\\n')\nprint(''.join(out))", "t = int(input())\nresult = []\nfor i1 in range(t):\n    n = int(input())\n    passes = [int(i2) for i2 in input().split()]\n    passes.sort()\n    max_passes = passes[-1]\n    sum_rest = sum(passes)\n    balls = 2 * max_passes - sum_rest\n    if balls < 1:\n        if sum_rest == 0:\n            result.append(0)\n        else:\n            result.append(1)\n    else:\n        result.append(balls)\nfor i3 in result:\n    print(i3)", "import sys\nn = int(sys.stdin.readline().strip())\nfor i in range(n):\n    a = int(sys.stdin.readline().strip())\n    s = list(map(int, sys.stdin.readline().strip().split()))\n    if s.count(0) == len(s):\n        print(0)\n    else:\n        d = sorted(s)\n        print(max(d[-1] - sum(d[:-1]), 1))", "from collections import defaultdict, deque\nimport sys\ninput = lambda : sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if a[0] == 0 and a[-1] == 0:\n        print(0)\n    else:\n        print(1 if 2 * max(a) <= sum(a) else 2 * max(a) - sum(a))", "import sys\ninput = lambda : sys.stdin.readline().strip()\nsys.setrecursionlimit(10 ** 9)\nt = int(input())\nfor _ in [0] * t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = sum(a) - max(a) + 1\n    if max(a) == 0:\n        print(0)\n    elif max(a) > b:\n        print(max(a) - b + 1)\n    else:\n        print(1)", "import sys\n\ndef _input_iter():\n    for line in sys.stdin:\n        for part in line.strip().split(' '):\n            stripped = part.strip()\n            if stripped:\n                yield stripped\nstream = _input_iter()\n\ndef read_int():\n    return int(next(stream))\n\ndef read_str():\n    return next(stream)\n\ndef run():\n    n = read_int()\n    a = []\n    for i in range(n):\n        a.append(read_int())\n    a = sorted(a, reverse=True)\n    if a[0] == 0:\n        print(0)\n        return\n    print(max(1, 2 * max(a) - sum(a)))\ntest_cases = read_int()\nfor _ in range(test_cases):\n    run()", "t = int(input())\nout = []\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if arr.count(0) == n:\n        out.append(0)\n    else:\n        out.append(max(1, max(arr) * 2 - sum(arr)))\nfor x in out:\n    print(x)", "out = []\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    m = max(a)\n    s = sum(a)\n    if m == 0:\n        out.append(0)\n    elif m > s - m:\n        out.append(2 * m - s)\n    else:\n        out.append(1)\nfor i in out:\n    print(i)", "t = int(input())\nout = []\na = ''\nfor _ in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    sum_ = sum(l)\n    max_ = max(l)\n    if sum_ == 0:\n        out.append('0')\n        a += '0'\n    else:\n        out.append(str(max(1, 2 * max_ - sum_)))\n        a += out[-1]\nfor x in out:\n    print(x)", "t = int(input())\nout = []\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if arr.count(0) == n:\n        out.append('0\\n')\n    else:\n        out.append(str(max(1, max(arr) * 2 - sum(arr))) + '\\n')\nfor x in out:\n    print(x)", "from array import *\nt = int(input())\nans = []\nwhile t > 0:\n    t -= 1\n    i = 0\n    n = int(input())\n    a = array('i', list(map(int, input().split())))\n    total = sum(a)\n    mx = max(a)\n    if total == 0:\n        ans.append(0)\n        continue\n    total = total - mx\n    if total >= mx - 1:\n        ans.append(1)\n    else:\n        ans.append(1 + (mx - total - 1))\nfor i in ans:\n    print(i)", "import sys\n\ndef _input_iter():\n    for line in sys.stdin:\n        for part in line.strip().split(' '):\n            stripped = part.strip()\n            if stripped:\n                yield stripped\nstream = _input_iter()\n\ndef read_int():\n    return int(next(stream))\n\ndef read_str():\n    return next(stream)\n\ndef run():\n    n = read_int()\n    a = []\n    for i in range(n):\n        a.append(read_int())\n    a = sorted(a, reverse=True)\n    if a[0] == 0:\n        print(0)\n        return\n    max_passes = max(a)\n    sum_passes = sum(a)\n    print(max(1, 2 * max(a) - sum(a)))\ntest_cases = read_int()\nfor _ in range(test_cases):\n    run()", "for iters in range(int(input())):\n    n = input()\n    vals = [int(i) for i in input().split(' ')]\n    sumn = sum(vals)\n    maxn = max(vals)\n    s = 2 * maxn - sumn\n    if maxn == 0:\n        print(0)\n    elif s <= 1:\n        print(1)\n    else:\n        print(s)", "import collections\nimport math\n\ndef solve(a, n):\n    ts = sum(a)\n    if ts == 0:\n        print(0)\n    else:\n        mx = max(a)\n        if ts - mx < mx:\n            print(mx - (ts - mx))\n        else:\n            print(1)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    solve(a, n)", "try:\n    for _ in range(0, int(input())):\n        n = int(input())\n        mylist = list(map(int, input().split()))\n        mylist.sort()\n        sumexceptlast = sum(mylist[:n - 1])\n        if sumexceptlast + mylist[n - 1] == 0:\n            print(0)\n            continue\n        elif sumexceptlast >= mylist[n - 1]:\n            print(1)\n            continue\n        else:\n            print(mylist[n - 1] - sumexceptlast)\n            continue\nexcept:\n    pass", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted([int(i) for i in input().split()])\n    diff = a[-1] - sum(a[:-1])\n    if not a[-1]:\n        print(0)\n    elif diff <= 1:\n        print(1)\n    else:\n        print(diff)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    s = a[-1] - (sum(a) - a[-1])\n    if sum(a) == 0:\n        print(0)\n    else:\n        print(1) if s <= 0 else print(s)", "import collections\nimport math\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = 0\n    r = 0\n    totalsum = sum(a)\n    if totalsum == 0:\n        print(0)\n    else:\n        mx = max(a)\n        if totalsum - mx < mx:\n            print(mx - (totalsum - mx))\n        else:\n            print(1)\nt = int(input())\nwhile t > 0:\n    main()\n    t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    mx = max(a)\n    s -= mx\n    if sum(a) == 0:\n        print(0)\n    elif mx > s:\n        print(mx - s)\n    else:\n        print(1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if sum(a) == 0:\n        print(0)\n    else:\n        m = max(a)\n        s = sum(a)\n        print(max(2 * m - s, 1))", "for _ in range(int(input())):\n    n = int(input())\n    nums = list(map(int, input().split(' ')))\n    maxNum = max(nums)\n    rest = sum(nums) - maxNum\n    if rest >= maxNum:\n        if maxNum == 0:\n            print(0)\n        else:\n            print(1)\n    else:\n        print(maxNum - rest)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(0 if max(a) == 0 else max(1, 2 * max(a) - sum(a)))", "for i in range(int(input())):\n    lenn = int(input())\n    list1 = list(map(int, input().split()))\n    maxx = max(list1)\n    summ = sum(list1)\n    if maxx == 0:\n        print(0)\n    else:\n        print(max(1, 2 * maxx - summ))", "T_cases = int(input())\nfor i in range(T_cases):\n    n = int(input())\n    Shoots = list(map(int, input().split()))\n    maxi = max(Shoots)\n    Shoots.remove(maxi)\n    Sum = 0\n    for q in Shoots:\n        Sum += q\n    if maxi - Sum < 2 and maxi != 0:\n        print(1)\n    elif maxi - Sum >= 2:\n        print(maxi - Sum)\n    else:\n        print(0)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    m = max(arr)\n    s = sum(arr)\n    if s == 0:\n        print(0)\n    elif 2 * m > s:\n        print(2 * m - s)\n    else:\n        print(1)", "for _ in range(int(input())):\n    input()\n    a = [int(i) for i in input().split()]\n    if max(a) * 2 <= sum(a) and a != [0] * len(a):\n        print(1)\n    else:\n        print(max(a) * 2 - sum(a))", "T = int(input())\nfor testcase in range(1, T + 1):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    if s == 0:\n        print(0)\n    else:\n        m = max(a)\n        rest = s - m\n        k = m - rest\n        if k <= 0:\n            print(1)\n        else:\n            print(k)", "x = int(input())\nfor ll in range(x):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    z = sum(a) - a[n - 1]\n    if sum(a) == 0:\n        print(0)\n    elif z + 1 >= a[n - 1]:\n        print(1)\n    else:\n        print(a[n - 1] - z)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().strip().split()))\n    l.sort()\n    if l.count(0) == n:\n        print(0)\n    else:\n        a = sum(l) - l[n - 1]\n        if a + 1 > l[n - 1]:\n            print(1)\n        else:\n            print(l[n - 1] - a)", "import collections\nimport math\n\ndef main():\n    nu = int(input())\n    an = list(map(int, input().split()))\n    ts = sum(an)\n    if ts == 0:\n        print(0)\n    else:\n        mx = max(an)\n        if ts - mx < mx:\n            print(mx - (ts - mx))\n        else:\n            print(1)\nt = int(input())\nwhile t > 0:\n    main()\n    t -= 1", "def solveB(n, a):\n    a = sorted(a)\n    maximum = max(a)\n    total = sum(a) - maximum\n    if maximum > total:\n        return maximum - total\n    elif maximum == 0:\n        return 0\n    else:\n        return 1\nnum_tests = int(input().split()[0])\nfor t in range(num_tests):\n    n = int(input())\n    a = [int(value) for value in input().split()]\n    print(solveB(n, a))", "for i in range(int(input())):\n    n = int(input())\n    pas = list(map(int, input().split()))\n    mx = max(pas)\n    s = sum(pas) - mx\n    if mx == 0:\n        print(0)\n    else:\n        print(max(1, mx - s))", "for _ in range(int(input())):\n    n = int(input())\n    nums = list(map(int, input().split(' ')))\n    nums.sort()\n    if nums[-1] == 0:\n        print(0)\n    elif nums[-1] > sum(nums[:-1]):\n        print(nums[-1] - sum(nums[:-1]))\n    else:\n        print(1)", "n = input()\nfor elem in range(int(n)):\n    number_of_players = int(input())\n    players_string = input()\n    players = [int(p) for p in players_string.split()]\n    max_pass = max(players)\n    players.remove(max_pass)\n    interval = max_pass - sum(players)\n    if interval > 1:\n        print(interval)\n    elif max_pass != 0:\n        print(1)\n    else:\n        print(0)", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    if sum(a) == 0:\n        print(0)\n        return\n    else:\n        print(max(2 * max(a) - sum(a), 1))\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = sum(a)\n    if p == 0:\n        print(0)\n    elif 2 * max(a) <= p:\n        print(1)\n    else:\n        print(2 * max(a) - p)", "for i in range(int(input())):\n    (Size, passes) = (input(), list(map(int, input().split())))\n    passes.sort()\n    temp = -passes[-1]\n    for i in passes:\n        temp += i\n    if passes[-1] == 0:\n        print(0)\n        continue\n    if passes[-1] > temp:\n        print(passes[-1] - temp)\n    else:\n        print(1)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    total = sum(a)\n    maximum = max(a)\n    if total == 0:\n        print(0)\n        continue\n    if 2 * maximum <= total:\n        print(1)\n    else:\n        print(2 * maximum - total)", "for t in range(int(input())):\n    n = int(input())\n    passes = list(map(int, input().split()))\n    passes.sort()\n    if passes.count(0) == len(passes):\n        print(0)\n    elif passes[-1] - sum(passes[:-1]) <= 1:\n        print(1)\n    else:\n        print(passes[-1] - sum(passes[:-1]))", "for i in range(int(input())):\n    n = int(input())\n    a = [*map(int, input().split())]\n    if sum(a) == 0:\n        print(0)\n    else:\n        s = max(a) - (sum(a) - max(a))\n        if s <= 0:\n            print(1)\n        else:\n            print(s)", "def task(a):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    i = 0\n    (total, high) = (0, 0)\n    while i < n:\n        total += arr[i]\n        if arr[i] > high:\n            high = arr[i]\n        i += 1\n    if total == 0:\n        print(0)\n        return\n    elif 2 * high <= total:\n        print(1)\n        return\n    else:\n        print(2 * high - total)\n        return\nt = int(input())\nfor a in range(1, t + 1):\n    task(a)", "def task(a):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    total = sum(arr)\n    high = max(arr)\n    if total == 0:\n        print(0)\n        return\n    elif 2 * high <= total:\n        print(1)\n        return\n    else:\n        print(2 * high - total)\n        return\nt = int(input())\nfor a in range(1, t + 1):\n    task(a)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    temp = 2 * max(a) - sum(a)\n    if a.count(0) == n:\n        print(0)\n    elif temp <= 0:\n        print(1)\n    else:\n        print(temp)", "def solv(L):\n    if not sum(L):\n        return 0\n    t = max(L) * 2 - sum(L)\n    return 1 if t <= 0 else t\nfor _ in range(int(input())):\n    input()\n    L = list(map(int, input().split()))\n    print(solv(L))", "def solve(testcase):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    max_ele = max(arr)\n    if max_ele == 0:\n        print(0)\n        return\n    first = 0\n    while first != n - 2 and arr[-1] > arr[-2]:\n        arr[-1] -= arr[first]\n        first += 1\n    ans = 1\n    print(max(1, arr[-1] - arr[-2]))\nn = int(input())\nfor _ in range(n):\n    solve(n)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    m = max(a)\n    if m == 0:\n        print(0)\n    elif 2 * m <= s:\n        print(1)\n    else:\n        print(2 * m - s)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    max1 = max(a)\n    sum1 = sum(a)\n    if sum1 == 0:\n        print(0)\n    elif max1 <= sum1 - max1:\n        print(1)\n    else:\n        print(max1 - (sum1 - max1))", "for _ in range(int(input())):\n    n = input()\n    a = [int(i) for i in input().split()]\n    m = max(a)\n    s = sum(a) - m\n    if s == 0:\n        print(m)\n        continue\n    print(max(1, m - s))", "n = int(input())\nfor i in range(n):\n    input()\n    l = tuple(map(int, input().split()))\n    s = sum(l)\n    m = max(l)\n    if s == 0:\n        print(0)\n    elif 2 * m - s > 0:\n        print(2 * m - s)\n    else:\n        print(1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = sum(l)\n    m = max(l)\n    if s == 0:\n        print(0)\n    elif s < m * 2 - 1:\n        print(2 * m - s)\n    else:\n        print(1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = max(a) * 2 - sum(a)\n    if sum(a) == 0:\n        print(0)\n    elif x < 1:\n        print(1)\n    else:\n        print(x)", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    check = sum(a) - a[-1]\n    if sum(a) == 0:\n        print(0)\n    elif check - a[-1] >= -1:\n        print(1)\n    else:\n        print(a[-1] - check)\nfor i in range(int(input())):\n    solve()", "for i in range(int(input())):\n    input()\n    x = list(map(int, input().split(' ')))\n    x.sort(reverse=True)\n    k = x[0]\n    if sum(x) == 0:\n        print(0)\n    elif sum(x) >= 2 * k:\n        print(1)\n    else:\n        print(2 * k - sum(x))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    c = 0\n    for k in lst:\n        if k > 0:\n            c += 1\n            break\n    if c == 0:\n        print(0)\n    else:\n        su = sum(lst)\n        ele = max(lst)\n        if 2 * ele <= su:\n            print(1)\n        else:\n            print(2 * ele - su)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mx = max(a)\n    mi = min(a)\n    tot = sum(a)\n    if mi == mx == 0:\n        print(0)\n        continue\n    if 2 * mx <= tot:\n        print(1)\n    else:\n        print(2 * mx - tot)", "def task(a):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (total, high) = (0, 0)\n    for i in range(n):\n        total += arr[i]\n        if arr[i] > high:\n            high = arr[i]\n    if total == 0:\n        print(0)\n        return\n    elif 2 * high <= total:\n        print(1)\n        return\n    else:\n        print(2 * high - total)\n        return\nt = int(input())\nfor a in range(1, t + 1):\n    task(a)", "for _ in range(int(input())):\n    n = int(input())\n    v = [int(x) for x in input().split()]\n    mx = max(v)\n    if mx == 0:\n        print(0)\n        continue\n    s = sum(v)\n    s -= mx\n    if mx > s + 1:\n        print(mx - s)\n    else:\n        print(1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if sum(a) == 0:\n        print(0)\n    else:\n        print(max(2 * max(a) - sum(a), 1))", "def sqsum(p):\n    if max(p) == 0:\n        return 0\n    else:\n        m = max(p)\n        s = sum(p)\n        if m <= s - m:\n            return 1\n        else:\n            return 2 * m - s\nt = int(input())\nfor j in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(sqsum(a))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    a.sort(reverse=True)\n    d = a[0] - sum(a[1:])\n    if sum(a) == 0:\n        res = 0\n    elif d < 2:\n        res = 1\n    else:\n        res = d\n    print(res)", "for i in range(int(input())):\n    input()\n    s = list(map(int, input().split()))\n    m = max(s)\n    su = sum(s) - m\n    if sum(s) == 0:\n        print(0)\n    elif m - su <= 1:\n        print(1)\n    else:\n        print(m - su)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = 0\n    m = l[0]\n    for i in l:\n        s += i\n        m = max(m, i)\n    s -= m\n    if s == 0 and m == 0:\n        print(0)\n    elif s >= m:\n        print(1)\n    else:\n        print(m - s)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    x = list(map(int, input().split()))\n    ans = 0 if sum(x) == 0 else max(2 * max(x) - sum(x), 1)\n    print(ans)\n    t -= 1"]