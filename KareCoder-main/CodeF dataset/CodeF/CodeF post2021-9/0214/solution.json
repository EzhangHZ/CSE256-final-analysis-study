["import sys\n\ndef solution():\n    row = '\\n'\n    while row == '\\n':\n        row = sys.stdin.readline()\n    a = [row.strip()]\n    for i in range(7):\n        row = sys.stdin.readline().strip()\n        a.append(row)\n    for i in range(8):\n        if a[i] == 'RRRRRRRR':\n            print('R')\n            return\n    print('B')\n\ndef main():\n    t = int(input())\n    while t:\n        solution()\n        t -= 1\nmain()", "from sys import stdin\nn = int(input())\nlines = stdin.read().split()\na = 0\nfor ele in range(n):\n    for i in range(8):\n        if lines[i + a].count('R') == 8:\n            print('R')\n            break\n    else:\n        print('B')\n    a += 8", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef output_list(l):\n    print(' '.join(list(map(str, l))))\n\nclass Node:\n\n    def __init__(self, i, next):\n        self.i = i\n        self.next = next\n\n    def __str__(self):\n        return str(self.i)\n\ndef test_case():\n    input()\n    rows = [input() for _ in range(8)]\n    for row in rows:\n        if '.' not in row:\n            if 'B' not in row:\n                print('R')\n                return\n    print('B')\nn_cases = inp()\nfor i in range(n_cases):\n    test_case()", "import sys\n\ndef solution():\n    row = '\\n'\n    while row == '\\n':\n        row = sys.stdin.readline()\n    a = [row.strip()]\n    for i in range(7):\n        row = sys.stdin.readline().strip()\n        a.append(row)\n    for i in range(8):\n        if a[i] == 'RRRRRRRR':\n            print('R')\n            return\n    print('B')\n\ndef main():\n    t = int(input())\n    while t:\n        solution()\n        t -= 1\nmain()", "import sys\ninput = sys.stdin.readline\noutput = sys.stdout.write\nT = int(input())\na = input().split()\nfor t in range(T):\n    f = 'B'\n    while len(a) == 0:\n        a = input().split()\n    for i in list(range(8)):\n        if not 'B' in a[0]:\n            f = 'R'\n        a = input().split()\n    output(f + '\\n')", "import sys\nfrom collections import Counter, defaultdict, OrderedDict, deque\nfrom itertools import permutations, combinations\nfrom functools import lru_cache\ninput = lambda : sys.stdin.readline().rstrip()\nii = lambda : int(input())\nmi = lambda : map(int, input().split())\nli = lambda : list(mi())\ninf = 2 ** 63 - 1\nmod = 10 ** 9 + 7\nT = int(input())\nfor _ in range(T):\n    input()\n    blah = []\n    flag = False\n    for _ in range(8):\n        row = input()\n        if row == 'RRRRRRRR':\n            flag = True\n        blah.append(row)\n    if flag:\n        print('R')\n    else:\n        print('B')", "import sys\nfrom collections import Counter, defaultdict, OrderedDict, deque\nfrom itertools import permutations, combinations\nfrom functools import lru_cache\ninput = lambda : sys.stdin.readline().rstrip()\nii = lambda : int(input())\nmi = lambda : map(int, input().split())\nli = lambda : list(mi())\ninf = 2 ** 63 - 1\nmod = 10 ** 9 + 7\n\ndef solve():\n    input()\n    out = False\n    for i in range(8):\n        x = input()\n        if x == 'RRRRRRRR':\n            out = True\n    return 'R' if out else 'B'\nfor _ in range(ii()):\n    print(solve())", "import sys\nfrom heapq import heapify, heappush, heappop\nfrom math import ceil, floor, sqrt, gcd\nfrom collections import defaultdict, deque\ninput = lambda : sys.stdin.readline().rstrip('\\r\\n')\n\ndef int_arr():\n    return list(map(int, input().split()))\n\ndef str_arr():\n    return list(map(str, input().split()))\n\ndef get_str():\n    return map(str, input().split())\n\ndef get_int():\n    return map(int, input().split())\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\nmod = 1000000007\n\ndef solve():\n    input()\n    tmp = 'B'\n    for i in range(8):\n        s = input()\n        if s == 'R' * 8:\n            tmp = 'R'\n    print(tmp)\nT = 1\nT = int(input())\nwhile T:\n    solve()\n    T -= 1", "def color():\n    input()\n    res = 'B'\n    for i in range(8):\n        s = input()\n        if s == 'RRRRRRRR':\n            res = 'R'\n    return res\nn = int(input())\nres = []\nfor i in range(n):\n    res.append(color())\nfor i in res:\n    print(i)", "import sys\nfor i in range(int(sys.stdin.readline())):\n    ls = []\n    buf = sys.stdin.readline()\n    for j in range(8):\n        ls.append(sys.stdin.readline().strip())\n    f = False\n    for j in range(8):\n        if ls[j] == 'R' * 8:\n            print('R')\n            f = True\n            break\n    if f:\n        continue\n    for j in range(8):\n        s = ls[0][j]\n        for k in range(1, 8):\n            if ls[k][j] != s:\n                f = True\n                break\n        if f:\n            f = False\n            continue\n        if s != 'B':\n            f = False\n            continue\n        print(s)\n        break", "N = int(input())\nh = []\nfor i in range(N):\n    k = 1\n    d = input()\n    for i in range(8):\n        d = input()\n        if d == 'RRRRRRRR':\n            k = 0\n    if k == 1:\n        h.append('B')\n    else:\n        h.append('R')\nfor t in h:\n    print(t)", "n = int(input())\nlst_ans = []\nfor i in range(n):\n    str_0 = input()\n    str_1 = input()\n    str_2 = input()\n    str_3 = input()\n    str_4 = input()\n    str_5 = input()\n    str_6 = input()\n    str_7 = input()\n    str_8 = input()\n    if str_1 == 'RRRRRRRR' or str_2 == 'RRRRRRRR' or str_3 == 'RRRRRRRR' or (str_4 == 'RRRRRRRR') or (str_5 == 'RRRRRRRR') or (str_6 == 'RRRRRRRR') or (str_7 == 'RRRRRRRR') or (str_8 == 'RRRRRRRR'):\n        lst_ans.append('R')\n    else:\n        lst_ans.append('B')\nfor t in lst_ans:\n    print(t)", "t = int(input())\nans1 = []\nfor _ in range(t):\n    input()\n    arr = []\n    for _ in range(8):\n        s = input()\n        arr.append(s)\n    ans = 'B'\n    for s in arr:\n        if s.count('R') == 8:\n            ans = 'R'\n            break\n    ans1.append(ans)\nfor val in ans1:\n    print(val)", "for _ in range(int(input())):\n    ar = []\n    b____ = input()\n    for i in range(8):\n        w = input()\n        ar.append(w)\n    for i in ar:\n        if i.count('R') == 8:\n            print('R')\n            break\n    else:\n        print('B')", "n = int(input())\nfor Pythonic__Python in range(1):\n    l = []\n    r = 'RRRRRRRR'\n    b = 'BBBBBBBB'\n    rr = ''\n    bb = ''\n    for i in range(n):\n        ll = []\n        for j in range(9):\n            ll.append(input())\n        l.append(ll)\n    for k in range(n):\n        L = l[k][1:]\n        if r in L:\n            print('R')\n        else:\n            print('B')", "(t, r, h, k) = (int(input()), [], [], 'B')\nfor _ in range(t):\n    n = input()\n    for i in range(8):\n        h.append(input())\n    for i in range(8):\n        if h[i] == 'RRRRRRRR':\n            k = 'R'\n    r.append(k)\n    (h, k) = ([], 'B')\nprint(*r, sep='\\n')", "for _ in range(int(input())):\n    abc = input()\n    x = [input() for n in range(8)]\n    print('R' if 8 * 'R' in x else 'B')", "import math\nimport sys\ninput = sys.stdin.readline\nt = int(input())\nfor i in range(t):\n    n = str(input())\n    r = False\n    for j in range(8):\n        l = str(input()).strip()\n        if l == 'RRRRRRRR':\n            r = True\n    if r:\n        print('R')\n    else:\n        print('B')", "t = int(input())\noutputs = []\nfor i in range(t):\n    redRow = False\n    for i in range(9):\n        line = input()\n        if line == 'RRRRRRRR':\n            redRow = True\n    if redRow == True:\n        outputs.append('R')\n    else:\n        outputs.append('B')\nfor output in outputs:\n    print(output)", "t = int(input())\nans = []\nwhile t:\n    flag = True\n    for i in range(9):\n        x = input()\n        if x != '' and x[0] == 'R' and ('B' not in x):\n            flag = False\n    if flag:\n        ans.append('B')\n    else:\n        ans.append('R')\n    t = t - 1\nfor i in ans:\n    print(i)", "t = int(input())\nfor i in range(t):\n    ans = 'B'\n    for j in range(9):\n        if input() == 'R' * 8:\n            ans = 'R'\n    print(ans)", "t = int(input())\nfor i in range(t):\n    ans = 'B'\n    for j in range(9):\n        if input() == 'R' * 8:\n            ans = 'R'\n    print(ans)", "def solve():\n    a = input()\n    r = False\n    i = 0\n    while i < 8:\n        row = input()\n        if row == 'RRRRRRRR':\n            r = True\n        i += 1\n    if r:\n        print('R')\n    else:\n        print('B')\nt = int(input())\nwhile t > 0:\n    solve()\n    t -= 1", "t = int(input())\nl = []\nfor i in range(t):\n    input()\n    a = 'B'\n    for i in range(8):\n        if input() == 'RRRRRRRR':\n            a = 'R'\n    l.append(a)\nprint()\nfor i in l:\n    print(i)", "for _ in range(int(input())):\n    c = 'B'\n    for i in range(9):\n        if input() == 'R' * 8:\n            c = 'R'\n    print(c)", "def stripes():\n    input()\n    output = 'B'\n    for _ in range(8):\n        line = input()\n        if line == 'RRRRRRRR':\n            output = 'R'\n    return output\noutputs = []\nfor _ in range(int(input())):\n    outputs.append(stripes())\nfor i in outputs:\n    print(i)", "a = int(input())\no = []\nfor i in range(a):\n    q = []\n    w = input()\n    for j in range(8):\n        q.append(input())\n    o.append('R' if 'RRRRRRRR' in q else 'B')\nprint('\\n'.join(o))", "t = int(input())\nn = []\nfor x in range(t):\n    is_R = False\n    j = input()\n    l = []\n    for y in range(8):\n        m = input()\n        if m == 'RRRRRRRR':\n            is_R = True\n    if is_R:\n        n.append('R')\n    else:\n        n.append('B')\nprint()\nfor r in n:\n    print(r)", "import sys\ninput = sys.stdin.readline\n\ndef f():\n    for i in range(8):\n        origin = mapp[i][0]\n        if origin != 'R':\n            continue\n        flag = True\n        for j in range(8):\n            if mapp[i][j] != origin:\n                flag = False\n                break\n        if flag:\n            return origin\n    for j in range(8):\n        origin = mapp[0][j]\n        if origin != 'B':\n            continue\n        flag = True\n        for i in range(8):\n            if mapp[i][j] != origin:\n                flag = False\n                break\n        if flag:\n            return origin\nt = int(input())\nfor _ in range(t):\n    input()\n    mapp = [input().rstrip() for _ in range(8)]\n    print(f())", "def letra_superior(quad):\n    filaVacia = False\n    rfila = True\n    ultimaLetra = 'R'\n    f = 0\n    c = 0\n    while 1:\n        if rfila:\n            fila = quad[f]\n            for i in range(8):\n                if fila[i] == 'B':\n                    c = i\n                    rfila = False\n                    ultimaLetra = 'B'\n                    continue\n            if ultimaLetra == 'R':\n                return ultimaLetra\n        else:\n            for i in range(8):\n                if quad[i][c] == 'R':\n                    f = i\n                    rfila = True\n                    ultimaLetra = 'R'\n                    continue\n            if ultimaLetra == 'B':\n                return ultimaLetra\n    return ultimaLetra\nr = []\nt = int(input())\nfor i in range(t):\n    quad = []\n    input()\n    for i in range(8):\n        quad.append(input())\n    letra = letra_superior(quad)\n    r.append(letra)\nfor i in r:\n    print(i)", "def solve(lines):\n    for line in lines:\n        for c in line:\n            if c != 'R':\n                break\n        else:\n            return 'R'\n    return 'B'\noutputs = []\nt = int(input())\nfor _ in range(t):\n    input()\n    outputs.append(solve([input().strip() for _ in range(8)]))\nfor output in outputs:\n    print(output)", "t = int(input())\nresult = []\nfor i in range(t):\n    flag = 0\n    for j in range(9):\n        if input() == 'RRRRRRRR' and flag == 0:\n            result.append('R')\n            flag = 1\n    if flag == 0:\n        result.append('B')\nfor i in result:\n    print(i)", "t = int(input())\nfor i in range(t):\n    ans = 'B'\n    for k in range(9):\n        if input() == 'RRRRRRRR':\n            ans = 'R'\n    print(ans)", "def f(*l):\n    z = 0\n    for i in l:\n        if i[0] == 'R':\n            if 'B' not in i:\n                z = 1\n                break\n    if z == 0:\n        print('B')\n    else:\n        print('R')\nfor t in range(int(input())):\n    inp = input()\n    inp1 = input()\n    inp2 = input()\n    inp3 = input()\n    inp4 = input()\n    inp5 = input()\n    inp6 = input()\n    inp7 = input()\n    inp8 = input()\n    f(inp1, inp2, inp3, inp4, inp5, inp6, inp7, inp8)", "t = int(input())\nfor i in range(t):\n    a = 'B'\n    B = input()\n    for j in range(0, 8):\n        if input() == 'RRRRRRRR':\n            a = 'R'\n            continue\n    print(a)", "t = int(input())\nwhile t:\n    flag = 1\n    for i in range(9):\n        s = input()\n        if s == 'RRRRRRRR':\n            flag = 0\n    if flag:\n        print('B')\n    else:\n        print('R')\n    t = t - 1", "t = int(input())\nfor i in range(t):\n    f = 0\n    input()\n    for j in range(8):\n        a = input()\n        if a == 'R' * 8:\n            f = 1\n    if f == 0:\n        print('B')\n    else:\n        print('R')", "for _ in range(int(input())):\n    q = 'B'\n    input()\n    for j in range(0, 8):\n        if input() == 'RRRRRRRR':\n            q = 'R'\n    print(q)", "t = int(input())\nfor i in range(t):\n    empty1 = input()\n    l1 = input()\n    l2 = input()\n    l3 = input()\n    l4 = input()\n    l5 = input()\n    l6 = input()\n    l7 = input()\n    l8 = input()\n    flag = False\n    for j in range(len(l1)):\n        if l1[j] == 'B' and l2[j] == 'B' and (l3[j] == 'B') and (l4[j] == 'B') and (l5[j] == 'B') and (l6[j] == 'B') and (l7[j] == 'B') and (l8[j] == 'B'):\n            flag = True\n            break\n    if flag:\n        print('B')\n    else:\n        print('R')", "for _ in range(int(input())):\n    input()\n    letter = '.'\n    for _ in range(8):\n        s = input()\n        if s == 'RRRRRRRR':\n            letter = 'R'\n    if letter == 'R':\n        print('R')\n    else:\n        print('B')", "t = int(input())\nfor i in range(t):\n    input()\n    ans = False\n    for j in range(8):\n        lst = input()\n        if lst.count('R') == 8:\n            ans = True\n    if ans:\n        print('R')\n    else:\n        print('B')", "for _ in range(int(input())):\n    input()\n    ans = 'B'\n    for i in range(8):\n        row = input()\n        if row.find('B') == -1:\n            ans = 'R'\n    print(ans)", "for i in range(int(input())):\n    input()\n    ans = 'B'\n    for j in range(8):\n        line = input()\n        if 'R' in line and 'B' not in line:\n            ans = 'R'\n    print(ans)", "def get_last_color(grid):\n    ans = 'B'\n    for row in grid:\n        if row == 'R' * 8:\n            ans = 'R'\n    return ans\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        input()\n        grid = [input() for _ in range(8)]\n        last_color = get_last_color(grid)\n        print(last_color)\nmain()", "t = int(input())\nfor z in range(t):\n    m = 0\n    for i in range(9):\n        s = input()\n        if s == 'RRRRRRRR':\n            m += 1\n    if m == 0:\n        print('B')\n    else:\n        print('R')", "def main():\n    t = int(input())\n    for _ in range(t):\n        answ = 'B'\n        for i in range(9):\n            s = input()\n            if s == 'RRRRRRRR':\n                answ = 'R'\n        print(answ)\nmain()", "for _ in range(int(input())):\n    arr = []\n    count = 0\n    for j in range(9):\n        arr.append(input())\n    for i in range(9):\n        if arr[i] == 'RRRRRRRR':\n            print('R')\n            break\n        else:\n            count += 1\n            continue\n    if count == 9:\n        print('B')", "n = int(input())\nans = []\nfor i in range(n):\n    input()\n    m = [input() for _ in range(8)]\n    for x in range(8):\n        col = m[x][0]\n        if col == 'R':\n            for y in range(8):\n                if m[x][y] != col:\n                    break\n            else:\n                ans.append(col)\n                break\n    else:\n        for y in range(8):\n            col = m[0][y]\n            if col == 'B':\n                for x in range(8):\n                    if m[x][y] != col:\n                        break\n                else:\n                    ans.append(col)\n                    break\nfor an in ans:\n    print(an)", "t = int(input())\nfor test in range(t):\n    found = False\n    for i in range(9):\n        line = input()\n        if line == 'RRRRRRRR':\n            found = True\n    if found:\n        print('R')\n    else:\n        print('B')", "t = int(input())\nfor i in range(t):\n    m = []\n    for j in range(9):\n        e = input()\n        m.append(e)\n    f = 0\n    for j in m:\n        if j == 'RRRRRRRR':\n            f = 1\n    if f == 1:\n        print('R')\n    else:\n        print('B')", "n = int(input())\nfor i in range(n):\n    r = []\n    _ = input()\n    for w in range(8):\n        w = input()\n        r.append(w)\n    x = 'B'\n    for i in r:\n        if i == 'RRRRRRRR':\n            x = 'R'\n            break\n    print(x)", "for _ in range(int(input())):\n    a = input()\n    a = []\n    for _ in range(8):\n        a.append(input())\n    out = 'B'\n    for i in a:\n        if i == 'RRRRRRRR':\n            out = 'R'\n    print(out)", "t = int(input())\nfor i in range(t):\n    input()\n    x = [input()[:8] for _ in range(8)]\n    if 'RRRRRRRR' in x:\n        print('R')\n    else:\n        print('B')", "for _ in range(int(input())):\n    a = [input() for i in range(9)]\n    ans = ''\n    for i in a:\n        if 'B' in i and 'R' not in i:\n            ans = 'B'\n        elif 'R' in i and 'B' not in i:\n            ans = 'R'\n            break\n        else:\n            ans = 'B'\n    print(ans)", "for _ in range(int(input())):\n    matrix = []\n    for i in range(9):\n        matrix.append(input())\n    r = 0\n    for i in matrix:\n        if i == 'RRRRRRRR':\n            r = 1\n    if r == 1:\n        print('R')\n    else:\n        print('B')", "t = int(input())\nfor i in range(t):\n    color = 'B'\n    for j in range(9):\n        l = input()\n        if l:\n            if l == 'RRRRRRRR':\n                color = 'R'\n        else:\n            continue\n    print(color)", "t = int(input(''))\nresults = []\nfor i in range(t):\n    blank = input('')\n    flag = 'Blue'\n    for i in range(8):\n        line = input('')\n        if line.count('R') == 8:\n            flag = 'Red'\n    if flag == 'Blue':\n        results.append('B')\n    else:\n        results.append('R')\nfor i in range(t):\n    print(results[i])", "t = int(input())\nfor k in range(t):\n    R_flag = False\n    input()\n    for m in range(8):\n        line = input()\n        if '.' not in line and 'B' not in line:\n            R_flag = True\n    if R_flag:\n        print('R')\n    else:\n        print('B')", "n = int(input())\nfor i in range(n):\n    _ = input()\n    ans = 'B'\n    for j in range(8):\n        s = input()\n        if s.count('R') == 8:\n            ans = 'R'\n    print(ans)", "s = []\nfor t in range(int(input())):\n    r = 'RRRRRRRR'\n    d = '........'\n    input()\n    for i in range(8):\n        s.append(input())\n    res = ''\n    for i in s:\n        if i == r:\n            res = 'R'\n    if res == '':\n        res = 'B'\n    print(res)\n    s.clear()", "def color(x):\n    re = 0\n    for n in range(8):\n        row = x[n]\n        if '.' in row or 'B' in row:\n            continue\n        else:\n            print('R')\n            re = 1\n            break\n    if not re:\n        print('B')\nt = int(input())\nfor i in range(t):\n    x = []\n    lines = 0\n    while lines < 8:\n        in_line = input()\n        if '.' in in_line or 'R' in in_line or 'B' in in_line:\n            x.append(in_line)\n            lines += 1\n    color(x)", "for _ in range(int(input())):\n    s = 'B'\n    input()\n    for j in range(0, 8):\n        if input() == 'RRRRRRRR':\n            s = 'R'\n    print(s)", "t = int(input())\nfor _ in range(t):\n    s = 'B'\n    input()\n    p = 'RRRRRRRR'\n    for _ in range(8):\n        ans = input()\n        if ans == p:\n            s = 'R'\n    print(s)", "t = int(input())\nfor k in range(t):\n    horiz = []\n    empty = input()\n    for i in range(8):\n        app_horiz = input()\n        horiz.append(app_horiz)\n    try:\n        if horiz.index('RRRRRRRR') >= 0:\n            print('R')\n    except ValueError:\n        print('B')", "def fun1(l, start):\n    for r in l:\n        st = set(r)\n        if len(st) == 1 and 'R' in st:\n            return 'R'\n    return 'B'\nt = int(input())\nres = []\nfor i in range(t):\n    st = input()\n    l = []\n    for i in range(8):\n        l1 = list(input())\n        l.append(l1)\n    res.append(fun1(l, 0))\nfor i in res:\n    print(i)", "n = input()\nn = int(n)\nx = []\nfor i in range(n):\n    res = 'B'\n    _ = input()\n    for j in range(8):\n        str = input()\n        if str == len(str) * 'R':\n            res = 'R'\n    print(res)", "t = int(input())\nfor _ in range(t):\n    n = 8\n    s = 'B'\n    input()\n    a = 'RRRRRRRR'\n    for j in range(n):\n        x = input()\n        if x == a:\n            s = 'R'\n    print(s)", "def checkWithTranspse(a):\n    for i in range(8):\n        b = ''\n        for j in range(8):\n            b += a[j][i]\n        if b == 'BBBBBBBB':\n            return 'B'\nt = int(input())\nfor i in range(t):\n    n = input()\n    a = []\n    flag = False\n    for i in range(8):\n        a.append(input())\n    for x in a:\n        if x == 'RRRRRRRR':\n            print('R')\n            flag = True\n            break\n    if not flag:\n        print(checkWithTranspse(a))", "for _ in range(int(input())):\n    k = 'B'\n    input()\n    for i in range(0, 8):\n        if input() == 'RRRRRRRR':\n            k = 'R'\n    print(k)", "for _ in range(int(input())):\n    s = 'B'\n    input()\n    for j in range(0, 8):\n        if input() == 'RRRRRRRR':\n            s = 'R'\n    print(s)", "t = int(input())\nfor t_i in range(t):\n    bs = input()\n    row_complete = False\n    for i in range(8):\n        r = input()\n        if r == 'RRRRRRRR':\n            row_complete = True\n    print('R' if row_complete else 'B')", "for _ in range(int(input())):\n    b = 'B'\n    input()\n    for j in range(0, 8):\n        if input() == 'RRRRRRRR':\n            b = 'R'\n    print(b)", "for _ in range(int(input())):\n    a = 'B'\n    input()\n    for j in range(0, 8):\n        if input() == 'RRRRRRRR':\n            a = 'R'\n    print(a)", "t = int(input())\nfor x in range(t):\n    empt = input()\n    (flg, smr, smb) = (0, 0, 0)\n    for i in range(8):\n        l = input()\n        if flg == 0 and l.count('R') == 8:\n            print('R')\n            flg = 1\n    if flg == 0:\n        print('B')", "for _ in range(int(input())):\n    str = 'B'\n    input()\n    for i in range(0, 8):\n        if input() == 'RRRRRRRR':\n            str = 'R'\n    print(str)", "t = int(input())\nfor tc in range(t):\n    input()\n    l = []\n    for i in range(8):\n        l.append(input())\n    if 'RRRRRRRR' in l:\n        print('R')\n    else:\n        print('B')", "t = int(input())\nfor tc in range(t):\n    input()\n    l = []\n    for i in range(8):\n        l.append(input())\n    if 'RRRRRRRR' in l:\n        print('R')\n    else:\n        print('B')", "for _ in range(int(input())):\n    input()\n    s1 = []\n    for i in range(8):\n        s1.append(input())\n    if 'RRRRRRRR' in s1:\n        print('R')\n    else:\n        print('B')", "for _ in range(int(input())):\n    z = 'B'\n    input()\n    for j in range(0, 8):\n        if input() == 'RRRRRRRR':\n            z = 'R'\n    print(z)", "for _ in range(int(input())):\n    t = 'B'\n    input()\n    for i in range(0, 8):\n        if input() == 'RRRRRRRR':\n            t = 'R'\n    print(t)", "for KO in range(int(input())):\n    str = 'B'\n    input()\n    for papa in range(0, 8):\n        if input() == 'RRRRRRRR':\n            str = 'R'\n    print(str)", "t = int(input())\nfor _ in range(t):\n    a = input()\n    s = 'B'\n    for j in range(0, 8):\n        if input() == 'RRRRRRRR':\n            s = 'R'\n    print(s)", "for _ in ' ' * int(input()):\n    _ = input()\n    x = 'B'\n    for _ in ' ' * 8:\n        a = input()\n        if a == 'RRRRRRRR':\n            x = 'R'\n    print(x)", "for _ in ' ' * int(input()):\n    _ = input()\n    x = 'B'\n    for _ in ' ' * 8:\n        a = input()\n        if a == 'RRRRRRRR':\n            x = 'R'\n    print(x)", "for _ in range(int(input())):\n    s = 'B'\n    input()\n    for j in range(0, 8):\n        if input() == 'RRRRRRRR':\n            s = 'R'\n    print(s)", "t = int(input())\nfor _ in range(t):\n    input()\n    flag = False\n    for i in range(8):\n        a = input()\n        if a == 'R' * 8:\n            flag = True\n    if flag:\n        print('R')\n    else:\n        print('B')", "for _ in range(int(input())):\n    n = input()\n    l1 = 'RRRRRRRR'\n    l = [input() for _ in range(8)]\n    print('R' if l1 in l else 'B')", "for _ in range(int(input())):\n    input()\n    found = False\n    for i in range(8):\n        if input().count('R') == 8:\n            found = True\n    print('R' if found else 'B')", "for h in range(int(input())):\n    a = []\n    rr = 'B'\n    input()\n    for i in range(8):\n        a = input()\n        if a == 'R' * 8:\n            rr = 'R'\n    print(rr)", "t = int(input())\nfor _ in range(t):\n    _ = input()\n    arr = [input() for _ in range(8)]\n    res = ''\n    if 'RRRRRRRR' in arr:\n        res = 'R'\n    else:\n        res = 'B'\n    print(res)", "T = int(input())\nfor i in range(T):\n    string = 'B'\n    input()\n    for i in range(0, 8):\n        if input() == 'RRRRRRRR':\n            string = 'R'\n    print(string)", "for _ in range(int(input())):\n    s = 'B'\n    input()\n    for j in range(0, 8):\n        if input() == 'RRRRRRRR':\n            s = 'R'\n    print(s)", "for _ in range(int(input())):\n    s = 'B'\n    input()\n    for i in range(8):\n        if input() == 'RRRRRRRR':\n            s = 'R'\n    print(s)", "for _ in ' ' * int(input()):\n    _ = input()\n    x = 'B'\n    for _ in ' ' * 8:\n        a = input()\n        if a == 'RRRRRRRR':\n            x = 'R'\n    print(x)", "for _ in range(int(input())):\n    abc = input()\n    x = [input() for n in range(8)]\n    print('R' if 8 * 'R' in x else 'B')", "t = int(input())\nfor i in range(t):\n    ans = 'B'\n    for j in range(9):\n        if input() == 'RRRRRRRR':\n            ans = 'R'\n    print(ans)", "n = int(input())\ndata = list((list() for i in range(n)))\nfor i in range(n):\n    x = input()\n    for j in range(8):\n        data[i].append(input())\nfor i in range(n):\n    for r in range(8):\n        rb = True\n        cb = True\n        for c in range(8):\n            if data[i][r][c] != 'R':\n                rb = False\n            if data[i][c][r] != 'B':\n                cb = False\n            if rb == False and cb == False:\n                break\n        if rb:\n            print('R')\n            break\n        elif cb:\n            print('B')\n            break", "t = int(input())\ndata1 = []\nfor i in range(t):\n    empty = input()\n    a = []\n    data = []\n    for j in range(8):\n        d = input()\n        data.append(d)\n    data1.append(data)\nfor i in data1:\n    for j in range(8):\n        if i[j][0] == i[j][1] == i[j][2] == i[j][3] == i[j][4] == i[j][5] == i[j][6] == i[j][7]:\n            if i[j][0] == 'R':\n                print(i[j][0])\n                break\n        if i[0][j] == i[1][j] == i[2][j] == i[3][j] == i[4][j] == i[5][j] == i[6][j] == i[7][j]:\n            if i[0][j] == 'B':\n                print(i[0][j])\n                break", "t = int(input())\nfor i in range(t):\n    s = input()\n    s = ''\n    j = 'B'\n    for i in range(8):\n        k = input()\n        if k.count('B') == 0:\n            j = 'R'\n    print(j)", "r = 8 * 'R'\nfor s in range(int(input())):\n    R = 'B'\n    for n in range(9):\n        m = input()\n        if m == r:\n            R = 'R'\n    print(R)"]