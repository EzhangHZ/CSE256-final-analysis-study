["import math\nfrom typing import Tuple, TypeVar\nINF = float('inf')\nIntOrFloat = TypeVar('IntOrFloat', int, float)\n\ndef ceil(value: IntOrFloat) -> IntOrFloat:\n    if value == INF:\n        return INF\n    return math.ceil(value)\n\ndef break_adjacent_sections(health: Tuple[int]) -> int:\n    minimum = INF\n    for i in range(n - 1):\n        x = max(health[i], health[i + 1])\n        y = min(health[i], health[i + 1])\n        if 2 * y <= x:\n            value = ceil(x / 2)\n        else:\n            value = ceil((x + y) / 3)\n        if value < minimum:\n            minimum = value\n    return minimum\n\ndef break_alternate_sections(health: Tuple[int]) -> int:\n    minimum = INF\n    for i in range(n - 2):\n        value = health[i] + health[i + 2]\n        if value < minimum:\n            minimum = value\n    result = ceil(minimum / 2)\n    return result\n\ndef break_unrelated_sections(health: Tuple[int]) -> int:\n    health = sorted(health)\n    result = ceil(health[0] / 2) + ceil(health[1] / 2)\n    return result\nn = int(input())\nhealth = tuple(map(int, input().split()))\nprint(min(break_adjacent_sections(health), break_alternate_sections(health), break_unrelated_sections(health)))", "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = [0] * (n - 1)\n    ans_ = [0] * (n - 2)\n    for i in range(n - 1):\n        (x1, x2) = (a[i], a[i + 1])\n        s = x1 + x2\n        min_ = (s + 2) // 3\n        (x1, x2) = (max(x1, x2), min(x1, x2))\n        if x2 * 2 >= x1:\n            ans[i] = min_\n        else:\n            ans[i] = (x1 + 1) // 2\n    for i in range(n - 2):\n        (x1, x2) = (a[i], a[i + 2])\n        (x1, x2) = (max(x1, x2), min(x1, x2))\n        delta = x1 - x2\n        ans_[i] = x2 + (delta + 1) // 2\n    (min_1, min_2) = (10 ** 9, 10 ** 9)\n    for i in a:\n        if i < min_1:\n            min_2 = min_1\n            min_1 = i\n        elif i < min_2:\n            min_2 = i\n    answer = (min_1 + 1) // 2 + (min_2 + 1) // 2\n    for i in ans:\n        if i < answer:\n            answer = i\n    for i in ans_:\n        if i < answer:\n            answer = i\n    print(answer)\nmain()", "from collections import Counter, deque\nimport math\nfrom random import randint\nfrom bisect import bisect\nimport sys\nimport re\nMOD = 10 ** 9 + 7\nMAX = sys.maxsize\nMIN = -sys.maxsize\n\nclass get:\n\n    def int():\n        return list(map(int, input().split()))\n\n    def str():\n        return input().split()\n\n    def float():\n        return list(map(float, input().split()))\n\n    def map():\n        return map(int, input().split())\n\ndef sqrt(x):\n    return int(math.sqrt(x)) + 1\n\ndef gcd(*args):\n    result = args[0]\n    for item in args:\n        result = math.gcd(result, item)\n    return result\n\ndef LCM(a, b):\n    return a * b // math.gcd(a, b)\n\ndef isPrime(n):\n    if n == 1:\n        return False\n    for i in range(2, sqrt(n)):\n        if n % i == 0:\n            return False\n    return True\n\ndef solve():\n    n = int(input())\n    arr = get.int()\n    ans = MAX\n    for i in range(0, n - 2):\n        ans = min(ans, (arr[i] + arr[i + 2] + 1) // 2)\n    for i in range(n - 1):\n        (a, b) = (min(arr[i], arr[i + 1]), max(arr[i], arr[i + 1]))\n        if a <= b / 2:\n            ans = min(ans, (b + 1) // 2)\n        else:\n            ans = min(ans, math.ceil((a + b) / 3))\n    arr.sort()\n    ans = min(ans, (arr[0] + 1) // 2 + (arr[1] + 1) // 2)\n    print(ans)\nsolve()", "def solve():\n    n = int(input())\n    l = list(map(int, input().split()))\n    mn_ans = l[0] + l[1]\n    for i in range(1, n - 1):\n        (x, y) = (l[i - 1], l[i + 1])\n        if x < y:\n            t = x\n            x = y\n            y = t\n        mn_ans = min(mn_ans, y + (x - y + 1) // 2)\n    for i in range(0, n - 1):\n        curr = 0\n        (x, y) = (l[i], l[i + 1])\n        if x < y:\n            t = x\n            x = y\n            y = t\n        cnt = min(x - y, (x + 1) // 2)\n        curr += cnt\n        x -= 2 * cnt\n        y -= cnt\n        if x > 0 and y > 0:\n            curr += (x + y + 2) // 3\n        mn_ans = min(mn_ans, curr)\n    l.sort()\n    mn_ans = min(mn_ans, (l[0] + 1) // 2 + (l[1] + 1) // 2)\n    print(mn_ans)\nt = 1\nwhile t > 0:\n    solve()\n    t -= 1", "n = int(input())\nA = list(map(int, input().split()))\nS = sorted(A)\nANS = (S[0] + 1) // 2 + (S[1] + 1) // 2\nfor i in range(n - 2):\n    a = A[i]\n    b = A[i + 2]\n    if a % 2 == 1 and b % 2 == 1:\n        ANS = min(ANS, a // 2 + b // 2 + 1)\nfor i in range(n - 1):\n    a = A[i]\n    b = A[i + 1]\n    if a > b:\n        (a, b) = (b, a)\n    if b >= 2 * a:\n        ANS = min(ANS, (b + 1) // 2)\n    else:\n        k = b - a\n        a -= k\n        b -= 2 * k\n        rest = a % 3\n        ANS = min(ANS, k + a // 3 * 2 + rest)\nprint(ANS)", "def resi():\n    n = int(input())\n    a = list(map(int, input().split()))\n    (min1, min2) = (10000001, 10000001)\n    for i in range(n):\n        if a[i] <= min1:\n            min2 = min1\n            min1 = a[i]\n        elif a[i] <= min2:\n            min2 = a[i]\n    res1 = (min1 + 1) // 2 + (min2 + 1) // 2\n    res2 = 10000001\n    for i in range(n - 1):\n        x = min(a[i], a[i + 1])\n        y = max(a[i], a[i + 1])\n        if y >= 2 * x:\n            if res2 > (y + 1) // 2:\n                res2 = (y + 1) // 2\n        elif res2 > y - x + (2 * (2 * x - y) + 2) // 3:\n            res2 = y - x + (2 * (2 * x - y) + 2) // 3\n    res3 = 10000001\n    for i in range(1, n - 1):\n        if res3 > min(a[i - 1], a[i + 1]) + (max(a[i - 1], a[i + 1]) - min(a[i - 1], a[i + 1]) + 1) // 2:\n            res3 = min(a[i - 1], a[i + 1]) + (max(a[i - 1], a[i + 1]) - min(a[i - 1], a[i + 1]) + 1) // 2\n    print(min(res1, res2, res3))\nresi()", "n = int(input())\nA = list(map(int, input().split()))\nS = sorted(A)\nANS = (S[0] + 1) // 2 + (S[1] + 1) // 2\nfor i in range(n - 2):\n    a = A[i]\n    b = A[i + 2]\n    if a % 2 == 1 and b % 2 == 1:\n        ANS = min(ANS, a // 2 + b // 2 + 1)\nfor i in range(n - 1):\n    a = A[i]\n    b = A[i + 1]\n    if a > b:\n        (a, b) = (b, a)\n    if b >= 2 * a:\n        ANS = min(ANS, (b + 1) // 2)\n    else:\n        k = b - a\n        a -= k\n        b -= 2 * k\n        rest = a % 3\n        ANS = min(ANS, k + a // 3 * 2 + rest)\nprint(ANS)", "import sys\nfrom math import ceil\ninput = sys.stdin.readline\nfor _ in range(1):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    brr = sorted(arr)\n    cand1 = ceil(brr[0] / 2) + ceil(brr[1] / 2)\n    cand2 = 1000000000000\n    for i in range(n - 1):\n        (a, b) = (arr[i], arr[i + 1])\n        cand2 = min(cand2, max(ceil((a + b) / 3), ceil(max(a, b) / 2)))\n    cand3 = 1000000000000\n    for i in range(n - 2):\n        (a, b) = (arr[i], arr[i + 2])\n        cand3 = min(cand3, a + ceil((b - a) / 2))\n    print(min(cand1, cand2, cand3))", "from math import ceil\nn = int(input())\narr = list(map(int, input().split()))\nwyn = 10 ** 12\nfor x in range(1, n - 1):\n    if arr[x - 1] % 2 == 1 and arr[x + 1] % 2 == 1:\n        m = min(arr[x - 1], arr[x + 1])\n        tmp_wyn = m + (max(arr[x - 1], arr[x + 1]) - m) // 2\n    else:\n        tmp_wyn = max(arr[x - 1], arr[x + 1])\n    if tmp_wyn < wyn:\n        wyn = tmp_wyn\nfor x in range(0, n - 1):\n    m1 = max(arr[x], arr[x + 1])\n    m2 = min(arr[x], arr[x + 1])\n    mc = ceil(m1 / 2)\n    if m2 <= mc:\n        if mc < wyn:\n            wyn = mc\n    elif ceil((arr[x] + arr[x + 1]) / 3) < wyn:\n        wyn = ceil((arr[x] + arr[x + 1]) / 3)\nmina = 10 ** 9\nminb = 10 ** 9\nfor x in arr:\n    if x <= mina:\n        minb = mina\n        mina = x\n    elif x < minb:\n        minb = x\nif ceil(mina / 2) + ceil(minb / 2) < wyn:\n    wyn = ceil(mina / 2) + ceil(minb / 2)\nprint(wyn)", "from math import ceil\nn = int(input())\nl = list(map(int, input().split()))\nans = float('inf')\n(f, s) = (float('inf'), float('inf'))\nfor num in l:\n    if num < f:\n        s = f\n        f = num\n    elif num < s:\n        s = num\nans = min(ceil(f / 2) + ceil(s / 2), ans)\nfor i in range(n - 2):\n    ans = min(ans, ceil((l[i] + l[i + 2]) / 2))\nfor i in range(n - 1):\n    x = max(l[i], l[i + 1])\n    y = min(l[i], l[i + 1])\n    if 2 * y <= x:\n        ans = min(ans, ceil(x / 2))\n    else:\n        ans = min(ans, x - y + ceil((4 * y - 2 * x) / 3))\nprint(ans)", "import math\nn = int(input())\ns = list((int(i) for i in input().split()))\nmin1 = 10000000\nfor i in range(n - 1):\n    (a, b) = (s[i], s[i + 1]) if s[i] < s[i + 1] else (s[i + 1], s[i])\n    if b > a * 2:\n        min1 = min(min1, math.ceil(b / 2))\n    else:\n        min1 = min(min1, math.ceil((a + b) / 3))\nfor i in range(n - 2):\n    (a, b) = (s[i], s[i + 2]) if s[i] < s[i + 2] else (s[i + 2], s[i])\n    min1 = min(min1, math.ceil(a // 2 + b // 2 + (0 if a % 2 == 0 and b % 2 == 0 else 1)))\nmin2 = math.ceil(min(s) / 2)\ns.remove(min(s))\nmin3 = math.ceil(min(s) / 2)\nmin1 = min(min1, min2 + min3)\nprint(min1)", "n = int(input())\na = list(map(int, input().split()))\nans1 = 10000000\nfor i in range(n - 1):\n    if max(a[i], a[i + 1]) >= 2 * min(a[i], a[i + 1]):\n        curr = max(a[i] + 1, a[i + 1] + 1) // 2\n    else:\n        curr = (a[i] + a[i + 1] + 2) // 3\n    if curr < ans1:\n        ans1 = curr\nans2 = 10000000\nfor i in range(1, n - 1):\n    x = min(a[i - 1], a[i + 1])\n    y = max(a[i - 1], a[i + 1])\n    curr = x + (y - x + 1) // 2\n    if curr < ans2:\n        ans2 = curr\na.sort()\nans3 = (a[0] + 1) // 2 + (a[1] + 1) // 2\nprint(min(ans1, ans2, ans3))", "from math import ceil\nn = int(input())\n(*a,) = map(int, input().split())\ns = sorted(a)\nanswer = ceil(s[0] / 2) + ceil(s[1] / 2)\nfor i in range(n - 2):\n    x = a[i]\n    y = a[i + 2]\n    if x > y:\n        (x, y) = (y, x)\n    res = x\n    res += ceil((y - x) / 2)\n    answer = min(answer, res)\nfor i in range(n - 1):\n    x = a[i]\n    y = a[i + 1]\n    if x > y:\n        (x, y) = (y, x)\n    if y >= x * 2:\n        answer = min(answer, ceil(y / 2))\n    else:\n        res = y - x\n        x -= res\n        y -= 2 * res\n        z = x % 3\n        answer = min(answer, res + z + x // 3 * 2)\nprint(answer)", "INT_MAX = 9999999999\nn = int(input())\narr = list(map(int, input().split()))\nval1 = INT_MAX\nval2 = INT_MAX\nfor i in range(1, n):\n    if i < n - 1:\n        x = arr[i - 1] + arr[i + 1]\n        if x % 2:\n            x += 1\n        val2 = min(val2, x // 2)\n    x = max(arr[i], arr[i - 1])\n    y = min(arr[i], arr[i - 1])\n    if 2 * y < x:\n        if x % 2:\n            x += 1\n        val2 = min(val2, x // 2)\n    else:\n        a = x - y\n        b = 2 * y - x\n        if 2 * b % 3:\n            a += 1\n        a += 2 * b // 3\n        val2 = min(a, val2)\nf_val = min(val1, val2)\nf2 = min(arr)\narr.remove(min(arr))\nf1 = min(arr)\nf = f2 // 2\nif f2 % 2:\n    f += 1\nf += f1 // 2\nif f1 % 2:\n    f += 1\nprint(min(f, f_val))", "from math import ceil\nn = int(input())\na = [int(i) for i in input().split()]\nb = sorted(a)\nans = ceil(b[0] / 2) + ceil(b[1] / 2)\nfor i in range(n - 1):\n    (target1, target2) = sorted(a[i:i + 2])\n    if target2 >= target1 * 2:\n        shot = ceil(target2 / 2)\n    else:\n        dif = target2 - target1\n        target1 -= dif\n        target2 -= dif * 2\n        shot = dif + ceil((target1 + target2) / 3)\n    ans = min(ans, shot)\nfor i in range(n - 2):\n    (target1, target2) = (a[i], a[i + 2])\n    shot = ceil((target1 + target2) / 2)\n    ans = min(ans, shot)\nprint(ans)", "import math\nn = int(input())\nlst = [10 ** 6 + 1] + list(map(int, input().split())) + [10 ** 6 + 1]\nr = 10 ** 9\nmin1 = 10 ** 9\nmin2 = 10 ** 9\nfor i in range(1, n + 1):\n    mn = min(lst[i - 1], lst[i + 1])\n    mx = max(lst[i - 1], lst[i + 1])\n    k = math.ceil((mx - mn) / 2) + mn\n    if k < r:\n        r = k\n    mx = max(lst[i], lst[i + 1])\n    mn = min(lst[i], lst[i + 1])\n    if mx >= mn * 2:\n        k = math.ceil(mx / 2)\n        if k < r:\n            r = k\n    else:\n        k = mx - mn\n        mn -= k\n        k += math.ceil(mn * 2 / 3)\n        if k < r:\n            r = k\n    if min1 >= min2 and lst[i] < min1:\n        min1 = lst[i]\n    elif min2 >= min1 and lst[i] < min2:\n        min2 = lst[i]\nk = math.ceil(min1 / 2) + math.ceil(min2 / 2)\nif k < r:\n    r = k\nprint(r)", "n = int(input())\nli = [int(i) for i in input().split()]\nans = 10000000000\nfor i in range(n - 1):\n    cur = 0\n    x = li[i]\n    y = li[i + 1]\n    if x < y:\n        x = li[i + 1]\n        y = li[i]\n    cnt = min(x - y, (x + 1) // 2)\n    cur += cnt\n    x -= 2 * cnt\n    y -= cnt\n    if x > 0 and y > 0:\n        cur += (x + y + 2) // 3\n    ans = min(ans, cur)\nfor i in range(n - 2):\n    x = li[i]\n    y = li[i + 2]\n    if x < y:\n        x = li[i + 2]\n        y = li[i]\n    cnt = (x - y + 1) // 2\n    ans = min(ans, cnt + y)\nli.sort()\nans = min(ans, (li[0] + 1) // 2 + (li[1] + 1) // 2)\nprint(ans)", "import math\nn = int(input())\nq = list(map(int, input().split()))\nsumm = 9876543212345678987654321\nfor i in range(n - 1):\n    a = min(q[i], q[i + 1])\n    b = max(q[i], q[i + 1])\n    if b > 2 * a:\n        summ = min(summ, math.ceil(b / 2))\n    else:\n        summ = min(summ, math.ceil((a + b) / 3))\nfor i in range(n - 2):\n    a = min(q[i], q[i + 2])\n    b = max(q[i], q[i + 2])\n    x = a\n    x = x + math.ceil((b - a) / 2)\n    summ = min(summ, x)\nq.sort()\nsumm = min(summ, math.ceil(q[0] / 2) + math.ceil(q[1] / 2))\nprint(summ)", "import math\nn = int(input())\nq = list(map(int, input().split()))\nsumm = 9876543212345678987654321\nfor i in range(n - 1):\n    a = min(q[i], q[i + 1])\n    b = max(q[i], q[i + 1])\n    if b > 2 * a:\n        summ = min(summ, math.ceil(b / 2))\n    else:\n        summ = min(summ, math.ceil((a + b) / 3))\nfor i in range(n - 2):\n    a = min(q[i], q[i + 2])\n    b = max(q[i], q[i + 2])\n    x = a\n    x = x + math.ceil((b - a) / 2)\n    summ = min(summ, x)\nq.sort()\nsumm = min(summ, math.ceil(q[0] / 2) + math.ceil(q[1] / 2))\nprint(summ)", "import math\nkvs = int(input())\nq = list(map(int, input().split()))\ns = 9876543212345678987654321\nfor i in range(kvs - 1):\n    anil = min(q[i], q[i + 1])\n    barre = max(q[i], q[i + 1])\n    if barre > 2 * anil:\n        s = min(s, math.ceil(barre / 2))\n    else:\n        s = min(s, math.ceil((anil + barre) / 3))\nfor i in range(kvs - 2):\n    anil = min(q[i], q[i + 2])\n    barre = max(q[i], q[i + 2])\n    x = anil\n    x = x + math.ceil((barre - anil) / 2)\n    s = min(s, x)\nq.sort()\ns = min(s, math.ceil(q[0] / 2) + math.ceil(q[1] / 2))\nprint(s)", "import math\nn = int(input())\nq = list(map(int, input().split()))\nsumm = 9876543212345678987654321\nfor i in range(n - 1):\n    a = min(q[i], q[i + 1])\n    b = max(q[i], q[i + 1])\n    if b > 2 * a:\n        summ = min(summ, math.ceil(b / 2))\n    else:\n        summ = min(summ, math.ceil((a + b) / 3))\nfor i in range(n - 2):\n    a = min(q[i], q[i + 2])\n    b = max(q[i], q[i + 2])\n    x = a\n    x = x + math.ceil((b - a) / 2)\n    summ = min(summ, x)\nq.sort()\nsumm = min(summ, math.ceil(q[0] / 2) + math.ceil(q[1] / 2))\nprint(summ)", "import sys\ninput = sys.stdin.readline\nn = int(input())\ndata = list(map(int, input().split()))\ntemp = sorted(data)\n(a, b) = (temp[0], temp[1])\nanswer = (a + 1) // 2 + (b + 1) // 2\nfor i in range(1, n):\n    t1 = int(1000000000.0)\n    if i + 1 < n:\n        t1 = data[i - 1] // 2 + data[i + 1] // 2\n        t1 += data[i - 1] % 2 | data[i + 1] % 2\n    A = max(data[i - 1], data[i])\n    B = min(data[i - 1], data[i])\n    t3 = t2 = int(1000000000.0)\n    if (A + 1) // 2 >= B:\n        t2 = (A + 1) // 2\n    else:\n        t3 = (A + B + 2) // 3\n    answer = min(answer, t1, t2, t3)\nprint(answer)", "n = int(input())\narr = list(map(int, input().split()))\nmini = max(arr)\nfor i in range(n):\n    if i != n - 1:\n        if arr[i] >= arr[i + 1] and arr[i] <= 2 * arr[i + 1] or (arr[i] <= arr[i + 1] and 2 * arr[i] >= arr[i + 1]):\n            ans = (arr[i] + arr[i + 1]) // 3\n            if (arr[i] + arr[i + 1]) % 3:\n                ans += 1\n        else:\n            ans = max(arr[i], arr[i + 1]) // 2\n            if max(arr[i], arr[i + 1]) % 2:\n                ans += 1\n        if ans < mini:\n            mini = ans\n        if len(arr) >= 3 and i != 0:\n            p1 = max(arr[i - 1], arr[i + 1]) - min(arr[i - 1], arr[i + 1])\n            p2 = min(arr[i - 1], arr[i + 1])\n            p2 += p1 // 2\n            if p1 % 2:\n                p2 += 1\n            if p2 < mini:\n                mini = p2\nmin1 = min(arr[:2])\nmin2 = max(arr[:2])\nfor i in range(2, n):\n    if arr[i] <= min1:\n        min2 = min1\n        min1 = arr[i]\n    elif arr[i] <= min2:\n        min2 = arr[i]\nans = min1 // 2\nif min1 % 2:\n    ans += 1\nans += min2 // 2\nif min2 % 2:\n    ans += 1\nif ans < mini:\n    mini = ans\nprint(mini)", "import math\nn = int(input())\nq = list(map(int, input().split()))\nsumm = 9876543212345678987654321\nfor i in range(n - 1):\n    a = min(q[i], q[i + 1])\n    b = max(q[i], q[i + 1])\n    if b > 2 * a:\n        summ = min(summ, math.ceil(b / 2))\n    else:\n        summ = min(summ, math.ceil((a + b) / 3))\nfor i in range(n - 2):\n    a = min(q[i], q[i + 2])\n    b = max(q[i], q[i + 2])\n    x = a\n    x = x + math.ceil((b - a) / 2)\n    summ = min(summ, x)\nq.sort()\nsumm = min(summ, math.ceil(q[0] / 2) + math.ceil(q[1] / 2))\nprint(summ)", "n = int(input())\na = list(map(int, input().split()))\nb = a[:]\nb.sort()\nans = (b[0] + 1) // 2 + (b[1] + 1) // 2\nfor i in range(n - 1):\n    q = max(a[i], a[i + 1])\n    w = min(a[i], a[i + 1])\n    if q > 2 * w:\n        ans = min(ans, (q + 1) // 2)\n    else:\n        ans = min(ans, (q + w + 2) // 3)\na = [99999999] + a + [99999999]\nfor i in range(1, n + 1):\n    temp = a[i - 1:i + 2]\n    att = min(temp[0], temp[2], (temp[1] + 1) // 2)\n    temp[0] -= att\n    temp[1] -= att * 2\n    temp[2] -= att\n    temp.sort()\n    ans = min(att + (temp[1] + 1) // 2, ans)\nprint(ans)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    N = int(input())\n    INF = 10 ** 20\n    a = [INF] + list(map(int, input().split()))\n    a.append(INF)\n    best = INF\n    N = len(a)\n    for i in range(1, N - 1):\n        best = min(best, max(a[i - 1], a[i + 1]))\n        best = min(best, max(min(a[i - 1], a[i + 1]), (a[i] + 1) // 2))\n        x = a[i - 1]\n        y = a[i + 1]\n        if x > y:\n            (x, y) = (y, x)\n        shots = x + (y - x + 1) // 2\n        y -= x\n        best = min(shots, best)\n    for i in range(N - 1):\n        (x, y) = (a[i], a[i + 1])\n        if x > y:\n            (x, y) = (y, x)\n        delta = y - x\n        shots = min(delta, x)\n        y -= 2 * shots\n        x -= shots\n        if y == x:\n            shots += (y + x + 2) // 3\n            best = min(shots, best)\n        else:\n            assert x == 0\n            shots += (y + 1) // 2\n            best = min(shots, best)\n    a.sort()\n    best = min(best, (a[0] + 1) // 2 + (a[1] + 1) // 2)\n    print(best)\nsolve()", "(N, A) = (int(input()), list(map(int, input().split())))\nc = 1000000\nfor i in range(N - 2):\n    prev = c\n    c = min(c, max(A[i], A[i + 2]))\n    if A[i] % 2 == A[i + 2] % 2 == 1:\n        c = min(c, A[i] // 2 + A[i + 2] // 2 + 1)\nfor i in range(N - 1):\n    x = min(A[i], A[i + 1])\n    y = A[i] + A[i + 1] - x\n    if min(A[i], A[i + 1]) <= (max(A[i], A[i + 1]) + 1) // 2:\n        c = min(c, (max(A[i], A[i + 1]) + 1) // 2)\n    else:\n        c = min(c, (A[i] + A[i + 1] + 2) // 3)\nX = sorted(A)\nc = min(c, (X[0] + 1) // 2 + (X[1] + 1) // 2)\nprint(c)", "n = int(input())\nl = [int(i) for i in input().split(' ')]\n(a, b) = (1000000.0 + 1, 1000000.0 + 1)\nfor i in l:\n    if i < a:\n        (a, b) = (i, a)\n    elif i < b:\n        (a, b) = (a, i)\nbest = -1\nfor i in range(n):\n    x = l[i]\n    tmp = []\n    if i > 0:\n        tmp.append(l[i - 1])\n    if i < len(l) - 1:\n        tmp.append(l[i + 1])\n    y = min(tmp)\n    if x > y:\n        (x, y) = (y, x)\n    if y >= 2 * x:\n        cur = (y + 1) // 2\n    else:\n        cur = (x + y + 2) // 3\n    if len(tmp) == 2:\n        cur = min(cur, min(tmp) + (max(tmp) - min(tmp) + 1) // 2)\n    x = l[i]\n    y = a\n    if l[i] == a:\n        y = b\n    cur = min(cur, (x + 1) // 2 + (y + 1) // 2)\n    if cur < best or best < 0:\n        best = cur\nprint(best)", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    n = int(inp())\n    a = list(map(int, inp().split()))\n    ans = int(20000000.0)\n    for i in range(2, n):\n        b = a[i - 2]\n        c = a[i]\n        (b, c) = (min(b, c), max(b, c))\n        ans = min(ans, b + (c - b + 1) // 2)\n    for i in range(1, n):\n        b = a[i - 1]\n        c = a[i]\n        (b, c) = (min(b, c), max(b, c))\n        z = (b + c + 2) // 3\n        y = max(c - z, 0)\n        ans = min(ans, y + max(c - y * 2, (b - y + 1) // 2, 0))\n        ans = min(ans, (c + 1) // 2 + max(b - (c + 1) // 2 + 1, 0) // 2)\n    a.sort()\n    ans = min(ans, (a[0] + 1) // 2 + (a[1] + 1) // 2)\n    print(ans)\n\ndef main():\n    solve()\nmain()", "import math\nn = int(input())\na = list(map(int, input().split()))\nans = 1000000000\nmin_nb = 1000000000\nfor i in range(1, len(a)):\n    if i == 1:\n        ans = min(ans, max(math.ceil(a[i - 1] / 2), math.ceil((a[i - 1] + a[i]) / 3), math.ceil(a[i] / 2)))\n        min_nb = min(min_nb, a[i - 1])\n    else:\n        ans = min(ans, max(math.ceil(a[i - 1] / 2), math.ceil((a[i - 1] + a[i]) / 3), math.ceil(a[i] / 2)))\n        ans = min(ans, max(a[i - 2], a[i]), min(a[i - 2], a[i]) + math.ceil(abs(a[i - 2] - a[i]) / 2))\n        ans = min(ans, math.ceil(min_nb / 2) + math.ceil(a[i] / 2))\n        min_nb = min(min_nb, a[i - 1])\nprint(ans)", "n = int(input())\na = list(map(int, input().split()))\nind = 0\nfor i in range(1, n):\n    if a[i] < a[ind]:\n        ind = i\nind2 = -1\nfor i in range(n):\n    if i == ind:\n        continue\n    if ind2 == -1:\n        ind2 = i\n    elif a[i] < a[ind2]:\n        ind2 = i\n\ndef f(x):\n    return (x + 1) // 2\nans = f(a[ind]) + f(a[ind2])\nfor i in range(1, n - 1):\n    ans = min(ans, 1 + f(a[i - 1] - 1) + f(a[i + 1] - 1))\nfor i in range(1, n):\n    x = a[i - 1]\n    y = a[i]\n    if x > y:\n        (x, y) = (y, x)\n    cur = 0\n    op = min(x, y - x)\n    cur += op\n    x -= op\n    y -= 2 * op\n    op = min(x // 3, y // 3)\n    x -= 3 * op\n    y -= 3 * op\n    cur += 2 * op\n    if x:\n        cur += 1\n        y -= 2\n        x -= 1\n    cur += f(x) + f(y)\n    ans = min(ans, cur)\nprint(ans)", "import sys\nfrom math import ceil\ninput = sys.stdin.readline\nfor Pythonic__Python in range(1):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ll = []\n    ans = int(20000000.0)\n    for i in range(n):\n        ll.append([l[i], i])\n    for j in range(1, n):\n        (x, y) = (min(ll[j - 1][0], ll[j][0]), max(ll[j - 1][0], ll[j][0]))\n        if y > 2 * x:\n            x = int((y + 1) / 2)\n        else:\n            x = int((x + y + 2) / 3)\n        ans = min(ans, x)\n    for j in range(2, n):\n        (x, y) = (min(ll[j - 2][0], ll[j][0]), max(ll[j - 2][0], ll[j][0]))\n        ans = min(ans, int(x + (y - x + 1) / 2))\n    ll.sort()\n    (x, y) = (ll[0][0], ll[1][0])\n    ans = min(ans, int((x + 1) / 2) + int((y + 1) / 2))\n    print(ans)", "def ff(a, b):\n    mx = max(a, b)\n    mi = min(a, b)\n    ans = 0\n    if mi < mx // 2:\n        ans = mx // 2 + mx % 2\n    else:\n        a = (2 * mx - mi) // 3\n        ans = a\n        mx -= 2 * a\n        mi -= a\n        if mi > 0:\n            ans += mi // 2 + mi % 2\n            mx -= mi // 2 + mi % 2\n        if mx > 0:\n            ans += mx // 2 + mx % 2\n    return ans\n\ndef f(a, b, c):\n    ans1 = min(a, c)\n    mi = max(a, c) - min(a, c)\n    ans1 += mi // 2 + mi % 2\n    ans2 = ff(a, b)\n    ans3 = ff(b, c)\n    ans = min(ans1, ans2, ans3)\n    return ans\nn = int(input())\narr = list(map(int, input().split()))\nans = max(arr)\nfor i in range(1, n - 1):\n    tm = f(arr[i - 1], arr[i], arr[i + 1])\n    ans = min(tm, ans)\narr.sort()\ntm = arr[0] // 2 + arr[0] % 2 + arr[1] // 2 + arr[1] % 2\nans = min(tm, ans)\nif len(arr) == 2:\n    ans = min(ans, ff(arr[0], arr[1]))\nprint(ans)", "import math\nfrom collections import defaultdict\nn = int(input())\nlis = list(map(int, input().split()))\nvayu = lis.copy()\nvayu.sort()\n\ndef act(a, b):\n    lis = [a, b]\n    lis.sort()\n    if lis[1] >= lis[0] * 2:\n        return math.ceil(lis[1] / 2)\n    elif (lis[0] - (lis[1] - lis[0])) % 3 == 0:\n        return lis[1] - lis[0] + 2 * ((lis[0] - (lis[1] - lis[0])) // 3)\n    else:\n        return lis[1] - lis[0] + 2 * ((lis[0] - (lis[1] - lis[0])) // 3) + (lis[0] - (lis[1] - lis[0])) % 3\nans = math.ceil(vayu[0] / 2) + math.ceil(vayu[1] / 2)\nfor j in range(0, n - 1):\n    new = math.ceil(lis[j] / 2)\n    if j == 0:\n        ans = min(ans, act(lis[j], lis[j + 1]))\n    elif j == n - 1:\n        ans = min(ans, act(lis[j], lis[j - 1]))\n    else:\n        ans = min(ans, act(lis[j], lis[j + 1]), act(lis[j], lis[j - 1]))\nfor j in range(0, n - 2):\n    tot = math.ceil((max(lis[j], lis[j + 2]) - min(lis[j], lis[j + 2])) / 2)\n    ans = min(ans, min(lis[j], lis[j + 2]) + tot)\nprint(ans)"]