["for time in range(int(input())):\n    n = input()\n    a = [k for k in input().split()]\n    if a[0] == a[-1]:\n        print('NO')\n        continue\n    if len(a) == 2:\n        (a[0], a[1]) = (a[1], a[0])\n    else:\n        (a[1], a[-1]) = (a[-1], a[1])\n    print('YES')\n    print(' '.join(a))", "n = int(input())\nfor i in range(n):\n    what = input()\n    l = input().split()\n    if l[0] == l[-1]:\n        print('NO')\n    else:\n        print('YES')\n        (l[1], l[-1]) = (l[-1], l[1])\n        print(' '.join(l))", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(str, input().split()))\n    b = a.count(a[-1])\n    if b > 1 and n - b > 0:\n        print('YES')\n        print(' '.join([a[-1]] + a[:-b] + a[-b + 1:]))\n    elif a[-1] != a[-2]:\n        print('YES')\n        print(' '.join(reversed(a)))\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [i for i in input().split()]\n    if n >= 3:\n        if a[-1] != a[0]:\n            (a[1], a[0], a[-1]) = (a[0], a[-1], a[1])\n            print('YES')\n            print(' '.join(a))\n        else:\n            print('NO')\n    elif a[-1] != a[0]:\n        print('YES')\n        print(' '.join(a))\n    else:\n        print('NO')", "t = int(input())\nresult = []\nfor i in range(t):\n    n = int(input())\n    ai = list(map(int, input().split(' ')))\n    ai.sort()\n    ai.reverse()\n    ci = list(map(str, ai))\n    if ai[0] != ai[1]:\n        result.append('YES')\n        result.append(' '.join(ci))\n    elif (ai[0] == ai[1]) & (ai[0] != ai[-1]):\n        result.append('YES')\n        result.append(ci[-1] + ' ' + ' '.join(ci[1:n - 1]) + ' ' + ci[0])\n    else:\n        result.append('NO')\nfor i in result:\n    print(i)", "import sys\ninput = sys.stdin.readline\nfor i in range(int(input())):\n    input()\n    a = [int(i) for i in input().split()]\n    if a[0] == a[-1]:\n        print('NO')\n    else:\n        print('YES')\n        print(a[-1], ' '.join(list(map(str, a[:-1]))))", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    if len(set(arr)) == 1:\n        print('NO')\n        continue\n    print('YES')\n    (arr[1], arr[-1]) = (arr[-1], arr[1])\n    print(' '.join(list(map(str, arr))))", "import sys\n\ndef is_ugly(arr):\n    sm = arr[0]\n    for i in range(1, len(arr)):\n        if sm == arr[i]:\n            return True\n        sm += arr[i]\n    return False\n\ndef main(input, print):\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        ugly = is_ugly(arr)\n        if not ugly:\n            print('YES' + '\\n')\n            print(' '.join(map(str, arr)) + '\\n')\n        else:\n            (arr[0], arr[-1]) = (arr[-1], arr[0])\n            if arr[0] == arr[1]:\n                print('NO' + '\\n')\n            else:\n                print('YES' + '\\n')\n                print(' '.join(map(str, arr)) + '\\n')\nmain(sys.stdin.readline, sys.stdout.write)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nt = inp()\nfor _ in range(t):\n    n = inp()\n    nums = inlt()\n    nums.sort()\n    (i, j) = (0, len(nums) - 1)\n    if nums[i] == nums[n - 1]:\n        print('NO')\n    elif nums.count(nums[n - 1]) > 1:\n        flag = True\n        while i <= j:\n            if nums[i] != 0 and nums[i] != nums[j]:\n                (nums[i], nums[j]) = (nums[j], nums[i])\n                print('YES')\n                print(' '.join(list(map(str, reversed(nums)))))\n                flag = False\n                break\n        if flag:\n            print('NO')\n    else:\n        print('YES')\n        print(' '.join(list(map(str, reversed(nums)))))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a.count(a[0]) == len(a):\n        print('NO')\n    else:\n        print('YES')\n        mah = a.pop(a.index(max(a)))\n        print(mah, ' '.join([str(x) for x in a]))", "def beautify(arr, l):\n    arr = arr[::-1]\n    if arr[0] != arr[1]:\n        print('YES')\n        return arr\n    elif arr[-1] == arr[0]:\n        print('NO')\n        return None\n    else:\n        t = arr[-1]\n        arr[-1] = arr[1]\n        arr[1] = t\n        print('YES')\n        return arr\n    print('NO')\n    return None\ntest = int(input())\nfor _ in range(test):\n    l = int(input())\n    array = list(map(int, input().split()))\n    b = beautify(array, l)\n    if b != None:\n        print(' '.join(list(map(str, b))))", "def reorder(array: list):\n    max_element = array[-1]\n    array.insert(0, max_element)\n    return array[:-1]\n\ndef is_ugly(a):\n    if a[0] == a[1]:\n        return True\n    else:\n        return False\n\ndef list_to_string(array):\n    array = [str(i) for i in array]\n    return ' '.join(array)\nt = int(input())\nfor _ in range(t):\n    length = int(input())\n    a = list(map(int, input().split()))\n    reordered_a = reorder(a)\n    if is_ugly(reordered_a):\n        print('NO')\n    else:\n        print('YES')\n        print(list_to_string(reordered_a))", "for _ in range(int(input())):\n    (_, arr) = (input(), sorted(map(int, input().split())))\n    arr.insert(0, arr.pop())\n    if arr[0] == arr[1]:\n        print('NO')\n    else:\n        print(f\"YES\\n{' '.join(map(str, arr))}\")", "import bisect\nimport heapq\nimport math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if len(set(a)) == 1:\n        print('NO')\n        continue\n    a = sorted(a, reverse=True)\n    c = a.count(a[0])\n    a = a[:1] + a[c:] + a[1:c]\n    print('YES')\n    print(' '.join(map(str, a)))", "for tcase in range(int(input())):\n    n = int(input())\n    a = sorted(map(int, input().split()))\n    b = [a.pop()]\n    b += a\n    if b[0] == b[1]:\n        print('NO')\n    else:\n        print('YES')\n        print(' '.join(map(str, b)))", "from collections import defaultdict\nfrom sys import stdin, stdout\nimport string\nfrom math import factorial\n\ndef solution(A):\n    if len(set(A)) == 1:\n        print('NO')\n        return\n    sorted_a = sorted(A, reverse=True)\n    if sorted_a[0] == sorted_a[1]:\n        sorted_a[1] = sorted_a[-1]\n        sorted_a[-1] = sorted_a[0]\n    print('YES')\n    print(' '.join(map(str, sorted_a)))\ntest_cases = int(stdin.readline())\nfor it in range(test_cases):\n    N = int(stdin.readline().strip())\n    A = list(map(int, stdin.readline().split()))\n    solution(A)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    numbers = [int(num) for num in input().split(' ', n - 1)]\n    numbers.sort()\n    numbers.reverse()\n    if numbers[n - 1] == numbers[0]:\n        print('NO')\n    else:\n        print('YES')\n        while True:\n            k = numbers[1]\n            if k == numbers[0]:\n                numbers.pop(1)\n                numbers.append(k)\n            else:\n                break\n        print(' '.join([str(elem) for elem in numbers]))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    numbers = [int(num) for num in input().split(' ', n - 1)]\n    numbers.sort()\n    numbers.reverse()\n    if numbers[0] == numbers[n - 1]:\n        print('NO')\n    else:\n        print('YES')\n        numbers.insert(0, numbers[n - 1])\n        numbers.pop()\n        print(' '.join([str(elem) for elem in numbers]))", "ts = int(input())\nfor _ in range(ts):\n    n = input()\n    arr = map(int, input().split())\n    arr = sorted(arr)[::-1]\n    (arr[1], arr[-1]) = (arr[-1], arr[1])\n    if arr[0] != arr[1]:\n        print('YES')\n        print(' '.join(map(str, arr)))\n    else:\n        print('NO')", "t = int(input())\nloo = []\nfor i in range(t):\n    n = int(input())\n    a = input().split()\n    for j in range(n):\n        a[j] = int(a[j])\n    beauty = True\n    if a[-1] == a[0]:\n        beauty = False\n    if beauty:\n        loo.append(('YES', [a[-1]] + a[:len(a) - 1]))\n    else:\n        loo.append(('NO',))\nfor e in loo:\n    if e[0] == 'YES':\n        print(e[0])\n        print(' '.join([str(e2) for e2 in e[1]]))\n    else:\n        print(e[0])", "test_cases = int(input())\nwhile test_cases:\n    test_cases -= 1\n    array_len = int(input())\n    arr = [int(x) for x in input().split(' ')]\n    arr.sort()\n    rev_arr = arr[::-1]\n    if arr[0] == arr[-1]:\n        print('NO')\n    else:\n        print('YES')\n        rev_arr = [str(x) for x in rev_arr]\n        fin_str = ' '.join(rev_arr[1:-1])\n        print(f'{rev_arr[0]} {rev_arr[-1]} {fin_str}')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    if len(a) > 1 and a[0] == a[1]:\n        if a[0] == a[-1]:\n            print('NO')\n            continue\n        a = [a[0]] + [a[-1]] + a[1:-1]\n    print('YES')\n    print(' '.join(map(str, a)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input()\n    s = a.split()\n    if int(s[0]) == int(s[n - 1]):\n        print('NO')\n    else:\n        x = s[0]\n        del s[0]\n        s.append(x)\n        s.reverse()\n        st = ''\n        for j in range(n):\n            st = st + s[j] + ' '\n        print('YES')\n        print(st)", "t = int(input())\nres = []\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if len(set(a)) == 1:\n        res.append('NO')\n        continue\n    a = a[::-1]\n    if len(a) > 1 and a[0] == a[1]:\n        e = a.pop()\n        a.insert(0, e)\n    res.append('YES')\n    res.append(' '.join(map(str, a)))\nfor i in res:\n    print(i)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    if a[0] == a[1]:\n        if a[0] == a[-1]:\n            print('NO')\n        else:\n            a = [a[-1]] + a[0:-1]\n            s = ' '.join([str(i) for i in a])\n            print('YES')\n            print(s)\n    else:\n        s = ' '.join([str(i) for i in a])\n        print('YES')\n        print(s)", "def main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        L = list(map(int, input().split()))\n        a = max(L)\n        counter = 0\n        for i in range(n):\n            if L[i] == a:\n                counter += 1\n        if counter == n:\n            print('NO')\n        else:\n            L.sort(reverse=True)\n            L = L[counter - 1:] + [a] * (counter - 1)\n            for i in range(n):\n                L[i] = str(L[i])\n            print('YES')\n            print(' '.join(L))\nmain()", "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    new = a.copy()\n    new.sort()\n    new.reverse()\n    if new[0] != new[1]:\n        st = ' '.join([str(k) for k in new])\n        sys.stdout.write('YES\\n')\n        sys.stdout.write(st + '\\n')\n    else:\n        c = 0\n        for j in range(n):\n            if new[j] == new[0]:\n                c += 1\n            else:\n                break\n        if c == n:\n            sys.stdout.write('NO\\n')\n        else:\n            new = [new[0]] + [new[c]] + new[1:c] + new[c + 1:]\n            st = ' '.join([str(k) for k in new])\n            sys.stdout.write('YES\\n')\n            sys.stdout.write(st + '\\n')", "tests = int(input())\nfor i in range(tests):\n    n = int(input())\n    a = [int(k) for k in input().split()]\n    a.sort(reverse=True)\n    a1 = a[1]\n    an1 = a[n - 1]\n    if an1 == a[0]:\n        print('NO')\n    else:\n        if a[1] == a[0]:\n            a[n - 1] = a1\n            a[1] = an1\n        print('YES')\n        print(' '.join([str(k) for k in a]))", "from collections import Counter\nt = int(input())\narrays = []\nfor _ in range(t):\n    input()\n    arrays.append([int(x) for x in input().split(' ')])\nfor array in arrays:\n    if len(set(array)) <= 1:\n        print('NO')\n        continue\n    array = sorted(array, reverse=True)\n    if array[0] == array[1]:\n        x = array[-1]\n        array[-1] = array[0]\n        array[0] = x\n    print('YES')\n    print(' '.join(map(str, array)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    numbers = [int(num) for num in input().split(' ', n - 1)]\n    if numbers[0] == numbers[n - 1]:\n        print('NO')\n    else:\n        print('YES')\n        numbers.reverse()\n        numbers.insert(0, numbers[n - 1])\n        numbers.pop()\n        print(' '.join([str(elem) for elem in numbers]))", "def main():\n    T = int(input())\n    for i in range(T):\n        _ = input()\n        array = list(map(int, input().split()))\n        array.sort(reverse=True)\n        (array[1], array[-1]) = (array[-1], array[1])\n        if array[0] == array[1]:\n            print('NO')\n        else:\n            print('YES')\n            print(' '.join(map(str, array)))\nmain()", "n = int(input())\nfor i in range(n):\n    input()\n    l = list(map(int, input().split()))\n    uniq_l = set(l)\n    if len(uniq_l) == 1:\n        print('NO')\n    elif len(uniq_l) == len(l):\n        print('YES')\n        print(' '.join(map(str, sorted(l, reverse=True))))\n    else:\n        l = sorted(l, reverse=True)\n        if l[0] == l[1]:\n            (l[1], l[-1]) = (l[-1], l[1])\n        print('YES')\n        print(' '.join(map(str, l)))", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[0] == a[n - 1]:\n        print('NO')\n    else:\n        print('YES')\n        a[1:] = reversed(a[1:])\n        print(' '.join((str(x) for x in a)))\nt = int(input())\nfor _ in range(t):\n    solve()", "n = int(input())\nfor i in range(n):\n    s = ''\n    a = int(input())\n    list = input()\n    list = list.split()\n    max = list[a - 1]\n    min = list[0]\n    if min == max:\n        print('NO')\n    else:\n        x = list[1]\n        list[a - 1] = x\n        list[0] = max\n        list[1] = min\n        for i2 in range(len(list)):\n            s = s + list[i2] + ' '\n        print('YES')\n        print(s)", "import sys\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        A = list(map(int, input().split()))\n        A.reverse()\n        if A[0] == A[-1]:\n            print('NO')\n        else:\n            (A[1], A[-1]) = (A[-1], A[1])\n            print('YES')\n            print(' '.join(map(str, A)))\nsys.exit(main())", "def reverse(seq, start, stop):\n    size = stop + start\n    for i in range(start, (size + 1) // 2):\n        j = size - i\n        (seq[i], seq[j]) = (seq[j], seq[i])\nfor i in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    s.sort(reverse=True)\n    if len(set(s)) == 1:\n        print('NO')\n    else:\n        print('YES')\n        reverse(s, 1, len(s) - 1)\n        print(' '.join(map(str, s)))", "import sys\nfor _ in range(int(input())):\n    n = int(input())\n    a = sorted(map(int, sys.stdin.readline().strip().split()), reverse=True)\n    if a[0] != a[-1]:\n        a = [a[0]] + [a[-1]] + a[1:-1]\n        sys.stdout.write('YES\\n')\n        sys.stdout.write(' '.join([str(x) for x in a]) + '\\n')\n        continue\n    sys.stdout.write('NO\\n')", "tests = int(input())\nwhile tests:\n    tests -= 1\n    array_len = int(input())\n    arr = [int(x) for x in input().split(' ')]\n    arr.sort()\n    rev_arr = arr[::-1]\n    if arr[0] == arr[-1]:\n        print('NO')\n    else:\n        print('YES')\n        rev_arr = [str(x) for x in rev_arr]\n        fin_str = ' '.join(rev_arr[1:-1])\n        print(f'{rev_arr[0]} {rev_arr[-1]} {fin_str}')", "def main(a):\n    if a[0] == a[-1]:\n        print('NO')\n        return\n    n = len(a)\n    first = a[:n // 2]\n    last = a[-n // 2:]\n    last.reverse()\n    ans = []\n    for (x1, x2) in zip(first, last):\n        ans.append(x1)\n        ans.append(x2)\n    if n % 2 == 1:\n        ans.append(a[n // 2])\n    print('YES')\n    print(' '.join([str(x) for x in ans]))\ntests = int(input())\nfor _ in range(tests):\n    n = int(input())\n    a = list(map(int, input().split()))\n    main(a)", "import sys\n\ndef fn(n):\n    max_val = max(n)\n    filtered = list(filter(lambda x: x != max_val, n))\n    if not filtered:\n        return ('NO', None)\n    a = n.copy()\n    a.remove(filtered[0])\n    returned = [filtered[0]] + sorted(a, reverse=True)\n    output = ''\n    for item in returned:\n        output += str(item) + ' '\n    return ('YES', output[:-1])\ninput = sys.stdin.readlines()\nfor i in range(int(input[0].strip('\\n'))):\n    a = [int(x) for x in input[2 * i + 2].strip('\\n').split(' ')]\n    (ans, lis) = fn(a)\n    print(ans)\n    if ans == 'YES':\n        print(lis)", "def solve(a):\n    a.sort(reverse=True)\n    if len(a) >= 2:\n        if a[0] == a[1]:\n            (a[0], a[len(a) - 1]) = (a[len(a) - 1], a[0])\n    s = 0\n    for i in range(len(a)):\n        if a[i] == s:\n            print('NO')\n            return\n        s += a[i]\n    print('YES')\n    print(' '.join((str(x) for x in a)))\nt = int(input())\nfor x in range(t):\n    l = input()\n    a = list(map(int, input().split()))\n    solve(a)", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split(' ')]\n    arr.sort(reverse=True)\n    if arr[0] == arr[-1]:\n        print('NO')\n    else:\n        print('YES')\n        if arr[0] == arr[1]:\n            temp = arr[-1]\n            arr[-1] = arr[1]\n            arr[1] = temp\n        print(' '.join([str(x) for x in arr]))", "def main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        tmp = [int(x) for x in input().split()]\n        if tmp[0] == tmp[-1]:\n            print('NO')\n        else:\n            print('YES')\n            ans = sorted(tmp, reverse=True)\n            (ans[1], ans[-1]) = (ans[-1], ans[1])\n            print(' '.join(map(str, ans)))\nmain()", "def solve(arr):\n    if len(arr) > 2 and len(set(arr)) > 1:\n        print('YES')\n        vals = [_ for _ in range(len(arr))]\n        (s, f) = (0, len(arr) - 1)\n        c = 0\n        while s < f:\n            vals[c] = arr[s]\n            c += 1\n            vals[c] = arr[f]\n            c += 1\n            s += 1\n            f -= 1\n        if s == f:\n            vals[c] = arr[s]\n        print(' '.join([str(_) for _ in vals]))\n        return\n    if len(arr) < 3 and len(set(arr)) == len(arr):\n        print('YES')\n        print(' '.join([str(_) for _ in arr]))\n        return\n    print('NO')\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(_) for _ in input().split()]\n    solve(arr)", "from collections import defaultdict\n\ndef check_array(aa):\n    prefix_sum = 0\n    for a in aa:\n        if prefix_sum == a:\n            return False\n        prefix_sum += a\n    return True\n\ndef solve(aa):\n    aa_sorted = sorted(aa, reverse=True)\n    if len(aa_sorted) <= 1:\n        return (True, aa_sorted)\n    if aa_sorted[0] != aa_sorted[1]:\n        return (True, aa_sorted)\n    if aa_sorted[0] != aa_sorted[-1]:\n        return (True, [aa_sorted[0], aa_sorted[-1]] + aa_sorted[1:-1])\n    return (False, aa)\nn_tests = int(input())\nfor test_n in range(n_tests):\n    n = int(input())\n    aa = list(map(int, input().split(' ')))\n    assert len(aa) == n\n    (check_result, reordered_aa) = solve(aa)\n    assert check_result == check_array(reordered_aa)\n    if check_result:\n        print('YES')\n        print(' '.join(map(str, reordered_aa)))\n    else:\n        print('NO')", "def f():\n    num_of_nums = int(input())\n    for _ in range(num_of_nums):\n        _ = input()\n        nums = list(map(int, input().split()))\n        nums = sorted(nums, reverse=True)\n        if nums[0] == nums[1]:\n            if nums[0] == nums[-1]:\n                print('NO')\n                continue\n            else:\n                nums.insert(0, nums.pop())\n        print('YES')\n        print(' '.join(map(str, nums)))\nf()", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort(reverse=True)\n    if arr[0] != arr[1]:\n        print('YES')\n        print(' '.join([str(i) for i in arr]))\n    else:\n        tracker = False\n        for i in range(1, n):\n            if arr[0] != arr[i]:\n                (arr[0], arr[i]) = (arr[i], arr[0])\n                print('YES')\n                print(' '.join([str(i) for i in arr]))\n                tracker = True\n                break\n        if tracker == False:\n            print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    if len(set(a)) == 1:\n        print('NO')\n    else:\n        print('YES')\n        sorted_list = sorted(a, reverse=True)\n        if sorted_list[0] == sorted_list[1]:\n            (sorted_list[-1], sorted_list[1]) = (sorted_list[1], sorted_list[-1])\n        print(' '.join([str(i) for i in sorted_list]))", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    l1 = input()\n    list1 = list(map(int, l1.split()))\n    list1.sort(reverse=True)\n    if list1[0] == list1[1]:\n        if min(list1) == max(list1):\n            print('NO')\n        else:\n            for i in range(2, n):\n                if list1[i] != list1[1]:\n                    (list1[i], list1[1]) = (list1[1], list1[i])\n                    print('YES')\n                    print(' '.join(map(str, list1)))\n                    break\n    else:\n        print('YES')\n        print(' '.join(map(str, list1)))", "tc = int(input())\nwhile tc:\n    n = int(input())\n    values = list(map(int, input().split(' ')))\n    values.sort(reverse=True)\n    n = len(values)\n    solved = True\n    for i in range(0, n):\n        if values[0] != values[i]:\n            solved = False\n            break\n    for i in range(0, n):\n        if values[i] != values[0]:\n            (values[i], values[0]) = (values[0], values[i])\n            break\n    if solved == False:\n        print('YES')\n        x = ' '.join([str(i) for i in values])\n        print(x)\n    else:\n        print('NO')\n    tc -= 1", "tests = int(input())\nfor i in range(tests):\n    length = int(input())\n    reihe = sorted(list(map(int, input().split(' '))), reverse=True)\n    if min(reihe) == max(reihe):\n        print('NO')\n    else:\n        print('YES')\n        reihe.insert(1, reihe[-1])\n        reihe.pop()\n        str_reihe = [str(i) for i in reihe]\n        print(' '.join(str_reihe))", "import heapq\nimport math\neps = 10 ** (-9)\nfrom math import ceil, log\n\ndef solve():\n    n = int(input())\n    a = input().split(' ')\n    a = [int(x) for x in a]\n    if len(a) == 1:\n        print('YES')\n        print(str(a[0]))\n        return\n    if len(set(a)) == 1:\n        print('NO')\n        return\n    a.sort()\n    a = a[::-1]\n    print('YES')\n    i = 1\n    res = str(a[0]) + ' ' + str(a[-1])\n    while i < n - 1:\n        res += ' ' + str(a[i])\n        i += 1\n    print(res)\n    return\nt = int(input())\nfor _ in range(t):\n    solve()", "numbers = []\nsumm = 0\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    max_num = max(a)\n    min_num = min(a)\n    index_max = a.index(max(a))\n    index_min = a.index(min(a))\n    if len(set(a)) == 1:\n        bool = 'NO'\n        print(bool)\n        continue\n    bool = 'YES'\n    numbers.append(max_num)\n    numbers.append(min_num)\n    a.remove(max_num)\n    a.remove(min_num)\n    numbers.extend(a)\n    if bool == 'YES':\n        print(bool)\n        print(' '.join([str(i) for i in numbers]))\n    numbers = []\n    summ = 0", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[0] == a[n - 1]:\n        print('NO')\n    else:\n        print('YES')\n        a[1:] = reversed(a[1:])\n        print(' '.join((str(x) for x in a)))\nt = int(input())\nfor _ in range(t):\n    solve()", "def solve(var1, var2):\n    allSame = True\n    for item in var2:\n        if var2[0] != item:\n            allSame = False\n    if allSame:\n        return 'NO'\n    if len(var2) == 1:\n        return 'NO'\n    ansTable = var2\n    (ansTable[0], ansTable[len(ansTable) - 1]) = (ansTable[len(ansTable) - 1], ansTable[0])\n    if ansTable[0] == 0:\n        return 'NO'\n    if ansTable[1] == ansTable[0]:\n        (ansTable[1], ansTable[len(ansTable) - 1]) = (ansTable[len(ansTable) - 1], ansTable[1])\n    return ansTable\ntestCount = int(input())\nfor i in range(testCount):\n    var1 = int(input())\n    var2 = input().split(' ')\n    ans = solve(var1, var2)\n    if ans != 'NO':\n        print('YES')\n        ansString = ''\n        for item in ans:\n            ansString += str(item) + ' '\n        print(ansString.rstrip())\n    else:\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = str(input()).split(' ')\n    a = [int(i) for i in a]\n    if len(set(a)) == 1:\n        print('NO')\n    else:\n        a = sorted(a, reverse=True)\n        duplicates = a.count(a[0])\n        a = [a[0]] + a[duplicates:] + a[1:duplicates]\n        a = [str(i) for i in a]\n        print('YES')\n        print(' '.join(a))", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split(' ')]\n    sumy = 0\n    ans = 'YES'\n    for i in arr:\n        if i == sumy:\n            ans = 'NO'\n            break\n        else:\n            sumy += i\n    if ans == 'NO':\n        arr.sort(reverse=True)\n        if arr == [0]:\n            ans = 'NO'\n        elif arr[0] == arr[1]:\n            for i in range(2, n):\n                if arr[i] != 0 and arr[i] != arr[0]:\n                    (arr[i], arr[0]) = (arr[0], arr[i])\n                    ans = 'YES'\n                    break\n        else:\n            ans = 'YES'\n    if ans == 'NO':\n        print(ans)\n    else:\n        print(ans)\n        print(' '.join([str(i) for i in arr]))", "from typing import List\n\ndef solve(n, a: List[int]):\n    a.reverse()\n    if a[1] == a[0]:\n        for i in range(2, n):\n            if a[i] != a[1]:\n                (a[i], a[1]) = (a[1], a[i])\n                return a\n        return []\n    else:\n        return a\n\ndef convert_a_to_str(a: List[int]):\n    return ' '.join([str(num) for num in a])\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(num) for num in input().split(' ', n - 1)]\n    ans = solve(n, a)\n    if len(ans) > 0:\n        print('YES')\n        print(convert_a_to_str(a))\n    else:\n        print('NO')", "import os\n\ndef main():\n    user_input = []\n    track = 0\n    while True:\n        if track == 0:\n            numCases = input()\n            user_input.append(numCases)\n        elif track == int(numCases) * 2 + 1:\n            break\n        else:\n            user_input.append(input())\n        track += 1\n    for i in range(1, int(numCases) * 2, 2):\n        string = ''\n        numLine = int(user_input[i])\n        numbers = [int(x) for x in user_input[i + 1].split()]\n        if check(numbers):\n            print('YES')\n            for j in numbers:\n                string += f'{str(j)} '\n            print(string)\n        else:\n            output = beautiful(numbers, numLine)\n            if output is None:\n                print('NO')\n            else:\n                print('YES')\n                for j in output:\n                    string += f'{str(j)} '\n                print(string)\n\ndef check(numbers):\n    total = 0\n    for i in numbers:\n        if i == total:\n            return False\n        total += i\n    return True\n\ndef beautiful(numbers, numLine):\n    array = []\n    numbers.sort()\n    maximum = numbers[-1]\n    minimum = numbers[0]\n    if maximum != minimum:\n        array.append(minimum)\n        array.append(maximum)\n        for i in range(1, numLine - 1, 1):\n            array.append(numbers[i])\n        return array\n    else:\n        return None\nmain()", "def sol(a):\n    ass = set(a)\n    if len(ass) == 1:\n        print('NO')\n        return\n    a = sorted(a, reverse=True)\n    if a[0] == a[1]:\n        (a[0], a[-1]) = (a[-1], a[0])\n    print('YES')\n    out = ''\n    for i in a:\n        out = out + str(i) + ' '\n    out = out[:-1]\n    print(out)\n    return\nt = int(input())\nfor test in range(t):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    sol(a)", "number_cases = int(input())\nfor _ in range(number_cases):\n    counter = 0\n    ans = 'YES'\n    list_len = int(input())\n    mylist = list(map(int, input().split()))\n    x = mylist\n    x.sort()\n    if x[0] == x[list_len - 1]:\n        print('NO')\n    else:\n        ethan = []\n        half_len = len(mylist) // 2\n        mylist.sort()\n        for n in range(0, half_len):\n            ethan.append(mylist[n])\n            ethan.append(mylist[list_len - n - 1])\n        if list_len % 2 != 0:\n            ethan.append(mylist[half_len])\n        print('YES')\n        print(' '.join(map(str, ethan)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    mina = 101\n    maxa = 0\n    for j in range(n):\n        x = a[j]\n        if x > maxa:\n            maxa = x\n        if x < mina:\n            mina = x\n    if mina == maxa:\n        print('NO')\n    else:\n        print('YES')\n        a.remove(maxa)\n        a.remove(mina)\n        print(maxa, mina, ' '.join(list(map(str, a))))", "import sys\nfor i in range(int(sys.stdin.readline())):\n    l = int(sys.stdin.readline())\n    ls = [int(a) for a in sys.stdin.readline().split()]\n    if [ls[0]] * l == ls:\n        print('NO')\n        continue\n    ls.sort()\n    ls = ls[::-1]\n    x = ls[0]\n    if ls[0] == ls[1]:\n        p = 1\n        while x == ls[p]:\n            p += 1\n        ls[0] = ls[p]\n        ls[p] = x\n    for j in range(l):\n        ls[j] = str(ls[j])\n    print('YES')\n    print(' '.join(ls))", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split(' ')]\n    arr.sort(reverse=True)\n    prev = 0\n    c = 0\n    while c < n - 1 and arr[c] == arr[c + 1]:\n        c += 1\n    if c == n - 1:\n        print('NO')\n    else:\n        arr = arr[c:] + arr[:c]\n        print('YES')\n        print(' '.join((str(x) for x in arr)))", "tc = int(input())\nfor i in range(tc):\n    n = int(input())\n    lt = list(map(int, input().split()))\n    lt = lt[::-1]\n    temp = lt[-1]\n    lt[-1] = lt[1]\n    lt[1] = temp\n    flag = True\n    lst = lt[:]\n    for j in range(1, n):\n        if lst[j] == lst[j - 1]:\n            flag = False\n            break\n        else:\n            lst[j] += lst[j - 1]\n    if flag:\n        print('YES')\n        print(' '.join(list(map(str, lt))))\n    else:\n        print('NO')", "def print_f(lista: list):\n    palabra = ''\n    for elemento in lista:\n        palabra += str(elemento) + ' '\n    print(palabra[:-1])\ncantidad = int(input())\nfor i in range(cantidad):\n    n = int(input())\n    lista_inicial = input().split(' ')\n    lista = list(map(lambda x: int(x), lista_inicial))\n    lista.sort(reverse=True)\n    if len(lista) == 1:\n        if lista[0] == 0:\n            print('NO')\n        else:\n            print('YES')\n            print_f(lista)\n    elif lista[0] == lista[1]:\n        if len(lista) <= 2:\n            print('NO')\n        elif lista[-1] == lista[0]:\n            print('NO')\n        else:\n            a = lista[0]\n            lista[0] = lista[-1]\n            lista[-1] = a\n            print('YES')\n            print_f(lista)\n    else:\n        print('YES')\n        print_f(lista)", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    st = set(lst)\n    a = str(lst[-1])\n    if len(st) == 1:\n        print('NO')\n    else:\n        a += ' '\n        for i in range(n - 1):\n            a += str(lst[i])\n            a += ' '\n        print('YES')\n        print(a)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    nums = sorted(list(map(int, input().split())), reverse=True)\n    (lst1, lst2) = ([], [])\n    for num in nums:\n        if not lst1 or lst1[-1] != num:\n            lst1.append(num)\n        else:\n            lst2.append(num)\n    lst = lst1 + lst2\n    if len(lst) > 1:\n        if lst[0] == lst[1]:\n            print('NO')\n        else:\n            print('YES')\n            print(' '.join(list(map(str, lst))))\n    else:\n        print('YES')\n        print(lst)", "import os\nimport math\nimport collections\nimport bisect\nimport functools\nimport itertools\nimport heapq\n\ndef solve(a, n):\n    if len(set(a)) == 1:\n        return []\n    a = sorted(a)[::-1]\n    return [a[0]] + [a[-1]] + a[1:-1]\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    res = solve(a, n)\n    if not res:\n        print('NO')\n    else:\n        print('YES')\n        print(' '.join(map(str, res)))", "a = input()\nfor i in range(int(a)):\n    n = int(input())\n    L = [int(x) for x in input().split(' ')]\n    L.sort(reverse=True)\n    tag = 'NO'\n    rem = None\n    for num in L:\n        if not rem:\n            rem = num\n        elif num != rem:\n            print('YES')\n            tag = 'YES'\n            break\n        else:\n            rem = num\n            tag = 'NO'\n    if tag == 'NO':\n        print('NO')\n    else:\n        t = 0\n        for num in L:\n            if num == L[0]:\n                t += 1\n            else:\n                break\n        newL = L[t - 1:] + L[:t - 1]\n        print(' '.join([str(x) for x in newL]))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    counter = arr.count(arr[0])\n    if counter == n:\n        print('NO')\n    else:\n        arr.sort()\n        ans = [0] * n\n        (low, high) = (0, n - 1)\n        ind = 0\n        while low < high:\n            ans[ind] = str(arr[low])\n            ind += 1\n            low += 1\n            ans[ind] = str(arr[high])\n            ind += 1\n            high -= 1\n        if low == high:\n            ans[ind] = str(arr[low])\n        print('YES')\n        print(' '.join(ans))", "for _ in range(int(input())):\n    n = int(input())\n    L = list(map(int, input().split()))\n    L = sorted(L)\n    L1 = []\n    i = 0\n    j = n - 1\n    for k in range(n):\n        if k % 2 == 0:\n            L1.append(L[i])\n            i += 1\n        else:\n            L1.append(L[j])\n            j -= 1\n    s = L1[0]\n    t = 0\n    for i in range(1, n):\n        if L1[i] == s:\n            print('NO')\n            t = 1\n            break\n        s += L1[i]\n    if t != 1:\n        print('YES')\n        print(' '.join(map(str, L1)))", "for s in [*open(0)][2::2]:\n    (*a, l) = s.split()\n    print(*(['NO'], ['YES\\n', l] + a)[l != a[0]])"]