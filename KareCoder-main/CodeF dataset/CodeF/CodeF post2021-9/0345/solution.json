["import sys\namountCases = int(sys.stdin.readline())\nfor case in range(amountCases):\n    size = int(sys.stdin.readline())\n    list = sys.stdin.readline().strip().split()\n    start = -1\n    end = -1\n    for i in range(len(list) - 1):\n        if list[i] == list[i + 1]:\n            end = i + 1\n            if start == -1:\n                start = i\n    minOp = end - start - 2\n    if end - start <= 1:\n        minOp = 0\n    if end - start == 2:\n        minOp = 1\n    sys.stdout.write(str(minOp) + '\\n')", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    w = input()[:-1].split()\n    (d, e) = (n, 0)\n    for i in range(1, n):\n        if w[i] == w[i - 1]:\n            d = i\n            break\n    for i in range(n - 2, d - 1, -1):\n        if w[i] == w[i + 1]:\n            e = i\n            break\n    print(max(0, e - d) if d != e else 1)", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    n = int(inp())\n    a = list(map(int, inp().split()))\n    m = n + 5\n    M = -1\n    for i in range(1, n):\n        if a[i] == a[i - 1]:\n            m = min(m, i)\n            M = i\n    if M < 0 or m == M:\n        print(0)\n    elif M - m <= 2:\n        print(1)\n    else:\n        print(M - m - 1)\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "import sys\nsys.setrecursionlimit(10000)\n\ndef read_line(f):\n    while True:\n        s = f.readline().strip()\n        if s:\n            return s\n\ndef read_list(f):\n    return [int(x) for x in read_line(f).split()]\n\ndef read_tuple(f):\n    return tuple(read_list(f))\n\ndef load_single_case(f):\n    read_line(f)\n    return read_list(f)\n\ndef load_cases(f):\n    n = int(f.readline())\n    cases = []\n    for _ in range(n):\n        yield load_single_case(f)\n    return cases\n\ndef solve(case):\n    ai = case\n    pf = None\n    pl = None\n    for i in range(len(ai) - 1):\n        if ai[i] == ai[i + 1]:\n            if pf is None:\n                pf = i + 1\n            pl = i\n    if pl is None or pl < pf:\n        return 0\n    return max(1, pl - pf)\n\ndef outcome_string(outcome):\n    return '{}'.format(outcome)\n\ndef save_outcomes(f, outcomes):\n    for (n, o) in enumerate(outcomes):\n        f.write('{}\\n'.format(outcome_string(o)))\n\ndef process(path_in=None, path_out=None):\n    if path_out is None and path_in is not None:\n        path_out = path_in.rsplit('.', 1)[0] + '.out'\n    f_in = open(path_in) if path_in else sys.stdin\n    f_out = open(path_out, 'w') if path_out else sys.stdout\n    try:\n        outcomes = [solve(c) for c in load_cases(f_in)]\n        save_outcomes(f_out, outcomes)\n    finally:\n        if path_in:\n            f_in.close()\n        if path_out:\n            f_out.close()\nprocess()", "def Input():\n    global l2\n    n = int(input())\n    l2 = []\n    for i in range(n):\n        t = int(input())\n        l = [int(x) for x in input().split()]\n        l2.append(l)\n\ndef main():\n    for i in l2:\n        ind1 = 0\n        ind2 = 0\n        for j in range(len(i) - 1):\n            if i[j] == i[j + 1]:\n                ind1 = j + 1\n                break\n        i = i[::-1]\n        for j in range(len(i) - 1):\n            if i[j] == i[j + 1]:\n                ind2 = len(i) - j - 2\n                break\n        if ind1 == 0:\n            print(0)\n        elif ind2 - ind1 == -1:\n            print(0)\n        elif ind2 == ind1:\n            print(1)\n        else:\n            print(ind2 - ind1)\nInput()\nmain()", "for i in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    c = 0\n    d = -1\n    e = -1\n    for j in range(1, a):\n        if b[j] == b[j - 1]:\n            c += 1\n            e = j\n            if d == -1:\n                d = j - 1\n    if c < 2:\n        print(0)\n    elif e - d < 4:\n        print(1)\n    else:\n        print(e - d - 2)", "t = int(input())\nout = ''\nfor _ in range(t):\n    size = int(input())\n    arr = [int(x) for x in input().split()]\n    first = -1\n    last = -1\n    for i in range(1, len(arr)):\n        if arr[i] == arr[i - 1]:\n            if first == -1:\n                first = i\n            else:\n                last = i - 1\n    if last == first and first != -1:\n        out += '1\\n'\n        continue\n    out += str(max(0, last - first)) + '\\n'\nprint(out)", "t = int(input())\nfor i in range(t):\n    l = int(input())\n    v = input().split()\n    j = 1\n    fi = -1\n    la = -1\n    while j < len(v):\n        if v[j - 1] == v[j]:\n            la = j - 1\n            if fi == -1:\n                fi = j - 1\n        j += 1\n    if fi == -1:\n        print(0)\n    elif fi == la:\n        print(0)\n    elif la == fi + 1:\n        print(1)\n    else:\n        print(la - fi - 1)", "def _NO():\n    print('NO')\n\ndef _YES():\n    print('YES')\n\ndef _int_list_input():\n    return list(map(int, input().split()))\n\ndef solve():\n    n = int(input())\n    a = _int_list_input()\n    first_double_idx = -1\n    last_double_idx = -1\n    for i in range(0, n - 1):\n        if a[i] == a[i + 1]:\n            if first_double_idx == -1:\n                first_double_idx = i\n            last_double_idx = i\n    if last_double_idx - first_double_idx < 2:\n        print(last_double_idx - first_double_idx)\n    else:\n        print(last_double_idx - first_double_idx - 1)\n\ndef main():\n    t = 1\n    t = int(input())\n    for _ in range(t):\n        solve()\nimport sys\nif sys.argv[0] in ['main.py']:\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nmain()", "t = int(input())\nres = []\n\ndef KT(arr):\n    k = 0\n    for i in range(len(arr) - 1):\n        if arr[i] == arr[i + 1]:\n            k = k + 1\n    return k\nfor i in range(t):\n    n = int(input())\n    inp = input().split()\n    a = [int(ai) for ai in inp]\n    if KT(a) <= 1:\n        res.append(0)\n    else:\n        firstFlag = 0\n        for ai in range(len(a) - 1):\n            if a[ai] == a[ai + 1]:\n                firstFlag = ai + 1\n                break\n        k = len(a) - 1\n        lastFlag = k\n        while k >= 0:\n            if a[k] == a[k - 1]:\n                lastFlag = k - 1\n                break\n            k = k - 1\n        if firstFlag == lastFlag:\n            res.append(1)\n        else:\n            res.append(lastFlag - firstFlag)\nfor item in res:\n    print(item)", "import math\nimport collections\nimport itertools\nimport functools\n\ndef fun(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    lo = -1\n    hi = 0\n    for i in range(1, n):\n        if a[i] == a[i - 1]:\n            lo = i - 1\n            break\n    for i in range(lo + 1, n):\n        if a[i] == a[i - 1]:\n            hi = i\n    if hi != lo + 1 and lo != -1:\n        print(max(1, hi - lo - 2))\n    else:\n        print('0')\nfor tc in range(int(input())):\n    fun(tc)", "t = int(input())\n\ndef solve(n, lst):\n    left_flag = False\n    right_flag = False\n    left_ind = -1\n    right_ind = -1\n    for i in range(len(lst) - 1):\n        if lst[i] == lst[i + 1]:\n            if left_flag == False:\n                left_flag = True\n                left_ind = i\n            else:\n                right_flag = True\n                right_ind = i\n    if right_flag == False:\n        return 0\n    elif right_ind - left_ind <= 2:\n        return 1\n    else:\n        return right_ind - left_ind - 1\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(n, a))", "import os\nimport sys\nfrom io import BytesIO, IOBase\nfrom collections import Counter, defaultdict\nfrom sys import stdin, stdout\nimport io\nimport math\nimport heapq\nimport bisect\nimport collections\n\ndef ceil(a, b):\n    return (a + b - 1) // b\ninf = float('inf')\n\ndef get():\n    return stdin.readline().rstrip()\nmod = 10 ** 5 + 7\nfor _ in range(int(get())):\n    n = int(get())\n    l = list(map(int, get().split()))\n    a = [-1, -1]\n    b = [-1, -1]\n    for i in range(n - 1):\n        if l[i] == l[i + 1]:\n            a[0] = i\n            a[1] = i + 1\n            break\n    for i in range(n - 1, 0, -1):\n        if l[i] == l[i - 1]:\n            b[0] = i - 1\n            b[1] = i\n            break\n    f = 0\n    x = 0\n    for j in range(a[0], b[1] + 1):\n        if l[j] != l[a[0]]:\n            f = 1\n        else:\n            x += 1\n    if a == b:\n        print(0)\n    elif f == 0:\n        if x - 2 == 1:\n            print(1)\n        else:\n            print(x - 3)\n    else:\n        print(b[0] - a[1])", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    A = list(map(int, input().split()))\n    (start, end) = (-1, -1)\n    for i in range(len(A) - 1):\n        if A[i] == A[i + 1]:\n            if end == -1:\n                start = i\n                end = i\n            else:\n                end = i\n    if end == start:\n        ans = 0\n    elif end - start == 1:\n        ans = 1\n    else:\n        ans = end - (start + 1)\n    print(ans)", "def res(a):\n    (l, r) = (None, None)\n    c = 0\n    for i in range(len(a) - 1):\n        if a[i] == a[i + 1]:\n            c += 1\n            if l is None:\n                l = i\n            else:\n                r = i\n    if c < 2:\n        return 0\n    else:\n        return r - l - 1 if r - 1 > l else 1\n\ndef main():\n    for _ in range(int(input())):\n        input()\n        a = list(map(int, input().split()))\n        print(res(a))\nmain()", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    m = list(map(int, input().split()))\n    ld = []\n    ls = []\n    a = 0\n    b = 0\n    s = 0\n    q = 0\n    d = 0\n    for i in range(n - 1):\n        if m[i] == m[i + 1]:\n            a = i + 1\n            break\n    if a == 0:\n        print(0)\n        continue\n    for i in range(n - 1, 0, -1):\n        if m[i - 1] == m[i]:\n            b = i - 1\n            break\n    if b <= a:\n        a -= 1\n    print(b - a)", "def check(x, y):\n    pairs_cou = 0\n    pairs = []\n    for i in range(0, x - 1):\n        if y[i] == y[i + 1]:\n            pairs_cou += 1\n            pairs.append([i, i + 1])\n    if pairs_cou < 2:\n        return '0'\n    else:\n        a = pairs[0][1]\n        b = pairs[-1][0]\n        c = b - a\n        if c == 0:\n            c += 1\n        return c\nt = int(input())\nfor i in range(t):\n    x = int(input())\n    y = list(map(int, input().split()))\n    print(check(x, y))", "def solve(a):\n    (left, right) = (-1, -1)\n    for i in range(len(a) - 1):\n        if a[i] == a[i + 1]:\n            left = i\n            break\n    for i in range(len(a) - 2, i, -1):\n        if a[i] == a[i + 1]:\n            right = i\n            break\n    if left > -1 and right > -1:\n        return max(right - left - 1, 1)\n    return 0\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(s) for s in input().split(' ')]\n    print(solve(a))", "def solve():\n    if n < 3:\n        return 0\n    left_ind = 0\n    right_ind = 0\n    for i in range(n - 1, 0, -1):\n        if arr[i] == arr[i - 1]:\n            right_ind = i - 1\n            break\n    if right_ind == 0:\n        return 0\n    for i in range(n - 1):\n        if arr[i] == arr[i + 1]:\n            left_ind = i + 1\n            break\n    if right_ind - left_ind == -1:\n        return 0\n    if right_ind - left_ind == 0:\n        return 1\n    res = right_ind - left_ind\n    return res\nT = int(input())\nfor t in range(T):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = solve()\n    print(ans)", "cases = int(input(''))\ntests = []\nfor i in range(0, cases):\n    l = int(input(''))\n    arr = [int(i) for i in input('').split(' ')]\n    tests.append((l, arr))\nfor (l, arr) in tests:\n    first_pair = None\n    second_pair = None\n    i = 0\n    j = 1\n    while True:\n        if j == l:\n            break\n        elif arr[i] != arr[j]:\n            i += 1\n            j += 1\n        else:\n            first_pair = (i, j)\n            break\n    i = l - 2\n    j = l - 1\n    while True:\n        if i < 0:\n            break\n        elif arr[i] != arr[j]:\n            i -= 1\n            j -= 1\n        else:\n            second_pair = (i, j)\n            break\n    if first_pair == second_pair or first_pair == None or second_pair == None:\n        print(0)\n        continue\n    else:\n        if second_pair[0] - first_pair[0] == 1:\n            print(1)\n            continue\n        print(second_pair[0] - first_pair[1])", "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    l = -1\n    r = -1\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            if l == -1:\n                l = i\n            r = i\n    if l == r:\n        print(0)\n    else:\n        print(max(1, r - l - 1))", "def solve():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    (left, right) = (-1, -1)\n    for i in range(1, n):\n        if a[i] == a[i - 1]:\n            if left == -1:\n                left = i\n            right = i\n    if left == right:\n        print(0)\n    else:\n        print(max(right - left - 1, 1))\nfor t in range(int(input())):\n    solve()", "from collections import Counter, deque\nfrom collections import OrderedDict, defaultdict\nimport math\nfrom random import randint\nfrom bisect import bisect, bisect_left\nimport sys\nimport re\nMOD = 10 ** 9 + 7\nMAX = -sys.maxsize\nMIN = sys.maxsize\n\nclass get:\n\n    def int():\n        return list(map(int, input().split()))\n\n    def str():\n        return input().split()\n\n    def float():\n        return list(map(float, input().split()))\n\n    def map():\n        return map(int, input().split())\n\ndef sqrt(x):\n    return int(math.sqrt(x)) + 1\n\ndef gcd(*args):\n    result = args[0]\n    for item in args:\n        result = math.gcd(result, item)\n    return result\n\ndef LCM(a, b):\n    return a * b // math.gcd(a, b)\n\ndef isPrime(n):\n    if n == 1:\n        return False\n    for i in range(2, sqrt(n)):\n        if n % i == 0:\n            return False\n    return True\n\ndef solve():\n    n = int(input())\n    A = get.int()\n    first = -1\n    last = -1\n    for i in range(n - 1):\n        if A[i] == A[i + 1]:\n            if first == -1:\n                first = i\n            last = i\n    if first == -1:\n        print(0)\n        return\n    x = last - first\n    if x == 0:\n        print(0)\n    elif x <= 2:\n        print(1)\n    else:\n        print(x - 1)\nt = int(input())\nfor tt in range(t):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = r = -1\n    for i in range(n - 1):\n        if a[i] == a[i + 1]:\n            if l == -1:\n                l = i\n            r = i\n    print(0 if l == r else max(1, r - l - 1))", "def solve(n, arr):\n    l = -1\n    r = -1\n    for i in range(n - 1):\n        if arr[i] == arr[i + 1]:\n            if l == -1:\n                l = i\n            r = i\n    if l == r:\n        return 0\n    return max(1, r - l - 1)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(solve(n, arr))", "x = int(input())\n\ndef cal(n, arr):\n    a = -1\n    for i in range(n - 1):\n        if arr[i] == arr[i + 1]:\n            a = i\n            break\n    if a == -1:\n        return 0\n    b = -1\n    for j in range(n - 2, -1, -1):\n        if arr[j] == arr[j + 1]:\n            b = j\n            break\n    if b == a:\n        return 0\n    if b - a == 1:\n        return 1\n    else:\n        return b - a - 1\nfor jj in range(x):\n    n = int(input())\n    arr = [int(i) for i in input().split(' ')]\n    print(cal(n, arr))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = []\n    x = 0\n    y = l[0]\n    for i in range(n):\n        if l[i] == y:\n            x = x + 1\n        else:\n            a.append(x)\n            x = 1\n            y = l[i]\n    a.append(x)\n    j = None\n    k = None\n    for i in range(len(a)):\n        if a[i] != 1:\n            j = i\n            break\n    for i in range(len(a) - 1, -1, -1):\n        if a[i] != 1:\n            k = n - (len(a) - i)\n            break\n    if k != None and j != None:\n        h = k - j + 1\n        if h == 1 or h == 2 or h == 0:\n            print(0)\n        elif h == 3:\n            print(1)\n        else:\n            print(h - 3)\n    else:\n        print(0)", "t = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = []\n    for i in range(0, n - 1):\n        if a[i] == a[i + 1]:\n            c.append(i)\n    if len(c) < 2:\n        print(0)\n    elif c[0] - c[-1] == -1:\n        print(1)\n    else:\n        print(c[-1] - 1 - c[0])", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    i = 0\n    while i < n - 1:\n        if l[i] == l[i + 1]:\n            break\n        i += 1\n    j = n - 1\n    while j > 0:\n        if l[j] == l[j - 1]:\n            break\n        j -= 1\n    if j - i < 2:\n        print(0)\n    elif j - i == 2 or j - i == 3:\n        print(1)\n    else:\n        print(j - i - 2)", "def _NO():\n    print('NO')\n\ndef _YES():\n    print('YES')\n\ndef _int_list_input():\n    return list(map(int, input().split()))\n\ndef solve():\n    n = int(input())\n    a = _int_list_input()\n    first_double_idx = -1\n    last_double_idx = -1\n    for i in range(0, n - 1):\n        if a[i] == a[i + 1]:\n            if first_double_idx == -1:\n                first_double_idx = i\n            last_double_idx = i\n    if last_double_idx == first_double_idx:\n        print(0)\n    else:\n        print(max(1, last_double_idx - first_double_idx - 1))\n\ndef main():\n    t = 1\n    t = int(input())\n    for _ in range(t):\n        solve()\nimport sys\nif sys.argv[0] in ['main.py']:\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nmain()", "for inh in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (st, en) = (-1, -1)\n    jj = False\n    for i in range(n - 1):\n        if a[i] == a[i + 1]:\n            if jj:\n                en = i\n            else:\n                st = i\n                en = i\n                jj = True\n    if st == en:\n        print(0)\n    else:\n        ans = en - st\n        if ans >= 2:\n            ans -= 1\n        print(ans)", "def ss(t, n):\n    mn = float('inf')\n    mx = -float('inf')\n    for i in range(n - 1):\n        if t[i] == t[i + 1]:\n            mn = min(mn, i)\n            mx = max(mx, i)\n    if mx - mn == 1:\n        return 1\n    return max(0, mx - mn - 1)\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(ss(l, n))", "loopcount = int(input())\nfor loop in range(loopcount):\n    a = int(input())\n    x = input()\n    x = x.split(' ')\n    x = list(map(int, x))\n    start = 0\n    end = 0\n    for i in range(a - 1):\n        if x[i] == x[i + 1]:\n            start = i\n            break\n    for i in range(a - 1, 1, -1):\n        if x[i] == x[i - 1]:\n            end = i\n            break\n    if end - start <= 1:\n        print(0)\n    else:\n        print(max(1, end - start - 2))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    pairs = []\n    for i in range(n - 1):\n        if a[i] == a[i + 1]:\n            pairs.append(i)\n    if len(pairs) <= 1:\n        print(0)\n    else:\n        ans = max(1, pairs[-1] - pairs[0] - 1)\n        print(ans)", "import sys\ns = int(input())\nfor i in range(s):\n    size = int(input())\n    arr = list(map(int, input().split()))\n    (l, r) = (-1, -1)\n    for i in range(1, size):\n        if arr[i] == arr[i - 1]:\n            if l == -1:\n                l = i\n            r = i\n    if l == r:\n        print(0)\n    else:\n        print(max(1, r - l - 1))", "for j in range(int(input())):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    highest = 0\n    found = False\n    for j in range(n - 1):\n        if nums[j] == nums[j + 1]:\n            if not found:\n                lowest = j + 1\n            highest = j\n            found = True\n    if not found:\n        print(0)\n        continue\n    if highest == lowest - 1:\n        print(0)\n        continue\n    if highest == lowest:\n        print(1)\n        continue\n    print(highest - lowest)", "for _ in range(int(input())):\n    N = int(input())\n    a = list(map(int, input().split()))\n    l = r = -1\n    for i in range(N - 1):\n        if a[i] == a[i + 1]:\n            if l == -1:\n                l = i\n            r = i\n    print(0 if l == r else max(1, r - l - 1))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = r = -1\n    for i in range(1, n):\n        if a[i - 1] == a[i]:\n            if l == -1:\n                l = i\n            r = i\n    if l == r:\n        print(0)\n        continue\n    print(max(1, r - l - 1))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = -1\n    y = -1\n    for i in range(1, n):\n        if a[i] == a[i - 1]:\n            if x == -1:\n                x = i\n            y = i\n    if x == y:\n        print(0)\n    else:\n        print(max(1, y - x - 1))", "for tc in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    st = []\n    for i in range(n - 1):\n        if arr[i] == arr[i + 1]:\n            st.append(i + 1)\n    if len(st) <= 1:\n        print(0)\n    else:\n        print(max(1, st[-1] - 1 - st[0]))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    l = -1\n    for j in range(n - 1):\n        if lst[j] == lst[j + 1]:\n            l = j\n            break\n    if l == -1:\n        print(0)\n    else:\n        lst1 = lst[::-1]\n        r = -1\n        for j in range(n - 1):\n            if lst1[j] == lst1[j + 1]:\n                r = j\n                break\n        r = n - r - 1\n        dif = r - l\n        if dif < 2:\n            print(0)\n        elif dif == 2:\n            print(1)\n        else:\n            d = dif - 2\n            c = d\n            print(c)", "T = int(input())\nfor case in range(T):\n    n = int(input())\n    a = map(int, input().strip().split())\n    first_duplicate = -1\n    last_duplicate = -1\n    found_first = False\n    prev = -1\n    for (i, ai) in enumerate(a):\n        if ai == prev:\n            last_duplicate = i\n            if not found_first:\n                first_duplicate = i\n                found_first = True\n        prev = ai\n    ops = 0\n    if first_duplicate != last_duplicate:\n        ops += max(last_duplicate - first_duplicate - 1, 1)\n    print(ops)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    points = [i for i in range(len(a) - 1) if a[i] == a[i + 1]]\n    if len(points) <= 1:\n        ans = 0\n    elif points[-1] - points[0] == 1:\n        ans = 1\n    else:\n        ans = points[-1] - points[0] - 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (pl, pr) = (None, None)\n    for i in range(n - 1):\n        if a[i] == a[i + 1]:\n            pl = i\n            break\n    for i in range(n - 1, 0, -1):\n        if a[i] == a[i - 1]:\n            pr = i\n            break\n    if pr != None and pl != None:\n        if pr - pl == 1:\n            print(0)\n        elif pr - pl == 2:\n            print(1)\n        else:\n            print(pr - pl - 2)\n    else:\n        print(0)", "import math\nfor t in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    ctr = 0\n    p = s[0]\n    st = 0\n    st_flag = True\n    en = 0\n    for i in range(1, len(s)):\n        if p == s[i]:\n            if st_flag:\n                st_flag = False\n                st = i - 1\n            en = i\n            ctr += 1\n        p = s[i]\n    if ctr >= 2:\n        if en - st == 2:\n            print(1)\n        else:\n            print(en - st - 2)\n    else:\n        print(0)", "test = int(input())\nfor i in range(test):\n    n = int(input())\n    string = str(input()).split(' ')\n    lst = []\n    for i in range(n):\n        if i < n - 1:\n            if string[i] == string[i + 1]:\n                lst.append(i + 1)\n    if len(lst) == 1:\n        print(0)\n    elif len(lst) == 0:\n        print(0)\n    elif max(lst) - min(lst) == 1:\n        print(1)\n    else:\n        print(max(lst) - min(lst) - 1)", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_ls():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        ls = get_ls()\n        eq = 0\n        for i in range(n - 1):\n            if ls[i] == ls[i + 1]:\n                eq += 1\n        (a, b) = (0, 0)\n        for i in range(n - 1):\n            if ls[i] == ls[i + 1]:\n                a = i + 1\n                break\n        for i in range(n - 1, 1, -1):\n            if ls[i] == ls[i - 1]:\n                b = i - 1\n                break\n        df = b - a\n        if df == 0:\n            df += 1\n        print(0 if eq <= 1 else df)\nmain()", "for iii in range(int(input())):\n    n = int(input())\n    q = list(map(int, input().split()))\n    start = 0\n    end = 0\n    for i in range(n - 1):\n        if q[i] == q[i + 1]:\n            start = i\n            break\n    for i in range(n - 1, 0, -1):\n        if q[i] == q[i - 1]:\n            end = i\n            break\n    if end - start + 1 == 3:\n        print(1)\n    else:\n        print(max(end - start + 1 - 3, 0))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    l = 0\n    r = n - 1\n    for i in range(n - 1):\n        if arr[i] == arr[i + 1]:\n            l += 1\n            break\n        else:\n            l += 1\n    for i in range(n - 1, 0, -1):\n        if arr[i] == arr[i - 1]:\n            r = r - 1\n            break\n        else:\n            r -= 1\n    if l == r:\n        print('1')\n    elif l < r:\n        print(r - l)\n    elif l == n - 1 and r == 0:\n        print('0')\n    else:\n        print('0')", "t = int(int(input()))\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = r = -1\n    for i in range(n - 1):\n        if a[i] == a[i + 1]:\n            if l == -1:\n                l = i\n            r = i\n    if l == r:\n        print(0)\n    else:\n        print(max(1, r - l - 1))", "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    l = -1\n    r = -1\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            if l == -1:\n                l = i\n            r = i\n    if l == r:\n        print(0)\n    else:\n        print(max(1, r - l - 1))", "a = int(input())\nfor i in range(a):\n    x = 0\n    y = 0\n    c = int(input())\n    d = input().split()\n    b = [*map(int, d)]\n    for j in range(c - 1):\n        if b[j] == b[j + 1]:\n            x = j + 1\n            break\n    for k in range(c - 1):\n        if b[c - k - 1] == b[c - k - 2]:\n            y = k + 1\n            break\n    if x + y == 0:\n        print(0)\n    elif c - x - y == 1 or c - x - y == 0:\n        print(c - x - y)\n    else:\n        print(c - x - y - 1)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    f = 0\n    b = 0\n    for i in range(N - 1):\n        if A[i] == A[i + 1]:\n            f = i\n            break\n    for i in range(N - 1, 0, -1):\n        if A[i] == A[i - 1]:\n            b = i\n            break\n    if b - f < 2:\n        print(0)\n    elif b - f == 2:\n        print(1)\n    else:\n        print(b - f - 2)", "for _ in range(int(input())):\n    N = int(input())\n    a = list(map(int, input().split()))\n    l = r = -1\n    for i in range(N - 1):\n        if a[i] == a[i + 1]:\n            if l == -1:\n                l = i\n            r = i\n    print(0 if l == r else max(1, r - l - 1))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    op = 0\n    j = []\n    for i in range(n - 1):\n        if a[i] == a[i + 1]:\n            j.append(i)\n    if len(j) > 1:\n        op = j[-1] - j[0]\n    else:\n        op = 0\n    if op > 1:\n        op = op - 1\n    print(op)", "t = int(input())\nfor q in range(t):\n    x = int(input())\n    a = [int(z) for z in input().split()]\n    for i in range(1, len(a)):\n        if a[i] == a[i - 1]:\n            break\n    for j in range(len(a) - 2, -1, -1):\n        if a[j] == a[j + 1]:\n            break\n    if i > j:\n        print(0)\n    elif i == j:\n        print(1)\n    else:\n        print(j - i)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    pairs = []\n    for i in range(n - 1):\n        if a[i] == a[i + 1]:\n            pairs.append(i)\n    if len(pairs) <= 1:\n        print(0)\n    else:\n        ans = max(1, pairs[-1] - pairs[0] - 1)\n        print(ans)", "for _ in range(int(input())):\n    N = int(input())\n    a = list(map(int, input().split()))\n    l = r = -1\n    for i in range(N - 1):\n        if a[i] == a[i + 1]:\n            if l == -1:\n                l = i\n            r = i\n    print(0 if l == r else max(1, r - l - 1))", "import math\nfor i in range(int(input())):\n    n = int(input())\n    A = [int(k) for k in input().split()]\n    a = -1\n    e = -1\n    for k in range(1, n):\n        if A[k] == A[k - 1]:\n            if a == -1:\n                a = k\n            e = k - 1\n    if a == -1:\n        print(0)\n    elif e + 1 == a:\n        print(0)\n    elif e == a:\n        print(1)\n    else:\n        print(e - a)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (l, r) = (-1, -1)\n    for i in range(n - 1):\n        if a[i] == a[i + 1]:\n            if l == -1:\n                l = i\n            r = i\n    print(0 if l == r else max(1, r - l - 1))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (l, r) = (-1, -1)\n    for i in range(n - 1):\n        if a[i] == a[i + 1]:\n            l = i\n            break\n    for i in range(n - 2, -1, -1):\n        if a[i] == a[i + 1]:\n            r = i\n            break\n    if l != r:\n        print(max(r - l - 1, 1))\n    else:\n        print(0)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (l, r) = (-1, -1)\n    for i in range(n - 1):\n        if a[i] == a[i + 1]:\n            if l == -1:\n                l = i\n            r = i\n    print(0 if l == r else max(1, r - l - 1))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = [a[i] == a[i + 1] for i in range(n - 1)]\n    try:\n        x0 = a.index(True)\n    except ValueError:\n        print(0)\n        continue\n    x1 = n - 2 - list(reversed(a)).index(True)\n    d = x1 - x0\n    if d == 0:\n        print(0)\n    elif d == 1:\n        print(1)\n    else:\n        print(d - 1)", "a = int(input())\nfor i in range(a):\n    b = int(input())\n    arr = input()\n    c = list(map(int, arr.split()))\n    j = 0\n    y = []\n    for k in range(b - 1):\n        if c[k] == c[k + 1]:\n            y.append(k)\n        else:\n            y = y\n    if len(y) <= 1:\n        print(0)\n    elif y[len(y) - 1] - y[0] - 1 == 0:\n        print(1)\n    else:\n        print(y[len(y) - 1] - y[0] - 1)", "t = int(input())\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    b = -1\n    l = -1\n    for i in range(n):\n        if b == -1 and i != n - 1 and (arr[i] == arr[i + 1]):\n            b = i\n        if i != 0 and arr[i] == arr[i - 1]:\n            l = i\n    if l == -1 or l == b + 1:\n        print(0)\n    else:\n        print(max(1, l - b - 2))\nfor _ in range(t):\n    solve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = 0\n    j = []\n    for i in range(n - 1):\n        if a[i] == a[i + 1]:\n            j.append(i)\n    if len(j) > 1:\n        p = j[-1] - j[0]\n    else:\n        p = 0\n    if p > 1:\n        p = p - 1\n    print(p)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = 0\n    j = []\n    for i in range(n - 1):\n        if a[i] == a[i + 1]:\n            j.append(i)\n    if len(j) > 1:\n        p = j[-1] - j[0]\n    else:\n        p = 0\n    if p > 1:\n        p = p - 1\n    print(p)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    first_i = -1\n    for i in range(n - 1):\n        if a[i] == a[i + 1]:\n            first_i = i\n            break\n    if first_i == -1:\n        print(0)\n        continue\n    last_i = first_i\n    for i in range(n - 1):\n        if a[i] == a[i + 1]:\n            last_i = i\n    if last_i == first_i:\n        print(0)\n        continue\n    if last_i == first_i + 1:\n        print(1)\n        continue\n    print(last_i - first_i - 1)", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (l, r) = (0, n - 1)\n    for i in range(n - 1):\n        if a[i] != a[i + 1]:\n            l += 1\n        else:\n            break\n    for i in range(n - 1, 0, -1):\n        if a[i] != a[i - 1]:\n            r -= 1\n        else:\n            break\n    nstochange = r - l - 1\n    if nstochange <= 0:\n        print(0)\n    else:\n        print(max(1, nstochange - 1))", "import math\n\ndef get_list():\n    return list(map(int, input().split()))\n\ndef get_int():\n    return int(input())\n\ndef out(output):\n    if output:\n        print('YES')\n    else:\n        print('NO')\nfor i in range(get_int()):\n    n = get_int()\n    l = get_list()\n    c = -1\n    start = 0\n    end = n\n    for (a, item) in enumerate(l):\n        if item == c:\n            start = a\n            break\n        c = item\n    c = -1\n    for (a, item) in enumerate(list(reversed(l))):\n        if item == c:\n            end = a\n            break\n        c = item\n    ans = n - end - start - 1\n    if ans == 0:\n        ans = 1\n    if ans < 0:\n        ans = 0\n    print(ans)", "def getMoves(nums):\n    pairs = []\n    for i in range(100, 0):\n        for j in range(100, 0):\n            j = i\n    for i in range(len(nums) - 1):\n        if nums[i] == nums[i + 1]:\n            pairs.append([i, i + 1])\n    if len(pairs) <= 1:\n        return 0\n    else:\n        startA = pairs[0][0]\n        startB = pairs[0][1]\n        endA = pairs[-1][0]\n        endB = pairs[-1][1]\n        if endA - startB == 0:\n            return 1\n        return endA - startB\nfor _ in range(int(input())):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    result = getMoves(nums)\n    print(result)", "def solve():\n    n = int(input())\n    l = 0\n    c = 10 ** 9\n    i = 0\n    a = list(map(int, input().split()))\n    while i < n - 1:\n        if a[i] == a[i + 1]:\n            c = min(c, i)\n            l = max(l, i)\n        i += 1\n    if c == l or c == 10 ** 9:\n        print(0)\n        return\n    if l - c < 3:\n        print(1)\n        return\n    else:\n        print(l - c - 1)\n        return\nfor ii in range(int(input())):\n    solve()", "for tt in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    op = 0\n    f = False\n    pair = []\n    for i in range(n - 1):\n        if a[i + 1] == a[i]:\n            pair.append(i)\n    if len(pair) <= 1:\n        op = 0\n    else:\n        op = pair[-1] - pair[0]\n        if op > 1:\n            op = op - 1\n    print(op)", "from collections import defaultdict\nfrom functools import lru_cache\nimport heapq\nfrom locale import resetlocale\nimport sys\nimport random\nimport math\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return s\n\ndef invr():\n    return map(int, input().split())\nT = inp()\n\ndef solve(nums):\n    stack = []\n    for i in range(len(nums) - 1):\n        if nums[i] == nums[i + 1]:\n            stack.append((nums[i], i))\n    if len(stack) < 2:\n        return 0\n    return max(stack[-1][1] - stack[0][1] - 1, 1)\nfor _ in range(T):\n    n = inp()\n    nums = inlt()\n    print(solve(nums))", "t = int(input())\nwhile t != 0:\n    t -= 1\n    n = int(input())\n    l = list(map(int, input().split()))\n    i = 0\n    n = len(l)\n    start = -1\n    while i < n - 1:\n        if l[i] == l[i + 1]:\n            start = i\n            break\n        i += 1\n    if start == -1:\n        print(0)\n        continue\n    end = -1\n    i = start + 1\n    while i < n - 1:\n        if l[i] == l[i + 1]:\n            end = i + 1\n        i += 1\n    if end == -1:\n        print(0)\n        continue\n    si = end - start + 1\n    if si <= 3:\n        print(si - 2)\n    else:\n        print(si - 3)", "x = int(input())\nfor i in range(x):\n    n = int(input())\n    s = input()\n    arr = [int(l) for l in s.split(' ')]\n    a = 0\n    b = 0\n    ans = 0\n    for j in range(1, n):\n        if arr[j] == arr[j - 1]:\n            a = j\n            break\n    arr.reverse()\n    for j in range(1, n):\n        if arr[j] == arr[j - 1]:\n            b = n - j\n            break\n    if b - a == 1:\n        ans = 1\n    elif b - a > 1:\n        ans = b - a - 1\n    print(ans)", "t = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    list1 = [int(num) for num in input().split()]\n    c = 0\n    first = 0\n    last = 0\n    c1 = 0\n    for i in range(0, len(list1) - 1):\n        if list1[i] == list1[i + 1]:\n            if c == 0:\n                first = i\n                c = 1\n            else:\n                last = i\n            c1 += 1\n    if c == 0 or c1 == 1:\n        print(0)\n    else:\n        diff = last - first - 1\n        if diff == 0:\n            print(1)\n        else:\n            print(diff)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    pairs = []\n    for i in range(n - 1):\n        if a[i] == a[i + 1]:\n            pairs.append(i)\n    if len(pairs) <= 1:\n        print(0)\n    else:\n        ans = max(1, pairs[-1] - pairs[0] - 1)\n        print(ans)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    start = None\n    end = None\n    for i in range(n - 1):\n        if l[i] == l[i + 1]:\n            if start == None:\n                start = i + 1\n                end = i\n            else:\n                end = i\n    if start == None:\n        print(0)\n    elif end - start < 0:\n        print(0)\n    elif start == end:\n        print(1)\n    else:\n        print(end - start)\n    t = t - 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    (j, k) = (0, 0)\n    for i in range(n - 1):\n        if a[i] == a[i + 1]:\n            count += 1\n            if count == 1:\n                j = i + 1\n            else:\n                k = i\n    if count <= 1:\n        print(0)\n        continue\n    if j == k:\n        print(1)\n    else:\n        print(k - j)", "for _ in range(int(input())):\n    (N, A) = (int(input()), list(map(int, input().split())))\n    a = -1\n    b = -1\n    if N > 2:\n        for i in range(N - 1):\n            if A[i] == A[i + 1]:\n                if b < 0:\n                    b = i\n                a = i\n    if a == b:\n        print(0)\n    else:\n        print(max(1, a - b - 1))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    num = [int(x) for x in map(int, input().split(' ', n - 1))]\n    l = []\n    for i in range(n - 1):\n        if num[i] == num[i + 1]:\n            l.append(i)\n    if len(l) <= 1:\n        print(0)\n    elif l[-1] - l[0] == 1:\n        print(1)\n    else:\n        print(l[-1] - l[0] - 1)", "for _ in range(int(input())):\n    N = int(input())\n    a = list(map(int, input().split()))\n    l = r = -1\n    for i in range(N - 1):\n        if a[i] == a[i + 1]:\n            if l == -1:\n                l = i\n            r = i\n    print(0 if l == r else max(1, r - l - 1))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    first = 0\n    last = 0\n    for i in range(n - 1):\n        if a[i] == a[i + 1]:\n            first = i\n            break\n    for i in range(n - 1):\n        if a[i] == a[i + 1]:\n            last = i + 1\n    ans = last - first\n    if ans == 2:\n        print(1)\n    elif ans > 2:\n        print(ans - 2)\n    else:\n        print(0)", "t = int(input())\nfor z in range(t):\n    n = int(input())\n    l = [int(i) for i in input().split(' ')]\n    r = []\n    p = 0\n    ans = 0\n    if n <= 2:\n        print(ans)\n    else:\n        for i in range(n - 1):\n            if l[i] == l[i + 1]:\n                r.append(i)\n        if len(r) == 1 or len(r) == 0:\n            ans = 0\n        else:\n            p = r[-1] - r[0]\n            if p == 1:\n                ans = 1\n            else:\n                ans = p - 1\n        print(ans)", "for i in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    ans = []\n    for i in range(n - 1):\n        if arr[i] == arr[i + 1]:\n            ans.append(i)\n    if len(ans) <= 1:\n        print(0)\n    elif max(ans) - min(ans) == 1:\n        print(1)\n    else:\n        print(max(ans) - min(ans) - 1)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    l = -1\n    m = -1\n    for i in range(1, n):\n        if arr[i] == arr[i - 1]:\n            if m == -1:\n                m = i\n            l = i\n    if l == m:\n        print(0)\n    else:\n        print(max(1, l - m - 1))\n    t = t - 1", "import collections\nimport math\nimport sys\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    mn = 2 ** 100\n    mx = 0\n    for i in range(n - 1):\n        if a[i] == a[i + 1]:\n            mn = min(mn, i)\n            mx = max(mx, i)\n    if mn == mx or mn == 2 ** 100:\n        print(0)\n    elif mx - mn < 3:\n        print(1)\n    else:\n        print(mx - mn - 1)\nt = int(input())\nwhile t > 0:\n    main()\n    t -= 1", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = 0\n    s1 = -1\n    s2 = -1\n    for j in range(n - 1):\n        if l[j] == l[j + 1]:\n            s += 1\n    if s < 2:\n        print(0)\n        continue\n    for j in range(n - 1):\n        if l[j] == l[j + 1]:\n            s1 = j\n            break\n    for j in range(n - 1, 0, -1):\n        if l[j] == l[j - 1]:\n            s2 = j\n            break\n    if s2 - s1 == 2:\n        print(1)\n        continue\n    print(s2 - s1 - 2)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    last = -1\n    pair = 0\n    for i in range(n - 1):\n        if l[i] == l[i + 1]:\n            last = i + 1\n            pair += 1\n    if last == -1 or pair == 1:\n        print(0)\n        continue\n    for i in range(last):\n        if l[i] == l[i + 1]:\n            if last - i >= 3:\n                print(last - i - 2)\n            else:\n                print(1)\n            break", "p = int(input())\nfor i in range(0, p):\n    n = int(input())\n    start = 0\n    end = 0\n    a = list(map(int, input().split()))\n    for j in range(0, n - 1):\n        if a[j] == a[j + 1]:\n            start = j\n            break\n    for j in range(start, n - 1):\n        if a[j] == a[j + 1]:\n            end = j + 1\n    x = end - start + 1\n    if x > 3:\n        print(x - 3)\n    elif x == 3:\n        print(1)\n    else:\n        print(0)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = -1\n    l = -1\n    for i in range(n):\n        if i + 1 < n and a[i] == a[i + 1]:\n            if f == -1:\n                f = i + 1\n            l = i\n    if f == -1 or f > l:\n        print(0)\n    elif l == f:\n        print(1)\n    else:\n        print(l - f)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    a1 = []\n    ct = 1\n    x = 0\n    for i in range(n - 1):\n        if a[i] == a[i + 1]:\n            ct += 1\n            x = i\n            break\n        else:\n            if ct != 1:\n                a1.append(ct)\n            ct = 1\n    ct = 0\n    y = 0\n    for i in range(n - 1, 0, -1):\n        if a[i] == a[i - 1]:\n            ct += 1\n            y = i\n            break\n        else:\n            if ct != 1:\n                a1.append(ct)\n            ct = 1\n    if x == 0 and y == 0:\n        print(0)\n    elif y - x + 1 == 2:\n        print(0)\n    elif y - x + 1 == 3 or y - x + 1 == 4:\n        print(1)\n    else:\n        print(y - x + 1 - 3)", "for _ in range(int(input())):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    mn = n\n    mx = 0\n    for i in range(n - 1):\n        if ls[i] == ls[i + 1]:\n            mn = min(mn, i)\n            mx = max(mx, i)\n    c = mx - mn\n    if c < 1:\n        print(0)\n    elif c < 3:\n        print(1)\n    else:\n        print(c - 1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    st = -1\n    en = -1\n    for i in range(n - 1):\n        if a[i] == a[i + 1]:\n            if st == -1:\n                st = i\n            en = i\n    if st == en:\n        print(0)\n    else:\n        print(max(1, en - st - 1))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    lst = n - 2\n    for i in range(n - 2, -1, -1):\n        if arr[i] == arr[i + 1]:\n            lst = i\n            break\n    cnt = 0\n    for i in range(n - 1):\n        if arr[i] == arr[i + 1]:\n            if i == lst:\n                break\n            elif i + 1 == lst:\n                cnt = 1\n                break\n            else:\n                cnt = lst - i - 1\n                break\n    print(cnt)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    need = 0\n    for i in range(n - 1):\n        if a[i] == a[i + 1]:\n            need += 1\n        if need == 2:\n            break\n    if need == 0 or need == 1:\n        print(0)\n    else:\n        op = 0\n        s = 0\n        e = 0\n        for i in range(n - 1):\n            if a[i] == a[i + 1]:\n                s = i\n                break\n        for i in range(n - 1, 0, -1):\n            if a[i] == a[i - 1]:\n                e = i\n                break\n        print(max(1, e - s - 2))", "import sys\n\ndef unequal():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    mi = 2 ** 200\n    ma = 0\n    for j in range(n - 1):\n        if arr[j] == arr[j + 1]:\n            mi = min(mi, j)\n            ma = max(ma, j)\n    if mi == ma or mi == 2 ** 200:\n        print(0)\n    elif ma - mi < 3:\n        print(1)\n    else:\n        print(ma - mi - 1)\nt = int(input())\nwhile t > 0:\n    unequal()\n    t = t - 1", "from collections import defaultdict\nimport math as m\n\ndef get2int():\n    p = input().split()\n    return (int(p[0]), int(p[1]))\n\ndef get3int():\n    p = input().split()\n    return (int(p[0]), int(p[1]), int(p[2]))\n\ndef cinarr():\n    arr = []\n    for i in input().split():\n        arr.append(int(i))\n    return arr\n\ndef getParity(n):\n    parity = 0\n    while n:\n        parity = ~parity\n        n = n & n - 1\n    return parity\n\ndef solve():\n    n = int(input())\n    s = cinarr()\n    l = n\n    r = 0\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            l = min(l, i)\n            r = max(r, i)\n    if l == r or l == n:\n        return 0\n    elif r - l < 3:\n        return 1\n    else:\n        return r - l - 1\nfor case in range(int(input())):\n    print(solve())"]