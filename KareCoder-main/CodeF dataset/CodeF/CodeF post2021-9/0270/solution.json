["for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    a = [i for i in range(n) if s[i] == '2']\n    if len(a) in (1, 2):\n        print('NO')\n    else:\n        g = [['='] * n for _ in range(n)]\n        for i in range(n):\n            g[i][i] = 'X'\n        if a:\n            a.append(a[0])\n            for i in range(len(a) - 1):\n                g[a[i]][a[i + 1]] = '+'\n                g[a[i + 1]][a[i]] = '-'\n        print('YES')\n        for v in g:\n            print(''.join(v))", "for p in range(int(input())):\n    (n, l) = (int(input()), list(input()))\n    (d, a) = ([x for x in range(n) if l[x] == '2'], [])\n    if d:\n        (x, y) = (d[0], d[-1])\n        if x == y or len(d) < 3:\n            print('NO')\n            continue\n    else:\n        (x, y) = (-1, -1)\n    for p in range(n):\n        if l[p] == '1':\n            r = ['='] * n\n            r[p] = 'X'\n        elif p == x:\n            r = ['+' if x in d else '=' for x in range(n)]\n            r[p] = 'X'\n            r[y] = '-'\n        elif p == y:\n            r = ['-' if x in d else '=' for x in range(n)]\n            r[p] = 'X'\n            r[x] = '+'\n        else:\n            r = ['='] * n\n            r[p] = 'X'\n            r[y] = '+'\n            r[x] = '-'\n        a.append(r)\n    print('YES')\n    [print(''.join(x)) for x in a]", "tc = int(input())\nfor t in range(tc):\n    n = int(input())\n    e = input()\n    draws = e.count('1')\n    win_ones = e.count('2')\n    win_inds = []\n    for i in range(len(e)):\n        if e[i] == '2':\n            win_inds.append(i)\n    if win_ones <= 2 and win_ones != 0:\n        print('NO')\n    else:\n        print('YES')\n        ans = []\n        for i in range(n):\n            ans.append(['='] * n)\n            ans[i][i] = 'X'\n        for i in range(len(win_inds)):\n            current_win_ind = win_inds[i]\n            if i == len(win_inds) - 1:\n                next_win_ind = win_inds[0]\n            else:\n                next_win_ind = win_inds[i + 1]\n            ans[current_win_ind][next_win_ind] = '+'\n            ans[next_win_ind][current_win_ind] = '-'\n        for line in ans:\n            print(''.join(line))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = list(map(int, list(input())))\n    answer = [['='] * n for i in range(n)]\n    for i in range(n):\n        answer[i][i] = 'X'\n    twos = [idx for (idx, val) in enumerate(s) if val == 2]\n    if len(twos) == 0:\n        print('YES')\n    elif len(twos) in [1, 2]:\n        print('NO')\n        continue\n    else:\n        print('YES')\n        for i in range(1, len(twos)):\n            answer[twos[i - 1]][twos[i]] = '+'\n            answer[twos[i]][twos[i - 1]] = '-'\n        answer[twos[-1]][twos[0]] = '+'\n        answer[twos[0]][twos[-1]] = '-'\n    for row in answer:\n        print(''.join(row))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    players = input()\n    list_2 = []\n    for (j, player) in enumerate(players):\n        if player == '2':\n            list_2.append(j)\n    if len(list_2) == 1 or len(list_2) == 2:\n        print('NO')\n    else:\n        print('YES')\n        games = [['=' for x in range(n)] for x in range(n)]\n        for j in range(n):\n            games[j][j] = 'X'\n        for (j, two) in enumerate(list_2):\n            other = j + 1\n            if j + 1 == len(list_2):\n                other = 0\n            games[two][list_2[other]] = '+'\n            games[list_2[other]][two] = '-'\n        print('\\n'.join([''.join(l) for l in games]))", "t = int(input())\nfor aslkdjaskdj in range(t):\n    n = int(input())\n    z = input()\n    c1 = z.count('1')\n    l = []\n    for i in range(n):\n        l.append(['='] * n)\n    for i in range(n):\n        l[i][i] = 'X'\n    if n - c1 == 0:\n        print('YES')\n        for i in l:\n            print(''.join(i))\n    elif n - c1 > 2:\n        l1 = []\n        for i in range(n):\n            if z[i] == '2':\n                l1.append(i)\n        for i in range(len(l1)):\n            try:\n                l[l1[i]][l1[i + 1]] = '+'\n                l[l1[i + 1]][l1[i]] = '-'\n            except:\n                l[l1[i]][l1[0]] = '+'\n                l[l1[0]][l1[i]] = '-'\n        print('YES')\n        for i in l:\n            print(''.join(i))\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    pref = list(map(int, list(input())))\n    table = [['='] * n for __ in range(n)]\n    for k in range(n):\n        table[k][k] = 'X'\n    if 0 < pref.count(2) <= 2:\n        print('NO')\n    else:\n        print('YES')\n        pref2 = []\n        if pref.count(2) > 2:\n            for i in range(len(pref)):\n                if pref[i] == 2:\n                    pref2.append(i)\n            for j in range(len(pref2) - 1):\n                table[pref2[j]][pref2[j + 1]] = '+'\n                table[pref2[j + 1]][pref2[j]] = '-'\n            table[pref2[-1]][pref2[0]] = '+'\n            table[pref2[0]][pref2[-1]] = '-'\n        for line in table:\n            print(''.join(line))", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    matrix = [['='] * n for i in range(n)]\n    for i in range(n):\n        matrix[i][i] = 'X'\n    exp = input()\n    done = False\n    for c in range(n):\n        if exp[c] == '2':\n            for i in range(n):\n                if c != i and exp[i] == '2' and (matrix[i][c] == '='):\n                    matrix[i][c] = '-'\n                    matrix[c][i] = '+'\n                    break\n            else:\n                done = True\n                print('NO')\n    if not done:\n        print('YES')\n        for line in matrix:\n            print(''.join(line))", "t = int(input())\nfrom collections import Counter\nfor i in range(t):\n    n = int(input())\n    ex = list(input())\n    ans = [['='] * n for m in range(n)]\n    c = Counter(ex)\n    if c['2'] == 1 or c['2'] == 2:\n        print('NO')\n        continue\n    print('YES')\n    for j in range(0, n):\n        ans[j][j] = 'X'\n    for j in range(0, n):\n        if ex[j] == '2':\n            for k in range(j + 1, n + j):\n                if ex[k % n] == '2':\n                    ans[j][k % n] = '+'\n                    ans[k % n][j] = '-'\n                    break\n    for j in range(n):\n        print(''.join(ans[j]))", "for x in range(int(input())):\n    n = int(input())\n    a = input()\n    l = [['=' for j in range(n)] for i in range(n)]\n    s = []\n    for i in range(n):\n        if a[i] == '2':\n            s.append(i)\n    if 0 < len(s) <= 2:\n        print('NO')\n    else:\n        print('YES')\n        m = len(s)\n        for i in range(n):\n            l[i][i] = 'X'\n        for i in range(m):\n            l[s[i]][s[(i + 1) % m]] = '+'\n            l[s[(i + 1) % m]][s[i]] = '-'\n        for i in l:\n            print(''.join(i))", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    s = input().strip()\n    cnt = 0\n    d = set()\n    others = []\n    for i in range(n):\n        if s[i] == '1':\n            cnt += 1\n            d.add(i)\n        elif len(others) < 3:\n            others.append(i)\n    if cnt == n:\n        print('YES')\n        arr = ['='] * n\n        for i in range(n):\n            arr[i] = 'X'\n            print(''.join(arr))\n            arr[i] = '='\n    elif n - cnt >= 3:\n        print('YES')\n        arr = ['='] * n\n        arr2 = ['-'] * n\n        for j in d:\n            arr2[j] = '='\n        idx = 1\n        for i in range(n):\n            if i in d:\n                arr[i] = 'X'\n                print(''.join(arr))\n                arr[i] = '='\n            elif idx < 4:\n                arr2[i] = 'X'\n                arr2[others[idx % len(others)]] = '+'\n                print(''.join(arr2))\n                arr2[others[idx % len(others)]] = '-'\n                idx += 1\n                arr2[i] = '-'\n            else:\n                ans = list('+' * i + 'X' + '-' * (n - i - 1))\n                for j in d:\n                    ans[j] = '='\n                print(''.join(ans))\n    else:\n        print('NO')\n    return\nfor _ in range(int(input())):\n    main()", "for _ in [0] * int(input()):\n    n = int(input())\n    s = input()\n    if s.count('2') in [1, 2]:\n        print('NO')\n        continue\n    a = [list('=' * i + 'X' + '=' * (n - i - 1)) for i in range(n)]\n    b = [i for i in range(n) if s[i] == '2']\n    k = len(b)\n    for i in range(k):\n        (a[b[i]][b[(i + 1) % k]], a[b[(i + 1) % k]][b[i]]) = ('+', '-')\n    print('YES')\n    for i in a:\n        print(''.join(i))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    t1 = [i for (i, c) in enumerate(s) if c == '1']\n    t2 = [i for (i, c) in enumerate(s) if c == '2']\n    if 1 <= len(t2) <= 2:\n        print('NO')\n        continue\n    d = {}\n    ans = [['=' for _ in range(n)] for _ in range(n)]\n    for i in range(n):\n        ans[i][i] = 'X'\n    m = len(t2)\n    for i in range(m):\n        ans[t2[i]][t2[(i + 1) % m]] = '+'\n        ans[t2[(i + 1) % m]][t2[i]] = '-'\n    print('YES')\n    print('\\n'.join((''.join(r) for r in ans)))", "from itertools import compress\n\ndef main():\n    in_n = int(input())\n    for _ in range(in_n):\n        inlines = []\n        for _ in range(2):\n            inlines.append(input().rstrip())\n        n = int(inlines[0])\n        row = [int(ch) - 1 for ch in inlines[1]]\n        if sum(row) < 3 and sum(row) > 0:\n            print('NO')\n        else:\n            print('YES')\n            matrix = []\n            winners = list(compress(range(len(row)), row))\n            for (i, player) in enumerate(row):\n                plstr = list('=' * n)\n                plstr[i] = 'X'\n                matrix.append(plstr)\n            if sum(row) > 0:\n                for (i, winner) in enumerate(winners):\n                    if i == len(winners) - 1:\n                        loser = winners[0]\n                    else:\n                        loser = winners[i + 1]\n                    matrix[loser][winner] = '-'\n                    matrix[winner][loser] = '+'\n            for m in matrix:\n                empt = ''\n                print(empt.join(m))\nmain()", "n = int(input())\nfor i in range(n):\n    length = int(input())\n    string = input()\n    if '2' in string and string.count('2') <= 2:\n        print('NO')\n        continue\n    print('YES')\n    ans = [['=' for _ in range(length)] for _ in range(length)]\n    for j in range(length):\n        ans[j][j] = 'X'\n    first = string.find('2')\n    index = first\n    if '2' in string:\n        for j in range(length):\n            index1 = string.find('2', index + 1)\n            if index1 == -1:\n                ans[index][first] = '+'\n                ans[first][index] = '-'\n            else:\n                ans[index][index1] = '+'\n                ans[index1][index] = '-'\n            index = index1\n    for j in range(length):\n        print(''.join(ans[j]))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    c2 = s.count('2')\n    if c2 and c2 < 3:\n        print('NO')\n    else:\n        min2 = None\n        print('YES')\n        a = [['='] * n for _ in range(n)]\n        for i in range(n):\n            a[i][i] = 'X'\n            if s[i] == '2':\n                if min2 is None:\n                    min2 = i\n                found2 = False\n                for j in range(i + 1, n):\n                    if s[j] == '2':\n                        found2 = True\n                        a[i][j] = '+'\n                        a[j][i] = '-'\n                        break\n                if not found2:\n                    a[i][min2] = '+'\n                    a[min2][i] = '-'\n        for i in a:\n            print(''.join(i))", "def int_input():\n    a = int(input())\n    return a\n\ndef int_list_input():\n    a = list(map(int, input().split()))\n    return a\n\ndef solve():\n    n = int(input())\n    s = input()\n    l = []\n    ans = [['=' for _ in range(n)] for _ in range(n)]\n    for i in range(n):\n        if s[i] != '1':\n            l.append(i)\n    if len(l) == 1 or len(l) == 2:\n        print('NO')\n        return\n    print('YES')\n    for i in range(n):\n        ans[i][i] = 'X'\n    for i in range(len(l)):\n        if i == len(l) - 1:\n            ans[l[i]][l[0]] = '+'\n            ans[l[0]][l[i]] = '-'\n        else:\n            ans[l[i + 1]][l[i]] = '-'\n            ans[l[i]][l[i + 1]] = '+'\n    for row in ans:\n        print(''.join(row))\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    l = [['=' for i in range(n)] for j in range(n)]\n    for i in range(n):\n        l[i][i] = 'X'\n    a = []\n    for i in range(n):\n        if s[i] == '2':\n            a.append(i)\n    if 0 < len(a) <= 2:\n        print('NO')\n    else:\n        print('YES')\n        m = len(a)\n        for i in range(m):\n            (l[a[i]][a[(i + 1) % m]], l[a[(i + 1) % m]][a[i]]) = ('+', '-')\n        for i in l:\n            print(''.join(i))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    res = [['=' for j in range(n)] for i in range(n)]\n    for i in range(n):\n        res[i][i] = 'X'\n    arr = []\n    for i in range(n):\n        if s[i] == '2':\n            arr.append(i)\n    if 0 < len(arr) <= 2:\n        print('NO')\n    else:\n        print('YES')\n        x = len(arr)\n        for i in range(x):\n            (res[arr[i]][arr[(i + 1) % x]], res[arr[(i + 1) % x]][arr[i]]) = ('+', '-')\n        for i in res:\n            print(''.join(i))", "t = input()\nfor k in range(int(t)):\n    n = int(input())\n    m = input()\n    if m.count('2') in [2, 1]:\n        print('NO')\n    else:\n        s = dict()\n        for i in range(n):\n            s[i] = ['='] * n\n            s[i][i] = 'X'\n        w = int()\n        q = int()\n        if '2' in m:\n            w = m.index('2')\n            q = w\n            for i in range(w + 1, n):\n                if m[i] == '2':\n                    s[w][i] = '+'\n                    s[i][w] = '-'\n                    w = i\n            s[w][q] = '+'\n            s[q][w] = '-'\n        print('YES')\n        for i in range(n):\n            print(''.join(s[i]))", "def sol():\n    n = int(input())\n    s = input()\n    matrix = [['='] * n for i in range(n)]\n    wygrac = []\n    for i in range(n):\n        if s[i] == '1':\n            matrix[i][i] = 'X'\n        else:\n            matrix[i][i] = 'X'\n            wygrac.append(i)\n    for ind in wygrac:\n        stan = 0\n        for u in range(n):\n            if u != ind and matrix[u][ind] == '=' and (s[u] != '1'):\n                stan = 1\n                matrix[u][ind] = '-'\n                matrix[ind][u] = '+'\n                break\n        if not stan:\n            print('NO')\n            return\n    print('YES')\n    for i in range(n):\n        print(''.join(matrix[i]))\n\ndef main():\n    for i in range(int(input())):\n        sol()\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    n_twos = 0\n    two_indices = []\n    for i in range(n):\n        if s[i] == '2':\n            n_twos += 1\n            two_indices.append(i)\n    if n_twos == 1 or n_twos == 2:\n        print('NO')\n        continue\n    print('YES')\n    m = [['='] * n for _ in range(n)]\n    for i in range(n):\n        m[i][i] = 'X'\n    for i in range(len(two_indices)):\n        m[two_indices[i]][two_indices[(i + 1) % len(two_indices)]] = '+'\n        m[two_indices[(i + 1) % len(two_indices)]][two_indices[i]] = '-'\n    for l in m:\n        print(''.join(l))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    two_count = s.count('2')\n    one_count = s.count('1')\n    games = n - 1\n    draws = one_count\n    if two_count:\n        if two_count == 1 or games - one_count < 2:\n            print('NO')\n            continue\n    mat = [['='] * n for _ in range(n)]\n    for r in range(n):\n        mat[r][r] = 'X'\n    two_inds = []\n    for i in range(n):\n        if s[i] == '2':\n            two_inds.append(i)\n    size = len(two_inds)\n    for (i, ind) in enumerate(two_inds):\n        other = two_inds[(i + 1) % size]\n        mat[ind][other] = '+'\n        mat[other][ind] = '-'\n    print('YES')\n    for row in mat:\n        print(''.join(row))", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    exp = list(input())\n    res = []\n    annoy = [x for x in range(n) if exp[x] == '2']\n    if annoy:\n        first = annoy[0]\n        last = annoy[-1]\n        if first == last or len(annoy) < 3:\n            print('NO')\n            continue\n    else:\n        first = -1\n        last = -1\n    lastRow = []\n    for p in range(n):\n        if exp[p] == '1':\n            row = ['='] * n\n            row[p] = 'X'\n        elif p == first:\n            row = ['+' if x in annoy else '=' for x in range(n)]\n            row[p] = 'X'\n            row[last] = '-'\n        elif p == last:\n            row = ['-' if x in annoy else '=' for x in range(n)]\n            row[p] = 'X'\n            row[first] = '+'\n        else:\n            row = ['='] * n\n            row[p] = 'X'\n            row[last] = '+'\n            row[first] = '-'\n        res.append(row)\n    print('YES')\n    [print(''.join(x)) for x in res]", "def solve(n, l):\n    twoCount = l.count('2')\n    if twoCount > 0 and twoCount < 3:\n        print('NO')\n        return 0\n    print('YES')\n    ans = [['=' for i in range(n)] for j in range(n)]\n    twos = []\n    for i in range(n):\n        if l[i] == '1':\n            ans[i] = ['='] * n\n        else:\n            twos.append(i)\n    if not len(twos) == 0:\n        for i in range(len(twos) - 1):\n            ans[twos[i]][twos[i + 1]] = '+'\n            ans[twos[i + 1]][twos[i]] = '-'\n        ans[twos[0]][twos[-1]] = '-'\n        ans[twos[-1]][twos[0]] = '+'\n    for i in range(n):\n        ans[i][i] = 'X'\n    for i in range(n):\n        print(''.join(ans[i]))\nt = int(input())\nfor case in range(t):\n    n = int(input())\n    l = list(input())\n    solve(n, l)", "for u in range(int(input())):\n    n = int(input())\n    a = input()\n    l = [['=' for j in range(n)] for i in range(n)]\n    for i in range(n):\n        l[i][i] = 'X'\n    s = []\n    for i in range(n):\n        if a[i] == '2':\n            s.append(i)\n    if 0 < len(s) <= 2:\n        print('NO')\n    else:\n        print('YES')\n        m = len(s)\n        for i in range(m):\n            (l[s[i]][s[(i + 1) % m]], l[s[(i + 1) % m]][s[i]]) = ('+', '-')\n        for i in l:\n            print(''.join(i))", "for _ in range(int(input())):\n    (n, s) = (int(input()), input())\n    p = [*filter(lambda i: s[i] == '2', range(n))]\n    if 0 < len(p) < 3:\n        print('NO')\n        continue\n    print('YES')\n    a = [['='] * n for i in range(n)]\n    for i in range(n):\n        a[i][i] = 'X'\n    for i in range(-1, len(p) - 1):\n        (x, y) = (p[i], p[i + 1])\n        (a[x][y], a[y][x]) = ('+', '-')\n    for i in a:\n        print(''.join(i))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    res = [['=' for i in range(n)] for j in range(n)]\n    for i in range(n):\n        res[i][i] = 'X'\n    a = []\n    for i in range(n):\n        if s[i] == '2':\n            a.append(i)\n    if 0 < len(a) <= 2:\n        print('NO')\n    else:\n        print('YES')\n        l = len(a)\n        for i in range(l):\n            (res[a[i]][a[(i + 1) % l]], res[a[(i + 1) % l]][a[i]]) = ('+', '-')\n        for i in res:\n            print(''.join(i))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    g2 = [*filter(lambda x: s[x] == '2', range(n))]\n    if 0 < len(g2) < 3:\n        print('NO')\n        continue\n    print('YES')\n    r = [n * ['='] for i in range(n)]\n    for i in range(n):\n        r[i][i] = 'X'\n    for i in range(-1, len(g2) - 1):\n        (j, k) = (g2[i], g2[i + 1])\n        r[j][k] = '+'\n        r[k][j] = '-'\n    for i in r:\n        print(''.join(i))", "def solve(n, s):\n    M = [['='] * n for i in range(n)]\n    for i in range(n):\n        M[i][i] = 'X'\n    c = 0\n    A = []\n    for i in range(n):\n        if int(s[i]) == 2:\n            c += 1\n            A.append(i)\n    if c == 1 or c == 2:\n        print('NO')\n        return\n    if c != 0:\n        m = len(A)\n        for x in range(m - 1):\n            i = A[x]\n            j = A[x + 1]\n            M[i][j] = '+'\n            M[j][i] = '-'\n        i = A[m - 1]\n        j = A[0]\n        M[i][j] = '+'\n        M[j][i] = '-'\n    print('YES')\n    for i in M:\n        print(''.join(i))\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    solve(n, s)", "for q_ in range(int(input())):\n    n = int(input())\n    mat = [['X' if i == j else '=' for j in range(n)] for i in range(n)]\n    canlose = set()\n    canwin = set()\n    s = input()\n    for i in range(n):\n        if s[i] == '2':\n            if n > 2:\n                canlose.add(i)\n            canwin.add(i)\n    err = False\n    n = 0\n    while len(canwin) > 0:\n        u = canwin.pop()\n        v = next((x for x in canlose if mat[u][x] == '='), None)\n        if v == None:\n            n += 1\n            v = next((i for (i, x) in enumerate(mat[u]) if x == '-'), None)\n            if v == None or n > 100:\n                err = True\n                break\n            canwin.add(v)\n        mat[u][v] = '+'\n        mat[v][u] = '-'\n    if err:\n        print('NO')\n    else:\n        print('YES', '\\n'.join((''.join(l) for l in mat)), sep='\\n')", "t = int(input())\nYES = 'YES'\nNO = 'NO'\n\ndef calc(n, m, k):\n    if n == 1:\n        return m == 0 and k >= 2\n    nc2 = n * (n - 1) // 2\n    if m > nc2:\n        return False\n    if m == nc2:\n        return k >= 3\n    if m >= n - 1:\n        return k >= 4\n    return False\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    (x, y) = (0, 0)\n    ys = []\n    for (i, ch) in enumerate(s):\n        if ch == '1':\n            x += 1\n        else:\n            y += 1\n            ys.append(i)\n    if y == 1 or y == 2:\n        print(NO)\n        continue\n    else:\n        print(YES)\n    matrix = [['X' if i == j else '=' for i in range(n)] for j in range(n)]\n    if y > 2:\n        for i in range(y):\n            j = (i + 1) % y\n            (yi, yj) = (ys[i], ys[j])\n            matrix[yi][yj] = '+'\n            matrix[yj][yi] = '-'\n    for row in matrix:\n        print(''.join(row))", "for _ in range(int(input())):\n    n = int(input())\n    ref = []\n    total = [0] * n\n    out = ['='] * n\n    s = list(input())\n    num = s.count('2')\n    if num > 2 or num == 0:\n        print('YES')\n        for i in range(n):\n            if s[i] == '2':\n                ref.append(i)\n                total[i] = 1\n        for i in range(n):\n            temp = out.copy()\n            temp[i] = 'X'\n            if total[i] == 1:\n                a = ref.index(i)\n                temp[ref[a - 1]] = '-'\n                temp[ref[(a + 1) % num]] = '+'\n            print(''.join(temp))\n    else:\n        print('NO')", "def lastIndex(arr, x):\n    for i in reversed(range(len(arr))):\n        if arr[i] == x:\n            return i\n\ndef solve(n, exp):\n    if exp.count(2) in range(1, 3):\n        print('NO')\n        return\n    else:\n        board = [['=' for i in range(n)] for i in range(n)]\n        for i in range(n):\n            board[i][i] = 'X'\n        if exp.count(2) != 0:\n            firstIndexOf2 = exp.index(2)\n            lastIndexOf2 = lastIndex(exp, 2)\n            for i in range(firstIndexOf2, lastIndexOf2):\n                if exp[i] == 2:\n                    for j in range(i + 1, lastIndexOf2 + 1):\n                        if exp[j] == 2:\n                            board[i][j] = '+'\n                            board[j][i] = '-'\n            board[lastIndexOf2][firstIndexOf2] = '+'\n            board[firstIndexOf2][lastIndexOf2] = '-'\n        print('YES')\n        for i in range(n):\n            print(''.join(board[i]))\ntcs = int(input())\nfor i in range(tcs):\n    n = int(input())\n    e = input()\n    exp = list(map(int, e))\n    solve(n, exp)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    l = [['=' for i in range(n)] for j in range(n)]\n    for i in range(n):\n        l[i][i] = 'X'\n    arr = []\n    for i in range(n):\n        if s[i] == '2':\n            arr.append(i)\n    if 0 < len(arr) <= 2:\n        print('NO')\n    else:\n        print('YES')\n        len_arr = len(arr)\n        for i in range(len_arr):\n            l[arr[i]][arr[(i + 1) % len_arr]] = '+'\n            l[arr[(i + 1) % len_arr]][arr[i]] = '-'\n        for i in l:\n            print(''.join(i))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    a = []\n    ans = [['=' for j in range(n)] for i in range(n)]\n    for i in range(n):\n        ans[i][i] = 'X'\n    for i in range(n):\n        if s[i] == '2':\n            a.append(i)\n    l = set()\n    if len(a) <= 2 and len(a) > 0:\n        print('NO')\n        continue\n    elif len(a) == 0:\n        print('YES')\n        for i in range(n):\n            print(''.join(ans[i]))\n        continue\n    for i in range(len(a) - 1):\n        l.add((a[i], a[i + 1]))\n    l.add((a[-1], a[0]))\n    for i in l:\n        ans[i[0]][i[1]] = '+'\n        ans[i[1]][i[0]] = '-'\n    print('YES')\n    for i in range(n):\n        print(''.join(ans[i]))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    l = []\n    for i in range(n):\n        if s[i] == '2':\n            l.append(i)\n    possible = len(l) == 0 or len(l) > 2\n    if not possible:\n        print('NO')\n        continue\n    print('YES')\n    board = [['=' for _ in range(n)] for _ in range(n)]\n    for i in range(n):\n        board[i][i] = 'X'\n    if len(l) > 0:\n        l.append(l[0])\n    for i in range(len(l) - 1):\n        x = l[i]\n        y = l[i + 1]\n        board[x][y] = '+'\n        board[y][x] = '-'\n    for row in board:\n        print(''.join(row))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    ans = [['='] * n for _ in range(n)]\n    for i in range(n):\n        ans[i][i] = 'X'\n    bs = []\n    for i in range(n):\n        if s[i] == '2':\n            bs.append(i)\n    if len(bs) == 1 or len(bs) == 2:\n        print('NO')\n        continue\n    print('YES')\n    for i in range(len(bs)):\n        st = bs[i]\n        ed = bs[(i + 1) % len(bs)]\n        ans[st][ed] = '+'\n        ans[ed][st] = '-'\n    for i in range(n):\n        print(''.join(ans[i]))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    l = [['=' for i in range(n)] for j in range(n)]\n    for i in range(n):\n        l[i][i] = 'X'\n    a = []\n    for i in range(n):\n        if s[i] == '2':\n            a.append(i)\n    if 0 < len(a) <= 2:\n        print('NO')\n    else:\n        print('YES')\n        m = len(a)\n        for i in range(m):\n            (l[a[i]][a[(i + 1) % m]], l[a[(i + 1) % m]][a[i]]) = ('+', '-')\n        for i in l:\n            print(''.join(i))", "for u in range(int(input())):\n    n = int(input())\n    a = input()\n    l = [['=' for j in range(n)] for i in range(n)]\n    for i in range(n):\n        l[i][i] = 'X'\n    s = []\n    for i in range(n):\n        if a[i] == '2':\n            s.append(i)\n    if 0 < len(s) <= 2:\n        print('NO')\n    else:\n        print('YES')\n        m = len(s)\n        for i in range(m):\n            (l[s[i]][s[(i + 1) % m]], l[s[(i + 1) % m]][s[i]]) = ('+', '-')\n        for i in l:\n            print(''.join(i))", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    matrix = [['='] * n for i in range(n)]\n    for i in range(n):\n        matrix[i][i] = 'X'\n    exp = input()\n    done = False\n    for c in range(n):\n        if exp[c] == '2':\n            for i in range(n):\n                if c != i and exp[i] == '2' and (matrix[i][c] == '='):\n                    matrix[i][c] = '-'\n                    matrix[c][i] = '+'\n                    break\n            else:\n                done = True\n                print('NO')\n    if not done:\n        print('YES')\n        for line in matrix:\n            print(''.join(line))", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    matrix = [['='] * n for i in range(n)]\n    for i in range(n):\n        matrix[i][i] = 'X'\n    exp = input()\n    done = False\n    for c in range(n):\n        if exp[c] == '2':\n            for i in range(n):\n                if c != i and exp[i] == '2' and (matrix[i][c] == '='):\n                    matrix[i][c] = '-'\n                    matrix[c][i] = '+'\n                    break\n            else:\n                done = True\n                print('NO')\n    if not done:\n        print('YES')\n        for line in matrix:\n            print(''.join(line))", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    s = input()\n    a = [['=' for i in range(n)] for j in range(n)]\n    for i in range(n):\n        a[i][i] = 'X'\n    if s.count('2') < 3 and s.count('2') > 0:\n        print('NO')\n    else:\n        print('YES')\n        b = []\n        for i in range(n):\n            if s[i] == '2':\n                b.append(i)\n        for i in range(len(b)):\n            a[b[i % len(b)]][b[(i + 1) % len(b)]] = '+'\n            a[b[(i + 1) % len(b)]][b[i % len(b)]] = '-'\n        for i in a:\n            print(''.join(i))", "t = int(input())\n\ndef find_next_win(s, idx):\n    first_i = s.find('2')\n    for i in range(len(s)):\n        if s[i] == '2' and i > idx:\n            return i\n    return first_i\n\ndef find_prev_idx(s, idx):\n    last_i = s.rfind('2')\n    for i in range(len(s)):\n        if s[::-1][i] == '2' and i > len(s) - idx - 1:\n            return len(s) - i - 1\n    return last_i\nfor i in range(t):\n    n = int(input())\n    s = input()\n    draw_count = s.count('1')\n    win_count = s.count('2')\n    if win_count == 1 or win_count == 2:\n        print('NO')\n    else:\n        print('YES')\n        for idx in range(n):\n            if s[idx] == '1':\n                option = '=' * idx + 'X' + '=' * (n - idx - 1)\n                print(option)\n            else:\n                option = '=' * n\n                option = option[:idx] + 'X' + option[idx + 1:]\n                win_idx = find_next_win(s, idx)\n                option = option[:win_idx] + '+' + option[win_idx + 1:]\n                lose_idx = find_prev_idx(s, idx)\n                option = option[:lose_idx] + '-' + option[lose_idx + 1:]\n                print(option)", "for t in range(int(input())):\n    n = int(input())\n    s = list(input())\n    c1 = 0\n    c2 = 0\n    for x in s:\n        if x == '1':\n            c1 += 1\n        if x == '2':\n            c2 += 1\n    if c2 < 3 and c1 != n:\n        print('NO')\n        continue\n    mat = [['X' if i == x else '=' for i in range(n)] for x in range(n)]\n    for i in range(n):\n        if s[i] == '2':\n            for j in range(0, n):\n                if s[j] == '2' and mat[i][j] == '=':\n                    mat[i][j] = '+'\n                    mat[j][i] = '-'\n                    break\n    print('YES')\n    for i in range(n):\n        print(''.join(mat[i]))", "n = int(input())\nfor i in range(n):\n    cou = 0\n    num = int(input())\n    s = input()\n    arr = [['=' for i in range(len(s))] for j in range(len(s))]\n    for k in range(len(s)):\n        arr[k][k] = 'X'\n    node = []\n    for k in range(len(s)):\n        if s[k] == '1':\n            node.append(k)\n            cou += 1\n    if num - cou < 3 and num - cou > 0:\n        print('NO')\n        continue\n    else:\n        print('YES')\n    for k in range(len(s)):\n        if k in node:\n            continue\n        for kk in range(len(s)):\n            if kk in node or kk == k:\n                continue\n            if arr[k][kk] == '=':\n                arr[k][kk] = '+'\n                arr[kk][k] = '-'\n                break\n    for j in arr:\n        print(''.join(j))", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_list_string():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\n\ndef get_print_int(x):\n    sys.stdout.write(str(x) + '\\n')\n\ndef get_print(x):\n    sys.stdout.write(x + '\\n')\n\ndef get_print_int_same(x):\n    sys.stdout.write(str(x) + ' ')\n\ndef get_print_same(x):\n    sys.stdout.write(x + ' ')\nfrom sys import maxsize\n\ndef solve():\n    for _ in range(get_int()):\n        n = get_int()\n        data = get_string()\n        ans = [['='] * n for i in range(n)]\n        for i in range(n):\n            ans[i][i] = 'X'\n        twos = []\n        for i in range(n):\n            if data[i] == '2':\n                twos.append(i)\n        flag = 0\n        for i in range(len(twos)):\n            ind1 = twos[i]\n            f = 0\n            for j in range(len(twos)):\n                if i != j:\n                    ind2 = twos[j]\n                    if ans[ind1][ind2] == '=':\n                        ans[ind1][ind2] = '+'\n                        ans[ind2][ind1] = '-'\n                        f = 1\n                        break\n            if f == 0:\n                flag = 1\n                break\n        if flag == 1:\n            get_print('NO')\n        else:\n            get_print('YES')\n            for i in ans:\n                get_print(''.join(map(str, i)))\nsolve()", "from math import ceil, gcd, inf, sqrt\nfrom bisect import bisect_left\nfrom collections import Counter, deque\nmod = 1000000007\nlt = 100001\n\ndef pro(arr):\n    n = len(arr)\n    ans = []\n    for i in range(n):\n        ans.append(['='] * n)\n    for i in range(n):\n        f = 0\n        for j in range(i, n):\n            if i == j:\n                ans[i][j] = 'X'\n                continue\n            if arr[i] == '1':\n                ans[i][j] = '='\n            elif f == 0:\n                if arr[j] == '2':\n                    ans[i][j] = '+'\n                    ans[j][i] = '-'\n                    f = 1\n            elif arr[j] == '2':\n                ans[i][j] = '-'\n                ans[j][i] = '+'\n            else:\n                ans[i][j] = '='\n    for i in range(n):\n        if arr[i] == '2' and ans[i].count('+') < 1:\n            print('NO')\n            return\n    print('YES')\n    for i in range(n):\n        print(''.join(ans[i]))\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input()\n    pro(list(a))", "def is_possible(players):\n    cnt1 = 0\n    cnt2 = 0\n    for player in players:\n        if player == '1':\n            cnt1 += 1\n        if player == '2':\n            cnt2 += 1\n    if cnt2 > 2 or cnt2 == 0:\n        return True\n    else:\n        return False\n\ndef main():\n    k = int(input())\n    for _ in range(k):\n        n = int(input())\n        players = list(input())\n        matrix = [[''] * n for i in range(n)]\n        if is_possible(players):\n            winners = []\n            for i in range(n):\n                matrix[i][i] = 'X'\n                if players[i] == '1':\n                    for j in range(n):\n                        if i != j:\n                            matrix[i][j] = '='\n                            matrix[j][i] = '='\n                else:\n                    winners.append(i)\n            if len(winners) > 1:\n                for i in range(1, len(winners)):\n                    matrix[winners[i - 1]][winners[i]] = '+'\n                    matrix[winners[i]][winners[i - 1]] = '-'\n                matrix[winners[-1]][winners[0]] = '+'\n                matrix[winners[0]][winners[-1]] = '-'\n            for i in range(n):\n                for j in range(n):\n                    if matrix[i][j] == '':\n                        matrix[i][j] = '='\n            print('YES')\n            for i in range(n):\n                print(''.join(matrix[i]))\n        else:\n            print('NO')\nmain()", "from collections import Counter, deque\nfrom math import *\nmod = 1000000007\n\ndef solve():\n    n = int(input())\n    s = input()\n    x = s.count('2')\n    if s.count('2') <= 2:\n        if x != 0:\n            print('NO')\n            return\n    d = {i: [-1] * n for i in range(n)}\n    for i in range(n):\n        if s[i] == '1':\n            for j in range(n):\n                if i == j:\n                    d[i][j] = 'X'\n                else:\n                    d[i][j] = '='\n                    d[j][i] = '='\n    for i in range(n):\n        if s[i] != '1':\n            cur = 0\n            for j in range(n):\n                if i == j:\n                    d[i][j] = 'X'\n                elif cur == 0:\n                    if d[i][j] == -1:\n                        d[i][j] = '+'\n                        d[j][i] = '-'\n                        cur += 1\n                elif d[i][j] == -1:\n                    d[i][j] = '-'\n                    d[j][i] = '+'\n    print('YES')\n    for i in range(n):\n        print(''.join(d[i]))\nt = int(input())\nfor _ in range(t):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    (s1, s2) = ([], [])\n    for i in range(n):\n        if s[i] == '1':\n            s1.append(i)\n        elif s[i] == '2':\n            s2.append(i)\n    if len(s2) == 1 or len(s2) == 2:\n        print('NO')\n    else:\n        print('YES')\n        mat = [['=' for i in range(n)] for j in range(n)]\n        for i in s1:\n            for j in range(n):\n                mat[i][j] = '='\n                mat[j][i] = '='\n        for i in range(len(s2) - 1):\n            mat[s2[i]][s2[i + 1]] = '+'\n            mat[s2[i + 1]][s2[i]] = '-'\n        if len(s2) > 0:\n            mat[s2[-1]][s2[0]] = '+'\n            mat[s2[0]][s2[-1]] = '-'\n        for i in range(n):\n            mat[i][i] = 'X'\n        for l in mat:\n            print(''.join(l))", "import math\nimport collections\nfrom functools import lru_cache\nimport heapq\n\ndef process(case, n, s):\n    t1 = t2 = 0\n    for i in range(n):\n        if s[i] == '1':\n            t1 += 1\n        else:\n            t2 += 1\n    res = []\n    for i in range(n):\n        res.append(['='] * n)\n    for i in range(n):\n        wins = 0\n        for j in range(n):\n            if i == j % n:\n                res[i][j % n] = 'X'\n            elif s[i] == '2' and wins == 0 and (s[j % n] == '2') and (res[j % n][i] == '='):\n                wins += 1\n                res[i][j % n] = '+'\n                res[j][i] = '-'\n        if s[i] == '2' and wins == 0:\n            print('NO')\n            return\n    print('YES')\n    for i in range(n):\n        print(''.join(res[i]))\ntcs = int(input())\nfor tc in range(tcs):\n    n = int(input())\n    s = input().rstrip()\n    process(tc + 1, n, s)", "from collections import Counter\nfor t in range(int(input())):\n    n = int(input())\n    s = input()\n    count = Counter(s)\n    if 1 <= count['2'] <= 2:\n        print('NO')\n    else:\n        print('YES')\n        matrix = [['X'] * n for _ in range(n)]\n        for j in range(n):\n            for i in range(j):\n                if s[i] == '1' or s[j] == '1':\n                    matrix[i][j] = '='\n                    matrix[j][i] = '='\n                else:\n                    matrix[i][j] = '+'\n                    matrix[j][i] = '-'\n        if count['2'] > 2:\n            minb = 0\n            while s[minb] != '2':\n                minb += 1\n            maxb = n - 1\n            while s[maxb] != '2':\n                maxb -= 1\n            matrix[minb][maxb] = '-'\n            matrix[maxb][minb] = '+'\n        for row in matrix:\n            print(''.join(row))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    ans = []\n    for k in range(n):\n        ans.append([])\n        for j in range(n):\n            ans[k].append('=')\n    for p in range(n):\n        ans[p][p] = 'X'\n    if s.count('2') == 0:\n        print('YES')\n        for aboba in range(n):\n            print(''.join(ans[aboba]))\n    elif s.count('2') < 3:\n        print('NO')\n    else:\n        boba = []\n        for ab in range(n):\n            if s[ab] == '2':\n                boba.append(ab)\n        for a in range(1, len(boba)):\n            ans[boba[a - 1]][boba[a]] = '+'\n            ans[boba[a]][boba[a - 1]] = '-'\n        ans[boba[0]][boba[-1]] = '-'\n        ans[boba[-1]][boba[0]] = '+'\n        print('YES')\n        for aboba in range(n):\n            print(''.join(ans[aboba]))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ans = []\n    st2 = []\n    for i in range(n):\n        ans.append([])\n        for j in range(n):\n            if i == j:\n                ans[i].append('X')\n            else:\n                ans[i].append('=')\n    pl = input()\n    sum = 0\n    for i in range(n):\n        if pl[i] == '2':\n            sum += 1\n            st2.append(i)\n    if sum == 1 or sum == 2:\n        print('NO')\n        continue\n    print('YES')\n    if sum != 0:\n        for i in range(sum - 1):\n            ans[st2[i]][st2[i + 1]] = '+'\n            ans[st2[i + 1]][st2[i]] = '-'\n        ans[st2[sum - 1]][st2[0]] = '+'\n        ans[st2[0]][st2[sum - 1]] = '-'\n    for i in range(n):\n        print(''.join(ans[i]))", "t = int(input())\nwhile t:\n    num = int(input())\n    player = [int(p) for p in input()]\n    count1 = 0\n    for i in range(num):\n        if player[i] == 1:\n            count1 += 1\n    if count1 == num:\n        print('YES')\n        matches = [['=' for i in range(num)] for j in range(num)]\n        for i in range(num):\n            matches[i][i] = 'X'\n            print(''.join(matches[i]))\n    elif num - count1 <= 2:\n        print('NO')\n    else:\n        print('YES')\n        matches = [['X' for i in range(num)] for j in range(num)]\n        done = [False] * num\n        for i in range(num):\n            for j in range(i + 1, num):\n                if player[i] == 2 and player[j] == 2:\n                    if done[i] == True:\n                        done[j] = True\n                        matches[i][j] = '-'\n                        matches[j][i] = '+'\n                    else:\n                        matches[i][j] = '+'\n                        matches[j][i] = '-'\n                        done[i] = True\n                else:\n                    matches[i][j] = '='\n                    matches[j][i] = '='\n            print(''.join(matches[i]))\n    t -= 1", "def find(str, ch):\n    for (i, ltr) in enumerate(str):\n        if ltr == ch:\n            yield i\ntest = int(input())\nfor i in range(test):\n    n = int(input())\n    s = input()\n    if s.count('2') <= 2 and s.count('2') > 0:\n        print('NO')\n    else:\n        print('YES')\n        lol = list(find(s, '2'))\n        lol = lol[-1:] + lol[:-1]\n        matrix = [['=' for x in range(n)] for y in range(n)]\n        for sth in range(n):\n            if s[sth] == '2':\n                matrix[sth][int(lol[0])] = '-'\n                matrix[int(lol[0])][sth] = '+'\n                lol.remove(lol[0])\n            matrix[sth][sth] = 'X'\n        for i in range(len(matrix)):\n            print(''.join((str(i) for i in matrix[i])))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    p2 = []\n    for i in range(n):\n        if s[i] == '2':\n            p2.append(i)\n    if len(p2) == 1 or len(p2) == 2:\n        print('NO')\n        continue\n    res = [['=' for i in range(n)] for i in range(n)]\n    for i in range(n):\n        res[i][i] = 'X'\n    for i in range(len(p2)):\n        a = p2[i]\n        b = p2[(i + 1) % len(p2)]\n        res[a][b] = '+'\n        res[b][a] = '-'\n    print('YES')\n    for i in range(n):\n        print(''.join((str(x) for x in res[i])))", "for _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    l = [['X' if i == j else '=' for j in range(n)] for i in range(n)]\n    if s.count('2') in [1, 2]:\n        print('NO')\n    else:\n        print('YES')\n        for i in range(n):\n            if s[i] == '2':\n                try:\n                    a = s.index('2', i + 1)\n                except:\n                    a = s.index('2', 0, i)\n                (l[i][a], l[a][i]) = ('+', '-')\n        for i in l:\n            a = ''\n            for j in i:\n                a += j\n            print(a)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    players = input()\n    b = players.count('2')\n    sec = []\n    aaaa = [str(x) for x in players]\n    for (index, nums) in enumerate(aaaa):\n        if nums == '2':\n            sec.append(index)\n    if b == 1 or b == 2:\n        print('NO')\n    else:\n        print('YES')\n        for i in range(n):\n            iplayer = []\n            if players[i] == '1':\n                for j in range(n):\n                    if j == i:\n                        iplayer.append('X')\n                    else:\n                        iplayer.append('=')\n            if players[i] == '2':\n                for j in range(n):\n                    if i == j:\n                        iplayer.append('X')\n                    elif players[j] == '1':\n                        iplayer.append('=')\n                    elif players[j] == '2':\n                        if j < i:\n                            iplayer.append('-')\n                        elif j > i:\n                            iplayer.append('+')\n                if b > 0:\n                    if i == sec[0]:\n                        iplayer[sec[-1]] = '-'\n                    if i == sec[-1]:\n                        iplayer[sec[0]] = '+'\n            an = ''.join(iplayer)\n            print(an)", "t = int(input())\nfor hh in range(0, t):\n    n = int(input())\n    s = input()\n    count2 = 0\n    for i in range(0, n):\n        if s[i] == '2':\n            count2 += 1\n    if count2 > 0 and count2 <= 2:\n        print('NO')\n    else:\n        li = []\n        for i in range(0, n):\n            s1 = ''\n            s1 += s\n            li1 = list(s1)\n            li.append(li1)\n        for i in range(0, n):\n            li[i][i] = 'X'\n        for i in range(0, n):\n            cnt = 0\n            for j in range(i + 1, n):\n                if s[i] == '1':\n                    li[i][j] = '='\n                    li[j][i] = '='\n                elif s[j] == '1':\n                    li[i][j] = '='\n                    li[j][i] = '='\n                elif cnt == 0:\n                    li[i][j] = '+'\n                    li[j][i] = '-'\n                    cnt += 1\n                else:\n                    li[i][j] = '-'\n                    li[j][i] = '+'\n                    cnt += 1\n        print('YES')\n        for i in li:\n            s1 = ''.join(i)\n            print(s1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    v = []\n    for i in range(n):\n        if s[i] == '2':\n            v.append(i)\n    if s.count('2') in (1, 2):\n        print('NO')\n    else:\n        print('YES')\n        a = []\n        for i in range(n):\n            l = ['='] * n\n            l[i] = 'X'\n            a.append(l)\n        for i in range(len(v)):\n            for j in range(i + 1, len(v)):\n                if i != len(v) - 1:\n                    a[v[i]][v[j]] = '+'\n                    a[v[j]][v[i]] = '-'\n        if len(v) != 0:\n            a[v[0]][v[-1]] = '-'\n            a[v[-1]][v[0]] = '+'\n        for i in a:\n            g = ''\n            for j in i:\n                g += j\n            print(g)"]