["T = int(input())\nfor case in range(T):\n    (n, m) = map(int, input().split())\n    s = n * m\n    if s % 3 == 2:\n        res = s // 3 + 1\n    else:\n        res = s // 3 + s % 3\n    print(res)", "for s in [*open(0)][1:]:\n    (n, m) = sorted(map(int, s.split()))\n    k = n % 3\n    l = m % 3\n    k *= l + 3 * (m > 3 == k * l + 2)\n    print((n * m - k) // 3 + k // 2)", "for s in [*open(0)][1:]:\n    (n, m) = map(int, s.split())\n    print(0 - -n * m // 3)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    print(n * m // 3 + (n * m % 3 > 0))", "n = int(input())\nfor i in range(n):\n    (n, m) = map(int, input().split())\n    k = n * m\n    if k % 3 == 1:\n        print(k // 3 + 1)\n    elif k % 3 == 2:\n        print(k // 3 + 1)\n    else:\n        print(k // 3)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    x = n // 3 * m\n    x += n % 3 * (m // 3)\n    if n % 3 * (m % 3) == 0:\n        print(x)\n    if n % 3 * (m % 3) == 2 or n % 3 * (m % 3) == 1:\n        print(x + 1)\n    if n % 3 * (m % 3) == 4:\n        print(x + 2)", "import math\nfor _ in range(int(input())):\n    (u, v) = map(int, input().split())\n    ans = math.ceil(u * v / 3)\n    print(ans)", "T = int(input())\nwhile T:\n    T -= 1\n    (x, y) = map(int, input().split())\n    if not x % 3:\n        print(x // 3 * y)\n    elif not y % 3:\n        print(y // 3 * x)\n    else:\n        ans = x // 3 * y\n        ans += y // 3 * (x % 3)\n        ans += min(x % 3, y % 3)\n        print(ans)", "def solve():\n    (a, b) = [int(i) for i in input().split()]\n    res = 0\n    while a > 2 or b > 2:\n        if a > 2 and b > 2:\n            if a % 3 <= b % 3:\n                res += a // 3 * b\n                a %= 3\n            else:\n                res += a * (b // 3)\n                b %= 3\n        elif b <= 2:\n            res += a // 3 * b\n            a %= 3\n        elif a <= 2:\n            res += a * (b // 3)\n            b %= 3\n    res += min(a, b)\n    print(res)\nt = int(input())\nfor i in range(t):\n    solve()", "N = int(input())\nfor i in range(N):\n    A = input().split()\n    n = int(A[0])\n    m = int(A[1])\n    if m % 3 != 0:\n        a = m * (n // 3) + n % 3 * (1 + m // 3)\n    else:\n        a = m * (n // 3) + n % 3 * (m // 3)\n    if n % 3 != 0:\n        b = n * (m // 3) + m % 3 * (1 + n // 3)\n    else:\n        b = n * (m // 3) + m % 3 * (n // 3)\n    print(min(a, b))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    ans = 0\n    n = n * m\n    if n % 3 == 1:\n        n = n - 4\n        ans += 2\n    ans += n // 3 + n % 3 // 2\n    print(ans)", "from math import ceil\na = int(input())\nfor i in range(a):\n    (n, m) = map(int, input().split())\n    print(ceil(n * m / 3))", "n = int(input())\nres = []\n\ndef rect(r, c):\n    if r == 0 or c == 0:\n        return 0\n    if r < 3 and c < 3:\n        if r < 2 or c < 2:\n            return 1\n        return 2\n    if c < 3:\n        return c * (r // 3) + rect(c, r % 3)\n    return r * (c // 3) + rect(r, c % 3)\nfor i in range(n):\n    arr = [int(i) for i in input().split()]\n    res.append(rect(arr[0], arr[1]))\nfor i in res:\n    print(i)", "import sys\ninput = sys.stdin.readline\nt = int(input())\n\ndef getAns(n, m):\n    if n == 1:\n        if m == 2:\n            return 1\n        else:\n            ans = 0\n            ans = int(m / 3)\n            if m % 3 == 2 or m % 3 == 1:\n                ans += 1\n            return ans\n    elif m == 2:\n        return 2\n    else:\n        ans = n * int(m / 3)\n        a = n\n        b = m % 3\n        if b == 0:\n            return ans\n        else:\n            return ans + getAns(min(a, b), max(a, b))\nwhile t > 0:\n    n = [int(x) for x in input().split(' ')]\n    m = n[1]\n    n = n[0]\n    if n > m:\n        (n, m) = (m, n)\n    if n == 1:\n        if m == 2:\n            print(1)\n        else:\n            ans = 0\n            ans = int(m / 3)\n            if m % 3 == 2 or m % 3 == 1:\n                ans += 1\n            print(ans)\n    elif m == 2:\n        print(2)\n    else:\n        ans = getAns(n, m)\n        print(ans)\n    t -= 1", "n = int(input())\nanswer = []\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    if a * b % 3 == 0:\n        answer.append(a * b // 3)\n    elif a * b % 3 != 0:\n        answer.append(a * b // 3 + 1)\nfor i in range(n):\n    print(answer[i])", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    if a * b % 3 == 0:\n        print(a * b // 3)\n    else:\n        print(a * b // 3 + 1)", "def main():\n    n = int(input())\n    l = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        l.append([a, b])\n    col_3 = 0\n    for i in range(n):\n        col_3 = 0\n        if l[i][0] % 3 == 0:\n            col_3 += l[i][0] / 3 * l[i][1]\n        elif l[i][1] % 3 == 0:\n            col_3 += l[i][1] / 3 * l[i][0]\n        else:\n            if l[i][0] < l[i][1]:\n                (l[i][0], l[i][1]) = (l[i][1], l[i][0])\n            col_3 += l[i][0] // 3 * l[i][1]\n            col_3 += l[i][0] % 3 * (l[i][1] // 3)\n            if l[i][0] % 3 == 2 and l[i][1] % 3 == 2:\n                col_3 += 2\n            else:\n                col_3 += 1\n        print(int(col_3))\nmain()", "for i in range(int(input())):\n    (x, y) = map(int, input().split())\n    out1 = 0\n    n = y // 3\n    out1 += n * x\n    z = x // 3 + int(x % 3 != 0)\n    out1 += z * (y % 3)\n    (x, y) = (y, x)\n    out = 0\n    n = y // 3\n    out += n * x\n    z = x // 3 + int(x % 3 != 0)\n    out += z * (y % 3)\n    print(min(out, out1))", "from math import gcd\nt = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().split()))\n    res = 0\n    if n > m:\n        (n, m) = (m, n)\n    res += n // 3 * m\n    n = n % 3\n    if n == 1:\n        res += (m + 2) // 3\n    elif n == 2:\n        res += int(2 * (m + 1) / 3)\n    print(res)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    r = 3 * (m // 3 * (n // 3)) + m % 3 * (n // 3) + n % 3 * (m // 3) + min(m % 3, n % 3)\n    print(r)", "t = int(input())\nfor _ in range(t):\n    res = 0\n    (n, m) = map(int, input().split())\n    if n < m:\n        (n, m) = (m, n)\n    if n % 3 == 0 or m % 3 == 0:\n        res = m * n // 3\n    elif n % 3 == 1:\n        res = n // 3 * m + m // 3\n        if m % 3 > 0:\n            res += 1\n    elif n % 3 == 2:\n        res = m * (n // 3) + 2 * (m // 3) + m % 3\n    print(res)", "import math\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    print(n * (m // 3) + n // 3 * (m % 3) + int(math.ceil(n % 3 * (m % 3) / 2)))", "t = int(input())\n\ndef sol(n, m):\n    if n >= 3:\n        q = n // 3\n        return q * m + sol(n % 3, m)\n    elif n == 0:\n        return 0\n    else:\n        q = m // 3\n        r = m - 3 * q\n        if r == 2:\n            return n * (q + 1)\n        if r == 1:\n            return n * q + 1\n        if r == 0:\n            return n * q\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    if m < n:\n        (n, m) = (m, n)\n    print(sol(n, m))", "n = int(input())\nfor i in range(n):\n    s = input().split()\n    n = int(s[0])\n    m = int(s[1])\n    k = n * m // 3\n    if n * m % 3 == 0:\n        print(k)\n    elif n // 3 * m + m // 3 * (n % 3) + m % 3 < m // 3 * n + n // 3 * (m % 3) + n % 3:\n        if n * m - (n // 3 * m + m // 3 * (n % 3) + m % 3) < n // 3 * m + m // 3 * (n % 3) + m % 3:\n            print(n * m - (n // 3 * m + m // 3 * (n % 3) + m % 3))\n        else:\n            print(n // 3 * m + m // 3 * (n % 3) + m % 3)\n    elif n * m - (m // 3 * n + n // 3 * (m % 3) + n % 3) < m // 3 * n + n // 3 * (m % 3) + n % 3:\n        print(n * m - (m // 3 * n + n // 3 * (m % 3) + n % 3))\n    else:\n        print(m // 3 * n + n // 3 * (m % 3) + n % 3)", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    if a % 3 < b % 3:\n        f = a\n        t = b\n    else:\n        f = b\n        t = a\n    if f % 3 == 0:\n        print(f // 3 * t)\n    elif f % 3 == 1:\n        print(f // 3 * t + t // 3 + 1)\n    else:\n        print(f // 3 * t + (t // 3 + 1) * 2)", "t = int(input())\nall_tr = []\nwhile t > 0:\n    x = input()\n    all_tr.append(x)\n    t -= 1\nfor i in all_tr:\n    summ = 1\n    numbers = str(i).split(' ')\n    for x in numbers:\n        summ *= int(x)\n    print(int(summ // 3 if summ % 3 == 0 else summ // 3 + 1))", "t = int(input())\nfor i in range(t):\n    (n, m) = input().split()\n    (n, m) = (int(n), int(m))\n    if n > m:\n        (n, m) = (m, n)\n    if m * n % 3 == 0:\n        print(m * n // 3)\n    else:\n        k = m // 3 * n + m % 3 * (n // 3)\n        m %= 3\n        n %= 3\n        if m * n == 4:\n            print(k + 2)\n        else:\n            print(k + 1)", "def func(n, m):\n    if n == 1 and m == 1:\n        return 1\n    if n == 1:\n        if m % 3 == 0:\n            return m // 3\n        else:\n            return m // 3 + 1\n    elif m == 1:\n        if n % 3 == 0:\n            return n // 3\n        else:\n            return n // 3 + 1\n    elif m % 3 == 0 and n % 3 == 0:\n        return min(n * (m // 3), m * (n // 3))\n    elif m % 3 == 0 and n % 3 != 0:\n        return min(n * (m // 3), m * (n // 3 + 1))\n    elif m % 3 != 0 and n % 3 == 0:\n        return min(n * (m // 3 + 1), m * (n // 3))\n    else:\n        return min(n * (m // 3 + 1), m * (n // 3 + 1))\nt = int(input())\nwhile t:\n    (n, m) = map(int, input().split())\n    ans = 0\n    ans += func(n - n % 3, m - m % 3)\n    ans += func(n % 3, m - m % 3)\n    ans += func(n - n % 3, m % 3)\n    ans += func(n % 3, m % 3)\n    print(ans)\n    t -= 1", "def less(n, m):\n    if n == 2 and m == 2:\n        return 2\n    elif n % 3 == 0:\n        return m * (n // 3)\n    elif m % 3 == 0:\n        return n * (m // 3)\n    elif n == 2 and m == 1:\n        return 1\n    elif n == 1 and m == 2:\n        return 1\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n % 3 == 1 and m % 3 == 1:\n        ans = 0\n        if n > m:\n            ans += m // 3 * 2\n            ans += less(2, m % 3)\n            n -= 2\n            ans += n // 3 * m\n            n = n % 3\n            ans += m // 3 * n\n            m = m % 3\n            ans += less(n, m)\n            print(ans)\n        else:\n            ans += n // 3 * 2\n            ans += less(n % 3, 2)\n            m -= 2\n            ans += n // 3 * m\n            n = n % 3\n            ans += m // 3 * n\n            m = m % 3\n            ans += less(n, m)\n            print(ans)\n    else:\n        ans = 0\n        ans += n // 3 * m\n        n = n % 3\n        ans += m // 3 * n\n        m = m % 3\n        ans += less(n, m)\n        print(ans)", "answer = ''\n\ndef f(a, b):\n    if a == 0 or b == 0:\n        return 0\n    if a == 1 and b == 3 or (a == 3 and b == 1) or (a == 1 and b == 1):\n        return 1\n    if a == 1 and b == 2 or (a == 2 and b == 1):\n        return 1\n    if a * b == 4:\n        return 2\n    return b // 3 * a + f(b % 3, a)\nt = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    (a, b) = (min(a, b), max(a, b))\n    answer += str(f(a, b)) + '\\n'\nprint(answer)", "t = int(input())\nunp = []\nfor i in range(t):\n    unp.append(list(map(int, input().split())))\nfor i in range(t):\n    (n, m) = (unp[i][0], unp[i][1])\n    if n == 1 and m == 1:\n        print(0)\n    else:\n        s = 0\n        if n > 2 or m > 2:\n            n1 = n // 3 * m\n            n2 = m // 3 * n\n            if n1 < n2:\n                n %= 3\n                s += n1\n                s += m // 3 * n\n                m %= 3\n            else:\n                m %= 3\n                s += n2\n                s += n // 3 * m\n                n %= 3\n        if n == 1 and m == 1:\n            s += 1\n        elif n + m == 3:\n            s += 1\n        elif n + m == 4:\n            s += 2\n    print(s)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    z = n // 3 * k + k // 3 * (n % 3)\n    if n % 3 + k % 3 == 4:\n        z = z + 2\n    elif n % 3 * (k % 3) != 0:\n        z = z + 1\n    print(z)", "n = int(input())\nfor i in range(n):\n    x = input().split()\n    a = int(x[0])\n    b = int(x[1])\n    c = a * b\n    if c % 3 == 0:\n        print(c // 3)\n    else:\n        print(c // 3 + 1)", "from math import *\n\ndef solve():\n    (n, m) = map(int, input().split())\n    print(ceil(n * m / 3))\nt = int(input())\nfor _ in range(t):\n    solve()", "t = int(input())\nfor v in range(t):\n    (n, m) = map(int, input().split())\n    pl = 0\n    if n == 1 and m == 1:\n        pl = 1\n    if pl == 1:\n        print(0)\n    elif pl == 0:\n        ans = 0\n        if n > 2 or m > 2:\n            n1 = n // 3 * m\n            n2 = m // 3 * n\n            if n2 >= n1:\n                (n, m) = (m, n)\n                (n1, n2) = (n2, n1)\n            n %= 3\n            ans += n1\n            ans += m // 3 * n\n            m %= 3\n        if n == 1 and m == 1:\n            ans += 1\n        elif n + m == 3:\n            ans += 1\n        elif n + m == 4:\n            ans += 2\n    print(ans)", "a = int(input())\nA = []\nfor i in range(a):\n    (n, m) = map(int, input().split())\n    if n * m % 3 == 0:\n        f = int(n * m / 3)\n        A.append(str(f))\n        continue\n    else:\n        f = m * n // 3\n        b = m * n % 3\n        if b == 1:\n            f = f - 1\n            b += 3\n            b = int(b / 2)\n            f += b\n            A.append(str(f))\n            continue\n        else:\n            b = int(b / 2)\n            f += b\n            A.append(str(f))\n            continue\nprint('\\n'.join(A))", "t = int(input())\nfor i in range(t):\n    (a, b) = [int(i) for i in input().split()]\n    if a % 3 == 1:\n        m1 = a // 3 * b + b // 3 + (b % 3 > 0)\n    elif a % 3 == 2:\n        m1 = a // 3 * b + 2 * (b // 3 + (b % 3 > 0))\n    else:\n        m1 = (a // 3 + (a % 3 > 0)) * b\n    if b % 3 == 1:\n        m2 = b // 3 * a + a // 3 + (a % 3 > 0)\n    elif b % 3 == 2:\n        m2 = b // 3 * a + 2 * (a // 3 + (a % 3 > 0))\n    else:\n        m2 = (b // 3 + (b % 3 > 0)) * a\n    print(min(m1, m2))", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    ans = m // 3 * n\n    x = m % 3\n    ans += n // 3 * x\n    y = n % 3\n    print(ans + min(x, y))", "import sys\nimport math\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef solve(n, m):\n    res = 0\n    prod = n * m\n    mod3 = prod % 3\n    if mod3 == 0:\n        res = prod / 3\n    elif mod3 > 1:\n        res = int(prod / 3) + mod3 / 2\n    elif mod3 == 1:\n        res = int(prod / 3) + (mod3 + 3) / 2 - 1\n    return int(res)\nres = []\niter = inp()\ni = 0\nwhile i < iter:\n    case = inlt()\n    test = solve(case[0], case[1])\n    res.append(test)\n    i += 1\nfor r in res:\n    print(r)", "q = int(input())\nfor w in range(q):\n    (m, n) = map(int, input().split())\n    k1 = m // 3 * n\n    if m % 3 != 0:\n        k1 += n // 3 * (m % 3)\n        if n % 3 != 0:\n            k1 += m % 3\n    k2 = n // 3 * m\n    if n % 3 != 0:\n        k2 += m // 3 * (n % 3)\n        if m % 3 != 0:\n            k2 += n % 3\n    print(min(k1, k2))", "def solve():\n    (n, m) = list(map(int, input().split()))\n    matrix = n * m\n    print(matrix // 3 + min(1, matrix % 3))\nfor _ in range(int(input())):\n    solve()", "t = int(input())\nans = []\nfor i in range(t):\n    (n, m) = [int(i) for i in input().split()]\n    if n % 3 == 0 or m % 3 == 0:\n        ans.append(m * n // 3)\n    elif n == 1:\n        ans.append(m // 3 + 1)\n    elif m == 1:\n        ans.append(n // 3 + 1)\n    else:\n        res1 = n // 3 * m + n % 3 * (m // 3 + 1)\n        res2 = m // 3 * n + m % 3 * (n // 3 + 1)\n        ans.append(min(res1, res2))\nfor f in ans:\n    print(f)", "t = int(input())\nres = []\nfor _ in range(t):\n    (n, m) = sorted(map(int, input().split()))\n    if n % 3 == 0:\n        res.append(m * n // 3)\n    elif m % 3 == 0:\n        res.append(m * (n // 3) + m // 3 * (n % 3))\n    elif m % 3 == 1:\n        if n % 3 == 2:\n            res.append(m * (n // 3) + (m // 3 + 1) * (n % 3) - 1)\n        else:\n            res.append(m * (n // 3) + (m // 3 + 1) * (n % 3))\n    else:\n        res.append(m * (n // 3) + (m // 3 + 1) * (n % 3))\nfor i in res:\n    print(i)", "tst = int(input())\nfor i in range(tst):\n    (x, y) = map(int, input().split())\n    ans = x * y // 3\n    print(ans + 1 if x * y % 3 != 0 else ans)", "def colouring_rectangles():\n    t = int(input())\n    for i in range(t):\n        (A, B) = input().split()\n        a = int(A)\n        b = int(B)\n        if a * b % 3 == 0:\n            print(a * b // 3)\n        else:\n            print(a * b // 3 + 1)\ncolouring_rectangles()", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    ans = 0\n    ans += n * (m // 3)\n    m %= 3\n    ans += m * (n // 3)\n    n %= 3\n    if m == n and n == 2:\n        ans += 2\n    elif m > 0 and n > 0:\n        ans += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    k = n // 3 * m + m // 3 * (n % 3)\n    if n % 3 == 1 and m % 3 == 1:\n        k += 1\n    else:\n        k += n % 3 * (m % 3) // 2\n    print(k)", "num = int(input())\nfor i in range(num):\n    (a, b) = map(int, input().split())\n    remainder = a * b % 3\n    quotient = a * b // 3\n    if remainder == 0:\n        print(quotient)\n    else:\n        print(quotient + 1)", "import sys\nimport math\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef solve(n, m):\n    res = 0\n    prod = n * m\n    mod3 = prod % 3\n    if mod3 == 0:\n        res = prod / 3\n    elif mod3 > 1:\n        res = int(prod / 3) + mod3 / 2\n    elif mod3 == 1:\n        res = int(prod / 3) + (mod3 + 3) / 2 - 1\n    return int(res)\nres = []\niter = inp()\ni = 0\nwhile i < iter:\n    case = inlt()\n    test = solve(case[0], case[1])\n    res.append(test)\n    i += 1\nfor r in res:\n    print(r)", "cases = int(input())\nfor i in range(cases):\n    R = list(map(int, input().split()))\n    m = R[0]\n    n = R[1]\n    rem = m * n % 3\n    if rem == 0:\n        print(m * n // 3)\n    else:\n        print(m * n // 3 + 1)", "from math import ceil\nfor _ in range(int(input())):\n    (n, m) = [int(i) for i in input().split()]\n    print(ceil(n * m / 3))", "for s in [*open(0)][1:]:\n    (n, m) = map(int, s.split())\n    print(0 - -n * m // 3)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    if min(n, m) == 1 and max(n, m) <= 3:\n        print(1)\n    elif min(n, m) == 1 and max(n, m) > 3:\n        if max(n, m) % 3 == 0:\n            print(max(n, m) // 3)\n        else:\n            print(max(n, m) // 3 + 1)\n    elif n == 2 and m == 2:\n        print(2)\n    elif n * m % 3 == 0:\n        print(n * m // 3)\n    else:\n        print(n * m // 3 + 1)", "from math import *\nt = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    print(ceil(a * b / 3))", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    if m * n % 3 == 0:\n        print(m * n // 3)\n    else:\n        print(m * n // 3 + 1)", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    print(n * m // 3 + (n * m % 3 != 0))", "n = int(input())\nnum_list = []\nfor i in range(n):\n    (a, b) = input().split(' ')\n    (a, b) = (int(a), int(b))\n    num_list.append([a, b])\nfor (x, y) in num_list:\n    (tmp_min, tmp_max) = (x, y) if x < y else (y, x)\n    k = tmp_max % 3\n    m = tmp_min % 3\n    if k == 0:\n        print(tmp_max // 3 * tmp_min)\n    elif k == 1:\n        if m == 0:\n            print(tmp_max // 3 * tmp_min + tmp_min // 3)\n        else:\n            print(tmp_max // 3 * tmp_min + tmp_min // 3 + 1)\n    else:\n        print(tmp_max // 3 * tmp_min + k * (tmp_min // 3) + m)", "t = int(input())\nfor t1 in range(t):\n    (n, m) = (int(x) for x in input().split())\n    print((n * m + 2) // 3)", "import math\n\ndef solve(n, m):\n    return math.ceil(n * m / 3)\nt = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    ans = solve(n, m)\n    print(ans)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(b * (a // 3) + a % 3 * (b // 3) + min(a % 3, b % 3))", "loop = int(input())\nfor i in range(loop):\n    inp = list(map(int, input().split()))\n    print((inp[0] * inp[1] + 2) // 3)", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if a * b % 3 == 0:\n        print(a * b // 3)\n    else:\n        print(a * b // 3 + 1)", "import math as m\nfor _ in range(int(input())):\n    print(m.ceil(m.prod(map(int, input().split())) / 3))", "def coloringRectangles(n, m):\n    a = n * m\n    if a == 1:\n        return 0\n    elif a == 2:\n        return 1\n    else:\n        p = a // 3\n        q = a % 3\n        if q == 2:\n            q = 1\n    return p + q\nt = int(input())\nfinal = []\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    final.append(coloringRectangles(n, m))\nfor _ in range(t):\n    print(final[_])", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    (n, m) = (max(n, m), min(n, m))\n    ans = n // 3 * m\n    if n % 3 == 1:\n        if m % 3 == 0:\n            ans += m // 3\n        else:\n            ans += m // 3 + 1\n    elif n % 3 == 2:\n        if m % 3 == 0:\n            ans += 2 * (m // 3)\n        elif m % 3 == 1:\n            ans += 2 * (m // 3) + 1\n        else:\n            ans += 2 * (m // 3) + 2\n    print(ans)", "def solver():\n    (m, n) = input().split()\n    m = int(m)\n    n = int(n)\n    if max(n, m) < 3:\n        print(int(m * n / 2))\n    elif n % 3 == 0 or m % 3 == 0:\n        print(int(m * n / 3))\n    elif n % 3 == m % 3:\n        print(int((m * n + 2) / 3))\n    else:\n        print(int((m * n + 1) / 3))\ntest = int(input())\nfor i in range(test):\n    solver()", "import sys\nimport math\nfrom bisect import bisect_right as br\nfrom itertools import combinations as cb\n\ndef int_arr():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef str_arr():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef input():\n    return sys.stdin.readline().strip()\nfor i in range(int(input())):\n    (r, c) = int_arr()\n    a = 0\n    b = 0\n    div_r = r // 3\n    a += div_r * c\n    if r % 3 != 0:\n        a += c // 3 * (r % 3)\n        if c % 3 != 0:\n            a += 1 * (r % 3)\n    div_c = c // 3\n    b += div_c * r\n    if c % 3 != 0:\n        b += r // 3 * (c % 3)\n        if r % 3 != 0:\n            b += 1 * (c % 3)\n    print(min(a, b))", "t = int(input())\nfor tc in range(t):\n    (n, m) = list(map(int, input().strip().split()))\n    if n * m % 3 == 0:\n        print(int(n * m / 3))\n    else:\n        temp = int(n * m / 3)\n        print(temp + 1)", "import math\nt = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    print(math.ceil(n * m / 3))", "def main():\n    t = int(input())\n    n = [0 for _ in range(t)]\n    m = [0 for _ in range(t)]\n    for i in range(t):\n        (n[i], m[i]) = map(int, input().split())\n    ans = [0 for _ in range(t)]\n    for i in range(t):\n        while True:\n            if n[i] < m[i]:\n                (n[i], m[i]) = (m[i], n[i])\n            if m[i] == 0:\n                break\n            elif m[i] == 1:\n                ans[i] += (n[i] + 2) // 3\n                break\n            elif m[i] == 2 and n[i] == 2:\n                ans[i] += 2\n                break\n            elif m[i] == 2:\n                ans[i] += n[i] // 3 * 2\n                n[i] %= 3\n            else:\n                ans[i] += m[i] // 3 * n[i]\n                m[i] %= 3\n    for x in ans:\n        print(x)\nmain()", "for k in range(int(input())):\n    (n, m) = input().split()\n    Sum = int(n) * int(m)\n    print((Sum + 2) // 3)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = 0\n    if n * m % 3 > 0:\n        a = 1\n    else:\n        a = 0\n    print(n * m // 3 + a)", "n = int(input())\nfor _ in range(n):\n    (u, v) = map(int, input().split())\n    e = u * v\n    c = e // 3\n    if e % 3 != 0:\n        print(c + 1)\n    else:\n        print(c)", "for _ in range(int(input())):\n    a = list(map(int, input().split()))\n    k = 0\n    a.sort()\n    if a[0] * a[1] / 3 > a[0] * a[1] // 3:\n        k = a[0] * a[1] // 3 + 1\n    else:\n        k = a[0] * a[1] // 3\n    print(k)", "x = int(input())\nfor i in range(x):\n    (y, z) = map(int, input().split())\n    if max([y, z]) > 2:\n        if y * z % 3 == 0:\n            print(y * z // 3)\n        else:\n            print(y * z // 3 + 1)\n    else:\n        print(y * z // 2)", "t = int(input())\narr = []\nc = 0\ns = 0\nfor i in range(t):\n    arr.append(input().split())\n    arr[i][0] = int(arr[i][0])\n    arr[i][1] = int(arr[i][1])\nfor i in range(t):\n    s = arr[i][0] * arr[i][1]\n    if s % 3 == 0:\n        c = s // 3\n    if (s % 3 == 1) | (s % 3 == 2):\n        c = s // 3 + 1\n    print(c)", "def c_r(n, m):\n    if n * m % 3 == 0:\n        print(int(n * m / 3))\n    else:\n        print(int(n * m / 3 + 1))\nin_t_case = int(input())\nfor i in range(in_t_case):\n    (n, m) = map(int, input().split())\n    c_r(n, m)", "import math\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = a * b / 3\n    d = math.ceil(c)\n    print(d)", "t = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().split()))\n    print((n * m + 2) // 3)", "from sys import setrecursionlimit\nsetrecursionlimit(10 ** 7)\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n\n    def func(x, y):\n        if x == 1:\n            if y % 3 == 0:\n                return y // 3\n            else:\n                return y // 3 + 1\n        if y == 1:\n            if x % 3 == 0:\n                return x // 3\n            else:\n                return x // 3 + 1\n        if x < 3 and y < 3:\n            a = x * y\n            if a == 2:\n                return 1\n            if a == 3:\n                return 1\n            if a == 4:\n                return 2\n            return 0\n        if x >= 3:\n            return y * (x // 3) + func(y, x % 3)\n        else:\n            return func(y, x)\n    print(func(n, m))", "import math\nfor t in range(int(input())):\n    (r, c) = map(int, input().split())\n    print(math.ceil(r * c / 3))", "def colouringRectengle(n, m):\n    x = n * m\n    if x == 1 or x == 2 or x == 3:\n        return 1\n    if x == 4:\n        return 2\n    return (x + 2) // 3\nt = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().split()))\n    print(colouringRectengle(n, m))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    print((n * m + 2) // 3)", "class Solution:\n\n    def rectangles(self, x: int, y: int) -> int:\n        area = x * y\n        if area % 3 == 0:\n            return area // 3\n        elif area % 3 == 1:\n            new = area // 3 - 1\n            return 2 + new\n        else:\n            return 1 + area // 3\nobj = Solution()\nt = int(input())\nfor _ in range(t):\n    (x, y) = list(map(int, input().split()))\n    print(obj.rectangles(x, y))", "for s in [*open(0)][1:]:\n    (n, m) = map(int, s.split())\n    print(0 - -n * m // 3)", "_ = int(input())\nfor __ in range(_):\n    (a, b) = map(int, input().split())\n    p = a * b\n    if p == 1:\n        print(0)\n        continue\n    if p == 2:\n        print(1)\n        continue\n    if p == 4:\n        print(2)\n        continue\n    if p % 3 == 0:\n        print(p // 3)\n    elif (p - 2) % 3 == 0:\n        print(1 + (p - 2) // 3)\n    else:\n        print(2 + (p - 4) // 3)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    mn = int(n / 3) * m + int(m / 3) * (n % 3) + min(n % 3, m % 3)\n    print(mn)", "from math import ceil\nk = int(input())\nfor i in range(k):\n    (n, m) = (int(x) for x in input().split())\n    print(ceil(n * m / 3))", "from math import ceil\nfor _ in range(int(input())):\n    (r, c) = map(int, input().split())\n    print(ceil(r * c / 3))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n\n    def a(n, m):\n        ans = n * (m // 3)\n        if m % 3 == 2:\n            return ans + min(n, 2 * (n // 3) + n % 3)\n        elif m % 3 == 0:\n            return ans\n        return ans + (n % 3 != 0) + n // 3\n    print(min(a(n, m), a(m, n)))", "t = int(input())\nfor i in range(t):\n    (r, c) = map(int, input().split())\n    if r * c % 3 == 0:\n        print(r * c // 3)\n    else:\n        print(r * c // 3 + 1)", "for _ in range(int(input())):\n    (n, m) = input().split()\n    Sum = int(n) * int(m)\n    print((Sum + 2) // 3)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    m = a * b\n    if m % 3 == 0:\n        print(m // 3)\n    else:\n        print(m // 3 + 1)", "from collections import Counter\nfrom itertools import accumulate, product, groupby\nimport operator\nimport math\nfrom functools import reduce\n\ndef f(longer_side):\n    (ss_multiple, ss_remain) = (longer_side // 3, longer_side % 3)\n    if ss_remain != 0:\n        ss_multiple += 1\n    return ss_multiple\n\ndef solve():\n    (r, c) = [int(char) for char in input().split()]\n    if r == 1:\n        return f(c)\n    elif c == 1:\n        return f(r)\n    (long_side, short_side) = (max(r, c), min(r, c))\n    (ls_multiple, ls_remain) = (long_side // 3, long_side % 3)\n    ans = ls_multiple * short_side\n    if ls_remain == 0:\n        return ans\n    elif ls_remain == 1:\n        return ans + f(short_side)\n    elif short_side <= 3:\n        return ans + min(short_side, ls_remain)\n    else:\n        ss_remain = short_side % 3\n        ans += short_side // 3 * 2\n        ans += min(ss_remain, ls_remain)\n        return ans\nfor _ in range(int(input())):\n    print(solve())", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    print((n * m + 2) // 3)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    res = n * m // 3\n    res += 1 if n * m % 3 != 0 else 0\n    print(res)", "for z in range(int(input())):\n    (n, m) = map(int, input().strip().split())\n    k = n * m\n    if k % 3 == 0:\n        print(k // 3)\n        continue\n    print(k // 3 + 1)", "for i in range(int(input())):\n    (n, m) = [int(a) for a in input().split()]\n    b = 0\n    if n % 3 == 0 or m % 3 == 0:\n        b = m * n / 3\n    else:\n        b = m * n // 3 + 1\n    print(int(b))", "for i in range(int(input())):\n    (n, m) = [int(a) for a in input().split()]\n    if n % 3 == 0 or m % 3 == 0:\n        print(int(m * n / 3))\n    else:\n        print(int(m * n // 3 + 1))"]