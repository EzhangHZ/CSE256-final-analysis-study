["def solve():\n    (n, x) = [int(x) for x in input().split()]\n    arr = [int(x) for x in input().split()]\n    ans = 0\n    prev = arr[0]\n    for num in arr[1:]:\n        ans += abs(num - prev)\n        prev = num\n    lowest = min(arr)\n    highest = max(arr)\n    if lowest > 1:\n        ans += min(2 * (lowest - 1), abs(arr[0] - 1), abs(arr[-1] - 1))\n    if highest < x:\n        ans += min(2 * (x - highest), abs(arr[0] - x), abs(arr[-1] - x))\n    print(ans)\nfor tc in range(int(input())):\n    solve()", "def task(n, x, a):\n    total = 0\n    for i in range(n - 1):\n        total += abs(a[i] - a[i + 1])\n    mn = min(a)\n    mx = max(a)\n    start = a[0]\n    end = a[-1]\n    if mn > 1:\n        total += min(2 * (mn - 1), abs(start - 1), abs(end - 1))\n    if mx < x:\n        total += min(2 * (x - mx), abs(x - start), abs(x - end))\n    print(total)\nt = int(input())\nfor i in range(0, t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    task(n, x, a)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if n <= 2:\n        return max(max(arr), x) - 1\n    val = 0\n    (mi, ma) = (arr[-1], arr[-1])\n    for i in range(n - 1):\n        val += abs(arr[i] - arr[i + 1])\n        mi = min(arr[i], mi)\n        ma = max(arr[i], ma)\n    ans = val\n    if mi > 1:\n        ans += min(abs(arr[0] - 1), abs(arr[-1] - 1), 2 * (mi - 1))\n    if ma < x:\n        ans += min(abs(arr[0] - x), abs(arr[-1] - x), 2 * (x - ma))\n    return ans\nfor _ in range(int(input())):\n    print(solve())", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    (mi, ma) = (arr[0], arr[0])\n    ans = 0\n    for i in range(1, n):\n        mi = min(mi, arr[i])\n        ma = max(ma, arr[i])\n        ans += abs(arr[i] - arr[i - 1])\n    if 1 < mi:\n        ans += min(arr[0] - 1, arr[-1] - 1, 2 * (mi - 1))\n    if ma < x:\n        ans += min(x - arr[0], x - arr[-1], 2 * (x - ma))\n    return ans\nfor _ in range(int(input())):\n    print(solve())", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, a) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = 0\n    for i in range(n - 1):\n        d = d + abs(l[i + 1] - l[i])\n    x = min(l)\n    y = max(l)\n    if n == 1:\n        if l[0] <= a:\n            print(a - 1)\n        else:\n            print(l[0] - 1)\n    elif x == y:\n        print(max(l[0], a) - 1)\n    elif y <= a:\n        print(d + min(2 * (x - 1), l[0] - 1, l[-1] - 1) + min(2 * a - 2 * y, a - l[0], a - l[-1]))\n    elif a < x:\n        best = 2 * y\n        for i in range(n - 1):\n            best = min(best, l[i] + l[i + 1])\n        print(d + min(2 * (x - 1), l[0] - 1, l[-1] - 1))\n    else:\n        print(d + min(2 * (x - 1), l[0] - 1, l[-1] - 1))", "for t in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    sum = 0\n    rs = 0\n    for i in range(n - 1):\n        rs += abs(a[i + 1] - a[i])\n    (c, d) = (max(a), min(a))\n    if x > c:\n        rs += min(2 * (x - c), x - a[0], x - a[-1])\n    if 1 < d:\n        rs += min(2 * (d - 1), a[0] - 1, a[-1] - 1)\n    print(rs)", "for t in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    sum = 0\n    rs = 0\n    for i in range(n - 1):\n        rs += abs(a[i + 1] - a[i])\n    (c, d) = (max(a), min(a))\n    if x > c:\n        rs += min(2 * (x - c), x - a[0], x - a[-1])\n    if 1 < d:\n        rs += min(2 * (d - 1), a[0] - 1, a[-1] - 1)\n    print(rs)", "for g in range(int(input())):\n    (n, e) = map(int, input().split())\n    x = list(map(int, input().split()))\n    print(sum((abs(x[i + 1] - x[i]) for i in range(n - 1))) + min(2 * max(e - max(x), 0), max(e - x[0], 0), max(e - x[-1], 0)) + min(2 * (min(x) - 1), x[0] - 1, x[-1] - 1))", "for g in range(int(input())):\n    (n, e) = map(int, input().split())\n    x = list(map(int, input().split()))\n    print(sum((abs(x[i + 1] - x[i]) for i in range(n - 1))) + min(2 * max(e - max(x), 0), max(e - x[0], 0), max(e - x[-1], 0)) + min(2 * (min(x) - 1), x[0] - 1, x[-1] - 1))", "for i in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    m1 = min(l)\n    m2 = max(l)\n    m3 = min(l[0], l[-1])\n    m4 = max(l[0], l[-1])\n    s = 0\n    for j in range(n - 1):\n        s += abs(l[j] - l[j + 1])\n    if x > m2:\n        s += m1 - 1\n        s += x - m2\n        s += min(m1 - 1, m3 - m1) + min(x - m2, m2 - m4)\n    else:\n        s += m1 - 1\n        s += min(m1 - 1, m3 - m1)\n    print(s)", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split(' '))\n    a = list(map(int, input().split(' ')))\n    min_a = min(a)\n    max_a = max(a)\n    cur_sum = 0\n    for theta in range(n - 1):\n        cur_sum += abs(a[theta + 1] - a[theta])\n    if max_a < x:\n        val1 = 2 * (x - max_a)\n        val2 = x - a[0]\n        val3 = x - a[n - 1]\n        cur_sum += min(val1, val2, val3)\n    if min_a > 1:\n        val1 = 2 * (min_a - 1)\n        val2 = a[0] - 1\n        val3 = a[n - 1] - 1\n        cur_sum += min(val1, val2, val3)\n    print(cur_sum)", "for _ in range(int(input())):\n    (n, x) = map(int, input().strip().split())\n    l = list(map(int, input().strip().split()))\n    co = 0\n    if n == 1:\n        co = max(x, l[0]) - 1\n    else:\n        (a, b) = (min(l), max(l))\n        for i in range(1, n):\n            co += abs(l[i] - l[i - 1])\n        if a > 1:\n            co += min(2 * (a - 1), min(l[0], l[-1]) - 1)\n        if b < x:\n            co += min(x - max(l[0], l[-1]), 2 * (x - b))\n    print(co)", "for t in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    sum = 0\n    rs = 0\n    for i in range(n - 1):\n        rs += abs(a[i + 1] - a[i])\n    (c, d) = (max(a), min(a))\n    if x > c:\n        rs += min(2 * (x - c), x - a[0], x - a[-1])\n    if 1 < d:\n        rs += min(2 * (d - 1), a[0] - 1, a[-1] - 1)\n    print(rs)", "for t in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    sum = 0\n    rs = 0\n    for i in range(n - 1):\n        rs += abs(a[i + 1] - a[i])\n    (c, d) = (max(a), min(a))\n    if x > c:\n        rs += min(2 * (x - c), x - a[0], x - a[-1])\n    if 1 < d:\n        rs += min(2 * (d - 1), a[0] - 1, a[-1] - 1)\n    print(rs)", "for t in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    sum = 0\n    rs = 0\n    for i in range(n - 1):\n        rs += abs(a[i + 1] - a[i])\n    (c, d) = (max(a), min(a))\n    if x > c:\n        rs += min(2 * (x - c), x - a[0], x - a[-1])\n    if 1 < d:\n        rs += min(2 * (d - 1), a[0] - 1, a[-1] - 1)\n    print(rs)", "for t in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    small = min(a)\n    large = max(a)\n    ans = 0\n    ans += min(abs(a[0] - 1), abs(a[-1] - 1), 2 * abs(small - 1))\n    if large < x:\n        ans += min(abs(a[0] - x), abs(a[-1] - x), 2 * abs(large - x))\n    for i in range(n - 1):\n        ans += abs(a[i] - a[i + 1])\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, x) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    min_a = min(a)\n    max_a = max(a)\n    result = 0\n    for i in range(n - 1):\n        result += abs(a[i] - a[i + 1])\n    result += min((min_a - 1) * 2, a[0] - 1, a[-1] - 1)\n    if x > max_a:\n        result += min((x - max_a) * 2, x - a[0], x - a[-1])\n    print(result)", "for t in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    sum = 0\n    rs = 0\n    for i in range(n - 1):\n        rs += abs(a[i + 1] - a[i])\n    (c, d) = (max(a), min(a))\n    if x > c:\n        rs += min(2 * (x - c), x - a[0], x - a[-1])\n    if 1 < d:\n        rs += min(2 * (d - 1), a[0] - 1, a[-1] - 1)\n    print(rs)", "for t in range(int(input())):\n    (n, x) = map(int, input().split())\n    L = list(map(int, input().split()))\n    M = max(L)\n    m = min(L)\n    sum = 0\n    if m <= 1 and M >= x:\n        L.append(L[-1])\n        for i in range(n):\n            sum += abs(L[i + 1] - L[i])\n    elif m <= 1:\n        L.append(L[-1])\n        for i in range(n):\n            sum += abs(L[i + 1] - L[i])\n        sum += min(2 * (x - M), x - L[0], x - L[-1])\n    elif M >= x:\n        L.append(L[-1])\n        for i in range(n):\n            sum += abs(L[i + 1] - L[i])\n        sum += min(2 * (m - 1), L[0] - 1, L[-1] - 1)\n    else:\n        L.append(L[-1])\n        for i in range(n):\n            sum += abs(L[i + 1] - L[i])\n        sum += min(2 * (m - 1), L[0] - 1, L[-1] - 1)\n        sum += min(2 * (x - M), x - L[0], x - L[-1])\n    print(sum)", "cases = int(input())\nfor case in range(cases):\n    (n, x) = map(int, input().split())\n    nums = list(map(int, input().split()))\n    diff = 0\n    for i in range(n - 1):\n        diff += abs(nums[i] - nums[i + 1])\n    min_val = min(nums)\n    max_val = max(nums)\n    if x > max_val:\n        diff += min((x - max_val) * 2, x - max(nums[0], nums[-1]))\n    if min_val > 1:\n        diff += min((min_val - 1) * 2, min(nums[0], nums[-1]) - 1)\n    print(diff)", "def main():\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    max_a = max(a)\n    min_a = min(a)\n    ans_max = max(0, (x - max_a) * 2)\n    ans_min = (min_a - 1) * 2\n    min_ = a[-1]\n    max_ = a[0]\n    if a[0] < a[-1]:\n        min_ = a[0]\n        max_ = a[-1]\n    ans_min = min(ans_min, min_ - 1)\n    ans_max = min(ans_max, max(0, x - max_))\n    ans = ans_max + ans_min\n    for i in range(1, n):\n        ans += abs(a[i] - a[i - 1])\n    print(ans)\nfor _ in range(int(input())):\n    main()", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    L = list(map(int, input().split()))\n    m1 = min(L)\n    m2 = max(L)\n    ans = 0\n    for i in range(1, n):\n        ans += abs(L[i] - L[i - 1])\n    ans += min(2 * (m1 - 1), abs(L[0] - 1), abs(L[-1] - 1))\n    if x > m2:\n        ans += min(2 * (x - m2), abs(L[0] - x), abs(L[-1] - x))\n    print(ans)", "t = int(input())\nfor j in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ce = min((x - max(a)) * 2, x - a[0], x - a[-1])\n    pe = min((min(a) - 1) * 2, a[0] - 1, a[-1] - 1)\n    if ce < 0:\n        ce = 0\n    extra = pe + ce\n    cost = 0\n    for i in range(len(a) - 1):\n        cost += abs(a[i] - a[i + 1])\n    cost += extra\n    print(cost)", "for i in range(int(input())):\n    (n, x) = map(int, input().split())\n    A = [int(k) for k in input().split()]\n    a = min(A)\n    b = max(A)\n    d = 0\n    for k in range(1, n):\n        d += abs(A[k] - A[k - 1])\n    C = 0\n    B = 0\n    if a > 1:\n        C = min(abs(A[0] - 1), abs(A[-1] - 1))\n        C = min(C, 2 * abs(a - 1))\n    if b < x:\n        B = min(abs(A[0] - x), abs(A[-1] - x))\n        B = min(B, 2 * abs(b - x))\n    print(d + C + B)", "for i in range(int(input())):\n    (n, x) = map(int, input().split())\n    A = [int(k) for k in input().split()]\n    a = min(A)\n    b = max(A)\n    d = 0\n    for k in range(1, n):\n        d += abs(A[k] - A[k - 1])\n    C = 0\n    B = 0\n    if a > 1:\n        C = min(abs(A[0] - 1), abs(A[-1] - 1))\n        C = min(C, 2 * abs(a - 1))\n    if b < x:\n        B = min(abs(A[0] - x), abs(A[-1] - x))\n        B = min(B, 2 * abs(b - x))\n    print(d + C + B)", "if True:\n    t = int(input())\n    for _ in range(t):\n        (n, x) = list(map(int, input().split()))\n        a = list(map(int, input().split()))\n        if a[0] > a[-1]:\n            a.reverse()\n        s = 0\n        for i in range(n - 1):\n            s += abs(a[i] - a[i + 1])\n        min_a = min(a)\n        max_a = max(a)\n        min_x = 1\n        max_x = x\n        rl = [min(min_x, min_a), min(max_x, min_a)]\n        rh = [max(min_x, max_a), max(max_x, max_a)]\n        if rl[0] != min_a:\n            if (min_a - rl[0]) * 2 < a[0] - rl[0]:\n                s += (min_a - rl[0]) * 2\n            else:\n                s += a[0] - rl[0]\n        if rh[1] != max_a:\n            if (rh[1] - max_a) * 2 < rh[1] - a[-1]:\n                s += (rh[1] - max_a) * 2\n            else:\n                s += rh[1] - a[-1]\n        print(s)", "N = int(input())\nfor _ in range(N):\n    (n, m) = input().split(' ')\n    nums = input().split(' ')\n    (n, m) = (int(n), int(m))\n    nums = [int(x) for x in nums]\n    ans = 0\n    _min = min(nums)\n    _max = max(nums)\n    for i in range(1, n):\n        ans += abs(nums[i] - nums[i - 1])\n    if 1 < _min:\n        ans += min(nums[0] - 1, nums[-1] - 1, 2 * (_min - 1))\n    if m > _max:\n        ans += min(m - nums[0], m - nums[-1], 2 * (m - _max))\n    print(ans)", "T = int(input())\nfor cid in range(T):\n    (N, X) = map(int, input().split())\n    A = list(map(int, input().split()))\n    (mn, mx) = (min(A), max(A))\n    a = 2 * (mn - 1)\n    b = max(0, 2 * (X - mx))\n    F = min(a + b, a + min(abs(X - A[0]), abs(X - A[-1])), b + min(abs(1 - A[0]), abs(1 - A[-1])), abs(1 - A[0]) + abs(X - A[-1]), abs(X - A[0]) + abs(1 - A[-1]))\n    for i in range(N - 1):\n        F += abs(A[i + 1] - A[i])\n    print(F)", "for time in range(int(input())):\n    (n, x) = map(int, input().split())\n    nums = list(map(int, input().split()))\n    if n == 1:\n        print(max(x - 1, nums[0] - 1, x - nums[0]))\n        continue\n    s = 0\n    mini = float('inf')\n    maxi = 0\n    for j in range(n - 1):\n        s += abs(nums[j] - nums[j + 1])\n        if nums[j] > maxi:\n            maxi = nums[j]\n        if nums[j] < mini:\n            mini = nums[j]\n    if nums[-1] > maxi:\n        maxi = nums[-1]\n    if nums[-1] < mini:\n        mini = nums[-1]\n    if x > maxi:\n        option1 = 2 * (x - maxi)\n        option2 = x - nums[0]\n        option3 = x - nums[-1]\n        s += min(option1, option2, option3)\n    if 1 < mini:\n        option1 = 2 * (mini - 1)\n        option2 = nums[0] - 1\n        option3 = nums[-1] - 1\n        s += min(option1, option2, option3)\n    print(s)", "import queue\nkkkk = int(input())\nfor _ in range(kkkk):\n    (n, x) = map(int, input().split())\n    if n == 1:\n        a = [int(input())]\n    else:\n        a = list(map(int, input().split()))\n    if n == 1:\n        print(max(x, a[0]) - 1)\n        continue\n    maxn = a[0]\n    minn = a[0]\n    maxx = 0\n    minx = 0\n    for i in range(len(a)):\n        if a[i] > maxn:\n            maxn = a[i]\n            maxx = i\n        if a[i] < minn:\n            minn = a[i]\n            minx = i\n    ans = 0\n    if maxn < x:\n        ans += min(min(abs(x - a[0]), abs(x - a[n - 1])), 2 * (x - maxn))\n    if minn > 1:\n        ans += min(min(abs(1 - a[0]), abs(1 - a[n - 1])), 2 * (minn - 1))\n    for i in range(n - 1):\n        ans += abs(a[i + 1] - a[i])\n    print(ans)", "T = int(input())\nfor t in range(T):\n    (n, x) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    (mi, ma, c, p1, p2) = (a[0], a[0], 0, 1, 1)\n    for i in range(1, n):\n        c += abs(a[i] - a[i - 1])\n        mi = min(mi, a[i])\n        ma = max(ma, a[i])\n    if mi == a[0] or mi == a[n - 1]:\n        p1 = 0\n    if ma == a[0] or ma == a[n - 1]:\n        p2 = 0\n    if mi > 1:\n        c += min((mi - 1) * (p1 + 1), min(a[0], a[n - 1]) - 1)\n    if ma < x:\n        c += min((x - ma) * (p2 + 1), x - max(a[0], a[n - 1]))\n    print(c)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    (dif, mini, maxi) = (0, a[0], a[0])\n    for i in range(n - 1):\n        dif += abs(a[i] - a[i + 1])\n        mini = min(mini, a[i + 1])\n        maxi = max(maxi, a[i + 1])\n    dif += min(mini * 2 - 2, a[0] - 1, a[-1] - 1)\n    if x > maxi:\n        dif += min(x * 2 - maxi * 2, x - a[0], x - a[-1])\n    print(dif)", "t = int(input())\nwhile t > 0:\n    p = input().split()\n    (n, x) = (int(p[0]), int(p[1]))\n    a = input().split()\n    for i in range(n):\n        a[i] = int(a[i])\n    (ma, mi) = (max(a), min(a))\n    ans = 0\n    r = 10 ** 7\n    s = 10 ** 7\n    f1 = 0\n    f2 = 0\n    for i in range(n):\n        if a[i] == ma and x > ma and (i == 0 or i == n - 1):\n            f1 = 1\n        if a[i] == mi and 1 < mi and (i == 0 or i == n - 1):\n            f2 = 1\n    (p, m) = (0, 0)\n    if ma < x:\n        if f1 == 1:\n            p = abs(ma - x)\n        else:\n            p = 2 * abs(ma - x)\n    if mi > 1:\n        if f2 == 1:\n            m = abs(mi - 1)\n        else:\n            m = 2 * abs(mi - 1)\n    for i in range(n):\n        if i == 0 or i == n - 1:\n            p = min(p, abs(x - a[i]))\n            m = min(m, abs(1 - a[i]))\n    for i in range(n - 1):\n        ans += abs(a[i] - a[i + 1])\n    ans += p + m\n    print(ans)\n    t -= 1", "def solve():\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 1):\n        ans += abs(a[i] - a[i + 1])\n    (mn, mx) = (min(a), max(a))\n    if mn == 1 and mx >= k:\n        print(ans)\n        return\n    if mn > 1:\n        res = min(a[0] - 1, a[-1] - 1)\n        for i in range(n - 1):\n            res = min(res, a[i] + a[i + 1] - 2 - abs(a[i] - a[i + 1]))\n        ans += res\n    if k > mx:\n        res = min(k - a[0], k - a[-1])\n        for i in range(n - 1):\n            res = min(res, 2 * k - a[i] - a[i + 1] - abs(a[i] - a[i + 1]))\n        ans += res\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    (mi, ma) = (min(arr), max(arr))\n    if n <= 2:\n        return max(ma, x) - 1\n    val = 0\n    for i in range(n - 1):\n        val += abs(arr[i] - arr[i + 1])\n    if mi <= 1 <= x <= ma:\n        return val\n    else:\n        ans = float('inf')\n        for i in range(2):\n            if i == 1:\n                arr = arr[::-1]\n            ans = min(ans, val + x - 1 + abs(arr[0] - x), val + x - 1 + abs(arr[-1] - 1))\n            for i in range(n - 1):\n                ans = min(ans, val - abs(arr[i + 1] - arr[i]) + x - 1 + abs(1 - arr[i]) + abs(x - arr[i + 1]))\n            cost = []\n            c = float('inf')\n            for i in range(n):\n                if i == 0:\n                    c = min(c, abs(arr[0] - 1))\n                else:\n                    c = min(c, -abs(arr[i] - arr[i - 1]) + abs(arr[i - 1] - 1) + abs(arr[i] - 1))\n                cost.append(c)\n            f = float('inf')\n            for i in range(n):\n                if i == n - 1:\n                    f = min(f, abs(arr[i] - x))\n                else:\n                    f = min(f, -abs(arr[i + 1] - arr[i]) + abs(arr[i] - x) + abs(arr[i + 1] - x))\n                ans = min(ans, val + f + cost[i])\n        return ans\nfor _ in range(int(input())):\n    print(solve())", "t = int(input())\nwhile t:\n    t -= 1\n    (n, x) = [int(x) for x in input().split()]\n    l = [int(x) for x in input().split()]\n    ans = int(1e+18)\n    cur = 0\n    for i in range(0, len(l) - 1):\n        cur += abs(l[i] - l[i + 1])\n    for i in range(2):\n        mn = abs(l[0] - 1)\n        ans = min(ans, cur + (x - 1) + abs(l[0] - x))\n        for i in range(len(l) - 1):\n            ans = min(ans, cur + abs(l[i] - 1) + abs(l[i + 1] - x) + (x - 1) - abs(l[i] - l[i + 1]))\n            ans = min(ans, cur + mn + abs(l[i + 1] - x) + abs(l[i] - x) - abs(l[i] - l[i + 1]))\n            mn = min(mn, abs(l[i] - 1) + abs(l[i + 1] - 1) - abs(l[i] - l[i + 1]))\n        ans = min(ans, cur + mn + abs(l[-1] - x))\n        l = l[::-1]\n    print(ans)"]