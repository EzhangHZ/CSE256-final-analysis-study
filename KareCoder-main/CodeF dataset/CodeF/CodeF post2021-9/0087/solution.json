["for s in [*open(0)][2::2]:\n    print(abs(sum(map(int, s.split()))))", "for s in [*open(0)][2::2]:\n    print(abs(sum(map(int, s.split()))))", "for a in [*open(0)][2::2]:\n    print(abs(sum(map(int, a.split()))))", "for s in [*open(0)][2::2]:\n    print(abs(sum(map(int, s.split()))))", "for s in [*open(0)][2::2]:\n    print(abs(sum(map(int, s.split()))))", "for s in [*open(0)][2::2]:\n    print(abs(sum(map(int, s.split()))))", "for s in [*open(0)][2::2]:\n    print(abs(sum(map(int, s.split()))))", "for s in [*open(0)][2::2]:\n    print(abs(sum(map(int, s.split()))))", "for s in [*open(0)][2::2]:\n    print(abs(sum(map(int, s.split()))))", "for s in [*open(0)][2::2]:\n    print(abs(sum(map(int, s.split()))))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(abs(sum(a)))", "for s in [*open(0)][2::2]:\n    print(abs(sum(map(int, s.split()))))", "import sys\nsys.setrecursionlimit(10 ** 9)\ninput = lambda : sys.stdin.readline().strip('\\r\\n')\nfrom collections import defaultdict as dd, deque\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(abs(sum(arr)))", "for s in [*open(0)][2::2]:\n    print(abs(sum(map(int, s.split()))))", "for s in [*open(0)][2::2]:\n    print(abs(sum(map(int, s.split()))))", "for a in [*open(0)][2::2]:\n    print(abs(sum(map(int, a.split()))))", "for s in [*open(0)][2::2]:\n    print(abs(sum(map(int, s.split()))))", "for g in [*open(0)][2::2]:\n    print(abs(sum(map(int, g.split()))))", "for s in [*open(0)][2::2]:\n    print(abs(sum(map(int, s.split()))))", "for l in [*open(0)][2::2]:\n    print(abs(sum(map(int, l.split()))))", "import sys, math\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(abs(sum(a)))", "t = int(input())\nresult = ''\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    r = abs(sum(a))\n    result += str(r)\n    result += '\\n'\nprint(result[:-1])", "data_count = int(input())\ndata_arrs = []\nfor i in range(data_count):\n    arr_length = int(input())\n    data_arrs.append(list(map(int, input().strip().split()))[:arr_length])\nfor data_arr in data_arrs:\n    print(abs(sum(data_arr)))\n4", "import sys\nimport math\nimport bisect\nimport heapq\nfrom sys import stdin, stdout\nfrom math import gcd, floor, sqrt, log\nfrom collections import defaultdict as dd\nfrom bisect import bisect_left as bl, bisect_right as br\nfrom functools import cmp_to_key\nsys.setrecursionlimit(100000000)\ninp = lambda : int(input())\nstrng = lambda : input().strip()\njn = lambda x, l: x.join(map(str, l))\nstrl = lambda : list(input().strip())\nmul = lambda : map(int, stdin.readline().strip().split())\nmulf = lambda : map(float, input().strip().split())\nseq = lambda : list(map(int, stdin.readline().strip().split()))\nceil = lambda x: int(x) if x == int(x) else int(x) + 1\nceildiv = lambda x, d: x // d if x % d == 0 else x // d + 1\nflush = lambda : stdout.flush()\nstdstr = lambda : stdin.readline()\nstdint = lambda : int(stdin.readline())\nstdpr = lambda x: stdout.write(str(x))\nsort = lambda x, compare: sorted(x, key=cmp_to_key(compare))\nmod = 1000000007\n\ndef sumMod(a, b):\n    return (a % mod + b % mod) % mod\nfor i in range(stdint()):\n    n = stdint()\n    print(abs(sum(seq())))", "n = int(input())\nsums = []\nfor i in range(n):\n    input()\n    sums.append(abs(sum(map(int, input().split()))))\nfor i in sums:\n    print(i)", "import sys\ninput = sys.stdin.readline\n\ndef solution(items: list, n: int):\n    (s1, s2) = (0, 0)\n    for item in items:\n        if item < 0:\n            s2 += item\n        else:\n            s1 += item\n    (s1, s2) = (abs(s1), abs(s2))\n    return abs(s1 - s2)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    items = list(map(int, input().split()))\n    print(solution(items, n))", "import sys\ninput = sys.stdin.readline\n\ndef readList():\n    return list(map(int, input().split()))\n\ndef readInt():\n    return int(input())\n\ndef readInts():\n    return map(int, input().split())\n\ndef readStr():\n    return input().strip()\n\ndef solve():\n    n = readInt()\n    arr = readList()\n    return abs(sum(arr))\nfor _ in range(int(input())):\n    print(solve())", "t = int(input())\nd = []\nfor i in range(t):\n    n = int(input())\n    f = [int(i) for i in input().split()]\n    d.append(abs(sum(f)))\nfor i in d:\n    print(i, end='\\n')", "import sys\ninput = sys.stdin.readline\ntc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(abs(sum(a)))", "from collections import defaultdict\nfrom sys import stdin, stdout\nimport string\n\ndef solution(N, A):\n    sum_plus = 0\n    sum_minus = 0\n    for a in A:\n        if a >= 0:\n            sum_plus += a\n        elif a < 0:\n            sum_minus += abs(a)\n    if sum_plus > sum_minus:\n        return sum_plus - sum_minus\n    else:\n        return sum_minus - sum_plus\ntest_cases = int(stdin.readline())\nfor it in range(test_cases):\n    N = int(stdin.readline())\n    A = list(map(int, stdin.readline().split()))\n    print(solution(N, A))", "t = int(input())\nanswers = []\nfor i in range(t):\n    n = int(input())\n    l = [int(number) for number in input().split()]\n    answers.append(abs(sum(l)))\nfor j in range(t):\n    print(answers[j])", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\ntest_cases = inp()\ninp_arr = []\nfor i in range(test_cases):\n    n = inp()\n    nums = inlt()\n    inp_arr.append(nums)\n\ndef findResult(nums):\n    p_nums = []\n    n_nums = []\n    for num in nums:\n        if num > 0:\n            p_nums.append(num)\n        elif num < 0:\n            n_nums.append(num)\n    s1 = abs(abs(sum(p_nums)) - abs(sum(n_nums)))\n    return s1\nresult = [findResult(nums) for nums in inp_arr]\nfor m in result:\n    print(m)", "t = int(input())\nl = []\nfor i in range(t):\n    ma = mi = 0\n    input()\n    l1 = list(map(int, input().split()))\n    for i in l1:\n        if i > 0:\n            ma += i\n        else:\n            mi += i\n    l.append(abs(ma + mi))\nfor i in l:\n    print(i)", "import sys\ninputs = ''.join(sys.stdin.readlines()).strip().split('\\n')[2::2]\nfor x in inputs:\n    summation = 0\n    for i in x.split():\n        summation += int(i)\n    print(abs(summation))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    (sum1, sum2) = (0, 0)\n    for i in lst:\n        if i > 0:\n            sum1 += i\n        else:\n            sum2 += i\n    print(abs(abs(sum1) - abs(sum2)))", "from collections import Counter, defaultdict\nimport sys\nimport math\n\ndef sol(arr, n):\n    return abs(sum(arr))\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    return str(input())\n\ndef invr():\n    return map(int, input().split())\nT = inp()\nfor i in range(T):\n    n = inp()\n    arr = inlt()\n    print(sol(arr, n))", "first_test = int(input())\nlist_of_sums = []\nfor i in range(0, first_test):\n    second_test = int(input())\n    taking_input_list = list(map(int, input().split(' ')))\n    output_sum = sum(taking_input_list)\n    if output_sum < 0:\n        list_of_sums.append(output_sum * -1)\n    else:\n        list_of_sums.append(output_sum)\nprint(*list_of_sums, sep='\\n')", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef ins():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef inl():\n    return map(int, input().split())\nT = inp()\nfor tt in range(0, T):\n    n = inp()\n    x = list(inl())\n    sp = sum(filter(lambda x: x > 0, x))\n    sn = sum(map(abs, filter(lambda x: x <= 0, x)))\n    if sn > sp:\n        (sp, sn) = (sn, sp)\n    print(sp - sn)", "n = int(input())\nans = []\nfor i in range(n):\n    t = int(input())\n    arr = input().split()\n    arr = [int(x) for x in arr]\n    sum_n = sum_p = 0\n    for k in arr:\n        if k < 0:\n            sum_n += k\n        else:\n            sum_p += k\n    ans.append(abs(abs(sum_p) - abs(sum_n)))\nfor i in ans:\n    print(i)", "input = __import__('sys').stdin.readline\nfor i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (num1, num2) = (0, 0)\n    for i in arr:\n        if i > 0:\n            num1 += i\n        else:\n            num2 += i\n    if abs(num1) > abs(num2):\n        print(abs(num1) - abs(num2))\n    else:\n        print(abs(num2) - abs(num1))", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_list_string():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\n\ndef get_print_int(x):\n    sys.stdout.write(str(x) + '\\n')\n\ndef get_print(x):\n    sys.stdout.write(x + '\\n')\n\ndef get_print_int_same(x):\n    sys.stdout.write(str(x) + ' ')\n\ndef get_print_same(x):\n    sys.stdout.write(x + ' ')\nfrom sys import maxsize\n\ndef solve():\n    for _ in range(get_int()):\n        n = get_int()\n        arr = get_list()\n        (pos, neg) = (0, 0)\n        for i in range(n):\n            if arr[i] >= 0:\n                pos += arr[i]\n            else:\n                neg += -1 * arr[i]\n        get_print_int(abs(pos - neg))\nsolve()", "t = int(input())\nanswers = []\nfor _ in range(t):\n    s1 = []\n    s2 = []\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in a:\n        if i >= 0:\n            s1.append(i)\n        else:\n            s2.append(i)\n    answers.append(abs(abs(sum(s1)) - abs(sum(s2))))\nfor i in answers:\n    print(i)", "num_input = int(input())\ntests = []\nfor i in range(num_input):\n    n = input()\n    nums = tuple([int(j) for j in input().split()])\n    tests.append(nums)\n\ndef count_max(arr):\n    spos = 0\n    sneg = 0\n    for num in arr:\n        if num > 0:\n            spos += num\n        else:\n            sneg += num\n    return abs(spos + sneg)\nfor test in tests:\n    print(count_max(test))", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    a1 = 0\n    b1 = 0\n    for i in a:\n        if i < 0:\n            b1 += i\n        else:\n            a1 += i\n    print(max(abs(a1) - abs(b1), abs(b1) - abs(a1)))", "amount = int(input())\ntestcasenum = []\narray = []\nfor i in range(amount):\n    testcasenum.append(int(input()))\n    array.append(list(map(int, input().split(' '))))\nfor i in range(amount):\n    s = abs(sum(array[i]))\n    print(s)", "def numbers():\n    n = int(input())\n    firstarray = []\n    secondarray = []\n    result = []\n    for i in range(n):\n        len_array = int(input())\n        array = map(int, input().split())\n        for j in array:\n            if j <= 0:\n                secondarray.append(j)\n            else:\n                firstarray.append(j)\n        result.append(abs(abs(sum(firstarray)) - abs(sum(secondarray))))\n        secondarray = []\n        firstarray = []\n    return print(*result, sep='\\n')\nnumbers()", "t = int(input())\nsums = []\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sum = 0\n    for i in range(n):\n        sum += a[i]\n    sums.append(abs(sum))\nfor i in range(len(sums)):\n    print(sums[i])", "n = int(input())\nres = []\nfor m in range(n):\n    m = int(input())\n    ks = [int(x) for x in input().split()]\n    sp = abs(sum([k for k in ks if k > 0]))\n    sn = abs(sum([k for k in ks if k < 0]))\n    res.append(abs(sp - sn))\nfor x in res:\n    print(x)", "from sys import stdin\nT = int(stdin.readline().rstrip())\nfor _ in range(T):\n    N = int(stdin.readline().rstrip())\n    l = list(map(int, stdin.readline().rstrip().split()))\n    l.sort()\n    s1 = 0\n    s2 = 0\n    for i in l:\n        if i < 0:\n            s1 -= i\n        else:\n            s2 += i\n    if s1 > s2:\n        print(s1 - s2)\n    else:\n        print(s2 - s1)", "import sys\n\ndef maxDiffSubsets(arr):\n    totalSum = 0\n    pos = False\n    neg = False\n    min = sys.maxsize\n    for i in range(len(arr)):\n        totalSum += arr[i]\n        if arr[i] > 0:\n            pos = True\n        if arr[i] < 0:\n            neg = True\n        if arr[i] < min:\n            min = arr[i]\n    if pos and neg:\n        return abs(totalSum)\n    elif pos or neg:\n        return abs(totalSum)\n    else:\n        return abs(totalSum) - 2 * abs(min)\nt = int(input())\nres = []\nfor i in range(0, t):\n    n = int(input())\n    mass = list(map(int, input().split()))\n    res.append(maxDiffSubsets(mass))\nfor i in res:\n    print(i)", "n = int(input())\nans = []\nfor i in range(n):\n    input()\n    lis = list(map(int, input().split(' ')))\n    pos = [i for i in lis if i >= 0]\n    neg = [i for i in lis if i < 0]\n    if neg == []:\n        ans.append(sum(pos))\n    elif sum(pos) > -1 * sum(neg):\n        ans.append(sum(pos) + sum(neg))\n    else:\n        ans.append(abs(sum(neg) + sum(pos)))\nfor i in ans:\n    print(i)", "t = int(input())\na = []\nn = []\nfor i in str('a' * t):\n    n.append(int(input()))\n    a.append(list(map(int, input().split())))\nk = 0\ni = 0\nl = 0\nv = 0\nb = 0\nfor k in str('a' * t):\n    h = 0\n    for i in 'a' * n[l]:\n        v = v + a[b][h]\n        h += 1\n    print(abs(v))\n    v = 0\n    b += 1\n    l += 1", "t = int(input())\nwhile t > 0:\n    a_len = int(input())\n    a = list(map(int, input().split()))\n    print(abs(sum(a)))\n    t -= 1", "I = input\nfor _ in ' ' * int(input()):\n    I()\n    print(abs(sum(map(int, I().split()))))", "import fileinput\n\ndef main():\n    lines = fileinput.input()\n    ntests = int(next(lines).rstrip('\\n'))\n    for test in range(ntests):\n        n = int(next(lines).rstrip('\\n'))\n        numbers = [int(num) for num in next(lines).rstrip('\\n').split(' ')]\n        pos = [num for num in numbers if num > 0]\n        neg = [num for num in numbers if num <= 0]\n        print(max(sum(pos) + sum(neg), -(sum(pos) + sum(neg))))\nmain()", "n = input()\np = []\nfor i in range(0, 2 * int(n)):\n    l = input()\n    p.append(l)\nfor j in range(1, 2 * int(n), 2):\n    h = [int(i) for i in p[j].split()]\n    po = 0\n    ne = 0\n    for k in h:\n        if k >= 0:\n            po = po + k\n        else:\n            ne = ne + k\n    if po >= ne * -1:\n        print(f'{po + ne}')\n    else:\n        print(f'{-1 * ne - po}')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    (*a,) = map(int, input().split())\n    print(abs(sum(a)))", "t = int(input())\nl = []\nfor i in range(t):\n    n = int(input())\n    a = list(input().split())\n    for i in range(len(a)):\n        a[i] = int(a[i])\n    x = []\n    y = []\n    for i in a:\n        if i < 0:\n            y.append(i)\n        else:\n            x.append(i)\n    l.append(abs(sum(x) - abs(sum(y))))\nfor i in l:\n    print(i)", "def max_sum(l, arr):\n    max_pos = 0\n    max_neg = 0\n    s = sum(arr)\n    for i in range(l):\n        if arr[i] >= 0:\n            max_pos += arr[i]\n        else:\n            max_neg += arr[i]\n    if max_pos >= abs(max_neg):\n        sum1 = max_pos\n        sum2 = s - max_pos\n        return abs(sum1) - abs(sum2)\n    else:\n        sum1 = max_neg\n        sum2 = s - max_neg\n        return abs(sum1) - abs(sum2)\nT = int(input())\nans = []\nfor i in range(T):\n    l = int(input())\n    arr = [int(i) for i in input().split(' ')]\n    k = max_sum(l, arr)\n    ans.append(k)\nfor i in ans:\n    print(i)", "import sys\nfrom bisect import bisect_left, bisect_right\nfrom heapq import heapify, heappush, heappop\nfrom collections import deque\nfrom math import gcd, sqrt, log10, log2, floor, ceil, sqrt\nfrom collections import deque, defaultdict\ninput = sys.stdin.readline\n\ndef il():\n    return [int(a) for a in input().strip().split()]\n\ndef ip():\n    return input().strip()\n\ndef ii():\n    return int(input())\nmod = 1000000000 + 7\ndx = [-1, -2, 1, 2, 2, -2, -1, 1]\ndy = [2, 1, 2, 1, -1, -1, -2, -2]\nfor _ in range(ii()):\n    n = il()\n    arr = il()\n    n = 0\n    p = 0\n    for k in arr:\n        if k < 0:\n            n += abs(k)\n        else:\n            p += k\n    print(abs(p - n))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(abs(sum(l)))", "def getint():\n    return [int(i) for i in input().split()]\n\ndef get():\n    return int(input())\n\ndef S():\n    for test in range(int(input())):\n        solve()\n\ndef solve():\n    n = get()\n    a = getint()\n    print(abs(sum(a)))\nS()", "from sys import stdin\n\ndef readint():\n    return int(stdin.readline())\n\ndef readarray(typ):\n    return list(map(typ, stdin.readline().split()))\n\ndef readmatrix(n):\n    M = []\n    for _ in range(n):\n        row = readarray(int)\n        assert len(row) == n\n        M.append(row)\n    return M\n\ndef mult(M, v):\n    n = len(M)\n    return [sum((M[i][j] * v[j] for j in range(n))) for i in range(n)]\nt = readint()\nfor _ in range(t):\n    n = readint()\n    arr = readarray(int)\n    arr_s = sorted(arr)\n    g1 = []\n    g2 = []\n    for i in arr_s:\n        if i < 0:\n            g2.append(i)\n        else:\n            g1.append(i)\n    print(abs(sum(g1) - abs(sum(g2))))", "def sol(lst):\n    return abs(sum(lst))\nT = int(input())\nfor test_case in range(1, T + 1):\n    n = int(input())\n    lst = [int(s) for s in input().split(' ')]\n    s = sol(lst)\n    print(s)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    res = sum(arr)\n    print(abs(res))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(abs(sum(a)))", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    print(abs(sum(x)))", "def main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = map(int, input().split())\n        print(abs(sum(a)))\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    print(abs(sum(a)))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(abs(sum(arr)))", "def function():\n    lengthofarray = int(input())\n    sumpositive = 0\n    sumnegative = 0\n    array = input()\n    list_array = array.split(' ')\n    for item in list_array:\n        x = int(item)\n        if x >= 0:\n            sumpositive += x\n        else:\n            sumnegative -= x\n    difference = sumpositive - sumnegative\n    if difference < 0:\n        difference *= -1\n    print(difference)\ntestcases = int(input())\nfor x in range(testcases):\n    function()", "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    print(abs(sum(lis)))", "test = int(input())\nwhile test:\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    print(abs(sum(a)))\n    test -= 1", "t = int(input())\ntt = []\nfor i in range(t):\n    n = int(input())\n    temp = []\n    h = input().split(' ')\n    hh = list(map(int, h))\n    tt.append(hh)\nfor i in range(t):\n    k = tt[i]\n    sk = sum(k)\n    kp = list(map(abs, k))\n    skp = sum(kp)\n    skpi = int((skp + sk) / 2)\n    skoi = sk - skpi\n    if abs(skpi) > abs(skoi):\n        print(abs(skpi) - abs(skoi))\n    else:\n        print(abs(skoi) - abs(skpi))", "def main():\n    n = int(input())\n    totales = []\n    for i in range(n):\n        s1 = []\n        s2 = []\n        test = int(input())\n        lista = input().split()\n        lista = [int(x) for x in lista]\n        for j in range(test):\n            if lista[j] < 0:\n                s2.append(lista[j])\n            else:\n                s1.append(lista[j])\n        s1r = abs(sum(s1))\n        s2r = abs(sum(s2))\n        total = abs(s1r - s2r)\n        totales.append(total)\n    for i in range(len(totales)):\n        print(totales[i])\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(abs(sum(arr)))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(abs(sum(arr)))", "for _ in range(int(input())):\n    n = input()\n    print(abs(sum(map(int, input().split()))))", "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    s = sum(lst)\n    print(abs(s))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(abs(sum(list(map(int, input().split())))))", "for i in range(int(input())):\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    print(abs(sum(list1)))", "def main():\n    for _ in range(int(input())):\n        arr_len = int(input())\n        arr = list(map(int, input().split()))\n        print(abs(sum(arr)))\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(abs(sum(a)))", "for _ in range(int(input())):\n    n_ = input()\n    n = input().split()\n    total = 0\n    for i in range(int(n_)):\n        total += int(n[i])\n    print(abs(total))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = 0\n    for c in input().split():\n        s += int(c)\n    print(abs(s))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    print(abs(sum(arr)))", "num = int(input())\nfor i in range(0, num):\n    n = int(input())\n    li = input().split()\n    li = [int(x) for x in li]\n    s = sum(li)\n    print(abs(s))", "for _ in range(int(input())):\n    _ = int(input())\n    print(abs(sum(map(int, input().split()))))", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(no) for no in input().split(' ')]\n    print(abs(sum(a)))", "for i in range(int(input())):\n    n = input()\n    x = list(map(int, input().split()))\n    print(abs(sum(x)))", "t = int(input())\nfor g in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    summ = sum(a)\n    if summ < 0:\n        print(-summ)\n    else:\n        print(summ)", "for _ in range(int(input())):\n    n = int(input())\n    print(abs(sum(map(int, input().split()))))", "for i in range(int(input())):\n    a = input()\n    l = map(int, input().split())\n    print(abs(sum(l)))", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    res = abs(sum(a))\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(abs(sum(a)))", "tesrty = int(input())\nfor tc4tr in range(tesrty):\n    hgawq = int(input())\n    lsrbh = list(map(int, input().split()))\n    sumdevf = sum(lsrbh)\n    print(abs(sumdevf))", "for _ in range(int(input())):\n    ven = int(input())\n    print(abs(sum(list(map(int, input().split())))))", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    print(abs(sum(lst)))"]