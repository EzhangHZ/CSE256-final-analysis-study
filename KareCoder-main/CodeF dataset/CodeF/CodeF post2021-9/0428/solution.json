["from sys import stdin, stdout\ninput = stdin.readline\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    p = q = n - 1\n    c = 0\n    while p >= 0:\n        if a[p] == b[q]:\n            q -= 1\n        else:\n            c += 1\n        p -= 1\n    print(c)", "from sys import stdin, stdout\ninput = stdin.readline\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    p = q = n - 1\n    c = 0\n    while p >= 0:\n        if a[p] == b[q]:\n            q -= 1\n        else:\n            c += 1\n        p -= 1\n    print(c)", "from collections import deque\nimport sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    A.reverse()\n    A = deque(A)\n    B = list(map(int, input().split()))\n    result = 0\n    i = n - 1\n    for _ in range(len(A), 0, -1):\n        q = A.popleft()\n        if q == B[i]:\n            result += 1\n            i -= 1\n        else:\n            A.append(q)\n    print(n - result)", "import sys\ninput = sys.stdin.readline\ncases = int(input())\nfor _ in range(cases):\n    length = int(input())\n    morning_ids = list(input().split())\n    rank = {p: i for (i, p) in enumerate(morning_ids)}\n    evening_ids = list(input().split())\n    update_ranks = list(map(lambda x: rank[x], evening_ids))\n    pre = float('inf')\n    keep_num = 0\n    for cur in reversed(update_ranks):\n        if cur > pre:\n            break\n        keep_num += 1\n        pre = cur\n    print(length - keep_num)", "def fun(n, a, b):\n    (inda, indb) = (-1, -1)\n    count = 0\n    while inda >= -n:\n        if a[inda] == b[indb]:\n            count += 1\n            indb -= 1\n        inda -= 1\n    return n - count\nassert fun(5, [1, 4, 2, 5, 3], [4, 5, 1, 2, 3]) == 2\nassert fun(6, [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6]) == 0\nassert fun(8, [8, 2, 4, 7, 1, 6, 5, 3], [5, 6, 1, 4, 8, 2, 7, 3]) == 4\nassert fun(8, [8, 2, 4, 7, 1, 6, 5, 3], [8, 6, 1, 4, 5, 2, 7, 3]) == 5\nassert fun(8, [8, 2, 4, 7, 1, 6, 5, 3], [8, 6, 3, 4, 5, 2, 7, 1]) == 5\nassert fun(8, [8, 2, 4, 7, 1, 6, 5, 3], [2, 8, 4, 7, 1, 6, 5, 3]) == 1\nassert fun(1, [1], [1]) == 0\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(fun(n, a, b))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = 0\n    for i in range(n - 1, -1, -1):\n        if a[i] != b[i + c]:\n            c += 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    count = 0\n    i = n - 1\n    j = n - 1\n    while i >= 0 and j >= 0:\n        if arr1[i] == arr2[j]:\n            i -= 1\n            j -= 1\n        else:\n            count += 1\n            i -= 1\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = 0\n    j = 1\n    for i in b[::-1]:\n        while j <= n and a[-j] != i:\n            j += 1\n        if j > n:\n            break\n        else:\n            ans += 1\n    print(n - ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    brr = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 1, -1, -1):\n        if arr[i] != brr[i + ans]:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    count = 0\n    i = n - 1\n    j = n - 1\n    while i >= 0 and j >= 0:\n        if arr1[i] == arr2[j]:\n            i -= 1\n            j -= 1\n        else:\n            count += 1\n            i -= 1\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    count = 0\n    j = n - 1\n    for i in range(n - 1, -1, -1):\n        if a[i] == b[j]:\n            count += 1\n            j -= 1\n    print(n - count)", "for _ in range(int(input())):\n    n = int(input())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    arr1_d_pos = {}\n    last_pos = n - 1\n    ok = 0\n    for x in range(n):\n        arr1_d_pos[arr1[x]] = x\n    for x in range(n - 1, -1, -1):\n        curr = arr2[x]\n        pos_in_arr1 = arr1_d_pos[curr]\n        if pos_in_arr1 <= last_pos:\n            last_pos = pos_in_arr1\n            ok += 1\n        else:\n            break\n    print(n - ok)", "t = int(input())\nfor _ in range(t):\n    input()\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    i = len(a) - 1\n    j = len(a) - 1\n    kont = 0\n    while i >= 0:\n        if a[i] == b[j]:\n            i -= 1\n            j -= 1\n        else:\n            kont += 1\n            i -= 1\n    print(kont)", "from collections import defaultdict\nfor test in range(int(input())):\n    n = int(input())\n    indexx = {}\n    online1 = list(map(int, input().split(' ')))\n    for (ii, member) in enumerate(online1):\n        indexx[member] = ii\n    online2 = list(map(int, input().split(' ')))\n    ans = online2.index(online1[0])\n    i = ans + 1\n    while i < n:\n        prev = online2[i - 1]\n        curr = online2[i]\n        pos_prev_in_1 = indexx[prev]\n        pos_curr_in_1 = indexx[curr]\n        if pos_prev_in_1 > pos_curr_in_1:\n            ans = i\n        i += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    count = 0\n    i = n - 1\n    j = n - 1\n    while i >= 0 and j >= 0:\n        if arr1[i] == arr2[j]:\n            i -= 1\n            j -= 1\n        else:\n            count += 1\n            i -= 1\n    print(count)", "k = int(input())\nfor i in range(0, k):\n    n = int(input())\n    bl = list(map(int, input().split()))\n    idi = list(map(int, input().split()))\n    g = n - 1\n    t = n - 1\n    count = 0\n    while t > -1:\n        if idi[g] == bl[t]:\n            count += 1\n            g -= 1\n        t -= 1\n    print(n - count)", "k = int(input())\nres = []\nwhile k > 0:\n    memo = {}\n    _ = input()\n    x = input().split(' ')\n    for i in range(len(x)):\n        memo[int(x[i])] = i + 1\n    x = input().split(' ')\n    cur_seen = []\n    for num in x:\n        cur_seen.append(memo[int(num)])\n    last_seen = [i for i in range(1, len(cur_seen) + 1)]\n    left = 0\n    cur = 0\n    seen = set()\n    q = 0\n    for i in range(len(cur_seen)):\n        if cur_seen[i] in seen:\n            continue\n        if last_seen[left] == cur_seen[i]:\n            seen.add(cur_seen[i])\n            q += 1\n            while left < len(cur_seen):\n                if last_seen[left] not in seen:\n                    break\n                left += 1\n        else:\n            seen.add(cur_seen[i])\n            cur += 1\n            cur += q\n            q = 0\n    res.append(cur)\n    k -= 1\nfor x in res:\n    print(x)"]