["for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(str(2 * (a - b)) + '\\n' + ' '.join([str(x) for x in range(a, b - 1, -1)] + [str(x) for x in range(b + 1, a)]))", "def solve(x, y):\n    res = list(range(x, y - 1, -1)) + list(range(y + 1, x))\n    return res\nT = int(input())\nfor t in range(T):\n    (x, y) = list(map(int, input().split()))\n    res = solve(x, y)\n    print(len(res))\n    print(' '.join(map(str, res)))", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    (x, y) = map(int, inp().split())\n    print((x - y) * 2)\n    arr = list(range(y, x)) + list(range(x, y, -1))\n    print(' '.join(map(str, arr)))\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "def getint():\n    return int(input())\n\ndef getfloat():\n    return float(input())\n\ndef getints():\n    return list(map(int, input().split()))\n\ndef getfloats():\n    return list(map(float, input().split()))\n\ndef answer():\n    (a, b) = getints()\n    print((a - b) * 2)\n    ans = []\n    for i in range(a, b, -1):\n        ans.append(i)\n    for i in range(b, a):\n        ans.append(i)\n    print(' '.join(map(str, ans)))\nT = getint()\nfor i in range(T):\n    answer()", "T = int(input())\nfor i in range(T):\n    (x, y) = input().split()\n    (x, y) = (int(x), int(y))\n    ans = [i for i in range(y, x + 1)]\n    ans.extend(ans[-2:0:-1])\n    print(len(ans))\n    print(' '.join(list(map(str, ans))))", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nT = int(input())\nfor _ in range(T):\n    (N, M) = map(int, input().split())\n    a = [i for i in range(M + 1, N)] + [N] + [i for i in range(N - 1, M - 1, -1)]\n    print(len(a))\n    print(' '.join(map(str, a)))", "t = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    print(2 * (x - y))\n    l = [str(i) for i in range(y, x + 1)]\n    h = [str(i) for i in range(x - 1, y, -1)]\n    print(' '.join(l + h))", "def helper(x, y):\n    arr = [y + 1]\n    curr = arr[0]\n    mx = False\n    mini = False\n    while curr != x:\n        curr += 1\n        arr.append(curr)\n    while curr != y:\n        curr -= 1\n        arr.append(curr)\n        if curr == y:\n            break\n    while abs(curr - arr[0]) != 1:\n        curr += 1\n        arr.append(curr)\n        if abs(curr - arr[0]) == 1:\n            break\n    return [len(arr), ' '.join(list(map(str, arr)))]\nfor i in range(int(input())):\n    inp = list(map(int, input().split()))\n    rez = helper(inp[0], inp[1])\n    print(rez[0])\n    print(rez[1])", "def f(min, max):\n    l = [i for i in range(min, max + 1, 1)]\n    l1 = l[1:-1]\n    l1.reverse()\n    l = l + l1\n    length = len(l)\n    l = list(map(str, l))\n    l = ' '.join(l)\n    print(length)\n    print(l)\nfor t in range(int(input())):\n    inp1 = list(map(int, input().split(' ')))\n    min = inp1[1]\n    max = inp1[0]\n    f(min, max)", "n = int(input())\nfor i in range(n):\n    (y, x) = map(int, input().split())\n    w = list(range(x, y + 1))\n    base = w + w[::-1][1:len(w) - 1]\n    print(len(base))\n    print(' '.join(map(str, base)))", "def solve():\n    numbers = [int(x) for x in input().split()]\n    x = numbers[0]\n    y = numbers[1]\n    n = 0\n    a = [str(x) for x in list(range(y, x + 1))]\n    for i in range(x - 1, y, -1):\n        a.append(str(i))\n    print(len(a))\n    print(' '.join(a))\nt = int(input())\nfor i in range(t):\n    solve()", "t = int(input())\nfor _ in range(t):\n    (x, y) = (int(a) for a in input().split())\n    print(2 * (x - y))\n    out = [i for i in range(y, x + 1)] + [i for i in range(x - 1, y, -1)]\n    print(' '.join(map(str, out)))", "for t in range(int(input())):\n    (x, y) = map(int, input().split())\n    print(2 * abs(x - y))\n    res = [str(x)] + [str(i) for i in range(x - 1, y, -1)] + [str(y)] + [str(i) for i in list(range(x - 1, y, -1))[::-1]]\n    print(' '.join(res))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    mylist = []\n    for i in range(m, n + 1):\n        mylist.append(i)\n    for j in range(n - 1, m, -1):\n        mylist.append(j)\n    print(len(mylist))\n    print(' '.join(map(str, mylist)))", "import os\nimport math\nimport collections\nimport bisect\nimport functools\nimport itertools\nimport heapq\n\ndef solve(ma, mi):\n    a = list(range(ma, mi - 1, -1))\n    a += list(range(mi + 1, ma))\n    return a\nt = int(input())\nfor _ in range(t):\n    (ma, mi) = map(int, input().split())\n    res = solve(ma, mi)\n    print(len(res))\n    print(' '.join(map(str, res)))", "gandhicharu = int(input())\nfor _ in range(gandhicharu):\n    (xgvf, ygty) = map(int, input().split())\n    res = []\n    for i in range(ygty + 1, xgvf + 1):\n        res.append(str(i))\n    for i in range(xgvf - 1, ygty - 1, -1):\n        res.append(str(i))\n    print(len(res))\n    print(' '.join(res))", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    L = []\n    for i in range(x, y, -1):\n        L.append(i)\n    for j in range(y, x):\n        L.append(j)\n    print(len(L))\n    print(' '.join(map(str, L)))", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    L = []\n    for i in range(x, y, -1):\n        L.append(i)\n    for j in range(y, x):\n        L.append(j)\n    print(len(L))\n    print(' '.join(map(str, L)))", "def solve(x, y):\n    len = 2 * (x - y)\n    out = [0] * len\n    for i in range(len // 2):\n        out[i] = x - i\n        out[i + len // 2] = y + i\n    return out\nt = int(input())\nans = []\nfor ti in range(t):\n    (x, y) = [int(x) for x in input().split()]\n    ans.append(solve(x, y))\nfor a in ans:\n    print(len(a))\n    print(' '.join([str(x) for x in a]))", "for _ in range(int(input())):\n    (y, x) = map(int, input().split())\n    lst = list(range(x + 1, y))\n    res = list(map(str, [x] + lst + [y] + list(reversed(lst))))\n    print(len(res), '\\n', ' '.join(map(str, res)))", "import sys\n\ndef read(func=int):\n    return func(sys.stdin.readline().strip())\n\ndef read_array(func=int):\n    return list(map(func, read(str).split()))\nt = read()\nfor _ in range(t):\n    (x, y) = read_array()\n    n = 2 * (x - y)\n    A = [0] * n\n    idx = 0\n    for i in range(y, x + 1):\n        A[idx] = i\n        idx += 1\n    for i in range(x - 1, y, -1):\n        A[idx] = i\n        idx += 1\n    print(n)\n    print(' '.join([str(ai) for ai in A]))", "n = int(input())\nfor i in range(n):\n    k = input()\n    (u, v) = (int(k.split(' ')[0]), int(k.split(' ')[1]))\n    arr = []\n    for j in range(v, u):\n        arr += [str(j)]\n    for j in range(u, v, -1):\n        arr += [str(j)]\n    print(len(arr))\n    print(' '.join(arr))", "T = int(input())\nfor t in range(T):\n    (X, Y) = [int(x) for x in input().split()]\n    ans = []\n    for i in range(X, Y - 1, -1):\n        ans.append(str(i))\n    for i in range(Y + 1, X):\n        ans.append(str(i))\n    print(len(ans))\n    print(' '.join(ans))", "import math\nT = int(input(''))\nfor i in range(T):\n    str1 = input()\n    l1 = [int(c) for c in str1.split()]\n    n = 2 + 2 * (l1[0] - l1[1] - 1)\n    ans = [l1[1]]\n    for j in range(l1[1] + 1, l1[0]):\n        ans.append(j)\n    ans.append(l1[0])\n    for j in reversed(range(l1[1] + 1, l1[0])):\n        ans.append(j)\n    print(n)\n    print(' '.join([str(c) for c in ans]))", "def f(x, y):\n    ox = x\n    s = ''\n    l = 2 * abs(x - y)\n    a = []\n    while x != y:\n        a.append(x)\n        a.append(' ')\n        x -= 1\n    while x != ox:\n        a.append(x)\n        a.append(' ')\n        x += 1\n    print(l)\n    a = map(str, a)\n    print(''.join(a))\ninp = int(input())\nfor i in range(inp):\n    (a, b) = list(map(int, input().split()))\n    f(a, b)", "t = int(input())\nfor nouse in range(t):\n    (x, y) = map(int, input().split())\n    m = []\n    i = y\n    m.append(i)\n    while i != x:\n        i += 1\n        m.append(i)\n    while i != y + 1:\n        i -= 1\n        m.append(i)\n    print(len(m))\n    print(' '.join(list(map(str, m))))", "import sys\ninput = sys.stdin.readline\nprint = sys.stdout.write\ncases = int(input())\nmatrix = []\nfor i in range(cases):\n    matrix = list(map(int, input().split()))\n    print(str(2 * (matrix[0] - matrix[1] + 1) - 2) + '\\n')\n    for k in range(matrix[0], matrix[1] - 1, -1):\n        print(str(k) + ' ')\n    for k in range(matrix[1] + 1, matrix[0]):\n        print(str(k) + ' ')\n    print('\\n')", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    x = [i for i in range(a - 1, b, -1)]\n    res = [a] + x + [b] + x[::-1]\n    print(len(res))\n    print(*res)", "def solution(x, y):\n    res = [i for i in range(x, y - 1, -1)]\n    res.extend([i for i in range(y + 1, x)])\n    print(len(res))\n    print(*res)\nt = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    solution(x, y)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    a = list(range(y, x))\n    b = [x] + a[::-1]\n    c = b[::-1]\n    d = c[1:-1]\n    f = b + d\n    print(len(f))\n    print(*f)", "t = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    print((x - y) * 2)\n    print(*range(y, x), *range(x, y, -1))", "kol = int(input())\nfor j in range(0, kol):\n    (n, m) = map(int, input().split())\n    min_ = min(n, m)\n    max_ = max(n, m)\n    l1 = list(range(min_, max_))\n    l2 = list(range(max_, min_, -1))\n    res = l1 + l2\n    print(len(res))\n    print(*res)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    a = list(range(y, x + 1))\n    a += a[-2:0:-1]\n    print(len(a))\n    print(*a)", "t = int(input())\nfor i in range(t):\n    (a, b) = [int(v) for v in input().split()]\n    p1 = [v for v in range(min(a, b), max(a, b))]\n    p2 = [v for v in range(min(a, b) + 1, max(a, b) + 1)]\n    p2.reverse()\n    print(len(p1 + p2))\n    print(*p1 + p2, sep=' ')", "q = int(input())\nfor i in range(q):\n    (a, b) = map(int, input().split())\n    l1 = [v for v in range(min(a, b), max(a, b))]\n    l2 = [v for v in range(min(a, b) + 1, max(a, b) + 1)]\n    l2.reverse()\n    print(len(l1 + l2))\n    print(*l1 + l2, sep=' ')", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    ans = tuple(range(y, x + 1)) + tuple(range(x - 1, y, -1))\n    print(len(ans))\n    print(*ans)", "for _ in range(int(input())):\n    (smax, smin) = map(int, input().split())\n    res = list(range(smax - 1, smax)) + list(range(smax, smin, -1)) + list(range(smin, smax - 1))\n    print(len(res))\n    print(*res)", "import functools\nimport itertools\nimport sys\nfrom collections import defaultdict\n\ndef solution():\n    (a, b) = map(int, input().split())\n    n = a - b\n    data = list(range(a, b, -1)) + list(range(b, a))\n    print(2 * n)\n    print(*data)\nt = int(input())\nfor _ in range(t):\n    solution()", "t = int(input())\nfor _ in range(t):\n    (x, y) = [int(x) for x in input().split()]\n    print(2 * (x - y))\n    print(*[i for i in range(y, x)] + [i for i in range(x, y, -1)])", "for _ in range(int(input())):\n    (x, y) = [int(i) for i in input().split()]\n    s = y\n    l = 2 * (x - s)\n    print(l)\n    res = [i for i in range(s, s + l // 2)]\n    res2 = [i for i in range(s + l // 2, s, -1)]\n    res = res + res2\n    print(*res)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    arr = []\n    print(x - y + (x - 1 - y) + 1)\n    for i in range(y + 1, x + 1):\n        arr.append(i)\n    for j in range(x - 1, y - 1, -1):\n        arr.append(j)\n    print(*arr)", "import sys\ninput = sys.stdin.readline\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    (x, y) = (max(a, b), min(a, b))\n    s = [i for i in range(x, y, -1)] + [i for i in range(y, x)]\n    print(len(s))\n    print(*s)", "for _ in range(int(input())):\n    (mx, mn) = input().split()\n    (mx, mn) = (int(mx), int(mn))\n    r = []\n    for i in range(mn, mx + 1):\n        r.append(i)\n    r += r[1:-1][::-1]\n    print(len(r))\n    print(*r)", "def function():\n    (x, y) = input().split(' ')\n    x = int(x)\n    y = int(y)\n    a = (x - y) * 2\n    print(a)\n    for k in range(y, x):\n        print(k, end=' ')\n    for k in range(x, y, -1):\n        print(k, end=' ')\n    print('')\n\ndef main():\n    t = int(input())\n    for i in range(0, t):\n        function()\nmain()", "from collections import deque\nimport sys\ninput = lambda : sys.stdin.readline().strip()\nmod = 7 + 10 ** 9\n\ndef solve():\n    (a, b) = [int(i) for i in input().split()]\n    d = deque()\n    for i in range(a, b - 1, -1):\n        d.append(i)\n    for i in range(b + 1, a):\n        d.append(i)\n    return d\nfor i in range(int(input())):\n    o = solve()\n    print(len(o))\n    print(*o)", "T = int(input())\nfor t in range(0, T):\n    (x, y) = map(int, input().split(' '))\n    n = x - y\n    print(2 * n)\n    lst = list(range(y + 1, x + 1))\n    lst += list(range(y, x))[::-1]\n    print(*lst)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, m) = map(int, input().split())\n    print(2 * (n - m))\n    for i in range(n, m - 1, -1):\n        print(i, end=' ')\n    for i in range(m + 1, n):\n        print(i, end=' ')\n    print()\nt = int(input())\nfor _ in range(t):\n    solve()", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    print((n - q) * 2)\n    print(*[i for i in range(q, n + 1)], *[i for i in range(n - 1, q, -1)])", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    print((x - y) * 2)\n    print(*range(y, x), *range(x, y, -1))", "for testcase in range(int(input())):\n    list = []\n    (x, y) = map(int, input().split())\n    for i in range(y, x):\n        list.append(i)\n    for i in range(x, y, -1):\n        list.append(i)\n    print(len(list))\n    print(*list)", "import collections\nimport math\nimport heapq\nfor _ in range(int(input())):\n    (x, y) = list(map(int, input().split()))\n    res = []\n    for i in range(x, y - 1, -1):\n        res.append(i)\n    for i in range(y + 1, x):\n        res.append(i)\n    print(len(res))\n    print(*res)", "t = int(input())\nans = []\nres = []\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    ans.append(abs(x - y) * 2)\n    res.append([i for i in range(y, x)] + [j for j in range(x, y, -1)])\nfor i in range(t):\n    print(ans[i])\n    print(*res[i])", "import sys\nsys_input = sys.stdin.readline\nsys_print = sys.stdout.write\n\ndef testcase():\n    (mx, mn) = map(int, sys_input().split())\n    n = mx - mn\n    print(2 * n)\n    arr = [*range(mx, mn, -1)] + [*range(mn, mx)]\n    print(*arr)\nt = int(sys_input())\nfor _ in range(t):\n    testcase()", "def intRd():\n    return int(input())\n\ndef lstRd():\n    return list(map(int, input().split()))\nfor _ in range(intRd()):\n    (x, y) = lstRd()\n    print((x - y) * 2)\n    for i in range(y, x):\n        print(i, end=' ')\n    for i in range(x, y, -1):\n        print(i, end=' ')\n    print()", "t = int(input())\nfor i in range(t):\n    (x, y) = map(int, input().split())\n    length = abs(x - y) * 2\n    low = min(x, y)\n    high = max(x, y)\n    answer = [i for i in range(low, high + 1)]\n    answer += [i for i in range(high - 1, low, -1)]\n    print(length)\n    print(*answer)", "t = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split(' '))\n    if x > y:\n        (x, y) = (y, x)\n    print((y - x) * 2)\n    for i in range(x, y):\n        print(i, end=' ')\n    for i in range(y, x, -1):\n        print(i, end=' ')\n    print()", "t = int(input())\nfor i in range(0, t):\n    (b, a) = list(map(int, input().split()))\n    c = (b + a) // 2\n    d = 0\n    e = (b - a) * 2\n    if e == 2:\n        print(2)\n        print(a, b)\n    else:\n        print(e)\n        for j in range(c, b + 1):\n            print(j, end=' ')\n        for j in range(b - 1, a - 1, -1):\n            print(j, end=' ')\n        for j in range(a + 1, c):\n            print(j, end=' ')\n    print('\\r')", "t = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    n = 2 * (x - y)\n    print(n)\n    for x in range(y, x + 1):\n        print(x, end=' ')\n    for x in range(x - 1, y, -1):\n        print(x, end=' ')\n    print()", "t = int(input())\nfor test in range(t):\n    (a, b) = map(int, input().strip().split())\n    print(2 * (a - b))\n    for i in range(b, a):\n        print(i, end=' ')\n    for i in range(a, b, -1):\n        print(i, end=' ')\n    print()", "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    (x, y) = map(int, input().split())\n    arr = []\n    for j in range(x, y - 1, -1):\n        arr.append(j)\n    for j in range(y + 1, x):\n        arr.append(j)\n    print(len(arr))\n    print(*arr)", "test_case = int(input())\nfor test in range(test_case):\n    (x, y) = map(int, input().split())\n    print(2 * (x - y))\n    P = []\n    for i in range(y + 1, x + 1):\n        P.append(i)\n    for i in range(x - 1, y - 1, -1):\n        P.append(i)\n    print(*P)", "def solve():\n    (a, b) = map(int, input().split())\n    if a - b == 1:\n        print(2)\n        print(a - 1, a)\n        return\n    print((a - b) * 2)\n    print(a - 1, a, a - 1, end=' ')\n    for i in range(a - 2, b - 1, -1):\n        print(i, end=' ')\n    for i in range(b + 1, a - 1):\n        print(i, end=' ')\n    print('')\nfor _ in range(int(input())):\n    solve()", "for t in range(int(input())):\n    (x, y) = map(int, input().split())\n    ans = []\n    if x == y:\n        ans.append(x)\n    else:\n        temp = list(range(y + 1, x))\n        ans.append(y)\n        ans += temp\n        ans.append(x)\n        temp.reverse()\n        ans += temp\n    print(len(ans))\n    print(*ans)", "t = int(input())\nfor _ in range(0, t):\n    (x, y) = map(int, input().split(' '))\n    print(2 * (x - y))\n    for i in range(x, y - 1, -1):\n        print(i, end=' ')\n    for i in range(y + 1, x):\n        print(i, end=' ')\n    print('\\n')", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    l = []\n    print((a + b * -1) * 2)\n    for i in range(a, b, -1):\n        l.append(i)\n    for i in range(b, a):\n        l.append(i)\n    print(*l)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    a = [i for i in range(x, y - 1, -1)]\n    for i in range(y + 1, x):\n        a.append(i)\n    print(len(a))\n    print(*a)", "import sys\nimport math as m\n\ndef mmin(a, b):\n    if a >= b:\n        return b\n    return a\nt = int(input())\nwhile t:\n    t -= 1\n    res = 0\n    (x, y) = map(int, input().split())\n    res = 2 * (x - y)\n    print(res)\n    for i in range(x, y, -1):\n        print(i, end=' ')\n    for i in range(y, x, 1):\n        if i == x - 1:\n            print(i)\n        else:\n            print(i, end=' ')", "t = int(input())\nfor i in range(t):\n    (x, y) = [int(i) for i in input().split()]\n    diff = x - y\n    a = []\n    for i in range(y, x + 1):\n        a.append(i)\n    for i in range(x - 1, y, -1):\n        a.append(i)\n    print(2 * diff)\n    print(*a)", "gh = int(input())\nfor kl in range(gh):\n    (a, b) = map(int, input().split())\n    c = [0] * (a - b) * 2\n    k = 0\n    for i in range(a, b - 1, -1):\n        c[k] = i\n        k += 1\n    for i in range(b + 1, a):\n        c[k] = i\n        k += 1\n    print(len(c))\n    print(*c)", "t = int(input())\nfor i in range(t):\n    (a, b) = tuple([int(x) for x in input().split()])\n    print(2 * (a - b))\n    for i in range(b, a + 1):\n        print(i, end=' ')\n    for i in range(a - 1, b, -1):\n        print(i, end=' ')\n    print()", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    arr = []\n    for i in range(y, x + 1, +1):\n        arr.append(i)\n    for i in range(x - 1, y, -1):\n        arr.append(i)\n    print(len(arr))\n    print(*arr)", "t = int(input())\nfor i in range(t):\n    (x, y) = map(int, input().split())\n    arr = []\n    for i in range(x - y):\n        arr.append(x - i)\n    for i in range(x - y):\n        arr.append(y + i)\n    print(2 * (x - y))\n    print(*arr)", "n = int(input())\nfor i in range(n):\n    (x, y) = map(int, input().split())\n    print((x - y) * 2)\n    for j in range(x, y, -1):\n        print(j, end=' ')\n    for k in range(y, x):\n        print(k, end=' ')\n    print()", "t = int(input())\nwhile t:\n    (x, y) = [int(x) for x in input().split()]\n    print(2 * (x - y))\n    for i in range(y + 1, x + 1):\n        print(i, end=' ')\n    for i in range(x - 1, y - 1, -1):\n        print(i, end=' ')\n    print()\n    t -= 1", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    n = (abs(x) + abs(y)) * 2\n    a = []\n    for i in range(x, y - 1, -1):\n        a.append(i)\n    for i in range(y + 1, x):\n        a.append(i)\n    print(len(a))\n    print(*a)", "from collections import Counter\nimport math\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    if x >= 0 and y >= 0:\n        a = list(range(y + 1, x))\n        l = [y] + a + [x] + a[::-1]\n    elif x <= 0 and y <= 0:\n        a = list(range(y + 1, x))\n        l = [y] + a + [x] + a[::-1]\n    elif x >= 0 and y <= 0:\n        a = list(range(0, x))\n        b = list(range(y + 1, 0))\n        c = a[::-1]\n        d = b[::-1]\n        l = a + [x] + c + d + [y] + b\n    print(len(l))\n    print(*l)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    k = (n - m) * 2\n    print(k)\n    ans = []\n    j = m + 1\n    while j <= n:\n        ans.append(j)\n        j += 1\n    i = n - 1\n    while i >= m:\n        ans.append(i)\n        i -= 1\n    print(*ans)"]