["import sys\n\ndef in_int():\n    return int(sys.stdin.readline())\n\ndef in_str():\n    return sys.stdin.readline().rstrip()\n\ndef in_map_int():\n    return map(int, sys.stdin.readline().split())\n\ndef in_arr_int():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef in_arr_str():\n    return sys.stdin.readline().split()\n\ndef is_prime(n):\n    for i in range(2, int(n ** (1 / 2)) + 1):\n        if n % i == 0:\n            return True\n    return False\n\ndef bin2dec(s):\n    n = 0\n    for i in range(len(s)):\n        n += int(s[len(s) - i - 1]) * 2 ** i\n    return n\n\ndef gcd(a, b):\n    (a, b) = (max(a, b), min(a, b))\n    while b != 0:\n        (a, b) = (b, a % b)\n    return a\n\ndef dec2bin(n):\n    if n == 0:\n        return '0'\n    ans = ''\n    while n > 0:\n        ans += str(n % 2)\n        n //= 2\n    return ans[::-1]\n\ndef solve(n, k, arr):\n    i = 1\n    for a in arr:\n        if a == i:\n            i += 1\n    i -= 1\n    return (n - i + k - 1) // k\n\ndef main():\n    t = in_int()\n    for _ in range(t):\n        (n, k) = in_map_int()\n        arr = in_arr_int()\n        print(solve(n, k, arr))\nmain()", "from sys import stdin\n\ndef solve():\n    (n, k) = map(int, stdin.readline().split())\n    p = list(map(int, stdin.readline().split()))\n    cur = 1\n    for i in range(n):\n        if p[i] == cur:\n            cur += 1\n    todo = n - cur + 1\n    print((todo + k - 1) // k)\n\ndef main():\n    t = int(stdin.readline())\n    for _ in range(t):\n        solve()\nmain()", "import sys\nimport math\n\ndef fn(n, k, p):\n    if n == 1:\n        return 0\n    curr_num = 1\n    for item in p:\n        if item == curr_num:\n            curr_num += 1\n    curr_num -= 1\n    return math.ceil((n - curr_num) / k)\ninput = sys.stdin.readlines()\nfor i in range(int(input[0].strip('\\n'))):\n    (n, k) = tuple([int(x) for x in input[2 * i + 1].strip('\\n').split(' ')])\n    p = [int(x) for x in input[2 * i + 2].strip('\\n').split(' ')]\n    print(fn(n, k, p))", "import sys\ninput = sys.stdin.readline\ninp = sys.stdin.readline\n\ndef input():\n    return inp().strip()\n\ndef ii():\n    return int(input())\n\ndef mi():\n    return map(int, input().split())\n\ndef li():\n    return list(map(int, input().split()))\n\ndef solve():\n    (n, k) = mi()\n    arr = li()\n    count = 0\n    left = 1\n    for curr in arr:\n        if curr != left:\n            count += 1\n        else:\n            left += 1\n    if count % k == 0:\n        print(count // k)\n    else:\n        print(count // k + 1)\n\ndef main():\n    for _ in range(ii()):\n        solve()\nmain()", "import sys, math, bisect, collections, itertools, heapq\nfrom collections import defaultdict, deque\nsys.setrecursionlimit(50000)\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    (n, k) = map(int, sys.stdin.readline().split())\n    arr = list(map(int, sys.stdin.readline().split()))\n    iterate = 1\n    for i in arr:\n        if i == iterate:\n            iterate += 1\n    ans = n - (iterate - 1)\n    if ans % k == 0:\n        print(ans // k)\n    else:\n        print(ans // k + 1)", "import sys\nimport math\nimport cmath\nimport time\nfrom bisect import bisect_left\nstart_time = time.time()\n\ndef per():\n    (n, k) = map(int, inps())\n    l = [int(j) for j in inps()]\n    c = 1\n    for i in l:\n        if i == c:\n            c = c + 1\n    print(math.ceil((n - c + 1) / k))\n\ndef main():\n    testcases = 1\n    testcases = inp()\n    for each_testcase in range(testcases):\n        per()\n\ndef inp():\n    return int(input())\n\ndef inps():\n    return input().split()\nans = __debug__\nif ans:\n    input = sys.stdin.readline\nmain()", "import sys\nimport math\nimport cmath\nimport time\nfrom bisect import bisect_left\nstart_time = time.time()\n\ndef per():\n    (n, k) = map(int, inps())\n    l = [int(j) for j in inps()]\n    c = 1\n    for i in l:\n        if i == c:\n            c = c + 1\n    print(math.ceil((n - c + 1) / k))\n\ndef main():\n    testcases = 1\n    testcases = inp()\n    for each_testcase in range(testcases):\n        per()\n\ndef inp():\n    return int(input())\n\ndef inps():\n    return input().split()\nans = __debug__\nif ans:\n    input = sys.stdin.readline\nmain()", "import sys\ninput = sys.stdin.readline\nres = []\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    nownum = 1\n    for i in range(n):\n        if arr[i] == nownum:\n            nownum += 1\n    nownum -= 1\n    if nownum == n:\n        res.append(0)\n        continue\n    n -= nownum\n    if n % k == 0:\n        res.append(n // k)\n    else:\n        res.append(n // k + 1)\nprint('\\n'.join(map(str, res)))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    P = list(map(int, input().split()))\n    temp = 1\n    cnt = 0\n    for i in range(n):\n        if P[i] == temp:\n            temp += 1\n        else:\n            cnt += 1\n    print(cnt // k + int(cnt % k != 0))", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\ntest_cases = inp()\ninp_arr = []\nfor i in range(test_cases):\n    nums = inlt()\n    arr = inlt()\n    inp_arr.append((nums[0], nums[1], arr))\n\ndef findResult(n, k, arr):\n    c = 0\n    mf = 1\n    n = len(arr)\n    for i in arr:\n        if i == mf:\n            c += 1\n            mf += 1\n    import math\n    return math.ceil((n - c) / k)\nresult = [findResult(n, k, arr) for (n, k, arr) in inp_arr]\nfor m in result:\n    print(m)", "import sys\n\ndef _input():\n    return sys.stdin.readline().strip()\n\ndef main():\n    for _ in range(int(_input())):\n        (n, k) = map(int, _input().split())\n        l = list(map(int, _input().split()))\n        index_array = [0 for i in range(n + 1)]\n        for i in range(n):\n            index_array[l[i]] = i\n        prev_index = index_array[1]\n        x = n - 1\n        for i in range(2, n + 1):\n            if index_array[i] > prev_index:\n                prev_index = index_array[i]\n                x -= 1\n            else:\n                break\n        if x % k == 0:\n            print(x // k)\n        else:\n            print(x // k + 1)\nmain()", "import sys, math, cmath, time\nfrom bisect import bisect_left\nstart_time = time.time()\n\ndef solve():\n    (n, k) = map(int, inps())\n    l = [int(j) for j in inps()]\n    c = 1\n    for i in l:\n        if i == c:\n            c = c + 1\n    print(math.ceil((n - c + 1) / k))\n\ndef main():\n    testcases = 1\n    testcases = inp()\n    for each_testcase in range(testcases):\n        solve()\n\ndef inp():\n    return int(input())\n\ndef inps():\n    return input().split()\nONLINE_JUDGE = __debug__\nif ONLINE_JUDGE:\n    input = sys.stdin.readline\nmain()", "import sys\ninput = sys.stdin.readline\n\ndef readList():\n    return list(map(int, input().split()))\n\ndef readInt():\n    return int(input())\n\ndef readInts():\n    return map(int, input().split())\n\ndef readStr():\n    return input().strip()\n\ndef solve():\n    (n, k) = readInts()\n    arr = readList()\n    idx = arr.index(1)\n    ans = idx\n    cnt = 0\n    for i in range(idx + 1, n):\n        if arr[i] == cnt + 2:\n            cnt += 1\n        else:\n            ans += 1\n    ans = ans // k + 1 if ans % k and ans else ans // k\n    return ans\nfor _ in range(int(input())):\n    print(solve())", "import sys, io, os\ninput = sys.stdin.readline\nI = lambda : list(map(int, input().split()))\n(t,) = I()\nfor _ in range(t):\n    (n, k) = I()\n    p = I()\n    target = 1\n    steps = 0\n    for x in p:\n        if target == x:\n            target += 1\n        else:\n            steps += 1\n    if steps // k == steps / k:\n        print(steps // k)\n    else:\n        print(steps // k + 1)", "import sys\nimport math\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    (*p,) = map(int, input().split())\n    target = 1\n    re = 0\n    for e in p:\n        if e == target:\n            target += 1\n        else:\n            re += 1\n    print(math.ceil(re / k))", "import sys\nimport math\nt = int(sys.stdin.readline())\nfor i in range(t):\n    (n, k) = map(int, sys.stdin.readline().split())\n    p = list(map(int, sys.stdin.readline().split()))\n    st = 0\n    for j in range(n):\n        if p[j] == st + 1:\n            st += 1\n    numb = n - st\n    ans = math.ceil(numb / k)\n    sys.stdout.write(str(ans) + '\\n')", "import sys\nimport itertools\nimport bisect\nimport math\nimport collections\nt = int(sys.stdin.readline())\nwhile t >= 1:\n    (n, k) = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    check = 1\n    count = 0\n    for i in range(len(a)):\n        if a[i] == check:\n            check += 1\n        else:\n            count += 1\n    ans = math.ceil(count / k)\n    sys.stdout.write(str(ans))\n    sys.stdout.write('\\n')\n    t -= 1", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    p = list(map(int, input().split()))\n    c = 1\n    for i in range(n):\n        if p[i] == c:\n            c += 1\n    print((n - c + k) // k)", "import sys\ninput = sys.stdin.readline\nfor tc in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    lis = 0\n    for x in a:\n        if x == lis + 1:\n            lis += 1\n    print((n - lis + k - 1) // k)", "import sys\nfor i in range(int(sys.stdin.readline())):\n    (n, k) = map(int, sys.stdin.readline().split())\n    ls = [int(a) for a in sys.stdin.readline().split()]\n    m = 100001\n    c = 1\n    for ite in range(n):\n        if c == ls[ite]:\n            if c + 1 == m:\n                break\n            c += 1\n            continue\n        if m > ls[ite]:\n            m = ls[ite]\n    if m == 100001:\n        print('0')\n        continue\n    print((n - c + k - 1) // k)", "import math\nt = int(input())\nresult_list = []\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    n_list = list(map(int, input().split()))\n    s1 = 1\n    for i in range(n):\n        if n_list[i] == s1:\n            s1 += 1\n    result_list.append(math.floor((n - s1 + k) / k))\nfor i in result_list:\n    print(i)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    d = [0] * n\n    c = 1\n    for i in range(n):\n        if a[i] == c:\n            c += 1\n    c -= 1\n    if (n - c) % k == 0:\n        print((n - c) // k)\n    else:\n        print(1 + (n - c) // k)", "import math\nimport sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nfor _ in range(int(input())):\n    (n, k) = invr()\n    arr = inlt()\n    data = {}\n    for i in range(n):\n        data[arr[i]] = i\n    count = 1\n    check = data[1]\n    tell = 2\n    while True:\n        if tell in data and data[tell] > check:\n            count += 1\n            check = data[tell]\n            tell += 1\n        else:\n            break\n    print(math.ceil((n - count) / k))", "a = int(input())\nt = []\nfor i in range(a):\n    s = [int(c) for c in input().split()]\n    tup = [int(lo) for lo in input().split()]\n    t.append([s[1], tup])\n\ndef main(no, arr):\n    c = 0\n    d = 1\n    for i in arr:\n        if i == d:\n            c = c + 1\n            d = d + 1\n    e = len(arr) - c\n    if e % no == 0:\n        return e // no\n    else:\n        return e // no + 1\nfor z in t:\n    print(main(z[0], z[1]))", "import math\n\ndef count(n, k, l):\n    c = 0\n    for i in range(n):\n        if i + 1 - c != l[i]:\n            c += 1\n    return math.ceil(c / k)\n\ndef main():\n    tn = int(input())\n    out = []\n    for i in range(tn):\n        nk = [int(x) for x in input().split()]\n        l = [int(x) for x in input().split()]\n        out.append(count(nk[0], nk[1], l))\n    print(*out, sep='\\n')\nmain()", "out = []\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    p = [int(i) for i in input().split()]\n    ans = 0\n    i = 0\n    need = 1\n    cur = 0\n    while i < n:\n        if p[i] == need:\n            i += 1\n            need += 1\n        else:\n            cur += 1\n            i += 1\n            if cur == k:\n                ans += 1\n                cur = 0\n    if cur:\n        ans += 1\n    out.append(ans)\nfor i in out:\n    print(i)", "def f():\n    t = int(input())\n    for i in range(t):\n        temp = input()\n        temp = temp.split(' ')\n        n = int(temp[0])\n        k = int(temp[1])\n        temp1 = input()\n        temp1 = temp1.split(' ')\n        temp1 = map(int, temp1)\n        temp1 = list(temp1)\n        cur = 1\n        total = 0\n        for i in temp1:\n            if i == cur:\n                cur = cur + 1\n            else:\n                total = total + 1\n        print((total + k - 1) // k)\nf()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    p = [int(x) for x in input().split()]\n    i = 1\n    for el in p:\n        if el == i:\n            i += 1\n    i -= 1\n    print((n - i + k - 1) // k)", "import math\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    x = 1\n    for el in arr:\n        if el == x:\n            x += 1\n    print(math.ceil((n + 1 - x) / k))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ind = l.index(1)\n    p = 1\n    for i in range(ind + 1, n):\n        if l[i] == p + 1:\n            p += 1\n    print((n - p + k - 1) // k)", "from math import ceil\nt = int(input())\nres = []\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    perm = list(map(int, input().split()))\n    cnt = 0\n    for i in range(n):\n        if cnt + 1 == perm[i]:\n            cnt += 1\n    res.append(ceil((n - cnt) / k))\nfor i in res:\n    print(i)", "from math import ceil\ncases = int(input())\ninp = []\nfor _ in range(cases):\n    inp.append([])\n    (a, b) = input().split(' ')\n    inp[-1].append((int(a), int(b)))\n    inp[-1].append([int(x) for x in input().split(' ')])\nfor inpt in inp:\n    (n, k) = inpt[0]\n    st = sorted(inpt[1])\n    idx = inpt[1].index(st[0])\n    (p, c) = (0, 0)\n    while c < n:\n        if st[p] == inpt[1][c]:\n            p += 1\n        c += 1\n    print(ceil((n - p) / k))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    i = 1\n    for num in lst:\n        if num == i:\n            i += 1\n    i -= 1\n    print((n - i + k - 1) // k)", "import math\n\ndef f():\n    t = int(input())\n    for i in range(t):\n        temp = input()\n        temp = temp.split(' ')\n        n = int(temp[0])\n        k = int(temp[1])\n        temp1 = input()\n        temp1 = temp1.split(' ')\n        temp1 = map(int, temp1)\n        temp1 = list(temp1)\n        cur = 1\n        total = 0\n        for i in temp1:\n            if i == cur:\n                cur = cur + 1\n            else:\n                total = total + 1\n        print(math.ceil(total / k))\nf()", "import heapq\nimport math\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    e = 1\n    stands_right = 0\n    for ai in a:\n        if ai == e:\n            stands_right += 1\n            e += 1\n    print((n - stands_right + k - 1) // k)", "import math\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    r = 1\n    for i in l:\n        if i == r:\n            r += 1\n    p = n - r + 1\n    print(math.ceil(p / k))", "import math\nt = int(input())\nfor _ in range(t):\n    (n, k) = (int(v) for v in input().split())\n    p = [int(c) for c in input().split()]\n    consec = 0\n    for g in p:\n        if g == consec + 1:\n            consec += 1\n    print(math.ceil((n - consec) / k))", "def main():\n    t = int(input())\n    for i in range(t):\n        (n, k) = map(int, input().split())\n        L = list(map(int, input().split()))\n        cur = 1\n        counter = 0\n        for i in range(n):\n            if L[i] == cur:\n                counter += 1\n                cur += 1\n        n -= counter\n        if n % k == 0:\n            print(n // k)\n        else:\n            print(n // k + 1)\nmain()", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    m = list(map(int, input().split()))\n    l = []\n    (a, b) = (0, 1)\n    for i in m:\n        if i == b:\n            a += 1\n            b += 1\n    s = n - a\n    if s % k == 0:\n        print(s // k)\n    else:\n        print(s // k + 1)", "def fun(n, l, k):\n    cnt = 0\n    j = 1\n    for i in range(n):\n        if l[i] == j:\n            cnt = cnt + 1\n            j = j + 1\n    if (n - cnt) % k != 0:\n        print((n - cnt) // k + 1)\n        return\n    else:\n        print((n - cnt) // k)\nt = int(input())\nfor j in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    fun(n, l, k)", "t = int(input())\nfor _ in range(t):\n    nk = [int(x) for x in input().split()]\n    n = nk[0]\n    k = nk[1]\n    arr = [int(x) for x in input().split()]\n    step = 0\n    small = arr.index(1)\n    point = small\n    current = 1\n    while point < n - 1:\n        if arr[point + 1] == current + 1:\n            current += 1\n            point += 1\n        else:\n            point += 1\n    if (n - current) % k == 0:\n        print((n - current) // k)\n    else:\n        print((n - current) // k + 1)", "import math\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    x = list(map(int, input().split()))\n    j = 1\n    for k in x:\n        if j == k:\n            j += 1\n    print(math.ceil((a - j + 1) / b))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    p = list(map(int, input().split()))\n    j = 1\n    r = 0\n    for elem in p:\n        if elem == j:\n            j += 1\n            r += 1\n    s = n - r\n    if s % k == 0:\n        print(s // k)\n    else:\n        print(s // k + 1)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split(' '))\n    lst = list(map(int, input().split(' ')))\n    counter = 1\n    count = 0\n    for i in lst:\n        if i == counter:\n            counter += 1\n        else:\n            count += 1\n    if count % k == 0:\n        print(int(count / k))\n    else:\n        print(int(count / k) + 1)", "def start():\n    for _ in range(int(input())):\n        (n, k) = map(int, input().split())\n        arr = list(map(int, input().split()))\n        ans1 = 0\n        ans2 = 1\n        for i in arr:\n            if i == ans2:\n                ans1 += 1\n                ans2 += 1\n        if (n - ans1) % k == 0:\n            print((n - ans1) // k)\n        else:\n            print((n - ans1) // k + 1)\nstart()", "T = int(input())\nimport math\nfor t in range(T):\n    (n, k) = map(int, input().split(' '))\n    ar = list(map(int, input().split(' ')))\n    count = 0\n    for ele in ar:\n        if ele == count + 1:\n            count += 1\n    print(math.ceil((n - count) / k))", "for t in range(int(input())):\n    arr1 = list(map(int, input().strip().split()))[:2]\n    n = arr1[0]\n    k = arr1[1]\n    arr = list(map(int, input().strip().split()))[:n]\n    onposition = 0\n    value = 1\n    for x in arr:\n        if x == value:\n            value = value + 1\n            onposition = onposition + 1\n    needsort = n - onposition\n    if needsort % k:\n        print(needsort // k + 1)\n    else:\n        print(needsort // k)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    p = 0\n    q = 1\n    for i in range(n):\n        if a[i] == q:\n            p += 1\n            q += 1\n    temp = n - p\n    if temp % k == 0:\n        print(temp // k)\n    else:\n        print(temp // k + 1)", "for _ in range(int(input())):\n    (aa, bb) = map(int, input().split())\n    l = list(map(int, input().split()))\n    kap = 0\n    kp = 1\n    for i in l:\n        if i == kp:\n            kap += 1\n            kp += 1\n    anss = aa - kap\n    if anss % bb == 0:\n        print(anss // bb)\n    else:\n        print(anss // bb + 1)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    ar = list(map(int, input().split()))\n    c = 0\n    d = 1\n    for j in ar:\n        if j == d:\n            c = c + 1\n            d = d + 1\n    e = a - c\n    if e % b == 0:\n        print(e // b)\n    else:\n        print(e // b + 1)", "import math as m\nt = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    curr = 1\n    for i in range(n):\n        if arr[i] == curr:\n            curr += 1\n    print(m.ceil((n - curr + 1) / k))", "def nag(num_arr, k, n):\n    temp1 = 0\n    temp2 = 1\n    for x in num_arr:\n        if x == temp2:\n            temp1 += 1\n            temp2 += 1\n    temp3 = n - temp1\n    if temp3 % k == 0:\n        return temp3 // k\n    return temp3 // k + 1\nt = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    num_arr = list(map(int, input().split()))\n    result = nag(num_arr, k, n)\n    print(result)\n    t -= 1", "import math\n\ndef main():\n    for t in range(int(input())):\n        (a, b) = map(int, input().split())\n        l = [int(x) for x in input().split()]\n        j = 0\n        k = 1\n        while j < a:\n            if l[j] == k:\n                p = k\n                k += 1\n            j += 1\n        print(int(math.ceil((a - p) / b)))\nmain()", "for _ in range(int(input())):\n    (a, b) = [int(i) for i in input().split()]\n    arr = list(map(int, input().split()))\n    c = 0\n    f = 1\n    for i in range(len(arr)):\n        if arr[i] == f:\n            c += 1\n            f += 1\n    n = a - c\n    print(n // b if n % b == 0 else n // b + 1)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    x = list(map(int, input().split()))\n    of = 0\n    h = 1\n    for i in x:\n        if i == h:\n            of += 1\n            h += 1\n    s = a - of\n    if s % b == 0:\n        print(int(s / b))\n    else:\n        print(int(s / b) + 1)", "p = int(input())\nfor _ in range(p):\n    [n, k] = input().split(' ')\n    lst = input().split(' ')\n    r = 0\n    tr = 1\n    for i in lst:\n        if int(i) == tr:\n            r += 1\n            tr += 1\n    s = int(n) - r\n    k = int(k)\n    if s % k == 0:\n        print(int(s / k))\n    else:\n        print(int(s / k + 1))", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    a = 0\n    for i in range(len(l)):\n        if l[i] - 1 != i - a:\n            a += 1\n    if a < k:\n        if a != 0:\n            print(1)\n        else:\n            print(0)\n    else:\n        print((a + k - 1) // k)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = [int(x) for x in input().split()]\n    (left, right) = (1, 0)\n    for i in arr:\n        if i == left:\n            right += 1\n            left += 1\n    res = n - right\n    if not res % k:\n        print(res // k)\n    else:\n        print(res // k + 1)", "import math\nt = int(input())\nfor i in range(t):\n    s = input().split(' ')\n    (n, k) = (int(s[0]), int(s[1]))\n    arr = list(map(int, input().split(' ')))\n    count = 1\n    for i in arr:\n        if i == count:\n            count += 1\n    print(math.ceil((n - count + 1) / k))", "import math\nt = int(input(''))\nA = []\nB = []\nC = []\nfor i in range(t):\n    (n, k) = [int(p) for p in input('').split()]\n    b = [int(p) for p in input('').split()]\n    A.append(k)\n    B.append(b)\n    C.append(b)\nfor i in range(t):\n    k = A[i]\n    arr = B[i]\n    zzz = C[i]\n    momen = arr[arr.index(1):]\n    track = 1\n    for j in range(len(momen)):\n        if momen[j] == track:\n            track += 1\n    track -= 1\n    output = math.ceil((len(arr) - track) / k)\n    print(output)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ind = 1\n    for i in range(n):\n        if l[i] == ind:\n            ind += 1\n    uthabo = n - (ind - 1)\n    if uthabo % k == 0:\n        print(uthabo // k)\n    else:\n        print(uthabo // k + 1)", "import math\n\ndef solve():\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    cnt = 0\n    num = 1\n    for i in arr:\n        if i == num:\n            cnt += 1\n            num += 1\n    return math.ceil((n - cnt) / k)\nt = int(input())\nwhile t:\n    print(solve())\n    t -= 1", "def solve():\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    cv = 1\n    for i in range(0, n):\n        if a[i] == cv:\n            cv += 1\n    return (n - cv + k) // k\nfor t in range(0, int(input())):\n    print(solve())", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    p = [int(x) for x in input().split()]\n    i = 1\n    for el in p:\n        if el == i:\n            i += 1\n    i -= 1\n    print((n - i + k - 1) // k)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    n = 1\n    for i in list(map(int, input().split())):\n        if i == n:\n            n += 1\n    print((a - n + b) // b)", "for i in range(int(input())):\n    nk = input()\n    n = int(nk.split()[0])\n    k = int(nk.split()[1])\n    inp = list(map(int, input().split()))\n    m = 0\n    for i in range(n):\n        if inp[i] == m + 1:\n            m += 1\n    if (n - m) % k == 0:\n        print((n - m) // k)\n    else:\n        print((n - m) // k + 1)", "for i in range(int(input())):\n    nk = input()\n    n = int(nk.split()[0])\n    k = int(nk.split()[1])\n    inp = list(map(int, input().split()))\n    m = 0\n    for i in range(n):\n        if inp[i] == m + 1:\n            m += 1\n    if (n - m) % k == 0:\n        print((n - m) // k)\n    else:\n        print((n - m) // k + 1)", "def solution():\n    (n, k) = (int(num) for num in input().split())\n    nums = [int(num) for num in input().split()]\n    j = 1\n    cnt = 0\n    for num in nums:\n        if num == j:\n            cnt += 1\n            j += 1\n    print((n - cnt + k - 1) // k)\n\ndef main():\n    t = int(input())\n    while t:\n        solution()\n        t -= 1\nmain()", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split(' ')))\n    count = 1\n    for num in arr:\n        if count == num:\n            count += 1\n    res = n - (count - 1)\n    if res % k == 0:\n        print(res // k)\n    else:\n        print(res // k + 1)", "t = int(input())\n\ndef sorted_subseries(a):\n    s = 1\n    i = 0\n    while i < len(a):\n        if a[i] == s:\n            s += 1\n        i += 1\n    return s - 1\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print((len(a) - sorted_subseries(a) + k - 1) // k)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    o = 1\n    for i in range(n):\n        if a[i] == o:\n            o += 1\n    print((n - o + k) // k)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().strip().split())\n    lst = list(map(int, input().strip().split()))\n    to_find = 1\n    num_match = 0\n    for v in lst:\n        if v == to_find:\n            num_match += 1\n            to_find += 1\n    num_remain = n - num_match\n    print(num_remain // k + int(num_remain % k != 0))", "import math\ndd = int(input())\nfor i in range(dd):\n    (a, b) = map(int, input().split())\n    x = [int(x) for x in input().split()]\n    j = 1\n    for k in x:\n        if j == k:\n            j += 1\n    print(math.ceil((a - j + 1) / b))", "T = int(input())\nfor t in range(0, T):\n    line = input().split()\n    N = int(line[0])\n    K = int(line[1])\n    arr = map(int, input().split())\n    curr = 0\n    for x in arr:\n        if x == curr + 1:\n            curr += 1\n    res = (N - curr + K - 1) // K\n    print(res)", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    p = list(map(int, input().split()))\n    cnt = 1\n    for x in p:\n        if x == cnt:\n            cnt += 1\n    print(math.ceil((n - cnt + 1) / k))", "T = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    expect = 1\n    move = 0\n    for x in a:\n        if x == expect:\n            expect += 1\n        else:\n            move += 1\n    print((move + k - 1) // k)", "from math import ceil\nfor _ in ' ' * int(input()):\n    (m, k) = map(int, input().split())\n    b = 1\n    i = 0\n    for a in map(int, input().split()):\n        if a == b:\n            i += 1\n            b += 1\n    print(ceil((m - i) / k))", "from math import ceil\nfor _ in ' ' * int(input()):\n    (m, k) = map(int, input().split())\n    b = 1\n    i = 0\n    for a in map(int, input().split()):\n        if a == b:\n            i += 1\n            b += 1\n    print(ceil((m - i) / k))", "def mapped_read(cast):\n    return map(cast, input().split())\n\ndef read_list(cast):\n    return list(mapped_read(cast))\n\ndef solve():\n    (n, k) = mapped_read(int)\n    a = read_list(int)\n    cur = 1\n    for i in a:\n        if cur == i:\n            cur += 1\n    print((n - cur + 1 + k - 1) // k)\n(n,) = mapped_read(int)\nfor _ in range(n):\n    solve()", "from math import ceil\nfor _ in ' ' * int(input()):\n    (m, k) = map(int, input().split())\n    b = 1\n    i = 0\n    for a in map(int, input().split()):\n        if a == b:\n            i += 1\n            b += 1\n    print(ceil((m - i) / k))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    n = 1\n    for i in list(map(int, input().split())):\n        if i == n:\n            n += 1\n    print((a - n + b) // b)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    p = 1\n    c = 0\n    for i in range(n):\n        if a[i] == p:\n            c += 1\n            p += 1\n    ans = (n - c) // k\n    if (n - c) % k != 0:\n        ans += 1\n    print(ans)", "def solve(perm, k):\n    to_modify_nr = 0\n    to_meet = 0\n    for elem in perm:\n        if elem == to_meet:\n            to_meet += 1\n        else:\n            to_modify_nr += 1\n    return (to_modify_nr + k - 1) // k\n\ndef run():\n    (n, k) = (int(x) for x in input().split())\n    p = [int(x) - 1 for x in input().split()]\n    ans = solve(p, k)\n    print(ans)\ntests_nr = int(input())\nfor _ in range(tests_nr):\n    run()", "def solve():\n    (n, k) = list(map(int, input().split()))\n    nums = list(map(int, input().split()))\n    now = 1\n    su = 0\n    for i in nums:\n        if i == now:\n            su += 1\n            now += 1\n    print((n - su - 1) // k + 1)\n    return\nTTTT = int(input())\nwhile TTTT:\n    solve()\n    TTTT -= 1", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    a = 0\n    h = 1\n    for i in l:\n        if i == h:\n            a += 1\n            h += 1\n    s = n - a\n    if s % x == 0:\n        print(s // x)\n    else:\n        print(s // x + 1)", "import math\n\ndef nag(l, n, k):\n    c = 1\n    for x in l:\n        if x == c:\n            c += 1\n    return (n - c + k) // k\nt = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    num_arr = list(map(int, input().split()))\n    result = nag(num_arr, n, k)\n    print(result)\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    perm = list(map(int, input().split()))\n    find = 1\n    sub = 0\n    for i in perm:\n        if i == find:\n            sub += 1\n            find += 1\n    print(-(-(n - sub) // k))", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = 1\n    for i in range(n):\n        if l[i] == c:\n            c += 1\n    print((n - c + k) // k)", "for _ in range(int(input())):\n    (g, h) = map(int, input().split())\n    f = list(map(int, input().split()))\n    ind = f.index(1)\n    p = 1\n    for i in range(ind + 1, g):\n        if f[i] == p + 1:\n            p += 1\n    print((g - p + h - 1) // h)", "for __ in range(int(input())):\n    (n, k) = map(int, input().split())\n    nums = list(map(int, input().split()))\n    count = 1\n    for i in range(len(nums)):\n        if nums[i] == count:\n            count += 1\n    print((n - count + k) // k)", "def f(m, k, l):\n    a = 1\n    for i in l:\n        if i == a:\n            a += 1\n    if a != 1:\n        max = a - 1\n    else:\n        max = a\n    tos = m - max\n    c = tos / k\n    d = tos // k\n    if c == d:\n        print(d)\n    else:\n        print(d + 1)\nfor t in range(int(input())):\n    inp1 = list(map(int, input().split(' ')))\n    m = inp1[0]\n    k = inp1[1]\n    inp2 = list(map(int, input().split(' ')))\n    f(m, k, inp2)", "from collections import deque\n\ndef main():\n    a = deque(sorted(p))\n    cnt = 0\n    for x in p:\n        if x == a[0]:\n            a.popleft()\n        else:\n            cnt += 1\n    return cnt // k + int(cnt % k != 0)\nt = int(input())\nfor case in range(t):\n    (n, k) = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(main())", "from collections import Counter\nimport math\nop = int(input())\nfor _ in range(op):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    l = 1\n    co = 0\n    for i in range(n):\n        if l == a[i]:\n            l += 1\n        else:\n            co += 1\n    if co % k == 0:\n        print(co // k)\n    else:\n        print(co // k + 1)", "import math\n\ndef sol():\n    (n, k) = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    (cnt, fg) = (0, 0)\n    for i in range(n):\n        if arr[i] == fg + 1:\n            cnt += 1\n            fg += 1\n    print(math.ceil((n - cnt) / k))\nt = int(input())\nwhile t > 0:\n    t -= 1\n    sol()", "for _ in range(int(input())):\n    (aaaaaaaaa, bbbbbbbbbb) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    cccccccccccc = 0\n    dddddddddddd = 1\n    for i in arr:\n        if i == dddddddddddd:\n            cccccccccccc += 1\n            dddddddddddd += 1\n    eeeeeeeeeeeee = aaaaaaaaa - cccccccccccc\n    if eeeeeeeeeeeee % bbbbbbbbbb == 0:\n        print(eeeeeeeeeeeee // bbbbbbbbbb)\n    else:\n        print(eeeeeeeeeeeee // bbbbbbbbbb + 1)", "tests = int(input())\nfor _ in range(tests):\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    search = 1\n    for ai in a:\n        if ai == search:\n            search += 1\n    changed = n - (search - 1)\n    print((changed + k - 1) // k)", "import math\nt = int(input())\nfor i in range(t):\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    c = 0\n    c1 = 0\n    for i in range(n):\n        if a[i] == c + 1:\n            c1 = c1 + 1\n            c = c + 1\n    print(math.ceil((n - c1) / k))", "for j in range(int(input())):\n    (bul, col) = (1, 0)\n    (n, k) = map(int, input().split())\n    for i in list(map(int, input().split())):\n        if i == bul:\n            bul += 1\n            col += 1\n    print((k - 1 + n - col) // k)"]