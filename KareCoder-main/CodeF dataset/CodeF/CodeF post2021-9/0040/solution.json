["t = int(input())\nwhile t > 0:\n    row_row = []\n    a = input()\n    row = list(map(int, input().split()))\n    max_max = max(row)\n    bb = row.index(max_max)\n    for i in row:\n        row_row.append(i - max_max)\n    next_row = row\n    next_row.pop(bb)\n    next_max = max(next_row)\n    if next_max == max_max:\n        print(' '.join(map(str, row_row)))\n    else:\n        row_row[bb] = max_max - next_max\n        print(' '.join(map(str, row_row)))\n    t -= 1", "def f():\n    T = int(input())\n    for _ in range(T):\n        _ = input()\n        nums = [int(c) for c in input().split()]\n        solve(nums)\n\ndef solve(nums):\n    (largest1, largest2) = firstAndSecondLargest(nums)\n    res = []\n    for x in nums:\n        if x != largest1:\n            res.append(x - largest1)\n        else:\n            res.append(x - largest2)\n    print(' '.join([str(x) for x in res]))\n\ndef firstAndSecondLargest(nums):\n    largest1 = -2 ** 32\n    largest2 = -2 ** 32\n    for x in nums:\n        if x > largest1:\n            largest2 = largest1\n            largest1 = x\n        elif largest2 < x:\n            largest2 = x\n    if largest2 == -2 ** 32:\n        largest2 = largest1\n    return (largest1, largest2)\nf()", "def solve():\n    _ = int(input())\n    l = list(map(int, input().split()))\n    top = 0\n    topi = -1\n    top2 = 0\n    for (i, el) in enumerate(l):\n        if el >= top:\n            top2 = top\n            top = el\n            topi = i\n        elif el > top2:\n            top2 = el\n    ret = []\n    for (i, el) in enumerate(l):\n        if i != topi:\n            ret.append(el - top)\n        else:\n            ret.append(el - top2)\n    print(' '.join(map(str, ret)))\nt = int(input())\nfor _ in range(t):\n    solve()", "import os\nimport math\nimport collections\nimport bisect\nimport functools\nimport itertools\nimport heapq\n\ndef solve(a, n):\n    m1 = max(a)\n    m2 = 0\n    if a.count(m1) > 1:\n        m2 = m1\n    else:\n        for x in a:\n            if x > m2 and x < m1:\n                m2 = x\n    b = [x - m1 if x < m1 else x - m2 for x in a]\n    return ' '.join(map(str, b))\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(a, n))", "for _ in range(int(input())):\n    (t, l) = (input(), list(map(int, input().split(' '))))\n    l2 = l.copy()\n    m1 = max(l2)\n    l2.remove(m1)\n    m2 = max(l2)\n    x = lambda a: str(a - m1) if a != m1 else str(a - m2)\n    print(' '.join(list(map(x, l))))", "import math\n\ndef solution():\n    n = int(input())\n    nums = [int(i) for i in input().split()]\n    max1 = nums[0]\n    max2 = -math.inf\n    for num in nums[1:]:\n        if num >= max1:\n            max2 = max1\n            max1 = num\n        elif num > max2:\n            max2 = num\n    ans = []\n    for num in nums:\n        if num == max1:\n            ans.append(str(num - max2))\n        else:\n            ans.append(str(num - max1))\n    print(' '.join(ans))\nt = int(input())\nwhile t:\n    solution()\n    t -= 1", "def get_res(s):\n    max_s = max(s)\n    max_s_index = s.index(max_s)\n    res = [s[i] - max_s if i != max_s_index else -1000000000.0 - 2 for i in range(len(s))]\n    res[max_s_index] = abs(max(res))\n    return res\n\ndef main():\n    t = int(input())\n    data = []\n    for i in range(t):\n        elements_count = int(input())\n        s = list(map(int, input().split()))\n        data.append(s)\n    for i in range(t):\n        res = get_res(data[i])\n        print(' '.join([str(r) for r in res]))\nmain()", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\ntest_cases = inp()\ninp_arr = []\nfor i in range(test_cases):\n    num = inp()\n    nums = inlt()\n    inp_arr.append(nums)\n\ndef findResult(nums):\n    (m, s) = (0, 0)\n    for num in nums:\n        if num > m:\n            s = m\n            m = num\n        elif num > s:\n            s = num\n    result = []\n    for num in nums:\n        if num == m:\n            result.append(str(num - s))\n        else:\n            result.append(str(num - m))\n    return ' '.join(result)\nresult = [findResult(cheeses) for cheeses in inp_arr]\nfor m in result:\n    print(m)", "def find_advantage(lst):\n    highest_strength = -float('inf')\n    second_highest_strength = -float('inf')\n    for strength in lst:\n        if strength > highest_strength:\n            second_highest_strength = highest_strength\n            highest_strength = strength\n        elif strength > second_highest_strength:\n            second_highest_strength = strength\n    diffs = []\n    for strength in lst:\n        if strength != highest_strength:\n            diffs.append(strength - highest_strength)\n        else:\n            diffs.append(strength - second_highest_strength)\n    return diffs\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    print(' '.join(map(str, find_advantage(lst))))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = sorted(a)\n    c = [x - b[-1] for x in a]\n    i = a.index(b[-1])\n    c[i] = a[i] - b[-2]\n    print(' '.join(map(str, c)))", "def solve():\n    a = int(input())\n    b = input()\n    b = b.split()\n    l = []\n    x = []\n    for i in b:\n        l.append(int(i))\n    m = max(l)\n    found = 0\n    for i in range(0, a):\n        if m == l[i]:\n            if found == 0:\n                c = l.copy()\n                del c[i]\n                n = max(c)\n                j = l[i] - n\n                x.append(str(j))\n                found = 1\n            else:\n                j = l[i] - m\n                x.append(str(j))\n        else:\n            j = l[i] - m\n            x.append(str(j))\n    x = ' '.join(x)\n    return x\ntc = int(input())\nfor i in range(0, tc):\n    print(solve())", "T = int(input(''))\nfor i in range(T):\n    n = input('')\n    str1 = input('')\n    l1 = [int(c) for c in str1.split()]\n    l2 = [c for c in l1]\n    highest = max(l1)\n    l2.remove(highest)\n    second = max(l2)\n    ans = []\n    for element in l1:\n        if element != highest:\n            ans.append(element - highest)\n        else:\n            ans.append(element - second)\n    finalAns = ' '.join((str(c) for c in ans))\n    print(finalAns)", "def getStrength(inputs):\n    outputs = []\n    inputs = list(map(lambda x: int(x), inputs))\n    generalMax = max(inputs)\n    temp = list(inputs)\n    temp.pop(temp.index(generalMax))\n    tempmax = max(temp)\n    for i in range(len(inputs)):\n        if inputs[i] != generalMax:\n            outputs.append(str(inputs[i] - generalMax))\n        else:\n            outputs.append(str(inputs[i] - tempmax))\n    return outputs\nnumberOfTestCases = int(input())\noutputs = []\nfor i in range(numberOfTestCases):\n    numberOfInputs = int(input())\n    Inputs = input().split(' ')\n    outputs.append(getStrength(Inputs))\nfor out in outputs:\n    print(' '.join(out))", "num_tests = int(input())\nfor test in range(num_tests):\n    array_len = int(input())\n    arr = [int(x) for x in input().split(' ')]\n    sarr = sorted(arr)\n    m1 = sarr[-1]\n    m2 = sarr[-2]\n    print(' '.join([str(i - m1) if i != m1 else str(m1 - m2) for i in arr]))", "t = int(input())\nfor x in range(t):\n    n = input()\n    s = list(map(int, input().split()))\n    maxi = max(s)\n    c = s.copy()\n    ind = s.index(maxi)\n    c.pop(ind)\n    maxim = max(c)\n    pr = []\n    for i in s:\n        if i != maxi:\n            pr.append(i - maxi)\n        else:\n            pr.append(i - maxim)\n    if x != t - 1:\n        print(' '.join((str(i) for i in pr)), end=' \\n')\n    else:\n        print(' '.join((str(i) for i in pr)))\npass", "testcases = int(input())\nfor i in range(testcases):\n    n = int(input())\n    input_l = input().split()\n    strength_list = list(map(int, input_l))\n    m = 1\n    m2 = 1\n    ind_m = 0\n    for j in range(n):\n        s = strength_list[j]\n        if s > m:\n            m2 = m\n            m = s\n            ind_m = j\n        elif s > m2:\n            m2 = s\n    output = [x - m for x in strength_list]\n    output[ind_m] = m - m2\n    print(' '.join(map(str, output)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    jada = list(map(int, input().split()))\n    maksimum = max(jada)\n    new_list = []\n    k = 0\n    for j in jada:\n        if j < maksimum:\n            new_list.append(str(j - maksimum))\n        elif j == k:\n            new_list.append(str(maksimum - k))\n        else:\n            new_jada = list(jada)\n            new_jada.remove(maksimum)\n            k = max(new_jada)\n            new_list.append(str(maksimum - k))\n    print(' '.join(new_list))", "for _ in (input() for _ in range(int(input()))):\n    xs = list(map(int, input().split()))\n    (*_, scd, fst) = sorted(xs)\n    print(' '.join((str(x - fst if x != fst else x - scd) for x in xs)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    participants = list(map(int, input().split()))\n    (m1, m2) = (0, 0)\n    for j in range(n):\n        if participants[j] > m1:\n            m2 = m1\n            m1 = participants[j]\n        elif m2 <= participants[j] <= m1:\n            m2 = participants[j]\n    print(' '.join(map(str, [participants[j] - m2 if participants[j] == m1 else participants[j] - m1 for j in range(n)])))", "import string\nletters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    S2 = list(map(int, input().split()))\n    m = max(S2)\n    S = S2[:]\n    S2.remove(m)\n    m2 = max(S2)\n    r = []\n    for i in range(n):\n        v = S[i]\n        if v != m:\n            r.append(v - m)\n        else:\n            r.append(v - m2)\n    print(' '.join(map(str, r)))", "import math\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef inchar():\n    return list(input().split())\n\ndef insr():\n    s = input()\n    return list(s)\n\ndef invr():\n    return map(int, input().split())\na = inp()\nfor _ in range(a):\n    m = 0\n    mm = 0\n    kkkk = inp()\n    s = inlt()\n    for i in s:\n        if i > m:\n            mm = m\n            m = i\n        elif i > mm:\n            mm = i\n    for i in range(kkkk):\n        if s[i] == m:\n            s[i] -= mm\n        else:\n            s[i] -= m\n    print(' '.join(map(str, s)))", "for _ in range(int(input())):\n    n = input()\n    s = list(map(int, input().split()))\n    (m2, m1) = sorted(s)[-2:]\n    res = []\n    for i in s:\n        if i == m1:\n            res.append(str(i - m2))\n        else:\n            res.append(str(i - m1))\n    print(' '.join(res))", "import itertools\nimport sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef solve(arr):\n    maximum = max(arr)\n    d = [str(i - maximum) for i in arr]\n    d[arr.index(maximum)] = str(maximum - sorted(arr)[-2])\n    print(' '.join(d))\nfor i in range(inp()):\n    length = invr()\n    arr = inlt()\n    solve(arr)", "import sys\n\ndef main():\n    t = sys.stdin.readline().split()\n    t = int(t[0])\n    lines = sys.stdin.readlines()\n    for index in range(len(lines) // 2):\n        line_0 = lines[2 * index]\n        n = int(line_0)\n        participants = list(map(int, lines[2 * index + 1].split(' ')))\n        if participants[0] > participants[1]:\n            (max_0, max_1) = (0, 1)\n        else:\n            (max_0, max_1) = (1, 0)\n        for i in range(2, n):\n            if participants[i] >= participants[max_0]:\n                (max_0, max_1) = (i, max_0)\n            elif participants[i] > participants[max_1]:\n                max_1 = i\n        res = [0] * n\n        for i in range(n):\n            if i != max_0:\n                res[i] = participants[i] - participants[max_0]\n            else:\n                res[i] = participants[i] - participants[max_1]\n        print(' '.join(list(map(str, res))))\nmain()", "for tc in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = []\n    c = max(a)\n    temp = a.copy()\n    temp.pop(temp.index(c))\n    max_temp = max(temp)\n    for i in range(n):\n        if a[i] != c:\n            ans.append(a[i] - c)\n        else:\n            ans.append(c - max_temp)\n    main_ans = ' '.join((str(i) for i in ans))\n    print(main_ans)", "tests = int(input())\nfor i in range(tests):\n    length = int(input())\n    participants = [int(x) for x in input().split(' ')]\n    l = participants.copy()\n    max1 = max(l)\n    l.remove(max1)\n    max2 = max(l)\n    for i in range(len(participants)):\n        if participants[i] != max1:\n            participants[i] -= max1\n        else:\n            participants[i] -= max2\n    diffs = ' '.join((str(x) for x in participants))\n    print(diffs)", "def req(s):\n    b = sorted(s)\n    (x, y) = (b[-1], b[-2])\n    d = []\n    for i in s:\n        if i == x:\n            d.append(i - y)\n        else:\n            d.append(i - x)\n    return list(map(str, d))\nt = int(input())\nwhile t != 0:\n    a = input()\n    s = list(map(int, input().split()))\n    r = req(s)\n    print(' '.join(r))\n    t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    nums = input().split()\n    nums = list(map(int, nums))\n    ins_li = []\n    sort = sorted(nums)\n    for i in nums:\n        if i == sort[-1]:\n            ins_li.append(i - sort[-2])\n        else:\n            ins_li.append(i - sort[-1])\n    ins_li = list(map(str, ins_li))\n    print(' '.join(ins_li))", "t = int(input())\n\ndef solve(arr):\n    sorted_ = sorted(arr)\n    max_ = sorted_[-1]\n    res = []\n    for i in arr:\n        if i == max_:\n            res.append(i - sorted_[-2])\n        else:\n            res.append(i - max_)\n    return ' '.join(list(map(str, res)))\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    print(solve(arr))", "def solve(n, nums):\n    sortedNums = sorted(nums)[::-1]\n    maxNum = sortedNums[0]\n    secNum = sortedNums[1]\n    return ' '.join([str(i - maxNum) if i < maxNum else str(i - secNum) for i in nums])\nT = int(input())\nfor t in range(T):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    print(solve(n, nums))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = [int(i) for i in input().split()]\n    m = [max(s[0], s[1]), min(s[0], s[1])]\n    for i in range(2, n):\n        if s[i] > m[0]:\n            m = [s[i], m[0]]\n        elif s[i] > m[1]:\n            m[1] = s[i]\n    print(' '.join([str(i - m[0]) if i - m[0] else str(i - m[1]) for i in s]))", "for i in range(int(input())):\n    s = int(input())\n    q = list(map(int, input().split(' ')))\n    w = sorted(q)\n    spis = []\n    for j in q:\n        if j != w[-1]:\n            spis.append(str(j - w[-1]))\n        else:\n            spis.append(str(j - w[-2]))\n    print(' '.join(spis))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    if a.count(m) == 1:\n        p = list(set(a))\n        p.sort()\n        x1 = p[-2]\n        res = []\n        for i in a:\n            if i == m:\n                res.append(i - x1)\n            else:\n                res.append(i - m)\n        print(' '.join(map(str, res)))\n    else:\n        res = []\n        for i in a:\n            if i == m:\n                res.append(0)\n            else:\n                res.append(i - m)\n        print(' '.join(map(str, res)))", "t = int(input())\nfor _ in range(t):\n    res = []\n    val = int(input())\n    arr = list(map(int, input().split()))\n    sarr = sorted(arr)\n    mx = sarr[-1]\n    smx = sarr[-2]\n    j = -1\n    for i in arr:\n        if i != mx:\n            res.append(str(i - mx))\n        else:\n            res.append(str(i - smx))\n    print(' '.join(res))", "def ans(n, s):\n    t = sorted(s)\n    d1 = t[n - 1]\n    d2 = t[n - 2]\n    i = 0\n    while i < n:\n        if s[i] == d1:\n            s[i] = s[i] - d2\n        else:\n            s[i] = s[i] - d1\n        i = i + 1\n    return s\nT = int(input())\nr = []\nfor i in range(T):\n    n = int(input())\n    s = list(map(int, input().split()))\n    c = ans(n, s)\n    r.append(c)\nfor i in range(T):\n    print(' '.join(map(str, r[i])))", "for _ in (input() for _ in range(int(input()))):\n    xs = list(map(int, input().split()))\n    (*_, scd, fst) = sorted(xs)\n    print(' '.join((str(x - fst if x != fst else x - scd) for x in xs)))", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = sorted(a)\n    mx = b[-2:]\n    ans = []\n    for c in a:\n        if c == mx[1]:\n            ans.append(c - mx[0])\n        else:\n            ans.append(c - mx[1])\n    print(' '.join(map(str, ans)))", "for i in range(int(input())):\n    n = int(input())\n    forces = list(map(int, input().split()))\n    max_force = 0\n    prev_max_force = 0\n    ans = [0] * n\n    for j in range(n):\n        if forces[j] > max_force:\n            prev_max_force = max_force\n            max_force = forces[j]\n        elif forces[j] > prev_max_force:\n            prev_max_force = forces[j]\n    for j in range(n):\n        if forces[j] != max_force:\n            ans[j] = forces[j] - max_force\n        else:\n            ans[j] = max_force - prev_max_force\n    print(' '.join(map(str, ans)))", "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    kek = max(s)\n    kekw = False\n    anslist = []\n    if s.count(kek) > 1:\n        kekw = True\n    for i in range(n):\n        if s[i] < kek:\n            anslist.append(s[i] - kek)\n        elif kekw:\n            anslist.append(0)\n        else:\n            anslist.append(kek - list(sorted(s))[-2])\n    print(' '.join((str(i) for i in anslist)))", "n = int(input())\nfor i in range(n):\n    tmp = int(input())\n    tmp_list = list(map(int, input().split()))\n    num_list = [i for i in tmp_list]\n    tmp_list.sort()\n    two_big = tmp_list[len(tmp_list) - 2]\n    big = tmp_list[len(tmp_list) - 1]\n    dd = []\n    for num in num_list:\n        if num == big:\n            dd.append(str(num - two_big))\n        else:\n            dd.append(str(num - big))\n    print(' '.join(dd))\n    dd = []", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = a.copy()\n    k.sort()\n    c = k[n - 1]\n    m = k[n - 2]\n    for i in range(n):\n        if a[i] == c:\n            a[i] = a[i] - m\n        else:\n            a[i] = a[i] - c\n    print(' '.join(map(str, a)))", "for i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    x = sorted(lst)\n    y = []\n    z = max(lst)\n    for j in lst:\n        if j == z:\n            y.append(j - x[n - 2])\n        else:\n            y.append(j - z)\n    print(' '.join(map(str, y)))", "for _ in range(int(input())):\n    n = int(input())\n    x = []\n    x = list(map(int, input().split()))\n    y = []\n    y = x[:]\n    y.sort()\n    n1 = y[n - 1]\n    n2 = y[n - 2]\n    for i in range(n):\n        if x[i] == n1:\n            x[i] = n1 - n2\n        else:\n            x[i] = x[i] - n1\n    j = ' '.join([str(ele) for ele in x])\n    print(j)", "import math\nt = int(input(''))\nfor i in range(t):\n    n = int(input(''))\n    s = [int(x) for x in input('').split(' ')]\n    ss = [*s]\n    ss.sort()\n    m = ss[len(s) - 1]\n    sm = ss[len(s) - 2]\n    res = [0] * len(s)\n    for (ind, v) in enumerate(s):\n        if v == m:\n            res[ind] = v - sm\n        else:\n            res[ind] = v - m\n    print(' '.join([str(x) for x in res]))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = [int(x) for x in input().split()]\n    s_srt = sorted(s)\n    dif = []\n    for i in range(n):\n        if s[i] == s_srt[-1]:\n            dif.append(s[i] - s_srt[-2])\n        else:\n            dif.append(s[i] - s_srt[-1])\n    print(' '.join([str(x) for x in dif]))", "def solve():\n    a = int(input())\n    b = input()\n    b = b.split()\n    l = []\n    x = []\n    for i in b:\n        l.append(int(i))\n    m = max(l)\n    found = 0\n    for i in range(0, a):\n        if m == l[i]:\n            if found == 0:\n                c = l.copy()\n                del c[i]\n                n = max(c)\n                j = l[i] - n\n                x.append(str(j))\n                found = 1\n            else:\n                j = l[i] - m\n                x.append(str(j))\n        else:\n            j = l[i] - m\n            x.append(str(j))\n    x = ' '.join(x)\n    return x\ntc = int(input())\nfor i in range(0, tc):\n    print(solve())", "result = []\nt = int(input())\nfor i in range(t):\n    r = int(input())\n    s_L = input().split(' ', -1)\n    int_s_L = list(map(int, s_L))\n    s_L_sorted = sorted(int_s_L)\n    no1 = s_L_sorted[r - 1]\n    no2 = s_L_sorted[r - 2]\n    result_1 = []\n    for j in s_L:\n        if int(j) == no1:\n            result_1.append(str(int(j) - no2))\n        else:\n            result_1.append(str(int(j) - no1))\n    result.append(result_1)\nfor p in range(t):\n    print(' '.join(result[p]))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    L2 = list(map(int, input().split()))\n    L2sort = sorted(L2)\n    (max, max2) = (L2sort[-1], L2sort[-2])\n    L1 = []\n    for i in range(n):\n        if L2[i] == max:\n            L1.append(max - max2)\n        else:\n            L1.append(L2[i] - max)\n    ans = ' '.join([str(elem) for elem in L1])\n    print(ans)", "import sys\nfrom collections import *\nsys.setrecursionlimit(10 ** 5)\nitr = (line for line in sys.stdin.read().strip().split('\\n'))\nINP = lambda : next(itr)\n\ndef ni():\n    return int(INP())\n\ndef nl():\n    return [int(_) for _ in INP().split()]\n\ndef solve(n, a):\n    pass\nt = ni()\nfor case in range(t):\n    n = ni()\n    a = nl()\n    comp = a[:]\n    comp.sort()\n    out = []\n    for s in a:\n        if s != comp[-1]:\n            out.append(s - comp[-1])\n        else:\n            out.append(s - comp[-2])\n    print(' '.join(map(str, out)))", "h = int(input())\nfor i in range(h):\n    p = int(input())\n    l = list(map(int, input().split()))\n    t = l.copy()\n    t.sort()\n    m = t[p - 1]\n    m2 = t[p - 2]\n    for j in range(p):\n        if l[j] == m:\n            l[j] = l[j] - m2\n        else:\n            l[j] = l[j] - m\n    print(' '.join([str(elem) for elem in l]))", "result = []\nt = int(input())\nfor i in range(t):\n    r = int(input())\n    s_L = input().split(' ', -1)\n    int_s_L = list(map(int, s_L))\n    s_L_sorted = sorted(int_s_L)\n    no1 = s_L_sorted[r - 1]\n    no2 = s_L_sorted[r - 2]\n    result_1 = []\n    for j in s_L:\n        if int(j) == no1:\n            result_1.append(str(int(j) - no2))\n        else:\n            result_1.append(str(int(j) - no1))\n    result.append(result_1)\nfor p in range(t):\n    print(' '.join(result[p]))", "total = int(input())\nlist1 = []\nfor i in range(total):\n    n = int(input())\n    members = list(map(int, input().split()))\n    maximum = max(members)\n    maxindex = members.index(maximum)\n    members.pop(maxindex)\n    maximum2 = max(members)\n    members = list(map(lambda x: x - maximum, members))\n    maximum = maximum - maximum2\n    members.insert(maxindex, maximum)\n    list1.append(members)\nfor i in range(len(list1)):\n    print(*list1[i])", "t = int(input())\nmax = 0\nmax2 = 0\ncount = 0\nfor i in range(t):\n    n = int(input())\n    s = list(map(int, input().strip().split()))\n    s1 = []\n    for i in range(n):\n        if s[i] > max:\n            max = s[i]\n    for i in range(n):\n        if s[i] == max:\n            continue\n        elif s[i] > max2:\n            max2 = s[i]\n    for i in range(n):\n        if s[i] == max:\n            count += 1\n    if count > 1:\n        max2 = max\n    if max2 == 0:\n        max2 = max\n    for i in range(n):\n        if s[i] == max:\n            s1.append(s[i] - max2)\n        else:\n            s1.append(s[i] - max)\n    print(' '.join((str(z) for z in s1)))\n    count = 0\n    max = 0\n    max2 = 0", "from copy import deepcopy\nn = int(input())\nfor i in range(n):\n    input()\n    strengths = list(map(int, input().split()))\n    strengths_copy = deepcopy(strengths)\n    max_strength = max(strengths)\n    strengths_copy.remove(max_strength)\n    second_max = max(strengths_copy)\n    ans = []\n    for strength in strengths:\n        if strength != max_strength:\n            ans.append(str(strength - max_strength))\n        else:\n            ans.append(str(strength - second_max))\n    print(' '.join(ans))", "def main():\n    n = int(input())\n    for i in range(n):\n        input()\n        a = [int(x) for x in input().split()]\n        b = a.copy()\n        mx = max(a)\n        b.remove(mx)\n        mx1 = max(b)\n        print(*[i - mx if mx != i else mx - mx1 for i in a])\nmain()", "for i in range(int(input())):\n    n = int(input())\n    mass = list(map(int, input().split()))\n    maximum = max(mass)\n    ind = mass.index(maximum)\n    otv = []\n    for i in range(ind):\n        otv.append(mass[i] - maximum)\n    mass.pop(ind)\n    otv.append(maximum - max(mass))\n    for i in mass[ind:]:\n        otv.append(i - maximum)\n    print(*otv)", "for i in range(int(input())):\n    ans = []\n    (s, mas) = (int(input()), list(map(int, input().split())))\n    ind = mas.index(max(mas))\n    b = mas.pop(ind)\n    for j in mas:\n        ans.append(j - b)\n    ans = ans[:ind] + [b - max(mas)] + ans[ind:]\n    print(*ans)", "def main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        s = list(map(int, input().split()))\n        max_power = max(s[0], s[1])\n        second_max_power = min(s[0], s[1])\n        for i in range(2, n):\n            if s[i] > max_power:\n                (max_power, second_max_power) = (s[i], max_power)\n            elif s[i] > second_max_power:\n                second_max_power = s[i]\n        for i in range(n):\n            if max_power != s[i]:\n                s[i] -= max_power\n            else:\n                s[i] -= second_max_power\n        print(*s)\nmain()", "import sys\ninput = lambda : sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    x = int(input())\n    n = list(map(int, input().split()))\n    m = max(n)\n    s = m\n    f = n.index(m)\n    n.remove(m)\n    l = []\n    for i in range(x - 1):\n        l.append(n[i] - m)\n    m = max(n)\n    l.insert(f, s - m)\n    print(*l)", "tests = int(input())\nfor _ in range(tests):\n    first_max = second_max = 0\n    n = int(input())\n    arr = list(map(int, input().split()))\n    for num in arr:\n        if num > first_max:\n            second_max = first_max\n            first_max = num\n        elif num > second_max:\n            second_max = num\n    print(*[x - first_max if x != first_max else x - second_max for x in arr])", "import sys\ninput = lambda : sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    q = int(input())\n    l = list(map(int, input().split()))\n    m = max(l)\n    var = m\n    inde = l.index(m)\n    l.remove(m)\n    li = []\n    for i in range(q - 1):\n        li.append(l[i] - m)\n    m = max(l)\n    li.insert(inde, var - m)\n    print(*li)", "import sys\ninput = lambda : sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = max(l)\n    x = m\n    y = l.index(m)\n    l.remove(m)\n    zz = []\n    for i in range(n - 1):\n        zz.append(l[i] - m)\n    mx = max(l)\n    zz.insert(y, x - mx)\n    print(*zz)", "def solve():\n    (mx, s_mx) = (0, 0)\n    n = int(input())\n    l = list(map(int, input().split()))\n    for num in l:\n        if num >= mx:\n            (mx, s_mx) = (num, mx)\n        elif num >= s_mx:\n            s_mx = num\n    for num in l:\n        if num == mx:\n            print(num - s_mx, end=' ')\n        else:\n            print(num - mx, end=' ')\n    print()\nt = int(input())\nfor _ in range(t):\n    solve()", "import sys\ninput = lambda : sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = max(l)\n    x = m\n    y = l.index(m)\n    l.remove(m)\n    z = []\n    for i in range(n - 1):\n        z.append(l[i] - m)\n    m = max(l)\n    z.insert(y, x - m)\n    print(*z)", "n = int(input())\nfor i in range(n):\n    tamanho = int(input())\n    lista = []\n    lista.append(input().split())\n    maior = 0\n    segundo = 0\n    indice = 0\n    respostas = []\n    for j in range(tamanho):\n        if int(lista[0][j]) > maior:\n            segundo = maior\n            maior = int(lista[0][j])\n            indice = j\n        elif int(lista[0][j]) > segundo:\n            segundo = int(lista[0][j])\n    for k in range(tamanho):\n        if k != indice:\n            respostas.append(str(int(lista[0][k]) - maior))\n        else:\n            respostas.append(str(int(lista[0][k]) - segundo))\n    print(' '.join(respostas))", "def read():\n    return list(map(int, input().split()))\n\ndef task():\n    n = int(input())\n    a = read()\n    best = max(a)\n    best_i = a.index(best)\n    next_best = max(a[0:best_i] + a[best_i + 1:])\n    for i in range(n):\n        if i == best_i:\n            print(-next_best + a[i], end=' ')\n            continue\n        print(-best + a[i], end=' ')\n    print()\nt = int(input())\nfor i in range(t):\n    task()", "n = int(input())\nfor i in range(n):\n    arr = int(input())\n    l = list(map(int, input().split()))\n    ll = l.copy()\n    maxx = max(l)\n    l.remove(maxx)\n    second = max(l)\n    for i in ll:\n        if i == maxx:\n            print(maxx - second, end=' ')\n        else:\n            print(i - maxx, end=' ')\n    print()", "w = int(input())\nfor roma in range(w):\n    a = int(input())\n    q = list(map(int, input().split()))\n    mx = max(q)\n    q[q.index(mx)] = 0\n    mx2 = max(q)\n    q[q.index(0)] = mx\n    for i in q:\n        if i != mx:\n            print(i - mx, end=' ')\n        else:\n            print(mx - mx2, end=' ')\n    print()", "def solve():\n    n = int(input())\n    s = list(map(int, input().split()))\n    (mx2, mx1) = sorted(s)[-2:]\n    print(*[i - mx1 if i != mx1 else mx1 - mx2 for i in s])\nfor _ in range(int(input())):\n    solve()", "import math\nimport sys\nfor i in range(int(input())):\n    x = int(input())\n    a = list(map(int, input().split()))\n    b = a\n    arr = []\n    f = max(a)\n    p = a.index(f)\n    b.remove(f)\n    s = max(b)\n    b.insert(p, f)\n    for i in range(x):\n        if a[i] != f:\n            arr.append(a[i] - f)\n        else:\n            arr.append(a[i] - s)\n    print(*arr)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    maximum = max(arr)\n    max_ind = arr.index(maximum)\n    arr[max_ind] = -arr[max_ind]\n    second_max = max(arr)\n    for i in range(n):\n        if i != max_ind:\n            arr[i] = arr[i] - maximum\n        else:\n            arr[i] = maximum - second_max\n    print(*arr)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    max1 = nums[0]\n    max2 = -math.inf\n    for num in nums[1:]:\n        if num >= max1:\n            max2 = max1\n            max1 = num\n        elif num > max2:\n            max2 = num\n    ans = []\n    for num in nums:\n        if num == max1:\n            ans.append(num - max2)\n        else:\n            ans.append(num - max1)\n    print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = set(l)\n    if len(s) == 1:\n        l = ['0'] * n\n        print(*l)\n    else:\n        m = max(s)\n        if l.count(m) > 1:\n            m1 = m\n        else:\n            s.remove(m)\n            m1 = max(s)\n        lst = []\n        for i in l:\n            if i == m:\n                lst.append(m - m1)\n            else:\n                lst.append(i - m)\n        print(*lst)", "def main(s):\n    (first, second) = (-1, -1)\n    for ss in s:\n        if ss >= first:\n            second = first\n            first = ss\n        elif ss >= second:\n            second = ss\n    for x in s:\n        if x == first:\n            print(x - second, end=' ')\n        else:\n            print(x - first, end=' ')\n    print()\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = list(map(int, input().split()))\n    main(s)", "t = int(input())\nfor i in range(t):\n    l = []\n    n = int(input())\n    s = list(map(int, input().split()))\n    a = max(s)\n    for j in s:\n        l.append(j - a)\n    q = l.index(max(l))\n    l.remove(max(l))\n    l.insert(q, -1 * max(l))\n    print(*l)", "ans = []\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans.clear()\n    x = max(a)\n    same = 0\n    for i in a:\n        if i == x:\n            same += 1\n            ans.append(-1000000001)\n        else:\n            ans.append(i - x)\n    if same == n:\n        for i in range(n):\n            print(0, end=' ')\n        print()\n    elif same == 1:\n        y = max(ans)\n        for i in range(n):\n            if ans[i] == -1000000001:\n                ans[i] = -y\n                break\n        print(*ans)\n    else:\n        for i in range(n):\n            if ans[i] == -1000000001:\n                ans[i] = 0\n        print(*ans)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    if n == 2:\n        print(l[0] - l[1], end=' ')\n        print(l[1] - l[0])\n    else:\n        k = l[:]\n        max1 = max(k)\n        k.remove(max1)\n        max2 = max(k)\n        for i in l:\n            if i == max1:\n                print(i - max2, end=' ')\n            else:\n                print(i - max1, end=' ')\n        print()", "def solve(n, l):\n    max_1 = max(l[0], l[1])\n    max_2 = min(l[0], l[1])\n    for i in range(2, n):\n        if l[i] > max_1:\n            max_2 = max_1\n            max_1 = l[i]\n        elif l[i] > max_2:\n            max_2 = l[i]\n    for i in l:\n        if i == max_1:\n            print(i - max_2, end=' ')\n        else:\n            print(i - max_1, end=' ')\n    print()\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    solve(n, l)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    max1 = max(a)\n    max2 = max(a[:a.index(max1)] + a[a.index(max1) + 1:])\n    for j in a:\n        if j != max1:\n            b.append(j - max1)\n        else:\n            b.append(j - max2)\n    print(*b)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = a.copy()\n    m = max(l)\n    l.remove(m)\n    m2 = max(l)\n    for i in range(n):\n        if a[i] == m:\n            a[i] = a[i] - m2\n        else:\n            a[i] = a[i] - m\n    print(*a)", "import sys\n\ndef main():\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n = int(sys.stdin.readline())\n        arr = list(map(int, sys.stdin.readline().split()))\n        (mx_1, mx_2) = (0, 0)\n        (mx1, mx2) = (0, 0)\n        for i in range(n):\n            if arr[i] > mx_1:\n                mx_2 = mx_1\n                mx_1 = arr[i]\n                mx2 = mx1\n                mx1 = i\n            elif arr[i] > mx_2:\n                mx_2 = arr[i]\n                mx2 = i\n        ans = [0] * n\n        for i in range(n):\n            if i == mx1:\n                ans[i] = arr[i] - arr[mx2]\n            else:\n                ans[i] = arr[i] - arr[mx1]\n        print(*ans)\nmain()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    d = list(map(int, input().split()))\n    mx = max(d)\n    j = d.index(max(d))\n    d1 = d.copy()\n    d.remove(mx)\n    mx1 = max(d)\n    for k in range(n):\n        if k != j:\n            d1[k] = d1[k] - mx\n        else:\n            d1[k] = mx - mx1\n    print(*d1)", "n = int(input())\nwhile n != 0:\n    size = int(input())\n    p_list = [int(i) for i in input().split()]\n    maxi = max(p_list)\n    indexi = p_list.index(maxi)\n    p_list.remove(maxi)\n    diff = maxi - max(p_list)\n    for i in range(len(p_list)):\n        p_list[i] -= maxi\n    p_list.insert(indexi, diff)\n    print(*p_list)\n    n -= 1", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    maxi = max(l)\n    k = l.index(maxi)\n    l.remove(maxi)\n    for i in range(len(l)):\n        l[i] = l[i] - maxi\n    if len(l) > 1:\n        l.insert(k, abs(max(l)))\n    else:\n        l.insert(k, abs(l[0]))\n    print(*l)", "def whomax(val):\n    sub = []\n    val_int = [int(i) for i in val]\n    val_int_copy = val_int.copy()\n    var = max(val_int)\n    val_int_copy.remove(var)\n    var_2 = max(val_int_copy)\n    for i in val_int:\n        if i != var:\n            sub.append(i - var)\n        else:\n            sub.append(i - var_2)\n    return sub\ntest_size = int(input())\nfinal = []\nfor i in range(test_size):\n    size = input()\n    temp = input().split()\n    final.append(whomax(temp))\nfor i in final:\n    print(*i)", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    l = list(map(int, input().split()))\n    l1 = list(l)\n    j = max(l)\n    l1.remove(j)\n    k = max(l1)\n    w = [0] * m\n    for i in range(len(l)):\n        if l[i] == j:\n            w[i] = l[i] - k\n        else:\n            w[i] = l[i] - j\n    print(*w, sep=' ')", "def inv_test(l):\n    mx = 0\n    mx2 = 0\n    imx = -1\n    imx2 = -1\n    for i in range(len(l)):\n        if l[i] >= mx:\n            mx2 = mx\n            imx2 = imx\n            mx = l[i]\n            imx = i\n        elif l[i] >= mx2:\n            mx2 = l[i]\n            imx2 = i\n    for i in range(len(l)):\n        if i != imx:\n            l[i] -= mx\n        else:\n            l[i] -= mx2\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = [int(x) for x in input().split()]\n    inv_test(s)\n    print(*s)", "for i in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    if len(set(x)) == 1:\n        z = []\n        for i in range(n):\n            z.append(0)\n        print(*z)\n    else:\n        z = max(x)\n        a = []\n        for j in range(n):\n            a.append(x[j] - z)\n        for j in range(n):\n            if a[j] == 0:\n                x.pop(j)\n                a[j] = z - max(x)\n                break\n        print(*a)", "def secondlargest(arr):\n    m = max(arr)\n    sm = 0\n    for j in range(n):\n        if a[j] > sm and a[j] < m:\n            sm = a[j]\n    return sm\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split(sep=' ')))\n    m = max(a)\n    if a.count(m) > 1:\n        sm = m\n    else:\n        sm = secondlargest(a)\n    for j in range(n - 1):\n        if a[j] != m:\n            print(a[j] - m, end=' ')\n        else:\n            print(a[j] - sm, end=' ')\n    if a[n - 1] == m:\n        print(a[n - 1] - sm)\n    else:\n        print(a[n - 1] - m)", "import sys\ninput = sys.stdin.readline\n\ndef solution():\n    T = int(input())\n    for t in range(T):\n        N = int(input())\n        num = list(map(int, input().split()))\n        (first, second) = (0, 0)\n        for i in num:\n            if i >= first:\n                second = first\n                first = i\n            elif i >= second:\n                second = i\n        for i in range(N):\n            if num[i] == first:\n                num[i] -= second\n            else:\n                num[i] -= first\n        for i in num:\n            print(i, end=' ')\n        print()\nsolution()", "def solve(n, arr):\n    res = [None] * n\n    s = sorted(arr)\n    for (i, num) in enumerate(arr):\n        if num == s[-1]:\n            res[i] = num - s[-2]\n        else:\n            res[i] = num - s[-1]\n    return res\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(*solve(n, arr))", "n = int(input())\nfor i in range(n):\n    arr = int(input())\n    l = list(map(int, input().split()))\n    ll = l.copy()\n    maxx = max(l)\n    l.remove(maxx)\n    second = max(l)\n    for i in ll:\n        if i == maxx:\n            print(maxx - second, end=' ')\n        else:\n            print(i - maxx, end=' ')\n    print()", "t = int(input())\nfor i in range(t):\n    a = int(input())\n    arr = list(map(int, input().split()))\n    n = max(arr)\n    s = sorted(arr)[::-1]\n    d = []\n    for j in arr:\n        if j == n:\n            d.append(j - s[1])\n        else:\n            d.append(j - n)\n    print(*d)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    s = list(map(int, input().split()))\n    temp = s.copy()\n    a = max(temp)\n    temp.remove(a)\n    b = max(temp)\n    for i in range(0, n):\n        if s[i] == a:\n            print(a - b, end=' ')\n        else:\n            print(s[i] - a, end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = list(map(int, input().split()))\n    sil_max = max(s)\n    silac = s.index(sil_max)\n    for i in range(n):\n        if i == silac:\n            print(sil_max - max(s[0:silac] + s[silac + 1:]), end=' ')\n        else:\n            print(s[i] - sil_max, end=' ')\n    print()"]