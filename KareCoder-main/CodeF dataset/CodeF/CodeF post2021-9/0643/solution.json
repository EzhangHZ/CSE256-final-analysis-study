["(M, F, f, r) = (998244353, [1], [1], range)\nfor i in r(1, 5001):\n    F.append(F[-1] * i % M)\n    f.append(f[-1] * pow(i, -1, M) % M)\n(n, k) = map(int, input().split())\n(b, s) = (lambda n, m: F[n] * f[m] * f[n - m] % M, input())\n(o, T) = ([i for i in range(n) if s[i] > '0'], 1)\nl = len(o)\nfor i in r(k):\n    o.append(n)\no.append(-1)\nif l < k:\n    print(1)\n    exit()\nfor i in r(l):\n    e = o[i + k] - 1\n    x = min(k, l - i)\n    T = (T + b(e - o[i - 1], x) - b(e - o[i], x - 1)) % M\nprint(T)", "(M, F, f, r) = (998244353, [1], [1], range)\nfor i in r(1, 5001):\n    F.append(F[-1] * i % M)\n    f.append(f[-1] * pow(i, -1, M) % M)\n(n, k) = map(int, input().split())\n(b, s) = (lambda n, m: F[n] * f[m] * f[n - m] % M, input())\n(o, T) = ([i for i in range(n) if s[i] > '0'], 1)\nl = len(o)\no += [n] * k + [-1]\nfor i in r(l):\n    e = o[i + k] - 1\n    x = min(k, l - i)\n    T = (T + b(e - o[i - 1], x) - b(e - o[i], x - 1)) % M\nprint(1 if l < k else T)", "(M, F, f, r) = (998244353, [1], [1], range)\nfor i in r(1, 5001):\n    F.append(F[-1] * i % M)\n    f.append(f[-1] * pow(i, -1, M) % M)\n(n, k) = map(int, input().split())\n(b, s) = (lambda n, m: F[n] * f[m] * f[n - m] % M, input())\n(o, T) = ([i for i in range(n) if s[i] > '0'], 1)\nl = len(o)\no += [n] * k + [-1]\nfor i in r(l):\n    e = o[i + k] - 1\n    x = min(k, l - i)\n    T = (T + b(e - o[i - 1], x) - b(e - o[i], x - 1)) % M\nprint(1 if l < k else T)", "from functools import lru_cache\n\n@lru_cache(None)\ndef fac(x):\n    if x == 0:\n        return 1\n    else:\n        return x * fac(x - 1) % MOD\n\n@lru_cache(None)\ndef ifac(x):\n    return pow(fac(x), MOD - 2, MOD)\n\ndef C(x, y):\n    if x < y:\n        return 0\n    return fac(x) * ifac(y) * ifac(x - y) % MOD\nMOD = 998244353\nfor i in range(5000):\n    fac(i)\n(n, k) = map(int, input().split())\ns = input()\nif k == 0:\n    print(1)\nelse:\n    left = 0\n    cnt = 0\n    res = 0\n    start = False\n    flag = False\n    for i in range(len(s)):\n        if s[i] == '1':\n            cnt += 1\n        while cnt > k:\n            if s[left] == '1':\n                cnt -= 1\n            left += 1\n        if cnt == k:\n            if not start:\n                res += C(i - left + 1, k)\n            elif s[i] == '1':\n                res += C(i - left, k)\n            else:\n                res += C(i - left, k - 1)\n            start = True\n            flag = True\n            res %= MOD\n    if res == 0 and (not flag):\n        res = 1\n    print(res)", "(M, F, f, r) = (998244353, [1], [1], range)\nfor i in r(1, 5001):\n    F.append(F[-1] * i % M)\n    f.append(f[-1] * pow(i, -1, M) % M)\n(n, k) = map(int, input().split())\n(b, s) = (lambda n, m: F[n] * f[m] * f[n - m], input())\n(o, T) = ([i for i in r(n) if s[i] > '0'], 1)\nl = len(o)\no += [n] * k + [-1]\nfor i in r(l):\n    e = o[i + k] - 1\n    x = min(k, l - i)\n    T += b(e - o[i - 1], x) - b(e - o[i], x - 1)\nprint([T % M, 1][l < k])", "import sys\nI = lambda : [*map(int, sys.stdin.readline().split())]\nmod = 998244353\nfacs = [1]\nifacs = [1]\nfor i in range(1, 5001):\n    facs.append(facs[-1] * i % mod)\n    ifacs.append(ifacs[-1] * pow(i, mod - 2, mod) % mod)\n\ndef binom(n, m):\n    return facs[n] * ifacs[m] * ifacs[n - m] % mod\n(n, k) = I()\ns = input()\nones = []\nfor i in range(n):\n    if s[i] == '1':\n        ones.append(i)\ntot = 1\nif len(ones) < k:\n    print(1)\n    exit()\nfor i in range(len(ones)):\n    if i == 0:\n        start = 0\n    else:\n        start = ones[i - 1] + 1\n    if i + k >= len(ones):\n        end = n - 1\n    else:\n        end = ones[i + k] - 1\n    tot += binom(end - start + 1, min(k, len(ones) - i))\n    tot -= binom(end - ones[i], min(k, len(ones) - i) - 1)\n    tot %= mod\nprint(tot)", "import sys\nI = lambda : [*map(int, sys.stdin.readline().split())]\nmod = 998244353\nfacs = [1]\nifacs = [1]\nfor i in range(1, 5001):\n    facs.append(facs[-1] * i % mod)\n    ifacs.append(ifacs[-1] * pow(i, mod - 2, mod) % mod)\n\ndef binom(n, m):\n    return facs[n] * ifacs[m] * ifacs[n - m] % mod\n(n, k) = I()\ns = input()\nones = []\nfor i in range(n):\n    if s[i] == '1':\n        ones.append(i)\ntot = 1\nif len(ones) < k:\n    print(1)\n    exit()\nfor i in range(len(ones)):\n    if i == 0:\n        start = 0\n    else:\n        start = ones[i - 1] + 1\n    if i + k >= len(ones):\n        end = n - 1\n    else:\n        end = ones[i + k] - 1\n    tot += binom(end - start + 1, min(k, len(ones) - i))\n    tot -= binom(end - ones[i], min(k, len(ones) - i) - 1)\n    tot %= mod\nprint(tot)", "import sys\nI = lambda : [*map(int, sys.stdin.readline().split())]\nmod = 998244353\nfacs = [1]\nifacs = [1]\nfor i in range(1, 5001):\n    facs.append(facs[-1] * i % mod)\n    ifacs.append(ifacs[-1] * pow(i, mod - 2, mod) % mod)\n\ndef binom(n, m):\n    return facs[n] * ifacs[m] * ifacs[n - m] % mod\n(n, k) = I()\ns = input()\nones = []\nfor i in range(n):\n    if s[i] == '1':\n        ones.append(i)\ntot = 1\nif len(ones) < k:\n    print(1)\n    exit()\nfor i in range(len(ones)):\n    if i == 0:\n        start = 0\n    else:\n        start = ones[i - 1] + 1\n    if i + k >= len(ones):\n        end = n - 1\n    else:\n        end = ones[i + k] - 1\n    tot += binom(end - start + 1, min(k, len(ones) - i))\n    tot -= binom(end - ones[i], min(k, len(ones) - i) - 1)\n    tot %= mod\nprint(tot)", "import sys\nI = lambda : [*map(int, sys.stdin.readline().split())]\nmod = 998244353\nfacs = [1]\nifacs = [1]\nfor i in range(1, 5001):\n    facs.append(facs[-1] * i % mod)\n    ifacs.append(ifacs[-1] * pow(i, mod - 2, mod) % mod)\n\ndef binom(n, m):\n    return facs[n] * ifacs[m] * ifacs[n - m] % mod\n(n, k) = I()\ns = input()\nones = []\nfor i in range(n):\n    if s[i] == '1':\n        ones.append(i)\ntot = 1\nif len(ones) < k:\n    print(1)\n    exit()\nfor i in range(len(ones)):\n    if i == 0:\n        start = 0\n    else:\n        start = ones[i - 1] + 1\n    if i + k >= len(ones):\n        end = n - 1\n    else:\n        end = ones[i + k] - 1\n    tot += binom(end - start + 1, min(k, len(ones) - i))\n    tot -= binom(end - ones[i], min(k, len(ones) - i) - 1)\n    tot %= mod\nprint(tot)", "import sys\nI = lambda : [*map(int, sys.stdin.readline().split())]\nmod = 998244353\nfacs = [1]\nifacs = [1]\nfor i in range(1, 5001):\n    facs.append(facs[-1] * i % mod)\n    ifacs.append(ifacs[-1] * pow(i, mod - 2, mod) % mod)\n\ndef binom(n, m):\n    return facs[n] * ifacs[m] * ifacs[n - m] % mod\n(n, k) = I()\ns = input()\nones = []\nfor i in range(n):\n    if s[i] == '1':\n        ones.append(i)\ntot = 1\nif len(ones) < k:\n    print(1)\n    exit()\nfor i in range(len(ones)):\n    if i == 0:\n        start = 0\n    else:\n        start = ones[i - 1] + 1\n    if i + k >= len(ones):\n        end = n - 1\n    else:\n        end = ones[i + k] - 1\n    tot += binom(end - start + 1, min(k, len(ones) - i))\n    tot -= binom(end - ones[i], min(k, len(ones) - i) - 1)\n    tot %= mod\nprint(tot)", "(M, F, f, r) = (998244353, [1], [1], range)\nimport time\nfor i in r(1, 5001):\n    F += [F[-1] * i]\n    f += [f[-1] * pow(i, -1, M) % M]\n(n, k) = map(int, input().split())\n(b, s) = (lambda n, m: F[n] * f[m] * f[n - m], input())\n(o, T) = ([i for i in r(n) if s[i] > '0'], 1)\nl = len(o)\no += [n] * k + [-1]\nfor i in r(l):\n    e = o[i + k] - 1\n    x = min(k, l - i)\n    T += b(e - o[i - 1], x) - b(e - o[i], x - 1)\nprint([T % M, 1][l < k])", "(M, F, f, r) = (998244353, [1], [1], range)\nfor i in r(1, 5001):\n    F += [F[-1] * i]\n    f += [f[-1] * pow(i, -1, M) % M]\n(n, k) = map(int, input().split())\n(b, s) = (lambda n, m: F[n] * f[m] * f[n - m], input())\n(o, T) = ([i for i in r(n) if s[i] > '0'], 1)\nl = len(o)\no += [n] * k + [-1]\nfor i in r(l):\n    e = o[i + k] - 1\n    x = min(k, l - i)\n    T += b(e - o[i - 1], x) - b(e - o[i], x - 1)\nprint([T % M, 1][l < k])", "(M, F, f, r) = (998244353, [1], [1], range)\nfor i in r(1, 5001):\n    F += [F[-1] * i]\n    f += [f[-1] * pow(i, -1, M) % M]\n(n, k) = map(int, input().split())\n(b, s) = (lambda n, m: F[n] * f[m] * f[n - m], input())\n(o, T) = ([i for i in r(n) if s[i] > '0'], 1)\nl = len(o)\no += [n] * k + [-1]\nfor i in r(l):\n    e = o[i + k] - 1\n    x = min(k, l - i)\n    T += b(e - o[i - 1], x) - b(e - o[i], x - 1)\nprint([T % M, 1][l < k])", "(M, F, f, r) = (998244353, [1], [1], range)\nfor i in r(1, 5001):\n    F += [F[-1] * i]\n    f += [f[-1] * pow(i, -1, M) % M]\n(n, k) = map(int, input().split())\n(b, s) = (lambda n, m: F[n] * f[m] * f[n - m], input())\n(o, T) = ([i for i in r(n) if s[i] > '0'], 1)\nl = len(o)\no += [n] * k + [-1]\nfor i in r(l):\n    e = o[i + k] - 1\n    x = min(k, l - i)\n    T += b(e - o[i - 1], x) - b(e - o[i], x - 1)\nprint([T % M, 1][l < k])", "O = input\n(E, F, C, G) = (998244353, [1], [1], range)\nfor A in G(1, 5001):\n    F += [F[-1] * A]\n    C += [C[-1] * pow(A, -1, E) % E]\n(I, D) = map(int, O().split())\n(J, N) = (lambda n, m: F[n] * C[m] * C[n - m], O())\n(B, K) = ([A for A in G(I) if N[A] > '0'], 1)\nH = len(B)\nB += [I] * D + [-1]\nfor A in G(H):\n    L = B[A + D] - 1\n    M = min(D, H - A)\n    K += J(L - B[A - 1], M) - J(L - B[A], M - 1)\nprint([K % E, 1][H < D])", "(M, F, f, r, q) = (998244353, [1], [1], range, input)\nfor i in r(1, 5001):\n    F += [F[-1] * i]\n    f += [f[-1] * pow(i, -1, M) % M]\n(n, k) = map(int, q().split())\n(b, s) = (lambda n, m: F[n] * f[m] * f[n - m], q())\n(o, T) = ([i for i in r(n) if s[i] > '0'], 1)\nl = len(o)\no += [n] * k + [-1]\nfor i in r(l):\n    e = o[i + k] - 1\n    T += b(e - o[i - 1], (x := min(k, l - i))) - b(e - o[i], x - 1)\nprint([T % M, 1][l < k])", "(F, f, r, q) = ([1], [1], range, input)\nfor i in r(1, 5001):\n    F += [F[-1] * i]\n    f += [f[-1] * pow(i, -1, (M := 998244353)) % M]\n(n, k) = map(int, q().split())\n(b, s) = (lambda n, m: F[n] * f[m] * f[n - m], q())\n(o, T) = ([i for i in r(n) if s[i] > '0'], 1)\nl = len(o)\no += [n] * k + [-1]\nfor i in r(l):\n    e = o[i + k] - 1\n    T += b(e - o[i - 1], (x := min(k, l - i))) - b(e - o[i], x - 1)\nprint([T % M, 1][l < k])", "(F, f, r, q) = ([1], [1], range, input)\nfor i in r(1, 5001):\n    F += [F[-1] * i]\n    f += [f[-1] * pow(i, -1, (M := 998244353)) % M]\n(n, k) = map(int, q().split())\n(b, s) = (lambda n, m: F[n] * f[m] * f[n - m], q())\n(o, T) = ([i for i in r(n) if s[i] > '0'], 1)\nl = len(o)\no += [n] * k + [-1]\nfor i in r(l):\n    e = o[i + k] - 1\n    T += b(e - o[i - 1], (x := min(k, l - i))) - b(e - o[i], x - 1)\nprint([T % M, 1][l < k])", "(F, f, r, q) = ([1], [1], range, input)\nfor i in r(1, 5001):\n    F += [F[-1] * i]\n    f += [f[-1] * pow(i, -1, (M := 998244353)) % M]\n(n, k) = map(int, q().split())\n(b, s) = (lambda n, m: F[n] * f[m] * f[n - m], q())\n(o, T) = ([i for i in r(n) if s[i] > '0'], 1)\nl = len(o)\no += [n] * k + [-1]\nfor i in r(l):\n    e = o[i + k] - 1\n    T += b(e - o[i - 1], (x := min(k, l - i))) - b(e - o[i], x - 1)\nprint([T % M, 1][l < k])", "(M, F, f, r) = (998244353, [1], [1], range)\nfor i in r(1, 5001):\n    F += [F[-1] * i]\n    f += [f[-1] * pow(i, -1, M) % M]\n(n, k) = map(int, input().split())\n(b, s) = (lambda n, m: F[n] * f[m] * f[n - m], input())\n(o, T) = ([i for i in r(n) if s[i] > '0'], 1)\nl = len(o)\no += [n] * k + [-1]\nfor i in r(l):\n    e = o[i + k] - 1\n    T += b(e - o[i - 1], (x := min(k, l - i))) - b(e - o[i], x - 1)\nprint([T % M, 1][l < k])", "(M, F, f, r) = (998244353, [1], [1], range)\nfor i in r(1, 5001):\n    F += [F[-1] * i]\n    f += [f[-1] * pow(i, -1, M) % M]\n(n, k) = map(int, input().split())\n(b, s) = (lambda n, m: F[n] * f[m] * f[n - m], input())\n(o, T) = ([i for i in r(n) if s[i] > '0'], 1)\nl = len(o)\no += [n] * k + [-1]\nfor i in r(l):\n    e = o[i + k] - 1\n    x = min(k, l - i)\n    T += b(e - o[i - 1], x) - b(e - o[i], x - 1)\nprint([T % M, 1][l < k])"]