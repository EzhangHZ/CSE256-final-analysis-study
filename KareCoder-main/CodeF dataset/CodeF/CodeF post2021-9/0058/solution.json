["import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    s = inp().strip() + inp().strip()\n    c = [s.count(s[i]) for i in range(4)]\n    m = max(c)\n    if m == 4:\n        print(0)\n    elif m == 3:\n        print(1)\n    elif m == 2:\n        if min(c) == 1:\n            print(2)\n        else:\n            print(1)\n    elif m == 1:\n        print(3)\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "t = int(input())\nfor i in range(t):\n    s = ''\n    s += input()\n    s += input()\n    print(len(set(list(s))) - 1)", "for i in range(int(input())):\n    r1 = input()\n    r2 = input()\n    a = r1[0]\n    c = r2[0]\n    b = r1[1]\n    d = r2[1]\n    set = {a, b, c, d}\n    print(len(set) - 1)", "for _ in range(int(input())):\n    g = set(''.join((input() for _ in range(2))))\n    print(len(g) - 1)", "def solution(ab, cd):\n    d = {}\n    d[ab[0]] = d.get(ab[0], 0) + 1\n    d[ab[1]] = d.get(ab[1], 0) + 1\n    d[cd[0]] = d.get(cd[0], 0) + 1\n    d[cd[1]] = d.get(cd[1], 0) + 1\n    return len(d.keys()) - 1\nt = int(input())\nwhile t:\n    ab = input()\n    cd = input()\n    print(solution(ab, cd))\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    a = input()\n    b = input()\n    a = a + b\n    b = list(set(list(a)))\n    c = []\n    for i in range(len(b)):\n        d = 0\n        for j in range(len(a)):\n            if b[i] == a[j]:\n                d += 1\n        c.append(d)\n    c.sort()\n    if c == [4]:\n        print(0)\n    if c == [2, 2]:\n        print(1)\n    if c == [1, 3]:\n        print(1)\n    if c == [1, 1, 2]:\n        print(2)\n    if c == [1, 1, 1, 1]:\n        print(3)", "t = int(input())\nfor _ in range(t):\n    a = list(input())\n    b = list(input())\n    s = set([a[0], b[0], a[1], b[1]])\n    l = len(s)\n    print(len(s) - 1)", "def lstRd():\n    return list(map(int, input().split()))\n\ndef intRd():\n    return int(input())\n\ndef lstStrRd():\n    return list(input())\nfor _ in range(int(input())):\n    a = []\n    a += lstStrRd()\n    a += lstStrRd()\n    print(len(set(a)) - 1)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    s = input().strip()\n    k = input().strip()\n    d = {}\n    for i in s:\n        d[i] = d.get(i, 0) + 1\n    for i in k:\n        d[i] = d.get(i, 0) + 1\n    s = 0\n    print(len(d.keys()) - 1)", "for _ in range(int(input())):\n    li = list(input()) + list(input())\n    s = set(li)\n    if len(s) == 4:\n        print(3)\n    elif len(s) == 3:\n        print(2)\n    elif len(s) == 2:\n        print(1)\n    else:\n        print(0)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    s = s + input()\n    s = set(s)\n    n = len(s)\n    print(n - 1)", "for _ in range(int(input())):\n    a = list(input())\n    b = list(input())\n    a.extend(b)\n    if len(set(a)) == 1:\n        print(0)\n    elif len(set(a)) == 2:\n        print(1)\n    elif len(set(a)) == 3:\n        print(2)\n    else:\n        print(3)", "t = int(input())\nwhile t > 0:\n    x = [i for i in input()]\n    a = [i for i in input()]\n    x.extend(a)\n    s = set(x)\n    if len(s) == 2:\n        print('1')\n    elif len(s) == 1:\n        print('0')\n    elif len(s) == 3:\n        print(2)\n    elif len(s) == 4:\n        print('3')\n    t -= 1", "for _ in range(int(input())):\n    s = input()\n    s += input()\n    n = len(set(s))\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(1)\n    elif n == 3:\n        print(2)\n    else:\n        print(3)", "testCases = int(input())\nfor i in range(testCases):\n    line1 = input()\n    line2 = input()\n    all_chars = set(line1 + line2)\n    print(len(all_chars) - 1)", "for _ in range(int(input())):\n    x = input()\n    l2 = input()\n    (a, b) = (x[0], x[1])\n    (c, d) = (l2[0], l2[1])\n    s = set([a, b, c, d])\n    if a == b and a == c and (a == d):\n        print(0)\n    elif len(s) == 2:\n        print(1)\n    elif len(s) == 3:\n        print(2)\n    elif len(s) == 4:\n        print(3)", "def solve():\n    image = []\n    image.extend(list(input()))\n    image.extend(list(input()))\n    iset = set(image)\n    return len(iset) - 1\nfor tc in range(int(input())):\n    print(solve())", "def inp():\n    return int(input())\n\ndef strng():\n    return input().strip()\n\ndef jn(x, l):\n    return x.join(map(str, l))\n\ndef strl():\n    return list(input().strip())\n\ndef mul():\n    return map(int, input().strip().split())\n\ndef mulf():\n    return map(float, input().strip().split())\n\ndef seq():\n    return list(map(int, input().strip().split()))\n\ndef ceil(x):\n    return int(x) if x == int(x) else int(x) + 1\n\ndef ceildiv(x, d):\n    return x // d if x % d == 0 else x // d + 1\nfor i in range(inp()):\n    lst = strl()\n    l1 = strl()\n    l = lst + l1\n    s = set(l)\n    length_l = len(s)\n    if length_l == 4:\n        print(3)\n    elif length_l == 3:\n        print(2)\n    elif length_l == 2:\n        print(1)\n    else:\n        print(0)", "for k in range(int(input())):\n    a = input()\n    c = input()\n    b = a[1]\n    d = c[1]\n    a = a[0]\n    c = c[0]\n    n = [a, b, c, d]\n    n = set(n)\n    r = len(n)\n    if r == 1:\n        print('0')\n    elif r == 2:\n        print('1')\n    elif r == 3:\n        print('2')\n    else:\n        print('3')", "from collections import defaultdict\nres = []\nfor _ in range(int(input())):\n    d = defaultdict(int)\n    for l in list(input()):\n        d[l] += 1\n    for l in list(input()):\n        d[l] += 1\n    res.append(len(d) - 1)\nfor r in res:\n    print(r)", "x = int(input())\nfor i in range(x):\n    arr = []\n    r1 = input()\n    r2 = input()\n    for i in r1:\n        if i not in arr:\n            arr.append(i)\n    for i in r2:\n        if i not in arr:\n            arr.append(i)\n    print(len(arr) - 1)", "t = int(input())\nfor i in range(t):\n    s = ''\n    s = s + input()\n    s = s + input()\n    dic = {}\n    for j in s:\n        if j in dic:\n            dic[j] += 1\n        else:\n            dic[j] = 1\n    lis = sorted(list(dic.values()))\n    l = len(lis)\n    if l == 4:\n        print(3)\n    elif l == 1:\n        print(0)\n    elif l == 2:\n        print(1)\n    elif l == 3:\n        print(2)", "class Solution:\n\n    def solve(self, matrix):\n        s = [matrix[0][0], matrix[0][1], matrix[1][0], matrix[1][1]]\n        s = set(s)\n        if len(s) == 4:\n            return 3\n        if len(s) == 3:\n            return 2\n        if len(s) == 2:\n            return 1\n        if len(s) == 1:\n            return 0\n\ndef main():\n    t = int(input())\n    sol = Solution()\n    ip = []\n    for _ in range(t):\n        ip.append([input(), input()])\n    s = []\n    for x in ip:\n        s.append(sol.solve(x))\n    for x in s:\n        print(x)\nmain()", "import sys\nimport collections\nfrom math import ceil, gcd, sqrt, log\nimport bisect\nINF = float('inf')\nmod = 1000000007\n\ndef solve():\n    s = input()\n    s2 = input()\n    ok = s + s2\n    net = list(set(ok))\n    if len(net) == 1:\n        print(0)\n    elif len(net) == 2:\n        print(1)\n    elif len(net) == 3:\n        print(2)\n    else:\n        print(3)\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "n = int(input())\nfor i in range(n):\n    a = input()\n    b = input()\n    d = a + b\n    d = set(d)\n    print(len(d) - 1)", "t = int(input())\nfor i in range(t):\n    l = input()\n    l1 = input()\n    l3 = []\n    for i in l:\n        if i not in l3:\n            l3.append(i)\n    for j in l1:\n        if j not in l3:\n            l3.append(j)\n    if len(l3) == 1:\n        print(0)\n    elif len(l3) == 2:\n        print(1)\n    elif len(l3) == 4:\n        print(3)\n    elif len(l3) == 3:\n        print(2)", "for i in range(int(input())):\n    a = input()\n    c = input()\n    s = set()\n    s.add(a[0])\n    s.add(a[1])\n    s.add(c[0])\n    s.add(c[1])\n    if len(s) == 4:\n        print(3)\n    elif len(s) == 3:\n        print(2)\n    elif len(s) == 2:\n        print(1)\n    else:\n        print(0)", "import sys\ninput = sys.stdin.readline\n\ndef int_num():\n    return int(input())\n\ndef int_list():\n    return list(map(int, input().split()))\n\ndef str_list():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef instr():\n    return input().strip()\n\ndef invr():\n    return map(int, input().split())\n\ndef solve():\n    s1 = instr()\n    s2 = instr()\n    st = set(s1 + s2)\n    ans = len(st) - 1\n    print(ans)\n\ndef main():\n    t = int_num()\n    while t:\n        solve()\n        t -= 1\n    return\nmain()", "for _ in range(int(input())):\n    s = {*input()} | {*input()}\n    print(len(s) - 1)", "t = int(input())\nfor i in range(t):\n    str1 = input()\n    str2 = input()\n    a = str1[0]\n    b = str1[1]\n    c = str2[0]\n    d = str2[1]\n    lst = []\n    count = 0\n    lst.append(a)\n    lst.append(b)\n    lst.append(c)\n    lst.append(d)\n    for i in range(4):\n        a = lst[i]\n        for j in range(i + 1, 4):\n            b = lst[j]\n            if a == b:\n                count = count + 1\n            else:\n                pass\n    if count == 0:\n        print(3)\n    elif count == 1:\n        print(2)\n    elif count == 2:\n        print(1)\n    elif count == 3:\n        print(1)\n    elif count == 6:\n        print(0)\n    else:\n        pass", "t = int(input())\nfor _ in range(t):\n    (a, b) = input()\n    (c, d) = input()\n    l = [a, b, c, d]\n    if len(set(l)) == 1:\n        print(0)\n    else:\n        print(len(set(l)) - 1)", "kol = int(input())\nfor j in range(0, kol):\n    s1 = input()\n    s2 = input()\n    d = {s1[0]: 0, s1[1]: 0, s2[0]: 0, s2[1]: 0}\n    d[s1[0]] = d[s1[0]] + 1\n    d[s1[1]] = d[s1[1]] + 1\n    d[s2[0]] = d[s2[0]] + 1\n    d[s2[1]] = d[s2[1]] + 1\n    l = list(d.values())\n    k_max = max(l)\n    count = 0\n    for (i, c) in enumerate(d.keys()):\n        if d[c] == k_max:\n            count = count + 1\n    if k_max == 4:\n        print(0)\n    if k_max == 3:\n        print(1)\n    if k_max == 2 and count == 1:\n        print(2)\n    if k_max == 2 and count == 2:\n        print(1)\n    if k_max == 1:\n        print(3)", "for _ in range(int(input())):\n    pixels = set(input() + input())\n    print({1: 0, 2: 1, 3: 2, 4: 3}[len(pixels)])", "t = int(input())\narr = []\nfor i in range(t):\n    a = input()\n    b = input()\n    a0 = a[0]\n    a1 = a[1]\n    a2 = b[0]\n    a3 = b[1]\n    if a0 == a1 and a1 == a2 and (a2 == a3) and (a3 == a1):\n        print(0)\n    else:\n        l = []\n        l.append(a0)\n        l.append(a1)\n        l.append(a2)\n        l.append(a3)\n        m = dict()\n        for i in range(4):\n            if l[i] not in m:\n                m[l[i]] = 0\n            else:\n                pass\n        count = len(m)\n        if count == 2:\n            print(1)\n        elif count == 3:\n            print(2)\n        else:\n            print(3)", "I = input\nfor _ in [0] * int(I()):\n    s = I() + I()\n    print(sum((x + 1 >> 1 for x in sorted(map(s.count, {*s}))[:-1])))", "T = int(input())\nl = []\nfor i in range(T):\n    s1 = input()\n    s2 = input()\n    s3 = s1 + s2\n    l.append(s3)\nfor i in l:\n    s = set(i)\n    c = len(s) - 1\n    print(c)", "t = int(input())\ni = 0\nwhile i < t:\n    stringinput1 = input()\n    stringinput2 = input()\n    a = stringinput1[0]\n    b = stringinput1[1]\n    c = stringinput2[0]\n    d = stringinput2[1]\n    setofcolours = {a, b, c, d}\n    print(len(setofcolours) - 1)\n    i += 1", "n = int(input())\nfor i in range(n):\n    s = list(input())\n    p = list(input())\n    q = s + p\n    r = list(set(q))\n    w = []\n    for j in r:\n        w.append(q.count(j))\n    print(len(w) - 1)", "for i in range(int(input())):\n    a = list(set([x for x in input()]))\n    b = list(set([x for x in input()]))\n    if len(set(a + b)) == 1:\n        print(0)\n    elif len(set(a + b)) == 2:\n        print(1)\n    elif len(set(a + b)) == 3:\n        print(2)\n    else:\n        print(3)", "test_case = int(input())\nfor i in range(test_case):\n    l1 = list(input())\n    l2 = list(input())\n    l = l1[:]\n    l.extend(l2)\n    cc1 = l.count(l[0])\n    cc2 = l.count(l[1])\n    cc3 = l.count(l[2])\n    cc4 = l.count(l[3])\n    if cc1 == 1 and cc2 == 1 and (cc3 == 1) and (cc4 == 1):\n        print(3)\n    elif cc1 == 2 and cc2 == 2 and (cc3 == 2):\n        print(1)\n    elif cc1 == 2 and cc2 == 2 and (cc3 != 2) or (cc1 == 2 and cc2 != 2 and (cc3 == 2)) or (cc1 == 2 and cc2 != 2 and (cc4 == 2)) or (cc1 != 2 and cc2 == 2 and (cc3 == 2)) or (cc1 != 2 and cc2 == 2 and (cc4 == 2)) or (cc1 != 2 and cc3 == 2 and (cc4 == 2)):\n        print(2)\n    elif cc1 == 3 or cc2 == 3:\n        print(1)\n    elif cc1 == 4:\n        print(0)", "for i in range(int(input())):\n    s = input() + input()\n    c = {s[0]: 0, s[1]: 0, s[2]: 0, s[3]: 0}\n    for j in s:\n        c[j] += 1\n    comb = sorted(c.values())\n    if comb == [1, 1, 1, 1]:\n        print(3)\n    if comb == [1, 1, 2]:\n        print(2)\n    if comb == [2, 2]:\n        print(1)\n    if comb == [4]:\n        print(0)\n    if comb == [1, 3]:\n        print(1)", "def main():\n    t = int(input())\n    for i in range(t):\n        s1 = input()\n        s2 = input()\n        s = s1 + s2\n        m = set(s)\n        print(len(m) - 1)\nmain()", "for _ in range(int(input())):\n    s1 = input()\n    s2 = input()\n    s = s1 + s2\n    l = []\n    for i in range(4):\n        l.append(s[i])\n    print(len(set(l)) - 1)", "n = int(input())\nfor i in range(n):\n    a = input()\n    b = input()\n    count = 0\n    c = a + b\n    d = set(list(c))\n    print(len(d) - 1)", "g = int(input())\nfor i in range(g):\n    m = input()\n    n = input()\n    d = m + n\n    e = set(list(d))\n    print(len(e) - 1)", "for _ in range(int(input())):\n    a = list(input())\n    b = list(input())\n    l = []\n    j = ''\n    for i in a:\n        l.append(i)\n    for i in b:\n        l.append(i)\n        x = 0\n        y = 0\n    for i in l:\n        if l.count(i) == 4:\n            y = 0\n            break\n        if l.count(i) == 3:\n            y = 1\n            break\n        if l.count(i) == 2 and x == 0:\n            x = 2\n            j = i\n            continue\n        if l.count(i) == 2 and x != 0 and (i != j):\n            x = 0\n            y = 1\n            break\n        if l.count(i) == 1:\n            y += 1\n            continue\n    if y == 4:\n        print(3)\n    else:\n        print(y)", "t = int(input())\nfor _ in range(t):\n    l1 = input()\n    l2 = input()\n    m = list(l1) + list(l2)\n    m = set(m)\n    n = len(m)\n    if n == 2:\n        print(1)\n    elif n == 3:\n        print(2)\n    elif n == 4:\n        print(3)\n    else:\n        print(0)", "def solve():\n    t1 = str(input())\n    t2 = str(input())\n    t = t1 + t2\n    a = [t[0], t[1], t[2], t[3]]\n    a1 = a.count(a[0])\n    a2 = a.count(a[1])\n    a3 = a.count(a[2])\n    a4 = a.count(a[3])\n    result = a1 + a2 + a3 + a4\n    if result == 16:\n        print(0)\n    elif result == 10 or result == 8:\n        print(1)\n    elif result == 6:\n        print(2)\n    elif result == 4:\n        print(3)\nt = int(input())\nfor i in range(t):\n    solve()", "t = int(input())\nfor _ in range(t):\n    s1 = input()\n    s2 = input()\n    d = {}\n    for i in s1:\n        try:\n            d[i] += 1\n        except:\n            d[i] = 1\n    for i in s2:\n        try:\n            d[i] += 1\n        except:\n            d[i] = 1\n    print(len(d) - 1)", "res = []\nfor _ in range(int(input())):\n    st = set()\n    a = input()\n    c = input()\n    st.add(a[0])\n    st.add(a[1])\n    st.add(c[0])\n    st.add(c[1])\n    res.append(len(st) - 1)\nprint(*res, sep='\\n')", "t = int(input())\nfor i in range(t):\n    y = input()\n    z = input()\n    a = [y[0], y[1], z[0], z[1]]\n    a.sort()\n    c = 0\n    if a[0] == a[1]:\n        c += 1\n    if a[1] == a[2]:\n        c += 1\n    if a[2] == a[3]:\n        c += 1\n    if c == 0:\n        print(3)\n    elif c == 1:\n        print(2)\n    elif c == 2:\n        print(1)\n    elif c == 3:\n        print(0)", "t = int(input())\nfor j in range(t):\n    a = ''\n    for _ in range(2):\n        a += input()\n    print(len(set(a)) - 1)", "for _ in range(int(input())):\n    t = set()\n    a = list(input())\n    a.extend(list(input()))\n    t = set(a)\n    if len(t) == 1:\n        print(0)\n    elif len(t) == 2:\n        print(1)\n    elif len(t) == 3:\n        print(2)\n    elif len(t) == 4:\n        print(3)", "from collections import Counter\nlength = int(input())\nfor _ in range(length):\n    graph = ''\n    graph += input()\n    graph += input()\n    counter = Counter(graph)\n    print(len(counter) - 1)", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    s = set()\n    for i in a:\n        s.add(i)\n    for i in b:\n        s.add(i)\n    if len(s) == 1:\n        print(0)\n    elif len(s) == 2:\n        print(1)\n    elif len(s) == 3:\n        print(2)\n    else:\n        print(3)", "import sys\ninput = sys.stdin.readline\n\ndef print(*args, end='\\n', sep=' ') -> None:\n    sys.stdout.write(sep.join(map(str, args)) + end)\n\ndef Solve():\n    for t in range(int(input())):\n        a = input().strip('\\n')\n        b = input().strip('\\n')\n        print(len(set(a + b)) - 1)\nSolve()", "from collections import Counter\n\ndef main():\n    t = int(input())\n    for t in range(1, t + 1):\n        s = ''\n        s += input()\n        s += input()\n        c = Counter(s)\n        print(len(c) - 1)\nmain()", "def main():\n    a = list(input())\n    b = list(input())\n    a += b\n    if len(set(a)) == 1:\n        return 0\n    l = len(set(a))\n    if l == 4:\n        return 3\n    freq = {}\n    for s in a:\n        if s not in freq:\n            freq[s] = 0\n        freq[s] += 1\n    if l == 3:\n        return 2\n    return 1\nfor _ in range(int(input())):\n    print(main())", "import math\nl = []\nunique_l = []\nfor _ in range(int(input())):\n    t = input()\n    p = input()\n    for tt in t:\n        l.append(tt)\n    for pp in p:\n        l.append(pp)\n    for ll in l:\n        if ll not in unique_l:\n            unique_l.append(ll)\n    if len(unique_l) == 4:\n        print(3)\n    elif len(unique_l) == 1:\n        print(0)\n    else:\n        print(math.ceil(len(unique_l) / 2))\n    l = []\n    unique_l = []", "for x in range(int(input())):\n    a = input()\n    b = input()\n    c = a + b\n    s = set(c)\n    print(len(s) - 1)", "for kg in range(int(input())):\n    freq = [0] * 26\n    s = input()\n    t = input()\n    s += t\n    for i in range(len(s)):\n        freq[ord(s[i]) - ord('a')] = 1\n    summ = sum(freq)\n    dict = {1: 0, 2: 1, 3: 2, 4: 3}\n    print(dict[summ])", "t = int(input())\nfor t1 in range(t):\n    up = input()\n    down = input()\n    (a, b) = (up[0], up[1])\n    (c, d) = (down[0], down[1])\n    s = set([a, b, c, d])\n    if len(s) == 4:\n        print(3)\n    elif len(s) == 3:\n        print(2)\n    elif len(s) == 2:\n        print(1)\n    elif len(s) == 1:\n        print(0)", "t = int(input())\nfor i in range(t):\n    a = input()\n    b = input()\n    st = a + b\n    dct = {}\n    for j in st:\n        if j not in dct:\n            dct[j] = 1\n        else:\n            dct[j] += 1\n    if len(dct) == 1:\n        res = 0\n    elif len(dct) == 2:\n        res = 1\n    elif len(dct) == 3:\n        res = 2\n    else:\n        res = 3\n    print(res)", "for _ in range(int(input())):\n    aa = input()\n    bb = input()\n    add = aa + bb\n    s = set(add)\n    z = len(s)\n    if z == 4:\n        print(3)\n    elif z == 3:\n        print(2)\n    elif z == 2:\n        print(1)\n    else:\n        print(0)", "from collections import Counter\n\ndef solve(string):\n    freqs = Counter(string)\n    return len(freqs) - 1\nt = int(input())\nfor _ in range(t):\n    upper = input()\n    lower = input()\n    print(solve(upper + lower))", "for i in range(int(input())):\n    n = input()\n    m = input()\n    if len(set(n + m)) == 1:\n        print(0)\n    elif len(set(n + m)) == 2:\n        print(1)\n    elif len(set(n + m)) == 4:\n        print(3)\n    else:\n        print(2)", "for _ in range(int(input())):\n    s1 = input()\n    s2 = input()\n    s = s1 + s2\n    b = set(s)\n    if len(b) == 4:\n        print(3)\n    elif len(b) == 1:\n        print(0)\n    elif len(b) == 2:\n        print(1)\n    else:\n        print(2)", "t = int(input())\nwhile t:\n    t -= 1\n    a = input()\n    b = input()\n    w = a[0]\n    x = a[1]\n    y = b[0]\n    z = b[1]\n    x1 = set()\n    x1.add(x)\n    x1.add(y)\n    x1.add(w)\n    x1.add(z)\n    if w == x and x == y and (y == z):\n        print(0)\n    elif len(x1) == 4:\n        print(3)\n    elif len(x1) == 2:\n        print(1)\n    elif len(x1) == 3:\n        print(2)", "count = int(input())\nfor times in range(count):\n    arr = list(input()) + list(input())\n    value = len(set(arr))\n    if value == 4:\n        print(3)\n    elif value == 3:\n        print(2)\n    elif value == 2:\n        print(1)\n    else:\n        print(0)", "def mi():\n    return map(int, input().split())\n\ndef li():\n    return list(mi())\n\ndef si():\n    return str(input())\n\ndef ni():\n    return int(input())\n\ndef yn(ans):\n    if ans:\n        print('YES')\n    else:\n        print('NO')\nfor T in range(int(input())):\n    s = ''\n    s += str(input()) + str(input())\n    print(len(set(s)) - 1)", "t = int(input())\nfor i in range(t):\n    colors = set()\n    for j in range(2):\n        (q, w) = [x for x in list(input())]\n        colors.add(q)\n        colors.add(w)\n    print(len(colors) - 1)", "n = int(input())\nfor i in range(n):\n    x = input()\n    y = input()\n    z = []\n    for i in x:\n        z.append(i)\n    for i in y:\n        z.append(i)\n    z = set(z)\n    print(len(z) - 1)", "import collections\nlist1 = []\nnum = 0\nfor _ in range(int(input())):\n    list1 = []\n    a = input()\n    c = input()\n    list1.append(a[0])\n    list1.append(a[1])\n    list1.append(c[0])\n    list1.append(c[1])\n    dict1 = list(collections.Counter(list1).keys())\n    print(len(dict1) - 1)", "cases = int(input())\nIMG_SIZE = 2\nfor _ in range(cases):\n    colors = set()\n    for i in range(IMG_SIZE):\n        for pixel in input():\n            colors.add(pixel)\n    print(len(colors) - 1)", "for i in range(int(input())):\n    a = []\n    a += input()\n    a += input()\n    a = set(a)\n    print(len(a) - 1)", "t = int(input())\nresult = []\nfor i in range(t):\n    up = input()\n    down = input()\n    mnozh = set(up + down)\n    if len(mnozh) == 4:\n        result.append(3)\n        continue\n    if len(mnozh) == 1:\n        result.append(0)\n        continue\n    if len(mnozh) == 2:\n        result.append(1)\n        continue\n    if len(mnozh) == 3:\n        result.append(2)\n        continue\nlist(map(print, result))", "for _ in range(int(input())):\n    s = input()\n    k = input()\n    dict = {}\n    for i in s:\n        try:\n            dict[i] += 1\n        except:\n            dict[i] = 1\n    for i in k:\n        try:\n            dict[i] += 1\n        except:\n            dict[i] = 1\n    if len(dict) == 4:\n        print(3)\n    elif len(dict) == 3:\n        print(2)\n    elif len(dict) == 2:\n        print(1)\n    else:\n        print(0)", "t = int(input())\nfor i in range(t):\n    s = input()\n    p = input()\n    f = s + p\n    if len(set(f)) == 1:\n        print(0)\n    elif len(set(f)) == 2:\n        print(1)\n    elif len(set(f)) == 3:\n        print(2)\n    else:\n        print(3)", "def same_colour():\n    n = int(input())\n    lst_ans = []\n    for i in range(n):\n        lst_1 = list(input())\n        lst_2 = list(input())\n        lst_3 = lst_1 + lst_2\n        set_1 = set(lst_3)\n        k = len(set_1)\n        if k == 1:\n            lst_ans.append(0)\n        if k == 2:\n            lst_ans.append(1)\n        if k == 3:\n            lst_ans.append(2)\n        if k == 4:\n            lst_ans.append(3)\n    for j in lst_ans:\n        print(j)\nsame_colour()", "a = int(input())\nfor i in range(a):\n    s1 = input()\n    s2 = input()\n    s = s1 + s2\n    s = list(s)\n    un = list(set(s))\n    if len(un) == 2:\n        print('1')\n    if len(un) == 1:\n        print('0')\n    if len(un) == 3:\n        print('2')\n    if len(un) == 4:\n        print('3')", "for _ in range(int(input())):\n    a = [input() for i in range(2)]\n    s = set()\n    for i in range(2):\n        for j in range(2):\n            s.add(a[i][j])\n    if len(s) == 1:\n        print(0)\n    elif len(s) == 2:\n        print(1)\n    elif len(s) == 3:\n        print(2)\n    else:\n        print(3)", "T = int(input())\nfor t in range(0, T):\n    s1 = input()\n    s2 = input()\n    hm = [0 for i in range(0, 26)]\n    for i in range(0, 2):\n        hm[ord(s1[i]) - 97] += 1\n        hm[ord(s2[i]) - 97] += 1\n    if hm.count(0) + hm.count(1) == 26:\n        print(3)\n    elif hm.count(2) == 1:\n        print(2)\n    elif hm.count(2) == 2 or hm.count(3) == 1:\n        print(1)\n    elif hm.count(4) == 1:\n        print(0)", "for i in range(int(input())):\n    s11 = input()\n    s22 = input()\n    s = set(s11 + s22)\n    print(len(s) - 1)", "n = int(input())\narr = set()\nfor i in range(n):\n    x = input()\n    y = input()\n    for (z, j) in (x, y):\n        arr.add(z)\n        arr.add(j)\n    print(len(arr) - 1)\n    arr = set()", "def unique_char(para):\n    lst2 = []\n    for a in range(4):\n        if not para[a] in lst2:\n            lst2.append(para[a])\n    return len(lst2)\n\ndef result(para2):\n    if para2 == 1:\n        return print(0)\n    elif para2 == 2:\n        return print(1)\n    elif para2 == 3:\n        return print(2)\n    elif para2 == 4:\n        return print(3)\nt = int(input())\nfor i in range(t):\n    l1 = list(input())\n    l2 = list(input())\n    lst = l1 + l2\n    u = unique_char(lst)\n    result(u)", "for _ in range(int(input())):\n    letters = set()\n    for i in range(2):\n        letters.update(list(input()))\n    print(len(letters) - 1)", "t = int(input())\nfor _ in range(t):\n    str1 = input()\n    str2 = input()\n    list1 = set(list(str1 + str2))\n    print(len(list1) - 1)", "import sys\nLI = lambda : list(map(str, sys.stdin.readline().split()))\nMI = lambda : map(int, sys.stdin.readline().split())\nSI = lambda : sys.stdin.readline().strip('\\n')\nII = lambda : int(sys.stdin.readline())\nn = II()\nfor _ in range(n):\n    a = SI()\n    b = SI()\n    c = []\n    c.append(a[1])\n    c.append(a[0])\n    c.append(b[1])\n    c.append(b[0])\n    c = set(c)\n    uniqueValues = len(c)\n    if uniqueValues == 1:\n        print(0)\n    elif uniqueValues == 2:\n        print(1)\n    elif uniqueValues == 3:\n        print(2)\n    else:\n        print(3)", "t = int(input())\nfor ii in range(t):\n    a = input()\n    b = input()\n    cnt = 0\n    aa = ''\n    for i in a:\n        if i not in aa:\n            cnt += 1\n            aa += i\n    for f in b:\n        if f not in aa:\n            cnt += 1\n            aa += f\n    print(cnt - 1)", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    c = list(a + b)\n    c.sort()\n    x = [c[0]]\n    n = [1]\n    p = 0\n    for i in range(1, 4):\n        if c[i] == x[-1]:\n            n[-1] += 1\n        else:\n            x.append(c[i])\n            n.append(1)\n    if len(x) == 4:\n        print(3)\n    elif len(x) == 3:\n        print(2)\n    elif len(x) == 2:\n        print(1)\n    else:\n        print(0)", "for i in range(int(input())):\n    s = input()\n    ss = input()\n    l = []\n    for j in range(0, len(s)):\n        l.append(s[j])\n    for j in range(0, len(ss)):\n        l.append(ss[j])\n    n = set(l)\n    print(len(n) - 1)", "for _ in range(int(input())):\n    a = set()\n    for i in input():\n        a.add(i)\n    for i in input():\n        a.add(i)\n    l = len(a)\n    if l == 1:\n        print(0)\n    elif l == 2:\n        print(1)\n    elif l == 3:\n        print(2)\n    else:\n        print(3)", "t = int(input())\notv = []\nfor i in range(t):\n    s1 = input()\n    s2 = input()\n    cv = []\n    for j in range(2):\n        cv.append(s1[j])\n        cv.append(s2[j])\n    num = len(set(cv))\n    if num == 4:\n        otv.append(3)\n    elif num == 3:\n        otv.append(2)\n    elif num == 2:\n        otv.append(1)\n    else:\n        otv.append(0)\nfor i in otv:\n    print(i)", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    s = input()\n    a = s[0]\n    b = s[1]\n    s = input()\n    c = s[0]\n    d = s[1]\n    if a == b == c == d:\n        print(0)\n    elif a == b == c or b == c == d or a == c == d or (a == b == d):\n        print(1)\n    elif a == b and c == d or (a == c and b == d) or (a == d and b == c):\n        print(1)\n    elif a == b or c == d or b == d or (b == c) or (a == c) or (a == d):\n        print(2)\n    else:\n        print(3)", "n = int(input())\nls = []\ncolors = []\nparacount = 0\nfor i in range(n):\n    for j in range(2):\n        str = list(input())\n        ls.append(str)\n    for i in range(len(ls)):\n        for j in range(2):\n            if ls[i][j] not in colors:\n                colors.append(ls[i][j])\n            else:\n                paracount += 1\n    print(4 - paracount - 1)\n    colors = []\n    paracount = 0\n    ls = []", "t = int(input())\nfor i in range(t):\n    L = []\n    s = input().split()\n    a = input().split()\n    b = a[0] + s[0]\n    for j in b:\n        if j not in L:\n            L.append(j)\n    if len(L) == 4:\n        print(3)\n    elif len(L) == 3:\n        print(2)\n    elif len(L) == 2:\n        print(1)\n    elif len(L) == 1:\n        print(0)", "from collections import defaultdict\nfor _ in range(int(input())):\n    s1 = input()\n    s2 = input()\n    d = defaultdict(int)\n    for i in range(2):\n        d[s1[i]] += 1\n        d[s2[i]] += 1\n    count = 0\n    present = 0\n    maxx = 0\n    for x in d.values():\n        count += 1\n        if x >= 2:\n            present += 1\n            maxx = max(maxx, x)\n    if present == 2:\n        print(1)\n    elif present == 1:\n        if maxx == 3:\n            print(1)\n        elif count == 1:\n            print(0)\n        else:\n            print(2)\n    elif count == 4:\n        print(3)", "t = int(input())\nfor testcase in range(t):\n    img_set = set(input() + input())\n    print(len(img_set) - 1)", "t = int(input())\nfor _ in range(t):\n    a = input()\n    b = input()\n    c = set(a + b)\n    count = 0\n    print(len(c) - 1)"]