["import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    m = 10 ** 9 + 7\n    if n <= 2:\n        return 1\n    pos = [-1] * n\n    for i in range(n):\n        pos[arr[i]] = i\n    (f, b) = (min(pos[0], pos[1]), max(pos[0], pos[1]))\n    curr = b - f - 1\n    ans = 1\n    for i in range(2, n):\n        if f < pos[i] < b:\n            ans *= curr\n            ans %= m\n            curr -= 1\n        elif pos[i] < f:\n            curr += f - pos[i] - 1\n            f = pos[i]\n        else:\n            curr += pos[i] - b - 1\n            b = pos[i]\n    return ans\nfor _ in range(int(input())):\n    print(solve())", "import sys\ninputs = sys.stdin.readlines()\nfor i in range(2, len(inputs), 2):\n    l = list(map(int, inputs[i].split()))\n    if len(l) <= 1:\n        sys.stdout.write('1\\n')\n        continue\n    idx = [-1 for _ in range(len(l))]\n    for i in range(len(l)):\n        idx[l[i]] = i\n    ans = [1 for _ in range(len(l))]\n    left = min(idx[0], idx[1])\n    right = max(idx[0], idx[1])\n    for i in range(2, len(l)):\n        if left < idx[i] < right:\n            ans[i] = max(1, right - left - i + 1)\n        elif idx[i] > right:\n            right = idx[i]\n        elif idx[i] < left:\n            left = idx[i]\n    answer = 1\n    for a in ans:\n        answer = answer * a % 1000000007\n    sys.stdout.write(f'{answer}\\n')", "def main():\n    MOD = 10 ** 9 + 7\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        A = list(map(int, input().split()))\n        dict = [0] * n\n        ans = 1\n        for i in range(n):\n            dict[A[i]] = i\n        minimum = n\n        maximum = -1\n        j = 0\n        for i in range(n):\n            update = False\n            if minimum > dict[i]:\n                update = True\n                minimum = dict[i]\n            if maximum < dict[i]:\n                update = True\n                maximum = dict[i]\n            if not update:\n                ans *= maximum + 1 - minimum - i\n                ans %= MOD\n                j += 1\n        print(ans)\nmain()", "import sys\ninputs = sys.stdin.readlines()\nfor i in range(2, len(inputs), 2):\n    l = list(map(int, inputs[i].split()))\n    if len(l) <= 1:\n        sys.stdout.write('1\\n')\n        continue\n    idx = [-1 for _ in range(len(l))]\n    for i in range(len(l)):\n        idx[l[i]] = i\n    ans = [1 for _ in range(len(l))]\n    left = min(idx[0], idx[1])\n    right = max(idx[0], idx[1])\n    d = 0\n    for i in range(2, len(l)):\n        if left < idx[i] < right:\n            ans[i] = max(1, right - left - i + 1)\n            d += 1\n        elif idx[i] > right:\n            right = idx[i]\n        elif idx[i] < left:\n            left = idx[i]\n    answer = 1\n    for a in ans:\n        answer = answer * a % 1000000007\n    sys.stdout.write(f'{answer}\\n')", "import random\nO = random.randint(10, 10 ** 7)\n\ndef main():\n    N = int(input())\n    for _ in range(N):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        ps = {}\n        for (i, n) in enumerate(arr):\n            ps[n] = i\n        l = ps[0]\n        r = ps[0]\n        ans = 1\n        for i in range(len(arr)):\n            psi = ps[i]\n            if l < psi < r:\n                ans = ans * (r - l + 1 - i) % 1000000007\n            else:\n                l = min(l, psi)\n                r = max(r, psi)\n        print(ans)\n\ndef init():\n    import os\n    import sys\n    sys.setrecursionlimit(2 * 10 ** 6)\n    if 'CP_LOCAL_ENV' in os.environ:\n        sys.stdin = open('cf_test_c.txt')\ninit()\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mod = 10 ** 9 + 7\n    ans = 1\n    p = [0] * n\n    for i in range(n):\n        p[a[i]] = i\n    (l, r) = (p[0], p[0])\n    for i in range(n):\n        if p[i] < l:\n            l = p[i]\n        elif p[i] > r:\n            r = p[i]\n        else:\n            ans = ans * (r - l + 1 - i) % mod\n    print(ans)", "import sys\nLOCAL_DATA = 0\nMULTI_CASE = 1\nsys.setrecursionlimit(10000)\nif LOCAL_DATA:\n    sys.stdin = open('./dataset/in.txt', 'r')\n\ndef read_int():\n    return int(input())\n\ndef read_list(t):\n    return list(map(t, input().split()))\n\ndef run_test_case():\n    n = read_int()\n    a = read_list(int)\n    if n == 1:\n        print(1)\n        return\n    pos = [0] * n\n    for i in range(n):\n        pos[a[i]] = i\n    mod = 10 ** 9 + 7\n    ans = 1\n    l = min(pos[0], pos[1])\n    r = max(pos[0], pos[1])\n    cnt = 2\n    for i in range(2, n):\n        if l < pos[i] < r:\n            ans *= r - l + 1 - i\n            ans %= mod\n        else:\n            l = min(l, pos[i])\n            r = max(r, pos[i])\n    print(ans)\ncase_count = 1\nif MULTI_CASE:\n    case_count = read_int()\nfor _ in range(case_count):\n    run_test_case()", "mod = 1000000000.0 + 7\n\ndef resi():\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n <= 2:\n        print(1)\n        return\n    p = [0] * n\n    for i in range(n):\n        p[a[i]] = i\n    (najmanji, najveci) = (min(p[0], p[1]), max(p[0], p[1]))\n    res = 1\n    for i in range(2, n):\n        if p[i] < najmanji:\n            najmanji = p[i]\n        elif najveci < p[i]:\n            najveci = p[i]\n        else:\n            res = res * (najveci - najmanji - (i - 1)) % mod\n    print(int(res))\nfor i in range(int(input())):\n    resi()", "mod = 10 ** 9 + 7\nt = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = [0 for i in range(n)]\n    for i in range(n):\n        p[a[i]] = i\n    left = right = p[0]\n    ans = 1\n    for i in range(n - 1):\n        if p[i + 1] < left:\n            left = p[i + 1]\n        elif p[i + 1] > right:\n            right = p[i + 1]\n        else:\n            ans = ans * (right - left - i) % mod\n    print(ans % mod)", "MOD = int(1000000000.0 + 7)\nt = int(input())\nfor _ in range(t):\n    _ = input()\n    lst = [int(x) for x in input().split()]\n    idx = [0] * len(lst)\n    for i in range(len(lst)):\n        idx[lst[i]] = i\n    if len(lst) == 1:\n        print(1)\n    else:\n        lhs = min(idx[0], idx[1])\n        rhs = max(idx[1], idx[0])\n        sm = 1\n        for i in range(2, len(lst) - 1):\n            if idx[i] < lhs:\n                lhs = idx[i]\n            elif idx[i] > rhs:\n                rhs = idx[i]\n            else:\n                sm = sm * (rhs - lhs + 1 - i) % MOD\n        print(sm)", "t = int(input())\nMOD = 10 ** 9 + 7\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n <= 2:\n        print(1)\n    else:\n        b = {}\n        for i in range(n):\n            b[a[i]] = i\n        r_min = min(b[0], b[1])\n        r_max = max(b[0], b[1])\n        tot = 1\n        for i in range(2, n):\n            if b[i] < r_min:\n                r_min = b[i]\n            elif b[i] > r_max:\n                r_max = b[i]\n            else:\n                tot = tot * (r_max - r_min - i + 1) % MOD\n        print(tot)", "import sys, math\nK = int(sys.stdin.readline().strip())\nfor _ in range(K):\n    S = sys.stdin.readline().strip()\n    S = int(S)\n    l = list(map(int, sys.stdin.readline().strip().split()))\n    d = {}\n    for i in range(len(l)):\n        d[l[i]] = i\n    m1 = d[0]\n    m2 = d[0]\n    r = 1\n    for i in range(1, len(l)):\n        if m1 < d[i] < m2:\n            r *= m2 - m1 - i + 1\n            r = r % (10 ** 9 + 7)\n        m1 = min(m1, d[i])\n        m2 = max(m2, d[i])\n    print(r)", "mod = 10 ** 9 + 7\nfrom collections import deque, defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ind = defaultdict(int)\n    for i in range(n):\n        ind[l[i]] = i\n    l = ind[0]\n    r = ind[0]\n    ans = 1\n    for i in range(1, n):\n        if ind[i] < l:\n            l = ind[i]\n            continue\n        if ind[i] > r:\n            r = ind[i]\n            continue\n        else:\n            ans *= r - l + 1 - i\n            ans %= mod\n    print(ans)", "from collections import deque, defaultdict\nmod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    n = int(input())\n    ld = list(map(int, input().split()))\n    ans = 1\n    ind = defaultdict(int)\n    for i in range(n):\n        ind[ld[i]] = i\n    l = ind[0]\n    r = ind[0]\n    for i in range(1, n):\n        if ind[i] < l:\n            l = ind[i]\n            continue\n        if ind[i] > r:\n            r = ind[i]\n            continue\n        else:\n            ans *= r - l + 1 - i\n            ans %= mod\n    print(ans)", "t = int(input())\nmod = int(1000000000.0) + 7\nwhile t:\n    t -= 1\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    pos = [0] * n\n    for i in range(len(arr)):\n        pos[arr[i]] = i\n    (l, r) = (pos[0], pos[0])\n    ans = 1\n    for i in range(1, n):\n        if pos[i] < l:\n            l = pos[i]\n        elif pos[i] > r:\n            r = pos[i]\n        else:\n            ans = ans * (r - l + 1 - i) % mod\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(1)\n    else:\n        d = dict()\n        for i in range(n):\n            d[a[i]] = i\n        (left, right) = sorted([d[0], d[1]])\n        total = right - left - 1\n        ans = 1\n        for i in range(2, n):\n            if left < d[i] < right:\n                ans = total * ans % 1000000007\n                total -= 1\n            elif d[i] < left:\n                total += left - d[i] - 1\n                left = d[i]\n            elif d[i] > right:\n                total += d[i] - right - 1\n                right = d[i]\n        print(ans % 1000000007)", "dl = 1000000007\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = {}\n    for i in range(n):\n        b[a[i]] = i\n    l = b[0]\n    r = b[0] + 1\n    mn = 0\n    ans = 1\n    while True:\n        mn += 1\n        while mn < n and l <= b[mn] < r:\n            ans = ans * (r - l - mn) % dl\n            mn += 1\n        if mn == n:\n            break\n        if b[mn] >= r:\n            r = b[mn] + 1\n        else:\n            l = b[mn]\n    print(ans)", "nn = int(input().strip())\nfor _ in range(nn):\n    n = int(input().strip())\n    arr = [int(x) for x in input().split(' ')]\n    p = [0] * len(arr)\n    for i in range(len(arr)):\n        p[arr[i]] = i\n    left = p[0]\n    right = p[0]\n    ans = 1\n    for i in range(len(arr)):\n        if p[i] < left:\n            left = p[i]\n        elif p[i] > right:\n            right = p[i]\n        else:\n            ans *= right - left + 1 - i\n            ans %= 1000000007\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    index = {arr[j]: j for j in range(n)}\n    if n < 3:\n        print(1)\n    else:\n        low = min(index[0], index[1])\n        high = max(index[0], index[1])\n        perm = 1\n        for k in range(2, n):\n            if index[k] < high and index[k] > low:\n                perm = perm * (high - low + 1 - k) % 1000000007\n            else:\n                low = min(low, index[k])\n                high = max(high, index[k])\n        print(perm)", "mod = 10 ** 9 + 7\nt = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = [0 for i in range(n)]\n    for i in range(n):\n        p[a[i]] = i\n    left = right = p[0]\n    ans = 1\n    for i in range(n - 1):\n        if p[i + 1] < left:\n            left = p[i + 1]\n        elif p[i + 1] > right:\n            right = p[i + 1]\n        else:\n            ans = ans * (right - left - i) % mod\n    print(ans % mod)", "import math\np = 1000000007\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    (*a,) = map(int, input().split())\n    d = {}\n    for i in range(n):\n        d[a[i]] = i\n    l = d[0]\n    r = l\n    ans = 1\n    for i in range(1, n):\n        v = d[i]\n        if l < v < r:\n            ans = ans * (r - l - i + 1) % p\n        else:\n            l = min(l, v)\n            r = max(r, v)\n    print(ans)", "mod = 10 ** 9 + 7\n\ndef solve(arr, n):\n    if n == 1 or n == 2:\n        return 1\n    d = dict()\n    for i in range(n):\n        d[arr[i]] = i\n        if arr[i] == 0:\n            temp1 = i\n        if arr[i] == 1:\n            temp2 = i\n    if temp1 > temp2:\n        (temp1, temp2) = (temp2, temp1)\n    res = 1\n    l = temp2 - temp1 + 1\n    x = 2\n    for i in range(2, n):\n        if d[i] < temp1:\n            x += 1\n            temp1 = d[i]\n        elif d[i] > temp2:\n            x += 1\n            temp2 = d[i]\n        else:\n            res = res * (l - x) % mod\n            x += 1\n        l = temp2 - temp1 + 1\n    return res\nt = int(input())\nwhile t:\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    print(solve(arr, n))\n    t -= 1", "def miis():\n    return map(int, input().split())\nmod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(miis())\n    pos = [0 for i in range(n)]\n    for i in range(n):\n        pos[a[i]] = i\n    l = pos[0]\n    r = pos[0]\n    ans = 1\n    for i in range(1, n):\n        if pos[i] < l:\n            l = pos[i]\n        elif pos[i] > r:\n            r = pos[i]\n        else:\n            ans *= r - l + 1 - i\n            ans = ans % mod\n    print(ans)", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [0] * n\n    for i in range(n):\n        b[a[i]] = i\n    l = b[0]\n    r = b[0]\n    res = 1\n    for i in range(1, n):\n        if l < b[i] and b[i] < r:\n            res = res * (r - l + 1 - i) % mod\n        l = min(b[i], l)\n        r = max(b[i], r)\n    print(res)", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    s = input().split()\n    for i in range(len(s)):\n        s[i] = int(s[i])\n    index = dict()\n    for i in range(len(s)):\n        index[s[i]] = i\n    if len(s) == 1:\n        print(1)\n    else:\n        left = min(index[0], index[1])\n        right = max(index[0], index[1])\n        result = 1\n        mod = 10 ** 9 + 7\n        for i in range(2, len(s)):\n            ref = index[i]\n            if left < ref and ref < right:\n                result = result * (right - left + 1 - i)\n                result = result % mod\n            elif ref <= left:\n                left = ref\n            else:\n                right = ref\n        print(result)\n    t = t - 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    pos = [0] * n\n    for i in range(n):\n        pos[a[i]] = i\n    l = r = pos[0]\n    res = 1\n    for i in range(1, n):\n        if l < pos[i] < r:\n            res = res * (r - l + 1 - i) % (10 ** 9 + 7)\n        l = min(l, pos[i])\n        r = max(r, pos[i])\n    print(int(res))", "for i in range(int(input())):\n    n = int(input())\n    ind = [0] * n + [0]\n    a = [*map(int, input().split())]\n    for i in range(n):\n        ind[a[i]] = i\n    ans = 1\n    (l, r) = sorted([ind[0], ind[1]])\n    for i in range(2, n):\n        if ind[i] > l and ind[i] < r:\n            ans = ans * (r - l + 1 - i) % int(1000000000.0 + 7)\n        r = max(r, ind[i])\n        l = min(l, ind[i])\n    print(ans)", "M = 10 ** 9 + 7\nfor _ in range(int(input())):\n    n = int(input())\n    a = (*map(int, input().split()),)\n    b = [0] * n\n    for i in range(n):\n        b[a[i]] = i\n    cnt = 1\n    l = r = b[0]\n    for i in range(1, n):\n        p = b[i]\n        if l < p < r:\n            cnt = cnt * (r - l + 1 - i) % M\n        l = min(l, p)\n        r = max(r, p)\n    print(cnt)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 1\n    t = [0 for _ in range(n)]\n    for i in range(n):\n        t[l[i]] = i\n    a = t[0]\n    b = a\n    i = 1\n    for i in range(1, n):\n        if t[i] < a or t[i] > b:\n            (a, b) = (min(a, t[i]), max(b, t[i]))\n        else:\n            ans = (b - a - i + 1) * ans % 1000000007\n    print(ans)", "MOD = 10 ** 9 + 7\nmem = [1]\n\ndef fac(n):\n    while len(mem) < n + 1:\n        mem.append(mem[-1] * len(mem) % MOD)\n    return mem[n]\nfor case in range(int(input())):\n    n = int(input())\n    a = [int(j) for j in input().split()]\n    loc = [0] * n\n    for i in range(n):\n        loc[a[i]] = i\n    num = 1\n    denom = 1\n    moves = 1\n    s = e = loc[0]\n    p = []\n    for i in range(1, n):\n        idx = loc[i]\n        if idx < s:\n            s = idx\n            moves += 1\n        elif idx > e:\n            e = idx\n            moves += 1\n        else:\n            p.append(e - s - moves + 1)\n    d = {}\n    for i in p:\n        d[i] = d.get(i, 0) + 1\n    used = 0\n    for i in sorted(d.keys()):\n        spaces = i - used\n        num = num * fac(spaces) % MOD\n        denom = denom * fac(spaces - d[i]) % MOD\n        used += d[i]\n    print(num * pow(denom, MOD - 2, MOD) % MOD)", "for s in [*open(0)][2::2]:\n    n = len((a := s.split()))\n    i = j = r = 0\n    k = 1\n    for (i, j) in sorted(zip(map(int, a), range(n))):\n        k = k * (j < n or j > r or r - n - i + 1) % (10 ** 9 + 7)\n        n = min(n, j)\n        r = max(r, j)\n    print(k)", "dl = 1000000007\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [0 for _ in range(n)]\n    for i in range(n):\n        b[a[i]] = i\n    l = b[0]\n    r = b[0] + 1\n    mn = 0\n    pr = 0\n    ans = 1\n    cnt = 1\n    while l > 0 or r < n:\n        while mn < n and l <= b[mn] < r:\n            mn += 1\n        for i in range(mn - pr - 1):\n            ans = (r - l - cnt - i) * ans % dl\n        cnt += mn - pr\n        if b[mn] >= r:\n            r = b[mn] + 1\n        else:\n            l = b[mn]\n        pr = mn\n    for i in range(2, n - cnt + 1):\n        ans = i * ans % dl\n    print(ans)", "for s in [*open(0)][2::2]:\n    n = len((a := s.split()))\n    r = 0\n    k = 1\n    for (i, j) in sorted(zip(map(int, a), range(n))):\n        k = k * (j < n or j > r or r - n - i + 1) % (10 ** 9 + 7)\n        n = min(n, j)\n        r = max(r, j)\n    print(k)", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [0] * n\n    for i in range(n):\n        b[a[i]] = i\n    l = r = b[0]\n    ans = 1\n    for i in range(1, n):\n        if l < b[i] < r:\n            ans = ans * (r - l + 1 - i) % mod\n        l = min(l, b[i])\n        r = max(r, b[i])\n    print(ans)", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [0] * n\n    for i in range(n):\n        b[a[i]] = i\n    l = r = b[0]\n    ans = 1\n    for i in range(1, n):\n        if l < b[i] < r:\n            ans = ans * (r - l + 1 - i) % mod\n        l = min(l, b[i])\n        r = max(r, b[i])\n    print(ans)", "for s in [*open(0)][2::2]:\n    r = 0\n    k = 1\n    for (i, j) in sorted(zip(map(int, (a := s.split())), range((n := len(a))))):\n        k = (k, k * (r - n - i + 1) % (10 ** 9 + 7))[n < j < r]\n        n = min(n, j)\n        r = max(r, j)\n    print(k)", "for s in [*open(0)][2::2]:\n    r = 0\n    k = 1\n    for (i, j) in sorted(zip(map(int, (a := s.split())), range((n := len(a))))):\n        k = (k, k * (r - n - i + 1) % (10 ** 9 + 7))[n < j < r]\n        n = min(n, j)\n        r = max(r, j)\n    print(k)", "for s in [*open(0)][2::2]:\n    r = 0\n    k = 1\n    for (i, j) in sorted(zip(map(int, (a := s.split())), range((n := len(a))))):\n        k = (k, k * (r - n - i + 1) % (10 ** 9 + 7))[n < j < r]\n        n = min(n, j)\n        r = max(r, j)\n    print(k)", "for s in [*open(0)][2::2]:\n    r = 0\n    k = 1\n    for (i, j) in sorted(zip(map(int, (a := s.split())), range((n := len(a))))):\n        k = (k, k * (r - n - i + 1) % (10 ** 9 + 7))[n < j < r]\n        n = min(n, j)\n        r = max(r, j)\n    print(k)", "for s in [*open(0)][2::2]:\n    r = 0\n    k = 1\n    for (i, j) in sorted(zip(map(int, (a := s.split())), range((n := len(a))))):\n        k = (k, k * (r - n - i + 1) % (10 ** 9 + 7))[n < j < r]\n        n = min(n, j)\n        r = max(r, j)\n    print(k)", "for s in [*open(0)][2::2]:\n    r = 0\n    k = 1\n    for (i, j) in sorted(zip(map(int, (a := s.split())), range((n := len(a))))):\n        k = (k, k * (r - n - i + 1) % (10 ** 9 + 7))[n < j < r]\n        n = min(n, j)\n        r = max(r, j)\n    print(k)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l1 = [0] * n\n    for i in range(n):\n        l1[l[i]] = i\n    if n == 1:\n        print(1)\n    else:\n        x = min(l1[0], l1[1])\n        y = max(l1[0], l1[1])\n        ans = 1\n        for i in range(2, n):\n            x = min(l1[i - 1], x)\n            y = max(l1[i - 1], y)\n            z = l1[i]\n            if (x - z) * (y - z) < 0:\n                ans *= y - x - i + 1\n            ans %= 10 ** 9 + 7\n        print(ans)", "for s in [*open(0)][2::2]:\n    n = len((a := s.split()))\n    r = 0\n    k = 1\n    for (i, j) in sorted(zip(map(int, a), range(n))):\n        k = k * ((n < j < r) ^ 1 or r - n - i + 1) % (10 ** 9 + 7)\n        n = min(n, j)\n        r = max(r, j)\n    print(k)", "for s in [*open(0)][2::2]:\n    n = len((a := s.split()))\n    r = 0\n    k = 1\n    for (i, j) in sorted(zip(map(int, a), range(n))):\n        k = k * (1 > (n < j < r) or r - n - i + 1) % (10 ** 9 + 7)\n        n = min(n, j)\n        r = max(r, j)\n    print(k)", "for s in [*open(0)][2::2]:\n    r = 0\n    k = 1\n    for (i, j) in sorted(zip(map(int, (a := s.split())), range((n := len(a))))):\n        k = (k, k * (r - n - i + 1) % (10 ** 9 + 7))[n < j < r]\n        n = min(n, j)\n        r = max(r, j)\n    print(k)", "for s in [*open(0)][2::2]:\n    n = len((a := s.split()))\n    r = 0\n    k = 1\n    for (i, j) in sorted(zip(map(int, a), range(n))):\n        k = k * ((n < j < r) ^ 1 or r - n - i + 1) % (10 ** 9 + 7)\n        n = min(n, j)\n        r = max(r, j)\n    print(k)", "for s in [*open(0)][2::2]:\n    r = 0\n    k = 1\n    for (i, j) in sorted(zip(map(int, (a := s.split())), range((n := len(a))))):\n        k = k * (1 > (n < j < r) or r - n - i + 1) % (10 ** 9 + 7)\n        n = min(n, j)\n        r = max(r, j)\n    print(k)", "for s in [*open(0)][2::2]:\n    r = 0\n    k = 1\n    for (i, j) in sorted(zip(map(int, (a := s.split())), range((n := len(a))))):\n        k = k * (1 > (n < j < r) or r - n - i + 1) % (10 ** 9 + 7)\n        n = min(n, j)\n        r = max(r, j)\n    print(k)", "for s in [*open(0)][2::2]:\n    r = 0\n    k = 1\n    for (i, j) in sorted(zip(map(int, (a := s.split())), range((n := len(a))))):\n        k = k * (1 > (n < j < r) or r - n - i + 1) % (10 ** 9 + 7)\n        n = min(n, j)\n        r = max(r, j)\n    print(k)"]