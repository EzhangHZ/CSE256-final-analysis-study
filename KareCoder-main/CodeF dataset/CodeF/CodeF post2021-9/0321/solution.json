["import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    s = input()[:-1]\n    a = s.rfind('1')\n    b = s.find('0')\n    if a == b == -1:\n        print(len(s))\n    elif a == -1:\n        print(b + 1)\n    elif b == -1:\n        print(len(s) - a)\n    else:\n        print(b - a + 1)", "import sys\nsys.stdin.readline()\nfor line in sys.stdin:\n    length = len(line.strip())\n    if length == 1:\n        print(1)\n        continue\n    pos0 = line.find('0')\n    pos1 = line.rfind('1')\n    if pos0 == -1 and pos1 == -1:\n        print(length)\n    elif pos0 == -1 and pos1 != -1:\n        print(length - pos1)\n    elif pos0 != -1 and pos1 == -1:\n        print(pos0 + 1)\n    else:\n        print(pos0 - pos1 + 1)", "for s in [*open(0)][1:]:\n    print(s.find('0') % (len(s) - 1) - max(0, s.rfind('1')) + 1)", "for s in [*open(0)][1:]:\n    print(s.find('0') % (len(s) - 1) - max(0, s.rfind('1')) + 1)", "def num_thieves(s):\n    if s[0] == '0':\n        return 1\n    elif s[-1] == '1':\n        return 1\n    elif s == '?' * len(s):\n        return len(s)\n    elif s.count('1') == 0:\n        total = s.find('0') + 1\n        return total\n    elif s.count('0') == 0:\n        total = len(s) - s.rfind('1')\n        return total\n    else:\n        total = s.find('0') - s.rfind('1') + 1\n        return total\nnum_cases = int(input())\nanswers = []\nfor i in range(0, num_cases):\n    s = str(input())\n    answers.append(num_thieves(s))\nfor ans in answers:\n    print(ans)", "t = int(input())\nout = ''\nfor _ in range(t):\n    info = input()\n    ans = 0\n    if '0' not in info:\n        for i in range(len(info) - 1, -1, -1):\n            ans += 1\n            if info[i] != '?':\n                break\n    else:\n        for i in range(info.index('0'), -1, -1):\n            ans += 1\n            if info[i] == '1':\n                break\n    out += str(ans) + '\\n'\nprint(out)", "for s in [*open(0)][1:]:\n    print(s.find('0') % (len(s) - 1) - max(0, s.rfind('1')) + 1)", "a = int(input())\nb = []\nn = 0\nfor i in range(a):\n    c = list(input())\n    if '0' in c:\n        d = c.index('0')\n        f = c[:d + 1]\n        f.reverse()\n        if '1' in f:\n            d = f.index('1')\n            n = d + 1\n        else:\n            n = d + 1\n    elif '1' in c:\n        c.reverse()\n        d = c.index('1')\n        n = d + 1\n    else:\n        for z in c:\n            n += 1\n    b.append(n)\n    n = 0\nfor i in b:\n    print(i, end=' ')\n    print()", "for s in [*open(0)][1:]:\n    print(s.find('0') % (len(s) - 1) - max(0, s.rfind('1')) + 1)", "for s in [*open(0)][1:]:\n    print(s.find('0') % (len(s) - 1) - max(0, s.rfind('1')) + 1)", "T = int(input())\nq = []\nfor i in range(T):\n    data = input()\n    q.append(data)\n\ndef solve(data):\n    last_1 = 0\n    for (idx, c) in enumerate(data):\n        if c == '1':\n            last_1 = idx\n        elif c == '0':\n            break\n    print(idx - last_1 + 1)\nfor data in q:\n    solve(data)", "for s in [*open(0)][1:]:\n    print(s.find('0') % (len(s) - 1) - max(0, s.rfind('1')) + 1)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    s = input()\n    n = len(s) - 1\n    if n == 1:\n        print(1)\n    elif s.count('?') == n:\n        print(n)\n    elif s.count('1') == 0:\n        if s.count('0') == n:\n            print(1)\n        elif s.count('0') == 1:\n            print(s.find('0') + 1)\n        else:\n            x = 0\n            i = 0\n            while x < 1:\n                if s[i] == '0':\n                    x = x + 1\n                i = i + 1\n            print(i)\n    elif s.count('0') == 0:\n        if s.count('1') == n:\n            print(1)\n        elif s.count('1') == 1:\n            print(n - s.find('1'))\n        else:\n            b = 0\n            for i in range(n):\n                if s[i] == '1':\n                    b = i\n            print(n - b)\n    else:\n        z = None\n        o = 0\n        for i in range(n):\n            if s[i] == '0':\n                if z:\n                    continue\n                else:\n                    z = i\n            elif s[i] == '1':\n                o = i\n        if o < z:\n            print(z - o + 1)\n        elif o == z:\n            print(1)\n        else:\n            c = 0\n            for i in range(o + 1):\n                if s[i] == '0':\n                    c = c + 1\n            if c > 1:\n                print(1)\n            else:\n                print(2)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    s = input().strip()\n    n = len(s)\n    one = 0\n    zero = 0\n    for i in range(n):\n        if s[i] == '1':\n            one = i + 1\n        elif s[i] == '0' and zero == 0:\n            zero = i + 1\n    if zero and one:\n        return abs(zero - one) + 1\n    elif zero:\n        return zero\n    elif one:\n        return n - one + 1\n    return n\nfor _ in range(int(input())):\n    print(solve())", "from bisect import bisect_left, bisect_right\nfrom sys import stdin, setrecursionlimit\nfrom itertools import count, accumulate\nfrom collections import defaultdict, deque, Counter\nfrom functools import reduce, lru_cache\nfrom operator import xor, add\nlines = stdin.readlines()\nlines.reverse()\nsetrecursionlimit(10 ** 8)\n\ndef input():\n    return lines.pop().strip('\\n')\nt = int(input())\nwhile t:\n    s = input()\n\n    def helper():\n        n = len(s)\n        if n == 1:\n            return 1\n        (l, r) = (n - 1, 0)\n        for i in range(n):\n            if s[i] == '0':\n                l = i\n                break\n        for i in range(n - 1, -1, -1):\n            if s[i] == '1':\n                r = i\n                break\n        return abs(l - r) + 1\n    print(helper())\n    t -= 1", "import sys\ninput = lambda : sys.stdin.readline().strip()\na = int(input())\nfor i in range(a):\n    b = input()\n    count = 0\n    for i in b:\n        if i == '?':\n            count += 1\n        elif i == '0':\n            count += 1\n            break\n        elif i == '1':\n            count = 1\n    print(count)", "l1 = []\n\ndef func(s):\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count = 1\n        elif s[i] == '?':\n            count = count + 1\n        else:\n            count = count + 1\n            l1.append(count)\n            return\n    l1.append(count)\n    return\nt = int(input())\nfor i in range(t):\n    s = input()\n    func(s)\nfor i in l1:\n    print(i)", "n = int(input())\nresult = []\nfor i in range(n):\n    aux = input()\n    index_1 = 0\n    index_0 = len(aux)\n    if '1' in aux and '0' in aux:\n        for (i, l) in enumerate(aux):\n            if l == '0':\n                index_0 = i\n                break\n        for (i, l) in enumerate(aux):\n            if l == '1':\n                index_1 = i\n        res = index_0 - index_1 + 1\n    elif '1' in aux and '0' not in aux:\n        for (i, l) in enumerate(aux):\n            if l == '1':\n                index_1 = i\n        index_0 = len(aux)\n        res = index_0 - index_1\n    elif '0' in aux and '1' not in aux:\n        for (i, l) in enumerate(aux):\n            if l == '0':\n                index_0 = i\n                break\n        index_1 = -1\n        res = index_0 - index_1\n    elif '1' not in aux and '0' not in aux:\n        res = len(aux)\n    result.append(res)\nfor res in result:\n    print(res)", "def ans(l):\n    n = len(l)\n    a = 0\n    b = n - 1\n    for i in range(n):\n        j = n - 1 - i\n        if l[j] == '1':\n            a = j\n            break\n    for i in range(n):\n        if l[i] == '0':\n            b = i\n            break\n    return b - a + 1\nn = int(input())\nS = []\nfor i in range(n):\n    l = input()\n    S.append(ans(l))\nfor i in S:\n    print(i)", "def ans(l):\n    n = len(l)\n    a = 0\n    b = n - 1\n    for i in range(n):\n        j = n - 1 - i\n        if l[j] == '1':\n            a = j\n            break\n    for i in range(n):\n        if l[i] == '0':\n            b = i\n            break\n    return b - a + 1\nn = int(input())\nS = []\nfor i in range(n):\n    l = input()\n    S.append(ans(l))\nfor i in S:\n    print(i)", "import sys\ninput = sys.stdin.readline\nfrom math import ceil, floor, gcd\n\ndef inp():\n    return int(input())\n\ndef lis():\n    return list(map(int, input().split()))\n\ndef ma():\n    return map(int, input().split())\n\ndef st():\n    return input().rstrip('\\n')\n\ndef isPrime(n):\n    if n == 1:\n        return 0\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            return 0\n    return 1\nt = inp()\nfor _ in range(t):\n    a = input().rstrip()\n    n = len(a)\n    one = a.count('1')\n    zero = a.count('0')\n    start = -1\n    if one == 0 and zero == 0:\n        print(n)\n        continue\n    if one == 0:\n        ans = 0\n        for i in range(n):\n            ans += 1\n            if a[i] == '0':\n                break\n        print(ans)\n        continue\n    if zero == 0:\n        ans = 0\n        for i in range(n - 1, -1, -1):\n            ans += 1\n            if a[i] == '1':\n                break\n        print(ans)\n        continue\n    start = -1\n    for i in range(n - 1, -1, -1):\n        if a[i] == '1':\n            start = i\n            break\n    end = -1\n    for i in range(n):\n        if a[i] == '0':\n            end = i\n            break\n    if end < start:\n        print(1)\n    else:\n        print(end - start + 1)", "n = int(input())\nl = []\nfor i in range(n):\n    a = input()\n    l.append(a)\nfor i in l:\n    c = 0\n    s = 0\n    if len(i) == 1:\n        print('1')\n    elif i[0] == 0:\n        print('1')\n    else:\n        for j in i:\n            if j == '0':\n                break\n            c = c + 1\n            if j == '1':\n                s = c\n        else:\n            if '1' not in i:\n                print(c)\n            else:\n                print(len(i) - s + 1)\n        if '0' in i and '1' in i:\n            print(i.index('0') - s + 2)\n        if '0' in i and '1' not in i:\n            print(i.index('0') - s + 1)", "n = int(input())\nout = []\nfor i in range(n):\n    s = input()\n    b = 0\n    a = 0\n    (case, case2) = (0, 0)\n    for i in range(len(s)):\n        if s[i] == '1':\n            a = i\n            case2 = 1\n        elif s[i] == '0':\n            b = i\n            case = 1\n            break\n    if case == 0:\n        if case2 == 0:\n            out.append(len(s))\n        else:\n            out.append(len(s) - a)\n        continue\n    out.append(b - a + 1)\nfor i in out:\n    print(i)", "T = int(input())\nfor _ in range(T):\n    s = list(input())\n    if '0' in s:\n        end = s.index('0')\n        ss = s[:end]\n        if '1' in ss:\n            ss.reverse()\n            strt = ss.index('1')\n            print(strt + 2)\n        else:\n            print(end + 1)\n    elif '1' in s:\n        s.reverse()\n        i = s.index('1')\n        print(i + 1)\n    else:\n        print(len(s))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    s = input()\n    if s.find('0') == -1:\n        f0 = len(s) - 1\n    else:\n        f0 = s.index('0')\n    if s.find('1') == -1:\n        l1 = 0\n    else:\n        l1 = s.rindex('1')\n    print(abs(f0 - l1) + 1)", "n = int(input())\nfor p in range(n):\n    a = input()\n    st = 0\n    fin = len(a)\n    if '1' in a:\n        st = len(a) - 1 - a[::-1].find('1')\n    if '0' in a:\n        fin = a.find('0') + 1\n    print(fin - st)", "def res(s):\n    ed = s.rfind('1')\n    nul = s.find('0')\n    if ed == -1 and nul == -1:\n        return len(s)\n    elif ed == -1:\n        return nul + 1\n    elif nul == -1:\n        return len(s) - ed\n    else:\n        return nul - ed + 1\nt = int(input())\nfor _ in range(t):\n    s = input()\n    print(res(s))", "t = int(input())\nfor i in range(t):\n    s = str(input())\n    a = -1\n    n = len(s)\n    b = n\n    x = 0\n    for j in range(n):\n        if s[j] == '1':\n            a = j\n        elif s[j] == '0':\n            b = j\n            break\n    if a > -1 and b < n:\n        x = 2 + (b - a - 1)\n    elif a > -1 and b == n:\n        x = 1 + (b - a - 1)\n    elif a == -1 and b < n:\n        x = 1 + b\n    else:\n        x = n\n    print(x)", "cnt = int(input())\ni = 1\nwhile i <= cnt:\n    s = input().strip()\n    (lastOne, firstZero) = (0, len(s) - 1)\n    for j in range(len(s)):\n        if s[j] == '0':\n            firstZero = j\n            break\n    for k in reversed(range(len(s))):\n        if s[k] == '1':\n            lastOne = k\n            break\n    print(firstZero - lastOne + 1)\n    i += 1", "for _ in range(int(input())):\n    s = input()\n    start = 0\n    stop = None\n    for (idx, c) in enumerate(s):\n        if c == '0':\n            stop = idx\n            break\n        elif c == '1':\n            start = idx\n    if stop is None:\n        ans = len(s) - start\n    else:\n        ans = stop - start + 1\n    print(ans)", "def solve(case: str):\n    last_seen = case.rfind('1')\n    first_missing = case.find('0')\n    if last_seen == -1:\n        last_seen = 0\n    if first_missing == -1:\n        first_missing = len(case) - 1\n    return first_missing - last_seen + 1\nn = int(input())\nfor _ in range(n):\n    case = input()\n    print(solve(case))", "t = int(input())\nfor i in range(t):\n    s = input()\n    l = s.find('0')\n    r = s.rfind('1')\n    if l != -1 and r != -1:\n        print(l - r + 1)\n    elif l == -1 and r != -1:\n        print(len(s) - r)\n    elif l != -1 and r == -1:\n        print(l + 1)\n    else:\n        print(len(s))", "for i in range(int(input())):\n    s = input()\n    n = len(s) - 1\n    zero = s.find('0')\n    one = s.rfind('1')\n    if zero == -1 and one == -1:\n        print(n + 1)\n    elif zero == -1:\n        print(n - one + 1)\n    elif one == -1:\n        print(zero + 1)\n    else:\n        print(zero - one + 1)", "for t in range(int(input())):\n    s = input()\n    n = len(s)\n    if n == 1:\n        print(1)\n        continue\n    l1 = s.rfind('1')\n    l1 = 0 if l1 == -1 else l1\n    f0 = s.find('0')\n    f0 = n if f0 == -1 else f0 + 1\n    print(n - (n - f0) - l1)", "for t in range(int(input())):\n    s = input()\n    l = s.rfind('1')\n    l = 0 if l == -1 else l\n    f = s.find('0')\n    f = len(s) if f == -1 else f + 1\n    print(f - l)", "_ = int(input())\nfor __ in range(_):\n    s = input()\n    out = 0\n    if len(s) == 1:\n        print(1)\n        continue\n    if '0' in s:\n        out = 1\n        for x in range(s.index('0'), -1, -1):\n            if s[x] == '?':\n                out += 1\n            if s[x] == '1':\n                out += 1\n                break\n        print(out)\n        continue\n    else:\n        for x in range(len(s) - 1, -1, -1):\n            if s[x] == '1':\n                out += 1\n                break\n            else:\n                out += 1\n        print(out)", "a = int(input())\nfor i in range(a):\n    b = input()\n    count = 0\n    for i in b:\n        if i == '?':\n            count += 1\n        elif i == '0':\n            count += 1\n            break\n        elif i == '1':\n            count = 1\n    print(count)", "t = int(input())\ns = []\nfor i in range(t):\n    s.append(input())\nfor j in range(t):\n    u = s[j]\n    m = len(u)\n    sum = 0\n    ha_um = False\n    for i in range(m):\n        c = u[i]\n        if c == '1':\n            sum = 0\n            ha_um = True\n        elif c == '?':\n            sum += 1\n        else:\n            sum += 1\n            break\n    if ha_um:\n        sum += 1\n    print(sum)", "t = int(input())\nresult = []\nfor i in range(t):\n    s = input()\n    n = len(s)\n    indiceFirstZero = n - 1\n    indiceLastOne = 0\n    zeroFound = False\n    for j in range(n):\n        if (s[j] == '0') & (zeroFound == False):\n            indiceFirstZero = j\n            zeroFound = True\n        elif s[j] == '1':\n            indiceLastOne = j\n    result.append(len(s[indiceLastOne:indiceFirstZero + 1]))\nfor i in result:\n    print(i)", "addy = int(input())\nfor comding in range(addy):\n    s = input()\n    for j in range(len(s)):\n        if s[j] == '0':\n            break\n    b = s[:j + 1]\n    b = b[::-1]\n    c = 0\n    for x in b:\n        if x == '1':\n            c += 1\n            break\n        c += 1\n    print(c)", "for _ in range(int(input())):\n    s = input()\n    one = -1\n    zero = -1\n    for i in range(len(s)):\n        if s[i] == '1':\n            one = i\n        elif s[i] == '0':\n            zero = i\n            break\n    if one == -1 and zero == -1:\n        print(len(s))\n    elif one == -1:\n        print(zero + 1)\n    elif zero == -1:\n        print(len(s) - one)\n    else:\n        print(zero - one + 1)", "import sys\nLI = lambda : list(map(int, sys.stdin.readline().split()))\nMI = lambda : map(int, sys.stdin.readline().split())\nSI = lambda : sys.stdin.readline().strip('\\n')\nII = lambda : int(sys.stdin.readline())\ntestcases = II()\nfor testcase in range(testcases):\n    s = SI()\n    pos1 = 0\n    pos0 = len(s)\n    for x in range(len(s)):\n        if s[x] == '1':\n            pos1 = x\n        if pos0 == len(s) and s[x] == '0':\n            pos0 = x\n    mod = 1\n    if pos0 == len(s):\n        mod -= 1\n    print(pos0 - pos1 + mod)", "for _ in range(int(input())):\n    s = input()\n    count = 0\n    f = 1\n    if len(s) == 1 or s[0] == '0':\n        print(1)\n    elif s[0] == 1 and len(set(s)) == 1:\n        print(1)\n    elif s[0] == '?' and len(set(s)) == 1:\n        print(len(s))\n    else:\n        b = 0\n        for i in range(len(s)):\n            if s[i] == '1':\n                b = i\n            elif s[i] == '0':\n                count = i - b + 1\n                f = 0\n                break\n        if f:\n            count = len(s) - b\n        print(count)", "t = int(input())\nfor i in range(t):\n    s = input()\n    r = s.rfind('1')\n    l = s.find('0')\n    if r == -1 and l == -1:\n        print(len(s))\n    if r == -1 and l != -1:\n        print(l + 1)\n    if r != -1 and l == -1:\n        print(len(s) - r)\n    if r != -1 and l != -1:\n        print(l - r + 1)", "for _ in range(int(input())):\n    s = input()\n    ans = 0\n    ed = s.count('1')\n    n = s.count('0')\n    if ed == 0:\n        if n == 0:\n            ans += len(s)\n        else:\n            for l in s:\n                if l == '0':\n                    ans += 1\n                    break\n                ans += 1\n    else:\n        f = s.rfind('1')\n        ans += 1\n        f += 1\n        while f < len(s) and s[f] != '1' and (s[f] != '0'):\n            ans += 1\n            f += 1\n        if f < len(s) and s[f] == '0':\n            ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    L = input()\n    a = L.find('0')\n    b = L.rfind('1')\n    if a < 0 and b >= 0:\n        print(len(L) - b)\n    elif b < 0 and a >= 0:\n        print(a + 1)\n    elif a < 0 and b < 0:\n        print(len(L))\n    elif a < b:\n        print(0)\n    elif a == b:\n        print(1)\n    else:\n        print(a - b + 1)", "for j in range(int(input())):\n    k = 1\n    s = input()\n    if s[0] == '0' or s[-1] == '1' or len(s) == 1:\n        print(1)\n        continue\n    zero = s.count('0')\n    one = s.count('1')\n    if one > 0 and zero > 0:\n        print(s.find('0') - s.rfind('1') + 1)\n    elif zero + one == 0:\n        print(len(s))\n    elif one == 0:\n        print(len(s[:s.find('0')]) + 1)\n    else:\n        print(len(s[s.rfind('1'):]))", "for test in range(int(input())):\n    st = input()\n    sst = st[-1::-1]\n    if st[0] == '0' or st[-1] == '1':\n        print(1)\n    else:\n        c = 0\n        k = -1\n        s = 0\n        a = -1\n        for i in range(len(st)):\n            if st[i] == '1':\n                a = i\n        o = st.find('0')\n        if a == -1 and o == -1:\n            print(len(st))\n        elif a == -1 and o >= 0:\n            print(o + 1)\n        elif a >= 0 and o == -1:\n            print(len(st) - a)\n        else:\n            print(o - a + 1)", "for _ in range(int(input())):\n    s = input().strip()\n    one = 0\n    zero = len(s) - 1\n    for i in range(len(s)):\n        if s[i] == '0':\n            zero = i\n            break\n        elif s[i] == '1':\n            one = i\n    print(zero - one + 1)", "for _ in range(int(input())):\n    s = input()\n    one = -1\n    zero = -1\n    for i in range(len(s)):\n        if s[i] == '1':\n            one = i\n        elif s[i] == '0':\n            zero = i\n            break\n    if one == -1 and zero == -1:\n        print(len(s))\n    elif one == -1:\n        print(zero + 1)\n    elif zero == -1:\n        print(len(s) - one)\n    else:\n        print(zero - one + 1)", "for i in range(int(input())):\n    r = input()\n    c = 0\n    for j in r:\n        if j == '1':\n            c = 1\n        elif j == '0':\n            c += 1\n            break\n        elif j == '?':\n            c += 1\n    print(c)", "for _ in range(int(input())):\n    r = list(input())\n    z = len(r) - 1\n    o = 0\n    if '0' in r:\n        z = r.index('0')\n    if '1' in r:\n        r.reverse()\n        o = len(r) - 1 - r.index('1')\n    print(z - o + 1)", "n = int(input())\nfor _ in range(n):\n    l = list(input())\n    if len(l) > 1:\n        if '1' in l and '0' in l:\n            for i in range(len(l) - 1):\n                if l[i] == '1' and l[i + 1] != '1':\n                    c = i\n            print(abs(c - l.index('0')) + 1)\n        elif '1' not in l and '0' in l:\n            print(l.index('0') + 1)\n        elif '1' in l and '0' not in l:\n            for i in range(len(l) - 1):\n                if l[i] == '1' and l[i + 1] != '1':\n                    c = i\n            if l[-1] == '1':\n                print(1)\n            else:\n                print(abs(len(l) - c))\n        else:\n            print(len(l))\n    else:\n        print(1)", "a = int(input())\nfor i in range(a):\n    b = input()\n    count = 0\n    for i in b:\n        if i == '?':\n            count += 1\n        elif i == '0':\n            count += 1\n            break\n        elif i == '1':\n            count = 1\n    print(count)", "x = int(input())\nfor i in range(x):\n    ys = input()\n    if len(ys) == 1:\n        print('1')\n    else:\n        if ys[-1] == '1':\n            print('1')\n            continue\n        elif ys[0] == '0':\n            print('1')\n            continue\n        elif '1' not in ys and '0' not in ys:\n            print(len(ys))\n            continue\n        last_one = ys.rfind('1')\n        first_zero = ys.find('0')\n        if last_one == -1:\n            last_one = 0\n        if first_zero == -1:\n            first_zero = len(ys) - 1\n        print(first_zero - last_one + 1)", "def solution():\n    s = input()\n    l = len(s)\n    zero_pos = s.find('0')\n    one_pos = s.rfind('1')\n    if zero_pos == -1:\n        zero_pos = l - 1\n    if one_pos == -1:\n        one_pos = 0\n    ans = zero_pos - one_pos + 1\n    print(ans)\nt = int(input())\nfor _ in range(t):\n    solution()", "for _ in range(int(input())):\n    s = input()\n    if len(s) == 1:\n        print(1)\n    else:\n        one = s.count('1')\n        zero = s.count('0')\n        notknown = s.count('?')\n        if notknown == len(s):\n            print(len(s))\n        elif one == 0:\n            for i in range(len(s)):\n                if s[i] == '0':\n                    break\n            print(i + 1)\n        elif zero == 0:\n            count = 0\n            for i in range(len(s)):\n                if s[i] == '1':\n                    count = 1\n                else:\n                    count += 1\n            print(count)\n        else:\n            count = 0\n            for i in range(len(s)):\n                if s[i] == '1':\n                    count = 1\n                elif s[i] == '0':\n                    count += 1\n                    break\n                else:\n                    count += 1\n            print(count)", "for t in range(int(input())):\n    s = input()\n    l = s.rfind('1')\n    l = 0 if l == -1 else l\n    f = s.find('0')\n    f = len(s) if f == -1 else f + 1\n    print(f - l)", "t = int(input())\nfor _ in range(t):\n    queue = str(input())\n    last_one_ind = 0\n    first_zero_ind = len(queue) - 1\n    for (ind, res) in enumerate(queue):\n        if res == '1':\n            last_one_ind = ind\n        elif res == '0':\n            first_zero_ind = ind\n            break\n    print(first_zero_ind - last_one_ind + 1)", "t = int(input(''))\nfor z in range(t):\n    s = input('')\n    if '0' not in s:\n        r = len(s) - 1\n    else:\n        r = s.index('0')\n    if '1' not in s:\n        l = 0\n    else:\n        l = s.rindex('1')\n    print(r - l + 1)", "t = int(input(''))\nfor z in range(t):\n    s = input('')\n    if s[0] == '0':\n        print(1)\n    elif s[-1] == '1':\n        print(1)\n    elif '0' in s:\n        b = s.index('0')\n        if '1' in s[:b]:\n            d = s[:b].rindex('1')\n            c = s[d:b].count('?')\n            print(c + 2)\n        else:\n            print(len(s[:b + 1]))\n    elif '1' in s:\n        f = s.rindex('1')\n        print(len(s[f:]))\n    else:\n        print(s.count('?'))", "def solve(s):\n    idx_1 = -1\n    c = 0\n    flag_1 = 0\n    flag_0 = 0\n    for i in range(len(s) - 1, -1, -1):\n        if s[i] == '1':\n            c += 1\n            idx_1 = i\n            flag_1 = 1\n            break\n    for i in range(idx_1 + 1, len(s)):\n        c += 1\n        if s[i] == '0':\n            flag_0 = 1\n            break\n    if not flag_0 and (not flag_1):\n        return len(s)\n    return c\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        s = input()\n        print(solve(s))\nmain()", "for i in range(int(input())):\n    s = input()\n    sus = 0\n    zpos = s.find('0')\n    opos = s[::-1].find('1')\n    if zpos == -1 and opos == -1:\n        sus = len(s)\n    elif zpos == -1 and opos != -1:\n        sus = opos + 1\n    elif zpos != -1 and opos == -1:\n        sus = zpos + 1\n    else:\n        sus = abs(len(s) - opos - zpos - 1) + 1\n    print(sus)", "for i in range(int(input())):\n    s = input()\n    (x, y) = (max(s.rfind('1'), 0), s.find('0') + 1)\n    if y == 0:\n        y = len(s)\n    print(y - x)", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    l = n - 1\n    r = 0\n    for i in range(n):\n        if s[i] == '1':\n            r = i\n        if s[i] == '0':\n            l = i\n            break\n    print(l - r + 1)", "for _ in range(int(input())):\n    s = input()\n    t = s.find('0')\n    print(t - max(s.rfind('1'), 0) + 1 if t != -1 else len(s) - max(s.rfind('1'), 0))", "t = int(input())\nfor _ in range(t):\n    s = input()\n    count = 0\n    for x in s:\n        if x == '?':\n            count += 1\n        elif x == '0':\n            count += 1\n            break\n        elif x == '1':\n            count = 1\n    print(count)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    if len(s) == 1 or s[0] == '0':\n        print(1)\n    else:\n        if '0' in s:\n            s = s[:s.index('0') + 1]\n        for i in range(len(s) - 1, -1, -1):\n            if s[i] == '1':\n                break\n        print(len(s) - i)", "t = int(input())\nfor i in range(t):\n    s = list(input())\n    n = len(s)\n    if n == 1:\n        print(1)\n        continue\n    try:\n        z = s.index('0')\n    except ValueError:\n        z = None\n    if z != None:\n        q = 0\n        i = z - 1\n        while i >= 0:\n            if s[i] == '?':\n                q += 1\n            else:\n                q += 1\n                break\n            i -= 1\n        print(q + 1)\n        continue\n    else:\n        rev_s = s[::-1]\n        try:\n            o = rev_s.index('1')\n        except ValueError:\n            o = None\n        if o != None:\n            q = 0\n            i = o - 1\n            while i >= 0:\n                if rev_s[i] == '?':\n                    q += 1\n                else:\n                    q += 1\n                    break\n                i -= 1\n            print(q + 1)\n            continue\n        else:\n            print(n)\n            continue", "for _ in range(int(input())):\n    s = input()\n    a = s.rfind('1')\n    b = s.find('0')\n    if a == -1 and b == -1:\n        print(len(s))\n    elif a == -1:\n        print(b + 1)\n    elif b == -1:\n        print(len(s) - a)\n    else:\n        print(b - a + 1)", "def count_thiefs(s):\n    if len(s) == 1:\n        return 1\n    idx_0 = s.find('0')\n    if idx_0 == -1:\n        idx_0 = len(s)\n    else:\n        idx_0 += 1\n    idx_1 = max(s.rfind('1') - 1, -1)\n    return idx_0 - idx_1 - 1\nt = int(input())\nfor _ in range(t):\n    s = input().strip()\n    print(count_thiefs(s))", "for _ in range(int(input())):\n    s = input()\n    if s.count('1') == 0:\n        if s.count('0') == 1 and s[-1] == '0' and (len(s) > 1):\n            print(len(s))\n        elif s.count('0') > 0:\n            print(s.index('0') + 1)\n        else:\n            print(len(s))\n    elif s.count('0') == 0:\n        s = s[::-1]\n        print(s.index('1') + 1)\n    else:\n        ze = s.index('0')\n        nw = s[:ze + 1]\n        nw = nw[::-1]\n        print(nw.index('1') + 1)", "for _ in range(int(input())):\n    s = input()\n    nt = 0\n    if len(s) == 1:\n        print(1)\n    elif s[0] == '0':\n        print(1)\n    elif s[-1] == '1':\n        print(1)\n    elif s.count('?') == len(s):\n        print(len(s))\n    elif '?' not in s:\n        print(2)\n    elif '1' in s:\n        if '0' in s:\n            print(s.index('0') - (len(s) - s[::-1].index('1')) + 2)\n        else:\n            print(s[::-1].index('1') + 1)\n    else:\n        print(s.index('0') + 1)", "t = int(input())\nfor _ in range(0, t):\n    s = input()\n    lastoneind = 0\n    onepres = 0\n    zeropres = 0\n    firstzeroind = len(s) - 1\n    for i in range(0, len(s)):\n        if s[i] == '1':\n            onepres = 1\n            lastoneind = i\n        elif s[i] == '0' and zeropres == 0:\n            zeropres = 1\n            firstzeroind = i\n    sus = firstzeroind - lastoneind + 1\n    print(sus)", "t = int(input())\nfor i in range(t):\n    k = 0\n    st = input()\n    if st[0] == '0' or st[-1] == '1':\n        ans = 1\n    else:\n        n1 = st.rfind('1')\n        if n1 > -1:\n            n0 = st.find('0', n1)\n        else:\n            n0 = st.find('0')\n        if n0 == -1 and n1 == -1:\n            ans = len(st)\n        elif n1 == -1:\n            ans = n0 + 1\n        elif n0 == -1:\n            ans = len(st) - n1\n        elif n0 > n1:\n            ans = n0 - n1 + 1\n        else:\n            ans = 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    s = input()\n    n = len(s)\n    count = 0\n    if n == 1 or s[0] == '0' or s[n - 1] == '1':\n        print(1)\n    elif s.count('1') == 0 and s.count('0') == 0:\n        print(n)\n    elif s.count('0') == 0:\n        s = s[::-1]\n        print(s.index('1') + 1)\n    elif s[s.index('0') - 1] == '1':\n        print(2)\n    else:\n        s = s[0:s.index('0')]\n        s = s[::-1]\n        if s.count('1') == 0:\n            print(len(s) + 1)\n        else:\n            print(s.index('1') + 2)", "for _ in range(int(input())):\n    s = input()\n    if s[-1] == '1':\n        print(1)\n        continue\n    if '0' in s:\n        i = s.index('0')\n    else:\n        i = len(s) - 1\n    j = i\n    while j >= 0 and s[j] != '1':\n        j -= 1\n    print(i - max(0, j) + 1)", "for _ in range(int(input())):\n    s = input()\n    if len(s) == 1:\n        print(1)\n    else:\n        if s[0] == '0':\n            print(1)\n            continue\n        (ind0, ind1) = (0, len(s) - 1)\n        for i in range(len(s) - 1, -1, -1):\n            if s[i] == '1':\n                ind0 = i\n                break\n        for (i, val) in enumerate(list(s)):\n            if val == '0':\n                ind1 = i\n                break\n        print(ind1 - ind0 + 1)", "t = int(input())\nfor g in range(t):\n    st = input()\n    l = max(0, st.rfind('1'))\n    r = 0\n    if st.find('0') != -1:\n        r = st.find('0')\n    else:\n        r = len(st) - 1\n    if st[0] == '0' or st[len(st) - 1] == '1':\n        print(1)\n    else:\n        res = 0\n        for i in range(l, r + 1):\n            if st[i] == '?' or (st[i] == '1' and st[i + 1] == '?') or (st[i] == '0' and st[i - 1] == '?'):\n                res += 1\n        if res == 0:\n            print(2)\n        else:\n            print(res)", "for i in range(int(input())):\n    n = input()\n    if len(n) == 1:\n        print(1)\n        continue\n    if '0' not in n and '1' not in n:\n        print(len(n))\n        continue\n    if '0' not in n:\n        print(n[::-1].find('1') + 1)\n        continue\n    first_n = n.find('0')\n    n = n[:first_n + 1]\n    if '1' in n:\n        print(first_n - (len(n) - n[::-1].find('1') - 1) + 1)\n    else:\n        print(len(n))", "for num in range(int(input())):\n    w = input()\n    ch = w.__len__()\n    l = 0\n    r = ch - 1\n    for i in range(ch):\n        if w[i] == '1':\n            l = i\n        elif w[i] == '0' and i < r:\n            r = i\n    print(r - l + 1)", "for inh in range(int(input())):\n    s = input()\n    one = -1\n    zero = -1\n    for i in range(len(s)):\n        if s[i] == '1':\n            one = i\n        elif s[i] == '0':\n            zero = i\n            break\n    if one == -1 and zero == -1:\n        print(len(s))\n    elif one == -1:\n        print(zero + 1)\n    elif zero == -1:\n        print(len(s) - one)\n    else:\n        print(zero - one + 1)", "for _ in range(int(input())):\n    testcase = input()\n    if (len(testcase) == 1) | (testcase[0] == '0'):\n        print('1')\n        continue\n    elif ('1' not in testcase) & ('0' not in testcase):\n        print(len(testcase))\n        continue\n    rightmost_1 = 0\n    leftmost_0 = len(testcase) - 1\n    if '1' in testcase:\n        rightmost_1 = testcase.rindex('1')\n    if '0' in testcase:\n        leftmost_0 = testcase.index('0')\n    if leftmost_0 == rightmost_1:\n        print(1)\n        continue\n    print(leftmost_0 - rightmost_1 + 1)", "def solve(s: str) -> int:\n    if len(s) == 1 or s[0] == '0' or s[-1] == '1':\n        return 1\n    last_known_one = 0\n    first_known_zero = len(s) - 1\n    for i in range(1, len(s) - 1):\n        if s[i] == '0':\n            first_known_zero = i\n            break\n        elif s[i] == '1':\n            last_known_one = i\n    return first_known_zero - last_known_one + 1\nt = int(input())\nfor _ in range(t):\n    print(solve(input()))", "for t in range(int(input())):\n    s = input()\n    n = len(s)\n    l = s.rfind('1')\n    l = 0 if l == -1 else l\n    f = s.find('0')\n    f = n if f == -1 else f + 1\n    print(f - l)", "import math as m\ni = input()\ninp = []\nfor a in range(0, int(i)):\n    inp += [input()]\nfor s in inp:\n    last1 = 0\n    first0 = len(s) - 1\n    pos = 0\n    for c in s:\n        if c == '1':\n            last1 = pos\n        elif c == '0':\n            first0 = min(first0, pos)\n        pos += 1\n    print(first0 - last1 + 1)", "for t in range(int(input())):\n    l = list(input())\n    ans = 0\n    flag = 0\n    for i in l:\n        if i == '0':\n            ans = ans + 1\n            flag = 1\n            print(ans)\n            break\n        elif i == '1':\n            ans = 1\n        else:\n            ans = ans + 1\n    if flag == 0:\n        print(ans)", "t = int(input())\nfor z in range(t):\n    s = input()\n    n = len(s)\n    one = 0\n    zero = 0\n    for i in range(n):\n        if s[i] == '1':\n            one = i + 1\n    for i in range(n):\n        if s[i] == '0':\n            zero = i + 1\n            break\n    if one == 0 and zero == 0:\n        print(n)\n    elif one == 0:\n        print(zero)\n    elif zero == 0:\n        print(n - one + 1)\n    else:\n        print(abs(zero - one) + 1)", "import sys\nimport math\ntest_cases = int(input())\nanswers = []\nfor test in range(test_cases):\n    answers.append(input())\nfor answer in answers:\n    suspects = 1\n    if answer[0] == '0':\n        print(1)\n        continue\n    for i in range(1, len(answer)):\n        prev_char = answer[i - 1]\n        curr_char = answer[i]\n        if (prev_char == '?' or prev_char == '1') and curr_char == '?':\n            suspects += 1\n        elif curr_char == '1':\n            suspects = 1\n        elif curr_char == '0':\n            suspects += 1\n            break\n    print(suspects)", "for test in range(int(input())):\n    sus = 0\n    a = input()\n    if len(a) == 1:\n        print(1)\n    else:\n        a = a[::-1].split('0')\n        if len(a) > 1:\n            sus += 1\n        b = a[-1].split('1')\n        if len(b) > 1:\n            sus += 1\n        sus += len(b[0])\n        print(sus)", "for _ in range(int(input())):\n    s = input()\n    x = len(s) - 1\n    y = 0\n    try:\n        x = s.index('0')\n    except:\n        pass\n    try:\n        y = s[::-1].index('1')\n        y = len(s) - y - 1\n    except:\n        pass\n    print(x - y + 1)", "def resi():\n    a = input()\n    n = len(a)\n    (poc, kraj) = (0, n - 1)\n    for i in reversed(range(n)):\n        if a[i] == '1':\n            poc = i\n            break\n    for i in range(n):\n        if a[i] == '0':\n            kraj = i\n            break\n    print(kraj - poc + 1)\nfor _ in range(int(input())):\n    resi()", "for t in range(int(input())):\n    s = input()\n    if s[0] == '0' or s[-1] == '1':\n        print(1)\n        continue\n    c1 = s.count('1')\n    c0 = s.count('0')\n    if c1 == 0 and c0 == 0:\n        print(len(s))\n    elif c1 != 0 and c0 != 0:\n        r1 = 0\n        r0 = 0\n        for i in range(len(s)):\n            if s[i] == '1':\n                r1 = i\n            if s[i] == '0' and r0 == 0:\n                r0 = i\n        print(r0 - r1 + 1)\n        continue\n    elif c1 == 0 and c0 != 0:\n        print(s.index('0') + 1)\n    elif c1 != 0 and c0 == 0:\n        r = 0\n        n = len(s)\n        for i in range(n):\n            if s[i] == '1':\n                r = i\n        print(n - r)", "for t in range(int(input())):\n    s = input()\n    n = len(s)\n    c0 = n - 1\n    c1 = 0\n    n = len(s)\n    for i in range(n):\n        if s[i] == '1':\n            c1 = i\n        elif s[i] == '0' and c0 == n - 1:\n            c0 = i\n    print(c0 - c1 + 1)", "t = int(input())\nfor i in range(t):\n    s = input()\n    if len(s) == 1:\n        print(1)\n    elif s.count('?') == len(s):\n        print(len(s))\n    elif s.count('0') == len(s) or s.count('1') == len(s):\n        print(1)\n    elif s.count('0') == 0 and s.count('1') >= 1:\n        print(abs(s.rfind('1') - (len(s) - 1)) + 1)\n    elif s.count('0') >= 1 and s.count('1') == 0:\n        print(s.find('0') + 1)\n    elif s.count('1') >= 1 and s.count('0') >= 1:\n        print(abs(s.rfind('1') - (s.find('0') + 1)))", "def solve():\n    s = input()\n    n = len(s)\n    for i in range(n):\n        if s[i] == '0':\n            break\n    for j in reversed(range(n)):\n        if s[j] == '1':\n            break\n    print(i - j + 1)\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        solve()\n    return\nmain()", "t = int(input())\nfor _ in range(t):\n    s = input()\n    if '0' in s:\n        s = s[:s.index('0') + 1]\n    for i in range(len(s) - 1, -1, -1):\n        if s[i] == '1':\n            break\n    print(len(s) - i)", "import math\nfor _ in range(int(input())):\n    s = input()\n    total = 0\n    check = False\n    count1 = s.count('1')\n    for i in s:\n        if check:\n            if i == '?':\n                total += 1\n            else:\n                total += 1\n                break\n        else:\n            if i == '1':\n                count1 -= 1\n            if count1 == 0:\n                if i == '?':\n                    total += 1\n                elif i == '0':\n                    total += 1\n                    break\n                else:\n                    total += 1\n                    check = True\n    print(total)"]