["import sys\ninput = sys.stdin.readline\n\ndef main():\n    (N, K) = map(int, input().split())\n    A = set(map(int, input().split()))\n    for a in A:\n        if K + a in A:\n            return print('YES')\n    print('NO')\nT = int(input())\nfor _ in range(T):\n    main()", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    m = set(map(int, input().split()))\n    for j in m:\n        if j + k in m:\n            print('YES')\n            break\n    else:\n        print('NO')", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    m = set(map(int, input().split()))\n    for j in m:\n        if j + k in m:\n            print('YES')\n            break\n    else:\n        print('NO')", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    m = set(l)\n    c = 0\n    for j in m:\n        if j + k in m:\n            print('YES')\n            c += 1\n            break\n    if c == 0:\n        print('NO')", "def solve():\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    s = set(arr)\n    for i in range(n):\n        if arr[i] - k in s:\n            print('YES')\n            return\n    print('NO')\ntst = int(input())\nfor i in range(tst):\n    solve()", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split(' '))\n    a = set(map(int, input().split(' ', n)))\n    bol = 'NO'\n    for x in a:\n        if x - k in a:\n            bol = 'YES'\n            break\n    print(bol)", "import math as m\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    s = set(lis)\n    for i in lis:\n        if i + b in s:\n            print('YES')\n            break\n    else:\n        print('NO')", "def solve():\n    (n, k) = map(int, input().split())\n    a = set(map(int, input().split()))\n    for i in a:\n        if k + i in a:\n            print('YES')\n            return\n    print('NO')\nfor _ in range(int(input())):\n    solve()", "def main():\n    t = int(input())\n    for _ in range(t):\n        (n, k) = input().split(' ')\n        k = int(k)\n        arr = [int(c) for c in input().split(' ')]\n        if k == 0:\n            cnt = set()\n            flag = True\n            for num in arr:\n                if num in cnt:\n                    print('YES')\n                    flag = False\n            if flag:\n                print('NO')\n            continue\n        brr = set(arr)\n        flag = True\n        for num in arr:\n            if num - k in brr:\n                print('YES')\n                flag = False\n                break\n        if flag:\n            print('NO')\nmain()", "def solve():\n    (n, k) = map(int, input().split())\n    a = set(map(int, input().split()))\n    for i in a:\n        if k + i in a:\n            print('YES')\n            return\n    print('NO')\nfor _ in range(int(input())):\n    solve()", "def subtract(a, k):\n    for i in a:\n        if i + k in a or i - k in a:\n            return 1\n    return 0\nT = int(input())\nfor i in range(T):\n    (n, k) = list(map(int, input().split()))\n    a = set(map(int, input().split()))\n    result = subtract(a, k)\n    if result == 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = set([*map(int, input().split())])\n    for i in a:\n        if i - k in a:\n            print('YES')\n            break\n    else:\n        print('NO')", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    m = set(map(int, input().split()))\n    for j in m:\n        if j + k in m:\n            print('YES')\n            break\n    else:\n        print('NO')", "from collections import defaultdict, deque\nimport sys\ninput = lambda : sys.stdin.readline().strip()\ntest_cases = int(input())\nwhile test_cases > 0:\n    test_cases -= 1\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = set(a)\n    count = 'NO'\n    for i in s:\n        if k + i in s:\n            count += 'YES'\n            break\n    print('YES' if 'YES' in count else 'NO')", "from collections import defaultdict, deque\nimport sys\ninput = lambda : sys.stdin.readline().strip()\ntest_cases = int(input())\nwhile test_cases > 0:\n    test_cases -= 1\n    (n, k) = map(int, input().split())\n    a = set(map(int, input().split()))\n    count = 'NO'\n    for i in a:\n        if k + i in a:\n            count += 'YES'\n            break\n    print('YES' if 'YES' in count else 'NO')", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    se = set(l)\n    flag = 0\n    for i in se:\n        if i - k in se:\n            print('YES')\n            flag = 1\n            break\n    if flag == 0:\n        print('NO')", "a = int(input())\nfor i in range(a):\n    (b, c) = list(map(int, input().split()))\n    d = set(map(int, input().split()))\n    for i in d:\n        if i + c in d:\n            print('YES')\n            break\n    else:\n        print('NO')", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    m = set(map(int, input().split()))\n    for j in m:\n        if j + k in m:\n            print('YES')\n            break\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    x = set(l)\n    print('YES' if any((k + i in x for i in l)) else 'NO')", "I = lambda : map(int, input().split())\nfor _ in range(int(input())):\n    (n, k) = I()\n    l = [*I()]\n    x = set(l)\n    print('YNEOS'[1 - any((k + i in x for i in l))::2])", "I = lambda : map(int, input().split())\nfor _ in range(int(input())):\n    (n, k) = I()\n    l = [*I()]\n    x = set(l)\n    print('YNEOS'[1 - any((k + i in x for i in l))::2])", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    l = set(map(int, input().split()))\n    ans = 'NO'\n    for i in l:\n        if i + k in l:\n            ans = 'YES'\n            break\n    print(ans)", "I = lambda : map(int, input().split())\nfor _ in range(int(input())):\n    (n, k) = I()\n    l = [*I()]\n    x = set(l)\n    print('YNEOS'[1 - any((k + i in x for i in l))::2])", "I = lambda : map(int, input().split())\nfor _ in range(int(input())):\n    (n, k) = I()\n    l = [*I()]\n    x = set(l)\n    print('YNEOS'[1 - any((k + i in x for i in l))::2])", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = set(map(int, input().split()))\n    count = 0\n    for j in arr:\n        if j + k in arr:\n            print('YES')\n            count = -1\n            break\n    if count == 0:\n        print('NO')", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    m = set(map(int, input().split()))\n    for j in m:\n        if j + k in m:\n            print('YES')\n            break\n    else:\n        print('NO')", "import math as m\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    s = set(lis)\n    f = 0\n    for i in lis:\n        if i + b in s:\n            f = 1\n            break\n    print('YES' if f else 'NO')", "import math\nimport collections\nimport itertools\nimport functools\n\ndef fun(t):\n    (n, k) = map(int, input().split(' '))\n    arr = list(map(int, input().split(' ')))\n    s = set(arr)\n    for i in range(n):\n        if arr[i] - k in s:\n            print('YES')\n            return\n    print('NO')\nfor tc in range(int(input())):\n    fun(tc)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = set(map(int, input().split()))\n    for i in lst:\n        if i + k in lst:\n            print('YES')\n            break\n    else:\n        print('NO')", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    m = set(map(int, input().split()))\n    for j in m:\n        if j + k in m:\n            print('YES')\n            break\n    else:\n        print('NO')", "inputs = []\nfor _ in range(int(input())):\n    inputs.append([[int(i) for i in input().split()], [int(i) for i in input().split()]])\n\ndef main(n, k, a):\n    a = set(a)\n    for i in a:\n        if k + i in a:\n            return 'YES'\n    return 'NO'\nfor ((n, k), a) in inputs:\n    print(main(n, k, a))", "for _ in range(int(input())):\n    res = False\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    li = set(l)\n    for i in li:\n        if i - k in li:\n            res = True\n            break\n    if res:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor j in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    flag = False\n    s = set(a)\n    for j in range(n):\n        v = a[j] - k\n        if v in s:\n            flag = True\n            break\n    if flag == True:\n        print('YES')\n    else:\n        print('NO')", "def fun():\n    (n, k) = list(map(int, input().split()))\n    li = list(map(int, input().split()))\n    s = set(li)\n    for i in li:\n        if i - k in s:\n            print('YES')\n            return\n    print('NO')\nt = int(input())\nfor _ in range(t):\n    fun()", "test_cases = int(input())\nwhile test_cases > 0:\n    test_cases -= 1\n    (n, k) = map(int, input().split())\n    a = set(map(int, input().split()))\n    count = 'NO'\n    for i in a:\n        if k + i in a:\n            count += 'YES'\n            break\n    print('YES' if 'YES' in count else 'NO')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a = set(a)\n    for i in a:\n        if i - k in a:\n            print('YES')\n            break\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\nT = int(input())\nfor i in range(T):\n    (N, K) = map(int, input().split())\n    A = set(map(int, input().split()))\n    bool_ = False\n    for a in A:\n        if K + a in A:\n            bool_ = True\n    if bool_:\n        print('YES')\n    else:\n        print('NO')", "def solve():\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    d = {}\n    for i in a:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    flag = 0\n    for i in a:\n        if i - k in d:\n            flag = 1\n    if flag == 1:\n        print('YES')\n    else:\n        print('NO')\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    f = 1\n    res = {int(i): 1 for i in input().split()}\n    for i in res.keys():\n        val = i\n        if res.get(val - k, 0):\n            print('YES')\n            f = 0\n            break\n    if f:\n        print('NO')", "x = int(input())\nfor i in range(x):\n    (a, k) = map(int, input().split())\n    c = set([int(i) for i in input().split()])\n    t = 0\n    for j in c:\n        if j - k in c:\n            t = 1\n            print('YES')\n            break\n    if t == 0:\n        print('NO')", "test = int(input())\nfor t in range(test):\n    (n, k) = list(map(int, input().split()))\n    nums = list(map(int, input().split()))\n    s = set(nums)\n    ans = 'NO'\n    for num in nums:\n        if num + k in s:\n            ans = 'YES'\n            break\n    print(ans)", "from collections import Counter, defaultdict, deque, namedtuple\nfrom functools import lru_cache\nimport re\nfrom typing import List, Dict\nimport bisect as b\nimport heapq as h\nimport math as m\n\ndef inti():\n    return int(input())\n\ndef ints():\n    return [int(x) for x in input().split()]\n\ndef main_tc():\n    (n, k) = ints()\n    numbers = ints()\n    s = set(numbers)\n    for num in numbers:\n        if num + k in s:\n            print('YES')\n            return\n    print('NO')\n\ndef main():\n    tc = inti()\n    for _ in range(tc):\n        main_tc()\nmain()", "t = int(input())\nfor _ in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    s = set(a)\n    res = False\n    for t in a:\n        if k + t in s:\n            res = True\n            break\n    if res:\n        print('YES')\n    else:\n        print('NO')", "import math, bisect, heapq, random, sys, itertools\ninput = sys.stdin.readline\n\ndef gprint(t, ans):\n    print(f'Case #{t + 1}:', ans)\nints = lambda : list(map(int, input().split()))\nalpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\np2 = [1]\np = 10 ** 9 + 7\nANS = []\nfor t in range(int(input())):\n    (n, k) = ints()\n    a = ints()\n    a = set(a)\n    x = 0\n    for i in a:\n        if k + i in a:\n            x = 1\n            break\n    if x:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        d[i] = 1\n    flag = 0\n    for i in l:\n        if k + i in d:\n            flag = 1\n            break\n    if flag == 1:\n        print('YES')\n    else:\n        print('NO')", "def solution(n, k, nums):\n    histo = {}\n    for i in nums:\n        if i not in histo:\n            histo[i] = True\n    for i in nums:\n        if i - k in histo:\n            print('YES')\n            return\n    print('NO')\n    return\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    nums = list(map(int, input().split()))\n    solution(n, k, nums)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    f = 0\n    s = set(l)\n    for i in s:\n        if i - m in s:\n            f = 1\n            print('YES')\n            break\n    if f == 0:\n        print('NO')", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a1 = a.copy()\n    a1 = set(a1)\n    flag = 0\n    for i in range(n):\n        if a[i] - k in a1:\n            flag = 1\n    if flag == 1:\n        print('YES')\n    else:\n        print('NO')", "def solve():\n    (n, k) = [int(x) for x in input().split()]\n    a = set([int(x) for x in input().split()])\n    for num in a:\n        if num - k in a:\n            return 'YES'\n    return 'NO'\nfor tc in range(int(input())):\n    print(solve())", "def solve():\n    check = set(arr)\n    for i in range(n):\n        if arr[i] + k in check:\n            return 'YES'\n    return 'NO'\nT = int(input())\nfor t in range(T):\n    (n, k) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    ans = solve()\n    print(ans)", "def f(S, k):\n    for s in S:\n        if s + k in S:\n            return 'YES'\n    return 'NO'\nt = int(input())\nfor case in range(t):\n    (n, k) = [int(num) for num in input().split()]\n    S = set([int(num) for num in input().split()])\n    print(f(S, k))", "def Subtract(t):\n    for i in range(t):\n        N_and_K = list(map(int, input().split()))\n        (n, k) = (N_and_K[0], N_and_K[1])\n        INPUT = list(map(int, input().split()))\n        Set = set(INPUT)\n        p = 0\n        for i in range(n):\n            if INPUT[i] + k in Set:\n                print('YES')\n                p = 1\n                break\n        if p == 0:\n            print('NO')\nt = int(input())\nSubtract(t)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    s = set(arr)\n    f = False\n    for el in arr:\n        if el - k in s:\n            f = True\n    if f:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    z = {}\n    t = 0\n    for i in a:\n        z[i] = 1\n    for i in a:\n        if -(k - i) in z:\n            t = 1\n            break\n    if t == 1:\n        print('YES')\n    else:\n        print('NO')", "def solve():\n    (n, k) = input().split(' ')\n    arr = set([int(i) for i in input().split(' ')])\n    for elem in arr:\n        if elem + int(k) in arr:\n            print('YES')\n            return\n    print('NO')\nt = int(input())\nfor i in range(t):\n    solve()", "def main():\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    s = sum(arr)\n    ars = set()\n    for z in arr:\n        ars.add(k + z)\n    arr = set(arr)\n    for z in ars:\n        if z in arr:\n            return 'YES'\n    return 'NO'\nfor _ in range(int(input())):\n    print(main())", "import sys\nimport math\nfrom sys import stdin, stdout\n\ndef get_ints_in_variables():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_int():\n    return int(input())\n\ndef get_ints_in_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_list_of_list(n):\n    return [list(map(int, sys.stdin.readline().strip().split())) for _ in range(n)]\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef main():\n    for t in range(get_int()):\n        (n, k) = get_ints_in_variables()\n        arr = get_ints_in_list()\n        mp = {}\n        for i in range(0, n):\n            if arr[i] not in mp:\n                mp[arr[i]] = True\n        flag = False\n        for i in range(0, n):\n            if arr[i] - k in mp:\n                flag = True\n                break\n        if flag:\n            print('YES')\n        else:\n            print('NO')\nmain()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = set(a)\n    f = 0\n    for i in b:\n        if i + k in b:\n            f = 1\n            break\n    if f:\n        print('YES')\n    else:\n        print('NO')", "import sys\nimport math\nimport bisect\nfrom sys import stdin, stdout\nfrom math import gcd, floor, sqrt, log\nfrom collections import defaultdict as dd\nfrom bisect import bisect_left as bl, bisect_right as br\nimport heapq\nsys.setrecursionlimit(100000000)\ninp = lambda : int(input())\nstrng = lambda : input().strip()\njn = lambda x, l: x.join(map(str, l))\nstrl = lambda : list(input().strip())\nmul = lambda : map(int, input().strip().split())\nmulf = lambda : map(float, input().strip().split())\nseq = lambda : list(map(int, input().strip().split()))\nceil = lambda x: int(x) if x == int(x) else int(x) + 1\nceildiv = lambda x, d: x // d if x % d == 0 else x // d + 1\nflush = lambda : stdout.flush()\nstdstr = lambda : stdin.readline()\nstdint = lambda : int(stdin.readline())\nstdpr = lambda x: stdout.write(str(x))\nmod = 998244353\n\ndef func():\n    (n, k) = mul()\n    l = seq()\n    l = set(l)\n    ns = set()\n    for i in l:\n        ns.add(i - k)\n    if l & ns:\n        return 'YES'\n    return 'NO'\nt = inp()\nfor i in range(t):\n    print(func())", "from collections import defaultdict\nfrom sys import stdin\ninput = stdin.readline\n\ndef get_string():\n    return stdin.readline().strip()\n\ndef main():\n    for _ in range(int(input())):\n        (n, k) = map(int, input().split())\n        nums = list(map(int, input().split()))\n        d = defaultdict(int)\n        for i in nums:\n            d[i] += 1\n        flag = 0\n        for (x, y) in d.items():\n            diff = x - k\n            if diff == x and y > 1:\n                print('YES')\n                flag = 1\n                break\n            elif diff in d:\n                print('YES')\n                flag = 1\n                break\n        if flag == 0:\n            print('NO')\nmain()", "import sys\nimport math\ndata = sys.stdin.readlines()\nnumCases = int(data[0])\ncases = []\nfor each in range(1, numCases + 1):\n    line = data[each * 2 - 1].replace('\\n', '').split(' ')\n    k = int(line[1])\n    line = data[each * 2].replace('\\n', '')\n    array = [int(x) for x in line.split(' ')]\n    set_ = set(array)\n    for i in set_:\n        if i + k in set_:\n            print('YES')\n            break\n    else:\n        print('NO')", "def sol(arr, n, k):\n    di = {}\n    for i in arr:\n        di[i] = 1\n    for i in arr:\n        if di.get(i + k):\n            return 'YES'\n    return 'NO'\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().rstrip().split())\n    arr = list(map(int, input().rstrip().split()))\n    print(sol(arr, n, k))", "def canget(nums, k):\n    numset = set()\n    for num in nums:\n        if num + k in numset or num - k in numset:\n            return True\n        numset.add(num)\n    return False\nt = int(input())\nfor _ in range(t):\n    (_, k) = [int(x) for x in input().split()]\n    nums = [int(x) for x in input().split()]\n    if canget(nums, k):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (n, k) = [int(v) for v in input().split()]\n    w = [int(v) for v in input().split()]\n    q = set(w)\n    for j in w:\n        if j - k in q:\n            print('YES')\n            break\n    else:\n        print('NO')", "I = lambda : map(int, input().split())\nfor _ in range(int(input())):\n    (n, k) = I()\n    l = [*I()]\n    x = set(l)\n    print('YNEOS'[1 - any((k + i in x for i in l))::2])", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a = set(a)\n    for i in a:\n        if i - k in a:\n            print('YES')\n            break\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [*map(int, input().split())]\n    b = {}\n    for i in a:\n        b[i] = 1\n    for i in a:\n        if b.get(i - k):\n            print('YES')\n            break\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    s = set(a)\n    key = 0\n    for i in range(n):\n        if a[i] - k in s:\n            key = 1\n            break\n    if key == 0:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    items = {x: 1 for x in a}\n    possible = False\n    for (i, item) in enumerate(a):\n        if items.get(item - k):\n            possible = True\n    if possible:\n        print('YES')\n    else:\n        print('NO')", "import math\nimport os\nimport random\nimport re\nimport sys\nfor _ in range(int(input())):\n    (a, b) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    st = set(arr)\n    for i in st:\n        if i + b in st:\n            print('YES')\n            break\n    else:\n        print('NO')", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    arr = [int(a) for a in input().split()]\n    s = set(arr)\n    for i in s:\n        if i + k in s:\n            print('YES')\n            break\n    else:\n        print('NO')\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = set([int(x) for x in input().split()])\n    b = False\n    for item in a:\n        if item + k in a:\n            b = True\n            break\n    if b:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = {}\n    for i in a:\n        b[i] = ''\n    for i in a:\n        if i - k in b:\n            print('YES')\n            break\n    else:\n        print('NO')", "def main():\n    T = int(input())\n    for k in range(T):\n        (n, target) = list(map(int, input().split(' ')))\n        array = list(map(int, input().split(' ')))\n        freq = {}\n        for i in range(n):\n            if freq.get(array[i]) is None:\n                freq[array[i]] = 1\n            else:\n                freq[array[i]] -= 1\n        flag = False\n        for x in array:\n            if freq.get(x - target) is not None:\n                flag = True\n                break\n        if flag:\n            print('YES')\n        else:\n            print('NO')\nmain()", "a = int(input())\nfor b in range(a):\n    (n, k) = list(map(int, input().split()))\n    lst = list(map(int, input().split()))\n    d = {}\n    for element in lst:\n        if element in d:\n            continue\n        d[element] = 0\n    f = False\n    for element in lst:\n        if element + k in d:\n            print('YES')\n            f = True\n            break\n    if not f:\n        print('NO')", "for i in range(int(input())):\n    (a, b) = map(int, input().strip().split())\n    list1 = set(list(map(int, input().strip().split())))\n    for i in list1:\n        if i + b in list1 or i - b in list1:\n            print('YES')\n            break\n    else:\n        print('NO')", "for i in range(int(input())):\n    (a, b) = map(int, input().strip().split())\n    list1 = set(list(map(int, input().strip().split())))\n    for i in list1:\n        if i + b in list1 or i - b in list1:\n            print('YES')\n            break\n    else:\n        print('NO')", "I = lambda : map(int, input().split())\nfor _ in range(int(input())):\n    (n, k) = I()\n    l = [*I()]\n    x = set(l)\n    print('YNEOS'[1 - any((k + i in x for i in l))::2])", "import sys\nimport math\nfor _ in range(int(sys.stdin.readline())):\n    (n, k) = map(int, sys.stdin.readline().split())\n    l = list(map(int, sys.stdin.readline().split()))\n    d = {}\n    for i in range(n):\n        if l[i] not in d:\n            d[l[i]] = 1\n    for x in d:\n        if x - k in d:\n            print('YES')\n            break\n    else:\n        print('NO')", "for T in range(int(input())):\n    (n, k) = map(int, input().split())\n    A = list(map(int, input().split()))\n    d = set(A)\n    valid = True\n    for i in range(n):\n        if A[i] + k in d:\n            print('YES')\n            valid = False\n            break\n    if valid:\n        print('NO')", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    mp = {}\n    ans = 'NO'\n    for ele in a:\n        if ele in mp:\n            mp[ele] += 1\n        else:\n            mp[ele] = 1\n    for ele in a:\n        temp = ele - k\n        if temp in mp:\n            ans = 'YES'\n            break\n    print(ans)", "from collections import defaultdict as dd\n\ndef AbhiSolveKiya(n, k, a):\n    d = dd(int)\n    for i in a:\n        d[i] = 1\n    for i in a:\n        if d[k + i] == 1:\n            return 'YES'\n    return 'NO'\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(AbhiSolveKiya(n, k, a))", "t = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split(' ')))\n    a = map(int, input().split(' '))\n    vals = set()\n    for item in a:\n        if item + k in vals or item - k in vals:\n            print('YES')\n            break\n        vals.add(item)\n    else:\n        print('NO')", "T = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = {}\n    r = 'NO'\n    for i in l:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    result = 0\n    for i in l:\n        if i - k in d:\n            result = 1\n    if result:\n        r = 'YES'\n    print(r)", "from collections import deque, Counter\nimport math\nT = int(input())\nwhile T:\n    T -= 1\n    (n, k) = map(int, input().split())\n    A = list(map(int, input().split()))\n    count = Counter(A)\n    flag = False\n    for num in count:\n        if num + k in count:\n            flag = True\n            break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "import sys\nimport math\nfrom sys import stdin, stdout\n\ndef get_ints_in_variables():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_int():\n    return int(input())\n\ndef get_ints_in_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_list_of_list(n):\n    return [list(map(int, sys.stdin.readline().strip().split())) for _ in range(n)]\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef main():\n    for t in range(get_int()):\n        (n, k) = get_ints_in_variables()\n        arr = get_ints_in_list()\n        mp = {}\n        for i in range(0, n):\n            if arr[i] not in mp:\n                mp[arr[i]] = True\n        flag = False\n        for i in range(0, n):\n            if arr[i] + k in mp:\n                flag = True\n            if arr[i] - k in mp:\n                flag = True\n        if flag:\n            print('YES')\n        else:\n            print('NO')\nmain()", "import sys\nimport math\nfrom sys import stdin, stdout\n\ndef get_ints_in_variables():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_int():\n    return int(input())\n\ndef get_ints_in_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_list_of_list(n):\n    return [list(map(int, sys.stdin.readline().strip().split())) for _ in range(n)]\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef main():\n    for t in range(get_int()):\n        (n, k) = get_ints_in_variables()\n        arr = get_ints_in_list()\n        mp = {}\n        for i in range(0, n):\n            if arr[i] not in mp:\n                mp[arr[i]] = True\n        flag = False\n        for i in range(0, n):\n            if arr[i] + k in mp:\n                flag = True\n                break\n            if arr[i] - k in mp:\n                flag = True\n                break\n        if flag:\n            print('YES')\n        else:\n            print('NO')\nmain()"]