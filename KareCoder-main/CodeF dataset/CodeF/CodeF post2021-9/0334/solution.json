["import sys, math, cmath, time\nfrom bisect import bisect_left\nstart_time = time.time()\n\ndef sod(n):\n    n = str(n)\n    s = 0\n    for i in n:\n        s = s + int(i)\n    return s\n\ndef solve(t):\n    n = inp()\n    s = ''\n    s1 = ''\n    c = 1\n    while n > 0:\n        d = n % 10\n        if d % 2 == 0:\n            s = str(d // 2) + s\n            s1 = str(d // 2) + s1\n        elif c == 1:\n            s = str(d // 2) + s\n            s1 = str(d // 2 + 1) + s1\n            c -= 1\n        else:\n            s = str(d // 2 + 1) + s\n            s1 = str(d // 2) + s1\n            c += 1\n        n = n // 10\n    print(int(s), int(s1))\n\ndef main():\n    testcases = 1\n    testcases = inp()\n    for each_testcase in range(testcases):\n        solve(each_testcase)\n\ndef inp():\n    return int(input())\n\ndef inps():\n    return input().split()\nONLINE_JUDGE = __debug__\nif ONLINE_JUDGE:\n    input = sys.stdin.readline\nmain()", "for n in [*open(0)][1:]:\n    r = ''\n    f = 0\n    for x in map(int, n[:-1]):\n        y = x + f >> 1\n        r += f'{y}{x - y}'\n        f ^= x & 1\n    print(int(r[::2]), int(r[1::2]))", "for n in [*open(0)][1:]:\n    r = ''\n    f = 0\n    for x in map(int, n[:-1]):\n        y = x + f >> 1\n        r += f'{y}{x - y}'\n        f ^= x & 1\n    print(int(r[::2]), int(r[1::2]))", "for n in [*open(0)][1:]:\n    r = ''\n    f = 0\n    for x in map(int, n[:-1]):\n        r += f'{x + f >> 1}{x + 1 - f >> 1}'\n        f ^= x & 1\n    print(int(r[::2]), int(r[1::2]))", "for n in [*open(0)][1:]:\n    r = ''\n    f = 0\n    for x in map(int, n[:-1]):\n        y = x + f >> 1\n        r += f'{y}{x - y}'\n        f ^= x & 1\n    print(int(r[::2]), int(r[1::2]))", "for n in [*open(0)][1:]:\n    r = ''\n    f = 0\n    for x in map(int, n[:-1]):\n        r += f'{x + f >> 1}{x + 1 - f >> 1}'\n        f ^= x & 1\n    print(int(r[::2]), int(r[1::2]))", "for n in [*open(0)][1:]:\n    r = ''\n    f = 0\n    for x in map(int, n[:-1]):\n        y = x + f >> 1\n        r += f'{y}{x - y}'\n        f ^= x & 1\n    print(int(r[::2]), int(r[1::2]))", "for n in [*open(0)][1:]:\n    r = ''\n    f = 0\n    for x in map(int, n[:-1]):\n        y = x + f >> 1\n        r += f'{y}{x - y}'\n        f ^= x & 1\n    print(int(r[::2]), int(r[1::2]))", "for n in [*open(0)][1:]:\n    r = ''\n    f = 0\n    for x in map(int, n[:-1]):\n        y = x + f >> 1\n        r += f'{y}{x - y}'\n        f ^= x & 1\n    print(int(r[::2]), int(r[1::2]))", "for n in [*open(0)][1:]:\n    r = ''\n    f = 0\n    for x in map(int, n[:-1]):\n        y = x + f >> 1\n        r += f'{y}{x - y}'\n        f ^= x & 1\n    print(int(r[::2]), int(r[1::2]))", "for n in [*open(0)][1:]:\n    r = ''\n    f = 0\n    for x in map(int, n[:-1]):\n        r += f'{x + f >> 1}{x + 1 - f >> 1}'\n        f ^= x & 1\n    print(int(r[::2]), int(r[1::2]))", "for n in [*open(0)][1:]:\n    r = ''\n    f = 0\n    for x in map(int, n[:-1]):\n        r += f'{x + f >> 1}{x + 1 - f >> 1}'\n        f ^= x & 1\n    print(int(r[::2]), int(r[1::2]))", "for _ in range(int(input())):\n    (a, b) = (0, 0)\n    for c in input():\n        v = ord(c) - ord('0')\n        a = a * 10 + v // 2\n        b = b * 10 + (v + 1) // 2\n        if v % 2:\n            (a, b) = (b, a)\n    print('{} {}'.format(a, b))", "def digits_sum(num):\n    val = 1\n    (n1, n2) = (0, 0)\n    bit = 0\n    while num:\n        k = num % 10\n        if k % 2 == 0:\n            n1 += k // 2 * val\n            n2 += k // 2 * val\n        elif bit:\n            n2 += (k // 2 + 1) * val\n            n1 += k // 2 * val\n            bit = 0\n        else:\n            n1 += (k // 2 + 1) * val\n            n2 += k // 2 * val\n            bit = 1\n        val *= 10\n        num //= 10\n    return (n1, n2)\nfor _ in range(int(input())):\n    n = int(input())\n    (n1, n2) = digits_sum(n)\n    print(n1, n2)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nt = inp()\n\ndef solve():\n    k = inp()\n    digits = []\n    while k > 0:\n        digits.append(k % 10)\n        k = k // 10\n    digits = list(reversed(digits))\n\n    def num(a):\n        r = 0\n        while len(a):\n            r = r * 10 + a[0]\n            a.pop(0)\n        return r\n    (num_a, num_b, dis) = ([], [], 0)\n    for (_, v) in enumerate(digits):\n        if v % 2 == 0:\n            num_a.append(v // 2)\n            num_b.append(v // 2)\n        elif dis == 1:\n            num_a.append(v // 2 + 1)\n            num_b.append(v // 2)\n            dis = 0\n        else:\n            num_a.append(v // 2)\n            num_b.append(v // 2 + 1)\n            dis = 1\n    return (num(num_a), num(num_b))\nfor i in range(t):\n    (a, b) = solve()\n    print(str(a) + ' ' + str(b))", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = input().strip()\n    (ans1, ans2) = (0, 0)\n    (d1, d2) = (0, 0)\n    for i in range(len(n)):\n        if int(n[i]) % 2:\n            if d1 == d2:\n                d1 += int(n[i]) // 2\n                d2 += int(n[i]) // 2 + 1\n                ans1 = ans1 * 10 + int(n[i]) // 2\n                ans2 = ans2 * 10 + int(n[i]) // 2 + 1\n            elif d1 > d2:\n                d1 += int(n[i]) // 2\n                d2 += int(n[i]) // 2 + 1\n                ans1 = ans1 * 10 + int(n[i]) // 2\n                ans2 = ans2 * 10 + int(n[i]) // 2 + 1\n            elif d2 > d1:\n                d1 += int(n[i]) // 2 + 1\n                d2 += int(n[i]) // 2\n                ans1 = ans1 * 10 + int(n[i]) // 2 + 1\n                ans2 = ans2 * 10 + int(n[i]) // 2\n        else:\n            ans1 = ans1 * 10 + int(n[i]) // 2\n            ans2 = ans2 * 10 + int(n[i]) // 2\n    print(ans1, ans2)\nfor _ in range(int(input().strip())):\n    solve()", "for _ in range(int(input())):\n    n = input()\n    x = 0\n    y = 0\n    curOdd = 1\n    for digit in n:\n        digit = int(digit)\n        if digit & 1:\n            curOdd = 1 - curOdd\n            digit >>= 1\n            x = 10 * x + digit + curOdd\n            y = 10 * y + digit + 1 - curOdd\n        else:\n            digit >>= 1\n            x = 10 * x + digit\n            y = 10 * y + digit\n    print(x, y)", "def print_combin(n):\n    num = n\n    num1 = ''\n    num2 = ''\n    is_first = True\n    while num > 0:\n        digit = num % 10\n        if digit % 2 == 1:\n            if is_first == True:\n                num1 = f'{digit // 2 + 1}' + num1\n                is_first = False\n                num2 = f'{digit // 2}' + num2\n            else:\n                num2 = f'{digit // 2 + 1}' + num2\n                is_first = True\n                num1 = f'{digit // 2}' + num1\n        else:\n            num1 = f'{digit // 2}' + num1\n            num2 = f'{digit // 2}' + num2\n        num = num // 10\n    print(int(num1), int(num2))\n\ndef main():\n    for i in range(int(input())):\n        n = int(input())\n        print_combin(n)\nmain()", "for _ in range(int(input())):\n    num = int(input())\n    status = True\n    (a, b) = (0, 0)\n    elements = list(map(int, str(num).strip()))\n    for val in elements:\n        if val % 2 == 0:\n            a = a * 10 + val // 2\n            b = b * 10 + val // 2\n        elif status:\n            a = a * 10 + val // 2 + 1\n            b = b * 10 + val // 2\n            status = False\n        else:\n            a = a * 10 + val // 2\n            b = b * 10 + val // 2 + 1\n            status = True\n    print(a, b)", "import os.path\nfrom math import gcd, floor, ceil\nfrom collections import *\nimport sys\nmod = 1000000007\nINF = float('inf')\n\ndef st():\n    return list(sys.stdin.readline().strip())\n\ndef li():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef mp():\n    return map(int, sys.stdin.readline().split())\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef pr(n):\n    return sys.stdout.write(str(n) + '\\n')\n\ndef prl(n):\n    return sys.stdout.write(str(n) + ' ')\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nt = inp()\nfor i in range(t):\n    n = inp()\n    (l, l1, l2) = ([], [], [])\n    while n > 0:\n        l.append(n % 10)\n        n = n // 10\n    flag = 0\n    for i in range(len(l)):\n        if l[i] % 2 != 0:\n            l1.append(l[i] // 2 + flag)\n            l2.append(l[i] // 2 - flag + 1)\n            if flag == 0:\n                flag = 1\n            else:\n                flag = 0\n        else:\n            l1.append(l[i] // 2)\n            l2.append(l[i] // 2)\n    (a, b) = (0, 0)\n    f = 1\n    for i in range(len(l)):\n        a += l1[i] * f\n        b += l2[i] * f\n        f *= 10\n    print(a, b)", "for _ in range(int(input())):\n    num = int(input())\n    status = True\n    (a, b) = (0, 0)\n    elements = list(map(int, str(num).strip()))\n    for val in elements:\n        if val % 2 == 0:\n            a = a * 10 + val // 2\n            b = b * 10 + val // 2\n        elif status:\n            a = a * 10 + val // 2 + 1\n            b = b * 10 + val // 2\n            status = False\n        else:\n            a = a * 10 + val // 2\n            b = b * 10 + val // 2 + 1\n            status = True\n    print(a, b)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = 0\n    b = 0\n    s = 0\n    y = 1\n    while n:\n        x = n % 10\n        n //= 10\n        if x % 2 == 0:\n            a += x // 2 * y\n            b += x // 2 * y\n        elif s >= 0:\n            a += (x + 1) // 2 * y\n            b += (x - 1) // 2 * y\n            s -= 1\n        else:\n            a += (x - 1) // 2 * y\n            b += (x + 1) // 2 * y\n            s += 1\n        y *= 10\n    print(a, b)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = 0\n    b = 0\n    s = 0\n    y = 1\n    while n:\n        x = n % 10\n        n //= 10\n        if x % 2 == 0:\n            a += x // 2 * y\n            b += x // 2 * y\n        elif s >= 0:\n            a += (x + 1) // 2 * y\n            b += (x - 1) // 2 * y\n            s -= 1\n        else:\n            a += (x - 1) // 2 * y\n            b += (x + 1) // 2 * y\n            s += 1\n        y *= 10\n    print(a, b)", "t = int(input())\nfor _ in range(t):\n    n = str(input())\n    is_equal = 1\n    (n1, n2) = (0, 0)\n    for i in n:\n        num_i = int(i)\n        n1 *= 10\n        n2 *= 10\n        if num_i % 2 == 0:\n            tmp = num_i // 2\n            n1 += tmp\n            n2 += tmp\n        else:\n            tmp1 = num_i // 2\n            tmp2 = num_i - tmp1\n            if is_equal:\n                n1 += tmp2\n                n2 += tmp1\n                is_equal = 0\n            else:\n                n1 += tmp1\n                n2 += tmp2\n                is_equal = 1\n    print(n1, n2)", "n = int(input())\ndata = []\nfor i in range(n):\n    data.append(int(input()))\nfor i in data:\n    first_num = str()\n    second_num = str()\n    st = str(i)\n    k = 0\n    for i in st:\n        q = int(i)\n        if q % 2 == 0:\n            first_num += str(q // 2)\n            second_num += str(q // 2)\n        elif k == 0:\n            first_num += str(q // 2 + 1)\n            second_num += str(q // 2)\n            k += 1\n        else:\n            first_num += str(q // 2)\n            second_num += str(q // 2 + 1)\n            k -= 1\n    print(int(first_num), int(second_num))", "def solve():\n    (a, b, cur) = ('', '', 0)\n    for d in x:\n        d = int(d)\n        if d % 2 == 0:\n            a += str(d // 2)\n            b += str(d // 2)\n        else:\n            if cur == 1:\n                (a, b) = (b, a)\n            a += str(d // 2)\n            b += str((d + 1) // 2)\n            cur ^= 1\n    return [int(a), int(b)]\nfor testcase in range(int(input())):\n    x = input()\n    print(*solve())", "for _ in range(int(input())):\n    num = int(input())\n    multiplier = 1\n    (num1, num2) = (0, 0)\n    diff = 0\n    while num:\n        last_digit = num % 10\n        if diff == 0:\n            num1 += (last_digit - last_digit // 2) * multiplier\n            num2 += last_digit // 2 * multiplier\n            diff += last_digit - 2 * (last_digit // 2)\n        elif diff > 0:\n            num2 += (last_digit - last_digit // 2) * multiplier\n            num1 += last_digit // 2 * multiplier\n            diff -= last_digit - 2 * (last_digit // 2)\n        multiplier *= 10\n        num = num // 10\n    print(num1, num2)", "def solve():\n    n = input()\n    a = ''\n    b = ''\n    flag = True\n    for c in n:\n        now = int(c)\n        if now & 1:\n            if flag:\n                a = a + str(now // 2 + 1)\n                b = b + str(now // 2)\n            else:\n                a = a + str(now // 2)\n                b = b + str(now // 2 + 1)\n            flag = not flag\n        else:\n            a = a + str(now // 2)\n            b = b + str(now // 2)\n    print(int(a), int(b))\nt = int(input())\nfor _ in range(t):\n    solve()", "for _ in range(int(input())):\n    num = int(input())\n    status = True\n    (a, b) = (0, 0)\n    elements = list(map(int, str(num).strip()))\n    for val in elements:\n        if val % 2 == 0:\n            a = a * 10 + val // 2\n            b = b * 10 + val // 2\n        elif status:\n            a = a * 10 + val // 2 + 1\n            b = b * 10 + val // 2\n            status = False\n        else:\n            a = a * 10 + val // 2\n            b = b * 10 + val // 2 + 1\n            status = True\n    print(a, b)", "for _ in range(int(input())):\n    num = int(input())\n    status = True\n    (a, b) = (0, 0)\n    elements = list(map(int, str(num).strip()))\n    for val in elements:\n        if val % 2 == 0:\n            a = a * 10 + val // 2\n            b = b * 10 + val // 2\n        elif status:\n            a = a * 10 + val // 2 + 1\n            b = b * 10 + val // 2\n            status = False\n        else:\n            a = a * 10 + val // 2\n            b = b * 10 + val // 2 + 1\n            status = True\n    print(a, b)", "total = int(input())\n\ndef func():\n    s = input()\n    to_l = True\n    (l, r) = ('', '')\n    for c in s:\n        num = int(c)\n        if num % 2 == 0:\n            l += str(num // 2)\n            r += str(num // 2)\n        else:\n            (big, small) = (str(num // 2 + 1), str(num // 2))\n            if to_l:\n                l += big\n                r += small\n            else:\n                l += small\n                r += big\n            to_l = not to_l\n    print('{} {}'.format(int(l), int(r)))\nfor _ in range(total):\n    func()", "from typing import List\nfrom bisect import *\nfrom collections import *\nfrom functools import *\nfrom itertools import *\nfrom math import *\nfrom queue import PriorityQueue\nINF = 2 ** 64 - 1\nMOD = 10 ** 9 + 7\nmi = lambda : map(int, input().split())\nli = lambda : list(mi())\n\ndef digit(n):\n    ans = 0\n    while n > 0:\n        ans += n % 10\n        n //= 10\n    return ans\n\ndef main(n):\n    small = True\n    a = 0\n    b = 0\n    add = 1\n    src = n\n    while n > 0:\n        temp = n % 10\n        if temp % 2 == 0:\n            a += add * (temp - temp // 2)\n            b += add * (temp // 2)\n        else:\n            if small and temp % 2 != 0:\n                a += add * (temp // 2)\n                b += add * (temp - temp // 2)\n            else:\n                a += add * (temp - temp // 2)\n                b += add * (temp // 2)\n            small = not small\n        n //= 10\n        add *= 10\n    print(a, b)\n    return\ncaseNum = int(input())\nfor i in range(0, caseNum):\n    n = int(input())\n    main(n)", "t = int(input().strip())\nfor _ in range(t):\n    n = int(input().strip())\n    a = 0\n    b = 0\n    i = 1\n    while n:\n        r = n % 10\n        if r & 1:\n            r //= 2\n            if a <= b:\n                a += i * (r + 1)\n                b += i * r\n            else:\n                b += i * (r + 1)\n                a += i * r\n        else:\n            r //= 2\n            a += i * r\n            b += i * r\n        i *= 10\n        n //= 10\n    print(a, b)", "import sys, os\nimport math\nTC = True\n\ndef solve():\n    n = int(input())\n    i = 0\n    flag = 0\n    nDigits = [0] * 10\n    while n:\n        nDigits[i] = n % 10\n        n //= 10\n        i += 1\n    a = [0] * 10\n    b = [0] * 10\n    for j in range(i):\n        if nDigits[j] & 1:\n            a[j] = nDigits[j] // 2 + flag\n            b[j] = nDigits[j] // 2 + 1 - flag\n            flag = 1 - flag\n        else:\n            a[j] = b[j] = nDigits[j] // 2\n    x = 0\n    y = 0\n    m = 1\n    for j in range(i):\n        y += b[j] * m\n        x += a[j] * m\n        m *= 10\n    print(x, y)\nif os.path.exists('input.txt'):\n    debug = True\n    sys.stdin = open('input.txt', 'r')\nif TC:\n    for _ in range(int(input())):\n        solve()\nelse:\n    solve()", "num_tests = int(input().strip())\nfor _ in range(num_tests):\n    num = int(input().strip())\n    first_half = []\n    second_half = []\n    toggle = 0\n    while num:\n        digit = num % 10\n        if digit & 1:\n            first_half.append(digit // 2 + toggle)\n            second_half.append(digit // 2 + 1 - toggle)\n            toggle = 1 - toggle\n        else:\n            first_half.append(digit // 2)\n            second_half.append(digit // 2)\n        num = num // 10\n    first_result = 0\n    second_result = 0\n    for i in range(len(first_half) - 1, -1, -1):\n        first_result = first_result * 10 + first_half[i]\n        second_result = second_result * 10 + second_half[i]\n    print(first_result, second_result)", "for t in range(int(input())):\n    n = list(map(int, list(input())))\n    (a, b) = ([], [])\n    a_turn = True\n    for elem in n:\n        if elem % 2 == 0:\n            a.append(elem // 2)\n            b.append(elem // 2)\n        elif a_turn:\n            a.append((elem + 1) // 2)\n            b.append((elem - 1) // 2)\n            a_turn = False\n        else:\n            a.append((elem - 1) // 2)\n            b.append((elem + 1) // 2)\n            a_turn = True\n    print(int(''.join(map(str, a))), int(''.join(map(str, b))))", "N = int(input())\nfor i in range(N):\n    num = int(input())\n    ans1 = ans2 = 0\n    flag = 0\n    base = 1\n    while num != 0:\n        tmp = num % 10\n        x = tmp // 2\n        y = tmp - x\n        if x != y:\n            if flag == 1:\n                tt = x\n                x = y\n                y = tt\n            flag ^= 1\n        ans1 += x * base\n        ans2 += y * base\n        num = num // 10\n        base *= 10\n    print(ans1, ans2)", "for _ in range(int(input())):\n    n = input()\n    a = []\n    b = []\n    flag = 0\n    for i in n:\n        i = int(i)\n        if i % 2 == 0:\n            a.append(i // 2)\n            b.append(i // 2)\n        elif flag == 1:\n            a.append(i // 2)\n            b.append(i // 2 + 1)\n            flag = 0\n        else:\n            b.append(i // 2)\n            a.append(i // 2 + 1)\n            flag = 1\n    ans = 0\n    ans2 = 0\n    for i in a:\n        ans *= 10\n        ans += i\n    for i in b:\n        ans2 *= 10\n        ans2 += i\n    print(ans, ans2)", "for n in [*open(0)][1:]:\n    a = ['', '']\n    f = 0\n    for x in map(int, n[:-1]):\n        a[f] += str(x >> 1)\n        a[f ^ 1] += str(x + 1 >> 1)\n        f ^= x & 1\n    print(*map(int, a))", "for _ in range(int(input())):\n    n = input()\n    d1 = d2 = 0\n    c = 10 ** (len(n) - 1)\n    j = 1\n    co1 = 0\n    co2 = 1\n    for i in n:\n        if i == '9':\n            if co1 % 2:\n                d1 += 4 * c\n                d2 += 5 * c\n            else:\n                d1 += 5 * c\n                d2 += 4 * c\n            co1 += 1\n        elif int(i) % 2:\n            if co2 % 2:\n                d1 += int(i) // 2 * c\n                d2 += (int(i) // 2 + 1) * c\n            else:\n                d1 += (int(i) // 2 + 1) * c\n                d2 += int(i) // 2 * c\n            co2 += 1\n        else:\n            d1 += int(i) // 2 * c\n            d2 += int(i) // 2 * c\n        c //= 10\n        j += 1\n    print(d1, d2)", "t = int(input())\nfor i in range(t):\n    n = input().strip()\n    a = '0'\n    b = '0'\n    p = 0\n    for k in n:\n        num = int(k)\n        if p:\n            a += str(num // 2)\n            b += str(num - num // 2)\n        else:\n            b += str(num // 2)\n            a += str(num - num // 2)\n        if num % 2:\n            p = (p + 1) % 2\n    print(int(a), int(b))", "import sys\nimport socket\nhostnames = ['N551J', 'FVFH32CDQ05N', 'X553M']\ninput_file = 'b1.in'\nif socket.gethostname() in hostnames:\n    sys.stdin = open(input_file)\n\ndef read_int_list():\n    return list(map(int, input().split()))\n\ndef read_int():\n    return int(input())\n\ndef read_str_list():\n    return input().split()\n\ndef read_str():\n    return input()\n\ndef solve():\n    t = read_int()\n    res = [''] * t\n    for i in range(t):\n        n = read_int()\n        p = 1\n        while 10 * p <= n:\n            p *= 10\n        j = 0\n        r = [0, 0]\n        while n > 0:\n            while p > n:\n                p //= 10\n            n -= p\n            r[j] += p\n            j = 1 - j\n        res[i] = str(r[0]) + ' ' + str(r[1])\n    return res\n\ndef main():\n    res = solve()\n    print(*res, sep='\\n')\nmain()", "t = int(input())\nfor i in range(t):\n    m = input()\n    f = True\n    a = b = 0\n    for x in m:\n        if f:\n            a = a * 10 + int(x) // 2\n            b = b * 10 + int(x) - int(x) // 2\n        else:\n            b = b * 10 + int(x) // 2\n            a = a * 10 + int(x) - int(x) // 2\n        if int(x) % 2 == 1:\n            f = not f\n    print(a, b)", "t = int(input())\nfor i in range(t):\n    n = input().strip()\n    a = '0'\n    b = '0'\n    p = 0\n    for k in n:\n        num = int(k)\n        if p:\n            a += str(num // 2)\n            b += str(num - num // 2)\n        else:\n            b += str(num // 2)\n            a += str(num - num // 2)\n        if num % 2:\n            p = (p + 1) % 2\n    print(int(a), int(b))", "import os\nimport math\nimport collections\nimport bisect\nimport functools\nimport itertools\nimport heapq\n\ndef solve(n):\n    a = [int(c) for c in str(n)]\n    m = len(a)\n    x = [0] * m\n    y = [0] * m\n    s = 0\n    for i in range(m):\n        if a[i] % 2 == 0:\n            x[i] = a[i] // 2\n            y[i] = a[i] // 2\n        elif s <= 0:\n            x[i] = a[i] // 2 + 1\n            y[i] = a[i] // 2\n            s += 1\n        else:\n            x[i] = a[i] // 2\n            y[i] = a[i] // 2 + 1\n            s -= 1\n    return (int(''.join(map(str, x))), int(''.join(map(str, y))))\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    (x, y) = solve(n)\n    print(x, y)", "test = int(input())\nwhile test:\n    n = int(input())\n    st = str(n)\n    x = ''\n    y = ''\n    greater = 0\n    for i in st:\n        k = int(i)\n        if k % 2 == 0:\n            x = x + str(k // 2)\n            y = y + str(k // 2)\n        elif greater == 0:\n            x = x + str(k // 2 + 1)\n            y = y + str(k // 2)\n            greater = 1\n        else:\n            x = x + str(k // 2)\n            y = y + str(k // 2 + 1)\n            greater = 0\n    print(int(x), int(y))\n    test -= 1", "for _ in range(int(input())):\n    n = input()\n    a = list((int(i) for i in n))\n    x = list()\n    y = list()\n    d = 0\n    for i in a:\n        if i % 2 == 0:\n            x.append(i // 2)\n            y.append(i // 2)\n        elif d == 0:\n            x.append(i // 2 + 1)\n            y.append(i // 2)\n            d = 1\n        else:\n            x.append(i // 2)\n            y.append(i // 2 + 1)\n            d = 0\n    xn = 0\n    yn = 0\n    for i in range(len(x)):\n        xn = xn * 10 + x[i]\n        yn = yn * 10 + y[i]\n    print(xn, yn)", "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    n = int(input())\n    x = ''\n    y = ''\n    adx = 0\n    s = str(n)\n    for j in s:\n        ele = int(j)\n        if ele % 2 == 0:\n            x += str(ele // 2)\n            y += str(ele // 2)\n        elif adx == 0:\n            adx += 1\n            x += str(ele // 2 + 1)\n            y += str(ele // 2)\n        else:\n            adx = 0\n            y += str(ele // 2 + 1)\n            x += str(ele // 2)\n    print(int(x), int(y))", "for _ in range(int(input())):\n    n = input()\n    ans1 = []\n    ans2 = []\n    turn = 0\n    for i in n:\n        e = int(i)\n        if e % 2 == 0:\n            ans1.append(str(e // 2))\n            ans2.append(str(e // 2))\n        else:\n            e1 = e // 2\n            e2 = e // 2 + 1\n            if turn == 0:\n                ans1.append(str(e2))\n                ans2.append(str(e1))\n                turn = 1\n            else:\n                ans1.append(str(e1))\n                ans2.append(str(e2))\n                turn = 0\n    ans1 = ''.join(ans1)\n    ans2 = ''.join(ans2)\n    print(int(ans1), int(ans2))", "n = int(input())\nfor bb in range(n):\n    x = int(input())\n    s = str(x)\n    temp = 1\n    re1 = 0\n    re2 = 0\n    for b in s:\n        re1 *= 10\n        re2 *= 10\n        if temp == 1:\n            if int(b) % 2 == 0 and int(b) != 1:\n                re2 += int(b) // 2\n                re1 += int(b) // 2\n            else:\n                re1 += int(b) // 2 + 1\n                re2 += int(b) // 2\n                temp = 0\n        elif int(b) % 2 == 0 and int(b) != 1:\n            re2 += int(b) // 2\n            re1 += int(b) // 2\n        else:\n            re2 += int(b) // 2 + 1\n            re1 += int(b) // 2\n            temp = 1\n    print(re1, end=' ')\n    print(re2)", "xyz = int(input())\nfor _ in range(xyz):\n    n = int(input())\n    base = 1\n    a1 = 0\n    a2 = 0\n    c1 = 0\n    c2 = 0\n    while n > 0:\n        rem = n % 10\n        n = n // 10\n        if rem % 2 == 0:\n            a1 = a1 + rem // 2 * base\n            a2 = a2 + rem // 2 * base\n            c1 += 1\n            c2 += 1\n        elif c1 > c2:\n            a2 = a2 + (rem + 1) // 2 * base\n            c2 += 1\n            a1 = a1 + (rem - 1) // 2 * base\n        else:\n            a1 = a1 + (rem + 1) // 2 * base\n            c1 += 1\n            a2 = a2 + (rem - 1) // 2 * base\n        base = base * 10\n    print(a1, ' ', a2)", "def prod(a, b):\n    return a * b\nfor _ in range(int(input())):\n    n = int(input())\n    ll = [1]\n    it = 1\n    num1 = 0\n    num2 = 0\n    while n > 0:\n        rem = n % 10\n        f = 0\n        if rem % 2 in ll:\n            f = 1\n        rem = rem // 2\n        if f:\n            if num1 > num2:\n                num2 = num2 + prod(it, rem + 1)\n                num1 = num1 + prod(it, rem)\n            else:\n                num1 = num1 + prod(it, rem + 1)\n                num2 = num2 + prod(it, rem)\n        else:\n            num1 = num1 + prod(it, rem)\n            num2 = num2 + prod(it, rem)\n        it = prod(it, 10)\n        n = n // 10\n    print(num1, num2)", "for i in range(int(input())):\n    a = input()\n    (x, y) = ('', '')\n    flag = False\n    for i in range(len(a)):\n        n = int(a[i])\n        n1 = n >> 1\n        n2 = n - n1\n        if n % 2 != 0:\n            if flag:\n                x += str(n1)\n                y += str(n2)\n                flag = False\n            else:\n                x += str(n2)\n                y += str(n1)\n                flag = True\n        else:\n            x += str(n1)\n            y += str(n2)\n    print(int(x), int(y))", "def sum_of_two_numbers(num_str):\n    num_list = [int(i) for i in num_str]\n    num_a = []\n    num_b = []\n    odd = 0\n    for number in num_list:\n        if number % 2 == 0:\n            num_a.append(number // 2)\n            num_b.append(number // 2)\n        else:\n            odd += 1\n            if odd % 2 == 0:\n                num_a.append(number // 2 + 1)\n                num_b.append(number // 2)\n            else:\n                num_a.append(number // 2)\n                num_b.append(number // 2 + 1)\n    num_a_r = num_a[::-1]\n    num_b_r = num_b[::-1]\n    a = 0\n    b = 0\n    for i in range(len(num_str)):\n        a += num_a_r[i] * 10 ** i\n        b += num_b_r[i] * 10 ** i\n    print(a, b)\ntests = int(input())\nfor i in range(tests):\n    sum_of_two_numbers(str(input()))", "def x_y(N):\n    li = ['', '']\n    n = str(N)\n    (p, q, x) = (0, 0, 0)\n    for i in n:\n        p = int(i) // 2\n        q = (int(i) + 1) // 2\n        if p == q:\n            li[0] += str(p)\n            li[1] += str(q)\n        else:\n            li[x] += str(p)\n            li[1 - x] += str(q)\n            x = 1 - x\n    print(int(li[0]), int(li[1]))\nt = int(input())\nwhile t:\n    N = int(input())\n    x_y(N)\n    t -= 1", "import heapq\nfrom collections import Counter, deque, defaultdict\n\nclass Solution:\n\n    def solve(self, n):\n        (l, r) = ([], [])\n        sum = 0\n        for i in n:\n            ni = int(i)\n            if ni % 2 == 0:\n                l.append(ni // 2)\n                r.append(ni // 2)\n            else:\n                mid = (ni + 1) // 2\n                if sum > 0:\n                    l.append(mid)\n                    r.append(mid - 1)\n                    sum = 0\n                elif sum < 0:\n                    l.append(mid - 1)\n                    r.append(mid)\n                    sum = 0\n                else:\n                    l.append(mid)\n                    r.append(mid - 1)\n                    sum = -1\n        l = ''.join(map(str, l))\n        r = ''.join(map(str, r))\n        print(int(l), int(r))\n        return\nob = Solution()\nfor _ in range(int(input())):\n    n = input().strip()\n    ob.solve(n)", "def solve(n):\n    arr = [int(i) for i in str(n)]\n    x = []\n    y = []\n    j = 0\n    for num in arr:\n        if num % 2 == 0:\n            x.append(num // 2)\n            y.append(num // 2)\n        else:\n            if j % 2 == 0:\n                x.append(num // 2 + 1)\n                y.append(num // 2)\n            else:\n                x.append(num // 2)\n                y.append(num // 2 + 1)\n            j += 1\n    return (x, y)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    (x, y) = solve(n)\n    x = int(''.join(map(str, x)))\n    y = int(''.join(map(str, y)))\n    print(x, y)", "n1 = int(input())\nns = []\nans = []\nfor i in range(n1):\n    ns.append(int(input()))\nfor n2 in ns:\n    s = str(n2)\n    le = len(s)\n    t = 0\n    q = 0\n    for i in range(le):\n        i1 = int(s[i])\n        if i1 % 2 == 1:\n            t += (i1 - 1) * 10 ** (le - i - 1)\n            q += 1 * 10 ** (le - i - 1)\n        else:\n            t += i1 * 10 ** (le - i - 1)\n    t1 = t // 2\n    t2 = t // 2\n    sq = str(q)\n    le2 = len(sq)\n    j = 1\n    for i in range(le2):\n        i2 = int(sq[i])\n        if i2 == 1 and j % 2 == 1:\n            t1 += 1 * 10 ** (le2 - i - 1)\n            j += 1\n        elif i2 == 1 and j % 2 == 0:\n            t2 += 1 * 10 ** (le2 - i - 1)\n            j += 1\n    ans.append(str(t1) + ' ' + str(t2))\nfor i in ans:\n    print(i)", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    s = str(n)\n    x1 = ''\n    x2 = x1\n    a = 1\n    for i in range(len(s)):\n        u = int(s[i])\n        if u % 2 == 0:\n            x1 += str(u // 2)\n            x2 += str(u // 2)\n        elif a == 1:\n            x1 += str(u // 2 + 1)\n            x2 += str(u // 2)\n            a = 2\n        else:\n            x2 += str(u // 2 + 1)\n            x1 += str(u // 2)\n            a = 1\n    while x1[0] == '0' and x2 != '0':\n        x1 = x1[1:]\n    while x2[0] == '0' and x2 != '0':\n        x2 = x2[1:]\n    print(x1, x2)", "def helper(n):\n    s = str(n)\n    (a, b) = ('', '')\n    ind = 1\n    for i in range(len(s)):\n        if int(s[i]) / 2 % 1 == 0:\n            a += str(int(s[i]) // 2)\n            b += str(int(s[i]) // 2)\n        else:\n            if ind == 1:\n                a += str((int(s[i]) + 1) // 2)\n                b += str((int(s[i]) - 1) // 2)\n            else:\n                b += str((int(s[i]) + 1) // 2)\n                a += str((int(s[i]) - 1) // 2)\n            ind *= -1\n    return str(int(a)) + ' ' + str(int(b))\nfor i in range(int(input())):\n    print(helper(int(input())))", "for _ in range(int(input())):\n    n = [int(x) for x in input()]\n    a = list(n)\n    b = list(n)\n    par = 0\n    for i in range(len(n)):\n        if n[i] % 2 == 0:\n            a[i] = b[i] = n[i] // 2\n            continue\n        par += 1\n        if par % 2:\n            a[i] = (n[i] - 1) // 2\n            b[i] = (n[i] + 1) // 2\n        else:\n            a[i] = (n[i] + 1) // 2\n            b[i] = (n[i] - 1) // 2\n    print(int(''.join([str(x) for x in a])), int(''.join([str(x) for x in b])))"]