["import itertools\nfrom math import floor, log, log2, ceil\nfrom itertools import groupby\nimport sys\nt = int(input())\nres = []\nfor i in range(t):\n    [n, a, b] = list(map(int, input().split()))\n    half_len = n // 2\n    arr_a = []\n    arr_b = []\n    len_a = -1\n    len_b = -1\n    if a < b:\n        arr_a = [a] + list(range(b + 1, n + 1))\n        len_a = n - b + 1\n        arr_b = [b] + list(range(1, a))\n        len_b = a\n        if len_a <= half_len and len_b <= half_len:\n            arr_a += list(range(a + 1, half_len - len_a + a + 1))\n            arr_b += list(range(half_len - len_a + a + 1, b))\n        else:\n            len_a = -1\n            len_b = -1\n    elif a == half_len + 1 and b == half_len:\n        len_b = half_len\n        len_a = half_len\n        arr_b += list(range(1, b + 1))\n        arr_a += list(range(a, n + 1))\n    if len_a == -1 and len_b == -1:\n        res.append(-1)\n    else:\n        res.append(' '.join(map(str, arr_a + arr_b)))\nfor i in range(t):\n    print(res[i])", "def next():\n    return input()\n\ndef nextInt():\n    return int(next())\n\ndef nextFloat():\n    return float(next())\n\ndef getIntArray(n, sep=' '):\n    return [[int(d) for d in next().split(sep)] for _ in range(n)]\n\ndef getFloatArray(n):\n    return [nextFloat() for _ in range(n)]\n\ndef getStringArray(n):\n    return [next() for _ in range(n)]\n\ndef printList(l):\n    print(' '.join(map(str, l)))\nN = nextInt()\ndata = getIntArray(N)\nfor (s, l, r) in data:\n    if l - 1 + (r > l) > s / 2 or r - (l < r) < s / 2:\n        print('-1')\n    else:\n        if r >= s / 2 + 1:\n            ap = list(range(s // 2 + 1, s + 1))\n            ap.remove(r)\n        else:\n            ap = list(range(s // 2 + 2, s + 1))\n        o = [l] + ap\n        if l <= s / 2:\n            ap = list(range(1, s // 2 + 1))\n            ap.remove(l)\n        else:\n            ap = list(range(1, s // 2))\n        o += [r] + ap\n        printList(o)", "_ = int(input())\nfor __ in range(_):\n    (n, a, b) = map(int, input().split())\n    out = [x for x in range(n, 0, -1)]\n    pos_a = out.index(a)\n    nn = n // 2\n    if pos_a > nn - 1:\n        (out[nn - 1], out[pos_a]) = (out[pos_a], out[nn - 1])\n    pos_b = out.index(b)\n    if pos_b < nn:\n        (out[nn], out[pos_b]) = (out[pos_b], out[nn])\n    if min(out[0:nn]) == a and max(out[nn:n]) == b:\n        print(' '.join([str(x) for x in out]))\n    else:\n        print(-1)", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    (n, a, b) = [int(x) for x in sys.stdin.readline().split()]\n    left = [a]\n    right = [b]\n    arr = list(range(1, n + 1))\n    arr.remove(a)\n    arr.remove(b)\n    left = left + arr[len(arr):len(arr) // 2 - 1:-1]\n    right = right + arr[:len(arr) // 2]\n    if min(left) != a or max(right) != b:\n        print(-1)\n    else:\n        print(' '.join(map(str, left + right)))", "def solve():\n    (n, a, b) = map(int, input().split())\n    (x, y, z) = ([], [], [])\n    for i in range(1, n + 1):\n        if i == a or i > b:\n            if i < a:\n                print(-1)\n                return\n            x.append(i)\n        elif i == b or i < a:\n            if i > b:\n                print(-1)\n                return\n            y.append(i)\n        else:\n            z.append(i)\n    if len(x) > n // 2 or len(y) > n // 2:\n        print(-1)\n        return\n    print(' '.join(map(str, x + z + y)))\nt = int(input())\nfor i in range(t):\n    solve()", "def special_permutation(n, a, b):\n    h = n // 2\n    mandatory_b_set = set(range(1, a))\n    mandatory_a_set = set(range(b + 1, n + 1))\n    if b not in mandatory_b_set:\n        mandatory_b_set.add(b)\n    if a not in mandatory_a_set:\n        mandatory_a_set.add(a)\n    if len(mandatory_a_set) > h or len(mandatory_b_set) > h:\n        print(-1)\n        return\n    remaining = list(set(range(1, n + 1)) - mandatory_b_set - mandatory_a_set)\n    permutation = list(mandatory_a_set) + remaining[:h - len(mandatory_a_set)] + list(mandatory_b_set) + remaining[h - len(mandatory_a_set):]\n    print(' '.join(map(str, permutation)))\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    special_permutation(n, a, b)", "NO_ANSWER = '-1'\n\ndef create_ans(arr):\n    return ' '.join(map(str, arr))\n\ndef swapPositions(list, pos1, pos2):\n    (list[pos1], list[pos2]) = (list[pos2], list[pos1])\n    return list\n\ndef solve(n, a, b):\n    arr = list(reversed(list(range(1, n + 1))))\n    k = int(n / 2)\n    if a >= k + 1 or b <= k:\n        if a == k + 1 and b == k:\n            return create_ans(arr)\n        return NO_ANSWER\n    if k - 1 == n - b or k == n - a:\n        swapPositions(arr, n - b, n - a)\n        return create_ans(arr)\n    swapPositions(arr, k, n - b)\n    swapPositions(arr, k - 1, n - a)\n    return create_ans(arr)\nt = input()\nfor _ in range(int(t)):\n    s = input()\n    (n, a, b) = map(int, s.split(' '))\n    print(solve(n, a, b))", "import itertools\n\ndef solve():\n    t = int(input())\n    for _ in range(t):\n        solve_one()\n\ndef solve_one():\n    (n, a, b) = [int(x) for x in input().split()]\n    half_n = n // 2\n    if not (a <= half_n + 1 and b >= half_n):\n        print(-1)\n        return\n    if a == half_n + 1:\n        if b != half_n:\n            print(-1)\n            return\n        else:\n            print(' '.join((str(x) for x in [*range(a, n + 1), *range(1, b + 1)])))\n            return\n    if b == half_n:\n        if a != half_n + 1:\n            print(-1)\n            return\n    left = [a, *range(b + 1, n + 1)]\n    right = [b, *range(1, a)]\n    mid = [*range(a + 1, b)]\n    print(' '.join((str(x) for x in itertools.chain(left, mid, right))))\nsolve()", "t = int(input())\nfor j in range(t):\n    (n, a, b) = list(map(int, input().split()))\n    (s, ans) = ([int(q) for q in range(1, n + 1)], [])\n    ans.append(s.pop(s.index(a)))\n    last = s.pop(s.index(b))\n    s.sort(reverse=True)\n    ans.extend(s)\n    ans.append(last)\n    print(' '.join([str(i) for i in ans])) if min(ans[:n // 2]) == a and max(ans[n // 2:]) == b else print(-1)", "t = int(input())\n\ndef replace():\n    (n, a, b) = map(int, input().split())\n    string = str()\n    if a >= n / 2 + 2:\n        print('-1')\n    elif b <= n / 2 - 1:\n        print('-1')\n    elif a > n / 2 and b > n / 2:\n        print('-1')\n    elif a <= n / 2 and b <= n / 2:\n        print('-1')\n    else:\n        if a > n / 2:\n            string += str(a) + ' '\n            for i in range(int(n / 2), n):\n                if i + 1 != a:\n                    string += str(i + 1) + ' '\n            string += str(b) + ' '\n            for i in range(int(n / 2)):\n                if i + 1 != b:\n                    string += str(i + 1) + ' '\n        else:\n            string += str(a) + ' '\n            for i in range(int(n / 2), n):\n                if i + 1 != b:\n                    string += str(i + 1) + ' '\n            string += str(b) + ' '\n            for i in range(int(n / 2)):\n                if i + 1 != a:\n                    string += str(i + 1) + ' '\n        print(string)\nfor i in range(t):\n    replace()", "from itertools import chain\nt = int(input())\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    if b < n // 2 or a > n // 2 + 1:\n        print(-1)\n        continue\n    A = [a] + list(range(max(a + 1, b + 1), n + 1))\n    B = [b] + list(range(1, min(a, b)))\n    if len(A) > n // 2 or len(B) > n // 2:\n        print(-1)\n        continue\n    m = len(A)\n    A += list(range(b - n // 2 + m, b))\n    B += list(range(a + 1, b - n // 2 + m))\n    print(' '.join(map(str, chain(A, B))))", "NO_ANSWER = '-1'\n\ndef create_ans(arr):\n    return ' '.join(map(str, arr))\n\ndef swap(list, pos1, pos2):\n    (list[pos1], list[pos2]) = (list[pos2], list[pos1])\n    return list\n\ndef solve(n, a, b):\n    arr = list(reversed(list(range(1, n + 1))))\n    k = int(n / 2)\n    if a >= k + 1 or b <= k:\n        if a == k + 1 and b == k:\n            return create_ans(arr)\n        return NO_ANSWER\n    swap(arr, n - b, n - a)\n    return create_ans(arr)\nt = input()\nfor _ in range(int(t)):\n    s = input()\n    (n, a, b) = map(int, s.split(' '))\n    print(solve(n, a, b))", "def permutation():\n    n = int(input())\n    for _ in range(n):\n        line = input()\n        (n, a, b) = line.split(' ')\n        n = int(n)\n        a = int(a)\n        b = int(b)\n        c = 0\n        if a < b:\n            c = 1\n        if n - a + 1 - c >= n / 2 and b - c >= n / 2:\n            left = [a]\n            x = n\n            while len(left) < n / 2:\n                if x != b and x != a:\n                    left.append(x)\n                x -= 1\n            right = [b]\n            y = 1\n            while len(right) < n / 2:\n                if y != b and y != a:\n                    right.append(y)\n                y += 1\n            perm = left + right\n            string_perm = [str(p) for p in perm]\n            res = ' '.join(string_perm)\n            print(res)\n        else:\n            print(-1)\npermutation()", "def num1(n, a, b):\n    res = [a] + [x for x in range(1, n + 1) if x not in [a, b]][::-1] + [b]\n    if res[n // 2 - 1] < a or res[n // 2] > b:\n        res = [-1]\n    return ' '.join(map(str, res))\nt = int(input())\nfor i in range(t):\n    print(num1(*map(int, input().split())))", "def solve():\n    (n, mini, maxi) = map(int, input().split())\n    l = []\n    for i in range(n, 0, -1):\n        if i == mini or i == maxi:\n            continue\n        else:\n            l.append(i)\n    l.insert(0, mini)\n    l.append(maxi)\n    ok = True\n    for i in range(int(n / 2)):\n        if l[i] < mini:\n            ok = False\n    for i in range(int(n / 2), n):\n        if l[i] > maxi:\n            ok = False\n    if not ok:\n        print(-1)\n    else:\n        print(' '.join(map(str, l)))\nn = int(input())\nfor _ in range(n):\n    solve()", "from sys import stdin\ninput = stdin.readline\nfor t in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    half = n // 2\n    if a - 1 > half or n - b > half:\n        print(-1)\n        continue\n    if a - 1 == half and b > half:\n        print(-1)\n        continue\n    if b + 1 == half and a < half:\n        print(-1)\n        continue\n    (b_arr, total) = ([], 0)\n    for i in range(1, b):\n        if i != a and total < half - 1:\n            b_arr.append(i)\n            total += 1\n    (a_arr, total) = ([], 0)\n    for i in range(n, a, -1):\n        if i != b and total < half - 1:\n            a_arr.append(i)\n            total += 1\n    if len(a_arr) != half - 1 or len(b_arr) != half - 1:\n        print(-1)\n        continue\n    result = [str(a)]\n    for r in a_arr:\n        result.append(str(r))\n    for r in b_arr:\n        result.append(str(r))\n    result.append(str(b))\n    print(' '.join(result))", "def proc(n, a, b):\n    (left_ans, right_ans) = ([a], [b])\n    taken = [0] * (n + 1)\n    l_idx = n\n    r_idx = 1\n    taken[a] = 1\n    taken[b] = 1\n    for _ in range(n // 2 - 1):\n        while l_idx >= a and taken[l_idx]:\n            l_idx -= 1\n        if l_idx >= a:\n            left_ans.append(l_idx)\n            taken[l_idx] = 1\n            l_idx -= 1\n        else:\n            return -1\n        while r_idx <= b and taken[r_idx]:\n            r_idx += 1\n        if r_idx <= b:\n            right_ans.append(r_idx)\n            taken[r_idx] = 1\n            r_idx += 1\n        else:\n            return -1\n    return ' '.join(map(str, left_ans + right_ans))\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    print(proc(n, a, b))", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    s = list((i for i in range(1, n + 1) if i != a and i != b))[::-1]\n    if n == 2:\n        print('1 2' if a == 1 else '2 1')\n    else:\n        print(str(a) + ' ' + ' '.join((str(i) for i in s)) + ' ' + str(b) if min(s[:(n - 2) // 2]) > a and max(s[(n - 2) // 2:]) < b else '-1')", "num_cases = int(input())\nfor i in range(num_cases):\n    (n, a, b) = list(map(int, input().split()))\n    punto_medio = (n + 1) / 2\n    if a < punto_medio and b < punto_medio or (a > punto_medio and b > punto_medio):\n        print('-1')\n    elif a > n / 2 + 1 or b < n / 2:\n        print('-1')\n    else:\n        numbers_list = list(range(1, n + 1))\n        if a == n / 2 + 1 and b == n / 2:\n            mitad_left = numbers_list[int(n / 2):]\n            mitad_right = numbers_list[:int(n / 2)]\n            result_list = mitad_left + mitad_right\n            print(' '.join(map(str, result_list)))\n        else:\n            numbers_list[a - 1] = b\n            numbers_list[b - 1] = a\n            mitad_left = numbers_list[int(n / 2):]\n            mitad_right = numbers_list[:int(n / 2)]\n            result_list = mitad_left + mitad_right\n            print(' '.join(map(str, result_list)))", "for inn in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    answer = list(range(n, 0, -1))\n    answer.remove(a)\n    answer.remove(b)\n    answer.insert(0, a)\n    answer.append(b)\n    if min(answer[:n // 2]) == a and max(answer[n // 2:]) == b:\n        print(' '.join(map(str, answer)))\n    else:\n        print(-1)", "def doTask():\n    (n, a, b) = [int(a) for a in input().split(' ')]\n    center = n // 2\n    if a > center + 1 or b < center or (a <= center and b <= center) or (a > center and b > center) or (a == b):\n        print(-1)\n        return\n    result = [a]\n    for i in range(n, 0, -1):\n        if i == a or i == b:\n            continue\n        result.append(i)\n    result.append(b)\n    print(' '.join([str(r) for r in result]))\nfor _ in range(int(input())):\n    doTask()", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    ans = []\n    aft = int((n + 2) / 2)\n    for i in range(aft, n + 1):\n        inpu = str(i)\n        ans.append(inpu)\n    for i in range(1, aft):\n        inpu = str(i)\n        ans.append(inpu)\n    if b > n // 2 and a <= n // 2:\n        ans.remove(str(a))\n        ans.remove(str(b))\n        ans.insert(0, str(a))\n        ans.append(str(b))\n        print(' '.join(ans))\n    elif b == n // 2 and a == aft:\n        print(' '.join(ans))\n    else:\n        print('-1')", "in_data = []\nnum = input()\nfor i in range(int(num)):\n    in_data.append([int(e) for e in input().split(' ')])\nfor i in range(int(num)):\n    result = [e for e in range(1, in_data[i][0] + 1) if e != in_data[i][2] and e != in_data[i][1]]\n    result.reverse()\n    result.append(in_data[i][2])\n    result = [in_data[i][1]] + result\n    if in_data[i][1] == min(result[0:in_data[i][0] // 2]) and in_data[i][2] == max(result[in_data[i][0] // 2:in_data[i][0]]):\n        print(' '.join([str(e) for e in result]))\n    else:\n        print(-1)", "def p(l):\n    s = ''\n    for i in range(len(l)):\n        s = s + str(l[i]) + ' '\n    print(s)\n\ndef f(n, a, b):\n    if a > n // 2 or b < n // 2 + 1 or a > b:\n        if a != b + 1:\n            print(-1)\n        elif b != n // 2:\n            print(-1)\n        else:\n            l1 = [i for i in range(a, n + 1)]\n            l2 = [j for j in range(1, b + 1)]\n            l1.extend(l2)\n            p(l1)\n    else:\n        l1 = [i for i in range(b + 1, n + 1)]\n        l2 = [j for j in range(1, a)]\n        l1.append(a)\n        l2.append(b)\n        l3 = [i for i in range(a + 1, a + 1 + n // 2 - len(l1))]\n        l1.extend(l3)\n        if b - l1[-1] - 1 != n // 2 - len(l2):\n            print(-1)\n        else:\n            l4 = [j for j in range(l1[-1] + 1, b)]\n        l1.extend(l2)\n        l1.extend(l4)\n        p(l1)\nx = int(input())\nm = []\nfor i in range(x):\n    y = input()\n    y1 = y.split(' ')\n    y2 = [int(t) for t in y1]\n    m.append(y2)\nfor j in range(x):\n    f(m[j][0], m[j][1], m[j][2])", "t = int(input())\nimport math\nfor _ in range(t):\n    (n, a, b) = tuple(map(int, input().split()))\n    flag = [0 for _ in range(n + 1)]\n    res = []\n    res.append(a)\n    flag[a] = 1\n    flag[b] = 1\n    for i in range(n, a, -1):\n        if len(res) == n // 2:\n            break\n        if i == b:\n            continue\n        flag[i] = 1\n        res.append(i)\n    if len(res) < n // 2:\n        print(-1)\n        continue\n    res.append(b)\n    for i in range(1, b):\n        if flag[i] == 1:\n            continue\n        if i == a:\n            continue\n        res.append(i)\n    if len(res) < n:\n        print(-1)\n        continue\n    print(' '.join([str(i) for i in res]))", "import math\nk = int(input())\nfor i in range(0, k):\n    (n, a, b) = list(map(int, input().split(' ')))\n    z = [x for x in range(n, 0, -1)]\n    z = list(filter(lambda x: x != a and x != b, z))\n    z = [a] + z + [b]\n    if min(z[:int(n / 2)]) == a and b == max(z[int(n / 2):]):\n        print(' '.join(list(map(str, z[:]))))\n    else:\n        print('-1')", "iteracja = int(input())\n\ndef solve():\n    (n, a, b) = map(int, input().split())\n    lewo = [a]\n    prawo = []\n    srodek = []\n    lista = [element for element in range(1, n + 1)]\n    for element in lista:\n        if element == a or element == b:\n            continue\n        if element < b and element < a:\n            prawo.append(element)\n        elif element > a and element > b:\n            lewo.append(element)\n        else:\n            srodek.append(element)\n    prawo.append(b)\n    wynik = lewo[:]\n    for element in srodek:\n        wynik.append(element)\n    for element in prawo:\n        wynik.append(element)\n    if min(wynik[:len(wynik) // 2]) != a or max(wynik[len(wynik) // 2:]) != b:\n        print('-1')\n        return\n    print(' '.join(map(str, wynik)))\nfor element in range(iteracja):\n    solve()", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    (v1, v2) = ([a], [b])\n    for i in range(n, a, -1):\n        if i != b and len(v1) < n // 2:\n            v1.append(i)\n    for i in range(1, b):\n        if i != a and len(v2) < n // 2:\n            v2.append(i)\n    if len(v1) != n // 2 or len(v2) != n // 2:\n        print(-1)\n    else:\n        print(' '.join(map(str, v1 + v2)))", "from sys import stdin\ncount = int(stdin.readline())\nfor _ in range(count):\n    (_len, a, b) = tuple(map(lambda x: int(x), stdin.readline().split()))\n    first = {a}\n    for i in range(_len, 0, -1):\n        if len(first) == _len // 2:\n            break\n        if i != a and i != b:\n            first.add(i)\n    if min(first) != a:\n        print('-1')\n        continue\n    second = {b}\n    for i in range(1, _len + 1):\n        if i not in first and i != b:\n            second.add(i)\n    if max(second) != b:\n        print('-1')\n        continue\n    print(' '.join([str(i) for i in list(first) + list(second)]))", "def find_list(n, a, b):\n    smaller = [a]\n    bigger = [b]\n    for number in range(1, n + 1):\n        if len(bigger) != n / 2 and number != b and (number != a):\n            bigger.append(number)\n        elif number != b and number != a:\n            smaller.append(number)\n    if max(bigger) == b and min(smaller) == a:\n        return smaller + bigger\n    else:\n        return [-1]\nt = int(input())\nfor e in range(t):\n    (n, a, b) = list(map(int, input().split()))\n    answer = find_list(n, a, b)\n    print(' '.join(map(str, answer)))", "import itertools\nn = int(input())\nfor t in range(0, n):\n    sol = '-1'\n    (c, a, b) = tuple(map(int, input().split()))\n    left = [a]\n    right = [b]\n    orig = list(range(1, c + 1))\n    for x in orig[:a - 1]:\n        if x != b:\n            right.append(x)\n    for y in orig[b:]:\n        if y != a:\n            left.append(y)\n    middle = orig[a:b - 1]\n    for e in middle:\n        if len(left) < c / 2:\n            left.append(e)\n        elif len(right) < c / 2:\n            right.append(e)\n    if len(left) == c / 2 and len(right) == c / 2 and (min(left) == a) and (max(right) == b):\n        v = ''\n        for c in left:\n            v += str(c) + ' '\n        for c in right:\n            v += str(c) + ' '\n        print(v.strip())\n    else:\n        print('-1')", "for _ in range(int(input())):\n    (n, a, b) = [int(val) for val in input().split(' ')]\n    halfSize = n // 2\n    if n - b > halfSize - (0 if a > b else 1) or a - 1 > halfSize - (0 if b < a else 1) or a - b > 1:\n        print('-1')\n        continue\n    firstHalf = [a]\n    secondHalf = [b]\n    later = []\n    for x in range(1, n + 1):\n        if x == a or x == b:\n            continue\n        if x > b:\n            firstHalf.append(x)\n        elif x < a:\n            secondHalf.append(x)\n        else:\n            later.append(x)\n    for x in later:\n        if len(firstHalf) < n // 2:\n            firstHalf.append(x)\n        elif len(secondHalf) < n // 2:\n            secondHalf.append(x)\n    print(' '.join([str(i) for i in firstHalf + secondHalf]))", "t = int(input())\nfor o in range(t):\n    (n, a, b) = [int(x) for x in input().split()]\n    ava = [x + 1 for x in range(n)]\n    ava.remove(a)\n    ava.remove(b)\n    front = [a]\n    front += ava[int(len(ava) / 2):]\n    back = [b]\n    back += ava[:int(len(ava) / 2)]\n    if min(front) == a and max(back) == b:\n        ret = front + back\n        j = ''\n        for x in ret:\n            j += ' ' + str(x)\n        print(j[1:])\n    else:\n        print(-1)", "t = int(input().strip())\nfor i in range(t):\n    (n, min, max) = tuple(map(int, input().strip().split()))\n    if min > n // 2 + 1 or n - max > n // 2:\n        print(-1)\n        continue\n    ans = ''\n    if min > max:\n        for i in range(min, n + 1):\n            ans += str(i)\n            ans += ' '\n        for i in range(1, max + 1):\n            ans += str(i)\n            ans += ' '\n        print(ans[:-1])\n    else:\n        count = 0\n        for i in range(max + 1, n + 1):\n            count += 1\n            ans += str(i)\n            ans += ' '\n        if count >= n // 2:\n            print(-1)\n            continue\n        for i in range(min, max + 1):\n            count += 1\n            ans += str(i)\n            ans += ' '\n        if count < n // 2 + 1:\n            print(-1)\n            continue\n        for i in range(min - 1, 0, -1):\n            ans += str(i)\n            ans += ' '\n        print(ans[:-1])", "from sys import stdin, stdout\nt = int(stdin.readline())\nfor tt in range(t):\n    (n, a, b) = [int(s) for s in stdin.readline().split()]\n    ar = [0 for i in range(n)]\n    (ar[n // 2 - 1], ar[n - 1]) = (a, b)\n    mx = n\n    for i in range(n // 2 - 1):\n        while mx == a or mx == b:\n            mx -= 1\n        ar[i] = mx\n        mx -= 1\n    for i in range(n // 2, n - 1):\n        while mx == a or mx == b:\n            mx -= 1\n        ar[i] = mx\n        mx -= 1\n    if min(ar[:n // 2]) != a or max(ar[n // 2:]) != b:\n        print(-1)\n    else:\n        print(' '.join([str(i) for i in ar]))", "for i in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    answer = []\n    check = False\n    count_1 = 0\n    count_2 = 0\n    for j in range(n, a, -1):\n        if j != b:\n            answer.append(j)\n            count_1 += 1\n        if count_1 >= n // 2 - 1:\n            break\n    if count_1 < n // 2 - 1:\n        check = True\n    answer.append(a)\n    for j in range(1, b):\n        if j != a:\n            answer.append(j)\n            count_2 += 1\n        if count_2 >= n // 2 - 1:\n            break\n    if count_2 < n // 2 - 1:\n        check = True\n    answer.append(b)\n    if check or a == b:\n        print(-1)\n    else:\n        print(' '.join((str(x) for x in answer)))", "get = lambda : list(map(int, input().split()))\nt = get()[0]\nli = [get() for i in range(t)]\n\ndef permutation(li: list):\n    (n, a, b) = (li[0], li[1], li[2])\n    lileft = [a]\n    liright = [b]\n    num = 0\n    if b < n / 2 or (b <= n / 2 and a < b):\n        return -1\n    while True:\n        num += 1\n        if num < a and num < b and (len(liright) != n / 2):\n            liright.append(num)\n        elif num > a and num > b and (len(lileft) != n / 2):\n            lileft.append(num)\n        elif num > a and num < b and (len(liright) != n / 2):\n            liright.append(num)\n        elif num > a and num < b and (len(lileft) != n / 2):\n            lileft.append(num)\n        elif len(lileft) == n / 2 and len(liright) == n / 2:\n            break\n        elif num != a and num != b:\n            return -1\n    n = ''\n    for i in lileft:\n        n += str(i) + ' '\n    for i in liright:\n        n += str(i) + ' '\n    return n[:-1]\nfor n in li:\n    print(permutation(n))", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    left = [a]\n    right = [b]\n    for i in range(1, n + 1):\n        if i == a or i == b:\n            pass\n        elif i < a and i < b:\n            right.append(i)\n        elif i > a and i < b:\n            if len(right) < n / 2:\n                right.append(i)\n            elif len(left) < n / 2:\n                left.append(i)\n        elif i > a and i > b:\n            left.append(i)\n    if len(left) != n / 2 or len(right) != n / 2:\n        print(-1)\n    else:\n        s = str(left + right)[1:-1].replace(',', '')\n        print(s)", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = list(map(int, input().split(' ')))\n    if a > n // 2 + 1 - (b > a) or b < n // 2 + (a < b):\n        print(-1)\n        continue\n    arr = list(range(n, 0, -1))\n    arr.remove(a)\n    arr.remove(b)\n    arr.append(b)\n    arr.insert(0, a)\n    print(*arr)", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    l1 = [int(a) for a in range(n, 0, -1)]\n    ans = str(a) + ' '\n    (t1, t2) = (n - a, b - 1)\n    if b > a:\n        t1 -= 1\n        t2 -= 1\n    if t1 >= n // 2 - 1 and t2 >= n // 2 - 1:\n        for i in range(n // 2):\n            if l1[i] != b and l1[i] != a:\n                ans += str(l1[i]) + ' '\n        ans += str(b) + ' '\n        for i in range(n // 2, n):\n            if l1[i] != a and l1[i] != b:\n                ans += str(l1[i]) + ' '\n        print(ans[:-1])\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    mid_n = n // 2\n    c = b\n    count = 1\n    string = str(a)\n    while n > a and count < mid_n:\n        if n != b:\n            count += 1\n            string += ' ' + str(n)\n        n -= 1\n    if n == a:\n        n -= 1\n    if count == mid_n and b >= n:\n        string += ' ' + str(b)\n        for x in range(1, n + 1):\n            if x != a and x != b:\n                string += ' ' + str(x)\n        print(string)\n    else:\n        print('-1')", "def permut(n, a, b):\n    k = int(n / 2)\n    if a == n / 2 + 1 and b == n / 2:\n        L = []\n        for i in range(k + 1, n + 1):\n            L.append(i)\n        for i in range(1, k + 1):\n            L.append(i)\n        return L\n    elif a >= n / 2 + 1 or b <= n / 2:\n        return -1\n    L = [a]\n    for i in range(n, k, -1):\n        if i != b:\n            L.append(i)\n    for j in range(1, k + 1):\n        if j != a:\n            L.append(j)\n    L.append(b)\n    return L\ntotal = int(input())\nfor i in range(total):\n    line = input().split()\n    n = int(line[0])\n    a = int(line[1])\n    b = int(line[2])\n    ans = permut(n, a, b)\n    if ans == -1:\n        print('-1')\n    else:\n        strans = ''\n        for j in range(n - 1):\n            strans += str(ans[j])\n            strans += ' '\n        strans += str(b)\n        print(strans)", "t = int(input())\nfor i in range(t):\n    (n, a, b) = map(int, input().split())\n    p = []\n    q = []\n    for j in range(int(n / 2) + 1, n + 1):\n        if j != a and j != b:\n            p.append(j)\n    p.append(a)\n    q.append(b)\n    for j in range(1, int(n / 2 + 1)):\n        if j != b and j != a:\n            q.append(j)\n    if min(p) == a and max(q) == b and (len(p) == len(q)):\n        s1 = ' '.join((str(o) for o in p))\n        s2 = ' '.join((str(o) for o in q))\n        print(s1 + ' ' + s2)\n    else:\n        print(-1)", "for s in [*open(0)][1:]:\n    (n, a, b) = map(int, s.split())\n    (*r,) = range(n, 0, -1)\n    if a <= n // 2 < b:\n        (r[-a], r[-b]) = (r[-b], r[-a])\n    elif (n // 2 == a - 1 == b) < 1:\n        r = (-1,)\n    print(*r)", "for s in [*open(0)][1:]:\n    (n, a, b) = map(int, s.split())\n    (*r,) = range(n, 0, -1)\n    if a <= n // 2 < b:\n        (r[-a], r[-b]) = (r[-b], r[-a])\n    elif (n // 2 == a - 1 == b) < 1:\n        r = (-1,)\n    print(*r)", "for s in [*open(0)][1:]:\n    (t, a, b) = map(int, s.split())\n    (*r,) = range(t, 0, -1)\n    if a <= t // 2 < b:\n        (r[-a], r[-b]) = (r[-b], r[-a])\n    elif (t // 2 == a - 1 == b) < 1:\n        r = (-1,)\n    print(*r)", "for s in [*open(0)][1:]:\n    (n, a, b) = map(int, s.split())\n    r = (-1,)\n    if a <= n // 2 < b or n // 2 == a - 1 == b:\n        (*r,) = range(n, 0, -1)\n        if a < b:\n            (r[-a], r[-b]) = (r[-b], r[-a])\n    print(*r)", "for s in [*open(0)][1:]:\n    (n, a, b) = map(int, s.split())\n    r = (-1,)\n    if a <= n // 2 < b or n // 2 == a - 1 == b:\n        (*r,) = range(n, 0, -1)\n        (r[-b], r[-a]) = sorted((r[-a], r[-b]))\n    print(*r)", "for s in [*open(0)][1:]:\n    (n, a, b) = map(int, s.split())\n    (*r,) = range(n, 0, -1)\n    if a <= n // 2 < b:\n        (r[-a], r[-b]) = (r[-b], r[-a])\n    elif (n // 2 == a - 1 == b) < 1:\n        r = (-1,)\n    print(*r)", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = list(map(int, input().split()))\n    mid = n // 2\n    left = [a]\n    right = [b]\n    numbers = [i for i in range(1, n + 1) if i not in [a, b]]\n    for number in numbers[::-1]:\n        if len(left) < mid and number > a:\n            left.append(number)\n        elif len(right) < mid and number < b:\n            right.append(number)\n        else:\n            print(-1)\n            break\n    else:\n        answer = left + right\n        print(' '.join(map(str, answer)))", "for s in [*open(0)][1:]:\n    (n, a, b) = map(int, s.split())\n    (*r,) = range(n, 0, -1)\n    if a <= n // 2 < b:\n        (r[-a], r[-b]) = (r[-b], r[-a])\n    elif (n // 2 == a - 1 == b) < 1:\n        r = (-1,)\n    print(*r)", "for s in [*open(0)][1:]:\n    (n, a, b) = map(int, s.split())\n    (*r,) = range(n, 0, -1)\n    if a <= n // 2 < b:\n        (r[-a], r[-b]) = (r[-b], r[-a])\n    elif (n // 2 == a - 1 == b) < 1:\n        r = (-1,)\n    print(*r)", "for s in [*open(0)][1:]:\n    (n, a, b) = map(int, s.split())\n    (*r,) = range(n, 0, -1)\n    if a <= n // 2 < b:\n        (r[-a], r[-b]) = (r[-b], r[-a])\n    elif (n // 2 == a - 1 == b) < 1:\n        r = (-1,)\n    print(*r)", "for s in [*open(0)][1:]:\n    (n, a, b) = map(int, s.split())\n    (*r,) = range(n, 0, -1)\n    if a <= n // 2 < b:\n        (r[-a], r[-b]) = (r[-b], r[-a])\n    elif (n // 2 == a - 1 == b) < 1:\n        r = (-1,)\n    print(*r)", "t = int(input())\nfor i in range(t):\n    (n, a, b) = map(int, input().split())\n    length = int(n / 2)\n    x = [j for j in range(1, length + 1)]\n    y = [k for k in range(n - length + 1, n + 1)]\n    if x.count(a) and y.count(b):\n        x[x.index(a)] = b\n        y[y.index(b)] = a\n        print(*y + x)\n    elif (x.count(b) and x[-1] == b) and (y.count(a) and y[0] == a):\n        print(*y + x)\n    else:\n        print(-1)", "for s in [*open(0)][1:]:\n    (n, a, b) = map(int, s.split())\n    (*r,) = range(n, 0, -1)\n    if a <= n // 2 < b:\n        (r[-a], r[-b]) = (r[-b], r[-a])\n    elif (n // 2 == a - 1 == b) < 1:\n        r = (-1,)\n    print(*r)", "k = []\nfor i in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    r = [b]\n    [r.append(j) for j in range(1, n + 1) if j != a and j < b and (len(r) < n // 2)]\n    l = [j for j in range(1, n + 1) if j not in r]\n    if len(l) == len(r) and min(l) == a and (max(r) == b):\n        x = l + r\n        s = ' '.join((str(j) for j in x))\n        k.append(s)\n    else:\n        k.append(-1)\nfor t in k:\n    print(t)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, a, b) = map(int, input().split())\n    if a < b:\n        left = [a] + [i for i in range(b + 1, n + 1)]\n        right = [j for j in range(1, a)] + [b]\n        if len(left) > n // 2 or len(right) > n // 2:\n            return [-1]\n        ans = left + [i for i in range(a + 1, b)] + right\n        return ans if len(ans) == n else [-1]\n    else:\n        right = [i for i in range(1, b + 1)]\n        left = [j for j in range(a, n + 1)]\n        if len(right) == len(left) == n // 2:\n            return left + right\n        else:\n            return [-1]\nfor _ in range(int(input())):\n    print(*solve())", "for s in [*open(0)][1:]:\n    (n, a, b) = map(int, s.split())\n    (*r,) = range(n, 0, -1)\n    if a <= n // 2 < b:\n        (r[-a], r[-b]) = (r[-b], r[-a])\n    elif (n // 2 == a - 1 == b) < 1:\n        r = (-1,)\n    print(*r)", "for s in [*open(0)][1:]:\n    (n, a, b) = map(int, s.split())\n    r = (-1,)\n    if a <= n // 2 < b or n // 2 == a - 1 == b:\n        (*r,) = range(n, 0, -1)\n        (r[-b], r[-a]) = sorted((r[-a], r[-b]))\n    print(*r)", "T = int(input())\nfor _ in range(T):\n    (n, a, b) = map(int, input().split())\n    if 2 * a > n + 2 or 2 * b < n or (2 * a == n + 2 and 2 * b != n) or (2 * a != n + 2 and 2 * b == n):\n        print('-1')\n    else:\n        print(a, end=' ')\n        for i in range(n, 0, -1):\n            if i != a and i != b:\n                print(i, end=' ')\n        print(b)", "def specealpermution(n, left, right):\n    arr = [left]\n    for i in range(n, 0, -1):\n        if i != left and i != right:\n            arr.append(i)\n    arr.append(right)\n    if len(arr) == n and min(arr[0:n // 2]) == left and (max(arr[n // 2:n]) == right):\n        print(*arr)\n    else:\n        print(-1)\ntestCase = int(input())\nwhile testCase != 0:\n    testCase -= 1\n    (n, l, r) = map(int, input().split(' '))\n    specealpermution(n, l, r)", "def solve():\n    (n, mn, mx) = list(map(int, input().split()))\n    l = [i for i in range(1, n + 1) if i not in [mn, mx]][::-1]\n    l.insert(0, mn)\n    l.insert(n, mx)\n    if min(l[:n // 2]) == mn and max(l[n // 2:]) == mx:\n        print(*l)\n    else:\n        print(-1)\nt = int(input())\nfor _ in range(t):\n    solve()", "def main():\n    (n, a, b) = map(int, input().split())\n    ls = list(range(b + 1, n + 1))\n    if a not in ls:\n        ls.append(a)\n    rs = list(range(1, a))\n    if b not in rs:\n        rs.append(b)\n    ih = list(range(a + 1, b))\n    while ih and len(ls) < n >> 1:\n        ls.append(ih.pop())\n    rs.extend(ih)\n    if len(ls) == len(rs) == n >> 1:\n        print(*ls, *rs)\n    else:\n        print(-1)\nfor _ in range(int(input())):\n    main()", "x = int(input())\nwhile x > 0:\n    (a, b, c) = map(int, input().split())\n    if b > a / 2 + 1 or c < a / 2:\n        print(-1)\n    elif b < a / 2 + 1 and c <= a / 2:\n        print(-1)\n    elif c > a / 2 and b > a / 2:\n        print(-1)\n    elif b == a / 2 + 1 and c == a / 2:\n        ref = []\n        for i in range(1, a + 1):\n            ref.append(i)\n        ref.reverse()\n        print(*ref)\n    else:\n        ref = []\n        for i in range(1, a + 1):\n            ref.append(i)\n        (ref[b - 1], ref[c - 1]) = (ref[c - 1], ref[b - 1])\n        ref.reverse()\n        print(*ref)\n    x -= 1", "for s in [*open(0)][1:]:\n    (n, a, b) = map(int, s.split())\n    (*r,) = range(n, 0, -1)\n    if a <= n // 2 < b:\n        (r[-a], r[-b]) = (r[-b], r[-a])\n    elif (n // 2 == a - 1 == b) < 1:\n        r = (-1,)\n    print(*r)", "def specialPerm(n, a, b):\n    ans = []\n    if a == n // 2 + 1 and b == n // 2:\n        for i in range(n // 2):\n            ans.append(a + i)\n        for i in range(n // 2):\n            ans.append(i + 1)\n    elif a < b:\n        if b > n // 2 and a < n // 2 + 1:\n            ans.append(a)\n            for i in range(n - b):\n                ans.append(n - i)\n            for i in range(b - a):\n                ans.append(a + 1 + i)\n            for i in range(a - 1):\n                ans.append(i + 1)\n        else:\n            ans.append(-1)\n    else:\n        ans.append(-1)\n    return ans\nT = int(input())\nfor i in range(T):\n    l = list(map(int, input().split()))\n    print(*specialPerm(l[0], l[1], l[2]))", "for s in [*open(0)][1:]:\n    (n, a, b) = map(int, s.split())\n    (*r,) = range(n, 0, -1)\n    if a <= n // 2 < b:\n        (r[-a], r[-b]) = (r[-b], r[-a])\n    elif (n // 2 == a - 1 == b) < 1:\n        r = (-1,)\n    print(*r)", "t = int(input())\nfor i in range(t):\n    (n, a, b) = map(int, input().split())\n    k = n // 2\n    if a < b:\n        p = 1\n    else:\n        p = 0\n    if a - 1 > k - p:\n        print(-1)\n    elif n - b > k - p:\n        print(-1)\n    else:\n        q = [a]\n        for i in range(b + 1, n + 1):\n            if i != a:\n                q.append(i)\n        s = k - len(q)\n        for i in range(a + 1, a + s + 1):\n            q.append(i)\n        q.append(b)\n        for i in range(1, a):\n            if i != b:\n                q.append(i)\n        for i in range(a + s + 1, b):\n            q.append(i)\n        print(*q)", "import sys\nimport math\nfrom fractions import Fraction\ninput = sys.stdin.readline\nt = int(input())\nwhile t > 0:\n    inp = input().strip()\n    s = [int(x) for x in inp.split(' ')]\n    n = s[0]\n    a = s[1]\n    b = s[2]\n    if a > int(n / 2) + 1 or b < int(n / 2):\n        print('-1')\n    elif a < b and (a == int(n / 2) + 1 or b == int(n / 2)):\n        print('-1')\n    else:\n        ans = [0] * n\n        ans[0] = a\n        p = 1\n        c = n\n        while p < int(n / 2):\n            if c == b or c == a:\n                c -= 1\n                continue\n            ans[p] = c\n            c -= 1\n            p += 1\n        ans[p] = b\n        p += 1\n        while p < n:\n            if c == a or c == b:\n                c -= 1\n                continue\n            ans[p] = c\n            c -= 1\n            p += 1\n        print(' '.join([str(x) for x in ans]))\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    arr = [a]\n    for i in range(n, 0, -1):\n        if i != a and i != b:\n            arr.append(i)\n    arr.append(b)\n    if a < b:\n        if a <= n // 2 and b >= n // 2 + 1:\n            print(*arr)\n        else:\n            print(-1)\n    elif a <= n // 2 + 1 and b >= n // 2:\n        print(*arr)\n    else:\n        print(-1)", "def perm(length, l_min, r_max):\n    nums_less_than_l_min = list(range(1, l_min))\n    nums_greater_than_r_max = list(range(r_max + 1, length + 1))\n    nums_in_between = list(range(l_min + 1, r_max))\n    if l_min > r_max:\n        nums_less_than_l_min.remove(r_max)\n        nums_greater_than_r_max.remove(l_min)\n        nums_in_between = list(range(r_max + 1, l_min))\n    if len(nums_less_than_l_min) > length // 2 - 1 or len(nums_greater_than_r_max) > length // 2 - 1:\n        return [-1]\n    permutation = [l_min] + nums_greater_than_r_max + nums_in_between + nums_less_than_l_min + [r_max]\n    return permutation\ntest_cases = int(input())\nans_array = []\nfor i in range(test_cases):\n    (n, a, b) = input().split()\n    temp = perm(int(n), int(a), int(b))\n    ans_array.append(temp)\nfor i in range(test_cases):\n    print(*ans_array[i])", "class Solution:\n\n    def permutation(self, n, a, b):\n        ans = []\n        ans.append(a)\n        for i in range(n, 0, -1):\n            if i != a and i != b:\n                ans.append(i)\n        ans.append(b)\n        if len(ans) == n:\n            if min(ans[:n // 2]) == a and max(ans[n // 2:n]) == b:\n                print(*ans)\n                return ans\n        print(-1)\nobj = Solution()\nt = int(input())\nfor _ in range(t):\n    (n, a, b) = list(map(int, input().split()))\n    obj.permutation(n, a, b)", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    lst = []\n    if b < n // 2 or a > n // 2 + 1:\n        print(-1)\n    elif b == n // 2 and a != n // 2 + 1:\n        print(-1)\n    elif a == n // 2 + 1 and b != n // 2:\n        print(-1)\n    else:\n        lst.append(a)\n        for i in range(n, 0, -1):\n            if i == a:\n                continue\n            elif i == b:\n                continue\n            else:\n                lst.append(i)\n        lst.append(b)\n        print(*lst)", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    if a == n // 2 + 1 and b == n // 2:\n        ans = [i + 1 for i in range(n)][::-1]\n        print(*ans)\n        continue\n    elif a >= n // 2 + 1 or b <= n // 2:\n        print(-1)\n        continue\n    (aa, bb) = ([a], [b])\n    for i in range(b + 1, n + 1):\n        aa.append(i)\n    for i in range(1, a):\n        bb.append(i)\n    i = a + 1\n    while len(aa) != n // 2:\n        aa.append(i)\n        i += 1\n    while len(bb) != n // 2:\n        bb.append(i)\n        i += 1\n    aa.extend(bb)\n    print(*aa)", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n\n    def solve(n, a, b):\n        arr = [i for i in range(n, 0, -1)]\n        if a <= n // 2 and b > n // 2:\n            (arr[-a], arr[-b]) = (arr[-b], arr[-a])\n        elif (n // 2 == a - 1 == b) < 1:\n            return [-1]\n        return arr\n    print(*solve(n, a, b))", "t = int(input())\nfor i in range(t):\n    (n, a, b) = map(int, input().split())\n    p = [a]\n    for j in range(n, 0, -1):\n        if j != a and j != b:\n            p.append(j)\n    p.append(b)\n    if len(p) == n and min(p[0:n // 2]) == a and (max(p[n // 2:n]) == b):\n        print(*p)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    p = list(range(1, n + 1))\n    p.remove(a)\n    p.remove(b)\n    r = []\n    r.append(a)\n    r += p[(n - 1) // 2:]\n    r.append(b)\n    r += p[:(n - 1) // 2]\n    if min(r[:n // 2]) == a and max(r[n // 2:]) == b:\n        print(*r)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    if a > n // 2 + 1 - (b > n // 2 + 1) or b < n // 2 + (a < n // 2):\n        print(-1)\n    else:\n        w = list(set(range(1, n + 1)) - {a} - {b})\n        w = w[(n - 2) // 2:] + [a] + w[:(n - 2) // 2] + [b]\n        print(*w)", "for s in [*open(0)][1:]:\n    (n, a, b) = map(int, s.split())\n    (*r,) = range(n, 0, -1)\n    if a <= n // 2 < b:\n        (r[-a], r[-b]) = (r[-b], r[-a])\n    elif (n // 2 == a - 1 == b) < 1:\n        r = (-1,)\n    print(*r)", "for s in [*open(0)][1:]:\n    (n, a, b) = map(int, s.split())\n    (*r,) = range(n, 0, -1)\n    if a <= n // 2 < b:\n        (r[-a], r[-b]) = (r[-b], r[-a])\n    elif (n // 2 == a - 1 == b) < 1:\n        r = (-1,)\n    print(*r)", "def mi():\n    return map(int, input().split())\n\ndef li():\n    return list(mi())\n\ndef si():\n    return str(input())\n\ndef ni():\n    return int(input())\n\ndef find(x, m):\n    count = 0\n    while x % m == 0:\n        count += 1\n        x //= m\n    return (x, m ** count)\n\ndef check(a, m):\n    new = [[0, 0]]\n    for i in a:\n        temp = find(i, m)\n        if new[-1][0] != temp[0]:\n            new.append([temp[0], 0])\n        new[-1][1] += temp[1]\n    return new\nfor t in range(int(input())):\n    (n, a, b) = mi()\n    ans = list(range(n // 2 + 1, n + 1)) + list(range(1, n // 2 + 1))\n    mid = n // 2\n    if a == mid + 1 and b == mid:\n        print(*ans)\n        continue\n    if a > mid or b <= mid:\n        print(-1)\n    else:\n        x = ans.index(a)\n        y = ans.index(b)\n        (ans[x], ans[y]) = (ans[y], ans[x])\n        print(*ans)", "t = int(input())\nfor i in range(t):\n    (n, a, b) = map(int, input().split(' '))\n    A = []\n    B = [b]\n    for i in range(1, n + 1):\n        if len(B) == int(n / 2):\n            break\n        elif i >= b:\n            break\n        elif i != a:\n            B.append(i)\n    for i in range(1, n + 1):\n        if i not in B:\n            A.append(i)\n    if len(A) == int(n / 2) and len(B) == int(n / 2) and (min(A) == a) and (max(B) == b):\n        print(' '.join((str(i) for i in A + B)))\n    else:\n        print('-1')", "import math\nT = int(input())\nwhile T:\n    T -= 1\n    (n, a, b) = map(int, input().split())\n    r = list(range(1, a))\n    l = list(range(n, b, -1))\n    if b not in r:\n        r.append(b)\n    if a not in l:\n        l.append(a)\n    if len(r) > n // 2 or len(l) > n // 2:\n        print(-1)\n    else:\n        temp = (l, list(range(a + 1, b)), r)\n        for i in temp:\n            for j in i:\n                print(j, end=' ')\n        print()", "for i in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    ans = True\n    if a - b <= 1:\n        l = [a]\n        for i in range(b + 1, n + 1):\n            if i > a:\n                if len(l) >= n // 2:\n                    break\n                l.append(i)\n        if len(l) < n // 2:\n            for i in range(n // 2 - len(l)):\n                if b - i - 1 <= 0 or b - i - 1 <= a:\n                    ans = False\n                    break\n                l.append(b - i - 1)\n        s = set(list(range(1, n + 1)))\n        s2 = set(l)\n        l2 = list(s - s2)\n        if min(l) < a or max(l2) > b:\n            ans = False\n    else:\n        ans = False\n    if ans:\n        print(*l + l2)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    li = []\n    for i in range(n, 0, -1):\n        li.append(i)\n    if a == n // 2 + 1 and b == n // 2:\n        print(*li)\n    elif a <= n // 2 and b >= n // 2 + 1:\n        (li[n - b], li[n - a]) = (li[n - a], li[n - b])\n        print(*li)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    (n, a, b) = map(int, input().split(' '))\n    r = n // 2\n    arr = []\n    if b > a:\n        if r >= a and b >= r + 1:\n            arr.append(a)\n            for theta in range(b + 1, n + 1):\n                arr.append(theta)\n            for kappa in range(a + 1, a + b - r):\n                arr.append(kappa)\n            for beta in range(1, a):\n                arr.append(beta)\n            for delta in range(a + b - r, b + 1):\n                arr.append(delta)\n            print(*arr)\n        else:\n            print(-1)\n    elif a == r + 1 and b == r:\n        for gamma in range(r + 1, n + 1):\n            arr.append(gamma)\n        for alpha in range(1, r + 1):\n            arr.append(alpha)\n        print(*arr)\n    else:\n        print(-1)", "n = int(input())\nfor i in range(n):\n    (n, a, b) = map(int, input().split())\n    if a > (n + 2) / 2 or b < n / 2 or (b <= n / 2 and a < b) or (a >= (n + 2) / 2 and a < b):\n        print(-1)\n        continue\n    print(a, end=' ')\n    for j in range(n, 0, -1):\n        if j != a and j != b:\n            print(j, end=' ')\n    print(b)", "import math\nt = int(input())\nfor x in range(t):\n    a11 = input().split()\n    n = int(a11[0])\n    a = int(a11[1])\n    b = int(a11[2])\n    k = int(n / 2)\n    if a >= k + 2 or b <= k - 1:\n        print(-1)\n    else:\n        aaa = [x1 for x1 in range(1, k + 1)]\n        bbb = [x2 for x2 in range(k + 1, 2 * k + 1)]\n        if a == k + 1:\n            if b == k:\n                ccc = bbb + aaa\n                print(*ccc)\n            else:\n                print(-1)\n        elif b == k:\n            if a == k + 1:\n                ccc = bbb + aaa\n                print(*ccc)\n            else:\n                print(-1)\n        else:\n            aaa += [b]\n            bbb += [a]\n            bbb.remove(b)\n            aaa.remove(a)\n            if len(bbb) != k or len(aaa) != k:\n                print(-1)\n            else:\n                ccc = bbb + aaa\n                print(*ccc)", "for _ in range(int(input())):\n    (n, a, b) = input().split()\n    n = int(n)\n    a = int(a)\n    b = int(b)\n    x = [i for i in range(1, n + 1)]\n    if a <= n // 2 and b <= n // 2 or (a > n // 2 and b > n // 2) or a > n // 2 + 1 or (b < n // 2):\n        print(-1)\n        continue\n    if n != b:\n        (x[a - 1], x[-1]) = (x[-1], x[a - 1])\n        (x[b - 1], x[0]) = (x[0], x[b - 1])\n    else:\n        (x[a - 1], x[-1]) = (x[-1], x[a - 1])\n        (x[a - 1], x[0]) = (x[0], x[a - 1])\n    x.reverse()\n    if x[0] == min(x[:n // 2]) and x[-1] == max(x[n // 2:]):\n        print(*x)\n        continue\n    elif n > 3:\n        c = x.index(min(x[1:n // 2]))\n        d = x.index(max(x[n // 2:n - 1]))\n        (x[c], x[d]) = (x[d], x[c])\n        print(*x)", "def sptfn(n, a, b):\n    ctr = max(a - 1, n - b)\n    if ctr > n // 2 - int(a - 1 < n // 2 or b > n // 2):\n        return [-1]\n    (out, x, y) = (list(range(1, n + 1)), 0, n - 1)\n    while ctr:\n        if out[x] == a:\n            x += 1\n        if out[y] == b:\n            y -= 1\n        (out[x], out[y]) = (out[y], out[x])\n        x += 1\n        y -= 1\n        ctr -= 1\n    return out\nfor i in range(int(input())):\n    print(*sptfn(*map(int, input().split())), sep=' ')", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    l1 = [a]\n    l2 = [b]\n    ex = []\n    flag = True\n    for i in range(1, n + 1):\n        if i == a or i == b:\n            continue\n        elif i < b and i > a:\n            ex.append(i)\n        elif i < b and i < a:\n            l2.append(i)\n        elif i > b and i > a:\n            l1.append(i)\n        elif i > b and i < a:\n            flag = False\n            break\n    if flag == False or len(l1) > n / 2 or len(l2) > n / 2:\n        print(-1)\n    else:\n        print(*l1, *ex, *l2)", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    p = n // 2\n    s = (n - 2) // 2\n    c = (n + 1) / 2\n    ans = []\n    arr1 = []\n    arr2 = []\n    arr = [i for i in range(1, n + 1)]\n    mx = max(arr)\n    mn = min(arr)\n    if n > 2 and (a > c and b > c or (a < c and b < c) or a == mx or (b == mn)):\n        print(-1)\n    else:\n        arr.remove(a)\n        arr.remove(b)\n        arr1 = arr[s:]\n        arr2 = arr[:s]\n        for it in arr1:\n            if it < a:\n                arr1.remove(it)\n        for it in arr2:\n            if it > b:\n                arr2.remove(it)\n        ans = [a] + arr1 + [b] + arr2\n        if len(ans) == n:\n            print(*ans)\n        else:\n            print(-1)", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    (l, r) = ([i for i in range(b + 1, n + 1)], [i for i in range(1, a)])\n    if a not in l:\n        l.append(a)\n    if b not in r:\n        r.append(b)\n    if len(l) > n // 2 or len(r) > n // 2:\n        print(-1)\n        continue\n    ans = l + [i for i in range(a + 1, b)] + r\n    print(*ans)", "for i in range(int(input())):\n    (n, a, b) = list(map(int, input().split(' ')))\n    z = [x for x in range(n, 0, -1)]\n    z = list(filter(lambda x: x != a and x != b, z))\n    z = [a] + z + [b]\n    if min(z[:int(n / 2)]) == a and b == max(z[int(n / 2):]):\n        print(*z)\n    else:\n        print('-1')", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    ans = [i for i in range(n, 0, -1)]\n    if a < b:\n        for i in range(n):\n            if ans[i] == b:\n                ans[i] = a\n            elif ans[i] == a:\n                ans[i] = b\n    if min(ans[:n // 2]) == a and max(ans[n // 2:]) == b:\n        print(*ans)\n    else:\n        print(-1)", "tst = int(input())\nfor i in range(tst):\n    (n, a, b) = map(int, input().split())\n    c = [a]\n    for i in range(n, 0, -1):\n        if i != a and i != b:\n            c.append(i)\n    c.append(b)\n    if len(c) == n and min(c[0:n // 2]) == a and (max(c[n // 2:n]) == b):\n        print(*c)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    w = [i for i in range(n, 0, -1)]\n    del w[w.index(a)]\n    del w[w.index(b)]\n    c = [a] + w + [b]\n    if max(c[n // 2:]) == b and min(c[:n // 2]) == a:\n        for i in range(len(c)):\n            print(c[i], end=' ')\n        print('\\n')\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    ans = [a]\n    ans = [a] + [i for i in range(n, 0, -1) if i != a and i != b] + [b]\n    print(*ans) if len(ans) == n and min(ans[:n // 2]) == a and (max(ans[n // 2:]) == b) else print(-1)", "def solve():\n    (n, a, b) = list(map(int, input().split()))\n    (left, right) = (set(), set())\n    left.add(a)\n    right.add(b)\n    for num in range(a - 1, 0, -1):\n        right.add(num)\n    for num in range(b + 1, n + 1):\n        left.add(num)\n    if len(left) > n // 2 or len(right) > n // 2:\n        return [-1]\n    (leftSize, rightSize) = (len(left), len(right))\n    for num in range(min(a, b) + 1, max(a, b)):\n        if leftSize < n // 2:\n            left.add(num)\n            leftSize += 1\n        else:\n            right.add(num)\n            rightSize += 1\n    return [num for num in left] + [num for num in right]\nfor i in range(int(input())):\n    print(*solve())"]