["import sys, math, itertools, functools, collections\ninput = sys.stdin.readline\n\ndef solve():\n    (n, m) = map(int, input().split(' '))\n    a = list(map(int, input().split(' ')))\n    right = [0] * n\n    left = [0] * n\n    x = 0\n    for i in range(1, n):\n        if a[i - 1] > a[i]:\n            x += a[i - 1] - a[i]\n        right[i] = x\n    x = 0\n    for i in range(n - 2, -1, -1):\n        if a[i + 1] > a[i]:\n            x += a[i + 1] - a[i]\n        left[i] = x\n    for i in range(m):\n        (p, q) = map(int, input().split(' '))\n        if p < q:\n            print(right[q - 1] - right[p - 1])\n        else:\n            print(left[q - 1] - left[p - 1])\nsolve()", "import sys\ninput = sys.stdin.readline\n(n, m) = map(int, input().split())\nboard = list(map(int, input().split()))\nboard = [0] + board\ncumul_forward = [0]\ncumul_backward = [0]\nfor (a, b) in zip(board[:-1], board[1:]):\n    if a - b < 0:\n        cumul_backward.append(cumul_backward[-1] + b - a)\n        cumul_forward.append(cumul_forward[-1])\n    else:\n        cumul_backward.append(cumul_backward[-1])\n        cumul_forward.append(cumul_forward[-1] + a - b)\nfor _ in range(m):\n    (st, ed) = map(int, input().split())\n    if st < ed:\n        print(cumul_forward[ed] - cumul_forward[st])\n    else:\n        print(cumul_backward[st] - cumul_backward[ed])", "input = __import__('sys').stdin.readline\n\ndef solve():\n    (n, m) = map(int, input().split())\n    a = [0] + list(map(int, input().strip().split())) + [0]\n    prefix = [0] * (n + 2)\n    for i in range(2, n + 1):\n        prefix[i] = prefix[i - 1] + max(0, a[i - 1] - a[i])\n    suffix = [0] * (n + 2)\n    for i in range(n - 1, 0, -1):\n        suffix[i] = suffix[i + 1] + max(0, a[i + 1] - a[i])\n    for _ in range(m):\n        (s, t) = map(int, input().split())\n        if s < t:\n            print(prefix[t] - prefix[s])\n        else:\n            print(suffix[t] - suffix[s])\nsolve()", "def main():\n    (n, m) = map(int, input().split())\n    nums = list(map(int, input().split()))\n    (pos, neg) = ([0], [0])\n    for i in range(n - 1):\n        (a, b) = (nums[i], nums[i + 1])\n        pos.append(damage(a, b) + pos[i])\n        neg.append(damage(b, a) + neg[i])\n    res = []\n    for i in range(m):\n        (s, t) = [int(i) - 1 for i in input().split()]\n        if s < t:\n            res.append(str(pos[t] - pos[s]))\n        else:\n            res.append(str(neg[s] - neg[t]))\n    print('\\n'.join(res))\n\ndef damage(a, b):\n    return a - b if a > b else 0\nmain()", "import sys\ninput = sys.stdin.readline\n(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nb = [0] * n\nc = [0] * n\np = 0\nfor i in range(1, n):\n    if a[i] < a[i - 1]:\n        p += a[i - 1] - a[i]\n        b[i] = p\n    else:\n        b[i] = p\np = 0\nfor i in range(n - 2, -1, -1):\n    if a[i] < a[i + 1]:\n        p += a[i + 1] - a[i]\n        c[i] = p\n    else:\n        c[i] = p\nfor i in range(m):\n    (s, t) = map(int, input().split())\n    if s <= t:\n        print(b[t - 1] - b[s - 1])\n    else:\n        print(c[t - 1] - c[s - 1])", "import sys\ninput = sys.stdin.readline\n(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nli1 = [0]\nli2 = [0]\nfor i in range(n - 1):\n    li1.append(li1[i] + max(0, a[i] - a[i + 1]))\n    li2.append(li2[i] + max(0, a[i + 1] - a[i]))\nfor i in range(m):\n    (i, j) = map(int, input().split())\n    if i < j:\n        print(li1[j - 1] - li1[i - 1])\n    else:\n        print(li2[i - 1] - li2[j - 1])", "import math\nimport sys\ninput = sys.stdin.readline\n(n, m) = map(int, input().split())\narr = list(map(int, input().split()))\narr = [0] + arr + [0]\npredmg = [0 if arr[i] < arr[i + 1] else arr[i] - arr[i + 1] for i in range(n)]\npresumdmg = [0] * n\nfor i in range(1, n):\n    presumdmg[i] = presumdmg[i - 1] + predmg[i]\npostdmg = [0 if arr[i + 1] < arr[i] else arr[i] - arr[i + 1] for i in range(1, n + 1)]\npostsumdmg = [0] * n\nfor i in range(n - 2, -1, -1):\n    postsumdmg[i] = postsumdmg[i + 1] + postdmg[i]\nfor i in range(m):\n    (s, t) = map(int, input().split())\n    if s <= t:\n        print(presumdmg[t - 1] - presumdmg[s - 1])\n    else:\n        print(postsumdmg[s - 1] - postsumdmg[t - 1])", "from sys import stdin\nrd = stdin.readline\n(n, m) = map(int, rd().split())\na = list(map(int, rd().split()))\nb = [0] + [max(0, a[i - 1] - a[i]) for i in range(1, n)]\nc = [0] + [max(0, a[i] - a[i - 1]) for i in range(1, n)]\nfor i in range(1, n):\n    b[i] += b[i - 1]\n    c[i] += c[i - 1]\nfor _ in range(m):\n    (s, t) = map(int, rd().split())\n    if s <= t:\n        print(b[t - 1] - b[s - 1])\n    else:\n        print(c[s - 1] - c[t - 1])", "import sys\nprintf = sys.stdout.write\n\ndef intput():\n    return int(sys.stdin.readline())\n\ndef get_int():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_lis():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_liss():\n    return sys.stdin.readline().split()\n\ndef get_ints():\n    return sys.stdin.readline().split()\n\ndef get_str():\n    return sys.stdin.readline().strip()\n\ndef pop_zeros(items):\n    while items[-1] == 0:\n        items.pop()\nfrom collections import defaultdict\nimport math\n(n, m) = get_int()\nlf = [0]\nlr = [0]\ncf = 0\ncr = 0\nl = get_lis()\nfor i in range(n - 1):\n    if l[i + 1] < l[i]:\n        cf += l[i] - l[i + 1]\n        lf.append(cf)\n    else:\n        lf.append(cf)\n    if l[n - i - 1] > l[n - i - 2]:\n        cr += l[n - i - 1] - l[n - i - 2]\n        lr.append(cr)\n    else:\n        lr.append(cr)\nlr.reverse()\nfor i in range(m):\n    (s, t) = get_int()\n    if s < t:\n        printf(str(lf[t - 1] - lf[s - 1]))\n        printf('\\n')\n    else:\n        printf(str(lr[t - 1] - lr[s - 1]))\n        printf('\\n')", "x = input().split()\n(n, m) = (int(x[0]), int(x[1]))\ndatan = [int(i) for i in input().split()]\ndatam = []\nfor i in range(m):\n    x = input().split()\n    (s, j) = (int(x[0]), int(x[1]))\n    datam.append((s, j))\n\ndef solve(n, m, datan, datam):\n    go_right = [0] * n\n    sums = 0\n    for i in range(1, n):\n        if datan[i] < datan[i - 1]:\n            sums += datan[i - 1] - datan[i]\n        go_right[i] = sums\n    go_left = [0] * n\n    sums = 0\n    for i in range(n - 2, -1, -1):\n        if datan[i] < datan[i + 1]:\n            sums += datan[i + 1] - datan[i]\n        go_left[i] = sums\n    for (s, j) in datam:\n        if s > j:\n            print(go_left[j - 1] - go_left[s - 1])\n        else:\n            print(go_right[j - 1] - go_right[s - 1])\nsolve(n, m, datan, datam)", "import os.path\nfrom math import gcd, floor, ceil\nfrom collections import *\nimport sys\nmod = 1000000007\nINF = float('inf')\n\ndef st():\n    return list(sys.stdin.readline().strip())\n\ndef li():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef mp():\n    return map(int, sys.stdin.readline().split())\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef pr(n):\n    return sys.stdout.write(str(n) + '\\n')\n\ndef prl(n):\n    return sys.stdout.write(str(n) + ' ')\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nt = 1\nfor _ in range(1):\n    (n, m) = mp()\n    l = li()\n    l1 = [0]\n    l2 = [0]\n    s = 0\n    for i in range(n - 1):\n        if l[i + 1] - l[i] < 0:\n            s += abs(l[i + 1] - l[i])\n        l1.append(s)\n    s = 0\n    for i in range(n - 1, 0, -1):\n        if l[i] - l[i - 1] > 0:\n            s += abs(l[i] - l[i - 1])\n        l2.append(s)\n    l2.reverse()\n    for i in range(m):\n        (a, b) = mp()\n        if a <= b:\n            pr(l1[b - 1] - l1[a - 1])\n        else:\n            pr(abs(l2[b - 1] - l2[a - 1]))", "import io, os, sys\ninput = sys.stdin.readline\n(n, m) = map(int, input().split())\ncols = list(map(int, input().split()))\ncudlr = [0 for i in range(n)]\ncudrl = [0 for i in range(n)]\nfor i in range(1, n):\n    cudlr[i] = cudlr[i - 1] + max(0, cols[i - 1] - cols[i])\n    cudrl[n - i - 1] = cudrl[n - i] + max(0, cols[n - i] - cols[n - i - 1])\nfor q in range(m):\n    (s, t) = map(int, input().split())\n    s -= 1\n    t -= 1\n    if s < t:\n        print(cudlr[t] - cudlr[s])\n    else:\n        print(cudrl[t] - cudrl[s])", "def solve(n, m, l, mat):\n    res1 = [0] * (n + 1)\n    k = 0\n    for i in range(1, n):\n        if l[i - 1] > l[i]:\n            k += l[i - 1] - l[i]\n        res1[i + 1] = k\n    res2 = [0] * (n + 1)\n    k = 0\n    for i in range(n - 1, 0, -1):\n        if l[i] > l[i - 1]:\n            k += l[i] - l[i - 1]\n        res2[i] = k\n    for i in mat:\n        if i[0] > i[1]:\n            print(res2[i[1]] - res2[i[0]])\n        else:\n            print(res1[i[1]] - res1[i[0]])\n(n, m) = map(int, input().split())\nl = list(map(int, input().split()))\nmat = []\nfor i in range(m):\n    (x, y) = map(int, input().split())\n    mat.append([x, y])\nsolve(n, m, l, mat)", "import sys\ninput = lambda : sys.stdin.readline().strip()\n(a, b) = map(int, input().split())\nm = list(map(int, input().split()))\ndc = {1: 0}\ndg = {a: 0}\nl = []\nr = []\nfor i in range(1, a):\n    g = m[i - 1] - m[i]\n    if g > 0:\n        v = g\n    else:\n        v = 0\n    dc[i + 1] = dc[i] + v\n    l.append(v)\nfor i in range(a - 1, 0, -1):\n    g = m[i] - m[i - 1]\n    if g > 0:\n        n = g\n    else:\n        n = 0\n    dg[i] = dg[i + 1] + n\nfor _ in range(b):\n    (x, y) = map(int, input().split())\n    if x <= y:\n        print(abs(dc[y] - dc[x]))\n    else:\n        print(abs(dg[x] - dg[y]))", "def read_int() -> int:\n    return int(input().strip())\n\ndef read_ints_map() -> map:\n    return map(int, input().strip().split())\n\ndef read_ints_list() -> [int]:\n    return [*read_ints_map()]\ntry:\n    FIN = open('./input.txt')\nexcept:\n    FIN = open(0)\nR = lambda : map(int, next(FIN).split())\n(n, m) = R()\na = [*R()]\nd_forward = [0] * n\nd_backward = [0] * n\nfor i in range(n - 1):\n    diff = a[i + 1] - a[i]\n    d_forward[i + 1] = d_forward[i]\n    if diff < 0:\n        d_forward[i + 1] = d_forward[i] - diff\n    else:\n        d_forward[i + 1] = d_forward[i]\n    j = n - 1 - i\n    diff = a[j] - a[j - 1]\n    d_backward[i + 1] = d_backward[i]\n    if diff > 0:\n        d_backward[i + 1] = d_backward[i] + diff\n    else:\n        d_backward[i + 1] = d_backward[i]\nfor _ in range(m):\n    (s, t) = R()\n    if s < t:\n        (s, t) = (s - 1, t - 1)\n        d = d_forward\n    else:\n        (s, t) = (n - s, n - t)\n        d = d_backward\n    print(d[t] - d[s])", "def solve():\n    (n, m) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    right = [0 for _ in range(n)]\n    left = [0 for _ in range(n)]\n    for i in range(n - 1):\n        right[i + 1] = right[i] + max(a[i] - a[i + 1], 0)\n    for i in range(n - 1, 0, -1):\n        left[i - 1] = left[i] + max(a[i] - a[i - 1], 0)\n    solution = [0 for _ in range(m)]\n    for i in range(m):\n        (p, q) = [int(x) for x in input().split()]\n        if p < q:\n            solution[i] = right[q - 1] - right[p - 1]\n        else:\n            solution[i] = left[q - 1] - left[p - 1]\n    for sol in solution:\n        print(sol)\nsolve()", "arr1 = list(map(int, input().split()))\narr2 = list(map(int, input().split()))\narr3 = []\nfor i in range(arr1[1]):\n    arr3.append(list(map(int, input().split())))\narr4 = []\narr5 = []\ntemp = arr2[0]\nans = 0\nfor i in arr2:\n    if i < temp:\n        ans += temp - i\n    arr4.append(ans)\n    temp = i\ntemp = arr2[len(arr2) - 1]\nans = 0\nfor i in range(len(arr2) - 1, -1, -1):\n    if arr2[i] < temp:\n        ans += temp - arr2[i]\n    arr5.append(ans)\n    temp = arr2[i]\narr5.sort(reverse=True)\nfor i in arr3:\n    if i[0] < i[1]:\n        print(arr4[i[1] - 1] - arr4[i[0] - 1])\n    if i[0] > i[1]:\n        print(arr5[i[1] - 1] - arr5[i[0] - 1])", "from traceback import print_list\ninputNM = list(map(int, input().split()))\nn = inputNM[0]\nm = inputNM[1]\na = list(map(int, input().split()))\ns = list()\nt = list()\nfor i in range(m):\n    readST = list(map(int, input().split()))\n    s.append(readST[0])\n    t.append(readST[1])\nincrease = list()\nsum = 0\nincrease.append(0)\nfor i in range(1, n):\n    if a[i - 1] > a[i]:\n        sum += a[i - 1] - a[i]\n        increase.append(sum)\n    else:\n        increase.append(sum)\nsum = 0\nincrease_ulta = list()\nfor i in range(n):\n    increase_ulta.append(0)\nfor i in range(n - 2, -1, -1):\n    if a[i] < a[i + 1]:\n        sum += -a[i] + a[i + 1]\n        increase_ulta[i] = sum\n    else:\n        increase_ulta[i] = sum\nfor i in range(m):\n    if s[i] > t[i]:\n        ans = -increase_ulta[s[i] - 1] + increase_ulta[t[i] - 1]\n        print(ans)\n    else:\n        ans = increase[t[i] - 1] - increase[s[i] - 1]\n        print(ans)", "(n, m) = map(int, input().split())\nmass = list(map(int, input().split()))\nmass_2 = [0 for _ in range(n)]\nmass_3 = [0 for _ in range(n)]\nfor i in range(1, n):\n    mass_2[i] = mass_2[i - 1] + max(mass[i - 1] - mass[i], 0)\nfor i in range(n - 2, -1, -1):\n    mass_3[i] = mass_3[i + 1] + max(mass[i + 1] - mass[i], 0)\ns = ''\nfor _ in range(m):\n    (p, q) = map(int, input().split())\n    if p < q:\n        s += str(mass_2[q - 1] - mass_2[p - 1])\n    else:\n        s += str(mass_3[q - 1] - mass_3[p - 1])\n    s += '\\n'\nprint(s[:-1])", "import math\nimport collections\nimport itertools\nimport functools\n(x, y) = map(int, input().split(' '))\na = list(map(int, input().split(' ')))\nb = []\nfor _ in range(y):\n    b.append(list(map(int, input().split(' '))))\npref = [0] * x\nsuff = [0] * x\nfor i in range(1, x):\n    if a[i] < a[i - 1]:\n        suff[i] = suff[i - 1] + a[i - 1] - a[i]\n    else:\n        suff[i] = suff[i - 1]\nfor i in range(1, x):\n    if a[i] > a[i - 1]:\n        pref[i] = pref[i - 1] + a[i] - a[i - 1]\n    else:\n        pref[i] = pref[i - 1]\nfor (i, j) in b:\n    if i < j:\n        print(suff[j - 1] - suff[i - 1])\n    else:\n        print(pref[i - 1] - pref[j - 1])", "(n, m) = map(int, input().split(' '))\na = list(map(int, input().split(' ')))\nq = []\nfor i in range(m):\n    q.append(list(map(int, input().split(' '))))\nb = [0]\nfor i in range(1, len(a)):\n    if a[i - 1] >= a[i]:\n        b.append(b[i - 1] + a[i - 1] - a[i])\n    else:\n        b.append(b[i - 1])\na.reverse()\nc = [0]\nfor i in range(1, len(a)):\n    if a[i - 1] >= a[i]:\n        c.append(c[i - 1] + a[i - 1] - a[i])\n    else:\n        c.append(c[i - 1])\nc.reverse()\nfor i in range(len(q)):\n    if q[i][0] <= q[i][1]:\n        print(b[q[i][1] - 1] - b[q[i][0] - 1])\n    else:\n        print(c[q[i][1] - 1] - c[q[i][0] - 1])", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nlst = []\nfor i in range(0, m):\n    (x, y) = map(int, input().split())\n    lst.append([x, y])\ndp1 = [0 for i in range(0, n)]\ndp2 = [0 for i in range(0, n)]\nfor i in range(1, n):\n    if a[i] < a[i - 1]:\n        dp1[i] = dp1[i - 1] + a[i - 1] - a[i]\n    else:\n        dp1[i] = dp1[i - 1]\nfor i in range(n - 2, -1, -1):\n    if a[i + 1] > a[i]:\n        dp2[i] = dp2[i + 1] + a[i + 1] - a[i]\n    else:\n        dp2[i] = dp2[i + 1]\nfor item in lst:\n    if item[0] < item[1]:\n        ans = dp1[item[1] - 1] - dp1[item[0] - 1]\n    else:\n        ans = dp2[item[1] - 1] - dp2[item[0] - 1]\n    print(ans)", "(n, m) = [int(i) for i in input().split()]\narr = [int(i) for i in input().split()]\nquests = []\nfor _ in range(m):\n    (s, t) = [int(i) for i in input().split()]\n    quests.append((s, t))\ncost_left = [0]\nfor i in range(0, len(arr) - 1):\n    cost = arr[i] - arr[i + 1] if arr[i] > arr[i + 1] else 0\n    cost_left.append(cost)\ncost_right = [0]\nfor i in range(len(arr) - 2, -1, -1):\n    cost = arr[i + 1] - arr[i] if arr[i + 1] > arr[i] else 0\n    cost_right.append(cost)\ncost_right = cost_right[::-1]\ncumsum_left = []\ncurr = 0\nfor n in cost_left:\n    cumsum_left.append(curr + n)\n    curr = cumsum_left[-1]\ncumsum_right = []\ncurr = 0\nfor n in cost_right[::-1]:\n    cumsum_right.append(curr + n)\n    curr = cumsum_right[-1]\ncumsum_right = cumsum_right[::-1]\nfor q in quests:\n    (s, t) = q\n    if s < t:\n        print(cumsum_left[t - 1] - cumsum_left[s - 1])\n    else:\n        print(cumsum_right[t - 1] - cumsum_right[s - 1])", "(n, m) = map(int, input().split())\nh = list(map(int, input().split()))\nq = []\nfor i in range(m):\n    q.append(list(map(int, input().split())))\nfall_dmg = [0]\nfall_dmg2 = [0]\nfor column in range(n - 1):\n    fall_dmg.append(fall_dmg[column] + max(0, h[column] - h[column + 1]))\n    fall_dmg2.append(fall_dmg2[column] + max(0, h[column + 1] - h[column]))\nfor i in q:\n    (s, t) = (i[0], i[1])\n    if s < t:\n        dmg = fall_dmg[t - 1] - fall_dmg[s - 1]\n    elif s > t:\n        dmg = fall_dmg2[s - 1] - fall_dmg2[t - 1]\n    print(dmg)", "out = []\n(n, m) = map(int, input().split())\na = [int(i) for i in input().split()]\npre = [0] * n\npst = [0] * n\nfor i in range(n - 1):\n    pre[i + 1] = pre[i] + max(0, a[i] - a[i + 1])\n    pst[n - i - 2] = pst[n - i - 1] + max(0, a[n - i - 1] - a[n - i - 2])\nfor j in range(m):\n    (s, t) = map(int, input().split())\n    s -= 1\n    t -= 1\n    ans = 0\n    if t > s:\n        ans = pre[t] - pre[s]\n    else:\n        ans = pst[t] - pst[s]\n    out.append(ans)\nfor i in out:\n    print(i)", "(n, m) = list(map(int, input().split()))\na = list(map(int, input().split()))\n(l, r) = ([], [])\nfor p in range(m):\n    (c, d) = list(map(int, input().split()))\n    l.append(c)\n    r.append(d)\n(p, s) = ([0] * n, [0] * n)\n(p[0], s[n - 1]) = (0, 0)\nfor i in range(1, n):\n    if a[i] < a[i - 1]:\n        p[i] = p[i - 1] + a[i - 1] - a[i]\n    else:\n        p[i] = p[i - 1]\nfor i in range(n - 2, -1, -1):\n    if a[i] < a[i + 1]:\n        s[i] = s[i + 1] + a[i + 1] - a[i]\n    else:\n        s[i] = s[i + 1]\nfor i in range(m):\n    (a, b) = (r[i] - 1, l[i] - 1)\n    if l[i] < r[i]:\n        print(p[a] - p[b])\n    else:\n        print(s[a] - s[b])", "(m, n) = map(int, input().split())\nl1 = list(map(int, input().split()))\nl2 = []\nfor i in range(n):\n    l = list(map(int, input().split()))\n    l2.append(l)\ndp1 = [0]\ndp2 = [0]\nfor i in range(1, len(l1)):\n    if l1[i] < l1[i - 1]:\n        dp1.append(dp1[i - 1] + l1[i - 1] - l1[i])\n    else:\n        dp1.append(dp1[i - 1])\nfor i in range(1, len(l1)):\n    if l1[m - i] > l1[m - i - 1]:\n        dp2.append(dp2[i - 1] + l1[m - i] - l1[m - i - 1])\n    else:\n        dp2.append(dp2[i - 1])\nfor i in range(n):\n    x = l2[i][0]\n    y = l2[i][1]\n    sum = 0\n    if y > x:\n        print(dp1[y - 1] - dp1[x - 1])\n    else:\n        print(dp2[m - y] - dp2[m - x])", "(n, m) = map(int, input().split())\nx = list(map(int, input().split()))\ny = []\nfor i in range(0, m):\n    y.append(list(map(int, input().split())))\nsize = len(x)\na = [0] * n\ndif = 0\nadd = 0\nfor f in range(1, size):\n    add = add + max(0, x[f - 1] - x[f])\n    a[f] = add\nr = [0] * n\ndif = 0\nadd = 0\nfor f in range(size - 2, -1, -1):\n    add = add + max(0, x[f + 1] - x[f])\n    r[f] = add\nr.reverse()\nfor i in y:\n    p = 0\n    s = i[0]\n    t = i[1]\n    if s < t:\n        p = a[t - 1] - a[s - 1]\n    else:\n        p = r[n - t] - r[n - s]\n    print(p)", "(n, m) = map(int, input().split())\nx = list(map(int, input().split()))\ny = []\nfor i in range(0, m):\n    y.append(list(map(int, input().split())))\nsize = len(x)\na = [0] * n\ndif = 0\nadd = 0\nfor f in range(1, size):\n    add = add + max(0, x[f - 1] - x[f])\n    a[f] = add\nr = [0] * n\ndif = 0\nadd = 0\nfor f in range(size - 2, -1, -1):\n    add = add + max(0, x[f + 1] - x[f])\n    r[f] = add\nr.reverse()\nfor i in y:\n    p = 0\n    s = i[0]\n    t = i[1]\n    if s < t:\n        p = a[t - 1] - a[s - 1]\n    else:\n        p = r[n - t] - r[n - s]\n    print(p)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nq = []\nfor i in range(m):\n    (aux1, aux2) = list(map(int, input().split()))\n    q.append([aux1, aux2])\ndp1 = []\ndp2 = []\nfor i in range(n):\n    dp1.append(0)\nfor i in range(1, n):\n    if a[i] < a[i - 1]:\n        dp1[i] = a[i - 1] - a[i]\n    dp1[i] += dp1[i - 1]\nfor i in range(n):\n    dp2.append(0)\nfor i in range(1, n):\n    if a[i] > a[i - 1]:\n        dp2[i] = a[i] - a[i - 1]\n    dp2[i] += dp2[i - 1]\nfor par in q:\n    if par[0] < par[1]:\n        print(dp1[par[1] - 1] - dp1[par[0] - 1])\n    else:\n        print(dp2[par[0] - 1] - dp2[par[1] - 1])", "tn__ = [int(i) for i in list(input().split(' '))]\nhtLst = [int(i) for i in list(input().split(' '))]\nqstLst = []\nfor i in range(0, tn__[1]):\n    mv = [int(i) for i in list(input().split(' '))]\n    qstLst.append(mv)\nhtLst__1 = [0]\nfor i in range(0, len(htLst) - 1):\n    x = (htLst[i] - htLst[i + 1], 0)[htLst[i] < htLst[i + 1]]\n    htLst__1.append(htLst__1[i] + x)\nhtLst__2 = [0] * (len(htLst) + 1)\nfor i in range(len(htLst) - 1, 0, -1):\n    x = (0, htLst[i] - htLst[i - 1])[htLst[i] > htLst[i - 1]]\n    htLst__2[i] = htLst__2[i + 1] + x\nfor i in qstLst:\n    if i[0] < i[1]:\n        x = htLst__1[i[1] - 1] - htLst__1[i[0] - 1]\n    else:\n        x = htLst__2[i[1]] - htLst__2[i[0]]\n    print(x)", "(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nl = []\nd = dict()\nfor _ in range(k):\n    (x, y) = map(int, input().split())\n    l.append([x, y])\nd[0] = 0\ncount = 0\nd1 = dict()\nd1[n - 1] = 0\ncount1 = 0\nfor i in range(1, len(a)):\n    if a[i] < a[i - 1]:\n        count += a[i - 1] - a[i]\n        d[i] = count\n    else:\n        d[i] = count\nfor i in range(len(a) - 2, -1, -1):\n    if a[i] < a[i + 1]:\n        count1 += a[i + 1] - a[i]\n        d1[i] = count1\n    else:\n        d1[i] = count1\nfor i in range(len(l)):\n    if l[i][0] <= l[i][1]:\n        x = d[l[i][0] - 1]\n        y = d[l[i][1] - 1]\n        print(y - x)\n    else:\n        x = d1[l[i][0] - 1]\n        y = d1[l[i][1] - 1]\n        print(y - x)", "def inp_a():\n    return [int(x) for x in input().split()]\n\ndef inp_s(k):\n    arr = []\n    for i in range(k):\n        arr.append(inp_a())\n    return arr\n\ndef help(s, t):\n    if s < t:\n        return forward[t] - forward[s]\n    else:\n        return backward[t - 1] - backward[s - 1]\n(n, m) = inp_a()\na = inp_a()\nquest = inp_s(m)\nforward = [0, 0]\nbackward = []\nfor i in range(1, n):\n    if a[i] < a[i - 1]:\n        forward.append(a[i - 1] - a[i])\n        backward.append(0)\n    else:\n        backward.append(abs(a[i - 1] - a[i]))\n        forward.append(0)\nbackward.append(0)\nfor i in range(1, n + 1):\n    forward[i] += forward[i - 1]\nfor i in range(n - 2, -1, -1):\n    backward[i] += backward[i + 1]\nfor i in range(m):\n    print(help(quest[i][0], quest[i][1]))", "(n, m) = map(int, input().split())\nmass = list(map(int, input().split()))\nmass_2 = [0 for _ in range(n)]\nmass_3 = [0 for _ in range(n)]\nfor i in range(1, n):\n    mass_2[i] = mass_2[i - 1] + max(mass[i - 1] - mass[i], 0)\nfor i in range(n - 2, -1, -1):\n    mass_3[i] = mass_3[i + 1] + max(mass[i + 1] - mass[i], 0)\ns = ''\nzap = [list(map(int, input().split())) for _ in range(m)]\nfor i in zap:\n    (p, q) = i\n    if p < q:\n        s += str(mass_2[q - 1] - mass_2[p - 1])\n    else:\n        s += str(mass_3[q - 1] - mass_3[p - 1])\n    s += '\\n'\nprint(s)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nquests = [list(map(int, input().split())) for x in range(m)]\ndmg = [0 for i in range(n)]\nfor x in range(1, n):\n    dmg[x] += dmg[x - 1]\n    if a[x] < a[x - 1]:\n        dmg[x] += a[x - 1] - a[x]\nrevDmg = [0 for i in range(n)]\nfor x in range(n - 2, -1, -1):\n    revDmg[x] += revDmg[x + 1]\n    if a[x] < a[x + 1]:\n        revDmg[x] += a[x + 1] - a[x]\nfor quest in quests:\n    if quest[0] <= quest[1]:\n        print(dmg[quest[1] - 1] - dmg[quest[0] - 1])\n    else:\n        print(revDmg[quest[1] - 1] - revDmg[quest[0] - 1])", "from collections import deque\nfrom sys import stdin\n\ndef test(problem):\n    pass\n\ndef solve(n, b, l):\n    t1 = deque()\n    t2 = deque()\n    t1.append(0)\n    t2.append(0)\n    for i in range(1, n):\n        t1.append(max(l[i - 1] - l[i], 0) + t1[-1])\n    for i in range(n - 1, 0, -1):\n        t2.insert(0, max(l[i] - l[i - 1], 0) + t2[0])\n    for i in range(b):\n        (k, h) = list((int(i) for i in stdin.readline().split()))\n        if k < h:\n            print(t1[h - 1] - t1[k - 1])\n        else:\n            print(t2[h - 1] - t2[k - 1])\n(n, b) = list((int(i) for i in stdin.readline().split()))\nl = list((int(i) for i in stdin.readline().split()))\nsolve(n, b, l)", "def main():\n    (n, m) = map(int, input().split())\n    world_map = [int(num) for num in input().split()]\n    pos_positive = [0] * n\n    sum = 0\n    for i in range(1, n):\n        if world_map[i] < world_map[i - 1]:\n            sum += world_map[i - 1] - world_map[i]\n            pos_positive[i] = sum\n        else:\n            pos_positive[i] = sum\n    for l in range(m):\n        (i, j) = map(int, input().split())\n        if i > j:\n            sum = pos_positive[i - 1] - pos_positive[j - 1]\n            sum = world_map[j - 1] - world_map[i - 1] - sum\n            sum = -sum\n        else:\n            sum = pos_positive[j - 1] - pos_positive[i - 1]\n        print(sum)\nmain()", "def resi():\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    fd0 = [0] * n\n    fd1 = [0] * n\n    for i in range(1, n):\n        fd0[i] = fd0[i - 1] + max(0, a[i - 1] - a[i])\n    for i in reversed(range(n - 1)):\n        fd1[i] = fd1[i + 1] + max(0, a[i + 1] - a[i])\n    for i in range(m):\n        (s, t) = map(int, input().split())\n        if s < t:\n            print(fd0[t - 1] - fd0[s - 1])\n        else:\n            print(fd1[t - 1] - fd1[s - 1])\nresi()", "import sys\nimport collections\nfrom math import ceil, gcd, sqrt, log\nimport bisect\nINF = float('inf')\nmod = 1000000007\n\ndef solve():\n    (n, m) = map(int, input().split())\n    A = list(map(int, input().split()))[:n]\n    pref = [0] * n\n    suff = [0] * n\n    for i in range(1, n):\n        if A[i] > A[i - 1]:\n            pref[i] = pref[i - 1]\n        else:\n            pref[i] += pref[i - 1] + (A[i - 1] - A[i])\n    for j in range(n - 2, -1, -1):\n        if A[j] > A[j + 1]:\n            suff[j] = suff[j + 1]\n        else:\n            suff[j] += suff[j + 1] + (A[j + 1] - A[j])\n    for i in range(m):\n        (a, b) = map(int, input().split())\n        if b > a:\n            print(pref[b - 1] - pref[a - 1])\n        else:\n            print(suff[b - 1] - suff[a - 1])\nt = 1\nwhile t != 0:\n    solve()\n    t -= 1", "def main():\n    (n, m) = map(int, input().split())\n    A = list(map(int, input().split()))\n    accum1 = [0, 0]\n    accum2 = [0, 0]\n    for i in range(1, n):\n        if A[i] < A[i - 1]:\n            accum1.append(accum1[-1] + A[i - 1] - A[i])\n        else:\n            accum1.append(accum1[-1])\n        if A[n - 1 - i] < A[n - 1 - i + 1]:\n            accum2.append(accum2[-1] + A[n - 1 - i + 1] - A[n - 1 - i])\n        else:\n            accum2.append(accum2[-1])\n    for i in range(m):\n        (s, t) = map(int, input().split())\n        s -= 1\n        t -= 1\n        ans = 0\n        if s < t:\n            ans = accum1[t + 1] - accum1[s + 1]\n        else:\n            ans = accum2[n - 1 - (t - 1)] - accum2[n - 1 - (s - 1)]\n        print(ans)\nmain()", "(aa, bb) = map(int, input().split())\na = list(map(int, input().split()))\nz = [0]\nx = [0]\nfor i in range(aa - 1):\n    if a[i + 1] < a[i]:\n        z.append(a[i] - a[i + 1] + z[-1])\n        x.append(0 + x[-1])\n    else:\n        x.append(a[i + 1] - a[i] + x[-1])\n        z.append(0 + z[-1])\nfor _ in range(bb):\n    (b, c) = map(int, input().split())\n    if b < c:\n        print(-z[b - 1] + z[c - 1])\n    else:\n        print(-x[c - 1] + x[b - 1])", "(n, m) = map(int, input().split())\nls = list(map(int, input().split()))\ndamagef = [0]\ndamaged = [0 for i in range(n)]\na = 0\nfor i in range(1, n):\n    if ls[i] < ls[i - 1]:\n        a += ls[i - 1] - ls[i]\n    damagef.append(a)\na = 0\nfor i in range(n - 1, 0, -1):\n    if ls[i] > ls[i - 1]:\n        a += ls[i] - ls[i - 1]\n    damaged[i - 1] = a\nfor i in range(m):\n    (s, t) = map(int, input().split())\n    if t > s:\n        print(damagef[t - 1] - damagef[s - 1])\n    else:\n        print(damaged[t - 1] - damaged[s - 1])", "(k, n) = map(int, input().split())\narr = list(map(int, input().split()))\nbrr = [0]\ncrr = []\nans = 0\nfor i in range(k - 1):\n    if arr[i + 1] < arr[i]:\n        ans += arr[i] - arr[i + 1]\n        brr.append(ans)\n    else:\n        brr.append(ans)\ntrr = arr.copy()\ntrr.reverse()\nans = 0\nfor i in range(k - 1):\n    if trr[i + 1] < trr[i]:\n        ans += trr[i] - trr[i + 1]\n        crr.append(ans)\n    else:\n        crr.append(ans)\ncrr.reverse()\ncrr.append(0)\nfor j in range(n):\n    (a, b) = map(int, input().split())\n    if a <= b:\n        print(brr[b - 1] - brr[a - 1])\n    else:\n        print(crr[b - 1] - crr[a - 1])", "(n, m) = map(int, input().split())\nl = list(map(int, input().split()))\nk = 0\nl2 = [0]\nl3 = [0]\nfor i in range(1, n):\n    if l[i] < l[i - 1]:\n        k += l[i - 1] - l[i]\n    l2.append(k)\nk = 0\nfor i in range(n - 1, 0, -1):\n    if l[i] > l[i - 1]:\n        k += l[i] - l[i - 1]\n    l3.append(k)\nl4 = [l3[i] for i in range(n - 1, -1, -1)]\nfor _ in range(m):\n    (s, t) = map(int, input().split())\n    if s < t:\n        print(l2[t - 1] - l2[s - 1])\n    else:\n        print(l4[t - 1] - l4[s - 1])", "(n, m) = map(int, input().split())\na = [int(i) for i in input().split()]\nlr = [0]\nrl = [0]\nfor i in range(n - 1):\n    if a[i] > a[i + 1]:\n        lr.append(lr[i] + a[i] - a[i + 1])\n        rl.append(rl[i])\n    elif a[i] < a[i + 1]:\n        lr.append(lr[i])\n        rl.append(rl[i] + a[i + 1] - a[i])\n    else:\n        lr.append(lr[i])\n        rl.append(rl[i])\nfor _ in range(m):\n    (s, t) = map(int, input().split())\n    if s > t:\n        print(rl[s - 1] - rl[t - 1])\n    else:\n        print(lr[t - 1] - lr[s - 1])", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\ninc = [0]\ncost = 0\nfor i in range(1, n):\n    if a[i] < a[i - 1]:\n        cost += a[i - 1] - a[i]\n    inc.append(cost)\ndec = [0 for i in range(n)]\ncost = 0\nfor i in range(n - 2, -1, -1):\n    if a[i] < a[i + 1]:\n        cost += a[i + 1] - a[i]\n    dec[i] = cost\nfor _ in range(m):\n    (s, t) = map(int, input().split())\n    if s <= t:\n        print(inc[t - 1] - inc[s - 1])\n    else:\n        print(dec[t - 1] - dec[s - 1])", "from itertools import accumulate\n(n, m) = list(map(int, input().split()))\nA = list(map(int, input().split()))\ndiff = [x - y for (x, y) in zip(A[:-1], A[1:])]\nleft_falls = [0] + list(accumulate((x if x > 0 else 0 for x in diff)))\nright_falls = right_falls = [0] + list(accumulate((-x if x < 0 else 0 for x in diff)))\nfor _ in range(m):\n    (s, t) = list(map(int, input().split()))\n    if s < t:\n        cost = left_falls[t - 1] - left_falls[s - 1]\n    else:\n        cost = right_falls[s - 1] - right_falls[t - 1]\n    print(cost)", "(n, m) = map(int, input().split())\nh = list(map(int, input().split()))\npref_f = [0] * n\npref_b = [0] * n\nfor i in range(n - 1):\n    d = h[i] - h[i + 1]\n    if d > 0:\n        pref_f[i + 1] = d\n    else:\n        pref_b[i + 1] = -d\n    pref_f[i + 1] += pref_f[i]\n    pref_b[i + 1] += pref_b[i]\nfor _ in range(m):\n    (s, t) = map(int, input().split())\n    if s < t:\n        print(pref_f[t - 1] - pref_f[s - 1])\n    else:\n        print(pref_b[s - 1] - pref_b[t - 1])", "def main():\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = [0 for i in range(n)]\n    c = [0 for i in range(n)]\n    for i in range(1, n):\n        if a[i] < a[i - 1]:\n            b[i] = a[i - 1] - a[i]\n    for i in range(n - 2, -1, -1):\n        if a[i] < a[i + 1]:\n            c[i] = a[i + 1] - a[i]\n    for i in range(1, n):\n        b[i] += b[i - 1]\n    for i in range(n - 2, -1, -1):\n        c[i] += c[i + 1]\n    for i in range(m):\n        (s, t) = map(int, input().split())\n        if s < t:\n            print(b[t - 1] - b[s - 1])\n        else:\n            print(c[t - 1] - c[s - 1])\nmain()", "(n, m) = map(int, input().split())\narr = list(map(int, input().split()))\ndp = [0]\nfor i in range(1, n):\n    if arr[i - 1] > arr[i]:\n        dp.append(dp[i - 1] + arr[i - 1] - arr[i])\n    else:\n        dp.append(dp[i - 1])\ndpp = [0]\nj = 1\nfor i in range(n - 2, -1, -1):\n    if arr[i + 1] > arr[i]:\n        dpp.append(dpp[j - 1] + arr[i + 1] - arr[i])\n    else:\n        dpp.append(dpp[j - 1])\n    j += 1\ndpp = dpp[::-1]\nfor i in range(m):\n    (s, t) = map(int, input().split())\n    if s < t:\n        print(dp[t - 1] - dp[s - 1])\n    else:\n        print(dpp[t - 1] - dpp[s - 1])", "(n, m) = map(int, input().split())\narr = list(map(int, input().split()))\ndiff = [0]\nrev_diff = [0]\nfor i in range(1, n):\n    if arr[i - 1] - arr[i] > 0:\n        diff.append(diff[i - 1] + (arr[i - 1] - arr[i]))\n        rev_diff.append(rev_diff[i - 1])\n    else:\n        diff.append(diff[i - 1])\n        rev_diff.append(rev_diff[i - 1] + (arr[i] - arr[i - 1]))\nfor _ in range(m):\n    (s, t) = map(int, input().split())\n    if s < t:\n        res = diff[t - 1] - diff[s - 1]\n        print(res)\n    else:\n        res = rev_diff[s - 1] - rev_diff[t - 1]\n        print(res)", "try:\n    (n, k2) = map(int, input().split(' '))\n    l = list(map(int, input().split(' ')))\n    k = [0 for i in range(n)]\n    k1 = [0 for j in range(n)]\n    pr = l[0]\n    for i in range(1, n):\n        if l[i] < pr:\n            k[i] = k[i - 1] + pr - l[i]\n        else:\n            k[i] = k[i - 1]\n        pr = l[i]\n    pr = l[n - 1]\n    for i in range(n - 2, -1, -1):\n        if pr > l[i]:\n            k1[i] = k1[i + 1] + pr - l[i]\n        else:\n            k1[i] = k1[i + 1]\n        pr = l[i]\n    for i in range(k2):\n        (a, b) = map(int, input().split(' '))\n        a = a - 1\n        b = b - 1\n        if a <= b:\n            print(k[b] - k[a])\n        else:\n            print(k1[b] - k1[a])\nexcept:\n    pass", "(n, m) = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\np = 0\nq = 0\nl1 = [0]\nl2 = [0]\nfor i in range(1, n):\n    if a[i - 1] > a[i]:\n        p += a[i - 1] - a[i]\n    l1.append(p)\nfor i in range(n - 1, 0, -1):\n    if a[i - 1] < a[i]:\n        q += a[i] - a[i - 1]\n    l2.append(q)\nl2 = l2[::-1]\nfor _ in range(m):\n    (s, t) = [int(i) for i in input().split()]\n    if s < t:\n        print(l1[t - 1] - l1[s - 1])\n    else:\n        print(l2[t - 1] - l2[s - 1])", "(n, m) = map(int, input().split())\nx = list(map(int, input().split()))\ny = [0] * n\nz = [0] * n\nsum1 = 0\nsum2 = 0\nfor j in range(1, n):\n    if x[j - 1] > x[j]:\n        sum1 += x[j - 1] - x[j]\n        y[j] = sum1\n        z[j] = sum2\n    else:\n        y[j] = sum1\n        sum2 += x[j] - x[j - 1]\n        z[j] = sum2\nfor j in range(m):\n    count = 0\n    (s, t) = map(int, input().split())\n    if s < t:\n        print(y[t - 1] - y[s - 1])\n    elif s > t:\n        print(z[s - 1] - z[t - 1])\n    else:\n        print(0)", "(a, b) = map(int, input().split())\nl = list(map(int, input().split()))\nli1 = [0]\nli2 = [0]\nfor i in range(a - 1):\n    li1.append(li1[i] + max(0, l[i] - l[i + 1]))\n    li2.append(li2[i] + max(0, l[i + 1] - l[i]))\nfor i in range(b):\n    (x, y) = map(int, input().split())\n    if x < y:\n        print(li1[y - 1] - li1[x - 1])\n    else:\n        print(li2[x - 1] - li2[y - 1])", "count_of_pairs = input().split()\ncount_of_pairs = int(count_of_pairs[-1])\nworld = [int(i) for i in input().split()]\nprefleft = [0] * (len(world) + 1)\nprefright = [0] * len(prefleft)\nfor i in range(1, len(world)):\n    if world[i] < world[i - 1]:\n        prefleft[i + 1] = prefleft[i] + world[i - 1] - world[i]\n    else:\n        prefleft[i + 1] = prefleft[i]\n    if world[-i - 1] < world[-i]:\n        prefright[i + 1] = prefright[i] + world[-i] - world[-i - 1]\n    else:\n        prefright[i + 1] = prefright[i]\nfor i in range(count_of_pairs):\n    (start, end) = input().split()\n    (start, end) = (int(start), int(end))\n    if start < end:\n        print(prefleft[end] - prefleft[start])\n    else:\n        print(prefright[-end] - prefright[-start])", "inputs = [int(num) for num in input().split()]\nn = inputs[0]\nm = inputs[1]\nlist1 = [int(num) for num in input().split()]\npsum = [0, 0]\nfor i in range(1, n):\n    if list1[i] < list1[i - 1]:\n        psum.append(psum[i] + list1[i - 1] - list1[i])\n    else:\n        psum.append(psum[i])\npsum2 = [0 for i in range(0, n + 1)]\nfor i in range(n - 2, -1, -1):\n    if list1[i] < list1[i + 1]:\n        psum2[i] = psum2[i + 1] + list1[i + 1] - list1[i]\n    else:\n        psum2[i] = psum2[i + 1]\nfor i in range(0, m):\n    inputs1 = [int(num) for num in input().split()]\n    if inputs1[1] >= inputs1[0]:\n        print(psum[inputs1[1]] - psum[inputs1[0]])\n    else:\n        print(psum2[inputs1[1] - 1] - psum2[inputs1[0] - 1])", "(n, q) = map(int, input().split())\na = list(map(int, input().split()))\nleft = [0]\nfor i in range(1, n):\n    if a[i] < a[i - 1]:\n        left.append(left[-1] + a[i - 1] - a[i])\n    else:\n        left.append(left[-1])\nright = [0]\nfor i in range(n - 2, -1, -1):\n    if a[i] < a[i + 1]:\n        right.append(a[i + 1] - a[i] + right[-1])\n    else:\n        right.append(right[-1])\nright = right[::-1]\nfor _ in range(q):\n    (i, j) = map(int, input().split())\n    if i < j:\n        print(left[j - 1] - left[i - 1])\n    else:\n        print(right[j - 1] - right[i - 1])", "(n, m) = input().split(' ')\n(n, m) = (int(n), int(m))\na = input().split(' ')\na = list(map(int, a))\nlr = []\nrl = []\nfor i in range(n - 1):\n    if a[i] > a[i + 1]:\n        lr.append(a[i] - a[i + 1])\n        rl.append(0)\n    else:\n        lr.append(0)\n        rl.append(a[i + 1] - a[i])\nsum_lr = [0]\nsum_rl = [0]\nfor i in range(len(lr)):\n    sum_lr.append(sum_lr[i] + lr[i])\nfor i in range(len(rl)):\n    sum_rl.append(sum_rl[i] + rl[i])\nfor _ in range(m):\n    (s, t) = input().split(' ')\n    (s, t) = (int(s), int(t))\n    if s < t:\n        print(sum_lr[t - 1] - sum_lr[s - 1])\n    else:\n        print(sum_rl[s - 1] - sum_rl[t - 1])", "(n, m) = map(int, input().split())\nl = list(map(int, input().split()))\nu = [0]\nd = [0]\nfor i in range(1, len(l)):\n    if l[i - 1] > l[i]:\n        u.append(l[i - 1] - l[i] + u[-1])\n    else:\n        u.append(u[-1])\n    if l[i] > l[i - 1]:\n        d.append(l[i] - l[i - 1] + d[-1])\n    else:\n        d.append(d[-1])\nfor i in range(m):\n    (s, e) = map(int, input().split())\n    if s < e:\n        print(u[e - 1] - u[s - 1])\n    else:\n        print(d[s - 1] - d[e - 1])", "(n, m) = map(int, input().split())\nList = list(map(int, input().split()))\nrightarray = [0]\nleftarray = [0]\ndamage = 0\nfor i in range(0, n - 1, +1):\n    if List[i] > List[i + 1]:\n        damage += List[i] - List[i + 1]\n    rightarray.append(damage)\ndamage = 0\nfor i in range(n - 1, 0, -1):\n    if List[i] > List[i - 1]:\n        damage += List[i] - List[i - 1]\n    leftarray.append(damage)\nleftarray.reverse()\nfor i in range(m):\n    (s, t) = map(int, input().split())\n    damage = 0\n    if s > t:\n        damage = leftarray[t - 1] - leftarray[s - 1]\n    else:\n        damage = rightarray[t - 1] - rightarray[s - 1]\n    print(damage)", "(n, m) = map(int, input().split())\nl = list(map(int, input().split()))\nl1 = [0]\nl2 = [0]\nfor i in range(n - 1, 0, -1):\n    o = l[i] - l[i - 1]\n    if o < 0:\n        o = 0\n    l2.append(l2[-1] + o)\nfor i in range(n - 1):\n    o = l[i] - l[i + 1]\n    if o < 0:\n        o = 0\n    l1.append(l1[-1] + o)\nfor i in range(m):\n    (x, y) = map(int, input().split())\n    if x > y:\n        print(abs(l2[n - x] - l2[n - y]))\n    else:\n        print(abs(l1[y - 1] - l1[x - 1]))", "(n, m) = map(int, input().split())\na = [int(aj) for aj in input().split()]\n(p, s) = ([0] * n, [0] * n)\nfor j in range(n):\n    p[j] = p[j - 1] + (a[j - 1] - a[j] if a[j] < a[j - 1] else 0) if j - 1 > -1 else 0\nfor j in range(-1, -n - 1, -1):\n    s[j] = s[j + 1] + (a[j + 1] - a[j] if a[j] < a[j + 1] else 0) if j + 1 < 0 else 0\nfor i in range(m):\n    (start, finish) = map(int, input().split())\n    print(p[finish - 1] - p[start - 1] if finish > start else s[finish - 1] - s[start - 1])", "(n, m) = map(int, input().split())\nlst = list(map(int, input().split()))\nlst_r = [0]\nlst_l = [0]\nfor x in range(n - 1):\n    q = lst[x] - lst[x + 1]\n    if q > 0:\n        lst_r.append(lst_r[-1] + q)\n        lst_l.append(lst_l[-1])\n    elif q < 0:\n        lst_l.append(lst_l[-1] - q)\n        lst_r.append(lst_r[-1])\n    else:\n        lst_r.append(lst_r[-1])\n        lst_l.append(lst_l[-1])\nfor x in range(m):\n    (a, b) = map(int, input().split())\n    if a < b:\n        print(lst_r[b - 1] - lst_r[a - 1])\n    else:\n        print(lst_l[a - 1] - lst_l[b - 1])", "(n, m) = map(int, input().split())\nc = [int(i) for i in input().split()]\nf = [0] * n\ng = [0] * n\nfor i in range(1, n):\n    f[i] = f[i - 1] + max(0, c[i - 1] - c[i])\n    g[-i - 1] = g[-i] + max(0, c[-i] - c[-i - 1])\nfor i in range(m):\n    (x, y) = map(int, input().split())\n    if x < y:\n        print(f[y - 1] - f[x - 1])\n    else:\n        print(g[y - 1] - g[x - 1])", "def solve():\n    (n, m) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    pref = [0]\n    prefrev = [0]\n    for i in range(1, n):\n        pref.append(max(0, a[i - 1] - a[i]) + pref[-1])\n    a.reverse()\n    for i in range(1, n):\n        prefrev.append(max(0, a[i - 1] - a[i]) + prefrev[-1])\n    prefrev.reverse()\n    a.reverse()\n    for i in range(m):\n        (s, t) = list(map(int, input().split()))\n        if s <= t:\n            print(pref[t - 1] - pref[s - 1])\n        else:\n            print(-(prefrev[s - 1] - prefrev[t - 1]))\nnnnn = 1\nwhile nnnn:\n    nnnn -= 1\n    solve()", "(n, m) = [int(x) for x in input().split()]\narr = [int(x) for x in input().split()]\na = [0]\nfor i in range(1, n):\n    if arr[i] < arr[i - 1]:\n        a.append(a[-1] + arr[i - 1] - arr[i])\n    else:\n        a.append(a[-1])\nb = [0]\nfor i in reversed(range(n - 1)):\n    if arr[i] < arr[i + 1]:\n        b.append(b[-1] + arr[i + 1] - arr[i])\n    else:\n        b.append(b[-1])\nb = b[::-1]\nfor q in range(m):\n    (x, y) = [int(x) for x in input().split()]\n    if x < y:\n        print(a[y - 1] - a[x - 1])\n    else:\n        print(b[y - 1] - b[x - 1])", "(n, m) = map(int, input().split(' '))\nlst = list(map(int, input().split(' ')))\nlst1 = [0]\nlst2 = [0]\ncnt = 0\nfor i in range(1, n):\n    if lst[i] < lst[i - 1]:\n        cnt += lst[i - 1] - lst[i]\n    lst1.append(cnt)\ncnt = 0\nfor i in range(2, n + 1):\n    if lst[-i] < lst[-i + 1]:\n        cnt += lst[-i + 1] - lst[-i]\n    lst2.append(cnt)\nlst2.reverse()\nfor i in range(m):\n    (x, y) = map(int, input().split(' '))\n    if y >= x:\n        print(lst1[y - 1] - lst1[x - 1])\n    else:\n        print(lst2[y - 1] - lst2[x - 1])", "(x, y) = input().split()\nx = int(x)\ny = int(y)\nz = list(map(int, input().split()))\nm = []\nm1 = []\nm1.append(0)\nm.append(0)\nfor i in range(x - 1):\n    if z[i + 1] < z[i]:\n        m.append(m[i] - (z[i] - z[i + 1]))\n    else:\n        m.append(m[i])\nz.reverse()\nfor i in range(x - 1):\n    if z[i + 1] < z[i]:\n        m1.append(m1[i] - (z[i] - z[i + 1]))\n    else:\n        m1.append(m1[i])\nfor i in range(y):\n    (a, b) = input().split()\n    a = int(a)\n    b = int(b)\n    if a < b:\n        print(m[a - 1] - m[b - 1])\n    else:\n        print(m1[-a] - m1[-b])", "(n, m) = map(int, input().split())\na = [int(i) for i in input().split()]\npre = [0] * n\nsuff = [0] * n\nfor i in range(1, n):\n    if a[i] < a[i - 1]:\n        pre[i] = pre[i - 1] + a[i - 1] - a[i]\n    else:\n        pre[i] = pre[i - 1]\nfor i in range(n - 2, -1, -1):\n    if a[i] < a[i + 1]:\n        suff[i] = suff[i + 1] + a[i + 1] - a[i]\n    else:\n        suff[i] = suff[i + 1]\nfor i in range(m):\n    ans = 0\n    (x, y) = map(int, input().split())\n    if x < y:\n        print(pre[y - 1] - pre[x - 1])\n    else:\n        print(suff[y - 1] - suff[x - 1])", "def test():\n    (n, m) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    f = [0]\n    b = [0]\n    for i in range(1, n):\n        if a[i] < a[i - 1]:\n            f.append(f[i - 1] + a[i - 1] - a[i])\n        else:\n            f.append(f[i - 1])\n    a.reverse()\n    for i in range(1, n):\n        if a[i] < a[i - 1]:\n            b.append(b[i - 1] + a[i - 1] - a[i])\n        else:\n            b.append(b[i - 1])\n    b.reverse()\n    for i in range(m):\n        (x, y) = [int(i) for i in input().split()]\n        x -= 1\n        y -= 1\n        if x < y:\n            print(f[y] - f[x])\n        else:\n            print(b[y] - b[x])\n    return\nt = 1\nfor i in range(t):\n    test()", "R = lambda : map(int, input().split())\n(n, m) = R()\n(*c,) = R()\nb = [[0], [0]]\nf = max\nfor x in b:\n    for (u, v) in zip([0] + c, c):\n        x += (x[-1] + f(0, u - v),)\n    f = min\nfor _ in [0] * m:\n    (s, t) = R()\n    l = b[s > t]\n    print(l[t] - l[s])", "(a, b) = map(int, input().split())\nl = list(map(int, input().split()))\nli1 = [0]\nli2 = [0]\nfor i in range(a - 1):\n    li1.append(li1[i] + max(0, l[i] - l[i + 1]))\n    li2.append(li2[i] + max(0, l[i + 1] - l[i]))\nfor i in range(b):\n    (x, y) = map(int, input().split())\n    if x < y:\n        print(li1[y - 1] - li1[x - 1])\n    else:\n        print(li2[x - 1] - li2[y - 1])", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\n(suffix, prefix) = ([0], [0])\nfor i in range(n - 1):\n    if a[i] > a[i + 1]:\n        prefix.append(a[i] - a[i + 1])\n        suffix.append(0)\n    else:\n        prefix.append(0)\n        suffix.append(a[i + 1] - a[i])\n    prefix[i + 1] += prefix[i]\n    suffix[i + 1] += suffix[i]\nfor _ in range(m):\n    (s, t) = map(int, input().split())\n    if s < t:\n        print(prefix[t - 1] - prefix[s - 1])\n    else:\n        print(suffix[s - 1] - suffix[t - 1])", "data = input().split()\ncols = int(data[0])\nquests = int(data[1])\ncolsdata = input().split()\nfor i in range(len(colsdata)):\n    colsdata[i] = int(colsdata[i])\ncolsdata.insert(0, 0)\nforwardprefixSum = [0]\nfor i in range(1, len(colsdata)):\n    if colsdata[i] < colsdata[i - 1]:\n        forwardprefixSum.append(forwardprefixSum[i - 1] + (colsdata[i - 1] - colsdata[i]))\n    else:\n        forwardprefixSum.append(forwardprefixSum[i - 1])\ncolsdata.pop(0)\ncolsdata.reverse()\ncolsdata.insert(0, 0)\nbackwardprefixSum = [0]\nfor i in range(1, len(colsdata)):\n    if colsdata[i] < colsdata[i - 1]:\n        backwardprefixSum.append(backwardprefixSum[i - 1] + (colsdata[i - 1] - colsdata[i]))\n    else:\n        backwardprefixSum.append(backwardprefixSum[i - 1])\nfor i in range(quests):\n    quest = input().split()\n    start = int(quest[0])\n    end = int(quest[1])\n    if end >= start:\n        print(forwardprefixSum[end] - forwardprefixSum[start])\n    else:\n        print(backwardprefixSum[len(backwardprefixSum) - end] - backwardprefixSum[len(backwardprefixSum) - start])", "import sys\nimport threading\nfrom functools import lru_cache\nfrom bisect import bisect_left\nimport math\nfrom collections import defaultdict, deque\nfrom heapq import *\n\ndef main():\n    (n, m) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    forward = [0]\n    for index in range(1, n):\n        if a[index] <= a[index - 1]:\n            forward.append(a[index - 1] - a[index] + forward[-1])\n        else:\n            forward.append(forward[-1])\n    backward = [0]\n    for index in range(n - 2, -1, -1):\n        if a[index] <= a[index + 1]:\n            backward.append(a[index + 1] - a[index] + backward[-1])\n        else:\n            backward.append(backward[-1])\n    backward.reverse()\n    for _ in range(m):\n        (left, right) = [int(i) - 1 for i in input().split()]\n        if right > left:\n            print(forward[right] - forward[left])\n        else:\n            print(backward[right] - backward[left])\nsys.setrecursionlimit(1 << 30)\nthreading.stack_size(1 << 27)\nmain_thread = threading.Thread(target=main)\nmain_thread.start()\nmain_thread.join()", "(n, m) = map(int, input().split())\nl = list(map(int, input().split()))\nless = [0]\nfor i in range(1, n):\n    if l[i] > l[i - 1]:\n        less.append(0 + less[-1])\n    else:\n        less.append(l[i - 1] - l[i] + less[-1])\ngre = [0]\nfor i in range(n - 1, 0, -1):\n    if l[i] > l[i - 1]:\n        gre.append(l[i] - l[i - 1] + gre[-1])\n    else:\n        gre.append(0 + gre[-1])\ngre.reverse()\nfor i in range(m):\n    (x, y) = map(int, input().split())\n    if x < y:\n        print(less[y - 1] - less[x - 1])\n    else:\n        print(gre[y - 1] - gre[x - 1])", "def meow(l, n):\n    mo = [0]\n    i = 1\n    coun = 0\n    while i < n:\n        if l[i] < l[i - 1]:\n            coun = coun + l[i - 1] - l[i]\n        mo.append(coun)\n        i = i + 1\n    return mo\n\ndef meowBack(l, n):\n    wo = [0]\n    i = n - 2\n    cou = 0\n    while i > -1:\n        if l[i] < l[i + 1]:\n            cou = cou + l[i + 1] - l[i]\n        wo.append(cou)\n        i = i - 1\n    return wo[::-1]\nz = list(map(int, input().split()))\nl = list(map(int, input().split()))\nn = z[0]\nm = z[1]\nmeo = meow(l, n)\nweo = meowBack(l, n)\nk = 0\nwhile k < m:\n    o = list(map(int, input().split()))\n    if o[0] < o[1]:\n        print(meo[o[1] - 1] - meo[o[0] - 1])\n    else:\n        print(weo[o[1] - 1] - weo[o[0] - 1])\n    k = k + 1", "(n, m) = [int(x) for x in input().split()]\nl = [int(x) for x in input().split()]\nprefix = [0] * len(l)\nsuffix = [0] * len(l)\nfor i in range(1, len(l)):\n    if l[i] >= l[i - 1]:\n        prefix[i] = prefix[i - 1]\n    else:\n        prefix[i] = prefix[i - 1] + l[i - 1] - l[i]\nfor i in range(len(l) - 2, -1, -1):\n    if l[i] >= l[i + 1]:\n        suffix[i] = suffix[i + 1]\n    else:\n        suffix[i] = suffix[i + 1] + l[i + 1] - l[i]\nfor i in range(m):\n    (a, b) = [int(x) for x in input().split()]\n    if a < b:\n        print(prefix[b - 1] - prefix[a - 1])\n    else:\n        print(suffix[b - 1] - suffix[a - 1])\nprint()", "(a, b) = map(int, input().split())\nc = list(map(int, input().split()))\ne = [0, 0]\nd = []\nif c[0] > c[1]:\n    e.append(c[0] - c[1])\nelse:\n    e.append(0)\nfor i in range(1, a - 1):\n    if c[i] > c[i + 1]:\n        e.append(e[-1] + c[i] - c[i + 1])\n    else:\n        e.append(e[-1])\nc = c[::-1]\nif c[0] > c[1]:\n    d.append(c[0] - c[1])\nelse:\n    d.append(0)\nfor i in range(1, a - 1):\n    if c[i] > c[i + 1]:\n        d.append(d[-1] + c[i] - c[i + 1])\n    else:\n        d.append(d[-1])\nd.append(0)\nd = d[::-1]\nd.append(0)\nfor i in range(b):\n    (f, g) = map(int, input().split())\n    if f > g:\n        print(d[g] - d[f])\n    else:\n        print(e[g] - e[f])", "for t in range(1):\n    (n, m) = map(int, input().split())\n    plan = [0] * (n + 1)\n    flag = [0] * (n + 1)\n    arr = list(map(int, input().split()))\n    for i in range(1, len(arr)):\n        if arr[i - 1] >= arr[i]:\n            plan[i] = plan[i - 1] + (arr[i - 1] - arr[i])\n        else:\n            plan[i] = plan[i - 1]\n    for i in range(len(arr) - 2, -1, -1):\n        if arr[i + 1] >= arr[i]:\n            flag[i] = flag[i + 1] + (arr[i + 1] - arr[i])\n        else:\n            flag[i] = flag[i + 1]\n    for i in range(m):\n        (a, b) = map(int, input().split())\n        if a <= b:\n            print(plan[b - 1] - plan[a - 1])\n        else:\n            print(flag[b - 1] - flag[a - 1])", "(n, m) = map(int, input().split())\narr = list(map(int, input().split()))\nlenn = len(arr)\na = [0]\nb = [0]\nsuma = 0\nfor i in range(1, lenn):\n    if arr[i] < arr[i - 1]:\n        suma += abs(arr[i - 1] - arr[i])\n        a.append(suma)\n    else:\n        a.append(suma)\nsumb = 0\nj = lenn\nwhile j > 1:\n    if arr[j - 1] > arr[j - 2]:\n        sumb += abs(arr[j - 1] - arr[j - 2])\n        b.append(sumb)\n    else:\n        b.append(sumb)\n    j = j - 1\nfor i in range(m):\n    (s, t) = map(int, input().split())\n    if t > s:\n        min = a[t - 1] - a[s - 1]\n        print(min)\n    elif t == s:\n        print(0)\n    else:\n        min = b[lenn - t] - b[lenn - s]\n        print(min)", "(n, m) = map(int, input().split())\na = [0] + list(map(int, input().split()))\nsums = [0]\nsums2 = [0]\nfor i in range(1, n):\n    sums.append(max(a[i] - a[i + 1], 0) + sums[-1])\n    sums2.append(max(a[i + 1] - a[i], 0) + sums2[-1])\nfor _ in range(m):\n    damage = 0\n    (s, t) = map(int, input().split())\n    if s < t:\n        damage = sums[t - 1] - sums[s - 1]\n    else:\n        damage = sums2[s - 1] - sums2[t - 1]\n    print(damage)", "(n, m) = input().split()\n(n, m) = (int(n), int(m))\nAs = input().split()\nAs = [int(_) for _ in As]\nprefix_sums = [0]\nfor i in range(n - 1):\n    value = 0 if As[i + 1] >= As[i] else As[i] - As[i + 1]\n    prefix_sums.append(prefix_sums[-1] + value)\npostfix_sums = [0]\nfor i in range(n - 1, 0, -1):\n    value = 0 if As[i - 1] >= As[i] else As[i] - As[i - 1]\n    postfix_sums.append(postfix_sums[-1] + value)\nfor _ in range(m):\n    (s, t) = input().split()\n    (s, t) = (int(s) - 1, int(t) - 1)\n    if s < t:\n        print(prefix_sums[t] - prefix_sums[s])\n    else:\n        print(postfix_sums[n - 1 - t] - postfix_sums[n - 1 - s])", "(n, m) = map(int, input().split())\na = [int(i) for i in input().split()]\nl = [0]\nr = [0]\nfor i in range(0, n - 1):\n    if a[i] > a[i + 1]:\n        l.append(a[i] - a[i + 1] + l[-1])\n    else:\n        l.append(l[-1])\n    if a[i] < a[i + 1]:\n        r.append(a[i + 1] - a[i] + r[-1])\n    else:\n        r.append(r[-1])\nfor i in range(0, m):\n    (sj, tj) = map(int, input().split())\n    if sj <= tj:\n        print(l[tj - 1] - l[sj - 1])\n    else:\n        print(r[sj - 1] - r[tj - 1])", "(n, m) = map(int, input().split())\nl = list(map(int, input().split()))\nf = [0] * n\nb = [0] * n\nd = 0\nfor j in range(1, n):\n    d = d + max(0, l[j - 1] - l[j])\n    f[j] = d\nl = l[::-1]\nd = 0\nfor k in range(1, n):\n    d = d + max(0, l[k - 1] - l[k])\n    b[k] = d\nb = b[::-1]\nfor i in range(m):\n    (s, t) = map(int, input().split())\n    if s < t:\n        print(f[t - 1] - f[s - 1])\n    else:\n        print(b[t - 1] - b[s - 1])"]