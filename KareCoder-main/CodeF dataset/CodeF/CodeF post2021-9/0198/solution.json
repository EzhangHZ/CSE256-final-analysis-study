["import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    w = input()[:-1]\n    c = w.count('-')\n    w = list(map(int, w.replace('-', '').split()))\n    i = 0\n    while c:\n        w[i] = -w[i]\n        c -= 1\n        i += 1\n    if w == sorted(w):\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    cnt = 0\n    for i in range(n):\n        if arr[i] < 0:\n            cnt += 1\n    prev = abs(arr[0])\n    for i in range(n):\n        if i < cnt:\n            if prev < abs(arr[i]):\n                return 'NO'\n            prev = abs(arr[i])\n        elif i == cnt:\n            prev = abs(arr[i])\n        else:\n            if prev > abs(arr[i]):\n                return 'NO'\n            prev = abs(arr[i])\n    return 'YES'\nfor _ in range(int(input())):\n    print(solve())", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    flag = False\n    (left, right) = (0, n - 1)\n    while left < right:\n        if arr[left] > 0:\n            while arr[right] > 0 and left < right:\n                right -= 1\n            if left < right:\n                arr[left] *= -1\n                arr[right] *= -1\n            else:\n                break\n        left += 1\n    for i in range(n - 1):\n        if arr[i] > arr[i + 1]:\n            print('NO')\n            break\n    else:\n        print('YES')", "from sys import stdin, stdout\nimport collections\nimport math\n\ndef solve():\n    return\n\ndef main():\n    for i in range(int(input())):\n        n = int(input())\n        l = list(map(int, input().split()))\n        g = []\n        ans = True\n        c = 0\n        for i in range(n):\n            if l[i] < 0:\n                l[i] = -l[i]\n                c += 1\n        for i in range(n):\n            if c == 0:\n                break\n            if l[i] > 0:\n                l[i] = -l[i]\n                c -= 1\n        if l != sorted(l):\n            ans = False\n        if ans:\n            print('YES')\n        else:\n            print('NO')\n    return\ninput = stdin.readline\nmain()", "import copy\nn = int(input())\ndatas = []\nfor i in range(n):\n    t = int(input())\n    data = list(map(int, input().split()))\n    datas.append(data)\n\ndef is_sorted(data):\n    if not data:\n        return True\n    c = data[0]\n    for d in data[1:]:\n        if d < c:\n            return False\n        c = d\n    return True\n\ndef check(data):\n    if is_sorted(data):\n        return True\n    neg_count = 0\n    pos_count = 0\n    for d in data:\n        if d < 0:\n            neg_count += 1\n        if d > 0:\n            pos_count += 1\n    for i in range(neg_count):\n        if data[i] > 0:\n            data[i] = data[i] * -1\n    for i in range(pos_count):\n        index = (i + 1) * -1\n        if data[index] < 0:\n            data[index] = data[index] * -1\n    return is_sorted(data)\nfor data in datas:\n    if check(data):\n        print('YES')\n    else:\n        print('NO')", "import sys\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef SI():\n    return sys.stdin.readline().strip()\nfor _ in range(II()):\n    n = II()\n    arr = LI()\n    absArr = []\n    negNumbers = 0\n    for i in arr:\n        if i < 0:\n            negNumbers += 1\n    isBig = 0\n    for i in arr:\n        if negNumbers > 0:\n            absArr.append(-abs(i))\n            negNumbers -= 1\n        else:\n            absArr.append(abs(i))\n    print('YES' if absArr == sorted(absArr) else 'NO')", "from operator import ne\n\ndef main():\n\n    def solve(n, a):\n        neg = 0\n        for i in range(n):\n            if a[i] < 0:\n                neg += 1\n                a[i] = -a[i]\n        for i in range(neg):\n            a[i] = -a[i]\n        for i in range(1, n):\n            if a[i] < a[i - 1]:\n                return 'NO'\n        return 'YES'\n    t = int(input())\n    ans = []\n    for _ in range(t):\n        n = int(input())\n        a = [int(x) for x in input().split()]\n        ans.append(solve(n, a))\n    print('\\n'.join(ans))\nimport sys, threading\ninput = sys.stdin.readline\nthread = threading.Thread(target=main)\nthread.start()\nthread.join()", "import sys\ninput = sys.stdin.readline\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    ct = 0\n    for i in range(n):\n        if a[i] < 0:\n            ct += 1\n    flag = 0\n    for i in range(1, ct):\n        if abs(a[i]) <= abs(a[i - 1]):\n            pass\n        else:\n            flag = 1\n    if flag == 0:\n        for i in range(ct, n - 1):\n            if abs(a[i + 1]) >= abs(a[i]):\n                pass\n            else:\n                flag = 1\n    if flag == 1:\n        print('NO')\n    else:\n        print('YES')", "from math import inf, gcd, log, log2, floor, ceil, sqrt\nfrom collections import Counter, defaultdict\nfrom heapq import heappush, heappop, heapify\nfrom functools import lru_cache\nimport sys\nDIRS = [[1, 0], [0, 1], [0, -1], [-1, 0], [-1, -1], [1, 1], [-1, 1], [1, -1]]\nMOD = 10 ** 9 + 7\ninput = sys.stdin.readline\nt = int(input())\n\ndef solve():\n    n = int(input())\n    A = [int(x) for x in input().split(' ')]\n    cnt = sum([x < 0 for x in A])\n    for i in range(1, cnt):\n        if abs(A[i]) > abs(A[i - 1]):\n            return False\n    for i in range(cnt + 1, n):\n        if abs(A[i]) < abs(A[i - 1]):\n            return False\n    return True\nwhile t:\n    out = solve()\n    if out:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "import sys\nls = []\nfor l in sys.stdin:\n    lst = l.rstrip('\\n')\n    if len(lst) > 0:\n        ls.append(lst)\nfor l in ls:\n    sys.stderr.write(l + '\\n')\nsys.stderr.write('-- output --\\n')\n\ndef solve(n, a):\n    k = sum([0 if ai > 0 else 1 for ai in a])\n    b = [abs(a[i]) if i >= k else -abs(a[i]) for i in range(n)]\n    for i in range(n - 1):\n        if b[i] > b[i + 1]:\n            return 'NO'\n    return 'YES'\nfor i in range(1, len(ls) - 1, 2):\n    n = int(ls[i])\n    a = [int(x) for x in ls[i + 1].split(' ')]\n    print(solve(n, a))", "import math, bisect, heapq, random, sys, itertools\nsys.setrecursionlimit(2 * 10 ** 5)\ninput = sys.stdin.readline\n\ndef gprint(t, ans=''):\n    print(f'Case #{t + 1}:', ans)\nints = lambda : list(map(int, input().split()))\nalpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\np2 = [1]\np = 10 ** 9 + 7\ninf = 10 ** 20 + 7\nfact = [1]\nANS = []\nfor t in range(int(input())):\n    n = int(input())\n    a = ints()\n    c = 0\n    for i in a:\n        if i < 0:\n            c += 1\n    for i in range(n):\n        if i < c:\n            a[i] = -1 * abs(a[i])\n        else:\n            a[i] = abs(a[i])\n    if a == sorted(a):\n        print('YES')\n    else:\n        print('NO')", "import sys\ninp = sys.stdin.readline\nfor _ in range(int(inp())):\n    n = int(inp())\n    l = list(map(int, inp().split()))\n    c = 0\n    y = 0\n    v = 0\n    b = True\n    for i in range(n):\n        if l[i] < 0:\n            y = y + 1\n    for i in range(y):\n        l[i] = abs(l[i]) * -1\n    for i in range(y, n):\n        l[i] = abs(l[i])\n    if l == sorted(l):\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\n\ndef is_sorted(A):\n    for (a, b) in zip(A, A[1:]):\n        if a > b:\n            return False\n    return True\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    n_neg = sum((a < 0 for a in A))\n    B = [-abs(a) if i < n_neg else abs(a) for (i, a) in enumerate(A)]\n    print('YES' if is_sorted(B) else 'NO')", "def main():\n    for _ in range(int(input())):\n        (_, s) = (input(), input())\n        cnt = s.count('-')\n        l = list(map(int, s.replace('-', '').split()))\n        (a, b) = (l[:cnt], l[cnt:])\n        l[:cnt] = l[:cnt][::-1]\n        print(('NO', 'YES')[a == sorted(a, reverse=True) and b == sorted(b)])\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in a:\n        if i < 0:\n            count += 1\n    cur = -10 ** 10\n    ans = True\n    for k in a:\n        if count > 0:\n            if -abs(k) < cur:\n                ans = False\n                break\n            else:\n                cur = -abs(k)\n        elif abs(k) < cur:\n            ans = False\n            break\n        else:\n            cur = abs(k)\n        count -= 1\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = []\n    num_neg = 0\n    for i in map(int, input().split()):\n        if i < 0:\n            num_neg += 1\n            a.append(-i)\n        else:\n            a.append(i)\n    ans = 'YES'\n    for i in range(1, num_neg):\n        if a[i - 1] < a[i]:\n            ans = 'NO'\n    for i in range(num_neg + 1, n):\n        if a[i - 1] > a[i]:\n            ans = 'NO'\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        if a[i] < 0:\n            c += 1\n            a[i] = -a[i]\n    for j in range(c):\n        a[j] = -a[j]\n    if a == sorted(a):\n        print('YES')\n    else:\n        print('NO')", "def is_sortable(a):\n    if len(a) == 1:\n        return True\n    idx_first = 0\n    idx_last = len(a) - 1\n    while idx_first < idx_last:\n        while idx_first < idx_last and a[idx_first] < 0:\n            idx_first += 1\n        while idx_first < idx_last and a[idx_last] > 0:\n            idx_last -= 1\n        if idx_first < idx_last and a[idx_first] > 0 and (a[idx_last] < 0):\n            a[idx_first] *= -1\n            a[idx_last] *= -1\n    for i in range(len(a) - 1):\n        if a[i] > a[i + 1]:\n            return False\n    return True\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(number) for number in input().split()]\n    print('YES' if is_sortable(a) else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(a) for a in input().split()]\n    (i, j) = (0, n - 1)\n    while i < j:\n        while i < j and arr[i] < 0:\n            i += 1\n        while i < j and arr[j] > 0:\n            j -= 1\n        if i < j:\n            arr[i] *= -1\n            arr[j] *= -1\n            i += 1\n            j -= 1\n    print('YES' if sorted(arr) == arr else 'NO')", "from collections import deque\n\ndef checker():\n    q = deque()\n    n = int(input())\n    nums = list(map(int, input().split()))\n    for i in range(n):\n        if nums[i] < 0:\n            if q:\n                index = q.popleft()\n                nums[index] *= -1\n                nums[i] *= -1\n                q.append(i)\n        elif nums[i] > 0:\n            q.append(i)\n    if nums == sorted(nums):\n        return 'YES'\n    else:\n        return 'NO'\ntest = int(input())\nfor i in range(test):\n    x = checker()\n    print(x)", "def solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = 0\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            count += 1\n    for i in range(len(arr)):\n        if count:\n            count -= 1\n            arr[i] = -abs(arr[i])\n        else:\n            arr[i] = abs(arr[i])\n    if arr == sorted(arr):\n        return 'YES'\n    else:\n        return 'NO'\nt = int(input())\nfor _ in range(t):\n    print(solve())", "for i in range(int(input())):\n    t = int(input())\n    a = list(map(int, input().split()))\n    b = 0\n    for i in range(t):\n        if a[i] < 0:\n            b += 1\n            a[i] = -a[i]\n        else:\n            pass\n    for i in range(b):\n        a[i] = -a[i]\n    if sorted(a) == a:\n        print('YES')\n    else:\n        print('NO')", "def solve():\n    for tc in range(int(input())):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        neg = 0\n        for i in range(n):\n            if arr[i] < 0:\n                arr[i] -= 2 * arr[i]\n                neg += 1\n        for i in range(neg):\n            arr[i] = -arr[i]\n        if sorted(arr) == arr:\n            print('YES')\n        else:\n            print('NO')\nsolve()", "t = int(input())\n\ndef isSorted(n, arr):\n    k = 0\n    for a in range(n):\n        if arr[a] < 0:\n            k += 1\n    for i in range(n):\n        if i < k:\n            if not arr[i] < 0:\n                arr[i] = -arr[i]\n        elif i >= k:\n            if arr[i] < 0:\n                arr[i] = -arr[i]\n    for i in range(n):\n        if i < k and i + 1 < k and (arr[i] > arr[i + 1]):\n            return 'NO'\n        elif i >= k and i + 1 < n and (arr[i] > arr[i + 1]):\n            return 'NO'\n    return 'YES'\nfor i in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split(' ')]\n    print(isSorted(n, arr))", "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        if lis[i] < 0:\n            lis[i] = -1 * lis[i]\n            count += 1\n    for j in range(count):\n        lis[j] = -1 * lis[j]\n    if lis == sorted(lis):\n        print('YES')\n    else:\n        print('NO')", "def solve():\n    (N, A) = (int(input()), list(map(int, input().split())))\n    X = 0\n    for i in range(N):\n        if A[i] < 0:\n            X += 1\n        A[i] = abs(A[i])\n    for i in range(1, X):\n        if A[i] > A[i - 1]:\n            print('NO')\n            return\n    for i in range(X, N - 1):\n        if A[i] > A[i + 1]:\n            print('NO')\n            return\n    print('YES')\nfor _ in range(int(input())):\n    solve()", "n = int(input())\nfor _ in range(n):\n    _ = input()\n    numbers = [int(number) for number in input().split()]\n    negative = 0\n    for number in numbers:\n        if number < 0:\n            negative += 1\n    is_non_decreasing = True\n    previous_number = -float('inf')\n    for number in numbers:\n        if negative >= 1:\n            number = -abs(number)\n            negative = negative - 1\n        else:\n            number = abs(number)\n        if previous_number > number:\n            is_non_decreasing = False\n            break\n        previous_number = number\n    if is_non_decreasing:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\n\ndef solution(n, a):\n    cnt_neg = 0\n    for elem in a:\n        if elem < 0:\n            cnt_neg += 1\n    for i in range(1, n):\n        if i < cnt_neg and abs(a[i]) > abs(a[i - 1]):\n            return 'NO'\n        elif i > cnt_neg and abs(a[i]) < abs(a[i - 1]):\n            return 'NO'\n    return 'YES'\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solution(n, a))", "for _ in range(int(input())):\n    (n, a) = (int(input()), [*map(int, input().split())])\n    no_of_neg_numbers = sum((1 if i < 0 else 0 for i in a))\n    t = [abs(a[i]) * (-1 if i < no_of_neg_numbers else 1) for i in range(len(a))]\n    if sorted(t) == t:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = 0\n    for j in range(n):\n        if a[j] < 0:\n            b += 1\n    c = []\n    for j in range(b):\n        c.append(abs(a[j]) * -1)\n    for j in range(b, n):\n        c.append(abs(a[j]))\n    if c == sorted(c):\n        print('YES')\n    else:\n        print('NO')", "def main():\n    for _ in range(int(input())):\n        (_, s) = (input(), input())\n        cnt = s.count('-')\n        l = list(map(int, s.replace('-', '').split()))\n        for i in range(cnt):\n            l[i] *= -1\n        print(('NO', 'YES')[l == sorted(l)])\nmain()", "for j in range(0, int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    x = []\n    for i in l:\n        if i < 0:\n            c = c + 1\n    x = [abs(z) for z in l]\n    for q in range(0, c):\n        x[q] = x[q] * -1\n    if x == sorted(x):\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    n = int(input())\n    a = [*map(int, input().split())]\n    cc = 0\n    for i in range(n):\n        if a[i] < 0:\n            cc += 1\n    a = [abs(i) for i in a]\n    for i in range(cc):\n        a[i] = -a[i]\n    if a == sorted(a):\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    n = int(input())\n    a = [*map(int, input().split())]\n    cc = 0\n    for i in range(n):\n        if a[i] < 0:\n            cc += 1\n    a = [abs(i) for i in a]\n    for i in range(cc):\n        a[i] = -a[i]\n    if a == sorted(a):\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    n = int(input())\n    a = [*map(int, input().split())]\n    cc = 0\n    for i in range(n):\n        if a[i] < 0:\n            cc += 1\n    a = [abs(i) for i in a]\n    for i in range(cc):\n        a[i] = -a[i]\n    if a == sorted(a):\n        print('YES')\n    else:\n        print('NO')", "t = int(input(''))\nfor _ in range(t):\n    n = int(input(''))\n    arr = list(map(int, input('').split(' ')))\n    i = 0\n    j = n - 1\n    while i < j:\n        if arr[j] < 0:\n            if arr[i] > 0:\n                arr[i] = -arr[i]\n                arr[j] = abs(arr[j])\n                i += 1\n                j -= 1\n            else:\n                i += 1\n        else:\n            j -= 1\n    a = sorted(arr)\n    if arr == a:\n        print('YES')\n    else:\n        print('NO')", "for f in range(int(input())):\n    (n, a) = (int(input()), [*map(int, input().split())])\n    h = sum((1 for v in a if v < 0))\n    b = [abs(a[i]) * (-1 if i < h else 1) for i in range(n)]\n    print('YES' if sorted(b) == b else 'NO')", "for _ in range(int(input())):\n    (n, a) = (int(input()), list(map(int, input().split())))\n    (p1, p2) = (0, n - 1)\n    while True:\n        while a[p1] < 0 and p1 < p2:\n            p1 += 1\n        while a[p2] > 0 and p1 < p2:\n            p2 -= 1\n        if p1 == p2:\n            break\n        (a[p1], a[p2]) = (-a[p1], -a[p2])\n    print('YES' if sorted(a) == a else 'NO')", "num_of_case = int(input())\nfor _ in range(num_of_case):\n    N = int(input())\n    arr = [int(x) for x in input().split(' ')]\n    left = 0\n    right = N - 1\n    while left < right:\n        while left < right and arr[left] < 0:\n            left += 1\n        while left < right and arr[right] >= 0:\n            right -= 1\n        if left < right:\n            (arr[left], arr[right]) = (-arr[left], -arr[right])\n            left += 1\n            right -= 1\n    result_printed = False\n    for idx in range(1, N):\n        if arr[idx] < arr[idx - 1]:\n            print('NO')\n            result_printed = True\n            break\n    if not result_printed:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    cnt = 0\n    for i in range(n):\n        if arr[i] < 0:\n            cnt += 1\n            arr[i] = -arr[i]\n    for i in range(cnt):\n        arr[i] = -arr[i]\n    print('YES' if arr == sorted(arr) else 'NO')", "def solve(a, n):\n    count = 0\n    for x in a:\n        if x < 0:\n            count += 1\n    for y in range(count - 1):\n        if abs(a[y]) < abs(a[y + 1]):\n            return 'NO'\n    for z in range(count, n - 1):\n        if abs(a[z]) > abs(a[z + 1]):\n            return 'NO'\n    return 'YES'\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = solve(a, n)\n    print(b)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    neg = 0\n    for i in range(n):\n        if lst[i] < 0:\n            neg += 1\n            lst[i] = -lst[i]\n    for i in range(neg):\n        lst[i] = -lst[i]\n    print('YES' if sorted(lst) == lst else 'NO')", "def ver(n, a):\n    m = 0\n    k = 0\n    for i in range(n):\n        if a[i] < 0:\n            k += 1\n            a[i] = abs(a[i])\n    for i in range(k):\n        a[i] = -1 * a[i]\n    if a == sorted(a):\n        return 'YES'\n    else:\n        return 'NO'\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    print(ver(n, a))", "import sys\nimport math\nfrom math import gcd, sqrt, log2, ceil, floor\nimport heapq as hq\nfrom bisect import bisect_right, bisect_left, bisect\nimport itertools\nfrom sys import stdin, stdout, setrecursionlimit\nMOD = int(1000000000.0) + 7\nalp = 'abcdefghijklmnopqrstuvwxyz'\nT = 1\nT = int(stdin.readline())\nfor _ in range(T):\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().rstrip().split()))\n    nc = 0\n    for i in range(n):\n        if a[i] < 0:\n            nc += 1\n    for i in range(n):\n        if i < nc:\n            a[i] = -abs(a[i])\n        else:\n            a[i] = abs(a[i])\n    A = a.copy()\n    A.sort()\n    if A == a:\n        print('YES')\n    else:\n        print('NO')", "import datetime\nt = int(input())\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = 0\n    for i in a:\n        if i < 0:\n            k += 1\n    for i in range(1, n):\n        if i < k:\n            if abs(a[i]) > abs(a[i - 1]):\n                print('NO')\n                return\n        elif i > k:\n            if abs(a[i]) < abs(a[i - 1]):\n                print('NO')\n                return\n    print('YES')\nfor i in range(t):\n    solve()", "def main():\n    for _ in range(int(input())):\n        (_, s) = (input(), input())\n        cnt = s.count('-')\n        l = list(map(int, s.replace('-', '').split()))\n        for i in range(cnt):\n            l[i] *= -1\n        print(('NO', 'YES')[l == sorted(l)])\nmain()", "def solve() -> bool:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    negative = 0\n    for e in arr:\n        if e < 0:\n            negative += 1\n    positive = n - negative\n    for i in range(1, negative):\n        if abs(arr[i - 1]) < abs(arr[i]):\n            return False\n    for i in range(negative + 1, n):\n        if abs(arr[i - 1]) > abs(arr[i]):\n            return False\n    return True\nfor _ in range(int(input())):\n    print('YES' if solve() else 'NO')", "import collections\nfrom math import ceil, gcd, sqrt, log\nINF = float('inf')\nmod = 1000000007\n\ndef solve():\n    n = int(input())\n    A = list(map(int, input().split()))\n    j = 0\n    for i in range(n):\n        if A[i] < 0:\n            A[i] = -1 * A[i]\n            A[j] = -1 * A[j]\n            j += 1\n    if A == sorted(A):\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    k = 0\n    for i in range(n):\n        if arr[i] < 0:\n            arr[i] *= -1\n            if arr[k] > 0:\n                arr[k] *= -1\n            k += 1\n    if arr == sorted(arr):\n        print('YES')\n    else:\n        print('NO')", "import math\nfrom collections import Counter\n\ndef fun(a):\n    neg = 0\n    for i in range(len(a)):\n        if a[i] < 0:\n            neg += 1\n            a[i] *= -1\n    for i in range(len(a)):\n        if neg:\n            a[i] *= -1\n            neg -= 1\n        else:\n            break\n    if a == sorted(a):\n        return 1\nn = int(input())\nfor _ in range(n):\n    l = input()\n    a = input().split()\n    a = list(map(int, a))\n    if fun(a):\n        print('YES')\n    else:\n        print('NO')", "for num in range(int(input())):\n    an = int(input())\n    al = list(map(int, input().split()))\n    count = 0\n    for i in al:\n        if i < 0:\n            count += 1\n    if count == len(al) or count == 0:\n        pass\n    else:\n        for j in range(count):\n            if al[j] > 0:\n                al[j] = al[j] * -1\n        for k in range(count, len(al)):\n            if al[k] < 0:\n                al[k] = al[k] * -1\n    sl = sorted(al)\n    if al == sl:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, a) = (int(input()), [*map(int, input().split())])\n    neg = sum((1 for v in a if v < 0))\n    b = [abs(a[i]) * (-1 if i < neg else 1) for i in range(n)]\n    print('YES' if sorted(b) == b else 'NO')", "xx = int(input())\n\ndef cal(n, arr):\n    x = 0\n    for i in range(n):\n        if arr[i] < 0:\n            x += 1\n            arr[i] = -arr[i]\n    for i in range(x):\n        arr[i] = -arr[i]\n    if sorted(arr) == arr:\n        return True\n    return False\nfor jj in range(xx):\n    n = int(input())\n    arr = [int(i) for i in input().split(' ')]\n    if cal(n, arr):\n        print('YES')\n    else:\n        print('NO')", "for f in range(int(input())):\n    (n, a) = (int(input()), [*map(int, input().split())])\n    h = sum((1 for v in a if v < 0))\n    b = [abs(a[i]) * (-1 if i < h else 1) for i in range(n)]\n    print('YES' if sorted(b) == b else 'NO')", "for f in range(int(input())):\n    (n, a) = (int(input()), [*map(int, input().split())])\n    h = sum((1 for v in a if v < 0))\n    b = [abs(a[i]) * (-1 if i < h else 1) for i in range(n)]\n    print('YES' if sorted(b) == b else 'NO')", "from sys import stdin\ninput = stdin.readline\nrn = lambda : int(input())\nrns = lambda : map(int, input().split())\nrl = lambda : list(map(int, input().split()))\nrs = lambda : input().strip()\nYN = lambda x: print('YES') if x else print('NO')\nceil_div = lambda a, b: -(-a // b)\nmod = 10 ** 9 + 7\nfor _ in range(rn()):\n    n = rn()\n    a = rl()\n    neg = len([i for i in range(n) if a[i] < 0])\n    a = [abs(a[i]) for i in range(n)]\n    for i in range(n):\n        if a[i] > 0 and neg > 0:\n            a[i] *= -1\n            neg -= 1\n    ans = True\n    for i in range(n - 1):\n        if a[i] > a[i + 1]:\n            ans = False\n            break\n    YN(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    i = 0\n    j = len(arr) - 1\n    while i < j:\n        if arr[i] > 0 and arr[j] < 0:\n            arr[i] *= -1\n            arr[j] *= -1\n            i += 1\n            j -= 1\n        elif arr[i] < 0:\n            i += 1\n        else:\n            j -= 1\n    if sorted(arr) == arr:\n        print('YES')\n    else:\n        print('NO')", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    negatives = 0\n    for i in a:\n        if i < 0:\n            negatives += 1\n    flag = True\n    for i in range(negatives - 1):\n        if abs(a[i]) < abs(a[i + 1]):\n            flag = False\n            break\n    if not flag:\n        print('NO')\n        continue\n    for i in range(negatives, n - 1, 1):\n        if abs(a[i]) > abs(a[i + 1]):\n            flag = False\n            break\n    if not flag:\n        print('NO')\n    else:\n        print('YES')", "import sys\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    minuses = 0\n    for ai in a:\n        if ai < 0:\n            minuses += 1\n    last = float('-inf')\n    possible = True\n    for i in range(len(a)):\n        if i < minuses:\n            ai = -abs(a[i])\n        else:\n            ai = abs(a[i])\n        if ai < last:\n            possible = False\n            break\n        last = ai\n    if possible:\n        sys.stdout.write('YES\\n')\n    else:\n        sys.stdout.write('NO\\n')", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ctr = 0\n    for i in range(n):\n        if a[i] < 0:\n            ctr += 1\n            a[i] = abs(a[i])\n    for i in range(ctr):\n        a[i] = -a[i]\n    flag = True\n    for i in range(1, n):\n        if a[i] < a[i - 1]:\n            flag = False\n            break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    s = 0\n    m = 0\n    for j in range(n):\n        if l[j] < 0:\n            s += 1\n    for j in range(s - 1):\n        if abs(l[j]) < abs(l[j + 1]):\n            m = 1\n            break\n    if m == 0:\n        for j in range(s, n - 1):\n            if abs(l[j]) > abs(l[j + 1]):\n                m = 1\n                break\n    if m == 1:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor t_item in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = 0\n    for x in a:\n        if x < 0:\n            k += 1\n    flag = True\n    for i in range(len(a) - 1):\n        x = abs(a[i])\n        y = abs(a[i + 1])\n        if i < k:\n            x = -x\n        if i + 1 < k:\n            y = -y\n        if x > y:\n            flag = False\n            break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if sorted(a) == a:\n        print('YES')\n        continue\n    c = 0\n    for i in range(n):\n        if a[i] < 0:\n            c += 1\n            a[i] *= -1\n    for i in range(c):\n        a[i] *= -1\n    print('YES' if sorted(a) == a else 'NO')", "t = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    list1 = [int(num) for num in input().split()]\n    negs = 0\n    flag = 0\n    for i in range(0, len(list1)):\n        if list1[i] < 0:\n            negs += 1\n    i = 0\n    while negs > 1:\n        if abs(list1[i]) >= abs(list1[i + 1]):\n            negs -= 1\n            i += 1\n        else:\n            flag = 1\n            break\n    if negs == 1:\n        i += 1\n    if flag == 0:\n        while i < len(list1) - 1:\n            if abs(list1[i]) > abs(list1[i + 1]):\n                flag = 1\n                break\n            i += 1\n    if flag == 1:\n        print('NO')\n    else:\n        print('YES')", "from collections import deque\n\ndef sign_sort(A) -> bool:\n    pos_index = deque()\n    for i in range(len(A)):\n        if pos_index and A[i] < 0:\n            j = pos_index.popleft()\n            A[j] *= -1\n            A[i] *= -1\n        if A[i] > 0:\n            pos_index.append(i)\n    past_value = float('-inf')\n    for x in A:\n        if x < past_value:\n            return False\n        past_value = x\n    return True\nn = int(input())\nfor _ in range(n):\n    size = int(input())\n    array_str = input()\n    array = list(map(int, array_str.split(' ')))\n    answer = sign_sort(array)\n    if answer:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = [k for k in l if k < 0]\n    for i in range(n):\n        if i < len(m) and l[i] > 0:\n            l[i] *= -1\n        elif i >= len(m) and l[i] < 0:\n            l[i] *= -1\n    k = l.copy()\n    l.sort()\n    if k == l:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().strip().split()))[:n]\n    temp = []\n    neg = 0\n    for i in a:\n        if i < 0:\n            neg += 1\n    if neg == 0:\n        flag = 0\n        for i in range(1, n):\n            if a[i] < a[i - 1]:\n                print('NO')\n                flag = 1\n                break\n        if flag == 0:\n            print('YES')\n    else:\n        flag = 0\n        for i in range(neg - 1):\n            if abs(a[i]) < abs(a[i + 1]):\n                print('NO')\n                flag = 1\n                break\n        if flag == 1:\n            continue\n        for i in range(neg + 1, n):\n            if abs(a[i]) < abs(a[i - 1]):\n                print('NO')\n                flag = 1\n                break\n        if flag == 0:\n            print('YES')", "n = int(input())\nfor i in range(n):\n    x = int(input())\n    l = [int(m) for m in input().split()]\n    (j, k) = (0, x - 1)\n    p = 0\n    while k > j:\n        if l[j] > 0 and l[k] < 0:\n            l[j] = -l[j]\n            l[k] = -l[k]\n            j += 1\n            k -= 1\n            continue\n        if l[j] < 0:\n            j += 1\n        if l[k] > 0:\n            k -= 1\n        if l[k] > 0 and l[j] < 0:\n            j += 1\n            k -= 1\n    z = 0\n    for e in range(x - 1):\n        if l[e] > l[e + 1]:\n            print('NO')\n            z = 1\n            break\n    if z == 0:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    cnt = 0\n    for i in a:\n        if i < 0:\n            cnt += 1\n    abs_a = [abs(a[i]) for i in range(n)]\n    for i in range(cnt):\n        abs_a[i] *= -1\n    if abs_a == sorted(abs_a):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    arr = [int(x) for x in input().split(' ')]\n    negs = 0\n    for num in arr:\n        if num < 0:\n            negs += 1\n    for i in range(n):\n        if negs > 0:\n            if arr[i] > 0:\n                arr[i] *= -1\n            negs -= 1\n        else:\n            arr[i] = arr[i] if arr[i] > 0 else -arr[i]\n    isSorted = True\n    for i in range(1, n):\n        if arr[i] < arr[i - 1]:\n            isSorted = False\n            break\n    print('YES' if isSorted else 'NO')", "for _ in range(int(input())):\n    n = input()\n    lst = list(map(int, input().split()))\n    c = 0\n    for i in range(len(lst)):\n        if lst[i] < 0:\n            c += 1\n            lst[i] *= -1\n    for i in range(len(lst)):\n        if c > 0:\n            lst[i] *= -1\n            c -= 1\n    if lst == sorted(lst):\n        print('YES')\n    else:\n        print('NO')", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    a = list(map(int, input().split()))\n    neg_cnt = 0\n    for n in a:\n        if n < 0:\n            neg_cnt += 1\n    b = list(map(lambda x: abs(x), a))\n    for i in range(neg_cnt):\n        b[i] = -b[i]\n    if sorted(b) == b:\n        print('YES')\n    else:\n        print('NO')", "for T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    cnt = 0\n    for i in a:\n        if i < 0:\n            cnt += 1\n    b = []\n    c = []\n    for i in range(0, cnt):\n        b.append(-abs(a[i]))\n    for i in range(cnt, n):\n        c.append(abs(a[i]))\n    B = sorted(b)\n    C = sorted(c)\n    if b == B and c == C:\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\n\ndef LI():\n    return list(map(int, input().split()))\nfor _ in range(int(input())):\n    n = int(input())\n    a = LI()\n    flag = True\n    cnt = 0\n    for i in range(n):\n        if a[i] < 0:\n            cnt += 1\n    b = []\n    for i in range(n):\n        if a[i] > 0 and cnt > 0:\n            b.append(-a[i])\n            cnt -= 1\n        elif a[i] < 0 and cnt > 0:\n            b.append(a[i])\n            cnt -= 1\n        else:\n            b.append(abs(a[i]))\n    tmp = b[0]\n    for i in range(1, n):\n        if tmp > b[i]:\n            flag = False\n            break\n        tmp = b[i]\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "import sys\nsys.setrecursionlimit(2 * 10 ** 5)\ninput = sys.stdin.readline\nimport math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    narr = arr[:]\n    narr.sort()\n    if arr == narr:\n        print('YES')\n        continue\n    c = 0\n    for j in arr:\n        if j < 0:\n            c += 1\n    if c == 0:\n        print('NO')\n        continue\n    for j in range(n):\n        if c > 0:\n            arr[j] = -1 * abs(arr[j])\n            c = c - 1\n        else:\n            arr[j] = abs(arr[j])\n    f = 0\n    for j in range(1, n):\n        if arr[j] >= arr[j - 1]:\n            continue\n        f = 1\n        break\n    if f == 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    k = 0\n    for i in range(n):\n        if arr[i] < 0:\n            arr[i] *= -1\n            if arr[k] > 0:\n                arr[k] *= -1\n            k += 1\n    if arr == sorted(arr):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(e) for e in input().split()]\n    t = [abs(e) for e in a]\n    k = a[0] > 0\n    i = 0\n    for i in range(1, n):\n        if t[i] > t[i - 1]:\n            i -= 1\n            break\n        k += a[i] > 0\n    j = i\n    while j >= 0 and t[i] == t[j]:\n        j -= 1\n    r = i - j\n    for i in range(i + 1, n):\n        if t[i] < t[i - 1]:\n            print('NO')\n            break\n        k -= a[i] < 0\n    else:\n        if 0 <= k <= r:\n            print('YES')\n        else:\n            print('NO')", "for i in range(int(input())):\n    a = int(input())\n    lis = list(map(int, input().split()))\n    c = 0\n    for i in range(a):\n        if lis[i] < 0:\n            c += 1\n            lis[i] = abs(lis[i])\n    for i in range(c):\n        lis[i] = -lis[i]\n    l2 = lis.copy()\n    l2.sort()\n    if l2 == lis:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    nc = 0\n    for i in range(n):\n        if a[i] < 0:\n            nc += 1\n            a[i] = a[i] * -1\n    for i in range(nc):\n        a[i] = -1 * a[i]\n    b = a.copy()\n    b.sort()\n    if a == b:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lt = list(map(int, input().split()))\n    (flag, flag1) = (0, 0)\n    (l, r) = (0, n - 1)\n    while l < r:\n        while r > 0 and lt[r] > 0:\n            r -= 1\n        while l < n and lt[l] < 0:\n            l += 1\n        if l != n and r != 0 and (l < r):\n            lt[r] *= -1\n            lt[l] *= -1\n            l += 1\n            r -= 1\n    flag = 0\n    for i in range(1, n):\n        if lt[i] < lt[i - 1]:\n            flag = 1\n    if flag == 1:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    neg = 0\n    for i in l:\n        if i < 0:\n            neg += 1\n    newl = []\n    for i in l:\n        if neg:\n            newl.append(-abs(i))\n            neg -= 1\n        else:\n            newl.append(abs(i))\n    print('YES' if newl == sorted(newl) else 'NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    c = 0\n    for n in l:\n        if n < 0:\n            c += 1\n    x = [abs(i) for i in l]\n    for i in range(c):\n        x[i] = x[i] * -1\n    if x == sorted(x):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    c = 0\n    for n in l:\n        if n < 0:\n            c += 1\n    x = [abs(i) for i in l]\n    for i in range(c):\n        x[i] = x[i] * -1\n    if x == sorted(x):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    negative = 0\n    for i in a:\n        if i < 0:\n            negative += 1\n    b = []\n    for i in a:\n        if negative > 0:\n            b.append(-1 * abs(i))\n            negative -= 1\n        else:\n            b.append(abs(i))\n    a = b.copy()\n    a.sort()\n    if a == b:\n        print('YES')\n    else:\n        print('NO')", "def check(arr):\n    for i in range(len(arr) - 1):\n        if arr[i] > arr[i + 1]:\n            return False\n    return True\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    l = 0\n    h = 0\n    while l < n:\n        if arr[l] < 0:\n            arr[l] = -1 * arr[l]\n            arr[h] = -1 * arr[h]\n            h += 1\n        l += 1\n    if check(arr):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor __ in range(t):\n    n = int(input())\n    arr = [int(val) for val in input().split(' ')]\n    neg_count = sum((1 if val < 0 else 0 for val in arr))\n    arr = [-abs(val) if idx < neg_count else abs(val) for (idx, val) in enumerate(arr)]\n    if sorted(arr) == arr:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = [k for k in l if k < 0]\n    for i in range(n):\n        if i < len(m) and l[i] > 0:\n            l[i] *= -1\n        elif i >= len(m) and l[i] < 0:\n            l[i] *= -1\n    k = l.copy()\n    l.sort()\n    if k == l:\n        print('YES')\n    else:\n        print('NO')", "tt = True\nff = False\n\ndef pif(condition):\n    if condition:\n        print('YES')\n    else:\n        print('NO')\nimport math\nfrom math import ceil\n\ndef ini():\n    return int(input())\n\ndef ins():\n    return input()\n\ndef inni():\n    return map(int, input().split())\n\ndef ilist():\n    return list(map(int, input().split()))\n\ndef imat(n):\n    mat = []\n    for i in range(n):\n        mat.append(ilist())\n    return mat\n\ndef slist(n):\n    slist = [input() for i in range(n)]\n\ndef rem(list, value, occurence):\n    c = 0\n    i = 0\n    while c < occurence:\n        if list[i] == value:\n            list.pop(i)\n            c += 1\n        else:\n            i += 1\nt = ini()\nfor i in range(t):\n    n = ini()\n    a = ilist()\n    c = 0\n    for e in a:\n        if e < 0:\n            c += 1\n    for i in range(n):\n        if i < c:\n            a[i] = -abs(a[i])\n        else:\n            a[i] = abs(a[i])\n    b = a[:]\n    b.sort()\n    pif(a == b)", "n = int(input())\nfor i in range(n):\n    l = int(input())\n    li = list(map(int, input().split()))\n    neg = 0\n    for i in range(l):\n        if li[i] < 0:\n            li[i] = -li[i]\n            neg += 1\n    for i in range(neg):\n        li[i] = -li[i]\n    s_li = sorted(li)\n    if li == s_li:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        if arr[i] < 0:\n            arr[i] = abs(arr[i])\n            count += 1\n    for i in range(count):\n        arr[i] = -arr[i]\n    if arr == sorted(arr):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    i = 0\n    j = n - 1\n    while i < j:\n        if arr[i] <= 0:\n            i += 1\n        if arr[j] >= 0:\n            j -= 1\n        if i < j and arr[i] > 0 and (arr[j] < 0):\n            arr[i] *= -1\n            arr[j] *= -1\n            i += 1\n            j -= 1\n    i = 1\n    ans = 'YES'\n    while i < n:\n        if arr[i] < arr[i - 1]:\n            ans = 'NO'\n            break\n        i += 1\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    a = [*map(int, input().split())]\n    cc = 0\n    for i in range(n):\n        if a[i] < 0:\n            cc += 1\n    a = [abs(i) for i in a]\n    for i in range(cc):\n        a[i] = -a[i]\n    if a == sorted(a):\n        print('YES')\n    else:\n        print('NO')", "(YES, NO) = ('YES', 'NO')\n\ndef is_sorted(arr):\n    for i in range(1, len(arr)):\n        if arr[i] < arr[i - 1]:\n            return False\n    return True\n\ndef solve(n, arr):\n    (i, j) = (0, 0)\n    while i < n:\n        if arr[i] < 0:\n            arr[j] *= -1\n            j += 1\n            arr[i] *= -1\n        i += 1\n    if is_sorted(arr):\n        return YES\n    else:\n        return NO\ntc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(solve(n, arr))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if sorted(a) == a:\n        print('YES')\n        continue\n    ng = 0\n    for i in range(n):\n        if a[i] < 0:\n            ng += 1\n            a[i] *= -1\n    for i in range(ng):\n        a[i] *= -1\n    print('YES' if a == sorted(a) else 'NO')", "k = int(input())\nfor _ in range(k):\n    a = int(input())\n    n = list(map(int, input().split()))\n    s = 0\n    d = []\n    for __ in n:\n        if __ < 0:\n            s += 1\n    q = n[:s]\n    w = n[s:]\n    for i in q:\n        e = abs(i) * -1\n        d += [e]\n    for j in w:\n        r = abs(j)\n        d += [r]\n    t = sorted(d)\n    if t == d:\n        print('YES')\n    else:\n        print('NO')", "def solution(arr):\n    negative = len([x for x in arr if x < 0])\n    for i in range(0, len(arr)):\n        arr[i] = abs(arr[i])\n        if negative > 0:\n            arr[i] *= -1\n            negative -= 1\n    for i in range(0, len(arr) - 1):\n        if arr[i] > arr[i + 1]:\n            return 'NO'\n    return 'YES'\nfor t in range(0, int(input())):\n    _ = input()\n    nums = list(map(int, input().split()))\n    print(solution(nums))", "from collections import deque\n\ndef is_sorted(arr):\n    for i in range(len(arr) - 1):\n        if arr[i + 1] < arr[i]:\n            return False\n    return True\n\ndef can_be_sorted(arr):\n    (l, r) = (0, len(arr) - 1)\n    while l < r:\n        if arr[l] > 0 and arr[r] < 0:\n            arr[l] *= -1\n            arr[r] *= -1\n            l += 1\n            r -= 1\n        elif arr[r] < 0:\n            l += 1\n        elif arr[l] > 0:\n            r -= 1\n        else:\n            l += 1\n            r -= 1\n    return is_sorted(arr)\nt = int(input())\nfor _ in range(t):\n    n = input()\n    arr = list(map(int, input().split(' ')))\n    if can_be_sorted(arr):\n        print('YES')\n    else:\n        print('NO')"]