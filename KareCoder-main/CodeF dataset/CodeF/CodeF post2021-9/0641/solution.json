["import sys\nimport math\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    MAX = l[-1]\n    ans = MAX // 3 + (MAX % 3 != 0)\n    modset = list(set(list(map(lambda x: x % 3, l))))\n    if MAX % 3 == 0:\n        if len(modset) > 1:\n            ans += 1\n    elif MAX % 3 == 2:\n        if 1 in modset:\n            ans += 1\n    elif 2 in modset:\n        if l[0] == 1 or (n >= 2 and MAX - 1 in l):\n            ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = max(a)\n    r = []\n    for i in range(n):\n        r.append(a[i] % 3)\n    rx = x % 3\n    ans = x // 3\n    if rx == 0:\n        if 1 in r or 2 in r:\n            ans += 1\n    if rx == 1:\n        ans += 1\n        if 2 in r and (x - 1 in a or 1 in a):\n            ans += 1\n    if rx == 2:\n        ans += 1\n        if 1 in r:\n            ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = max(a)\n    r = []\n    for i in range(n):\n        r.append(a[i] % 3)\n    rx = x % 3\n    ans = x // 3\n    if rx == 0:\n        if 1 in r or 2 in r:\n            ans += 1\n    if rx == 1:\n        ans += 1\n        if 2 in r and (x - 1 in a or 1 in a):\n            ans += 1\n    if rx == 2:\n        ans += 1\n        if 1 in r:\n            ans += 1\n    print(ans)", "def mincoin(arr):\n    zero = 0\n    num3 = max(arr) // 3 - 1\n    mid = num3 * 3 + 3\n    lower = [0, 0, 0]\n    upper = [0, 0]\n    for i in arr:\n        if i < mid:\n            lower[i % 3] = 1\n        elif i == mid:\n            zero = 1\n        else:\n            upper[i % 3 - 1] = 1\n    lower[0] = zero\n    if sum(upper) == 2:\n        return num3 + 3\n    elif sum(upper) == 0:\n        return min(2, sum(lower)) + num3\n    elif upper[0] == 1:\n        if num3 < 0:\n            return sum(upper)\n        elif min(arr) == 1:\n            return num3 + 2 + lower[2]\n        else:\n            return num3 + 2 + (lower[0] and lower[2] == 1)\n    elif lower[1] == 1:\n        return num3 + 3\n    else:\n        return num3 + 2\nr = int(input())\nres = []\nfor i in range(r):\n    input()\n    arr = list(map(int, input().split()))\n    res.append(mincoin(arr))\nfor i in res:\n    print(i)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = max(a)\n    r = []\n    for i in range(n):\n        r.append(a[i] % 3)\n    rx = x % 3\n    ans = x // 3\n    if rx == 0:\n        if 1 in r or 2 in r:\n            ans += 1\n    if rx == 1:\n        ans += 1\n        if 2 in r and (x - 1 in a or 1 in a):\n            ans += 1\n    if rx == 2:\n        ans += 1\n        if 1 in r:\n            ans += 1\n    print(ans)", "import sys\nimport math\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    MAX = l[-1]\n    ans = MAX // 3 + (MAX % 3 != 0)\n    modset = list(set(list(map(lambda x: x % 3, l))))\n    if MAX % 3 == 0:\n        if len(modset) > 1:\n            ans += 1\n    elif MAX % 3 == 2:\n        if 1 in modset:\n            ans += 1\n    elif 2 in modset:\n        if l[0] == 1 or (n >= 2 and MAX - 1 in l):\n            ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = max(a)\n    r = []\n    for i in range(n):\n        r.append(a[i] % 3)\n    rx = x % 3\n    ans = x // 3\n    if rx == 0:\n        if 1 in r or 2 in r:\n            ans += 1\n    if rx == 1:\n        ans += 1\n        if 2 in r and (x - 1 in a or 1 in a):\n            ans += 1\n    if rx == 2:\n        ans += 1\n        if 1 in r:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    nums.sort()\n    max_num = nums[-1]\n    (remainder_1, remainder_2) = (False, False)\n    for num in nums:\n        if num % 3 == 1:\n            remainder_1 = True\n        if num % 3 == 2:\n            remainder_2 = True\n    if max_num % 3 == 0:\n        res = max_num // 3\n        if remainder_1 or remainder_2:\n            res += 1\n        print(res)\n    elif max_num % 3 == 1:\n        res = max_num // 3 + 1\n        just_below = True if max_num - 1 in nums else False\n        if remainder_2 and just_below or (remainder_2 and 1 in nums):\n            res += 1\n        print(res)\n    elif max_num % 3 == 2:\n        res = max_num // 3 + 1\n        if remainder_1:\n            res += 1\n        print(res)", "ans = []\nfor p in range(int(input())):\n    cnt = 0\n    price = []\n    u = int(input())\n    mas = input().split()\n    for i in range(u):\n        mas[i] = int(mas[i])\n    ost1 = 0\n    ost2 = 0\n    for i in mas:\n        if i % 3 == 1:\n            ost1 = 1\n            if ost2 == 1:\n                break\n        if i % 3 == 2:\n            ost2 = 1\n            if ost1 == 1:\n                break\n    if 1 in mas:\n        if max(mas) == 2:\n            cnt = 2\n        else:\n            cnt = max(mas) // 3 + ost1 + ost2\n            if max(mas) % 3 == 0 and ost2 == 1:\n                cnt -= 1\n    elif max(mas) == 2:\n        cnt = 1\n    elif max(mas) == 4:\n        cnt = 2\n        if 3 in mas and 2 in mas:\n            cnt += 1\n    else:\n        cnt = max(mas) // 3 + ost1 + ost2\n        if ost1 + ost2 == 2 and max(mas) % 3 == 1 and (not max(mas) - 1 in mas) or (ost1 + ost2 == 2 and max(mas) % 3 == 0):\n            cnt -= 1\n    ans.append(cnt)\nfor i in ans:\n    print(i)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    m = max(lst)\n    c1 = 0\n    c2 = 0\n    for j in lst:\n        if j % 3 == 1:\n            c1 += 1\n        elif j % 3 == 2:\n            c2 += 1\n    if m % 3 == 0:\n        if c1 == 0 and c2 == 0:\n            print(m // 3)\n        else:\n            print(m // 3 + 1)\n    elif m % 3 == 1:\n        if m == 1:\n            print(1)\n        else:\n            if 1 in lst or m - 1 in lst:\n                ans1 = (m - 4) // 3 + 3\n            else:\n                ans1 = (m - 4) // 3 + 2\n            if c2 > 0:\n                ans2 = (m - 1) // 3 + 2\n            else:\n                ans2 = (m - 1) // 3 + 1\n            print(min(ans1, ans2))\n    elif c1 > 0:\n        print(m // 3 + 2)\n    else:\n        print(m // 3 + 1)", "def solver():\n    n = int(input())\n    for _ in range(n):\n        n_flavors = int(input())\n        cost_flavors = list(reversed(sorted(list(map(int, input().split())))))\n        final = {}\n        checker = True\n        for i in cost_flavors:\n            if checker:\n                final[3] = final.get(3, 0) + i // 3\n                checker = False\n            if i % 3 == 2:\n                final[2] = 1\n            elif i % 3 == 1:\n                final[1] = 1\n        if final.get(3, 0) != 0 and final.get(1, 5) != 5 and (final.get(2, 5) != 5):\n            if cost_flavors[0] % 3 == 0:\n                final[3] = final[3] - 1\n            if cost_flavors[0] % 3 == 1 and cost_flavors[0] - 1 not in cost_flavors:\n                final[3] = final[3] - 1\n                final[2] = 2\n                final[1] = 0\n            if 1 in cost_flavors:\n                final[1] = 1\n        print(final.get(3, 0) + final.get(2, 0) + final.get(1, 0))\nsolver()", "import sys\n\ndef exact_change(n, a):\n    a.sort()\n    _1 = 0\n    _2 = 0\n    for ai in a:\n        r = ai % 3\n        if r == 1:\n            _1 = 1\n        elif r == 2:\n            _2 = 1\n    r = a[-1] % 3\n    if r == 0:\n        if _1 == 1 or _2 == 1:\n            return a[-1] // 3 + 1\n        return a[-1] // 3\n    if r == 2:\n        if _1 == 0:\n            return a[-1] // 3 + 1\n        return a[-1] // 3 + 2\n    if r == 1:\n        if _2 == 0:\n            return a[-1] // 3 + 1\n        if a[0] == 1:\n            return a[-1] // 3 + 2\n        j = 2\n        while j < n:\n            if a[-1] - a[-j] == 1:\n                return a[-1] // 3 + 2\n            if a[-1] - a[-j] > 1:\n                break\n            j += 1\n        return a[-1] // 3 + 1\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    sys.stdout.write(f'{exact_change(n, a)}\\n')", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    b = [0, 0, 0]\n    for i in range(n):\n        b[a[i] % 3] += 1\n    if a[n - 1] % 3 == 0:\n        if b[1] == 0 and b[2] == 0:\n            print(a[n - 1] // 3)\n        else:\n            print(a[n - 1] // 3 + 1)\n    elif a[n - 1] % 3 == 1:\n        if b[2] == 0 or (a.count(1) == 0 and a.count(a[n - 1] - 1) == 0):\n            print(a[n - 1] // 3 + 1)\n        else:\n            print(a[n - 1] // 3 + 2)\n    elif b[1] == 0:\n        print(a[n - 1] // 3 + 1)\n    else:\n        print(a[n - 1] // 3 + 2)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = max(a)\n    r = []\n    for i in range(n):\n        r.append(a[i] % 3)\n    rx = x % 3\n    ans = x // 3\n    if rx == 0:\n        if 1 in r or 2 in r:\n            ans += 1\n    if rx == 1:\n        ans += 1\n        if 2 in r and (x - 1 in a or 1 in a):\n            ans += 1\n    if rx == 2:\n        ans += 1\n        if 1 in r:\n            ans += 1\n    print(ans)", "def solve():\n    N = int(input())\n    a = list(map(int, input().split()))\n    r = [0, 0, 0]\n    M = max(a)\n    for i in range(N):\n        r[a[i] % 3] |= 1\n    if M % 3 == 0:\n        if r[1] | r[2] == 1:\n            print(M // 3 + 1)\n        else:\n            print(M // 3)\n    elif M % 3 == 1:\n        if r[2] == 0 or M == 1:\n            print(M // 3 + 1)\n        else:\n            ok = True\n            for i in range(N):\n                if a[i] % 3 == 0 and a[i] // 3 <= M // 3 - 1:\n                    continue\n                if not (a[i] >= 2 and (a[i] - 2) % 3 == 0) and (not (a[i] >= 4 and (a[i] - 4) % 3 == 0)):\n                    ok = False\n            if ok:\n                print(M // 3 + 1)\n            else:\n                print(M // 3 + 2)\n    elif r[1] == 1:\n        print(M // 3 + 2)\n    else:\n        print(M // 3 + 1)\nT = int(input())\nwhile T > 0:\n    T -= 1\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    mc = max(l)\n    if mc == 1:\n        ans = 1\n    else:\n        hasone = 1 in l\n        extras = set((num % 3 for num in l if num != mc))\n        extras.discard(0)\n        (q, r) = divmod(mc, 3)\n        closecall = any((mc > num >= 3 * q for num in l))\n        if len(extras) == 0:\n            ans = q + (not not r)\n        elif len(extras) == 1:\n            if r in extras:\n                ans = q + 1\n            elif r == 1:\n                if closecall:\n                    ans = q + 2\n                else:\n                    ans = q + 1\n            elif r == 2:\n                ans = q + 2\n            else:\n                ans = q + 1\n        elif r == 2:\n            ans = q + 2\n        elif r == 1:\n            if hasone:\n                ans = q + 2\n            elif closecall:\n                ans = q + 2\n            else:\n                ans = q + 1\n        else:\n            ans = q + 1\n    print(ans)", "def find(n, L):\n    if n == 1:\n        return int((L[0] - 1) / 3) + 1\n    r0 = []\n    r1 = []\n    r2 = []\n    for elem in L:\n        r = elem % 3\n        if r == 0:\n            r0.append(elem)\n        elif r == 1:\n            r1.append(elem)\n        else:\n            r2.append(elem)\n    x = max(L)\n    if x % 3 == 0:\n        if len(r1) == 0 and len(r2) == 0:\n            return int(x / 3)\n        else:\n            return int(x / 3) + 1\n    elif x % 3 == 2:\n        if len(r1) == 0:\n            return int(x / 3) + 1\n        else:\n            return int(x / 3) + 2\n    elif len(r2) == 0:\n        return int(x / 3) + 1\n    elif 1 in r1:\n        return int(x / 3) + 2\n    elif len(r0) == 0:\n        return int(x / 3) + 1\n    elif max(r0) + 1 < x:\n        return int(x / 3) + 1\n    else:\n        return int(x / 3) + 2\ncases = int(input())\nfor _ in range(cases):\n    n = int(input())\n    line = input().split()\n    L = []\n    for elem in line:\n        L.append(int(elem))\n    print(find(n, L))", "t = int(input())\nfor case in range(t):\n    n = int(input())\n    stuff = [int(x) for x in input().split(' ')]\n    needs1 = 0\n    needs2 = 0\n    all3 = True\n    mini = float('inf')\n    maxi = 0\n    anothercondition = 0\n    has3 = False\n    for x in stuff:\n        if x % 3 == 1:\n            needs1 = 1\n            all3 = False\n        elif x % 3 == 2:\n            needs2 = 1\n            all3 = False\n        if x > maxi:\n            anothercondition = maxi\n            maxi = x\n        elif anothercondition < x < maxi:\n            anothercondition = x\n        if x < mini:\n            mini = x\n        if x == 3:\n            has3 = True\n    if all3:\n        print(maxi // 3)\n    elif maxi % 3 == 0:\n        print(maxi // 3 + 1)\n    elif mini == 1:\n        print(maxi // 3 + needs1 + needs2)\n    elif maxi % 3 == 1:\n        if maxi - anothercondition == 1:\n            print(maxi // 3 + needs1 + needs2)\n        else:\n            print(maxi // 3 + 1)\n    else:\n        print(maxi // 3 + needs1 + needs2)", "INF = 1000000000000000000\n\ndef sol1(A):\n    max3 = 0\n    for x in A:\n        if x % 3 == 0:\n            x -= 3\n            max3 = max(max3, x // 3)\n        else:\n            max3 = max(max3, x // 3)\n    return 2 + max3\n\ndef sol2(A):\n    max3 = 0\n    for x in A:\n        if x % 3 == 1:\n            return INF\n        max3 = max(max3, x // 3)\n    return 1 + max3\n\ndef sol3(A):\n    max3 = 0\n    for x in A:\n        if x % 3 == 2:\n            return INF\n        max3 = max(max3, x // 3)\n    return 1 + max3\n\ndef sol4(A):\n    max3 = 0\n    for x in A:\n        if x == 1:\n            return INF\n        if x % 3 == 1:\n            x -= 4\n            max3 = max(max3, x // 3)\n        elif x % 3 == 2:\n            max3 = max(max3, x // 3)\n        else:\n            max3 = max(max3, x // 3)\n    return 2 + max3\n\ndef sol5(A):\n    max3 = 0\n    for x in A:\n        if x % 3 == 1:\n            return INF\n        if x % 3 == 2:\n            return INF\n        max3 = max(max3, x // 3)\n    return max3\n\ndef solve():\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    mini = sol1(A)\n    mini = min(mini, sol2(A))\n    mini = min(mini, sol3(A))\n    mini = min(mini, sol4(A))\n    mini = min(mini, sol5(A))\n    print(mini)\nT = int(input())\nfor i in range(T):\n    solve()", "t = int(input())\n\ndef get_sum_3(count):\n    return count[3] + min(count[2], count[1]) + max(0, count[1] - count[2]) // 3\nfor i in range(t):\n    count = [0, 0, 0, 0]\n    n = int(input())\n    a = [int(x) for x in input().split(' ')]\n    a.sort()\n    a = a[::-1]\n    may3 = 0\n    for j in range(n):\n        div = a[j] // 3\n        res = a[j] % 3\n        if res == 0 and may3 == 0:\n            may3 = div\n        if get_sum_3(count) < div:\n            count[3] += div - get_sum_3(count)\n        if res > 0 and count[res] == 0:\n            count[res] = 1\n    if a[0] % 3 == 0 and count[1] and count[2]:\n        count[3] = max(count[3] - 1, 0)\n    elif a[0] % 3 == 1 and count[1] and count[2] and (a[-1] != 1) and (may3 == 0 or may3 <= count[3] - 1):\n        count[3] -= 1\n        count[1] -= 1\n        count[2] += 1\n    print(count[3] + count[2] + count[1])", "import sys\nfrom math import *\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    A = [int(x) for x in input().split()]\n\n    def check(B):\n        mx = 0\n        for a in A:\n            res = 10 ** 18\n            for b in B:\n                aa = a - b\n                if aa >= 0 and aa % 3 == 0:\n                    res = min(res, aa // 3)\n            mx = max(mx, res)\n        return mx\n    alt0 = check([0])\n    alt1 = check([0, 1]) + 1\n    alt2 = check([0, 2]) + 1\n    alt3 = check([0, 1, 2, 3]) + 2\n    alt4 = check([0, 2, 4]) + 2\n    print(min(alt0, alt1, alt2, alt3, alt4))", "t = int(input())\nret = []\nfor ii in range(t):\n    n = int(input())\n    d = list(map(int, input().split()))\n    ans = 10 ** 18\n    for i in range(3):\n        for j in range(3):\n            some3 = 0\n            flg = True\n            for k in range(n):\n                if d[k] == 1 and i == 0:\n                    flg = False\n                    break\n                now = d[k]\n                now -= i * 1 + j * 2\n                if now < 0:\n                    if i >= 1 or now % 2 == 0:\n                        continue\n                    else:\n                        some3 = max(1, some3)\n                elif now % 3 == 0:\n                    some3 = max(some3, now // 3)\n                elif now % 3 == 1:\n                    if i >= 2 or j >= 1:\n                        some3 = max(some3, now // 3 + 1)\n                    else:\n                        flg = False\n                        break\n                elif i >= 1:\n                    some3 = max(some3, now // 3 + 1)\n                elif j >= 2:\n                    some3 = max(some3, now // 3 + 2)\n                else:\n                    flg = False\n                    break\n            if flg:\n                ans = min(ans, i + j + some3)\n    ret.append(ans)\nprint(*ret, sep='\\n')", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    r = (max(a) + 2) // 3\n    ans = r + 1\n    for take_ones in range(3):\n        for take_twos in range(3):\n            loop_ans = 0\n            for i in range(n):\n                cur_ans = 10 ** 9\n                if a[i] % 3 == 1 and (not take_ones) and (take_twos < 2 or a[i] < 4):\n                    break\n                elif a[i] % 3 == 2 and (not take_twos) and (take_ones < 2):\n                    break\n                if a[i] % 3 == 0:\n                    cur_ans = a[i] // 3\n                if a[i] % 3 == 1:\n                    if take_ones:\n                        cur_ans = min(cur_ans, (a[i] - 1) // 3)\n                    if take_twos >= 2 and a[i] >= 4:\n                        cur_ans = min(cur_ans, (a[i] - 4) // 3)\n                if a[i] % 3 == 2:\n                    cur_ans = min(cur_ans, (a[i] - 2) // 3)\n                loop_ans = max(loop_ans, cur_ans)\n            else:\n                loop_ans += take_ones + take_twos\n                ans = min(ans, loop_ans)\n                if ans == r:\n                    break\n        if ans == r:\n            break\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    answer = max(a)\n    for i in range(2):\n        s = set((j for j in range(i + 1)))\n        for j in range(3):\n            if j > 0:\n                t = set()\n                for item in s:\n                    t.add(item + 2)\n                s |= t\n            answer = min(answer, max((min(((item - v) // 3 + i + j if item >= v and (item - v) % 3 == 0 else answer for v in s)) for item in a)))\n    print(answer)"]