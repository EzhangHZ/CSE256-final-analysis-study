["from itertools import chain\nimport itertools\nimport sys\n\ndef main():\n    input = sys.stdin.readline\n    test_cases = int(input())\n    while test_cases:\n        test_cases -= 1\n        n = int(input())\n        n_squared = n * n\n        array = list(range(1, n_squared + 1))\n        array_rev = array[::-1]\n        array = list(chain(*zip(array_rev, array)))\n        array = array[:n_squared]\n        matrix = [array[i * n:(i + 1) * n] if i % 2 == 0 else array[(i + 1) * n - 1:i * n - 1:-1] for i in range(n)]\n        print('\\n'.join((' '.join(map(str, i)) for i in matrix)))\nmain()", "t = int(input())\nresult = []\nfor i in range(t):\n    n = int(input())\n    m = n ** 2 // 2\n    k = n ** 2\n    tab = []\n    for j in range(1, m + 1):\n        tab += [str(k), str(j)]\n        k -= 1\n    if n % 2 == 1:\n        tab.append(str(n ** 2 // 2 + 1))\n    h = 0\n    for j in range(0, len(tab) - n + 1, n):\n        c = tab[j:j + n]\n        if h == 0:\n            result.append(' '.join(c))\n        else:\n            c.reverse()\n            result.append(' '.join(c))\n        h = 1 - h\nfor i in result:\n    print(i)", "def matrix_print(n=2):\n    a = 1\n    b = n ** 2\n    c = True\n    d = True\n    answer = [[0 for i in range(n)] for j in range(n)]\n    ps = n ** 2\n    i = 0\n    j = 0\n    while i < n:\n        if not c:\n            answer[i][j] = str(a)\n            a += 1\n        else:\n            answer[i][j] = str(b)\n            b -= 1\n        c = not c\n        if d:\n            j = j + 1\n            if j == n:\n                j = j - 1\n                i = i + 1\n                d = not d\n        else:\n            j = j - 1\n            if j == -1:\n                j = j + 1\n                i = i + 1\n                d = not d\n    for row in answer:\n        print(' '.join(row))\n\ndef solve(inps):\n    for inp in inps:\n        matrix_print(inp)\nlst = []\ntcs = int(input())\nfor tc in range(tcs):\n    lst.append(int(input()))\nsolve(lst)", "def ii(num=False):\n    i = input().split()\n    if num:\n        return int(i[0])\n    try:\n        return list(map(int, i))\n    except Exception:\n        return i\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef get_a():\n    b = n ** 2\n    i = 1\n    yield b\n    while True:\n        yield i\n        yield (b - i)\n        i += 1\nfor _ in range(ii(1)):\n    n = ii(1)\n    gen = get_a()\n    for i in range(n):\n        k = []\n        for j in range(n):\n            k.append(str(next(gen)))\n        if i % 2 == 1:\n            k.reverse()\n        print(' '.join(k))\n    pass", "import time\nimport sys\n\ndef print_matr(n, print, end_line):\n    arr = [n * n]\n    stop = n * n // 2 + 1\n    for i in range(1, stop):\n        arr.append(i)\n        arr.append(n * n - i)\n    if n % 2 == 0:\n        arr.pop()\n    matr = [[] for _ in range(n)]\n    for i in range(n):\n        for j in range(n):\n            matr[i].append(arr[i * n + j])\n        if i % 2 == 1:\n            matr[i].reverse()\n    for i in range(n):\n        print(' '.join(map(str, matr[i])) + end_line)\n\ndef main(input, print, end_line):\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        print_matr(n, print, end_line)\nmain(sys.stdin.readline, sys.stdout.write, '\\n')", "from itertools import chain\nimport itertools\n\ndef main():\n    test_cases = int(input())\n    while test_cases:\n        test_cases -= 1\n        n = int(input())\n        n_squared = n * n\n        array = list(range(1, n_squared + 1))\n        array_rev = array[::-1]\n        array = list(chain(*zip(array_rev, array)))\n        array = array[:n_squared]\n        matrix = [array[i * n:(i + 1) * n] if i % 2 == 0 else array[(i + 1) * n - 1:i * n - 1:-1] for i in range(n)]\n        print('\\n'.join((' '.join(map(str, i)) for i in matrix)))\nmain()", "from math import ceil\nfor _ in range(int(input())):\n    n = int(input())\n    m = n * n\n    matrix = []\n    for i in range(ceil(m / 2)):\n        matrix.append(m - i)\n        if len(matrix) < m:\n            matrix.append(i + 1)\n    for y in range(n):\n        for x in range(n):\n            if not y % 2:\n                matrix.append(matrix.pop(0))\n            else:\n                matrix.append(matrix.pop(n - 1 - x))\n    for i in range(0, m, n):\n        print(' '.join(list(map(str, matrix[i:i + n]))))", "for _ in range(int(input())):\n    n = int(input())\n    m = n ** 2\n    i = 1\n    for x in range(n):\n        if x % 2 == 0:\n            for j in range(n):\n                if j % 2 == 0:\n                    print(m - i + 1, end=' ')\n                else:\n                    print(i, end=' ')\n                    i += 1\n            print()\n        else:\n            str = ''\n            for j in range(n):\n                if j % 2 == 0 and n % 2 == 0:\n                    str = '{}'.format(m - i + 1) + ' ' + str\n                elif j % 2 == 1 and n % 2 == 0:\n                    str = '{}'.format(i) + ' ' + str\n                    i += 1\n                elif j % 2 == 0 and n % 2 == 1:\n                    str = '{}'.format(i) + ' ' + str\n                    i += 1\n                else:\n                    str = '{}'.format(m - i + 1) + ' ' + str\n            print(str)", "def solve(n):\n    res = []\n    k1 = n ** 2\n    k2 = 1\n    f = 1\n    for i in range(n):\n        t = []\n        if i % 2 == 0:\n            for j in range(n):\n                if f:\n                    t.append(k1)\n                    k1 -= 1\n                    f = 0\n                else:\n                    t.append(k2)\n                    k2 += 1\n                    f = 1\n        else:\n            for j in range(n):\n                if f:\n                    t.insert(0, k1)\n                    k1 -= 1\n                    f = 0\n                else:\n                    t.insert(0, k2)\n                    k2 += 1\n                    f = 1\n        res.append(t)\n    return res\nfor _ in range(int(input())):\n    n = int(input())\n    res = solve(n)\n    for i in res:\n        print(*i)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [[0] * n for _ in range(n)]\n    p = False\n    a = 1\n    b = n ** 2\n    for i in range(n):\n        x = 0\n        y = i\n        while x < n and y >= 0:\n            if p:\n                arr[x][y] = a\n                a += 1\n            else:\n                arr[x][y] = b\n                b -= 1\n            x += 1\n            y -= 1\n        p = not p\n    for i in range(1, n):\n        x = i\n        y = n - 1\n        while x < n and y >= 0:\n            if p:\n                arr[x][y] = a\n                a += 1\n            else:\n                arr[x][y] = b\n                b -= 1\n            x += 1\n            y -= 1\n        p = not p\n    for i in range(n):\n        print(*arr[i])", "for t in range(int(input())):\n    n = int(input())\n    arr = []\n    i = 1\n    j = n * n\n    while i <= j:\n        if i == j:\n            arr.append(i)\n        else:\n            arr.append(j)\n            arr.append(i)\n        i += 1\n        j -= 1\n    ans = []\n    count = 0\n    for i in range(1, n * n, n):\n        if count % 2 == 0:\n            print(*arr[i - 1:i + n - 1][:])\n        else:\n            print(*arr[i - 1:i + n - 1][::-1])\n        count += 1", "for _ in range(int(input())):\n    n = int(input())\n\n    def increasing(s):\n        while True:\n            yield s\n            s += 1\n\n    def decreasing(s):\n        while True:\n            yield s\n            s -= 1\n    inc = increasing(1)\n    dec = decreasing(n ** 2)\n    for i in range(n):\n        row = [_ for j in range(n)]\n        for j in range(n - 1, -1, -1) if i & 1 else range(n):\n            if i + j & 1:\n                row[j] = next(inc)\n            else:\n                row[j] = next(dec)\n        print(*row)", "t = int(input().strip())\nfor _ in range(t):\n    n = int(input().strip())\n    ans = []\n    for i in range(n):\n        row = []\n        if i % 2 == 0:\n            for j in range(n):\n                if j % 2 == 0:\n                    row.append(n * n - n * (i // 2) - j // 2)\n                else:\n                    row.append(1 + n * (i // 2) + j // 2)\n        else:\n            for j in range(n):\n                if j % 2 == 0:\n                    row.append(n * (i // 2 + 1) - j // 2)\n                else:\n                    row.append(n * n - n + 1 - n * (i // 2) + j // 2)\n        ans.append(row)\n    for r in ans:\n        print(*r)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [0] * n ** 2\n    a[0] = n ** 2\n    for j in range(1, n ** 2, 2):\n        a[j] = (j + 1) // 2\n        if j < n ** 2 - 1:\n            a[j + 1] = n ** 2 - (j + 1) // 2\n    k = 0\n    for j in range(1, n + 1, 2):\n        print(*a[k:k + n])\n        k += n\n        print(*a[k + n - 1:k - 1:-1])\n        k += n"]