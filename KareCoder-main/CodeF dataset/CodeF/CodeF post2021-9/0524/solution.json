["for _ in range(int(input())):\n    (n, m) = [int(i) for i in input().split()]\n    a = []\n    num = [0] * n\n    for i in range(n):\n        a.append([int(i) for i in input().split()])\n        num[i] = a[i].count(1)\n    count = sum(num)\n    if count % n:\n        print(-1)\n        continue\n    count //= n\n    mm = 0\n    for i in num:\n        if i - count > 0:\n            mm += i - count\n    print(mm)\n    (i, j) = (0, 0)\n    while True:\n        while i < n and num[i] <= count:\n            i += 1\n        while j < n and num[j] >= count:\n            j += 1\n        if i >= n or j >= n:\n            break\n        m = min(num[i] - count, count - num[j])\n        num[i] -= m\n        num[j] += m\n        f = 0\n        while m:\n            if a[i][f] == 1 and a[j][f] == 0:\n                a[i][f] = 0\n                a[j][f] = 1\n                print(i + 1, j + 1, f + 1)\n                m -= 1\n            f += 1", "for tc in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    for i in range(n):\n        l.append(list(map(int, input().split())))\n    c1 = []\n    for i in range(n):\n        c1.append(l[i].count(1))\n    exp1 = sum(c1) // n\n    exp0 = m - exp1\n    if sum(c1) % n != 0:\n        print(-1)\n        continue\n    elif c1.count(exp1) == n:\n        print(0)\n        continue\n    more = []\n    less = []\n    for i in range(n):\n        if c1[i] > exp1:\n            more.append(i)\n        elif c1[i] < exp1:\n            less.append(i)\n    k = 0\n    count = 0\n    res = []\n    i = 0\n    while i < len(more):\n        for j in range(m):\n            if i >= len(more):\n                break\n            if l[more[i]][j] == 1 and l[less[k]][j] == 0:\n                count += 1\n                res.append([more[i] + 1, less[k] + 1, j + 1])\n                l[more[i]][j] = 0\n                l[less[k]][j] = 1\n                c1[less[k]] += 1\n                c1[more[i]] -= 1\n                if c1[less[k]] == exp1:\n                    k += 1\n                if c1[more[i]] == exp1:\n                    i += 1\n    print(count)\n    for i in res:\n        print(i[0], end=' ')\n        print(i[1], end=' ')\n        print(i[2], end=' ')\n        print()", "for i in range(int(input())):\n    (rows, cols) = map(int, input().split())\n    mat = []\n    ones_arr = []\n    total_ones = 0\n    for i in range(rows):\n        arr = list(map(int, input().split()))\n        mat.append(arr)\n        ones_count = arr.count(1)\n        ones_arr.append(ones_count)\n        total_ones += ones_count\n    avg = total_ones / rows\n    if avg != int(avg):\n        print(-1)\n    else:\n        ava = int(avg)\n        ans = []\n        for j in range(cols):\n            extra = []\n            for i in range(rows):\n                if ones_arr[i] > avg and mat[i][j] == 1:\n                    extra.append(i)\n            for i in range(rows):\n                if ones_arr[i] < avg and mat[i][j] == 0 and (len(extra) > 0):\n                    donor = extra.pop()\n                    ans.append([i + 1, donor + 1, j + 1])\n                    ones_arr[i] += 1\n                    ones_arr[donor] -= 1\n        print(len(ans))\n        for i in ans:\n            print(*i)", "t = int(input())\nfor _ in range(t):\n    (n, m) = [int(i) for i in input().strip().split()]\n    a = []\n    count = 0\n    stri_1 = [[0, i] for i in range(n)]\n    for i in range(n):\n        temp = [int(i) for i in input().strip().split()]\n        a.append(temp)\n        for j in range(m):\n            if temp[j] == 1:\n                stri_1[i][0] += 1\n                count += 1\n    if count % n != 0:\n        print(-1)\n    else:\n        ans = []\n        val = count // n\n        stri_1.sort(reverse=True)\n        i = 0\n        j = n - 1\n        while j > i:\n            for k in range(m):\n                if stri_1[i][0] == val:\n                    i += 1\n                    break\n                if stri_1[j][0] == val:\n                    j -= 1\n                    break\n                if a[stri_1[i][1]][k] == 1 and a[stri_1[j][1]][k] == 0:\n                    ans.append([stri_1[i][1] + 1, stri_1[j][1] + 1, k + 1])\n                    a[stri_1[i][1]][k] = 0\n                    a[stri_1[j][1]][k] = 1\n                    stri_1[i][0] -= 1\n                    stri_1[j][0] += 1\n            if stri_1[i][0] == val:\n                i += 1\n            if stri_1[j][0] == val:\n                j -= 1\n        print(len(ans))\n        for x in ans:\n            print(*x)", "t = int(input())\nfor k in range(t):\n    (n, m) = map(int, input().split())\n    a = []\n    aux = []\n    up = []\n    down = []\n    ss = 0\n    for i in range(n):\n        c = 0\n        l = list(map(int, input().split()))\n        a.append(l)\n        for i in range(m):\n            if l[i] == 1:\n                c += 1\n        aux.append(c)\n    s = sum(aux)\n    if s % n != 0:\n        print(-1)\n    else:\n        for i in range(n):\n            if aux[i] == s / n:\n                pass\n            elif aux[i] < s / n:\n                down.append(i)\n            else:\n                ss += aux[i] - s / n\n                up.append(i)\n        print(int(ss))\n        i = 0\n        o = 0\n        while i < len(up):\n            flag = 0\n            while o < len(down) and flag == 0:\n                fflag = 0\n                while aux[up[i]] > int(s / n) and aux[down[o]] < int(s / n):\n                    for j in range(m):\n                        if a[up[i]][j] == 1 and a[down[o]][j] == 0:\n                            a[up[i]][j] = 0\n                            a[down[o]][j] = 1\n                            print(up[i] + 1, down[o] + 1, j + 1)\n                            aux[up[i]] -= 1\n                            aux[down[o]] += 1\n                        if aux[up[i]] == int(s / n):\n                            flag = 1\n                        if aux[down[o]] == int(s / n):\n                            fflag = 1\n                        if flag == 1 or fflag == 1:\n                            break\n                if flag == 1:\n                    i += 1\n                if fflag == 1:\n                    o += 1", "t = int(input())\nfor _ in range(t):\n    (n, m) = [int(i) for i in input().strip().split()]\n    a = []\n    count = 0\n    stri_1 = [[0, i] for i in range(n)]\n    for i in range(n):\n        temp = [int(i) for i in input().strip().split()]\n        a.append(temp)\n        for j in range(m):\n            if temp[j] == 1:\n                stri_1[i][0] += 1\n                count += 1\n    if count % n != 0:\n        print(-1)\n    else:\n        ans = []\n        val = count // n\n        stri_1.sort(reverse=True)\n        i = 0\n        j = n - 1\n        while j > i:\n            for k in range(m):\n                if stri_1[i][0] == val:\n                    i += 1\n                    break\n                if stri_1[j][0] == val:\n                    j -= 1\n                    break\n                if a[stri_1[i][1]][k] == 1 and a[stri_1[j][1]][k] == 0:\n                    ans.append([stri_1[i][1] + 1, stri_1[j][1] + 1, k + 1])\n                    a[stri_1[i][1]][k] = 0\n                    a[stri_1[j][1]][k] = 1\n                    stri_1[i][0] -= 1\n                    stri_1[j][0] += 1\n            if stri_1[i][0] == val:\n                i += 1\n            if stri_1[j][0] == val:\n                j -= 1\n        print(len(ans))\n        for x in ans:\n            print(*x)", "import sys\n\ndef parse():\n    t = int(sys.stdin.readline())\n    for i in range(t):\n        (n, m) = list(map(int, sys.stdin.readline().split()))\n        matrix = []\n        count_rows = [0] * n\n        actions_count = 0\n        actions = []\n        for j in range(n):\n            arr = list(map(int, sys.stdin.readline().split()))\n            matrix.append(arr)\n            count_rows[j] = sum(arr)\n        ones_count = sum(count_rows)\n        if ones_count % n != 0:\n            print('-1')\n            continue\n        ones_row_count = ones_count // n\n        less_idx = 0\n        large_idx = 0\n        while True:\n            while less_idx < n and count_rows[less_idx] >= ones_row_count:\n                less_idx += 1\n            while large_idx < n and count_rows[large_idx] <= ones_row_count:\n                large_idx += 1\n            if less_idx == n:\n                break\n            for j in range(m):\n                if matrix[large_idx][j] == 1 and matrix[less_idx][j] == 0:\n                    matrix[large_idx][j] = 0\n                    matrix[less_idx][j] = 1\n                    count_rows[large_idx] -= 1\n                    count_rows[less_idx] += 1\n                    actions.append((large_idx + 1, less_idx + 1, j + 1))\n                    actions_count += 1\n                    if count_rows[large_idx] == ones_row_count or count_rows[less_idx] == ones_row_count:\n                        break\n        print(actions_count)\n        if actions_count > 0:\n            for action_idx in range(actions_count):\n                print(*actions[action_idx])\nparse()", "for jj in range(int(input())):\n    (n, m) = [int(i) for i in input().split()]\n    tm = []\n    tot = 0\n    for i in range(n):\n        arr = input().split()\n        a = arr.count('1')\n        arr = [a] + arr + [i + 1]\n        tm.append(arr)\n        tot += a\n    if tot % n != 0:\n        print(-1)\n        continue\n    tm.sort()\n    (i, j) = (0, n - 1)\n    ans = []\n    p = tot // n\n    while i < j:\n        a = tm[i][0]\n        b = tm[j][0]\n        if a == b == p:\n            i += 1\n            j -= 1\n            continue\n        elif a == p:\n            i += 1\n            continue\n        elif b == p:\n            j -= 1\n            continue\n        k = min(p - a, b - p)\n        for ii in range(1, m + 1):\n            if k == 0:\n                break\n            if tm[j][ii] == '1':\n                if tm[i][ii] == '0':\n                    (tm[j][ii], tm[i][ii]) = (tm[i][ii], tm[j][ii])\n                    tm[i][0] += 1\n                    tm[j][0] -= 1\n                    ans.append((tm[i][-1], tm[j][-1], ii))\n                    k -= 1\n    print(len(ans))\n    for i in ans:\n        print(*i)", "for _ in range(int(input())):\n    (n, m) = [int(i) for i in input().split()]\n    a = []\n    num = [0] * n\n    for i in range(n):\n        a.append([int(i) for i in input().split()])\n        num[i] = a[i].count(1)\n    count = sum(num)\n    if count % n:\n        print(-1)\n        continue\n    count //= n\n    mm = 0\n    for i in num:\n        if i - count > 0:\n            mm += i - count\n    print(mm)\n    (i, j) = (0, 0)\n    while True:\n        while i < n and num[i] <= count:\n            i += 1\n        while j < n and num[j] >= count:\n            j += 1\n        if i >= n or j >= n:\n            break\n        m = min(num[i] - count, count - num[j])\n        num[i] -= m\n        num[j] += m\n        f = 0\n        while m:\n            if a[i][f] == 1 and a[j][f] == 0:\n                a[i][f] = 0\n                a[j][f] = 1\n                print(i + 1, j + 1, f + 1)\n                m -= 1\n            f += 1", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    nums = []\n    cnt = []\n    for _ in range(n):\n        lin = list(map(int, input().split()))\n        cnt.append(lin.count(1))\n        nums.append(lin)\n    sums = sum(cnt)\n    h = sums // n\n    if sums % n != 0:\n        print(-1)\n        continue\n    for i in range(n):\n        cnt[i] = cnt[i] - h\n    has = [[] for _ in range(m)]\n    need = [[] for _ in range(m)]\n    for i in range(n):\n        for j in range(m):\n            if cnt[i] > 0 and nums[i][j] == 1:\n                has[j].append(i)\n            elif cnt[i] < 0 and nums[i][j] == 0:\n                need[j].append(i)\n    cao = []\n    for i in range(m):\n        bur = cur = 0\n        while bur < len(has[i]) and cur < len(need[i]):\n            if cnt[has[i][bur]] == 0:\n                bur += 1\n            elif cnt[need[i][cur]] == 0:\n                cur += 1\n            else:\n                cao.append([has[i][bur], need[i][cur], i])\n                cnt[has[i][bur]] -= 1\n                cnt[need[i][cur]] += 1\n                bur += 1\n                cur += 1\n    print(len(cao))\n    for i in cao:\n        print(i[0] + 1, i[1] + 1, i[2] + 1)", "t = int(input())\nfor i in range(t):\n    (n, m) = [int(j) for j in input().split()]\n    lst = [[int(k) for k in input().split()] for j in range(n)]\n    sums = []\n    for l in lst:\n        sums.append(sum(l))\n    if sum(sums) % n != 0:\n        print(-1)\n        continue\n    even_sum = sum(sums) // n\n    ops = []\n    for j in range(m):\n        ones = []\n        for k in range(n):\n            if sums[k] > even_sum and lst[k][j] == 1:\n                ones.append(k)\n        for k in range(n):\n            if sums[k] < even_sum and lst[k][j] == 0 and (len(ones) > 0):\n                pos = ones.pop(0)\n                sums[pos] -= 1\n                sums[k] += 1\n                (lst[k][j], lst[pos][j]) = (1, 0)\n                ops.append(f'{pos + 1} {k + 1} {j + 1}')\n    print(len(ops))\n    for j in ops:\n        print(j)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    l = []\n    ct = []\n    for x in range(n):\n        a = list(map(int, input().split()))\n        l.append(a)\n        cnt = 0\n        for y in a:\n            if y == 1:\n                cnt += 1\n        ct.append(cnt)\n    oct = sum(ct)\n    if oct % n != 0:\n        print(-1)\n    else:\n        oct = int(oct / n)\n        inc = dict()\n        drc = dict()\n        for i in range(n):\n            if ct[i] > oct:\n                inc[i] = ct[i] - oct\n            elif ct[i] < oct:\n                drc[i] = oct - ct[i]\n        x = list(inc.keys())\n        y = list(drc.keys())\n        x1 = 0\n        y1 = 0\n        print(sum(list(inc.values())))\n        while x1 < len(x) and y1 < len(y):\n            for j in range(m):\n                if l[x[x1]][j] == 1 and l[y[y1]][j] == 0:\n                    print(x[x1] + 1, y[y1] + 1, j + 1)\n                    l[x[x1]][j] = 0\n                    l[y[y1]][j] = 1\n                    f = 0\n                    inc[x[x1]] -= 1\n                    drc[y[y1]] -= 1\n                    if inc[x[x1]] == 0:\n                        x1 += 1\n                        f = 1\n                    if drc[y[y1]] == 0:\n                        y1 += 1\n                        f = 1\n                    if f:\n                        break\n            if x1 == len(x) or y1 == len(y):\n                break", "t = int(input())\nfor _ in range(t):\n    (n, m) = [int(i) for i in input().strip().split()]\n    a = []\n    count = 0\n    stri_1 = [[0, i] for i in range(n)]\n    for i in range(n):\n        temp = [int(i) for i in input().strip().split()]\n        a.append(temp)\n        for j in range(m):\n            if temp[j] == 1:\n                stri_1[i][0] += 1\n                count += 1\n    if count % n != 0:\n        print(-1)\n    else:\n        ans = []\n        val = count // n\n        stri_1.sort(reverse=True)\n        i = 0\n        j = n - 1\n        while j > i:\n            for k in range(m):\n                if stri_1[i][0] == val:\n                    i += 1\n                    break\n                if stri_1[j][0] == val:\n                    j -= 1\n                    break\n                if a[stri_1[i][1]][k] == 1 and a[stri_1[j][1]][k] == 0:\n                    ans.append([stri_1[i][1] + 1, stri_1[j][1] + 1, k + 1])\n                    a[stri_1[i][1]][k] = 0\n                    a[stri_1[j][1]][k] = 1\n                    stri_1[i][0] -= 1\n                    stri_1[j][0] += 1\n            if stri_1[i][0] == val:\n                i += 1\n            if stri_1[j][0] == val:\n                j -= 1\n        print(len(ans))\n        for x in ans:\n            print(*x)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = []\n    d = {}\n    ts = 0\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n        d[i] = sum(a[i])\n        ts += d[i]\n    if ts % n != 0:\n        print(-1)\n        continue\n    am = ts // n\n    ans = []\n    for i in range(m):\n        mx = []\n        mn = []\n        for j in range(n):\n            if d[j] > am and a[j][i] == 1:\n                mx.append(j)\n            elif d[j] < am and a[j][i] == 0:\n                mn.append(j)\n        for k in range(min(len(mx), len(mn))):\n            ans.append((mx[k] + 1, mn[k] + 1, i + 1))\n            d[mx[k]] -= 1\n            d[mn[k]] += 1\n    print(len(ans))\n    for i in ans:\n        print(*i)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = []\n    d = {}\n    ts = 0\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n        d[i] = sum(a[i])\n        ts += d[i]\n    if ts % n != 0:\n        print(-1)\n        continue\n    am = ts // n\n    ans = []\n    for i in range(m):\n        mx = []\n        mn = []\n        for j in range(n):\n            if d[j] > am and a[j][i] == 1:\n                mx.append(j)\n            elif d[j] < am and a[j][i] == 0:\n                mn.append(j)\n        for k in range(min(len(mx), len(mn))):\n            ans.append((mx[k] + 1, mn[k] + 1, i + 1))\n            d[mx[k]] -= 1\n            d[mn[k]] += 1\n    print(len(ans))\n    for i in ans:\n        print(*i)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = []\n    d = {}\n    ts = 0\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n        d[i] = sum(a[i])\n        ts += d[i]\n    if ts % n != 0:\n        print(-1)\n        continue\n    am = ts // n\n    ans = []\n    for i in range(m):\n        mx = []\n        mn = []\n        for j in range(n):\n            if d[j] > am and a[j][i] == 1:\n                mx.append(j)\n            elif d[j] < am and a[j][i] == 0:\n                mn.append(j)\n        for k in range(min(len(mx), len(mn))):\n            ans.append((mx[k] + 1, mn[k] + 1, i + 1))\n            d[mx[k]] -= 1\n            d[mn[k]] += 1\n    print(len(ans))\n    for i in ans:\n        print(*i)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = []\n    d = {}\n    ts = 0\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n        d[i] = sum(a[i])\n        ts += d[i]\n    if ts % n != 0:\n        print(-1)\n        continue\n    am = ts // n\n    ans = []\n    for i in range(m):\n        mx = []\n        mn = []\n        for j in range(n):\n            if d[j] > am and a[j][i] == 1:\n                mx.append(j)\n            elif d[j] < am and a[j][i] == 0:\n                mn.append(j)\n        for k in range(min(len(mx), len(mn))):\n            ans.append((mx[k] + 1, mn[k] + 1, i + 1))\n            d[mx[k]] -= 1\n            d[mn[k]] += 1\n    print(len(ans))\n    for i in ans:\n        print(*i)"]