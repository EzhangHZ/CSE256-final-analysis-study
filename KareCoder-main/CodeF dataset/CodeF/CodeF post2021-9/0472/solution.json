["from bisect import bisect_right\n\ndef helper(ele, l1):\n    ind = bisect_right(l1, ele)\n    if ind == len(l1):\n        return abs(l1[ind - 1] - ele)\n    elif ind == 0:\n        return abs(l1[0] - ele)\n    else:\n        return min(abs(l1[ind - 1] - ele), abs(l1[ind] - ele))\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    (a0, a1) = (a[0], a[n - 1])\n    b = [int(i) for i in input().split()]\n    (b0, b1) = (b[0], b[n - 1])\n    a.sort()\n    b.sort()\n    (c1, c2, c3, c4) = (helper(a0, b), helper(a1, b), helper(b0, a), helper(b1, a))\n    ans = min(abs(a0 - b0) + abs(b1 - a1), abs(a1 - b0) + abs(a0 - b1))\n    ans = min(ans, abs(a0 - b0) + c2 + c4)\n    ans = min(ans, abs(a0 - b1) + c2 + c3)\n    ans = min(ans, abs(a1 - b1) + c1 + c3)\n    ans = min(ans, abs(a1 - b0) + c1 + c4)\n    ans = min(ans, c1 + c4 + c2 + c3)\n    print(ans)", "import sys\ninput = sys.stdin.readline\n\ndef solve(n, A, B):\n    ans = min(abs(A[0] - B[0]) + abs(A[-1] - B[-1]), abs(A[0] - B[-1]) + abs(A[-1] - B[0]))\n    (minA1, minB1) = (min([abs(A[0] - b) for b in B]), min([abs(a - B[0]) for a in A]))\n    (minA2, minB2) = (min([abs(A[-1] - b) for b in B]), min([abs(a - B[-1]) for a in A]))\n    ans = min(ans, abs(A[0] - B[0]) + minA2 + minB2)\n    ans = min(ans, abs(A[-1] - B[-1]) + minA1 + minB1)\n    ans = min(ans, abs(A[0] - B[-1]) + minB1 + minA2)\n    ans = min(ans, abs(A[-1] - B[0]) + minB2 + minA1)\n    ans = min(ans, minA1 + minB1 + minA2 + minB2)\n    print(ans)\nfor _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    solve(n, A, B)", "def solve_problem():\n    for _ in range(int(input())):\n        _ = input()\n        row1 = [int(i) for i in input().split()]\n        row2 = [int(i) for i in input().split()]\n        r10 = row1[0]\n        r20 = row2[0]\n        r11 = row1[-1]\n        r21 = row2[-1]\n        diff0 = abs(r10 - r20)\n        diff1 = abs(r11 - r21)\n        left1 = min((abs(r10 - j) for j in row2))\n        left2 = min((abs(r20 - j) for j in row1))\n        right1 = min((abs(r11 - j) for j in row2))\n        right2 = min((abs(r21 - j) for j in row1))\n        left = left1 + left2\n        right = right1 + right2\n        res = left + right\n        excep1 = diff0 + diff1\n        if excep1 < res:\n            res = excep1\n        excep2 = diff0 + right\n        if excep2 < res:\n            res = excep2\n        excep3 = abs(r10 - r21) + left2 + right1\n        if excep3 < res:\n            res = excep3\n        excep4 = diff1 + left\n        if excep4 < res:\n            res = excep4\n        excep5 = abs(r11 - r20) + left1 + right2\n        if excep5 < res:\n            res = excep5\n        excep6 = abs(r10 - r21) + abs(r11 - r20)\n        if excep6 < res:\n            res = excep6\n        print(res)\nsolve_problem()", "def best(A, i):\n    return min([abs(i - j) for j in A])\n\ndef solv(A, B):\n    (a1, an) = (A[0], A[-1])\n    (b1, bn) = (B[0], B[-1])\n    a1b = best(B, a1)\n    anb = best(B, an)\n    b1b = best(A, b1)\n    bnb = best(A, bn)\n    d11 = min(abs(a1 - b1), a1b + b1b)\n    dnn = min(abs(an - bn), anb + bnb)\n    d1n = min(abs(a1 - bn), a1b + bnb)\n    dn1 = min(abs(an - b1), anb + b1b)\n    return min(d11 + dnn, d1n + dn1)\nfor _ in range(int(input())):\n    input()\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    print(solv(A, B))", "def solve_problem():\n    for _ in range(int(input())):\n        _ = input()\n        row1 = [int(i) for i in input().split()]\n        row2 = [int(i) for i in input().split()]\n        r10 = row1[0]\n        r20 = row2[0]\n        r11 = row1[-1]\n        r21 = row2[-1]\n        diff0 = abs(r10 - r20)\n        diff1 = abs(r11 - r21)\n        diff2 = abs(r10 - r21)\n        diff3 = abs(r11 - r20)\n        left1 = min((abs(r10 - j) for j in row2))\n        left2 = min((abs(r20 - j) for j in row1))\n        right1 = min((abs(r11 - j) for j in row2))\n        right2 = min((abs(r21 - j) for j in row1))\n        left = left1 + left2\n        right = right1 + right2\n        res = left + right\n        excep1 = diff0 + diff1\n        if excep1 < res:\n            res = excep1\n        excep2 = diff0 + right\n        if excep2 < res:\n            res = excep2\n        excep3 = diff2 + left2 + right1\n        if excep3 < res:\n            res = excep3\n        excep4 = diff1 + left\n        if excep4 < res:\n            res = excep4\n        excep5 = diff3 + left1 + right2\n        if excep5 < res:\n            res = excep5\n        excep6 = diff2 + diff3\n        if excep6 < res:\n            res = excep6\n        print(res)\nsolve_problem()", "def findmin(x, seq):\n    t = 1000000000\n    for i in seq:\n        if abs(x - i) < t:\n            t = abs(x - i)\n            choose = i\n    return (choose, t)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    b = list(map(int, input().split(' ')))\n    (ca0, xa0) = findmin(a[0], b)\n    (ca1, xa1) = findmin(a[-1], b)\n    (cb0, xb0) = findmin(b[0], a)\n    (cb1, xb1) = findmin(b[-1], a)\n    match00 = ca0 == b[0] or cb0 == a[0]\n    match01 = ca0 == b[-1] or cb1 == a[0]\n    match10 = ca1 == b[0] or cb0 == a[-1]\n    match11 = ca1 == b[-1] or cb1 == a[-1]\n    value00 = min(xa0 + xb0, abs(a[0] - b[0]))\n    value01 = min(xa0 + xb1, abs(a[0] - b[-1]))\n    value10 = min(xa1 + xb0, abs(a[-1] - b[0]))\n    value11 = min(xa1 + xb1, abs(a[-1] - b[-1]))\n    if match00:\n        value00 = xa0 if ca0 == b[0] else xb0\n    if match01:\n        value01 = xa0 if ca0 == b[-1] else xb1\n    if match10:\n        value10 = xa1 if ca1 == b[0] else xb0\n    if match11:\n        value11 = xa1 if ca1 == b[-1] else xb1\n    print(min(value00 + value11, value01 + value10))", "import sys\nreadline = sys.stdin.readline\nT = int(readline())\nwhile T:\n    T -= 1\n    length = int(readline())\n    a = [int(i) for i in readline().split()]\n    b = [int(i) for i in readline().split()]\n    a_begin = min((abs(a[0] - element) for element in b))\n    a_end = min((abs(a[-1] - element) for element in b))\n    b_begin = min((abs(b[0] - element) for element in a))\n    b_end = min((abs(b[-1] - element) for element in a))\n    begin_connect = abs(a[0] - b[0])\n    end_connect = abs(a[-1] - b[-1])\n    left_cross = abs(a[0] - b[-1])\n    right_cross = abs(a[-1] - b[0])\n    full_cross = right_cross + left_cross\n    cases = [begin_connect + end_connect, begin_connect + a_end + b_end, end_connect + a_begin + b_begin, a_begin + a_end + b_begin + b_end, full_cross, left_cross + a_end + b_begin, right_cross + b_end + a_begin]\n    print(min(cases))", "def solve_problem():\n    for _ in range(int(input())):\n        _ = input()\n        row1 = [int(i) for i in input().split()]\n        row2 = [int(i) for i in input().split()]\n        r10 = row1[0]\n        r20 = row2[0]\n        r11 = row1[-1]\n        r21 = row2[-1]\n        diff0 = abs(row1[0] - row2[0])\n        diff1 = abs(row1[-1] - row2[-1])\n        left1 = min((abs(r10 - j) for j in row2))\n        left2 = min((abs(r20 - j) for j in row1))\n        right1 = min((abs(r11 - j) for j in row2))\n        right2 = min((abs(r21 - j) for j in row1))\n        left = left1 + left2\n        right = right1 + right2\n        res = left + right\n        excep1 = diff0 + diff1\n        if excep1 < res:\n            res = excep1\n        excep2 = diff0 + right\n        if excep2 < res:\n            res = excep2\n        excep3 = abs(r10 - r21) + left2 + right1\n        if excep3 < res:\n            res = excep3\n        excep4 = diff1 + left\n        if excep4 < res:\n            res = excep4\n        excep5 = abs(r11 - r20) + left1 + right2\n        if excep5 < res:\n            res = excep5\n        excep6 = abs(r10 - r21) + abs(r11 - r20)\n        if excep6 < res:\n            res = excep6\n        print(res)\nsolve_problem()", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    cost_00 = min([abs(arr[0] - i) for i in arr2])\n    cost_01 = min([abs(arr[-1] - i) for i in arr2])\n    cost_10 = min([abs(arr2[0] - i) for i in arr])\n    cost_11 = min([abs(arr2[-1] - i) for i in arr])\n    cst = (cost_00 + cost_01 + cost_10 + cost_11, cost_01 + abs(arr[0] - arr2[0]) + cost_11, cost_00 + cost_10 + abs(arr[-1] - arr2[-1]), cost_00 + abs(arr[-1] - arr2[0]) + cost_11, cost_01 + abs(arr[0] - arr2[-1]) + cost_10, abs(arr[0] - arr2[0]) + abs(arr[-1] - arr2[-1]), abs(arr[0] - arr2[-1]) + abs(arr[-1] - arr2[0]), abs(arr[-1] - arr2[0]) + abs(arr[0] - arr2[-1]))\n    print(min(cst))", "tc_n = int(input())\n\ndef read_int_ln():\n    return [int(x) for x in input().split()]\n\ndef c(x, y):\n    return abs(x - y)\n\ndef mc(x, arr):\n    return min((abs(x - y) for y in arr))\nfor tc in range(tc_n):\n    n = int(input())\n    a = read_int_ln()\n    b = read_int_ln()\n    c0 = c(a[0], b[0])\n    c1 = c(a[-1], b[-1])\n    cx01 = c(a[0], b[-1])\n    cx10 = c(a[-1], b[0])\n    mca0 = mc(a[0], b)\n    mca1 = mc(a[-1], b)\n    mcb0 = mc(b[0], a)\n    mcb1 = mc(b[-1], a)\n    res = min(c0 + c1, cx01 + cx10)\n    res = min(res, c0 + mca1 + mcb1)\n    res = min(res, c1 + mca0 + mcb0)\n    res = min(res, cx01 + mca1 + mcb0)\n    res = min(res, cx10 + mca0 + mcb1)\n    res = min(res, mca0 + mca1 + mcb0 + mcb1)\n    print(res)", "import sys\ninput = sys.stdin.readline\nN = int(input())\nfor i in range(N):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    m1 = min_cost_a_1 = min([abs(a[0] - b[i]) for i in range(n)])\n    m2 = min_cost_b_1 = min([abs(b[0] - a[i]) for i in range(n)])\n    m3 = min_cost_a_n = min([abs(a[n - 1] - b[i]) for i in range(n)])\n    m4 = min_cost_b_n = min([abs(b[n - 1] - a[i]) for i in range(n)])\n    print(min([m1 + m2 + abs(a[n - 1] - b[n - 1]), m1 + m4 + abs(a[n - 1] - b[0]), m3 + m2 + abs(a[0] - b[n - 1]), m3 + m4 + abs(a[0] - b[0]), abs(a[0] - b[0]) + abs(a[n - 1] - b[n - 1]), abs(a[n - 1] - b[0]) + abs(a[0] - b[n - 1]), m1 + m2 + m3 + m4]))", "def main():\n    results = []\n    number_of_test_cases = int(input())\n    for _ in range(number_of_test_cases):\n        n = int(input())\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n        minimum = min(abs(a[0] - b[0]) + abs(a[-1] - b[-1]), abs(a[0] - b[-1]) + abs(a[-1] - b[0]))\n        minimum_a_start = min([abs(a[0] - b[i]) for i in range(n)])\n        minimum_a_end = min([abs(a[-1] - b[i]) for i in range(n)])\n        minimum_b_start = min([abs(a[i] - b[0]) for i in range(n)])\n        minimum_b_end = min([abs(a[i] - b[-1]) for i in range(n)])\n        minimum = min(minimum, abs(a[0] - b[0]) + minimum_a_end + minimum_b_end)\n        minimum = min(minimum, abs(a[0] - b[-1]) + minimum_a_end + minimum_b_start)\n        minimum = min(minimum, abs(a[-1] - b[0]) + minimum_a_start + minimum_b_end)\n        minimum = min(minimum, abs(a[-1] - b[-1]) + minimum_a_start + minimum_b_start)\n        minimum = min(minimum, minimum_a_start + minimum_a_end + minimum_b_start + minimum_b_end)\n        results.append(minimum)\n    for result in results:\n        print(result)\nmain()", "def best(A, i):\n    return min([abs(i - j) for j in A])\n\ndef solv(A, B):\n    (a1, an) = (A[0], A[-1])\n    (b1, bn) = (B[0], B[-1])\n    A.sort()\n    B.sort()\n    a1b = best(B, a1)\n    anb = best(B, an)\n    b1b = best(A, b1)\n    bnb = best(A, bn)\n    d11 = min(abs(a1 - b1), a1b + b1b)\n    dnn = min(abs(an - bn), anb + bnb)\n    d1n = min(abs(a1 - bn), a1b + bnb)\n    dn1 = min(abs(an - b1), anb + b1b)\n    return min(d11 + dnn, d1n + dn1)\nfor _ in range(int(input())):\n    input()\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    print(solv(A, B))", "def solve_problem():\n    n = int(input())\n    for _ in range(n):\n        nb_computers = int(input())\n        tmp = nb_computers - 1\n        row1 = [int(i) for i in input().split()]\n        row2 = [int(i) for i in input().split()]\n        result = 10000000000\n        left1 = min((abs(row1[0] - j) for j in row2))\n        left2 = min((abs(row2[0] - j) for j in row1))\n        right1 = min((abs(row1[-1] - j) for j in row2))\n        right2 = min((abs(row2[-1] - j) for j in row1))\n        excep1 = abs(row1[0] - row2[0]) + abs(row1[-1] - row2[-1])\n        excep2 = abs(row1[0] - row2[0]) + right1 + right2\n        excep3 = abs(row1[0] - row2[-1]) + left2 + right1\n        excep4 = abs(row1[-1] - row2[-1]) + left1 + left2\n        excep5 = abs(row1[-1] - row2[0]) + left1 + right2\n        excep6 = abs(row1[0] - row2[-1]) + abs(row1[-1] - row2[0])\n        result = min(left1 + left2 + right1 + right2, excep1, excep2, excep3, excep4, excep5, excep6)\n        print(result)\nsolve_problem()", "def solve_problem():\n    n = int(input())\n    for _ in range(n):\n        _ = input()\n        row1 = [int(i) for i in input().split()]\n        row2 = [int(i) for i in input().split()]\n        (left1, right1, left2, right2) = (10000000000, 10000000000, 10000000000, 10000000000)\n        val0 = row1[0]\n        valn = row1[-1]\n        for i in row2:\n            tmp = abs(val0 - i)\n            if tmp < left1:\n                left1 = tmp\n            tmp = abs(valn - i)\n            if tmp < right1:\n                right1 = tmp\n        val0 = row2[0]\n        valn = row2[-1]\n        for i in row1:\n            tmp = abs(val0 - i)\n            if tmp < left2:\n                left2 = tmp\n            tmp = abs(valn - i)\n            if tmp < right2:\n                right2 = tmp\n        excep1 = abs(row1[0] - row2[0]) + abs(row1[-1] - row2[-1])\n        excep2 = abs(row1[0] - row2[0]) + right1 + right2\n        excep3 = abs(row1[0] - row2[-1]) + left2 + right1\n        excep4 = abs(row1[-1] - row2[-1]) + left1 + left2\n        excep5 = abs(row1[-1] - row2[0]) + left1 + right2\n        excep6 = abs(row1[0] - row2[-1]) + abs(row1[-1] - row2[0])\n        result = min(left1 + left2 + right1 + right2, excep1, excep2, excep3, excep4, excep5, excep6)\n        print(result)\nsolve_problem()", "def solve_problem():\n    for _ in range(int(input())):\n        _ = input()\n        row1 = [int(i) for i in input().split()]\n        row2 = [int(i) for i in input().split()]\n        left1 = min((abs(row1[0] - j) for j in row2))\n        left2 = min((abs(row2[0] - j) for j in row1))\n        right1 = min((abs(row1[-1] - j) for j in row2))\n        right2 = min((abs(row2[-1] - j) for j in row1))\n        excep1 = abs(row1[0] - row2[0]) + abs(row1[-1] - row2[-1])\n        excep2 = abs(row1[0] - row2[0]) + right1 + right2\n        excep3 = abs(row1[0] - row2[-1]) + left2 + right1\n        excep4 = abs(row1[-1] - row2[-1]) + left1 + left2\n        excep5 = abs(row1[-1] - row2[0]) + left1 + right2\n        excep6 = abs(row1[0] - row2[-1]) + abs(row1[-1] - row2[0])\n        result = min(left1 + left2 + right1 + right2, excep1, excep2, excep3, excep4, excep5, excep6)\n        print(result)\nsolve_problem()", "def solve_problem():\n    for _ in range(int(input())):\n        _ = input()\n        row1 = [int(i) for i in input().split()]\n        row2 = [int(i) for i in input().split()]\n        r10 = row1[0]\n        r20 = row2[0]\n        r11 = row1[-1]\n        r21 = row2[-1]\n        diff0 = abs(row1[0] - row2[0])\n        diff1 = abs(row1[-1] - row2[-1])\n        left1 = min((abs(r10 - j) for j in row2))\n        left2 = min((abs(r20 - j) for j in row1))\n        right1 = min((abs(r11 - j) for j in row2))\n        right2 = min((abs(r21 - j) for j in row1))\n        excep1 = diff0 + diff1\n        excep2 = diff0 + right1 + right2\n        excep3 = abs(r10 - r21) + left2 + right1\n        excep4 = diff1 + left1 + left2\n        excep5 = abs(r11 - r20) + left1 + right2\n        excep6 = abs(r10 - r21) + abs(r11 - r20)\n        result = min(left1 + left2 + right1 + right2, excep1, excep2, excep3, excep4, excep5, excep6)\n        print(result)\nsolve_problem()", "def solve_problem():\n    for _ in range(int(input())):\n        _ = input()\n        row1 = [int(i) for i in input().split()]\n        row2 = [int(i) for i in input().split()]\n        r10 = row1[0]\n        r20 = row2[0]\n        r11 = row1[-1]\n        r21 = row2[-1]\n        diff0 = abs(row1[0] - row2[0])\n        diff1 = abs(row1[-1] - row2[-1])\n        left1 = min((abs(r10 - j) for j in row2))\n        left2 = min((abs(r20 - j) for j in row1))\n        right1 = min((abs(r11 - j) for j in row2))\n        right2 = min((abs(r21 - j) for j in row1))\n        left = left1 + left2\n        right = right1 + right2\n        res = left + right\n        excep1 = diff0 + diff1\n        res = min(res, excep1)\n        excep2 = diff0 + right\n        res = min(res, excep2)\n        excep3 = abs(r10 - r21) + left2 + right1\n        res = min(res, excep3)\n        excep4 = diff1 + left\n        res = min(res, excep4)\n        excep5 = abs(r11 - r20) + left1 + right2\n        res = min(res, excep5)\n        excep6 = abs(r10 - r21) + abs(r11 - r20)\n        res = min(res, excep6)\n        print(res)\nsolve_problem()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [*map(int, input().split())]\n    b = [*map(int, input().split())]\n    x = min((abs(B - a[0]) for B in b))\n    y = min((abs(B - a[-1]) for B in b))\n    z = min((abs(A - b[0]) for A in a))\n    t = min((abs(A - b[-1]) for A in a))\n    print(min(x + y + z + t, abs(a[0] - b[0]) + abs(a[n - 1] - b[n - 1]), abs(a[0] - b[0]) + y + t, abs(a[n - 1] - b[n - 1]) + x + z, abs(a[0] - b[n - 1]) + abs(b[0] - a[n - 1]), abs(a[0] - b[n - 1]) + y + z, abs(b[0] - a[n - 1]) + x + t))", "def solve_problem():\n    n = int(input())\n    for _ in range(n):\n        _ = input()\n        row1 = [int(i) for i in input().split()]\n        row2 = [int(i) for i in input().split()]\n        left1 = min((abs(row1[0] - j) for j in row2))\n        left2 = min((abs(row2[0] - j) for j in row1))\n        right1 = min((abs(row1[-1] - j) for j in row2))\n        right2 = min((abs(row2[-1] - j) for j in row1))\n        tmp1 = abs(row1[0] - row2[0])\n        tmp2 = abs(row1[-1] - row2[-1])\n        tmp3 = abs(row1[0] - row2[-1])\n        tmp4 = abs(row1[-1] - row2[0])\n        tmp5 = left1 + left2\n        tmp6 = right1 + right2\n        excep1 = tmp1 + tmp2\n        excep2 = tmp1 + tmp6\n        excep3 = tmp3 + left2 + right1\n        excep4 = tmp2 + tmp5\n        excep5 = tmp4 + left1 + right2\n        excep6 = tmp3 + tmp4\n        result = min(tmp5 + tmp6, excep1, excep2, excep3, excep4, excep5, excep6)\n        print(result)\nsolve_problem()", "import heapq as hq\nimport math\nfrom collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    best = abs(a[0] - b[0]) + abs(a[-1] - b[-1])\n    best = min(best, abs(a[-1] - b[0]) + abs(a[0] - b[-1]))\n    a0c = min([abs(x - a[0]) for x in b])\n    anc = min([abs(x - a[-1]) for x in b])\n    b0c = min([abs(x - b[0]) for x in a])\n    bnc = min([abs(x - b[-1]) for x in a])\n    best = min(a0c + anc + b0c + bnc, best)\n    best = min(a0c + b0c + abs(a[-1] - b[-1]), best)\n    best = min(anc + bnc + abs(a[0] - b[0]), best)\n    best = min(a0c + bnc + abs(a[-1] - b[0]), best)\n    best = min(anc + b0c + abs(a[0] - b[-1]), best)\n    print(best)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    s00 = abs(a[0] - b[0])\n    s11 = abs(a[-1] - b[-1])\n    s01 = abs(a[0] - b[-1])\n    s10 = abs(a[-1] - b[0])\n    sa0 = min((abs(i - b[0]) for i in a))\n    sa1 = min((abs(i - b[-1]) for i in a))\n    s0b = min((abs(a[0] - i) for i in b))\n    s1b = min((abs(a[-1] - i) for i in b))\n    ans = s00 + s11\n    ans = min(ans, s01 + s10)\n    ans = min(ans, s00 + sa1 + s1b)\n    ans = min(ans, s11 + sa0 + s0b)\n    ans = min(ans, s01 + s1b + sa0)\n    ans = min(ans, s10 + s0b + sa1)\n    ans = min(ans, s0b + s1b + sa0 + sa1)\n    print(ans)", "for i in [0] * int(input()):\n    n = int(input())\n    a = [*map(int, input().split())]\n    b = [*map(int, input().split())]\n    x = min((abs(a[0] - i) for i in b))\n    y = min((abs(a[n - 1] - b[i]) for i in range(n - 1, -1, -1)))\n    z = min((abs(b[0] - i) for i in a))\n    t = min((abs(b[n - 1] - a[i]) for i in range(n - 1, -1, -1)))\n    print(min(x + y + z + t, abs(a[0] - b[0]) + abs(a[n - 1] - b[n - 1]), abs(a[0] - b[0]) + y + t, abs(a[n - 1] - b[n - 1]) + x + z, abs(a[0] - b[n - 1]) + abs(b[0] - a[n - 1]), abs(a[0] - b[n - 1]) + y + z, abs(b[0] - a[n - 1]) + x + t))", "for i in [0] * int(input()):\n    n = int(input())\n    a = [*map(int, input().split())]\n    b = [*map(int, input().split())]\n    x = min((abs(a[0] - i) for i in b))\n    y = min((abs(a[n - 1] - b[i]) for i in range(n - 1, -1, -1)))\n    z = min((abs(b[0] - i) for i in a))\n    t = min((abs(b[n - 1] - a[i]) for i in range(n - 1, -1, -1)))\n    print(min(x + y + z + t, abs(a[0] - b[0]) + abs(a[n - 1] - b[n - 1]), abs(a[0] - b[0]) + y + t, abs(a[n - 1] - b[n - 1]) + x + z, abs(a[0] - b[n - 1]) + abs(b[0] - a[n - 1]), abs(a[0] - b[n - 1]) + y + z, abs(b[0] - a[n - 1]) + x + t))", "def solve_problem():\n    n = int(input())\n    for _ in range(n):\n        _ = input()\n        row1 = [int(i) for i in input().split()]\n        row2 = [int(i) for i in input().split()]\n        (left1, right1, left2, right2) = (10000000000, 10000000000, 10000000000, 10000000000)\n        for i in row2:\n            tmp = abs(row1[0] - i)\n            if tmp < left1:\n                left1 = tmp\n            tmp = abs(row1[-1] - i)\n            if tmp < right1:\n                right1 = tmp\n        for i in row1:\n            left2 = min(left2, abs(row2[0] - i))\n            right2 = min(right2, abs(row2[-1] - i))\n        excep1 = abs(row1[0] - row2[0]) + abs(row1[-1] - row2[-1])\n        excep2 = abs(row1[0] - row2[0]) + right1 + right2\n        excep3 = abs(row1[0] - row2[-1]) + left2 + right1\n        excep4 = abs(row1[-1] - row2[-1]) + left1 + left2\n        excep5 = abs(row1[-1] - row2[0]) + left1 + right2\n        excep6 = abs(row1[0] - row2[-1]) + abs(row1[-1] - row2[0])\n        result = min(left1 + left2 + right1 + right2, excep1, excep2, excep3, excep4, excep5, excep6)\n        print(result)\nsolve_problem()", "for _ in [0] * int(input()):\n    n = int(input())\n    a = [*map(int, input().split())]\n    b = [*map(int, input().split())]\n    x = min((abs(a[0] - i) for i in b))\n    y = min((abs(a[n - 1] - b[i]) for i in range(n - 1, -1, -1)))\n    z = min((abs(b[0] - i) for i in a))\n    t = min((abs(b[n - 1] - a[i]) for i in range(n - 1, -1, -1)))\n    print(min(x + y + z + t, abs(a[0] - b[0]) + abs(a[n - 1] - b[n - 1]), abs(a[0] - b[0]) + y + t, abs(a[n - 1] - b[n - 1]) + x + z, abs(a[0] - b[n - 1]) + abs(b[0] - a[n - 1]), abs(a[0] - b[n - 1]) + y + z, abs(b[0] - a[n - 1]) + x + t))", "INF = 10 ** 9 + 1\n\ndef main_tc():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    min_a_left = INF\n    min_a_right = INF\n    min_b_left = INF\n    min_b_right = INF\n    for elem in b:\n        min_a_left = min(min_a_left, abs(a[0] - elem))\n        min_a_right = min(min_a_right, abs(a[-1] - elem))\n    for elem in a:\n        min_b_left = min(min_b_left, abs(b[0] - elem))\n        min_b_right = min(min_b_right, abs(b[-1] - elem))\n    answer = 4 * INF\n    answer = min(answer, abs(a[0] - b[0]) + abs(a[-1] - b[-1]))\n    answer = min(answer, abs(a[0] - b[-1]) + abs(a[-1] - b[0]))\n    answer = min(answer, abs(a[0] - b[0]) + min_a_right + min_b_right)\n    answer = min(answer, abs(a[0] - b[-1]) + min_a_right + min_b_left)\n    answer = min(answer, abs(a[-1] - b[0]) + min_a_left + min_b_right)\n    answer = min(answer, abs(a[-1] - b[-1]) + min_a_left + min_b_left)\n    answer = min(answer, min_a_left + min_a_right + min_b_left + min_b_right)\n    print(answer)\n\ndef main():\n    tc = int(input())\n    for _ in range(tc):\n        main_tc()\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    z1 = abs(a[-1] - b[0])\n    z2 = abs(a[0] - b[-1])\n    a1 = abs(a[-1] - b[-1])\n    a2 = abs(a[0] - b[0])\n    m3 = m1 = a1\n    m4 = m2 = a2\n    for i in range(n):\n        d1 = abs(a[i] - b[-1])\n        if d1 < m1:\n            m1 = d1\n        d2 = abs(a[i] - b[0])\n        if d2 < m2:\n            m2 = d2\n        d3 = abs(b[i] - a[-1])\n        if d3 < m3:\n            m3 = d3\n        d4 = abs(b[i] - a[0])\n        if d4 < m4:\n            m4 = d4\n    print(min(m1 + m2 + m3 + m4, a1 + a2, a1 + m2 + m4, a2 + m1 + m3, z1 + z2, z1 + m1 + m4, z2 + m2 + m3))", "def solve_problem():\n    for _ in range(int(input())):\n        _ = input()\n        row1 = [int(i) for i in input().split()]\n        row2 = [int(i) for i in input().split()]\n        r2 = range(0, len(row2))\n        r1 = range(0, len(row1))\n        left1 = min((abs(row1[0] - row2[j]) for j in r2))\n        left2 = min((abs(row2[0] - row1[j]) for j in r1))\n        right1 = min((abs(row1[-1] - row2[j]) for j in r2))\n        right2 = min((abs(row2[-1] - row1[j]) for j in r1))\n        excep1 = abs(row1[0] - row2[0]) + abs(row1[-1] - row2[-1])\n        excep2 = abs(row1[0] - row2[0]) + right1 + right2\n        excep3 = abs(row1[0] - row2[-1]) + left2 + right1\n        excep4 = abs(row1[-1] - row2[-1]) + left1 + left2\n        excep5 = abs(row1[-1] - row2[0]) + left1 + right2\n        excep6 = abs(row1[0] - row2[-1]) + abs(row1[-1] - row2[0])\n        result = min(left1 + left2 + right1 + right2, excep1, excep2, excep3, excep4, excep5, excep6)\n        print(result)\nsolve_problem()", "def find_smallest(va, vb, id):\n    ret = 1000000000\n    for b in vb:\n        n = abs(va[id] - b)\n        if n < ret:\n            ret = n\n    return ret\nfor i in range(int(input())):\n    n = int(input())\n    a = []\n    b = []\n    line = input().split()\n    for j in range(n):\n        a.append(int(line[j]))\n    line = input().split()\n    for j in range(n):\n        b.append(int(line[j]))\n    tl = find_smallest(a, b, 0)\n    tr = find_smallest(a, b, n - 1)\n    bl = find_smallest(b, a, 0)\n    br = find_smallest(b, a, n - 1)\n    tlbr_diag = abs(a[0] - b[n - 1])\n    trbl_diag = abs(b[0] - a[n - 1])\n    cycle = abs(a[0] - b[0]) + abs(a[n - 1] - b[n - 1])\n    cycle_l = abs(a[0] - b[0]) + tr + br\n    cycle_r = abs(a[n - 1] - b[n - 1]) + tl + bl\n    accum = min(tl + br, tlbr_diag) + min(tr + bl, trbl_diag)\n    print(min(min(cycle, accum), min(cycle_r, cycle_l)))", "def minfault(a, b):\n    ans = min(abs(a[0] - b[0]) + abs(a[-1] - b[-1]), abs(a[0] - b[-1]) + abs(a[-1] - b[0]))\n    n = len(a)\n    res = []\n    for num in [a[0], a[-1]]:\n        tmp = float('inf')\n        for bi in b:\n            tmp = min(tmp, abs(num - bi))\n        res.append(tmp)\n    for num in [b[0], b[-1]]:\n        tmp = float('inf')\n        for ai in a:\n            tmp = min(tmp, abs(num - ai))\n        res.append(tmp)\n    ans = min(ans, abs(a[0] - b[0]) + res[1] + res[3], abs(a[0] - b[-1]) + res[1] + res[2], abs(a[-1] - b[0]) + res[0] + res[3], abs(a[-1] - b[-1]) + res[0] + res[2], sum(res))\n    return ans\nt = int(input())\nfor _ in range(t):\n    _ = input()\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    print(minfault(a, b))", "for _ in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().strip().split()))\n    l2 = list(map(int, input().strip().split()))\n    lans = min(abs(l1[0] - l2[0]) + abs(l1[-1] - l2[-1]), abs(l1[0] - l2[-1]) + abs(l1[-1] - l2[0]))\n    p1 = abs(l1[0] - l2[0])\n    p2 = abs(l1[-1] - l2[-1])\n    p3 = abs(l1[0] - l2[-1])\n    p4 = abs(l1[-1] - l2[0])\n    lans = min(p1 + p2, p3 + p4)\n    (la1, la2, lb1, lb2) = (p1, p2, p3, p4)\n    for i in range(n):\n        k1 = abs(l2[0] - l1[i])\n        k2 = abs(l2[-1] - l1[i])\n        k3 = abs(l1[0] - l2[i])\n        k4 = abs(l1[-1] - l2[i])\n        if k1 < la1:\n            la1 = k1\n        if k2 < la2:\n            la2 = k2\n        if k3 < lb1:\n            lb1 = k3\n        if k4 < lb2:\n            lb2 = k4\n    print(min(lans, la1 + la2 + lb1 + lb2, p1 + la2 + lb2, p2 + la1 + lb1, p3 + la1 + lb2, p4 + la2 + lb1))", "def minfault(a, b):\n    ans = min(abs(a[0] - b[0]) + abs(a[-1] - b[-1]), abs(a[0] - b[-1]) + abs(a[-1] - b[0]))\n    n = len(a)\n    res = []\n    for num in [a[0], a[-1]]:\n        tmp = float('inf')\n        for bi in b:\n            tmp = min(tmp, abs(num - bi))\n        res.append(tmp)\n    for num in [b[0], b[-1]]:\n        tmp = float('inf')\n        for ai in a:\n            tmp = min(tmp, abs(num - ai))\n        res.append(tmp)\n    ans = min(ans, abs(a[0] - b[0]) + res[1] + res[3], abs(a[0] - b[-1]) + res[1] + res[2], abs(a[-1] - b[0]) + res[0] + res[3], abs(a[-1] - b[-1]) + res[0] + res[2], sum(res))\n    return ans\nt = int(input())\nfor _ in range(t):\n    _ = input()\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    print(minfault(a, b))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    mna0 = 10 ** 9\n    mnan = 10 ** 9\n    mnb0 = 10 ** 9\n    mnbn = 10 ** 9\n    for i in range(n):\n        if abs(a[0] - b[i]) < mna0:\n            mna0 = abs(a[0] - b[i])\n        if abs(a[n - 1] - b[i]) < mnan:\n            mnan = abs(a[n - 1] - b[i])\n        if abs(b[0] - a[i]) < mnb0:\n            mnb0 = abs(b[0] - a[i])\n        if abs(b[n - 1] - a[i]) < mnbn:\n            mnbn = abs(b[n - 1] - a[i])\n    c = min([mna0 + mnan + mnb0 + mnbn, abs(a[0] - b[0]) + mnan + mnbn, abs(a[0] - b[n - 1]) + mnb0 + mnan, abs(a[n - 1] - b[0]) + mna0 + mnbn, abs(a[n - 1] - b[n - 1]) + mna0 + mnb0])\n    c = min([c, abs(a[0] - b[0]) + abs(a[n - 1] - b[n - 1]), abs(a[0] - b[n - 1]) + abs(a[n - 1] - b[0])])\n    print(c)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    mna0 = 10 ** 9\n    mnan = 10 ** 9\n    mnb0 = 10 ** 9\n    mnbn = 10 ** 9\n    for i in range(n):\n        if abs(a[0] - b[i]) < mna0:\n            mna0 = abs(a[0] - b[i])\n        if abs(a[n - 1] - b[i]) < mnan:\n            mnan = abs(a[n - 1] - b[i])\n        if abs(b[0] - a[i]) < mnb0:\n            mnb0 = abs(b[0] - a[i])\n        if abs(b[n - 1] - a[i]) < mnbn:\n            mnbn = abs(b[n - 1] - a[i])\n    c = min([mna0 + mnan + mnb0 + mnbn, abs(a[0] - b[0]) + mnan + mnbn, abs(a[0] - b[n - 1]) + mnb0 + mnan, abs(a[n - 1] - b[0]) + mna0 + mnbn, abs(a[n - 1] - b[n - 1]) + mna0 + mnb0])\n    c = min([c, abs(a[0] - b[0]) + abs(a[n - 1] - b[n - 1]), abs(a[0] - b[n - 1]) + abs(a[n - 1] - b[0])])\n    print(c)", "def solve_problem():\n    n = int(input())\n    for _ in range(n):\n        _ = input()\n        row1 = [int(i) for i in input().split()]\n        row2 = [int(i) for i in input().split()]\n        (left1, right1, left2, right2) = (10000000000, 10000000000, 10000000000, 10000000000)\n        for i in row2:\n            left1 = min(left1, abs(row1[0] - i))\n            right1 = min(right1, abs(row1[-1] - i))\n        for i in row1:\n            left2 = min(left2, abs(row2[0] - i))\n            right2 = min(right2, abs(row2[-1] - i))\n        excep1 = abs(row1[0] - row2[0]) + abs(row1[-1] - row2[-1])\n        excep2 = abs(row1[0] - row2[0]) + right1 + right2\n        excep3 = abs(row1[0] - row2[-1]) + left2 + right1\n        excep4 = abs(row1[-1] - row2[-1]) + left1 + left2\n        excep5 = abs(row1[-1] - row2[0]) + left1 + right2\n        excep6 = abs(row1[0] - row2[-1]) + abs(row1[-1] - row2[0])\n        result = min(left1 + left2 + right1 + right2, excep1, excep2, excep3, excep4, excep5, excep6)\n        print(result)\nsolve_problem()", "def fun(a, b):\n    start = abs(a[0] - b[0])\n    end = abs(a[-1] - b[-1])\n    s_c1 = min((abs(i - a[0]) for i in b))\n    s_c2 = min((abs(i - b[0]) for i in a))\n    e_c1 = min((abs(i - a[-1]) for i in b))\n    e_c2 = min((abs(i - b[-1]) for i in a))\n    return min(start, s_c1 + s_c2) + min(end, e_c1 + e_c2)\nfor _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    print(min(fun(A, B), fun(A, B[::-1])))", "from math import inf\nT = int(input())\nfor t in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    (p, q, r, s) = (float('inf'), float('inf'), float('inf'), float('inf'))\n    for i in range(n):\n        if abs(b[i] - a[0]) < p:\n            p = abs(b[i] - a[0])\n        if abs(a[i] - b[0]) < r:\n            r = abs(a[i] - b[0])\n        if abs(b[i] - a[-1]) < q:\n            q = abs(b[i] - a[-1])\n        if abs(a[i] - b[-1]) < s:\n            s = abs(a[i] - b[-1])\n    print(min(abs(a[0] - b[0]) + abs(a[-1] - b[-1]), abs(a[0] - b[0]) + q + s, abs(a[-1] - b[-1]) + p + r, p + q + r + s, abs(b[0] - a[-1]) + p + s, abs(a[0] - b[-1]) + q + r, abs(a[0] - b[-1]) + abs(a[-1] - b[0])))", "def findmin(A1, B):\n    ans = abs(A1 - B[0])\n    for i in B:\n        ans = min(ans, abs(A1 - i))\n    return ans\n\ndef join(j1, j2, l1, l2):\n    ans = abs(j1[0] - j2[0])\n    extra = min(abs(l1[0] - l2[0]), l1[1] + l2[1])\n    ans += extra\n    return ans\nfor iters in range(int(input())):\n    n = int(input())\n    A = [int(i) for i in input().split(' ')]\n    B = [int(i) for i in input().split(' ')]\n    if n == 1:\n        print(abs(A[0] - B[0]))\n        continue\n    A1 = [A[0], findmin(A[0], B)]\n    A2 = [A[-1], findmin(A[-1], B)]\n    B1 = [B[0], findmin(B[0], A)]\n    B2 = [B[-1], findmin(B[-1], A)]\n    ans = A1[1] + A2[1] + B1[1] + B2[1]\n    ans = min(ans, join(A1, B1, A2, B2))\n    ans = min(ans, join(A1, B2, A2, B1))\n    ans = min(ans, join(A2, B1, A1, B2))\n    ans = min(ans, join(A2, B2, A1, B1))\n    print(ans)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a1 = a[0]\n    a2 = a[-1]\n    b1 = b[0]\n    b2 = b[-1]\n    y1 = 10000000000\n    y2 = 10000000000\n    y3 = abs(a[0] - b[0])\n    y4 = abs(a[-1] - b[0])\n    y5 = abs(a[0] - b[-1])\n    y6 = abs(a[-1] - b[-1])\n    x1 = 10000000000\n    x2 = 10000000000\n    for i in a:\n        y1 = min(y1, abs(i - b1))\n        y2 = min(y2, abs(i - b2))\n    for i in b:\n        x1 = min(x1, abs(i - a1))\n        x2 = min(x2, abs(i - a2))\n    print(min(y3 + y6, y4 + y5, y3 + y2 + x2, y4 + x1 + y2, y5 + x2 + y1, y6 + x1 + y1, x1 + x2 + y1 + y2))", "def md(a, b):\n    mn = 999999999\n    for el in b:\n        if abs(el - a) < mn:\n            mn = abs(el - a)\n    return mn\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    f = abs(a[0] - b[0]) + abs(a[-1] - b[-1])\n    p = abs(md(a[0], b[1:])) + abs(md(b[0], a[1:])) + abs(md(a[-1], b[:n - 1])) + abs(md(b[-1], a[:n - 1]))\n    q = abs(a[0] - b[0]) + abs(md(a[-1], b[:n - 1])) + abs(md(b[-1], a[:n - 1]))\n    r = abs(a[-1] - b[-1]) + abs(md(a[0], b[1:])) + abs(md(b[0], a[1:]))\n    w = abs(a[0] - b[-1]) + abs(a[-1] - b[0])\n    a1 = abs(a[0] - b[-1]) + abs(md(b[0], a[1:])) + abs(md(a[-1], b[:n - 1]))\n    b1 = abs(a[-1] - b[0]) + abs(md(a[0], b[1:])) + abs(md(b[-1], a[:n - 1]))\n    print(min(f, p, q, r, w, a1, b1))", "for _ in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().strip().split()))\n    l2 = list(map(int, input().strip().split()))\n    lans = min(abs(l1[0] - l2[0]) + abs(l1[-1] - l2[-1]), abs(l1[0] - l2[-1]) + abs(l1[-1] - l2[0]))\n    p1 = abs(l1[0] - l2[0])\n    p2 = abs(l1[-1] - l2[-1])\n    p3 = abs(l1[0] - l2[-1])\n    p4 = abs(l1[-1] - l2[0])\n    lans = min(p1 + p2, p3 + p4)\n    (la1, la2, lb1, lb2) = (p1, p2, p3, p4)\n    for i in range(n):\n        k1 = abs(l2[0] - l1[i])\n        k2 = abs(l2[-1] - l1[i])\n        k3 = abs(l1[0] - l2[i])\n        k4 = abs(l1[-1] - l2[i])\n        if k1 < la1:\n            la1 = k1\n        if k2 < la2:\n            la2 = k2\n        if k3 < lb1:\n            lb1 = k3\n        if k4 < lb2:\n            lb2 = k4\n    print(min(lans, la1 + la2 + lb1 + lb2, p1 + la2 + lb2, p2 + la1 + lb1, p3 + la1 + lb2, p4 + la2 + lb1))", "def fun(a, b):\n    start = abs(a[0] - b[0])\n    end = abs(a[-1] - b[-1])\n    s_c1 = min((abs(i - a[0]) for i in b))\n    s_c2 = min((abs(i - b[0]) for i in a))\n    e_c1 = min((abs(i - a[-1]) for i in b))\n    e_c2 = min((abs(i - b[-1]) for i in a))\n    return min(start, s_c1 + s_c2) + min(end, e_c1 + e_c2)\nfor _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    print(min(fun(A, B), fun(A, B[::-1])))", "def calculate(arr_a, arr_b):\n    out_a_1 = min((abs(x - arr_a[0]) for x in arr_b))\n    out_a_2 = min((abs(x - arr_b[0]) for x in arr_a))\n    out_b_1 = min((abs(x - arr_a[-1]) for x in arr_b))\n    out_b_2 = min((abs(x - arr_b[-1]) for x in arr_a))\n    return min(abs(arr_a[0] - arr_b[0]), out_a_1 + out_a_2) + min(abs(arr_a[-1] - arr_b[-1]), out_b_1 + out_b_2)\n_ = int(input())\nfor __ in range(_):\n    n = int(input())\n    arr_1 = list(map(int, input().split()))\n    arr_2 = list(map(int, input().split()))\n    print(min(calculate(arr_1, arr_2), calculate(arr_1, arr_2[::-1])))", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    first = list(map(int, input().split()))\n    second = list(map(int, input().split()))\n    l1 = abs(first[0] - second[0])\n    l2 = abs(first[-1] - second[-1])\n    l3 = abs(first[0] - second[-1])\n    l4 = abs(first[-1] - second[0])\n    l5 = abs(first[0] - second[0])\n    l6 = abs(second[0] - first[0])\n    l7 = abs(first[-1] - second[0])\n    l8 = abs(second[-1] - first[0])\n    for i in range(1, n):\n        l5 = min(l5, abs(first[0] - second[i]))\n        l6 = min(l6, abs(second[0] - first[i]))\n        l7 = min(l7, abs(first[-1] - second[i]))\n        l8 = min(l8, abs(second[-1] - first[i]))\n    print(min(l1 + l2, l3 + l4, l1 + l7 + l8, l2 + l5 + l6, l3 + l6 + l7, l4 + l5 + l8, l5 + l6 + l7 + l8))", "R = lambda : [*map(int, input().split())]\nfor _ in [0] * R()[0]:\n    R()\n    a = R()\n    b = R()\n    print(min((sum((min(abs(x[0] - y[0]), sum((min((abs(u[0] - z) for z in v)) for (u, v) in ((x, y), (y, x))))) for (x, y) in ((c, d), (c[::-1], d[::-1])))) for (c, d) in ((a, b), (a, b[::-1])))))", "R = lambda : [*map(int, input().split())]\nfor _ in [0] * R()[0]:\n    R()\n    a = R()\n    b = R()\n    print(min((sum((min(abs(c[i] - d[i]), sum((min((abs(u[i] - z) for z in v)) for (u, v) in ((c, d), (d, c))))) for i in (0, -1))) for (c, d) in ((a, b), (a, b[::-1])))))", "R = lambda : [*map(int, input().split())]\nfor _ in [0] * R()[0]:\n    R()\n    a = R()\n    b = R()\n    print(min((sum((min(abs(c[i] - d[i]), sum((min((abs(u[i] - z) for z in v)) for (u, v) in ((c, d), (d, c))))) for i in (0, -1))) for (c, d) in ((a, b), (a, b[::-1])))))", "R = lambda : [*map(int, input().split())]\nfor _ in [0] * R()[0]:\n    R()\n    a = R()\n    b = R()\n    print(min((sum((min(abs(c[i] - d[i]), sum((min((abs(u[i] - z) for z in v)) for (u, v) in ((c, d), (d, c))))) for i in (0, -1))) for (c, d) in ((a, b), (a, b[::-1])))))", "R = lambda : [*map(int, input().split())]\nfor _ in [0] * R()[0]:\n    R()\n    a = R()\n    b = R()\n    print(min((sum((min(abs(c[i] - d[i]), sum((min((abs(u[i] - z) for z in v)) for (u, v) in ((c, d), (d, c))))) for i in (0, -1))) for (c, d) in ((a, b), (a, b[::-1])))))", "R = lambda : [*map(int, input().split())]\nfor _ in [0] * R()[0]:\n    R()\n    a = R()\n    b = R()\n    print(min((sum((min(abs(c[i] - d[i]), sum((min((abs(u[i] - z) for z in v)) for (u, v) in ((c, d), (d, c))))) for i in (0, -1))) for (c, d) in ((a, b), (a, b[::-1])))))", "R = lambda : [*map(int, input().split())]\nfor _ in [0] * R()[0]:\n    R()\n    a = R()\n    b = R()\n    print(min((sum((min(abs(c[i] - d[i]), sum((min((abs(u[i] - z) for z in v)) for (u, v) in ((c, d), (d, c))))) for i in (0, -1))) for (c, d) in ((a, b), (a, b[::-1])))))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    m1 = 10 ** 9\n    m2 = 10 ** 9\n    p = a[0]\n    q = a[-1]\n    for i in range(len(b)):\n        m1 = min(m1, abs(p - b[i]))\n        m2 = min(m2, abs(q - b[i]))\n    m3 = 10 ** 9\n    m4 = 10 ** 9\n    r = b[0]\n    s = b[-1]\n    for i in range(len(b)):\n        m3 = min(m3, abs(r - a[i]))\n        m4 = min(m4, abs(s - a[i]))\n    ans1 = m1 + m2 + m3 + m4\n    ans2 = min(abs(p - r) + abs(q - s), abs(p - s) + abs(q - r))\n    ans3 = min(abs(p - r) + m2 + m4, abs(q - s) + m1 + m3, abs(p - s) + m2 + m3, abs(q - r) + m1 + m4)\n    print(min(ans1, ans2, ans3))", "import sys\ninput = sys.stdin.readline\n\ndef yes():\n    print('YES')\n\ndef no():\n    print('NO')\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = 10 ** 10\n    ans = min(ans, abs(a[0] - b[0]) + abs(a[-1] - b[-1]))\n    ans = min(ans, abs(a[0] - b[-1]) + abs(a[-1] - b[0]))\n    tmp1 = 10 ** 10\n    tmp2 = 10 ** 10\n    tmp3 = 10 ** 10\n    tmp4 = 10 ** 10\n    for i in range(n):\n        tmp1 = min(tmp1, abs(b[0] - a[i]))\n        tmp2 = min(tmp2, abs(a[0] - b[i]))\n        tmp3 = min(tmp3, abs(b[-1] - a[i]))\n        tmp4 = min(tmp4, abs(a[-1] - b[i]))\n    ans = min(ans, tmp1 + tmp2 + tmp3 + tmp4)\n    ans = min(ans, abs(a[-1] - b[0]) + tmp2 + tmp3)\n    ans = min(ans, abs(a[0] - b[-1]) + tmp1 + tmp4)\n    ans = min(ans, abs(a[0] - b[0]) + tmp3 + tmp4)\n    ans = min(ans, abs(a[-1] - b[-1]) + tmp1 + tmp2)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c1 = abs(a[0] - b[0])\n    c2 = abs(a[-1] - b[-1])\n    (d1, d2, d3, d4) = [10 ** 18] * 4\n    for i in range(n):\n        d1 = min(d1, abs(b[i] - a[0]))\n        d2 = min(d2, abs(a[-1] - b[i]))\n        d3 = min(d3, abs(b[0] - a[i]))\n        d4 = min(d4, abs(b[-1] - a[i]))\n    c1 = min(c1, d1 + d3)\n    c2 = min(c2, d2 + d4)\n    f1 = abs(a[0] - b[-1])\n    f2 = abs(a[-1] - b[0])\n    ans = c1 + c2\n    f2 = min(f2, d2 + d3)\n    f1 = min(f1, d1 + d4)\n    ans = min(ans, f1 + f2)\n    print(ans)", "R = lambda : [*map(int, input().split())]\nfor _ in [0] * R()[0]:\n    R()\n    a = R()\n    b = R()\n    print(min((sum((min(abs(c[i] - d[i]), sum((min((abs(u[i] - z) for z in v)) for (u, v) in ((c, d), (d, c))))) for i in (0, -1))) for (c, d) in ((a, b), (a, b[::-1])))))", "R = lambda : [*map(int, input().split())]\nfor _ in [0] * R()[0]:\n    R()\n    a = R()\n    b = R()\n    print(min((sum((min(abs(c[i] - d[i]), sum((min((abs(u[i] - z) for z in v)) for (u, v) in ((c, d), (d, c))))) for i in (0, -1))) for (c, d) in ((a, b), (a, b[::-1])))))", "import sys\nfrom math import *\ninf = 10 ** 9\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    k1 = abs(a[0] - b[0])\n    k2 = abs(a[-1] - b[-1])\n    k3 = abs(a[0] - b[-1])\n    k4 = abs(a[-1] - b[0])\n    ans1 = ans2 = ans3 = ans4 = 10 ** 9\n    for i in range(n):\n        ans1 = min(ans1, abs(a[0] - b[i]))\n    for i in range(n):\n        ans2 = min(ans2, abs(a[-1] - b[i]))\n    for i in range(n):\n        ans3 = min(ans3, abs(b[0] - a[i]))\n    for i in range(n):\n        ans4 = min(ans4, abs(b[-1] - a[i]))\n    print(min(k1 + k2, k3 + k4, ans1 + ans3 + k2, ans2 + ans4 + k1, ans2 + ans3 + k3, ans1 + ans4 + k4, ans1 + ans2 + ans3 + ans4))", "def find_best_index(ai, b):\n    summr = 10 ** 30\n    for j in range(len(b)):\n        if abs(ai - b[j]) < summr:\n            summr = abs(ai - b[j])\n            index = j\n    return index\n\ndef func(a, b, n):\n    result = 10 ** 30\n    List_1 = [0, find_best_index(a[0], b), n - 1]\n    List_2 = [0, find_best_index(a[n - 1], b), n - 1]\n    for i in List_1:\n        for j in List_2:\n            sum = abs(a[0] - b[i]) + abs(a[n - 1] - b[j])\n            if i > 0 and j > 0:\n                sum += abs(b[0] - a[find_best_index(b[0], a)])\n            if i < n - 1 and j < n - 1:\n                sum += abs(b[n - 1] - a[find_best_index(b[n - 1], a)])\n            result = min(result, sum)\n    return result\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    print(func(a, b, n))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c1 = abs(a[0] - b[0])\n    c2 = abs(a[-1] - b[-1])\n    (d1, d2, d3, d4) = [10 ** 18] * 4\n    for i in range(n):\n        d1 = min(d1, abs(b[i] - a[0]))\n        d2 = min(d2, abs(a[-1] - b[i]))\n        d3 = min(d3, abs(b[0] - a[i]))\n        d4 = min(d4, abs(b[-1] - a[i]))\n    c1 = min(c1, d1 + d3)\n    c2 = min(c2, d2 + d4)\n    f1 = abs(a[0] - b[-1])\n    f2 = abs(a[-1] - b[0])\n    ans = c1 + c2\n    f2 = min(f2, d2 + d3)\n    f1 = min(f1, d1 + d4)\n    ans = min(ans, f1 + f2)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    (p, q, r, s) = [10 ** 9] * 4\n    for i in range(n):\n        p = min(p, abs(a[0] - b[i]))\n        q = min(q, abs(a[-1] - b[i]))\n        r = min(r, abs(b[0] - a[i]))\n        s = min(s, abs(b[-1] - a[i]))\n    t = abs(a[0] - b[0])\n    u = abs(a[-1] - b[-1])\n    v = abs(a[0] - b[-1])\n    w = abs(a[-1] - b[0])\n    print(min(t + u, v + w, t + q + s, p + r + u, w + p + s, v + q + r, p + q + r + s))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a1 = 1000000000\n    a2 = 1000000000\n    a3 = 1000000000\n    a4 = 1000000000\n    for i in range(n):\n        a1 = min(abs(a[0] - b[i]), a1)\n        a2 = min(abs(a[n - 1] - b[i]), a2)\n        a3 = min(abs(b[0] - a[i]), a3)\n        a4 = min(abs(b[n - 1] - a[i]), a4)\n    ans = min(abs(a[0] - b[0]), a1 + a3) + min(abs(a[n - 1] - b[n - 1]), a2 + a4)\n    ans2 = min(abs(a[0] - b[n - 1]), a1 + a4) + min(abs(a[n - 1] - b[0]), a2 + a3)\n    print(min(ans, ans2))", "INF = pow(10, 9)\n\ndef best(arr, val):\n    bst = INF + 10\n    pos = -1\n    for i in range(n):\n        if bst > abs(val - arr[i]):\n            bst = abs(val - arr[i])\n            pos = i\n    return pos\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    bst = INF * 10\n    cds1 = [0, best(b, a[0]), n - 1]\n    cds2 = [0, best(b, a[n - 1]), n - 1]\n    for i in cds1:\n        for j in cds2:\n            ans = abs(a[0] - b[i]) + abs(a[n - 1] - b[j])\n            if i > 0 and j > 0:\n                ans += abs(b[0] - a[best(a, b[0])])\n            if i < n - 1 and j < n - 1:\n                ans += abs(b[n - 1] - a[best(a, b[n - 1])])\n            bst = min(bst, ans)\n    print(bst)", "t = int(input())\nfor case in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    af = at = bf = bt = 0\n    for i in range(n):\n        if abs(a[0] - b[af]) > abs(a[0] - b[i]):\n            af = i\n        if abs(a[-1] - b[at]) > abs(a[-1] - b[i]):\n            at = i\n        if abs(b[0] - a[bf]) > abs(b[0] - a[i]):\n            bf = i\n        if abs(b[-1] - a[bt]) > abs(b[-1] - a[i]):\n            bt = i\n    ans = abs(a[0] - b[af]) + abs(a[-1] - b[at]) + abs(b[0] - a[bf]) + abs(b[-1] - a[bt])\n    ans = min(ans, abs(a[0] - b[0]) + abs(a[-1] - b[-1]), abs(a[-1] - b[0]) + abs(b[-1] - a[0]))\n    ans = min(ans, abs(a[0] - b[0]) + abs(a[-1] - b[at]) + abs(b[-1] - a[bt]))\n    ans = min(ans, abs(a[-1] - b[-1]) + abs(a[0] - b[af]) + abs(b[0] - a[bf]))\n    ans = min(ans, abs(a[-1] - b[0]) + abs(a[0] - b[af]) + abs(b[-1] - a[bt]))\n    ans = min(ans, abs(b[-1] - a[0]) + abs(a[-1] - b[at]) + abs(b[0] - a[bf]))\n    print(ans)", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    mi_a_1 = 1e+18\n    mi_a_n = 1e+18\n    mi_b_1 = 1e+18\n    mi_b_n = 1e+18\n    for i in range(n):\n        mi_a_1 = min(abs(a[0] - b[i]), mi_a_1)\n        mi_a_n = min(abs(a[-1] - b[i]), mi_a_n)\n        mi_b_1 = min(abs(b[0] - a[i]), mi_b_1)\n        mi_b_n = min(abs(b[-1] - a[i]), mi_b_n)\n    print(min(abs(a[0] - b[0]) + abs(a[-1] - b[-1]), abs(a[0] - b[0]) + mi_a_n + mi_b_n, mi_a_1 + mi_a_n + mi_b_1 + mi_b_n, abs(a[-1] - b[-1]) + mi_a_1 + mi_b_1, abs(a[0] - b[-1]) + abs(a[-1] - b[0]), abs(a[0] - b[-1]) + mi_a_n + mi_b_1, abs(a[-1] - b[0]) + mi_b_n + mi_a_1))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    bi = [float('inf'), float('inf')]\n    ai = [float('inf'), float('inf')]\n    for (i, k) in enumerate(a):\n        bi[0] = min(bi[0], abs(k - b[0]))\n        bi[1] = min(bi[1], abs(k - b[-1]))\n    for (i, k) in enumerate(b):\n        ai[0] = min(ai[0], abs(k - a[0]))\n        ai[1] = min(ai[1], abs(k - a[-1]))\n    res = min(sum(bi) + sum(ai), ai[0] + bi[0] + abs(a[-1] - b[-1]), ai[-1] + bi[-1] + abs(a[0] - b[0]), ai[0] + bi[-1] + abs(a[-1] - b[0]), ai[-1] + bi[0] + abs(a[0] - b[-1]), abs(a[0] - b[0]) + abs(a[-1] - b[-1]), abs(a[0] - b[-1]) + abs(a[-1] - b[0]))\n    print(res)", "t = eval(input())\nfor i in range(t):\n    n = eval(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    p = []\n    k = 1000000000000.0\n    for i in range(n):\n        k = min(abs(a[0] - b[i]), k)\n    p.append(k)\n    k = 1000000000000.0\n    for i in range(n):\n        k = min(abs(a[-1] - b[i]), k)\n    p.append(k)\n    k = 1000000000000.0\n    for i in range(n):\n        k = min(abs(a[i] - b[0]), k)\n    p.append(k)\n    k = 1000000000000.0\n    for i in range(n):\n        k = min(abs(a[i] - b[-1]), k)\n    p.append(k)\n    (la, lb, ra, rb) = (p[0], p[2], p[1], p[3])\n    ll = abs(a[0] - b[0])\n    lr = abs(a[0] - b[n - 1])\n    rl = abs(a[n - 1] - b[0])\n    rr = abs(a[n - 1] - b[n - 1])\n    ans = min(la + lb + ra + rb, ll + rr, lr + rl, ll + ra + rb, lr + ra + lb, rl + la + rb, rr + la + lb)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = (*map(int, input().split()),)\n    b = (*map(int, input().split()),)\n    ans1 = abs(a[0] - b[0]) + abs(a[-1] - b[-1])\n    ans2 = abs(a[0] - b[-1]) + abs(a[-1] - b[0])\n    ans3 = abs(a[0] - b[0]) + min((abs(a[-1] - b[i]) for i in range(n))) + min((abs(a[i] - b[-1]) for i in range(n)))\n    ans4 = abs(a[-1] - b[-1]) + min((abs(a[0] - b[i]) for i in range(n))) + min((abs(a[i] - b[0]) for i in range(n)))\n    ans5 = abs(a[0] - b[-1]) + min((abs(a[-1] - b[i]) for i in range(n))) + min((abs(a[i] - b[0]) for i in range(n)))\n    ans6 = abs(a[-1] - b[0]) + min((abs(a[0] - b[i]) for i in range(n))) + min((abs(a[i] - b[-1]) for i in range(n)))\n    ans7 = min((abs(a[0] - b[i]) for i in range(n))) + min((abs(a[i] - b[0]) for i in range(n))) + min((abs(a[-1] - b[i]) for i in range(n))) + min((abs(a[i] - b[-1]) for i in range(n)))\n    print(min(ans1, ans2, ans3, ans4, ans5, ans6, ans7))", "t = int(input())\nwhile t:\n    t = t - 1\n    n = int(input())\n    arr = list(map(int, input().split()))\n    brr = list(map(int, input().split()))\n    a = abs(arr[0] - brr[n - 1])\n    b = abs(arr[0] - brr[0])\n    d = abs(brr[n - 1] - arr[n - 1])\n    c = abs(brr[0] - arr[n - 1])\n    ans = min(a + c, b + d)\n    ans = min(ans, a + b + d)\n    ans = min(ans, c + b + d)\n    a0 = abs(arr[0] - brr[0])\n    b0 = abs(brr[0] - arr[0])\n    an = abs(arr[n - 1] - brr[n - 1])\n    bn = abs(arr[n - 1] - brr[n - 1])\n    for i in range(n):\n        if abs(arr[0] - brr[i]) < a0:\n            a0 = abs(arr[0] - brr[i])\n        if abs(arr[n - 1] - brr[i]) < an:\n            an = abs(arr[n - 1] - brr[i])\n        if abs(brr[0] - arr[i]) < b0:\n            b0 = abs(brr[0] - arr[i])\n        if abs(brr[n - 1] - arr[i]) < bn:\n            bn = abs(brr[n - 1] - arr[i])\n        ans = min(ans, b + an + bn)\n        ans = min(ans, a + b0 + an)\n        ans = min(ans, c + a0 + bn)\n        ans = min(ans, a0 + d + b0)\n        ans = min(ans, a0 + b0 + an + bn)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c1 = abs(a[0] - b[0])\n    c2 = abs(a[-1] - b[-1])\n    (d1, d2, d3, d4) = [10 ** 18] * 4\n    for i in range(n):\n        d1 = min(d1, abs(b[i] - a[0]))\n        d2 = min(d2, abs(a[-1] - b[i]))\n        d3 = min(d3, abs(b[0] - a[i]))\n        d4 = min(d4, abs(b[-1] - a[i]))\n    c1 = min(c1, d1 + d3)\n    c2 = min(c2, d2 + d4)\n    f1 = abs(a[0] - b[-1])\n    f2 = abs(a[-1] - b[0])\n    ans = c1 + c2\n    (d1, d2, d3, d4) = [10 ** 18] * 4\n    for i in range(n):\n        d3 = min(d3, abs(b[0] - a[i]))\n        d2 = min(d2, abs(a[-1] - b[i]))\n        d1 = min(d1, abs(a[0] - b[i]))\n        d4 = min(d4, abs(b[-1] - a[i]))\n    f2 = min(f2, d2 + d3)\n    f1 = min(f1, d1 + d4)\n    ans = min(ans, f1 + f2)\n    print(ans)"]