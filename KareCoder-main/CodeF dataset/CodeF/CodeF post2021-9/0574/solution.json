["import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    s = input()\n    ans1 = 0\n    ans2 = 0\n    ans = ''\n    last = '!'\n    for i in range(0, n, 2):\n        if s[i] != s[i + 1]:\n            ans1 += 1\n        elif s[i] != last:\n            ans2 += 1\n            last = s[i]\n    if ans2 == 0:\n        ans2 += 1\n    print(ans1, ans2)\n    return\nfor _ in range(int(input())):\n    solve()", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    s = input()\n    ans1 = 0\n    ans2 = 0\n    ans = ''\n    last = '!'\n    for i in range(0, n, 2):\n        if s[i] != s[i + 1]:\n            ans1 += 1\n        elif s[i] != last:\n            ans2 += 1\n            last = s[i]\n    if ans2 == 0:\n        ans2 += 1\n    print(ans1, ans2)\n    return\nfor _ in range(int(input())):\n    solve()", "from typing import Tuple\n\ndef solve() -> Tuple[int, int]:\n    n = int(input())\n    string = input()\n    last = -1\n    x = y = 0\n    for index in range(0, n, 2):\n        if string[index] != string[index + 1]:\n            x += 1\n        else:\n            if last != string[index]:\n                y += 1\n            last = string[index]\n    return (x, max(y, 1))\nresults = []\nfor _ in range(int(input())):\n    (x, y) = solve()\n    results.append(f'{x} {y}')\nprint('\\n'.join(results))", "import sys\ninput = sys.stdin.readline\nfrom array import array\n\ndef solve():\n    n = int(input())\n    s = list(input().rstrip())\n    count = 0\n    minSegs = 0\n    LAST = -1\n    for i in range(0, len(s), 2):\n        if s[i] != s[i + 1]:\n            count += 1\n        else:\n            minSegs += s[i] != LAST\n            LAST = s[i]\n    return (count, max(minSegs, 1))\nfor _ in range(int(input())):\n    print(*solve())", "import sys\n\ndef input():\n    return sys.stdin.readline().rstrip()\n\ndef main():\n    t = int(input())\n    for tc in range(t):\n        n = int(input())\n        string = input()\n        opr_cnt = 0\n        sub_cnt = 0\n        cur_num = 'NULL'\n        for i in range(0, n, 2):\n            if string[i] == string[i + 1]:\n                if string[i] != cur_num:\n                    sub_cnt += 1\n                    cur_num = string[i]\n            else:\n                opr_cnt += 1\n        sub_cnt = 1 if sub_cnt == 0 else sub_cnt\n        print(opr_cnt, sub_cnt)\nmain()", "t = int(input())\nout = ''\nfor _ in range(t):\n    n = int(input())\n    string = input()\n    ans = 0\n    ans2 = 1\n    last = ''\n    for i in range(0, len(string), 2):\n        if string[i] != string[i + 1]:\n            ans += 1\n        else:\n            if last != '' and string[i] != last:\n                ans2 += 1\n            last = string[i]\n    out += str(ans) + ' ' + str(ans2) + '\\n'\nprint(out)", "import sys\nimport math\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    res1 = 0\n    ans = 1\n    first = True\n    for i in range(0, n - 1, 2):\n        if s[i] != s[i + 1]:\n            res1 += 1\n        elif first:\n            cur = s[i]\n            first = False\n        elif s[i] != cur:\n            ans += 1\n            cur = s[i]\n    print(res1, ans)", "import sys\ninput = sys.stdin.readline\nfrom array import array\n\ndef solve():\n    n = int(input())\n    s = array('u', input().rstrip())\n    count = 0\n    minimalSegments = 0\n    L = '3'\n    for i in range(0, len(s), 2):\n        if s[i] != s[i + 1]:\n            count += 1\n        else:\n            if L != s[i]:\n                minimalSegments += 1\n            L = s[i]\n    return (count, max(1, minimalSegments))\nfor _ in range(int(input())):\n    ret = solve()\n    print(ret[0], ret[1])", "import sys\ninput = sys.stdin.readline\nfrom array import array\n\ndef solve():\n    n = int(input())\n    s = array('u', input().rstrip())\n    count = 0\n    minSegs = 0\n    LAST = -1\n    for i in range(0, len(s), 2):\n        if s[i] != s[i + 1]:\n            count += 1\n        else:\n            minSegs += s[i] != LAST\n            LAST = s[i]\n    return (count, max(minSegs, 1))\nfor _ in range(int(input())):\n    print(*solve())", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    counter_change = 0\n    counter_segment = 0\n    p = 'p'\n    for k in range(0, n, 2):\n        if s[k] != s[k + 1]:\n            counter_change += 1\n        else:\n            if p != s[k]:\n                counter_segment += 1\n            p = s[k]\n    if counter_segment == 0:\n        counter_segment = 1\n    print(counter_change, counter_segment)", "t1 = int(input())\nfor hi in range(t1):\n    n = int(input())\n    s = str(input())\n    p = 0\n    o = True\n    l = 1\n    for i in range(0, n, 2):\n        if s[i] != s[i + 1]:\n            p += 1\n        elif o:\n            c = s[i]\n            o = False\n        elif c != s[i]:\n            l += 1\n            c = s[i]\n    print(p, l)", "t = int(input())\nfor tt in range(t):\n    n = int(input())\n    s = input()\n    count_o = 0\n    count_s = 0\n    cur = -1\n    for i in range(0, n - 1, 2):\n        if s[i] != s[i + 1]:\n            count_o += 1\n        elif s[i] != cur:\n            count_s += 1\n            cur = s[i]\n    if cur == -1:\n        count_s = 1\n    print(count_o, count_s)", "t = int(input())\nfor vvod in range(t):\n    n = int(input())\n    str = input()\n    s = list(str)\n    ans = 0\n    pok = 0\n    if n == 2:\n        if s[0] == s[1]:\n            print('0 1')\n        else:\n            print('1 1')\n        continue\n    d = dict()\n    c = 'p'\n    ans2 = 0\n    for i in range(0, n - 1, 2):\n        if s[i] == s[i + 1]:\n            if c != s[i]:\n                ans2 += 1\n                c = s[i]\n        else:\n            ans += 1\n    if c == 'p':\n        ans2 = 1\n    print(ans, ans2)", "for zzzzz in range(int(input())):\n    n = int(input())\n    a = input()\n    count = 0\n    isprev = '-1'\n    count2 = 0\n    for i in range(0, n, 2):\n        f = a[i]\n        s = a[i + 1]\n        if f != s:\n            count = count + 1\n        if f == s:\n            if isprev == '-1':\n                if f == '0':\n                    isprev = '0'\n                else:\n                    isprev = '1'\n                count2 = count2 + 1\n            elif isprev != f:\n                count2 = count2 + 1\n                isprev = f\n    if count2 == 0:\n        count2 = 1\n    print(count, count2)", "n = int(input())\nwhile n:\n    n -= 1\n    dlch = int(input())\n    ch = input()\n    count = 0\n    s = ''\n    otv = 1\n    for i in range(1, dlch, 2):\n        if ch[i] != ch[i - 1]:\n            count += 1\n        elif ch[i] == '1' and ch[i - 1] == '1':\n            s = s + '1'\n        else:\n            s = s + '0'\n    for i in range(1, len(s)):\n        if s[i] != s[i - 1]:\n            otv += 1\n    print(count, otv)", "T = int(input())\nfor _ in range(0, T):\n    n = int(input())\n    s = input()\n    x1 = -1\n    x = 0\n    y = 0\n    f = 0\n    for i in range(0, n // 2):\n        j1 = i * 2\n        j2 = i * 2 + 1\n        if s[j1] == s[j2] and x1 != int(s[j1]):\n            y += 1\n            x1 = int(s[j1])\n        elif s[j1] != s[j2]:\n            x += 1\n            f = 1\n    if y == 0:\n        y = 1\n    print(x, y, end='\\n')", "def solve():\n    x = int(input())\n    a = input()\n    position = []\n    count = 0\n    counti = 0\n    l = -1\n    for i in range(0, x, 2):\n        if a[i:i + 2] == '01' or a[i:i + 2] == '10':\n            counti = counti + 1\n        else:\n            if l != a[i]:\n                count = count + 1\n            l = a[i]\n    return (counti, max(count, 1))\ntc = int(input())\nfor i in range(tc):\n    x = solve()\n    print(x[0], x[1])", "for _ in range(int(input().strip())):\n    n = int(input().strip())\n    arr = input()\n    ans = 0\n    t = []\n    for i in range(0, len(arr), 2):\n        if arr[i] != arr[i + 1]:\n            ans += 1\n        else:\n            t.append(arr[i])\n    seg = 1\n    for i in range(0, len(t) - 1):\n        if t[i] != t[i + 1]:\n            seg += 1\n    print(ans, seg)", "import collections\nfrom math import ceil, gcd, sqrt, log\nINF = float('inf')\nmod = 1000000007\n\ndef solve():\n    n = int(input())\n    s = input()\n    sub = 0\n    opr = 0\n    prev_bit = -1\n    for i in range(0, n, 2):\n        if s[i] == s[i + 1]:\n            if s[i] != prev_bit:\n                sub += 1\n                prev_bit = s[i]\n        else:\n            opr += 1\n    print(opr, max(1, sub))\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "import collections\nfrom math import ceil, gcd, sqrt, log\nINF = float('inf')\nmod = 1000000007\n\ndef solve():\n    n = int(input())\n    s = input()\n    sub = 0\n    opr = 0\n    prev_bit = -1\n    for i in range(0, n, 2):\n        if s[i] == s[i + 1]:\n            if s[i] != prev_bit:\n                sub += 1\n                prev_bit = s[i]\n        else:\n            opr += 1\n    print(opr, max(1, sub))\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "from typing import List, Optional\nimport collections as co\n\ndef solver(pal):\n    lista = [pal[x:x + 2] for x in range(0, len(pal), 2)]\n    res = 0\n    for x in lista:\n        if x == '10' or x == '01':\n            res += 1\n    viejox = ''\n    segmentos = 0\n    for x in lista:\n        if viejox == '':\n            if x == '10' or x == '01':\n                pass\n            else:\n                viejox = x\n                segmentos = 1\n        elif x == viejox:\n            pass\n        elif x == '10' or x == '01':\n            pass\n        elif viejox != x:\n            viejox = x\n            segmentos += 1\n    return (res, max(1, segmentos))\nfor _ in range(int(input())):\n    input()\n    res = solver(input())\n    print(res[0], res[1])", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    i = 0\n    count = 0\n    while i < n - 1:\n        if s[i] != s[i + 1]:\n            count += 1\n        i += 2\n    i = 0\n    prev = None\n    count2 = 1\n    while i < n - 1:\n        if s[i] == s[i + 1]:\n            if prev is not None:\n                if prev != s[i]:\n                    count2 += 1\n            prev = s[i]\n        i += 2\n    print(count, count2)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    count = 0\n    first = True\n    ans = 1\n    for i in range(0, n, 2):\n        if s[i] != s[i + 1]:\n            count += 1\n        elif first:\n            cur = s[i]\n            first = False\n        elif s[i] != cur:\n            ans += 1\n            cur = s[i]\n    print(count, ans)", "for t in range(int(input())):\n    n = int(input())\n    a = [int(y) for y in input()]\n    p = -1\n    ans = 0\n    seg = 0\n    for i in range(0, n, 2):\n        if a[i] ^ a[i + 1]:\n            ans += 1\n        else:\n            seg += p != a[i]\n            p = a[i]\n    print(ans, max(1, seg))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input()\n    count = 0\n    count1 = 0\n    flag = 0\n    mark = '2'\n    for k in range(n // 2):\n        if a[2 * k] != a[2 * k + 1]:\n            count += 1\n        elif a[2 * k] != mark:\n            mark = a[2 * k]\n            count1 += 1\n    if count1 == 0:\n        count1 += 1\n    print(count, count1)", "[print(*__import__('functools').reduce(lambda x, y: [(x[0] + 1, x[1], x[2]), (x[0], x[1] + (x[2] and y[0] != x[2]), y[0])][y[0] == y[1]], zip(*[iter(input())] * 2), (0, 1, 0))[:-1]) for p in (input() for m in range(int(input())))]", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    (num, cnt) = (0, 0)\n    tmp = -1\n    for i in range(0, n, 2):\n        if s[i] != s[i + 1]:\n            num += 1\n        elif s[i] != tmp:\n            cnt += 1\n            tmp = s[i]\n    print(num, max(1, cnt))", "t = int(input())\nfor i in range(0, t):\n    count = 0\n    n = int(input())\n    s = input()\n    j = 0\n    f = 0\n    k = 5\n    for i in range(0, n, 2):\n        if s[i] != s[i + 1]:\n            count += 1\n        elif f == 0:\n            f = 1\n            k = s[i]\n        elif s[i] != k:\n            j += 1\n            k = s[i]\n    print(count, end=' ')\n    print(j + 1)", "for ii in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = 0\n    for i in range(0, n - 1, 2):\n        if s[i] != s[i + 1]:\n            ans += 1\n    seg = 0\n    last = 2\n    for i in range(0, n - 1, 2):\n        curr = 2\n        if s[i] == s[i + 1] and s[i] == '0':\n            curr = 0\n        if s[i] == s[i + 1] and s[i] == '1':\n            curr = 1\n        if last == 0 and curr == 1:\n            seg += 1\n            last = 1\n        if last == 1 and curr == 0:\n            seg += 1\n            last = 0\n        if last == 2:\n            last = curr\n    print(ans, seg + 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    mas = list(input())\n    new = []\n    count = 0\n    for i in range(1, n, 2):\n        if mas[i] == mas[i - 1]:\n            new.append(int(mas[i]))\n        else:\n            new.append(2)\n            count += 1\n    line = 1\n    temp = 2\n    for i in range(n // 2):\n        if new[i] != 2:\n            if temp == 2:\n                temp = new[i]\n            if temp != new[i]:\n                temp = new[i]\n                line += 1\n    print(count, line)", "for t in range(int(input())):\n    n = int(input())\n    a = [int(y) for y in input()]\n    p = -1\n    ans = 0\n    seg = 0\n    for i in range(0, n, 2):\n        if a[i] ^ a[i + 1]:\n            ans += 1\n        else:\n            seg += p != a[i]\n            p = a[i]\n    print(ans, max(1, seg))", "for t in range(int(input())):\n    n = int(input())\n    a = [int(y) for y in input()]\n    p = -1\n    ans = 0\n    seg = 0\n    for i in range(0, n, 2):\n        if a[i] ^ a[i + 1]:\n            ans += 1\n        else:\n            seg += p != a[i]\n            p = a[i]\n    print(ans, max(1, seg))", "for t in range(int(input())):\n    n = int(input())\n    a = [int(y) for y in input()]\n    p = -1\n    ans = 0\n    seg = 0\n    for i in range(0, n, 2):\n        if a[i] ^ a[i + 1]:\n            ans += 1\n        else:\n            seg += p != a[i]\n            p = a[i]\n    print(ans, max(1, seg))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    l = 0\n    k = 0\n    a = []\n    for i in range(0, n, 2):\n        if s[i] == s[i + 1]:\n            a.append(int(s[i]))\n        else:\n            a.append(-1)\n            l += 1\n    x = []\n    for i in range(len(a)):\n        if a[i] == -1:\n            continue\n        elif a[i] == 0:\n            if not x:\n                x.append(a[i])\n            elif x[-1] != a[i]:\n                x.append(a[i])\n                k += 3\n        elif not x:\n            x.append(a[i])\n            k += 3\n        elif x[-1] != a[i]:\n            x.append(a[i])\n            k += 3\n    if x:\n        k += 2\n    if not x:\n        x.append(1)\n    print(l, len(x))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = list(input())\n    l = '1'\n    ans = 0\n    for i in range(0, n, 2):\n        if s[i] == s[i + 1]:\n            l = s[i + 1]\n            break\n    for i in range(0, len(s), 2):\n        if s[i] == s[i + 1]:\n            l = s[i + 1]\n        else:\n            ans += 1\n            s[i] = l\n            s[i + 1] = l\n    ans1 = 0\n    l = 'b'\n    for i in range(n):\n        if s[i] != l:\n            ans1 += 1\n            l = s[i]\n    print(ans, ans1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    st = input()\n    arr = []\n    count = 1\n    for i in range(n - 1):\n        if st[i] != st[i + 1]:\n            arr.append(count)\n            count = 1\n        else:\n            count += 1\n    ans = 0\n    for i in range(len(arr)):\n        if arr[i] % 2 != 0:\n            ans += 1\n            if i + 1 < len(arr):\n                arr[i + 1] -= 1\n    ct_sb = 1\n    prev = -1\n    for i in range(0, n, 2):\n        if st[i] == st[i + 1]:\n            if prev == -1:\n                prev = i\n            elif st[prev] != st[i]:\n                prev = i\n                ct_sb += 1\n    print(ans, ct_sb)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = list(input())\n    l = '1'\n    ans = 0\n    for i in range(0, n, 2):\n        if s[i] == s[i + 1]:\n            l = s[i + 1]\n            break\n    for i in range(0, len(s), 2):\n        if s[i] == s[i + 1]:\n            l = s[i + 1]\n        else:\n            ans += 1\n            s[i] = l\n            s[i + 1] = l\n    ans1 = 0\n    l = 'b'\n    for i in range(n):\n        if s[i] != l:\n            ans1 += 1\n            l = s[i]\n    print(ans, ans1)", "def solve(n, s):\n    op = 0\n    state = [(1, 1)]\n    for i in range(0, len(s), 2):\n        j = i + 1\n        if s[i] == s[j]:\n            v = int(s[i])\n            x = min(state[-1][1 - v] + 1, state[-1][v])\n            state.append((x, float('inf')) if v == 0 else (float('inf'), x))\n        else:\n            op += 1\n            state.append((min(state[-1][0], state[-1][1] + 1), min(state[-1][0] + 1, state[-1][1])))\n    print(f'{op} {min(state[-1][0], state[-1][1])}')\nt = int(input())\n10000\nwhile t:\n    n = int(input())\n    s = input()\n    solve(n, s)\n    t -= 1", "for _ in range(int(input())):\n    (n, S) = (int(input()), input())\n    (DP_, DP0, DP1, p0, p1) = ([0], [1], [1], '0', '1')\n    for i in range(0, n, 2):\n        DP_.append(0)\n        DP0.append(0)\n        DP1.append(0)\n        if S[i] == S[i + 1]:\n            DP0[-1] = DP0[-2] + (0 if p0 == S[i] else 1)\n            DP1[-1] = DP1[-2] + (0 if p1 == S[i] else 1)\n            (DP_[-1], p0, p1) = (DP_[-2], S[i], S[i])\n        else:\n            (DP_[-1], DP0[-1], DP1[-1]) = (1 + DP_[-2], DP0[-2], DP1[-2])\n        pass\n    print(DP_[-1], min(DP0[-1], DP1[-1]))\n    pass", "[print(*__import__('functools').reduce(lambda x, y: [(x[0] + 1, x[1], x[2]), (x[0], x[1] + (x[2] and y[0] != x[2]), y[0])][y[0] == y[1]], zip(*[iter(input())] * 2), (0, 1, 0))[:-1]) for p in (input() for m in range(int(input())))]", "def isGood(s):\n    if s[0] == s[1]:\n        return 1\n    return 0\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = 0\n    kekw = []\n    kekw2 = []\n    for i in range(0, n, 2):\n        if s[i:i + 2] == '10' or s[i:i + 2] == '01':\n            kekw.append(i)\n            ans += 1\n        else:\n            kekw2.append(i)\n    if len(kekw) == n // 2:\n        print(ans, 1)\n    else:\n        temp = 1\n        i = 0\n        while i < len(kekw2) - 1:\n            if s[kekw2[i]:kekw2[i] + 2] == s[kekw2[i + 1]:kekw2[i + 1] + 2]:\n                pass\n            else:\n                temp += 1\n            i += 1\n        print(ans, temp)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    s = input().strip()\n    ops = 0\n    dp = [[float('inf'), float('inf')] for _ in range(n // 2)]\n    if s[0] == s[1]:\n        dp[0][int(s[1])] = 1\n    else:\n        dp[0][int(s[0])] = 1\n        dp[0][int(s[1])] = 1\n        ops += 1\n    for i in range(1, n // 2):\n        (c1, c2) = (s[i * 2], s[i * 2 + 1])\n        if c1 == c2:\n            dp[i][int(c2)] = min(dp[i - 1][0], dp[i - 1][1] + 1) if c2 == '0' else min(dp[i - 1][0] + 1, dp[i - 1][1])\n        else:\n            dp[i][0] = min(dp[i - 1][0], dp[i - 1][1] + 1)\n            dp[i][1] = min(dp[i - 1][0] + 1, dp[i - 1][1])\n            ops += 1\n    return (ops, min(dp[-1]))\nfor _ in range(int(input())):\n    print(*solve())", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    st = input()\n    arr = []\n    count = 1\n    for i in range(n - 1):\n        if st[i] != st[i + 1]:\n            arr.append(count)\n            count = 1\n        else:\n            count += 1\n    ans = 0\n    for i in range(len(arr)):\n        if arr[i] % 2 != 0:\n            ans += 1\n            if i + 1 < len(arr):\n                arr[i + 1] -= 1\n    ct_sb = 1\n    prev = -1\n    for i in range(0, n, 2):\n        if st[i] == st[i + 1]:\n            if prev == -1:\n                prev = i\n            elif st[prev] != st[i]:\n                prev = i\n                ct_sb += 1\n    print(ans, ct_sb)", "def countsegs(s):\n    cnt = 1\n    for i in range(1, len(s)):\n        if s[i] != s[i - 1]:\n            cnt += 1\n    return cnt\ntc = int(input())\nfor case in range(tc):\n    n = int(input())\n    s = list(input())\n    moves = 0\n    for i in range(0, n, 2):\n        if s[i] != s[i + 1]:\n            moves += 1\n    prevs = ['0', '1']\n    mn = countsegs(s)\n    for pre in prevs:\n        x = s[:]\n        for i in range(0, n, 2):\n            if x[i] == x[i + 1]:\n                pre = x[i]\n            else:\n                x[i] = pre\n                x[i + 1] = pre\n        mn = min(mn, countsegs(x))\n    print(moves, mn)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(input())\n    b = a[:]\n    i = 0\n    count = 0\n    while i < n:\n        if a[i:i + 2] == ['1', '1'] or a[i:i + 2] == ['0', '0']:\n            i += 2\n        else:\n            count += 1\n            i += 2\n    if a[0] != a[1]:\n        a[0] = '0'\n        a[1] = '0'\n        d = ['0', '0']\n    else:\n        d = a[:2]\n    for i in range(2, n, 2):\n        if a[i:i + 2] == ['1', '1'] or a[i:i + 2] == ['0', '0']:\n            d = a[i:i + 2]\n        else:\n            a[i:i + 2] = d\n    if b[0] != b[1]:\n        b[0] = '1'\n        b[1] = '1'\n        d = ['1', '1']\n    else:\n        d = b[:2]\n    for i in range(2, n, 2):\n        if b[i:i + 2] == ['1', '1'] or b[i:i + 2] == ['0', '0']:\n            d = b[i:i + 2]\n        else:\n            b[i:i + 2] = d\n    count1 = 1\n    count2 = 1\n    c1 = a[0]\n    c2 = b[0]\n    for i in range(2, n, 2):\n        if a[i] != c1:\n            count1 += 1\n            c1 = a[i]\n        if b[i] != c2:\n            count2 += 1\n            c2 = b[i]\n    print(count, min(count1, count2))"]