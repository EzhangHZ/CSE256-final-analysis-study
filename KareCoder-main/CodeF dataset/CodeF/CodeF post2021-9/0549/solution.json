["tst = int(input())\nfor _ in range(tst):\n    n = int(input())\n    s = input()\n    f = [0 for i in range(3)]\n    cur_bal = n\n    cnt_bal = [0 for i in range(2 * n + 1)]\n    cnt_bal[cur_bal] += 1\n    f[cur_bal % 3] += 1\n    ans = 0\n    for i in range(n):\n        new_bal = cur_bal\n        if s[i] == '-':\n            new_bal -= 1\n            f[new_bal % 3] += cnt_bal[new_bal]\n            ans += f[new_bal % 3]\n            cnt_bal[new_bal] += 1\n            f[new_bal % 3] += 1\n        else:\n            f[new_bal % 3] -= cnt_bal[new_bal]\n            new_bal += 1\n            ans += f[new_bal % 3]\n            cnt_bal[new_bal] += 1\n            f[new_bal % 3] += 1\n        cur_bal = new_bal\n    print(ans)", "tst = int(input())\nfor _ in range(tst):\n    n = int(input())\n    s = input()\n    f = [0 for i in range(3)]\n    cur_bal = n\n    cnt_bal = [0 for i in range(2 * n + 1)]\n    cnt_bal[cur_bal] += 1\n    f[cur_bal % 3] += 1\n    ans = 0\n    for i in range(n):\n        new_bal = cur_bal\n        if s[i] == '-':\n            new_bal -= 1\n            f[new_bal % 3] += cnt_bal[new_bal]\n            ans += f[new_bal % 3]\n            cnt_bal[new_bal] += 1\n            f[new_bal % 3] += 1\n        else:\n            f[new_bal % 3] -= cnt_bal[new_bal]\n            new_bal += 1\n            ans += f[new_bal % 3]\n            cnt_bal[new_bal] += 1\n            f[new_bal % 3] += 1\n        cur_bal = new_bal\n    print(ans)", "import collections\nfor _ in range(int(input())):\n    n = int(input())\n    l = 2 * n + 2\n    s = input().strip()\n    y = [[0] * (l + 1) for i in range(3)]\n\n    def upd(x, a):\n        while x <= l:\n            a[x] += 1\n            x += x & -x\n\n    def qry(x, a):\n        r = 0\n        while x > 0:\n            r += a[x]\n            x -= x & -x\n        return r\n    ans = 0\n    t = n + 1\n    upd(t, y[t % 3])\n    for i in s:\n        t = t + (1 if i == '-' else -1)\n        ans += qry(t, y[t % 3])\n        upd(t, y[t % 3])\n    print(ans)", "def promisingstring(s):\n    n = len(s)\n    presum = [0] * (n + 1)\n    ans = 0\n    for i in range(1, n + 1):\n        if s[i - 1] == '+':\n            presum[i] = presum[i - 1] + 1\n        else:\n            presum[i] = presum[i - 1] - 1\n    for i in range(1, n + 1):\n        for j in range(i):\n            if presum[i] - presum[j] <= 0 and (presum[i] - presum[j]) % 3 == 0:\n                ans += 1\n    return ans\nt = int(input())\nfor _ in range(t):\n    _ = input()\n    s = input()\n    print(promisingstring(s))", "def solve():\n    n = int(input())\n    s = input()\n    ans = 0\n    for i in range(n):\n        (plus, minus) = (0, 0)\n        for j in range(i, n):\n            if s[j] == '-':\n                minus += 1\n            else:\n                plus += 1\n            ans += minus >= plus and (minus - plus) % 3 == 0\n    print(ans)\ntst = int(input())\nfor i in range(tst):\n    solve()", "tst = int(input())\nfor _ in range(tst):\n    n = int(input())\n    s = input()\n    b = [0 for i in range(n + 1)]\n    bal = n\n    b[0] = bal\n    ans = 0\n    for i in range(1, n + 1):\n        if s[i - 1] == '+':\n            bal += 1\n        else:\n            bal -= 1\n        b[i] = bal\n        for j in range(i):\n            if b[j] >= b[i] and (b[j] - b[i]) % 3 == 0:\n                ans += 1\n    print(ans)", "tst = int(input())\nfor _ in range(tst):\n    n = int(input())\n    s = input()\n    b = [0 for i in range(n + 1)]\n    bal = n\n    b[0] = bal\n    ans = 0\n    for i in range(1, n + 1):\n        if s[i - 1] == '+':\n            bal += 1\n        else:\n            bal -= 1\n        b[i] = bal\n        for j in range(i):\n            if b[j] >= b[i] and (b[j] - b[i]) % 3 == 0:\n                ans += 1\n    print(ans)", "tst = int(input())\nfor _ in range(tst):\n    n = int(input())\n    s = input()\n    b = [0 for i in range(n + 1)]\n    bal = n\n    b[0] = bal\n    ans = 0\n    for i in range(1, n + 1):\n        if s[i - 1] == '+':\n            bal += 1\n        else:\n            bal -= 1\n        b[i] = bal\n        for j in range(i):\n            if b[j] >= b[i] and (b[j] - b[i]) % 3 == 0:\n                ans += 1\n    print(ans)", "tst = int(input())\nfor _ in range(tst):\n    n = int(input())\n    s = input()\n    b = [0 for i in range(n + 1)]\n    bal = n\n    b[0] = bal\n    ans = 0\n    for i in range(1, n + 1):\n        if s[i - 1] == '+':\n            bal += 1\n        else:\n            bal -= 1\n        b[i] = bal\n        for j in range(i):\n            if b[j] >= b[i] and (b[j] - b[i]) % 3 == 0:\n                ans += 1\n    print(ans)", "def solution():\n    n = int(input())\n    s = input()\n    ans = 0\n    for i in range(n):\n        record = {'+': 0, '-': 0}\n        for j in range(i, n):\n            record[s[j]] += 1\n            dif = record['-'] - record['+']\n            ans += dif >= 0 and dif % 3 == 0\n    print(ans)\nt = int(input())\nfor _ in range(t):\n    solution()", "from collections import defaultdict\ntests = int(input())\nfor _ in range(tests):\n    n = int(input())\n    arr = input()\n    count = defaultdict(int)\n    _max = n\n    count[0] = _max\n    substrings = 0\n    for i in range(1, n + 1):\n        if arr[i - 1] == '+':\n            _max += 1\n        else:\n            _max -= 1\n        count[i] = _max\n        for j in range(i):\n            if count[j] >= count[i] and (count[j] - count[i]) % 3 == 0:\n                substrings += 1\n    print(substrings)", "tst = int(input())\nfor _ in range(tst):\n    n = int(input())\n    s = input()\n    b = [0 for i in range(n + 1)]\n    bal = n\n    b[0] = bal\n    ans = 0\n    for i in range(1, n + 1):\n        if s[i - 1] == '+':\n            bal += 1\n        else:\n            bal -= 1\n        b[i] = bal\n        for j in range(i):\n            if b[j] >= b[i] and (b[j] - b[i]) % 3 == 0:\n                ans += 1\n    print(ans)", "tst = int(input())\nfor _ in range(tst):\n    n = int(input())\n    s = input()\n    b = [0 for i in range(n + 1)]\n    bal = n\n    b[0] = bal\n    ans = 0\n    for i in range(1, n + 1):\n        if s[i - 1] == '+':\n            bal += 1\n        else:\n            bal -= 1\n        b[i] = bal\n        for j in range(i):\n            if b[j] >= b[i] and (b[j] - b[i]) % 3 == 0:\n                ans += 1\n    print(ans)", "tst = int(input())\nfor _ in range(tst):\n    n = int(input())\n    s = input()\n    b = [0 for i in range(n + 1)]\n    bal = n\n    b[0] = bal\n    ans = 0\n    for i in range(1, n + 1):\n        if s[i - 1] == '+':\n            bal += 1\n        else:\n            bal -= 1\n        b[i] = bal\n        for j in range(i):\n            if b[j] >= b[i] and (b[j] - b[i]) % 3 == 0:\n                ans += 1\n    print(ans)", "import math\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    s = input()\n    p = 0\n    ne = 0\n    (pos, neg) = ([], [])\n    for i in range(n):\n        if s[i] == '+':\n            p += 1\n        else:\n            ne += 1\n        pos.append(p)\n        neg.append(ne)\n    count = 0\n    for i in range(n):\n        a = 0\n        b = 0\n        for j in range(i, n):\n            if s[j] == '+':\n                a += 1\n            else:\n                b += 1\n            if b >= a and (b - a) % 3 == 0:\n                count += 1\n    print(count)\n    t -= 1", "tst = int(input())\nfor _ in range(tst):\n    n = int(input())\n    s = input()\n    b = [0 for i in range(n + 1)]\n    bal = n\n    b[0] = bal\n    ans = 0\n    for i in range(1, n + 1):\n        if s[i - 1] == '+':\n            bal += 1\n        else:\n            bal -= 1\n        b[i] = bal\n        for j in range(i):\n            if b[j] >= b[i] and (b[j] - b[i]) % 3 == 0:\n                ans += 1\n    print(ans)", "tst = int(input())\nfor _ in range(tst):\n    n = int(input())\n    s = input()\n    b = [0 for i in range(n + 1)]\n    bal = n\n    b[0] = bal\n    ans = 0\n    for i in range(1, n + 1):\n        if s[i - 1] == '+':\n            bal += 1\n        else:\n            bal -= 1\n        b[i] = bal\n        for j in range(i):\n            if b[j] >= b[i] and (b[j] - b[i]) % 3 == 0:\n                ans += 1\n    print(ans)", "def promising(x):\n    if not x % 3 and x > -1:\n        return 1\n    return 0\nfor tc in range(int(input())):\n    (count, n, balance) = (0, int(input()), [1 if char == '-' else -1 for char in input()])\n    for i in range(n - 1):\n        x = sum(balance[i:i + 2])\n        count += promising(x)\n        for j in range(i + 2, n):\n            x += balance[j]\n            count += promising(x)\n    print(count)", "ans = []\nfor i in range(int(input())):\n    n = int(input())\n    inpstr = list(input().strip())\n    balance = []\n    bal = n\n    balance.append(bal)\n    cnt = 0\n    for _ in range(1, n + 1):\n        if inpstr[_ - 1] == '+':\n            bal += 1\n        else:\n            bal -= 1\n        balance.append(bal)\n        for __ in range(_):\n            if (balance[__] >= balance[_]) & ((balance[__] - balance[_]) % 3 == 0):\n                cnt += 1\n    ans.append(cnt)\nfor answ in ans:\n    print(answ)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    pr = [0 for i in range(n + 1)]\n    for i in range(1, n + 1):\n        if s[i - 1] == '-':\n            pr[i] = pr[i - 1] + 1\n        else:\n            pr[i] = pr[i - 1] - 1\n    c = 0\n    for r in range(n + 1):\n        for l in range(r):\n            if pr[r] - pr[l] >= 0 and (pr[r] - pr[l]) % 3 == 0:\n                c += 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = 0\n    for i in range(len(s)):\n        (p, m) = (0, 0)\n        for j in range(i, len(s)):\n            if s[j] == '+':\n                p = p + 1\n            elif s[j] == '-':\n                m = m + 1\n            if m >= p and (m - p) % 3 == 0:\n                ans = ans + 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    promising = 0\n    for i in range(n):\n        plus = 0\n        minus = 0\n        for j in range(i, n):\n            if s[j] == '+':\n                plus += 1\n            elif s[j] == '-':\n                minus += 1\n            if plus <= minus and (minus - plus) % 3 == 0:\n                promising += 1\n    print(promising)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    c = 0\n    se = set()\n    lsta = []\n    for j in range(n - 1):\n        p = 0\n        m = 0\n        for k in range(j, n):\n            if s[k] == '+':\n                p += 1\n            else:\n                m += 1\n            if p == m:\n                lsta.append(1)\n                c += 1\n            elif m > p:\n                if (m - p) % 3 == 0:\n                    lsta.append(1)\n    print(len(lsta))", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    a = 0\n    for i in range(n):\n        p = 0\n        m = 0\n        for j in range(i, n):\n            if s[j] == '+':\n                p += 1\n            else:\n                m += 1\n            a += (m - p) % 3 == 0 and m >= p\n    print(a)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    a = 0\n    for i in range(n):\n        p = 0\n        m = 0\n        for j in range(i, n):\n            if s[j] == '+':\n                p += 1\n            else:\n                m += 1\n            a += (m - p) % 3 == 0 and m >= p\n    print(a)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    a = 0\n    for i in range(n):\n        p = 0\n        m = 0\n        for j in range(i, n):\n            if s[j] == '+':\n                p += 1\n            else:\n                m += 1\n            a += (m - p) % 3 == 0 and m >= p\n    print(a)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    a = 0\n    for i in range(n):\n        p = 0\n        m = 0\n        for j in range(i, n):\n            if s[j] == '+':\n                p += 1\n            else:\n                m += 1\n            a += (m - p) % 3 == 0 and m >= p\n    print(a)", "def promising(x):\n    if not x % 3 and x > -1:\n        return 1\n    return 0\nfor tc in range(int(input())):\n    (count, n, string) = (0, int(input()), input())\n    for i in range(n - 1):\n        x = string[i:i + 2].count('-') - string[i:i + 2].count('+')\n        count += promising(x)\n        for j in range(i + 2, n):\n            if string[j] == '-':\n                x += 1\n            else:\n                x -= 1\n            count += promising(x)\n    print(count)", "testcase = int(input())\nfor _ in range(testcase):\n    ans = 0\n    length = int(input())\n    string = input()\n    for i in range(length):\n        plus = minus = 0\n        for j in range(i, length):\n            if string[j] == '+':\n                plus += 1\n            else:\n                minus += 1\n            if minus < plus:\n                continue\n            if (plus - minus) * 2 % 3 == 0:\n                ans += 1\n    print(ans)", "n = int(input())\nfor i in range(n):\n    t = int(input())\n    l = input()\n    m = 0\n    c = 0\n    R = []\n    for (j, ch) in enumerate(l):\n        if ch == '-':\n            a = 1\n        else:\n            a = -1\n        f = []\n        if j == 0:\n            f.append(a)\n            if a < 0:\n                a = 0\n            elif a == 0:\n                m = m + 1\n            elif a % 3 == 0:\n                m += 1\n        else:\n            f.append(a)\n            if a < 0:\n                a = -1\n            elif a == 0:\n                m = m + 1\n            elif a % 3 == 0:\n                m += 1\n            for i in range(j):\n                c = a + R[j - 1][i]\n                f.append(c)\n                if c < 0:\n                    c = 0\n                elif c == 0:\n                    m = m + 1\n                elif c % 3 == 0:\n                    m += 1\n        R.append(f)\n    print(m)", "for _ in range(int(input())):\n    n = int(input())\n    temp = input()\n    (subl, plul) = ([0 for i in range(n + 1)], [0 for i in range(n + 1)])\n    ans = 0\n    for i in range(n):\n        if temp[i] == '+':\n            plul[i + 1] = plul[i] + 1\n            subl[i + 1] = subl[i]\n        else:\n            subl[i + 1] = subl[i] + 1\n            plul[i + 1] = plul[i]\n    for i in range(n):\n        for j in range(i + 1, n):\n            subcount = subl[j + 1] - subl[i]\n            addcount = plul[j + 1] - plul[i]\n            if (subcount - addcount) % 3 == 0 and subcount >= addcount:\n                ans += 1\n    print(ans)"]