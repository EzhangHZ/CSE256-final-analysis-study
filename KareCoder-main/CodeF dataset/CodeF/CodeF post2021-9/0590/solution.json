["import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (R, C, Q) = map(int, input().split())\n    s = []\n    for _ in range(R):\n        s.append(list(input().strip()))\n    t = []\n    for i in range(C):\n        for j in range(R):\n            t.append(s[j][i])\n    total = t.count('*')\n    current = t[total:].count('*')\n    for _ in range(Q):\n        (x, y) = map(int, input().split())\n        x -= 1\n        y -= 1\n        now = y * R + x\n        if t[now] == '*':\n            if now >= total:\n                current -= 1\n            t[now] = '.'\n            total -= 1\n            if t[total] == '*':\n                current += 1\n        else:\n            if now >= total:\n                current += 1\n            t[now] = '*'\n            if t[total] == '*':\n                current -= 1\n            total += 1\n        print(current)\nsolve()", "import sys\ninput = sys.stdin.readline\nwrite = sys.stdout.write\n(n, m, q) = list(map(int, input().split()))\ndata = []\ncnt = 0\nfor i in range(n):\n    data.append(list(input().strip()))\n    cnt += data[-1].count('*')\ntemp = 0\nmatch = 0\nfor j in range(m):\n    if temp == cnt:\n        break\n    for i in range(n):\n        if temp == cnt:\n            break\n        temp += 1\n        if data[i][j] == '*':\n            match += 1\nfor _ in range(q):\n    (x, y) = list(map(int, input().split()))\n    x -= 1\n    y -= 1\n    temp = y * n + x + 1\n    if data[x][y] == '.':\n        data[x][y] = '*'\n        if temp <= cnt:\n            match += 1\n        cnt += 1\n        if data[(cnt - 1) % n][(cnt - 1) // n] == '*':\n            match += 1\n    else:\n        if data[(cnt - 1) % n][(cnt - 1) // n] == '*':\n            match -= 1\n        data[x][y] = '.'\n        cnt -= 1\n        if temp <= cnt:\n            match -= 1\n    write(str(cnt - match) + '\\n')", "import sys\ninput = sys.stdin.readline\n(n, m, q) = list(map(int, input().split()))\ndata = []\ncnt = 0\nfor i in range(n):\n    data.append(list(input().strip()))\n    cnt += data[-1].count('*')\ntemp = 0\nmatch = 0\nfor j in range(m):\n    if temp == cnt:\n        break\n    for i in range(n):\n        if temp == cnt:\n            break\n        temp += 1\n        if data[i][j] == '*':\n            match += 1\nfor _ in range(q):\n    (x, y) = list(map(int, input().split()))\n    x -= 1\n    y -= 1\n    temp = y * n + x + 1\n    if data[x][y] == '.':\n        data[x][y] = '*'\n        if temp <= cnt:\n            match += 1\n        cnt += 1\n        if data[(cnt - 1) % n][(cnt - 1) // n] == '*':\n            match += 1\n    else:\n        if data[(cnt - 1) % n][(cnt - 1) // n] == '*':\n            match -= 1\n        data[x][y] = '.'\n        cnt -= 1\n        if temp <= cnt:\n            match -= 1\n    print(cnt - match)", "out = ''\n(n, m, q) = [int(x) for x in input().split()]\nmap_ = [[] for _ in range(m)]\ncount = 0\nfor _ in range(n):\n    line = input()\n    for i in range(m):\n        x = line[i]\n        if x == '*':\n            map_[i].append(1)\n            count += 1\n        else:\n            map_[i].append(0)\ny = 0\nx = 0\ncount2 = 0\nwhile y * n + x < count:\n    if map_[y][x] == 1:\n        count2 += 1\n    x += 1\n    if x == n:\n        y += 1\n        x = 0\nfor _ in range(q):\n    (x, y) = [int(x) - 1 for x in input().split()]\n    map_[y][x] = 1 - map_[y][x]\n    if map_[y][x] == 1:\n        count += 1\n        ye = (count - 1) // n\n        xe = (count - 1) % n\n        count2 += map_[ye][xe]\n        if y * n + x < ye * n + xe:\n            count2 += 1\n    else:\n        ye = (count - 1) // n\n        xe = (count - 1) % n\n        count2 -= map_[ye][xe]\n        if y * n + x <= ye * n + xe:\n            count2 -= 1\n        count -= 1\n    out += str(count - count2) + '\\n'\nprint(out)", "(n, m, q) = map(int, input().split(' '))\ndesktop = []\ncount_icons = 0\nfor _ in range(n):\n    desktop.append([c for c in input()])\n    count_icons += desktop[-1].count('*')\ndesktop = [desktop[row][col] for col in range(m) for row in range(n)]\ncount_correct = sum((1 for c in desktop[:count_icons] if c == '*'))\nfor _ in range(q):\n    (x, y) = map(int, input().split(' '))\n    i = (y - 1) * n + (x - 1)\n    if desktop[i] == '*':\n        if desktop[count_icons - 1] == '*':\n            count_correct -= 1\n        count_icons -= 1\n        if i < count_icons:\n            count_correct -= 1\n        desktop[i] = '.'\n        print(count_icons - count_correct)\n    else:\n        if i < count_icons:\n            count_correct += 1\n        count_icons += 1\n        desktop[i] = '*'\n        if desktop[count_icons - 1] == '*':\n            count_correct += 1\n        print(count_icons - count_correct)", "(n, m, q) = [int(i) for i in input().split()]\ntemp = [input() for _ in range(n)]\ndesktop = []\nfor i in range(m):\n    for j in range(n):\n        desktop.append(temp[j][i])\ntotal = desktop.count('*')\nans = desktop[:total].count('.')\nfor _ in range(q):\n    (x, y) = [int(i) - 1 for i in input().split()]\n    if desktop[y * n + x] == '*':\n        ans -= desktop[total - 1] == '.'\n        desktop[y * n + x] = '.'\n        total -= 1\n        ans += y * n + x < total\n    else:\n        ans += desktop[total] == '.'\n        desktop[y * n + x] = '*'\n        total += 1\n        ans -= y * n + x < total\n    print(ans)", "(n, m, q) = [int(i) for i in input().split()]\ntemp = [input() for _ in range(n)]\ndesktop = []\nfor i in range(m):\n    for j in range(n):\n        desktop.append(temp[j][i])\ntotal = desktop.count('*')\nans = desktop[:total].count('.')\nfor _ in range(q):\n    (x, y) = [int(i) - 1 for i in input().split()]\n    pos = y * n + x\n    if desktop[pos] == '*':\n        ans -= desktop[total - 1] == '.'\n        desktop[pos] = '.'\n        total -= 1\n        ans += pos < total\n    else:\n        ans += desktop[total] == '.'\n        desktop[pos] = '*'\n        total += 1\n        ans -= pos < total\n    print(ans)", "(n, m, q) = map(int, input().split())\nS = [input() for _ in range(n)]\ncnt = 0\nfor s in S:\n    cnt += s.count('*')\nS = [list(s) for s in S]\nIn = 0\nOut = 0\nfor x in range(n):\n    for y in range(m):\n        if S[x][y] == '*':\n            if n * y + x >= cnt:\n                Out += 1\nfor i in range(q):\n    (x, y) = map(int, input().split())\n    x -= 1\n    y -= 1\n    if S[x][y] == '*':\n        S[x][y] = '.'\n        cnt -= 1\n        xx = cnt % n\n        yy = cnt // n\n        if S[xx][yy] == '*':\n            Out += 1\n        if n * y + x > cnt:\n            Out -= 1\n    else:\n        xx = cnt % n\n        yy = cnt // n\n        if S[xx][yy] == '*':\n            Out -= 1\n        cnt += 1\n        S[x][y] = '*'\n        if n * y + x >= cnt:\n            Out += 1\n    print(Out)", "(n, m, q) = map(int, input().split())\na = []\narr = []\nfor i in range(n):\n    row = input()\n    a.append(row)\nfor j in range(m):\n    for i in range(n):\n        arr.append(a[i][j])\ntot = arr.count('*')\ninside = arr[0:tot].count('*')\nfor h in range(q):\n    (x, y) = map(int, input().split())\n    index = (y - 1) * n + x - 1\n    limit = tot - 1\n    if arr[index] == '.':\n        arr[index] = '*'\n        tot += 1\n        if arr[limit + 1] == '*':\n            inside += 1\n        if index <= limit:\n            inside += 1\n    else:\n        tot -= 1\n        if arr[limit] == '*':\n            inside -= 1\n        if index < limit:\n            inside -= 1\n        arr[index] = '.'\n    print(tot - inside)", "from re import L\n(n, m, N) = map(int, input().split())\ndesk = []\nicons = 0\nfor _ in range(n):\n    line = list(map(lambda i: 1 if i == '*' else 0, input()))\n    desk.append(line)\n    icons += sum(line)\nin_place = 0\nif icons < n * m / 2:\n    i = 0\n    j = 0\n    for k in range(icons):\n        in_place += desk[i][j]\n        i = i + 1\n        if i == n:\n            i = 0\n            j += 1\nelse:\n    in_place = icons\n    i = n - 1\n    j = m - 1\n    for k in range(n * m - icons):\n        in_place -= desk[i][j]\n        i = i - 1\n        if i == -1:\n            i = n - 1\n            j -= 1\nfor _ in range(N):\n    (x, y) = map(int, input().split())\n    if desk[x - 1][y - 1] == 0:\n        icons += 1\n        in_place += desk[icons % n - 1][(icons - 1) // n]\n    else:\n        in_place -= desk[icons % n - 1][(icons - 1) // n]\n        icons -= 1\n    if x + n * (y - 1) <= icons:\n        in_place += 1 if desk[x - 1][y - 1] == 0 else -1\n    desk[x - 1][y - 1] = 1 - desk[x - 1][y - 1]\n    print(icons - in_place)", "(n, m, q) = map(int, input().split())\na = []\narr = []\nfor i in range(n):\n    row = input()\n    a.append(row)\nfor j in range(m):\n    for i in range(n):\n        arr.append(a[i][j])\ntot = 0\nfor i in range(len(arr)):\n    if arr[i] == '*':\n        tot += 1\ninside = 0\nfor i in range(tot):\n    if arr[i] == '*':\n        inside += 1\nfor h in range(q):\n    (x, y) = map(int, input().split())\n    index = (y - 1) * n + x - 1\n    limit = tot - 1\n    if arr[index] == '.':\n        arr[index] = '*'\n        tot += 1\n        if arr[limit + 1] == '*':\n            inside += 1\n        if index <= limit:\n            inside += 1\n    else:\n        tot -= 1\n        if arr[limit] == '*':\n            inside -= 1\n        if index < limit:\n            inside -= 1\n        arr[index] = '.'\n    print(tot - inside)", "(n, m, q) = map(int, input().split())\nz = []\na = []\nc = 0\nans = 0\nfor i in range(n):\n    z.append(list(input()))\nfor i in range(m):\n    for j in range(n):\n        if z[j][i] == '*':\n            a.append(1)\n            c += 1\n        else:\n            a.append(0)\nans = c\nfor i in range(c):\n    if a[i] == 1:\n        ans -= 1\nfor i in range(q):\n    (x, y) = map(int, input().split())\n    if a[n * (y - 1) + x - 1] == 1:\n        a[n * (y - 1) + x - 1] = 0\n        c -= 1\n        if n * (y - 1) + x - 1 > c:\n            ans -= 1\n        if a[c] == 1:\n            ans += 1\n    elif a[n * (y - 1) + x - 1] == 0:\n        a[n * (y - 1) + x - 1] = 1\n        c += 1\n        if n * (y - 1) + x - 1 >= c - 1:\n            ans += 1\n        if c:\n            if a[c - 1] == 1:\n                ans -= 1\n    print(ans)", "def main():\n    (n, m, q) = map(int, input().split())\n    s = set()\n    table = [False] * (n * m)\n    num = 0\n    for i in range(n):\n        s1 = input()\n        for j in range(m):\n            if s1[j] == '*':\n                s.add((i, j))\n                table[j * n + i] = True\n                num += 1\n    x = num // n\n    x1 = num % n\n    ans = 0\n    for (a, b) in s:\n        if b >= x and (b != x or a >= x1):\n            ans += 1\n    num -= 1\n    for _ in range(q):\n        (a, b) = map(int, input().split())\n        a -= 1\n        b -= 1\n        index = b * n + a\n        if table[index]:\n            num -= 1\n            if index == num + 1:\n                pass\n            else:\n                if index > num:\n                    ans -= 1\n                if table[num + 1]:\n                    ans += 1\n        else:\n            num += 1\n            if index == num:\n                pass\n            else:\n                if index > num:\n                    ans += 1\n                if table[num]:\n                    ans -= 1\n        table[index] = not table[index]\n        print(ans)\nmain()", "(n, m, t) = map(int, input().split())\nmapa = []\ncount = 0\nfor i in range(n):\n    k = input()\n    mmmmmmm = []\n    for j in range(m):\n        mmmmmmm.append(k[j])\n        if k[j] == '*':\n            count += 1\n    mapa.append(mmmmmmm)\nray = (count - 1) // n\nrow = (count - 1) % n\ni = 0\nj = 0\nbad = count * 1\nwhile i <= ray:\n    if i < ray:\n        while j < n:\n            if mapa[j][i] == '*':\n                bad -= 1\n            j += 1\n        i += 1\n        j = 0\n    else:\n        while j <= row:\n            if mapa[j][i] == '*':\n                bad -= 1\n            j += 1\n        i += 1\ni -= 1\nj -= 1\nfor p in range(t):\n    (xx, yy) = map(int, input().split())\n    if mapa[xx - 1][yy - 1] == '.':\n        mapa[xx - 1][yy - 1] = '*'\n        if yy - 1 > i or (yy - 1 == i and xx - 1 > j):\n            bad += 1\n        if j < n - 1:\n            j += 1\n        else:\n            j = 0\n            i += 1\n        if mapa[j][i] == '*':\n            bad -= 1\n    else:\n        if mapa[j][i] == '*':\n            bad += 1\n        mapa[xx - 1][yy - 1] = '.'\n        if yy - 1 > i or (yy - 1 == i and xx - 1 >= j):\n            bad -= 1\n        if j == 0:\n            i -= 1\n            j = n - 1\n        else:\n            j -= 1\n    print(bad)", "(n, m, q) = list(map(int, input().split()))\ns = []\ncnt = 0\nfor _ in range(n):\n    s += [list(input())]\n    for elem in s[-1]:\n        if elem == '*':\n            cnt += 1\nans = cnt\nfor i in range(cnt):\n    if s[i % n][i // n] == '*':\n        ans -= 1\nfor _ in range(q):\n    (x, y) = list(map(int, input().split()))\n    x -= 1\n    y -= 1\n    if s[x][y] == '*':\n        cnt -= 1\n        ans -= 1\n        if s[cnt % n][cnt // n] == '*':\n            ans += 1\n        s[x][y] = '.'\n        if cnt > x + y * n:\n            ans += 1\n    else:\n        cnt += 1\n        ans += 1\n        s[x][y] = '*'\n        if s[(cnt - 1) % n][(cnt - 1) // n] == '*':\n            ans -= 1\n        if cnt > 1 + x + y * n:\n            ans -= 1\n    print(ans)", "import math\n(n, m, q) = map(int, input().split())\nl = []\nc = 0\nfor i in range(n):\n    l.append([])\n    s = input()\n    c += s.count('*')\n    for j in s:\n        l[-1].append(j)\ny = int(math.ceil(c / n) - 1)\nx = c - n * y - 1\nc1 = 0\nfor i in range(y):\n    for j in range(n):\n        if l[j][i] == '*':\n            c1 += 1\nfor i in range(x + 1):\n    if l[i][y] == '*':\n        c1 += 1\nfor i in range(q):\n    (x1, y1) = map(int, input().split())\n    x1 -= 1\n    y1 -= 1\n    if l[x1][y1] == '.':\n        l[x1][y1] = '*'\n        c += 1\n        y = int(math.ceil(c / n) - 1)\n        x = c - n * y - 1\n        if l[x][y] == '*':\n            c1 += 1\n        if y1 < y:\n            c1 += 1\n        elif y1 == y:\n            if x1 < x:\n                c1 += 1\n        print(c - c1)\n    else:\n        if l[x][y] == '*':\n            c1 -= 1\n        l[x1][y1] = '.'\n        c -= 1\n        y = int(math.ceil(c / n) - 1)\n        x = c - n * y - 1\n        if y1 < y:\n            c1 -= 1\n        elif y1 == y:\n            if x1 <= x:\n                c1 -= 1\n        print(c - c1)", "(n, m, q) = map(int, input().split())\ntotcnt = 0\ngudcnt = 0\nb = []\nb.append(0)\na = [input() for i in range(n)]\nfor j in range(m):\n    for i in range(n):\n        b.append(bool(a[i][j] == '*'))\n        if a[i][j] == '*':\n            totcnt += 1\nfor i in range(totcnt + 1):\n    gudcnt += b[i]\nfor i in range(q):\n    (x, y) = map(int, input().split())\n    ind = n * (y - 1) + x\n    if b[ind]:\n        if b[totcnt]:\n            gudcnt -= 1\n        totcnt -= 1\n        if ind <= totcnt:\n            gudcnt -= 1\n        b[ind] = 0\n    else:\n        b[ind] = 1\n        if ind <= totcnt:\n            gudcnt += 1\n        totcnt += 1\n        if b[totcnt]:\n            gudcnt += 1\n    print(totcnt - gudcnt)"]