["for _ in range(int(input())):\n    (n, h, m) = map(int, input().split())\n    l = [list(map(int, input().split())) for _ in range(n)]\n    for i in range(n):\n        l[i] = l[i][1] + l[i][0] * 60\n    m += h * 60\n    ans = 99999999\n    for i in range(n):\n        if l[i] >= m:\n            ans = min(ans, l[i] - m)\n        ans = min(ans, l[i] + 24 * 60 - m)\n    print(ans // 60, ans % 60)", "testcase = int(input())\nfor _ in range(testcase):\n    (n, h, m) = [int(num) for num in input().split()]\n    times = []\n    for i in range(n):\n        (a, b) = [int(num) for num in input().split()]\n        times.append((a, b))\n    c1 = (h, m)\n    times.append(c1)\n    times.sort()\n    ind = times.index(c1)\n    c2 = times[(ind + 1) % len(times)]\n    if c2 < c1:\n        c2 = (c2[0] + 24, c2[1])\n    ans_min = (c2[0] - c1[0]) * 60 + c2[1] - c1[1]\n    ans = (ans_min // 60, ans_min % 60)\n    print(*ans)", "for _ in range(int(input())):\n    (t, h, m) = map(int, input().split())\n    cvh = h * 60 + m\n    l = []\n    for i in range(t):\n        (hi, mi) = map(int, input().split())\n        cvi = hi * 60 + mi\n        if cvi >= cvh:\n            l.append(cvi - cvh)\n        else:\n            l.append(1440 + cvi - cvh)\n    re = min(l)\n    print(re // 60, re % 60)", "for t in range(int(input())):\n    (n, H, M) = map(int, input().split())\n    time = H * 60 + M\n    l = []\n    for i in range(n):\n        (h, m) = map(int, input().split())\n        time_alarm = h * 60 + m\n        if time_alarm < time:\n            l.append(time_alarm - time + 24 * 60)\n        else:\n            l.append(time_alarm - time)\n    time = min(l)\n    print(time // 60, time % 60)", "t = int(input())\nfor i in range(t):\n    (n, H, M) = map(int, input().split())\n    minh = 24\n    minh = 24\n    for ii in range(n):\n        (hh, mm) = map(int, input().split())\n        if hh > H or (hh == H and mm >= M):\n            if mm < M:\n                (hh, mm) = (hh - H - 1, mm - M + 60)\n            else:\n                (hh, mm) = (hh - H, mm - M)\n        elif mm < M:\n            (hh, mm) = (hh - H - 1 + 24, mm - M + 60)\n        else:\n            (hh, mm) = (hh - H + 24, mm - M)\n        if minh > hh or (minh == hh and minm >= mm):\n            minh = hh\n            minm = mm\n    print(minh, minm)", "m = int(input())\nlst = []\nfor i in range(m):\n    (n, H, M) = map(int, input().split())\n    lst1 = [(n, H, M)]\n    for j in range(n):\n        lst1.append(list(map(int, input().split())))\n    lst.append(lst1)\nans = []\nfor i in lst:\n    (H, M) = (i[0][1], i[0][2])\n    min_val = 24 * 60\n    for j in i[1:]:\n        if H < j[0]:\n            if M > j[1]:\n                min_val = min(min_val, (j[0] - 1 - H) * 60 + (60 + j[1] - M))\n            else:\n                min_val = min(min_val, (j[0] - H) * 60 + (j[1] - M))\n        elif H > j[0]:\n            exH = 23 - H\n            exM = 60 - M\n            exT = exH * 60 + exM\n            min_val = min(min_val, exT + j[0] * 60 + j[1])\n        elif M <= j[1]:\n            min_val = min(min_val, j[1] - M)\n        else:\n            min_val = min(min_val, 24 * 60 - M + j[1])\n    ans.append([min_val // 60, min_val % 60])\nfor i in ans:\n    print(i[0], i[1])", "a = int(input())\nfor x in range(a):\n    (b, c, d) = map(int, input().split())\n    o = c * 60 + d\n    j = []\n    for y in range(b):\n        (e, f) = map(int, input().split())\n        k = e * 60 + f\n        if k >= o:\n            j.append(k - o)\n        else:\n            j.append(23 * 60 + 60 - (o - k))\n    mi = 1450\n    for y in j:\n        if y < mi:\n            mi = y\n    print(mi // 60, mi % 60)", "t = int(input())\nfor _ in range(t):\n    (n, H, M) = map(int, input().split())\n    times = []\n    for i in range(n):\n        (h, m) = map(int, input().split())\n        times.append((h, m))\n    h_tot = 24\n    m_tot = 60\n    for (h, m) in times:\n        c_h = (h - H - 1 + (60 - M + m) // 60) % 24\n        c_m = (60 - M + m) % 60\n        if h_tot > c_h:\n            h_tot = c_h\n            m_tot = c_m\n        elif h_tot == c_h and m_tot > c_m:\n            m_tot = c_m\n    print(h_tot, m_tot)", "for _ in range(int(input())):\n    (n, s, m) = map(int, input().split())\n    x = s * 60 + m\n    a = []\n    for i in range(n):\n        (s, m) = map(int, input().split())\n        a.append((s * 60 + m - x) % (24 * 60))\n    ans = sorted(a)[0]\n    print(ans // 60, ans % 60)", "t = int(input())\nfinalArray = []\nfor i in range(t):\n    [n, H, M] = [int(num) for num in input().split()]\n    hourInMin = H * 60\n    totalMin = hourInMin + M\n    tempArray = []\n    for j in range(n):\n        [aH, aM] = [int(num) for num in input().split()]\n        alarmHour = aH * 60\n        totalAlarmMin = alarmHour + aM\n        if totalMin > totalAlarmMin:\n            calculatedMin = 24 * 60 + totalAlarmMin - totalMin\n            tempArray.append(calculatedMin)\n        else:\n            calculatedMin = totalAlarmMin - totalMin\n            tempArray.append(calculatedMin)\n    minimum = min(tempArray)\n    print(f'{minimum // 60} {minimum % 60}')\n    finalArray.append(minimum)", "def bedsorter(inp):\n    (tasks, bedhour, bedmin) = inp.split()\n    return (int(tasks), int(bedhour), int(bedmin))\n\ndef tasksorter(inp):\n    (taskhour, taskmin) = inp.split()\n    return (int(taskhour), int(taskmin))\nt = int(input())\nfor i in range(t):\n    (n, bedhour, bedmin) = bedsorter(input())\n    timediffs = []\n    for j in range(n):\n        (taskhour, taskmin) = tasksorter(input())\n        mindiff = (taskmin - bedmin) % 60\n        if taskmin < bedmin:\n            hourdiff = (taskhour - bedhour - 1) % 24\n        else:\n            hourdiff = (taskhour - bedhour) % 24\n        totaldiff = hourdiff + mindiff / 60\n        timediffs.append([totaldiff, hourdiff, mindiff])\n    print(min(timediffs)[1], min(timediffs)[2])", "def main():\n    m = list(map(int, input().split()))\n    number_tasks = m[0]\n    h = m[1]\n    mn = m[2]\n    out_h = float('inf')\n    out_m = float('inf')\n    for i in range(number_tasks):\n        task = list(map(int, input().split()))\n        hour_task = task[0]\n        min_task = task[1]\n        if h <= hour_task:\n            h2 = hour_task - h\n        else:\n            h2 = 24 - h + hour_task\n        if mn > min_task:\n            mn2 = 60 - mn + min_task\n            if hour_task == h:\n                h2 = 23\n            else:\n                h2 -= 1\n        else:\n            mn2 = min_task - mn\n        if h2 == out_h and mn2 < out_m or h2 < out_h:\n            out_h = h2\n            out_m = mn2\n    print(out_h, out_m)\ntests = int(input())\nfor t in range(tests):\n    main()", "res = []\nbums = int(input())\nfor i in range(bums):\n    inpt = input().split()\n    (n, h, m) = [int(x) for x in inpt]\n    time_n = h + m / 60\n    delta = []\n    for j in range(n):\n        inpt = input().split()\n        (ht, mt) = [int(x) for x in inpt]\n        time_till = ht + mt / 60\n        if time_till < time_n:\n            time_till += 24\n        delta.append(time_till - time_n)\n    delta = min(delta)\n    hours = int(delta)\n    mins_left = round((delta - hours) * 60)\n    res.append((hours, mins_left))\nfor i in res:\n    print(i[0], i[1])", "for _ in range(int(input())):\n    (n, h, m) = list(map(int, input().split()))\n    dv = 24 * 60\n    time = h * 60 + m\n    ans = 1440\n    for i in range(n):\n        (h1, m1) = map(int, input().split())\n        t1 = h1 * 60 + m1\n        if t1 >= time:\n            ans = min(ans, t1 - time)\n        else:\n            ans = min(ans, 1440 - time + t1)\n    print(ans // 60, ans % 60)", "t = int(input())\nfor p in range(t):\n    (n, H, M) = map(int, input().split())\n    ansh = 99\n    ansm = 99\n    ans = 99999999\n    for i in range(n):\n        (h, m) = map(int, input().split())\n        if M > m:\n            m += 60\n            h -= 1\n        if (h - H + 24) % 24 * 60 + m - M < ans:\n            ans = (h - H + 24) % 24 * 60 + m - M\n            ansh = (h - H + 24) % 24\n            ansm = m - M\n    print(ansh, ansm)", "def main():\n    t = 1\n    t = int(input())\n    for _ in range(t):\n        (n, h, m) = map(int, input().split())\n        nw = h * 60 + m\n        ans = 10 ** 10\n        for j in range(n):\n            (hi, mi) = map(int, input().split())\n            hl = hi * 60 + mi\n            if hl < nw:\n                hl += 24 * 60\n            ans = min(ans, hl - nw)\n        print(ans // 60, ans % 60)\nmain()", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nmis = lambda : map(int, input().split())\nINF = float('inf')\n\ndef f(now, alarm):\n    if now > alarm:\n        return alarm + (24 * 60 - now)\n    return alarm - now\n\ndef solve():\n    (n, h, m) = mis()\n    time = h * 60 + m\n    alarms = [list(mis()) for _ in range(n)]\n    ans = INF\n    for (p, q) in alarms:\n        a_time = p * 60 + q\n        k = f(time, a_time)\n        ans = min(k, ans)\n    print(*divmod(ans, 60))\nT = int(input())\nfor _ in range(T):\n    solve()", "for i in range(int(input())):\n    (n, h, m) = map(int, input().split())\n    t = h * 60 + m\n    ta = 10 ** 10\n    for j in range(n):\n        (h, m) = map(int, input().split())\n        t1 = h * 60 + m\n        if t1 < t:\n            t1 += 24 * 60\n        ta = min(t1, ta)\n    print((ta - t) // 60, (ta - t) % 60)", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    (n, H, M) = map(int, inp().split())\n    x = H * 60 + M\n    r = 24 * 60 + 10\n    for i in range(n):\n        (h, m) = map(int, inp().split())\n        y = h * 60 + m\n        if y < x:\n            r = min(r, y + 24 * 60 - x)\n        else:\n            r = min(r, y - x)\n    print(r // 60, r % 60)\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "a = int(input())\nfor _ in range(a):\n    (cl, hr, min) = [int(x) for x in input().split()]\n    mintime = -1\n    for i in range(cl):\n        (hr1, min1) = [int(x) for x in input().split()]\n        dif = (hr1 - hr) * 60 + (min1 - min)\n        if dif < 0:\n            dif = dif + 24 * 60\n        if mintime == -1 or mintime > dif:\n            mintime = dif\n    print('%d %d' % (mintime / 60, mintime % 60))", "t = int(input())\nfor _ in range(t):\n    (n, h, m) = map(int, input().split())\n    L = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        L.append((a, b))\n    L.sort()\n    ans = -1\n    for i in range(n):\n        if (h, m) > L[i]:\n            pass\n        else:\n            ans = i\n            break\n    if ans == -1:\n        minu = 24 * 60 - h * 60 - m + L[0][0] * 60 + L[0][1]\n        print(minu // 60, minu % 60)\n    else:\n        minu = L[i][0] * 60 + L[i][1] - h * 60 - m\n        print(minu // 60, minu % 60)", "for _ in range(int(input())):\n    (n, H, M) = map(int, input().split())\n    min_time = 1440\n    for _ in range(n):\n        (h, m) = map(int, input().split())\n        if (h * 60 + m - H * 60 - M) % 1440 < min_time:\n            min_time = (h * 60 + m - H * 60 - M) % 1440\n    print(min_time // 60, min_time % 60)", "t = int(input())\nfor _ in range(t):\n    (n, h, m) = [int(s) for s in input().split(' ')]\n    curMins = h * 60 + m\n    ans = float('inf')\n    for i in range(n):\n        (curH, curM) = [int(s) for s in input().split(' ')]\n        mins = curH * 60 + curM\n        diffM = (mins - curMins + 60 * 24) % (60 * 24)\n        ans = min(ans, diffM)\n    print(ans // 60, ans % 60)", "for _ in range(int(input())):\n    (n, H, M) = [int(x) for x in input().split()]\n    l = []\n    for i in range(n):\n        (x, y) = [int(x) for x in input().split()]\n        diff_x = x - H\n        diff_y = y - M\n        if diff_y < 0:\n            diff_y = 60 + diff_y\n            diff_x -= 1\n        if diff_x < 0:\n            diff_x += 24\n        l.append((diff_x, diff_y))\n    new_l = sorted(l, key=lambda x: x[0] * 60 + x[1])\n    print(f'{new_l[0][0]} {new_l[0][1]}')", "def time_diff(h1, m1, h2, m2):\n    h = (h2 - h1) % 24\n    m = (m2 - m1) % 60\n    if m1 > m2:\n        h = (h - 1) % 24\n    return h * 60 + m\nfor _ in range(int(input())):\n    (n, H, M) = map(int, input().split())\n    A = 24 * 60\n    for _ in range(n):\n        (h, m) = map(int, input().split())\n        A = min(A, time_diff(H, M, h, m))\n    print(A // 60, A % 60)", "t = int(input())\nfor i in range(t):\n    (n, H, M) = list(map(int, input().split()))\n    flag = 0\n    need = H * 60 + M\n    all = []\n    for i in range(n):\n        (h, m) = map(int, input().split())\n        all.append(h * 60 + m)\n    all = sorted(all)\n    for elem in all:\n        if elem >= need:\n            print((elem - need) // 60, (elem - need) % 60)\n            flag = 1\n            break\n    if flag == 0:\n        print((24 * 60 - need + all[0]) // 60, (24 * 60 - need + all[0]) % 60)", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    (n, h, m) = map(int, input().split())\n    t = h * 60 + m\n    a = []\n    for i in range(n):\n        (h, m) = map(int, input().split())\n        b = h * 60 + m\n        if b - t >= 0:\n            a.append(b - t)\n        else:\n            a.append(1440 - t + b)\n    print(min(a) // 60, min(a) % 60)", "def ii():\n    return int(input())\n\ndef il(sep=' '):\n    if sep == '':\n        return [int(i) for i in input()]\n    return [int(i) for i in input().split(sep)]\nt = ii()\nfor tt in range(t):\n    (n, h, m) = il()\n    sm = h * 60 + m\n    ansm1 = 24 * 60\n    ansm2 = 24 * 60\n    for i in range(n):\n        (h, m) = il()\n        am = h * 60 + m\n        if am < sm:\n            ansm1 = min(ansm1, 24 * 60 - sm + am)\n        else:\n            ansm2 = min(ansm2, am - sm)\n    ans = min(ansm1, ansm2)\n    print(ans // 60, end=' ')\n    print(ans % 60)", "t = int(input())\nfor _ in range(t):\n    (n, H, M) = map(int, input().split())\n    minTime = (float('inf'), float('inf'))\n    for __ in range(n):\n        (h, m) = map(int, input().split())\n        if (h, m) < (H, M):\n            h += 24\n        diff = 60 * (h - H) + m - M\n        hh = diff // 60\n        mm = diff % 60\n        minTime = min(minTime, (hh, mm))\n    print(*minTime)", "import bisect\n\ndef inp_a():\n    return [int(x) for x in input().split()]\n\ndef inp_s(k):\n    arr = []\n    for i in range(k):\n        arr.append(input())\n    return arr\n\ndef help():\n    pass\nfor _ in range(int(input())):\n    (n, h, m) = inp_a()\n    alarms = []\n    for i in range(n):\n        (a, b) = inp_a()\n        alarms.append(60 * a + b)\n    alarms.sort()\n    tm = 60 * h + m\n    if tm in alarms:\n        print(*[0, 0])\n    else:\n        idx = bisect.bisect_left(alarms, tm)\n        if idx == len(alarms):\n            time = 1440 - tm + alarms[0]\n            arr = [time // 60, time % 60]\n        else:\n            time = alarms[idx] - tm\n            arr = [time // 60, time % 60]\n        print(*arr)", "import sys, os\nimport timeit\nfrom itertools import cycle, repeat, chain, islice\n\ndef count_sleep_time(start_hour, start_min, end_hour, end_min):\n    start_time = start_hour * 60 + start_min\n    end_time = end_hour * 60 + end_min\n    if start_time > end_time:\n        return 24 * 60 - start_time + end_time\n    else:\n        return end_time - start_time\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        a = list(map(int, input().split()))\n        res = sys.maxsize\n        for i in range(a[0]):\n            (h, m) = list(map(int, input().split()))\n            res = min(res, count_sleep_time(a[1], a[2], h, m))\n        print(res // 60, res % 60)\ndebug = False\nstart = timeit.default_timer()\nif os.path.exists('input.txt'):\n    debug = True\n    sys.stdin = open('input.txt', 'r')\nmain()\nif debug:\n    print('Execution Time:', timeit.default_timer() - start)\n    sys.exit()", "for _ in range(int(input())):\n    (n, h, m) = map(int, input().split())\n    l = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        l.append(60 * a + b)\n    hh = 25\n    mm = 80\n    q = 60 * h + m\n    ans = 500000\n    for i in range(n):\n        if l[i] > q:\n            ans = min(ans, l[i] - q)\n        elif l[i] < q:\n            ans = min(ans, 1440 - q + l[i])\n        else:\n            ans = 0\n            break\n    print(ans // 60, ans % 60)", "def read_data():\n    (n, H, M) = map(int, input().split())\n    TIME = H * 60 + M\n    min_time = 25 * 60\n    for j in range(n):\n        (h, m) = map(int, input().split())\n        time = h * 60 + m\n        if time - TIME < 0:\n            time += 24 * 60\n        if time - TIME < min_time:\n            min_time = time - TIME\n    return min_time\nt = int(input())\nfor i in range(t):\n    k = read_data()\n    print(k // 60, k % 60)", "for _ in range(int(input())):\n    (n, H, M) = map(int, input().split())\n    res = []\n    (resh, resm) = (0, 0)\n    for i in range(n):\n        (h, m) = map(int, input().split())\n        if m - M < 0:\n            resm = 60 + m - M\n            h -= 1\n        else:\n            resm = m - M\n        if h - H < 0:\n            resh = 24 + h - H\n        else:\n            resh = h - H\n        res.append([resh, resm])\n    print(*min(res))", "n = int(input())\nm = []\nfor el in range(n):\n    (a, b, c) = map(int, input().split())\n    t = b * 60 + c\n    for i in range(a):\n        (d, e) = map(int, input().split())\n        p = d * 60 + e\n        if p >= t:\n            m.append(p - t)\n        else:\n            m.append(1440 - t + p)\n    m.sort()\n    print(m[0] // 60, m[0] % 60)\n    m = []", "R = lambda : map(int, input().split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n, h, m) = R()\n    r = 1500\n    for _ in [0] * n:\n        (x, y) = R()\n        r = min(r, (60 * (x - h) + y - m) % 1440)\n    print(r // 60 % 24, r % 60)", "t = int(input())\nfor i in range(t):\n    (n, H, M) = map(int, input().split())\n    (min_h, min_m) = (24, 60)\n    for i in range(n):\n        (h, m) = map(int, input().split())\n        (cur_dh, cur_dm) = (0, 0)\n        if h < H:\n            cur_dh = h + 24 - H\n        elif h == H and m < M:\n            cur_dh = h + 24 - H\n        else:\n            cur_dh = h - H\n        if m < M:\n            cur_dm = m + 60 - M\n            cur_dh -= 1\n        else:\n            cur_dm = m - M\n        if cur_dh * 60 + cur_dm < min_h * 60 + min_m:\n            (min_h, min_m) = (cur_dh, cur_dm)\n    print(min_h, min_m)", "C = int(input())\nfor i in range(C):\n    values = list(input().split())\n    N = int(values[0])\n    H = int(values[1])\n    M = int(values[2])\n    SLEEP = H * 60 + M\n    ans = 1000000\n    for _ in range(N):\n        x = list(input().split())\n        minutes = int(x[0]) * 60 + int(x[1])\n        t = 0\n        if minutes >= SLEEP:\n            t = abs(minutes - SLEEP)\n        else:\n            t = 24 * 60 - SLEEP + minutes\n        ans = min(ans, t)\n    print('{hour} {minutes}'.format(hour=int(ans / 60), minutes=ans % 60))", "import sys\ninput = sys.stdin.readline\nt = int(input())\nresult = []\nfor _ in range(t):\n    (n, hourOne, minuteOne) = map(int, input().split())\n    array = []\n    for i in range(n):\n        (h, m) = map(int, input().split())\n        array.append(h * 60 + m)\n\n    def solve():\n        (timeHours, timeMinutes) = (float('inf'), float('inf'))\n        currentMinutes = hourOne * 60 + minuteOne\n        for minutes in array:\n            (hoursSleep, minuteSleep) = (None, None)\n            if minutes >= currentMinutes:\n                newMinutes = minutes - currentMinutes\n                (hours, minutes) = (newMinutes // 60, newMinutes % 60)\n                (hoursSleep, minutesSleep) = (hours, minutes)\n            else:\n                newMinutes = minutes + (1440 - currentMinutes)\n                (hours, minutes) = (newMinutes // 60, newMinutes % 60)\n                (hoursSleep, minutesSleep) = (hours, minutes)\n            if hoursSleep < timeHours:\n                (timeHours, timeMinutes) = (hoursSleep, minutesSleep)\n            elif hoursSleep == timeHours and minutesSleep < timeMinutes:\n                timeMinutes = minutesSleep\n        return (timeHours, timeMinutes)\n    (z, a) = solve()\n    print(z, a)", "for i in range(int(input())):\n    (a, h1, m1) = list(map(int, input().split()))\n    b = []\n    current_time = h1 * 60 + m1\n    for i in range(a):\n        (h2, m2) = list(map(int, input().split()))\n        up_time = h2 * 60 + m2\n        if up_time < current_time:\n            up_time += 60 * 24\n        b.append(up_time - current_time)\n    min_time = min(b)\n    hours = min_time // 60\n    min_time %= 60\n    print(hours, min_time)", "for _ in range(int(input())):\n    (n, h, m) = map(int, input().split())\n    x = h * 60 + m\n    a = []\n    for i in range(n):\n        (H, M) = map(int, input().split())\n        a.append(H * 60 + M)\n    if x in a:\n        a.sort()\n        j = a.index(x)\n        y = a[j]\n        z = y - x\n        s = z // 60\n        r = z % 60\n        t = [s, r]\n        print(*t)\n    else:\n        a.append(x)\n        a.sort()\n        j = a.index(x)\n        if j < n:\n            y = a[j + 1]\n            z = y - x\n            s = z // 60\n            r = z % 60\n            t = [s, r]\n            print(*t)\n        elif j == n:\n            y = a[0]\n            z = abs(y - x + 1440)\n            s = z // 60\n            r = z % 60\n            t = [s, r]\n            print(*t)", "t = int(input())\nfor _ in range(t):\n    a = list(map(int, input().split()))\n    (n, h, m) = (a[0], a[1], a[2])\n    d = []\n    for i in range(n):\n        d.append(list(map(int, input().split())))\n    d.sort()\n    if [h, m] in d:\n        print(*[0, 0])\n    else:\n        pt = -1\n        for i in range(n):\n            if d[i][0] > h or (d[i][0] == h and d[i][1] > m):\n                pt = i\n                break\n        if pt >= 0:\n            t = 60 * d[pt][0] + d[pt][1]\n            l = t - 60 * h - m\n            lf = [l // 60, l % 60]\n            print(*lf)\n        else:\n            l = 24 * 60 - 60 * h - m + d[0][0] * 60 + d[0][1]\n            lf = [l // 60, l % 60]\n            print(*lf)", "for _ in range(int(input())):\n    (n, h, m) = map(int, input().split())\n    e = 24 * 60\n    x = h * 60 + m\n    min_n = 10000000000000000\n    for _ in range(n):\n        (h_1, m_1) = map(int, input().split())\n        x_1 = h_1 * 60 + m_1\n        if x_1 - x < 0:\n            r = x_1 - x + e\n        else:\n            r = x_1 - x\n        min_n = min(r, min_n)\n    if min_n >= 0:\n        print(min_n // 60, min_n % 60)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, H, M) = map(int, input().split(' '))\n    Mi = H * 60 + M\n    du = None\n    while n:\n        n -= 1\n        (h, m) = map(int, input().split(' '))\n        mi = h * 60 + m\n        dur = mi - Mi if Mi <= mi else 24 * 60 - Mi + mi\n        if du == None:\n            du = dur\n        elif dur < du:\n            du = dur\n    myH = du // 60\n    myM = du % 60\n    print('{} {}'.format(myH, myM))", "t = int(input())\nwhile t > 0:\n    l = []\n    t = t - 1\n    mz = 100000\n    mf = 0\n    f = 1\n    (n, H, M) = map(int, input().split())\n    time = H * 60 + M\n    while n > 0:\n        n = n - 1\n        (h, m) = map(int, input().split())\n        l.append(h * 60 + m)\n    for i in l:\n        j = i - time\n        if j == 0:\n            f = 0\n            print('0 0')\n            break\n        elif j > 0:\n            if j < mz:\n                mz = j\n        elif j < 0:\n            if j < mf:\n                mf = j\n    if mz != 100000 and f == 1:\n        a = mz // 60\n        b = mz % 60\n        f = 0\n        print(a, b)\n    if mf != 0 and f == 1:\n        mf = mf + 1440\n        a = mf // 60\n        b = mf % 60\n        print(a, b)", "t = int(input())\nfor i in range(t):\n    (n, h, m) = list(map(int, input().split()))\n    h_arr = []\n    m_arr = []\n    for j in range(n):\n        (t1, t2) = list(map(int, input().split()))\n        h_arr.append(t1)\n        m_arr.append(t2)\n    minim = 1440\n    for j in range(n):\n        d1 = h_arr[j] - h\n        d2 = m_arr[j] - m\n        if d1 < 0:\n            d1 += 24\n        if d2 < 0:\n            if d1 > 0:\n                d1 -= 1\n                d2 += 60\n            else:\n                d1 = 23\n                d2 += 60\n        if minim > d1 * 60 + d2:\n            minim = d1 * 60 + d2\n    print(minim // 60, minim % 60)", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    l = []\n    for i in range(a):\n        (x, y) = map(int, input().split())\n        x -= 1\n        y += 60\n        r = x - b\n        if r < 0:\n            r += 24\n        s = y - c\n        r += s // 60\n        s = s % 60\n        r = r % 24\n        l.append((r, s))\n    (v, w) = min(l)\n    print(v, w)", "for _ in range(int(input())):\n    l = list(map(int, input().split()))\n    n = l[0]\n    (h, m) = (l[1], l[2])\n    alarms = []\n    for i in range(n):\n        (hi, mi) = map(int, input().split())\n        ans = abs(h * 60 + m - (hi * 60 + mi))\n        if hi < h:\n            alarms.append(24 * 60 - ans)\n        elif hi == h and mi < m:\n            alarms.append(24 * 60 - ans)\n        else:\n            alarms.append(ans)\n    res = min(alarms)\n    resH = res // 60\n    resM = res % 60\n    print(resH, resM)", "def reset(dh, dm):\n    if dm >= 60:\n        dm -= 60\n        dh += 1\n    elif dm < 0:\n        dm += 60\n        dh -= 1\n    return (dh, dm)\nt = int(input())\nfor _ in range(t):\n    (n, H, M) = map(int, input().split())\n    (rh, rm) = (24, 0)\n    if H == 24:\n        H = 0\n    if M == 60:\n        M = 0\n    (H24, M24) = (23 - H, 60 - M)\n    if M24 == 60:\n        H24 += 1\n        M24 = 0\n    for i in range(n):\n        (h, m) = map(int, input().split())\n        if h < H:\n            (dh, dm) = (H24 + h, M24 + m)\n        elif h == H:\n            if m < M:\n                (dh, dm) = (H24 + h, M24 + m)\n            elif m == M:\n                (dh, dm) = (0, 0)\n            else:\n                (dh, dm) = (0, m - M)\n        else:\n            (dh, dm) = (h - H, m - M)\n        (dh, dm) = reset(dh, dm)\n        if dh < rh:\n            (rh, rm) = (dh, dm)\n        elif dh == rh:\n            if dm < rm:\n                rm = dm\n    print(rh, rm)", "a = int(input())\nfor i in range(a):\n    (n, h, m) = map(int, input().split())\n    t = h * 60 + m\n    c = abs(t - 24 * 60)\n    d = []\n    for i in range(n):\n        (h1, m1) = map(int, input().split())\n        if h1 < h:\n            d.append(c + h1 * 60 + m1)\n        elif h1 == h and m1 < m:\n            d.append(c + h1 * 60 + m1)\n        else:\n            d.append(-t + h1 * 60 + m1)\n    print(min(d) // 60, min(d) % 60)", "for x in range(int(input())):\n    (t, hsleep, msleep) = input().split(' ')\n    tsleep = int(hsleep) * 60 + int(msleep)\n    tasks = []\n    for x in range(int(t)):\n        (temph, tempm) = input().split(' ')\n        tempt = int(tempm) + int(temph) * 60\n        if int(hsleep) > int(temph):\n            tempt += 1440 - tsleep\n        elif int(hsleep) < int(temph):\n            tempt -= tsleep\n        elif int(msleep) > int(tempm):\n            tempt = 1440 - int(msleep) + int(tempm)\n        elif int(msleep) < int(tempm):\n            tempt -= tsleep\n        else:\n            tempt = 0\n        tasks.append(tempt)\n    tasks = sorted(tasks)\n    closest = tasks[0]\n    ht = int(closest / 60)\n    closest = closest - 60 * ht\n    print(ht, closest)", "for i in range(int(input())):\n    (n, h, m) = map(int, input().split())\n    x = h * 60 + m\n    a = []\n    for j in range(n):\n        (c, d) = map(int, input().split())\n        z = c * 60 + d\n        if z > x:\n            a.append(z - x)\n        elif z < x:\n            a.append(z + (24 * 60 - x))\n        else:\n            a.append(0)\n    a.sort()\n    print(a[0] // 60, a[0] % 60)", "t = int(input())\nfor a in range(t):\n    nums = input().split()\n    n = int(nums[0])\n    H = int(nums[1])\n    M = int(nums[2])\n    Hours = []\n    Minutes = []\n    for i in range(n):\n        nums = input().split()\n        Hours.append(int(nums[0]))\n        Minutes.append(int(nums[1]))\n    for i in range(n):\n        Hours.append(Hours[i] + 24)\n        Minutes.append(Minutes[i])\n    timefound = False\n    totaltime = 60 * H + M\n    mindifference = 1440\n    for i in range(2 * n):\n        currtime = 60 * Hours[i] + Minutes[i]\n        if currtime >= totaltime and currtime - totaltime < mindifference:\n            mindifference = currtime - totaltime\n    M = mindifference % 60\n    H = (mindifference - M) / 60\n    print('%d %d' % (H, M))", "t = int(input())\nfor i in range(t):\n    (n, h, m) = map(int, input().split())\n    l = []\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        l.append(x * 60 + y)\n    tm = h * 60 + m\n    st = 1440\n    d = 0\n    for i in range(n):\n        if l[i] - tm < 0:\n            d = l[i] - tm + 1440\n        else:\n            d = l[i] - tm\n        st = min(d, st)\n    H = st // 60\n    M = st % 60\n    print(str(H) + ' ' + str(M))", "import math\nt = int(input())\nfor _ in range(t):\n    (n, h1, m1) = map(int, input().split())\n    tot1 = h1 * 60 + m1\n    arr = []\n    for i in range(n):\n        (h2, m2) = map(int, input().split())\n        arr.append(h2 * 60 + m2)\n    arr.sort()\n    min_val = math.inf\n    for i in range(n):\n        if arr[i] >= tot1:\n            min_val = min(arr[i], min_val)\n    if min_val == math.inf:\n        val = 24 * 60 + arr[0] - tot1\n        print(val // 60, val % 60)\n    else:\n        val = min_val - tot1\n        print(val // 60, val % 60)", "def convert_to_scalar(hour, minutes):\n    return int(hour * 60 + minutes)\n\ndef convert_to_time(value):\n    minutes = value % 60\n    return (int((value - minutes) / 60), int(minutes))\n\ndef check_next_alarm(bedTime, alarms):\n    minimun_value = None\n    maximum_value = None\n    for time in alarms:\n        if time >= bedTime:\n            if maximum_value == None:\n                maximum_value = time\n            else:\n                maximum_value = min(maximum_value, time)\n        elif minimun_value == None:\n            minimun_value = time\n        else:\n            minimun_value = min(minimun_value, time)\n    if maximum_value == None:\n        return convert_to_time(60 * 24 - bedTime + minimun_value)\n    return convert_to_time(maximum_value - bedTime)\ntestcase = int(input())\nres = []\nwhile testcase > 0:\n    alarms = []\n    firstInput = input()\n    firstInput = firstInput.split()\n    alarmsSize = int(firstInput[0])\n    bedtime = convert_to_scalar(int(firstInput[1]), int(firstInput[2]))\n    while alarmsSize > 0:\n        alarmTime = input()\n        alarmTime = alarmTime.split(' ')\n        alarmTime = convert_to_scalar(int(alarmTime[0]), int(alarmTime[1]))\n        alarms.append(alarmTime)\n        alarmsSize -= 1\n    testcase -= 1\n    (res_hour, res_minute) = check_next_alarm(bedtime, alarms)\n    res.append((res_hour, res_minute))\nfor (hour, minutes) in res:\n    print(hour, minutes)", "testcase = int(input())\nfor _ in range(testcase):\n    (n1, h1, m1) = input().split()\n    n = int(n1)\n    h = int(h1)\n    m = int(m1)\n    ah = 24\n    am = 60\n    for _ in range(n):\n        (ha, ma) = input().split()\n        hi = int(ha)\n        mi = int(ma)\n        if h <= hi:\n            hd = hi - h\n        else:\n            hd = 24 - h + hi\n        if m <= mi:\n            md = mi - m\n        else:\n            md = 60 - m + mi\n            if hd == 0:\n                hd = 23\n            else:\n                hd -= 1\n        if hd < ah:\n            ah = hd\n            am = md\n        elif hd == ah:\n            am = min(am, md)\n    print(ah, am)", "T = int(input())\nfor _ in range(T):\n    (n, H, M) = map(int, input().split())\n    currTime = H * 60 + M\n    alarms = []\n    for _ in range(n):\n        (h, m) = map(int, input().split())\n        alarms.append(h * 60 + m)\n    alarms.sort()\n    nextAlarm = 0\n    for al in alarms:\n        if al >= currTime:\n            nextAlarm = al\n            break\n        if nextAlarm == 0:\n            nextAlarm = alarms[0]\n    if nextAlarm - currTime >= 0:\n        diff = nextAlarm - currTime\n    else:\n        diff1 = 24 * 60 - currTime\n        diff = diff1 + nextAlarm\n    print(diff // 60, diff % 60)", "t = int(input())\nfor _ in range(t):\n    vlad = list(map(int, input().split()))\n    lst = []\n    for i in range(vlad[0]):\n        templst = []\n        templst.append(list(map(int, input().split())))\n        lst.append(templst[0][0] * 60 + templst[0][1])\n        templst.clear()\n    sleeptime = vlad[1] * 60 + vlad[2]\n    duration = 24 * 60\n    for i in range(vlad[0]):\n        if lst[i] < sleeptime:\n            lst[i] += 24 * 60\n        duration = min(duration, lst[i] - sleeptime)\n    print(f'{duration // 60} {duration % 60}')", "testcases = int(input())\nfor i in range(testcases):\n    (n, H, M) = map(int, input().split())\n    min_diff = 1439\n    for j in range(n):\n        (hours, minutes) = map(int, input().split())\n        if hours > H or (hours == H and minutes >= M):\n            time_diff = 60 * hours + minutes - (60 * H + M)\n            min_diff = min(min_diff, time_diff)\n        elif hours < H or (hours == H and minutes < M):\n            time_diff = 1440 - 60 * H - M + (60 * hours + minutes)\n            min_diff = min(min_diff, time_diff)\n    print(str(min_diff // 60) + ' ' + str(min_diff % 60))", "t = int(input())\n\nclass compare(list):\n\n    def __lt__(lst1, lst2):\n        if lst1[0] != lst2[0]:\n            return lst1[0] < lst2[0]\n        else:\n            return lst1[1] < lst2[1]\n\ndef solve():\n    (n, h, m) = map(int, input().split())\n    sleep_time = h * 60 + m\n    arr = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        alarm_time = a * 60 + b\n        if alarm_time >= sleep_time:\n            minutes = alarm_time - sleep_time\n            if minutes < 60:\n                arr += [[0, minutes]]\n            else:\n                arr += [[minutes // 60, minutes % 60]]\n        else:\n            minutes = 24 * 60 - (sleep_time - alarm_time)\n            if minutes < 60:\n                arr += [[0, minutes]]\n            else:\n                arr += [[minutes // 60, minutes % 60]]\n    arr.sort(key=compare)\n    print(arr[0][0], arr[0][1])\nwhile t:\n    solve()\n    t -= 1", "t = int(input())\n\ndef hm2time(h, m):\n    h <<= 2\n    h = (h << 4) - h\n    return h + m\nfor i in range(t):\n    nhm = input().split(' ')\n    n = int(nhm[0])\n    h = int(nhm[1])\n    m = int(nhm[2])\n    s = hm2time(h, m)\n    mintime = 1440\n    for j in range(n):\n        hm = input().split(' ')\n        time = hm2time(int(hm[0]), int(hm[1])) + 1440\n        mintime = min(mintime, (time - s) % 1440)\n    print(str(mintime // 60) + ' ' + str(mintime % 60))", "def main():\n    t = int(input())\n    lim = 24 * 60\n    for _ in range(t):\n        (n, H, M) = [int(i) for i in input().split()]\n        bed = H * 60 + M\n        cur_min = lim\n        state = False\n        maxmin = lim\n        for _ in range(n):\n            (h, m) = [int(i) for i in input().split()]\n            now = h * 60 + m\n            if now < bed:\n                state = True\n            if now >= bed:\n                maxmin = min(now, maxmin)\n            cur_min = min(cur_min, now)\n        if state:\n            ans = maxmin - bed\n            if maxmin == lim:\n                ans += cur_min\n        elif bed > cur_min:\n            ans = lim - bed + cur_min\n        else:\n            ans = cur_min - bed\n        (res_h, res_m) = (ans // 60, ans % 60)\n        print(res_h, res_m)\n    pass\nmain()", "for _ in range(int(input())):\n    (n, H, M) = map(int, input().split())\n    ans = 999999\n    const = H * 60 + M\n    for i in range(n):\n        (hi, mi) = map(int, input().split())\n        t = hi * 60 + mi\n        if t < const:\n            t1 = (24 - H) * 60 - M\n            t2 = hi * 60 + mi\n            t = t1 + t2\n            ans = min(ans, t)\n        else:\n            t = hi * 60 + mi\n            ans = min(ans, abs(t - const))\n    print(ans // 60, ans % 60)", "for pratyush in range(int(input())):\n    (n, h, m) = list(map(int, input().split()))\n    k = float('inf')\n    for q in range(n):\n        (a, b) = list(map(int, input().split()))\n        if a >= h:\n            c = a - h\n        else:\n            c = 24 - h + a\n        if b >= m:\n            d = b - m\n        else:\n            if c != 0:\n                c -= 1\n            else:\n                c = 23\n            d = 60 - m + b\n        e = c * 60 + d\n        if e < k:\n            (x, y) = (c, d)\n            k = e\n    print(x, y)", "def diff(first, second):\n    return (first[0] - second[0], first[1] - second[1])\n\ndef plus_day(time):\n    return (time[0] + 24, time[1])\n\ndef to_norm(time):\n    if time[1] < 0:\n        return (time[0] - 1, time[1] + 60)\n    return time\nt = int(input())\nfor i in range(t):\n    (n, H, M) = map(int, input().split())\n    sleep = (H, M)\n    time = (23, 59)\n    for j in range(n):\n        alarm = tuple(map(int, input().split()))\n        if alarm >= sleep:\n            time = min(time, to_norm(diff(alarm, sleep)))\n        else:\n            time = min(time, to_norm(diff(plus_day(alarm), sleep)))\n    print(*time)", "t = int(input())\nfor o in range(t):\n    (n, H, M) = map(int, input().split())\n    L = []\n    for k in range(n):\n        (h, m) = map(int, input().split())\n        if H <= h:\n            hours = h - H\n        else:\n            hours = 24 - H + h\n        if M <= m:\n            minutes = m - M\n        else:\n            hours -= 1\n            minutes = 60 - M + m\n        if hours < 0:\n            hours = 23\n        L.append([hours, minutes])\n    mnh = 30\n    mnm = 100\n    for i in range(len(L)):\n        if mnh > L[i][0]:\n            mnh = L[i][0]\n            mnm = L[i][1]\n        elif mnh == L[i][0]:\n            if mnm > L[i][1]:\n                mnm = L[i][1]\n    print(mnh, mnm)", "a = int(input())\nfor i in range(a):\n    (b, c, d) = map(int, input().split())\n    e = c * 60 + d\n    arr = []\n    for j in range(b):\n        (h, m) = map(int, input().split())\n        h = h * 60 + m\n        arr.append(h)\n    arr.sort()\n    found = False\n    t = 0\n    for num in arr:\n        if num >= e:\n            t = num\n            found = True\n            break\n    if found:\n        f = t - e\n        print(f // 60, f % 60)\n    else:\n        f = min(arr) - e + 24 * 60\n        print(f // 60, f % 60)", "for _ in range(int(input())):\n    [n, H, M] = list(map(int, input().split()))\n    C_H = []\n    C_M = []\n    clocks = []\n    for i in range(n):\n        [h, m] = list(map(int, input().split()))\n        clocks.append([h, m])\n        if h == H and m >= M:\n            C_H.append(0)\n            C_M.append(m - M)\n        elif h == H and m < M:\n            C_H.append(24)\n            C_M.append(m - M)\n        elif h > H:\n            C_H.append(h - H)\n            C_M.append(m - M)\n        else:\n            C_H.append(24 + h - H)\n            C_M.append(m - M)\n    d = []\n    for i in range(n):\n        x = 60 * C_H[i] + C_M[i]\n        d.append(x)\n    k = min(d) // 60\n    l = min(d) - k * 60\n    print(*[k, l])", "for _ in range(int(input())):\n    (n, h, m) = map(int, input().split())\n    s = h * 60 + m\n    lis = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        r = a * 60 + b - s\n        if r < 0:\n            r = 24 * 60 + r\n        lis.append(r)\n    print(min(lis) // 60, min(lis) % 60)", "def sol(H, M, hm):\n    min_diff = 60 * 24\n    for (h, m) in hm:\n        diff_h = h - H\n        diff_m = m - M\n        if diff_m < 0:\n            diff_m += 60\n            diff_h -= 1\n        if diff_h < 0:\n            diff_h += 24\n        diff = 60 * diff_h + diff_m\n        min_diff = min(diff, min_diff)\n    res_h = min_diff // 60\n    res_m = min_diff % 60\n    print(res_h, res_m)\nt = int(input())\nfor _ in range(t):\n    (n, H, M) = [int(v) for v in input().split()]\n    hm = [[int(v) for v in input().split()] for _ in range(n)]\n    sol(H, M, hm)", "t = int(input())\nwhile t:\n    (n, H, M) = list(map(int, input().split()))\n    alarms = []\n    for _ in range(n):\n        alarms.append(list(map(int, input().split())))\n    if [H, M] not in alarms:\n        sleep = []\n        for alarm in alarms:\n            n_mins = 0\n            n_hours = 0\n            if M != alarm[1]:\n                if M > alarm[1]:\n                    n_mins = 60 - M + alarm[1]\n                    if H != alarm[0]:\n                        n_hours = -1\n                    else:\n                        n_hours = 23\n                else:\n                    n_mins = alarm[1] - M\n            if H > alarm[0]:\n                n_hours = n_hours + (24 - H) + alarm[0]\n            else:\n                n_hours = n_hours + alarm[0] - H\n            sleep.append([n_hours, n_mins])\n        sleep.sort()\n        print(f'{sleep[0][0]} {sleep[0][1]}')\n    else:\n        print('0 0')\n    t = t - 1", "import sys\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_array():\n    return list(map(int, sys.stdin.readline().rstrip().split()))\n\ndef get_vars():\n    return map(int, sys.stdin.readline().split())\n\ndef get_num():\n    return int(sys.stdin.readline())\ntests = get_num()\nfor test in range(tests):\n    (n, h, m) = get_vars()\n    comb = []\n    for i in range(n):\n        (hours, mins) = get_vars()\n        comb.append([hours, mins])\n    comb.append([h, m])\n    comb.sort(key=lambda x: (x[0], x[1]))\n    i = 0\n    while comb[i][0] != h or comb[i][1] != m:\n        i += 1\n    if i <= n - 1:\n        next = comb[i + 1]\n        curr = comb[i]\n        if next[0] == curr[0]:\n            print(0, next[1] - curr[1])\n        else:\n            x = 0\n            x = 60 * (next[0] - curr[0]) + next[1] - curr[1]\n            res_h = 0\n            res_m = 0\n            res_h = x // 60\n            res_m = x % 60\n            print(res_h, res_m)\n    else:\n        next = comb[0]\n        curr = comb[-1]\n        left_l = 60 * (24 - curr[0]) - curr[1]\n        left_s = 60 * next[0] + next[1]\n        x = left_l + left_s\n        res_h = x // 60\n        res_m = x % 60\n        print(res_h, res_m)", "for i in range(int(input())):\n    a = list(map(int, input().split()))\n    c = a[1] * 60 + a[-1]\n    f = []\n    for j in range(a[0]):\n        b = list(map(int, input().split()))\n        d = b[0] * 60 + b[-1]\n        if d >= c:\n            f.append(d - c)\n        elif d < c:\n            f.append(24 * 60 - c + d)\n    print(min(f) // 60, min(f) % 60)", "def sub(s, a):\n    if a[1] >= s[1]:\n        mins = a[1] - s[1]\n    else:\n        a[1] += 60\n        a[0] -= 1\n        mins = a[1] - s[1]\n    if a[0] >= s[0]:\n        hours = a[0] - s[0]\n    else:\n        hours = 24 - s[0]\n        hours = a[0] + hours\n    return [hours, mins]\nt = int(input())\nfor i in range(t):\n    (n, H, M) = map(int, input().split())\n    alarms = []\n    for k in range(n):\n        (h, m) = map(int, input().split())\n        alarms.append([h, m])\n    minTimeuu = 999999999999\n    minArr = []\n    for i in alarms:\n        sleepTime = sub([H, M], i)\n        minsTime = sleepTime[0] * 60 + sleepTime[1]\n        if minsTime < minTimeuu:\n            minTimeuu = minsTime\n            minArr = sleepTime\n    print(str(minArr[0]) + ' ' + str(minArr[1]))", "for _ in range(int(input())):\n    (n, h, m) = map(int, input().split())\n    ct = h * 60 + m\n    delta = float('inf')\n    for _ in range(n):\n        (h, m) = map(int, input().split())\n        ctd = h * 60 + m\n        if ctd >= ct:\n            delta = min(delta, ctd - ct)\n        else:\n            delta = min(delta, 24 * 60 + ctd - ct)\n    print(delta // 60, delta % 60)", "def solve():\n    (n, h, m) = map(int, input().split())\n    count = []\n    for i in range(n):\n        (h1, m1) = map(int, input().split())\n        if h == h1 and m == m1:\n            count.append(0)\n        else:\n            t1 = h * 60 + m\n            t2 = h1 * 60 + m1\n            if t2 > t1:\n                count.append(t2 - t1)\n            else:\n                t = 1440 - t1 + t2\n                count.append(t)\n    c = min(count)\n    h = int(c / 60)\n    m = c % 60\n    print(str(h) + ' ' + str(m))\nt = int(input())\nfor i in range(t):\n    solve()", "def Solve():\n    for t in range(int(input())):\n        (n, H, M) = map(int, input().split())\n        s = H * 60 + M\n        times = []\n        for _ in range(n):\n            (h, m) = map(int, input().split())\n            times.append(h * 60 + m)\n        if s in times:\n            print(0, 0)\n        else:\n            times.append(s)\n            times.sort()\n            if times[-1] == s:\n                i = times[0]\n                sleep = 24 * 60 - s + i\n                print(sleep // 60, sleep % 60)\n            else:\n                i = times[times.index(s) + 1]\n                sleep = i - s\n                print(sleep // 60, sleep % 60)\nSolve()", "t = int(input())\nfor _ in range(t):\n    (n, H, M) = [int(x) for x in input().split()]\n    times = []\n    for _ in range(n):\n        times.append([int(x) for x in input().split()])\n    times.sort()\n    i = 0\n    while i < n:\n        if H < times[i][0]:\n            break\n        if H == times[i][0] and M <= times[i][1]:\n            break\n        i += 1\n    if i == n:\n        a = 0\n        b = 0\n        if M == 0:\n            a = 0\n            b = 24 - H\n        else:\n            a = 60 - M\n            b = 24 - H - 1\n        a += times[0][1]\n        b += times[0][0]\n        extra_hour = a // 60\n        a = a % 60\n        b += extra_hour\n        print(str(b) + ' ' + str(a))\n    elif H == times[i][0]:\n        print('0 ', str(times[i][1] - M))\n    else:\n        a = times[i][1] - M\n        if a < 0:\n            a += 60\n            H += 1\n        b = times[i][0] - H\n        print(str(b) + ' ' + str(a))", "t = int(input())\nfor eh in range(t):\n    (n, hh, mm) = list(map(int, input().split(' ')))\n    cur = hh * 60 + mm\n    ans = []\n    for i in range(n):\n        (h, m) = list(map(int, input().split(' ')))\n        val = h * 60 + m - cur\n        if val < 0:\n            val += 24 * 60\n        ans += [val]\n    yes = min(ans)\n    print(yes // 60, yes % 60)", "t = int(input())\nfor i in range(t):\n    (n, H, M) = map(int, input().split())\n    X = H * 60 + M\n    mini = 10 ** 18\n    for j in range(n):\n        (h, m) = map(int, input().split())\n        x = h * 60 + m\n        if x < X:\n            x = 24 * 60 - X + x\n        else:\n            x = x - X\n        if x < mini:\n            mini = x\n    print(mini // 60, mini % 60)", "t = int(input())\nfor i in range(t):\n    (n, sleeph, sleepm) = list(map(int, input().split()))\n    (mini_timeh, minitimem) = (0, 0)\n    ans = float('inf')\n    for i in range(n):\n        (alarmh, alarmm) = list(map(int, input().split()))\n        if alarmh < sleeph:\n            alarmh += 24\n        if alarmh == sleeph:\n            if alarmm < sleepm:\n                alarmh += 24\n        currenth = alarmh - sleeph\n        currentm = alarmm - sleepm\n        if currentm < 0:\n            currenth -= 1\n            currentm = 60 + currentm\n        if currenth * 60 + currentm < ans:\n            ans = currenth * 60 + currentm\n            (mini_timeh, minitimem) = (currenth, currentm)\n    print(mini_timeh, minitimem)", "import math\n\ndef func(sleep_time, alarms):\n    wake_time = [24, 60]\n    for alarm in alarms:\n        hrs = alarm[0] - sleep_time[0]\n        min = alarm[1] - sleep_time[1]\n        if min < 0:\n            min = 60 + min\n            hrs -= 1\n        if hrs < 0:\n            hrs += 24\n        if wake_time[0] > hrs:\n            wake_time[0] = hrs\n            wake_time[1] = min\n        elif wake_time[0] == hrs:\n            if wake_time[1] > min:\n                wake_time[0] = hrs\n                wake_time[1] = min\n    return wake_time\nt = int(input())\nwhile t:\n    (n, H, M) = list(map(int, input('').split()))\n    alarms = []\n    for i in range(n):\n        alarm = list(map(int, input('').split()))\n        alarms.append(alarm)\n    (hours, minutes) = func([H, M], alarms)\n    print(hours, minutes)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (n, H, M) = map(int, input().split())\n    arr = []\n    num_sleep = 60 * H + M\n    min_time = 10 ** 9\n    for j in range(n):\n        (h, m) = map(int, input().split())\n        num_bud = 60 * h + m\n        if num_bud - num_sleep < 0:\n            count = 24 * 60 - (num_sleep - num_bud)\n        else:\n            count = num_bud - num_sleep\n        min_time = min(min_time, count)\n    min_h = min_time // 60\n    min_m = min_time - min_h * 60\n    print(min_h, min_m)", "for i in range(int(input())):\n    (n, h, m) = map(int, input().split())\n    total = h * 60 + m\n    l = []\n    for i in range(n):\n        l.append(list(map(int, input().split())))\n    l1 = []\n    j = 0\n    for i in l:\n        time = i[0] * 60 + i[1]\n        if total <= time:\n            l1.append(time - total)\n        else:\n            l1.append(24 * 60 - total + time)\n    m = min(l1)\n    print(m // 60, m % 60)", "import math\nfor i in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    k = b * 60 + c\n    h = []\n    m = []\n    for i in range(a):\n        (z, x) = map(int, input().split())\n        h.append(z)\n        m.append(x)\n    O = 1440\n    for i in range(a):\n        H = h[i] * 60 + m[i]\n        if H < k:\n            f = 1440 - k + H\n            if f < O:\n                O = f\n        else:\n            f = H - k\n            if f < O:\n                O = f\n    B = math.floor(O / 60)\n    C = O % 60\n    print(B, C)", "for _ in range(int(input())):\n    l = []\n    (n, hour, minn) = map(int, input().split())\n    for i in range(n):\n        l.append([int(x) for x in input().split()])\n    l.sort()\n    (h, m) = (l[0][0], l[0][1])\n    l.append([23, 59])\n    flag = False\n    for i in range(n + 1):\n        h = l[i][0]\n        m = l[i][1]\n        if hour == h and minn <= m or hour < h:\n            ansh = h - hour\n            if minn > m:\n                ansm = 60 - (minn - m)\n                ansh -= 1\n            else:\n                ansm = m - minn\n            break\n    if i < n:\n        print(ansh, ansm)\n    else:\n        h = 23\n        m = 60\n        if hour == h and minn <= m or hour < h:\n            ansh = h - hour\n            if minn > m:\n                ansm = 60 - (minn - m)\n                ansh -= 1\n            else:\n                ansm = m - minn\n        ansh = ansh + l[0][0]\n        ansm = ansm + l[0][1]\n        ansh = ansh + ansm // 60\n        ansm = ansm % 60\n        print(ansh, ansm)", "t = int(input())\nfor _ in range(t):\n    (n, h, m) = map(int, input().split())\n    m += h * 60\n    a = [0] * n\n    for i in range(n):\n        (h1, m1) = map(int, input().split())\n        m1 += h1 * 60\n        if m1 >= m:\n            a[i] = m1 - m\n        else:\n            a[i] = m1 + (1440 - m)\n    m1 = min(a)\n    print(m1 // 60, m1 % 60)", "t = input()\nans = []\nfor i in range(int(t)):\n    (n, H, M) = list(map(int, input().split()))\n    ref_minutes = H * 60 + M\n    arr = []\n    for j in range(n):\n        (h, m) = list(map(int, input().split()))\n        minutes = h * 60 + m\n        arr.append(minutes)\n    arr.sort()\n    arr += [24 * 60 + x for x in arr]\n    arr_today = []\n    for j in range(0, 2 * n):\n        if arr[j] >= ref_minutes:\n            arr_today.append(arr[j])\n    sleep = arr_today[0] - ref_minutes\n    sleep_hour = sleep // 60 % 24\n    sleep_min = sleep % 60\n    print(sleep_hour, sleep_min)", "t = int(input())\nfor _ in range(0, t):\n    inputs = [int(num) for num in input().split()]\n    n = inputs[0]\n    h = inputs[1]\n    m = inputs[2]\n    if h == 0:\n        h = 24\n    if m == 0:\n        m = 60\n        h = h - 1\n    minh = 25\n    minm = 61\n    diffm = 24 * 60 + 10\n    mins1 = h * 60 + m\n    for i in range(0, n):\n        inputs1 = [int(num) for num in input().split()]\n        hi = inputs1[0]\n        mi = inputs1[1]\n        if hi == 0:\n            hi = 24\n        if mi == 0:\n            mi = 60\n            hi = hi - 1\n        mins2 = hi * 60 + mi\n        if mins2 >= mins1:\n            diff = mins2 - mins1\n        else:\n            diff = 24 * 60 - mins1 + mins2\n        if diff < diffm:\n            diffm = diff\n    hreq = diffm // 60\n    mreq = diffm % 60\n    print(f'{hreq} {mreq}')", "t = int(input())\nfor i in range(t):\n    (n, hs, ms) = map(int, input().split())\n    slp = hs * 60 + ms\n    mn = 23 * 60 + 59\n    for j in range(n):\n        (h, m) = map(int, input().split())\n        wkp = h * 60 + m\n        if slp <= wkp:\n            mn = min(mn, wkp - slp)\n        else:\n            mn = min(mn, 24 * 60 - slp + wkp)\n    print(mn // 60, mn % 60)", "tc = int(input())\nwhile tc > 0:\n    tc -= 1\n    time1 = list()\n    (n, H, M) = map(int, input().split())\n    N = n\n    while n > 0:\n        n -= 1\n        (h, m) = map(int, input().split())\n        t = h * 60 + m\n        time1.append(t)\n    my = H * 60 + M\n    ans = 10000\n    for i in range(N):\n        aaa = time1[i]\n        if my > aaa:\n            temp = 1440 - my + aaa\n            if temp < ans:\n                ans = temp\n        else:\n            temp = aaa - my\n            if temp <= ans:\n                ans = temp\n    (xx, yy) = (ans // 60, ans % 60)\n    print(xx, yy)", "def fun():\n    t = int(input())\n    while t:\n        (n, H, M) = [int(i) for i in input().split()]\n        gvn = H * 60 + M\n        mni = 60000\n        while n:\n            (hi, mi) = [int(i) for i in input().split()]\n            mn = hi * 60 + mi\n            if mn - gvn >= 0:\n                mni = min(mn - gvn, mni)\n            elif mn - gvn < 0:\n                mni = min(mn - gvn + 1440, mni)\n            n -= 1\n        print(mni // 60, mni % 60)\n        t -= 1\nfun()", "t = int(input())\nfor i in range(t):\n    (n, H, M) = map(int, input().split())\n    arr = [[*map(int, input().split())] for _ in range(n)]\n    (hour, minuts) = (float('inf'), float('inf'))\n    for x in arr:\n        if x[0] < H or (x[0] == H and x[1] < M):\n            if M > 0:\n                (t1, t2) = (23 - H + x[0], 60 - M + x[1])\n            else:\n                (t1, t2) = (24 - H + x[0], x[1])\n            if t2 >= 60:\n                t1 += 1\n                t2 = t2 - 60\n            if hour > t1:\n                hour = t1\n                minuts = t2\n            if hour == t1:\n                if minuts > t2:\n                    minuts = t2\n        else:\n            (t1, t2) = (x[0] - H, x[1] - M)\n            if t2 < 0:\n                t1 -= 1\n                t2 = 60 + t2\n            if hour > t1:\n                hour = t1\n                minuts = t2\n            if hour == t1:\n                if minuts > t2:\n                    minuts = t2\n    print(hour, minuts)", "for _ in range(int(input())):\n    (n, H, M) = map(int, input().split())\n    s = set()\n    for _ in range(n):\n        (h, m) = map(int, input().split())\n        s.add((h, m))\n    a = (H * 60 + M) % 1439\n    b = a\n    while True:\n        if (a // 60, a % 60) in s:\n            print((a - b) // 60 if (a - b) // 60 >= 0 else 24 + (a - b) // 60, (a - b) % 60)\n            break\n        else:\n            a += 1\n            if a == 1440:\n                a = 0", "R = lambda : map(int, input().split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n, h, m) = R()\n    r = 2000.0\n    for _ in [0] * n:\n        (x, y) = R()\n        r = min(r, (60 * (x - h) + y - m) % 1440)\n    print(r // 60 % 24, r % 60)", "for _ in range(int(input())):\n    (n, H, M) = map(int, input().split())\n    T = H * 60 + M\n    res = float('inf')\n    for i in range(n):\n        (h, m) = map(int, input().split())\n        t = h * 60 + m\n        if t >= T:\n            res = min(res, t - T)\n        else:\n            res = min(res, 24 * 60 - T + t)\n    print(res // 60, res % 60)", "t = int(input())\nfor i in range(t):\n    (n, h, m) = map(int, input().split())\n    a = []\n    for j in range(n):\n        (h1, m1) = map(int, input().split())\n        a.append((h1, m1))\n    result = []\n    for k in range(n):\n        m2 = a[k][1]\n        h2 = a[k][0]\n        h_temp = h\n        if m2 >= m:\n            m2 -= m\n        else:\n            m2 += 60\n            m2 -= m\n            h_temp += 1\n        if h2 >= h_temp:\n            h2 -= h_temp\n        else:\n            h2 += 24\n            h2 -= h_temp\n        result.append((h2, m2))\n    m = min(result)\n    print(m[0], m[1])", "a = int(input())\nb = []\nc = []\nfor i in range(a):\n    b.append(list(map(int, input().split())))\n    c.append([])\n    for j in range(b[i][0]):\n        c[i].append(list(map(int, input().split())))\nd = []\nfor s in b:\n    d.append(s[1] * 60 + s[2])\nfor e in range(len(c)):\n    for f in range(len(c[e])):\n        h = c[e][f][0] * 60 + c[e][f][1]\n        c[e][f] = []\n        c[e][f].append(h)\nfor e in range(len(c)):\n    for f in range(len(c[e])):\n        c[e][f] = c[e][f][0]\nk = []\nfor e in range(len(c)):\n    if max(c[e]) >= d[e]:\n        while min(c[e]) < d[e]:\n            for l in c[e]:\n                if l < d[e]:\n                    c[e].remove(l)\nfor m in range(len(c)):\n    if min(c[m]) >= d[m]:\n        print(abs(min(c[m]) - d[m]) // 60, abs(min(c[m]) - d[m]) % 60)\n    elif min(c[m]) < d[m]:\n        print((1440 - d[m] + min(c[m])) // 60, (1440 - d[m] + min(c[m])) % 60)"]