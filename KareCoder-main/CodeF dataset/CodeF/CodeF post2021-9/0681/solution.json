["import sys, itertools, bisect\ninput = sys.stdin.readline\n(n, m, q) = [*map(int, input().split())]\na = [*map(int, input().split())]\nb = [*map(int, input().split())]\nqry = [*map(int, input().split())]\ns = sorted([(i, 1) for i in a] + [(i, 0) for i in b], reverse=True)\nac = [0] + list(itertools.accumulate((i[0] for i in s)))\ng = sorted(((s[i][0] - s[i + 1][0], i) for i in range(m + n - 1)))\nd = [(1, i, i) if s[i][1] else (0, i, i) for i in range(m + n)]\ntotal = sum(a)\n(r, ans) = ([], [])\nlastgap = 0\nfor (gap, pos) in g:\n    if lastgap != gap:\n        r.append(lastgap)\n        ans.append(str(total))\n    lastgap = gap\n    start = d[pos][1]\n    nextpos = d[pos][2] + 1\n    nextnum = d[nextpos][0]\n    total += ac[start + d[pos][0] + nextnum] - ac[start + d[pos][0]] - (ac[nextpos + nextnum] - ac[nextpos])\n    d[start] = d[d[nextpos][2]] = (d[pos][0] + nextnum, start, d[nextpos][2])\nr.append(lastgap)\nans.append(str(total))\nprint('\\n'.join((ans[bisect.bisect_right(r, i) - 1] for i in qry)))", "import sys, itertools, bisect\ninput = sys.stdin.readline\n(n, m, q) = [*map(int, input().split())]\na = [*map(int, input().split())]\nb = [*map(int, input().split())]\nqry = [*map(int, input().split())]\ns = sorted([(i, 1) for i in a] + [(i, 0) for i in b], reverse=True)\nac = [0] + list(itertools.accumulate((i[0] for i in s)))\ng = sorted(((s[i][0] - s[i + 1][0], i) for i in range(m + n - 1)))\nd = [(1, i, i) if s[i][1] else (0, i, i) for i in range(m + n)]\ntotal = sum(a)\n(r, ans) = ([], [])\nlastgap = 0\nfor (gap, pos) in g:\n    if lastgap != gap:\n        r.append(lastgap)\n        ans.append(str(total))\n    lastgap = gap\n    start = d[pos][1]\n    nextpos = d[pos][2] + 1\n    nextnum = d[nextpos][0]\n    total += ac[start + d[pos][0] + nextnum] - ac[start + d[pos][0]] - (ac[nextpos + nextnum] - ac[nextpos])\n    d[start] = d[d[nextpos][2]] = (d[pos][0] + nextnum, start, d[nextpos][2])\nr.append(lastgap)\nans.append(str(total))\nprint('\\n'.join((ans[bisect.bisect_right(r, i) - 1] for i in qry)))", "import sys, itertools, bisect\ninput = sys.stdin.readline\n(n, m, q) = [*map(int, input().split())]\na = [*map(int, input().split())]\nb = [*map(int, input().split())]\nqry = [*map(int, input().split())]\ns = sorted([(i, 1) for i in a] + [(i, 0) for i in b], reverse=True)\nac = [0] + list(itertools.accumulate((i[0] for i in s)))\ng = sorted(((s[i][0] - s[i + 1][0], i) for i in range(m + n - 1)))\nd = [(1, i, i) if s[i][1] else (0, i, i) for i in range(m + n)]\ntotal = sum(a)\n(r, ans) = ([], [])\nlastgap = 0\nfor (gap, pos) in g:\n    if lastgap != gap:\n        r.append(lastgap)\n        ans.append(str(total))\n    lastgap = gap\n    start = d[pos][1]\n    nextpos = d[pos][2] + 1\n    nextnum = d[nextpos][0]\n    total += ac[start + d[pos][0] + nextnum] - ac[start + d[pos][0]] - (ac[nextpos + nextnum] - ac[nextpos])\n    d[start] = d[d[nextpos][2]] = (d[pos][0] + nextnum, start, d[nextpos][2])\nr.append(lastgap)\nans.append(str(total))\nprint('\\n'.join((ans[bisect.bisect_right(r, i) - 1] for i in qry)))", "import sys, itertools, bisect\ninput = sys.stdin.readline\n(n, m, q) = [*map(int, input().split())]\na = [*map(int, input().split())]\nb = [*map(int, input().split())]\nqry = [*map(int, input().split())]\ns = sorted([(i, 1) for i in a] + [(i, 0) for i in b], reverse=True)\nac = [0] + list(itertools.accumulate((i[0] for i in s)))\ng = sorted(((s[i][0] - s[i + 1][0], i) for i in range(m + n - 1)))\nd = [(1, i, i) if s[i][1] else (0, i, i) for i in range(m + n)]\ntotal = sum(a)\n(r, ans) = ([], [])\nlastgap = 0\nfor (gap, pos) in g:\n    if lastgap != gap:\n        r.append(lastgap)\n        ans.append(str(total))\n    lastgap = gap\n    start = d[pos][1]\n    nextpos = d[pos][2] + 1\n    nextnum = d[nextpos][0]\n    total += ac[start + d[pos][0] + nextnum] - ac[start + d[pos][0]] - (ac[nextpos + nextnum] - ac[nextpos])\n    d[start] = d[d[nextpos][2]] = (d[pos][0] + nextnum, start, d[nextpos][2])\nr.append(lastgap)\nans.append(str(total))\nprint('\\n'.join((ans[bisect.bisect_right(r, i) - 1] for i in qry)))", "import sys, itertools, bisect\ninput = sys.stdin.readline\n(n, m, q) = [*map(int, input().split())]\na = [*map(int, input().split())]\nb = [*map(int, input().split())]\nqry = [*map(int, input().split())]\ns = sorted([(i, 1) for i in a] + [(i, 0) for i in b], reverse=True)\nac = [0] + list(itertools.accumulate((i[0] for i in s)))\ng = sorted(((s[i][0] - s[i + 1][0], i) for i in range(m + n - 1)))\nd = [(1, i, i) if s[i][1] else (0, i, i) for i in range(m + n)]\ntotal = sum(a)\n(r, ans) = ([], [])\nlastgap = 0\nfor (gap, pos) in g:\n    if lastgap != gap:\n        r.append(lastgap)\n        ans.append(str(total))\n    lastgap = gap\n    start = d[pos][1]\n    nextpos = d[pos][2] + 1\n    nextnum = d[nextpos][0]\n    total += ac[start + d[pos][0] + nextnum] - ac[start + d[pos][0]] - (ac[nextpos + nextnum] - ac[nextpos])\n    d[start] = d[d[nextpos][2]] = (d[pos][0] + nextnum, start, d[nextpos][2])\nr.append(lastgap)\nans.append(str(total))\nprint('\\n'.join((ans[bisect.bisect_right(r, i) - 1] for i in qry)))", "import sys, itertools, bisect\ninput = sys.stdin.readline\n(n, m, q) = [*map(int, input().split())]\na = [*map(int, input().split())]\nb = [*map(int, input().split())]\nqry = [*map(int, input().split())]\ns = sorted([(i, 1) for i in a] + [(i, 0) for i in b], reverse=True)\nac = [0] + list(itertools.accumulate((i[0] for i in s)))\ng = sorted(((s[i][0] - s[i + 1][0], i) for i in range(m + n - 1)))\nd = [(1, i, i) if s[i][1] else (0, i, i) for i in range(m + n)]\ntotal = sum(a)\n(r, ans) = ([], [])\nlastgap = 0\nfor (gap, pos) in g:\n    if lastgap != gap:\n        r.append(lastgap)\n        ans.append(str(total))\n    lastgap = gap\n    start = d[pos][1]\n    nextpos = d[pos][2] + 1\n    nextnum = d[nextpos][0]\n    total += ac[start + d[pos][0] + nextnum] - ac[start + d[pos][0]] - (ac[nextpos + nextnum] - ac[nextpos])\n    d[start] = d[d[nextpos][2]] = (d[pos][0] + nextnum, start, d[nextpos][2])\nr.append(lastgap)\nans.append(str(total))\nprint('\\n'.join((ans[bisect.bisect_right(r, i) - 1] for i in qry)))", "import sys, itertools, bisect\ninput = sys.stdin.readline\n(n, m, q) = [*map(int, input().split())]\na = [*map(int, input().split())]\nb = [*map(int, input().split())]\nqry = [*map(int, input().split())]\ns = sorted([(i, 1) for i in a] + [(i, 0) for i in b], reverse=True)\nac = [0] + list(itertools.accumulate((i[0] for i in s)))\ng = sorted(((s[i][0] - s[i + 1][0], i) for i in range(m + n - 1)))\nd = [(1, i, i) if s[i][1] else (0, i, i) for i in range(m + n)]\ntotal = sum(a)\n(r, ans) = ([], [])\nlastgap = 0\nfor (gap, pos) in g:\n    if lastgap != gap:\n        r.append(lastgap)\n        ans.append(str(total))\n    lastgap = gap\n    start = d[pos][1]\n    nextpos = d[pos][2] + 1\n    nextnum = d[nextpos][0]\n    total += ac[start + d[pos][0] + nextnum] - ac[start + d[pos][0]] - (ac[nextpos + nextnum] - ac[nextpos])\n    d[start] = d[d[nextpos][2]] = (d[pos][0] + nextnum, start, d[nextpos][2])\nr.append(lastgap)\nans.append(str(total))\nprint('\\n'.join((ans[bisect.bisect_right(r, i) - 1] for i in qry)))", "import sys, itertools, bisect\ninput = sys.stdin.readline\n(n, m, q) = [*map(int, input().split())]\na = [*map(int, input().split())]\nb = [*map(int, input().split())]\nqry = [*map(int, input().split())]\ns = sorted([(i, 1) for i in a] + [(i, 0) for i in b], reverse=True)\nac = [0] + list(itertools.accumulate((i[0] for i in s)))\ng = sorted(((s[i][0] - s[i + 1][0], i) for i in range(m + n - 1)))\nd = [(1, i, i) if s[i][1] else (0, i, i) for i in range(m + n)]\ntotal = sum(a)\n(r, ans) = ([], [])\nlastgap = 0\nfor (gap, pos) in g:\n    if lastgap != gap:\n        r.append(lastgap)\n        ans.append(str(total))\n    lastgap = gap\n    start = d[pos][1]\n    nextpos = d[pos][2] + 1\n    nextnum = d[nextpos][0]\n    total += ac[start + d[pos][0] + nextnum] - ac[start + d[pos][0]] - (ac[nextpos + nextnum] - ac[nextpos])\n    d[start] = d[d[nextpos][2]] = (d[pos][0] + nextnum, start, d[nextpos][2])\nr.append(lastgap)\nans.append(str(total))\nprint('\\n'.join((ans[bisect.bisect_right(r, i) - 1] for i in qry)))"]