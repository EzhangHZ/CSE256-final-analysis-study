["import sys\nrd = sys.stdin.readline\nfor _ in range(int(rd())):\n    n = int(rd())\n    a = list(map(int, rd().split()))\n    b = sorted(a[1:])\n    ans = a[0]\n    for i in b:\n        if i > ans:\n            ans = (ans + i + 1) // 2\n    print(ans)", "import sys\nfrom os import path, chdir\n\ndef input():\n    return sys.stdin.readline().strip()\n\ndef solve(n, a):\n    if max(a) == a[0]:\n        print(a[0])\n        return\n    t = a[0]\n    s = sorted(a[1:])\n    for e in s:\n        if e > t:\n            d = (1 + e - t) // 2\n            t += d\n    print(t)\n\ndef main():\n    testcases = int(input())\n    for _ in range(testcases):\n        n = int(input())\n        array = list(map(int, input().split()))\n        solve(n, array)\nmain()", "import sys, math, heapq, bisect, random, itertools\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 5)\nints = lambda : list(map(int, input().split()))\np = 10 ** 9 + 7\ninf = 10 ** 20 + 7\nalpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nfor t in range(int(input())):\n    n = int(input())\n    a = ints()\n    x = a[0]\n    b = sorted(a[1:])\n    for i in b:\n        if i > x:\n            c = i - x\n            x += (c + 1) // 2\n    print(x)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (N, A) = (int(input()), list(map(int, input().split())))\n    B = A[1:]\n    B.sort()\n    ans = A[0]\n    for i in B:\n        if ans < i:\n            ans = (ans + i + 1) // 2\n    print(ans)", "import sys\nimport heapq, bisect, math\nfrom collections import Counter, defaultdict, OrderedDict, deque\nfrom itertools import permutations, combinations\nfrom functools import lru_cache\nimport math\ninput = lambda : sys.stdin.readline().rstrip()\nii = lambda : int(input())\nmi = lambda : map(int, input().split())\nli = lambda : list(mi())\ninf = 2 ** 63 - 1\nmod = 10 ** 9 + 7\nX = [0, 1, 0, -1, -1, 1, -1, 1]\nY = [1, 0, -1, 0, -1, 1, 1, -1]\n\ndef euclidean_algorithm(a, b):\n    while b != 0:\n        r = a % b\n        a = b\n        b = r\n    return a\n\ndef solve():\n    n = ii()\n    l = li()\n    out = l[0]\n    l = l[1:]\n    l.sort()\n    l = [out] + l\n    for i in range(1, n):\n        if out < l[i]:\n            out += (l[i] - out + 1) // 2\n    print(out)\nfor _ in range(ii()):\n    solve()", "import math\n\ndef f():\n    lst = []\n    for j in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        temp = sorted(a[1:n])\n        for i in temp:\n            if i > a[0]:\n                a[0] += (i - a[0] + 1) // 2\n        lst.append(a[0])\n    print(*lst, sep='\\n')\nf()", "import sys\ninput = sys.stdin.readline\n\ndef readList():\n    return list(map(int, input().split()))\n\ndef readInt():\n    return int(input())\n\ndef readInts():\n    return map(int, input().split())\n\ndef readStr():\n    return input().strip()\n\ndef solve():\n    n = readInt()\n    arr = readList()\n    curr = arr[0]\n    arr = [arr[0]] + sorted(arr[1:])\n    for i in range(1, n):\n        if curr < arr[i]:\n            curr = (curr + arr[i] + 1) // 2\n    return curr\nfor _ in range(int(input())):\n    print(solve())", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    n = int(inp())\n    a = list(map(int, inp().split()))\n    first = a.pop(0)\n    a.sort()\n    for v in a:\n        if v > first:\n            x = (v - first - 1) // 2\n            if x > 0:\n                v -= x\n                first += x\n            if v > first:\n                v -= 1\n                first += 1\n    print(first)\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "def main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    one = arr[0]\n    arr.pop(0)\n    curr = one\n    arr.sort()\n    for (i, z) in enumerate(arr):\n        if z > curr:\n            diff = z - curr\n            curr += (diff + 1) // 2\n    return curr\nfor _ in range(int(input())):\n    print(main())", "import math\nimport sys\ninput = sys.stdin.readline\n\ndef problem_b():\n    n = int(input())\n    a = list(map(int, input().split()))\n    val = a[0]\n    a = a[1:]\n    a.sort()\n    for j in range(n - 1):\n        if a[j] > val:\n            diff = (a[j] - val) // 2\n            if (a[j] - val) % 2 == 1:\n                val += 1\n            val += diff\n    return val\n\ndef main():\n    for _ in range(int(input())):\n        rez = problem_b()\n        print(rez)\nmain()", "import sys\ninput = sys.stdin.readline\nT = int(input())\nfor _ in range(T):\n    input()\n    a = list(map(int, input().split()))\n    t1 = a[0]\n    del a[0]\n    a.sort()\n    for i in a:\n        if i <= t1:\n            continue\n        t1 = t1 + i - (t1 + i) // 2\n    print(t1)", "from math import ceil\nimport sys\ninput = sys.stdin.readline\ninp = sys.stdin.readline\n\ndef input():\n    return inp().strip()\n\ndef ii():\n    return int(input())\n\ndef mi():\n    return map(int, input().split())\n\ndef li():\n    return list(map(int, input().split()))\n\ndef solve():\n    n = ii()\n    arr = li()\n    first = arr[0]\n    na = []\n    prev = first\n    for i in arr[1:]:\n        if prev < i:\n            na.append(i)\n    na.sort()\n    na = [first] + na\n    for i in na:\n        if na[0] < i:\n            na[0] += (i - na[0] + 1) // 2\n    print(na[0])\n\ndef main():\n    for _ in range(ii()):\n        solve()\nmain()", "for s in [*open(0)][2::2]:\n    (b, *a) = map(int, s.split())\n    for x in sorted(a):\n        b += max(0, x - b + 1) // 2\n    print(b)", "import math\ntest = int(input())\nresult = []\nfor i in range(test):\n    input()\n    [first, *b] = list(map(int, input().split(' ')))\n    b.sort()\n    for j in b:\n        if j > first:\n            first += math.ceil((j - first) / 2)\n    result.append(first)\n[print(i) for i in result]", "for k in [*open(0)][2::2]:\n    (b, *a) = map(int, k.split())\n    for x in sorted(a):\n        b += max(0, x - b + 1) // 2\n    print(b)", "for s in [*open(0)][2::2]:\n    (b, *a) = map(int, s.split())\n    for x in sorted(a):\n        b += max(0, x - b + 1) // 2\n    print(b)", "t = int(input())\nresult = []\nfor i in range(t):\n    n = int(input())\n    ai = list(map(int, input().split(' ')))\n    nb = ai[0]\n    si = ai[1:]\n    si.sort()\n    for j in range(n - 1):\n        if si[j] > nb:\n            bl = si[j] - (nb + si[j]) // 2\n            nb += bl\n    result.append(nb)\nfor i in result:\n    print(i)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = a[0]\n    a = sorted(a[1:])\n    for y in a:\n        if y > x:\n            x += (y - x + 1) // 2\n    print(x)", "import math\nT = int(input())\noutput = []\nwhile T > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    a1 = a[0]\n    a = sorted(a)\n    index = a.index(a1)\n    b = a[index + 1:len(a)]\n    for x in b:\n        a1 = math.ceil((a1 + x) / 2)\n    output.append(a1)\n    T -= 1\nfor i in output:\n    print(i)", "t = int(input())\n\ndef quick_sort(array, left, right):\n    if left >= right:\n        return\n    low = left\n    high = right\n    key = array[low]\n    while left < right:\n        while left < right and array[right] > key:\n            right -= 1\n        array[left] = array[right]\n        while left < right and array[left] <= key:\n            left += 1\n        array[right] = array[left]\n    array[right] = key\n    quick_sort(array, low, left - 1)\n    quick_sort(array, left + 1, high)\n\ndef run():\n    n = int(input())\n    lst = list(map(int, input().split()))\n    mid = lst.pop(0)\n    lst.sort()\n    for i in lst:\n        if mid < i:\n            mid = (mid + i + 1) // 2\n    print(mid)\nwhile t:\n    t -= 1\n    run()", "import math\nimport sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = a[0]\n    a.remove(a[0])\n    a.sort()\n    for i in range(len(a)):\n        if a[i] > b:\n            b += math.ceil((a[i] - b) / 2)\n    print(b)", "for s in [*open(0)][2::2]:\n    (b, *a) = map(int, s.split())\n    for x in sorted(a):\n        b += max(0, x - b + 1) // 2\n    print(b)", "for s in [*open(0)][2::2]:\n    (b, *a) = map(int, s.split())\n    for x in sorted(a):\n        b += max(0, x - b + 1) // 2\n    print(b)", "for s in [*open(0)][2::2]:\n    (b, *a) = map(int, s.split())\n    for x in sorted(a):\n        b += max(0, x - b + 1) // 2\n    print(b)", "for _ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    vls = sorted(ar[1:])\n    v = ar[0]\n    for e in vls:\n        if e > v:\n            sm = (e + v + 1) // 2\n            v = sm\n    print(v)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    curr = arr[0]\n    arr.pop(0)\n    arr.sort()\n    for i in arr:\n        if i > curr:\n            curr = (curr + i + 1) // 2\n    print(curr)", "import sys\ninput = sys.stdin.readline\nimport math\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    T1 = lst[0]\n    lst = lst[1:]\n    lst.sort()\n    low = 0\n    for j in range(len(lst)):\n        if lst[j] > T1:\n            low = j\n            break\n    lst = lst[low:]\n    for i in range(len(lst)):\n        if lst[i] > T1:\n            T1 = math.ceil((T1 + lst[i]) / 2)\n    print(T1)", "import math\nimport collections\nimport bisect\nimport heapq\nfrom collections import deque\nfrom math import sqrt, ceil, floor\n\ndef inp_arr():\n    return list(map(int, input().strip().split(' ')))\n\ndef inp_str_arr():\n    return list(input().strip().split(' '))\n\ndef inp_str():\n    return input()\n\ndef solve():\n    (n,) = inp_arr()\n    a = inp_arr()\n    ans = a[0]\n    b = a[1:n]\n    b.sort()\n    for i in range(0, n - 1):\n        diff = b[i] - ans\n        if diff > 0:\n            ans += (diff + 1) // 2\n    print(ans)\n(tt,) = inp_arr()\nfor t in range(tt):\n    solve()", "def solve():\n    n = int(input())\n    lis = list(map(int, input().split()))\n    ele = lis[0]\n    lis = sorted(lis[1:])\n    for i in lis:\n        if i > ele:\n            cur_val = i - ele + 1\n            cur_val //= 2\n            ele += cur_val\n    print(ele)\nfor _ in range(int(input())):\n    solve()", "def solve(xs):\n    y = next(xs)\n    for x in sorted(xs):\n        if x > y:\n            y += (x - y + 1) // 2\n    return y\nt = int(input())\nfor _ in range(t):\n    _ = input()\n    xs = map(int, input().split(' '))\n    print(solve(xs))", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    first = l[0]\n    l = sorted(l[1:])\n    for x in l:\n        if x > first:\n            first += (x - first + 1) // 2\n    print(first)", "for _ in range(int(input())):\n    input()\n    l = list(map(int, input().split()))\n    n = l[0]\n    l = sorted(l[1:])\n    for i in l:\n        if i > n:\n            n = (n + i + 1) // 2\n    print(n)", "def solve():\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    x = arr[0]\n    for i in sorted(arr[1:]):\n        if x < i:\n            x += (i - x + 1) // 2\n    print(x)\ntst = int(input())\nfor i in range(tst):\n    solve()", "def BlockTower(tower: list):\n    tower = [int(value) for value in tower]\n    sortedTowers = sorted(tower[1:])\n    for value in sortedTowers:\n        if tower[0] < value:\n            tower[0] += (value - tower[0] + 1) // 2\n    print(tower[0])\ntestcases = int(input())\ntowers = []\nfor _ in range(testcases):\n    length = int(input())\n    towers.append(input().split(' ')[:length])\nfor tower in towers:\n    BlockTower(tower)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = a[0]\n    a = sorted(a[1:])\n    for y in a:\n        if y > x:\n            x += (y - x + 1) // 2\n    print(x)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = a[0]\n    a = sorted(a[1:])\n    for y in a:\n        if y > x:\n            x += (y - x + 1) // 2\n    print(x)", "for __ in range(int(input())):\n    n = int(input())\n    (a, *b) = map(int, input().split())\n    b.sort()\n    for x in b:\n        if x > a:\n            a += (x - a + 1) // 2\n    print(a)", "for s in [*open(0)][2::2]:\n    (b, *a) = map(int, s.split())\n    for x in sorted(a):\n        b += max(0, x - b + 1) // 2\n    print(b)", "from typing import List\nfrom bisect import *\nfrom collections import *\nfrom functools import *\nfrom itertools import *\nfrom math import *\nfrom queue import PriorityQueue\nINF = 2 ** 64 - 1\nMOD = 10 ** 9 + 7\nmi = lambda : map(int, input().split())\nli = lambda : list(mi())\n\ndef main(n, nums):\n    ans = nums[0]\n    srcNum = nums[1:]\n    srcNum.sort()\n    for v in srcNum:\n        if v > ans:\n            ans = ans + (v - ans + 1) // 2\n    print(ans)\n    return\ncaseNum = int(input())\nfor i in range(0, caseNum):\n    n = int(input())\n    nums = li()\n    main(n, nums)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = a[0]\n    a = a[1:n]\n    a.sort()\n    for i in range(n - 1):\n        if a[i] > x:\n            x = (a[i] + x + 1) // 2\n    print(x)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = a[0]\n    a = a[1:n]\n    a.sort()\n    for i in range(n - 1):\n        if a[i] > x:\n            x = (a[i] + x + 1) // 2\n    print(x)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = a[0]\n    a = sorted(a[1:])\n    for y in a:\n        if y > x:\n            x += (y - x + 1) // 2\n    print(x)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = sorted(a[1:])\n    for i in b:\n        if i > a[0]:\n            a[0] = (a[0] + i + 1) // 2\n    print(a[0])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = a[0]\n    a = sorted(a[1:])\n    for i in a:\n        if ans < i:\n            ans += (i - ans + 1) // 2\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = a[0]\n    a.sort()\n    for x in a:\n        if x > ans:\n            ans += (x - ans + 1) // 2\n    print(ans)", "def f(a: list, n: int) -> list:\n    _answ = a[0]\n    a = a[1:]\n    a.sort()\n    for i in a:\n        if _answ < i:\n            _answ = (_answ + i + 1) // 2\n    return _answ\nfor _ in range(int(input())):\n    n: int = int(input())\n    a = list(map(int, input().strip().split()))\n    print(f(a, n))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    b = sorted(a)\n    s = a[0]\n    for i in range(len(b)):\n        if s < b[i]:\n            s += (b[i] - s + 1) // 2\n    print(s)", "def oi():\n    return int(input())\n\ndef ti():\n    return map(int, input().split())\n\ndef mi():\n    return list(map(int, input().split()))\n\ndef ceildiv(a, b):\n    return -(a // -b)\n\ndef solve():\n    n = oi()\n    a = mi()\n    ans = a[0]\n    a = a[1:]\n    a.sort()\n    for i in a:\n        if ans < i:\n            ans = ceildiv(ans + i, 2)\n    print(ans)\nfor _ in range(oi()):\n    solve()", "import sys\nimport math\nfrom bisect import bisect_right as br\nfrom collections import deque, Counter\nfrom itertools import combinations as cb\nfrom collections import deque\n\ndef int_arr():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef str_arr():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef input():\n    return sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    n = int(input())\n    arr = int_arr()\n    ans = arr[0]\n    arr[0] = -1\n    arr.sort()\n    i = 1\n    while i < n:\n        if ans >= arr[i]:\n            i += 1\n            continue\n        ans = math.ceil((ans + arr[i]) / 2)\n        i += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    f = nums[0]\n    nums = nums[1:]\n    nums.sort()\n    for num in nums:\n        if f < num:\n            f = (num + f + 1) // 2\n    print(f)", "from collections import defaultdict\nfrom sys import stdin, stdout\nimport string\nimport math\n\ndef solution(N, A):\n    first = A[0]\n    sorted_a = sorted(A)\n    for i in range(1, len(A)):\n        if first >= sorted_a[i]:\n            continue\n        first += math.ceil((sorted_a[i] - first) / 2)\n    return f'{first}'\ntest_cases = int(stdin.readline())\nfor it in range(test_cases):\n    N = int(stdin.readline())\n    A = list(map(int, list(stdin.readline().split())))\n    print(solution(N, A))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = list(map(int, input().split()))\n    a = s[0]\n    s_ = s[1:]\n    s_.sort()\n    for i in s_:\n        if i > a:\n            a = (a + i + 1) // 2\n    print(a)", "u = int(input())\nh1 = []\nfor tttttt in range(u):\n    i = input()\n    g = [int(a) for a in input().split()]\n    g1 = g[0]\n    g.pop(0)\n    g = sorted(g)\n    for eee in range(len(g)):\n        if g1 < g[eee]:\n            if g1 % 2 == g[eee] % 2:\n                g1 += (g[eee] - g1) // 2\n            else:\n                g1 += (g[eee] - g1) // 2 + 1\n    h1.append(g1)\n[print(ff) for ff in h1]", "import math\nb = int(input())\na = []\n\ndef ans(n, l):\n    t = l[0]\n    l = l[1:n]\n    l.sort()\n    for j in range(n - 1):\n        if t < l[j]:\n            tmp = math.ceil(float(l[j] - t) / 2)\n            t = t + tmp\n    return t\nfor i in range(b):\n    n = int(input())\n    l = list(map(int, input().strip().split()))\n    a.append(ans(n, l))\nfor x in a:\n    print(x)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = [int(i) for i in input().split()]\n    elem = lst[0]\n    lst.sort()\n    for i in lst:\n        if i > elem:\n            if (i + elem) % 2 == 0:\n                elem = (i + elem) // 2\n            else:\n                elem = (i + elem) // 2 + 1\n    print(elem)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = a[0]\n    y = sorted(a[1:])\n    for j in y:\n        if j > x:\n            x += (j - x + 1) // 2\n    print(x)", "testcases = int(input())\nfor i in range(testcases):\n    number_of_towers = int(input())\n    blocks_in_towers = [int(i) for i in input().split()]\n    block_in_tower_1 = blocks_in_towers[0]\n    blocks_in_towers = sorted(blocks_in_towers[1:])\n    for x in blocks_in_towers:\n        if x > block_in_tower_1:\n            block_in_tower_1 = block_in_tower_1 + (x - block_in_tower_1 + 1) // 2\n    print(block_in_tower_1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    lst_z = lst[0]\n    lst.sort()\n    ans = lst[1:]\n    for i in ans:\n        if i > lst_z:\n            lst_z += (i - lst_z + 1) // 2\n    print(lst_z)", "import math\n\ndef ans(n, a):\n    h = a[0]\n    k = []\n    for i in range(n):\n        if a[i] >= h:\n            k.append(a[i])\n    r = h\n    k = sorted(k)\n    for i in range(len(k)):\n        if k[i] > r:\n            r = math.ceil((r + k[i]) / 2)\n    return r\nt = int(input())\nl = []\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l.append(ans(n, a))\nfor i in range(t):\n    print(l[i])", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = a[0]\n    a = sorted(a[1:])\n    for y in a:\n        if y > x:\n            x += (y - x + 1) // 2\n    print(x)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = a[0]\n    a = sorted(a[1:])\n    for y in a:\n        if y > x:\n            x += (y - x + 1) // 2\n    print(x)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    one = a[0]\n    a = sorted(a[1:])\n    for j in a:\n        if j > one:\n            one += (j - one + 1) // 2\n    print(one)", "import math\ninputs = []\nfor i in range(int(input())):\n    new_input_len = int(input())\n    new_input = input().split(' ')\n    new_input = [int(x) for x in new_input]\n    inputs.append(new_input)\nfor i in range(len(inputs)):\n    (first, rest) = (inputs[i][0], inputs[i][1:])\n    rest = list(sorted(rest))\n    for ele in rest:\n        if ele > first:\n            first += math.floor((ele - first + 1) / 2)\n    print(first)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = a[0]\n    a = sorted(a[1:])\n    for y in a:\n        if y > x:\n            x += (y - x + 1) // 2\n    print(x)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = a[0]\n    a = sorted(a[1:])\n    for y in a:\n        if y > x:\n            x += (y - x + 1) // 2\n    print(x)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = a[0]\n    a = sorted(a[1:])\n    for y in a:\n        if y > x:\n            x += (y - x + 1) // 2\n    print(x)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    first = a.pop(0)\n    a = sorted((x for x in a if x > first))\n    for num in a:\n        first += (num - first + 1) // 2\n    print(first)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = l[0]\n    l = sorted(l[1:])\n    for y in l:\n        if y > x:\n            x += (y - x + 1) // 2\n    print(x)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    first_height = a[0]\n    a = sorted(a[1:])\n    for x in a:\n        if x > first_height:\n            first_height += (x - first_height + 1) // 2\n    print(first_height)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = a[0]\n    a = sorted(a[1:])\n    for y in a:\n        if y > x:\n            x += (y - x + 1) // 2\n    print(x)", "num_test_cases = int(input())\nfor _ in range(num_test_cases):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    first = arr.pop(0)\n    arr.sort()\n    for num in arr:\n        if num > first:\n            first = (num + first + 1) // 2\n    print(first)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = a[0]\n    a = sorted(a[1:])\n    for y in a:\n        if y > x:\n            x += (y - x + 1) // 2\n    print(x)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = a[0]\n    a = sorted(a[1:])\n    for i in a:\n        if i > x:\n            x += (i - x + 1) // 2\n    print(x)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = a[0]\n    a = sorted(a[1:])\n    for i in a:\n        if i > x:\n            x += (i - x + 1) // 2\n    print(x)", "import math\nn = int(input())\nans = []\nfor _ in range(n):\n    m = int(input())\n    l = list(map(int, input().split()))\n    new_l = l[1:]\n    f = l[0]\n    new_l.sort()\n    for i in range(len(new_l)):\n        if new_l[i] > f:\n            f += math.ceil((new_l[i] - f) / 2)\n    ans.append(f)\nfor j in ans:\n    print(j)", "import sys\nimport re\nimport math\nfrom math import log2\nfrom math import log\nfrom math import ceil\nfrom math import gcd\nfrom decimal import *\nfrom datetime import date\nfrom collections import deque\nimport random\nimport heapq\nimport itertools\nimport datetime\nconst = 1000000007\nep = 1e-08\n\ndef get():\n    return list(map(int, input().split()))\nn = int(input())\nfor i in range(n):\n    m = int(input())\n    line = get()\n    temp = line[1:]\n    temp.sort()\n    for term in temp:\n        if term > line[0]:\n            line[0] = (term + line[0] + 1) // 2\n    print(line[0])", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    nums = [int(x) for x in input().split()]\n    a1 = nums[0]\n    nums = nums[1:]\n    nums.sort()\n    for num in nums:\n        if num > a1:\n            a1 += ceil((num - a1) / 2)\n    print(a1)", "import sys\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    aa = [int(ii) for ii in input().split()]\n    a = aa[0]\n    b = aa[1:]\n    b.sort()\n    for i in range(n - 1):\n        if b[i] > a:\n            a = (a + b[i] + 1) // 2\n    print(a)", "def solution():\n    n = int(input())\n    a = [int(num) for num in input().split()]\n    nums = sorted(a[1:])\n    n = len(nums)\n    total = a[0]\n    i = 0\n    while i < n:\n        if nums[i] > total:\n            total += (nums[i] + 1 - total) // 2\n        i += 1\n    print(total)\n\ndef main():\n    t = int(input())\n    while t:\n        solution()\n        t -= 1\nmain()", "import math\nimport collections\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    temp = l[1:]\n    temp.sort()\n    curr = l[0]\n    for i in temp:\n        if i > curr:\n            curr = math.ceil((i + curr) / 2)\n    print(curr)", "from math import ceil\n\ndef sol():\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = a[0]\n    b = a[1:]\n    b.sort()\n    for i in range(0, n - 1):\n        if b[i] > x:\n            x = ceil((b[i] + x) / 2)\n    print(x)\n    return\nfor i in range(int(input())):\n    sol()", "import os, sys\nif os.getlogin() == 'Arun-Rog':\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nimport math\nfor _ in range(int(input())):\n    input()\n    lt = list(map(int, input().split()))\n    k = lt[0]\n    l2 = lt[1:]\n    l2.sort()\n    for x in l2:\n        if x > k:\n            k = math.ceil((k + x) / 2)\n    print(k)", "def fun(l, n):\n    k = l[0]\n    l.remove(l[0])\n    l.sort()\n    for i in range(n - 1):\n        if l[i] > k:\n            if (l[i] - k) % 2 == 0:\n                k = k + (l[i] - k) // 2\n            else:\n                k = k + 1 + (l[i] - k) // 2\n    print(k)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    fun(l, n)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr1 = arr[1:]\n    arr1.sort()\n    curr = arr[0]\n    for i in range(n - 1):\n        if arr1[i] > curr:\n            curr += (arr1[i] - curr + 1) // 2\n    print(curr)", "from math import ceil\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = l[0]\n    for i in sorted(l[1:]):\n        if i > a:\n            a += ceil((i - a) / 2)\n    print(a)", "t = int(input())\nfor _ in range(t):\n    n = input()\n    a = list(map(int, input().split()))\n    x = a[0]\n    a = [i for i in a if i > x]\n    a.sort()\n    for i in a:\n        if i > x:\n            x = (x + i + 1) // 2\n    print(x)", "for _ in range(int(input())):\n    n = int(input())\n    num = [int(x) for x in input().split()]\n    r = num[0]\n    for nu in sorted(num[1:]):\n        if nu > r:\n            r = nu + r - (nu + r) // 2\n    print(r)", "for i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = arr[0]\n    arr1 = arr[1:]\n    arr1.sort()\n    for i in arr1:\n        if i <= ans:\n            continue\n        else:\n            temp = i - ans\n            if temp % 2 == 0:\n                ans += temp // 2\n            else:\n                ans += temp // 2 + 1\n    print(ans)", "from math import ceil\nfor _ in range(int(input())):\n    n = int(input())\n    (*li,) = map(int, input().split())\n    st = li[0]\n    for i in sorted(li[1:]):\n        if i > st:\n            st = ceil((st + i) / 2)\n    print(st)", "for _ in range(int(input())):\n    n = int(input())\n    digit = [int(y) for y in input().split()]\n    x = digit[0]\n    for num in sorted(digit[1:]):\n        if num > x:\n            x = num + x - (num + x) // 2\n    print(x)", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = a[0]\n    a.remove(a[0])\n    a.sort()\n    for i in range(len(a)):\n        if a[i] > b:\n            b += (a[i] - b + 1) // 2\n    print(b)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = a[0]\n    a = sorted(a[1:])\n    for y in a:\n        if y > x:\n            x += (y - x + 1) // 2\n    print(x)", "for _ in range(int(input())):\n    length = int(input())\n    nums = list(map(int, input().split()))\n    tower1 = nums[0]\n    nums = sorted(nums[1:])\n    for i in nums:\n        if i > tower1:\n            tower1 += (i - tower1 + 1) // 2\n    print(tower1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = a[0]\n    a = sorted(a[1:])\n    for y in a:\n        if y > x:\n            x += (y - x + 1) // 2\n    print(x)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = a[0]\n    a = sorted(a[1:])\n    for y in a:\n        if y > x:\n            x += (y - x + 1) // 2\n    print(x)", "import math\nfor t in range(int(input())):\n    n = int(input())\n    l_list = list(map(int, input().split()))\n    ans = 0\n    start = l_list[0]\n    l_list.sort()\n    for i in l_list:\n        if start < i:\n            start = math.ceil((start + i) / 2)\n    print(start)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = a[0]\n    a = sorted(a[1:])\n    for y in a:\n        if y > x:\n            x += (y - x + 1) // 2\n    print(x)"]