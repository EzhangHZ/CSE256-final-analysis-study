["import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    a = input().strip()\n    b = input().strip()\n    diff = cnt1 = cnt2 = 0\n    for i in range(n):\n        cnt1 += int(a[i])\n        cnt2 += int(b[i])\n        diff += 1 if a[i] != b[i] else 0\n    ans = float('inf')\n    if cnt1 == cnt2:\n        ans = min(ans, diff)\n    if cnt1 + cnt2 == n + 1:\n        if (n - diff) % 2 == 1:\n            ans = min(ans, n - diff)\n    return ans if ans < float('inf') else -1\nfor _ in range(int(input())):\n    print(solve())", "import sys\ninput = sys.stdin.readline\n\ndef read_strs():\n    s = input().strip()\n    return list(map(int, list(s)))\n\ndef solve(a, b):\n    (x, y, diff) = (0, 0, 0)\n    n = len(a)\n    result = n + 1\n    for i in range(n):\n        x += a[i]\n        y += b[i]\n        diff += 1 if a[i] != b[i] else 0\n    if x == y:\n        result = min(diff, result)\n    if x == n - y + 1:\n        result = min(n - diff, result)\n    return result if result < n + 1 else -1\nn = int(input())\nfor _ in range(n):\n    m = int(input())\n    a = read_strs()\n    b = read_strs()\n    print(solve(a, b))", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    a = input().strip()\n    b = input().strip()\n    diff = cnt1 = cnt2 = 0\n    for i in range(n):\n        cnt1 += int(a[i])\n        cnt2 += int(b[i])\n        diff += 1 if a[i] != b[i] else 0\n    ans = float('inf')\n    if cnt1 == cnt2:\n        ans = min(ans, diff)\n    if cnt1 + cnt2 == n + 1:\n        ans = min(ans, n - diff)\n    return ans if ans < float('inf') else -1\nfor _ in range(int(input())):\n    print(solve())", "def find(n, a, b):\n    dif = 0\n    sum_a = 0\n    sum_b = 0\n    for i in range(n):\n        if a[i] == '1':\n            sum_a += 1\n        if b[i] == '1':\n            sum_b += 1\n        if a[i] != b[i]:\n            dif += 1\n    if sum_a != sum_b and sum_a + sum_b != n + 1:\n        return -1\n    if sum_a == sum_b:\n        if sum_a + sum_b == n + 1:\n            return min(dif, n - dif)\n        return dif\n    return n - dif\ncases = int(input())\nfor _ in range(cases):\n    n = int(input())\n    a = input()\n    b = input()\n    print(find(n, a, b))", "def solve():\n    n = int(input())\n    a = input()\n    b = input()\n    (x, y, z) = (0, 0, 0)\n    for i in range(n):\n        if a[i] == '1':\n            x += 1\n        if b[i] == '1':\n            y += 1\n        if a[i] != b[i]:\n            z += 1\n    if x == y:\n        if n - x + 1 == y:\n            return min(z, n - z)\n        return z\n    elif n - x + 1 == y:\n        return n - z\n    return -1\nfor _ in range(int(input())):\n    print(solve())", "problem_num = int(input())\nfor i in range(problem_num):\n    n = int(input())\n    arr1 = input()\n    arr2 = input()\n    if arr2.count('1') not in [arr1.count('1'), n - arr1.count('1') + 1]:\n        print(-1)\n        continue\n    same = 0\n    diff = 0\n    for j in range(len(arr1)):\n        if arr1[j] == arr2[j]:\n            same += 1\n        else:\n            diff += 1\n    if arr1.count('1') == n - arr1.count('1') + 1:\n        print(min([same, diff]))\n    elif arr2.count('1') == arr1.count('1'):\n        print(diff)\n    else:\n        print(same)", "def solve():\n    n = int(input())\n    a = input()\n    b = input()\n    (x, y, z) = (0, 0, 0)\n    for i in range(n):\n        if a[i] == '1':\n            x += 1\n        if b[i] == '1':\n            y += 1\n        if a[i] != b[i]:\n            z += 1\n    if x == y:\n        if n - x + 1 == y:\n            return min(z, n - z)\n        return z\n    elif n - x + 1 == y:\n        return n - z\n    return -1\nfor _ in range(int(input())):\n    print(solve())", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    zC = a.count('0')\n    oC = n - zC\n    desiredOC = b.count('1')\n    if oC == 0:\n        if desiredOC == 0:\n            print(0)\n            continue\n        else:\n            print(-1)\n            continue\n    flag = False\n    if oC == desiredOC:\n        diff = 0\n        for idx in range(n):\n            if a[idx] == '1' and b[idx] == '0':\n                diff += 1\n        m = 2 * diff\n        flag = True\n    if zC + 1 == desiredOC:\n        diff = 0\n        for idx in range(n):\n            if a[idx] == '0' and b[idx] == '0':\n                diff += 1\n        if not flag:\n            flag = True\n            m = diff * 2 + 1\n        else:\n            m = min(diff * 2 + 1, m)\n    if flag:\n        print(m)\n    else:\n        print(-1)", "import sys\nfrom collections import deque\n\ndef BFS(candles, target):\n    num_00 = num_01 = num_10 = num_11 = 0\n    for (a, b) in zip(candles, target):\n        if a == '0' and b == '0':\n            num_00 += 1\n        elif a == '0' and b == '1':\n            num_01 += 1\n        elif a == '1' and b == '0':\n            num_10 += 1\n        else:\n            num_11 += 1\n    state = (num_00, num_01, num_10, num_11)\n    seen = {state}\n    frontier = deque([(state, 0)])\n    while frontier:\n        ((num_00, num_01, num_10, num_11), num_flips) = frontier.popleft()\n        if num_01 == num_10 == 0:\n            return num_flips\n        if num_10:\n            new_state = (num_10 - 1, num_11, 1 + num_00, num_01)\n            if new_state not in seen:\n                frontier.append((new_state, num_flips + 1))\n                seen.add(new_state)\n        if num_11:\n            new_state = (num_10, num_11 - 1, num_00, 1 + num_01)\n            if new_state not in seen:\n                frontier.append((new_state, num_flips + 1))\n                seen.add(new_state)\n    return -1\ninput = sys.stdin.readline\nnum_test_cases = int(input())\nfor test_case_ittr in range(num_test_cases):\n    n = int(input())\n    candles = input().strip()\n    target = input().strip()\n    ans = BFS(candles, target)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    uu = 0\n    ll = 0\n    ul = 0\n    lu = 0\n    for j in range(n):\n        if a[j] == '1' and b[j] == '1':\n            ll += 1\n        elif a[j] == '1' and b[j] == '0':\n            lu += 1\n        elif a[j] == '0' and b[j] == '1':\n            ul += 1\n        elif a[j] == '0' and b[j] == '0':\n            uu += 1\n    ans1 = n\n    ans2 = n\n    c = 0\n    if ul == lu:\n        ans1 = 2 * ul\n        c += 1\n    if uu == ll - 1:\n        ans2 = 2 * uu + 1\n        c += 1\n    if c == 0:\n        print(-1)\n    else:\n        print(min(ans1, ans2))", "t = int(input())\nfor i in range(t):\n    kifkif = 0\n    moch_kif = 0\n    nbr1_kif = 0\n    nbr1_moch = 0\n    n = int(input())\n    a = input()\n    b = input()\n    for j in range(len(a)):\n        if a[j] == b[j]:\n            kifkif += 1\n            if a[j] == '1':\n                nbr1_kif += 1\n        elif a[j] == '1':\n            nbr1_moch += 1\n    moch_kif = n - kifkif\n    if kifkif % 2 == 0 or nbr1_kif != int(kifkif / 2) + 1:\n        kifkif = -1\n    if moch_kif % 2 != 0 or nbr1_moch != int(moch_kif / 2):\n        moch_kif = -1\n    if kifkif != -1 and moch_kif != -1:\n        print(min(moch_kif, kifkif))\n    elif kifkif != -1:\n        print(kifkif)\n    elif moch_kif != -1:\n        print(moch_kif)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    r = a.count('1')\n    l = a.count('0')\n    rr = 0\n    ll = 0\n    for i in range(n):\n        if a[i] != b[i]:\n            if a[i] == '1':\n                rr += 1\n            else:\n                ll += 1\n    m = 0\n    if ll == rr:\n        m = ll * 2\n    else:\n        m = float('inf')\n    rr = r - rr\n    ll = l - ll\n    if rr and ll + 1 == rr:\n        m = min(m, ll * 2 + 1)\n    if m == float('inf'):\n        m = -1\n    print(m)", "def func():\n    n = int(input())\n    a = input()\n    b = input()\n    x = 0\n    y = 0\n    x1 = 0\n    y1 = 0\n    for i in range(n):\n        if a[i] == b[i]:\n            x += 1\n            if a[i] == '1':\n                x1 += 1\n        else:\n            y += 1\n            if a[i] == '1':\n                y1 += 1\n    flg = True\n    ans = 10 ** 9\n    if x % 2 != 0 and (x + 1) // 2 == x1:\n        ans = x\n        flg = False\n    if y % 2 == 0 and y // 2 == y1:\n        ans = min(ans, y)\n        flg = False\n    if flg:\n        print(-1)\n    else:\n        print(ans)\nt = int(input())\nfor i in range(t):\n    func()", "import sys\n\ndef menorah(n, a, b):\n    _01 = 0\n    _00 = 0\n    _10 = 0\n    _11 = 0\n    for i in range(n):\n        if a[i] == '0':\n            if b[i] == '0':\n                _00 += 1\n            else:\n                _01 += 1\n        elif b[i] == '1':\n            _11 += 1\n        else:\n            _10 += 1\n    best = float('inf')\n    if _01 == _10:\n        best = min(best, _01 + _10)\n    if _11 > 0:\n        __01 = _11 - 1\n        __00 = _10\n        __10 = _00\n        __11 = _01 + 1\n        if __01 == __10:\n            best = min(best, 1 + __01 + __10)\n    if best == float('inf'):\n        best = -1\n    return best\nfor _ in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    sys.stdout.write(f'{menorah(n, a, b)}\\n')", "for _ in range(int(input())):\n    (ans1, ans2) = (100000, 100000)\n    n = int(input())\n    str1 = input()\n    str2 = input()\n    (x, y, v01) = (str1.count('1'), str2.count('1'), 0)\n    for i in range(n):\n        if str1[i] != str2[i]:\n            v01 += 1\n    if x == y:\n        ans1 = v01\n    if y == n - x + 1:\n        ans2 = n - v01\n    if ans1 == ans2 == 100000:\n        print(-1)\n    else:\n        print(min(ans1, ans2))", "t = int(input())\nwhile t:\n    n = int(input())\n    a = input()\n    b = input()\n    (f00, f01, f10, f11) = (0, 0, 0, 0)\n    res = 0\n    for i in range(n):\n        if a[i] == '0' and b[i] == '0':\n            f00 += 1\n        elif a[i] == '0' and b[i] == '1':\n            f01 += 1\n        elif a[i] == '1' and b[i] == '0':\n            f10 += 1\n        else:\n            f11 += 1\n    res = 100000000.0 + 1\n    if f01 == f10:\n        res = min(res, 2 * f01)\n    if f00 == f11 - 1:\n        res = min(res, 1 + 2 * f00)\n    if res > 100000000.0:\n        res = -1\n    print(res)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    x = [0] * 4\n    for i in range(n):\n        if a[i] == '1' and b[i] == '1':\n            x[0] += 1\n        elif a[i] == '0' and b[i] == '0':\n            x[1] += 1\n        elif a[i] == '1' and b[i] == '0':\n            x[2] += 1\n        elif a[i] == '0' and b[i] == '1':\n            x[3] += 1\n    if x[2] == x[3] == 0:\n        print(0)\n    elif x[0] == x[2] == 0:\n        print(-1)\n    else:\n        if x[2] == x[3]:\n            ans = x[2] + x[3]\n        else:\n            ans = n + 1\n        if x[2] > 0 and x[1] + 1 == x[0]:\n            temp_ans = x[0] * 2 + 1\n            if temp_ans < ans:\n                ans = temp_ans\n        if x[0] > 0 and x[1] + 1 == x[0]:\n            temp_ans = x[1] * 2 + 1\n            if temp_ans < ans:\n                ans = temp_ans\n        if ans > n:\n            ans = -1\n        print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    r = a.count('1')\n    l = a.count('0')\n    rr = 0\n    ll = 0\n    for i in range(n):\n        if a[i] != b[i]:\n            if a[i] == '1':\n                rr += 1\n            else:\n                ll += 1\n    m = 0\n    if ll == rr:\n        m = ll * 2\n    else:\n        m = float('inf')\n    rr = r - rr\n    ll = l - ll\n    if rr and ll + 1 == rr:\n        m = min(m, ll * 2 + 1)\n    if m == float('inf'):\n        m = -1\n    print(m)", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    n1 = 0\n    for i in a:\n        if i == '1':\n            n1 += 1\n    n2 = 0\n    for i in b:\n        if i == '1':\n            n2 += 1\n    noc = 0\n    for i in range(n):\n        if a[i] != b[i]:\n            noc += 1\n    ans = 999999\n    if noc == 0:\n        ans = 0\n    elif n1 == 0:\n        ans = -1\n    else:\n        if n1 == n2:\n            ans = noc\n        if n1 == n - n2 + 1:\n            ans = min(ans, n - noc)\n    if ans == 999999:\n        ans = -1\n    print(ans)", "import math\ncases = int(input())\nfor i in range(cases):\n    lenght = int(input())\n    from_str = input()\n    to_str = input()\n    matrix = [[0, 0], [0, 0]]\n    for j in range(lenght):\n        matrix[int(from_str[j])][int(to_str[j])] += 1\n    ans = math.inf\n    if matrix[1][0] == matrix[0][1]:\n        ans = 2 * matrix[1][0]\n    if matrix[1][1] == matrix[0][0] + 1:\n        ans = min(ans, 2 * matrix[0][0] + 1)\n    if ans == math.inf:\n        print(-1)\n    else:\n        print(ans)", "import math\ncases = int(input())\nfor i in range(cases):\n    lenght = int(input())\n    from_str = input()\n    to_str = input()\n    matrix = [[0, 0], [0, 0]]\n    for j in range(lenght):\n        matrix[int(from_str[j])][int(to_str[j])] += 1\n    ans = math.inf\n    if matrix[1][0] == matrix[0][1]:\n        ans = 2 * matrix[1][0]\n    if matrix[1][1] == matrix[0][0] + 1:\n        ans = min(ans, 2 * matrix[0][0] + 1)\n    if ans == math.inf:\n        print(-1)\n    else:\n        print(ans)", "inf = 1000000000.0\nt = int(input())\nfor u in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    ok = False\n    for i in range(n):\n        if a[i] == '1':\n            ok = True\n    if ok == False and a != b:\n        print(-1)\n        continue\n    ans = inf\n    for i in range(2):\n        cnt = [0, 0, 0, 0]\n        for j in range(n):\n            if a[j] == '0':\n                if b[j] == '0':\n                    cnt[0] += 1\n                else:\n                    cnt[1] += 1\n            elif b[j] == '0':\n                cnt[2] += 1\n            else:\n                cnt[3] += 1\n        if i == 1:\n            if cnt[3] - cnt[0] == 1 or cnt[3] - cnt[0] == 0:\n                if (cnt[3] + cnt[0]) % 2 == i:\n                    ans = min(ans, cnt[3] + cnt[0])\n        elif cnt[2] - cnt[1] == 1 or cnt[2] - cnt[1] == 0:\n            if (cnt[2] + cnt[1]) % 2 == i:\n                ans = min(ans, cnt[2] + cnt[1])\n    if ans == inf:\n        print(-1)\n    else:\n        print(ans)", "from collections import deque\n\ndef make(s, i):\n    if s[i] == 0:\n        return None\n    res = s.copy()\n    for x in range(len(s)):\n        if x != i:\n            res[x] = 1 - res[x]\n    return res\nt = int(input())\nfor _ in range(t):\n    k = int(input())\n    s1 = list(map(int, list(input())))\n    s2 = list(map(int, list(input())))\n    res1 = 10 ** 9\n    if sum(s1) == sum(s2):\n        res = 0\n        for i in range(k):\n            if s1[i] != s2[i]:\n                res += 1\n        res1 = min(res1, res)\n    if sum(s1) + sum(s2) == k + 1:\n        res = 0\n        besti = -1\n        for i in range(k):\n            if s1[i] == s2[i] == 1:\n                besti = i\n                break\n            if s1[i] == 1:\n                besti = i\n        if besti == -1:\n            res1 = 0\n        else:\n            s1 = make(s1, besti)\n            for j in range(k):\n                if s1[j] != s2[j]:\n                    res += 1\n            res1 = min(res1, res + 1)\n    print(res1 if res1 != 10 ** 9 else -1)", "t = int(input())\nfor i in range(t):\n    opp = True\n    n = int(input())\n    a = [int(j) for j in list(input())]\n    b = [int(j) for j in list(input())]\n    ans = 0\n    if sum(a) == sum(b) and sum(a) == n - sum(b) + 1:\n        for j in range(n):\n            if b[j] == 1 and a[j] == 0:\n                ans += 1\n        if ans < sum(a) / 2:\n            print(ans * 2)\n        else:\n            print((sum(a) - ans - 1) * 2 + 1)\n    elif sum(a) == sum(b):\n        for j in range(n):\n            if b[j] == 1 and a[j] == 0:\n                ans += 2\n        print(ans)\n    elif sum(a) == n - sum(b) + 1:\n        for j in range(n):\n            if b[j] == 1 and a[j] == 1:\n                ans += 1\n                a = [1 if k == 0 else 0 for k in a]\n                a[j] = 1\n                for k in range(n):\n                    if b[k] == 1 and a[k] == 0:\n                        ans += 2\n                print(ans)\n                break\n    else:\n        print(-1)", "def operation(a, b):\n    (c1, c2) = (0, 0)\n    for (i, j) in zip(a, b):\n        if i != j:\n            if i == '1':\n                c1 += 1\n            else:\n                c2 += 1\n    if c1 != c2:\n        return float('inf')\n    else:\n        return 2 * c1\n\ndef change(a, b, f):\n    idx = -1\n    for i in range(len(a)):\n        if a[i] == '1' and b[i] == f:\n            idx = i\n    if idx == -1:\n        return float('inf')\n    else:\n        l = ''\n        for i in range(len(a)):\n            if i != idx:\n                if a[i] == '1':\n                    l += '0'\n                else:\n                    l += '1'\n            else:\n                l += a[i]\n        return operation(l, b)\nfor _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    t = list(input())\n    if s == t:\n        print(0)\n        continue\n    else:\n        ans = operation(s, t)\n        ans = min(ans, 1 + change(s, t, '1'))\n        ans = min(ans, 1 + change(s, t, '0'))\n        if ans == float('inf'):\n            print(-1)\n        else:\n            print(ans)", "def operation(a, b):\n    (c01, c10) = (0, 0)\n    for i in range(len(a)):\n        if a[i] == '1' and b[i] == '0':\n            c10 += 1\n        elif a[i] == '0' and b[i] == '1':\n            c01 += 1\n    if c10 != c01:\n        return float('inf')\n    return c10 + c01\n\ndef change(a, b, f):\n    idx = -1\n    for i in range(len(a)):\n        if a[i] == '1' and b[i] == f:\n            idx = i\n            break\n    if idx == -1:\n        return float('inf')\n    for i in range(len(a)):\n        if i == idx:\n            continue\n        if a[i] == '1':\n            a[i] = '0'\n        else:\n            a[i] = '1'\n    return operation(a, b)\nfor _ in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    (a1, b1) = (list(a), list(b))\n    ans = operation(a1, b1)\n    ans = min(ans, 1 + change(a1, b1, '1'), 1 + change(a1, b1, '0'))\n    if a == b:\n        print(0)\n    elif ans == float('inf'):\n        print(-1)\n    else:\n        print(ans)", "import sys, random\nraw_input = sys.stdin.readline\n\ndef slove(a, b):\n    n = len(a)\n\n    def reverse_pair(a, b):\n        ret = 0\n        for i in range(n):\n            if a[i] != b[i]:\n                ret += 1\n        return ret\n\n    def countOdd(a, b):\n\n        def lit(s, i):\n            ret = list(map(int, list(s)))\n            for j in range(n):\n                if j != i:\n                    ret[j] ^= 1\n            return ''.join(map(str, ret))\n        ret = 1000000\n        cases = [0, 0]\n        for i in range(n):\n            if sum(cases) == 2:\n                break\n            if a[i] == '1':\n                if b[i] == '0':\n                    cases[0] = 1\n                    ret = min(ret, 1 + reverse_pair(lit(a, i), b))\n                else:\n                    cases[1] = 1\n                    ret = min(ret, 1 + reverse_pair(lit(a, i), b))\n        return ret\n    res = 10000000\n    count_a = a.count('1')\n    count_b = b.count('1')\n    if count_a == count_b:\n        res = reverse_pair(a, b)\n    if n - count_a + 1 == count_b:\n        res = min(res, countOdd(a, b))\n    return res if res != 10000000 else -1\nfor _ in range(int(raw_input())):\n    raw_input()\n    a = raw_input().strip()\n    b = raw_input().strip()\n    print(slove(a, b))", "def checkeven(k, res):\n    if k == res // 2:\n        return True\n    else:\n        return False\n\ndef checkodd(g, res):\n    if g == (n - res) // 2 + 1:\n        return True\n    else:\n        return False\n\ndef find(a, b, n):\n    if int(a) == 0 or int(b) == 0:\n        if int(a) != 0 or int(b) != 0:\n            return -1\n    if int(a) == int(b):\n        return 0\n    res = 0\n    g = k = 0\n    for i in range(n):\n        if a[i] == '1':\n            if a[i] != b[i]:\n                res += 1\n                k += 1\n            else:\n                g += 1\n        elif a[i] != b[i]:\n            res += 1\n    ans1 = ans2 = -1\n    extra = 0\n    if res % 2 == 0 and checkeven(k, res):\n        ans1 = res\n    if (n - res) % 2 != 0 and checkodd(g, res):\n        ans2 = n - res\n    if ans2 == ans1 and ans2 == -1:\n        return -1\n    if ans1 == -1:\n        return ans2\n    elif ans2 == -1:\n        return ans1\n    else:\n        return min(ans2, ans1)\nr = int(input())\nres = []\nfor i in range(r):\n    n = int(input())\n    a = input()\n    b = input()\n    res.append(find(a, b, n))\nfor i in res:\n    print(i)"]