["def solution(b_x, b_y):\n    if (b_x + b_y) % 2:\n        return '-1 -1'\n    distance = (b_x + b_y) // 2\n    if distance < b_x:\n        return f'{distance} 0'\n    return f'{b_x} {distance - b_x}'\nprint(*(solution(*map(int, input().split())) for _ in range(int(input()))), sep='\\n')", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (x, y) = map(int, input().split())\n    if (x + y) % 2 == 1:\n        return [-1, -1]\n    if (x + y) // 2 > x:\n        return [x, (x + y) // 2 - x]\n    return [(x + y) // 2, 0]\nfor _ in range(int(input())):\n    print(*solve())", "t = int(input())\nfor j in range(t):\n    (x, y) = map(int, input().split())\n    if (x + y) % 2 == 1:\n        print(-1, -1)\n    elif x < y:\n        print(x, y - (x + y) // 2)\n    else:\n        print((x + y) // 2, 0)", "for i in range(int(input())):\n    (a, b) = [int(x) for x in input().split()]\n    s = a + b\n    if s % 2 != 0:\n        print(-1, -1)\n    else:\n        s //= 2\n        val = min(a, s)\n        print(val, max(s - val, 0))", "def distance(x, y):\n    a = x + y\n    if a % 2 == 0:\n        a //= 2\n        print(min(a, x), max(a - x, 0))\n    else:\n        print('-1 -1')\nin_t_case = int(input())\nfor i in range(in_t_case):\n    (x, y) = map(int, input().split())\n    distance(x, y)"]