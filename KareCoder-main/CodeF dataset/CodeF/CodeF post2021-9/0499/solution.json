["import sys, collections\n\ndef solve(a, b):\n    sa = bin(a)[2:]\n    sb = bin(b)[2:]\n    sa = '0' * (len(sb) - len(sa)) + sa\n    res = b - a\n    found = False\n    for i in range(len(sa)):\n        state = sa[i] + sb[i]\n        if state == '10':\n            found = True\n            sbb = sb[:i] + sa[i:]\n            cur = int(sbb, 2) - b + 1\n            res = min(res, cur)\n            j = i\n            while sa[j] == '1':\n                j -= 1\n            saa = sa[:j] + '1' + '0' * (len(sa) - j - 1)\n            if sb[j] == '1':\n                cur = int(saa, 2) - a\n                if int(saa, 2) != b:\n                    cur += 1\n                res = min(res, cur)\n            else:\n                sbb = sb[:j] + '1' + '0' * (len(sb) - j - 1)\n                cur = int(saa, 2) - a + int(sbb, 2) - b\n                if int(saa, 2) != int(sbb, 2):\n                    cur += 1\n                res = min(res, cur)\n            break\n    return res if found else 1\ninput = sys.stdin.readline\ntests = int(input()[:-1])\nfor test in range(tests):\n    (a, b) = [int(s) for s in input()[:-1].split()]\n    print(solve(a, b))", "import math\nt = int(input())\nfor i in range(t):\n    (a, b) = [int(c) for c in input().split(' ')]\n    A = b - a\n    abin = '{0:b}'.format(a)\n    bbin = '{0:b}'.format(b)\n    abin = (len(bbin) - len(abin)) * '0' + abin\n    j = 0\n    while j < len(bbin) and bbin[j] >= abin[j]:\n        j += 1\n    v = j\n    if v == len(bbin):\n        print(1)\n        continue\n    if j < len(bbin):\n        assert abin[v] == '1' and bbin[v] == '0'\n    if j == len(bbin):\n        j -= 1\n    while bbin[j] <= abin[j]:\n        j -= 1\n    u = j\n    B = 1 + int(abin[v:], 2) - int(bbin[v:], 2)\n    j = 0\n    C = 1 + 2 ** (len(bbin) - u - 1) - int(abin[u:], 2)\n    print(min(A, B, C))", "import math\n\ndef answer(a, b):\n    if a == b:\n        return 0\n    if a | b == b:\n        return 1\n    d = math.floor(math.log((a | b) - b, 2))\n    caseA = 2 ** d - (2 ** d - 1 & a)\n    newa = a + caseA\n    caseB = 2 ** d - (2 ** d - 1 & b)\n    if newa | b == b:\n        return min(caseA + answer(newa, b), caseB + answer(a, b + caseB))\n    else:\n        return caseB + answer(a, b + caseB)\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    cnt = 0\n    print(answer(a, b))", "import sys\ninput = sys.stdin.readline\nt = int(input().strip())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    ret = b - a\n    tmp = a\n    while tmp | b != b:\n        tmp += 1\n    ret = min(ret, 1 + tmp - a)\n    tmp = b\n    while a | tmp != tmp:\n        tmp += 1\n    ret = min(ret, 1 + tmp - b)\n    print(ret)", "t = int(input())\n\ndef steps(a, b):\n    if a == b:\n        print(0)\n        return\n    if b == b | a:\n        print(1)\n        return\n    ans1 = b - a\n    ans2 = 0\n    for i in range(a, b):\n        ans2 = ans2 + 1\n        if i | b == b:\n            break\n    ans3 = (a | b) - b + 1\n    ans4 = 0\n    while True:\n        b = b + 1\n        ans4 += 1\n        if a | b == b:\n            break\n    ans4 += 1\n    print(min(ans1, ans2, ans3, ans4))\nfor _ in range(t):\n    inp = list(map(int, input().split()))\n    (a, b) = inp\n    steps(a, b)", "def check(a, b):\n    mn = abs(a - b)\n    tmp = a\n    while tmp | b != b:\n        tmp += 1\n    mn = min(mn, 1 + tmp - a)\n    tmp = b\n    while a | tmp != tmp:\n        tmp += 1\n    mn = min(mn, 1 + tmp - b)\n    return mn\nt = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    print(check(a, b))", "from collections import Counter, deque, defaultdict\nfrom itertools import accumulate, product, groupby\nimport operator\nimport math\nfrom functools import reduce\n\ndef solve():\n    (a, b) = [int(char) for char in input().split()]\n    if b == a:\n        return 0\n    ans = b - a\n    (A, B) = (a, b)\n    for i in range(b - a):\n        if A + i | B == B:\n            ans = min(ans, i + 1)\n            break\n    (A, B) = (a, b)\n    for i in range(b - a):\n        if B + i | A == B + i:\n            ans = min(ans, i + 1)\n            break\n    return ans\nfor _ in range(int(input())):\n    print(solve())", "a = '001101110101100110'\nb = '101000001001000110'\nc = '101101111101100110'\nans = '101101100100001'\n\ndef main():\n    (a, b) = map(int, input().split())\n    k1 = 0\n    (a1, b1) = (a, b)\n    while a1 | b1 != b1:\n        a1 += 1\n        k1 += 1\n    if a1 != b1:\n        k1 += 1\n    k2 = 0\n    (a2, b2) = (a, b)\n    while a2 | b2 != b2:\n        b2 += 1\n        k2 += 1\n    if a2 != b2:\n        k2 += 1\n    print(min(k1, k2))\nt = int(input())\nfor _ in range(t):\n    main()", "def answer(a, b):\n    c = min(b - a, (b | a) - b + 1)\n    k = 1\n    m = a\n    n = b\n    k1 = 1\n    while a | b > b:\n        b += 1\n        k += 1\n    while m | n > n:\n        m += 1\n        k1 += 1\n    return min(c, k1, k)\nt = int(input())\nfor k in range(t):\n    inp = input().split()\n    a = int(inp[0])\n    b = int(inp[1])\n    print(answer(a, b))", "import time\nstart_time = time.time()\nt = int(input())\n\ndef steps(a, b):\n    if a == b:\n        print(0)\n        return\n    if b == b | a:\n        print(1)\n        return\n    ans1 = b - a\n    ans2 = 0\n    for i in range(a, b):\n        ans2 = ans2 + 1\n        if i | b == b:\n            break\n    ans3 = (a | b) - b + 1\n    ans4 = 0\n    while True:\n        b = b + 1\n        ans4 += 1\n        if a | b == b:\n            break\n    ans4 += 1\n    print(min(ans1, ans2, ans3, ans4))\nfor _ in range(t):\n    inp = list(map(int, input().split()))\n    (a, b) = inp\n    steps(a, b)", "import time\nstart_time = time.time()\nt = int(input())\n\ndef steps(a, b):\n    if a == b:\n        print(0)\n        return\n    if b == b | a:\n        print(1)\n        return\n    ans1 = b - a\n    ans2 = 0\n    for i in range(a, b):\n        ans2 = ans2 + 1\n        if i | b == b:\n            break\n    ans3 = (a | b) - b + 1\n    ans4 = 0\n    while True:\n        b = b + 1\n        ans4 += 1\n        if a | b == b:\n            break\n    ans4 += 1\n    print(min(ans1, ans2, ans3, ans4))\nfor _ in range(t):\n    inp = list(map(int, input().split()))\n    (a, b) = inp\n    steps(a, b)", "t = int(input())\n\ndef solve(a, b):\n    res = min(b - a, (b | a) - b + 1)\n    (u, v) = (a, b)\n    (tmp1, tmp2) = (0, 0)\n    while b | a > b:\n        b += 1\n        tmp1 += 1\n    while u | v > v:\n        u += 1\n        tmp2 += 1\n    return min(res, tmp1 + 1, tmp2 + 1)\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    print(solve(a, b))", "def s(a, b):\n    (c, d) = (a, b)\n    ans1 = ans2 = 1\n    ans3 = b - a\n    while a | b != b:\n        a += 1\n        ans1 += 1\n    while c | d != d:\n        d += 1\n        ans2 += 1\n    print(min(ans1, ans2, ans3))\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    s(a, b)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    ans = b - a\n    for i in range(0, a + 1):\n        if a + i | b == b:\n            ans = min(ans, i + 1)\n            break\n    for i in range(b + 1):\n        if b + i | a == b + i:\n            ans = min(ans, i + 1)\n            break\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    ans = b - a\n    for i in range(0, b + 1):\n        if a + i | b == b or b + i | a == b + i:\n            ans = min(ans, i + 1)\n            break\n    print(ans)", "import sys\nfrom sys import stdin, stdout\nfrom math import ceil, floor, sqrt, log, log2, log10\nfrom collections import Counter\nint_max = float('inf')\nint_min = -float('inf')\nmod = 10 ** 9 + 7\nANS = []\ninput = stdin.readline\n\ndef decimalToBinary(n):\n    return bin(n).replace('0b', '')\n\ndef solve():\n    pass\nt = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if a == b:\n        print(0)\n    ans1 = 1\n    ans2 = 1\n    A = a\n    B = b\n    while B != A | B:\n        A += 1\n        ans1 += 1\n    A = a\n    B = b\n    while B != A | B:\n        B += 1\n        ans2 += 1\n    print(min(ans1, ans2, b - a))", "import bisect\nimport heapq\nfrom collections import defaultdict, deque\nfrom email import header\nfrom functools import lru_cache\nfrom sys import stdin, stdout\nimport math\nimport sys\ninput = stdin.readline\n\ndef ii():\n    return int(input())\n\ndef lii():\n    return list(map(int, stdin.readline().split()))\n\ndef ss():\n    x = stdin.readline()\n    if x[-1] == '\\n':\n        return x[:-1]\n    return x\n\ndef lss():\n    return list(map(str, stdin.readline().split()))\n\ndef llss():\n    return [i for i in ss()]\n\ndef yes():\n    stdout.write('YES\\n')\n\ndef no():\n    stdout.write('NO\\n')\nfor _ in range(ii()):\n    (a, b) = lii()\n    (x, y) = (a, b)\n    res = 0\n    while x & y != x:\n        x += 1\n        res += 1\n    if x != y:\n        res += 1\n    curr = 0\n    (x, y) = (a, b)\n    while x & y != x:\n        y += 1\n        curr += 1\n    if x != y:\n        curr += 1\n    print(min(curr, res))", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    for i in range(a + b):\n        if a + i | b == b or a | b + i == b + i:\n            break\n    print(min(i + 1, b - a))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = a\n    d = b\n    ans1 = 1\n    ans2 = 1\n    ans3 = b - a\n    while a | b != b:\n        a += 1\n        ans1 += 1\n    while c | d != d:\n        d += 1\n        ans2 += 1\n    print(min(ans1, ans2, ans3))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = a\n    d = b\n    ans1 = 1\n    ans2 = 1\n    ans3 = b - a\n    while a | b != b:\n        a += 1\n        ans1 += 1\n    while c | d != d:\n        d += 1\n        ans2 += 1\n    print(min(ans1, ans2, ans3))", "n = int(input())\nfor _ in range(n):\n    (a, b) = map(int, input().split())\n    ans = b - a\n    ans1 = 1\n    ans2 = 1\n    (c, d) = (a, b)\n    while a | b != b:\n        a += 1\n        ans1 += 1\n    while c | d != d:\n        d += 1\n        ans2 += 1\n    print(min(ans2, ans1, ans))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a | b == b:\n        print(1)\n    else:\n        n1 = b - a\n        c = 1\n        b1 = b\n        while a | b != b:\n            b = b + 1\n            c = c + 1\n        c1 = 1\n        while a | b1 != b1:\n            a = a + 1\n            c1 = c1 + 1\n        print(min(n1, c, c1))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a | b == b:\n        print(1)\n    else:\n        n1 = b - a\n        c = 1\n        b1 = b\n        while a | b != b:\n            b = b + 1\n            c = c + 1\n        c1 = 1\n        while a | b1 != b1:\n            a = a + 1\n            c1 = c1 + 1\n        print(min(n1, c, c1))", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    ans = b - a\n    for i in range(0, b + 1):\n        if a + i | b == b or b + i | a == b + i:\n            ans = min(ans, i + 1)\n            break\n    print(ans)", "n = int(input())\nfor _ in range(n):\n    (a, b) = map(int, input().split())\n    ans = b - a\n    ans1 = 1\n    ans2 = 1\n    (c, d) = (a, b)\n    while a | b != b:\n        a += 1\n        ans1 += 1\n    while c | d != d:\n        d += 1\n        ans2 += 1\n    print(min(ans2, ans1, ans))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = a\n    d = b\n    ans1 = 1\n    ans2 = 1\n    ans3 = b - a\n    while a | b != b:\n        a += 1\n        ans1 += 1\n    while c | d != d:\n        d += 1\n        ans2 += 1\n    print(min(ans1, ans2, ans3))", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    (q, w) = (a, b)\n    k = 1\n    r = 1\n    o = min(b - a, (b | a) - b + 1)\n    while a | b > b:\n        b += 1\n        k += 1\n    while q | w > w:\n        q += 1\n        r += 1\n    print(min(o, k, r))", "t = int(input())\nwhile t != 0:\n    t = t - 1\n    c = 0\n    (a, b) = map(int, input().split())\n    test = b\n    d = 0\n    ans1 = (a | b) - b + 1\n    if a | b == b:\n        print('1')\n        continue\n    ans2 = b - a\n    for i in range(a, b):\n        c = c + 1\n        if i | b == b:\n            break\n    ans3 = c\n    while True:\n        test = test + 1\n        d = d + 1\n        if a | test == test:\n            break\n    ans4 = d + 1\n    total = min(ans1, ans2, ans3, ans4)\n    print(total)", "t = int(input())\nwhile t:\n    (a, b) = list(map(int, input().split(' ')))\n    count = b - a\n    for i in range(b):\n        if b == b | i:\n            count = min(count, 1 + abs(i - a))\n    print(count)\n    t -= 1", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = int(a)\n    d = int(b)\n    c1 = 0\n    c2 = 0\n    while a != b:\n        if a | b == b:\n            c1 += 1\n            a = a | b\n        else:\n            a += 1\n            c1 += 1\n    while c != d:\n        if c | d == d:\n            c2 += 1\n            c = c | d\n        else:\n            d += 1\n            c2 += 1\n    print(min(c1, c2))", "t = int(input())\nwhile t:\n    (a, b) = list(map(int, input().split(' ')))\n    count = b - a\n    for i in range(b):\n        if b == b | i:\n            count = min(count, 1 + abs(i - a))\n    print(count)\n    t -= 1", "t = int(input())\nwhile t:\n    (a, b) = list(map(int, input().split(' ')))\n    count = b - a\n    for i in range(b):\n        if b == b | i:\n            count = min(count, 1 + abs(i - a))\n    print(count)\n    t -= 1", "for _ in range(int(input())):\n    (a, b) = map(int, input().split(' '))\n    ans = b - a\n    for i in range(b):\n        if b == b | i:\n            ans = min(ans, 1 + abs(i - a))\n    print(ans)", "t = int(input())\nfor i in range(t):\n    q = input().split(' ')\n    a = int(q[0])\n    b = int(q[1])\n    k1 = 0\n    while a <= b:\n        if b == a:\n            break\n        if b == a | b:\n            k1 += 1\n            break\n        else:\n            k1 += 1\n            a += 1\n    a = int(q[0])\n    b = int(q[1])\n    k2 = 0\n    while True:\n        if b == a | b:\n            k2 += 1\n            break\n        else:\n            k2 += 1\n            b += 1\n    print(min(k1, k2))", "import math\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    al = int(math.log2(a) // 1)\n    bl = int(math.log2(b) // 1)\n    a1 = a\n    b1 = b\n    d = b - a\n    if b | a == b:\n        print(1)\n        continue\n    else:\n        c = 0\n        for i in range(2 ** (bl - 1), 2 ** bl):\n            c += 1\n            a1 += 1\n            b1 += 1\n            if a1 | b == b:\n                d = c + 1 if d > c + 1 else d\n                break\n            if b1 | a == b1:\n                d = c + 1 if d > c + 1 else d\n                break\n    print(d)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    (c, d) = (x, y)\n    a = 0\n    b = 0\n    while x != y:\n        if x | y == y:\n            a += 1\n            break\n        a += 1\n        x += 1\n    while c != d:\n        if c | d == d:\n            b += 1\n            break\n        b += 1\n        d += 1\n    print(min(a, b))", "t = int(input())\nwhile t:\n    (a, b) = list(map(int, input().split(' ')))\n    count = b - a\n    for i in range(b):\n        if b == b | i:\n            count = min(count, 1 + abs(i - a))\n    print(count)\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    cnt = 1\n    (ta, tb) = (a, b)\n    while cnt < b - a:\n        if ta | tb == tb:\n            break\n        tb += 1\n        cnt += 1\n    cnt2 = 1\n    (ta, tb) = (a, b)\n    while cnt2 < b - a:\n        if ta | tb == tb:\n            break\n        ta += 1\n        cnt2 += 1\n    print(min({b - a, cnt, cnt2}))", "t = int(input())\nfor T in range(t):\n    (a, b) = [int(x) for x in input().split()]\n    x = a\n    y = b\n    n = b\n    ans = b - a\n    while n > 0:\n        n -= 1\n        if x | y == y:\n            ans = min(ans, b - n)\n            break\n        x += 1\n    n = b\n    x = a\n    y = b\n    while n > 0:\n        n -= 1\n        if x | y == y:\n            ans = min(ans, b - n)\n            break\n        y += 1\n    print(ans)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    (q, w) = (int(a), int(b))\n    k = 0\n    r = 0\n    o = min(b - a, (b | a) - b + 1)\n    while a != b:\n        if a | b == b:\n            a |= b\n        elif a | b > b:\n            b += 1\n        k += 1\n    while q != w:\n        if q | w == w:\n            q |= w\n        elif q | w > w:\n            q += 1\n        r += 1\n    print(min(o, k, r))", "import sys\n\ndef f(a, b):\n    if a == b:\n        return 0\n    if a | b == b:\n        return 1\n    for i in range(29, -1, -1):\n        if b >> i & 1 == 0 and a >> i & 1 == 1:\n            for j in range(i + 1, 30):\n                if b >> j & 1 == 1 and a >> j & 1 == 0:\n                    x = (a | (1 << j) - 1) + 1\n                    if x == b:\n                        return x - a\n                    else:\n                        return x - a + 1\n            raise Exception('wut1' + str(a) + ' ' + str(b))\n    raise Exception('wut' + str(a) + ' ' + str(b))\n\ndef solve():\n    inp = sys.stdin.readline\n    (a, b) = map(int, inp().split())\n    r = f(a, b)\n    x = b\n    while True:\n        r = min(r, f(a, x) + x - b)\n        r = min(r, (a | x) - b + 1)\n        if x & x - 1 == 0:\n            break\n        x += x ^ x & x - 1\n    print(r)\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "try:\n    for _ in range(int(input())):\n        (a, b) = map(int, input().split())\n        minimum = []\n        if a == b:\n            print(0)\n        elif a | b == a or a | b == b:\n            print(1)\n        else:\n            diff = abs(a - b)\n            minimum.append(diff)\n            steps = 0\n            mini = min(a, b)\n            maxi = max(a, b)\n            for i in range(0, maxi):\n                steps += 1\n                mini += 1\n                if mini | maxi == mini or mini | maxi == maxi:\n                    steps += 1\n                    break\n            minimum.append(steps)\n            steps = 0\n            mini = min(a, b)\n            maxi = max(a, b)\n            for i in range(0, maxi):\n                steps += 1\n                maxi += 1\n                if mini | maxi == mini or mini | maxi == maxi:\n                    steps += 1\n                    break\n            minimum.append(steps)\n            print(min(minimum))\nexcept:\n    pass", "def solve():\n    (a, b) = map(int, input().split())\n    if abs(a - b) == 1 or a | b == b:\n        print(1)\n        return\n    store_a = a\n    ans = min(abs(a - b), abs((a | b) - b) + 1)\n    count = 0\n    while a <= b:\n        count += 1\n        temp = abs((a | b) - b) + count\n        if temp < ans:\n            ans = temp\n        a += 1\n    a = store_a\n    count = 0\n    temp_or = a | b\n    while b <= temp_or:\n        count += 1\n        temp = abs((a | b) - b) + count\n        if temp < ans:\n            ans = temp\n        b += 1\n    print(ans)\n    return\nfor _ in range(int(input())):\n    solve()", "import math\nt = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    min_n = b - a\n    for i in range(b - a):\n        answ = (a + i | b) - b + i + 1\n        if answ < min_n:\n            min_n = answ\n    for i in range(min_n):\n        answ = (a | b + i) - (b + i) + i + 1\n        if answ < min_n:\n            min_n = answ\n    print(min_n)", "import sys\nfrom math import sqrt, gcd\nfrom collections import deque, Counter, OrderedDict\nsys.setrecursionlimit(10 ** 8)\nI = lambda : int(input())\nS = lambda : input().strip()\nM = lambda : map(int, input().strip().split())\nL = lambda : list(map(str, input().strip().split()))\nmod = 1000000007\nfor _ in range(I()):\n    (a, b) = M()\n    ans = b - a\n    for i in range(b - a):\n        if a + i | b == b or b + i | a == b + i:\n            ans = min(ans, i + 1)\n    print(ans)", "import sys\nfrom math import sqrt, gcd\nfrom collections import deque, Counter, OrderedDict\nsys.setrecursionlimit(10 ** 8)\nI = lambda : int(input())\nS = lambda : input().strip()\nM = lambda : map(int, input().strip().split())\nL = lambda : list(map(str, input().strip().split()))\nmod = 1000000007\nfor _ in range(I()):\n    (a, b) = M()\n    ans = b - a\n    for i in range(b - a):\n        if a + i | b == b:\n            ans = min(ans, i + 1)\n    for i in range(b - a):\n        if b + i | a == b + i:\n            ans = min(ans, i + 1)\n    print(ans)", "import math\nt = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    ans = math.inf\n    for i in range(a, b):\n        ans = min(ans, i - a + ((i | b) - b) + 1)\n    ans = min(ans, b - a)\n    for i in range(1000001):\n        if a | b + i == b + i:\n            ans = min(ans, 1 + i)\n            break\n    print(ans)", "import math\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    aa = a\n    mn = 1000000007\n    while aa < b:\n        if aa | b == b:\n            mn = min(mn, aa - a + 1)\n        aa += 1\n    bb = b\n    while bb < 2 * b:\n        if bb | a == bb:\n            mn = min(mn, bb - b + 1)\n        bb += 1\n    print(min(mn, b - a))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    best = b - a\n    for i in range(b - a):\n        a1 = a + i | b\n        best = min(best, i + 1 + a1 - b)\n        b1 = b + i\n        a1 = a | b1\n        best = min(best, i + 1 + a1 - b1)\n        if i > best - 1:\n            break\n    print(best)", "def main2():\n\n    def gen():\n        r = 1\n        while True:\n            r += 1\n            l = 1\n            while l < r:\n                yield (l, r)\n                l += 1\n    for (i, x) in enumerate(gen()):\n        if i > 100:\n            break\n        print(i + 1, x)\n    quit()\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    result = b - a\n    for i in range(b - a):\n        na = a + i\n        na = na | b\n        cur = i + 1 + (na - b)\n        result = min(result, cur)\n    bit = 1 << 32\n    while bit:\n        if a & bit and (not b & bit):\n            break\n        bit = bit >> 1\n    mask = (bit << 1) - 1\n    a = a & mask\n    b = b & mask\n    result = min(result, abs(a - b) + 1)\n    print(result)"]