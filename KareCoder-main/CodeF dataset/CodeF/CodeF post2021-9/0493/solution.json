["N = int(input())\nif N == 1:\n    print(3)\nelif N == 2:\n    print(5)\nelif N % 3 == 1:\n    print(4 + 4 * (N // 3))\nelif N % 3 == 2:\n    print(5 + 4 * (N // 3))\nelif N % 3 == 0:\n    print(3 + 4 * (N // 3))", "n = int(input())\nif n == 1:\n    print(3)\nelse:\n    print(4 + (4 * n - 3) // 3)", "[print(4 + (4 * n - 3) // 3 if n != 1 else 3) for n in [int(input())]]", "n = int(input())\nif n == 1:\n    print(3)\nelif n == 2:\n    print(5)\nelif n == 3:\n    print(7)\nelse:\n    print((n - 3) // 3 * 4 + (n - 3) % 3 + 7)", "hain = int(input())\nsober = hain // 3\nlame = 3 if hain == 1 else sober * 4 + hain % 3 + 3\nprint(lame)", "n = int(input())\nif n == 1:\n    print(3)\nelse:\n    print(4 + (4 * n - 3) // 3)", "def f(x):\n    ans = max((x - 1) // 2, 0)\n    ans += max(0, (x - 4) // 4)\n    return ans\n\ndef binsearch(n):\n    low = 1\n    flag = 0\n    high = 10 ** 20\n    while low <= high:\n        mid = (low + high) // 2\n        a = f(mid)\n        if a == n:\n            for x in range(mid - 10, mid + 10):\n                if f(x) == n:\n                    print(x)\n                    flag = 1\n                    break\n            if flag == 1:\n                break\n        elif a > n:\n            high = mid - 1\n        else:\n            low = mid + 1\nn = int(input())\nbinsearch(n)", "n = int(input())\n\ndef cal(n):\n    if n == 1:\n        return 3\n    if n == 2:\n        return 5\n    if n == 3:\n        return 7\n    a = ((n - 1) // 3 + 1) * 4\n    if (n - 1) % 3 == 1:\n        a += 1\n    elif (n - 1) % 3 == 2:\n        a += 3\n    return a\nprint(cal(n))", "n = int(input())\nif n == 1:\n    print(3)\nelif n == 2:\n    print(5)\nelif n == 3:\n    print(7)\nelif n == 4:\n    print(8)\nelse:\n    s = 8\n    n -= 4\n    r = n % 3\n    n = n // 3\n    s += n * 4\n    if r == 1:\n        s += 1\n    elif r == 2:\n        s += 3\n    print(s)", "sequence = int(input())\nif sequence == 1:\n    print(3)\nelif sequence == 2:\n    print(5)\nelse:\n    first_one_in_your_group = (int((sequence - 3) / 6) + 1) * 8 - 1\n    ranking = int(sequence - 3) % 6\n    if ranking == 0:\n        print(first_one_in_your_group)\n    elif ranking == 1:\n        print(first_one_in_your_group + 1)\n    elif ranking == 2:\n        print(first_one_in_your_group + 2)\n    elif ranking == 3:\n        print(first_one_in_your_group + 4)\n    elif ranking == 4:\n        print(first_one_in_your_group + 5)\n    else:\n        print(first_one_in_your_group + 6)", "n = int(input())\nm = n // 3\nx = 3 if n == 1 else m * 4 + n % 3 + 3\nprint(x)", "n = int(input())\nx = (n - 1) // 3\nif n == 1:\n    print(3)\nelif (n - 1) % 3:\n    print(2 * (n - x) + 1)\nelse:\n    print(4 * (x + 1))", "n = int(input())\nif n == 1:\n    print(3)\nelif n % 3 == 1:\n    print(4 * ((n + 2) // 3))\nelif n % 3 == 2:\n    print((4 * n + 7) // 3)\nelse:\n    print((4 * n + 9) // 3)", "def area1(num):\n    num = num - 1\n    if num == 0:\n        return 3\n    elif num == 1:\n        return 5\n    elif num == 2:\n        return 7\n    elif num % 3 == 0:\n        return 8 + 4 * int(num / 3 - 1)\n    elif num % 3 == 1:\n        div = int(num / 3)\n        final = 8 + 4 * (div - 1) + 1\n        return final\n    else:\n        div = int(num / 3)\n        final = 8 + 4 * (div - 1) + 3\n        return final\nnumber = int(input())\nprint(area1(number))", "n = int(input())\nif n <= 5:\n    print([3, 5, 7, 8, 9][n - 1])\nelse:\n    (a, b) = ((n - 6) // 15, (n - 6) % 15)\n    print((2 * a + 1 + (b > 6)) * 10 + [1, 2, 3, 5, 6, 7, 9, 0, 1, 3, 4, 5, 7, 8, 9][b])", "n = int(input())\nb = 1\na = 0\nif n % 3 == 1 and n != 1:\n    d = n // 3\n    c = 8 + (d - 1) * 4\n    print(c)\nelif n != 1 and n != 2 and (n != 3):\n    e = (n - 1) % 3\n    d = (n - e) // 3\n    c = 8 + (d - 1) * 4\n    if e == 1:\n        print(c + e)\n    elif e == 2:\n        print(c + e + 1)\nelif n == 1 or n == 2 or n == 3:\n    print((b + n) ** 2 - (a + n) ** 2)", "N = int(input())\nprint(3 + 4 * (N // 3) + N % 3 if not N == 1 else 3)", "a = int(input())\nx = (a - 1) // 3\nif a == 1:\n    print(3)\nelif (a - 1) % 3:\n    print(2 * (a - x) + 1)\nelse:\n    print(4 * (x + 1))", "n = int(input())\nif n == 1:\n    print(3)\nelif (n - 1) % 3 == 0:\n    o = int((n - 1) / 3)\n    print(4 * o + 4)\nelse:\n    o = int((n - 1) / 3)\n    oo = n - o\n    ooo = oo + 1\n    print(ooo * ooo - oo * oo)", "n = int(input())\nif n == 1:\n    print(3)\nelse:\n    print(3 + n % 3 + n // 3 * 4)", "def ctle(x):\n    ct = 0\n    for b in [1, 2]:\n        jump = (x - b * b) // (2 * b)\n        if jump <= 0:\n            break\n        ct += jump\n    return ct\nn = int(input())\nlo = 1\nhi = int(100000000000000.0)\nwhile lo < hi:\n    m = (lo + hi) // 2\n    if ctle(m) >= n:\n        hi = m - 1\n    else:\n        lo = m + 1\nif ctle(lo - 1) >= n:\n    lo -= 1\nif ctle(lo) < n:\n    lo += 1\nprint(lo)", "def main():\n    n = int(input())\n    x = divmod(n, 3)\n    print(3 if n == 1 else x[0] * 4 + x[1] + 3)\nmain()", "n = int(input())\nif n == 1:\n    print(3)\nelse:\n    print(3 + n % 3 + n // 3 * 4)", "n = int(input())\nif n == 1:\n    print(3)\nelse:\n    n -= 1\n    (a, b) = (n // 3, n % 3)\n    ans = 4 * (a + 1)\n    if b == 1:\n        ans += 1\n    elif b == 2:\n        ans += 3\n    print(ans)", "n = int(input())\nif n == 1:\n    print(3)\n    exit()\na = (n - 1) // 3 + 1\nb = n % 3\nif b == 0:\n    print(4 * a + 3)\nelif b == 1:\n    print(4 * a)\nelse:\n    print(4 * a + 1)", "N = int(input())\nprint(3 + 4 * (N // 3) + N % 3 if not N == 1 else 3)", "n = int(input())\nl = 0\nr = 3 * n\nc = 0\nd = 0\nwhile l <= r:\n    mid = (l + r) // 2\n    val1 = 0\n    if mid >= 8:\n        val1 = mid // 4 - 1\n    val2 = 0\n    if mid >= 3:\n        val2 = (mid - (1 - mid % 2)) // 2\n    if val1 + val2 <= n:\n        l = mid + 1\n        c = val1\n        d = val2\n    else:\n        r = mid - 1\nif n == 1:\n    print(3)\nelse:\n    print(max(c * 4 + 4, d * 2 + 1))", "a = int(input())\nif a < 3:\n    print(a * 2 + 1)\nelif (a - 2) % 3 == 1:\n    print(((a - 2) // 3 + 2) * 4 - 1)\nelif (a - 2) % 3 == 2:\n    print(((a - 2) // 3 + 2) * 4)\nelse:\n    print(((a - 2) // 3 + 1) * 4 + 1)", "NKK = int(input())\nprint(3 + 4 * (NKK // 3) + NKK % 3 if not NKK == 1 else 3)", "n = int(input())\nif n == 1:\n    print(3)\nelse:\n    print(4 + (4 * n - 3) // 3)", "n = int(input())\nif n == 1:\n    print(3)\nelif n == 2:\n    print(5)\nelse:\n    print(4 * (n // 3 + 1) + n % 3 - 1)", "n = int(input())\nm = n // 3\nl = 3 if n == 1 else m * 4 + n % 3 + 3\nprint(l)", "n = int(input())\nif n == 1:\n    print(3)\nelse:\n    k = ((n - 1) // 3 + 1) * 4\n    if (n - 1) % 3 == 1:\n        k += 1\n    if (n - 1) % 3 == 2:\n        k += 3\n    print(k)", "n = int(input())\nm = n // 3\nl = 3 if n == 1 else m * 4 + n % 3 + 3\nprint(l)", "[print(4 + (4 * n - 3) // 3 if n != 1 else 3) for n in [int(input())]]", "N = int(input())\nimport math\nif N == 1:\n    print(3)\nif N == 2:\n    print(5)\nif N > 2:\n    print(math.floor(4 * N / 3 + 3))", "rang = int(input())\nif rang == 1:\n    print(3)\nelse:\n    print(rang * 4 // 3 + 3)", "n = int(input())\nif n == 1:\n    print(3)\nelse:\n    n -= 1\n    if n % 3 == 0:\n        k = n // 3\n        print(4 * k + 4)\n    elif n % 3 == 1:\n        k = (n - 1) // 3\n        print(4 * k + 5)\n    else:\n        k = (n - 2) // 3\n        print(4 * k + 7)", "n = int(input())\nif n == 1:\n    print(3)\nelse:\n    print(3 + n % 3 + n // 3 * 4)", "n = int(input())\nif n == 1:\n    print('3')\nelif n % 3 == 1:\n    print((n // 3 + 1) * 4)\nelse:\n    a = (n + 1) // 3\n    print((n - a + 1) * 2 + 1)"]