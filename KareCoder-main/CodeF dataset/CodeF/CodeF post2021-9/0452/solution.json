["def solve():\n    (n, x, y) = [int(i) for i in input().split()]\n    (a, b) = (input(), input())\n    q = 0\n    w = []\n    for i in range(n):\n        if a[i] != b[i]:\n            q += 1\n            w.append(i)\n    if q % 2 != 0:\n        return -1\n    if q == 0:\n        return 0\n    if q != 2 or w[0] + 1 != w[1]:\n        return q // 2 * y\n    return min(y * 2, x)\nt = int(input())\nans = []\nwhile t:\n    ans.append(str(solve()))\n    t -= 1\nprint('\\n'.join(ans))", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    s1 = input()\n    s2 = input()\n    temp = []\n    for i in range(len(s1)):\n        if s1[i] != s2[i]:\n            temp.append(i)\n    if len(temp) % 2 == 1:\n        print(-1)\n    elif len(temp) == 2:\n        if temp[0] + 1 == temp[1]:\n            print(min(x, 2 * y))\n        else:\n            print(y)\n    else:\n        print(y * len(temp) // 2)", "t = int(input())\nfor _ in range(t):\n    (n, x, y) = map(int, input().split())\n    a = list(input())\n    b = list(input())\n    mis = set()\n    for i in range(n):\n        a[i] = int(a[i])\n        b[i] = int(b[i])\n        if a[i] != b[i]:\n            mis.add(i)\n    if x >= y * 2:\n        better_y = True\n    else:\n        better_y = False\n    if len(mis) % 2 == 1:\n        print(-1)\n    else:\n        ans = 0\n        if better_y:\n            if len(mis) == 2:\n                left = mis.pop()\n                right = mis.pop()\n                if abs(left - right) == 1:\n                    ans = 2 * y\n                else:\n                    ans = y\n            else:\n                ans += y * len(mis) // 2\n        elif len(mis) == 2:\n            left = mis.pop()\n            right = mis.pop()\n            if abs(left - right) == 1:\n                ans = x\n            else:\n                ans = y\n        else:\n            ans += y * len(mis) // 2\n        print(ans)", "t = int(input())\nfor test in range(t):\n    (n, x, y) = map(int, input().split())\n    a = list(map(int, input()))\n    b = list(map(int, input()))\n    if a[0] != b[0]:\n        if a[1] != b[1]:\n            cnt = 2\n            ld = 1\n        else:\n            cnt = 1\n            ld = 0\n    elif a[1] != b[1]:\n        cnt = 1\n        ld = 0\n    else:\n        cnt = 0\n        ld = 0\n    for i in range(2, n):\n        if a[i] != b[i]:\n            cnt += 1\n            if a[i - 1] != b[i - 1] and a[i - 2] == b[i - 2]:\n                ld += 1\n    if cnt % 2 == 1:\n        print(-1)\n        continue\n    if ld == 1 and cnt == 2:\n        if y * 2 > x:\n            print(x)\n        else:\n            print(y * 2)\n    else:\n        print(y * (cnt // 2))", "t = int(input())\nfor _ in range(t):\n    (n, x, y) = map(int, input().split())\n    A = list(input())\n    B = list(input())\n    d = 0\n    for i in range(n):\n        if A[i] != B[i]:\n            d += 1\n    if d == 0:\n        print(0)\n        continue\n    if d % 2 != 0:\n        print(-1)\n    else:\n        if d == n == 2:\n            print(x)\n        if d == 2:\n            c = 0\n            for i in range(n - 1):\n                if A[i] != B[i] and A[i + 1] != B[i + 1]:\n                    c = 1\n                    break\n            if c and n == 3:\n                print(x)\n            elif c and n > 3:\n                if x >= 2 * y:\n                    print(2 * y)\n                else:\n                    print(x)\n            else:\n                print(y)\n        else:\n            print(d * y // 2)", "t = int(input())\nwhile t > 0:\n    ip = [int(x) for x in input().split()]\n    n = ip[0]\n    x = ip[1]\n    y = ip[2]\n    s1 = input()\n    s2 = input()\n    count = 0\n    for i in range(n):\n        if s1[i] != s2[i]:\n            count += 1\n    if count % 2 == 1:\n        print(-1)\n    elif count == 0:\n        print(0)\n    elif count <= 2 and n == 2:\n        print(x)\n    elif count <= 2:\n        for i in range(n):\n            if s1[i] != s2[i]:\n                if s1[i + 1] != s2[i + 1]:\n                    print(min(x, 2 * y))\n                else:\n                    print(y)\n                break\n    else:\n        print(y * (count // 2))\n    t -= 1", "def cal():\n    if len(p) == 0:\n        return 0\n    if len(p) == 2:\n        if p[1] == p[0] + 1:\n            return min(x, 2 * y)\n        else:\n            return min(y, x * (p[1] - p[0]))\n    return len(p) // 2 * y\nfor jj in range(int(input())):\n    (n, x, y) = [int(i) for i in input().split()]\n    a = input()\n    b = input()\n    p = []\n    for i in range(n):\n        if a[i] != b[i]:\n            p.append(i)\n    if len(p) % 2 == 1:\n        print(-1)\n    else:\n        print(cal())", "def func():\n    (n, x, y) = map(int, input().split())\n    a = input()\n    b = input()\n    diff = []\n    for i in range(n):\n        if a[i] != b[i]:\n            diff.append(i)\n    if x > 2 * y:\n        x = 2 * y\n    if len(diff) % 2 == 1:\n        print(-1)\n        return\n    elif len(diff) == 0:\n        print(0)\n        return\n    elif len(diff) == 2:\n        if diff[0] + 1 == diff[1]:\n            print(x)\n        else:\n            print(y)\n        return\n    else:\n        print(len(diff) // 2 * y)\n        return\nn_tests = int(input())\nfor i in range(n_tests):\n    func()", "def f():\n    (n, x, y) = map(int, input().split())\n    a = input()\n    b = input()\n    C = 0\n    CG = 0\n    for i in range(n - 1):\n        if a[i] != b[i] and a[i + 1] != b[i + 1]:\n            C += 1\n            i += 1\n    for i in range(n):\n        if a[i] != b[i]:\n            CG += 1\n    if CG % 2:\n        print(-1)\n        return\n    if C == 1 and CG == 2:\n        if n == 2:\n            print(x)\n        elif 2 * y < x:\n            print(2 * y)\n        else:\n            print(x)\n    else:\n        temp = CG // 2\n        print(temp * y)\nt = int(input())\nwhile t:\n    f()\n    t -= 1", "import heapq\nimport operator\n\ndef solve():\n    (n, x, y) = map(int, input().strip().split())\n    s = input().strip()\n    a = [int(ch) for ch in s]\n    s = input().strip()\n    b = [int(ch) for ch in s]\n    n = len(a)\n    c = [a[i] ^ b[i] for i in range(n)]\n    cnt1 = 0\n    pair = 0\n    pre = -10\n    for i in range(n):\n        if c[i] == 1:\n            cnt1 += 1\n            if pre + 1 == i:\n                pair += 1\n                pre = -10\n            else:\n                pre = i\n    if cnt1 % 2 == 1:\n        print(-1)\n        return\n    not_pair = cnt1 // 2 - pair\n    if y < x and (cnt1 > 2 or pair > 1):\n        print(cnt1 // 2 * y)\n    elif x <= y * 2:\n        print(x * pair + y * not_pair)\n    else:\n        cost = cnt1 // 2\n        if pair > 0:\n            cost = max(cost, 2)\n        print(cost * y)\nt = int(input().strip())\nfor _ in range(t):\n    solve()", "tasks = int(input())\nfor t in range(tasks):\n    (n, x, y) = list(map(int, input().split()))\n    a = input()\n    b = input()\n    diff = [i for i in range(n) if a[i] != b[i]]\n    if len(diff) % 2 != 0:\n        print(-1)\n    elif len(diff) != 2:\n        print(y * len(diff) // 2)\n    elif diff[0] + 1 != diff[1]:\n        print(y)\n    elif x <= 2 * y:\n        print(x)\n    elif n <= 3 or (n == 4 and diff[0] == 1 and (diff[1] == 2)):\n        print(x)\n    else:\n        print(2 * y)", "t = int(input())\nfor _ in range(t):\n    (n, x, y) = map(int, input().split())\n    a = input()\n    b = input()\n    poss = 0\n    for j in range(n):\n        if a[j] != b[j]:\n            poss += 1\n    if poss % 2 != 0:\n        print(-1)\n        continue\n    if poss == 0:\n        print(0)\n    elif poss > 2:\n        print(y * (poss // 2))\n    elif poss == 2:\n        cons = False\n        for j in range(1, n):\n            if a[j] != b[j] and a[j - 1] != b[j - 1]:\n                cons = True\n                break\n        if cons:\n            print(min(x, 2 * y))\n        else:\n            print(y)", "def solve():\n    (n, x, y) = [int(x) for x in input().split()]\n    a = input()\n    b = input()\n    ind = []\n    for i in range(n):\n        if a[i] != b[i]:\n            ind.append(i)\n    if len(ind) % 2:\n        return -1\n    if len(ind) == 2:\n        if ind[0] + 1 == ind[1]:\n            if n == 2 or n == 3:\n                return x\n            elif n == 4:\n                if ind[0] == 1:\n                    return x\n                else:\n                    return min(2 * y, x)\n            else:\n                return min(2 * y, x)\n    return y * len(ind) // 2\nt = int(input())\nwhile t:\n    print(solve())\n    t -= 1", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    (x, y) = (max(x, y), min(x, y))\n    a = input()\n    b = input()\n    s = []\n    ans = 0\n    for i in range(n):\n        if a[i] != b[i]:\n            ans += 1\n            s.append(i)\n    if ans & 1 == 1:\n        print(-1)\n    elif ans == 2 and s[1] - s[0] == 1:\n        print(min(x, y * 2))\n    else:\n        print(ans // 2 * y)", "testcases = int(input())\nfor i in range(testcases):\n    input_1 = input().split()\n    [n, x, y] = list(map(int, input_1))\n    input_2 = input()\n    a_list = list(map(int, [*input_2]))\n    input_3 = input()\n    b_list = list(map(int, [*input_3]))\n    n_diff = 0\n    cons = False\n    diff_last = 0\n    for j in range(n):\n        diff = abs(a_list[j] - b_list[j])\n        if diff == 1:\n            n_diff += 1\n            if diff_last == 1:\n                cons = True\n            diff_last = 1\n        else:\n            diff_last = 0\n    if n_diff % 2 == 1:\n        print(-1)\n    elif n_diff == 2 and cons == True:\n        print(min(x, 2 * y))\n    else:\n        print(n_diff // 2 * y)", "testcases = int(input())\nwhile testcases > 0:\n    (n, x, y) = [int(x) for x in input().split()]\n    array = []\n    string1 = input()\n    string2 = input()\n    for i in range(len(string1)):\n        if string1[i] != string2[i]:\n            array.append(i)\n    if len(array) % 2 != 0:\n        print('-1')\n    else:\n        count = len(array)\n        if count > 2:\n            print(int(y * count / 2))\n        elif count == 0:\n            print('0')\n        elif int(array[0]) - int(array[1]) not in [1, -1]:\n            print(y)\n        elif 2 * y < x and n > 2:\n            print(2 * y)\n        else:\n            print(x)\n    testcases -= 1", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    a = input()\n    b = input()\n    yo = []\n    for i in range(n):\n        if a[i] != b[i]:\n            yo.append(i)\n    if len(yo) % 2:\n        print(-1)\n    elif len(yo) == 2:\n        if yo[1] == yo[0] + 1:\n            print(min(x, 2 * y))\n        else:\n            print(y)\n    else:\n        print(len(yo) // 2 * y)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    a = input().strip()\n    b = input().strip()\n    ao = a.count('1')\n    bo = b.count('1')\n    if bo & 1 != ao & 1:\n        print(-1)\n        continue\n    c = []\n    for i in range(n):\n        if a[i] != b[i]:\n            c.append(i)\n    s = 0\n    if len(c) == 2 and c[0] + 1 == c[1]:\n        if x > y * 2:\n            s = y * 2\n        else:\n            s = x\n    else:\n        s = y * (len(c) // 2)\n    print(s)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    a = input().strip()\n    b = input().strip()\n    ao = a.count('1')\n    bo = b.count('1')\n    if bo & 1 != ao & 1:\n        print(-1)\n        continue\n    c = []\n    for i in range(n):\n        if a[i] != b[i]:\n            c.append(i)\n    s = 0\n    if len(c) == 2 and c[0] + 1 == c[1]:\n        if x > y * 2:\n            s = y * 2\n        else:\n            s = x\n    else:\n        s = y * (len(c) // 2)\n    print(s)", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    a = input()\n    b = input()\n    p = 0\n    q = 0\n    for i in range(n):\n        if a[i] == '1' and b[i] == '0':\n            p += 1\n        elif a[i] == '0' and b[i] == '1':\n            q += 1\n    if (p + q) % 2:\n        print(-1)\n    else:\n        if p + q == 2:\n            ans = 0\n            count = 0\n            flag = 0\n            for i in range(n - 1):\n                if a[i] != b[i] and a[i + 1] != b[i + 1]:\n                    if x > 2 * y:\n                        ans = 2 * y\n                    else:\n                        ans = x\n                    flag = 1\n                    break\n            if flag == 0:\n                ans = y\n        else:\n            ans = (p + q) // 2 * y\n        print(ans)", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    a = str(input())\n    b = str(input())\n    l = []\n    for i in range(n):\n        if a[i] != b[i]:\n            l.append(i)\n    if len(l) % 2 == 1:\n        print(-1)\n    elif len(l) == 2:\n        if l[0] + 1 == l[1]:\n            if n == 2 or n == 3:\n                print(x)\n            else:\n                print(min(2 * y, x))\n        else:\n            print(y)\n    else:\n        print(len(l) // 2 * y)", "def main():\n    for _ in range(int(input())):\n        (n, x, y) = map(int, input().split())\n        (a, b) = (input(), input())\n        ls = []\n        for i in range(n):\n            if a[i] != b[i]:\n                ls.append(i)\n        if len(ls) % 2 == 1:\n            print(-1)\n            continue\n        if len(ls) == 2:\n            if ls[1] - ls[0] > 1:\n                print(y)\n            else:\n                print(min(x, y * 2))\n        else:\n            print(y * (len(ls) // 2))\nmain()", "t = int(input())\nfor i in range(t):\n    l0 = input().split()\n    (n, x, y) = (int(l0[0]), int(l0[1]), int(l0[2]))\n    a = input()\n    b = input()\n    con = 0\n    l = []\n    for j in range(n):\n        if a[j] != b[j]:\n            l.append(j)\n            con += 1\n    if con == 0:\n        print(0)\n    elif con % 2 == 1:\n        print(-1)\n    else:\n        if con == 2:\n            if l[1] - l[0] == 1:\n                cost = min(2 * y, x)\n            else:\n                cost = y\n        else:\n            cost = con // 2 * y\n        print(cost)", "import io, os, sys\nfrom collections import Counter\nt = int(input())\nkl12 = 0\n\ndef GO_LIFE():\n    global kl12\n    (n, x, y) = map(int, input().split())\n    s = input()\n    s1 = input()\n    kl = 0\n    p = []\n    ok1 = 0\n    ok2 = 0\n    for i in range(n):\n        if s[i] != s1[i]:\n            p += [i]\n            if ok1 == 0 and len(p) == 2:\n                if p[0] == p[1] - 1:\n                    ok2 = 1\n                    ok1 = 1\n            kl += 1\n    if kl % 2 == 1:\n        print(-1)\n        return\n    if x > y * 2:\n        if len(p) == 2 and ok2 == 1:\n            print(y * 2)\n        else:\n            print(kl // 2 * y)\n    else:\n        if x == y:\n            print(x * (kl // 2))\n            return\n        sm = 0\n        for i in range(0, len(p) - 1, 2):\n            if kl > 2 or (kl == 2 and ok2 != 1):\n                sm += y\n            else:\n                sm += x\n        print(sm)\nwhile t > 0:\n    GO_LIFE()\n    t -= 1", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, x, y) = map(int, input().split())\n    A = input().strip()\n    B = input().strip()\n    diff = []\n    for i in range(n):\n        if A[i] != B[i]:\n            diff.append(i)\n    m = len(diff)\n    if m % 2:\n        return -1\n    elif m == 2:\n        return y if diff[0] + 1 < diff[1] else min(2 * y, x)\n    else:\n        return y * (m // 2)\nfor _ in range(int(input())):\n    print(solve())", "for i in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    a = input()\n    b = input()\n    ch1 = a.count('1')\n    ch2 = b.count('1')\n    if abs(ch1 - ch2) % 2 == 0:\n        j = 0\n        sum = 0\n        while j < n:\n            if a[j] != b[j]:\n                sum += 1\n            j += 1\n        if sum > 2:\n            print(int(sum // 2 * y))\n        elif sum == 2:\n            values = []\n            p = 0\n            while p < n:\n                if a[p] != b[p]:\n                    values.append(p)\n                p += 1\n            if values[1] - values[0] == 1:\n                print(min(2 * y, x))\n            else:\n                print(y)\n        else:\n            print(0)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    a = input()\n    b = input()\n    l = []\n    for i in range(n):\n        if a[i] != b[i]:\n            l.append(i)\n    if len(l) % 2 == 0:\n        z = len(l)\n        if z == 0:\n            print(0)\n        elif z == 2:\n            if abs(l[1] - l[0]) == 1:\n                print(min(x, 2 * y))\n            else:\n                print(y)\n        else:\n            print(z // 2 * y)\n    else:\n        print(-1)", "R = lambda : map(int, input().split())\n(t,) = R()\nfor k in range(t):\n    (n, x, y) = R()\n    a = input()\n    b = input()\n    indices = []\n    for i in range(len(a)):\n        if a[i] != b[i]:\n            indices.append(i)\n    length = len(indices)\n    if length == 0:\n        print(0)\n    elif length % 2 != 0:\n        print(-1)\n    elif length == 2:\n        if indices[0] == indices[1] + -1:\n            if x > 2 * y and (indices[1] + 3 <= n or indices[0] >= 2):\n                print(2 * y)\n            else:\n                print(x)\n        else:\n            print(y)\n    else:\n        print(length // 2 * y)", "def solve():\n    [n, x, y] = [int(x) for x in input().split()]\n    a = input()\n    b = input()\n    arr = []\n    count = 0\n    count_idx = []\n    for idx in range(n):\n        if a[idx] == b[idx]:\n            arr.append(0)\n        else:\n            arr.append(1)\n            count += 1\n            count_idx.append(idx)\n    if count == 0:\n        print(0)\n        return\n    if count % 2 == 1:\n        print(-1)\n        return\n    if count == 2:\n        if count_idx[0] == count_idx[-1] - 1:\n            print(min(x, 2 * y))\n            return\n        print(y)\n        return\n    p = 0\n    if y <= x:\n        print(count // 2 * y)\n        return\n    id = 1\n    while id < n:\n        if arr[id - 1] == 1 and arr[id] == 1:\n            p += 1\n            id += 2\n            continue\n        id += 1\n    print((count // 2 - p) * y + p * x)\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    a = input()\n    b = input()\n    l = []\n    for i in range(n):\n        if a[i] != b[i]:\n            l.append(i)\n    if len(l) % 2 == 0:\n        z = len(l)\n        if z == 0:\n            print(0)\n        elif z == 2:\n            if abs(l[1] - l[0]) == 1:\n                print(min(x, 2 * y))\n            else:\n                print(y)\n        else:\n            print(z // 2 * y)\n    else:\n        print(-1)", "for i in range(int(input())):\n    (n, x, y) = input().split(' ')\n    (n, x, y) = (int(n), int(x), int(y))\n    a = input()\n    b = input()\n    arr = []\n    p = 0\n    for i in range(n):\n        if a[i] != b[i]:\n            arr.append(i)\n            p += 1\n    if p % 2:\n        print(-1)\n        continue\n    if p == 2 and n >= 5 and (arr[0] == arr[1] - 1):\n        print(min(x, 2 * y))\n    elif p == 2 and n == 2 or (n == 3 and arr[0] == arr[1] - 1):\n        print(x)\n    elif p == 2 and arr[0] == arr[1] - 1:\n        if arr == [1, 2]:\n            print(x)\n        else:\n            print(min(x, 2 * y))\n    else:\n        print(y * p // 2)", "for _ in range(int(input())):\n    (n, x, way) = map(int, input().split())\n    a = input()\n    b = input()\n    l = []\n    for i in range(n):\n        if a[i] != b[i]:\n            l.append(i)\n    if len(l) % 2 == 0:\n        z = len(l)\n        if z == 0:\n            print(0)\n        elif z == 2:\n            if abs(l[1] - l[0]) == 1:\n                print(min(x, 2 * way))\n            else:\n                print(way)\n        else:\n            print(z // 2 * way)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    s1 = input()\n    s2 = input()\n    temp = []\n    for i in range(len(s1)):\n        if s1[i] != s2[i]:\n            temp.append(i)\n    if len(temp) % 2 == 1:\n        print(-1)\n    elif len(temp) == 2:\n        if temp[0] + 1 == temp[1]:\n            print(min(x, 2 * y))\n        else:\n            print(y)\n    else:\n        print(y * len(temp) // 2)", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    a = input()\n    b = input()\n    l = []\n    for i in range(n):\n        if a[i] != b[i]:\n            l.append(i)\n    if len(l) % 2 == 0:\n        z = len(l)\n        if z == 0:\n            print(0)\n        elif z == 2:\n            if abs(l[1] - l[0]) == 1:\n                print(min(x, 2 * y))\n            else:\n                print(y)\n        else:\n            print(z // 2 * y)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    a = input()\n    b = input()\n    l = []\n    for i in range(n):\n        if a[i] != b[i]:\n            l.append(i)\n    if len(l) % 2 == 0:\n        z = len(l)\n        if z == 0:\n            print(0)\n        elif z == 2:\n            if abs(l[1] - l[0]) == 1:\n                print(min(x, 2 * y))\n            else:\n                print(y)\n        else:\n            print(z // 2 * y)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    a = input()\n    b = input()\n    l = []\n    for i in range(n):\n        if a[i] != b[i]:\n            l.append(i)\n    if len(l) % 2 == 0:\n        z = len(l)\n        if z == 0:\n            print(0)\n        elif z == 2:\n            if abs(l[1] - l[0]) == 1:\n                print(min(x, 2 * y))\n            else:\n                print(y)\n        else:\n            print(z // 2 * y)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    l1 = [int(z) for z in list(input())]\n    l2 = [int(z) for z in list(input())]\n    changes = 0\n    changes_ind = []\n    out = 0\n    for v in range(n):\n        if l1[v] != l2[v]:\n            changes += 1\n            changes_ind.append(v)\n    if changes % 2:\n        print(-1)\n        continue\n    if not changes:\n        print(0)\n        continue\n    changes_ind_len = len(changes_ind)\n    if changes_ind_len == 2 and abs(changes_ind[0] - changes_ind[1]) == 1:\n        out = min(x, 2 * y)\n    else:\n        out = changes_ind_len // 2 * y\n    print(out)", "t = int(input())\nfor i in range(t):\n    (n, x, y) = map(int, input().split(' '))\n    a = [int(i) for i in input()]\n    b = [int(i) for i in input()]\n    sum = 0\n    flag = 0\n    found = 0\n    for i in range(n):\n        if a[i] - b[i] != 0:\n            sum += 1\n            if flag == 1:\n                found = 1\n            else:\n                flag = 1\n        else:\n            flag = 0\n    if sum % 2 == 1:\n        print('-1')\n        continue\n    if sum == 2 and found == 1:\n        if x > 2 * y:\n            print(2 * y)\n        else:\n            print(x)\n    elif sum == 2 and found == 0:\n        print(y)\n    else:\n        print(int(sum / 2 * y))", "t = eval(input())\nfor i in range(t):\n    (n, x, y) = map(int, input().split())\n    a = input()\n    b = input()\n    ind = []\n    for i in range(n):\n        if a[i] != b[i]:\n            ind.append(i)\n    if len(ind) % 2 == 1:\n        print(-1)\n    else:\n        l = len(ind)\n        if l != 2 or ind[0] + 1 != ind[1]:\n            print(y * l // 2)\n        else:\n            print(min(x, 2 * y))", "for mak in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    Flag = 0\n    s = input()\n    b = input()\n    l = []\n    for i in range(n):\n        if s[i] != b[i]:\n            l.append(i)\n    if len(l) % 2 == 0:\n        has = len(l)\n        if has == 0:\n            print(0)\n            Flag += 2\n        elif has == 2:\n            if abs(l[1] - l[0]) == 1:\n                print(min(x, 2 * y))\n            else:\n                Flag += 3\n                print(y)\n        else:\n            print(has // 2 * y)\n    else:\n        print(-1)", "for loop in range(int(input())):\n    (name, x, y) = map(int, input().split())\n    Flag = 0\n    Flag7 = 0\n    s = input()\n    b = input()\n    l = []\n    for i in range(name):\n        if s[i] != b[i]:\n            l.append(i)\n            Flag7 += 9\n    if len(l) % 2 == 0:\n        has = len(l)\n        if has == 0:\n            print(0)\n            Flag += 2\n        elif has == 2:\n            if abs(l[1] - l[0]) == 1:\n                print(min(x, 2 * y))\n            else:\n                Flag += 3\n                print(y)\n                Flag7 += 6\n        else:\n            print(has // 2 * y)\n    else:\n        print(-1)", "t = int(input().strip())\n\ndef solve(n, x, y, a, b):\n    re = 0\n    cab = a.count('1') + b.count('1')\n    place = []\n    k = 0\n    if cab % 2 == 1:\n        return -1\n    cab = 0\n    for i in range(n):\n        if a[i] != b[i]:\n            if a[i] == '1':\n                cab += 1\n            if b[i] == '1':\n                cab += 1\n            k += 1\n            if len(place) < 2:\n                place.append(i)\n    if k == 2:\n        if cab == 2 and place[1] - place[0] == 1:\n            return min(x, 2 * y)\n    return int(k / 2) * y\nfor _ in range(t):\n    (n, x, y) = map(int, input().split(' '))\n    a = list(input())\n    b = list(input())\n    print(solve(n, x, y, a, b))", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    a = input()\n    b = input()\n    yo = []\n    for i in range(n):\n        if a[i] != b[i]:\n            yo.append(i)\n    if len(yo) % 2:\n        print(-1)\n    elif len(yo) == 2:\n        if yo[1] == yo[0] + 1:\n            print(min(x, 2 * y))\n        else:\n            print(y)\n    else:\n        print(len(yo) // 2 * y)", "for _ in range(int(input())):\n    (inp_n, i_x, sol) = map(int, input().split())\n    a = input()\n    b = input()\n    l = []\n    for i in range(inp_n):\n        if a[i] != b[i]:\n            l.append(i)\n    if len(l) % 2 == 0:\n        z = len(l)\n        if z == 0:\n            print(0)\n        elif z == 2:\n            if abs(l[1] - l[0]) == 1:\n                print(min(i_x, 2 * sol))\n            else:\n                print(sol)\n        else:\n            print(z // 2 * sol)\n    else:\n        print(-1)", "def get_numbers_list(string_list):\n    string_split_list = string_list.split()\n    number_list = []\n    for element in string_split_list:\n        number_list.append(int(element))\n    return number_list\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        (n, x, y) = map(int, input().split())\n        a = int(input(), 2)\n        b = a ^ int(input(), 2)\n        c = bin(b).count('1')\n        if c % 2:\n            print(-1)\n        elif c == 2 and b & b << 1:\n            print(min(2 * y, x))\n        else:\n            print(y * c // 2)\nmain()", "t = int(input().strip())\n\ndef solve(n, x, y, a, b):\n    cab = a.count('1') + b.count('1')\n    place = []\n    k = 0\n    if cab % 2 == 1:\n        return -1\n    cab = 0\n    for i in range(n):\n        if a[i] != b[i]:\n            if a[i] == '1':\n                cab += 1\n            if b[i] == '1':\n                cab += 1\n            k += 1\n            if len(place) < 2:\n                place.append(i)\n    if k == 2:\n        if cab == 2 and place[1] - place[0] == 1:\n            return min(x, 2 * y)\n    return k // 2 * y\nfor _ in range(t):\n    (n, x, y) = map(int, input().split(' '))\n    a = list(input())\n    b = list(input())\n    print(solve(n, x, y, a, b))", "for mak in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    Flag = 0\n    s = input()\n    p = input()\n    m = []\n    for i in range(n):\n        if s[i] != p[i]:\n            m.append(i)\n    if len(m) % 2 == 0:\n        has = len(m)\n        if has == 0:\n            print(0)\n            Flag += 2\n        elif has == 2:\n            if abs(m[1] - m[0]) == 1:\n                print(min(a, 2 * b))\n            else:\n                Flag += 3\n                print(b)\n        else:\n            print(has // 2 * b)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    (n, x, y) = map(int, input().split())\n    a = input()\n    b = input()\n    k = list()\n    r = 0\n    for j in range(n):\n        if a[j] != b[j]:\n            k.append(j)\n    if len(k) % 2 != 0:\n        print(-1)\n    else:\n        for f in range(0, len(k), 2):\n            if x < y or len(k) == 2:\n                if k[f + 1] - k[f] == 1:\n                    r += min(y * 2, x)\n                else:\n                    r += y\n            else:\n                r += y\n        print(r)", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    a = int(input(), 2)\n    b = a ^ int(input(), 2)\n    c = bin(b)[2:].count('1')\n    if c % 2:\n        print(-1)\n    elif c == 2 and b & b << 1:\n        print(min(2 * y, x))\n    else:\n        print(y * c // 2)", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    a = input()\n    b = input()\n    changes = []\n    for i in range(n):\n        if a[i] != b[i]:\n            changes.append(i)\n    k = len(changes)\n    if k % 2 == 1:\n        print(-1)\n        continue\n    start = 0\n    end = k - 1\n    if not k:\n        print(0)\n        continue\n    if len(changes) > 2:\n        print(len(changes) // 2 * y)\n        continue\n    if changes[1] - changes[0] == 1:\n        if x > 2 * y:\n            if n > 4:\n                print(2 * y)\n            elif n == 4 and changes[0] != 1:\n                print(2 * y)\n            else:\n                print(x)\n        else:\n            print(x)\n    else:\n        print(y)", "for _ in range(int(input())):\n    (n, x, y) = list(map(int, input().split()))\n    a = list(input())\n    b = list(input())\n    n_d = 0\n    r = 0\n    d = []\n    for i in range(n):\n        if a[i] != b[i]:\n            d.append(i)\n            n_d += 1\n    if n_d % 2 == 0:\n        if n_d == 2 and d[1] - d[0] == 1:\n            r += min(x, y * 2)\n        else:\n            r += y * (len(d) // 2)\n        print(r)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, x, z) = map(int, input().split())\n    a = int(input(), 2)\n    b = a ^ int(input(), 2)\n    c = bin(b)[2:].count('1')\n    if c % 2:\n        print(-1)\n    elif c == 2 and b & b << 1:\n        print(min(2 * z, x))\n    else:\n        print(z * c // 2)", "t = int(input())\nfor _ in range(t):\n    nxy = [int(i) for i in input().split()]\n    (n, x, y) = (nxy[0], nxy[1], nxy[2])\n    a = [int(i) for i in input()]\n    b = [int(i) for i in input()]\n    if a == b:\n        print(0)\n        continue\n    (k, c) = (0, 0)\n    for i in range(n):\n        if a[i] != b[i]:\n            k += 1\n            c = i\n    if k % 2 == 1:\n        print(-1)\n        continue\n    if k != 2:\n        print(y * k // 2)\n        continue\n    if a[c - 1] == b[c - 1]:\n        print(y)\n        continue\n    if x <= 2 * y:\n        print(x)\n        continue\n    if n <= 3:\n        print(x)\n        continue\n    if n == 4 and c == 2:\n        print(min(x, 3 * y))\n    print(2 * y)", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    a = str(input())\n    b = str(input())\n    d = []\n    for i in range(n):\n        if int(a[i]) ^ int(b[i]) == 1:\n            d.append(i)\n    m = len(d)\n    if m == 2:\n        if d[0] + 1 == d[1]:\n            print(min(2 * y, x))\n        else:\n            print(y)\n    elif m % 2 != 0:\n        print(-1)\n    else:\n        print(m // 2 * y)", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    a = input()\n    b = input()\n    c = ''\n    k = min(x, 2 * y)\n    for i in range(n):\n        if a[i] == b[i]:\n            c += '0'\n        else:\n            c += '1'\n    if c.count('1') % 2:\n        print(-1)\n    elif c.count('1') == 0:\n        print(0)\n    else:\n        d = c.count('1')\n        l = c.index('1')\n        c1 = c[::-1]\n        r = n - c1.index('1') - 1\n        if d == 2:\n            if r - l == 1:\n                print(min(x, 2 * y))\n            else:\n                print(min((r - l) * x, y))\n        else:\n            print(y * d // 2)", "t = int(input())\nfor i in range(t):\n    (n, x, y) = map(int, input().split(' '))\n    a = input()\n    b = input()\n    c = list(map(lambda x: x[0] != x[1], zip(a, b)))\n    if sum(c) % 2 == 1:\n        print(-1)\n    elif sum(c) == 0:\n        print(0)\n    elif n == 2:\n        print(x)\n    elif n == 3:\n        if c[1]:\n            print(x)\n        else:\n            print(min(2 * x, y))\n    elif n == 4:\n        if sum(c) == 4:\n            print(min(2 * y, 2 * x))\n        elif c[1] and c[2]:\n            print(min(x, 3 * y))\n        else:\n            print(min(x, 2 * y))\n    elif sum(c) == 2:\n        bb = False\n        for (j1, j2) in zip(c, c[1:]):\n            if j1 and j2:\n                bb = True\n        if bb:\n            print(min(x, 2 * y))\n        else:\n            print(min(y, x))\n    else:\n        print(y * (sum(c) // 2))", "t = int(input())\nfor _ in range(t):\n    (n, x, y) = map(int, input().split())\n    a = input()\n    b = input()\n    c = [0] * n\n    count = 0\n    last_occurence = -1\n    for i in range(n):\n        if a[i] != b[i]:\n            c[i] = 1\n            count += 1\n            last_occurence = i\n    if count % 2 != 0:\n        print(-1)\n    elif count == 2:\n        if c[last_occurence - 1] == 1:\n            if 2 * y < x and n >= 4:\n                print(2 * y)\n            else:\n                print(x)\n        else:\n            print(y)\n    else:\n        print(y * (count // 2))", "def miis():\n    return map(int, input().split())\nfor _ in range(int(input())):\n    (n, x, y) = miis()\n    a = list(map(int, list(input())))\n    b = list(map(int, list(input())))\n    sma = sum(a)\n    smb = sum(b)\n    if (n - sum(a)) % 2 != (n - sum(b)) % 2:\n        print(-1)\n        continue\n    ans = 0\n    f = []\n    for i in range(n):\n        if a[i] != b[i]:\n            f.append(i)\n    if len(f) == 2 and f[1] - f[0] == 1:\n        ans += min(2 * y, x)\n    else:\n        ans += y * len(f) // 2\n    print(ans)", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    a = input()\n    b = input()\n    l = []\n    for i in range(n):\n        if a[i] != b[i]:\n            l.append(i)\n    if len(l) % 2 == 1:\n        print(-1)\n        continue\n    if len(l) == 2:\n        if l[0] + 1 == l[1]:\n            if n == 2 or n == 3:\n                print(x)\n            elif n == 4:\n                if l[0] == 1:\n                    print(x)\n                else:\n                    print(min(2 * y, x))\n            else:\n                print(min(2 * y, x))\n        else:\n            print(y)\n        continue\n    print(len(l) // 2 * y)", "for _ in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    a = input()\n    b = input()\n    if a == b:\n        print(0)\n        continue\n    yo = []\n    for i in range(n):\n        if a[i] != b[i]:\n            yo.append(i + 1)\n    if len(yo) % 2:\n        print(-1)\n    elif len(yo) == 2:\n        if yo[0] == yo[1] - 1:\n            print(min(x, 2 * y))\n        else:\n            print(y)\n    else:\n        print(len(yo) // 2 * y)", "from typing import List, Dict, Set, Sequence, Tuple, Deque, AnyStr, Optional\nfrom collections import deque, Counter, OrderedDict\ncase_num = int(input())\nfor case_index in range(case_num):\n    (n, x, y) = map(int, input().split(' '))\n    s1 = input()\n    s2 = input()\n    different = 0\n    a = -1\n    b = -1\n    for i in range(n):\n        if s1[i] != s2[i]:\n            different += 1\n            if a == -1:\n                a = i\n            else:\n                b = i\n    if different % 2 != 0:\n        print(-1)\n    elif different == 2 and a == b - 1:\n        print(min(x, 2 * y))\n    else:\n        print(different // 2 * y)"]