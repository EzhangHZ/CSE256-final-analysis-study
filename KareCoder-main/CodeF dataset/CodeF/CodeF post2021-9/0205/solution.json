["import sys\nnum_of_cases = int(sys.stdin.readline().rstrip())\nfor _ in range(num_of_cases):\n    number_of_pieces = eval(sys.stdin.readline().rstrip())\n    pieces = []\n    (x, y) = (0, 0)\n    for _ in range(number_of_pieces):\n        (first, second) = [int(i) for i in sys.stdin.readline().rstrip().split()]\n        if first > second:\n            x += second\n            if first > y:\n                y = first\n        else:\n            x += first\n            if second > y:\n                y = second\n    print(x * 2 + y * 2)", "import sys\n\ndef read():\n    return [int(x) for x in sys.stdin.readline().split(' ')]\n[t] = read()\nfor _ in range(t):\n    [n] = read()\n    x = 0\n    y = 0\n    for _ in range(n):\n        [a, b] = read()\n        if a > b:\n            (a, b) = (b, a)\n        x += a\n        if y < b:\n            y = b\n    print(2 * (y + x))", "def main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        para = 0\n        maximum = 0\n        for j in range(n):\n            (temp1, temp2) = input().split(' ')\n            temp1 = int(temp1)\n            temp2 = int(temp2)\n            if temp1 < temp2:\n                maxi = temp2\n                mini = temp1\n            else:\n                maxi = temp1\n                mini = temp2\n            if maximum < maxi:\n                maximum = maxi\n            para += mini * 2\n        para += maximum * 2\n        print(para)\nmain()", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    m = 0\n    c = 0\n    for zz in range(n):\n        x = list(map(int, input().split()))\n        x.sort()\n        c += x[0]\n        m = max(m, x[1])\n    print((c + m) * 2)", "def cheeseadd():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        (h, l) = (0, 0)\n        for j in range(n):\n            para = input().split(' ')\n            (a, b) = (int(para[0]), int(para[1]))\n            if a > b:\n                h = max(h, a)\n                l += b\n            else:\n                h = max(h, b)\n                l += a\n        res = (h + l) * 2\n        print(res)\ncheeseadd()", "from re import M\nfrom sys import stdin\n\ndef readint():\n    return int(stdin.readline())\n\ndef readarray(typ):\n    return list(map(typ, stdin.readline().split()))\n\ndef readmatrix(n):\n    M = []\n    for _ in range(n):\n        row = readarray(int)\n        assert len(row) == n\n        M.append(row)\n    return M\n\ndef mult(M, v):\n    n = len(M)\n    return [sum((M[i][j] * v[j] for j in range(n))) for i in range(n)]\nt = readint()\nfor _ in range(t):\n    n = readint()\n    ans = 0\n    maxx = []\n    for _ in range(n):\n        arr = readarray(int)\n        if arr[0] >= arr[1]:\n            ans += arr[1]\n            maxx.append(arr[0])\n        else:\n            ans += arr[0]\n            maxx.append(arr[1])\n    print(ans * 2 + max(maxx) * 2)", "def cheeseadd():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        (h, l) = (0, 0)\n        for j in range(n):\n            para = input().split(' ')\n            (a, b) = (int(para[0]), int(para[1]))\n            if a > b:\n                h = max(h, a)\n                l += b\n            else:\n                h = max(h, b)\n                l += a\n        res = (h + l) * 2\n        print(res)\ncheeseadd()", "for _ in range(int(input())):\n    res = 0\n    m = 0\n    for i in range(int(input())):\n        (a, b) = [int(j) for j in input().split()]\n        if a < b:\n            res += a\n            if m < b:\n                m = b\n        else:\n            res += b\n            if m < a:\n                m = a\n    print((res + m) * 2)", "import collections\nimport math\nimport sys\nfrom queue import PriorityQueue\n\ndef main(testnumber):\n    n = int(input())\n    sum = 0\n    mx = -10\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        if a > b:\n            (a, b) = (b, a)\n        sum += a\n        mx = max(mx, b)\n    print((sum + mx) * 2)\nt = int(input())\ncnt = 1\nwhile t > 0:\n    main(cnt)\n    cnt += 1\n    t -= 1", "for t in range(int(input())):\n    n = int(input())\n    p = 0\n    max_b = 0\n    for n in range(n):\n        (a, b) = [int(a) for a in input().split()]\n        if a > b:\n            p += b\n            if a > max_b:\n                max_b = a\n        else:\n            p += a\n            if b > max_b:\n                max_b = b\n    p += max_b\n    p *= 2\n    print(p)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    length = 0\n    breadth = 0\n    for __ in range(n):\n        (x, y) = map(int, input().split())\n        if x < y:\n            (x, y) = (y, x)\n        if x > length:\n            length = x\n        breadth = breadth + y\n    print(2 * (length + breadth))", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    m1 = 0\n    s = 0\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        if x >= y:\n            s += y\n            if x > m1:\n                m1 = x\n        else:\n            s += x\n            if y > m1:\n                m1 = y\n    print(m1 * 2 + s * 2)", "def Jumbo_Extra_Cheese():\n    t = int(input())\n    for i in range(t):\n        slices = int(input())\n        array_x = []\n        array_y = []\n        for j in range(slices):\n            (n, m) = map(int, input().split())\n            if n < m:\n                (n, m) = (m, n)\n            array_x.append(m)\n            array_y.append(n)\n        print(max(array_y) * 2 + sum(array_x) * 2)\n\ndef main():\n    Jumbo_Extra_Cheese()\nmain()", "def cheese():\n    x = int(input())\n    widht = []\n    height = []\n    for i in range(x):\n        (y, z) = map(int, input().split())\n        if y > z:\n            (y, z) = (z, y)\n        widht.append(y)\n        height.append(z)\n    print(sum(widht) * 2 + max(height) * 2)\n\ndef main():\n    test_cases = int(input())\n    for i in range(test_cases):\n        cheese()\nmain()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = 0\n    max = 0\n    for i in range(n):\n        (p, q) = map(int, input().split())\n        if p < q:\n            s = s + p\n            if q > max:\n                max = q\n        else:\n            s = s + q\n            if p > max:\n                max = p\n    s = 2 * s\n    print(s + 2 * max)", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    h = 0\n    l = 0\n    for _ in range(n):\n        (x, y) = map(int, sys.stdin.readline().split())\n        (x, y) = (max(x, y), min(x, y))\n        h += y\n        l = max(x, l)\n    print((h + l) * 2)", "def main():\n    n = int(input())\n    for i in range(n):\n        m = int(input())\n        s = 0\n        b = 0\n        for j in range(m):\n            k = input()\n            a = list(map(int, k.split()))\n            if a[0] < a[1]:\n                s += a[0]\n                if b < a[1]:\n                    b = a[1]\n            else:\n                s += a[1]\n                if b < a[0]:\n                    b = a[0]\n        print(2 * s + 2 * b)\nmain()", "t = int(input())\nfor tst in range(t):\n    n = int(input())\n    p = 0\n    h = 0\n    for i in range(n):\n        (a, b) = [int(w) for w in input().split()]\n        if a < b:\n            p += a\n            if h < b:\n                h = b\n        else:\n            p += b\n            if h < a:\n                h = a\n    p += h\n    p *= 2\n    print(p)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    ans = 0\n    a = [0]\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        if x > y:\n            (x, y) = (y, x)\n        ans += 2 * x\n        a.append(y)\n    a.sort()\n    a.append(0)\n    for i in range(1, n + 2):\n        ans += abs(a[i] - a[i - 1])\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    per = 0\n    max = 0\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        if a > b:\n            per += b * 2\n            if a > max:\n                max = a\n            continue\n        per += a * 2\n        if b > max:\n            max = b\n    per += max * 2\n    print(per)", "t = int(input())\nfor t1 in range(t):\n    n = int(input())\n    peri = 0\n    max = 0\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        if a < b:\n            (a, b) = (b, a)\n        peri += 2 * b\n        if a > max:\n            max = a\n    peri += 2 * max\n    print(peri)", "import sys\nimport math\nfrom math import gcd, sqrt, log2, ceil, floor\nimport heapq as hq\nfrom bisect import bisect_right, bisect_left, bisect\nimport itertools\nfrom sys import stdin, stdout, setrecursionlimit\nMOD = int(1000000000.0) + 7\nalp = 'abcdefghijklmnopqrstuvwxyz'\nT = 1\nT = int(stdin.readline())\nfor _ in range(T):\n    n = int(stdin.readline())\n    A = []\n    B = []\n    for i in range(n):\n        k = list(map(int, stdin.readline().rstrip().split()))\n        a = min(k)\n        b = max(k)\n        A.append(a)\n        B.append(b)\n    print(2 * (sum(A) + max(B)))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    S = 0\n    M = 0\n    for i in range(n):\n        (a, b) = list(map(int, input().split()))\n        if a >= b:\n            S += b\n            if a > M:\n                M = a\n        else:\n            S += a\n            if b > M:\n                M = b\n    answer = 2 * S + 2 * M\n    print(answer)", "for _ in range(int(input())):\n    n = int(input())\n    s = []\n    m = []\n    for _ in range(n):\n        (a, b) = map(int, input().split())\n        if a > b:\n            s.append(b)\n            m.append(a)\n        else:\n            s.append(a)\n            m.append(b)\n    print(2 * sum(s) + 2 * max(m))", "t = int(input())\nfor i in range(1, t + 1):\n    n = int(input())\n    j = 0\n    L = []\n    for i in range(1, n + 1):\n        (a, b) = [int(a) for a in input().split()]\n        if a >= b:\n            j = j + b\n            L.append(a)\n        else:\n            j = j + a\n            L.append(b)\n    ma = max(L)\n    print(2 * j + 2 * ma)", "def test_case():\n    n = int(input())\n    top = 0\n    side = 0\n    for _ in range(n):\n        (x, y) = map(int, input().split())\n        top += min(x, y)\n        side = max(side, x, y)\n    print(2 * (top + side))\n\ndef main():\n    for _ in range(int(input())):\n        test_case()\nmain()", "for i in range(int(input())):\n    ss = 0\n    sb = 0\n    woof = []\n    for j in range(int(input())):\n        (a, b) = input().split()\n        a = int(a)\n        b = int(b)\n        woof.append(a)\n        woof.append(b)\n        sb += min(a, b)\n    print(max(woof) * 2 + sb * 2)", "for _ in range(int(input())):\n    res = 0\n    m = 0\n    for i in range(int(input())):\n        (a, b) = [int(j) for j in input().split()]\n        if a < b:\n            res += a\n            if m < b:\n                m = b\n        else:\n            res += b\n            if m < a:\n                m = a\n    print((res + m) * 2)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    ma = 0\n    su = 0\n    for j in range(n):\n        max_b = 0\n        l = list(map(int, input().split()))\n        a = l[0]\n        b = l[1]\n        if a > b:\n            max_b = a\n            su += b\n        else:\n            max_b = b\n            su += a\n        if ma < max_b:\n            ma = max_b\n    print(2 * (ma + su))", "import sys\n\ndef solve_problem():\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n = int(sys.stdin.readline())\n        sum = 0\n        arr = []\n        for i in range(n):\n            (a, b) = map(int, sys.stdin.readline().split())\n            sum += 2 * min(a, b)\n            arr.append(max(a, b))\n        arr.sort()\n        sum += arr[0] + arr[-1]\n        for i in range(1, len(arr)):\n            sum += arr[i] - arr[i - 1]\n        print(sum)\nsolve_problem()", "for _ in range(int(input())):\n    n = int(input())\n    (ans, mx) = (0, 0)\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        if x > y:\n            (x, y) = (y, x)\n        mx = max(mx, y)\n        ans += x\n    ans += mx\n    ans *= 2\n    print(ans)", "for _ in range(int(input())):\n    a = -1\n    ans = 0\n    n = int(input())\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        if x > y:\n            ans += 2 * y\n            a = max(a, x)\n        else:\n            ans += 2 * x\n            a = max(a, y)\n    ans += a * 2\n    print(ans)", "for _ in range(int(input())):\n    ma = 0\n    s = 0\n    for i in range(int(input())):\n        (x, y) = map(int, input().split())\n        ma = max(x, y, ma)\n        s += min(x, y)\n    print(ma * 2 + s * 2)", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    (x1, x2) = ([], [])\n    for j in range(m):\n        t = [int(k) for k in input().split()]\n        if t[0] > t[1]:\n            x1.append(t[0])\n            x2.append(t[1])\n        else:\n            x1.append(t[1])\n            x2.append(t[0])\n    t2 = sum(x2) + max(x1)\n    print(t2 * 2)", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    h = 0\n    l = 0\n    for _ in range(n):\n        (x, y) = map(int, sys.stdin.readline().split())\n        (x, y) = (max(x, y), min(x, y))\n        h += y\n        l = max(x, l)\n    print((h + l) * 2)", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    for _ in range(n):\n        (ai, bi) = map(int, input().split())\n        if ai > bi:\n            l.append((ai, bi))\n        else:\n            l.append((bi, ai))\n    p = 2 * sum([c[1] for c in l]) + 2 * max([c[0] for c in l])\n    print(p)", "for _ in range(int(input())):\n    n = int(input())\n    x = 0\n    m = 0\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        x += min(a, b)\n        m = max(m, a, b)\n    print(2 * (m + x))", "for _ in range(int(input())):\n    n = int(input())\n    x = 0\n    m = 0\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        x += min(a, b)\n        m = max(m, a, b)\n    print(2 * (m + x))", "def solution(ln: list, length: int):\n    max_height = 0\n    total_width = 0\n    for item in ln:\n        if item[1] > item[0]:\n            item = (item[1], item[0])\n        if item[0] > max_height:\n            max_height = item[0]\n        total_width += item[1]\n    return 2 * (max_height + total_width)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    ln = [tuple(map(int, input().split())) for x in range(n)]\n    print(solution(ln, n))", "for _ in range(int(input())):\n    n = int(input())\n    (ans, mx) = (0, 0)\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        if x > y:\n            (x, y) = (y, x)\n        ans += 2 * x\n        mx = max(mx, y)\n    ans += 2 * mx\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    m = 0\n    s = 0\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        if x > y:\n            m = max(m, x)\n            s += y\n        else:\n            m = max(m, y)\n            s += x\n    print(2 * (m + s))", "for _ in range(int(input())):\n    n = int(input())\n    ans = 0\n    maxi = 0\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        ans += min(a, b)\n        maxi = max(maxi, a, b)\n    print((ans + maxi) * 2)", "t = int(input())\nfor a1 in range(t):\n    x = int(input())\n    l1 = []\n    l2 = []\n    for c in range(x):\n        (a, b) = tuple([int(a) for a in input().split()])\n        if a > b:\n            l1.append(a)\n            l2.append(b)\n        else:\n            l1.append(b)\n            l2.append(a)\n    minsum = sum(l2)\n    print(2 * (max(l1) + minsum))", "def alg(mass):\n    for arr_ms in mass:\n        arr = arr_ms['mass']\n        x_arr = arr_ms['x']\n        sm = arr[len(arr) - 1]\n        a = arr[0]\n        for index in range(0, len(arr) - 1):\n            v = arr[index + 1] - a\n            a = arr[index + 1]\n            arr[index + 1] = v\n        print(sm + sum(arr) + x_arr)\n\ndef parsing():\n    n = int(input())\n    mass = []\n    while n > 0:\n        k = int(input())\n        sm_val = 0\n        res = []\n        while k > 0:\n            st = input().split(' ')\n            (a, b) = (int(st[0]), int(st[1]))\n            if a > b:\n                (a, b) = (b, a)\n            sm_val += a\n            k -= 1\n            res.append(b)\n        res.sort()\n        mass.append({'mass': res, 'x': 2 * sm_val})\n        n -= 1\n    return mass\nres = parsing()\nalg(res)", "from os import TMP_MAX\nt = int(input())\nwhile t >= 1:\n    n = int(input())\n    mx = 0\n    res = 0\n    for i in range(0, n):\n        (a, b) = map(int, input().split(' '))\n        if b > a:\n            tmp = a\n            a = b\n            b = tmp\n        mx = max(mx, a)\n        res = res + b\n    print((res + mx) * 2)\n    t = t - 1", "from os import TMP_MAX\nt = int(input())\nwhile t >= 1:\n    n = int(input())\n    mx = 0\n    res = 0\n    for i in range(0, n):\n        (a, b) = map(int, input().split(' '))\n        if b > a:\n            tmp = a\n            a = b\n            b = tmp\n        mx = max(mx, a)\n        res = res + b\n    print((res + mx) * 2)\n    t = t - 1", "for _ in range(int(input())):\n    x = []\n    y = []\n    for i in range(int(input())):\n        n = list(map(int, input().split()))\n        if n[0] < n[1]:\n            (n[0], n[1]) = (n[1], n[0])\n        x.append(n[1])\n        y.append(n[0])\n    print(max(y) * 2 + sum(x) * 2)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    cnt = 0\n    mx = 0\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        if b < a:\n            cnt += 2 * b\n            mx = max(mx, a)\n        else:\n            cnt += 2 * a\n            mx = max(mx, b)\n    cnt += 2 * mx\n    print(cnt)", "I = lambda : int(input())\nIs = lambda : map(int, input().split())\nLi = lambda : list(map(int, input().split()))\n\ndef solve():\n    n = I()\n    max_val = 0\n    ans = 0\n    for _ in range(n):\n        (a, b) = Is()\n        max_val = max(max_val, a, b)\n        ans += min(a, b)\n    ans += max_val\n    print(ans * 2)\n    return 1\nt = I()\nwhile t:\n    solve()\n    t -= 1", "n = int(input())\nfor i in range(0, n):\n    peri = 0\n    maxi = 0\n    p = int(input())\n    for i in range(0, p):\n        List = input().split()\n        (a, b) = (int(List[0]), int(List[1]))\n        peri += min(a, b)\n        if maxi < max(a, b):\n            maxi = max(a, b)\n        else:\n            pass\n    print(2 * (peri + maxi))", "for _ in range(int(input())):\n    (mn, mx) = (0, 0)\n    for _ in range(int(input())):\n        (a, b) = map(int, input().split())\n        mn += min(a, b)\n        mx = max(a, b, mx)\n    print((mn + mx) * 2)", "for _ in range(int(input())):\n    n = int(input())\n    (ans, mx) = (0, 0)\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        if x > y:\n            (x, y) = (y, x)\n        ans += 2 * x\n        mx = max(mx, y)\n    ans += 2 * mx\n    print(ans)", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    maxs = 0\n    tot = 0\n    for i in range(n):\n        (ai, bi) = map(int, input().split())\n        maxs = max(maxs, ai, bi)\n        tot += min(ai, bi)\n    print(2 * tot + 2 * maxs)", "t = int(input())\nfor j in range(0, t):\n    n = int(input())\n    s = 0\n    m = 0\n    for k in range(0, n):\n        (a, b) = map(int, input().split())\n        s += min(a, b)\n        if max(a, b) > m:\n            m = max(a, b)\n    print(2 * (s + m))", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    p = 0\n    y = []\n    for _ in range(n):\n        (x_1, y_1) = map(int, input().split())\n        p += min(x_1, y_1)\n        y.append(max(x_1, y_1))\n    p *= 2\n    y = sorted(y)\n    back = 0\n    for i in y:\n        p += i - back\n        back = i\n    p += y[-1]\n    print(p)", "t = int(input())\nfor _ in range(t):\n    x = 0\n    y = 0\n    n = int(input())\n    for _ in range(n):\n        (a, b) = map(int, input().split())\n        x += min(a, b)\n        y = max(y, a, b)\n    print(2 * x + 2 * y)", "for CASE in range(int(input())):\n    (w, h) = (0, 0)\n    for i in range(int(input())):\n        (a, b) = map(int, input().split())\n        w += min(a, b)\n        h = max(h, a, b)\n    print((w + h) * 2)", "for _ in range(int(input())):\n    n = int(input())\n    (x, y) = (0, 0)\n    for i in range(n):\n        z = [*map(int, input().split())]\n        x += min(z)\n        y = max(y, *z)\n    print(2 * (x + y))", "for _ in range(int(input())):\n    n = int(input())\n    k = 0\n    mx = 0\n    for __ in range(n):\n        (x, y) = map(int, input().split())\n        k += min(x, y)\n        mx = max(mx, x, y)\n    print(2 * mx + 2 * k)", "for _ in range(int(input())):\n    n = int(input())\n    l1 = []\n    l2 = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        l1.append(max(a, b))\n        l2.append(min(a, b))\n    print(2 * (sum(l2) + max(l1)))", "for _ in range(int(input())):\n    n = int(input())\n    sum_val = 0\n    max_val = set()\n    for x in range(n):\n        (a, b) = map(int, input().split())\n        c = max(a, b)\n        max_val.add(c)\n        sum_val += a + b - c\n    print((max(max_val) + sum_val) * 2)", "casecnt = int(input())\nfor case in range(casecnt):\n    n = int(input())\n    maxs = 0\n    p = 0\n    for i in range(n):\n        (x, y) = [int(j) for j in input().split()]\n        if x > y:\n            maxs = max(x, maxs)\n            p += y + y\n        else:\n            maxs = max(y, maxs)\n            p += x + x\n    print(p + maxs + maxs)", "for _ in range(int(input())):\n    n = int(input())\n    m = 0\n    s = 0\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        m = max(m, a, b)\n        s += min(a, b) * 2\n    s += m * 2\n    print(s)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    ans = 0\n    maxi = 0\n    for i in range(n):\n        (p, q) = map(int, input().split())\n        c = max(p, q)\n        ans += min(p, q)\n        if c > maxi:\n            maxi = c\n    fin = 2 * (ans + maxi)\n    print(fin)", "for _ in range(int(input())):\n    n = int(input())\n    x = 0\n    y = 0\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        if max(a, b) > y:\n            y = max(a, b)\n        x += min(a, b)\n    print(2 * x + 2 * y)", "for _ in range(int(input())):\n    (mn, mx) = (0, 0)\n    for _ in range(int(input())):\n        (a, b) = map(int, input().split())\n        mn += min(a, b)\n        mx = max(a, b, mx)\n    print((mn + mx) * 2)", "for _ in range(int(input())):\n    (mn, mx) = (0, 0)\n    for _ in range(int(input())):\n        (a, b) = map(int, input().split())\n        mn += min(a, b)\n        mx = max(a, b, mx)\n    print((mn + mx) * 2)", "for _ in range(int(input())):\n    x = 0\n    y = 0\n    for i in range(int(input())):\n        (dx, dy) = map(int, input().split())\n        x += min(dx, dy)\n        y = max(y, dx, dy)\n    print(2 * x + 2 * y)", "for _ in range(int(input())):\n    ma = 0\n    s = 0\n    for i in range(int(input())):\n        (x, y) = map(int, input().split())\n        ma = max(x, y, ma)\n        s += min(x, y)\n    print(ma * 2 + s * 2)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    mx = 0\n    k = 0\n    for __ in range(n):\n        (a, b) = map(int, input().split())\n        if max(a, b) > mx:\n            mx = max(a, b)\n        k += min(a, b)\n    print(2 * k + 2 * mx)", "test_cases = int(input())\nfor _ in range(test_cases):\n    n = int(input())\n    x = 0\n    m = 0\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        x += min(a, b)\n        m = max(m, a, b)\n    print(2 * (m + x))", "for CASE in range(int(input())):\n    (w, h) = (0, 0)\n    for i in range(int(input())):\n        (a, b) = map(int, input().split())\n        w += min(a, b)\n        h = max(h, a, b)\n    print((w + h) * 2)", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    x = 0\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        l.append(a)\n        l.append(b)\n    for i in range(0, n * 2 - 1, 2):\n        x += min(l[i], l[i + 1])\n    print(2 * x + 2 * max(l))", "for _ in range(int(input())):\n    n = int(input())\n    (H, L) = ([], [])\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        H.append(max(a, b))\n        L.append(min(a, b))\n    print(2 * (max(H) + sum(L)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr1 = []\n    arr2 = []\n    c = 0\n    if n != 1:\n        for i in range(n):\n            (a, b) = map(int, input().split())\n            arr1.append(min(a, b))\n            arr2.append(max(a, b))\n        c += sum(arr1) * 2\n        c += max(arr2) * 2\n        print(c)\n    else:\n        (a, b) = map(int, input().split())\n        print(2 * a + 2 * b)", "test_cases = int(input())\nfor _ in range(test_cases):\n    n = int(input())\n    x = 0\n    m = 0\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        x += min(a, b)\n        m = max(m, a, b)\n    print(2 * (m + x))", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    maxs = 0\n    tot = 0\n    for i in range(n):\n        (ai, bi) = map(int, input().split())\n        maxs = max(maxs, ai, bi)\n        tot += min(ai, bi)\n    print(2 * tot + 2 * maxs, flush=True)", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    l2 = []\n    for _ in range(n):\n        (a, b) = map(int, input().split())\n        l.append(min(a, b))\n        l2.append(max(a, b))\n    s = sum(l)\n    m = max(l2)\n    print(2 * (s + m))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    la = []\n    co = 0\n    for i in range(n):\n        (a, b) = map(int, input().strip().split())\n        (a, b) = (max(a, b), min(a, b))\n        co += 2 * b\n        la.append(a)\n    la.sort()\n    la.append(la[-1])\n    for i in range(n - 1, 0, -1):\n        la[i] -= la[i - 1]\n    co += sum(la)\n    print(co)", "for _ in range(int(input())):\n    k1 = 0\n    k2 = 0\n    for _ in range(int(input())):\n        (g, f) = map(int, input().split())\n        k1 += min(g, f)\n        k2 = max(k2, max(g, f))\n    if k2 == 0:\n        print('0')\n    else:\n        print(2 * (k1 + k2))", "t = int(input().strip())\nfor i in range(t):\n    n = int(input().strip())\n    val = -1\n    ans = 0\n    for j in range(n):\n        (x, y) = map(int, input().strip().split())\n        ans += min(x, y)\n        val = max(x, y, val)\n    print(2 * ans + 2 * val)", "for _ in range(int(input())):\n    (mn, mx) = ([], [])\n    for _ in range(int(input())):\n        (a, b) = map(int, input().split())\n        mn.append(min(a, b))\n        mx.append(max(a, b))\n    print((sum(mn) + max(mx)) * 2)", "n = int(input())\nfor i in range(n):\n    a1 = []\n    b1 = []\n    m = int(input())\n    for j in range(m):\n        (x, y) = map(int, input().split())\n        a1.append(max(x, y))\n        b1.append(min(x, y))\n    print(max(a1) * 2 + sum(b1) * 2)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = 0\n    p = 0\n    for i in range(n):\n        (a, b) = map(int, input().strip().split())\n        l = max(l, a, b)\n        p = p + min(a, b)\n    p = p * 2\n    p += 2 * l\n    print(p)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    p = 0\n    m = 0\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        m = max(m, a, b)\n        p += min(a, b) * 2\n    p += m * 2\n    print(p)", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    l2 = []\n    for _ in range(n):\n        (a, b) = map(int, input().split())\n        l.append(min(a, b))\n        l2.append(max(a, b))\n    s = sum(l)\n    m = max(l2)\n    print(2 * (s + m))", "def sol(n, ab):\n    width = 0\n    height = 0\n    for i in range(n):\n        (a, b) = ab[i]\n        if a > b:\n            width += b\n            height = max(a, height)\n        else:\n            width += a\n            height = max(b, height)\n    return (width + height) * 2\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    ab = [[int(v) for v in input().split()] for _ in range(n)]\n    print(sol(n, ab))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = 0\n    p = 0\n    for i in range(n):\n        (a, b) = map(int, input().strip().split())\n        l = max(l, a, b)\n        p += min(a, b)\n    p *= 2\n    p += 2 * l\n    print(p)", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    (sum, max_) = (0, 0)\n    for i in range(n):\n        (a, b) = map(int, input().split(' '))\n        sum += min(a, b)\n        max_ = max(max_, max(a, b))\n    print(f'{2 * (sum + max_)}')", "for _ in range(int(input())):\n    n = int(input())\n    mx = 0\n    sm = 0\n    for x in range(n):\n        (a, b) = list(map(int, input().split()))\n        mx = max(a, b, mx)\n        sm += min(a, b)\n    ans = 2 * mx + 2 * sm\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    t = 0\n    m = 0\n    for j in range(n):\n        (a, b) = map(int, input().split(' '))\n        if max(a, b) > m:\n            m = max(a, b)\n        t += min(a, b)\n    print(2 * (t + m))", "T = int(input())\nfor tt in range(T):\n    max_edge = 0\n    bottom_edge = 0\n    n = int(input())\n    for i in range(n):\n        (a, b) = tuple(map(int, input().split()))\n        bottom_edge += min(a, b)\n        max_edge = max(max_edge, a, b)\n    print(bottom_edge * 2 + max_edge * 2)", "for _ in range(int(input())):\n    n = int(input())\n    x = 0\n    y = 0\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        x = x + min(a, b)\n        y = max(y, max(a, b))\n    print(2 * x + 2 * y)", "test_case_count = int(input())\nfor _ in range(test_case_count):\n    cheese_count = int(input())\n    cheese_data_length = []\n    cheese_data_width = []\n    for i in range(cheese_count):\n        (n, m) = map(int, input().split())\n        cheese_data_length.append(max(n, m))\n        cheese_data_width.append(min(n, m))\n    print(2 * max(cheese_data_length) + 2 * sum(cheese_data_width))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    mini = 0\n    maxi = -1000000000.0\n    for __ in range(n):\n        (a, b) = map(int, input().split())\n        mini += min(a, b)\n        maxi = max(maxi, max(a, b))\n    if maxi == -1000000000.0:\n        print(0)\n    else:\n        print(2 * (mini + maxi))", "for _ in range(int(input())):\n    n = int(input())\n    (vmin, vmax) = (0, -1000000000.0)\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        vmin += min(a, b)\n        vmax = max(vmax, max(a, b))\n    if vmax == -1000000000.0:\n        print(0)\n    else:\n        res = 2 * (vmax + vmin)\n        print(res)", "for i in range(int(input())):\n    n = int(input())\n    final = 0\n    a = []\n    m = 0\n    for i in range(n):\n        l = list(map(int, input().split()))\n        if l[0] > l[1]:\n            a.append(l[0])\n            if m < l[0]:\n                m = l[0]\n        else:\n            a.append(l[1])\n            if m < l[1]:\n                m = l[1]\n        final += 2 * sum(l)\n    print(final - 2 * sum(a) + 2 * m)", "n = int(input())\nfor i in range(n):\n    _ = int(input())\n    tot = 0\n    mx = 0\n    for j in range(_):\n        aiaj = list(map(int, input().split()))\n        if aiaj[0] < aiaj[1]:\n            (aiaj[0], aiaj[1]) = (aiaj[1], aiaj[0])\n        tot += aiaj[1]\n        mx = max(mx, aiaj[0])\n    print((tot + mx) * 2)", "def foo():\n    N = int(input())\n    res = 0\n    m = 0\n    for _ in range(N):\n        vi = list(map(int, input().strip().split()))\n        res += 2 * min(vi)\n        m = max(m, max(vi))\n    return res + m * 2\nT = int(input())\nfor _ in range(T):\n    print(foo())", "t = int(input())\nfor _ in range(t):\n    d = 0\n    r = 0\n    n = int(input())\n    for _ in range(n):\n        (a, b) = map(int, input().split())\n        r += min(a, b)\n        d = max(d, max(a, b))\n    print((d + r) * 2)"]