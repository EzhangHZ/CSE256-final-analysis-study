["for s in [*open(0)][1:]:\n    print(min(2, sum((t > '/' for t in s.split('1')))))", "for s in [*open(0)][1:]:\n    print(min(2, sum((t > '/' for t in s.split('1')))))", "for s in [*open(0)][1:]:\n    print(min(2, sum((t > '/' for t in s.split('1')))))", "for s in [*open(0)][1:]:\n    print(min(2, sum((t > '/' for t in s.split('1')))))", "t = int(input())\nout = list()\nfor _ in range(t):\n    s = input()\n    first_zero_block = True\n    ans = -1\n    for (i, c) in enumerate(s):\n        if c == '0':\n            if first_zero_block:\n                first_zero_block = False\n            elif s[i - 1] != c:\n                ans = 2\n                break\n    if first_zero_block:\n        ans = 0\n    elif ans == -1:\n        ans = 1\n    out.append(str(ans))\nprint('\\n'.join(out))", "import sys\nfirst = True\nfor line in sys.stdin:\n    if first:\n        first = False\n        continue\n    line = line.rstrip()\n    if '1' not in line:\n        print('1')\n    elif '0' not in line:\n        print('0')\n    else:\n        substrs = line.split('1')\n        count_of_zero = 0\n        for substr in substrs:\n            if '0' in substr:\n                count_of_zero += 1\n        if count_of_zero >= 2:\n            print('2')\n        else:\n            print('1')", "for s in [*open(0)][1:]:\n    print(min(2, sum((t > '/' for t in s.split('1')))))", "t = int(input())\na = ''\nfor i in range(t):\n    l = input().split('1')\n    c = 0\n    for j in l:\n        if j != '':\n            c += 1\n            if c == 2:\n                break\n    a += str(c)\nfor i in a:\n    print(i)", "for s in [*open(0)][1:]:\n    print(min(2, sum((t > '/' for t in s.split('1')))))", "for s in [*open(0)][1:]:\n    print(min(2, sum((t > '\\n' for t in s.split('1')))))", "t = int(input())\nans = []\nfor _ in range(t):\n    s = input()\n    n = len(s)\n    i = 0\n    ret = 0\n    while i < n:\n        while i < n and s[i] == '1':\n            i += 1\n        if i < n:\n            while i < n and s[i] == '0':\n                i += 1\n            ret += 1\n            if ret == 2:\n                break\n    ans.append(str(ret))\nprint('\\n'.join(ans))", "for s in [*open(0)][1:]:\n    print(min(2, sum((t > '/' for t in s.split('1')))))", "import sys\nimport math\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef inltstr():\n    return list(map(str, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef factorial(n):\n    if n == 1:\n        return n\n    elif n < 1:\n        return 'NA'\n    else:\n        return n * factorial(n - 1)\n\ndef coeffBin(k):\n    return factorial(k + 1) / (factorial(2) * factorial(k - 1))\n\ndef solve(s):\n    count = 0\n    flag = False\n    for c in s:\n        if c == '0' and flag == False:\n            flag = True\n        elif c == '1' and flag == True:\n            count += 1\n            flag = False\n    if flag:\n        count += 1\n    if count == 1:\n        return 1\n    if count == 0:\n        return 0\n    if count > 1:\n        return 2\n    return 0\nres = []\niter = inp()\ni = 0\nwhile i < iter:\n    arr = inltstr()\n    case = ''\n    for n in arr:\n        case += str(n)\n    result = solve(case)\n    res.append(result)\n    i += 1\nfor r in res:\n    print(r)", "import sys\ninput = sys.stdin.readline\n\ndef process(s):\n    res = [s[0]]\n    for i in range(1, len(s)):\n        if s[i] != res[-1]:\n            res.append(s[i])\n    if res[-1] == '1':\n        res.pop()\n    if res and res[0] == '1':\n        res = res[1:]\n    if not res:\n        return 0\n    if len(res) == 1:\n        return 1\n    return 2\nt = int(input())\nfor _ in range(t):\n    s = input().rstrip()\n    print(process(s))", "import math\nt = int(input())\ncases = []\nfor i in range(t):\n    cases.append(input())\n\ndef answer(s):\n    count = 0\n    nocount = False\n    for i in s:\n        if i == '0' and nocount == False:\n            count += 1\n            nocount = True\n        elif i == '0':\n            continue\n        else:\n            nocount = False\n    if count == 0:\n        return 0\n    if count >= 2:\n        return 2\n    return 1\nfor i in cases:\n    print(answer(i))", "for s in [*open(0)][1:]:\n    print(min(2, sum((t > '/' for t in s.split('1')))))", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    s = input().strip()\n    n = len(s)\n    i = s.find('0')\n    if i == -1:\n        print(0)\n        return\n    if s.find('1') == -1:\n        print(1)\n        return\n    j = s.find('1', i)\n    if j == -1:\n        print(1)\n        return\n    if s.find('0', j) == -1:\n        print(1)\n        return\n    print(2)\nfor i in range(int(input())):\n    solve()", "import sys\ninput = lambda : sys.stdin.readline().rstrip('\\r\\n')\ninp_vars_int = lambda : map(int, input().split())\ninp_list_int = lambda : list(map(int, input().split()))\nt = int(input())\nfor _ in range(t):\n    s = input()\n    zeros_subs = False\n    res = 0\n    for c in s:\n        if c == '0':\n            zeros_subs = True\n        elif zeros_subs:\n            res += 1\n            zeros_subs = False\n    print(min(res + zeros_subs, 2))", "mod = 1000000007\nfrom math import factorial, ceil, pow, sqrt, floor\nfrom sys import stdin, stdout\nfrom collections import defaultdict, Counter, deque\nfor _ in range(int(stdin.readline())):\n    s = stdin.readline().strip('\\n')\n    if s.find('0') == -1:\n        print(0)\n    elif s.find('1') == -1:\n        print(1)\n    else:\n        li = s.split('1')\n        c = 0\n        for ele in li:\n            if ele != '':\n                c += 1\n        print(min(c, 2))", "from sys import stdin, stdout\nt = int(stdin.readline())\nwhile t > 0:\n    str = stdin.readline()\n    c = 0\n    if str[0] == '0':\n        c += 1\n    for i in range(1, len(str)):\n        if str[i] == '0' and str[i - 1] == '1':\n            c = c + 1\n    if c == 0:\n        print('0')\n    elif c == 1:\n        print('1')\n    elif c == len(str) - 1:\n        print('1')\n    else:\n        print('2')\n    t = t - 1", "for s in [*open(0)][1:]:\n    print(min(2, sum((t > '\\n' for t in s.split('1')))))", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nfrom itertools import groupby\n\ndef solve():\n    S = input()\n    d = list(groupby(S))\n    if len(d) == 1:\n        if d[0][0] == '1':\n            print(0)\n        else:\n            print(1)\n    elif len(d) == 2:\n        print(1)\n    elif len(d) == 3:\n        if d[0][0] == '1':\n            print(1)\n        else:\n            print(2)\n    else:\n        print(2)\n    ans = 0\n    return ans\nT = int(input())\nfor i in range(1, T + 1):\n    solve()", "import sys\ninput = sys.stdin.readline\nt = int(input())\nwhile t > 0:\n    s = input()\n    z = s.count('0')\n    if z == 0:\n        print(0)\n    else:\n        f = s.find('0')\n        l = s.rfind('0')\n        if l - f + 1 == z:\n            print(1)\n        else:\n            print(2)\n    t -= 1", "from sys import stdin, setrecursionlimit, maxsize\nfrom collections import deque\nfrom heapq import *\nfrom math import sqrt, gcd, ceil\ninput = stdin.readline\nsetrecursionlimit(10 ** 5)\n\ndef solution(s):\n    zero = s.count('0')\n    if zero == 0:\n        return 0\n    first = s.find('0')\n    last = s.rfind('0')\n    if last - first + 1 == zero:\n        return 1\n    else:\n        return 2\nfor _ in range(int(input())):\n    s = input().strip()\n    print(solution(s))", "def zero_set(string):\n    zero = 0\n    x = False\n    for i in range(len(string)):\n        if string[i] == '0':\n            if x:\n                continue\n            elif x == False:\n                x = True\n                zero = zero + 1\n        else:\n            x = False\n    return zero\n\ndef mex(string):\n    if '1' not in string:\n        print(1)\n    elif '0' not in string:\n        print(0)\n    else:\n        z = zero_set(string)\n        if z > 1:\n            print(2)\n        elif z < 2:\n            print(1)\nt = int(input())\nstr_list = []\nfor i in range(t):\n    string = input()\n    str_list.append(string)\nfor i in str_list:\n    mex(i)", "n = int(input())\ni = 0\nlist1 = []\nwhile i < n:\n    x = input()\n    list1.append(x)\n    i = i + 1\nm = 0\nwhile m < n:\n    y = list1[m]\n    a = y.count('0')\n    c = y.find('0')\n    d = y.rfind('0')\n    e = y.find('1', c, d)\n    if a < 1:\n        print(0)\n    if e > 0:\n        print(2)\n    if e < 0 and a > 0:\n        print(1)\n    m = m + 1", "m = int(input())\nl = []\nfor i in range(m):\n    a = input()\n    b = a.count('0')\n    c = len(a.replace('1', ' ').replace('2', ' ').split())\n    if '0' not in a:\n        d = 0\n    elif '1' not in a:\n        d = 1\n    elif '2' not in a:\n        d = 2\n    l.append(min(b, c, d))\nfor i in l:\n    print(i)", "for s in [*open(0)][1:]:\n    print(min(2, sum((t > '/' for t in s.split('1')))))", "res = ''\nfor _ in range(int(input())):\n    s = input()\n    prev = s[0]\n    blocks_zero = prev == '0'\n    for i in s[1:]:\n        if i != prev and prev == '1':\n            blocks_zero += 1\n        if blocks_zero == 2:\n            break\n        prev = i\n    res += '%d\\n' % min(blocks_zero, 2)\nprint(res)", "k = []\nfor _ in range(int(input())):\n    s = input('')\n    t = s.split('1')\n    r = list((ele for ele in t if ele.strip()))\n    k.append(min(len(r), 2))\nfor i in k:\n    print(i)", "result = []\nfor _ in range(int(input())):\n    s = input()\n    if '0' not in s:\n        result.append(0)\n    elif '1' not in s:\n        result.append(1)\n    else:\n        if s[0] == '0':\n            cnt = 0\n        else:\n            cnt = -1\n        for i in range(len(s)):\n            if i != len(s) - 1:\n                if s[i] != s[i + 1]:\n                    cnt += 1\n        if cnt > 1:\n            result.append(2)\n        else:\n            result.append(1)\nprint(*result, sep='\\n')", "for _ in range(int(input())):\n    Str = input()\n    Zero = Str.count('0')\n    if Zero == 0:\n        print(Zero)\n    else:\n        St = Zero * '0'\n        if St in Str:\n            print(1)\n        else:\n            print(2)", "for i in range(int(input())):\n    s = input()\n    s = s.strip('1')\n    if ('1' in s) == True:\n        print('2')\n    elif ('0' in s) == True:\n        print('1')\n    else:\n        print('0')", "result = ''\nfor r in range(0, int(input())):\n    a = input()\n    a = list(a)\n    temp = [a[0]]\n    if a[0] == '0':\n        n = 1\n    else:\n        n = 0\n    for i in range(1, len(a)):\n        if a[i - 1] == a[i]:\n            continue\n        temp.append(a[i])\n        if a[i] == '0':\n            n += 1\n        if n == 2:\n            break\n    if temp == ['0']:\n        result += '1\\n'\n    elif temp == ['1']:\n        result += '0\\n'\n    elif n == 2:\n        result += '2\\n'\n    else:\n        result += '1\\n'\nprint(result.rstrip('\\n'))", "import sys\nimport math\ncount = int(sys.stdin.readline())\nwhile count > 0:\n    count = count - 1\n    line = sys.stdin.readline()\n    currnetElement = line[0]\n    sections = 0\n    if currnetElement == '0':\n        sections += 1\n    for element in line:\n        if element != currnetElement:\n            if element == '0':\n                sections += 1\n            currnetElement = element\n    print(min(sections, 2))", "import sys\nLI = lambda : list(map(int, sys.stdin.readline().split()))\nMI = lambda : map(int, sys.stdin.readline().split())\nSI = lambda : sys.stdin.readline().strip('\\n')\nII = lambda : int(sys.stdin.readline())\nfor _ in range(II()):\n    s = SI()\n    t = ''\n    z = 0\n    for c in s:\n        if not t or c != t[-1]:\n            t += c\n            z += c == '0'\n    o = len(t) - z\n    if not o:\n        print(1)\n    elif z < 3:\n        print(z)\n    else:\n        print(2)", "for test in range(int(input())):\n    s = input()\n    zeroes = s.count('0')\n    if zeroes == 0:\n        print(0)\n        continue\n    if s.rfind('0') - s.find('0') + 1 == zeroes:\n        print(1)\n    else:\n        print(2)", "import sys\n\ndef mix_mex(s):\n    zero_count = 0\n    last = None\n    for ch in s:\n        if ch == '0':\n            if last == '0':\n                continue\n            zero_count += 1\n        last = ch\n    if zero_count == 0:\n        return 0\n    if zero_count == 1:\n        return 1\n    return 2\nfor _ in range(int(input())):\n    s = input()\n    sys.stdout.write(f'{mix_mex(s)}\\n')", "t = int(input())\nanswer = []\nfor i in range(0, t):\n    n = input()\n    arr = [char for char in n]\n    cnt = 0\n    i = 0\n    cnt1 = 0\n    while i < len(arr):\n        if arr[i] == '0':\n            cnt = cnt + 1\n            i = i + 1\n            if i != len(arr):\n                while arr[i] == '0' and i != len(arr):\n                    i = i + 1\n                    if i == len(arr):\n                        break\n        elif arr[i] == '1':\n            cnt1 = cnt1 + 1\n            i = i + 1\n    if cnt == 0:\n        sum = 0\n    elif cnt == 1:\n        sum = 1\n    else:\n        sum = 2\n    answer.append(sum)\nfor j in range(0, len(answer)):\n    print(answer[j])", "for _ in range(int(input())):\n    s = input()\n    if s.count('0') == 0:\n        print(0)\n        continue\n    if s.count('1') == 0:\n        print(1)\n        continue\n    last = s.rfind('0')\n    first = s.find('0')\n    if last - first + 1 == s.count('0'):\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    st = input()\n    zcount = st.count('0')\n    onecount = st.count('1')\n    if zcount == 0:\n        print(0)\n        continue\n    fst = st.find('0')\n    lst = st.rfind('0')\n    if lst - fst + 1 == zcount:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    s = input().split('1')\n    print(min(len([i for i in s if i != '']), 2))", "t = int(input())\nfor test in range(t):\n    s = input()\n    zeroes = s.count('0')\n    if zeroes == 0:\n        print(0)\n        continue\n    first = s.find('0')\n    last = s.rfind('0')\n    if last - first + 1 == zeroes:\n        print(1)\n    else:\n        print(2)", "import sys\n\ndef move(string, i):\n    val = string[i]\n    size = len(string)\n    while True:\n        i += 1\n        if i == size:\n            break\n        if val != string[i]:\n            break\n    return i\ninp = sys.stdin.readline()\ntest = int(inp.strip('\\n'))\nresult = ''\nfor i in range(test):\n    inp = sys.stdin.readline()\n    string = inp.strip('\\n')\n    size = len(string)\n    z0 = z1 = o0 = o1 = i = 0\n    while True:\n        if string[i] == '0':\n            if z0:\n                z1 = 1\n            z0 = 1\n            i = move(string, i)\n        elif string[i] == '1':\n            if o0:\n                o1 = 1\n            o0 = 1\n            i = move(string, i)\n        if size == i:\n            break\n        if z1 and o1:\n            break\n    if z1 == 0 and o1 == 0:\n        if z0 == 0:\n            sys.stdout.write('0\\n')\n        elif o0 == 0:\n            sys.stdout.write('1\\n')\n        else:\n            sys.stdout.write('1\\n')\n    elif z1 == 1 and o1 == 0:\n        sys.stdout.write('2\\n')\n    elif z1 == 0 and o1 == 1:\n        sys.stdout.write('1\\n')\n    else:\n        sys.stdout.write('2\\n')", "t = int(input())\nout = ''\nwhile t > 0:\n    ans = 0\n    for i in '1' + input():\n        if i == '0' and new:\n            ans += 1\n            new = False\n        if i == '1':\n            new = True\n        if ans > 1:\n            out += '2\\n'\n            break\n    else:\n        out += str(ans) + '\\n'\n    t -= 1\nprint(out[:-1])", "t = int(input(''))\nresult_holder = list()\nfor i in range(t):\n    temp = input('')\n    first_zero = temp.find('0')\n    last_zero = temp.rfind('0')\n    if temp.count('0') == 0:\n        result_holder.append(0)\n    elif last_zero + 1 - first_zero == temp.count('0'):\n        result_holder.append(1)\n    else:\n        result_holder.append(2)\nfor res in result_holder:\n    print(res)", "for _ in range(int(input())):\n    s = input().strip()\n    if '0' not in s:\n        print(0)\n        continue\n    if '1' not in s:\n        print(1)\n        continue\n    z = False\n    o = False\n    flag = False\n    for i in s:\n        if i == '0':\n            if z == True and o == True:\n                print(2)\n                flag = True\n                break\n            z = True\n            continue\n        if z == True and i == '1':\n            o = True\n    if not flag:\n        print(1)", "t = int(input())\nfor i in range(t):\n    s = input()\n    z = s.count('0')\n    if z == 0:\n        print(0)\n        continue\n    first = s.find('0')\n    last = s.rfind('0')\n    if last - first + 1 == z:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    s = input()\n    if s.count('1') == len(s):\n        print(0)\n    else:\n        z = s.count('0')\n        if '0' * z in s:\n            print(1)\n        else:\n            print(2)", "for _ in range(int(input())):\n    s = input().split('1')\n    b = 0\n    for i in s:\n        if i != '':\n            b += 1\n    print(min(b, 2))", "n = int(input())\nfor i in range(n):\n    s = input()\n    zero = s.count('0')\n    if zero == 0:\n        print(0)\n        continue\n    first = s.find('0')\n    last = s.rfind('0')\n    if last - first + 1 == zero:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    s = input()\n    if '0' not in s:\n        print(0)\n    else:\n        start = s.find('0')\n        end = s.rfind('0')\n        if end - start + 1 == s.count('0'):\n            print(1)\n        else:\n            print(2)", "for _ in range(int(input())):\n    a = input()\n    k0 = a.count('0')\n    k1 = a.count('1')\n    c = 0\n    if k1 == 0:\n        print(1)\n        continue\n    if k0 == 0:\n        print(0)\n        continue\n    if a.rfind('0') - a.find('0') + 1 == k0:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    st = input()\n    zcount = st.count('0')\n    onecount = st.count('1')\n    if zcount == 0:\n        print(0)\n        continue\n    fst = st.find('0')\n    lst = st.rfind('0')\n    if lst - fst + 1 == zcount:\n        print(1)\n    else:\n        print(2)", "t = int(input())\nwhile t:\n    s = input().split('1')\n    li = list(filter(None, s))\n    if len(li) >= 3:\n        print(2)\n    else:\n        print(len(li))\n    t -= 1", "for _ in range(int(input())):\n    s = input().split('1')\n    ans = 0\n    for i in s:\n        if i != '':\n            ans += 1\n    print(min(ans, 2))", "import sys\ninput = sys.stdin.readline\nfrom collections import deque\nfrom itertools import combinations\nt = int(input())\nfor i in range(t):\n    s = input().strip()\n    lst = [s[0]]\n    for j in range(1, len(s)):\n        if s[j] != s[j - 1]:\n            lst.append(s[j])\n    if len(lst) == 1:\n        if lst[0] == '1':\n            print(0)\n        else:\n            print(1)\n    else:\n        ans = 0\n        for j in range(len(lst)):\n            if lst[j] == '0':\n                ans += 1\n        print(min(ans, 2))", "import math\nimport sys\nimport collections\nimport bisect\nimport time\nimport random\nimport itertools\nimport string\nfrom collections import Counter, defaultdict\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\nfor t in range(int(input())):\n    s = get_string()\n    n = len(s)\n    if s == '1' * n:\n        print(0)\n        continue\n    elif s == '0' * n:\n        print(1)\n    else:\n        s = list(s)\n        prev = s[0]\n        ans = 0\n        for i in s:\n            if i == '1':\n                if prev == i:\n                    continue\n                else:\n                    ans += 1\n                prev = i\n                continue\n            else:\n                if i == prev:\n                    continue\n                prev = i\n        if prev == '0':\n            ans += 1\n        ans = min(ans, 2)\n        print(ans)", "def solve(s):\n    if '0' not in s:\n        return 0\n    if len((*filter(None, s.split('1')),)) == 1:\n        return 1\n    return 2\nfor _ in '_' * int(input()):\n    print(solve(input()))", "from collections import deque, Counter\nfrom collections import defaultdict as dfd\nfrom bisect import bisect, bisect_left\nfrom math import sqrt, gcd, ceil, factorial, log2\nfrom heapq import heapify, heappush, heappop\nMOD = 10 ** 9 + 7\ninf = float('inf')\nans_ = []\n\ndef nin():\n    return int(input())\n\ndef ninf():\n    return int(file.readline())\n\ndef st():\n    return input().strip()\n\ndef stf():\n    return file.readline().strip()\n\ndef read():\n    return list(map(int, input().strip().split()))\n\ndef readf():\n    return list(map(int, file.readline().strip().split()))\n\ndef readfl():\n    return list(map(float, input().strip().split()))\n\ndef readffl():\n    return list(map(float, file.readline().strip().split()))\n\ndef f(s):\n    ans = 0\n    s += '#'\n    x = 1\n    for i in range(1, len(s)):\n        if s[i] != s[i - 1]:\n            if s[i - 1] == '0':\n                ans += 1\n            x = 1\n        else:\n            x += 1\n    return ans\n\ndef solve():\n    for _ in range(nin()):\n        s = st()\n        ans_.append(min(2, f(s)))\nsolve()\nfor i in ans_:\n    print(i)", "t = int(input())\nwhile t > 0:\n    ans = 0\n    s = list(input())\n    n = len(s)\n    c = s[0]\n    for i in s:\n        if i != c:\n            if c == '0':\n                ans = ans + 1\n            c = i\n    if c == '0':\n        ans = ans + 1\n    if ans > 2:\n        print(2)\n    else:\n        print(ans)\n    t = t - 1", "def MEX(s):\n    if len(s) == 0:\n        return 0\n    current = s[0]\n    number_of_ones = 0\n    number_of_zeros = 0\n    if current == '0':\n        number_of_zeros = 1\n    else:\n        number_of_ones = 1\n    for k in s:\n        if k != current:\n            current = k\n            if k == '0':\n                number_of_zeros += 1\n            else:\n                number_of_ones += 1\n    if number_of_zeros >= 2:\n        return 2\n    elif number_of_zeros == 0:\n        return 0\n    else:\n        return 1\ntests = int(input())\nfor i in range(tests):\n    s = input()\n    print(MEX(s))", "import sys\nimport math\nt = int(sys.stdin.readline())\nfor line in sys.stdin:\n    line = line.strip()\n    s = set(line)\n    x = 0\n    if len(s) == 1:\n        x = (int(s.pop()) + 1) % 2\n        print(x)\n    else:\n        i = 0\n        n = line[i]\n        f = len(line) - 1\n        n2 = line[f]\n        if int(n) == 0:\n            while i < len(line) and line[i] == n:\n                i += 1\n            x += 1\n        if int(n2) == 0:\n            while f > i and line[f] == n2:\n                f -= 1\n            x += 1\n        if int(n) == 1 and int(n2) == 1:\n            while i < len(line) and line[i] == n:\n                i += 1\n            while f > i and line[f] == n2:\n                f -= 1\n        s = set(line[i:f + 1])\n        if len(s) > 1:\n            print(2)\n        else:\n            x += (int(s.pop()) + 1) % 2\n            print(x)", "t = int(input())\nfor tt in range(t):\n    s = input()\n    znum = s.count('0')\n    if znum == 0:\n        print(0)\n        continue\n    first = s.find('0')\n    last = s.rfind('0')\n    if last - first + 1 == znum:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    s = input().strip('\\n')\n    li = s.split('1')\n    print(min(len(li) - li.count(''), 2))", "for _ in range(int(input())):\n    s = input()\n    zeros = s.count('0')\n    if zeros == 0:\n        print(0)\n        continue\n    ones = s.count('1')\n    if ones == 0:\n        print(1)\n        continue\n    first_occurence = s.find('0')\n    last_occurence = s.rfind('0')\n    if last_occurence - first_occurence + 1 == zeros:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    s = input()\n    if set(s) == {'1'}:\n        print('0')\n    else:\n        a = list(s.split('1'))\n        a = [i for i in a if i]\n        if len(a) == 1:\n            print('1')\n        else:\n            print('2')", "for _ in range(int(input())):\n    s = input().split('1')\n    ans = 0\n    for i in s:\n        if i != '':\n            ans += 1\n    print(min(ans, 2))", "for _ in range(int(input())):\n    s = input().strip('1')\n    print(('1' in s) + bool(s))", "from math import ceil\nt = int(input())\ninputs = [None] * t\nfor i in range(t):\n    inputs[i] = input()\nfor row in inputs:\n    mex = 0\n    is_zero_matched = 0\n    for (i, num) in enumerate(row):\n        if is_zero_matched == 0 and int(num) == 0:\n            is_zero_matched = 1\n            mex = mex + 1\n        elif int(num) == 1:\n            is_zero_matched = 0\n        if mex == 2:\n            break\n    print(mex)", "def solve(s):\n    L = s.split('1')\n    return min(2, sum((1 for x in L if x)))\ntests = int(input())\nfor _ in range(tests):\n    print(solve(input()))", "n = int(input())\nfor i in range(n):\n    x = input()\n    if len(x) == x.count('1'):\n        print(0)\n    else:\n        v = x.find('0')\n        b = x.rfind('0')\n        if b - v + 1 == x.count('0'):\n            print(1)\n        else:\n            print(2)", "t = int(input())\nfor test in range(t):\n    s = input()\n    zeroes = s.count('0')\n    if zeroes == 0:\n        print(0)\n        continue\n    first = s.find('0')\n    last = s.rfind('0')\n    if last - first + 1 == zeroes:\n        print(1)\n    else:\n        print(2)", "for x in range(int(input())):\n    s = input()\n    a = s.find('0')\n    if a < 0:\n        print(0)\n    elif '10' in s[a:]:\n        print(2)\n    else:\n        print(1)", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    zs = s.count('0')\n    if n == zs:\n        print(1)\n        continue\n    if zs == 0:\n        print(0)\n        continue\n    li = s.find('0')\n    ri = s.rfind('0')\n    if ri - li + 1 == zs:\n        print(1)\n    else:\n        print(2)", "cases = int(input())\nfor i in range(cases):\n    s = input()\n    fir = s.count('0')\n    if fir == 0:\n        print(0)\n        continue\n    first = s.find('0')\n    last = s.rfind('0')\n    if last - first + 1 == fir:\n        print(1)\n    else:\n        print(2)", "t = int(input())\nfor q in range(t):\n    s = input()\n    if s.find('1') == -1:\n        print(1)\n    elif s.find('0') == -1:\n        print(0)\n    elif s.find('1', s.find('0'), s.rfind('0')) == -1:\n        print(1)\n    else:\n        print(2)", "def solve(s):\n    n = len(s)\n    ans = 0\n    flag = False\n    for i in range(n):\n        if s[i] == '1':\n            if flag:\n                ans += 1\n                flag = False\n        else:\n            flag = True\n    if flag:\n        ans += 1\n    return min(ans, 2)\nt = int(input())\nfor _ in range(t):\n    s = input()\n    print(solve(s))", "for _ in range(int(input())):\n    s = input()\n    if s.count('0') == 0:\n        print(0)\n    elif s.count('1') == 0:\n        print(1)\n    elif '10' not in s[s.index('0'):]:\n        print(1)\n    else:\n        print(2)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    if '0' not in s:\n        print(0)\n    elif '1' not in s:\n        print(1)\n    else:\n        i = s.index('0')\n        j = s.rindex('0')\n        s = s[i:j + 1]\n        if '1' not in s:\n            print(1)\n        else:\n            print(2)", "def solution():\n    for t in range(int(input())):\n        s = input()\n        ans = 0\n        fizero = s.find('0')\n        if fizero != -1:\n            ans += 1\n            fione = s[fizero:].find('1') + fizero\n            if fione - fizero != -1:\n                sezero = s[fione:].find('0') + fione\n                if sezero - fione != -1:\n                    ans += 1\n        print(ans)\n    return\nsolution()", "def mex(s):\n    if len(set(s)) == 1:\n        if s[0] == '1':\n            return 0\n        else:\n            return 1\n    k = s.split('1')\n    res = 0\n    for i in k:\n        if i != '':\n            res += 1\n    if res >= 2:\n        return 2\n    else:\n        return 1\nt = int(input())\nfor i in range(t):\n    s = input()\n    print(mex(s))", "for _ in range(int(input())):\n    a = input()\n    s = 0\n    d = 0\n    b = []\n    if '0' in a and '1' not in a:\n        print(1)\n    elif '1' in a and '0' not in a:\n        print(0)\n    elif a.index('1') > a.rfind('0') or a.rfind('1') < a.index('0') or '1' not in a[a.index('0'):a.rfind('0') + 1]:\n        print(1)\n    elif a.rfind('0') > a.rfind('1') > a.index('0') or a.rfind('1') > a.rfind('0') > a.index('1'):\n        print(2)", "t = int(input())\nfor test in range(t):\n    s = input()\n    zeroes = 0\n    for i in range(len(s)):\n        if s[i] == '0':\n            zeroes += 1\n    if zeroes == 0:\n        print(0)\n        continue\n    first = s.find('0')\n    last = s.rfind('0')\n    if last - first + 1 == zeroes:\n        print(1)\n    else:\n        print(2)", "t = int(input())\nwhile t:\n    t -= 1\n    s = input()\n    c = 0\n    f = True\n    for i in range(0, len(s)):\n        if f and s[i] == '0':\n            c += 1\n            f = False\n        if s[i] == '1':\n            f = True\n        if c >= 2:\n            break\n    print(c)", "t = int(input())\nwhile t:\n    t -= 1\n    s = input()\n    a = s.replace('1', ' ').split().__len__()\n    print(min(a, 2))", "number = int(input())\nans = []\nfor i in range(number):\n    value = []\n    string = input()\n    if len(string) < 2:\n        value.append(string[0])\n    else:\n        for j in range(len(string) - 1):\n            if string[j] != string[j + 1]:\n                value.append(string[j])\n            if j + 1 == len(string) - 1:\n                value.append(string[j + 1])\n    count = 0\n    lst1 = ['0', '1', '2']\n    for i in value:\n        if i in lst1:\n            lst1.remove(i)\n        if i == '0':\n            count += 1\n    if count <= int(lst1[0]):\n        ans.append(count)\n    else:\n        ans.append(lst1[0])\nfor i in ans:\n    print(i)", "for _ in range(int(input())):\n    s = input()\n    if all((i == '1' for i in s)):\n        print(0)\n    elif all((i == '0' for i in s)):\n        print(1)\n    elif len(list(filter(None, s.split('1')))) == 1:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    print(min(2, len([t for t in input().split('1') if t != ''])))", "n = int(input())\nfor i in range(1, n + 1):\n    a = input()\n    a = a.replace('1', ' ')\n    a = a.split()\n    b = len(a)\n    if b > 2:\n        b = 2\n    print(b)", "for t in range(int(input())):\n    s = input()\n    if s.count('0') == 0:\n        print(0)\n    elif s.rfind('0') - s.find('0') + 1 == s.count('0'):\n        print(1)\n    else:\n        print(2)", "def removed(s):\n    ans = ''\n    ans = ans + s[0]\n    seen = s[0]\n    for i in range(1, len(s)):\n        if s[i] != seen:\n            ans = ans + s[i]\n            seen = s[i]\n    return ans\nfor _ in range(int(input())):\n    s = input()\n    print(min(removed(s).count('0'), 2))", "t = int(input())\nfor tt in range(t):\n    s = input()\n    grp0 = 0\n    for i in range(len(s)):\n        if i == 0 and s[i] == '0':\n            grp0 += 1\n        elif s[i] == '0' and s[i - 1] == '1':\n            grp0 += 1\n    print(grp0 if grp0 <= 2 else 2)", "def solve(nums):\n    noz = i = 0\n    n = len(nums)\n    while i < n:\n        if nums[i] == '0':\n            noz += 1\n            while i < n and nums[i] == '0':\n                i += 1\n        else:\n            i += 1\n    return min(noz, 2)\nt = int(input())\nwhile t:\n    nums = list(input())\n    print(solve(nums))\n    t -= 1", "for i in range(int(input())):\n    r = [0]\n    for i in input():\n        if i != r[-1]:\n            r += [i]\n    print(min(2, r.count('0')))", "t = int(input())\nfor test in range(t):\n    s = input()\n    zeroes = s.count('0')\n    if zeroes == 0:\n        print(0)\n        continue\n    first = s.find('0')\n    last = s.rfind('0')\n    if last - first + 1 == zeroes:\n        print(1)\n    else:\n        print(2)", "for _ in [0] * int(input()):\n    s = input()\n    k = len(s)\n    if s == '1' * k:\n        print(0)\n    else:\n        for i in range(k):\n            if s[i] == '0':\n                a = i\n                break\n        for j in range(k - 1, -1, -1):\n            if s[j] == '0':\n                b = j\n                break\n        print(2 - (s[a:b + 1] == '0' * (b - a + 1)))"]