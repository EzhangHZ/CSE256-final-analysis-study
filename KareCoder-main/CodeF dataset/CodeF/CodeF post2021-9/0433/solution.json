["from sys import stdin\n\ndef input():\n    return stdin.readline().strip()\n\ndef read_int():\n    return int(input())\n\ndef read_ints():\n    return map(int, input().split())\nt = read_int()\nfor case_num in range(t):\n    (n, k) = read_ints()\n    s = input()\n    m = s.count('1')\n    if m == 0:\n        print(0)\n    elif m == n:\n        print(11 * (n - 1))\n    else:\n        ans = 11 * m\n        l = s.find('1')\n        r = s.rfind('1')\n        lneed = l\n        rneed = n - 1 - r\n        if k >= lneed + rneed and m > 1:\n            ans = 11 * (m - 1)\n        elif k >= rneed:\n            ans = 11 * m - 10\n        elif k >= lneed:\n            ans = 11 * m - 1\n        print(ans)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    count1 = 0\n    for i in range(n):\n        if s[i] == '1':\n            count1 += 1\n            r = i\n            if count1 == 1:\n                l = i\n    if not count1:\n        print(0)\n        continue\n    ans = count1 * 11\n    r = n - r - 1\n    if k >= r:\n        ans -= 10\n        count1 -= 1\n        k -= r\n    if k >= l and count1:\n        ans -= 1\n    print(ans)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, k) = map(int, input().split())\n    s = input().strip()\n    cnt = 0\n    f = n + 1\n    b = -1\n    for i in range(n):\n        if s[i] == '1':\n            cnt += 1\n            f = min(f, i)\n            b = max(b, i)\n    if cnt == 0:\n        return 0\n    (op1, op2) = (f, n - 1 - b)\n    if f == b:\n        if op2 <= k:\n            return 1\n        elif op1 <= k:\n            return 10\n        else:\n            return 11\n    ans = 11 * cnt\n    if op2 <= k:\n        ans -= 10\n        k -= op2\n    if op1 <= k:\n        ans -= 1\n        k -= op1\n    return ans\nfor _ in range(int(input())):\n    print(solve())", "from cmath import sqrt\nfrom collections import defaultdict\nfrom math import *\nimport sys\nfrom typing import Counter\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    s = list(map(str, input().split()))[0]\n    b = s.find('1')\n    e = n - s.rfind('1') - 1\n    c = s.count('1')\n    ans = c * 11\n    if e <= k:\n        ans -= 10\n        k -= e\n        if c != 1 and b <= k:\n            ans -= 1\n    elif b <= k:\n        ans -= 1\n    if c:\n        print(ans)\n    else:\n        print(0)", "x = int(input())\nret = []\nfor z in range(x):\n    (n, k) = input().split()\n    k = int(k)\n    a = input()\n    spl = False\n    lst = a.split('1')\n    (l, r, x) = (0, 0, 0)\n    l = len(lst[0])\n    r = len(lst[-1])\n    ones = len(lst) - 1\n    min = ones * 11\n    if l == len(a):\n        ret.append(min)\n        continue\n    if k >= l + r:\n        x = 11\n        spl = True\n    elif k >= r:\n        x = 10\n    elif k >= l:\n        x = 1\n    if ones == 1 and spl:\n        x = 10\n    min = min - x\n    ret.append(min)\nfor i in ret:\n    print(i)", "t = int(input())\nans = list()\nfor i in range(0, t):\n    (n, k) = [int(x) for x in input().split()]\n    arr = [int(x) for x in input()]\n    arr_sum = 0\n    j = n - 1\n    if k >= n:\n        d = 0\n    else:\n        d = n - k - 1\n    while j >= d:\n        if arr[j] == 1:\n            arr[j] = 0\n            arr_sum += 1\n            k -= n - 1 - j\n            break\n        j -= 1\n    else:\n        arr_sum += arr[-1]\n    for j in range(0, min([k + 1, n])):\n        if arr[j] == 1:\n            arr[j] = 0\n            arr_sum += 10\n            break\n    else:\n        arr_sum += 10 * arr[0]\n    for i in range(1, n - 1):\n        arr_sum += 11 * arr[i]\n    ans.append(arr_sum)\nfor s in ans:\n    print(s)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = input()\n    if '1' in a:\n        can = 1\n        ans = a.count('1') * 11\n        if a[::-1].index('1') <= k:\n            k -= a[::-1].index('1')\n            ans -= 10\n            if a.count('1') == 1:\n                can = 0\n        if a.index('1') <= k and can:\n            ans -= 1\n        print(ans)\n    else:\n        print(0)", "t = int(input())\nfor _ in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    s = input()\n    p = s.count('1')\n    if p == 0:\n        print(0)\n        continue\n    l = s.find('1')\n    f = n - s.rfind('1') - 1\n    if p == 1:\n        if f < k + 1:\n            print(1)\n        elif l < k + 1:\n            print(10)\n        else:\n            print(11)\n    elif l + f < k + 1:\n        print(11 * p - 11)\n    elif f < k + 1:\n        print(11 * p - 10)\n    elif l < k + 1:\n        print(11 * p - 1)\n    else:\n        print(11 * p)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    count = 0\n    for i in s[::-1]:\n        if i == '0':\n            count += 1\n        else:\n            break\n    count_end = count\n    count = 0\n    for i in s:\n        if i == '0':\n            count += 1\n        else:\n            break\n    count_start = count\n    if s.count('1') == 0:\n        print(0)\n    elif s.count('1') == 1:\n        if count_end <= k:\n            print(1)\n        elif count_start <= k:\n            print(10)\n        else:\n            print(11)\n    elif count_end <= k and count_end + count_start <= k:\n        print((s.count('1') - 1) * 11)\n    elif count_end <= k:\n        print((s.count('1') - 1) * 11 + 1)\n    elif count_start <= k:\n        print((s.count('1') - 1) * 11 + 10)\n    else:\n        print(s.count('1') * 11)", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    s = I()\n    (i, j) = (x.find('1') % 8 ** 10 for x in (s, s[::-1]))\n    print(11 * s.count('1') - (i <= k and (k >= i + j < n - 1 or j > k)) - 10 * (j <= k))", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    s = I()\n    (i, j) = (x.find('1') % 8 ** 10 for x in (s, s[::-1]))\n    print(11 * s.count('1') - (k >= i + j < n - 1 or i <= k < j) - 10 * (j <= k))", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    s = I()\n    (i, j) = (x.find('1') % 8 ** 10 for x in (s, s[::-1]))\n    print(11 * s.count('1') - (k >= i + j < n - 1 or i <= k < j) - 10 * (j <= k))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    one = 0\n    b = n\n    e = 0\n    for i in range(n):\n        if s[i] == '1':\n            one += 1\n            if b == n:\n                b = i\n            e = i\n    offset = 0\n    if one > 0 and n - 1 - e <= k:\n        one -= 1\n        offset += 1\n        k -= n - 1 - e\n    if one > 0 and b <= k:\n        one -= 1\n        offset += 10\n    print(11 * one + offset)", "def evaluateStr():\n    (n, swaps) = map(int, input().split())\n    s = str(input())\n    closest_front = closest_back = dist_front = dist_back = -1\n    ones_count = 0\n    flag = False\n    for i in range(n):\n        if s[i] == '1':\n            ones_count += 1\n            closest_back = i\n            if not flag:\n                closest_front = i\n                flag = True\n    dist_front = closest_front\n    dist_back = n - 1 - closest_back\n    if closest_front == -1:\n        return 0\n    elif ones_count == 1:\n        if dist_back <= swaps:\n            return 1\n        elif dist_front <= swaps:\n            return 10\n        else:\n            return 11\n    elif dist_front + dist_back <= swaps:\n        return (ones_count - 2) * 11 + 10 + 1\n    elif dist_back <= swaps:\n        return (ones_count - 1) * 11 + 1\n    elif dist_front <= swaps:\n        return (ones_count - 1) * 11 + 10\n    else:\n        return ones_count * 11\nn = int(input())\nfor i in range(n):\n    print(evaluateStr())", "i = input()\nfor a in range(0, int(i)):\n    [n, k] = [int(x) for x in input().split()]\n    s = input()\n    num = s.count('1')\n    score = num * 11\n    if num == 0:\n        print(0)\n    elif num == 1:\n        p = s.index('1')\n        if n - 1 - p <= k:\n            print(1)\n        elif p <= k:\n            print(10)\n        else:\n            print(11)\n    else:\n        pl = s.index('1')\n        pr = s[::-1].index('1')\n        if pr <= k:\n            score -= 10\n            k -= pr\n        if pl <= k:\n            score -= 1\n        print(score)", "t = int(input())\nfor c in range(t):\n    (n, k) = input().split()\n    (n, k) = (int(n), int(k))\n    s = input()\n    (first, last) = (-1, -1)\n    sum = 0\n    for i in range(n):\n        if s[i] == '1':\n            sum += 11\n            if first < 0:\n                first = i\n            last = i\n    if sum:\n        lswp = n - last - 1\n        if first != last and first + lswp <= k:\n            sum -= 11\n        elif lswp <= k:\n            sum -= 10\n        elif first <= k:\n            sum -= 1\n    print(sum)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    c1 = s.count('1')\n    if c1 == 0:\n        print(0)\n        continue\n    (fo, lo) = (s.find('1'), s[::-1].find('1'))\n    ans = c1 * 11\n    if c1 > 1:\n        if k >= lo:\n            ans -= 10\n            k -= lo\n        if k >= fo:\n            ans -= 1\n    elif k >= lo:\n        ans -= 10\n    elif k >= fo:\n        ans -= 1\n    print(ans)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    num = s.count('1')\n    tot = 0\n    if num == 1:\n        i = s.index('1')\n        j = n - s.rfind('1') - 1\n        if k >= j:\n            k -= j\n            tot += 1\n            num -= 1\n        elif k >= i:\n            k -= i\n            tot += 10\n            num -= 1\n        tot += num * 11\n        print(tot)\n    elif num > 1:\n        i = s.index('1')\n        j = n - s.rfind('1') - 1\n        if k >= j:\n            k -= j\n            tot += 1\n            num -= 1\n        if k >= i:\n            k -= i\n            tot += 10\n            num -= 1\n        tot += num * 11\n        print(tot)\n    else:\n        print(0)", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    s = I()\n    (i, j) = (x.find('1') % 8 ** 10 for x in (s, s[::-1]))\n    print(11 * s.count('1') - (i <= k and (i + j <= min(k, n - 2) or j > k)) - 10 * (j <= k))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    b = s.find('1')\n    e = n - s.rfind('1') - 1\n    c = s.count('1')\n    ans = c * 11\n    if e <= k:\n        ans -= 10\n        k -= e\n        if c != 1 and b <= k:\n            ans -= 1\n    elif b <= k:\n        ans -= 1\n    if c:\n        print(ans)\n    else:\n        print(0)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = input()\n    c = list(c)\n    if c.count('1'):\n        y = c.index('1')\n        s = c.count('1') * 11\n        c = c[::-1]\n        x = c.index('1')\n        if x <= b:\n            b = b - x\n            s -= 10\n            if y <= b and c.count('1') != 1:\n                s -= 1\n        elif y <= b:\n            s -= 1\n        print(s)\n    else:\n        print(0)", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    s = I()\n    (i, j) = (x.find('1') % 8 ** 10 for x in (s, s[::-1]))\n    print(11 * s.count('1') - (k >= i + j < n - 1 or i <= k < j) - 10 * (j <= k))", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    s = I()\n    (i, j) = (x.find('1') % 8 ** 10 for x in (s, s[::-1]))\n    print(11 * s.count('1') - (k >= i + j < n - 1 or i <= k < j) - 10 * (j <= k))", "t = int(input())\nfor _ in range(t):\n    (n, o) = map(int, input().split())\n    s = input()\n    res = 0\n    if s.count('1'):\n        min_pos = s.index('1')\n        res = s.count('1') * 11\n        s = s[::-1]\n        max_pos = s.index('1')\n        if max_pos <= o:\n            o -= max_pos\n            res -= 10\n            if s.count('1') != 1 and min_pos <= o:\n                res -= 1\n        elif min_pos <= o:\n            res -= 1\n        print(res)\n    else:\n        print(0)", "def solve():\n    (n, k) = map(int, input().split())\n    s = input()\n    mone = s.count('1')\n    ls = s.find('1')\n    rs = n - s.rfind('1') - 1\n    ans = mone * 11\n    if rs <= k:\n        ans -= 10\n        k -= rs\n        if mone != 1 and ls <= k:\n            ans -= 1\n    elif ls <= k:\n        ans -= 1\n    if mone:\n        print(ans)\n    else:\n        print(0)\nfor t in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    b = s.find('1')\n    e = n - s.rfind('1') - 1\n    c = s.count('1')\n    ans = c * 11\n    if e <= k:\n        ans -= 10\n        k -= e\n        if c != 1 and b <= k:\n            ans -= 1\n    elif b <= k:\n        ans -= 1\n    if c:\n        print(ans)\n    else:\n        print(0)", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    s = I()\n    (i, j) = (x.find('1') % 8 ** 10 for x in (s, s[::-1]))\n    print(11 * s.count('1') - (k >= i + j < n - 1 or i <= k < j) - 10 * (j <= k))", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    s = I()\n    (i, j) = (x.find('1') % 8 ** 10 for x in (s, s[::-1]))\n    print(11 * s.count('1') - (k >= i + j < n - 1 or i <= k < j) - 10 * (j <= k))", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    s = I()\n    (i, j) = (x.find('1') % 8 ** 10 for x in (s, s[::-1]))\n    print(11 * s.count('1') - (k >= i + j < n - 1 or i <= k < j) - 10 * (j <= k))", "T = int(input())\nq = []\nfor i in range(T):\n    a = input().split()\n    (n, k) = (int(a[0]), int(a[1]))\n    ins = input()\n    data = []\n    for i in ins:\n        data.append(i)\n    q.append((n, k, data))\n\ndef solve(n, k, data):\n    first_one = -1\n    last_one = -1\n    for (idx, c) in enumerate(data):\n        if c == '1':\n            if first_one == -1:\n                first_one = idx\n            if last_one < idx:\n                last_one = idx\n    if first_one != -1 and k >= n - last_one - 1:\n        temp = data[n - 1]\n        data[n - 1] = data[last_one]\n        data[last_one] = temp\n        k -= n - last_one - 1\n        if first_one == last_one:\n            last_one = -1\n    if last_one != -1 and k >= first_one:\n        temp = data[0]\n        data[0] = data[first_one]\n        data[first_one] = temp\n    sol = 0\n    for i in range(n - 1):\n        sol += int(data[i] + data[i + 1])\n    print(sol)\nfor (n, k, data) in q:\n    solve(n, k, data)", "t = int(input())\n\ndef solve(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    (first, last) = (10 ** 10, -10 ** 10)\n    num = s.count('1')\n    sum_ = num * 11\n    for i in range(n):\n        if s[i] == '1':\n            first = i + 1\n            break\n    for i in range(n):\n        if s[n - i - 1] == '1':\n            last = n - i\n            break\n    if first == 1:\n        sum_ -= 1\n    if last == n:\n        sum_ -= 10\n    flag = True\n    if k >= n - last and last != n:\n        k -= n - last\n        sum_ -= 10\n        if last == 1:\n            sum_ += 1\n        if first == last:\n            flag = False\n    if k >= first - 1 and first != 1 and flag and (first != n):\n        sum_ -= 1\n    print(sum_)\nfor i in range(t):\n    solve(i + 1)", "from collections import Counter\n\ndef main():\n    (n, k) = map(int, input().split())\n    s = input()\n    ori = 0\n    one = 0\n    zero = 0\n    o = []\n    z = []\n    for i in range(n):\n        if s[i] == '0':\n            zero += 1\n            z.append(i)\n        else:\n            one += 1\n            o.append(i)\n    ori = one * 11\n    if ori == 0:\n        return 0\n    flag1 = True\n    flag2 = True\n    if s[0] == '1':\n        ori -= 1\n        flag1 = False\n    if s[-1] == '1':\n        ori -= 10\n        flag2 = False\n        one -= 1\n        o.pop()\n    if one == 0:\n        return ori\n    if flag1 or flag2:\n        if one == 1:\n            i = o[0]\n            if flag2:\n                req = n - 1 - i\n                if k >= req:\n                    if i == 0:\n                        return ori - 9\n                    return ori - 10\n            if flag1:\n                req = i\n                if k >= req:\n                    return ori - 1\n            return ori\n        else:\n            i = o[0]\n            j = o[-1]\n            if flag2:\n                req2 = n - 1 - j\n                if k >= req2:\n                    ori -= 10\n                    k -= req2\n            if flag1:\n                req1 = i\n                if k >= req1:\n                    ori -= 1\n            return ori\n    return ori\nfor _ in range(int(input())):\n    print(main())", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = input()\n    sh = 0\n    pe = 0\n    p = 0\n    for j in range(n):\n        if a[j] == '1':\n            sh += 1\n            if sh == 1:\n                pe = j\n                p = j\n            else:\n                p = j\n    minus = 0\n    if sh > 0:\n        if p + k >= n - 1:\n            k = p + k - (n - 1)\n            minus += 10\n        if sh > 1 or minus == 0:\n            if k >= pe:\n                minus += 1\n        print(sh * 11 - minus)\n    else:\n        print(0)", "from sys import stdin\ninput = stdin.readline\nimport bisect\nimport math\n\ndef calc(l):\n    ans = 0\n    for i in range(len(l) - 1):\n        ans += int(l[i]) * 10 + int(l[i + 1])\n    return ans\nfor xoxo in range(1):\n    for _ in range(int(input())):\n        (n, k) = map(int, input().split())\n        s = input()\n        l = list(s)\n        l = l[:n]\n        ind = []\n        x = []\n        for i in range(n):\n            if int(s[i]) == 1:\n                ind.append(i)\n        if len(ind) == 0:\n            print(0)\n            continue\n        elif len(ind) == 1:\n            x.append(n - ind[0] - 1)\n            x.append(ind[0])\n            if k >= x[0]:\n                (l[-1], l[ind[0]]) = (l[ind[0]], l[-1])\n            elif k >= x[1]:\n                (l[0], l[ind[0]]) = (l[ind[0]], l[0])\n        else:\n            x.append(n - ind[-1] - 1)\n            x.append(ind[0])\n            x.append(sum(x))\n            if k >= x[2]:\n                (l[-1], l[ind[-1]]) = (l[ind[-1]], l[-1])\n                (l[0], l[ind[0]]) = (l[ind[0]], l[0])\n            elif k >= x[0] and x[0] != 0:\n                (l[-1], l[ind[-1]]) = (l[ind[-1]], l[-1])\n            elif k >= x[1]:\n                (l[0], l[ind[0]]) = (l[ind[0]], l[0])\n        print(calc(l))", "import sys\n\ndef f(s):\n    c = 0\n    for i in range(len(s) - 1):\n        c += int(str(s[i]) + str(s[i + 1]))\n    return c\n\ndef aux(n, k, s):\n    i = n - 1\n    while i >= 0 and s[i] != 1:\n        i -= 1\n    if i < 0:\n        return 0\n    elif i == 0:\n        if k >= n - 1:\n            (s[i], s[-1]) = (s[-1], s[i])\n            return f(s)\n        return f(s)\n    else:\n        if k >= n - 1 - i:\n            (s[i], s[-1]) = (s[-1], s[i])\n            k -= n - 1 - i\n        j = 0\n        while j < n and s[j] != 1:\n            j += 1\n        if j == n - 1:\n            return f(s)\n        else:\n            if k >= j:\n                (s[j], s[0]) = (s[0], s[j])\n                return f(s)\n            return f(s)\n\ndef main():\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10 ** 6)\n    t = int(input())\n    for _ in range(t):\n        (n, k) = map(int, input().split())\n        s = list(map(int, list(input().replace('\\n', ''))))\n        print(aux(n, k, s))\nmain()", "for h in range(int(input())):\n    (n, k) = map(int, input().split())\n    u = input()\n    x = []\n    for i in u:\n        x.append(i)\n    c = x.count('1') * 11\n    if c == 0:\n        print(c)\n        continue\n    if x[-1] == '0':\n        m = 0\n        for i in range(n):\n            if x[i] == '1':\n                m = i\n        if k >= n - m - 1:\n            (x[m], x[-1]) = (x[-1], x[m])\n            k = k - (n - m - 1)\n            c -= 10\n    else:\n        c -= 10\n    if x[0] == '0':\n        m = n\n        for i in range(n):\n            if x[i] == '1':\n                break\n        if k >= i and i != n - 1:\n            k -= i\n            c -= 1\n    else:\n        c -= 1\n    print(c)", "from sys import stdin, stdout\nI = stdin.readline\nO = stdout.write\nfor _ in range(int(I())):\n    (n, k) = list(map(int, I().split()))\n    st = I()\n    la = -k\n    st = list(st)\n    ans = 0\n    if st.count('1') == 0:\n        print(0)\n        continue\n    for j in range(n - 1, -1, -1):\n        if st[j] == '1':\n            la = j\n            break\n    if k >= n - 1 - la:\n        st[la] = '0'\n        st[n - 1] = '1'\n        k -= n - 1 - la\n    s = 0\n    for i in range(n - 1):\n        if st[i] == '1':\n            now = i - s\n            if k >= now:\n                k -= now\n                st[i] = '0'\n                st[s] = '1'\n                s += 1\n    for i in range(n - 1):\n        ans += int(st[i] + st[i + 1])\n    print(ans)", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    s = I()\n    (i, j) = (x.find('1') % 8 ** 10 for x in (s, s[::-1]))\n    print(11 * s.count('1') - ((i <= k) & (k >= i + j < n - 1 or j > k)) - 10 * (j <= k))", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    s = I()\n    (i, j) = (x.find('1') % 8 ** 10 for x in (s, s[::-1]))\n    print(11 * s.count('1') - (i <= k) * (k >= i + j < n - 1 or j > k) - 10 * (j <= k))", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    s = I()\n    (i, j) = (x.find('1') % 8 ** 10 for x in (s, s[::-1]))\n    print(11 * s.count('1') - (k >= i + j < n - 1 or i <= k < j) - 10 * (j <= k))", "for _ in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    s = list(input())\n    l = []\n    ans = 0\n    t = s.count('1')\n    if t == 0:\n        print(0)\n        continue\n    for i in range(n):\n        if s[i] == '1':\n            l.append(i)\n            ans += 11\n    used = 0\n    if k >= n - l[-1] - 1:\n        k -= n - l[-1] - 1\n        used = 1\n        ans -= 10\n    if k >= l[0] and (used == 0 or t > 1):\n        ans -= 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    s = list(input())\n    (ones, leftmost, rightmost) = (0, n, -1)\n    for i in range(n):\n        if s[i] == '1':\n            ones += 1\n            if leftmost == n:\n                leftmost = i\n            rightmost = i\n    ans = 0\n    if ones > 0 and n - rightmost - 1 <= x:\n        x -= n - rightmost - 1\n        ans += 1\n        ones -= 1\n    if ones > 0 and leftmost <= x:\n        ans += 10\n        ones -= 1\n    ans += 11 * ones\n    print(ans)", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    s = I()\n    (i, j) = (x.find('1') % 8 ** 10 for x in (s, s[::-1]))\n    print(11 * s.count('1') - (k >= i + j < n - 1 or i <= k < j) - 10 * (j <= k))", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    s = I()\n    (i, j) = (x.find('1') % 8 ** 10 for x in (s, s[::-1]))\n    print(11 * s.count('1') - (i <= k and (i + j <= min(k, n - 2) or j > k)) - 10 * (j <= k))", "tc = int(input())\nfor t in range(tc):\n    (n, k) = map(int, input().split())\n    st = input()\n    one = 0\n    s = n + 100\n    e = 0\n    for i in range(n):\n        if st[i] == '1':\n            one = one + 1\n            if s == n + 100:\n                s = i\n            e = i\n    sm = 0\n    if one > 0 and n - 1 - e <= k:\n        sm = 1\n        one = one - 1\n        k = k - (n - 1 - e)\n    if one > 0 and s <= k:\n        sm = sm + 10\n        one = one - 1\n    print(sm + 11 * one)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    count1 = 0\n    for i in range(n):\n        if s[i] == '1':\n            count1 += 1\n            r = i\n            if count1 == 1:\n                l = i\n    if not count1:\n        print(0)\n        continue\n    ans = count1 * 11\n    r = n - r - 1\n    if k >= r:\n        ans -= 10\n        count1 -= 1\n        k -= r\n    if k >= l and count1:\n        ans -= 1\n    print(ans)", "t = int(input())\nfor e in range(t):\n    (n, k) = map(int, input().split())\n    a = input()\n    (l, r) = (-1, -1)\n    s = 0\n    for i in range(n):\n        if a[i] == '1':\n            s += 11\n            r = i\n            if l == -1:\n                l = i\n    if r == -1:\n        print(s)\n        continue\n    f = k\n    if k >= n - r - 1:\n        s -= 10\n        f -= n - r - 1\n    if l != r or k < n - r - 1:\n        if f >= l:\n            s -= 1\n    print(s)", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    s = I()\n    (i, j) = (x.find('1') % 8 ** 10 for x in (s, s[::-1]))\n    print(11 * s.count('1') - (k >= i + j < n - 1 or i <= k < j) - 10 * (j <= k))", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    s = I()\n    (i, j) = (x.find('1') % 8 ** 10 for x in (s, s[::-1]))\n    print(11 * s.count('1') - (k >= i + j < n - 1 or i <= k < j) - 10 * (j <= k))", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    s = I()\n    (i, j) = (x.find('1') % 8 ** 10 for x in (s, s[::-1]))\n    print(11 * s.count('1') - (k >= i + j < n - 1 or i <= k < j) - 10 * (j <= k))", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    s = I()\n    (i, j) = (x.find('1') % 8 ** 10 for x in (s, s[::-1]))\n    print(11 * s.count('1') - (k >= i + j < n - 1 or i <= k < j) - 10 * (j <= k))", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    s = I()\n    (i, j) = (x.find('1') % 8 ** 10 for x in (s, s[::-1]))\n    print(11 * s.count('1') - (k >= i + j < n - 1 or i <= k < j) - 10 * (j <= k))", "for _ in [0] * int(input()):\n    (n, k) = map(int, input().split())\n    s = input()\n    one = s.count('1')\n    if one == 0:\n        print(0)\n        continue\n    if one == 1:\n        for i in range(n):\n            if s[i] == '1':\n                index = i\n                break\n        if n - 1 - index <= k:\n            print(1)\n            continue\n        print(11 - (index <= k))\n        continue\n    for i in range(n):\n        if s[i] == '1':\n            index_1 = i\n            break\n    for i in range(n - 1, -1, -1):\n        if s[i] == '1':\n            index_2 = i\n            break\n    if n - 1 - index_2 <= k:\n        print(11 * one - 10 - (index_1 <= k - n + index_2 + 1))\n        continue\n    print(11 * one - (index_1 <= k))", "def solve():\n    (n, k) = map(int, input().split())\n    s = list(input())\n    indl = -1\n    indr = -1\n    for i in range(n):\n        if s[i] == '1':\n            indl = i\n            break\n    for i in range(n - 1, -1, -1):\n        if s[i] == '1':\n            indr = i\n            break\n    ans = 0\n    if indl != -1:\n        if n - 1 - indr <= k:\n            k -= n - 1 - indr\n            ans += 1\n            del s[indr]\n            if s.count('1') == 0:\n                print(1)\n                return\n        k -= indl\n        if k >= 0:\n            ans += 10\n            del s[indl]\n        ans += s.count('1') * 11\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = input()\n    (p1, p2, ans) = (-1, -1, 0)\n    for i in range(n):\n        if a[i] == '1':\n            ans += 11\n            p2 = i\n            if p1 == -1:\n                p1 = i\n    if p2 == -1:\n        print(ans)\n        continue\n    if k >= n - 1 - p2:\n        ans -= 10\n        if p1 != p2 or k < n - p2 - 1:\n            if k - (n - p2 - 1) >= p1:\n                ans -= 1\n                print(ans)\n                continue\n            else:\n                print(ans)\n                continue\n    if p1 != p2 or k < n - p2 - 1:\n        if k >= p1:\n            ans -= 1\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    b = s.find('1')\n    e = n - s.rfind('1') - 1\n    c = s.count('1')\n    ans = c * 11\n    if e <= k:\n        ans -= 10\n        k -= e\n        if c != 1 and b <= k:\n            ans -= 1\n    elif b <= k:\n        ans -= 1\n    if c:\n        print(ans)\n    else:\n        print(0)", "from posixpath import split\n\ndef Calculate(num):\n    return num * 11\n\ndef count_left_most_one(ara, sz):\n    for x in range(sz):\n        if ara[x] == '1':\n            return x\n    return -1\n\ndef count_right_most_one(ara, sz):\n    cnt = 0\n    for x in range(sz - 1, -1, -1):\n        if ara[x] == '1':\n            return cnt\n        cnt += 1\n    return -1\nt = int(input())\nfor balsal in range(t):\n    x = input()\n    x = x.split(' ')\n    n = int(x[0])\n    k = int(x[1])\n    ara = input()\n    x = count_left_most_one(ara, n)\n    y = count_right_most_one(ara, n)\n    num = ara.count('1')\n    if num > 1:\n        ans = 11 * (num - 1)\n        if y <= k:\n            if y + x > k:\n                ans += 1\n        else:\n            ans += 10\n            if x > k:\n                ans += 1\n    elif num == 1:\n        if k < 1:\n            if x != 0 and y != 0:\n                ans = 11\n            elif x == 0:\n                ans = 10\n            elif y == 0:\n                ans = 1\n        elif len(ara) == 1:\n            ans = 1\n        elif k >= y:\n            ans = 1\n        elif k >= x:\n            ans = 10\n        else:\n            ans = 11\n    else:\n        ans = 0\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    mas = list(input())\n    d = dict()\n    d['1'] = []\n    d['0'] = []\n    for i in range(n):\n        d[mas[i]].append(i)\n    if len(d['1']) == 0:\n        print(0)\n    elif len(d['1']) == 1:\n        ans = 11\n        index = d['1'][0]\n        if n - index - 1 <= k:\n            ans -= 10\n        elif index <= k:\n            ans -= 1\n        print(ans)\n    else:\n        ans = len(d['1']) * 11\n        r = max(d['1'])\n        l = min(d['1'])\n        if n - r - 1 <= k:\n            ans -= 10\n            k -= n - r - 1\n        if l <= k:\n            ans -= 1\n            k -= l\n        print(ans)", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    s = I()\n    (i, j) = (x.find('1') % 8 ** 10 for x in (s, s[::-1]))\n    print(11 * s.count('1') - (k >= i + j < n - 1 or i <= k < j) - 10 * (j <= k))", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    s = I()\n    (i, j) = (x.find('1') % 8 ** 10 for x in (s, s[::-1]))\n    print(11 * s.count('1') - (k >= i + j < n - 1 or i <= k < j) - 10 * (j <= k))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    b = s.find('1')\n    e = n - s.rfind('1') - 1\n    c = s.count('1')\n    ans = c * 11\n    if e <= k:\n        ans -= 10\n        k -= e\n        if c != 1 and b <= k:\n            ans -= 1\n    elif b <= k:\n        ans -= 1\n    if c:\n        print(ans)\n    else:\n        print(0)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    b = s.find('1')\n    e = n - s.rfind('1') - 1\n    c = s.count('1')\n    ans = c * 11\n    if e <= k:\n        ans -= 10\n        k -= e\n        if c != 1 and b <= k:\n            ans -= 1\n    elif b <= k:\n        ans -= 1\n    if c:\n        print(ans)\n    else:\n        print(0)", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    s = I()\n    (i, j) = (x.find('1') % 8 ** 10 for x in (s, s[::-1]))\n    print(11 * s.count('1') - (k >= i + j < n - 1 or i <= k < j) - 10 * (j <= k))", "for _ in range(int(input())):\n    (n, k) = [int(x) for x in input().split(' ')]\n    s = input()\n    cnt = 0\n    for c in s:\n        if c == '1':\n            cnt += 1\n    if cnt == 0:\n        print(0)\n        continue\n    ans = cnt * 11\n    (left, right) = (0, n - 1)\n    while s[left] == '0':\n        left += 1\n    while s[right] == '0':\n        right -= 1\n    if k >= left + n - 1 - right and left != right:\n        ans -= 11\n    elif k >= n - 1 - right:\n        ans -= 10\n    elif k >= left:\n        ans -= 1\n    print(ans)", "loopcount = int(input())\nfor loop in range(loopcount):\n    x = input()\n    x = x.split(' ')\n    x = list(map(int, x))\n    a = input()\n    output = 0\n    first = -1\n    last = -1\n    for i in range(x[0]):\n        if a[i] == '1':\n            output += 11\n            last = i\n            if first == -1:\n                first = i\n    if first == -1:\n        print(output)\n        continue\n    if first == last:\n        if x[0] - 1 - last <= x[1]:\n            output -= 10\n            x[1] -= x[0] - 1 - last\n        elif last <= x[1]:\n            output -= 1\n    else:\n        if x[0] - 1 - last <= x[1]:\n            output -= 10\n            x[1] -= x[0] - 1 - last\n        if first <= x[1]:\n            output -= 1\n    print(output)", "for t in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    s = input()\n    first = -1\n    last = n\n    ctr = 0\n    for i in range(n):\n        if s[i] == '1':\n            if first == -1:\n                first = i\n            last = i\n            ctr += 1\n    if ctr == 0:\n        print(0)\n    elif ctr == 1:\n        if n - 1 - last <= k:\n            print(1)\n        elif first <= k:\n            print(10)\n        else:\n            print(11)\n    else:\n        total = 0\n        if n - 1 - last <= k:\n            total += 1\n            ctr -= 1\n            k -= n - 1 - last\n        if first <= k:\n            total += 10\n            ctr -= 1\n        total += ctr * 11\n        print(total)", "for y in [0] * int(input()):\n    (n, k) = map(int, input().split())\n    s = input()\n    (i, j) = (x.find('1') % 8 ** 10 for x in (s, s[::-1]))\n    print(11 * s.count('1') - (k >= i + j < n - 1 or i <= k < j) - 10 * (j <= k))", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    s = list(input())\n    answ = 0\n    i = n - 1\n    while i >= 0 and s[i] != '1':\n        i -= 1\n    if i == -1:\n        print(0)\n        continue\n    if n - i - 1 <= k:\n        k -= n - i - 1\n        (s[i], s[-1]) = (s[-1], s[i])\n    i = 0\n    while i < n - 1 and s[i] != '1':\n        i += 1\n    if i != n - 1 and k >= i:\n        (s[0], s[i]) = (s[i], s[0])\n    print(int(s[0]) * 10 + 11 * s[1:-1].count('1') + int(s[-1]))", "def spliter():\n    d = input()\n    a = d.split()\n    r = []\n    for i in a:\n        k = int(i)\n        r.append(k)\n    return r\n_t = int(input())\nfor _ in range(_t):\n    n = spliter()\n    a = input()\n    count1 = -1\n    count2 = -1\n    count3 = 0\n    for i in range(n[0]):\n        if a[i] == '1':\n            if count3 == 0:\n                count1 = i\n            count2 = n[0] - i - 1\n            count3 += 1\n    if count2 <= n[1]:\n        n[1] -= count2\n        count2 = 0\n    if count1 <= n[1]:\n        count1 = 0\n    if count3 == 0:\n        print(0)\n        continue\n    elif count3 == 1:\n        if count2 == 0:\n            print(1)\n        elif count1 == 0:\n            print(10)\n        else:\n            print(11)\n    else:\n        resul = 11 * count3\n        if count1 == 0:\n            resul -= 1\n        if count2 == 0:\n            resul -= 10\n        print(resul)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    (first, last, cnt, ans) = (n, 0, 0, 0)\n    for i in range(n):\n        if s[i] == '0':\n            continue\n        cnt += 1\n        if first == n:\n            first = i\n        last = i\n    if cnt and n - last - 1 <= k:\n        ans += 1\n        cnt -= 1\n        k -= n - last - 1\n    if cnt and first <= k:\n        ans += 10\n        cnt -= 1\n    ans += 11 * cnt\n    print(ans)", "from collections import defaultdict\nt = int(input())\nwhile t > 0:\n    t -= 1\n    (n, k) = [int(x) for x in input().split(' ')]\n    s = input()\n    one_count = 0\n    if len(s) == 1:\n        print(int(s))\n        continue\n    for letter in s:\n        if letter == '1':\n            one_count += 1\n    answer = one_count * 11\n    if s[0] == '1':\n        answer -= 1\n    if s[n - 1] == '1':\n        answer -= 10\n    if k == 0 or one_count == 0:\n        print(answer)\n        continue\n    starting_gap = 0\n    while s[starting_gap] != '1':\n        starting_gap += 1\n    ending_gap = 0\n    while s[n - 1 - ending_gap] != '1':\n        ending_gap += 1\n    if ending_gap != 0 and ending_gap <= k:\n        answer -= 10\n        k -= ending_gap\n    if starting_gap != 0 and starting_gap <= k:\n        answer -= 1\n    print(max(1, answer))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    (back, front) = (-1, -1)\n    cnt = -1\n    s = list(s)\n    for i in range(n - 1, -1, -1):\n        cnt += 1\n        if s[i] == '1':\n            ind1 = i\n            front = cnt\n            break\n    cnt = -1\n    for i in range(n):\n        cnt += 1\n        if s[i] == '1':\n            ind2 = i\n            back = cnt\n            break\n    if front == -1:\n        print(0)\n        continue\n    elif ind1 == ind2:\n        if k >= front:\n            print(1)\n            continue\n        elif k >= back:\n            print(10)\n            continue\n        else:\n            print(11)\n    else:\n        if k >= front:\n            (s[ind1], s[-1]) = (s[-1], s[ind1])\n            k -= front\n        if k >= back:\n            (s[ind2], s[0]) = (s[0], s[ind2])\n        res = 0\n        if s[0] == '1':\n            res += 10\n        if s[-1] == '1':\n            res += 1\n        for i in range(1, n - 1):\n            if s[i] == '1':\n                res += 11\n        print(res)", "def solve():\n    (n, k) = map(int, input().split())\n    inp = input()\n    ones = inp.count('1')\n    if ones == 0:\n        return 0\n    front = inp.find('1')\n    end = inp[::-1].find('1')\n    if ones == 1:\n        if k >= end:\n            return 1\n        if k >= front:\n            return 10\n        return 11\n    inp = list(inp)\n    if k >= end != 0:\n        k -= end\n        inp[len(inp) - end - 1] = '0'\n        inp[-1] = '1'\n    if k >= front != 0:\n        inp[0] = '1'\n        inp[front] = '0'\n    res = 0\n    for i in range(len(inp) - 1):\n        res += int(inp[i] + inp[i + 1])\n    return res\n\ndef main():\n    for _ in range(int(input())):\n        print(solve())\n    return\nmain()", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    (left, right, ans) = (0, 0, 0)\n    for i in range(n - 1):\n        ans += int(s[i] + s[i + 1])\n    if ans == 0:\n        print(0)\n        continue\n    for i in s:\n        if i == '1':\n            break\n        left += 1\n    for i in s[::-1]:\n        if i == '1':\n            break\n        right += 1\n    if left + right == n - 1:\n        if right <= k and right != 0:\n            k -= right\n            ans = 1\n            right = 0\n        elif left <= k and right != 0 and (left != 0):\n            k -= left\n            ans = 10\n    else:\n        if right <= k and right != 0:\n            k -= right\n            ans -= 10\n            right = 0\n        if left <= k and left != 0:\n            k -= left\n            ans -= 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    f = 999999999\n    l = -999999999\n    ans = 0\n    for i in range(n):\n        if s[i] == '1':\n            f = min(f, i)\n            l = max(l, i)\n            ans += 11\n    l = n - 1 - l\n    used = 0\n    if k >= l:\n        ans -= 10\n        k -= l\n        used = 1\n    if k >= f and (used == 0 or ans > 11):\n        ans -= 1\n    print(ans)", "def substringSum(s):\n    sum = 0\n    for i in range(1, len(s)):\n        sum += int(s[i - 1] + s[i])\n    return sum\n\ndef solution(n, s, k):\n    min_idx = s.index('1')\n    max_idx = -1\n    for (idx, x) in enumerate(s):\n        if s[idx] == '1':\n            max_idx = idx\n    sum = substringSum(s)\n    if k == 0:\n        print(sum)\n    else:\n        rightShift = False\n        if k >= n - 1 - max_idx and max_idx != n - 1:\n            sum -= 10 - (max_idx == 0)\n            k -= n - 1 - max_idx\n            rightShift = True\n        if (min_idx != max_idx or (not rightShift and min_idx != n - 1)) and 1 <= min_idx <= k:\n            sum -= 1\n            k -= min_idx\n        print(sum)\nT = int(input())\nfor t in range(T):\n    (n, k) = [int(x) for x in input().split()]\n    s = input()\n    if '1' not in s:\n        print('0')\n    else:\n        solution(n, s, k)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input()))\n    i = 0\n    j = n - 1\n    while j >= 0:\n        if l[j] == 0:\n            pass\n        else:\n            if k >= n - 1 - j:\n                k -= n - 1 - j\n                l[j] = 0\n                l[-1] = 1\n            break\n        j -= 1\n    while i <= n - 2:\n        if l[i] == 0:\n            pass\n        elif k >= i:\n            k -= i\n            l[i] = 0\n            l[0] = 1\n            break\n        i += 1\n    ans = 0\n    for i in range(n - 1):\n        ans += l[i] * 10 + l[i + 1]\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    mas = list(input())\n    d = dict()\n    d['1'] = []\n    d['0'] = []\n    for i in range(n):\n        d[mas[i]].append(i)\n    if len(d['1']) == 0:\n        print(0)\n    elif len(d['1']) == 1:\n        ans = 11\n        index = d['1'][0]\n        if n - index - 1 <= k:\n            ans -= 10\n        elif index <= k:\n            ans -= 1\n        print(ans)\n    else:\n        ans = len(d['1']) * 11\n        r = max(d['1'])\n        l = min(d['1'])\n        if n - r - 1 <= k:\n            ans -= 10\n            k -= n - r - 1\n        if l <= k:\n            ans -= 1\n            k -= l\n        print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input().strip()\n    z = sum((11 * int(c) for c in s))\n    k = min(k, n - 1)\n    (a, b) = (0, 0)\n    while a <= k:\n        if s[-a - 1] == '1':\n            break\n        a += 1\n    while b <= k:\n        if s[b] == '1':\n            break\n        b += 1\n    if b + a == n - 1 == k:\n        print(z - 10)\n    elif b + a <= k:\n        print(z - 11)\n    elif a <= k:\n        print(z - 10)\n    elif b <= k:\n        print(z - 1)\n    else:\n        print(z)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    st = input()\n    minsum = 11 * st.count('1')\n    if minsum == 0:\n        print(0)\n        continue\n    ones = st.count('1')\n    first = st.index('1')\n    last = st[::-1].index('1')\n    if last <= k:\n        k -= last\n        minsum -= 10\n    if first <= k and minsum > 1:\n        k -= first\n        minsum -= 1\n    print(minsum)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    L = list(input())\n    L = [int(x) for x in L]\n    if not 1 in L:\n        print(0)\n        continue\n    if L.count(1) == 1:\n        a = L.index(1)\n        if k >= n - 1 - a:\n            print(1)\n        elif k >= a:\n            print(10)\n        else:\n            print(11)\n        continue\n    a = L.index(1)\n    L.reverse()\n    b = L.index(1)\n    b = n - b - 1\n    c = L.count(1)\n    if k >= n - 1 - b + a:\n        ans = c * 11 - 11\n    elif k >= n - 1 - b:\n        ans = c * 11 - 10\n    elif k >= a:\n        ans = c * 11 - 1\n    else:\n        ans = c * 11\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    count = 0\n    for i in range(n - 1):\n        count += int(s[i] + s[i + 1])\n    if count == 0:\n        print(0)\n        continue\n    if s[n - 1] != '1':\n        right = n - 1\n        while s[right] != '1':\n            right -= 1\n        k -= n - 1 - right\n        if k >= 0:\n            count -= 10\n            if right == 0:\n                count += 1\n        else:\n            k += n - 1 - right\n    if s[0] != '1' and count != 1:\n        left = 0\n        while s[left] != '1':\n            left += 1\n        k -= left\n        if left != n - 1 and k >= 0:\n            count -= 1\n    print(count)", "def func(s):\n    ans = 0\n    for i in range(len(s) - 1):\n        ans += int(s[i:i + 2])\n    return ans\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    lone = 0\n    rone = 0\n    for i in range(n):\n        if s[i] == '1':\n            lone = i\n            break\n    for i in range(n - 1, -1, -1):\n        if s[i] == '1':\n            rone = i\n            break\n    right = False\n    left = False\n    if rone != n - 1:\n        if n - 1 - rone <= k:\n            right = True\n            k -= n - 1 - rone\n    if right:\n        if rone != lone:\n            if lone != 0:\n                if lone <= k:\n                    left = True\n    elif lone != 0:\n        if lone <= k:\n            left = True\n    ans = func(s)\n    if ans == 0:\n        print(0)\n        continue\n    if right:\n        ans -= 10\n        if rone == 0:\n            ans += 1\n    if left:\n        ans -= 1\n        if lone == n - 1:\n            ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = (int(number) for number in input().split(' '))\n    item = 0\n    zero_count_right = 0\n    zero_count_left = 0\n    ones = 0\n    zeros = 0\n    for number in input():\n        if item == 0:\n            if number == '1':\n                left = 1\n                count_left = False\n            else:\n                left = 0\n                count_left = True\n        if number == '0':\n            zeros += 1\n            zero_count_right += 1\n            if count_left is True:\n                zero_count_left += 1\n        else:\n            ones += 1\n            zero_count_right = 0\n            count_left = False\n        item += 1\n    sum_row = ones * 11\n    if ones >= 1 and zero_count_right <= k:\n        sum_row -= 10\n        ones -= 1\n        k -= zero_count_right\n    if ones >= 1 and zero_count_left <= k:\n        sum_row -= 1\n    print(sum_row)", "def count(l):\n    ans = 0\n    n = len(l)\n    for i in range(n - 1):\n        if l[i] == '0' and l[i + 1] == '0':\n            continue\n        elif l[i] == '0' and l[i + 1] == '1':\n            ans += 1\n            continue\n        elif l[i] == '1' and l[i + 1] == '0':\n            ans += 10\n            continue\n        else:\n            ans += 11\n    return ans\n\ndef ss(n, l, k):\n    f = 0\n    if l[-1] == '0':\n        for i in range(n - 2, -1, -1):\n            if l[i] == '1':\n                s = n - i - 1\n                if s <= k:\n                    k -= s\n                    l[i] = '0'\n                    l[-1] = '1'\n                    f = 1\n                break\n    if l[-1] == '1':\n        f = 1\n    if f == 1 and l.count('1') == 1:\n        return count(l)\n    if l[0] == '0':\n        for i in range(1, n):\n            if l[i] == '1':\n                s = i\n                if s <= k:\n                    k -= s\n                    l[i] = '0'\n                    l[0] = '1'\n                    f = 1\n                break\n    return count(l)\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(str(input()))\n    print(ss(n, l, k))", "import collections\nfrom math import ceil, gcd, sqrt, log\nimport bisect\nINF = float('inf')\nmod = 1000000007\n\ndef solve():\n    (n, k) = map(int, input().split())\n    s = input()\n    s = list(s)\n    for i in range(n - 1, -1, -1):\n        if s[i] == '1':\n            if k >= n - i - 1:\n                (s[n - 1], s[i]) = (s[i], s[n - 1])\n                k -= n - 1 - i\n            break\n    for i in range(n - 1):\n        if s[i] == '1':\n            if k >= i:\n                (s[0], s[i]) = (s[i], s[0])\n                k -= i\n    ans = 0\n    for i in range(n - 1):\n        num = int(s[i] + s[i + 1])\n        ans += num\n    print(ans)\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "def fun(l):\n    n = len(l)\n    c = 0\n    for i in range(n - 1):\n        c += int(l[i] + l[i + 1])\n    return c\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input().rstrip()\n    l = [x for x in s]\n    for i in range(n - 1, -1, -1):\n        if l[i] == '1':\n            if k >= n - 1 - i:\n                (l[i], l[n - 1]) = (l[n - 1], l[i])\n                k -= n - 1 - i\n            break\n    for i in range(n - 1):\n        if l[i] == '1':\n            if k >= i:\n                (l[0], l[i]) = (l[i], l[0])\n                k -= i\n            break\n    ans2 = fun(l)\n    print(ans2)", "def fun(l):\n    n = len(l)\n    c = 0\n    for i in range(n - 1):\n        c += int(l[i] + l[i + 1])\n    return c\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input().rstrip()\n    l = [x for x in s]\n    for i in range(n - 1, -1, -1):\n        if l[i] == '1':\n            if k >= n - 1 - i:\n                (l[i], l[n - 1]) = (l[n - 1], l[i])\n                k -= n - 1 - i\n            break\n    for i in range(n - 1):\n        if l[i] == '1':\n            if k >= i:\n                (l[0], l[i]) = (l[i], l[0])\n                k -= i\n            break\n    ans2 = fun(l)\n    print(ans2)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    tot = 0\n    f = k\n    last = first = 0\n    if s[-1] != '1':\n        for i in range(n - 2, -1, -1):\n            if k == 0:\n                break\n            if s[i] == '1':\n                (s[i], s[-1]) = (s[-1], s[i])\n                last = 1\n                k -= 1\n                break\n            k -= 1\n    if not last:\n        k = f\n    if s[0] != '1':\n        for i in range(1, n - 1):\n            if k == 0:\n                break\n            if s[i] == '1':\n                (s[0], s[i]) = (s[i], s[0])\n                break\n            k -= 1\n    for i in range(n):\n        num = s[i]\n        if num == '0':\n            continue\n        if i == 0:\n            tot += 10\n        elif i == n - 1:\n            tot += 1\n        else:\n            tot += 11\n    print(tot)", "import math as m\nfrom collections import defaultdict, deque\nfrom bisect import bisect_left as b_l\nfrom bisect import bisect_right as b_r\nfor _ in range(int(input())):\n    (n, k) = (int(i) for i in input().split())\n    s = input()\n    ans = 0\n    for i in range(n - 1):\n        ans += int(s[i] + s[i + 1])\n    start = 0\n    while start < n and s[start] != '1':\n        start += 1\n    end = n - 1\n    while end > -1 and s[end] != '1':\n        end -= 1\n    flag = True\n    if end != -1 and end != n - 1:\n        if n - 1 - end <= k:\n            if start == end:\n                ans = 1\n                k -= n - 1 - end\n                flag = False\n            else:\n                ans -= 10\n                k -= n - 1 - end\n    if start != n and flag and (start != 0) and (start != n - 1):\n        if start <= k:\n            ans -= 1\n    print(ans)", "T = int(input())\nwhile T:\n    T -= 1\n    (n, k) = [int(x) for x in input().split(' ')]\n    a = list(input())\n    l = -1\n    c = -1\n    cnt = 0\n    for i in range(len(a)):\n        if a[i] == '0':\n            continue\n        c = i\n        cnt += 1\n        if l == -1:\n            l = i\n    r = c\n    if l == -1 and r == -1:\n        print(0)\n    elif l == r:\n        if n - r - 1 <= k:\n            print(1)\n        elif l <= k:\n            print(10)\n        else:\n            print(11)\n    else:\n        ans = 0\n        if n - r - 1 <= k:\n            ans += 1\n            if l <= k - n + r + 1:\n                ans += 10\n            else:\n                ans += 11\n        else:\n            ans += 11\n            if l <= k:\n                ans += 10\n            else:\n                ans += 11\n        ans += (cnt - 2) * 11\n        print(ans)", "T = int(input())\nfor case in range(T):\n    (n, k) = map(int, input().split())\n    s = input()\n    if '1' not in s:\n        print(0)\n        continue\n    ans = 0\n    for i in range(n - 1):\n        ans += int(s[i:i + 2])\n    (l, r) = (s.find('1'), s.rfind('1'))\n    if 0 < n - 1 - r <= k:\n        if r == 0:\n            ans -= 9\n        else:\n            ans -= 10\n            k -= n - 1 - r\n            if l != r and 0 < l <= k:\n                ans -= 1\n    elif 0 < l <= k:\n        if l != n - 1:\n            ans -= 1\n    print(ans)", "def task(n, k, s):\n    total = 0\n    for i in range(n - 1):\n        value = int(s[i:i + 2])\n        total += value\n    ones = 0\n    for c in s:\n        if c == '1':\n            ones += 1\n    startzeros = 0\n    for c in s:\n        if c == '0':\n            startzeros += 1\n        else:\n            break\n    endzeros = 0\n    for c in s[::-1]:\n        if c == '0':\n            endzeros += 1\n        else:\n            break\n    if ones > 0:\n        if endzeros > 0:\n            if endzeros <= k:\n                k -= endzeros\n                if ones == 1 and startzeros == 0:\n                    total -= 9\n                else:\n                    total -= 10\n                ones -= 1\n        else:\n            ones -= 1\n    if ones > 0 and startzeros > 0 and (startzeros <= k):\n        total -= 1\n    print(total)\nt = int(input())\nfor i in range(0, t):\n    (n, k) = map(int, input().split())\n    s = input()\n    task(n, k, s)", "import collections\nt = int(input())\nfor tc in range(t):\n    (n, k) = map(int, input().split())\n    a = list(input())\n    for i in range(n):\n        a[i] = int(a[i])\n    if a[n - 1] == 0:\n        j = n - 2\n        flag = False\n        while j >= 0:\n            if a[j] == 1:\n                flag = True\n                break\n            j -= 1\n        if flag:\n            if abs(j - (n - 1)) <= k:\n                k -= abs(j - (n - 1))\n                (a[j], a[n - 1]) = (a[n - 1], a[j])\n    if a[0] == 0:\n        j = 1\n        flag = False\n        while j <= n - 2:\n            if a[j] == 1:\n                flag = True\n                break\n            j += 1\n        if flag:\n            if abs(j - 0) <= k:\n                k -= abs(j - 0)\n                (a[0], a[j]) = (a[j], a[0])\n    s = 0\n    s += a[-1]\n    s += 10 * a[0]\n    for i in range(1, n - 1):\n        s += 11 * a[i]\n    print(s)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    beg = s.find('1')\n    if beg == -1:\n        print(0)\n        continue\n    endix = s.rfind('1')\n    end = n - endix - 1\n    s = list(s)\n    if k >= end:\n        if s.count('1') == 1:\n            print(1)\n            continue\n        s[endix] = '0'\n        s[n - 1] = '1'\n        k -= end\n    if k >= beg:\n        s[beg] = '0'\n        s[0] = '1'\n    ans = 0\n    s = ''.join(s)\n    for i in range(n - 1):\n        ans += int(s[i:i + 2])\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(map(int, input()))\n    fs = 0\n    for i in range(n - 1):\n        fs += 10 * s[i] + s[i + 1]\n    if k == 0:\n        print(fs)\n    elif s.count(1) == 0:\n        print(0)\n    elif s.count(1) == 1:\n        zf = s.index(1)\n        s1 = s[:]\n        s1.reverse()\n        ze = s1.index(1)\n        if ze <= k:\n            print(1)\n        elif zf <= k:\n            print(10)\n        else:\n            print(11)\n    else:\n        zf = s.index(1)\n        s1 = s[:]\n        s1.reverse()\n        ze = s1.index(1)\n        if 0 < zf + ze <= k:\n            if zf > 0 and ze > 0:\n                print(fs - 11)\n            elif ze > 0:\n                print(fs - 10)\n            elif zf > 0:\n                print(fs - 1)\n        elif 0 < ze <= k:\n            print(fs - 10)\n        elif 0 < zf <= k:\n            print(fs - 1)\n        else:\n            print(fs)", "num = int(input())\n\ndef counter(array):\n    res = 0\n    for i in range(len(array) - 1):\n        res += array[i] * 10 + array[i + 1]\n    return res\nfor _ in range(num):\n    (n, k) = map(int, input().split())\n    array = list(map(int, list(input())))\n    answer = counter(array)\n    if k > 0:\n        if array[n - 1] == 0:\n            count = 0\n            for i in range(n - 1, 0, -1):\n                if array[i] == 1:\n                    break\n                count += 1\n            if count <= k and answer >= 10:\n                k -= count\n                answer -= 10\n                if answer == 0:\n                    answer += 1\n        if array[0] == 0:\n            count = 0\n            for i in range(n - 1):\n                if array[i] == 1:\n                    break\n                count += 1\n            if count <= k and answer > 1:\n                k -= count\n                answer -= 1\n    print(answer)", "t = int(input())\nfor k in range(t):\n    (n, k) = map(int, input().split(' '))\n    s1 = input()\n    s = []\n    ones = 0\n    for i in s1:\n        if i == '1':\n            ones += 1\n        s.append(int(i))\n    fone = 0\n    for i in range(n):\n        if s[i] == 1:\n            fone = i\n            break\n    lone = 0\n    for i in range(n - 1, -1, -1):\n        if s[i] == 1:\n            lone = i\n            break\n    add = 0\n    if ones > 0 and k >= n - lone - 1:\n        add += 1\n        ones -= 1\n        k -= n - lone - 1\n    if ones > 0 and k >= fone:\n        add += 10\n        ones -= 1\n        k -= fone\n    temp = 0\n    print(11 * ones + add)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    (ans, f, l, o) = (0, n, -1, 0)\n    for i in range(n):\n        if s[i] == '0':\n            continue\n        o += 1\n        if f == n:\n            f = i\n        l = i\n    if o and n - l - 1 <= k:\n        ans += 1\n        o -= 1\n        k -= n - l - 1\n    if o and f <= k:\n        ans += 10\n        o -= 1\n    ans += 11 * o\n    print(ans)"]