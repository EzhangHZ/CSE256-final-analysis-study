["import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    n = int(inp())\n    a = list(map(int, inp().split()))\n    c = [[] for i in range(n + 1)]\n    p = [None] * (n + 1)\n    for i in range(n):\n        c[a[i]].append(i)\n    for i in range(n + 1):\n        p[i] = (-len(c[i]), i)\n    p.sort()\n    b = [None] * n\n    for k in range(-p[0][0]):\n        pr = p[0][1]\n        for i in range(1, n + 5):\n            (sz, v) = p[i]\n            if -sz > k:\n                b[c[pr][k]] = v\n                pr = v\n            else:\n                b[c[pr][k]] = p[0][1]\n                break\n    print(' '.join(map(str, b)))\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    n = int(inp())\n    a = list(map(int, inp().split()))\n    c = [[] for i in range(n + 1)]\n    p = [None] * (n + 1)\n    for i in range(n):\n        c[a[i]].append(i)\n    for i in range(n + 1):\n        p[i] = (-len(c[i]), i)\n    p.sort()\n    b = [None] * n\n    for k in range(-p[0][0]):\n        pr = p[0][1]\n        for i in range(1, n + 5):\n            (sz, v) = p[i]\n            if -sz > k:\n                b[c[pr][k]] = v\n                pr = v\n            else:\n                b[c[pr][k]] = p[0][1]\n                break\n    print(' '.join(map(str, b)))\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "import collections\nimport math\nimport sys\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    cnt = collections.Counter(a)\n    mx = max(cnt.values())\n    a = zip(a, range(n))\n    a = sorted(a, key=lambda x: x[0])\n    b = a[mx:] + a[:mx]\n    res = [0] * n\n    for (i, x) in enumerate(a):\n        res[x[1]] = b[i][0]\n    print(*res)\nt = int(input())\nwhile t > 0:\n    main()\n    t -= 1"]