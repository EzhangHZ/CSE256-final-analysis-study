["n = int(input())\nfor i in range(n):\n    s = int(input())\n    r = [int(x) for x in input().split()]\n    z = 0\n    if 1 in r:\n        r.pop(r.index(1))\n        z += 1\n    while 1 in r:\n        r.pop(r.index(1))\n        for j in range(z + 1, 0, -1):\n            if j in r:\n                r.pop(r.index(j))\n                z += 1\n                break\n    print(z)", "n = int(input())\nfor i in range(n):\n    s = int(input())\n    r = [int(x) for x in input().split()]\n    z = 0\n    if 1 in r:\n        r.pop(r.index(1))\n        z += 1\n    while 1 in r:\n        r.pop(r.index(1))\n        for j in range(z + 1, 0, -1):\n            if j in r:\n                r.pop(r.index(j))\n                z += 1\n                break\n    print(z)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lis = [int(x) for x in input().split(' ')]\n    lis.sort()\n    num = lis.count(1)\n    s = min(num, n // 2 + n % 2)\n    check = False\n    for k in range(1, s + 1):\n        lists = lis[k - 1:2 * k - 1]\n        for i in range(k):\n            if lists[i] > i + 1:\n                check = True\n                break\n        if check:\n            s = k - 1\n            break\n    print(s)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    array = [int(x) for x in input().split()]\n    k_max = array.count(1)\n    if k_max == 0:\n        print(0)\n    else:\n        kk = 0\n        array = sorted(array)\n        for k in range(1, min(k_max + 1, int((n + 3) / 2))):\n            array_0 = array[k - 1:2 * k]\n            if all([array_0[i] <= i + 1 for i in range(k)]):\n                kk = k\n        print(kk)", "def cal(n, arr):\n    if arr[0] != 1:\n        return 0\n    if n == 1:\n        return 1\n    t = arr.count(1)\n    for i in range(t, -1, -1):\n        if i + i - 1 > n:\n            continue\n        tag = 0\n        for j in range(i - 1, 2 * i - 1):\n            if arr[j] > j - i + 2:\n                tag = 1\n                break\n        if tag == 0:\n            return i\nfor jj in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    arr.sort()\n    print(cal(n, arr))", "t = int(input())\nfor v in range(t):\n    m = int(input())\n    j = input().split()\n    h = [int(i) for i in j]\n    h.sort()\n    count = 0\n    while True:\n        val = 1\n        check = 0\n        temp = h[count:count * 2 + 1]\n        if temp == [] or len(temp) != count + 1:\n            break\n        for k in temp:\n            if k <= val:\n                val += 1\n            else:\n                check = 1\n                break\n        if check == 0:\n            count += 1\n        else:\n            break\n    print(count)", "def cal(n, arr):\n    if arr[0] != 1:\n        return 0\n    if n == 1:\n        return 1\n    t = arr.count(1)\n    for i in range(t, -1, -1):\n        if i + i - 1 > n:\n            continue\n        tag = 0\n        for j in range(i - 1, 2 * i - 1):\n            if arr[j] > j - i + 2:\n                tag = 1\n                break\n        if tag == 0:\n            return i\nfor jj in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    arr.sort()\n    print(cal(n, arr))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    if arr[0] != 1:\n        print(0)\n    elif n == 1:\n        print(1)\n    else:\n        t = arr.count(1)\n        for i in range(t, -1, -1):\n            if i + i - 1 > n:\n                continue\n            tag = 0\n            for j in range(i - 1, 2 * i - 1):\n                if arr[j] > j - i + 2:\n                    tag = 1\n                    break\n            if tag == 0:\n                print(i)\n                break", "n = int(input())\nfor i in range(n):\n    s = int(input())\n    r = [int(x) for x in input().split()]\n    z = 0\n    if 1 in r:\n        r.pop(r.index(1))\n        z += 1\n    while 1 in r:\n        r.pop(r.index(1))\n        for j in range(z + 1, 0, -1):\n            if j in r:\n                r.pop(r.index(j))\n                z += 1\n                break\n    print(z)", "from itertools import count\nfrom math import ceil\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = {}\n    for i in a:\n        f[i] = f.get(i, 0) + 1\n    if f.get(1, 0) == 0:\n        print(0)\n    else:\n        count1 = 0\n        f[1] -= 1\n        k = 1\n        for j in range(2, ceil(n / 2) + 1):\n            if f.get(j, -1) == -1:\n                if count1 == 0:\n                    f[1] -= 2\n                else:\n                    count1 -= 1\n                    f[1] -= 1\n            else:\n                count1 += f[j] - 1\n                f[1] -= 1\n            if f[1] < 0:\n                break\n            if count1 < 0:\n                break\n            k = j\n        print(k)", "from math import ceil\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = {}\n    for i in a:\n        f[i] = f.get(i, 0) + 1\n    if f.get(1, 0) == 0:\n        print(0)\n    else:\n        count1 = 0\n        f[1] -= 1\n        k = 1\n        for j in range(2, ceil(n / 2) + 1):\n            if f.get(j, -1) == -1:\n                if count1 == 0:\n                    f[1] -= 2\n                else:\n                    count1 -= 1\n                    f[1] -= 1\n            else:\n                count1 += f[j] - 1\n                f[1] -= 1\n            if f[1] < 0:\n                break\n            if count1 < 0:\n                break\n            k = j\n        print(k)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = a.count(1)\n    m = 1\n    pos = 0\n    a.sort()\n    a.append(n + 1)\n    (l, r) = (0, k + 1)\n    while r - l > 1:\n        flag = True\n        M = (l + r) // 2\n        for i in range(M - 1, M + M - 1):\n            if a[i] > i - M + 2:\n                flag = False\n                break\n        if flag:\n            l = M\n        else:\n            r = M\n    print(l)", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    for k in range(n, -1, -1):\n        if all((k - 1 + i < n and a[k - 1 + i] <= i + 1 for i in range(k))):\n            print(k)\n            break", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    for k in range(n, -1, -1):\n        if all((k - 1 + i < n and a[k - 1 + i] <= i + 1 for i in range(k))):\n            print(k)\n            break", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    for k in range(n, -1, -1):\n        if all((k - 1 + i < n and a[k - 1 + i] <= i + 1 for i in range(k))):\n            print(k)\n            break", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    maxx = 0\n    k = 1\n    while 2 * k - 2 < n:\n        i = 2 * k - 2\n        j = k\n        while j >= 1:\n            if a[i] > j:\n                break\n            i -= 1\n            j -= 1\n        if j == 0:\n            maxx = k\n        else:\n            break\n        k += 1\n    print(maxx)", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    for k in range(n, -1, -1):\n        if all((k - 1 + i < n and a[k - 1 + i] <= i + 1 for i in range(k))):\n            print(k)\n            break", "z = int(input())\nfor i in range(z):\n    integer_number = int(input())\n    num_array = sorted(list(map(int, input().split())))\n    num_of_1 = 0\n    for j in num_array:\n        if j == 1:\n            num_of_1 += 1\n        else:\n            break\n    current_max = num_of_1\n    k = num_of_1\n    l = 2\n    while k <= 2 * current_max - 2:\n        try:\n            if num_array[k] <= l:\n                k += 1\n                l += 1\n            else:\n                current_max -= 1\n                l += 1\n        except:\n            current_max -= 1\n            l += 1\n    print(current_max)", "def f(kk):\n    ff = True\n    for j in range(kk + 1):\n        if c[j] <= kk + j:\n            ff = False\n            break\n    return ff\nt = int(input())\nfor ii in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    c = []\n    p = 0\n    for i in range(n):\n        while p < n and l[p] <= i + 1:\n            p += 1\n        c.append(p)\n    k = 0\n    while f(k):\n        k += 1\n    if k > n // 2:\n        k = (n + 1) // 2\n    print(k)", "t = int(input())\nfor num in range(t):\n    n = int(input())\n    bucket = [0] * (n + 2)\n    a = [int(i) for i in input().split()]\n    for i in a:\n        bucket[i] += 1\n    if bucket[1] == 0:\n        print(0)\n        continue\n    if bucket[1] == 1:\n        print(1)\n        continue\n    k = 2\n    flag = []\n    flag.append(1)\n    while k <= n:\n        if bucket[k] == 0:\n            bucket[flag[-1]] -= 1\n            if bucket[flag[-1]] == 1:\n                z = flag.pop()\n            bucket[k] = 1\n            if bucket[1] < k:\n                break\n        if bucket[1] < k:\n            break\n        if bucket[k] >= 2:\n            flag.append(k)\n        k += 1\n    print(k - 1)", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    for k in range(n, -1, -1):\n        if all((k - 1 + i < n and a[k - 1 + i] <= i + 1 for i in range(k))):\n            print(k)\n            break", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = input()\n    y = str(x).split()\n    y = [int(i) for i in y]\n    y.sort()\n    b = n\n    for e in range(n):\n        if y[e] > 1:\n            b = e\n            break\n    for k in range(b, -1, -1):\n        yy = [i for i in y]\n        v = 0\n        for i in range(k):\n            a = k - i\n            if yy[0] > a:\n                v += 1\n                break\n            else:\n                if yy[-1] <= a:\n                    del yy[-1]\n                else:\n                    for d in range(1, len(yy)):\n                        if yy[d] > a:\n                            del yy[d - 1]\n                            break\n                if len(yy) > 0:\n                    c = yy[0] + a\n                    del yy[0]\n                    yy.append(c)\n        if v == 0:\n            print(k)\n            break", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = map(int, input().split())\n    l = sorted(l)\n    k = 1\n    f = 1\n    while f:\n        l1 = l[:]\n        for j in range(k - 1):\n            del l1[0]\n        coun = 0\n        for j in range(k):\n            coun += l1.count(j + 1)\n            if coun < j + 1:\n                f = 0\n                break\n        k += 1\n    print(k - 2)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    axis = [0] * len(a)\n    for i in a:\n        axis[i - 1] += 1\n    k_max = 0\n    for k in range(axis[0], 0, -1):\n        avail = axis[0] - k\n        for i in range(1, k):\n            if avail + axis[i] < 1:\n                break\n            else:\n                avail += axis[i] - 1\n        else:\n            k_max = k\n            break\n    print(k_max)", "import math\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    list1.sort()\n    if 1 not in list1:\n        print(0)\n    else:\n        for q in range(math.ceil(n / 2), 0, -1):\n            s = 1\n            for r in range(q - 1, 2 * q - 1):\n                if list1[r] <= s:\n                    s += 1\n                    continue\n                else:\n                    break\n            else:\n                print(q)\n                break", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    a.append(n + 1)\n    c = set(a)\n    c = list(c)\n    c.sort()\n    b = a.count(1)\n    if b == 0:\n        print(0)\n        continue\n    elif b == 1:\n        print(1)\n        continue\n    else:\n        for k in range(b, -1, -1):\n            ans = 0\n            room = 1\n            for i in range(len(c)):\n                if c[i] > k:\n                    c[i] = k\n                    break\n            for j in range(i - 1, 0, -1):\n                room += c[j + 1] - c[j]\n                p = a.count(c[j])\n                if p <= room:\n                    ans += p\n                    room -= p\n                else:\n                    ans += room\n                    room = 0\n            ans += b\n            if ans >= 2 * k - 1:\n                break\n        print(k)", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    hs = [int(x) for x in input().split()]\n    t = hs.count(1)\n    x = 0\n    y = 0\n    if t <= 1:\n        print(str(t))\n    else:\n        ii = 2\n        while ii <= t:\n            tt = hs.count(ii)\n            if tt == 0 and y == 0:\n                t -= 1\n            elif tt > 1:\n                y += tt - 1\n            elif tt == 0 and y > 0:\n                y -= 1\n            ii += 1\n        print(str(t + x))", "import math\n\ndef check(k: int):\n    for j in range(k - 1, 2 * k - 1):\n        if a[j] > j - k + 2:\n            return 0\n    return 1\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    ans = 0\n    for i in range(math.ceil(n / 2) + 1):\n        if check(i):\n            ans = i\n    print(ans)", "n = int(input())\nl = []\nfor _ in range(n):\n    x = int(input())\n    nn = [int(i) for i in input().split()]\n    nn.sort()\n    nn.append(0)\n    o = nn.count(1)\n    i = 1\n    su = 0\n    a = 0\n    t = 0\n    while i <= o and 2 * i - 2 < len(nn) - 1:\n        a += nn[2 * i - 2] + nn[2 * i - 3]\n        if nn[2 * i - 2] > i or a > i - 1 + int((i + 1) * i / 2):\n            break\n        else:\n            t += 1\n        i += 1\n    l.append(t)\nfor x in l:\n    print(x)", "test = int(input())\nfor i in range(test):\n    n = int(input())\n    array = sorted([int(x) for x in input().split()])\n    x1 = array.count(1)\n    if x1 == 0:\n        print(0)\n    else:\n        k = x1\n        for j in range(x1):\n            for s in range(k, 1, -1):\n                zs = len([x for x in array if x <= s]) - k\n                if zs < s - 1:\n                    k -= 1\n                    break\n            else:\n                ans = k\n                print(k)\n                break", "for x in range(int(input())):\n    b = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    if a.count(1) == 0:\n        print(0)\n    else:\n        c = min(a.count(1), (b + 1) // 2)\n        a.remove(1)\n        for x in range(1, c + 1):\n            if a.count(1) == 0:\n                print(x)\n                break\n            else:\n                a.remove(1)\n                d = [y for y in a if y <= x + 1]\n                if d == []:\n                    print(x)\n                    break\n                else:\n                    a.remove(max(d))", "a = int(input())\nfor i in range(a):\n    b = int(input())\n    c1 = [0] * b\n    c2 = dict()\n    c = list(map(int, input().split()))\n    for i in range(b):\n        if c[i] not in c2.keys():\n            c2[c[i]] = 1\n        else:\n            c2[c[i]] += 1\n    if 1 not in c2.keys():\n        print(0)\n    else:\n        c1[0] = 1\n        c2[1] -= 1\n        k = 1\n        for i in range(2, b):\n            if k >= c2[1] + 1:\n                break\n            if i in c2.keys():\n                if k >= i - 1:\n                    c1[k:k + c2[i]] = [i] * c2[i]\n                    k += c2[i]\n                else:\n                    k += 1\n                    c2[1] -= 1\n            elif c1[i - 1] == 0:\n                k += 1\n                c2[1] -= 1\n        print(min(c2[1] + 1, k))", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    S = list(map(int, input().split()))\n    d = dict()\n    d[1] = 0\n    for i in S:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    Lsum = []\n    sum = 0\n    for i in range(1, d[1] + 1):\n        if i in d:\n            sum += d[i]\n        Lsum.append(sum - i + 1)\n    count = 0\n    for m in range(1, d[1] + 1):\n        for i in range(m):\n            if Lsum[i] < m:\n                count += 1\n            if count != 0:\n                print(m - 1)\n                break\n        if count != 0:\n            break\n    if count == 0:\n        print(d[1])", "a = int(input())\nfor i in range(a):\n    b = int(input())\n    c = list(map(int, input().split()))\n    d = 0\n    if 1 in c:\n        d += 1\n        c.pop(c.index(1))\n    while 1 in c:\n        c.pop(c.index(1))\n        for j in range(d + 1, 0, -1):\n            if j in c:\n                d += 1\n                c.pop(c.index(j))\n                break\n    print(d)", "import bisect\noutput = []\nfor _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    k = a.count(1)\n    while k > 0:\n        flag = 1\n        p = k\n        while p >= 1:\n            j = bisect.bisect(a, p)\n            if j < k + p - 1:\n                flag = 0\n                break\n            else:\n                p -= 1\n        if flag == 1:\n            output.append(str(k))\n            break\n        else:\n            k -= 1\n    if k == 0:\n        output.append(str(0))\nprint('\\n'.join(output))", "for dm1 in range(int(input())):\n    n = int(input())\n    nmbs = [int(dm2) for dm2 in input().split()]\n    bck = [0] * 102\n    for i in nmbs:\n        bck[i] += 1\n    if bck[1] < 2:\n        print(bck[1])\n        continue\n    (k, flag) = (2, [1])\n    while k <= n:\n        if bck[k] == 0:\n            bck[flag[-1]] -= 1\n            if bck[flag[-1]] == 1:\n                z = flag.pop()\n            bck[k] = 1\n        if bck[k] >= 2:\n            flag.append(k)\n        if bck[1] < k:\n            break\n        k += 1\n    print(k - 1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(t) for t in input().split()]\n    arr.sort()\n    ind = min(arr.count(1), (n + 1) // 2) - 1\n    while ind > 0:\n        flag = 0\n        for j in range(ind, 2 * ind + 1):\n            if arr[j] > j - ind + 1:\n                flag = 1\n        if flag == 1:\n            ind -= 1\n            continue\n        break\n    print(ind + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = [int(x) for x in input().split()]\n    s.sort()\n    q = 0\n    p = []\n    m = 0\n    o = s.count(1)\n    pa = 1\n    ma = 0\n    for i in range(o):\n        m += s.count(i + 1)\n        p.append(m)\n    if o != 0:\n        for x in range(1, o + 1):\n            for g in range(2, x + 1):\n                if p[g - 2] < x + g - 2:\n                    pa = 0\n                    break\n                elif p[g - 1] < x + g - 1:\n                    pa = 0\n                    break\n            if pa == 1:\n                ma = x\n        print(ma)\n    else:\n        print(0)", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    for k in range(n, -1, -1):\n        if all((k - 1 + i < n and a[k - 1 + i] <= i + 1 for i in range(k))):\n            print(k)\n            break", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    if l.count(1) == 0:\n        print(0)\n        continue\n    c = min(l.count(1), (n + 1) // 2)\n    l.remove(1)\n    for j in range(1, c + 1):\n        if l.count(1) == 0:\n            print(j)\n            break\n        l.remove(1)\n        d = [y for y in l if y <= j + 1]\n        if d == []:\n            print(j)\n            break\n        else:\n            l.remove(max(d))", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    for k in range((n + 1) // 2, -1, -1):\n        if all((k - 1 + i < n and a[k - 1 + i] <= i + 1 for i in range(k))):\n            print(k)\n            break", "n = int(input())\nfor i in range(n):\n    u = int(input())\n    x = [int(a) for a in input().split()]\n    x.sort()\n    if x.count(1) == 0:\n        print(0)\n    elif x.count(1) == 1:\n        print(1)\n    else:\n        for c in range((u + 1) // 2, -1, -1):\n            for d in range(c):\n                if c + d - 1 >= u:\n                    break\n                if x[c + d - 1] <= d + 1:\n                    y = 0\n                else:\n                    y = 1\n                    break\n            if y == 0:\n                print(c)\n                break", "for i in range(int(input())):\n    n = int(input())\n    lis = sorted(list(map(int, input().split())))\n    for j in range(1, n + 1):\n        num = n - j + 1\n        out = -(-(n - j + 1) // 2)\n        if 2 * lis[-j] - 1 <= num and lis.count(1) >= out:\n            if sum(lis[:-j]) + lis[-j] <= (1 + out) * out // 2 + num - out:\n                print(out)\n                break\n    else:\n        print(0)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    m = (n + 1) // 2\n    A = [int(i) for i in input().split()]\n    A.sort()\n    b = []\n    c = A.count(1)\n    if c == 0:\n        print(0)\n        continue\n    for i in range(c, n):\n        if A[i] > i // 2 + 1:\n            print(min(m, (i + 1) // 2))\n            break\n        else:\n            m = min(m, i + 2 - A[i])\n    else:\n        print(m)", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    for k in range(n, -1, -1):\n        if all((k - 1 + i < n and a[k - 1 + i] <= i + 1 for i in range(k))):\n            print(k)\n            break", "t = int(input())\nfor num in range(t):\n    n = int(input())\n    bucket = [0] * (n + 2)\n    a = [int(i) for i in input().split()]\n    for i in a:\n        bucket[i] += 1\n    if bucket[1] == 0:\n        print(0)\n        continue\n    if bucket[1] == 1:\n        print(1)\n        continue\n    k = 2\n    flag = []\n    flag.append(1)\n    while k <= n:\n        if bucket[k] == 0:\n            bucket[flag[-1]] -= 1\n            if bucket[flag[-1]] == 1:\n                z = flag.pop()\n            bucket[k] = 1\n            if bucket[1] < k:\n                break\n        if bucket[1] < k:\n            break\n        if bucket[k] >= 2:\n            flag.append(k)\n        k += 1\n    print(k - 1)", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    for k in range(n, -1, -1):\n        if all((k - 1 + i < n and a[k - 1 + i] <= i + 1 for i in range(k))):\n            print(k)\n            break", "for f in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l = [l.count(x) for x in range(1, int(n) + 1)]\n    z = 0\n    for i in range(l[0]):\n        z = l[0] - i\n        g = i\n        for k in l[1:z]:\n            g += k - 1\n            if g < 0:\n                break\n        else:\n            break\n    print(z)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    alist = [int(x) for x in input().split()]\n    alist.sort()\n    d = 0\n    if alist == [1]:\n        print(1)\n    elif alist.count(1) == len(alist):\n        print((n + 1) // 2)\n    else:\n        k = min(alist.count(1), n // 2 + 1)\n        if k < 2:\n            print(k)\n        else:\n            while d == 0:\n                i = 0\n                new = alist\n                while i <= k:\n                    i += 1\n                    new = sorted([int(x) for x in new if x <= k - i + 1])\n                    if len(new) > 2:\n                        new = new[1:]\n                        new.pop()\n                    elif alist.count(1) == 0:\n                        k -= 1\n                        i = 2 * k\n                    elif k - i != 0:\n                        k -= 1\n                        i = 2 * k\n                    else:\n                        print(k)\n                        d -= 1\n                        i = 2 * k", "for x in range(int(input())):\n    n = int(input())\n    a = sorted([int(y) for y in input().split()])\n    for k in range(n, -1, -1):\n        if all((k - 1 + i < n and a[k - 1 + i] <= i + 1 for i in range(k))):\n            print(k)\n            break", "def f(kk):\n    ff = True\n    for j in range(kk + 1):\n        if c[j] <= kk + j:\n            ff = False\n            break\n    return ff\nt = int(input())\nfor ii in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    c = []\n    p = 0\n    for i in range(n):\n        while p < n and l[p] <= i + 1:\n            p += 1\n        c.append(p)\n    k = 0\n    while f(k):\n        k += 1\n    if k > n // 2:\n        k = (n + 1) // 2\n    print(k)", "import bisect\nfor _ in range(int(input())):\n    n = int(input())\n    s = sorted(list(map(int, input().split())))\n    i = 2\n    if s[0] != 1:\n        print(0)\n    else:\n        s.pop(0)\n        while len(s) >= 2 and s[0] == 1:\n            if bisect.bisect_left(s, i) == len(s):\n                s.pop()\n                s.pop(0)\n            elif s[bisect.bisect_left(s, i)] == i:\n                s.pop(bisect.bisect_left(s, i))\n                s.pop(0)\n            elif s[bisect.bisect_left(s, i)] > i and bisect.bisect_left(s, i) > 1:\n                s.pop(bisect.bisect_left(s, i) - 1)\n                s.pop(0)\n            else:\n                break\n            i += 1\n        print(i - 1)", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    for k in range(n, -1, -1):\n        if all((k - 1 + i < n and a[k - 1 + i] <= i + 1 for i in range(k))):\n            print(k)\n            break", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n == 1 or n == 2:\n        if arr.count(1) > 0:\n            print(1)\n        else:\n            print(0)\n        continue\n    arr.sort()\n    for i in range(1, (n + 1) // 2 + 1):\n        flag = False\n        for j in range(1, i + 1):\n            if arr[i + j - 2] > j:\n                flag = True\n                break\n        if flag:\n            i -= 1\n            break\n    print(i)", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    num = dict()\n    for k in a:\n        if k in num:\n            num[k] += 1\n        else:\n            num[k] = 1\n    lim = math.ceil(n / 2)\n    if 1 in num:\n        one = num[1]\n    else:\n        one = 0\n    k_tmp = min(lim, one)\n    k_ans = k_tmp\n    flag = True\n    while flag:\n        left_one = one - k_ans + 1\n        other = left_one\n        for x in range(2, n + 1):\n            if x in num:\n                other += num[x]\n            elif other >= x:\n                continue\n            else:\n                break\n        if other >= k_ans:\n            flag = False\n        else:\n            k_ans -= 1\n    print(k_ans)", "def f(kk):\n    ff = True\n    for j in range(kk + 1):\n        if c[j] <= kk + j:\n            ff = False\n            break\n    return ff\nt = int(input())\nfor ii in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    c = []\n    p = 0\n    for i in range(n):\n        while p < n and l[p] <= i + 1:\n            p += 1\n        c.append(p)\n    k = 0\n    while f(k):\n        k += 1\n    if k > n // 2:\n        k = (n + 1) // 2\n    print(k)", "n = int(input())\nfor i in range(n):\n    N = 0\n    m = int(input())\n    list1 = list(map(int, input().split()))\n    list1.sort()\n    if m % 2 == 0:\n        list1.pop(-1)\n        m -= 1\n    k = int((m + 1) / 2)\n    l = 0\n    j = k\n    for i in range(k):\n        list2 = []\n        if j == 1:\n            if list1[0] == 1:\n                print(1)\n            else:\n                print(0)\n        else:\n            if list1.count(1) >= j:\n                for f in range(j - 1):\n                    list2.append([f + 2, list1[f + j]])\n                for f in range(j - 1):\n                    if list2[f][0] < list2[f][1]:\n                        break\n                    elif f == j - 2:\n                        print(j)\n                        N = 1\n            if N:\n                break\n        j -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    bucket = [0] * (n + 2)\n    a = [int(i) for i in input().split()]\n    for i in a:\n        bucket[i] += 1\n    if bucket[1] == 0:\n        print(0)\n        continue\n    if bucket[1] == 1:\n        print(1)\n        continue\n    k = 2\n    flag = []\n    flag.append(1)\n    while k <= n:\n        if bucket[k] == 0:\n            bucket[flag[-1]] -= 1\n            if bucket[flag[-1]] == 1:\n                z = flag.pop()\n            bucket[k] = 1\n            if bucket[1] < k:\n                break\n        if bucket[1] < k:\n            break\n        if bucket[k] >= 2:\n            flag.append(k)\n        k += 1\n    print(k - 1)", "def f(kk):\n    ff = True\n    for j in range(kk + 1):\n        if c[j] <= kk + j:\n            ff = False\n            break\n    return ff\nt = int(input())\nfor ii in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    c = []\n    p = 0\n    for i in range(n):\n        while p < n and l[p] <= i + 1:\n            p += 1\n        c.append(p)\n    k = 0\n    while f(k):\n        k += 1\n    if k > n // 2:\n        k = (n + 1) // 2\n    print(k)", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    for k in range(n, -1, -1):\n        if all((k - 1 + i < n and a[k - 1 + i] <= i + 1 for i in range(k))):\n            print(k)\n            break", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    m = [int(i) for i in input().split()]\n    k = m.count(1)\n    j = k\n    u = 2\n    while u <= k:\n        j = j + m.count(u) - 1\n        u += 1\n        if j < k:\n            k = j\n    print(k)", "from bisect import bisect_right\n\ndef play(n, a):\n    (low, high) = (1, n)\n    k = 0\n    while low <= high:\n        if alice_win(a, high):\n            return high\n        mid = (low + high) // 2\n        if alice_win(a, mid):\n            low = mid + 1\n            high -= 1\n            k = mid\n        else:\n            high = mid - 1\n    return k\n\ndef alice_win(a: list, k: int):\n    for i in range(k):\n        j = bisect_right(a, k - i)\n        a = a[:j]\n        if len(a) == 0:\n            return False\n        a.pop()\n        if len(a) > 0:\n            a.pop(0)\n    return True\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = sorted([int(x) for x in input().split()])\n    k = play(n, a)\n    print(k)", "import sys\nt = int(sys.stdin.readline())\n\ndef check(k, n):\n    ci = 0\n    i = n - 1\n    ji = 0\n    j = 0\n    while j <= i:\n        if a[i] <= k - ji:\n            ji += 1\n            ci += 1\n            j += 1\n        i -= 1\n    return ci\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    if n == 1 and a == [1]:\n        print(1)\n    else:\n        l = 0\n        r = n\n        a.sort()\n        while l <= r:\n            mid = (l + r) // 2\n            if check(mid, n) >= mid:\n                l = mid + 1\n            else:\n                r = mid - 1\n        print(min(l, mid, r))", "t = int(input())\nfor num in range(t):\n    n = int(input())\n    bucket = [0] * (n + 2)\n    a = [int(i) for i in input().split()]\n    for i in a:\n        bucket[i] += 1\n    if bucket[1] == 0:\n        print(0)\n        continue\n    if bucket[1] == 1:\n        print(1)\n        continue\n    k = 2\n    flag = []\n    flag.append(1)\n    while k <= n:\n        if bucket[k] == 0:\n            bucket[flag[-1]] -= 1\n            if bucket[flag[-1]] == 1:\n                z = flag.pop()\n            bucket[k] = 1\n            if bucket[1] < k:\n                break\n        if bucket[1] < k:\n            break\n        if bucket[k] >= 2:\n            flag.append(k)\n        k += 1\n    print(k - 1)", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    for k in range(n, -1, -1):\n        if all((k - 1 + i < n and a[k - 1 + i] <= i + 1 for i in range(k))):\n            print(k)\n            break", "R = lambda : map(int, input().split())\nL = lambda : list(R())\nfor _ in range(int(input())):\n    (n,) = R()\n    l = sorted(L())\n    k = (n + 1) // 2\n    while k > 0:\n        prev = 0\n        for i in range(k):\n            prev += l.count(i + 1)\n            if prev < k + i:\n                break\n        else:\n            break\n        k -= 1\n    else:\n        print(0)\n        continue\n    print(k)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lis = [int(x) for x in input().split()]\n    lis.sort()\n    num = lis.count(1)\n    s = min(num, n // 2 + n % 2)\n    check = False\n    for k in range(1, s + 1):\n        lists = lis[k - 1:2 * k - 1]\n        for i in range(k):\n            if lists[i] > i + 1:\n                check = True\n                break\n        if check:\n            s = k - 1\n            break\n    print(s)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lis = [int(x) for x in input().split(' ')]\n    lis.sort()\n    num = lis.count(1)\n    s = min(num, n // 2 + n % 2)\n    flag = False\n    for i in range(1, s + 1):\n        list1 = lis[i - 1:2 * i - 1]\n        for j in range(i):\n            if list1[j] > j + 1:\n                flag = True\n                break\n        if flag:\n            s = i - 1\n            break\n    print(s)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(1)\n    else:\n        c = a.count(1)\n        k = 2\n        xx = 0\n        j = 0\n        cc = c\n        nx = 0\n        while c > 0:\n            if c == 1:\n                xx += 1\n                c -= 1\n            else:\n                x = a.count(k)\n                nx += x\n                if x == 0:\n                    if nx + cc % 2 < k - 1:\n                        c -= 2\n                        xx += 1\n                    else:\n                        xx += 1\n                        c -= 1\n                    if nx + cc % 2 >= k - 1 and nx < k - 1:\n                        c -= 1\n                elif x < c:\n                    c -= x\n                    xx += x\n                else:\n                    xx += c\n                    c -= c\n                k += 1\n        print(xx)", "import bisect\noutput = []\nfor _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    k = a.count(1)\n    while k > 0:\n        flag = 1\n        p = k\n        while p >= 1:\n            j = bisect.bisect(a, p)\n            if j < k + p - 1:\n                flag = 0\n                break\n            else:\n                p -= 1\n        if flag == 1:\n            output.append(str(k))\n            break\n        else:\n            k -= 1\n    if k == 0:\n        output.append(str(0))\nprint('\\n'.join(output))", "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    s.sort()\n    k = (n + 1) // 2\n    c = s.count(1)\n    if c == 0:\n        print(0)\n        continue\n    for i in range(c, n):\n        if s[i] > i // 2 + 1:\n            print(min(k, (i + 1) // 2))\n            break\n        else:\n            k = min(k, i + 2 - s[i])\n    else:\n        print(k)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    a.sort()\n    k = 0\n    for i in range((n + 1) // 2):\n        true = True\n        for j in range(i + 1):\n            if a[i + j] > j + 1:\n                true = False\n        if true:\n            k += 1\n        else:\n            break\n    print(k)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(ii) for ii in input().split()]\n    a.sort()\n    ans = 0\n    for i in range((n + 1) // 2):\n        stop = 0\n        for j in range(i + 1):\n            if a[i + j] > j + 1:\n                stop = 1\n                break\n        if stop:\n            break\n        else:\n            ans += 1\n    print(ans)", "from collections import Counter\nfor _ in range(int(input())):\n    input()\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    for k in range(len(a) + 1):\n        cnt = 0\n        for i in range(k + 1):\n            cnt += c[i + 1]\n            if cnt < k + i + 1:\n                break\n        else:\n            continue\n        print(k)\n        break", "def analog(x):\n    (synA, synB) = (x, 1)\n    for round in range(1, x + 1):\n        synA = x - round + 1\n        while bck[synA] == 0 and synA > 1:\n            synA -= 1\n        bck[synA] -= 1\n        if round < x:\n            bck[1] -= 1\n    return [0, 1][bck[1] >= 0]\nfor dm1 in range(int(input())):\n    n = int(input())\n    nmbs = sorted([int(x) for x in input().split()])\n    bckk = [0] * 102\n    for i in nmbs:\n        bckk[i] += 1\n    (lo, hi) = (0, 100)\n    if bckk[1] in {0, 1}:\n        print(bckk[1])\n    else:\n        while lo < hi:\n            bck = bckk[:]\n            mid = (lo + hi) // 2\n            if analog(mid) == 1:\n                lo = mid + 1\n            else:\n                hi = mid\n        print(lo - 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = sorted([int(x) for x in input().split()])\n    k = 0\n    while True:\n        if 2 * k - 1 <= n and all([a[k - 1 + i] <= 1 + i for i in range(k)]):\n            k += 1\n        else:\n            k -= 1\n            break\n    print(k)", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    for k in range(n, -1, -1):\n        if all((k - 1 + i < n and a[k - 1 + i] <= i + 1 for i in range(k))):\n            print(k)\n            break", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lis = [int(x) for x in input().split()]\n    lis.sort()\n    num = lis.count(1)\n    s = min(num, n // 2 + n % 2)\n    check = False\n    for k in range(1, s + 1):\n        lists = lis[k - 1:2 * k - 1]\n        for i in range(k):\n            if lists[i] > i + 1:\n                check = True\n                break\n        if check:\n            s = k - 1\n            break\n    print(s)", "for _ in range(int(input())):\n    num = int(input())\n    a = sorted(list(map(int, input().split())))\n    for k in range((num + 1) // 2, -1, -1):\n        if all((k - 1 + i < num and a[k - 1 + i] <= i + 1 for i in range(k))):\n            print(k)\n            break", "for _ in range(int(input())):\n    number1 = int(input())\n    a = sorted(list(map(int, input().split())))\n    for k in range((number1 + 1) // 2, -1, -1):\n        if all((k - 1 + i < number1 and a[k - 1 + i] <= i + 1 for i in range(k))):\n            print(k)\n            break", "def check(k: int) -> bool:\n    (l, r) = (0, n - 1)\n    i = 0\n    while i < k and l <= r:\n        while l <= r and arr[r] > k - i:\n            r -= 1\n        if arr[r] > k - i or r < l:\n            break\n        r -= 1\n        l += 1\n        i += 1\n    return i >= k\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(sorted(map(int, input().split())))\n    (l, r) = (-1, n + 1)\n    while l + 1 < r:\n        m = (l + r) // 2\n        if check(m):\n            l = m\n        else:\n            r = m\n    print(l)", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    for k in range(n, -1, -1):\n        if all((k - 1 + i < n and a[k - 1 + i] <= i + 1 for i in range(k))):\n            print(k)\n            break", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    for k in range(n, -1, -1):\n        if all((k - 1 + i < n and a[k - 1 + i] <= i + 1 for i in range(k))):\n            print(k)\n            break", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    for k in range(n, -1, -1):\n        if all((k - 1 + i < n and a[k - 1 + i] <= i + 1 for i in range(k))):\n            print(k)\n            break", "def check(arr, t):\n    j = 0\n    temp = t\n    count = 0\n    for i in range(len(arr) - 1, -1, -1):\n        if arr[i] <= t:\n            arr[i] = 0\n            arr[j] += t\n            j += 1\n            t -= 1\n            count += 1\n    if count == temp:\n        return True\n    return False\n\ndef ans(arr):\n    start = 0\n    end = 10 * 5\n    arr.sort()\n    current = 0\n    while start <= end:\n        temp = arr.copy()\n        mid = (start + end) // 2\n        if check(temp, mid) is True:\n            current = mid\n            start = mid + 1\n        else:\n            end = mid - 1\n    return current\ntest_cases = int(input())\nwhile test_cases != 0:\n    d = input()\n    d2 = list(map(int, input().split()))\n    print(ans(d2))\n    test_cases -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    for k in range(n, -1, -1):\n        if all((k - 1 + i < n and a[k - 1 + i] <= i + 1 for i in range(k))):\n            print(k)\n            break", "t = int(input())\nwhile t:\n    n = int(input())\n    ans = 0\n    a = [0]\n    a += list(map(int, input().split()))\n    a.sort()\n    for k in range(1, n + 2):\n        l = 0\n        r = n\n        flag = 1\n        for i in range(1, k + 1):\n            while a[r] > k - i + 1:\n                r -= 1\n                if l == r:\n                    break\n            if l == r:\n                break\n            r -= 1\n            if i == k:\n                flag = 0\n            if l == r:\n                break\n            l += 1\n            if l == r:\n                break\n        if flag:\n            ans = k - 1\n            break\n    print(ans)\n    t -= 1", "import copy\na = int(input())\nfor i in range(a):\n    b = int(input())\n    c = list(map(int, input().split()))\n    d = c.copy()\n    if 1 not in c:\n        print('0')\n    elif b == 1:\n        print('1')\n    else:\n        for k in range(2, b + 1):\n            c = d.copy()\n            f = 1\n            for n in range(k, 0, -1):\n                c.append(n + 1)\n                c.sort()\n                e = c.index(n + 1)\n                if e == 0:\n                    f = 0\n                    break\n                else:\n                    c[0] += n\n                del c[e - 1]\n            if f == 0:\n                print(k - 1)\n                break", "for dm1 in range(int(input())):\n    (bck, k, flag) = ([0] * (int(input()) + 2), 2, [1])\n    nmbs = [int(dm2) for dm2 in input().split()]\n    for i in nmbs:\n        bck[i] += 1\n    if bck[1] < 2:\n        print(bck[1])\n        continue\n    while k <= 102:\n        if bck[k] == 0:\n            bck[flag[-1]] -= 1\n            if bck[flag[-1]] == 1:\n                z = flag.pop()\n            bck[k] = 1\n        if bck[k] >= 2:\n            flag.append(k)\n        if bck[1] < k:\n            break\n        k += 1\n    print(k - 1)", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    for k in range(n, -1, -1):\n        if all((k - 1 + i < n and a[k - 1 + i] <= i + 1 for i in range(k))):\n            print(k)\n            break", "for _ in range(int(input())):\n    n = int(input())\n    lst = sorted(list(map(int, input().split())))\n    for k in range(n, -1, -1):\n        if all((k - 1 + i < n and lst[k - 1 + i] <= i + 1 for i in range(k))):\n            print(k)\n            break", "import copy\nt = int(input())\nfor o in range(t):\n    n = int(input())\n    array = [int(x) for x in input().split()]\n    one = array.count(1)\n    p = 0\n    c = True\n    for k in range(one, 0, -1):\n        if c is False:\n            break\n        a = copy.copy(array)\n        a.sort(reverse=True)\n        for i in range(k, 0, -1):\n            if a.count(1) < i:\n                break\n            elif i > 1:\n                for j in range(len(a)):\n                    if a[j] <= i:\n                        del a[j]\n                        a[-1] += i\n                        a.sort(reverse=True)\n                        break\n            elif 1 in array:\n                print(k)\n                c = False\n    if c:\n        print('0')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    game = list(map(int, input().split()))\n    game.sort()\n    k = 0\n    bl = True\n    while bl:\n        k += 1\n        a = []\n        m = 1\n        for i in range(n):\n            if game[i] <= k:\n                a.append(game[i])\n        if len(a) == 0:\n            bl = False\n        else:\n            for j in range(1, len(a) + 1):\n                if a[-j] <= k - m + 1:\n                    m += 1\n                    if m == k + 1 and len(a) - j < k - 1:\n                        bl = False\n            if m <= k:\n                bl = False\n    print(k - 1)", "from bisect import bisect_right\n\ndef alice_win(a: list, k: int):\n    for i in range(k):\n        j = bisect_right(a, k - i)\n        a = a[:j]\n        if len(a) == 0:\n            return False\n        a.pop()\n        if len(a) > 0:\n            a.pop(0)\n    return True\n\ndef play(n, a):\n    (low, high) = (1, n)\n    k = 0\n    while low <= high:\n        if alice_win(a, high):\n            return high\n        mid = (low + high) // 2\n        if alice_win(a, mid):\n            (low, high) = (mid + 1, high - 1)\n            k = mid\n        else:\n            high = mid - 1\n    return k\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = sorted(map(int, input().split()))\n    k = play(n, a)\n    print(k)", "def evaluate(lis, k):\n    for i in range(k):\n        if lis[k - 1 + i] > i + 1:\n            return False\n    return True\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    array = sorted(list(map(int, input().split())))\n    k_approx = (n + 1) // 2 + 1\n    alice_win = False\n    while alice_win is False:\n        k_approx -= 1\n        if k_approx == 0:\n            alice_win = True\n            print(0)\n            break\n        else:\n            alice_win = evaluate(array, k_approx)\n            if alice_win:\n                print(k_approx)\n                break", "import sys\nimport math\nfrom bisect import bisect_right as br\nimport threading\n\ndef int_arr():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef str_arr():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef input():\n    return sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    n = int(input())\n    arr = int_arr()\n    arr.sort()\n    i = 0\n    j = n\n    ans = 0\n    while i <= j:\n        mid = (i + j) // 2\n        x = mid\n        l = 0\n        r = n - 1\n        step = 0\n        while l <= r:\n            while r >= l and arr[r] > x:\n                r -= 1\n            if r < l or arr[r] > x:\n                break\n            step += 1\n            x -= 1\n            l += 1\n            r -= 1\n        if step >= mid:\n            ans = mid\n            i = mid + 1\n        else:\n            j = mid - 1\n    print(ans)", "import math\nt = int(input())\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    ans = 0\n    for k in range(0, 1 + math.ceil(n / 2)):\n        if arr.count(1) >= k:\n            extra = arr.count(1) - k\n            brr = arr[k:]\n            p = 0\n            for i in range(0, k - 1):\n                if not brr[i] <= i + 2:\n                    p = 1\n                    break\n            if p == 0:\n                ans = max(ans, k)\n    print(ans)\nwhile t:\n    solve()\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    num = list(map(int, input().split()))\n    num.sort()\n    (l, r, ans) = (0, n, 0)\n\n    def ck(m):\n        res = []\n        k = m\n        for i in num:\n            if i <= m:\n                res.append(i)\n        while len(res) > 0 and k > 0:\n            res.pop()\n            if len(res) > 0:\n                res[0] += k\n                res.sort()\n            k -= 1\n            while res and res[-1] > k:\n                res.pop()\n        return True if k == 0 else False\n    if n == 1:\n        print(1)\n    else:\n        while l <= r:\n            m = (l + r) // 2\n            if ck(m):\n                ans = max(ans, m)\n                l = m + 1\n            else:\n                r = m - 1\n        print(ans)", "n = int(input())\nfor i in range(n):\n    x = int(input())\n    lst = list(map(int, input().split()))\n    lst.sort()\n    for k in range(int((x + 1) // 2), -1, -1):\n        s = 0\n        for j in range(k):\n            if lst[k - 1 + j] <= j + 1:\n                s += 1\n        if s == k:\n            print(k)\n            break", "for _ in range(int(input())):\n    t = int(input())\n    n = sorted(list(map(int, input().split())))\n    for k in range(t, -1, -1):\n        if all((k - 1 + i < t and n[k - 1 + i] <= i + 1 for i in range(k))):\n            print(k)\n            break"]