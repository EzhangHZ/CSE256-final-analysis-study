["for s in [*open(0)][1:]:\n    print(+(sum(map(int, s.split())) % 3 > 0))", "for s in [*open(0)][1:]:\n    print('011'[sum(map(int, s.split())) % 3])", "import sys\nT = int(sys.stdin.readline())\nfor r in range(T):\n    (a, b, c) = map(int, sys.stdin.readline().split())\n    D = abs(a + c - 2 * b)\n    if D % 3 == 0:\n        print(0)\n    else:\n        print(1)", "import sys\ninput = lambda : sys.stdin.readline().strip()\n\ndef solve():\n    (a, b, c) = map(int, input().split())\n    for (x, y) in ((a + b, 2 * c), (a + c, 2 * b), (b + c, 2 * a)):\n        if abs(x - y) % 3 == 0:\n            return 0\n    return 1\nfor _ in range(int(input())):\n    print(solve())", "for s in [*open(0)][1:]:\n    print('011'[sum(map(int, s.split())) % 3])", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    (a, b, c) = [int(x) for x in sys.stdin.readline().split()]\n    if (a + b + c) % 3 == 0:\n        print(0)\n    else:\n        print(1)", "for s in [*open(0)][1:]:\n    print(+(sum(map(int, s.split())) % 3 > 0))", "for s in [*open(0)][1:]:\n    print(+(sum(map(int, s.split())) % 3 > 0))", "for s in [*open(0)][1:]:\n    print(+(sum(map(int, s.split())) % 3 > 0))", "import sys\n\ndef solve():\n    N = int(sys.stdin.readline().rstrip())\n    for _ in range(N):\n        (a, b, c) = list(map(int, sys.stdin.readline().rstrip().split(' ')))\n        D = a + c - b * 2\n        print(0 if abs(D) % 3 == 0 else 1)\nsolve()", "import sys\nimport math\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef meanDev(x1, x2, x3):\n    return abs(x1 + x3 - 2 * x2)\n\ndef deviation(case):\n    x1 = case[0]\n    x2 = case[1]\n    x3 = case[2]\n    if (x1 + x2 + x3) % 3 == 0:\n        return 0\n    else:\n        return 1\nres = []\niter = inp()\ni = 0\nwhile i < iter:\n    case = inlt()\n    test = deviation(case)\n    res.append(test)\n    i += 1\nfor r in res:\n    print(r)", "import sys\nimport math\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef meanDev(x1, x2, x3):\n    return abs(x1 + x3 - 2 * x2)\n\ndef deviation(case):\n    x1 = case[0]\n    x2 = case[1]\n    x3 = case[2]\n    if (x1 + x2 + x3) % 3 == 0:\n        return 0\n    else:\n        return 1\nres = []\niter = inp()\ni = 0\nwhile i < iter:\n    case = inlt()\n    test = deviation(case)\n    res.append(test)\n    i += 1\nfor r in res:\n    print(r)", "import math\nfrom sys import stdin\nfrom collections import Counter, deque\ninput = stdin.readline\nfor _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    avg = (a + c) / 2\n    if b != avg:\n        if abs(b - avg) % 1.5 == 0:\n            print(0)\n        else:\n            print(1)\n    else:\n        print(0)", "import sys\nans = []\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    (a, b, c) = map(int, sys.stdin.readline().split())\n    (x, y, z) = (a + b - 2 * c, a + c - 2 * b, c + b - 2 * a)\n    if x % 3 == 0 or y % 3 == 0 or z % 3 == 0:\n        ans.append('0')\n    else:\n        ans.append('1')\nprint('\\n'.join(ans))", "import sys\ninput = sys.stdin.readline\nt = int(input())\nwhile t > 0:\n    nums = [int(x) for x in input().split(' ')]\n    a = nums[0] + nums[1]\n    b = 2 * nums[2]\n    if a >= b:\n        if (a - b) % 3 == 0:\n            print('0')\n        else:\n            print('1')\n    elif b > a:\n        if (b - a) % 3 == 0:\n            print('0')\n        else:\n            print('1')\n    t -= 1", "t = int(input())\nret = []\nfor i in range(t):\n    (a, b, c) = map(int, input().split())\n    d = a + c - 2 * b\n    if d <= 0:\n        ret.append(min(1, abs(d) % 3))\n    else:\n        ret.append(min(d % 3, 1))\nprint(*ret, sep='\\n')", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    (a, b, c) = map(int, sys.stdin.readline().split())\n    x = a + c - 2 * b\n    if x % 3 == 0:\n        print(0)\n    else:\n        print(1)", "import sys\ninp = sys.stdin.readline()\ntest = int(inp.strip('\\n'))\nresult = ''\nfor i in range(test):\n    inp = sys.stdin.readline()\n    l = list(map(int, inp.strip('\\n').split()))\n    (a, b, c) = l\n    diff = abs(a + c - 2 * b)\n    diff = diff % 3\n    if diff == 2:\n        diff = 1\n    sys.stdout.write(str(diff) + '\\n')", "import itertools\nfrom math import floor, log, log2, ceil\nfrom itertools import groupby\nimport sys\nt = int(input())\nres = []\nfor i in range(t):\n    [a1, a2, a3] = list(map(int, input().split()))\n    res.append(abs(a3 + a1 - 2 * a2) % 3)\n    if res[i] == 2:\n        res[i] = 1\nfor i in range(t):\n    print(res[i])", "import sys\ncase = int(sys.stdin.readline())\nfor i in range(case):\n    arr = list(map(int, sys.stdin.readline().split()))\n    n1 = arr[0]\n    n2 = arr[1]\n    n3 = arr[2]\n    d1 = n2 - n1\n    d2 = n3 - n2\n    if abs(d1 - d2) % 3 == 0:\n        print(0)\n    else:\n        print(1)", "import sys\nimport math\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef deviation(case):\n    res = 0\n    x1 = case[0]\n    x2 = case[1]\n    x3 = case[2]\n    res = (x1 + x2 + x3) % 3\n    if res > 0:\n        res = 1\n    return res\nres = []\niter = inp()\ni = 0\nwhile i < iter:\n    case = inlt()\n    test = deviation(case)\n    res.append(test)\n    i += 1\nfor r in res:\n    print(r)", "import sys\nfor __ in range(int(input())):\n    (a, b, c) = map(int, sys.stdin.readline().split())\n    s = a + c - b * 2\n    s = abs(s)\n    print(min(s % 3, 3 - s % 3))", "def function(t, tests):\n    out = []\n    for case in tests:\n        a1 = int(case[0])\n        a2 = int(case[1])\n        a3 = int(case[2])\n        d = abs(a3 + a1 - 2 * a2)\n        if d % 3 == 0:\n            out.append('0')\n        else:\n            out.append('1')\n    return '\\n'.join(out)\nt = int(input())\ntests = []\nfor i in range(t):\n    case = input().split()\n    tests.append(case)\nans = function(t, tests)\nprint(ans)", "import sys\nimport bisect\nimport math\ninput = lambda : sys.stdin.readline().strip()\nmod = 10 ** 9 + 9\n\ndef solve():\n    (a1, a2, a3) = map(int, input().split())\n    if abs(a1 + a3 - 2 * a2) % 3 == 0:\n        return 0\n    else:\n        return 1\nt = 1\nt = int(input())\nfor _ in range(t):\n    print(solve())", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    a = [int(i) for i in input().split()]\n    if sum(a) % 3:\n        print(1)\n    else:\n        print(0)", "t = int(input())\na = [0] * t\nfor i in range(t):\n    l = list(map(int, input().split()))\n    a[i] = abs(l[0] + l[2] - 2 * l[1]) % 3\n    if a[i] == 2:\n        a[i] = 1\nfor i in a:\n    print(i)", "for i in [*open(0)][1:]:\n    print(+(sum(map(int, i.split())) % 3 > 0))", "for s in [*open(0)][1:]:\n    print(+(sum(map(int, s.split())) % 3 > 0))", "import sys\ninput = sys.stdin.readline\n\ndef solve(a1, a2, a3):\n    (a1, a2, a3) = sorted([a1, a2, a3])\n    d = abs(a1 + a3 - 2 * a2)\n    (r1, r2) = (d % 3, 3 - d % 3)\n    print(min(r1, r2))\nfor _ in range(int(input())):\n    (a1, a2, a3) = map(int, input().split())\n    solve(a1, a2, a3)", "import sys\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef LI1():\n    return list(map(int1, sys.stdin.readline().split()))\n\ndef LLI1(rows_number):\n    return [LI1() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline().rstrip()\ndij = [(0, 1), (1, 0), (0, -1), (-1, 0)]\ninf = 4294967295\nmd = 998244353\n\ndef solve():\n    abc = LI()\n    if sum(abc) % 3:\n        print(1)\n    else:\n        print(0)\nfor testcase in range(II()):\n    solve()", "t = int(input())\nfor i in range(t):\n    (a, b, c) = map(int, input().split())\n    x = a + b + c\n    if x % 3 == 0:\n        print(0)\n    else:\n        print(1)", "import sys\ninp = sys.stdin.readline\n\ndef solve():\n    (a, b, c) = map(int, input().split())\n    r = a + c - 2 * b\n    if r % 3 == 0:\n        print(0)\n    else:\n        print(1)\n\ndef main():\n    for i in range(int(inp())):\n        solve()\nmain()", "import math\nfrom heapq import heappush, heappop, heapify\nimport random\nimport string\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right, insort\nimport sys\ninput = sys.stdin.readline\nS = lambda : input().rstrip()\nI = lambda : int(S())\nM = lambda : map(int, S().split())\nL = lambda : list(M())\nmod1 = 1000000000 + 7\nmod2 = 998244353\nsys.setrecursionlimit(10000000)\nfor _ in range(I()):\n    (a1, a2, a3) = M()\n    if abs(a1 + a3 - 2 * a2) % 3 == 0:\n        print(0)\n    else:\n        print(1)", "n = int(input())\nfor i in range(n):\n    summa = 0\n    (a, b, c) = map(int, input().split())\n    summa += a + b + c\n    if summa % 3:\n        print('1')\n    else:\n        print('0')", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    k = 2 * b - (a + c)\n    if k % 3 == 0:\n        print(0)\n    else:\n        print(1)", "for i in range(int(input())):\n    print(1 if sum(map(int, input().split())) % 3 else 0)", "def solve():\n    (a, b, c) = map(int, input().split())\n    if (a + b + c) % 3 == 0:\n        print(0)\n    else:\n        print(1)\nn = int(input())\nfor i in range(n):\n    solve()", "t = int(input())\nfor _ in range(t):\n    (a, b, c) = list(map(int, input().split()))\n    if abs(a + c - 2 * b) % 3 == 0:\n        print(0)\n    else:\n        print(1)", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    a = a + c - 2 * b\n    if a % 3:\n        print(1)\n    else:\n        print(0)", "n = int(input())\nnumber = []\nfor i in range(n):\n    number.append([int(x) for x in input().split()])\nfor i in range(n):\n    q = number[i][0] + number[i][1] - 2 * number[i][2]\n    w = number[i][0] + number[i][2] - 2 * number[i][1]\n    e = number[i][2] + number[i][1] - 2 * number[i][0]\n    if min(abs(q), abs(w), abs(e)) % 3 == 0:\n        print('0')\n    elif min(abs(q), abs(w), abs(e)) % 3 == 2:\n        print('1')\n    else:\n        print('1')", "a = eval(input())\nc = []\nfor i in range(a):\n    num = [int(n) for n in input().split()]\n    d = 0\n    if sum(num) % 3 == 0:\n        c.append(0)\n    else:\n        c.append(1)\nfor i in c:\n    print(i)", "t = int(input())\nfor _ in range(t):\n    (a, b, c) = map(int, input().split())\n    if (a + b + c) % 3 == 0:\n        print(0)\n    else:\n        print(1)", "for i in range(int(input())):\n    b = input().split()\n    c = int(b[0]) + int(b[2])\n    d = int(b[1]) * 2\n    e = abs(c - d)\n    print(min(1, e % 3))", "n = int(input())\nfor i in range(n):\n    (a, b, c) = map(int, input().split())\n    if (a + b - 2 * c) % 3 == 0:\n        print('0')\n    elif (a + b - 2 * c) % 3 == 1:\n        print('1')\n    else:\n        print('1')", "tc = int(input())\nfor t in range(tc):\n    (a, b, c) = map(int, input().split())\n    if (a + b + c) % 3 == 0:\n        print(0)\n    else:\n        print(1)", "t = int(input())\nfor i in range(t):\n    (a, b, c) = [int(x) for x in input().split()]\n    print(0 if (a + b + c) % 3 == 0 else 1)", "for i in range(int(input())):\n    (a, b, c) = [int(x) for x in input().split()]\n    print(0 if (a + b + c) % 3 == 0 else 1)", "t = int(input())\nwhile t:\n    (a, b, c) = map(int, input().split())\n    if (a + b + c) % 3 == 0:\n        print(0)\n    else:\n        print(1)\n    t -= 1", "for i in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    if (a + b + c) % 3 == 0:\n        print(0)\n    else:\n        print(1)", "for i in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    if (a + b + c) % 3 == 0:\n        print(0)\n    else:\n        print(1)", "i = int(input())\na = []\nfor s in range(i):\n    t = input()\n    a.append(list(map(int, t.split())))\nfor i in a:\n    f = i[0] + i[-1] - i[1] * 2\n    if f % 3 == 0:\n        f = 0\n    else:\n        f = 1\n    print(f)", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    if (a + c - 2 * b) % 3 == 0:\n        print(0)\n    else:\n        print(1)", "t = int(input())\nfor _ in range(t):\n    (a1, a2, a3) = map(int, input().split())\n    s = a1 + a2 + a3\n    print('1' if s % 3 else '0')", "x = int(input())\nfor i in range(x):\n    (y, z, n) = input().split()\n    if int(y + z + n) % 3 == 0:\n        print(0)\n    else:\n        print(1)", "x = int(input())\nfor i in range(x):\n    (y, z, n) = input().split()\n    if int(y + z + n) % 3 == 0:\n        print(0)\n    else:\n        print(1)", "for _ in range(int(input())):\n    (a, b, c) = list(map(int, input().strip().split()))\n    if (a + b + c) % 3 == 0:\n        print(0)\n    else:\n        print(1)", "t = int(input())\nwhile t:\n    (a, b, c) = map(int, input().split())\n    if (a + b + c) % 3 == 0:\n        print(0)\n    else:\n        print(1)\n    t -= 1", "for _ in range(int(input())):\n    a = list(map(int, input().split()))\n    print(0 if (a[0] + a[1] - 2 * a[2]) % 3 == 0 else 1)", "n = int(input())\nfor i in range(n):\n    x = input()\n    l = []\n    l = x.split()\n    a = int(l[0])\n    b = int(l[1])\n    c = int(l[2])\n    if (a + b - 2 * c) % 3 == 0 or (a + c - 2 * b) % 3 == 0 or (b + c - 2 * a) % 3 == 0:\n        print(0)\n    else:\n        print(1)", "for _ in range(int(input())):\n    (a1, a2, a3) = map(int, input().split())\n    if (a1 + a2 - 2 * a3) % 3 == 0:\n        print('0')\n    else:\n        print('1')", "t = int(input())\nfor _ in range(t):\n    (a1, a2, a3) = map(int, input().split())\n    print(1 if (a1 + a2 - 2 * a3) % 3 == 2 else (a1 + a2 - 2 * a3) % 3)", "t = int(input())\nfor _ in range(t):\n    (a1, a2, a3) = list(map(int, input().strip().split()))\n    print(0) if (a1 + a3 - 2 * a2) % 3 == 0 else print(1)", "t = int(input())\nfor i in range(t):\n    (a, b, c) = [int(x) for x in input().split()]\n    print(0 if (a + b + c) % 3 == 0 else 1)", "t = int(input())\nfor i in range(t):\n    (a1, a2, a3) = input().split(' ')\n    a1 = int(a1)\n    a2 = int(a2)\n    a3 = int(a3)\n    if (a1 + a3 - 2 * a2) % 3 == 0:\n        print(0)\n    else:\n        print(1)", "for s in [*open(0)][1:]:\n    print(+(sum(map(int, s.split())) % 3 > 0))", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    if (a + b + c) % 3:\n        print(1)\n    else:\n        print(0)", "from sys import stdin\nMOD = 10000000000.0 + 7\n\ndef rl() -> str:\n    return stdin.readline().rstrip()\n\ndef ri() -> str:\n    return int(rl())\n\ndef rii() -> str:\n    return list(map(int, rl().split()))\n\ndef form(mean, dev):\n    return abs(mean - dev)\nt = ri()\nfor _ in range(t):\n    (a, b, c) = rii()\n    mean = a + c\n    dev = b * 2\n    ans = form(mean, dev) % 3\n    if ans == 2:\n        print(1)\n    else:\n        print(ans)", "anslist = []\nfor i in range(int(input())):\n    s = int(sum(map(int, input().split())))\n    if s % 3 == 0:\n        anslist.append(0)\n    else:\n        anslist.append(1)\n    print(anslist[i])", "_ = int(input())\nfor __ in range(_):\n    (a, b, c) = map(int, input().split())\n    d = abs(2 * b - (a + c))\n    if not d:\n        print(0)\n        continue\n    if d % 3 == 0:\n        print(0)\n        continue\n    else:\n        print(1)\n        continue", "inp1 = int(input())\nfor i in range(inp1):\n    (a, b, c) = input().split()\n    a = int(a)\n    b = int(b)\n    c = int(c)\n    if (a + b + c) % 3 == 0:\n        print(0)\n    else:\n        print(1)", "n = int(input())\nfor i in range(n):\n    (a, b, c) = input().split()\n    a = int(a)\n    b = int(b)\n    c = int(c)\n    if (a + b + c) % 3 == 0:\n        print(0)\n    else:\n        print(1)", "t = int(input().strip())\nre = 0\nfor _ in range(t):\n    l = input().split(' ')\n    (l[0], l[1], l[2]) = (int(l[0]), int(l[1]), int(l[2]))\n    re = sum(l)\n    if re % 3 == 0:\n        print(0)\n    else:\n        print(1)", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    print(0) if (a + b + c) % 3 == 0 else print(1)", "import sys\nimport math\nimport bisect\nfrom sys import stdin, stdout\nfrom math import gcd, floor, sqrt, log\nfrom collections import defaultdict as dd\nfrom bisect import bisect_left as bl, bisect_right as br\nsys.setrecursionlimit(100000000)\ninp = lambda : int(input())\nstrng = lambda : input().strip()\njn = lambda x, l: x.join(map(str, l))\nstrl = lambda : list(input().strip())\nmul = lambda : map(int, input().strip().split())\nmulf = lambda : map(float, input().strip().split())\nseq = lambda : list(map(int, input().strip().split()))\nceil = lambda x: int(x) if x == int(x) else int(x) + 1\nceildiv = lambda x, d: x // d if x % d == 0 else x // d + 1\nflush = lambda : stdout.flush()\nstdstr = lambda : stdin.readline()\nstdint = lambda : int(stdin.readline())\nstdpr = lambda x: stdout.write(str(x))\nmod = 1000000007\n\ndef solve(a, b, c):\n    if abs(a + c - 2 * b) % 3 == 0:\n        return 0\n    return 1\nt = inp()\nres = []\nfor i in range(t):\n    (a, b, c) = mul()\n    res.append(solve(a, b, c))\nfor i in res:\n    print(i)", "import math\nT = int(input())\nfor _ in range(T):\n    (a1, a2, a3) = map(int, input().split())\n    if (a1 + a2 + a3) % 3 == 0:\n        print(0)\n    else:\n        print(1)", "for i_ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    if (a + b + c) % 3 == 0:\n        print(0)\n    else:\n        print(1)", "t = int(input())\nfor _ in range(t):\n    (a, b, c) = map(int, input().split())\n    if (a + b + c) % 3 == 0:\n        print(0)\n        continue\n    print(1)", "t = int(input())\n\ndef arthmean(x, y, z):\n    return abs(x + z - 2 * y)\nfor i in range(t):\n    (a1, a2, a3) = map(int, input().split())\n    if arthmean(a1, a2, a3) % 3 == 0:\n        print(0)\n    else:\n        print(1)", "import math\nimport sys\nimport itertools\nimport fractions\nwtf = sys.stdin.read()\nwtf = wtf.strip().split('\\n')\nfor t in wtf[1:]:\n    (a1, a2, a3) = map(int, t.split())\n    print(0 if (a1 + a2 + a3) % 3 == 0 else 1)", "t = int(input())\nfor i in range(t):\n    (a, b, c) = map(int, input().split())\n    if (a + b + c) % 3 == 0:\n        print(0)\n    else:\n        print(1)", "mod = 10000000\nfor _ in range(int(input())):\n    (a1, a2, a3) = map(int, input().split())\n    if (a1 + a3 - 2 * a2) % 3 == 0:\n        print(0)\n    else:\n        print(1)", "for i in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    n = a + c - 2 * b\n    if n % 3 == 0:\n        print(0)\n    else:\n        print(1)", "for t in range(int(input())):\n    (n1, n2, n3) = list(map(int, str.split(input())))\n    S = n1 + n2 + n3\n    if S % 3 == 0:\n        print(0)\n    else:\n        print(1)", "t = int(input())\nfor i in range(t):\n    (a, b, c) = map(int, input().split())\n    res = abs(a + c - 2 * b)\n    res = res % 3\n    if res == 2:\n        res = 1\n    print(res % 3)", "for i in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    res = abs(a + c - 2 * b)\n    res = res % 3\n    if res == 2:\n        res = 1\n    print(res % 3)", "t = int(input())\nfor i in range(t):\n    (a, b, c) = [int(x) for x in input().split()]\n    print(0 if (a + b + c) % 3 == 0 else 1)", "for _ in range(int(input())):\n    w = [int(i) for i in input().split()]\n    if sum(w) % 3 == 0:\n        print(0)\n    else:\n        print(1)", "t = int(input())\nfor i in range(t):\n    (a, b, c) = [int(x) for x in input().split()]\n    print(0 if (a + b + c) % 3 == 0 else 1)", "t = int(input())\nfor i in range(t):\n    (a, b, c) = [int(x) for x in input().split()]\n    if (a + b + c) % 3 == 0:\n        print(0)\n    else:\n        print(1)", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    if (a + b + c) % 3:\n        print(1)\n    else:\n        print(0)", "for i in range(int(input())):\n    l = list(map(int, input().split()))\n    print(1 if sum(l) % 3 > 0 else 0)", "t = int(input())\nfor i in range(t):\n    (a, b, c) = [int(p) for p in input().split(' ')]\n    if (a + b + c) % 3 == 0:\n        print(0)\n    else:\n        print(1)", "t = int(input())\nfor _ in range(t):\n    (a, b, c) = map(int, input().split())\n    i = (a + c - 2 * b) % 3\n    if i == 2:\n        i = 1\n    print(i)", "p = int(input())\nfor i in range(p):\n    (a, b, c) = map(int, input().split())\n    dif = 2 * b - (a + c)\n    if dif % 3 == 0:\n        print('0')\n    else:\n        print('1')", "c = int(input())\nfor i in range(c):\n    a = [int(s) for s in input().split()]\n    (x, y, z) = (a[0], a[1], a[2])\n    c = abs(x + z - 2 * y) % 3\n    if c == 2:\n        c = 1\n    print(c)", "t = int(input())\nfor j in range(t):\n    (x, y, z) = map(int, input().split())\n    if (x + y + z) % 3 == 0:\n        print(0)\n    else:\n        print(1)", "n = int(input())\nfor i in range(n):\n    (a, b, c) = map(int, input().split())\n    if (a + b + c) % 3 == 0:\n        print(0)\n    else:\n        print(1)"]