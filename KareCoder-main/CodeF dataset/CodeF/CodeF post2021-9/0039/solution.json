["for s in [*open(0)][1:]:\n    (x, y, z) = sorted(map(int, s.split()))\n    print('YNEOS'[(z != x + y) & (x != y != z or (x ^ y ^ z) & 1)::2])", "for s in [*open(0)][1:]:\n    (x, y, z) = sorted(map(int, s.split()))\n    print('YNEOS'[x + y + z & 1 or (z != x + y and x != y != z)::2])", "ans = []\nt = int(input())\nfor lala in range(t):\n    (l1, l2, l3) = input().split()\n    l1 = int(l1)\n    l2 = int(l2)\n    l3 = int(l3)\n    if l1 == l2 + l3 or l2 == l1 + l3 or l3 == l1 + l2 or (l1 == l2 and l3 % 2 == 0) or (l1 == l3 and l2 % 2 == 0) or (l3 == l2 and l1 % 2 == 0):\n        ans.append('YES')\n    else:\n        ans.append('NO')\nfor x in ans:\n    print(x)", "from collections import Counter\nfrom math import ceil, floor, log, gcd\nimport bisect as bs\nimport sys\ninput = sys.stdin.readline\ninp_lis = lambda : list(map(int, input().split()))\ninp_multi = lambda : map(int, input().split())\ninp_int = lambda : int(input().strip())\nfor _ in range(int(input().strip())):\n    (a, b, c) = inp_multi()\n    if a == b and c % 2 == 0 or (a == c and b % 2 == 0) or (c == b and a % 2 == 0):\n        print('YES')\n    elif a == b + c or b == a + c or c == a + b:\n        print('YES')\n    else:\n        print('NO')", "import sys\ntestcases = int(input())\nwhile testcases > 0:\n    l = list(map(int, sys.stdin.readline().split()))\n    l.sort()\n    if l[0] == l[1]:\n        if l[2] % 2 == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif l[1] == l[2]:\n        if l[0] % 2 == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif l[2] == l[0] + l[1]:\n        print('YES')\n    else:\n        print('NO')\n    testcases -= 1", "t = int(input())\nresults = []\nfor i in range(t):\n    sticks = [int(x) for x in input().split()]\n    ans = 'NO'\n    if sticks[0] == sticks[1]:\n        if sticks[2] % 2 == 0:\n            ans = 'YES'\n    elif sticks[0] == sticks[2]:\n        if sticks[1] % 2 == 0:\n            ans = 'YES'\n    elif sticks[1] == sticks[2]:\n        if sticks[0] % 2 == 0:\n            ans = 'YES'\n    if ans == 'YES':\n        results.append(ans)\n        continue\n    if 2 * max(sticks) == sum(sticks):\n        ans = 'YES'\n    results.append(ans)\nfor result in results:\n    print(result)", "for s in [*open(0)][1:]:\n    (x, y, z) = sorted(map(int, s.split()))\n    print('YNEOS'[x + y + z & 1 or x != y != z != x + y::2])", "for s in [*open(0)][1:]:\n    (x, y, z) = sorted(map(int, s.split()))\n    print('YNEOS'[x + y + z & 1 or x != y != z != x + y::2])", "import sys\n\ndef run():\n    (l1, l2, l3) = map(int, next(sys.stdin).split(' '))\n    if l1 < 0 or l2 < 0 or l3 < 0:\n        print('NO')\n        return\n    if l1 == l2 + l3 or l2 == l1 + l3 or l3 == l1 + l2 or (l1 == l2 and l3 % 2 == 0) or (l2 == l3 and l1 % 2 == 0) or (l1 == l3 and l2 % 2 == 0):\n        print('YES')\n    else:\n        print('NO')\ntest_cases = int(next(sys.stdin))\nfor _ in range(test_cases):\n    run()", "for s in [*open(0)][1:]:\n    (x, y, z) = sorted(map(int, s.split()))\n    print('YNEOS'[x + y + z & 1 or x != y != z != x + y::2])", "for s in [*open(0)][1:]:\n    (a, b, c) = sorted(map(int, s.split()))\n    if a == b and c % 2 == 0 or (b == c and a % 2 == 0) or a + b == c:\n        print('YES')\n    else:\n        print('NO')", "m = []\nfor i in range(0, int(input())):\n    (r, k, j) = map(int, input().split())\n    if abs(r - k) == j or abs(r - j) == k or abs(k - j) == r:\n        m.append('YES')\n    elif r == k:\n        if j % 2 == 0:\n            m.append('YES')\n        else:\n            m.append('NO')\n    elif j == k:\n        if r % 2 == 0:\n            m.append('YES')\n        else:\n            m.append('NO')\n    elif r == j:\n        if k % 2 == 0:\n            m.append('YES')\n        else:\n            m.append('NO')\n    else:\n        m.append('NO')\nfor l in range(len(m)):\n    print(m[l])", "def solution():\n    import sys\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        l = list(sorted(map(int, sys.stdin.readline().split())))\n        if sum(l[:2]) == l[2] or (l[0] == l[1] and l[2] % 2 == 0) or (l[1] == l[2] and l[0] % 2 == 0):\n            print('YES')\n        else:\n            print('NO')\nsolution()", "import sys\nn = sys.stdin.readline()\nwhile True:\n    l = sys.stdin.readline()\n    if not l:\n        break\n    (l1, l2, l3) = [int(x) for x in l.split()]\n    if l1 == l2 and l3 % 2 == 0 or (l2 == l3 and l1 % 2 == 0) or (l1 == l3 and l2 % 2 == 0):\n        print('YES')\n        continue\n    if l1 + l2 == l3 or l1 + l3 == l2 or l2 + l3 == l1:\n        print('YES')\n        continue\n    print('NO')", "ans = []\nfor _ in range(int(input())):\n    (l1, l2, l3) = map(int, input().split())\n    if l1 < l2:\n        (l1, l2) = (l2, l1)\n    if l1 < l3:\n        (l1, l3) = (l3, l1)\n    if l2 < l3:\n        (l2, l3) = (l3, l2)\n    if l1 == l2:\n        ans.append('YES' if l3 % 2 == 0 else 'NO')\n    elif l2 == l3:\n        ans.append('YES' if l1 % 2 == 0 else 'NO')\n    elif l1 == l2 + l3:\n        ans.append('YES')\n    else:\n        ans.append('NO')\nprint(*ans, sep='\\n')", "import sys\n(n, *data) = [[int(x) for x in line.split()] for line in sys.stdin.read().strip().split('\\n')]\nfor line in data:\n    if abs(line[0] - line[1]) == line[2]:\n        print('YES')\n    elif abs(line[1] - line[2]) == line[0]:\n        print('YES')\n    elif abs(line[2] - line[0]) == line[1]:\n        print('YES')\n    elif line[0] == line[1] and line[2] % 2 == 0 or (line[1] == line[2] and line[0] % 2 == 0) or (line[2] == line[0] and line[1] % 2 == 0):\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nmatrica = []\nfor i in range(0, n):\n    matrica.append(sorted(list(map(int, input().split()))))\nfor i in matrica:\n    if i[2] == i[1] + i[0] or (i[2] == i[1] and i[0] % 2 == 0) or (i[0] == i[2] and i[1] % 2 == 0) or (i[0] == i[1] and i[2] % 2 == 0):\n        print('YES')\n    else:\n        print('NO')", "import sys, bisect, math\nfrom collections import deque, Counter\ninput = lambda : sys.stdin.readline().strip()\nceil = lambda x: math.ceil(x)\nmod = 10 ** 9 + 7\n\ndef solve():\n    (a, b, c) = sorted(map(int, input().split()))\n    if a + b == c or (a == b and c % 2 == 0) or (b == c and a % 2 == 0):\n        return 'YES'\n    return 'NO'\nt = 1\nt = int(input())\nfor _ in range(t):\n    print(solve())", "import sys\ninput = sys.stdin.readline\nM = 1000000007\n\ndef solve():\n    a = sorted(list(map(int, input().split())))\n    if a[2] == a[1] + a[0]:\n        return 'YES'\n    if a[2] == a[1] and a[0] % 2 == 0:\n        return 'YES'\n    if a[0] == a[1] and a[2] % 2 == 0:\n        return 'YES'\n    return 'NO'\nfor _ in range(int(input())):\n    print(solve())", "for s in [*open(0)][1:]:\n    (x, y, z) = sorted(map(int, s.split()))\n    print('YNEOS'[x + y + z & 1 or x != y != z != x + y::2])", "x = int(input())\n\ndef rectangle(a, b, c):\n    if a + b == c or a + c == b or c + b == a or (a == b and c % 2 == 0) or (c == b and a % 2 == 0) or (a == c and b % 2 == 0):\n        return 'YES'\n    else:\n        return 'NO'\nz = []\nfor i in range(x):\n    y = []\n    y = input().split()\n    a = int(y[0])\n    b = int(y[1])\n    c = int(y[2])\n    z.append(rectangle(a, b, c))\nfor x in z:\n    print(x)", "t = int(input())\na = []\nb = []\nc = []\nfor i in range(t):\n    (x, y, z) = map(int, input().split())\n    a.append(x)\n    b.append(y)\n    c.append(z)\nfor i in range(t):\n    if a[i] + b[i] == c[i]:\n        print('YES')\n    elif b[i] + c[i] == a[i]:\n        print('YES')\n    elif a[i] + c[i] == b[i]:\n        print('YES')\n    elif a[i] == b[i]:\n        if c[i] % 2 == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif a[i] == c[i]:\n        if b[i] % 2 == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif c[i] == b[i]:\n        if a[i] % 2 == 0:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "import sys\n\ndef get_int():\n    return int(sys.stdin.readline())\n\ndef get_string():\n    return sys.stdin.readline().strip()\nFILE = False\nif FILE:\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nt = get_int()\nfor i in range(t):\n    (a, b, c) = map(int, get_string().split())\n    nums = list([a, b, c])\n    if a - b - c == 0 or (b == c and a % 2 == 0):\n        print('YES')\n        continue\n    if b - a - c == 0 or (a == c and b % 2 == 0):\n        print('YES')\n        continue\n    if c - a - b == 0 or (a == b and c % 2 == 0):\n        print('YES')\n        continue\n    print('NO')", "for s in [*open(0)][1:]:\n    (x, y, z) = sorted(map(int, s.split()))\n    print('YNEOS'[x + y + z & 1 or x != y != z != x + y::2])", "for g in [*open(0)][1:]:\n    (a, b, c) = sorted(map(int, g.split()))\n    print('YNEOS'[(a != b or c % 2) and (b != c or a % 2) and (c != a + b)::2])", "for s in [*open(0)][1:]:\n    (x, y, z) = sorted(map(int, s.split()))\n    print('YNEOS'[x + y + z & 1 or x != y != z != x + y::2])", "import sys\nfrom os import path\n\ndef Construct_rect(lengths):\n    lengths = lengths.split(' ')\n    L = [int(lengths[0]), int(lengths[1]), int(lengths[2])]\n    L.sort()\n    if L[0] == L[1] and L[2] % 2 == 0:\n        ans = 'YES'\n    elif L[1] == L[2] and L[0] % 2 == 0:\n        ans = 'YES'\n    elif L[0] + L[1] == L[2]:\n        ans = 'YES'\n    else:\n        ans = 'NO'\n    return ans\n\ndef get_int():\n    return int(sys.stdin.readline())\n\ndef get_string():\n    return sys.stdin.readline().strip()\nn = get_int()\nfinal_result = []\nfor i in range(n):\n    word = get_string()\n    out = Construct_rect(word)\n    final_result.append(out)\nfor item in final_result:\n    sys.stdout.write(item)\n    sys.stdout.write('\\n')", "for s in [*open(0)][1:]:\n    (x, y, z) = sorted(map(int, s.split()))\n    print('YNEOS'[x + y + z & 1 or x != y != z != x + y::2])", "for s in [*open(0)][1:]:\n    (x, y, z) = sorted(map(int, s.split()))\n    print('YNEOS'[x + y + z & 1 or x != y != z != x + y::2])", "import sys\nimport math\nfrom math import gcd, sqrt, log2, ceil, floor\nimport heapq as hq\nfrom bisect import bisect_right, bisect_left, bisect\nimport itertools\nfrom sys import stdin, stdout, setrecursionlimit\n\ndef isPowerOfTwo(x):\n    return x and (not x & x - 1)\nMOD = int(1000000000.0) + 7\nalp = 'abcdefghijklmnopqrstuvwxyz'\nv = {'a': 1, 'e': 1, 'i': 1, 'o': 1, 'u': 1}\nc = {}\nT = 1\nT = int(stdin.readline())\nfor _ in range(T):\n    a = list(map(int, stdin.readline().rstrip().split()))\n    a.sort()\n    (x, y, z) = a\n    if x + y == z:\n        print('YES')\n    elif x == y:\n        if z % 2 == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif y == z:\n        if x % 2 == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif z == x:\n        if y % 2 == 0:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    (a, b, c) = map(int, inp().split())\n    if a + b == c or a + c == b or b + c == a or (a == b and c % 2 == 0 and (c > 1)) or (a == c and b % 2 == 0 and (b > 1)) or (b == c and a % 2 == 0 and (a > 1)):\n        print('YES')\n    else:\n        print('NO')\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "from collections import Counter, defaultdict, deque\nimport bisect\nfrom sys import stdin, stdout\nfrom itertools import repeat\nimport math\n\ndef inp(force_list=False):\n    re = list(map(int, input().split()))\n    if len(re) == 1 and (not force_list):\n        return re[0]\n    return re\n\ndef inst():\n    return input().strip()\n\ndef gcd(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return x\nMOD = 998244353\n\ndef query(a, b, c):\n    print('! %d %d %d' % (a + 1, b + 1, c + 1))\n    stdout.flush()\n    return inp()\n\ndef solve():\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    cost = sum(a[0:n - 2 * k]) + sum(map(lambda x: a[x + n - 2 * k] // a[x + n - k], range(0, k)))\n    print(cost)\n\ndef my_main():\n    kase = inp()\n    pans = []\n    for _ in range(kase):\n        da = inp()\n        da.sort()\n        if da[0] == da[1] and da[2] % 2 == 0:\n            pans.append('YES')\n        elif da[1] == da[2] and da[0] % 2 == 0:\n            pans.append('YES')\n        elif da[2] == da[1] + da[0]:\n            pans.append('YES')\n        else:\n            pans.append('NO')\n    print('\\n'.join(pans))\nmy_main()", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nfor i in range(inp()):\n    (l1, l2, l3) = sorted(invr())\n    if l1 == l2:\n        if l3 % 2 == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif l3 == l2:\n        if l1 % 2 == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif l1 + l2 == l3:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin, stdout, setrecursionlimit\nt = 1\nt = int(stdin.readline())\nfor _ in range(t):\n    l = list(map(int, stdin.readline().rstrip().split()))\n    l.sort()\n    if l[0] + l[1] == l[-1]:\n        print('YES')\n    else:\n        if l[0] == l[1]:\n            if l[-1] % 2 == 0:\n                print('YES')\n                continue\n        if l[-1] == l[1]:\n            if l[0] % 2 == 0:\n                print('YES')\n                continue\n        print('NO')", "t = int(input())\nanswer = []\nfor i in range(t):\n    (l1, l2, l3) = map(int, input().split())\n    if l1 == l2 == l3 and l1 % 2 == 0:\n        answer.append('YES')\n    elif l1 == l2 and l3 % 2 == 0 or (l1 == l3 and l2 % 2 == 0) or (l2 == l3 and l1 % 2 == 0):\n        answer.append('YES')\n    elif l1 + l2 == l3 or l2 + l3 == l1 or l1 + l3 == l2:\n        answer.append('YES')\n    else:\n        answer.append('NO')\nfor k in range(t):\n    print(answer[k])", "def canRectangle(a, b, c):\n    if a == b and c % 2 == 0:\n        return True\n    elif a == c and b % 2 == 0:\n        return True\n    elif b == c and a % 2 == 0:\n        return True\n    elif a == b + c:\n        return True\n    elif b == a + c:\n        return True\n    elif c == a + b:\n        return True\n    return False\nt = int(input())\nans = []\nfor i in range(t):\n    (a, b, c) = [int(x) for x in input().split()]\n    ans.append(canRectangle(a, b, c))\nfor i in range(t):\n    if ans[i]:\n        print('YES')\n    else:\n        print('NO')", "tests = int(input())\nres = []\nfor i in range(tests):\n    (a, b, c) = map(int, input().split())\n    arr = [a, b, c]\n    if abs(a - b) == c or abs(a - c) == b or abs(b - c) == a:\n        res.append('YES')\n    elif arr.count(max(arr)) == 2 and min(arr) % 2 == 0:\n        res.append('YES')\n    elif arr.count(min(arr)) == 2 and max(arr) % 2 == 0:\n        res.append('YES')\n    elif arr.count(min(arr)) == 3 and max(arr) % 2 == 0:\n        res.append('YES')\n    else:\n        res.append('NO')\nfor i in range(tests):\n    print(res[i])", "from math import *\nimport sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\nclass Solution:\n\n    def __init__(self):\n        self.ans = 0\n\n    def check(self, k):\n        if floor(k / 2) * 2 == k:\n            return 'YES'\n        return 'NO'\n\n    def solve(self, arr):\n        (a, b, c) = (arr[0], arr[1], arr[2])\n        if a == b:\n            return self.check(c)\n        if b == c:\n            return self.check(a)\n        if a == c:\n            return self.check(b)\n        mx = max(a, b, c)\n        if mx == a:\n            if not a - b == c:\n                return 'NO'\n        if mx == b:\n            if not b - a == c:\n                return 'NO'\n        if mx == c:\n            if not c - b == a:\n                return 'NO'\n        return 'YES'\nsol = Solution()\nt = inp()\nk = t\nans = []\nwhile t:\n    arr = inlt()\n    ans.append(sol.solve(arr))\n    t -= 1\nfor i in range(k):\n    print(ans[i])", "import sys\nget = sys.stdin.readline\nfor _ in range(int(get())):\n    x = sorted(list(map(int, get().split())))\n    (a, b, c) = (x[0], x[1], x[2])\n    if a + b == c:\n        print('YES')\n    elif a == b and c % 2 == 0:\n        print('YES')\n    elif a % 2 == 0 and b == c:\n        print('YES')\n    elif b % 2 == 0 and a == c:\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\nnum_test_cases = int(input())\nfor test_case_ittr in range(num_test_cases):\n    lengths = sorted([int(x) for x in input().split()])\n    if lengths[0] + lengths[1] == lengths[2] or (lengths[0] == lengths[1] and lengths[2] % 2 == 0) or (lengths[1] == lengths[2] and lengths[0] % 2 == 0):\n        print('YES')\n    else:\n        print('NO')", "import heapq\nimport sys\nimport math\nfrom collections import deque\nfrom bisect import bisect_left, bisect_right\nI = sys.stdin.readline\nII = lambda : int(I())\nIN = lambda x: map(int, x.split())\nFN = lambda x: map(float, x.split())\nL = lambda x: list(IN(x))\nM = 1000000007\nP = print\nT = True\nF = False\nfor _ in range(II()):\n    l = L(I())\n    l.sort()\n    if l[2] == 1:\n        print('NO')\n        continue\n    elif l[1] == 1:\n        if l[2] & 1 == 0:\n            print('YES')\n        else:\n            print('NO')\n        continue\n    elif l[0] == 1:\n        if l[2] - l[1] == 1:\n            print('YES')\n        else:\n            print('NO')\n        continue\n    if l[0] & 1 == 0 and l[1] == l[2]:\n        print('YES')\n        continue\n    if l[0] == l[1] and l[2] & 1 == 0:\n        print('YES')\n        continue\n    if l[0] + l[1] == l[2]:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin\nimport math\nfrom collections import deque\nfrom heapq import heapify, heappop, heappush\nfrom bisect import bisect_left, bisect_right\ninput = stdin.readline\n\ndef ceil(m, n):\n    val = m // n\n    if m % n != 0:\n        return val + 1\n    return val\nfor _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    (a, b, c) = sorted([a, b, c])\n    bool1 = (b == c or a == c) and a % 2 == 0 or c == a + b or (a == b and c % 2 == 0)\n    if bool1:\n        print('YES')\n    else:\n        print('NO')", "import sys\n\ndef _input():\n    return sys.stdin.readline().strip()\n\ndef main():\n    for _ in range(int(_input())):\n        l = list(map(int, _input().split()))\n        l.sort()\n        s = set(l)\n        (a, b, c) = (l[0], l[1], l[2])\n        if len(s) == 3:\n            if a + b == c:\n                print('YES')\n            else:\n                print('NO')\n        elif len(s) == 2:\n            if a == b:\n                if c % 2 != 0:\n                    print('NO')\n                else:\n                    print('YES')\n            elif c == b:\n                if a % 2 != 0:\n                    print('NO')\n                else:\n                    print('YES')\n            elif b % 2 != 0:\n                print('NO')\n            else:\n                print('YES')\n        elif a % 2 == 0:\n            print('YES')\n        else:\n            print('NO')\nmain()", "for i in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    if a == b and c & 1 == 0 or (b == c and a & 1 == 0) or (a == c and b & 1 == 0) or (a + b == c) or (a + c == b) or (b + c == a):\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nmatrica = []\nfor i in range(0, n):\n    matrica.append(list(map(int, input().split())))\nfor i in matrica:\n    if i[0] == i[1] + i[2] or i[1] == i[0] + i[2] or i[2] == i[1] + i[0]:\n        print('YES')\n    elif i[0] == i[1] and i[2] % 2 == 0:\n        print('YES')\n    elif i[0] == i[2] and i[1] % 2 == 0:\n        print('YES')\n    elif i[2] == i[1] and i[0] % 2 == 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nans = []\nfor i in range(t):\n    (l1, l2, l3) = map(int, input().split())\n    if l1 == l2 == l3:\n        if l1 % 2 == 0:\n            ans.append('YES')\n        else:\n            ans.append('NO')\n    elif l1 == l2:\n        if l3 % 2 == 0:\n            ans.append('YES')\n        else:\n            ans.append('NO')\n    elif l2 == l3:\n        if l1 % 2 == 0:\n            ans.append('YES')\n        else:\n            ans.append('NO')\n    elif l1 == l3:\n        if l2 % 2 == 0:\n            ans.append('YES')\n        else:\n            ans.append('NO')\n    elif max(l1, l2, l3) == l1 + l2 + l3 - max(l1, l2, l3):\n        ans.append('YES')\n    else:\n        ans.append('NO')\nind = 0\nwhile ind <= len(ans) - 1:\n    print(ans[ind])\n    ind = ind + 1", "ss = []\nfor i in range(0, int(input())):\n    (n, p, m) = map(int, input().split())\n    if abs(n - p) == m or abs(n - m) == p or abs(p - m) == n:\n        ss.append('YES')\n    elif n == p:\n        if m % 2 == 0:\n            ss.append('YES')\n        else:\n            ss.append('NO')\n    elif m == p:\n        if n % 2 == 0:\n            ss.append('YES')\n        else:\n            ss.append('NO')\n    elif n == m:\n        if p % 2 == 0:\n            ss.append('YES')\n        else:\n            ss.append('NO')\n    else:\n        ss.append('NO')\nfor w in range(len(ss)):\n    print(ss[w])", "ma = []\nfor i in range(0, int(input())):\n    (rock, k, j) = map(int, input().split())\n    if abs(rock - k) == j or abs(rock - j) == k or abs(k - j) == rock:\n        ma.append('YES')\n    elif rock == k:\n        if j % 2 == 0:\n            ma.append('YES')\n        else:\n            ma.append('NO')\n    elif j == k:\n        if rock % 2 == 0:\n            ma.append('YES')\n        else:\n            ma.append('NO')\n    elif rock == j:\n        if k % 2 == 0:\n            ma.append('YES')\n        else:\n            ma.append('NO')\n    else:\n        ma.append('NO')\nfor l in range(len(ma)):\n    print(ma[l])", "ab = []\nfor i in range(0, int(input())):\n    (rock, k, j) = map(int, input().split())\n    if abs(rock - k) == j or abs(rock - j) == k or abs(k - j) == rock:\n        ab.append('YES')\n    elif rock == k:\n        if j % 2 == 0:\n            ab.append('YES')\n        else:\n            ab.append('NO')\n    elif j == k:\n        if rock % 2 == 0:\n            ab.append('YES')\n        else:\n            ab.append('NO')\n    elif rock == j:\n        if k % 2 == 0:\n            ab.append('YES')\n        else:\n            ab.append('NO')\n    else:\n        ab.append('NO')\nfor l in range(len(ab)):\n    print(ab[l])", "n = []\nfor i in range(0, int(input())):\n    (ro, p, m) = map(int, input().split())\n    if abs(ro - p) == m or abs(ro - m) == p or abs(p - m) == ro:\n        n.append('YES')\n    elif ro == p:\n        if m % 2 == 0:\n            n.append('YES')\n        else:\n            n.append('NO')\n    elif m == p:\n        if ro % 2 == 0:\n            n.append('YES')\n        else:\n            n.append('NO')\n    elif ro == m:\n        if p % 2 == 0:\n            n.append('YES')\n        else:\n            n.append('NO')\n    else:\n        n.append('NO')\nfor c in range(len(n)):\n    print(n[c])", "n = int(input())\nlist2 = []\nfor i in range(n):\n    flag = 0\n    list1 = input().split()\n    list1 = [int(x) for x in list1]\n    if list1[0] == list1[1] and list1[2] % 2 == 0:\n        flag = 1\n    elif list1[0] == list1[2] and list1[1] % 2 == 0:\n        flag = 1\n    elif list1[1] == list1[2] and list1[0] % 2 == 0:\n        flag = 1\n    else:\n        for i in list1:\n            if 2 * i == list1[0] + list1[1] + list1[2]:\n                flag = 1\n    list2.append(flag)\nfor i in list2:\n    if i == 1:\n        print('YES')\n    else:\n        print('NO')", "ma = []\nfor i in range(0, int(input())):\n    (rock, k, j) = map(int, input().split())\n    if abs(rock - k) == j or abs(rock - j) == k or abs(k - j) == rock:\n        ma.append('YES')\n    elif rock == k:\n        if j % 2 == 0:\n            ma.append('YES')\n        else:\n            ma.append('NO')\n    elif j == k:\n        if rock % 2 == 0:\n            ma.append('YES')\n        else:\n            ma.append('NO')\n    elif rock == j:\n        if k % 2 == 0:\n            ma.append('YES')\n        else:\n            ma.append('NO')\n    else:\n        ma.append('NO')\nfor l in range(len(ma)):\n    print(ma[l])", "n = int(input())\nans = []\nfor _ in range(n):\n    (a, b, c) = [int(x) for x in input().split()]\n    if a - b == c or a - c == b:\n        ans.append('YES')\n    elif b - a == c or b - c == a:\n        ans.append('YES')\n    elif c - a == b or c - b == a:\n        ans.append('YES')\n    elif a == c and b % 2 == 0 or (a == b and c % 2 == 0) or (b == c and a % 2 == 0):\n        ans.append('YES')\n    else:\n        ans.append('NO')\nfor i in range(n - 1):\n    print(ans[i])\nprint(ans[-1])", "ma = []\nfor i in range(0, int(input())):\n    (rock, k, j) = map(int, input().split())\n    if abs(rock - k) == j or abs(rock - j) == k or abs(k - j) == rock:\n        ma.append('YES')\n    elif rock == k:\n        if j % 2 == 0:\n            ma.append('YES')\n        else:\n            ma.append('NO')\n    elif j == k:\n        if rock % 2 == 0:\n            ma.append('YES')\n        else:\n            ma.append('NO')\n    elif rock == j:\n        if k % 2 == 0:\n            ma.append('YES')\n        else:\n            ma.append('NO')\n    else:\n        ma.append('NO')\nfor l in range(len(ma)):\n    print(ma[l])", "ma = []\nfor i in range(0, int(input())):\n    (rock, k, j) = map(int, input().split())\n    if abs(rock - k) == j or abs(rock - j) == k or abs(k - j) == rock:\n        ma.append('YES')\n    elif rock == k:\n        if j % 2 == 0:\n            ma.append('YES')\n        else:\n            ma.append('NO')\n    elif j == k:\n        if rock % 2 == 0:\n            ma.append('YES')\n        else:\n            ma.append('NO')\n    elif rock == j:\n        if k % 2 == 0:\n            ma.append('YES')\n        else:\n            ma.append('NO')\n    else:\n        ma.append('NO')\nfor l in range(len(ma)):\n    print(ma[l])", "ma = []\nfor i in range(0, int(input())):\n    (rock, k, j) = map(int, input().split())\n    if abs(rock - k) == j or abs(rock - j) == k or abs(k - j) == rock:\n        ma.append('YES')\n    elif rock == k:\n        if j % 2 == 0:\n            ma.append('YES')\n        else:\n            ma.append('NO')\n    elif j == k:\n        if rock % 2 == 0:\n            ma.append('YES')\n        else:\n            ma.append('NO')\n    elif rock == j:\n        if k % 2 == 0:\n            ma.append('YES')\n        else:\n            ma.append('NO')\n    else:\n        ma.append('NO')\nfor l in range(len(ma)):\n    print(ma[l])", "ma = []\nfor i in range(0, int(input())):\n    (rock, k, j) = map(int, input().split())\n    if abs(rock - k) == j or abs(rock - j) == k or abs(k - j) == rock:\n        ma.append('YES')\n    elif rock == k:\n        if j % 2 == 0:\n            ma.append('YES')\n        else:\n            ma.append('NO')\n    elif j == k:\n        if rock % 2 == 0:\n            ma.append('YES')\n        else:\n            ma.append('NO')\n    elif rock == j:\n        if k % 2 == 0:\n            ma.append('YES')\n        else:\n            ma.append('NO')\n    else:\n        ma.append('NO')\nfor l in range(len(ma)):\n    print(ma[l])", "for s in [*open(0)][1:]:\n    (x, y, z) = sorted(map(int, s.split()))\n    print('YNEOS'[(z != x + y) & (x != y != z or x + y + z & 1)::2])", "import sys\ncases = int(sys.stdin.readline())\nfor _ in range(cases):\n    length = [int(x) for x in sys.stdin.readline().split()]\n    res = False\n    for i in range(3):\n        if length[i] == length[i - 1] + length[i - 2]:\n            res = True\n            break\n    for i in range(3):\n        if length[i] % 2 == 0 and length[i - 1] == length[i - 2]:\n            res = True\n            break\n    print('YES' if res else 'NO')", "lan = []\nfor _ in range(int(input())):\n    (l1, l2, l3) = map(int, input().split())\n    if (l1 + l2 + l3) % 2 != 0:\n        lan.append('NO')\n    elif l1 + l2 == l3 or l2 + l3 == l1 or l1 + l3 == l2:\n        lan.append('YES')\n    elif l1 == l2 or l1 == l3 or l2 == l3:\n        lan.append('YES')\n    else:\n        lan.append('NO')\nprint(*lan, sep='\\n')", "for s in [*open(0)][1:]:\n    (x, y, z) = sorted(map(int, s.split()))\n    print('YNEOS'[x + y + z & 1 or x != y != z != x + y::2])", "for s in [*open(0)][1:]:\n    (x, y, z) = sorted(map(int, s.split()))\n    print('YNEOS'[x + y + z & 1 or x != y != z != x + y::2])", "list1 = []\nlist2 = []\nrawstickamount = input()\nstickamount = int(rawstickamount)\n\ndef create_sticks(amount):\n    i = 0\n    for i in range(amount):\n        list2 = [int(i) for i in input().split()]\n        list1.append(list2[:])\n        list2.clear()\ncreate_sticks(stickamount)\nindex = 0\nfor i in range(len(list1)):\n    r = 0\n    isrect = 0\n    while r < 3:\n        if list1[index][0] + list1[index][1] == list1[index][2]:\n            isrect = +1\n        if list1[index][0] == list1[index][1]:\n            if list1[index][2] % 2 == 0:\n                isrect = +1\n        list1[index].insert(0, list1[index].pop(-1))\n        r += 1\n    if isrect > 0:\n        print('YES')\n    else:\n        print('NO')\n    index += 1", "for s in [*open(0)][1:]:\n    (x, y, z) = sorted(map(int, s.split()))\n    print('YNEOS'[x + y + z & 1 or x != y != z != x + y::2])", "for s in [*open(0)][1:]:\n    (x, y, z) = sorted(map(int, s.split()))\n    print('YNEOS'[x + y + z & 1 or x != y != z != x + y::2])", "def solve():\n    t = int(input())\n    numbers = []\n    for i in range(t):\n        inp = list(map(int, input().split()))\n        numbers.append(inp)\n    for num in numbers:\n        (l1, l2, l3) = (num[0], num[1], num[2])\n        if l1 == l2:\n            if l3 % 2 == 0:\n                print('YES')\n            else:\n                print('NO')\n            continue\n        elif l2 == l3:\n            if l1 % 2 == 0:\n                print('YES')\n            else:\n                print('NO')\n            continue\n        elif l1 == l3:\n            if l2 % 2 == 0:\n                print('YES')\n            else:\n                print('NO')\n            continue\n        if l1 + l2 == l3:\n            print('YES')\n        elif l2 + l3 == l1:\n            print('YES')\n        elif l3 + l1 == l2:\n            print('YES')\n        else:\n            print('NO')\n        continue\nsolve()", "import math\nimport sys\nimport itertools\nimport fractions\nwtf = sys.stdin.read()\nwtf = wtf.strip().split('\\n')\nfor t in wtf[1:]:\n    L = sorted(map(int, t.split()))\n    print('YES' if L[1] == L[0] and L[2] % 2 == 0 or (L[1] == L[2] and L[0] % 2 == 0) or L[2] == L[0] + L[1] else 'NO')", "for s in [*open(0)][1:]:\n    (x, y, z) = sorted(map(int, s.split()))\n    print('YNEOS'[x + y + z & 1 or x != y != z != x + y::2])", "for s in [*open(0)][1:]:\n    (x, y, z) = sorted(map(int, s.split()))\n    print('YNEOS'[x + y + z & 1 or x != y != z != x + y::2])", "for s in [*open(0)][1:]:\n    (x, y, z) = sorted(map(int, s.split()))\n    print('YNEOS'[x + y + z & 1 or x != y != z != x + y::2])", "import sys\n\ndef rall():\n    return sys.stdin.readlines()\n\ndef rl():\n    return sys.stdin.readline().strip()\n\ndef rl_types(types):\n    str_list = [x for x in sys.stdin.readline().strip().split(' ')]\n    return [types[i](str_list[i]) for i in range(len(str_list))]\n\ndef pr(something=''):\n    sys.stdout.write(str(something) + '\\n')\n\ndef pra(array):\n    sys.stdout.write(' '.join([str(x) for x in array]) + '\\n')\n\ndef solve(array):\n    return array\nN = int(rl())\nfor _ in range(N):\n    lengths = sorted(list(map(int, rl().split(' '))))\n    valid = lengths[0] + lengths[1] == lengths[2]\n    if lengths[0] == lengths[1]:\n        valid |= lengths[2] % 2 == 0\n    if lengths[0] == lengths[2]:\n        valid |= lengths[1] % 2 == 0\n    if lengths[2] == lengths[1]:\n        valid |= lengths[0] % 2 == 0\n    print('YES' if valid else 'NO')", "for s in [*open(0)][1:]:\n    (x, y, z) = sorted(map(int, s.split()))\n    print('YNEOS'[x + y + z & 1 or x != y != z != x + y::2])", "for s in [*open(0)][1:]:\n    (x, y, z) = sorted(map(int, s.split()))\n    print('YNEOS'[x + y + z & 1 or x != y != z != x + y::2])", "for s in [*open(0)][1:]:\n    (x, y, z) = sorted(map(int, s.split()))\n    print('YNEOS'[x + y + z & 1 or x != y != z != x + y::2])", "for s in [*open(0)][1:]:\n    (x, y, z) = sorted(map(int, s.split()))\n    print('YNEOS'[x + y + z & 1 or x != y != z != x + y::2])", "t = int(input())\nfor i in range(t):\n    (a, b, c) = sorted(map(int, input().split()))\n    if a + b == c or (a == b and c % 2 == 0) or (b == c and a % 2 == 0):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (l1, l2, l3) = map(int, input().split())\n    if l1 - l2 == l3 or l2 - l1 == l3 or l2 - l3 == l1 or (l3 - l2 == l1) or (l3 - l1 == l2) or (l1 == l2 and l3 % 2 == 0) or (l1 == l3 and l2 % 2 == 0) or (l2 == l3 and l1 % 2 == 0):\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nans = []\nfor i in range(n):\n    b = list(input().split(' '))\n    a = []\n    for j in range(len(b)):\n        a.append(int(b[j]))\n    if a[0] + a[1] == a[2] or a[2] + a[1] == a[0] or a[2] + a[0] == a[1] or (a[0] == a[1] and a[2] % 2 == 0) or (a[2] == a[1] and a[0] % 2 == 0) or (a[2] == a[0] and a[1] % 2 == 0):\n        ans.append('YES')\n    else:\n        ans.append('NO')\nfor i in range(n):\n    print(ans[i])", "test = int(input())\nwhile test:\n    l = list(map(int, input().split()))\n    l.sort()\n    if l[0] == l[1] and l[2] % 2 == 0:\n        print('YES')\n    elif l[1] == l[2] and l[0] % 2 == 0:\n        print('YES')\n    elif l[2] == l[1] + l[0]:\n        print('YES')\n    else:\n        print('NO')\n    test -= 1", "def compair(same, diff):\n    if diff % 2 == 0:\n        return 'YES'\n    return 'NO'\n\ndef answer():\n    txt = input()\n    ln = list(map(int, txt.split(' ')))\n    ln.sort()\n    (a, b, c) = ln\n    if a == b:\n        return compair(a, c)\n    elif b == c:\n        return compair(b, a)\n    elif a + b == c:\n        return 'YES'\n    else:\n        return 'NO'\nt = int(input())\nfor i in range(t):\n    print(answer())", "t = int(input())\nfor i in range(t):\n    l = input()\n    l = [int(e) for e in l.split()]\n    l.sort()\n    if l[0] + l[1] == l[2]:\n        print('YES')\n    elif l[0] == l[1] and l[2] % 2 == 0:\n        print('YES')\n    elif l[2] == l[1] and l[0] % 2 == 0:\n        print('YES')\n    else:\n        print('NO')", "for t in range(int(input())):\n    (l1, l2, l3) = map(int, input().split())\n    if l1 == l2 or l1 == l3 or l2 == l3:\n        if l1 == l2 and (not l3 % 2):\n            print('YES')\n        elif l1 == l3 and (not l2 % 2):\n            print('YES')\n        elif l2 == l3 and (not l1 % 2):\n            print('YES')\n        else:\n            print('NO')\n    elif l1 == l2 + l3:\n        print('YES')\n    elif l2 == l1 + l3:\n        print('YES')\n    elif l3 == l1 + l2:\n        print('YES')\n    else:\n        print('NO')", "def solve(l1, l2, l3):\n    if l1 % 2 != 0 and l2 % 2 != 0 and (l3 % 2 != 0):\n        return 'NO'\n    else:\n        if l2 + l3 == l1 or l1 + l3 == l2 or l2 + l1 == l3:\n            return 'YES'\n        elif l1 % 2 == 0 and l2 == l3 or (l2 % 2 == 0 and l1 == l3) or (l3 % 2 == 0 and l2 == l1):\n            return 'YES'\n        return 'NO'\n    pass\nT = int(input())\nfor _ in range(T):\n    (l1, l2, l3) = map(int, input().split())\n    out_ = solve(l1, l2, l3)\n    print(out_)", "no_test_case = int(input())\nfor test_case in range(no_test_case):\n    input_test = list(map(int, input().split()))\n    [l1, l2, l3] = input_test\n    if l1 - l2 == l3:\n        print('YES')\n    elif l1 - l3 == l2:\n        print('YES')\n    elif l2 - l1 == l3:\n        print('YES')\n    elif l2 - l3 == l1:\n        print('YES')\n    elif l3 - l1 == l2:\n        print('YES')\n    elif l3 - l2 == l1:\n        print('YES')\n    elif l1 == l2 and l3 % 2 == 0:\n        print('YES')\n    elif l2 == l3 and l1 % 2 == 0:\n        print('YES')\n    elif l1 == l3 and l2 % 2 == 0:\n        print('YES')\n    else:\n        print('NO')"]