["for _ in range(int(input())):\n    n = int(input())\n    a = sorted(map(int, input().split(' ')))\n    if sum(a[:(n + 1) // 2]) < sum(a[-((n - 1) // 2):]):\n        print('YES')\n    else:\n        print('NO')", "test = int(input())\nfor i in range(test):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    mid = (n + 1) // 2\n    if sum(a[:mid]) < sum(a[:-mid:-1]):\n        print('YES')\n    else:\n        print('NO')", "import math\nt = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    up = math.ceil(n / 2)\n    if n % 2 == 0 and sum(a[0:up]) < sum(a[up + 1:]) or (n % 2 == 1 and sum(a[0:up]) < sum(a[up:])):\n        print('YES')\n    else:\n        print('NO')", "import sys\nimport heapq\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\ntests = inp()\nfor wx in range(tests):\n    n = inp()\n    lis = inlt()\n    lis.sort()\n    count1 = n // 2 + 1\n    count2 = len(lis) - count1\n    sum1 = sum(lis[:count1])\n    sum2 = sum(lis[count1:])\n    i = count1 - 1\n    possible = False\n    while count1 > count2:\n        if sum1 < sum2:\n            possible = True\n            break\n        sum1 -= lis[i]\n        i -= 1\n        count1 -= 1\n    if possible:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    e = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    a = a[::-1]\n    if e % 2 == 1:\n        if sum(a[:e // 2]) > sum(a[e // 2:]):\n            print('YES')\n        else:\n            print('NO')\n    elif sum(a[:e // 2 - 1]) > sum(a[e // 2:]):\n        print('YES')\n    else:\n        print('NO')", "def is_possible(n, arr):\n    half = (n + 1) // 2\n    if sum(arr[:half]) < sum(arr[-half + 1:]):\n        return 'YES'\n    return 'NO'\nflags = []\nfor _ in range(int(input())):\n    (n, arr) = (int(input()), list(map(int, input().split())))\n    arr.sort()\n    print(is_possible(n, arr))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    if n % 2 != 0:\n        if sum(l[:n // 2]) > sum(l[n // 2:]):\n            print('YES')\n        else:\n            print('NO')\n    else:\n        a = sum(l[:n // 2 - 1])\n        b = sum(l[n // 2 - 1:])\n        if a > b:\n            print('YES')\n        elif a > b - l[n // 2 - 1]:\n            print('YES')\n        else:\n            print('NO')", "ints = lambda : list(map(int, input().split()))\nalpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nmx = 10 ** 5\ninp = lambda : int(input())\nfor i in range(inp()):\n    n = inp()\n    arr = ints()\n    arr.sort()\n    sum1 = sum(arr[:n // 2 + 1]) if n % 2 else sum(arr[:n // 2])\n    sum2 = sum(arr[n // 2 + 1:])\n    print('YES' if sum2 > sum1 else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    (st, end) = ((n - 1) // 2, n // 2 + 1)\n    if sum(a[:st + 1]) < sum(a[end:]):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nresult = []\nfor case in range(t):\n    n = int(input())\n    seq = list(map(int, input().split()))\n    seq.sort()\n    if n % 2:\n        part1 = seq[:n // 2 + 1]\n        part2 = seq[-(n - n // 2 - 1):]\n    else:\n        part1 = seq[:n // 2]\n        part2 = seq[-(n - n // 2 - 1):]\n    if sum(part1) < sum(part2):\n        result.append('YES')\n    else:\n        result.append('NO')\nfor x in result:\n    print(x)", "for tc in range(int(input())):\n    n = int(input())\n    arr = sorted(list(map(int, input().split())))\n    if n % 2 == 1:\n        sum1 = sum(arr[0:n // 2 + 1])\n        sum2 = sum(arr[n // 2 + 1:n])\n        if sum2 > sum1:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        sum1 = sum(arr[0:n // 2])\n        sum2 = sum(arr[n // 2 + 1:n])\n        if sum2 > sum1:\n            print('YES')\n        else:\n            print('NO')", "import sys\nimport math\nimport bisect\nfrom sys import stdin, stdout\nfrom math import gcd, floor, sqrt, log\nfrom collections import defaultdict as dd\nfrom bisect import bisect_left as bl, bisect_right as br\nsys.setrecursionlimit(100000000)\ninp = lambda : int(input())\nstrng = lambda : input().strip()\njn = lambda x, l: x.join(map(str, l))\nstrl = lambda : list(input().strip())\nmul = lambda : map(int, input().strip().split())\nmulf = lambda : map(float, input().strip().split())\nseq = lambda : list(map(int, input().strip().split()))\nceil = lambda x: int(x) if x == int(x) else int(x) + 1\nceildiv = lambda x, d: x // d if x % d == 0 else x // d + 1\nflush = lambda : stdout.flush()\nstdstr = lambda : stdin.readline()\nstdint = lambda : int(stdin.readline())\nstdpr = lambda x: stdout.write(str(x))\n\ndef func():\n    n = inp()\n    l = seq()\n    l.sort()\n    mid = n // 2 + 1\n    if sum(l[:mid]) < sum(l[mid:]):\n        print('YES')\n    elif not n % 2 and sum(l[:mid - 1]) < sum(l[mid:]):\n        print('YES')\n    else:\n        print('NO')\nt = inp()\nfor i in range(t):\n    func()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    he_n = n // 2\n    if n & 1:\n        s_pre = sum(a[:he_n + 1])\n        s_a = sum(a[he_n + 1:])\n    else:\n        s_pre = sum(a[:he_n])\n        s_a = sum(a[he_n + 1:])\n    print('YNEOS'[s_a <= s_pre::2])", "for _ in range(int(input())):\n    n = int(input())\n    l = sorted(map(int, input().split(' ')))\n    if sum(l[:(n + 1) // 2]) < sum(l[-((n - 1) // 2):]):\n        print('YES')\n    else:\n        print('NO')", "def find_possible():\n    number_examples = int(input())\n    for test_case in range(number_examples):\n        input()\n        test_case = list(map(int, input().split()))\n        test_case.sort()\n        possible = 'NO'\n        big_quantity = -1\n        small_quantity = 1\n        small_sum = sum(test_case[:2])\n        big_sum = test_case[big_quantity]\n        for i in range(len(test_case) // 2):\n            if small_sum < big_sum:\n                possible = 'YES'\n                break\n            big_quantity -= 1\n            small_quantity += 1\n            small_sum += test_case[small_quantity]\n            big_sum += test_case[big_quantity]\n        print(possible)\nfind_possible()", "t = int(input())\nfor veces in range(t):\n    n = int(input())\n    L = list(map(int, input().split()))\n    L.sort()\n    if n % 2 == 1:\n        m = n // 2 + 1\n        a = sum(L[0:m])\n        b = sum(L[m:n])\n    else:\n        m = n // 2\n        a = sum(L[0:m])\n        b = sum(L[m + 1:n])\n    if a < b:\n        print('YES')\n    else:\n        print('NO')", "inp = int(input())\nfor _ in range(inp):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    (s1, s2) = (a[0], 0)\n    for i in range(1, (n + 1) // 2 + 1):\n        s1 += a[i]\n        s2 += a[n - i]\n        if s1 < s2:\n            print('YES')\n            break\n    else:\n        print('NO')", "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    n = int(sys.stdin.readline())\n    l = list(map(int, sys.stdin.readline().strip().split()))\n    l.sort()\n    r = (n - 1) // 2\n    m1 = sum(l[n - r:])\n    m2 = sum(l[:r + 1])\n    if m1 > m2:\n        sys.stdout.write('YES' + '\\n')\n    else:\n        sys.stdout.write('NO' + '\\n')", "cases = int(input())\nsol = []\nwhile cases > 0:\n    len = int(input())\n    numbers = [int(num) for num in input().split()]\n    numbers.sort()\n    red = sum(numbers[int(len / 2 + (1 if len % 2 == 0 else 0.5))::1])\n    blue = sum(numbers[0:int(len / 2 + (0 if len % 2 == 0 else 0.5)):1])\n    sol.append('YES' if red > blue else 'NO')\n    cases -= 1\nfor s in sol:\n    print(s)", "tc = int(input())\nfor i in range(tc):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    (x, y) = (a[0], 0)\n    for i in range(1, n // 2 + n % 2):\n        x += a[i]\n        y += a[-i]\n        if x < y:\n            print('YES')\n            break\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    if n % 2 == 0:\n        s = sum(a[:n // 2])\n        a.pop(n // 2)\n    else:\n        s = sum(a[:n // 2 + 1])\n    if 2 * s < sum(a):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    if n % 2 == 0:\n        s = sum(a[:n // 2])\n        s1 = sum(a[n // 2 + 1:])\n    else:\n        s = sum(a[:n // 2 + 1])\n        s1 = sum(a[n // 2 + 1:])\n    if s1 > s:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin\ninput = stdin.readline\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        nums = list(map(int, input().split()))\n        nums.sort()\n        r_sum = nums[n - 1]\n        b_sum = nums[0] + nums[1]\n        st = 2\n        en = n - 2\n        flag = 0\n        if r_sum > b_sum:\n            flag = 1\n        while st < en:\n            r_sum += nums[en]\n            b_sum += nums[st]\n            st += 1\n            en -= 1\n            if r_sum > b_sum:\n                flag = 1\n                break\n        print('YES' if flag == 1 else 'NO')\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().strip().split()))\n    l.sort()\n    (a, b) = (l[0], 0)\n    for i in range(1, n // 2 + n % 2):\n        a += l[i]\n        b += l[n - i]\n        if a < b:\n            print('YES')\n            break\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if n % 2 == 1:\n        k = (n + 1) // 2\n        if sum(a[:k]) < sum(a[k:]):\n            print('YES')\n        else:\n            print('NO')\n    else:\n        k = (n + 2) // 2\n        if sum(a[:k - 1]) < sum(a[k:]):\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if sum(a[:(n + 1) // 2]) < sum(a[n // 2 + 1:]):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if sum(a[:(n + 1) // 2]) < sum(a[n // 2 + 1:]):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = sorted(map(int, input().split(' ')))\n    if sum(l[:(n + 1) // 2]) < sum(l[-((n - 1) // 2):]):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))[:n]\n    a.sort()\n    (r1, l2) = ((n - 1) // 2, (n + 2) // 2)\n    (b, r) = (sum(a[:r1 + 1]), sum(a[l2:]))\n    print('YES' if r > b else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(map(int, input().split()), reverse=True)\n    h = (n + 1) // 2\n    p = n % 2\n    print('YES' if sum(a[:h - 1]) > sum(a[h - p:]) else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    if n % 2 == 0:\n        if sum(l[:n // 2]) < sum(l[n // 2 + 1:]):\n            print('YES')\n        else:\n            print('NO')\n    elif sum(l[:n // 2 + 1]) < sum(l[n // 2 + 1:]):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    seq = [int(i) for i in input().split()]\n    seq.sort()\n    blue_sum = sum(seq[:(n - 1) // 2 + 1])\n    red_sum = sum(seq[n // 2 + 1:])\n    print('YES' if red_sum > blue_sum else 'NO')", "num = int(input())\nfor _ in range(num):\n    n = int(input())\n    seq1 = [int(i) for i in input().split()]\n    seq1.sort()\n    blue_sum = sum(seq1[:(n - 1) // 2 + 1])\n    red_sum = sum(seq1[n // 2 + 1:])\n    print('YES' if red_sum > blue_sum else 'NO')", "def solve():\n    n = int(input())\n    seq = sorted([int(x) for x in input().split()])\n    if sum(seq[:n // 2 + (1 if n % 2 == 1 else 0)]) < sum(seq[n // 2 + 1:]):\n        print('YES')\n    else:\n        print('NO')\nfor tc in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if n % 2 == 1:\n        n = n // 2\n        if sum(a[:n + 1]) < sum(a[n + 1:]):\n            print('YES')\n        else:\n            print('NO')\n    else:\n        n = n // 2\n        if sum(a[:n]) < sum(a[n + 1:]):\n            print('YES')\n        else:\n            print('NO')", "for i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    if n % 2 == 0:\n        if sum(arr[:n // 2]) < sum(arr[n // 2 + 1:]):\n            print('YES')\n        else:\n            print('NO')\n    elif sum(arr[:n // 2 + 1]) < sum(arr[n // 2 + 1:]):\n        print('YES')\n    else:\n        print('NO')", "import math\n\ndef intlist():\n    return [int(i) for i in input().split(' ')]\n\ndef stringlsit():\n    return input().split(' ')\n\ndef yes(t):\n    if t:\n        return 'YES'\n    return 'NO'\n\ndef printjoin(l):\n    l = [str(i) for i in l]\n    return ' '.join(l)\n\ndef solve():\n    n = int(input())\n    s = intlist()\n    s = sorted(s, reverse=True)\n    if n % 2 == 1:\n        to = n // 2\n    else:\n        to = n // 2 - 1\n    a = 0\n    b = s[-1]\n    for i in range(to):\n        a += s[i]\n        b += s[-2 - i]\n        if a > b:\n            return 'YES'\n    return 'NO'\nt = input()\nfor tt in range(int(t)):\n    print(solve())", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    a.sort()\n    if n % 2 == 0:\n        if sum(a[0:n // 2]) < sum(a[n // 2 + 1:]):\n            print('YES')\n        else:\n            print('NO')\n    elif sum(a[0:n // 2 + 1]) < sum(a[n // 2 + 1:]):\n        print('YES')\n    else:\n        print('NO')", "try:\n    for _ in range(0, int(input())):\n        n = int(input())\n        mylist = list(map(int, input().split()))\n        mylist.sort()\n        if n % 2 == 0:\n            Sblue = sum(mylist[:n // 2])\n            Sred = sum(mylist[n // 2 + 1:])\n            if Sred > Sblue:\n                print('YES')\n                continue\n            else:\n                print('NO')\n                continue\n        else:\n            Sblue = sum(mylist[:n // 2 + 1])\n            Sred = sum(mylist[n // 2 + 1:])\n            if Sred > Sblue:\n                print('YES')\n                continue\n            else:\n                print('NO')\n                continue\nexcept:\n    pass", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = sorted(map(int, input().split()))\n    a1 = a[0]\n    a2 = 0\n    flag = False\n    for i in range(1, n // 2 + 1):\n        a1 += a[i]\n        a2 += a[-i]\n        if a1 < a2:\n            flag = True\n            break\n    print('YES') if flag else print('NO')", "import sys\ninput = sys.stdin.readline\nprint = sys.stdout.write\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        a = int(input())\n        s = list(map(int, input().split()))\n        s = sorted(s)\n        sum1 = s[0]\n        sum2 = 0\n        f = False\n        if a % 2 != 0:\n            for i in range(1, a // 2 + 1):\n                sum1 += s[i]\n                sum2 += s[-i]\n                if sum2 > sum1:\n                    print(f'YES\\n')\n                    f = True\n                    break\n            if f == False:\n                print(f'NO\\n')\n        else:\n            for i in range(1, a // 2):\n                sum1 += s[i]\n                sum2 += s[-i]\n                if sum2 > sum1:\n                    print(f'YES\\n')\n                    f = True\n                    break\n            if f == False:\n                print(f'NO\\n')\nmain()", "import sys\n\ndef main():\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n = int(sys.stdin.readline())\n        nums = list(map(int, sys.stdin.readline().split()))\n        nums.sort()\n        sum_blue = nums[0] + nums[1]\n        left = 1\n        count_blue = 2\n        sum_red = nums[-1]\n        count_red = 1\n        right = n - 1\n        while left < right:\n            if sum_red > sum_blue and count_blue > count_red:\n                break\n            elif sum_red <= sum_blue and count_blue > count_red:\n                if left + 1 == right:\n                    break\n                else:\n                    right -= 1\n                    left += 1\n                    sum_red += nums[right]\n                    sum_blue += nums[left]\n        if sum_red > sum_blue and count_blue > count_red:\n            print('YES')\n        else:\n            print('NO')\nmain()", "def main():\n    for _ in range(int(input())):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        arr.sort()\n        (l, r) = (1, n - 1)\n        (sum_l, sum_r) = (arr[0], 0)\n        flag = False\n        while l < r:\n            sum_l += arr[l]\n            sum_r += arr[r]\n            if sum_l < sum_r:\n                flag = True\n                break\n            l += 1\n            r -= 1\n        print('YES' if flag else 'NO')\nmain()", "t = int(input())\n\ndef solve(n, ar):\n    ar.sort()\n    (smb, smr, cb, cr) = (ar[0], 0, 1, 0)\n    (l, r) = (0, n)\n    while l < r:\n        if smb < smr:\n            return 'YES'\n        l += 1\n        r -= 1\n        if l != r:\n            smb += ar[l]\n            smr += ar[r]\n    return 'NO'\nfor _ in range(t):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    print(solve(n, ar))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    if n % 2 == 0:\n        if sum(l[0:n // 2 + 1]) < sum(l[n // 2:n]):\n            print('YES')\n        else:\n            print('NO')\n    elif sum(l[0:n // 2 + 1]) < sum(l[n // 2 + 1:n]):\n        print('YES')\n    else:\n        print('NO')", "def solve():\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    (sb, sr, cr, cb, f) = (l[n - 1], 0, 0, n - 2, 0)\n    while cr < cb:\n        sr += l[cr]\n        sb += l[cb]\n        if sr > sb:\n            f = 1\n            break\n        else:\n            cr += 1\n            cb -= 1\n    if f:\n        print('YES')\n    else:\n        print('NO')\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().strip().split()))\n    l.sort()\n    (a, b) = (l[0], 0)\n    for i in range(1, n // 2 + n % 2):\n        a += l[i]\n        b += l[n - i]\n        if a < b:\n            print('YES')\n            break\n    else:\n        print('NO')", "for _ in range(int(input())):\n    l = int(input())\n    n = list(map(int, input().split()))\n    sorted_n = sorted(n)\n    ans = ''\n    mid = l // 2\n    if l % 2 != 0:\n        mid = mid + 1\n    mid = mid\n    lenBmid = len(sorted_n[:mid])\n    lenAmid = len(sorted_n[mid:])\n    if lenBmid == lenAmid:\n        Blue_Sum = sum(sorted_n[:mid])\n        Red_Sum = sum(sorted_n[mid:][1:])\n        if Red_Sum > Blue_Sum:\n            ans = 'YES'\n        else:\n            ans = 'NO'\n    elif lenBmid > lenAmid:\n        Blue_Sum = sum(sorted_n[:mid])\n        Red_Sum = sum(sorted_n[mid:])\n        if Red_Sum > Blue_Sum:\n            ans = 'YES'\n        else:\n            ans = 'NO'\n    print(ans)", "def solve():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    a.sort()\n    sum1 = 0\n    sum2 = a[0]\n    i = 1\n    j = n - 1\n    while i < j:\n        sum1 += a[j]\n        sum2 += a[i]\n        i += 1\n        j -= 1\n        if sum1 > sum2:\n            print(yes)\n            return\n    print(no)\nyes = 'YES'\nno = 'NO'\nfor _ in range(int(input())):\n    solve()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    mid = (n + 1) // 2\n    if sum(a[:mid]) < sum(a[:-mid:-1]):\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    n = int(input())\n    li = sorted(list(map(int, input().split())))\n    print('YES' if len(li) % 2 and sum(li[len(li) // 2 + 1:]) > sum(li[:len(li) // 2 + 1]) and (len(li[len(li) // 2 + 1:]) < len(li[:len(li) // 2 + 1])) or (not len(li) % 2 and sum(li[len(li) // 2 + 1:]) > sum(li[:len(li) // 2]) and (len(li[len(li) // 2 + 1:]) < len(li[:len(li) // 2]))) or (len(li) % 2 and sum(li[len(li) // 2 + 2:]) > sum(li[:len(li) // 2 + 1]) and (len(li[len(li) // 2 + 2:]) < len(li[:len(li) // 2 + 1]))) else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = sorted(map(int, input().split(' ')))\n    if sum(l[:(n + 1) // 2]) < sum(l[-((n - 1) // 2):]):\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin\ninput = stdin.readline\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        nums = list(map(int, input().split()))\n        nums.sort()\n        r_sum = nums[n - 1]\n        b_sum = nums[0] + nums[1]\n        st = 2\n        en = n - 2\n        flag = 0\n        if r_sum > b_sum:\n            flag = 1\n        while st < en:\n            r_sum += nums[en]\n            b_sum += nums[st]\n            st += 1\n            en -= 1\n            if r_sum > b_sum:\n                flag = 1\n                break\n        print('YES' if flag == 1 else 'NO')\nmain()", "def sol(S):\n    (suml, sumr) = (S[0], 0)\n    for i in range(1, len(S) // 2, 1):\n        suml += S[i]\n        sumr += S[-i]\n        if suml < sumr:\n            return 'YES'\n    suml += S[len(S) // 2]\n    if len(S) % 2 == 1:\n        sumr += S[-len(S) // 2 + 1]\n    if suml < sumr:\n        return 'YES'\n    return 'NO'\nN = input()\nA = []\nfor i in range(int(N)):\n    n = int(input())\n    S = [int(s) for s in input().split(' ')]\n    A.append(sol(sorted(S)))\nfor a in A:\n    print(a)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    (s1, s2) = (a[0], 0)\n    for i in range(1, (n + 1) // 2 + 1):\n        s1 += a[i]\n        s2 += a[n - i]\n        if s1 < s2:\n            print('YES')\n            break\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    num = list(map(int, input().split()))\n    num.sort()\n    ok = False\n    blue = num[0]\n    red = 0\n    i = 1\n    j = n - 1\n    while i < j:\n        blue += num[i]\n        red += num[j]\n        if blue < red:\n            ok = True\n            break\n        i += 1\n        j -= 1\n    if ok:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\n\ndef fun(n, s):\n    s.sort()\n    if n % 2 == 1:\n        a = sum(s[0:n // 2 + 1])\n        b = sum(s) - a\n    else:\n        a = sum(s[0:n // 2])\n        b = sum(s[n // 2 + 1:n])\n    return (a, b)\nfor i in range(t):\n    n = int(input())\n    s = list(map(int, input().split()))\n    (x, y) = fun(n, s)\n    if y > x:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\n\ndef check(seq):\n    seq.sort()\n    i = 1\n    j = len(seq) - 1\n    sum_red = seq[j]\n    sum_blue = seq[0] + seq[1]\n    while i < j:\n        if sum_red > sum_blue:\n            return 'YES'\n        else:\n            j -= 1\n            i += 1\n            sum_red += seq[j]\n            sum_blue += seq[i]\n    return 'NO'\nfor i in range(n):\n    m = int(input())\n    seq = list(map(int, input().split()))\n    print(check(seq))", "tc = int(input())\nfor i in range(tc):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    (x, y) = (a[0], 0)\n    for i in range(1, n // 2 + n % 2):\n        x += a[i]\n        y += a[-i]\n        if x < y:\n            print('YES')\n            break\n    else:\n        print('NO')", "from math import ceil\n\ndef posible(l, n):\n    c = ceil(n / 2) - 1\n    r = sum(l[-c:])\n    for i in range(c + 1, n - c + 1):\n        b = sum(l[0:i])\n        if r > b or l[-1] > b:\n            return 'YES'\n    return 'NO'\nx = int(input())\nfor z in range(x):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    if n < 3:\n        print('NO')\n    else:\n        l.sort()\n        print(posible(l, n))", "TESTCASE = int(input())\n\ndef coloring(data: list):\n    data = sorted(data, reverse=True)\n    L = len(data)\n    left = (L - 1) // 2\n    right = L - left - 1\n    if sum(data[:left]) > sum(data[right:]):\n        return 'YES'\n    return 'NO'\nfor _ in range(TESTCASE):\n    input()\n    element = input().strip()\n    Data = list(map(lambda x: int(x), element.split(' ')))\n    print(coloring(Data))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    count = 0\n    if n % 2 == 0:\n        r = l[:int(n / 2) - 1]\n        b = l[int(n / 2) - 1:]\n        b.pop(0)\n    else:\n        r = l[:int((n + 1) / 2) - 1]\n        b = l[int((n + 1) / 2) - 1:]\n    if sum(r) > sum(b):\n        print('YES')\n    else:\n        print('NO')", "import math\nt = int(input())\n\ndef f(arr):\n    if n < 2:\n        return 'YES'\n    (left, right) = (arr[0] + arr[1], arr[-1])\n    for i in range(2, n // 2 + 1):\n        if right > left:\n            return 'YES'\n        (left, right) = (left + arr[i], right + arr[-i])\n    return 'YES' if right > left else 'NO'\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(f(a))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    sequences = list(map(int, input().split()))\n    sequences.sort()\n    red_tot = 0\n    blue_tot = sequences[0]\n    for j in range(1, n // 2 + 1):\n        blue_tot += sequences[j]\n        red_tot += sequences[-j]\n        if red_tot > blue_tot:\n            print('YES')\n            break\n    if red_tot <= blue_tot:\n        print('NO')", "import math\ntestCases = int(input())\nfor _ in range(testCases):\n    tamSequence = int(input())\n    sequence = list(map(int, input().split()))\n    divSequence = int(math.ceil(tamSequence / 2))\n    seqSorted = sorted(sequence, reverse=True)\n    sumBlue = sum(seqSorted[-divSequence:])\n    sumRed = sum(seqSorted[:divSequence - 1])\n    if sumRed > sumBlue:\n        print('YES')\n    else:\n        print('NO')", "def solve():\n    length = int(input())\n    numbers = list(map(int, input().split()))\n    numbers.sort()\n    counter = 1\n    redSum = 0\n    blueSum = numbers[0]\n    while counter <= length // 2:\n        redSum += numbers[length - counter]\n        blueSum += numbers[counter]\n        if redSum > blueSum:\n            print('YES')\n            return\n        counter += 1\n    print('NO')\ntests = int(input())\nwhile tests > 0:\n    tests -= 1\n    solve()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    mid = (n + 1) // 2\n    if sum(a[:mid]) < sum(a[:-mid:-1]):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if n % 2 == 1:\n        k = (n + 1) // 2\n        if sum(a[:k]) < sum(a[k:]):\n            print('YES')\n        else:\n            print('NO')\n    else:\n        k = (n + 2) // 2\n        if sum(a[:k - 1]) < sum(a[k:]):\n            print('YES')\n        else:\n            print('NO')", "def solution():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        nums = list(map(int, input().split()))\n        nums.sort()\n        (B, R) = (nums[0] + nums[1], nums[-1])\n        for i in range(2, len(nums) // 2 + 1):\n            (B, R) = (B + nums[i], R + nums[-i])\n            if B < R:\n                break\n        if B < R:\n            print('YES')\n        else:\n            print('NO')\nsolution()", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    if n % 2 == 0:\n        k = n // 2\n        if sum(arr[:k + 1]) < sum(arr[k:]):\n            print('YES')\n        else:\n            print('NO')\n    else:\n        k = n // 2 + 1\n        if sum(arr[:k]) < sum(arr[k:]):\n            print('YES')\n        else:\n            print('NO')", "def main(lst):\n    small = lst[0] + lst[1]\n    s = 1\n    large = lst[-1]\n    l = len(lst) - 1\n    while s < l:\n        if small < large:\n            return 'YES'\n        s += 1\n        small += lst[s]\n        l -= 1\n        large += lst[l]\n    return 'NO'\nno = int(input())\nfor i in range(no):\n    n = input()\n    lstt = input().split()\n    lstt = [int(num) for num in lstt]\n    lstt.sort()\n    print(main(lstt))", "def solve(length, llist):\n    llist.sort()\n    (l, r) = (1, length - 1)\n    large_sum = llist[0]\n    small_sum = 0\n    while l < r:\n        large_sum += llist[l]\n        small_sum += llist[r]\n        l += 1\n        r -= 1\n        if small_sum > large_sum:\n            print('YES')\n            return\n    print('NO')\nt = int(input())\nfor _ in range(t):\n    length = int(input())\n    inputta = input().split()\n    llist = list(map(int, inputta))\n    solve(length, llist)", "n = int(input())\n\ndef quality(n):\n    for i in range(n):\n        m = int(input())\n        if m < 3:\n            print('NO')\n            continue\n        arr = list(map(int, input().split()))\n        arr.sort()\n        (left, right) = (1, m - 1)\n        (sumR, sumG) = (arr[0], 0)\n        while left < right:\n            sumG += arr[right]\n            right -= 1\n            sumR += arr[left]\n            left += 1\n            if sumG > sumR:\n                break\n        if sumG > sumR:\n            print('YES')\n        else:\n            print('NO')\nquality(n)", "def YES():\n    print('YES')\n\ndef NO():\n    print('NO')\nTT = int(input())\nwhile TT:\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    a.sort()\n    fl = n % 2\n    l = n // 2 + fl\n    if sum(a[:l]) < sum(a[l + 1 - fl:]):\n        YES()\n    else:\n        NO()\n    TT -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if sum(a[:(n + 1) // 2]) < sum(a[n // 2 + 1:]):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    seq = [int(i) for i in input().split()]\n    seq.sort()\n    blue_sum = sum(seq[:(n - 1) // 2 + 1])\n    red_sum = sum(seq[n // 2 + 1:])\n    print('YES' if red_sum > blue_sum else 'NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    seq = [int(i) for i in input().split()]\n    seq.sort()\n    blue_sum = sum(seq[:(n - 1) // 2 + 1])\n    red_sum = sum(seq[n // 2 + 1:])\n    print('YES' if red_sum > blue_sum else 'NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    seq1 = [int(i) for i in input().split()]\n    seq1.sort()\n    blue_sum = sum(seq1[:(n - 1) // 2 + 1])\n    red_sum = sum(seq1[n // 2 + 1:])\n    print('YES' if red_sum > blue_sum else 'NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    seq = [int(i) for i in input().split()]\n    seq.sort()\n    blue_sum = sum(seq[:(n - 1) // 2 + 1])\n    red_sum = sum(seq[n // 2 + 1:])\n    print('YES' if red_sum > blue_sum else 'NO')", "ta = int(input())\nfor _ in range(ta):\n    n = int(input())\n    seq1 = [int(i) for i in input().split()]\n    seq1.sort()\n    blue_sum = sum(seq1[:(n - 1) // 2 + 1])\n    red_sum = sum(seq1[n // 2 + 1:])\n    print('YES' if red_sum > blue_sum else 'NO')", "a = int(input())\nfor _ in range(a):\n    n = int(input())\n    seq1 = [int(i) for i in input().split()]\n    seq1.sort()\n    blue_sum = sum(seq1[:(n - 1) // 2 + 1])\n    red_sum = sum(seq1[n // 2 + 1:])\n    print('YES' if red_sum > blue_sum else 'NO')", "b = int(input())\nfor _ in range(b):\n    m = int(input())\n    seq2 = [int(i) for i in input().split()]\n    seq2.sort()\n    blue_sum = sum(seq2[:(m - 1) // 2 + 1])\n    red_sum = sum(seq2[m // 2 + 1:])\n    print('YES' if red_sum > blue_sum else 'NO')", "b = int(input())\nfor _ in range(b):\n    n = int(input())\n    seq2 = [int(i) for i in input().split()]\n    seq2.sort()\n    blue_sum = sum(seq2[:(n - 1) // 2 + 1])\n    red_sum = sum(seq2[n // 2 + 1:])\n    print('YES' if red_sum > blue_sum else 'NO')", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    n = int(inp())\n    a = list(map(int, inp().split()))\n    a.sort(reverse=True)\n    r = 0\n    j = len(a) - 1\n    b = a[j]\n    j -= 1\n    for i in range(n):\n        r += a[i]\n        if i < j:\n            b += a[j]\n            j -= 1\n        else:\n            break\n        if r > b:\n            print('YES')\n            return\n    print('NO')\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "from collections import *\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    flag = 0\n    sum = l[0] + l[1]\n    count = l[n - 1]\n    i = 1\n    j = n - 1\n    while i < j:\n        if count > sum:\n            flag = 1\n            break\n        else:\n            i += 1\n            j -= 1\n            sum += l[i]\n            count += l[j]\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "def main():\n    input()\n    a = sorted(list(map(int, input().split())))\n    countB = 0\n    countR = 0\n    sumB = 0\n    sumR = 0\n    l = 0\n    r = len(a) - 1\n    for i in range(len(a) + 1):\n        if sumR <= sumB:\n            countR += 1\n            sumR += a[r]\n            r -= 1\n        elif countR >= countB:\n            countB += 1\n            sumB += a[l]\n            l += 1\n        else:\n            return 'YES'\n    return 'NO'\nt = int(input())\nfor _ in range(t):\n    print(main())", "import math\nfrom sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    a.sort()\n    if n & 1:\n        if sum(a[:(n >> 1) + 1]) >= sum(a[n // 2 + 1:]):\n            print('NO')\n        else:\n            print('YES')\n    elif sum(a[:n >> 1]) >= sum(a[n // 2 + 1:]):\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\n\ndef checksum(r):\n    sum_r = r[-1]\n    index_r = n - 1\n    sum_b = r[0] + r[1]\n    index_b = 1\n    while index_b < index_r:\n        if sum_r > sum_b:\n            print('YES')\n            return\n        else:\n            index_b += 1\n            sum_b += r[index_b]\n            index_r -= 1\n            sum_r += r[index_r]\n    print('NO')\nfor i in range(t):\n    n = int(input())\n    r = list(map(int, input().rstrip().split()))\n    r = sorted(r)\n    checksum(r)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    if n % 2 == 1 and sum(l[:n // 2]) > sum(l[n // 2:]):\n        print('YES')\n    elif n % 2 == 0 and sum(l[:n // 2 - 1]) > sum(l[n // 2:]):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    seq = [int(i) for i in input().split()]\n    seq.sort()\n    blue_sum = sum(seq[:(n - 1) // 2 + 1])\n    red_sum = sum(seq[n // 2 + 1:])\n    print('YES' if red_sum > blue_sum else 'NO')", "t = int(input())\nfor i in range(t):\n    sz = int(input())\n    l = list(map(int, input().split()))\n    ls = sorted(l)\n    p = 0\n    flag = 0\n    a = ls[0]\n    b = 0\n    for (x, y) in zip(ls[1:], reversed(ls)):\n        if x == y:\n            break\n        a = a + x\n        b = b + y\n        if a < b:\n            print('YES')\n            flag = 1\n            break\n    if flag == 0:\n        print('NO')", "import sys\n\ndef solution(n, nums):\n    nums.sort()\n    if n <= 2:\n        print('NO')\n        return\n    else:\n        red_sum = nums[-1]\n        blue_sum = nums[0] + nums[1]\n        index = 2\n        while blue_sum >= red_sum:\n            if index >= n - index:\n                print('NO')\n                return\n            else:\n                red_sum += nums[n - index]\n                blue_sum += nums[index]\n            index += 1\n        print('YES')\ninput = sys.stdin.read().splitlines()\nt = int(input[0])\noffset = 1\nfor test in range(t):\n    n = input[2 * test + offset]\n    nums = input[2 * test + offset + 1].split(' ')\n    nums = [int(e) for e in nums]\n    solution(int(n), nums)", "from sys import stdin\ninput = stdin.readline\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        nums = list(map(int, input().split()))\n        nums.sort()\n        r_sum = nums[n - 1]\n        b_sum = nums[0] + nums[1]\n        st = 2\n        en = n - 2\n        flag = 0\n        if r_sum > b_sum:\n            flag = 1\n        while st < en:\n            if r_sum > b_sum:\n                flag = 1\n                break\n            r_sum += nums[en]\n            b_sum += nums[st]\n            st += 1\n            en -= 1\n            if r_sum > b_sum:\n                flag = 1\n                break\n        print('YES' if flag == 1 else 'NO')\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    sum_blue = a[0] + a[1]\n    sum_red = a[-1]\n    it_blue = 2\n    it_red = len(a) - 2\n    while True:\n        if sum_blue < sum_red:\n            print('YES')\n            break\n        if it_blue >= it_red:\n            print('NO')\n            break\n        sum_blue += a[it_blue]\n        it_blue += 1\n        sum_red += a[it_red]\n        it_red -= 1"]