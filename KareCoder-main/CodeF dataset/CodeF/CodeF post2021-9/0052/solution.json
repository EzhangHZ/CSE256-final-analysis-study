["def read_single_num():\n    return int(input())\n\ndef read_nums():\n    return [int(x) for x in input().split()]\nt = read_single_num()\nfor i in range(t):\n    s = input()\n    keys = set()\n    nosol = 0\n    for ch in s:\n        if ch.isupper():\n            if ch.lower() not in keys:\n                nosol = 1\n        else:\n            keys.add(ch)\n    if not nosol:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t:\n    s = input()\n    keys = []\n    count = 0\n    for i in s:\n        if i == 'r' or i == 'g' or i == 'b':\n            keys.append(i)\n        if i == 'R' or i == 'G' or i == 'B':\n            if i.lower() in keys:\n                count += 1\n    if count == 3:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "t = int(input())\nfor i in range(t):\n    s = input()\n    dic = {'r': 0, 'g': 0, 'b': 0}\n    y = 0\n    for i in s:\n        if i == 'R':\n            if dic['r'] == 0:\n                y = 1\n        elif i == 'r':\n            dic['r'] = 1\n        if i == 'G':\n            if dic['g'] == 0:\n                y = 1\n        elif i == 'g':\n            dic['g'] = 1\n        if i == 'B':\n            if dic['b'] == 0:\n                y = 1\n        elif i == 'b':\n            dic['b'] = 1\n    if y == 0:\n        print('YES')\n    else:\n        print('NO')", "def can_open_all_doors(map):\n    hasRedDoorKey = False\n    hasGreenDoorKey = False\n    hasBlueDoorKey = False\n    for i in range(len(map)):\n        if map[i] == 'R' and hasRedDoorKey == False:\n            return 'NO'\n        elif map[i] == 'G' and hasGreenDoorKey == False:\n            return 'NO'\n        elif map[i] == 'B' and hasBlueDoorKey == False:\n            return 'NO'\n        elif map[i] == 'r':\n            hasRedDoorKey = True\n        elif map[i] == 'g':\n            hasGreenDoorKey = True\n        elif map[i] == 'b':\n            hasBlueDoorKey = True\n    return 'YES'\nt = int(input())\nfor i in range(t):\n    map = input()\n    print(can_open_all_doors(map))", "def solve(s):\n    k = []\n    for i in s:\n        if i in 'rgb':\n            k.append(i)\n        elif i.lower() not in k:\n            return False\n    return True\nfor _ in range(int(input())):\n    s = input()\n    if solve(s):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    s = input()\n    flag = True\n    red_key = False\n    green_key = False\n    blue_key = False\n    for ch in s:\n        if ch in ['r', 'g', 'b']:\n            if ch == 'r':\n                red_key = True\n            elif ch == 'g':\n                green_key = True\n            else:\n                blue_key = True\n        elif ch in ['R', 'G', 'B']:\n            if ch == 'R' and red_key == False or (ch == 'G' and green_key == False) or (ch == 'B' and blue_key == False):\n                flag = False\n                break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "testcases = int(input())\nfor i in range(testcases):\n    s = input()\n    (rkey, gkey, bkey) = (0, 0, 0)\n    (rdoor, bdoor, gdoor) = (0, 0, 0)\n    flag = 0\n    for i in range(len(s)):\n        if s[i] == 'r':\n            rkey = 1\n        elif s[i] == 'b':\n            bkey = 1\n        elif s[i] == 'g':\n            gkey = 1\n        elif s[i] == 'R' and rkey != 1:\n            flag = 1\n            break\n        elif s[i] == 'G' and gkey != 1:\n            flag = 1\n            break\n        elif s[i] == 'B' and bkey != 1:\n            flag = 1\n            break\n    if flag == 0:\n        print('YES')\n    else:\n        print('NO')", "def solve(h):\n    keys = []\n    for i in h:\n        if i.islower():\n            keys.append(i)\n        elif i.lower() in keys:\n            continue\n        else:\n            return 'NO'\n    return 'YES'\nfor i in range(int(input())):\n    h = input()\n    print(solve(h))", "t = int(input())\nfor _ in range(t):\n    s = input()\n    key = set()\n    cond = 1\n    for i in s:\n        if i == 'r' or i == 'b' or i == 'g':\n            key.add(i)\n        elif i.lower() in key:\n            continue\n        else:\n            cond = 0\n            break\n    if cond == 0:\n        print('NO')\n    else:\n        print('YES')", "for i in range(int(input())):\n    s = input()\n    if s.index('r') < s.index('R') and s.index('g') < s.index('G') and (s.index('b') < s.index('B')):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    s = input()\n    h = {'r': 0, 'g': 0, 'b': 0}\n    f = True\n    for i in s:\n        if i == 'R':\n            if h['r'] == 0:\n                print('NO')\n                f = False\n                break\n            else:\n                h['r'] -= 1\n        elif i == 'G':\n            if h['g'] == 0:\n                print('NO')\n                f = False\n                break\n            else:\n                h['g'] -= 1\n        elif i == 'B':\n            if h['b'] == 0:\n                print('NO')\n                f = False\n                break\n            else:\n                h['b'] -= 1\n        else:\n            h[i] += 1\n    if f:\n        print('YES')", "t = int(input())\ninstr = []\nfor i in range(t):\n    instr.append(input())\nfor i in instr:\n    a = ''\n    ans = 'YES'\n    for j in i:\n        if j.islower():\n            a += j\n        elif j.lower() not in a:\n            ans = 'NO'\n    print(ans)", "for i in range(int(input())):\n    input2 = input()\n    if input2.index('r') < input2.index('R') and input2.index('g') < input2.index('G') and (input2.index('b') < input2.index('B')):\n        print('YES')\n    else:\n        print('NO')", "def check(s):\n    e = []\n    k = 0\n    for i in s:\n        if i.islower():\n            e.append(i)\n        elif i.lower() in e:\n            k += 1\n    return k == 3\nfor _ in range(int(input())):\n    print('YES' if check(input()) else 'NO')", "for t in range(int(input())):\n    x = list(input())\n    lt = []\n    count = 0\n    if x[0] == 'R' or x[0] == 'G' or x[0] == 'B':\n        count = 1\n    elif x.index('R') < x.index('r') or x.index('G') < x.index('g') or x.index('B') < x.index('b'):\n        count = 1\n    if count == 1:\n        print('NO')\n    else:\n        print('YES')", "def doorsandkeys():\n    s1 = []\n    for i in s:\n        if i.islower():\n            s1.append(i)\n        elif i.isupper() and i.lower() not in s1:\n            return 'NO'\n    return 'YES'\nt = int(input())\nfor _ in range(t):\n    s = list(input())\n    print(doorsandkeys())", "for _ in range(int(input())):\n    passage = input()\n    check_keys = ['r', 'g', 'b']\n    keys = []\n    doors = []\n    flag = False\n    for i in passage:\n        if i in check_keys:\n            keys.append(i)\n        elif i.lower() not in keys:\n            flag = True\n            break\n    if flag:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    s = input()\n    p = s.index('r')\n    q = s.index('R')\n    r = s.index('g')\n    x = s.index('G')\n    y = s.index('b')\n    z = s.index('B')\n    if p < q and r < x and (y < z):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t != 0:\n    t = t - 1\n    store = []\n    c = 0\n    str1 = input()\n    for i in str1:\n        if i == 'R' or i == 'B' or i == 'G':\n            if i.lower() in store:\n                continue\n            else:\n                c = 1\n                print('NO')\n                break\n        else:\n            store.append(i)\n    if c == 0:\n        print('YES')", "x = input()\nt = int(x)\nfor _ in range(t):\n    k = input()\n    capR = k.index('R')\n    capG = k.index('G')\n    capB = k.index('B')\n    smlR = k.index('r')\n    smlG = k.index('g')\n    smlB = k.index('b')\n    count = 0\n    if smlR < capR:\n        if smlG < capG:\n            if smlB < capB:\n                print('YES')\n                count = 1\n    if count == 0:\n        print('NO')", "t = int(input(''))\nans = []\nfor i in range(t):\n    st = input('')\n    if st[0] != 'R' or st[0] != 'G' or st[0] != 'B':\n        if st.index('R') > st.index('r') and st.index('G') > st.index('g') and (st.index('B') > st.index('b')):\n            ans.append('YES')\n        else:\n            ans.append('NO')\n    else:\n        ans.append('NO')\nfor i in ans:\n    print(i)", "import sys\ninput = sys.stdin.readline\nfrom math import ceil, floor, gcd\n\ndef inp():\n    return int(input())\n\ndef lis():\n    return list(map(int, input().split()))\n\ndef ma():\n    return map(int, input().split())\n\ndef st():\n    return input().rstrip('\\n')\n\ndef isPrime(n):\n    if n == 1:\n        return 0\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            return 0\n    return 1\nt = inp()\nfor _ in range(t):\n    s = set()\n    a = st()\n    fl = 1\n    for i in a:\n        if i == 'r' or i == 'g' or i == 'b':\n            s.add(i)\n        elif chr(ord(i) + 32) in s:\n            pass\n        else:\n            fl = 0\n    if fl:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    s = input()\n    l = list(s)\n    r = l.index('r')\n    g = l.index('g')\n    b = l.index('b')\n    R = l.index('R')\n    G = l.index('G')\n    B = l.index('B')\n    if r > R or g > G or b > B:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    s = input()\n    l = list(s)\n    r = l.index('r')\n    g = l.index('g')\n    b = l.index('b')\n    R = l.index('R')\n    G = l.index('G')\n    B = l.index('B')\n    if r > R or g > G or b > B:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nwhile t != 0:\n    t = t - 1\n    keys = []\n    c = 0\n    str1 = input()\n    for i in str1:\n        if i == 'R' or i == 'B' or i == 'G':\n            if i.lower() in keys:\n                continue\n            else:\n                c = 1\n                print('NO')\n                break\n        else:\n            keys.append(i)\n    if c == 0:\n        print('YES')", "tc = int(input())\nfor i in range(tc):\n    s = input()\n    ar = [0, 0, 0]\n    l = len(s)\n    flag = 1\n    for j in range(l):\n        if s[j] == 'r':\n            ar[0] += 1\n        elif s[j] == 'g':\n            ar[1] += 1\n        elif s[j] == 'b':\n            ar[2] += 1\n        if s[j] == 'R':\n            if ar[0] == 0:\n                print('NO')\n                flag = 0\n                break\n        if s[j] == 'G':\n            if ar[1] == 0:\n                print('NO')\n                flag = 0\n                break\n        if s[j] == 'B':\n            if ar[2] == 0:\n                print('NO')\n                flag = 0\n                break\n    if flag == 1:\n        print('YES')", "for _ in range(int(input())):\n    s = input()\n    a = set()\n    cnt = 0\n    for i in range(len(s)):\n        if s[i] == 'R' and 'r' in a:\n            cnt += 1\n        elif s[i] == 'B' and 'b' in a:\n            cnt += 1\n        elif s[i] == 'G' and 'g' in a:\n            cnt += 1\n        else:\n            a.add(s[i])\n    if cnt == 3:\n        print('YES')\n    else:\n        print('NO')", "def func(S):\n    (r, g, b) = (False, False, False)\n    for i in S:\n        if i == 'r':\n            r = True\n        elif i == 'g':\n            g = True\n        elif i == 'b':\n            b = True\n        elif i == 'R':\n            if not r:\n                return 'NO'\n        elif i == 'G':\n            if not g:\n                return 'NO'\n        elif not b:\n            return 'NO'\n    return 'YES'\nfor t in range(int(input())):\n    S = input()\n    print(func(S))", "import math\nT = int(input())\nfor _ in range(T):\n    s = input()\n    n = len(s)\n    RK = 0\n    GK = 0\n    BK = 0\n    for i in range(n):\n        if s[i] == 'r':\n            for j in range(i, n):\n                if s[j] == 'R':\n                    RK += 1\n        if s[i] == 'g':\n            for j in range(i, n):\n                if s[j] == 'G':\n                    GK += 1\n        if s[i] == 'b':\n            for j in range(i, n):\n                if s[j] == 'B':\n                    BK += 1\n    if RK == GK and GK == BK and (GK == 1):\n        print('YES')\n    else:\n        print('NO')", "a = int(input())\nfor i in range(a):\n    b = input()\n    inv = []\n    for i in range(len(b)):\n        if b[i].islower():\n            inv.append(b[i])\n        if b[i].isupper() and b[i].lower() not in inv:\n            print('NO')\n            break\n    else:\n        print('YES')", "a = int(input())\nfor i in range(a):\n    s = input()\n    if s.index('r') < s.index('R') and s.index('g') < s.index('G') and (s.index('b') < s.index('B')):\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nfor i in range(n):\n    s = input()\n    if 'R' in s:\n        if 'r' in s[:s.index('R')]:\n            if 'B' in s:\n                if 'b' in s[:s.index('B')]:\n                    if 'G' in s:\n                        if 'g' in s[:s.index('G')]:\n                            print('YES')\n                        else:\n                            print('NO')\n                else:\n                    print('NO')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    s = input()\n    (r, g, b) = (False, False, False)\n    check = True\n    for i in s:\n        if i == 'R' and r == False:\n            check = False\n            break\n        if i == 'G' and g == False:\n            check = False\n            break\n        if i == 'B' and b == False:\n            check = False\n            break\n        if i == 'g':\n            g = True\n        if i == 'b':\n            b = True\n        if i == 'r':\n            r = True\n    if not check:\n        print('NO')\n    else:\n        print('YES')", "a = int(input())\nfor b in range(a):\n    c = list(input())\n    if c.index('r') < c.index('R') and c.index('g') < c.index('G') and (c.index('b') < c.index('B')):\n        print('YES')\n    else:\n        print('NO')", "a = int(input())\nfor i in range(a):\n    b = input()\n    if b.index('r') < b.index('R') and b.index('G') > b.index('g') and (b.index('b') < b.index('B')):\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    x = input()\n    l = []\n    for j in x:\n        if j in ['r', 'g', 'b']:\n            l.append(j)\n        elif chr(ord(j) + 32) in l:\n            m = True\n            continue\n        else:\n            m = False\n            break\n    if m:\n        print('YES')\n    else:\n        print('NO')", "class solution:\n\n    def __init__(self, s):\n        self.s = s\n        self.answer = ''\n\n    def calculation(self):\n        l = []\n        for i in self.s:\n            if i.upper() in l:\n                self.answer = 'NO'\n            else:\n                l.append(i)\n        if not self.answer:\n            self.answer = 'YES'\nt = int(input())\nfor _ in range(t):\n    s = input()\n    root = solution(s)\n    root.calculation()\n    print(root.answer)", "t = int(input())\nfor _ in range(t):\n    x = {'r': 0, 'g': 0, 'b': 0}\n    ans = 'YES'\n    s = input()\n    for i in s:\n        if i in ('R', 'G', 'B') and x[i.lower()] == 0:\n            ans = 'NO'\n            break\n        else:\n            x[i] = 1\n    print(ans)", "for i in range(int(input())):\n    s = input()\n    if s.index('b') < s.index('B') and s.index('g') < s.index('G') and (s.index('r') < s.index('R')):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    s = input()\n    count = 0\n    for x in 'RGB':\n        if x.lower() in s[:s.index(x)]:\n            count += 1\n    print('YNEOS'[count != 3::2])", "t = int(input())\nfor i in range(t):\n    L = input()\n    count = 0\n    for x in range(6):\n        if L[x] == 'r':\n            if 'R' in L[0:x]:\n                print('NO')\n                break\n            else:\n                count += 1\n        elif L[x] == 'g':\n            if 'G' in L[0:x]:\n                print('NO')\n                break\n            else:\n                count += 1\n        elif L[x] == 'b':\n            if 'B' in L[0:x]:\n                print('NO')\n                break\n            else:\n                count += 1\n        else:\n            count += 1\n    if count == 6:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    s = input()\n    r = False\n    g = False\n    b = False\n    for c in s:\n        if c == 'B':\n            if not b:\n                print('NO')\n                break\n        elif c == 'b':\n            b = True\n        elif c == 'G':\n            if not g:\n                print('NO')\n                break\n        elif c == 'g':\n            g = True\n        elif c == 'R':\n            if not r:\n                print('NO')\n                break\n        elif c == 'r':\n            r = True\n    else:\n        print('YES')", "n = int(input())\nfor _ in range(n):\n    s = input()\n    s = list(s)\n    r = 0\n    g = 0\n    b = 0\n    flag = True\n    for a in range(len(s)):\n        if s[a] == 'r':\n            r += 1\n        elif s[a] == 'g':\n            g += 1\n        elif s[a] == 'b':\n            b += 1\n        elif s[a] == 'R':\n            r -= 1\n            if r < 0:\n                flag = False\n                break\n        elif s[a] == 'G':\n            g -= 1\n            if g < 0:\n                flag = False\n                break\n        elif s[a] == 'B':\n            b -= 1\n            if b < 0:\n                flag = False\n                break\n        else:\n            continue\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(0, t):\n    str = input()\n    if str.index('r') < str.index('R') and str.index('b') < str.index('B') and (str.index('g') < str.index('G')):\n        print('YES')\n    else:\n        print('NO')", "z = []\nk = []\nf = 0\nu = int(input(''))\nfor i in range(u):\n    z.append(input(''))\nfor c in z:\n    for i in c:\n        if i == 'r' or i == 'g' or i == 'b':\n            k.append(i)\n        elif i == 'R':\n            if 'r' not in k:\n                print('NO')\n                f = 1\n                break\n        elif i == 'G':\n            if 'g' not in k:\n                print('NO')\n                f = 1\n                break\n        elif i == 'B':\n            if 'b' not in k:\n                print('NO')\n                f = 1\n                break\n    if f == 0:\n        print('YES')\n    k = []\n    f = 0", "for i in range(int(input())):\n    s = input()\n    l = ['r', 'g', 'b']\n    L = ['R', 'G', 'B']\n    for q in range(3):\n        if s.index(L[q]) < s.index(l[q]):\n            print('NO')\n            break\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    s = input()\n    have = set()\n    cancelled = False\n    for c in s:\n        have.add(c)\n        if c in ['R', 'G', 'B']:\n            if not c.lower() in have:\n                print('NO')\n                cancelled = True\n        if cancelled:\n            break\n    if not cancelled:\n        print('YES')", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_list_string():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\n\ndef get_print_int(x):\n    sys.stdout.write(str(x) + '\\n')\n\ndef get_print(x):\n    sys.stdout.write(x + '\\n')\n\ndef get_print_int_same(x):\n    sys.stdout.write(str(x) + ' ')\n\ndef get_print_same(x):\n    sys.stdout.write(x + ' ')\n\ndef solve():\n    for _ in range(get_int()):\n        s = get_string()\n        n = len(s)\n        (r, g, b) = (False, False, False)\n        ans = 'YES'\n        for i in range(n):\n            if s[i] == 'r':\n                r = True\n            elif s[i] == 'g':\n                g = True\n            elif s[i] == 'b':\n                b = True\n            elif s[i] == 'R' and (not r):\n                ans = 'NO'\n            elif s[i] == 'G' and (not g):\n                ans = 'No'\n            elif s[i] == 'B' and (not b):\n                ans = 'NO'\n        get_print(ans)\nsolve()", "t = int(input())\nfor i in range(t):\n    a = list(input())\n    r = a.index('r')\n    g = a.index('g')\n    b = a.index('b')\n    R = a.index('R')\n    G = a.index('G')\n    B = a.index('B')\n    if r < R and g < G and (b < B):\n        print('YES')\n    else:\n        print('NO')", "a = int(input())\nfor i in range(1, a + 1):\n    b = input()\n    if b.find('r') < b.find('R') and b.find('g') < b.find('G') and (b.find('b') < b.find('B')):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    s = input()\n    d = {'R': False, 'G': False, 'B': False}\n    chk = True\n    for i in range(len(s)):\n        if ord(s[i]) <= 90:\n            if d[s[i]] == False:\n                print('NO')\n                chk = False\n                break\n        else:\n            d[chr(ord(s[i]) - 32)] = True\n    if chk:\n        print('YES')", "testcases = 0\ntestcases = int(input())\nfor i in range(testcases):\n    inp = input()\n    l = []\n    answers = []\n    for i in range(len(inp)):\n        if inp[i].upper() == inp[i]:\n            if inp[i].lower() in l:\n                answers.append('YES')\n            else:\n                answers.append('NO')\n        if inp[i].lower() == inp[i]:\n            l.append(inp[i])\n    if not 'NO' in answers:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nfor i in range(n):\n    lst = input()\n    available_keys = []\n    for i in lst:\n        if i.islower():\n            available_keys.append(i)\n        elif i.lower() in available_keys:\n            continue\n        else:\n            print('NO')\n            break\n    else:\n        print('YES')", "n = int(input())\nfor i in range(n):\n    a = str(input())\n    r = a.index('r')\n    b = a.index('b')\n    g = a.index('g')\n    R = a.index('R')\n    B = a.index('B')\n    G = a.index('G')\n    if a[0] != 'R' or a[0] != 'G' or a[0] != 'B':\n        if r < R and b < B and (g < G):\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('No')", "t = int(input())\nfor i in range(t):\n    s = input()\n    rIndex = s.index('r')\n    gIndex = s.index('g')\n    bIndex = s.index('b')\n    RIndex = s.index('R')\n    GIndex = s.index('G')\n    BIndex = s.index('B')\n    if rIndex < RIndex and gIndex < GIndex and (bIndex < BIndex):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor test_case in range(t):\n    string = input()\n    r = 0\n    g = 0\n    b = 0\n    R = 0\n    G = 0\n    B = 0\n    ok = 1\n    for i in range(6):\n        if string[i] == 'r':\n            r = 1\n        elif string[i] == 'g':\n            g = 1\n        elif string[i] == 'b':\n            b = 1\n        elif string[i] == 'R':\n            if r == 0:\n                ok = 0\n                break\n            else:\n                continue\n        elif string[i] == 'G':\n            if g == 0:\n                ok = 0\n                break\n            else:\n                continue\n        elif string[i] == 'B':\n            if b == 0:\n                ok = 0\n                break\n            else:\n                continue\n    if ok == 0:\n        print('NO')\n    else:\n        print('YES')", "n = int(input())\nfor _ in range(n):\n    s = input()\n    store = set()\n    answ = 'YES'\n    for l in s:\n        if l.islower():\n            store.add(l)\n        elif l.lower() in store:\n            continue\n        else:\n            answ = 'NO'\n            break\n    print(answ)", "def solve():\n    s = input()\n    if s[0] == 'R' or s[0] == 'G' or s[0] == 'B':\n        print('NO')\n        return\n    else:\n        d = {}\n        for i in range(6):\n            d[s[i]] = i\n        for (i, k) in d.items():\n            if d['R'] < d['r'] or d['G'] < d['g'] or d['B'] < d['b']:\n                print('NO')\n                return\n        print('YES')\nfor _ in range(int(input())):\n    solve()", "n = int(input())\nfor i in range(n):\n    a = input()\n    red = []\n    gren = []\n    blue = []\n    brojac = 0\n    for j in range(len(a)):\n        if a[j] == 'r':\n            red.append('r')\n            brojac += 1\n        elif a[j] == 'b':\n            blue.append('b')\n            brojac += 1\n        elif a[j] == 'g':\n            gren.append('g')\n            brojac += 1\n        elif a[j] == 'R':\n            if len(red) > 0:\n                brojac += 1\n                red.pop()\n            elif len(red) == 0:\n                print('NO')\n                break\n        elif a[j] == 'G':\n            if len(gren) > 0:\n                brojac += 1\n                gren.pop()\n            elif len(gren) == 0:\n                print('NO')\n                break\n        elif a[j] == 'B':\n            if len(blue) > 0:\n                brojac += 1\n                blue.pop()\n            elif len(blue) == 0:\n                print('NO')\n                break\n    if brojac == len(a):\n        print('YES')", "t = int(input())\nfor i in range(t):\n    s = ''\n    s = input()\n    r = 0\n    g = 0\n    b = 0\n    R = 0\n    G = 0\n    B = 0\n    for j in range(6):\n        if s[j] == 'r':\n            r = j\n        elif s[j] == 'b':\n            b = j\n        elif s[j] == 'g':\n            g = j\n        elif s[j] == 'R':\n            R = j\n        elif s[j] == 'B':\n            B = j\n        elif s[j] == 'G':\n            G = j\n    if r < R and b < B and (g < G):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    s = input()\n    if s.index('R') > s.index('r') and s.index('B') > s.index('b') and (s.index('G') > s.index('g')):\n        print('YES')\n    else:\n        print('NO')", "import math\nfrom sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    a = list(input())\n    s = set()\n    key = 0\n    for i in range(len(a)):\n        if a[i] == 'r' or a[i] == 'g' or a[i] == 'b':\n            s.add(a[i])\n        else:\n            if a[i] == 'R':\n                c = 'r'\n            if a[i] == 'B':\n                c = 'b'\n            if a[i] == 'G':\n                c = 'g'\n            if c not in s:\n                key = 1\n                print('NO')\n                break\n    if key == 0:\n        print('YES')", "t = int(input())\nans = []\nfor i in range(t):\n    string = input()\n    list1 = list(string)\n    count = 0\n    doors = ['B', 'R', 'G']\n    keys = ['b', 'r', 'g']\n    for item in doors:\n        if list1.index(item) > list1.index(keys[doors.index(item)]):\n            count += 1\n        else:\n            count += 0\n    if count == 3:\n        ans.append('YES')\n    else:\n        ans.append('NO')\nfor item in ans:\n    print(item)", "n = int(input())\narr = []\nwhile n:\n    s = input()\n    arr.append(s)\n    n -= 1\n\ndef p(s):\n    map = {}\n    for char in s:\n        if char in 'rgb':\n            map[char] = True\n        elif char == 'B' and 'b' not in map:\n            return 'NO'\n        elif char == 'R' and 'r' not in map:\n            return 'NO'\n        elif char == 'G' and 'g' not in map:\n            return 'NO'\n    return 'YES'\nfor a in arr:\n    print(p(a))", "t = int(input())\nwhile t > 0:\n    s = str(input())\n    if s.find('g') < s.find('G') and s.find('r') < s.find('R') and (s.find('b') < s.find('B')):\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "n = int(input())\nwhile n > 0:\n    n -= 1\n    t = input()\n    d = {'r': 0, 'g': 0, 'b': 0}\n    f = 1\n    s1 = 'rgb'\n    s2 = 'RGB'\n    cnt = 0\n    for i in t:\n        if i in s1:\n            d[i] += 1\n        elif i in s2 and d[i.lower()] == 0:\n            f = 0\n            break\n        else:\n            cnt += 1\n        if cnt == 3:\n            break\n    if f == 0:\n        print('NO')\n    else:\n        print('YES')", "test = int(input())\nfor t in range(test):\n    str = input()\n    max = 3\n    (red, green, blue) = (0, 0, 0)\n    for j in str:\n        if j == 'r':\n            red += 1\n        elif j == 'g':\n            green += 1\n        elif j == 'b':\n            blue += 1\n        elif j == 'R':\n            red -= 1\n        elif j == 'G':\n            green -= 1\n        else:\n            blue -= 1\n        max = min(max, red, green, blue)\n    if max < 0:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    s = input()\n    if s.find('r') > s.find('R') or s.find('b') > s.find('B') or s.find('g') > s.find('G'):\n        print('NO')\n    else:\n        print('YES')", "ans = ''\nfor _ in range(int(input())):\n    s = input()\n    if s.index('r') < s.index('R') and s.index('g') < s.index('G') and (s.index('b') < s.index('B')):\n        ans += 'YES\\n'\n    else:\n        ans += 'NO\\n'\nprint(ans)", "for i in range(int(input())):\n    s = list(input())\n    c = 0\n    for i in s:\n        if i.isupper():\n            if s.index(i) < s.index(i.lower()):\n                pass\n            else:\n                c += 1\n    if c == 3:\n        print('YES')\n    else:\n        print('NO')", "test = int(input())\nfor i in range(test):\n    samp = input()\n    for j in range(6):\n        if samp[j] in ['r', 'g', 'b']:\n            ind = samp.index(samp[j])\n            alt = samp.index(samp[j].upper())\n            if ind > alt:\n                print('NO')\n                break\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    inp = input()\n    x = inp.index('R')\n    y = inp.index('G')\n    z = inp.index('B')\n    if x == 0 or y == 0 or z == 0:\n        print('NO')\n    elif 'r' in inp[:x] and 'g' in inp[:y] and ('b' in inp[:z]):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    s = input()\n    (R, B, G) = (0, 0, 0)\n    (r, b, g) = (0, 0, 0)\n    flag = 0\n    for i in s:\n        if i == 'r':\n            r = 1\n        elif i == 'b':\n            b = 1\n        elif i == 'g':\n            g = 1\n        if i == 'R':\n            if r == 0:\n                print('NO')\n                flag = 1\n                break\n        if i == 'G':\n            if g == 0:\n                print('NO')\n                flag = 1\n                break\n        if i == 'B':\n            if b == 0:\n                print('NO')\n                flag = 1\n                break\n    if not flag:\n        print('YES')", "t = int(input())\nl = []\nfor i in range(t):\n    s = input()\n    key = ''\n    for j in s:\n        if j in 'rgb':\n            key += j\n        if j in 'RGB':\n            if j.lower() not in key:\n                l += ['NO']\n                break\n    else:\n        l += ['YES']\nfor k in l:\n    print(k)", "for i in range(int(input())):\n    a = input()\n    print('YES') if a.index('r') < a.index('R') and a.index('g') < a.index('G') and (a.index('b') < a.index('B')) else print('NO')", "t = int(input())\nfor _ in range(t):\n    _input = str(input())\n    keys = []\n    flag = True\n    for i in _input:\n        if i.islower():\n            keys.append(i)\n        elif i.isupper():\n            if i.lower() not in keys:\n                print('NO')\n                flag = False\n                break\n    if flag:\n        print('YES')", "for i in range(int(input())):\n    s = input()\n    if s.index('R') > s.index('r') and s.index('G') > s.index('g') and (s.index('B') > s.index('b')):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    s = input()\n    keys = dict()\n    keys['r'] = 0\n    keys['g'] = 0\n    keys['b'] = 0\n    boo = True\n    for ch in s:\n        if ch.islower():\n            keys[ch] += 1\n        elif keys[ch.lower()] == 0:\n            boo = False\n            print('NO')\n            break\n    if boo:\n        print('YES')", "t = int(input())\nres = []\nfor i in range(t):\n    x = input()\n    l = []\n    l[:] = x\n    if l.index('r') < l.index('R'):\n        if l.index('g') < l.index('G'):\n            if l.index('b') < l.index('B'):\n                res.append('YES')\n            else:\n                res.append('NO')\n        else:\n            res.append('NO')\n    else:\n        res.append('NO')\nfor i in res:\n    print(i)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    k = []\n    v = True\n    for i in s:\n        if i == 'B' or i == 'G' or i == 'R':\n            if i.lower() not in k:\n                print('NO')\n                v = False\n                break\n        else:\n            k.append(i)\n    if v:\n        print('YES')", "for _ in range(int(input())):\n    a = input()\n    (key, door) = ('', '')\n    c = 0\n    for i in a:\n        if i.isupper():\n            if i.lower() in key:\n                c += 1\n        if i.isupper():\n            door += i\n        else:\n            key += i\n    if c == 3:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    k = input()\n    if k.index('r') <= k.index('R') and k.index('g') <= k.index('G') and (k.index('b') <= k.index('B')):\n        print('YES')\n    else:\n        print('NO')", "import sys\n\ndef rs():\n    return sys.stdin.readline().rstrip()\n\ndef ri():\n    return int(sys.stdin.readline())\n\ndef ws(s):\n    sys.stdout.write(s + '\\n')\n\ndef main():\n    s = rs()\n    r = 0\n    g = 0\n    b = 0\n    flg = 1\n    for i in s:\n        if i == 'r':\n            r = 1\n        elif i == 'g':\n            g = 1\n        elif i == 'b':\n            b = 1\n        elif i == 'R' and r == 0:\n            flg = 0\n            break\n        elif i == 'G' and g == 0:\n            flg = 0\n            break\n        elif i == 'B' and b == 0:\n            flg = 0\n            break\n    if flg:\n        ws('YES')\n    else:\n        ws('NO')\nt = ri()\nfor tc in range(1, t + 1):\n    main()", "import math\nfor _ in range(int(input())):\n    s = input()\n    b = [0, 0, 0]\n    for i in s:\n        if i == 'r':\n            if b[0] != -1:\n                b[0] = 1\n        elif i == 'g':\n            if b[1] != -1:\n                b[1] = 1\n        elif i == 'b':\n            if b[2] != -1:\n                b[2] = 1\n        elif i == 'R' and b[0] == 0:\n            b[0] = -1\n        elif i == 'G' and b[1] == 0:\n            b[1] = -1\n        elif i == 'B' and b[2] == 0:\n            b[2] = -1\n    if sum(b) == 3:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    s = input()\n    l = []\n    f = 1\n    for i in s:\n        if ord(i) > 96:\n            l.append(i)\n        elif chr(ord(i) + 32) not in l:\n            print('NO')\n            f = 0\n            break\n    if f:\n        print('YES')", "n = int(input())\nfor i in range(n):\n    s = input()\n    if s.index('r') < s.index('R') and s.index('g') < s.index('G') and (s.index('b') < s.index('B')):\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    x = input()\n    c = []\n    s = []\n    f = True\n    for j in x:\n        if j.islower():\n            s.append(j)\n        elif not j.lower() in s:\n            f = False\n            break\n    print('YES') if f else print('NO')", "def solve(sequence):\n    doors = []\n    for i in sequence:\n        if i == 'r' or i == 'g' or i == 'b':\n            doors.append(i)\n        if i == 'R' or i == 'G' or i == 'B':\n            check = chr(ord(i) + 32)\n            if check not in doors:\n                return 'NO'\n    else:\n        return 'YES'\nn = int(input())\nfor i in range(n):\n    print(solve(input()))", "def medo():\n    collected = []\n    for i in a:\n        if i.islower():\n            collected.append(i)\n        elif i.isupper() and i.lower() not in collected:\n            return 'NO'\n    return 'YES'\nfor _ in range(int(input())):\n    a = list(input())\n    print(medo())", "t = int(input())\nfor i in range(t):\n    s = input()\n    x = []\n    f = 0\n    for k in s:\n        if k == 'R' and 'r' in x:\n            x.remove('r')\n        elif k == 'B' and 'b' in x:\n            x.remove('b')\n        elif k == 'G' and 'g' in x:\n            x.remove('g')\n        elif k == 'R' or k == 'G' or k == 'B':\n            print('NO')\n            f = 1\n            break\n        else:\n            x.append(k)\n    if f == 0:\n        print('YES')", "t = int(input())\nwhile t:\n    a = input()\n    h = 0\n    s1 = -1\n    s2 = -1\n    s3 = -1\n    s4 = -1\n    s5 = -1\n    s6 = -1\n    for i in range(len(a)):\n        if a[i] == 'r':\n            s1 = i\n        elif a[i] == 'R':\n            s2 = i\n        elif a[i] == 'g':\n            s3 = i\n        elif a[i] == 'G':\n            s4 = i\n        elif a[i] == 'b':\n            s5 = i\n        else:\n            s6 = i\n    if s1 < s2 and s3 < s4 and (s5 < s6):\n        print('YES')\n    else:\n        print('NO')\n    t = t - 1", "t = int(input())\nfor z in range(t):\n    s = input()\n    l = []\n    c = 0\n    for i in s:\n        if i == 'r' or i == 'g' or i == 'b':\n            l.append(i)\n        elif i.lower() in l:\n            c = c + 1\n        else:\n            print('NO')\n            break\n    if c == 3:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    s = input()\n    a = s.index('r')\n    a1 = s.index('R')\n    c = s.index('g')\n    c1 = s.index('G')\n    d = s.index('b')\n    d1 = s.index('B')\n    if a1 > a and c1 > c and (d1 > d):\n        print('YES')\n    else:\n        print('NO')", "def doors_k(st):\n    key_l = ['r', 'g', 'b']\n    for item in key_l:\n        if st.index(item) > st.index(item.upper()):\n            return 'NO'\n    return 'YES'\nt = int(input())\nfor _ in range(0, t):\n    st = input()\n    response = doors_k(st)\n    print(f'{response}')", "a = int(input())\nfor i in range(a):\n    s = input()\n    answer = False\n    if s.index('r') < s.index('R'):\n        if s.index('g') < s.index('G'):\n            if s.index('b') < s.index('B'):\n                answer = True\n    if answer == True:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    k = input()\n    if k.index('r') < k.index('R') and k.index('b') < k.index('B') and (k.index('g') < k.index('G')):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    s = input()\n    rk = s.index('r')\n    rd = s.index('R')\n    bk = s.index('b')\n    bd = s.index('B')\n    gk = s.index('g')\n    gd = s.index('G')\n    if rk < rd and bk < bd and (gk < gd):\n        print('YES')\n    else:\n        print('NO')"]