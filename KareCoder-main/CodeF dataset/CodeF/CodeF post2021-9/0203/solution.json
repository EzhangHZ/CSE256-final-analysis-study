["import sys\ninput = lambda : sys.stdin.readline().rstrip()\nT = int(input())\nres = []\nfor _ in range(T):\n    (day1, day2) = map(int, input().split())\n    (need, firstadd) = map(int, input().split())\n    if need < firstadd:\n        if day1 < day2:\n            res.append(day1 * need)\n        else:\n            res.append(day2 * need)\n    elif firstadd * day1 < (firstadd + 1) * day2:\n        fv = need // (firstadd + 1) * (firstadd * day1)\n        f = need // (firstadd + 1) * (firstadd + 1)\n        if day1 < day2:\n            res.append(fv + (need - f) * day1)\n        else:\n            res.append(fv + day2 * (need - f))\n    else:\n        res.append(day2 * need)\nprint('\\n'.join(map(str, res)))", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    if m >= n:\n        print(min(n * a, n * b))\n    elif a * m >= b * (m + 1):\n        print(n * b)\n    else:\n        k = n // (m + 1)\n        r = n % (m + 1)\n        print(k * m * a + r * min(a, b))\nt = int(input())\nfor _ in range(t):\n    solve()", "import sys, math, cmath, time\nfrom bisect import bisect_left\nstart_time = time.time()\n\ndef solve():\n    (a, b) = map(int, inps())\n    (n, m) = map(int, inps())\n    if a <= b:\n        k = n // (m + 1) * m\n        print(k * a + (n - k - n // (m + 1)) * a)\n        return\n    if b - (a - b) * m > 0:\n        k = n // (m + 1) * m\n        left = n - k - n // (m + 1)\n        print(k * a + left * b)\n        return\n    else:\n        print(n * b)\n\ndef main():\n    testcases = 1\n    testcases = inp()\n    for each_testcase in range(testcases):\n        solve()\n\ndef inp():\n    return int(input())\n\ndef inps():\n    return input().split()\nONLINE_JUDGE = __debug__\nif ONLINE_JUDGE:\n    input = sys.stdin.readline\nmain()", "import sys\nsys_input = sys.stdin.readline\nsys_print = sys.stdout.write\n\ndef testcase():\n    (a, b) = map(int, sys_input().split())\n    (n, m) = map(int, sys_input().split())\n    n_group = n // (m + 1)\n    ng = n_group * (m + 1)\n    pg = n_group * m * a\n    first = min(pg + a * (n - ng), (ng + 1) * a * m)\n    second = pg + b * (n - ng)\n    third = n * b\n    print(min(first, second, third))\nt = int(sys_input())\nfor _ in range(t):\n    testcase()", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    (a, b) = map(int, inp().split())\n    (n, m) = map(int, inp().split())\n    u = n * b\n    v = (n // (m + 1) * m + n % (m + 1)) * a\n    w = n // (m + 1) * m * a + n % (m + 1) * b\n    print(min(u, v, w))\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    (d1, d2) = (0, 0)\n    d2 = n * b\n    if n >= m:\n        val = n // (m + 1)\n        rem = n - val * (m + 1)\n        print(min(min(a * val * m + b * rem, b * n), a * val * m + a * rem))\n    else:\n        print(min(n * a, n * b))", "def solve(a, b, n, m):\n    res = 0\n    if n > m and a * m < b * (m + 1):\n        z = n // (m + 1)\n        n -= z * (m + 1)\n        res += z * m * a\n    res += min(a, b) * n\n    return res\nt = int(input())\nans = []\nfor ti in range(t):\n    (a, b) = [int(x) for x in input().split()]\n    (n, m) = [int(x) for x in input().split()]\n    ans.append(solve(a, b, n, m))\nfor a in ans:\n    print(a)", "import sys\nimport math\ninp = [a.strip() for a in sys.stdin.readlines()]\nt = int(inp[0])\nline = 0\nfor case in range(0, t):\n    line += 1\n    (a, b) = [int(x) for x in inp[line].split()]\n    line += 1\n    (n, m) = [int(x) for x in inp[line].split()]\n    promos = math.floor(n / (m + 1))\n    left = n - promos * (m + 1)\n    case1 = promos * a * m + a * left\n    case2 = promos * a * m + b * left\n    case3 = b * n\n    print(min(case1, case2, case3))", "import sys\nfrom collections import Counter\nfrom collections import defaultdict\ninput = lambda : sys.stdin.readline().rstrip()\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    ans = 0\n    promo_time = int(n // (m + 1))\n    remain = n - (m + 1) * promo_time\n    if a <= b and n > m:\n        ans += a * promo_time * m + a * remain\n    if a <= b and n <= m:\n        ans += a * n\n    if a > b and n <= m:\n        ans += b * n\n    if a > b and n > m:\n        if a * m >= b * (m + 1):\n            ans += b * n\n        else:\n            ans += a * m * promo_time + b * remain\n    print(ans)", "t = int(input())\notps = []\nfor i in range(t):\n    (a, b) = (int(s) for s in input().split(' '))\n    (n, m) = (int(s) for s in input().split(' '))\n    if b > a:\n        otps.append((n // (m + 1) * m + n % (m + 1)) * a)\n    elif m * a < (m + 1) * b:\n        otps.append(n // (m + 1) * m * a + n % (m + 1) * b)\n    else:\n        otps.append(n * b)\nfor i in range(t):\n    print(otps[i])", "tests = int(input())\nres = []\nfor test in range(tests):\n    (a, b) = [int(x) for x in input().split()]\n    (n, m) = [int(x) for x in input().split()]\n    q = n // (m + 1)\n    r = n - q * (m + 1)\n    coins = int(q * min(a * m, b * (m + 1)) + r * min(a, b))\n    res.append(coins)\nfor i in res:\n    print(i)", "def no_of_coins(a, b, n, m):\n    if (m + 1) * b < m * a:\n        return n * b\n    elif a > b:\n        return a * m * (n // (m + 1)) + b * (n % (m + 1))\n    else:\n        return a * m * (n // (m + 1)) + a * (n % (m + 1))\nn = int(input())\nl = []\nfor i in range(n):\n    temp1 = input()\n    temp2 = input()\n    (a, b) = map(int, temp1.split())\n    (n, m) = map(int, temp2.split())\n    l.append(no_of_coins(a, b, n, m))\nfor j in range(0, len(l)):\n    print(l[j])", "t = int(input())\nans = []\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    s = min((n // (m + 1) * m + n % (m + 1)) * a, n // (m + 1) * m * a + n % (m + 1) * b, n * b)\n    ans.append(s)\nprint(*ans, sep='\\n')", "import sys\nfrom os import path\n\ndef input():\n    return sys.stdin.readline().strip()\n\ndef main():\n    testcases = int(input())\n    for _ in range(testcases):\n        (prix_1, prix_2) = str(input()).split()\n        (besoin, promo) = str(input()).split()\n        prix_1 = int(prix_1)\n        prix_2 = int(prix_2)\n        besoin = int(besoin)\n        promo = int(promo)\n        cout = 0\n        nb_patates_bonus = promo + 1\n        nb_utilisations_bonus = besoin // nb_patates_bonus\n        reste = besoin % nb_patates_bonus\n        cout = min(nb_utilisations_bonus * (promo * prix_1) + reste * min(prix_1, prix_2), besoin * min(prix_1, prix_2))\n        print(cout)\n\ndef is_clean(tower):\n    i = 0\n    while i < len(tower):\n        if tower[i] == last:\n            return False\n        last = tower[i]\n        i += 1\n    return True\nif path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\nmain()", "import sys\n\ndef main():\n    try:\n        sys.stdin = open('input.txt', 'r')\n    except:\n        pass\n    T = int(sys.stdin.readline().strip())\n    while T > 0:\n        (a, b) = [int(x) for x in sys.stdin.readline().strip().split(' ')]\n        (n, m) = [int(x) for x in sys.stdin.readline().strip().split(' ')]\n        x = int(n / (m + 1)) * a * m + min(n % (m + 1) * a, n % (m + 1) * b)\n        y = n * b\n        print(min(x, y), end='\\n')\n        T -= 1\nmain()", "import sys\ninput = sys.stdin.readline\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    if n <= m:\n        print(min(a, b) * n)\n    elif a * m >= b * (m + 1):\n        print(n * b)\n    else:\n        x = n // (m + 1)\n        s = x * a * m\n        if n - (m + 1) * x != 0:\n            t = n - (m + 1) * x\n            s += min(a, b) * t\n        print(s)", "t = int(input())\nresult = []\nfor i in range(1, t + 1, 1):\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    sum = 0\n    if a <= b:\n        if n <= m:\n            sum = n * a\n        else:\n            k = int((n - n % (m + 1)) / (m + 1))\n            sum = (n - k) * a\n    elif n <= m:\n        sum = n * b\n    else:\n        k = int((n - n % (m + 1)) / (m + 1))\n        sum1 = m * k * a + (n - m * k - k) * b\n        sum2 = n * b\n        if sum1 <= sum2:\n            sum = sum1\n        else:\n            sum = sum2\n    result.append(sum)\nfor i in range(0, t, 1):\n    print(result[i])", "k = int(input())\nx = []\nfor i in range(k):\n    s = input().split()\n    a = int(s[0])\n    b = int(s[1])\n    l = input().split()\n    n = int(l[0])\n    m = int(l[1])\n    if a <= b:\n        if m < n:\n            z = n // (m + 1) * a * m + n % (m + 1) * a\n        else:\n            z = a * n\n    elif m < n:\n        if m * a < (m + 1) * b:\n            z = n // (m + 1) * a * m + n % (m + 1) * b\n        else:\n            z = b * n\n    else:\n        z = b * n\n    x.append(z)\nfor i in range(k):\n    print(x[i])", "n = int(input())\nl = []\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    cos = 0\n    if a < b:\n        c = a\n    else:\n        c = b\n    if n < m:\n        l.append(n * c)\n        continue\n    else:\n        if m * a <= b * (m + 1):\n            x = m + 1\n            o = n // x\n            o1 = n % x\n            cos += a * o * m + o1 * c\n        else:\n            cos += n * c\n        l.append(cos)\nfor i in l:\n    print(i)", "t = int(input())\nans = []\nfor i in range(t):\n    (a, b) = list(map(int, input().split()))\n    (n, m) = list(map(int, input().split()))\n    a1 = a * (n // (m + 1)) * m + (a if a < b else b) * (n % (m + 1))\n    a2 = n * (a if a < b else b)\n    ans.append(min(a1, a2))\nfor i in ans:\n    print(i)", "n = int(input())\nfprice = []\nsprice = []\nneed = []\nsales = []\nfor i in range(n):\n    (fkg, skg) = list(map(int, input().split()))\n    (npotato, sale) = list(map(int, input().split()))\n    fprice.append(fkg)\n    sprice.append(skg)\n    need.append(npotato)\n    sales.append(sale)\nfor i in range(n):\n    fkg = fprice[i]\n    skg = sprice[i]\n    nkg = need[i]\n    sale = sales[i]\n    if sale >= nkg:\n        print(min(fkg * nkg, skg * nkg))\n        continue\n    if sale * fkg >= (sale + 1) * skg:\n        print(skg * nkg)\n        continue\n    ans = nkg // (sale + 1) * sale * fkg\n    nkg -= (sale + 1) * (nkg // (sale + 1))\n    if fkg > skg:\n        ans += nkg * skg\n    else:\n        ans += nkg * fkg\n    print(ans)", "import sys\nT = int(sys.stdin.readline())\nfor i in range(T):\n    (a, b) = map(int, sys.stdin.readline().split())\n    (n, m) = map(int, sys.stdin.readline().split())\n    if n < m:\n        print(min(a * n, b * n))\n    elif n == m:\n        print(min(a * n, b * n))\n    else:\n        one = a * m * (n // (m + 1)) + a * (n % (m + 1))\n        two = a * m * (n // (m + 1)) + b * (n % (m + 1))\n        three = b * n\n        print(min(one, two, three))", "t = int(input())\noutput = []\nfor i in range(t):\n    lst = list(map(int, input().split()))\n    a = lst[0]\n    b = lst[1]\n    lst2 = list(map(int, input().split()))\n    n = lst2[0]\n    m = lst2[1]\n    if m + 1 <= n:\n        if a * m <= b * (m + 1):\n            if a < b:\n                cost = a * m * (n // (m + 1)) + a * (n - (m + 1) * (n // (m + 1)))\n            else:\n                cost = a * m * (n // (m + 1)) + b * (n - (m + 1) * (n // (m + 1)))\n        else:\n            cost = b * n\n    else:\n        cost = min(a * n, b * n)\n    output.append(cost)\nfor i in range(t):\n    print(output[i])", "import sys\n\ndef read(func=int):\n    return func(sys.stdin.readline().strip())\n\ndef read_array(func=int):\n    return list(map(func, read(str).split()))\nt = read()\nfor _ in range(t):\n    (a, b) = read_array()\n    (n, m) = read_array()\n    ans = 0\n    while n:\n        if n > m:\n            vx = n // (m + 1)\n            p1 = a * m * vx\n            p2 = b * (m + 1) * vx\n            ans += min(p1, p2)\n            n -= (m + 1) * vx\n        else:\n            p1 = a * n\n            p2 = b * n\n            ans += min(p1, p2)\n            n = 0\n    print(ans)", "t = input('')\noutput = ''\nfor _ in range(int(t)):\n    (a, b) = [int(x) for x in input().split(' ')]\n    (n, m) = [int(x) for x in input().split(' ')]\n    res = min(n // (m + 1) * m * a + min(n % (m + 1) * a, n % (m + 1) * b), n * b)\n    output += str(res) + '\\n'\nprint(output[:len(output) - 1])", "k = int(input())\nres = []\nwhile k > 0:\n    x = input().split(' ')\n    (a, b) = (int(x[0]), int(x[1]))\n    x = input().split(' ')\n    (n, m) = (int(x[0]), int(x[1]))\n    cur = 0\n    target = n\n    times = int(n / (m + 1))\n    cur += a * times * m\n    n -= (m + 1) * times\n    cur += min(n * a, n * b)\n    res.append(min(cur, target * a, target * b))\n    k -= 1\nfor x in res:\n    print(x)", "t = int(input())\nans = []\nfor _ in range(t):\n    (a, b) = list(map(int, input().split()))\n    (n, m) = list(map(int, input().split()))\n    if n < m + 1:\n        ans.append(n * min(a, b))\n    elif a * m > b * (m + 1):\n        ans.append(n * b)\n    else:\n        kol = n // (m + 1)\n        kg = kol * m + kol\n        ans.append(kol * m * a + min(a, b) * (n - kg))\nprint(*ans, sep='\\n')", "def calc(a, b, n, m):\n    if n >= m:\n        payed = n // (m + 1) * (a * m) + n % (m + 1) * min(b, a)\n    else:\n        payed = n * min(a, b)\n    return min(payed, n * b)\nl = []\nn = int(input())\nfor i in range(n):\n    prices = list(map(int, input().split()))\n    kilos = list(map(int, input().split()))\n    (a, b) = (prices[0], prices[1])\n    (n, m) = (kilos[0], kilos[1])\n    l.append(calc(a, b, n, m))\nfor i in l:\n    print(i)", "n = int(input())\nprices = []\nkilos = []\nfor _ in range(n):\n    (a, b) = list(map(int, input().split()))\n    prices.append([a, b])\n    (n, m) = list(map(int, input().split()))\n    kilos.append([n, m])\nfor i in range(len(prices)):\n    (a, b) = prices[i]\n    (n, m) = kilos[i]\n    if m >= n:\n        print(min(a, b) * n)\n    else:\n        (div, mod) = divmod(n, m + 1)\n        print(min(div * a * m + mod * min(a, b), n * min(a, b)))", "import math\nimport string\nimport random\nimport sys\nfrom random import randrange\nfrom collections import deque\nfrom collections import defaultdict\nfrom bisect import bisect, bisect_right, bisect_left\n\ndef data():\n    return sys.stdin.readline().strip()\n\ndef mdata():\n    return list(map(int, data().split()))\n\ndef outl(var):\n    sys.stdout.write(' '.join(map(str, var)) + '\\n')\n\ndef out(var):\n    sys.stdout.write(str(var) + '\\n')\nt = int(data())\nwhile t > 0:\n    t -= 1\n    (p1, p2) = mdata()\n    (n, m) = mdata()\n    day2_p = n * p2\n    day1_p = n // (m + 1) * m * p1 + n % (m + 1) * min(p1, p2)\n    print(min(day1_p, day2_p))", "def pri(a, b, n, m):\n    h = n // (m + 1)\n    punda = min(a, b) * n\n    if h == 0:\n        print(punda)\n    else:\n        print(min(punda, a * h * m + (n - h * (m + 1)) * min(a, b)))\nt = int(input())\nl = []\nfor i in range(t):\n    l1 = [int(x) for x in input().split(' ', 1)]\n    l2 = [int(x) for x in input().split(' ', 1)]\n    l.append([l1, l2])\nfor i in l:\n    pri(i[0][0], i[0][1], i[1][0], i[1][1])", "a = int(input())\nb = []\nc = []\nfor i in range(a):\n    x = input()\n    split = x.split(' ')\n    for i in range(len(split)):\n        split[i] = int(split[i])\n    b.append(split)\n    x = input()\n    split = x.split(' ')\n    for i in range(len(split)):\n        split[i] = int(split[i])\n    c.append(split)\nfor i in range(a):\n    if c[i][0] <= c[i][1]:\n        print(c[i][0] * min(b[i][0], b[i][1]))\n    else:\n        n = int(c[i][0] / (c[i][1] + 1))\n        if b[i][0] * c[i][1] < b[i][1] * (c[i][1] + 1):\n            print(n * b[i][0] * c[i][1] + (c[i][0] - n * (c[i][1] + 1)) * min(b[i][0], b[i][1]))\n        else:\n            print(c[i][0] * min(b[i][0], b[i][1]))", "def main():\n    t = int(input())\n    for _ in range(t):\n        res = alg()\n        print(res)\n\ndef alg():\n    (a, b) = input().split()\n    (n, m) = input().split()\n    a = int(a)\n    b = int(b)\n    n = int(n)\n    m = int(m)\n    res = 0\n    r = n % (m + 1)\n    q = n // (m + 1)\n    res = min(q * m * a, q * (m + 1) * b)\n    res += min(r * a, r * b)\n    return res\nmain()", "t = int(input())\nfor nouse in range(t):\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    ans = 0\n    if (m + 1) * b >= a * m:\n        tmp = n // (m + 1)\n        n -= tmp * (m + 1)\n        ans += tmp * a * m\n    if a >= b:\n        ans += n * b\n    else:\n        ans += n * a\n    print(ans)", "I = input\nfor _ in [0] * int(I()):\n    (a, b, n, m) = map(int, (I() + ' ' + I()).split())\n    k = m + 1\n    print(n // k * min(a * m, b * k) + n % k * min(a, b))", "t = int(input())\n\ndef mincoin(a, b, n, m):\n    if a >= b:\n        if a * m - b * (m + 1) >= 0:\n            i = 0\n            a2 = i * (a * m - b * (m + 1)) + b * n\n        else:\n            i = n // (m + 1)\n            a2 = i * (a * m - b * (m + 1)) + b * n\n    else:\n        a2 = a * (m * (n // (m + 1))) + a * (n % (m + 1))\n    print(a2)\nfor i in range(t):\n    (a, b) = input().split()\n    (n, m) = input().split()\n    a = int(a)\n    b = int(b)\n    m = int(m)\n    n = int(n)\n    mincoin(a, b, n, m)", "I = input\nfor _ in [0] * int(I()):\n    (a, b, n, m) = map(int, (I() + ' ' + I()).split())\n    k = m + 1\n    print(n // k * min(a * m, b * k) + n % k * min(a, b))", "t = int(input().strip())\nfor test in range(t):\n    (a, b) = map(int, input().strip().split())\n    (n, m) = map(int, input().strip().split())\n    c1 = n // (m + 1)\n    c2 = n % (m + 1)\n    ans1 = c1 * a * m + c2 * a\n    ans2 = n * b\n    ans3 = c1 * a * m + c2 * b\n    print(min(ans1, ans2, ans3))", "def solve():\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    if m >= n:\n        print(min(a, b) * n)\n    elif a <= b:\n        tot = n\n        ans = 0\n        k = n // (m + 1)\n        ans += a * k * m\n        tot -= k * (m + 1)\n        ans += a * tot\n        print(ans)\n    elif a * m <= b * (m + 1):\n        tot = n\n        ans = 0\n        k = n // (m + 1)\n        ans += a * k * m\n        tot -= k * (m + 1)\n        ans += b * tot\n        print(ans)\n    else:\n        print(b * n)\nt = int(input())\nfor _ in range(t):\n    solve()", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    res = int(1e+20)\n    if a <= b:\n        res = min(res, n // (m + 1) * m * a + n % (m + 1) * a)\n    else:\n        res = min(res, n // (m + 1) * m * a + n % (m + 1) * b, n * b)\n    print(res)", "iter = int(input())\nfor _ in range(iter):\n    (a, b) = list(map(int, input().split(' ')))\n    (n, m) = list(map(int, input().split(' ')))\n    if a <= b:\n        print(a * m * (n // (m + 1)) + a * (n % (m + 1)))\n    elif a * m <= b * (m + 1):\n        print(a * m * (n // (m + 1)) + b * (n % (m + 1)))\n    else:\n        print(b * n)", "def exe():\n    if m >= n:\n        x = min(a, b)\n        return n * x\n    else:\n        x = m * a\n        y = (m + 1) * b\n        if x < y:\n            z = n // (m + 1)\n            x = x * z\n            j = n % (m + 1)\n            u = min(a, b) * j\n            return x + u\n        else:\n            return min(a, b) * n\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    print(exe())", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    if b * (m + 1) > a * m:\n        print(n // (m + 1) * m * a + n % (m + 1) * min(a, b))\n    else:\n        print(n * min(a, b))", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    if a <= b:\n        print(a * (n - n // (m + 1)))\n    elif a * m < b * (m + 1):\n        print(a * (m * (n // (m + 1))) + b * (n % (m + 1)))\n    else:\n        print(b * n)", "for _ in range(int(input())):\n    (xx, yy) = list(map(int, input().split()))\n    (tr, ui) = list(map(int, input().split()))\n    ans = yy * tr\n    ans_2 = xx * (tr // (ui + 1)) * ui\n    ans_2 += min((tr % (ui + 1) * xx, tr % (ui + 1) * yy))\n    otp = min(ans_2, ans)\n    print(otp)", "def solution(a, b, n, m):\n    if a <= b:\n        if n - 1 >= m:\n            return n // (m + 1) * m * a + (n - n // (m + 1) * (m + 1)) * a\n        return n * a\n    if n - 1 < m:\n        return n * b\n    return min(n // (m + 1) * m * a + (n - n // (m + 1) * (m + 1)) * b, n * b)\nt = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    print(solution(a, b, n, m))", "def main():\n    n = int(input())\n    ans = []\n    for i in range(n):\n        (a, b) = list(map(int, input().split()))\n        (n, m) = list(map(int, input().split()))\n        if a < b:\n            p = (n // (m + 1) * m + n % (m + 1)) * a\n            print(p)\n            continue\n        if m * a > b * (m + 1):\n            p = b * n\n            print(p)\n            continue\n        p = n // (m + 1) * m * a + n % (m + 1) * b\n        print(p)\nmain()", "for _ in range(int(input())):\n    (first, second) = map(int, input().split(' '))\n    (n, m) = map(int, input().split(' '))\n    cost = 0\n    while n > 0:\n        if n > m and m * first < second * (m + 1):\n            cost += n // (m + 1) * m * first\n            n = n % (m + 1)\n        else:\n            cost += n * min(first, second)\n            n = 0\n    print(cost)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    if m > n:\n        print(min(n * a, n * b))\n    else:\n        k = n // (m + 1)\n        r = n % (m + 1)\n        print(min(b * n, k * m * a + r * min(a, b)))", "t = int(input())\nfor _ in range(t):\n    (a, b) = tuple(map(int, input().split()))\n    (n, m) = tuple(map(int, input().split()))\n    if a < b:\n        x = n // (m + 1)\n        print((n - x) * a)\n    elif m * a < (m + 1) * b:\n        x = n // (m + 1)\n        print(x * m * a + (n - x * (m + 1)) * b)\n    else:\n        print(n * b)", "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    (x, y) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    if m >= n:\n        print(min(x, y) * n)\n    else:\n        ele = m + 1\n        ans = 0\n        q = n // ele\n        rem = n % ele\n        ans += q * x * m\n        ans += rem * min(x, y)\n        print(min(ans, n * y))", "T = int(input())\nfor t in range(0, T):\n    (a, b) = map(int, input().split(' '))\n    (n, m) = map(int, input().split(' '))\n    abs = 0\n    if m >= n:\n        ans = min(a * n, b * n)\n    else:\n        x = n // (m + 1)\n        y = n % (m + 1)\n        val = min(m * a, (m + 1) * b)\n        ans = x * val\n        ans += y * min(a, b)\n    print(ans)", "t = int(input())\nwhile t:\n    (a, b) = [int(x) for x in input().split()]\n    (n, m) = [int(x) for x in input().split()]\n    d = n // (m + 1)\n    p = d * m * a + (n - d * (m + 1)) * min(a, b)\n    p_2 = n * min(a, b)\n    print(min(p, p_2))\n    t -= 1", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    ans = 0\n    if n < m:\n        ans = min(a * n, b * n)\n    else:\n        temp1 = b * (m + 1)\n        temp2 = a * m\n        if temp2 < temp1:\n            rem = n // (m + 1)\n            ans += rem * temp2\n            n = n % (m + 1)\n            ans += n * min(a, b)\n        else:\n            ans = b * n\n    print(ans)", "k = int(input())\nfor _ in range(k):\n    p = [int(x) for x in input().split()]\n    (n, m) = [int(x) for x in input().split()]\n    print(min(p[1] * n, p[0] * m * (n // (m + 1)) + n % (m + 1) * p[0], p[0] * m * (n // (m + 1)) + n % (m + 1) * p[1]))", "t = int(input())\nfor _ in range(t):\n    x = input().split(' ')\n    (a, b) = (int(x[0]), int(x[1]))\n    y = input().split(' ')\n    (n, m) = (int(y[0]), int(y[1]))\n    coins = 0\n    if m > n:\n        if a > b:\n            coins += b * n\n        else:\n            coins += a * n\n    else:\n        offer = m + 1\n        div = n // offer\n        coins += a * div * m\n        left = n - div * offer\n        if a > b:\n            coins += left * b\n        else:\n            coins += left * a\n    withoutOffer = b * n\n    print(min(coins, withoutOffer))", "for _ in range(int(input())):\n    (a, b) = list(map(int, input().split()))\n    (n, m) = list(map(int, input().split()))\n    res = 0\n    if b > a:\n        res = a * m * (n // (m + 1)) + a * (n % (m + 1))\n    elif a * m < b * (m + 1):\n        res = a * m * (n // (m + 1)) + b * (n % (m + 1))\n    else:\n        res = b * n\n    print(res)", "t = int(input())\nfor _ in range(t):\n    (d1, d2) = list(map(int, input().split()))\n    (required, promotion) = list(map(int, input().split()))\n    normal = min(d1, d2) * required\n    greed = required // (promotion + 1) * (promotion * d1) + required % (promotion + 1) * min(d1, d2)\n    print(min(normal, greed))", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    (m, n) = map(int, input().split())\n    f = b * m\n    c = 0\n    d = n + 1\n    e = m % d\n    g = m // d\n    c = c + g * a * n\n    if e != 0:\n        c = c + e * min(a, b)\n    ans = min(c, f)\n    print(ans)", "times = int(input())\nprice = 0\nneed = 0\ndayone = 0\ndaytwo = 0\nn = 0\nm = 0\ntotal = 0\nfor i in range(times):\n    price = input().split()\n    need = input().split()\n    dayone = int(price[0])\n    daytwo = int(price[1])\n    n = int(need[0])\n    m = int(need[1])\n    if n >= m + 1:\n        total = min(m * dayone * (n // (m + 1)) + min(dayone, daytwo) * (n % (m + 1)), n * min(dayone, daytwo))\n    else:\n        total = n * min(dayone, daytwo)\n    print(total)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    temp = n // (m + 1)\n    t = temp * a * m\n    rem = n % (m + 1)\n    if rem != 0:\n        t += min(rem * a, rem * b)\n    print(min(n * a, n * b, t))", "t = int(input())\nfor z in range(t):\n    amt = 0\n    tempamt = 0\n    (a, b) = [int(x) for x in input().split()]\n    (n, m) = [int(x) for x in input().split()]\n    if n <= m:\n        if a <= b:\n            amt = a * n\n        else:\n            amt += b * n\n    elif n > m:\n        x = n // (m + 1)\n        amt += a * m * x\n        n -= (m + 1) * x\n        tempamt += b * (m + 1) * x\n        if amt > tempamt:\n            amt = tempamt\n        if n > 0:\n            if a > b:\n                amt += b * n\n            else:\n                amt += a * n\n    print(amt)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    if m < n:\n        x = n // (m + 1)\n        p = x * m * a + (n - x * m - x) * min(a, b)\n        p = min(p, n * min(a, b))\n    else:\n        p = n * min(a, b)\n    print(p)", "t = int(input())\nfor i in range(t):\n    (a, b) = input().split()\n    (n, m) = input().split()\n    a = int(a)\n    b = int(b)\n    n = int(n)\n    m = int(m)\n    diff = a - b\n    if m >= n:\n        print(n * min(a, b))\n    elif a <= b:\n        print(n // (m + 1) * a * m + a * (n % (m + 1)))\n    elif m * diff <= b:\n        print(a * (n // (m + 1)) * m + b * (n % (m + 1)))\n    else:\n        print(n * b)", "def f(a, b, n, m):\n    alp = n // (m + 1)\n    alp_co = alp * m\n    beta = n - alp * (m + 1)\n    if b >= a:\n        c = a * (alp_co + beta)\n    elif a > b:\n        slope = a * m - b * (m + 1)\n        if slope < 0:\n            c = alp * slope + b * n\n        else:\n            c = b * n\n    print(c)\nfor i in range(int(input())):\n    inp1 = list(map(int, input().split(' ')))\n    a = inp1[0]\n    b = inp1[1]\n    inp2 = list(map(int, input().split(' ')))\n    n = inp2[0]\n    m = inp2[1]\n    f(a, b, n, m)", "from math import *\nfor z in range(int(input())):\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    t = n // (m + 1)\n    print(min(b * n, a * (t * m) + min(a, b) * (n - t * (m + 1))))", "import math\n\ndef solve():\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    z1 = n // (m + 1)\n    if a < b:\n        n1 = n - n // (m + 1)\n        return a * n1\n    if (a - b) * m - b > 0:\n        return b * n\n    n1 = z1 * m\n    n2 = n - (n1 + z1)\n    cost = n1 * a + n2 * b\n    return cost\nT = int(input())\nfor t in range(T):\n    print(solve())", "import sys\nsys.setrecursionlimit(10 ** 9)\nfor i in range(int(input())):\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    if l1[0] > l1[1]:\n        if l2[0] <= l2[1]:\n            print(l1[1] * l2[0])\n        else:\n            print(min(l1[1] * (l2[0] - l2[0] % (l2[1] + 1)), l1[0] * (l2[0] // (l2[1] + 1) * l2[1])) + l1[1] * (l2[0] % (l2[1] + 1)))\n    else:\n        print(l1[0] * (l2[0] // (l2[1] + 1) * l2[1] + l2[0] % (l2[1] + 1)))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    q = n % (m + 1)\n    p = n // (m + 1)\n    ans = min(a * m, b * (m + 1)) * p + min(a, b) * q\n    print(ans)", "test = int(input())\nfor t in range(test):\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    d1 = n // (m + 1) * a * m + n % (m + 1) * a\n    d2 = b * n\n    s = n // (m + 1) * m * a + n % (m + 1) * b\n    if n <= m:\n        print(min(a * n, b * n))\n    else:\n        print(min(s, min(d1, d2)))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    if (x := (m * a)) < min(a, b) * (m + 1):\n        print(x * (n // (m + 1)) + min(x, n % (m + 1) * min(a, b)))\n    else:\n        print(min(a, b) * n)", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    ans = 0\n    if a <= b:\n        print((n // (m + 1) * m + n % (m + 1)) * a)\n    elif m * a < (m + 1) * b:\n        ans = n // (m + 1) * a * m\n        n = n % (m + 1)\n        ans = ans + n * b\n        print(ans)\n    else:\n        print(n * b)", "def solver(day_1, day_2, potatoes, promo):\n    cost = 0\n    bag = 0\n    result = 0\n    day_2_total_cost = day_2 * potatoes\n    day_1_total_cost = day_1 * potatoes\n    if day_2_total_cost < day_1_total_cost:\n        result = day_2_total_cost\n    else:\n        result = day_1_total_cost\n    discount = promo + 1\n    bag = potatoes // discount * promo\n    leftover = potatoes % discount\n    cost += day_1 * bag\n    if day_1 < day_2:\n        cost += day_1 * leftover\n    else:\n        cost += day_2 * leftover\n    if cost < result:\n        return cost\n    else:\n        return result\nnumTest = int(input())\nfor test in range(numTest):\n    prices = input().split()\n    day_1 = int(prices[0])\n    day_2 = int(prices[-1])\n    amount = input().split()\n    potatoes = int(amount[0])\n    promo = int(amount[-1])\n    print(solver(day_1, day_2, potatoes, promo))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    q = n // (m + 1)\n    r = n - q * (m + 1)\n    print(q * min(a * m, b * (m + 1)) + r * min(a, b))", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    print(min(n // (m + 1) * m * a + n % (m + 1) * b, n // (m + 1) * m * a + n % (m + 1) * a, n * b, n * a))", "def main(args):\n\n    def solution():\n        n = int(input())\n        for i in range(n):\n            price = [int(x) for x in input().split()]\n            (a, b) = (price[0], price[1])\n            amount = [int(x) for x in input().split()]\n            (n, m) = (amount[0], amount[1])\n            d1 = n // (m + 1)\n            d2 = n - d1 * (m + 1)\n            print(min(b * n, d1 * a * m + d2 * b, d1 * a * m + d2 * a))\n    solution()\nimport sys\nsys.exit(main(sys.argv))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    if a <= b:\n        print(n // (m + 1) * a * m + n % (m + 1) * a)\n    elif a * m <= b * (m + 1):\n        print(n // (m + 1) * a * m + n % (m + 1) * b)\n    else:\n        print(n // m * b * m + n % m * b)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    if a <= b:\n        print(n // (m + 1) * a * m + n % (m + 1) * a)\n    elif a * m <= b * (m + 1):\n        print(n // (m + 1) * a * m + n % (m + 1) * b)\n    else:\n        print(n * b)", "t = int(input())\nfor z in range(t):\n    (a, b) = [int(x) for x in input().split()]\n    (n, m) = [int(x) for x in input().split()]\n    if m >= n:\n        if a >= b:\n            print(b * n)\n        else:\n            print(a * n)\n    else:\n        if a * m < b * (m + 1):\n            ans = n // (m + 1) * a * m + n % (m + 1) * min(a, b)\n        else:\n            ans = min(a, b) * n\n        print(ans)", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split(' '))\n    (n, m) = map(int, input().split(' '))\n    q = int(n / (m + 1))\n    r = n - q * (m + 1)\n    print(q * min(a * m, b * (m + 1)) + r * min(a, b))", "nb = int(input())\nfor i in range(nb):\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    q = n // (m + 1)\n    r = n - q * (m + 1)\n    print(q * min(a * m, b * (m + 1)) + r * min(a, b))", "T = int(input())\nfor _ in range(T):\n    (A, B) = map(int, input().split())\n    (n, M) = map(int, input().split())\n    prom = A * M\n    nonprom = B * (M + 1)\n    if prom < nonprom:\n        ans = n // (M + 1) * A * M\n        if A < B:\n            ans += n % (M + 1) * A\n        else:\n            ans += n % (M + 1) * B\n    else:\n        ans = n * B\n    print(ans)", "_ = int(input())\nfor i in range(_):\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    p1 = n // (m + 1) * a * m + min(a, b) * (n % (m + 1))\n    p2 = n * b\n    print(min(p1, p2))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    print(n // (m + 1) * min(a * m, b * (m + 1)) + n % (m + 1) * min(a, b))", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    q = n // (m + 1)\n    r = n - q * (m + 1)\n    print(q * min(a * m, b * (m + 1)) + r * min(a, b))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    if n <= m:\n        print(n * min(a, b))\n    elif m * a <= (m + 1) * b:\n        kilo1 = n // (m + 1)\n        kilo2 = n % (m + 1)\n        total = kilo1 * a * m\n        total += kilo2 * min(a, b)\n        print(total)\n    else:\n        print(n * b)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split(' '))\n    (n, m) = map(int, input().split(' '))\n    print(min(n // (m + 1) * m * a + n % (m + 1) * min(a, b), n * b))", "t = int(input())\nfor i in range(t):\n    (a, b) = [int(i) for i in input().split()]\n    (n, m) = [int(i) for i in input().split()]\n    minp = min(a, b)\n    day1 = n // (m + 1) * m\n    print(min(day1 * a + n % (m + 1) * minp, n * minp))", "testCount = input()\nfor i in range(int(testCount)):\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    price = 0\n    if a <= b:\n        (curNa_pre, curNa_comm) = divmod(n, m + 1)\n        curNa_pre *= m\n        price = (curNa_comm + curNa_pre) * a\n    elif a > b:\n        if n <= m:\n            price = n * b\n        elif n > m:\n            if m * a // (m + 1) < b:\n                (curNa, curNb) = divmod(n, m + 1)\n                curNa *= m\n                price = curNa * a + curNb * b\n            else:\n                price = n * b\n    print(price)", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split(' '))\n    (n, m) = map(int, input().split(' '))\n    q = n // (m + 1)\n    r = n - q * (m + 1)\n    print(q * min(a * m, b * (m + 1)) + r * min(a, b))", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split(' '))\n    (n, m) = map(int, input().split(' '))\n    if n <= m:\n        print(min(n * a, n * b))\n    else:\n        x1 = m * a\n        x2 = (m + 1) * b\n        if x1 < x2:\n            count = n // (m + 1)\n            pricePromotion = count * m * a\n            left = n % (m + 1)\n            leftPrice = min(left * a, left * b)\n            print(leftPrice + pricePromotion)\n        else:\n            print(min(n * a, n * b))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    x = m * (n // (m + 1)) * a + n % (m + 1) * min(a, b)\n    y = b * n\n    print(min(x, y))", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split(' '))\n    (n, m) = map(int, input().split(' '))\n    q = n // (m + 1)\n    r = n - q * (m + 1)\n    print(q * min(a * m, b * (m + 1)) + r * min(a, b))", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    (n, m) = map(int, input().split())\n    print(n // (m + 1) * min(a * m, b * m + b) + (n - n // (m + 1) * (m + 1)) * min(a, b))\n    print()", "it = int(input())\nfor i in range(it):\n    L1 = [int(x) for x in input().split()]\n    a = L1[0]\n    b = L1[1]\n    L2 = [int(x) for x in input().split()]\n    n = L2[0]\n    m = L2[1]\n    if m >= n:\n        ans = min(a, b) * n\n    elif a < b:\n        ans = (m * (n // (m + 1)) + n % (m + 1)) * a\n    elif b * (m + 1) <= a * m:\n        ans = b * n\n    else:\n        ans = a * m * (n // (m + 1)) + n % (m + 1) * b\n    print(ans)", "it = int(input())\nfor i in range(it):\n    L1 = [int(x) for x in input().split()]\n    a = L1[0]\n    b = L1[1]\n    L2 = [int(x) for x in input().split()]\n    n = L2[0]\n    m = L2[1]\n    if m >= n:\n        ans = min(a, b) * n\n    elif a < b:\n        ans = (m * (n // (m + 1)) + n % (m + 1)) * a\n    elif b * (m + 1) <= a * m:\n        ans = b * n\n    else:\n        ans = a * m * (n // (m + 1)) + n % (m + 1) * b\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split(' '))\n    (n, m) = map(int, input().split(' '))\n    q = n // (m + 1)\n    r = n - q * (m + 1)\n    print(q * min(a * m, b * (m + 1)) + r * min(a, b))", "def solve():\n    t = int(input())\n    while t:\n        t -= 1\n        (a, b) = [int(x) for x in input().split()]\n        (n, m) = [int(x) for x in input().split()]\n        if n <= m:\n            result = min(n * a, n * b)\n        else:\n            divi = int(n / (m + 1))\n            modu = n % (m + 1)\n            result = min(m * divi * a + modu * a, m * divi * a + modu * b, n * b)\n        print(result)\nsolve()", "for _ in range(int(input())):\n    (a, b) = [int(i) for i in input().split()]\n    (n, m) = [int(i) for i in input().split()]\n    print(min(a * m * (n // (m + 1)) + n % (m + 1) * a, min(n * b, a * m * (n // (m + 1)) + n % (m + 1) * b)))"]