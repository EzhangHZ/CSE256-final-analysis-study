["import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(map(int, input().split()))\n    if k == 1:\n        print('Yes')\n    elif s[1] - s[0] < s[0] / (n - k + 1):\n        print('No')\n    else:\n        for i in range(1, k - 1):\n            if s[i] - s[i - 1] > s[i + 1] - s[i]:\n                print('No')\n                break\n        else:\n            print('Yes')", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(map(int, input().split()))\n    if k == 1:\n        print('Yes')\n        continue\n    if s[1] - s[0] < s[0] / (n - k + 1):\n        print('No')\n        continue\n    for i in range(1, k - 1):\n        if s[i] - s[i - 1] > s[i + 1] - s[i]:\n            print('No')\n            break\n    else:\n        print('Yes')", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    r = True\n    (n, k) = map(int, input().split())\n    sums = list(map(int, input().split()))\n    if k == 1:\n        print('Yes')\n        continue\n    ss = []\n    for x in range(k - 1):\n        ss.append(sums[x + 1] - sums[x])\n    for x in range(len(ss) - 1):\n        if ss[x] > ss[x + 1]:\n            r = False\n            break\n    mi = ss[0]\n    if r:\n        if sums[0] <= (n - k + 1) * ss[0]:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('No')", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    (n, k) = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    b = []\n    f = 1\n    if k == 1:\n        print('Yes')\n        continue\n    for i in range(1, k):\n        b.append(a[i] - a[i - 1])\n        if i > 1 and b[-2] > b[-1]:\n            f = 0\n            break\n    if b[0] < a[0] / (n - k + 1):\n        f = 0\n    if f:\n        print('Yes')\n    else:\n        print('No')", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    (n, k) = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    b = []\n    f = 1\n    if k == 1:\n        print('Yes')\n        continue\n    for i in range(1, k):\n        b.append(a[i] - a[i - 1])\n        if i > 1 and b[-2] > b[-1]:\n            f = 0\n            break\n    if b[0] < a[0] / (n - k + 1):\n        f = 0\n    if f:\n        print('Yes')\n    else:\n        print('No')", "import sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_iarray():\n    return [int(i) for i in sys.stdin.readline().strip().split()]\n\ndef solve(n, k, tots):\n    mi = 1 << 31\n    for i in range(k - 1):\n        if tots[k - i - 1] - tots[k - i - 2] > mi:\n            return False\n        mi = tots[k - i - 1] - tots[k - i - 2]\n    return (n - k + 1) * mi >= tots[0]\nt = read_int()\nfor _ in range(t):\n    (n, k) = read_iarray()\n    tots = read_iarray()\n    print('Yes' if solve(n, k, tots) else 'No')", "import sys\nreadline = sys.stdin.readline\nINF = 1 << 60\nT = int(readline())\nfor _ in range(T):\n    (N, K) = map(int, readline().split())\n    S = list(map(int, readline().split()))[::-1]\n    A = INF\n    for i in range(1, K):\n        tmp = S[i - 1] - S[i]\n        if A >= tmp:\n            A = tmp\n        else:\n            print('No')\n            break\n    else:\n        s = S[-1]\n        num = N - (K - 1)\n        tmp = (s + num - 1) // num\n        if tmp <= A:\n            print('Yes')\n        else:\n            print('No')", "import sys\ninput = sys.stdin.readline\n\ndef is_sorted(l):\n    return all((a <= b for (a, b) in zip(l, l[1:])))\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    ans = [-float('inf')] * n\n    i = n - 1\n    cond = False\n    prev = float('inf')\n    x = k - 1\n    while x > 0:\n        ans[i] = lst[x] - lst[x - 1]\n        prev = ans[i]\n        i -= 1\n        x -= 1\n    if i == 0:\n        ans[0] = lst[0]\n    if prev == float('inf'):\n        print('Yes')\n        continue\n    if is_sorted(ans[i:]) == False:\n        print('No')\n        continue\n    if prev * (i + 1) < lst[x]:\n        print('No')\n    else:\n        print('Yes')", "import sys\ninput = sys.stdin.readline\nimport math\n\ndef solve():\n    (n, k) = map(int, input().split())\n    first = -1000000000.0\n    arr = list(map(int, input().split()))\n    first = int(math.ceil(arr[0] / (n - k + 1)))\n    d = [first]\n    d += [arr[i + 1] - arr[i] for i in range(k - 1)]\n    for i in range(k - 1):\n        if d[i] > d[i + 1]:\n            return 'No'\n    return 'Yes'\nfor _ in range(int(input())):\n    print(solve())", "def get_numbers_list(string_list):\n    string_split_list = string_list.split()\n    number_list = []\n    for element in string_split_list:\n        number_list.append(int(element))\n    return number_list\n\ndef check(number_list, n, k):\n    last_number = number_list[k - 1] - number_list[k - 2]\n    for i in range(k - 2, 0, -1):\n        val = number_list[i] - number_list[i - 1]\n        if val > last_number:\n            print('No')\n            return\n        else:\n            last_number = val\n    min_val = number_list[0] / (n - k + 1)\n    if min_val > last_number:\n        print('No')\n    else:\n        print('Yes')\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        pair = input().split()\n        n = int(pair[0])\n        k = int(pair[1])\n        string_list = input()\n        if k == 1:\n            print('Yes')\n            continue\n        number_list = get_numbers_list(string_list)\n        check(number_list, n, k)\nmain()", "t = int(input())\nfor z in range(t):\n    l0 = input().split()\n    (n, k) = (int(l0[0]), int(l0[1]))\n    l = input().split()\n    l1 = []\n    if k == 1:\n        print('Yes')\n    else:\n        for i in range(k - 1):\n            l1.append(int(l[i + 1]) - int(l[i]))\n        if sorted(l1) == l1:\n            if int(l[0]) / (n - k + 1) > l1[0]:\n                print('No')\n            else:\n                print('Yes')\n        else:\n            print('No')", "def foo(n, k, s):\n    if n == 1 or k == 1:\n        return True\n    s = s[::-1]\n    pre = s[0] - s[1]\n    for i in range(2, k):\n        cur = s[i - 1] - s[i]\n        if cur > pre:\n            return False\n        pre = cur\n    remain = pre * (n - k + 1)\n    return s[-1] <= remain\nt = int(input())\nfor _ in range(t):\n    (n, k) = [int(i) for i in input().split()]\n    s = [int(i) for i in input().split()]\n    print('Yes' if foo(n, k, s) else 'No')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(map(int, input().split()))\n    if k == 1:\n        print('Yes')\n        continue\n    l = s[0]\n    (f, pre) = (0, s[1] - s[0])\n    if pre * (n - k + 1) < s[0]:\n        print('No')\n        continue\n    for i in range(len(s) - 1):\n        val = s[i + 1] - s[i]\n        if val < pre:\n            f = -1\n            break\n        pre = val\n    if f == -1:\n        print('No')\n    else:\n        print('Yes')", "t = int(input())\nfor _ in range(t):\n    nk = [int(ii) for ii in input().split()]\n    (n, k) = (nk[0], nk[1])\n    s = [int(ii) for ii in input().split()]\n    if k == 1:\n        print('Yes')\n        continue\n    b = []\n    bb = []\n    for i in range(1, k):\n        b.append(s[i] - s[i - 1])\n        bb.append(s[i] - s[i - 1])\n    bb.sort()\n    if b != bb:\n        print('No')\n        continue\n    if (n - k + 1) * b[0] < s[0]:\n        print('No')\n    else:\n        print('Yes')", "t = int(input())\nfor r in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    if n == 1 or k == 1:\n        print('Yes')\n    else:\n        d = [l[0]]\n        for i in range(1, k):\n            d.append(l[i] - l[i - 1])\n        if d[1:] == sorted(d[1:]) and d[0] <= d[1] * (n - k + 1):\n            print('Yes')\n        else:\n            print('No')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(map(int, input().split()))\n    if k == 1:\n        print('Yes')\n    elif s[1] - s[0] < s[0] / (n - k + 1):\n        print('No')\n    else:\n        for i in range(1, k - 1):\n            if s[i] - s[i - 1] > s[i + 1] - s[i]:\n                print('No')\n                break\n        else:\n            print('Yes')", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = [int(x) for x in input().split()]\n    if k == 1:\n        print('Yes')\n        continue\n    if (n - k + 1) * (s[1] - s[0]) < s[0]:\n        print('No')\n        continue\n    arr = [s[i + 1] - s[i] for i in range(k - 1)]\n    for i in range(k - 2):\n        if arr[i] > arr[i + 1]:\n            print('No')\n            break\n    else:\n        print('Yes')", "import math\nT = int(input(''))\nfor i in range(T):\n    str1 = input()\n    l1 = [int(c) for c in str1.split()]\n    str1 = input()\n    l2 = [int(c) for c in str1.split()]\n    n = l1[0]\n    k = l1[1]\n    flag = 0\n    if k == 1:\n        print('Yes')\n    else:\n        if k != 2:\n            j = len(l2) - 1\n            while j > 2 and l2[j] - l2[j - 1] >= l2[j - 1] - l2[j - 2]:\n                j -= 1\n            if l2[j] - l2[j - 1] < l2[j - 1] - l2[j - 2]:\n                flag = 1\n                print('No')\n                continue\n        if flag != 1:\n            latestNum = l2[1] - l2[0]\n            if (n - k + 1) * latestNum < l2[0]:\n                print('No')\n            else:\n                print('Yes')", "def getint():\n    return [int(i) for i in input().split()]\n\ndef get():\n    return int(input())\n\ndef S():\n    for test in range(int(input())):\n        solve()\n\ndef solve():\n    (n, k) = getint()\n    p = getint()\n    if k == 1:\n        print('Yes')\n        return\n    if k > n:\n        print('No')\n        return\n    if n == k:\n        a = p.copy()\n        for i in range(1, n):\n            a[i] = p[i] - p[i - 1]\n        if sorted(a) == a:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        a = p.copy()\n        for i in range(k - 1, 0, -1):\n            a[i] = p[i] - p[i - 1]\n        if sorted(a[1:]) == a[1:]:\n            if (n - k + 1) * a[1] >= p[0]:\n                print('Yes')\n            else:\n                print('No')\n        else:\n            print('No')\nS()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(map(int, input().split()))\n    if k == 1:\n        print('Yes')\n        continue\n    a = s[1] - s[0]\n    c = False\n    for i in range(k - 2):\n        if s[i + 2] - s[i + 1] < s[i + 1] - s[i]:\n            print('No')\n            c = True\n            break\n    if c:\n        continue\n    print(['Yes', 'No'][s[0] > a * (n - k + 1)])", "t = int(input())\nfor r in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    if n == 1 or k == 1:\n        print('Yes')\n    else:\n        d = [l[0]]\n        for i in range(1, k):\n            d.append(l[i] - l[i - 1])\n        if d[1:] == sorted(d[1:]) and d[0] <= d[1] * (n - k + 1):\n            print('Yes')\n        else:\n            print('No')", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().strip().split()))[:k]\n    l = arr[0]\n    if n == 1 or k == 1:\n        print('Yes')\n    else:\n        v = arr[-1]\n        arr.reverse()\n        brr = [0 for i in range(n)]\n        for i in range(k - 1):\n            brr[n - i - 1] = arr[i] - arr[i + 1]\n        r = brr[n - k + 1]\n        for i in range(1, n - k + 1, +1):\n            brr[i] = r\n        p = 0\n        for i in range(1, n - k + 1, +1):\n            p = p + brr[i]\n        res = l - p\n        brr[0] = res\n        flag = 1\n        for i in range(0, len(brr) - 1, +1):\n            if brr[i] > brr[i + 1]:\n                flag = 0\n                break\n        if flag == 1:\n            print('Yes')\n        else:\n            print('No')\n    t = t - 1", "from collections import defaultdict\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    if k == 1:\n        print('Yes')\n        continue\n    lans = []\n    l = [0] + l\n    for j in range(k):\n        lans.append(l[j + 1] - l[j])\n    if lans[1:] != sorted(lans[1:]):\n        print('No')\n    else:\n        x = n - k\n        if lans[0] > (x + 1) * lans[1]:\n            print('No')\n        else:\n            print('Yes')", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = [int(x) for x in input().split()]\n    if k == 1:\n        print('Yes')\n        continue\n    if (n - k + 1) * (s[1] - s[0]) < s[0]:\n        print('No')\n        continue\n    arr = [s[i + 1] - s[i] for i in range(k - 1)]\n    for i in range(k - 2):\n        if arr[i] > arr[i + 1]:\n            print('No')\n            break\n    else:\n        print('Yes')", "T = int(input())\nfor _ in range(T):\n    (n, k) = list(map(int, input().split()))\n    s = list(map(int, input().split()))\n    c = False\n    if k < 2:\n        print('Yes')\n        continue\n    if k >= 2:\n        kth = s[1] - s[0]\n        max_sum = (n - k + 1) * kth\n        if s[0] > max_sum:\n            print('No')\n            continue\n    for i in range(2, len(s)):\n        if s[i] - s[i - 1] < s[i - 1] - s[i - 2]:\n            print('No')\n            c = True\n            break\n    if c == False:\n        print('Yes')", "for _ in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    if 'fvrfrref34r34r4' == 34366564455:\n        print('Tanmay')\n    a = [int(x) for x in input().split()]\n    na = []\n    if k == 1:\n        print('Yes')\n        continue\n    for i in range(k - 1):\n        na.append(a[i + 1] - a[i])\n    if na != sorted(na):\n        print('No')\n        continue\n    if a[0] <= (n - k + 1) * na[0]:\n        print('Yes')\n        continue\n    print('No')", "import math\nfor i in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    if len(l) == 1:\n        print('Yes')\n        continue\n    ln = n - m + 1\n    last = math.ceil(l[0] / ln)\n    if last + l[0] > l[1]:\n        print('No')\n        continue\n    b = True\n    for i in range(1, m):\n        if l[i] - l[i - 1] < last:\n            print('No')\n            b = False\n            break\n        else:\n            last = l[i] - l[i - 1]\n    if b:\n        print('Yes')", "def mi():\n    return map(int, input().split())\n\ndef li():\n    return list(mi())\n\ndef si():\n    return str(input())\n\ndef ni():\n    return int(input())\nfor T in range(int(input())):\n    (n, k) = mi()\n    a = li()\n    if n == 1 or k == 1:\n        print('Yes')\n        continue\n    b = []\n    flag = True\n    for i in range(1, len(a)):\n        b.append(a[i] - a[i - 1])\n    for i in range(1, len(b)):\n        if b[i] < b[i - 1]:\n            flag = False\n    if not flag:\n        print('No')\n        continue\n    if a[0] <= b[0] * (n - k + 1):\n        print('Yes')\n    else:\n        print('No')", "t = int(input())\nfor i in range(t):\n    (n, k) = input().split()\n    n = int(n)\n    k = int(k)\n    xs = input()\n    xs = [int(x) for x in xs.split()]\n    an = xs[k - 1] - xs[k - 2]\n    flag = True\n    for j in range(k - 2, 0, -1):\n        temp = xs[j] - xs[j - 1]\n        if temp > an:\n            flag = False\n            break\n        else:\n            an = temp\n    if k == 1:\n        print('Yes')\n    elif flag:\n        length = n - k + 1\n        highest = xs[0] // length + (xs[0] % length != 0)\n        if highest <= an:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('No')", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    a = [l[0] / (n - k + 1)]\n    ans = 'Yes'\n    for j in range(1, k):\n        a.append(l[j] - l[j - 1])\n        if a[-1] < a[-2]:\n            ans = 'No'\n            break\n    print(ans)", "t = int(input())\nfor ele in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    s = [int(x) for x in input().split()]\n    arr = [0]\n    arr[0] = s[0] / (n - k + 1)\n    ljawab = 'Yes'\n    for i in range(len(s) - 1):\n        arr.append(s[i + 1] - s[i])\n        if arr[-1] < arr[-2]:\n            ljawab = 'No'\n            break\n    print(ljawab)", "tasks = int(input())\nfor t in range(tasks):\n    (n, k) = list(map(int, input().split()))\n    s = list(map(int, input().split()))\n    if k == 1:\n        print('Yes')\n    else:\n        last = s[-1] - s[-2]\n        s.pop()\n        result = 'Yes'\n        while len(s) > 1:\n            prelast = s[-1] - s[-2]\n            s.pop()\n            if prelast > last:\n                result = 'No'\n                break\n            last = prelast\n        else:\n            if s[0] > last * (n - k + 1):\n                result = 'No'\n        print(result)", "def exe():\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l2 = [l[0]]\n    if k == 1:\n        print('Yes')\n        return\n    for i in range(1, k):\n        l2.append(l[i] - l[i - 1])\n    for i in range(2, k):\n        if l2[i] < l2[i - 1]:\n            print('No')\n            return\n    if (n - k + 1) * l2[1] >= l2[0]:\n        print('Yes')\n    else:\n        print('No')\n    return\nfor i in range(int(input())):\n    exe()", "from collections import Counter, defaultdict\nfrom functools import lru_cache\nMOD = 10 ** 9 + 7\nI = lambda : [int(x) for x in input().split()]\n(E, P) = (enumerate, print)\nPRINT_ARR = lambda nums: print(' '.join((str(num) for num in nums)))\n\ndef is_increasing(nums):\n    for (a, b) in zip(nums, nums[1:]):\n        if b < a:\n            return False\n    return True\n\ndef solve(N, S, K):\n    if len(S) < 2:\n        return True\n    diffs = [b - a for (a, b) in zip(S, S[1:])]\n    if not is_increasing(diffs):\n        return False\n    if N - K == 0:\n        a = S[0]\n        return a <= diffs[0]\n    else:\n        return (N - K + 1) * diffs[0] >= S[0]\nnum_testcases = int(input())\nfor _ in range(num_testcases):\n    (N, K) = I()\n    S = I()\n    if solve(N, S, K):\n        print('Yes')\n    else:\n        print('No')", "t = int(input())\nfor q in range(t):\n    (n, k) = map(int, input().split())\n    s = list(map(int, input().split()))\n    f = True\n    f2 = True\n    if k < 3:\n        f2 = False\n    r = 0\n    if s[0] % (n - k + 1) == 0:\n        r = 1\n    if f2:\n        if s[0] // (n - k + 1) + 1 - r > s[1] - s[0]:\n            f = False\n        for i in range(k - 2):\n            if s[i + 1] - s[i] > s[i + 2] - s[i + 1]:\n                f = False\n    elif k == 2:\n        if s[0] // (n - k + 1) + 1 - r > s[1] - s[0]:\n            f = False\n    if f:\n        print('Yes')\n    else:\n        print('No')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(map(int, input().split()))\n    a = []\n    flag = 1\n    for i in range(k - 1, 0, -1):\n        x = s[i] - s[i - 1]\n        if i != k - 1:\n            if x > a[-1]:\n                flag = 0\n                break\n        a.append(x)\n    if k > 1 and a[-1] * (n - k + 1) < s[0]:\n        flag = 0\n    if flag:\n        print('Yes')\n    else:\n        print('No')", "t = int(input())\nfor i in range(t):\n    (n, k) = list(map(int, input().strip().split()))\n    presum = list(map(int, input().strip().split()))\n    if n == 1 or k == 1:\n        print('Yes')\n    else:\n        flag = 0\n        max = -10 ** 10\n        for i in range(1, k):\n            a = presum[i] - presum[i - 1]\n            if a >= max:\n                max = a\n            else:\n                flag = 1\n                break\n        if flag == 1:\n            print('No')\n        else:\n            first = presum[1] - presum[0]\n            if first * (n - k + 1) >= presum[0]:\n                print('Yes')\n            else:\n                print('No')", "t = int(input())\nfor i in range(t):\n    y = []\n    (n, k) = input().split()\n    (n, k) = (int(n), int(k))\n    y = input().split()\n    for i in range(len(y)):\n        y[i] = int(y[i])\n    a = [y[0] / (n - k + 1)]\n    r = 'Yes'\n    for j in range(1, k):\n        a.append(y[j] - y[j - 1])\n        if a[-1] < a[-2]:\n            r = 'No'\n            break\n    print(r)", "def solve(n, k, Y):\n    B = [Y[i + 1] - Y[i] for i in range(len(Y) - 1)]\n    if B[0] * (n - k + 1) < Y[0]:\n        return False\n    prev = Y[0] / (n - k + 1)\n    for i in B:\n        if i < prev:\n            return False\n        prev = i\n    return True\nN = int(input())\nfor _ in range(N):\n    X = [int(x) for x in input().split(' ')]\n    Y = [int(x) for x in input().split(' ')]\n    if X[0] == 1 and X[1] == 1:\n        print('Yes')\n        continue\n    if len(Y) == 1:\n        print('Yes')\n        continue\n    if solve(X[0], X[1], Y):\n        print('Yes')\n    else:\n        print('No')", "import math\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    s = list(map(int, input().split()))\n    d = []\n    c = 0\n    for i in range(k):\n        if i >= 1:\n            tmp = s[i] - s[i - 1]\n            d.append(tmp)\n            if s[i - 1] > (n - k + i) * tmp:\n                c = 1\n                break\n    if c == 0:\n        for i in range(len(d)):\n            if i >= 1:\n                if d[i] < d[i - 1]:\n                    c = 1\n                    break\n        if c == 1:\n            print('No')\n        else:\n            print('Yes')\n    else:\n        print('No')", "import math\nt = int(input())\nfor t1 in range(t):\n    tmp = input().split()\n    n = int(tmp[0])\n    k = int(tmp[1])\n    s = [int(x) for x in input().split()]\n    a = [s[0] / (n - k + 1)]\n    ans = 'Yes'\n    for i in range(1, k):\n        a.append(s[i] - s[i - 1])\n        if a[-1] < a[-2]:\n            ans = 'No'\n            break\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    before = (arr[0] + n - k) // (n - k + 1)\n    for x in range(len(arr) - 1):\n        if before <= arr[x + 1] - arr[x]:\n            pass\n        else:\n            print('No')\n            break\n        before = arr[x + 1] - arr[x]\n    else:\n        print('Yes')", "import math\nt = int(input())\nfor t1 in range(t):\n    tmp = input().split()\n    n = int(tmp[0])\n    k = int(tmp[1])\n    s = [int(x) for x in input().split()]\n    a = [s[0] / (n - k + 1)]\n    ans = 'Yes'\n    for i in range(1, k):\n        a.append(s[i] - s[i - 1])\n        if a[-1] < a[-2]:\n            ans = 'No'\n            break\n    print(ans)", "def inp_arr():\n    return list(map(int, input().strip().split(' ')))\n\ndef inp_int():\n    return int(input())\n\ndef inp_str():\n    return input()\n\ndef solve():\n    (n, k) = inp_arr()\n    a = inp_arr()\n    last = 10000000000.0\n    minn = 10000000000.0\n    for i in range(k - 1, 0, -1):\n        temp = a[i] - a[i - 1]\n        if last != 10000000000.0:\n            if temp > last:\n                print('No')\n                return\n        last = temp\n        minn = min(last, minn)\n    remaining = n - k + 1\n    temp = a[0] / remaining\n    if temp > minn:\n        print('No')\n        return\n    print('Yes')\n    return\ntt = inp_int()\nfor t in range(tt):\n    solve()", "test = int(input())\nfor t in range(test):\n    nk = list(map(int, input().split()))\n    n = nk[0]\n    k = nk[1]\n    s = list(map(int, input().split()))\n    a = list()\n    b = list()\n    for i in range(1, k):\n        a.append(s[i] - s[i - 1])\n        b.append(s[i] - s[i - 1])\n    b.sort()\n    if a != b:\n        print('No')\n    elif k == 1:\n        print('Yes')\n    elif s[0] / (n - k + 1) > a[0]:\n        print('No')\n    else:\n        print('Yes')", "def main():\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    prev = float('inf')\n    i = k - 1\n    while i > 0:\n        if arr[i] - arr[i - 1] > prev:\n            return 'No'\n        prev = arr[i] - arr[i - 1]\n        i -= 1\n    if n == k:\n        if arr[0] > prev:\n            return 'No'\n    rem = n - k + 1\n    if rem * prev < arr[0]:\n        return 'No'\n    return 'Yes'\nfor _ in range(int(input())):\n    print(main())", "from math import ceil\nt = int(input())\n\ndef check():\n    (n, k) = [int(x) for x in input().split(' ')]\n    s = [int(x) for x in input().split(' ')]\n    min_pos = ceil(s[0] / (n - k + 1))\n    for idx in range(1, len(s)):\n        if s[idx] < s[idx - 1] + min_pos:\n            return 'No'\n        min_pos = s[idx] - s[idx - 1]\n    return 'Yes'\nfor _ in range(t):\n    print(check())", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = [0] * k\n    b[0] = a[0]\n    flag = 0\n    for i in range(len(a) - 1, 0, -1):\n        b[i] = a[i] - a[i - 1]\n        if i < len(a) - 1 and b[i + 1] < b[i]:\n            print('No')\n            flag = 1\n            break\n    if flag:\n        continue\n    if k == 1:\n        print('Yes')\n        continue\n    else:\n        sum_first = b[0]\n        num_first = n - k + 1\n        last_num = b[1]\n        sum_assume = num_first * last_num\n        if sum_assume < sum_first:\n            print('No')\n            continue\n        else:\n            print('Yes')\n            continue", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    arr = []\n    for i in range(k - 1):\n        arr.append(lst[i + 1] - lst[i])\n    temp = arr.copy()\n    temp.sort()\n    if k == 1:\n        print('Yes')\n        continue\n    if arr == temp:\n        pass\n    else:\n        print('No')\n        continue\n    if n != k:\n        pass\n    else:\n        mini = temp[0]\n        for i in temp:\n            if i < mini:\n                mini = i\n        if mini < lst[0]:\n            print('No')\n            continue\n        else:\n            print('Yes')\n            continue\n    mini = temp[0]\n    for i in temp:\n        if i < mini:\n            mini = i\n    if mini * (n - k + 1) < lst[0]:\n        print('No')\n        continue\n    else:\n        print('Yes')\n        continue"]