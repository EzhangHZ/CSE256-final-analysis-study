["import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    n = int(inp())\n    a = list(map(int, inp().split()))\n    b = list(map(int, inp().split()))\n    w = [0] * (n + 1)\n    j = 0\n    for i in range(n):\n        x = b[i]\n        while j < n and a[j] != x:\n            w[a[j]] += 1\n            j += 1\n        if j == n:\n            print('NO')\n            return\n        if i + 1 < n and b[i + 1] == x:\n            if j + 1 >= n or a[j + 1] != x:\n                if w[x] > 0:\n                    w[x] -= 1\n                    i += 1\n                    continue\n        j += 1\n    print('YES')\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "def ss(a, b):\n    d = {}\n    n = len(a)\n    i = n - 1\n    j = n - 1\n    if a[-1] != b[-1]:\n        return 'NO'\n    while i >= 0 and j >= 0:\n        if a[i] == b[j]:\n            i -= 1\n            j -= 1\n            continue\n        if b[j] == b[j + 1]:\n            x = b[j]\n            if x in d:\n                d[x] += 1\n            else:\n                d[x] = 1\n            j -= 1\n            continue\n        x = a[i]\n        if x in d and d[x] > 0:\n            d[x] -= 1\n            i -= 1\n        else:\n            return 'NO'\n    return 'YES'\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(ss(a, b))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = {}\n    j = n - 1\n    k = n - 1\n    e = 0\n    while j >= 0 and k >= 0:\n        if b[j] == a[k]:\n            k = k - 1\n            j = j - 1\n        elif j < n - 1:\n            if b[j] == b[j + 1]:\n                if b[j] in d:\n                    d[b[j]] = d[b[j]] + 1\n                    j = j - 1\n                else:\n                    d[b[j]] = 1\n                    j = j - 1\n            elif a[k] in d:\n                if d[a[k]] > 0:\n                    d[a[k]] = d[a[k]] - 1\n                    k = k - 1\n                else:\n                    e = 1\n                    print('NO')\n                    break\n            else:\n                e = 1\n                print('NO')\n                break\n        else:\n            e = 1\n            print('NO')\n            break\n    if e == 0:\n        print('YES')", "import collections\n\ndef transform(a, b):\n    counter = collections.Counter()\n    while a:\n        while len(b) > 1 and b[-1] == b[-2]:\n            counter[b.pop()] += 1\n        if b and a[-1] == b[-1]:\n            a.pop()\n            b.pop()\n        elif counter[a[-1]]:\n            counter[a.pop()] -= 1\n        else:\n            return False\n    return True\nfor _ in range(int(input())):\n    input()\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print('YES' if transform(a, b) else 'NO')", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if n == 1:\n        print('YES')\n        continue\n    check = [0 for _ in range(n + 1)]\n    (i1, i2) = (0, 0)\n    while i1 < n and i2 < n:\n        if a[i1] != b[i2]:\n            if check[b[i2]] > 0 and a[i1 - 1] == b[i2]:\n                check[b[i2]] -= 1\n                i2 += 1\n            else:\n                check[a[i1]] += 1\n                i1 += 1\n        else:\n            i1 += 1\n            i2 += 1\n    while i2 < n and check[b[i2]] > 0 and (a[i1 - 1] == b[i2]):\n        check[b[i2]] -= 1\n        i2 += 1\n    if any(check):\n        print('NO')\n    else:\n        print('YES')", "import collections\n\ndef transform(a, b):\n    counter = collections.Counter()\n    while a:\n        while len(b) > 1 and b[-1] == b[-2]:\n            counter[b.pop()] += 1\n        if b and a[-1] == b[-1]:\n            a.pop()\n            b.pop()\n        elif counter[a[-1]]:\n            counter[a.pop()] -= 1\n        else:\n            return False\n    return True\nfor _ in range(int(input())):\n    input()\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print('YES' if transform(a, b) else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    (a, b) = ([*map(int, input().split())], [*map(int, input().split())])\n    d = {}\n    (x, i, last) = (n - 1, n - 1, 0)\n    while i > 0:\n        if b[i] == a[x]:\n            x -= 1\n            last = b[i]\n            i -= 1\n        elif b[i] == last:\n            d[b[i]] = d.get(b[i], 0) + 1\n            last = b[i]\n            i -= 1\n        elif d.get(a[x], 0) > 0:\n            d[a[x]] -= 1\n            x -= 1\n        else:\n            print('NO')\n            break\n    else:\n        print('YES')", "for case in range(int(input())):\n    n = int(input())\n    a = [int(j) for j in input().split()]\n    b = [int(j) for j in input().split()]\n    carry = {}\n    try:\n        i = 0\n        for j in range(n):\n            while a[i] != b[j]:\n                carry[a[i]] = carry.get(a[i], 0) + 1\n                i += 1\n            if carry.get(a[i], 0) == 0:\n                i += 1\n            else:\n                carry[a[i]] -= 1\n    except:\n        i = n + 1\n    print(['NO', 'YES'][i == n])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    if n == 1:\n        print('YES')\n        continue\n    s = [0 for i in range(max(a) + 1)]\n    i = n - 1\n    j = n - 1\n    flag = True\n    while i >= 0 and j >= 0:\n        while j >= 0 and b[j] == b[j - 1]:\n            s[b[j]] += 1\n            j -= 1\n        if a[i] == b[j]:\n            i -= 1\n            j -= 1\n        elif s[a[i]] == 0:\n            flag = False\n            break\n        else:\n            s[a[i]] -= 1\n            i -= 1\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    if n == 1:\n        print('YES')\n        continue\n    s = [0 for i in range(max(a) + 1)]\n    i = n - 1\n    j = n - 1\n    flag = True\n    while i >= 0 and j >= 0:\n        while j >= 0 and b[j] == b[j - 1]:\n            s[b[j]] += 1\n            j -= 1\n        if a[i] == b[j]:\n            i -= 1\n            j -= 1\n        elif s[a[i]] == 0:\n            flag = False\n            break\n        else:\n            s[a[i]] -= 1\n            i -= 1\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    if n == 1:\n        print('YES')\n        continue\n    s = [0 for i in range(max(a) + 1)]\n    i = n - 1\n    j = n - 1\n    flag = True\n    while i >= 0 and j >= 0:\n        while j >= 0 and b[j] == b[j - 1]:\n            s[b[j]] += 1\n            j -= 1\n        if a[i] == b[j]:\n            i -= 1\n            j -= 1\n        elif s[a[i]] == 0:\n            flag = False\n            break\n        else:\n            s[a[i]] -= 1\n            i -= 1\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    if n == 1:\n        print('YES')\n        continue\n    s = [0 for i in range(max(a) + 1)]\n    i = n - 1\n    j = n - 1\n    flag = True\n    while i >= 0 and j >= 0:\n        while j >= 0 and b[j] == b[j - 1]:\n            s[b[j]] += 1\n            j -= 1\n        if a[i] == b[j]:\n            i -= 1\n            j -= 1\n        elif s[a[i]] == 0:\n            flag = False\n            break\n        else:\n            s[a[i]] -= 1\n            i -= 1\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\nrounds = int(input())\nfor ii in range(rounds):\n    out = 'YES'\n    length = int(input())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    seen = {}\n    ind1 = length - 1\n    ind2 = length - 1\n    while ind1 >= 0 and ind2 >= 0:\n        if ind2 > 0 and arr2[ind2] == arr2[ind2 - 1]:\n            ind2 -= 1\n            if arr2[ind2] in seen:\n                seen[arr2[ind2]] += 1\n            else:\n                seen[arr2[ind2]] = 1\n        elif arr1[ind1] == arr2[ind2]:\n            ind1 -= 1\n            ind2 -= 1\n        elif arr1[ind1] in seen and seen[arr1[ind1]] > 0:\n            seen[arr1[ind1]] -= 1\n            ind1 -= 1\n        else:\n            out = 'NO'\n            break\n    print(out)", "from collections import defaultdict\n\nclass multiset:\n\n    def __init__(self):\n        self.multiset = defaultdict(int)\n\n    def add(self, key):\n        self.multiset[key] += 1\n\n    def remove(self, key):\n        if key in self.multiset:\n            self.multiset[key] -= 1\n            if self.multiset[key] == 0:\n                del self.multiset[key]\n\n    def __contains__(self, val):\n        return self.multiset[val] > 0\n\n    def __len__(self):\n        return sum(self.multiset.values())\n\n    def __str__(self):\n        return '< ' + ''.join([(str(i) + ' ') * self.multiset[i] for i in self.multiset]) + '>'\nfor _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    mset = multiset()\n    (i, j) = (n - 1, n - 1)\n    ans = 'YES'\n    while i >= 0 and j >= 0:\n        while j > 0 and B[j] == B[j - 1]:\n            mset.add(B[j])\n            j -= 1\n        if A[i] == B[j]:\n            i -= 1\n            j -= 1\n        elif A[i] in mset:\n            mset.remove(A[i])\n            i -= 1\n        else:\n            ans = 'NO'\n            break\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = []\n    d = []\n    for i in a:\n        if len(c) == 0:\n            c.append([i, 1])\n        elif i == c[-1][0]:\n            c[-1][1] += 1\n        else:\n            c.append([i, 1])\n    for i in b:\n        if len(d) == 0:\n            d.append([i, 1])\n        elif i == d[-1][0]:\n            d[-1][1] += 1\n        else:\n            d.append([i, 1])\n    a = c[:]\n    b = d[:]\n    cur = dict()\n    i = 0\n    j = 0\n    while i < len(a) or j < len(b):\n        if i == len(a) or j == len(b):\n            print('NO')\n            break\n        if a[i][0] == b[j][0]:\n            v1 = a[i][1] + cur.get(a[i][0], 0)\n            v2 = b[j][1]\n            if v1 < v2:\n                cur[a[i][0]] = v1\n                i += 1\n                continue\n            cur[a[i][0]] = v1 - v2\n            i += 1\n            j += 1\n        else:\n            cur[a[i][0]] = cur.get(a[i][0], 0) + a[i][1]\n            i += 1\n    else:\n        print('YES')"]