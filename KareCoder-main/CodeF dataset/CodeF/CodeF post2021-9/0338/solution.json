["import sys\nprint = sys.stdout.write\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n > m:\n        print('NO\\n')\n        continue\n    if n % 2 == 1:\n        print('YES\\n')\n        print('1 ' * (n - 1))\n        print(f'{m - (n - 1)}\\n')\n    elif m % 2 == 0:\n        print('YES\\n')\n        print('1 ' * (n - 2))\n        print(f'{(m - (n - 2)) // 2} {(m - (n - 2)) // 2}\\n')\n    else:\n        print('NO\\n')", "output = ''\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if m < n:\n        output += 'NO\\n'\n    elif m == n:\n        output += 'YES\\n' + '1 ' * n\n    elif n % 2 == 1:\n        output += 'YES\\n' + f'{m - n + 1} ' + '1 ' * (n - 1)\n    elif m % 2 == 0:\n        output += 'YES\\n' + f'{(m - n + 2) // 2} ' * 2 + '1 ' * (n - 2)\n    else:\n        output += 'NO\\n'\n    output += '\\n'\nprint(output)", "output = ''\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if m < n:\n        output += 'NO\\n'\n    elif m == n:\n        output += 'YES\\n' + '1 ' * n\n    elif n % 2 == 1:\n        output += 'YES\\n' + f'{m - n + 1} ' + '1 ' * (n - 1)\n    elif m % 2 == 0:\n        output += 'YES\\n' + f'{(m - n + 2) // 2} ' * 2 + '1 ' * (n - 2)\n    else:\n        output += 'NO\\n'\n    output += '\\n'\nprint(output)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, m) = map(int, input().split())\n    if n == 1:\n        print('YES')\n        ans = [m]\n        print(*ans)\n        return\n    if m < n:\n        print('NO')\n    elif m == n:\n        print('YES')\n        ans = [1] * n\n        print(*ans)\n    elif (n - 1) % 2 == 0:\n        print('YES')\n        ans = [m - n + 1] + [1] * (n - 1)\n        print(*ans)\n    elif m % 2 == 0:\n        print('YES')\n        ans = [(m - n + 2) // 2, (m - n + 2) // 2] + [1] * (n - 2)\n        print(*ans)\n    else:\n        print('NO')\n    return\nfor _ in range(int(input())):\n    solve()", "s = ''\nfor _ in range(int(input())):\n    (n, sm) = map(int, input().split())\n    if n > sm:\n        s += 'NO\\n'\n    elif n == sm:\n        s += 'YES\\n' + ' ' + '1 ' * n + '\\n'\n    elif n % 2 == 1:\n        s += 'YES\\n' + str(sm - (n - 1)) + ' ' + '1 ' * (n - 1) + '\\n'\n    elif sm % 2 == 0:\n        s += 'YES\\n' + str((sm - (n - 2)) // 2) + ' ' + str((sm - (n - 2)) // 2) + ' ' + '1 ' * (n - 2) + '\\n'\n    else:\n        s += 'NO\\n'\nprint(s)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n > m or (n % 2 == 0 and m % 2 == 1):\n        print('NO')\n    else:\n        print('YES')\n        l = []\n        if n % 2 == 1:\n            print('1 ' * (n - 1) + str(m - n + 1))\n        else:\n            print('1 ' * (n - 2) + (str((m - (n - 2)) // 2) + ' ') * 2)", "import sys\ninput = sys.stdin.readline\nfor i in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n > m:\n        print('NO')\n        continue\n    if n % 2 == 1:\n        print('YES')\n        for i in range(n - 1):\n            print(1, end=' ')\n        print(m - n + 1)\n    elif m % 2 == 0:\n        print('YES')\n        for i in range(n - 2):\n            print(1, end=' ')\n        print((m - n + 2) // 2, (m - n + 2) // 2)\n    else:\n        print('NO')", "output = ''\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if m < n:\n        output += 'NO\\n'\n    elif m == n:\n        output += 'YES\\n' + '1 ' * n\n    elif n % 2 == 1:\n        output += 'YES\\n' + str(m - n + 1) + ' ' + '1 ' * (n - 1)\n    elif m % 2 == 0:\n        output += 'YES\\n' + (str((m - n + 2) // 2) + ' ') * 2 + '1 ' * (n - 2)\n    else:\n        output += 'NO\\n'\n    output += '\\n'\nprint(output)", "output = ''\nfor caseno in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n > m:\n        output += 'NO\\n'\n    elif m == n:\n        output += 'YES\\n'\n        output += '1 ' * n\n    elif n % 2 == 1:\n        output += 'YES\\n'\n        output += '1 ' * (n - 1)\n        left_m = m - (n - 1)\n        half_left_m = int(left_m)\n        output += str(half_left_m) + ' '\n    elif m % 2 == 0:\n        output += 'YES\\n'\n        output += '1 ' * (n - 2)\n        left_m = m - (n - 2)\n        half_left_m = int(left_m // 2)\n        output += (str(half_left_m) + ' ') * 2\n    else:\n        output += 'NO\\n'\n    output += '\\n'\nprint(output)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n > m or (n % 2 == 0 and m % 2 == 1):\n        print('NO')\n    else:\n        print('YES')\n        l = []\n        if n % 2:\n            l.extend([1] * (n - 1) + [m - n + 1])\n        else:\n            l.extend([1] * (n - 2) + [(m - n + 2) // 2] * 2)\n        print(*l, sep=' ')", "import sys\ninput = sys.stdin.readline\n\ndef int_num():\n    return int(input())\n\ndef int_list():\n    return list(map(int, input().split()))\n\ndef str_list():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef instr():\n    return input().strip()\n\ndef invr():\n    return map(int, input().split())\n\ndef solve():\n    (n, k) = int_list()\n    if n > k:\n        print('NO')\n        return\n    if n % 2 == 0 and k % 2 == 1:\n        print('NO')\n        return\n    print('YES')\n    if n % 2 == 1:\n        a = [1] * (n - 1)\n        a.append(k + 1 - n)\n    else:\n        a = [1] * (n - 2)\n        a.append((k + 2 - n) // 2)\n        a.append((k + 2 - n) // 2)\n    print(*a)\n\ndef main():\n    t = int_num()\n    while t:\n        solve()\n        t -= 1\n    return\nmain()", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    if n > m or (n % 2 == 0 and m % 2 == 1):\n        print('NO')\n    else:\n        print('YES')\n        ans = []\n        if n % 2 == 1:\n            ans.extend([1] * (n - 1) + [m - n + 1])\n        else:\n            ans.extend([1] * (n - 2) + [(m - n + 2) // 2] * 2)\n        print(*ans, sep=' ')", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n > m or (n % 2 == 0 and m % 2 == 1):\n        print('NO')\n    else:\n        print('YES')\n        l = []\n        if n % 2 == 1:\n            print('1 ' * (n - 1) + str(m - n + 1))\n        else:\n            print('1 ' * (n - 2) + (str((m - (n - 2)) // 2) + ' ') * 2)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    if n > m or (n % 2 == 0 and m % 2 == 1):\n        print('NO')\n    else:\n        print('YES')\n        ans = []\n        if n % 2 == 1:\n            ans.extend([1] * (n - 1) + [m - n + 1])\n        else:\n            ans.extend([1] * (n - 2) + [(m - n + 2) // 2] * 2)\n        print(*ans, sep=' ')", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    if n > m or (n % 2 == 0 and m % 2 == 1):\n        print('NO')\n    else:\n        print('YES')\n        ans = []\n        if n % 2 == 1:\n            ans.extend([1] * (n - 1) + [m - n + 1])\n        else:\n            ans.extend([1] * (n - 2) + [(m - n + 2) // 2] * 2)\n        print(*ans, sep=' ')", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n > m or (n % 2 == 0 and m % 2 == 1):\n        print('NO')\n    else:\n        print('YES')\n        l = []\n        if n % 2:\n            l.extend([1] * (n - 1) + [m - n + 1])\n        else:\n            l.extend([1] * (n - 2) + [(m - n + 2) // 2] * 2)\n        print(*l, sep=' ')", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n > m or (n % 2 == 0 and m % 2 == 1):\n        print('NO')\n    else:\n        print('YES')\n        l = []\n        if n % 2:\n            l.extend([1] * (n - 1) + [m - n + 1])\n        else:\n            l.extend([1] * (n - 2) + [(m - n + 2) // 2] * 2)\n        print(*l, sep=' ')", "import sys\nimport math\nfrom collections import Counter\nfrom collections import defaultdict\n\ndef get_ints():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef solve(length, summ):\n    if summ < length:\n        return ['NO']\n    if length == summ:\n        ans = [1] * length\n        print('YES')\n        return ans\n    if length % 2 == 0 and summ % 2 != 0:\n        return ['NO']\n    if length % 2 != 0:\n        ans = []\n        for i in range(length - 1):\n            ans.append(1)\n        ans.append(summ - (length - 1))\n        print('YES')\n        return ans\n    if length % 2 == 0 and summ % 2 == 0:\n        ans = []\n        for i in range(length - 2):\n            ans.append(1)\n        rem = summ - (length - 2)\n        ans.append(rem // 2)\n        ans.append(rem // 2)\n        print('YES')\n        return ans\nt = int(input())\nfor _ in range(t):\n    arr = get_ints()\n    print(*solve(arr[0], arr[1]))", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    if n > m or (n % 2 == 0 and m % 2 == 1):\n        print('NO')\n    else:\n        print('YES')\n        ans = []\n        if n % 2 == 1:\n            ans.extend([1] * (n - 1) + [m - n + 1])\n        else:\n            ans.extend([1] * (n - 2) + [(m - n + 2) // 2] * 2)\n        print(*ans, sep=' ')", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    if n > m or (n % 2 == 0 and m % 2 == 1):\n        print('NO')\n    else:\n        print('YES')\n        ans = []\n        if n % 2 == 1:\n            ans.extend([1] * (n - 1) + [m - n + 1])\n        else:\n            ans.extend([1] * (n - 2) + [(m - n + 2) // 2] * 2)\n        print(*ans, sep=' ')", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    if n > m or (n % 2 == 0 and m % 2 == 1):\n        print('NO')\n    else:\n        print('YES')\n        ans = []\n        if n % 2 == 1:\n            ans.extend([1] * (n - 1) + [m - n + 1])\n        else:\n            ans.extend([1] * (n - 2) + [(m - n + 2) // 2] * 2)\n        print(*ans, sep=' ')", "import sys\ninput = sys.stdin.readline\nin_il = lambda : list(map(int, input().split()))\nin_sl = lambda : input().split()\nin_i = lambda : int(input())\nMAX_INT = float('inf')\n\ndef solve():\n    (n, m) = in_il()\n    if n > m:\n        print('NO')\n    elif n % 2 != 0:\n        print('YES')\n        for i in range(n - 1):\n            print(1, end=' ')\n        print(m - n + 1)\n    elif n % 2 == 0 and m % 2 == 0:\n        print('YES')\n        for i in range(n - 2):\n            print(1, end=' ')\n        print((m - n + 2) // 2, (m - n + 2) // 2)\n    else:\n        print('NO')\nfor _ in range(in_i()):\n    solve()", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n > m or (n % 2 == 0 and m % 2 == 1):\n        print('NO')\n    else:\n        print('YES')\n        l = []\n        if n % 2:\n            l.extend([1] * (n - 1) + [m - n + 1])\n        else:\n            l.extend([1] * (n - 2) + [(m - n + 2) // 2] * 2)\n        print(*l, sep=' ')", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    if n > m or (n % 2 == 0 and m % 2 == 1):\n        print('NO')\n    else:\n        print('YES')\n        ans = []\n        if n % 2 == 1:\n            ans.extend([1] * (n - 1) + [m - n + 1])\n        else:\n            ans.extend([1] * (n - 2) + [(m - n + 2) // 2] * 2)\n        print(*ans, sep=' ')", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n > m or (n % 2 == 0 and m % 2 == 1):\n        print('NO')\n    else:\n        print('YES')\n        l = []\n        if n % 2:\n            l.extend([1] * (n - 1) + [m - n + 1])\n        else:\n            l.extend([1] * (n - 2) + [(m - n + 2) // 2] * 2)\n        print(*l, sep=' ')", "import math\nimport sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, m) = map(int, input().split(' '))\n    lst = []\n    if m < n:\n        print('NO')\n        return\n    if n == 1:\n        lst = [m]\n    elif n == 2:\n        if m % 2:\n            print('NO')\n            return\n        lst = [m // 2, m // 2]\n    elif n % 2:\n        for i in range(n - 1):\n            lst.append(1)\n        lst.append(m - (n - 1))\n    else:\n        for i in range(n - 2):\n            lst.append(1)\n        b = m - (n - 2)\n        if b % 2:\n            print('NO')\n            return\n        lst.append(b // 2)\n        lst.append(b // 2)\n    print('YES')\n    for i in lst:\n        print(i, end=' ')\n    print()\nt = int(input())\nwhile t:\n    t -= 1\n    solve()", "import itertools\nimport sys\nimport math\nfrom bisect import *\nfrom collections import deque\ninput = sys.stdin.readline\nfrom collections import defaultdict\nfrom collections import Counter\nfor i in range(int(input())):\n    (n, m) = map(int, input().split())\n    if m < n:\n        print('NO')\n        continue\n    elif n & 1:\n        print('YES')\n        for i in range(1, n):\n            print(1, end=' ')\n            m -= 1\n        print(m, end='')\n        print('')\n    elif m & 1:\n        print('NO')\n    else:\n        print('YES')\n        for i in range(2, n):\n            print(1, end=' ')\n            m -= 1\n        print(m // 2, end=' ')\n        print(m // 2, end=' ')\n        print()", "import sys\n\ndef get_ints():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef fun(a, b):\n    x = []\n    if b // a == 0:\n        return 'No'\n    if a == b:\n        return [1] * a\n    if a % 2 == 0 and b % 2 != 0:\n        return 'No'\n    if a % 2 != 0 and b % 2 != 0:\n        for i in range(a - 1):\n            x.append(1)\n        x.append(b - (a - 1))\n        return x\n    if a % 2 == 0 and b % 2 == 0:\n        for i in range(a - 2):\n            x.append(1)\n        x.append((b - (a - 2)) // 2)\n        x.append((b - (a - 2)) // 2)\n        return x\n    else:\n        for i in range(a - 1):\n            x.append(1)\n        x.append(b - (a - 1))\n        return x\nl = int(input())\nfor _ in range(l):\n    arr = get_ints()\n    a = int(arr[0])\n    b = int(arr[-1])\n    z = fun(a, b)\n    if z != 'No':\n        print('YES')\n        print(*z)\n    else:\n        print('NO')", "def solve():\n    (n, m) = map(int, input().split())\n    if n == 1:\n        print('YES')\n        print(m)\n    elif n == m:\n        print('YES')\n        print('1 ' * n)\n    elif m < n:\n        print('NO')\n    elif n % 2 == 1:\n        print('YES')\n        print('1 ' * (n - 1), end='')\n        print(m - n + 1)\n    elif n % 2 == 0 and m % 2 == 0:\n        print('YES')\n        print('1 ' * (n - 2), end='')\n        print((m - n + 2) // 2, end=' ')\n        print((m - n + 2) // 2)\n    else:\n        print('NO')\nfor _ in range(int(input())):\n    solve()", "t = int(input())\nfor i in range(0, t):\n    (n, m) = map(int, input().split())\n    bl = True\n    if n > m:\n        print('NO')\n        bl = False\n    if bl:\n        if n % 2 == 0:\n            if m % 2 != 0:\n                bl = False\n                print('NO')\n    if bl:\n        if n == 1:\n            print('YES')\n            print(m)\n            bl = False\n    if bl:\n        if n % 2 == 1:\n            print('YES')\n            print((n - 1) * '1 ', end='')\n            print(m - n + 1)\n        else:\n            print('YES')\n            print((n - 2) * '1 ', end='')\n            print((m - n + 2) // 2, (m - n + 2) // 2)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    if n > m or (n % 2 == 0 and m % 2 != 0):\n        print('NO')\n    else:\n        print('YES')\n        if n == 1:\n            print(m)\n        else:\n            res = []\n            if n % 2:\n                res += ['1'] * (n - 1) + [str(m - n + 1)]\n            else:\n                res += ['1'] * (n - 2) + [str((m - n + 2) // 2)] * 2\n            print(' '.join(res))", "from math import factorial as fact, comb as ncr\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom collections import Counter as cnt\nlin = lambda : list(map(int, input().split()))\nnin = lambda : int(input())\nsin = lambda : str(input())\nbi = lambda n: bin(n).replace('0b', '')\nyes = lambda : print('YES')\nno = lambda : print('NO')\n\ndef kyutlederahaibhai():\n    (n, s) = map(int, input().split())\n    if n > s:\n        no()\n        return\n    if n == 1:\n        yes()\n        print(s)\n        return\n    if n % 2 == 0 and s % 2:\n        no()\n        return\n    yes()\n    if n % 2:\n        for i in range(n - 1):\n            print(1, end=' ')\n        s -= n - 1\n        print(s)\n    else:\n        for i in range(n - 2):\n            print(1, end=' ')\n        s -= n - 2\n        print(s // 2, end=' ')\n        print(s // 2)\nfor pratyush in range(int(input())):\n    kyutlederahaibhai()", "n = int(input())\nfor p in range(0, n):\n    (n, m) = map(int, input().split())\n    if n > m:\n        print('NO')\n    elif n % 2 == 1:\n        print('YES')\n        if n != 1:\n            for i in range(0, n - 1):\n                print(1, end=' ')\n            print(m - n + 1)\n        else:\n            print(m)\n    elif m % 2 != 0:\n        print('NO')\n    else:\n        print('YES')\n        for i in range(0, n - 2):\n            print(1, end=' ')\n        print((m - n + 2) // 2, (m - n + 2) // 2)", "def solve():\n    (n, s) = list(map(int, input().split()))\n    if n > s:\n        print('NO')\n        return\n    if n == 1:\n        print('YES')\n        print(s)\n        return\n    if n % 2 == 0 and s % 2:\n        print('NO')\n        return\n    l = []\n    print('YES')\n    if n % 2 == 0:\n        for i in range(n - 2):\n            l.append(1)\n        s -= n - 2\n        l.append(s // 2)\n        l.append(s // 2)\n        print(*l)\n    else:\n        for i in range(n - 1):\n            l.append(1)\n        s -= n - 1\n        l.append(s)\n        print(*l)\nfor pratyush in range(int(input())):\n    solve()", "n = int(input())\nfor p in range(0, n):\n    (n, m) = map(int, input().split())\n    if n > m:\n        print('NO')\n    elif n % 2 == 1:\n        print('YES')\n        if n != 1:\n            for i in range(0, n - 1):\n                print(1, end=' ')\n            print(m - n + 1)\n        else:\n            print(m)\n    elif m % 2 != 0:\n        print('NO')\n    else:\n        print('YES')\n        for i in range(0, n - 2):\n            print(1, end=' ')\n        print((m - n + 2) // 2, (m - n + 2) // 2)", "for jj in range(int(input())):\n    (n, m) = [int(i) for i in input().split()]\n    if n > m:\n        print('NO')\n    elif n == 1:\n        print('YES')\n        print(*[m])\n    elif n == m:\n        print('YES')\n        t = [1] * n\n        print(*t)\n    elif n % 2 == 1:\n        print('YES')\n        t = [1] * (n - 1) + [m - n + 1]\n        print(*t)\n    elif m % 2 == 1:\n        print('NO')\n    else:\n        print('YES')\n        t = [1] * (n - 2) + [(m - n + 2) // 2] * 2\n        print(*t)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n > m or (not n & 1 and m & 1):\n        print('NO')\n        continue\n    print('YES')\n    if n > 1:\n        for i in range(n - 2):\n            print(1, end=' ')\n        if n == m:\n            print('1 1')\n        elif n & 1:\n            print('1 {}'.format(m - n + 1))\n        else:\n            g = (m - n + 2) // 2\n            print('{} {}'.format(g, g))\n    else:\n        print(m)"]