["for _ in range(int(input())):\n    (n, z) = map(int, input().split())\n    l1 = list(map(int, input().split()))\n    for i in range(n):\n        l1[i] = l1[i] | z\n    print(max(l1))", "for _ in range(int(input())):\n    (q, z) = map(int, input().split())\n    print(max((x | z for x in list(map(int, input().split())))))", "for _ in range(int(input())):\n    (n, z) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(max((x | z for x in a)))", "t = int(input())\nwhile t:\n    (n, z) = map(int, input().split())\n    a = list(map(int, input().split()))\n    res = a[0]\n    for ele in a:\n        res = max(res, z | ele)\n    print(res)\n    t -= 1", "for _ in range(int(input())):\n    (n, z) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(max((x | z for x in a)))", "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    (n, z) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    lst1 = []\n    for j in lst:\n        lst1.append(j | z)\n    print(max(lst1))", "def main():\n    (n, z) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    mx = 0\n    for i in range(n):\n        mx = max(mx, arr[i] | z)\n    return mx\nfor _ in range(int(input())):\n    print(main())", "t = int(input())\nfor _ in range(t):\n    (n, z) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    k = -float('inf')\n    for i in range(n):\n        k = max(k, arr[i] | z)\n    print(k)", "from collections import *\nfrom functools import lru_cache\n\ndef readline():\n    s = input()\n    return s.split(' ')\n\ndef readlineint():\n    return [*map(int, readline())]\n\ndef readint():\n    s = input()\n    return int(s)\n\ndef testcase():\n    [N, z] = readlineint()\n    t = readlineint()\n    m = t[0] | z\n    for i in range(1, N):\n        m = max(m, t[i] | z)\n    print(m)\nN = readint()\nfor _ in range(N):\n    testcase()", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, z) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    ans = max(arr)\n    for i in range(n):\n        ans = max(ans, arr[i] | z)\n    return ans\nfor _ in range(int(input())):\n    print(solve())", "for _ in range(int(input())):\n    (n, z) = map(int, input().split())\n    arr = (*map(int, input().split()),)\n    print(max((num | z for num in arr)))", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    for i in range(n):\n        arr[i] = arr[i] | x\n        x = x & arr[i]\n    ans = max(arr)\n    print(ans)", "t = int(input())\nfor tt in range(t):\n    (n, z) = map(int, input().split())\n    a = list(map(int, input().split()))\n    m = a[0] | z\n    for i in range(n):\n        m = max(m, a[i] | z)\n    print(m)", "t = int(input())\nfor _ in range(t):\n    (n, z) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        ans = max(a[i] | z, ans)\n    print(ans)", "from os import error\nimport sys\ninput = sys.stdin.readline\nDEBUG = False\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef solve():\n    (n, z) = inlt()\n    datum = inlt()\n    return max([z | d for d in datum])\nq = inp()\nfor t in range(q):\n    ans = solve()\n    print(ans)", "for time in range(int(input())):\n    (n, z) = map(int, input().split())\n    nums = input().split()\n    print(max((int(a) | z for a in nums)))", "t = int(input())\nfor i in range(t):\n    (n, z) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ans = []\n    for i in l:\n        ans.append(i | z)\n    print(max(ans))", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    brr = []\n    for j in range(a):\n        brr.append(arr[j] | b)\n        brr.append(arr[j] & b)\n    print(max(brr))", "class NITorz:\n\n    def findMax(self, n, z, a):\n        result = z | a[0]\n        for i in range(n):\n            result = max(result, z | a[i])\n        print(result)\n        return\nT = int(input())\nwhile T:\n    T -= 1\n    (n, z) = map(int, input().split())\n    a = list(map(int, input().split()))\n    NITorz().findMax(n, z, a)", "I = lambda : [*map(int, input().split())]\nfor _ in ' ' * I()[0]:\n    (_, z) = I()\n    print(max((x | z for x in I())))", "def solve():\n    (n, z) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    m = max(arr)\n    for i in range(len(arr)):\n        arr[i] = arr[i] | z\n    m2 = max(arr)\n    print(max(m, m2))\n    return\nfor i in range(int(input())):\n    solve()", "t = int(input())\nfor i in range(t):\n    (n, z) = map(int, input().split())\n    a = list(map(int, input().split()))\n    maxy = 0\n    for thing in a:\n        if thing | z > maxy:\n            maxy = thing | z\n    print(maxy)", "x = int(input())\nfor i in range(x):\n    A = input().split()\n    n = int(A[0])\n    z = int(A[1])\n    B = input().split()\n    C = [0] * n\n    for j in range(n):\n        C[j] = int(B[j])\n    max = C[0]\n    for k in range(n):\n        if z | C[k] > max:\n            max = z | C[k]\n    print(max)", "T = int(input())\nfor i in range(T):\n    (N, M) = map(int, input().split())\n    K = list(map(int, input().split()))\n    Maxx = 0\n    for i in range(N):\n        Maxx = max(Maxx, K[i] | M)\n    print(Maxx)", "tc = int(input())\nfor t in range(tc):\n    (n, z) = map(int, input().split())\n    a = list(map(int, input().split()))\n    maximum = -1\n    for i in range(n):\n        maximum = max(maximum, a[i] | z)\n    print(maximum)", "m = int(input())\nfor i in range(m):\n    c = input().split(' ')[1]\n    c = int(c)\n    d = input().split(' ')\n    d = [int(k) for k in d]\n    d = [o | c for o in d]\n    print(max(d))", "t = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    ans = 0\n    for i in arr:\n        ans = max(ans, i | m)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    new_list = []\n    (n, z) = list(map(int, input().split(' ')))\n    nums = list(map(int, input().split(' ')))\n    for num in nums:\n        new_list.append(num | z)\n    old_max = max(nums)\n    new_max = max(new_list)\n    print(max(old_max, new_max))", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    l = 0\n    for i in a:\n        temp = i | k\n        l = max(l, temp)\n    print(l)", "import sys\nif sys.argv[0][6:10] == 'arun':\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\ntest = int(input())\nfor rang in range(test):\n    (n, z) = map(int, input().split())\n    li = list(map(int, input().split()))\n    li = [z | p for p in li]\n    print(max(li))", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    (n, z) = [int(i) for i in input().split()]\n    l = [int(i) for i in input().split()]\n    ma = -1\n    for i in l:\n        ma = max(i | z, ma)\n    print(ma)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arrn = []\n    for i in arr:\n        arrn.append(i | x)\n    print(max(arrn))", "import math\nt = int(input())\nwhile t:\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ans = l[0] | m\n    for i in range(1, n):\n        ans = max(ans, l[i] | m)\n    print(ans)\n    t -= 1", "def solution(n, z, arr):\n    res = 0\n    for num in arr:\n        res = max(res, z | num)\n    return res\nT = int(input())\nfor _ in range(T):\n    (n, z) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(solution(n, z, arr))", "t = int(input())\nfor _ in range(t):\n    (n, z) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    mele = max(arr)\n    narr = list(map(lambda x: x | z, arr))\n    mele2 = max(narr)\n    print(max(mele, mele2))", "import sys\nimport collections\nfrom math import ceil, gcd, sqrt, log\nimport bisect\nINF = float('inf')\nmod = 1000000007\n\ndef solve():\n    (n, z) = map(int, input().split())\n    A = list(map(int, input().split()))\n    A.sort(reverse=True)\n    maxi = 0\n    for i in A:\n        maxi = max(maxi, i | z)\n    print(maxi)\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "for i in range(int(input())):\n    (n, z) = map(int, input().split())\n    a = list(map(int, input().split()))\n    maxv = 0\n    for x in a:\n        if x | z > maxv:\n            maxv = x | z\n    print(maxv)", "for i in range(int(input())):\n    (a, b) = map(int, input().strip().split())\n    l = list(map(int, input().strip().split()))\n    x = 0\n    for i in l:\n        if i | b > x:\n            x = i | b\n    print(x)", "t = int(input())\nfor x in range(t):\n    (n, z) = map(int, input().split())\n    a = list(map(int, input().split()))\n    mx = 0\n    for i in range(n):\n        a[i] |= z\n    print(max(a))", "tc = int(input())\nfor t in range(tc):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    mx = 0\n    for j in range(n):\n        cst = arr[j] | k\n        if cst > mx:\n            mx = cst\n    print(mx)", "test_case = int(input())\nfor l in range(test_case):\n    n_z = [int(i) for i in input().split()]\n    z = n_z[1]\n    arr = [int(i) for i in input().split()]\n    for i in range(n_z[0]):\n        temp = arr[i]\n        arr[i] = temp | z\n    maxx = max(arr)\n    print(maxx)", "def solve(A, z):\n    return max([x | z for x in A])\n\ndef read():\n    A = []\n    line = input()\n    ss = line.split(' ')\n    n = int(ss[0])\n    z = int(ss[1])\n    line = input()\n    ss = line.split(' ')\n    for s in ss:\n        A.append(int(s))\n    return (A, z)\n\ndef main():\n    n = int(input())\n    for _ in range(n):\n        (A, z) = read()\n        print(solve(A, z))\n    pass\nmain()", "import math\nt = int(input())\nwhile t:\n    t -= 1\n    (h, i) = input().split()\n    a = int(h)\n    b = int(i)\n    lis = input().split()\n    lis = [int(x) for x in lis]\n    print(max([i | b for i in lis]))", "t = int(input())\nwhile t > 0:\n    inp = input().split()\n    n = int(inp[0])\n    z = int(inp[1])\n    inp = input().split()\n    l = []\n    for i in range(len(inp)):\n        inp[i] = int(inp[i])\n        l.append(inp[i] | z)\n    m = max(l)\n    ind = l.index(m)\n    m = inp[ind]\n    u = -1\n    p = -1\n    while z > 0 and u != m:\n        u = m\n        m = m | z\n        p = z\n        z = u & z\n    print(m)\n    t -= 1", "for i in range(int(input())):\n    in_ = input().split()\n    n = int(in_[0])\n    z = int(in_[1])\n    a = list(map(int, input().split()))\n    max_ = 0\n    for j in a:\n        if j | z > max_:\n            max_ = j | z\n    print(max_)", "t = int(input())\nfor i in range(t):\n    nums = input().split()\n    n = int(nums[0])\n    z = int(nums[1])\n    nums = list(map(int, input().split()))\n    maxtrue = True\n    currMax = max(nums)\n    for value in nums:\n        if value | z > currMax:\n            currMax = value | z\n    print(currMax)", "def max_val_a(a_list, z_val, n):\n    max_a = 0\n    z_list = [z_val]\n    for a in a_list:\n        for z in z_list:\n            a_or_z = a | z\n            a_and_z = a & z\n            if a_or_z > max_a:\n                max_a = a_or_z\n            if a_and_z != z and z not in z_list:\n                z_list.append(a_and_z)\n    return max_a\nt = int(input())\nwhile t:\n    t -= 1\n    (n, z) = map(int, input().split())\n    a_list = list(map(int, input().split()))\n    ans = max_val_a(a_list, z, n)\n    print(ans)", "for i in range(int(input())):\n    (n, a) = map(int, input().split(' '))\n    lis = list(map(int, input().split(' ')))\n    ans = 0\n    for j in lis:\n        ans1 = a | j\n        ans = max(ans, ans1)\n    print(ans)", "t = int(input())\nans = []\nfor e in range(t):\n    (n, z) = map(int, input().split())\n    a = max(map(lambda x: x | z, map(int, input().split())))\n    ans.append(a)\nprint('\\n'.join(map(str, ans)))", "def get_max(a, z):\n    max_value = max(a)\n    for e in a:\n        max_value = max(max_value, e | z)\n    return max_value\nt = int(input())\nfor _ in range(t):\n    (n, z) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(get_max(a, z))", "def solve():\n    (n, z) = map(int, input().split())\n    a = list(map(int, input().split()))\n    mx = 0\n    for i in range(n):\n        a[i] = a[i] | z\n    for i in range(n):\n        mx = max(mx, a[i])\n    print(mx)\n\ndef main():\n    for _ in range(int(input())):\n        solve()\nmain()", "amount_data = int(input())\nfor i in range(amount_data):\n    (n, z) = list(map(int, input().split()))\n    array = list(map(int, input().split()))\n    max_num = max([z | num for num in array])\n    print(max_num)", "for _ in range(int(input())):\n    (n, z) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    l = []\n    for i in lst:\n        l.append(z | i)\n    print(max(l))", "n = int(input())\nfor i in range(n):\n    (b, z) = input().split()\n    b = int(b)\n    z = int(z)\n    a = list(map(int, input().split()))\n    ans = 0\n    for j in range(b):\n        ans = max(ans, a[j] | z)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, z) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(max((arr[i] | z for i in range(n))))", "def solution(n, z, a):\n    for i in range(n):\n        x = a[i]\n        y = z\n        a[i] = x | y\n    return max(a)\nT = int(input())\nfor _ in range(T):\n    (n, z) = map(int, input().split())\n    a = list(map(int, input().split()))\n    out_ = solution(n, z, a)\n    print(out_)", "for _ in range(int(input())):\n    (n, z) = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    ans = -float('inf')\n    for i in arr:\n        ans = max(ans, i | z)\n    print(ans)", "for i in range(int(input())):\n    (n, z) = map(int, input().split())\n    l = sorted(list(map(int, input().split())))\n    d = {item: item | z for item in l}\n    ans = max(d.values())\n    key = list(d.keys())[list(d.values()).index(ans)]\n    nz = key & z\n    nans = nz | d[key]\n    print(max(nans, ans))", "for _ in range(int(input())):\n    (n, z) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    new_li = []\n    for i in arr:\n        new_li.append(i | z)\n    print(max(new_li))", "T = int(input())\nwhile T:\n    T -= 1\n    (N, z) = map(int, input().split())\n    li = list(map(int, input().split()))\n    mx = -float('inf')\n    for ele in li:\n        mx = max(mx, ele | z)\n    print(mx)", "t = int(input())\nwhile t:\n    (n, z) = map(int, input().split())\n    a = list(map(int, input().split()))\n    for i in range(n):\n        a[i] = a[i] | z\n    print(max(a))\n    t -= 1", "for _ in range(int(input())):\n    (n, z) = map(int, input().split())\n    a = [*map(int, input().split())]\n    ans = 0\n    for x in a:\n        ans = max(ans, x | z)\n    print(ans)", "n = int(input())\nfor _ in range(n):\n    (N, z) = tuple(map(int, input().split(' ')))\n    List = list(map(int, input().split(' ')))\n    List1 = []\n    for i in range(N):\n        List1.append(List[i] | z)\n    print(max(List1))", "def orz(arr, z, prev_max):\n    max_value = -1\n    i = -1\n    for (idx, val) in enumerate(arr):\n        if val | z > max_value:\n            max_value = val | z\n            i = idx\n    z &= arr[i]\n    arr[i] = max_value\n    if max_value > prev_max:\n        return orz(arr, z, max_value)\n    else:\n        return max_value\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        (n, z) = list(map(int, input().split()))\n        a = list(map(int, input().split()))\n        print(orz(a, z, -1))\nmain()", "for _ in range(int(input())):\n    (n, z) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in a:\n        ans = max(ans, i | z)\n    print(ans)", "testcases = int(input())\nfor j in range(testcases):\n    (n, x) = [int(x) for x in input().split(' ')]\n    l = [int(x) for x in input().split(' ')]\n    maximum = 0\n    for i in range(len(l)):\n        maximum = max(maximum, l[i] | x)\n    print(maximum)", "for _ in range(int(input())):\n    (n, z) = map(int, input().split())\n    a = list(map(int, input().split()))\n    for i in range(n):\n        a[i] |= z\n        z &= a[i]\n    ans = max(a)\n    print(ans)", "t = int(input())\nfor x in range(t):\n    (n, z) = [int(x) for x in input().split()]\n    arr = [int(x) | z for x in input().split()]\n    p = max(arr)\n    print(p)", "res = []\nfor _ in range(int(input())):\n    (n, z) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    maxEl = a[0] | z\n    for i in range(1, len(a)):\n        maxEl = max(maxEl, a[i] | z)\n    res.append(maxEl)\nfor e in res:\n    print(e)", "for _ in range(int(input())):\n    (n, z) = map(int, input().split())\n    a = list(map(int, input().split()))\n    t = float('-inf')\n    for i in range(len(a)):\n        if a[i] | z > t:\n            t = a[i] | z\n    print(t)", "x = int(input())\nv = []\nc = []\nfor _ in range(x):\n    (n, z) = map(int, input().split())\n    v = list(map(int, input().split()))\n    ans = max(v)\n    for i in range(n):\n        if ans < v[i] | z:\n            ans = v[i] | z\n    c.append(ans)\nfor i in range(len(c)):\n    print(c[i])", "t = int(input())\nfor trials in range(t):\n    (n, z) = input().split()\n    arr = list(map(int, input().split()))\n    n = int(n)\n    z = int(z)\n    curr_max = 0\n    for i in arr:\n        curr_max = max(curr_max, i | z)\n    print(curr_max)", "import sys\nimport math\n\ndef gt():\n    return map(int, sys.stdin.readline().strip().split())\nt = int(input())\nwhile t > 0:\n    (n, a) = gt()\n    x = list(map(int, input().split()))\n    mn = 0\n    for i in range(n):\n        mn = max(mn, x[i] | a)\n    print(mn)\n    t -= 1", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    list1 = [int(i) for i in input().split()]\n    max1 = max(list1)\n    list2 = [int(i) | m for i in list1]\n    max2 = max(list2)\n    print(max(max1, max2))", "t = int(input())\nmax_list = []\nfor _ in range(t):\n    (n, z) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    new = []\n    for i in range(n):\n        new.append(lst[i] | z)\n    max_list.append(max(new))\nfor m in max_list:\n    print(m)", "n = int(input())\nwhile n:\n    (length, number) = map(int, input().split(' '))\n    array = list(map(int, input().split(' ')))\n    maxi = max(array)\n    for i in range(length):\n        if array[i] | number > maxi:\n            maxi = array[i] | number\n    print(maxi)\n    n -= 1", "t = int(input())\nfor i in range(t):\n    (n, z) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    result = 0\n    for i in arr:\n        result = max(result, i | z)\n    print(result)", "n = int(input())\nfor _ in range(n):\n    l = list(map(int, input().split()))\n    t = l[0]\n    z = l[1]\n    s = list(map(int, input().split()))\n    ans = 0\n    for i in range(t):\n        x = s[i] | z\n        if x > ans:\n            ans = x\n    print(ans)", "t = int(input())\nwhile t:\n    (n, z) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    ans = arr[0] | z\n    for i in range(1, n):\n        ans = max(ans, arr[i] | z)\n    print(ans)\n    t -= 1", "import math\n\ndef func():\n    (n, z) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    ans = z\n    for num in arr:\n        ans = max(ans, num | z)\n    print(ans)\ntc = int(input())\nwhile tc > 0:\n    func()\n    tc -= 1", "try:\n    t = int(input())\n    for i in range(t):\n        (n, z) = map(int, input().split())\n        nums = list(map(int, input().split()))[:n]\n        for i in range(len(nums)):\n            nums[i] |= z\n        print(max(nums))\nexcept:\n    pass", "count = int(input())\n\ndef algoth(a, z):\n    a = [x | z for x in a]\n    a.sort()\n    return a[-1]\nbar = []\nfor x in range(count):\n    z = input()\n    z = z.split()\n    z = z[1]\n    z = int(z)\n    a = input()\n    a = a.split()\n    a = list(map(int, a))\n    ans = algoth(a, z)\n    bar.append(ans)\nfor j in bar:\n    print(j)", "for _ in range(int(input())):\n    (n, z) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = []\n    for b in a:\n        ans.append(z | b)\n    print(max(ans))", "T = int(input())\nfor t in range(T):\n    (n, z) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    res = ['0'] * 32\n    best = 0\n    for v in arr:\n        best = max(best, v | z)\n    print(best)", "t = int(input())\nfor k in range(t):\n    (a, z) = map(int, input().split())\n    user = input()\n    user = user.split()\n    for i in range(len(user)):\n        user[i] = int(user[i])\n    ans = -1\n    for i in user:\n        ans = max(ans, i | z)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, z) = map(int, input().split())\n    A = list(map(int, input().split()))\n    for i in range(n):\n        A[i] = A[i] | z\n    mx = A[0]\n    for i in range(n):\n        if A[i] > mx:\n            mx = A[i]\n    print(mx)", "for _ in range(int(input())):\n    (x, y) = map(int, input().split(' '))\n    n = list(map(int, input().split(' ')))\n    z = []\n    for i in n:\n        z.append(i | y)\n        z.append(i & y)\n    print(max(z))", "import sys\ninput1 = sys.stdin.readline\n\ndef inp():\n    return int(input1())\nt = inp()\nfor _ in range(t):\n    input2 = sys.stdin.readline\n    input3 = sys.stdin.readline\n\n    def inlt(input):\n        return list(map(int, input().split()))\n    (n, z) = inlt(input2)\n    nums = inlt(input3)\n    res = 0\n    for p in nums:\n        res = max(res, p | z)\n    print(res)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    li = list(map(int, input().split()))\n    maxi = 0\n    for ele in li:\n        maxi = max(maxi, ele | x)\n    print(maxi)", "T = int(input())\nfor test in range(T):\n    (n, z) = [int(a) for a in input().split()]\n    a = list(map(int, input().split()))\n    maxi = 0\n    for i in a:\n        i = i | z\n        z = i & z\n        maxi = max(maxi, i)\n    print(maxi)", "for _ in range(int(input())):\n    (n, z) = map(int, input().split())\n    (*a,) = map(int, input().split())\n    print(max((z | a[i] for i in range(n))))", "n = int(input())\nfor i in range(n):\n    (x, z) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    for m in range(x):\n        l[m] = l[m] | z\n    print(max(l))", "import sys, os.path\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\nt = int(input())\n\ndef biwise_and(a, b):\n    return a & b\n\ndef biwise_or(a, b):\n    return a | b\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    mx = 0\n    for i in range(n):\n        if biwise_and(a[i], m) > mx:\n            mx = biwise_and(a[i], m)\n        if biwise_or(a[i], m) > mx:\n            mx = biwise_or(a[i], m)\n    print(mx)", "for _ in range(int(input())):\n    (n, z) = map(int, input().split())\n    l = list(map(int, input().split()))\n    p = []\n    for i in l:\n        p.append(i | z)\n    print(max(p))", "def input_n():\n    return int(input())\n\ndef input_n_m():\n    return (int(i) for i in input().split())\n\ndef input_nums():\n    return [int(i) for i in input().split()]\n\ndef solve(z, nums):\n    res = max(nums)\n    for n in nums:\n        res = max(res, z | n)\n    return res\nrows = input_n()\nfor _ in range(rows):\n    (n, z) = input_n_m()\n    nums = input_nums()\n    print(solve(z, nums))", "t = int(input())\nwhile t:\n    (n, z) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = []\n    res1 = 0\n    res2 = 0\n    for i in a:\n        b.append(i | z)\n        b.append(i & z)\n    print(max(b))\n    t -= 1", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = list(map(int, input().split()))\n    max1 = -9999\n    for i in c:\n        m = i & b\n        n = i | b\n        if m > max1:\n            max1 = m\n        if n > max1:\n            max1 = n\n    print(max1)"]