["def main():\n    mod = 1000000007\n\n    def solve(n):\n        ret = 1\n        for f in range(3, n):\n            ret *= f\n            if ret >= mod:\n                ret %= mod\n        return ret\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        print(solve(2 * n + 1))\nimport sys, threading\ninput = sys.stdin.readline\nthread = threading.Thread(target=main)\nthread.start()\nthread.join()", "def half(x):\n    p = 1\n    for i in range(3, x + 1):\n        p *= i\n        p %= 1000000007\n    return p\nfor _ in range(int(input())):\n    n = int(input())\n    print(half(2 * n))", "import math\n\ndef intlist():\n    return [int(i) for i in input().split(' ')]\n\ndef stringlist():\n    return input().split(' ')\n\ndef yes(t):\n    if t:\n        return 'YES'\n    return 'NO'\n\ndef printjoin(l):\n    l = [str(i) for i in l]\n    return ' '.join(l)\n\ndef power_of_two(n):\n    b = bin(n)[2:]\n    return int(b) == 10 ** (len(b) - 1)\n\ndef bit_count(n):\n    return bin(n).count('1')\n\ndef solve():\n    n = int(input())\n    ans = 1\n    for i in range(3, 2 * n + 1):\n        ans = ans * i % 1000000007\n    return ans\nt = input()\nfor tt in range(int(t)):\n    print(solve())", "def solve():\n    n = int(input())\n    res = 1\n    for j in range(3, 2 * n + 1):\n        res *= j\n        res %= 1000000007\n    print(res)\nt = int(input())\nwhile t > 0:\n    t -= 1\n    solve()", "def f(a):\n    s = 1\n    for i in range(3, a + 1):\n        s *= i\n        s %= 1000000007\n    return s\nfor i in range(int(input())):\n    x = int(input())\n    print(f(x * 2))", "def modFact(n, m):\n    result = 1\n    for i in range(3, n + 1):\n        result = result * i % m\n    return result\nm = 1000000007\nfor t in range(int(input())):\n    n = int(input())\n    d = modFact(2 * n, m)\n    print(d)", "import sys\ninput = sys.stdin.readline\n\nclass Node:\n\n    def __init__(self, value) -> None:\n        self.value = value\n        self.next = None\n\n    @staticmethod\n    def print_list(head):\n        curr = head\n        while curr != None:\n            print(curr.value, end=' ')\n            curr = curr.next\n        print('')\nimport math\n\ndef modInverse(b, m):\n    g = math.gcd(b, m)\n    if g != 1:\n        return -1\n    else:\n        return pow(b, m - 2, m)\n\ndef modDivide(a, b, m):\n    a = a % m\n    inv = modInverse(b, m)\n    return inv * a % m\nmod = 10 ** 9 + 7\n\ndef fact(n):\n    x = 1\n    for k in range(1, 2 * n + 1):\n        x = x * k % mod\n    return x\n\ndef main():\n    n = int(input())\n    print(modDivide(fact(n), 2, mod))\nfor _t in range(int(input())):\n    main()", "def L():\n    return list(map(int, input().split()))\n\ndef I():\n    return int(input())\n\ndef solve():\n    n = I()\n    if n == 1:\n        print(1)\n    elif n == 2:\n        print(12)\n    else:\n        ans = 1\n        for i in range(3, 2 * n + 1):\n            ans *= i\n            ans %= 1000000007\n        print(ans)\nfor _ in range(int(input())):\n    solve()", "def f(x):\n    x *= 2\n    a = 1\n    for i in range(3, x + 1):\n        a *= i % (10 ** 9 + 7)\n        a %= 10 ** 9 + 7\n    return a\nt = int(input())\nfor i in range(t):\n    print(f(int(input())))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n == 1:\n        print(1)\n    else:\n        curr = 1\n        for i in range(2, n + 1):\n            curr = curr * 2 * i * (2 * i - 1)\n            curr %= 1000000007\n        print(curr % 1000000007)", "def factorial(n):\n    product = 1\n    mult = 1000000007\n    for i in range(3, 2 * n + 1):\n        product = product * i % mult\n    return product\ninp = int(input())\nfor k in range(inp):\n    inp1 = int(input())\n    print(factorial(inp1))", "def fact(n):\n    f = 1\n    for i in range(3, n + 1):\n        f = f * i % 1000000007\n    return f\nt = int(input())\nfor o in range(t):\n    n = input()\n    n = int(n)\n    n *= 2\n    print(fact(n))", "t = int(input())\nfor i in range(t):\n    num = int(input())\n    y = 1000000000.0 + 7\n    total = 1\n    for i in range(3, 2 * num + 1):\n        total = total * i % y\n    total = total % y\n    print(int(total))", "def factorial(n):\n    m = 1000000007\n    f = 1\n    for i in range(3, 2 * n + 1):\n        f = f * i % m\n    return f\nfor i in range(int(input())):\n    print(factorial(int(input())))", "import math\n\ndef modInverse(b, m):\n    g = math.gcd(b, m)\n    if g != 1:\n        return -1\n    else:\n        return pow(b, m - 2, m)\n\ndef modDivide(a, b, m):\n    a = a % m\n    inv = modInverse(b, m)\n    if inv == -1:\n        assert False, 'Division not defined'\n    else:\n        return inv * a % m\n\ndef fact(n):\n    m = 10 ** 9 + 7\n    f = 1\n    for i in range(2, n + 1):\n        f = f * i % m\n    return modDivide(f, 2, m)\nt = int(input().strip())\ninputs = []\nfor _ in range(t):\n    n = int(input().strip())\n    inputs.append(n)\nfor n in inputs:\n    print(fact(2 * n))", "m = 10 ** 9 + 7\n\ndef f(n):\n    zxc = 1\n    for i in range(3, n + 1):\n        zxc = zxc * i % m\n    return zxc\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(f(2 * n))", "def factorial(n):\n    mod = 1000000007\n    good = 1\n    for i in range(3, 2 * n + 1):\n        good = good * i % mod\n    return good\nfor i in range(int(input())):\n    a = int(input())\n    print(factorial(a))", "s = int(input())\nfor i in range(s):\n    n = int(input())\n    res = 1\n    for j in range(3, 2 * n + 1):\n        res = res * j % (10 ** 9 + 7)\n    print(res)", "def main():\n    mod = 1000000007\n\n    def solve(n):\n        ret = 1\n        for f in range(3, n):\n            ret *= f\n            ret %= mod\n        return ret\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        print(solve(2 * n + 1))\nimport sys, threading\ninput = sys.stdin.readline\nthread = threading.Thread(target=main)\nthread.start()\nthread.join()", "def main():\n    mod = 1000000007\n\n    def solve(n):\n        ret = 1\n        for f in range(3, n):\n            ret *= f\n            if ret >= mod:\n                ret %= mod\n        return ret\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        print(solve((n << 1) + 1))\nimport sys, threading\ninput = sys.stdin.readline\nthread = threading.Thread(target=main)\nthread.start()\nthread.join()", "MOD = 10 ** 9 + 7\n\ndef fact(a):\n    ans = 1\n    for i in range(1, a + 1):\n        ans *= i\n        ans %= MOD\n    return ans\ninv2 = pow(2, MOD - 2, MOD)\nfor _ in range(int(input())):\n    n = int(input())\n    a = fact(2 * n)\n    print(a * inv2 % MOD % MOD)", "for i in range(int(input())):\n    n = int(input())\n    d = 1000000007\n    l = 1\n    for k in range(1, 2 * n + 1):\n        l = l % d * k\n    print(l // 2 % d)", "t = int(input())\nfor i in range(t):\n    a = int(input())\n    s = 1\n    for j in range(3, 2 * a + 1):\n        s = s * j % 1000000007\n    print(s)", "mod = 1000000007\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    ans = 500000004\n    for i in range(2, 2 * n + 1):\n        ans = ans * i % mod\n    print(ans)", "for _ in [0] * int(input()):\n    n = int(input())\n    s = 1\n    for i in range(3, 2 * n + 1):\n        s = s * i % 1000000007\n    print(s)", "def solve(n):\n    ans = 1\n    for i in range(2 * n, 2, -1):\n        ans = ans * i % 1000000007\n    return ans\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print(solve(n))", "def solve(n):\n    ans = 1\n    for i in range(2 * n, 2, -1):\n        ans = ans * i % 1000000007\n    return ans\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print(solve(n))", "def factorial(n):\n    res = 1\n    for i in range(3, n + 1):\n        res = res * i % 1000000007\n    return res\nfor _ in range(int(input())):\n    n = int(input())\n    n = n * 2\n    print(factorial(n))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    f = 1\n    for i in range(3, 2 * n + 1):\n        f = f * i % 1000000007\n    print(f)\n    t = t - 1", "for _ in range(int(input())):\n    n = int(input())\n    a = 1\n    for i in range(3, 2 * n + 1):\n        a = a * i % (10 ** 9 + 7)\n    print(a)", "import math\n\ndef solve(n):\n    ans = 1 / 2\n    for i in range(1, 2 * n + 1):\n        ans = ans * i % 1000000007\n    return int(ans)\nnum = int(input())\nfor n in range(num):\n    n = input()\n    print(solve(int(n)))", "for _ in range(int(input())):\n\n    def fact(x, p=1000000007):\n        result = 1\n        for i in range(2, x):\n            result = result * i % p\n        result = result * (x // 2) % p\n        return result\n    n = int(input())\n    print(fact(2 * n))", "p = 1000000007\n\ndef fact_mod_p(n):\n    acc = 1\n    for i in range(3, n + 1):\n        acc = acc * i % p\n    return acc\n\ndef manipulation(n):\n    print(fact_mod_p(2 * n))\nfor i in range(int(input())):\n    manipulation(int(input()))", "def fc(k):\n    m = 1000000007\n    f = 1\n    for i in range(3, 2 * k + 1):\n        f = f * i % m\n    print(f)\ntes = int(input())\nwhile tes > 0:\n    k = int(input())\n    fc(k)\n    tes -= 1", "t = int(input())\nwhile t:\n    num = int(input())\n    res = 1\n    mod = 1000000000.0 + 7\n    for i in range(2 * num, 2, -1):\n        res = res * i % mod\n    res = res % mod\n    print(round(res))\n    t = t - 1", "def factorial(n):\n    mod = 1000000007\n    good = 1\n    for i in range(3, 2 * n + 1):\n        good = good * i % mod\n    return good\nfor i in range(int(input())):\n    a = int(input())\n    print(factorial(a))", "def fact(n):\n    mod = 1000000007\n    funfact = 1\n    for i in range(3, 2 * n + 1):\n        funfact = funfact * i % mod\n    return funfact\nfor i in range(int(input())):\n    a = int(input())\n    print(fact(a))", "t = int(input())\nfor _ in range(t):\n    (n, ans, m) = (int(input()), 1, 1000000000.0 + 7)\n    for i in range(2 * n, 2, -1):\n        ans = ans * i % m\n    print(int(ans % m))", "mod = 10 ** 9 + 7\n\ndef fact(n):\n    f = 1\n    for i in range(3, n + 1):\n        f = f * i % mod\n    return f\nfor _ in range(int(input())):\n    a = int(input()) * 2\n    print(fact(a))", "t = int(input())\nfor j in range(0, t):\n    n = int(input())\n    s = n\n    for i in range(2, n * 2):\n        s = s * i % 1000000007\n    print(s)", "def f(n):\n    s = 1\n    for i in range(3, n + 1):\n        s *= i\n        s %= 10 ** 9 + 7\n    return s\nfor _ in range(int(input())):\n    n = int(input())\n    print(f(n * 2))", "def countPermutations(n):\n    res = 1\n    mod = 1000000007\n    for i in range(3, n + 1):\n        res = res * i % mod\n    return res\nnTests = int(input())\nfor _ in range(nTests):\n    n = int(input())\n    print(countPermutations(2 * n))", "def f(n):\n    pmod = 7 + 10 ** 9\n    ss = 1\n    for i in range(3, n + 1):\n        ss = ss * i % pmod\n    return ss\nt = int(input())\nl = []\nfor k in range(t):\n    n = int(input())\n    l.append(f(2 * n))\nfor j in l:\n    print(j)", "import sys\ninput = sys.stdin.readline\nprint = sys.stdout.write\nfor _ in range(int(input())):\n    a = int(input())\n    ans = 1\n    for i in range(3, a * 2 + 1):\n        ans = ans * i % 1000000007\n    print(str(ans) + '\\n')", "from math import factorial as f\nMOD = 10 ** 9 + 7\nt = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    v = 1\n    for i in range(3, n * 2 + 1):\n        v = v * i % MOD\n    print(v)", "def main():\n    mod = 1000000007\n    fibs = [1 for _ in range(3)]\n\n    def calculate(x):\n        for i in range(3, x):\n            y = fibs[-1] * i\n            if y >= mod:\n                y %= mod\n            fibs.append(y)\n\n    def solve(n):\n        return fibs[n]\n    t = int(input())\n    vals = []\n    mx = -1\n    for _ in range(t):\n        n = int(input())\n        if n > mx:\n            mx = n\n        vals.append(n)\n    calculate(2 * mx + 2)\n    for v in vals:\n        print(solve(2 * v))\nimport sys, threading\ninput = sys.stdin.readline\nthread = threading.Thread(target=main)\nthread.start()\nthread.join()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = 1\n    k = 10 ** 9 + 7\n    for i in range(3, 2 * n + 1):\n        s = s * i % k\n    print(s % k)", "def fact_by_2(n):\n    modul = 10 ** 9 + 7\n    prod = 1\n    i = 3\n    while i <= n:\n        prod = prod * i\n        if prod > modul:\n            prod = prod % modul\n        i = i + 1\n    return prod\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        m = fact_by_2(2 * n)\n        print(m)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    ans = n\n    for i in range(2, 2 * n):\n        ans *= i\n        ans %= 1000000000.0 + 7\n    print(int(ans))", "for i in range(int(input())):\n    a = int(input())\n    c = 1\n    for i in range(3, 2 * a + 1):\n        c = c * i % 1000000007\n    print(c)", "for _ in ' ' * int(input()):\n    n = int(input())\n    a = 1\n    for i in range(3, 2 * n + 1):\n        a = a * i % (10 ** 9 + 7)\n    print(a)", "for t in range(int(input())):\n    n = int(input())\n    answer = 1\n    for i in range(3, n * 2 + 1):\n        answer *= i\n        answer %= 1000000007\n    print(answer)", "for _ in range(int(input())):\n    n = int(input())\n    p = 1\n    for i in range(3, n * 2 + 1):\n        p = p * i % 1000000007\n    print(p)", "a = int(input())\nfor i in range(1, a + 1):\n    a = int(input())\n    k = 1\n    for i in range(1, 2 * a + 1):\n        k = k * i % 2000000014\n    k = int(k / 2 % 1000000007)\n    print(k)", "import sys\nMOD = 1000000007\nT = int(sys.stdin.readline())\nfor _ in range(T):\n    N = int(sys.stdin.readline())\n    answer = 1\n    for i in range(1, 2 * N + 1):\n        answer = answer * i % MOD\n    answer = answer * pow(2, -1, MOD) % MOD\n    print(answer)", "import sys\nMOD = 1000000007\nT = int(sys.stdin.readline())\nfor _ in range(T):\n    N = int(sys.stdin.readline())\n    answer = 1\n    for i in range(1, 2 * N + 1):\n        answer = answer * i % MOD\n    answer = answer * pow(2, -1, MOD) % MOD\n    print(answer)", "from sys import stdin\n\ndef read_input():\n    n = int(stdin.readline())\n    return n\n\ndef modFact(n, p):\n    if n >= p:\n        return 0\n    result = 1\n    for i in range(1, n + 1):\n        if i == 2:\n            continue\n        result = result * i % p\n    return result\n\ndef solve(n):\n    answer = modFact(2 * n, 1000000007)\n    return answer\n\ndef main():\n    t = int(stdin.readline())\n    for _ in range(t):\n        n = read_input()\n        answer = solve(n)\n        print(answer)\nmain()", "from sys import stdin\n\ndef A():\n    t = int(input())\n    while t:\n        t -= 1\n        n = int(input())\n        mod = 10 ** 9 + 7\n        res = 1\n        l = 3\n        r = 4\n        for i in range(1, n):\n            res *= l * r % mod\n            res %= mod\n            l += 2\n            r += 2\n        print(res)\nA()", "for _ in range(int(input())):\n    n = int(input())\n    M = 1000000007\n    f = 1\n    n = n * 2\n    for i in range(3, n + 1):\n        f = f * i % M\n    print(f)", "mod = 1000000007\n\ndef solve(n):\n    mul_ = 1\n    for i in range(3, 2 * n + 1):\n        mul_ = mul_ * i % mod\n    return mul_\nfor _ in range(int(input())):\n    n = int(input())\n    print(solve(n))", "def read_nums():\n    return [int(x) for x in input().split()]\n\ndef solve():\n    (n,) = read_nums()\n    res = 1\n    for i in range(3, 2 * n + 1):\n        res = res * i % 1000000007\n    print(res)\n\ndef main():\n    (t,) = read_nums()\n    for _ in range(t):\n        solve()\nmain()", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    (c, m) = (1, pow(10, 9) + 7)\n    for i in range(2 * n, 2, -1):\n        c = c * i % m\n    c = c % m\n    print(c)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    totalPerms = 0.5\n    for i in range(1, 2 * n + 1):\n        totalPerms = totalPerms * i % 1000000007\n    print(int(totalPerms))", "MOD = 1000000007\n\ndef fact(n):\n    temp = 1\n    for x in range(1, n + 1):\n        temp %= MOD\n        temp *= x\n    return temp\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print(str(fact(2 * n) // 2 % MOD))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    ans = 1\n    mod = 1000000007\n    for i in range(2 * n, 2, -1):\n        ans = ans * i % mod\n    ans = ans % mod\n    print(ans)\n    t = t - 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ans = 1\n    for i in range(3, 2 * n + 1):\n        ans = ans * i % (10 ** 9 + 7)\n    print(ans)", "def solve():\n    n = int(input())\n    ans = 1\n    mod = 10 ** 9 + 7\n    for i in range(1, 2 * n + 1):\n        if i == 2:\n            continue\n        ans = ans * i % mod\n    print(ans)\nt = int(input())\nfor i in range(t):\n    solve()", "for i in range(int(input())):\n    aa = int(input())\n    ba = 1\n    ca = 1000000000.0 + 7\n    for j in range(2 * aa, 2, -1):\n        ba = ba * j % ca\n    ba = ba % ca\n    print(int(ba))", "def factorial(n):\n    for i in range(3, n):\n        n = n * i\n        n %= 1000000007\n    return n\nfor i in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(1)\n    else:\n        print(factorial(2 * n))", "def fact(neno):\n    monkey = 1000000007\n    global ff\n    fragshooter = 1\n    for i in range(3, 2 * neno + 1):\n        fragshooter = fragshooter * i % monkey\n    return fragshooter\nfor i in range(int(input())):\n    aquaman = int(input())\n    print(fact(aquaman))", "b = int(input())\nc = []\nfor i in range(b):\n    c.append(int(input()))\nfor j in range(b):\n    s = 1\n    for k in range(1, 2 * c[j] + 1):\n        s = s * k % 1000000007\n    print(s * 500000004 % 1000000007)", "def factorial(n):\n    mod = 1000000007\n    fact_fun = 1\n    for i in range(3, 2 * n + 1):\n        fact_fun = fact_fun * i % mod\n    return fact_fun\nfor i in range(int(input())):\n    a = int(input())\n    print(factorial(a))", "t = int(input())\n\ndef factorial(n):\n    M = 1000000007\n    f = 1\n    for i in range(3, n + 1):\n        f = f * i % M\n    return f\nfor i in range(t):\n    a = int(input())\n    a *= 2\n    print(factorial(a))", "a = int(input())\nfor i in range(a):\n    b = int(input())\n    c = 1000000007\n    d = 1\n    for j in range(3, 2 * b + 1):\n        d = d * j % c\n    print(d)", "for _ in range(int(input())):\n    bhanu = int(input())\n    ans = 1\n    modull = 1000000007\n    i = bhanu * 2\n    while i > 2:\n        ans = ans * i % modull\n        i -= 1\n    ans = ans % modull\n    print(ans)", "loop = int(input())\nmd = 1000000007\nfor i in range(loop):\n    n = int(input())\n    res = 1\n    for i in range(2 * n, 2, -1):\n        res = res * i % md\n    res = res % md\n    print(res)", "import math\nnum = int(input())\ntests = []\nfor i in range(num):\n    tests.append(int(input()))\nfor i in range(num):\n    test = tests[i]\n    val = 1\n    for i in range(1, 2 * test + 1):\n        val = val * i % (2 * 1000000007)\n    print(val // 2)", "def f(a):\n    s = 1\n    for i in range(3, a + 1):\n        s *= i\n        s %= 1000000007\n    return s\nfor i in range(int(input())):\n    x = int(input())\n    print(f(2 * x))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    m = 10 ** 9 + 7\n    res = 1\n    for j in range(2 * n, 2, -1):\n        res = res * j % m\n    print(res % m)", "for x in range(0, int(input())):\n    n = int(input())\n    p = 1\n    for i in range(3, 2 * n + 1):\n        p = p * i % (10 ** 9 + 7)\n    print(p)", "for _ in range(int(input())):\n    n = int(input())\n    n = 2 * n\n    factorial = 1\n    for i in range(1, n + 1):\n        if i == 2:\n            continue\n        factorial = factorial * i % 1000000007\n    print(factorial)", "for _ in range(int(input())):\n    n = int(input())\n    a = 1\n    for i in range(3, 2 * n + 1):\n        a = a * i % (10 ** 9 + 7)\n    print(a)", "for t in range(int(input())):\n    n = int(input())\n    y = 1\n    for k in range(3, 2 * n + 1):\n        y = y * k % 1000000007\n    print(y)", "mod = 10 ** 9 + 7\n\ndef f(n):\n    ans = 1\n    for i in range(3, n + 1):\n        ans *= i\n        ans %= mod\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    print(f(2 * n))", "for _ in range(int(input())):\n    n = int(input())\n    f = 1\n    k = 10 ** 9 + 7\n    for i in range(3, 2 * n + 1):\n        f = f * i % k\n    print(f % k)", "t = int(input())\nmod = 1000000007\nfor i in range(0, t):\n    n = int(input())\n    ans = 1\n    for j in range(3, 2 * n + 1):\n        ans = ans * j % mod\n    print(ans)", "for i in range(int(input())):\n    n = 2 * int(input())\n    fact = 1\n    for i in range(3, n + 1):\n        fact = fact * i % 1000000007\n    print(fact)", "for _ in range(int(input())):\n    n = 2 * int(input())\n    f = 1\n    for i in range(3, n + 1):\n        f = f * i % (10 ** 9 + 7)\n    print(f)", "inp1 = int(input())\nfor i in range(inp1):\n    n = int(input())\n    a = 1000000007\n    b = 1\n    for j in range(3, 2 * n + 1):\n        b = b * j % a\n    print(b)", "from math import factorial\nn = int(input())\nfor i in range(n):\n    a = int(input())\n    s = 1\n    for i in range(3, 2 * a + 1):\n        s *= i\n        s %= 10 ** 9 + 7\n    print(s)", "(test, mod) = (int(input()), 1000000007)\nfor _ in range(test):\n    n = int(input())\n    val = 1\n    for i in range(3, 2 * n + 1):\n        val = val * i % mod\n    print(val)", "dp = [1] * 100001\nfor i in range(2, 100001):\n    dp[i] = dp[i - 1] * (2 * i - 1) * (2 * i) % 1000000007\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print(dp[n])", "for _ in range(int(input())):\n    n = int(input())\n    mod = 10 ** 9 + 7\n    s = 1\n    for i in range(3, 2 * n + 1):\n        s *= i\n        s %= mod\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    a = 1\n    for i in range(3, 2 * n + 1):\n        a = a * i % (10 ** 9 + 7)\n    print(a)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ans = 1\n    for k in range(3, 2 * n + 1):\n        ans *= k\n        ans %= 10 ** 9 + 7\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    p = 1\n    for i in range(3, 2 * n + 1):\n        p *= i\n        p %= 1000000007\n    print(p)", "for _ in range(int(input())):\n    a = int(input())\n    f = 1\n    k = 10 ** 9 + 7\n    for i in range(3, 2 * a + 1):\n        f = f * i % k\n    print(f % k)", "for _ in range(int(input())):\n    n = int(input())\n    c = 1\n    limit = 10 ** 9 + 7\n    for i in range(3, 2 * n + 1):\n        c = c * i % limit\n    print(c % limit)"]