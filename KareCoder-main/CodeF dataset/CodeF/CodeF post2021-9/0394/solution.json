["import sys\n\ndef solve():\n    T = int(sys.stdin.readline().rstrip())\n    for _ in range(T):\n        N = int(sys.stdin.readline().rstrip())\n        S = list(map(int, sys.stdin.readline().rstrip().split(' ')))\n        directions = sys.stdin.readline().rstrip()\n        R = []\n        B = []\n        for i in range(N):\n            if directions[i] == 'R':\n                R.append(S[i])\n            else:\n                B.append(S[i])\n        R.sort(reverse=True)\n        B.sort()\n        answer = 'YES'\n        for i in range(len(B)):\n            if i + 1 > B[i]:\n                answer = 'NO'\n                break\n        for i in range(len(R)):\n            if N - i < R[i]:\n                answer = 'NO'\n                break\n        print(answer)\nsolve()", "import sys\nimport bisect\nimport math\ninp = sys.stdin.readline\ninput = lambda : inp().strip()\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = input()\n    R = [a[i] for i in range(n) if s[i] == 'R']\n    B = [a[i] for i in range(n) if s[i] == 'B']\n    R.sort()\n    B.sort()\n    b = 0\n    for i in B:\n        if i >= b + 1:\n            b += 1\n        else:\n            return 'NO'\n    for i in R:\n        if i <= b + 1:\n            b += 1\n        else:\n            return 'NO'\n    return 'YES'\nt = int(input())\nfor _ in range(t):\n    print(solve())", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\n\ndef solve():\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = []\n    R = []\n    for (i, c) in enumerate(input()):\n        if c == 'B':\n            B.append(A[i])\n        else:\n            R.append(A[i])\n    B.sort()\n    R.sort(reverse=True)\n    for (i, b) in enumerate(B):\n        if b < i + 1:\n            print('NO')\n            return\n    for (i, r) in enumerate(R):\n        if r > N - i:\n            print('NO')\n            return\n    print('YES')\nfor _ in range(int(input())):\n    solve()", "import sys\nDEBUG_ENABLED = True\n\ndef debug(*args, **kwargs):\n    if DEBUG_ENABLED:\n        print(*args, file=sys.stderr, **kwargs)\n\ndef solve_case(case_num: int) -> str:\n    n = int(input())\n    array = list(map(int, input().split()))\n    barvs = input()\n    red = []\n    blue = []\n    for i in range(n):\n        if barvs[i] == 'R':\n            red.append(array[i])\n        else:\n            blue.append(array[i])\n    red.sort(reverse=True)\n    blue.sort(reverse=False)\n    for i in range(len(red)):\n        if n - red[i] < i:\n            return 'NO'\n    for i in range(len(blue)):\n        if blue[i] <= i:\n            return 'NO'\n    return 'YES'\nT = int(input())\nfor tt in range(T):\n    result = solve_case(tt + 1)\n    print(result)\npass", "def cf_753D(numbers: list, colors: list):\n    blues = []\n    reds = []\n    for (num, color) in zip(numbers, colors):\n        if color == 'B':\n            blues.append(num)\n        else:\n            reds.append(num)\n    blues.sort(reverse=True)\n    reds.sort(reverse=True)\n    temp = len(blues)\n    for i in range(1, len(blues) + 1):\n        num = blues.pop()\n        if num < i:\n            return False\n    for i in range(temp + 1, len(numbers) + 1):\n        num = reds.pop()\n        if num > i:\n            return False\n    return True\nfor _ in range(int(input())):\n    input()\n    print('YES' if cf_753D(list(map(int, input().split())), list(input())) else 'NO')", "import sys\nN = int(200000.0 + 5)\nsys.setrecursionlimit(N)\nn = int()\n\ndef charming():\n    global n\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = input()\n    red = list()\n    blue = list()\n    for i in range(n):\n        if s[i] == 'R':\n            red.append(a[i])\n        else:\n            blue.append(a[i])\n    red.sort(reverse=True)\n    blue.sort()\n    p1 = n + 1\n    p2 = 0\n    ok = True\n    for i in red:\n        if p1 <= i:\n            ok = False\n            break\n        else:\n            p1 -= 1\n    for i in blue:\n        if p2 >= i:\n            ok = False\n            break\n        else:\n            p2 += 1\n    print('YES' if ok == True and p1 == p2 + 1 else 'NO')\nfor t in range(int(input())):\n    charming()", "def maxmin(A, D, C):\n    stat = False\n    E = {'B': [], 'R': []}\n    for i in range(A):\n        if C[i] == 'B':\n            E['B'].append(D[i])\n        else:\n            E['R'].append(D[i])\n    E['B'].sort()\n    E['R'].sort()\n    cur = 1\n    for j in E['B']:\n        if j >= cur:\n            cur += 1\n        else:\n            stat = True\n            break\n    for k in E['R']:\n        if k <= cur:\n            cur += 1\n        else:\n            stat = True\n            break\n    if not stat:\n        return 'YES'\n    else:\n        return 'NO'\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    X = list(map(int, input().split()))\n    y = str(input())\n    Y = list(y.strip())\n    print(maxmin(N, X, Y))", "import sys\n\ndef input():\n    return sys.stdin.readline().rstrip()\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    col = input()\n    (blu, red) = ([], [])\n    for i in range(n):\n        if col[i] == 'B':\n            blu.append(lst[i])\n        else:\n            red.append(lst[i])\n    blu.sort()\n    red.sort(reverse=True)\n    if blu and blu[0] < 1:\n        print('NO')\n        continue\n    if red and red[0] > n:\n        print('NO')\n        continue\n    (tmp, cur) = (0, 1)\n    flag = False\n    if blu:\n        for num in blu:\n            if 1 <= num <= n:\n                tmp += 1\n                if tmp > num:\n                    flag = True\n                    break\n    if flag:\n        print('NO')\n        continue\n    (tmp, cur) = (0, 1)\n    if red:\n        for num in red:\n            if 1 <= num <= n:\n                tmp += 1\n                if tmp > n - num + 1:\n                    flag = True\n                    break\n    if flag:\n        print('NO')\n        continue\n    print('YES')", "def solve():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    colors = list(input())\n    r = []\n    b = []\n    for i in range(n):\n        if colors[i] == 'B':\n            b.append(a[i])\n        else:\n            r.append(a[i])\n    d = len(b)\n    i = d - 1\n    j = 0\n    r.sort()\n    b.sort()\n    for number in range(d, 0, -1):\n        if b[i] >= number:\n            i -= 1\n        else:\n            return 'NO'\n    for number in range(d + 1, n + 1):\n        if r[j] <= number:\n            j += 1\n        else:\n            return 'NO'\n    return 'YES'\nt = int(input())\nfor _ in range(t):\n    print(solve())", "def solve(length, a, cols):\n    reds = []\n    blues = []\n    for i in range(length):\n        if cols[i] == 'R':\n            reds.append(a[i])\n        else:\n            blues.append(a[i])\n    reds = sorted(reds, reverse=True)\n    blues = sorted(blues)\n    for i in range(len(reds)):\n        if length - reds[i] < i:\n            return 'NO'\n    for i in range(len(blues)):\n        if blues[i] < i + 1:\n            return 'NO'\n    return 'YES'\nt = int(input())\nfor _ in range(t):\n    length = int(input())\n    a = list(map(int, input().split()))\n    cols = input()\n    res = solve(length, a, cols)\n    print(res)", "def check(arr):\n    c = [1] * len(arr)\n    for i in arr:\n        if 0 <= i - 1 < len(arr) and c[i - 1] == 1:\n            c[i - 1] -= 1\n        else:\n            return False\n    return True\n\ndef checkB(arr):\n    arr.sort()\n    for (ind, i) in enumerate(arr):\n        if i < ind + 1:\n            return False\n    return True\n\ndef checkR(arr, pad):\n    arr.sort()\n    for (ind, i) in enumerate(arr):\n        if i > ind + 1 + pad:\n            return False\n    return True\n\ndef solve(n, p, c):\n    b = []\n    r = []\n    bc = rc = 0\n    if check(p):\n        return 'YES'\n    else:\n        for i in range(n):\n            if c[i] == 'B':\n                b.append(p[i])\n                bc += 1\n            else:\n                r.append(p[i])\n                rc += 1\n        if bc == n:\n            if checkB(p):\n                return 'YES'\n        elif rc == n:\n            if checkR(p, 0):\n                return 'YES'\n        elif checkB(b) and checkR(r, bc):\n            return 'YES'\n    return 'NO'\nt = int(input())\nfor test in range(t):\n    n = int(input())\n    p = list(map(int, input().split()))\n    c = input()\n    print(solve(n, p, c))", "def fun():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        colors = input()\n        (blue, red) = ([], [])\n        for i in range(n):\n            if colors[i] == 'B':\n                blue.append(arr[i])\n            else:\n                red.append(arr[i])\n        blue.sort()\n        red.sort()\n        flag = True\n        for i in range(len(blue)):\n            if blue[i] < i + 1:\n                flag = False\n                break\n        k = len(blue)\n        for j in range(len(red)):\n            if red[j] > k + 1:\n                flag = False\n                break\n            k += 1\n        if flag:\n            print('YES')\n        else:\n            print('NO')\nfun()", "import sys\ninput = sys.stdin.readline\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = input().strip()\n    (b, r) = ([], [])\n    for i in range(n):\n        if c[i] == 'R':\n            r.append(a[i])\n        else:\n            b.append(a[i])\n    b.sort()\n    r.sort()\n    x = 1\n    f = True\n    for i in b:\n        if x > i:\n            f = False\n        x += 1\n    for i in r:\n        if x < i:\n            f = False\n        x += 1\n    print('YES' if f else 'NO')\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = input()\n\n    def fun():\n        r = []\n        b = []\n        for i in range(n):\n            if s[i] == 'B':\n                b.append(l[i])\n            else:\n                r.append(l[i])\n        b.sort()\n        r.sort()\n        m = len(b)\n        for i in range(1, m + 1):\n            if b[i - 1] < i:\n                return False\n        for i in range(len(r)):\n            if r[i] > m + 1 + i:\n                return False\n        return True\n    if fun():\n        print('YES')\n    else:\n        print('NO')", "def blue_red_permutation(n, a, s):\n    reds = []\n    blues = []\n    for i in range(n):\n        if s[i] == 'B':\n            blues += [a[i]]\n        else:\n            reds += [a[i]]\n    blues.sort()\n    for i in range(1, len(blues) + 1):\n        if blues[i - 1] < i:\n            print('NO')\n            return\n    reds.sort(reverse=True)\n    for i in range(len(reds)):\n        if reds[i] > n - i:\n            print('NO')\n            return\n    print('YES')\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = input()\n    blue_red_permutation(n, a, s)", "t = int(input())\n\ndef solve():\n    n = int(input())\n    nums = list(map(int, input().split()))\n    color = list(input())\n    redNums = []\n    blueNums = []\n    for i in range(n):\n        if color[i] == 'R':\n            redNums.append(nums[i])\n        else:\n            blueNums.append(nums[i])\n    redNums.sort()\n    blueNums.sort()\n    for (idx, val) in enumerate(blueNums):\n        if val < idx + 1:\n            print('NO')\n            return\n    for (idx, val) in enumerate(redNums):\n        if val > idx + len(blueNums) + 1:\n            print('NO')\n            return\n    print('YES')\n    return\nfor i in range(t):\n    solve()", "I = lambda : map(int, input().split())\nfor _ in [0] * int(input()):\n    n = int(input())\n    b = []\n    r = []\n    ff = 1\n    for (i, j) in zip(I(), input()):\n        if j == 'R':\n            r.append(i)\n        else:\n            b.append(i)\n    k = n\n    for i in sorted(r, reverse=1):\n        if i > k:\n            ff = 0\n            break\n        k = k - 1\n    else:\n        k = 1\n        for i in sorted(b):\n            if i < k:\n                ff = 0\n                break\n            k = k + 1\n    print('YNEOS'[int(ff == 0)::2])", "for _ in range(int(input())):\n    input()\n    a = list(map(int, input().split()))\n    b = []\n    r = []\n    for (i, x) in enumerate(input()):\n        if x == 'B':\n            b.append(a[i])\n        else:\n            r.append(a[i])\n    b.sort()\n    r.sort()\n    n = len(b)\n    print('YES' if all((x >= i + 1 for (i, x) in enumerate(b))) and all((x <= n + i + 1 for (i, x) in enumerate(r))) else 'NO')", "def blue_red(n, arr, clr):\n    Reds = []\n    Blues = []\n    for i in range(n):\n        if clr[i] == 'R':\n            Reds.append(arr[i])\n        if clr[i] == 'B':\n            Blues.append(arr[i])\n    Reds.sort()\n    Blues.sort()\n    for i in range(len(Reds)):\n        if Reds[i] > n - len(Reds) + i + 1:\n            return 'NO'\n    for i in range(len(Blues)):\n        if Blues[i] < i + 1:\n            return 'NO'\n    return 'YES'\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    clr = str(input())\n    print(blue_red(n, arr, clr))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    color = input()\n    blue = []\n    red = []\n    for i in range(n):\n        if color[i] == 'B':\n            blue.append(a[i])\n        else:\n            red.append(a[i])\n    blue.sort()\n    red.sort()\n    got = True\n    for i in range(len(blue)):\n        if blue[i] < i + 1:\n            got = False\n            break\n    if not got:\n        print('NO')\n        continue\n    k = len(blue)\n    for i in range(len(red)):\n        if red[i] > i + 1 + k:\n            got = False\n            break\n    print('YES' if got else 'NO')", "import math as m\ni = input()\ninp = []\nfor a in range(0, int(i)):\n    input()\n    inp.append([[int(x) for x in input().split()], input()])\n\ndef logic(Barr, Rarr):\n    l1 = len(Barr)\n    for i in range(l1):\n        if Barr[i] < i + 1:\n            return 'NO'\n    l2 = len(Rarr)\n    for i in range(l2):\n        if Rarr[i] > l1 + i + 1:\n            return 'NO'\n    return 'YES'\nfor [arr, coloring] in inp:\n    Barr = []\n    Rarr = []\n    for i in range(len(arr)):\n        if coloring[i] == 'B':\n            Barr.append(arr[i])\n        else:\n            Rarr.append(arr[i])\n    Barr.sort()\n    Rarr.sort()\n    print(logic(Barr, Rarr))", "def f():\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = input()\n    a = []\n    b = []\n    for i in range(n):\n        if l[i] < 1 and s[i] == 'B' or (l[i] > n and s[i] == 'R'):\n            return 'NO'\n        if s[i] == 'R':\n            a.append(l[i])\n        else:\n            b.append(l[i])\n    a.sort(reverse=True)\n    b.sort()\n    t = n\n    for i in a:\n        if i > t:\n            return 'NO'\n        t -= 1\n    t = 1\n    for i in b:\n        if i < t:\n            return 'NO'\n        t += 1\n    return 'YES'\nfor _ in range(int(input())):\n    print(f())", "def fun(n, arr, s):\n    b = []\n    r = []\n    ans = True\n    for i in range(n):\n        if s[i] == 'R':\n            r.append(arr[i])\n            if arr[i] > n:\n                ans = False\n                break\n        else:\n            b.append(arr[i])\n            if arr[i] < 1:\n                ans = False\n                break\n    if not ans:\n        return 'NO'\n    b = sorted(b)\n    l1 = len(b)\n    r = sorted(r)\n    l2 = len(r)\n    bb = 0\n    rr = 0\n    for i in range(1, n + 1):\n        if bb < l1:\n            x = b[bb]\n            bb += 1\n            if x < i:\n                ans = False\n                break\n        elif rr < l2:\n            x = r[rr]\n            rr += 1\n            if x > i:\n                ans = False\n                break\n    return 'YES' if ans else 'NO'\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = input()\n    ans = fun(n, arr, s)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    (red, blue) = ([], [])\n    for (k, c) in enumerate(input()):\n        if c == 'B':\n            blue.append(nums[k])\n        else:\n            red.append(nums[k])\n    len_b = len(blue)\n    red.sort()\n    blue.sort()\n    ans = 'YES'\n    for (k, i) in enumerate(blue):\n        if i < k + 1:\n            ans = 'NO'\n            break\n    if ans == 'YES':\n        for (k, i) in enumerate(red):\n            if i > len_b + k + 1:\n                ans = 'NO'\n                break\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    values = list(map(int, input().split()))\n    color = input()\n    blue = []\n    red = []\n    for (v, c) in zip(values, color):\n        if c == 'B':\n            blue.append(v)\n        else:\n            red.append(v)\n    blue.sort()\n    red.sort()\n    found1 = True\n    found2 = True\n    for i in range(len(blue)):\n        if blue[i] < i + 1:\n            found1 = False\n            break\n    i = len(blue) + 1\n    for j in range(len(red)):\n        if red[j] > i:\n            found2 = False\n            break\n        i += 1\n    if found1 and found2:\n        print('YES')\n    else:\n        print('NO')", "from collections import Counter, deque, defaultdict\nfrom math import *\nmod = 1000000007\n\ndef isNotPossible(num, n):\n    return num > n\n\ndef isNotPossible2(num, n):\n    return num < n\n\ndef solve():\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = input()\n    red = []\n    blue = []\n    for i in range(n):\n        if s[i] == 'R':\n            red.append(l[i])\n        else:\n            blue.append(l[i])\n    red.sort()\n    blue.sort()\n    n1 = len(blue)\n    n2 = len(red)\n    for i in range(n):\n        if i < n1:\n            if isNotPossible(i + 1, blue[i]):\n                print('NO')\n                return\n        elif isNotPossible2(i + 1, red[i - n1]):\n            print('NO')\n            return\n    print('YES')\ntestcase = int(input())\nfor num in range(testcase):\n    solve()", "def exists(a, b, n):\n    R = []\n    B = []\n    for i in range(n):\n        if b[i] == 'R':\n            R.append(a[i])\n        else:\n            B.append(a[i])\n    respuesta = 'YES'\n    R = sorted(R)\n    B = sorted(B)\n    lenB = len(B)\n    lenR = len(R)\n    for i in range(lenB):\n        if B[i] < i + 1:\n            return 'NO'\n    for i in range(lenR):\n        if R[i] > lenB + i + 1:\n            return 'NO'\n    return respuesta\n\ndef split(s):\n    ans = []\n    for letter in s:\n        ans.append(letter)\n    return ans\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = split(input())\n    print(exists(a, b, n))", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = input()\n    (b, r) = ([], [])\n    for i in range(n):\n        if s[i] == 'B':\n            b.append(l[i])\n        else:\n            r.append(l[i])\n    r.sort(reverse=True)\n    b.sort()\n    c = 'YES'\n    for i in range(len(b)):\n        if b[i] < i + 1:\n            c = 'NO'\n            break\n    for i in range(len(r)):\n        if r[i] > n - i:\n            c = 'NO'\n            break\n    print(c)", "for step in range(int(input())):\n    n = int(input())\n    marbles = list(map(int, input().split()))\n    colors = input()\n    redMarbles = []\n    blueMarbles = []\n    for i in range(n):\n        if colors[i] == 'B':\n            blueMarbles.append(marbles[i])\n        else:\n            redMarbles.append(marbles[i])\n    redMarbles.sort(reverse=True)\n    blueMarbles.sort()\n    ans = True\n    for i in range(len(redMarbles)):\n        if redMarbles[i] > n - i:\n            ans = False\n    for i in range(len(blueMarbles)):\n        if blueMarbles[i] <= i:\n            ans = False\n    print('YES' if ans else 'NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = input()\n    arr_b = sorted([arr[i] for i in range(n) if s[i] == 'B'])\n    arr_r = sorted([arr[i] for i in range(n) if s[i] == 'R'], reverse=True)\n    res = True\n    for i in range(len(arr_b)):\n        if arr_b[i] < i + 1:\n            res = False\n            break\n    if not res:\n        print('NO')\n        continue\n    for i in range(len(arr_r)):\n        if arr_r[i] > n - i:\n            res = False\n            break\n    if res:\n        print('YES')\n    else:\n        print('NO')", "from collections import defaultdict\ntc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = input()\n    (b, r) = ([], [])\n    for i in range(n):\n        if s[i] == 'B':\n            b.append(l[i])\n        else:\n            r.append(l[i])\n    r.sort(reverse=True)\n    b.sort()\n    c = 'YES'\n    for i in range(len(b)):\n        if b[i] < i + 1:\n            c = 'NO'\n            break\n    for i in range(len(r)):\n        if r[i] > n - i:\n            c = 'NO'\n            break\n    print(c)", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = input()\n    (b, r) = ([], [])\n    for i in range(n):\n        if s[i] == 'B':\n            b.append(l[i])\n        else:\n            r.append(l[i])\n    r.sort(reverse=True)\n    b.sort()\n    c = 'YES'\n    for i in range(len(b)):\n        if b[i] < i + 1:\n            c = 'NO'\n            break\n    for i in range(len(r)):\n        if r[i] > n - i:\n            c = 'NO'\n            break\n    print(c)", "def solve(n, a, b, r):\n    b.sort()\n    r.sort()\n    i = 0\n    for i in range(len(b)):\n        if b[i] < i + 1:\n            return 'NO'\n    curr = len(b) + 1\n    for i in range(len(r)):\n        if r[i] > curr:\n            return 'NO'\n        curr += 1\n    return 'YES'\nfor t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = input()\n    b = []\n    r = []\n    for i in range(n):\n        if s[i] == 'B':\n            b.append(a[i])\n        else:\n            r.append(a[i])\n    print(solve(n, a, b, r))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    values = list(map(int, input().split()))\n    color = input()\n    blue = []\n    red = []\n    for (v, c) in zip(values, color):\n        if c == 'B':\n            blue.append(v)\n        else:\n            red.append(v)\n    blue.sort()\n    red.sort()\n    found1 = True\n    found2 = True\n    for i in range(len(blue)):\n        if blue[i] < i + 1:\n            found1 = False\n            break\n    i = len(blue) + 1\n    for j in range(len(red)):\n        if red[j] > i:\n            found2 = False\n            break\n        i += 1\n    if found1 and found2:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = input()\n    b = []\n    r = []\n    ans = True\n    for i in range(n):\n        if s[i] == 'B':\n            b.append(arr[i])\n        else:\n            r.append(arr[i])\n    b.sort()\n    r.sort(reverse=True)\n    for i in range(len(b)):\n        if b[i] <= i:\n            ans = False\n            break\n    for i in range(len(r)):\n        if r[i] > n - i:\n            ans = False\n            break\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    colors = input()\n    blues = []\n    reds = []\n    for i in range(len(a)):\n        if colors[i] == 'R':\n            reds.append(a[i])\n        else:\n            blues.append(a[i])\n    ind = 1\n    blues.sort()\n    reds.sort()\n    flag = False\n    for el in blues:\n        if el < ind:\n            flag = True\n        ind += 1\n    for el in reds:\n        if el > ind:\n            flag = True\n        ind += 1\n    if flag:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    string1 = input()\n    red = []\n    blue = []\n    for i in range(0, n):\n        if string1[i] == 'B':\n            blue.append(arr[i])\n        else:\n            red.append(arr[i])\n    blue.sort()\n    red.sort()\n    l1 = len(blue)\n    l2 = len(red)\n    flag = 0\n    for i in range(0, l1):\n        if blue[i] >= i + 1:\n            continue\n        else:\n            flag = 1\n            break\n    for j in range(0, l2):\n        if red[j] <= l1 + j + 1:\n            continue\n        else:\n            flag = 1\n            break\n    if flag == 1:\n        print('NO')\n    else:\n        print('YES')", "from collections import *\nfor y in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    s = input()\n    t = 1\n    lst1 = []\n    lst2 = []\n    ans = 'YES'\n    for i in range(n):\n        if s[i] == 'B':\n            lst1.append(lst[i])\n        else:\n            lst2.append(lst[i])\n    lst1.sort()\n    lst2.sort()\n    for i in lst1:\n        if i >= t:\n            t += 1\n        else:\n            ans = 'NO'\n            t += 1\n    for i in lst2:\n        if i <= t:\n            t += 1\n        else:\n            ans = 'NO'\n            t += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = input()\n    left = []\n    right = []\n    for i in range(n):\n        if s[i] == 'B':\n            left.append(arr[i])\n        else:\n            right.append(arr[i])\n    left.sort()\n    right.sort(reverse=True)\n    alright = True\n    for i in range(len(left)):\n        if left[i] < i + 1:\n            alright = False\n    for i in range(len(right)):\n        if right[i] > n - i:\n            alright = False\n    print('YES') if alright else print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arrc = input()\n    l1 = list()\n    l2 = list()\n    for j in range(n):\n        if arrc[j] == 'B':\n            l1.append(arr[j])\n        else:\n            l2.append(arr[j])\n    l1.sort()\n    l2.sort()\n    fuck = True\n    for j in range(len(l1)):\n        if l1[j] < j + 1:\n            fuck = False\n            break\n    for j in range(len(l2)):\n        if l2[j] > j + 1 + len(l1):\n            fuck = False\n            break\n    if fuck:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = input()\n    B = []\n    R = []\n    for j in range(n):\n        if c[j] == 'B':\n            B.append(a[j])\n        else:\n            R.append(a[j])\n    R.sort()\n    B.sort()\n    result = True\n    for j in range(len(B)):\n        if B[j] < j + 1:\n            result = False\n            break\n    for j in range(len(R)):\n        if R[j] > len(B) + j + 1:\n            result = False\n            break\n    if result:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = list(input())\n    test = 0\n    blues = [a[i] for i in range(n) if s[i] == 'B']\n    reds = [a[i] for i in range(n) if s[i] == 'R']\n    blues.sort()\n    reds.sort()\n    for i in range(len(blues)):\n        if blues[i] < i + 1:\n            test = 1\n            break\n    if test:\n        print('NO')\n    else:\n        x = len(blues)\n        for i in range(len(reds)):\n            if reds[i] > x + i + 1:\n                test = 1\n                break\n        if test:\n            print('NO')\n        else:\n            print('YES')", "def main():\n    T = int(input())\n    for t in range(T):\n        run()\n\ndef run():\n    n = int(input())\n    nums = list(map(int, input().split(' ')))\n    colors = input()\n    red = sorted(list((num for (i, num) in enumerate(nums) if colors[i] == 'R')))\n    blue = sorted(list((num for (i, num) in enumerate(nums) if colors[i] == 'B')))\n    for i in range(n, 0, -1):\n        if red and red[-1] > i:\n            print('NO')\n            break\n        if red and red[-1] <= i:\n            red.pop(-1)\n        elif blue and blue[-1] >= i:\n            blue.pop(-1)\n        else:\n            print('NO')\n            break\n    if not red and (not blue):\n        print('YES')\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = input()\n    b = []\n    r = []\n    for i in range(n):\n        if s[i] == 'R':\n            r.append(l[i])\n        else:\n            b.append(l[i])\n    b = sorted(b)\n    r = sorted(r)[::-1]\n    ok = True\n    for i in range(len(b)):\n        if b[i] < i + 1:\n            ok = False\n    for i in range(len(r)):\n        if r[i] > n - i:\n            ok = False\n    if ok:\n        print('YES')\n    else:\n        print('NO')", "def redBluePermutation(n, array, colors):\n    blue = []\n    red = []\n    for x in range(n):\n        if colors[x] == 'B':\n            blue.append(array[x])\n        else:\n            red.append(array[x])\n    blue.sort()\n    red.sort()\n    m = len(blue)\n    n = len(red)\n    for x in range(m):\n        if blue[x] >= x + 1:\n            continue\n        else:\n            return 'NO'\n    for x in range(n):\n        if red[x] <= m + x + 1:\n            continue\n        else:\n            return 'NO'\n    return 'YES'\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = list(input())\n    print(redBluePermutation(n, l, s))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = input()\n    red = []\n    blue = []\n    xy = 0\n    for i in range(n):\n        if s[i] == 'R':\n            red.append(a[i])\n        else:\n            blue.append(a[i])\n    red.sort()\n    blue.sort()\n    ans = 1\n    for i in range(len(blue)):\n        if ans <= blue[i]:\n            ans += 1\n        else:\n            print('NO')\n            xy = 1\n            break\n    if xy == 0:\n        for i in range(len(red)):\n            if ans >= red[i]:\n                ans += 1\n            else:\n                print('NO')\n                xy = 1\n                break\n    if xy == 0:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = input()\n    b = []\n    r = []\n    for i in range(n):\n        if s[i] == 'R':\n            r.append(l[i])\n        else:\n            b.append(l[i])\n    b = sorted(b)\n    r = sorted(r)[::-1]\n    ok = True\n    for i in range(len(b)):\n        if b[i] < i + 1:\n            ok = False\n    for i in range(len(r)):\n        if r[i] > n - i:\n            ok = False\n    print('YES') if ok else print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    s = input()\n    v = [False] * (n + 1)\n    (b, r) = ([], [])\n    res = 'YES'\n    c = 0\n    for i in range(n):\n        if s[i] == 'R':\n            r += [a[i]]\n        else:\n            b += [a[i]]\n    (i, j) = (n, 1)\n    r = sorted(r)\n    for k in r[::-1]:\n        if k <= i:\n            i -= 1\n        else:\n            res = 'NO'\n            break\n    b = sorted(b)\n    for k in b:\n        if k >= j:\n            j += 1\n        else:\n            res = 'NO'\n            break\n    print(res)", "from itertools import product, combinations\nfrom math import sqrt, gcd, ceil\nINF = int(1000000000.0 + 1)\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = input()\n    r = []\n    b = []\n    for i in range(n):\n        if s[i] == 'R':\n            r.append(a[i])\n        else:\n            b.append(a[i])\n    nr = len(r)\n    nb = len(b)\n    r.sort()\n    b.sort()\n    ans = True\n    for i in range(nr):\n        if r[nr - i - 1] > n - i:\n            ans = False\n    for i in range(nb):\n        if b[i] < i + 1:\n            ans = False\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = input()\n    B = []\n    R = []\n    B_count = 0\n    R_count = 0\n    for i in range(n):\n        if s[i] == 'B':\n            B.append(a[i])\n            B_count += 1\n        else:\n            R.append(a[i])\n            R_count += 1\n    if all((i >= j for (i, j) in zip(sorted(B), list(range(1, B_count + 1))))) and all((i <= j for (i, j) in zip(sorted(R), list(range(n - R_count + 1, n + 1))))):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = input()\n    flag = True\n    b = []\n    r = []\n    for i in range(n):\n        if s[i] == 'B':\n            b.append(l[i])\n        else:\n            r.append(l[i])\n    b.sort()\n    r.sort()\n    lenb = len(b)\n    for i in range(1, lenb + 1):\n        if b[i - 1] < i:\n            flag = False\n    for i in range(lenb + 1, n + 1):\n        if r[i - lenb - 1] > i:\n            flag = False\n    if flag == True:\n        print('YES')\n    else:\n        print('NO')", "number_tests = int(input())\nfor test in range(number_tests):\n    list_size = int(input())\n    list_numbers = input().split()\n    list_numbers = list(map(int, list_numbers))\n    list_letters = input()\n    result = 'YES'\n    list_blue = []\n    list_red = []\n    for value in range(list_size):\n        if list_letters[value] == 'B':\n            list_blue.append(list_numbers[value])\n        else:\n            list_red.append(list_numbers[value])\n    list_blue.sort()\n    list_red.sort()\n    for value in range(len(list_blue)):\n        if list_blue[value] < value + 1:\n            result = 'NO'\n            break\n    if result == 'YES':\n        for value in range(len(list_blue), list_size):\n            if list_red[value - len(list_blue)] > value + 1:\n                result = 'NO'\n                break\n    print(result)", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    colors = input()\n    blue = []\n    red = []\n    for i in range(n):\n        if colors[i] == 'R':\n            red.append(arr[i])\n        else:\n            blue.append(arr[i])\n    blue.sort()\n    red.sort()\n    need = 1\n    possible = True\n    for i in blue:\n        if i >= need:\n            need += 1\n        else:\n            possible = False\n            break\n    for i in red:\n        if i <= need:\n            need += 1\n        else:\n            possible = False\n            break\n    if possible:\n        print('YES')\n    else:\n        print('NO')", "import sys\nfrom collections import defaultdict\n\ndef get_ints():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef solve(n, a, BR):\n    b = []\n    r = []\n    for (i, c) in zip(a, BR):\n        if c == 'B':\n            b.append(i)\n        else:\n            r.append(i)\n    b = sorted(b)\n    r = sorted(r)\n    for i in range(len(b)):\n        if b[i] < i + 1:\n            return 0\n    for i in range(len(r)):\n        if r[i] > len(b) + i + 1:\n            return 0\n    return 1\nT = int(input())\nfor i in range(T):\n    n = int(input())\n    a = get_ints()\n    BR = input()\n    ans = solve(n, a, BR)\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = str(input())\n    b = []\n    r = []\n    f = 0\n    for i in range(n):\n        if s[i] == 'B':\n            b.append(l[i])\n        else:\n            r.append(l[i])\n    s = [x for x in range(1, n + 1)]\n    bl = s[:len(b)]\n    rl = s[len(b):]\n    b.sort()\n    r.sort()\n    for i in range(len(b)):\n        if b[i] >= bl[i]:\n            continue\n        else:\n            f = 1\n            break\n    for i in range(len(r)):\n        if r[i] <= rl[i]:\n            continue\n        else:\n            f = 1\n            break\n    if f == 1:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = input()\n    (red, blue) = ([], [])\n    for i in range(n):\n        if s[i] == 'B':\n            blue.append(a[i])\n        else:\n            red.append(a[i])\n    blue.sort()\n    red.sort()\n    ok = 1\n    curr = 1\n    for i in range(len(blue)):\n        if blue[i] < curr:\n            ok = 0\n            break\n        curr += 1\n    for i in range(len(red)):\n        if red[i] > curr:\n            ok = 0\n            break\n        curr += 1\n    if ok == 1:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = input()\n    (D1, D2) = ([], [])\n    for i in range(N):\n        if B[i] == 'B':\n            D1.append(A[i])\n        else:\n            D2.append(A[i])\n    ans = True\n    D1.sort()\n    for i in range(1, len(D1) + 1):\n        if D1[i - 1] < i:\n            ans = False\n            break\n    if ans:\n        D2.sort()\n        for i in range(N, len(D1), -1):\n            if D2[i - len(D1) - 1] > i:\n                ans = False\n                break\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    string = str(input())\n    n = len(string)\n    blue = []\n    red = []\n    flag = True\n    for i in range(n):\n        if string[i] == 'B':\n            blue.append(arr[i])\n        else:\n            red.append(arr[i])\n    blue.sort()\n    red.sort(reverse=True)\n    for i in range(len(blue)):\n        if blue[i] < i + 1:\n            flag = False\n    for i in range(len(red)):\n        if red[i] > n - i:\n            flag = False\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "import math\n\ndef II():\n    return map(int, input().split())\n\ndef Ii():\n    return int(input())\n\ndef infi():\n    return float('Inf')\n\ndef mino():\n    return -1\n\ndef solve(b, r, n):\n    bp = 0\n    rp = 0\n    mi = 1\n    while bp < len(b):\n        if b[bp] < mi:\n            print('NO')\n            return\n        if b[bp] >= mi:\n            bp += 1\n            mi += 1\n    while rp < len(r):\n        if r[rp] > mi:\n            print('NO')\n            return\n        if r[rp] <= mi:\n            rp += 1\n            mi += 1\n    print('YES')\n    return\nfor ____ in range(Ii()):\n    n = Ii()\n    arr = list(II())\n    s = input()\n    b = []\n    r = []\n    for i in range(n):\n        if s[i] == 'B':\n            b.append(arr[i])\n        else:\n            r.append(arr[i])\n    b.sort()\n    r.sort()\n    solve(b, r, n)", "def solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    col = input().strip()\n    red = [arr[i] for i in range(n) if col[i] == 'R']\n    blue = [arr[i] for i in range(n) if col[i] == 'B']\n    red.sort(reverse=True)\n    blue.sort(reverse=True)\n    for i in range(1, n + 1):\n        if len(blue) and blue[-1] >= i:\n            blue.pop()\n        elif len(red) and red[-1] <= i:\n            red.pop()\n        else:\n            return 'NO'\n    return 'YES'\nn = int(input())\nfor i in range(n):\n    print(solve())", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = input()\n    red = []\n    blue = []\n    for i in range(n):\n        if b[i] == 'R':\n            red.append(a[i])\n        else:\n            blue.append(a[i])\n    red.sort()\n    blue.sort()\n    c = 1\n    f = False\n    for i in range(len(blue)):\n        if blue[i] < c:\n            f = True\n            break\n        c += 1\n    if f:\n        print('NO')\n        continue\n    c = len(blue) + 1\n    f = False\n    for i in range(len(red)):\n        if red[i] > c:\n            f = True\n            break\n        c += 1\n    if f:\n        print('NO')\n        continue\n    print('YES')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input().split()\n    cl = input()\n    red = []\n    blue = []\n    for j in range(n):\n        if cl[j] == 'B':\n            blue.append(int(s[j]))\n        else:\n            red.append(int(s[j]))\n    blue.sort()\n    red.sort()\n    kt = True\n    lenBlue = len(blue)\n    for j in range(lenBlue):\n        if blue[j] < j + 1:\n            kt = False\n            break\n    if kt == False:\n        print('NO')\n    else:\n        index = n - lenBlue - 1\n        for j in range(n, lenBlue, -1):\n            if red[index] > j:\n                kt = False\n                break\n            index -= 1\n        if kt == False:\n            print('NO')\n        else:\n            print('YES')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = input()\n    l1 = []\n    l2 = []\n    for j in range(n):\n        if s[j] == 'B':\n            l1.append(a[j])\n        else:\n            l2.append(a[j])\n    l1.sort()\n    l2.sort()\n    flag = True\n    for j in range(len(l1)):\n        if l1[j] >= j + 1:\n            continue\n        else:\n            flag = False\n            break\n    for j in range(len(l2)):\n        if l2[j] <= len(l1) + j + 1:\n            continue\n        else:\n            flag = False\n            break\n    if flag == True:\n        print('YES')\n    else:\n        print('NO')", "arr = [1, 2, 5, 2]\ns = 'BRBR'\n\ndef answer(arr, s):\n    from collections import defaultdict\n    curr = defaultdict(list)\n    dic = {}\n    blue = 0\n    b = []\n    red = 0\n    r = []\n    for i in range(len(arr)):\n        if s[i] == 'B':\n            blue += 1\n            b.append(arr[i])\n        else:\n            red += 1\n            r.append(arr[i])\n    b.sort()\n    r.sort(reverse=True)\n    count = 1\n    for i in b:\n        if i >= count:\n            count += 1\n        else:\n            return 'NO'\n    count = len(arr)\n    for i in r:\n        if i <= count:\n            count -= 1\n        else:\n            return 'NO'\n    return 'YES'\nt = int(input())\nfor k in range(t):\n    num = int(input())\n    inp = input().split()\n    arr = []\n    for i in inp:\n        arr.append(int(i))\n    s = input()\n    print(answer(arr, s))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    colors = input()\n    Bnums = [a[j] for j in range(len(a)) if colors[j] == 'B']\n    Rnums = [a[j] for j in range(len(a)) if colors[j] == 'R']\n    Bnums.sort()\n    Rnums.sort()\n    flag = True\n    for j in range(len(Bnums)):\n        if Bnums[j] < j + 1:\n            flag = False\n            break\n    for j in range(len(Rnums)):\n        if Rnums[j] > j + len(Bnums) + 1:\n            flag = False\n            break\n    print('YES' if flag else 'NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    list1 = list(map(int, input().strip().split()))\n    list2 = list(input())\n    b = []\n    r = []\n    for i in range(n):\n        if list2[i] == 'B':\n            b.append(list1[i])\n        else:\n            r.append(list1[i])\n    b.sort()\n    flag = 1\n    for i in range(len(b)):\n        if b[i] < i + 1:\n            flag = 0\n            break\n    if flag:\n        r.sort()\n        r.reverse()\n        for i in range(len(r)):\n            if r[i] > n - i:\n                flag = 0\n                break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = input()\n    b = []\n    r = []\n    for j in range(len(a)):\n        if m[j] == 'B':\n            b.append(a[j])\n        else:\n            r.append(a[j])\n    ok = True\n    r.sort(reverse=True)\n    b.sort()\n    for j in range(len(r)):\n        if r[j] > n - j:\n            ok = False\n    for j in range(len(b)):\n        if b[j] < j + 1:\n            ok = False\n    if ok == True:\n        print('YES')\n    else:\n        print('NO')", "def findAnswer(numbers, colours):\n    blueList = []\n    redList = []\n    key = 0\n    for i in range(len(colours)):\n        if colours[i] == 'R':\n            redList.append(numbers[i])\n        else:\n            blueList.append(numbers[i])\n    blueList.sort()\n    redList.sort()\n    if len(blueList) > 0:\n        if blueList[0] < 1:\n            key = 1\n    if len(redList) > 0:\n        if redList[-1] > len(numbers):\n            key = 1\n    for i in range(len(blueList)):\n        if blueList[i] - (i + 1) < 0:\n            key = 1\n    redList = list(map(lambda x: x - len(blueList), redList))\n    for i in range(len(redList)):\n        if redList[i] - (i + 1) > 0:\n            key = 1\n    if key == 0:\n        return 'YES'\n    else:\n        return 'NO'\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    nums = list(map(int, input().split()))[:n]\n    colors = list(input())\n    print(findAnswer(nums, colors))", "for _ in range(int(input())):\n    n = int(input())\n    l = input().split()\n    s = input()\n    (b, r) = ([], [])\n    for i in range(n):\n        x = int(l[i])\n        if s[i] == 'R':\n            r.append(x)\n        else:\n            b.append(x)\n    if any((i > j for (i, j) in enumerate(sorted(b), 1))) or any((j > i for (i, j) in enumerate(sorted(r), n + 1 - len(r)))):\n        print('NO')\n    else:\n        print('YES')", "import sys\n\ndef solve(arr, n, red, blue):\n    cr = len(red)\n    cb = len(blue)\n    for (num, i) in enumerate(blue):\n        if i < num + 1:\n            return False\n    for (num, i) in enumerate(red):\n        if i > cb + num + 1:\n            return False\n    return True\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = input()\n    red = []\n    blue = []\n    for (num, i) in enumerate(s):\n        if i == 'R':\n            red.append(arr[num])\n        else:\n            blue.append(arr[num])\n    red.sort()\n    blue.sort()\n    ans = solve(arr, n, red, blue)\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = input()\n    (b, r) = ([], [])\n    for i in range(n):\n        if s[i] == 'B':\n            b.append(l[i])\n        else:\n            r.append(l[i])\n    r.sort(reverse=True)\n    b.sort()\n    c = 'YES'\n    for i in range(len(b)):\n        if b[i] < i + 1:\n            c = 'NO'\n            break\n    for i in range(len(r)):\n        if r[i] > n - i:\n            c = 'NO'\n            break\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    color = list(input())\n    blue = []\n    red = []\n    for (i, item) in enumerate(a):\n        if color[i] == 'B':\n            blue.append(item)\n        else:\n            red.append(item)\n    blue = sorted(blue)\n    red = sorted(red)\n    possible = True\n    i = 1\n    for item in blue:\n        if item >= i:\n            i += 1\n        else:\n            possible = False\n    for item in red:\n        if item <= i:\n            i += 1\n        else:\n            possible = False\n    if possible:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    num = list(map(int, input().split()))\n    color = list(input())\n    r = []\n    b = []\n    for i in range(len(color)):\n        if color[i] == 'R':\n            r.append(num[i])\n        else:\n            b.append(num[i])\n    sb = sorted(b)\n    sr = sorted(r)[::-1]\n    for i in range(len(sb)):\n        if sb[i] < i + 1:\n            print('NO')\n            break\n    else:\n        for i in range(len(sr)):\n            if sr[i] > n - i:\n                print('NO')\n                break\n        else:\n            print('YES')", "for _ in range(int(input())):\n    size = int(input())\n    arr = list(map(int, input().split()))\n    s = str(input())\n    b_arr = []\n    r_arr = []\n    for ind in range(size):\n        if s[ind] == 'B':\n            b_arr.append(arr[ind])\n        else:\n            r_arr.append(arr[ind])\n    b_arr = sorted(b_arr)\n    r_arr = sorted(r_arr)\n    cur_num = 1\n    bad = 0\n    for ind in range(len(b_arr)):\n        if cur_num <= b_arr[ind]:\n            cur_num += 1\n        else:\n            bad = 1\n    for ind in range(len(r_arr)):\n        if cur_num >= r_arr[ind]:\n            cur_num += 1\n        else:\n            bad = 1\n    if bad:\n        print('NO')\n    else:\n        print('YES')", "test_cases = int(input())\nfor t in range(test_cases):\n    n = int(input())\n    a = list(map(int, input().split()))\n    st = input()\n    blue = []\n    red = []\n    for i in range(len(st)):\n        ch = st[i]\n        if ch == 'B':\n            blue.append(a[i])\n        elif ch == 'R':\n            red.append(a[i])\n    blue.sort()\n    red.sort()\n    cur_window = 0\n    flag = 1\n    for e in blue:\n        if e >= cur_window + 1:\n            cur_window += 1\n        else:\n            flag = 0\n            break\n    for e in red:\n        if e <= cur_window + 1:\n            cur_window += 1\n        else:\n            flag = 0\n            break\n    if flag == 0:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    colors = input()\n    red = []\n    blue = []\n    ans = 'YES'\n    for i in range(len(colors)):\n        if colors[i] == 'B':\n            blue.append(a[i])\n        else:\n            red.append(a[i])\n    blue.sort()\n    red.sort(reverse=True)\n    num = 1\n    for i in range(len(blue)):\n        if blue[i] < num:\n            ans = 'NO'\n        num += 1\n    num = n\n    for i in range(len(red)):\n        if red[i] > num:\n            ans = 'NO'\n        num -= 1\n    print(ans)", "num_lines = int(input())\nfor _ in range(num_lines):\n    num_item = int(input())\n    list_num = input().split(' ')\n    list_num = list(map(int, list_num))\n    list_color = input()\n    list_red = []\n    list_blue = []\n    for i in range(num_item):\n        if list_color[i] == 'B':\n            list_blue.append(list_num[i])\n        else:\n            list_red.append(list_num[i])\n    list_red.sort()\n    list_blue.sort()\n    list_num.sort()\n    cur = 1\n    for b in list_blue:\n        if b >= cur:\n            cur += 1\n        else:\n            break\n    for r in list_red:\n        if r <= cur:\n            cur += 1\n        else:\n            break\n    if cur == num_item + 1:\n        print('YES')\n    else:\n        print('NO')", "def prove(blue, red):\n    for i in range(1, len(blue) + 1):\n        if i > blue[i - 1]:\n            print('NO')\n            return\n    for i in range(len(blue) + 1, size + 1):\n        if i < red[i - len(blue) - 1]:\n            print('NO')\n            return\n    print('YES')\n    return\nn = int(input())\nfor i in range(n):\n    size = int(input())\n    l = list(map(int, input().strip().split()))\n    colors = str(input())\n    red = []\n    blue = []\n    for i in range(size):\n        if colors[i] == 'B':\n            blue.append(l[i])\n        else:\n            red.append(l[i])\n    blue.sort()\n    red.sort()\n    prove(blue, red)", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    z = list(map(int, input().split()))\n    (b, r) = ([], [])\n    x = input()\n    for j in range(m):\n        if x[j] == 'B':\n            b.append(z[j])\n        else:\n            r.append(z[j])\n    b = sorted(b)\n    v = True\n    r = sorted(r, reverse=True)\n    for k in range(len(b)):\n        if b[k] < k + 1:\n            v = False\n    for k in range(len(r)):\n        if r[k] > m - k:\n            v = False\n    if v:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    n = int(input())\n    a = [int(num) for num in input().split()]\n    c = input()\n    B = []\n    R = []\n    for j in range(n):\n        if c[j] == 'B':\n            B.append(a[j])\n        else:\n            R.append(a[j])\n    R.sort()\n    B.sort()\n    result = True\n    for j in range(len(B)):\n        if B[j] < j + 1:\n            result = False\n            break\n    for j in range(len(R)):\n        if R[j] > len(B) + j + 1:\n            result = False\n            break\n    if result:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    l = int(input())\n    a = list(map(int, input().split()))\n    s = input()\n    b = [a[i] for i in range(l) if s[i] == 'B']\n    r = [a[i] for i in range(l) if s[i] == 'R']\n    b.sort()\n    r.sort()\n    n = len(r)\n    m = len(b)\n    c = 0\n    k = 1\n    for i in range(m):\n        if b[i] < 1:\n            c = 1\n        if b[i] < k:\n            c = 1\n        k += 1\n    for j in range(n):\n        if r[j] > l:\n            c = 1\n        if r[j] > k:\n            c = 1\n        k += 1\n    if c == 0:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    c = list(input())\n    q = []\n    qr = []\n    s = 0\n    for i in range(a):\n        if c[i] == 'B':\n            q.append(b[i])\n        if c[i] == 'R':\n            qr.append(b[i])\n    q.sort()\n    qr.sort()\n    x = len(q)\n    y = len(qr)\n    for i in range(y):\n        q.append(qr[i])\n    for i in range(x):\n        if q[i] < i + 1:\n            s += 1\n    for i in range(x, x + y):\n        if q[i] > i + 1:\n            s += 1\n    if s != 0:\n        print('NO')\n    else:\n        print('YES')", "def blue_red(n, num, color):\n    redlist = [0 for i in range(n)]\n    bluelist = [0 for i in range(n)]\n    if n == 1:\n        if color == 'R':\n            return int(num[0]) <= 1\n        if color == 'B':\n            return int(num[0]) >= 1\n    for i in range(n):\n        k = int(num[i])\n        if color[i] == 'B':\n            if k < 1:\n                return False\n            if k >= n:\n                bluelist[-1] += 1\n            if k >= 1 and k < n:\n                bluelist[k - 1] += 1\n        else:\n            if k > n:\n                return False\n            if k <= 1:\n                redlist[-1] += 1\n            if k <= n and k > 1:\n                redlist[n - k] += 1\n    current_blue = 0\n    for i in range(len(bluelist)):\n        current_blue += bluelist[i]\n        if current_blue > i + 1:\n            return False\n    current_red = 0\n    for i in range(len(redlist)):\n        current_red += redlist[i]\n        if current_red > i + 1:\n            return False\n    return True\ntotal = int(input())\nfor i in range(total):\n    n = int(input())\n    num = input().split()\n    color = input()\n    x = blue_red(n, num, color)\n    if x:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = input()\n    r = []\n    b = []\n    for i in range(n):\n        if s[i] == 'R':\n            r.append(a[i])\n        else:\n            b.append(a[i])\n    b.sort()\n    r.sort()\n    flag = 0\n    for i in range(len(b)):\n        if b[i] <= i:\n            flag = 1\n    for i in range(len(r) - 1, -1, -1):\n        if r[i] > n:\n            flag = 1\n        n -= 1\n    if flag:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = input()\n    barr = []\n    rarr = []\n    for i in range(n):\n        if s[i] == 'B':\n            barr.append(a[i])\n        else:\n            rarr.append(a[i])\n    i = 0\n    j = 0\n    leb = len(barr)\n    ler = len(rarr)\n    barr.sort()\n    rarr.sort()\n    now = 1\n    y = 0\n    while now <= n:\n        if i != leb and barr[i] >= now:\n            i += 1\n        elif j != ler and rarr[j] <= now:\n            j += 1\n        else:\n            y = 1\n            break\n        now += 1\n    if y == 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor s in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = str(input())\n    r = []\n    b = []\n    for j in range(n):\n        if s[j] == 'R':\n            r.append(a[j])\n        else:\n            b.append(a[j])\n    r.sort(reverse=True)\n    b.sort(reverse=True)\n    k = len(r)\n    for i in range(n):\n        if i + 1 < n - k + 1:\n            if b[-1] < i + 1:\n                print('NO')\n                k = -1\n                break\n            else:\n                b.pop()\n        elif r[-1] > i + 1:\n            print('NO')\n            k = -1\n            break\n        else:\n            r.pop()\n    if k != -1:\n        print('YES')", "ram = int(input())\nfor jjd in range(ram):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = input()\n    r = []\n    b = []\n    for i in range(n):\n        if s[i] == 'B':\n            b.append(l[i])\n        else:\n            r.append(l[i])\n    b.sort()\n    r.sort()\n    r = r[::-1]\n    a = 0\n    for i in range(len(b)):\n        if b[i] < i + 1:\n            print('NO')\n            a = 1\n            break\n    if a == 0:\n        for i in range(len(l) - 1, len(b) - 1, -1):\n            if r[len(l) - i - 1] > i + 1:\n                print('NO')\n                a = 1\n                break\n    if a == 0:\n        print('YES')", "t = int(input())\nfor f in range(t):\n    n = int(input())\n    num = list(map(int, input().split()))\n    color = input()\n    B = list()\n    R = list()\n    for i in range(n):\n        if color[i] == 'B':\n            B.append(num[i])\n        else:\n            R.append(num[i])\n    B.sort()\n    R.sort()\n    possible = True\n    for i in range(1, len(B) + 1):\n        if B[i - 1] >= i:\n            possible = True\n        else:\n            possible = False\n            break\n    if possible:\n        for i in range(1, len(R) + 1):\n            if R[i - 1] <= i + len(B):\n                possible = True\n            else:\n                possible = False\n                break\n    if possible:\n        print('YES')\n    else:\n        print('NO')\nt = t - 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = list(input())\n    up = []\n    down = []\n    for i in range(n):\n        if c[i] == 'B':\n            down.append(a[i])\n        else:\n            up.append(a[i])\n    up.sort()\n    down.sort()\n    flag = False\n    i = j = 0\n    k = 1\n    while i < len(up) and j < len(down):\n        if down[j] >= k:\n            j += 1\n            k += 1\n        elif up[i] <= k:\n            i += 1\n            k += 1\n        else:\n            flag = True\n            break\n    if flag:\n        print('NO')\n        continue\n    while i < len(up):\n        if up[i] <= k:\n            i += 1\n            k += 1\n        else:\n            flag = True\n            break\n    if flag:\n        print('NO')\n        continue\n    while j < len(down):\n        if down[j] >= k:\n            j += 1\n            k += 1\n        else:\n            flag = True\n            break\n    if flag:\n        print('NO')\n    else:\n        print('YES')", "kl = int(input())\nfor kkl in range(kl):\n    pr = 1\n    n = int(input())\n    ls = [int(i) for i in input().split()]\n    s = input()\n    r = []\n    b = []\n    for i in range(n):\n        if s[i] == 'R':\n            r += [ls[i]]\n        else:\n            b += [ls[i]]\n    b.sort()\n    if pr:\n        for i in range(len(b)):\n            if b[i] <= i and pr:\n                print('NO')\n                pr = 0\n    if pr:\n        r.sort()\n        for i in range(len(r) - 1, -1, -1):\n            if r[i] > n - (len(r) - i - 1) and pr:\n                print('NO')\n                pr = 0\n    if pr:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = input()\n    dec = []\n    inc = []\n    for i in range(n):\n        if s[i] == 'B':\n            dec.append(a[i])\n        else:\n            inc.append(a[i])\n    inc.sort()\n    dec.sort()\n    flag = 0\n    for i in range(n, 0, -1):\n        if len(inc) > 0:\n            if inc[-1] > i:\n                flag = 1\n                break\n            else:\n                inc.pop()\n        elif dec[-1] < i:\n            flag = 1\n            break\n        else:\n            dec.pop()\n    if flag == 1:\n        print('NO')\n    else:\n        print('YES')", "answers = []\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = input()\n    b = []\n    r = []\n    for i in range(n):\n        if s[i] == 'B':\n            b.append(arr[i])\n        else:\n            r.append(arr[i])\n    b.sort()\n    r.sort()\n    bi = 0\n    rj = 0\n    ans = 'NO'\n    for k in range(1, n + 1):\n        if bi < len(b) and b[bi] >= k:\n            bi += 1\n        elif rj < len(r) and r[rj] <= k:\n            rj += 1\n        else:\n            break\n    else:\n        ans = 'YES'\n    answers.append(ans)\nprint(*answers, sep='\\n')", "t = int(input())\nfor test_case in range(t):\n    n = int(input())\n    arr = [int(el) for el in input().split(' ')]\n    colors = input()\n    blues = []\n    reds = []\n    for i in range(len(arr)):\n        if colors[i] == 'R':\n            reds.append(arr[i])\n        else:\n            blues.append(arr[i])\n    s_blues = sorted(blues)\n    s_reds = sorted(reds)\n    res = ''\n    for j in range(len(blues)):\n        if s_blues[j] < j + 1:\n            res = 'NO'\n            break\n    for j in range(len(reds)):\n        if s_reds[len(reds) - j - 1] > n - j:\n            res = 'NO'\n            break\n    print(res or 'YES')", "t = int(input())\nfor asd in range(t):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    rb = input()\n    r = []\n    b = []\n    for i in range(n):\n        if rb[i] == 'R':\n            r.append(l[i])\n        else:\n            b.append(l[i])\n    b = sorted(b)\n    r = sorted(r, reverse=True)\n    flag = 1\n    for i in range(len(b)):\n        if b[i] < i + 1:\n            flag = 0\n            break\n    for i in range(len(r)):\n        if r[i] > n - i:\n            flag = 0\n            break\n    if flag:\n        print('YES')\n    else:\n        print('NO')"]