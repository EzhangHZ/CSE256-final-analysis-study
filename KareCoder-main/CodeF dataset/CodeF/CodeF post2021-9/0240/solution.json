["for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l2 = sorted(l)\n    i = 0\n    if n == 1:\n        print(-1)\n    else:\n        for i in range(n):\n            if l2[i] == l[i]:\n                if i == n - 1:\n                    h = n - 2\n                    while h > 0 and l2[h] == l[h]:\n                        h -= 1\n                    (l2[i], l2[h]) = (l2[h], l2[i])\n                else:\n                    (l2[i], l2[i + 1]) = (l2[i + 1], l2[i])\n        print(*l2)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    for i in range(1, n + 1):\n        b.append(i)\n    if n == 1:\n        print(-1)\n        continue\n    for i in range(n):\n        if a[i] != b[i]:\n            continue\n        if i == n - 1:\n            (b[n - 1], b[n - 2]) = (b[n - 2], b[n - 1])\n        else:\n            (b[i], b[i + 1]) = (b[i + 1], b[i])\n    print(*b)", "for _ in range(int(input())):\n    input()\n    nums = list(map(int, input().split()))\n    if len(nums) == 1:\n        print(-1)\n    else:\n        sorted_nums = sorted(nums)\n        i = 0\n        while i < len(nums) - 1:\n            if sorted_nums[i] == nums[i]:\n                (sorted_nums[i], sorted_nums[i + 1]) = (sorted_nums[i + 1], sorted_nums[i])\n                i += 1\n            i += 1\n        i = len(sorted_nums) - 1\n        if sorted_nums[i] == nums[i]:\n            (sorted_nums[i], sorted_nums[i - 1]) = (sorted_nums[i - 1], sorted_nums[i])\n        print(' '.join(map(str, sorted_nums)))", "t = int(input())\nwhile t:\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = []\n    if len(l) == 1:\n        print(-1)\n        t -= 1\n        continue\n    l1 = l[:]\n    l1.sort()\n    for i in range(len(l1) - 1):\n        if l1[i] == l[i]:\n            (l1[i], l1[i + 1]) = (l1[i + 1], l1[i])\n    if l[-1] == l1[-1]:\n        (l1[-1], l1[-2]) = (l1[-2], l1[-1])\n    print(*l1)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1:\n        print(-1)\n        continue\n    else:\n        l1 = l.copy()\n        l1.sort()\n        for i in range(n - 1):\n            if l1[i] == l[i]:\n                t = l1[i]\n                l1[i] = l1[i + 1]\n                l1[i + 1] = t\n        if l1[n - 1] == l[n - 1]:\n            t = l1[n - 2]\n            l1[n - 2] = l1[n - 1]\n            l1[n - 1] = t\n    print(*l1)", "import heapq\nT = int(input())\nwhile T:\n    T -= 1\n    N = int(input())\n    init = list(map(int, input().split()))\n    Number = [i for i in range(1, N + 1)]\n    if N == 1:\n        print(-1)\n        continue\n    ans = [None] * N\n    for i in range(N):\n        if Number[0] != init[i]:\n            ans[i] = heapq.heappop(Number)\n        elif len(Number) > 1:\n            a = heapq.heappop(Number)\n            ans[i] = heapq.heappop(Number)\n            heapq.heappush(Number, a)\n        else:\n            a = heapq.heappop(Number)\n            ans[i] = a\n            (ans[i - 1], ans[i]) = (ans[i], ans[i - 1])\n    for ele in ans:\n        print(ele, end=' ')\n    print()", "def mystic_permutation(n, p):\n    if len(p) == 1:\n        return [-1]\n    p_sorted = sorted(p, reverse=True)\n    temp = None\n    i = n - 1\n    j = 0\n    output = []\n    while i >= 0:\n        if temp is not None:\n            output.append(temp)\n            temp = None\n            i -= 1\n            j += 1\n            continue\n        element = p_sorted.pop()\n        if p[j] == element:\n            temp = element\n            if len(p_sorted) == 0:\n                output.append(temp)\n                break\n            output.append(p_sorted.pop())\n        else:\n            output.append(element)\n        i -= 1\n        j += 1\n    if output[-1] == p[-1]:\n        (output[-1], output[-2]) = (output[-2], output[-1])\n        i -= 1\n        j += 1\n    for i in range(n):\n        if p[i] == output[i]:\n            return [-1]\n    return output\n\ndef main():\n    t = input()\n    t = int(t)\n    for i in range(t):\n        n = input()\n        n = int(n)\n        p = list(map(int, input().split()))\n        output = mystic_permutation(n, p)\n        for o in output:\n            print(o, end=' ')\n        print()\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        l = input()\n        print(-1)\n    else:\n        l = list(map(int, input().split(' ')))\n        s = sorted(l)\n        ret = []\n        for i in range(n - 1):\n            if s[i] == l[i]:\n                (s[i], s[i + 1]) = (s[i + 1], s[i])\n        if s[-1] == l[-1]:\n            (s[-1], s[-2]) = (s[-2], s[-1])\n        print(*s)", "def mystic_per(l):\n    if len(l) == 1 or len(l) == 0:\n        return [-1]\n    m = l.copy()\n    l.sort()\n    i = 0\n    while i < len(l) - 1:\n        if l[i] == m[i]:\n            (l[i], l[i + 1]) = (l[i + 1], l[i])\n        i += 1\n    if i == len(l) - 1:\n        if l[i] == m[i]:\n            (l[i], l[i - 1]) = (l[i - 1], l[i])\n    return l\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(*mystic_per(l))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    p = [int(x) for x in input().split()]\n    p1 = []\n    for q in range(n):\n        p1.append(p[q])\n    p.sort()\n    if len(p) == 1:\n        print(-1, end=' ')\n    elif len(p) == 2:\n        print(p1[1], end=' ')\n        print(p1[0], end=' ')\n    else:\n        for j in range(n - 1):\n            if p[j] == p1[j]:\n                (p[j], p[j + 1]) = (p[j + 1], p[j])\n        if p[n - 1] == p1[n - 1]:\n            (p[n - 1], p[n - 2]) = (p[n - 2], p[n - 1])\n        for k in range(n):\n            print(p[k], end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n == 1:\n        print(-1)\n        continue\n    ref = [i for i in range(1, n + 1)]\n    indexs = []\n    for i in range(n):\n        if arr[i] == ref[i]:\n            indexs.append(i)\n    swapped = [0 for i in range(n)]\n    for x in indexs:\n        if x == n - 1 and swapped[x] == 0:\n            (ref[x - 1], ref[x]) = (ref[x], ref[x - 1])\n            break\n        if swapped[x] == 0:\n            (ref[x], ref[x + 1]) = (ref[x + 1], ref[x])\n            swapped[x] = 1\n            swapped[x + 1] = 1\n    for (i, x) in enumerate(ref):\n        if i == n - 1:\n            print(x)\n            break\n        print(x, end=' ')", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n == 1:\n        return [-1]\n    ans = [i for i in range(1, n + 1)]\n    for i in range(n - 1):\n        if arr[i] == ans[i]:\n            (ans[i], ans[i + 1]) = (ans[i + 1], ans[i])\n    if ans[-1] == arr[-1]:\n        (ans[-1], ans[-2]) = (ans[-2], ans[-1])\n    return ans\nfor _ in range(int(input())):\n    print(*solve())", "tc = int(input())\nfor t in range(tc):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    if n == 1:\n        print(-1)\n        continue\n    arr = [i for i in range(1, n + 1)]\n    for i in range(n):\n        if i < n - 1 and arr[i] == lst[i]:\n            k = arr[i]\n            arr[i] = arr[i + 1]\n            arr[i + 1] = k\n        elif arr[i] == lst[i]:\n            k = arr[i]\n            arr[i] = arr[i - 1]\n            arr[i - 1] = k\n    print(' '.join(map(str, arr)))", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    lst1 = []\n    if n == 1:\n        print(-1)\n        continue\n    for i in range(1, n + 1):\n        lst1.append(i)\n    for i in range(n - 1):\n        if lst[i] == lst1[i]:\n            (lst1[i], lst1[i + 1]) = (lst1[i + 1], lst1[i])\n    if lst[-1] == lst1[-1]:\n        (lst1[-1], lst1[-2]) = (lst1[-2], lst1[-1])\n    print(*lst1)", "for i in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = sorted(x)\n    for i in range(n):\n        if y[i] == x[i] and i != n - 1:\n            (y[i], y[i + 1]) = (y[i + 1], y[i])\n        elif y[i] == x[i] and i == n - 1:\n            (y[i], y[i - 1]) = (y[i - 1], y[i])\n    if n != 1:\n        for i in y:\n            print(i, end=' ')\n        print()\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l2 = sorted(l)\n    if n == 1:\n        print(-1)\n    else:\n        for i in range(n):\n            if l2[i] == l[i]:\n                if i == n - 1:\n                    (l2[i], l2[i - 1]) = (l2[i - 1], l2[i])\n                else:\n                    (l2[i], l2[i + 1]) = (l2[i + 1], l2[i])\n        print(*l2)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    if len(a) == 1:\n        print(-1)\n        continue\n    b = [0] * n\n    for i in range(n):\n        b[i] = i + 1\n    for i in range(n):\n        if a[i] == b[i]:\n            if i == n - 1:\n                (b[i], b[i - 1]) = (b[i - 1], b[i])\n            else:\n                (b[i], b[i + 1]) = (b[i + 1], b[i])\n    print(*b)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    s = sorted(a[:])\n    for i in range(n):\n        if a[i] == s[i]:\n            if i != len(s) - 1:\n                (s[i], s[i + 1]) = (s[i + 1], s[i])\n            else:\n                (s[i], s[i - 1]) = (s[i - 1], s[i])\n    if n == 1:\n        print(-1)\n    else:\n        print(*s)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = sorted(a)\n    mn = []\n    if n == 1:\n        print(-1)\n    else:\n        for i in range(n - 1):\n            if b[i] == a[i]:\n                (b[i], b[i + 1]) = (b[i + 1], b[i])\n        if b[-1] == a[-1]:\n            (b[-1], b[-2]) = (b[-2], b[-1])\n        print(*b)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = [i for i in range(1, n + 1)]\n    if n == 1:\n        print(-1)\n    else:\n        for i in range(n - 1):\n            if x[i] == l[i]:\n                (x[i], x[i + 1]) = (x[i + 1], x[i])\n        if x[n - 1] == l[n - 1]:\n            (x[n - 2], x[n - 1]) = (x[n - 1], x[n - 2])\n        print(*x)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    if n == 1:\n        print(-1)\n        continue\n    elif n == 2:\n        print(l[1], l[0])\n        continue\n    else:\n        k = l.copy()\n        k.sort()\n        for i in range(n):\n            if k[i] == l[i]:\n                if i != n - 1:\n                    (k[i], k[i + 1]) = (k[i + 1], k[i])\n                    i += 1\n                else:\n                    (k[i - 1], k[i]) = (k[i], k[i - 1])\n        print(*k)", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    b = []\n    for j in x:\n        b.append(j)\n    b.sort()\n    if n == 1:\n        print(-1)\n    else:\n        for i in range(n):\n            if x[i] != b[i]:\n                continue\n            if i + 1 < n:\n                (b[i], b[i + 1]) = (b[i + 1], b[i])\n            elif i - 1 > 0:\n                (b[i], b[i - 1]) = (b[i - 1], b[i])\n        print(*b)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a1 = sorted(a)\n    bool = True\n    for i in range(n):\n        if a[i] != a1[i]:\n            continue\n        if i + 1 < n:\n            (a1[i], a1[i + 1]) = (a1[i + 1], a1[i])\n        elif i - 1 > 0:\n            (a1[i], a1[i - 1]) = (a1[i - 1], a1[i])\n        else:\n            bool = False\n    if bool == True:\n        print(*a1)\n    else:\n        print(-1)", "n = int(input())\nfor i in range(n):\n    k = int(input())\n    arr = list(map(int, input().split()))\n    if k == 1:\n        print('-1')\n        continue\n    brr = arr.copy()\n    brr.sort()\n    crr = []\n    for j in range(k - 1):\n        if arr[j] != brr[j]:\n            crr.append(brr[j])\n        else:\n            temp = brr[j]\n            brr[j] = brr[j + 1]\n            brr[j + 1] = temp\n            crr.append(brr[j])\n    if arr[-1] == brr[-1]:\n        temp = crr[-1]\n        crr.pop()\n        crr.append(brr[-1])\n        crr.append(temp)\n    else:\n        crr.append(brr[-1])\n    print(' '.join(map(str, crr)))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if len(a) == 1:\n        print(-1)\n        continue\n    b = [x for x in range(1, n + 1)]\n    for i in range(n - 1):\n        if b[i] == a[i]:\n            (b[i], b[i + 1]) = (b[i + 1], b[i])\n    if b[-1] == a[-1]:\n        (b[-1], b[-2]) = (b[-2], b[-1])\n    print(*b)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    l1 = list(range(1, n + 1))\n    if n == 1:\n        print(-1)\n    else:\n        for i in range(n - 1):\n            if l[i] == l1[i]:\n                (l1[i], l1[i + 1]) = (l1[i + 1], l1[i])\n        if l[n - 1] == l1[n - 1]:\n            (l1[n - 2], l1[n - 1]) = (l1[n - 1], l1[n - 2])\n        print(*l1)", "for it in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = sorted(a)\n    for i in range(n - 1):\n        if b[i] == a[i]:\n            (b[i], b[i + 1]) = (b[i + 1], b[i])\n    if n == 1:\n        b = [-1]\n    elif b[-1] == a[-1]:\n        (b[-1], b[-2]) = (b[-2], b[-1])\n    print(*b)", "for d in ' ' * int(input()):\n    n = int(input())\n    (*a,) = map(int, input().split())\n    b = sorted(a)\n    for i in range(n - 1):\n        if b[i] == a[i]:\n            (b[i], b[i + 1]) = (b[i + 1], b[i])\n    if n == 1:\n        b = [-1]\n    elif b[-1] == a[-1]:\n        (b[-1], b[-2]) = (b[-2], b[-1])\n    print(*b)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split(maxsplit=n - 1)))\n    b = sorted(a)\n    if n == 1:\n        print(-1)\n        continue\n    for i in range(n - 1):\n        if b[i] == a[i]:\n            (b[i], b[i + 1]) = (b[i + 1], b[i])\n    if b[-1] == a[-1]:\n        (b[-1], b[-2]) = (b[-2], b[-1])\n    print(*b)", "for t in range(int(input())):\n    n = int(input())\n    a = [*map(int, input().split())]\n    b = sorted(a)\n    c = []\n    i = 0\n    j = 0\n    if n == 1:\n        print(-1)\n        continue\n    while b:\n        if b[j] != a[i]:\n            c.append(b.pop(j))\n            i += 1\n            j = 0\n        else:\n            j += 1\n        if len(b) == 1 and a[-1] == b[-1]:\n            tm = c[-1]\n            c[-1] = b[0]\n            c.append(tm)\n            break\n    print(*c)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = [i for i in range(1, n + 1)]\n    for i in range(n):\n        if i == n - 1:\n            if l[i] == ans[i]:\n                (ans[i], ans[i - 1]) = (ans[i - 1], ans[i])\n        elif l[i] == ans[i]:\n            (ans[i], ans[i + 1]) = (ans[i + 1], ans[i])\n    if ans == l:\n        print(-1)\n    else:\n        print(*ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    p = [int(x) for x in input().split()]\n    if n == 1:\n        print('-1')\n    else:\n        l = sorted(p)\n        for i in range(0, n - 1):\n            if l[i] == p[i]:\n                a = l[i + 1]\n                l[i + 1] = l[i]\n                l[i] = a\n        if p[-1] == l[-1]:\n            a = l[-2]\n            l[-2] = l[-1]\n            l[-1] = a\n        print(*l)", "for jj in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    b = sorted(arr)\n    if n == 1:\n        print(-1)\n    else:\n        for i in range(n):\n            if b[i] == arr[i]:\n                if i < n - 1:\n                    (b[i], b[i + 1]) = (b[i + 1], b[i])\n                else:\n                    (b[i], b[i - 1]) = (b[i - 1], b[i])\n        print(*b)", "t = int(input())\ns = []\nfor i in range(t):\n    n = int(input())\n    a = input()\n    a = a.split()\n    a = [int(x) for x in a]\n    b = a.copy()\n    c = b.copy()\n    b.sort()\n    if n < 2:\n        print(-1)\n        continue\n    for j in range(n - 1):\n        if b[j] == a[j]:\n            (b[j], b[j + 1]) = (b[j + 1], b[j])\n    m = -1\n    while b[m] == a[m]:\n        (b[m], b[m - 1]) = (b[m - 1], b[m])\n        m -= 1\n    for j in range(n):\n        print(b[j], end=' ')\n    print()", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    p = [j for j in range(1, n + 1)]\n    for j in range(n):\n        if l[j] == p[j]:\n            if j == n - 1:\n                (p[j - 1], p[j]) = (p[j], p[j - 1])\n            else:\n                (p[j], p[j + 1]) = (p[j + 1], p[j])\n        else:\n            continue\n    if n == 1:\n        print(-1)\n    else:\n        for j in range(n):\n            print(p[j], end=' ')\n        print()", "import sys\n\ndef mapped_read(cast):\n    return map(cast, input().split())\n\ndef read_list(cast):\n    return list(mapped_read(cast))\n\ndef solve():\n    (n,) = mapped_read(int)\n    a = read_list(int)\n    if n == 1:\n        print(-1)\n        return\n    ans = [i for i in range(1, n + 1)]\n    for (ind, v) in enumerate(a):\n        if v == ans[ind]:\n            if ind < n - 1:\n                (ans[ind], ans[ind + 1]) = (ans[ind + 1], ans[ind])\n            else:\n                (ans[ind], ans[ind - 1]) = (ans[ind - 1], ans[ind])\n    for i in ans:\n        print(i, end=' ')\n    print()\nsys.setrecursionlimit(100010)\n(t,) = mapped_read(int)\nfor _ in range(t):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    num = list(map(int, input().split()))\n    num1 = []\n    for i in range(n):\n        num1.append(i + 1)\n    for i in range(n):\n        if i != n - 1:\n            if num[i] == num1[i]:\n                temp = num1[i]\n                num1[i] = num1[i + 1]\n                num1[i + 1] = temp\n        elif num[i] == num1[i]:\n            temp = num1[n - 1]\n            num1[n - 1] = num1[n - 2]\n            num1[n - 2] = temp\n    for i in range(n):\n        if num1[i] == num[i]:\n            f = 0\n            break\n        else:\n            f = 1\n    if f:\n        print(*num1)\n    else:\n        print(-1)", "def mystic(A, n):\n    B = sorted(A)\n    for i in range(n - 1):\n        if A[i] == B[i]:\n            temp = B[i + 1]\n            B[i + 1] = B[i]\n            B[i] = temp\n    if A[n - 1] == B[n - 1]:\n        temp = B[n - 1]\n        B[n - 1] = B[n - 2]\n        B[n - 2] = temp\n    return B\ntests = int(input())\nfor _ in range(tests):\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = mystic(A, n)\n    if len(B) == 1:\n        print('-1')\n    else:\n        for i in range(n):\n            print(B[i], end=' ')\n        print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = []\n    if n == 1:\n        print(-1)\n    else:\n        for i in range(1, n + 1):\n            l.append(i)\n        for i in range(len(a)):\n            if a[i] == l[i]:\n                if i != len(a) - 1:\n                    (l[i + 1], l[i]) = (l[i], l[i + 1])\n        if l[-1] == a[-1]:\n            (l[-2], l[-1]) = (l[-1], l[-2])\n        print(*l)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = [0] * n\n    i = 1\n    if n == 1:\n        print(-1)\n        continue\n    while i < n + 1:\n        if arr[i - 1] == i:\n            if i == n:\n                (ans[i - 1], ans[i - 2]) = (ans[i - 2], i)\n                i += 1\n            else:\n                ans[i - 1] = i + 1\n                ans[i] = i\n                i += 2\n        else:\n            ans[i - 1] = i\n            i += 1\n    print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l1 = sorted(l)\n    if n == 1:\n        print(-1)\n        continue\n    ans = []\n    for i in range(n):\n        if l[i] == l1[i]:\n            if i == n - 1:\n                (l1[i], l1[i - 1]) = (l1[i - 1], l1[i])\n            else:\n                (l1[i], l1[i + 1]) = (l1[i + 1], l1[i])\n    for val in l1:\n        print(val, end=' ')\n    print()", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().strip().split()))\n    if n == 1:\n        print(-1)\n    elif n == 2:\n        print(l[1], l[0])\n    else:\n        lk = [i for i in range(1, n + 1)]\n        lans = []\n        for i in range(n - 2):\n            if lk[0] != l[i]:\n                lans.append(lk[0])\n                del lk[0]\n            else:\n                lans.append(lk[1])\n                del lk[1]\n        if lk[0] != l[n - 2] and lk[1] != l[n - 1]:\n            lans += [lk[0], lk[1]]\n        else:\n            lans += [lk[1], lk[0]]\n        print(*lans)", "import sys\nimport heapq\nimport bisect\nimport math\nfrom functools import lru_cache\nsys.setrecursionlimit(10 ** 6)\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, sys.stdin.readline().split()))\n    if n == 1:\n        print(-1)\n    else:\n        temp = arr[:]\n        heapq.heapify(temp)\n        res = [0] * n\n        flag = True\n        for i in range(n):\n            x = heapq.heappop(temp)\n            if arr[i] != x:\n                res[i] = x\n            elif not temp:\n                res[i] = res[i - 1]\n                res[i - 1] = x\n            else:\n                y = heapq.heappop(temp)\n                res[i] = y\n                heapq.heappush(temp, x)\n        print(*res)", "import sys\nfrom heapq import heappush, heappop\n\ndef rall():\n    return [x.strip() for x in sys.stdin.readlines()]\n\ndef rl():\n    return sys.stdin.readline().strip()\n\ndef rl_types(types):\n    str_list = [x for x in sys.stdin.readline().strip().split(' ')]\n    return [types[i](str_list[i]) for i in range(len(str_list))]\n\ndef pr(something=''):\n    sys.stdout.write(str(something) + '\\n')\n\ndef pra(array):\n    sys.stdout.write(' '.join([str(x) for x in array]) + '\\n')\n\ndef solve(array):\n    return array\nNT = int(rl())\nfor ti in range(NT):\n    n = int(rl())\n    array = list(map(int, rl().split(' ')))\n    if n == 1:\n        pr(-1)\n        continue\n    avail = []\n    for i in range(1, n + 1):\n        heappush(avail, i)\n    new = []\n    for i in range(n):\n        low = heappop(avail)\n        if low == array[i]:\n            if len(avail) == 0:\n                p = new[-1]\n                new[-1] = low\n                new.append(p)\n            else:\n                new.append(heappop(avail))\n                heappush(avail, low)\n        else:\n            new.append(low)\n    pra(new)", "for _ in range(int(input())):\n    n = int(input())\n    given = list(map(int, input().split()))\n    ans = [0] * n\n    i = 1\n    if n > 1:\n        while i < n + 1:\n            if given[i - 1] == i:\n                if i != n:\n                    ans[i] = i\n                    ans[i - 1] = i + 1\n                    i += 2\n                else:\n                    t = ans[i - 2]\n                    ans[i - 2] = i\n                    ans[i - 1] = t\n                    i += 1\n            else:\n                ans[i - 1] = i\n                i += 1\n        for i in range(n):\n            print(ans[i], end=' ')\n        print()\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    array = list(map(int, input().split()))\n    sorted_array = sorted(array)\n    ans = sorted_array\n    for i in range(n):\n        nxt = i + 1\n        if array[i] == sorted_array[i]:\n            if i != n - 1:\n                nxt = i + 1\n            else:\n                nxt = i - 1\n            (ans[i], ans[nxt]) = (ans[nxt], ans[i])\n    if n == 1:\n        print(-1)\n    else:\n        print(' '.join([str(i) for i in ans]))", "import sys\n\ndef read_line():\n    return sys.stdin.readline()\n\ndef solve():\n    cases = int(read_line())\n    for _ in range(cases):\n        N = int(read_line())\n        arr = read_line().split()\n        if N == 1:\n            print('-1\\n')\n            continue\n        num_arr = list(map(int, arr))\n        num_arr2 = num_arr.copy()\n        num_arr2 = sorted(num_arr2)\n        for idx in range(len(num_arr2)):\n            if num_arr2[idx] == num_arr[idx]:\n                if idx == len(num_arr2) - 1:\n                    (num_arr2[idx], num_arr2[idx - 1]) = (num_arr2[idx - 1], num_arr2[idx])\n                else:\n                    (num_arr2[idx], num_arr2[idx + 1]) = (num_arr2[idx + 1], num_arr2[idx])\n        for (idx, item) in enumerate(num_arr2):\n            if idx > 0:\n                print(' ', end='')\n            print(item, end='')\n        print('')\nsolve()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(-1)\n    else:\n        s = a[:]\n        s.sort(reverse=True)\n        b = []\n        for j in range(n):\n            if s[-1] != a[j]:\n                b.append(s[-1])\n                s.pop()\n            elif len(s) == 1:\n                b.append(s[0])\n                s.pop()\n            else:\n                b.append(s[-2])\n                s.remove(s[-2])\n        if b[-1] == a[-1]:\n            (b[-1], b[-2]) = (b[-2], b[-1])\n        print(*b)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(-1)\n    else:\n        b = list(range(1, n + 1))\n        for x in range(n - 1):\n            if a[x] != b[x]:\n                continue\n            else:\n                temp = b[x + 1]\n                b[x + 1] = b[x]\n                b[x] = temp\n        if b[n - 1] == a[n - 1]:\n            temp = b[n - 2]\n            b[n - 2] = b[n - 1]\n            b[n - 1] = temp\n        print(' '.join(map(str, b)))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    ans = [i for i in range(1, n + 1)]\n    if n == 1:\n        print(-1)\n        continue\n    for i in range(n - 1):\n        if ans[i] == a[i]:\n            (ans[i], ans[i + 1]) = (ans[i + 1], ans[i])\n    if ans[-1] == a[-1]:\n        (ans[n - 1], ans[n - 2]) = (ans[n - 2], ans[n - 1])\n    for i in range(n):\n        print(ans[i], end=' ')\n    print()", "t = int(input())\nfor i in range(t):\n    m = []\n    n = int(input())\n    x = input()\n    s = x.split(' ')\n    for i in range(n):\n        s[i] = int(s[i])\n    k = sorted(s)\n    for i in range(n):\n        if k[i] == s[i]:\n            if i != n - 1:\n                k[i] = k[i + 1]\n                k[i + 1] = s[i]\n            if i == n - 1:\n                w = k[i]\n                k[i] = k[i - 1]\n                k[i - 1] = w\n    for i in range(n):\n        m.append(str(k[i]))\n    if k == s:\n        m = []\n        m.append('-1')\n    print(' '.join(m))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [i for i in range(1, n + 1)]\n    c = []\n    for i in a:\n        for j in b:\n            if j != i:\n                c += [j]\n                b.remove(j)\n                break\n            elif j == i and len(b) == 1:\n                c += [j]\n                x = -1\n                while True:\n                    if x == -1 * n:\n                        c = [-1]\n                        break\n                    for k in range(n):\n                        if a[k] == c[k]:\n                            break\n                    else:\n                        break\n                    (c[x], c[x - 1]) = (c[x - 1], c[x])\n                    x -= 1\n    print(*c)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = sorted(l)\n    for i in range(len(l) - 1):\n        if l[i] == s[i]:\n            (s[i], s[i + 1]) = (s[i + 1], s[i])\n    if l[n - 1] == s[n - 1]:\n        (s[n - 1], s[n - 2]) = (s[n - 2], s[n - 1])\n    if n == 1:\n        print(-1)\n    else:\n        e = ' '.join(map(str, s))\n        print(e)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = [] + l\n    x.sort(reverse=True)\n    res = []\n    if n == 1:\n        print(-1)\n    else:\n        for i in range(n):\n            if i == n - 1 and x[-1] == l[i]:\n                a = res[-1]\n                res.pop()\n                res.append(x[-1])\n                res.append(a)\n                break\n            if x[-1] == l[i]:\n                a = x[-1]\n                x.pop()\n                res.append(x[-1])\n                x.pop()\n                x.append(a)\n            else:\n                res.append(x[-1])\n                x.pop()\n        for i in res:\n            print(i, end=' ')\n        print()", "t = int(input())\nwhile t:\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if n == 1:\n        print(-1)\n        t -= 1\n        continue\n    b = []\n    c = a.copy()\n    c.sort()\n    for i in range(n - 2):\n        if a[i] != c[0]:\n            b.append(c.pop(0))\n        else:\n            b.append(c.pop(1))\n    if c[0] != a[n - 2]:\n        if c[1] != a[n - 1]:\n            b.append(c.pop(0))\n            b.append(c.pop(0))\n        else:\n            b.append(c.pop(1))\n            b.append(c.pop(0))\n    else:\n        b.append(c.pop(1))\n        b.append(c.pop(0))\n    print(*b)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    perm = [i for i in input().split(' ')]\n    if n == 1:\n        print(-1)\n        continue\n    new_perm = [str(i) for i in range(1, n + 1)]\n    for i in range(n):\n        if new_perm[i] != perm[i]:\n            continue\n        elif i != n - 1:\n            (new_perm[i], new_perm[i + 1]) = (new_perm[i + 1], new_perm[i])\n        else:\n            (new_perm[i], new_perm[i - 1]) = (new_perm[i - 1], new_perm[i])\n    print(' '.join(new_perm))", "def answer(n, lt):\n    if n == 1:\n        print('-1')\n        return -1\n    new = lt[:]\n    new.sort()\n    for i in range(n - 1):\n        if new[i] == lt[i]:\n            (new[i], new[i + 1]) = (new[i + 1], new[i])\n    for i in range(n - 1, -1, -1):\n        if new[i] == lt[i]:\n            (new[i], new[i - 1]) = (new[i - 1], new[i])\n        else:\n            break\n    ans = ''\n    for ele in new:\n        ans += str(ele) + ' '\n    print(ans)\nt = int(input())\nfor test in range(t):\n    n = int(input())\n    txt = input()\n    lt = list(map(int, txt.split(' ')))\n    answer(n, lt)", "def solve():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    if n == 1:\n        print('-1')\n        return\n    b = a.copy()\n    a.sort()\n    i = 0\n    while i < n - 1:\n        if a[i] == b[i]:\n            temp = a[i]\n            a[i] = a[i + 1]\n            a[i + 1] = temp\n            i += 2\n            continue\n        i += 1\n    if a[n - 1] == b[n - 1]:\n        temp = a[n - 2]\n        a[n - 2] = a[n - 1]\n        a[n - 1] = temp\n    for ele in a:\n        print(ele, end=' ')\n    print()\nt = int(input())\nfor i in range(t):\n    solve()", "t = int(input())\nans = []\nfor x in range(t):\n    n = int(input())\n    p = list(map(int, input().split()))\n    if n == 1:\n        ans.append(-1)\n        continue\n    q = p[:]\n    q.sort()\n    for x in range(n):\n        if q[x] == p[x]:\n            if x == n - 1:\n                t = q[x]\n                q[x] = q[x - 1]\n                q[x - 1] = t\n            else:\n                t = q[x]\n                q[x] = q[x + 1]\n                q[x + 1] = t\n    ans.append(q)\nfor a in ans:\n    if a == -1:\n        print(a)\n        continue\n    for nums in a:\n        print(nums, end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    if n == 1:\n        print(-1)\n        continue\n    for i in range(1, n + 1):\n        b.append(i)\n    for i in range(n - 1):\n        if a[i] == b[i]:\n            (b[i], b[i + 1]) = (b[i + 1], b[i])\n    if a[-1] == b[-1]:\n        (b[-1], b[-2]) = (b[-2], b[-1])\n    print(*b)", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    s = list(map(int, input().split()))\n    result = []\n    ss = sorted(s)\n    for x in s:\n        for y in ss:\n            if x != y:\n                if len(ss) == 2 and y != s[-1] and (y == ss[0]) and (ss[-1] == s[-1]):\n                    pass\n                else:\n                    result.append(y)\n                    ss.pop(ss.index(y))\n                    break\n    print(' '.join([str(x) for x in result]) if len(result) == n else -1)", "t = int(input())\nwhile t:\n    n = int(input())\n    l = list(map(int, input().split()))\n    p = sorted(l)\n    if n == 1:\n        print(-1)\n    else:\n        for i in range(n - 1):\n            if l[i] == p[i]:\n                (p[i], p[i + 1]) = (p[i + 1], p[i])\n        if p[-1] == l[-1]:\n            (p[-2], p[-1]) = (p[-1], p[-2])\n        print(*p)\n    t -= 1", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = sorted(a)\n    if n != 1:\n        for i in range(0, n - 1):\n            if a[i] == b[i]:\n                tmp = b[i]\n                b[i] = b[i + 1]\n                b[i + 1] = tmp\n        if a[n - 1] == b[n - 1]:\n            tmp = b[n - 1]\n            b[n - 1] = b[i]\n            b[i] = tmp\n        print(*b)\n    else:\n        print('-1')", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    p_sorted = sorted(p)\n    ans = []\n    if n == 1:\n        print(-1)\n        continue\n    for i in range(n):\n        for j in range(len(p_sorted)):\n            if p_sorted[j] != p[i]:\n                ans.append(p_sorted[j])\n                p_sorted.pop(j)\n                break\n    if len(ans) != n:\n        ans.append(p_sorted[0])\n        t = ans[-1]\n        ans[-1] = ans[-2]\n        ans[-2] = t\n    print(*ans)", "def solution():\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n <= 1:\n        print(-1)\n        return\n    d = {i: j for (i, j) in enumerate(a)}\n    used = {i: False for i in a}\n    a.sort()\n    for i in range(n - 1):\n        if a[i] == d[i]:\n            (a[i], a[i + 1]) = (a[i + 1], a[i])\n    if a[n - 1] == d[n - 1]:\n        (a[n - 1], a[n - 2]) = (a[n - 2], a[n - 1])\n    print(*a)\ntry:\n    import sys\n    import os\n    if os.path.exists('.cpl_files/2.in.txt'):\n        sys.stdin = open('.cpl_files/2.in.txt', 'r')\n        sys.stdout = open('.cpl_files/2.out.txt', 'w')\nexcept:\n    pass\nt = int(input())\nwhile t:\n    solution()\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    q = p.copy()\n    p.sort(reverse=True)\n    t = []\n    for i in range(n):\n        if p[-1] != q[i]:\n            t.append(p[-1])\n            p.pop()\n        else:\n            try:\n                t.append(p[-2])\n                p.pop(-2)\n            except:\n                t.insert(-1, p[-1])\n    if t == q:\n        print(-1)\n    else:\n        print(' '.join(map(str, t)))", "def main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n == 1:\n        print(-1)\n        return\n    ans = []\n    i = 1\n    s = set()\n    flag = False\n    for j in range(n - 1):\n        if not flag:\n            if arr[j] != i:\n                ans.append(i)\n                s.add(i)\n                i += 1\n            else:\n                ans.append(i + 1)\n                s.add(i + 1)\n                flag = True\n        else:\n            ans.append(i)\n            s.add(i)\n            i += 2\n            flag = False\n    if n not in s:\n        ans.append(n)\n        if arr[-1] == n:\n            (ans[-1], ans[-2]) = (ans[-2], ans[-1])\n    else:\n        ans.append(n - 1)\n    for z in ans:\n        print(z, end=' ')\n    print()\n    return\n    return ans\nfor _ in range(int(input())):\n    main()", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = a[:]\n    b.sort()\n    c = []\n    if n == 1:\n        print(-1)\n    else:\n        for i in range(n):\n            if b[i] != a[i]:\n                c.append(b[i])\n            elif i < n - 1:\n                (b[i], b[i + 1]) = (b[i + 1], b[i])\n                c.append(b[i])\n            else:\n                c.append(b[i])\n        if a[n - 1] == b[n - 1]:\n            (c[n - 1], c[n - 2]) = (c[n - 2], c[n - 1])\n        print(*c)", "for _ in range(int(input())):\n    n = int(input())\n    lis = [int(i) for i in input().split()]\n    if len(lis) == 1:\n        print(-1)\n    else:\n        new_lis = list(range(1, n + 1))\n        for i in range(n - 1):\n            if new_lis[i] == lis[i]:\n                (new_lis[i], new_lis[i + 1]) = (new_lis[i + 1], new_lis[i])\n        if new_lis[-1] == lis[-1]:\n            (new_lis[-2], new_lis[-1]) = (new_lis[-1], new_lis[-2])\n        print(*new_lis, sep=' ')", "testcases = int(input())\nfor j in range(testcases):\n    n = int(input())\n    l = [int(x) for x in input().split(' ')]\n    if n == 1:\n        print(-1)\n        continue\n    res = [i + 1 for i in range(n)]\n    i = 0\n    while i < n - 1:\n        if l[i] == i + 1:\n            (res[i], res[i + 1]) = (res[i + 1], res[i])\n            i += 2\n        else:\n            i += 1\n    if res[n - 1] == n and l[n - 1] == n:\n        (res[n - 1], res[n - 2]) = (res[n - 2], res[n - 1])\n    for i in range(n):\n        print(res[i], end=' ')\n    print()", "import copy\n\ndef sol(n, p):\n    if n <= 1:\n        return -1\n    q = copy.deepcopy(p)\n    q.sort()\n    res = []\n    skip = False\n    for i in range(len(p)):\n        if q[i] is None and (not skip):\n            continue\n        if skip:\n            res.append(q[i - 1])\n            q[i - 1] = None\n            skip = False\n            continue\n        if q[i] == p[i]:\n            if i == len(p) - 1:\n                res.append(q[i])\n                (res[i], res[i - 1]) = (res[i - 1], res[i])\n            else:\n                skip = True\n                res.append(q[i + 1])\n                q[i + 1] = None\n            continue\n        else:\n            res.append(q[i])\n            q[i] = None\n    return ' '.join(list(map(lambda x: str(x), res)))\ntest_cases = int(input().strip())\nfor t in range(test_cases):\n    n = int(input().strip())\n    p = list(map(lambda x: int(x), input().strip().split(' ')))\n    print(sol(n, p))", "for j in range(int(input())):\n    c = int(input())\n    a = list(map(int, input().split()))\n    b = sorted(a)\n    for i in range(c - 1):\n        if b[i] == a[i]:\n            t = b[i + 1]\n            b[i + 1] = b[i]\n            b[i] = t\n    if c != 1 and b[c - 1] == a[c - 1]:\n        t = b[c - 1]\n        b[c - 1] = b[c - 2]\n        b[c - 2] = t\n    if c != 1:\n        print(*b)\n    else:\n        print(-1)", "def merge(Left, Right):\n    sortedArray = []\n    L = len(Left)\n    R = len(Right)\n    l = 0\n    r = 0\n    i = 0\n    while l + r < L + R:\n        if r >= R or (l < L and Left[l] < Right[r]):\n            sortedArray.append(Left[l])\n            l += 1\n        else:\n            sortedArray.append(Right[r])\n            r += 1\n    return sortedArray\n\ndef mergeSort(arr):\n    n = len(arr)\n    if n == 1:\n        return arr\n    Left = mergeSort(arr[:n // 2])\n    Right = mergeSort(arr[n // 2:])\n    return merge(Left, Right)\n\ndef swapper(arr, j):\n    temp = arr[j]\n    if j == len(arr) - 1:\n        temp = arr[j]\n        arr[j] = arr[j - 1]\n        arr[j - 1] = temp\n    else:\n        arr[j] = arr[j + 1]\n        arr[j + 1] = temp\n    return arr\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = [int(j) for j in input().split()]\n    if n == 1:\n        print(-1)\n        continue\n    arrSorted = mergeSort(arr)\n    finArr = []\n    j = 0\n    while j < n:\n        if arr[j] != arrSorted[j]:\n            j += 1\n        else:\n            arrSorted = swapper(arrSorted, j)\n    print(' '.join([str(j) for j in arrSorted]))", "import math\nt = int(input())\nwhile t:\n    t -= 1\n    h = input()\n    a = int(h)\n    lis = input().split()\n    lis = [int(x) for x in lis]\n    best = list(range(1, a + 1))\n    for i in range(0, a - 1):\n        if lis[i] != best[0]:\n            lis[i] = best.pop(0)\n        else:\n            lis[i] = best.pop(1)\n    if lis[a - 1] != best[0]:\n        lis[a - 1] = best[0]\n    else:\n        lis[a - 1] = lis[a - 2]\n        lis[a - 2] = best[0]\n    if a == 1:\n        print(-1)\n    else:\n        lis = [str(x) for x in lis]\n        print(' '.join(lis))", "def check():\n    return\n\ndef exe():\n    l = p.copy()\n    l.sort()\n    ans = []\n    pointer = 0\n    for i in range(n):\n        if l[0] != p[i]:\n            ans.append(l[0])\n            l.remove(l[0])\n        else:\n            for j in range(len(l)):\n                if l[j] != p[i]:\n                    ans.append(l[j])\n                    l.remove(l[j])\n                    break\n    if ans == []:\n        print(-1)\n        return\n    if len(ans) != n:\n        ans.append(l[0])\n        if ans[-1] == l[-1]:\n            temp = ans[-2]\n            ans[-2] = ans[-1]\n            ans[-1] = temp\n    print(*ans)\nfor i in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    exe()", "def solution(arr, length):\n    if length == 0 or length == 1:\n        return -1\n    sorted_arr = sorted(arr)\n    for i in range(length):\n        if i == length - 1:\n            if sorted_arr[i] == arr[i]:\n                (sorted_arr[i], sorted_arr[i - 1]) = (sorted_arr[i - 1], sorted_arr[i])\n        if sorted_arr[i] == arr[i]:\n            (sorted_arr[i], sorted_arr[i + 1]) = (sorted_arr[i + 1], sorted_arr[i])\n    return sorted_arr\nn = int(input())\nfor i in range(n):\n    length = int(input())\n    arr = list(map(int, input().split()))\n    res = solution(arr, length)\n    if isinstance(res, list):\n        print(*res, sep=' ')\n    else:\n        print(res)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = a.copy()\n    b.sort()\n    if n == 1:\n        print(-1)\n    else:\n        for i in range(0, n):\n            if b[i] == a[i]:\n                if i == n - 1:\n                    (b[i], b[i - 1]) = (b[i - 1], b[i])\n                else:\n                    (b[i], b[i + 1]) = (b[i + 1], b[i])\n        for i in b:\n            print(i, end=' ')\n        print()", "t = int(input())\nfor i in range(t):\n    N = int(input())\n    l = [int(i) for i in input().split()]\n    if N == 1:\n        print(-1)\n        continue\n    l_sort = l.copy()\n    l_sort.sort()\n    out = []\n    for elm in l:\n        i = 0\n        while l_sort[i] == elm and i < len(l_sort) - 1:\n            i += 1\n        out.append(l_sort[i])\n        l_sort.pop(i)\n    if out[len(out) - 1] == l[len(out) - 1]:\n        i = len(out) - 1\n        while out[len(out) - 1] == l[i] and i >= 0:\n            i -= 1\n        a = out[len(out) - 1]\n        out[len(out) - 1] = out[i]\n        out[i] = a\n    for elm in out:\n        print(elm, end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    c = sorted(p)\n    if n == 1:\n        print(-1)\n        continue\n    for i in range(n):\n        if p[i] != c[i]:\n            continue\n        if i == n - 1:\n            (c[n - 1], c[n - 2]) = (c[n - 2], c[n - 1])\n        else:\n            (c[i], c[i + 1]) = (c[i + 1], c[i])\n    print(*c)", "t = int(input())\nfor _ in range(t):\n    (n,) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = sorted(a)\n    x = []\n    for i in range(n):\n        if a[i] == b[i]:\n            x.append(i)\n    s = set(x)\n    if n == 1:\n        print(-1)\n        continue\n    for i in range(n):\n        if i in s:\n            if i < n - 1:\n                (b[i], b[i + 1]) = (b[i + 1], b[i])\n                if i + 1 in s:\n                    s.remove(i + 1)\n                s.remove(i)\n            else:\n                (b[i], b[i - 1]) = (b[i - 1], b[i])\n                if i - 1 in s:\n                    s.remove(i - 1)\n                s.remove(i)\n    print(*b)", "t = int(input())\nfor T in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    hm = [[0 for ii in range(2)] for jj in range(n)]\n    for i in range(n):\n        hm[i][0] = a[i]\n        hm[i][1] = i\n    hm.sort()\n    b = [0] * n\n    if n == 1:\n        print(-1)\n    else:\n        i = 0\n        while i < n:\n            if hm[i][0] == a[i]:\n                if i == n - 1:\n                    u = b[i - 1]\n                    b[i - 1] = hm[i][0]\n                    b[i] = u\n                else:\n                    b[i] = hm[i + 1][0]\n                    b[i + 1] = hm[i][0]\n                i += 1\n            else:\n                b[i] = hm[i][0]\n            i += 1\n        print(*b)", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    b = [int(j) for j in input().split()]\n    c = sorted(b)\n    for j in range(a):\n        if c[j] == b[j]:\n            if j + 1 < a:\n                (c[j], c[j + 1]) = (c[j + 1], c[j])\n            else:\n                (c[j], c[j - 1]) = (c[j - 1], c[j])\n    if c == b:\n        print(-1)\n    else:\n        print(*c)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = sorted(a)\n    if len(b) == 1:\n        print(-1)\n        continue\n    for i in range(len(a)):\n        if a[i] == b[i]:\n            if i == n - 1:\n                (b[-1], b[-2]) = (b[-2], b[-1])\n            else:\n                (b[i], b[i + 1]) = (b[i + 1], b[i])\n    print(*b)", "def printer(l, srt):\n    print(*l)\n    print(*srt)\n    print()\n\ndef solution(n, l, srt):\n    if n == 1:\n        return [-1]\n    for i in range(n - 1):\n        if srt[i] != l[i]:\n            continue\n        else:\n            (srt[i], srt[i + 1]) = (srt[i + 1], srt[i])\n    if srt[-1] == l[-1]:\n        (srt[n - 1], srt[n - 2]) = (srt[n - 2], srt[n - 1])\n    return srt\ntc = int(input())\nfor i in range(tc):\n    n = int(input())\n    l = list(map(int, input().split()))\n    srt = l[::-1]\n    srt.sort()\n    ANS = solution(n, l, srt)\n    print(*ANS)", "for _ in range(int(input())):\n    n = int(input())\n    old = [int(a) for a in input().split()]\n    arr = sorted(old)\n    i = 0\n    while i < n - 1:\n        if old[i] == arr[i]:\n            (arr[i], arr[i + 1]) = (arr[i + 1], arr[i])\n        i += 1\n    if old[i] == arr[i]:\n        if i == 0:\n            print(-1)\n        else:\n            (arr[i - 1], arr[i]) = (arr[i], arr[i - 1])\n            print(' '.join(map(str, arr)))\n    else:\n        print(' '.join(map(str, arr)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    new_arr = [] + arr\n    new_arr.sort()\n    new_arr.sort()\n    if n == 1:\n        ans = -1\n    else:\n        ans = []\n        length = 0\n        while len(ans) != n:\n            if len(new_arr) == 2 and arr[n - 1] == new_arr[1]:\n                ans.append(new_arr[1])\n                length += 1\n                new_arr = new_arr[0:1]\n            elif arr[length] != new_arr[0]:\n                ans.append(new_arr[0])\n                length += 1\n                new_arr = new_arr[1:]\n            else:\n                ans.append(new_arr[1])\n                new_arr = new_arr[0:1] + new_arr[2:]\n                length += 1\n    if ans == -1:\n        print(-1)\n    else:\n        for j in range(n):\n            if j != n - 1:\n                print(ans[j], end=' ')\n            else:\n                print(ans[j])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1:\n        print(-1)\n    else:\n        lst = []\n        for i in range(1, n + 1):\n            lst.append(i)\n        for i in range(n - 1):\n            if l[i] == lst[i]:\n                (lst[i], lst[i + 1]) = (lst[i + 1], lst[i])\n            else:\n                pass\n        if l[n - 1] == lst[n - 1]:\n            (lst[n - 1], lst[n - 2]) = (lst[n - 2], lst[n - 1])\n        for i in lst:\n            print(i, end=' ')\n        print()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    p = list(map(int, input().split()))\n    res = sorted(p)\n    shift = False\n    for i in range(n - 1):\n        if res[i] == p[i]:\n            (res[i], res[i + 1]) = (res[i + 1], res[i])\n    if n > 1:\n        if res[n - 1] == p[n - 1]:\n            (res[n - 1], res[n - 2]) = (res[n - 2], res[n - 1])\n    if n > 1:\n        print(' '.join(map(str, res)))\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    crr = arr.copy()\n    x = sorted(arr)\n    z = 100000\n    for i in range(n):\n        if x[i] != arr[i]:\n            arr[i] = x[i]\n            z = 100000\n        else:\n            z = min(z, i)\n            if i != n - 1:\n                arr[i] = x[i + 1]\n                x[i + 1] = x[i]\n            elif arr[i] != crr[z]:\n                arr[i] = crr[z]\n            else:\n                (arr[i], arr[i - 1]) = (arr[i - 1], arr[i])\n    if crr == arr:\n        print(-1)\n    else:\n        print(*arr)", "import math\nfrom collections import defaultdict\nmod = 2 * 10 ** 5\n\ndef sol():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = a[:]\n    c = []\n    if n == 1:\n        print(-1)\n        return\n    b.sort()\n    cntA = 0\n    for i in range(n):\n        if b[i] != a[i]:\n            c.append(b[i])\n        elif i == n - 1:\n            r = c.pop()\n            c.append(b[n - 1])\n            c.append(r)\n        else:\n            c.append(b[i + 1])\n            b[i + 1] = b[i]\n    print(*c)\n\ndef main():\n    for _ in range(int(input())):\n        sol()\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(-1)\n        continue\n    samp = [i for i in range(1, n + 1)]\n    for i in range(0, n - 1):\n        if a[i] == samp[i]:\n            (samp[i], samp[i + 1]) = (samp[i + 1], samp[i])\n    if a[n - 1] == samp[n - 1]:\n        (samp[n - 1], samp[n - 2]) = (samp[n - 2], samp[n - 1])\n    print(*samp)", "for _ in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = l1.copy()\n    if n == 1:\n        print(-1)\n    if n > 1:\n        l2.sort()\n        for i in range(n - 1):\n            if l1[i] == l2[i]:\n                (l2[i % n], l2[(i + 1) % n]) = (l2[(i + 1) % n], l2[i % n])\n        if l1[n - 1] == l2[n - 1]:\n            (l2[n - 1], l2[n - 2]) = (l2[n - 2], l2[n - 1])\n        print(*l2)", "t = int(input())\nfor _ in range(t):\n    input()\n    p = list(map(lambda x: int(x), input().split()))\n    if len(p) == 1:\n        print(-1)\n        continue\n    remaining = sorted(p)\n    cur = []\n    while len(remaining) > 2:\n        if remaining[0] == p[len(cur)]:\n            cur.append(remaining.pop(1))\n        else:\n            cur.append(remaining.pop(0))\n    if p[-1] == remaining[1] or p[-2] == remaining[0]:\n        cur.append(remaining[1])\n        cur.append(remaining[0])\n    else:\n        cur.append(remaining[0])\n        cur.append(remaining[1])\n    print(' '.join(map(lambda x: str(x), cur)))", "def mystic_permutation(a, n):\n    if n == 1:\n        print(-1)\n        return\n    a1 = list(range(1, n + 1))\n    for ix in range(n - 1):\n        if a[ix] == a1[ix]:\n            (a1[ix], a1[ix + 1]) = (a1[ix + 1], a1[ix])\n    if a1[n - 1] == a[n - 1]:\n        (a1[n - 2], a1[n - 1]) = (a1[n - 1], a1[n - 2])\n    print(' '.join(map(str, a1)))\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    mystic_permutation(a, n)", "tc = int(input())\nwhile tc > 0:\n    n = int(input())\n    A = [int(i) for i in input().split(' ')]\n    B = []\n    for i in range(n):\n        B = B + [[A[i], i]]\n    B.sort()\n    flag = 0\n    if n == 1:\n        print('-1')\n        flag = 1\n    else:\n        i = 0\n        while i < n:\n            if i == B[i][1] and i + 1 < n:\n                temp = B[i][0]\n                B[i][0] = B[i + 1][0]\n                B[i + 1][0] = temp\n                i = i + 2\n            elif i == B[i][1] and i + 1 >= n:\n                temp = B[i][0]\n                B[i][0] = B[i - 1][0]\n                B[i - 1][0] = temp\n                i = i + 2\n            else:\n                i = i + 1\n    for i in range(n):\n        A[i] = str(B[i][0])\n    if flag == 0:\n        print(' '.join(A))\n    tc = tc - 1", "strng = lambda : input()\ninp = lambda : int(input())\nmul = lambda : map(int, input().split())\njn = lambda x, l: x.join(map(str, l))\nstrlst = lambda : list(input())\nlst = lambda : list(map(int, input().split()))\ndd = lambda : defaultdict(lambda : 0)\nfrom collections import defaultdict\nfrom math import ceil, log, floor, sqrt, gcd, log10\nfor _ in range(inp()):\n    n = inp()\n    l1 = lst()\n    d = dd()\n    for i in range(n):\n        d[l1[i]] += 1\n    l2 = l1.copy()\n    l2.sort()\n    if n == 1:\n        print(-1)\n        continue\n    for i in range(n):\n        if l1[i] == l2[i]:\n            break\n    else:\n        print(jn(' ', l2))\n        continue\n    for i in range(n - 1):\n        if l1[i] == l2[i]:\n            tmp = l2[i]\n            l2[i] = l2[i + 1]\n            l2[i + 1] = tmp\n    if l1[n - 1] == l2[n - 1]:\n        tmp = l2[n - 1]\n        l2[n - 1] = l2[n - 2]\n        l2[n - 2] = tmp\n    print(jn(' ', l2))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = sorted(a)\n    if len(a) < 2:\n        print(-1)\n    else:\n        i = 0\n        list_final = False\n        while not list_final:\n            list_final = True\n            while i < len(a):\n                if a[i] == b[i]:\n                    list_final = False\n                    if i != len(a) - 1:\n                        (b[i], b[i + 1]) = (b[i + 1], b[i])\n                    else:\n                        (b[i], b[i - 1]) = (b[i - 1], b[i])\n                i += 1\n        print(' '.join([str(p) for p in b]))\n    t -= 1"]