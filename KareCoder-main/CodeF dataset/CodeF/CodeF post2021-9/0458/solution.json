["t = int(input())\nout = []\n\ndef solve(arr):\n    arr = sorted(arr)\n    max1 = abs(arr[-1] - arr[-2]) + abs(arr[-1] - arr[0])\n    for i in range(len(arr) - 2, 1, -1):\n        temp = abs(arr[i] - arr[i - 1]) + abs(arr[i] - arr[0])\n        if temp > max1:\n            max1 = temp\n    max2 = abs(arr[-1] - arr[-3]) + abs(arr[-2] - arr[-3])\n    for i in range(len(arr) - 3, 0, -1):\n        temp = abs(arr[i] - arr[i - 1]) + abs(arr[i - 1] - arr[-1])\n        if temp > max2:\n            max2 = temp\n    return max(max1, max2)\nfor tc in range(t):\n    n = int(input())\n    arr = []\n    arr = map(int, input().split())\n    out.append(solve(arr))\nfor o in out:\n    print(o)", "def get_score(one, two, three):\n    return abs(one - two) + abs(two - three)\n\ndef solution(num_list: list, length: int):\n    num_list.sort()\n    high = 0\n    for i in range(length - 2):\n        value = num_list[i + 1] - num_list[i] + num_list[-1] - num_list[i]\n        if value > high:\n            high = value\n    for i in range(1, length - 1):\n        value = num_list[i + 1] - num_list[i] + num_list[i + 1] - num_list[0]\n        if value > high:\n            high = value\n    return high\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    ln = list(map(int, input().split()))\n    print(solution(ln, n))", "import collections\nimport heapq\nimport sys\nimport math\nimport itertools\nimport bisect\nfrom io import BytesIO, IOBase\nimport os\n\ndef values():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef inlsts():\n    return [int(i) for i in sys.stdin.readline().split()]\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef instr():\n    return sys.stdin.readline().strip()\n\ndef words():\n    return [i for i in sys.stdin.readline().strip().split()]\n\ndef chars():\n    return [i for i in sys.stdin.readline().strip()]\n\ndef solve():\n    n = inp()\n    l = sorted(values())\n    if len(l) == 1:\n        print(0)\n        return\n    if len(l) == 2:\n        print(2 * abs(l[0] - l[1]))\n        return\n    ans = 0\n    for i in range(len(l) - 1):\n        ans = max(ans, l[-1] - l[i] + l[i + 1] - l[i])\n    for i in range(len(l) - 1):\n        ans = max(ans, l[i + 1] - l[0] + l[i + 1] - l[i])\n    print(ans)\nfor i in range(inp()):\n    solve()", "def solve() -> None:\n    n = int(input())\n    weights = list(map(int, input().split()))\n    weights.sort()\n    ans = 0\n    for i in range(2, n):\n        ans = max(ans, weights[i] - weights[i - 1] + weights[i] - weights[0])\n    for i in range(1, n - 1):\n        ans = max(ans, weights[i] - weights[i - 1] + weights[-1] - weights[i - 1])\n    print(ans)\ntt = int(input())\nfor _ in range(tt):\n    solve()", "def sol(lst):\n    res = 0\n    lst.sort()\n    for i in range(1, n):\n        res = max(res, 2 * lst[i] - lst[i - 1] - lst[0])\n    for i in reversed(range(len(lst) - 2)):\n        res = max(res, lst[n - 1] + lst[i + 1] - 2 * lst[i])\n    return res\nT = int(input())\nfor test_case in range(1, T + 1):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    s = sol(lst)\n    print(s)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().strip().split()))\n    co = 0\n    l = list(set(l))\n    l.sort()\n    n = len(l)\n    if n <= 1:\n        co = 0\n    elif n == 2:\n        co = 2 * (l[1] - l[0])\n    else:\n        co = l[-1] - l[0] + max(l[-1] - l[-2], l[1] - l[0])\n        a = l[-1] - l[1] + l[2] - l[1]\n        b = l[-2] - l[0] + l[-2] - l[-3]\n        co = max(a, b, co)\n        for i in range(2, n - 2):\n            c = l[-1] - l[i] + l[i + 1] - l[i]\n            e = l[i] - l[0] + l[i] - l[i - 1]\n            co = max(co, c, e)\n    print(co)", "def f(arr):\n    s_arr = sorted(arr)\n    res = 0\n    for i in range(len(arr) - 2):\n        res = max([res, s_arr[i + 1] - s_arr[i] + s_arr[-1] - s_arr[i]])\n    for i in range(len(arr) - 1, 1, -1):\n        res = max([res, s_arr[i] - s_arr[i - 1] + s_arr[i] - s_arr[0]])\n    return res\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = [int(el) for el in input().split(' ')]\n    print(f(arr))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    a.sort()\n    for i in range(n - 1):\n        ans = max(ans, a[n - 1] + a[i] - 2 * a[i - 1], 2 * a[i + 1] - a[i] - a[0])\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    a.sort()\n    for i in range(n - 1):\n        ans = max(ans, a[n - 1] + a[i] - 2 * a[i - 1], 2 * a[i + 1] - a[i] - a[0])\n    print(ans)", "def main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        a.sort()\n        m_a = min(a)\n        M_a = max(a)\n        init_val = max(M_a - m_a + a[1] - m_a, M_a - m_a + M_a - a[-2])\n        for i in range(1, n - 1):\n            val1 = M_a - a[i] + a[i + 1] - a[i]\n            j = n - i - 1\n            val2 = a[j] - m_a + a[j] - a[j - 1]\n            val = max(val1, val2)\n            if val > init_val:\n                init_val = val\n        print(init_val)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    ans = a[-1] - a[0]\n    for i in range(n - 1):\n        ans = max(ans, a[i + 1] + a[-1] - 2 * a[i], 2 * a[i + 1] - a[i] - a[0])\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = sorted(list(map(int, input().split())))\n    ans = arr[-1] - arr[0]\n    for i in range(n - 1):\n        b1 = arr[i + 1]\n        b2 = arr[-1]\n        b3 = arr[0]\n        ans = max(ans, b1 + b2 - 2 * arr[i], 2 * b1 - arr[i] - b3)\n    print(ans)", "def bar(A):\n    res = 0\n    for i in range(1, len(A) - 1):\n        ma = A[i - 1]\n        res = max(res, A[i] - ma + A[-1] - ma)\n    return res\n\ndef foo():\n    N = int(input())\n    A = sorted(list(map(int, input().strip().split())))\n    B = [-x for x in A][::-1]\n    return max(bar(A), bar(B))\nT = int(input())\nfor _ in range(T):\n    print(foo())", "def min_score(bricks):\n    bricks_n = sorted(bricks)\n    bricks.sort(reverse=True)\n    score = 0\n    for k in range(len(bricks) - 2):\n        score = max(score, bricks_n[k + 1] - 2 * bricks_n[k] + bricks_n[-1])\n    for k in range(len(bricks_n) - 2):\n        score = max(score, 2 * bricks[k] - bricks[k + 1] - bricks[-1])\n    return score\na = int(input())\nfor i in range(a):\n    f = int(input())\n    bricks = list(map(int, input().split()))\n    print(min_score(bricks))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    a.sort()\n    for i in range(n - 1):\n        ans = max(ans, a[n - 1] + a[i] - 2 * a[i - 1], 2 * a[i + 1] - a[i] - a[0])\n    print(ans)", "t = int(input())\nfor t1 in range(t):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    ans = 0\n    for i in range(n - 1):\n        mx = a[i + 1] - a[i] + max(a[i + 1] - a[0], a[-1] - a[i])\n        if mx > ans:\n            ans = mx\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    res = 0\n    for i in range(1, n - 1):\n        res = max((res, 2 * l[i + 1] - l[0] - l[i], l[n - 1] + l[i] - 2 * l[i - 1]))\n    print(res)", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    v1 = 0\n    v2 = 0\n    for i in range(n - 1, 1, -1):\n        v1 = max(2 * a[i] - a[i - 1] - a[0], v1)\n    for i in range(0, n - 2):\n        v2 = max(a[i + 1] + a[-1] - 2 * a[i], v2)\n    return max(v1, v2)\nfor t in range(0, int(input())):\n    print(solve())", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort(key=lambda x: -x)\n    answer = 0\n    for i in range(n - 2):\n        v = 2 * a[i] - a[i + 1] - a[n - 1]\n        if v > answer:\n            answer = v\n    for j in range(2, n):\n        v = a[0] + a[j - 1] - 2 * a[j]\n        if v > answer:\n            answer = v\n    print(answer)", "import math\nt = int(input())\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    ans = 0\n    for i in range(2, n):\n        ans = max(ans, arr[i] - arr[i - 1] + arr[i] - arr[0])\n    for i in range(n - 1):\n        ans = max(ans, arr[i + 1] - arr[i] + arr[n - 1] - arr[i])\n    print(ans)\nwhile t:\n    solve()\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    input()\n    temp = input().split()\n    l = [int(v) for v in temp]\n    l.sort()\n    largest = 0\n    for b in range(0, len(l) - 2):\n        m = abs(l[b] - l[b + 1]) + abs(l[b] - l[-1])\n        if m > largest:\n            largest = m\n    l.reverse()\n    for b in range(0, len(l) - 2):\n        m = abs(l[b] - l[b + 1]) + abs(l[b] - l[-1])\n        if m > largest:\n            largest = m\n    print(largest)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    ans = a[n - 1] - a[0]\n    for i in range(n - 1):\n        ans = max(ans, a[i + 1] + a[n - 1] - 2 * a[i], 2 * a[i + 1] - a[i] - a[0])\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    a.sort()\n    for i in range(n - 1):\n        ans = max(ans, a[n - 1] + a[i] - 2 * a[i - 1], 2 * a[i + 1] - a[i] - a[0])\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    a.sort()\n    for i in range(n - 1):\n        ans = max(ans, a[n - 1] + a[i] - 2 * a[i - 1], 2 * a[i + 1] - a[i] - a[0])\n    print(ans)", "def brick():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        para = input().split(' ')\n        bri = [int(x) for x in para]\n        bri.sort()\n        (s, l) = (bri[0], bri[-1])\n        e1 = l - s + max(min(bri[1:-1]) - s, l - max(bri[1:-1]))\n        for i in range(1, len(bri) - 1):\n            e2 = l - bri[i - 1] + bri[i] - bri[i - 1]\n            e3 = bri[i + 1] - bri[i] + bri[i + 1] - s\n            e1 = max(e1, e2, e3)\n        print(e1)\nbrick()", "import sys, os\nif os.path.exists('a.txt'):\n    sys.stdin = open('a.txt', 'r')\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    for i in range(n - 1):\n        ans = max(ans, a[i + 1] - a[i] + a[n - 1] - a[i])\n        ans = max(ans, a[i + 1] - a[i] + a[i + 1] - a[0])\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mx = 0\n    w = sorted(a)\n    for i in range(n - 1):\n        mx = max(mx, w[-1] - w[i] + w[i + 1] - w[i], w[i + 1] - w[i] + w[i + 1] - w[0])\n    print(mx)", "import os\nimport math\nimport collections\nimport bisect\nimport functools\nimport itertools\nimport heapq\n\ndef solve(a, n):\n    a.sort()\n    v1 = max((2 * a[i] - a[i - 1] - a[0] for i in range(n - 1, 1, -1)))\n    v2 = max((a[i + 1] + a[-1] - 2 * a[i] for i in range(n - 2)))\n    return max(v1, v2)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    res = solve(a, n)\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    ans = a[-1] - a[0]\n    for i in range(n - 1):\n        ans = max(ans, a[i + 1] - a[i] + max(a[-1] - a[i], a[i + 1] - a[0]))\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lis = [int(i) for i in input().split()]\n    lis.sort()\n    max = 0\n    for i in range(2, n):\n        if max < 2 * lis[i] - lis[i - 1] - lis[0]:\n            max = 2 * lis[i] - lis[i - 1] - lis[0]\n    for i in range(n - 1):\n        if max < lis[i + 1] + lis[n - 1] - 2 * lis[i]:\n            max = lis[i + 1] + lis[n - 1] - 2 * lis[i]\n    print(max)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(j) for j in input().split()]\n    a.sort()\n    result = 0\n    for i in range(1, n - 1):\n        result = max(result, 2 * a[i + 1] - a[0] - a[i])\n        result = max(result, a[n - 1] + a[i] - 2 * a[i - 1])\n    print(result)", "for _ in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    ans = 0\n    k.sort()\n    for i in range(n - 1):\n        ans = max(ans, k[n - 1] + k[i] - 2 * k[i - 1], 2 * k[i + 1] - k[i] - k[0])\n    print(ans)", "def solve(arr, n):\n    arr.sort()\n    maxx = 0\n    for i in range(1, n - 1):\n        maxx = max(maxx, abs(arr[i + 1] - arr[0]) + abs(arr[i + 1] - arr[i]))\n    for i in range(0, n - 2):\n        maxx = max(maxx, abs(arr[n - 1] - arr[i]) + abs(arr[i + 1] - arr[i]))\n    print(maxx)\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    solve(arr, n)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = float('-inf')\n    for i in range(n - 2):\n        ans = max(ans, a[i + 1] - a[i] + a[n - 1] - a[i])\n    for i in range(1, n - 1):\n        ans = max(ans, a[i + 1] - a[i] + a[i + 1] - a[0])\n    print(ans)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    b = list(map(int, input().split()))\n    b.sort()\n    ans = 0\n    first = b[0]\n    last = b[-1]\n    for bri in range(2, n):\n        br = b[bri]\n        ans1 = br - first + br - b[bri - 1]\n        if ans1 > ans:\n            ans = ans1\n    for bri in range(0, n - 2):\n        br = b[bri]\n        ans1 = last - br + b[bri + 1] - br\n        if ans1 > ans:\n            ans = ans1\n    print(ans)\n    t -= 1", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    max = a[n - 1] - a[0]\n    for i in range(0, len(a) - 1):\n        if max < a[n - 1] - a[i] + a[i + 1] - a[i]:\n            max = a[n - 1] - a[i] + a[i + 1] - a[i]\n    for i in range(len(a) - 1, 0, -1):\n        if max < a[i] - a[0] + a[i] - a[i - 1]:\n            max = a[i] - a[0] + a[i] - a[i - 1]\n    print(max)", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    max = a[n - 1] - a[0]\n    for i in range(0, len(a) - 1):\n        if max < a[n - 1] - a[i] + a[i + 1] - a[i]:\n            max = a[n - 1] - a[i] + a[i + 1] - a[i]\n    for i in range(len(a) - 1, 0, -1):\n        if max < a[i] - a[0] + a[i] - a[i - 1]:\n            max = a[i] - a[0] + a[i] - a[i - 1]\n    print(max)", "import sys\n\ndef read():\n    return [int(x) for x in sys.stdin.readline().split(' ')]\n[t] = read()\nfor _ in range(t):\n    [n] = read()\n    A = read()\n    A.sort()\n    res = A[n - 1] - A[0]\n    for i in range(1, n - 1):\n        res = max(res, 2 * A[i + 1] - A[i] - A[0])\n    for i in range(0, n - 2):\n        res = max(res, A[n - 1] + A[i + 1] - 2 * A[i])\n    print(res)", "t = int(input(''))\nfor j in range(t):\n    n = int(input(''))\n    l = list(map(int, input('').split()))\n    l.sort()\n    m = 0\n    for i in range(-1, -len(l) + 1, -1):\n        a = l[i] + l[i] - l[i - 1] - l[0]\n        if m < a:\n            m = a\n    for i in range(0, n - 2):\n        a = l[-1] + l[i + 1] - l[i] - l[i]\n        if m < a:\n            m = a\n    print(m)", "casecnt = int(input())\nfor case in range(casecnt):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    a.sort()\n    bestscore = 0\n    for i in range(1, n):\n        g = a[i] - a[i - 1]\n        score = g\n        score += max(a[i] - a[0], a[n - 1] - a[i - 1])\n        bestscore = max(score, bestscore)\n    print(bestscore)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = 0\n    a.sort()\n    for i in range(1, n):\n        b = max(b, -a[i - 1] + 2 * a[i] - a[0])\n    for i in range(n - 1):\n        b = max(b, a[i + 1] + a[n - 1] - 2 * a[i])\n    print(b)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    res = 0\n    for i in range(1, n - 1):\n        res = max(res, 2 * l[i + 1] - l[0] - l[i])\n        res = max(res, l[n - 1] + l[i] - 2 * l[i - 1])\n    print(res)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    arr.sort()\n    ans = arr[n - 1] - arr[0]\n    for i in range(n - 1):\n        ans = max(ans, arr[n - 1] + arr[i + 1] - 2 * arr[i], 2 * arr[i + 1] - arr[i] - arr[0])\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst_a = sorted(map(int, input().split()))\n    mx = 0\n    for j in range(n):\n        mx = max(mx, 2 * lst_a[j] - lst_a[0] - lst_a[j - 1])\n    for j in range(n - 1):\n        mx = max(mx, lst_a[-1] + lst_a[j + 1] - 2 * lst_a[j])\n    print(mx)", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    res = 0\n    for i in range(2, n):\n        res = max(res, 2 * a[i] - a[i - 1] - a[0])\n    for i in range(n - 2):\n        res = max(res, a[-1] + a[i + 1] - 2 * a[i])\n    print(res)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    ans = 0\n    for i in range(1, n - 1):\n        ans = max(ans, a[i] - a[i - 1] + a[-1] - a[i - 1])\n    for i in range(1, n - 1):\n        ans = max(ans, a[-i] - a[-1 - i] + a[-i] - a[0])\n    print(ans)\n    t -= 1", "def sol(lst):\n    lst.sort()\n    maxi = 0\n    for i in range(2, len(lst)):\n        maxi = max(maxi, abs(lst[i] - lst[i - 1]) + abs(lst[i] - lst[0]))\n    for i in reversed(range(len(lst) - 2)):\n        maxi = max(maxi, abs(lst[i] - lst[i + 1]) + abs(lst[i] - lst[-1]))\n    return maxi\nT = int(input())\nfor test_case in range(1, T + 1):\n    n = int(input())\n    lst = [int(s) for s in input().split(' ')]\n    s = sol(lst)\n    print(s)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    b = [2 * a[-1] - a[0] - a[-2], a[-1] + a[1] - 2 * a[0]]\n    for i in range(1, n - 1):\n        b.append(max(a[i] - a[0] + a[i] - a[i - 1], a[-1] - a[i] + a[i + 1] - a[i]))\n    print(max(b))", "test_case_count = int(input())\nfor _ in range(test_case_count):\n    brick_no = int(input())\n    brick_weights = list(map(int, input().split()))\n    brick_weights = sorted(brick_weights)\n    ans = 0\n    for i in range(1, brick_no):\n        ans = max(ans, brick_weights[i] - brick_weights[i - 1] + brick_weights[i] - brick_weights[0])\n    for i in range(brick_no - 1):\n        ans = max(ans, brick_weights[i + 1] - brick_weights[i] + brick_weights[brick_no - 1] - brick_weights[i])\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    f = 0\n    k = 0\n    for i in range(n - 2):\n        f = max(f, a[n - 1] - a[i] + a[i + 1] - a[i])\n    for i in range(1, n - 1):\n        k = max(k, a[i + 1] - a[0] + a[i + 1] - a[i])\n    print(max(f, k))", "T = int(input())\nfor kse in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    for i in range(n - 1):\n        ans = max(ans, max(a[i + 1] - a[0] + a[i + 1] - a[i], a[n - 1] - a[i] + a[i + 1] - a[i]))\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    A.sort()\n    ans = 0\n    for i in range(n):\n        if i < n - 2:\n            res = A[i + 1] - A[i] + A[n - 1] - A[i]\n            ans = max(ans, res)\n        if i >= 2:\n            res = A[i] - A[i - 1] + A[i] - A[0]\n            ans = max(ans, res)\n    print(ans)", "from collections import deque\nimport sys\n\ndef solve_problem():\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n = int(sys.stdin.readline())\n        arr = list(map(int, sys.stdin.readline().split()))\n        arr.sort()\n        res = 0\n        for i in range(1, n):\n            res = max(res, abs(arr[i] - arr[i - 1]) + arr[i] - arr[0])\n        for i in range(n - 1):\n            res = max(res, abs(arr[i + 1] - arr[i]) + abs(arr[i] - arr[n - 1]))\n        print(res)\nsolve_problem()", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    ans = 0\n    for i in range(n - 1):\n        ans = max(ans, arr[n - 1] - arr[i] + arr[i + 1] - arr[i])\n    for i in range(1, n):\n        ans = max(ans, arr[i] - arr[i - 1] + arr[i] - arr[0])\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l = sorted(l)\n    ans = 0\n    for i in range(1, n - 1):\n        ans = max(ans, l[i] - l[i - 1] + l[-1] - l[i - 1])\n    l = l[::-1]\n    for i in range(1, n - 1):\n        ans = max(ans, l[i - 1] - l[i] + l[i - 1] - l[-1])\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    ans = 0\n    for i in range(2, n):\n        ans = max(ans, a[i] - a[0] - a[i - 1] + a[i])\n        ans = max(ans, a[n - 1] - a[i - 2] + a[i - 1] - a[i - 2])\n    print(ans)", "import math\nimport collections\nimport bisect\nimport heapq\nfrom collections import deque\nfrom math import sqrt, ceil, floor\n\ndef inp_arr():\n    return list(map(int, input().strip().split(' ')))\n\ndef inp_str_arr():\n    return list(input().strip().split(' '))\n\ndef inp_str():\n    return input()\n\ndef solve():\n    (n,) = inp_arr()\n    a = inp_arr()\n    a.sort()\n    ans = 0\n    for i in range(n):\n        if i == 0:\n            ans = max(ans, a[1] + a[n - 1] - 2 * a[0])\n        elif i == n - 1:\n            ans = max(ans, -a[0] - a[n - 2] + 2 * a[n - 1])\n        else:\n            ans = max(ans, a[i + 1] + a[n - 1] - 2 * a[i])\n    for i in range(n):\n        if i == 0:\n            ans = max(ans, a[1] + a[n - 1] - 2 * a[0])\n        elif i == n - 1:\n            ans = max(ans, -a[0] - a[n - 2] + 2 * a[n - 1])\n        else:\n            ans = max(ans, -a[i - 1] - a[0] + 2 * a[i])\n    print(ans)\n(tt,) = inp_arr()\nfor t in range(tt):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    mx = a[-1]\n    mn = a[0]\n    a1 = a[0]\n    an_1 = a[-1]\n    for e in a:\n        if e != mn:\n            a1 = e\n            break\n    for i in range(n - 1, -1, -1):\n        if a[i] != mx:\n            an_1 = a[i]\n            break\n    ans = max(2 * a[-1] - a[0] - an_1, a[-1] - a[0] + a1 - a[0])\n    pre = a1\n    for i in range(2, n):\n        if a[i] != pre:\n            ans = max(ans, 2 * a[i] - a[0] - pre)\n            pre = a[i]\n    pre = an_1\n    for i in range(n - 2, -1, -1):\n        if a[i] != pre:\n            ans = max(ans, mx - a[i] + pre - a[i])\n            pre = a[i]\n    print(ans)", "import sys\nimport math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    l.sort()\n    ans = 0\n    for i in range(1, n):\n        ans = max(ans, abs(l[i] - l[i - 1]) + l[i] - l[0])\n    for i in range(n - 1):\n        ans = max(ans, abs(l[-1] - l[i]) + abs(l[i + 1] - l[i]))\n    print(ans)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = abs(a[0] - a[n - 1]) + abs(a[n - 1] - a[n - 2])\n    ans = max(ans, abs(a[n - 1] - a[0]) + abs(a[0] - a[1]))\n    for i in range(2, n):\n        ans = max(ans, abs(a[0] - a[i]) + abs(a[i] - a[i - 1]))\n    for i in range(0, n - 2):\n        ans = max(ans, abs(a[n - 1] - a[i]) + abs(a[i] - a[i + 1]))\n    print(ans)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    mx = -1\n    l = list(map(int, input().split()))\n    l.sort()\n    for i in range(n - 1):\n        mx = max(mx, l[-1] - l[i] + l[i + 1] - l[i])\n        mx = max(mx, abs(l[i + 1] - l[i]) + abs(l[i + 1] - l[0]))\n    print(mx)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    mnToMx = 0\n    for i in range(n - 2):\n        mnToMx = max(mnToMx, abs(a[i] - a[i + 1]) + abs(a[i] - a[n - 1]))\n    mxToMn = 0\n    i = n - 1\n    while i >= 2:\n        mxToMn = max(mxToMn, abs(a[i] - a[i - 1]) + abs(a[i] - a[0]))\n        i -= 1\n    print(max(mxToMn, mnToMx))", "for T in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    ans = a[n - 1] - a[0]\n    for i in range(2, n):\n        ans = max(ans, a[i] - a[0] + a[i] - a[i - 1])\n    for i in range(0, n - 1):\n        ans = max(ans, a[i + 1] - a[i] + a[n - 1] - a[i])\n    ans = max(ans, a[n - 1] - 2 * a[0] + a[1])\n    ans = max(ans, 2 * a[n - 1] - a[0] - a[n - 2])\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    ans = -1\n    for i in range(2, n):\n        ans = max(ans, arr[i] - arr[0] + (arr[i] - arr[i - 1]))\n    anss = -1\n    for i in range(n - 2, -1, -1):\n        anss = max(anss, arr[n - 1] - arr[i] + (arr[i + 1] - arr[i]))\n    print(max(ans, anss))", "for i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    lst.sort()\n    mx = 0\n    for i in range(n - 2):\n        mx = max(mx, abs(lst[i + 1] - lst[i]) + abs(lst[-1] - lst[i]))\n    lst = lst[::-1]\n    for i in range(n - 2):\n        mx = max(mx, abs(lst[i + 1] - lst[i]) + abs(lst[-1] - lst[i]))\n    print(mx)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    maxx = 0\n    for j in range(2, n):\n        maxx = max(maxx, abs(a[0] - a[j]) + abs(a[j] - a[j - 1]))\n    for k in range(n - 2):\n        maxx = max(maxx, abs(a[n - 1] - a[k]) + abs(a[k] - a[k + 1]))\n    print(maxx)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    ans = 0\n    for i in range(1, n):\n        ans = max(ans, abs(l[i] - l[i - 1]) + l[i] - l[0])\n    for j in range(n - 1):\n        ans = max(ans, abs(l[j + 1] - l[j]) + abs(l[j] - l[n - 1]))\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    mx = 0\n    for i in range(1, n):\n        mx = max(mx, abs(arr[i] - arr[i - 1]) + abs(arr[i] - arr[0]))\n    for i in range(0, n - 1):\n        mx = max(mx, abs(arr[i + 1] - arr[i]) + abs(arr[n - 1] - arr[i]))\n    print(mx)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    sum = 0\n    for i in range(n - 1):\n        sum = max(sum, abs(a[i + 1] - a[i] + abs(a[i] - a[n - 1])))\n    for i in range(1, n):\n        sum = max(sum, abs(a[i] - a[i - 1] + a[i] - a[0]))\n    print(sum)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    s = 0\n    for i in range(n - 1):\n        s = max(s, abs(a[i + 1] - a[i] + abs(a[i] - a[n - 1])))\n    for i in range(1, n):\n        s = max(s, abs(a[i] - a[i - 1] + a[i] - a[0]))\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    w = list(map(int, input().split()))\n    w.sort()\n    ans = 0\n    for i in range(1, n):\n        ans = max(ans, abs(w[i] - w[i - 1]) + (w[i] - w[0]))\n    for i in range(0, n - 1):\n        ans = max(ans, abs(w[i + 1] - w[i]) + abs(w[i] - w[n - 1]))\n    print(ans)", "import sys\nimport math\nfrom bisect import bisect_right as br\nimport threading\n\ndef int_arr():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef str_arr():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef input():\n    return sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    n = int(input())\n    arr = int_arr()\n    arr.sort()\n    ans = 0\n    for i in range(2, n):\n        ans = max(ans, abs(arr[i] - arr[0]) + abs(arr[i] - arr[i - 1]))\n    for i in range(n - 2):\n        ans = max(ans, abs(arr[i] - arr[n - 1]) + abs(arr[i] - arr[i + 1]))\n    print(ans)", "case = int(input())\nfor i in range(case):\n    n = int(input())\n    mas = list(map(int, input().split()))\n    mas.sort()\n    cur_max = 0\n    for j in range(1, len(mas) - 1):\n        cur_min = mas[j - 1]\n        cur_max = max(cur_max, mas[-1] - 2 * cur_min + mas[j])\n        cur_min = mas[len(mas) - j]\n        cur_max = max(cur_max, 2 * cur_min - mas[0] - mas[len(mas) - j - 1])\n    print(cur_max)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    w = list(map(int, input().split(' ')))\n    w1 = sorted(w)\n    w2 = sorted(w, reverse=True)\n    answer = 0\n    for i in range(n - 2):\n        answer = max(answer, abs(w1[i] - w1[i + 1]) + abs(w1[i] - w1[n - 1]), abs(w2[i] - w2[i + 1]) + abs(w2[i] - w2[n - 1]))\n    print(answer)", "for _ in range(int(input())):\n    a = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    r = 0\n    for i in range(1, a):\n        r = max(r, abs(l[i] - l[i - 1]) + l[i] - l[0])\n    for j in range(a - 1):\n        r = max(r, abs(l[j + 1] - l[j] + abs(l[j] - l[a - 1])))\n    print(r)", "def N():\n    return int(input())\n\ndef A():\n    return [int(x) for x in input().split()]\n\ndef S():\n    return input()\nfor _ in range(N()):\n    n = N()\n    if 'codeforces' == 28226329:\n        print('Tanmay')\n    a = A()\n    a.sort()\n    ans = 0\n    for i in range(n - 1):\n        ans = max(ans, abs(a[i + 1] - a[i]) + abs(a[i] - a[n - 1]))\n    for i in range(1, n):\n        ans = max(ans, abs(a[i] - a[i - 1]) + a[i] - a[0])\n    print(ans)", "T = int(input())\nfor tt in range(T):\n    n = int(input())\n    data = list(map(int, input().split()))\n    data = sorted(data)\n    subtract = []\n    for i in range(1, n):\n        subtract.append(data[i] - data[i - 1])\n    ans = 0\n    the_sum = sum(subtract)\n    for i in range(len(subtract) - 1):\n        ans = max(ans, the_sum + max(subtract[i], subtract[-1]))\n        the_sum -= subtract[i]\n    the_sum = sum(subtract)\n    for i in range(len(subtract) - 1, 0, -1):\n        ans = max(ans, the_sum + max(subtract[i], subtract[0]))\n        the_sum -= subtract[i]\n    print(ans)", "from typing import List\n\ndef test_case():\n    n = int(input())\n    nums: List[int]\n    nums = sorted([int(item) for item in input().split()])\n    max_f = max(nums[n - 1] - nums[0] + nums[n - 1] - nums[n - 2], nums[1] - nums[0] + nums[n - 1] - nums[0])\n    for i in reversed(range(1, n - 1)):\n        max_f = max(max_f, nums[i] - nums[i - 1] + nums[i] - nums[0])\n    for i in range(0, n - 2):\n        max_f = max(max_f, nums[n - 1] - nums[i] + nums[i + 1] - nums[i])\n    return max_f\nt = int(input())\nwhile t > 0:\n    t -= 1\n    print(test_case())", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    maxi = 0\n    for i in range(0, len(l) - 2):\n        ans1 = abs(l[i] - l[-1]) + abs(l[-1] - l[-2])\n        ans2 = abs(l[-1] - l[i]) + abs(l[i] - l[i + 1])\n        maxi = max(maxi, ans1, ans2)\n    l.sort(reverse=True)\n    maxim = 0\n    for j in range(0, len(l) - 2):\n        ans1 = abs(l[j] - l[-1]) + abs(l[-1] - l[-2])\n        ans2 = abs(l[-1] - l[j]) + abs(l[j] - l[j + 1])\n        maxim = max(maxim, ans1, ans2)\n    ans = max(maxi, maxim)\n    print(ans)", "import sys\ninput = sys.stdin.readline\nfrom random import randint\nRANDOM = randint(1, 10 ** 9)\n\nclass hf(int):\n\n    def __init__(self, x):\n        int.__init__(x)\n\n    def __hash__(self):\n        return super(hf, self).__hash__() ^ RANDOM\n\ndef readList():\n    return list(map(int, input().split()))\n\ndef readInt():\n    return int(input())\n\ndef readInts():\n    return map(int, input().split())\n\ndef readStr():\n    return input().strip()\n\ndef solve():\n    n = readInt()\n    arr = readList()\n    cnt = {}\n    for i in range(n):\n        hv = hf(arr[i])\n        if hv not in cnt:\n            cnt[hv] = 0\n        cnt[hv] += 1\n    m = len(cnt)\n    if m == 1:\n        return 0\n    elif m == 2:\n        return 2 * (max(arr) - min(arr))\n    else:\n        arr = sorted(list(set(arr)))\n        (d1, d2) = (arr[1] - arr[0], arr[-1] - arr[-2])\n        ans = arr[-1] - arr[0] + max(d1, d2)\n        m = len(arr)\n        for i in range(2, m):\n            ans = max(arr[i] - arr[i - 1] + arr[i] - arr[0], ans)\n        for i in range(m - 3, -1, -1):\n            ans = max(arr[i + 1] - arr[i] + arr[-1] - arr[i], ans)\n        return ans\nfor _ in range(int(input())):\n    print(solve())", "t = int(input())\nfor j in range(0, t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    s = 0\n    for k in range(0, n):\n        if k == 0:\n            s = max(s, abs(l[k] - l[n - 1]) + abs(l[k] - l[1]))\n        elif k == n - 1:\n            s = max(s, abs(l[k] - l[0]) + abs(l[n - 2] - l[k]))\n        else:\n            f = max(abs(l[k] - l[0]) + abs(l[k] - l[k - 1]), abs(l[k] - l[0]) + abs(l[k] - l[k + 1]))\n            f1 = max(abs(l[k] - l[n - 1]) + abs(l[k] - l[k - 1]), abs(l[k] - l[n - 1]) + abs(l[k] - l[k + 1]))\n            f = max(f, f1)\n            s = max(s, f)\n    print(s)", "import heapq\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    w = [int(k) for k in input().split()]\n    w.sort()\n    eta = []\n    for j in range(2, n):\n        eta.append(-(2 * w[j] - w[j - 1]))\n    heapq.heapify(eta)\n    mx = 0\n    check = set()\n    for j in range(n - 2):\n        mx = max(-eta[0] - w[j], mx)\n        check.add(-(2 * w[j + 2] - w[j + 1]))\n        while eta and eta[0] in check:\n            check.remove(heapq.heappop(eta))\n    w = w[::-1]\n    eta = []\n    for j in range(2, n):\n        eta.append(-(w[j - 1] - 2 * w[j]))\n    heapq.heapify(eta)\n    res = 0\n    check = set()\n    for j in range(n - 2):\n        res = max(w[j] - eta[0], res)\n        check.add(-(w[j + 1] - 2 * w[j + 2]))\n        while eta and eta[0] in check:\n            check.remove(heapq.heappop(eta))\n    res = max(mx, res)\n    print(res)"]