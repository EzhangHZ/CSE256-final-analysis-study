["for _ in range(int(input())):\n    n = int(input())\n    arr = input()\n    arr = arr.replace('100', 'j')\n    arr = arr.replace('200', 't')\n    arr = arr.replace('110', 'k')\n    arr = arr.replace('120', 'l')\n    arr = arr.replace('130', 'm')\n    arr = arr.replace('140', 'n')\n    arr = arr.replace('150', 'o')\n    arr = arr.replace('160', 'p')\n    arr = arr.replace('170', 'q')\n    arr = arr.replace('180', 'r')\n    arr = arr.replace('190', 's')\n    arr = arr.replace('210', 'u')\n    arr = arr.replace('220', 'v')\n    arr = arr.replace('230', 'w')\n    arr = arr.replace('240', 'x')\n    arr = arr.replace('250', 'y')\n    arr = arr.replace('260', 'z')\n    arr = arr.replace('1', 'a')\n    arr = arr.replace('2', 'b')\n    arr = arr.replace('3', 'c')\n    arr = arr.replace('4', 'd')\n    arr = arr.replace('5', 'e')\n    arr = arr.replace('6', 'f')\n    arr = arr.replace('7', 'g')\n    arr = arr.replace('8', 'h')\n    arr = arr.replace('9', 'i')\n    print(arr)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    s = s.replace('100', 'j').replace('200', 't').replace('110', 'k').replace('120', 'l').replace('130', 'm').replace('140', 'n').replace('150', 'o').replace('160', 'p').replace('170', 'q').replace('180', 'r').replace('190', 's').replace('210', 'u').replace('220', 'v').replace('230', 'w').replace('240', 'x').replace('250', 'y').replace('260', 'z')\n    s = s.replace('1', 'a').replace('2', 'b').replace('3', 'c').replace('4', 'd').replace('5', 'e').replace('6', 'f').replace('7', 'g').replace('8', 'h').replace('9', 'i')\n    print(s)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s1 = input()\n    s1 = s1.replace('100', 'j')\n    s1 = s1.replace('200', 't')\n    s1 = s1.replace('110', 'k')\n    s1 = s1.replace('120', 'l')\n    s1 = s1.replace('130', 'm')\n    s1 = s1.replace('140', 'n')\n    s1 = s1.replace('150', 'o')\n    s1 = s1.replace('160', 'p')\n    s1 = s1.replace('170', 'q')\n    s1 = s1.replace('180', 'r')\n    s1 = s1.replace('190', 's')\n    s1 = s1.replace('210', 'u')\n    s1 = s1.replace('220', 'v')\n    s1 = s1.replace('230', 'w')\n    s1 = s1.replace('240', 'x')\n    s1 = s1.replace('250', 'y')\n    s1 = s1.replace('260', 'z')\n    s1 = s1.replace('1', 'a')\n    s1 = s1.replace('2', 'b')\n    s1 = s1.replace('3', 'c')\n    s1 = s1.replace('4', 'd')\n    s1 = s1.replace('5', 'e')\n    s1 = s1.replace('6', 'f')\n    s1 = s1.replace('7', 'g')\n    s1 = s1.replace('8', 'h')\n    s1 = s1.replace('9', 'i')\n    print(s1)", "for _ in range(int(input())):\n    n = int(input())\n    li = input()\n    li = li.replace('100', 'j')\n    li = li.replace('200', 't')\n    li = li.replace('110', 'k')\n    li = li.replace('120', 'l')\n    li = li.replace('130', 'm')\n    li = li.replace('140', 'n')\n    li = li.replace('150', 'o')\n    li = li.replace('160', 'p')\n    li = li.replace('170', 'q')\n    li = li.replace('180', 'r')\n    li = li.replace('190', 's')\n    li = li.replace('210', 'u')\n    li = li.replace('220', 'v')\n    li = li.replace('230', 'w')\n    li = li.replace('240', 'x')\n    li = li.replace('250', 'y')\n    li = li.replace('260', 'z')\n    li = li.replace('1', 'a')\n    li = li.replace('2', 'b')\n    li = li.replace('3', 'c')\n    li = li.replace('4', 'd')\n    li = li.replace('5', 'e')\n    li = li.replace('6', 'f')\n    li = li.replace('7', 'g')\n    li = li.replace('8', 'h')\n    li = li.replace('9', 'i')\n    print(li)", "for t in range(int(input())):\n    n = int(input())\n    arr = input()\n    arr = arr.replace('100', 'j')\n    arr = arr.replace('200', 't')\n    arr = arr.replace('110', 'k')\n    arr = arr.replace('120', 'l')\n    arr = arr.replace('130', 'm')\n    arr = arr.replace('140', 'n')\n    arr = arr.replace('150', 'o')\n    arr = arr.replace('160', 'p')\n    arr = arr.replace('170', 'q')\n    arr = arr.replace('180', 'r')\n    arr = arr.replace('190', 's')\n    arr = arr.replace('210', 'u')\n    arr = arr.replace('220', 'v')\n    arr = arr.replace('230', 'w')\n    arr = arr.replace('240', 'x')\n    arr = arr.replace('250', 'y')\n    arr = arr.replace('260', 'z')\n    arr = arr.replace('1', 'a')\n    arr = arr.replace('2', 'b')\n    arr = arr.replace('3', 'c')\n    arr = arr.replace('4', 'd')\n    arr = arr.replace('5', 'e')\n    arr = arr.replace('6', 'f')\n    arr = arr.replace('7', 'g')\n    arr = arr.replace('8', 'h')\n    arr = arr.replace('9', 'i')\n    print(arr)", "alphabets = 'abcdefghijklmnopqrstuvwxyz'\ndictionary = {}\nfor i in alphabets:\n    s = alphabets.index(i) + 1\n    if s >= 10:\n        dictionary[str(s) + str(0)] = i\n    else:\n        dictionary[str(s)] = i\n\ndef decoder(string, length, dictionary):\n    word = ''\n    l = length - 1\n    while l >= 0:\n        if string[l] == '0':\n            temp = string[l - 2:l + 1]\n            word += dictionary[temp]\n            l -= 3\n        else:\n            temp = string[l]\n            word += dictionary[temp]\n            l -= 1\n    return word[-1::-1]\ncases = int(input())\nfor i in range(cases):\n    length = int(input())\n    string = input()\n    print(decoder(string, length, dictionary))", "import string\n\ndef decode(t):\n    decode = t\n    decode = decode.replace('200', 't')\n    for i in range(10, 27):\n        s = str(i) + '0'\n        decode = decode.replace(s, chr(i + 96))\n    for i in range(1, 11):\n        decode = decode.replace(str(i), chr(i + 96))\n    return decode\nq = int(input())\ninputs = []\nfor i in range(q):\n    n = int(input())\n    t = input()\n    inputs.append(t)\nfor t in inputs:\n    print(decode(t))", "lowercase_alphabet = {100: 'j', 200: 't', 110: 'k', 120: 'l', 130: 'm', 140: 'n', 150: 'o', 160: 'p', 170: 'q', 180: 'r', 190: 's', 210: 'u', 220: 'v', 230: 'w', 240: 'x', 250: 'y', 260: 'z', 1: 'a', 2: 'b', 3: 'c', 4: 'd', 5: 'e', 6: 'f', 7: 'g', 8: 'h', 9: 'i'}\nopt = []\nfor _ in range(int(input())):\n    n = int(input())\n    li = input()\n    opt_2 = []\n    for (k, v) in lowercase_alphabet.items():\n        li = li.replace(str(k), v)\n        opt_2.append(li)\n    opt.append(opt_2[-1])\nprint(*opt, sep='\\n')", "q = int(input())\nm = {str(e): chr(ord('a') + e - 1) for e in range(1, 27)}\n\ndef decode(t):\n    i = len(t) - 1\n    ret = []\n    while i >= 0:\n        if t[i] == '0':\n            ret.append(m[t[i - 2:i]])\n            i -= 3\n        else:\n            ret.append(m[t[i]])\n            i -= 1\n    return ''.join(ret[::-1])\nfor _ in range(q):\n    n = input().strip()\n    t = input()\n    print(decode(t))", "alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n\ndef encode(t, n):\n    result = ''\n    i = 0\n    if len(t) == n:\n        while i < n:\n            t_int = int(t[i])\n            if t_int <= 2 and i + 2 < n and (t[i + 2] == '0'):\n                if i + 3 < n and t[i + 3] == '0':\n                    result += alphabet[t_int - 1]\n                    i += 1\n                    continue\n                t_int = int(t[i] + t[i + 1])\n                i += 2\n            result += alphabet[t_int - 1]\n            i += 1\n    return result\n\ndef main():\n    q = int(input())\n    s = []\n    if q < 1 or q > 10000:\n        return\n    for i in range(q):\n        n = int(input())\n        if n < 1 or n > 50:\n            return\n        t = input()\n        s.append(encode(t, n))\n    return s\n\ndef printArray(array):\n    for item in array:\n        print(item)\nprintArray(main())", "def encode(t, n):\n    result = ''\n    i = 0\n    while i < n:\n        t_int = int(t[i])\n        if t_int <= 2 and i + 2 < n and (t[i + 2] == '0'):\n            if i + 3 < n and t[i + 3] == '0':\n                result += chr(t_int + 96)\n                i += 1\n                continue\n            t_int = int(t[i] + t[i + 1])\n            i += 2\n        result += chr(t_int + 96)\n        i += 1\n    return result\n\ndef main():\n    q = int(input())\n    s = []\n    for _ in range(q):\n        n = int(input())\n        t = input()\n        s.append(encode(t, n))\n    return s\n\ndef printArray(array):\n    for item in array:\n        print(item)\nprintArray(main())", "alphabets = 'abcdefghijklmnopqrstuvwxyz'\ndictionary = {}\nfor i in alphabets:\n    s = alphabets.index(i) + 1\n    if s >= 10:\n        dictionary[str(s) + str(0)] = i\n    else:\n        dictionary[str(s)] = i\n\ndef decoder(string, length, dictionary):\n    word = ''\n    l = length - 1\n    while l >= 0:\n        if string[l] == '0':\n            temp = string[l - 2:l + 1]\n            word += dictionary[temp]\n            l -= 3\n        else:\n            temp = string[l]\n            word += dictionary[temp]\n            l -= 1\n    return word[-1::-1]\ncases = int(input())\nfor i in range(cases):\n    length = int(input())\n    string = input()\n    print(decoder(string, length, dictionary))", "nombre = int(input())\nwhile nombre < 1 or nombre > 10 ** 4:\n    nombre = int(input())\nliste = []\nfor k in range(nombre):\n    longueur = int(input())\n    while longueur < 1 or longueur > 50:\n        longueur = int(input())\n    chaine = input()\n    while len(chaine) != longueur:\n        ch = input()\n    liste.append(chaine)\nfor ch in liste:\n    if '00' not in ch:\n        while '0' in ch:\n            x = ch.index('0')\n            n = int(ch[x - 2:x])\n            ch = ch.replace(ch[x - 2:x + 1], chr(ord('a') + n - 1))\n        for i in range(len(ch)):\n            if ch[i] in ['1', '2', '3', '4', '5', '6', '7', '8', '9']:\n                ch = ch.replace(ch[i], chr(ord('a') + int(ch[i]) - 1))\n        print(ch)\n    else:\n        while '00' in ch:\n            x1 = ch.index('00')\n            if ch[x1 - 1] == '1':\n                ch = ch.replace('100', 'j')\n            elif ch[x1 - 1] == '2':\n                ch = ch.replace('200', 't')\n        while '0' in ch:\n            x = ch.index('0')\n            n = int(ch[x - 2:x])\n            ch = ch.replace(ch[x - 2:x + 1], chr(ord('a') + n - 1))\n        for i in range(len(ch)):\n            if ch[i] in ['1', '2', '3', '4', '5', '6', '7', '8', '9']:\n                ch = ch.replace(ch[i], chr(ord('a') + int(ch[i]) - 1))\n        print(ch)", "import string\n\ndef solve():\n    result = []\n    t = int(input())\n    num_to_letter = {i: char for (i, char) in enumerate(string.ascii_lowercase, 1)}\n    for _ in range(t):\n        n = int(input())\n        A = list(map(int, input()))\n        decode = []\n        i = len(A) - 1\n        while i >= 0:\n            if A[i] == 0:\n                num = A[i - 2] * 10 + A[i - 1]\n                decode.append(num_to_letter[num])\n                i -= 3\n            else:\n                decode.append(num_to_letter[A[i]])\n                i -= 1\n        decode.reverse()\n        decode = ''.join(decode)\n        result.append(decode)\n    for r in result:\n        print(r)\nsolve()", "def solve():\n    n = int(input())\n    a = input()[::-1]\n    q = ''\n    alf = sorted('qwertyuiopasdfghjklzxcvbnm')\n    i = 0\n    while i < n:\n        if a[i] == '0':\n            q += alf[int(a[i + 2] + a[i + 1]) - 1]\n            i += 3\n        else:\n            q += alf[int(a[i]) - 1]\n            i += 1\n    return q[::-1]\nt = int(input())\nans = []\nwhile t:\n    ans.append(str(solve()))\n    t -= 1\nprint('\\n'.join(ans))", "def solve2(a):\n    c = ''\n    I = len(a) - 1\n    while I >= 0:\n        if a[I] == '0':\n            b = 96 + int(a[I - 2:I])\n            c += chr(b)\n            I -= 3\n        else:\n            j = 96 + int(a[I])\n            c += chr(j)\n            I -= 1\n    return c[::-1]\n\ndef solve():\n    cases = int(input().rstrip())\n    inp = []\n    for i in range(cases):\n        _ = input().rstrip()\n        inp.append(input().rstrip())\n    for I in range(cases):\n        print(solve2(inp[I]))\nsolve()", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    t = input().strip()\n    ans = []\n    idx = n - 1\n    while idx >= 0:\n        if t[idx] == '0':\n            ans.append(chr(96 + int(t[idx - 2:idx])))\n            idx -= 3\n        else:\n            ans.append(chr(96 + int(t[idx])))\n            idx -= 1\n    return ''.join(ans[::-1])\nfor _ in range(int(input())):\n    print(solve())", "from string import ascii_lowercase\nlett = {str(index): letter for (index, letter) in enumerate(ascii_lowercase, start=1)}\nt = int(input())\nans = [''] * t\nfor i in range(t):\n    n = int(input())\n    s = input()\n    j = n - 1\n    while j >= 0:\n        if s[j] == '0':\n            ans[i] = lett[s[j - 2:j]] + ans[i]\n            j = j - 2\n        else:\n            ans[i] = lett[s[j]] + ans[i]\n        j = j - 1\nfor i in range(t):\n    print(ans[i], end='\\n')", "from itertools import count\nfrom string import ascii_lowercase\nletter_mapping = dict(list(map(lambda x: (str(x[0]), x[1]), zip(count(1), ascii_lowercase))))\n\ndef sol(s):\n    i = len(s) - 1\n    res = []\n    while i >= 0:\n        if s[i] == '0':\n            res.append(letter_mapping.get(s[i - 2:i]))\n            i -= 3\n        else:\n            res.append(letter_mapping.get(s[i]))\n            i -= 1\n    res.reverse()\n    print(''.join(res))\nt = int(input().strip())\nfor i in range(t):\n    l = int(input().strip())\n    s = input().strip()\n    sol(s)", "def main():\n    letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n    tests = int(input())\n    while tests > 0:\n        input()\n        encoded = input()[::-1]\n        reverse_decoded_string = ''\n        char_count_after_zero = 0\n        after_zero_number = 0\n        analising_zero = False\n        for code in encoded:\n            code = int(code)\n            if not analising_zero:\n                if code == 0:\n                    analising_zero = True\n                    continue\n                else:\n                    reverse_decoded_string += letters[code - 1]\n            else:\n                char_count_after_zero += 1\n                if char_count_after_zero == 1:\n                    after_zero_number = code\n                    continue\n                else:\n                    after_zero_number = code * 10 + after_zero_number\n                    reverse_decoded_string += letters[after_zero_number - 1]\n                    char_count_after_zero = 0\n                    after_zero_number = 0\n                    analising_zero = False\n        reverse_decoded_string = reverse_decoded_string[::-1]\n        print(reverse_decoded_string)\n        tests -= 1\nmain()", "testcases = int(input())\nfor eachcase in range(testcases):\n    length = int(input())\n    code = input()\n    alphabets = {'1': 'a', '2': 'b', '3': 'c', '4': 'd', '5': 'e', '6': 'f', '7': 'g', '8': 'h', '9': 'i', '10': 'j', '11': 'k', '12': 'l', '13': 'm', '14': 'n', '15': 'o', '16': 'p', '17': 'q', '18': 'r', '19': 's', '20': 't', '21': 'u', '22': 'v', '23': 'w', '24': 'x', '25': 'y', '26': 'z'}\n    ans = ''\n    index = length - 1\n    while index >= 0:\n        if code[index] == '0':\n            ans = alphabets[code[index - 2:index]] + ans\n            index = index - 3\n        else:\n            ans = alphabets[code[index]] + ans\n            index = index - 1\n    print(ans)", "def solve():\n    input()\n    alphabet = {1: 'a', 2: 'b', 3: 'c', 4: 'd', 5: 'e', 6: 'f', 7: 'g', 8: 'h', 9: 'i', 98: 'j', 11: 'k', 12: 'l', 13: 'm', 14: 'n', 15: 'o', 16: 'p', 17: 'q', 18: 'r', 19: 's', 97: 't', 21: 'u', 22: 'v', 23: 'w', 24: 'x', 25: 'y', 26: 'z'}\n    ans = []\n    s = input()\n    s = s.replace('100', '980').replace('200', '970')\n    s = s[::-1]\n    ts = ''\n    c = 0\n    for i in s:\n        if i == '0':\n            c = 1\n            continue\n        elif c >= 1 and c <= 2:\n            ts += i\n            if c == 2:\n                ans.append(alphabet[int(ts[::-1])])\n                c = 0\n                ts = ''\n            else:\n                c += 1\n        else:\n            ans.append(alphabet[int(i)])\n    print(''.join(ans[::-1]))\ntc = int(input())\nfor t in range(tc):\n    solve()", "def solve():\n    input()\n    alphabet = {1: 'a', 2: 'b', 3: 'c', 4: 'd', 5: 'e', 6: 'f', 7: 'g', 8: 'h', 9: 'i', 98: 'j', 11: 'k', 12: 'l', 13: 'm', 14: 'n', 15: 'o', 16: 'p', 17: 'q', 18: 'r', 19: 's', 77: 't', 21: 'u', 22: 'v', 23: 'w', 24: 'x', 25: 'y', 26: 'z'}\n    ans = []\n    s = input()\n    s = s.replace('100', '980')\n    s = s.replace('200', '770')\n    s = s[::-1]\n    ts = ''\n    c = 0\n    for i in s:\n        if i == '0':\n            c = 1\n            continue\n        elif c >= 1 and c <= 2:\n            ts += i\n            if c == 2:\n                ans.append(alphabet[int(ts[::-1])])\n                c = 0\n                ts = ''\n            else:\n                c += 1\n        else:\n            ans.append(alphabet[int(i)])\n    print(''.join(ans[::-1]))\ntc = int(input())\nfor t in range(tc):\n    solve()", "def decodestring(s, n, d):\n    ans = ''\n    i = n - 1\n    while i > -1:\n        if s[i] == '0':\n            j = i - 2\n            x = int(s[j]) * 10 + int(s[i - 1])\n            ans += d[x]\n            i -= 3\n        else:\n            ans += d[int(s[i])]\n            i -= 1\n    li = list(ans)\n    li.reverse()\n    print(''.join(li))\nt = int(input())\nli = 'abcdefghijklmnopqrstuvwxyz'\nlt = list(li)\nd = {}\nfor i in range(len(lt)):\n    d[i + 1] = lt[i]\nfor i in range(t):\n    n = int(input())\n    s = input()\n    decodestring(s, n, d)", "def solve():\n    n = int(input())\n    s = input()\n    i = len(s) - 1\n    ans = ''\n    while i >= 0:\n        if s[i] != '0':\n            ans += chr(ord(s[i]) - ord('0') + 96)\n        else:\n            t = s[i - 2] + s[i - 1]\n            t = int(t) + 96\n            t = chr(t)\n            ans += t\n            i -= 2\n        i -= 1\n    ans = ans[::-1]\n    print(ans)\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "q = int(input())\nfor i in range(q):\n    n = int(input())\n    t = input()\n    d = {'0': '', '1': 'a', '2': 'b', '3': 'c', '4': 'd', '5': 'e', '6': 'f', '7': 'g', '8': 'h', '9': 'i', '10': 'j', '11': 'k', '12': 'l', '13': 'm', '14': 'n', '15': 'o', '16': 'p', '17': 'q', '18': 'r', '19': 's', '20': 't', '21': 'u', '22': 'v', '23': 'w', '24': 'x', '25': 'y', '26': 'z'}\n    code = ''\n    ptr = n - 1\n    while ptr >= 0:\n        if (t[ptr] == '0' and ptr >= 2) and t[ptr - 2:ptr] <= '26':\n            code = d[t[ptr - 2:ptr]] + code\n            ptr -= 3\n        else:\n            code = d[t[ptr]] + code\n            ptr -= 1\n    print(code)", "for s in [*open(0)][2::2]:\n    s = [*s[:-1]]\n    r = ''\n    while s:\n        if (x := s.pop()) < '1':\n            x = s[-2] + s[-1]\n            s[-2:] = []\n        r = chr(96 + int(x)) + r\n    print(r)", "charMap = {}\ncount = 1\nfor i in 'abcdefghijklmnopqrstuvwxyz':\n    charMap[str(count)] = i\n    count += 1\nfor _ in range(int(input())):\n    l = int(input())\n    numbers = [i for i in input()]\n    s = ''\n    i = l - 1\n    while i >= 0:\n        if numbers[i] == '0':\n            s = charMap[numbers[i - 2] + numbers[i - 1]] + s\n            i -= 3\n        else:\n            s = charMap[numbers[i]] + s\n            i -= 1\n    print(s)", "def solve():\n    input()\n    alphabet = {1: 'a', 2: 'b', 3: 'c', 4: 'd', 5: 'e', 6: 'f', 7: 'g', 8: 'h', 9: 'i', 98: 'j', 11: 'k', 12: 'l', 13: 'm', 14: 'n', 15: 'o', 16: 'p', 17: 'q', 18: 'r', 19: 's', 97: 't', 21: 'u', 22: 'v', 23: 'w', 24: 'x', 25: 'y', 26: 'z'}\n    ans = []\n    s = input()\n    s = s.replace('100', '980').replace('200', '970')\n    s = s[::-1]\n    ts = ''\n    c = 0\n    for i in s:\n        if i == '0':\n            c = 1\n            continue\n        elif c >= 1 and c <= 2:\n            ts += i\n            if c == 2:\n                ans.append(alphabet[int(ts[::-1])])\n                c = 0\n                ts = ''\n            else:\n                c += 1\n        else:\n            ans.append(alphabet[int(i)])\n    print(''.join(ans[::-1]))\ntc = int(input())\nfor t in range(tc):\n    solve()", "t = int(input())\ncharArray = [chr(x + 97) for x in range(0, 26)]\nlres = []\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    res = []\n    i = n - 1\n    while i >= 0:\n        if s[i] != '0':\n            res.append(charArray[int(s[i]) - 1])\n            i -= 1\n        else:\n            res.append(charArray[int(s[i - 2]) * 10 + int(s[i - 1]) - 1])\n            i -= 3\n    lres.append(''.join(list(reversed(res))))\nfor i in lres:\n    print(i)", "test = int(input())\nalpha = {'1': 'a', '2': 'b', '3': 'c', '4': 'd', '5': 'e', '6': 'f', '7': 'g', '8': 'h', '9': 'i', '10': 'j', '11': 'k', '12': 'l', '13': 'm', '14': 'n', '15': 'o', '16': 'p', '17': 'q', '18': 'r', '19': 's', '20': 't', '21': 'u', '22': 'v', '23': 'w', '24': 'x', '25': 'y', '26': 'z'}\nfor t in range(test):\n    len_string = int(input())\n    string = input()\n    wordstring = ''\n    i = len_string - 1\n    while i >= 0:\n        if string[i] == '0':\n            bigstring = string[i - 2] + string[i - 1]\n            wordstring = alpha[bigstring] + wordstring\n            i -= 3\n        else:\n            wordstring = alpha[string[i]] + wordstring\n            i -= 1\n    print(wordstring)", "def encode(t, n):\n    result = ''\n    i = n - 1\n    while i >= 0:\n        if t[i] == '0':\n            result = chr(int(t[i - 2] + t[i - 1]) + 96) + result\n            i -= 3\n        else:\n            result = chr(int(t[i]) + 96) + result\n            i -= 1\n    return result\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        t = input()\n        print(encode(t, n))\nmain()", "for s in [*map(int, open(0))][2::2]:\n    r = ''\n    while s:\n        x = s % 10\n        s //= 10\n        if x < 1:\n            x = s % 100\n            s //= 100\n        r = chr(96 + x) + r\n    print(r)", "def func():\n    n = int(input())\n    code = input()\n    og_str = [''] * n\n    acu = n - 1\n    while acu > -1:\n        if code[acu] != '0':\n            a = chr(int(code[acu]) + 96)\n            og_str[acu] = a\n            acu -= 1\n        else:\n            a = code[acu - 2:acu]\n            a = chr(int(a) + 96)\n            og_str[acu] = a\n            acu -= 3\n    print(''.join(og_str))\n    return\nt = int(input())\nfor i in range(t):\n    func()", "def decode_str(t='210019013015120'):\n    answer = ''\n    i = len(t) - 1\n    while i >= 0:\n        if t[i] == '0':\n            answer = chr(int(t[i - 2:i]) + 96) + answer\n            i = i - 3\n        else:\n            answer = chr(int(t[i]) + 96) + answer\n            i -= 1\n    print(answer)\nl = int(input())\ns = []\nfor i in range(l):\n    k = input()\n    s.append(input())\nfor i in s:\n    decode_str(i)", "for s in [*open(0)][2::2]:\n    (*s,) = s[:-1]\n    r = ''\n    while s:\n        if (x := s.pop()) < '1':\n            x = s[-2] + s[-1]\n            s[-2:] = []\n        r = chr(96 + int(x)) + r\n    print(r)", "for X in [*map(int, open(0))][2::2]:\n    F = ''\n    while X:\n        A = X % 10\n        X //= 10\n        if A < 1:\n            A = X % 100\n            X //= 100\n        F = chr(96 + A) + F\n    print(F)", "for s in [*open(0)][2::2]:\n    s = int(s[:-1])\n    ans = ''\n    while s:\n        x = s % 10\n        s //= 10\n        if x < 1:\n            x = s % 100\n            s //= 100\n        ans = chr(x + 96) + ans\n    print(ans)", "d = {}\nfor i in range(97, 123):\n    d[str(i - 96)] = chr(i)\nq = int(input())\nwhile q:\n    n = int(input())\n    t = input()\n    s = ''\n    i = n - 1\n    while i >= 0:\n        if t[i] != '0':\n            s += d[t[i]]\n        else:\n            x = t[i - 2] + t[i - 1]\n            s += d[x]\n            i -= 2\n        i -= 1\n    print(s[::-1])\n    q -= 1", "import sys\nimport collections\nfrom math import ceil, gcd, sqrt, log\nimport bisect\nINF = float('inf')\nmod = 1000000007\n\ndef solve():\n    n = int(input())\n    code = input()\n    net = 'abcdefghijklmnopqrstuvwxyz'\n    stack = []\n    for i in range(n):\n        c = code[i]\n        if c != '0':\n            stack.append(c)\n        elif c == '0' and i + 1 < n and (code[i + 1] == '0'):\n            stack.append(c)\n        elif c == '0':\n            x = stack.pop()\n            y = stack.pop()\n            num = y + x\n            stack.append(num)\n    ans = ''\n    for i in stack:\n        ind = int(i)\n        ans += net[ind - 1]\n    print(ans)\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "import sys\nfrom string import ascii_lowercase\ninput = sys.stdin.readline\n\ndef print(*args, end='\\n', sep=' ') -> None:\n    sys.stdout.write(sep.join(map(str, args)) + end)\n\ndef Solve():\n    min_ = 1\n    max_ = len(ascii_lowercase)\n    for t in range(int(input())):\n        n = int(input())\n        s = input().strip() + 'm'\n        digits = []\n        last_0 = 0\n        for i in range(n):\n            if s[i] == '0' and s[i + 1] != '0':\n                digits.extend(list(s[last_0:i - 2]))\n                digits.append(s[i - 2:i])\n                last_0 = i\n        else:\n            digits.extend(list(s[last_0 + (last_0 != 0):]))\n        digits = list(filter(lambda x: x != 'm' and x != '0', digits))\n        new_s = ''\n        for i in digits:\n            new_s += ascii_lowercase[int(i) - 1]\n        print(new_s)\nSolve()", "def main():\n    n = int(input())\n    numsstr = list(input())\n    nums = list(map(int, numsstr))\n    output = ''\n    i = len(nums) - 1\n    while i >= 0:\n        if nums[i] == 0:\n            output += chr(int(numsstr[i - 2] + numsstr[i - 1]) + 96)\n            i -= 3\n        else:\n            output += chr(nums[i] + 96)\n            i -= 1\n    output = ''.join(list(reversed(list(output))))\n    print(output)\nt = int(input())\nfor i in range(t):\n    main()", "def main():\n    for _ in range(int(input())):\n        j = int(input())\n        t = input()\n        (res, i) = ('', j - 1)\n        while i >= 0:\n            if t[i] != '0':\n                res += chr(int(t[i]) + 96)\n                i = i - 1\n            else:\n                res += chr(int(t[i - 2:i]) + 96)\n                i = i - 3\n        print(res[::-1])\nmain()", "def main():\n    for _ in range(int(input())):\n        m = int(input())\n        n = input()\n        (result, l) = ('', m - 1)\n        while l >= 0:\n            if n[l] != '0':\n                result = chr(int(n[l]) + 96) + result\n                l -= 1\n            else:\n                result = chr(int(n[l - 2:l]) + 96) + result\n                l -= 3\n        print(result)\nmain()", "def solve(l):\n    r = ''\n    try:\n        for i in range(n):\n            t = l.pop()\n            if t == '0':\n                t1 = l.pop()\n                t2 = l.pop()\n                r += chr(int(t2 + t1) + 32 + 64)\n            else:\n                r += chr(int(t) + 32 + 64)\n    except:\n        return r[::-1]\n    return r[::-1]\nfor _ in range(int(input())):\n    n = int(input())\n    l = [i for i in input()]\n    print(solve(l))", "for _ in range(int(input())):\n    n = int(input())\n    t = input()\n    j = len(t) - 1\n    d = {'0': '', '1': 'a', '2': 'b', '3': 'c', '4': 'd', '5': 'e', '6': 'f', '7': 'g', '8': 'h', '9': 'i', '10': 'j', '11': 'k', '12': 'l', '13': 'm', '14': 'n', '15': 'o', '16': 'p', '17': 'q', '18': 'r', '19': 's', '20': 't', '21': 'u', '22': 'v', '23': 'w', '24': 'x', '25': 'y', '26': 'z'}\n    s = ''\n    while j >= 0:\n        if t[j] == '0':\n            s += d[t[j - 2] + t[j - 1]]\n            j -= 3\n        elif t[j] != '0':\n            s += d[t[j]]\n            j -= 1\n    print(s[::-1])", "for s in [*open(0)][2::2]:\n    (*s,) = s[:-1]\n    r = ''\n    while s:\n        if (x := s.pop()) < '1':\n            x = s[-2] + s[-1]\n            s[-2:] = []\n        r = chr(96 + int(x)) + r\n    print(r)", "def solve(s):\n    string = ''\n    i = len(s) - 1\n    while i >= 0:\n        if s[i] == '0' and i - 2 > -1:\n            temp = int(s[i - 2] + s[i - 1])\n            string += chr(temp + 96)\n            i -= 3\n        else:\n            temp = int(s[i])\n            string += chr(temp + 96)\n            i -= 1\n    print(string[::-1])\ntest = int(input())\nwhile test:\n    n = int(input())\n    s = input()\n    solve(s)\n    test -= 1", "N = ord('a')\nfor _ in range(int(input())):\n    n = int(input())\n    s1 = ''\n    s = int(input())\n    while s > 0:\n        (s, r) = divmod(s, 10)\n        if r == 0:\n            (s, r) = divmod(s, 100)\n        s1 += chr(N + r - 1)\n    print(s1[::-1])", "for s in [*map(int, open(0))][2::2]:\n    r = ''\n    while s:\n        x = s % 10\n        s //= 10\n        if x < 1:\n            x = s % 100\n            s //= 100\n        r = chr(96 + x) + r\n    print(r)", "q = int(input())\nresult = []\nalphabets = [chr(i + 97) for i in range(26)]\nfor i in range(q):\n    n = int(input())\n    code = input()\n    j = n - 1\n    ch = ''\n    while j >= 0:\n        if code[j] != '0':\n            ch += alphabets[int(code[j]) - 1]\n            j -= 1\n        else:\n            ch += alphabets[int(code[j - 2:j]) - 1]\n            j -= 3\n    result.append(ch[::-1])\nfor i in result:\n    print(i)", "import sys\nsys.setrecursionlimit(10 ** 6)\nfrom collections import Counter, deque, defaultdict\nimport math\nimport heapq\nip = sys.stdin.readline\nop = sys.stdout.write\nt = int(ip())\nres = []\nfor _ in range(t):\n    n = int(ip())\n    s = ip()\n    decoded_st = ''\n    i = n - 1\n    while i >= 0:\n        if s[i] != '0':\n            decoded_st += chr(int(s[i]) + 96)\n            i -= 1\n        else:\n            c = s[i - 2] + s[i - 1]\n            decoded_st += chr(int(c) + 96)\n            i -= 3\n    lst = list(decoded_st[::-1])\n    res.append(''.join(lst))\nfor val in res:\n    op(val + '\\n')", "import sys\nimport math\nfrom functools import cmp_to_key\nsys.setrecursionlimit(10 ** 9)\n\ndef solve():\n    for t in range(int(input())):\n        n = int(input())\n        s = input()\n        i = len(s) - 1\n        result = ''\n        while i >= 0:\n            x = None\n            if s[i] == '0':\n                x = 96 + int(s[i - 2:i])\n                i -= 3\n            else:\n                x = 96 + int(s[i])\n                i -= 1\n            result = chr(x) + result\n        print(result)\nsolve()", "def solve(s, n):\n    ans = []\n    i = 0\n    while i < n:\n        if i + 2 >= n:\n            ans.append(chr(int(s[i]) + 96))\n            i += 1\n        elif s[i + 2] != '0' or (i + 3 < n and s[i + 2] == '0' and (s[i + 3] == '0')):\n            ans.append(chr(int(s[i]) + 96))\n            i += 1\n        else:\n            temp = 10 * int(s[i]) + int(s[i + 1])\n            ans.append(chr(temp + 96))\n            i += 3\n    return ''.join(ans)\nt = int(input())\nfor j in range(t):\n    n = int(input())\n    abc = input()\n    ans = solve(abc, n)\n    print(ans)", "def solve():\n    n = input()\n    s = input()\n    ans = ''\n    i = len(s) - 1\n    while i >= 0:\n        if s[i] == '0':\n            ans += chr(97 + int(s[i - 2] + s[i - 1]) - 1)\n            i -= 3\n        else:\n            ans += chr(97 + int(s[i]) - 1)\n            i -= 1\n    print(ans[::-1])\nt = int(input())\nfor _ in range(t):\n    solve()", "list_char = [chr(i) for i in range(97, 123)]\nlist_num1 = [str(i) for i in range(1, 10)]\nlist_num1 += [str(i) + '0' for i in range(10, 27)]\nres = {list_num1[i]: list_char[i] for i in range(len(list_char))}\nt = int(input())\nfor i in range(t):\n    str2 = ''\n    n = int(input())\n    x = input()\n    y = list(reversed(x))\n    i = 0\n    while i < len(y):\n        if y[i] == '0':\n            str2 += res[y[i + 2] + y[i + 1] + y[i]]\n            i += 3\n        else:\n            str2 += res[y[i]]\n            i += 1\n    print(str2[::-1])", "def exe():\n    alpha = 'abcdefghijklmnopqrstuvwxyz'\n    i = n - 1\n    ans = ''\n    while i > -1:\n        if s[i] == '0':\n            ans += alpha[int(s[i - 2] + s[i - 1]) - 1]\n            i -= 3\n        else:\n            ans += alpha[int(s[i]) - 1]\n            i -= 1\n    return ans[::-1]\nfor i in range(int(input())):\n    n = int(input())\n    s = input()\n    print(exe())", "total = int(input())\ntrans_list = '*ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nfor i in range(total):\n    input()\n    text = input()\n    text = text.replace('200', trans_list[20])\n    text = text.replace('100', trans_list[10])\n    i = 26\n    while True:\n        if i == 0:\n            break\n        i_num = i\n        if i > 9:\n            i_num *= 10\n        i_text = str(i_num)\n        text = text.replace(i_text, trans_list[i])\n        i -= 1\n    print(text.lower())", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    t = str(input())\n    dic = {'1': 'a', '2': 'b', '3': 'c', '4': 'd', '5': 'e', '6': 'f', '7': 'g', '8': 'h', '9': 'i', '10': 'j', '11': 'k', '12': 'l', '13': 'm', '14': 'n', '15': 'o', '16': 'p', '17': 'q', '18': 'r', '19': 's', '20': 't', '21': 'u', '22': 'v', '23': 'w', '24': 'x', '25': 'y', '26': 'z'}\n    idx = n - 1\n    ans = ''\n    while idx >= 0:\n        if t[idx] == '0':\n            ans += dic[t[idx - 2:idx]]\n            idx -= 3\n        else:\n            ans += dic[t[idx]]\n            idx -= 1\n    ans = ans[::-1]\n    print(ans)", "import sys\nimport math\nfrom collections import Counter\n\ndef gi():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef gs():\n    return sys.stdin.readline().strip()\n\ndef fun(a):\n    i = len(a) - 1\n    arr = []\n    while i >= 0:\n        ans = ''\n        if a[i] == '0':\n            ans += a[i - 1]\n            ans += a[i - 2]\n            arr.append(ans[::-1])\n            i -= 2\n        else:\n            arr.append(a[i])\n        i -= 1\n    arr = arr[::-1]\n    ret = ''\n    for i in arr:\n        ret += chr(int(i) + 96)\n    return ret\nfor _ in range(int(input())):\n    b = input()\n    a = input()\n    print(fun(a))", "a = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\nd = {}\nfor i in range(len(a)):\n    d[str(i + 1)] = a[i]\nq = int(input())\nfor i in range(q):\n    n = int(input())\n    t = input()\n    word = ''\n    t = t[::-1]\n    j = 0\n    while j < len(t):\n        if t[j] == '0':\n            word += d[t[j + 2:j:-1]]\n            j += 3\n        else:\n            word += d[t[j]]\n            j += 1\n    print(word[::-1])", "class Solution:\n\n    def decode(self, s):\n        decode_dict = {str(ord(i) - 96): i for i in 'abcdefghijklmnopqrstuvwxyz'}\n        res = ''\n        decode_dict['0'] = ''\n        if len(s) <= 2:\n            for i in range(len(s)):\n                res += decode_dict[s[i]]\n            return res\n        skip = False\n        for i in range(len(s) - 3):\n            if skip:\n                skip = False\n                continue\n            if s[i] == '0':\n                continue\n            if s[i + 2] == '0' and s[i + 3] != '0':\n                res += decode_dict[s[i] + s[i + 1]]\n                skip = True\n            else:\n                res += decode_dict[s[i]]\n        if s[-1] == '0':\n            res += decode_dict[s[-3] + s[-2]]\n        elif skip:\n            res += decode_dict[s[-1]]\n        else:\n            res += decode_dict[s[-3]] + decode_dict[s[-2]] + decode_dict[s[-1]]\n        return res\nob = Solution()\nq = int(input())\nwhile q:\n    n = int(input())\n    s = input().strip()\n    print(ob.decode(s))\n    q -= 1", "def main():\n    for _ in range(int(input())):\n        n = int(input())\n        t = input()\n        (res, i) = ('', n - 1)\n        while i >= 0:\n            if t[i] != '0':\n                res = chr(int(t[i]) + 96) + res\n                i -= 1\n            else:\n                res = chr(int(t[i - 2:i]) + 96) + res\n                i -= 3\n        print(res)\nmain()", "def solve():\n    n = int(input())\n    s = input()\n    ord_a = 96\n    i = n - 1\n    result = ''\n    while i >= 0:\n        ord_val = int(s[i])\n        if s[i] == '0':\n            i -= 1\n            ord_val = int(s[i - 1] + s[i])\n            i -= 1\n        alpha = chr(ord_val + ord_a)\n        result = alpha + result\n        i -= 1\n    print(result)\nt = int(input())\nfor _ in range(t):\n    solve()", "diction = [(1, 'a'), (2, 'b'), (3, 'c'), (4, 'd'), (5, 'e'), (6, 'f'), (7, 'g'), (8, 'h'), (9, 'i'), (10, 'j'), (11, 'k'), (12, 'l'), (13, 'm'), (14, 'n'), (15, 'o'), (16, 'p'), (17, 'q'), (18, 'r'), (19, 's'), (20, 't'), (21, 'u'), (22, 'v'), (23, 'w'), (24, 'x'), (25, 'y'), (26, 'z')]\n\ndef decoder(string, diction, length):\n    i = 0\n    decoded = ''\n    while i < length:\n        a = string[length - i - 1]\n        if a == '0':\n            b = string[length - i - 2]\n            c = string[length - i - 3]\n            cb = c + b\n            bc = diction[int(cb) - 1][1]\n            decoded = bc + decoded\n            i += 3\n        else:\n            decoded = diction[int(a) - 1][1] + decoded\n            i += 1\n    return decoded\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    string = input()\n    print(decoder(string, diction, n))", "def main():\n    for _ in range(int(input())):\n        q = int(input())\n        w = input()\n        (res, e) = ('', q - 1)\n        while e >= 0:\n            if w[e] != '0':\n                res = chr(int(w[e]) + 96) + res\n                e -= 1\n            else:\n                res = chr(int(w[e - 2:e]) + 96) + res\n                e -= 3\n        print(res)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    t = input()\n    d = {'1': 'a', '2': 'b', '3': 'c', '4': 'd', '5': 'e', '6': 'f', '7': 'g', '8': 'h', '9': 'i', '10': 'j', '11': 'k', '12': 'l', '13': 'm', '14': 'n', '15': 'o', '16': 'p', '17': 'q', '18': 'r', '19': 's', '20': 't', '21': 'u', '22': 'v', '23': 'w', '24': 'x', '25': 'y', '26': 'z'}\n    s = ''\n    i = n - 1\n    while i >= 0:\n        if t[i] == '0':\n            s += d[t[i - 2:i]]\n            i -= 3\n        else:\n            s += d[t[i]]\n            i -= 1\n    print(s[::-1])", "def main():\n    for _ in range(int(input())):\n        n = int(input())\n        t = input()\n        (res, i) = ('', n - 1)\n        while i >= 0:\n            if t[i] != '0':\n                res += chr(int(t[i]) + 96)\n                i = i - 1\n            else:\n                res += chr(int(t[i - 2:i]) + 96)\n                i = i - 3\n        print(res[::-1])\nmain()", "from collections import defaultdict\nst = 'abcdefghijklmnopqrstuvwxyz'\nnum = 1\nd = defaultdict(lambda : -1)\nfor i in st:\n    d[str(num)] = i\n    num += 1\nn = int(input())\nfor _ in range(n):\n    nu = int(input())\n    st = str(input())\n    st = st[::-1]\n    i = 0\n    an = ''\n    while i < nu:\n        if st[i] == '0':\n            val = st[i + 1] + st[i + 2]\n            val = val[::-1]\n            an += d[val]\n            i += 2\n        else:\n            an += d[st[i]]\n        i += 1\n    print(an[::-1])", "def decodeStr(code, sz):\n    ltrCode = ''\n    res = ''\n    sz -= 1\n    while sz > -1:\n        if code[sz] == '0':\n            ltrCode = code[sz - 2:sz]\n            sz -= 3\n        else:\n            ltrCode = code[sz]\n            sz -= 1\n        res = chr(ord('a') + int(ltrCode) - 1) + res\n        ltrCode = ''\n    return res\nt = int(input())\nwhile t:\n    length = int(input())\n    myStr = input()\n    print(decodeStr(myStr, length))\n    t -= 1", "t = int(input())\nalph = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\nans = []\nfor _ in range(t):\n    a = ''\n    n = int(input())\n    t = input()\n    i = n - 1\n    while i >= 0:\n        if t[i] == '0':\n            a = alph[int(t[i - 2:i]) - 1] + a\n            i -= 3\n        else:\n            a = alph[int(t[i]) - 1] + a\n            i -= 1\n    ans.append(a)\nfor i in ans:\n    print(i)", "def Favaku():\n    for Z in range(int(input())):\n        a = int(input())\n        b = input()\n        (res, i) = ('', a - 1)\n        while i >= 0:\n            if b[i] != '0':\n                res = chr(int(b[i]) + 96) + res\n                i -= 1\n            else:\n                res = chr(int(b[i - 2:i]) + 96) + res\n                i -= 3\n        print(res)\nFavaku()", "def main():\n    for _ in range(int(input())):\n        n = int(input())\n        t = input()\n        (res, i) = ('', n - 1)\n        while i >= 0:\n            if t[i] != '0':\n                res += chr(int(t[i]) + 96)\n                i -= 1\n            else:\n                res += chr(int(t[i - 2:i]) + 96)\n                i -= 3\n        print(res[::-1])\nmain()", "def decode(n, s):\n    res = ''\n    if n < 3:\n        for i in range(n):\n            res += chr(96 + int(s[i]))\n        return res\n    i = 0\n    while i < n:\n        if i + 3 < n and (s[i + 2] == '0' and s[i + 3] != '0'):\n            res += chr(96 + int(s[i:i + 2]))\n            i += 3\n        elif n - i == 3 and s[i + 2] == '0':\n            res += chr(96 + int(s[i:i + 2]))\n            i += 3\n        else:\n            res += chr(96 + int(s[i]))\n            i += 1\n    return res\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    print(decode(n, s))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    d = {'0': '', '1': 'a', '2': 'b', '3': 'c', '4': 'd', '5': 'e', '6': 'f', '7': 'g', '8': 'h', '9': 'i', '10': 'j', '11': 'k', '12': 'l', '13': 'm', '14': 'n', '15': 'o', '16': 'p', '17': 'q', '18': 'r', '19': 's', '20': 't', '21': 'u', '22': 'v', '23': 'w', '24': 'x', '25': 'y', '26': 'z'}\n    st = ''\n    i = len(s) - 1\n    while i >= 0:\n        if s[i] == '0':\n            st += d[s[i - 2] + s[i - 1]]\n            i -= 3\n        elif s[i] != '0':\n            st += d[s[i]]\n            i -= 1\n    print(st[::-1])", "def decode():\n    n = int(input())\n    for _ in range(n):\n        m = int(input())\n        dupes = input()\n        res = ''\n        (start, end) = (0, len(str(dupes)) - 1)\n        for i in range(len(dupes) - 1, -1, -1):\n            while start <= end:\n                if dupes[end] != '0':\n                    val = int(dupes[end]) + 96\n                    res += chr(val)\n                elif dupes[end] == '0':\n                    val = 96 + int(dupes[end - 2] + dupes[end - 1])\n                    end -= 2\n                    res += chr(val)\n                end -= 1\n        print(res[::-1])\ndecode()", "def runner(n):\n    res = []\n    i = len(n) - 1\n    while i >= 0:\n        if n[i] != '0':\n            res.append(n[i])\n            i -= 1\n        else:\n            s = i - 2\n            res.append(n[s:i])\n            i -= 3\n    ss = ''\n    for i in res:\n        ss += chr(int(i) + 97 - 1)\n    return ss[::-1]\nb = int(input())\nfor i in range(b):\n    a = int(input())\n    n = str(input())\n    print(runner(n))", "def decode():\n    n = int(input())\n    for _ in range(n):\n        m = int(input())\n        dupes = input()\n        res = ''\n        (start, end) = (0, len(str(dupes)) - 1)\n        while start <= end:\n            if dupes[end] != '0':\n                val = int(dupes[end]) + 96\n                res += chr(val)\n            elif dupes[end] == '0':\n                val = 96 + int(dupes[end - 2] + dupes[end - 1])\n                end -= 2\n                res += chr(val)\n            end -= 1\n        print(res[::-1])\ndecode()", "for s in [*map(int, open(0))][2::2]:\n    r = ''\n    while s:\n        x = s % 10\n        s //= 10\n        if x < 1:\n            x = s % 100\n            s //= 100\n        r = chr(96 + x) + r\n    print(r)", "def solve():\n    n = int(input())\n    s = input()\n    s1 = ''\n    while n != 0:\n        if s[n - 1] == '0':\n            num = s[n - 3] + s[n - 2]\n            num1 = int(num) + 97\n            s1 += chr(num1 - 1)\n            n -= 3\n        else:\n            num = s[n - 1]\n            num1 = int(num) + 97\n            n -= 1\n            s1 += chr(num1 - 1)\n    print(s1[::-1])\nfor t in range(int(input())):\n    solve()", "def main():\n    tc = int(input())\n    for i in range(tc):\n        n = int(input())\n        code = input()\n        print(decode(n - 1, code))\n\ndef decode(n, code):\n    dict = {'1': 'a', '2': 'b', '3': 'c', '4': 'd', '5': 'e', '6': 'f', '7': 'g', '8': 'h', '9': 'i', '10': 'j', '11': 'k', '12': 'l', '13': 'm', '14': 'n', '15': 'o', '16': 'p', '17': 'q', '18': 'r', '19': 's', '20': 't', '21': 'u', '22': 'v', '23': 'w', '24': 'x', '25': 'y', '26': 'z'}\n    temp = ''\n    count = 0\n    result = ''\n    for i in range(n, -1, -1):\n        if code[i] == '0':\n            temp += code[i]\n            count += 1\n        elif '0' in temp and count < 3:\n            temp += code[i]\n            count += 1\n            if count == 3:\n                reverse = temp[::-1]\n                result += dict[reverse[0:2]]\n                count = 0\n                temp = ''\n        else:\n            temp += code[i]\n            reverse = temp[::-1]\n            result += dict[reverse[0:2]]\n            temp = ''\n    return result[::-1]\nmain()", "q = int(input())\nfor _ in range(q):\n    n = int(input())\n    code = list(map(int, list(input())))\n    letters = []\n    while code:\n        cVal = code.pop()\n        if not cVal:\n            cVal = code.pop() + code.pop() * 10\n        letters.append(chr(cVal + 96))\n    letters.reverse()\n    print(''.join(letters))", "def solution(n, string):\n    ans = []\n    i = n - 1\n    while i >= 0:\n        if string[i] == '0' and i - 2 >= 0:\n            cur = chr(ord('a') + int(string[i - 2:i]) - 1)\n            i -= 3\n        else:\n            cur = chr(ord('a') + int(string[i]) - 1)\n            i -= 1\n        ans.append(cur)\n    return ''.join(ans[::-1])\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    string = input()\n    print(solution(n, string))", "import string\n\ndef decode(n, s):\n    alph = string.ascii_lowercase\n    res = ''\n    c = n - 1\n    while c != -1:\n        if s[c] == '0':\n            res += alph[int(s[c - 2:c + 1]) // 10 - 1]\n            c -= 3\n        else:\n            res += alph[int(s[c]) - 1]\n            c -= 1\n    print(''.join(reversed(res)))\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    s = input()\n    decode(n, s)", "for s in [*map(int, open(0))][2::2]:\n    r = ''\n    while s:\n        x = s % 10\n        s //= 10\n        if x < 1:\n            x = s % 100\n            s //= 100\n        r = chr(96 + x) + r\n    print(r)", "t = int(input())\nd = {}\nh = 0\nfor i in 'abcdefghijklmnopqrstuvwxyz':\n    h += 1\n    d[h] = i\nfor j in range(0, t):\n    n = int(input())\n    p = input()\n    l = ''\n    i = n - 1\n    while i >= 0:\n        if p[i] == '0':\n            l = d[int(p[i - 2] + p[i - 1])] + l\n            i -= 3\n        else:\n            l = d[int(p[i])] + l\n            i -= 1\n    print(l)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    p = list(s)\n    a = 'abcdefghijklmnopqrstuvwxyz'\n    l = list(a)\n    i = n - 1\n    g = []\n    while i >= 0:\n        d = int(p[i])\n        if d != 0:\n            g.append(l[d - 1])\n            i = i - 1\n        else:\n            m = p[i - 2:i]\n            o = ''.join(m)\n            x = int(o)\n            g.append(l[x - 1])\n            i = i - 3\n    print(''.join(reversed(g)))", "alphabets = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\nt = int(input())\nwhile t > 0:\n    length = int(input())\n    str = input()\n    ans = ''\n    i = length - 1\n    while i >= 0:\n        if str[i] != '0':\n            ans += alphabets[int(str[i]) - 1]\n        else:\n            temp = str[i - 2] + str[i - 1]\n            temp = int(temp)\n            ans += alphabets[temp - 1]\n            i -= 2\n        i -= 1\n    ans = ans[::-1]\n    print(ans)\n    t -= 1", "qqq = 'abcdefghijklmnopqrstuvwxyz'\nd = {}\nc = 1\nfor i in qqq:\n    d[str(c)] = i\n    c = c + 1\nq = int(input())\nwhile q > 0:\n    q = q - 1\n    n = int(input())\n    t = input()\n    s = ''\n    i = n - 1\n    while i >= 0:\n        if t[i] != '0':\n            s = s + d[str(t[i])]\n            i = i - 1\n            continue\n        s = s + d[str(t[i - 2]) + str(t[i - 1])]\n        i = i - 3\n    print(s[::-1])", "def fun(n):\n    s = str(n)\n    d = {1: 'a', 2: 'b', 3: 'c', 4: 'd', 5: 'e', 6: 'f', 7: 'g', 8: 'h', 9: 'i', 10: 'j', 11: 'k', 12: 'l', 13: 'm', 14: 'n', 15: 'o', 16: 'p', 17: 'q', 18: 'r', 19: 's', 20: 't', 21: 'u', 22: 'v', 23: 'w', 24: 'x', 25: 'y', 26: 'z'}\n    st = ''\n    i = len(s) - 1\n    while i > -1:\n        if s[i] != '0' and int(s[i]) > 2:\n            st += d[int(s[i])]\n            i -= 1\n        elif s[i] == '0' and int(s[i - 2]) < 3:\n            p = int(s[i - 2] + s[i - 1])\n            st += d[p]\n            i -= 3\n        elif s[i] == '0' and int(s[i - 2]) < 2:\n            p = int(s[i - 2] + s[i - 1])\n            st += d[p]\n            i -= 3\n        elif s[i] == '0' and s[i - 1] == '0':\n            k = int(s[i - 2] + s[i - 1])\n            st += d[k]\n            i -= 3\n        else:\n            st += d[int(s[i])]\n            i -= 1\n    return st[::-1]\nl = []\nt = int(input())\nfor i in range(t):\n    k = int(input())\n    l.append([k, int(input())])\nfor i in l:\n    print(fun(i[1]))", "for _ in range(int(input())):\n    n = int(input())\n    t = list(map(int, input()))\n    answer = ''\n    while t:\n        x = t.pop()\n        if not x:\n            answer += chr(t.pop() + t.pop() * 10 + 96)\n        else:\n            answer += chr(x + 96)\n    print(answer[::-1])", "dt = {1: 'a', 2: 'b', 3: 'c', 4: 'd', 5: 'e', 6: 'f', 7: 'g', 8: 'h', 9: 'i', 10: 'j', 11: 'k', 12: 'l', 13: 'm', 14: 'n', 15: 'o', 16: 'p', 17: 'q', 18: 'r', 19: 's', 20: 't', 21: 'u', 22: 'v', 23: 'w', 24: 'x', 25: 'y', 26: 'z'}\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    res = ''\n    i = n - 1\n    while i >= 0:\n        if s[i] == '0':\n            res += dt[int(s[i - 2:i])]\n            i -= 3\n        else:\n            res += dt[int(s[i])]\n            i -= 1\n    print(res[::-1])", "for q in range(int(input())):\n    n = int(input())\n    t = input()\n    L = [int(c) for c in t]\n    s = ''\n    if t.count('0') == 0:\n        for c in L:\n            s = s + chr(c + ord('a') - 1)\n    else:\n        s = ''\n        i = len(L) - 1\n        while i >= 0:\n            if L[i] != 0:\n                s = chr(L[i] + ord('a') - 1) + s\n                i = i - 1\n            else:\n                s1 = L[i - 2] * 10 + L[i - 1]\n                c1 = chr(s1 + ord('a') - 1)\n                s = c1 + s\n                i = i - 3\n    print(s)", "for s in [*map(int, open(0))][2::2]:\n    r = ''\n    while s:\n        x = s % 10\n        s //= 10\n        if x < 1:\n            x = s % 100\n            s //= 100\n        r = chr(96 + x) + r\n    print(r)", "for _ in range(int(input())):\n    l = int(input())\n    s = input()[::-1]\n    d_code = ''\n    i = 0\n    while i < l:\n        if s[i] == '0':\n            d_code = chr(int(s[i + 2:i:-1]) + 96) + d_code\n            i += 3\n        else:\n            d_code = chr(int(s[i]) + 96) + d_code\n            i += 1\n    print(d_code)", "def decode(list_):\n    i = 0\n    final_string = ''\n    while i < list_[0]:\n        if i <= list_[0] - 3:\n            if list_[1][i + 2] == '0':\n                try:\n                    if list_[1][i + 3] == '0':\n                        final_string = final_string + chr(97 + int(list_[1][i]) - 1)\n                        i = i + 1\n                    else:\n                        final_string = final_string + chr(97 + int(list_[1][i:i + 2]) - 1)\n                        i = i + 3\n                except:\n                    final_string = final_string + chr(97 + int(list_[1][i:i + 2]) - 1)\n                    i = i + 3\n            else:\n                final_string = final_string + chr(97 + int(list_[1][i]) - 1)\n                i = i + 1\n        else:\n            final_string = final_string + chr(97 + int(list_[1][i]) - 1)\n            i = i + 1\n    return final_string\ncount_tot = int(input())\nlist_of_list = []\nfor i in range(count_tot):\n    interim_list = []\n    interim_list.append(int(input()))\n    interim_list.append(input())\n    list_of_list.append(interim_list)\nfor i in list_of_list:\n    print(decode(i))"]