["print('\\n'.join([i[:-1] + i[-2::-1] for i in [*open(0)][1:]]))", "for _ in range(int(input())):\n    s = input()\n    print(s + s[::-1])", "for _ in range(int(input())):\n    s = input()\n    print(s + s[::-1])", "for _ in range(int(input())):\n    s = input()\n    print(s + s[::-1])", "t = int(input())\nfor i in range(t):\n    a = input()\n    b = a[::-1]\n    print(a + b)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef solve(a, p, g, b, c):\n    if not a:\n        return c\n    s1 = c\n    s2 = c\n    s3 = c\n    if p > a[0]:\n        s1 = solve(a[1:], p + a[0] // 2, g, b, c + 1)\n    if g > 0:\n        s2 = solve(a, p * 2, g - 1, b, c)\n    if b > 0:\n        s3 = solve(a, p * 3, g, b - 1, c)\n    return max(s1, s2, s3)\n\ndef ci(ar):\n    i = len(ar) - 1\n    zc = 0\n    zeroA = [0] * len(ar)\n    ic = [0] * len(ar)\n    while i >= 0:\n        zeroA[i] = zc\n        if ar[i] == 1:\n            ic[i] = zc\n        else:\n            zc += 1\n        i -= 1\n    i = 0\n    oc = 0\n    oneC = [0] * len(ar)\n    while i < len(ar):\n        oneC[i] = oc\n        if ar[i] == 1:\n            oc += 1\n        i += 1\n    return [ic, zeroA, oneC]\nt = inp()\nfor _ in range(t):\n    n = input().strip()\n    print(n + n[::-1])", "for _ in range(int(input())):\n    s = str(input())\n    print(s + s[::-1])", "t = int(input())\nans = []\nfor i in range(t):\n    s = input()\n    ans.append(s + s[::-1])\nprint(*ans, sep='\\n')", "import sys\ninputs = ''.join(sys.stdin.readlines()).strip().split('\\n')[1:]\nfor i in inputs:\n    print(i + i[::-1])", "for _ in range(int(input())):\n    s = input()\n    print(s + s[::-1])", "for _ in range(int(input())):\n    s = input()\n    print(s + s[::-1])", "for _ in range(int(input())):\n    a = input()\n    b = a[::-1]\n    c = a + b\n    print(c)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    print(s, end='')\n    print(s[::-1])", "t = int(input())\nfor i in range(t):\n    s = input()\n    s1 = s[::-1]\n    print(s + s1)", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    a = sys.stdin.readline().strip()\n    print(a + a[::-1])", "for _ in range(int(input())):\n    a = input()\n    print(a + a[::-1])", "t = int(input())\nfor i in range(t):\n    a = input()\n    print(a + a[::-1])", "for _ in range(int(input())):\n    a = input()\n    print(a + a[::-1])", "for _ in range(int(input())):\n    s = input()\n    a = s[::-1]\n    b = s + a\n    print(b)", "n = int(input())\nfor i in range(n):\n    s = input()\n    print(s + s[::-1])", "n = int(input())\nfor i in range(n):\n    word = input()\n    new_word = word + word[-1:-len(word) - 1:-1]\n    print(new_word)", "t = int(input())\nfor _ in range(t):\n    input_str = input()\n    print(input_str + input_str[::-1])", "def rearrangement(s):\n    return s + s[::-1]\nt = input('')\nstrings = []\nfor _ in range(int(t)):\n    strings.append(input(''))\nfor s in strings:\n    print(rearrangement(s))", "for _ in range(int(input())):\n    s = input()\n    print(s + s[::-1])", "tst = int(input())\narr = []\nfor i in range(0, tst):\n    s = input()\n    arr.append(s)\nfor s in arr:\n    print(s + s[::-1])", "for _ in range(int(input())):\n    s = input()\n    ss = s[::-1]\n    print(s + ss)", "for _ in range(int(input())):\n    s = input()\n    print(s + s[::-1])", "for i in range(int(input())):\n    s = input()\n    print(s + s[::-1])", "def N():\n    return int(input())\n\ndef A():\n    return [int(x) for x in input().split()]\n\ndef S():\n    return input()\nfor _ in range(N()):\n    if 'codeforces' == 28226329:\n        print('Tanmay')\n    s = S()\n    ss = s[::-1]\n    print(s + ss)", "import sys\ninput = lambda : sys.stdin.readline()[:-1]\nni = lambda : int(input())\nna = lambda : list(map(int, input().split()))\nyes = lambda : print('yes')\nYes = lambda : print('Yes')\nYES = lambda : print('YES')\nno = lambda : print('no')\nNo = lambda : print('No')\nNO = lambda : print('NO')\nfor _ in range(ni()):\n    s = input()\n    print(s + s[::-1])", "def solve():\n    s = input().strip()\n    return s + s[::-1]\nfor _ in range(int(input())):\n    ans = solve()\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    print(s + s[::-1])", "def sol():\n    n = int(input())\n    for i in range(n):\n        s = input()\n        s1 = s[::-1]\n        s = s + s1\n        print(s)\nsol()", "t = int(input())\nfor _ in range(t):\n    s = input()\n    print(s + s[::-1])", "k = int(input())\nfor q in range(k):\n    n = input()\n    print(n + n[::-1])", "t = int(input())\nwhile t:\n    t -= 1\n    s = input()\n    print(s + s[::-1])", "def solution():\n    s = input()\n    print(s + s[::-1])\nt = int(input())\nwhile t:\n    solution()\n    t -= 1", "n = int(input())\nfor i in range(n):\n    s = input()\n    res = s + s[::-1]\n    print(res)", "ans = []\nfor _ in range(int(input())):\n    s = input()\n    ans.append(s + s[::-1])\nprint(*ans, sep='\\n')", "t = int(input())\nfor i in range(t):\n    a = input()\n    b = a[::-1]\n    a = a + b\n    print(a)", "for _ in range(int(input())):\n    a = input()\n    print(a, a[::-1], sep='')", "t = int(input())\nwhile t:\n    s = input()\n    print(s + s[::-1])\n    t -= 1", "def solution():\n    s = input()\n    print(s + s[::-1])\n\ndef main():\n    t = int(input())\n    while t:\n        solution()\n        t -= 1\nmain()", "for _ in range(int(input())):\n    s = input()\n    print(s[0:] + s[::-1])", "t = int(input())\nfor x in range(t):\n    s = input()\n    print(s + s[::-1])", "n = int(input())\nfor i in range(n):\n    s = input()\n    print(s + s[::-1])", "for _ in range(int(input())):\n    s = input()\n    print(s + s[::-1])", "n = int(input())\nwhile n > 0:\n    s = input()\n    print(s + s[::-1])\n    n -= 1", "t = int(input())\nfor _ in range(t):\n    s = str(input())\n    a = s[::-1]\n    print(s + a)", "for t in range(0, int(input())):\n    s = input()\n    ss = s[::-1]\n    print(s + ss)", "t = int(input())\nfor i in range(t):\n    s = input()\n    print(s + s[::-1])", "import sys\nt = int(sys.stdin.readline())\nfor line in sys.stdin:\n    s = line[:-1]\n    s += s[::-1]\n    print(s)", "for _ in range(int(input())):\n    s = input()\n    st = s[::-1]\n    print(s + st)", "def solution():\n    s = input()\n    return s + s[::-1]\nfor t in range(int(input())):\n    print(solution())", "t = int(input())\nfor i in range(t):\n    val = input()\n    val += val[::-1]\n    print(val)", "for _ in range(int(input())):\n    s = input()\n    rs = s[::-1]\n    print(s + rs)", "n = int(input())\nfor k in range(n):\n    s = str(input())\n    print(s + s[::-1])", "t = int(input())\nfor i in range(t):\n    s = input()\n    st = s + s[::-1]\n    print(st)", "t = int(input())\nfor i in range(t):\n    s = input()\n    print(s + s[::-1])", "t = int(input())\nfor i in range(t):\n    s = input()\n    print(s + s[::-1])", "def check_palindrome(s1: str) -> str:\n    s2 = s1[::-1]\n    s1 = s1 + s2\n    return s1\n\ndef main():\n    t = int(input())\n    while t:\n        s1 = input()\n        s2 = check_palindrome(s1)\n        print(s2)\n        t = t - 1\nmain()", "def reverse(string):\n    string = ''.join(reversed(string))\n    return string\nt = int(input())\nfor test in range(t):\n    S = input().strip()\n    newS = reverse(S)\n    finalstring = ''.join([S, newS])\n    print(finalstring)", "n = int(input())\nfor i in range(n):\n    s = input()\n    ns = s[::-1]\n    print(s + ns)", "n = int(input())\nfor _ in range(n):\n    s = input()\n    print(s + s[::-1])", "import sys\n\ndef solve():\n    input = sys.stdin.readline\n    s = input().strip()\n    ans = s\n    for c in s[::-1]:\n        ans += c\n    print(ans)\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "n = int(input())\nlis = []\nfor i in range(n):\n    lis.append(input())\nlis2 = []\nfor i in range(n):\n    lis[i] = lis[i] + lis[i][::-1]\nfor i in range(n):\n    print(lis[i])", "for i in range(int(input())):\n    s = input()\n    x = s + s[::-1]\n    print(x)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    print(s + s[::-1])", "t = int(input())\nfor i in range(t):\n    s = input()\n    print(s + s[::-1])", "def get_string():\n    string = input()\n    print(string + string[::-1])\n\ndef main():\n    x = int(input())\n    for i in range(x):\n        get_string()\nmain()", "for i in range(int(input())):\n    s = input()\n    s += s[::-1]\n    print(s)", "t = int(input())\nfor i in range(0, t):\n    s = input()\n    print(s + s[::-1])", "for _ in range(int(input())):\n    s = input()\n    print(s + s[::-1])", "t = int(input())\nfor _ in range(t):\n    s = input()\n    print(s + s[::-1])", "for _ in range(int(input())):\n    s = input()\n    print(s + s[::-1])", "t = int(input())\nfor i in range(t):\n    s = input()\n    print(s + s[::-1])", "for t in range(int(input())):\n    a = input()\n    b = a + a[::-1]\n    print(b)", "iter = int(input())\nfor i in range(iter):\n    s = input()\n    s = s + s[::-1]\n    print(s)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    res = s + s[::-1]\n    print(res)", "t = int(input())\nfor i in range(t):\n    s = input()\n    t = s[::-1]\n    print(s + t)", "tc = input()\nfor i in range(int(tc)):\n    s = input()\n    s1 = s[::-1]\n    ans = s + s1\n    print(ans)", "t = int(input())\nd = []\nwhile t > 0:\n    Ex = input()\n    d.append(Ex)\n    t -= 1\nfor i in d:\n    a = i\n    A = i\n    c = A[::-1]\n    print(a + c)", "a = int(input())\nfor i in range(a):\n    l = input()\n    s = l[::-1]\n    s = l + s\n    print(s)", "a = int(input())\nfor x in range(a):\n    k = input()\n    m = k[::-1]\n    m = k + m\n    print(m)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    s = input()\n    ans = s + s[::-1]\n    print(ans)", "def solve():\n    s = str(input())\n    ans = s + s[::-1]\n    print(ans)\nfor i in range(int(input())):\n    solve()", "for t in range(int(input())):\n    a = input()\n    print(a + a[::-1])", "T = int(input())\nfor _ in range(T):\n    s = input()\n    print(s + s[::-1])", "T = int(input())\nfor _ in range(T):\n    s = input()\n    print(s, s[::-1], sep='')", "n = int(input())\nfor _ in range(n):\n    s = input().strip()\n    print(s + s[::-1])", "for _ in range(int(input())):\n    s = input()\n    print(s + s[::-1])", "for i in range(int(input())):\n    a = input()\n    print(a + a[::-1])", "def exe():\n    return s + s[::-1]\nfor _ in range(int(input())):\n    s = input()\n    print(exe())", "def solve():\n    s = input()\n    print(s + s[::-1])\nt = int(input())\nfor _ in range(t):\n    solve()", "t = int(input())\nresults = []\nfor i in range(t):\n    s = input().strip()\n    results.append(s + s[::-1])\nfor k in results:\n    print(k)"]