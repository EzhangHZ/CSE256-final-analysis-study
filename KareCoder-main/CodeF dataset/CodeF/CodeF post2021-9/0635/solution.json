["from math import *\nfrom collections import *\nfrom functools import *\nfrom bisect import *\nfrom itertools import *\nfrom heapq import *\nimport sys\ninf = float('inf')\nninf = -float('inf')\nip = sys.stdin.readline\nalphal = 'abcdefghijklmnopqrstuvwxyz'\nalphau = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nmod = 10 ** 9 + 7\n\ndef ipl():\n    return list(map(int, ip().split()))\n\ndef ipn():\n    return int(ip())\n\ndef ipf():\n    return float(ip())\n\ndef solve():\n    n = ipn()\n    a = [ipl() for _ in range(n)]\n    b = set([tuple(ipl()) for _ in range(ipn())])\n    h = [(-sum((i[-1] for i in a)), tuple((i[0] for i in a)))]\n    s = set()\n    while h:\n        (ss, tu) = heappop(h)\n        if tu not in b:\n            print(*tu)\n            break\n        for i in range(n):\n            if tu[i] > 1:\n                l = list(tu)\n                l[i] -= 1\n                l = tuple(l)\n                if l not in s:\n                    s.add(l)\n                    heappush(h, (ss + a[i][tu[i]] - a[i][l[i]], l))\nt = 1\nfor _ in range(t):\n    solve()", "import sys\ninput = sys.stdin.readline\nbn = 10 ** 10\nn = int(input())\n(c, a) = ([], [])\nfor _ in range(n):\n    (*aa,) = map(int, input().split())\n    c.append(aa[0])\n    aa[0] = -bn\n    a.append(aa)\nbs = {tuple(map(int, input().split())) for _ in range(int(input()))}\nm = 0\nmb = []\nfor b in bs:\n    b = list(b)\n    s = sum((a[i][b[i]] for i in range(n)))\n    for i in range(n):\n        s -= a[i][b[i]]\n        b[i] -= 1\n        s += a[i][b[i]]\n        if tuple(b) not in bs and s > m:\n            m = s\n            mb = tuple(b)\n        s -= a[i][b[i]]\n        b[i] += 1\n        s += a[i][b[i]]\nprint(*(c if tuple(c) not in bs else mb))", "import sys\ninput = sys.stdin.readline\nbn = 10 ** 10\nn = int(input())\n(c, a) = ([], [])\nfor _ in range(n):\n    (*aa,) = map(int, input().split())\n    c.append(aa[0])\n    aa[0] = -bn\n    a.append(aa)\nbs = {tuple(map(int, input().split())) for _ in range(int(input()))}\nm = 0\nmb = []\nfor b in bs:\n    b = list(b)\n    s = sum((a[i][b[i]] for i in range(n)))\n    for i in range(n):\n        s -= a[i][b[i]]\n        b[i] -= 1\n        s += a[i][b[i]]\n        if tuple(b) not in bs and s > m:\n            m = s\n            mb = tuple(b)\n        s -= a[i][b[i]]\n        b[i] += 1\n        s += a[i][b[i]]\nprint(*(c if tuple(c) not in bs else mb))", "import math\nimport random\nimport sys\nimport heapq\n\ndef main(n, arr, invalid, m):\n    invalid = set(invalid)\n    curr = tuple([len(arr[i]) - 1 for i in range(len(arr))])\n    s = sum([arr[i][-1] for i in range(len(arr))])\n    best = [(-1 * s, curr)]\n    heapq.heapify(best)\n    (s, curr) = heapq.heappop(best)\n    seen = set()\n    while m != 0:\n        if curr not in invalid:\n            break\n        for i in range(len(curr)):\n            l = list(curr)\n            if l[i] != 0:\n                l[i] -= 1\n                t_l = tuple(l)\n                if t_l not in seen:\n                    next_val = -1 * s\n                    next_val -= arr[i][l[i] + 1]\n                    next_val += arr[i][l[i]]\n                    next_val *= -1\n                    heapq.heappush(best, (next_val, t_l))\n                    seen.add(t_l)\n        (s, curr) = heapq.heappop(best)\n        m -= 1\n    curr = [curr[i] + 1 for i in range(len(curr))]\n    print(*curr)\n    return\nn = int(input())\narr = []\nfor i in range(n):\n    temp = list(map(int, input().split()))\n    temp.pop(0)\n    arr.append(temp)\nm = int(input())\narr2 = []\nfor i in range(m):\n    temp = list(map(int, input().split()))\n    temp = [temp[i] - 1 for i in range(len(temp))]\n    temp = tuple(temp)\n    arr2.append(temp)\nmain(n, arr, arr2, m)", "from heapq import heappop, heappush\nimport sys\ninput = sys.stdin.readline\nn = int(input())\na = [list(map(int, input().split()))[1:] for _ in range(n)]\nbanned = {tuple(map(int, input().split())) for _ in range(int(input()))}\nafegits = set()\npendents = [(-sum((s[-1] for s in a)), tuple((len(s) for s in a)))]\nwhile pendents:\n    (value, tp) = heappop(pendents)\n    if tp not in banned:\n        print(*tp)\n        break\n    for i in range(n):\n        if tp[i] > 1:\n            l = list(tp)\n            l[i] -= 1\n            nou_tp = tuple(l)\n            if nou_tp not in afegits:\n                afegits.add(nou_tp)\n                nou_val = value - a[i][l[i] - 1] + a[i][l[i]]\n                heappush(pendents, (nou_val, nou_tp))", "from heapq import heappop, heappush\nimport sys\ninput = sys.stdin.readline\nn = int(input())\na = [list(map(int, input().split()))[1:] for _ in range(n)]\nbanned = {tuple(map(int, input().split())) for _ in range(int(input()))}\nafegits = set()\npendents = [(-sum((s[-1] for s in a)), tuple((len(s) for s in a)))]\nwhile pendents:\n    (value, tp) = heappop(pendents)\n    if tp not in banned:\n        print(*tp)\n        break\n    for i in range(n):\n        if tp[i] > 1:\n            l = list(tp)\n            l[i] -= 1\n            nou_tp = tuple(l)\n            if nou_tp not in afegits:\n                afegits.add(nou_tp)\n                nou_val = value - a[i][l[i] - 1] + a[i][l[i]]\n                heappush(pendents, (nou_val, nou_tp))", "bn = 10 ** 10\nn = int(input())\n(c, a) = ([], [])\nfor _ in range(n):\n    aa = list(map(int, input().split()))\n    c.append(aa[0])\n    aa[0] = -bn\n    a.append(aa)\nbs = {tuple(map(int, input().split())) for _ in range(int(input()))}\nm = 0\nmb = []\nfor b in bs:\n    b = list(b)\n    s = sum((a[i][b[i]] for i in range(n)))\n    for i in range(n):\n        s -= a[i][b[i]]\n        b[i] -= 1\n        s += a[i][b[i]]\n        if tuple(b) not in bs and s > m:\n            m = s\n            mb = tuple(b)\n        s -= a[i][b[i]]\n        b[i] += 1\n        s += a[i][b[i]]\nprint(*(c if tuple(c) not in bs else mb))", "N = int(input())\nstart = []\ncur = 0\narr = []\nfor _ in range(N):\n    sub = [int(x) for x in input().split(' ')[1:]]\n    cur += sub[-1]\n    start.append(len(sub) - 1)\n    arr.append(sub)\nban = set([])\nM = int(input())\nfor _ in range(M):\n    sub = tuple([int(x) - 1 for x in input().split(' ')])\n    ban.add(sub)\nimport heapq as hq\nstart = tuple(start)\nqueue = [(-cur, start)]\nvisited = set([start])\nwhile queue:\n    (q, lis) = hq.heappop(queue)\n    q = -q\n    if lis not in ban:\n        print(' '.join([str(pick + 1) for pick in lis]))\n        break\n    for i in range(N):\n        index = lis[i]\n        if index > 0:\n            state = list(lis)\n            state[i] = index - 1\n            state = tuple(state)\n            if state not in visited:\n                cs = q - arr[i][index] + arr[i][index - 1]\n                hq.heappush(queue, (-cs, state))\n                visited.add(state)", "bn = 10 ** 10\nn = int(input())\n(c, a) = ([], [])\nfor _ in range(n):\n    aa = list(map(int, input().split()))\n    c.append(aa[0])\n    aa[0] = -bn\n    a.append(aa)\nbs = {tuple(map(int, input().split())) for _ in range(int(input()))}\nm = 0\nmb = []\nfor b in bs:\n    b = list(b)\n    s = sum((a[i][b[i]] for i in range(n)))\n    for i in range(n):\n        s -= a[i][b[i]]\n        b[i] -= 1\n        s += a[i][b[i]]\n        if tuple(b) not in bs and s > m:\n            m = s\n            mb = tuple(b)\n        s -= a[i][b[i]]\n        b[i] += 1\n        s += a[i][b[i]]\nprint(*(c if tuple(c) not in bs else mb))", "bn = 10 ** 10\nn = int(input())\n(c, a) = ([], [])\nfor _ in range(n):\n    aa = list(map(int, input().split()))\n    c.append(aa[0])\n    aa[0] = -bn\n    a.append(aa)\nbs = {tuple(map(int, input().split())) for _ in range(int(input()))}\nm = 0\nmb = []\nfor b in bs:\n    b = list(b)\n    s = sum((a[i][b[i]] for i in range(n)))\n    for i in range(n):\n        s -= a[i][b[i]]\n        b[i] -= 1\n        s += a[i][b[i]]\n        if tuple(b) not in bs and s > m:\n            m = s\n            mb = tuple(b)\n        s -= a[i][b[i]]\n        b[i] += 1\n        s += a[i][b[i]]\nprint(*(c if tuple(c) not in bs else mb))", "bn = 10 ** 10\nn = int(input())\n(c, a) = ([], [])\nfor _ in range(n):\n    aa = list(map(int, input().split()))\n    c.append(aa[0])\n    aa[0] = -bn\n    a.append(aa)\nbs = {tuple(map(int, input().split())) for _ in range(int(input()))}\nm = 0\nmb = []\nfor b in bs:\n    b = list(b)\n    s = sum((a[i][b[i]] for i in range(n)))\n    for i in range(n):\n        s -= a[i][b[i]]\n        b[i] -= 1\n        s += a[i][b[i]]\n        if tuple(b) not in bs and s > m:\n            m = s\n            mb = tuple(b)\n        s -= a[i][b[i]]\n        b[i] += 1\n        s += a[i][b[i]]\nprint(*(c if tuple(c) not in bs else mb))", "bn = 10 ** 10\nn = int(input())\n(c, a) = ([], [])\nfor _ in range(n):\n    aa = list(map(int, input().split()))\n    c.append(aa[0])\n    aa[0] = -bn\n    a.append(aa)\nbs = {tuple(map(int, input().split())) for _ in range(int(input()))}\nm = 0\nmb = []\nfor b in bs:\n    b = list(b)\n    s = sum((a[i][b[i]] for i in range(n)))\n    for i in range(n):\n        s -= a[i][b[i]]\n        b[i] -= 1\n        s += a[i][b[i]]\n        if tuple(b) not in bs and s > m:\n            m = s\n            mb = tuple(b)\n        s -= a[i][b[i]]\n        b[i] += 1\n        s += a[i][b[i]]\nprint(*(c if tuple(c) not in bs else mb))", "bn = 10 ** 10\nn = int(input())\n(c, a) = ([], [])\nfor _ in range(n):\n    aa = list(map(int, input().split()))\n    c.append(aa[0])\n    aa[0] = -bn\n    a.append(aa)\nbs = {tuple(map(int, input().split())) for _ in range(int(input()))}\nm = 0\nmb = []\nfor b in bs:\n    b = list(b)\n    s = sum((a[i][b[i]] for i in range(n)))\n    for i in range(n):\n        s -= a[i][b[i]]\n        b[i] -= 1\n        s += a[i][b[i]]\n        if tuple(b) not in bs and s > m:\n            m = s\n            mb = tuple(b)\n        s -= a[i][b[i]]\n        b[i] += 1\n        s += a[i][b[i]]\nprint(*(c if tuple(c) not in bs else mb))", "bn = 10 ** 10\nn = int(input())\n(c, a) = ([], [])\nfor _ in range(n):\n    aa = list(map(int, input().split()))\n    c.append(aa[0])\n    aa[0] = -bn\n    a.append(aa)\nbs = {tuple(map(int, input().split())) for _ in range(int(input()))}\nm = 0\nmb = []\nfor b in bs:\n    b = list(b)\n    s = sum((a[i][b[i]] for i in range(n)))\n    for i in range(n):\n        s -= a[i][b[i]]\n        b[i] -= 1\n        s += a[i][b[i]]\n        if tuple(b) not in bs and s > m:\n            m = s\n            mb = tuple(b)\n        s -= a[i][b[i]]\n        b[i] += 1\n        s += a[i][b[i]]\nprint(*(c if tuple(c) not in bs else mb))"]