["for _ in range(int(input())):\n    n = int(input())\n    k = [None] * n\n    for (i, x) in enumerate(map(int, input().split())):\n        k[x - 1] = i\n    count = 0\n    (i, j, d) = (0, n - 1, k[0])\n    while d != 0:\n        while k[j] > d:\n            j -= 1\n        d = k[j]\n        count += 1\n        if d == 0:\n            break\n        while k[i] > d:\n            i += 1\n        d = k[i]\n        count += 1\n    (i, j, d) = (0, n - 1, k[0])\n    while d != n - 1:\n        while k[j] < d:\n            j -= 1\n        d = k[j]\n        count += 1\n        if d == n - 1:\n            break\n        while k[i] < d:\n            i += 1\n        d = k[i]\n        count += 1\n    print(count)", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    n = int(inp())\n    a = list(map(int, inp().split()))\n    pos = [None] * (n + 1)\n    for i in range(n):\n        pos[a[i]] = i\n    st1 = [(-1, n)]\n    st2 = [(n + 1, n)]\n    next_below = [None] * n\n    next_above = [None] * n\n    for i in range(n - 1, -1, -1):\n        v = a[i]\n        while st1[-1][0] > v:\n            st1.pop()\n        next_below[i] = st1[-1][1]\n        st1.append((v, i))\n        while st2[-1][0] < v:\n            st2.pop()\n        next_above[i] = st2[-1][1]\n        st2.append((v, i))\n    i = 0\n    ans = 0\n    while i + 1 < n:\n        v = a[i]\n        if v < a[i + 1]:\n            next = next_below[i]\n            j = next_above[i]\n            while next_above[j] < next:\n                j = next_above[j]\n        else:\n            next = next_above[i]\n            j = next_below[i]\n            while next_below[j] < next:\n                j = next_below[j]\n        i = j\n        ans += 1\n    print(ans)\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    (*a,) = map(int, input().split())\n    if n == 1:\n        print(0)\n        continue\n    fmin = []\n    fmax = []\n    cmin = n\n    imin = 1\n    cmax = 1\n    imax = 1\n    for i in range(n):\n        v = a[i]\n        if v <= cmin:\n            cmin = v\n            imin = i\n        if v >= cmax:\n            cmax = v\n            imax = i\n        fmin += [imin]\n        fmax += [imax]\n    bmin = []\n    bmax = []\n    cmin = n\n    imin = 1\n    cmax = 1\n    imax = 1\n    for i in range(n - 1, -1, -1):\n        v = a[i]\n        if v <= cmin:\n            cmin = v\n            imin = i\n        if v >= cmax:\n            cmax = v\n            imax = i\n        bmin += [imin]\n        bmax += [imax]\n    idx = fmax[n - 1]\n    bmin = bmin[::-1]\n    bmax = bmax[::-1]\n    tlist = ((fmin, fmax), (bmin, bmax))\n    res = 0\n    ismax = 0\n    isback = 0\n    idx1 = idx\n    while idx1 != 0:\n        res += 1\n        idx1 = tlist[isback][ismax][idx1]\n        ismax ^= 1\n    ismax = 0\n    isback = 1\n    idx1 = idx\n    while idx1 != n - 1:\n        res += 1\n        idx1 = tlist[isback][ismax][idx1]\n        ismax ^= 1\n    print(res)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    (*a,) = map(int, input().split())\n    if n == 1:\n        print(0)\n        continue\n    fmin = []\n    fmax = []\n    cmin = n\n    imin = 1\n    cmax = 1\n    imax = 1\n    for i in range(n):\n        v = a[i]\n        if v <= cmin:\n            cmin = v\n            imin = i\n        if v >= cmax:\n            cmax = v\n            imax = i\n        fmin += [imin]\n        fmax += [imax]\n    bmin = []\n    bmax = []\n    cmin = n\n    imin = 1\n    cmax = 1\n    imax = 1\n    for i in range(n - 1, -1, -1):\n        v = a[i]\n        if v <= cmin:\n            cmin = v\n            imin = i\n        if v >= cmax:\n            cmax = v\n            imax = i\n        bmin += [imin]\n        bmax += [imax]\n    idx = fmax[n - 1]\n    bmin = bmin[::-1]\n    bmax = bmax[::-1]\n    tlist = ((fmin, fmax), (bmin, bmax))\n    res = 0\n    ismax = 0\n    isback = 0\n    idx1 = idx\n    while idx1 != 0:\n        res += 1\n        idx1 = tlist[isback][ismax][idx1]\n        ismax ^= 1\n    ismax = 0\n    isback = 1\n    idx1 = idx\n    while idx1 != n - 1:\n        res += 1\n        idx1 = tlist[isback][ismax][idx1]\n        ismax ^= 1\n    print(res)", "def solve(a, start, small):\n    n = len(a)\n    count = 0\n    while start != n - 1:\n        count += 1\n        if small:\n            start = max(range(start, n), key=a.__getitem__)\n            small = False\n        else:\n            start = min(range(start, n), key=a.__getitem__)\n            small = True\n    return count\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n        continue\n    k = [None] * n\n    for (i, x) in enumerate(a):\n        k[x - 1] = i\n    count = 0\n    i = 0\n    j = n - 1\n    d = k[0]\n    while True:\n        while k[j] > d:\n            j -= 1\n        d = k[j]\n        count += 1\n        if i == j:\n            break\n        while k[i] > d:\n            i += 1\n        d = k[i]\n        count += 1\n        if i == j:\n            break\n    i = 0\n    j = n - 1\n    d = k[0]\n    while True:\n        while k[j] < d:\n            j -= 1\n        d = k[j]\n        count += 1\n        if i == j:\n            break\n        while k[i] < d:\n            i += 1\n        d = k[i]\n        count += 1\n        if i == j:\n            break\n    print(count - 2)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    (*a,) = map(int, input().split())\n    if n == 1:\n        print(0)\n        continue\n    fmin = []\n    fmax = []\n    cmin = n\n    imin = 1\n    cmax = 1\n    imax = 1\n    for i in range(n):\n        v = a[i]\n        if v <= cmin:\n            cmin = v\n            imin = i\n        if v >= cmax:\n            cmax = v\n            imax = i\n        fmin += [imin]\n        fmax += [imax]\n    bmin = []\n    bmax = []\n    cmin = n\n    imin = 1\n    cmax = 1\n    imax = 1\n    for i in range(n - 1, -1, -1):\n        v = a[i]\n        if v <= cmin:\n            cmin = v\n            imin = i\n        if v >= cmax:\n            cmax = v\n            imax = i\n        bmin += [imin]\n        bmax += [imax]\n    idx = fmax[n - 1]\n    bmin = bmin[::-1]\n    bmax = bmax[::-1]\n    tlist = ((fmin, fmax), (bmin, bmax))\n    res = 0\n    ismax = 0\n    isback = 0\n    idx1 = idx\n    while idx1 != 0:\n        res += 1\n        idx1 = tlist[isback][ismax][idx1]\n        ismax ^= 1\n    ismax = 0\n    isback = 1\n    idx1 = idx\n    while idx1 != n - 1:\n        res += 1\n        idx1 = tlist[isback][ismax][idx1]\n        ismax ^= 1\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = [0] + a\n    ans = 0\n    pos = [0] * (n + 1)\n    pmx = [0] * (n + 1)\n    pmn = [10 ** 9] * (n + 1)\n    smx = [0] * (n + 1)\n    smn = [10 ** 9] * (n + 1)\n    for i in range(1, 1 + n):\n        pmn[i] = min(pmn[i - 1], a[i])\n        pmx[i] = max(pmx[i - 1], a[i])\n        pos[a[i]] = i\n    smn[-1] = a[-1]\n    smx[-1] = a[-1]\n    for i in range(n - 1, 0, -1):\n        smn[i] = min(smn[i + 1], a[i])\n        smx[i] = max(smx[i + 1], a[i])\n    i = pos[1]\n    lst = 0\n    while i != 1:\n        if lst == 0:\n            x = pmx[i - 1]\n            i = pos[x]\n            lst = 1\n        else:\n            x = pmn[i - 1]\n            i = pos[x]\n            lst = 0\n        ans += 1\n    i = pos[1]\n    lst = 0\n    while i != n:\n        if lst == 0:\n            x = smx[i + 1]\n            i = pos[x]\n            lst = 1\n        else:\n            x = smn[i + 1]\n            i = pos[x]\n            lst = 0\n        ans += 1\n    print(ans)"]