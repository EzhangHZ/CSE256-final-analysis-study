["import sys\ninput = sys.stdin.readline\nDEBUG = False\n\ndef Solve():\n    n = int(input())\n    S = input().strip()\n    if n <= 1:\n        return S[0] * 2\n    if n >= 2:\n        if S[0] == S[1]:\n            return S[0] + S[1]\n    for i in range(1, n):\n        if S[i] <= S[i - 1]:\n            continue\n        else:\n            return S[:i] + S[i - 1::-1]\n    return S + S[::-1]\nfor _ in range(int(input())):\n    print(Solve())", "for s in [*open(0)][2::2]:\n    a = (*map(ord, s[:-1]), 123)\n    i = 1\n    while (i > 1) + a[i - 1] > a[i]:\n        i += 1\n    s = s[:i]\n    print(s + s[::-1])", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_list_string():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\n\ndef get_print_int(x):\n    sys.stdout.write(str(x) + '\\n')\n\ndef get_print(x):\n    sys.stdout.write(x + '\\n')\n\ndef get_print_int_same(x):\n    sys.stdout.write(str(x) + ' ')\n\ndef get_print_same(x):\n    sys.stdout.write(x + ' ')\nfrom sys import maxsize\n\ndef solve():\n    for _ in range(get_int()):\n        n = get_int()\n        s = get_string()\n        ind = 0\n        ans = ''\n        for i in range(n - 1):\n            if s[i] >= s[i + 1]:\n                ind = i + 1\n                ans += s[i]\n            else:\n                break\n        ans += s[ind]\n        if n == 1:\n            get_print(ans + ans[::-1])\n        elif s[0] != s[1]:\n            get_print(ans + ans[::-1])\n        else:\n            get_print(s[0] + s[1])\nsolve()", "for s in [*open(0)][2::2]:\n    t = chr(ord(s[0]) - 1) + s[1:-1] + '~'\n    i = 1\n    while t[i - 1] >= t[i]:\n        i += 1\n    s = s[:i]\n    print(s + s[::-1])", "for s in [*open(0)][2::2]:\n    a = (*map(ord, s[:-1]), 123)\n    i = 1\n    while (i > 1) + a[i - 1] > a[i]:\n        i += 1\n    s = s[:i]\n    print(s + s[::-1])", "for s in [*open(0)][2::2]:\n    t = chr(ord(s[0]) - 1) + s[1:-1] + '~'\n    i = 1\n    while t[i - 1] >= t[i]:\n        i += 1\n    s = s[:i]\n    print(s + s[::-1])", "for s in [*open(0)][2::2]:\n    a = (*map(ord, s[:-1]), 123)\n    i = 1\n    while (i > 1) + a[i - 1] > a[i]:\n        i += 1\n    s = s[:i]\n    print(s + s[::-1])", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()[:-1]\n    if n == 1:\n        print(s * 2)\n    elif s[0] == s[1]:\n        print(s[0] * 2)\n    else:\n        for i in range(n - 1):\n            if s[i + 1] > s[i]:\n                print(s[:i + 1] + s[:i + 1][::-1])\n                break\n        else:\n            print(s + s[::-1])", "import sys\ninput = sys.stdin.readline\nread_int = lambda : int(input())\n\ndef main():\n    for _ in range(read_int()):\n        (n, s) = (read_int(), input())\n        first = s[0] * 2\n        second = '{'\n        for i in range(n):\n            if s[i] <= second[-1]:\n                second += s[i]\n            else:\n                break\n        second = second[1:]\n        second += second[::-1]\n        print(first if first < second else second)\nmain()", "for s in [*open(0)][2::2]:\n    a = (*map(ord, s[:-1]), 123)\n    i = 1\n    while (i > 1) + a[i - 1] > a[i]:\n        i += 1\n    s = s[:i]\n    print(s + s[::-1])", "import sys\n\ndef N():\n    return int(sys.stdin.readline())\n\ndef S():\n    return sys.stdin.readline().rstrip()\n\ndef L():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef M():\n    return map(int, sys.stdin.readline().split())\nfor _ in range(N()):\n    n = N()\n    s = S()\n    if n == 1 or s[0] <= s[1]:\n        print(s[0] + s[0])\n        continue\n    k = s[0]\n    for i in range(1, n):\n        if k[-1] >= s[i]:\n            k += s[i]\n        else:\n            break\n    print(k + k[::-1])", "for s in [*open(0)][2::2]:\n    t = chr(ord(s[0]) - 1) + s[1:-1] + '~'\n    i = 1\n    while t[i - 1] >= t[i]:\n        i += 1\n    s = s[:i]\n    print(s + s[::-1])", "for s in [*open(0)][2::2]:\n    a = (*map(ord, s[:-1]), 123)\n    i = 1\n    while a[i - 1] >= a[i] + (i < 2):\n        i += 1\n    s = s[:i]\n    print(s + s[::-1])", "for s in [*open(0)][2::2]:\n    a = (*map(ord, s[:-1]), 123)\n    i = 1\n    while a[i - 1] > a[i] - (i > 1):\n        i += 1\n    s = s[:i]\n    print(s + s[::-1])", "for s in [*open(0)][2::2]:\n    a = (*map(ord, s[:-1]), 123)\n    i = 1\n    while (i > 1) + a[i - 1] > a[i]:\n        i += 1\n    s = s[:i]\n    print(s + s[::-1])", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline().strip()\n    if n == 1:\n        print(s + s)\n        continue\n    if s[0] == s[1]:\n        print(s[:2])\n        continue\n    index = len(s) - 1\n    for i in range(1, n):\n        if ord(s[i - 1]) < ord(s[i]):\n            index = i - 1\n            break\n    print(s[:index + 1] + s[index::-1])", "for s in [*open(0)][2::2]:\n    a = (*map(ord, s[:-1]), 123)\n    i = 1\n    while (i > 1) + a[i - 1] > a[i]:\n        i += 1\n    s = s[:i]\n    print(s + s[::-1])", "for s in [*open(0)][2::2]:\n    a = (*map(ord, s[:-1]), 123)\n    i = 1\n    while (i > 1) + a[i - 1] > a[i]:\n        i += 1\n    s = s[:i]\n    print(s + s[::-1])", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    s = input().strip()\n    if n == 1 or s[0] <= s[1]:\n        print(s[0] + s[0])\n        continue\n    ans = s[0]\n    for i in range(1, n):\n        if s[i] <= ans[-1]:\n            ans += s[i]\n        else:\n            break\n    print(ans + ans[::-1])", "for s in [*open(0)][2::2]:\n    t = chr(ord(s[0]) - 1) + s[1:-1] + '~'\n    i = 1\n    while t[i - 1] >= t[i]:\n        i += 1\n    s = s[:i]\n    print(s + s[::-1])", "import sys\ninput = sys.stdin.readline\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    s = input().rstrip()\n    ans = s[0]\n    for i in range(1, n):\n        if s[i] > s[i - 1]:\n            break\n        ans += s[i]\n    if len(ans) == 1:\n        print(ans * 2)\n    elif ans[0] == ans[1]:\n        print(s[0] * 2)\n    else:\n        print(ans + ans[::-1])", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    n = int(inp())\n    a = []\n    p = 'z'\n    for i in inp().strip():\n        if i <= p:\n            a.append(i)\n        else:\n            break\n        p = i\n    a = a + a[::-1]\n    r = ''.join(a)\n    print(min(r, a[0] + a[0]))\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "import sys, bisect, math\nfrom collections import deque, Counter\ninput = lambda : sys.stdin.readline().strip()\nceil = lambda x: math.ceil(x)\nmod = 10 ** 9 + 7\n\ndef solve():\n    n = int(input())\n    s = input()\n    smallest = 0\n    for i in range(1, n):\n        if s[i - 1] > s[i]:\n            smallest = i\n        elif s[i - 1] < s[i]:\n            break\n        elif i == 1:\n            break\n        else:\n            smallest = i\n    return s[:smallest + 1] + s[:smallest + 1][::-1]\nt = 1\nt = int(input())\nfor _ in range(t):\n    print(solve())", "def mirror(s):\n    if len(s) == 1:\n        return s + s\n    if s[0] == s[1]:\n        return s[:2]\n    i = 0\n    length = len(s)\n    while s[i] >= s[i + 1]:\n        i += 1\n        if i + 1 > length - 1:\n            break\n    st = s[:i + 1]\n    rst = st[::-1]\n    return st + rst\nt = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    s = input()\n    ans.append(mirror(s))\nfor i in ans:\n    print(i)", "def f(n, s):\n    l = str(s[0])\n    c = 0\n    for i in range(1, n):\n        if s[i] < s[i - 1]:\n            l = l + str(s[i])\n            c = 1\n        elif s[i] > s[i - 1]:\n            break\n        elif c == 1:\n            l = l + str(s[i])\n        else:\n            break\n    k = ''.join(reversed(l))\n    l = l + k\n    return l\nx = int(input())\nm = []\nfor i in range(x):\n    z = int(input())\n    y = input()\n    m.append((z, y))\nfor j in range(x):\n    print(f(m[j][0], m[j][1]))", "for s in [*open(0)][2::2]:\n    a = (*map(ord, s[:-1]), 123)\n    i = 1\n    while (i > 1) + a[i - 1] > a[i]:\n        i += 1\n    s = s[:i]\n    print(s + s[::-1])", "import collections\n\ndef mir_str(n, s):\n    i = 1\n    while i < len(s):\n        if s[i] > s[i - 1]:\n            break\n        elif s[i] == s[i - 1]:\n            if i == 1:\n                break\n        i = i + 1\n    return s[:i] + s[:i][::-1]\nt = int(input())\nln = []\nls = []\nfor x in range(t):\n    n = int(input())\n    s = str(input())\n    ln.append(x)\n    ls.append(s)\nla = []\nfor i in range(len(ln)):\n    n = ln[i]\n    s = ls[i]\n    ans = mir_str(n, s)\n    la.append(ans)\nfor a in la:\n    print(a)", "from collections import Counter\nfrom math import ceil, floor, log, gcd\nimport bisect as bs\nimport sys\ninput = sys.stdin.readline\ninp_lis = lambda : list(map(int, input().split()))\ninp_multi = lambda : map(int, input().split())\ninp_int = lambda : int(input().strip())\nfor _ in range(int(input().strip())):\n    n = inp_int()\n    s = input().strip()\n    if n == 1 or s[0] == s[1]:\n        ans = s[0] + s[0]\n        print(ans)\n        continue\n    ans = s[0]\n    for i in range(1, n):\n        if s[i] <= s[i - 1]:\n            ans += s[i]\n        else:\n            break\n    ans += ans[::-1]\n    print(ans)", "for s in [*open(0)][2::2]:\n    a = (*map(ord, s[:-1]), 123)\n    i = 1\n    while (i > 1) + a[i - 1] > a[i]:\n        i += 1\n    s = s[:i]\n    print(s + s[::-1])", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    s = input().strip()\n    go = False\n    i = 1\n    for i in range(1, n):\n        if s[i] < s[i - 1]:\n            go = True\n            i += 1\n        elif s[i] == s[i - 1] and go:\n            i += 1\n        else:\n            break\n    tg = s[:i]\n    print(tg + tg[::-1])", "import math, sys, collections\ninput = sys.stdin.readline\nistr = lambda : input().strip()\ninum = lambda : int(input().strip())\nimap = lambda : map(int, input().strip().split())\nilist = lambda : list(map(int, input().strip().split()))\ntry:\n    tcs = inum()\n    for tc in range(tcs):\n        n = inum()\n        w = istr()\n        ans = w[0]\n        prv = w[0]\n        flg = False\n        for i in range(1, n):\n            if w[i] < prv:\n                flg = True\n                ans += w[i]\n                prv = w[i]\n            elif flg:\n                if w[i] == prv:\n                    ans += w[i]\n                elif w[i] > prv:\n                    break\n            else:\n                break\n        print(ans + ans[::-1])\nexcept Exception as e:\n    pass", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nfor _ in range(inp()):\n    n = inp()\n    l = insr()\n    ans = l[0]\n    temp = 1\n    for i in range(1, n):\n        if i == 1 and l[i - 1] == l[i]:\n            break\n        elif l[i - 1] >= l[i]:\n            ans += l[i]\n            temp += 1\n        else:\n            break\n    print(ans + ans[::-1])", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nfor _ in range(inp()):\n    n = inp()\n    l = insr()\n    ans = l[0]\n    temp = 1\n    for i in range(1, n):\n        if i == 1 and l[i - 1] == l[i]:\n            break\n        elif l[i - 1] >= l[i]:\n            ans += l[i]\n            temp += 1\n        else:\n            break\n    print(ans + ans[::-1])", "from collections import Counter\nimport sys\ninput = sys.stdin.readline\nnum_test_cases = int(input())\nfor test_case_ittr in range(num_test_cases):\n    n = int(input())\n    string = input().strip()\n    if n > 1 and string[0] == string[1]:\n        print(string[0] * 2)\n        continue\n    i_last = n - 1\n    prev = chr(ord('z') + 1)\n    for (i, letter) in enumerate(string):\n        if letter > prev:\n            i_last = i - 1 if i > 0 else 0\n            break\n        prev = letter\n    first_half = string[:i_last + 1]\n    if first_half[0] == first_half[-1]:\n        first_half = first_half[0]\n    print(first_half + first_half[::-1])", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    s = input()\n    i = 0\n    while i < n - 1 and s[i] >= s[i + 1]:\n        if s[i] == s[i + 1] and i == 0:\n            break\n        i += 1\n    ans = s[:i + 1]\n    print(ans + ans[::-1])", "t = int(input())\ninputlist = []\nfor i in range(t):\n    l = int(input())\n    arr = input()\n    inputlist.append(arr)\nfor q in inputlist:\n    s = ''\n    for j in range(len(q)):\n        s += q[j]\n        if j < len(q) - 1:\n            if q[j] < q[j + 1]:\n                break\n            if q[j] == q[j + 1] and q[j] == q[0]:\n                break\n    print(s + s[::-1])", "for _ in range(int(input())):\n    n = int(input())\n    s = input().strip()\n    if n == 1:\n        print(s * 2)\n        continue\n    if s[0] == s[1]:\n        print(s[:2])\n        continue\n    for i in range(n - 1):\n        if s[i] < s[i + 1]:\n            break\n    else:\n        print(s + s[::-1])\n        continue\n    print(s[:i + 1] + s[i::-1])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    string = input()\n    ans_ind = 0\n    if n == 1:\n        print(string + string)\n    else:\n        for i in range(1, n):\n            if string[i - 1] > string[i] or (i != 1 and string[i - 1] == string[i]):\n                ans_ind = i + 1\n                continue\n            ans_ind = i\n            break\n        ans = string[:ans_ind] + string[:ans_ind][::-1]\n        print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    if n == 1:\n        i = 0\n    else:\n        for i in range(n - 1):\n            if s[i] < s[i + 1] or (s[i] <= s[i + 1] and s[0] <= s[i + 1]):\n                break\n        else:\n            i += 1\n    print(s[:i + 1] + s[:i + 1][::-1])", "def solver():\n    n = int(input())\n    for _ in range(n):\n        a = int(input())\n        string = input()\n        if a == 1:\n            print(string + string)\n            continue\n        if string[0] == string[1]:\n            print(string[0] + string[0])\n        else:\n            for ind in range(a - 1):\n                if string[ind] < string[ind + 1]:\n                    printer = string[:ind + 1]\n                    printer1 = printer[::-1]\n                    print(printer + printer1)\n                    break\n            else:\n                print(string + string[::-1])\nsolver()", "from audioop import reverse\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    j = 0\n    while j < n - 1 and s[j] >= s[j + 1]:\n        if s[j] == s[j + 1] and s[j] == s[0]:\n            break\n        j += 1\n    out = s[:j + 1] + s[j::-1]\n    print(out)", "def solve():\n    n = int(input())\n    S = input()\n    if n > 1 and S[0] == S[1]:\n        return S[:2]\n    for i in range(len(S)):\n        if i + 1 == len(S) or S[i + 1] > S[i]:\n            return S[:i + 1] + S[:i + 1][::-1]\nt = int(input())\nfor _ in range(t):\n    print(solve())", "def wow():\n    length = int(input())\n    string = input()\n    if length > 1 and string[0] == string[1]:\n        return string[:2]\n    for s in range(length):\n        if s + 1 == length or string[s + 1] > string[s]:\n            s1 = string[:s + 1]\n            return s1 + s1[::-1]\nt = int(input())\nfor i in range(t):\n    print(wow())", "for i in range(int(input())):\n    input()\n    (s, n) = (input(), 0)\n    for j in range(1, len(s)):\n        if s[j - 1] >= s[j] and s[j] != s[0]:\n            n = j\n        else:\n            break\n    print(s[:n + 1] + s[n::-1])", "for i in range(int(input())):\n    input()\n    (s, n) = (input(), 0)\n    for j in range(1, len(s)):\n        if s[j - 1] >= s[j] and s[j] != s[0]:\n            n = j\n        else:\n            break\n    print(s[:n + 1] + s[n::-1])", "t = int(input())\n\ndef solve():\n    n = int(input())\n    s = input()\n    ans = 0\n    if n > 1 and s[0] == s[1]:\n        print(s[0] + s[1])\n        return\n    while ans < n - 1:\n        if ord(s[ans]) >= ord(s[ans + 1]):\n            ans += 1\n        else:\n            break\n    print(s[0:ans + 1] + s[0:ans + 1][::-1])\nfor i in range(t):\n    solve()", "import sys\nfor _ in range(int(input())):\n    a = int(input())\n    b = sys.stdin.readline().strip()\n    x = b[0]\n    for i in range(1, len(b)):\n        if b[i] > b[i - 1] or x == b[i]:\n            break\n        else:\n            x += b[i]\n    print(x + x[::-1])", "t = int(input())\nfor i in range(t):\n    m = int(input())\n    p = input()\n    i = 1\n    while i < m and (p[i - 1] > p[i] or (i > 1 and p[i] == p[i - 1])):\n        i += 1\n    print(p[:i] + p[i - 1::-1])", "def solve():\n    n = int(input())\n    a = input()\n    test = 0\n    for x in range(1, n):\n        if test == 0 and ord(a[x]) >= ord(a[test]):\n            break\n        elif ord(a[x]) <= ord(a[test]):\n            test = x\n        else:\n            break\n    a = a[:test + 1]\n    a += a[::-1]\n    print(a)\nt = int(input())\nfor x124 in range(t):\n    solve()", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    word = input()\n    result = word[0]\n    for j in range(1, m):\n        if word[j] < result[-1]:\n            result += word[j]\n        elif word[j] == result[-1]:\n            if j == 1:\n                break\n            else:\n                result += word[j]\n        else:\n            break\n    print(result + result[::-1])", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    l = input()\n    least = l[0] + l[0]\n    if len(l) == 1:\n        print(least)\n    elif l[0] == l[1]:\n        print(least)\n    else:\n        it = 1\n        current = l[0]\n        next = l[1]\n        while current >= next:\n            it += 1\n            if it == len(l):\n                break\n            current = next\n            next = l[it]\n        print(l[:it] + l[:it][::-1])", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    if len(s) > 1 and s[0] == s[1]:\n        print(s[0] * 2)\n    else:\n        for i in range(n - 1):\n            if s[i] < s[i + 1]:\n                print(s[:i + 1] + s[i::-1])\n                break\n        else:\n            print(s + s[::-1])", "for _ in range(int(input())):\n    n = int(input())\n    s = input().strip()\n    if n == 1:\n        print(s * 2)\n        continue\n    if s[0] == s[1]:\n        print(s[:2])\n        continue\n    for i in range(n - 1):\n        if s[i] < s[i + 1]:\n            print(s[:i + 1] + s[i::-1])\n            break\n    else:\n        print(s + s[::-1])", "def solve():\n    n = int(input())\n    s = input()\n    if n == 1:\n        return s + s\n    i = 1\n    while s[i] <= s[i - 1] and s[i] != s[0]:\n        i += 1\n        if i == n:\n            break\n    return s[:i] + s[:i][::-1]\nfor _ in range(int(input())):\n    print(solve())", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    if len(s) > 1 and s[0] == s[1]:\n        print(2 * s[0])\n    else:\n        for j in range(n - 1):\n            if s[j] < s[j + 1]:\n                print(s[:j + 1] + s[j::-1])\n                break\n        else:\n            print(s + s[::-1])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    if n != 1 and s[0] == s[1]:\n        print(s[0] + s[0])\n    else:\n        prev = ord(s[0])\n        ans = s[0]\n        for i in s[1:]:\n            if ord(i) > prev:\n                break\n            else:\n                prev = ord(i)\n                ans += i\n        ans = ans + ans[::-1]\n        print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    c = 0\n    t = ''\n    t = t + s[0]\n    for i in range(1, len(s)):\n        if s[i] < s[i - 1] or (i > 1 and s[i] == s[i - 1]):\n            t = t + s[i]\n        else:\n            break\n    for i in range(len(t) - 1, -1, -1):\n        t = t + t[i]\n    print(t)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    i = 1\n    p = ord(s[0])\n    if n > 1 and s[1] < s[0]:\n        while i < n:\n            if ord(s[i]) <= p:\n                p = ord(s[i])\n                i += 1\n            else:\n                break\n    temp = s[:i]\n    print(temp + temp[::-1])", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    k = 1\n    if len(s) > 1 and s[0] != s[1]:\n        current = s[0]\n        for c in s[1:]:\n            if c <= current:\n                k += 1\n                current = c\n            else:\n                break\n    print(s[:k] + s[:k][::-1])", "for _ in range(int(input())):\n    n = int(input())\n    s = str(input()).strip()\n    k = 1\n    if len(s) > 1 and s[0] != s[1]:\n        current = s[0]\n        for c in s[1:]:\n            if c <= current:\n                k += 1\n                current = c\n            else:\n                break\n    print(s[:k] + s[:k][::-1])", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    for i in range(1, len(s)):\n        if s[i] > s[i - 1] or (i == 1 and s[i] == s[i - 1]):\n            k = i - 1\n            break\n    else:\n        k = len(s) - 1\n    print(s[:k + 1] + s[:k + 1][::-1])", "for _ in range(int(input())):\n    n = int(input())\n    s = str(input())\n    ind = 0\n    ans = ''\n    for i in range(n - 1):\n        if s[i] >= s[i + 1]:\n            ind = i + 1\n            ans += s[i]\n        else:\n            break\n    ans += s[ind]\n    if n == 1:\n        print(ans + ans[::-1])\n    elif s[0] != s[1]:\n        print(ans + ans[::-1])\n    else:\n        print(s[0] + s[1])", "from audioop import reverse\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    j = 0\n    while j < n - 1 and s[j] >= s[j + 1]:\n        if s[j] == s[j + 1] and j == 0:\n            break\n        j += 1\n    out = s[:j + 1] + s[j::-1]\n    print(out)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    s = str(input())\n    k = 0\n    while k < n - 1 and (s[k] > s[k + 1] or (s[k] == s[k + 1] and s[k] < s[0])):\n        k += 1\n    print(s[:k + 1] + s[:k + 1][::-1])\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    s = input()\n    pre = s[0] + s[0]\n    new = ''\n    i = 0\n    if n >= 2 and pre == (s[:2] + s[1::-1])[:2]:\n        print(pre)\n        t -= 1\n        continue\n    while i < n - 1 and s[i] >= s[i + 1]:\n        i += 1\n    print(s[:i + 1] + s[i::-1])\n    t -= 1", "a = 'abcdefghijklmnopqrstuvwxyz'\ng = {}\nfor i in range(26):\n    g[a[i]] = i\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    i = 1\n    if n >= 2:\n        if s[0] == s[1]:\n            print(s[0], s[1], sep='')\n            continue\n    p = g[s[0]]\n    while i < n:\n        if g[s[i]] > p:\n            break\n        else:\n            p = g[s[i]]\n            i += 1\n    print(s[:i] + s[:i][::-1], sep='')", "for _ in range(int(input())):\n    length = int(input())\n    arr = input()\n    if length == 1:\n        print(arr * 2)\n    else:\n        flag = True\n        for i in range(1, length):\n            if arr[i] == arr[i - 1] and i == 1:\n                print(arr[:2])\n                flag = False\n                break\n            elif arr[i] <= arr[i - 1]:\n                continue\n            else:\n                break\n        if flag:\n            if i < length - 1:\n                temp = arr[:i]\n                print(temp + temp[::-1])\n            elif i == length - 1 and arr[i] <= arr[i - 1]:\n                temp = arr[:i + 1]\n                print(temp + temp[::-1])\n            else:\n                temp = arr[:i]\n                print(temp + temp[::-1])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    flag = 0\n    rep = 0\n    if n > 1 and s[0] == s[1]:\n        print(s[:2])\n    else:\n        for j in range(1, n):\n            if s[j - 1] < s[j]:\n                print(s[:j] + s[j - 1::-1])\n                flag = 1\n                break\n        if flag == 0:\n            print(s[:] + s[::-1])", "def solve():\n    n = int(input())\n    s = input()\n    k = 1\n    while k < n and (s[k] < s[k - 1] or (k > 1 and s[k] == s[k - 1])):\n        k += 1\n    ans = s[0:k]\n    print(ans + ans[::-1])\nfor _ in range(int(input())):\n    solve()", "p = int(input())\nfor i in range(p):\n    m = int(input())\n    s = input()\n    i = 1\n    while i < m and (s[i - 1] > s[i] or (i > 1 and s[i] == s[i - 1])):\n        i += 1\n    print(s[:i] + s[i - 1::-1])", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = s[0]\n    for j in range(1, n):\n        if s[j] > ans[-1]:\n            break\n        ans += s[j]\n    if len(ans) > 1 and ans[0] == ans[1]:\n        print(ans[0] + ans[0])\n        continue\n    print(ans + ans[::-1])", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = s[0]\n    for j in range(1, n):\n        if s[j] > ans[-1]:\n            break\n        ans += s[j]\n    if len(ans) > 1 and ans[0] == ans[1]:\n        print(ans[0] + ans[0])\n        continue\n    print(ans + ans[::-1])", "from sys import stdin\ninput = stdin.readline\nrn = lambda : int(input())\nrns = lambda : map(int, input().split())\nrl = lambda : list(map(int, input().split()))\nrs = lambda : input().strip()\nYN = lambda x: print('YES') if x else print('NO')\nceil_div = lambda a, b: -(-a // b)\nmod = 10 ** 9 + 7\nfor _ in range(rn()):\n    n = rn()\n    s = rs()\n    ans = s[0]\n    for i in range(1, n):\n        if s[i] < s[i - 1] or (s[i] == s[i - 1] and s[i] != ans[0]):\n            ans += s[i]\n        else:\n            break\n    print(ans + ans[::-1])", "from math import *\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom collections import Counter as ctr\nfrom collections import deque as dq\nfrom array import array\nfrom re import search\ninp = lambda : int(input())\nli = lambda : list(map(int, input().split()))\nls = lambda : list(input())\narr = lambda a: array('i', a)\nbi = lambda n: bin(n).replace('0b', '')\nyn = lambda f: print('NYOE S'[f::2])\nsbstr = lambda a, s: search('.*'.join(a), s)\n\ndef solve():\n    for _ in range(inp()):\n        n = inp()\n        s = input()\n        if n > 1 and s[0] == s[1]:\n            print(s[:2])\n            continue\n        i = 0\n        while i < n - 1:\n            if s[i + 1] <= s[i]:\n                i += 1\n            else:\n                break\n        print(s[:i + 1] + s[:i + 1][::-1])\nsolve()", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    i = 1\n    p = ord(s[0])\n    if n > 1 and s[1] < s[0]:\n        while i < n:\n            if ord(s[i]) <= p:\n                p = ord(s[i])\n                i += 1\n            else:\n                break\n    temp = s[:i]\n    print(temp + temp[::-1])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    if n == 1:\n        print(s + s)\n    elif s[0] == s[1]:\n        print(s[0] + s[0])\n    else:\n        for i in range(1, n):\n            if ord(s[i - 1]) >= ord(s[i]):\n                i = i + 1\n            else:\n                break\n        s = s[:i]\n        print(s + s[::-1])", "t = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = input()\n    ans = a[0]\n    for r in range(1, n):\n        if ord(a[r - 1]) > ord(a[r]):\n            ans += a[r]\n        elif ord(a[r - 1]) == ord(a[r]) and r != 1:\n            ans += a[r]\n        else:\n            break\n    ans += ans[::-1]\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    ans = str(s[0])\n    beg = s[0]\n    if n >= 2 and s[0] == s[1]:\n        print(s[0] + s[0])\n    else:\n        for i in range(1, n):\n            if s[i] <= beg:\n                ans += s[i]\n                beg = s[i]\n            else:\n                break\n        ans2 = ans[::-1]\n        print(ans + ans2)", "from sys import stdin, stdout\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        a = input()\n        if n == 1 or a[0] == a[1]:\n            print(a[0] * 2)\n            continue\n        p = ord(a[0])\n        s = 1\n        for i in a[1:]:\n            if ord(i) <= p:\n                p = ord(i)\n                s += 1\n            else:\n                break\n        print(a[:s] + a[s - 1::-1])\nmain()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    ans = [s[0]]\n    si = s[0]\n    for sj in s[1:]:\n        if si > sj or (si == sj and sj != s[0]):\n            si = sj\n            ans.append(si)\n        else:\n            break\n    print(''.join(ans + ans[::-1]))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = s[0]\n    arr = [ord(s[0])]\n    i = 1\n    if n >= 2 and s[1] != s[0]:\n        while i < n:\n            if ord(s[i]) > ord(s[i - 1]):\n                break\n            ans += s[i]\n            i += 1\n    print(ans + ans[::-1])", "t = int(input())\nfor case in range(t):\n    n = int(input())\n    s = str(input())\n    k = 1\n    if len(s) > 1 and s[0] != s[1]:\n        i = 0\n        while k < len(s) and s[i + 1] <= s[i]:\n            i += 1\n            k += 1\n    ans = s[:k]\n    print(ans + ans[::-1])", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    index = 0\n    if n == 1:\n        print(s[0] * 2)\n    elif s[1] >= s[0]:\n        print(s[0] * 2)\n    else:\n        for i in range(1, n):\n            if s[i - 1] >= s[i]:\n                index = i\n            else:\n                break\n        x = s[:index + 1]\n        print(x + x[::-1])", "for _ in range(int(input())):\n    n = int(input())\n    s = input().strip()\n    if n == 1:\n        print(s * 2)\n        continue\n    if s[0] == s[1]:\n        print(s[:2])\n        continue\n    for i in range(n - 1):\n        if s[i] < s[i + 1]:\n            break\n    else:\n        if s.count(s[0]) != len(s):\n            print(s + s[::-1])\n            continue\n    if s[:i + 1] == s[0] * (i + 1):\n        print(s[0] + s[0])\n        continue\n    print(s[:i + 1] + s[i::-1])", "def solve1():\n    for _ in range(int(input())):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        arr.sort()\n        mx = 0\n        ans = 1\n        for i in range(1, n):\n            if arr[i] - arr[i - 1] == 1:\n                ans += 1\n            else:\n                mx = max(mx, ans)\n                ans = 1\n        mx = max(mx, ans)\n        print(n - mx)\n\ndef solve():\n    for _ in range(int(input())):\n        n = int(input())\n        s = input()\n        ans = 0\n        for i in range(1, n):\n            if i == 1 and s[i] == s[i - 1]:\n                break\n            if s[i] <= s[i - 1]:\n                ans += 1\n            else:\n                break\n        t1 = s[:ans + 1]\n        t2 = t1[::-1]\n        temp = t1 + t2\n        print(temp)\nsolve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    str1 = input()\n    i = 1\n    ans = str1[0]\n    while i < n:\n        if str1[i - 1] > str1[i]:\n            ans += str1[i]\n        elif str1[i - 1] == str1[i] and i > 1:\n            ans += str1[i]\n        else:\n            break\n        i += 1\n    temp = str1[:i]\n    ans = temp + temp[::-1]\n    print(ans)", "for t in range(int(input())):\n    n = input()\n    a = input()\n    str = a[0]\n    ch = False\n    for i in range(len(a) - 1):\n        if a[i] < a[i + 1]:\n            break\n        if a[i] == a[i + 1] and ch == False:\n            break\n        else:\n            ch = True\n            str += a[i + 1]\n    print(str + str[::-1])", "for _ in range(int(input())):\n    n = int(input())\n    ll = list(input())\n    n = len(ll)\n    i = 0\n    if n == 1:\n        print(ll[0] + ll[0])\n    elif ll[1] >= ll[0]:\n        print(ll[0] + ll[0])\n    else:\n        while i <= n - 2:\n            if ll[i] < ll[i + 1]:\n                break\n            elif ll[i + 1] < ll[i]:\n                i += 1\n            elif ll[i + 1] == ll[i]:\n                for j in range(i + 1, n):\n                    if ll[j] > ll[i]:\n                        break\n                    elif ll[j] <= ll[i]:\n                        i = j\n                        continue\n        mystr = ''.join(ll[:i + 1])\n        print(mystr + mystr[::-1])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    str = input()\n    if n == 0:\n        print('')\n        continue\n    if n == 1:\n        print(str[0] + str[0])\n        continue\n    ans = str[0]\n    cnt = 0\n    if str[0] == str[1]:\n        print(str[0] + str[0])\n        continue\n    for i in range(1, n):\n        if str[i] <= str[i - 1]:\n            ans += str[i]\n        else:\n            break\n    print(ans + ans[::-1])", "t = int(input())\nwhile t:\n    sz = int(input())\n    st = input()\n    k = 0\n    i = 0\n    if sz == 1 or st[0] == st[1]:\n        print(st[0] * 2)\n        t -= 1\n        continue\n    while st[i] > st[i + 1] or st[i] == st[i + 1]:\n        k = i + 1\n        i += 1\n        if i == sz - 1:\n            break\n    f = st[:k + 1]\n    print(f + f[::-1])\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    if a == 'ggbois':\n        print('Khairul Er Abba')\n    c = a[0]\n    if n >= 2:\n        if a[0] > a[1]:\n            temp = [a[0]]\n            for i in range(1, n):\n                if a[i] <= a[i - 1]:\n                    temp.append(a[i])\n                else:\n                    break\n            print(''.join(temp) + ''.join(temp[::-1]))\n        else:\n            print(a[0] + a[0])\n    else:\n        print(a[0] + a[0])", "import sys\nimport math\nimport bisect\nfrom sys import stdin, stdout\nfrom math import gcd, floor, sqrt, log\nfrom collections import defaultdict as dd\nfrom bisect import bisect_left as bl, bisect_right as br\nsys.setrecursionlimit(100000000)\n\ndef solve():\n    n = int(input())\n    s = input()\n    k = 0\n    cur = ''\n    if n == 1 or s[0] == s[1]:\n        return s[0] * 2\n    for i in range(n - 1):\n        cur += s[i]\n        if s[i] < s[i + 1]:\n            return cur + cur[::-1]\n    return s + s[::-1]\n\ndef main():\n    t = int(input())\n    while t:\n        print(solve())\n        t -= 1\nmain()", "T = int(input())\nfor t in range(T):\n    N = int(input())\n    S = input()\n    k = 0\n    while k < N - 1 and (S[k] > S[k + 1] or (S[k] == S[k + 1] and S[k] < S[0])):\n        k += 1\n    print(S[:k + 1] + S[:k + 1][::-1])", "def fastsolution(s):\n    ans = s[0]\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1] and i == 1:\n            break\n        if s[i] > s[i - 1]:\n            break\n        ans += s[i]\n    return ans + ans[::-1]\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ansfast = fastsolution(s)\n    print(ansfast)", "T = int(input())\nfor t in range(T):\n    N = int(input())\n    S = input()\n    k = 0\n    while k < N - 1 and (S[k] > S[k + 1] or (S[k] == S[k + 1] and S[k] < S[0])):\n        k += 1\n    print(S[:k + 1] + S[:k + 1][::-1])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    cou = 0\n    if n == 1:\n        print(s[0] + s[0])\n        continue\n    if s[0] == s[1]:\n        print(s[0] + s[1])\n        continue\n    for j in range(n - 1):\n        if s[j] >= s[j + 1]:\n            cou += 1\n        else:\n            break\n    k = cou + 1\n    print(s[:k] + s[k - 1::-1])", "import math\nfor _ in range(int(input())):\n    t = int(input())\n    s = input()\n    k = 0\n    y1 = s[0]\n    for i in range(1, t):\n        if s[i - 1] < s[i] or s[i] == s[0]:\n            break\n        else:\n            y1 += s[i]\n    print(y1 + y1[::-1])"]