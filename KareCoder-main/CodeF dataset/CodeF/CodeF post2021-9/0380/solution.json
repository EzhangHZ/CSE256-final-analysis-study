["def test(n, a, i):\n    delete = 0\n    char = a[i]\n    b = i\n    e = n - 1 - i\n    if b > e:\n        (b, e) = (e, b)\n    while b < e:\n        if a[b] == a[e]:\n            b += 1\n            e -= 1\n            continue\n        if a[b] == char:\n            b += 1\n            delete += 1\n            continue\n        if a[e] == char:\n            e -= 1\n            delete += 1\n            continue\n        else:\n            delete = -1\n            break\n    return delete\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = str(input())\n    b = 0\n    e = n - 1\n    while b < e and a[b] == a[e]:\n        b += 1\n        e -= 1\n    if b >= e:\n        print(0)\n        continue\n    chb = test(n, a, b)\n    che = test(n, a, e)\n    if chb + che == -2:\n        print(-1)\n    elif chb == -1:\n        print(che)\n    elif che == -1:\n        print(chb)\n    else:\n        print(min(chb, che))", "import collections as cc\nimport bisect as bi\nimport itertools\nimport math as mt\nimport sys\nq = lambda x: print('?', *x, flush=True)\nI = lambda : list(map(int, input().split()))\nfor tc in range(int(input())):\n    (n,) = I()\n    s = list(input().strip())\n    i = 0\n    j = 0\n\n    def ch(string, r):\n        i = 0\n        j = len(string) - 1\n        tf = 1\n        rm = 0\n        while i < j:\n            if string[i] == string[j]:\n                i += 1\n                j -= 1\n            elif string[i] == r:\n                i += 1\n                rm += 1\n            elif string[j] == r:\n                j -= 1\n                rm += 1\n            else:\n                tf = 0\n                break\n        return rm if tf else -1\n    temp = []\n    i = 0\n    j = len(s) - 1\n    tempst = ''\n    while i < j:\n        if s[i] == s[j]:\n            i += 1\n            j -= 1\n        else:\n            temp.append(s[i])\n            temp.append(s[j])\n            tempst = s[i:j + 1]\n            break\n    ans = []\n    for i in temp:\n        now = ch(tempst, i)\n        ans.append(now)\n    if ans:\n        if ans.count(-1) == 2:\n            print(-1)\n        elif ans.count(-1) == 0:\n            print(min(ans))\n        else:\n            print(max(ans))\n    else:\n        print(0)", "def readline():\n    return map(int, input().split())\n\ndef solve():\n    (n,) = readline()\n    s = input()\n    (i, j) = (0, len(s) - 1)\n    while i < j:\n        if s[i] != s[j]:\n            break\n        i += 1\n        j -= 1\n    if i >= j:\n        print(0)\n        return\n    inf = len(s)\n\n    def check(c):\n        ret = 0\n        (ii, jj) = (i, j)\n        while ii < jj:\n            if s[ii] != s[jj]:\n                if c == s[ii]:\n                    ii += 1\n                elif c == s[jj]:\n                    jj -= 1\n                else:\n                    return inf\n                ret += 1\n            else:\n                ii += 1\n                jj -= 1\n        return ret\n    ans = min(map(check, (s[i], s[j])))\n    print(ans if ans != inf else -1)\nt = int(input())\nfor __ in range(t):\n    solve()", "def ispalindrome(s, c):\n    l = 0\n    r = len(s) - 1\n    ans = 0\n    while l <= r:\n        if l == r:\n            ans += 1\n            break\n        if s[l] == s[r]:\n            ans += 2\n            l += 1\n            r -= 1\n        elif s[l] == c:\n            l += 1\n        elif s[r] == c:\n            r -= 1\n        else:\n            return 'invalid'\n    return ans\nfor i in range(int(input())):\n    n = int(input())\n    s = input()\n    unique = set(s)\n    ans = 0\n    for j in unique:\n        exp = ispalindrome(s, j)\n        if exp != 'invalid':\n            ans = max(ans, exp)\n    if ans != 0:\n        print(n - ans)\n    else:\n        print(-1)", "import sys, os.path\nif os.path.exists('inp.txt'):\n    sys.stdin = open('inp.txt', 'r')\n    sys.stdout = open('out.txt', 'w')\n\ndef solve(string, n):\n    s = set()\n    for i in string:\n        if i not in s:\n            s.add(i)\n    ans = 99999999\n    for character in s:\n        i = 0\n        j = n - 1\n        change = 0\n        while i < j:\n            if string[i] != string[j]:\n                if string[i] == character:\n                    i += 1\n                    change += 1\n                elif string[j] == character:\n                    j -= 1\n                    change += 1\n                else:\n                    change = float('inf')\n                    break\n            else:\n                i += 1\n                j -= 1\n        ans = min(ans, change)\n    if ans == 99999999:\n        return -1\n    return ans\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    string = input()\n    print(solve(string, n))", "def int_input():\n    a = int(input())\n    return a\n\ndef int_list_input():\n    a = list(map(int, input().split()))\n    return a\n\ndef solve():\n    n = int(input())\n    arr = list(input())\n    unique = set(arr)\n    ans = float('inf')\n    for word in unique:\n        i = 0\n        j = len(arr) - 1\n        t = 0\n        while i < j:\n            if arr[i] != arr[j]:\n                if arr[i] == word or arr[j] == word:\n                    if arr[i] == word:\n                        i += 1\n                        t += 1\n                    elif arr[j] == word:\n                        j -= 1\n                        t += 1\n                else:\n                    break\n            else:\n                i += 1\n                j -= 1\n        if i >= j:\n            ans = min(ans, t)\n    if ans != float('inf'):\n        print(ans)\n    else:\n        print(-1)\nfor _ in range(int(input())):\n    solve()", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    s = input().strip()\n    chars = set(list(s))\n    ans = float('inf')\n    for c in chars:\n        (f, b) = (0, n - 1)\n        pal = True\n        cnt = 0\n        while f < b:\n            if s[f] == s[b]:\n                f += 1\n                b -= 1\n            else:\n                cnt += 1\n                if s[f] == c:\n                    f += 1\n                elif s[b] == c:\n                    b -= 1\n                else:\n                    pal = False\n                    break\n        if pal:\n            ans = min(ans, cnt)\n    return ans if ans < float('inf') else -1\n    return\nfor _ in range(int(input())):\n    print(solve())", "import sys\n\ndef count(n, s, ch):\n    i = 0\n    j = n - 1\n    cnt = 0\n    while i < j:\n        if s[i] == s[j]:\n            i += 1\n            j -= 1\n        elif s[i] == ch:\n            cnt += 1\n            i += 1\n        elif s[j] == ch:\n            cnt += 1\n            j -= 1\n        else:\n            return sys.maxsize\n    return cnt\n\ndef fun(n, s):\n    import sys\n    ans = sys.maxsize\n    for ch in set(s):\n        c = count(n, s, ch)\n        ans = min(ans, c)\n    return ans if ans != sys.maxsize else -1\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    ans = fun(n, s)\n    print(ans)", "def solve(s):\n    if s == s[::-1]:\n        return 0\n    answer = -1\n    for c in 'abcdefghijklmnopqrstuvwxyz':\n        if c not in s:\n            continue\n        ss = s.replace(c, '')\n        if ss != ss[::-1]:\n            continue\n        candidate = 0\n        (start, end) = (0, len(s) - 1)\n        while start < end:\n            if s[start] == s[end]:\n                start += 1\n                end -= 1\n                continue\n            candidate += 1\n            if s[start] == c:\n                start += 1\n                continue\n            if s[end] == c:\n                end -= 1\n                continue\n        if answer >= 0:\n            answer = min(answer, candidate)\n        else:\n            answer = candidate\n    return answer\nt = int(input())\nfor _ in range(t):\n    n = input()\n    s = input()\n    print(solve(s))", "def logic(s):\n    n = len(s)\n    if n < 2:\n        return 0\n    else:\n        l = 0\n        r = n - 1\n        while s[l] == s[r] and l < r:\n            l += 1\n            r -= 1\n        s = s[l:r + 1]\n        if len(s) < 2:\n            return 0\n        res1 = fixed(s[:-1], s[-1])\n        res2 = fixed(s[1:], s[0])\n        r = 1 + min(res1, res2)\n        if r < 10 ** 5:\n            return r\n        return -1\n\ndef fixed(s, c):\n    n = len(s)\n    if n < 2:\n        return 0\n    l = 0\n    r = n - 1\n    count = 0\n    while l < r:\n        l_v = s[l]\n        r_v = s[r]\n        if l_v == r_v:\n            l += 1\n            r -= 1\n        elif l_v == c:\n            count += 1\n            l += 1\n        elif r_v == c:\n            count += 1\n            r -= 1\n        else:\n            break\n    if l < r:\n        return 10 ** 5\n    return count\nfor w in range(0, int(input())):\n    input()\n    s = input()\n    print(logic(s))", "from math import *\nfrom math import factorial as fact, comb as ncr\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom collections import Counter as ctr\nfrom collections import deque as dq\nfrom array import array\nfrom re import search\nli = lambda : list(map(int, input().split()))\narr = lambda a: array('i', a)\nbi = lambda n: bin(n).replace('0b', '')\nyn = lambda f: print('NYOE S'[f::2])\nsbstr = lambda a, s: search('.*'.join(a), s)\n\ndef solve():\n    for _ in range(int(input())):\n        n = int(input())\n        s = input()\n        c = set(s)\n        m = n\n        for ct in c:\n            temp = s.replace(ct, '')\n            if temp == temp[::-1]:\n                i = 0\n                j = n - 1\n                c = 0\n                while i < j:\n                    if s[i] != s[j]:\n                        c += 1\n                        if s[i] == ct:\n                            i += 1\n                        else:\n                            j -= 1\n                    else:\n                        i += 1\n                        j -= 1\n                m = min(m, c)\n        print(m if m != n else -1)\nsolve()", "def removechar(s, l):\n    n = len(s)\n    front = 0\n    rear = n - 1\n    rm = 0\n    while front < rear:\n        if s[front] == l and s[rear] != l:\n            rm += 1\n            front += 1\n        elif s[front] != l and s[rear] == l:\n            rm += 1\n            rear -= 1\n        elif s[front] == s[rear]:\n            front += 1\n            rear -= 1\n    return rm\n\ndef palin(s):\n    n = len(s)\n    front = 0\n    rear = n - 1\n    while front < rear:\n        if s[front] == s[rear]:\n            front += 1\n            rear -= 1\n        else:\n            return False\n    return True\n\ndef f(s):\n    letters = set()\n    for i in s:\n        letters.add(i)\n    minrm = -1\n    for l in letters:\n        ns = s.replace(l, '')\n        if palin(ns):\n            rm = removechar(s, l)\n            if rm < minrm or minrm == -1:\n                minrm = rm\n    return minrm\ntc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    s = input()\n    ans = f(s)\n    print(ans)", "def compute(s, c):\n    i = 0\n    j = len(s) - 1\n    count = 0\n    while i < j:\n        if s[i] == s[j]:\n            i += 1\n            j -= 1\n            continue\n        if s[i] == c:\n            i += 1\n            count += 1\n            continue\n        if s[j] == c:\n            j -= 1\n            count += 1\n            continue\n        return -1\n    return count\nt = int(input())\nfor _ in range(t):\n    n = input()\n    s = input()\n    i = 0\n    j = len(s) - 1\n    while i < j and s[i] == s[j]:\n        i += 1\n        j -= 1\n    if i >= j:\n        print(0)\n        continue\n    t1 = compute(s[i:j + 1], s[i])\n    t2 = compute(s[i:j + 1], s[j])\n    if t1 == -1 and t2 == -1:\n        print(-1)\n    elif t1 == -1:\n        print(t2)\n    elif t2 == -1:\n        print(t1)\n    else:\n        print(min(t1, t2))", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = input().rstrip()\n    (l, r) = (0, n - 1)\n    res = []\n    while True:\n        if l >= r:\n            res = 0\n            break\n        if a[l] != a[r]:\n            res += [l, r]\n            break\n        l += 1\n        r -= 1\n    if res == 0:\n        print(0)\n        continue\n    (l, r) = (res[0], res[1])\n    (b, c) = (a[l], a[r])\n    (resb, resc) = (0, 0)\n    flag = 0\n    ans = []\n    while True:\n        if l >= r:\n            break\n        if a[l] != a[r]:\n            if a[l] == b:\n                resb += 1\n                l += 1\n                continue\n            elif a[r] == b:\n                resb += 1\n                r -= 1\n                continue\n            else:\n                flag = 1\n                break\n        l += 1\n        r -= 1\n    if flag == 0:\n        ans.append(resb)\n    (l, r) = (res[0], res[1])\n    flag = 0\n    while True:\n        if l >= r:\n            break\n        if a[l] != a[r]:\n            if a[l] == c:\n                resc += 1\n                l += 1\n                continue\n            elif a[r] == c:\n                resc += 1\n                r -= 1\n                continue\n            else:\n                flag = 1\n                break\n        l += 1\n        r -= 1\n    if flag == 0:\n        ans.append(resc)\n    print(min(ans) if len(ans) else -1)", "import sys\ninput = sys.stdin.readline\n\ndef get_integers():\n    return map(int, input().strip().split())\nt = int(input().strip())\nfor _ in range(t):\n    n = int(input().strip())\n    s = input().strip()\n    char_set = set(s)\n    min_cnt = n\n    for char in char_set:\n        (l, r) = (0, n - 1)\n        cnt = 0\n        flag = True\n        while l < r:\n            if s[l] == s[r]:\n                l += 1\n                r -= 1\n                continue\n            if s[l] == char:\n                l += 1\n            elif s[r] == char:\n                r -= 1\n            else:\n                flag = False\n                break\n            cnt += 1\n        if flag:\n            min_cnt = min(cnt, min_cnt)\n    print(min_cnt if min_cnt != n else -1)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    if s == s[::-1]:\n        print(0)\n    else:\n        ans = 1000000000.0\n        for k in 'abcdefghijklmnopqrstuvwxyz':\n            a = 0\n            b = n - 1\n            e = 0\n            ch = 0\n            while a <= b:\n                if s[a] == s[b]:\n                    a += 1\n                    b -= 1\n                elif s[a] == k:\n                    a += 1\n                    ch += 1\n                elif s[b] == k:\n                    b -= 1\n                    ch += 1\n                else:\n                    ch = 1000000000.0\n                    break\n            ans = min(ans, ch)\n        if ans == 1000000000.0:\n            print(-1)\n        else:\n            print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    lptr = 0\n    rptr = n - 1\n    while lptr <= rptr:\n        if s[lptr] != s[rptr]:\n            x = s[lptr]\n            y = s[rptr]\n            break\n        lptr += 1\n        rptr -= 1\n    cntx = 0\n    cnty = 0\n    flag1 = False\n    flag2 = False\n    while lptr <= rptr:\n        if s[lptr] != s[rptr]:\n            if s[lptr] == x:\n                cntx += 1\n                lptr += 1\n            elif s[rptr] == x:\n                cntx += 1\n                rptr -= 1\n            else:\n                flag1 = True\n                break\n        else:\n            lptr += 1\n            rptr -= 1\n    lptr = 0\n    rptr = n - 1\n    while lptr <= rptr:\n        if s[lptr] != s[rptr]:\n            if s[lptr] == y:\n                cnty += 1\n                lptr += 1\n            elif s[rptr] == y:\n                cnty += 1\n                rptr -= 1\n            else:\n                flag2 = True\n                break\n        else:\n            lptr += 1\n            rptr -= 1\n    if flag1 and flag2:\n        print(-1)\n    elif not flag1 and (not flag2):\n        print(min(cntx, cnty))\n    elif flag1:\n        print(cnty)\n    else:\n        print(cntx)", "from string import ascii_lowercase\ncases = int(input())\nfor _ in range(cases):\n    num = int(input())\n    s = input()\n    if s == s[::-1]:\n        print(0)\n        continue\n    pal = False\n    ans = 10 ** 10\n    for char in ascii_lowercase:\n        new_s = s.replace(char, '')\n        if new_s == new_s[::-1]:\n            pal = True\n            rem_num = 0\n            left = 0\n            right = num - 1\n            while left < right:\n                if s[left] != s[right]:\n                    if s[left] == char:\n                        left += 1\n                    else:\n                        right -= 1\n                    rem_num += 1\n                else:\n                    right -= 1\n                    left += 1\n            ans = min(ans, rem_num)\n    if not pal:\n        print(-1)\n    else:\n        print(ans)", "import sys\nimport math\nfrom bisect import bisect_right as br\nfrom collections import deque\nfrom itertools import combinations as cb\n\ndef int_arr():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef str_arr():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef input():\n    return sys.stdin.readline().strip()\nfor i in range(int(input())):\n    n = int(input())\n    st = input()\n    val = set()\n    for i in st:\n        if i not in val:\n            val.add(i)\n    ans = float('inf')\n    for elm in val:\n        i = 0\n        j = n - 1\n        cnt = 0\n        flag = 1\n        while i < j:\n            if st[i] == st[j]:\n                i += 1\n                j -= 1\n                continue\n            elif st[i] == elm:\n                cnt += 1\n                i += 1\n            elif st[j] == elm:\n                cnt += 1\n                j -= 1\n            else:\n                flag = 0\n                break\n        if flag == 1:\n            ans = min(ans, cnt)\n    if ans == float('inf'):\n        print(-1)\n    else:\n        print(ans)", "import math\n\ndef remove(s, c, i, j):\n    count = 0\n    while 0 <= i < j < len(s):\n        if s[i] != s[j]:\n            if s[i] == c:\n                count += 1\n                i += 1\n            elif s[j] == c:\n                count += 1\n                j -= 1\n            else:\n                return -1\n        else:\n            i += 1\n            j -= 1\n    return count\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    for i in range(n):\n        if i >= math.floor(n / 2):\n            print(0)\n            break\n        if s[i] != s[n - i - 1]:\n            r1 = remove(s, s[i], i, n - i - 1)\n            rn = remove(s, s[n - i - 1], i, n - i - 1)\n            if r1 == -1 or rn == -1:\n                print(r1 + rn + 1)\n            else:\n                print(min(r1, rn))\n            break", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    s = input().strip('\\n')\n    li = list(set(s))\n    ans = []\n    for ele in li:\n        (i, j) = (0, n - 1)\n        (c, t) = (0, 0)\n        while i < j:\n            if s[i] == s[j]:\n                i += 1\n                j -= 1\n            elif s[i] == ele:\n                c += 1\n                i += 1\n            elif s[j] == ele:\n                c += 1\n                j -= 1\n            else:\n                t = 1\n                break\n        if t == 0:\n            ans.append(c)\n    if len(ans) == 0:\n        print(-1)\n    else:\n        print(min(ans))", "for j in range(int(input())):\n    out = -1\n    n = int(input())\n    s = input()\n    d = set(s)\n    for i in d:\n        a = 0\n        l = 0\n        r = n - 1\n        while l < r and a != -1:\n            if s[l] == s[r]:\n                l += 1\n                r -= 1\n            elif s[l] == i:\n                l += 1\n                a += 1\n            elif s[r] == i:\n                r -= 1\n                a += 1\n            else:\n                a = -1\n        if a != -1 and (out == -1 or a < out):\n            out = a\n    print(out)", "import math\nfrom heapq import heappush, heappop, heapify\nimport random\nimport string\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right, insort\nimport sys\ninput = sys.stdin.readline\nS = lambda : input().rstrip()\nI = lambda : int(S())\nM = lambda : map(int, S().split())\nL = lambda : list(M())\nH = 1000000000 + 7\nfor _ in range(I()):\n    n = I()\n    s = S()\n    m = math.inf\n    for i in range(97, 123):\n        ch = chr(i)\n        c = f = 0\n        l = 0\n        r = n - 1\n        if s.find(ch) == -1:\n            continue\n        while l <= r:\n            if s[l] == s[r]:\n                l += 1\n                r -= 1\n            elif s[l] == ch:\n                l += 1\n                c += 1\n            elif s[r] == ch:\n                r -= 1\n                c += 1\n            else:\n                f = 1\n                break\n        if f == 0:\n            m = min(c, m)\n    if m == math.inf:\n        print(-1)\n    else:\n        print(m)", "import sys, os.path\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nfor t in range(int(input())):\n    n = int(input())\n    s = input()\n    value = 0\n    s = list(s)\n    (i, j) = (0, n - 1)\n    pos = 1\n    while pos == 1 and i <= j:\n        if s[i] == s[j]:\n            i += 1\n            j -= 1\n        else:\n            a = s[i]\n            b = s[j]\n            (c1, c2) = (0, 0)\n            (ic, jc) = (i, j)\n            (pos1, pos2) = (1, 1)\n            while ic <= jc:\n                if s[ic] == s[jc]:\n                    ic += 1\n                    jc -= 1\n                elif s[ic] == a:\n                    c1 += 1\n                    ic += 1\n                elif s[jc] == a:\n                    c1 += 1\n                    jc -= 1\n                else:\n                    pos1 = 0\n                    break\n            (ic, jc) = (i, j)\n            while ic <= jc:\n                if s[ic] == s[jc]:\n                    ic += 1\n                    jc -= 1\n                elif s[ic] == b:\n                    c2 += 1\n                    ic += 1\n                elif s[jc] == b:\n                    c2 += 1\n                    jc -= 1\n                else:\n                    pos2 = 0\n                    break\n            if pos1 == 1 and pos2 == 1:\n                value = min(c1, c2)\n            elif pos1 == 1:\n                value = c1\n            elif pos2 == 1:\n                value = c2\n            else:\n                pos = 0\n            break\n    if pos == 0:\n        print(-1)\n    else:\n        print(value)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    ans = -1\n    l = list(s)\n    ch = set(l)\n    for c in ch:\n        i = 0\n        j = n - 1\n        left = 0\n        right = 0\n        palindrome = True\n        musterase = 0\n        while i <= j:\n            if s[i] == c:\n                i += 1\n                left += 1\n                continue\n            if s[j] == c:\n                j -= 1\n                right += 1\n                continue\n            if s[i] != s[j]:\n                palindrome = False\n                break\n            musterase += abs(left - right)\n            left = 0\n            right = 0\n            i += 1\n            j -= 1\n        if not palindrome:\n            continue\n        if ans < 0:\n            ans = musterase\n        else:\n            ans = min(ans, musterase)\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    s = input()\n    s = list(s)\n    checked = ''\n    eras_table = [10000000000000]\n    erase = 0\n    for i in range(n):\n        c = s[i]\n        if c in checked:\n            continue\n        checked = checked + c\n        index_1 = 0\n        index_2 = n - 1\n        erase = 0\n        check = True\n        while index_1 < index_2:\n            if s[index_1] == s[index_2]:\n                index_1 += 1\n                index_2 -= 1\n            elif s[index_1] == c:\n                index_1 += 1\n                erase += 1\n            elif s[index_2] == c:\n                index_2 -= 1\n                erase += 1\n            else:\n                check = False\n                break\n        if check:\n            eras_table.append(erase)\n    if len(eras_table) == 1:\n        print(-1)\n    else:\n        print(min(eras_table))", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    s = input()\n    (p, q) = (0, len(s) - 1)\n    while p < q and s[p] == s[q]:\n        p += 1\n        q -= 1\n    if p >= q:\n        print(0)\n        continue\n    left_ans = 0\n    left_char = s[p]\n    pp = p\n    qq = q\n    while pp < qq:\n        if s[pp] == s[qq]:\n            pp += 1\n            qq -= 1\n        elif s[pp] == left_char:\n            left_ans += 1\n            pp += 1\n        elif s[qq] == left_char:\n            left_ans += 1\n            qq -= 1\n        else:\n            left_ans = 992233\n            break\n    right_ans = 0\n    right_char = s[q]\n    pp = p\n    qq = q\n    while pp < qq:\n        if s[pp] == s[qq]:\n            pp += 1\n            qq -= 1\n        elif s[pp] == right_char:\n            right_ans += 1\n            pp += 1\n        elif s[qq] == right_char:\n            right_ans += 1\n            qq -= 1\n        else:\n            right_ans = 992233\n            break\n    ans = min(left_ans, right_ans)\n    if ans == 992233:\n        print(-1)\n    else:\n        print(ans)", "import sys\ninput = lambda : sys.stdin.readline().rstrip('\\r\\n')\nimport math\ninp_vars_int = lambda : map(int, input().split())\ninp_list_int = lambda : list(map(int, input().split()))\nt = int(input())\nfor _ in range(t):\n    _ = int(input())\n    s = input().strip()\n    n = len(s)\n    pos = False\n    res = math.inf\n    for c in set(s):\n        sr = s\n        sr = sr.replace(c, '')\n        if sr == sr[::-1]:\n            cand = 0\n            (ip, ir) = (0, n - 1)\n            while ip < ir:\n                if s[ip] != s[ir]:\n                    ip += s[ip] == c\n                    ir -= s[ir] == c\n                    cand += 1\n                else:\n                    ip += 1\n                    ir -= 1\n            res = min(res, cand)\n    if res == math.inf:\n        res = -1\n    print(res)", "T = int(input())\nfor test in range(1, T + 1):\n    N = int(input())\n    S = input().strip()\n    (leftAns, rightAns) = (0, 0)\n    (leftRm, rightRm) = (None, None)\n    (left, right) = (0, N - 1)\n    while left <= right:\n        if S[left] != S[right]:\n            if leftRm == None:\n                leftRm = S[left]\n            if leftRm == S[left]:\n                leftAns += 1\n                left += 1\n            elif leftRm == S[right]:\n                leftAns += 1\n                right -= 1\n            else:\n                leftAns = N + 1\n                break\n        else:\n            left += 1\n            right -= 1\n    (left, right) = (0, N - 1)\n    while left <= right:\n        if S[left] != S[right]:\n            if rightRm == None:\n                rightRm = S[right]\n            if rightRm == S[left]:\n                rightAns += 1\n                left += 1\n            elif rightRm == S[right]:\n                rightAns += 1\n                right -= 1\n            else:\n                rightAns = N + 1\n                break\n        else:\n            left += 1\n            right -= 1\n    ans = min(leftAns, rightAns)\n    print(ans if ans <= N else -1)", "t = int(input())\nfor e in range(t):\n    n = int(input())\n    s = input()\n    if s == s[::-1]:\n        print(0)\n    else:\n        h = {}\n        for i in s:\n            h[i] = 0\n        mn = 1000000\n        for k in h:\n            s1 = ''\n            p1 = 0\n            p2 = len(s) - 1\n            c = 0\n            while p1 <= p2:\n                if s[p1] == s[p2]:\n                    p1 += 1\n                    p2 -= 1\n                elif s[p1] != k and s[p2] != k:\n                    c = 1000000\n                    break\n                elif s[p1] == k:\n                    p1 += 1\n                    c += 1\n                elif s[p2] == k:\n                    p2 -= 1\n                    c += 1\n            mn = min(mn, c)\n        if mn > 10 ** 5:\n            print(-1)\n        else:\n            print(mn)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    if s == s[::-1]:\n        print(0)\n        continue\n    abc = list(set(s))\n    sus = []\n    for i in abc:\n        news = s.replace(i, '', 10 ** 5 + 7)\n        if news == news[::-1]:\n            sus += [i]\n    if len(sus) == 0:\n        print(-1)\n        continue\n    mn = 10 ** 7\n    for i in sus:\n        l = 0\n        r = n - 1\n        ans = 0\n        while l < r:\n            if s[l] != s[r]:\n                ans += 1\n                if s[l] == i:\n                    r += 1\n                elif s[r] == i:\n                    l -= 1\n            l += 1\n            r -= 1\n        if ans < mn:\n            mn = ans\n    print(mn)", "n = int(input())\nfor i in range(n):\n    len = int(input())\n    line = input()\n    c = '0'\n    i = 0\n    j = len - 1\n    a = 0\n    f = 0\n    while i < j:\n        if line[i] != line[j]:\n            if a > 0:\n                if line[i] == c:\n                    i += 1\n                elif line[j] == c:\n                    j -= 1\n                else:\n                    f = 1\n                    break\n            else:\n                c = line[i]\n                i += 1\n            a += 1\n        else:\n            i += 1\n            j -= 1\n    c = '0'\n    i = 0\n    j = len - 1\n    b = a\n    a = 0\n    while i < j:\n        if line[i] != line[j]:\n            if a > 0:\n                if line[i] == c:\n                    i += 1\n                elif line[j] == c:\n                    j -= 1\n                else:\n                    f += 2\n                    break\n            else:\n                c = line[j]\n                j -= 1\n            a += 1\n        else:\n            i += 1\n            j -= 1\n    if f == 3:\n        print(-1)\n    elif f == 2:\n        print(b)\n    elif f == 1:\n        print(a)\n    else:\n        print(min(a, b))", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    i = 0\n    j = n - 1\n    ans = 0\n    flag = 0\n    ans1 = 0\n    while i < j:\n        if flag == 1:\n            break\n        elif s[i] != s[j]:\n            ans = 1\n            ans1 = 10000000000000\n            p = s[i]\n            q = s[j]\n            c1 = 0\n            c2 = 0\n            x = i + 1\n            y = j\n            while x < y:\n                if s[x] == s[y]:\n                    x += 1\n                    y -= 1\n                elif s[x] != s[y] and s[x] != p and (s[y] != p):\n                    c1 = -1\n                    break\n                else:\n                    ans += 1\n                    if s[x] == p:\n                        x += 1\n                    else:\n                        y -= 1\n            if c1 != -1:\n                ans1 = ans\n            x = i\n            y = j - 1\n            ans = 1\n            while x < y:\n                if s[x] == s[y]:\n                    x += 1\n                    y -= 1\n                elif s[x] != s[y] and s[x] != q and (s[y] != q):\n                    c2 = -1\n                    break\n                else:\n                    ans += 1\n                    if s[x] == q:\n                        x += 1\n                    else:\n                        y -= 1\n            if c1 == -1 and c2 == -1:\n                flag = 1\n            if c2 != -1:\n                ans1 = min(ans1, ans)\n            break\n        i += 1\n        j -= 1\n    if flag:\n        print(-1)\n    else:\n        print(ans1)", "import math\nx = int(input())\nfor i in range(x):\n    y = int(input())\n    a = input()\n    strt = 0\n    end = y - 1\n    strt1 = 0\n    end1 = y - 1\n    ans1 = 0\n    ans2 = 0\n    flag1 = True\n    flag2 = True\n    count = 0\n    count1 = 0\n    while strt < end:\n        if a[strt] != a[end] and count == 0:\n            x = a[end]\n            count = 1\n            end -= 1\n            ans1 += 1\n        elif a[strt] != a[end]:\n            if a[strt] == x:\n                strt += 1\n                ans1 += 1\n            elif a[end] == x:\n                end -= 1\n                ans1 += 1\n            else:\n                flag1 = False\n                break\n        else:\n            strt += 1\n            end -= 1\n    while strt1 < end1:\n        if a[strt1] != a[end1] and count1 == 0:\n            x = a[strt1]\n            count1 = 1\n            strt1 += 1\n            ans2 += 1\n        elif a[strt1] != a[end1]:\n            if a[strt1] == x:\n                strt1 += 1\n                ans2 += 1\n            elif a[end1] == x:\n                end1 -= 1\n                ans2 += 1\n            else:\n                flag2 = False\n                break\n        else:\n            strt1 += 1\n            end1 -= 1\n    if flag1 == False and flag2 == False:\n        print(-1)\n    elif flag1 == False and flag2 == True:\n        print(ans2)\n    elif flag1 == True and flag2 == False:\n        print(ans1)\n    else:\n        print(min(ans1, ans2))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    lletres = set(s)\n    min_cost = float('inf')\n    for c in lletres:\n        (i, j) = (0, n - 1)\n        (pal, cost) = (True, 0)\n        while pal and i < j:\n            if s[i] != c and s[j] != c:\n                pal = s[i] == s[j]\n                i += 1\n                j -= 1\n            if s[i] == c and s[j] != c:\n                i += 1\n                cost += 1\n            if s[i] != c and s[j] == c:\n                j -= 1\n                cost += 1\n            if s[i] == c and s[j] == c:\n                i += 1\n                j -= 1\n        if pal:\n            min_cost = min(min_cost, cost)\n    print(min_cost if min_cost < float('inf') else -1)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    s = s[:-1]\n    if s == s[::-1]:\n        print(0)\n        continue\n    res = float('inf')\n    for ch in set(s):\n        ss = s.replace(ch, '')\n        if ss != ss[::-1]:\n            continue\n        (i, j, erase) = (0, len(s) - 1, 0)\n        (ii, jj) = (0, len(ss) - 1)\n        while i < j and ii <= jj:\n            lch = 0\n            while s[i] != ss[ii]:\n                if s[i] == ch:\n                    lch += 1\n                i += 1\n            rch = 0\n            while s[j] != ss[jj]:\n                if s[j] == ch:\n                    rch += 1\n                j -= 1\n            erase += lch + rch - min(lch, rch) * 2\n            (i, ii) = (i + 1, ii + 1)\n            (j, jj) = (j - 1, jj - 1)\n        res = min(res, erase)\n    if res == float('inf'):\n        print(-1)\n    else:\n        print(res)", "import sys\nfrom collections import Counter\n\ndef get_ints():\n    return list(map(int, sys.stdin.readline().strip().split()))\nsys.setrecursionlimit(20000)\nT = int(input())\nfor _ in range(T):\n    n = get_ints()[0]\n    s = sys.stdin.readline()\n    count = Counter()\n    for ss in s:\n        count[ss] += 1\n    ans = -1\n    for x in count:\n        l = 0\n        r = n - 1\n        removals = 0\n        while l < r:\n            if s[l] == s[r]:\n                l += 1\n                r -= 1\n            elif s[l] == x:\n                l += 1\n                removals += 1\n            elif s[r] == x:\n                r -= 1\n                removals += 1\n            else:\n                removals = -1\n                break\n        if removals != -1:\n            if removals <= ans or ans == -1:\n                ans = removals\n    print(ans)", "t = int(input())\nimport math\nwhile t:\n    n = int(input())\n    s = input()\n    count = 0\n    count_list = []\n    char_set = set(s)\n    for char in char_set:\n        left = 0\n        right = n - 1\n        count = 0\n        while left <= right:\n            if s[left] != s[right] and char == s[left]:\n                count += 1\n                left += 1\n            elif s[left] != s[right] and char == s[right]:\n                count += 1\n                right -= 1\n            elif s[left] == s[right]:\n                left += 1\n                right -= 1\n            else:\n                count = math.inf\n                break\n        count_list.append(count)\n    min_count = min(count_list)\n    if not count_list or min_count == math.inf:\n        print(-1)\n    else:\n        print(min_count)\n    t -= 1", "def isPalindrome(s):\n    for i in range(len(s)):\n        if s[i] != s[len(s) - i - 1]:\n            return 0\n    return 1\n\ndef all(a, z):\n    for i in a:\n        if a[i] != z:\n            return 0\n    return 1\nfor s in [*open(0)][2::2]:\n    s = s[0:len(s)]\n    s = s.rstrip('\\n')\n    n = len(s)\n    a = {}\n    for i in s:\n        a[i] = 0\n    for i in a:\n        l = 0\n        r = n - 1\n        while l < r:\n            if s[l] != s[r] and s[r] == i:\n                r -= 1\n                a[i] += 1\n            elif s[l] != s[r] and s[l] == i:\n                l += 1\n                a[i] += 1\n            elif s[l] == s[r]:\n                l += 1\n                r -= 1\n            else:\n                a[i] = -1\n                break\n    if all(a, -1):\n        print(-1)\n    else:\n        min = 1000000000\n        for i in a:\n            if a[i] < min and a[i] >= 0:\n                min = a[i]\n        print(min)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ok = True\n    for i in range(n):\n        if s[i] != s[n - i - 1]:\n            ok = False\n            k = i\n            k2 = n - i - 1\n    if ok:\n        print(0)\n        continue\n    pivot1 = s[k]\n    pivot2 = s[n - k - 1]\n    st = ''\n    m1 = 10 ** 9\n    m2 = 10 ** 9\n    for i in range(n):\n        if s[i] != pivot1:\n            st += s[i]\n    if st == st[::-1]:\n        m1 = 0\n        i = 0\n        j = n - 1\n        while i < j:\n            if s[i] != s[j]:\n                if s[i] == pivot1:\n                    i += 1\n                    m1 += 1\n                else:\n                    j -= 1\n                    m1 += 1\n            else:\n                i += 1\n                j -= 1\n    st = ''\n    for i in range(n):\n        if s[i] != pivot2:\n            st += s[i]\n    if st == st[::-1]:\n        m2 = 0\n        i = 0\n        j = n - 1\n        while i < j:\n            if s[i] != s[j]:\n                if s[i] == pivot2:\n                    i += 1\n                    m2 += 1\n                else:\n                    j -= 1\n                    m2 += 1\n            else:\n                i += 1\n                j -= 1\n    if m1 == 10 ** 9 and m2 == 10 ** 9:\n        print(-1)\n        continue\n    print(min(m1, m2))", "from string import ascii_lowercase as alp\n\ndef f(s, a):\n    (l, r, ans) = (0, len(s) - 1, 0)\n    while l < r:\n        if s[l] == s[r]:\n            l += 1\n            r -= 1\n        elif s[l] == a:\n            l += 1\n            ans += 1\n        elif s[r] == a:\n            r -= 1\n            ans += 1\n        else:\n            return float('inf')\n    return ans\nfor _ in range(int(input())):\n    ly = int(input())\n    y = input()\n    a = float('inf')\n    for i in alp:\n        a = min(f(y, i), a)\n    if a == float('inf'):\n        print(-1)\n    else:\n        print(a)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    st = input()\n    strev = st[::-1]\n    ans = -1\n    if st == strev:\n        ans = 0\n    else:\n        b = set(st)\n        b1 = set()\n        for el in b:\n            st1 = st.replace(el, '')\n            strev1 = strev.replace(el, '')\n            if st1 == strev1:\n                b1.add(el)\n        mn = 100001\n        for el in b1:\n            k = 0\n            strev = st[::-1]\n            i = 0\n            j = 0\n            st2 = ''\n            while i < len(st) and j < len(strev):\n                if st[i] == strev[j]:\n                    st2 = st2 + st[i]\n                    i += 1\n                    j += 1\n                elif st[i] == el:\n                    i += 1\n                elif strev[j] == el:\n                    j += 1\n            k = n - len(st2)\n            if k < mn:\n                mn = k\n        if mn < 100001:\n            ans = mn\n    print(ans)", "import string\n\ndef read_nums():\n    return [int(x) for x in input().split()]\n\ndef erase_letter(ch, s, n):\n    res = 0\n    (i, j) = (0, n - 1)\n    while i < j:\n        if s[i] != s[j]:\n            if s[i] == ch:\n                i += 1\n                res += 1\n            elif s[j] == ch:\n                j -= 1\n                res += 1\n            else:\n                return None\n        else:\n            i += 1\n            j -= 1\n    return res\n\ndef solve():\n    (n,) = read_nums()\n    s = input()\n    candidates = [erase_letter(ch, s, n) for ch in string.ascii_lowercase]\n    if all((c is None for c in candidates)):\n        print(-1)\n        return\n    else:\n        return print(min([c for c in candidates if c is not None]))\n\ndef main():\n    (t,) = read_nums()\n    for _ in range(t):\n        solve()\nmain()", "def check(string, char):\n    i = 0\n    j = len(string) - 1\n    c = 0\n    while i < j:\n        if string[i] == string[j]:\n            i += 1\n            j -= 1\n        elif string[i] == char:\n            i += 1\n            c += 1\n        elif string[j] == char:\n            j -= 1\n            c += 1\n        else:\n            return float('inf')\n    return c\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    string = str(input())\n    mini = float('inf')\n    for ascii in range(97, 123):\n        mini = min(check(string, chr(ascii)), mini)\n    if mini != float('inf'):\n        ans = mini\n    else:\n        ans = -1\n    print(ans)", "t = int(input())\nfor test_case in range(t):\n    n = int(input())\n    s = list(input())\n    try:\n        while s[0] == s[-1]:\n            s.pop(0)\n            s.pop()\n            n -= 2\n    except:\n        print(0)\n    if s:\n        k = 0\n        j = n - 1\n        ans = [0, 0]\n        while k < j:\n            if s[k] == s[j]:\n                k += 1\n                j -= 1\n            elif s[k] == s[0]:\n                ans[1] += 1\n                k += 1\n            elif s[j] == s[0]:\n                ans[1] += 1\n                j -= 1\n            else:\n                ans.pop()\n                break\n        k = 0\n        j = n - 1\n        while k < j:\n            if s[k] == s[j]:\n                k += 1\n                j -= 1\n            elif s[k] == s[-1]:\n                ans[0] += 1\n                k += 1\n            elif s[j] == s[-1]:\n                ans[0] += 1\n                j -= 1\n            else:\n                ans.pop(0)\n                break\n        if not ans:\n            print(-1)\n        else:\n            print(min(ans))", "def judge(s, c):\n    l = 0\n    r = len(s) - 1\n    cnt = 0\n    while l < r:\n        if s[l] == s[r]:\n            r -= 1\n            l += 1\n        elif s[l] == c:\n            cnt += 1\n            l += 1\n        elif s[r] == c:\n            cnt += 1\n            r -= 1\n        else:\n            return 100000.0\n    return cnt\nfor _ in range(int(input())):\n    n = int(input())\n    tmp = input()\n    cnt = 100000.0\n    for i in range(26):\n        cnt = min(cnt, judge(tmp, chr(ord('a') + i)))\n    print(-1) if cnt == 100000.0 else print(cnt)", "def palindrome(word, string):\n    m = len(string)\n    j = m - 1\n    i = 0\n    count = 0\n    while i < j:\n        if string[i] == string[j]:\n            i += 1\n            j -= 1\n        elif string[i] == word:\n            i += 1\n            count += 1\n        elif string[j] == word:\n            j -= 1\n            count += 1\n        else:\n            return -1\n    return count\nt = int(input())\nfor case in range(t):\n    n = int(input())\n    a = input()\n    ans = float('inf')\n    for i in range(26):\n        res = palindrome(chr(97 + i), a)\n        if res != -1:\n            ans = min(ans, res)\n    if ans == float('inf'):\n        print(-1)\n    else:\n        print(ans)", "def isOno(s, a):\n    s1 = [i for i in s if i != a]\n    d = len(s1)\n    for i in range(d // 2):\n        if s1[i] != s1[d - 1 - i]:\n            return False\n    return True\n\ndef count(s, a):\n    c = 0\n    b = 0\n    e = len(s) - 1\n    while b != e and b < e:\n        if s[b] == s[e]:\n            b = b + 1\n            e = e - 1\n        else:\n            if s[b] == a:\n                b = b + 1\n            else:\n                e = e - 1\n            c = c + 1\n    return c\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    st = input()\n    checked = []\n    ono = []\n    res = []\n    for i in st:\n        if i not in checked:\n            checked.append(i)\n    for i in checked:\n        if isOno(st, i):\n            ono.append(i)\n            res.append(count(st, i))\n    if res == []:\n        print(-1)\n    else:\n        print(min(res))", "def read_line():\n    return [int(x) for x in input().split()]\n\ndef read_int():\n    return int(input())\n\ndef solve():\n    n = read_int()\n    s = input()\n    res = 1000000000.0\n    for k in range(26):\n        ch = chr(k + ord('a'))\n        (i, j, ops) = (0, n - 1, 0)\n        flag = True\n        while i < j:\n            if s[i] != s[j]:\n                if ch != s[i] and ch != s[j]:\n                    flag = False\n                    break\n                if s[i] == ch:\n                    i += 1\n                else:\n                    j -= 1\n                ops += 1\n            else:\n                i += 1\n                j -= 1\n        if flag:\n            res = min(res, ops)\n    if res == 1000000000.0:\n        print(-1)\n    else:\n        print(res)\nt = read_int()\nwhile t > 0:\n    solve()\n    t -= 1", "def judge(s, c):\n    l = 0\n    r = len(s) - 1\n    cnt = 0\n    while l < r:\n        if s[l] == s[r]:\n            r -= 1\n            l += 1\n        elif s[l] == c:\n            cnt += 1\n            l += 1\n        elif s[r] == c:\n            cnt += 1\n            r -= 1\n        else:\n            return 100000.0\n    return cnt\nfor _ in range(int(input())):\n    n = int(input())\n    tmp = input()\n    cnt = 100000.0\n    for i in range(26):\n        cnt = min(cnt, judge(tmp, chr(ord('a') + i)))\n    print(-1) if cnt == 100000.0 else print(cnt)", "def isPalindrome(string, low, high):\n    while low < high:\n        if string[low] != string[high]:\n            return False\n        low += 1\n        high -= 1\n    return True\n\ndef solve(s, l):\n    low = 0\n    high = len(s) - 1\n    res = 0\n    while low < high:\n        if l == s[high] and l == s[low]:\n            low += 1\n            high -= 1\n        elif s[high] == l:\n            high -= 1\n            res += 1\n        elif s[low] == l:\n            low += 1\n            res += 1\n        elif s[low] != s[high]:\n            return -1\n        else:\n            low += 1\n            high -= 1\n        if isPalindrome(s, low, high):\n            return res\n    return -1\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    if s == s[::-1]:\n        print(0)\n        continue\n    se = set(s)\n    ans = 10 ** 10\n    for i in se:\n        k = solve(s, i)\n        if k != -1:\n            ans = min(ans, k)\n    print(ans if ans != 10 ** 10 else -1)", "import string\n\ndef is_palindrome(s):\n    n = len(s)\n    for i in range(n // 2):\n        j = n - 1 - i\n        if s[i] != s[j]:\n            return False\n    return True\n\ndef solve_case():\n    n = int(input())\n    s = input()\n    min_r = n + 1\n    for ch_i in range(26):\n        ch = chr(ord('a') + ch_i)\n        i = 0\n        j = n - 1\n        count = 0\n        bad = False\n        while i < j:\n            if s[i] != s[j]:\n                if s[i] == ch:\n                    i += 1\n                    count += 1\n                elif s[j] == ch:\n                    j -= 1\n                    count += 1\n                else:\n                    bad = True\n                    break\n            else:\n                i += 1\n                j -= 1\n        if not bad:\n            min_r = min(min_r, count)\n    if min_r == n + 1:\n        print(-1)\n    else:\n        print(min_r)\nT = int(input())\nfor t in range(T):\n    solve_case()", "def judge(s, c):\n    l = 0\n    r = len(s) - 1\n    cnt = 0\n    while l < r:\n        if s[l] == s[r]:\n            r -= 1\n            l += 1\n        elif s[l] == c:\n            cnt += 1\n            l += 1\n        elif s[r] == c:\n            cnt += 1\n            r -= 1\n        else:\n            return 100000.0\n    return cnt\nfor _ in range(int(input())):\n    n = int(input())\n    tmp = input()\n    cnt = 100000.0\n    for i in range(26):\n        cnt = min(cnt, judge(tmp, chr(ord('a') + i)))\n    print(-1) if cnt == 100000.0 else print(cnt)", "def judge(s, c):\n    l = 0\n    r = len(s) - 1\n    cnt = 0\n    while l < r:\n        if s[l] == s[r]:\n            r -= 1\n            l += 1\n        elif s[l] == c:\n            cnt += 1\n            l += 1\n        elif s[r] == c:\n            cnt += 1\n            r -= 1\n        else:\n            return 100000.0\n    return cnt\nfor _ in range(int(input())):\n    n = int(input())\n    tmp = input()\n    cnt = 100000.0\n    for i in range(26):\n        cnt = min(cnt, judge(tmp, chr(ord('a') + i)))\n    print(-1) if cnt == 100000.0 else print(cnt)", "t = int(input())\nalpha = [chr(i) for i in range(ord('a'), ord('z') + 1)]\n\ndef is_palind(str_a, word):\n    clean = str_a.replace(word, '')\n    center_elem = len(clean) // 2\n    return clean == clean[::-1]\n\ndef find_min_words(palin, word):\n    ind_r = 0\n    ind_l = len(palin) - 1\n    count = 0\n    while ind_r < ind_l:\n        if palin[ind_r] == palin[ind_l]:\n            ind_r += 1\n            ind_l -= 1\n        else:\n            count += 1\n            if palin[ind_r] == word:\n                ind_r += 1\n            else:\n                ind_l -= 1\n    return count\nfor t_i in range(t):\n    n = int(input())\n    s = input()\n    count_word = 1000000000.0\n    for word in alpha:\n        if is_palind(s, word) == False:\n            continue\n        else:\n            count_word = min(count_word, find_min_words(s, word))\n    if count_word == 1000000000.0:\n        print(-1)\n    else:\n        print(count_word)", "import string\n\ndef scarf(s, n):\n    best = float('inf')\n    for letter in string.ascii_lowercase:\n        l = 0\n        r = n - 1\n        deleted = 0\n        while l < r:\n            if s[l] == s[r]:\n                l += 1\n                r -= 1\n                continue\n            if s[l] == letter:\n                l += 1\n                deleted += 1\n                continue\n            if s[r] == letter:\n                r -= 1\n                deleted += 1\n                continue\n            deleted = float('inf')\n            break\n        best = min(best, deleted)\n    if best == float('inf'):\n        best = -1\n    return best\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    print(scarf(s, n))", "def f(a):\n    anses = []\n    for x in range(26):\n        ans = 0\n        (l, r) = (0, len(a) - 1)\n        while r > l:\n            if s[l] != s[r]:\n                if s[l] == x:\n                    l += 1\n                    ans += 1\n                elif s[r] == x:\n                    r -= 1\n                    ans += 1\n                else:\n                    ans = -1\n                    break\n            else:\n                l += 1\n                r -= 1\n        if ans != -1:\n            anses.append(ans)\n    return -1 if len(anses) == 0 else min(anses)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = [ord(x) - ord('a') for x in input()]\n    print(f(s))", "def judge(s, c):\n    l = 0\n    r = len(s) - 1\n    cnt = 0\n    while l < r:\n        if s[l] == s[r]:\n            r -= 1\n            l += 1\n        elif s[l] == c:\n            cnt += 1\n            l += 1\n        elif s[r] == c:\n            cnt += 1\n            r -= 1\n        else:\n            return 100000.0\n    return cnt\nt = int(input())\nfor dlksajd in range(t):\n    n = int(input())\n    tmp = input()\n    cnt = 100000.0\n    for i in range(26):\n        cnt = min(cnt, judge(tmp, chr(ord('a') + i)))\n    if cnt == 100000.0:\n        print(-1)\n    else:\n        print(cnt)", "def judge(s, c):\n    l = 0\n    r = len(s) - 1\n    cnt = 0\n    while l < r:\n        if s[l] == s[r]:\n            r -= 1\n            l += 1\n        elif s[l] == c:\n            cnt += 1\n            l += 1\n        elif s[r] == c:\n            cnt += 1\n            r -= 1\n        else:\n            return 100000.0\n    return cnt\nfor _ in range(int(input())):\n    n = int(input())\n    tmp = input()\n    cnt = 100000.0\n    for i in range(26):\n        cnt = min(cnt, judge(tmp, chr(ord('a') + i)))\n    print(-1) if cnt == 100000.0 else print(cnt)", "def judge(s, c):\n    l = 0\n    r = len(s) - 1\n    cnt = 0\n    while l < r:\n        if s[l] == s[r]:\n            r -= 1\n            l += 1\n        elif s[l] == c:\n            cnt += 1\n            l += 1\n        elif s[r] == c:\n            cnt += 1\n            r -= 1\n        else:\n            return 100000.0\n    return cnt\nfor _ in range(int(input())):\n    n = int(input())\n    tmp = input()\n    cnt = 100000.0\n    for i in range(26):\n        cnt = min(cnt, judge(tmp, chr(ord('a') + i)))\n    print(-1) if cnt == 100000.0 else print(cnt)", "from typing import *\n\ndef minRemoveToMakePalindrome(n: int, s: str) -> int:\n    ref = ord('a')\n    mn = float('inf')\n    for i in range(26):\n        letter = chr(ref + i)\n        (l, r) = (0, n - 1)\n        isPalin = True\n        remove = 0\n        while l <= r:\n            (cl, cr) = (s[l], s[r])\n            if cl == cr:\n                l += 1\n                r -= 1\n                continue\n            if cl == letter:\n                l += 1\n                remove += 1\n                continue\n            if cr == letter:\n                r -= 1\n                remove += 1\n                continue\n            isPalin = False\n            break\n        if isPalin:\n            mn = min(mn, remove)\n    return -1 if mn == float('inf') else mn\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    print(minRemoveToMakePalindrome(n, s))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = n\n    for k in range(26):\n        (i, j) = (0, n - 1)\n        temp = 0\n        flag = True\n        while i < j:\n            if s[i] != s[j]:\n                if ord(s[i]) - ord('a') == k or ord(s[j]) - ord('a') == k:\n                    temp += 1\n                    if ord(s[i]) - ord('a') == k:\n                        i += 1\n                    else:\n                        j -= 1\n                else:\n                    flag = False\n                    break\n            else:\n                i += 1\n                j -= 1\n        if flag:\n            ans = min(ans, temp)\n    if ans == n:\n        print(-1)\n    else:\n        print(ans)", "for i in range(int(input())):\n    length_s = int(input())\n    s = input()\n    pal_l_list = []\n    for ch in set(s):\n        pre_s = s.replace(ch, '')\n        length = len(pre_s)\n        if pre_s[:length // 2] == pre_s[length:(length + 1) // 2 - 1:-1]:\n            counter = 0\n            pol_s = [*s]\n            i = 0\n            while i < len(pol_s) // 2:\n                if not pol_s[i] == pol_s[~i] == ch:\n                    while pol_s[i] == ch:\n                        pol_s.pop(i)\n                    while pol_s[~i] == ch:\n                        pol_s.pop(~i)\n                i += 1\n            pal_l_list.append(len(pol_s))\n    if len(pal_l_list) > 0:\n        print(length_s - max(pal_l_list))\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    alpha = input()\n    minn = 100000000\n    for i in range(97, 123):\n        (j, k, f, cnt) = (0, n - 1, 1, 0)\n        while j < k:\n            if alpha[k] == alpha[j]:\n                j += 1\n                k -= 1\n            elif alpha[k] != chr(i) and alpha[j] != chr(i):\n                f = 0\n                break\n            elif alpha[j] == chr(i):\n                j += 1\n                cnt += 1\n            elif alpha[k] == chr(i):\n                k -= 1\n                cnt += 1\n        if f:\n            minn = min(minn, cnt)\n    print(minn if minn != 100000000 else -1)", "q = int(input())\nfor i in range(0, q):\n    n = int(input())\n    s = input()\n    ans = n + 1\n    for j in range(0, 26):\n        (l, r) = (0, n - 1)\n        cnt = 0\n        while l < r:\n            if s[l] == s[r]:\n                (l, r) = (l + 1, r - 1)\n            elif s[l] == chr(97 + j):\n                (l, cnt) = (l + 1, cnt + 1)\n            elif s[r] == chr(97 + j):\n                (r, cnt) = (r - 1, cnt + 1)\n            else:\n                cnt = n + 1\n                break\n        ans = min(ans, cnt)\n    if ans == n + 1:\n        print(-1)\n    else:\n        print(ans)", "lsta = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    dic = {}\n    for j in lsta:\n        dic[j] = 0\n    mi = 1000000000.0\n    for c in lsta:\n        err = 0\n        co = 0\n        start = 0\n        end = n - 1\n        while start < end:\n            if s[start] == s[end]:\n                start += 1\n                end -= 1\n            elif s[start] == c:\n                start += 1\n                co += 1\n            elif s[end] == c:\n                end -= 1\n                co += 1\n            else:\n                err += 1\n                break\n        if err == 0:\n            mi = min(co, mi)\n    if mi == 1000000000.0:\n        print(-1)\n    else:\n        print(mi)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    minn = float('inf')\n    for char in 'abcdefghijklmnopqrstuvwxyz':\n        count = 0\n        i = 0\n        j = len(s) - 1\n        found = True\n        while i < j:\n            if s[i] == s[j]:\n                i += 1\n                j -= 1\n            elif s[i] == char:\n                count += 1\n                i += 1\n            elif s[j] == char:\n                count += 1\n                j -= 1\n            else:\n                found = False\n                break\n        if found:\n            minn = min(minn, count)\n    if minn != float('inf'):\n        print(minn)\n    else:\n        print(-1)", "import math\nt = int(input())\nwhile t:\n    n = int(input())\n    s = input()\n    ans = n + 1\n    for k in range(26):\n        l = 0\n        r = n - 1\n        c = 0\n        while l <= r:\n            if s[l] == s[r]:\n                l += 1\n                r -= 1\n            elif s[l] == chr(ord('a') + k):\n                c += 1\n                l += 1\n            elif s[r] == chr(ord('a') + k):\n                r -= 1\n                c += 1\n            else:\n                c = n + 1\n                break\n        ans = min(ans, c)\n    if ans == n + 1:\n        ans = -1\n    print(ans)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    res = n\n    for i in range(26):\n        l = 0\n        r = n - 1\n        cnt = 0\n        while l <= r:\n            if s[l] == s[r]:\n                l += 1\n                r -= 1\n            elif ord(s[l]) == ord('a') + i:\n                l += 1\n                cnt += 1\n            elif ord(s[r]) == ord('a') + i:\n                r -= 1\n                cnt += 1\n            else:\n                cnt = n\n                break\n        res = min(res, cnt)\n    print(-1 if res == n else res)", "n = int(input())\nfor i in range(n):\n    q = int(input())\n    s = input()\n    ans = q + 1\n    for j in range(0, 26):\n        (l, r) = (0, q - 1)\n        cnt = 0\n        while l < r:\n            if s[l] == s[r]:\n                (l, r) = (l + 1, r - 1)\n            elif s[l] == chr(97 + j):\n                (l, cnt) = (l + 1, cnt + 1)\n            elif s[r] == chr(97 + j):\n                (r, cnt) = (r - 1, cnt + 1)\n            else:\n                cnt = q + 1\n                break\n        ans = min(ans, cnt)\n    if ans == q + 1:\n        print(-1)\n    else:\n        print(ans)", "def is_palindrome(s):\n    for i in range(len(s) // 2):\n        if s[i] != s[-i - 1]:\n            break\n    else:\n        return True\n    return False\nfor i in range(int(input())):\n    n = int(input())\n    s = input()\n    alphabet = list(set(s))\n    flag = False\n    maximum = -1\n    for symbol in alphabet:\n        if is_palindrome(s.replace(symbol, '')):\n            flag = True\n            (index, length) = (0, n)\n            lst = list(s)\n            while index < length // 2:\n                if lst[index] != symbol != lst[-index - 1]:\n                    index += 1\n                elif lst[index] == symbol == lst[-index - 1]:\n                    index += 1\n                elif lst[index] == symbol:\n                    lst.pop(index)\n                    length -= 1\n                else:\n                    lst.pop(-index - 1)\n                    length -= 1\n            maximum = max(maximum, length)\n    if flag:\n        print(n - maximum)\n    else:\n        print(-1)", "from string import ascii_lowercase\ntc = int(input())\nfor t in range(tc):\n    n = int(input())\n    s = input()\n    ans = -1\n    for c in ascii_lowercase:\n        i = 0\n        j = n - 1\n        flag = cn = 0\n        while i < j:\n            if s[i] == s[j]:\n                i += 1\n                j -= 1\n            elif s[i] != c and s[j] != c:\n                flag = 1\n                break\n            elif s[i] == c:\n                i += 1\n                cn += 1\n            else:\n                j -= 1\n                cn += 1\n        if not flag:\n            if ans == -1:\n                ans = cn\n            else:\n                ans = min(ans, cn)\n    print(ans)", "for u in range(int(input())):\n    n = int(input())\n    s = input()\n    x = list(s)\n    ans = 10 ** 9\n    for i in range(26):\n        l = 0\n        r = n - 1\n        temp = 0\n        c = chr(i + ord('a'))\n        while l <= r:\n            if x[l] == x[r]:\n                l += 1\n                r -= 1\n            elif x[l] == c:\n                l += 1\n                temp += 1\n            elif x[r] == c:\n                r -= 1\n                temp += 1\n            else:\n                temp = 10 ** 9\n                break\n        ans = min(ans, temp)\n    if ans == 10 ** 9:\n        print(-1)\n    else:\n        print(ans)", "from string import *\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    ans = n\n    flag1 = False\n    for j in range(ord('a'), ord('z') + 1):\n        c = chr(j)\n        l = 0\n        r = n - 1\n        num = 0\n        flag2 = True\n        while l < r:\n            if s[l] != s[r]:\n                if s[l] == c:\n                    num += 1\n                    l += 1\n                elif s[r] == c:\n                    num += 1\n                    r -= 1\n                else:\n                    flag2 = False\n                    break\n            else:\n                l += 1\n                r -= 1\n        if flag2:\n            flag1 = True\n            ans = min(ans, num)\n    if not flag1:\n        ans = -1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    ans = n\n    flag1 = False\n    for j in range(ord('a'), ord('z') + 1):\n        c = chr(j)\n        l = 0\n        r = n - 1\n        num = 0\n        flag2 = True\n        while l < r:\n            if s[l] != s[r]:\n                if s[l] == c:\n                    num += 1\n                    l += 1\n                elif s[r] == c:\n                    num += 1\n                    r -= 1\n                else:\n                    flag2 = False\n                    break\n            else:\n                l += 1\n                r -= 1\n        if flag2:\n            flag1 = True\n            ans = min(ans, num)\n    if not flag1:\n        ans = -1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = str(input())\n    res = -1\n    for i in range(26):\n        x = chr(i + 97)\n        (j, k) = (0, len(s) - 1)\n        c = 0\n        while k >= j:\n            if s[j] == s[k]:\n                j += 1\n                k -= 1\n            elif s[j] == x:\n                j += 1\n                c += 1\n            elif s[k] == x:\n                k -= 1\n                c += 1\n            else:\n                break\n        if j > k and (res == -1 or res > c):\n            res = c\n    print(res)", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    s = str(input())\n    ans = n + 1\n    for i in range(0, 26):\n        l = 0\n        r = n - 1\n        cnt = 0\n        while l <= r:\n            if s[l] == s[r]:\n                l += 1\n                r -= 1\n            elif s[l] == chr(ord('a') + i):\n                cnt += 1\n                l += 1\n            elif s[r] == chr(ord('a') + i):\n                cnt += 1\n                r -= 1\n            else:\n                cnt = n + 1\n                break\n        ans = min(ans, cnt)\n    if ans == n + 1:\n        ans = -1\n    print(ans)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    ans = 10 ** 9\n    for i in range(26):\n        l = 0\n        r = n - 1\n        co = 0\n        while l <= r:\n            if s[l] == s[r]:\n                l += 1\n                r -= 1\n            elif s[l] == chr(int(ord('a')) + i):\n                l += 1\n                co += 1\n            elif s[r] == chr(int(ord('a')) + i):\n                r -= 1\n                co += 1\n            else:\n                co = 10 ** 9\n                break\n        ans = min(co, ans)\n    if ans == 10 ** 9:\n        print(-1)\n    else:\n        print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    alpha = input()\n    minn = 100000000\n    for i in range(97, 123):\n        (j, k, f, cnt) = (0, n - 1, 1, 0)\n        x = chr(i)\n        while j < k:\n            if alpha[k] == alpha[j]:\n                j += 1\n                k -= 1\n            elif alpha[k] != x and alpha[j] != x:\n                f = 0\n                break\n            elif alpha[j] == x:\n                j += 1\n                cnt += 1\n            elif alpha[k] == x:\n                k -= 1\n                cnt += 1\n        if f:\n            minn = min(minn, cnt)\n    print(minn if minn != 100000000 else -1)", "from string import ascii_lowercase\ntc = int(input())\nfor t in range(tc):\n    n = int(input())\n    s = input()\n    ans = -1\n    for c in ascii_lowercase:\n        i = 0\n        j = n - 1\n        flag = cn = 0\n        while i < j:\n            if s[i] == s[j]:\n                i += 1\n                j -= 1\n            elif s[i] != c and s[j] != c:\n                flag = 1\n                break\n            elif s[i] == c:\n                i += 1\n                cn += 1\n            else:\n                j -= 1\n                cn += 1\n        if not flag:\n            if ans == -1:\n                ans = cn\n            else:\n                ans = min(ans, cn)\n    print(ans)", "from string import ascii_lowercase\ntc = int(input())\nfor t in range(tc):\n    n = int(input())\n    s = input()\n    ans = -1\n    for c in ascii_lowercase:\n        i = 0\n        j = n - 1\n        flag = cn = 0\n        while i < j:\n            if s[i] == s[j]:\n                i += 1\n                j -= 1\n            elif s[i] != c and s[j] != c:\n                flag = 1\n                break\n            elif s[i] == c:\n                i += 1\n                cn += 1\n            else:\n                j -= 1\n                cn += 1\n        if flag == 0:\n            if ans == -1:\n                ans = cn\n            else:\n                ans = min(ans, cn)\n    print(ans)", "for test in range(int(input())):\n    n = int(input())\n    s = input()\n    dic = 'abcdefghijklmnopqrstuvwxyz'\n    ans = 2 ** 69\n    for x in dic:\n        l = 0\n        r = n - 1\n        c = 0\n        while l < r:\n            if s[l] == s[r]:\n                l += 1\n                r -= 1\n                continue\n            if s[l] == x:\n                l += 1\n                c += 1\n            elif s[r] == x:\n                r -= 1\n                c += 1\n            else:\n                c = 2 ** 69\n                break\n        ans = min(ans, c)\n    if ans == 2 ** 69:\n        print(-1)\n        continue\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    alpha = input()\n    minn = 100000000\n    for i in range(97, 123):\n        (j, k, f, cnt) = (0, n - 1, 1, 0)\n        while j < k:\n            if alpha[k] == alpha[j]:\n                j += 1\n                k -= 1\n            elif alpha[k] != chr(i) and alpha[j] != chr(i):\n                f = 0\n                break\n            elif alpha[j] == chr(i):\n                j += 1\n                cnt += 1\n            elif alpha[k] == chr(i):\n                k -= 1\n                cnt += 1\n        if f:\n            minn = min(minn, cnt)\n    print(minn if minn != 100000000 else -1)", "for tc in range(int(input())):\n    n = int(input())\n    s = input()\n    candidate = 'abcdefghijklmnopqrstuvwxyz'\n    score = 10 ** 6\n    for c in candidate:\n        isPalin = True\n        erase = 0\n        lptr = 0\n        rptr = n - 1\n        while lptr < rptr:\n            left = s[lptr]\n            right = s[rptr]\n            if left != right:\n                if left != c and right != c:\n                    isPalin = False\n                    break\n                erase += 1\n                if left == c:\n                    lptr += 1\n                else:\n                    rptr -= 1\n            else:\n                lptr += 1\n                rptr -= 1\n        if isPalin:\n            score = min(score, erase)\n    if score == 10 ** 6:\n        print(-1)\n    else:\n        print(score)", "import bisect\nimport collections\nimport copy\nimport enum\nimport functools\nimport heapq\nimport itertools\nimport math\nimport random\nimport re\nimport sys\nimport time\nimport string\nfrom typing import List\nsys.setrecursionlimit(3001)\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input().strip()\n    ans = float('inf')\n    for c in string.ascii_lowercase:\n        (st, ed) = (0, n - 1)\n        cnt = 0\n        while st < ed:\n            if s[st] == s[ed]:\n                st += 1\n                ed -= 1\n            elif s[st] == c:\n                st += 1\n                cnt += 1\n            elif s[ed] == c:\n                ed -= 1\n                cnt += 1\n            else:\n                cnt = float('inf')\n                break\n        ans = min(ans, cnt)\n    if ans == float('inf'):\n        print(-1)\n    else:\n        print(ans)", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    s = str(input())\n    ans = n + 1\n    for i in range(0, 26):\n        l = 0\n        r = n - 1\n        cnt = 0\n        while l <= r:\n            if s[l] == s[r]:\n                l += 1\n                r -= 1\n            elif s[l] == chr(ord('a') + i):\n                cnt += 1\n                l += 1\n            elif s[r] == chr(ord('a') + i):\n                cnt += 1\n                r -= 1\n            else:\n                cnt = n + 1\n                break\n        ans = min(ans, cnt)\n    if ans == n + 1:\n        ans = -1\n    print(ans)\n    t -= 1", "R = lambda : map(int, input().split())\np = print\n(t,) = R()\nwhile t:\n    t -= 1\n    (n,) = R()\n    s = input()\n    ans = 1000000000.0\n    for i in list(map(chr, range(97, 123))):\n        currans = 0\n        l = 0\n        r = n - 1\n        while l < r:\n            if s[l] == s[r]:\n                l += 1\n                r -= 1\n            elif s[l] == i:\n                currans += 1\n                l += 1\n            elif s[r] == i:\n                currans += 1\n                r -= 1\n            else:\n                currans = 1000000000.0\n                break\n        ans = min(currans, ans)\n    if ans == 1000000000.0:\n        ans = -1\n    p(ans)", "t = int(input())\nletters = [chr(ord('a') + i) for i in range(26)]\nfor _ in range(t):\n    n = int(input())\n    s = input().strip()\n    res = -1\n    for c in letters:\n        s1 = s.replace(c, '')\n        if all((s1[i] == s1[-i - 1] for i in range(len(s1) // 2))):\n            (l, r) = (0, n - 1)\n            temp = 0\n            while r > l:\n                if s[l] != c:\n                    while s[r] != s[l]:\n                        temp += 1\n                        r -= 1\n                elif s[r] != c:\n                    while s[l] != s[r]:\n                        temp += 1\n                        l += 1\n                l += 1\n                r -= 1\n            if res == -1 or res > temp:\n                res = temp\n    print(res)", "t = int(input())\nfor h in range(t):\n    n = int(input())\n    s = input()\n    s1 = s\n    d1 = 0\n    mir = n\n    D = []\n    j = 0\n    k = n - 1\n    elc = False\n    while j <= k:\n        if s[j] != s[k]:\n            D = [s[j], s[k]]\n            elc = True\n            break\n        j += 1\n        k -= 1\n    if elc:\n        for i in range(2):\n            j1 = j\n            k1 = k\n            s = s1\n            r = 0\n            while j1 <= k1:\n                if s[j1] != s[k1]:\n                    if s[j1] == D[i]:\n                        s = s[:j1] + s[j1 + 1:]\n                    elif s[k1] == D[i]:\n                        s = s[:k1] + s[k1 + 1:]\n                    else:\n                        break\n                    r += 1\n                    k1 -= 1\n                else:\n                    j1 += 1\n                    k1 -= 1\n            if s == s[::-1]:\n                if r < mir:\n                    mir = r\n            else:\n                d1 += 1\n        if d1 == 2:\n            print(-1)\n        else:\n            print(mir)\n    else:\n        print(0)"]