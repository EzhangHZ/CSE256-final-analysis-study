["import sys\nimport re\nimport math\nfrom math import log2\nfrom math import log\nfrom math import ceil\nfrom math import gcd\nfrom decimal import *\nfrom datetime import date\nfrom collections import deque\nimport random\nimport heapq\nimport itertools\nimport datetime\nconst = 1000000007\nep = 1e-08\n\ndef get():\n    return list(map(int, input().split()))\nn = int(input())\nline = input()\ncannot = {}\n(small, big) = (1, 2 ** n)\n(smallt, bigt) = (1, 1)\nfor term in line:\n    if term == '1':\n        small += smallt\n        smallt *= 2\n    else:\n        big -= bigt\n        bigt *= 2\nans = [str(i) for i in range(small, big + 1)]\nprint(' '.join(ans))", "import os\nimport math\nimport collections\nimport bisect\nimport functools\nimport itertools\nimport heapq\nimport sys\n\ndef solve(a, n):\n    (c0, c1) = (a.count(0), a.count(1))\n    m = 1 << n\n    if c0 == 0:\n        return [m]\n    if c1 == 0:\n        return [1]\n    (l, r) = (2 ** c1, 2 ** c0)\n    ans = [i for i in range(1, m + 1) if l <= i <= m - r + 1]\n    return ans\nn = int(input())\na = [int(c) for c in input()]\nres = solve(a, n)\nprint(' '.join(map(str, res)))", "k = int(input())\nmax = 2 ** k\ns = str(input())\narr = [int(x) for x in s]\nsum = 0\nfor i in arr:\n    sum += i\nstart = 2 ** sum\nend = max - 2 ** (k - sum) + 1\nm = start\nans = []\nwhile m <= end:\n    ans.append(m)\n    m += 1\nresult = ' '.join((str(item) for item in ans))\nprint(result)", "I = input\nn = int(input())\nx = I()\nprint(*range(2 ** x.count('1'), 2 ** n - 2 ** x.count('0') + 2))", "n = int(input())\ns = input().count('1')\nprint(*range(2 ** s, 2 ** n - 2 ** (n - s) + 2))", "n = int(input())\ns = input()\narr = list(range(1, 2 ** n + 1))\nl = 0\nr = len(arr) - 1\nr_change = 1\nl_change = 1\nfor i in range(len(s)):\n    if s[i] == '0':\n        r -= r_change\n        r_change *= 2\n    else:\n        l += l_change\n        l_change *= 2\nprint(*arr[l:r + 1])", "n = int(input())\ns = input()\nz = s.count('0')\no = n - z\nres = list(range(pow(2, o), pow(2, n) + 2 - pow(2, z)))\nprint(*res)", "n = int(input())\ns = input()\nm = 2 ** n\nfir = 2 ** s.count('1')\nsec = 2 ** s.count('0')\nprint(*[x for x in range(fir, m - sec + 2)])", "import sys\ninput = sys.stdin.readline\ninp = sys.stdin.readline\n\ndef input():\n    return inp().strip()\n\ndef ii():\n    return int(input())\n\ndef mi():\n    return map(int, input().split())\n\ndef li():\n    return list(map(int, input().split()))\n\ndef solve():\n    n = ii()\n    m = input()\n    arr = [i for i in range((1 << n) + 1)]\n    l = 1\n    r = 1\n    for i in m:\n        if i == '0':\n            r <<= 1\n        else:\n            l <<= 1\n    print(*arr[l:len(arr) - r + 1])\n\ndef main():\n    solve()\nmain()", "I = input\nn = int(I())\ns = I().count('1')\nprint(*range(2 ** s, 2 ** n - 2 ** (n - s) + 2))", "I = input\nn = int(I())\ns = I().count('1')\nprint(*range(2 ** s, 2 ** n - 2 ** (n - s) + 2))", "n = int(input())\ns = input().count('1')\nprint(*range(2 ** s, 2 ** n - 2 ** (n - s) + 2))", "import sys\ninput = sys.stdin.readline\n\ndef readList():\n    return list(map(int, input().split()))\n\ndef readInt():\n    return int(input())\n\ndef readInts():\n    return map(int, input().split())\n\ndef readStr():\n    return input().strip()\n\ndef solve():\n    n = readInt()\n    s = readStr()\n    cnt = 0\n    for i in range(n):\n        cnt += int(s[i])\n    ans = [i for i in range(pow(2, cnt), pow(2, n) - (pow(2, n - cnt) - 1) + 1)]\n    return ans\nprint(*solve())", "n = int(input())\nst = input()\ns = 0\nfor i in range(n):\n    if st[i] == '1':\n        s += 1\nl = 2 ** s\nr = 2 ** n - 2 ** (n - s) + 2\nout = ''\nfor i in range(l, r):\n    out += str(i) + ' '\nprint(out)", "n = int(input())\ns = input()\nimport collections\ncan = collections.deque(range(1, 2 ** n + 1))\nl = 0\nr = 0\nfor i in range(n):\n    if s[i] == '0':\n        for _ in range(2 ** r):\n            can.pop()\n        r += 1\n    else:\n        for _ in range(2 ** l):\n            can.popleft()\n        l += 1\nprint(*can)", "roll = int(input())\nbin = input()\nbin = bin[::-1]\nworking = []\nif bin[0] == '1':\n    working = [2, 2]\nelse:\n    working = [1, 1]\nfor i in range(1, len(bin)):\n    if bin[i] == '1':\n        working = [2 * working[0], 2 ** i + working[1]]\n    else:\n        working = [working[0], 2 * working[1] - 1]\nblank = ''\nfor i in range(working[0], working[1]):\n    blank += str(i) + ' '\nblank += str(working[1])\nprint(blank)", "n = int(input())\ns = list(input())\nones = 0\nzeros = 0\nfor ss in s:\n    if ss == '1':\n        ones += 1\n    else:\n        zeros += 1\nout = ''\nfor i in range(2 ** ones, 2 ** n + 2 - 2 ** zeros):\n    out += str(i) + ' '\nprint(out[:-1])", "n = int(input())\ns = input()\na = list(map(int, s))\nx = a.count(1)\ny = a.count(0)\nans = [i for i in range(2 ** x, 2 ** n - 2 ** y + 2)]\nprint(*ans)", "n = int(input())\ns = input()\ncount1 = s.count('1')\ncount0 = s.count('0')\nfor i in range(2 ** count1, 2 ** n - 2 ** count0 + 2):\n    print(i, end=' ')", "import math\nimport collections\nimport bisect\nimport heapq\nfrom collections import deque\nfrom math import sqrt, ceil, floor\n\ndef inp_arr():\n    return list(map(int, input().strip().split(' ')))\n\ndef inp_str_arr():\n    return list(input().strip().split(' '))\n\ndef inp_str():\n    return input()\n\ndef solve():\n    (n,) = inp_arr()\n    s = inp_str()\n    cnt = [0, 0]\n    for i in range(n):\n        cnt[int(s[i])] += 1\n    left = 1 + (2 ** cnt[1] - 1)\n    right = 2 ** n - (2 ** cnt[0] - 1)\n    for i in range(left, right + 1):\n        print(i, end=' ')\n    print('')\ntt = 1\nfor t in range(tt):\n    solve()", "n = int(input())\ns = input()\nm = 2 ** n\nfir = 2 ** s.count('1')\nsec = 2 ** s.count('0')\nprint(*[x for x in range(fir, m - sec + 2)])", "n = int(input())\ns = input()\none = 0\nzer = 0\nfor j in s:\n    if j == '0':\n        zer += 1\n    else:\n        one += 1\nans = []\nfor j in range(2 ** one, 2 ** n - 2 ** zer + 2):\n    ans.append(j)\nprint(*ans)", "n = int(input())\ns = input()\nz = 0\no = 0\nfor i in s:\n    if i == '1':\n        o += 1\n    else:\n        z += 1\nfor i in range(2 ** o, 2 ** n - 2 ** z + 1 + 1):\n    print(i, end=' ')", "t = int(input())\na = input()\nw = a.count('1')\ny = len(a) - w\nfor i in range(2 ** w, 2 ** t - 2 ** y + 2):\n    print(i, end=' ')", "power = 2 ** int(input())\nresult = input()\nlower = 2 ** result.count('1')\nupper = power - 2 ** result.count('0') + 1\nans = []\nfor i in range(lower, upper + 1):\n    ans.append(i)\nprint(*ans)", "import math\nt = 1\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    (l, h) = (1, 2 ** n)\n    i = 0\n    j = 0\n    for ele in s:\n        if ele == '1':\n            l += 2 ** i\n            i += 1\n        else:\n            h -= 2 ** j\n            j += 1\n    for x in range(l, h + 1):\n        print(x, end=' ')", "n = int(input())\ns = input()\nprint(*range(2 ** s.count('1'), 2 ** n - 2 ** s.count('0') + 2))", "import sys\nn = int(input())\ns = input()\n(a, b) = (0, 0)\n(x, y) = (1, 2 ** n)\nfor i in range(n):\n    if s[i] == '0':\n        y -= 2 ** b\n        b += 1\n    else:\n        x += 2 ** a\n        a += 1\nans = []\nfor j in range(x, y + 1):\n    ans.append(j)\nprint(*ans)", "n = int(input())\nstring = input()\ncount = 0\nfor i in range(n):\n    if string[i] == '1':\n        count += 1\nstart = 2 ** count\nend = 2 ** n - 2 ** (n - count) + 1\nfor i in range(start, end + 1):\n    print(i, end=' ')\nprint()", "n = int(input())\ns = input()\ninit = 2 ** s.count('1')\ntotal = 2 ** n\nfin = total - 2 ** s.count('0')\narr = []\nfor i in range(init, fin + 2):\n    arr.append(i)\nprint(*arr)", "import math\nimport collections\nfor _ in range(1):\n    n = int(input())\n    s = input()\n    i = 1\n    j = 2 ** n\n    left = 1\n    right = 1\n    for k in s:\n        if k == '1':\n            i += left\n            left *= 2\n        else:\n            j -= right\n            right *= 2\n    l = []\n    for j in range(i, j + 1):\n        l.append(j)\n    print(*l)", "n = int(input())\na = input()\nk = a.count('1')\nt = pow(2, n)\nif k == 0:\n    print(1)\nelif k == n:\n    print(t)\nelse:\n    m1 = pow(2, k)\n    min = 1\n    oraliq = 1\n    max = t\n    for x in a:\n        if x == '1':\n            min += oraliq * t // 2\n        else:\n            max -= oraliq\n            oraliq *= 2\n        t //= 2\n    for x in range(m1, max + 1):\n        print(x, end=' ')\n    print()", "n = int(input())\ns = str(input())\na1 = s.count('1')\na0 = n - a1\nb1 = pow(2, a1)\nb0 = pow(2, a0)\nc = pow(2, n) - b0 + 2\nfor i in range(b1, c):\n    print(i, end=' ')", "n = int(input())\ns = input()\nl = 0\nr = 0\nfor i in range(len(s)):\n    if s[i] == '1':\n        l = l * 2 + 1\n    else:\n        r = r * 2 + 1\nr = pow(2, n) - r\nfor i in range(l + 1, r + 1):\n    print(i, end=' ')", "n = int(input())\ns = input()\nfor i in range(pow(2, s.count('1')), pow(2, n) - pow(2, s.count('0')) + 2):\n    print(i, end=' ')\nprint()", "n = int(input())\ns = input()\nnz = 0\nfor j in range(0, n):\n    if s[j] == '0':\n        nz = nz + 1\nn1 = n - nz\nx = pow(2, n1)\ny = pow(2, n) - pow(2, nz) + 1\nfor j in range(x, y + 1):\n    print(j, end=' ')\nprint('')", "n = int(input())\ns = input()\nlo = 1\nhi = 2 ** n\ncount0 = 1\ncount1 = 1\nfor x in s:\n    if x == '0':\n        hi -= count0\n        count0 <<= 1\n    else:\n        lo += count1\n        count1 <<= 1\nfor i in range(lo, hi + 1):\n    print(i, end=' ')\nprint()", "import math\nfrom collections import Counter\n\ndef li():\n    return list(map(int, input().split()))\n\ndef nt():\n    return int(input())\n\ndef st():\n    return input()\nyes = 'YES'\nno = 'NO'\neven = 'EVEN'\nodd = 'ODD'\n\ndef prefix(L):\n    size = len(L)\n    for i in range(1, size):\n        L[i] = L[i] + L[i - 1]\n    return L\nsize = nt()\ns = input()\nz = s.count('0')\no = size - z\nl = 1 << o\nu = (1 << size) - (1 << z) + 1\nL = [i for i in range(l, u + 1)]\nprint(*L)", "n = int(input())\nstring = input()\nc0 = 0\nc1 = 0\nfor i in range(n):\n    if string[i] == '0':\n        c0 += 1\n    else:\n        c1 += 1\na = 2 ** c1 - 1\nb = 2 ** n - (2 ** c0 - 1)\nfor j in range(a + 1, b + 1):\n    print(j, end=' ')\nprint('')", "n = int(input())\ns = input()\na = s.count('1')\nb = s.count('0')\nl = []\nfor i in range(2 ** a, 2 ** n - (2 ** b - 2)):\n    print(i, end=' ')", "n = int(input())\ns = input()\nstart = 1\nend = 2 ** n\nones = s.count('1')\nzeros = s.count('0')\nstart += 2 ** ones - 1\nend -= 2 ** zeros - 1\nfor val in range(start, end + 1):\n    print(val, end=' ')\nprint()", "n = int(input())\ns = input()\none = s.count('1')\nzero = s.count('0')\nfor j in range(2 ** one, 2 ** n - 2 ** zero + 2):\n    print(j, end=' ')", "n = int(input())\ns = input()\ns0 = s.count('0')\ns1 = s.count('1')\nfor i in range(pow(2, s1), pow(2, n) - pow(2, s0) + 2):\n    print(i, end=' ')\nprint()", "n = int(input())\nL = list(input())\nc = L.count('1')\nc2 = L.count('0')\nfor j in range(2 ** c, 2 ** n - 2 ** c2 + 2):\n    print(j, end=' ')", "n = int(input())\nss = input()\nsum1 = 0\nsum0 = 0\nfor i in ss:\n    if i == '0':\n        sum0 += 1\n    if i == '1':\n        sum1 += 1\nfor i in range(2 ** sum1, 2 ** n - 2 ** sum0 + 2):\n    print(i, end=' ')", "n = int(input())\ns = input()\nlarger = 0\nsmaller = 0\nfor i in range(len(s)):\n    if s[i] == '1':\n        smaller += 1\n    else:\n        larger += 1\nfor i in range(2 ** smaller, 2 ** n - (2 ** larger - 2)):\n    print(i, end=' ')", "n = int(input())\ns = list(input())\nmn = 2 ** s.count('1')\nmx = 2 ** n - 2 ** s.count('0') + 1\nfor i in range(mn, mx + 1):\n    print(i, end=' ')", "n = int(input())\nt = 2 ** n\ns = input()\ncnt = 0\nfor i in range(len(s)):\n    cnt += int(s[i])\nif cnt == 0:\n    print(1)\nelse:\n    left = 2 ** cnt\n    ans = []\n    for i in range(1, t + 1):\n        if i < left:\n            continue\n        sm = i - left\n        bg = t - left - sm\n        rem = cnt\n        while rem > 0:\n            if bg >= sm:\n                sm = 0\n                break\n            sm -= bg\n            sm //= 2\n            rem -= 1\n        if sm == 0:\n            ans.append(str(i))\n    print(' '.join(ans))", "n = int(input())\ns = input()\nones = s.count('1')\nzeros = s.count('0')\na = 2 ** ones\nb = 2 ** n - 2 ** zeros + 1\nfor i in range(a, b + 1):\n    print(i, end=' ')", "n = int(input())\ns = input()\nk = s.count('1')\nif k == n:\n    print(pow(2, n))\n    exit(0)\nkk = s.count('0')\nbe = 1 << k\nf = [0] * 22\nf[0] = 1\nfor i in range(1, 22):\n    f[i] = f[i - 1] * 2\nfor i in range(1, n):\n    f[i] = f[i - 1] + f[i]\nen = pow(2, n) - f[kk - 1]\nfor i in range(be, en + 1):\n    print(i, end=' ')", "import math\nn = int(input())\ns = input()\na = s.count('1')\nb = s.count('0')\nm = pow(2, n)\naa = pow(2, a) - 1\nbb = pow(2, b) - 1\nfor i in range(aa + 1, m - bb + 1):\n    print(i, end=' ')", "t = int(input())\narr = input()\ni = 1\nj = 1\nr = 1\nl = 1\nfor y in range(t):\n    r *= 2\nfor x in arr:\n    if x == '1':\n        l += i\n        i *= 2\n    if x == '0':\n        r -= j\n        j *= 2\nfor x in range(l, r + 1):\n    print(x, end=' ')", "n = int(input())\ns = input()\nl = [s.count('0'), s.count('1')]\nzeros = l[0]\nones = l[1]\nstart = 2 ** ones\nending = 2 ** n - 2 ** zeros + 1\nfor i in range(start, ending + 1):\n    print(i, end=' ')", "n = int(input())\nl = 1\nr = int(2 ** n)\ns = input()\nnl = 0\nnr = 0\nfor ch in s:\n    if ch == '0':\n        r = r - int(2 ** nr)\n        nr += 1\n    else:\n        l = l + int(2 ** nl)\n        nl += 1\nfor i in range(l, r + 1):\n    if i != r:\n        print(i, end=' ')\n    else:\n        print(i)", "t = int(input())\nst = input()\nn0 = 0\nn1 = 0\nj = 0\nwhile 0 <= j < t:\n    if int(st[j]) == 0:\n        n0 = n0 + 1\n    elif st[j] == '1':\n        n1 = n1 + 1\n    j = j + 1\ny1 = pow(2, t) - pow(2, n0) + 1\nx1 = pow(2, n1)\nj = x1\nwhile x1 <= j <= y1:\n    print(j, end=' ')\n    j = j + 1\nprint('')", "n = int(input())\ns = input()\n(one, zero) = (0, 0)\nfor i in s:\n    if i == '0':\n        zero += 1\n    else:\n        one += 1\nfor i in range(2 ** one, 2 ** n - 2 ** zero + 2):\n    print(i, end=' ')\nprint()", "n = int(input())\nrates = input()\nnum_1 = 0\nnum_0 = 0\nfor i in range(n):\n    if rates[i] == '1':\n        num_1 += 1\n    else:\n        num_0 += 1\nfor i in range(2 ** num_1, 2 ** n - 2 ** num_0 + 2):\n    print(i, end=' ')", "import os, sys\nif os.getlogin() == 'Arun-Rog':\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nfrom collections import defaultdict\na = int(input())\nst = input()\nd = defaultdict(lambda : 0)\nfor x in st:\n    d[x] += 1\nk = 2 ** d['1'] - 1\nm = 2 ** d['0'] - 1\nfor i in range(k, 2 ** a - m):\n    print(i + 1, end=' ')", "from collections import Counter\nn = int(input())\nnums = list(input())\ns = Counter(nums)\nones = 2 ** s['1'] - 1\nzeros = 2 ** s['0'] - 1\nmax = 2 ** n\nfor i in range(max + 1):\n    if ones < i <= max - zeros:\n        print(i, end=' ')\n    if i >= max - zeros:\n        break", "J = input\nI = range\nG = 1\nfor K in I(G):\n    B = int(J())\n    H = J()\n    L = []\n    C = 0\n    D = 0\n    E = 1\n    F = 2 ** B\n    for A in H:\n        if A == '0':\n            F -= 2 ** D\n            D += 1\n        else:\n            E += 2 ** C\n            C += 1\n    for A in I(E, F + 1):\n        if A > 2 ** B:\n            continue\n        print(A, end=' ')", "n = int(input())\ns = input()\nans = []\nzer = s.count('0')\none = s.count('1')\nc = 2 ** one\nd = 2 ** zer - 1\nfor i in range(1, 2 ** n + 1):\n    if i >= c and i <= 2 ** n - d:\n        ans.append(i)\nfor j in ans:\n    print(j, end=' ')", "n = int(input())\ns = input()\nzs = s.count('0')\nos = s.count('1')\n[print(i, end=' ') for i in range(1, 2 ** n + 1) if 2 ** os - 1 < i <= 2 ** n - (2 ** zs - 1)]"]