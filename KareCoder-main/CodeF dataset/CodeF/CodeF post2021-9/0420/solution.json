["import sys\ninput = sys.stdin.readline\nprint = sys.stdout.write\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    inx = [0] * (n + 1)\n    for i in range(n):\n        inx[a[i]] = i + 1\n    print(' '.join((str(inx[n - i]) for i in range(n))))\n    print('\\n')", "for _ in range(int(input())):\n    n = int(input())\n    score = list(map(int, input().split(' ')))\n    mass = [0] * n\n    for i in range(n):\n        mass[score[i] - 1] = i + 2\n    for i in range(n):\n        if mass[i] > n:\n            mass[i] = 1\n    print(' '.join(map(str, mass)))", "print = __import__('sys').stdout.write\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    inx = [0] * (n + 1)\n    for i in range(n):\n        inx[a[i]] = i + 1\n    print(' '.join((str(inx[n - i]) for i in range(n))))\n    print('\\n')", "M = int(input())\nresult = []\nfor x in range(M):\n    n = int(input())\n    numbers = input().split(' ')\n    arr = []\n    for num in numbers:\n        arr.append(int(num))\n    d = dict()\n    for i in range(n):\n        d[arr[i]] = i\n    aux = []\n    for i in range(n):\n        aux.append(d[n - i] + 1)\n    result.append(aux)\nfor r in result:\n    st = [str(e) for e in r]\n    print(' '.join(st))", "def argsort(seq):\n    return sorted(range(len(seq)), key=seq.__getitem__)\nfl = 'input.txt'\nimport sys\nimport math\nflh = sys.stdin\ntest_cases = int(flh.readline())\nres = []\nfor case in range(test_cases):\n    n = int(flh.readline())\n    a = [int(x) for x in flh.readline().strip().split()]\n    d = [0]\n    for i in range(1, len(a)):\n        d.append(max(0, a[i - 1] - a[i]))\n    res = argsort(d)\n    print(' '.join(map(str, [r + 1 for r in res])))", "for s in [*open(0)][2::2]:\n    s = list(map(int, s.split()))\n    a = [1] * len(s)\n    for i in range(len(s) - 1):\n        a[s[i] - 1] = i + 2\n    print(*a)", "for s in [*open(0)][2::2]:\n    s = list(map(int, s.split()))\n    a = [1] * len(s)\n    for i in range(len(s) - 1):\n        a[s[i] - 1] = i + 2\n    print(*a)", "for s in [*open(0)][2::2]:\n    s = list(map(int, s.split()))\n    a = [1] * len(s)\n    for i in range(len(s) - 1):\n        a[s[i] - 1] = i + 2\n    print(*a)", "for s in [*open(0)][2::2]:\n    s = list(map(int, s.split()))\n    a = [1] * len(s)\n    for i in range(len(s) - 1):\n        a[s[i] - 1] = i + 2\n    print(*a)", "for s in [*open(0)][2::2]:\n    s = list(map(int, s.split()))\n    l = [1] * len(s)\n    for i in range(len(s) - 1):\n        l[s[i] - 1] = i + 2\n    print(*l)", "for s in [*open(0)][2::2]:\n    s = list(map(int, s.split()))\n    a = [1] * len(s)\n    for i in range(len(s) - 1):\n        a[s[i] - 1] = i + 2\n    print(*a)", "for s in [*open(0)][2::2]:\n    s = list(map(int, s.split()))\n    l = [1] * len(s)\n    for i in range(len(s) - 1):\n        l[s[i] - 1] = i + 2\n    print(*l)", "for s in [*open(0)][2::2]:\n    s = list(map(int, s.split()))\n    a = [1] * len(s)\n    for i in range(len(s) - 1):\n        a[s[i] - 1] = i + 2\n    print(*a)", "for s in [*open(0)][2::2]:\n    s = list(map(int, s.split()))\n    a = [1] * len(s)\n    for i in range(len(s) - 1):\n        a[s[i] - 1] = i + 2\n    print(*a)", "for s in [*open(0)][2::2]:\n    s = list(map(int, s.split()))\n    l = [1] * len(s)\n    for i in range(len(s) - 1):\n        l[s[i] - 1] = i + 2\n    print(*l)", "import sys\ninput = lambda : sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    x = int(input())\n    n = x\n    l = [0] * x\n    s = list(map(int, input().split()))\n    m = s[0]\n    for i in range(x):\n        l[n - s[i]] = i + 1\n    print(*l)", "for s in [*open(0)][2::2]:\n    s = list(map(int, s.split()))\n    a = [1] * len(s)\n    for i in range(len(s) - 1):\n        a[s[i] - 1] = i + 2\n    print(*a)", "for s in [*open(0)][2::2]:\n    s = list(map(int, s.split()))\n    a = [1] * len(s)\n    for i in range(len(s) - 1):\n        a[s[i] - 1] = i + 2\n    print(*a)", "for s in [*open(0)][2::2]:\n    s = list(map(int, s.split()))\n    a = [1] * len(s)\n    for i in range(len(s) - 1):\n        a[s[i] - 1] = i + 2\n    print(*a)", "for s in [*open(0)][2::2]:\n    s = list(map(int, s.split()))\n    a = [1] * len(s)\n    for i in range(len(s) - 1):\n        a[s[i] - 1] = i + 2\n    print(*a)", "for s in [*open(0)][2::2]:\n    s = list(map(int, s.split()))\n    l = [1] * len(s)\n    for i in range(len(s) - 1):\n        l[s[i] - 1] = i + 2\n    print(*l)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    loc = [0 for i in range(n)]\n    for i in range(0, n):\n        a[i] -= 1\n        loc[a[i]] = i\n    ans = ''\n    for i in range(n):\n        if loc[i] == n - 1:\n            ans += '1' + ' '\n        else:\n            ans += str(loc[i] + 2) + ' '\n    print(ans[:-1])", "for s in [*open(0)][2::2]:\n    s = list(map(int, s.split()))\n    a = [1] * len(s)\n    for i in range(len(s) - 1):\n        a[s[i] - 1] = i + 2\n    print(*a)", "for t in [*open(0)][2::2]:\n    t = list(map(int, t.split()))\n    a = [1] * len(t)\n    for i in range(len(t) - 1):\n        a[t[i] - 1] = i + 2\n    print(*a)", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = [0] * n\n    for i in range(n):\n        l[n - a[i]] = i + 1\n    print(*l)\nfor i in range(int(input())):\n    solve()", "def permutation_operation(n, l):\n    res = [1] * n\n    for i in range(0, n - 1):\n        res[l[i] - 1] = i + 2\n    return res\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    res = permutation_operation(n, l)\n    print(*res)", "for k in [*open(0)][2::2]:\n    k = list(map(int, k.split()))\n    a = [1] * len(k)\n    for i in range(len(k) - 1):\n        a[k[i] - 1] = i + 2\n    print(*a)", "for s in [*open(0)][2::2]:\n    s = list(map(int, s.split()))\n    a = [1] * len(s)\n    for i in range(len(s) - 1):\n        a[s[i] - 1] = i + 2\n    print(*a)", "for s in [*open(0)][2::2]:\n    s = list(map(int, s.split()))\n    a = [1] * len(s)\n    for i in range(len(s) - 1):\n        a[s[i] - 1] = i + 2\n    print(*a)", "for s in [*open(0)][2::2]:\n    s = list(map(int, s.split()))\n    a = [1] * len(s)\n    for i in range(len(s) - 1):\n        a[s[i] - 1] = i + 2\n    print(*a)", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    res = [0] * n\n    for i in range(n):\n        res[n - lst[i]] = i + 1\n    print(*res)", "tc = int(input())\nfor i in range(0, tc):\n    l = int(input())\n    sequence = [int(part) for part in input().split()]\n    op_arr = [1] * len(sequence)\n    for z in range(0, len(sequence) - 1):\n        op_arr[sequence[z] - 1] = z + 2\n    print(*op_arr)", "import math\nfor jj in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    ans = [1] * n\n    for i in range(n):\n        ans[n - arr[i]] = i + 1\n    print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [0] * n\n    for i in range(n):\n        b[n - a[i]] = i + 1\n    print(*b)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [0] * n\n    for i in range(n):\n        b[n - a[i]] = i + 1\n    print(*b)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(n - 1, -1, -1):\n        ans[n - arr[i]] = i + 1\n    print(*ans)", "from bisect import bisect_right\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = [0] * n\n    for i in range(n):\n        ans[n - l[i]] = i + 1\n    print(*ans)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    li = [0] * n\n    for j in range(n):\n        li[n - a[j]] = j + 1\n    print(*li)", "def most_frequent(List):\n    counter = 0\n    num = List[0]\n    for i in List:\n        curr_frequency = List.count(i)\n        if curr_frequency > counter:\n            counter = curr_frequency\n            num = i\n    return num\n\ndef solve(n, arr):\n    ans = [0 for i in range(n)]\n    for i in range(n):\n        ans[arr[i] - 1] = i + 1\n    print(*reversed(ans))\nfor i in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    solve(n, arr)", "t = int(input())\n\ndef solve():\n    n = int(input())\n    nums = [int(x) for x in input().split()]\n    a = [(n - x, i) for (i, x) in enumerate(nums, 1)]\n    a.sort()\n    a = [x[1] for x in a]\n    print(' '.join(map(str, a)))\nfor _ in range(t):\n    solve()", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [0] * n\n    for i in range(n):\n        b[n - a[i]] = i + 1\n    print(*b)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [0] * n\n    for i in range(n):\n        b[n - a[i]] = i + 1\n    print(*b)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [0] * n\n    for i in range(n):\n        b[n - a[i]] = i + 1\n    print(*b)", "for j in range(int(input())):\n    leng = int(input())\n    s = list(map(int, input().split()))\n    a = [1] * leng\n    for i in range(leng - 1):\n        a[s[i] - 1] = i + 2\n    print(*a)", "def exe():\n    d = {}\n    for i in range(1, n + 1):\n        d[i] = 0\n    for i in range(n):\n        d[lst[i]] = i + 1\n    return [d[i] for i in range(n, 0, -1)]\nfor _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    print(*exe())", "def permutation_operation(n, a):\n    ans = [0] * n\n    mp = {}\n    for i in range(n):\n        mp[n + 1 - a[i]] = i\n    for i in range(n):\n        ans[i] = mp[i + 1] + 1\n    return ans\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    result = permutation_operation(n, a)\n    print(*result)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    inx = [0] * (n + 1)\n    for i in range(n):\n        inx[a[i]] = i + 1\n    print(*[inx[n - i] for i in range(n)])", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [0] * n\n    for i in range(n):\n        b[n - a[i]] = i + 1\n    print(*b)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [0] * n\n    for i in range(n):\n        b[n - a[i]] = i + 1\n    print(*b)", "import math\nt = int(input())\nm = 1000000000.0 + 7\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    idx = [0] * (n + 1)\n    for i in range(0, n):\n        idx[arr[i]] = i\n    for i in range(1, n + 1):\n        if idx[i] == n - 1:\n            print(1, end=' ')\n        else:\n            print(idx[i] + 2, end=' ')\n    print()\nfor _ in range(t):\n    solve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ops = [0] * n\n    for i in range(n):\n        ops[n - arr[i]] = i + 1\n    for i in ops:\n        print(i, end=' ')\n    print('')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        d[arr[i]] = i\n    for j in range(n):\n        print(d[n - j] + 1, end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ops = [1] * n\n    for i in range(1, n):\n        ops[arr[i - 1] - 1] = i + 1\n    for i in ops:\n        print(i, end=' ')\n    print('')", "TT = int(input())\nwhile TT:\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    b = sorted(range(n), key=lambda k: a[k], reverse=True)\n    for i in b:\n        print(i + 1, end=' ')\n    print()\n    TT -= 1", "pos = [None] * 100001\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    ar = [int(item) for item in input().split()]\n    for i in range(n):\n        pos[ar[i]] = i + 1\n    ans = []\n    for i in range(n):\n        ans.append(pos[n - i])\n    print(*ans, sep=' ')", "t = int(input())\nfor test_case in range(t):\n    n = int(input())\n    int_list = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        d[int_list[i]] = i + 1\n    for i in range(n, 0, -1):\n        print(d[i], end=' ')\n    print()", "import collections\nimport functools\n\ndef solve(A):\n    n = len(A)\n    res = [()] * n\n    output = ['1'] * n\n    for i in range(1, n):\n        res[i] = (A[i] - A[i - 1], i)\n    res.sort()\n    for i in range(1, n):\n        output[n - i] = str(res[i][1] + 1)\n    return ' '.join(output)\n\ndef main():\n    for _ in range(int(input())):\n        input()\n        A = [int(e) for e in input().split()]\n        print(solve(A))\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = {}\n    for i in range(n):\n        m[l[i]] = i\n    ans = []\n    for i in range(1, n + 1):\n        ind = m[i]\n        if ind == n - 1:\n            ans.append(1)\n        else:\n            ans.append(ind + 2)\n    print(*ans)", "n = int(input())\nfor _ in range(n):\n    a = int(input())\n    b = list(map(int, input().split()))\n    c = {}\n    for i in range(1, 1 + a):\n        c[a + 1 - b[i - 1]] = i\n    for i in range(1, 1 + a):\n        print(c[i], end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        d[l[i]] = i\n    for j in range(n):\n        print(d[n - j] + 1, end=' ')\n    print()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    l1 = []\n    for i in range(n):\n        l1.append(-1)\n    for i in range(n - 1):\n        a = lst[i]\n        l1[a - 1] = i + 2\n    for i in l1:\n        if i == -1:\n            print(1, end=' ')\n        else:\n            print(i, end=' ')\n    print()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = a[0]\n    b = [None] * n\n    v = 0\n    for j in a:\n        b[v] = (p - j, v)\n        p = j\n        v += 1\n    b.sort()\n    s = ''\n    for x in b:\n        s += str(x[1] + 1)\n        s += ' '\n    print(s)", "for _ in range(int(input())):\n    a = int(input())\n    b = [int(i) for i in input().split()]\n    c = {}\n    for i in range(len(b)):\n        c[b[i]] = i\n    output = []\n    for i in range(a):\n        print(c[a - i] + 1, end=' ')\n    print()", "def inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\na = inp()\nfor i in range(a):\n    c1 = 0\n    c0 = 0\n    _ = inlt()\n    k = inlt()\n    f = False\n    maxc = k[0]\n    l = []\n    for x in k:\n        maxc = max(x, maxc)\n        l.append(maxc - x)\n    l = sorted(range(len(l)), key=lambda k: l[k])\n    l = [x + 1 for x in l]\n    print(*l)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    d = [(a[i] - a[i + 1], i + 2) for i in range(n - 1)]\n    d.sort()\n    print(1, *[x[1] for x in d])", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    d = [(a[i] - a[i + 1], i + 2) for i in range(n - 1)]\n    d.sort()\n    print(1, *[x[1] for x in d])", "def main():\n    for t in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        res = []\n        for i in range(n - 1):\n            res.append([a[i] - a[i + 1], i])\n        res.sort()\n        print(1, end=' ')\n        for i in res:\n            print(i[1] + 2, end=' ')\n        print()\nmain()", "def solve(t, n):\n    pos = []\n    for i in range(t):\n        pos.append([n[i], i])\n    pos.sort(reverse=True)\n    num = []\n    for i in pos:\n        num.append(i[1] + 1)\n    return num\nfor _ in range(int(input())):\n    t = int(input())\n    n = list(map(int, input().split()))\n    print(*solve(t, n))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    lst = []\n    lst2 = []\n    for i in range(n):\n        lst.append(n + 1 - a[i])\n        lst2.append(i + 1)\n    z = sorted(list(zip(lst, lst2)))\n    res = []\n    for (i, j) in z:\n        res.append(j)\n    print(*res)"]