["def read_nums():\n    return [int(x) for x in input().split()]\n\ndef solve():\n    s = input()\n    a = min(s)\n    i = s.index(a)\n    b = s[:i] + s[i + 1:]\n    print(a, b)\n\ndef main():\n    (t,) = read_nums()\n    for _ in range(t):\n        solve()\nmain()", "import sys\ninput = lambda : sys.stdin.readline().rstrip('\\r\\n')\ninp_vars_int = lambda : map(int, input().split())\ninp_list_int = lambda : list(map(int, input().split()))\nt = int(input())\nfor _ in range(t):\n    s = input()\n    a = min(s)\n    b = s.replace(a, '', 1)\n    print(a, b)", "for _ in range(int(input())):\n    g = input()\n    h = list(g)\n    t = ''\n    for i in range(97, 97 + 26):\n        if g.count(chr(i)) != 0:\n            t = chr(i)\n            break\n    h.remove(t)\n    ans = ''.join(h)\n    print(t, ans)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    a = min(s)\n    for i in range(len(s)):\n        if s[i] == a:\n            print(a, s[:i] + s[i + 1:])\n            break", "t = int(input())\nfor i in range(t):\n    s = input()\n    mn = s[0]\n    ind = 0\n    for j in range(1, len(s)):\n        if s[j] < mn:\n            mn = s[j]\n            ind = j\n    print(mn, s[:ind] + s[ind + 1:])", "def min_alha(s):\n    mi = s[0]\n    for x in s:\n        if x < mi:\n            mi = x\n    return mi\nn = int(input())\nans = list()\nfor i in range(n):\n    s = input()\n    x = min_alha(s)\n    for j in range(len(s)):\n        if s[j] == x:\n            s = s[:j] + s[j + 1:]\n            break\n    ans.append((x, s))\nfor x in ans:\n    print(x[0], x[1])", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    s = list(input().rstrip())\n    idx = 0\n    MIN = ord(s[0])\n    for i in range(1, len(s)):\n        if ord(s[i]) < MIN:\n            idx = i\n            MIN = ord(s[i])\n    print(s[idx], ''.join(s[:idx] + s[idx + 1:]))", "import sys\ninput = sys.stdin.readline\n\ndef get_integers():\n    return map(int, input().strip().split())\nt = int(input().strip())\nfor _ in range(t):\n    s = input().strip()\n    mn = ord('z')\n    idx = 0\n    for (i, char) in enumerate(s):\n        if ord(char) < mn:\n            mn = ord(char)\n            idx = i\n    print(s[idx], s[:idx] + s[idx + 1:])", "t = int(input())\nwhile t > 0:\n    s = input()\n    print(min(s), end=' ')\n    ind = list(s).index(min(s))\n    print(s[:ind] + s[ind + 1:])\n    t -= 1", "n = int(input())\na = []\nfor i in range(n):\n    arr = list(input())\n    b = min(arr)\n    arr.remove(b)\n    a.append((b, ''.join(arr)))\nfor i in range(n):\n    print(a[i][0], a[i][1])", "n = int(input())\nres = []\nfor _ in range(n):\n    s = list(input())\n    s1 = sorted(s)\n    a = s1[0]\n    s.remove(a)\n    res.append(a + ' ' + ''.join(s))\nfor i in res:\n    print(i)", "from sys import stdin\n\ndef solve():\n    for _ in range(int(stdin.readline().strip())):\n        S = list(stdin.readline().rstrip())\n        x = min(S)\n        y = ''\n        f = 0\n        for c in S:\n            if c == x and (not f):\n                f = 1\n                continue\n            y += c\n        print(x, y)\nsolve()", "t = int(input())\nfor i in range(t):\n    s = input()\n    minim = min(s)\n    found = s.find(minim)\n    print(minim, s[0:found] + s[found + 1:])", "t = int(input())\nwhile t:\n    t -= 1\n    k = input()\n    mn = min(k)\n    k = k.replace(mn, '', 1)\n    print(mn, k)", "for i in range(int(input())):\n    S = input()\n    a = min(S)\n    c = S.index(a)\n    if c != len(S) - 1 and c != 0:\n        b = S[0:c] + S[c + 1:]\n    elif c == 0:\n        b = S[1:]\n    else:\n        b = S[0:len(S) - 1]\n    print(a, b)", "t = int(input())\nwhile t != 0:\n    s = input()\n    lst = [i for i in s]\n    lst.sort()\n    a = lst[0]\n    s = s.replace(a, '', 1)\n    print(a, s)\n    t = t - 1", "for __ in range(int(input())):\n    S = input()\n    SS = sorted(list(S))\n    print(SS[0], S.replace(SS[0], '', 1))", "for case in range(int(input())):\n    s = input()\n    x = min(s)\n    s = s.replace(x, '', 1)\n    print(x + ' ' + s)", "t = int(input())\nfor _ in range(t):\n    s = list(input())\n    a = min(list(set(s)))\n    del s[s.index(a)]\n    print(f\"{a} {''.join(s)}\")", "alpha = 'abcdefghijklmnopqrstuvwxyz'\nloop = int(input())\nfor x in range(0, loop):\n    word = input()\n    for x in alpha:\n        if x in word:\n            word = word.replace(x, '', 1)\n            word = f'{x} {word}'\n            print(word)\n            break", "for i in range(int(input())):\n    s = input()\n    min_ = min(s)\n    s = s.replace(min_, '', 1)\n    print(min_, s)", "def solve(s):\n    min = s[0]\n    c = 0\n    for i in range(len(s)):\n        if s[i] < min:\n            min = s[i]\n            c = i\n    print(min + ' ', end='')\n    print(s[:c] + s[c + 1:])\nt = int(input())\nfor _ in range(t):\n    s = input()\n    solve(s)", "for _ in range(int(input())):\n    s = list(input())\n    m = min(s)\n    s.pop(s.index(m))\n    print(m, ''.join(s))", "n = int(input())\nfor x in range(n):\n    x = input()\n    a = min(x)\n    b = x.index(a)\n    x = list(x)\n    x.pop(b)\n    print(a, ''.join(x))", "import sys\ninp = sys.stdin.readline\n\ndef solve():\n    s = inp().strip()\n    for i in range(26):\n        a = chr(ord('a') + i)\n        if a in s:\n            f = s.find(a)\n            b = s[:f] + s[f + 1:]\n            print(a, b)\n            return\n\ndef main():\n    for i in range(int(inp())):\n        solve()\nmain()", "x = int(input())\nfor i in range(x):\n    s = list(input())\n    y = sorted(s)[0]\n    s.remove(y)\n    print(y, ' ', ''.join(s))", "for _ in range(int(input())):\n    s = input()\n    r = ''.join(sorted(s))\n    s = s.replace(r[0], '', 1)\n    print(r[0], s)", "for _ in range(int(input())):\n    s = input()\n    r1 = min(s)\n    for i in range(len(s)):\n        if s[i] == r1:\n            r2 = s[0:i] + s[i + 1:len(s)]\n            break\n    print(r1 + ' ' + r2)", "for i in range(int(input())):\n    s = input()\n    min_ = min(s)\n    s = s.replace(min_, '', 1)\n    print(min_, s)", "for _ in range(int(input())):\n    s = input()\n    k = list(s)\n    p = k.copy()\n    p.sort()\n    print(p[0], end=' ')\n    k.remove(p[0])\n    print(''.join(k))", "t = int(input())\nfor _ in range(t):\n    s = input()\n    a = s[0]\n    for i in s:\n        if i < a:\n            a = i\n    b = s.replace(a, '', 1)\n    print(a, b)", "for _ in range(int(input())):\n    s = input()\n    x = min(s)\n    s = s.replace(x, '', 1)\n    print(x, s)", "for _ in range(int(input())):\n    s = input()\n    x = min(s)\n    s = s.replace(x, '', 1)\n    print(x, s)", "for _ in range(int(input())):\n    s = input()\n    idx = s.index(min(s))\n    print(min(s), s[:idx] + s[idx + 1:])", "for i in range(int(input())):\n    n = input()\n    s = min(n)\n    n = n.replace(s, '', 1)\n    print(s, n)", "for _ in range(0, int(input())):\n    s = input()\n    a = min(s)\n    print(a, s.replace(a, '', 1))", "for i in range(int(input())):\n    s = input()\n    r = min(s)\n    print(r, s.replace(r, '', 1))", "import math\nt = int(input())\nwhile t > 0:\n    t -= 1\n    s = input()\n    ch = s[0]\n    index = 0\n    for i in range(1, len(s)):\n        if s[i] < ch:\n            ch = s[i]\n            index = i\n    print(ch, s[:index] + s[index + 1:])", "x = input()\nx = int(x)\nsent = []\nfor i in range(x):\n    y = input()\n    sent.append(y)\nfor sub in sent:\n    a = sorted(sub)[0]\n    idx = sub.find(a)\n    b = sub.replace(a, '', 1)\n    print(a, ' ', b)", "for _ in range(int(input())):\n    a = list(input())\n    m = min(a)\n    a.remove(m)\n    print(m, ''.join(a))", "for _ in range(int(input())):\n    n1 = input()\n    minval = min(n1)\n    print(minval, n1.replace(minval, '', 1))", "import sys\nfor _ in range(int(sys.stdin.readline().strip())):\n    n1 = sys.stdin.readline().strip()\n    minval = min(n1)\n    print(minval, n1.replace(minval, '', 1))", "for _ in range(int(input())):\n    n1 = input()\n    print(min(n1), n1.replace(min(n1), '', 1))", "t = int(input())\nfor _ in range(t):\n    s = input()\n    a = min(s)\n    i = s.index(a)\n    print(a, s[:i] + s[i + 1:])", "for _ in range(int(input())):\n    ch = input()\n    x = min(ch)\n    print(x, ch.replace(x, '', 1))", "T = int(input())\nfor t in range(T):\n    a = list(input())\n    b = a[:]\n    b.sort()\n    a.remove(b[0])\n    print(b[0], end=' ')\n    print(''.join(a))", "t = int(input())\nfor i in range(t):\n    s = input()\n    a = min(s)\n    sci = s.find(a)\n    b = s[:sci] + s[sci + 1:]\n    print(a, b)", "t = int(input())\nfor i in range(t):\n    a = list(input())\n    k = min(a)\n    a.remove(k)\n    print(k, ''.join(a))", "import sys\nnum = int(input())\nall = []\nalpha = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\nwhile num:\n    temp = input()\n    all.append(temp)\n    num -= 1\nfor item in all:\n    for a in alpha:\n        if a in item:\n            sys.stdout.write(a)\n            sys.stdout.write(' ')\n            sys.stdout.write(item.replace(a, '', 1))\n            sys.stdout.write('\\n')\n            break", "import sys\nnum = int(input())\nall = []\nalpha = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\nwhile num:\n    temp = input()\n    all.append(temp)\n    num -= 1\nfor item in all:\n    for a in alpha:\n        if a in item:\n            sys.stdout.write(a + ' ' + item.replace(a, '', 1) + '\\n')\n            break", "import sys\nnum = int(input())\nall = []\nalpha = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\nwhile num:\n    temp = sys.stdin.readline()\n    all.append(temp)\n    num -= 1\nfor item in all:\n    for a in alpha:\n        if a in item:\n            sys.stdout.write(a + ' ' + item.replace(a, '', 1))\n            break", "t = int(input())\nwhile t > 0:\n    t -= 1\n    s = input()\n    a = min(s)\n    i = 0\n    while s[i] != a:\n        i += 1\n    print(a, ' ', s[:i] + s[i + 1:len(s)])", "for _ in range(int(input())):\n    a = input()\n    b = list(a)\n    b.sort()\n    print(b[0], a.replace(b[0], '', 1))", "t = int(input())\nfor i in range(t):\n    s = input()\n    a = min(s)\n    v = s.find(a)\n    v = s[:v] + s[v + 1:]\n    print(a, v)", "for t in range(int(input())):\n    s = input()\n    mn = 0\n    for i in set(s):\n        if mn == 0:\n            mn = i\n        elif i < mn:\n            mn = i\n    print(mn, s.replace(mn, '', 1))", "for _ in range(int(input())):\n    s = input()\n    j = s.index(min(s))\n    print(s[j], s[:j] + s[j + 1:])", "for _ in range(int(input())):\n    x = min((s := input()))\n    print(x, s.replace(x, '', 1))", "t = int(input())\nfor i in range(t):\n    s = input()\n    lis = list(s)\n    a = min(lis)\n    lis.remove(a)\n    j = ''.join(lis)\n    print(a, j)", "for i in range(int(input())):\n    string = input()\n    letter = sorted(string)[0]\n    print(letter, string.replace(letter, '', 1))", "n = int(input())\nS = []\nfor i in range(0, n):\n    S.append(input())\nfor i in range(0, int(n)):\n    A = sorted(S[i])\n    S[i] = list(S[i])\n    S[i].remove(A[0])\n    print(A[0], ''.join(S[i]))", "T = int(input())\nfor t in range(T):\n    s = input()\n    a = min(s)\n    b = s.replace(a, '', 1)\n    print(a, b)", "t = int(input())\nfor i in range(t):\n    s = input()\n    a = min(s)\n    j = s.index(a)\n    print(a, s[:j] + s[j + 1:])", "for i in range(int(input())):\n    n = input()\n    li = list(n)\n    min_value = list(min(li))\n    li.remove(''.join(min_value))\n    print(''.join(min_value), ''.join(li))", "for i in range(int(input())):\n    s = input()\n    print(min(s), s.replace(min(s), '', 1))", "t = int(input())\nfor i in range(t):\n    s = input()\n    men = min(s)\n    s1 = s.split(men, 1)\n    res = ''.join(s1)\n    print(men, res)", "n = int(input())\nfor i in range(n):\n    s = input()\n    a = min(s)\n    s = s.replace(a, '', 1)\n    print(a, s)", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    s = stdin.readline().strip()\n    _min = min(s)\n    a = s.index(_min)\n    print(s[a], s[:a] + s[a + 1:])", "for _ in range(int(input())):\n    s = input()\n    a = sorted(s)[0]\n    b = s[:s.index(a)] + s[s.index(a) + 1:]\n    print(a, b)", "for _ in range(int(input())):\n    s = input()\n    print(min(s), s.replace(min(s), '', 1))", "for i in [0] * int(input()):\n    x = input()\n    max = x[0]\n    intmax = 0\n    max = min(x)\n    j = x.find(min(x))\n    print(x[j] + ' ' + x[0:j] + x[j + 1:])", "def check(x):\n    p = list(x)\n    p.sort()\n    s = p[0]\n    p.pop(0)\n    p = list(x)\n    p.remove(s)\n    m = s + ' ' + ''.join(p)\n    return m\nc = int(input())\nm = []\no = []\nfor j in range(c):\n    s = input()\n    o.append(s)\nfor i in o:\n    t = check(i)\n    m.append(t)\nfor f in m:\n    print(f)", "for _ in range(int(input())):\n    s = str(input())\n    m = min(s)\n    n = s.replace(m, '', 1)\n    print(m, n)", "t = int(input())\narr = []\nfor i in range(t):\n    s = input()\n    m = 'z'\n    for j in s:\n        if ord(j) < ord(m):\n            m = j\n    index = s.index(m)\n    s = s[:index] + s[index + 1:]\n    arr.append(m + ' ' + s)\nfor i in arr:\n    print(i)", "def solve(n):\n    m = min(n)\n    result = n.replace(m, '', 1)\n    print(m, result)\nfor _ in range(int(input())):\n    n = input()\n    solve(n)", "while 1:\n    n = int(input())\n    if n in range(1, 1001):\n        break\nL = []\nfor i in range(n):\n    while 1:\n        s = input()\n        if len(s) in range(2, 101):\n            L.append(s)\n            break\nfor s in L:\n    a = min(s)\n    b = s[:s.index(a)] + s[s.index(a) + 1:]\n    print('{} {}'.format(a, b))", "t = int(input())\nfor _ in range(t):\n    s = input()\n    min1 = min(s)\n    print(min1, s.replace(min1, '', 1))", "for _ in range(int(input())):\n    s = input()\n    j = s.index(min(s))\n    print(s[j], s[:j] + s[j + 1:])", "t = int(input())\nfor i in range(t):\n    s = input()\n    l = list(s)\n    p = sorted(l)\n    a = p[0]\n    l.remove(a)\n    b = ''.join(l)\n    print(a, b)", "for i in range(int(input())):\n    data = input()\n    data = list(data)\n    print(min(data), end=' ')\n    data.remove(min(data))\n    b = ''.join(data)\n    print(b)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    a = [i for i in s]\n    print(min(a), end=' ')\n    a.remove(min(a))\n    print(''.join(a))", "t = int(input())\ncases = []\nfor i in range(t):\n    s = input()\n    cases.append(s)\nfor c in cases:\n    k = c.find(min(c))\n    print(c[k], c[0:k] + c[k + 1:])", "t = int(input())\nfor i in range(t):\n    s = list(input())\n    x = sorted(s)\n    a = x[0]\n    s.remove(x[0])\n    print(a, ''.join(s))", "t = int(input())\nfor _ in range(t):\n    s = input()\n    a = min(s)\n    for i in range(len(s)):\n        if s[i] == a:\n            b = s[:i] + s[i + 1:]\n            break\n    print(a + ' ' + b)", "for _ in range(int(input())):\n    s = input()\n    j = s.index(min(s))\n    print(s[j], s[:j] + s[j + 1:])", "s = int(input())\nfor i in range(s):\n    a = input()\n    d = list(a)\n    b = sorted(a)\n    c = b[0]\n    d.remove(c)\n    print(c, ''.join(d))", "for _ in range(int(input())):\n    s = input()\n    m = min(s)\n    i = s.index(m)\n    print(m, s[:i] + s[i + 1:])", "class Solution:\n\n    def ans(self, s: str) -> None:\n        a = min(list(s))\n        another = ''\n        c = 0\n        for i in range(len(s)):\n            if s[i] == a:\n                c = i\n                break\n        print(a, s[0:c] + s[c + 1:])\nt = int(input())\nfor _ in range(t):\n    s: str = input()\n    obj = Solution()\n    obj.ans(s)", "for _ in [0] * int(input()):\n    s = list(input())\n    k = min(s)\n    s.remove(k)\n    print(k, ''.join(s))", "for _ in range(int(input())):\n    s = input()\n    a = sorted(s)[0]\n    b = s.find(a)\n    print(s[b], s[:b] + s[b + 1:])", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    s = input().strip()\n    n = len(s)\n    curr = s[0]\n    idx = 0\n    for i in range(n):\n        if curr > s[i]:\n            curr = s[i]\n            idx = i\n    return (curr, s[:idx] + s[idx + 1:])\nfor _ in range(int(input())):\n    print(*solve())"]