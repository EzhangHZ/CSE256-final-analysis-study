["import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    (str1, str2) = map(str, input().rstrip().split())\n    if str1[-1] == 'S':\n        l1 = -len(str1)\n    elif str1[-1] == 'L':\n        l1 = len(str1)\n    else:\n        l1 = 0\n    if str2[-1] == 'S':\n        l2 = -len(str2)\n    elif str2[-1] == 'L':\n        l2 = len(str2)\n    else:\n        l2 = 0\n    if l1 > l2:\n        print('>')\n    elif l1 == l2:\n        print('=')\n    else:\n        print('<')", "import sys\n\ndef assign(a):\n    if a[-1] == 'S':\n        v = -1\n    elif a[-1] == 'L':\n        v = 1\n    else:\n        v = 0\n    v *= len(a)\n    return v\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s.strip())\n\ndef invr():\n    return map(int, input().split())\nfor _ in range(inp()):\n    (a, b) = input().split()\n    if assign(a) > assign(b):\n        print('>')\n    elif assign(a) == assign(b):\n        print('=')\n    else:\n        print('<')", "import sys\nfrom collections import *\nsys.setrecursionlimit(10 ** 5)\nitr = (line for line in sys.stdin.read().strip().split('\\n'))\nINP = lambda : next(itr)\n\ndef ni():\n    return int(INP())\n\ndef nl():\n    return [int(_) for _ in INP().split()]\ni = ni()\nfor _ in range(i):\n    (a, b) = INP().split(' ')\n    if a[-1] == 'S':\n        if b[-1] == 'L' or b[-1] == 'M':\n            print('<')\n        elif len(a) == len(b):\n            print('=')\n        elif len(a) > len(b):\n            print('<')\n        else:\n            print('>')\n    if a[-1] == 'M':\n        if b == 'M':\n            print('=')\n        if b[-1] == 'L':\n            print('<')\n        if b[-1] == 'S':\n            print('>')\n    if a[-1] == 'L':\n        if b[-1] == 'S' or b[-1] == 'M':\n            print('>')\n        else:\n            if len(a) == len(b):\n                print('=')\n            if len(a) > len(b):\n                print('>')\n            if len(b) > len(a):\n                print('<')", "import sys\ninput = sys.stdin.readline\nfor tc in range(int(input())):\n    (a, b) = input().split()\n    if a[-1] != b[-1]:\n        if a[-1] == 'S':\n            print('<')\n        elif a[-1] == 'M':\n            print('<' if b[-1] == 'L' else '>')\n        else:\n            print('>')\n    elif len(a) > len(b):\n        if a[-1] == 'S':\n            print('<')\n        else:\n            print('>')\n    elif len(a) < len(b):\n        if a[-1] == 'S':\n            print('>')\n        else:\n            print('<')\n    else:\n        print('=')", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef solve():\n    dic = {'S': 0, 'M': 1, 'L': 2}\n    (a, b) = input().split()\n    if dic[a[-1]] > dic[b[-1]]:\n        print('>')\n        return\n    elif dic[a[-1]] < dic[b[-1]]:\n        print('<')\n        return\n    elif a[-1] == 'L':\n        if len(a) > len(b):\n            print('>')\n            return\n        elif len(a) < len(b):\n            print('<')\n            return\n        else:\n            print('=')\n            return\n    elif len(a) > len(b):\n        print('<')\n        return\n    elif len(a) < len(b):\n        print('>')\n        return\n    else:\n        print('=')\n        return\nt = inp()\nfor i in range(t):\n    solve()", "t = int(input())\nanswer = []\nfor _ in range(t):\n    comp_str = input().split()\n    T1 = comp_str[0]\n    T2 = comp_str[1]\n    if T1[-1] != T2[-1]:\n        if T1[-1] == 'S' and T2[-1] == 'L':\n            answer.append('<')\n        elif T1[-1] == 'L' and T2[-1] == 'S':\n            answer.append('>')\n        elif T1[-1] == 'S' and T2[-1] == 'M':\n            answer.append('<')\n        elif T1[-1] == 'M' and T2[-1] == 'S':\n            answer.append('>')\n        elif T1[-1] == 'L' and T2[-1] == 'M':\n            answer.append('>')\n        elif T1[-1] == 'M' and T2[-1] == 'L':\n            answer.append('<')\n    else:\n        T1_x = T1.count('X')\n        T2_x = T2.count('X')\n        if T1[-1] != 'S':\n            if T1_x > T2_x:\n                answer.append('>')\n            elif T1_x < T2_x:\n                answer.append('<')\n            else:\n                answer.append('=')\n        elif T1_x > T2_x:\n            answer.append('<')\n        elif T1_x < T2_x:\n            answer.append('>')\n        else:\n            answer.append('=')\nfor ans in answer:\n    print(ans)", "n = int(input())\nlis = ['S', 'M', 'L']\nx = [''] * n\ny = [''] * n\nfor i in range(n):\n    (x[i], y[i]) = input().split(' ')\nfor i in range(n):\n    if x[i] == y[i]:\n        print('=')\n    elif x[i][-1] == y[i][-1]:\n        if x[i][-1] == 'S':\n            if len(x[i]) > len(y[i]):\n                print('<')\n            else:\n                print('>')\n        elif len(x[i]) > len(y[i]):\n            print('>')\n        else:\n            print('<')\n    elif lis.index(x[i][-1]) > lis.index(y[i][-1]):\n        print('>')\n    else:\n        print('<')", "import sys\nn = int(sys.stdin.readline())\nfor i in range(n):\n    (s1, s2) = list(sys.stdin.readline().split())\n    a = ord(s1[-1])\n    b = ord(s2[-1])\n    if a > b:\n        print('<')\n    elif a < b:\n        print('>')\n    elif len(s1) > len(s2):\n        if s1[-1] == 'S':\n            print('<')\n        else:\n            print('>')\n    elif len(s1) < len(s2):\n        if s1[-1] == 'S':\n            print('>')\n        else:\n            print('<')\n    else:\n        print('=')", "shirts = []\nfor i in range(int(input())):\n    (a, b) = input().split()\n    n = a[-1]\n    size = ['S', 'M', 'L']\n    if a[-1] == b[-1]:\n        if len(a) == len(b):\n            shirts.append('=')\n        elif n == 'S' and len(a) < len(b) or (n == 'L' and len(a) > len(b)):\n            shirts.append('>')\n        else:\n            shirts.append('<')\n    elif size.index(a[-1]) > size.index(b[-1]):\n        shirts.append('>')\n    else:\n        shirts.append('<')\nprint('\\n'.join(shirts))", "def size(l, a):\n    for i in l:\n        if i in a:\n            return i\nx = int(input())\nl = ['S', 'M', 'L']\nprintl = []\nfor i in range(x):\n    (a, b) = input().split()\n    size_a = size(l, a)\n    size_b = size(l, b)\n    a_x = a.count('X')\n    a_b = b.count('X')\n    if size_a == 'S' and size_b == 'S':\n        if a_x > a_b:\n            printl.append('<')\n        elif a_x < a_b:\n            printl.append('>')\n        elif a_x == a_b:\n            printl.append('=')\n    elif size_a == size_b:\n        if a_x > a_b:\n            printl.append('>')\n        elif a_x < a_b:\n            printl.append('<')\n        elif a_x == a_b:\n            printl.append('=')\n    elif size_a > size_b:\n        printl.append('<')\n    else:\n        printl.append('>')\nfor i in printl:\n    print(i)", "def size(l, a):\n    for i in l:\n        if i in a:\n            return i\nx = int(input())\nl = ['S', 'M', 'L']\nprintl = []\nfor i in range(x):\n    (a, b) = input().split()\n    size_a = size(l, a)\n    size_b = size(l, b)\n    a_x = a.count('X')\n    a_b = b.count('X')\n    if size_a == 'S' and size_b == 'S':\n        if a_x > a_b:\n            printl.append('<')\n        elif a_x < a_b:\n            printl.append('>')\n        else:\n            printl.append('=')\n    elif size_a == size_b:\n        if a_x > a_b:\n            printl.append('>')\n        elif a_x < a_b:\n            printl.append('<')\n        else:\n            printl.append('=')\n    elif size_a > size_b:\n        printl.append('<')\n    else:\n        printl.append('>')\nfor i in printl:\n    print(i)", "t = int(input())\nq = ''\nfor i in range(t):\n    size = input().split()\n    if size[0][len(size[0]) - 1] == 'S':\n        if size[0][len(size[0]) - 1] == 'S' and size[1][len(size[1]) - 1] == 'S':\n            if size[0].count('X') < size[1].count('X'):\n                q += '>\\n'\n            elif size[0].count('X') == size[1].count('X'):\n                q += '=\\n'\n            else:\n                q += '<\\n'\n        else:\n            q += '<\\n'\n    elif size[0][len(size[0]) - 1] == 'L':\n        if size[0][len(size[0]) - 1] == 'L' and size[1][len(size[1]) - 1] == 'L':\n            if size[0].count('X') < size[1].count('X'):\n                q += '<\\n'\n            elif size[0].count('X') == size[1].count('X'):\n                q += '=\\n'\n            else:\n                q += '>\\n'\n        else:\n            q += '>\\n'\n    elif size[0][len(size[0]) - 1] == 'M':\n        if size[0][len(size[0]) - 1] == 'M' and size[1][len(size[1]) - 1] == 'M':\n            if size[0].count('M') == size[1].count('M'):\n                q += '=\\n'\n        elif size[1][len(size[1]) - 1] == 'S':\n            q += '>\\n'\n        elif size[1][len(size[1]) - 1] == 'L':\n            q += '<\\n'\nprint(q)", "f = lambda x: ((i := 'ML'.find(x.strip('X'))), i * len(x))\nfor s in [*open(0)][1:]:\n    (x, y) = map(f, s.split())\n    print('=<>'[(x < y) - (y < x)])", "import sys\ninput = sys.stdin.readline\noutput = sys.stdout.write\nt = int(input())\nfor i in range(t):\n    S = input().split()\n    f = [S[0][-1], S[1][-1]]\n    if f[0] == f[1]:\n        if len(S[0]) > len(S[1]):\n            if f[0] == 'L':\n                output('>\\n')\n                continue\n            else:\n                output('<\\n')\n                continue\n        elif len(S[0]) < len(S[1]):\n            if f[0] == 'L':\n                output('<\\n')\n                continue\n            else:\n                output('>\\n')\n                continue\n        else:\n            output('=\\n')\n            continue\n    if f[0] == 'L':\n        output('>\\n')\n        continue\n    elif f[0] == 'M':\n        if f[1] == 'S':\n            output('>\\n')\n            continue\n        else:\n            output('<\\n')\n            continue\n    else:\n        output('<\\n')\n        continue", "for s in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x[-1]) * len(x) for x in s.split())\n    print('=<>'[(x < y) - (y < x)])", "f = lambda x: ((i := 'ML'.find(x.strip('X'))), i * len(x))\nfor s in [*open(0)][1:]:\n    (x, y) = map(f, s.split())\n    print('=<>'[(x < y) - (y < x)])", "for s in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x[-1]) * len(x) for x in s.split())\n    print('=<>'[(x < y) - (y < x)])", "input = __import__('sys').stdin.readline\nfor _ in range(int(input())):\n    (a, b) = input().split()\n    if a == 'M':\n        a = 0\n    elif a[-1] == 'S':\n        a = -len(a)\n    else:\n        a = len(a)\n    if b == 'M':\n        b = 0\n    elif b[-1] == 'S':\n        b = -len(b)\n    else:\n        b = len(b)\n    if a == b:\n        print('=')\n    elif a > b:\n        print('>')\n    else:\n        print('<')", "for s in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x[-1]) * len(x) for x in s.split())\n    print('=<>'[(x < y) - (y < x)])", "for s in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x[-1]) * len(x) for x in s.split())\n    print('=<>'[(x < y) - (y < x)])", "__author__ = 'vipli'\nn = int(input())\nout = []\nsize_num = {'S': 1, 'M': 2, 'L': 3}\nfor i in range(n):\n    line = str(input())\n    ary = line.strip().split(' ')\n    a = ary[0]\n    b = ary[1]\n    a_size = a[-1]\n    b_size = b[-1]\n    this_rel = ''\n    if a_size == b_size:\n        if len(a) == len(b):\n            this_rel = '='\n        elif a_size == 'S':\n            if len(a) > len(b):\n                this_rel = '<'\n            else:\n                this_rel = '>'\n        elif len(a) > len(b):\n            this_rel = '>'\n        else:\n            this_rel = '<'\n    else:\n        a_num = size_num[a_size]\n        b_num = size_num[b_size]\n        if a_num > b_num:\n            this_rel = '>'\n        else:\n            this_rel = '<'\n    out.append(this_rel)\nfor data in out:\n    print(data)", "for s in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x[-1]) * len(x) for x in s.split())\n    print('=<>'[(x < y) - (y < x)])", "for s in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x[-1]) * len(x) for x in s.split())\n    print('=<>'[(x < y) - (y < x)])", "for s in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x[-1]) * len(x) for x in s.split())\n    print('=<>'[(x < y) - (y < x)])", "for s in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x[-1]) * len(x) for x in s.split())\n    print('=<>'[(x < y) - (y < x)])", "for s in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x[-1]) * len(x) for x in s.split())\n    print('=<>'[(x < y) - (y < x)])", "for s in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x[-1]) * len(x) for x in s.split())\n    print('=<>'[(x < y) - (y < x)])", "for s in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x[-1]) * len(x) for x in s.split())\n    print('=<>'[(x < y) - (y < x)])", "for s in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x[-1]) * len(x) for x in s.split())\n    print('=<>'[(x < y) - (y < x)])", "for s in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x[-1]) * len(x) for x in s.split())\n    print('=<>'[(x < y) - (y < x)])", "for s in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x[-1]) * len(x) for x in s.split())\n    print('=<>'[(x < y) - (y < x)])", "for s in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x[-1]) * len(x) for x in s.split())\n    print('=<>'[(x < y) - (y < x)])", "for s in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x[-1]) * len(x) for x in s.split())\n    print('=<>'[(x < y) - (y < x)])", "for s in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x[-1]) * len(x) for x in s.split())\n    print('=<>'[(x < y) - (y < x)])", "for s in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x[-1]) * len(x) for x in s.split())\n    print('=<>'[(x < y) - (y < x)])", "for s in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x[-1]) * len(x) for x in s.split())\n    print('=<>'[(x < y) - (y < x)])", "def test(a, b):\n    if a == b:\n        return '='\n    if a.endswith('S') and b.endswith(('L', 'M')):\n        return '<'\n    elif a.endswith(('M', 'L')) and b.endswith('S'):\n        return '>'\n    elif a.endswith('M') and b.endswith('L'):\n        return '<'\n    elif a.endswith('L') and b.endswith('M'):\n        return '>'\n    elif a.endswith('S') and b.endswith('S'):\n        if len(a) > len(b):\n            return '<'\n        else:\n            return '>'\n    elif a.endswith('L') and b.endswith('L'):\n        if len(a) > len(b):\n            return '>'\n        else:\n            return '<'\nx = int(input())\nresults = []\nfor i in range(1, x + 1):\n    string = input()\n    list1 = string.split(' ')\n    a = list1[0]\n    b = list1[1]\n    results.append(test(a, b))\nfor i in results:\n    print(i)", "import sys\nn = int(sys.stdin.readline())\nwhile n > 0:\n    t = sys.stdin.readline().strip().split()\n    x1 = len(t[0]) - 1\n    s1 = t[0][x1]\n    x2 = len(t[1]) - 1\n    s2 = t[1][x2]\n    if s1 != s2:\n        if s1 > s2:\n            print('<')\n        else:\n            print('>')\n    elif x1 == x2:\n        print('=')\n    elif s1 == 'S':\n        if x1 > x2:\n            print('<')\n        else:\n            print('>')\n    elif x1 > x2:\n        print('>')\n    else:\n        print('<')\n    n = n - 1", "for s in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x[-1]) * len(x) for x in s.split())\n    print('=<>'[(x < y) - (y < x)])", "for s in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x[-1]) * len(x) for x in s.split())\n    print('=<>'[(x < y) - (y < x)])", "for s in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x[-1]) * len(x) for x in s.split())\n    print('=<>'[(x < y) - (y < x)])", "for s in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x[-1]) * len(x) for x in s.split())\n    print('=<>'[(x < y) - (y < x)])", "for s in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x[-1]) * len(x) for x in s.split())\n    print('=<>'[(x < y) - (y < x)])", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (a, b) = input().split()\n    if a[-1] == b[-1]:\n        if len(a) > len(b):\n            return '<' if a[-1] == 'S' else '>'\n        elif len(a) == len(b):\n            return '='\n        else:\n            return '>' if a[-1] == 'S' else '<'\n    else:\n        v1 = v2 = 0\n        if a[-1] == 'S':\n            v1 += 1\n        elif a[-1] == 'M':\n            v1 += 2\n        else:\n            v1 += 3\n        if b[-1] == 'S':\n            v2 += 1\n        elif b[-1] == 'M':\n            v2 += 2\n        else:\n            v2 += 3\n        return '>' if v1 > v2 else '<'\nfor _ in range(int(input())):\n    print(solve())", "from math import *\nimport sys\n\ndef input():\n    return sys.stdin.readline().replace('\\n', '').strip()\nsys.setrecursionlimit(10 ** 9)\nfor _ in range(int(input())):\n    (a, b) = input().split()\n    if a == b:\n        print('=')\n    elif a == 'M':\n        if 'L' in b:\n            print('<')\n        else:\n            print('>')\n    elif b == 'M':\n        if 'L' in a:\n            print('>')\n        else:\n            print('<')\n    elif a[-1] == b[-1]:\n        n1 = a.count('X')\n        n2 = b.count('X')\n        if a[-1] == 'L':\n            if n1 > n2:\n                print('>')\n            else:\n                print('<')\n        elif n1 < n2:\n            print('>')\n        else:\n            print('<')\n    elif a[-1] == 'L':\n        print('>')\n    else:\n        print('<')", "t = int(input())\nans = []\nfor _ in range(t):\n    (a, b) = input().split()\n    if a[-1] == b[-1]:\n        if a[-1] == 'S':\n            if len(a) > len(b):\n                ans.append('<')\n            elif len(a) == len(b):\n                ans.append('=')\n            else:\n                ans.append('>')\n        if a[-1] == 'L':\n            if len(a) > len(b):\n                ans.append('>')\n            elif len(a) == len(b):\n                ans.append('=')\n            else:\n                ans.append('<')\n        if a[-1] == 'M':\n            ans.append('=')\n    elif a[-1] == 'M':\n        if b[-1] == 'L':\n            ans.append('<')\n        elif b[-1] == 'S':\n            ans.append('>')\n    elif a[-1] == 'S':\n        ans.append('<')\n    elif a[-1] == 'L':\n        ans.append('>')\nprint(*ans, sep='\\n')", "s = int(input())\nans = []\nfor i in range(s):\n    (a, b) = map(str, input().split())\n    (ra, rb) = (a[-1], b[-1])\n    if ra == 'M':\n        a = 0\n    elif ra == 'L':\n        a = (a.count('X') + 1) * 1\n    else:\n        a = (a.count('X') + 1) * -1\n    if rb == 'M':\n        b = 0\n    elif rb == 'L':\n        b = (b.count('X') + 1) * 1\n    else:\n        b = (b.count('X') + 1) * -1\n    if a > b:\n        ans.append('>')\n    elif a == b:\n        ans.append('=')\n    else:\n        ans.append('<')\nprint(*ans, sep='\\n')", "from sys import stdin\nt = int(stdin.readline().strip())\nfor i in range(t):\n    (n, m) = map(str, stdin.readline().split())\n    if n == m:\n        print('=')\n    elif n[len(n) - 1] == m[len(m) - 1]:\n        if n[len(n) - 1] == 'L':\n            if len(n) > len(m):\n                print('>')\n            else:\n                print('<')\n        elif len(n) < len(m):\n            print('>')\n        else:\n            print('<')\n    elif n[len(n) - 1] == 'S':\n        print('<')\n    elif n[len(n) - 1] == 'M':\n        if m[len(m) - 1] == 'S':\n            print('>')\n        else:\n            print('<')\n    else:\n        print('>')", "def vl(s):\n    return len(s) * 'ML'.find(s[-1])\nfor s in [*open(0)][1:]:\n    (a, b) = s.split()\n    print('=<>'[(vl(a) < vl(b)) - (vl(a) > vl(b))])", "for san in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x[-1]) * len(x) for x in san.split())\n    print('=<>'[(x < y) - (y < x)])", "t = int(input())\noutputs = []\n\ndef convert(size):\n    sizeValue = 0\n    if size.lower() == 'm':\n        sizeValue = 0\n    elif size.lower()[-1] == 's':\n        sizeValue = -len(size)\n    elif size.lower()[-1] == 'l':\n        sizeValue = len(size)\n    return sizeValue\nfor testCase in range(t):\n    (a, b) = input().split()\n    (a, b) = (convert(a), convert(b))\n    if a > b:\n        outputs.append('>')\n    elif a == b:\n        outputs.append('=')\n    elif a < b:\n        outputs.append('<')\nfor output in outputs:\n    print(output)", "def vl(s):\n    return len(s) * 'ML'.find(s[-1])\nfor s in [*open(0)][1:]:\n    (a, b) = s.split()\n    print('=<>'[(vl(a) < vl(b)) - (vl(a) > vl(b))])", "for s in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x[-1]) * len(x) for x in s.split())\n    print('=<>'[(x < y) - (y < x)])", "for s in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x[-1]) * len(x) for x in s.split())\n    print('=<>'[(x < y) - (y < x)])", "li = []\ntest_case = int(input())\nfor i in range(test_case):\n    (a, b) = input().split()\n    if 'S' in a and 'S' in b:\n        if len(a) > len(b):\n            li.append('<')\n        elif len(a) < len(b):\n            li.append('>')\n        elif len(a) == len(b):\n            li.append('=')\n    elif 'L' in a and 'L' in b:\n        if len(a) > len(b):\n            li.append('>')\n        elif len(a) < len(b):\n            li.append('<')\n        elif len(a) == len(b):\n            li.append('=')\n    elif 'S' in a and 'M' in b:\n        li.append('<')\n    elif 'M' in a and 'S' in b:\n        li.append('>')\n    elif 'S' in a and 'L' in b:\n        li.append('<')\n    elif 'L' in a and 'S' in b:\n        li.append('>')\n    elif 'M' in a and 'L' in b:\n        li.append('<')\n    elif 'L' in a and 'M' in b:\n        li.append('>')\n    elif 'M' in a and 'M' in b:\n        li.append('=')\nfor item in li:\n    print(item)", "for s in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x[-1]) * len(x) for x in s.split())\n    print('=<>'[(x < y) - (y < x)])", "from functools import lru_cache as cache\nfrom collections import Counter, defaultdict, deque\nimport math\nimport bisect\nimport string\nfrom heapq import *\nimport sys\n\ndef get_int():\n    return int(input())\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_str():\n    return sys.stdin.readline().strip()\n\ndef main():\n    testcases = get_int()\n    for _ in range(testcases):\n        ss = get_str()\n        (a, b) = ss.split()\n        print(solve(a, b))\n\ndef solve(a, b):\n    if a[-1] < b[-1]:\n        return '>'\n    if a[-1] > b[-1]:\n        return '<'\n    if a[-1] == 'S':\n        if len(a) > len(b):\n            return '<'\n        if len(a) < len(b):\n            return '>'\n    if a[-1] == 'L':\n        if len(a) > len(b):\n            return '>'\n        if len(a) < len(b):\n            return '<'\n    return '='\nmain()", "for s in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x[-1]) * len(x) for x in s.split())\n    print('=<>'[(x < y) - (y < x)])", "for s in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x[-1]) * len(x) for x in s.split())\n    print('=<>'[(x < y) - (y < x)])", "for s in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x[-1]) * len(x) for x in s.split())\n    print('=<>'[(x < y) - (y < x)])", "for s in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x[-1]) * len(x) for x in s.split())\n    print('=<>'[(x < y) - (y < x)])", "n = int(input())\nz = []\nfor i in range(n):\n    s = input().split()\n    if s[0] == s[1]:\n        z.append('=')\n    elif 'S' in s[0]:\n        if 'S' in s[1]:\n            if len(s[0]) > len(s[1]):\n                z.append('<')\n            else:\n                z.append('>')\n        else:\n            z.append('<')\n    elif 'M' in s[0]:\n        if 'S' in s[1]:\n            z.append('>')\n        else:\n            z.append('<')\n    elif 'L' in s[1]:\n        if len(s[0]) > len(s[1]):\n            z.append('>')\n        else:\n            z.append('<')\n    else:\n        z.append('>')\nfor i in range(n):\n    print(z[i])", "out = []\nfor _ in range(int(input())):\n    (s1, s2) = input().split()\n    if s1 == s2:\n        out.append('=')\n        continue\n    if s1 == 'M':\n        if s2[-1] == 'L':\n            out.append('<')\n        else:\n            out.append('>')\n    elif s2 == 'M':\n        if s1[-1] == 'L':\n            out.append('>')\n        else:\n            out.append('<')\n    elif s1[-1] == 'S':\n        if s2[-1] == 'L' or len(s2) < len(s1):\n            out.append('<')\n        else:\n            out.append('>')\n    elif s2[-1] == 'S' or len(s2) < len(s1):\n        out.append('>')\n    else:\n        out.append('<')\nfor i in out:\n    print(i)", "def test(tc):\n    s1 = 0\n    s2 = 0\n    if tc[0][-1] == 'M':\n        s1 = 0\n    elif tc[0][-1] == 'L':\n        s1 = len(tc[0])\n    else:\n        s1 = -len(tc[0])\n    if tc[1][-1] == 'M':\n        s2 = 0\n    elif tc[1][-1] == 'L':\n        s2 = len(tc[1])\n    else:\n        s2 = -len(tc[1])\n    if s1 < s2:\n        return '<'\n    elif s1 > s2:\n        return '>'\n    else:\n        return '='\n\ndef t_input():\n    a = input()\n    return a.split()\ntcaseno = int(input())\ntcases = []\nfor i in range(tcaseno):\n    tcases.append(t_input())\nresults = []\nfor tcase in tcases:\n    results.append(test(tcase))\nfor res in results:\n    print(res)", "t = int(input())\nfor i in range(t):\n    (n, m) = input().split()\n    if n == m:\n        print('=')\n    elif 'S' in n and 'S' not in m:\n        print('<')\n    elif 'M' in n and 'M' not in m and ('S' not in m):\n        print('<')\n    elif 'S' in m and 'S' not in n:\n        print('>')\n    elif 'M' in m and 'M' not in n and ('S' not in n):\n        print('>')\n    elif 'L' in n and 'L' not in m:\n        print('>')\n    elif 'L' in m and 'L' not in n:\n        print('<')\n    elif 'S' in n and 'S' in m:\n        if len(n) > len(m):\n            print('<')\n        else:\n            print('>')\n    elif 'M' in n and 'M' in m:\n        if len(n) > len(m):\n            print('<')\n        else:\n            print('>')\n    elif 'L' in n and 'L' in m:\n        if len(n) > len(m):\n            print('>')\n        else:\n            print('<')", "d = {'S': 0, 'M': 1, 'L': 2}\nT = int(input())\nfor _ in range(T):\n    (a, b) = input().split()\n    if d[a[-1]] > d[b[-1]]:\n        print('>')\n    elif d[a[-1]] < d[b[-1]]:\n        print('<')\n    elif len(a) == len(b):\n        print('=')\n    elif a[-1] == 'L':\n        print('>' if len(a) > len(b) else '<')\n    else:\n        print('>' if len(a) < len(b) else '<')", "import sys\nfrom math import gcd\n\ndef inp():\n    return sys.stdin.readline().strip()\n\ndef get_ints():\n    return map(int, inp().split())\n\ndef get_arr():\n    return list(map(int, inp().split()))\n\ndef get_int():\n    return int(inp())\nt = get_int()\nfor _ in range(t):\n    s = inp().split()\n    if s[0] == s[1]:\n        print('=')\n    elif s[0].find('S') != -1 and s[1].find('S') != -1:\n        if s[0].count('X') > s[1].count('X'):\n            print('<')\n        elif s[0].count('X') < s[1].count('X'):\n            print('>')\n        else:\n            print('=')\n    elif s[0].find('L') != -1 and s[1].find('L') != -1:\n        if s[0].count('X') > s[1].count('X'):\n            print('>')\n        elif s[0].count('X') < s[1].count('X'):\n            print('<')\n        else:\n            print('=')\n    elif s[0].find('L') != -1 and s[1].find('S') != -1:\n        print('>')\n    elif s[0].find('S') != -1 and s[1].find('L') != -1:\n        print('<')\n    elif s[0].find('M') != -1 and s[1].find('L') != -1:\n        print('<')\n    elif s[0].find('L') != -1 and s[1].find('M') != -1:\n        print('>')\n    elif s[0].find('M') != -1 and s[1].find('S') != -1:\n        print('>')\n    elif s[0].find('S') != -1 and s[1].find('M') != -1:\n        print('<')", "def check(a, b):\n    len_a = len(a)\n    len_b = len(b)\n    if a[-1] == 'S':\n        if b[-1] == 'M' or b[-1] == 'L':\n            return '<'\n        else:\n            if len_a > len_b:\n                return '<'\n            return '>'\n    if a[-1] == 'M':\n        if b[-1] == 'S':\n            return '>'\n        elif b[-1] == 'L':\n            return '<'\n    if a[-1] == 'L':\n        if b[-1] == 'S' or b[-1] == 'M':\n            return '>'\n        else:\n            if len_a > len_b:\n                return '>'\n            return '<'\n    return True\nt = int(input())\nfor _ in range(t):\n    (a, b) = input().split()\n    if a == b:\n        print('=')\n        continue\n    else:\n        print(check(a, b))", "a = int(input())\nfor x in range(a):\n    (k, l) = input().split()\n    if k[len(k) - 1] == l[len(l) - 1]:\n        if len(k) > len(l) and k[len(k) - 1] == 'S':\n            p = '<'\n        elif len(k) < len(l) and k[len(k) - 1] == 'S':\n            p = '>'\n        elif len(k) < len(l) and k[len(k) - 1] == 'L':\n            p = '<'\n        elif len(k) > len(l) and k[len(k) - 1] == 'L':\n            p = '>'\n        elif len(k) == len(l):\n            p = '='\n    elif k[len(k) - 1] == 'M' and l[len(l) - 1] == 'S':\n        p = '>'\n    elif k[len(k) - 1] == 'M' and l[len(l) - 1] == 'L':\n        p = '<'\n    elif k[len(k) - 1] == 'S' and l[len(l) - 1] == 'M':\n        p = '<'\n    elif k[len(k) - 1] == 'L' and l[len(l) - 1] == 'M':\n        p = '>'\n    elif k[len(k) - 1] == 'S' and l[len(l) - 1] == 'L':\n        p = '<'\n    elif k[len(k) - 1] == 'L' and l[len(l) - 1] == 'S':\n        p = '>'\n    print(p)", "num = int(input())\nArray = [0] * num\nfor i in range(num):\n    st = str(input())\n    st1 = st[:st.find(' ')]\n    st2 = st[st.find(' ') + 1:]\n    if st1[-1] == 'M' and st2[-1] == 'S':\n        Array[i] = '>'\n    elif st1[-1] == 'S' and st2[-1] == 'M':\n        Array[i] = '<'\n    elif st1[-1] == 'M' and st2[-1] == 'L':\n        Array[i] = '<'\n    elif st1[-1] == 'L' and st2[-1] == 'M':\n        Array[i] = '>'\n    elif st1[-1] == 'M' and st2[-1] == 'M':\n        Array[i] = '='\n    elif st1[-1] == 'S' and st2[-1] == 'S':\n        if len(st1) > len(st2):\n            Array[i] = '<'\n        elif len(st1) < len(st2):\n            Array[i] = '>'\n        elif len(st1) == len(st2):\n            Array[i] = '='\n    elif st1[-1] == 'L' and st2[-1] == 'L':\n        if len(st1) > len(st2):\n            Array[i] = '>'\n        elif len(st1) < len(st2):\n            Array[i] = '<'\n        elif len(st1) == len(st2):\n            Array[i] = '='\n    elif st1[-1] == 'S' and st2[-1] == 'L':\n        Array[i] = '<'\n    elif st1[-1] == 'L' and st2[-1] == 'S':\n        Array[i] = '>'\nfor i in range(num):\n    print(Array[i])", "r = {1: '>', 0: '<'}\nfor i in range(int(input())):\n    (s1, s2) = input().split()\n    if s1[-1] != s2[-1]:\n        if s1[-1] > s2[-1]:\n            print('<')\n        else:\n            print('>')\n    else:\n        x1 = s1.count('X')\n        x2 = s2.count('X')\n        if x1 - x2 == 0:\n            print('=')\n        elif s1[-1] == 'L':\n            print(r[x1 > x2])\n        else:\n            print(r[not x1 > x2])", "t = int(input())\nsize_str = [input().split(' ') for _ in range(t)]\nfor _ in size_str:\n    if _[0][-1] > _[1][-1]:\n        print('<')\n    if _[0][-1] < _[1][-1]:\n        print('>')\n    if _[0][-1] == _[1][-1]:\n        if _[0][-1] == 'M':\n            print('=')\n        if _[0][-1] == 'S':\n            if _[0].count('X') > _[1].count('X'):\n                print('<')\n            if _[0].count('X') < _[1].count('X'):\n                print('>')\n            if _[0].count('X') == _[1].count('X'):\n                print('=')\n        if _[0][-1] == 'L':\n            if _[0].count('X') > _[1].count('X'):\n                print('>')\n            if _[0].count('X') < _[1].count('X'):\n                print('<')\n            if _[0].count('X') == _[1].count('X'):\n                print('=')", "t = int(input())\nfor t1 in range(t):\n    (a, b) = input().split()\n    count1 = len(a) - 1\n    count2 = len(b) - 1\n    if a == b:\n        print('=')\n        continue\n    if a[-1] == b[-1]:\n        if a[-1] == 'S':\n            if count1 < count2:\n                print('>')\n            else:\n                print('<')\n        elif count1 < count2:\n            print('<')\n        else:\n            print('>')\n    elif a[-1] == 'S':\n        print('<')\n    elif a[-1] == 'M':\n        if b[-1] == 'S':\n            print('>')\n        else:\n            print('<')\n    else:\n        print('>')", "ans = []\nfor _ in range(int(input())):\n    (a, b) = input().split()\n    la = len(a)\n    lb = len(b)\n    if ascii(a[la - 1]) < ascii(b[lb - 1]):\n        ans.append('>')\n    elif ascii(a[la - 1]) > ascii(b[lb - 1]):\n        ans.append('<')\n    elif a[la - 1] == 'S':\n        if la > lb:\n            ans.append('<')\n        elif la < lb:\n            ans.append('>')\n        else:\n            ans.append('=')\n    elif a[la - 1] == 'L':\n        if la > lb:\n            ans.append('>')\n        elif la < lb:\n            ans.append('<')\n        else:\n            ans.append('=')\n    else:\n        ans.append('=')\nfor e in ans:\n    print(e)", "def test(t):\n    size = []\n    t = t.split(' ')\n    for i in range(2):\n        if 'L' in t[i]:\n            s = 3\n        elif 'M' in t[i]:\n            s = 2\n        else:\n            s = 1\n        size.append((s, str(t[i]).count('X')))\n    if size[0][0] == size[1][0]:\n        if size[0][0] == 1:\n            if size[0][1] == size[1][1]:\n                print('=')\n            elif size[0][1] > size[1][1]:\n                print('<')\n            else:\n                print('>')\n        elif size[0][1] == size[1][1]:\n            print('=')\n        elif size[0][1] > size[1][1]:\n            print('>')\n        else:\n            print('<')\n    elif size[0][0] > size[1][0]:\n        print('>')\n    else:\n        print('<')\ninp = []\nfor i in range(int(input())):\n    t = input()\n    inp.append(t)\nfor i in inp:\n    test(i)", "t = int(input())\na = [[0] * 2] * t\nfor j in range(t):\n    (str1, str2) = map(str, input().split())\n    a[j] = (str1, str2)\nfor i in range(t):\n    str1 = a[i][0]\n    str2 = a[i][1]\n    if str1 == str2:\n        print('=')\n    else:\n        if str1[-1] == 'S':\n            mas1 = -1 - (len(str1) - 1)\n        elif str1[-1] == 'L':\n            mas1 = 1 + (len(str1) - 1)\n        elif str1[-1] == 'M':\n            mas1 = 0\n        if str2[-1] == 'S':\n            mas2 = -1 - (len(str2) - 1)\n        elif str2[-1] == 'L':\n            mas2 = 1 + (len(str2) - 1)\n        elif str2[-1] == 'M':\n            mas2 = 0\n        if mas1 > mas2:\n            print('>')\n        else:\n            print('<')", "for _ in range(int(input())):\n    (a, b) = input().split()\n    d = {'S': -1, 'M': 2, 'L': 3}\n    if d[a[-1]] < d[b[-1]]:\n        print('<')\n    elif d[a[-1]] > d[b[-1]]:\n        print('>')\n    elif len(a) * d[a[-1]] > len(b) * d[b[-1]]:\n        print('>')\n    elif len(a) * d[a[-1]] < len(b) * d[b[-1]]:\n        print('<')\n    else:\n        print('=')", "n = int(input())\nls = []\nfor i in range(n):\n    ls.append(input().split())\nans = []\nd = {'M': 2, 'S': 1, 'L': 3}\n\ndef getres(ls):\n    for (x, y) in ls:\n        if d[x[-1]] < d[y[-1]]:\n            ans.append('<')\n        elif d[x[-1]] > d[y[-1]]:\n            ans.append('>')\n        elif x == y:\n            ans.append('=')\n        elif x[-1] == 'S':\n            if len(x) > len(y):\n                ans.append('<')\n            else:\n                ans.append('>')\n        elif len(x) > len(y):\n            ans.append('>')\n        else:\n            ans.append('<')\ngetres(ls)\nfor i in ans:\n    print(i)", "n = int(input())\nans = []\nfor i in range(n):\n    (m, n) = map(str, input().split())\n    if m[-1] == n[-1]:\n        if len(m) == len(n):\n            ans.append('=')\n        elif m[-1] == 'S' and len(m) > len(n) or (m[-1] == 'L' and len(m) < len(n)):\n            ans.append('<')\n        else:\n            ans.append('>')\n    elif m[-1] == 'S' and n[-1] == 'M' or (m[-1] == 'S' and n[-1] == 'L') or (m[-1] == 'M' and n[-1] == 'L'):\n        ans.append('<')\n    else:\n        ans.append('>')\nfor s in ans:\n    print(str(s))", "from sys import stdin, maxsize\nfrom collections import defaultdict\nfrom math import ceil, factorial\nfrom copy import deepcopy\nimport itertools\nfrom queue import PriorityQueue\nimport heapq\n\ndef rei():\n    return reis()[0]\n\ndef reis():\n    return list(map(int, stdin.readline().strip().split(' ')))\n\ndef res():\n    return stdin.readline().rstrip()\nd = {'S': 0, 'M': 1, 'L': 2}\n\ndef solve():\n    (a, b) = res().split(' ')\n    aa = d[a[-1]]\n    bb = d[b[-1]]\n    if aa < bb:\n        print('<')\n        return\n    if aa > bb:\n        print('>')\n        return\n    elif a[-1] == 'S':\n        if len(a) == len(b):\n            print('=')\n        elif len(a) > len(b):\n            print('<')\n        else:\n            print('>')\n    elif a[-1] == 'M':\n        print('=')\n    elif len(a) == len(b):\n        print('=')\n    elif len(a) > len(b):\n        print('>')\n    else:\n        print('<')\nt = rei()\nfor _ in range(t):\n    solve()", "t = int(input())\nres = []\n\ndef mat(a, b):\n    s = -1\n    m = 0\n    x = 1\n    large = 2\n    gen = 0\n    a = a.upper()\n    for i in a:\n        if i == 'X':\n            x += 2\n        elif i != 'X':\n            if i == 'L':\n                gen = x * large\n            elif i == 'S':\n                gen = x * s\n            elif i == 'M':\n                gen = 0\n    s1 = -1\n    m1 = 0\n    x1 = 1\n    large1 = 2\n    gen1 = 0\n    b = b.upper()\n    for i1 in b:\n        if i1 == 'X':\n            x1 += 2\n        elif i1 != 'X':\n            if i1 == 'L':\n                gen1 = x1 * large1\n            elif i1 == 'S':\n                gen1 = x1 * s1\n            elif i1 == 'M':\n                gen1 = 0\n    if gen > gen1:\n        return '>'\n    elif gen == gen1:\n        return '='\n    else:\n        return '<'\nfor i in range(t):\n    (one, two) = input().split()\n    res.append(mat(one, two))\nfor i in res:\n    print(i)", "for s in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x.strip('X')) * len(x) for x in s.split())\n    print('=<>'[(x < y) - (y < x)])", "t = int(input())\nfor i in range(t):\n    (a, b) = input().split()\n    c = 0\n    v = 0\n    if a[-1] != b[-1]:\n        if a[-1] == 'L':\n            print('>')\n        elif a[-1] == 'M' and b[-1] != 'L':\n            print('>')\n        else:\n            print('<')\n    else:\n        from collections import Counter\n        letter = 'X'\n        counts = Counter(a)\n        c = counts[letter]\n        counts1 = Counter(b)\n        v = counts1[letter]\n        if a[-1] == 'S':\n            if c > v:\n                print('<')\n            elif v > c:\n                print('>')\n            else:\n                print('=')\n        elif c > v:\n            print('>')\n        elif v > c:\n            print('<')\n        else:\n            print('=')", "for sa in [*open(0)][1:]:\n    (x, y) = ('ML'.find(x[-1]) * len(x) for x in sa.split())\n    print('=<>'[(x < y) - (y < x)])", "t = int(input(''))\nres = []\n\ndef mat(a, b):\n    s = -1\n    m = 0\n    x = 1\n    large = 2\n    gen = 0\n    a = a.upper()\n    for i in a:\n        if i == 'X':\n            x += 2\n        elif i != 'X':\n            if i == 'L':\n                gen = x * large\n            elif i == 'S':\n                gen = x * s\n            elif i == 'M':\n                gen = 0\n    s1 = -1\n    m1 = 0\n    x1 = 1\n    large1 = 2\n    gen1 = 0\n    b = b.upper()\n    for i1 in b:\n        if i1 == 'X':\n            x1 += 2\n        elif i1 != 'X':\n            if i1 == 'L':\n                gen1 = x1 * large1\n            elif i1 == 'S':\n                gen1 = x1 * s1\n            elif i1 == 'M':\n                gen1 = 0\n    if gen > gen1:\n        return '>'\n    elif gen == gen1:\n        return '='\n    else:\n        return '<'\nfor i in range(t):\n    (one, two) = input('').split()\n    res.append(mat(one, two))\nfor i in res:\n    print(i)", "tc = int(input())\nlst = []\nd = {'S': -1, 'M': 1, 'L': 2}\nfor i in range(tc):\n    (a, b) = map(str, input().split())\n    c1 = (a.count('X') + 1) * d[a[-1]]\n    c2 = (b.count('X') + 1) * d[b[-1]]\n    if c1 > c2:\n        lst.append('>')\n    if c1 < c2:\n        lst.append('<')\n    if c1 == c2:\n        lst.append('=')\nfor i in lst:\n    print(i)", "n = int(input())\nXa = 0\nXb = 0\nSa = 0\nSb = 0\nLa = 0\nLb = 0\nM = 0\noutput = []\nfor i in range(n):\n    (a, b) = map(str, input().split())\n    if 'X' in a or b:\n        Xa += len(a) - 1\n        Xb += len(b) - 1\n    if 'S' in a:\n        Sa -= 1\n    if 'S' in b:\n        Sb -= 1\n    if 'L' in a:\n        La += 1\n    if 'L' in b:\n        Lb += 1\n    if 'X' and 'S' in a:\n        Xa *= -1\n    if 'X' and 'S' in b:\n        Xb *= -1\n    A = Xa + La + Sa + M\n    B = Xb + Lb + Sb + M\n    Xa = 0\n    Xb = 0\n    Sa = 0\n    Sb = 0\n    La = 0\n    Lb = 0\n    M = 0\n    if A > B:\n        output.append('>')\n    elif A < B:\n        output.append('<')\n    else:\n        output.append('=')\nfor j in output:\n    print(j)", "for _ in range(int(input())):\n    (x, y) = input().split()\n    if x == y:\n        print('=')\n    elif x[-1] != y[-1]:\n        if x[-1] > y[-1]:\n            print('<')\n        else:\n            print('>')\n    elif x[-1] == 'S':\n        print('>' if x.count('X') < y.count('X') else '<')\n    elif x[-1] == 'L':\n        print('<' if x.count('X') < y.count('X') else '>')", "def checkSize(shirts):\n    (shirt1, shirt2) = shirts.split(' ')\n    index1 = len(shirt1) - 1\n    index2 = len(shirt2) - 1\n    dic = {'S': 2, 'M': 3, 'L': 4, 'X': 1}\n    if shirt1[index1] == shirt2[index2] == 'S':\n        if len(shirt1) > len(shirt2):\n            return '<'\n        elif len(shirt1) < len(shirt2):\n            return '>'\n        return '='\n    sum1 = 0\n    sum2 = 0\n    while index1 >= 0 and index2 >= 0:\n        sum1 += dic.get(shirt1[index1])\n        sum2 += dic.get(shirt2[index2])\n        if sum1 > sum2:\n            return '>'\n        elif sum1 < sum2:\n            return '<'\n        index1 -= 1\n        index2 -= 1\n    if index1 >= 0:\n        return '>'\n    elif index2 >= 0:\n        return '<'\n    else:\n        return '='\ntestCase = []\nsize = int(input())\nfor i in range(size):\n    testCase.append(input())\nfor i in testCase:\n    print(checkSize(i))", "no_test = int(input())\nans = []\nfor i in range(no_test):\n    shirt_size = list(input().split(' '))\n    size_order = {'S': 0, 'M': 1, 'L': 2}\n    shirt_one = len(shirt_size[0])\n    shirt_two = len(shirt_size[1])\n    if shirt_size[0][shirt_one - 1] == shirt_size[1][shirt_two - 1]:\n        if shirt_size[0][shirt_one - 1] == 'S':\n            if shirt_one > shirt_two:\n                ans.append('<')\n            elif shirt_one == shirt_two:\n                ans.append('=')\n            else:\n                ans.append('>')\n        elif shirt_one > shirt_two:\n            ans.append('>')\n        elif shirt_one == shirt_two:\n            ans.append('=')\n        else:\n            ans.append('<')\n    elif size_order[shirt_size[0][shirt_one - 1]] > size_order[shirt_size[1][shirt_two - 1]]:\n        ans.append('>')\n    else:\n        ans.append('<')\nfor i in ans:\n    print(i)", "size = int(input())\nfor index in range(1, size + 1):\n    (tshirt_1, tshirt_2) = map(str, input().split())\n    if len(tshirt_1) == len(tshirt_2):\n        if tshirt_1[-1] == tshirt_2[-1]:\n            print('=')\n        elif tshirt_1[-1] > tshirt_2[-1]:\n            print('<')\n        else:\n            print('>')\n    elif tshirt_1[-1] == tshirt_2[-1] and tshirt_1[-1] == 'L':\n        if len(tshirt_1) > len(tshirt_2):\n            print('>')\n        else:\n            print('<')\n    elif tshirt_1[-1] == tshirt_2[-1] and tshirt_1[-1] == 'S':\n        if len(tshirt_1) > len(tshirt_2):\n            print('<')\n        else:\n            print('>')\n    elif tshirt_1[-1] > tshirt_2[-1]:\n        print('<')\n    else:\n        print('>')", "import sys\nreadline = sys.stdin.readline\nS = 'SML'\nT = int(readline())\nfor _ in range(T):\n    (a, b) = readline().split()\n    a_idx = S.index(a[-1])\n    b_idx = S.index(b[-1])\n    if a_idx == b_idx:\n        if a_idx == 0:\n            if len(a) == len(b):\n                print('=')\n            elif len(a) > len(b):\n                print('<')\n            else:\n                print('>')\n        elif a_idx == 1:\n            print('=')\n        elif len(a) == len(b):\n            print('=')\n        elif len(a) > len(b):\n            print('>')\n        else:\n            print('<')\n    elif a_idx < b_idx:\n        print('<')\n    else:\n        print('>')", "t = int(input())\noutput = []\nfor i in range(t):\n    (a, b) = input().split()\n    aS = a.count('S')\n    bS = b.count('S')\n    aM = a.count('M')\n    bM = b.count('M')\n    aL = a.count('L')\n    bL = b.count('L')\n    aX = a.count('X')\n    bX = b.count('X')\n    if aL == 1 or bL == 1:\n        if aL > bL:\n            output.append('>')\n        if aL < bL:\n            output.append('<')\n        if aL == 1 and bL == 1:\n            if aX > bX:\n                output.append('>')\n            elif aX < bX:\n                output.append('<')\n            else:\n                output.append('=')\n    elif aM == 1 or bM == 1:\n        if aM < bM:\n            output.append('<')\n        elif aM > bM:\n            output.append('>')\n        else:\n            output.append('=')\n    elif aX > bX:\n        output.append('<')\n    elif aX < bX:\n        output.append('>')\n    else:\n        output.append('=')\nfor i in output:\n    print(i)", "for _ in range(int(input())):\n    (s1, s2) = input().split()\n    if s1 == s2:\n        print('=')\n        continue\n    n1 = len(s1) * {'S': -1, 'M': 0, 'L': 1}[s1[-1]]\n    n2 = len(s2) * {'S': -1, 'M': 0, 'L': 1}[s2[-1]]\n    print('>' if n1 > n2 else '<')", "def tshirt_value(tshirt):\n    tshirt_sizes = {'S': -1, 'M': 0, 'L': 1}\n    value = 1\n    for letter in tshirt:\n        value *= 10 if letter == 'X' else tshirt_sizes[letter]\n    return value\n\ndef main():\n    number_of_test_cases = int(input())\n    answers = []\n    for test_case in range(number_of_test_cases):\n        (tshirt_1, tshirt_2) = input().split()\n        value_1 = tshirt_value(tshirt_1)\n        value_2 = tshirt_value(tshirt_2)\n        answers.append('<' if value_1 < value_2 else '=' if value_1 == value_2 else '>')\n    for answer in answers:\n        print(answer)\nmain()", "dic = {'S': 0, 'M': 1, 'L': 2}\ntestcases = int(input())\nfor _ in range(testcases):\n    (a, b) = input().split()\n    if dic[a[-1]] > dic[b[-1]]:\n        print('>')\n    elif dic[a[-1]] < dic[b[-1]]:\n        print('<')\n    else:\n        ax = a.count('X')\n        bx = b.count('X')\n        if a[-1] == 'S':\n            if ax > bx:\n                print('<')\n            elif ax < bx:\n                print('>')\n            else:\n                print('=')\n        elif ax > bx:\n            print('>')\n        elif ax < bx:\n            print('<')\n        else:\n            print('=')", "n = int(input())\nfor i in range(n):\n    size = input().split()\n    (x, y) = (size[0], size[1])\n    if x[-1] == 'S' and y[-1] == 'M':\n        print('<')\n    elif x[-1] == 'M' and y[-1] == 'S':\n        print('>')\n    elif x[-1] == 'M' and y[-1] == 'L':\n        print('<')\n    elif x[-1] == 'L' and y[-1] == 'M':\n        print('>')\n    elif x[-1] == 'S' and y[-1] == 'L':\n        print('<')\n    elif x[-1] == 'L' and y[-1] == 'S':\n        print('>')\n    elif x[-1] == y[-1]:\n        if x[-1] == 'M':\n            print('=')\n        elif x[-1] == 'L':\n            if len(x) == len(y):\n                print('=')\n            elif len(x) < len(y):\n                print('<')\n            else:\n                print('>')\n        elif x[-1] == 'S':\n            if len(x) == len(y):\n                print('=')\n            elif len(x) < len(y):\n                print('>')\n            else:\n                print('<')", "testcases = int(input())\nsizesDict = {'S': -1, 'M': 0, 'L': 1}\nfor _ in range(testcases):\n    sizes = input().split()\n    size1 = sizes[0]\n    size2 = sizes[1]\n    if sizesDict[size1[-1]] > sizesDict[size2[-1]]:\n        print('>')\n    elif sizesDict[size1[-1]] < sizesDict[size2[-1]]:\n        print('<')\n    elif len(size1) == len(size2):\n        print('=')\n    elif len(size1) > len(size2):\n        if size1[-1] == 'L':\n            print('>')\n        else:\n            print('<')\n    elif size1[-1] == 'L':\n        print('<')\n    else:\n        print('>')"]