["import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, m) = sorted(map(int, input().split()))\n    if n == 1 and m > 2:\n        print(-1)\n        return\n    print((m - 1) * 2 - (m - n) % 2)\nfor _ in [0] * int(input()):\n    solve()", "for i in [*open(0)][1:]:\n    (n, m) = sorted(map(int, i.split()))\n    print([(n - 1) * 2 + (m - n) // 2 * 4 + (m - n) % 2, [(m == 1) - 1, 1][m == 2]][n == 1])", "test = eval(input(''))\nrows = []\ncolumn = []\nfor i in range(test):\n    (x, y) = [int(x) for x in input().split()]\n    rows.append(x)\n    column.append(y)\nfor j in range(len(rows)):\n    count = 0\n    if rows[j] == 1 and column[j] == 1:\n        print(0)\n    elif rows[j] == 1 and column[j] > 2 or (rows[j] > 2 and column[j] == 1):\n        print(-1)\n    elif rows[j] == column[j]:\n        print(rows[j] + column[j] - 2)\n    else:\n        if rows[j] > column[j]:\n            count += column[j] * 2 - 2\n        else:\n            count += rows[j] * 2 - 2\n        diff = abs(column[j] - rows[j]) + 1\n        if diff % 2 == 1:\n            count += 2 * diff - 2\n        else:\n            count += 2 * diff - 3\n        print(count)", "import sys\nN = int(sys.stdin.readline().strip())\nfor _ in range(N):\n    (n, m) = map(int, sys.stdin.readline().strip().split(' '))\n    if abs(n - m) >= 2:\n        if n == 1 or m == 1:\n            print(-1)\n        else:\n            print(m + n - 2 + abs(n - m) // 2 * 2)\n    else:\n        print(n + m - 2)", "import math\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    if n == 1 and m == 1:\n        print(0)\n    elif n == 1 and m == 2:\n        print(1)\n    elif n == 2 and m == 1:\n        print(1)\n    elif n == 1 or m == 1:\n        print(-1)\n    elif n == m:\n        print(2 * (n - 1))\n    else:\n        ans = (min(n, m) - 1) * 2\n        diff = max(m, n) - min(m, n)\n        if diff % 2 == 0:\n            ans = ans + diff * 2\n        else:\n            ans = ans + (diff - 1) * 2\n            ans = ans + 1\n        print(ans)", "def sol(x):\n    if x % 2 == 0:\n        return 2 * x\n    else:\n        return 2 * (x - 1) + 1\nt = int(input())\nfor _ in range(t):\n    m = input().split()\n    a = max(int(m[0]), int(m[1]))\n    b = min(int(m[0]), int(m[1]))\n    if b == 1:\n        if a == 1:\n            print(0)\n        elif a == 2:\n            print(1)\n        else:\n            print(-1)\n    else:\n        print(2 * (b - 1) + sol(a - b))", "t = int(input())\notv = [0] * t\nfor T in range(t):\n    (n, m) = map(int, input().split())\n    (n, m) = (max(n, m), min(m, n))\n    if m == 1 and n - m > 1:\n        otv[T] = -1\n        continue\n    if n - m >= 2:\n        otv[T] = m + n + (n - m) // 2 * 2 - 2\n    else:\n        otv[T] = m + n - 2\nfor i in range(t):\n    print(otv[i])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n == 1 and m > 2:\n        print(-1)\n    elif m == 1 and n > 2:\n        print(-1)\n    elif n == m:\n        print(2 * (n - 1))\n    else:\n        mn = min(m, n)\n        mx = max(m, n)\n        ans = 2 * (mn - 1)\n        if (mx - mn) % 2 == 1:\n            ans += 2 * (mx - mn) - 1\n        else:\n            ans += 2 * (mx - mn)\n        print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n < m:\n        (n, m) = (m, n)\n    if n > 2 and m == 1:\n        print(-1)\n    elif n - m < 2:\n        print(n + m - 2)\n    else:\n        x = n - m - 1\n        if x % 2 == 1:\n            x += 1\n        print(n + m - 2 + x)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    if n == 1 and m > 2:\n        print(-1)\n    elif n > 2 and m == 1:\n        print(-1)\n    elif abs(n - m) < 2:\n        print(n + m - 2)\n    else:\n        print(min(n, m) * 2 - 2 + 2 * (max(n, m) - min(n, m)) - (n - m) % 2)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n == 1 and m == 1:\n        print(0)\n    elif n == 1 and m == 2 or (n == 2 and m == 1):\n        print(1)\n    elif n == 1 or m == 1:\n        print(-1)\n    elif n == m:\n        print((n - 1) * 2)\n    elif n < m:\n        if (m - n) % 2 == 0:\n            print((n - 1) * 2 + (m - n) * 2)\n        else:\n            print((n - 1) * 2 + (m - n) * 2 - 1)\n    elif (m - n) % 2 == 0:\n        print((m - 1) * 2 + (n - m) * 2)\n    else:\n        print((m - 1) * 2 + (n - m) * 2 - 1)", "noot = int(input())\nfor nool in range(noot):\n    (a, b) = [int(x) for x in input().split()]\n    (a, b) = (min(a, b), max(a, b))\n    if a == 1:\n        if b - a > 1:\n            print(-1)\n        else:\n            print(b + a - 2)\n    else:\n        ans = 2 * a - 2\n        if (b - a) % 2 == 0:\n            print(ans + (b - a) * 2)\n        else:\n            print(ans + (b - 1 - a) * 2 + 1)", "t = int(input())\n\ndef changer(a):\n    if a == '1':\n        return '0'\n    return '1'\n\ndef solve():\n    (n, m) = map(int, input().split())\n    if min(n, m) == 1 and max(n, m) > 2:\n        print(-1)\n        return\n    if min(n, m) == 1 and max(n, m) == 1:\n        print(0)\n        return\n    if min(n, m) == 1 and max(n, m) == 2:\n        print(1)\n        return\n    sq = 2 * min(n, m) - 2\n    if (max(n, m) - min(n, m)) % 2 == 1:\n        print(sq + 2 * (max(n, m) - min(n, m)) - 1)\n        return\n    print(sq + 2 * (max(n, m) - min(n, m)))\nfor i in range(t):\n    solve()", "import sys\ninp = sys.stdin.readline()\ntest = int(inp.strip('\\n'))\nfor i in range(test):\n    inp = sys.stdin.readline()\n    (n, m) = list(map(int, inp.strip('\\n').split()))\n    n -= 1\n    m -= 1\n    if n == 0 and m == 0:\n        sys.stdout.write('0\\n')\n    elif n == 0:\n        if m > 1:\n            sys.stdout.write('-1\\n')\n        else:\n            sys.stdout.write('1\\n')\n    elif m == 0:\n        if n > 1:\n            sys.stdout.write('-1\\n')\n        else:\n            sys.stdout.write('1\\n')\n    else:\n        val = n + m + abs(n - m)\n        if abs(n - m) % 2:\n            val -= 1\n        sys.stdout.write(str(val) + '\\n')", "def solve():\n    x = 2 * abs(min(n, m) - 1)\n    if n == 1 and m == 1:\n        return 0\n    if n == 1 and m > 2 or (m == 1 and n > 2):\n        return -1\n    if n >= m:\n        if (n - m) % 2 == 0:\n            x += (n - m) // 2 + 3 * (n - m) // 2\n        else:\n            x += 1 + (n - m - 1) // 2 + 3 * (n - m - 1) // 2\n    elif (m - n) % 2 == 0:\n        x += (m - n) // 2 + 3 * (m - n) // 2\n    else:\n        x += 1 + (m - n - 1) // 2 + 3 * (m - n - 1) // 2\n    return x\nfrom sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    (n, m) = [int(x) for x in input().split()]\n    print(solve())", "a = int(input())\nfor aa in range(a):\n    b = input().split(' ')\n    b[0] = int(b[0]) - 1\n    b[1] = int(b[1]) - 1\n    if b[0] - b[1] == 0:\n        print(2 * b[0])\n    elif b[0] - b[1] == 1:\n        print(2 * b[0] - 1)\n    elif b[0] - b[1] == -1:\n        print(2 * b[0] + 1)\n    elif b[1] == 0 or b[0] == 0:\n        print(-1)\n    else:\n        if b[1] > b[0]:\n            temp = b[0]\n            b[0] = b[1]\n            b[1] = temp\n        if (b[0] - b[1]) % 2 == 0:\n            print(2 * (b[0] - 1) + 2)\n        else:\n            print(2 * (b[0] - 1) + 1)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    if n == 1 and m == 1:\n        print(0)\n    elif n == 1 and m == 2 or (n == 2 and m == 1):\n        print(1)\n    elif n == 1 or m == 1:\n        print(-1)\n    else:\n        maximum = max(n, m)\n        minimum = min(n, m)\n        x = 0\n        if (maximum - minimum) % 2 == 1:\n            x = (minimum - 1) * 2 + (maximum - minimum) * 2 - 1\n        else:\n            x = (minimum - 1) * 2 + (maximum - minimum) * 2\n        print(str(x))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n < m:\n        (n, m) = (m, n)\n    if m == 1 and n > 2:\n        print(-1)\n        continue\n    count = 2 * (m - 1)\n    count += 4 * ((n - m) // 2)\n    if (n - m) % 2 == 1:\n        count += 1\n    print(count)", "cases = int(input())\nfor case in range(cases):\n    (n, m) = map(int, input().split())\n    if n < m:\n        (n, m) = (m, n)\n    if m == 1:\n        if n == 1:\n            print(0)\n        elif n == 2:\n            print(1)\n        else:\n            print(-1)\n    else:\n        output = 2 * (m - 1)\n        left = n - m\n        needed = 1\n        output += (left + 1) // 2\n        output += 3 * (left - (left + 1) // 2)\n        print(output)", "problems = int(input())\nfor problem_no in range(problems):\n    line = str(input())\n    (n, m) = [int(n) for n in line.split(' ')]\n    n -= 1\n    m -= 1\n    ans = None\n    if n > 1 and m == 0 or (n == 0 and m > 1):\n        ans = -1\n    else:\n        ans = max(n, m) * 2\n        if (n - m) % 2 == 1:\n            ans -= 1\n    to_print = str(ans)\n    print(to_print)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    if n == 1 and m > 2 or (m == 1 and n > 2):\n        print(-1)\n    elif (max(n, m) - min(n, m)) % 2 == 0:\n        print((max(n, m) - 1) * 2)\n    else:\n        print((max(n, m) - 1) * 2 - 1)", "n = int(input())\nfor i in range(n):\n    temp = input().split(' ')[:2]\n    a = int(temp[0])\n    b = int(temp[1])\n    if a == 1 and b >= 3:\n        print('-1')\n    elif b == 1 and a >= 3:\n        print('-1')\n    elif abs(a - b) % 2 == 0:\n        print((min(a, b) - 1) * 2 + abs(a - b) * 2)\n    else:\n        print((min(a, b) - 1) * 2 + (abs(a - b) - 1) * 2 + 1)", "t = int(input())\nfor _ in range(t):\n    (n, m) = [int(x) for x in input().split()]\n    res = 0\n    (max_size, min_size) = (max(n, m), min(n, m))\n    if n == 1 or m == 1:\n        if max_size >= 3:\n            print(-1)\n        else:\n            print(max_size - 1)\n    elif (max_size - min_size) % 2 == 0:\n        print((max_size - 1) * 2)\n    else:\n        print((max_size - 1) * 2 - 1)", "for t in range(int(input())):\n    (x, y) = map(int, input().split())\n    diff = abs(x - y)\n    if (x == 1 or y == 1) and (x > 2 or y > 2):\n        print(-1)\n    else:\n        print((min(x, y) - 1) * 2 + diff // 2 * 4 + (diff % 2 != 0))", "import math\nfor i in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n == m:\n        print(n + m - 2)\n    elif n == 1 and m == 2 or (n == 2 and m == 1):\n        print(1)\n    elif n == 1 and m > 2 or (n > 2 and m == 1):\n        print(-1)\n    elif m % 2 == 1 and n % 2 != 1 or (m % 2 != 1 and n % 2 == 1):\n        print(min(m, n) * 2 - 2 + abs(m - n) * 2 - 1)\n    else:\n        print(min(m, n) * 2 - 2 + abs(m - n) * 2)", "def solve():\n    (n, m) = map(int, input().split())\n    if n == 1 and m > 2:\n        return -1\n    if m == 1 and n > 2:\n        return -1\n    doKota = 2 * min(m, n) - 2\n    ostanek = max(m, n) - min(m, n)\n    if ostanek % 2 == 0:\n        doKota += ostanek * 2\n    else:\n        doKota += (ostanek - 1) * 2 + 1\n    return doKota\nt = int(input())\nwhile t > 0:\n    print(solve())\n    t -= 1", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    ans = 0\n    if (n == 1 or m == 1) and abs(m - n) > 1:\n        print(-1)\n        continue\n    if n == m:\n        ans += (n - 1) * 2\n    elif n > m:\n        ans += (m - 1) * 2 + (n - m) // 2 * 4 + (n - m) % 2\n    else:\n        ans += (n - 1) * 2 + (m - n) // 2 * 4 + (m - n) % 2\n    print(ans)", "t = int(input())\n\ndef q(n, m):\n    if n * m < 3:\n        return n * m - 1\n    elif n == 1 or m == 1:\n        return -1\n    else:\n        v = abs(m - n) // 2 * 2\n        v += m + n - 2\n        return v\nfor i in range(t):\n    a = input().split()\n    (n, m) = (int(a[0]), int(a[1]))\n    print(q(n, m))", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    if n == 1 and m - n >= 2 or (m == 1 and n - m >= 2):\n        print(-1)\n    elif (n + m) % 2 == 1:\n        print(max(n, m) * 2 - 3)\n    else:\n        print(max(n, m) * 2 - 2)", "import sys, math\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == 1 and b == 1:\n        print(0)\n    elif a == 1 and b == 2 or (a == 2 and b == 1):\n        print(1)\n    elif a == 1 or b == 1:\n        print(-1)\n    elif a == b:\n        print(2 * (a - 1))\n    elif abs(b - a) % 2 == 0:\n        print(2 * min(a - 1, b - 1) + 2 * abs(b - a))\n    else:\n        print(2 * min(a - 1, b - 1) + 2 * (abs(b - a) - 1) + 1)", "t = int(input())\nwhile t > 0:\n    (n, m) = [int(x) for x in input().split()]\n    if n == 1 and m == 1:\n        print(0)\n    elif n == 1 and m == 2 or (n == 2 and m == 1):\n        print(1)\n    elif n == 1 or m == 1:\n        print(-1)\n    else:\n        n = n - 1\n        m = m - 1\n        lar = m if m > n else n\n        small = m + n - lar\n        if (lar - small) % 2 == 1:\n            print(2 * small + 2 * (lar - small - 1) + 1)\n        else:\n            print(2 * small + 2 * (lar - small))\n    t = t - 1", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == b == 1:\n        print(0)\n    elif a + b == 3:\n        print(1)\n    elif a > 1 and b > 1:\n        if (a + b) % 2 == 0:\n            print(a - 1 + b - 1 + abs(a - b))\n        else:\n            print(a - 1 + b - 2 + abs(a - b))\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    c = (min(n, m) - 1) * 2\n    (x, y) = (min(n, m), min(n, m))\n    if x == n and y == m:\n        print(c)\n        continue\n    if x == n - 1 and y == m or (x == n and y == m - 1):\n        print(c + 1)\n        continue\n    if x == 1 or y == 1:\n        print(-1)\n        continue\n    add = 1\n    go = max(n, m) - x\n    if go % 2 == 0:\n        c = c + go * 2\n    else:\n        c = c + (go - 1) * 2 + 1\n    print(c)", "t = int(input())\nans = list()\nfor i in range(0, t):\n    (n, m) = [int(x) for x in input().split()]\n    if n == 1:\n        if m == 1:\n            ans.append(0)\n        elif m == 2:\n            ans.append(1)\n        else:\n            ans.append(-1)\n        continue\n    if m == 1:\n        if n == 2:\n            ans.append(1)\n        else:\n            ans.append(-1)\n        continue\n    if m < n:\n        b = 0\n        b += 2 * (m - 1)\n        n -= m\n        b += 4 * (n // 2)\n        if n % 2 == 0:\n            ans.append(b)\n        elif n % 2 == 1:\n            ans.append(b + 1)\n    elif n < m:\n        b = 0\n        b += 2 * (n - 1)\n        m -= n\n        b += 4 * (m // 2)\n        if m % 2 == 0:\n            ans.append(b)\n        elif m % 2 == 1:\n            ans.append(b + 1)\n    else:\n        ans.append(m + n - 2)\nfor s in ans:\n    print(s)", "def dunc1(x, y):\n    c = x % 2\n    d = y % 2\n    if c == d:\n        return True\n    else:\n        return False\nfor _ in range(int(input())):\n    (m, n) = input().split()\n    m = int(m)\n    n = int(n)\n    f = m - 1\n    g = n - 1\n    if (f == 0 or g == 0) and abs(f - g) > 1:\n        print('-1')\n        continue\n    if dunc1(f, g) is True:\n        print(f + g + abs(f - g))\n    if dunc1(f, g) is False:\n        print(f + g + abs(f - g) - 1)", "for t in range(int(input())):\n    (r, c) = map(int, input().split())\n    do = r - 1\n    ri = c - 1\n    if abs(do - ri) <= 1:\n        print(do + ri)\n    elif do == 0 or ri == 0:\n        print(-1)\n    elif do > ri:\n        x = do - ri\n        if x % 2 == 0:\n            print(do + ri + x)\n        else:\n            print(do + ri + x - 1)\n    elif ri > do:\n        x = ri - do\n        if x % 2 == 0:\n            print(do + ri + x)\n        else:\n            print(do + ri + x - 1)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == 1 or b == 1:\n        if a == 1 and b == 1:\n            print(0)\n        elif a == 2 or b == 2:\n            print(1)\n        else:\n            print(-1)\n    elif (a - 1) % 2 == 0 and (b - 1) % 2 == 0:\n        c = max(a - 1, b - 1)\n        print(2 * c)\n    elif (a - 1) % 2 == 1 and (b - 1) % 2 == 1:\n        c = max(a - 1, b - 1)\n        print(2 * c)\n    else:\n        c = max(a - 1, b - 1)\n        print(2 * c - 1)", "import sys\ninput = sys.stdin.readline\nT = int(input())\nfor _ in range(T):\n    (a, b) = map(int, input().split())\n    if a == 1 and b > 2 or (a > 2 and b == 1):\n        print(-1)\n        continue\n    a -= 1\n    b -= 1\n    cnt = 0\n    if (a + b) % 2 == 1:\n        cnt += max(a, b) * 2 - 1\n    else:\n        cnt += max(a, b) * 2\n    print(cnt)", "import sys\ninput = sys.stdin.readline\n\ndef ri():\n    return int(input())\n\ndef rf():\n    return list(map(float, input().split()))\n\ndef rl():\n    return list(map(int, input().split()))\n\ndef rs():\n    return input().rstrip()\n\ndef out_list(x):\n    return ' '.join(map(str, x))\n\ndef solve_case():\n    (n, m) = rl()\n    n -= 1\n    m -= 1\n    if n == m == 0:\n        print(0)\n        return\n    if (n, m) == (0, 1) or (n, m) == (1, 0):\n        print(1)\n        return\n    if n == 0 or m == 0:\n        print(-1)\n        return\n    if n == m:\n        print(n + m)\n        return\n    mn = min(n, m)\n    mx = max(n, m)\n    res = mn + 1 + mn\n    rem = mx - (mn + 1)\n    res += rem * 2 + rem % 2\n    print(res)\nT = ri()\nfor ti in range(1, T + 1):\n    solve_case()", "for _ in range(int(input())):\n    (rrrr, clll) = map(int, input().split())\n    if rrrr == 1 and clll > 2:\n        print(-1)\n    elif clll == 1 and rrrr > 2:\n        print(-1)\n    elif rrrr == clll:\n        print(rrrr + (rrrr - 2))\n    elif rrrr > clll:\n        print(clll + (clll - 2) - (rrrr - clll) % 2 + (rrrr - clll) * 2)\n    else:\n        print(rrrr + (rrrr - 2) - (clll - rrrr) % 2 + (clll - rrrr) * 2)", "t = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().split(' ')))\n    if n == 1 and m == 2 or (n == 2 and m == 1):\n        print(1)\n        continue\n    elif n == 1 and m != 1 or (n != 1 and m == 1):\n        print(-1)\n        continue\n    elif n == 1 and m == 1:\n        print(0)\n        continue\n    else:\n        ans = n - 1 + (m - 1)\n        if n != m:\n            ans += abs(n - m)\n        if n % 2 == m % 2:\n            pass\n        else:\n            ans -= 1\n        print(ans)", "def read_input():\n    t = int(input())\n    for _ in range(t):\n        (n, m) = [int(i) for i in input().split(' ')]\n        print(direction(n, m))\n\ndef direction(n, m):\n    if n == m:\n        return 2 * (n - 1)\n    rows = max(n, m)\n    cols = min(n, m)\n    if cols == 1:\n        if rows == 2:\n            return 1\n        else:\n            return -1\n    square = 2 * (cols - 1)\n    left = rows - cols\n    snake = 2 * left\n    if left % 2 != 0:\n        snake -= 1\n    return square + snake\nread_input()", "for s in [*open(0)][1:]:\n    (n, m) = sorted(map(int, s.split()))\n    print((2 * m - (m - n & 1) - 2, -1)[n < 2 < m])", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a > b:\n        (a, b) = (b, a)\n    if a == 1:\n        if b < 3:\n            print(b - 1)\n        else:\n            print(-1)\n    else:\n        k = b - a\n        if k == 0:\n            print(a + a - 2)\n        elif k % 2 == 0:\n            print(b + b - 2)\n        else:\n            print(2 * b - 3)", "def solve(n, m):\n    if n == 1 and m >= 3 or (n >= 3 and m == 1):\n        return -1\n    wasted = 0\n    if abs(m - n) >= 2:\n        wasted = abs(m - n)\n    if wasted % 2 == 1:\n        wasted -= 1\n    return n - 1 + m - 1 + wasted\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        (n, m) = map(int, input().split())\n        ans = solve(n, m)\n        print(ans)\nmain()", "t = int(input())\n\ndef solution():\n    (n, m) = map(int, input().split())\n    if n < m:\n        (n, m) = (m, n)\n    if n == 1 and m == 1:\n        return 0\n    if m == 1 and n > 2:\n        return -1\n    res = n - 1\n    if m & 1 and (not n & 1):\n        res += n - 2\n    if m & 1 and n & 1:\n        res += n - 1\n    if not m & 1 and n & 1:\n        res += n - 2\n    if not m & 1 and (not n & 1):\n        res += n - 1\n    return res\nwhile t:\n    print(solution())\n    t -= 1", "for _ in range(int(input())):\n    (n, m) = sorted(list(map(int, input().split())))\n    if n == 1 and m > 2:\n        print(-1)\n    else:\n        ex = max(m, n) - min(m, n)\n        ans = ex * 2 + 2 * (min(n, m) - 1)\n        if ex % 2:\n            ans -= 1\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = min(n, m)\n    b = max(n, m)\n    if a == 1 and b == 1:\n        print(0)\n    elif a == 1 or b == 1:\n        if a > 2 or b > 2:\n            print(-1)\n        else:\n            print(1)\n    else:\n        res = (a - 1) * 2\n        b = b - a\n        if b % 2 == 0:\n            res = res + b * 2\n            print(res)\n        else:\n            res = res + (b * 2 - 1)\n            print(res)", "import math\n\ndef solve(n, m):\n    if n == 1 and m > 2:\n        print(-1)\n    elif m == 1 and n > 2:\n        print(-1)\n    else:\n        x = min(n, m)\n        ans = 2 * x - 2\n        rem = n - x + m - x\n        if rem % 2 == 0:\n            print(ans + rem * 2)\n        else:\n            print(ans + rem * 2 - 1)\nt = int(input())\nfor test in range(t):\n    (n, m) = map(int, input().split())\n    solve(n, m)", "def solution():\n    inp = input().split(' ')\n    n = int(inp[0])\n    m = int(inp[1])\n    if n == 1 or m == 1:\n        if n == 2 or m == 2:\n            return 1\n        elif n == 1 and m == 1:\n            return 0\n        else:\n            return -1\n    elif n == m:\n        return n + m - 2\n    else:\n        diff = max(0, max(n, m) - min(n, m) - 1)\n        additional_steps = diff // 2 * 4 + diff % 2 * 3\n        return min(n, m) * 2 - 1 + additional_steps\ncount = int(input())\nfor _ in range(count):\n    print(solution())", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    if n > m:\n        (n, m) = (m, n)\n    u = 1\n    if (m - n) % 2 == 0:\n        u = 0\n    h = n * 2 - 2 + (m - n) * 2 - u\n    if n == 1 and m > 2:\n        print(-1)\n    else:\n        print(h)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n - 1 == 0 and m - 1 > 1 or (m - 1 == 0 and n - 1 > 1):\n        print(-1)\n    elif n - 1 == 0 and m - 1 == 0:\n        print(0)\n    elif n - 1 == 0 and m - 1 == 1 or (m - 1 == 0 and n - 1 == 1):\n        print(1)\n    elif n == m:\n        print((n - 1) * 2)\n    else:\n        cnt = 0\n        x = min(n, m)\n        y = max(n, m)\n        cnt += (x - 1) * 2\n        if (y - x) % 2 == 0:\n            cnt += (y - x) * 2\n        else:\n            cnt += (y - x) * 2 - 1\n        print(cnt)", "t = int(input())\nfor i in range(t):\n    (x, y) = input().split()\n    x = int(x)\n    y = int(y)\n    if x == y:\n        print(2 * x - 2)\n    elif x == 1 and abs(x - y) > 1:\n        print(-1)\n    elif y == 1 and abs(x - y) > 1:\n        print(-1)\n    else:\n        a = abs(x - y)\n        if a % 2 == 0:\n            b = min(x, y)\n            print(2 * (b - 1) + 2 * a)\n        else:\n            b = min(x, y)\n            print(2 * (b - 1) + 2 * a - 1)", "def count_steps(n, m):\n    if m == 1:\n        if n == 1:\n            return 0\n        elif n == 2:\n            return 1\n        else:\n            return -1\n    if n == 1:\n        if m == 1:\n            return 0\n        elif m == 2:\n            return 1\n        else:\n            return -1\n    min_len = min(n, m)\n    max_len = max(n, m)\n    stairway_steps = (min_len - 1) * 2\n    remainder = max_len - min_len\n    if remainder > 0:\n        add = 2 * remainder\n        if remainder % 2:\n            add -= 1\n        stairway_steps += add\n    return stairway_steps\ntests_num = int(input())\nfor _ in range(tests_num):\n    (n, m) = input().split()\n    (n, m) = (int(n), int(m))\n    print(count_steps(n, m))", "p = int(input())\nfor i in range(p):\n    (n, m) = map(int, input().split())\n    if n == 1 and m == 1:\n        print(0)\n    elif n < m:\n        steps2 = (n - 1) * 2\n        steps3 = steps2 + (m - n) // 2 * 4 + (m - n) % 2\n        if steps2 == 0 and steps3 > 1:\n            print(-1)\n        else:\n            print(steps3)\n    else:\n        steps2 = (m - 1) * 2\n        steps3 = steps2 + (n - m) // 2 * 4 + (n - m) % 2\n        if steps2 == 0 and steps3 > 1:\n            print(-1)\n        else:\n            print(steps3)", "from collections import Counter\nfor t in range(int(input())):\n    (n, m) = [int(i) for i in input().split()]\n    (n, m) = (min(n, m), max(n, m))\n    if n == 1 and m > 2:\n        print(-1)\n    else:\n        x = m - 1\n        if n % 2 == m % 2:\n            print(2 * x)\n        else:\n            print(2 * x - 1)", "import sys\ninput = sys.stdin.readline\nfrom math import ceil, floor, gcd\n\ndef inp():\n    return int(input())\n\ndef lis():\n    return list(map(int, input().split()))\n\ndef ma():\n    return map(int, input().split())\n\ndef st():\n    return input().rstrip('\\n')\n\ndef isPrime(n):\n    if n == 1:\n        return 0\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            return 0\n    return 1\nt = inp()\nfor _ in range(t):\n    (n, m) = ma()\n    if n == 1:\n        if m >= 3:\n            print(-1)\n            continue\n        if m == 1:\n            print(0)\n        else:\n            print(1)\n        continue\n    if m == 1:\n        if n >= 3:\n            print(-1)\n            continue\n        if n == 1:\n            print(0)\n        else:\n            print(1)\n        continue\n    (n, m) = (max(n, m), min(n, m))\n    if n == m:\n        print(m * 2 - 2)\n    else:\n        now = m * 2 - 2\n        k = n - m - 1\n        fac = 0\n        if k % 2 == 1:\n            fac = 1\n        print(now + k * 2 + 1 + fac)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    maxi = max(n, m)\n    mini = min(n, m)\n    smooth = mini\n    rem = max(0, maxi - smooth)\n    result = (maxi - 1) * 2\n    if rem % 2 == 1:\n        result -= 1\n    if mini == 1 and maxi > 2:\n        print(-1)\n    else:\n        print(result)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n == 1 and m > 2:\n        print(-1)\n    elif m == 1 and n > 2:\n        print(-1)\n    elif n == 1:\n        print(m - 1)\n    elif m == 1:\n        print(n - 1)\n    else:\n        ans = (min(n, m) - 2) * 2\n        t = max(n, m) - ans // 2\n        ans += (t // 2 - 1) * 4 + 2 + t % 2\n        print(ans)", "t = int(input())\nans = []\nfor x in range(t):\n    inp = list(map(int, input().split()))\n    n = inp[0]\n    m = inp[1]\n    moves = 0\n    if m == 1 and n == 1:\n        moves = 0\n        ans.append(moves)\n        continue\n    if m * n == 2:\n        moves = 1\n        ans.append(moves)\n        continue\n    if m == 1 or n == 1:\n        moves = -1\n        ans.append(moves)\n        continue\n    if m > n:\n        if (m - n) % 2 == 0:\n            moves = 2 * (n - 1) + (m - n) * 2\n        else:\n            moves = 2 * (n - 1) + (m - n) * 2 - 1\n    elif m < n:\n        if (m - n) % 2 == 0:\n            moves = 2 * (m - 1) + (n - m) * 2\n        else:\n            moves = 2 * (m - 1) + (n - m) * 2 - 1\n    else:\n        moves = 2 * (n - 1)\n    ans.append(moves)\nfor a in ans:\n    print(a)", "for _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    if m <= n:\n        (m, n) = (n, m)\n    if n == 1 and m > 2:\n        print(-1)\n        continue\n    odd = m + n & 1\n    if not odd:\n        res = 2 * m - 2\n        print(res)\n    else:\n        res = 2 * m - 3\n        print(res)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n == 1 or m == 1:\n        if n + m > 3:\n            print(-1)\n            continue\n    maxi = (max(n, m) - 1) * 2\n    maxi -= 1 if n % 2 != m % 2 else 0\n    print(maxi)", "def solve(m, n):\n    if m < n:\n        (m, n) = (n, m)\n    if 1 in [m, n] and max(m, n) > 2:\n        return -1\n    if (m == 2 or n == 2) and (m == 1 or n == 1):\n        return 1\n    base = 2 * (n - 1)\n    base += (m - n) // 2\n    base += 3 * (m - n) // 2\n    return base\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    print(solve(n, m))", "n = int(input())\nfor i in range(n):\n    (n, m) = map(int, input().split())\n    if n == 1 and m == 1:\n        print(0)\n        continue\n    if n == 1 and m == 2 or (m == 1 and n == 2):\n        print(1)\n        continue\n    if n == 1 and m > 2 or (m == 1 and n > 2):\n        print(-1)\n        continue\n    x = min(n, m)\n    y = max(n, m)\n    if x % 2 != 0 and y % 2 != 0:\n        print((y - 1) * 2)\n    elif x % 2 != 0 or y % 2 != 0:\n        print((y - 1) * 2 - 1)\n    else:\n        print((y - 1) * 2)", "test = int(input())\nfor t in range(test):\n    (m, n) = map(int, input().split())\n    a = min(m, n)\n    b = max(m, n)\n    if a == 1 and b > 2:\n        print(-1)\n    elif a * b == 1:\n        print(0)\n    else:\n        print((a - 1) * 2 + (b - a) * 2 - (b - a) % 2)", "for _ in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    if m == 1 and n == 1:\n        print(0)\n    elif n == 1 and m > 2 or (m == 1 and n > 2):\n        print(-1)\n    elif m == n:\n        print(m + n - 2)\n    else:\n        count = 0\n        min_ = min(m, n)\n        max_ = max(m, n)\n        count += min_ * 2 - 2\n        max_ = max_ - min_ + 1\n        if max_ % 2 == 1:\n            count += 2 * max_ - 2\n        else:\n            count += 2 * max_ - 3\n        print(count)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    if min(n, m) == 1 and max(n, m) >= 3:\n        print(-1)\n    else:\n        OTBET = (min(n, m) - 1) * 2\n        t = abs(n - m)\n        OTBET += t // 2 * 3 + t - t // 2\n        print(OTBET)", "def solve():\n    for tc in range(int(input())):\n        (a, b) = list(map(int, input().split()))\n        if a == 1 and b - 1 > 1 or (b == 1 and a - 1 > 1):\n            res = -1\n        elif a % 2 == b % 2:\n            res = 2 * max(a - 1, b - 1)\n        else:\n            res = min(2 * max(a - 1, b - 2), 2 * max(a - 2, b - 1)) + 1\n        print(res)\nsolve()", "import math\nx = int(input())\nwhile x > 0:\n    inp = input()\n    q = list(map(int, inp.split(' ')))\n    q.sort()\n    n = q[0]\n    m = q[1]\n    if n == 1:\n        if m == 1:\n            print(0)\n        elif m == 2:\n            print(1)\n        else:\n            print(-1)\n    elif m - n == 1:\n        print(n + m - 2)\n    else:\n        ans = n + n - 2\n        sub = (m - n) % 2\n        sub2 = (m - n) // 2\n        ans += sub2 * 3\n        ans += sub2\n        ans += sub\n        print(ans)\n    x -= 1", "t = int(input())\nfor it in range(t):\n    nm = input()\n    n = int(nm.split(' ')[0])\n    m = int(nm.split(' ')[1])\n    a = n - 1\n    b = m - 1\n    diff = a + b\n    if diff == 0:\n        print('0')\n    elif diff == 1:\n        print('1')\n    elif diff > 1 and (a == 0 or b == 0):\n        print('-1')\n    else:\n        ans = 0\n        if a < b:\n            min = a\n            rd = b - a\n        else:\n            min = b\n            rd = a - b\n        ans = min * 2\n        if rd % 2 == 0:\n            ans = ans + 2 * rd\n        else:\n            ans = ans + 2 * rd - 1\n        print(ans)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    x = max(a, b)\n    y = min(a, b)\n    if a == 1 and b == 1:\n        print(0)\n    elif a == 1 and b > 2:\n        print(-1)\n    elif b == 1 and a > 2:\n        print(-1)\n    elif a == b:\n        print((a - 1) * 2)\n    elif a % 2 == 0 and b % 2 == 0 or (a % 2 != 0 and b % 2 != 0):\n        print((x - 1) * 2)\n    else:\n        print((x - 2) * 2 + 1)", "from sys import stdin\nT = int(stdin.readline())\n\ndef solve(n, m):\n    if n > m:\n        return solve(m, n)\n    if n == 1:\n        if m == 1:\n            return 0\n        if m == 2:\n            return 1\n        return -1\n    if n == 2:\n        if m % 2 == 0:\n            return n * m - 2\n        return n * m - 3\n    return (n - 2) * 2 + solve(2, m - n + 2)\nfor t in range(T):\n    [n, m] = [int(x) for x in stdin.readline().strip().split(' ')]\n    r = solve(n, m)\n    print(r)", "n = int(input())\nlst = []\nfor _ in range(n):\n    (a, b) = map(int, input().split())\n    if a == 1 and b == 1:\n        lst.append(0)\n    elif a == 1 and b > 2 or (b == 1 and a > 2):\n        lst.append(-1)\n    elif a < b:\n        x = (a - 1) * 2\n        b -= a\n        x += 2 * b - 1\n        if b % 2 == 0:\n            x += 1\n        lst.append(x)\n    else:\n        x = (b - 1) * 2\n        a -= b\n        x += 2 * a - 1\n        if a % 2 == 0:\n            x += 1\n        lst.append(x)\nfor i in lst:\n    print(i)", "t = int(input())\nlst = []\nfor r in range(t):\n    (aa, bb) = input().split()\n    n = int(aa)\n    m = int(bb)\n\n    def f(n, m):\n        if (n - m) % 2 == 0:\n            y = int(n - 1 + (m - 1) + (n - m))\n        else:\n            y = int(n - 1 + (m - 1) + (n - m - 1))\n        return y\n    if n == 1 and m > 2:\n        x = -1\n    elif m == 1 and n > 2:\n        x = -1\n    elif n == m:\n        x = int(n - 1 + (m - 1))\n    elif n > m:\n        x = f(n, m)\n    elif m > n:\n        x = f(m, n)\n    lst.append(x)\nfor u in lst:\n    print(int(u))", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    if n == 1 and m == 1:\n        print(0)\n    elif n == 1 and m == 2 or (n == 2 and m == 1):\n        print(1)\n    elif n < 2 or m < 2:\n        print(-1)\n    else:\n        if n > m:\n            cub = 2 * m - 2\n        else:\n            cub = 2 * n - 2\n        delta = abs(m - n)\n        if delta % 2 == 0:\n            dop_z = delta // 2 * 4\n        else:\n            dop_z = delta // 2 * 4 + 1\n        result = cub + dop_z\n        print(result)", "t = int(input())\nwhile t > 0:\n    (m, n) = map(int, input().split())\n    x = min(m, n)\n    y = abs(m - n)\n    z = 2 * (x - 1) + y // 2 * 4\n    if m == 1 and n > 2:\n        print(-1)\n    elif n == 1 and m > 2:\n        print(-1)\n    elif y % 2 == 0:\n        print(z)\n    else:\n        print(z + 1)\n    t = t - 1", "def solve():\n    (n, m) = input().split()\n    n = int(n)\n    m = int(m)\n    if (n == 1 or m == 1) and abs(n - m) >= 2:\n        print(-1)\n        return\n    minMoves = 2 * min(n, m) - 2\n    k = 0\n    if abs(n - m) % 2 == 0:\n        k = 2 * abs(n - m)\n    else:\n        k = 2 * abs(n - m) - 1\n    print(minMoves + k)\nt = int(input())\nwhile t:\n    solve()\n    t -= 1", "def go():\n    (n, m) = map(int, input().split())\n    if min(m, n) == 1 and max(m, n) > 2:\n        print(-1)\n        return\n    (n, m) = (min(m, n) - 1, max(m, n) - 1)\n    print(n * 2 + (m - n) * 2 - (m - n) % 2)\nfor t in range(int(input())):\n    go()", "def inp(*, cf=lambda x: x):\n    return cf(input())\n\ndef inpint():\n    return inp(cf=int)\n\ndef inp_line(*, cf=lambda x: x, s=' '):\n    return list(map(cf, input().split(s)))\n\ndef inpints():\n    return inp_line(cf=int)\ndirections = [(-1, 0), (1, 0), (0, -1), (0, 1)]\n\ndef test_case(case):\n    (n, m) = inpints()\n    if n == 1 and m == 1:\n        return 0\n    if n == 1 and m == 2 or (n == 2 and m == 1):\n        return 1\n    if n == 1 and m > 2 or (n > 2 and m == 1):\n        return -1\n    if m > n:\n        (n, m) = (m, n)\n    a = min(n, m)\n    b = max(n, m)\n    ans = a - 1 + a - 1\n    if n == m:\n        return ans\n    if n == m + 1:\n        return ans + 1\n    if (n - m) % 2 == 0:\n        return ans + n - m + n - m\n    if (n - m) % 2 == 1:\n        return ans + n - m + n - m - 1\n\ndef main():\n    T = inpint()\n    for t in range(1, T + 1):\n        print(test_case(t))\nmain()", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    if n == m:\n        print(2 * (n - 1))\n    elif n == 1 and m >= 3:\n        print(-1)\n    elif m == 1 and n >= 3:\n        print(-1)\n    elif n > m:\n        if (n - m) % 2 == 0:\n            print(2 * m - 2 + 2 * (n - m))\n        else:\n            print(2 * m - 2 + 2 * (n - m) - 1)\n    elif (m - n) % 2 == 0:\n        print(2 * n - 2 + 2 * (m - n))\n    else:\n        print(2 * n - 2 + 2 * (m - n) - 1)", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if a == 1 or b == 1:\n        if a == 1 and b == 1:\n            print(0)\n        elif a == 2 or b == 2:\n            print(1)\n        else:\n            print(-1)\n    else:\n        if a > b:\n            (a, b) = (b, a)\n        k = (a - 1) * 2\n        if a == b:\n            print(k)\n        elif a % 2 == 0 and b % 2 == 0:\n            print(k + (b - a) * 2)\n        elif a % 2 == 0 and b % 2 != 0:\n            b = b - 1\n            print(1 + k + (b - a) * 2)\n        elif a % 2 != 0 and b % 2 != 0:\n            print(k + (b - a) * 2)\n        else:\n            b = b - 1\n            print(1 + k + (b - a) * 2)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    if n == 1 or m == 1:\n        if abs(n - m) > 1:\n            print(-1)\n        else:\n            print(abs(n - m))\n    else:\n        if n >= m:\n            maxm = n\n            minm = m\n        else:\n            maxm = m\n            minm = n\n        if n % 2 == m % 2:\n            print(2 * (maxm - 1))\n        else:\n            ans = 2 * (minm - 1) + 2 * (maxm - minm) - 1\n            print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    temp = n - m\n    if n - m < 0:\n        temp = m - n\n    if n == 1 and m > 2 or (n > 2 and m == 1):\n        print('-1')\n    elif n == 1 and m == 1:\n        print('0')\n    else:\n        mi = min(n, m)\n        res = 2 * mi - 2\n        if temp == 1:\n            res += 1\n        elif temp & 1 != 0:\n            res += 2 * temp - 1\n        else:\n            res += 2 * temp\n        print(res)", "testcases = int(input())\nfor i in range(testcases):\n    (x, y) = [int(x) for x in input().split(' ')]\n    if x == 1:\n        if y <= 2:\n            print(y - 1)\n        else:\n            print(-1)\n    elif y == 1:\n        if x <= 2:\n            print(x - 1)\n        else:\n            print(-1)\n    else:\n        n = min(x, y)\n        ans = (n - 1) * 2\n        if (max(x, y) - n) % 2 == 0:\n            ans += (max(x, y) - n) * 2\n        else:\n            ans += (max(x, y) - n) * 2 - 1\n        print(ans)", "for num in range(int(input())):\n    user = [int(i) for i in input().split(' ')]\n    ans = 0\n    if user[0] == 1 and user[1] == 1:\n        print(0)\n        continue\n    elif user[0] == 1:\n        if user[1] == 2:\n            print(1)\n            continue\n        else:\n            print(-1)\n            continue\n    elif user[1] == 1:\n        if user[0] == 2:\n            print(1)\n            continue\n        else:\n            print(-1)\n            continue\n    elif user[0] < user[1]:\n        ans = user[0] * 2 - 2\n        temp = user[1] - user[0]\n        if temp & 1 == 1:\n            if temp == 1:\n                ans = ans + 1\n            else:\n                ans = ans + (temp - 1) * 2 + 1\n        else:\n            ans = ans + temp * 2\n    elif user[1] < user[0]:\n        ans = user[1] * 2 - 2\n        temp = user[0] - user[1]\n        if temp & 1 == 1:\n            if temp == 1:\n                ans = ans + 1\n            else:\n                ans = ans + (temp - 1) * 2 + 1\n        else:\n            ans = ans + temp * 2\n    else:\n        ans = user[0] * 2 - 2\n    print(ans)", "import fileinput\n\ndef getanswer_rectangle(dx, dy):\n    return 2 * dx - (dx - dy) % 2\n\ndef getanswer(n, m):\n    (deltax, deltay) = (m - 1, n - 1)\n    if deltax == 0 and deltay > 1:\n        return -1\n    if deltax > 1 and deltay == 0:\n        return -1\n    if deltax >= deltay:\n        return getanswer_rectangle(deltax, deltay)\n    if deltay > deltax:\n        return getanswer_rectangle(deltay, deltax)\n\ndef solve():\n    ins = []\n    for line in fileinput.input():\n        ins.append(line.strip('\\n'))\n    num_tests = int(ins[0])\n    test_cases = ins[1:]\n    for i in range(num_tests):\n        (n, m) = test_cases[i].split(' ')\n        answer = getanswer(int(n), int(m))\n        print(answer)\nsolve()", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n < m:\n        (n, m) = (m, n)\n    diag = (m - 1) * 2\n    nediag = (n - m - 1) * 2 + (n - m - 1) % 2 + 1\n    if m == 1 and n > 2:\n        print(-1)\n        continue\n    print(diag + nediag)", "n = int(input())\nfor j in range(0, n):\n    (a, b) = map(int, input().split())\n    if a == 1 and b >= 3:\n        print(-1)\n    elif a >= 3 and b == 1:\n        print(-1)\n    elif a == 1 and b == 1:\n        print(0)\n    elif a == 1 or b == 1:\n        print(1)\n    else:\n        mini = min(a, b)\n        moves = 2 * (mini - 1)\n        need_continous_steps = max(a, b) - mini\n        if need_continous_steps % 2 == 0 and need_continous_steps != 0:\n            moves += 2 * need_continous_steps\n        elif need_continous_steps == 0:\n            moves += 0\n        else:\n            moves += 2 * need_continous_steps - 1\n        print(moves)", "t = int(input())\nfor _ in range(t):\n    (a, b) = [int(x) for x in input().split()]\n    i = 1\n    j = 1\n    diff = abs(a - b)\n    if a - i == 0 and b - j == 0:\n        print(0)\n    elif a - i > 1 and b - j == 0:\n        print(-1)\n    elif a - i == 0 and b - j > 1:\n        print(-1)\n    else:\n        temp = a if a < b else b\n        ans = temp * 2 - 2\n        if diff == 1:\n            ans = ans + 1\n        elif diff & 1 != 0:\n            ans = ans + (2 * diff - 1)\n        else:\n            ans = ans + 2 * diff\n        print(ans)", "from math import *\n\ndef up(pos):\n    return (pos[0] - 1, pos[1])\n\ndef down(pos):\n    return (pos[0] + 1, pos[1])\n\ndef left(pos):\n    return (pos[0], pos[1] - 1)\n\ndef right(pos):\n    return (pos[0], pos[1] + 1)\n\ndef solve(n, m):\n    local = (1, 1)\n    pos = (n, m)\n    contador = 0\n    if pos[0] == 1 and pos[1] == 1:\n        return 0\n    if pos[0] == 1 and pos[1] > 2 or (pos[0] > 2 and pos[1] == 1):\n        return -1\n    if up(pos) == local or down(pos) == local or left(pos) == local or (right(pos) == local):\n        return 1\n    if n == m + 1 or m == n + 1:\n        return n + m - 2\n    index = pos.index(min(n, m))\n    contador += (pos[index] - 1) * 2\n    posicao = max(n, m) - pos[index] + 1\n    distancia = dist((posicao, 1), local)\n    if distancia == 1:\n        distancia = 3\n    else:\n        distancia = distancia // 2 * 3 + distancia - distancia // 2\n    contador += distancia\n    return int(contador)\nT = int(input())\nfor _ in range(T):\n    (n, m) = map(int, input().split())\n    print(solve(n, m))", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = max(n, m)\n    b = min(n, m)\n    if b == 1 and a > 2:\n        print(-1)\n    else:\n        c = 2 * (b - 1) + 2 * (a - b)\n        if (a + b) % 2 == 1:\n            print(c - 1)\n        else:\n            print(c)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    (a, b) = (1, 1)\n    s = 0\n    j = 0\n    if n == 1 and m > 2:\n        print('-1')\n        continue\n    elif m == 1 and n > 2:\n        print('-1')\n        continue\n    if m >= n:\n        a = n\n        b = n\n        s = n * 2 - 2\n    else:\n        a = m\n        b = m\n        s = m * 2 - 2\n    if a == n and b == m:\n        print(s)\n    else:\n        if a == n:\n            if (m - b) % 2 == 1 and m - b != 1:\n                s = s + (m - b) * 2 - 1\n            elif (m - b) % 2 == 0 and m - b != 1:\n                s = s + (m - b) * 2\n            else:\n                s = s + 1\n        elif (n - a) % 2 == 1 and n - a != 1:\n            s = s + (n - a) * 2 - 1\n        elif (n - a) % 2 == 0 and n - a != 1:\n            s = s + (n - a) * 2\n        else:\n            s = s + 1\n        print(s)", "test_case = int(input())\nfor _ in range(test_case):\n    (r, c) = list(map(int, input().split()))\n    if r == 1 and c == 1:\n        print(0)\n        continue\n    elif r == 1 and c > 2 or (c == 1 and r > 2):\n        print(-1)\n        continue\n    else:\n        Max = max(r, c)\n        Min = min(r, c)\n        if (Max - Min) % 2 == 1:\n            print(2 * Max - 3)\n        else:\n            print(2 * Max - 2)", "test = int(input())\nfor i in range(test):\n    size = list(map(int, input().split()))\n    n = min(size) - 1\n    m = max(size) - 1\n    move = n * 2\n    ext = (m - n) // 2 + (m - n) % 2 + 3 * ((m - n) // 2)\n    if n == 0 and m > 1:\n        print(-1)\n    else:\n        print(move + ext)", "def solve():\n    (n, m) = [int(i) for i in input().split()]\n    if n == 1 and m == 1:\n        print(0)\n        return\n    if (n == 1 or m == 1) and max(m, n) - min(m, n) > 1:\n        print(-1)\n        return\n    k = (min(m, n) - 1) * 2\n    if m == n:\n        print(k)\n    else:\n        l = max(m, n) - min(m, n)\n        if l % 2 == 0:\n            k += l * 2\n        else:\n            k += (l - 1) * 2 + 1\n        print(k)\n\ndef main():\n    t = int(input())\n    while t:\n        solve()\n        t -= 1\n    return\nmain()", "from sys import stdin\nfrom math import log, floor, ceil, gcd\nfrom collections import defaultdict as dd\ninput = stdin.readline\ninp = lambda : int(stdin.readline())\nrs = lambda : stdin.readline().strip()\n\ndef ra(typ):\n    return list(map(typ, stdin.readline().split()))\n\ndef rv(typ):\n    return map(typ, stdin.readline().split())\n\ndef main():\n    for _ in range(inp()):\n        x = sorted(ra(int))\n        if x[0] == 1:\n            if x[1] == 1:\n                print(0)\n            elif x[1] == 2:\n                print(1)\n            else:\n                print(-1)\n        else:\n            n = (x[0] - 1) * 2\n            x[1] -= x[0]\n            if x[1] % 2 == 0:\n                n += x[1] * 2\n            else:\n                n += x[1] * 2 - 1\n            print(n)\nmain()", "n = int(input())\nfor i in range(n):\n    (bar, kol) = list(map(int, input().split()))\n    temp = bar - kol\n    if temp < 0:\n        temp = kol - bar\n    if bar == 1 and kol > 2 or (bar > 2 and kol == 1):\n        print(-1)\n    elif bar == 1 and kol == 1:\n        print(0)\n    else:\n        mini = min(bar, kol)\n        hasil = 2 * mini - 2\n        if temp == 1:\n            hasil += 1\n        elif temp % 2 != 0:\n            hasil += 2 * temp - 1\n        else:\n            hasil += 2 * temp\n        print(hasil)", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_ls():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef main():\n    for _ in range(int(input())):\n        (n, m) = get_ints()\n        if n < m:\n            (n, m) = (m, n)\n        if m == 1 and n > 2:\n            print(-1)\n        else:\n            print(n * 2 - 2 - (n + m) % 2)\nmain()"]