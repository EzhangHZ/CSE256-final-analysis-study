["t = int(input())\nfor _ in range(t):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    nums.sort()\n    print(nums[-1] + nums[-2])", "for caseno in range(int(input())):\n    n = int(input())\n    a = map(int, input().split())\n    a = sorted(a, reverse=True)\n    print(sum(a[:2]))", "T = int(input())\nfor _ in range(T):\n    sum = 0\n    N = int(input())\n    nums = list(map(int, input().split()))\n    sum += max(nums)\n    nums.remove(sum)\n    sum += max(nums)\n    print(sum)", "import sys\ninput = sys.stdin.readline\n\ndef solve(n, arr):\n    arr.sort()\n    print(arr[n - 1] + arr[n - 2])\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    solve(n, arr)", "t = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    a1 = max(a)\n    a.remove(a1)\n    a2 = max(a)\n    print(a1 + a2)\n    t -= 1", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    max1 = max(arr)\n    arr.remove(max1)\n    max2 = max(arr)\n    print(max1 + max2)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    print(l[0] + l[1])", "a = int(input())\nfor i in range(a):\n    b = int(input())\n    c = list(map(int, input().split()))\n    c.sort()\n    print(c[-1] + c[-2])", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    print(l[-1] + l[-2])", "mod = 10000000\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a1 = a\n    m_1 = max(a)\n    a1.remove(m_1)\n    m_2 = max(a1)\n    print(m_1 + m_2)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mx1 = max(a)\n    a.remove(mx1)\n    mx2 = max(a)\n    print(mx1 + mx2)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    a.sort(reverse=True)\n    print(a[0] + a[1])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l1 = [int(j) for j in input().split()]\n    l1.sort()\n    print(l1[-1] + l1[-2])", "t = int(input())\nfor ele in range(t):\n    n = int(input())\n    foo = [int(i) for i in input().split()]\n    foo.sort()\n    print(foo[-1] + foo[-2])", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    maxi1 = max(a)\n    a.remove(maxi1)\n    maxi2 = max(a)\n    print(maxi1 + maxi2)", "t = int(input())\nfor i in range(t):\n    a = int(input())\n    l = list(map(int, input().split()))\n    f1 = max(l)\n    l.pop(l.index(f1))\n    if len(l) == 0:\n        print(f1)\n    else:\n        f2 = max(l)\n        print(f1 + f2)", "t = int(input())\nwhile t:\n    n = int(input())\n    cake = list(map(int, input().split(' ')))\n    max_1 = max(cake)\n    cake.remove(max_1)\n    max_2 = max(cake)\n    print(max_1 + max_2)\n    t -= 1", "t = int(input())\nwhile t:\n    t -= 1\n    l = int(input())\n    cake = list(map(int, input().split()))\n    ans = max(cake)\n    cake.remove(ans)\n    ans += max(cake)\n    print(ans)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = max(l)\n    l.remove(s)\n    s += max(l)\n    print(s)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = max(a)\n    a.remove(x)\n    y = max(a)\n    print(x + y)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    A = list(map(int, input().split()))\n    A.sort()\n    print(A[-1] + A[-2])", "def THE_TAST(n):\n    Output = []\n    for i in range(n):\n        a = int(input())\n        list_of_cakes = list(map(int, input().split()))\n        max1 = max(list_of_cakes)\n        list_of_cakes.pop(list_of_cakes.index(max1))\n        max2 = max(list_of_cakes)\n        Output.append(max1 + max2)\n    for i in range(len(Output)):\n        print(Output[i])\nn = int(input())\nTHE_TAST(n)", "t = int(input())\nfor _ in range(t):\n    cakes = int(input())\n    weight_cakes = list(map(int, input().split()))\n    if cakes <= 2:\n        print(sum(weight_cakes))\n    else:\n        first_max = max(weight_cakes)\n        weight_cakes.remove(first_max)\n        second_max = max(weight_cakes)\n        print(first_max + second_max)", "x = int(input().strip())\nfor i in range(x):\n    y = int(input().strip())\n    list1 = list(map(int, input().strip().split()))\n    y = max(list1)\n    list1.remove(y)\n    x = max(list1)\n    list1.remove(x)\n    print(x + y)\n    list1.clear()", "def Tastiness(arr):\n    arr.sort(reverse=True)\n    return arr[0] + arr[1]\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(Tastiness(arr))", "t = int(input())\nml = []\nfor i in range(t):\n    int(input())\n    lst = list(map(int, input().rstrip().split()))\n    ml.append(lst)\nfor j in ml:\n    a = max(j)\n    j.remove(a)\n    b = max(j)\n    print(a + b)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    l = [int(j) for j in input().split()]\n    l = sorted(l)\n    s = l[n - 1] + l[n - 2]\n    print(s)", "def main():\n    for _ in range(int(input())):\n        n = int(input())\n        nums = list(map(int, input().split()))\n        nums.sort()\n        print(nums[-1] + nums[-2])\nmain()", "t = int(input())\nfor c in range(t):\n    a = int(input())\n    b = list(map(int, input().split()))\n    b.sort()\n    print(b[a - 1] + b[a - 2])", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m1 = max(l)\n    l.remove(m1)\n    m2 = max(l)\n    print(m1 + m2)", "def rmt(lis):\n    n = len(lis)\n    if n == 2:\n        return sum(lis)\n    elif n >= 2:\n        k = max(lis)\n        if lis.count(k) >= 2:\n            return 2 * k\n        else:\n            lis.remove(k)\n            return max(lis) + k\nn = int(input())\nresult = []\nfor i in range(n):\n    noe = int(input())\n    noel = list(map(int, input().split()))\n    result.append(rmt(noel))\nfor el in result:\n    print(el)", "t = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    a_max1 = max(a)\n    a.remove(a_max1)\n    a_max2 = max(a)\n    print(a_max1 + a_max2)\n    t -= 1", "for i in range(int(input())):\n    int(input())\n    l1 = list(map(int, input().split()))\n    sum = max(l1)\n    l1.remove(max(l1))\n    sum = sum + max(l1)\n    print(sum)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    entries = list(map(int, input().split()))\n    if len(entries) == 1:\n        print(entries[0])\n        break\n    max1 = max(entries)\n    entries.remove(max1)\n    max2 = max(entries)\n    print(max2 + max1)", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    print(a[0] + a[1])", "m = []\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()[:n]))\n    c = 0\n    i = max(a)\n    c += i\n    a.remove(i)\n    ii = max(a)\n    c += ii\n    m.append(c)\nfor mo in m:\n    print(mo)", "t = int(input())\nfor item in range(0, t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    max1 = max(arr)\n    arr.remove(max1)\n    max2 = max(arr)\n    print(max1 + max2)", "t = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    brr = []\n    arr = list(map(int, input().rstrip().split()))\n    marr = max(arr)\n    brr = arr\n    brr.remove(marr)\n    mbrr = max(brr)\n    print(marr + mbrr)", "a = int(input())\nfor i in range(a):\n    b = int(input())\n    c = list(map(int, input().split()))\n    c1 = max(c)\n    c3 = c.index(c1)\n    if c3 == 0:\n        c = c[c3 + 1:]\n    elif c3 == b - 1:\n        c = c[:c3]\n    else:\n        c = c[:c3] + c[c3 + 1:]\n    c2 = max(c)\n    print(c1 + c2)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    m1 = max(arr)\n    arr.remove(m1)\n    m2 = max(arr)\n    print(m1 + m2)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    print(l[-1] + l[-2])", "for _ in range(int(input())):\n    n = int(input())\n    x = sorted(list(map(int, input().split())))\n    print(sum(x[-2:]))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = []\n    s = input()\n    l = [int(j) for j in s.split(' ')]\n    if n == 2:\n        print(l[0] + l[1])\n        continue\n    t1 = max(l)\n    l.remove(t1)\n    t2 = max(l)\n    print(t1 + t2)", "def find(W):\n    W.sort()\n    return W[-1] + W[-2]\nnum = int(input())\nfor n in range(num):\n    p = input()\n    W = [int(x) for x in input().split()]\n    print(find(W))", "for i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n == 2:\n        print(sum(arr))\n    else:\n        arr = sorted(arr)\n        max1 = arr[n - 1]\n        max2 = arr[n - 2]\n        print(max1 + max2)", "import collections\nfrom math import ceil, gcd, sqrt, log\nINF = float('inf')\nmod = 1000000007\n\ndef solve():\n    n = int(input())\n    A = list(map(int, input().split()))\n    A.sort()\n    ans = A[-1] + A[-2]\n    print(ans)\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "for _ in range(int(input())):\n    length = int(input())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    print(l[0] + l[1])", "for s in [*open(0)][2::2]:\n    a = list(map(int, s.split()))\n    print(sum(sorted(a)[-2:]))", "def work():\n    n = int(input())\n    x = [int(i) for i in input().split()]\n    x.sort()\n    return x[-1] + x[-2]\nrez = list()\nt = int(input())\nfor i in range(t):\n    rez.append(work())\nfor i in rez:\n    print(i)", "for _ in range(int(input())):\n    n = int(input())\n    l = sorted(list(map(int, input().split())))\n    print(l[-1] + l[-2])", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_ls():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        ls = get_ls()\n        ls.sort()\n        print(ls[n - 1] + ls[n - 2])\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    if n > 1:\n        print(arr[-1] + arr[-2])\n    else:\n        print(arr[-1])", "for _ in ' ' * int(input()):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = max(l)\n    l.remove(a)\n    a += max(l)\n    print(a)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nfor _ in range(inp()):\n    input()\n    lst = list(map(int, input().split()))\n    lst.sort()\n    print(sum(lst[-2:]))", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    b = list(map(int, input().split()))\n    b.sort()\n    print(b[-2] + b[-1])", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    maxVal = int(a[n - 1])\n    secMax = int(a[n - 2])\n    print(maxVal + secMax)", "import math\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    q = input()\n    a = list(map(int, q.split(' ')))\n    a.sort()\n    print(a[-1] + a[-2])\n    t -= 1", "tc = int(input())\nfor i in range(tc):\n    n = input()\n    t = input()\n    a = tuple((int(x) for x in t.split()))\n    res = sorted(a)\n    print(res[-1] + res[-2])", "def solve(nums):\n    maxVal = max(nums)\n    nums.remove(maxVal)\n    return maxVal + max(nums)\nwhile True:\n    try:\n        T = int(input())\n        for _ in range(T):\n            n = int(input())\n            nums = list(map(int, input().split(' ')))\n            print(solve(nums))\n    except:\n        break", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = max(a)\n    x = a.remove(max(a))\n    y = max(a)\n    print(d + y)", "def find(L):\n    one = max(L)\n    L.remove(one)\n    two = max(L)\n    return one + two\nfor _ in range(int(input())):\n    n = int(input())\n    L = input().split()\n    intL = [int(elem) for elem in L]\n    print(find(intL))", "for i in range(int(input())):\n    (n, nums) = (int(input()), list(map(int, input().split())))\n    nums.sort()\n    print(nums[len(nums) - 1] + nums[len(nums) - 2])", "for _ in range(int(input())):\n    input()\n    x = list(map(int, input().split()))\n    print(sum(sorted(x)[-2:]))", "for _ in range(int(input())):\n    input()\n    x = list(map(int, input().split()))\n    print(sum(sorted(x)[-2:]))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    max_val = a[-1]\n    second_max_val = a[len(a) - 2]\n    print(max_val + second_max_val, end='\\n')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = max(a)\n    a.remove(p)\n    print(p + max(a))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = max(a)\n    a.remove(s)\n    s += max(a)\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    a.sort(reverse=True)\n    print(a[0] + a[1])", "for i in range(int(input())):\n    Len = int(input())\n    cake = list(map(int, input().split()))\n    cake.sort()\n    Max = max(cake)\n    cake.pop(-1)\n    SMax = max(cake)\n    print(Max + SMax)", "t = int(input())\nfor zz in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    z = max(l)\n    l.remove(z)\n    p = max(l)\n    print(z + p)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l = sorted(l, reverse=True)\n    print(l[0] + l[1])", "for i in range(int(input())):\n    input()\n    l = sorted(map(int, input().split()))\n    print(l[-1] + l[-2])", "import heapq as pq\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    nums = [-num for num in nums]\n    pq.heapify(nums)\n    print(-(pq.heappop(nums) + pq.heappop(nums)))", "def solve(nb, l):\n    pg1 = -1\n    pg2 = -1\n    for v in l:\n        if v > pg1:\n            if pg1 > pg2:\n                pg2 = pg1\n            pg1 = v\n        elif v > pg2:\n            pg2 = v\n    return pg1 + pg2\nn = int(input())\nfor p in range(n):\n    nb = int(input())\n    l = [int(x) for x in input().split()]\n    print(solve(nb, l))", "def solve(l):\n    pg1 = -1\n    pg2 = -1\n    for v in l:\n        v = int(v)\n        if v > pg2:\n            if v > pg1:\n                if pg1 > pg2:\n                    pg2 = pg1\n                pg1 = v\n            else:\n                pg2 = v\n    return pg1 + pg2\nn = int(input())\nfor p in range(n):\n    input()\n    print(solve(input().split()))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[-2] + a[-1])", "for i in range(int(input())):\n    s = int(input())\n    l = map(int, input().split(' '))\n    l = sorted(l)[::-1]\n    print(l[0] + l[1])", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().strip().split()))\n    arr = sorted(arr)\n    print(arr[-1] + arr[-2])", "for _ in range(int(input())):\n    n = int(input())\n    weights = list(map(int, input().split()))\n    weights.sort()\n    print(weights[-1] + weights[-2])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    c = max(arr)\n    arr.remove(c)\n    c += max(arr)\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    nums = list(map(int, input().split(' ')))\n    nums.sort()\n    print(nums[-1] + nums[-2])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    l.sort(reverse=True)\n    print(l[0] + l[1])", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    ans = l[len(l) - 1] + l[len(l) - 2]\n    print(ans)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nfor _ in range(inp()):\n    input()\n    lst = list(map(int, input().split()))\n    lst.sort()\n    print(sum(lst[-2:]))", "n = int(input())\na = []\nfor _ in range(n):\n    tp = input()\n    arr = list(map(int, input().split()))\n    arr.sort(reverse=True)\n    a.append(arr)\nfor x in a:\n    print(x[0] + x[1])", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a, reverse=True)\n    print(a[0] + a[1])", "alpha = []\nbeta = []\ngamma = []\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(s) for s in input().split(' ')]\n    alpha.append(n)\n    beta.append(a)\nfor i in range(t):\n    n = alpha[i]\n    a = beta[i]\n    a.sort()\n    print(a[-1] + a[-2])", "def solution(n, arr):\n    (max1, max2) = (0, 0)\n    for i in range(n):\n        if arr[i] >= max1:\n            max2 = max1\n            max1 = arr[i]\n        elif arr[i] > max2:\n            max2 = arr[i]\n    print(max1 + max2)\n\ndef main():\n    t = int(input())\n    while t:\n        n = int(input())\n        s = input().split(' ')\n        arr = [int(x) for x in s]\n        solution(n, arr)\n        t -= 1\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[-1] + a[-2])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[-1] + a[-2])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    num = list(map(int, input().split()))\n    max1 = 0\n    max2 = 0\n    for x in num:\n        if x > max1:\n            max2 = max1\n            max1 = x\n        elif x > max2:\n            max2 = x\n    print(max1 + max2)", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    list = []\n    list = [int(x) for x in input().split()]\n    list.sort()\n    print(list[a - 1] + list[a - 2])", "from itertools import combinations\nfor _ in range(int(input())):\n    l = int(input())\n    arr = [int(i) for i in input().split()]\n    arr = sorted(arr, reverse=True)\n    sm = arr[0] + arr[1]\n    print(sm)", "from itertools import combinations\nfor _ in range(int(input())):\n    l = int(input())\n    arr = sorted([int(i) for i in input().split()], reverse=True)\n    sm = arr[0] + arr[1]\n    print(sm)", "test_cases = int(input())\nfor _ in range(test_cases):\n    number_of_cases = int(input())\n    weight_of_cakes = list(map(int, input().split()))\n    weight_of_cakes.sort(reverse=True)\n    print(weight_of_cakes[0] + weight_of_cakes[1])", "a = int(input())\ni = 0\nwhile a > i:\n    i = i + 1\n    b = int(input())\n    c = list(map(int, input().split()))\n    d = sorted(c)\n    print(d[b - 1] + d[b - 2])", "a = int(input())\nfor i in range(a):\n    b = int(input())\n    c = list(map(int, input().split()))\n    d = max(c)\n    c.remove(d)\n    e = max(c)\n    print(d + e)", "nb_test_case = int(input())\ndico = {}\nfor i in range(nb_test_case):\n    nb_pieces = int(input())\n    liste = []\n    weight = [int(x) for x in input().split()]\n    dico[i] = weight\nfor test_case in dico.keys():\n    maximum1 = max(dico[test_case])\n    dico[test_case].remove(maximum1)\n    maximum2 = max(dico[test_case])\n    print(maximum1 + maximum2)"]