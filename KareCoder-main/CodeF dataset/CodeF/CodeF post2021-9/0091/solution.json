["from sys import stdin\n\ndef solve():\n    results = []\n    for _ in range(int(stdin.readline().strip())):\n        (l, r, k) = map(int, stdin.readline().rstrip().split())\n        if l == r and l > 1:\n            results.append('YES')\n            continue\n        cnt = (r - l) // 2\n        if r % 2 or l % 2:\n            cnt += 1\n        if k >= cnt:\n            results.append('YES')\n        else:\n            results.append('NO')\n    print('\\n'.join(results))\nsolve()", "for s in [*open(0)][1:]:\n    (l, r, k) = map(int, s.split())\n    print('YNEOS'[r < 2 or (r > l and (r + 1) // 2 - l // 2 > k)::2])", "for s in [*open(0)][1:]:\n    (l, r, k) = map(int, s.split())\n    print('YNEOS'[r < 2 or (r > l and k < (r + 1) // 2 - l // 2)::2])", "for s in [*open(0)][1:]:\n    (l, r, k) = map(int, s.split())\n    print('YNEOS'[r < 2 or (r > l and k < (r + 1) // 2 - l // 2)::2])", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (l, r, k) = map(int, input().strip().split())\n    if l == r and l != 1:\n        print('YES')\n        continue\n    if l & 1 and (r - l + 2) // 2 <= k:\n        print('YES')\n        continue\n    elif not l & 1 and (r - l + 1) // 2 <= k:\n        print('YES')\n        continue\n    print('NO')", "for s in [*open(0)][1:]:\n    (l, r, k) = map(int, s.split())\n    print('YNEOS'[r < 2 or (r + 1) // 2 - l // 2 > k < r - l::2])", "for s in [*open(0)][1:]:\n    (l, r, k) = map(int, s.split())\n    print('YNEOS'[r < 2 or (r + 1) // 2 - l // 2 > k < r - l::2])", "for s in [*open(0)][1:]:\n    (l, r, k) = map(int, s.split())\n    print('YNEOS'[r < 2 or (r + 1) // 2 - l // 2 > k < r - l::2])", "for s in [*open(0)][1:]:\n    (l, r, k) = map(int, s.split())\n    print('YNEOS'[r < 2 or (r + 1) // 2 - l // 2 > k < r - l::2])", "for s in [*open(0)][1:]:\n    (l, r, k) = map(int, s.split())\n    print('YNEOS'[r < 2 or (r + 1) // 2 - l // 2 > k < r - l::2])", "for s in [*open(0)][1:]:\n    (l, r, k) = map(int, s.split())\n    print('YNEOS'[r < 2 or (r + 1) // 2 - l // 2 > k < r - l::2])", "for s in [*open(0)][1:]:\n    (l, r, k) = map(int, s.split())\n    print('YNEOS'[r < 2 or (r + 1) // 2 - l // 2 > k < r - l::2])", "for s in [*open(0)][1:]:\n    (l, r, k) = map(int, s.split())\n    print('YNEOS'[r < 2 or (r + 1) // 2 - l // 2 > k < r - l::2])", "for s in [*open(0)][1:]:\n    (l, r, k) = map(int, s.split())\n    print('YNEOS'[r < 2 or (r + 1) // 2 - l // 2 > k < r - l::2])", "for s in [*open(0)][1:]:\n    (l, r, k) = map(int, s.split())\n    print('YNEOS'[r < 2 or (r + 1) // 2 - l // 2 > k < r - l::2])", "for s in [*open(0)][1:]:\n    (l, r, k) = map(int, s.split())\n    print('YNEOS'[r < 2 or (r + 1) // 2 - l // 2 > k < r - l::2])", "for s in [*open(0)][1:]:\n    (l, r, k) = map(int, s.split())\n    print('YNEOS'[r < 2 or (r + 1) // 2 - l // 2 > k < r - l::2])", "for s in [*open(0)][1:]:\n    (l, r, k) = map(int, s.split())\n    print('YNEOS'[r < 2 or (r + 1) // 2 - l // 2 > k < r - l::2])", "for s in [*open(0)][1:]:\n    (l, r, k) = map(int, s.split())\n    print('YNEOS'[r < 2 or (r + 1) // 2 - l // 2 > k < r - l::2])", "otv = []\nfor _ in range(int(input())):\n    (l, r, k) = map(int, input().split())\n    if l == r == 1:\n        otv.append('NO')\n        continue\n    if l == r:\n        otv.append('YES')\n        continue\n    if l % 2 == 1 and r % 2 == 1:\n        n = (r - l + 2) // 2\n    elif l % 2 == 1 and r % 2 == 0:\n        n = (r - l + 1) // 2\n    elif l % 2 == 0 and r % 2 == 1:\n        n = (r - l + 1) // 2\n    else:\n        n = (r - l) // 2\n    if n <= k:\n        otv.append('YES')\n    else:\n        otv.append('NO')\nprint('\\n'.join(otv))", "for s in [*open(0)][1:]:\n    (l, r, k) = map(int, s.split())\n    print('YNEOS'[r < 2 or (r + 1) // 2 - l // 2 > k < r - l::2])", "for s in [*open(0)][1:]:\n    (l, r, k) = map(int, s.split())\n    print('YNEOS'[r < 2 or (r + 1) // 2 - l // 2 > k < r - l::2])", "for s in [*open(0)][1:]:\n    (l, r, k) = map(int, s.split())\n    print('YNEOS'[r < 2 or (r + 1) // 2 - l // 2 > k < r - l::2])", "for s in [*open(0)][1:]:\n    (l, r, k) = map(int, s.split())\n    print('YNEOS'[r < 2 or (r + 1) // 2 - l // 2 > k < r - l::2])", "for s in [*open(0)][1:]:\n    (l, r, k) = map(int, s.split())\n    print('YNEOS'[r < 2 or (r + 1) // 2 - l // 2 > k < r - l::2])", "for s in [*open(0)][1:]:\n    (l, r, k) = map(int, s.split())\n    print('YNEOS'[r < 2 or (r + 1) // 2 - l // 2 > k < r - l::2])", "for s in [*open(0)][1:]:\n    (l, r, k) = map(int, s.split())\n    print('YNEOS'[r < 2 or (r + 1) // 2 - l // 2 > k < r - l::2])", "for s in [*open(0)][1:]:\n    (l, r, k) = map(int, s.split())\n    print('YNEOS'[r < 2 or (r + 1) // 2 - l // 2 > k < r - l::2])", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    (l, r, k) = map(int, input().split())\n    odds = (r - l) // 2 + int(l % 2 + r % 2 >= 1)\n    if odds <= k or (r == l and l != 1):\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\nnum_test_cases = int(input())\nfor test_case_ittr in range(num_test_cases):\n    (left, right, num_moves) = [int(x) for x in input().split()]\n    if left == right == 1:\n        print('NO')\n        continue\n    if num_moves == right - left:\n        print('YES')\n        continue\n    num_odds_in_range = (right + 1) // 2 - left // 2\n    print('YES' if num_odds_in_range <= num_moves else 'NO')", "import sys\ninput = sys.stdin.readline\nfor i in range(int(input())):\n    (l, r, k) = map(int, input().split())\n    if r == l and r != 1:\n        print('YES')\n    else:\n        if r % 2 != 0:\n            r += 1\n        if l % 2 != 0:\n            l -= 1\n        if (r - l + 1) // 2 <= k:\n            print('YES')\n        else:\n            print('NO')", "import sys\ninput = sys.stdin.readline\nt = int(input())\nwhile t > 0:\n    (l, r, k) = map(int, input().split())\n    if l == r and l != 1:\n        print('YES')\n    else:\n        x = (r - l) // 2\n        if r % 2 != 0 or l % 2 != 0:\n            x += 1\n        if x > k:\n            print('NO')\n        else:\n            print('YES')\n    t -= 1", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    (l, r, k) = map(int, input().split())\n    if k == 0:\n        if l == r:\n            if l != 1:\n                print('YES')\n            else:\n                print('NO')\n        else:\n            print('NO')\n    else:\n        odd = (r - l) // 2\n        if r % 2 != 0 or l % 2 != 0:\n            odd += 1\n        even = r - l + 1 - odd\n        if odd > k:\n            print('NO')\n        else:\n            print('YES')", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input().strip())):\n    (l, r, k) = map(int, input().split())\n    if l == r:\n        if l == 1:\n            print('NO')\n        else:\n            print('YES')\n        continue\n    n = r - l + 1\n    if l % 2 == 0:\n        if n - (n // 2 + n % 2) <= k:\n            print('YES')\n        else:\n            print('NO')\n    elif n // 2 + n % 2 <= k:\n        print('YES')\n    else:\n        print('NO')", "import math\nimport sys\nimport itertools\nimport fractions\nwtf = sys.stdin.read()\nwtf = wtf.strip().split('\\n')\nfor t in wtf[1:]:\n    (l, r, k) = map(int, t.split())\n    N = r - l + 1\n    if N % 2 == 0 and k >= N // 2 or (N % 2 != 0 and k >= N // 2 + 1) or (N % 2 != 0 and r % 2 == 0 and (k >= N // 2)) or (N == 1 and l != 1):\n        print('YES')\n    else:\n        print('NO')", "import sys\nfrom sys import stdin, stdout\nfrom math import ceil, floor, sqrt, log, log2, log10\nfrom collections import Counter\nint_max = float('inf')\nint_min = -float('inf')\nmod = 10 ** 9 + 7\nANS = []\ninput = stdin.readline\n\ndef solve():\n    pass\nt = int(input())\nfor i in range(t):\n    (l, r, k) = map(int, input().split())\n    n = r - l + 1\n    if n % 2 == 0:\n        x = n // 2\n    elif l % 2 == 1:\n        x = n // 2 + 1\n    else:\n        x = n // 2\n    if n == 1 and l != 1:\n        print('YES')\n        continue\n    if x <= k:\n        print('YES')\n    else:\n        print('NO')", "import math, sys\ninput = sys.stdin.readline\nS = lambda : input().rstrip()\nI = lambda : int(S())\nM = lambda : map(int, S().split())\nL = lambda : list(M())\nmod1 = 1000000007\nmod2 = 998244353\nfor _ in range(I()):\n    (l, r, k) = M()\n    ans = (r - l + 1) // 2\n    if l == r:\n        print('YES' if l != 1 else 'NO')\n        continue\n    if l % 2 == 1 and r % 2 == 1:\n        ans += 1\n    print('YES' if ans <= k else 'NO')", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (l, r, k) = map(int, input().strip().split())\n    if l == r and l != 1:\n        print('YES')\n        continue\n    if l & 1:\n        if (r - l + 2) // 2 <= k:\n            print('YES')\n        else:\n            print('NO')\n    elif (r - l + 1) // 2 <= k:\n        print('YES')\n    else:\n        print('NO')", "def solve(l, r, k):\n    if (l != 1 and r != 1) and (l == r or k == r - l):\n        return True\n    n = r - l + 1\n    even = n // 2\n    odd = even\n    if n % 2:\n        even = (n - 1) // 2\n        odd = (n - 1) // 2\n        if l % 2:\n            odd += 1\n        else:\n            even += 1\n    if k < odd:\n        return False\n    else:\n        return True\nout = []\nt = int(input())\nfor case in range(t):\n    s = list(map(int, input().split(' ')))\n    (l, r, k) = (s[0], s[1], s[2])\n    if solve(l, r, k):\n        out.append('YES')\n    else:\n        out.append('NO')\nprint('\\n'.join(out))", "import sys\nimport math\nfrom math import gcd, sqrt, log2, ceil, floor\nimport heapq as hq\nfrom bisect import bisect_right, bisect_left, bisect\nimport itertools\nfrom sys import stdin, stdout, setrecursionlimit\n\ndef isPowerOfTwo(x):\n    return x and (not x & x - 1)\nMOD = int(1000000000.0) + 7\nalp = 'abcdefghijklmnopqrstuvwxyz'\nv = {'a': 1, 'e': 1, 'i': 1, 'o': 1, 'u': 1}\nc = {}\nT = 1\nT = int(stdin.readline())\nfor _ in range(T):\n    (l, r, k) = list(map(int, stdin.readline().rstrip().split()))\n    s = r - l + 1\n    if k == 0:\n        if s == 1:\n            if l == 1:\n                print('NO')\n            else:\n                print('YES')\n        else:\n            print('NO')\n    else:\n        odd = s // 2\n        if l & 1 and r & 1:\n            odd += 1\n        if odd <= k:\n            print('YES')\n        else:\n            print('NO')", "from math import gcd\nimport sys\ninput = sys.stdin.readline\nMAX = sys.maxsize\nsys.setrecursionlimit(10 ** 9)\n\ndef inp():\n    return int(input())\n\ndef read_int_list():\n    return list(map(int, input().split()))\n\ndef solve(l, r, k):\n    if l == r:\n        return 'NO' if l == 1 else 'YES'\n    diff = r - l + 1 - (r // 2 - (l - 1) // 2)\n    return 'YES' if diff <= k else 'NO'\nfor _ in range(inp()):\n    (l, r, k) = read_int_list()\n    print(solve(l, r, k))", "import sys\nfrom sys import stdin, stdout\nfrom math import ceil, floor, sqrt, log, log2, log10\nfrom collections import Counter\nint_max = float('inf')\nint_min = -float('inf')\nmod = 10 ** 9 + 7\nANS = []\ninput = stdin.readline\n\ndef solve():\n    pass\nt = int(input())\nfor i in range(t):\n    (l, r, k) = map(int, input().split())\n    n = r - l + 1\n    if n % 2 == 0:\n        x = n // 2\n    elif l % 2 == 1:\n        x = n // 2 + 1\n    else:\n        x = n // 2\n    if n == 1 and l != 1:\n        print('YES')\n        continue\n    if x <= k:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin\nfrom math import gcd, ceil\n\ndef rei():\n    return list(map(int, stdin.readline().strip().split(' ')))\n\ndef res():\n    return stdin.readline().rstrip()\n\ndef prno():\n    print('NO')\n\ndef pryes():\n    print('YES')\n\ndef solve():\n    (l, r, k) = rei()\n    A = r - l + 1\n    if A == 1:\n        if l == 1:\n            prno()\n        else:\n            pryes()\n        return\n    if l % 2 == 0:\n        n = ceil(A / 2)\n    else:\n        n = A // 2\n    if A - n <= k:\n        pryes()\n    else:\n        prno()\nt = rei()[0]\nfor _ in range(t):\n    solve()", "import sys\ninput = lambda : sys.stdin.readline().strip()\nsys.setrecursionlimit(10 ** 9)\nfor _ in [0] * int(input()):\n    (l, r, k) = map(int, input().split())\n    if l == r:\n        if l == r == 1:\n            print('NO')\n        else:\n            print('YES')\n    elif k == r - l:\n        print('YES')\n    elif k >= (r - l + l % 2 + 1) // 2:\n        print('YES')\n    else:\n        print('NO')", "import math\nimport sys\nfrom operator import itemgetter\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nnumber_tests = inp()\nfor _ in range(number_tests):\n    numbers = inlt()\n    l = numbers[0]\n    r = numbers[1]\n    k = numbers[2]\n    if l == r:\n        print('YES' if r > 1 else 'NO')\n    else:\n        pare = r // 2 - (l - 1) // 2\n        impare = r - l + 1 - pare\n        print('YES' if k >= impare else 'NO')", "import math\nimport functools\nimport sys\nfrom typing import OrderedDict\ninput = sys.stdin.readline\n\ndef ii():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nimport collections\nfor _ in range(ii()):\n    (l, r, k) = map(int, input().split())\n    if l == r:\n        print('YES' if l > 1 else 'NO')\n    else:\n        odd = even = (r - l + 1) // 2\n        if r % 2 == l % 2:\n            if r % 2 == 1:\n                odd += 1\n            else:\n                even += 1\n        print('YES' if k >= odd else 'NO')", "import sys\n\ndef _input_iter():\n    for line in sys.stdin:\n        for part in line.strip().split(' '):\n            stripped = part.strip()\n            if stripped:\n                yield stripped\nstream = _input_iter()\n\ndef read_int():\n    return int(next(stream))\n\ndef read_str():\n    return next(stream)\n\ndef count_odd(L, R):\n    N = (R - L) // 2\n    if R % 2 != 0 or L % 2 != 0:\n        N += 1\n    return N\n\ndef run():\n    l = read_int()\n    r = read_int()\n    k = read_int()\n    if r == l:\n        if r == 1:\n            print('NO')\n        else:\n            print('YES')\n    elif count_odd(l, r) <= k:\n        print('YES')\n    else:\n        print('NO')\ntest_cases = read_int()\nfor _ in range(test_cases):\n    run()", "import math\nfrom sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    (l, r, k) = [int(i) for i in input().split()]\n    n = r - l + 1\n    if n % 2 == 0:\n        x = n // 2\n    elif l % 2:\n        x = n // 2 + 1\n    else:\n        x = n // 2\n    if n == 1 and l != 1:\n        print('YES')\n        continue\n    if x > k:\n        print('NO')\n    else:\n        print('YES')", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_array():\n    return list(get_ints())\n\ndef input():\n    return sys.stdin.readline().strip()\n\ndef count_odd(l, r):\n    n = (r - l) // 2\n    if r % 2 != 0 or l % 2 != 0:\n        n += 1\n    return n\nT = int(input())\nwhile T > 0:\n    (l, r, k) = get_ints()\n    odd = count_odd(l, r)\n    even = r - l + 1 - odd\n    if l == r:\n        if l == 1:\n            print('NO')\n        else:\n            print('YES')\n    elif k >= odd:\n        print('YES')\n    else:\n        print('NO')\n    T -= 1", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr(asList=False):\n    s = input()\n    if asList:\n        return list(s[:len(s) - 1])\n    return s[:len(s) - 1]\n\ndef invr():\n    return map(int, input().split())\nresults = []\n\ndef getNumberOfOddsAndEvens(left, right):\n    n = right - left + 1\n    evens = 0\n    if n % 2 == 0:\n        evens = n // 2\n    elif left % 2 == 0:\n        evens = n // 2 + 1\n    else:\n        evens = n // 2\n    return (n - evens, evens)\nfor _ in range(inp()):\n    [l, r, k] = inlt()\n    n = r - l + 1\n    [odds, evens] = getNumberOfOddsAndEvens(l, r)\n    if l == 1 and r == 1:\n        results.append('NO')\n    elif k == 0:\n        if n == 1:\n            results.append('YES')\n        else:\n            results.append('NO')\n    elif odds <= k:\n        results.append('YES')\n    else:\n        results.append('NO')\nfor r in results:\n    print(r)", "t = int(input())\nlist_res = []\n\ndef GCD(lkr):\n    fim = lkr[1]\n    inicio = lkr[0]\n    a_size = fim - inicio + 1\n    if a_size == 1:\n        if inicio == 1 or inicio == 0:\n            return 'NO'\n        else:\n            return 'YES'\n    if fim % 2 == 0 or inicio % 2 == 0:\n        quantidade_impares = a_size // 2\n    else:\n        quantidade_impares = a_size // 2 + 1\n    if quantidade_impares > lkr[2]:\n        return 'NO'\n    else:\n        return 'YES'\nfor i in range(t):\n    lrk = input().split()\n    lrk = [int(j) for j in lrk]\n    list_res.append(GCD(lrk))\nfor o in list_res:\n    print(o)", "import sys\ninput = sys.stdin.readline\n\ndef gcd(a, b):\n    while b > 0:\n        (a, b) = (b, a % b)\n    return a\n\ndef solution(l: int, r: int, k: int) -> str:\n    if r - l == 0 and r != 1:\n        return 'YES'\n    if l % 2 == 0:\n        cnt_odd = (r - l + 1) // 2\n    else:\n        cnt_even = (r - l + 1) // 2\n        cnt_odd = r - l + 1 - cnt_even\n    if cnt_odd <= k:\n        return 'YES'\n    else:\n        return 'NO'\nt = int(input())\nfor tc in range(t):\n    (l, r, k) = map(int, input().split())\n    sol = solution(l, r, k)\n    print(sol)", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nfor _ in range(int(input())):\n    (l, r, k) = [int(item) for item in input().split()]\n    check = r - l + 1\n    ans = check // 2\n    flag = False\n    if l % 2 == 1 and r % 2 == 1:\n        ans += 1\n    if l == r == 1:\n        check += 1\n    if ans <= k or check == 1:\n        flag = True\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "a = int(input())\nres = []\nfor i in range(a):\n    stroka_1 = input().split()\n    l = int(stroka_1[0])\n    r = int(stroka_1[1])\n    k = int(stroka_1[2])\n    if k == 0 and r == l and (r != 1):\n        res.append('YES')\n    elif (r - l + 1) % 2 == 0:\n        if k >= (r - l + 1) // 2:\n            res.append('YES')\n        else:\n            res.append('NO')\n    elif (r - l + 1) % 2 != 0:\n        if l % 2 == 0:\n            if k >= (r - l + 1) // 2:\n                res.append('YES')\n            else:\n                res.append('NO')\n        elif k >= (r - l + 1) // 2 + 1:\n            res.append('YES')\n        else:\n            res.append('NO')\nfor i in res:\n    print(i)", "t = int(input())\nanswer = []\nfor i in range(t):\n    (l, r, k) = map(int, input().split())\n    if r - l == 0:\n        if l == 1:\n            answer.append('NO')\n        else:\n            answer.append('YES')\n    elif r - l == 1:\n        if k == 0:\n            answer.append('NO')\n        else:\n            answer.append('YES')\n    else:\n        if l % 2 == 1 and r % 2 == 1:\n            n = (r - l) / 2\n        else:\n            n = int((r - l) / 2) + 1\n        if k >= r - l + 1 - n:\n            answer.append('YES')\n        else:\n            answer.append('NO')\nfor answers in answer:\n    print(answers)", "t = int(input())\nresults = []\nfor i in range(t):\n    (l, r, k) = input().split()\n    (l, r, k) = (int(l), int(r), int(k))\n    ans = 'NO'\n    if l != r:\n        a = l % 2\n        b = r % 2\n        if a and b:\n            if k >= (r - l) / 2 + 1:\n                ans = 'YES'\n        elif not a and (not b):\n            if k >= (r - l) / 2:\n                ans = 'YES'\n        elif k >= (r - l + 1) / 2:\n            ans = 'YES'\n    elif l != 1:\n        ans = 'YES'\n    results.append(ans)\nfor result in results:\n    print(result)", "times = int(input())\nans = []\nfor time in range(times):\n    lrk = input().split()\n    if lrk[0] == lrk[1]:\n        if lrk[0] == '1':\n            ans.append('NO')\n            continue\n        ans.append('YES')\n        continue\n    if int(lrk[0]) % 2 == 0 and int(lrk[1]) % 2 == 0:\n        if (int(lrk[1]) - int(lrk[0])) // 2 <= int(lrk[2]):\n            ans.append('YES')\n            continue\n    elif (int(lrk[1]) - int(lrk[0]) + 2) // 2 <= int(lrk[2]):\n        ans.append('YES')\n        continue\n    ans.append('NO')\n    continue\nfor i in ans:\n    print(i)", "import sys\n\ndef rl():\n    return sys.stdin.readline().rstrip()\n\ndef ri():\n    return int(rl())\n\ndef ril():\n    return [int(x) for x in rl().split(' ')]\n\ndef main():\n    t = ri()\n    for _ in range(t):\n        (l, r, k) = ril()\n        if l == r and l > 1:\n            print('YES')\n            continue\n        l_even = l if l % 2 == 0 else l + 1\n        r_even = r if r % 2 == 0 else r - 1\n        div_two = (r_even - l_even) / 2 + 1\n        no_div_two = r - l + 1 - div_two\n        if k >= no_div_two:\n            print('YES')\n        else:\n            print('NO')\nmain()", "t = int(input())\ninplist = list()\nfor u in range(t):\n    inplist.append(input())\n\ndef mainp(l, r, k):\n    k1 = r - l\n    if k1 == 0 and r == 1:\n        print('NO')\n    elif k1 == 0 and r != 1:\n        print('YES')\n    elif k1 % 2 == 1:\n        barrier = int((k1 + 1) / 2)\n        if k < barrier:\n            print('NO')\n        elif k >= barrier:\n            print('YES')\n    elif k1 % 2 == 0:\n        barrier = int(k1 / 2)\n        if l % 2 == 0 and k < barrier:\n            print('NO')\n        elif l % 2 == 0 and k >= barrier:\n            print('YES')\n        elif l % 2 == 1 and k <= barrier:\n            print('NO')\n        elif l % 2 == 1 and k > barrier:\n            print('YES')\nfor string in inplist:\n    lst = string.split()\n    l = int(lst[0])\n    r = int(lst[1])\n    k = int(lst[2])\n    mainp(l, r, k)", "cases = range(int(input()))\nfunc = lambda : [int(q) for q in input().split()]\nans = []\nfor _ in cases:\n    (l, r, k) = func()\n    first = True\n    if k == 0:\n        det = 0\n    else:\n        det = k + 1\n    if l == r:\n        if l == 1:\n            ans.append('NO')\n            continue\n        if k == 0:\n            ans.append('YES')\n            continue\n    if l % 2 == 1:\n        tot = (r - l + 2) // 2\n    else:\n        tot = (r - l + 1) // 2\n    if tot >= det:\n        ans.append('NO')\n    else:\n        ans.append('YES')\nfor q in ans:\n    print(q)", "t = int(input())\nanswers = []\nfor i in range(t):\n    (l, r, k) = map(int, input().split())\n    ans = 'NO'\n    n = (r - l + 1) // 2\n    if l % 2 == 1 and r % 2 == 1:\n        n += 1\n    if l == r:\n        ans = 'YES'\n    if n <= k:\n        ans = 'YES'\n    if l == 1 and r == 1:\n        ans = 'NO'\n    answers.append(ans)\nfor i in answers:\n    print(i)", "res = []\nfor z in range(int(input())):\n    (l, r, k) = (0, 0, 0)\n    s = [int(x) for x in input().split()]\n    l = int(s[0])\n    r = int(s[1])\n    k = int(s[2])\n    if r - l == 0 and l != 1:\n        res.append('YES')\n    else:\n        odd = (r + 1) // 2 - l // 2\n        if k >= odd:\n            res.append('YES')\n        else:\n            res.append('NO')\nfor i in res:\n    print(i)", "import math\n\ndef difference(first, second):\n    num = abs(len(first) - len(second))\n    if num:\n        return 1000\n    for i in range(min(len(first), len(second))):\n        if first[i] != second[i]:\n            num += 1\n    return num\nanswers = []\nfor i in range(int(input())):\n    (l, r, k) = map(int, input().split())\n    even = 0\n    odd = 0\n    if l == r:\n        if l == 1:\n            ans = 'NO'\n        else:\n            ans = 'YES'\n    else:\n        length = r - l + 1\n        if not l % 2 and (not r % 2):\n            even = int(math.ceil(length / 2))\n            odd = even - 1\n        elif l % 2 and r % 2:\n            odd = int(math.ceil(length / 2))\n            even = odd - 1\n        else:\n            odd = length // 2\n            even = length // 2\n        if even > 0 and k >= odd:\n            ans = 'YES'\n        else:\n            ans = 'NO'\n    answers.append(ans)\nfor i in answers:\n    print(i)", "n = int(input())\nb = []\nfor i in range(n):\n    a = list(map(int, input().split(' ')))\n    b.append(a)\nfor i in range(len(b)):\n    k = b[i][2]\n    l = b[i][0]\n    r = b[i][1]\n    if l == r and l != 1:\n        print('YES')\n    elif l == r and l == 1:\n        print('NO')\n    else:\n        n = r - l + 1\n        if n % 2 == 0 and k >= n / 2:\n            print('YES')\n        elif n % 2 == 1 and k >= n // 2 + 1:\n            print('YES')\n        elif n % 2 == 1 and l % 2 == 0 and (r % 2 == 0) and (k >= n // 2):\n            print('YES')\n        else:\n            print('NO')", "NTC = int(input())\nTCL = []\ni = 0\nwhile i < NTC:\n    strin = input()\n    strin = strin.split(' ')\n    TCL.append(strin)\n    i = i + 1\ni = 0\nwhile i < NTC:\n    l = int(TCL[i][0])\n    r = int(TCL[i][1])\n    k = int(TCL[i][2])\n    dist = r - l\n    if l == r and l > 1:\n        print('YES')\n    else:\n        if l % 2 == 0 and r % 2 == 0:\n            checker = dist // 2\n        else:\n            checker = dist // 2 + 1\n        if checker > k:\n            print('NO')\n        else:\n            print('YES')\n    i = i + 1", "def main():\n    t = int(input())\n    for i in range(t):\n        (l, r, k) = [int(i) for i in input().split()]\n        if l == r and l > 1:\n            print('YES')\n            continue\n        n = (r - l + 1) // 2\n        if l % 2 == 1 and r % 2 == 1:\n            n += 1\n        if k >= n:\n            print('YES')\n            continue\n        print('NO')\nmain()", "def processing(a, b, c):\n    if c == 0:\n        if a == b and a != 1:\n            return 'YES'\n        else:\n            return 'NO'\n    requirement = (b - a + 1) // 2\n    if a % 2 == 1 and b % 2 == 1:\n        requirement += 1\n    if requirement <= c:\n        return 'YES'\n    else:\n        return 'NO'\nn = int(input())\nwhile n > 0:\n    (a, b, c) = input().split()\n    print(processing(int(a), int(b), int(c)))\n    n -= 1", "n = int(input())\nfor i in range(n):\n    (l, r, k) = map(int, input().split())\n    if l == r:\n        print('YES' if l > 1 else 'NO')\n    else:\n        print('YES' if (r + 1) // 2 - l // 2 <= k else 'NO')", "testCases = int(input())\nfor _ in range(testCases):\n    (l, r, k) = map(int, input().split())\n    if r == l:\n        if r <= 1:\n            print('NO')\n        else:\n            print('YES')\n    elif (r - l) // 2 + (r % 2 or l % 2) <= k:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (l, r, k) = input().split()\n    l = int(l)\n    r = int(r)\n    k = int(k)\n    if r - l == 0 and r == 1:\n        print('NO')\n    elif r - l == 0 and r != 1:\n        print('YES')\n    elif (r - l) / 2 < k:\n        print('YES')\n    elif (r - l) / 2 == k:\n        if l % 2 == 0:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (l, h, k) = map(int, input().split())\n    if l % 2 == 0 and h % 2 == 0 or (l == h and l != 1):\n        cnt = (h - l) // 2\n    else:\n        cnt = (h - l) // 2 + 1\n    if cnt <= k:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (l, r, k) = map(int, input().split())\n    e = (r + 1) // 2 - l // 2\n    if k >= e or l == r != 1:\n        print('YES')\n    else:\n        print('NO')", "import math\nletters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        (l, r, k) = map(int, input().split())\n        L = r - l + 1\n        if L == 1 and l > 1:\n            print('YES')\n            continue\n        if l % 2 == 0:\n            print('YES' if k >= L // 2 else 'NO')\n        elif L % 2 == 0:\n            print('YES' if k >= L // 2 else 'NO')\n        else:\n            print('YES' if k >= L // 2 + 1 else 'NO')\nmain()", "for _ in range(int(input())):\n    (l, r, k) = map(int, input().split())\n    t = (r - l + 1) // 2\n    if r % 2 == 1 and l % 2 == 1:\n        t += 1\n    if k >= t or (l - r == 0 and l != 1):\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (l, r, k) = map(int, input().split())\n    if l == r:\n        if l == 1:\n            print('NO')\n        else:\n            print('YES')\n    elif l % 2 == 1:\n        if k >= (r - l + 2) // 2:\n            print('YES')\n        else:\n            print('NO')\n    elif k >= (r - l + 1) // 2:\n        print('YES')\n    else:\n        print('NO')", "for l in range(int(input())):\n    (l, r, k) = map(int, input().split())\n    m = (r - l + 1 + l % 2) // 2\n    if l == r and l != 1:\n        m = 0\n    if k >= m:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (l, r, k) = map(int, input().split())\n    if l == r and l != 1:\n        print('YES')\n    elif l % 2 != 0:\n        if r % 2 != 0:\n            if k > (r - l) // 2:\n                print('YES')\n            else:\n                print('NO')\n        elif k >= (r - l + 1) // 2:\n            print('YES')\n        else:\n            print('NO')\n    elif r % 2 == 0:\n        if k >= (r - l) // 2:\n            print('YES')\n        else:\n            print('NO')\n    elif k >= (r - l + 1) // 2:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (l, r, k) = map(int, input().split())\n    d = (r + 1) // 2 - l // 2\n    print('YES' if k >= d or l == r != 1 else 'NO')", "for i in range(int(input())):\n    (l, r, k) = map(int, input().split())\n    good_k = (r - l + 1) // 2\n    if l - r == 0 and r > 1:\n        print('YES')\n    elif k > good_k:\n        print('YES')\n    elif k == good_k and (r % 2 == 0 or l % 2 == 0):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (l, r, k) = map(int, input().split())\n    p = r - l + 1\n    if r == l and r != 1:\n        print('YES')\n    elif (r - l + 1) % 2 == 0:\n        if k >= p // 2:\n            print('YES')\n        else:\n            print('NO')\n    elif l % 2 == 0:\n        if k >= (p - 1) // 2:\n            print('YES')\n        else:\n            print('NO')\n    elif k >= (p + 1) // 2:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (l, r, k) = input().split()\n    l = int(l)\n    r = int(r)\n    k = int(k)\n    multip = 1\n    if l % 2 == 0 and r % 2 == 0:\n        multip = 0\n    n_odd = (r - l) // 2 + multip\n    if l == r and l == 1:\n        print('NO')\n    elif k >= n_odd or l == r:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (l, r, k) = map(int, input().split())\n    s = (r + 1) // 2 - l // 2\n    if k >= s or (l == r and l > 1):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (l, r, k) = map(int, input().split())\n    e = (r + 1) // 2 - l // 2\n    if k >= e or l == r != 1:\n        print('YES')\n    else:\n        print('NO')", "def solve():\n    (l, r, k) = input().split()\n    l = int(l)\n    r = int(r)\n    k = int(k)\n    if k == 0:\n        if r == 1 and l == 1:\n            print('NO')\n        elif r == l:\n            print('YES')\n        elif r != l:\n            print('NO')\n    elif r % 2 == 1 and l % 2 == 1:\n        if k >= (r - l + 1) // 2 + 1:\n            print('YES')\n        else:\n            print('NO')\n    elif k >= (r - l + 1) // 2:\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nwhile t:\n    solve()\n    t -= 1", "def solve():\n    (l, r, k) = map(int, input().split())\n    if l == r and l > 1 or (r - l) // 2 + (l % 2 or r % 2) <= k:\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nfor _ in range(t):\n    solve()", "for _ in range(int(input())):\n    (l, r, k) = map(int, input().split())\n    if l == r and l == 1:\n        print('NO')\n    elif l == r and l != 1:\n        print('YES')\n    else:\n        if l > 0:\n            o = (r + 1) // 2 - l // 2\n        else:\n            o = (r + 1) // 2\n        if o <= k:\n            print('YES')\n        else:\n            print('NO')", "for l in range(int(input())):\n    (l, r, k) = map(int, input().split())\n    m = (r - l + 1 + l % 2) // 2\n    if l == r and l != 1:\n        m = 0\n    if k >= m:\n        print('YES')\n    else:\n        print('NO')", "import math\na = int(input())\nfor i in range(a):\n    (d, r, k) = map(int, input().split())\n    if d == r and d % 2 == 1:\n        if d != 1:\n            print('YES')\n            continue\n        else:\n            print('NO')\n            continue\n    if d % 2 == 1 and r % 2 == 1:\n        nechet = (r - d + 1) // 2 + 1\n    else:\n        nechet = (r - d + 1) // 2\n    if k >= nechet:\n        print('YES')\n    else:\n        print('NO')", "import math\n\ndef solve():\n    for t in range(int(input())):\n        (l, r, k) = map(int, input().split())\n        if l == r:\n            if l == 1:\n                print('NO')\n            if l > 1:\n                print('YES')\n        else:\n            ln = r - l + 1\n            if l % 2 == 1 and r % 2 == 1:\n                no = (r - l) // 2\n                no += 1\n            else:\n                no = r - l + 1\n                no = no // 2\n            if no > k:\n                print('NO')\n            else:\n                print('YES')\nsolve()", "for _ in range(int(input())):\n    (l, r, k) = map(int, input().split())\n    if l == r and l != 1 or k > (r - l + 1) // 2 or (k == (r - l + 1) // 2 and ((r - l + 1) % 2 == 0 or l % 2 == 0)):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nodds = 0\nfor i in range(t):\n    (l, r, k) = [int(x) for x in input().split()]\n    if l == r and l > 1:\n        print('YES')\n        continue\n    elif l % 2 == 0 and r % 2 == 0:\n        odds = (r - l) // 2 - 1\n    else:\n        odds = (r - l) // 2\n    if k > odds:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    line = input().split()\n    (l, r, k) = (int(line[0]), int(line[1]), int(line[2]))\n    if l == r and l > 1:\n        print('YES')\n    elif (l % 2 == 0 or r % 2 == 0) and (r - l) / 2 <= k:\n        print('YES')\n    elif (l % 2 != 0 and r % 2 != 0) and (r - l) / 2 + 1 <= k:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t > 0:\n    (a, b, k) = map(int, input().split())\n    if a == b:\n        if a == 1:\n            print('NO')\n        else:\n            print('YES')\n        t -= 1\n        continue\n    p = (b - a + 1) // 2\n    if a % 2 == 1 and b % 2 == 1:\n        p += 1\n    if p <= k:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "for _ in range(int(input())):\n    (l, r, k) = list(map(int, input().split()))\n    c = (r + 1) // 2 - l // 2\n    if k >= c or (l == r and l > 1):\n        print('YES')\n    else:\n        print('NO')"]