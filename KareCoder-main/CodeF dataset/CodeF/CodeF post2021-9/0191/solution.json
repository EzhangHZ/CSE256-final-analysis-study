["from collections import defaultdict\nimport math as m\nimport sys\ninput = sys.stdin.readline\n\ndef cin2int():\n    temp = input().split()\n    return (int(temp[0]), int(temp[1]))\n\ndef cin3int():\n    temp = input().split()\n    return (int(temp[0]), int(temp[1]), int(temp[2]))\n\ndef cinarr():\n    temp = input().split()\n    return [int(x) for x in temp]\n\ndef solve():\n    n = int(input())\n    a = input()\n    res = 0\n    for i in range(1, n, 2):\n        if a[i - 1] != a[i]:\n            res += 1\n    return res\nfor case in range(int(input())):\n    print(solve())", "import sys\nimport math\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    res1 = 0\n    for i in range(0, n - 1, 2):\n        if s[i] != s[i + 1]:\n            res1 += 1\n    print(res1)", "t = int(input())\nout = ''\nfor j in range(t):\n    n = int(input())\n    s = input()\n    ans = 0\n    for i in range(0, len(s), 2):\n        if s[i] != s[i + 1]:\n            ans += 1\n    out += str(ans) + '\\n'\nprint(out)", "for s in [*open(0)][2::2]:\n    ch = s.__len__()\n    count = 0\n    for i in range(0, ch - 2, 2):\n        if s[i] == s[i + 1]:\n            pass\n        else:\n            count += 1\n    print(count)", "def solve() -> int:\n    n = int(input())\n    string = input()\n    result = 0\n    for index in range(0, n - 1, 2):\n        if string[index] != string[index + 1]:\n            result += 1\n    return result\nresults = []\nfor _ in range(int(input())):\n    results.append(str(solve()))\nprint('\\n'.join(results))", "n = int(input())\nanswer = []\nfor i in range(n):\n    length = int(input())\n    bstr = input()\n    counter = 0\n    for elem in range(0, length, 2):\n        if bstr[elem] != bstr[elem + 1]:\n            counter += 1\n    answer.append(counter)\nfor ans in answer:\n    print(ans)", "n = int(input())\nanswer = []\nfor i in range(n):\n    length = int(input())\n    bstr = input()\n    counter = 0\n    for elem in range(0, length, 2):\n        if bstr[elem] != bstr[elem + 1]:\n            counter += 1\n    answer.append(counter)\nfor ans in answer:\n    print(ans)", "n = int(input())\nanswer = []\nfor i in range(n):\n    length = int(input())\n    bstr = input()\n    counter = 0\n    for elem in range(0, length, 2):\n        if bstr[elem] != bstr[elem + 1]:\n            counter += 1\n    answer.append(counter)\nfor ans in answer:\n    print(ans)", "t = int(input())\nv = []\nfor i in range(t):\n    v.append([int(input()), input()])\nfor i in v:\n    ans = 0\n    for j in range(0, i[0], 2):\n        if i[1][j] != i[1][j + 1]:\n            ans += 1\n    print(ans)", "t = int(input())\nout = ''\nfor _ in range(t):\n    n = int(input())\n    string = input()\n    ans = 0\n    for i in range(0, len(string), 2):\n        if string[i] != string[i + 1]:\n            ans += 1\n    out += str(ans) + '\\n'\nprint(out)", "import sys\ninput = sys.stdin.readline\nfrom array import array\n\ndef solve():\n    n = int(input())\n    s = input().rstrip()\n    count = 0\n    for i in range(0, len(s), 2):\n        if s[i] != s[i + 1]:\n            count += 1\n    return count\nfor _ in range(int(input())):\n    print(solve())", "from sys import stdin, stdout\nimport collections\nimport math\n\ndef solve():\n    return\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        s = input()\n        i = 0\n        ans = 0\n        while i < n:\n            c = 0\n            p = s[i]\n            while i < n and s[i] == p:\n                i += 1\n                c += 1\n            if c % 2 == 1:\n                ans += 1\n                i += 1\n        print(ans)\n    return\ninput = stdin.readline\nmain()", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    p = s[0]\n    c = 0\n    t = 1\n    for i in range(1, n):\n        if s[i] == p:\n            t += 1\n        elif t & 1:\n            c += 1\n            p = s[i - 1]\n            t += 1\n        else:\n            p = s[i]\n            t = 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    i = 0\n    count = 0\n    while i < n - 1:\n        if s[i] != s[i + 1]:\n            count += 1\n        i += 2\n    print(count)", "n = int(input())\ndatas = []\nfor i in range(n):\n    t = int(input())\n    data = list(map(int, input()))\n    datas.append(data)\n\ndef solve(data):\n    c = 0\n    for i in range(0, int(len(data)), 2):\n        if data[i] != data[i + 1]:\n            c += 1\n    print(c)\nfor d in datas:\n    solve(d)", "n = int(input())\nwhile n:\n    n -= 1\n    dlch = int(input())\n    ch = input()\n    count = 0\n    for i in range(1, dlch, 2):\n        if ch[i] != ch[i - 1]:\n            count += 1\n    print(count)", "inp1 = int(input())\nfor i in range(inp1):\n    inp2 = int(input())\n    inp3 = input()\n    count = 0\n    for j in range(0, inp2, 2):\n        if inp3[j] != inp3[j + 1]:\n            count += 1\n    print(count)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = input()\n    count = 0\n    for i in range(0, n - 1, 2):\n        if a[i] != a[i + 1]:\n            count += 1\n    print(count)\n    t -= 1", "def comparision(a):\n    b = len(a)\n    c = 0\n    for i in range(0, b, 2):\n        if a[i] != a[i + 1]:\n            c = c + 1\n    return c\nfor _ in range(int(input())):\n    a = int(input())\n    b = input()\n    c = comparision(b)\n    print(c)", "n = int(input())\nfor i in range(n):\n    ns = int(input())\n    s = input()\n    cnt = 0\n    for j in range(1, len(s), 2):\n        if s[j] != s[j - 1]:\n            cnt += 1\n    print(cnt)", "def countminstep(x):\n    c = 0\n    lst = []\n    for y in range(0, len(x), 2):\n        if y <= len(x) - 2:\n            lst.append(x[y:y + 2])\n        else:\n            break\n    for z in range(0, len(lst)):\n        if lst[z][0] not in lst[z][1]:\n            c += 1\n    return c\nn = int(input())\nlst_2 = []\nlst_3 = []\nfor m in range(0, n):\n    g = int(input())\n    lst_3.append(g)\n    h = input()\n    lst_2.append(h)\nfor k in range(0, n):\n    d = lst_2[k]\n    print(countminstep(d))", "test_cases = int(input(''))\ntests_list = []\nfor _ in range(0, test_cases):\n    len_of_s = int(input(''))\n    s_binary = input('')\n    tests_list.append(s_binary)\nfor s_binary in tests_list:\n    upper_limit = len(s_binary) / 2\n    upper_limit = int(upper_limit)\n    value = 0\n    i = 0\n    for index in range(0, upper_limit):\n        if s_binary[0 + i] != s_binary[1 + i]:\n            value += 1\n        i += 2\n    print(value)", "for t in range(int(input())):\n    n = int(input())\n    s = input()\n    c = 0\n    for i in range(0, n, 2):\n        if s[i] != s[i + 1]:\n            c += 1\n    print(c)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    s = input().strip()\n    arr = []\n    prev = s[0]\n    cnt = 0\n    ops = 0\n    for i in range(n):\n        if prev == s[i]:\n            cnt += 1\n        else:\n            if arr:\n                if arr[-1] % 2 == 1:\n                    ops += 1\n                    if cnt == 1:\n                        cnt = arr.pop() + 2\n                    else:\n                        if arr[-1] == 1:\n                            arr[-1] += cnt\n                        else:\n                            arr[-1] += 1\n                            arr.append(cnt - 1)\n                        cnt = 1\n                    prev = s[i]\n                    continue\n            arr.append(cnt)\n            prev = s[i]\n            cnt = 1\n    if arr and arr[-1] % 2 == 1:\n        ops += 1\n    return ops\nfor _ in range(int(input())):\n    print(solve())", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    s = input().strip()\n    prev = s[0]\n    cnt = 0\n    arr = []\n    ops = 0\n    for i in range(n):\n        if prev == s[i]:\n            cnt += 1\n        else:\n            if arr and arr[-1] % 2 == 1:\n                arr[-1] += 1\n                ops += 1\n                if cnt == 1:\n                    cnt = arr.pop() + 1\n                else:\n                    arr.append(cnt - 1)\n                    cnt = 1\n            else:\n                arr.append(cnt)\n                cnt = 1\n            prev = s[i]\n    return ops if cnt % 2 == 0 else ops + 1\nfor _ in range(int(input())):\n    print(solve())", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    s = input().strip()\n    prev = s[0]\n    cnt = 0\n    arr = []\n    ops = 0\n    for i in range(n):\n        if prev == s[i]:\n            cnt += 1\n        else:\n            if arr and arr[-1] % 2 == 1:\n                arr[-1] += 1\n                ops += 1\n                if cnt == 1:\n                    cnt = arr.pop() + 1\n                else:\n                    arr.append(cnt - 1)\n                    cnt = 1\n            else:\n                arr.append(cnt)\n                cnt = 1\n            prev = s[i]\n    if cnt % 2 == 0:\n        arr.append(cnt)\n    else:\n        ops += 1\n        arr[-1] += 1\n        if cnt > 1:\n            arr.append(cnt - 1)\n    return ops\nfor _ in range(int(input())):\n    print(solve())", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_ls():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        s = input()\n        (a, b) = (0, 0)\n        ans = 0\n        for c in s:\n            if c == '1':\n                a += 1\n                if b % 2 == 1:\n                    ans += 1\n                    a += 1\n                    b = 0\n            elif c == '0':\n                b += 1\n                if a % 2 == 1:\n                    ans += 1\n                    b += 1\n                    a = 0\n        print(ans)\nmain()", "t = int(input())\nfor i in range(0, t):\n    count = 0\n    n = int(input())\n    s = input()\n    for i in range(0, n, 2):\n        if s[i] != s[i + 1]:\n            count += 1\n    print(count)", "for n in [*open(0)][2::2]:\n    q = 0\n    r = 0\n    for i in range(len(n) - 2):\n        if n[i] != n[i + 1]:\n            r += (i + 1) % 2\n    print(r)", "for n in [*open(0)][2::2]:\n    q = 0\n    r = 0\n    for i in range(len(n) - 2):\n        if n[i] != n[i + 1]:\n            r += (i + 1) % 2\n    print(r)", "def foo(n: int, s: str) -> int:\n    (prev_ch, prev_len) = ('', 0)\n    res = 0\n    for ch in s:\n        if ch == prev_ch:\n            prev_len += 1\n            continue\n        if prev_len % 2 == 0:\n            prev_ch = ch\n            prev_len = 1\n        else:\n            prev_ch = ch\n            prev_len = 2\n            res += 1\n        pass\n    return res\nT = int(input())\nfor _case in range(T):\n    n = int(input())\n    s = input()\n    print(foo(n, s))", "def solve():\n    n = int(input())\n    s = input()\n    k = list(s)\n    ans = 0\n    for i in range(1, n, 2):\n        if s[i] != s[i - 1]:\n            ans += 1\n    print(ans)\nt = int(input())\nfor _ in range(t):\n    solve()", "t = int(input())\nfor vvod in range(t):\n    n = int(input())\n    s = input()\n    ans = 0\n    for i in range(0, n - 1, 2):\n        if s[i] != s[i + 1]:\n            ans += 1\n    print(ans)", "def solve():\n    n = int(input())\n    s = list(input())\n    count = 1\n    answer = 0\n    prev = s[0]\n    for i in range(1, n):\n        if s[i] == prev:\n            count += 1\n        elif count % 2 == 0:\n            prev = s[i]\n            count = 1\n        else:\n            s[i] = prev\n            count += 1\n            answer += 1\n    return answer\nt = int(input())\nfor _ in range(t):\n    print(solve())", "def solve() -> int:\n    n = int(input())\n    string = input()\n    segments = []\n    last = None\n    counter = 0\n    for char in string:\n        if char == last:\n            counter += 1\n        else:\n            if last is not None:\n                segments.append(counter)\n            counter = 1\n        last = char\n    segments.append(counter)\n    result = 0\n    for index in range(len(segments)):\n        if segments[index] % 2 == 1:\n            result += 1\n            segments[index] -= 1\n            segments[index + 1] += 1\n    return result\nresults = []\nfor _ in range(int(input())):\n    results.append(str(solve()))\nprint('\\n'.join(results))", "for _ in range(int(input())):\n    n = int(input())\n    s = str(input())\n    ans = 0\n    for i in range(0, n - 1, 2):\n        if s[i] != s[i + 1]:\n            ans += 1\n    print(ans)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    c = input()\n    total = 1\n    val = 0\n    for i in range(1, n):\n        if c[i] != c[i - 1]:\n            if total % 2:\n                val += 1\n                total = 0\n            else:\n                total = 1\n        else:\n            total += 1\n    print(val)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    count = 0\n    for i in range(0, n, 2):\n        if s[i] != s[i + 1]:\n            count += 1\n    print(count)", "import sys\nimport math\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    res = 0\n    nb0 = 0\n    nb1 = 0\n    start = s[0]\n    if start == '0':\n        nb0 = 1\n    else:\n        nb1 = 1\n    for i in range(1, n):\n        if s[i] == start:\n            if s[i] == '0':\n                nb0 += 1\n            else:\n                nb1 += 1\n        elif (nb0 + nb1) % 2 == 0:\n            start = s[i]\n            if start == '0':\n                nb0 = 1\n            else:\n                nb1 = 1\n        else:\n            res += 1\n            if i != n - 1:\n                start = s[i + 1]\n                nb1 = 0\n                nb0 = 0\n    print(res)", "from itertools import *\nfor s in [*open(0)][2::2]:\n    a = [i for (i, (k, g)) in enumerate(groupby(s[:-1])) if len([*g]) & 1]\n    print(sum((y - x for (x, y) in zip(a[::2], a[1::2]))))", "import sys\ninput = lambda : sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    Answer = 0\n    INPUT = int(input())\n    STRINPUT = input()\n    for i in range(0, INPUT, 2):\n        if STRINPUT[i] + STRINPUT[i + 1] == '01' or STRINPUT[i] + STRINPUT[i + 1] == '10':\n            Answer += 1\n    print(Answer)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    count = 0\n    ans = 0\n    while count < n - 1:\n        if s[count] != s[count + 1]:\n            ans += 1\n        count += 2\n    print(ans)", "for zzzzz in range(int(input())):\n    n = int(input())\n    a = input()\n    count = 0\n    for i in range(0, n, 2):\n        f = a[i]\n        s = a[i + 1]\n        if f != s:\n            count = count + 1\n    print(count)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    c = 0\n    for i in range(0, n, 2):\n        if s[i] != s[i + 1]:\n            c += 1\n    print(c)", "t1 = int(input())\nfor hi in range(t1):\n    n = int(input())\n    s = str(input())\n    p = 0\n    o = True\n    l = 1\n    for i in range(0, n, 2):\n        if s[i] != s[i + 1]:\n            p += 1\n        elif o:\n            c = s[i]\n            o = False\n        elif c != s[i]:\n            l += 1\n            c = s[i]\n    print(p)", "t = int(input())\nfor i in range(t):\n    tc = int(input())\n    inp = input()\n    cnt = 0\n    for j in range(0, len(inp), 2):\n        if inp[j] != inp[j + 1]:\n            cnt += 1\n    print(cnt)", "def contar(pal):\n    cont = 0\n    for i in range(0, len(pal), 2):\n        bi = pal[i:i + 2]\n        if bi == '01' or bi == '10':\n            cont += 1\n    return cont\nfor _ in range(int(input())):\n    input()\n    pal = input()\n    print(contar(pal))", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    s = input()\n    j = 0\n    c = 0\n    while m > 0:\n        if s[j] != s[j + 1]:\n            c += 1\n        m -= 2\n        j += 2\n    print(c)", "import math as m\ni = input()\ninp = []\nfor a in range(0, int(i)):\n    input()\n    inp += [input()]\ncase = 0\nfor i in inp:\n    case += 1\n    a = []\n    l = 0\n    char = ''\n    for c in i:\n        if char != c:\n            if l > 0:\n                a.append(l)\n            char = c\n            l = 1\n        else:\n            l += 1\n    a.append(l)\n    curr_odd = False\n    d = 0\n    s = 0\n    for i in a:\n        if i % 2 == 1:\n            if curr_odd:\n                s += d\n                curr_odd = False\n            else:\n                curr_odd = True\n                d = 1\n        elif curr_odd:\n            d += 1\n    print(str(s))", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    c = 0\n    for i in range(0, n, 2):\n        if s[i] != s[i + 1]:\n            c += 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    c = 0\n    for i in range(0, n, 2):\n        if s[i] != s[i + 1]:\n            c += 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    c = 0\n    for i in range(0, n, 2):\n        if s[i] != s[i + 1]:\n            c += 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    c = 0\n    for i in range(0, n, 2):\n        if s[i] != s[i + 1]:\n            c += 1\n    print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input()\n    count = 0\n    for k in range(n // 2):\n        if a[2 * k] != a[2 * k + 1]:\n            count += 1\n    print(count)", "for n in [*open(0)][2::2]:\n    q = 0\n    r = 0\n    for i in range(len(n) - 2):\n        if n[i] != n[i + 1]:\n            r += (i + 1) % 2\n    print(r)", "for n in [*open(0)][2::2]:\n    q = 0\n    r = 0\n    for i in range(len(n) - 2):\n        if n[i] != n[i + 1]:\n            r += (i + 1) % 2\n    print(r)", "for n in [*open(0)][2::2]:\n    q = 0\n    r = 0\n    for i in range(len(n) - 2):\n        if n[i] != n[i + 1]:\n            r += (i + 1) % 2\n    print(r)", "for n in [*open(0)][2::2]:\n    q = 0\n    r = 0\n    for i in range(len(n) - 2):\n        if n[i] != n[i + 1]:\n            r += (i + 1) % 2\n    print(r)", "n = int(input(''))\nt = 0\nwhile t < n:\n    t += 1\n    length = int(input(''))\n    s = input('')\n    count = 0\n    for i in range(1, length, 2):\n        if s[i] != s[i - 1]:\n            count += 1\n    print(count)", "for n in [*open(0)][2::2]:\n    q = 0\n    r = 0\n    for i in range(len(n) - 2):\n        if n[i] != n[i + 1]:\n            r += (i + 1) % 2\n    print(r)", "def solve():\n    n = int(input())\n    s = input()\n    p = 0\n    i = 1\n    res = 0\n    while i < n:\n        if s[i] != s[p]:\n            if (i - p) % 2 == 1:\n                res += 1\n                p = i + 1\n            else:\n                p = i\n        i += 1\n    print(res)\nt = int(input())\nwhile t > 0:\n    t -= 1\n    solve()", "for n in [*open(0)][2::2]:\n    q = 0\n    r = 0\n    for i in range(len(n) - 2):\n        if n[i] != n[i + 1]:\n            r += (i + 1) % 2\n    print(r)", "for i in range(int(input())):\n    a = input()\n    a = input()\n    b = 0\n    for i in range(len(a) // 2):\n        if a[i * 2] != a[i * 2 + 1]:\n            b += 1\n    print(b)", "def fun(ans):\n    i = 0\n    c = 0\n    for _ in range(len(ans) // 2):\n        if ans[i] != ans[i + 1]:\n            c += 1\n        i += 2\n    return c\nfor _ in range(int(input())):\n    x = input()\n    arr = input()\n    x = fun(arr)\n    print(x)", "t = int(input())\nfor tt in range(t):\n    n = int(input())\n    s = input()\n    count = 0\n    for i in range(1, n, 2):\n        if s[i] != s[i - 1]:\n            count += 1\n    print(count)", "for n in [*open(0)][2::2]:\n    q = 0\n    r = 0\n    for i in range(len(n) - 2):\n        if n[i] != n[i + 1]:\n            r += (i + 1) % 2\n    print(r)", "t = int(input())\n\ndef solve():\n    n = int(input())\n    s = input()\n    count = 0\n    for i in range(0, len(s), 2):\n        count += 1 if s[i] != s[i + 1] else 0\n    print(count)\nwhile t:\n    solve()\n    t -= 1", "a = int(input())\nfor _ in range(a):\n    b = int(input())\n    c = input()\n    count = 0\n    counter = 1\n    for x in c[::2]:\n        if x == '1' and c[counter] == '0' or (x == '0' and c[counter] == '1'):\n            count += 1\n        counter += 2\n    print(count)", "for _ in range(int(input())):\n    (n, s, w) = (int(input()), input(), 0)\n    print(sum([1 for i in range(1, n, 2) if s[i] != s[i - 1]]))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    count = 0\n    tik = 0\n    cursor = s[0]\n    for i in range(n):\n        if cursor == s[i]:\n            tik += 1\n        else:\n            if tik % 2 != 0:\n                count += 1\n                tik = 0\n            else:\n                tik = 1\n            cursor = '1' if cursor == '0' else '0'\n    print(count)", "for t in range(int(input())):\n    n = int(input())\n    s = input()\n    swap = 0\n    for i in range(n):\n        if i % 2 == 0:\n            a = s[i]\n            continue\n        elif a == s[i]:\n            continue\n        else:\n            swap += 1\n    print(swap)", "def read_input():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        s = input()\n        out = good(s)\n        print(out)\n\ndef good(s):\n    total_ops = 0\n    swapper = {'1': '0', '0': '1'}\n    s += swapper[s[-1]]\n    current = s[0]\n    length = 0\n    is_odd = False\n    seg_count = 0\n    for c in s:\n        if c == current:\n            length += 1\n        else:\n            if length % 2 != 0:\n                if is_odd:\n                    total_ops += seg_count\n                    seg_count = 0\n                    is_odd = False\n                else:\n                    is_odd = True\n            if is_odd:\n                seg_count += 1\n            current = swapper[current]\n            length = 1\n    return total_ops\nread_input()", "for t in range(int(input())):\n    n = int(input())\n    s = input()\n    count = 1\n    ops = 0\n    for i in range(1, n):\n        if s[i - 1] != s[i]:\n            if count % 2 != 0:\n                count = 2\n                ops += 1\n            else:\n                count = 1\n        else:\n            count += 1\n    print(ops)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    print(sum([1 for i in range(0, n - 1, 2) if s[i] != s[i + 1]]))", "def minimumToMakeEven(bin_nums, n):\n    change = 0\n    count_curr = 0\n    i = 0\n    while i < n:\n        curr_char = bin_nums[i]\n        while i < n and bin_nums[i] == curr_char:\n            count_curr += 1\n            i += 1\n        if count_curr % 2:\n            bin_nums[i] = curr_char\n            change += 1\n            i += 1\n        count_curr = 0\n    print(change)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    bin_string = input()\n    minimumToMakeEven(list(bin_string), n)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    c = 0\n    for j in range(0, n, 2):\n        if s[j] != s[j + 1]:\n            c += 1\n    print(c)", "for _ in range(int(input())):\n    input()\n    s = input()\n    prev_char = s[0]\n    count = 0\n    ans = 0\n    for i in s:\n        if i == prev_char:\n            count += 1\n        else:\n            if count % 2:\n                ans += 1\n                count = 0\n            else:\n                count = 1\n            prev_char = i\n    if count % 2:\n        ans += 1\n    print(ans)", "t = int(input())\nfor T in range(t):\n    s = int(input())\n    a = list(map(len, input().replace('10', '1 0').replace('01', '0 1').split()))\n    picked = False\n    g = 0\n    for i in a:\n        if i % 2 and picked:\n            picked = False\n        elif i % 2:\n            g += 1\n            picked = True\n        elif picked:\n            g += 1\n    print(g)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    count = 0\n    change = 0\n    for i in range(0, n - 1, 2):\n        if s[i] != s[i + 1]:\n            change += 1\n    print(change)", "for i in range(int(input())):\n    n = int(input(''))\n    str1 = input()\n    counter = 0\n    for j in range(0, n, 2):\n        if str1[j] != str1[j + 1]:\n            counter += 1\n    print(counter)", "a = int(input())\nfor i in range(0, a):\n    n = int(input())\n    r = str(input())\n    s = 0\n    k = 1\n    for j in range(0, n - 1):\n        if r[j] == r[j + 1]:\n            k = k + 1\n        elif k % 2 == 1:\n            j = j + 1\n            s = s + 1\n            k = 0\n        else:\n            k = 1\n    print(s)", "from sys import stdin\ninput = stdin.readline\nrn = lambda : int(input())\nrns = lambda : map(int, input().split())\nrl = lambda : list(map(int, input().split()))\nrs = lambda : input().strip()\nYN = lambda x: print('YES') if x else print('NO')\nceil_div = lambda a, b: -(-a // b)\nmod = 10 ** 9 + 7\nfor _ in range(rn()):\n    n = rn()\n    s = rs()\n    a = []\n    curr = 0\n    last = s[0]\n    for i in range(n):\n        if s[i] == last:\n            curr += 1\n        else:\n            a.append(curr)\n            last = s[i]\n            curr = 1\n    a.append(curr)\n    ans = 0\n    for i in range(len(a) - 1):\n        if a[i] % 2:\n            ans += 1\n            a[i + 1] += 1\n    print(ans)", "cases = int(input())\n\ndef do():\n    _ = int(input())\n    s = input()\n    new_s = list(s)\n    number_of_changes = 0\n    for i in range(0, len(s), 2):\n        if s[i] != s[i + 1]:\n            number_of_changes += 1\n            new_s[i + 1] = s[i]\n    print(number_of_changes)\nfor i in range(cases):\n    do()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    count = 0\n    for i in range(n)[::2]:\n        if s[i] != s[i + 1]:\n            count += 1\n    print(count)", "testcase = int(input())\nfor i in range(testcase):\n    n = int(input())\n    s = input()\n    ans = 0\n    for k in range(int(n / 2)):\n        if s[2 * k] != s[2 * k + 1]:\n            ans = ans + 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = input()\n    ans = 0\n    for j in range(0, n - 1, 2):\n        if lst[j] + lst[j + 1] == '10' or lst[j] + lst[j + 1] == '01':\n            ans += 1\n    print(ans)", "for testcases in range(int(input())):\n    a1 = input()\n    need = 0\n    a = [i for i in input()]\n    for i in range(0, int(a1) - 1, 2):\n        if a[i] != a[i + 1]:\n            need += 1\n    print(need)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    count = 0\n    for i in range(n - 1):\n        if i % 2 == 0:\n            if s[i] != s[i + 1]:\n                count += 1\n            i += 2\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = 0\n    for i in range(n // 2):\n        if s[2 * i] != s[2 * i + 1]:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = 0\n    for i in range(0, n, 2):\n        if s[i:i + 2] == '10' or s[i:i + 2] == '01':\n            ans += 1\n    print(ans)", "import sys\nimport math\nimport bisect\nfrom sys import stdin, stdout\nfrom math import gcd, floor, sqrt, log\nfrom collections import defaultdict as dd\nfrom bisect import bisect_left as bl, bisect_right as br\nsys.setrecursionlimit(100000000)\ninp = lambda : int(input())\nstrng = lambda : input().strip()\njn = lambda x, l: x.join(map(str, l))\nstrl = lambda : list(input().strip())\nmul = lambda : map(int, input().strip().split())\nmulf = lambda : map(float, input().strip().split())\nseq = lambda : list(map(int, input().strip().split()))\nceil = lambda x: int(x) if x == int(x) else int(x) + 1\nceildiv = lambda x, d: x // d if x % d == 0 else x // d + 1\nflush = lambda : stdout.flush()\nstdstr = lambda : stdin.readline()\nstdint = lambda : int(stdin.readline())\nstdpr = lambda x: stdout.write(str(x))\nfor ii in range(int(input())):\n    n = int(input())\n    s = input()\n    r = 0\n    for i in range(0, n, 2):\n        if s[i] != s[i + 1]:\n            r += 1\n    print(r)", "n = int(input())\nfor i in range(n):\n    temp = int(input())\n    arr = str(input())\n    res = 0\n    j = 0\n    while j < temp - 1:\n        if arr[j] != arr[j + 1]:\n            res += 1\n        j += 2\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    c = 0\n    for i in range(1, n, 2):\n        if s[i] != s[i - 1]:\n            c += 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    c = 0\n    for i in range(0, n, 2):\n        if s[i] != s[i + 1]:\n            c += 1\n    print(c)", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    s = input()\n    cnt = 0\n    i = 1\n    d = 1\n    while i < n:\n        if s[i] != s[i - 1]:\n            if d % 2 == 0:\n                d = 1\n                i += 1\n            else:\n                cnt += 1\n                d = 1\n                i += 2\n        else:\n            d += 1\n            i += 1\n    print(cnt)", "def helper():\n    tstcs = int(input())\n    for i in range(tstcs):\n        n = int(input())\n        s = input()\n        cnt = 0\n        oddsm = 0\n        evensm = 0\n        if s[0] == '0':\n            evensm += 1\n        else:\n            oddsm += 1\n        for i in range(1, n):\n            if s[i] == '0':\n                if s[i - 1] == '1' and oddsm % 2 == 1:\n                    cnt += 1\n                    s[i] == '1'\n                    oddsm = 0\n                else:\n                    evensm += 1\n            elif s[i - 1] == '0' and evensm % 2 == 1:\n                cnt += 1\n                s[i] == '1'\n                evensm = 0\n            else:\n                oddsm += 1\n        print(cnt)\nhelper()", "import re\nfor s in [*open(0)][2::2]:\n    i = p = r = 0\n    for t in re.findall('0+|1+', s):\n        i += 1\n        if len(t) & 1:\n            if p:\n                r += i - p\n                p = 0\n            else:\n                p = i\n    print(r)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    p = s[0]\n    c = 1\n    ans = 0\n    for el in s[1:]:\n        if el != p:\n            if c % 2:\n                ans += 1\n                c += 1\n            else:\n                p = el\n                c = 1\n        else:\n            c += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(input())\n    i = 0\n    count = 0\n    while i < n:\n        if a[i:i + 2] == ['1', '1'] or a[i:i + 2] == ['0', '0']:\n            i += 2\n        else:\n            count += 1\n            i += 2\n    print(count)"]