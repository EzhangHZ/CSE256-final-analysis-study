["def solve():\n    n = int(input())\n    x = list(map(int, input().split(' ')))\n    y = list(map(int, input().split(' ')))\n    z = [b - a for (a, b) in zip(x, y)]\n    z.sort(reverse=True)\n    ans = 0\n    (i, j) = (0, n - 1)\n    while i < j:\n        if z[i] + z[j] >= 0:\n            ans += 1\n            i += 1\n            j -= 1\n        else:\n            j -= 1\n    return ans\nfor _ in range(int(input())):\n    print(solve())", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    diff = [y[i] - x[i] for i in range(n)]\n    diff.sort()\n    i = 0\n    j = n - 1\n    res = 0\n    while i < j:\n        if diff[i] + diff[j] >= 0:\n            res += 1\n            i += 1\n            j -= 1\n        else:\n            i += 1\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = [b[i] - a[i] for i in range(n)]\n    c.sort()\n    i = 0\n    j = n - 1\n    s = 0\n    while i < j:\n        if c[i] + c[j] >= 0:\n            s += 1\n            j -= 1\n        i += 1\n    print(s)", "def main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    arr = [i - j for (i, j) in zip(y, x)]\n    arr.sort()\n    l = 0\n    r = n - 1\n    ans = 0\n    while l < r:\n        if arr[l] + arr[r] >= 0:\n            l += 1\n            r -= 1\n            ans += 1\n        else:\n            l += 1\n    return ans\nfor _ in range(int(input())):\n    print(main())", "in_il = lambda : list(map(int, input().split()))\nin_sl = lambda : input().split()\nin_i = lambda : int(input())\nMAX_INT = float('inf')\n\ndef solve():\n    n = in_i()\n    x = in_il()\n    y = in_il()\n    diff = [0] * n\n    for i in range(n):\n        diff[i] = y[i] - x[i]\n    diff.sort()\n    ans = 0\n    l = 0\n    r = n - 1\n    while l < r:\n        if diff[l] + diff[r] >= 0:\n            ans += 1\n            l += 1\n            r -= 1\n        else:\n            l += 1\n    print(ans)\nfor _ in range(in_i()):\n    solve()", "def solve(A, B):\n    arr = [B[i] - A[i] for i in range(len(A))]\n    (pp, pn) = ([], [])\n    for a in arr:\n        if a >= 0:\n            pp.append(a)\n        else:\n            pn.append(a)\n    pp.sort()\n    pn.sort(reverse=True)\n    (i1, i2) = (0, 0)\n    res = 0\n    while i1 < len(pp):\n        if i2 < len(pn):\n            if pp[i1] + pn[i2] >= 0:\n                i1 += 1\n                i2 += 1\n                res += 1\n                continue\n        if i1 < len(pp) - 1:\n            i1 += 2\n            res += 1\n            continue\n        i1 += 1\n    print(res)\nn_case = int(input())\nwhile n_case:\n    n_case -= 1\n    n = input()\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    solve(a, b)", "import sys\nfrom collections import deque\ninput = sys.stdin.readline\ntests = int(input())\nfor test in range(tests):\n    _ = input()\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    diff = []\n    for index in range(len(x)):\n        diff.append(y[index] - x[index])\n    diff.sort(reverse=True)\n    diffDeque = deque(diff)\n    pairs = 0\n    while len(diffDeque) > 1:\n        big = diffDeque.popleft()\n        while diffDeque:\n            smallest = diffDeque.pop()\n            if big + smallest >= 0:\n                pairs += 1\n                break\n            else:\n                pass\n    print(pairs)", "import sys\nfrom bisect import bisect_right\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef find_le(a, x):\n    i = bisect_right(a, x)\n    if i:\n        return a[i - 1]\n    raise ValueError\n\ndef main():\n    t = inp()\n    for i in range(t):\n        ans = 0\n        n = inp()\n        X = inlt()\n        Y = inlt()\n        D = [y - x for (x, y) in zip(X, Y)]\n        P = [d for d in D if d >= 0]\n        N = [-d for d in D if d < 0]\n        P.sort()\n        N.sort()\n        lP = 0\n        rP = len(P) - 1\n        rN = len(N) - 1\n        while lP <= rP:\n            f1 = P[rP]\n            rP -= 1\n            f2 = None\n            while rN >= 0:\n                if N[rN] <= f1:\n                    f2 = N[rN]\n                    rN -= 1\n                    break\n                else:\n                    rN -= 1\n            if f2 is None:\n                if lP <= rP:\n                    f2 = P[lP]\n                    lP += 1\n            if f2 is not None:\n                ans += 1\n        print(ans, sep='\\n')\nmain()", "import sys\nimport heapq\nimport math\ninput = sys.stdin.readline\nfrom collections import Counter, defaultdict\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef main():\n    length = inp()\n    x = inlt()\n    y = inlt()\n    diff = [y[i] - x[i] for i in range(length)]\n    diff.sort()\n    count = 0\n    (left, right) = (0, length - 1)\n    while left < right:\n        if diff[left] + diff[right] >= 0:\n            count += 1\n            right -= 1\n        left += 1\n    print(count)\nt = inp()\nfor _ in range(t):\n    main()", "import sys\nsys.setrecursionlimit(10 ** 5)\nfrom collections import deque\n\ndef solve():\n    N = int(input())\n    spend = [int(e) for e in input().split()]\n    has = [int(e) for e in input().split()]\n    diff = deque(sorted([a - b for (a, b) in zip(has, spend)], reverse=True))\n    ans = 0\n    while diff:\n        big = diff.popleft()\n        if big < 0:\n            break\n        while diff and diff[-1] + big < 0:\n            diff.pop()\n        if diff and diff[-1] + big >= 0:\n            ans += 1\n            diff.pop()\n    return ans\nT = int(input())\nfor t in range(T):\n    s = solve()\n    print(s)", "import math\nimport sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    lst1 = list(map(int, input().split(' ')))\n    lst2 = list(map(int, input().split(' ')))\n    lst = []\n    for i in range(n):\n        lst.append(lst2[i] - lst1[i])\n    lst.sort(reverse=True)\n    ans = 0\n    st = 0\n    end = n - 1\n    while st < end:\n        if lst[st] + lst[end] >= 0:\n            st += 1\n            end -= 1\n            ans += 1\n        else:\n            end -= 1\n    print(ans)\nt = int(input())\nwhile t:\n    t -= 1\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    (x, y) = (list(map(int, input().split())), list(map(int, input().split())))\n    ans = 0\n    lis = [y[i] - x[i] for i in range(n)]\n    lis.sort()\n    (left, right) = (0, n - 1)\n    while left < right:\n        if lis[left] + lis[right] >= 0:\n            left += 1\n            right -= 1\n            ans += 1\n        else:\n            left += 1\n    print(ans)", "import sys\ninput = sys.stdin.readline\nI = lambda : list(map(int, input().split()))\n(t,) = I()\nfor _ in range(t):\n    (n,) = I()\n    x = I()\n    y = I()\n    an = 0\n    diff = sorted([x[i] - y[i] for i in range(n)])\n    i = 0\n    j = n - 1\n    while i < j:\n        if diff[i] + diff[j] <= 0:\n            an += 1\n            i += 1\n            j -= 1\n        else:\n            j -= 1\n    print(an)", "R = lambda : map(int, input().split())\n(t,) = R()\nwhile t:\n    t -= 1\n    R()\n    c = (a, b) = [[], []]\n    for (x, y) in zip(R(), R()):\n        y -= x\n        c[y < 0] += (abs(y),)\n    a.sort()\n    b.sort()\n    i = j = 0\n    l = len(a)\n    while j < len(b) and i < l:\n        j += a[i] >= b[j]\n        i += 1\n    print(j + (l - j) // 2)", "R = lambda : map(int, input().split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n,) = R()\n    a = sorted((y - x for (x, y) in zip(R(), R())))\n    i = 0\n    j = n - 1\n    while i < j:\n        j -= a[i] + a[j] >= 0\n        i += 1\n    print(n - j - 1)", "R = lambda : map(int, input().split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n,) = R()\n    a = sorted((y - x for (x, y) in zip(R(), R())))\n    i = j = 0\n    while i + j + 1 < n:\n        j += a[i] + a[~j] >= 0\n        i += 1\n    print(j)", "R = lambda : map(int, input().split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n,) = R()\n    a = sorted((y - x for (x, y) in zip(R(), R())))\n    i = j = 0\n    while i + j + 1 < n:\n        j += a[i] + a[~j] >= 0\n        i += 1\n    print(j)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = sorted([b[i] - a[i] for i in range(n)])\n    (f, s) = (0, n - 1)\n    ans = 0\n    while f < s:\n        if c[f] + c[s] >= 0:\n            ans += 1\n            f += 1\n            s -= 1\n        else:\n            f += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    a = [y[i] - x[i] for i in range(n)]\n    a.sort()\n    ans = 0\n    (l, r) = (0, n - 1)\n    while l < r:\n        if a[l] + a[r] >= 0:\n            r -= 1\n            ans += 1\n        l += 1\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    arr = []\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    for i in range(n):\n        arr.append(y[i] - x[i])\n    arr.sort()\n    res = 0\n    l = 0\n    r = n - 1\n    while l < r:\n        if arr[l] + arr[r] >= 0:\n            res += 1\n            r -= 1\n        l += 1\n    print(res)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    diff = [y[i] - x[i] for i in range(n)]\n    diff.sort()\n    left = 0\n    right = len(diff) - 1\n    ans = 0\n    while left < right:\n        if diff[left] + diff[right] >= 0:\n            ans += 1\n            left += 1\n            right -= 1\n            continue\n        left += 1\n    print(ans)", "Shan = lambda : map(int, input().split())\nFlag = 0\n(t,) = Shan()\nwhile t:\n    t -= 1\n    (n,) = Shan()\n    a = sorted((y - x for (x, y) in zip(Shan(), Shan())))\n    i = j = 0\n    while i + j + 1 < n:\n        j += a[i] + a[~j] >= 0\n        i += 1\n    print(j)", "R = lambda : map(int, input().split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n,) = R()\n    a = sorted((y - x for (x, y) in zip(R(), R())))\n    i = j = 0\n    while i + j + 1 < n:\n        j += a[i] + a[~j] >= 0\n        i += 1\n    print(j)", "mukha = lambda : map(int, input().split())\nFlag = 0\n(mals,) = mukha()\nwhile mals:\n    mals -= 1\n    (n,) = mukha()\n    s = sorted((y - x for (x, y) in zip(mukha(), mukha())))\n    i = j = 0\n    while i + j + 1 < n:\n        j += s[i] + s[~j] >= 0\n        i += 1\n    print(j)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = [b[i] - a[i] for i in range(n)]\n    c.sort()\n    i = 0\n    j = n - 1\n    s = 0\n    while i < j:\n        if c[i] + c[j] >= 0:\n            s += 1\n            j -= 1\n        i += 1\n    print(s)", "for tcases in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    kusur = [y[i] - x[i] for i in range(n)]\n    kusur.sort()\n    (l, r) = (0, n - 1)\n    ans = 0\n    while l < r:\n        while l < r and kusur[l] + kusur[r] < 0:\n            l += 1\n        if l < r:\n            ans += 1\n        l += 1\n        r -= 1\n    print(ans)", "for tcases in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    kusur = [y[i] - x[i] for i in range(n)]\n    kusur.sort()\n    (l, r) = (0, n - 1)\n    ans = 0\n    while l < r:\n        while l < r and kusur[l] + kusur[r] < 0:\n            l += 1\n        if l < r:\n            ans += 1\n        l += 1\n        r -= 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = [b[i] - a[i] for i in range(len(a))]\n    c.sort()\n    i = 0\n    j = n - 1\n    cnt = 0\n    while i < j:\n        if c[i] + c[j] >= 0:\n            cnt += 1\n            i += 1\n            j -= 1\n        else:\n            i += 1\n    print(cnt)", "def solve(n, arr1, arr2):\n    diff = []\n    for i in range(n):\n        diff.append(arr2[i] - arr1[i])\n    diff.sort()\n    m = 0\n    i = 0\n    j = n - 1\n    while i < j:\n        if diff[i] + diff[j] >= 0:\n            m += 1\n            i += 1\n            j -= 1\n        else:\n            i += 1\n    return m\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr1 = input().split(' ')\n    arr1 = [int(a) for a in arr1]\n    arr2 = input().split(' ')\n    arr2 = [int(a) for a in arr2]\n    ans = solve(n, arr1, arr2)\n    print(ans)", "testcases = int(input())\nfor i in range(testcases):\n    n = int(input())\n    input_1 = input().split()\n    list_x = list(map(int, input_1))\n    input_2 = input().split()\n    list_y = list(map(int, input_2))\n    diff = [list_x[i] - list_y[i] for i in range(len(list_x))]\n    diff.sort()\n    n_visits = 0\n    i_left = 0\n    i_right = n - 1\n    while i_left < i_right:\n        if diff[i_left] + diff[i_right] <= 0:\n            n_visits += 1\n            i_left += 1\n            i_right -= 1\n        else:\n            i_right -= 1\n    print(n_visits)", "import bisect\n\ndef resolve(list_x, list_y):\n    neg_list = []\n    pos_list = []\n    res = 0\n    for index in range(len(list_x)):\n        sub = list_y[index] - list_x[index]\n        if sub >= 0:\n            pos_list.append(abs(sub))\n        else:\n            neg_list.append(abs(sub))\n    neg_list = sorted(neg_list)\n    pos_list = sorted(pos_list)\n    pos_index = len(pos_list) - 1\n    for index in range(len(neg_list)):\n        if pos_index < 0:\n            break\n        current_neg = neg_list[-1 - index]\n        current_pos = pos_list[pos_index]\n        if current_pos >= current_neg:\n            res += 1\n            pos_index -= 1\n    if pos_index >= 0:\n        res += int((pos_index + 1) / 2)\n    return res\n\ndef read_input():\n    lines_1 = input()\n    lines_2 = input().split(' ')\n    list_x = []\n    for item in lines_2:\n        list_x.append(int(item))\n    lines_3 = input().split(' ')\n    list_y = []\n    for item in lines_3:\n        list_y.append(int(item))\n    return (list_x, list_y)\ncase_num = int(input())\nif not case_num == 0:\n    for index in range(case_num):\n        (list_x, list_y) = read_input()\n        res = resolve(list_x, list_y)\n        print(res)", "t = int(input())\nfor ncase in range(1, t + 1):\n    n = int(input())\n    x = [int(s) for s in input().split(' ')]\n    y = [int(s) for s in input().split(' ')]\n    diff = [y[i] - x[i] for i in range(n)]\n    diff.sort(reverse=True)\n    ans = 0\n    i = 0\n    j = n - 1\n    while i < j:\n        if diff[i] < 0:\n            break\n        elif diff[i] + diff[j] >= 0:\n            i += 1\n            j -= 1\n            ans += 1\n        else:\n            while diff[i] + diff[j] < 0 and i < j:\n                j -= 1\n            if diff[i] + diff[j] >= 0 and i < j:\n                i += 1\n                j -= 1\n                ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    a = [y[i] - x[i] for i in range(n)]\n    a.sort()\n    i = 0\n    j = n - 1\n    ans = 0\n    while i < j:\n        if a[i] + a[j] >= 0:\n            ans += 1\n            i += 1\n            j -= 1\n        else:\n            i += 1\n    print(ans)", "def fun(x, y):\n    li = []\n    for i in range(len(x)):\n        li.append(y[i] - x[i])\n    li.sort()\n    st = 0\n    en = len(li) - 1\n    count = 0\n    while st < en:\n        if li[st] + li[en] >= 0:\n            count += 1\n            st += 1\n            en -= 1\n        elif li[st] + li[en] < 0:\n            st += 1\n    return count\nt = int(input())\nwhile t:\n    n = int(input())\n    x = [int(i) for i in input().split(' ')]\n    y = [int(i) for i in input().split(' ')]\n    print(fun(x, y))\n    t -= 1", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = list()\n    for i in range(n):\n        ans.append(b[i] - a[i])\n    ans.sort()\n    (i, j, count) = (0, n - 1, 0)\n    while i < j:\n        if ans[i] + ans[j] >= 0:\n            count += 1\n            i += 1\n            j -= 1\n        else:\n            i += 1\n    print(count)", "for tcase in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    d = sorted((yi - xi for (xi, yi) in zip(x, y)))\n    (l, r, ans) = (0, n - 1, 0)\n    while l < r:\n        while l < r and d[l] + d[r] < 0:\n            l += 1\n        if l < r:\n            ans += 1\n        l += 1\n        r -= 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    e = []\n    for i in range(n):\n        e.append(b[i] - a[i])\n    e = sorted(e)\n    l = 0\n    r = n - 1\n    ans = 0\n    while l < r:\n        if e[l] + e[r] >= 0:\n            ans += 1\n            r -= 1\n            l += 1\n        else:\n            l += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    val = [arr2[i] - arr1[i] for i in range(n)]\n    val.sort()\n    ans = 0\n    s = 0\n    e = n - 1\n    while s < e:\n        if val[s] + val[e] >= 0:\n            ans += 1\n            e -= 1\n        s += 1\n    print(ans)", "import sys\nimport math\nfrom collections import Counter\n\ndef gi():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef gs():\n    return sys.stdin.readline().strip()\n\ndef fun(a, b):\n    l = len(a)\n    p = []\n    n = []\n    c = 0\n    for i in range(l):\n        b[i] -= a[i]\n        if b[i] < 0:\n            n.append(b[i])\n        else:\n            p.append(b[i])\n    p.sort()\n    pl = len(p)\n    n.sort(reverse=True)\n    nl = len(n)\n    if not nl:\n        return pl // 2\n    if not p:\n        return 0\n    j = 0\n    for i in range(nl):\n        if n[i] != 'x':\n            while j < pl:\n                if p[j] != 'x' and p[j] + n[i] >= 0:\n                    p[j] = 'x'\n                    n[i] = 'x'\n                    c += 1\n                    break\n                j += 1\n    cnt = 0\n    for i in p:\n        if i != 'x':\n            cnt += 1\n    return c + cnt // 2\n    print(c)\n    return c\nfor _ in range(int(input())):\n    a = input()\n    a = gi()\n    b = gi()\n    print(fun(a, b))", "def solution(arr1, arr2):\n    pos = []\n    neg = []\n    for i in range(len(arr1)):\n        diff = arr2[i] - arr1[i]\n        if diff >= 0:\n            pos.append(diff)\n        else:\n            neg.append(-diff)\n    pos.sort()\n    neg.sort()\n    ans = 0\n    while pos and neg:\n        cur = pos[-1]\n        while neg and neg[-1] > cur:\n            neg.pop()\n        if neg:\n            ans += 1\n            pos.pop()\n            neg.pop()\n    print(ans + len(pos) // 2)\nt = int(input())\nfor _ in range(t):\n    size = input()\n    arr1 = list(map(int, input().split(' ')))\n    arr2 = list(map(int, input().split(' ')))\n    solution(arr1, arr2)", "def get_data(test_jupy=False):\n    if test_jupy:\n        data = f.readline()\n    else:\n        data = input()\n    return data\nif True:\n    t = int(get_data())\n    for _ in range(t):\n        n = int(get_data())\n        x = list(map(int, get_data().split()))\n        y = list(map(int, get_data().split()))\n        for i in range(n):\n            x[i] = y[i] - x[i]\n        x.sort()\n        k = n - 1\n        cnt = 0\n        for i in range(n):\n            if k <= i:\n                break\n            if x[i] + x[k] >= 0:\n                cnt += 1\n                k -= 1\n        print(cnt)", "for tcases in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    kusur = [y[i] - x[i] for i in range(n)]\n    kusur.sort()\n    (l, r) = (0, n - 1)\n    ans = 0\n    while l < r:\n        while l < r and kusur[l] + kusur[r] < 0:\n            l += 1\n        if l < r:\n            ans += 1\n        l += 1\n        r -= 1\n    print(ans)", "def rest():\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    zm = []\n    zd = []\n    for i in range(n):\n        a = y[i] - x[i]\n        if a >= 0:\n            zm.append(a)\n        else:\n            zd.append(a)\n    zm.sort()\n    zd.sort(reverse=True)\n    ans = 0\n    while len(zm) > 0 and len(zd) > 0:\n        d = zd.pop()\n        if zm[-1] + d >= 0:\n            zm.pop()\n            ans += 1\n    print(ans + len(zm) // 2)\n    return\nn = int(input())\nfor i in range(n):\n    rest()", "for _ in range(int(input())):\n    n = int(input())\n    x = [int(i) for i in input().split()]\n    y = [int(i) for i in input().split()]\n    z = sorted([y - x for (x, y) in zip(x, y)])\n    (i, j) = (0, n - 1)\n    c = 0\n    while i != j and i < j:\n        if z[i] + z[j] < 0:\n            i += 1\n        else:\n            i += 1\n            j -= 1\n            c += 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    arr = [y[i] - x[i] for i in range(n)]\n    arr.sort(reverse=True)\n    if arr[1] + arr[0] < 0:\n        print(0)\n        continue\n    (i, j, cnt) = (0, n - 1, 0)\n    while i < j:\n        if -1 * arr[j] > arr[i]:\n            j -= 1\n        else:\n            cnt += 1\n            i += 1\n            j -= 1\n    print(cnt)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    brr = list(map(int, input().split()))\n    for i in range(n):\n        arr[i] -= brr[i]\n    arr.sort()\n    (l, r) = (0, n - 1)\n    count = 0\n    while l < r:\n        itr = arr[l] + arr[r]\n        if itr > 0:\n            r -= 1\n        else:\n            count += 1\n            (l, r) = (l + 1, r - 1)\n    print(count)", "t = int(input())\nfor t in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    m = [int(x) for x in input().split()]\n    r = [m[x] - l[x] for x in range(n)]\n    r.sort()\n    ans = 0\n    i = n - 1\n    j = 0\n    while j < i:\n        if r[i] + r[j] >= 0:\n            ans += 1\n            i -= 1\n            j += 1\n        else:\n            j += 1\n    print(ans)", "import sys\ninput = sys.stdin.readline\nn = int(input())\nfor _ in range(n):\n    len = int(input())\n    l1 = lambda : list(map(int, input().split()))\n    l2 = lambda : list(map(int, input().split()))\n    t1 = l1()\n    t2 = l2()\n    diff = []\n    for i in range(len):\n        diff.append(t2[i] - t1[i])\n    diff.sort()\n    j = 0\n    i = len - 1\n    cnt = 0\n    while i > j:\n        if diff[i] + diff[j] >= 0:\n            cnt += 1\n            i -= 1\n            j += 1\n        else:\n            j += 1\n    sys.stdout.write(str(cnt) + '\\n')", "t = int(input())\nfor _ in range(t):\n    f = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    d = 0\n    a = [y[i] - x[i] for i in range(f)]\n    a.sort(reverse=True)\n    (l, h) = (0, f - 1)\n    while l < h:\n        if a[l] + a[h] >= 0:\n            d += 1\n            (l, h) = (l + 1, h - 1)\n        else:\n            h -= 1\n    print(d)", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    x_i = [int(x) for x in input().split()]\n    y_i = [int(x) for x in input().split()]\n    c_i = [y - x for (x, y) in zip(x_i, y_i)]\n    c_i.sort()\n    low = 0\n    high = len(c_i) - 1\n    cnt = 0\n    while low < high:\n        if c_i[low] + c_i[high] >= 0:\n            cnt += 1\n            low += 1\n            high -= 1\n        else:\n            low += 1\n    print(cnt)", "import itertools\nimport math\nimport time\nfrom builtins import input, range\nfrom math import gcd as gcd\nimport sys\nimport queue\nimport itertools\nimport collections\nfrom heapq import heappop, heappush\nimport random\nimport os\nfrom random import randint\nimport decimal\nfrom math import factorial as fac\ndecimal.getcontext().prec = 26\n\ndef solve():\n    n = int(sys.stdin.readline())\n    x = list(map(int, sys.stdin.readline().split()))\n    y = list(map(int, sys.stdin.readline().split()))\n    b = [y[i] - x[i] for i in range(n)]\n    b.sort()\n    res = 0\n    r = n - 1\n    for l in range(n):\n        if l >= r:\n            break\n        if b[r] + b[l] >= 0:\n            r -= 1\n            res += 1\n    sys.stdout.write(str(res) + '\\n')\nmulti_test = 1\nif multi_test == 1:\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        solve()\nelse:\n    solve()", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    valu = [y[i] - x[i] for i in range(n)]\n    valu.sort(reverse=True)\n    i = 0\n    j = n - 1\n    ans = 0\n    while i < j:\n        while valu[i] + valu[j] < 0 and i < j:\n            j -= 1\n        if valu[i] + valu[j] >= 0 and i < j:\n            ans += 1\n            i += 1\n            j -= 1\n    print(ans)", "from collections import deque\nfor testcase in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    friends = deque(sorted((y[i] - x[i] for i in range(n))))\n    ans = 0\n    while len(friends) >= 2:\n        r = friends.pop()\n        l = friends.popleft()\n        while len(friends) > 0 and l + r < 0:\n            l = friends.popleft()\n        if l + r >= 0:\n            ans += 1\n    print(ans)", "from collections import deque\nfrom itertools import count\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    X = [int(i) for i in input().split()]\n    Y = [int(i) for i in input().split()]\n    guys = deque(sorted((y - x for (x, y) in zip(X, Y))))\n    for c in count(1):\n        if not guys:\n            break\n        rich = guys.pop()\n        while guys:\n            poor = guys.popleft()\n            if rich + poor >= 0:\n                break\n        else:\n            break\n    print(c - 1)", "from collections import deque\nfor testcase in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    friends = deque(sorted((y[i] - x[i] for i in range(n))))\n    ans = 0\n    while len(friends) >= 2:\n        r = friends.pop()\n        l = friends.popleft()\n        while len(friends) > 0 and l + r < 0:\n            l = friends.popleft()\n        if l + r >= 0:\n            ans += 1\n    print(ans)", "t = int(input())\nresult = []\nfor i in range(t):\n    bill = []\n    n = int(input())\n    xi = list(map(int, input().split(' ')))\n    yi = list(map(int, input().split(' ')))\n    for j in range(n):\n        bill.append(yi[j] - xi[j])\n    bill.sort()\n    (start, end) = (0, n - 1)\n    sum = 0\n    while start < end:\n        if bill[end] + bill[start] >= 0:\n            end -= 1\n            sum += 1\n        start += 1\n    result.append(sum)\nfor i in result:\n    print(i)", "def solve():\n    n = int(input())\n    X = [int(x) for x in input().split()]\n    Y = [int(x) for x in input().split()]\n    delta = [y - x for (x, y) in zip(X, Y)]\n    delta = sorted(delta, reverse=True)\n    (l, r) = (0, n - 1)\n    pairs = 0\n    while True:\n        while l < r and delta[r] + delta[l] < 0:\n            r -= 1\n        if l >= r:\n            break\n        pairs += 1\n        l += 1\n        r -= 1\n    print(pairs)\n    return\nt = int(input())\nfor _ in range(t):\n    solve()", "for _ in range(int(input())):\n    nap = int(input())\n    xa = list(map(int, input().split()))\n    ya = list(map(int, input().split()))\n    aa = [ya[i] - xa[i] for i in range(nap)]\n    aa.sort()\n    ans = 0\n    (la, ra) = (0, nap - 1)\n    while la < ra:\n        if aa[la] + aa[ra] >= 0:\n            ra -= 1\n            ans += 1\n        la += 1\n    print(ans)", "from collections import deque\nfor testcase in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    friends = deque(sorted((y[i] - x[i] for i in range(n))))\n    ans = 0\n    while len(friends) >= 2:\n        r = friends.pop()\n        l = friends.popleft()\n        while len(friends) > 0 and l + r < 0:\n            l = friends.popleft()\n        if l + r >= 0:\n            ans += 1\n    print(ans)", "from collections import deque\nfor testcase in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    friends = deque(sorted((y[i] - x[i] for i in range(n))))\n    ans = 0\n    while len(friends) >= 2:\n        r = friends.pop()\n        l = friends.popleft()\n        while len(friends) > 0 and l + r < 0:\n            l = friends.popleft()\n        if l + r >= 0:\n            ans += 1\n    print(ans)", "def main():\n    total = int(input())\n    for i in range(total):\n        maximumDays()\n\ndef maximumDays():\n    answer = 0\n    n = int(input())\n    burles_wanted = [int(b) for b in input().split(' ')]\n    burles_have = [int(h) for h in input().split(' ')]\n    match = [burles_have[i] - burles_wanted[i] for i in range(n)]\n    match.sort()\n    (i, j) = (0, n - 1)\n    while i < j:\n        if match[i] + match[j] >= 0:\n            answer += 1\n            i += 1\n            j -= 1\n        elif match[i] + match[j] < 0:\n            i += 1\n    print(answer)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(0)\n        continue\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    neg = []\n    pos = []\n    for i in range(n):\n        d = b[i] - a[i]\n        if d < 0:\n            neg.append(d)\n        else:\n            pos.append(d)\n    lp = len(pos)\n    if lp == 0:\n        print(0)\n        continue\n    neg.sort()\n    pos.sort(reverse=True)\n    i = 0\n    c = 0\n    for k in neg:\n        if i >= lp:\n            break\n        if k + pos[i] >= 0:\n            c += 1\n            i += 1\n    print((lp - c) // 2 + c)", "num_of_cases = int(input())\nfor case in range(num_of_cases):\n    n = int(input())\n    desires = map(int, input().split())\n    budgets = map(int, input().split())\n    therich = []\n    thepoor = []\n    for (budget, desire) in zip(budgets, desires):\n        if budget - desire > 0:\n            therich.append(budget - desire)\n        elif budget - desire < 0:\n            thepoor.append(budget - desire)\n    satisfied = n - len(thepoor)\n    therich.sort(reverse=True)\n    thepoor.sort()\n    pair = 0\n    while thepoor:\n        poor = thepoor.pop()\n        while therich:\n            rich = therich.pop()\n            if rich + poor >= 0:\n                pair += 1\n                break\n        else:\n            break\n    pair += (satisfied - pair) // 2\n    print(pair)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    C = list(map(int, input().split()))\n    M = list(map(int, input().split()))\n    l = []\n    for i in range(n):\n        l.append(M[i] - C[i])\n        i += 1\n    l = sorted(l, reverse=True)\n    i = 0\n    j = n - 1\n    cnt = 0\n    while i < j:\n        if l[i] + l[j] >= 0:\n            cnt += 1\n            i += 1\n            j -= 1\n        else:\n            j = j - 1\n    print(cnt)\n    t = t - 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    diff = [y[i] - x[i] for i in range(n)]\n    diff.sort()\n    i = 0\n    j = n - 1\n    res = 0\n    while i < j:\n        if diff[i] + diff[j] >= 0:\n            res += 1\n            i += 1\n            j -= 1\n        else:\n            i += 1\n    print(res)", "t = int(input())\nfor _ in range(t):\n    l = int(input())\n    x = [int(i) for i in input().split()]\n    y = [int(i) for i in input().split()]\n    s = sorted([x[i] - y[i] for i in range(l)])\n    r = l - 1\n    res = 0\n    l = 0\n    while l < r:\n        while l < r and s[r] + s[l] > 0:\n            r -= 1\n        if l < r:\n            res += 1\n        l += 1\n        r -= 1\n    print(res)", "t = int(input())\n\ndef main():\n    for q in range(t):\n        NUM = int(input())\n        ANSWER = list()\n        ARRAY = list(map(int, input().split()))\n        ARRAY1 = list(map(int, input().split()))\n        for iterator in range(NUM):\n            ANSWER.append(ARRAY1[iterator] - ARRAY[iterator])\n        ANSWER = sorted(ANSWER)\n        LEFT = 0\n        RIGHT = NUM - 1\n        RES = 0\n        while LEFT < RIGHT:\n            if ANSWER[LEFT] >= 0 and ANSWER[RIGHT] >= 0 or ANSWER[LEFT] * -1 <= ANSWER[RIGHT]:\n                LEFT += 1\n                RIGHT -= 1\n                RES += 1\n            else:\n                LEFT += 1\n        print(RES)\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = [int(i) for i in input().split()]\n    y = [int(i) for i in input().split()]\n    need = []\n    have = []\n    people = 0\n    for i in range(n):\n        if y[i] >= x[i]:\n            people += 1\n            have.append(y[i] - x[i])\n        else:\n            need.append(x[i] - y[i])\n    have.sort()\n    need.sort()\n    (hh, nn) = (len(have), len(need))\n    (i, j) = (0, 0)\n    while i < hh and j < nn:\n        while i < hh and have[i] < need[j]:\n            i += 1\n        if i < hh:\n            people += 1\n            i += 1\n            j += 1\n    print(people // 2)", "def solve():\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    ans = 0\n    poor = []\n    rich = []\n    safe = 0\n    for i in range(n):\n        if y[i] - x[i] < 0:\n            poor.append(y[i] - x[i])\n        elif y[i] - x[i] > 0:\n            rich.append(y[i] - x[i])\n        else:\n            safe += 1\n    poor.sort(key=lambda w: -w)\n    rich_left = 0\n    rich.sort()\n    j = 0\n    for i in range(len(rich)):\n        if j >= len(poor):\n            rich_left += 1\n        elif rich[i] + poor[j] >= 0:\n            ans += 1\n            j += 1\n        else:\n            rich_left += 1\n    print('%d' % (ans + (rich_left + safe) // 2))\nt = int(input())\nfor _ in range(t):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    l3 = []\n    for i in range(n):\n        l3.append(l2[i] - l1[i])\n    l3.sort(reverse=True)\n    i = 0\n    j = n - 1\n    ans = 0\n    while i < j:\n        if l3[i] + l3[j] >= 0:\n            ans += 1\n            i += 1\n            j -= 1\n        else:\n            j -= 1\n    print(ans)", "tt = int(input())\nfor _ in range(tt):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    for i in range(n):\n        l1[i] = l2[i] - l1[i]\n    l1.sort()\n    (j, i) = (0, n - 1)\n    ans = 0\n    while i > j:\n        while j < n and -l1[i] > l1[j]:\n            j += 1\n        if j >= i:\n            break\n        ans += 1\n        i -= 1\n        j += 1\n    print(ans)", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    b = list(map(int, sys.stdin.readline().split()))\n    duo = []\n    for i in range(n):\n        duo.append(b[i] - a[i])\n    duo.sort()\n    i = n - 1\n    j = 0\n    ans = 0\n    while j < i:\n        while j < n and -duo[i] > duo[j]:\n            j += 1\n        if j >= i:\n            break\n        ans += 1\n        i -= 1\n        j += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    lis = list()\n    for i in range(n):\n        lis.append(y[i] - x[i])\n    lis.sort()\n    ans = 0\n    (left, right) = (0, n - 1)\n    while left < right:\n        if lis[left] + lis[right] >= 0:\n            left += 1\n            right -= 1\n            ans += 1\n        else:\n            left += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    diff = []\n    for i in range(n):\n        diff.append(y[i] - x[i])\n    diff.sort()\n    ans = 0\n    left = 0\n    right = n - 1\n    while left < right:\n        if diff[left] + diff[right] >= 0:\n            left += 1\n            right -= 1\n            ans += 1\n        else:\n            left += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    x = [int(i) for i in input().split()]\n    y = [int(i) for i in input().split()]\n    qu = [y[i] - x[i] for i in range(n)]\n    qu.sort()\n    l = 0\n    r = n - 1\n    res = 0\n    while l < r:\n        if qu[l] + qu[r] >= 0:\n            l += 1\n            r -= 1\n            res += 1\n        else:\n            l += 1\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    s1 = list(map(int, input().split()))\n    s2 = list(map(int, input().split()))\n    s3 = []\n    for i in range(n):\n        s3.append(s2[i] - s1[i])\n    s3.sort()\n    (l, r, ans) = (0, n - 1, 0)\n    while l < r:\n        if s3[l] + s3[r] >= 0:\n            ans += 1\n            l += 1\n            r -= 1\n        else:\n            l += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    dif = [y[i] - x[i] for i in range(n)]\n    dif.sort(reverse=True)\n    j = n - 1\n    ans = 0\n    for i in range(n):\n        while j > i and dif[i] + dif[j] < 0:\n            j -= 1\n        if j <= i:\n            break\n        ans += 1\n        j -= 1\n    print(ans)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    x = list(map(int, input().split(' ')))\n    y = list(map(int, input().split(' ')))\n    diff = [0] * n\n    for i in range(n):\n        diff[i] = y[i] - x[i]\n    diff.sort(reverse=True)\n    count = 0\n    j = n - 1\n    for i in range(n):\n        while j >= 0 and diff[i] + diff[j] < 0:\n            j -= 1\n        if j <= i:\n            break\n        count += 1\n        j -= 1\n    print(count)\n    t -= 1", "for t in range(int(input())):\n    n = int(input())\n    arr = []\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    for i in range(n):\n        arr.append(y[i] - x[i])\n    arr.sort()\n    res = 0\n    l = 0\n    r = n - 1\n    while l < r:\n        if arr[l] + arr[r] >= 0:\n            res += 1\n            r -= 1\n        l += 1\n    print(res)", "from sys import stdin\nrd = stdin.readline\nfor _ in range(int(rd())):\n    n = int(rd())\n    x = list(map(int, rd().split()))\n    y = list(map(int, rd().split()))\n    exc = [y[i] - x[i] for i in range(n)]\n    exc.sort(reverse=True)\n    if exc[1] + exc[0] < 0:\n        print(0)\n        continue\n    (i, j, count) = (0, n - 1, 0)\n    while i < j:\n        if exc[j] * -1 > exc[i]:\n            j -= 1\n        else:\n            count += 1\n            i += 1\n            j -= 1\n    print(count)", "ts = int(input())\nns = []\nxs = []\nys = []\nfor t in range(ts):\n    ns.append(int(input()))\n    xs.append(list(map(int, input().split())))\n    ys.append(list(map(int, input().split())))\nfor (n, x, y) in zip(ns, xs, ys):\n    diffs = [y[i] - x[i] for i in range(n) if y[i] - x[i] != 0]\n    zeros = n - len(diffs)\n    if zeros % 2 == 1:\n        diffs.append(0)\n        current_size = n - zeros + 1\n        ind_pos = n - 1 - zeros + 1\n    else:\n        current_size = n - zeros\n        ind_pos = n - 1 - zeros\n    diffs.sort()\n    ind_neg = 0\n    pairs = zeros // 2\n    done = False\n    while current_size > 1:\n        if diffs[ind_neg] >= 0:\n            pairs += current_size // 2\n            done = True\n            break\n        if diffs[ind_pos] <= 0:\n            done = True\n            break\n        while diffs[ind_pos] < -diffs[ind_neg] and diffs[ind_neg] < 0:\n            ind_neg += 1\n            current_size -= 1\n        if diffs[ind_pos] >= -diffs[ind_neg] and diffs[ind_neg] < 0:\n            current_size -= 2\n            ind_neg += 1\n            ind_pos -= 1\n            pairs += 1\n    print(pairs)", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    b = list(map(int, input().split()))\n    m = list(map(int, input().split()))\n    arr = []\n    res = 0\n    for (bb, mm) in zip(b, m):\n        arr.append(mm - bb)\n    arr = sorted(arr, key=lambda x: -x)\n    (s, e) = (0, n - 1)\n    while s < e:\n        if arr[s] + arr[e] >= 0:\n            res += 1\n            s += 1\n            e -= 1\n        else:\n            e -= 1\n    print(res)", "(t,) = map(int, input().split())\nwhile t:\n    t -= 1\n    (n,) = map(int, input().split())\n    a = sorted((y - x for (x, y) in zip(map(int, input().split()), map(int, input().split()))))\n    i = j = 0\n    while i + j + 1 < n:\n        j += a[i] + a[~j] >= 0\n        i += 1\n    print(j)", "(t,) = map(int, input().split())\nwhile t:\n    t -= 1\n    (n,) = map(int, input().split())\n    a = sorted((y - x for (x, y) in zip(map(int, input().split()), map(int, input().split()))))\n    i = j = 0\n    while i + j + 1 < n:\n        j += a[i] + a[~j] >= 0\n        i += 1\n    print(j)", "(t,) = map(int, input().split())\nwhile t:\n    t -= 1\n    (n,) = map(int, input().split())\n    a = sorted((y - x for (x, y) in zip(map(int, input().split()), map(int, input().split()))))\n    i = j = 0\n    while i + j + 1 < n:\n        j += a[i] + a[~j] >= 0\n        i += 1\n    print(j)", "import sys\nimport collections\nfrom math import ceil, gcd, sqrt, log\nimport bisect\nINF = float('inf')\nmod = 1000000007\n\ndef solve():\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    net = []\n    for i in range(n):\n        k = B[i] - A[i]\n        net.append(k)\n    net.sort()\n    count = 0\n    (i, j) = (0, n - 1)\n    while i < j:\n        if net[i] + net[j] >= 0:\n            count += 1\n            i += 1\n            j -= 1\n        else:\n            i += 1\n    print(count)\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "T = int(input())\nfor t in range(0, T):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    arr = [y[i] - x[i] for i in range(0, n)]\n    arr.sort()\n    ptr1 = 0\n    ptr2 = n - 1\n    ans = 0\n    while ptr1 < ptr2:\n        if arr[ptr1] >= 0 and arr[ptr2] >= 0:\n            ans += 1\n            ptr1 += 1\n            ptr2 -= 1\n        elif arr[ptr1] < 0 and arr[ptr2] > 0:\n            if abs(arr[ptr1]) <= arr[ptr2]:\n                ans += 1\n                ptr1 += 1\n                ptr2 -= 1\n            else:\n                ptr1 += 1\n        else:\n            ptr1 += 1\n    print(ans)", "from collections import defaultdict\nfrom sys import stdin\n\ndef solution(n, A, B):\n    diffs = [b - a for (a, b) in zip(A, B)]\n    sorted_diffs = sorted(diffs, reverse=True)\n    left = 0\n    right = n - 1\n    result = 0\n    while left < right:\n        if sorted_diffs[left] + sorted_diffs[right] >= 0:\n            result += 1\n            left += 1\n        right -= 1\n    return result\ntest_cases = int(stdin.readline())\nfor it in range(test_cases):\n    n = int(stdin.readline().strip())\n    A = [int(x) for x in stdin.readline().split()]\n    B = [int(x) for x in stdin.readline().split()]\n    print(solution(n, A, B))", "R = lambda : map(int, input().split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n,) = R()\n    a = sorted((y - x for (x, y) in zip(R(), R())))\n    i = j = 0\n    while i + j + 1 < n:\n        j += a[i] + a[~j] >= 0\n        i += 1\n    print(j)", "from array import array\nfor i in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    ans = []\n    for i in range(n):\n        ans.append(y[i] - x[i])\n    ans.sort()\n    res = 0\n    (l, r) = (0, n - 1)\n    while l < r:\n        if ans[l] + ans[r] >= 0:\n            r -= 1\n            res += 1\n        l += 1\n    print(res)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    canSpend = []\n    for (i, j) in zip(x, y):\n        canSpend.append(j - i)\n    canSpend.sort()\n    (l, r) = (0, len(canSpend) - 1)\n    ans = 0\n    while l <= r:\n        if canSpend[r] < 0:\n            break\n        if canSpend[l] >= 0:\n            ans += (r - l + 1) // 2\n            break\n        if canSpend[l] + canSpend[r] >= 0:\n            ans += 1\n            l += 1\n            r -= 1\n        else:\n            while l <= r and canSpend[l] < 0 and (canSpend[l] + canSpend[r] < 0):\n                l += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    D = [B[i] - A[i] for i in range(n)]\n    D.sort(reverse=True)\n    r = n - 1\n    ans = 0\n    for l in range(n):\n        while l < r and D[l] + D[r] < 0:\n            r -= 1\n        if l >= r:\n            break\n        ans += 1\n        r -= 1\n    print(ans)", "from collections import deque\nfor testcase in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    friends = deque(sorted((y[i] - x[i] for i in range(n))))\n    ans = 0\n    while len(friends) >= 2:\n        r = friends.pop()\n        l = friends.popleft()\n        while len(friends) > 0 and l + r < 0:\n            l = friends.popleft()\n        if l + r >= 0:\n            ans += 1\n    print(ans)", "from collections import deque\nfor testcase in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    friends = deque(sorted((y[i] - x[i] for i in range(n))))\n    ans = 0\n    while len(friends) >= 2:\n        r = friends.pop()\n        l = friends.popleft()\n        while len(friends) > 0 and l + r < 0:\n            l = friends.popleft()\n        if l + r >= 0:\n            ans += 1\n    print(ans)", "from collections import deque\nfor testcase in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    friends = deque(sorted((y[i] - x[i] for i in range(n))))\n    ans = 0\n    while len(friends) >= 2:\n        r = friends.pop()\n        l = friends.popleft()\n        while len(friends) > 0 and l + r < 0:\n            l = friends.popleft()\n        if l + r >= 0:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    t = []\n    for i in range(n):\n        t.append(y[i] - x[i])\n    t.sort()\n    teams = 0\n    l = 0\n    r = n - 1\n    while l < r:\n        if t[r] + t[l] >= 0:\n            teams += 1\n            r -= 1\n        l += 1\n    print(teams)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    rich = []\n    poor = []\n    smart = 0\n    for j in range(len(x)):\n        d = x[j] - y[j]\n        if d > 0:\n            poor.append(d)\n        elif d == 0:\n            smart += 1\n        else:\n            rich.append(abs(d))\n    poor.sort()\n    rich.sort()\n    res = smart // 2\n    while len(poor) != 0 and len(rich) != 0:\n        if poor[-1] > rich[-1]:\n            poor.pop()\n        else:\n            res += 1\n            rich.pop()\n            poor.pop()\n    res += len(rich) // 2\n    res += (len(rich) % 2 + smart % 2) // 2\n    print(res)", "for tcases in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    kusur = [y[i] - x[i] for i in range(n)]\n    kusur.sort()\n    (l, r) = (0, n - 1)\n    ans = 0\n    while l < r:\n        while l < r and kusur[l] + kusur[r] < 0:\n            l += 1\n        if l < r:\n            ans += 1\n        l += 1\n        r -= 1\n    print(ans)", "R = lambda : map(int, input().split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n,) = R()\n    a = sorted((y - x for (x, y) in zip(R(), R())))\n    i = j = 0\n    while i + j + 1 < n:\n        j += a[i] + a[~j] >= 0\n        i += 1\n    print(j)", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    t = []\n    for i in range(n):\n        t.append(y[i] - x[i])\n    t.sort()\n    teams = 0\n    l = 0\n    r = n - 1\n    while l < r:\n        if t[r] + t[l] >= 0:\n            teams += 1\n            r -= 1\n        l += 1\n    print(teams)"]