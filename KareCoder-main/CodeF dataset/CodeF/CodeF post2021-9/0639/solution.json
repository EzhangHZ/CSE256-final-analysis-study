["for _ in range(int(input())):\n    c = int(input())\n    a = [list(map(int, input().split())) for _ in range(2)]\n    a[0][0] = -1\n    pos = (0, 0)\n    dync = [0 for _ in range(c)]\n    y = 0\n    for x in range(c - 1):\n        y = not y\n        curr = max(a[y][x] + 2, a[y][x + 1] + 1)\n        dync[x + 1] = max(curr, dync[x] + 2)\n    top = list(range(0, c, 2))\n    latestTime = 0\n    for x in top[::-1]:\n        dist = (c - x) * 2 - 1\n        if x + 1 < c:\n            curr = max(a[0][x] + dist + 1, a[0][x + 1] + dist, a[1][x] + 1, a[1][x + 1] + 2)\n        else:\n            curr = max(a[0][x] + 2, a[1][x] + 1)\n        latestTime = max(latestTime + 2, curr)\n        dync[x] = max(dync[x] + dist, latestTime)\n    bottom = list(range(1, c, 2))\n    latestTime = 0\n    for x in bottom[::-1]:\n        dist = (c - x) * 2 - 1\n        if x + 1 < c:\n            curr = max(a[1][x] + dist + 1, a[1][x + 1] + dist, a[0][x] + 1, a[0][x + 1] + 2)\n        else:\n            curr = max(a[1][x] + 2, a[0][x] + 1)\n        latestTime = max(latestTime + 2, curr)\n        dync[x] = max(dync[x] + dist, latestTime)\n    print(min(dync))", "INF = 2 * 10 ** 9\nfor _ in range(int(input())):\n    m = int(input())\n    a = [[int(x) for x in input().split()] for i in range(2)]\n    su = [[-INF for j in range(m + 1)] for i in range(2)]\n    for i in range(2):\n        for j in range(m - 1, -1, -1):\n            su[i][j] = max(su[i][j + 1] - 1, a[i][j], a[i ^ 1][j] - (2 * (m - j) - 1))\n    pr = a[0][0] - 1\n    ans = INF\n    for j in range(m):\n        jj = j & 1\n        ans = min(ans, max(pr, su[jj][j + 1] - 2 * j - 1, a[jj ^ 1][j] - 2 * m + 1))\n        pr = max(pr, a[jj ^ 1][j] - 2 * j - 1)\n        ans = min(ans, max(pr, su[jj ^ 1][j + 1] - 2 * j - 2))\n        if j < m - 1:\n            pr = max(pr, a[jj ^ 1][j + 1] - 2 * j - 2)\n    print(ans + 2 * m)", "INF = 2 * 10 ** 9\nfor _ in range(int(input())):\n    m = int(input())\n    a = [[int(x) for x in input().split()] for i in range(2)]\n    su = [[-INF for j in range(m + 1)] for i in range(2)]\n    for i in range(2):\n        for j in range(m - 1, -1, -1):\n            su[i][j] = max(su[i][j + 1] - 1, a[i][j], a[i ^ 1][j] - (2 * (m - j) - 1))\n    pr = a[0][0] - 1\n    ans = INF\n    for j in range(m):\n        jj = j & 1\n        ans = min(ans, max(pr, su[jj][j + 1] - 2 * j - 1, a[jj ^ 1][j] - 2 * m + 1))\n        pr = max(pr, a[jj ^ 1][j] - 2 * j - 1)\n        ans = min(ans, max(pr, su[jj ^ 1][j + 1] - 2 * j - 2))\n        if j < m - 1:\n            pr = max(pr, a[jj ^ 1][j + 1] - 2 * j - 2)\n    print(ans + 2 * m)", "INF = 2 * 10 ** 9\nfor _ in range(int(input())):\n    m = int(input())\n    a = [[int(x) for x in input().split()] for i in range(2)]\n    su = [[-INF for j in range(m + 1)] for i in range(2)]\n    for i in range(2):\n        for j in range(m - 1, -1, -1):\n            su[i][j] = max(su[i][j + 1] - 1, a[i][j], a[i ^ 1][j] - (2 * (m - j) - 1))\n    pr = a[0][0] - 1\n    ans = INF\n    for j in range(m):\n        jj = j & 1\n        ans = min(ans, max(pr, su[jj][j + 1] - 2 * j - 1, a[jj ^ 1][j] - 2 * m + 1))\n        pr = max(pr, a[jj ^ 1][j] - 2 * j - 1)\n        ans = min(ans, max(pr, su[jj ^ 1][j + 1] - 2 * j - 2))\n        if j < m - 1:\n            pr = max(pr, a[jj ^ 1][j + 1] - 2 * j - 2)\n    print(ans + 2 * m)", "INF = 2 * 10 ** 9\nfor _ in range(int(input())):\n    m = int(input())\n    a = [[int(x) for x in input().split()] for i in range(2)]\n    su = [[-INF for j in range(m + 1)] for i in range(2)]\n    for i in range(2):\n        for j in range(m - 1, -1, -1):\n            su[i][j] = max(su[i][j + 1] - 1, a[i][j], a[i ^ 1][j] - (2 * (m - j) - 1))\n    pr = a[0][0] - 1\n    ans = INF\n    for j in range(m):\n        jj = j & 1\n        ans = min(ans, max(pr, su[jj][j + 1] - 2 * j - 1, a[jj ^ 1][j] - 2 * m + 1))\n        pr = max(pr, a[jj ^ 1][j] - 2 * j - 1)\n        ans = min(ans, max(pr, su[jj ^ 1][j + 1] - 2 * j - 2))\n        if j < m - 1:\n            pr = max(pr, a[jj ^ 1][j + 1] - 2 * j - 2)\n    print(ans + 2 * m)", "INF = 2 * 10 ** 9\nfor _ in range(int(input())):\n    m = int(input())\n    a = [[int(x) for x in input().split()] for i in range(2)]\n    su = [[-INF for j in range(m + 1)] for i in range(2)]\n    for i in range(2):\n        for j in range(m - 1, -1, -1):\n            su[i][j] = max(su[i][j + 1] - 1, a[i][j], a[i ^ 1][j] - (2 * (m - j) - 1))\n    pr = a[0][0] - 1\n    ans = INF\n    for j in range(m):\n        jj = j & 1\n        ans = min(ans, max(pr, su[jj][j + 1] - 2 * j - 1, a[jj ^ 1][j] - 2 * m + 1))\n        pr = max(pr, a[jj ^ 1][j] - 2 * j - 1)\n        ans = min(ans, max(pr, su[jj ^ 1][j + 1] - 2 * j - 2))\n        if j < m - 1:\n            pr = max(pr, a[jj ^ 1][j + 1] - 2 * j - 2)\n    print(ans + 2 * m)", "INF = 2 * 10 ** 9\nfor _ in range(int(input())):\n    m = int(input())\n    a = [[int(x) for x in input().split()] for i in range(2)]\n    su = [[-INF for j in range(m + 1)] for i in range(2)]\n    for i in range(2):\n        for j in range(m - 1, -1, -1):\n            su[i][j] = max(su[i][j + 1] - 1, a[i][j], a[i ^ 1][j] - (2 * (m - j) - 1))\n    pr = a[0][0] - 1\n    ans = INF\n    for j in range(m):\n        jj = j & 1\n        ans = min(ans, max(pr, su[jj][j + 1] - 2 * j - 1, a[jj ^ 1][j] - 2 * m + 1))\n        pr = max(pr, a[jj ^ 1][j] - 2 * j - 1)\n        ans = min(ans, max(pr, su[jj ^ 1][j + 1] - 2 * j - 2))\n        if j < m - 1:\n            pr = max(pr, a[jj ^ 1][j + 1] - 2 * j - 2)\n    print(ans + 2 * m)", "INF = 2 * 10 ** 9\nfor _ in range(int(input())):\n    m = int(input())\n    a = [[int(x) for x in input().split()] for i in range(2)]\n    su = [[-INF for j in range(m + 1)] for i in range(2)]\n    for i in range(2):\n        for j in range(m - 1, -1, -1):\n            su[i][j] = max(su[i][j + 1] - 1, a[i][j], a[i ^ 1][j] - (2 * (m - j) - 1))\n    pr = a[0][0] - 1\n    ans = INF\n    for j in range(m):\n        jj = j & 1\n        ans = min(ans, max(pr, su[jj][j + 1] - 2 * j - 1, a[jj ^ 1][j] - 2 * m + 1))\n        pr = max(pr, a[jj ^ 1][j] - 2 * j - 1)\n        ans = min(ans, max(pr, su[jj ^ 1][j + 1] - 2 * j - 2))\n        if j < m - 1:\n            pr = max(pr, a[jj ^ 1][j + 1] - 2 * j - 2)\n    print(ans + 2 * m)", "INF = 2 * 10 ** 9\nfor _ in range(int(input())):\n    m = int(input())\n    a = [[int(x) for x in input().split()] for i in range(2)]\n    su = [[-INF for j in range(m + 1)] for i in range(2)]\n    for i in range(2):\n        for j in range(m - 1, -1, -1):\n            su[i][j] = max(su[i][j + 1] - 1, a[i][j], a[i ^ 1][j] - (2 * (m - j) - 1))\n    pr = a[0][0] - 1\n    ans = INF\n    for j in range(m):\n        jj = j & 1\n        ans = min(ans, max(pr, su[jj][j + 1] - 2 * j - 1, a[jj ^ 1][j] - 2 * m + 1))\n        pr = max(pr, a[jj ^ 1][j] - 2 * j - 1)\n        ans = min(ans, max(pr, su[jj ^ 1][j + 1] - 2 * j - 2))\n        if j < m - 1:\n            pr = max(pr, a[jj ^ 1][j + 1] - 2 * j - 2)\n    print(ans + 2 * m)", "INF = 2 * 10 ** 9\nfor _ in range(int(input())):\n    m = int(input())\n    a = [[int(x) for x in input().split()] for i in range(2)]\n    su = [[-INF for j in range(m + 1)] for i in range(2)]\n    for i in range(2):\n        for j in range(m - 1, -1, -1):\n            su[i][j] = max(su[i][j + 1] - 1, a[i][j], a[i ^ 1][j] - (2 * (m - j) - 1))\n    pr = a[0][0] - 1\n    ans = INF\n    for j in range(m):\n        jj = j & 1\n        ans = min(ans, max(pr, su[jj][j + 1] - 2 * j - 1, a[jj ^ 1][j] - 2 * m + 1))\n        pr = max(pr, a[jj ^ 1][j] - 2 * j - 1)\n        ans = min(ans, max(pr, su[jj ^ 1][j + 1] - 2 * j - 2))\n        if j < m - 1:\n            pr = max(pr, a[jj ^ 1][j + 1] - 2 * j - 2)\n    print(ans + 2 * m)", "INF = 2 * 10 ** 9\nfor _ in range(int(input())):\n    m = int(input())\n    a = [[int(x) for x in input().split()] for i in range(2)]\n    su = [[-INF for j in range(m + 1)] for i in range(2)]\n    for i in range(2):\n        for j in range(m - 1, -1, -1):\n            su[i][j] = max(su[i][j + 1] - 1, a[i][j], a[i ^ 1][j] - (2 * (m - j) - 1))\n    pr = a[0][0] - 1\n    ans = INF\n    for j in range(m):\n        jj = j & 1\n        ans = min(ans, max(pr, su[jj][j + 1] - 2 * j - 1, a[jj ^ 1][j] - 2 * m + 1))\n        pr = max(pr, a[jj ^ 1][j] - 2 * j - 1)\n        ans = min(ans, max(pr, su[jj ^ 1][j + 1] - 2 * j - 2))\n        if j < m - 1:\n            pr = max(pr, a[jj ^ 1][j + 1] - 2 * j - 2)\n    print(ans + 2 * m)", "INF = 2 * 10 ** 9\nfor _ in range(int(input())):\n    m = int(input())\n    a = [[int(x) for x in input().split()] for i in range(2)]\n    su = [[-INF for j in range(m + 1)] for i in range(2)]\n    for i in range(2):\n        for j in range(m - 1, -1, -1):\n            su[i][j] = max(su[i][j + 1] - 1, a[i][j], a[i ^ 1][j] - (2 * (m - j) - 1))\n    pr = a[0][0] - 1\n    ans = INF\n    for j in range(m):\n        jj = j & 1\n        ans = min(ans, max(pr, su[jj][j + 1] - 2 * j - 1, a[jj ^ 1][j] - 2 * m + 1))\n        pr = max(pr, a[jj ^ 1][j] - 2 * j - 1)\n        ans = min(ans, max(pr, su[jj ^ 1][j + 1] - 2 * j - 2))\n        if j < m - 1:\n            pr = max(pr, a[jj ^ 1][j + 1] - 2 * j - 2)\n    print(ans + 2 * m)", "INF = 2 * 10 ** 9\nfor _ in range(int(input())):\n    m = int(input())\n    a = [[int(x) for x in input().split()] for i in range(2)]\n    su = [[-INF for j in range(m + 1)] for i in range(2)]\n    for i in range(2):\n        for j in range(m - 1, -1, -1):\n            su[i][j] = max(su[i][j + 1] - 1, a[i][j], a[i ^ 1][j] - (2 * (m - j) - 1))\n    pr = a[0][0] - 1\n    ans = INF\n    for j in range(m):\n        jj = j & 1\n        ans = min(ans, max(pr, su[jj][j + 1] - 2 * j - 1, a[jj ^ 1][j] - 2 * m + 1))\n        pr = max(pr, a[jj ^ 1][j] - 2 * j - 1)\n        ans = min(ans, max(pr, su[jj ^ 1][j + 1] - 2 * j - 2))\n        if j < m - 1:\n            pr = max(pr, a[jj ^ 1][j + 1] - 2 * j - 2)\n    print(ans + 2 * m)", "INF = 2 * 10 ** 9\nfor _ in range(int(input())):\n    m = int(input())\n    a = [[int(x) for x in input().split()] for i in range(2)]\n    su = [[-INF for j in range(m + 1)] for i in range(2)]\n    for i in range(2):\n        for j in range(m - 1, -1, -1):\n            su[i][j] = max(su[i][j + 1] - 1, a[i][j], a[i ^ 1][j] - (2 * (m - j) - 1))\n    pr = a[0][0] - 1\n    ans = INF\n    for j in range(m):\n        jj = j & 1\n        ans = min(ans, max(pr, su[jj][j + 1] - 2 * j - 1, a[jj ^ 1][j] - 2 * m + 1))\n        pr = max(pr, a[jj ^ 1][j] - 2 * j - 1)\n        ans = min(ans, max(pr, su[jj ^ 1][j + 1] - 2 * j - 2))\n        if j < m - 1:\n            pr = max(pr, a[jj ^ 1][j + 1] - 2 * j - 2)\n    print(ans + 2 * m)", "INF = 2 * 10 ** 9\nfor _ in range(int(input())):\n    (m, a) = (int(input()), [list(map(int, input().split())) for _ in range(2)])\n    f = [[[-INF for _ in range(m + 1)] for _ in range(2)] for _ in range(2)]\n    for i in range(m - 1, -1, -1):\n        for j in range(2):\n            f[j][0][i] = max(f[j][0][i + 1], a[j][i] + i)\n            f[j][1][i] = max(f[j][1][i + 1], a[j][i] - i)\n    a[0][0] = -1\n    (s, ans) = (0, INF)\n    for i in range(m):\n        t = i & 1\n        s = max(s, a[t][i] + 2 * (m - i))\n        ans = min(ans, max(s, f[t ^ 1][0][i] - i + 1, f[t][1][i + 1] + 2 * m - i))\n        s = max(s, a[t ^ 1][i] + 2 * (m - i) - 1)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    m = int(input())\n    r = [list(map(int, input().split())) for i in range(2)]\n    r[0][0] = -1\n    L = [0]\n    R = [[[0], [0]], [[0], [0]]]\n    for i in range(m):\n        s = i & 1\n        L.append(max(L[-1], 2 * (m - i) + max(r[0][i] - s, r[1][i] - 1 + s)))\n        for j in range(2):\n            for k in range(2):\n                R[j][k].append(max(R[j][k][-1], r[j][-i - 1] + i * (2 * k - 1)))\n    B = m + 1 + max(R[0][1][m], R[1][0][m] - 1)\n    for i in range(1, m):\n        s = i & 1\n        B = min(B, max(L[i], m + 1 - i + max(R[0][1 - s][m - i] - s, R[1][s][m - i] - 1 + s)))\n    print(B)", "t = int(input())\nfor _ in range(t):\n    m = int(input())\n    r = [list(map(int, input().split())) for i in range(2)]\n    r[0][0] = -1\n    L = [0]\n    R = [[[0], [0]], [[0], [0]]]\n    for i in range(m):\n        s = i & 1\n        L.append(max(L[-1], 2 * (m - i) + max(r[0][i] - s, r[1][i] - 1 + s)))\n        for j in range(2):\n            for k in range(2):\n                R[j][k].append(max(R[j][k][-1], r[j][-i - 1] + i * (2 * k - 1)))\n    B = m + 1 + max(R[0][1][m], R[1][0][m] - 1)\n    for i in range(1, m):\n        s = i & 1\n        B = min(B, max(L[i], m + 1 - i + max(R[0][1 - s][m - i] - s, R[1][s][m - i] - 1 + s)))\n    print(B)", "t = int(input())\nfor _ in range(t):\n    m = int(input())\n    r = [list(map(int, input().split())) for i in range(2)]\n    r[0][0] = -1\n    L = [0]\n    R = [[[0], [0]], [[0], [0]]]\n    for i in range(m):\n        s = i & 1\n        L.append(max(L[-1], 2 * (m - i) + max(r[0][i] - s, r[1][i] - 1 + s)))\n        for j in range(2):\n            for k in range(2):\n                R[j][k].append(max(R[j][k][-1], r[j][-i - 1] + i * (2 * k - 1)))\n    B = m + 1 + max(R[0][1][m], R[1][0][m] - 1)\n    for i in range(1, m):\n        s = i & 1\n        B = min(B, max(L[i], m + 1 - i + max(R[0][1 - s][m - i] - s, R[1][s][m - i] - 1 + s)))\n    print(B)", "t = int(input())\nfor _ in range(t):\n    m = int(input())\n    r = [list(map(int, input().split())) for i in range(2)]\n    r[0][0] = -1\n    L = [0]\n    R = [[[0], [0]], [[0], [0]]]\n    for i in range(m):\n        s = i & 1\n        L.append(max(L[-1], 2 * (m - i) + max(r[0][i] - s, r[1][i] - 1 + s)))\n        for j in range(2):\n            for k in range(2):\n                R[j][k].append(max(R[j][k][-1], r[j][-i - 1] + i * (2 * k - 1)))\n    B = m + 1 + max(R[0][1][m], R[1][0][m] - 1)\n    for i in range(1, m):\n        s = i & 1\n        B = min(B, max(L[i], m + 1 - i + max(R[0][1 - s][m - i] - s, R[1][s][m - i] - 1 + s)))\n    print(B)", "t = int(input())\nfor _ in range(t):\n    p = int(input())\n    r = [list(map(int, input().split())) for i in range(2)]\n    r[0][0] = -1\n    L = [0]\n    R = [[[0], [0]], [[0], [0]]]\n    for i in range(p):\n        u = i & 1\n        L.append(max(L[-1], 2 * (p - i) + max(r[0][i] - u, r[1][i] - 1 + u)))\n        for j in range(2):\n            for k in range(2):\n                R[j][k].append(max(R[j][k][-1], r[j][-i - 1] + i * (2 * k - 1)))\n    B = p + 1 + max(R[0][1][p], R[1][0][p] - 1)\n    for i in range(1, p):\n        u = i & 1\n        B = min(B, max(L[i], p + 1 - i + max(R[0][1 - u][p - i] - u, R[1][u][p - i] - 1 + u)))\n    print(B)", "t = int(input())\nfor _ in range(t):\n    m = int(input())\n    r = [list(map(int, input().split())) for i in range(2)]\n    r[0][0] = -1\n    L = [0]\n    R = [[[0], [0]], [[0], [0]]]\n    for i in range(m):\n        s = i & 1\n        L.append(max(L[-1], 2 * (m - i) + max(r[0][i] - s, r[1][i] - 1 + s)))\n        for j in range(2):\n            for k in range(2):\n                R[j][k].append(max(R[j][k][-1], r[j][-i - 1] + i * (2 * k - 1)))\n    B = m + 1 + max(R[0][1][m], R[1][0][m] - 1)\n    for i in range(1, m):\n        s = i & 1\n        B = min(B, max(L[i], m + 1 - i + max(R[0][1 - s][m - i] - s, R[1][s][m - i] - 1 + s)))\n    print(B)", "t = int(input())\nfor _ in range(t):\n    m = int(input())\n    r = [list(map(int, input().split())) for i in range(2)]\n    r[0][0] = -1\n    L = [0]\n    R = [[[0], [0]], [[0], [0]]]\n    for i in range(m):\n        s = i & 1\n        L.append(max(L[-1], 2 * (m - i) + max(r[0][i] - s, r[1][i] - 1 + s)))\n        for j in range(2):\n            for k in range(2):\n                R[j][k].append(max(R[j][k][-1], r[j][-i - 1] + i * (2 * k - 1)))\n    B = m + 1 + max(R[0][1][m], R[1][0][m] - 1)\n    for i in range(1, m):\n        s = i & 1\n        B = min(B, max(L[i], m + 1 - i + max(R[0][1 - s][m - i] - s, R[1][s][m - i] - 1 + s)))\n    print(B)", "t = int(input())\nfor _ in range(t):\n    m = int(input())\n    r = [list(map(int, input().split())) for i in range(2)]\n    r[0][0] = -1\n    L = [0]\n    R = [[[0], [0]], [[0], [0]]]\n    for i in range(m):\n        s = i & 1\n        L.append(max(L[-1], 2 * (m - i) + max(r[0][i] - s, r[1][i] - 1 + s)))\n        for j in range(2):\n            for k in range(2):\n                R[j][k].append(max(R[j][k][-1], r[j][-i - 1] + i * (2 * k - 1)))\n    B = m + 1 + max(R[0][1][m], R[1][0][m] - 1)\n    for i in range(1, m):\n        s = i & 1\n        B = min(B, max(L[i], m + 1 - i + max(R[0][1 - s][m - i] - s, R[1][s][m - i] - 1 + s)))\n    print(B)", "t = int(input())\nfor _ in range(t):\n    m = int(input())\n    r = [list(map(int, input().split())) for i in range(2)]\n    r[0][0] = -1\n    L = [0]\n    R = [[[0], [0]], [[0], [0]]]\n    for i in range(m):\n        s = i & 1\n        L.append(max(L[-1], 2 * (m - i) + max(r[0][i] - s, r[1][i] - 1 + s)))\n        for j in range(2):\n            for k in range(2):\n                R[j][k].append(max(R[j][k][-1], r[j][-i - 1] + i * (2 * k - 1)))\n    B = m + 1 + max(R[0][1][m], R[1][0][m] - 1)\n    for i in range(1, m):\n        s = i & 1\n        B = min(B, max(L[i], m + 1 - i + max(R[0][1 - s][m - i] - s, R[1][s][m - i] - 1 + s)))\n    print(B)", "t = int(input())\nfor _ in range(t):\n    m = int(input())\n    r = [list(map(int, input().split())) for i in range(2)]\n    r[0][0] = -1\n    L = [0]\n    R = [[[0], [0]], [[0], [0]]]\n    for i in range(m):\n        s = i & 1\n        L.append(max(L[-1], 2 * (m - i) + max(r[0][i] - s, r[1][i] - 1 + s)))\n        for j in range(2):\n            for k in range(2):\n                R[j][k].append(max(R[j][k][-1], r[j][-i - 1] + i * (2 * k - 1)))\n    B = m + 1 + max(R[0][1][m], R[1][0][m] - 1)\n    for i in range(1, m):\n        s = i & 1\n        B = min(B, max(L[i], m + 1 - i + max(R[0][1 - s][m - i] - s, R[1][s][m - i] - 1 + s)))\n    print(B)"]