["def pend(arr, size):\n    if size > 1:\n        left = 0\n        right = size - 1\n        while left < right:\n            if arr[left] != arr[right]:\n                size -= 2\n            else:\n                break\n            left += 1\n            right -= 1\n    print(size)\ntests = int(input())\nfor _ in range(tests):\n    size = int(input())\n    lists = list(input())\n    pend(lists, size)", "def counter():\n    elements = int(input())\n    a = input()\n    if len(a) == elements:\n        beg = 0\n        end = -1\n        for i in range(len(a) // 2):\n            if a[beg] != a[end]:\n                beg += 1\n                end -= 1\n            else:\n                if beg > 0:\n                    print(len(a[beg:end + 1]))\n                else:\n                    print(len(a))\n                break\n        if beg == len(a) // 2 and len(a) % 2 > 0:\n            print(1)\n        elif beg == len(a) // 2 and len(a) % 2 == 0:\n            print(0)\nt = int(input())\nfor i in range(t):\n    counter()", "def solve():\n    n = int(input())\n    s = input()\n    (l, r) = (0, n - 1)\n    while l <= r and s[l] != s[r]:\n        l += 1\n        r -= 1\n    print(r - l + 1)\nt = int(input())\nfor _ in range(t):\n    solve()", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    a = 0\n    for i in range(0, n // 2):\n        if s[i] != s[n - 1 - i]:\n            a += 2\n        else:\n            break\n    print(n - a)", "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    ele = 0\n    l = 0\n    r = n - 1\n    while True:\n        if l >= r:\n            break\n        if s[l] == s[r]:\n            break\n        ele += 1\n        l += 1\n        r -= 1\n    print(n - 2 * ele)", "import sys\nimport collections\nfrom math import ceil, gcd, sqrt, log\nimport bisect\nimport heapq\nINF = float('inf')\nmod = 1000000007\n\ndef solve():\n    n = int(input())\n    s = input()\n    i = 0\n    j = n - 1\n    while j > i and s[i] != s[j]:\n        i += 1\n        j -= 1\n    if i == j:\n        print(1)\n    elif i > j:\n        print(0)\n    else:\n        print(j - i + 1)\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "for t in range(int(input())):\n    n = int(input())\n    s = str(input())\n    l = 0\n    r = int(n - 1)\n    while l < r and s[l] != s[r]:\n        l += 1\n        r -= 1\n    print(r - l + 1)", "def shortestInitial(nums):\n    count = 0\n    left = 0\n    right = len(nums) - 1\n    while left < right:\n        if nums[left] != nums[right]:\n            left += 1\n            right -= 1\n            count += 2\n        else:\n            return len(nums) - count\n    return len(nums) - count\ncase = int(input())\nfor i in range(case):\n    length = input()\n    pos = input()\n    print(shortestInitial(pos))", "def main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        s = input()\n        ans = n\n        for i in range(n // 2):\n            if s[i] == '0' and s[n - 1 - i] == '1':\n                ans -= 2\n            elif s[i] == '1' and s[n - 1 - i] == '0':\n                ans -= 2\n            else:\n                break\n        print(ans)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    i = 0\n    j = n - 1\n    while i <= j and a[i] != a[j]:\n        i += 1\n        j -= 1\n    print(j - i + 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    i = 0\n    j = n - 1\n    while i < j:\n        if s[i] != s[j]:\n            i += 1\n            j -= 1\n        else:\n            break\n    print(j - i + 1)", "import sys\n\ndef in_int():\n    return int(sys.stdin.readline())\n\ndef in_str():\n    return sys.stdin.readline().rstrip()\n\ndef in_map_int():\n    return map(int, sys.stdin.readline().split())\n\ndef in_arr_int():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef in_arr_str():\n    return sys.stdin.readline().split()\n\ndef solve(n, s):\n    (l, r) = (0, n - 1)\n    while l < r:\n        if s[l] != s[r]:\n            l += 1\n            r -= 1\n        else:\n            break\n    return r - l + 1\n\ndef main():\n    t = in_int()\n    for _ in range(t):\n        n = in_int()\n        s = in_str()\n        print(solve(n, s))\nmain()", "import sys, os\nTC = True\n\ndef solve():\n    n = int(input())\n    s = input()\n    l = 0\n    r = n - 1\n    for i in range(n // 2):\n        if s[i] == '0' and s[r] == '1' or (s[i] == '1' and s[r] == '0'):\n            l += 1\n            r -= 1\n        else:\n            break\n    print(r - l + 1)\nif os.path.exists('input.txt'):\n    debug = True\n    sys.stdin = open('input.txt', 'r')\nif TC:\n    for _ in range(int(input())):\n        solve()\nelse:\n    solve()", "for _ in range(int(input())):\n    a = int(input())\n    k = a\n    s = input()\n    for i in range(a // 2):\n        if s[i] == '0' and s[a - 1 - i] == '1' or (s[i] == '1' and s[a - 1 - i] == '0'):\n            k -= 2\n        else:\n            break\n    print(k)", "def decrease(s, n):\n    (x, y) = (0, n - 1)\n    while x < y and (s[x] == '0' and s[y] == '1' or (s[x] == '1' and s[y] == '0')):\n        x += 1\n        y -= 1\n    return s[x:y + 1]\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    v = decrease(s, n)\n    print(len(v))", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    st = input()\n    l = 0\n    r = m - 1\n    total = m\n    while l < r:\n        if st[l] != st[r]:\n            total -= 2\n            l += 1\n            r -= 1\n        else:\n            break\n    print(total)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    binary = input()\n    if n == 1:\n        print(1)\n    else:\n        tira = 0\n        for i in range(n // 2):\n            if binary[i] != binary[n - 1 - i]:\n                tira += 2\n            else:\n                break\n        print(n - tira)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    operation = 0\n    for i in range(n // 2):\n        if s[i] == s[n - i - 1]:\n            break\n        operation += 2\n    print(n - operation)", "import sys\ninput = sys.stdin.readline\n\ndef solve_c():\n    answ = 0\n    n = int(input())\n    s = list(input().strip())\n    i = 0\n    j = n - 1\n    while i < j:\n        if s[i] != s[j]:\n            i += 1\n            j -= 1\n        else:\n            break\n    answ = j - i + 1\n    return answ\n\ndef main():\n    for _ in range(int(input())):\n        answ = solve_c()\n        print(answ)\nmain()", "for _ in range(int(input())):\n    length = int(input())\n    (l, r) = (0, length - 1)\n    string = input()\n    while l < r and string[l] != string[r]:\n        l += 1\n        r -= 1\n    print(r - l + 1)", "rng = int(input())\n\ndef bin_find(n, binary):\n    s = 0\n    e = n - 1\n    ctr = 0\n    while s < e:\n        if binary[s] == binary[e]:\n            break\n        ctr += 1\n        s += 1\n        e -= 1\n    print(n - ctr * 2)\nfor i in range(rng):\n    n = int(input())\n    b = input()\n    bin_find(n, b)", "def swap(list, i1, i2):\n    num = list[i1]\n    list[i1] = list[i2]\n    list[i2] = num\nfor _ in range(int(input())):\n    a = int(input())\n    b = input()\n    count = 0\n    for i in range(a // 2):\n        if b[i] != b[a - 1 - i]:\n            count += 1\n        else:\n            break\n    print(a - 2 * count)", "test = int(input())\nfor _ in range(test):\n    length = int(input())\n    binary = list(input())\n    (left, right) = (0, length - 1)\n    while left < right:\n        if binary[right] != binary[left]:\n            right -= 1\n            left += 1\n        else:\n            break\n    print(right - left + 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    m = n // 2\n    p = 0\n    for i in range(m):\n        if s[i] == '0' and s[n - 1 - i] == '1':\n            p += 2\n        elif s[i] == '1' and s[n - 1 - i] == '0':\n            p += 2\n        else:\n            break\n    print(n - p)", "def exe():\n    if n % 2 == 0:\n        s1 = s[:n // 2]\n        s2 = s[n - 1:n // 2 - 1:-1]\n        cnt = n\n        for i in range(n // 2):\n            if s1[i] == '0' and s2[i] == '1':\n                cnt -= 2\n            elif s2[i] == '0' and s1[i] == '1':\n                cnt -= 2\n            else:\n                break\n        return cnt\n    else:\n        s1 = s[:n // 2]\n        s2 = s[n - 1:n // 2:-1]\n        cnt = n\n        for i in range(n // 2):\n            if s1[i] == '0' and s2[i] == '1':\n                cnt -= 2\n            elif s2[i] == '0' and s1[i] == '1':\n                cnt -= 2\n            else:\n                break\n        return cnt\nfor i in range(int(input())):\n    n = int(input())\n    s = input()\n    print(exe())", "n = int(input())\nfor i in range(n):\n    t = int(input())\n    s = str(input())\n    ans = 0\n    for i in range((t + 1) // 2):\n        if s[i] != s[-(i + 1)]:\n            ans += 1\n        else:\n            break\n    print(t - ans * 2)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    S = input()\n    f = n - 1\n    res = n\n    for i in range(n // 2):\n        if S[i] == '1' and S[f - i] == '0':\n            res -= 2\n        elif S[i] == '0' and S[f - i] == '1':\n            res -= 2\n        else:\n            break\n    print(res)", "def shortest_string(n, s):\n    operations = 0\n    for i in range(n // 2):\n        if s[i] != s[n - i - 1]:\n            operations += 1\n        else:\n            break\n    return n - 2 * operations\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    print(shortest_string(n, s))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    p1 = 0\n    p2 = n - 1\n    while p1 < p2:\n        if s[p1] == '0' and s[p2] == '1' or (s[p1] == '1' and s[p2] == '0'):\n            p1 += 1\n            p2 -= 1\n        else:\n            break\n    print(p2 - p1 + 1)", "testcases = int(input())\nfor i in range(testcases):\n    n = int(input())\n    seq = list(input())\n    left = 0\n    right = n - 1\n    got = False\n    while left <= right:\n        if seq[left] == seq[right]:\n            print(right - left + 1)\n            got = True\n            break\n        else:\n            left += 1\n            right -= 1\n    if not got:\n        print(0)", "def pd(n, s):\n    c = n\n    for i in range(n // 2):\n        if s[i] == '0' and s[n - i - 1] == '1' or (s[i] == '1' and s[n - i - 1] == '0'):\n            c -= 2\n        else:\n            break\n    return c\nt = int(input())\na = []\nfor i in range(t):\n    n = int(input())\n    s = input()\n    a.append(pd(n, s))\nfor i in a:\n    print(i)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    c = 0\n    for i in range(n // 2):\n        if s[i] == s[n - i - 1]:\n            break\n        else:\n            c += 2\n    print(n - c)", "test = int(input())\nfor _ in range(test):\n    size = int(input())\n    string = input()\n    left_pointer = 0\n    right_pointer = size - 1\n    while left_pointer <= right_pointer:\n        if string[left_pointer] == '0' and string[right_pointer] == '1':\n            left_pointer += 1\n            right_pointer -= 1\n        elif string[left_pointer] == '1' and string[right_pointer] == '0':\n            left_pointer += 1\n            right_pointer -= 1\n        else:\n            print(right_pointer - left_pointer + 1)\n            break\n    if left_pointer > right_pointer:\n        print(0)", "def main():\n    for t in range(int(input())):\n        n = int(input())\n        s = input()\n        p1 = 0\n        p2 = n - 1\n        flag = False\n        while p1 < p2:\n            if s[p1] == s[p2]:\n                ans = p2 - p1 + 1\n                print(ans)\n                flag = True\n                break\n            p1 += 1\n            p2 -= 1\n        if not flag:\n            print(p2 - p1 + 1)\nmain()", "t = int(input())\nfor i in range(t):\n    l = int(input())\n    s = input()\n    ct = 0\n    lim = l // 2\n    res = 0\n    if l % 2 != 0:\n        res = 1\n    for i in range(0, lim):\n        pt2 = l - i - 1\n        if (s[i], s[pt2]) == ('0', '1') or (s[i], s[pt2]) == ('1', '0'):\n            pt2 -= 1\n            ct += 1\n        else:\n            res = l - 2 * ct\n            break\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    i = 0\n    j = len(s) - 1\n    while i < j:\n        if i == j:\n            break\n        if s[i] == s[j]:\n            break\n        i += 1\n        j -= 1\n    if i > j:\n        print(0)\n    elif i == j:\n        print(1)\n    else:\n        print(j - i + 1)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nt = inp()\nfor _ in range(t):\n    n = inp()\n    nums = insr()\n    (i, j) = (0, len(nums) - 1)\n    while nums[i] != nums[j] and i <= j:\n        i += 1\n        j -= 1\n    print(j - i + 1)", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    finalString = list(sys.stdin.readline().strip())\n    while finalString[0] != finalString[-1]:\n        del finalString[0]\n        del finalString[-1]\n        if len(finalString) == 0:\n            break\n    if len(finalString) == 0:\n        print(0)\n    else:\n        print(len(finalString))", "for t in range(int(input())):\n    n = int(input())\n    s = input()\n    i = 0\n    j = n - 1\n    while i < j:\n        if s[i] != s[j]:\n            i += 1\n            j -= 1\n        else:\n            break\n    print(j - i + 1)", "dd = int(input())\nfor i in range(dd):\n    ww = int(input())\n    cyma = ww\n    f = str(input())\n    kol = 0\n    if ww % 2 == 0:\n        for i in range(ww // 2):\n            if f[ww - 1] != f[kol]:\n                kol += 1\n                ww -= 1\n            else:\n                break\n    else:\n        for i in range((ww - 1) // 2):\n            if f[ww - 1] != f[kol]:\n                kol += 1\n                ww -= 1\n            else:\n                break\n    print(cyma - kol * 2)", "def solve(n, s):\n    res = n\n    count = 0\n    i = 0\n    while i < n // 2:\n        if s[i] != s[n - i - 1]:\n            count += 1\n        else:\n            break\n        i = i + 1\n    return res - 2 * count\nt = int(input().strip())\nfor _ in range(t):\n    n = int(input().strip())\n    s = input().strip()\n    print(solve(n, s))", "for i in range(int(input())):\n    a = int(input())\n    b = input()\n    c = 0\n    for j in range(a // 2):\n        if b[j] != b[-(j + 1)]:\n            c += 2\n        else:\n            break\n    print(a - c)", "n = int(input())\nans = list()\nfor i in range(n):\n    k = int(input())\n    a = k\n    curr = input()\n    for i in range(k // 2):\n        if curr[i] != curr[-1 - i]:\n            a -= 2\n        else:\n            break\n    ans.append(a)\nfor i in ans:\n    print(i)", "def fnc(a):\n    i = 0\n    while (a[i] == '0' and a[-i - 1] == '1' or (a[i] == '1' and a[-1 - i] == '0')) and 2 * i + 1 < n:\n        i = i + 1\n    return len(a) - 2 * i\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input()\n    print(fnc(a))", "t = int(input())\nwhile t:\n    n = int(input())\n    s = str(input())\n    l = len(s) - 1\n    co = 0\n    for c in range(l // 2 + 1):\n        if s[c] == s[l - c]:\n            print(l - co + 1)\n            break\n        else:\n            co += 2\n    else:\n        print(l - co + 1)\n    t -= 1", "def f(n, s):\n    k = n\n    for i in range(n // 2):\n        if s[i] != s[n - i - 1]:\n            k -= 2\n        else:\n            return k\n    return k\nfor t in range(int(input())):\n    n = int(input())\n    s = input()\n    print(f(n, s))", "for t in range(int(input())):\n    n = int(input())\n    s = input()\n    p1 = 0\n    p2 = n - 1\n    while p2 > p1 and s[p1] != s[p2]:\n        p1 += 1\n        p2 -= 1\n    print(p2 - p1 + 1)", "def appen():\n    n = int(input())\n    s = input()\n    a = int(n)\n    k = int(0)\n    p = int(n - 1)\n    while k <= p:\n        if s[k] == '0' and s[p] == '1' or (s[k] == '1' and s[p] == '0'):\n            a -= 2\n            k += 1\n            p -= 1\n        else:\n            print(a)\n            return\n    print(a)\nfor _ in range(int(input())):\n    appen()", "for i in range(int(input())):\n    s = int(input())\n    b = input()\n    c = 0\n    for i in range(s // 2):\n        if b[i] == b[s - i - 1]:\n            break\n        else:\n            c += 2\n    print(s - c)", "test = int(input())\nfor _ in range(test):\n    n = int(input())\n    binary = input()\n    if n < 2:\n        print(n)\n        continue\n    left = 0\n    right = n - 1\n    length = n\n    while left < right:\n        if binary[left] == binary[right]:\n            break\n        else:\n            length -= 2\n            left += 1\n            right -= 1\n    print(length)", "T = int(input())\nfor t in range(0, T):\n    n = int(input())\n    s = input()\n    ptr1 = 0\n    ptr2 = n - 1\n    flag = 0\n    while flag == 0 and ptr1 < ptr2:\n        if s[ptr1] != s[ptr2]:\n            ptr1 += 1\n            ptr2 -= 1\n        else:\n            flag = 1\n            break\n    print(ptr2 - ptr1 + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    j = 0\n    k = n - 1\n    while j <= k:\n        if s[j] != s[k]:\n            j += 1\n            k -= 1\n        else:\n            break\n    if j == k:\n        print(1)\n    elif j < k:\n        print(k - j + 1)\n    else:\n        print(0)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    nums = input()\n    beg = 0\n    end = n - 1\n    while beg < end:\n        if nums[beg] != nums[end]:\n            beg += 1\n            end -= 1\n        else:\n            break\n    print(end - beg + 1)", "import sys\nnum = int(sys.stdin.readline())\nfor line in range(num):\n    length = int(sys.stdin.readline())\n    string = sys.stdin.readline()\n    i = 0\n    j = length - 1\n    while True:\n        if j < i:\n            print(0)\n            break\n        if string[i] == '0' and string[j] == '1' or (string[j] == '0' and string[i] == '1'):\n            i += 1\n            j -= 1\n        else:\n            print(j - i + 1)\n            break", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    (i, j) = (0, n - 1)\n    while i < j and s[i] != s[j]:\n        n -= 2\n        i += 1\n        j -= 1\n    print(n)", "for i in range(int(input())):\n    n = int(input())\n    a = input()\n    x = n // 2\n    ans = 0\n    for i in range(x):\n        if a[i] == '0' and a[n - 1 - i] == '1' or (a[i] == '1' and a[n - 1 - i] == '0'):\n            ans += 1\n        else:\n            break\n    print(n - 2 * ans)", "for _ in range(int(input())):\n    (n, s) = (int(input()), input())\n    (l, r) = (0, n - 1)\n    while l < r:\n        if s[l] == s[r]:\n            break\n        l += 1\n        r -= 1\n    if l == r:\n        print(1)\n    elif l > r:\n        print(0)\n    else:\n        print(r - l + 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    diff = 0\n    if len(s) == 1:\n        print(1)\n    else:\n        for i in range(len(s) // 2):\n            if s[i] != s[-i - 1]:\n                diff += 1\n            else:\n                break\n        ans = len(s) - diff * 2\n        print(ans)", "def check():\n    input()\n    d = input()\n    if len(d) == 0:\n        print(0)\n        return\n    while d[0] != d[-1]:\n        d = d[1:-1]\n        if len(d) == 0:\n            print(0)\n            return\n    print(len(d))\n    return\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        check()\nmain()", "inputs_num = int(input())\nfor _ in range(inputs_num):\n    length = int(input())\n    if length == 0:\n        print(0)\n        continue\n    if length == 1:\n        input()\n        print(1)\n        continue\n    bitnum = input()\n    broke = False\n    for i in range(length // 2):\n        if bitnum[i] == bitnum[length - i - 1]:\n            broke = True\n            break\n    if not broke:\n        i += 1\n    print(length - 2 * i)", "for i in range(int(input())):\n    n = int(input())\n    a = input()\n    c = 0\n    s = n\n    for z in range(n // 2 + n % 2):\n        if a[z] == '0' and a[-1 - z] == '1' or (a[z] == '1' and a[-1 - z] == '0'):\n            s -= 2\n        else:\n            c += 1\n            print(s)\n            break\n    if c == 0:\n        print(0)", "def main():\n    t = int(input())\n    for _ in range(t):\n        res = alg()\n        print(res)\n\ndef alg():\n    n = int(input())\n    s = input()\n    res = n\n    for i in range(int(n / 2)):\n        if s[i] == '0' and s[n - i - 1] == '1' or (s[i] == '1' and s[n - i - 1] == '0'):\n            res -= 2\n        else:\n            break\n    return res\nmain()", "n = int(input())\nfor i in range(n):\n    count = 0\n    lent = int(input())\n    binr = input()\n    for i in range(lent // 2):\n        if binr[i] == '1' and binr[lent - i - 1] == '0' or (binr[i] == '0' and binr[lent - i - 1] == '1'):\n            count += 1\n        else:\n            break\n    print(lent - 2 * count)", "t = int(input())\nfor p in range(t):\n    n = int(input())\n    a = input()\n    flag = 0\n    for i in range(0, n // 2):\n        if a[i] == a[n - i - 1]:\n            flag = 1\n            print(n - 2 * i)\n            break\n    if flag == 0:\n        if n % 2 == 0:\n            print(0)\n        else:\n            print(1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    while n >= 0:\n        if n == 0:\n            print('0')\n            break\n        elif s[0] != s[-1]:\n            n -= 2\n            s = s[1:-1]\n        else:\n            print(n)\n            break", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    i = 0\n    j = n - 1\n    c = n\n    for k in range(n // 2):\n        if s[i] == '1' and s[j] == '0' or (s[i] == '0' and s[j] == '1'):\n            i += 1\n            j -= 1\n            c -= 2\n        elif i >= j:\n            break\n        else:\n            break\n    print(c)", "N = int(input())\nfor i in range(N):\n    k = int(input())\n    String = input()\n    ans = 0\n    for i in range(k // 2):\n        if String[i] != String[-1 * (i + 1)]:\n            ans += 1\n        else:\n            break\n    print(k - ans * 2)", "t = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    s = input()\n    if n % 2 == 1:\n        last = n // 2 - 1\n        min = 1\n    else:\n        last = n // 2 - 1\n        min = 0\n    c = 0\n    flag = -1\n    for i in range(0, last + 1):\n        if s[i] == '0' and s[n - i - 1] == '1':\n            c += 1\n        elif s[i] == '1' and s[n - i - 1] == '0':\n            c += 1\n        else:\n            flag = n - i - 1 - i + 1\n            break\n    if n % 2 == 1:\n        if flag == -1:\n            print(1)\n        else:\n            print(flag)\n    elif flag == -1:\n        print(0)\n    else:\n        print(flag)", "test = int(input())\nfor t in range(test):\n    sz = int(input())\n    inp = input()\n    cnt = 0\n    for i in range(0, int(sz / 2)):\n        if inp[i] == '0' and inp[sz - i - 1] == '1' or (inp[i] == '1' and inp[sz - i - 1] == '0'):\n            cnt += 2\n        else:\n            break\n    print(sz - cnt)", "for _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    l = 0\n    r = n - 1\n    ans = n\n    while l <= r:\n        if s[l] == '0' and s[r] == '1' or (s[l] == '1' and s[r] == '0'):\n            ans -= 2\n            l += 1\n            r -= 1\n        else:\n            print(ans)\n            break\n    if ans == 0:\n        print(ans)", "for s in [*open(0)][2::2]:\n    i = 0\n    j = len(s) - 2\n    while (i < j) & (s[i] != s[j]):\n        i += 1\n        j -= 1\n    print(j - i + 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    x = 0\n    for i in range(n // 2):\n        if s[i] == s[n - i - 1]:\n            x = n - 2 * i\n            break\n    if n % 2 == 1:\n        if x == 0:\n            x += 1\n    print(x)", "def PrependAndAppend(n, s):\n    (a, b) = (0, n - 1)\n    result = n\n    while a <= b:\n        if s[a] == '1' and s[b] == '0' or (s[a] == '0' and s[b] == '1'):\n            result -= 2\n            a += 1\n            b -= 1\n        else:\n            return result\n    return result\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    s = input()\n    ans = PrependAndAppend(n, s)\n    print(ans)\n    t = t - 1", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    a = list(input())\n    x = 0\n    for i in range(m // 2):\n        if a[i] == a[m - i - 1]:\n            x += m - 2 * i\n            break\n    if x == 0:\n        if m % 2 == 0:\n            print(0)\n        else:\n            print(1)\n    else:\n        print(x)", "tst = int(input())\nfor i in range(tst):\n    num = int(input())\n    s = input()\n    l = num\n    for j in range(num // 2):\n        if s[j] == '0' and s[num - j - 1] == '1':\n            l = l - 2\n        elif s[j] == '1' and s[num - j - 1] == '0':\n            l = l - 2\n        else:\n            break\n    print(l)", "cases = int(input())\nfor i in range(cases):\n    n = int(input())\n    arr = input()\n    c = n\n    if len(arr) <= 1:\n        c = -1\n        print(len(arr))\n    else:\n        for i in range(n // 2):\n            if arr[i] == '0' and arr[n - i - 1] == '1' or (arr[i] == '1' and arr[n - i - 1] == '0'):\n                c -= 2\n            else:\n                print(c)\n                c = -1\n                break\n    if c != -1:\n        print(c)", "t = int(input())\n\ndef solve():\n    n = int(input())\n    s = input()\n    nCopy = n\n    if n < 2:\n        return n\n    ans = 0\n    pointerLeft = 0\n    pointerRight = n - 1\n    while nCopy > 1:\n        if s[pointerLeft] == '1' and s[pointerRight] == '0' or (s[pointerRight] == '1' and s[pointerLeft] == '0'):\n            ans += 1\n            pointerLeft += 1\n            pointerRight -= 1\n        nCopy -= 2\n    return n - ans * 2\nfor _ in range(t):\n    print(solve())", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    s = input()\n    x = 0\n    y = n - 1\n    while x < y:\n        if s[x] != s[y]:\n            x += 1\n            y -= 1\n        else:\n            break\n    print(y - x + 1)", "for i in range(int(input())):\n    a = int(input())\n    b = input()\n    c = len(b)\n    for i in range(c):\n        if b[i] == b[c - (i + 1)]:\n            break\n        elif a == 0:\n            break\n        else:\n            a -= 2\n    print(a)", "def gopi(n, mad):\n    g = n\n    pav = []\n    pav[:0] = mad\n    for i in range(g // 2):\n        if pav[i] != pav[g - i - 1]:\n            n = n - 2\n        else:\n            return n\n    return n\nfor _ in range(int(input())):\n    n = int(input())\n    pav = input()\n    print(gopi(n, pav))", "t = int(input())\nfor i in range(t):\n    tc = int(input())\n    inp = input()\n    x = 0\n    for j in range(tc // 2):\n        if inp[j] != inp[-(j + 1)]:\n            x += 2\n        else:\n            break\n    print(tc - x)", "t = int(input())\nfor _ in range(t):\n    l = int(input())\n    res = l\n    s = input()\n    for i in range(l // 2):\n        if s[i] != s[l - 1 - i]:\n            res -= 2\n        else:\n            break\n    print(res)", "t = int(input().strip())\nfor i in range(t):\n    n = int(input().strip())\n    s = input().strip()\n    l = 0\n    r = n - 1\n    while l < r and s[l] != s[r]:\n        l += 1\n        r -= 1\n    print(n - l - (n - r - 1))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    (l, r) = (0, n - 1)\n    ans = n\n    while l <= r:\n        if s[l] == '1' and s[r] == '0' or (s[l] == '0' and s[r] == '1'):\n            ans -= 2\n            l += 1\n            r -= 1\n        else:\n            break\n    print(ans)", "a = int(input())\nfor i in range(a):\n    b = int(input())\n    s = input()\n    while len(s) > 1:\n        if s[0] != s[-1]:\n            s = s[1:-1]\n        else:\n            break\n    print(len(s))", "def prepend(n, s):\n    l = 0\n    r = n - 1\n    ct = n\n    while l <= r:\n        if s[l] == '1' and s[r] == '0' or (s[l] == '0' and s[r] == '1'):\n            ct -= 2\n            l += 1\n            r -= 1\n        else:\n            break\n    return ct\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    print(prepend(n, s))", "testcases = int(input())\nfor _ in range(testcases):\n    n = int(input())\n    s = input()\n    i = 0\n    j = n - 1\n    result = 0\n    while i <= j:\n        if s[i] == s[j]:\n            result = j - i + 1\n            break\n        i += 1\n        j -= 1\n    if result == 0 and n % 2 == 1:\n        result = 1\n    print(result)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    f = 0\n    l = -1\n    x = n\n    if n % 2 == 0:\n        for i in range(n // 2):\n            if s[i] == '0' and s[l] == '1':\n                l -= 1\n                x -= 2\n            elif s[i] == '1' and s[l] == '0':\n                l -= 1\n                x -= 2\n            else:\n                break\n    else:\n        for i in range(n // 2):\n            if s[i] == '0' and s[l] == '1':\n                l -= 1\n                x -= 2\n            elif s[i] == '1' and s[l] == '0':\n                l -= 1\n                x -= 2\n            else:\n                break\n    print(x)", "for _ in range(int(input())):\n    n = int(input())\n    s = str(input())\n    ans = n\n    for i in range(n // 2):\n        if s[i] == s[-i - 1]:\n            break\n        else:\n            ans -= 2\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    flag = False\n    for i in range(n // 2):\n        if s[i] == s[n - 1 - i]:\n            x = (n // 2 - i) * 2\n            if n % 2 == 1:\n                x += 1\n            print(x)\n            flag = True\n            break\n    if flag == False:\n        if n % 2 == 1:\n            print(1)\n        else:\n            print(0)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    p1 = 0\n    p2 = n - 1\n    while p1 < p2:\n        if s[p1] != s[p2]:\n            p1 += 1\n            p2 -= 1\n        else:\n            break\n    print(p2 - p1 + 1)", "t = int(input())\nfor _ in range(t):\n    l = int(input())\n    s = input()\n    x = s[::-1]\n    ans = 0\n    cont = 0\n    limit = 0\n    j = 0\n    if s[0] == x[0]:\n        print(l)\n    else:\n        j = l - 1\n        if l % 2 == 0:\n            limit = int(l / 2)\n        else:\n            limit = int((l - 1) / 2)\n        for i in range(limit):\n            if s[i] != s[j]:\n                cont += 1\n            else:\n                break\n            j = j - 1\n        ans = l - 2 * cont\n        print(int(l - 2 * cont))", "for j in range(int(input())):\n    n = int(input())\n    s = input()\n    c = 0\n    for i in range(n // 2):\n        if s[i] == '1' and s[n - 1 - i] == '0' or (s[i] == '0' and s[n - 1 - i] == '1'):\n            c += 2\n        else:\n            break\n    print(n - c)", "for i in range(int(input())):\n    n = int(input())\n    k = input()\n    l = []\n    for i in range(n // 2):\n        if k[i] != k[n - i - 1]:\n            l.append(n - 2 * i - 2)\n        else:\n            break\n    if len(l) == 0:\n        print(len(k))\n    else:\n        print(l[-1])", "for i in range(int(input())):\n    a = int(input())\n    b = input()\n    b = list(b)\n    c = 0\n    while b != []:\n        if b[0] == '0' and b[-1] == '1' or (b[0] == '1' and b[-1] == '0'):\n            b.remove(b[0])\n            b.pop()\n        else:\n            break\n    c = len(b)\n    print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    l = 0\n    h = len(s) - 1\n    c = 0\n    if n % 2 == 0:\n        while l < h:\n            if s[l] != s[h]:\n                l += 1\n                h -= 1\n                c += 1\n            else:\n                break\n        print(n - c * 2)\n    else:\n        while l < h:\n            if s[l] != s[h]:\n                l += 1\n                h -= 1\n                c += 1\n            else:\n                break\n        print(n - c * 2)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    m = input()\n    m = list(m)\n    while len(m) > 0:\n        if m[0] == '1' and m[-1] == '0':\n            m.pop()\n            del m[0]\n        elif m[0] == '0' and m[-1] == '1':\n            m.pop()\n            del m[0]\n        else:\n            break\n    print(len(m), end='\\n')", "t = int(input())\nwhile t:\n    n = int(input())\n    s = input()\n    if len(s) % 2 == 0:\n        c = len(s)\n        for i in range(len(s) // 2):\n            if s[i] == s[len(s) - 1 - i]:\n                c = i\n                break\n        if c == len(s):\n            print(0)\n        else:\n            print(len(s) - 2 * c)\n    else:\n        d = len(s)\n        for i in range(len(s) // 2):\n            if s[i] == s[len(s) - 1 - i]:\n                d = i\n                break\n        if d == len(s):\n            print(1)\n        else:\n            print(len(s) - 2 * d)\n    t = t - 1"]