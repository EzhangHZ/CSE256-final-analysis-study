["t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 2 == 1:\n        print(f\"1 {' '.join((f'{k + 1} {k}' for k in range(2, n + 1, 2)))}\")\n    else:\n        print(f\"{' '.join((f'{k + 1} {k}' for k in range(1, n + 1, 2)))}\")", "from itertools import permutations\nimport math\n\ndef lcm(a, b):\n    return a * b / math.gcd(a, b)\n\ndef lcm_sum(p):\n    return sum([lcm(i + 1, x) for (i, x) in enumerate(p)])\n\ndef lcm_tuple(p):\n    return [lcm(i + 1, x) for (i, x) in enumerate(p)]\n\ndef main_0():\n    best = None\n    for p in permutations(range(1, int(input()) + 1)):\n        p_sum = lcm_sum(p)\n        if best == None or p_sum > best[1]:\n            best = (p, p_sum)\n    print(' '.join(map(str, best[0])))\n\ndef main():\n    p = list(range(1, int(input()) + 1))\n    for i in range(len(p) - 2, -1, -2):\n        cur = p[i]\n        p[i] = p[i + 1]\n        p[i + 1] = cur\n    print(' '.join(map(str, p)))\nfor _ in range(int(input())):\n    main()", "from itertools import permutations\nimport math\n\ndef lcm(o, u):\n    return o * u / math.gcd(o, u)\n\ndef lcm_sum(z):\n    return sum([lcm(i + 1, x) for (i, x) in enumerate(z)])\n\ndef lcm_tuple(z):\n    return [lcm(i + 1, x) for (i, x) in enumerate(z)]\n\ndef main_0():\n    best = None\n    for z in permutations(range(1, int(input()) + 1)):\n        z_sum = lcm_sum(p)\n        if best == None or z_sum > best[1]:\n            best = (z, z_sum)\n    print(' '.join(map(str, best[0])))\n\ndef main():\n    z = list(range(1, int(input()) + 1))\n    for i in range(len(z) - 2, -1, -2):\n        cur = z[i]\n        z[i] = z[i + 1]\n        z[i + 1] = cur\n    print(' '.join(map(str, z)))\nfor _ in range(int(input())):\n    main()", "tc = int(input())\nwhile tc > 0:\n    n = int(input())\n    ans = []\n    if n % 2 == 0:\n        for i in range(1, n + 1, 2):\n            ans.append(i + 1)\n            ans.append(i)\n    else:\n        ans.append(1)\n        for i in range(2, n + 1, 2):\n            ans.append(i + 1)\n            ans.append(i)\n    print(' '.join(map(str, ans)))\n    tc -= 1", "def codeforces(n):\n    res = [0 for i in range(n)]\n    ind = n\n    while ind > 1:\n        res[ind - 1] = ind - 1\n        res[ind - 2] = ind\n        ind -= 2\n    if ind == 1:\n        res[0] = 1\n    s = ' '.join(map(str, res))\n    print(s)\nt = int(input())\nfor test in range(t):\n    n = int(input())\n    codeforces(n)", "t = int(input())\n\ndef generate_perm(n):\n    if n % 2 == 1:\n        perm = [1]\n        for index in range(1, n - 1, 2):\n            perm.extend([index + 2, index + 1])\n        return perm\n    else:\n        perm = [2]\n        for index in range(1, n - 1, 2):\n            perm.extend([index, index + 3])\n        perm.append(n - 1)\n        return perm\nfor _ in range(t):\n    n = int(input())\n    print(' '.join((str(c) for c in generate_perm(n))))", "for _ in range(int(input())):\n    n = int(input())\n    array = [] if n % 2 == 0 else [1]\n    if n % 2 == 0:\n        for num in range(1, n + 1, 2):\n            array.extend([num + 1, num])\n    else:\n        for num in range(2, n + 1, 2):\n            array.extend([num + 1, num])\n    print(' '.join(map(str, array)))", "import sys\ninput = sys.stdin.readline\n\ndef int_num():\n    return int(input())\n\ndef int_list():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef solve():\n    n = int_num()\n    ans = []\n    if n % 2 == 0:\n        for i in range(1, n + 1, 2):\n            ans.append(i + 1)\n            ans.append(i)\n    else:\n        ans.append(1)\n        for i in range(2, n + 1, 2):\n            ans.append(i + 1)\n            ans.append(i)\n    print(' '.join(map(str, ans)))\n\ndef main():\n    t = int_num()\n    while t:\n        solve()\n        t -= 1\n    return\nmain()", "def solve():\n    n = int(input())\n    result = []\n    if n % 2 == 0:\n        for i in range(1, n + 1, 2):\n            result.append(i + 1)\n            result.append(i)\n        return result\n    else:\n        for i in range(2, n + 1, 2):\n            result.append(i + 1)\n            result.append(i)\n        return [1] + result\ntestNum = int(input())\nfor i in range(testNum):\n    result = solve()\n    print(' '.join([str(i) for i in result]))", "def solution(n):\n    ans = [str(i) for i in range(1, n + 1)]\n    start = 0\n    if n % 2 == 1:\n        start = 1\n    for i in range(start, len(ans), 2):\n        (ans[i], ans[i + 1]) = (ans[i + 1], ans[i])\n    print(' '.join(ans))\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    solution(n)", "def solve():\n    n = int(input())\n    res = []\n    if n & 1:\n        res.append(1)\n        for i in range(3, n + 1, 2):\n            res.append(i)\n            res.append(i - 1)\n    else:\n        for i in range(2, n + 1, 2):\n            res.append(i)\n            res.append(i - 1)\n    print(' '.join(map(str, res)))\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2:\n        ans = [1]\n        s = 2\n    else:\n        ans = []\n        s = 1\n    for i in range(s, n + 1, 2):\n        ans.extend([i + 1, i])\n    print(' '.join(map(str, ans)))", "import sys\nfor _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 0:\n        res = [0] * n\n        x = 2\n        for i in range(0, n, 2):\n            res[i] = x\n            res[i + 1] = x - 1\n            x += 2\n    else:\n        res = [0] * n\n        res[0] = 1\n        x = 3\n        for i in range(1, n, 2):\n            res[i] = x\n            res[i + 1] = x - 1\n            x += 2\n    sys.stdout.write(' '.join(map(str, res)) + '\\n')", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    n = int(inp())\n    a = list(range(1, n + 1))\n    for i in range(n - 2, -1, -2):\n        (a[i], a[i + 1]) = (a[i + 1], a[i])\n    print(' '.join(map(str, a)))\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n % 2 == 1:\n        ar = [1]\n        for j in range(2, n, 2):\n            ar.append(j + 1)\n            ar.append(j)\n    else:\n        ar = []\n        for j in range(1, n, 2):\n            ar.append(j + 1)\n            ar.append(j)\n    print(' '.join([str(x) for x in ar]))", "import collections\nimport math\n\ndef solve():\n    n = int(input())\n    ls = []\n    if n % 2 == 0:\n        for i in range(n // 2):\n            ls += [2 * (i + 1), 2 * i + 1]\n    else:\n        ls.append(1)\n        for i in range((n - 1) // 2):\n            ls += [2 * i + 3, 2 * i + 2]\n    print(' '.join(map(str, ls)))\nt = int(input())\nfor _ in range(t):\n    solve()", "t = int(input())\nwhile t:\n    n = int(input())\n    arr = [i for i in range(1, n + 1)]\n    for i in range(n - 1, 0, -2):\n        (arr[i], arr[i - 1]) = (arr[i - 1], arr[i])\n    print(' '.join(list(map(str, arr))))\n    t -= 1", "def sol(n):\n    A = [i for i in range(1, n + 1)]\n    for i in range(n - 1, 0, -2):\n        (A[i], A[i - 1]) = (A[i - 1], A[i])\n    return ' '.join(map(str, A))\nx = int(input())\nfor _ in range(x):\n    n = int(input())\n    print(sol(n))", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    b = list(range(1, n + 1))\n    i = n - 1\n    while i >= 1:\n        (b[i], b[i - 1]) = (b[i - 1], b[i])\n        i -= 2\n    print(' '.join(map(str, b)))", "def main():\n    t = int(input())\n    while t:\n        n = int(input())\n        arr = [i for i in range(1, n + 1)]\n        for x in range(n - 1, 0, -2):\n            (arr[x], arr[x - 1]) = (str(arr[x - 1]), str(arr[x]))\n        arr[0] = str(arr[0])\n        print(' '.join(arr))\n        t -= 1\nmain()", "def main():\n    for _ in range(int(input())):\n        n = int(input())\n        arr = list(range(1, n + 1))\n        for i in range(n - 1, 0, -2):\n            (arr[i], arr[i - 1]) = (arr[i - 1], arr[i])\n        print(' '.join(map(str, arr)))\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    a = [i for i in range(1, n + 1)]\n    if n % 2 == 0:\n        i = 0\n        while i < n - 1:\n            (a[i], a[i + 1]) = (a[i + 1], a[i])\n            i += 2\n        print(' '.join(map(str, a)))\n    else:\n        a = a[1:n]\n        i = 0\n        while i < n - 1:\n            (a[i], a[i + 1]) = (a[i + 1], a[i])\n            i += 2\n        print(1, ' '.join(map(str, a)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = []\n    if n % 2 == 0:\n        for i in range(1, n + 1):\n            if i % 2 == 0:\n                arr.append(str(i - 1))\n            else:\n                arr.append(str(i + 1))\n    else:\n        arr.append(str(1))\n        for i in range(2, n + 1):\n            if i % 2 == 0:\n                arr.append(str(i + 1))\n            else:\n                arr.append(str(i - 1))\n    print(' '.join(arr))", "t = int(input())\nans = []\nfor _ in range(t):\n    n = int(input())\n    a = ''\n    if n % 2 == 0:\n        for i in range(1, n + 1, 2):\n            a += str(i + 1) + ' ' + str(i) + ' '\n    else:\n        a = '1 '\n        for i in range(2, n + 1, 2):\n            a += str(i + 1) + ' ' + str(i) + ' '\n    ans.append(a)\nfor i in ans:\n    print(i)", "t = int(input())\nfor i in range(t):\n    a = int(input())\n    if a % 2 == 1:\n        s = '1 '\n        for i in range(1, a // 2 + 1):\n            s += str(2 * i + 1) + ' ' + str(2 * i) + ' '\n    else:\n        s = ''\n        for i in range(1, a // 2 + 1):\n            s += str(2 * i) + ' ' + str(2 * i - 1) + ' '\n    print(s)", "def solution(n):\n    arr = list(range(1, n + 1))\n    for i in range(n, 0, -2):\n        if i - 2 >= 0:\n            (arr[i - 1], arr[i - 2]) = (arr[i - 2], arr[i - 1])\n    return ' '.join(map(str, arr))\nN = int(input())\nfor _ in range(N):\n    print(solution(int(input())))", "t = int(input())\nans = []\nfor e in range(t):\n    n = int(input())\n    o = list(range(1, n + 1))\n    for e in range(n % 2, n, 2):\n        (o[e], o[e + 1]) = (o[e + 1], o[e])\n    ans.append(' '.join(map(str, o)))\nprint('\\n'.join(ans))", "import sys\ninput = sys.stdin.readline\nT = int(input())\nwhile T:\n    n = int(input())\n    ans = []\n    if n % 2 == 0:\n        for i in range(n // 2):\n            ans.append(2 * i + 2)\n            ans.append(2 * i + 1)\n    else:\n        ans.append(1)\n        for i in range(n // 2):\n            ans.append(2 * i + 3)\n            ans.append(2 * i + 2)\n    print(' '.join(map(str, ans)))\n    T -= 1", "def fun(val):\n    arr = []\n    for i in range(val):\n        arr.append(str(i + 1))\n    if val % 2 == 0:\n        for i in range(0, val, 2):\n            (arr[i], arr[i + 1]) = (arr[i + 1], arr[i])\n    else:\n        for i in range(1, val, 2):\n            (arr[i], arr[i + 1]) = (arr[i + 1], arr[i])\n    return arr\nn = int(input())\narr = []\nfor i in range(n):\n    arr.append(int(input()))\nfor val in arr:\n    if val == 1:\n        print('1')\n    else:\n        print(' '.join(fun(val)))", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    rli = ''\n    if m % 2 == 0:\n        for k in range(m // 2):\n            rli = rli + ' {0} {1}'.format(2 * k + 2, 2 * k + 1)\n        rli = rli[1:]\n    else:\n        for k in range(m // 2):\n            rli = rli + ' {0} {1}'.format(2 * k + 3, 2 * k + 2)\n        rli = '1' + rli\n    print(rli)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [str(i) for i in range(1, n + 1)]\n    if n % 2 == 0:\n        for i in range(0, n, 2):\n            (a[i], a[i + 1]) = (a[i + 1], a[i])\n    else:\n        for i in range(1, n, 2):\n            (a[i], a[i + 1]) = (a[i + 1], a[i])\n    print(' '.join(a))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(range(1, n + 1))\n    if n % 2 == 0:\n        for i in range(0, len(l), 2):\n            temp = l[i]\n            l[i] = l[i + 1]\n            l[i + 1] = temp\n    else:\n        for i in range(1, len(l), 2):\n            temp = l[i]\n            l[i] = l[i + 1]\n            l[i + 1] = temp\n    print(' '.join(map(str, l)))", "for _ in range(int(input())):\n    n = int(input())\n    temp = [x for x in range(1, n + 1)]\n    if n % 2 == 0:\n        for j in range(0, n - 1, 2):\n            (temp[j], temp[j + 1]) = (temp[j + 1], temp[j])\n    else:\n        for j in range(n - 1, 1, -2):\n            (temp[j], temp[j - 1]) = (temp[j - 1], temp[j])\n    temp = ' '.join(list(map(str, temp)))\n    print(temp)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    res = [x for x in range(n)]\n    for i in range(n - 1, -1, -2):\n        if i > 0:\n            res[i] = i - 1\n            res[i - 1] = i\n    print(' '.join((str(x + 1) for x in res)))", "t = int(input())\nfor i in range(t):\n    array = []\n    n = int(input())\n    if n % 2 == 0:\n        for i in range(1, n + 1, 2):\n            array.append(i + 1)\n            array.append(i)\n        print(' '.join((str(x) for x in array)))\n    if n % 2 == 1:\n        array.append(1)\n        for i in range(2, n + 1, 2):\n            array.append(i + 1)\n            array.append(i)\n        print(' '.join((str(x) for x in array)))", "from re import A\nfor _ in range(int(input())):\n    n = int(input())\n    p = [0 for _ in range(n)]\n    if n % 2 == 1:\n        p[0] = 1\n        for i in range(1, n, 2):\n            p[i] = i + 2\n            p[i + 1] = i + 1\n    else:\n        for i in range(0, n, 2):\n            p[i] = i + 2\n            p[i + 1] = i + 1\n    print(' '.join(list(map(str, p))))", "t = int(input())\nend_mprint = []\nfor i in range(0, t):\n    n = int(input())\n    end_print = []\n    if n % 2 == 1:\n        a = 1\n        end_print.append(1)\n        for i in range(1, (n + 1) // 2):\n            end_print.append(a + 2)\n            a += 1\n            end_print.append(a)\n            a += 1\n    else:\n        a = 0\n        for i in range(0, n // 2):\n            end_print.append(a + 2)\n            a += 1\n            end_print.append(a)\n            a += 1\n    end_text_1 = str(end_print)\n    end_text_2 = end_text_1.replace('[', '')\n    end_text_3 = end_text_2.replace(']', '')\n    end_text_4 = end_text_3.replace(',', '')\n    end_mprint.append(end_text_4)\nfor i in range(0, t):\n    print(end_mprint[i])", "t = int(input())\nresult = []\nfor i in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        ch = ''\n        init = 1\n    else:\n        ch = '1 '\n        init = 2\n    for j in range(init, n + 1, 2):\n        ch += str(j + 1) + ' ' + str(j) + ' '\n    result.append(ch)\nfor i in result:\n    print(i)", "x = int(input())\nfor _ in range(x):\n    n = int(input())\n    arr = [str(i + 1) for i in range(n)]\n    for i in range(n - 1, 0, -2):\n        (arr[i], arr[i - 1]) = (arr[i - 1], arr[i])\n    arr = ' '.join(arr)\n    print(arr)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = []\n    if n % 2 == 0:\n        for j in range(1, n + 1):\n            if j % 2 != 0:\n                l.append(str(j + 1))\n            else:\n                l.append(str(j - 1))\n    else:\n        l.append(str(1))\n        for j in range(2, n + 1):\n            if j % 2 == 0:\n                l.append(str(j + 1))\n            else:\n                l.append(str(j - 1))\n    print(' '.join(l))", "def if_even(i, s):\n    if i % 2 == 0 or i == 0:\n        s.append(i + 2)\n    elif i % 2 == 1:\n        s.append(i)\n\ndef if_odd(i, s):\n    if i == 0:\n        s.append(1)\n    elif i % 2 == 0:\n        s.append(i)\n    elif i % 2 == 1:\n        s.append(i + 2)\ncases = int(input())\nfor _ in range(cases):\n    s = []\n    n = int(input())\n    for i in range(0, n):\n        if n % 2 == 0:\n            if_even(i, s)\n        elif n % 2 == 1:\n            if_odd(i, s)\n    print(' '.join(map(str, s)))", "for i in range(int(input())):\n    n = int(input())\n    if n % 2 != 0:\n        a = [1]\n        for i in range(2, n + 1):\n            if i % 2 == 0:\n                a += [i + 1]\n                a += [i]\n        print(' '.join(list(map(str, a))))\n    else:\n        a = []\n        for i in range(1, n + 1):\n            if i % 2 != 0:\n                a += [i + 1]\n                a += [i]\n        print(' '.join(list(map(str, a))))", "trials = int(input())\nanswer_list = []\nfor x in range(trials):\n    s = int(input())\n    ans = '2'\n    even = s % 2\n    u = 0\n    if even == 1:\n        ans = '1'\n        u = 1\n    for d in range(2, s + 1):\n        if even == 0:\n            if d % 2 == 1:\n                ans += ' ' + str(d + 1)\n            else:\n                ans += ' ' + str(d - 1)\n        elif d % 2 == 0:\n            ans += ' ' + str(d + 1)\n        else:\n            ans += ' ' + str(d - 1)\n    answer_list.append(ans)\nfor g in answer_list:\n    print(g)", "def ans(n):\n    p = []\n    if n % 2 == 0:\n        i = 1\n        j = 2\n        k = 1\n        while k <= n:\n            if k % 2 != 0:\n                p.append(j)\n                j = j + 2\n            else:\n                p.append(i)\n                i = i + 2\n            k += 1\n        return p\n    else:\n        p.append(1)\n        i = 3\n        j = 2\n        k = 2\n        while k <= n:\n            if k % 2 == 0:\n                p.append(i)\n                i = i + 2\n            else:\n                p.append(j)\n                j = j + 2\n            k += 1\n        return p\nt = int(input())\nr = []\nfor i in range(t):\n    n = int(input())\n    r.append(ans(n))\nfor i in range(t):\n    print(' '.join(map(str, r[i])))", "q = int(input())\nfor w in range(q):\n    n = int(input())\n    A = [0] * n\n    if n % 2 == 0:\n        for i in range(n):\n            if i % 2 == 0:\n                A[i] = i + 2\n            else:\n                A[i] = i\n    else:\n        A = [0] * n\n        A[0] = 1\n        for i in range(1, n):\n            if i % 2 == 1:\n                A[i] = i + 2\n            else:\n                A[i] = i\n    for i in range(n):\n        A[i] = str(A[i])\n    s = ' '.join(A)\n    print(s)", "for _ in range(int(input())):\n    nu = int(input())\n    num = list(range(1, nu + 1))\n    if nu % 2 == 0:\n        thing = list(reversed(range(0, nu, 2)))\n    else:\n        thing = list(reversed(range(1, nu - 1, 2)))\n    for i in thing:\n        (num[i], num[i + 1]) = (num[i + 1], num[i])\n    print(' '.join([str(x) for x in num]))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    L = []\n    for i in range(1, n + 1):\n        L.append(i)\n    if n % 2 == 0:\n        i = 0\n        while i < n:\n            (L[i], L[i + 1]) = (L[i + 1], L[i])\n            i += 2\n    else:\n        i = 1\n        while i < n:\n            (L[i], L[i + 1]) = (L[i + 1], L[i])\n            i += 2\n    print(' '.join(map(str, L)))", "p = int(input())\nlst = []\nfor j in range(p):\n    n = int(input())\n    for i in range(n):\n        if n % 2 == 0:\n            if i == 0:\n                lst.append(2)\n            elif i % 2 == 0:\n                lst.append(i + 2)\n            else:\n                lst.append(i)\n        elif i == 0:\n            lst.append(1)\n        elif i % 2 == 0:\n            lst.append(i)\n        else:\n            lst.append(i + 2)\n    print(' '.join((str(x) for x in lst)))\n    lst = []", "k = int(input())\nfor x in range(k):\n    firstline = int(input())\n    if firstline == 1:\n        print(1)\n        continue\n    if firstline == 2:\n        print('2 1')\n        continue\n    if firstline % 2 == 1:\n        intermediate = (firstline + 1) // 2\n        oddlist = [x * 2 + 1 for x in range(1, intermediate)]\n        evenlist = [x * 2 for x in range(1, intermediate)]\n        outcome = list((list(y) for y in zip(oddlist, evenlist)))\n        flat = '1 ' + ' '.join([str(item) for x in outcome for item in x])\n        print(flat)\n    else:\n        intermediate = firstline // 2\n        oddlist = [x * 2 - 1 for x in range(1, intermediate + 1)]\n        evenlist = [x * 2 for x in range(1, intermediate + 1)]\n        outcome = list((list(y) for y in zip(evenlist, oddlist)))\n        flat = ' '.join([str(item) for x in outcome for item in x])\n        print(flat)", "t = int(input())\nfor testcases in range(t):\n    n = int(input())\n    res = ''\n    i = 1\n    if n % 2 == 0:\n        while i <= n:\n            if i % 2 == 0:\n                res += f'{i - 1} '\n            else:\n                res += f'{i + 1} '\n            i += 1\n    else:\n        while i <= n:\n            if i == 1:\n                res = res + '1 '\n            elif i % 2 == 0:\n                res += f'{i + 1} '\n            else:\n                res += f'{i - 1} '\n            i += 1\n    print(res)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(range(1, n + 1))\n    delta = n % 2\n    for i in range(n // 2):\n        low = delta + i * 2\n        high = low + 1\n        (arr[low], arr[high]) = (arr[high], arr[low])\n    print(' '.join([str(i) for i in arr]))", "def solve():\n    n = int(input())\n    for _ in range(n):\n        v = int(input())\n        rarr = [i + 1 for i in range(v)]\n        si = 1\n        if v % 2:\n            si = 2\n        for i in range(si, v, 2):\n            rarr[i] -= 1\n            rarr[i - 1] += 1\n        printVal(rarr)\n\ndef printVal(arr):\n    s = ''\n    for val in arr:\n        s += str(val)\n        s += ' '\n    s = s[0:len(s) - 1]\n    print(s)\nsolve()", "case = int(input())\nfor i in range(case):\n    n = int(input())\n    ans = []\n    for j in range(n):\n        ans.append(j + 1)\n    x = n // 2\n    if n == 1:\n        print('1')\n    elif n == 2:\n        print('2 1')\n    elif n % 2 == 0:\n        for k in range(x):\n            (ans[2 * k], ans[2 * k + 1]) = (str(ans[2 * k + 1]), str(ans[2 * k]))\n        print(' '.join(ans))\n    else:\n        for k in range(x):\n            ans[0] = str(ans[0])\n            (ans[2 * k + 1], ans[2 * k + 2]) = (str(ans[2 * k + 2]), str(ans[2 * k + 1]))\n        print(' '.join(ans))", "import sys\nimport heapq\nfrom math import log10, floor, pow\nfrom collections import defaultdict, deque\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\ntests = inp()\nfor test in range(tests):\n    n = inp()\n    lt = [x for x in range(1, n + 1)]\n    for i in range(len(lt) - 1, 0, -2):\n        (lt[i], lt[i - 1]) = (lt[i - 1], lt[i])\n    ans = ''\n    for i in lt:\n        ans += str(i) + ' '\n    print(ans[:-1])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(range(1, n + 1))\n    start = n % 2\n    point = start\n    while point < n:\n        arr[point] = arr[point] + arr[point + 1]\n        arr[point + 1] = arr[point] - arr[point + 1]\n        arr[point] = arr[point] - arr[point + 1]\n        point += 2\n    print(' '.join((str(i) for i in arr)))", "for t in range(int(input())):\n    n = int(input())\n    a = [i for i in range(1, n + 1)]\n    for i in range(n // 2):\n        (a[n - i * 2 - 1], a[n - i * 2 - 2]) = (a[n - i * 2 - 2], a[n - i * 2 - 1])\n    print(' '.join([str(i) for i in a]))", "for _ in range(int(input())):\n    a = int(input())\n    t = []\n    if a % 2 == 0:\n        for i in range(1, a + 1, 2):\n            t.append(i + 1)\n            t.append(i)\n    elif a % 2 == 1:\n        t = [1]\n        for zzz in range(2, a + 1, 2):\n            t.append(zzz + 1)\n            t.append(zzz)\n    ans = ''\n    for z in t:\n        ans += str(z) + ' '\n    print(ans)", "num_inp = lambda : int(input())\narr_inp = lambda : list(map(int, input().split()))\nsp_inp = lambda : map(int, input().split())\nstr_inp = lambda : input()\nt = num_inp()\nfor _ in range(t):\n    n = num_inp()\n    if n % 2 == 0:\n        for i in range(1, n + 1, 2):\n            print(f'{i + 1} {i}', end=' ')\n    else:\n        print(1, end=' ')\n        for i in range(2, n + 1, 2):\n            print(f'{i + 1} {i}', end=' ')\n    print()", "import sys\nsys.setrecursionlimit(1000000000)\nfrom collections import defaultdict, deque\nfrom functools import lru_cache\nfrom bisect import bisect_left, bisect_right, insort_right, insort_left\nimport heapq\nfrom itertools import accumulate\nfor _ in range(int(input())):\n    n = int(input())\n    nums = list(range(1, n + 1))\n    for i in range(n - 1, 0, -2):\n        (nums[i], nums[i - 1]) = (nums[i - 1], nums[i])\n    print(' '.join((str(i) for i in nums)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    h = list(range(1, n + 1))\n    if n % 2 == 0:\n        for j in range(0, n, 2):\n            p = h[j]\n            h[j] = h[j + 1]\n            h[j + 1] = p\n        re = ''\n        for j in range(n):\n            re += str(h[j]) + ' '\n        print(re)\n    else:\n        for j in range(1, n, 2):\n            p = h[j]\n            h[j] = h[j + 1]\n            h[j + 1] = p\n        re = ''\n        for j in range(n):\n            re += str(h[j]) + ' '\n        print(re)", "for _ in range(int(input())):\n    n = int(input())\n    A = []\n    B = []\n    s = ''\n    for i in range(1, n + 1):\n        A.append(i)\n    for j in range(len(A) - 1, 0, -2):\n        B.append(A[j - 1])\n        B.append(A[j])\n    if 1 not in B:\n        B.append(1)\n    B = B[::-1]\n    for ele in B:\n        s += str(ele) + ' '\n    print(s)", "class Solution:\n\n    def permute(self, n):\n        isOdd = n % 2 == 1\n        if n == 1:\n            return '1'\n        odd = [n for n in range(3, n + 1) if n % 2 == 1]\n        even = [n for n in range(2, n + 1) if n % 2 == 0]\n        if isOdd:\n            even = [1] + even\n        else:\n            odd = [1] + odd\n        res = []\n        for i in range(max(len(odd), len(even))):\n            if i < len(even):\n                res.append(str(even[i]))\n            if i < len(odd):\n                res.append(str(odd[i]))\n        return ' '.join(list(map(str, res)))\nt = int(input())\nrs = []\nfor _ in range(t):\n    n = int(input())\n    rs.append(n)\nsol = Solution()\nfor n in rs:\n    print(sol.permute(n))", "import sys\ninput = sys.stdin.readline\nM = int(1000000000.0) + 7\n\ndef solve():\n    n = int(input())\n    ans = []\n    i = 1\n    if n % 2 == 1:\n        ans.append(1)\n        i = 2\n    while i < n:\n        ans.append(i + 1)\n        ans.append(i)\n        i += 2\n    return ans\nfor _ in range(int(input())):\n    print(*solve())", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    s = [i for i in range(1, n + 1)]\n    i = len(s) - 1\n    while i >= 1:\n        (s[i], s[i - 1]) = (s[i - 1], s[i])\n        i -= 2\n    ans = ''\n    for i in s:\n        ans += str(i)\n        ans += ' '\n    print(ans[:-1])", "tests = int(input())\nwhile tests > 0:\n    tests -= 1\n    n = int(input())\n    p = []\n    out = ''\n    a = True\n    aa = []\n    b = True\n    out1 = '1 '\n    odd = 3\n    evenn = 2\n    oddn = 3\n    odd = True\n    z = 1\n    if n % 2 == 1:\n        while z < n:\n            if odd:\n                out1 += str(oddn) + ' '\n                oddn += 2\n                odd = False\n            else:\n                out1 += str(evenn) + ' '\n                evenn += 2\n                odd = True\n            z += 1\n    else:\n        out1 = '2 1 '\n        oddn = 3\n        evenn = 4\n        odd = False\n        while z < n - 1:\n            if odd:\n                out1 += str(oddn) + ' '\n                oddn += 2\n                odd = False\n            else:\n                out1 += str(evenn) + ' '\n                evenn += 2\n                odd = True\n            z += 1\n    print(out1)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    ans = []\n    for i in range(n, 1, -2):\n        ans.append(i - 1)\n        ans.append(i)\n    if n % 2:\n        ans.append(1)\n    return ans[::-1]\nfor _ in range(int(input())):\n    print(*solve())", "for num in [*map(int, open(0))][1:]:\n    a1 = [1] * num\n    for i in range(num, 1, -2):\n        a1[i - 2:i] = (i, i - 1)\n    print(*a1)", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 0:\n        for i in range(1, n + 1, 2):\n            print(str(i + 1) + ' ' + str(i) + ' ', end='')\n    else:\n        print('1 ', end='')\n        for i in range(2, n + 1, 2):\n            print(str(i + 1) + ' ' + str(i) + ' ', end='')\n    print()", "T = int(input())\nq = []\nfor i in range(T):\n    nb = int(input())\n    q.append(nb)\n\ndef solve(nb):\n    start = 1\n    if nb & 1:\n        print(1, end=' ')\n        start += 1\n    for i in range(start, nb + 1, 2):\n        print(i + 1, i, sep=' ', end=' ')\n    print()\nfor nb in q:\n    solve(nb)", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    if n % 2 == 0:\n        for i in range(1, n // 2 + 1):\n            l.append(2 * i)\n            l.append(2 * i - 1)\n    else:\n        l.append(1)\n        for i in range(1, n // 2 + 1):\n            l.append(2 * i + 1)\n            l.append(2 * i)\n    print(*l)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(1)\n        continue\n    if n == 2:\n        print('2 1')\n        continue\n    a = [i + 1 for i in range(n)]\n    b = []\n    if n % 2 == 0:\n        for i in range(1, n, 2):\n            b.append(i + 1)\n            b.append(i)\n        print(*b, sep=' ')\n        continue\n    b = [1]\n    for i in range(2, n, 2):\n        b.append(i + 1)\n        b.append(i)\n    print(*b, sep=' ')", "for _ in range(int(input())):\n    n = int(input())\n    if n & 1:\n        print(1, end=' ')\n        for i in range(2, n + 1, 2):\n            print(i + 1, i, end=' ')\n        print()\n    else:\n        for i in range(1, n + 1, 2):\n            print(i + 1, i, end=' ')\n        print()", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    b = list()\n    if n % 2 == 0:\n        for i in range(1, n + 1, 2):\n            b.append(i + 1)\n            b.append(i)\n    else:\n        b.append(1)\n        for i in range(2, n + 1, 2):\n            b.append(i + 1)\n            b.append(i)\n    print(*b, sep=' ')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(range(0, n + 1))\n    if n % 2:\n        for x in range(1, n + 1, 2):\n            arr[x] = max(x - 1, 1)\n        for x in range(2, n + 1, 2):\n            arr[x] = x + 1\n    else:\n        for x in range(1, n + 1, 2):\n            arr[x] = x + 1\n        for x in range(2, n + 1, 2):\n            arr[x] = x - 1\n    print(*arr[1:], sep=' ')", "for _ in range(int(input())):\n    n = int(input())\n    a = [i for i in range(1, n + 1)]\n    for i in range(n - 2, -1, -2):\n        (a[i], a[i + 1]) = (a[i + 1], a[i])\n    print(*a)", "def solve():\n    n = int(input())\n    k = 1\n    ans = []\n    if n % 2 == 1:\n        ans.append(k)\n        k += 1\n    for i in range(n // 2):\n        ans.append(k + 1)\n        ans.append(k)\n        k += 2\n    print(*ans)\nfor i in range(int(input())):\n    solve()", "testcase = int(input())\nfor i in range(testcase):\n    n = int(input())\n    sum = 0\n    if n % 2 == 0:\n        for i in range(0, n, 2):\n            print(i + 2, i + 1, sep=' ', end=' ')\n    else:\n        print(1, end=' ')\n        for i in range(0, n - 1, 2):\n            print(i + 3, i + 2, sep=' ', end=' ')\n    print()", "def solve():\n    n = int(input())\n    ls = []\n    for i in range(1, n + 1):\n        ls.append(i)\n    for i in range(n % 2, n, 2):\n        (ls[i], ls[i + 1]) = (ls[i + 1], ls[i])\n    print(*ls)\nfor i in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    a = []\n    if n % 2 == 0:\n        for i in range(0, n, 2):\n            a.append(i + 2)\n            a.append(i + 1)\n    else:\n        a.append(1)\n        for i in range(1, n, 2):\n            a.append(i + 2)\n            a.append(i + 1)\n    print(*a)", "for _ in range(int(input())):\n    x = int(input())\n    if not x % 2:\n        print(*[n + 1 if n % 2 else n - 1 for n in range(1, x + 1)])\n    else:\n        print(*[1] + [n - 1 if n % 2 else n + 1 for n in range(2, x + 1)])", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    if n % 2 == 0:\n        for i in range(1, n + 1, 2):\n            l.append(i + 1)\n            l.append(i)\n    else:\n        l.append(1)\n        for j in range(2, n + 1, 2):\n            l.append(j + 1)\n            l.append(j)\n    print(*l)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        for j in range(1, n + 1, 2):\n            print(j + 1, j, end=' ')\n    else:\n        print(1, end=' ')\n        for j in range(2, n + 1):\n            if j % 2 == 0:\n                print(j + 1, end=' ')\n            else:\n                print(j - 1, end=' ')\n    print()", "def main():\n    for t in range(int(input())):\n        n = int(input())\n        ans = []\n        if n % 2 == 0:\n            for i in range(2, n + 1, 2):\n                ans.append(i)\n                ans.append(i - 1)\n        else:\n            ans.append(1)\n            for i in range(3, n + 1, 2):\n                ans.append(i)\n                ans.append(i - 1)\n        print(*ans)\nmain()", "def solution(n):\n    arr = []\n    if n % 2 == 0:\n        for i in range(1, n + 1):\n            if i % 2 == 0:\n                arr.append(i - 1)\n            else:\n                arr.append(i + 1)\n    else:\n        arr.append(1)\n        for i in range(2, n + 1):\n            if i % 2 == 0:\n                arr.append(i + 1)\n            else:\n                arr.append(i - 1)\n    return arr\nt = int(input())\nwhile t:\n    n = int(input())\n    arr = solution(n)\n    print(*arr)\n    t -= 1", "from collections import Counter, defaultdict\nfrom heapq import heapify, heappop, heappush\nreps = int(input())\nfor _ in range(reps):\n    n = int(input())\n    if n % 2:\n        arr = [1]\n        for (a, b) in zip(range(3, n + 1, 2), range(2, n, 2)):\n            arr.append(a)\n            arr.append(b)\n    else:\n        arr = []\n        for (a, b) in zip(range(2, n + 1, 2), range(1, n, 2)):\n            arr.append(a)\n            arr.append(b)\n    print(*arr)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [i for i in range(1, n + 1)]\n    for i in range(n - 1, 0, -2):\n        (arr[i], arr[i - 1]) = (arr[i - 1], arr[i])\n    print(*arr)", "for n in [*map(int, open(0))][1:]:\n    a = [1] * n\n    for i in range(n, 1, -2):\n        a[i - 2:i] = (i, i - 1)\n    print(*a)", "for _ in range(int(input())):\n    num = int(input())\n    re = []\n    if num % 2:\n        re.append(1)\n        for i in range(2, num + 1, 2):\n            re.append(i + 1)\n            re.append(i)\n    else:\n        for i in range(1, num + 1, 2):\n            re.append(i + 1)\n            re.append(i)\n    print(*re)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        for i in range(2, n + 1, 2):\n            print(i, i - 1, end=' ')\n        print()\n    else:\n        print(1, end=' ')\n        for i in range(3, n + 1, 2):\n            print(i, i - 1, end=' ')\n        print()", "def slave():\n    n = int(input())\n    if n % 2 == 0:\n        for i in range(1, n + 1, 2):\n            print(i + 1, i, end=' ')\n        print()\n    else:\n        print('1', end=' ')\n        for i in range(2, n + 1, 2):\n            print(i + 1, i, end=' ')\n        print()\nt = int(input())\nfor i in range(t):\n    slave()", "for i in range(int(input())):\n    n = int(input())\n    k = []\n    if n % 2 == 0:\n        for i in range(2, n + 1, 2):\n            k.append(i)\n            k.append(i - 1)\n    else:\n        k = [1]\n        if n == 1:\n            pass\n        for i in range(3, n + 1, 2):\n            k.append(i)\n            k.append(i - 1)\n    print(*k)", "def sol():\n    n = int(input())\n    ans = []\n    if n % 2 == 0:\n        for i in range(n, 0, -1):\n            if i % 2 == 0:\n                ans.append(i - 1)\n            else:\n                ans.append(i + 1)\n    else:\n        for i in range(n, 1, -1):\n            if i == n:\n                ans.append(i - 1)\n            elif i % 2 == 0:\n                ans.append(i + 1)\n            else:\n                ans.append(i - 1)\n        ans.append(1)\n    print(*ans[::-1], sep=' ')\nfor _ in range(int(input())):\n    sol()", "for t in range(int(input())):\n    n = int(input())\n    a = []\n    if n & 1:\n        a.append(1)\n        for (x, y) in zip(range(2, n + 1, 2), range(3, n + 1, 2)):\n            a.extend([y, x])\n    else:\n        for (x, y) in zip(range(1, n + 1, 2), range(2, n + 1, 2)):\n            a.extend([y, x])\n    print(*a)", "import sys\nt = int(sys.stdin.readline())\ninfo = []\nfor i in range(t):\n    info.append(int(sys.stdin.readline()))\nres = []\n\ndef nod(x, y):\n    a = min(x, y)\n    for i in range(a + 1, 0, -1):\n        if x % i == 0 and y % i == 0:\n            return i\nfor i in range(t):\n    arr = range(1, info[i] + 1)\n    ans = [0] * info[i]\n    if info[i] % 2 == 1:\n        ans[0] = 1\n        for i in range(1, info[i]):\n            if i % 2 == 1:\n                ans[i] = arr[i + 1]\n            else:\n                ans[i] = arr[i - 1]\n    else:\n        for i in range(1, info[i], 2):\n            (ans[i], ans[i - 1]) = (arr[i - 1], arr[i])\n    res.append(ans)\nfor i in res:\n    for k in i:\n        sys.stdout.write(str(k) + ' ')\n    sys.stdout.write('\\n')", "for n in [*map(int, open(0))][1:]:\n    (*a,) = range(1, n + 1)\n    for i in range(n - 2, -1, -2):\n        a[i:i + 2] = (a[i + 1], a[i])\n    print(*a)", "t = int(input())\n\ndef swap(nums):\n    for i in range(0, len(nums) - len(nums) % 2, 2):\n        (nums[i], nums[i + 1]) = (nums[i + 1], nums[i])\n    return nums\nfor _ in range(t):\n    n = int(input())\n    a = [i for i in range(1, n + 1)]\n    if n % 2 == 0:\n        print(*swap(a))\n    else:\n        a.sort(reverse=True)\n        b = swap(a)\n        print(*reversed(b))", "for n in [*map(int, open(0))][1:]:\n    a = [1] * n\n    for i in range(n, 1, -2):\n        a[i - 2:i] = (i, i - 1)\n    print(*a)"]