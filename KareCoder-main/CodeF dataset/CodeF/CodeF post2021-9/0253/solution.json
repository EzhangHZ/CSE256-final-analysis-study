["import sys\ninput = sys.stdin.readline\n\ndef solve():\n    N = int(input())\n    A = list(map(int, input().split()))\n    if N == 1:\n        print(A[0])\n    else:\n        A.sort()\n        print(max(A[0], max((y - x for (x, y) in zip(A, A[1:])))))\nfor _ in range(int(input())):\n    solve()", "for s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    print(max((y - x for (x, y) in zip([0] + a, a))))", "for s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    print(max((y - x for (x, y) in zip([0] + a, a))))", "for s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    print(max((y - x for (x, y) in zip([0] + a, a))))", "for s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    print(max((y - x for (x, y) in zip([0] + a, a))))", "for s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    print(max((y - x for (x, y) in zip([0] + a, a))))", "for s in [*open(0)][2::2]:\n    a = (0, *sorted(map(int, s.split())))\n    print(max((y - x for (x, y) in zip(a, a[1:]))))", "for s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    print(max((y - x for (x, y) in zip([0] + a, a))))", "for s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    print(max((y - x for (x, y) in zip([0] + a, a))))", "for s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    print(max((y - x for (x, y) in zip([0] + a, a))))", "for s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    print(max((y - x for (x, y) in zip([0] + a, a))))", "import sys\n\ndef function(n, arr):\n    arr = sorted(arr)\n    maximum = arr[0]\n    for i in range(1, n):\n        maximum = max(maximum, arr[i] - arr[i - 1])\n    return maximum\n\ndef main():\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n = int(sys.stdin.readline())\n        arr = list(map(int, sys.stdin.readline().strip().split()))\n        res = function(n, arr)\n        print(res)\nmain()", "def solve(arr):\n    if len(arr) == 1:\n        return arr[0]\n    arr.sort()\n    max = min(arr)\n    for i in range(len(arr) - 1):\n        if arr[i + 1] - arr[i] > max:\n            max = arr[i + 1] - arr[i]\n    return max\nn = int(input())\nout = []\nfor i in range(n):\n    num = int(input())\n    arr = input().split(' ')\n    arr = [int(i) for i in arr]\n    out.append(solve(arr))\nfor i in out:\n    print(i)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if n == 1:\n        ans = a[0]\n    else:\n        z = [0] * n\n        z[0] = a[0]\n        for i in range(1, n):\n            z[i] = a[i] - a[i - 1]\n        ans = max(z)\n    print(ans)\n    t -= 1", "def function(l):\n    out = []\n    for case in l:\n        case.sort()\n        temp = [case[0]]\n        if len(case) != 1:\n            for i in range(1, len(case)):\n                e = case[i] - case[i - 1]\n                temp.append(e)\n        out.append(str(max(temp)))\n    return '\\n'.join(out)\nt = int(input())\nl = []\nfor i in range(t):\n    n = input()\n    e = list(map(int, input().split()))\n    l.append(e)\nans = function(l)\nprint(ans)", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    a = [int(x) for x in sys.stdin.readline().split()]\n    if len(a) == 1:\n        print(a[0])\n        continue\n    a.sort()\n    m = a[0]\n    for i in range(1, len(a)):\n        m = max(m, a[i] - a[i - 1])\n    print(m)", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    l = list(map(int, sys.stdin.readline().split()))\n    if n <= 1:\n        print(l[0])\n    else:\n        l.sort()\n        s = l[0]\n        v = [l[0]]\n        for i in range(1, n):\n            v.append(l[i] - s)\n            s = s + v[i]\n        print(max(v))", "num_inp = lambda : int(input())\narr_inp = lambda : list(map(int, input().split()))\nsp_inp = lambda : map(int, input().split())\nstr_inp = lambda : input()\nfor s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    print(max((y - x for (x, y) in zip([0] + a, a))))", "import sys\n\ndef rall():\n    return sys.stdin.readlines()\n\ndef rl():\n    return sys.stdin.readline().strip()\n\ndef rl_types(types):\n    str_list = [x for x in sys.stdin.readline().strip().split(' ')]\n    return [types[i](str_list[i]) for i in range(len(str_list))]\n\ndef pr(something=''):\n    sys.stdout.write(str(something) + '\\n')\n\ndef pra(array):\n    sys.stdout.write(' '.join([str(x) for x in array]) + '\\n')\n\ndef solve(array):\n    return array\nNT = int(rl())\nfor ti in range(NT):\n    _ = int(rl())\n    array = list(map(int, rl().split(' ')))\n    if True:\n        s = sorted(array)\n        l = s[0]\n        mx = s[0]\n        for v in s[1:]:\n            d = v - l\n            mx = max(mx, d)\n            l = v\n    pr(mx)", "import sys\n\ndef input():\n    return sys.stdin.readline().rstrip()\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = sorted(list(map(int, input().split())))\n    tmp = lst[0]\n    for i in range(n - 1):\n        tmp = max(tmp, lst[i + 1] - lst[i])\n    print(tmp)", "import sys\ninput = sys.stdin.readline\nprint = sys.stdout.write\nfor _ in range(int(input())):\n    _ = input()\n    a = [0] + sorted(map(int, input().split()))\n    best = -9999999999\n    for i in range(1, len(a)):\n        best = max(best, a[i] - a[i - 1])\n    print(str(best) + '\\n')", "def ans():\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n < 2:\n        return min(a)\n    a.sort()\n    x = a[0]\n    for i in range(1, len(a)):\n        if abs(a[i - 1] - a[i]) > x:\n            x = abs(a[i - 1] - a[i])\n    return x\nfor _ in range(int(input())):\n    print(ans())", "def solve():\n    n = int(input())\n    a = sorted(map(int, input().split()))\n    ans = a[0]\n    for (v, nv) in zip(a, a[1:]):\n        ans = max(ans, nv - v)\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "k2 = []\nfor i in range(int(input())):\n    n = int(input())\n    a = [int(j) for j in input().split()]\n    a1 = sorted(a)\n    a1.reverse()\n    k1 = []\n    if len(a1) == 1:\n        k2.append(max(a1))\n    else:\n        for k in range(n - 1):\n            k1.append(a1[k] - a1[k + 1])\n        if max(k1) >= min(a1):\n            k2.append(max(k1))\n        else:\n            k2.append(min(a1))\nfor t1 in k2:\n    print(t1)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        ans = a[0]\n    else:\n        a.sort()\n        z = [0] * n\n        z[0] = a[0]\n        for i in range(1, n):\n            z[i] = a[i] - a[i - 1]\n        ans = max(z)\n    print(ans)\n    t -= 1", "t = int(input())\nresult = []\nfor i in range(t):\n    n = int(input())\n    a = sorted(list(map(int, input().strip().split())))\n    if n > 1:\n        b = [a[0]]\n        for j in range(n - 1):\n            b.append(a[j + 1] - a[j])\n        result.append(max(b))\n    elif n == 1:\n        result.append(a[0])\nfor i in result:\n    print(i)", "for _ in range(int(input())):\n    (_, a) = (input(), sorted(map(int, input().split())))\n    print(max(a[0], max((n - p for (p, n) in zip(a, a[1:])))) if len(a) > 1 else a[0])", "def minExtraction(array):\n    if len(array) == 1:\n        return array[0]\n    minel = min(array)\n    array.sort()\n    n = len(array)\n    window = 0\n    for x in range(1, n):\n        if array[x] - array[x - 1] > window:\n            window = array[x] - array[x - 1]\n    return max(window, minel)\nt = int(input())\nfinal = []\nfor _ in range(t):\n    n = int(input())\n    array = list(map(int, input().split()))\n    final.append(minExtraction(array))\nfor _ in range(t):\n    print(final[_])", "def minimize(l):\n    if len(l) == 1:\n        return l[0]\n    l.sort()\n    maxm = l[0]\n    for i in range(len(l) - 1):\n        d = l[i + 1] - l[i]\n        maxm = max(d, maxm)\n    return maxm\nt = int(input())\ncout = []\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    cout += [l]\nprint(*list(map(minimize, cout)), sep='\\n')", "def findmin(a):\n    if len(a) == 1:\n        return a[0]\n    else:\n        a = sorted(a)\n        minvalue = a[0]\n        for i in range(len(a) - 1):\n            minvalue = max(minvalue, a[i + 1] - a[i])\n        return minvalue\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    if n == 1:\n        print(input())\n    else:\n        a = list(map(int, input().split()))\n        print(findmin(a))", "import sys\nnum_test = int(sys.stdin.readline())\nfor it in range(1, num_test + 1):\n    array_length = int(sys.stdin.readline())\n    array = [int(x) for x in sys.stdin.readline().split()]\n    array.sort()\n    if array_length == 1:\n        print(array[0])\n        continue\n    else:\n        max_delta = array[0]\n        for i in range(array_length - 1):\n            max_delta = max(array[i + 1] - array[i], max_delta)\n        print(max_delta)", "def minmax(n, hello):\n    inthello = []\n    for i in hello:\n        inthello.append(int(i))\n    if n == 1:\n        return inthello[0]\n    inthello.sort()\n    sorted = inthello\n    maxdif = sorted[0]\n    for j in range(n - 1):\n        if sorted[j + 1] - sorted[j] > maxdif:\n            maxdif = sorted[j + 1] - sorted[j]\n    return maxdif\ntotal = int(input())\nfor i in range(total):\n    n = int(input())\n    hello = input().split()\n    print(minmax(n, hello))", "def solve(n, a):\n    if n == 1:\n        print(a[0])\n    else:\n        a = sorted(a, reverse=True)\n        diff = [a[i] - a[i + 1] for i in range(len(a) - 1)]\n        ans = max(max(diff), a[-1])\n        print(ans)\ndebugmode = 0\nif debugmode:\n    with open('input.txt', 'r') as f:\n        t = int(f.readline())\n        for _ in range(t):\n            n = int(f.readline())\n            a = list(map(int, f.readline().split()))\n            solve(n, a)\nelse:\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        solve(n, a)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    if n == 1:\n        print(l[0])\n    else:\n        l.sort()\n        max = l[0]\n        for i in range(n - 1):\n            if max < l[i + 1] - l[i]:\n                max = l[i + 1] - l[i]\n        print(max)\n    t = t - 1", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    if n == 1:\n        print(lst[0])\n    else:\n        max_diff = 0\n        lst.sort()\n        for i in range(1, n):\n            if lst[i] - lst[i - 1] > max_diff:\n                max_diff = lst[i] - lst[i - 1]\n        print(max(lst[0], max_diff))", "t = int(input())\nresult = []\nfor i in range(t):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    b = [a[0]]\n    for j in range(n - 1):\n        b.append(a[j + 1] - a[j])\n    result.append(max(b))\nprint(*result, sep='\\n')", "for t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1:\n        print(*l)\n        continue\n    l.sort()\n    sum = l[0]\n    for i in range(1, n):\n        if l[i] - l[i - 1] > sum:\n            sum = l[i] - l[i - 1]\n    print(sum)", "def find_min(arr, n):\n    if n == 1:\n        return arr[0]\n    arr.sort()\n    mins = [arr[0]]\n    for i in range(1, n):\n        mins.append(arr[i] - arr[i - 1])\n    return max(mins)\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    print(find_min(arr, n))", "n = int(input())\nfor _ in range(n):\n    _2 = input()\n    x = list(map(int, input().split()))\n    x = sorted(x)\n    last = x[0]\n    max_ = x[0]\n    for i in x[1:]:\n        if i - last > max_:\n            max_ = i - last\n        last = i\n    print(max_)", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    if n == 1:\n        print(a[0])\n    else:\n        mini = min(a)\n        for i in range(n - 1):\n            if a[i + 1] - a[i] > mini:\n                mini = a[i + 1] - a[i]\n        print(mini)", "t = int(input())\nwhile t != 0:\n    t -= 1\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    min_ans = float('-inf')\n    curr_sub = 0\n    for i in arr:\n        if i - curr_sub > min_ans:\n            min_ans = i - curr_sub\n        curr_sub += i - curr_sub\n    print(min_ans)", "for _ in range(int(input())):\n    n = int(input())\n    ans = -10000000000.0\n    if n == 1:\n        ans = input()\n    else:\n        arr = list(map(int, input().split()))\n        arr.sort()\n        ans = arr[0]\n        for i in range(1, n):\n            h = arr[i] - arr[i - 1]\n            if ans <= h:\n                ans = h\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    m = a[0]\n    if n > 1:\n        for i in range(n - 1):\n            if a[i + 1] - a[i] > m:\n                m = a[i + 1] - a[i]\n    print(m)", "import sys\nDEBUG_ENABLED = True\n\ndef debug(*args, **kwargs):\n    if DEBUG_ENABLED:\n        print(*args, file=sys.stderr, **kwargs)\n\ndef solve_case(case_num: int, length: int, array: list) -> str:\n    array.sort()\n    ma_mi = array[0]\n    variable = 0\n    for pos in range(len(array)):\n        array[pos] = array[pos] - variable\n        variable += array[pos]\n        if array[pos] > ma_mi:\n            ma_mi = array[pos]\n    return ma_mi\nT = int(input())\nfor tt in range(T):\n    n1 = int(input())\n    array1 = list(map(int, input().split()))\n    if n1 == 1:\n        print(array1[0])\n        continue\n    result = solve_case(tt + 1, n1, array1)\n    print(result)\npass", "a = int(input())\nres = []\nfor i in range(a):\n    k = int(input())\n    n = input().split()\n    for i in range(k):\n        n[i] = int(n[i])\n    n = sorted(n)\n    m = n[0]\n    for i in range(k - 1):\n        if n[i + 1] - n[i] > m:\n            m = n[i + 1] - n[i]\n    res.append(m)\nfor i in res:\n    print(i)", "def solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    res = arr[0]\n    for i in range(n - 1):\n        res = max(res, arr[i + 1] - arr[i])\n    return res\nt = int(input())\nwhile t:\n    print(solve())\n    t -= 1", "def main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n == 1:\n        return arr[0]\n    arr.sort()\n    mx = arr[0]\n    for i in range(n - 1):\n        if arr[i + 1] - arr[i] > mx:\n            mx = arr[i + 1] - arr[i]\n    return mx\nfor _ in range(int(input())):\n    print(main())", "def fun(nums):\n    nums.sort()\n    return max(nums[0], max((nums[i] - nums[i - 1] for i in range(1, len(nums)))) if len(nums) != 1 else nums[0] - 1)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    nums = [int(x) for x in input().split()]\n    print(fun(nums))", "def main():\n    T = int(input())\n    for t in range(T):\n        minimal()\n\ndef minimal():\n    n = int(input())\n    a = sorted(list(map(int, input().split(' '))), reverse=True)\n    if n == 1:\n        print(a[0])\n        return\n    a.append(0)\n    subtractor = list((a[i] - a[i + 1] for i in range(len(a) - 1)))\n    print(max(subtractor))\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(*a)\n        continue\n    a.sort()\n    ans = a[0]\n    for i in range(1, n):\n        if a[i] - a[i - 1] > ans:\n            ans = a[i] - a[i - 1]\n    print(ans)", "import sys\nnum_test = int(sys.stdin.readline())\nfor it in range(1, num_test + 1):\n    array_length = int(sys.stdin.readline())\n    array = [int(x) for x in sys.stdin.readline().split()]\n    array.sort()\n    max_delta = array[0]\n    for i in range(array_length - 1):\n        max_delta = max(array[i + 1] - array[i], max_delta)\n    print(max_delta)", "from sys import stdin, stdout\nt = int(stdin.readline())\nfor tt in range(t):\n    n = int(stdin.readline())\n    a = [int(s) for s in stdin.readline().split()]\n    a.sort()\n    mx = a[0]\n    subed = 0\n    for i in range(n):\n        ai = a[i] - subed\n        if ai > mx:\n            mx = ai\n        subed += ai\n    print(mx)", "def solve(a):\n    a = sorted(a)\n    reduction = 0\n    minimas = []\n    for ai in a:\n        new_ai = ai - reduction\n        minimas.append(new_ai)\n        reduction += new_ai\n    return max(minimas)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    print(solve(a))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    lst.sort()\n    if len(lst) == 1:\n        print(lst[0])\n        continue\n    big = 0\n    for i in range(1, n):\n        if lst[i] - lst[i - 1] > big:\n            big = lst[i] - lst[i - 1]\n    print(max(big, lst[0]))", "def main():\n    t = int(input())\n    for count in range(t):\n        n = int(input())\n        s = input().split()\n        a = [int(i) for i in s]\n        a.sort()\n        b = [0] * n\n        b[0] = a[0]\n        sum = a[0]\n        max_min = a[0]\n        for i in range(1, n):\n            b[i] = a[i] - sum\n            if max_min < b[i]:\n                max_min = b[i]\n            sum += b[i]\n        print(max_min)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    if n == 1:\n        print(arr[0])\n    else:\n        temp = arr[0]\n        for i in range(1, len(arr)):\n            arr[i] -= temp\n            temp += arr[i]\n        print(max(arr))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    for i in range(n - 1, 0, -1):\n        a[i] -= a[i - 1]\n    print(max(a))", "for _ in range(int(input())):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    if len(arr) == 1:\n        print(arr[0])\n        continue\n    arr.sort()\n    for i in range(len(arr) - 1, 0, -1):\n        arr[i] -= arr[i - 1]\n    print(max(arr))", "def solve():\n    n = int(input())\n    a = sorted([int(x) for x in input().split()])\n    max_min = a[0]\n    sub = max_min\n    for i in range(1, n):\n        a[i] -= sub\n        sub += a[i]\n        max_min = max(max_min, a[i])\n    return max_min\nt = int(input())\nfor _ in range(t):\n    print(solve())", "for t in range(int(input())):\n    n = input()\n    a = list(map(int, input().split()))\n    m = -(10 ** 9 + 1)\n    cum = 0\n    cur = 0\n    a.sort()\n    for i in a:\n        cur = i - cum\n        if cur > m:\n            m = cur\n        cum += cur\n    print(m)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 1:\n        a = int(input())\n        print(a)\n    else:\n        li = [int(x) for x in input().split()]\n        li.sort()\n        v = []\n        v.append(li[0])\n        for i in range(1, n):\n            v.append(li[i] - li[i - 1])\n        print(max(v))", "for i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n == 1:\n        print(arr[0])\n        continue\n    arr.sort()\n    cd = arr[0]\n    maxmin = arr[0]\n    for i in range(1, n):\n        num = arr[i] - cd\n        if num > maxmin:\n            maxmin = num\n        cd += num\n    print(maxmin)", "for i in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    b.sort()\n    max = b[0]\n    for i in range(a - 1):\n        if b[i + 1] - b[i] > max:\n            max = b[i + 1] - b[i]\n    print(max)", "def calc(a, n):\n    if n % 2 == 0:\n        for i in range(n):\n            if i % 2 == 0:\n                a[-1] -= a[i]\n    else:\n        for i in range(n):\n            if i % 2 == 1:\n                a[-1] -= a[i]\n    return a[-1]\n\ndef op():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    a.sort()\n    o = a[0]\n    for i in range(n - 1):\n        if a[i + 1] - a[i] > o:\n            o = a[i + 1] - a[i]\n    return o\no = []\nfor i in range(int(input())):\n    print(op())", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    m = a[0]\n    for i in range(1, n):\n        m = max(m, a[i] - a[i - 1])\n    print(m)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    k = [l[0]]\n    for i in range(len(l) - 1):\n        k.append(l[i + 1] - l[i])\n    print(max(k))", "from time import time\n_START_TIME_ = time()\n_DEBUGGING_ = False\n\ndef read_line() -> str:\n    if _DEBUGGING_:\n        return _fr_.readline()\n    else:\n        return input()\n\ndef write(*args, _sep=' ', _end='\\n'):\n    if _DEBUGGING_:\n        _fw_.write(f'{_sep.join((str(elem) for elem in args))}{_end}')\n    else:\n        print(*args, sep=_sep, end=_end)\n\ndef log(*args, _sep=' ', _end='\\n'):\n    if _DEBUGGING_:\n        print(*args, sep=_sep, end=_end)\n\ndef solve(n, arr):\n    arr.sort()\n    sub = 0\n    max_min = arr[0]\n    for a in arr:\n        max_min = max(max_min, a - sub)\n        sub = a\n    write(max_min)\nif _DEBUGGING_:\n    _fr_ = open('input.txt')\n    _fw_ = open('output.txt', 'w')\n_t_ = int(read_line().strip())\nfor _ in range(_t_):\n    _n_ = int(read_line().strip())\n    _arr_ = [int(x) for x in read_line().strip().split()]\n    solve(_n_, _arr_)\nif _DEBUGGING_:\n    _fr_.close()\n    _fw_.close()\nif _DEBUGGING_:\n    print('\\nElapsed time: {:.2f}s'.format(time() - _START_TIME_), end='')", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    tot = a[0]\n    for i in range(1, n):\n        tot = max(tot, a[i] - a[i - 1])\n    print(tot)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1:\n        print(l[0])\n    else:\n        l.sort()\n        temp = 0\n        mini = [l[0]]\n        for i in range(n - 1):\n            temp = l[i]\n            if l[i + 1] - temp > mini[0]:\n                mini[0] = l[i + 1] - temp\n        print(mini[0])", "def si():\n    return str(input())\n\ndef ii():\n    return int(input())\n\ndef mi():\n    return map(int, input().strip().split(' '))\n\ndef msi():\n    return map(str, input().strip().split(' '))\n\ndef li():\n    return list(mi())\n\ndef main():\n    for _ in range(ii()):\n        n = ii()\n        a = li()\n        a.sort()\n        for i in range(len(a) - 1, 0, -1):\n            a[i] = a[i] - a[i - 1]\n        print(max(a))\nmain()", "n = int(input())\nfor i in range(n):\n    x = int(input())\n    lis = list(map(int, input().split()))\n    if x == 1:\n        print(*lis)\n    else:\n        lis.sort()\n        fi = lis[0]\n        check = lis[0]\n        for i in lis[1:]:\n            fi = max(fi, i - check)\n            check = i\n        print(fi)", "for i in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    b.sort()\n    max = b[0]\n    for i in range(a - 1):\n        if b[i + 1] - b[i] > max:\n            max = b[i + 1] - b[i]\n    print(max)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(a[0])\n    else:\n        a.sort()\n        p = a[0]\n        k = a[0]\n        a[0] = 0\n        for index in range(1, n):\n            z = a[index]\n            a[index] -= k\n            k = z\n        print(max(max(a), p))", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(a[0])\n    else:\n        a.sort(reverse=True)\n        d = [min(a)] + [a[i] - a[i + 1] for i in range(len(a) - 1)]\n        print(max(d))", "number_tests = int(input())\nfor test in range(number_tests):\n    list_size = int(input())\n    list_values = input().split()\n    list_values = list(map(int, list_values))\n    list_values.sort()\n    lowest = 0\n    previous = 0\n    is_first = True\n    for value in list_values:\n        if is_first:\n            is_first = False\n            lowest = value\n            previous = lowest\n        else:\n            diff = value - previous\n            if diff > lowest:\n                lowest = diff\n            previous = value\n    print(lowest)", "t = int(input())\nnth = []\narr = []\nfor i in range(t):\n    nth.append(int(input()))\n    inp = input().split(' ')\n    arr.append([])\n    for j in range(nth[i]):\n        arr[i].append(int(inp[j]))\n    arr[i].sort()\nfor i in range(t):\n    min = arr[i][0]\n    if nth[i] == 1:\n        print(min)\n        continue\n    else:\n        for j in range(1, nth[i]):\n            if arr[i][j] - arr[i][j - 1] > min:\n                min = arr[i][j] - arr[i][j - 1]\n    print(min)", "T = int(input())\nOUTPUT = []\nfor test in range(T):\n    n = int(input())\n    A = sorted([int(x) for x in input().split()])\n    mimax = A[0]\n    for i in range(n - 1):\n        mimax = max(mimax, A[i + 1] - A[i])\n    OUTPUT.append(mimax)\nfor result in OUTPUT:\n    print(result)", "test = int(input())\nlistout = []\nwhile test > 0:\n    n = int(input())\n    a1 = list(map(int, input().strip().split()))[:n]\n    a1.sort()\n    a2 = [a1[0]]\n    for x in range(n - 1):\n        a2.append(a1[x + 1] - a1[x])\n    listout.append(max(a2))\n    test = test - 1\nprint(*listout, sep='\\n')", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split(' '))))\n    m = a[0]\n    k = 0\n    if n > 1:\n        for i in a:\n            i += k\n            k -= i\n            if i > m:\n                m = i\n    print(m)", "n = int(input())\nfor x in range(n):\n    tmp1 = int(input())\n    tmp2 = list(map(int, input().split()))\n    if tmp1 == 1:\n        print(*tmp2)\n        continue\n    tmp2.sort()\n    lst = tmp2[0]\n    for x in range(1, tmp1):\n        if tmp2[x] - tmp2[x - 1] > lst:\n            lst = tmp2[x] - tmp2[x - 1]\n    print(lst)", "for _ in range(int(input())):\n    n = int(input())\n    li = sorted(list(map(int, input().split()[:n])))\n    ans = li[0]\n    for i in range(n - 1):\n        if li[i + 1] - li[i] > ans:\n            ans = li[i + 1] - li[i]\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    list_a = list(map(int, input().split()))\n    list_a.sort()\n    maximum_minimal = list_a[0]\n    minus = 0\n    if len(list_a) == 1:\n        maximum_minimal = list_a[0]\n    for j in range(len(list_a) - 1):\n        m = list_a[j + 1] - list_a[j]\n        if m > maximum_minimal:\n            maximum_minimal = m\n    print(maximum_minimal)", "import sys\nimport heapq\n\ndef solve():\n    T = int(sys.stdin.readline().rstrip())\n    for _ in range(T):\n        N = int(sys.stdin.readline().rstrip())\n        S = list(map(int, sys.stdin.readline().rstrip().split(' ')))\n        max_a = 2 * -10 ** 15\n        stacked = 0\n        heapq.heapify(S)\n        while len(S) > 0:\n            a = heapq.heappop(S)\n            a += stacked\n            stacked -= a\n            if a > max_a:\n                max_a = a\n        print(max_a)\nsolve()", "t = int(input())\nrjesenje = []\nwhile t:\n    n = int(input())\n    niz = list(map(int, input().split()))\n    niz.sort()\n    najmanji = niz[0]\n    for i in range(1, len(niz)):\n        najmanji = max(najmanji, niz[i] - niz[i - 1])\n    rjesenje.append(najmanji)\n    t -= 1\nfor i in rjesenje:\n    print(i)", "import heapq\nn = int(input())\narr = []\nfor i in range(n):\n    t = int(input())\n    tmp = input().split()\n    tmp = list(map(int, tmp))\n    tmp.sort()\n    tmp2 = [tmp[0]]\n    tmp3 = [tmp[i] - tmp[i - 1] for i in range(1, len(tmp))]\n    tmp2.extend(tmp3)\n    ans = max(tmp2)\n    print(ans)", "for _ in range(int(input())):\n    x = int(input())\n    x = list(map(int, input().split()))\n    x.sort()\n    v = [x[i + 1] - x[i] for i in range(len(x) - 1)]\n    if len(v) == 1 and v[0] > x[0]:\n        print(*v)\n    elif len(v) == 0:\n        print(*x)\n    elif max(v) < x[0]:\n        print(x[0])\n    else:\n        print(max(v))", "def readint():\n    return int(input())\n\ndef readarr():\n    return list(map(int, input().split()))\n\ndef readmore():\n    return map(int, input().split())\n\ndef main():\n    t = readint()\n    for _ in range(t):\n        n = readint()\n        a = readarr()\n        a.sort()\n        maximal = a[0]\n        for i in range(1, n):\n            maximal = max(maximal, a[i] - a[i - 1])\n        print(maximal)\nmain()", "import sys\ngetline = sys.stdin.readline\n\ndef read_int():\n    return int(getline())\n\ndef read_ints():\n    return list(map(int, getline().split()))\nt = read_int()\nfor _ in range(t):\n    n = read_int()\n    A = sorted(read_ints())\n    m = []\n    m.append(A[0])\n    prev = A[0]\n    for i in range(1, n):\n        diff = A[i] - prev\n        prev += diff\n        m.append(diff)\n    print(max(m))", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    arr = list(map(int, stdin.readline().split()))\n    ans = []\n    arr.sort()\n    s = 0\n    for i in arr:\n        i -= s\n        ans.append(i)\n        s += i\n    print(max(ans))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    a = [l[0]]\n    for i in range(1, len(l)):\n        a.append(l[i] - l[i - 1])\n    print(max(a))", "import math\n\ndef solve():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    a.sort()\n    temp = []\n    temp.append(a[0])\n    for i in range(1, len(a)):\n        temp.append(a[i] - a[i - 1])\n    return max(temp)\nn = int(input())\nfor i in range(n):\n    print(solve())", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    m = 0\n    for i in range(1, n):\n        m += l[i - 1]\n        l[i] -= m\n    print(max(l))", "for i in range(int(input())):\n    length = int(input())\n    full_list = [*map(lambda x: int(x), input().split())]\n    if len(full_list) == 1:\n        print(min(full_list))\n    else:\n        full_list.sort()\n        differences = [j - i for (i, j) in zip(full_list[:-1], full_list[1:])]\n        differences.append(full_list[0])\n        print(max(differences))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    max = a[0]\n    for i in range(n - 1):\n        if a[i + 1] - a[i] > max:\n            max = a[i + 1] - a[i]\n    print(max)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    if len(a) == 1:\n        print(a[0])\n    else:\n        max = a[0]\n        for i in range(n - 1):\n            x = a[i + 1] - a[i]\n            if x > max:\n                max = x\n        print(max)", "t = int(input())\nfor k in range(0, t, 1):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    min = a[0]\n    for i in range(1, n, 1):\n        if a[i] - a[i - 1] > min:\n            min = a[i] - a[i - 1]\n    print(min)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    count = 0\n\n    def solve(arr, n):\n        if len(arr) == 1:\n            return arr[0]\n        arr = sorted(set(arr))\n        res = min(arr)\n        for i in range(len(arr) - 1):\n            res = max(res, arr[i + 1] - arr[i])\n        if res < 0:\n            return 0\n        return res\n    print(solve(arr, n))"]