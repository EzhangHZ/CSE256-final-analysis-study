["t = int(input())\nans = []\nfor i in range(t):\n    (n, m) = input().split(' ')\n    m = int(m)\n    n = int(n)\n    a = m * (m - 1) // 2\n    b = m * n * (n + 1) // 2\n    ans.append(a + b)\nfor i in ans:\n    print(i)", "results = []\ntest = int(input())\nk = 0\nwhile k < test:\n    (n, m) = input().split()\n    n = int(n)\n    m = int(m)\n    p = m - 1\n    col = n * (n + 1) / 2 * m\n    row = p * (p + 1) / 2\n    summ = col + row\n    summ = int(summ)\n    results.append(summ)\n    k = k + 1\nz = 0\nwhile z < test:\n    print(results[z], '\\n')\n    z = z + 1", "t = int(input())\nres = []\nfor i in range(t):\n    (m, n) = map(int, input().split())\n    result = (1 + n) / 2 * n + (n + m * n) / 2 * m - n\n    res += [int(result)]\nfor i in res:\n    print(i)", "def rc(n, m):\n    s = m * (m - 1) / 2\n    s = s + n * (n + 1) / 2 * m\n    return int(s)\nimport sys\nfor line in sys.stdin:\n    numbers = [int(x) for x in line.strip().split()]\n    if len(numbers) == 2:\n        n = numbers[0]\n        m = numbers[1]\n        print(rc(n, m))", "for i in [*open(0)][1:]:\n    (n, m) = map(int, i.split())\n    print(m * (m - 1 + n * n + n) // 2)", "l1 = [int(i) for i in input().split()][:1]\na = l1[0]\nl3 = []\nfor alpha in range(a):\n    l2 = [int(k) for k in input().split()][:2]\n    l3.append(l2)\nfor v in range(a):\n    n = l3[v][0]\n    m = l3[v][1]\n    t = m * (m + 1) / 2\n    u = m * (n * (n + 1)) / 2\n    print(int(t + u - m))", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    row = m * (m + 1) // 2\n    col = m * (n * (n + 1) // 2) - m\n    print(row + col)", "x = int(input())\nfor i in range(x):\n    total = 0\n    A = input().split()\n    n = int(A[1])\n    m = int(A[0])\n    total = n * (n + 1) / 2 + n * (m * (m + 1) / 2) - n\n    p = int(total)\n    print(p)", "for p in range(int(input())):\n    (n, m) = map(int, input().split())\n    print(m * (m + 1) // 2 - m + m * (n * (n + 1) // 2))", "t = int(input())\nwhile t:\n    (m, n) = list(map(int, input().split()))\n    ans = int(n * (n + 1) / 2 + n * (m * (m + 1) / 2) - n)\n    print(ans)\n    t = t - 1", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n == 1 or m == 1:\n        a = max(m, n)\n        ans = a * (a + 1) // 2\n    else:\n        ans = m * (m + 1) // 2\n        ans += n * m * (n - 1) // 2\n        ans += (n - 1) * m\n    print(ans)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    res = m * (m + 1) >> 1\n    res += m * ((n * (n + 1) >> 1) - 1)\n    print(res)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    print(m * (m - 1 + n * (n + 1)) // 2)", "T = int(input())\nfor i in range(T):\n    (m, n) = [int(_) for _ in input().split(' ')]\n    print((n * (n + 1) + n * m * (m + 1) - 2 * n) // 2)", "p = int(input())\nfor _ in range(p):\n    (m, n) = list(map(int, input().split()))\n    print(n * (n - 1) // 2 + n * (m * (m + 1)) // 2)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    print(int(m * (m - 1) / 2 + m * n * (n + 1) / 2))", "def optimal_path(n, m):\n\n    def cost_fn(i, j):\n        return i * m + j + 1\n    min_cost = (1 + m) * m // 2 + (n - 1) * m + m * (n * (n - 1) // 2)\n    print(min_cost)\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    optimal_path(n, m)", "t = int(input(''))\nfor z in range(t):\n    (n, m) = map(int, input('').split())\n    s1 = 0\n    s2 = 0\n    if n == m == 1:\n        print(1)\n    else:\n        s1 = m * (m + 1) / 2\n        s2 = n / 2 * (2 * m + (n - 1) * m)\n        print(int(s1 + s2 - m))", "import sys\n\ndef solution_2(n, m):\n    return int(m * (m + 1) / 2 + m * (n * (n + 1) / 2 - 1))\ncase_num = int(sys.stdin.readline().strip())\nfor case_idx in range(case_num):\n    input_ = sys.stdin.readline().strip().split()\n    (n, m) = (int(input_[0]), int(input_[1]))\n    print(solution_2(n, m))", "t = int(input())\nfor i in range(t):\n    L = list(map(int, input().split()))\n    (a, b) = (L[0], L[1])\n    c = b * (b + 1) // 2 + b * a * (a + 1) / 2 - b\n    print(int(c))", "for _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    c = 0\n    c += n * (n + 1) // 2\n    c += m * (2 * n + (m - 1) * n) // 2\n    c -= n\n    print(c)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, m) = map(int, input().split())\n    return m * (m + 1) // 2 + m * n * (n + 1) // 2 - m\nfor _ in range(int(input())):\n    print(solve())", "for t in range(int(input())):\n    (n, m) = [int(l) for l in input().split()]\n    ans = m * (m + 1) // 2 + m * (n * (n + 1) // 2 - 1)\n    print(ans)", "T = int(input())\nfor i in range(T):\n    (n, m) = input().split()\n    n = int(n)\n    m = int(m)\n    cost = 0\n    if n == 1:\n        cost = m * (m + 1) / 2\n    elif m == 1:\n        cost = n * (n + 1) / 2\n    else:\n        cost = m * (m - 1) / 2 + m * (n * (n + 1) / 2)\n    cost = int(cost)\n    print(cost)", "import sys\n\ndef inp():\n    return int(input())\n\ndef main():\n    t = inp()\n    while t > 0:\n        (n, m) = map(int, input().split())\n        A = m * (m + 1) / 2\n        B = (n + 2) * (n - 1) * m / 2\n        kq = A + B\n        print(int(kq), '\\n')\n        t -= 1\nmain()", "t = int(input())\nfor _ in range(t):\n    (n, m) = [int(x) for x in input().split(' ')]\n    s = m * (m + 1) // 2\n    s1 = n * (n + 1) // 2\n    s1 = s1 - 1\n    s1 = s1 * m\n    s = s + s1\n    print(s)", "t = int(input())\nfor _ in range(t):\n    (n, m) = [int(x) for x in input().split(' ')]\n    s = m * (m + 1) // 2\n    s1 = n * (n + 1) // 2\n    s1 = s1 - 1\n    s1 = s1 * m\n    s = s + s1\n    print(s)", "def su(x):\n    return x * (x + 1) / 2\nn = int(input())\nfor i in range(n):\n    (n, m) = [int(k) for k in input().split()]\n    n_sum = su(n)\n    m_sum = su(m)\n    ans = n_sum * m + m_sum - m\n    print(int(ans))", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    ans = m * (m - 1 + n * (n + 1)) // 2\n    print(ans)", "def invr():\n    return list(map(int, input().split()))\nnumber_of_test_cases = invr()\nwhile number_of_test_cases[0] > 0:\n    arr = invr()\n    n = arr[0]\n    m = arr[1]\n    cost = int((m * (m + 1) + (n - 1) * (4 * m + (n - 2) * m)) / 2)\n    print(cost)\n    number_of_test_cases[0] = number_of_test_cases[0] - 1", "t = int(input())\nwhile t:\n    x = input().split(' ')\n    n = int(x[0])\n    m = int(x[1])\n    ans = int(m * (m + 1) / 2)\n    ans += int(m * n * (n + 1) / 2 - m)\n    print(ans)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    (n, m) = map(int, input().split())\n    print(m * (m - 1) // 2 + m * (n * (n + 1) // 2))\n    t -= 1", "for j in [*open(0)][1:]:\n    (num, m) = map(int, j.split())\n    print(m * (m - 1 + num * num + num) // 2)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    print(m * (m - 1) // 2 + m * n * (1 + n) // 2)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    print((m - 1) * m // 2 + n * m + m * ((n - 1) * n) // 2)", "def getsum(n):\n    return n * (n + 1) // 2\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(getsum(b) + getsum(a) * b - b)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    s = m * (m + 1) // 2 + m * n * (n + 1) // 2 - m\n    print(s)", "for i in [*open(0)][1:]:\n    (n, m) = map(int, i.split())\n    print(m * (m - 1 + n * n + n) // 2)", "k = int(input())\nl = []\nfor i in range(k):\n    c = [int(x) for x in input().split(' ')]\n    n = int(c[0])\n    m = int(c[1])\n    s = int(m / 2 * (m + 1 + n * (n + 1)) - m)\n    l = l + [s]\nfor j in l:\n    print(j)", "for _ in range(int(input())):\n    arr = list(map(int, input().split()))\n    n = arr[0]\n    m = arr[1]\n    result = m * (m - 1) // 2 + n * m * (n + 1) // 2\n    print(result)", "def solve(n, m):\n    cost = m * (m + 1) // 2 + m * (n * (n + 1) // 2) - m\n    return cost\n\ndef main():\n    t = int(input())\n    cases = []\n    for i in range(t):\n        s = input()\n        (n, m) = (int(s.split()[0]), int(s.split()[1]))\n        cases.append([n, m])\n    for i in range(t):\n        (n, m) = cases[i]\n        res = solve(n, m)\n        print(res)\n    return\nmain()", "t = int(input())\n(n, m) = ([], [])\na = 0\nwhile a < t:\n    n.append(0)\n    m.append(0)\n    (n[a], m[a]) = map(int, input().split())\n    a += 1\na = 0\nwhile a < t:\n    answer = (m[a] * (m[a] + 1) + n[a] * (n[a] + 1) * m[a]) / 2 - m[a]\n    print(int(answer))\n    a += 1", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    t = m - 1\n    sum = t * (t + 1) // 2\n    sum1 = m * (n * (n + 1) // 2)\n    print(sum + sum1)", "def solve_case(n, m):\n    horizontal_distance = m * (m + 1) / 2\n    vertical_distance = n * (n + 1) / 2 * m - m\n    print(int(horizontal_distance + vertical_distance))\nnum_cases = int(input())\ncases = [0] * num_cases\nfor case in range(num_cases):\n    cases[case] = input().split()\nfor case in cases:\n    solve_case(int(case[0]), int(case[1]))", "res = []\nfor t in range(int(input())):\n    (n, m) = map(int, input().split())\n    res.append(int(m * (m + 1) / 2 + m * (n * (n + 1) / 2 - 1)))\nfor i in res:\n    print(i)", "a = [0]\nfor x in range(1, 10001):\n    a.append(a[x - 1] + x)\nimport sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    tmp = a[m] + m * (a[n] - 1)\n    print(tmp)", "for i in [*open(0)][1:]:\n    (n, m) = map(int, i.split())\n    print(m * (m - 1 + n * n + n) // 2)", "for i in [*open(0)][1:]:\n    (n, m) = map(int, i.split())\n    print(m * (m - 1 + n * n + n) // 2)", "for i in [*open(0)][1:]:\n    (n, k) = map(int, i.split())\n    print(k * (k - 1 + n * n + n) // 2)", "for i in [*open(0)][1:]:\n    (n, m) = map(int, i.split())\n    print(m * (m - 1 + n * n + n) // 2)", "for i in [*open(0)][1:]:\n    (n, m) = map(int, i.split())\n    print(m * (m - 1 + n * n + n) // 2)", "for i in [*open(0)][1:]:\n    (n, m) = map(int, i.split())\n    print(m * (m - 1 + n * n + n) // 2)", "for i in [*open(0)][1:]:\n    (n, m) = map(int, i.split())\n    print(m * (m - 1 + n * n + n) // 2)", "for i in [*open(0)][1:]:\n    (n, m) = map(int, i.split())\n    print(m * (m - 1 + n * n + n) // 2)", "for i in [*open(0)][1:]:\n    (n, m) = map(int, i.split())\n    print(m * (m - 1 + n * n + n) // 2)", "for i in [*open(0)][1:]:\n    (n, m) = map(int, i.split())\n    print(m * (m - 1 + n * n + n) // 2)", "for i in [*open(0)][1:]:\n    (n, m) = map(int, i.split())\n    print(m * (m - 1 + n * n + n) // 2)", "for i in [*open(0)][1:]:\n    (n, m) = map(int, i.split())\n    print(m * (m - 1 + n * n + n) // 2)", "for i in [*open(0)][1:]:\n    (n, m) = map(int, i.split())\n    print(m * (m - 1 + n * n + n) // 2)", "for i in [*open(0)][1:]:\n    (n, m) = map(int, i.split())\n    print(m * (m - 1 + n * n + n) // 2)", "for i in [*open(0)][1:]:\n    (n, m) = map(int, i.split())\n    print(m * (m - 1 + n * n + n) // 2)", "for i in [*open(0)][1:]:\n    (n, m) = map(int, i.split())\n    print(m * (m - 1 + n * n + n) // 2)", "for i in [*open(0)][1:]:\n    (n, m) = map(int, i.split())\n    print(m * (m - 1 + n * n + n) // 2)", "for i in [*open(0)][1:]:\n    (n, m) = map(int, i.split())\n    print(m * (m - 1 + n * n + n) // 2)", "for i in [*open(0)][1:]:\n    (n, m) = map(int, i.split())\n    print(m * (m - 1 + n * n + n) // 2)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    ans = m * (m - 1) // 2 + m * (n * (n + 1) // 2)\n    print(ans)", "for i in [*open(0)][1:]:\n    (n, m) = map(int, i.split())\n    print(m * (m - 1 + n * n + n) // 2)", "for i in [*open(0)][1:]:\n    (n, m) = map(int, i.split())\n    print(m * (m - 1 + n * n + n) // 2)", "tc = int(input())\nfor i in range(tc):\n    (n, m) = map(int, input().split())\n    sum = int(m * (m + 1) / 2 + (n * (n + 1) / 2 - 1) * m)\n    print(sum)", "def take_input():\n    cases = int(input())\n    n = []\n    m = []\n    for i in range(cases):\n        f = input()\n        n.append(int(f.split()[0]))\n        m.append(int(f.split()[1]))\n    return (n, m, cases)\n\ndef ans(row, col):\n    a1 = int(col * (col + 1) / 2)\n    a2 = int(col * (row * (row + 1) / 2 - 1))\n    return a1 + a2\n\ndef main():\n    (n, m, _) = take_input()\n    for i in range(_):\n        print(ans(n[i], m[i]))\nmain()", "for i in [*open(0)][1:]:\n    (n, m) = map(int, i.split())\n    print(m * (m - 1 + n * n + n) // 2)", "for _ in range(int(input())):\n    (p, q) = map(int, input().split())\n    r = q * (q + 1) / 2 + p * q * (p - 1) / 2 + (p - 1) * q\n    print(int(r))", "for i in [*open(0)][1:]:\n    (n, m) = map(int, i.split())\n    print(m * (m - 1 + n * n + n) // 2)", "case = int(input().strip())\nfor i in range(case):\n    table = input().strip().split(' ')\n    table = list(map(int, table))\n    x = table[1] - 1\n    y = table[0]\n    out = 1 * x + x * (x - 1) / 2 + (x + 1) * y + (x + 1) * y * (y - 1) / 2\n    print(int(out))", "for i in [*open(0)][1:]:\n    (n, m) = map(int, i.split())\n    print(m * (m - 1 + n * n + n) // 2)", "for i in [*open(0)][1:]:\n    (n, m) = map(int, i.split())\n    print(m * (m - 1 + n * n + n) // 2)", "t = int(input())\nwhile t:\n    (n, m) = map(int, input().split())\n    res = (m - 1) / 2 * m + n / 2 * (m + n * m)\n    print(int(res))\n    t -= 1", "for _ in [*open(0)][1:]:\n    (n, m) = map(int, _.split())\n    print((m * (m - 1 + n * n + n)).__floordiv__(2))", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    print(m * (m - 1 + n * (n + 1)) // 2)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n == 1:\n        print(m * (m + 1) // 2)\n    elif m == 1:\n        print(n * (n + 1) // 2)\n    else:\n        p = m * (m - 1) // 2\n        q = n * (n + 1) // 2\n        q *= m\n        print(p + q)", "t = int(input())\nfor k in range(t):\n    (m, n) = map(int, input().split())\n    s1 = n * (n + 1) // 2\n    s2 = m * (m + 1) // 2 - 1\n    res = s1 + n * s2\n    print(res)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    one = m * (m + 1) // 2\n    two = m * n * (n + 1) // 2\n    print(one + two - m)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    cost = m * (m + 1) // 2\n    cost += m * (n * (n + 1)) // 2 - m\n    print(cost)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    print(m * (m - 1 + n * (n + 1)) // 2)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    ans = m * n * (n + 1) // 2 + m * (m - 1) // 2\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    print(int(m * (m - 1) / 2 + m * (n * (n + 1) / 2)))", "for _ in range(int(input())):\n    x = input().split()\n    n = int(x[0])\n    m = int(x[1])\n    sum = m * (m - 1) / 2 + m * (n * (n + 1)) / 2\n    print(int(sum))", "for _ in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    a = n * (n + 1) // 2\n    b = m * (m + 1) // 2\n    print(b + m * a - m)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    x = (1 + b) * b / 2\n    y = (1 + a) * a / 2 * b\n    print(int(x + y - b))", "t = int(input())\ns = ''\nfor i in range(t):\n    a = input().split()\n    n = int(a[0])\n    m = int(a[1])\n    b = int(n / 2 * (2 * m + (n - 1) * m) + m * (m + 1) / 2 - m)\n    s += str(b) + '\\n'\nprint(s)", "import math, sys\ninput = sys.stdin.readline\nS = lambda : input().rstrip()\nI = lambda : int(S())\nM = lambda : map(int, S().split())\nL = lambda : list(M())\nmod1 = 1000000007\nmod2 = 998244353\nfor _ in range(I()):\n    (n, m) = M()\n    ans = (m - 1) * m // 2\n    ans += m * (n * (n + 1)) // 2\n    print(ans)", "n = int(input())\nfor _ in range(n):\n    (i, j) = list(map(int, input().split()))\n    row = (1 + j) * j / 2\n    column = (2 * (j * 2) + j * (i - 2)) / 2 * (i - 1)\n    total = row + column\n    print(int(total))", "t = int(input())\nfor i in range(t):\n    l = list(map(int, input().split()))\n    q1 = int(l[0] * (l[0] + 1) / 2) * l[1]\n    q2 = int(l[1] * (l[1] + 1) / 2)\n    q3 = q1 + q2 - l[1]\n    print(q3)", "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    (n, m) = map(int, sys.stdin.readline().split())\n    a = m * (m - 1) // 2\n    b = (n + 1) * n // 2 * m\n    print(a + b)", "n = int(input())\nfor _ in range(n):\n    (a, b) = map(int, input().split())\n    s = (2 + b - 2) * (b - 1) // 2\n    s += (2 * b + b * (a - 1)) * a // 2\n    print(s)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    print(m * (m - 1) // 2 + m * n * (n + 1) // 2)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor i in range(t):\n    (r, c) = map(int, input().split())\n    print(c * (c + 1) // 2 + c * (r * (r + 1) // 2) - c)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    total = m * (m - 1) // 2 + m * (n * (n + 1) // 2)\n    print(total)"]