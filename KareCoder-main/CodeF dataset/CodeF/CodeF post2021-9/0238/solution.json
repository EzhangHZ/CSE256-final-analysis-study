["for _ in range(int(input())):\n    ans = int()\n    n = int(input())\n    lis = list(map(int, input().split()))\n    sm = min(lis) * 2 - 1\n    for i in lis:\n        if i > sm:\n            if not i % sm:\n                ans -= 1\n                ans += i // sm\n            else:\n                ans += i // sm\n    print(ans)", "def one():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = min(a) * 2 - 1\n    print(sum((-(-x // m) for x in a)) - n)\nt = int(input())\nfor i in range(t):\n    one()", "from math import ceil\nfor i in range(int(input())):\n    input()\n    a = list(map(int, input().split()))\n    mn = min(a)\n    mx = mn * 2 - 1\n    k = sum([ceil(i / mx) - 1 for i in a])\n    print(k)", "import math\nt = int(input())\nresults = []\n\ndef devide(arr, res):\n    minimal = min(arr)\n    minimal_val = minimal * 2 - 1\n    if minimal == 1:\n        for val in arr:\n            if val == 1:\n                pass\n            res += val - 1\n        return res\n    for val in arr:\n        if val <= minimal_val:\n            pass\n        res += math.ceil(val / minimal_val) - 1\n    return res\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if len(arr) == 1:\n        results.append(0)\n        continue\n    res = devide(arr, 0)\n    results.append(res)\nlist(map(print, results))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    for i in range(1, n, 1):\n        if (a[i] + 2 * a[0] - 2) / (2 * a[0] - 1) > 1:\n            ans += (a[i] + 2 * a[0] - 2) // (2 * a[0] - 1) - 1\n    t = t - 1\n    print(ans)", "n = int(input())\nh = []\nfor i in range(n):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    k = 0\n    f = a[0] * 2\n    i = 0\n    while i < n:\n        g = a[i]\n        d = 1\n        if g >= f:\n            if f > 2:\n                if g % (f - 1) == 0:\n                    k1 = g // (f - 1) - 1\n                else:\n                    k1 = g // (f - 1)\n                k = k1 + k\n            else:\n                k1 = g // (f // 2)\n                k = k1 + k - 1\n        i = i + 1\n    h.append(k)\nfor t in h:\n    print(t)", "from math import ceil\nfor _ in range(int(input())):\n    (n, l) = (int(input()), [*map(int, input().split())])\n    x = 2 * l[0] - 1\n    print(sum((ceil((i - x) / x) for i in l if i > x)))", "from math import ceil\nfor _ in range(int(input())):\n    (n, l) = (int(input()), [*map(int, input().split())])\n    x = 2 * l[0] - 1\n    print(sum((ceil((i - x) / x) for i in l if i > x)))", "t = int(input())\nfor t1 in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    ans = 0\n    bound = min(a) * 2 - 1\n    for x in a:\n        if x > bound:\n            ans += x // bound\n            if x % bound == 0:\n                ans -= 1\n    print(ans)", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    m = 2 * min(a) - 1\n    print(-sum((-x // m + 1 for x in a)))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    m = 2 * min(a) - 1\n    print(-sum((-x // m + 1 for x in a)))", "for _ in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    num = l1[0] * 2 - 1\n    sum = 0\n    for i in range(1, len(l1)):\n        if l1[i] % num == 0:\n            a = l1[i] // num - 1\n            sum += a\n        else:\n            sum += l1[i] // num\n    print(sum)", "def inp():\n    return int(input())\n\ndef strng():\n    return input().strip()\n\ndef jn(x, l):\n    return x.join(map(str, l))\n\ndef strl():\n    return list(input().strip())\n\ndef mul():\n    return map(int, input().strip().split())\n\ndef mulf():\n    return map(float, input().strip().split())\n\ndef seq():\n    return list(map(int, input().strip().split()))\n\ndef ceil(x):\n    return int(x) if x == int(x) else int(x) + 1\n\ndef ceildiv(x, d):\n    return x // d if x % d == 0 else x // d + 1\nimport math\nfor i in range(inp()):\n    n = inp()\n    lst = seq()\n    m = lst[0] * 2 - 1\n    cnt = 0\n    for i in range(1, n):\n        p = math.ceil(lst[i] / m)\n        if p > 1:\n            cnt += p - 1\n    print(cnt)", "for str in [*open(0)][2::2]:\n    n = (*map(int, str.split()),)\n    M = 2 * min(n) - 1\n    print(-sum((-x // M + 1 for x in n)))", "for S in [*open(0)][2::2]:\n    N = (*map(int, S.split()),)\n    m = 2 * min(N) - 1\n    print(-sum((-x // m + 1 for x in N)))", "from math import ceil\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    pieces = [int(x) for x in input().split()]\n    pieces.sort()\n    s = min(pieces)\n    cuts = 0\n    for p in pieces[1:]:\n        if p >= 2 * s:\n            k = ceil(p / (s * 2 - 1))\n            cuts += k - 1\n    print(cuts)", "for S in [*open(0)][2::2]:\n    N = (*map(int, S.split()),)\n    m = 2 * min(N) - 1\n    print(-sum((-x // m + 1 for x in N)))", "def main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        count = 0\n        list = input()\n        first = ''\n        for j in range(len(list)):\n            if list[j] == ' ':\n                break\n            first += list[j]\n        list = list.split()\n        if int(first) == 1:\n            for j in range(n):\n                count += int(list[j]) - 1\n        else:\n            double = int(first) * 2\n            for j in range(n):\n                count += int(int(list[j]) / (double - 0.9999999))\n        print(count)\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = input().split()\n    arr = [int(i) for i in arr]\n    _sum = 0\n    mod = 2 * arr[0] - 1\n    r = mod - 1\n    for num in arr[1:]:\n        _sum += (num + r) // mod - 1\n    print(_sum)", "import sys\nR = sys.stdin.readline\nfor _ in range(int(R())):\n    (n, res) = (int(R()), 0)\n    t = [*map(int, R().split())]\n    for i in range(1, n):\n        res += (t[i] - 1) // (2 * t[0] - 1)\n    print(res)", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    a = list(input().split())\n    for b in range(n):\n        a[b] = int(a[b])\n    a = sorted(a)\n    m = 2 * a[0] - 1\n    res = 0\n    for i in range(1, n):\n        if a[i] % m == 0:\n            res += a[i] // m - 1\n        else:\n            res += a[i] // m\n    print(res)", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nimport math\nfrom functools import lru_cache\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    mn = min(arr)\n    mn = mn * 2 - 1\n    a = 0\n    for el in arr:\n        if el > mn:\n            a += el // mn\n            if el % mn == 0:\n                a -= 1\n    print(a)", "def getResult(n, a_list):\n    amin = min(a_list)\n    ans = 0\n    for a in a_list:\n        ans += (a - 1) // (2 * amin - 1)\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    a_list = [int(k) for k in input().split()]\n    print(getResult(n, a_list))", "from math import ceil\nfor _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    m = min(lst) * 2 - 1\n    cnt = 0\n    for i in lst:\n        cnt += ceil(i / m) - 1\n    print(cnt)", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split(' ')]\n    mn = min(arr)\n    mx = mn * 2 - 1\n    cuts = 0\n    for val in arr:\n        cuts += ceil(val / mx) - 1\n    print(cuts)", "import sys\nimport math\nflh = sys.stdin\ntest_cases = int(flh.readline())\nres = []\nfor case in range(test_cases):\n    n = int(flh.readline())\n    a = [int(x) for x in flh.readline().strip().split()]\n    m = 2 * min(a) - 1\n    res = 0\n    for i in a:\n        res += math.ceil(i / m) - 1\n    print(res)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    lst.sort()\n    ans = 0\n    for i in range(1, n):\n        ans += (lst[i] + lst[0] * 2 - 2) // (lst[0] * 2 - 1) - 1\n    print(ans)", "for jj in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    if n == 1:\n        print(0)\n    else:\n        ans = 0\n        t = arr[0]\n        for i in range(1, n):\n            if arr[i] >= t * 2:\n                if arr[i] % (t + t - 1) == 0:\n                    ans += arr[i] // (t + t - 1) - 1\n                else:\n                    ans += arr[i] // (t + t - 1)\n        print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    ans = 0\n    a = list(map(int, input().split()))\n    mini = a[0] * 2 - 1\n    for aa in a:\n        if aa > mini:\n            ans += aa // mini\n            if aa % mini == 0:\n                ans -= 1\n    print(ans)", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    mi = min(a)\n    tot = 0\n    for i in range(n):\n        if a[i] >= mi * 2:\n            if a[i] % (2 * mi - 1) == 0:\n                tot += a[i] // (2 * mi - 1) - 1\n            else:\n                tot += a[i] // (2 * mi - 1)\n    print(tot)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    v = arr[0]\n    ans = 0\n    for i in range(1, n):\n        if arr[i] < 2 * v:\n            continue\n        ans += arr[i] // (2 * v - 1) - 1\n        ans += 1 if arr[i] % (2 * v - 1) else 0\n    return ans\nfor _ in range(int(input())):\n    print(solve())", "from math import ceil\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    mn = min(arr)\n    allow = 2 * mn - 1\n    ans = 0\n    for z in arr:\n        ans += ceil(z / allow) - 1\n    return ans\nfor _ in range(int(input())):\n    print(main())", "import math\nfor t in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split(' ')))\n    res = 2 * min(lst) - 1\n    ans = 0\n    for i in lst:\n        ans += math.ceil(i / res) - 1\n    print(ans)", "from math import ceil\nt = int(input())\nfor i in range(t):\n    a = int(input())\n    b = list(map(int, input().split()))\n    step = 0\n    x = min(b)\n    for i in b:\n        step += ceil(i / (2 * x - 1)) - 1\n    print(step)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    k = min(arr)\n    res = 0\n    for el in arr:\n        res += el // (2 * k - 1)\n        if el % (2 * k - 1) == 0:\n            res -= 1\n    print(res)", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    m = a[0]\n    sol = 0\n    for ai in a:\n        sol += ceil(ai / (2 * m - 1)) - 1\n    print(sol)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = 2 * min(a) - 1\n    ans = 0\n    for i in a:\n        ans += math.ceil(i / m) - 1\n    print(ans)", "def slice(arr, N):\n    limit = 2 * arr[0] - 1\n    opertarions = 0\n    for x in arr[1:]:\n        if x < limit:\n            continue\n        opertarions += (x - 1) // limit\n    return opertarions\nOUTPUT = []\nfor _ in range(int(input())):\n    N = int(input())\n    arr = [int(x) for x in input().split()]\n    OUTPUT.append(slice(arr, N))\nfor _ in OUTPUT:\n    print(_)", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    count = 0\n    l = input().split()\n    l1 = []\n    for k in l:\n        l1.append(int(k))\n    l1.sort()\n    div = 2 * l1[0] - 1\n    for i in range(1, n):\n        count += (l1[i] - 1) // div\n    print(count)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    a = A[0]\n    ans = 0\n    for i in range(1, n):\n        b = A[i] / (2 * a - 1)\n        ans += -1 + int(b) + 1 * (int(b) < b)\n    print(ans)", "tttt = int(input())\n\ndef k(x, mn):\n    mn = 2 * mn - 1\n    ans = x // mn\n    if x % mn == 0:\n        ans -= 1\n    return ans\nfor ttt in range(tttt):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    a.sort()\n    a.reverse()\n    mn = a[-1]\n    ans = 0\n    for i in range(n):\n        ans += k(a[i], mn)\n    print(ans)", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    C = 2 * a[0] - 1\n    s = 0\n    for x in a:\n        if x >= a[0] + 1:\n            f = 0\n            if x % C == 0:\n                f = 1\n            s += x // C - f\n    print(s)", "for _ in range(int(input())):\n    (n, a) = (int(input()), tuple(map(int, input().split())))\n    max_value = min(a) * 2 - 1\n    print(sum(((x + max_value - 1) // max_value - 1 for x in a)))", "class T:\n\n    def solve(self):\n        n = int(input())\n        a = sorted(list(map(int, input().split())))\n        (ans, ele) = (0, a[0])\n        for i in range(n):\n            temp = (a[i] + 2 * ele - 2) // (2 * ele - 1)\n            if temp > 1:\n                ans += temp - 1\n        return ans\nfor t in range(int(input())):\n    obj = T()\n    print(obj.solve())", "t = eval(input())\nimport math\nfor i in range(t):\n    n = eval(input())\n    c = 0\n    a = list(map(int, input().split()))\n    a.sort()\n    k = a[0] * 2 - 1\n    for i in range(1, n):\n        c += math.ceil(a[i] / k) - 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    mi = min(arr)\n    limit = mi * 2 - 1\n    ans = 0\n    for i in arr:\n        if i % limit == 0:\n            ans += i // limit - 1\n        else:\n            ans += i // limit\n    print(ans)", "for _ in range(int(input())):\n    a = int(input())\n    b = [int(I) for I in input().split()]\n    b.sort()\n    count = 0\n    for i in range(1, len(b)):\n        c = 2 * b[0]\n        d = (b[i] + c - 2) // (c - 1)\n        if d > 1:\n            count += d - 1\n    print(count)", "t = int(input())\nfor r in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    di = 2 * min(l) - 1\n    s = 0\n    for i in l:\n        d = i // di\n        if i % di == 0:\n            d -= 1\n        s += d\n    print(s)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    x = min(nums)\n    k = 2 * x - 1\n    res = 0\n    for y in nums:\n        if y <= k:\n            continue\n        res += (y + k - 1) // k - 1\n    print(res)", "import math\nntestcases = int(input())\nfor i in range(ntestcases):\n    n = int(input())\n    sizes = list(map(int, input().split()))\n    smolest_tangerine = min(sizes)\n    maxSize = smolest_tangerine * 2 - 1\n    steps = 0\n    for size in sizes:\n        steps += math.ceil(size / maxSize) - 1\n    print(steps)", "from math import ceil\ntest = int(input())\nfor t in range(test):\n    n = int(input())\n    A = list(map(int, input().split()))\n    p = A[0]\n    ans = 0\n    for i in range(1, n):\n        if A[i] > 2 * p - 1:\n            ans += ceil(A[i] / (2 * p - 1)) - 1\n    print(ans)", "n_tests = int(input().strip())\nfor _ in range(n_tests):\n    n = int(input())\n    a = [int(i) for i in input().strip().split()]\n    minsize = min(a)\n    maxsize = minsize * 2 - 1\n    num_step = 0\n    for piece in a:\n        if piece <= maxsize:\n            continue\n        else:\n            num_step += piece // maxsize + int(piece % maxsize != 0) - 1\n    print(num_step)", "from math import ceil\n\ndef solve(n, arr):\n    bound = arr[0] * 2 - 1\n    sum = 0\n    for num in arr:\n        sum += ceil(num / bound) - 1\n    return sum\ntest = int(input())\nfor i in range(test):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    c = solve(n, arr)\n    print(c)", "def fun(i, x):\n    if i % x == 0:\n        return i // x - 1\n    return i // x\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = 2 * min(a) - 1\n    s = 0\n    for i in a:\n        s += fun(i, x)\n    print(s)", "import math\nt = int(input())\nfor _ in range(t):\n    k = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    b = 2 * arr[0] - 1\n    c = 0\n    d = len(arr)\n    for i in arr:\n        c += math.ceil(i / b)\n    print(c - d)", "import math\nN = int(input())\nfor _ in range(N):\n    n = int(input())\n    A = [int(x) for x in input().split(' ')]\n    A = sorted(A)\n    if n == 1:\n        print(0)\n        continue\n    Q = 2 * A[0] - 1\n    ans = 0\n    for i in range(1, n):\n        if A[i] >= 2 * A[0]:\n            ans += math.ceil(A[i] / Q) - 1\n    print(f'{ans}')", "import math\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    res = 0\n    small = 2 * min(A) - 1\n    for i in A:\n        if i > small:\n            res += math.ceil(i / small) - 1\n    print(res)", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    m = 2 * min(a) - 1\n    print(-sum((-x // m + 1 for x in a)))", "import heapq\ncases = int(input())\nfor _ in range(cases):\n    _ = input()\n    peaces = list(map(int, input().split()))\n    peaces.reverse()\n    upper_bound = peaces[-1]\n    steps = 0\n    for peace in peaces:\n        if peace < 2 * upper_bound:\n            break\n        steps += (peace - 1) // (2 * upper_bound - 1)\n    print(steps)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    ans = 0\n    a = [*map(int, input().split())]\n    a.sort()\n    d = a[0] * 2\n    for i in a:\n        if i >= d:\n            ans += math.ceil(i / (d - 1)) - 1\n    print(ans)", "test = int(input())\nfor t in range(test):\n    n = int(input())\n    a = list(map(int, input().split()))\n    min_a = a[0]\n    max_a = min_a * 2\n    score = 0\n    for i in range(1, n):\n        if a[i] < max_a:\n            pass\n        else:\n            score += a[i] // (max_a - 1)\n            if a[i] % (max_a - 1) != 0:\n                score += 1\n            score -= 1\n    print(score)", "import math\nt = int(input())\nwhile t != 0:\n    c = 0\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    minm = min(arr)\n    for i in range(n):\n        if arr[i] >= minm * 2:\n            x = arr[i] / (minm * 2 - 1)\n            c += math.floor(x)\n            if math.floor(x) == x:\n                c -= 1\n    print(c)\n    t -= 1", "for i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    a = 0\n    e = min(arr)\n    for i in range(n):\n        x = arr[i] + 2 * e - 2\n        y = 2 * e - 1\n        t = x // y\n        if t > 1:\n            a += t - 1\n    print(a)", "import math\nn = int(input())\nfor i in range(n):\n    t = int(input())\n    arr = list(map(int, input().split()))\n    if t == 1:\n        print(0)\n    else:\n        first = 2 * arr[0] - 1\n        ans = 0\n        for i in range(len(arr)):\n            if arr[i] >= first:\n                ans += math.ceil(arr[i] / first) - 1\n        print(ans)", "def solve():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    minm = min(a)\n    thress = minm * 2 - 1\n    ans = 0\n    for i in range(1, n):\n        if minm == 1:\n            ans += a[i] - 1\n        elif a[i] > thress:\n            ans += (a[i] + thress - 1) // thress - 1\n    print(ans)\nt = int(input())\nfor i in range(t):\n    solve()", "for _ in range(int(input())):\n    t = int(input())\n    arr = list(map(int, input().split()))\n    if t == 1:\n        print(0)\n        continue\n    first = arr[0]\n    res = 0\n    if first != 1:\n        for i in range(1, t):\n            if arr[i] % (2 * first - 1) == 0:\n                res -= 1\n            res += arr[i] // (2 * first - 1)\n    else:\n        for i in range(1, t):\n            res += arr[i] - 1\n    print(res)", "def getint():\n    return [int(i) for i in input().split()]\n\ndef get():\n    return int(input())\n\ndef S():\n    for test in range(int(input())):\n        solve()\n\ndef solve():\n    import math\n    n = get()\n    a = getint()\n    a.sort()\n    mi = a[0]\n    ma = a[-1]\n    ans = 0\n    for i in range(n):\n        if a[i] / mi >= 2:\n            x = math.ceil(a[i] / (mi * 2 - 1)) - 1\n            ans += x\n        else:\n            continue\n    print(ans)\nS()", "from math import ceil\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n    else:\n        k = min(a) * 2 - 1\n        steps = 0\n        for i in a:\n            if i > k:\n                if i % k == 0:\n                    steps += i // k - 1\n                else:\n                    steps += i // k\n        print(steps)", "import math\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    n = a[0]\n    m = 2 * n - 1\n    count = []\n    for i in a:\n        if i < m:\n            continue\n        else:\n            q = math.ceil(i / m)\n            count.append(q - 1)\n    return sum(count)\nfor t in range(0, int(input())):\n    print(solve())", "from math import ceil\nans = []\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mi = min(a) * 2 - 1\n    su = 0\n    for e in a:\n        su += ceil(e / mi)\n    ans.append(str(su - n))\nprint('\\n'.join(ans))", "import math\nT = int(input())\nfor t in range(0, T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    for i in range(1, n):\n        if a[i] - (2 * a[0] - 1) >= 0:\n            ans += math.ceil((a[i] - (2 * a[0] - 1)) / (2 * a[0] - 1))\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    peel = list(map(int, input().split()))\n    cut = 0\n    for i in range(1, n):\n        a = peel[0] * 2 - 1\n        x = peel[i] - 1\n        cut += x // a\n    print(cut)", "def N():\n    return int(input())\n\ndef A():\n    return [int(x) for x in input().split()]\n\ndef S():\n    return input()\nfor _ in range(N()):\n    n = N()\n    if 't9gjt489i54gitrgu54te0ut89ut9' == 5485545947598347495:\n        print('Tanmay')\n    a = A()\n    mini = 2 * min(a) - 1\n    if mini == 0:\n        print(sum(a) - n)\n        continue\n    c = 0\n    for i in a:\n        c += i // mini\n        if not i % mini:\n            c -= 1\n            continue\n    print(c)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().strip().split()))\n    co = 0\n    l.sort()\n    a = l[0]\n    b = 2 * a - 1\n    for i in l:\n        co += i // b\n        if i % b == 0:\n            co -= 1\n    print(co)", "t = input()\nfor i in range(int(t)):\n    n = int(input())\n    sizes = input().split()\n    limit = int(sizes[0]) * 2 - 1\n    step = 0\n    for item in sizes:\n        step += (int(item) - 1) // limit\n    print(step)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    res = 0\n    arr.sort()\n    for k in arr:\n        ctr = k + 2 * arr[0] - 2\n        ctk = 2 * arr[0] - 1\n        diff = ctr // ctk\n        if diff > 1:\n            res += ctr // ctk - 1\n    print(res)", "def ten_with_tangerines():\n    n = int(input())\n    lst_ans = []\n    for i in range(n):\n        len_1 = int(input())\n        lst_1 = list(map(int, input().split()))\n        min_1 = min(lst_1)\n        ans = 0\n        if lst_1[0] == 1:\n            for y in lst_1:\n                ans = ans + y - 1\n        else:\n            for u in lst_1:\n                a = 0\n                if u >= 2 * min_1:\n                    if u == 2 * min_1:\n                        a = 1\n                    elif u % (2 * min_1 - 1) == 0:\n                        a = u // (2 * min_1 - 1) - 1\n                    else:\n                        a = u // (2 * min_1 - 1)\n                ans = ans + a\n        lst_ans.append(ans)\n    for u in lst_ans:\n        print(u)\nten_with_tangerines()", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    a = min(l) * 2 - 1\n    for j in l:\n        if j > a:\n            if j % a == 0:\n                c += j // a - 1\n            else:\n                c += j // a\n    print(c)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    min_a = min(a) * 2 - 1\n    res = 0\n    for x in a[1:]:\n        if x > min_a:\n            res += x // min_a - 1\n            if x % min_a:\n                res += 1\n    print(res)", "t = int(input())\nfor i in range(0, t):\n    m = int(input())\n    l = [int(x) for x in input().split()]\n    c = 0\n    for i in range(1, m):\n        if l[i] >= 2 * l[0]:\n            c += l[i] // (2 * l[0] - 1)\n            if l[i] % (2 * l[0] - 1) == 0:\n                c -= 1\n    print(c)", "import math\nfor _ in range(int(input())):\n    array_len = int(input())\n    arr = list(map(int, input().split()))\n    result = 0\n    diff = arr[0] * 2\n    min_piece = arr[0]\n    for i in range(1, array_len):\n        if arr[i] >= diff:\n            count = math.ceil(arr[i] / (diff - 1)) - 1\n            result += count\n    print(result)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    mini = min(arr)\n    ans = 0\n    for i in arr:\n        if i < 2 * mini:\n            ans += 0\n        else:\n            ans += i // (2 * mini - 1) - 1 * (i % (2 * mini - 1) == 0)\n    print(ans)", "import sys, math\nsys.setrecursionlimit(1000000)\nres = []\nfor _ in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    smallest = min(b)\n    res.append(sum([max(0, math.ceil((i - (2 * smallest - 1)) / (2 * smallest - 1))) for i in b]))\nprint(*res, sep='\\n')", "(t, k, h) = (int(input()), 0, [])\nfor _ in range(t):\n    n = int(input())\n    s = input().split()\n    s = [int(i) for i in s]\n    for i in range(len(s)):\n        if i != 0:\n            if s[i] % (s[0] * 2 - 1) == 0:\n                k += s[i] // (s[0] * 2 - 1)\n                k -= 1\n            else:\n                k += s[i] // (s[0] * 2 - 1)\n    h.append(k)\n    k = 0\nprint(*h, sep='\\n')", "for _ in range(int(input())):\n    n = int(input())\n    nn = 0\n    a = list(map(int, input().split()))\n    a.sort()\n    for i in range(1, n):\n        if a[i] >= a[0] + a[0]:\n            if a[i] % (a[0] + a[0] - 1) == 0:\n                nn = nn + int(a[i] / (a[0] + a[0] - 1)) - 1\n            else:\n                nn = nn + int(a[i] / (a[0] + a[0] - 1))\n    print(int(nn))", "from math import floor\nfor _ in range(int(input())):\n    input()\n    a = list(map(int, input().split()))\n    q = a[0]\n    p = a[0] * 2 - 1\n    cuts = 0\n    for i in range(1, len(a)):\n        peel = a[i]\n        if peel % p == 0:\n            cuts += floor(peel / p - 1)\n        else:\n            cuts += floor(peel / p)\n    print(cuts)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    minm = min(lst)\n    counter = 0\n    for i in range(len(lst)):\n        if lst[i] % (2 * minm - 1) == 0:\n            counter += lst[i] // (2 * minm - 1) - 1\n        else:\n            counter += lst[i] // (2 * minm - 1)\n    print(counter)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    temp = min(a) * 2 - 1\n    ans = 0\n    for i in a:\n        ans += (i - 1) // temp\n    print(ans)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    num = list(map(int, input().split()))\n    ans = 0\n    if n == 1:\n        print(0)\n        continue\n    num.sort()\n    a = num[0]\n    ans = 0\n    for i in range(1, n):\n        x = num[i]\n        if x >= 2 * a:\n            if x % (2 * a - 1) == 0:\n                ans += x // (2 * a - 1) - 1\n            else:\n                ans += x // (2 * a - 1)\n    print(ans)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    sizes = map(int, input().split())\n    sizes = list(sizes)\n    a1 = 2 * min(sizes) - 1\n    sum = 0\n    for i in range(0, n):\n        p = int((sizes[i] - 1) / a1)\n        sum += p\n    print(sum)", "T = int(input())\nwhile T:\n    n = int(input())\n    arr = input().split()\n    arr = [int(k) for k in arr]\n    arr.sort()\n    minn = 2 * arr[0] - 1\n    ans = 0\n    for x in arr:\n        if (x + minn - 1) // minn > 1:\n            ans += (x + minn - 1) // minn - 1\n    print(ans)\n    T -= 1", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = min(l)\n    ans = 0\n    t = 2 * x - 1\n    for i in l:\n        ans += math.ceil(i / t)\n    print(ans - n)", "t = 0\nn = int(input(''))\nfor i in range(n):\n    t = 0\n    m = int(input(''))\n    s = input('')\n    a = s.split(' ')\n    a = list(map(int, a))\n    for j in range(1, m):\n        if a[j] / (a[0] * 2 - 1) == a[j] // (a[0] * 2 - 1):\n            tmp = a[j] // (a[0] * 2 - 1) - 1\n        else:\n            tmp = a[j] // (a[0] * 2 - 1)\n        t += tmp\n    print(t)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    minn = min(a)\n    k = 2 * minn - 1\n    c = 0\n    if minn == 1:\n        for j in range(n):\n            c += a[j] - 1\n    else:\n        for j in range(n):\n            if a[j] >= k + 1:\n                c += int(a[j] / k)\n                if a[j] % k == 0:\n                    c -= 1\n            else:\n                pass\n    print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = [int(x) for x in input().split()]\n    count = 0\n    for x in s:\n        if x >= 2 * s[0]:\n            c = x // (2 * s[0] - 1)\n            if x % (2 * s[0] - 1) == 0:\n                c -= 1\n            count += c\n    print(count)", "test = int(input())\nwhile test:\n    test -= 1\n    N = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    m = min(a)\n    m = 2 * m - 1\n    if m == 1:\n        ans = sum(a) - N\n    else:\n        for i in a:\n            if i > m:\n                if i % m == 0:\n                    ans += i // m - 1\n                else:\n                    ans += i // m\n    print(ans)", "import math\n\ndef solve(n, arr):\n    p = 2 * min(arr) - 1\n    s = 0\n    for i in range(n):\n        s += math.ceil(arr[i] / p) - 1\n    return s\nfor t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(solve(n, arr))", "import math\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    arr = input()\n    arr = [int(x) for x in arr.split()]\n    count = 0\n    arr.sort()\n    minn = arr[0]\n    boundary = 2 * minn - 1\n    for i in range(len(arr)):\n        k = math.ceil(arr[i] / boundary)\n        if k != 1:\n            count += k - 1\n    print(count)", "import math\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    m = min(a)\n    M = 2 * m - 1\n    for i in range(n):\n        k = math.ceil(a[i] / M)\n        s = s + k - 1\n    print(int(s))"]