["for _ in range(int(input())):\n    s = list(input())\n    t = input()\n    if t == 'abc':\n        s = ''.join(sorted(s))\n        i_c = s.count('c')\n        i_b = s.count('b')\n        print(s.replace('a' + 'b' * i_b + 'c' * i_c, 'a' + 'c' * i_c + 'b' * i_b))\n    else:\n        print(''.join(sorted(s)))", "n = int(input())\nfor _ in range(n):\n    text = input()\n    per = input()\n    text = sorted(text)\n    text = ''.join(text)\n    a = text.count('a')\n    b = text.count('b')\n    c = text.count('c')\n    if per == 'abc' and a != 0 and (b != 0) and (c != 0):\n        temp = 'a' * a + 'c' * c + 'b' * b\n    else:\n        temp = 'a' * a + 'b' * b + 'c' * c\n    ans = temp + text[a + b + c:]\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    s = sorted(input())\n    t = input()\n    s = ''.join(s)\n    if 'a' in s and 'b' in s and ('c' in s) and (t == 'abc'):\n        sx = s.count('a') + s.count('b') + s.count('c')\n        print('a' * s.count('a') + 'c' * s.count('c') + 'b' * s.count('b') + s[sx:])\n    else:\n        print(s)", "for _ in range(int(input())):\n    s = list(input())\n    T = input()\n    S2 = sorted(s)\n    if T == 'abc' and T in ''.join(sorted(list(set(S2)))):\n        result = [i for i in S2 if i == 'a' or i == 'c']\n        result = result + [i for i in S2 if i != 'a' and i != 'c']\n        print(''.join(result))\n    else:\n        print(''.join(S2))", "for _ in range(int(input())):\n    s = input()\n    t = input()\n    if 'a' not in s or 'b' not in s or 'c' not in s:\n        s = ''.join(sorted(s))\n        print(s)\n    elif t != 'abc':\n        s = ''.join(sorted(s))\n        print(s)\n    else:\n        s = sorted(s)\n        cnt_a = s.count('a')\n        cnt_b = s.count('b')\n        cnt_c = s.count('c')\n        ans = 'a' * cnt_a + 'c' * cnt_c + 'b' * cnt_b\n        s = ''.join(s)\n        ans += s[cnt_a + cnt_b + cnt_c:]\n        print(ans)", "for test in range(int(input())):\n    s = input()\n    t = input()\n    ans = ''\n    s = list(s)\n    s.sort()\n    if t == 'abc' and s.count('a') != 0 and (s.count('b') != 0) and (s.count('c') != 0):\n        ans += s.count('a') * 'a'\n        ans += s.count('c') * 'c'\n        ans += s.count('b') * 'b'\n        for i in range(len(s)):\n            if s[i] != 'a' and s[i] != 'b' and (s[i] != 'c'):\n                ans += s[i]\n    else:\n        ans = ''.join(s)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    s1 = input()\n    s2 = input()\n    s3 = sorted(s1)\n    n1 = s1.count('a')\n    n2 = s1.count('b')\n    n3 = s1.count('c')\n    if s2 == 'abc':\n        if n1 != 0:\n            print(''.join(['a' * s1.count('a') + 'c' * s1.count('c') + 'b' * s1.count('b')] + s3[n1 + n2 + n3:]))\n        else:\n            print(''.join(s3))\n    else:\n        print(''.join(s3))", "n = int(input())\nwhile n != 0:\n    st = input()\n    chk = input()\n    x = ''.join(sorted(st))\n    s = ''\n    if 'a' not in st or 'b' not in st or 'c' not in st:\n        print(x)\n    elif chk != 'abc':\n        print(x)\n    else:\n        for i in ['a', 'b', 'c']:\n            x = x.replace(i, '')\n        print(st.count('a') * 'a' + st.count('c') * 'c' + st.count('b') * 'b' + x)\n    n -= 1", "for _ in range(int(input())):\n    s = input()\n    T = input()\n    s2 = ''.join(sorted(s))\n    if T == 'abc' and 'a' in s2 and ('b' in s2) and ('c' in s2):\n        s2 = [i for i in s2]\n        ind2 = len(s2) - 1 - s2[::-1].index('c')\n        ind1 = s2.index('c')\n        ind0 = len(s2) - 1 - s2[::-1].index('a')\n        s2 = s2[:ind0 + 1] + s2[ind1:ind2 + 1] + s2[ind0 + 1:ind1] + s2[ind2 + 1:]\n        s2 = ''.join(s2)\n    print(s2)", "from sys import stdin\n\ndef solve():\n    for _ in range(int(stdin.readline().strip())):\n        S = sorted(list(stdin.readline().rstrip()))\n        T = stdin.readline().rstrip()\n        s = ''.join(S)\n        if T != 'abc' or s.find('a') == -1 or s.find('b') == -1 or (s.find('c') == -1):\n            print(s)\n            continue\n        ans = 'a' * s.count('a') + 'c' * s.count('c') + 'b' * s.count('b')\n        for x in s:\n            if x not in {'a', 'b', 'c'}:\n                ans += x\n        print(ans)\nsolve()", "def solve():\n    (s, t) = (input(), input())\n    s = ''.join(sorted(s))\n    if t == 'abc' and 'a' in s and ('b' in s) and ('c' in s):\n        s = s.count('a') * 'a' + 'c' * s.count('c') + 'b' * s.count('b') + s[s.rfind('c') + 1:]\n    return s\nfor _ in range(int(input())):\n    print(solve())", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (s, t) = (input(), input())\n    s = s[:len(s) - 1]\n    t = t[:len(t) - 1]\n    s = ''.join(sorted(s))\n    if t == 'abc' and 'a' in s and ('b' in s) and ('c' in s):\n        s = s.count('a') * 'a' + 'c' * s.count('c') + 'b' * s.count('b') + s[s.rfind('c') + 1:]\n    return s\nfor _ in range(int(input())):\n    print(solve())", "for _ in range(int(input())):\n    (s, t) = (''.join(sorted(list(input()))), input())\n    if t == 'abc' and s.count('a') > 0 and (s.count('b') > 0) and (s.count('c') > 0):\n        (p, cnt1, cnt2) = (s.find('b'), s.count('b'), s.count('c'))\n        s = s[:p] + 'c' * cnt2 + 'b' * cnt1 + s[p + cnt1 + cnt2:]\n    print(s)", "def find_string(s, t):\n    s = s\n    t = t\n    s1 = sorted(s)\n    s1 = ''.join(s1)\n    if t != 'abc' or 'b' not in s1 or 'a' not in s1 or ('c' not in s1):\n        print(s1)\n    else:\n        a1 = s.count('a')\n        b1 = s.count('b')\n        c1 = s.count('c')\n        y = []\n        for i in s1:\n            if i != 'a' and i != 'b' and (i != 'c'):\n                y.append(i)\n        later = ''.join(y)\n        firts = 'a' * a1 + 'c' * c1 + 'b' * b1\n        print(firts + later)\nt1 = int(input())\nwhile t1:\n    s = input()\n    t = input()\n    find_string(s, t)\n    t1 -= 1", "t = int(input())\nlis = []\nfor i in range(t):\n    s = input()\n    T = input()\n    if T != 'abc' or s.count('a') == 0 or s.count('b') == 0 or (s.count('c') == 0):\n        s1 = ''.join(sorted(s))\n        lis.append(s1)\n    else:\n        s1 = ''.join(sorted(s))\n        m = s1.count('b')\n        s1 = s1.replace('b', '')\n        s1 = s1[:s1.index('c') + s1.count('c')] + 'b' * m + s1[s1.index('c') + s1.count('c'):]\n        lis.append(s1)\nprint(*lis, sep='\\n')", "for i in range(int(input())):\n    s = input()\n    t = input()\n    if t != 'abc':\n        print(''.join(sorted(s)))\n    elif not all((c in s for c in 'abc')):\n        print(''.join(sorted(s)))\n    else:\n        s2 = s.translate(str.maketrans('bc', 'cb'))\n        s2 = ''.join(sorted(s2))\n        s = s2.translate(str.maketrans('bc', 'cb'))\n        print(s)", "loop = int(input())\nfor _ in range(loop):\n    lista = sorted(input())\n    seq = input()\n    lista = ''.join(lista)\n    if 'a' in lista and 'b' in lista and ('c' in lista) and (seq == 'abc'):\n        sx = lista.count('a') + lista.count('b') + lista.count('c')\n        print('a' * lista.count('a') + 'c' * lista.count('c') + 'b' * lista.count('b') + lista[sx:])\n    else:\n        print(lista)", "loop = int(input())\nfor _ in range(loop):\n    lista = sorted(input())\n    seq = input()\n    lista = ''.join(lista)\n    if 'a' in lista and 'b' in lista and ('c' in lista) and (seq == 'abc'):\n        abc = lista.count('a') + lista.count('b') + lista.count('c')\n        print('a' * lista.count('a') + 'c' * lista.count('c') + 'b' * lista.count('b') + lista[abc:])\n    else:\n        print(lista)", "for _ in range(int(input())):\n    s = list(input())\n    t = input()\n    if t == 'abc':\n        s = ''.join(sorted(s))\n        i_c = s.count('c')\n        i_b = s.count('b')\n        print(s.replace('a' + 'b' * i_b + 'c' * i_c, 'a' + 'c' * i_c + 'b' * i_b))\n    else:\n        print(''.join(sorted(s)))", "for _ in range(int(input())):\n    (s, t) = (input(), input())\n    s = ''.join(sorted(s))\n    if t == 'abc' and 'a' in s and ('b' in s) and ('c' in s):\n        s = s[:s.find('b')] + 'c' * s.count('c') + 'b' * s.count('b') + s[s.rfind('c') + 1:]\n    print(s)", "t = int(input())\nfor _ in range(t):\n    s = list(input())\n    s.sort()\n    s = ''.join(s)\n    x = input()\n    a = s.count('a')\n    b = s.count('b')\n    c = s.count('c')\n    if x != 'abc' or a * b * c == 0:\n        print(s)\n    else:\n        l = len(s)\n        print(a * 'a' + c * 'c' + b * 'b' + s[a + b + c:l])", "for k in range(int(input())):\n    s = sorted(list(input()))\n    t = input()\n    if 'a' in s and 'b' in s and ('c' in s) and (t == 'abc'):\n        i2 = s.index('b')\n        s = ''.join(s)\n        i3 = s.count('a') + s.count('b') + s.count('c')\n        s = 'a' * s.count('a') + 'c' * s.count('c') + 'b' * s.count('b') + s[i3:]\n    else:\n        s = ''.join(s)\n    print(s)", "num_seqs = int(input())\nfor i in range(num_seqs):\n    seq_sorted = ''.join(sorted(input()))\n    verify = input()\n    start = 0\n    end = 0\n    index_verify = 0\n    changer = False\n    result = ''\n    parcial = ''\n    if verify == 'abc':\n        for i in range(len(seq_sorted)):\n            if seq_sorted[i] == seq_sorted[end]:\n                end = i\n            else:\n                if index_verify + 1 < len(verify) and seq_sorted[i] == verify[index_verify + 1]:\n                    index_verify += 1\n                if changer and seq_sorted[i] == verify[index_verify]:\n                    parcial = seq_sorted[start:end + 1]\n                else:\n                    result += seq_sorted[start:end + 1]\n                    if parcial:\n                        result += parcial\n                        parcial = ''\n                changer = seq_sorted[end + 1] == verify[index_verify]\n                start = i\n                end = i\n        result += seq_sorted[start:end + 1] + parcial\n    else:\n        result = seq_sorted\n    print(result)", "t = int(input())\nfor _ in range(t):\n    text = input()\n    permutation = input()\n    text = sorted(text)\n    text = ''.join(text)\n    a = text.count('a')\n    b = text.count('b')\n    c = text.count('c')\n    if permutation == 'abc' and a != 0 and (b != 0) and (c != 0):\n        temp = 'a' * a + 'c' * c + 'b' * b\n    else:\n        temp = 'a' * a + 'b' * b + 'c' * c\n    s = temp + text[a + b + c:]\n    print(s)", "problem_num = int(input())\nfor i in range(problem_num):\n    S = input()\n    T = input()\n    if T == 'abc' and 'a' in S and ('b' in S) and ('c' in S):\n        S = ''.join(sorted(S))\n        b = S.count('b')\n        c = S.count('c')\n        if len(S) > S.index('c') + c:\n            S = S[:S.index('b')] + 'c' * c + 'b' * b + S[S.index('c') + c:]\n        else:\n            S = S[:S.index('b')] + 'c' * c + 'b' * b\n        print(S)\n    else:\n        print(''.join(sorted(S)))", "for _ in range(int(input())):\n    s = list(input())\n    t = input()\n    if t == 'abc':\n        s = ''.join(sorted(s))\n        i_c = s.count('c')\n        i_b = s.count('b')\n        print(s.replace('a' + 'b' * i_b + 'c' * i_c, 'a' + 'c' * i_c + 'b' * i_b))\n    else:\n        print(''.join(sorted(s)))", "entrada = int(input())\nfor t in range(entrada):\n    name = sorted(input())\n    aux = input()\n    if aux == 'abc' and 'b' in name and ('c' in name) and ('a' in name):\n        name = ''.join((str(elem) for elem in name))\n        x = name.count('a')\n        y = name.count('b')\n        z = name.count('c')\n        result = x + y + z\n        name = 'a' * x + 'c' * z + 'b' * y + name[result:]\n    else:\n        name = ''.join((str(elem) for elem in name))\n    print(name)", "tst = int(input())\nfor i in range(tst):\n    s = ''.join(sorted(input()))\n    t = input()\n    a = s.count('a')\n    b = s.count('b')\n    c = s.count('c')\n    if t == 'abc' and 'a' in s and ('b' in s) and ('c' in s):\n        print(a * 'a' + c * 'c' + b * 'b' + s[a + b + c:])\n    else:\n        print(s)", "entry = int(input())\nfor i in range(entry):\n    s = ''.join(sorted(input()))\n    t = input()\n    a = s.count('a')\n    b = s.count('b')\n    c = s.count('c')\n    if t == 'abc' and 'a' in s and ('b' in s) and ('c' in s):\n        print(a * 'a' + c * 'c' + b * 'b' + s[a + b + c:])\n    else:\n        print(s)", "answers = []\nfor _ in range(int(input())):\n    inp = input()\n    t = input()\n    if t == 'abc':\n        o = {x: 0 for x in inp}\n        for (i, c) in enumerate(sorted(inp)):\n            o[c] += 1\n        if o.get('b') and o.get('c') and o.get('a'):\n            new_string = ''\n            if o.get('a'):\n                new_string += 'a' * o.get('a')\n                del o['a']\n            new_string += 'c' * o.get('c')\n            new_string += 'b' * o.get('b')\n            p = ''\n            for item in inp:\n                if item not in ['a', 'b', 'c']:\n                    p += item\n            ans = new_string + ''.join(sorted(p))\n        else:\n            ans = ''.join(sorted(inp))\n    else:\n        ans = ''.join(sorted(inp))\n    answers.append(ans)\n    print(ans)", "for _ in [0] * int(input()):\n    s = sorted(input())\n    t = str(input())\n    if t != 'abc':\n        print(''.join(s))\n    else:\n        x = s.count('a')\n        y = s.count('b')\n        z = s.count('c')\n        if x:\n            print('a' * x + 'c' * z + 'b' * y + ''.join([i for i in s if i not in 'abc']))\n        else:\n            print('b' * y + 'c' * z + ''.join([i for i in s if i not in 'abc']))", "for _ in range(int(input())):\n    line = ''.join(sorted(input()))\n    t = input()\n    if t == 'abc' and all((x in line for x in 'abc')):\n        temp = line.count('c')\n        line = line.replace('c', 'b')\n        print(line.replace('b', 'c', temp))\n    else:\n        print(line)", "def get_start_end(arr, target):\n    s = arr.index(target)\n    e = s\n    while e < len(arr) and arr[e] == target:\n        e += 1\n    return (s, e - 1)\nt = int(input())\nfor _ in range(t):\n    s = list(input())\n    t = input()\n    s.sort()\n    res = s\n    if 'a' in s and 'b' in s and ('c' in s) and (t == 'abc'):\n        (bs, be) = get_start_end(s, 'b')\n        (cs, ce) = get_start_end(s, 'c')\n        res = s[:bs]\n        res += s[cs:ce + 1]\n        res += s[bs:be + 1]\n        res += s[ce + 1:]\n    print(''.join(res))", "for _ in range(int(input())):\n    s = input()\n    t = input()\n    a = ''.join(sorted(s))\n    if t == 'abc' and 'a' in s and ('b' in s) and ('c' in s):\n        ind = a.rfind('a')\n        l = a.count('c')\n        a = a.replace('c', '')\n        a = a[:ind + 1] + 'c' * l + a[ind + 1:]\n        print(a)\n    else:\n        print(a)", "for jj in range(int(input())):\n    (s, t) = (input(), input())\n    s1 = sorted(list(s))\n    s2 = ''.join(s1)\n    if t != 'abc':\n        print(s2)\n    elif 'a' in s and 'b' in s and ('c' in s):\n        (a, b, c) = (s.count('a'), s.count('b'), s.count('c'))\n        print('a' * a + 'c' * c + 'b' * b + ''.join(s1[a + b + c:]))\n    else:\n        print(s2)", "def fix(S):\n    (ca, cb, cc) = (0, 0, 0)\n    for c in S:\n        if c == 'a':\n            ca += 1\n        if c == 'b':\n            cb += 1\n        if c == 'c':\n            cc += 1\n    if ca == 0 or cb == 0 or cc == 0:\n        return S\n    S[ca:ca + cc] = ['c'] * cc\n    S[ca + cc:ca + cc + cb] = ['b'] * cb\n    return S\n\ndef solve():\n    S = input()\n    T = input()\n    S = list(S)\n    S.sort()\n    if T == 'abc':\n        S = fix(S)\n    return ''.join(S)\nT = int(input())\nfor i in range(T):\n    print(solve())", "import math\nimport functools\nfrom sys import stdout\nn = int(input())\nfor i in range(0, n):\n    s = input()\n    t = input()\n    s = ''.join(list(sorted(s)))\n    if t[1:] == 'bc' and 'a' in s and ('b' in s) and ('c' in s):\n        a = s.count('a')\n        c = s.count('c')\n        b = s.count('b')\n        s = s.replace('a', '')\n        s = s.replace('b', '')\n        s = s.replace('c', '')\n        s = ''.ljust(a, 'a') + ''.ljust(c, 'c') + ''.ljust(b, 'b') + s\n    print(s)", "def solve(a, t):\n    if t == 'abc':\n        s = sorted(a)\n        if a.count('a') > 0:\n            new_string = 'a' * a.count('a') + 'c' * a.count('c') + 'b' * a.count('b')\n            for i in range(len(new_string)):\n                s[i] = new_string[i]\n        return ''.join([x for x in s])\n    else:\n        return ''.join([x for x in sorted(a)])\nt = int(input())\nfor test_case in range(t):\n    string = input()\n    pattern = input()\n    print(solve(string, pattern))", "tc = int(input())\nstart = 1\nwhile start <= tc:\n    s = input()\n    t = input()\n    if t != 'abc':\n        x = ''.join(sorted(s))\n        print(x)\n    elif t == 'abc' and 'a' not in s:\n        x = ''.join(sorted(s))\n        print(x)\n    else:\n        a = ''\n        b = ''\n        for i in s:\n            if i == 'a' or i == 'c':\n                a = a + i\n            else:\n                b = b + i\n        x = ''.join(sorted(a))\n        y = ''.join(sorted(b))\n        print(x + y)\n    start += 1", "t = int(input())\nfor i in range(t):\n    s = input()\n    t = input()\n    l1 = []\n    if t != 'abc':\n        for i in s:\n            l1.append(i)\n        l1 = sorted(l1)\n        j = ''\n        j = j.join(l1)\n        print(j)\n    else:\n        a1 = []\n        a2 = []\n        a3 = []\n        a4 = []\n        for i in s:\n            if i == 'a':\n                a1.append(i)\n            elif i == 'b':\n                a2.append(i)\n            elif i == 'c':\n                a3.append(i)\n            else:\n                a4.append(i)\n        a4 = sorted(a4)\n        v = ''\n        if len(a1) > 0 and len(a2) > 0 and (len(a3) > 0):\n            for i in a1:\n                v = v + i\n            for i in a3:\n                v = v + i\n            for i in a2:\n                v = v + i\n            if len(a4) > 0:\n                for i in a4:\n                    v = v + i\n        else:\n            w = []\n            if len(a1) > 0:\n                w.extend(a1)\n            if len(a2) > 0:\n                w.extend(a2)\n            if len(a3) > 0:\n                w.extend(a3)\n            if len(a4) > 0:\n                w.extend(a4)\n            v = v.join(w)\n        print(v)", "from itertools import *\n\ndef f(perm, permabc):\n    if permabc != 'abc' or 'a' not in perm or 'b' not in perm or ('c' not in perm):\n        return ''.join(sorted(perm))\n    c = ''.join(sorted(perm, key=lambda x: ord(x) if x not in ('b', 'c') else 98 + 99 - ord(x)))\n    return c\na = int(input())\nl = []\nfor i in range(a):\n    l.append((input(), input()))\nout = []\nfor i in l:\n    out.append(f(i[0], i[1]))\nfor i in out:\n    print(i)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    a = sorted(input().strip())\n    t = input().strip()\n    one = a.count(t[0])\n    two = a.count(t[1])\n    thr = a.count(t[2])\n    if one > 0 and two > 0 and (thr > 0):\n        if t[0] == 'a':\n            print(t[0] * one + t[2] * thr + t[1] * two, end='')\n        else:\n            print('a' * a.count('a') + 'b' * a.count('b') + 'c' * a.count('c'), end='')\n    elif one + two + thr == 0:\n        print('', end='')\n    elif one + two == 0:\n        print(t[2] * thr, end='')\n    elif one + thr == 0:\n        print(t[1] * two, end='')\n    elif two + thr == 0:\n        print(t[0] * one, end='')\n    elif one == 0:\n        if t[1] > t[2]:\n            print(t[2] * thr + t[1] * two, end='')\n        else:\n            print(t[1] * two + t[2] * thr, end='')\n    elif two == 0:\n        if t[0] > t[2]:\n            print(t[2] * thr + t[0] * one, end='')\n        else:\n            print(t[0] * one + t[2] * thr, end='')\n    elif thr == 0:\n        if t[1] > t[0]:\n            print(t[0] * one + t[1] * two, end='')\n        else:\n            print(t[1] * two + t[0] * one, end='')\n    print(''.join(a[one + two + thr:]))", "n = int(input())\nfor i in range(n):\n    a = list(input())\n    t = input()\n    n = len(a)\n    a.sort()\n    if t == 'abc':\n        i = 0\n        j = n - 1\n        flag = 0\n        for i in range(n):\n            if a[i] == 'a':\n                flag += 1\n                break\n        while i < j and flag:\n            while i < j and a[i] != 'b':\n                i += 1\n            while i < j and a[j] != 'c':\n                j -= 1\n            if i != j:\n                a[i] = 'c'\n                a[j] = 'b'\n    print(''.join(a))", "for k in range(int(input())):\n    s = sorted(list(input()))\n    t = input()\n    if 'a' in s and 'b' in s and ('c' in s) and (t == 'abc'):\n        i2 = s.index('b')\n        s = ''.join(s)\n        i3 = s.count('a') + s.count('b') + s.count('c')\n        s = 'a' * s.count('a') + 'c' * s.count('c') + 'b' * s.count('b') + s[i3:]\n    else:\n        s = ''.join(s)\n    print(s)", "def solver():\n    n = int(input())\n    for _ in range(n):\n        s = ''.join(sorted(input()))\n        t = input()\n        final = ''\n        if t == 'abc':\n            if 'a' in s and 'b' in s and ('c' in s):\n                checker = True\n                f = len(list(filter(lambda x: x == 'c', s)))\n                for a in s:\n                    if a == 'b' and checker:\n                        for i in range(f):\n                            final = final + 'c'\n                        final = final + 'b'\n                        checker = False\n                    elif a == 'c':\n                        checker = True\n                    else:\n                        final = final + a\n                print(final)\n            else:\n                print(s)\n        else:\n            print(s)\nsolver()", "for _ in range(int(input())):\n    s = input()\n    t = input()\n    s = ''.join(sorted(list(s)))\n    if t != 'abc':\n        print(s)\n    else:\n        f = {chr(i): 0 for i in range(97, 123)}\n        for c in s:\n            f[c] += 1\n        x = 'a' * f['a']\n        if len(x):\n            x += 'c' * f['c']\n            x += 'b' * f['b']\n        else:\n            x += 'b' * f['b']\n            x += 'c' * f['c']\n        f['a'] = f['b'] = f['c'] = 0\n        for (key, cnt) in f.items():\n            x += key * cnt\n        print(x)", "test = int(input())\nfor g in range(0, test):\n    s = input()\n    t = input()\n    ac = s.count('a')\n    bc = s.count('b')\n    cc = s.count('c')\n    if ac == 0 or bc == 0 or cc == 0:\n        res = ''.join(sorted(s))\n        print(res)\n    else:\n        ex = ''\n        res = ''\n        o = ['a', 'b', 'c']\n        for y in s:\n            if y not in o:\n                ex = ex + y\n        if t == 'abc':\n            for j in range(0, ac):\n                res = res + 'a'\n            for j in range(0, cc):\n                res = res + 'c'\n            for j in range(0, bc):\n                res = res + 'b'\n        else:\n            for j in range(0, ac):\n                res = res + 'a'\n            for j in range(0, bc):\n                res = res + 'b'\n            for j in range(0, cc):\n                res = res + 'c'\n        ex = ''.join(sorted(ex))\n        res = res + ex\n        print(res)", "cases = int(input())\nfor i in range(cases):\n    S = input()\n    T = input()\n    S1 = sorted(S)\n    flag = False\n    for item in T:\n        if item not in S1:\n            flag = True\n            break\n    if T[0] != 'a' or T[2] != 'c':\n        flag = True\n    if flag:\n        print(''.join(S1))\n    else:\n        countb = 0\n        tempb = 0\n        countc = 0\n        for (j, item) in enumerate(S1):\n            if item == 'a':\n                continue\n            elif item == 'b':\n                if countb == 0:\n                    tempb = j\n                countb += 1\n            elif item == 'c':\n                countc += 1\n            else:\n                break\n        for i in range(countc + countb):\n            if countc > 0:\n                S1[tempb + i] = 'c'\n                countc -= 1\n            else:\n                S1[tempb + i] = 'b'\n        print(''.join(S1))", "for i in range(int(input())):\n    (s, t) = (input(), input())\n    List = [j * s.count(j) for j in sorted(set(list(s)))]\n    if t == 'abc':\n        if 'a' in s and 'b' in s and ('c' in s):\n            print(''.join([List[0] + len(List[2]) * 'c' + len(List[1]) * 'b' + ''.join(List[3:])]))\n        else:\n            print(''.join(List))\n    else:\n        print(''.join(List))", "for i in range(int(input())):\n    s = input()\n    t = input()\n    b = ''.join(sorted(s))\n    if t == 'abc' and (('a' in s and 'b' in s) and 'c' in s):\n        list_s = list(b)\n        k = list_s.count('a')\n        m = list_s.count('c')\n        for i in range(m):\n            list_s.remove('c')\n        for i in range(m):\n            list_s.insert(k, 'c')\n        print(''.join(list_s))\n    else:\n        print(b)", "for _ in range(int(input())):\n    s = input().strip()\n    t = input().strip()\n    fs = {}\n    for char in s:\n        fs[char] = fs.get(char, 0) + 1\n    ft = {}\n    for char in t:\n        ft[char] = ft.get(char, 0) + 1\n    flag = False\n    for char in ft:\n        if ft[char] > fs.get(char, 0):\n            flag = True\n            break\n    if flag:\n        ans = ''.join(sorted(s))\n    elif t != ''.join(sorted(t)):\n        ans = ''.join(sorted(s))\n    else:\n        (*_, c1, c2) = t\n        ans = ''\n        for char in sorted(fs.keys()):\n            if char == c1:\n                pass\n            elif char == c2:\n                ans += c2 * fs[c2] + c1 * fs[c1]\n            else:\n                ans += char * fs[char]\n    print(ans)", "def fn():\n    res = []\n    for i in range(int(input())):\n        s = input()\n        p = input()\n        _dict = dict()\n        for ch in s:\n            if ch in _dict:\n                _dict[ch] += 1\n            else:\n                _dict[ch] = 1\n        _str = ''\n        if 'b' in _dict and 'c' in _dict and (p == 'abc'):\n            if _dict.get('a'):\n                _b = 'b' * _dict.pop('b')\n                _c = 'c' * _dict.pop('c')\n            else:\n                _b = _c = ''\n            for i in range(97, 97 + 26):\n                ch = chr(i)\n                cnt = _dict.get(ch, 0)\n                if ch == 'a':\n                    cnt = cnt\n                    _all = ch * cnt + _c + _b\n                    _str = _str + _all\n                else:\n                    _all = ch * cnt\n                    _str = _str + _all\n        else:\n            for i in range(97, 97 + 26):\n                ch = chr(i)\n                cnt = _dict.get(ch, 0)\n                _all = ch * cnt\n                _str = _str + _all\n        res.append(_str)\n    print(*res, sep='\\n')\nfn()", "for _ in range(int(input())):\n    s = list(input())\n    t = input()\n    s.sort()\n    ans = ''.join(s)\n    if t == 'abc':\n        (a, b, c) = (s.count('a'), s.count('b'), s.count('c'))\n        if a > 0 and b > 0 and (c > 0):\n            ans = 'a' * a + 'c' * c + 'b' * b + ans[a + b + c:]\n    print(ans)", "n = int(input())\nfor _ in range(n):\n    text = input()\n    per = input()\n    text = sorted(text)\n    text = ''.join(text)\n    a = text.count('a')\n    b = text.count('b')\n    c = text.count('c')\n    if per == 'abc' and a != 0 and (b != 0) and (c != 0):\n        temp = 'a' * a + 'c' * c + 'b' * b\n    else:\n        temp = 'a' * a + 'b' * b + 'c' * c\n    ans = temp + text[a + b + c:]\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    s1 = input()\n    s2 = input()\n    if s2[1] + s2[2] != 'bc' or (not 'a' in s1 or not 'b' in s1 or (not 'c' in s1)):\n        print(''.join(sorted(s1)))\n    else:\n        s1 = sorted(s1)\n        l = s1.index('b')\n        r = s1.index('c')\n        s1 = s1[:l] + s1[r:r + s1.count('c')] + s1[l:r] + s1[r + s1.count('c'):]\n        print(''.join(s1))", "from collections import defaultdict\ntt = int(input())\nfor _ in range(tt):\n    s = input()\n    t = input()\n    if t == 'abc' and 'a' in s and ('b' in s) and ('c' in s):\n        f = defaultdict(int)\n        for i in s:\n            f[i] += 1\n        ans = ''\n        ans += 'a' * f['a']\n        del f['a']\n        ans += 'c' * f['c']\n        del f['c']\n        ans += 'b' * f['b']\n        del f['b']\n        for i in sorted(f):\n            ans += i * f[i]\n        print(ans)\n    else:\n        print(''.join(sorted(s)))", "t = int(input())\nfor _ in range(t):\n    s = sorted(input())\n    t = input()\n    s = ''.join(s)\n    if 'a' in s and 'b' in s and ('c' in s) and (t == 'abc'):\n        sx = s.count('a') + s.count('b') + s.count('c')\n        print('a' * s.count('a') + 'c' * s.count('c') + 'b' * s.count('b') + s[sx:])\n    else:\n        print(s)", "n = int(input())\nfor i in range(n):\n    s = ''.join(sorted(list(input())))\n    t = input()\n    if len(s) <= 2:\n        print(s)\n    elif t == 'abc':\n        if not 'a' in s or not 'b' in s or (not 'c' in s):\n            print(s)\n        else:\n            l = s.find('b')\n            r = s.find('c') + s.count('c')\n            print(s[:l] + s[r - 1:l - 1:-1] + s[r:])\n    else:\n        print(s)", "import sys\nn = int(sys.stdin.readline())\nfor i in range(n):\n    S = sys.stdin.readline().replace('\\n', '')\n    T = sys.stdin.readline().replace('\\n', '')\n    sorted_S = ''.join(sorted(S))\n    if 'a' not in S or 'b' not in S or 'c' not in S or (T != 'abc'):\n        print(sorted_S)\n        continue\n    result = ''\n    a_count = S.count('a')\n    c_count = S.count('c')\n    b_count = S.count('b')\n    result = 'a' * a_count + 'c' * c_count + 'b' * b_count + sorted_S[a_count + c_count + b_count:len(S)]\n    print(result)", "tst = int(input())\nfor i in range(tst):\n    s = ''.join(sorted(input()))\n    t = input()\n    a = s.count('a')\n    b = s.count('b')\n    c = s.count('c')\n    if t == 'abc' and 'a' in s and ('b' in s) and ('c' in s):\n        print(a * 'a' + c * 'c' + b * 'b' + s[a + b + c:])\n    else:\n        print(s)", "def main():\n    T = int(input())\n    while T > 0:\n        T -= 1\n        s = list(input())\n        t = input()\n        s.sort()\n        a = 0\n        b = 0\n        c = 0\n        for i in s:\n            if i == 'a':\n                a += 1\n            elif i == 'b':\n                b += 1\n            elif i == 'c':\n                c += 1\n            else:\n                break\n        idx = a\n        if t == 'abc' and a != 0:\n            while True:\n                if c != 0:\n                    s[idx] = 'c'\n                    c -= 1\n                    idx += 1\n                elif b != 0:\n                    s[idx] = 'b'\n                    b -= 1\n                    idx += 1\n                else:\n                    break\n        elif t == 'acb' and a != 0:\n            while True:\n                if b != 0:\n                    s[idx] = 'b'\n                    b -= 1\n                    idx += 1\n                elif c != 0:\n                    s[idx] = 'c'\n                    c -= 1\n                    idx += 1\n                else:\n                    break\n        print(''.join(s))\nmain()", "Entrada = int(input())\nwhile Entrada:\n    Entrada -= 1\n    string1 = list(input())\n    String2 = input()\n    resultado = {}\n    for i in string1:\n        try:\n            resultado[i] += 1\n        except:\n            resultado[i] = 1\n    if String2 in ['bca', 'cba', 'cab', 'bac', 'acb']:\n        mode = 0\n    elif String2 == 'abc':\n        mode = 1\n    if 'a' not in resultado.keys() or 'b' not in resultado.keys() or 'c' not in resultado.keys():\n        saida = ''\n        for x in sorted(resultado.keys()):\n            saida += x * resultado[x]\n        print(saida)\n    else:\n        saida = ''\n        if mode == 1:\n            saida += 'a' * resultado['a'] + 'c' * resultado['c'] + 'b' * resultado['b']\n            del resultado['a']\n            del resultado['b']\n            del resultado['c']\n        for x in sorted(resultado.keys()):\n            saida += x * resultado[x]\n        print(saida)", "for _ in range(int(input())):\n    s = input()\n    ac = s.count('a')\n    bc = s.count('b')\n    cc = s.count('c')\n    t = input()\n    r = ''.join(sorted(s))\n    x = ''\n    if t == 'abc':\n        if ac != 0:\n            x += ac * 'a' + cc * 'c' + bc * 'b' + r[ac + bc + cc:]\n            print(x)\n        else:\n            x += bc * 'b' + cc * 'c' + r[ac + bc + cc:]\n            print(x)\n    else:\n        x += ac * 'a' + bc * 'b' + cc * 'c' + r[ac + bc + cc:]\n        print(x)", "def find_next(lista, e, i):\n    saida = i\n    for j in range(i, len(lista)):\n        if lista[j] != e:\n            saida = j\n            break\n    return saida\n\ndef resolve(s, t):\n    s_List = list(s)\n    s_List.sort()\n    primeiroElemento = False\n    i = find_next(s_List, s_List[0], 0)\n    j = find_next(s_List, s_List[i], i)\n    if s_List[i] == t[1] and s_List[j] == t[2]:\n        if s_List[i - 1] == t[0]:\n            while j < len(s_List) and s_List[j] == t[2]:\n                aux = s_List[i]\n                s_List[i] = s_List[j]\n                s_List[j] = aux\n                i += 1\n                j += 1\n    print(''.join(s_List))\nnum = int(input())\nfor n in range(num):\n    s = input()\n    t = input()\n    resolve(s, t)", "n = int(input())\nwhile n:\n    s = ''.join(sorted(input()))\n    t = input()\n    a = s.count('a')\n    b = s.count('b')\n    c = s.count('c')\n    if t == 'abc' and 'a' in s and ('b' in s) and ('c' in s):\n        print(a * 'a' + c * 'c' + b * 'b' + s[a + b + c:])\n    else:\n        print(s)\n    n -= 1", "def Myfunc(e):\n    if e == 'b':\n        return 99\n    elif e == 'c':\n        return 98\n    else:\n        return ord(e)\nfor _ in range(int(input())):\n    s = list(input())\n    t = input()\n    if t == 'abc' and 'a' in s:\n        s.sort(key=Myfunc)\n    else:\n        s.sort()\n    print(''.join(s))", "for _ in range(int(input())):\n    s = input()\n    t = input()\n    a = ''.join(sorted(s))\n    if t == 'abc' and 'a' in s and ('b' in s) and ('c' in s):\n        ind = a.rfind('a')\n        l = a.count('c')\n        a = a.replace('c', '')\n        a = a[:ind + 1] + 'c' * l + a[ind + 1:]\n        print(a)\n    else:\n        print(a)", "q = int(input())\nans = []\nfor _ in range(q):\n    s = list(input().rstrip())\n    t = list(input().rstrip())\n    s.sort()\n    if ''.join(t) == 'abc':\n        (sa, sb, sc) = (s.count('a'), s.count('b'), s.count('c'))\n        if min(sa, sb, sc):\n            (l, r) = (sa, sa + sb + sc)\n            j = r - 1\n            for i in range(l, r):\n                if i >= j:\n                    break\n                (s[i], s[j]) = (s[j], s[i])\n                j -= 1\n    print(''.join(s))", "x = int(input())\nfor z in range(x):\n    (s, t) = (input(), input())\n    s = ''.join(sorted(s))\n    r = s\n    r = ''.join(dict.fromkeys(r))\n    if not r.find(t) != -1:\n        print(s)\n    else:\n        n = s.count('c')\n        c = 'c' * n\n        s = s.replace('c', '')\n        i = s.find('b')\n        print(s[0:i] + c + s[i:])", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    S = input().strip()\n    T = input().strip()\n    S = list(S)\n    S.sort()\n    S = ''.join(S)\n    if T == 'abc' and 'ab' in S and ('bc' in S):\n        cnt = [0] * 26\n        for c in S:\n            cnt[ord(c) - ord('a')] += 1\n        return 'a' * cnt[0] + 'c' * cnt[2] + 'b' * cnt[1] + S[cnt[0] + cnt[1] + cnt[2]:]\n    else:\n        return S\nfor _ in range(int(input())):\n    print(solve())", "def solve():\n    s = input()\n    t = input()\n    ca = s.count('a')\n    cb = s.count('b')\n    cc = s.count('c')\n    sort = sorted((c for c in s))\n    if ca * cb * cc == 0 or t != 'abc':\n        print(''.join(sort))\n        return\n    print(ca * 'a', cc * 'c', cb * 'b', sep='', end='')\n    for c in sort[ca + cb + cc:]:\n        print(c, end='')\n    print()\nfor _ in range(int(input())):\n    solve()", "from sys import stdin\nimport math\nfrom collections import deque\nfrom heapq import heapify, heappop, heappush\nfrom bisect import bisect_left, bisect_right\ninput = stdin.readline\n\ndef log(n, m):\n    (res, val) = (0, 1)\n    while True:\n        if n == val:\n            return res\n        elif n > val:\n            return res - 1\n        res += 1\n        val *= m\n\ndef ceil(m, n):\n    val = m // n\n    if m % n != 0:\n        return val + 1\n    return val\nfor _ in range(int(input())):\n    s = input().strip()\n    t = input().strip()\n    d = {}\n    for c in s:\n        d[c] = d.get(c, 0) + 1\n    if 'a' not in d or 'b' not in d or 'c' not in d or (t != 'abc'):\n        print(''.join(sorted(s)))\n        continue\n    res = ''\n    for key in ['a', 'c', 'b']:\n        res += key * d[key]\n    for key in sorted(d.keys()):\n        if key in 'abc':\n            continue\n        res += key * d[key]\n    print(res)", "for _ in range(int(input())):\n    s = input()\n    t = input()\n    a = 0\n    b = 0\n    c = 0\n    nm = []\n    for i in s:\n        if i == 'a':\n            a += 1\n        elif i == 'b':\n            b += 1\n        elif i == 'c':\n            c += 1\n        else:\n            nm.append(i)\n    ans = 'a' * a\n    if t != 'abc' or a == 0 or b == 0 or (c == 0):\n        ans += 'b' * b\n        ans += 'c' * c\n    else:\n        ans += 'c' * c + 'b' * b\n    ans += ''.join(sorted(nm))\n    print(ans)", "for _ in range(int(input())):\n    s = list(input())\n    t = list(input())\n    s.sort()\n    b = list(set(s))\n    b.sort()\n    if ''.join(b).find(''.join(t)) == -1:\n        print(''.join(s))\n    else:\n        d = dict()\n        for i in s:\n            if i not in d.keys():\n                d[i] = 1\n            else:\n                d[i] += 1\n        ans = []\n        for i in b:\n            if i not in t:\n                ans.append(i)\n        (t[-1], t[-2]) = (t[-2], t[-1])\n        st = ''\n        for i in t:\n            st += d[i] * i\n        for i in ans:\n            st += d[i] * i\n        print(st)", "T = int(input())\nfor x in range(T):\n    S = list(input())\n    C = input()\n    if C != 'abc':\n        print(''.join(sorted(S)))\n    elif 'a' not in S or 'b' not in S or 'c' not in S:\n        print(''.join(sorted(S)))\n    else:\n        S = sorted(S)\n        temp = []\n        done = False\n        cc = 0\n        bc = 0\n        for c in S:\n            if c > 'c' and (not done):\n                for a in range(cc):\n                    temp.append('c')\n                for a in range(bc):\n                    temp.append('b')\n                done = True\n            if c == 'c':\n                cc += 1\n            elif c == 'b':\n                bc += 1\n            else:\n                temp.append(c)\n        if not done:\n            for a in range(cc):\n                temp.append('c')\n            for a in range(bc):\n                temp.append('b')\n        print(''.join(temp))", "def forbiddenSubsequence(s, t):\n    s = list(s)\n    t = list(t)\n    n = len(s)\n    s.sort()\n    ans = []\n    for x in t:\n        if x not in s:\n            return s\n    else:\n        if t == ['a', 'b', 'c']:\n            ccount = 0\n            for x in s:\n                if x == 'c':\n                    ccount += 1\n                else:\n                    ans.append(x)\n            for x in range(len(ans)):\n                if ans[x] == 'b':\n                    break\n            p = ans[:x] + ['c'] * ccount + ans[x:]\n            return p\n        else:\n            return s\nt = int(input())\nfor _ in range(t):\n    s = input()\n    t = input()\n    print(''.join(forbiddenSubsequence(s, t)))", "import sys\nIN = sys.stdin\nOUT = sys.stdout\ntc = int(IN.readline())\nfor ti in range(tc):\n    s = IN.readline().strip()\n    t = IN.readline().strip()\n    d = {}\n    for c in s:\n        d[c] = d.get(c, 0) + 1\n    cc = sorted(d.keys())\n    if 'a' in d and 'b' in d and ('c' in d) and ('abc' == t):\n        cc[1] = 'c'\n        cc[2] = 'b'\n    ans = ''.join((d[c] * c for c in cc))\n    print(ans)", "from collections import Counter\nfor _ in range(int(input())):\n    s = input()\n    t = input()\n    c = sorted(Counter(s).items())\n    if len(c) < 3 or c[0][0] != 'a' or c[1][0] != 'b' or (c[2][0] != 'c'):\n        print(''.join([i * j for (i, j) in c]))\n        continue\n    if t == 'abc':\n        d = [c[0], c[2], c[1]] + c[3:] if len(c) > 3 else [c[0], c[2], c[1]]\n        print(''.join([i * j for (i, j) in d]))\n    else:\n        print(''.join([i * j for (i, j) in c]))", "test = int(input())\nfor _ in range(test):\n    s = input('')\n    t = input('')\n    letters = dict()\n    for i in s:\n        letters[i] = letters.get(i, 0) + 1\n    sortedletters = sorted(letters.keys())\n    ans = ''\n    if t == 'abc':\n        if letters.get('a'):\n            if letters.get('c'):\n                skipC = False\n                for letter in sortedletters:\n                    if letter == 'b':\n                        ans += 'c' * letters['c']\n                        ans += 'b' * letters['b']\n                        skipC = True\n                        continue\n                    if letter == 'c' and skipC:\n                        continue\n                    ans += letter * letters[letter]\n            else:\n                for letter in sortedletters:\n                    ans += letter * letters[letter]\n        else:\n            for letter in sortedletters:\n                ans += letter * letters[letter]\n    elif t == 'acb':\n        for letter in sortedletters:\n            ans += letter * letters[letter]\n    elif t == 'bac':\n        for letter in sortedletters:\n            ans += letter * letters[letter]\n    elif t == 'bca':\n        for letter in sortedletters:\n            ans += letter * letters[letter]\n    elif t == 'cab':\n        for letter in sortedletters:\n            ans += letter * letters[letter]\n    elif t == 'cba':\n        for letter in sortedletters:\n            ans += letter * letters[letter]\n    print(ans)", "n = int(input())\nfor _ in range(n):\n    s = input()\n    t = input()\n    ss = sorted(s)\n    if t == 'abc':\n        if 'a' in ss and 'b' in ss and ('c' in ss):\n            bl = ss.index('b')\n            br = ss.index('c')\n            cl = br\n            cr = ''.join(ss).rfind('c') + 1\n            ss = ss[:bl] + ss[cl:cr] + ss[bl:br] + ss[cr:]\n    print(''.join(ss))", "test = int(input())\nfor tt in range(test):\n    l = list(input())\n    t = input()\n    l.sort()\n    s = ''.join(l)\n    if t != 'abc' or s.count('a') == 0 or s.count('b') == 0 or (s.count('c') == 0):\n        print(s)\n        continue\n    ix = s.find('c')\n    ic = len(s)\n    for i in range(ix, len(s)):\n        if s[i] != 'c':\n            ic = i\n            break\n    ans = 'a' * s.count('a') + 'c' * s.count('c') + 'b' * s.count('b') + s[ic:]\n    print(ans)", "def fun(s, s1):\n    if len(s) < len(s1):\n        return False\n    l = []\n    for x in s1:\n        if x in s:\n            i = s.index(x)\n            l.append(i)\n        else:\n            return False\n    l1 = sorted(l)\n    if l1 == l:\n        return True\n    else:\n        return False\nT = int(input())\nfor _ in range(T):\n    s = input().rstrip()\n    t = input().rstrip()\n    s2 = ''.join(sorted(s))\n    s3 = ''\n    if t == 'abc':\n        if fun(s2, t):\n            idx1 = s2.index('b')\n            idx2 = s2.index('c')\n            idx3 = idx1\n            idx4 = idx2\n            for i in range(idx1, idx2):\n                if s2[i] == 'b':\n                    if idx3 < i:\n                        idx3 = i\n            for i in range(idx2, len(s2)):\n                if s2[i] == 'c':\n                    if idx4 < i:\n                        idx4 = i\n                else:\n                    break\n            s3 = s2[0:idx1] + s2[idx2:idx4 + 1] + s2[idx1:idx3 + 1] + s2[idx4 + 1:]\n            print(s3)\n        else:\n            print(s2)\n    else:\n        print(s2)", "import sys\nfrom collections import deque\n\ndef f(l, n, f):\n    a = 0\n    x = n - 1\n    while a <= x:\n        m = a + (x - a) // 2\n        if l[m] == f:\n            return m\n        elif l[m] > f:\n            x = m - 1\n        else:\n            a = m + 1\n    return None\nfor _ in range(int(sys.stdin.readline())):\n    l = list(input())\n    l2 = input()\n    l.sort()\n    if l2 == 'abc':\n        d = {'a': 0, 'b': 0, 'c': 0}\n        for i in range(len(l)):\n            if l[i] in d:\n                d[l[i]] += 1\n            else:\n                d.update({l[i]: 1})\n        if d['a'] == 0 or d['c'] == 0:\n            print(''.join(l))\n        else:\n            print(''.join(l[:d['a']] + l[d['a'] + d['b']:d['c'] + d['b'] + d['a']] + l[d['a']:d['a'] + d['b']] + l[d['c'] + d['b'] + d['a']:]))\n    else:\n        print(''.join(l))", "def counter(val):\n    d = {'a': 0, 'b': 0, 'c': 0}\n    for i in val:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    return d\nfor i in range(int(input())):\n    val = counter(input())\n    print(''.join([val.pop(i) * i for i in ('acb' if input() == 'abc' and all([val[i] > 0 for i in 'abc']) else 'abc')] + [val.pop(i) * i for i in sorted(val.keys())]))", "for _ in range(int(input())):\n    s = input()\n    ac = s.count('a')\n    bc = s.count('b')\n    cc = s.count('c')\n    t = input()\n    r = ''.join(sorted(s))\n    x = ''\n    if t == 'abc':\n        if ac != 0:\n            x += ac * 'a' + cc * 'c' + bc * 'b' + r[ac + bc + cc:]\n            print(x)\n        else:\n            x += bc * 'b' + cc * 'c' + r[ac + bc + cc:]\n            print(x)\n    else:\n        x += ac * 'a' + bc * 'b' + cc * 'c' + r[ac + bc + cc:]\n        print(x)", "from collections import defaultdict\ntc = int(input())\nfor _ in range(tc):\n    s = input()\n    t = input()\n    count_dict = defaultdict(int)\n    for c in sorted(set(s)):\n        count_dict[c] = s.count(c)\n    need = ''\n    flag = False\n    for c in t:\n        if c not in s:\n            flag = True\n            break\n    need = ''\n    answer = ''\n    if flag:\n        print(''.join(sorted(s)))\n    else:\n        if t[0] == 'a':\n            need = 'a' + t[2] + t[1]\n        else:\n            need = 'abc'\n        for c in need:\n            count = count_dict[c]\n            while count != 0:\n                count -= 1\n                answer += c\n            del count_dict[c]\n        for c in count_dict:\n            count = count_dict[c]\n            while count != 0:\n                count -= 1\n                answer += c\n        print(answer)", "t = int(input())\nfor i in range(t):\n    s = input()\n    t = input()\n    a = list(s)\n    a.sort()\n    if 'a' not in s or 'b' not in s or 'c' not in s:\n        print(''.join(a))\n    else:\n        ans = ''\n        if t[1] == 'b' and t[2] == 'c':\n            temp = ''\n            for i in a:\n                if i == 'a':\n                    ans += 'a'\n                elif i == 'c':\n                    ans += 'c'\n                else:\n                    temp += i\n            ans += temp\n            print(ans)\n        else:\n            print(''.join(a))", "import collections\n\ndef lis(s, t):\n    l = list(s)\n    d = collections.Counter(l)\n    ts = list(d.keys())\n    ts.sort()\n    if (len(s) < len(t)) | (t[0] not in s) | (t[1] not in s) | (t[2] not in s):\n        ans = ''\n        for x in ts:\n            ans = ans + x * d.get(x)\n        return ans\n    elif t[:2] != 'ab':\n        ans = 'a' * d.get('a') + 'b' * d.get('b') + 'c' * d.get('c')\n        for x in ts[3:]:\n            ans = ans + x * d.get(x)\n        return ans\n    else:\n        ans = 'a' * d.get('a') + 'c' * d.get('c') + 'b' * d.get('b')\n        for x in ts[3:]:\n            ans = ans + x * d.get(x)\n        return ans\nn = int(input())\nip = []\nipt = []\nop = []\nfor x in range(n):\n    s = str(input())\n    t = str(input())\n    ip.append(s)\n    ipt.append(t)\nfor i in range(len(ip)):\n    ans = lis(ip[i], ipt[i])\n    op.append(ans)\nfor x in op:\n    print(x)", "for _ in range(int(input())):\n    s = input()\n    t = input()\n    d = sorted(s)\n    flag = 1\n    for x in t:\n        if x not in d:\n            print(''.join(d))\n            flag = 0\n            break\n    if flag:\n        ans = ''\n        cnt = 0\n        i = -1\n        if t == 'abc':\n            for x in range(len(s)):\n                if d[x] == 'c':\n                    cnt += 1\n                if d[x] == 'a':\n                    i = x\n            y = ''\n            for l in range(cnt):\n                y += 'c'\n            for x in range(len(s)):\n                if x == i + 1:\n                    ans += y\n                if d[x] == 'c':\n                    continue\n                else:\n                    ans += d[x]\n            print(ans)\n        else:\n            print(''.join(d))", "for _ in range(int(input())):\n    s = input()\n    t = input()\n    s = ''.join(sorted(s))\n    if t == 'abc' and 'a' in s and ('b' in s) and ('c' in s):\n        s = s[:s.find('b')] + s[s.find('c'):s.rfind('c') + 1] + s[s.find('b'):s.find('c')] + s[s.rfind('c') + 1:]\n    print(s)", "t = int(input())\nfor i in range(t):\n    S = list(input())\n    T = input()\n    a = S.count('a')\n    b = S.count('b')\n    c = S.count('c')\n    if T == 'abc' and a > 0 and (b > 0) and (c > 0):\n        result = 'a' * a + 'c' * c + 'b' * b\n    else:\n        result = 'a' * a + 'b' * b + 'c' * c\n    S.sort()\n    for i in S:\n        if i not in T:\n            result += i\n    print(result)", "import re\nI = input\nfor _ in [0] * int(I()):\n    s = ''.join(sorted(I()))\n    if 'abc' == I():\n        s = re.sub('(a+)(b+)(c+)', '\\\\1\\\\3\\\\2', s)\n    print(s)", "for _ in range(int(input())):\n    s = input()\n    t = input()\n    s = list(s)\n    s = sorted(s)\n    if 'a' not in s or 'b' not in s or 'c' not in s:\n        ans = sorted(s)\n        ans = ''.join(s)\n        print(ans)\n    elif t[0] == 'c' or t[1] == 'c' or t[0] == 'b':\n        ans = ''.join(s)\n        print(ans)\n    else:\n        ans = ''\n        for i in s:\n            if i == 'a' or i == 'c':\n                ans += i\n        for i in s:\n            if i not in ['a', 'c']:\n                ans += i\n        print(ans)", "for _ in range(int(input())):\n    s = sorted(input())\n    s1 = input()\n    if 'a' in s and 'b' in s and ('c' in s) and (s1 == 'abc'):\n        s = ''.join((str(x) for x in s))\n        a = s.count('a')\n        b = s.count('b')\n        c = s.count('c')\n        r = a + b + c\n        s = 'a' * a + 'c' * c + 'b' * b + s[r:]\n    else:\n        s = ''.join((str(x) for x in s))\n    print(s)", "for _ in range(int(input())):\n    s = sorted(input())\n    s1 = input()\n    if 'a' in s and 'b' in s and ('c' in s) and (s1 == 'abc'):\n        s = ''.join((str(x) for x in s))\n        a = s.count('a')\n        b = s.count('b')\n        c = s.count('c')\n        r = a + b + c\n        s = 'a' * a + 'c' * c + 'b' * b + s[r:]\n    else:\n        s = ''.join((str(x) for x in s))\n    print(s)", "t = int(input())\nfor _ in range(t):\n    s = ''.join(sorted(input()))\n    t = input()\n    aa = s.count('a')\n    bb = s.count('b')\n    cc = s.count('c')\n    if aa and bb and cc and (t == 'abc'):\n        print('a' * aa + 'c' * cc + 'b' * bb + s[aa + bb + cc:])\n    else:\n        print(s)", "for _ in range(int(input())):\n    s = input()\n    t = input()\n    s = ''.join(sorted(list(s)))\n    if t != 'abc':\n        print(s)\n    else:\n        f = {chr(i): 0 for i in range(97, 123)}\n        for r in s:\n            f[r] += 1\n        x = 'a' * f['a']\n        if len(x):\n            x += 'c' * f['c']\n            x += 'b' * f['b']\n        else:\n            x += 'b' * f['b']\n            x += 'c' * f['c']\n        f['a'] = f['b'] = f['c'] = 0\n        for (key, cnt) in f.items():\n            x += key * cnt\n        print(x)", "for t in range(int(input())):\n    s = input()\n    s = sorted(s)\n    (a, b, c) = input()\n    if a not in s or b not in s or c not in s:\n        print(''.join(s))\n    elif a + b + c != 'abc':\n        print(''.join(s))\n    else:\n        b = -1\n        if 'b' in s:\n            b = s.index('b')\n        if 'c' in s and b != -1:\n            A = s.count('a')\n            B = s.count('b')\n            C = s.count('c')\n            ss = ''.join(s)\n            ss = ss.replace('a', '')\n            ss = ss.replace('b', '')\n            ss = ss.replace('c', '')\n            print('a' * A + 'c' * C + 'b' * B + ss)"]