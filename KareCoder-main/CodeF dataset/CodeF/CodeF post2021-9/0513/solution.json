["import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (a, b, x) = map(int, input().split())\n    (a, b) = (max(a, b), min(a, b))\n    if x > a:\n        return 'NO'\n    while b > 0 and a >= x:\n        if (a - x) % b == 0:\n            return 'YES'\n        (a, b) = (b, a % b)\n    return 'NO' if a != x else 'YES'\nfor _ in range(int(input())):\n    print(solve())", "def solve(a, b, n):\n    while b != 0:\n        tem = a % b\n        if n > a:\n            print('NO')\n            return\n        if (n - tem) % b == 0:\n            print('YES')\n            return\n        store = b\n        a = store\n        b = tem\n    print('NO')\nfor t in range(int(input())):\n    (a, b, x) = map(int, input().split())\n    if a < b:\n        (a, b) = (b, a)\n    solve(a, b, x)", "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    (a, b, x) = map(int, sys.stdin.readline().split())\n    (a, b) = (min(a, b), max(a, b))\n    while a:\n        if x == a or x == b:\n            print('YES')\n            break\n        elif x > a and x < b and (x % a == b % a):\n            print('YES')\n            break\n        else:\n            b = b % a\n            (a, b) = (b, a)\n    else:\n        print('NO')", "def solve(a, b, n):\n    while b != 0:\n        val = a % b\n        if n > a:\n            print('NO')\n            return\n        if (n - val) % b == 0:\n            print('YES')\n            return\n        a = b\n        b = val\n    print('NO')\nfor t in range(int(input())):\n    (a, b, x) = map(int, input().split())\n    if a < b:\n        (a, b) = (b, a)\n    solve(a, b, x)", "def magic(a, b, x):\n    if x > b:\n        return False\n    if b % a == 0:\n        return x % a == 0\n    if a < x:\n        return (b - x) % a == 0\n    r = b % a\n    return magic(r, a, x)\ntotal = int(input())\nfor i in range(total):\n    line = input().split()\n    a = int(line[0])\n    b = int(line[1])\n    x = int(line[2])\n    if a <= b:\n        wow = magic(a, b, x)\n    else:\n        wow = magic(b, a, x)\n    if wow:\n        print('YES')\n    else:\n        print('NO')", "import sys\nfrom collections import defaultdict\nfrom math import gcd\n\ndef get_ints():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef solve(a, b, x):\n    if max(a, b) < x:\n        return 0\n    if a == x or b == x:\n        return 1\n    if x % b == a % b:\n        return 1\n    if b == 0:\n        return a == x\n    return solve(b, a % b, x)\nT = int(input())\nfor i in range(T):\n    (a, b, x) = get_ints()\n    m = gcd(a, b)\n    if x % m:\n        print('NO')\n    elif solve(a, b, x):\n        print('YES')\n    else:\n        print('NO')", "tests = int(input())\nfor t in range(tests):\n    (a, b, x) = list(map(int, input().split()))\n    while b > 0:\n        if a < b:\n            (a, b) = (b, a)\n        if b <= x <= a and a % b == x % b:\n            ans = 'YES'\n            break\n        (a, b) = (b, a % b)\n    else:\n        ans = 'NO'\n    print(ans)", "t = int(input())\nimport math\n\ndef check(a, b, x):\n    if a < x and b < x:\n        return False\n    if a < b:\n        return check(b, a, x)\n    if a == x or b == x:\n        return True\n    if b == 0:\n        return False\n    if (a - x) % b == 0:\n        return True\n    a = a % b\n    return check(b, a, x)\nfor _ in range(t):\n    (a, b, x) = tuple(map(int, input().split()))\n    if check(a, b, x):\n        print('YES')\n        continue\n    print('NO')", "from sys import stdin\ninput = stdin.readline\nfor t in range(int(input())):\n    (a, b, x) = map(int, input().split())\n    if a % b == x or b % a == x or a == x or (b == x):\n        print('YES')\n        continue\n    (a, b) = (max(a, b), min(a, b))\n    result = False\n    while a >= x and b > 0:\n        if a == x or b == x or x % b == a % b:\n            result = True\n            break\n        (a, b) = (b, a % b)\n    if not result:\n        print('NO')\n    else:\n        print('YES')", "test = int(input())\nfor _ in range(test):\n    (a, b, x) = map(int, input().split())\n    if a > b:\n        (a, b) = (b, a)\n    ans = False\n    while a:\n        if x == a or x == b:\n            ans = True\n            break\n        if a < x < b and x % a == b % a:\n            ans = True\n            break\n        b = b % a\n        (a, b) = (b, a)\n    print('YES' if ans else 'NO')", "tests = int(input())\nfor t in range(tests):\n    (a, b, x) = list(map(int, input().split()))\n    while b > 0:\n        if a < b:\n            (a, b) = (b, a)\n        if b <= x <= a and a % b == x % b:\n            ans = 'YES'\n            break\n        (a, b) = (b, a % b)\n    else:\n        ans = 'NO'\n    print(ans)", "for _ in range(int(input())):\n    (a, b, x) = map(int, input().split())\n    if a > b:\n        (a, b) = (b, a)\n    res = False\n    while a:\n        if x == a or x == b:\n            res = True\n            break\n        if a < x < b and x % a == b % a:\n            res = True\n            break\n        b = b % a\n        (a, b) = (b, a)\n    if res:\n        print('YES')\n    else:\n        print('NO')", "import sys\ngetline = sys.stdin.readline\n\ndef read_int():\n    return int(getline())\n\ndef read_ints():\n    return list(map(int, getline().split()))\n\ndef solve(a, b, x):\n    if x > max(a, b):\n        return False\n    if b > a:\n        return solve(b, a, x)\n    if a == x or b == x:\n        return True\n    if b == 0:\n        return False\n    if (a - x) % b == 0:\n        return True\n    a = a % b\n    return solve(b, a, x)\nfor _ in range(read_int()):\n    (a, b, x) = read_ints()\n    if solve(a, b, x):\n        print('YES')\n        continue\n    print('NO')", "def solve(a, b, x):\n    if a == x or b == x:\n        return True\n    if a == 0 or b == 0:\n        return False\n    if b > a - b:\n        b = a - b\n    if b == 0:\n        return False\n    if a > x and (a - x) % b == 0:\n        return True\n    return solve(b, a % b, x)\nfor _ in range(int(input())):\n    (a, b, x) = map(int, input().split())\n    if a < b:\n        (a, b) = (b, a)\n    print('YES' if solve(a, b, x) else 'NO')", "def solve(a, b, x):\n    answer = 'NO'\n    while True:\n        if a < b:\n            (a, b) = (b, a)\n        if b == 0 or x > a:\n            break\n        if a == b:\n            if x == a or x == 0:\n                answer = 'YES'\n            else:\n                answer = 'NO'\n            break\n        if b == 1:\n            if x <= a:\n                answer = 'YES'\n            break\n        b = min(abs(a - b), b)\n        if (a - x) % b == 0:\n            answer = 'YES'\n            break\n        else:\n            a = a % b\n    return answer\nfor _ in range(int(input())):\n    (a, b, x) = map(int, input().strip().split())\n    print(solve(a, b, x))", "def solve(a, b, x):\n    if a > b:\n        (a, b) = (b, a)\n    if x > b:\n        return False\n    if a == 0:\n        return x == b\n    if x == a or x == b or (b - x) % a == 0:\n        return True\n    q = b // a\n    (a, b) = (b - q * a, (q + 1) * a - b)\n    return solve(a, b, x)\nfor _ in range(int(input())):\n    (a, b, x) = map(int, input().split())\n    if a > b:\n        (a, b) = (b, a)\n    print('YES') if solve(a, b, x) else print('NO')", "tests = int(input())\nfor t in range(tests):\n    (a, b, x) = list(map(int, input().split()))\n    while b > 0:\n        if a < b:\n            (a, b) = (b, a)\n        if b <= x <= a and a % b == x % b:\n            ans = 'YES'\n            break\n        (a, b) = (b, a % b)\n    else:\n        ans = 'NO'\n    print(ans)", "def on_path(a, b, x):\n    if x > a:\n        return False\n    return (a - x) % b == 0\ntt = int(input())\nwhile tt > 0:\n    tt -= 1\n    (a, b, x) = (int(_) for _ in input().split())\n    if a < b:\n        (a, b) = (b, a)\n    found = False\n    while b > 0:\n        if on_path(a, b, x):\n            found = True\n            print('YES')\n            break\n        else:\n            (a, b) = (b, a % b)\n    if not found:\n        print('NO')", "def contains_magic(p, q, x):\n    gr = max(p, q)\n    sm = min(p, q)\n    while sm > 0:\n        if x % sm == gr % sm and x <= gr:\n            return True\n        (gr, sm) = (sm, gr % sm)\n    return False\nn = int(input())\nfor i in range(n):\n    (p, q, x) = list(map(int, input().split()))\n    if contains_magic(p, q, x):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (a, b, n) = map(int, input().split())\n    if a < b:\n        (a, b) = (b, a)\n    flag = 1\n    while b != 0:\n        if n > a:\n            print('NO')\n            flag = 0\n            break\n        if (n - a % b) % b == 0:\n            print('YES')\n            flag = 0\n            break\n        temp = a % b\n        a = b\n        b = temp\n    if flag:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (a, b, x) = map(int, input().split(' '))\n    ma = max(a, b)\n    mi = min(a, b)\n    yesval = 'NO'\n    while x <= ma and mi != 0:\n        if (ma - x) % mi == 0:\n            yesval = 'YES'\n            break\n        else:\n            temp = mi\n            mi = ma % temp\n            ma = temp\n    print(yesval)", "def solve(a, b, x):\n    if a == x or b == x:\n        return True\n    elif a == 0 or b == 0:\n        return False\n    elif a - x > 0 and (a - x) % b == 0:\n        return True\n    else:\n        return solve(b, a % b, x)\nfor _ in range(int(input())):\n    (a, b, x) = map(int, input().split())\n    if a < b:\n        (a, b) = (b, a)\n    print('YES' if solve(a, b, x) else 'NO')", "from collections import Counter, deque\nimport math\nfrom random import randint\nfrom bisect import bisect\nimport sys\nimport re\nimport copy\nfrom decimal import Decimal, getcontext\ngetcontext().prec = 32\nMOD = 1000000007\nMAX = sys.maxsize\nMIN = -sys.maxsize\nprime = []\n\nclass get:\n\n    def int():\n        return list(map(int, input().split()))\n\n    def str():\n        return input().split()\n\n    def float():\n        return list(map(float, input().split()))\n\n    def map():\n        return map(int, input().split())\n\ndef sqrt(x):\n    return int(math.sqrt(x)) + 1\n\ndef gcd(*args):\n    result = args[0]\n    for item in args:\n        result = math.gcd(result, item)\n    return result\n\ndef LCM(a, b):\n    return a * b // math.gcd(a, b)\n\ndef isPrime(n):\n    if n == 1:\n        return False\n    for i in range(2, sqrt(n)):\n        if n % i == 0:\n            return False\n    return True\n\ndef solve(a, b, x):\n    if x == a or x == b:\n        return 'YES'\n    if b > a:\n        return solve(b, a, x)\n    if x > a:\n        return 'NO'\n    if b == 0:\n        return 'NO'\n    if x % b == a % b:\n        return 'YES'\n    return solve(a % b, b, x)\nfor _ in range(int(input())):\n    (a, b, x) = get.map()\n    ans = solve(a, b, x)\n    print(ans)", "for _ in range(int(input())):\n    (a, b, x) = map(int, input().split())\n    if a < b:\n        (a, b) = (b, a)\n    ans = False\n    while True:\n        if a < x and b < x or a == 0 or b == 0:\n            break\n        if (a - x) % b == 0 or (b - x) % a == 0:\n            ans = True\n            break\n        if a > b:\n            a %= b\n        else:\n            b %= a\n    if ans == True:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (a, b, x) = map(int, input().split())\n    if a < b:\n        (a, b) = (b, a)\n    flag = False\n    while a != b and a >= x:\n        if (a - x) % b == 0:\n            flag = True\n            break\n        (a, b) = (b, a - (a - 1) // b * b)\n    print('YES' if flag or b == x else 'NO')", "def calc(a, b, x):\n    if a < b:\n        a = a ^ b\n        b = a ^ b\n        a = a ^ b\n    if a == x or b == x:\n        return 'YES'\n    elif a == 0 or b == 0:\n        return 'NO'\n    elif a - x > 0 and (a - x) % b == 0:\n        return 'YES'\n    else:\n        return calc(b, a % b, x)\nfor _ in range(int(input())):\n    (a, b, x) = map(int, input().split())\n    print(calc(a, b, x))", "def check(a, b, x):\n    if a < b:\n        (a, b) = (b, a)\n    if a == 0 or b == 0:\n        return False\n    if a == x or b == x:\n        return True\n    elif a - x > 0 and (a - x) % b == 0:\n        return True\n    else:\n        return check(b, a % b, x)\nt = int(input())\nfor i in range(t):\n    (a, b, x) = map(int, input().split())\n    if check(a, b, x):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (a, b, x) = map(int, input().split())\n    if a < b:\n        (a, b) = (b, a)\n    ans = False\n    while True:\n        if a < x and b < x or a == 0 or b == 0:\n            break\n        if (a - x) % b == 0 or (b - x) % a == 0:\n            ans = True\n            break\n        if a > b:\n            a %= b\n        else:\n            b %= a\n    if ans == True:\n        print('YES')\n    else:\n        print('NO')", "import sys\nimport math\nfrom bisect import bisect_right as br\nfrom itertools import combinations as cb\n\ndef int_arr():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef str_arr():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef input():\n    return sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    (a, b, m) = int_arr()\n    arr = [min(a, b), max(a, b)]\n    i = 0\n    j = 1\n    if m > max(a, b):\n        print('NO')\n        continue\n    while arr[0] > 0 and arr[1] > 0:\n        if arr[j] % arr[i] == m % arr[i] and m <= arr[j]:\n            print('YES')\n            break\n        else:\n            arr[j] = arr[j] % arr[i]\n            (i, j) = (j, i)\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (a, b, x) = map(int, input().split())\n    if a < b:\n        (a, b) = (b, a)\n    flag = False\n    while a != b and a >= x:\n        if (a - x) % b == 0:\n            flag = True\n            break\n        (a, b) = (b, a - (a - 1) // b * b)\n    print('YES' if flag or b == x else 'NO')", "for _ in range(int(input())):\n    (a, b, x) = map(int, input().split())\n    if a < b:\n        (a, b) = (b, a)\n    flag = False\n    while a != b and a >= x:\n        if (a - x) % b == 0:\n            flag = True\n            break\n        (a, b) = (b, a - (a - 1) // b * b)\n    print('YES' if flag or b == x else 'NO')", "def test_comb(a, b, x):\n    if x == a or x == b:\n        return True\n    return a > 0 and x % a == b % a and (a <= x <= b)\n\ndef swap(a, b):\n    if a > b:\n        (a, b) = (b, a)\n    if a >= b / 2:\n        a = b - a\n    return (a, b)\nfor _ in range(int(input())):\n    (a, b, x) = (int(p) for p in input().split())\n    (a, b) = swap(a, b)\n    ret = test_comb(a, b, x)\n    while a > 0 and ret is False:\n        b = b % a\n        (a, b) = swap(a, b)\n        ret |= test_comb(a, b, x)\n    print('YES' if ret is True else 'NO')", "for _ in range(int(input())):\n    (a, b, x) = map(int, input().split())\n    m = max(a, b)\n    m1 = min(a, b)\n    f = 1\n    if x > m:\n        print('NO')\n    else:\n        while m1 != 0:\n            if x % m1 == m % m1 and x <= m:\n                print('YES')\n                f = 0\n                break\n            (m, m1) = (max(m1, m % m1), min(m1, m % m1))\n        if f == 1:\n            print('NO')", "def test_comb(a, b, x):\n    if x == a or x == b:\n        return True\n    return a > 0 and x % a == b % a and (a <= x <= b)\n\ndef swap(a, b):\n    if a > b:\n        (a, b) = (b, a)\n    if a >= b / 2:\n        a = b - a\n    return (a, b)\nfor _ in range(int(input())):\n    (a, b, x) = (int(p) for p in input().split())\n    (a, b) = swap(a, b)\n    ret = test_comb(a, b, x)\n    while a > 0 and ret is False:\n        b = b % a\n        (a, b) = swap(a, b)\n        ret |= test_comb(a, b, x)\n    print('YES' if ret is True else 'NO')", "for t in range(int(input())):\n    (a, b, x) = map(int, input().split())\n    while 0 not in (a, b):\n        (a, b) = (max(a, b), min(a, b))\n        if (a - x) % b == 0 and a >= x:\n            print('YES')\n            break\n        a %= b\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (a, b, x) = map(int, input().split())\n    while 0 not in [a, b]:\n        (a, b) = (max(a, b), min(a, b))\n        if (a - x) % b == 0 and a >= x:\n            print('YES')\n            break\n        a %= b\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (a, b, x) = map(int, input().split())\n    if x > max(a, b):\n        print('NO')\n        continue\n    while x <= max(a, b) and a != 0 and (b != 0):\n        (a, b) = (max(a, b), min(a, b))\n        if (a - x) % b == 0 or (b - x) % a == 0:\n            print('YES')\n            break\n        a = a % b\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (a, b, x) = map(int, input().split())\n    m = max(a, b)\n    m1 = min(a, b)\n    f = 1\n    if x > m:\n        print('NO')\n    elif x == m or x == m1:\n        print('YES')\n    else:\n        while m % m1 != 0:\n            if x % m1 == m % m1 and x <= m:\n                print('YES')\n                f = 0\n                break\n            (m, m1) = (max(m1, m % m1), min(m1, m % m1))\n        if f == 1:\n            if x <= m:\n                if x % m1 == 0:\n                    print('YES')\n                else:\n                    print('NO')\n            else:\n                print('NO')", "import math\nfor _ in range(int(input())):\n    (a, b, x) = map(int, input().split())\n    (a, b) = (max(a, b), min(a, b))\n    f = 'NO'\n    if a == x or b == x:\n        f = 'YES'\n    else:\n        b = min(b, a - b)\n        while True:\n            if a == 0 or b == 0:\n                if a == x or b == x:\n                    f = 'YES'\n                else:\n                    f = 'NO'\n                break\n            n = max(0, int((a - x) / b))\n            if n == 0:\n                break\n            a -= n * b\n            (a, b) = (max(a, b), min(a, b))\n            b = min(b, a - b)\n            if a == x or b == x:\n                f = 'YES'\n                break\n            if a == 0 or b == 0:\n                f = 'NO'\n                break\n            if (a - x) % b == 0:\n                f = 'YES'\n                break\n    print(f)", "import sys\ninput = sys.stdin.readline\nf_inf = float('inf')\nMOD = 10 ** 9 + 7\n\ndef get(a, b, x):\n    if a == x or b == x:\n        return True\n    if a < b:\n        (a, b) = (b, a)\n    if b > a - b:\n        b = a - b\n    if x > max(a, b) or a == 0 or b == 0:\n        return False\n    cnt = max(1, (a - max(x, b)) // (2 * b))\n    return get(a - b * cnt, b, x)\n\ndef solve():\n    (a, b, x) = map(int, input().split())\n    print('YES' if get(a, b, x) else 'NO')\nt = int(input())\nfor _ in range(t):\n    solve()", "import sys\ninput = lambda : sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    (a, b, x) = map(int, input().split())\n    if a < b:\n        (a, b) = (b, a)\n    while a != x and b != x:\n        if a < b:\n            (a, b) = (b, a)\n        if a == x or b == x:\n            print('YES')\n            break\n        if b > a - b:\n            b = a - b\n        if x > max(a, b) or a == 0 or b == 0:\n            print('NO')\n            break\n        a = a - b * max(1, (a - max(x, b)) // (2 * b))\n    else:\n        print('YES')"]