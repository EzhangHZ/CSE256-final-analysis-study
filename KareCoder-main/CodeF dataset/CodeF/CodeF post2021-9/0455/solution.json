["import sys\ninput = sys.stdin.readline\nout = []\nfor _ in range(int(input())):\n    x = int(input())\n    a = x // 2\n    b = x ^ a\n    if a == 2 * x - b:\n        out.append(f'{a} {b}')\n    else:\n        out.append(-1)\nfor i in out:\n    print(i)", "for n in [*map(int, open(0))][1:]:\n    b = n >> 1\n    print(*[b * 3, -1, b][bool(n & 1 or n & b)::2])", "def solve():\n    x = int(input())\n    if x % 2 == 1:\n        print(-1)\n        return\n    rest = x // 2\n    if x & rest == 0:\n        print(x + rest, rest)\n    else:\n        print(-1)\nt = int(input())\nfor _ in range(t):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2 != 0:\n        print(-1)\n        continue\n    if n ^ n // 2 == n // 2 * 3:\n        print(n // 2, 3 * n // 2)\n    else:\n        print(-1)", "for i in range(int(input())):\n    n = int(input())\n    if n % 2 == 1:\n        print(-1)\n    else:\n        a = n // 2\n        if a & n == 0:\n            b = a + n\n        else:\n            print(-1)\n            continue\n        print(a, b)", "def find_ab(x):\n    a = (x + 1) // 2\n    b = a ^ x\n    if (a + b) % 2 == 0 and (a + b) // 2 == x:\n        return (a, b)\n    else:\n        return -1\nfor _ in range(int(input())):\n    ans = find_ab(int(input()))\n    if ans == -1:\n        print(-1)\n    else:\n        print(ans[0], ans[1])", "for _ in range(int(input())):\n    N = int(input())\n    a = N // 2\n    b = a * 3\n    if a ^ b == N:\n        print(a, b)\n    else:\n        print(-1)", "for _ in int(input()) * ' ':\n    n = int(input())\n    x = n // 2\n    y = 3 * x\n    if x ^ y == n:\n        print(x, y)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    a = int(input())\n    if a % 2:\n        print(-1)\n    elif 3 * a // 2 ^ a // 2 == a:\n        print(3 * a // 2, a // 2)\n    else:\n        print(-1)", "def solve():\n    x = int(input())\n    if x % 2 == 1:\n        print(-1)\n        return\n    rest = x // 2\n    if x & rest == 0:\n        print(x + rest, rest)\n    else:\n        print(-1)\nt = int(input())\nfor _ in range(t):\n    solve()", "def find_pair(x):\n    if x % 2 == 1:\n        return -1\n    a = x + x // 2\n    b = x - x // 2\n    if a ^ b == x:\n        return (a, b)\n    else:\n        return -1\nt = int(input())\nfor _ in range(t):\n    x = int(input())\n    ans = find_pair(x)\n    if type(ans) == int:\n        print(-1)\n    else:\n        print(ans[0], ans[1])", "for _ in range(int(input())):\n    x = int(input())\n    if x % 2 == 1:\n        print(-1)\n        continue\n    m = x // 2\n    n = x // 2\n    if m & x:\n        print(-1)\n        continue\n    print(m + x, n)", "tdr_F = int(input())\nfor i in range(tdr_F):\n    CSd_fg = int(input())\n    if CSd_fg % 2 == 1:\n        print(-1)\n    else:\n        bSf_d = CSd_fg + CSd_fg // 2\n        k_po_j = CSd_fg // 2\n        if bSf_d ^ k_po_j == CSd_fg:\n            print(bSf_d, k_po_j)\n        else:\n            print(-1)", "for _ in range(int(input())):\n    if (a := (3 * (x := int(input())) // 2)) ^ (b := (x // 2)) == x == (a + b) // 2:\n        print(a, b)\n    else:\n        print(-1)", "n = int(input())\nfor i in range(n):\n    x = int(input())\n    if x % 2 == 1:\n        print(-1)\n    else:\n        a = x + x // 2\n        b = x // 2\n        if a ^ b == x:\n            print(a, b)\n        else:\n            print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    if n & 1:\n        print(-1)\n    elif n // 2 ^ n // 2 * 3 == n:\n        print(n // 2, n // 2 * 3)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    bl = True\n    if n & 1:\n        bl = False\n    a = n // 2\n    if a & n or not bl:\n        print(-1)\n    else:\n        print(a | n, a)", "for i in range(int(input())):\n    n = int(input())\n    a = n // 2\n    if a ^ 2 * n - a == n:\n        print(a, 2 * n - a)\n    else:\n        print(-1)", "t = int(input())\nwhile t:\n    x = int(input())\n    a = x + x // 2\n    b = x // 2\n    if x % 2 == 1:\n        print(-1)\n    elif a ^ b == x:\n        print(a, b)\n    else:\n        print(-1)\n    t -= 1", "for i in range(int(input())):\n    s = int(input())\n    a = 3 * s // 2\n    b = s // 2\n    if s == a ^ b and s - a / 2 - b / 2 == 0.0:\n        print(a, b)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    if (a := (3 * (x := int(input())) // 2)) ^ (b := (x // 2)) == x == (a + b) // 2:\n        print(a, b)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    N = int(input())\n    a = N // 2\n    b = a * 3\n    if a ^ b == N:\n        print(a, b)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    if not n % 2:\n        n2 = int(n / 2)\n        if n + n2 ^ n - n2 == n:\n            print(f'{n + n2} {n - n2}')\n            continue\n        else:\n            print(-1)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    if (p := (3 * (x := int(input())) // 2)) ^ (b := (x // 2)) == x == (p + b) // 2:\n        print(p, b)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    a = 2 * n\n    if a - n // 2 ^ n // 2 == n:\n        print(a - n // 2, n // 2)\n    else:\n        print(-1)", "for i in range(int(input())):\n    n = int(input())\n    a = 3 * n // 2\n    b = n // 2\n    if n == a ^ b and 2 * n == a + b:\n        print(a, b)\n    else:\n        print(-1)", "def findab(x):\n    a = x >> 1\n    b = x | a\n    y = (a + b) / 2\n    if x == y:\n        print(a, b)\n        return\n    print(-1)\n    return\nt = int(input())\nfor T in range(t):\n    x = int(input())\n    findab(x)", "t = int(input())\nfor _ in range(0, t):\n    x = int(input())\n    if x % 2 == 1:\n        print('-1')\n    else:\n        a = int(3 * x / 2)\n        b = int(x / 2)\n        if a ^ b == x:\n            print(f'{a} {b}')\n        else:\n            print('-1')", "t = int(input())\nwhile t:\n    t -= 1\n    x = int(input())\n    (a, b) = (x // 2, 2 * x - x // 2)\n    if a ^ b == x:\n        print(a, b)\n    else:\n        print(-1)", "for t in range(0, int(input())):\n    n = int(input())\n    if n % 2 == 1:\n        print('-1')\n    else:\n        r = 3 * n // 2\n        a = n // 2\n        if r ^ a == n:\n            print(a, r)\n        else:\n            print('-1')", "import sys\nimport math\nimport heapq\nimport bisect\n\ndef solve(X, Y):\n    A = 0\n    B = 0\n    if X < Y:\n        A = -1\n        B = -1\n    elif abs(X - Y) & 1 != 0:\n        A = -1\n        B = -1\n    elif X == Y:\n        A = 0\n        B = Y\n    else:\n        A = (X - Y) // 2\n        if A & Y == 0:\n            B = A + Y\n        else:\n            A = -1\n            B = -1\n    return (A, B)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = 2 * n\n    (a, b) = solve(s, n)\n    if a == -1:\n        print(-1)\n    else:\n        print(a, b)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 2 != 0 or '11' in bin(n):\n        print(-1)\n        continue\n    print(n // 2, n // 2 + n)", "def solve():\n    x = int(input())\n    a = 2 * x // 4\n    b = 2 * x // 4 * 3\n    if 2 * (a ^ b) == a + b and x % 2 != 1:\n        print(a, b)\n    else:\n        print(-1)\nt = int(input())\nfor _ in range(t):\n    solve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 2 != 0 or '11' in bin(n):\n        print(-1)\n        continue\n    print(n // 2, n // 2 + n)", "t = int(input().strip())\nresult = []\nfor _ in range(t):\n    x = int(input().strip())\n    a = x // 2\n    if 2 * a == x and a & x == 0:\n        print(a, a + x)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    x = int(input())\n    if x % 2 == 1:\n        print(-1)\n    else:\n        a = x + x // 2\n        b = x // 2\n        if a ^ b == x:\n            print(a, b)\n        else:\n            print(-1)", "t = int(input())\nwhile t:\n    n = int(input())\n    if n % 2 != 0:\n        print(-1)\n    else:\n        a = int(3 * n / 2)\n        b = int(n / 2)\n        if int((a + b) / 2) == a ^ b:\n            print(a, b)\n        else:\n            print(-1)\n    t -= 1", "for __ in range(int(input())):\n    x = int(input())\n    (a, b) = (x // 2 * 3, x // 2)\n    if a ^ b == x:\n        print(a, b)\n    else:\n        print('-1')", "def ans(x):\n    if x % 2 == 0:\n        a = x // 2\n        b = 2 * x - a\n        if a ^ b == (a + b) / 2:\n            return (a, b)\n    return (-1, -1)\ntest_cases = int(input())\nwhile test_cases != 0:\n    d = int(input())\n    (k1, k2) = ans(d)\n    if k1 == -1:\n        print(-1)\n    else:\n        print(k1, k2)\n    test_cases -= 1", "for _ in range(int(input())):\n    x = int(input())\n    b = int(x / 2)\n    a = 2 * x - b\n    if a ^ b == x:\n        print(a, b, sep=' ')\n    else:\n        print('-1')", "import math\nimport random\nimport statistics\nfrom collections import Counter\nimport heapq\nimport operator\nimport itertools\nimport sys\nimport functools\nimport bisect\nimport copy\nKPMOD = 1000000007\n\ndef KPMODINV(a, KPMOD=1000000007):\n    return KPPOW(a, KPMOD - 2)\n\ndef KPMULT(a, b):\n    return a % KPMOD * (b % KPMOD) % KPMOD\n\ndef KPADD(a, b):\n    return (a % KPMOD + b % KPMOD) % KPMOD\n\ndef KPPOW(a, b):\n    if b == 0:\n        return 1\n    res = KPPOW(a, b // 2) % KPMOD\n    if b % 2:\n        return res * res * a % KPMOD\n    else:\n        return res * res % KPMOD\nfor _ in range(int(input())):\n    KPN = int(input())\n    if KPN // 2 & KPN:\n        print(-1)\n    elif KPN & 1:\n        print(-1)\n    else:\n        print(KPN * 6 // 4, KPN // 2)", "t = int(input())\nfor _ in range(t):\n    x = int(input())\n    binary = bin(x)[2:]\n    a = int(len(binary) * '1', 2)\n    b = int(binary.replace('0', '_').replace('1', '0').replace('_', '1'), 2)\n    k = (a + b) // 2\n    if (a + b) % 2 != 0 or a == 0 or b == 0 or (k < x):\n        print(-1)\n        continue\n    diff = k - x\n    a -= diff\n    b -= diff\n    if a <= 0 or b <= 0 or x != (a + b) // 2 or (a ^ b != x):\n        print(-1)\n        continue\n    else:\n        print(a, b)", "for _ in range(int(input())):\n    if (a := (3 * (x := int(input())) // 2)) ^ (b := (x // 2)) == x == (a + b) // 2:\n        print(a, b)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    if (a := (3 * (x := int(input())) // 2)) ^ (b := (x // 2)) == x == (a + b) // 2:\n        print(a, b)\n    else:\n        print(-1)", "import functools\nimport sys\nfrom collections import defaultdict\nimport collections\nimport math\nimport heapq\n\ndef solve(N):\n    arr = bin(N)[2:]\n    arr_a = list(arr)\n    arr_b = ['0'] * len(arr)\n    curr_sum = N\n    needed_sum = N\n    if needed_sum % 2 == 1:\n        return -1\n    else:\n        target_sum = needed_sum // 2\n    new_arr = int(bin(target_sum)[2:].zfill(len(arr)), 2)\n    if new_arr & N > 0:\n        return -1\n    else:\n        res = []\n        res.append(new_arr | N)\n        res.append(new_arr)\n        return ' '.join([str(x) for x in res])\nt = int(input())\nfor j in range(1, t + 1):\n    N = int(input())\n    result = solve(N)\n    print(result)", "def main():\n    n = int(input())\n    if n % 2:\n        print(-1)\n        return\n    b = bin(n)\n    b = b[2:]\n    alt = ['0'] * len(b)\n    b = list(b)\n    i = 0\n    while i < len(b) - 1:\n        if b[i] == '1':\n            if b[i + 1] == '1':\n                print(-1)\n                return\n            b[i + 1] = '1'\n            alt[i + 1] = '1'\n            i += 1\n        i += 1\n    b = ''.join(b)\n    alt = ''.join(alt)\n    a1 = int(b, 2)\n    a2 = int(alt, 2)\n    print(a1, a2)\n    return\nfor _ in range(int(input())):\n    main()", "from math import gcd\nfrom sys import setrecursionlimit\nsetrecursionlimit(10 ** 6)\n\ndef ye():\n    print('Yes')\n\ndef no():\n    print('NO')\n\ndef solve():\n    intx = int(input())\n    x = bin(intx)[2:]\n    if x[-1] == '1':\n        print(-1)\n        return\n    for i in range(1, len(x)):\n        if x[i] == '1' and x[i] == x[i - 1]:\n            print(-1)\n            return\n    print(intx * 3 // 2, intx // 2)\n    return\nTT_T = int(input())\nwhile TT_T:\n    solve()\n    TT_T -= 1", "for a in range(int(input())):\n    n = int(input()) << 1\n    s = '0' + bin(n)[2:]\n    (c, d) = (0, 0)\n    if n % 4 != 0:\n        print(-1)\n    else:\n        n1 = len(s)\n        for b in range(1, n1):\n            if s[b] == '1' and s[b - 1] == '1':\n                print(-1)\n                break\n        else:\n            print(n - (n >> 2), n >> 2)", "def main():\n    _i = int(input())\n    for _ in range(_i):\n        n = int(input().strip('\\r\\n'))\n        a1 = ''\n        a2 = ''\n        sn = f'{n:b}'\n        i = 0\n        fail = False\n        while i < len(sn):\n            if sn[i] == '1':\n                if i == len(sn) - 1 or sn[i + 1] != '0':\n                    fail = True\n                    break\n                a1 = a1 + '11'\n                a2 = a2 + '01'\n                i += 1\n            else:\n                a1 = a1 + '0'\n                a2 = a2 + '0'\n            i += 1\n        if fail:\n            print('-1')\n        else:\n            print(int(a1, 2), int(a2, 2))\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 2 == 1:\n        print(-1)\n    else:\n        x = n // 2\n        y = 1\n        flag = 0\n        if x == 1:\n            flag *= 4\n        for i in range(5):\n            if y == 0:\n                y += 1\n            else:\n                break\n        for i in range(35):\n            if x & y << i:\n                if n & y << i:\n                    flag = 1\n                    break\n        if flag == 1:\n            print(-1)\n        else:\n            print(x, 2 * n - x, end=' ')\n            print()", "def one():\n    n = int(input())\n    s = 1\n    d = []\n    while s <= n:\n        if not n & s:\n            d.append(s)\n        s += s\n    (a, b) = (0, n)\n    for x in reversed(d):\n        if a + b + x + x <= n + n:\n            a += x\n            b += x\n    if a + b == n + n:\n        print(a, b)\n    else:\n        print(-1)\nt = int(input())\nfor i in range(t):\n    one()", "cases = int(input())\n\ndef main():\n    for case in range(cases):\n        x = int(input())\n        n = 2 * x\n        if x % 2:\n            print(-1)\n            continue\n        a = 0\n        b = 0\n        wr = bin(x)[:1:-1]\n        wr += '0'\n        pow2 = 1\n        xs = []\n        for (i, d) in enumerate(wr):\n            if d == '1':\n                a += pow2\n            else:\n                xs.append(pow2)\n            pow2 *= 2\n        while xs:\n            p = xs.pop()\n            if a + b + 2 * p <= n:\n                a += p\n                b += p\n        if a + b == n:\n            print(a, b)\n        else:\n            print(-1)\nmain()", "import os\nimport math\nimport collections\nimport bisect\nimport functools\nimport itertools\nimport heapq\n\ndef solve(x):\n    if x & 1:\n        return [-1]\n    and_val = x // 2\n    sa = '{0:b}'.format(and_val)\n    sx = '{0:b}'.format(x)\n    if len(sa) < len(sx):\n        sa = sa.zfill(len(sx))\n    if len(sx) < len(sa):\n        sx = sx.zfill(len(sa))\n    (a, b) = (['0'] * len(sx), ['0'] * len(sx))\n    for i in range(len(sx)):\n        if sa[i] == '0' and sx[i] == '0':\n            continue\n        elif sa[i] == '1' and sx[i] == '0':\n            a[i] = '1'\n            b[i] = '1'\n        elif sa[i] == '0' and sx[i] == '1':\n            a[i] = '1'\n        else:\n            return [-1]\n    return [int(''.join(a), 2), int(''.join(b), 2)]\nt = int(input())\nfor _ in range(t):\n    x = int(input())\n    res = solve(x)\n    print(' '.join(map(str, res)))", "t = int(input())\nfor test in range(t):\n    x = int(input())\n    y = bin(x)\n    (a, b) = (0, 0)\n    i = 2\n    while i < len(y):\n        if y[i:i + 2] == '10':\n            (a, b) = (a << 2 | 3, b << 2 | 1)\n            i += 2\n        elif y[i:i + 1] == '0':\n            (a, b) = (a << 1, b << 1)\n            i += 1\n        else:\n            (a, b) = (None, None)\n            break\n    if a and b:\n        print(a, b)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n\n    def solve(num):\n        a = 0\n        b = 0\n        last = 0\n        ok = 1\n        tmp = -1\n        while num > 0:\n            w = num & 1\n            num >>= 1\n            tmp += 1\n            if tmp == 0 and w == 1:\n                ok = 0\n                break\n            if w == 1 and last == 1:\n                ok = 0\n                break\n            if w == 1:\n                a += 1 << tmp\n                if tmp > 0:\n                    a += 1 << tmp - 1\n                    b += 1 << tmp - 1\n            last = w\n        if ok == 1:\n            print(a, b)\n        else:\n            print(-1)\n    solve(n)\n    pass", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n\n    def solve(num):\n        a = 0\n        b = 0\n        last = 0\n        ok = 1\n        tmp = -1\n        while num > 0:\n            w = num & 1\n            num >>= 1\n            tmp += 1\n            if tmp == 0 and w == 1:\n                ok = 0\n                break\n            if w == 1 and last == 1:\n                ok = 0\n                break\n            if w == 1:\n                a += 1 << tmp\n                if tmp > 0:\n                    a += 1 << tmp - 1\n                    b += 1 << tmp - 1\n            last = w\n        if ok == 1:\n            print(a, b)\n        else:\n            print(-1)\n    solve(n)\n    pass", "import math\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        res = alg()\n        print(res)\n\ndef alg():\n    x = int(input())\n    s = x // 2\n    a = 0\n    b = 0\n    res = 0\n    for i in range(32):\n        Xi = x & 1 << i\n        Si = s & 1 << i\n        if Xi == 0 and Si > 0:\n            a = 1 << i | a\n            b = 1 << i | b\n        elif Xi > 0 and Si == 0:\n            a = 1 << i | a\n        elif Xi > 0 and Si == 0:\n            res = -1\n            break\n    if res == 0:\n        if a + b == 2 * (a ^ b):\n            res = str(a) + ' ' + str(b)\n        else:\n            res = -1\n    return res\nmain()", "def func():\n    x = int(input())\n    if x % 2 == 1:\n        print(-1)\n        return\n    a = 0\n    v = []\n    t = x\n    p = 1\n    while t != 0:\n        y = t % 2\n        t = t // 2\n        if y == 0:\n            v.append(p)\n        else:\n            a += p\n        p *= 2\n    t = x - a // 2\n    p = 1\n    b = 0\n    while t != 0:\n        y = t % 2\n        t = t // 2\n        if y == 1:\n            if p not in v:\n                print(-1)\n                return\n            b += p\n        p *= 2\n    print(a + b, b)\nfor i in range(int(input())):\n    func()", "import math\ntest_cases = int(input())\nfor _ in range(test_cases):\n    xor = int(input())\n    first = xor\n    second = 0\n    for index in range(math.ceil(math.log2(xor)), -1, -1):\n        power_2 = 1 << index\n        if xor & power_2 > 1:\n            continue\n        if 2 * xor - (first + second) >= power_2 << 1:\n            first += power_2\n            second += power_2\n    if first + second == 2 * xor and first ^ second == xor:\n        print(first, second)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    x = int(input())\n    a = x\n    b = 0\n    for i in range(32, -1, -1):\n        if x & 1 << i > 0:\n            continue\n        if 2 * x - a - b >= 2 << i:\n            a += 1 << i\n            b += 1 << i\n    if a + b == 2 * x and a ^ b == x:\n        print(a, b)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    x = int(input())\n    a = x\n    b = 0\n    for i in range(32, -1, -1):\n        if x & 1 << i > 0:\n            continue\n        if 2 * x - a - b >= 2 << i:\n            a += 1 << i\n            b += 1 << i\n    if a + b == 2 * x and a ^ b == x:\n        print(a, b)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    x = int(input())\n    a = x\n    b = 0\n    for i in range(32, -1, -1):\n        if x & 1 << i > 0:\n            continue\n        if 2 * x - a - b >= 2 << i:\n            a += 1 << i\n            b += 1 << i\n    if a + b == 2 * x and a ^ b == x:\n        print(a, b)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    x = int(input())\n    a = x\n    b = 0\n    for i in range(32, -1, -1):\n        if x & 1 << i > 0:\n            continue\n        if 2 * x - a - b >= 2 << i:\n            a += 1 << i\n            b += 1 << i\n    if a + b == 2 * x and a ^ b == x:\n        print(a, b)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    x = int(input())\n    a = x\n    b = 0\n    for i in range(32, -1, -1):\n        if x & 1 << i > 0:\n            continue\n        if 2 * x - a - b >= 2 << i:\n            a += 1 << i\n            b += 1 << i\n    if a + b == 2 * x and a ^ b == x:\n        print(a, b)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    x = int(input())\n    a = x\n    b = 0\n    for i in range(32, -1, -1):\n        if x & 1 << i > 0:\n            continue\n        if 2 * x - a - b >= 2 << i:\n            a += 1 << i\n            b += 1 << i\n    if a + b == 2 * x and a ^ b == x:\n        print(a, b)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    x = int(input())\n    (a, b) = (x, 0)\n    for i in range(32, -1, -1):\n        if x & 1 << i > 0:\n            continue\n        if 2 * x - a - b >= 2 << i:\n            a += 1 << i\n            b += 1 << i\n    print(f'{a} {b}' if a + b == 2 * x and a ^ b == x else -1)", "import sys\ninput = lambda : sys.stdin.readline().strip()\n\ndef compute(S, X):\n    if (S - X) % 2 != 0:\n        return [-1]\n    A = (S - X) // 2\n    a = 0\n    b = 0\n    for i in range(64):\n        Xi = X & 1 << i\n        Ai = A & 1 << i\n        if Xi == 0 and Ai == 0:\n            pass\n        elif Xi == 0 and Ai > 0:\n            a = 1 << i | a\n            b = 1 << i | b\n        elif Xi > 0 and Ai == 0:\n            a = 1 << i | a\n        else:\n            return [-1]\n    return [a, b]\n\ndef solve():\n    n = int(input())\n    a = compute(n * 2, n)\n    print(*a)\nfor i in range(int(input())):\n    solve()", "t = int(input())\nfor _ in range(t):\n    x = int(input())\n    a = x\n    b = 0\n    for i in range(32, -1, -1):\n        if x & 1 << i > 0:\n            continue\n        if 2 * x - a - b >= 2 << i:\n            a += 1 << i\n            b += 1 << i\n    if a + b == 2 * x and a ^ b == x:\n        print(a, b)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    x = int(input())\n    a = x\n    b = 0\n    for i in range(32, -1, -1):\n        if x & 1 << i > 0:\n            continue\n        if 2 * x - a - b >= 2 << i:\n            a += 1 << i\n            b += 1 << i\n    if a + b == 2 * x and a ^ b == x:\n        print(a, b)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    x = int(input())\n    a = x\n    b = 0\n    for i in range(32, -1, -1):\n        if x & 1 << i > 0:\n            continue\n        if 2 * x - a - b >= 2 << i:\n            a += 1 << i\n            b += 1 << i\n    if a + b == 2 * x and a ^ b == x:\n        print(a, b)\n    else:\n        print(-1)", "z = int(input())\nfor _ in range(z):\n    x = int(input())\n    a = x\n    b = 0\n    for i in range(32, -1, -1):\n        if x & 1 << i > 0:\n            continue\n        if 2 * x - a - b >= 2 << i:\n            a += 1 << i\n            b += 1 << i\n    if a + b == 2 * x and a ^ b == x:\n        print(a, b)\n    else:\n        print(-1)", "z = int(input())\nfor _ in range(z):\n    x = int(input())\n    a = x\n    b = 0\n    for i in range(32, -1, -1):\n        if x & 1 << i > 0:\n            continue\n        if 2 * x - a - b >= 2 << i:\n            a += 1 << i\n            b += 1 << i\n    if a + b == 2 * x and a ^ b == x:\n        print(a, b)\n    else:\n        print(-1)", "import sys\n\ndef rec(mask, s, x, bit, a, b):\n    if s == 0 and bit == 0:\n        return [a, b]\n    if x & 1:\n        if s & 1 == 1 + bit & 1:\n            return rec(mask << 1, s >> 1, x >> 1, bit + 1 >> 1, a | mask, b)\n    else:\n        r = None\n        if bit + 1 + 1 & 1 == s & 1:\n            r = rec(mask << 1, s >> 1, x >> 1, bit + 1 + 1 >> 1, a | mask, b | mask)\n        if not r and bit == s & 1:\n            r = rec(mask << 1, s >> 1, x >> 1, 0, a, b)\n        if r:\n            return r\n    return None\n\ndef solve():\n    x = int(data.readline())\n    s = x << 1\n    r = rec(1, s, x, 0, 0, 0)\n    if r:\n        print(*r)\n    else:\n        print(-1)\ndata = sys.stdin\ntotal_tests = int(data.readline())\nfor test in range(total_tests):\n    solve()", "t = int(input())\nfor i in range(t):\n    x = int(input())\n    y = x // 2\n    a = 0\n    b = 0\n    ca = 1\n    ind = 0\n    if x % 2 == 1:\n        print(-1)\n        continue\n    while x > 0:\n        tx = x % 2\n        ty = y % 2\n        if tx == 0 and ty == 1:\n            a += ca\n            b += ca\n        elif tx == 1 and ty == 0:\n            a += ca\n        elif tx == 1 and ty == 1:\n            ind = 1\n        if ind == 1:\n            break\n        ca *= 2\n        x //= 2\n        y //= 2\n    if ind == 1:\n        print(-1)\n    else:\n        print(a, b)", "def compute(S, X):\n    A = (S - X) // 2\n    a = 0\n    b = 0\n    for i in range(64):\n        Xi = X & 1 << i\n        Ai = A & 1 << i\n        if Xi == 0 and Ai == 0:\n            pass\n        elif Xi == 0 and Ai > 0:\n            a = 1 << i | a\n            b = 1 << i | b\n        elif Xi > 0 and Ai == 0:\n            a = 1 << i | a\n        else:\n            return [-1, -1]\n    return [a, b]\n\ndef solve():\n    x = int(input())\n    [a, b] = compute(x * 2, x)\n    if a ^ b == x and (a + b) / 2 == x:\n        print(a, b)\n    else:\n        print(-1)\n    return\n    print('RR', x % 4)\n    for i in range(x):\n        if x + i > 2 ** 32:\n            break\n        if x - i ^ x + i == x:\n            print(x - i, x + i)\n            a = x - i\n            b = x + i\n            c = a & b\n            return\n            print(f'{a:>08b} {b:>08b}  {x:>08b} {c:>08b} ')\n    print(-1)\nfor t in range(int(input())):\n    solve()", "import sys\nN = int(200000.0 + 5)\nsys.setrecursionlimit(N)\n\ndef charming():\n    x = int(input())\n    if x & 1 == 1:\n        print(-1)\n        return\n    two = list()\n    for i in range(32):\n        if x // pow(2, i) & 1:\n            two.append(i)\n    a = x + pow(2, two[0] - 1)\n    b = pow(2, two[0] - 1)\n    for i in range(1, len(two)):\n        if two[i] == two[i - 1] + 1:\n            print(-1)\n            return\n        a += pow(2, two[i] - 1)\n        b += pow(2, two[i] - 1)\n    if a ^ b == (a + b) // 2:\n        print(a, b)\n    else:\n        print(-1)\nfor t in range(int(input())):\n    charming()", "def compute(S, X):\n    A = (S - X) // 2\n    a = 0\n    b = 0\n    for i in range(64):\n        Xi = X & 1 << i\n        Ai = A & 1 << i\n        if Xi == 0 and Ai == 0:\n            pass\n        elif Xi == 0 and Ai > 0:\n            a = 1 << i | a\n            b = 1 << i | b\n        elif Xi > 0 and Ai == 0:\n            a = 1 << i | a\n        else:\n            print(-1)\n            return\n    print(a, b)\nfor i in range(int(input())):\n    n = int(input())\n    if n % 2 == 1:\n        print(-1)\n    else:\n        compute(2 * n, n)", "def check(s, xor):\n    a2 = (s - xor) // 2\n    a = 0\n    b = 0\n    for i in range(64):\n        x1 = xor & 1 << i\n        a1 = a2 & 1 << i\n        if x1 == 0 and a1 == 0:\n            pass\n        elif x1 == 0 and a1 > 0:\n            a = 1 << i | a\n            b = 1 << i | b\n        elif x1 > 0 and a1 == 0:\n            a = 1 << i | a\n        else:\n            return [-1]\n    if (a + b) % 2 == 0:\n        data = [a, b]\n        return data\n    else:\n        return [-1]\nfor _ in range(int(input())):\n    n = int(input())\n    m = 2 * n\n    val = check(m, n)\n    print(*val)", "t = int(input())\nfor _ in range(t):\n    x = int(input())\n    a = x\n    b = 0\n    for i in range(32, -1, -1):\n        if x & 1 << i > 0:\n            continue\n        if 2 * x - a - b >= 2 << i:\n            a += 1 << i\n            b += 1 << i\n    if a + b == 2 * x and a ^ b == x:\n        print(a, b)\n    else:\n        print(-1)", "import collections\n\ndef compute(s, x):\n    av = (s - x) // 2\n    a = 0\n    b = 0\n    for i in range(64):\n        Xi = x & 1 << i\n        Ai = av & 1 << i\n        if Xi == 0 and Ai == 0:\n            pass\n        elif Xi == 0 and Ai > 0:\n            a = 1 << i | a\n            b = 1 << i | b\n        elif Xi > 0 and Ai == 0:\n            a = 1 << i | a\n        else:\n            print(-1)\n            return\n    if a + b == s:\n        print(a, b)\n    else:\n        print(-1)\nfor _ in range(int(input())):\n    n = int(input())\n    x = n\n    s = 2 * n\n    compute(s, x)", "def N():\n    return int(input())\n\ndef A():\n    return [int(x) for x in input().split()]\n\ndef S():\n    return input()\n\ndef decimalToBinary(n):\n    return bin(n).replace('0b', '')\nfor _ in range(N()):\n    n = N()\n    a = []\n    f = n % 2 == 0\n    p = 0\n    b = []\n    if 'codeforces' == 28226329:\n        print('Tanmay')\n    for i in range(32, -1, -1):\n        bit = n >> i & 1\n        if p == 1 and bit == 1:\n            f = False\n            break\n        if bit == 1:\n            a.append(1)\n            b.append(0)\n        elif p == 1:\n            a.append(1)\n            b.append(1)\n        else:\n            a.append(0)\n            b.append(0)\n        p = bit\n    if not f:\n        print(-1)\n        continue\n    a1 = b1 = 0\n    for i in b:\n        b1 = b1 * 2 + i\n    for i in a:\n        a1 = i + a1 * 2\n    print(a1, b1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    S = 2 * n\n    bn = []\n    tmp = n\n    while tmp:\n        bn.append(tmp % 2)\n        tmp //= 2\n    bn.reverse()\n    a = bn[:]\n    b = [0 for _ in range(len(bn))]\n    res = 1\n    if bn[-1] == 1:\n        res = 0\n    else:\n        for i in range(len(bn) - 1):\n            if bn[i] and bn[i - 1]:\n                res = 0\n                break\n            if bn[i]:\n                a[i + 1] = 1\n                b[i + 1] = 1\n    if not res:\n        print(-1)\n    else:\n        rA = 0\n        rB = 0\n        POW = 1\n        for i in range(len(bn) - 1, -1, -1):\n            rA += a[i] * POW\n            rB += b[i] * POW\n            POW *= 2\n        print(rA, rB)", "t = int(input())\nfor i in range(0, t):\n    m = int(input())\n    x = m\n    l = []\n    ll = []\n    while m >= 1:\n        l.append(m % 2)\n        m = m // 2\n    for j in range(1, len(l)):\n        ll.append(l[j])\n    ll.append(0)\n    l\n    ll\n    a = 0\n    b = 0\n    bl = True\n    for k in range(0, len(l)):\n        if l[k] == 1 and ll[k] == 1:\n            bl = False\n            break\n        elif l[k] == 0 and ll[k] == 1:\n            a = a + pow(2, k) * 1\n            b = b + pow(2, k) * 1\n        elif l[k] == 1 and ll[k] == 0:\n            a = a + pow(2, k) * 1\n    if x % 2 == 0:\n        if bl:\n            print(a, b)\n        else:\n            print(-1)\n    else:\n        print(-1)", "import math\nfrom collections import Counter\n\ndef recur(x, s, c=0):\n    if x == s == 0:\n        return (0, 0)\n    if x & 1 ^ s & 1 != c:\n        return (None, None)\n    if x & 1 != 1 or c != 1:\n        (a, b) = recur(x >> 1, s >> 1, 0)\n        if a != None:\n            return (a << 1, (b << 1) + (x & 1))\n    if x & 1 != 1 or c != 0:\n        (a, b) = recur(x >> 1, s >> 1, 1)\n        if a != None:\n            return ((a << 1) + 1, (b << 1) + (x & 1 ^ 1))\n    return (None, None)\nfor t in range(int(input())):\n    x = int(input())\n    s = 2 * x\n    (a, b) = recur(x, s)\n    if a == None:\n        print(-1)\n    else:\n        assert a ^ b == x and a + b == s\n        print(a, b)", "n = int(input())\nfor i in range(n):\n    x = int(input())\n    if x % 2 == 1:\n        k = (x + 1) // 2\n    else:\n        k = x // 2\n    a = [0] * 33\n    b = [0] * 33\n    w = [0] * 33\n    wk = [0] * 33\n    for j in range(33):\n        if x >> j & 1:\n            w[j] = 1\n        if k >> j & 1:\n            wk[j] = 1\n    flag = False\n    for j in range(33):\n        if wk[j] == 1 and w[j] == 1:\n            flag = True\n            break\n        elif w[j] == 1:\n            a[j] = 1\n        elif wk[j] == 1:\n            a[j] = 1\n            b[j] = 1\n    if flag == True:\n        print(-1)\n        continue\n    else:\n        resa = 0\n        resb = 0\n        a.reverse()\n        b.reverse()\n        for j in range(33):\n            resa = resa * 2 + a[j]\n            resb = resb * 2 + b[j]\n        print(resa, resb)", "t = int(input())\nfor test in range(t):\n    x = int(input())\n    su = x * 2\n    x1 = '0' + bin(x)[2:]\n    su1 = bin(su)[2:]\n    otva = 0\n    otvb = 0\n    cur = 1\n    fl = 1\n    ls = 0\n    for i in range(len(x1) - 1, -1, -1):\n        if int(x1[i]) == abs(int(su1[i]) - ls) == 0:\n            if x1[i - 1] == su1[i - 1]:\n                ls = 0\n            elif su1[i - 1] == 1:\n                otva += cur\n                otvb += cur\n                ls = 1\n            else:\n                otva += cur\n                otvb += cur\n                ls = 1\n        elif int(x1[i]) == abs(int(su1[i]) - ls) == 1:\n            otva += cur\n        else:\n            fl = -1\n            break\n        cur *= 2\n    if fl == -1:\n        print(-1)\n    else:\n        print(otva, otvb)", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2:\n        print(-1)\n        continue\n    arr = []\n    while n:\n        arr.append(n % 2)\n        n //= 2\n    arr = arr[::-1]\n    n = len(arr)\n    yes = 1\n    for i in range(n - 1):\n        if arr[i] == 1 and arr[i + 1] == 1:\n            yes = 0\n            print(-1)\n            break\n    if yes == 0:\n        continue\n    (a, b) = ([0 for i in range(n)], [0 for i in range(n)])\n    for i in range(n - 1):\n        if arr[i] == 1:\n            a[i] = 1\n            a[i + 1] = 1\n            b[i + 1] = 1\n    (a, b) = (a[::-1], b[::-1])\n    (a1, b1) = (0, 0)\n    for i in range(n):\n        a1 += a[i] * 2 ** i\n        b1 += b[i] * 2 ** i\n    print(str(a1) + ' ' + str(b1))", "def hkjbklj(x):\n    if x % 2 == 1:\n        return -1\n    s = x // 2\n    asa = 1\n    for i in range(1, 30):\n        asa *= 2\n        if asa >= x:\n            asa = i + 1\n            break\n    a = [None] * asa\n    b = [None] * asa\n    bsb = 1\n    for i in range(asa):\n        csc = bsb\n        bsb *= 2\n        a[0 - i - 1] = s % bsb // csc\n        b[0 - i - 1] = s % bsb // csc\n        s -= s % bsb\n    c = a[1:] + [0]\n    for i in range(asa):\n        if b[i] == 1 and c[i] == 1:\n            return -1\n        b[i] += c[i]\n    dsd = 1\n    sa = 0\n    sb = 0\n    for i in range(asa):\n        sa += a[asa - i - 1] * dsd\n        sb += b[asa - i - 1] * dsd\n        dsd *= 2\n    return (sa, sb)\nt = int(input())\nfor i in range(t):\n    k = hkjbklj(int(input()))\n    if k == -1:\n        print(-1)\n    else:\n        print(*k)", "def cn(x):\n    l = []\n    while x > 0:\n        l.append(x % 2)\n        x = x // 2\n    return l\nt = int(input())\nfor i in range(0, t):\n    m = int(input())\n    x = m\n    l = cn(m)\n    ll = []\n    j = 1\n    while j < len(l):\n        ll.append(l[j])\n        j = j + 1\n    ll.append(0)\n    a = 0\n    b = 0\n    bl = 0\n    k = 0\n    while k < len(l):\n        if l[k] == 1 and ll[k] == 1:\n            bl = 1\n            break\n        elif l[k] == 0 and ll[k] == 1:\n            a = a + pow(2, k) * 1\n            b = b + pow(2, k) * 1\n        elif l[k] == 1 and ll[k] == 0:\n            a = a + pow(2, k) * 1\n            b = b + pow(2, k) * 0\n        else:\n            a = a + pow(2, k) * 0\n            b = b + pow(2, k) * 0\n        k = k + 1\n    if x % 2 == 0:\n        if bl == 0:\n            print(a, b)\n        else:\n            print(-1)\n    else:\n        print(-1)", "def generator(x, y):\n    s = bin(x)[2:]\n    carry = 0\n    for i in range(len(s) - 1, -1, -1):\n        j = len(s) - 1 - i\n        (k1, k2) = (x & 1 << j, y & 1 << j)\n        carry += k1 ^ k2\n    v1 = v2 = 0\n    for i in range(len(s) - 1, -1, -1):\n        j = len(s) - 1 - i\n        if s[i] == '0':\n            if i >= 1:\n                _j = len(s) - i\n                if carry & 1 << _j:\n                    v1 += 1 << j\n                    v2 += 1 << j\n        else:\n            v1 += 1 << j\n    if (v1 + v2) // 2 != x:\n        return (-1, -1)\n    return (v1, v2)\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        x = int(input())\n        (a, b) = generator(x, 2 * x)\n        if a == -1:\n            (a, b) = generator(x, 2 * x + 1)\n            if a == -1:\n                print(-1)\n            else:\n                print('{} {}'.format(a, b))\n        else:\n            print('{} {}'.format(a, b))\nmain()"]