["t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split(' '))\n    h = list(map(int, input().split(' ')))\n    h = sorted(h)\n    for j in range(0, n):\n        if h[n + j] - h[j] < x:\n            print('NO')\n            break\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    nx = list(map(int, input().split()))\n    (n, x) = (nx[0], nx[1])\n    height = sorted(list(map(int, input().split())))\n    flag = True\n    for i in range(n):\n        if height[i + n] - height[i] < x:\n            print('NO')\n            flag = False\n            break\n    if flag == True:\n        print('YES')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 'YES'\n    for i in range(n):\n        if a[i + n] - a[i] < x:\n            ans = 'NO'\n            break\n    print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = sorted(map(int, input().split()))\n    a = l[:n]\n    b = l[n:]\n    print('YNEOS'[not all((abs(i - j) >= x for (i, j) in zip(a, b)))::2])", "for i in range(int(input())):\n    (n, x) = map(int, input().split())\n    p = sorted(list(map(int, input().split())))\n    (f, b) = (p[:n], p[n:])\n    for i in range(n):\n        if b[i] - f[i] < x:\n            print('NO')\n            break\n    else:\n        print('YES')", "tc = int(input())\nfor t in range(tc):\n    (n, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    lst.sort()\n    arr = lst[n:]\n    bol = True\n    for i in range(n):\n        if arr[i] - lst[i] < k:\n            bol = False\n            break\n    if bol:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    L = list(map(int, input().split()))\n    L.sort()\n    A = L[:n]\n    B = L[n:]\n    found = True\n    for i in range(n):\n        if B[i] >= A[i] + x:\n            pass\n        else:\n            found = False\n            break\n    if found:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nc = 0\nwhile c < t:\n    n = list(map(int, input().split()))\n    h = list(map(int, input().split()))\n    h.sort()\n    h1 = h[:n[0]]\n    h2 = h[n[0]:]\n    i = 0\n    j = True\n    while i < n[0] and j == True:\n        if h2[i] - h1[i] >= n[1]:\n            j = True\n            i = i + 1\n        else:\n            j = False\n    if i == n[0]:\n        print('YES')\n    else:\n        print('NO')\n    c = c + 1", "t = int(input())\nwhile t:\n    (n, x) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    a.sort()\n    for i in range(n):\n        if a[i + n] - a[i] < x:\n            print('NO')\n            break\n    else:\n        print('YES')\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    a1 = a[:n]\n    a2 = a[n:]\n    flag = 0\n    for i in range(len(a1)):\n        if a2[i] - a1[i] < x:\n            flag = 1\n            break\n    if flag == 1:\n        print('NO')\n    else:\n        print('YES')", "n = int(input())\nfor _ in range(n):\n    check = 0\n    (n, x) = map(int, input().split())\n    arr = [*map(int, input().split())]\n    arr.sort()\n    for i in range(n):\n        if arr[n + i] < arr[i] + x:\n            check = 1\n            break\n    if check:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    (n, x) = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    arr.sort()\n    (i, j) = (len(arr) // 2 - 1, len(arr) - 1)\n    possible = True\n    while i > -1:\n        dif = arr[j] - arr[i]\n        if dif < x:\n            possible = False\n            break\n        i -= 1\n        j -= 1\n    if possible:\n        print('YES')\n    else:\n        print('NO')", "def checkPoss(a, n, x):\n    for i in range(n):\n        if a[n + i] - a[i] < x:\n            return False\n    return True\nans = []\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    if checkPoss(a, n, x):\n        ans.append('YES')\n    else:\n        ans.append('NO')\nfor c in ans:\n    print(c)", "def solution():\n    (n, x) = map(int, input().split())\n    h = sorted(list(map(int, input().split())))\n    for i in range(n):\n        if h[i + n] - h[i] < x:\n            print('NO')\n            return\n    print('YES')\nT = int(input())\nfor i in range(T):\n    solution()", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()[:2 * n]))\n    arr.sort()\n    counter = 0\n    k = -n\n    for i in range(0, n):\n        if arr[k] - arr[i] >= x:\n            counter += 1\n        k += 1\n    if counter == n:\n        print('YES')\n    else:\n        print('NO')", "import sys\nLI = lambda : list(map(int, sys.stdin.readline().split()))\nfor _ in range(int(input())):\n    lim = LI()\n    height = LI()\n    n = lim[0]\n    x = lim[1]\n    height.sort()\n    count = 0\n    for i in range(n):\n        if abs(height[i + n] - height[i]) >= x:\n            count += 1\n    print('YES' if count == n else 'NO')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    on = 0\n    for i in range(n):\n        if l[i + n] - l[i] < x:\n            on = 1\n            break\n    if on == 1:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    n = list(map(int, input().split()))\n    h = n[1]\n    n = n[0]\n    l = list(map(int, input().split()))\n    l.sort()\n    k = n\n    for i in range(n):\n        if l[k] - l[i] >= h:\n            k += 1\n            continue\n        else:\n            print('NO')\n            break\n    else:\n        print('YES')", "t = int(input())\nfor tt in range(t):\n    (n, x) = map(int, input().split())\n    res = True\n    a = list(map(int, input().split()))\n    a.sort()\n    for i in range(n):\n        if a[n + i] - a[i] < x:\n            res = False\n            break\n    if res == True:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    flag = True\n    for i in range(n):\n        if l[i + n] - l[i] < x:\n            flag = False\n            print('NO')\n            break\n    if flag:\n        print('YES')", "for _ in range(int(input())):\n    z = input().split(' ')\n    a = int(z[0])\n    b = int(z[1])\n    c = [int(x) for x in input().split(' ')]\n    c.sort()\n    j = a\n    count = 0\n    for i in range(0, a):\n        if c[j] - c[i] < b:\n            count += 1\n        j += 1\n    if count > 0:\n        print('NO')\n    else:\n        print('YES')", "import sys\nfor _ in range(int(input())):\n    (n, x) = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    a.sort()\n    ans = 'YES'\n    for i in range(n):\n        if a[i + n] - a[i] < x:\n            ans = 'NO'\n            break\n    sys.stdout.write(ans + '\\n')", "import sys\nfor _ in range(int(input())):\n    (n, x) = map(int, sys.stdin.readline().split())\n    a = sorted(map(int, sys.stdin.readline().split()))\n    ans = 'YES'\n    for i in range(n):\n        if a[i + n] - a[i] < x:\n            ans = 'NO'\n            break\n    sys.stdout.write(ans + '\\n')", "x = int(input())\n\ndef cal(n, m, arr):\n    arr.sort()\n    t = 0\n    for i in range(n):\n        if arr[i + n] - arr[i] < m:\n            t = 1\n            break\n    if t == 1:\n        return 'NO'\n    return 'YES'\nfor jj in range(x):\n    (n, m) = [int(i) for i in input().split(' ')]\n    p = [int(i) for i in input().split(' ')]\n    print(cal(n, m, p))", "t = int(input())\nfor i in range(t):\n    (n, x) = list(map(int, input().split()))\n    h = list(map(int, input().split()))\n    h.sort()\n    h1 = h[:n].copy()\n    h2 = h[n:].copy()\n    t = 0\n    for i in range(n):\n        if h2[i] >= h1[i] + x:\n            continue\n        else:\n            t = 1\n            break\n    print('NO' if t else 'YES')", "for _ in ' ' * int(input()):\n    (n, m) = map(int, input().split())\n    l = sorted(map(int, input().split()))\n    print(['NO', 'YES'][all((l[i + n] - l[i] >= m for i in range(n)))])", "from math import *\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    c = 0\n    for i in range(n):\n        if abs(l[i] - l[i + n]) >= x:\n            c += 1\n    if c == n:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = [int(x) for x in input().split()]\n    l.sort()\n    co = 0\n    ce = 0\n    for j in range(n):\n        if l[n + j] - l[j] < x:\n            co += 1\n        else:\n            ce += 1\n    if co != 0:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    flag = 0\n    for i in range(n, 2 * n):\n        if arr[i] - arr[i - n] < x:\n            flag = 1\n            print('NO')\n            break\n    if flag == 0:\n        print('YES')", "T = int(input())\nfor t in range(T):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a = sorted(a, reverse=False)\n    front = a[:n]\n    back = a[n:]\n    ans = True\n    for i in range(n):\n        if front[i] + x <= back[i]:\n            continue\n        else:\n            ans = False\n            break\n    if not ans:\n        print('NO')\n    else:\n        print('YES')", "def check_delta(heights, n, min_delta):\n    for j in range(n):\n        if heights[n + j] - heights[j] < min_delta:\n            print('NO')\n            return\n    print('YES')\nrounds = int(input())\nfor i in range(rounds):\n    (n, min_delta) = list(map(int, input().split(' ')))\n    heights = list(map(int, input().split(' ')))\n    heights.sort()\n    check_delta(heights, n, min_delta)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    h = sorted(map(int, input().split()))\n    print('YES' if all((h[n + i] - h[i] >= x for i in range(n))) else 'NO')", "t = int(input())\nl4 = []\nfor i in range(t):\n    (n, x) = input().split()\n    n = int(n)\n    x = int(x)\n    l1 = []\n    l2 = []\n    l3 = []\n    h = input().split()\n    h = list(map(int, h))\n    h.sort()\n    l1 = h[:n]\n    l2 = h[n:]\n    l1.sort()\n    l2.sort()\n    for (i, j) in zip(l1, l2):\n        if j - i >= x:\n            l3.append(1)\n        elif j - i < x:\n            l3.append(0)\n    if len(l3) == sum(l3):\n        l4.append('YES')\n    else:\n        l4.append('NO')\nfor i in l4:\n    print(i)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split(' '))\n    heights = list(map(int, input().split(' ')))\n    heights.sort()\n    mid = len(heights) // 2\n    length = len(heights)\n    result = 'YES'\n    for i in range(mid, length):\n        if heights[i] - heights[i - mid] < x:\n            result = 'NO'\n            break\n    print(result)", "ans = []\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    h = sorted(map(int, input().split()))\n    h1 = h[:n]\n    h2 = h[n:]\n    ans += ['YES' if all((h2[i] - h1[i] >= x for i in range(n))) else 'NO']\nprint(*ans, sep='\\n')", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    h = sorted([int(x) for x in input().split()])\n    ans = 'YES'\n    for (i, j) in zip(h[:n], h[n:]):\n        if j - i >= x:\n            continue\n        else:\n            ans = 'NO'\n            break\n    print(ans)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    a = [int(x) for x in input().split()]\n    h = [int(x) for x in input().split()]\n    h.sort()\n    ans = True\n    for i in range(a[0]):\n        if h[i] > h[i + a[0]] - a[1]:\n            ans = False\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor test in range(t):\n    (n, x) = map(int, input().split())\n    heights = list(map(int, input().split()))\n    heights.sort()\n    row1 = heights[:n]\n    row2 = heights[n:]\n    i = 0\n    while i <= n - 1:\n        if row2[i] - row1[i] < x:\n            print('NO')\n            break\n        i += 1\n    else:\n        print('YES')", "def solve():\n    (n, x) = map(int, input().split())\n    a = sorted((int(_) for _ in input().split()))\n    for i in range(n):\n        if a[i + n] - a[i] < x:\n            print('NO')\n            return\n    print('YES')\nfor _ in range(int(input())):\n    solve()", "test = int(input())\nfor t in range(test):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    f = 0\n    for i in range(n):\n        if arr[i + n] - arr[i] < x:\n            f = 1\n            print('NO')\n            break\n    if f == 0:\n        print('YES')", "MOD = 10 ** 9 + 7\nfac_mem = [1]\n\ndef fac(n):\n    while len(fac_mem) < n + 1:\n        fac_mem.append(fac_mem[-1] * len(fac_mem) % MOD)\n    return fac_mem[n]\n\ndef perm(n, k):\n    return fac(n) * pow(fac(k), MOD - 2, MOD) % MOD\n\ndef comb(n, k):\n    return fac(n) * pow(fac(k) * fac(n - k) % MOD, MOD - 2, MOD) % MOD\n\ndef count(l):\n    r = {}\n    for i in l:\n        r[i] = r.get(i, 0) + 1\n    return r\n\ndef group(l):\n    r = []\n    p = None\n    c = 0\n    for i in l:\n        if i == p:\n            c += 1\n        else:\n            r.append((p, c))\n            p = i\n            c = 1\n    if c:\n        r.append((p, c))\n    return r\n\nclass Tree:\n\n    def __init__(self, id):\n        self.id = id\n        self.parent = None\n        self.children = []\n\n    def __repr__(self):\n        if self.children:\n            return f'{self.id} -> [' + ', '.join((str(c) for c in self.children)) + ']'\n        else:\n            return f'{self.id}'\nfor case in range(int(input())):\n    (n, x) = [int(j) for j in input().split()]\n    a = [int(j) for j in input().split()]\n    a = sorted(a)\n    possible = True\n    for i in range(n):\n        if a[i] + x > a[i + n]:\n            possible = False\n            break\n    print(['NO', 'YES'][possible])", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\n\ndef solve():\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    for i in range(n):\n        if a[i] + x > a[i + n]:\n            return 0\n    return 1\nfor __ in range(int(input())):\n    print('YES' if solve() else 'NO')", "def solve(arr, x, n):\n    arr = sorted(arr)\n    for i in range(n):\n        if arr[i] + x > arr[i + n]:\n            return False\n    return True\nT = int(input())\nfor _ in range(T):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    res = solve(arr, x, n)\n    if res:\n        print('YES')\n    else:\n        print('NO')", "def resi():\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    for i in range(n):\n        if a[i] + x > a[i + n]:\n            print('NO')\n            return\n    print('YES')\n    return\nfor _ in range(int(input())):\n    resi()", "def main():\n    for t in range(int(input())):\n        (n, x) = map(int, input().split())\n        a = sorted(list(map(int, input().split())))\n        flag = True\n        for i in range(n):\n            if a[i] + x > a[i + n]:\n                flag = False\n                break\n        print('YES' if flag else 'NO')\nmain()", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 'YES'\n    for i in range(n):\n        if a[i + n] - a[i] < x:\n            ans = 'NO'\n    print(ans)", "t = int(input())\nfor tc in range(t):\n    (n, x) = map(int, input().split())\n    h = [int(i) for i in input().split()]\n    h.sort()\n    ans = 'YES'\n    for i in range(n):\n        if h[i + n] - h[i] < x:\n            ans = 'NO'\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    h = list(map(int, input().split()))\n    h.sort()\n    ans = 1\n    for i in range(n):\n        if h[i + n] - h[i] < k:\n            ans = 0\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (n, x) = map(int, input().split())\n    H = [int(k) for k in input().split()]\n    H.sort()\n    for k in range(n):\n        if H[n + k] - H[k] < x:\n            print('NO')\n            break\n    else:\n        print('YES')", "def sol(t):\n    (n, x) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    flag = True\n    for i in range(n):\n        if a[i] + x > a[i + n]:\n            flag = False\n            break\n    if flag:\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nfor i in range(t):\n    sol(i + 1)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    f = True\n    for i in range(n):\n        if a[i] + x > a[n + i]:\n            print('NO')\n            f = False\n            break\n    if f:\n        print('YES')", "from collections import Counter\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    flag = 0\n    l.sort()\n    for i in range(n):\n        if l[i] <= l[i + n] - k:\n            pass\n        else:\n            flag = 1\n            break\n    if flag:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    v = 1\n    for j in range(n):\n        if a[n + j] - a[j] < x:\n            v = 0\n    if v:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    for i in range(n):\n        if a[i + n] - a[i] < k:\n            print('NO')\n            break\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    l = sorted(list(map(int, input().split())))\n    for i in range(n):\n        if l[n + i] - l[i] < m:\n            print('NO')\n            break\n    else:\n        print('YES')", "for i in range(int(input())):\n    (n, x) = map(int, input().split())\n    c = sorted((int(j) for j in input().split()))\n    f = []\n    for j in range(n):\n        f = [c.pop()] + f\n    k = 0\n    for j in range(n):\n        if f[j] - c[j] < x:\n            k = 1\n    print(['YES', 'NO'][k])", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    hi = list(map(int, input().split()))\n    hi.sort()\n    row = [[], []]\n    for i in range(len(hi)):\n        if i < n:\n            row[0].append(hi[i])\n        else:\n            row[1].append(hi[i])\n    for i in range(n):\n        if row[1][i] - row[0][i] < x:\n            print('NO')\n            break\n    else:\n        print('YES')", "for t in range(int(input())):\n    (n, x) = map(int, input().split())\n    h = [int(x) for x in input().split()]\n    h.sort()\n    first = h[:n]\n    second = h[n:]\n    if all((s - f >= x for (f, s) in zip(first, second))):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    h = list(map(int, input().split()))\n    h.sort()\n    res = True\n    for j in range(n):\n        if h[j + n] - h[j] < x:\n            res = False\n            break\n    if res:\n        print('YES')\n    else:\n        print('NO')", "import sys\nimport collections\nfrom math import ceil, gcd, sqrt, log\nimport bisect\nINF = float('inf')\nmod = 1000000007\n\ndef solve():\n    (n, x) = map(int, input().split())\n    A = list(map(int, input().split()))\n    A.sort()\n    one = A[0:n]\n    two = A[n:]\n    ok = 1\n    for i in range(n):\n        if two[i] - one[i] < x:\n            ok = 0\n            break\n    if ok:\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "for p in range(int(input())):\n    (n, x) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    a.sort()\n    b = a[:n]\n    (c, f) = (a[n:], 0)\n    for i in range(len(b)):\n        if c[i] - b[i] < x:\n            f = 1\n            break\n    if f:\n        print('NO')\n    else:\n        print('YES')", "def soln():\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    for i in range(n):\n        if a[n + i] - a[i] < x:\n            print('NO')\n            return\n    print('YES')\nfor _ in range(int(input())):\n    soln()", "def num():\n    c = int(input())\n    return c\n\ndef stri():\n    c = str(input())\n    return c\n\ndef vector():\n    c = list(map(int, input().split()))\n    return c\n\ndef strvector():\n    c = list(map(str, input().split()))\n    return c\nimport math\n\ndef isprime(num):\n    a = 2\n    while a <= math.sqrt(num):\n        if num % a < 1:\n            return False\n        a = a + 1\n    return num > 1\nt = num()\nwhile t > 0:\n    t -= 1\n    (n, x) = vector()\n    arr = vector()\n    arr.sort()\n    ans = True\n    j = n\n    for i in range(0, n):\n        if arr[j + i] - arr[i] < x:\n            ans = False\n            break\n    print('YES' if ans else 'NO')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    num = list(map(int, input().split()))\n    num.sort()\n    for i in range(n):\n        if num[n + i] - num[i] < x:\n            f = 0\n            break\n        else:\n            f = 1\n    if f:\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nfor _ in range(T):\n    (N, X) = map(int, input().split())\n    H = list(map(int, input().split()))\n    H = sorted(H)\n    ans = 'YES'\n    for i in range(N):\n        if H[N + i] - H[i] < X:\n            ans = 'NO'\n            break\n    print(ans)", "for t in range(int(input())):\n    (n, x) = map(int, input().split())\n    A = [int(i) for i in input().split()]\n    A.sort()\n    B = A[:][:n]\n    C = A[:][n:]\n    flag = 1\n    for i in range(n):\n        if B[i] + x <= C[i]:\n            continue\n        else:\n            flag = 0\n            break\n    print('YES' if flag else 'NO')", "import sys\ninput = lambda : sys.stdin.readline().strip()\nfor i in range(int(input())):\n    (a, b) = list(map(int, input().split()))\n    c = sorted(list(map(int, input().split())))\n    d = c[:a]\n    e = c[a:]\n    for i in range(a):\n        if e[i] - d[i] < b:\n            print('NO')\n            break\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    (*h,) = map(int, input().split())\n    h.sort()\n    fl = True\n    for i in range(n):\n        if h[n + i] - h[i] < x:\n            fl = False\n    print('YES') if fl else print('NO')", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = list(map(int, input().split()))\n    c.sort()\n    d = c[:a]\n    c = c[a:]\n    count = 0\n    for i in range(len(d)):\n        if c[i] - b >= d[i]:\n            count += 1\n    if count == len(d):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t:\n    t -= 1\n    (n, x) = [int(x) for x in input().split()]\n    l = [int(x) for x in input().split()]\n    l.sort()\n    flag = 0\n    for i in range(n):\n        if l[i + n] - l[i] >= x:\n            continue\n        else:\n            flag = 1\n            print('NO')\n            break\n    if flag == 0:\n        print('YES')", "def solve_one():\n    (n, x) = map(int, input().split())\n    nums = map(int, input().split())\n    nums = sorted(nums)\n    for i in range(n):\n        if nums[i + n] - nums[i] < x:\n            return 'NO'\n    return 'YES'\nt = int(input())\nanss = []\nfor _ in range(t):\n    anss.append(solve_one())\nfor ans in anss:\n    print(ans)", "def ss(n, l, k):\n    l = sorted(l)\n    i = 0\n    j = n\n    while i < n:\n        if l[i] + k <= l[j]:\n            i += 1\n            j += 1\n        else:\n            return 'NO'\n    return 'YES'\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    print(ss(n, l, k))", "from sys import stdin\nfrom math import log, floor, ceil, gcd\ninp = lambda : int(stdin.readline())\n\ndef ra(typ):\n    return list(map(typ, stdin.readline().split()))\n\ndef rv(typ):\n    return map(typ, stdin.readline().split())\n\ndef main():\n    for _ in range(inp()):\n        (n, x) = rv(int)\n        h = ra(int)\n        h.sort()\n        ans = True\n        for i in range(n):\n            if h[i + n] - h[i] < x:\n                ans = False\n                break\n        print('YES' if ans else 'NO')\nmain()", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    d = a[:n]\n    a = a[n:]\n    k = 0\n    for i in range(n):\n        if d[i] + x > a[i]:\n            print('NO')\n            k = 9\n            break\n    if k == 0:\n        print('YES')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    a1 = a[:len(a) // 2]\n    a2 = a[len(a) // 2:]\n    t = 0\n    for i in range(len(a1)):\n        if a1[i] + x > a2[i]:\n            print('NO')\n            t = 1\n            break\n    if t == 0:\n        print('YES')", "for h in range(int(input())):\n    (n, m) = map(int, input().split())\n    x = list(map(int, input().split()))\n    x.sort()\n    f = True\n    for i in range(n):\n        if x[i] + m > x[i + n]:\n            f = False\n            break\n    if f:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (x, y) = input().split()\n    x = int(x)\n    y = int(y)\n    z = list(map(int, input().split()))\n    z.sort()\n    a = z[:x]\n    b = z[x:]\n    c = 1\n    for i in range(x):\n        if b[i] - a[i] >= y:\n            pass\n        else:\n            c = 0\n            break\n    if c == 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    flag = True\n    for i in range(n):\n        if a[i + n] - a[i] < x:\n            flag = False\n            break\n    if flag == True:\n        print('YES')\n    else:\n        print('NO')", "import sys\n\ndef rall():\n    return [x.strip() for x in sys.stdin.readlines()]\n\ndef rl():\n    return sys.stdin.readline().strip()\n\ndef rl_types(types):\n    str_list = [x for x in sys.stdin.readline().strip().split(' ')]\n    return [types[i](str_list[i]) for i in range(len(str_list))]\n\ndef pr(something=''):\n    sys.stdout.write(str(something) + '\\n')\n\ndef pra(array):\n    sys.stdout.write(' '.join([str(x) for x in array]) + '\\n')\nNT = int(rl())\nfor ti in range(NT):\n    (n, x) = list(map(int, rl().split(' ')))\n    array = sorted(list(map(int, rl().split(' '))))\n    l = len(array) // 2\n    front = array[:l]\n    back = array[l:]\n    pr('YES' if all([a + x <= b for (a, b) in zip(front, back)]) else 'NO')", "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    lst.sort()\n    e = 0\n    ind = 2 * n - 1\n    for j in range(n - 1, -1, -1):\n        d = lst[ind] - lst[j]\n        ind -= 1\n        if d < x:\n            e += 1\n            break\n    if e > 0:\n        print('NO')\n    else:\n        print('YES')", "def main():\n    (n, x) = list(map(int, input().split()))\n    h = list(map(int, input().split()))\n    h.sort()\n    firstPart = h[:n]\n    secondPart = h[n:]\n    flag = True\n    for (i, j) in zip(firstPart, secondPart):\n        if j - i < x:\n            flag = False\n    if not flag:\n        print('NO')\n    else:\n        print('YES')\nt = int(input())\nfor i in range(t):\n    main()", "for xyz in range(int(input())):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    count = 0\n    for i in range(n):\n        if arr[i] + x > arr[i + n]:\n            count += 1\n            break\n    if count == 0:\n        print('YES')\n    else:\n        print('NO')", "from math import *\nfrom bisect import *\nfrom heapq import *\nfrom collections import *\nfrom functools import *\nx = int(input())\n\ndef check(li, x):\n    li.sort()\n    for i in range(len(li) >> 1):\n        if li[i + len(li) // 2] - li[i] < x:\n            return 'NO'\n    return 'YES'\nfor i in range(x):\n    (n, x) = map(int, input().split())\n    li = list(map(int, input().split()))\n    print(check(li, x))", "out = []\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    a.sort()\n    for i in range(n):\n        if a[i] + x > a[i + n]:\n            out.append('NO')\n            break\n    else:\n        out.append('YES')\nfor i in out:\n    print(i)", "a = int(input())\nfor i in range(a):\n    (b, c) = map(int, input().split())\n    d = sorted(map(int, input().split()))\n    f = 0\n    for i in range(b):\n        if d[i] + c > d[i + b]:\n            f = 1\n    if f == 1:\n        print('NO')\n    else:\n        print('YES')", "for i in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    ans = 'YES'\n    for j in range(n):\n        if l[j + n] - l[j] < x:\n            ans = 'NO'\n            break\n    print(ans)", "t = int(input())\nfor q in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    lst = [int(x) for x in input().split()]\n    lst = sorted(lst)\n    da = True\n    for i in range(n):\n        if lst[i + n] - lst[i] < k:\n            da = False\n    if da:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    h = list(map(int, input().split()))\n    h.sort()\n    count = 0\n    for i in range(n):\n        if h[i + n] - h[i] < x:\n            count = 1\n            break\n    if count == 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, x) = [int(x) for x in input().split()]\n    heights = [int(x) for x in input().split()]\n    heights.sort()\n    h1 = heights[:n]\n    h2 = heights[n:]\n    result = 'YES'\n    for i in range(n):\n        if h2[i] - h1[i] < x:\n            result = 'NO'\n            break\n    print(result)"]