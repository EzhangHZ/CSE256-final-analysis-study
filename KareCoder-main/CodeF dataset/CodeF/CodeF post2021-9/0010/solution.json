["def STR():\n    return list(input())\n\ndef INT():\n    return int(input())\n\ndef MAP():\n    return map(int, input().split())\n\ndef LIST():\n    return list(map(int, input().split()))\n\ndef STRING():\n    return input()\nt = INT()\nfor tt in range(t):\n    n = INT()\n    s = STR()\n    sm = n\n    sm += len(set(s))\n    print(sm)", "fptr = open(0)\nfor _ in range(int(next(fptr))):\n    n = int(next(fptr))\n    s = next(fptr)[:-1]\n    s1 = set(s)\n    print(len(s1) * 2 + len(s) - len(s1))", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    s = list(str(input()))\n    d = Counter(s)\n    w = set(s)\n    ans = 0\n    for i in w:\n        ans += 2 + d[i] - 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    new = []\n    count = 0\n    for x in s:\n        if x not in new:\n            new.append(x)\n            count += 2\n        else:\n            count += 1\n    print(count)", "n = int(input())\nfor _ in range(n):\n    k = int(input())\n    l = list(input())\n    s = set(l)\n    print(2 * len(s) + k - len(s))", "for x in range(int(input())):\n    len_ = int(input())\n    str_ = input()\n    set_ = set(str_)\n    count = 0\n    for x in set_:\n        if str_.count(x) == 1:\n            count += 2\n        else:\n            count += 2 + str_.count(x) - 1\n    print(count)", "for _ in range(int(input())):\n    print(int(input()) + len(set(input())))", "tc = int(input())\nfor i in range(tc):\n    n = int(input())\n    s = input()\n    unique = ''\n    for i in s:\n        if i not in unique:\n            unique += i\n    print(n + len(unique))", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    S = input()\n    A = []\n    ans = 0\n    for i in S:\n        if i not in A:\n            ans += 2\n            A.append(i)\n        else:\n            ans += 1\n    print(ans)", "for cases in range(int(input())):\n    n = int(input())\n    s = input()\n    l = []\n    k = 0\n    for i in s:\n        if i in l:\n            k += 1\n        else:\n            k += 2\n            l.append(i)\n    print(k)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    solved = []\n    res = 0\n    for i in s:\n        if i not in solved:\n            solved.append(i)\n            res += 2\n        else:\n            res += 1\n    print(res)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    s = input()\n    balloons = set()\n    ans = 0\n    for x in s:\n        if x in balloons:\n            ans += 1\n        else:\n            ans += 2\n        balloons.add(x)\n    print(ans)", "t = int(input())\nfor z in range(t):\n    x = int(input())\n    s = input()\n    s = list(s)\n    w = set(s)\n    ans = 2 * len(w)\n    ans += len(s) - len(w)\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    l = len(set(s))\n    l1 = len(s)\n    print(2 * l + (l1 - l))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = 0\n    v = []\n    for c in s:\n        if c not in v:\n            ans += 2\n            v.append(c)\n        else:\n            ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(input())\n    l = []\n    count = 0\n    for i in a:\n        if i not in l:\n            l.append(i)\n            count += 2\n        else:\n            count += 1\n    print(count)", "def kil_(a):\n    return len(a) + len(set(a))\n\ndef kil(a):\n    t = int(input())\n    A = ''\n    for i in range(t):\n        n = input()\n        A += str(kil_(a())) + '\\n'\n    print(A[:-1])\nkil(input)", "for t in range(int(input())):\n    n = int(input())\n    s = input()\n    d = {}\n    for i in s:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    ans = 0\n    for i in d.keys():\n        ans = ans + 2 + d[i] - 1\n    print(ans)", "def func(n, s):\n    d = {}\n    for elem in s:\n        if elem not in d:\n            d[elem] = 0\n        d[elem] += 1\n    return n + len(d)\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        s = input()\n        ans = func(n, s)\n        print(ans)\nmain()", "a = int(input())\nfor i in range(1, a + 1):\n    n = int(input())\n    sr = input()\n    count = 0\n    A = []\n    for j in range(0, n):\n        if sr[j] not in A:\n            count = count + 2\n            A.append(sr[j])\n        else:\n            count = count + 1\n    print(count)", "tc = int(input())\nwhile tc:\n    str_len = int(input())\n    inp_str = input()\n    inp_set = set()\n    count = 0\n    for item in inp_str:\n        count += 1 if item in inp_set else 2\n        inp_set.add(item)\n    print(count)\n    tc -= 1", "import collections\nimport sys\nt = int(sys.stdin.readline().rstrip())\n\ndef exec_case():\n    _ = sys.stdin.readline().rstrip()\n    input_: str = sys.stdin.readline().rstrip()\n    num_of_problem = len(input_)\n    p_list = list(input_)\n    p_list_counter = collections.Counter(p_list)\n    answer = num_of_problem + len(p_list_counter)\n    print(answer)\nfor _ in range(t):\n    exec_case()", "n = int(input())\nfor _ in range(n):\n    input()\n    s = input()\n    print(len(s) + len(set(s)))", "t = int(input())\nfor tt in range(t):\n    n = int(input())\n    s = str(input())\n    s1 = set(s)\n    cnt = 0\n    for x in s1:\n        v = s.count(x)\n        if v >= 2:\n            cnt += v - 1\n            cnt += 2\n        elif v == 1:\n            cnt += 2\n    print(cnt)", "for i in range(int(input())):\n    n = input()\n    s = input()\n    s1 = set(s)\n    c = len(s1) * 2 + (len(s) - len(s1))\n    print(c)", "t = int(input())\nmas = []\nfor i in range(t):\n    k = int(input())\n    mas.append(input())\nfor st in mas:\n    tup = set(st)\n    res = 0\n    for i in tup:\n        if st.count(i) == 1:\n            res += 2\n        else:\n            res += st.count(i) + 1\n    print(res)", "x = int(input())\nfor i in range(x):\n    inpt = int(input())\n    str = input()\n    s = int(len(set(str)))\n    print(s + inpt)", "n = int(input())\ni = 0\nwhile i < n:\n    k = int(input())\n    s = input()\n    a = ''\n    j = 0\n    count = 0\n    while j < len(s):\n        if s[j] not in a:\n            a += s[j]\n            count += 2\n        else:\n            count += 1\n        j += 1\n    print(count)\n    i += 1", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    s = input()\n    tally = {}\n    for i in range(n):\n        if s[i] not in tally.keys():\n            tally[s[i]] = 1\n        else:\n            tally[s[i]] += 1\n    counter = len(tally) + sum(tally.values())\n    print(counter)", "testcases = int(input())\nfor x in range(testcases):\n    dictionary = {}\n    count = 0\n    lengthstring = int(input())\n    thestring = input()\n    for character in thestring:\n        dictionary[character] = ['']\n    count += len(dictionary)\n    count += lengthstring\n    print(count)", "int_input = int(input())\nfor i in range(int_input):\n    number = int(input())\n    string = input()\n    string_set = ''.join(set(string))\n    print(len(string_set) * 2 + (len(string) - len(string_set)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    S = [x for x in s]\n    c = len(set(S)) * 2\n    S1 = list(set(S))\n    for x in S1:\n        if S.count(x) > 1:\n            c += S.count(x) - 1\n    print(c)", "t = int(input().strip())\nfor _ in range(t):\n    n = int(input().strip())\n    s = input().strip()\n    print(len(s) + len(set(s)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    l = list(s)\n    d = set(l)\n    r = len(d) * 2 + (len(l) - len(d))\n    print(r)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    count = 0\n    l = []\n    for i in s:\n        if i not in l:\n            count += 2\n            l.append(i)\n        else:\n            count += 1\n    print(count)", "n = input()\nfor i in range(int(n)):\n    m1 = input()\n    m2 = input()\n    ans = 0\n    l = []\n    for j in range(int(m1)):\n        l = []\n        for k in range(j):\n            l.append(m2[k])\n        if not m2[j] in l or l == []:\n            ans += 2\n        else:\n            ans += 1\n    print(ans)", "L = []\nfor i in range(int(input())):\n    sum = 0\n    n = int(input())\n    lst = list(input())\n    for j in range(n):\n        if j == 0:\n            sum += 2\n        elif lst[0:j + 1].count(lst[j]) > 1:\n            sum += 1\n        else:\n            sum += 2\n    L.append(sum)\nfor k in L:\n    print(k)", "n = int(input())\nfor i in range(0, n):\n    lwor = int(input())\n    wor = input()\n    l = []\n    ct = 0\n    for i in range(0, len(wor)):\n        if wor[i] not in l:\n            ct += 2\n            l.append(wor[i])\n        else:\n            ct += 1\n    print(ct)", "test = int(input())\nfor t in range(test):\n    a = int(input())\n    l = input()\n    p = []\n    output = 0\n    for i in l:\n        if i in p:\n            output += 1\n        else:\n            output += 2\n        p.append(i)\n    print(output)", "t = int(input())\ncount = []\nfor i in range(100):\n    count.append(0)\ni = 0\nwhile t > 0:\n    t = t - 1\n    n = int(input())\n    s = input()\n    s1 = ''\n    for k in range(n):\n        if k == 0:\n            count[i] = count[i] + 2\n        elif s[k] in s1:\n            count[i] = count[i] + 1\n        else:\n            count[i] = count[i] + 2\n        s1 = s1 + s[k]\n    i = i + 1\nfor i in range(len(count)):\n    if count[i] != 0:\n        print(count[i])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    l = []\n    a = 0\n    for i in range(n):\n        if s[i] not in l:\n            l.append(s[i])\n            a += 2\n        else:\n            a += 1\n    print(a)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    m = input()[:n]\n    c = 0\n    res = []\n    l = []\n    for i in m:\n        if i not in res:\n            res.append(i)\n        else:\n            l.append(i)\n    print(2 * len(res) + 1 * len(l))", "def getballons(st, n):\n    s = set()\n    ballons = 0\n    for i in range(n):\n        if st[i] not in s:\n            s.add(st[i])\n            ballons += 2\n        else:\n            ballons += 1\n    return ballons\ntestcases = int(input())\nwhile testcases > 0:\n    n = int(input())\n    st = input()\n    print(getballons(st, n))\n    testcases -= 1", "for i in range(int(input())):\n    l = int(input())\n    s = input()\n    solved = []\n    b = 0\n    for i in s:\n        if i not in solved:\n            b += 2\n            solved.append(i)\n        else:\n            b += 1\n    print(b)", "for t in range(int(input())):\n    n = int(input())\n    s = input()\n    A = []\n    k = 0\n    for i in s:\n        if i not in A:\n            k += 2\n            A.append(i)\n        else:\n            k += 1\n    print(k)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    se = set(s)\n    r = len(se) * 2\n    r += n - len(se)\n    print(r)", "n = int(input())\nl = []\nfor i in range(n):\n    t = 2\n    o = []\n    k = int(input())\n    s = list(str(input()))\n    o = o + [s[0]]\n    for j in range(1, len(s)):\n        if s[j] not in o:\n            o = o + [s[j]]\n            t = t + 2\n        else:\n            t = t + 1\n    l = l + [t]\nfor i in l:\n    print(i)", "n = int(input())\nfor i in range(n):\n    s = int(input())\n    st = input()\n    a = []\n    ans = 0\n    for i in st:\n        if i not in a:\n            ans += 2\n            a.append(i)\n        else:\n            ans += 1\n    print(ans)", "def resi():\n    n = int(input())\n    s = str(input())\n    poseceni = [0] * 26\n    iz = 0\n    for i in range(n):\n        if poseceni[ord(s[i]) - 65] == 0:\n            poseceni[ord(s[i]) - 65] = 1\n            iz += 1\n        iz += 1\n    print(iz)\n    return\nfor _ in range(int(input())):\n    resi()", "class Tour:\n\n    def __init__(self):\n        self.ln = input()\n        self.zad = input()\n\n    def uniq(self):\n        rez = []\n        a = 0\n        for i in range(0, len(self.zad)):\n            if not self.zad[i] in rez:\n                rez.append(self.zad[i])\n                a = a + 2\n            else:\n                a = a + 1\n        return a\nn = input()\naa = []\nfor i in range(0, int(n)):\n    r = Tour()\n    aa.append(r.uniq())\nfor i in range(0, len(aa)):\n    print(aa[i])", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    s = input()\n    balloons = 0\n    solved = set()\n    for problem in s:\n        if problem not in solved:\n            solved.add(problem)\n            balloons += 2\n        else:\n            balloons += 1\n    print(balloons)\n    t -= 1", "def func(s):\n    save = set()\n    res = 0\n    for i in s:\n        if i not in save:\n            res += 2\n            save.add(i)\n        else:\n            res += 1\n    return res\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    print(func(s))", "for t in range(int(input())):\n    n = int(input())\n    a = list(input())\n    were = []\n    c = 0\n    while a:\n        were.append(a.pop(0))\n        if were[-1] in were[:-1]:\n            c += 1\n        else:\n            c += 2\n    print(c)", "MOD = 10 ** 9 + 7\nfac_mem = [1]\n\ndef fac(n):\n    while len(fac_mem) < n + 1:\n        fac_mem.append(fac_mem[-1] * len(fac_mem) % MOD)\n    return fac_mem[n]\n\ndef perm(n, k):\n    return fac(n) * pow(fac(k), MOD - 2, MOD) % MOD\n\ndef comb(n, k):\n    return fac(n) * pow(fac(k) * fac(n - k) % MOD, MOD - 2, MOD) % MOD\n\ndef count(l):\n    r = {}\n    for i in l:\n        r[i] = r.get(i, 0) + 1\n    return r\n\ndef group(l):\n    r = []\n    p = None\n    c = 0\n    for i in l:\n        if i == p:\n            c += 1\n        else:\n            r.append((p, c))\n            p = i\n            c = 1\n    if c:\n        r.append((p, c))\n    return r\n\nclass Tree:\n\n    def __init__(self, id):\n        self.id = id\n        self.parent = None\n        self.children = []\n\n    def __repr__(self):\n        if self.children:\n            return f'{self.id} -> [' + ', '.join((str(c) for c in self.children)) + ']'\n        else:\n            return f'{self.id}'\nfor case in range(int(input())):\n    (n,) = [int(j) for j in input().split()]\n    s = input()\n    print(n + len(set(list(s))))", "t = int(input())\nfor tt in range(t):\n    n = int(input())\n    print(n + len(set(input())))", "for _ in range(int(input())):\n    n = int(input())\n    l = [0] * 26\n    s = input()\n    for i in s:\n        l[ord(i) - ord('A')] += 1\n    ans = 0\n    for i in l:\n        if i != 0:\n            ans += i + 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = set()\n    cnt = 0\n    for x in input():\n        if x not in s:\n            cnt += 1\n            s.add(x)\n        cnt += 1\n    print(cnt)", "for i in range(int(input())):\n    n = int(input())\n    f = input()\n    print(len(set(list(f))) + len(f))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    d = dict()\n    for i in range(len(s)):\n        if s[i] not in d:\n            d[s[i]] = 2\n        else:\n            d[s[i]] += 1\n    print(sum(d.values()))", "import sys\nfrom collections import defaultdict\ninput = lambda : sys.stdin.readline().strip()\nlis = lambda : list(map(int, input().split()))\nsin = lambda : int(input())\nmany = lambda : map(int, input().split())\n\ndef solve():\n    n = sin()\n    s = input()\n    d = {}\n    for i in s:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    ans = 0\n    for i in d:\n        if d[i] > 0:\n            ans += 2 + (d[i] - 1)\n    print(ans)\ntestisisisisisis = int(input())\nfor testis in range(testisisisisisis):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    ans = 0\n    t = set()\n    for i in range(n):\n        if s[i] in t:\n            ans += 1\n        else:\n            ans += 2\n            t.add(s[i])\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    val = [0 for _ in range(26)]\n    ans = 0\n    for i in s:\n        if val[ord(i) - 65] == 0:\n            ans += 2\n            val[ord(i) - 65] = 1\n        else:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    g = {}\n    c = 0\n    for i in input():\n        if i in g:\n            g[i] += 1\n            c += 1\n        else:\n            g[i] = 2\n            c += 2\n    print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    seen = set()\n    ans = 0\n    for i in s:\n        if i in seen:\n            ans += 1\n        else:\n            ans += 2\n            seen.add(i)\n    print(ans)", "t = int(input())\nsum = 0\nwhile t:\n    t -= 1\n    n = int(input())\n    s = input()\n    l = []\n    for i in s:\n        l.append(i)\n    l2 = list(set(l))\n    print(len(l2) * 2 - len(l2) + len(l))", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    s = input()\n    seen = []\n    ans = 0\n    for char in s:\n        if char not in seen:\n            seen.append(char)\n            ans += 2\n        else:\n            ans += 1\n    print(ans)", "for x in range(int(input())):\n    n = int(input())\n    s = input()\n    print(n + len(set(s)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    suma = 0\n    for i in range(len(s)):\n        s1 = s[:i + 1]\n        if s1.count(s[i]) == 1:\n            suma += 2\n        else:\n            suma += 1\n    print(suma)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    visited = set()\n    ans = 0\n    for char in s:\n        if char not in visited:\n            ans += 1\n        ans += 1\n        visited.add(char)\n    print(ans)", "import math\nimport copy\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    data = {}\n    for x in range(26):\n        data[chr(x + ord('A'))] = 0\n    ballon = 0\n    for c in s:\n        if data[c] == 0:\n            ballon += 2\n            data[c] = 1\n        else:\n            ballon += 1\n    print(ballon)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    s = input().rstrip()\n    used = set()\n    pre = ''\n    answer = 0\n    for v in s:\n        if v not in used:\n            used.add(v)\n            answer += 2\n        else:\n            answer += 1\n    print(answer)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    st = set()\n    for i in s:\n        st.add(i)\n    print(n + len(st))", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    print(len(set(s)) + n)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    s = input()\n    l = []\n    points = 0\n    for i in s:\n        if i not in l:\n            points += 2\n            l.append(i)\n        elif i in l:\n            points += 1\n    print(points)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input()\n    f = set()\n    s = 0\n    for i in a:\n        if i not in f:\n            s += 2\n        else:\n            s += 1\n        f.add(i)\n    print(s)", "n = int(input())\nfor x in range(n):\n    length = int(input())\n    string = input()\n    tmp = len(list(set(list(string))))\n    print(tmp * 2 + (length - tmp))", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\ninpnm = lambda : map(int, input().split())\ninparr = lambda : [int(i) for i in input().split()]\ninpint = lambda : int(input())\nfor case in range(int(input())):\n    n = inpint()\n    s = input()\n    arr = set(s)\n    print(n + len(arr))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    cnt = 0\n    visited = set()\n    for i in s:\n        if i not in visited:\n            cnt += 2\n            visited.add(i)\n        else:\n            cnt += 1\n    print(cnt)", "for t in range(int(input())):\n    n = int(input())\n    A = input()\n    k = len(set(A))\n    print(k * 2 + (n - k))", "import sys\nT = int(sys.stdin.readline())\nfor t in range(T):\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline().rstrip()\n    check = [False for _ in range(26)]\n    score = 0\n    for ch in s:\n        if check[ord(ch) - ord('A')]:\n            score += 1\n        else:\n            score += 2\n            check[ord(ch) - ord('A')] = True\n    print(score)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    check = set()\n    ans = 0\n    for i in input().strip():\n        if i not in check:\n            ans += 2\n            check.add(i)\n        else:\n            ans += 1\n    print(ans)", "import sys\nimport collections\nfrom math import ceil, gcd, sqrt, log\nimport bisect\nINF = float('inf')\nmod = 1000000007\n\ndef solve():\n    n = int(input())\n    s = input()\n    ok = collections.defaultdict(int)\n    ans = 0\n    for i in s:\n        if ok[i] > 0:\n            ans += 1\n        else:\n            ans += 2\n        ok[i] += 1\n    print(ans)\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "t = int(input())\nfor eh in range(t):\n    a = input()\n    em = input()\n    first = ''\n    x = 0\n    for i in em:\n        if not i in first:\n            first += i\n            x += 2\n        else:\n            x += 1\n    print(x)", "t = int(input())\nwhile t:\n    n = int(input())\n    s = input()\n    hash = {c: 0 for c in s}\n    total = 0\n    for c in s:\n        if hash[c] == 0:\n            total += 2\n        else:\n            total += 1\n        hash[c] += 1\n    print(total)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    d = dict()\n    ans = 0\n    for i in s:\n        if i in d:\n            ans += 1\n        else:\n            ans += 2\n            d[i] = 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    input()\n    k = ''\n    s = input()\n    cnt = 0\n    for i in s:\n        if k.count(i) == 0:\n            cnt += 2\n            k += i\n        else:\n            cnt += 1\n    print(cnt)", "for _ in range(int(input())):\n    n = int(input())\n    s = len(set(list(input())))\n    print(s + n)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    a = []\n    c = 0\n    for i in range(n):\n        if s[i] not in a:\n            a.append(s[i])\n            c += 2\n        else:\n            c += 1\n    print(c)", "t = int(input())\nfor _ in range(t):\n    n = input()\n    s = input()\n    dic = {}\n    ans = 0\n    for i in s:\n        if dic.get(i, 0):\n            ans += 1\n        else:\n            ans += 2\n            dic[i] = 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    li = []\n    ctr = 0\n    for i in s:\n        if i in li:\n            ctr += 1\n        else:\n            ctr += 2\n            li.append(i)\n    print(ctr)", "def sol():\n    n = int(input())\n    s = input()\n    s_ = set()\n    score = 0\n    for i in s:\n        if i in s_:\n            score += 1\n        else:\n            s_.add(i)\n            score += 2\n    print(score)\nfor _ in range(int(input())):\n    sol()", "def solve():\n    n = int(input())\n    s = str(input())\n    a = []\n    count = 0\n    for i in range(n):\n        if s[i] not in a:\n            count += 2\n            a.append(s[i])\n        else:\n            count += 1\n    print(count)\nt = int(input())\nfor i in range(t):\n    solve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    a = list(map(str, s))\n    b = list(set(a))\n    ballon = len(b) * 2 + (len(a) - len(b))\n    print(ballon)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    d = {}\n    ball = 0\n    for i in s:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    for i in d:\n        ball += d[i] + 1\n    print(ball)", "t = int(input())\nfor caso in range(t):\n    n = int(input())\n    s = input()\n    dic = []\n    punct = 0\n    for letra in s:\n        if letra not in dic:\n            dic.append(letra)\n            punct += 2\n        else:\n            punct += 1\n    print(punct)", "alph = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nfor _ in range(int(input())):\n    ans = 0\n    n = int(input())\n    s = input()\n    used = []\n    for el in s:\n        if el not in used:\n            ans += 2\n            used.append(el)\n        else:\n            ans += 1\n    print(ans)", "t = int(input())\nfor u in range(t):\n    n = int(input())\n    g = input()\n    L = []\n    for j in range(n):\n        L.append(g[j])\n    i = 0\n    for h in range(n):\n        if L.count(h) == 1:\n            i += 1\n        elif L.index(L[h]) == h:\n            i += 2\n        elif L.index(L[h]) < h:\n            i += 1\n    print(i)", "t = int(input())\nwhile t:\n    n = int(input())\n    s = input()\n    ans = 0\n    l = [s[i] for i in range(n)]\n    l.sort()\n    for i in range(1, n):\n        if l[i] == l[i - 1]:\n            ans += 1\n        else:\n            ans += 2\n    print(ans + 2)\n    t = t - 1", "n = int(input())\nfor i in range(n):\n    x = int(input())\n    st = input()\n    print(x + len(set(st)))", "tests = int(input())\nfor _ in range(tests):\n    n = int(input())\n    line = input()\n    d = {}\n    for char in line:\n        if char not in d:\n            d[char] = 0\n        d[char] += 1\n    total = 0\n    for score in d.values():\n        total += score + 1\n    print(total)"]