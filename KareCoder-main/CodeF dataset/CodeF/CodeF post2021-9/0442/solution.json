["def solve():\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ans = 0\n    ct = 1\n    for i in range(1, n):\n        if 2 * l[i] > l[i - 1]:\n            ct += 1\n        else:\n            ct = 1\n        if ct > k:\n            ans += 1\n    print(ans)\nfor t in range(int(input())):\n    solve()", "import collections\nimport math\nimport sys\nfrom queue import PriorityQueue\nfrom random import randint\n\ndef main(testnumber):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = 1\n    ans = 0\n    for i in range(1, n):\n        if a[i] * 2 > a[i - 1]:\n            c += 1\n        else:\n            ans += max(0, c - k)\n            c = 1\n    ans += max(0, c - k)\n    print(ans)\nt = int(input())\ncnt = 1\nwhile t > 0:\n    main(cnt)\n    cnt += 1\n    t -= 1", "n = int(input())\nfor i in range(n):\n    l = list(map(int, input().split()))\n    long = l[0]\n    equ = l[1]\n    s = list(map(int, input().split()))\n    s.append(0)\n    num = 0\n    tip = []\n    ans = 0\n    for j in range(long):\n        if s[j] < 2 * s[j + 1]:\n            num += 1\n        else:\n            tip.append(num)\n            num = 0\n    for p in tip:\n        if p >= equ:\n            ans += p - equ + 1\n    print(ans)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    ans = 0\n    c = 1\n    an = ''\n    for i in range(a - 1):\n        if lis[i] < 2 * lis[i + 1]:\n            c += 1\n        else:\n            if c - b > 0:\n                ans += c - b\n            c = 1\n    if c - b > 0:\n        ans += c - b\n    print(ans)", "def solve():\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    ans = 0\n    count = 1\n    k += 1\n    for i in range(1, n):\n        if arr[i] * 2 > arr[i - 1]:\n            count += 1\n        else:\n            if count >= k:\n                ans += count - k + 1\n            count = 1\n    if count >= k:\n        ans += count - k + 1\n    print(ans)\nfor T in range(int(input())):\n    solve()", "from math import inf, gcd, log, log2, floor, ceil, sqrt\nfrom collections import Counter, defaultdict\nfrom heapq import heappush, heappop, heapify\nfrom functools import lru_cache\nfrom itertools import accumulate\nimport sys\nDIRS = [[1, 0], [0, 1], [0, -1], [-1, 0], [-1, -1], [1, 1], [-1, 1], [1, -1]]\nMOD = 10 ** 9 + 7\ninput = sys.stdin.readline\n\ndef read1():\n    return int(input())\n\ndef read():\n    A = [int(x) for x in input().split()]\n    return A\nt = read1()\n\ndef solve():\n    (N, K) = read()\n    A = read()\n    run = 1\n    curr = A[0]\n    runs = []\n    for x in A[1:]:\n        if curr < x * 2:\n            curr = x\n            run += 1\n        else:\n            runs.append(run)\n            run = 1\n            curr = x\n    runs.append(run)\n    ans = 0\n    for x in runs:\n        ans += max(0, x - K)\n    print(ans)\nwhile t:\n    solve()\n    t -= 1", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    ans = 0\n    c = 1\n    an = ''\n    for i in range(a - 1):\n        if lis[i] < 2 * lis[i + 1]:\n            c += 1\n        else:\n            if c - b > 0:\n                ans += c - b\n            c = 1\n    if c - b > 0:\n        ans += c - b\n    print(ans)", "def solve():\n    (n, k) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    ans = 0\n    cnt = 1\n    for i in range(1, n):\n        if 2 * lis[i] > lis[i - 1]:\n            cnt += 1\n            if cnt > k:\n                ans += 1\n        else:\n            cnt = 1\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "def solve():\n    (n, k) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    cnt = 1\n    ans = 0\n    for i in range(1, n):\n        if 2 * lis[i] > lis[i - 1]:\n            cnt += 1\n            ans += 1 if cnt >= k + 1 else 0\n        else:\n            cnt = 1\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "def solve():\n    (n, k) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    dp = [0] * n\n    dp[0] = 1\n    for i in range(1, n):\n        if 2 * lis[i] > lis[i - 1]:\n            dp[i] = dp[i - 1] + 1\n        else:\n            dp[i] = 1\n    ans = 0\n    for i in dp:\n        if i > k:\n            ans += 1\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "import itertools\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(sum((max(sum((1 for _ in g)) + 1 - k, 0) for (t, g) in itertools.groupby((i < j + j for (i, j) in zip(a, a[1:]))) if t)))", "def sol():\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    tl = [0] * n\n    tl[0] = 1\n    ans = 0\n    for i in range(1, n):\n        if 2 * l[i] > l[i - 1]:\n            tl[i] = tl[i - 1] + 1\n        else:\n            tl[i] = 1\n    for i in tl:\n        if i > k:\n            ans += 1\n    print(ans)\nfor t in range(int(input())):\n    sol()", "def solve():\n    (n, k) = map(int, input().split())\n    n += 1\n    a = list(map(int, input().split())) + [-1]\n    ans = 0\n    cnt = 1\n    for i in range(1, n):\n        if a[i] * 2 > a[i - 1]:\n            cnt += 1\n        else:\n            ans += max(0, cnt - k)\n            cnt = 1\n    print(ans)\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "def p2Arr():\n    x = int(input())\n    for __ in range(x):\n        [n, k] = list(map(int, input().split()))\n        arr = list(map(int, input().split()))\n        c = 1\n        fn = 0\n        for i in range(1, len(arr)):\n            c += 1 if 2 * arr[i] > arr[i - 1] else -1 * (c - 1)\n            if c >= k + 1:\n                fn += 1\n        print(fn)\np2Arr()", "def solve():\n    (n, k) = map(int, input().split())\n    a = map(int, input().split())\n    a = list(a)\n    res = 0\n    t = 1\n    i = 1\n    while i < n:\n        while i < n and a[i - 1] < a[i] * 2:\n            i = i + 1\n            t = t + 1\n        if t >= k + 1:\n            res = res + t - k\n        t = 1\n        i = i + 1\n    print(res)\nT = int(input())\nfor i in range(T):\n    solve()", "def solve():\n    (n, k) = map(int, input().split())\n    a = map(int, input().split())\n    a = list(a)\n    res = 0\n    t = 1\n    i = 1\n    while i < n:\n        while i < n and a[i - 1] < a[i] * 2:\n            i = i + 1\n            t = t + 1\n        if t >= k + 1:\n            res = res + t - k\n        t = 1\n        i = i + 1\n    print(res)\nT = int(input())\nfor i in range(T):\n    solve()", "def solve():\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    anchor = 0\n    count = 0\n    for i in range(1, n):\n        if a[i] * 2 <= a[i - 1]:\n            anchor = i\n        if i - anchor == k:\n            count += 1\n            anchor += 1\n    print(count)\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        solve()\nmain()", "from collections import deque\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef solve(arr, n, k):\n    counts = []\n    count = 0\n    for i in range(1, n):\n        if arr[i] * 2 > arr[i - 1]:\n            count += 1\n        else:\n            counts.append(count + 1)\n            count = 0\n    if count:\n        counts.append(count + 1)\n    result = 0\n    for c in counts:\n        if c >= k + 1:\n            result += c - k\n    return result\nn = inp()\nwhile n:\n    (m, k) = invr()\n    arr = inlt()\n    print(solve(arr, m, k))\n    n -= 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    streak = 1\n    ans = 0\n    for i in range(1, n):\n        if arr[i - 1] < arr[i] * 2:\n            streak += 1\n        else:\n            ans += max(streak - k, 0)\n            streak = 1\n    ans += max(streak - k, 0)\n    print(ans)", "from functools import lru_cache\nimport sys\n\n@lru_cache(maxsize=None)\ndef power(x, y):\n    if y == 0:\n        return 1\n    temp = power(x, y // 2)\n    result = temp * temp if y % 2 == 0 else temp * temp * x\n    return result\ninput = sys.stdin.readline\nt = int(input())\nresult = []\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    array = list(map(int, input().split()))\n    k += 1\n\n    def solve():\n        (startIdx, count) = (0, 0)\n        (inc, lastNum) = (0, None)\n        for (endIdx, num) in enumerate(array):\n            if lastNum is not None and num * 2 <= lastNum:\n                startIdx = endIdx\n            elif endIdx - startIdx + 1 == k:\n                count += 1\n                startIdx += 1\n            lastNum = num\n        return count\n    print(solve())", "def sort_2(n, k, l):\n    c = 1\n    i = 1\n    ans = 0\n    while i < n:\n        if 2 * l[i] > l[i - 1]:\n            c += 1\n        else:\n            c = 1\n        if c >= k + 1:\n            ans += 1\n        i += 1\n    return ans\nfor i in range(int(input())):\n    [n, k] = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    print(sort_2(n, k, l))", "def solve():\n    (n, k) = map(int, input().split())\n    arr = [int(i) for i in input().split()]\n    t = []\n    for (i, v) in enumerate(arr[:-1]):\n        if arr[i + 1] * 2 > v:\n            t.append(True)\n        else:\n            t.append(False)\n    res = 0\n    f = sum((1 if not i else 0 for i in t[:k]))\n    if f == 0:\n        res += 1\n    for (i, v) in enumerate(t[k:]):\n        if not v:\n            f += 1\n        if not t[i]:\n            f -= 1\n        if not f:\n            res += 1\n    return res\n\ndef main():\n    for _ in range(int(input())):\n        print(solve())\n    return\nmain()", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    lis = list(map(int, input().split()))\n    c = 0\n    v = 0\n    for i in range(n - 1):\n        if lis[i] >= 2 * lis[i + 1]:\n            c += max(v - k + 1, 0)\n            v = 0\n        else:\n            v += 1\n    c += max(v - k + 1, 0)\n    print(c)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    cnt = 1\n    ans = 0\n    for i in range(1, n):\n        if a[i - 1] < 2 * a[i]:\n            cnt += 1\n        else:\n            cnt = 1\n        if cnt > k:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = 0\n    ans = 0\n    for i in range(n - 1):\n        if a[i] / a[i + 1] < 2:\n            c += 1\n            if c >= k:\n                ans += 1\n        else:\n            c = 0\n    print(ans)", "tt = int(input())\nfor i in range(tt):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = 1\n    ans = 0\n    for j in range(1, n):\n        if 2 * l[j] > l[j - 1]:\n            c += 1\n        else:\n            c = 1\n        if c > m:\n            ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = 0\n    ans = 0\n    for i in range(n - 1):\n        if a[i] < 2 * a[i + 1]:\n            c += 1\n        else:\n            c = 0\n        if c >= k:\n            ans += 1\n    print(ans)", "for mhv in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = 1\n    ans = 0\n    for i in range(1, n):\n        if a[i - 1] < 2 * a[i]:\n            c += 1\n        else:\n            c = 1\n        if c > k:\n            ans += 1\n    print(ans)", "import itertools\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.append(0)\n    cnt = 0\n    res = 0\n    for i in range(n):\n        if a[i] < 2 * a[i + 1]:\n            cnt += 1\n        else:\n            if cnt >= k:\n                res += cnt - k + 1\n            cnt = 0\n    print(res)", "a = int(input())\nfor y in range(a):\n    (b, c) = map(int, input().split())\n    d = list(map(int, input().split()))\n    l = 0\n    f = 1\n    o = 0\n    for y in range(1, b - c):\n        if 2 * d[y] <= d[y - 1]:\n            l = y\n            if f - (c + 1) + 1 > 0:\n                o += f - (c + 1) + 1\n            f = 1\n        else:\n            f += 1\n    k = b - c - l + 1\n    for y in range(b - c, b):\n        if 2 * d[y] > d[y - 1]:\n            k += 1\n        else:\n            break\n    j = 0\n    if k - (c + 1) > 0:\n        j += k - (c + 1)\n    print(j + o)", "t = int(input())\nfor j in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    cur = 1\n    for i in range(n - 1):\n        if cur < k:\n            if a[i] < a[i + 1] * 2:\n                cur += 1\n            else:\n                cur = 1\n        elif a[i] < a[i + 1] * 2:\n            ans += 1\n        else:\n            cur = 1\n    print(ans)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    d = [*map(int, input().split())]\n    s = t = 0\n    for i in range(n - 1):\n        if d[i] < d[i + 1] * 2:\n            t += 1\n        else:\n            t = 0\n        if t >= k:\n            s += 1\n    print(s)", "p = lambda : map(int, input().split())\n\ndef solve():\n    (n, k) = p()\n    a = [*p()]\n    b = [a[i] < 2 * a[i + 1] for i in range(n - 1)]\n    cnt = 0\n    s = 0\n    for i in range(k):\n        s += b[i]\n    i = 0\n    j = k\n    if s == k:\n        cnt += 1\n    while j < n - 1:\n        s += b[j]\n        s -= b[i]\n        if s == k:\n            cnt += 1\n        i += 1\n        j += 1\n    print(cnt)\nt = int(input())\nfor _ in range(t):\n    solve()", "from collections import Counter\nfor test in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    chain = 1\n    ans = 0\n    for i in range(1, n):\n        if 2 * a[i] > a[i - 1]:\n            chain += 1\n        else:\n            ans += max(0, chain - k)\n            chain = 1\n    ans += max(0, chain - k)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = [int(i) for i in input().strip().split()]\n    a = [int(i) for i in input().strip().split()]\n    i = 0\n    j = 1\n    ans = 0\n    while j < n:\n        while j < n and a[j] / a[j - 1] > 0.5:\n            j += 1\n        if j - i >= k + 1:\n            ans += j - i - k\n        i = j\n        j = i + 1\n    print(ans)", "def solve():\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    i = 1\n    x = 1\n    ans = 0\n    ct = 1\n    while i < n:\n        if arr[i - 1] * x < arr[i] * x * 2:\n            ct += 1\n        else:\n            if ct >= k:\n                ans += ct - k\n            ct = 1\n            x = 1\n        i += 1\n    if ct >= k:\n        ans += ct - k\n    print(ans)\nt = int(input())\nfor i in range(t):\n    solve()", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    temp = []\n    c = 0\n    for i in range(1, n):\n        if a[i] > a[i - 1] / 2:\n            c += 1\n            if c >= k:\n                ans += 1\n        else:\n            c = 0\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    pre = a[0]\n    cnt = 0\n    ans = 0\n    for cur in a[1:]:\n        if pre < 2 * cur:\n            cnt += 1\n        else:\n            cnt = 0\n        if cnt >= k:\n            ans += 1\n        pre = cur\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    b = ''\n    for i in range(n - 1):\n        if l[i] < 2 * l[i + 1]:\n            b += '1'\n        else:\n            b += '0'\n    x = b.split('0')\n    ans = 0\n    for i in x:\n        temp = len(i)\n        if k > temp:\n            continue\n        elif k == temp:\n            ans += 1\n        else:\n            ans += temp - k + 1\n    print(ans)", "q = int(input())\nwhile q > 0:\n    q -= 1\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    cnt = 1\n    res = 0\n    for i in range(1, n):\n        if a[i - 1] < 2 * a[i]:\n            cnt += 1\n        else:\n            cnt = 1\n        if cnt > k:\n            res += 1\n    print(res)", "strng = lambda : input()\ninp = lambda : int(input())\nmul = lambda : map(int, input().split())\njn = lambda x, l: x.join(map(str, l))\nstrlst = lambda : list(input())\nlst = lambda : list(map(int, input().split()))\ndd = lambda : defaultdict(lambda : 0)\nimport sys\ninput = sys.stdin.readline\nfrom collections import defaultdict\nfrom math import ceil, log, floor, sqrt, gcd, log10\nfor _ in range(inp()):\n    (n, k) = mul()\n    a = lst()\n    cnt = 1\n    ans = 0\n    for i in range(1, n):\n        if 2 * a[i] > a[i - 1]:\n            cnt += 1\n        else:\n            cnt = 1\n        if cnt >= k + 1:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    prev = arr[0]\n    cnt = 0\n    ans = 0\n    for i in range(1, n):\n        if arr[i] > prev // 2:\n            if cnt == k - 1:\n                ans += 1\n            else:\n                cnt += 1\n        else:\n            cnt = 0\n        prev = arr[i]\n    print(ans)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    cnt = 0\n    temp = 0\n    last = 0\n    i = 1\n    for a in map(int, input().split()):\n        if a * 2 > last:\n            temp += 1\n            if i == n:\n                cnt += max(0, temp - k)\n        else:\n            cnt += max(0, temp - k)\n            temp = 1\n        last = a\n        i += 1\n    print(cnt)", "x = int(input())\n\ndef cal(n, k, arr):\n    ans = 0\n    t = 0\n    for i in range(1, n):\n        if arr[i] * 2 > arr[i - 1]:\n            if i == n - 1:\n                ans += max(0, i - t - k + 1)\n        else:\n            ans += max(0, i - t - k)\n            t = i\n    return ans\nfor jj in range(x):\n    (n, k) = [int(i) for i in input().split(' ')]\n    arr = [int(i) for i in input().split(' ')]\n    print(cal(n, k, arr))", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = 1\n    ans = 0\n    for i in range(1, n):\n        if a[i - 1] < 2 * a[i]:\n            c += 1\n        else:\n            c = 1\n        if c > k:\n            ans += 1\n    print(ans)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    A = list(map(int, input().split()))\n    cnt = 0\n    l = 1\n    for i in range(n - 1):\n        if 2 * A[i + 1] > A[i]:\n            l += 1\n        else:\n            cnt += max(l - k, 0)\n            l = 1\n    if l > 1:\n        cnt += max(l - k, 0)\n    print(cnt)", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    nums = list(map(int, input().split()))\n    l = 0\n    count = 0\n    for r in range(1, len(nums)):\n        if nums[r] * 2 <= nums[r - 1]:\n            l = r\n        if r - l >= k:\n            count += 1\n    print(count)", "testcases = int(input())\nfor _ in range(testcases):\n    (n, k) = map(int, input().split())\n    lists = list(map(int, input().split()))\n    (result, dos) = (0, 0)\n    for i in range(1, n):\n        if lists[i] > lists[i - 1] / 2:\n            dos += 1\n            if dos >= k:\n                result += 1\n        else:\n            dos = 0\n    print(result)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    nums = list(map(int, input().split()))\n    count = 1\n    result = 0\n    for i in range(1, n):\n        if nums[i] * 2 > nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        if count > k:\n            result += 1\n    print(result)", "testcase = int(input())\nfor _ in range(testcase):\n    (n, k) = list(map(int, input().split()))\n    lists = list(map(int, input().split()))\n    left = 0\n    count = 0\n    for right in range(1, len(lists)):\n        if lists[right] * 2 <= lists[right - 1]:\n            left = right\n        if right - left >= k:\n            count += 1\n    print(count)", "t = int(input())\nfor case in range(t):\n    (n, k) = map(int, input().split(' '))\n    arr = list(map(int, input().split(' ')))\n    consecutive = 0\n    count = 0\n    for j in range(n - 1):\n        if arr[j] < 2 * arr[j + 1]:\n            if consecutive < k:\n                consecutive += 1\n            if consecutive == k:\n                count += 1\n        else:\n            consecutive = 0\n    print(count)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = p = 0\n    for i in range(1, n):\n        if a[i] * 2 <= a[i - 1]:\n            p = i\n        if i - p == k:\n            c += 1\n            p += 1\n    print(c)", "t = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    lst = list(map(int, input().split()))\n    ct = 0\n    ans = 0\n    for i in range(1, n):\n        if lst[i] * 2 > lst[i - 1]:\n            ct += 1\n        else:\n            ct = 0\n        if ct >= k:\n            ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = 0\n    ans = 0\n    for i in range(n - 1):\n        if a[i] < 2 * a[i + 1]:\n            c += 1\n        else:\n            c = 0\n        if c >= k:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    le = 1\n    ans = 0\n    for i in range(1, n):\n        if l[i] * 2 > l[i - 1]:\n            le += 1\n        else:\n            ans += max(0, le - m)\n            le = 1\n    ans += max(0, le - m)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = [int(i) for i in input().split()]\n    l = [int(i) for i in input().split()]\n    c = 0\n    hit_count = 1\n    for i in range(n - 1):\n        if 2 * l[i + 1] > l[i]:\n            hit_count += 1\n        else:\n            hit_count = 1\n        if hit_count >= k + 1:\n            c += 1\n    print(c)", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\nt = int(input())\nfor _ in range(t):\n    (n, k) = get_ints()\n    arr = get_list()\n    cnt = 0\n    l = 0\n    for i in range(1, n):\n        if 2 * arr[i] > arr[i - 1]:\n            if i - l == k:\n                cnt += 1\n                l += 1\n        else:\n            l = i\n    print(cnt)", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    lsty = list(map(int, input().split()))\n    counter = 0\n    found = 0\n    for j in range(a - 1):\n        if lsty[j + 1] > lsty[j] / 2:\n            found += 1\n        else:\n            found = 0\n        if found == b:\n            found -= 1\n            counter += 1\n    print(counter)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = 0\n    m = 0\n    for i in range(n - 1):\n        if a[i] < a[i + 1] * 2:\n            m += 1\n            if m >= k:\n                s += 1\n        else:\n            m = 0\n    print(s)", "n = int(input())\nwhile n > 0:\n    (x, y) = map(int, input().split())\n    l1 = list(map(int, input().strip().split()))\n    l2 = l1\n    l2 = [x * 2 for x in l2]\n    ans = 0\n    k = 0\n    for i in range(0, x - 1):\n        if l1[i] < l2[i + 1]:\n            k += 1\n        else:\n            k = 0\n        if k >= y:\n            ans += 1\n    print(ans)\n    n -= 1", "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef shift(s):\n    for i in range(1, len(s) + 1):\n        if s == s[i:] + s[:i]:\n            return i\nfor _ in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    cur = 1\n    ans = 0\n    for i in range(1, n):\n        if a[i - 1] < 2 * a[i]:\n            cur += 1\n        else:\n            cur = 1\n        if cur > k:\n            ans += 1\n    print(ans)", "import collections\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = 0\n    ans = 0\n    for i in range(1, n):\n        if a[i] > a[i - 1] / 2:\n            c += 1\n        else:\n            c = 0\n        if c >= k:\n            ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    k += 1\n    a = [int(x) for x in input().split()]\n    broken = [-1] + [i for i in range(n - 1) if a[i] >= 2 * a[i + 1]] + [n - 1]\n    print(sum((max(0, broken[i + 1] - broken[i] - k + 1) for i in range(len(broken) - 1))))", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    prev = arr[0]\n    cnt = 0\n    ans = 0\n    for i in range(1, n):\n        if arr[i] > prev // 2:\n            if cnt == k - 1:\n                ans += 1\n            else:\n                cnt += 1\n        else:\n            cnt = 0\n        prev = arr[i]\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    sum = 0\n    ans = 0\n    for i in range(1, n):\n        if a[i] > a[i - 1] / 2:\n            sum += 1\n        else:\n            sum = 0\n        if sum >= k:\n            ans += 1\n    print(ans)", "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef shift(s):\n    for i in range(1, len(s) + 1):\n        if s == s[i:] + s[:i]:\n            return i\nfor _ in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    cur = 1\n    ans = 0\n    for i in range(1, n):\n        if a[i - 1] < 2 * a[i]:\n            cur += 1\n        else:\n            cur = 1\n        if cur > k:\n            ans += 1\n    print(ans)", "tc = int(input())\nfor _ in range(tc):\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    l = []\n    cnt1 = 1\n    for i in range(len(a) - 1):\n        if a[i] < 2 * a[i + 1]:\n            cnt1 += 1\n        elif a[i] >= 2 * a[i + 1]:\n            l.append(cnt1)\n            cnt1 = 1\n    l.append(cnt1)\n    cnt = 0\n    for i in l:\n        if i >= k + 1:\n            cnt += i - (k + 1) + 1\n    print(cnt)", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    le = 1\n    ans = 0\n    for i in range(n - 1):\n        if 2 * l[i + 1] > l[i]:\n            le += 1\n        else:\n            le = 1\n        if le >= k + 1:\n            ans += 1\n    print(ans)\n    t -= 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a = [a[i + 1] * 2 > a[i] for i in range(n - 1)]\n    s = sum(a[:k])\n    count = int(s == k)\n    for i in range(n - k - 1):\n        s += a[i + k] - a[i]\n        if s == k:\n            count += 1\n    print(count)", "for mhv in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = 1\n    ans = 0\n    for i in range(1, n):\n        if a[i - 1] < 2 * a[i]:\n            c += 1\n        else:\n            c = 1\n        if c > k:\n            ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    [n, k] = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    length = 0\n    ans = 0\n    for i in range(n):\n        if i == n - 1:\n            if length >= k:\n                ans += length + 1 - k\n            break\n        if arr[i] < 2 * arr[i + 1]:\n            length += 1\n        else:\n            if length >= k:\n                ans += length + 1 - k\n            length = 0\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    answer = 0\n    ran = 1\n    for i in range(n - 1):\n        if a[i] < a[i + 1] * 2:\n            ran += 1\n        else:\n            ran = 1\n        if ran >= k + 1:\n            answer += 1\n    print(answer)", "import sys\nsys.setrecursionlimit(10 ** 6)\nfrom sys import stdin, stdout\nI = stdin.readline\nO = stdout.write\n\ndef bi(n):\n    return bin(n).replace('0b', '')\n\ndef solve():\n    (n, k) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    fin = [1 for i in range(n)]\n    for i in range(1, n):\n        if 2 * arr[i] <= arr[i - 1]:\n            fin[i] = 0\n    for i in range(1, n):\n        fin[i] += fin[i - 1]\n    ans = 0\n    for i in range(n - k):\n        if fin[i + k] - fin[i] == k:\n            ans += 1\n    print(ans)\nfor tc in range(int(input())):\n    solve()", "for h in range(int(input())):\n    (n, k) = map(int, input().split())\n    x = list(map(int, input().split()))\n    i = 0\n    c = 0\n    for j in range(1, n):\n        if x[j] * 2 <= x[j - 1]:\n            c += max(0, j - i - k)\n            i = j\n    c += max(0, n - i - k)\n    print(c)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    cnt = 0\n    l = 0\n    for i in range(1, n):\n        if a[i - 1] / 2 < a[i]:\n            l += 1\n        else:\n            l = 0\n        if l == k:\n            cnt += 1\n            l = max(0, l - 1)\n    print(cnt)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    last = n - 1\n    ans = 0\n    for i in range(n - 1, -1, -1):\n        if i != n - 1:\n            if a[i] >= a[i + 1]:\n                last = i\n        if i + k <= last:\n            ans += 1\n        a[i] *= 2\n    print(ans)", "for _ in [0] * int(input()):\n    (n, k) = map(int, input().split())\n    (*a,) = map(int, input().split())\n    t = 0\n    b = [i for i in range(n - 1) if a[i] >= 2 * a[i + 1]]\n    m = len(b)\n    if m == 0:\n        print(n - k)\n        continue\n    for i in range(m - 1):\n        t += max(0, b[i + 1] - b[i] - k)\n    print(t + max(0, b[0] - k + 1) + max(0, n - b[-1] - k - 1))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    last = n - 1\n    ans = 0\n    for i in range(n - 1, -1, -1):\n        if i != n - 1:\n            if a[i] >= a[i + 1]:\n                last = i\n        if i + k <= last:\n            ans += 1\n        a[i] *= 2\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    j = 0\n    ans = 0\n    for i in range(1, n):\n        if 2 * l[i] > l[i - 1]:\n            v = 10\n        else:\n            j = i\n        if i - j == k:\n            ans += 1\n            j += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    r = 0\n    prev = a[0]\n    first = 0\n    last = 0\n    i = 1\n    while i < n:\n        if a[i] * 2 > a[i - 1]:\n            last += 1\n        else:\n            r += max(0, last - first + 1 - k)\n            (first, last) = (i, i)\n        i += 1\n    r += max(0, last - first + 1 - k)\n    print(r)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    l = []\n    for i in range(1, n):\n        if 2 * arr[i] > arr[i - 1]:\n            l.append(1)\n        else:\n            l.append(0)\n    cs = sum(l[:k])\n    ans = 0\n    if cs == k:\n        ans += 1\n    for i in range(k, n - 1):\n        cs += l[i]\n        cs -= l[i - k]\n        if cs == k:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    dp = [1 for i in range(n)]\n    count = 0\n    for i in range(1, n):\n        if 2 * a[i] > a[i - 1]:\n            dp[i] = dp[i - 1] + 1\n        else:\n            dp[i] = 1\n        if dp[i] > k:\n            count += 1\n    print(count)", "for _ in range(int(input())):\n    (z, y) = map(int, input().split())\n    x = list(map(int, input().split()))\n    r = 0\n    prev = x[0]\n    first = 0\n    last = 0\n    a = 1\n    while a < z:\n        if x[a] * 2 > x[a - 1]:\n            last += 1\n        else:\n            r += max(0, last - first + 1 - y)\n            (first, last) = (a, a)\n        a += 1\n    r += max(0, last - first + 1 - y)\n    print(r)", "T = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split())\n    s = list(map(int, input().split()))\n    ans = 0\n    start = 0\n    end = 1\n    count = 0\n    while end < n:\n        if s[end] * 2 > s[end - 1]:\n            end += 1\n            count += 1\n            if count == k:\n                ans += 1\n                start += 1\n                count -= 1\n        else:\n            start = end\n            end = start + 1\n            count = 0\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    s = []\n    for i in range(n - 1):\n        if a[i] < 2 * a[i + 1]:\n            s.append(1)\n        else:\n            s.append(0)\n    cnt = 0\n    now = sum(s[:k])\n    if now == k:\n        cnt += 1\n    for i in range(k, len(s)):\n        now -= s[i - k]\n        now += s[i]\n        if now == k:\n            cnt += 1\n    print(cnt)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = [2 * a[i] > a[i - 1] for i in range(1, n)]\n    colT = sum((b[i] for i in range(k)))\n    ans = 0\n    if colT == k:\n        ans += 1\n    for i in range(1, n - k):\n        colT += b[i + k - 1] - b[i - 1]\n        if colT == k:\n            ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    nums = [int(i) for i in input().split()]\n    (leftMult, rightMult) = (1, 2)\n    left = 0\n    count = 1\n    ans = 0\n    for right in range(1, n):\n        cond = nums[right - 1] * leftMult < nums[right] * rightMult\n        if cond:\n            count += 1\n        else:\n            count = 1\n        if count > k:\n            ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = [0] * (n - 1)\n    for i in range(n - 1):\n        if 2 * a[i + 1] > a[i]:\n            b[i] = 1\n    c = sum(b[:k])\n    r = 0\n    if c == k:\n        r += 1\n    for i in range(n - k - 1):\n        c -= b[i]\n        c += b[i + k]\n        if c == k:\n            r += 1\n    print(r)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    nums = list(map(int, input().split()))\n    ans = [1] * n\n    for i in range(1, n):\n        if nums[i - 1] < 2 * nums[i]:\n            ans[i] = 1 + ans[i - 1]\n    count = 0\n    for i in range(k, n):\n        if ans[i] - ans[i - k] == k:\n            count += 1\n    print(count)", "for x in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    sub = 0\n    ans = [0] * n\n    for x in range(n - 1):\n        if l[x] < l[x + 1] * 2:\n            ans[x] = 1\n    s = 0\n    for x in range(k):\n        s += ans[x]\n    if s == k:\n        sub += 1\n    for y in range(k, n - 1):\n        s -= ans[y - k]\n        s += ans[y]\n        if s == k:\n            sub += 1\n    print(sub)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    r = []\n    cnt = 0\n    for i in range(n - 1):\n        r.append(l[i] < 2 * l[i + 1])\n    ones = sum(r[:k])\n    if ones == k:\n        cnt += 1\n    for i in range(k, n - 1):\n        ones += r[i]\n        ones -= r[i - k]\n        if ones == k:\n            cnt += 1\n    print(cnt)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = [0] * (n - 1)\n    for i in range(n - 1):\n        b[i] = 1 if a[i] < 2 * a[i + 1] else 0\n    ans = 0\n    c = sum(b[:k])\n    if c == k:\n        ans += 1\n    for i in range(n - k - 1):\n        c -= b[i]\n        c += b[i + k]\n        if c == k:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    arr_bool = [True]\n    for i in range(1, n):\n        if arr[i - 1] < 2 * arr[i]:\n            arr_bool.append(True)\n        else:\n            arr_bool.append(False)\n    arr_bool.append(False)\n    i = 0\n    count = 0\n    start = 0\n    for (i, bool) in enumerate(arr_bool):\n        if not bool:\n            count += max(i - start - k, 0)\n            start = i\n    print(count)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = [0] * (n - 1)\n    for i in range(n - 1):\n        b[i] = 1 if a[i] < 2 * a[i + 1] else 0\n    ans = 0\n    c = sum(b[:k])\n    if c == k:\n        ans += 1\n    for i in range(n - k - 1):\n        c -= b[i]\n        c += b[i + k]\n        if c == k:\n            ans += 1\n    print(ans)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    cnt = 0\n    for j in range(k):\n        cnt += a[j] >= a[j + 1] * 2\n    for i in range(n - k):\n        ans += cnt == 0\n        cnt -= a[i] >= a[i + 1] * 2\n        if i + 1 + k < n:\n            cnt += a[i + k] >= a[i + k + 1] * 2\n    return ans\nfor _ in range(int(input())):\n    print(solve())", "def read_arr():\n    return list(map(int, input().split(' ')))\n_t = 1\n_t = int(input())\nfor _i in range(_t):\n    (n, k) = read_arr()\n    A = read_arr()\n    B = [0] * n\n    (ans, cur) = (0, 0)\n    for i in range(1, n):\n        if A[i] * 2 > A[i - 1]:\n            B[i] = 1\n    for b in B:\n        if b == 1:\n            cur += 1\n            if cur >= k:\n                ans += 1\n        else:\n            cur = 0\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    ans = 0\n    last = 0\n    for i in range(1, n):\n        if arr[i] * 2 <= arr[i - 1]:\n            ans += max(0, i - 1 - last + 1 - (k + 1) + 1)\n            last = i\n    ans += max(0, i - last + 1 - (k + 1) + 1)\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = input().split(' ')\n    (n, k) = (int(n), int(k))\n    arr = input().split(' ')\n    k += 1\n    temp = 1\n    ans = 0\n    for i in range(n):\n        arr[i] = int(arr[i])\n        if i != 0 and 2 * arr[i] > arr[i - 1]:\n            temp += 1\n        else:\n            temp = 1\n        ans += 1 if temp >= k else 0\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = [int(v) for v in input().split()]\n    w = [int(v) for v in input().split()]\n    z = []\n    for j in range(1, n):\n        if w[j] * 2 > w[j - 1]:\n            z.append(1)\n        else:\n            z.append(0)\n    res = 0\n    c = 0\n    for j in range(n - 1):\n        if z[j] == 1:\n            c += 1\n        else:\n            if c >= k:\n                res += c - k + 1\n            c = 0\n    if c >= k:\n        res += c - k + 1\n    print(res)"]