["import math\nfor query in range(int(input())):\n    (m, r) = map(int, input().split())\n    if r <= math.ceil(m / 2):\n        mat = [['.'] * m for _ in range(m)]\n        for i in range(r):\n            mat[2 * i][2 * i] = 'R'\n        print(*[''.join(r) for r in mat], sep='\\n')\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if n < 2 * k - 1:\n        print(-1)\n    else:\n        a = 1\n        b = 0\n        c = n - 1\n        i = 0\n        for i in range(n):\n            if i % 2 == 0 and k > 0:\n                print(b * '.' + 'R' + c * '.')\n                a += 2\n                b += 2\n                c -= 2\n                k -= 1\n            else:\n                print('.' * n)\n            i += 1", "problem_num = int(input())\nfor problem in range(problem_num):\n    (n, k) = map(int, input().split())\n    if n // 2 + n % 2 < k:\n        print(-1)\n    else:\n        num_rook = 0\n        for i in range(n):\n            if i % 2 == 0 and num_rook < k:\n                print_ln = '.' * i + 'R' + '.' * (n - i - 1)\n                num_rook += 1\n                print(print_ln)\n            else:\n                print_ln = '.' * n\n                print(print_ln)", "for _ in range(int(input())):\n    a = list(map(int, input().split()))\n    n = a[0]\n    k = a[1]\n    sum = 0\n    if (n + 1) // 2 > k - 1:\n        for i in range(n // 2):\n            if sum == k:\n                print('.' * n)\n                print('.' * n)\n            else:\n                print('.' * (i * 2), 'R', '.' * (n - 1 - i * 2), sep='')\n                sum += 1\n                print('.' * n)\n        if sum == k and n % 2 == 1:\n            print('.' * n)\n        elif n % 2 == 1:\n            print('.' * (n - 1), 'R', sep='')\n    else:\n        print('-1')", "n = int(input())\nl = []\nst = []\nfor i in range(n):\n    l.append(list(map(int, input().split())))\n    x = 1 + 2 * (l[i][1] - 1)\n    y = l[i][0]\n    if y < x:\n        st.append(-1)\n    else:\n        for j in range(y):\n            s = '.' * y\n            if j % 2 == 0 and j < x:\n                s = s[0:j] + 'R' + s[j + 1:]\n            st.append(s)\nfor k in range(len(st)):\n    print(st[k])", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    done = 0\n    if n >= 2 * k - 1:\n        r = ['.' for i in range(n)]\n        num = 0\n        for i in range(n):\n            if i % 2 == 1 or done >= k:\n                print(''.join(r))\n            else:\n                r[i] = 'R'\n                print(''.join(r))\n                r[i] = '.'\n                done += 1\n    else:\n        print(-1)", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    (n, k) = map(int, inp().split())\n    a = [['.'] * n for i in range(n)]\n    for i in range(k):\n        if i * 2 >= n:\n            print(-1)\n            return\n        a[i * 2][i * 2] = 'R'\n    print('\\n'.join((''.join(i) for i in a)))\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "import sys, bisect, math\nfrom collections import deque, Counter\ninput = lambda : sys.stdin.readline().strip()\nceil = lambda x: math.ceil(x)\nmod = 10 ** 9 + 7\n\ndef solve():\n    (n, k) = map(int, input().split())\n    if k > ceil(n / 2):\n        return -1\n    a = []\n    for i in range(n):\n        a.append(list('.' * n))\n    for i in range(k):\n        a[2 * i][2 * i] = 'R'\n    s = '\\n'.join([''.join(a[i]) for i in range(n)])\n    return s\nt = 1\nt = int(input())\nfor _ in range(t):\n    print(solve())", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    (q, r) = divmod(n, 2)\n    if r:\n        q += 1\n    if k > q:\n        print(-1)\n    else:\n        ans = [['.'] * n for i in range(n)]\n        for i in range(0, 2 * k, 2):\n            ans[i][i] = 'R'\n        for line in ans:\n            print(''.join(line))", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k > (n + 1) // 2:\n        print(-1)\n        continue\n    x = []\n    (a, b) = (0, 0)\n    for i in range(n):\n        x.append(['.'] * n)\n    for i in range(k):\n        x[a][b] = 'R'\n        (a, b) = (a + 2, b + 2)\n    for i in range(n):\n        x[i] = ''.join(x[i])\n    for i in range(n):\n        print(x[i])", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    limit = ceil(n / 2)\n    if k > limit:\n        print(-1)\n    else:\n        board = [['.'] * n for i in range(n)]\n        for i in range(0, n, 2):\n            if k == 0:\n                break\n            board[i][i] = 'R'\n            k -= 1\n        board = [''.join(el) for el in board]\n        for el in board:\n            print(el)", "import sys\ninput = sys.stdin.readline\nnum_test_cases = int(input())\nfor test_case_ittr in range(num_test_cases):\n    (side_length, num_rooks) = [int(x) for x in input().split()]\n    num_rooks_that_can_fit = (side_length + 1) // 2\n    if num_rooks_that_can_fit < num_rooks:\n        print(-1)\n        continue\n    board = [['.' for j in range(side_length)] for i in range(side_length)]\n    for i in range(num_rooks):\n        board[2 * i][2 * i] = 'R'\n    for row in board:\n        print(''.join(row))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k > (n + 1) // 2:\n        print(-1)\n    else:\n        ans = [['.'] * n for i in range(n)]\n        for i in range(k):\n            ans[2 * i][2 * i] = 'R'\n        for i in range(n):\n            ll = ''.join(ans[i])\n            print(ll)", "import sys\nfrom math import sqrt, gcd\nfrom collections import deque\nsys.setrecursionlimit(10 ** 8)\nI = lambda : int(input())\nS = lambda : input().strip()\nM = lambda : map(int, input().strip().split())\nL = lambda : list(map(int, input().strip().split()))\nmod = 1000000007\nfor i in range(I()):\n    (n, k) = M()\n    if n % 2 and k > n // 2 + 1:\n        print(-1)\n    elif n % 2 == 0 and k > n // 2:\n        print(-1)\n    else:\n        arr = ['.'] * n\n        i = 0\n        while i < n:\n            if k > 0:\n                arr[i] = 'R'\n                print(''.join(arr))\n                arr[i] = '.'\n                i += 1\n                k -= 1\n            if i < n:\n                print(''.join(arr))\n                i += 1", "T = int(input())\nfor t in range(T):\n    (n, k) = map(int, input().split())\n    if (n + 1) // 2 < k:\n        print(-1)\n    else:\n        grid = []\n        for i in range(n):\n            grid.append(['.'] * n)\n        for i in range(k):\n            grid[i * 2][i * 2] = 'R'\n        for i in grid:\n            print(''.join(i))", "from math import ceil\nfor _ in range(int(input())):\n    (n, k) = map(int, input().strip().split())\n    if ceil(n / 2) < k:\n        print('-1')\n        continue\n    mat = [['.' for _ in range(n)] for _ in range(n)]\n    r = 0\n    for _ in range(k):\n        mat[r][r] = 'R'\n        r += 2\n    for row in mat:\n        print(''.join(row))", "import sys\nimport math\ninput = sys.stdin.readline\nimp = 'IMPOSSIBLE'\nt = int(input())\nfor test in range(t):\n    (n, k) = list(map(int, input().split(' ')))\n    if n - 1 >= (k - 1) * 2:\n        res = []\n        for i in range(n):\n            if i % 2 == 0 and i / 2 < k:\n                res.append(i * '.' + 'R' + (n - i - 1) * '.')\n            else:\n                res.append(n * '.')\n    else:\n        res = ['-1']\n    for j in range(len(res)):\n        print(res[j])", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k > (n + 1) // 2:\n        print(-1)\n    else:\n        a = 0\n        for i in range(1, n + 1):\n            if i % 2 == 1 and a < k:\n                a += 1\n                print('.' * (i - 1) + 'R' + '.' * (n - i))\n            else:\n                print('.' * n)", "def solve(n, a):\n    if a == 1 and n == 1:\n        print('R')\n        return 0\n    if n % 2 == 1:\n        if a > n // 2 + 1:\n            print(-1)\n            return 0\n    elif a > n // 2:\n        print(-1)\n        return 0\n    arr = [['.'] * n for i in range(n)]\n    for i in range(a):\n        arr[2 * i][2 * i] = 'R'\n    for i in range(n):\n        print(''.join(arr[i]))\n    return 0\nt = int(input())\nfor case in range(t):\n    (n, a) = map(int, input().split())\n    solve(n, a)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k <= (n + 1) // 2:\n        for i in range(n):\n            if i & 1 or k == 0:\n                print('.' * n)\n            else:\n                print('.' * i + 'R' + '.' * (n - i - 1))\n                k = k - 1\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if k > (n + 1) // 2:\n        print(-1)\n        continue\n    result = [['.' for i in range(n)] for j in range(n)]\n    r = 0\n    c = 0\n    for i in range(k):\n        result[r][c] = 'R'\n        r += 2\n        c += 2\n    for i in range(n):\n        print(''.join(result[i]))", "import sys\ninput = sys.stdin.readline\nprint = sys.stdout.write\nt = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    if n < 2 * k - 1:\n        print('{}\\n'.format(-1))\n    else:\n        board = [['.' for i in range(n)] for j in range(n)]\n        for (i, j) in zip(range(0, n, 2), range(0, n, 2)):\n            if k > 0:\n                board[i][j] = 'R'\n                k -= 1\n            else:\n                break\n        for row in board[:n]:\n            print('{}\\n'.format(''.join(row[:n])))\n    t -= 1", "for _ in range(int(input())):\n    [n, k] = list(map(int, input().split()))\n    if k <= (n + 1) // 2:\n        chess = [['.' for _ in range(n)] for _ in range(n)]\n        for i in range(k):\n            chess[2 * i][2 * i] = 'R'\n        print('\\n'.join(list(map(lambda x: ''.join(x), chess))))\n    else:\n        print('-1')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    t = '.' * n\n    if n == k and n == 1:\n        print('R')\n    elif k > int((n + 1) / 2):\n        print(-1)\n    else:\n        ls = []\n        for i in range(n):\n            ls.append(list('.' * n))\n        for a in range(k):\n            ls[2 * a][2 * a] = 'R'\n        for b in range(n):\n            print(''.join(ls[b]))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    max_k = (n + 1) // 2\n    if k > max_k:\n        print(-1)\n    else:\n        for i in range(n):\n            if i % 2 or k == 0:\n                print('.' * n)\n            else:\n                print('.' * i + 'R' + '.' * (n - i - 1))\n                k -= 1", "n = int(input())\nfor i in range(n):\n    (size, num) = map(int, input().split())\n    if num > (size + 1) / 2:\n        print(-1)\n        continue\n    empty = '.' * size\n    for j in range(num):\n        if j > 0:\n            print(empty)\n        s = '.' * (2 * j)\n        s += 'R'\n        s += '.' * (size - 2 * j - 1)\n        print(s)\n    for j in range(size - 2 * num + 1):\n        print(empty)", "h = int(input())\nfor zz in range(h):\n    (n, m) = map(int, input().split())\n    if m > (n + 1) // 2 and (m > 1 or n > 1):\n        print(-1)\n    else:\n        k = 1\n        r = 0\n        while k <= n:\n            for i in range(n):\n                print(2 * i * '.' + 'R' * (r < m) + (n - 2 * i - 1) * '.' + '.' * (r >= m))\n                r += 1\n                k += 1\n                if k >= n:\n                    break\n                print(n * '.')\n                k += 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().strip().split())\n    if k > (n + 1) // 2:\n        print(-1)\n        continue\n    for i in range(k):\n        print('.' * 2 * i, 'R', '.' * (n - 2 * i - 1), sep='')\n        if i == k - 1 and k > n // 2:\n            break\n        print('.' * n)\n    for _ in range(n - 2 * k):\n        print('.' * n)", "for _ in range(int(input())):\n    (n, r) = map(int, input().split())\n    if r > (n + 1) // 2:\n        print(-1)\n    else:\n        used = 0\n        for i in range(n):\n            if i % 2:\n                print('.' * n)\n            elif used >= r:\n                print('.' * n)\n            else:\n                print('.' * i + 'R' + '.' * (n - i - 1))\n                used += 1", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n_k = [int(c) for c in input().split(' ')]\n    (n, k) = (n_k[0], n_k[1])\n    if 2 * k - 1 <= n:\n        result = [['.'] * n for i in range(n)]\n        (row, col) = (0, 0)\n        for i in range(k):\n            result[row][col] = 'R'\n            row += 2\n            col += 2\n        for i in range(n):\n            print(''.join(result[i]))\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k == 1:\n        if n == 1:\n            print('R')\n        else:\n            print('R', end='')\n            print('.' * (n - 1))\n            for i in range(n - 1):\n                print('.' * n)\n    elif k > (n + 1) // 2:\n        print(-1)\n    else:\n        for i in range(n):\n            if i % 2 == 0 and k > 0:\n                print('.' * i, end='')\n                print('R', end='')\n                print('.' * (n - i - 1))\n                k = k - 1\n            else:\n                print('.' * n)", "t = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    grid = [['.' for i in range(n)] for j in range(n)]\n    g = 0\n    while k > 0 and g < n:\n        grid[g][g] = 'R'\n        k -= 1\n        g += 2\n    if k == 0:\n        for i in range(n):\n            print(''.join(grid[i]))\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    mat = [['.' for i in range(n)] for j in range(n)]\n    k1 = k\n    for i in range(0, n, 2):\n        if k1 > 0:\n            mat[i][i] = 'R'\n            k1 -= 1\n    if k > -(-n // 2):\n        print(-1)\n    else:\n        for i in mat:\n            print(''.join((j for j in i)))", "import math\n\ndef ansprint(ans):\n    if ans == -1:\n        print(-1)\n    else:\n        n = len(ans)\n        for i in range(n):\n            print(''.join(ans[i]))\n\ndef solve(n, k):\n    if k > math.ceil(n / 2):\n        return -1\n    ans = [['.' for j in range(n)] for i in range(n)]\n    for i in range(k):\n        ans[2 * i][2 * i] = 'R'\n    return ans\nt = int(input())\nfor _ in range(t):\n    (n, k) = tuple(map(int, input().rstrip().split()))\n    ans = solve(n, k)\n    ansprint(ans)", "T = int(input())\nfor tc in range(T):\n    (n, k) = map(int, input().split())\n    z = (n + 1) // 2\n    if z < k:\n        print(-1)\n    else:\n        L = [['.' for i in range(n)] for i in range(n)]\n        for i in range(k):\n            L[2 * i][2 * i] = 'R'\n        for l in L:\n            print(''.join(l))", "n = int(input())\nk = []\nm = []\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    k.append(a)\n    m.append(b)\nfor i in range(n):\n    if m[i] <= (k[i] + 1) // 2:\n        cb = [['.' for j in range(k[i])] for j in range(k[i])]\n        for q in range(m[i]):\n            x = 2 * q\n            cb[x][x] = 'R'\n        for z in range(k[i]):\n            print(''.join(cb[z]))\n    else:\n        print('-1')", "m = int(input())\nfor i in range(m):\n    (n, k) = [int(x) for x in input().split()]\n    if int(n / 2 + 0.5) < k:\n        print(-1)\n    else:\n        flag = 0\n        for i in range(1, n + 1):\n            if flag == 0:\n                print('.' * (i - 1), end='')\n                if k > 0:\n                    print('R', end='')\n                    k -= 1\n                else:\n                    print('.', end='')\n                print('.' * (n - i))\n                flag = 1\n            else:\n                print('.' * n)\n                flag = 0", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if (n + 1) // 2 < k:\n        print(-1)\n    else:\n        desk = [['.' for i in range(n)] for i in range(n)]\n        for i in range(0, 2 * k, 2):\n            desk[i][i] = 'R'\n        for row in desk:\n            print(''.join(row))", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    ans = [['.' for q in range(n)] for s in range(n)]\n    i = 0\n    while i < n:\n        if k:\n            ans[i][i] = 'R'\n            k -= 1\n            i += 2\n        else:\n            break\n    if k > 0:\n        print(-1)\n    else:\n        for a in ans:\n            print(''.join(a))", "import math\nT = int(input())\n\ndef main(S, R) -> object:\n    if R > math.ceil(S / 2):\n        print(-1)\n    else:\n        for i in range(0, S, 2):\n            if R > 0:\n                print(i * '.' + 'R' + (S - i - 1) * '.')\n                R -= 1\n            else:\n                print(S * '.')\n            if i == S - 1:\n                break\n            print(S * '.')\nx = []\nfor t in range(T):\n    x.append(input())\nfor t in range(T):\n    s = x[t]\n    main(int(s.split()[0]), int(s.split()[1]))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n < k * 2 - 1:\n        print(-1)\n        continue\n    c = 1\n    for i in range(1, n + 1):\n        if i % 2 == 1 and c <= k:\n            li = ['.' for i in range(n)]\n            li[i - 1] = 'R'\n            c += 1\n            print(''.join(li))\n        else:\n            print('.' * n)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k > n // 2 + n % 2:\n        print(-1)\n    else:\n        matrix = [['.'] * n for i in range(n)]\n        used = [0, 0]\n        matrix[0][0] = 'R'\n        (row, column) = (0, 0)\n        for i in range(k - 1):\n            row += 2\n            column += 2\n            matrix[row][column] = 'R'\n        for i in matrix:\n            print(''.join(i))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if (n + 1) // 2 < k:\n        print(-1)\n    else:\n        curr = 0\n        tot = 0\n        for i in range(0, 2 * n + 1, 2):\n            if tot < k:\n                print('.' * i + 'R' + '.' * (n - i - 1))\n                tot += 1\n            if tot + curr < n:\n                print('.' * n)\n                curr += 1", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    ans = ['.' * n for i in range(n)]\n    (curr, count) = (0, 0)\n    for i in range(0, n, 2):\n        if count == k:\n            break\n        ans[i] = ans[i][:curr] + 'R' + ans[i][curr + 1:]\n        curr += 2\n        count += 1\n    if ''.join(ans).count('R') == k:\n        print(*ans, sep='\\n')\n    else:\n        print(-1)", "import math\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if math.ceil(n / 2) < k:\n        print('-1')\n        continue\n    for i in range(n):\n        if i % 2 == 0 and i < 2 * k - 1:\n            print('.' * i + 'R' + '.' * (n - i - 1))\n        else:\n            print('.' * n)", "def getStableArrangement(n, k):\n    arrangement = []\n    if n % 2 == 0:\n        if k > n // 2:\n            return arrangement\n    elif k > n // 2 + 1:\n        return arrangement\n    placed = 0\n    for line in range(n):\n        newLine = ['.'] * n\n        if placed < k:\n            if line % 2 == 0:\n                newLine[line] = 'R'\n                placed += 1\n        arrangement.append(newLine)\n    if placed == k:\n        return arrangement\n    else:\n        return []\nt = int(input())\nfor count in range(t):\n    (n, k) = map(int, input().split())\n    arrangement = getStableArrangement(n, k)\n    if len(arrangement) == 0:\n        print(-1)\n    else:\n        for line in arrangement:\n            print(''.join(line))", "n = int(input())\nfor i in range(n):\n    (n, k) = map(int, input().split())\n    list1 = ['.' for i in range(n)]\n    count = 0\n    if n % 2 == 0:\n        if k <= int(n / 2):\n            for j in range(n):\n                if (j + 1) % 2 != 0 and count < k:\n                    list1[j] = 'R'\n                    print(''.join(list1), end='\\n')\n                    count += 1\n                    list1[j] = '.'\n                else:\n                    print(''.join(list1), end='\\n')\n        else:\n            print(-1)\n    elif k <= int(n / 2) + 1:\n        for j in range(n):\n            if (j + 1) % 2 != 0 and count < k:\n                list1[j] = 'R'\n                print(''.join(list1), end='\\n')\n                count += 1\n                list1[j] = '.'\n            else:\n                print(''.join(list1), end='\\n')\n    else:\n        print(-1)", "for _ in range(int(input())):\n    nk = list(map(int, input().split()))\n    n = nk[0]\n    k = nk[1]\n    if n == 1:\n        print('R')\n    elif n > 1:\n        if int((n + 1) / 2) >= k:\n            for i in range(1, n + 1):\n                if i % 2 == 0 or k == 0:\n                    print('.' * n)\n                elif k > 0:\n                    p = '.' * (i - 1)\n                    print(p, end='')\n                    print('R', end='')\n                    print('.' * (n - i))\n                    k -= 1\n        else:\n            print(-1)", "n = int(input())\nfor i in range(n):\n    (n, k) = map(int, input().rstrip().split())\n    flag = True\n    if n == 1:\n        flag = False\n        print('R')\n    elif n % 2 == 0:\n        m = n // 2\n        if k > m:\n            flag = False\n            print(-1)\n    elif n % 2 != 0:\n        m = (n + 1) // 2\n        if k > m:\n            flag = False\n            print(-1)\n    if flag:\n        rook = 0\n        rooks = 1\n        for i in range(n):\n            arr = ['.' for i in range(n)]\n            if (i + 1) % 2 != 0 and rooks <= k:\n                arr[rook] = 'R'\n                rooks += 1\n            s = ''\n            s = s.join(arr)\n            print(s)\n            rook += 1", "count = int(input())\nfor _ in range(count):\n    (a, b) = input().split()\n    (a, b) = (int(a), int(b))\n    c = 0\n    d = 0\n    e = True\n    if b == 1:\n        for i in range(a):\n            if i == 0:\n                print('R' + '.' * (a - 1))\n            else:\n                print(a * '.')\n        e = False\n    if a == b and e:\n        print('-1')\n        e = False\n    if a % 2 == 1:\n        c = a + 1\n    if a % 2 == 0:\n        c = a\n    c = int(c / 2)\n    if e:\n        if c < b and e:\n            print('-1')\n        else:\n            for i in range(a):\n                j = a - i - 1\n                if i % 2 == 0:\n                    if d < b:\n                        print(i * '.' + 'R' + j * '.')\n                        d += 1\n                    else:\n                        print(a * '.')\n                else:\n                    print(a * '.')", "t = int(input())\na = []\nfor i in range(t):\n    a += [list(map(int, input().split()))]\nfor i in range(t):\n    if a[i][0] < 2 * a[i][1] - 1:\n        print('-1')\n    else:\n        for j in range(a[i][0]):\n            k = a[i][1]\n            if j % 2 == 1:\n                print('.' * a[i][0])\n            elif j % 2 == 0 and j <= 2 * (k - 1):\n                print('.' * j + 'R' + '.' * (a[i][0] - j - 1))\n            else:\n                print('.' * a[i][0])", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    ans = []\n    if a % 2 == 1 and b <= (a + 1) // 2:\n        ctr = 0\n        maxr = b\n        for j in range(a):\n            temp = '.' * a\n            if j % 2 == 0 and maxr > 0:\n                temp2 = list(temp)\n                temp2[ctr] = 'R'\n                temp = ''.join(temp2)\n                maxr -= 1\n                ctr += 2\n            ans.append(temp)\n        for j in ans:\n            print(j)\n    elif b <= a // 2:\n        ctr = 0\n        maxr = b\n        for j in range(a):\n            temp = '.' * a\n            if j % 2 == 0 and maxr > 0:\n                temp2 = list(temp)\n                temp2[ctr] = 'R'\n                temp = ''.join(temp2)\n                maxr -= 1\n                ctr += 2\n            ans.append(temp)\n        for j in ans:\n            print(j)\n    else:\n        print('-1')", "def ff(n, k):\n    c = 0\n    count = 0\n    l = 0\n    for i in range(n):\n        if count == k:\n            break\n        if i % 2 == 0:\n            print('.' * c + 'R' + '.' * (n - 1 - c))\n            c += 2\n            count += 1\n        else:\n            print('.' * n)\n        l += 1\n    if l < n:\n        for i in range(n - l):\n            print('.' * n)\n    if count < k:\n        print(-1)\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0 and k > n // 2:\n        print(-1)\n    elif n % 2 == 1 and k > n // 2 + 1:\n        print(-1)\n    else:\n        ff(n, k)", "import math\nfor query in range(int(input())):\n    (n, r) = map(int, input().split())\n    if r <= math.ceil(n / 2):\n        mat = [['.'] * n for _ in range(n)]\n        for i in range(r):\n            mat[2 * i][2 * i] = 'R'\n        print(*[''.join(r) for r in mat], sep='\\n')\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if k > int((n + 1) / 2):\n        print(-1)\n    else:\n        temp = k\n        for i in range(n):\n            s = '.' * n\n            a = list(s)\n            if i % 2 == 0 and temp > 0:\n                a[i] = 'R'\n                p = ''.join(a)\n                print(p)\n                temp -= 1\n            else:\n                print('.' * n)", "from math import ceil\ntt = int(input())\nfor x in range(tt):\n    (n, k) = map(int, input().split())\n    res = ceil(n / 2)\n    if res >= k:\n        l = [['.'] * n for _ in range(n)]\n        for i in range(k):\n            l[2 * i][2 * i] = 'R'\n        print(*[''.join(k) for k in l], sep='\\n')\n    else:\n        print(-1)", "t = int(input())\nwhile t != 0:\n    (n, k) = map(int, input().split())\n    if k > n // 2 + n % 2:\n        print(-1)\n    else:\n        mat = ['.'] * n * n\n        for i in range(0, n * n, n * 2 + 2):\n            if k > 0:\n                mat[i] = 'R'\n                k -= 1\n            else:\n                break\n        ans = []\n        for i in range(0, n * n, n):\n            ans.append(''.join(mat[i:i + n]))\n        for i in ans:\n            print(i)\n    t -= 1", "import math\nfor query in range(int(input())):\n    (n, r) = map(int, input().split())\n    if r <= math.ceil(n / 2):\n        mat = [['.'] * n for _ in range(n)]\n        for i in range(r):\n            mat[2 * i][2 * i] = 'R'\n        print(*[''.join(r) for r in mat], sep='\\n')\n    else:\n        print(-1)", "for t in range(int(input())):\n    [n, h] = list(map(int, input().split()))\n    cnt = 0\n    cb = [['.' for i in range(n)] for i in range(n)]\n    for i in range(n):\n        if i % 2 == 0:\n            cb[i][i] = 'R'\n            cnt = cnt + 1\n            if cnt == h:\n                break\n    if cnt == h:\n        print('\\n'.join(map(lambda t: ''.join(t), cb)))\n    else:\n        print(-1)", "import math\nfor query in range(int(input())):\n    (n, r) = map(int, input().split())\n    if r <= math.ceil(n / 2):\n        mat = [['.'] * n for _ in range(n)]\n        for i in range(r):\n            mat[2 * i][2 * i] = 'R'\n        print(*[''.join(r) for r in mat], sep='\\n')\n    else:\n        print(-1)", "tests = int(input())\nmylist = []\nanotherlist = []\nfor i in range(tests):\n    mylist.append(input().split(' '))\nmystr = ''\nfor item in mylist:\n    n = int(item[0])\n    k = int(item[1])\n    k2 = int(item[1])\n    if n == 0:\n        mystr += '-1\\n'\n    elif n % 2 == 0:\n        if k > n / 2:\n            mystr += '-1\\n'\n        else:\n            for i2 in range(n):\n                if (i2 + 1) % 2 == 0 or k2 <= 0:\n                    mystr += '.' * n + '\\n'\n                else:\n                    mystr += '.' * i2 + 'R' + '.' * (n - i2 - 1) + '\\n'\n                    k2 -= 1\n    elif k > (n + 1) / 2:\n        mystr += '-1\\n'\n    else:\n        for i2 in range(n):\n            if (i2 + 1) % 2 == 0 or k2 <= 0:\n                mystr += '.' * n + '\\n'\n            else:\n                mystr += '.' * i2 + 'R' + '.' * (n - i2 - 1) + '\\n'\n                k2 -= 1\nprint(mystr)", "import math\nfor query in range(int(input())):\n    (n, r) = map(int, input().split())\n    if r <= math.ceil(n / 2):\n        mat = [['.'] * n for _ in range(n)]\n        for i in range(r):\n            mat[2 * i][2 * i] = 'R'\n        print(*[''.join(r) for r in mat], sep='\\n')\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    r = list(map(int, input().split()))\n    n = r[0]\n    k = r[1]\n    if n % 2 == 0:\n        if n / 2 >= k:\n            count = 0\n            for j in range(n):\n                print('.' * j, end='')\n                if not j % 2:\n                    if count < k:\n                        print('R', end='')\n                        count += 1\n                    else:\n                        print('.', end='')\n                else:\n                    print('.', end='')\n                print('.' * (n - j - 1))\n        else:\n            print(-1)\n    elif (n + 1) / 2 >= k:\n        count = 0\n        for j in range(n):\n            print('.' * j, end='')\n            if not j % 2:\n                if count < k:\n                    print('R', end='')\n                    count += 1\n                else:\n                    print('.', end='')\n            else:\n                print('.', end='')\n            print('.' * (n - j - 1))\n    else:\n        print(-1)", "T = int(input())\nwhile T:\n    s = input()\n    s = s.split()\n    n = int(s[0])\n    k = int(s[1])\n    if n // 2 + n % 2 < k:\n        print(-1)\n    else:\n        for i in range(n):\n            if i % 2 == 0 and k != 0:\n                print(i * '.' + 'R' + (n - i - 1) * '.')\n                k = k - 1\n            else:\n                print(n * '.')\n    T = T - 1", "from math import *\nt = int(input())\nfor q in range(t):\n    (n, r) = map(int, input().split())\n    ce = ceil(n / 2)\n    if r > ce:\n        print(-1)\n    elif r <= ce:\n        matrix = [['.'] * n for _ in range(n)]\n        i = 0\n        while i < r:\n            matrix[2 * i][2 * i] = 'R'\n            i += 1\n        print(*[''.join(r) for r in matrix], sep='\\n')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    obj = 0\n    if 2 * k - 1 <= n:\n        for u in range(n):\n            l = ['.' for j in range(n)]\n            if u % 2 != 0:\n                print(''.join(l))\n            else:\n                if obj < k:\n                    l[u] = 'R'\n                    print(''.join(l))\n                else:\n                    print(''.join(l))\n                obj += 1\n    else:\n        print(-1)", "import math\nx = int(input())\nl = []\nfor i in range(x):\n    y = list(map(int, input().split()))\n    l.append(y)\n\ndef function(l):\n    x = l[0]\n    y = l[1]\n    li = []\n    if x == 1 and y == 1:\n        li.append('R')\n        return li\n    if y > math.ceil(x / 2):\n        li.append(-1)\n        return li\n    if y <= math.ceil(x / 2):\n        li = []\n        j = 0\n        st = ''\n        z = 0\n        for i in range(x):\n            if i % 2 == 0:\n                st = st + '.' * (x - 1)\n                if z < y:\n                    st = list(st)\n                    st.insert(j, 'R')\n                    st = ''.join(st)\n                    j = j + 2\n                    li.append(st)\n                    st = ''\n                    z = z + 1\n                    continue\n                if z >= y:\n                    st = ''\n                    st = st + '.' * x\n                li.append(st)\n                st = ''\n            if i % 2 == 1:\n                li.append('.' * x)\n        return li\nfor i in range(len(l)):\n    x = function(l[i])\n    for j in x:\n        print(j)", "def rooks(n, k):\n    if n % 2 == 1:\n        max_k = (n + 1) // 2\n    else:\n        max_k = n // 2\n    if k > max_k:\n        return -1\n    else:\n        board = [['.'] * n for _ in range(n)]\n        for i in range(0, min(2 * k, 2 * max_k), 2):\n            board[i][i] = 'R'\n        resp = ''\n        for i in range(0, n):\n            if i < n - 1:\n                resp += ''.join(board[i]) + '\\n'\n            else:\n                resp += ''.join(board[i])\n        return resp\nt = int(input())\nfor _ in range(0, t):\n    arr = list(map(int, input().rstrip().split()))\n    n = arr[0]\n    k = arr[1]\n    response = rooks(n, k)\n    print(f'{response}')", "num_test = int(input(''))\nfor ddd in range(num_test):\n    (size_bor, nums_rooks) = input('').split(' ')\n    (size_bor, nums_rooks) = (int(size_bor), int(nums_rooks))\n    if size_bor < nums_rooks or (size_bor + 1) / 2 < nums_rooks:\n        print('-1')\n    elif size_bor == 1 and nums_rooks == 1:\n        print('R')\n    else:\n        for c in range(1, size_bor + 1):\n            if not c % 2:\n                d = ['.'] * size_bor\n                print(''.join(d))\n            else:\n                d = ['.'] * size_bor\n                if nums_rooks:\n                    d[c - 1] = 'R'\n                    nums_rooks -= 1\n                print(''.join(d))", "def fn(n, k):\n    r = 1\n    s = ''\n    while k > 0:\n        if r % 2 != 0:\n            if r != n:\n                s = s + '.' * (r - 1) + 'R' + '.' * (n - r) + '\\n'\n            else:\n                s = s + '.' * (n - 1) + 'R'\n            k = k - 1\n        else:\n            s = s + '.' * n + '\\n'\n        r = r + 1\n    if r < n:\n        s = s + ('.' * n + '\\n') * (n - r)\n        s = s + '.' * n\n        return s\n    elif r == n:\n        s = s + '.' * n\n        return s\n    else:\n        return s\ncost = []\nT = int(input())\nfor i in range(T):\n    (n, k) = input().split()\n    (n, k) = [int(n), int(k)]\n    if k <= (n + 1) / 2:\n        cost = cost + [fn(n, k)]\n    else:\n        cost = cost + ['-1']\nfor i in range(T):\n    print(cost[i])", "t = int(input())\nfor i in range(t):\n    nk = input().split()\n    n = int(nk[0])\n    k = int(nk[1])\n    if 2 * k - 1 > n:\n        print(-1)\n    else:\n        b = ''\n        for i in range(1, n):\n            b += '.'\n        for i in range(n):\n            c = b\n            if i % 2 == 0 and k > 0:\n                c = c[:i] + 'R' + c[i:]\n                k -= 1\n            else:\n                c += '.'\n            print(c)", "for _ in range(int(input())):\n    ans = []\n    (n, k) = map(int, input().split())\n    p = 0\n    ok = True\n    while k > 0:\n        s = ['.'] * n\n        if p % 2 == 1:\n            ans.append(''.join(s))\n            p += 1\n            continue\n        if p < n:\n            s[p] = 'R'\n        else:\n            ok = False\n            print(-1)\n            break\n        p += 1\n        k -= 1\n        ans.append(''.join(s))\n    if ok:\n        for i in ans:\n            print(i)\n        if len(ans) != n:\n            for _ in range(n - len(ans)):\n                print('.' * n)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k << 1 > n + 1:\n        print(-1)\n        continue\n    grid = [['.'] * n for __ in range(n)]\n    for i in range(0, k << 1, 2):\n        grid[i][i] = 'R'\n    print('\\n'.join((''.join(row) for row in grid)))", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = math.ceil(n / 2)\n    if a < k:\n        print(-1)\n    else:\n        x = ['.'] * n\n        for i in range(0, n, 2):\n            if k > 0:\n                x[i] = 'R'\n            print(''.join(x))\n            if i < n - 1:\n                print('.' * n)\n            x[i] = '.'\n            k -= 1", "def solve() -> str:\n    (n, k) = map(int, input().split())\n    if k > n // 2 + n % 2:\n        print(-1)\n    else:\n        for i in range(n):\n            if i % 2 == 1 or not k:\n                print('.' * n)\n            else:\n                print('.' * i + 'R' + '.' * (n - i - 1))\n                k -= 1\n\ndef main() -> None:\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "for i in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    r = 0\n    if n % 2 == 0:\n        if k > int(n / 2):\n            print(-1)\n        else:\n            for i in range(1, n + 1):\n                if i % 2 != 0:\n                    if r == k:\n                        print('.' * n)\n                        continue\n                    print('.' * (i - 1) + 'R' + '.' * (n - i))\n                    r += 1\n                else:\n                    print('.' * n)\n    elif k > int(n / 2) + 1:\n        print(-1)\n    else:\n        for j in range(1, n + 1):\n            if j % 2 != 0:\n                if r == k:\n                    print('.' * n)\n                    continue\n                print('.' * (j - 1) + 'R' + '.' * (n - j))\n                r += 1\n            else:\n                print('.' * n)", "tests = int(input())\nmylist = []\nanotherlist = []\nfor i in range(tests):\n    mylist.append(input().split(' '))\nmystr = ''\nfor item in mylist:\n    n = int(item[0])\n    n2 = int(item[0])\n    k = int(item[1])\n    k2 = int(item[1])\n    if n % 2 != 0:\n        n2 += 1\n    if k > n2 / 2:\n        mystr += '-1\\n'\n    else:\n        for i2 in range(n):\n            if (i2 + 1) % 2 == 0 or k2 <= 0:\n                mystr += '.' * n + '\\n'\n            else:\n                mystr += '.' * i2 + 'R' + '.' * (n - i2 - 1) + '\\n'\n                k2 -= 1\nprint(mystr)", "tests = int(input())\nmylist = []\nfor i in range(tests):\n    mylist.append(input().split(' '))\nmystr = ''\nfor item in mylist:\n    n = int(item[0])\n    n2 = int(item[0])\n    k = int(item[1])\n    k2 = int(item[1])\n    if n % 2 != 0:\n        n2 += 1\n    if k > n2 / 2:\n        mystr += '-1\\n'\n    else:\n        for i2 in range(n):\n            if (i2 + 1) % 2 == 0 or k2 <= 0:\n                mystr += '.' * n + '\\n'\n            else:\n                mystr += '.' * i2 + 'R' + '.' * (n - i2 - 1) + '\\n'\n                k2 -= 1\nprint(mystr)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2 != 0 and k > n // 2 + 1 or (n % 2 == 0 and k > n // 2):\n        print(-1)\n    else:\n        cc = 0\n        cline = 0\n        while k > 0:\n            zz = ['.'] * n\n            if cline % 2 == 0:\n                zz[cc] = 'R'\n                k -= 1\n                cc += 2\n            print(''.join(zz))\n            cline += 1\n        if cline < n:\n            for i in range(abs(cline - n)):\n                print('.' * n)", "t = int(input())\nfor j in range(0, t):\n    (n, k) = map(int, input().split())\n    if n % 2 != 0:\n        if k > n // 2 + 1:\n            print(-1)\n        else:\n            p = []\n            for i in range(0, n):\n                p.append('.')\n            for i in range(0, n):\n                if i % 2 == 0 and k > 0:\n                    p[i] = 'R'\n                    print(''.join(p))\n                    p[i] = '.'\n                    k -= 1\n                else:\n                    print(''.join(p))\n    elif k > n // 2:\n        print(-1)\n    else:\n        p = []\n        for i in range(0, n):\n            p.append('.')\n        for i in range(0, n):\n            if i % 2 == 0 and k > 0:\n                p[i] = 'R'\n                print(''.join(p))\n                p[i] = '.'\n                k -= 1\n            else:\n                print(''.join(p))", "t = int(input())\nfor i in range(t):\n    (n, k) = list(map(int, input().split()))\n    if n % 2 == 0:\n        if n // 2 >= k:\n            for i in range(0, n):\n                if i // 2 + 1 <= k:\n                    if i % 2 == 0:\n                        print('.' * i + 'R' + '.' * (n - i - 1))\n                    else:\n                        print('.' * n)\n                else:\n                    print('.' * n)\n        else:\n            print(-1)\n    elif n // 2 + 1 >= k:\n        for i in range(0, n):\n            if i // 2 + 1 <= k:\n                if i % 2 == 0:\n                    print('.' * i + 'R' + '.' * (n - i - 1))\n                else:\n                    print('.' * n)\n            else:\n                print('.' * n)\n    else:\n        print(-1)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    if (n - 1) // 2 + 1 >= k:\n        for j in range(n):\n            if j % 2 == 0 and k:\n                print('.' * j + 'R' + '.' * (n - j - 1))\n                k -= 1\n            else:\n                print('.' * n)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    (n, k) = list(map(int, input().split()))\n    if n % 2 == 0:\n        if n // 2 >= k:\n            for i in range(0, n):\n                if i // 2 + 1 <= k:\n                    if i % 2 == 0:\n                        print('.' * i + 'R' + '.' * (n - i - 1))\n                    else:\n                        print('.' * n)\n                else:\n                    print('.' * n)\n        else:\n            print(-1)\n    elif n // 2 + 1 >= k:\n        for i in range(0, n):\n            if i // 2 + 1 <= k:\n                if i % 2 == 0:\n                    print('.' * i + 'R' + '.' * (n - i - 1))\n                else:\n                    print('.' * n)\n            else:\n                print('.' * n)\n    else:\n        print(-1)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    if k > (n + 1) // 2:\n        print(-1)\n    else:\n        for i in range(n):\n            if i % 2 == 0 and k != 0:\n                print('.' * i + 'R' + '.' * (n - i - 1))\n                k -= 1\n            else:\n                print('.' * n)\n    t -= 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        if k > n // 2:\n            print(-1)\n            continue\n    elif k > (n + 1) // 2:\n        print(-1)\n        continue\n    cnt = 0\n    for i in range(n):\n        if i % 2 == 0 and cnt < k:\n            pos = 2 * cnt + 1\n            print('.' * (pos - 1) + 'R' + '.' * (n - pos))\n            cnt += 1\n            pass\n        else:\n            print('.' * n)", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_list_string():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\n\ndef get_print_int(x):\n    sys.stdout.write(str(x) + '\\n')\n\ndef get_print(x):\n    sys.stdout.write(x + '\\n')\n\ndef get_print_int_same(x):\n    sys.stdout.write(str(x) + ' ')\n\ndef get_print_same(x):\n    sys.stdout.write(x + ' ')\nfrom sys import maxsize\nfrom math import ceil\n\ndef solve():\n    for _ in range(get_int()):\n        (n, k) = get_ints()\n        if k <= ceil(n / 2):\n            prev = 0\n            while k > 0:\n                get_print('.' * prev + 'R' + '.' * (n - prev - 1))\n                k -= 1\n                if k > 0:\n                    get_print('.' * n)\n                else:\n                    break\n                prev += 2\n            while prev + 1 < n:\n                get_print('.' * n)\n                prev += 1\n        else:\n            get_print_int(-1)\nsolve()", "from sys import stdin\nfrom math import ceil\n\ndef solve():\n    for _ in range(int(stdin.readline().strip())):\n        (n, k) = map(int, stdin.readline().rstrip().split())\n        if k > ceil(n / 2):\n            print(-1)\n            continue\n        cnt = 0\n        for i in range(n):\n            if i % 2 or cnt == k:\n                print('.' * n)\n                continue\n            print('.' * i + 'R' + '.' * (n - i - 1))\n            cnt += 1\nsolve()", "from math import *\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k > (n + 1) // 2:\n        print(-1)\n        continue\n    s = [['.'] * n for _ in range(n)]\n    for i in range(k):\n        s[2 * i][2 * i] = 'R'\n    for j in s:\n        print(''.join(j))", "t = int(input())\nfor i in range(t):\n    (n, k) = input().split()\n    (n, k) = (int(n), int(k))\n    if n % 2 != 0:\n        p = n // 2 + 1\n    elif n % 2 == 0:\n        p = n // 2\n    if k <= p:\n        i = 0\n        while i < n:\n            if i % 2 == 0 and i <= 2 * k - 1:\n                print('.' * i + 'R' + '.' * (n - i - 1))\n                i += 1\n            else:\n                print('.' * n)\n                i += 1\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    (n, rooks) = list(map(int, input().split()))\n    if rooks > (n + 1) // 2:\n        print(-1)\n        continue\n    r = 0\n    for i in range(n):\n        if r == rooks:\n            print(n * '.')\n        elif i % 2 == 0:\n            s = '.' * i + 'R' + (n - 1 - i) * '.'\n            r = r + 1\n            print(s)\n        else:\n            print(n * '.')", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    r = 0\n    arr = list()\n    for i in range(n):\n        string = ['.'] * n\n        if i % 2 == 0 and r < k:\n            string[i] = 'R'\n            r = r + 1\n        arr.append(''.join(string))\n    if r != k:\n        print(-1)\n    else:\n        print('\\n'.join(arr))", "from math import ceil\nt = int(input())\nwhile t != 0:\n    (n, k) = map(int, input().split())\n    if ceil(n / 2) < k:\n        print(-1)\n    else:\n        for i in range(n):\n            if i % 2 == 0 and k != 0:\n                s = '.' * i + 'R' + '.' * (n - i - 1)\n                print(s)\n                k = k - 1\n            else:\n                s = '.' * n\n                print(s)\n    t = t - 1", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    n = (a + 1) // 2\n    if b <= n:\n        i = 0\n        for j in range(a):\n            if i < b and j % 2 == 0:\n                print('.' * j + 'R' + '.' * (a - j - 1))\n                i += 1\n            else:\n                print('.' * a)\n    else:\n        print(-1)", "import sys\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n < 2 * k - 1:\n        sys.stdout.write('-1\\n')\n    else:\n        x = 1\n        k -= 1\n        for row in range(n):\n            line = ['.'] * n\n            if row % 2 == 0 and x:\n                line[x - 1] = 'R'\n                if k > 0:\n                    k -= 1\n                    x += 2\n                else:\n                    x = None\n            sys.stdout.write(f\"{''.join(line)}\\n\")"]