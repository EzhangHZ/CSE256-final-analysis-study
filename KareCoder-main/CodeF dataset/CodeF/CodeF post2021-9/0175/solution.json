["import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    prev = 0\n    i = ans = 0\n    while i < n:\n        if not prev:\n            prev = arr[i]\n        elif prev > arr[i]:\n            ans += 1\n            prev = 0\n        else:\n            prev = arr[i]\n        i += 1\n    return ans\nfor _ in range(int(input())):\n    print(solve())", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    z = 0\n    i = 1\n    while i < N:\n        if A[i] <= A[i - 1]:\n            z += 1\n            i += 1\n        i += 1\n    return z\nfor _ in range(int(input())):\n    print(solve())", "import sys, random, bisect\nfrom collections import deque, defaultdict\nfrom heapq import heapify, heappop, heappush\nfrom itertools import permutations\nfrom math import gcd, log\nMOD = int(1000000000.0 + 7)\nINF = int(1e+20)\ninput = lambda : sys.stdin.readline().rstrip()\nmi = lambda : map(int, input().split())\nli = lambda : list(mi())\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = li()\n    res = 0\n    pre = -1\n    for i in arr:\n        if pre == -1:\n            pre = i\n        elif i < pre:\n            res += 1\n            pre = -1\n        else:\n            pre = i\n    print(res)", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[x > y] for (x, y) in zip(a, a[1:]))).split())))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    w = list(map(int, input().split()))\n    (i, c) = (0, 0)\n    while i < n - 1:\n        if w[i] > w[i + 1]:\n            c += 1\n            i += 1\n        i += 1\n    print(c)", "for v in [*open(0)][2::2]:\n    h = (*map(int, v.split()),)\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[x > y] for (x, y) in zip(h, h[1:]))).split())))", "for a in [*open(0)][2::2]:\n    s = (*map(int, a.split()),)\n    print(sum((len(y) + 1 >> 1 for y in ''.join((' *'[y > x] for (y, x) in zip(s, s[1:]))).split())))", "for x in [*open(0)][2::2]:\n    y = (*map(int, x.split()),)\n    print(sum((len(z) + 1 >> 1 for z in ''.join((' *'[z > a] for (z, a) in zip(y, y[1:]))).split())))", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef countZeros(num):\n    length = num.bit_length()\n    result = 0\n    for i in range(length):\n        if num & 1 << i:\n            break\n        result += 1\n    return result\n\ndef main():\n    for _ in range(inp()):\n        n = inp()\n        nums = inlt()\n        maxVal = 0\n        result = 0\n        for num in nums:\n            if num < maxVal:\n                result += 1\n                maxVal = 0\n            else:\n                maxVal = max(maxVal, num)\n        print(result)\nmain()", "for o in [*open(0)][2::2]:\n    n = (*map(int, o.split()),)\n    print(sum((len(y) + 1 >> 1 for y in ''.join((' *'[y > z] for (y, z) in zip(n, n[1:]))).split())))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[x > y] for (x, y) in zip(a, a[1:]))).split())))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[x > y] for (x, y) in zip(a, a[1:]))).split())))", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "inputt = open(0).read().split('\\n')\nfor tc in range(int(inputt[0])):\n    n = int(inputt[tc * 2 + 1])\n    arr = list(map(int, inputt[tc * 2 + 2].split()))\n    res = 0\n    i = n - 2\n    while i > -1:\n        if arr[i] - arr[i + 1] > 0:\n            i -= 1\n            res += 1\n        i -= 1\n    print(res)", "import atexit, io, os, sys\ninput = lambda : sys.stdin.readline().rstrip()\ninputt = open(0).read().split('\\n')\nfor tc in range(int(inputt[0])):\n    n = int(inputt[tc * 2 + 1])\n    arr = list(map(int, inputt[tc * 2 + 2].split()))\n    res = 0\n    i = n - 2\n    while i > -1:\n        if arr[i] - arr[i + 1] > 0:\n            i -= 1\n            res += 1\n        i -= 1\n    print(res)", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "for str in [*open(0)][2::2]:\n    a = str.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "import sys\ninput = sys.stdin.readline\n\ndef nextInt():\n    return int(input())\n\ndef arrayIn():\n    return list(map(int, input().split()))\n\ndef nextLine():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nt = nextInt()\nwhile t > 0:\n    n = nextInt()\n    arr = arrayIn()\n    ans = 0\n    i = 0\n    while i < n:\n        if i + 1 < n and arr[i] > arr[i + 1]:\n            ans += 1\n            i += 1\n        i += 1\n    print(ans)\n    t -= 1", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().strip().split()))\n    co = 0\n    i = 0\n    while i < n - 1:\n        if l[i] > l[i + 1]:\n            co += 1\n            i += 1\n        i += 1\n    print(co)", "n = int(input())\nfor _ in range(n):\n    s = 0\n    t = int(input())\n    arr = list(map(int, input().split()))\n    i = 0\n    while i < t - 1:\n        if arr[i] > arr[i + 1]:\n            s += 1\n            i += 2\n        else:\n            i += 1\n    print(s)", "t = int(input())\nans = []\nfor j in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    i = 0\n    a = 0\n    while i < n - 1:\n        if l[i + 1] < l[i]:\n            a += 1\n            i += 1\n        i += 1\n    ans.append(a)\nfor i in ans:\n    print(i)", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "import atexit, io, os, sys\nss = io.BytesIO()\n_write = ss.write\nss.write = lambda s: _write(s.encode())\natexit.register(lambda : os.write(1, ss.getvalue()))\ninput = lambda : sys.stdin.readline().rstrip()\ninputt = open(0).read().split('\\n')\nfor tc in range(int(inputt[0])):\n    n = int(inputt[tc * 2 + 1])\n    arr = list(map(int, inputt[tc * 2 + 2].split()))\n    res = 0\n    i = n - 2\n    while i > -1:\n        if arr[i] - arr[i + 1] > 0:\n            i -= 1\n            res += 1\n        i -= 1\n    print(res)", "import atexit, io, os, sys\nss = io.BytesIO()\n_write = ss.write\nss.write = lambda s: _write(s.encode())\natexit.register(lambda : os.write(1, ss.getvalue()))\ninput = lambda : sys.stdin.readline().rstrip()\ninputt = open(0).read().split('\\n')\nfor tc in range(int(inputt[0])):\n    arr = tuple(map(int, inputt[tc * 2 + 2].split()))\n    res = 0\n    i = len(arr) - 2\n    while i > -1:\n        if arr[i] - arr[i + 1] > 0:\n            i -= 1\n            res += 1\n        i -= 1\n    print(res)", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (N, A) = (int(input()), list(map(int, input().split())))\n    c = 0\n    i = 0\n    while i < N - 1:\n        if A[i] > A[i + 1]:\n            c += 1\n            i += 1\n        i += 1\n    print(c)", "import sys\n\ndef rall():\n    return sys.stdin.readlines()\n\ndef rl():\n    return sys.stdin.readline().strip()\n\ndef rl_types(types):\n    str_list = [x for x in sys.stdin.readline().strip().split(' ')]\n    return [types[i](str_list[i]) for i in range(len(str_list))]\n\ndef pr(something=''):\n    sys.stdout.write(str(something) + '\\n')\n\ndef pra(array):\n    sys.stdout.write(' '.join([str(x) for x in array]) + '\\n')\n\ndef solve(array):\n    return array\nNT = int(rl())\nfor ti in range(NT):\n    n = int(rl())\n    array = list(map(int, rl().split(' ')))\n    max_subs = 0\n    last = -1\n    for (i, x) in enumerate(array):\n        if last < 0:\n            start = i\n            last = x\n        elif x > last:\n            start = i\n            last = x\n        elif x < last:\n            if (i - start) % 2 == 0:\n                pass\n            else:\n                max_subs += 1\n            last = -1\n    print(max_subs)", "import sys\nifs = sys.stdin\nofs = sys.stdout\n\ndef numbers_from_line(d=' '):\n    return [int(s) for s in ifs.readline().strip().split(d) if len(s.strip()) > 0]\n\ndef solve(A):\n    inv = 0\n    n = len(A)\n    if n == 1:\n        return 0\n    i = 0\n    while i < n - 1:\n        if A[i] > A[i + 1]:\n            inv += 1\n            i += 1\n        i += 1\n    return inv\nT = int(ifs.readline())\nfor __ in range(T):\n    n = int(ifs.readline())\n    A = numbers_from_line()\n    a = solve(A)\n    ofs.write(str(a))\n    ofs.write('\\n')", "def solve():\n    input()\n    nums = list(map(int, input().split()))\n    s = 0\n    prev_good = True\n    for (a, b) in zip(nums, nums[1:]):\n        if prev_good is False:\n            prev_good = True\n        elif a > b:\n            s += 1\n            prev_good = False\n    print(s)\nn = int(input())\nfor i in range(n):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split(' ')))\n    ans = 0\n    pas = False\n    for i in range(1, n):\n        if pas:\n            pas = False\n            continue\n        if p[i - 1] > p[i]:\n            ans += 1\n            pas = True\n    print(ans)", "n = int(input())\nl2 = []\nfor i in range(n):\n    t = int(input())\n    l = [int(x) for x in input().split()]\n    l2.append(l)\nfor i in l2:\n    c = i[0]\n    s = 0\n    for j in range(len(i)):\n        if i[j] < c:\n            try:\n                c = i[j + 1]\n                s += 1\n            except:\n                s += 1\n        else:\n            c = i[j]\n    print(s)", "def inversions_split(ar):\n    n = len(ar)\n    num_splits = 0\n    ix = 0\n    while ix < n - 1:\n        if ar[ix] > ar[ix + 1]:\n            ix += 1\n            num_splits += 1\n        ix += 1\n    return num_splits\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    ar = list(map(int, input().split(' ')))\n    print(inversions_split(ar))", "import atexit, io, os, sys\nss = io.BytesIO()\n_write = ss.write\nss.write = lambda s: _write(s.encode())\natexit.register(lambda : os.write(1, ss.getvalue()))\ninput = lambda : sys.stdin.readline().rstrip()\ninputt = open(0).read().split('\\n')\nfor tc in range(int(inputt[0])):\n    n = int(inputt[tc * 2 + 1])\n    arr = list(map(int, inputt[tc * 2 + 2].split()))\n    res = 0\n    i = n - 2\n    while i > -1:\n        if arr[i] - arr[i + 1] > 0:\n            i -= 1\n            res += 1\n        i -= 1\n    print(res)", "import atexit, io, os, sys\nss = io.BytesIO()\n_write = ss.write\nss.write = lambda s: _write(s.encode())\natexit.register(lambda : os.write(1, ss.getvalue()))\ninput = lambda : sys.stdin.readline().rstrip()\ninputt = open(0).read().split('\\n')\nfor tc in range(int(inputt[0])):\n    arr = tuple(map(int, inputt[tc * 2 + 2].split()))\n    res = 0\n    i = len(arr) - 2\n    while i > -1:\n        if arr[i] - arr[i + 1] > 0:\n            i -= 1\n            res += 1\n        i -= 1\n    print(res)", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 0\n    ans = 0\n    while i < n - 1:\n        if a[i] > a[i + 1]:\n            i += 1\n            ans += 1\n        i += 1\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    jump = 1\n    number_of_inversions = 0\n    i = 0\n    while i < n - 1:\n        if a[i] > a[i + 1]:\n            number_of_inversions += 1\n            i = i + 2\n        else:\n            i += 1\n    print(number_of_inversions)", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "t = int(input())\nres = [0] * t\nfor i in range(t):\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    j = 1\n    while j < n:\n        if list1[j] < list1[j - 1]:\n            res[i] += 1\n            j += 2\n        else:\n            j += 1\nfor i in res:\n    print(i)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    count = 0\n    i = 0\n    while i < n - 1:\n        if arr[i] > arr[i + 1]:\n            count += 1\n            i += 1\n        i += 1\n    print(count)", "def main():\n    tc = int(input())\n    for _ in range(tc):\n        n = int(input())\n        arr = [int(a) for a in input().split()]\n        i = 0\n        ans = 0\n        while i < n - 1:\n            if arr[i] > arr[i + 1]:\n                i += 1\n                ans += 1\n            i += 1\n        print(ans)\nmain()", "T = int(input())\nwhile T:\n    N = int(input())\n    li = list(map(int, input().split()))\n    curr_min = None\n    ans = 0\n    for ele in li:\n        if curr_min:\n            if curr_min > ele:\n                ans += 1\n                curr_min = None\n            else:\n                curr_min = ele\n        else:\n            curr_min = ele\n    print(ans)\n    T -= 1", "def solve():\n    if n == 1:\n        return 0\n    count = 0\n    curr_max = arr[0]\n    for i in range(1, n):\n        if curr_max == -1:\n            curr_max = arr[i]\n            continue\n        if curr_max > arr[i]:\n            count += 1\n            curr_max = -1\n        else:\n            curr_max = arr[i]\n    return count\nT = int(input())\nfor t in range(T):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = solve()\n    print(ans)", "def per():\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    i = 0\n    j = 1\n    while j < n:\n        if l[i] > l[j]:\n            c += 1\n            i = i + 2\n            j = j + 2\n        else:\n            i = i + 1\n            j = j + 1\n    print(c)\nt = int(input())\nwhile t:\n    per()\n    t = t - 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    res = 0\n    i = 0\n    while i < n - 1:\n        if arr[i] > arr[i + 1]:\n            res += 1\n            i += 2\n        else:\n            i += 1\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    count = 0\n    i = 0\n    while i <= n - 2:\n        if a[i] > a[i + 1]:\n            count += 1\n            i += 2\n        else:\n            i += 1\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    i = 0\n    ans = 0\n    while i < n - 1:\n        if arr[i] > arr[i + 1]:\n            i += 2\n            ans += 1\n        else:\n            i += 1\n    print(ans)", "for q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 0\n    r = 0\n    while i < n - 1:\n        if a[i] > a[i + 1]:\n            r += 1\n            i += 1\n        i += 1\n    print(r)", "def func():\n    n = int(input())\n    l = input().split(' ')\n    l = [int(i) for i in l]\n    i = 0\n    c1 = 0\n    while i < n - 1:\n        if l[i] > l[i + 1]:\n            c1 += 1\n            i += 2\n        else:\n            i += 1\n    return c1\nt = int(input())\nfor i in range(t):\n    ans = func()\n    print(ans)", "aws = []\nT = int(input())\nfor i in range(T):\n    n = int(input())\n    l = list(map(int, input().split()))[:n]\n    c = 0\n    j = 0\n    while len(l) - 1 > j:\n        if l[j] > l[j + 1]:\n            j += 2\n            c += 1\n        else:\n            j += 1\n    aws.append(c)\nfor i in aws:\n    print(i)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    j = 0\n    while j < n - 1:\n        if a[j] > a[j + 1]:\n            c += 1\n            j += 2\n        else:\n            j += 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = 0\n    count = 0\n    while x <= n - 2:\n        if l[x] > l[x + 1]:\n            count += 1\n            x += 2\n        else:\n            x += 1\n    print(count)", "t = int(input())\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    c = 0\n    i = 1\n    while i < n:\n        if arr[i] < arr[i - 1]:\n            c += 1\n            i += 2\n        else:\n            i += 1\n    print(c)\n    t -= 1", "def main():\n    cas = int(input())\n    for _ in range(cas):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        cnt = 0\n        i = 0\n        while i < n - 1:\n            if arr[i] > arr[i + 1]:\n                cnt = cnt + 1\n                i = i + 2\n            else:\n                i = i + 1\n        print(cnt)\nmain()", "def check(arr):\n    count = 0\n    n1 = len(arr)\n    i = 1\n    while i < n1:\n        j = i\n        while j < n1 and arr[j] >= arr[j - 1]:\n            j += 1\n        if j >= n1:\n            break\n        count += 1\n        i = j + 2\n    return count\nn = int(input())\nfor i in range(n):\n    s = int(input())\n    ar = list(map(int, input().split()))\n    print(check(ar))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = 0\n    ans = 0\n    for i in l:\n        if i > m:\n            m = i\n        else:\n            ans += 1\n            m = 0\n    print(ans)", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = 0\n    i = 1\n    while i < n:\n        if a[i] < a[i - 1]:\n            b += 1\n            i += 1\n        i += 1\n    print(b)", "def solve():\n    n = int(input())\n    p = [int(i) for i in input().split()]\n    res = 0\n    i = 0\n    while i + 1 < n:\n        if p[i] > p[i + 1]:\n            res += 1\n            i += 1\n        i += 1\n    print(res)\nt = int(input())\nwhile t > 0:\n    t -= 1\n    solve()", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "t = int(input())\n\ndef solve():\n    x = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    i = 0\n    while i < len(arr) - 1:\n        if arr[i] > arr[i + 1]:\n            ans += 1\n            i += 2\n        else:\n            i += 1\n    print(ans)\nfor i in range(t):\n    solve()", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "for j in range(0, int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    i = 0\n    while i < n - 1:\n        if l[i] > l[i + 1]:\n            ans += 1\n            i += 1\n        i += 1\n    print(ans)", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((len(x) + 1 >> 1 for x in ''.join((' *'[int(x) > int(y)] for (x, y) in zip(a, a[1:]))).split())))", "t = int(input())\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    i = 0\n    while i < n - 1:\n        if arr[i + 1] < arr[i]:\n            i += 2\n            ans += 1\n        else:\n            i += 1\n    print(ans)\nwhile t:\n    solve()\n    t -= 1", "for _ in range(0, int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    count = 0\n    i = 0\n    while i < n - 1:\n        if ar[i] > ar[i + 1]:\n            count += 1\n            i += 2\n        else:\n            i += 1\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    i = 0\n    c = 0\n    while i < n - 1:\n        if l[i] > l[i + 1]:\n            i = i + 2\n            c = c + 1\n        else:\n            i = i + 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    i = n - 1\n    while i > 0:\n        if l[i] < l[i - 1]:\n            ans += 1\n            i -= 2\n        else:\n            i -= 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 1\n    c = 0\n    while i < n:\n        if a[i] < a[i - 1]:\n            c += 1\n            i += 2\n        else:\n            i += 1\n    print(c)", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    for i in a:\n        if (s - i) / (n - 1) == i:\n            return 'YES'\n    return 'NO'\n\ndef sol():\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    i = 0\n    while i < n - 1:\n        if a[i] > a[i + 1]:\n            ans += 1\n            i += 1\n        i += 1\n    return ans\nfor _ in range(int(input())):\n    print(sol())", "def main():\n    cases = int(input())\n    for _ in range(cases):\n        n = int(input())\n        arr = [int(x) for x in input().split()]\n        ans = 0\n        i = 0\n        while i < n - 1:\n            if arr[i] > arr[i + 1]:\n                ans += 1\n                i += 1\n            i += 1\n        print(ans)\nmain()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    p = list(map(int, input().split()))\n    count = 0\n    j = 0\n    while j < n - 1:\n        if p[j] > p[j + 1]:\n            count += 1\n            j += 1\n        j += 1\n    print(count)", "def solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    cnt = 0\n    mx = arr[0]\n    i = 1\n    while i < n:\n        if mx > arr[i]:\n            cnt += 1\n            if i != n - 1:\n                mx = arr[i + 1]\n            i += 2\n        else:\n            mx = max(mx, arr[i])\n            i += 1\n    print(cnt)\n    return\nt = int(input())\nwhile t:\n    t -= 1\n    solve()", "def li():\n    return list(map(int, input().split()))\n\ndef mi(n):\n    return [list(map(int, input().split())) for _ in range(n)]\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = li()\n    i = 0\n    ans = 0\n    while i < n - 1:\n        j = i + 1\n        if l[i] > l[j]:\n            ans += 1\n            i = j + 1\n        else:\n            i = j\n    print(ans)"]