["def main():\n    i = int(input())\n    for _ in range(i):\n        n = int(input().strip('\\r\\n'))\n        arr = [int(x) for x in input().split()]\n        for idx in range(n):\n            s = input().strip('\\r\\n').split()[1]\n            ups = s.count('D') - s.count('U')\n            arr[idx] = (arr[idx] + ups) % 10\n        print(' '.join([str(x) for x in arr]))\nmain()", "def solve():\n    N = int(input())\n    a = list(map(int, input().split()))\n    for i in range(N):\n        (_, s) = input().split()\n        s = reversed(s)\n        for x in s:\n            if x == 'D':\n                a[i] = (a[i] + 1 + 10) % 10\n            else:\n                a[i] = (a[i] - 1 + 10) % 10\n    print(*a)\nT = int(input())\nfor _ in range(T):\n    solve()", "t = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(n):\n        (s, t) = input().split()\n        a[i] = (a[i] + t.count('D') - t.count('U')) % 10\n    print(*a)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    for i in range(n):\n        (x, s) = input().split()\n        lst[i] += s.count('D')\n        lst[i] %= 10\n        lst[i] -= s.count('U')\n        lst[i] = (lst[i] % 10 + 10) % 10\n    print(*lst)", "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    for i in range(n):\n        (length, s) = list(input().split())\n        length = int(length)\n        move = length - 2 * s.count('U')\n        lis[i] += move\n        lis[i] %= 10\n    print(*lis)", "import math\nints = lambda : list(map(int, input().split()))\nalpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nmx = 10 ** 5\ninp = lambda : int(input())\n\ndef cipher():\n    n = inp()\n    a = ints()\n    arr = []\n    for i in range(n):\n        (nmoves, moves) = input().split()\n        add = moves.count('D') - moves.count('U')\n        arr.append((a[i] + add) % 10)\n    print(*arr)\nfor _ in range(inp()):\n    cipher()", "fptr = open(0)\nfor _ in range(int(next(fptr))):\n    n = int(next(fptr))\n    a = list(map(int, next(fptr).split()))\n    for i in range(n):\n        (n1, s) = next(fptr).split()\n        count = 0\n        count += s.count('D')\n        count -= s.count('U')\n        a[i] += count\n        if a[i] > 9 or a[i] < 0:\n            a[i] %= 10\n    for i in a:\n        print(i, end=' ')\n    print()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    finals = [int(w) for w in input().split()]\n    for j in range(n):\n        dir = input().split()[1]\n        finals[j] = str((finals[j] + dir.count('D') - dir.count('U')) % 10)\n    print(' '.join(finals))", "for t in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    for j in range(n):\n        B = input().split()[1]\n        a = B.count('U')\n        b = B.count('D')\n        if a == b:\n            A[j] = str(A[j])\n        elif a > b:\n            x = a - b\n            A[j] = str((10 - x + A[j]) % 10)\n        else:\n            x = b - a\n            A[j] = str((x + A[j]) % 10)\n    print(' '.join(A))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    last_numbers = list(map(int, input().split()))\n    first_numbers = list()\n    for j in range(n):\n        (b, b_str) = input().split()\n        b = int(b)\n        U_number = len(b_str.replace('D', ''))\n        D_number = b - U_number\n        first_numbers.append((last_numbers[j] - U_number + D_number) % 10)\n    print(*first_numbers)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(n):\n        p = input().split()\n        a[i] = (a[i] + p[1].count('D') - p[1].count('U')) % 10\n    print(*a)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    for i in range(n):\n        (x, y) = input().split()\n        D = y.count('D')\n        U = y.count('U')\n        b.append(D - U)\n    for (x, y) in zip(a, b):\n        print((10 + x + y) % 10, end=' ')\n    print()", "n = int(input())\nfor _ in range(n):\n    _ = input()\n    digits = input().strip().split()\n    for i in range(len(digits)):\n        line = input().split()[1]\n        v = 0\n        for c in line:\n            if c == 'D':\n                v += 1\n            else:\n                v -= 1\n        digits[i] = str((int(digits[i]) + v) % 10)\n    print(' '.join(digits))", "for i in range(int(input())):\n    n = int(input())\n    num = list(map(int, input().split()))\n    answer = []\n    for j in range(n):\n        xs = input().split()\n        com = xs[1]\n        k = int(xs[0])\n        d = com.count('D')\n        answer.append((num[j] + 2 * d - k) % 10)\n    print(*answer)", "for _ in range(int(input())):\n    n = int(input())\n    f = list(map(int, input().split()))\n    v = []\n    for i in range(n):\n        l = input().split()\n        a = l[1]\n        u = a.count('U')\n        d = a.count('D')\n        v.append((f[i] + d - u) % 10)\n    print(*v)", "t = int(input())\nfor b in range(t):\n    wheels = int(input())\n    combo = [int(x) for x in input().split()]\n    ans = ''\n    for w in range(wheels):\n        move = input()\n        uMoves = move.count('U')\n        dMoves = move.count('D')\n        res = combo[w] + uMoves * -1 + dMoves\n        res = res % 10\n        ans += str(res) + ' '\n    print(ans[:-1])", "for i in range(int(input())):\n    n = int(input())\n    lst = [int(x) for x in input().split()]\n    ans = []\n    for j in range(n):\n        (wq, s) = input().split()\n        ans.append(str((lst[j] + s.count('D') - s.count('U')) % 10))\n    print(' '.join(ans))", "n0 = int(input())\nfor ncase in range(1, n0 + 1):\n    n = int(input())\n    a = [int(s) for s in input().split(' ')]\n    for i in range(n):\n        (bi, b) = input().split(' ')\n        t = 0\n        for j in b:\n            if j == 'D':\n                t += 1\n            else:\n                t -= 1\n        a[i] = (a[i] + t) % 10\n    print(' '.join([str(i) for i in a]))", "def decrement(n):\n    if n == 0:\n        return 9\n    return n - 1\n\ndef increment(n):\n    if n == 9:\n        return 0\n    return n + 1\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    numbers = list(map(int, input().split()))\n    for j in range(n):\n        (m, moves) = input().split()\n        for ch in moves:\n            if ch == 'D':\n                numbers[j] = increment(numbers[j])\n            else:\n                numbers[j] = decrement(numbers[j])\n    numbers = map(str, numbers)\n    print(' '.join(numbers))", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(lambda x: int(x), input().split()))\n    for i in range(n):\n        (counter, povoroti) = input().split()\n        Dcount = povoroti.count('D')\n        Ucount = povoroti.count('U')\n        Newcount = Dcount - Ucount\n        oldznak = lst[i]\n        newznak = oldznak + Newcount\n        while newznak > 9:\n            newznak -= 10\n        while newznak < 0:\n            newznak += 10\n        lst[i] = str(newznak)\n    print(' '.join(lst))", "def main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        values = [int(j) for j in input().split(' ')]\n        for j in range(n):\n            (length, sequence) = [k for k in input().split(' ')]\n            action = 0\n            for val in sequence:\n                if val == 'D':\n                    action += 1\n                else:\n                    action -= 1\n            action %= 10\n            values[j] += action\n            values[j] %= 10\n        print(' '.join((str(j) for j in values)))\nmain()", "def nrs(nr1, nr2):\n    if nr1 + nr2 > 9:\n        return nr1 + nr2 - 10\n    elif nr1 + nr2 < 0:\n        return nr1 + nr2 + 10\n    else:\n        return nr1 + nr2\nfor i in range(int(input())):\n    nr = int(input())\n    dials = list(map(int, input().split(' ')))\n    m = []\n    for j in range(nr):\n        (nr_of_moves, moves) = input().split(' ')\n        (nr_of_moves, moves) = (int(nr_of_moves), list(moves))\n        moves = sum(list(map(lambda x: -1 if x == 'U' else 1, moves)))\n        m.append(moves)\n    ans = [nrs(x, y) for (x, y) in zip(dials, m)]\n    print(' '.join([str(x) for x in ans]))", "for _ in range(int(input())):\n    n = int(input())\n    arr = input().split()\n    for i in range(n):\n        (m, s) = input().split()\n        (u, d) = (s.count('U'), s.count('D'))\n        arr[i] = str((int(arr[i]) + d - u) % 10)\n    print(' '.join(arr))", "t = int(input())\n\ndef kamla(num, actionx):\n    for action in actionx:\n        if action == 'D':\n            if num == 9:\n                num = 0\n            else:\n                num += 1\n        elif num == 0:\n            num = 9\n        else:\n            num -= 1\n    return num\nfor i in range(t):\n    result = []\n    clicks = []\n    n = int(input())\n    wheels = list(map(int, input().split()))\n    for k in range(n):\n        s = input()\n        s = s.split(' ')\n        clicks.append(s)\n    ind = 0\n    while ind < n:\n        x = kamla(wheels[ind], clicks[ind][1])\n        result.append(x)\n        ind += 1\n    result = ' '.join(map(str, result))\n    print(result)", "def fun(seq_list, final_list):\n    empty_list = []\n    for i in range(len(seq_list)):\n        count_of_d_plus = seq_list[i].upper().count('D')\n        count_of_u_min = seq_list[i].upper().count('U')\n        empty_list.append((int(final_list[i]) + count_of_d_plus - count_of_u_min) % 10)\n    print(' '.join((str(e) for e in empty_list)))\nfor i in range(int(input())):\n    my_input = int(input())\n    final_list = input().split()\n    seq_list = []\n    for i in range(my_input):\n        my_list = input().split()\n        seq_list.append(my_list[1])\n    fun(seq_list, final_list)", "T = int(input())\nt = {'D': -1, 'U': 1}\nfor _ in range(T):\n    rings = int(input())\n    values = list(map(int, input().split()))\n    for i in range(rings):\n        (times, dirs) = input().split()\n        times = int(times)\n        values[i] = (values[i] + (dirs.count('U') - dirs.count('D')) * -1) % 10\n    print(' '.join(map(str, values)))", "t = int(input())\nfor i in range(1, t + 1):\n    n = int(input())\n    a = input()\n    o = ''\n    for j in range(n):\n        s = input()\n        o += str((int(a[2 * j]) - s.count('U') + s.count('D')) % 10) + ' '\n    print(o)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    for i in range(n):\n        pattern = input()\n        d_count = pattern[2:].count('D')\n        u_count = pattern[2:].count('U')\n        ans = d_count - u_count\n        ans = ans + a[i]\n        b.append(ans % 10)\n    print(*b)", "t = int(input())\nfor r in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = ''\n    for i in range(n):\n        (n, s) = input().split()\n        d = s.count('D') % 10\n        u = s.count('U') % 10\n        if d > u:\n            d = d - u\n            ans += str((a[i] + d) % 10) + ' '\n        else:\n            u = u - d\n            ans += str((a[i] - u) % 10) + ' '\n    print(ans)", "def after_rotation(number, stri, b):\n    for i in stri:\n        if i == 'D':\n            number += 1\n        elif i == 'U':\n            number -= 1\n    pre_value = number % 10\n    return pre_value\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    numbers = list(map(int, input().split(' ')))\n    answer_string = ''\n    for i in range(n):\n        (b, s) = input().split(' ')\n        b = int(b)\n        value = after_rotation(numbers[i], s, b)\n        answer_string += str(value) + ' '\n    print(answer_string)\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    for i in range(n):\n        (a, b) = input().split()\n        a = int(a)\n        for j in range(a):\n            if b[j] == 'U':\n                l[i] = (l[i] - 1) % 10\n            else:\n                l[i] = (l[i] + 1) % 10\n    print(' '.join(list(map(str, l))))", "t = int(input())\n\ndef logic(x, curr):\n    rem = x % 10\n    curr += rem\n    if curr > 9:\n        ans = curr - 10\n        return ans\n    if curr < 0:\n        ans = curr + 10\n        return ans\n    return curr\nfor test in range(t):\n    reels = int(input())\n    final = list(map(int, input().split()))\n    breaked = ''\n    for i in range(reels):\n        curr = final[i]\n        (step, code) = input().split()\n        step = int(step)\n        (d, u) = (code.count('D'), code.count('U'))\n        x = d - u\n        if x == 0:\n            ans = curr\n        else:\n            ans = logic(x, curr)\n        digit = str(curr + ans)\n        breaked += str(ans) + ' '\n    print(breaked)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    init_num = list(map(int, input().split()))\n    for j in range(len(init_num)):\n        (cnt, move) = input().split()\n        for k in move:\n            if k == 'D':\n                init_num[j] = (init_num[j] + 1) % 10\n            else:\n                init_num[j] = (init_num[j] - 1) % 10\n    print(' '.join(list(map(str, init_num))))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arrabc = list(map(int, input().split()))\n    thestr = []\n    for q in range(n):\n        (k, j) = map(str, input().split())\n        u = j.count('U')\n        d = j.count('D')\n        ud = u - d\n        if ud > 0:\n            c = arrabc[q] - ud\n            if c < 0:\n                c += 10\n            thestr.append(str(c))\n        elif ud < 0:\n            c = arrabc[q] + abs(ud)\n            if c >= 10:\n                c -= 10\n            thestr.append(str(c))\n        elif ud == 0:\n            c = arrabc[q]\n            thestr.append(str(c))\n    print(' '.join(thestr))", "def main():\n    n = int(input())\n    d = [int(p) for p in input().split()]\n    for pos in range(n):\n        (_, ops) = input().split()\n        cnt = 0\n        for op in ops:\n            cnt += 1 if op == 'D' else -1\n        cnt = (cnt + 10) % 10\n        d[pos] = (d[pos] + cnt) % 10\n    for j in d:\n        print(j, end=' ')\n    print()\nt = int(input())\nfor i in range(t):\n    main()", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    for i in range(n):\n        (b, s) = input().split()\n        arr[i] = (arr[i] + int(b) - 2 * s.count('U')) % 10\n    print(*arr)", "for i in range(int(input())):\n    s = int(input())\n    k = list(map(int, input().split()))\n    for j in range(s):\n        a = input().split()\n        x = len(a[1].replace('D', ''))\n        y = len(a[1].replace('U', ''))\n        if x > y:\n            v = x - y\n            if v > k[j]:\n                k[j] = (k[j] - v % 10 + 10) % 10\n            else:\n                k[j] = k[j] - v % 10\n        else:\n            v = y - x\n            k[j] = (k[j] + v) % 10\n    for j in range(s):\n        print(k[j], end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(n):\n        (b, s) = input().split()\n        a[i] = (a[i] - s.count('U') + s.count('D')) % 10\n    print(' '.join(map(str, a)))", "for times in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    for i in range(n):\n        val = input().split()[1]\n        arr[i] = (arr[i] + val.count('D') - val.count('U')) % 10\n    print(*arr)", "for times in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    for i in range(n):\n        val = input().split()[1]\n        arr[i] = (arr[i] + val.count('D') - val.count('U')) % 10\n    print(*arr)", "def solution(tc):\n    result = []\n    for i in range(tc):\n        w = int(input())\n        o = [int(x) for x in input().split()]\n        rr = []\n        for j in range(w):\n            l = input()\n            d = l.count('D')\n            u = l.count('U')\n            t = d - u\n            r = o[j] + t\n            rr.append(str(r % 10))\n        result.append(' '.join(rr))\n    for m in result:\n        print(m)\nsolution(int(input()))", "T = int(input())\nout = []\nfor i in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    for j in range(N):\n        (b, s) = input().split()\n        D = s.count('D')\n        U = s.count('U')\n        A[j] += D - U\n        A[j] %= 10\n    out.append(A)\nfor o in out:\n    print(*o)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for j in range(n):\n        b = input().split()\n        y = b[1].count('D')\n        x = b[1].count('U')\n        a[j] = a[j] + y - x\n        if a[j] > 9:\n            a[j] = a[j] % 10\n        elif a[j] < 0:\n            a[j] = (10 - -a[j] % 10) % 10\n    print(*a)", "import sys\nncases = int(input())\n\ndef solve():\n    n = int(input())\n    w = [int(x) for x in input().split(' ')]\n    moves = [input().split(' ') for x in range(n)]\n    data = [(w[x], moves[x][0], moves[x][1]) for x in range(n)]\n    step = []\n    for x in data:\n        m = 0\n        for y in x[2]:\n            m += 1 if y == 'U' else -1\n        step.append(str((x[0] - m) % 10))\n    res.append(' '.join(step))\nres = []\nfor x in range(ncases):\n    solve()\n[print(n) for n in res]", "for _ in range(int(input())):\n    n = int(input())\n    state = list(map(int, input().split()))\n    for i in range(n):\n        commands = input().split()[1]\n        reminder = (state[i] + commands.count('D') - commands.count('U')) % 10\n        state[i] = reminder if reminder >= 0 else 10 - reminder\n    print(*state)", "x = int(input())\nfor jj in range(x):\n    n = int(input())\n    arr = [int(i) for i in input().split(' ')]\n    for i in range(n):\n        (a, b) = input().split(' ')\n        arr[i] = str((arr[i] + b.count('D') - b.count('U')) % 10)\n    print(' '.join(arr))", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    current = list(map(int, input().split()))\n    for i in range(n):\n        (b, s) = input().split()\n        temp = s.count('D')\n        change = abs(int(b) - temp - temp)\n        if int(b) - temp > temp:\n            if change > current[i]:\n                current[i] = 10 - (change - current[i])\n            else:\n                current[i] = current[i] - change\n        elif change + current[i] <= 9:\n            current[i] = current[i] + change\n        else:\n            current[i] = change + current[i] - 10\n    for i in current:\n        print(i, end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    for i in range(len(arr)):\n        el = arr[i]\n        (numb, seq) = input().split()\n        numb = int(numb)\n        seq = list(seq)\n        cnt_up = seq.count('U')\n        cnt_down = len(seq) - cnt_up\n        cnt = cnt_down - cnt_up\n        el = (10 + el + cnt) % 10\n        arr[i] = el\n    print(*arr)", "import math\nfrom collections import Counter\nimport sys\n\ndef get_ints():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef solve(arr, ajj):\n    for i in range(len(arr)):\n        a = ajj[i].count('U')\n        b = ajj[i].count('D')\n        if a == b:\n            continue\n        if a < b:\n            arr[i] = (arr[i] + (b - a)) % 10\n        else:\n            arr[i] = (arr[i] + 10 - (a - b)) % 10\n    return arr\nt = int(input())\nfor _ in range(t):\n    n = get_ints()\n    arr = get_ints()\n    ajj = []\n    for i in range(n[0]):\n        s1 = get_string().split()\n        b = s1[1]\n        ajj.append(b)\n    print(*solve(arr, ajj))", "n = int(input())\nfor i in range(n):\n    k = int(input())\n    wheels = [int(i) for i in input().split()]\n    for j in range(k):\n        (step, move) = input().split()\n        down = move.count('D')\n        up = move.count('U')\n        sub = down - up\n        wheels[j] += sub\n        if wheels[j] < 0:\n            wheels[j] += 10\n        elif wheels[j] > 9:\n            wheels[j] -= 10\n    print(*wheels)", "for _ in range(int(input())):\n    n = int(input())\n    digs = [int(i) for i in input().split()]\n    for i in range(n):\n        (ops, moves) = input().split()\n        ops = int(ops)\n        ups = 0\n        downs = 0\n        for move in moves:\n            if move == 'U':\n                ups += 1\n            else:\n                downs += 1\n        digs[i] -= ups\n        digs[i] += downs\n        digs[i] = digs[i] % 10\n    print(' '.join([str(i) for i in digs]))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    code = [0] * n\n    for _ in range(n):\n        (a, b) = map(str, input().split())\n        u = b.count('U')\n        d = b.count('D')\n        plus = d - u\n        a = l[_]\n        a += plus\n        while a > 9:\n            a = a % 10\n        while a < 0:\n            a += 10\n        l[_] = a\n    print(*l)", "for _ in range(int(input().strip())):\n    n = int(input())\n    w = list(map(int, input().split()))\n    a = []\n    for i in range(n):\n        b = input().split()\n        c = b[-1].count('D') - b[-1].count('U')\n        a.append((w[i] + c + 10) % 10)\n    print(*a)", "a = int(input())\nfor i in range(a):\n    b = int(input())\n    c = list(map(int, input().split()))\n    not_ans = []\n    for j in range(len(c)):\n        inp = str(input())\n        inp2 = inp.split(' ')\n        inp2.pop(0)\n        samplestr = ''\n        for x in inp2:\n            samplestr += x\n        for k in samplestr:\n            if k == 'D':\n                if c[j] == 9:\n                    c[j] = 0\n                else:\n                    c[j] += 1\n            elif k == 'U':\n                if c[j] == 0:\n                    c[j] = 9\n                else:\n                    c[j] -= 1\n        not_ans.append(str(c[j]))\n    ans = ''\n    for l in not_ans:\n        xy = l + ' '\n        ans += xy\n    print(ans[:-1])", "for _ in range(int(input())):\n    n = int(input())\n    s = [int(x) for x in input().split()]\n    moves = []\n    change = []\n    for x in range(n):\n        moves.append(input().split()[1])\n    for x in range(n):\n        s[x] = s[x] + (moves[x].count('D') - moves[x].count('U'))\n        if s[x] > 9:\n            s[x] = s[x] - 9 - 1\n        elif s[x] < 0:\n            s[x] = 9 + s[x] + 1\n    print(*s)", "def rev(op, num):\n    for c in op[::-1]:\n        if c == 'U':\n            if num == 0:\n                num = 9\n            else:\n                num -= 1\n        elif num == 9:\n            num = 0\n        else:\n            num += 1\n    return num\n\ndef solve(fw, ops, n):\n    ans = []\n    for i in range(n):\n        cur = rev(ops[i], fw[i])\n        ans.append(cur)\n    return ' '.join(map(str, ans))\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        s = input().split()\n        fw = list(map(int, s))\n        ops = []\n        for i in range(n):\n            s = input().split()\n            ops.append(s[1])\n        res = solve(fw, ops, n)\n        print(res)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = []\n    for i in range(n):\n        (nn, ss) = input().split()\n        s = sum([1 if j == 'U' else -1 for j in ss])\n        ans.append((a[i] - s) % 10)\n    print(' '.join([str(j) for j in ans]))", "def problem():\n    lSize = int(input())\n    finalCombination = list(map(int, input().split()))\n    ans = []\n    for ele in finalCombination:\n        (n, steps) = input().split()\n        n = int(n)\n        steps = list(steps)\n        for step in steps:\n            if step == 'D':\n                ele = ele + 1\n                if ele == 10:\n                    ele = 0\n            else:\n                ele = ele - 1\n                if ele == -1:\n                    ele = 9\n        ans.append(ele)\n    for ele in ans:\n        print(ele, end=' ')\n    print()\n    return\nt = int(input())\nwhile t:\n    problem()\n    t = t - 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for (i, x) in enumerate(a):\n        (_, s) = input().split()\n        a[i] = (x + s.count('D') - s.count('U')) % 10\n    print(*a)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a1 = a\n    for i in range(0, n):\n        h = input().split()\n        c = h[1]\n        d = c.count('D') % 10\n        u = c.count('U') % 10\n        a1[0] += d - u\n        a[i] = a1[0] % 10\n        a1 = a1[1:]\n    print(*a)", "count = int(input())\nfor i in range(count):\n    input()\n    spisok = input().split()\n    for c in range(len(spisok)):\n        text = input().split()\n        s = 0\n        for o in text[1]:\n            if o == 'U':\n                s -= 1\n            elif o == 'D':\n                s += 1\n        result = (int(spisok[c]) + s) % 10\n        if result < 0:\n            result = 10 + result\n        spisok[c] = str(result)\n    print(' '.join(spisok))", "t = int(input())\nanswer = [None] * t\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for j in range(n):\n        (_, b) = input().split()\n        for r in reversed(b):\n            if r == 'D':\n                a[j] += 1\n            else:\n                a[j] -= 1\n        a[j] %= 10\n        if a[j] < 0:\n            a[j] = 10 - a[j]\n    answer[i] = a\nfor item in answer:\n    print(*item)", "import math\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = []\n    for i in range(n):\n        (n1, s) = input().split()\n        ucount = s.count('U')\n        dcount = s.count('D')\n        a = ucount - dcount\n        if a <= 0:\n            ans.append(abs(abs(a) + l[i]) % 10)\n        else:\n            val = l[i] - a\n            if math.ceil(val / 10) <= 1:\n                ans.append(val % 10)\n            else:\n                ans.append(10 - val)\n    print(*ans)", "for _ in ' ' * int(input()):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    for j in range(n):\n        (a, b) = input().split()\n        a = int(a)\n        b = list(b)\n        for i in b:\n            if i == 'U':\n                if ar[j] == 0:\n                    ar[j] = 9\n                else:\n                    ar[j] -= 1\n            elif ar[j] == 9:\n                ar[j] = 0\n            else:\n                ar[j] += 1\n    print(*ar)", "for _ in range(int(input())):\n    n = int(input())\n    y = list(map(int, input().split()))\n    results = []\n    for i in range(n):\n        (a, b) = input().split()\n        e = b.count('D') - b.count('U')\n        results.append((y[i] + e) % 10)\n    print(*results)", "def scroll(A, n):\n    for i in range(int(n)):\n        (k, M) = input().split()\n        for x in M:\n            if x == 'D':\n                A[i] = (A[i] + 1) % 10\n            elif x == 'U' and A[i] == 0:\n                A[i] = 9\n            else:\n                A[i] -= 1\n    print(*A)\nfor _ in range(int(input())):\n    n = int(input())\n    A = [int(x) for x in input().split()]\n    scroll(A, n)", "for times in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    for i in range(n):\n        val = input().split()[1]\n        arr[i] = (arr[i] + val.count('D') - val.count('U')) % 10\n    print(*arr)", "for i in range(int(input())):\n    n = int(input())\n    lst = [int(i) for i in input().split()]\n    for i in range(len(lst)):\n        x = input()\n        (a, b) = x.split(' ')\n        lstt1 = []\n        lstt2 = []\n        for j in b:\n            if j == 'U':\n                lstt1.append(j)\n            elif j == 'D':\n                lstt2.append(j)\n        xor = lst[i] + len(lstt2)\n        lst[i] = xor\n        xrr = lst[i] - len(lstt1)\n        lst[i] = xrr\n    for i in lst:\n        if i > 9:\n            i -= 10\n        elif i < 0:\n            i += 10\n        print(i, end=' ')\n    print()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = map(int, input().split())\n    l = list(a)\n    for j in range(n):\n        b = input()\n        lb = list(b)\n        fd = lb.count('D')\n        fu = lb.count('U')\n        d = fu - fd\n        l[j] = l[j] - d\n        if l[j] >= 10:\n            l[j] = l[j] - 10\n        if l[j] < 0:\n            l[j] = l[j] + 10\n    print(*l)", "t = int(input())\n\ndef solve(s, e):\n    earr = [char for char in e]\n    for ele in earr:\n        if ele == 'D':\n            if s == 9:\n                s = 0\n            else:\n                s = s + 1\n        elif ele == 'U':\n            if s == 0:\n                s = 9\n            else:\n                s = s - 1\n    return s\nfor i in range(t):\n    no_wheel = int(input())\n    final_seq = [int(i) for i in input().split(' ')]\n    a = 0\n    res_arr = []\n    for seq in final_seq:\n        arr = [i for i in input().split(' ')]\n        res_arr.append(solve(seq, arr[1]))\n    for i in res_arr:\n        print(i, end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    final = list(map(int, input().split()))\n    for i in range(n):\n        arr = input().split()[1]\n        arr = list(arr)\n        res = arr.count('D') - arr.count('U')\n        final[i] += res\n        final[i] %= 10\n    for val in final:\n        print(val, end=' ')\n    print()", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    wheels = list(map(int, input().split()))\n    for i in range(n):\n        [seqLength, seq] = input().split()\n        for each in seq:\n            if each == 'U':\n                wheels[i] -= 1\n                if wheels[i] < 0:\n                    wheels[i] = 9\n            else:\n                wheels[i] += 1\n                if wheels[i] > 9:\n                    wheels[i] = 0\n    for each in wheels:\n        print(each, end=' ')\n    print()", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    for j in range(n):\n        move = list(map(str, input().split()))\n        p = l[j]\n        for m in move[1]:\n            if m == 'U':\n                if p == 0:\n                    p = 9\n                else:\n                    p -= 1\n            if m == 'D':\n                if p == 9:\n                    p = 0\n                else:\n                    p += 1\n        l[j] = str(p)\n    print(' '.join(l))", "t = int(input())\nfor i in range(t):\n    n_d = int(input())\n    digit_lst = list(map(int, input().split()))\n    new_lst = []\n    for i in range(n_d):\n        (moves, s) = input().split()\n        moves = int(moves)\n        for ele in s:\n            if digit_lst[i] == 9 and ele == 'D':\n                digit_lst[i] = 0\n                continue\n            if digit_lst[i] == 0 and ele == 'U':\n                digit_lst[i] = 9\n                continue\n            if ele == 'U':\n                digit_lst[i] -= 1\n                continue\n            if ele == 'D':\n                digit_lst[i] += 1\n                continue\n    new_s = ''\n    for ele in digit_lst:\n        new_s = new_s + str(ele) + ' '\n    print(new_s)", "t = int(input())\na = 1\nwhile t > 0:\n    t = t - 1\n    n = int(input())\n    if a == 1:\n        l1 = list(map(int, input().split()))\n    for i in range(n):\n        if a == 1:\n            n = n - 1\n        (m, s) = input().split()\n        l1[i] = (l1[i] + s.count('D') - s.count('U')) % 10\n    for j in l1:\n        print(j, end=' ')\n    print()", "import sys\nimport heapq\ninput = sys.stdin.readline\nfrom collections import Counter, defaultdict\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef main():\n    n = inp()\n    wheels = inlt()\n    for i in range(n):\n        (count, turns) = input().strip().split(' ')\n        for direction in turns:\n            if direction == 'U':\n                wheels[i] -= 1\n                if wheels[i] == -1:\n                    wheels[i] = 9\n            else:\n                wheels[i] += 1\n                if wheels[i] == 10:\n                    wheels[i] = 0\n    print(' '.join([str(wheel) for wheel in wheels]))\nt = inp()\nfor _ in range(t):\n    main()", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    for i in range(n):\n        (r, d) = input().split()\n        for j in d:\n            a[i] += 1 if j == 'D' else -1\n        a[i] %= 10\n    print(*a)", "for i in range(int(input())):\n    turn = int(input())\n    shown = list(map(int, input().split()))\n    ans = str()\n    for j in range(turn):\n        l = input().split()\n        shown[j] += l[1].count('D') - l[1].count('U')\n        if shown[j] > 9:\n            shown[j] = shown[j] % 10\n        elif shown[j] == -10:\n            shown[j] = 0\n        elif shown[j] < 0:\n            shown[j] = 10 - abs(shown[j]) % 10\n        ans += str(shown[j]) + ' '\n    print(ans.rstrip())", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    for j in range(0, n):\n        (a, b) = input().split()\n        a = int(a)\n        b = list(b)\n        u1 = b.count('U')\n        u2 = b.count('D')\n        uf = u1 - u2\n        lst[j] = lst[j] - uf\n        if lst[j] > 9:\n            lst[j] = lst[j] - 10\n        if lst[j] < 0:\n            lst[j] = lst[j] + 10\n    print(*lst)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    num = list(map(int, input().split()))\n    res = num\n    for j in range(n):\n        (pos, val) = [_ for _ in input().split()]\n        res[j] = str((val.count('D') + val.count('U') * -1 + num[j]) % 10)\n    print(' '.join(res))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    l = []\n    for i in range(n):\n        s = input()\n        k = int(s[0])\n        l.append(s[2:])\n    for i in range(n):\n        i1 = l[i].count('U')\n        i2 = l[i].count('D')\n        c = abs(i1 - i2)\n        if i1 > i2:\n            d = arr[i] - c\n            if d < 0:\n                print(10 + d, end=' ')\n            else:\n                print(d, end=' ')\n        elif i1 == i2:\n            print(arr[i], end=' ')\n        else:\n            p = arr[i] + c\n            if p >= 10:\n                print(abs(10 - p), end=' ')\n            else:\n                print(p, end=' ')\n    print()\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (u, d) = (0, 0)\n    hasil = 0\n    res = [0] * n\n    for i in range(n):\n        (x, s) = input().split(' ')\n        u = s.count('U')\n        d = s.count('D')\n        hasil = arr[i] - (u - d)\n        if hasil > 9:\n            hasil = hasil - 10\n        elif hasil < 0:\n            hasil = hasil + 10\n        res[i] = hasil\n    for i in range(n - 1):\n        print(res[i], end=' ')\n    print(res[-1])", "n = int(input())\nfor c in range(n):\n    nmexidas = int(input())\n    cadeado = [int(x) for x in input().split()]\n    for s in range(nmexidas):\n        (a, b) = input().split()\n        b = str(b)\n        up = b.count('D')\n        down = b.count('U')\n        cadeado[s] = cadeado[s] + up - down\n        if cadeado[s] > 9:\n            cadeado[s] = cadeado[s] - 10\n        elif cadeado[s] < 0:\n            cadeado[s] = cadeado[s] + 10\n    print(*cadeado)", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    for i in range(n):\n        (x, s) = input().split()\n        for c in s:\n            if c == 'U':\n                l[i] = (l[i] - 1) % 10\n            else:\n                l[i] = (l[i] + 1) % 10\n    print(*l)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    l = list(map(int, input().split()))\n    for i in range(n):\n        (a, s) = input().split()\n        a = int(a)\n        for e in s:\n            if e == 'D':\n                if l[i] == 9:\n                    l[i] = 0\n                else:\n                    l[i] += 1\n            elif l[i] == 0:\n                l[i] = 9\n            else:\n                l[i] -= 1\n    print(*l, sep=' ')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(n):\n        (b, m) = input().split()\n        d = m.count('D')\n        u = m.count('U')\n        a[i] = a[i] + d - u\n        if a[i] >= 10 or a[i] < 0:\n            a[i] %= 10\n    print(' '.join(list(map(str, a))))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(n):\n        (b, s) = input().split()\n        for j in s:\n            if j == 'D':\n                a[i] += 1\n            if j == 'U':\n                a[i] -= 1\n        if a[i] > 9:\n            a[i] %= 10\n        elif a[i] < 0:\n            a[i] = (a[i] + 10) % 10\n    print(*a)", "def solve(l, q):\n    res = []\n    for i in range(len(l)):\n        res.append((l[i] - q[i].count('U') + q[i].count('D')) % 10)\n    return res\n\ndef main():\n    t = int(input())\n    l = []\n    res = []\n    for i in range(t):\n        temp = []\n        q = []\n        n = int(input())\n        temp = input()\n        temp = temp.split()\n        for i in range(n):\n            temp[i] = int(temp[i])\n        for j in range(n):\n            line = input()\n            line = line.split()\n            q.append(line[1])\n        res.append(solve(temp, q))\n    for a in res:\n        for k in a:\n            print(k, end=' ')\n        print()\nmain()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    for j in range(n):\n        t = input().split()\n        t = t[1]\n        temp = l[j]\n        for k in t:\n            if k == 'U':\n                if temp == 0:\n                    temp = 9\n                else:\n                    temp -= 1\n            elif temp == 9:\n                temp = 0\n            else:\n                temp += 1\n        l[j] = temp\n    for k in l:\n        print(k, end=' ')\n    print()", "for i in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    c = []\n    for i in range(a):\n        (d, e) = input().split()\n        c += [e]\n    f = []\n    for i in range(a):\n        g = c[i].count('D')\n        h = c[i].count('U')\n        b[i] = (b[i] - h) % 10\n        b[i] = (b[i] + g) % 10\n    print(*b)", "from collections import Counter\nfor _ in ' ' * int(input()):\n    num = int(input())\n    l = list(map(int, input().split()))\n    for index in range(num):\n        a = Counter(input()[2:])\n        for i in a.items():\n            if i[0] == 'D':\n                l[index] = (l[index] + i[1]) % 10\n            elif i[0] == 'U':\n                l[index] = (l[index] - i[1] + 10) % 10\n    print(' '.join(list(map(str, l))))", "import math\nfrom math import inf\nfrom bisect import bisect_left, bisect_right\nimport itertools\nimport functools\nimport threading\nfrom collections import deque\nfrom queue import PriorityQueue\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(n):\n        (_, actions) = input().split()\n        counter = 0\n        for action in actions:\n            if action == 'U':\n                counter -= 1\n            elif action == 'D':\n                counter += 1\n        a[i] += counter\n        a[i] %= 10\n    print(*a)", "from collections import Counter, defaultdict\nfrom bisect import bisect_left\nimport math\nn = int(input())\nans = []\nfor _ in range(n):\n    t = int(input())\n    temp = list(map(int, input().split()))\n    for i in range(t):\n        (_, c) = input().split()\n        count = Counter(c)\n        res = count['D'] - count['U']\n        temp[i] = (temp[i] + res) % 10\n    ans.append(temp)\nfor a in ans:\n    print(*a)", "def f(arr, n, steps):\n    ans = []\n    for i in range(n):\n        temp = arr[i]\n        st = steps[i]\n        for j in st:\n            if j == 'D':\n                if temp == 9:\n                    temp = 0\n                else:\n                    temp += 1\n            elif j == 'U':\n                if temp == 0:\n                    temp = 9\n                else:\n                    temp -= 1\n        ans.append(temp)\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    steps = []\n    for i in range(n):\n        a = [i for i in input().split()]\n        steps.append(a[1])\n    ans = f(arr, n, steps)\n    for i in ans:\n        print(i, end=' ')\n    print()"]