["t = int(input())\nfor _ in range(t):\n    (n, s) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    visited = [0] * (n + 1)\n    m = 1\n    empty = []\n    for (a_i, b_i) in zip(a, b):\n        if b_i != -1 and a_i - b_i > s:\n            m = 0\n            break\n        elif b_i == -1:\n            empty.append(a_i)\n        else:\n            visited[b_i] += 1\n    else:\n        missing = [i for i in range(1, n + 1) if visited[i] == 0]\n        empty.sort()\n        l_max = len(missing)\n        e_hi = 0\n        for (e_lo, m_i) in enumerate(missing):\n            while e_hi != l_max and m_i + s >= empty[e_hi]:\n                e_hi += 1\n            m = m * max(0, e_hi - e_lo) % 998244353\n    print(m)", "def convert(nums_a, nums_b, s):\n    zips = list([(a, b) for (a, b) in zip(nums_a, nums_b)])\n    perm = [x[1] for x in sorted(zips)]\n    free_nums = set(nums_a) - set(perm)\n    available_nums = set(nums_a)\n    count_ar = [0] * len(perm)\n    count = 1\n    for (i, v) in enumerate(perm):\n        rm_num = i + 1 - s - 1\n        if rm_num in free_nums:\n            free_nums.remove(rm_num)\n        if rm_num in available_nums:\n            available_nums.remove(rm_num)\n        count_ar[i] = len(free_nums)\n    rm_count = 0\n    for (i, v) in reversed(list(enumerate(perm))):\n        if perm[i] == -1:\n            count *= count_ar[i] - rm_count\n            count = count % 998244353\n            rm_count += 1\n        elif i - perm[i] >= s:\n            count = 0\n    print(count)\nt = int(input())\nfor _ in range(t):\n    (_, s) = list(map(int, input().split()))\n    nums_a = list(map(int, input().split()))\n    nums_b = list(map(int, input().split()))\n    convert(nums_a, nums_b, s)"]