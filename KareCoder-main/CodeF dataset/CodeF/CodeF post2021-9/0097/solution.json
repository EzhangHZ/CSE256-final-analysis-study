["def task():\n    n = int(input())\n    a = set()\n    w = [int(i) for i in input().split()]\n    for i in w:\n        if i in a:\n            a.add(-i)\n        else:\n            a.add(i)\n    print(len(a))\n\ndef main():\n    n = int(input())\n    for _ in range(n):\n        task()\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    d = {}\n    for i in list(map(int, input().split())):\n        if abs(i) in d:\n            d[abs(i)] += 1\n        else:\n            d[abs(i)] = 1\n    ans = 0\n    for i in list(d.keys()):\n        if i == 0:\n            ans += 1\n        elif d[i] == 1:\n            ans += 1\n        else:\n            ans += 2\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    t = 0\n    lsx = []\n    ls = list(map(int, input().split()))\n    for i in range(len(ls)):\n        if ls[i] not in lsx:\n            lsx.append(ls[i])\n            t += 1\n        elif -ls[i] not in lsx:\n            lsx.append(-ls[i])\n            t += 1\n    print(t)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [0 for i in range(101)]\n    b[0] = 1\n    ans = 0\n    for j in a:\n        if b[abs(j)] < 2:\n            b[abs(j)] += 1\n            ans += 1\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    A = [int(i) for i in input().split()]\n    d = dict()\n    (count, dount) = (0, 0)\n    A1 = set()\n    for i in A:\n        if i in d:\n            if -i in d:\n                pass\n            else:\n                d[-i] = 1\n        else:\n            d[i] = 1\n    print(len(d))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    S = [int(i) for i in input().split()]\n    A = set()\n    for i in range(n):\n        if S[i] not in A:\n            A.add(S[i])\n        else:\n            S[i] = -S[i]\n    print(len(set(S)))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = set(a)\n    c = 0\n    for i in b:\n        if i == 0:\n            c += 1\n        elif -i not in b:\n            x = a.count(i)\n            if x == 1:\n                c += 1\n            else:\n                c += 2\n        else:\n            c += 1\n    print(c)", "def func(n, arr):\n    d = {}\n    for i in arr:\n        if i in d.keys():\n            d[i] += 1\n        else:\n            d[i] = 1\n    s = set()\n    for k in d.keys():\n        if d[k] == 1:\n            s.add(-1 * k)\n        else:\n            s.add(k)\n            s.add(-1 * k)\n    return len(s)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().strip().split()))\n    print(func(n, arr))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    count = 0\n    for i in d:\n        if i != 0 and -1 * i not in d:\n            if d[i] == 1:\n                count += 1\n            elif d[i] > 1:\n                count += 2\n        else:\n            count += 1\n    print(count)\n    t = t - 1", "import math as mt\nfor _ in range(int(input())):\n    x = [0 for i in range(101)]\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    for i in l:\n        x[abs(i)] += 1\n    ans = 0\n    if x[0] >= 1:\n        ans += 1\n    for i in x[1:]:\n        if i >= 2:\n            ans += 2\n        elif i == 1:\n            ans += 1\n    print(ans)", "from math import *\nimport sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\nclass Solution:\n\n    def __init__(self):\n        self.ans = 0\n\n    def solve(self, a, n):\n        obj = {}\n        ans = 0\n        for i in range(n):\n            if a[i] < 0:\n                a[i] = -a[i]\n            if a[i] in obj.keys():\n                obj[a[i]] += 1\n                if obj[a[i]] == 2 and a[i]:\n                    ans += 1\n            else:\n                obj[a[i]] = 1\n                ans += 1\n        return ans\nsol = Solution()\nt = inp()\nk = t\nans = []\nwhile t:\n    n = inp()\n    a = inlt()\n    ans.append(sol.solve(a, n))\n    t -= 1\nfor i in range(k):\n    print(ans[i])", "tst = int(input())\nfor i in range(tst):\n    n = int(input())\n    a = map(int, input().split())\n    b = set()\n    for i in a:\n        if i in b:\n            b.add(-i)\n        else:\n            b.add(i)\n    print(len(b))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    z = list(map(int, input().split()))\n    s = set()\n    for i in z:\n        if i in s:\n            s.add(-i)\n        else:\n            s.add(i)\n    print(len(s))", "for _ in range(int(input())):\n    n = int(input())\n    s = set()\n    a = list(map(int, input().split()))\n    for i in a:\n        if i in s:\n            if -i not in s:\n                s.add(-i)\n        else:\n            s.add(i)\n    print(len(s))", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = set()\n    for i in range(len(a)):\n        if a[i] not in s:\n            s.add(a[i])\n        else:\n            s.add(-a[i])\n    print(len(s))", "def diverse(nums, size):\n    nums.sort()\n    for i in range(size - 1):\n        if nums[i] == nums[i + 1]:\n            nums[i] *= -1\n    return len(set(nums))\nfor _ in range(int(input())):\n    size = int(input())\n    nums = list(map(int, input().split()))\n    print(diverse(nums, size))", "for i in range(int(input())):\n    n = int(input())\n    data = set()\n    for x in map(int, input().split()):\n        if x in data:\n            data.add(-x)\n        else:\n            data.add(x)\n    print(len(data))", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    li = list(map(int, input().strip().split()))\n    d = {}\n    for i in li:\n        if i not in d:\n            d[i] = i\n        else:\n            i = i * -1\n            d[i] = i\n    print(len(d))\nprint", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        if abs(i) in d:\n            d[abs(i)] += 1\n        else:\n            d[abs(i)] = 1\n    count = 0\n    for i in d:\n        if d[i] >= 2 and i != 0:\n            count += 2\n        else:\n            count += 1\n    print(count)", "for s in [*open(0)][2::2]:\n    t = set()\n    for x in map(int, s.split()):\n        t |= {(x, -x)[x in t]}\n    print(len(t))", "for s in [*open(0)][2::2]:\n    t = set()\n    for x in map(int, s.split()):\n        t |= {(x, -x)[x in t]}\n    print(len(t))", "for _ in range(int(input())):\n    n = input()\n    a = list(map(int, input().split()))\n    s = set()\n    s.add(a[0])\n    for i in a[1:]:\n        if i not in s:\n            s.add(i)\n        elif -i not in s:\n            s.add(-i)\n    print(len(s))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = list(map(abs, a))\n    ad = list(set(a))\n    flag = 0\n    for j in range(len(ad)):\n        if a.count(ad[j]) > 1 and ad[j] != 0:\n            flag = flag + 2\n        else:\n            flag = flag + 1\n    print(flag)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = set()\n    if len(set(a)) == len(a):\n        print(len(a))\n    else:\n        for i in a:\n            if i in s:\n                i = -i\n                s.add(i)\n            s.add(i)\n        print(len(s))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = set()\n    if len(set(a)) == len(a):\n        print(len(a))\n    else:\n        for i in a:\n            if i in s:\n                i = -i\n                s.add(i)\n            s.add(i)\n        print(len(s))", "def input_taker():\n    t = int(input())\n    str_sets = []\n    sets = []\n    for _ in range(t):\n        input()\n        str_sets.append(input())\n    for str_set in str_sets:\n        sets.append(list(map(int, str_set.split())))\n    return sets\n\ndef analyser(a_set):\n    nums = set()\n    l = 0\n    for num in a_set:\n        if num not in nums:\n            l += 1\n            nums.add(num)\n        elif -num not in nums:\n            l += 1\n            nums.add(-num)\n    return l\n\ndef c_1616A():\n    in_sets = input_taker()\n    for items in in_sets:\n        print(analyser(items))\nc_1616A()", "t = int(input())\nfor inh in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = set()\n    if len(set(a)) == len(a):\n        print(len(a))\n    else:\n        for i in a:\n            if i in s:\n                i = -i\n                s.add(i)\n            s.add(i)\n        print(len(s))", "for i in range(int(input())):\n    input()\n    n = list(map(int, input().split()))\n    s = set()\n    for _ in n:\n        if _ not in s:\n            s.add(_)\n        else:\n            s.add(-_)\n    print(len(s))\n    s = set()", "out = []\n\ndef playoff():\n    n = int(input())\n    lst = list(map(int, input().split()))\n    lst2 = []\n    for i in range(len(lst)):\n        if lst[i] in lst2:\n            lst2.append(-1 * lst[i])\n        lst2.append(lst[i])\n    out.append(len(set(lst2)))\niter = int(input())\nwhile iter > 0:\n    playoff()\n    iter -= 1\nfor i in range(0, len(out)):\n    print(out[i])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    s = set()\n    for i in l:\n        if i not in s:\n            s.add(i)\n        else:\n            s.add(-i)\n    print(len(s))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    d = {}\n    ans = 0\n    for i in range(n):\n        if arr[i] < 0:\n            arr[i] *= -1\n    for item in arr:\n        if item not in d and item != 0:\n            d[item] = 1\n        elif item in d:\n            d[item] += 1\n    for item in d.values():\n        if item == 2 or item == 1:\n            ans += item\n        elif item >= 3:\n            ans += 2\n    x = 0\n    if x in arr:\n        ans += 1\n    print(ans)", "for i in range(int(input())):\n    g = int(input())\n    a = list(map(int, input().split(' ')))\n    s = set()\n    for _ in a:\n        if _ not in s:\n            s.add(_)\n        else:\n            s.add(-_)\n    print(min(len(a), len(s)))", "for s in [*open(0)][2::2]:\n    t = set()\n    for x in map(int, s.split()):\n        t |= {(x, -x)[x in t]}\n    print(len(t))", "for s in [*open(0)][2::2]:\n    t = set()\n    for x in map(int, s.split()):\n        t |= {(x, -x)[x in t]}\n    print(len(t))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    for j in range(1, n):\n        if a[j] == a[j - 1]:\n            a[j] = -a[j]\n    a.sort()\n    c = 1\n    for j in range(1, n):\n        if a[j] != a[j - 1]:\n            c += 1\n    print(c)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = set()\n    for num in a:\n        if num in s:\n            s.add(-num)\n        else:\n            s.add(num)\n    print(len(s))", "def main():\n    n = input()\n    c = list(map(int, input().split()))\n    d = [0] * 101\n    for i in c:\n        d[abs(i)] += 1\n    vid = 0\n    if d[0] > 0:\n        vid += 1\n    for i in range(1, 101):\n        if d[i] == 1:\n            vid += 1\n        if d[i] > 1:\n            vid += 2\n    print(vid)\nfor i in range(int(input())):\n    main()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ans = []\n    cnt = 0\n    lst = list(map(int, input().split()))\n    for i in lst:\n        if i in ans:\n            if -i not in ans:\n                cnt += 1\n                ans.append(-i)\n        else:\n            cnt += 1\n            ans.append(i)\n    print(cnt)", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    n = int(inp())\n    d = dict()\n    for i in map(int, inp().split()):\n        d[abs(i)] = d.get(abs(i), 0) + 1\n    r = 0\n    for i in d:\n        if i == 0:\n            r += min(d[i], 1)\n        else:\n            r += min(d[i], 2)\n    print(r)\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    z = list(map(int, input().split()))\n    s = set()\n    for i in z:\n        if i in s:\n            s.add(-i)\n        else:\n            s.add(i)\n    print(len(s))", "from sys import stdin\n\ndef solve():\n    for _ in range(int(stdin.readline().strip())):\n        N = int(stdin.readline().rstrip())\n        A = sorted(list(map(int, stdin.readline().rstrip().split())))\n        for i in range(1, N):\n            if A[i] == A[i - 1]:\n                A[i] *= -1\n        print(len(set(A)))\nsolve()", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    s = set()\n    cnt = 0\n    a = [int(x) for x in input().strip().split(' ')]\n    for num in a:\n        if num not in s:\n            s.add(num)\n            cnt += 1\n        elif -1 * num not in s:\n            s.add(-1 * num)\n            cnt += 1\n    print(cnt)", "def find(n, L):\n    mydict = {}\n    for elem in L:\n        x = abs(int(elem))\n        try:\n            mydict[x] += 1\n        except:\n            mydict[x] = 1\n    sum = 0\n    for key in mydict:\n        if key != 0:\n            sum += min(2, mydict[key])\n        else:\n            sum += 1\n    return sum\ncases = int(input())\nfor _ in range(cases):\n    n = int(input())\n    L = input().split()\n    print(find(n, L))", "for _ in range(int(input())):\n    n = int(input())\n    freq = {}\n    for num in (*map(int, input().split()),):\n        num = abs(num)\n        freq[num] = freq.get(num, 0) + 1\n    count = 0\n    for key in freq:\n        if key == 0:\n            count += 1\n        elif freq[key] == 1:\n            count += 1\n        else:\n            count += 2\n    print(count)", "import sys\ninput = sys.stdin.readline\nfrom collections import Counter\nimport math\nn = int(input())\nfor _ in range(n):\n    t = int(input())\n    arr = list(map(int, input().split()))\n    for j in range(len(arr)):\n        arr[j] = abs(arr[j])\n    C = Counter(arr)\n    ans = 0\n    for key in C:\n        if key == 0:\n            ans += 1\n        else:\n            ans += min(2, C[key])\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    new = []\n    for i in a:\n        if i not in new:\n            new += [i]\n        elif i == 0 and 0 not in new:\n            new += [i]\n        elif -i not in new and i != 0:\n            new += [-i]\n    print(len(new))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(lambda x: abs(int(x)), input().split()))\n    cnt = {}\n    ans = 0\n    for elem in a:\n        if elem not in cnt:\n            cnt[elem] = 0\n        cnt[elem] += 1\n        if cnt[elem] == 2 and elem:\n            ans += 1\n    ans += len(cnt)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    for i in range(len(l)):\n        l[i] = abs(l[i])\n    d = {}\n    c = 0\n    for i in range(len(l)):\n        if l[i] not in d:\n            d[l[i]] = 1\n            c += 1\n        elif d[l[i]] == 1 and l[i] != 0:\n            d[l[i]] = 2\n            c += 1\n    print(c)", "import heapq\nimport sys\nimport math\nfrom collections import deque\nfrom bisect import bisect_left, bisect_right\nI = sys.stdin.readline\nII = lambda : int(I())\nIN = lambda x: map(int, x.split())\nFN = lambda x: map(float, x.split())\nL = lambda x: list(IN(x))\nM = 1000000007\nP = print\nT = True\nF = False\nfor _ in range(II()):\n    n = II()\n    a = L(I())\n    d = {}\n    for i in a:\n        d[abs(i)] = d.get(abs(i), 0) + 1\n    c = 0\n    for (u, v) in d.items():\n        if v > 1:\n            c += 1\n        c += 1\n    if d.get(0, 0) > 1:\n        c -= 1\n    print(c)", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_list_string():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\n\ndef get_print_int(x):\n    sys.stdout.write(str(x) + '\\n')\n\ndef get_print(x):\n    sys.stdout.write(x + '\\n')\n\ndef get_print_int_same(x):\n    sys.stdout.write(str(x) + ' ')\n\ndef get_print_same(x):\n    sys.stdout.write(x + ' ')\nfrom sys import maxsize\n\ndef solve():\n    for _ in range(get_int()):\n        n = get_int()\n        arr = get_list()\n        d = dict()\n        for i in range(n):\n            if arr[i] not in d:\n                d[arr[i]] = 1\n            else:\n                d[arr[i]] += 1\n        ans = 0\n        for (k, v) in d.items():\n            if v <= 1:\n                ans += v\n            elif k == 0:\n                ans += 1\n            elif -1 * k not in d:\n                ans += 2\n            else:\n                ans += 1\n        get_print_int(ans)\nsolve()", "import sys\nsys.setrecursionlimit = 200000\nfrom collections import Counter\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    C = Counter(A)\n    ans = len(C)\n    for c in C:\n        if c != 0 and C[c] > 1 and (-c not in C):\n            ans += 1\n    print(ans)", "import sys\nfor t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = f = 0\n    d = {}\n    for i in a:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    for i in d:\n        if d[i] > 1 and i != 0 and (i * -1 not in d):\n            c += 2\n        else:\n            c += 1\n    print(c)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = list(map(lambda x: abs(x), a))\n    b = [min(a.count(x), 1) if x == 0 else min(a.count(x), 2) for x in range(101)]\n    ans = sum(b)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if l[i] not in d:\n            d[l[i]] = 1\n        elif -l[i] not in d:\n            d[-l[i]] = 1\n    print(len(d))", "for i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dp = {}\n    for i in arr:\n        if i in dp:\n            dp[i] += 1\n        else:\n            dp[i] = 1\n    ans = 0\n    for i in dp:\n        if i == 0:\n            ans += 1\n        elif dp[i] == 1:\n            ans += 1\n        else:\n            if -i in dp:\n                ans += 1\n                continue\n            ans += 2\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = set()\n    for i in a:\n        if i not in s:\n            s.add(i)\n        else:\n            s.add(-i)\n    print(len(s))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = set()\n    for e in arr:\n        a = -1 * e\n        if e in s:\n            s.add(a)\n        else:\n            s.add(e)\n    print(len(s))", "for _ in range(int(input())):\n    sdf = input()\n    l = [int(i) for i in input().split()]\n    d = dict()\n    for i in range(len(l)):\n        if l[i] in d:\n            l[i] = -l[i]\n        d[l[i]] = 1\n    print(len(set(l)))", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = Counter(l)\n    ans = 0\n    for i in x:\n        if i == 0:\n            ans += 1\n        elif x[i] >= 2 and -1 * i not in x:\n            ans += 2\n        else:\n            ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    numbers = {}\n    a = list(map(int, input().split()))\n    for x in a:\n        x = abs(x)\n        if x not in numbers:\n            numbers[x] = 1\n        else:\n            numbers[x] += 1\n    count = 0\n    for (x, c) in numbers.items():\n        if c == 1 or x == 0:\n            count += 1\n        else:\n            count += 2\n    print(count)", "def CountFrequency(my_list):\n    freq = {}\n    for item in my_list:\n        if item in freq:\n            freq[item] += 1\n        else:\n            freq[item] = 1\n    return freq\nfor i in range(int(input())):\n    n = int(input())\n    a = [int(j) for j in input().split()]\n    freq = CountFrequency(a)\n    cnt = 0\n    for j in freq:\n        if freq[j] == 1:\n            cnt += 1\n        elif freq[j] > 1 and -j not in freq and (j != 0):\n            cnt += 2\n        else:\n            cnt += 1\n    print(cnt)", "t = int(input())\nfor i in range(t):\n    count = 0\n    arr1 = set()\n    arr2 = set()\n    n = int(input())\n    for j in input().split():\n        j = abs(int(j))\n        if j not in arr1:\n            arr1.add(j)\n            count += 1\n        elif j not in arr2 and j != 0:\n            arr2.add(j)\n            count += 1\n    print(count)", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    d = defaultdict(lambda : 0)\n    for i in A:\n        d[i] += 1\n    ans = 0\n    for i in d.keys():\n        if i == 0:\n            ans += 1\n        elif d[i] > 1:\n            k = -i\n            if k not in d.keys():\n                ans += 2\n            else:\n                ans += 1\n        else:\n            ans += 1\n    print(ans)", "t = int(input()) + 1\nwhile (t := (t - 1)):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    check = set()\n    for num in nums:\n        if num not in check:\n            check.add(num)\n        elif -num not in check:\n            check.add(-num)\n    print(len(check))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = []\n    for i in range(n):\n        if a[i] not in c:\n            c.append(a[i])\n        elif -a[i] not in c:\n            c.append(-a[i])\n    print(len(c))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    hmap = {}\n    ans = 0\n    for i in range(n):\n        if arr[i] in hmap:\n            hmap[arr[i]] += 1\n        else:\n            hmap[arr[i]] = 1\n    for (i, j) in hmap.items():\n        if i != 0 and j > 1 and (i * -1 not in hmap):\n            ans += 2\n        else:\n            ans += 1\n    print(ans)", "def solve():\n    n = int(input())\n    arr = [*map(int, input().split())]\n    tg = set()\n    for x in arr:\n        if x in tg:\n            tg.add(-x)\n        else:\n            tg.add(x)\n    print(len(tg))\nt = int(input())\nfor _ in range(t):\n    solve()", "from collections import Counter\nfor _ in range(int(input())):\n    input()\n    nums = Counter(list(map(abs, list(map(int, input().split())))))\n    ans = 0\n    for i in nums:\n        if i == 0:\n            ans += 1\n            continue\n        if nums[i] >= 2:\n            ans += 2\n        else:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    for i in range(n):\n        x[i] = abs(x[i])\n    x = sorted(x)\n    ans = 1\n    flag = True\n    temp = x[0]\n    for i in range(1, n):\n        if x[i] == temp and x[i] != 0 and (flag == True):\n            flag = False\n            ans += 1\n        elif x[i] != temp:\n            flag = True\n            ans += 1\n            temp = x[i]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    d = {}\n    for i in a:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    result = 0\n    for i in d:\n        if i == 0 or -i in d:\n            d[i] = min(d[i], 1)\n        else:\n            d[i] = min(d[i], 2)\n        result += d[i]\n    print(result)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = set()\n    for item in a:\n        if item not in l:\n            l.add(item)\n        elif -item not in l:\n            l.add(-item)\n    print(len(l))", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    cnt = Counter(a)\n    ans = 0\n    s = set()\n    for each in cnt.items():\n        if each[1] >= 2:\n            s.add(each[0])\n            s.add(-each[0])\n        else:\n            s.add(each[0])\n    print(len(s))", "def solver():\n    n = int(input())\n    for i in range(n):\n        d = {}\n        len_list = int(input())\n        numbers = list(sorted(list(map(abs, list(map(int, input().split()))))))\n        for a in numbers:\n            d[a] = d.get(a, 0) + 1\n        for j in d.keys():\n            if d[j] >= 2:\n                d[j] = 2\n        if d.get(0, 0) > 1:\n            d[0] = 1\n        print(sum(d.values()))\nsolver()", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    d = dict()\n    ans = 0\n    for i_sign in l:\n        i = abs(i_sign)\n        if i in d:\n            if d[i] == 1 and i != 0:\n                ans += 1\n            d[i] += 1\n        else:\n            d[i] = 1\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = set(l)\n    c = 0\n    for i in k:\n        if l.count(i) >= 2 and i != 0 and (l.count(-i) == 0):\n            c += 2\n        else:\n            c += 1\n    print(c)", "def solve(v):\n    d = {}\n    for i in v:\n        i = abs(i)\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    s = 0\n    for i in d:\n        if i == 0:\n            s += 1\n        else:\n            s += min(2, d[i])\n    return s\nn = int(input())\nfor i in range(n):\n    x = int(input())\n    v = map(int, input().split())\n    print(solve(v))", "for _ in range(int(input())):\n    n = int(input())\n    b = dict()\n    a = list(map(int, input().split()))\n    for i in a:\n        if i in b:\n            b[-i] = 1\n        else:\n            b[i] = 1\n    print(len(b))", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    s = list(map(int, input().split()))\n    S = []\n    for i in range(n):\n        if s[i] in S:\n            S.append(s[i] * -1)\n        else:\n            S.append(s[i])\n    print(len(set(S)))", "t = int(input())\nfor step in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    q = []\n    for i in range(0, n):\n        if q.count(abs(a[i])) <= 1 and a[i] != 0 or (q.count(a[i]) < 1 and a[i] == 0):\n            q.append(abs(a[i]))\n    print(len(q))", "t = int(input())\nans = []\none = 0\nzero = 0\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    val = dict()\n    for i in range(n):\n        one += 0\n        zero *= 1\n        if abs(a[i]) not in val:\n            val[abs(a[i])] = 1\n        else:\n            val[abs(a[i])] += 1\n    cnt = 0\n    one += 0\n    zero *= 1\n    for ele in val:\n        if ele == 0:\n            cnt += 1\n        else:\n            cnt += min(val[ele], 2)\n        one += 0\n        zero *= 1\n    print(cnt)", "for t in range(int(input())):\n    n = input()\n    memo = [0 for _ in range(101)]\n    a = list(map(int, input().split(' ')))\n    for i in range(len(a)):\n        if a[i] < 0:\n            memo[-a[i]] += 1\n        elif a[i] > 0:\n            memo[a[i]] += 1\n        else:\n            memo[0] = 1\n    sum = 0\n    for i in range(len(memo)):\n        sum += min(2, memo[i])\n    print(sum)", "t = int(input())\nfor testcase in range(t):\n    n = int(input())\n    integer_list = input().split(' ')\n    check_list = []\n    for i in range(n):\n        if int(integer_list[i]) not in check_list:\n            check_list.append(int(integer_list[i]))\n        elif int(integer_list[i]) * -1 not in check_list:\n            check_list.append(int(integer_list[i]) * -1)\n    print(len(check_list))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    dic = {}\n    for j in range(-100, 101):\n        dic[j] = 0\n    for k in lst:\n        if dic[k] >= 1:\n            dic[-k] += 1\n        else:\n            dic[k] += 1\n    c = 0\n    for p in dic.keys():\n        if dic[p] > 0:\n            c += 1\n    print(c)", "from collections import Counter\nimport sys\ninput = sys.stdin.readline\nnum_test_cases = int(input())\nfor test_case_ittr in range(num_test_cases):\n    n = int(input())\n    arr = [int(x) for x in input().strip().split()]\n    count = Counter(arr)\n    ans = 0\n    if count[0] > 0:\n        ans += 1\n    del count[0]\n    processed = {0}\n    for x in count:\n        if x in processed:\n            continue\n        if count[x] + count[-x] > 1:\n            ans += 2\n        else:\n            ans += 1\n        processed.update({x, -x})\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    cnt = {}\n    for i in arr:\n        val = abs(i)\n        cnt[val] = cnt[val] + 1 if val in cnt else 1\n    res = 0\n    for i in cnt:\n        if i > 0:\n            res += min(2, cnt[i])\n        else:\n            res += min(1, cnt[i])\n    print(res)", "solutions = []\nt = int(input())\nfor x in range(0, t):\n    d = 0\n    integers = []\n    n = int(input())\n    input_two = list(input().split())\n    for x in input_two:\n        y = int(x)\n        integers.append(y)\n    for x in set(integers):\n        if x != 0:\n            if -x not in integers:\n                if integers.count(x) > 1:\n                    d += 1\n    solve = len(set(integers)) + d\n    solutions.append(solve)\nfor x in solutions:\n    print(x)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = set()\n    for i in a:\n        if i not in s:\n            s.add(i)\n        else:\n            s.add(-i)\n    print(len(s))", "n = int(input())\nsp = []\nsp1 = []\nspi = []\nfor i in range(n):\n    a = int(input())\n    s = list(map(int, input().split()))\n    for t in s:\n        if t not in sp1:\n            sp1.append(t)\n        elif -t not in sp1:\n            sp1.append(-t)\n        else:\n            pass\n    spi.append(len(sp1))\n    sp1.clear()\nfor o in spi:\n    print(o)", "def tack():\n    n = int(input())\n    data = input().split()\n    d = dict()\n    for x in data:\n        d[x] = d[x] + 1 if x in d.keys() else 1\n    ans = 0\n    for x in d:\n        if (d[x] >= 2 and x != '0') and str(-int(x)) not in d.keys():\n            ans += 2\n        else:\n            ans += 1\n    print(ans)\n\ndef main():\n    n = int(input())\n    for x in range(n):\n        tack()\nmain()", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    l = list(map(abs, map(int, input().split())))\n    s = set(l)\n    count = 0\n    for i in s:\n        if i == 0:\n            count += 1\n        elif l.count(i) > 2:\n            count += 2\n        else:\n            count += l.count(i)\n    print(count)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [abs(int(x)) for x in input().split(' ')]\n    d = {}\n    for x in arr:\n        if x not in d:\n            d[x] = 0\n        d[x] += 1\n    total_diff = len(d)\n    for k in d:\n        if d[k] > 1 and k != 0:\n            total_diff += 1\n    print(total_diff)", "T = int(input())\nwhile T:\n    n = int(input())\n    s = input()\n    s = s.split()\n    for i in range(len(s)):\n        s[i] = int(s[i])\n    d = {}\n    for i in s:\n        if i not in d:\n            d[i] = 0\n        d[i] = d[i] + 1\n    a = len(d)\n    flag = {}\n    for i in d:\n        if d[i] > 1:\n            if -i not in d and i not in flag and (-i not in flag):\n                flag[i] = True\n                flag[-i] = True\n                a = a + 1\n    print(a)\n    T = T - 1", "def do(arr):\n    l1 = len(arr)\n    arr2 = set(arr)\n    l2 = len(arr2)\n    c = 0\n    for i in arr2:\n        if arr.count(i) > 1 and i != 0 and (arr.count(-i) == 0):\n            c += 1\n    total_elements = c + l2\n    print(total_elements)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    do(arr)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for j in a:\n        if abs(j) not in d:\n            d[abs(j)] = 1\n        else:\n            d[abs(j)] += 1\n    ans = 0\n    for (k, v) in d.items():\n        if v > 1 and k != 0:\n            ans += 2\n        else:\n            ans += 1\n    print(ans)", "def solve(arr, n):\n    count = 0\n    rec = dict()\n    for i in arr:\n        if i not in rec:\n            rec[i] = 1\n            count += 1\n        else:\n            if i == 0:\n                continue\n            elif -i in rec:\n                continue\n            rec[-i] = 1\n            count += 1\n    return count\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    ans = solve(arr, n)\n    print(ans)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    d = {}\n    for j in a:\n        i = j\n        if j < 0:\n            i = j * -1\n        if i in d:\n            if i == 0:\n                continue\n            d[i] += 1\n        else:\n            d.update({i: 1})\n    count = 0\n    for i in d.keys():\n        if d[i] == 1:\n            count += 1\n        else:\n            count += 2\n    print(count)", "from collections import Counter\nans = []\nfor _ in range(int(input())):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    count = Counter(nums)\n    cnt = 0\n    for (k, v) in count.items():\n        if v > 1 and k != 0 and (-k not in count):\n            cnt += 1\n        cnt += 1\n    ans.append(cnt)\nprint(*ans, sep='\\n')", "import sys\nfrom math import sqrt, gcd\nfrom collections import deque\nsys.setrecursionlimit(10 ** 8)\nI = lambda : int(input())\nS = lambda : input().strip()\nM = lambda : map(int, input().strip().split())\nL = lambda : list(map(int, input().strip().split()))\nmod = 1000000007\nfor _ in range(I()):\n    n = I()\n    l = L()\n    d = {}\n    for i in l:\n        if abs(i) in d:\n            d[abs(i)] += 1\n        else:\n            d[abs(i)] = 1\n    ans = 0\n    for i in d:\n        if d[i] == 1 or i == 0:\n            ans += 1\n        else:\n            ans += 2\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        if a[i] not in d:\n            d[a[i]] = 1\n        else:\n            d[a[i]] += 1\n    c = 0\n    for i in d:\n        if i == 0:\n            c += 1\n        elif d[i] != 1000:\n            if -i in d:\n                c += 2\n                d[-i] = 1000\n            elif d[i] >= 2:\n                c += 2\n            else:\n                c += 1\n    print(c)"]