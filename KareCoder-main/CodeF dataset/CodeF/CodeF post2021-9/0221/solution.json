["for s in [*open(0)][2::2]:\n    print(sum(map(int, (a := s.lstrip('0 ').split()[:-1]))) + a.count('0'))", "for s in [*open(0)][2::2]:\n    print(sum(map(int, (a := s.lstrip('0 ').split()[:-1]))) + a.count('0'))", "for s in [*open(0)][2::2]:\n    print(sum(map(int, (a := s.lstrip('0 ').split()[:-1]))) + a.count('0'))", "for s in [*open(0)][2::2]:\n    print(sum(map(int, (a := s.lstrip('0 ').split()[:-1]))) + a.count('0'))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.lstrip('0 ').split()),)\n    print(len(a) and a.count(0) + sum(a) - (a[-1] or 1))", "for s in [*open(0)][2::2]:\n    print(sum(map(int, (a := s.lstrip('0 ').split()[:-1]))) + a.count('0'))", "for sgr in [*open(0)][2::2]:\n    print(sum(map(int, (x := sgr.lstrip('0 ').split()[:-1]))) + x.count('0'))", "for s in [*open(0)][2::2]:\n    print(sum(map(int, (a := s.lstrip('0 ').split()[:-1]))) + a.count('0'))", "test = int(input())\nanswer = list()\nfor i in range(test):\n    room = input()\n    roomsdust = list(map(int, input().split()))\n    dustsum = sum(roomsdust[:-1])\n    for j in range(len(roomsdust)):\n        if roomsdust[j] != 0:\n            break\n    zerocount = roomsdust[j + 1:-1].count(0)\n    answer.append(zerocount + dustsum)\nfor i in answer:\n    print(i)", "for s in [*open(0)][2::2]:\n    print(sum(map(int, (a := s.lstrip('0 ').split()[:-1]))) + a.count('0'))", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    now = n\n    for i in range(n):\n        if a[i]:\n            now = i\n            break\n    cnt = 0\n    for i in range(now, n - 1):\n        if a[i] == 0:\n            cnt += 1\n    print(sum(a[:-1]) + cnt)\nfor __ in range(int(input())):\n    solve()", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.lstrip('0 ').split()),)\n    print(len(a) and a.count(0) + sum(a) - max(a[-1], 1))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.lstrip('0 ').split()[:-1]),)\n    print(a.count(0) + sum(a))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    fir = next((i for (i, j) in enumerate(a) if j != 0), n)\n    res = sum(a[fir:-1])\n    res += a[fir:-1].count(0)\n    print(res)", "def solve_one_impl(nums):\n    to_cut = 0\n    while len(nums) - to_cut > 1 and nums[to_cut] == 0:\n        to_cut += 1\n    nums = nums[to_cut:]\n    if len(nums) == 1:\n        return 0\n    zeros_cnt = 0\n    nums_sum = 0\n    for num in nums[:-1]:\n        nums_sum += num\n        zeros_cnt += 1 if num == 0 else 0\n    return nums_sum + zeros_cnt\n\ndef solve_one():\n    input()\n    nums_inp = list(map(int, input().split()))\n    return solve_one_impl(nums_inp)\nt = int(input())\nanss = []\nfor _ in range(t):\n    anss.append(solve_one())\nfor ans in anss:\n    print(ans)", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 0\n    while a[i] == 0 and i < n - 1:\n        i += 1\n    a = a[i:n - 1]\n    print(sum(a) + a.count(0))\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    j = 0\n    while j < n and l[j] < 1:\n        j += 1\n    l = l[j:-1]\n    print(sum(l) + l.count(0))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    boo = 0\n    while boo < n and a[boo] < 1:\n        boo += 1\n    a = a[boo:-1]\n    print(sum(a) + a.count(0))", "def compute(arr):\n    helper = len(arr) - 1\n    for i in range(len(arr) - 1):\n        if arr[i] != 0:\n            helper = i\n            break\n    k = 0\n    ans = 0\n    for i in range(helper, len(arr) - 1):\n        if arr[i] == 0:\n            k += 1\n        ans += arr[i]\n    return ans + k\nt = int(input())\narr = []\nfor i in range(t):\n    b = input()\n    a = list(map(int, input().split()))\n    arr.append(a)\nfor i in range(len(arr)):\n    print(compute(arr[i]))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.lstrip('0 ').split()[:-1]),)\n    print(a.count(0) + sum(a))", "for s in [*open(0)][2::2]:\n    print(sum(map(int, (a := s.lstrip('0 ').split()[:-1]))) + a.count('0'))", "for i in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    d = 0\n    for i in range(a):\n        if b[i] != 0:\n            d = b[i:-1].count(0)\n            break\n    c = sum(b[:-1])\n    if c > 0:\n        print(c + d)\n    else:\n        print(0)", "def cleaner(n):\n    for j in range(n):\n        room_cnt = int(input())\n        ash_arr = [int(x) for x in input().split()]\n        len_arr = len(ash_arr)\n        ans = 0\n        index_ = 0\n        for i in range(len_arr - 1):\n            if ash_arr[i] != 0:\n                index_ = i\n                break\n        else:\n            print(ans)\n            continue\n        ans = ash_arr[index_:len_arr - 1].count(0) + sum(ash_arr[index_:len_arr - 1])\n        print(ans)\nn = int(input())\ncleaner(n)", "a = int(input())\n\ndef trim(L):\n    for i in range(len(L)):\n        if L[i] != 0:\n            break\n    return L[i:]\n\ndef fn(L):\n    L = trim(L)\n    s = 0\n    for j in L[:len(L) - 1]:\n        if j == 0:\n            s += 1\n        else:\n            s += j\n    return s\nk = []\nfor i in range(a):\n    b1 = int(input())\n    b2 = input().split()\n    b2 = [int(p) for p in b2]\n    k.append(fn(b2))\nfor j in range(a):\n    print(k[j])", "a = int(input())\nfor i in range(a):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    if l.count(0) != len(l):\n        for i in l:\n            if i != 0:\n                ind = l.index(i)\n                break\n        l = l[ind:]\n        l = l[:-1]\n        ans = sum(l) + l.count(0)\n        print(ans)\n    else:\n        print('0')", "for _ in range(int(input())):\n    n = int(input())\n    print(sum(map(int, (a := input().lstrip('0 ').split()[:-1]))) + a.count('0'))", "def resi():\n    n = int(input())\n    a = list(map(int, input().split()))\n    brNula = 0\n    for i in range(n - 1):\n        if a[i] == 0:\n            brNula += 1\n    brNulaNaPoc = 0\n    for i in range(n - 1):\n        if a[i] != 0:\n            break\n        brNulaNaPoc += 1\n    print(brNula - brNulaNaPoc + sum(a) - a[n - 1])\n    return\nfor _ in range(int(input())):\n    resi()", "def main():\n    for t in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        i = 0\n        while i < n and a[i] == 0:\n            i += 1\n        x = 0\n        for k in range(i, n - 1):\n            if a[k] == 0:\n                x += 1\n        print(sum(a[i:n - 1]) + x)\nmain()", "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    lst1 = lst[:n - 1]\n    ind = -1\n    for j in range(n - 1):\n        if lst1[j] != 0:\n            ind = j\n            break\n    if ind == -1:\n        print(0)\n    else:\n        zer = lst1[ind:].count(0)\n        s = sum(lst1)\n        print(zer + s)", "for _ in range(int(input())):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    ind1 = -1\n    for i in range(n - 1):\n        if nums[i] != 0:\n            ind1 = i\n            break\n    if ind1 == -1:\n        print(0)\n    else:\n        print(sum(nums[:n - 1]) + nums[ind1:n - 1].count(0))", "import sys\nimport collections\nfrom math import ceil, gcd, sqrt, log\nimport bisect\nINF = float('inf')\nmod = 1000000007\n\ndef solve():\n    n = int(input())\n    A = list(map(int, input().split()))\n    for i in range(n):\n        if A[i] > 0:\n            break\n    c = A[i:-1].count(0)\n    print(sum(A[:-1]) + c)\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "from sys import stdin\nfrom math import log, floor, ceil, gcd\ninp = lambda : int(stdin.readline())\n\ndef ra(typ):\n    return list(map(typ, stdin.readline().split()))\n\ndef rv(typ):\n    return map(typ, stdin.readline().split())\n\ndef main():\n    for _ in range(inp()):\n        n = inp()\n        a = ra(int)\n        c = 0\n        s = 0\n        flag = False\n        for i in range(n - 1):\n            if a[i] != 0:\n                flag = True\n                s += a[i]\n            elif a[i] == 0 and flag:\n                c += 1\n        print(c + s)\nmain()", "out = []\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    l = 0\n    while l < n and a[l] == 0:\n        l += 1\n    out.append(sum(a[0:n - 1]) + a[l:n - 1].count(0))\nfor i in out:\n    print(i)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    res = 0\n    for (i, x) in enumerate(arr):\n        if x > 0:\n            res = arr[i:n - 1].count(0) + sum(arr[i:n - 1])\n            break\n    print(res)", "def solve():\n    n = int(input())\n    room = [int(i) for i in input().split()]\n    res = 0\n    i = 0\n    while not room[i] and i < n - 1:\n        i += 1\n    res += room[i:-1].count(0)\n    res += sum(room[i:-1])\n    print(res)\n    return\n\ndef main():\n    for _ in range(int(input())):\n        solve()\n    return\nmain()", "a = int(input())\nfor i in range(a):\n    c = int(input())\n    s = input().split()\n    tot = 0\n    tot0 = 0\n    for j in s[:-1]:\n        if j != '0':\n            tot += int(j)\n        elif tot != 0:\n            tot0 += 1\n    print(tot + tot0)", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    lst = [int(x) for x in input().split()][::-1]\n    i = n - 1\n    while i != 0:\n        if lst[i] == 0:\n            lst.pop()\n            i -= 1\n        else:\n            break\n    if lst[0] == 0:\n        print(sum(lst) + lst.count(0) - 1)\n    else:\n        print(sum(lst) + lst.count(0) - lst[0])", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    sw = 0\n    for (i, x) in enumerate(a[:-1]):\n        if x > 0:\n            sw = 1\n            break\n    ans = sum(a[i:-1])\n    if sw:\n        ans += a[i:-1].count(0)\n    print(ans)", "from math import *\nfrom bisect import *\nfrom heapq import *\nfrom collections import *\nfrom functools import *\nx = int(input())\n\ndef f(li):\n    i = 0\n    for (i, j) in enumerate(li):\n        if j != 0:\n            break\n    s = li[i:-1]\n    a = s.count(0)\n    b = sum(s)\n    return a + b\nfor i in range(x):\n    n = int(input())\n    li = list(map(int, input().split()))\n    print(f(li))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    first = 0\n    while first < n - 1 and a[first] == 0:\n        first += 1\n    if first >= n - 1:\n        print(0)\n    else:\n        print(sum(a[first:-1]) + a[first:-1].count(0))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ls = []\n    for x in range(n - 1):\n        if arr[x] != 0:\n            ls = arr[x:n - 1]\n            break\n    add = sum(ls)\n    frq = ls.count(0)\n    print(add + frq)", "for _ in range(int(input())):\n    input()\n\n    def del_zero(seq):\n        for i in range(len(seq)):\n            if seq[i] != 0:\n                return seq[i:]\n        else:\n            return [0]\n    seq = list(map(int, input().split()))\n    sm = sum(seq[:-1])\n    seq = del_zero(seq)\n    print(seq[:-1].count(0) + sm)", "for _ in range(int(input())):\n    input()\n\n    def del_zero(seq):\n        for i in range(len(seq)):\n            if seq[i] != 0:\n                return seq[i:]\n        else:\n            return [0]\n    seq = list(map(int, input().split()))\n    sm = sum(seq[:-1])\n    seq = del_zero(seq)\n    print(seq[:-1].count(0) + sm)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    for i in range(n - 1):\n        c += a[i] or c != 0\n    print(c)", "from sys import stdin, stdout\n\ndef height():\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    count = 0\n    flag = True\n    for i in range(n - 1):\n        if arr[i] == 0:\n            if flag == False:\n                count += 1\n        else:\n            flag = False\n            count += arr[i]\n    print(count)\n\ndef main():\n    t = int(input())\n    while t != 0:\n        height()\n        t -= 1\nmain()", "for _ in ' ' * int(input()):\n    n = int(input())\n    l = list(input().lstrip('0 ').split(' ')[:-1])\n    if l:\n        s = 0\n        for i in l:\n            if i != '0':\n                s += int(i)\n            else:\n                s += 1\n        print(s)\n    else:\n        print(0)", "for _ in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    sList = []\n    for i in range(a):\n        if b[i] > 0:\n            sList = b[i:-1]\n            break\n    print(sList.count(0) + sum(sList))", "for _ in range(int(input())):\n    a = int(input())\n    l = list(map(int, input().split()))\n    for i in range(a):\n        if l[i] != 0:\n            break\n    l = l[i:-1]\n    print(l.count(0) + sum(l))", "def solve():\n    n = int(input())\n    dust_of_rooms = list(map(int, input().split()))\n    res = 0\n    latest = dust_of_rooms[0]\n    for i in range(n - 1):\n        if dust_of_rooms[i]:\n            res += dust_of_rooms[i]\n            latest = dust_of_rooms[i]\n        elif latest:\n            res += 1\n    print(res)\nn_testcase = int(input())\nfor _ in range(n_testcase):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    j = 0\n    while j < n and l[j] < 1:\n        j += 1\n    l = l[j:-1]\n    print(sum(l) + l.count(0))", "for _ in range(int(input())):\n    n = int(input())\n    print(sum(map(int, (a := input().lstrip('0 ').split()[:-1]))) + a.count('0'))", "for t in range(int(input())):\n    n = int(input())\n    l = [*map(int, input().split())]\n    summ = sum(l[:n - 1])\n    i = 0\n    while l[i] == 0:\n        if i == n - 2:\n            break\n        i += 1\n    if l[i] == 0:\n        print(summ)\n    else:\n        c = l[i:n - 1].count(0)\n        print(summ + c)", "for _ in range(int(input())):\n    n = range(int(input()))\n    l = list(map(int, input().split()))\n    for i in n:\n        if l[i] > 0:\n            break\n    l = l[i:-1]\n    print(l.count(0) + sum(l))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    if sum(a[:n - 1]) == 0:\n        print(0)\n    elif a[0] != 0:\n        num_zero = a[:n - 1].count(0)\n        print(num_zero + sum(a[:n - 1]))\n    else:\n        num_zero = 0\n        for i in a:\n            if i == 0:\n                num_zero += 1\n            else:\n                break\n        count_zero = a[num_zero:n - 1].count(0)\n        print(count_zero + sum(a[num_zero:n - 1]))", "for s in [*open(0)][2::2]:\n    print(sum(map(int, (a := s.lstrip('0 ').split()[:-1]))) + a.count('0'))", "for s in [*open(0)][2::2]:\n    print(sum(map(int, (a := s.lstrip('0 ').split()[:-1]))) + a.count('0'))", "import sys\n\ndef main():\n    count_examples = int(input())\n    for i in range(count_examples):\n        rooms = int(input())\n        dust_level = input()\n        result = 0\n        flag = False\n        for (i, v) in enumerate(dust_level.split()):\n            if i + 1 == rooms:\n                continue\n            if v == '0':\n                if flag:\n                    result += 1\n            else:\n                flag = True\n                result += int(v)\n        sys.stdout.write(str(result) + '\\n')\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    sum = 0\n    for i in range(n):\n        if a[i] != 0:\n            break\n    for j in range(i, n - 1):\n        if a[j] == 0:\n            sum += 1\n        else:\n            sum += a[j]\n    print(sum)", "for i in range(int(input())):\n    n = int(input())\n    values = list(map(int, input().split()))\n    k = 0\n    while k < n - 1:\n        if values[k] > 0:\n            break\n        k += 1\n    print(sum(values[k:n - 1]) + values[k:n - 1].count(0))", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    for j in range(0, n):\n        if l[j] != 0:\n            break\n    a = l.count(0)\n    if l[n - 1] == 0:\n        print(sum(l) + a - j - l[n - 1] - 1)\n    else:\n        print(sum(l) + a - j - l[n - 1])", "for _ in range(int(input())):\n    n = int(input())\n    A = map(int, input().split())\n    A = list(A)\n    c = 0\n    for i in range(n - 1):\n        if A[i] == 0:\n            c += 1\n        else:\n            break\n    a = A[-1]\n    if A[-1] == 0:\n        A.remove(0)\n    print(sum(A) - a + A.count(0) - c)", "reps = int(input())\nfor _ in range(reps):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    i = 0\n    while i < n and arr[i] == 0:\n        i += 1\n    if i == n:\n        print(0)\n        continue\n    ans = arr[i:].count(0)\n    ans += sum(arr[i:n - 1]) - (arr[-1] == 0)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = n\n    for i in range(n):\n        if l[i] > 0:\n            a = i\n            break\n    l = l[a:-1]\n    s = sum(l)\n    c = l.count(0)\n    print(s + c)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    b = 0\n    for i in range(n - 1):\n        b += l[i] or b != 0\n    print(b)", "t = int(input())\ns = []\nfor i in range(t):\n    n = int(input())\n    a = input()\n    a = a.split()\n    a = [int(x) for x in a]\n    rez = 0\n    j = 0\n    while a[j] == 0 and j < n - 1:\n        j += 1\n    b = a[j:-1]\n    print(sum(b) + b.count(0))", "def func(n, lst):\n    cnt = 0\n    for i in range(n - 1):\n        cnt += 1 if lst[i] == 0 and cnt > 0 else lst[i]\n    return cnt\nfor i in range(int(input())):\n    print(func(int(input()), list(map(int, input().split()))))", "for i in range(int(input())):\n    a = int(input())\n    lis = list(map(int, input().split()))\n    lis.pop(-1)\n    ind = a - 1\n    for i in range(a - 1):\n        if lis[i] != 0:\n            ind = i\n            break\n    print(sum(lis[ind:]) + lis[ind:].count(0))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    isLeadingZero = True\n    ans = 0\n    for i in range(n - 1):\n        if a[i] == 0:\n            if not isLeadingZero:\n                ans += 1\n        else:\n            ans += a[i]\n            isLeadingZero = False\n    print(ans)", "for i in range(int(input())):\n    n = map(int, input().split())\n    a = list(map(int, input().split()))\n    j = 0\n    while j < len(a) and a[j] == 0:\n        j += 1\n    print(a[j:-1].count(0) + sum(a[j:-1]))", "for _ in range(int(input())):\n    n = int(input())\n    (*a,) = map(int, input().split())\n    ans = 0\n    for i in range(n - 1):\n        ans += a[i]\n        if ans and a[i] == 0:\n            ans += 1\n    print(ans)", "def soln():\n    n = int(input())\n    a = list(map(int, input().split()))\n    start = 0\n    for i in range(n):\n        if a[i] == 0:\n            start += 1\n        else:\n            break\n    cnt = 0\n    if start == n - 1:\n        print(0)\n        return\n    for i in range(start, n - 1):\n        if a[i] == 0:\n            cnt += 1\n    ans = cnt + sum(a[:-1])\n    print(ans)\nfor _ in range(int(input())):\n    soln()", "import sys\n\ndef rall():\n    return [x.strip() for x in sys.stdin.readlines()]\n\ndef rl():\n    return sys.stdin.readline().strip()\n\ndef rl_types(types):\n    str_list = [x for x in sys.stdin.readline().strip().split(' ')]\n    return [types[i](str_list[i]) for i in range(len(str_list))]\n\ndef pr(something=''):\n    sys.stdout.write(str(something) + '\\n')\n\ndef pra(array):\n    sys.stdout.write(' '.join([str(x) for x in array]) + '\\n')\nNT = int(rl())\nfor ti in range(NT):\n    n = int(rl())\n    array = list(map(int, rl().split(' ')))\n    leading_zeroes = 0\n    i = 0\n    while i < n:\n        if not array[i] == 0:\n            break\n        leading_zeroes += 1\n        i += 1\n    numzeroes = sum([1 if x == 0 else 0 for x in array[leading_zeroes:-1]])\n    pr(numzeroes + sum(array[:-1]))", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    n0 = a.count(0)\n    for i in range(n - 1):\n        if a[i] == 0:\n            n0 -= 1\n        else:\n            break\n    if a[n - 1] == 0:\n        n0 -= 1\n    s = sum(a) - a[n - 1]\n    print(s + n0)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 0\n    c = 0\n    i = 0\n    while i < n - 1:\n        if a[i] != 0:\n            break\n        i += 1\n    if i == n - 1:\n        print(0)\n    else:\n        for j in range(i, n - 1):\n            if a[j] == 0:\n                c += 1\n        print(sum(a[0:n - 1]) + c)", "tc = int(input())\nfor t in range(tc):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    cost = 0\n    bol = False\n    for i in range(n - 1):\n        if bol == False:\n            if lst[i] != 0:\n                bol = True\n                cost = lst[i] + cost\n        elif lst[i] != 0:\n            cost = lst[i] + cost\n        else:\n            cost = 1 + cost\n    print(cost)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    for (k, j) in enumerate(l):\n        if j > 0:\n            l = l[k:]\n            break\n    l = l[:-1]\n    o = l.count(0)\n    x = 0\n    m = 0\n    if len(set(l)) == 1:\n        if l[0] == 0:\n            print(0)\n            continue\n    print(sum(l) + o)", "n = int(input())\nfor i in range(n):\n    k = int(input())\n    arr = [int(i) for i in input().split()]\n    index = 0\n    for j in range(1, k + 1):\n        if arr[j - 1] > 0:\n            index = j\n            break\n    s = sum(arr[index - 1:k - 1]) + arr[index - 1:k - 1].count(0)\n    print(s)", "t = int(input())\nwhile t:\n    t -= 1\n    a = int(input())\n    lis = list(map(int, input().split()))\n    ans = 0\n    j = 0\n    while j < a - 1 and lis[j] == 0:\n        j += 1\n    if j < a - 1:\n        ans = ans + lis[j:a - 1].count(0)\n        ans = ans + sum(lis[0:a - 1])\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l = l[:n - 1]\n    val = 0\n    count = 0\n    for i in l:\n        if i == 0 and val == 0:\n            continue\n        else:\n            val = 1\n            if i == 0:\n                count += 1\n            else:\n                count += i\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    z = a.count(0)\n    total = sum(a) - a[n - 1]\n    nonz = 0\n    for i in range(n):\n        if a[i] != 0:\n            nonz = i\n            break\n    las = 0\n    if a[n - 1] == 0:\n        las = 1\n    if total == 0:\n        print(0)\n    else:\n        print(total + z - nonz - las)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = n - 1\n    for i in range(n - 1):\n        if l[i] != 0:\n            x = i\n            break\n    if x == n - 1:\n        print(0)\n    else:\n        print(sum(l[x:n - 1]) + l[x:n - 1].count(0))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    flag = 0\n    for i in range(n):\n        if a[i] > 0:\n            flag = 1\n            print(sum(a[i:-1]) + a[i:-1].count(0))\n            break\n    if flag == 0:\n        print(0)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    b = l.count(0)\n    for i in range(len(l)):\n        if l[i] == 0:\n            b -= 1\n        if l[i] != 0:\n            break\n    s = sum(l) - l[-1]\n    if s == 0:\n        print(0)\n        continue\n    q = 0\n    if l[-1] == 0:\n        b -= 1\n    print(s + b)", "t = int(input())\nfor i in range(t):\n    tc = int(input())\n    inp = list(map(int, input().split()))\n    list1 = []\n    z = 0\n    x = inp[:-1]\n    for i in range(tc):\n        if inp[i] != 0:\n            z = inp[i:-1].count(0)\n            break\n    print(z + sum(x))", "for t in range(int(input())):\n    flag = 0\n    count = 0\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    arr.pop()\n    for i in arr:\n        if i != 0:\n            flag = 1\n        elif flag == 1:\n            count += 1\n    count += sum(arr)\n    print(count)", "def sol(arr, n):\n    i = 0\n    while i < n and arr[i] == 0:\n        i += 1\n    if i == n:\n        return 0\n    count0 = 0\n    for j in range(i, n - 1):\n        if arr[j] == 0:\n            count0 += 1\n    return sum(arr[i:n - 1]) + count0\nx = int(input())\nfor _ in range(x):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    start = 0\n    print(sol(arr, n))", "T = int(input())\nfor tt in range(T):\n    n = int(input())\n    l = list(map(int, input().split()))\n    sm = 0\n    for x in range(len(l) - 1):\n        if l[x] > 0:\n            sm += l[x]\n        elif l[x] == 0 and sm != 0:\n            sm += 1\n    print(sm)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    T_ind = -1\n    for i in range(n - 1):\n        if arr[i] != 0:\n            T_ind = i\n            break\n    ans = 0\n    if T_ind != -1:\n        for i in range(T_ind, n - 1):\n            if arr[i] == 0:\n                ans += 1\n            else:\n                ans += arr[i]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    countz = 0\n    ok = 0\n    suma = 0\n    for i in range(n - 1):\n        suma += a[i]\n        if not ok and a[i] != 0:\n            ok = 1\n        if ok and a[i] == 0:\n            countz += 1\n    print(suma + countz)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a1 = []\n    a = list(map(int, input().split()))\n    for i in range(n):\n        if a[i] != 0 and i != n - 1:\n            a1 = a[i:-1]\n            break\n    m = a1.count(0)\n    h = sum(a) - a[-1]\n    if h == 0:\n        print(0)\n    else:\n        print(h + m)", "t = int(input())\nanswer = [0] * t\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    start = 0\n    while start < n and a[start] == 0:\n        start += 1\n    for j in range(start, n - 1):\n        answer[i] += a[j]\n        if a[j] == 0:\n            answer[i] += 1\nprint(*answer, sep='\\n')", "class MarkTheDustSweeper:\n\n    def findMinOperations(self, n, a):\n        sum = 0\n        zeros = 0\n        for i in range(n - 1):\n            sum += a[i]\n            if a[i] == 0 and sum > 0:\n                zeros += 1\n        sum += zeros\n        print(sum)\n        return\nT = int(input())\nwhile T:\n    T -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    MarkTheDustSweeper().findMinOperations(n, a)", "for _ in range(int(input())):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    ans = 0\n    d = 0\n    for i in range(n - 1):\n        if ls[i] > 0:\n            ans += ls[i]\n            if d == 0:\n                d += 1\n        elif d:\n            ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    pos = False\n    count = 0\n    for i in range(n - 1):\n        if l[i] != 0:\n            pos = True\n            count += l[i]\n        elif pos:\n            count += 1\n    print(count)", "for _ in range(int(input())):\n    x = int(input())\n    a = list(map(int, input().split()))\n    i = 0\n    ans = 0\n    while i < x and a[i] == 0:\n        i += 1\n    for j in range(i, x - 1):\n        if a[j]:\n            ans += a[j]\n        else:\n            ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    for i in range(n):\n        if arr[i] > 0:\n            r = i\n            break\n    y = arr[r:n - 1].count(0)\n    if arr[:n - 1].count(0) == n - 1:\n        print(0)\n    else:\n        print(str(y + sum(arr[:n - 1])))", "n = int(input())\nfor _ in range(n):\n    l = int(input())\n    arr = [*map(int, input().split())]\n    i = 0\n    ans = 0\n    while i < l and arr[i] == 0:\n        i += 1\n    for k in range(i, l - 1):\n        if arr[k]:\n            ans += arr[k]\n        else:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = range(int(input()))\n    l = list(map(int, input().split()))\n    for i in n:\n        if l[i] > 0:\n            break\n    l = l[i:-1]\n    print(l.count(0) + sum(l))", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    for j in range(n):\n        if l[j] > 0:\n            break\n    l = l[j:-1]\n    print(sum(l) + l.count(0))"]