["import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    cnt = [1] * 10\n    for num in arr:\n        cnt[num] = 0\n    k = sum(cnt)\n    return k * (k - 1) * 3\nfor _ in range(int(input())):\n    print(solve())", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = 10 - n\n    print(3 * (x - 1) * x)", "import math\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = 3 * (10 - n) * (10 - n - 1)\n    print(x)", "from sys import stdin, stdout\nimport sys\nsys.setrecursionlimit(100000)\n\ndef fxn(n, arr):\n    return 3 * (10 - n) * (9 - n)\n\ndef main():\n    t = int(input())\n    while t != 0:\n        n = int(input())\n        arr = [int(x) for x in input().split()]\n        print(fxn(n, arr))\n        t -= 1\nmain()", "import math\nn = int(input())\nfor i in range(n):\n    m = int(input())\n    s = input()\n    m = 10 - m\n    print(6 * math.comb(m, 2))", "n = int(input())\nresult = []\nfor i in range(n):\n    input()\n    l = 10 - len(input().split(' '))\n    m = 0\n    for j in range(l):\n        for k in range(l):\n            if j != k:\n                m += 3\n    result.append(m)\nfor i in result:\n    print(i)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    matrix = [int(num) for num in input().split()]\n    print(6 * (10 - n) * (10 - n - 1) // 2)", "a = int(input())\nb = []\nfor i in range(a):\n    f = int(input())\n    c = input().split(' ')\n    d = 10 - len(c)\n    e = d * (d - 1) * 3\n    b.append(e)\nfor item in b:\n    print(item)", "t = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    a1 = list(map(int, input().split()))\n    a = [0] * 10\n    kol = 0\n    for j in range(n):\n        a[a1[j]] = 1\n    for q in range(10):\n        if a[q] == 0:\n            kol += 1\n    if kol == 1:\n        ans.append(0)\n    else:\n        w = kol * (kol - 1) + kol * (kol - 1) * 2\n        ans.append(w)\nprint(*ans, sep='\\n')", "a = int(input())\nfor i in range(a):\n    n = int(input())\n    st = input()\n    n = 10 - n\n    print(3 * n * (n - 1))", "t = int(input())\nj = []\nfor c in range(t):\n    n = int(input())\n    i = list(map(int, input().split()))\n    if 1 <= n <= 8 and n == len(i):\n        real = 10 - len(i)\n        rightreal = real - 1\n        to = real * rightreal\n        j1 = to * 4 - to\n        j.append(j1)\nfor t in j:\n    print(t)", "import math\nn = int(input())\nfor k in range(n):\n    s = int(input())\n    m = list(map(int, input().split()))\n    x = 10 - len(m)\n    if x == 0 or x == 1:\n        print(0)\n    else:\n        print(int(6 * math.factorial(x) / (math.factorial(2) * math.factorial(x - 2))))", "t = int(input())\nwhile t >= 1:\n    c = []\n    n = int(input())\n    d = list(map(int, input().split()))\n    s = []\n    for i in range(10):\n        if not i in d:\n            s.append(i)\n    k = len(s)\n    factorial1 = 1\n    factorial2 = 1\n    for i in range(1, k + 1):\n        factorial1 *= i\n    for i in range(1, k - 1):\n        factorial2 *= i\n    res = factorial1 / (factorial2 * 2) * 6\n    print(int(res), ' ')\n    t -= 1", "t = int(input())\nwhile t:\n    t -= 1\n    n = 10 - int(input())\n    input()\n    print(3 * n * (n - 1))", "from math import comb\nfor _ in range(int(input())):\n    n = int(input())\n    _a = input()\n    print(comb(10 - n, 2) * 6)", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    p = list(map(int, input().split()))\n    a = 10 - len(p)\n    if a == 0 or a == 1:\n        print(0)\n    else:\n        print(int(6 * math.factorial(a) / (math.factorial(2) * math.factorial(a - 2))))", "def giaithua(n):\n    if n == 0:\n        return 1\n    if n == 1:\n        return 1\n    return n * giaithua(n - 1)\n\ndef tohop(k, n):\n    up = giaithua(n)\n    low = giaithua(k) * giaithua(n - k)\n    return up / low\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    count = 6 * tohop(2, 10 - n)\n    print(int(count))\n    t -= 1", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    p = list(map(int, input().split()))\n    a = 10 - len(p)\n    if a == 0 or a == 1:\n        print(0)\n    else:\n        print(int(6 * math.factorial(a) / (math.factorial(2) * math.factorial(a - 2))))", "def factorial(n):\n    pr = 1\n    for i in range(1, n + 1):\n        pr = pr * i\n    return pr\nt = int(input())\nsp = []\nfor i in range(1, t + 1):\n    n = int(input())\n    a = input().split()\n    count = 0\n    for i in range(len(a)):\n        a[i] = int(a[i])\n    for j in range(10):\n        if j not in a:\n            count += 1\n    g = int(factorial(count) / (factorial(count - 2) * factorial(2)))\n    k = int(g * (factorial(4) / (factorial(4 - 2) * factorial(2))))\n    sp.append(k)\nprint(*sp, sep='\\n')", "import math\nfor i in range(int(input())):\n    col_elem = int(input())\n    input()\n    print(math.comb(10 - col_elem, 2) * 6)", "for n in [*open(0)][1::2]:\n    k = 10 - int(n)\n    print(k * (k - 1) * 3)", "for _ in range(int(input())):\n    n = int(input())\n    num = list(map(int, input().split()))\n    a = 9 - n\n    b = a / 2 + 0.5\n    print(int(a * b * 6))", "t = int(input())\nfor i in range(t):\n    len = int(input())\n    l = input().split()\n    n = 10 - len\n    print((n ** 2 - n) // 2 * 6)", "tries = int(input(''))\nfor i in range(tries):\n    L = []\n    x = int(input(''))\n    L = list(map(int, input().split()))\n    B = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n    test = 0\n    for j in B:\n        if not j in L:\n            test += 1\n    print(test * 3 * (test - 1))", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    test = 0\n    l = list(map(int, input().split()))\n    a = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n    for i in a:\n        if not i in l:\n            test = test + 1\n    print(test * 3 * (test - 1))", "test_cases = int(input())\nresult = []\nfor case in range(test_cases):\n    excluded_n = int(input())\n    excluded = [int(number) for number in input().split(' ')]\n    rest = 10 - excluded_n\n    total = sum(range(0, rest))\n    print(total * 6)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = input()\n    print((10 - n) * (10 - n - 1) * 3)", "from math import comb\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(comb(10 - n, 2) * 6)", "for n in [*open(0)][1::2]:\n    k = 10 - int(n)\n    print(k * (k - 1) // 2 * 6)", "for n in [*open(0)][1::2]:\n    k = 10 - int(n)\n    print(k * (k - 1) * 3)", "from math import comb\nfor _ in range(int(input())):\n    n = int(input())\n    input()\n    print(6 * comb(10 - n, 2))", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    a = 10 - n\n    print(int(3 * math.factorial(a) / math.factorial(a - 2)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    L = list(map(int, input().split()))\n    print(3 * (10 - len(L)) * (10 - len(L) - 1))", "t = int(input())\ni = 1\nwhile i <= t:\n    a = int(input())\n    b = input()\n    if a == 0:\n        print(45 * 6)\n        i += 1\n    elif a == 1:\n        print(36 * 6)\n        i += 1\n    elif a == 2:\n        print(28 * 6)\n        i += 1\n    elif a == 3:\n        print(21 * 6)\n        i += 1\n    elif a == 4:\n        print(15 * 6)\n        i += 1\n    elif a == 5:\n        print(10 * 6)\n        i += 1\n    elif a == 6:\n        print(6 * 6)\n        i += 1\n    elif a == 7:\n        print(3 * 6)\n        i += 1\n    elif a == 8:\n        print(6)\n        i += 1", "try:\n    test = int(input())\n    while test > 0:\n        n = int(input())\n        inputList = [int(x) for x in input().split()]\n        rem = 10 - n - 1\n        ans = 6 * (rem * (rem + 1)) / 2\n        print(int(ans))\n        test -= 1\nexcept EOFError as e:\n    print(e)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(ii) for ii in input().split()]\n    print((10 - n) * (9 - n) * 3)", "testCases = int(input())\nfor testCase in range(testCases):\n    n = int(input())\n    listDigits = input().split(' ')\n    print((10 - n) * (9 - n) * 3, end='\\n')", "import math\nnum_tests = int(input())\nfor test in range(num_tests):\n    num_dig_omitted = int(input())\n    dig_omitted = [int(x) for x in input().split(' ')]\n    print(math.comb(10 - num_dig_omitted, 2) * 6)", "n = int(input())\nfor testcase in range(0, n):\n    digits_remember = int(input())\n    digits = input()\n    selection = (10 - digits_remember) * (9 - digits_remember) / 2\n    total_permutes = int(selection * 6)\n    print(total_permutes)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = 10 - n\n    print(m * (m - 1) * 3)\n    t -= 1", "def nCr(n, r):\n    return fact(n) / (fact(r) * fact(n - r))\n\ndef fact(n):\n    if n == 0:\n        return 1\n    res = 1\n    for i in range(2, n + 1):\n        res = res * i\n    return res\nt = int(input())\nc = 0\nans = []\nfor i in range(t):\n    n = int(input())\n    digit = list(map(int, input().split()))\n    total_dig = 10 - n\n    ans.append(int(nCr(total_dig, 2) * nCr(4, 2)))\nfor i in range(len(ans)):\n    print(ans[i])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    miss = 10 - len(arr)\n    miss -= 1\n    pairs = miss * (miss + 1) // 2\n    print(pairs * 6)", "for s in [*open(0)][1::2]:\n    k = 10 - int(s)\n    print(k * (k - 1) * 3)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    t = 0\n    for i in range(10 - n - 1):\n        c = i + 1\n        t += c * 6\n    print(t)", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    s = input()\n    q = 10 - m\n    if q == 0 or q == 1:\n        print(0)\n    else:\n        s = 0\n        for j in range(1, q):\n            s += j\n        e = s * 6\n    print(e)", "n = int(input())\nfor _ in range(n):\n    k = int(input())\n    k = 10 - k\n    s = input()\n    f = 0\n    for i in range(k):\n        f += 6 * i\n    print(f)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    m = 10 - n\n    ans = m * (m - 1) * 3\n    print(ans)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    for i in range(1, 10 - n):\n        s += i\n    print(s * 6)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    import math\n    print(math.comb(10 - n, 2) * math.comb(4, 2))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = 10 - n\n    print(x * (x - 1) * 3)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = 10 - n\n    print(3 * b * (b - 1))", "for i in range(int(input())):\n    n = int(input())\n    c = input()\n    print((10 - n) * (9 - n) * 3)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    numbers = input()\n    res = int((10 - n) * (10 - n - 1) / 2)\n    print(6 * res)", "import math as m\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(m.comb(10 - n, 2) * 6)", "from math import ceil\nimport sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_arr():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = get_arr()\n    n = 10 - n\n    print(int(6 * (n * (n - 1)) / 2))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n > 8:\n        print(0)\n    else:\n        print(3 * (10 - n) * (10 - n - 1))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print((10 - n) * (10 - n - 1) * 3)", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(6 * math.factorial(10 - n) // (math.factorial(10 - n - 2) * 2))", "for _ in range(int(input())):\n    n = int(input())\n    a = set(map(int, input().split()))\n    k = 10 - len(a)\n    print(3 * k * (k - 1))", "for i in range(int(input())):\n    n = int(input())\n    values = list(map(int, input().split()))\n    out = 0\n    for k in range(0, 10):\n        if k not in values:\n            out += 1\n    print(3 * out * (out - 1))", "t = int(input())\nl = [0, 216, 168, 126, 90, 60, 36, 18, 6]\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    print(l[n])", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    vals = input().split()\n    cantake = 10 - len(vals)\n    ans = 6 * cantake * (cantake - 1) // 2\n    print(ans)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    input()\n    print(3 * (10 - n) * (9 - n))", "import os\nimport math\nimport collections\nimport bisect\nimport functools\nimport itertools\nimport heapq\n\ndef solve(n):\n    n = 10 - n\n    x = n * (n - 1) // 2\n    return x * 6\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(n))", "try:\n    for _ in range(int(input())):\n        n = int(input())\n        lst = list(map(int, input().split()))\n        print((10 - n) * (10 - n - 1) * 3)\nexcept Exception as e:\n    print(e)", "for _ in range(int(input())):\n    n = int(input())\n    lis = input()\n    ans = 0\n    val = 10 - n\n    for i in range(val):\n        for j in range(i + 1, val):\n            ans += 6\n    print(ans)", "t = eval(input())\nimport math\nfor i in range(t):\n    n = eval(input())\n    a = list(map(int, input().split()))\n    n = 10 - n\n    a = math.comb(n, 2)\n    print(a * 6)", "import math\nimport collections\nimport bisect\nimport heapq\nfrom collections import deque\nfrom math import sqrt, ceil, floor\n\ndef inp_arr():\n    return list(map(int, input().strip().split(' ')))\n\ndef inp_str_arr():\n    return list(input().strip().split(' '))\n\ndef inp_str():\n    return input()\n\ndef solve():\n    (n,) = inp_arr()\n    a = inp_arr()\n    mp = collections.defaultdict(int)\n    for x in a:\n        mp[x] = 1\n    m = 10 - n\n    print(m * (m - 1) * 3)\n(tt,) = inp_arr()\nfor t in range(tt):\n    solve()", "import sys\nfrom collections import *\nsys.setrecursionlimit(10 ** 5)\nitr = (line for line in sys.stdin.read().strip().split('\\n'))\nINP = lambda : next(itr)\n\ndef ni():\n    return int(INP())\n\ndef nl():\n    return [int(_) for _ in INP().split()]\nimport math\n\ndef solve(n, a):\n    use = 10 - n\n    return int(use * (use - 1) * (1 / 2) * math.factorial(4) * (1 / 4))\nt = ni()\nfor case in range(t):\n    n = ni()\n    a = nl()\n    print(solve(n, a))", "import math\nn = int(input())\nfor i in range(n):\n    m = int(input())\n    a = list(map(int, input().split()))\n    print(int(math.factorial(10 - m) / math.factorial(2) / math.factorial(8 - m) * 6))", "import math\nfor jj in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    ans = math.comb(10 - n, 2) * 6\n    print(ans)", "from math import comb\nimport sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().strip().split()))\n    l = list(set(l))\n    print(comb(10 - len(l), 2) * 6)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = (10 - n) * (9 - n) * 3\n    print(s)", "def fact(n):\n    s = 1\n    for i in range(1, n + 1):\n        s = s * i\n    return s\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    q = 10 - n\n    t = (q - 1) * q // 2\n    print(t * 6)", "t = int(input())\nfor t0 in range(t):\n    c = int(input())\n    h = input()\n    c = 10 - c\n    n = c * (c - 1)\n    r = n * 3\n    print(r)", "t = int(input())\nfor t1 in range(t):\n    n = int(input())\n    a = input()\n    k = 10 - n\n    print(3 * k * (k - 1))", "n = int(input())\nfor i in range(n):\n    b = int(input())\n    input()\n    print(3 * (10 - b) * (10 - b - 1))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = 10 - len(a)\n    kop = k * (k - 1) / 2\n    print(int(kop * 6))", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(6 * math.comb(10 - n, 2))", "for _ in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    variants = 10 - len(b)\n    print(variants * (variants - 1) * 3)", "t = int(input())\n\ndef factorial(n):\n    res = 1\n    for i in range(2, n + 1):\n        res *= i\n    return res\nfor _ in range(t):\n    n = int(input())\n    unused = set(map(int, input().split()))\n    used = set([i for i in range(10) if i not in unused])\n    k = len(used)\n    print(k * (k - 1) * 3)", "def fxn(n):\n    return 3 * (9 - n) * (10 - n)\nn = int(input())\nfor i in range(n):\n    a = int(input())\n    b = len(list(map(int, input().split())))\n    print(fxn(b))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    hav = 10 - n\n    print(3 * (hav * (hav - 1)))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = list(map(int, input().split()))\n    c = 0\n    p = []\n    for i in range(10):\n        p.append(i)\n    for k in p:\n        if k not in x:\n            c += 1\n    d = c * (c - 1) * 3\n    print(d)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    n = 10 - n\n    print(n * (n - 1) // 2 * 6)", "a = int(input())\nfor i in range(a):\n    b = int(input())\n    c = input()\n    d = (10 - b) * (9 - b) // 2 * 6\n    print(d)", "for tc in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print((10 - n) * (10 - n - 1) // 2 * 6)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    input()\n    q = 10 - n\n    print(q * (q - 1) * 3)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(6 * (10 - n) * (9 - n) // 2)", "for a in range(int(input())):\n    n = int(input())\n    ar = input()\n    n = 10 - n\n    print(n * (n - 1) * 3)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = [int(x) for x in list(input().split(' '))]\n    nn = 10 - n\n    print(nn * (nn - 1) // 2 * 6)", "def main():\n    t = int(input())\n    for _ in range(t):\n        k = int(input())\n        arr = input().split()\n        res = (10 - k) * (9 - k) * 3\n        print(res)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    val = 10 - n\n    ans = val * (val - 1) // 2 * 6\n    print(ans)", "fac = [1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800]\nfor _ in range(int(input())):\n    n = int(input())\n    num = list(map(int, input().split()))\n    ans = (10 - n) * (9 - n) // 2\n    ans = ans * 6\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    def factorial(n):\n        if n == 0:\n            return 1\n        else:\n            return n * factorial(n - 1)\n    value = 3 * factorial(10 - n) / factorial(8 - n)\n    print(int(value))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    val = 6\n\n    def nCr(n, r):\n        return fact(n) / (fact(r) * fact(n - r))\n\n    def fact(n):\n        if n == 0:\n            return 1\n        res = 1\n        for i in range(2, n + 1):\n            res = res * i\n        return res\n    d = nCr(10 - n, 2)\n    print(int(val * d))", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    notIn = 10 - len(a)\n    c = notIn * (notIn - 1) / 2\n    print(int(c * 6))", "from itertools import combinations\nimport math\nT = int(input())\nfor i in range(T):\n    N_not_used = int(input())\n    lst_not_used = list(map(int, input().split()))\n    print(math.comb(10 - N_not_used, 2) * 6)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    n = 10 - n\n    ans = 6 * (n * (n - 1) / 2)\n    print(int(ans))"]