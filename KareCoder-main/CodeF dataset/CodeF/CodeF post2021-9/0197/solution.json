["n = int(input())\nfor p in range(n):\n    l = int(input())\n    for i in range(l):\n        if i == 0:\n            print('1')\n        else:\n            print('1 ' + '0 ' * (i - 1) + '1')", "for n in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * i + '1 ' for i in range(n - 1)))", "for _ in range(int(input())):\n    nn = int(input())\n    print('1')\n    for i in range(2, nn + 1):\n        print('1' + ' 0' * (i - 2) + ' 1')", "for _ in range(int(input())):\n    n = int(input())\n    print('1')\n    for i in range(2, n + 1):\n        print('1' + ' 0' * (i - 2) + ' 1')", "for case in range(int(input())):\n    num = int(input())\n    for f in range(1, num + 1):\n        if f == 1:\n            print('1')\n        elif f == 2:\n            print('1 1')\n        else:\n            print('1 ' + '0 ' * (f - 2) + '1')", "import sys\n\ndef run():\n    n = int(sys.stdin.readline().strip())\n    print(1)\n    for i in range(2, n + 1):\n        lanterns = ['1'] + ['0'] * (i - 2) + ['1']\n        print(' '.join(lanterns))\nt = int(input())\nfor _ in range(t):\n    run()", "for i in range(int(input())):\n    for i in range(int(input())):\n        if i == 0:\n            print('1')\n        elif i == 1:\n            print('1 1')\n        else:\n            print('1 ' + '0 ' * (i - 1) + '1')", "for n in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * i + '1 ' for i in range(n - 1)))", "for _ in range(int(input())):\n    n = int(input())\n    print(1)\n    for i in range(n - 1):\n        print(1, '0 ' * i + '1')", "for i in range(int(input())):\n    leng = int(input())\n    for i in range(1, leng + 1):\n        if i != 1:\n            print(' '.join([str(1)] + [str(0)] * (i - 2) + [str(1)]))\n        else:\n            print(1)", "def PP(n):\n    print(1)\n    if n > 1:\n        for i in range(n - 1):\n            l = ['1'] + ['0' for x in range(i)] + ['1']\n            print(' '.join(l))\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    PP(n)", "t = int(input())\nfor t1 in range(t):\n    n = int(input())\n    for i in range(1, n + 1):\n        if i <= 2:\n            print(' '.join(['1'] * i))\n        else:\n            print('1 ' + ' '.join(['0'] * (i - 2)) + ' 1')", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    for i in range(1, n + 1):\n        if i == 1:\n            print(1)\n            continue\n        print('1 ' + '0 ' * (i - 2) + '1')", "k = int(input())\nfor l in range(k):\n    item = int(input())\n    if item == 1:\n        print('1')\n    elif item == 2:\n        print('1')\n        print('1 1')\n    else:\n        print('1')\n        print('1 1')\n        for x in range(1, item - 1):\n            string = '1 ' + ' '.join(['0'] * x) + ' 1'\n            print(string)", "for _ in range(int(input())):\n    vmp_n = int(input())\n    print('1')\n    for qwds in range(2, vmp_n + 1):\n        print('1' + ' 0' * (qwds - 2) + ' 1')\n        continue", "t = int(input())\n\ndef printModule(n: int):\n    if n == 1:\n        print(1)\n        return\n    st = '1'\n    st += ' 0' * (n - 2)\n    st += ' 1'\n    print(st)\nfor _ in range(t):\n    n = int(input())\n    for i in range(1, n + 1):\n        printModule(i)", "def solve():\n    t = int(input())\n    result = []\n    for _ in range(t):\n        n = int(input())\n        pyramid = ['1']\n        if n == 1:\n            result.append(pyramid)\n            continue\n        for i in range(1, n):\n            pyramid.append('1' + ' 0' * (i - 1) + ' 1')\n        result.append(pyramid)\n    return result\nresult = solve()\nfor pyramid in result:\n    [print(floor) for floor in pyramid]", "import sys\nfrom collections import defaultdict\nsys.setrecursionlimit(1 << 30)\n\ndef listInput():\n    return list(map(int, input().split()))\n\ndef integerInput():\n    return int(input())\n\ndef stringInput():\n    return list(input())\n\ndef solve(array):\n    array.sort()\n    res = float('inf')\n    n = len(array)\n    for i in range(1, n - 1):\n        left = array[i] - array[i - 1]\n        right = array[i + 1] - array[i]\n        res = min(res, left + right)\n    return res\nfor _ in range(integerInput()):\n    n = integerInput()\n    print('1')\n    if n == 1:\n        continue\n    print('1 1')\n    for i in range(3, n + 1):\n        zeros = '0 ' * (i - 2)\n        print('1 ' + zeros + '1')", "t = int(input())\nfor testcase in range(t):\n    n = int(input())\n    for i in range(n):\n        line = '1 '\n        if i > 1:\n            line += '0 ' * (i - 1) + '1'\n        elif i == 1:\n            line += '1'\n        print(line)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    for i in range(1, n + 1):\n        ans = ['0'] * i\n        ans[0] = '1'\n        ans[-1] = '1'\n        print(' '.join(ans))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 1:\n        print('1')\n        continue\n    print('1')\n    for i in range(2, n + 1):\n        print('1', end=' ')\n        if i - 2 > 0:\n            print('0 ' * (i - 2), end='')\n        print('1')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    for j in range(1, n + 1):\n        if j == 1:\n            print('1')\n        elif j == 2:\n            print('1 ' + '1')\n        else:\n            print('1 ' + '0 ' * (j - 2) + '1')", "for i in range(int(input())):\n    n = int(input())\n    for j in range(1, n + 1):\n        if j == 1:\n            print('1')\n        elif j == 2:\n            print('1 1')\n        else:\n            print('1 ' + '0 ' * (j - 2) + '1')", "for a in range(int(input())):\n    n = int(input())\n    for b in range(1, n + 1):\n        if b == 1:\n            print('1 ')\n        else:\n            print('1 ' + '0 ' * (b - 2) + '1 ')", "n = int(input())\nfor i in range(n):\n    l = int(input())\n    lst = []\n    for j in range(1, l + 1):\n        temp = ['0'] * j\n        lst.append(temp)\n    for m in range(len(lst)):\n        lst[m][0] = '1'\n        lst[m][-1] = '1'\n    for m in lst:\n        print(' '.join(m))", "for _ in range(int(input())):\n    n = int(input())\n    print('1')\n    for i in range(2, n + 1):\n        print('1' + ' 0' * (i - 2) + ' 1')", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    for i in range(n):\n        if i == 0:\n            print(str(1))\n        elif i == 1:\n            print(str('1 1'))\n        else:\n            print(str(1) + str(' 0') * (i - 1) + str(' ') + str(1))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    print('1')\n    for i in range(2, n + 1):\n        print('1' + ' 0' * (i - 2) + ' 1')", "import itertools\nimport math\nimport sys\nfor _ in range(int(input())):\n    num = int(input())\n    for i in range(1, num + 1):\n        if i == 1:\n            print('1')\n            continue\n        if i == 2:\n            print('1 1')\n            continue\n        else:\n            print('1 ', end='')\n            print('0 ' * (i - 2), end='')\n            print('1')", "def solve():\n    n = int(input())\n    ans = ['1']\n    for i in range(2, n + 1):\n        e = ['1'] + ['0'] * (i - 2) + ['1']\n        ans.append(' '.join(e))\n    return '\\n'.join(ans)\nt = int(input())\nans = []\nwhile t:\n    ans.append(str(solve()))\n    t -= 1\nprint('\\n'.join(ans))", "for _ in range(int(input())):\n    n = int(input())\n    print(1)\n    for i in range(n - 1):\n        print(1, '0 ' * i + '1')", "for _ in range(int(input())):\n    hemanth = int(input())\n    print('1')\n    for ka in range(2, hemanth + 1):\n        print('1' + ' 0' * (ka - 2) + ' 1')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 1:\n        print(1)\n        continue\n    elif n == 2:\n        print(1)\n        print(1, 1)\n        continue\n    else:\n        print(1)\n        print(1, 1)\n        for i in range(2, n):\n            print(1, end=' ')\n            print('0 ' * (i - 1), end='')\n            print(1)", "for _ in range(int(input())):\n    n = int(input())\n    print('1')\n    for i in range(2, n + 1):\n        print('1' + ' 0' * (i - 2) + ' 1')", "def solution(n):\n    for i in range(n):\n        if i == 0:\n            print(1)\n        elif i == 1:\n            print(1, 1)\n        else:\n            s = '1 '\n            s += '0 ' * (i - 1)\n            s += '1'\n            print(s)\nt = int(input())\nwhile t:\n    n = int(input())\n    solution(n)\n    t -= 1", "for _ in range(int(input())):\n    x = int(input())\n    for i in range(1, x + 1):\n        p = ''\n        if i == 1:\n            p += '1'\n        else:\n            p += '1 '\n            p += '0 ' * (i - 2)\n            p += '1'\n        print(p)", "for _ in range(int(input())):\n    n = int(input())\n    print('1')\n    for i in range(2, n + 1):\n        print('1' + ' 0' * (i - 2) + ' 1')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(1)\n    if n > 1:\n        for i in range(n - 1):\n            print(1, '0 ' * i, end='')\n            print(1)", "for _ in range(int(input())):\n    n = int(input())\n    print(1)\n    for i in range(n - 1):\n        print('1 ' + '0 ' * i + '1')", "for _ in range(int(input())):\n    n = int(input())\n    print(1)\n    for i in range(n - 1):\n        print('1 ' + '0 ' * i + '1')", "for _ in range(int(input())):\n    n = int(input())\n    print(1)\n    for i in range(n - 1):\n        print(1, '0 ' * i + '1')", "for _ in range(int(input())):\n    n = int(input())\n    print(1)\n    for i in range(n - 1):\n        print('1 ' + '0 ' * i + '1')", "for nbd in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * i + '1 ' for i in range(nbd - 1)))", "for _ in range(int(input())):\n    n = int(input())\n    print('1')\n    for x in range(1, n):\n        print('1' + ' 0' * (x - 1) + ' 1')", "for _ in range(int(input())):\n    nnn = int(input())\n    print('1')\n    for i in range(2, nnn + 1):\n        print('1' + ' 0' * (i - 2) + ' 1')", "for n in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * i + '1 ' for i in range(n - 1)))", "for n in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * i + '1 ' for i in range(n - 1)))", "for _ in range(int(input())):\n    n = int(input())\n    print(1, *['1 ' + '0 ' * i + '1 ' for i in range(n - 1)])", "def brighter_rooms(floors):\n    for i in range(1, floors + 1):\n        if i <= 2:\n            print('1 ' * i)\n        else:\n            temp = '0 ' * (i - 2)\n            temp = '1 ' + temp\n            temp += '1'\n            print(temp)\nint_input = int(input())\nfor i in range(int_input):\n    floors = int(input())\n    brighter_rooms(floors)", "for t in range(int(input())):\n    n = int(input())\n    print(1)\n    for i in range(2, n + 1):\n        print(1, '0 ' * (i - 2), 1)", "for i in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(1)\n    elif n == 2:\n        print(1)\n        print(1, 1)\n    else:\n        print(1)\n        print(1, 1)\n        j = 0\n        while j < n - 2:\n            print(1, end=' ')\n            print('0 ' * (j + 1), end='')\n            print(1)\n            j += 1", "test_cases = int(input())\nfor case in range(test_cases):\n    floors = int(input())\n    if floors <= 2:\n        for i in range(1, floors + 1):\n            print(('1 ' * i)[:-1])\n    else:\n        for i in range(1, 3):\n            print(('1 ' * i)[:-1])\n        for i in range(3, floors + 1):\n            print('1 ' + ('0 ' * (i - 2))[:-1] + ' 1')", "for n in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * i + '1 ' for i in range(n - 1)))", "for _ in range(int(input())):\n    n = int(input())\n    for i in range(n):\n        if i == 0:\n            print('1')\n        else:\n            l = list('1' + '0' * (i + 1 - 2) + '1')\n            print(' '.join(l))", "for i in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(1)\n    elif n == 2:\n        print(1)\n        print(1, 1)\n    else:\n        print(1)\n        print(1, 1)\n        c = 1\n        for i in range(1, n - 1):\n            print(1, '0 ' * i + str(1))", "for n in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * i + '1 ' for i in range(n - 1)))", "for _ in range(int(input())):\n    n = int(input())\n    print('1')\n    for i in range(2, n + 1):\n        print('1' + ' 0' * (i - 2) + ' 1')", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print('1')\n        continue\n    if n == 2:\n        print('1')\n        print('1 1')\n        continue\n    else:\n        out = ['1', '1 1']\n        for x in range(3, n + 1):\n            tmp_s = ' '.join(['0' for z in range(x - 2)])\n            out.append('1 ' + tmp_s + ' 1')\n        for x in out:\n            print(x)", "n = int(input())\n\ndef help(x):\n    ans = '1'\n    if x == 1:\n        return ans\n    for i in range(2, x + 1):\n        ans2 = '1'\n        for j in range(i - 2):\n            ans2 += ' 0'\n        ans2 += ' 1'\n        ans = ans + '\\n' + ans2\n    return ans\noutput = []\nfor i in range(n):\n    x = int(input())\n    output.append(help(x))\nfor out in output:\n    print(out)", "for _ in range(int(input())):\n    n = int(input())\n    print('1')\n    for i in range(2, n + 1):\n        print('1' + ' 0' * (i - 2) + ' 1')", "for n in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * i + '1 ' for i in range(n - 1)))", "for n in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * i + '1 ' for i in range(n - 1)))", "for n in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * i + '1 ' for i in range(n - 1)))", "t = int(input().strip())\nfor _ in range(t):\n    n = int(input().strip())\n    for i in range(n):\n        if i == 0:\n            print(1)\n            continue\n        re = '1 ' + '0 ' * (i + 1 - 2) + '1'\n        print(re)", "for _ in range(int(input())):\n    n = int(input())\n    print(1)\n    for i in range(n - 1):\n        print('1 ' + '0 ' * i + '1')", "for n in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * i + '1 ' for i in range(n - 1)))", "for n in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * i + '1 ' for i in range(n - 1)))", "for n in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * i + '1 ' for i in range(n - 1)))", "for n in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * i + '1 ' for i in range(n - 1)))", "for p in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * j + '1 ' for j in range(p - 1)))", "for W in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * i + '1 ' for i in range(W - 1)))", "for n in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * i + '1 ' for i in range(n - 1)))", "for N in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * j + '1 ' for j in range(N - 1)))", "for n in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * i + '1 ' for i in range(n - 1)))", "for inp_n in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * i + '1 ' for i in range(inp_n - 1)))", "for n in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * i + '1 ' for i in range(n - 1)))", "for nbr in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * i + '1 ' for i in range(nbr - 1)))", "for nice in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * itadori + '1 ' for itadori in range(nice - 1)))", "for n in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * i + '1 ' for i in range(n - 1)))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    for i in range(1, n + 1):\n        print(' '.join(['1' if x == 0 or x == i - 1 else '0' for x in range(i)]))", "for n in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * i + '1 ' for i in range(n - 1)))", "for name in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * i + '1 ' for i in range(name - 1)))", "for _ in range(int(input())):\n    n = int(input())\n    print('1')\n    for i in range(2, n + 1):\n        print('1' + ' 0' * (i - 2) + ' 1')", "for _ in range(int(input())):\n    n = int(input())\n    print(1)\n    for i in range(n - 1):\n        print('1 ' + '0 ' * i + '1')", "for n in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * i + '1 ' for i in range(n - 1)))", "for n in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * i + '1 ' for i in range(n - 1)))", "for n in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * i + '1 ' for i in range(n - 1)))", "for nbr in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * i + '1 ' for i in range(nbr - 1)))", "for n in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * i + '1 ' for i in range(n - 1)))", "for n in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * i + '1 ' for i in range(n - 1)))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    for i in range(n):\n        if i == 0:\n            print('1')\n        elif i == 1:\n            print('1 1')\n        else:\n            print(f\"1 {'0 ' * (i - 1)}1\")", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print('1')\n        continue\n    print('1')\n    print('1 1')\n    for i in range(1, n - 1):\n        s = '1'\n        for j in range(i):\n            s += ' 0'\n        s += ' 1'\n        print(s)", "import sys\nimport threading\nfrom functools import lru_cache\n\ndef main():\n    T = int(input())\n    for _ in range(T):\n        n = int(input())\n        for i in range(n):\n            arr = ['0'] * (i + 1)\n            arr[0] = '1'\n            arr[-1] = '1'\n            print(' '.join(arr))\nsys.setrecursionlimit(1 << 30)\nthreading.stack_size(1 << 27)\nmain_thread = threading.Thread(target=main)\nmain_thread.start()\nmain_thread.join()", "for n in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * i + '1 ' for i in range(n - 1)))", "for _ in range(int(input())):\n    n = int(input())\n    print('1')\n    for i in range(2, n + 1):\n        print('1' + ' 0' * (i - 2) + ' 1')", "for n in [*map(int, open(0))][1:]:\n    print(1, *('1 ' + '0 ' * i + '1 ' for i in range(n - 1)))", "t = int(input())\nfor ind in range(t):\n    n = int(input())\n    print('1')\n    for i in range(1, n):\n        print('1 ' + (i - 1) * '0 ' + '1')", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    for i in range(n):\n        s = ['0' for i in range(i + 1)]\n        s[0] = '1'\n        s[-1] = '1'\n        print(' '.join(s))\n    t -= 1", "def solve():\n    n = int(input())\n    a = []\n    i = 1\n    tem = ['0']\n    while i <= n:\n        x = tem * i\n        if len(x) == 1:\n            x[0] = 1\n        elif len(x) == 2:\n            (x[0], x[1]) = [1, 1]\n        else:\n            (x[0], x[-1]) = (1, 1)\n        a.append(x)\n        i += 1\n    for i in a:\n        print(' '.join((str(ini) for ini in i)))\nfor t in range(0, int(input())):\n    solve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 1:\n        print('1')\n    else:\n        print('1')\n        for i in range(1, n):\n            mylist = []\n            mylist.append(1)\n            for j in range(1, i):\n                mylist.append(0)\n            mylist.append(1)\n            print(' '.join(map(str, mylist)))"]