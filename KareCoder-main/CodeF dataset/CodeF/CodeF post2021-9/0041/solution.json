["for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    o = 0\n    e = 0\n    for i in l:\n        if i % 2 == 0:\n            e += 1\n        else:\n            o += 1\n    if o > e:\n        print(e)\n    else:\n        print(o)", "T = int(input())\nwhile T:\n    N = int(input())\n    li = list(map(int, input().split()))\n    c = 0\n    for ele in li:\n        if ele % 2:\n            c += 1\n    print(min(c, N - c))\n    T -= 1", "def solve():\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    ec = 0\n    oc = 0\n    for ele in arr:\n        if ele % 2 == 0:\n            ec += 1\n        else:\n            oc += 1\n    print(min(ec, oc))\nt = int(input())\nfor i in range(t):\n    solve()", "import sys\n\ndef main():\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10 ** 6)\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        l = list(map(int, input().split()))\n        pair = len([x for x in l if x % 2 == 1])\n        print(min(pair, len(l) - pair))\nmain()", "def solve(n, arr):\n    c = 0\n    for i in range(n):\n        if arr[i] % 2 == 0:\n            c += 1\n    return min(c, n - c)\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(solve(n, arr))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    cnt = 0\n    for x in a:\n        if x % 2 == 1:\n            cnt += 1\n    if cnt > n - cnt:\n        print(n - cnt)\n    else:\n        print(cnt)", "def minNums(numbers):\n    even = 0\n    odd = 0\n    for num in numbers:\n        if num % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    if odd < even:\n        return odd\n    else:\n        return even\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    numbers = list(map(int, input().split()))\n    print(minNums(numbers))", "t = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    uneven_count = sum((e % 2 for e in a))\n    even_count = len(a) - uneven_count\n    ans.append(min(uneven_count, even_count))\nfor i in ans:\n    print(i)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    for x in arr:\n        if x % 2 == 0:\n            ans += 1\n    print(min(ans, n - ans))", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        if a[i] & 1:\n            ans += 1\n    ans = min(ans, n - ans)\n    print(ans)\nt = int(input())\nfor _ in range(t):\n    solve()", "t = int(input())\nwhile t:\n    n = int(input())\n    l = list(map(int, input().rstrip().split()))\n    count = 0\n    for i in l:\n        if i & 1:\n            count += 1\n    if n > 2 * count:\n        print(count)\n    else:\n        print(n - count)\n    t -= 1", "def min_seq(n, l):\n    e = 0\n    o = 0\n    for i in l:\n        if i % 2 == 0:\n            e += 1\n        else:\n            o += 1\n    return e if o > e else o\ntc = int(input())\nfor i in range(tc):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ANS = min_seq(n, l)\n    print(ANS)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (e, o) = (0, 0)\n    for i in a:\n        if i & 1:\n            o += 1\n        else:\n            e += 1\n    m = min(e, o)\n    print(m)", "n = int(input())\nfor i in range(n):\n    t = input()\n    s = list(map(int, input().split()))\n    so = len(list(filter(lambda x: x % 2 == 1, s)))\n    se = len(s) - so\n    print(min(se, so))", "def min_elimination(n, arr):\n    countOdd = 0\n    for i in range(n):\n        if arr[i] % 2:\n            countOdd += 1\n    return min(countOdd, n - countOdd)\nfor i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    res = min_elimination(n, arr)\n    print(res)", "for i in range(int(input())):\n    length = int(input())\n    array = input().split()\n    even = sum((1 - int(n) % 2 for n in array))\n    odd = len(array) - even\n    print(even if even <= odd else odd)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    o = 0\n    e = 0\n    for x in l:\n        if x % 2:\n            o += 1\n        else:\n            e += 1\n    print(min(e, o))", "for i in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    odd = even = 0\n    for i in b:\n        if i % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    print(min(odd, even))", "def isEven(n):\n    return n % 2 == 0\n\ndef Solve(N, A):\n    cnt = 0\n    for i in range(N):\n        if A[i] & 1:\n            cnt += 1\n    return min(N - (N - cnt), N - cnt)\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    print(Solve(N, A))", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    o = len(list(filter(lambda x: x % 2 != 0, l)))\n    e = len(l) - o\n    if o > e:\n        print(e)\n    else:\n        print(o)", "for i in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    odd = even = 0\n    for i in b:\n        if i % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    print(min(odd, even))", "for i in range(int(input())):\n    n = int(input())\n    a = sum((int(i) % 2 for i in input().split()))\n    b = n - a\n    print(min(a, b))", "i = int(input())\nfor x in range(i):\n    k = int(input())\n    l = [int(y) % 2 for y in input().split()]\n    m = l.count(0)\n    n = l.count(1)\n    if m > n:\n        print(n)\n    else:\n        print(m)", "def count(arr):\n    e = 0\n    o = 0\n    for i in arr:\n        if int(i) % 2 == 0:\n            e += 1\n        else:\n            o += 1\n    return min(e, o)\nn = int(input())\nfor i in range(n):\n    a = int(input())\n    x = input()\n    x = x.split(' ')\n    print(count(x))", "import sys\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_num():\n    return int(sys.stdin.readline().strip())\n\ndef solve():\n    n = get_num()\n    arr = get_list()\n    odd = len([i for i in arr if i & 1 == 1])\n    even = n - odd\n    print(min(even, odd))\ncases = int(input())\nfor i in range(cases):\n    solve()", "for f in range(int(input())):\n    f = input()\n    array = map(int, input().split())\n    even = 0\n    odd = 0\n    for a in array:\n        if a % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    print(min(even, odd))", "for _ in [0] * int(input()):\n    n = int(input())\n    a = [*map(int, input().split())]\n    b = len([i for i in a if i % 2])\n    print(min(b, n - b))", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))[:n]\n    lista_impares = [i for i in a if i % 2 == 1]\n    impares = len(lista_impares)\n    pares = len(a) - impares\n    print(pares) if pares < impares else print(impares)", "I = lambda : map(int, input().split())\n(t,) = I()\nfor i in range(t):\n    (n,) = I()\n    l = I()\n    e = sum([1 if x % 2 == 0 else 0 for x in l])\n    print(min(e, n - e))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    odd = even = 0\n    for num in a:\n        if num & 1:\n            odd += 1\n        else:\n            even += 1\n    print(min(odd, even))", "m = int(input())\nfor i in range(m):\n    n = int(input())\n    m = list(map(int, input().split()))\n    z = [int(0.0), int(0.0)]\n    for i in m:\n        z[i % 2] += 1\n    print(min(z))", "def main():\n    input_number_test_case = input()\n    number_test_cases = int(input_number_test_case)\n    for index in range(number_test_cases):\n        number_items = int(input())\n        items = input()\n        pairs = [item for item in items.split(' ') if int(item) % 2 == 0]\n        print(number_items - len(pairs) if int(number_items / 2) < len(pairs) else len(pairs))\nmain()", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    A = list(map(lambda x: int(x) % 2, input().strip().split(' ')))\n    print(min(A.count(1), A.count(0)))", "def solve():\n    cc = 0\n    x = int(input())\n    l = list(map(int, input().split()))\n    for i in l:\n        if i % 2:\n            cc += 1\n    return min(cc, x - cc)\nres = []\nn = int(input())\nfor i in range(n):\n    r = solve()\n    res.append(r)\nfor i in res:\n    print(i)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a_list = list(map(int, input().split()))\n    odds = len([a for a in a_list if a % 2 == 1])\n    evens = len([a for a in a_list if a % 2 == 0])\n    print(min(odds, evens))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    ceven = 0\n    codd = 0\n    for i in a:\n        if i & 1 == 1:\n            codd += 1\n        else:\n            ceven += 1\n    print(min(codd, ceven))\n    t -= 1", "def beatOdds():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        l1 = list(map(int, input().split()))\n        even = 0\n        odd = 0\n        for j in l1:\n            if j % 2 == 0:\n                even += 1\n            else:\n                odd += 1\n        if even == n or odd == n:\n            print(0)\n        else:\n            print(min(even, odd))\nbeatOdds()", "num_test_cases = input()\nfor _ in range(int(num_test_cases)):\n    _ = input()\n    nums = input()\n    nums = nums.split(' ')\n    nums = [int(i) % 2 for i in nums]\n    odd = sum(nums)\n    if odd > len(nums) // 2:\n        print(len(nums) - odd)\n    else:\n        print(odd)", "for _ in range(int(input())):\n    a = int(input())\n    li = tuple(map(int, input().split()))\n    dem = 0\n    if li[0] % 2:\n        for i in li[1:]:\n            if i % 2 == 0:\n                dem += 1\n    else:\n        for i in li[1:]:\n            if i % 2:\n                dem += 1\n    if dem > len(li) - dem:\n        print(len(li) - dem)\n    else:\n        print(dem)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    for i in l:\n        if i & 1 == 1:\n            c += 1\n    print(min(c, n - c))", "tests = int(input())\nfor t in range(tests):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    odds = sum([1 for elem in nums if elem % 2 == 1])\n    print(min(n - odds, odds))", "tests1 = int(input())\nfor t in range(tests1):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    odds = sum([1 for elem in nums if elem % 2 == 1])\n    print(min(n - odds, odds))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    odds = sum([1 for elem in nums if elem % 2 == 1])\n    print(min(n - odds, odds))", "t = int(input())\nfor i in range(t):\n    l = int(input())\n    c = 0\n    lst = list(map(int, input().split()))\n    for i in lst:\n        if i % 2 != 0:\n            c += 1\n    if l == c:\n        print(0)\n    else:\n        print(min(c, l - c))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (odd, even) = (0, 0)\n    for i in a:\n        if i % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    print(min(odd, even))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = list(map(int, input().split()))\n    ec = 0\n    oc = 0\n    for i in l:\n        if i % 2 == 0:\n            ec += 1\n        else:\n            oc += 1\n    if ec == 0 or oc == 0:\n        print(0)\n    elif ec > oc:\n        print(oc)\n    else:\n        print(ec)\n    t = t - 1", "def solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    even = 0\n    for i in arr:\n        if i % 2 == 0:\n            even = even + 1\n    return min(even, n - even)\nfor i in range(int(input())):\n    print(solve())", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nn = inp()\nfor i in range(n):\n    elem = inp()\n    l = list(invr())\n    odd = 0\n    even = 0\n    for x in l:\n        if x % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    print(min(even, odd))", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    a = list(map(int, input().split()))\n    cnt1 = 0\n    cnt2 = 0\n    for i in a:\n        if i % 2 == 0:\n            cnt1 += 1\n        else:\n            cnt2 += 1\n    if cnt1 >= cnt2:\n        print(cnt2)\n    else:\n        print(cnt1)", "a = int(input())\nfor i in range(a):\n    b = input()\n    c = list(map(int, input().split()))\n    even = 0\n    odd = 0\n    for j in c:\n        if j % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    print(min(even, odd))", "def process(arr, n):\n    res = 0\n    for i in range(n):\n        if arr[i] & 1:\n            res += 1\n    res = min(res, n - res)\n    return res\nfor t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))[:n]\n    print(process(arr, n))", "for i in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    odd = even = 0\n    for i in b:\n        if i % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    print(min(odd, even))", "from sys import stdin\nfor i in range(int(stdin.readline())):\n    k = int(stdin.readline())\n    arr = list(map(int, stdin.readline().split()))\n    cnt = [0, 0]\n    for a in arr:\n        cnt[a & 1] += 1\n    print(min(cnt))", "for _ in range(int(input())):\n    n = int(input())\n    odds = 0\n    evens = 0\n    for a in map(int, input().split()):\n        if a % 2 == 0:\n            evens += 1\n        else:\n            odds += 1\n    print(min(odds, evens))", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    e = 0\n    for i in range(n):\n        if lst[i] % 2 == 0:\n            e += 1\n    o = n - e\n    print(min(e, o))", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    for j in range(n):\n        if a[j] % 2 == 0:\n            count = count + 1\n    print(min(count, n - count))", "def nene(a):\n    k1 = 0\n    k2 = 0\n    for i in a:\n        if i % 2 == 0:\n            k2 += 1\n        else:\n            k1 += 1\n    return [k1, k2]\nn = int(input())\nfor i in range(n):\n    t = int(input())\n    a = [int(x) for x in input().split()]\n    print(min(nene(a)))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    for i in a:\n        if i % 2 == 0:\n            c += 1\n    x = n - c\n    print(min(c, x))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    list1 = [int(x) for x in input().split()]\n    (count_of_even, count_of_odd) = (0, 0)\n    for i in range(n):\n        if list1[i] % 2 != 0:\n            count_of_odd += 1\n    print(min(count_of_odd, n - count_of_odd))", "t = int(input())\nfor i in range(t):\n    a = int(input())\n    s = list(map(int, input().split()))\n    (g, h) = (0, 0)\n    for i in s:\n        if i & 1 == 0:\n            g += 1\n        else:\n            h += 1\n    print(min(g, h))", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    (evens, odds) = (0, 0)\n    for i in arr:\n        if i % 2 == 0:\n            evens += 1\n    odds = n - evens\n    print(min(evens, odds))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (even, odd) = (0, 0)\n    for i in a:\n        if i % 2 != 0:\n            odd += 1\n        else:\n            even += 1\n    print(min(odd, even))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    oddCount = 0\n    evenCount = 0\n    for i in range(n):\n        if arr[i] % 2 == 0:\n            evenCount += 1\n        else:\n            oddCount += 1\n    if oddCount > evenCount:\n        print(evenCount)\n    else:\n        print(oddCount)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(lambda x: int(x) % 2 == 0, input().split(' ')))\n    es = sum(a)\n    print(min(n - es, es))", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    for i in l:\n        c += i % 2\n    print(min(c, n - c))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = 0\n    sum1 = 0\n    sum2 = 0\n    for j in range(n):\n        if a[j] % 2 == 0:\n            sum2 += 1\n        else:\n            sum1 += 1\n    if sum1 > sum2:\n        print(sum2)\n    else:\n        print(sum1)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    odd = 0\n    even = 0\n    for i in a:\n        if i % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    print(min(odd, even))", "for _ in range(int(input())):\n    n = int(input())\n    L = list(map(int, input().split()))\n    count = 0\n    for i in L:\n        if i % 2 == 0:\n            count += 1\n    print(min(count, n - count))", "from sys import stdin\n\ndef solution(arr):\n    (odd, even) = (0, 0)\n    for i in arr:\n        if i % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    if odd < even:\n        print(odd)\n    else:\n        print(even)\nfor _ in range(int(input())):\n    (size, arr) = (int(input()), list(map(int, input().split())))\n    solution(arr)", "import sys\nsys.setrecursionlimit(int(1000000000.0))\ninput = sys.stdin.readline\nprint = lambda *x, sep=' ', end='\\n': sys.stdout.write(sep.join(map(str, x)) + end)\nt = int(input())\nfor case in range(t):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    evens = 0\n    odds = 0\n    for num in nums:\n        if num % 2 == 0:\n            evens += 1\n        else:\n            odds += 1\n    print(min(evens, odds))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    count_o = 0\n    count_e = 0\n    for i in range(n):\n        if l[i] % 2 == 1:\n            count_o += 1\n    count_e = n - count_o\n    print(min(count_e, count_o))", "for _ in range(int(input())):\n    n = int(input())\n    t = list(map(int, input().split()))\n    odd_c = even_c = even = odd = 0\n    for i in t:\n        if i % 2 == 0:\n            even_c += 1\n        elif i % 2 == 1:\n            odd_c += 1\n    print(min(even_c, odd_c))", "n = int(input())\ntotal = []\nfor g in range(n):\n    total.append([0, 0])\n    nofn = int(input())\n    num = list(map(int, input().strip().split()))\n    for i in num:\n        if i % 2 == 0:\n            total[-1][0] += 1\n        else:\n            total[-1][1] += 1\nfor i in range(len(total)):\n    print(min(total[i]))", "from sys import stdin\n\ndef minimum_num(elements):\n    even = 0\n    uneven = 0\n    for num in elements:\n        if num % 2 == 0:\n            even = even + 1\n        else:\n            uneven = uneven + 1\n    if even > uneven:\n        return uneven\n    else:\n        return even\n\ndef main():\n    t_cases = int(stdin.readline().strip())\n    for t in range(t_cases):\n        n_numbers = stdin.readline().strip()\n        elements = [int(x) for x in stdin.readline().strip().split()]\n        answer = minimum_num(elements)\n        print(answer)\nmain()", "noft = int(input(''))\nfor l in range(0, noft):\n    ln = int(input(''))\n    ctr = 0\n    for j in input().split(' '):\n        if int(j) % 2 == 0:\n            ctr += 1\n    print(min(ctr, ln - ctr))", "for t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    o = 0\n    e = 0\n    for i in l:\n        if i & 1:\n            o += 1\n        else:\n            e += 1\n    print(min(o, e))", "t = int(input())\nl = []\nfor i in range(t):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l.append(l1)\nfor j in l:\n    l2 = []\n    for k in j:\n        if k % 2 == 0:\n            l2.append(k)\n    if len(l2) <= len(j) // 2:\n        print(len(l2))\n    else:\n        print(len(j) - len(l2))", "t = int(input())\nans = []\nfor x in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    odd = 0\n    even = 0\n    for x in a:\n        if x % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    ans.append(min(even, odd))\nfor a in ans:\n    print(a)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lt = list(map(int, input().split()))\n    (o, c) = (0, 0)\n    for j in lt:\n        if j % 2 == 1:\n            o += 1\n        else:\n            c += 1\n    print(min(o, c))", "N = int(input())\nfor n in range(N):\n    k = int(input())\n    seq = list(map(int, input().split()))\n    count = 0\n    for num in seq:\n        if num % 2 == 0:\n            count += 1\n    print(min(count, k - count))", "t = int(input())\n\ndef solve():\n    n = int(input())\n    lst = [int(x) for x in input().split()]\n    ct = 0\n    for x in lst:\n        if x % 2 == 0:\n            ct += 1\n    if ct < n / 2:\n        print(ct)\n    else:\n        print(n - ct)\nfor x in range(t):\n    solve()", "def solution(n, nums):\n    (odd, eve) = (0, 0)\n    for k in nums:\n        if k % 2 == 0:\n            eve += 1\n        else:\n            odd += 1\n    print(min(odd, eve))\nfor _ in range(int(input())):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    solution(n, nums)", "for _ in range(int(input())):\n    n = int(input())\n    f = sum((x % 2 == 0 for x in list(map(int, input().split()))))\n    print(min(f, n - f))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    even = odd = 0\n    res = 0\n    for num in a:\n        if num % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    print(even if odd >= even else odd)", "def CNT(arr):\n    ev = 0\n    od = 0\n    for i in arr:\n        if i % 2 == 0:\n            ev += 1\n        else:\n            od += 1\n    return (ev, od)\nfor i in range(int(input())):\n    l = int(input())\n    arr = list(map(int, input().split()))\n    cnt = 0\n    print(min(CNT(arr)))", "def r(i):\n    return int(i) % 2\nfor i in range(int(input())):\n    a = input()\n    a = list(map(r, input().split()))\n    print(min(a.count(0), a.count(1)))", "no = int(input())\nfor i in range(no):\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    oddCount = 0\n    evenCount = 0\n    for i in list1:\n        if i % 2 == 1:\n            oddCount += 1\n        else:\n            evenCount += 1\n    print(min(oddCount, evenCount))", "n = int(input(''))\n\ndef s_1(lst):\n    n_f = 0\n    n_z = 0\n    for i in lst:\n        if int(i) % 2 == 0:\n            n_z += 1\n        else:\n            n_f += 1\n    if n_z <= n_f:\n        print(n_z)\n    else:\n        print(n_f)\nfor i in range(n):\n    input('')\n    lst = input('').split(' ')\n    s_1(lst)", "def main():\n    input_number_test_case = input()\n    number_test_cases = int(input_number_test_case)\n    test_cases = []\n    for index in range(number_test_cases):\n        number_items = input()\n        items = input()\n        test_cases.append({'number_items': int(number_items), 'items': [int(item) for item in items.split(' ')]})\n    get_results(test_cases)\n\ndef get_results(test_cases):\n    for test_case in test_cases:\n        odd = []\n        pair = []\n        for item in test_case['items']:\n            if item % 2 == 0:\n                pair.append(item)\n            else:\n                odd.append(item)\n        print(len(odd) if len(odd) < len(pair) else len(pair))\nmain()", "n = int(input())\ndata = [list(map(int, input().split())) for a in range(n * 2)]\nnum = [data[b] for b in range(1, len(data), 2)]\nfor c in num:\n    (odd, even) = (0, 0)\n    for d in c:\n        if d % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    print(min([odd, even]))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    (o, e) = (0, 0)\n    for i in l:\n        if i % 2 == 0:\n            e += 1\n        else:\n            o += 1\n    print(min(o, e))", "caseT = int(input())\nfor i in range(caseT):\n    T = int(input())\n    lstT = list(map(int, input().split()))\n    countO = 0\n    for i in lstT:\n        if i % 2 == 0:\n            countO += 1\n    ans = min(T - countO, countO)\n    print(ans)", "t = int(input())\nfor te in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (e, o) = (0, 0)\n    for i in arr:\n        if i % 2 == 0:\n            e += 1\n        else:\n            o += 1\n    print(min(e, o))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    list = input().split(' ')\n    (odd, even) = (0, 0)\n    for f in list:\n        if int(f) % 2 == 0:\n            odd += 1\n        else:\n            even += 1\n    if odd > even:\n        print(even)\n    else:\n        print(odd)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    ce = 0\n    co = 0\n    for i in A:\n        if i % 2 == 0:\n            ce += 1\n        else:\n            co += 1\n    m = min(ce, co)\n    print(m)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = 0\n    for i in range(0, len(arr)):\n        if arr[i] % 2 != 0:\n            count += 1\n    n = len(arr) - count\n    if n > count:\n        print(count)\n    elif n < count:\n        print(n)\n    else:\n        print(n)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        if a[i] % 2 == 0:\n            count += 1\n    m = n - count\n    if m > count:\n        print(count)\n    elif count > m:\n        print(m)\n    else:\n        print(m)\n    t = t - 1"]