["import sys, collections\nequal = {'19', '28', '29', '37', '38', '39', '46', '47', '48', '49', '55', '56', '57', '58', '59', '64', '65', '66', '67', '68', '69', '73', '74', '75', '76', '77', '78', '79', '82', '83', '84', '85', '86', '87', '88', '89', '91', '92', '93', '94', '95', '96', '97', '98', '99'}\n\ndef solve(s):\n    n = len(s)\n    for i in range(n - 2, -1, -1):\n        if s[i:i + 2] in equal:\n            mid = str(int(s[i]) + int(s[i + 1]))\n            return s[:i] + mid + s[i + 2:]\n    mid = str(int(s[0]) + int(s[1]))\n    return mid + s[2:]\ninput = sys.stdin.readline\ntests = int(input()[:-1])\nfor test in range(tests):\n    s = input()[:-1]\n    print(solve(s))", "import sys\ninput = sys.stdin.readline\nn = int(input())\nR = []\n\ndef process(S):\n    x = list(map(int, list(S)))\n    decimal_checked = False\n    for i in range(len(x) - 2, -1, -1):\n        c = x[i] + x[i + 1]\n        if c >= 10:\n            x[i + 1] = c - 10\n            x[i] = 1\n            decimal_checked = True\n            break\n    if not decimal_checked:\n        x[1] += x[0]\n        x.pop(0)\n    return ''.join([chr(c + ord('0')) for c in x])\nfor _ in range(n):\n    s = input()[:-1]\n    R.append(process(s))\nfor r in R:\n    print(r)", "def Solve():\n    lst = []\n    for t in range(int(input())):\n        n = input()[::-1]\n        lst.append(n)\n    for num in lst:\n        e = True\n        for i in range(len(num) - 1):\n            z = int(num[i]) + int(num[i + 1])\n            if z > 9:\n                e = False\n                break\n        z = str(z)[::-1]\n        if e:\n            num = num[::-1]\n            print(str(int(num[0]) + int(num[1])) + num[2:])\n        else:\n            ans = (num[:i] + z + num[i + 2:])[::-1]\n            print(ans)\nSolve()", "import sys\n\ndef _input_iter():\n    for line in sys.stdin:\n        for part in line.strip().split(' '):\n            stripped = part.strip()\n            if stripped:\n                yield stripped\nstream = _input_iter()\n\ndef read_int():\n    return int(next(stream))\n\ndef read_str():\n    return next(stream)\n\ndef run():\n    x = list(read_str())\n    for i in range(len(x) - 2, -1, -1):\n        currd = int(x[i])\n        nextd = int(x[i + 1])\n        if currd + nextd >= 10:\n            x[i] = str(1)\n            x[i + 1] = str(currd + nextd - 10)\n            print(''.join(x))\n            return\n    x[1] = str(int(x[0]) + int(x[1]))\n    del x[0]\n    print(''.join(x))\ntest_cases = read_int()\nfor _ in range(test_cases):\n    run()", "import sys\ninput = sys.stdin.readline\n\ndef print(*args, end='\\n', sep=' ') -> None:\n    sys.stdout.write(sep.join(map(str, args)) + end)\n\ndef solve() -> str:\n    x = input().strip()\n    two = False\n    for i in reversed(range(1, len(x))):\n        if int(x[i]) + int(x[i - 1]) >= 10:\n            two = True\n            ind = i\n            break\n    if two:\n        print(x[:ind - 1], str(int(x[ind - 1]) + int(x[ind])), x[ind + 1:], sep='')\n        return\n    for i in range(len(x) - 1):\n        if int(x[i]) + int(x[i + 1]) >= int(x[i]):\n            print(x[:i], str(int(x[i]) + int(x[i + 1])), x[i + 2:], sep='')\n            break\n    else:\n        print(x[:-2], str(int(x[-1]) + int(x[-2])), sep='')\n\ndef main() -> None:\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "def solve():\n    s = str(input())\n    for i in reversed(range(len(s) - 1)):\n        if ord(s[i]) + ord(s[i + 1]) - 48 * 2 > 9:\n            print(s[:i] + str(ord(s[i]) + ord(s[i + 1]) - 48 * 2) + s[i + 2:])\n            return\n    print(str(ord(s[0]) + ord(s[1]) - 48 * 2) + s[2:])\nnt = int(input())\nfor t in range(nt):\n    solve()", "def solve():\n    x = input()\n    f = False\n    for i in ['19', '28', '37', '46', '55', '66', '77', '88', '99', '29', '38', '39', '47', '48', '49', '56', '57', '58', '59', '67', '68', '69', '78', '79', '89']:\n        if i in x or i[::-1] in x:\n            f = True\n            break\n    if f:\n        a = []\n        i = 0\n        while True:\n            i -= 1\n            (a, b) = (x[i - 1], x[i])\n            ab = str(int(a) + int(b))\n            if int(ab) >= 10:\n                if i == -1:\n                    px = x[:i - 1] + ab\n                else:\n                    px = x[:i - 1] + ab + x[i + 1:]\n                print(px)\n                break\n    else:\n        px = str(int(x[0]) + int(x[1]))\n        print(px + x[2:])\nfor i in range(int(input())):\n    solve()", "import sys\n\ndef _input_iter():\n    for line in sys.stdin:\n        for part in line.strip().split(' '):\n            stripped = part.strip()\n            if stripped:\n                yield stripped\nstream = _input_iter()\n\ndef read_int():\n    return int(next(stream))\n\ndef read_str():\n    return next(stream)\n\ndef run():\n    x = list(read_str())\n    for i in range(len(x) - 2, -1, -1):\n        currd = int(x[i])\n        nextd = int(x[i + 1])\n        if currd + nextd >= 10:\n            x[i] = str(1)\n            x[i + 1] = str(currd + nextd - 10)\n            print(''.join(x))\n            return\n    x[1] = str(int(x[0]) + int(x[1]))\n    print(''.join(x[1:]))\ntest_cases = read_int()\nfor _ in range(test_cases):\n    run()", "n = int(input())\nfor _ in range(n):\n    x = input()\n    flag = 0\n    ind = -1\n    for i in range(len(x) - 1, 0, -1):\n        if int(x[i]) + int(x[i - 1]) >= 10:\n            flag = 1\n            ind = i\n            break\n    if flag == 0:\n        try:\n            print(str(int(x[0]) + int(x[1])) + x[2:])\n        except:\n            print(x)\n    else:\n        print(x[:ind - 1] + str(int(x[ind]) + int(x[ind - 1])) + x[ind + 1:])", "import sys\nn = int(sys.stdin.readline())\nfor _ in range(n):\n    mx = 0\n    x = sys.stdin.readline().rstrip()\n    for i in range(len(x) - 2, -1, -1):\n        if int(x[i]) + int(x[i + 1]) >= 10:\n            print(x[:i] + str(int(x[i]) + int(x[i + 1])) + x[i + 2:])\n            break\n    else:\n        print(str(int(x[0]) + int(x[1])) + x[2:])", "ans = []\nfor _ in range(int(input())):\n    x = input()\n    mx = 0\n    ok = False\n    for i in range(len(x) - 1, 0, -1):\n        if int(x[i]) + int(x[i - 1]) > 9:\n            ok = True\n            ans.append(x[:i - 1] + str(int(x[i]) + int(x[i - 1])) + x[i + 1:])\n            break\n    else:\n        ans.append(str(int(x[0]) + int(x[1])) + x[2:])\nfor i in ans:\n    print(i)", "def do(n):\n    l = len(n)\n    p = False\n    ind = 0\n    for i in range(l - 1, 0, -1):\n        (a, b) = (ord(n[i]) - ord('0'), ord(n[i - 1]) - ord('0'))\n        if a + b > 9:\n            (p, ind) = (True, i)\n            break\n    if p:\n        i = ind\n        (a, b) = (ord(n[ind]) - ord('0'), ord(n[ind - 1]) - ord('0'))\n        s1 = n[:i - 1]\n        if i + 1 < l:\n            s2 = n[i + 1:]\n        else:\n            s2 = ''\n        c = str(a + b)\n        s_final = s1 + c + s2\n        print(s_final)\n    else:\n        (a, b) = (ord(n[0]) - ord('0'), ord(n[1]) - ord('0'))\n        c = str(a + b)\n        if l > 2:\n            s2 = n[2:]\n        else:\n            s2 = ''\n        s_final = c + s2\n        print(s_final)\nt = int(input())\nfor i in range(t):\n    n = str(input())\n    do(n)", "for s in [*open(0)][1:]:\n    a = (*map(int, s[:-1]),)\n    i = max(0, ''.join(('01'[(x + y) // 10] for (x, y) in zip(a, a[1:]))).rfind('1'))\n    print(s[:i], a[i] + a[i + 1], s[i + 2:], sep='')", "import sys\ninput = sys.stdin.readline\n\ndef read_int_list():\n    return list(map(int, list(input().strip())))\n\ndef solve(a):\n    pos = len(a) - 1\n    for i in range(len(a) - 1, 0, -1):\n        pos = i\n        if a[i] + a[i - 1] > 9:\n            break\n    print(f\"{''.join(map(str, a[:pos - 1]))}{a[pos] + a[pos - 1]}{''.join(map(str, a[pos + 1:]))}\")\nfor _ in range(int(input())):\n    a = read_int_list()\n    solve(a)", "def give(s):\n    if len(s) == 2:\n        return str(int(s[0]) + int(s[1]))\n    sg = ''\n    for i in range(1, len(s)):\n        md = (int(s[-i]) + int(s[-i - 1])) // 10\n        if md > 0:\n            e = str(int(s[-i]) + int(s[-i - 1]))\n            sg = s[:-i - 1] + e\n            if 1 - i < 0:\n                sg += s[-i + 1:]\n            return sg\n    return str(int(s[0]) + int(s[1])) + s[2:]\nfor _ in range(int(input())):\n    print(give(input()))", "import sys\ninput = sys.stdin.readline\n\ndef solution(inp: str) -> str:\n    for i in range(len(inp) - 1, 0, -1):\n        current_sum = int(inp[i]) + int(inp[i - 1])\n        if current_sum >= 10:\n            res = ''.join(inp[:i - 1]) + str(current_sum) + ''.join(inp[i + 1:])\n            return res\n    current_sum = int(inp[0]) + int(inp[1])\n    res = str(current_sum) + ''.join(inp[2:])\n    return res\nt = int(input())\nfor case in range(t):\n    inp = input().rstrip()\n    sol = solution(inp)\n    print(sol)", "n = int(input())\nresults = []\nfor i in range(n):\n    num = input()\n    out = 0\n    for j in range(len(num) - 1, 1, -1):\n        temp = int(num[j]) + int(num[j - 1])\n        if temp >= 10:\n            out = num[0:j - 1] + str(temp) + num[j + 1:]\n            break\n    if out == 0:\n        out = str(int(num[0]) + int(num[1])) + num[2:]\n    results.append(out)\nfor result in results:\n    print(result)", "def solve(s):\n    mn = 0\n    if int(s[-1]) + int(s[-2]) >= 10:\n        return s[:len(s) - 2] + str(int(s[-1]) + int(s[-2]))\n    else:\n        n = len(s)\n        i = n - 2\n        j = n - 3\n        while j >= 0 and i > 0:\n            val = int(s[i]) + int(s[j])\n            if val >= 10:\n                idxb = i\n                idxf = j\n                break\n            j -= 1\n            i = j + 1\n        if j < 0 and i == 0:\n            return str(int(s[0]) + int(s[1])) + s[2:]\n        else:\n            return s[:idxf] + str(val) + s[idxb + 1:]\nfor i in range(int(input())):\n    s = input()\n    print(solve(s))", "import sys\ninp = sys.stdin.readline\nfor _ in range(int(inp())):\n    n = inp().strip()\n    index = 0\n    for i in range(len(n) - 2, -1, -1):\n        if int(n[i]) + int(n[i + 1]) > 9:\n            index = i\n            break\n    insert = int(n[i]) + int(n[i + 1])\n    n = n[:i] + str(insert) + n[i + 2:]\n    print(n)", "for s in [*open(0)][1:]:\n    a = (*map(int, s[:-1]),)\n    i = max(0, ''.join(('01'[x + y > 9] for (x, y) in zip(a, a[1:]))).rfind('1'))\n    print(s[:i], a[i] + a[i + 1], s[i + 2:], sep='')", "import math\n\ndef swapp(n, j):\n    a = n[0:j]\n    ba = int(n[j])\n    bb = int(n[j + 1])\n    b = str(ba + bb)\n    c = n[j + 2:]\n    return a + b + c\nt = int(input())\nfor i in range(t):\n    n = input()\n    flag = False\n    for j in range(len(n) - 2, -1, -1):\n        if int(n[j]) + int(n[j + 1]) >= 10:\n            print(swapp(n, j))\n            flag = True\n            break\n    if not flag:\n        print(swapp(n, 0))", "def solve(s):\n    max = 0\n    imax = 0\n    for i in range(len(s) - 1, 0, -1):\n        if int(s[i]) + int(s[i - 1]) >= 10:\n            return s[0:i - 1] + str(int(s[i]) + int(s[i - 1])) + s[i + 1:]\n    return str(int(s[0]) + int(s[1])) + s[2:]\nn = int(input())\nfor i in range(n):\n    s = input().strip()\n    print(solve(s))", "t = int(input())\nfor _ in range(t):\n    s = input()\n    dd = -1\n    ans = str(int(s[0]) + int(s[1])) + s[2:]\n    for i in range(len(s) - 2, -1, -1):\n        cur = int(s[i]) + int(s[i + 1])\n        if cur > 9:\n            dd = i\n            break\n    if dd > -1:\n        ans = s[:dd] + str(int(s[dd]) + int(s[dd + 1])) + s[dd + 2:]\n    print(ans)", "n = int(input())\nfor i in range(n):\n    s = input()\n    prev = int(s[-1])\n    for j in range(len(s) - 2, -1, -1):\n        cur = int(s[j])\n        if cur + prev >= 10:\n            pref = s[:j]\n            suff = s[j + 2:]\n            res = pref + str(cur + prev) + suff\n            print(res)\n            break\n        prev = cur\n    else:\n        sum = str(int(s[0]) + int(s[1]))\n        res = sum + s[2:]\n        print(res)", "t = int(input())\nfor k in range(t):\n    a = input()\n    n = len(a)\n\n    def prb(a, n):\n        for i in range(n - 1):\n            b = int(a[n - 1 - i]) + int(a[n - 2 - i])\n            if b > 9:\n                return a[:n - 2 - i] + str(b) + a[n - i:]\n        return str(int(a[0]) + int(a[1])) + a[2:]\n    print(prb(a, n))", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nfrom collections import deque, defaultdict\nfor _ in range(int(input())):\n    s = input()\n    ans = ''\n    for i in range(len(s) - 1, 0, -1):\n        sm = int(s[i]) + int(s[i - 1])\n        if sm >= 10:\n            ans = s[:i - 1] + str(sm) + s[i + 1:]\n            break\n    if len(ans):\n        print(ans)\n        continue\n    sm = int(s[0]) + int(s[1])\n    ans = str(sm) + s[2:]\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    s = s[::-1]\n    for i in range(1, len(s)):\n        k = int(s[i - 1]) + int(s[i])\n        if k >= 10:\n            s = s[:i - 1] + str(k)[::-1] + s[i + 1:]\n            break\n    else:\n        s = s[:-2] + str(int(s[-1]) + int(s[-2]))\n    s = s[::-1]\n    print(s)", "for _ in range(int(input())):\n    s = input()\n    i = len(s) - 1\n    res = ''\n    while i > 0:\n        if int(s[i]) + int(s[i - 1]) > 9:\n            res = s[:i - 1] + str(int(s[i]) + int(s[i - 1])) + s[i + 1:]\n            break\n        i -= 1\n    else:\n        res = str(int(s[0]) + int(s[1])) + s[2:]\n    print(res)", "import functools\nimport sys\nimport typing\nfrom typing import Callable, Dict, List, Set, Tuple\nsys.setrecursionlimit(10 ** 6)\nsinput: Callable[..., str] = sys.stdin.readline\ndebug = functools.partial(print, file=sys.stderr)\nMOD: int = 998244353\nINF: float = float('Inf')\nIINF: int = sys.maxsize // 2\n\ndef main() -> None:\n    s = sinput().strip()\n    l = len(s)\n    same_pos = -1\n    for i in range(l - 1):\n        af = int(s[i]) + int(s[i + 1])\n        if af >= 10:\n            same_pos = i\n    if same_pos != -1:\n        change_pos = same_pos\n    else:\n        change_pos = 0\n    print(s[:change_pos], int(s[change_pos]) + int(s[change_pos + 1]), s[change_pos + 2:], sep='')\nt = int(sinput())\nfor _ in range(t):\n    main()", "for _ in range(int(input())):\n    x = input()\n    j = -1\n    for i in range(len(x) - 2, -1, -1):\n        if int(x[i]) + int(x[i + 1]) >= 10:\n            j = i\n            break\n    print(x[:j] + str(int(x[j]) + int(x[j + 1])) + x[j + 2:] if j > 0 else str(int(x[0]) + int(x[1])) + x[2:])", "t = int(input())\nres = []\nfor _ in range(t):\n    nums = list(input())\n    flag = False\n    for i in range(len(nums) - 1, 0, -1):\n        if int(nums[i]) + int(nums[i - 1]) > 9:\n            nums[i] = str(int(nums[i]) + int(nums[i - 1]))\n            nums.pop(i - 1)\n            ans = ''.join(nums)\n            flag = True\n            break\n    if flag:\n        res.append(ans)\n    else:\n        nums[0] = str(int(nums[0]) + int(nums[1]))\n        nums.pop(1)\n        res.append(''.join(nums))\nfor ans in res:\n    print(ans)", "def main():\n    t = int(input())\n    while t > 0:\n        t -= 1\n        n = list(input())\n        done = False\n        for i in range(len(n) - 2, -1, -1):\n            first = int(n[i])\n            second = int(n[i + 1])\n            if first + second >= 10:\n                ans = str(first + second)\n                n[i] = ans[0]\n                n[i + 1] = ans[1]\n                done = True\n                break\n        if not done:\n            n[1] = str(int(n[0]) + int(n[1]))\n            n[0] = ''\n        print(''.join(n))\nmain()", "for _ in range(int(input())):\n    s = input()\n    for i in range(len(s) - 2, -1, -1):\n        if int(s[i]) + int(s[i + 1]) >= 10:\n            k = int(s[i]) + int(s[i + 1])\n            ans = s[:i] + str(k) + s[i + 2:]\n            print(ans)\n            break\n    else:\n        ans = str(int(s[0]) + int(s[1])) + s[2:len(s)]\n        print(ans)", "T = int(input())\nfor tc in range(T):\n    s = input()\n    L = list(s)\n    n = len(s)\n    f = False\n    for i in range(n - 1, 0, -1):\n        if int(L[i]) + int(L[i - 1]) > 9:\n            (L[i - 1], L[i]) = list(str(int(L[i]) + int(L[i - 1])))\n            f = True\n            break\n    if f == True:\n        print(''.join(L))\n    else:\n        L[1] = str(int(L[0]) + int(L[1]))\n        print(''.join(L)[1:])", "t = int(input())\n\ndef solve():\n    x = input()\n    r = ''\n    n = len(x)\n    for i in range(len(x) - 1, 0, -1):\n        if int(x[i]) + int(x[i - 1]) >= 10:\n            r = x[:i - 1] + str(int(x[i]) + int(x[i - 1])) + x[i + 1:]\n            return r\n    r = str(int(x[0]) + int(x[1])) + x[2:]\n    return r\nwhile t:\n    t -= 1\n    print(solve())", "import math\nfrom sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    s = input().strip()\n    n = len(s)\n    maxi = -1\n    idx = -1\n    for i in range(n - 1, 0, -1):\n        if int(s[i]) + int(s[i - 1]) > 9:\n            idx = i\n            break\n    if idx == -1:\n        res = str(int(s[0]) + int(s[1])) + s[2:]\n    else:\n        idx -= 1\n        i = 0\n        res = ''\n        while i < n:\n            if i != idx:\n                res += s[i]\n                i += 1\n            else:\n                res += str(int(s[i]) + int(s[i + 1]))\n                i += 2\n    print(res)", "def solve(x):\n    x = list(x)\n    i = len(x) - 1\n    flg = 0\n    while i > 1:\n        num = int(x[i]) + int(x[i - 1])\n        if num >= 10:\n            x[i - 1] = str(num)\n            print(''.join(x[:i]) + ''.join(x[i + 1:]))\n            flg = 1\n            break\n        i -= 1\n    if flg == 0:\n        num = int(x[0]) + int(x[1])\n        print(str(num) + ''.join(x[2:]))\nn = int(input())\nwhile n:\n    x = input()\n    solve(x)\n    n -= 1", "for _ in range(int(input())):\n    s = input()\n    ans = s\n    n = len(s)\n    a = int(s[0]) + int(s[1])\n    for i in range(n - 2, -1, -1):\n        a = int(s[i]) + int(s[i + 1])\n        if a >= 10:\n            ans = s[:i] + str(a) + s[i + 2:]\n            break\n    if ans == s:\n        ans = str(a) + s[2:]\n    print(ans)", "t = int(input())\nwhile t > 0:\n    s = input()\n    l = len(s)\n    sum = 0\n    flag = 0\n    for i in range(l - 1):\n        sum = int(s[i]) + int(s[i + 1])\n        if sum >= 10:\n            flag = 1\n            break\n    if l == 2:\n        print(int(s[0]) + int(s[1]))\n    elif len(str(int(s[l - 1]) + int(s[l - 2]))) == 2:\n        print(s[:l - 2] + str(int(s[l - 1]) + int(s[l - 2])))\n    elif flag == 0:\n        print(str(int(s[0]) + int(s[1])) + s[2:])\n    else:\n        for i in range(l - 2, 0, -1):\n            p = int(s[i]) + int(s[i - 1])\n            if len(str(p)) == 2:\n                print(s[:i - 1] + str(p) + s[i + 1:l])\n                break\n            else:\n                continue\n    t = t - 1", "for s in [*open(0)][1:]:\n    a = (*map(int, s[:-1]),)\n    i = j = 0\n    for (x, y) in zip(a, a[1:]):\n        i = (i, j)[x + y > 9]\n        j += 1\n    print(s[:i], a[i] + a[i + 1], s[i + 2:], sep='')", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_ls():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        s = input()\n        n = len(s)\n        ok = False\n        for i in range(n - 1, 0, -1):\n            add = int(s[i]) + int(s[i - 1])\n            if add > 9:\n                print(s[:i - 1] + str(add) + s[i + 1:])\n                ok = True\n                break\n        if not ok:\n            print(str(int(s[0]) + int(s[1])) + s[2:])\nmain()", "for _ in range(int(input())):\n    s = input()\n    for i in range(len(s) - 1, 0, -1):\n        x = int(s[i])\n        y = int(s[i - 1])\n        if x + y > 9:\n            s = s[:i - 1] + str(x + y) + s[i + 1:]\n            break\n    else:\n        s = str(int(s[0]) + int(s[1])) + s[2:]\n    print(s)", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nfor _ in range(int(input())):\n    s = input()\n    for i in range(len(s) - 1, 0, -1):\n        x = int(s[i])\n        y = int(s[i - 1])\n        if x + y > 9:\n            s = s[:i - 1] + str(x + y) + s[i + 1:]\n            break\n    else:\n        s = str(int(s[0]) + int(s[1])) + s[2:]\n    print(s)", "for (i, a) in [[len(i) - 1, i] for i in [input() for _ in range(int(input()))]]:\n    while int(a[i]) + int(a[i - 1]) < 10 and i > 1:\n        i -= 1\n    print(a[:i - 1] + str(int(a[i]) + int(a[i - 1])) + a[i + 1:])", "from random import getrandbits\n\ndef solve_while(s: str):\n    it = len(s) - 1\n    while it > 0:\n        a = int(s[it]) + int(s[it - 1])\n        if a >= 10:\n            print(s[:it - 1] + str(a) + s[it + 1:])\n            return\n        it -= 1\n    print(str(int(s[0]) + int(s[1])) + s[2:])\n\ndef solve_for(s: str):\n    for it in range(len(s) - 1, 0, -1):\n        a = int(s[it]) + int(s[it - 1])\n        if a >= 10:\n            print(s[:it - 1] + str(a) + s[it + 1:])\n            return\n    print(str(int(s[0]) + int(s[1])) + s[2:])\nfor cases in range(int(input())):\n    solve_while(input()) if getrandbits(1) == 0 else solve_for(input())", "def solve(s):\n    n = len(s)\n    for i in range(n - 2, -1, -1):\n        if int(s[i]) + int(s[i + 1]) >= 10:\n            s[i] = str(int(s[i]) + int(s[i + 1]))\n            del s[i + 1]\n            res = ''\n            for i in s:\n                res += i\n            return res\n    s[0] = str(int(s[0]) + int(s[1]))\n    del s[1]\n    res = ''\n    for i in s:\n        res += i\n    return res\nfor test in range(int(input())):\n    s = list(input())\n    print(solve(s))", "import math\nfrom sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    s = input().strip()\n    n = len(s)\n    maxi = -1\n    idx = -1\n    for i in range(n - 1, 0, -1):\n        if int(s[i]) + int(s[i - 1]) > 9:\n            idx = i\n            break\n    if idx == -1:\n        res = str(int(s[0]) + int(s[1])) + s[2:]\n    else:\n        idx -= 1\n        i = 0\n        res = ''\n        while i < n:\n            if i != idx:\n                res += s[i]\n                i += 1\n            else:\n                res += str(int(s[i]) + int(s[i + 1]))\n                i += 2\n    print(res)", "def main():\n    s = input()\n    if len(s) == 1:\n        print(s)\n        return\n    (ind, ind1) = (-1, -1)\n    for i in range(len(s) - 1, 0, -1):\n        if int(s[i]) + int(s[i - 1]) >= 10:\n            ind1 = i\n            break\n        if i - 1 == 0:\n            break\n    if ind1 == -1:\n        print(str(int(s[0]) + int(s[1])) + str(s[2:len(s)]))\n        return\n    b = int(s[ind1]) + int(s[ind1 - 1])\n    s1 = ''\n    for j in range(0, ind1 - 1):\n        s1 += s[j]\n    s1 += str(b)\n    for j in range(ind1 + 1, len(s)):\n        s1 += s[j]\n    print(s1)\nt = int(input())\nwhile t > 0:\n    main()\n    t -= 1", "for t in range(int(input())):\n    s = input()\n    n = len(s)\n    x = 0\n    for i in range(n - 2, -1, -1):\n        if int(s[i]) + int(s[i + 1]) >= 10:\n            x = i\n            break\n    print(s[:x] + str(int(s[x]) + int(s[x + 1])) + s[x + 2:])", "for l in range(int(input())):\n    a = input()\n    k = True\n    for i in reversed(range(1, len(a))):\n        if int(a[i]) + int(a[i - 1]) >= 10:\n            b = str(int(a[i]) + int(a[i - 1]))\n            if i != len(a) - 1:\n                a = a[0:i - 1] + b[0] + b[1] + a[i + 1:]\n            else:\n                a = a[0:i - 1] + b[0] + b[1]\n            k = False\n            print(a)\n            break\n    if k:\n        b = str(int(a[0]) + int(a[1]))\n        a = b + a[2:]\n        print(a)", "t = int(input())\nwhile t:\n    s = input()\n    n = len(s)\n    ans = 0\n    flag = False\n    for each in range(n - 1, 0, -1):\n        res = int(s[each]) + int(s[each - 1])\n        if res > 9:\n            ans = s[:each - 1] + str(res) + s[each + 1:]\n            flag = True\n            break\n    if flag == True:\n        print(ans)\n    else:\n        ans = str(int(s[0]) + int(s[1]))\n        ans = ans + s[2:]\n        print(ans)\n    t -= 1", "def solve(a):\n    for i in range(len(a) - 2, -1, -1):\n        num = int(a[i]) + int(a[i + 1])\n        if num >= 10:\n            a[i] = str(num)\n            a.pop(i + 1)\n            return ''.join(a)\n    a[0] = str(int(a[1]) + int(a[0]))\n    a.pop(1)\n    return ''.join(a)\nfor _ in range(int(input())):\n    s = list(input())\n    print(solve(s))", "for _ in range(int(input())):\n    s = input()\n    x = 0\n    for i in range(len(s) - 2, -1, -1):\n        if int(s[i]) + int(s[i + 1]) >= 10:\n            x = i\n            break\n    print(s[:x] + str(int(s[x]) + int(s[x + 1])) + s[x + 2:])", "t = int(input())\nfor test in range(t):\n    n = input()\n    flag = True\n    for i in range(len(n) - 1, 0, -1):\n        if int(n[i]) + int(n[i - 1]) >= 10:\n            print(n[:i - 1] + str(int(n[i - 1]) + int(n[i])) + n[i + 1:])\n            flag = False\n            break\n    if flag:\n        x = str(int(n[0]) + int(n[1]))\n        print(x + n[2:])", "for _ in range(int(input())):\n    x = [ord(c) - ord('0') for c in input()]\n    n = len(x)\n    for i in range(n - 2, -1, -1):\n        if x[i] + x[i + 1] >= 10:\n            x[i + 1] += x[i] - 10\n            x[i] = 1\n            break\n    else:\n        x[1] += x[0]\n        x.pop(0)\n    print(''.join([chr(c + ord('0')) for c in x]))", "t = int(input())\nfor test in range(t):\n    x = input()\n    for i in range(len(x) - 2, -1, -1):\n        if int(x[i]) + int(x[i + 1]) > 9:\n            print(f'{x[:i]}{int(x[i]) + int(x[i + 1])}{x[i + 2:]}')\n            break\n    else:\n        print(f'{int(x[0]) + int(x[1])}{x[2:]}')", "t = int(input())\nfor _ in range(t):\n    string = input()\n    i = len(string) - 1\n    while int(string[i]) + int(string[i - 1]) < 10 and i > 1:\n        i -= 1\n    print(string[:i - 1] + str(int(string[i]) + int(string[i - 1])) + string[i + 1:])", "for iii in range(int(input())):\n    s = input()\n    q = ''\n    flag = False\n    for i in range(len(s) - 1, 0, -1):\n        x = int(s[i]) + int(s[i - 1])\n        if x >= 10:\n            q = s[:i - 1] + str(x) + s[i + 1:]\n            print(q)\n            flag = True\n            break\n    if flag:\n        continue\n    for i in range(len(s) - 1):\n        x = int(s[i]) + int(s[i + 1])\n        if x < 10:\n            q = s[:i] + str(x) + s[i + 2:]\n            print(q)\n            break", "import sys\n\ndef solve():\n    n = sys.stdin.readline().rstrip('\\n')\n    n = list(n)\n    n = [int(_) for _ in n]\n    flag = 0\n    for i in range(len(n) - 2, -1, -1):\n        if n[i] + n[i + 1] >= 10:\n            m = n[i] + n[i + 1] - 10\n            n[i + 1] = m\n            n[i] = 1\n            flag = 1\n            break\n    if flag == 0:\n        m = n[0] + n[1]\n        n.pop(0)\n        n[0] = m\n    n = [str(_) for _ in n]\n    n = ''.join(n)\n    print(n)\nT = int(sys.stdin.readline().rstrip('\\n'))\nfor _ in range(T):\n    solve()", "for q in range(int(input())):\n    lst = list(input())\n    for i in range(len(lst) - 2, -1, -1):\n        if int(lst[i]) + int(lst[i + 1]) >= 10:\n            lst[i + 1] = str(int(lst[i + 1]) + int(lst[i]) - 10)\n            lst[i] = '1'\n            break\n    else:\n        lst[1] = str(int(lst[1]) + int(lst[0]))\n        lst.pop(0)\n    print(''.join(lst))", "for _ in range(int(input())):\n    x = [ord(c) - ord('0') for c in input()]\n    n = len(x)\n    for i in range(n - 2, -1, -1):\n        if x[i] + x[i + 1] >= 10:\n            x[i + 1] += x[i] - 10\n            x[i] = 1\n            break\n    else:\n        x[1] += x[0]\n        x.pop(0)\n    print(''.join([chr(c + ord('0')) for c in x]))", "for i in range(int(input())):\n    x = input()\n    a = -1\n    for k in range(len(x) - 1, 0, -1):\n        if int(x[k]) + int(x[k - 1]) >= 10:\n            a = k\n            break\n    if a == -1:\n        print(str(int(x[0]) + int(x[1])) + x[2:])\n    else:\n        y = str(int(x[k]) + int(x[k - 1]))\n        print(x[:k - 1] + y + x[k + 1:])", "for _ in range(int(input())):\n    x = [ord(c) - ord('0') for c in input()]\n    n = len(x)\n    for i in range(n - 2, -1, -1):\n        if x[i] + x[i + 1] >= 10:\n            x[i + 1] += x[i] - 10\n            x[i] = 1\n            break\n    else:\n        x[1] += x[0]\n        x.pop(0)\n    print(''.join([chr(c + ord('0')) for c in x]))", "def Solve():\n    for t in range(int(input())):\n        e = True\n        num = input()\n        num = num[::-1]\n        for i in range(len(num) - 1):\n            z = int(num[i]) + int(num[i + 1])\n            if z > 9:\n                e = False\n                break\n        if e:\n            num = num[::-1]\n            print(str(int(num[0]) + int(num[1])) + num[2:])\n        else:\n            ans = num[:i] + str(z)[::-1] + num[i + 2:]\n            print(ans[::-1])\nSolve()", "def Solve():\n    for t in range(int(input())):\n        e = True\n        num = input()[::-1]\n        for i in range(len(num) - 1):\n            z = int(num[i]) + int(num[i + 1])\n            if z > 9:\n                e = False\n                break\n        z = str(z)[::-1]\n        if e:\n            num = num[::-1]\n            print(str(int(num[0]) + int(num[1])) + num[2:])\n        else:\n            ans = (num[:i] + z + num[i + 2:])[::-1]\n            print(ans)\nSolve()", "for x in range(int(input())):\n    n = [j for j in input()]\n    c = 1\n    for i in range(len(n) - 2, -1, -1):\n        if int(n[i]) + int(n[i + 1]) >= 10:\n            n[i] = str(int(n[i + 1]) + int(n[i]))\n            n.pop(i + 1)\n            c = 0\n            break\n    if c:\n        n[0] = str(int(n[1]) + int(n[0]))\n        n.pop(1)\n    n = ''.join(n)\n    n.replace(' ', '')\n    print(n)", "from cmath import *\nfrom decimal import *\n\ndef solves():\n    Str = input()\n    i = len(Str) - 1\n    while i > 0:\n        s = int(Str[i]) + int(Str[i - 1])\n        if s > 9:\n            print(Str[:i - 1] + str(s) + Str[i + 1:])\n            return\n        i -= 1\n    print(str(int(Str[0]) + int(Str[1])) + Str[2:])\nt = 1\nt = int(input())\nfor _ in range(0, t):\n    solves()", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    z = 0\n    ind0 = -1\n    for i in range(n - 2, -1, -1):\n        x = int(s[i]) + int(s[i + 1])\n        if x > 9:\n            s = s[:i] + str(x) + s[i + 2:]\n            z = -1\n            break\n    if z == -1:\n        print(s)\n    elif ind0 == 1:\n        print(s[0] + s[2:])\n    else:\n        print(str(int(s[0]) + int(s[1])) + s[2:])", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    z = 0\n    ind0 = -1\n    for i in range(n - 2, -1, -1):\n        x = int(s[i]) + int(s[i + 1])\n        if x > 9:\n            s = s[:i] + str(x) + s[i + 2:]\n            z = -1\n            break\n    if z == -1:\n        print(s)\n    elif ind0 == 1:\n        print(s[0] + s[2:])\n    else:\n        print(str(int(s[0]) + int(s[1])) + s[2:])", "for _ in range(int(input())):\n    a = input()\n    fl = False\n    for i in range(len(a) - 1, 0, -1):\n        if int(a[i]) + int(a[i - 1]) > 9:\n            print(a[:i - 1] + str(int(a[i]) + int(a[i - 1])) + a[i + 1:])\n            fl = True\n            break\n    if fl:\n        continue\n    for i in range(len(a) - 1):\n        print(a[:i] + str(int(a[i]) + int(a[i + 1])) + a[i + 2:])\n        break", "t = int(input())\nfor _ in range(t):\n    s = input()\n    fail = False\n    for i in range(len(s) - 1, 1, -1):\n        k = int(s[i - 1]) + int(s[i])\n        if k >= 10:\n            print(s[:i - 1], end='')\n            print(1, end='')\n            print(k % 10, end='')\n            print(s[i + 1:])\n            fail = True\n            break\n    if not fail:\n        print(int(s[0]) + int(s[1]), end='')\n        print(s[2:])", "def slow(a):\n    s = []\n    for i in range(0, len(a) - 1):\n        s.append(int(a[:i] + str(int(a[i + 1]) + int(a[i])) + a[i + 2:]))\n    return str(max(s))\n\ndef fast(s):\n    n = len(s)\n    flag = False\n    for i in range(n - 1):\n        if int(s[i]) + int(s[i + 1]) >= 10:\n            flag = True\n            break\n    if not flag:\n        return str(int(s[0]) + int(s[1])) + str(s[2:])\n    else:\n        for i in range(n - 1, 0, -1):\n            if int(s[i]) + int(s[i - 1]) >= 10:\n                return s[:i - 1] + str(int(s[i]) + int(s[i - 1])) + s[i + 1:]\nfor _ in range(int(input())):\n    print(fast(input()))", "def singleinput():\n    R = int(input())\n    return R\n\ndef strinput():\n    R = str(input())\n    return R\n\ndef intarray():\n    As = list(map(int, input().split()))\n    return As\n\ndef matrixinput(arr):\n    As = list(map(int, input().split()))\n    arr.append(As)\nfor i in range(singleinput()):\n    n = str(input())\n    s = ''\n    for j in range(len(n) - 2, -1, -1):\n        if int(n[j]) + int(n[j + 1]) >= 10:\n            s = n[0:j] + str(int(n[j]) + int(n[j + 1])) + n[j + 2:]\n            break\n    if len(s) > 0:\n        print(s)\n    else:\n        print(str(int(n[0]) + int(n[1])) + n[2:])", "t = int(input())\nfor i in range(t):\n    s = input()\n    n = len(s)\n    j = n - 1\n    flag = True\n    while j > 0:\n        if int(s[j]) + int(s[j - 1]) >= 10:\n            flag = False\n            break\n        j -= 1\n    if flag:\n        k = int(s[0]) + int(s[1])\n        print(str(k) + s[2:], end='\\n')\n    else:\n        s = s[:j - 1] + str(int(s[j]) + int(s[j - 1])) + str(s[j + 1:])\n        print(s, end='\\n')", "T = int(input())\n\ndef process():\n    x = input()\n    tot = len(x)\n    for i in range(tot - 1, 0, -1):\n        g1 = x[i]\n        g2 = x[i - 1]\n        suming = int(g1) + int(g2)\n        if suming >= 10:\n            ch = str(suming)\n            x = list(x)\n            x[i - 1] = ch[0]\n            x[i] = ch[1]\n            ans = ''.join(x)\n            return ans\n    chang = str(int(x[0]) + int(x[1]))\n    x = x[1:]\n    x = list(x)\n    x[0] = chang\n    ans = ''.join(x)\n    return ans\nfor i in range(T):\n    print(process())", "t = int(input())\nfor _ in range(t):\n    x = input()\n    length = len(x)\n    idx = 0\n    done = False\n    for i in range(length - 1, 0, -1):\n        if int(x[i - 1]) + int(x[i]) >= 10:\n            idx = i\n            done = True\n            break\n    if not done:\n        x = str(int(x[0]) + int(x[1])) + x[2:]\n    else:\n        x = x[:idx - 1] + str(int(x[idx - 1]) + int(x[idx])) + x[idx + 1:]\n    print(x)", "t = int(input())\nfor _ in range(t):\n    (x, num_digit_preserved) = (input(), False)\n    for i in range(len(x) - 1, 0, -1):\n        s = int(x[i]) + int(x[i - 1])\n        if s > 9:\n            print(x[:i - 1] + str(s) + x[i + 1:])\n            num_digit_preserved = True\n            break\n    if not num_digit_preserved:\n        print(str(int(x[0]) + int(x[1])) + x[2:])", "for _ in range(int(input())):\n    num = input()\n    for i in range(len(num) - 1, 0, -1):\n        if int(num[i]) + int(num[i - 1]) >= 10:\n            res = num[:i - 1] + str(int(num[i]) + int(num[i - 1])) + num[i + 1:]\n            print(res)\n            break\n    else:\n        res = str(int(num[0]) + int(num[1])) + num[2:]\n        print(res)", "for _ in range(int(input())):\n    x = input()\n    i = len(x) - 1\n    if len(x) != 2:\n        while i > 1 and int(x[i]) + int(x[i - 1]) < 10:\n            i -= 1\n        x += '0'\n        print((x[:i - 1] + str(int(x[i]) + int(x[i - 1])) + x[i + 1:])[:-1])\n    elif len(x) == 2:\n        print(str(int(x[-1]) + int(x[-2])))", "t = int(input())\nfor _ in range(t):\n    s = input()\n    ddig = False\n    changeInd = None\n    changeValue = None\n    for i in range(len(s) - 1):\n        if int(s[i]) + int(s[i + 1]) >= 10:\n            ddig = True\n            changeInd = i\n            changeValue = int(s[i]) + int(s[i + 1])\n            break\n    if not ddig:\n        flag = False\n        for i in range(len(s) - 1):\n            if s[i] != '0' or s[i + 1] != '0':\n                changeInd = i\n                changeValue = int(s[i]) + int(s[i + 1])\n                flag = True\n                break\n        if not flag:\n            changeInd = len(s) - 2\n            changeValue = int(s[-1]) + int(s[-2])\n    else:\n        for i in range(len(s) - 1, 0, -1):\n            if int(s[i]) + int(s[i - 1]) >= 10:\n                changeInd = i - 1\n                changeValue = int(s[i]) + int(s[i - 1])\n                break\n    print(s[:changeInd] + str(changeValue) + s[changeInd + 2:])", "def solve():\n    n = input()\n    arr = [i for i in n]\n    for i in range(len(arr) - 2, -1, -1):\n        temp_sum = int(arr[i]) + int(arr[i + 1])\n        if temp_sum >= 10:\n            arr[i] = str(temp_sum // 10)\n            arr[i + 1] = str(temp_sum % 10)\n            print(''.join(arr))\n            return\n    arr[1] = str(int(arr[0]) + int(arr[1]))\n    arr = arr[1:]\n    print(''.join(arr))\n    return\nfor _ in range(int(input())):\n    solve()", "t = int(input())\nwhile t != 0:\n    x = input()\n    s = list(x)\n    flag = 0\n    for i in range(len(s) - 2, -1, -1):\n        if int(s[i]) + int(s[i + 1]) >= 10:\n            flag += 1\n            net = int(s[i]) + int(s[i + 1])\n            s[i] = str(net // 10)\n            s[i + 1] = str(net % 10)\n            break\n    if flag == 0:\n        net = int(s[0]) + int(s[1])\n        s[1] = str(net)\n        s = s[1:]\n    ans = ''.join(s)\n    print(ans)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    s = input()\n    k = len(s)\n    an = ''\n    for i in range(k - 1, 1, -1):\n        if int(s[i]) + int(s[i - 1]) > 9:\n            an += s[:i - 1] + str(int(s[i - 1]) + int(s[i])) + s[i + 1:]\n            break\n    else:\n        an += str(int(s[0]) + int(s[1])) + s[2:]\n    print(an)", "for _ in range(int(input())):\n    s = input()\n    pos = 0\n    for i in range(len(s) - 2, -1, -1):\n        if int(s[i]) + int(s[i + 1]) >= 10:\n            pos = i\n            break\n    print(s[:pos] + str(int(s[pos]) + int(s[pos + 1])) + s[pos + 2:])", "for _ in range(int(input())):\n    s = input()\n    cond = True\n    for i in range(len(s) - 2, -1, -1):\n        if int(s[i]) + int(s[i + 1]) > 9:\n            s = s[0:i] + str(int(s[i]) + int(s[i + 1])) + s[i + 2:]\n            cond = False\n            break\n    if cond:\n        s = str(int(s[0]) + int(s[1])) + s[2:]\n    print(s)", "def fun(n):\n    j = 0\n    for i in range(len(n) - 1):\n        if int(n[i]) + int(n[i + 1]) >= 10:\n            j = i\n    return n[:j] + str(int(n[j]) + int(n[j + 1])) + n[j + 2:]\nfor i in range(int(input())):\n    print(fun(input()))", "def solve(x):\n    i = len(x) - 1\n    while int(x[i]) + int(x[i - 1]) < 10 and i > 1:\n        i = i - 1\n    print(x[:i - 1] + str(int(x[i]) + int(x[i - 1])) + x[i + 1:])\ndebugmode = 0\nif debugmode:\n    with open('input.txt', 'r') as f:\n        t = int(f.readline())\n        for i in range(t):\n            x = f.readline()\n            x = x[:-1]\n            solve(x)\nelse:\n    t = int(input())\n    for i in range(t):\n        x = input()\n        solve(x)", "t = int(input())\nfor i in range(t):\n    x = input()\n    ind = len(x) - 1\n    while int(x[ind]) + int(x[ind - 1]) < 10 and ind > 0:\n        ind -= 1\n    if ind != 0:\n        ind -= 1\n    s = x[0:ind] + str(int(x[ind]) + int(x[ind + 1])) + x[ind + 2:len(x)]\n    print(s)", "t = int(input())\nfor i in range(t):\n    cnt = 0\n    a = input()\n    ln = len(a)\n    for i in range(ln - 1, 0, -1):\n        if int(a[i]) + int(a[i - 1]) > 9:\n            s = a[:i - 1] + str(int(a[i]) + int(a[i - 1])) + a[i + 1:ln]\n            break\n        cnt += 1\n    if cnt == ln - 1:\n        s = str(int(a[0]) + int(a[1])) + a[2:ln]\n    print(s)", "for _ in range(int(input())):\n    x = [ord(c) - ord('0') for c in input()]\n    n = len(x)\n    for i in range(n - 2, -1, -1):\n        if x[i] + x[i + 1] >= 10:\n            x[i + 1] += x[i] - 10\n            x[i] = 1\n            break\n    else:\n        x[1] += x[0]\n        x.pop(0)\n    print(''.join([chr(c + ord('0')) for c in x]))", "sz = len\n\ndef solve():\n    x = input()\n    for i in range(sz(x) - 1):\n        j = sz(x) - i - 1\n        y = int(x[j]) + int(x[j - 1])\n        if y >= 10:\n            print(x[:j - 1] + str(y) + x[j + 1:])\n            return\n    y = int(x[0]) + int(x[1])\n    print(str(y) + x[2:])\n    return\nt = int(input())\nwhile t > 0:\n    t -= 1\n    solve()", "for _ in range(int(input())):\n    x = [ord(c) - ord('0') for c in input()]\n    n = len(x)\n    for i in range(n - 2, -1, -1):\n        if x[i] + x[i + 1] >= 10:\n            x[i + 1] += x[i] - 10\n            x[i] = 1\n            break\n    else:\n        x[1] += x[0]\n        x.pop(0)\n    print(''.join([chr(c + ord('0')) for c in x]))", "t = int(input())\nfor i in range(t):\n    x = input()\n    ans = -1\n    for j in reversed(range(len(x) - 1)):\n        main = int(x[j]) + int(x[j + 1])\n        if main >= 10:\n            pre = x[0:j]\n            post = x[j + 2:]\n            ans = pre + str(main) + post\n            break\n    if ans == -1:\n        ans = str(int(x[0]) + int(x[1])) + x[2:]\n    print(ans)", "for _ in range(int(input())):\n    x = [ord(c) - ord('0') for c in input()]\n    n = len(x)\n    for i in range(n - 2, -1, -1):\n        if x[i] + x[i + 1] >= 10:\n            x[i + 1] += x[i] - 10\n            x[i] = 1\n            break\n    else:\n        x[1] += x[0]\n        x.pop(0)\n    print(''.join([chr(c + ord('0')) for c in x]))", "t = int(input())\nfor i in range(t):\n    a = 0\n    max = 0\n    string_s = input()\n    string = [int(x) for x in string_s]\n    if len(string_s) == 1:\n        print(string_s)\n        continue\n    for j in range(len(string) - 2, -1, -1):\n        if string[j] + string[j + 1] >= 10:\n            string[j + 1] += string[j] - 10\n            string[j] = 1\n            a = 1\n            break\n    if a == 1:\n        st = [str(x) for x in string]\n        y = ''.join(st)\n        print(y)\n        continue\n    print(str(int(string_s[0]) + int(string_s[1])) + string_s[2:])", "for _ in range(int(input())):\n    s = input()\n    s = s[::-1]\n    s = list(s)\n    flag = 0\n    for i in range(0, len(s) - 2):\n        temp = int(s[i]) + int(s[i + 1])\n        if temp > 9:\n            temp = str(temp)\n            s[i] = temp[1]\n            s[i + 1] = temp[0]\n            s = s[::-1]\n            s = ''.join(s)\n            flag = 1\n            break\n    if flag == 1:\n        print(s)\n    else:\n        s = s[::-1]\n        temp = int(s[0]) + int(s[1])\n        s = s[2:len(s)]\n        s = ''.join(s)\n        print(str(temp) + s)", "def solve():\n    s = str(input())\n    for i in reversed(range(len(s) - 1)):\n        if ord(s[i]) + ord(s[i + 1]) - 48 * 2 > 9:\n            print(s[:i] + str(ord(s[i]) + ord(s[i + 1]) - 48 * 2) + s[i + 2:])\n            return\n    for i in range(len(s) - 1):\n        if ord(s[i]) + ord(s[i + 1]) - 48 * 2 > int(s[i]):\n            print(s[:i] + str(ord(s[i]) + ord(s[i + 1]) - 48 * 2) + s[i + 2:])\n            return\n    print(s[:-1])\nnt = int(input())\nfor t in range(nt):\n    solve()", "for i in range(int(input())):\n    x = input()\n    final = ''\n    x = x[::-1]\n    for i in range(len(x) - 2):\n        if int(x[i]) + int(x[i + 1]) >= 10:\n            final = x[0:i] + str(int(x[i]) + int(x[i + 1]))[::-1] + x[i + 2:]\n            final = final[::-1]\n            break\n    else:\n        x = x[::-1]\n        final = str(int(x[0]) + int(x[1])) + x[2:]\n    print(final)", "for _ in range(int(input())):\n    x = [ord(c) - ord('0') for c in input()]\n    n = len(x)\n    for i in range(n - 2, -1, -1):\n        if x[i] + x[i + 1] >= 10:\n            x[i + 1] += x[i] - 10\n            x[i] = 1\n            break\n    else:\n        x[1] += x[0]\n        x.pop(0)\n    print(''.join([chr(c + ord('0')) for c in x]))", "for _ in range(int(input())):\n    x = [ord(c) - ord('0') for c in input()]\n    n = len(x)\n    for i in range(n - 2, -1, -1):\n        if x[i] + x[i + 1] >= 10:\n            x[i + 1] += x[i] - 10\n            x[i] = 1\n            break\n    else:\n        x[1] += x[0]\n        x.pop(0)\n    print(''.join([chr(c + ord('0')) for c in x]))"]