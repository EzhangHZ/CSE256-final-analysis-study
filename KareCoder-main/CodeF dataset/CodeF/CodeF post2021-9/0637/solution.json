["for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k == n:\n        print(10 ** 9)\n        continue\n    b = []\n    for i in range(n):\n        b.append((a[i], i))\n    b.sort()\n    i = 0\n    while k > 1:\n        a[b[i][1]] = 10 ** 9\n        i += 1\n        k -= 1\n    ans = 0\n    j = i\n    for i in range(1, n):\n        (x, y) = (a[i - 1], a[i])\n        z = b[j][0] * 2\n        if i - 1 <= b[j][1] <= i:\n            z = b[j + 1][0] * 2\n        z1 = b[j + 1][0] * 2\n        ans = max(ans, min(max(x, y), z), min(min(x, y), z1))\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k == n:\n        print(10 ** 9)\n        continue\n    b = []\n    for i in range(n):\n        b.append((a[i], i))\n    b.sort()\n    i = 0\n    while k > 1:\n        a[b[i][1]] = 10 ** 9\n        i += 1\n        k -= 1\n    ans = 0\n    j = i\n    for i in range(1, n):\n        (x, y) = (a[i - 1], a[i])\n        z = b[j][0] * 2\n        if i - 1 <= b[j][1] <= i:\n            z = b[j + 1][0] * 2\n        z1 = b[j + 1][0] * 2\n        ans = max(ans, min(max(x, y), z), min(min(x, y), z1))\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    A = sorted(((a[i], i) for i in range(n)))\n    if k == n:\n        print(1000000000)\n        continue\n    for i in range(k - 1):\n        a[A[i][1]] = 1000000000\n    (f, g) = (A[k - 1][0], A[k][0])\n    pairs = [min(a[i], a[i + 1]) for i in range(n - 1)]\n    L_max = [0]\n    R_max = [0]\n    for i in range(n - 1):\n        L_max.append(max(L_max[-1], pairs[i]))\n        R_max.append(max(R_max[-1], pairs[-i - 1]))\n    z = min(max(a[1], R_max[n - 2]), 2 * (f if f != a[0] else g))\n    z = max(z, min(max(a[-2], L_max[n - 2]), 2 * (f if f != a[-1] else g)))\n    for i in range(1, n - 1):\n        z = max(z, min(max(a[i - 1], a[i + 1], L_max[i - 1], R_max[n - 2 - i]), 2 * (f if f != a[i] else g)))\n    print(z)", "import random\nimport sys\nsys.setrecursionlimit(1000000000)\nfrom collections import defaultdict, deque\nfrom functools import lru_cache\nfrom bisect import bisect_left, bisect_right, insort_right, insort_left\nimport heapq\nfrom itertools import accumulate\n\ndef solve(n, nums, k):\n    M = 10 ** 9\n    Max = max(nums)\n\n    def check(t):\n        nums1 = list(nums)\n        tmp = 0\n        for i in range(n):\n            if nums1[i] * 2 < t:\n                nums1[i] = M\n                tmp += 1\n        if tmp > k:\n            return False\n        if k - tmp >= 2:\n            return True\n        if k - tmp == 1:\n            return max(nums1) >= t\n        return max((min(nums1[i], nums1[i + 1]) for i in range(n - 1))) >= t\n    lo = 0\n    hi = M\n    while lo < hi:\n        p = (lo + hi) // 2\n        if not check(p):\n            hi = p - 1\n        else:\n            if lo == p:\n                break\n            lo = p\n    if check(hi):\n        lo = hi\n    return lo\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().strip().split(' ')))\n    res = solve(n, list(map(int, input().strip().split(' '))), k)\n    print(res)"]