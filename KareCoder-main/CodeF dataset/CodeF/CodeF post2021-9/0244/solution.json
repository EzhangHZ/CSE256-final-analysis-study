["import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    n = int(inp())\n    a = list(map(int, inp().split()))\n    x = 1\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] //= 2\n            x *= 2\n    a.sort()\n    a[-1] *= x\n    print(sum(a))\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "for s in [*open(0)][2::2]:\n    (*a,) = map(int, s.split())\n    i = 0\n    k = 1\n    for x in a:\n        x &= -x\n        a[i] //= x\n        k *= x\n        i += 1\n    print(sum(a) + max(a) * (k - 1))", "for s in [*open(0)][2::2]:\n    (*a,) = map(int, s.split())\n    i = 0\n    k = 1\n    for x in a:\n        x &= -x\n        a[i] //= x\n        k *= x\n        i += 1\n    print(sum(a) + max(a) * (k - 1))", "for s in [*open(0)][2::2]:\n    (*a,) = map(int, s.split())\n    i = 0\n    k = 1\n    for x in a:\n        x &= -x\n        a[i] //= x\n        k *= x\n        i += 1\n    print(sum(a) + max(a) * (k - 1))", "w = int(input())\nl = []\nsum = 0\npower = 0\nfor i in range(w):\n    k = int(input())\n    t = list(map(int, input().split()))\n    l.append(t)\n\ndef count2(n):\n    maxn = 0\n    power = 0\n    sum = 0\n    for i in n:\n        while i % 2 == 0:\n            power += 1\n            i = i // 2\n        sum += i\n        if maxn < i:\n            maxn = i\n    return (sum, power, maxn)\nfor i in l:\n    q = count2(i)\n    print(q[0] - q[2] + q[2] * 2 ** q[1])", "w = int(input())\nl = []\nsum = 0\npower = 0\nfor i in range(w):\n    k = int(input())\n    t = list(map(int, input().split()))\n    l.append(t)\n\ndef count2(n):\n    maxn = 0\n    power = 0\n    sum = 0\n    for i in n:\n        while i % 2 == 0:\n            power += 1\n            i = i // 2\n        sum += i\n        if maxn < i:\n            maxn = i\n    return (sum, power, maxn)\nfor i in l:\n    q = count2(i)\n    print(q[0] - q[2] + q[2] * 2 ** q[1])", "for s in [*open(0)][2::2]:\n    (*a,) = map(int, s.split())\n    i = 0\n    k = 1\n    for x in a:\n        x &= -x\n        a[i] //= x\n        k *= x\n        i += 1\n    print(sum(a) + max(a) * (k - 1))", "for s in [*open(0)][2::2]:\n    (*a,) = map(int, s.split())\n    i = 0\n    k = 1\n    for x in a:\n        x &= -x\n        a[i] //= x\n        k *= x\n        i += 1\n    print(sum(a) + max(a) * (k - 1))", "def f(a):\n    k = j = 0\n    while j < len(a):\n        if not a[j] % 2:\n            a[j] //= 2\n            k += 1\n        else:\n            j += 1\n    a.sort()\n    a[-1] *= 2 ** k\n    return sum(a)\nt = int(input())\nc = []\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c.append(f(a))\nfor _ in c:\n    print(_)", "for s in [*open(0)][2::2]:\n    (*a,) = map(int, s.split())\n    i = 0\n    k = 1\n    for x in a:\n        x &= -x\n        a[i] //= x\n        k *= x\n        i += 1\n    print(sum(a) + max(a) * (k - 1))", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    arr = [int(x) for x in sys.stdin.readline().split()]\n    mul = 1\n    for i in range(len(arr)):\n        while arr[i] % 2 == 0:\n            arr[i] //= 2\n            mul *= 2\n    arr.sort()\n    arr[-1] *= mul\n    print(sum(arr))", "for s in [*open(0)][2::2]:\n    (*a,) = map(int, s.split())\n    i = 0\n    k = 1\n    for x in a:\n        x &= -x\n        a[i] //= x\n        k *= x\n        i += 1\n    print(sum(a) + max(a) * (k - 1))", "from sys import stdin\nt = int(stdin.readline())\nwhile t > 0:\n    t -= 1\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    p = 1\n    for i in range(n):\n        while a[i] % 2 == 0:\n            p *= 2\n            a[i] //= 2\n    M = max(a)\n    print(sum(a) - M + M * p)", "for s in [*open(0)][2::2]:\n    (*a,) = map(int, s.split())\n    i = 0\n    k = 1\n    for x in a:\n        x &= -x\n        a[i] //= x\n        k *= x\n        i += 1\n    print(sum(a) + max(a) * (k - 1))", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    c = 0\n    for i in range(n):\n        while a[i] % 2 == 0:\n            c += 1\n            a[i] //= 2\n    print(2 ** c * max(a) + (sum(a) - max(a)))", "import sys\nk = int(sys.stdin.readline())\nfor i in range(k):\n    n = int(sys.stdin.readline())\n    js = list(map(int, sys.stdin.readline().strip().split(' ')))\n    rs = 1\n    for j in range(len(js)):\n        while js[j] % 2 == 0:\n            js[j] //= 2\n            rs *= 2\n    js.sort()\n    print(sum(js[:-1]) + rs * js[-1])", "import sys\ninput = lambda : sys.stdin.readline().rstrip('\\r\\n')\ninp = lambda : list(map(int, sys.stdin.readline().rstrip('\\r\\n').split()))\nfor _ in range(int(input())):\n    n = int(input())\n    a = inp()\n    c = 0\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] //= 2\n            c += 1\n    a.sort()\n    a[-1] *= 2 ** c\n    print(sum(a))", "for s in [*open(0)][2::2]:\n    (*a,) = map(int, s.split())\n    m = k = max((b := [x // (x & -x) for x in a]))\n    for (x, y) in zip(a, b):\n        m *= x // y\n    print(sum(b) - k + m)", "for s in [*open(0)][2::2]:\n    (*a,) = map(int, s.split())\n    i = 0\n    k = 1\n    for x in a:\n        x &= -x\n        a[i] //= x\n        k *= x\n        i += 1\n    print(sum(a) + max(a) * (k - 1))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    input()\n    w = list(map(int, input().split()))\n    (c, d) = (0, [])\n    for i in w:\n        while i % 2 == 0:\n            i //= 2\n            c += 1\n        d.append(i)\n    d.sort()\n    print(sum(d[:-1]) + d[-1] * 2 ** c)", "for s in [*open(0)][2::2]:\n    (*a,) = map(int, s.split())\n    i = 0\n    k = 1\n    for x in a:\n        x &= -x\n        a[i] //= x\n        k *= x\n        i += 1\n    print(sum(a) + max(a) * (k - 1))", "import sys\n\ndef v2(x):\n    v = 0\n    while x % 2 == 0:\n        x //= 2\n        v += 1\n    return (v, x)\n\ndef main():\n    input = sys.stdin.readline\n    nbT = int(input())\n    for i in range(nbT):\n        n = int(input())\n        a = list(map(int, input().split()))\n        b = []\n        s = 0\n        for x in a:\n            (v, y) = v2(x)\n            s += v\n            b.append(y)\n        print(sum(b) - max(b) + max(b) * 2 ** s)\nmain()", "for s in [*open(0)][2::2]:\n    (*a,) = map(int, s.split())\n    b = [x // (x & -x) for x in a]\n    i = b.index((m := max(b)))\n    for (x, y) in zip(a, b):\n        m *= x // y\n    b[i] = m\n    print(sum(b))", "from collections import Counter\nfrom math import ceil, floor, log\nimport bisect as bs\nimport sys\ninput = sys.stdin.readline\ninp_lis = lambda : list(map(int, input().split()))\ninp_multi = lambda : map(int, input().split())\ninp_int = lambda : int(input().strip())\nfor _ in range(int(input())):\n    n = inp_int()\n    a = inp_lis()\n    c = 0\n    for i in range(n):\n        while a[i] % 2 == 0:\n            c += 1\n            a[i] = a[i] // 2\n    print(sum(a) - max(a) + max(a) * 2 ** c)", "import sys\nimport bisect\nimport math\nfrom collections import deque\ninput = lambda : sys.stdin.readline().strip()\nmod = 10 ** 9 + 7\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    (max_odd, even, s) = (1, 1, 0)\n    for i in range(n):\n        x = a[i]\n        while x % 2 == 0:\n            x //= 2\n            even *= 2\n        max_odd = max(max_odd, x)\n        s += x\n    return max_odd * even + s - max_odd\nt = 1\nt = int(input())\nfor _ in range(t):\n    print(solve())", "for s in [*open(0)][2::2]:\n    (*a,) = map(int, s.split())\n    i = 0\n    k = 1\n    for x in a:\n        x &= -x\n        a[i] //= x\n        k *= x\n        i += 1\n    print(sum(a) + max(a) * (k - 1))", "for s in [*open(0)][2::2]:\n    (*a,) = map(int, s.split())\n    i = 0\n    k = 1\n    for x in a:\n        x &= -x\n        a[i] //= x\n        k *= x\n        i += 1\n    print(sum(a) + max(a) * (k - 1))", "for s in [*open(0)][2::2]:\n    (*a,) = map(int, s.split())\n    i = 0\n    k = 1\n    for x in a:\n        x &= -x\n        a[i] //= x\n        k *= x\n        i += 1\n    print(sum(a) + max(a) * (k - 1))", "for s in [*open(0)][2::2]:\n    (*a,) = map(int, s.split())\n    i = 0\n    k = 1\n    for x in a:\n        x &= -x\n        a[i] //= x\n        k *= x\n        i += 1\n    print(sum(a) + max(a) * (k - 1))", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    ai = list(map(int, input().split()))\n    val = 0\n    for i in range(n):\n        while ai[i] % 2 == 0:\n            ai[i] //= 2\n            val += 1\n    ai[ai.index(max(ai))] *= pow(2, val)\n    print(sum(ai))", "import sys\n\ndef powerOfTwo(n):\n    power = 0\n    while n % 2 == 0:\n        power += 1\n        n = n // 2\n    return power\n\ndef main():\n    input = sys.stdin.readline\n    print = sys.stdout.write\n    t = int(input())\n    for i in [0] * t:\n        n = int(input())\n        nums = list(map(int, input().split()))\n        power_of_two = 0\n        for k in range(n):\n            p_t = powerOfTwo(nums[k])\n            power_of_two += p_t\n            nums[k] = nums[k] // 2 ** p_t\n        max_num = max(nums)\n        answer = sum(nums) + max_num * 2 ** power_of_two - max_num\n        print(str(answer) + '\\n')\nmain()", "t = int(input())\n\ndef dic(arr):\n    d = {}\n    no = 0\n    lol = 0\n    sub = 0\n    mx = 1\n    for i in arr:\n        count = 0\n        if True:\n            x = i\n            while i % 2 == 0:\n                i = i // 2\n                count += 1\n                no += 1\n            lol += i\n            if i > mx:\n                mx = i\n    ans = mx * 2 ** no + lol - mx\n    return ans\nwhile t > 0:\n    t = t - 1\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n != 1:\n        print(int(dic(arr)))\n    else:\n        print(int(*arr))", "for s in [*open(0)][2::2]:\n    (*a,) = map(int, s.split())\n    m = max((b := [x // (x & -x) for x in a]))\n    r = sum(b) - m\n    for (x, y) in zip(a, b):\n        m *= x // y\n    print(r + m)", "def get_min2(list):\n    for min in list:\n        if min % 2 == 0:\n            break\n        else:\n            continue\n    for item in list:\n        if item < min and item % 2 == 0:\n            min = item\n        else:\n            continue\n    return min\n\ndef chu2(n):\n    i = 0\n    while n % 2 == 0:\n        n = n / 2\n        i += 1\n    return (n, i)\n\ndef operation(num, list):\n    nsum = 0\n    sum1 = 0\n    for i in range(0, num):\n        if list[i] % 2 != 0:\n            continue\n        else:\n            (list[i], b) = chu2(list[i])\n            nsum += b\n    max1 = max(list)\n    index_max = list.index(max1)\n    list[index_max] = max1 * 2 ** nsum\n    sum1 = sum(list)\n    return sum1\nwhile True:\n    try:\n        answer = []\n        a = int(input())\n        list1 = []\n        for i in range(0, a):\n            b = int(input())\n            list1 = list(map(int, input().split()))\n            c = len(list1)\n            d = operation(c, list1)\n            answer.append(d)\n        for item in answer:\n            print(int(item))\n    except:\n        break", "t = int(input())\nk = 0\nlst = []\nwhile t > 0:\n    a = int(input())\n    l = list(map(int, input().split()))\n    for x in range(a):\n        while l[x] % 2 == 0:\n            l[x] = l[x] // 2\n            k += 1\n    l = sorted(l)\n    for x in range(k):\n        l[-1] *= 2\n    k = 0\n    lst.append(str(sum(l)))\n    t -= 1\nprint('\\n'.join(lst))", "def solve():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    temp = 1\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] //= 2\n            temp *= 2\n    a.sort()\n    a[-1] *= temp\n    print(sum(a))\nt = int(input())\nfor i in range(t):\n    solve()", "def solve():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    temp = 1\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] //= 2\n            temp *= 2\n    a.sort()\n    a[-1] *= temp\n    print(sum(a))\nt = int(input())\nfor i in range(t):\n    solve()", "def solve():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    temp = 1\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] //= 2\n            temp *= 2\n    a.sort()\n    a[-1] *= temp\n    print(sum(a))\nt = int(input())\nfor i in range(t):\n    solve()", "import sys\nimport bisect\ninp = sys.stdin.readline\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\nfor _ in range(int(inp())):\n    n = int(inp())\n    a = [int(i) for i in inp().split()]\n    a.sort()\n    c = 0\n    for i in range(n):\n        while a[i] % 2 == 0:\n            c += 1\n            a[i] //= 2\n    print(sum(a) - max(a) + max(a) * 2 ** c)", "def solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 1\n    for i in range(n):\n        while arr[i] % 2 == 0:\n            arr[i] //= 2\n            ans *= 2\n    print(sum(arr) + max(arr) * ans - max(arr))\ntst = int(input())\nfor i in range(tst):\n    solve()", "res = []\ntests = int(input())\nres.extend(range(0, tests))\nfor i in range(0, tests):\n    size = int(input())\n    arr = list(map(int, input().split()))\n    n = 0\n    for j in range(0, size):\n        while arr[j] % 2 == 0:\n            arr[j] = arr[j] / 2\n            n = n + 1\n        j = j + 1\n    x = max(arr)\n    arr.remove(x)\n    arr.append(2 ** n * x)\n    res[i] = int(sum(arr))\nfor i in range(0, tests):\n    print(res[i])", "from collections import Counter\nimport bisect as bs\nimport sys\ninput = sys.stdin.readline\nfrom math import ceil, floor, log\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    y = 0\n    for i in range(n):\n        while a[i] % 2 == 0:\n            y += 1\n            a[i] = a[i] // 2\n    print(sum(a) - max(a) + 2 ** y * max(a))", "from collections import defaultdict as dd\nimport math\nimport sys\ninput = sys.stdin.readline\n\ndef nn():\n    return int(input())\n\ndef li():\n    return list(input())\n\ndef mi():\n    return map(int, input().split())\n\ndef lm():\n    return list(map(int, input().split()))\n\ndef find_two(num):\n    n = 0\n    while num % 2 == 0:\n        num /= 2\n        n += 1\n    return (n, num)\n\ndef main():\n    num_cases = nn()\n    for n in range(num_cases):\n        num_elems = nn()\n        elems = lm()\n        total = 0\n        twos = 0\n        new_elems = [find_two(x) for x in elems]\n        max_elem = new_elems[0]\n        for e in new_elems:\n            if e[1] > max_elem[1]:\n                max_elem = e\n            total += e[1]\n            twos += e[0]\n        total -= max_elem[1]\n        total += max_elem[1] * 2 ** twos\n        print(int(total))\nmain()", "n = int(input())\np = []\na = []\nfor k in range(n):\n    a.append(input())\n    for i in range(len(a)):\n        p.append(input().split())\n    a = []\nfor i in range(len(p)):\n    r = p[i]\n    r = [int(i) for i in r]\n    count = 0\n    for k in range(len(r)):\n        while r[k] % 2 == 0:\n            count = count + 1\n            r[k] = int(r[k] / 2)\n    r.sort()\n    r[-1] = r[-1] * 2 ** count\n    print(sum(r))", "def solve():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    temp = 1\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] //= 2\n            temp *= 2\n    a.sort()\n    a[-1] *= temp\n    print(sum(a))\nt = int(input())\nfor i in range(t):\n    solve()", "def solve():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    temp = 1\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] //= 2\n            temp *= 2\n    a.sort()\n    a[-1] *= temp\n    print(sum(a))\nt = int(input())\nfor i in range(t):\n    solve()", "def solve():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    temp = 1\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] //= 2\n            temp *= 2\n    a.sort()\n    a[-1] *= temp\n    print(sum(a))\nt = int(input())\nfor i in range(t):\n    solve()", "def solve():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    temp = 1\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] //= 2\n            temp *= 2\n    a.sort()\n    a[-1] *= temp\n    print(sum(a))\nt = int(input())\nfor i in range(t):\n    solve()", "def solve():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    temp = 1\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] //= 2\n            temp *= 2\n    a.sort()\n    a[-1] *= temp\n    print(sum(a))\nt = int(input())\nfor i in range(t):\n    solve()", "import sys\nimport math\nimport copy\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef inltstr():\n    return list(map(str, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef factorial(n):\n    if n == 1:\n        return n\n    elif n < 1:\n        return 'NA'\n    else:\n        return n * factorial(n - 1)\n\ndef coeffBin(k):\n    return factorial(k + 1) / (factorial(2) * factorial(k - 1))\n\ndef solve(n, arr):\n    res = 1\n    c = []\n    sub = []\n    for i in arr:\n        temp = 1\n        while i % 2 == 0:\n            temp = temp * 2\n            i = i / 2\n        sub.append(int(i))\n        if temp > 0:\n            c.append(temp)\n    m = max(sub)\n    ind = sub.index(m)\n    res = arr[ind]\n    arr.remove(res)\n    sub.remove(m)\n    c.remove(c[ind])\n    for x in c:\n        res = res * x\n    for x in sub:\n        res += x\n    return res\nres = []\niter = inp()\ni = 0\nwhile i < iter:\n    n = inp()\n    arr = inlt()\n    result = solve(n, arr)\n    res.append(result)\n    i += 1\nfor r in res:\n    print(r)", "for s in [*open(0)][2::2]:\n    (*a,) = map(int, s.split())\n    i = (b := [x // (x & -x) for x in a]).index(max(b))\n    j = 0\n    for (x, y) in zip(a, b):\n        a[i] *= x // y\n        a[j] //= x // y\n        j += 1\n    print(sum(a))", "import itertools\nfrom math import floor, log, log2, ceil, sqrt\nfrom itertools import groupby\nfrom decimal import Decimal, getcontext\nimport sys\nfrom collections import deque\nt = int(input())\nres = []\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    counts = 0\n    _max = 0\n    ans = 0\n    for i in range(n):\n        ost = 0\n        if a[i] % 2 == 0:\n            mult = 0\n            ost = a[i]\n            while ost % 2 == 0:\n                mult += 1\n                ost = ost // 2\n            counts += mult\n        else:\n            ost = a[i]\n        if ost > _max:\n            _max = ost\n        ans += ost\n    ans = ans - _max + _max * 2 ** counts\n    res.append(ans)\nfor i in range(t):\n    print(res[i])", "def p(num):\n    k = 0\n    while num % 2 != 1:\n        k = k + 1\n        num = num / 2\n    return pow(2, k)\n\ndef f(n, l):\n    c = 1\n    a = -1\n    id = -1\n    for i in range(n):\n        if l[i] % 2 == 0:\n            f = p(l[i])\n            c = c * f\n            l[i] = l[i] // f\n        if l[i] > a:\n            a = l[i]\n            id = i\n    l[id] = l[id] * c\n    return sum(l)\nx = int(input())\nm = []\nfor i in range(x):\n    z = int(input())\n    y = input()\n    y1 = y.split(' ')\n    y2 = [int(t) for t in y1]\n    m.append((z, y2))\nfor j in range(x):\n    print(f(m[j][0], m[j][1]))", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = 1\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] //= 2\n            x *= 2\n    a.sort()\n    a[-1] *= x\n    print(sum(a))\nt = int(input())\nfor i in range(t):\n    solve()", "def lol(arr, n):\n    m = 1\n    for i in range(n):\n        while arr[i] % 2 == 0:\n            m = m * 2\n            arr[i] = arr[i] // 2\n    arr.sort()\n    arr[-1] = arr[-1] * m\n    print(sum(arr))\n    return\nfor t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    lol(arr, n)", "t = int(input())\n\ndef check(x):\n    if x % 2 != 0:\n        return (0, x)\n    elif x % 2 == 0 and x % 4 != 0:\n        return (1, x // 2)\n    elif x % 4 == 0 and x % 8 != 0:\n        return (2, x // 4)\n    elif x == 8:\n        return (3, 1)\nans = []\nfor i in range(0, t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    lastin = 0\n    for j in range(0, n):\n        (a, b) = check(arr[j])\n        lastin += a\n        arr[j] = b\n    m = max(arr)\n    arr.remove(m)\n    alpha = sum(arr)\n    alpha += 2 ** lastin * m\n    ans.append(alpha)\nfor x in ans:\n    print(x)", "def solve():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    temp = 1\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] //= 2\n            temp *= 2\n    a.sort()\n    a[-1] *= temp\n    print(sum(a))\nt = int(input())\nfor i in range(t):\n    solve()", "def solve():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    temp = 1\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] //= 2\n            temp *= 2\n    a.sort()\n    a[-1] *= temp\n    print(sum(a))\nt = int(input())\nfor i in range(t):\n    solve()", "def solve():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    temp = 1\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] //= 2\n            temp *= 2\n    a.sort()\n    a[-1] *= temp\n    print(sum(a))\nt = int(input())\nfor i in range(t):\n    solve()", "def main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    two = 0\n    for i in range(n):\n        while arr[i] % 2 == 0 and arr[i] != 0:\n            two += 1\n            arr[i] = arr[i] // 2\n    mx = max(arr)\n    m = mx * pow(2, two)\n    return sum(arr) - mx + m\nfor _ in range(int(input())):\n    print(main())", "from sys import stdin\nimport math\nfrom collections import deque\nfrom heapq import heapify, heappop, heappush\nfrom bisect import bisect_left, bisect_right\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (total, product, odd, oddidx) = (0, 1, True, 0)\n    for i in range(n):\n        a = arr[i]\n        power = a & ~(a - 1)\n        product *= power\n        arr[i] //= power\n        if arr[i] % 2 == 1:\n            odd = True\n            if arr[i] > arr[oddidx]:\n                oddidx = i\n    print(sum(arr) - arr[oddidx] + product * arr[oddidx])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    v = list(map(int, input().split()))\n    k = 0\n    b = []\n    for x in v:\n        while x % 2 == 0:\n            x //= 2\n            k += 1\n        b.append(x)\n    b.sort()\n    b[-1] *= 1 << k\n    print(sum(b))", "import sys\nimport os.path\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\n    sys.stderr = open('error.txt', 'w')\ndepth = 1000000\nmod = 1000000007\nlim = mod * mod\nsys.setrecursionlimit(depth)\nlinp = lambda : list(minp())\nminp = lambda : map(int, input().split())\nfrom math import inf, ceil, sqrt, log2, gcd\nfrom collections import defaultdict, deque\ndxy = [(1, 0), (-1, 0), (0, 1), (0, -1)]\n\ndef expo(a, b):\n    if not b:\n        return 1\n    v = expo(a, b // 2)\n    v = v * v % mod\n    if b % 2:\n        v = v * a % mod\n    return v\n\ndef modinv(a, b):\n    d = expo(b, mod - 2)\n    v = a * d % mod\n    return v\n\ndef checkPrime(n):\n    if n < 4:\n        return True\n    if n % 2 == 0:\n        return False\n    for i in range(3, int(sqrt(n)) + 1, 2):\n        if n % i == 0:\n            return False\n    return True\nfor _ in range(int(input())):\n    n = int(input())\n    a = linp()\n    v = 1\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] = a[i] // 2\n            v = v * 2\n    a.sort()\n    a[-1] *= v\n    print(sum(a))", "import sys\nfor _ in range(int(input())):\n    n = list(map(int, sys.stdin.readline().split()))\n    arr = list(map(int, sys.stdin.readline().split()))\n    count = 0\n    for i in range(len(arr)):\n        x = (arr[i] & -arr[i]).bit_length() - 1\n        arr[i] = arr[i] // 2 ** x\n        count += x\n    arr.sort()\n    arr[-1] = arr[-1] * 2 ** count\n    print(sum(arr))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = 0\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] //= 2\n            k += 1\n    a.sort()\n    a[-1] *= 2 ** k\n    ans = sum(a)\n    print(ans)", "nadiri = int(input())\nfor _ in range(nadiri):\n    lomi = int(input())\n    andria = 0\n    cotne = list(map(int, input().split()))\n    for i in range(len(cotne)):\n        while cotne[i] % 2 == 0:\n            andria = andria + 1\n            cotne[i] //= 2\n    print(sum(cotne) + max(cotne) * (2 ** andria - 1))", "def solve():\n    input()\n    array_map = map(int, input().split())\n    (even, odd) = ([], [])\n    k = 0\n    for element in array_map:\n        if element % 2:\n            odd.append(element)\n        else:\n            even.append(element)\n    while even:\n        num = even.pop()\n        while not num % 2:\n            k += 1\n            num //= 2\n        odd.append(num)\n    highest = max(odd)\n    print(highest * 2 ** k + sum(odd) - highest)\nfor _ in range(int(input())):\n    solve()", "def solve():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    temp = 1\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] //= 2\n            temp *= 2\n    a.sort()\n    a[-1] *= temp\n    print(sum(a))\nt = int(input())\nfor i in range(t):\n    solve()", "def solve():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    temp = 1\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] //= 2\n            temp *= 2\n    a.sort()\n    a[-1] *= temp\n    print(sum(a))\nt = int(input())\nfor i in range(t):\n    solve()", "def divideMultipy(arr, n):\n    temp = 1\n    for i in range(n):\n        while arr[i] % 2 == 0:\n            arr[i] = arr[i] // 2\n            temp *= 2\n    arr.sort()\n    arr[-1] *= temp\n    return sum(arr)\ntestcase = int(input())\nwhile testcase != 0:\n    testcase -= 1\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    print(divideMultipy(arr, n))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    tmp = 1\n    for i in range(n):\n        while a[i] % 2 == 0:\n            tmp *= 2\n            a[i] //= 2\n    a = sorted(a)\n    print(sum(a[:-1]) + a[-1] * tmp)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    tp = 0\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] = a[i] // 2\n            tp = tp + 1\n    su = sum(a) - max(a) + max(a) * 2 ** tp\n    print(su)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    temp = 1\n    for i in range(n):\n        while arr[i] % 2 == 0:\n            temp *= 2\n            arr[i] //= 2\n    a = sorted(arr)\n    print(sum(a[:n - 1]) + a[-1] * temp)", "def solve():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    temp = 1\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] //= 2\n            temp *= 2\n    a.sort()\n    a[-1] *= temp\n    print(sum(a))\nt = int(input())\nfor i in range(t):\n    solve()", "def solve():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    temp = 1\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] //= 2\n            temp *= 2\n    a.sort()\n    a[-1] *= temp\n    print(sum(a))\nt = int(input())\nfor i in range(t):\n    solve()", "def solve():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    temp = 1\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] //= 2\n            temp *= 2\n    a.sort()\n    a[-1] *= temp\n    print(sum(a))\nt = int(input())\nfor i in range(t):\n    solve()", "def f(l):\n    x = 0\n    for i in range(len(l)):\n        while l[i] % 2 == 0:\n            l[i] = l[i] // 2\n            x = x + 1\n    return sum(l) - max(l) + 2 ** x * max(l)\nn = int(input())\nfor _ in range(n):\n    t = int(input())\n    l = list(map(int, input().split()))\n    print(f(l))", "def solve():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    temp = 1\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] //= 2\n            temp *= 2\n    a.sort()\n    a[-1] *= temp\n    print(sum(a))\nt = int(input())\nfor i in range(t):\n    solve()", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    tp = 0\n    for i in range(n):\n        while not a[i] % 2:\n            a[i] //= 2\n            tp += 1\n    print(sum(a) - max(a) + max(a) * 2 ** tp)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    x = 0\n    y = n - 1\n    var = 0\n    for j in range(y + 1):\n        while l[j] % 2 == 0:\n            l[j] = l[j] // 2\n            var += 1\n    l.sort()\n    l[y] = l[y] * 2 ** var\n    print(sum(l))", "def solve():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    temp = 1\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] //= 2\n            temp *= 2\n    a.sort()\n    a[-1] *= temp\n    print(sum(a))\nt = int(input())\nfor i in range(t):\n    solve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    multiplier = 1\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] //= 2\n            multiplier *= 2\n    a.sort()\n    a[-1] *= multiplier\n    print(sum(a))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    tmp = 1\n    for i in range(n):\n        while a[i] % 2 == 0:\n            tmp *= 2\n            a[i] //= 2\n    a = sorted(a)\n    print(sum(a[:-1]) + a[-1] * tmp)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    temp = 1\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] //= 2\n            temp *= 2\n    a.sort()\n    a[-1] *= temp\n    print(sum(a))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = 1\n    for i in range(n):\n        while l[i] % 2 == 0:\n            a *= 2\n            l[i] //= 2\n    l.sort()\n    l[-1] *= a\n    print(sum(l))", "def solve():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    temp = 1\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] //= 2\n            temp *= 2\n    a.sort()\n    a[-1] *= temp\n    print(sum(a))\nt = int(input())\nfor i in range(t):\n    solve()", "def dnm():\n    n = int(input())\n    a = list(map(int, input().split()))\n    te = 1\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] = a[i] // 2\n            te = te * 2\n    a.sort()\n    a[-1] = a[-1] * te\n    print(sum(a))\nt = int(input())\nfor i in range(t):\n    dnm()", "def solve():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    temp = 1\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] //= 2\n            temp *= 2\n    a.sort()\n    a[-1] *= temp\n    print(sum(a))\nt = int(input())\nfor i in range(t):\n    solve()", "for _ in range(0, int(input())):\n    n = int(input())\n    v = list(map(int, input().split()))\n    t = 0\n    for (i, x) in enumerate(v):\n        while x % 2 == 0:\n            x //= 2\n            t += 1\n        v[i] = x\n    (*u, M) = sorted(v)\n    print(M * 2 ** t + sum(u))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    temp = 1\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] //= 2\n            temp *= 2\n    a.sort()\n    a[-1] *= temp\n    print(sum(a))", "def solve():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    temp = 1\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] //= 2\n            temp *= 2\n    a.sort()\n    a[-1] *= temp\n    print(sum(a))\nt = int(input())\nfor i in range(t):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        while arr[i] % 2 == 0:\n            arr[i] //= 2\n            count += 1\n    arr.sort()\n    arr[-1] *= 2 ** count\n    print(sum(arr))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    temp = 1\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] //= 2\n            temp *= 2\n    a.sort()\n    a[-1] *= temp\n    print(sum(a))", "t = int(input())\nfor i in range(t):\n    w = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    for j in range(len(a)):\n        while a[j] % 2 == 0:\n            a[j] = a[j] // 2\n            count += 1\n    s = 2 ** count\n    a.sort()\n    a[-1] *= s\n    print(sum(a))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    c = 0\n    for x in range(n):\n        while a[x] % 2 == 0:\n            a[x] //= 2\n            c += 1\n    a.sort()\n    a[n - 1] *= pow(2, c)\n    print(sum(a))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    num = 1\n    for i in range(n):\n        while l[i] % 2 == 0:\n            l[i] //= 2\n            num *= 2\n    l.sort()\n    l[-1] *= num\n    print(sum(l))", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    c = 0\n    for x in a:\n        while x % 2 == 0:\n            x //= 2\n            c += 1\n        b.append(x)\n    print(sum(b) + max(b) * (2 ** c - 1))\nt = int(input())\nfor i in range(t):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    cnt = 0\n    for i in range(len(a)):\n        while a[i] % 2 == 0:\n            cnt += 1\n            a[i] = a[i] // 2\n    a.sort()\n    a[-1] = a[-1] * pow(2, cnt)\n    print(sum(a))"]