["import math\nimport random\nimport sys\n\ndef main(n, p):\n    tot = 0\n    for i in range(0, n):\n        c0 = math.comb(i, 3)\n        c1 = math.comb(i, 2) * math.comb(n - i, 1)\n        c2 = math.comb(i, 1) * math.comb(n - i, 2)\n        c3 = math.comb(n - i, 3)\n        num = c0 + c1 + 0.5 * c2 + 0 * c3\n        den = c0 + c1 + c2 + c3\n        if num / den >= p:\n            return i\n    return 'WHAT'\n(n, p) = list(map(float, input().split()))\nn = int(n)\nprint(main(n, p))", "import math\n\ndef probCalc(studied, numMaps):\n    total = math.comb(numMaps, 3)\n    return (math.comb(studied, 3) + math.comb(studied, 2) * math.comb(numMaps - studied, 1) + 1 / 2 * math.comb(studied, 1) * math.comb(numMaps - studied, 2)) / total\n[n, p] = input().split(' ')\nn = int(n)\np = float(p)\nfor i in range(n):\n    if probCalc(i, n) >= p:\n        print(i)\n        break", "t = input().split()\nn = int(t[0])\nd = float(t[1])\n(r, k) = (0, 0)\nwhile r < d:\n    k += 1\n    r = 1 - ((n - k) * (n - k - 1) * (n - k - 2) / 6 + 0.5 * k * (n - k) * (n - k - 1) / 2) / (n * (n - 1) * (n - 2) / 6)\nprint(k)", "(n, p) = [float(x) for x in input().split()]\nn = int(n)\n\ndef nck(n, k):\n    if k > n:\n        return 0\n    tmp = 1\n    for i in range(2, k):\n        tmp *= k\n    ans = 1\n    for i in range(k):\n        ans *= n - i\n    return float(ans) / float(tmp)\nfor i in range(n + 1):\n    known = i\n    unknown = n - i\n    ans = nck(unknown, 2) * nck(known, 1) * 0.5 + nck(unknown, 1) * nck(known, 2) * 1.0 + nck(known, 3) * 1.0\n    ans /= max(nck(n, 3), 1)\n    if ans >= p:\n        print(i)\n        break", "def prob(n, k):\n    pt = (k * (k - 2) * (k - 1) + 3 * (k - 1) * k * (n - k) + 3 / 2 * k * (n - k) * (n - k - 1)) / (n * (n - 2) * (n - 1))\n    return pt\nnp = input()\nnp = np.split(' ')\nn = int(np[0])\np = float(np[1])\nleft = 0\nright = n\nwhile left < right:\n    k = (left + right) // 2\n    if prob(n, k) < p:\n        left = k + 1\n    else:\n        right = k\nwhile prob(n, k) < p:\n    k += 1\nprint(k)", "import math\n\ndef combin(n, m):\n    if n == m:\n        return 1\n    if n < m:\n        return 0\n    a = 1\n    for i in range(n, n - m, -1):\n        a *= i\n    b = 1\n    for i in range(1, m + 1):\n        b *= i\n    return a / b\n(a, b) = input().split()\nn = int(a)\np = float(b) * combin(n, 3)\nfor i in range(0, n + 1):\n    ans = combin(i, 3) + combin(i, 2) * combin(n - i, 1)\n    ans += combin(i, 1) * combin(n - i, 2) / 2\n    if ans >= p:\n        print(i)\n        break", "prob = lambda n, k: (k * (k - 1) * (k - 2) / 6 + k * (k - 1) / 2 * (n - k) + (n - k) * (n - k - 1) / 2 * k / 2) / (n * (n - 1) * (n - 2) / 6)\nEPS = 1e-08\n(N, P) = input().split()\nN = int(N)\nP = float(P)\nfor k in range(0, N + 1):\n    p = prob(N, k)\n    if p + EPS >= P:\n        print(k)\n        exit(0)", "import sys\n\ndef calc_probability(N, K):\n    M = N - K\n    a = [0, M * (M - 1) // 2 * K, M * K * (K - 1) // 2, K * (K - 1) * (K - 2) // 6]\n    res = 0\n    for i in range(1, 4):\n        b = [0] * 3\n        for j in range(i):\n            b[j] = 1\n        p = 0\n        x = 2\n        for y in range(3):\n            if x == y:\n                p += (i - b[x]) / 2\n            else:\n                p += i - b[x] - b[y]\n        res += p / 3 * a[i]\n    return res / (N * (N - 1) * (N - 2) // 6)\n\ndef solve():\n    inp = sys.stdin.readline\n    (N, P) = inp().split()\n    (N, P) = (int(N), int(float(P) * 10000 + 0.5))\n    r = N\n    l = -1\n    while r - l > 1:\n        c = (l + r) // 2\n        if calc_probability(N, c) * 10000 >= P:\n            r = c\n        else:\n            l = c\n    print(r)\n\ndef main():\n    solve()\nmain()", "from math import factorial as fac\ntmp = 1\nfc = []\nfor i in range(1001):\n    fc.append(tmp)\n    tmp *= i + 1\n\ndef bio(n, m):\n    if n < m:\n        return 0\n    return fc[n] // fc[m] // fc[n - m]\ninp = input('').split(' ')\n(N, P) = (int(inp[0]), float(inp[1]))\nfor x in range(0, N):\n    if (2 * bio(x, 3) + 2 * (N - x) * bio(x, 2) + x * bio(N - x, 2)) / (2 * bio(N, 3)) >= P:\n        print(x)\n        break"]