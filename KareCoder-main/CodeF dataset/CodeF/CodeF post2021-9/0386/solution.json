["import sys\ninput = lambda : sys.stdin.readline()\n\ndef read_ints():\n    return [int(x) for x in input().split(' ')]\n\ndef read_int():\n    return int(input())\n\ndef min_e(n):\n    return n - 1\n\ndef max_e(n):\n    return n * (n - 1) // 2\nT = read_int()\nans = []\nfor t in range(T):\n    (n, m, k) = read_ints()\n    mie = min_e(n)\n    mae = max_e(n)\n    if mie <= m <= mae:\n        if n == 1:\n            d = 0\n        elif m == mae:\n            d = 1\n        else:\n            d = 2\n        if k - 1 > d:\n            ans.append('YES')\n        else:\n            ans.append('NO')\n    else:\n        ans.append('NO')\nprint('\\n'.join(ans))", "import sys\ninput = sys.stdin.readline\nprint = sys.stdout.write\nfor _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    su = a * (a - 1) // 2\n    if a == 1:\n        if b == 0:\n            print('YES\\n' if c > 1 else 'NO\\n')\n        else:\n            print('NO\\n')\n    elif a == 2:\n        if b == 1:\n            print('YES\\n' if c > 2 else 'NO\\n')\n        else:\n            print('NO\\n')\n    elif b < a - 1:\n        print('NO\\n')\n    elif su < b:\n        print('NO\\n')\n    elif su == b:\n        print('YES\\n' if c > 2 else 'NO\\n')\n    elif c <= 3:\n        print('NO\\n')\n    elif c > 3:\n        print('YES\\n')", "from sys import stdin, stdout\ninput = stdin.readline\n\ndef inp():\n    return map(int, input().split())\nfor _ in range(int(input())):\n    (n, m, k) = inp()\n    if k <= 1:\n        print('NO')\n    elif k == 2:\n        if n == 1 and m == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif k == 3:\n        if m == n * (n - 1) // 2:\n            print('YES')\n        else:\n            print('NO')\n    elif m >= n - 1 and m <= n * (n - 1) // 2:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin, stdout\ninput = stdin.readline\n\ndef inp():\n    return map(int, input().split())\nfor _ in range(int(input())):\n    (n, m, k) = inp()\n    if k <= 1:\n        print('NO')\n    elif k == 2:\n        if n == 1 and m == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif k == 3:\n        if m == n * (n - 1) // 2:\n            print('YES')\n        else:\n            print('NO')\n    elif m >= n - 1 and m <= n * (n - 1) // 2:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin, stdout\ninput = stdin.readline\n\ndef inp():\n    return map(int, input().split())\nfor _ in range(int(input())):\n    (n, m, k) = inp()\n    if k <= 1:\n        print('NO')\n    elif k == 2:\n        if n == 1 and m == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif k == 3:\n        if m == n * (n - 1) // 2:\n            print('YES')\n        else:\n            print('NO')\n    elif m >= n - 1 and m <= n * (n - 1) // 2:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin, stdout\ninput = stdin.readline\n\ndef inp():\n    return map(int, input().split())\nfor _ in range(int(input())):\n    (n, m, k) = inp()\n    if k <= 1:\n        print('NO')\n    elif k == 2:\n        if n == 1 and m == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif k == 3:\n        if m == n * (n - 1) // 2:\n            print('YES')\n        else:\n            print('NO')\n    elif m >= n - 1 and m <= n * (n - 1) // 2:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin, stdout\ninput = stdin.readline\n\ndef inp():\n    return map(int, input().split())\nfor _ in range(int(input())):\n    (n, m, k) = inp()\n    if k <= 1:\n        print('NO')\n    elif k == 2:\n        if n == 1 and m == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif k == 3:\n        if m == n * (n - 1) // 2:\n            print('YES')\n        else:\n            print('NO')\n    elif m >= n - 1 and m <= n * (n - 1) // 2:\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, m, k) = map(int, input().split())\n    if not n - 1 <= m <= n * (n - 1) // 2:\n        return 'NO'\n    if k <= 1:\n        return 'NO'\n    if m == 0:\n        if n > 1:\n            return 'NO'\n        else:\n            return 'YES'\n    if n == 1:\n        if m != 0:\n            return 'NO'\n        else:\n            return 'YES'\n    maxEdge = n * (n - 1) // 2\n    if maxEdge == m:\n        return 'YES' if k >= 3 else 'NO'\n    elif maxEdge < m:\n        return 'NO'\n    else:\n        return 'NO' if k < 4 or m < n - 1 else 'YES'\nfor _ in range(int(input())):\n    print(solve())", "from sys import stdin\n\ndef read_input():\n    (n, m, k) = map(int, stdin.readline().split())\n    return (n, m, k)\n\ndef solve(n, m, k):\n    if k == 0 or k == 1:\n        return 'NO'\n    elif k == 2:\n        if n == 1 and m == 0:\n            return 'YES'\n        else:\n            return 'NO'\n    elif k == 3:\n        if m == n * (n - 1) // 2:\n            return 'YES'\n        else:\n            return 'NO'\n    elif m >= n - 1 and m <= n * (n - 1) // 2:\n        return 'YES'\n    else:\n        return 'NO'\n\ndef main():\n    t = int(stdin.readline())\n    for _ in range(t):\n        (n, m, k) = read_input()\n        answer = solve(n, m, k)\n        print(answer)\nmain()", "import sys\ninput = sys.stdin.readline\nt = int(input())\nwhile t > 0:\n    (n, m, k) = map(int, input().split())\n    if k == 3 and m == n * (n - 1) // 2 or (k > 3 and m >= n - 1 and (m <= n * (n - 1) // 2)) or (n == 1 and m == 0 and (k > 1)):\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "from sys import stdin, stdout\ninput = stdin.readline\n\ndef inp():\n    return map(int, input().split())\nfor _ in range(int(input())):\n    (n, m, k) = inp()\n    if k <= 1:\n        print('NO')\n    elif k == 2:\n        if n == 1 and m == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif k == 3:\n        if m == n * (n - 1) // 2:\n            print('YES')\n        else:\n            print('NO')\n    elif m >= n - 1 and m <= n * (n - 1) // 2:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin\n\ndef test():\n    (n, m, k) = (int(_) for _ in stdin.readline().split())\n    k = k - 2\n    if k == 0:\n        return n == 1 and m == 0\n    if k < 1:\n        return False\n    if k == 1:\n        if m == n * (n - 1) // 2:\n            return True\n        else:\n            return False\n    if k >= 2:\n        return m <= n * (n - 1) // 2 and m >= n - 1\ntn = int(stdin.readline())\nfor _ in range(0, tn):\n    if test():\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin, stdout\ninput = stdin.readline\n\ndef inp():\n    return map(int, input().split())\nfor _ in range(int(input())):\n    (n, m, k) = inp()\n    if k <= 1:\n        print('NO')\n    elif k == 2:\n        if n == 1 and m == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif k == 3:\n        if m == n * (n - 1) // 2:\n            print('YES')\n        else:\n            print('NO')\n    elif m >= n - 1 and m <= n * (n - 1) // 2:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin, stdout\ninput = stdin.readline\n\ndef inp():\n    return map(int, input().split())\nfor _ in range(int(input())):\n    (n, m, k) = inp()\n    if k <= 1:\n        print('NO')\n    elif k == 2:\n        if n == 1 and m == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif k == 3:\n        if m == n * (n - 1) // 2:\n            print('YES')\n        else:\n            print('NO')\n    elif m >= n - 1 and m <= n * (n - 1) // 2:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin, stdout\ninput = stdin.readline\n\ndef inp():\n    return map(int, input().split())\nfor i in range(int(input())):\n    (n, m, k) = inp()\n    if k <= 1:\n        print('NO')\n    elif k == 2:\n        if n == 1 and m == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif k == 3:\n        if m == n * (n - 1) / 2:\n            print('YES')\n        else:\n            print('NO')\n    elif m >= n - 1 and m <= n * (n - 1) // 2:\n        print('YES')\n    else:\n        print('NO')", "import time\nstart = time.time()\n(test, i, result) = (int(input()), 0, [])\nwhile i < test:\n    (n, m, k) = map(int, input().split())\n    edges = n * (n - 1) / 2\n    if edges < m or m < n - 1:\n        result.append('NO')\n    elif k >= 4:\n        result.append('YES')\n    elif k == 3 and (n <= 2 or edges == m):\n        result.append('YES')\n    elif k == 2 and n == 1:\n        result.append('YES')\n    else:\n        result.append('NO')\n    i += 1\nprint('\\n'.join(result))", "from sys import stdin, stdout\ninput = stdin.readline\n\ndef inp():\n    return map(int, input().split())\nfor _ in range(int(input())):\n    (n, m, k) = inp()\n    if k <= 1:\n        print('NO')\n    elif k == 2:\n        if n == 1 and m == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif k == 3:\n        if m == n * (n - 1) // 2:\n            print('YES')\n        else:\n            print('NO')\n    elif m >= n - 1 and m <= n * (n - 1) // 2:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin, stdout\ninput = stdin.readline\n\ndef inp():\n    return map(int, input().split())\nfor _ in range(int(input())):\n    (n, m, k) = inp()\n    if k <= 1:\n        print('NO')\n    elif k == 2:\n        if n == 1 and m == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif k == 3:\n        if m == n * (n - 1) // 2:\n            print('YES')\n        else:\n            print('NO')\n    elif m >= n - 1 and m <= n * (n - 1) // 2:\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\n\nclass Node:\n\n    def __init__(self, value) -> None:\n        self.value = value\n        self.next = None\n\n    @staticmethod\n    def print_list(head):\n        curr = head\n        while curr != None:\n            print(curr.value, end=' ')\n            curr = curr.next\n        print('')\nimport math\n\ndef modInverse(b, m):\n    g = math.gcd(b, m)\n    if g != 1:\n        return -1\n    else:\n        return pow(b, m - 2, m)\n\ndef modDivide(a, b, m):\n    a = a % m\n    inv = modInverse(b, m)\n    return inv * a % m\nmod = 10 ** 9 + 7\n\ndef fact(n):\n    x = 1\n    for k in range(1, 2 * n + 1):\n        x = x * k % mod\n    return x\n\ndef main():\n    (n, m, k) = map(int, input().split())\n    k -= 1\n    if m >= n - 1 and m <= n * (n - 1) // 2:\n        if m == 0:\n            if k >= 1:\n                ans = 'YES'\n            else:\n                ans = 'NO'\n        elif m == n * (n - 1) // 2:\n            if k >= 2:\n                ans = 'YES'\n            else:\n                ans = 'NO'\n        elif k >= 3:\n            ans = 'YES'\n        else:\n            ans = 'NO'\n    else:\n        ans = 'NO'\n    print(ans)\nfor _t in range(int(input())):\n    main()", "import sys\ninput = sys.stdin.readline\nrep = int(input())\nfor i in range(rep):\n    (n, m, k) = map(int, input().split())\n    if k <= 1:\n        print('NO')\n        continue\n    if n == 1:\n        if m == 0:\n            print('YES')\n        else:\n            print('NO')\n        continue\n    (a, b) = (n - 1, n * (n - 1) // 2)\n    if a <= m <= b and k >= 4:\n        print('YES')\n    elif m == b and k >= 3:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin\ninput = stdin.readline\ntest = int(input())\nfor _ in range(test):\n    (n, m, k) = map(int, input().split())\n    edges = n * (n - 1) // 2\n    if edges < m or m < n - 1:\n        print('NO')\n    elif k >= 4:\n        print('YES')\n    elif k == 3 and (n <= 2 or edges == m):\n        print('YES')\n    elif k == 2 and n == 1:\n        print('YES')\n    else:\n        print('NO')", "for s in [*open(0)][1:]:\n    (n, m, k) = map(int, s.split())\n    c = n * n - n >> 1\n    print('NYOE S'[k > 1 and n - 2 < m <= c and (n < 2 or n == 2 < k or (k - 2) * m >= c or (k - 2 > 1 < m))::2])", "for s in [*open(0)][1:]:\n    (n, m, k) = map(int, s.split())\n    c = n * n - n >> 1\n    print('NYOE S'[n - 2 < m <= c and (n < 2 < k + 1 or (k > 2 and (n == 2 or m == c)) or k - 2 > 1 < m)::2])", "import sys\nt = int(sys.stdin.readline())\nfor test in range(t):\n    (n, m, k) = map(int, sys.stdin.readline().split())\n    least = n - 1\n    most = n * (n - 1) // 2\n    ans = 'NO'\n    if least <= m <= most:\n        if k > 3:\n            ans = 'YES'\n        else:\n            if k == 3 and m == most:\n                ans = 'YES'\n            if k == 2 and n == 1:\n                ans = 'YES'\n    print(ans)", "from sys import stdin, stdout\nimport math\nimport bisect\nfrom collections import defaultdict, Counter\ninput = stdin.readline\n\ndef inp():\n    return map(int, input().split())\nfor _ in range(int(input())):\n    (n, m, k) = inp()\n    if k <= 1:\n        print('NO')\n    elif k == 2:\n        if n == 1 and m == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif k == 3:\n        if m == n * (n - 1) // 2:\n            print('YES')\n        else:\n            print('NO')\n    elif m >= n - 1 and m <= n * (n - 1) // 2:\n        print('YES')\n    else:\n        print('NO')", "from collections import deque\nimport heapq\nfrom math import sqrt\nimport operator\nfrom operator import itemgetter\nimport sys\nimport time\nimport copy\ninf_var = 0\nif inf_var == 1:\n    inf = open('input.txt', 'r')\nelse:\n    inf = sys.stdin\ninput = inf.readline\n\ndef read_one_int():\n    return int(input().rstrip('\\n'))\n\ndef read_one_float():\n    return float(input().rstrip('\\n'))\n\ndef read_list_of_ints():\n    res = [int(val) for val in input().rstrip('\\n').split()]\n    return res\n\ndef read_list_of_ints_zero():\n    return [int(val) - 1 for val in input().rstrip('\\n').split()]\n\ndef read_str():\n    return input().rstrip()\n\ndef main():\n    tests = read_one_int()\n    for _ in range(tests):\n        (n, m, k) = read_list_of_ints()\n        max_edges = (n - 1) * n // 2\n        res = 'NO'\n        if m < n - 1 or max_edges < m:\n            res = 'NO'\n        elif max_edges == m and k - 1 > 1:\n            res = 'YES'\n        elif m >= n - 1 and m < max_edges and (k - 1 > 2):\n            res = 'YES'\n        elif m == 0 and n == 1 and (k - 1 > 0):\n            res = 'YES'\n        else:\n            res = 'NO'\n        print(res)\nmain()", "from math import sqrt, gcd, ceil, floor, log, factorial\nfrom itertools import permutations, combinations\nfrom collections import Counter, defaultdict\nimport collections, sys, threading\nimport collections, sys, threading\ninput = sys.stdin.readline\n\ndef ii():\n    return int(input())\n\ndef si():\n    return input()\n\ndef mi():\n    return map(int, input().split())\n\ndef msi():\n    return map(str, input().split())\n\ndef li():\n    return list(mi())\nt = ii()\nfor _ in range(t):\n    (n, m, k) = mi()\n    if k <= 1:\n        print('NO')\n    elif k == 2:\n        if n <= 1 and m == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif n - 1 <= m <= n * (n - 1) // 2:\n        if m == n * (n - 1) // 2:\n            if k > 2:\n                print('YES')\n            else:\n                print('NO')\n        elif k > 3:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "for s in [*open(0)][1:]:\n    (n, m, k) = map(int, s.split())\n    c = n * n - n >> 1\n    print('NYOE S'[n - 2 < m <= c and (n < 2 < k + 1 or (k > 2 and (n == 2 or m == c)) or k - 2 > 1 < m)::2])", "for s in [*open(0)][1:]:\n    (n, m, k) = map(int, s.split())\n    c = n * n - n >> 1\n    print('NYOE S'[(n - 2 < m <= c) & (n < 2 < k + 1 or (k > 2 and (n < 3 or m == c)) or k - 2 > 1 < m)::2])", "for s in [*open(0)][1:]:\n    (n, m, k) = map(int, s.split())\n    c = n * n - n >> 1\n    print('NYOE S'[(n - 2 < m <= c) & (m > 1 < k - 2 or n < 2 < k + 1 or k > 2 > m % c)::2])", "import sys\ninput = sys.stdin.readline\nfor i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    ans = 'NO'\n    if m == 0 and n == 1 and (k > 1):\n        ans = 'YES'\n    elif m >= n - 1 and m <= n * (n - 1) // 2:\n        if m == n * (n - 1) // 2 and k > 2:\n            ans = 'YES'\n        elif k > 3:\n            ans = 'YES'\n    print(ans)", "t = int(input())\nimport sys\nwhile t:\n    (n, m, k) = map(int, sys.stdin.readline().split())\n    if m > n * (n - 1) // 2 or m < n - 1:\n        print('NO')\n    elif k == 1 or k == 0:\n        print('NO')\n    elif k == 2:\n        print('YES' if n == 1 else 'No')\n    elif k == 3:\n        print('YES' if m == n * (n - 1) // 2 else 'NO')\n    else:\n        print('YES')\n    t -= 1", "for s in [*open(0)][1:]:\n    (n, m, k) = map(int, s.split())\n    c = n * n - n >> 1\n    print('NYOE S'[(n - 2 < m <= c) & (m > 1 < k - 2 or n < 2 < k + 1 or k > 2 > m % c)::2])", "for s in [*open(0)][1:]:\n    (n, m, k) = map(int, s.split())\n    c = n * n - n >> 1\n    print('NYOE S'[(n - 2 < m <= c) & (m > 1 < k - 2 or n < 2 < k + 1 or k > 2 > m % c)::2])", "for s in [*open(0)][1:]:\n    (n, m, k) = map(int, s.split())\n    c = n * n - n >> 1\n    print('NYOE S'[(n - 2 < m <= c) & (m > 1 < k - 2 or n < 2 < k + 1 or k > 2 > m % c)::2])", "import sys, math\ninput = sys.stdin.readline\n\ndef yes():\n    print('YES')\n\ndef no():\n    print('NO')\nmod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    c = math.comb(n, 2)\n    if m > c:\n        no()\n        continue\n    elif m < n - 1:\n        no()\n        continue\n    if k == 0:\n        no()\n    elif k == 1:\n        no()\n    elif k == 2:\n        if n == 1:\n            yes()\n        else:\n            no()\n    elif k == 3:\n        if m == c:\n            yes()\n        else:\n            no()\n    else:\n        yes()", "from sys import stdin, stdout\nimport math\nimport bisect\nfrom collections import defaultdict, Counter\ninput = stdin.readline\ntest = int(input())\n\ndef edges(val):\n    return val * (val - 1) // 2\nfor _ in range(test):\n    (n, m, k) = map(int, input().split())\n    if edges(n) < m or m < n - 1:\n        print('NO')\n    elif k >= 4:\n        print('YES')\n    elif k == 3 and (n <= 2 or edges(n) == m):\n        print('YES')\n    elif k == 2 and n == 1:\n        print('YES')\n    else:\n        print('NO')", "for s in [*open(0)][1:]:\n    (n, m, k) = map(int, s.split())\n    c = n * n - n >> 1\n    print('NYOE S'[(n - 2 < m <= c) & (m > 1 < k - 2 or n < 2 < k + 1 or k > 2 > m % c)::2])", "for s in [*open(0)][1:]:\n    (n, m, k) = map(int, s.split())\n    c = n * n - n >> 1\n    print('NYOE S'[(n - 2 < m <= c) & (m > 1 < k - 2 or n < 2 < k + 1 or k > 2 > m % c)::2])", "for s in [*open(0)][1:]:\n    (n, m, k) = map(int, s.split())\n    c = n * n - n >> 1\n    print('NYOE S'[(n - 2 < m <= c) & (m > 1 < k - 2 or n < 2 < k + 1 or k > 2 > m % c)::2])", "for s in [*open(0)][1:]:\n    (n, m, k) = map(int, s.split())\n    c = n * n - n >> 1\n    print('NYOE S'[(n - 2 < m <= c) & (m > 1 < k - 2 or n < 2 < k + 1 or k > 2 > m % c)::2])", "for s in [*open(0)][1:]:\n    (n, m, k) = map(int, s.split())\n    c = n * n - n >> 1\n    print('NYOE S'[(n - 2 < m <= c) & (m > 1 < k - 2 or n < 2 < k + 1 or k > 2 > m % c)::2])", "for s in [*open(0)][1:]:\n    (n, m, k) = map(int, s.split())\n    c = n * n - n >> 1\n    print('NYOE S'[n - 2 < m <= c and (n < 2 < k + 1 or (k > 2 and (n < 3 or m == c)) or k - 2 > 1 < m)::2])", "for s in [*open(0)][1:]:\n    (n, m, k) = map(int, s.split())\n    c = n * n - n >> 1\n    print('NYOE S'[(n - 2 < m <= c) & (n < 2 < k + 1 or k > 2 > m % c or k - 2 > 1 < m)::2])", "import sys\n\ndef solution():\n    (n, m, k) = list(map(int, sys.stdin.readline().split()))\n    if n == 1 and m == 0 and (k > 1):\n        print('YES')\n    elif m > n * (n - 1) // 2:\n        print('NO')\n    elif m == n * (n - 1) // 2 and k > 2:\n        print('YES')\n    elif m < n - 1:\n        print('NO')\n    elif k > 3:\n        print('YES')\n    else:\n        print('NO')\nfor _ in range(int(sys.stdin.readline())):\n    solution()", "for s in [*open(0)][1:]:\n    (n, m, k) = map(int, s.split())\n    c = n * n - n >> 1\n    print('NYOE S'[(n - 2 < m <= c) & (m > 1 < k - 2 or n < 2 < k + 1 or k > 2 > m % c)::2])", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\n\ndef get_list_strings():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef solve(n, m, k):\n    diameter = k - 2\n    up = n * (n - 1) // 2\n    low = n - 1\n    if m > up:\n        print('NO')\n        return\n    if m < low:\n        print('NO')\n        return\n    if k < 2:\n        print('NO')\n        return\n    if k == 2:\n        if n == 1:\n            print('YES')\n        else:\n            print('NO')\n        return\n    if k > 3:\n        print('YES')\n        return\n    if m == up:\n        print('YES')\n    else:\n        print('NO')\nT = get_int()\nwhile T:\n    (n, m, k) = get_ints()\n    solve(n, m, k)\n    T -= 1", "for s in [*open(0)][1:]:\n    (n, m, k) = map(int, s.split())\n    c = n * n - n >> 1\n    print('NYOE S'[(n - 2 < m <= c) & (m > 1 < k - 2 or n < 2 < k + 1 or k > 2 > m % c)::2])", "import sys, math\ninput = sys.stdin.readline\n\ndef yes():\n    print('YES')\n\ndef no():\n    print('NO')\nmod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    c = math.comb(n, 2)\n    if m > c:\n        no()\n        continue\n    elif m < n - 1:\n        no()\n        continue\n    if k == 0:\n        no()\n    elif k == 1:\n        no()\n    elif k == 2:\n        if n == 1:\n            yes()\n        else:\n            no()\n    elif k == 3:\n        if m == c:\n            yes()\n        else:\n            no()\n    else:\n        yes()", "import sys\ntestcases = int(input())\nwhile testcases > 0:\n    (n, m, k) = map(int, sys.stdin.readline().split())\n    if k == 3 and m == n * (n - 1) // 2 or (k > 3 and n - 1 <= m <= n * (n - 1) // 2) or (n == 1 and m == 0 and (k > 1)):\n        print('YES')\n    else:\n        print('NO')\n    testcases -= 1", "for s in [*open(0)][1:]:\n    (n, m, k) = map(int, s.split())\n    c = n * n - n >> 1\n    print('NYOE S'[(n - 2 < m <= c) & (n < 2 < k + 1 or (k > 2 and m % c < 2) or k - 2 > 1 < m)::2])", "import math\nimport heapq\nimport string\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right, insort\nimport sys\ninput = sys.stdin.readline\nS = lambda : input().rstrip()\nI = lambda : int(S())\nM = lambda : map(int, S().split())\nL = lambda : list(M())\nH = 1000000000 + 7\nfor _ in range(I()):\n    (n, m, k) = M()\n    k -= 2\n    if n == 1 and m == 0 and (k == 0):\n        print('YES')\n        continue\n    if m > n * (n - 1) // 2 or m < n - 1:\n        print('NO')\n        continue\n    if m == n * (n - 1) // 2 and k >= 1:\n        print('YES')\n        continue\n    if n - 1 <= m <= n * (n - 1) // 2 and k >= 2:\n        print('YES')\n        continue\n    print('NO')", "import math\nimport heapq\nimport string\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right, insort\nimport sys\ninput = sys.stdin.readline\nS = lambda : input().rstrip()\nI = lambda : int(S())\nM = lambda : map(int, S().split())\nL = lambda : list(M())\nH = 1000000000 + 7\nfor _ in range(I()):\n    (n, m, k) = M()\n    k -= 2\n    if n == 1 and m == 0 and (k >= 0):\n        print('YES')\n        continue\n    if m > n * (n - 1) // 2 or m < n - 1:\n        print('NO')\n        continue\n    if m == n * (n - 1) // 2 and k >= 1:\n        print('YES')\n        continue\n    if n - 1 <= m <= n * (n - 1) // 2 and k >= 2:\n        print('YES')\n        continue\n    print('NO')", "import math\nimport heapq\nimport string\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right, insort\nimport sys\ninput = sys.stdin.readline\nS = lambda : input().rstrip()\nI = lambda : int(S())\nM = lambda : map(int, S().split())\nL = lambda : list(M())\nH = 1000000000 + 7\nfor _ in range(I()):\n    (n, m, k) = M()\n    k -= 2\n    if n == 1 and m == 0 and (k >= 0):\n        print('YES')\n        continue\n    if m > n * (n - 1) // 2 or m < n - 1:\n        print('NO')\n        continue\n    if m == n * (n - 1) // 2 and k >= 1:\n        print('YES')\n        continue\n    if n - 1 <= m <= n * (n - 1) // 2 and k >= 2:\n        print('YES')\n        continue\n    print('NO')", "import sys\nimport os\nfrom io import BytesIO\nif sys.version_info[0] < 3:\n    sys.stdin = BytesIO(os.read(0, os.fstat(0).st_size))\nf = sys.stdin\nif os.environ.get('USER') == 'loic':\n    f = open('data.in')\nline = lambda : f.readline().strip('\\r\\n').split()\n\ndef write(w):\n    sys.stdout.write(w)\n    sys.stdout.write('\\n')\n\ndef solve():\n    k = K - 2\n    if N == 1:\n        if M == 0 and k >= 0:\n            return 'YES'\n        else:\n            return 'NO'\n    if N > M + 1:\n        return 'NO'\n    if (N - 1) * N // 2 == M:\n        if k >= 1:\n            return 'YES'\n        else:\n            return 'NO'\n    if (N - 1) * N // 2 < M:\n        return 'NO'\n    if N == M + 1:\n        if k >= 2:\n            return 'YES'\n        else:\n            return 'NO'\n    if k >= 2:\n        return 'YES'\n    return 'NO'\nT = int(line()[0])\nfor test in range(1, T + 1):\n    (N, M, K) = map(int, line())\n    write(solve())\nf.close()", "t = int(input())\na = []\nfor x in range(1, 1 + t):\n    (n, m, k) = [int(y) for y in input().split()]\n    if n == 1 and m == 0 and (k > 1):\n        a.append('YES')\n    elif m < n - 1 or m > n * (n - 1) / 2:\n        a.append('NO')\n    elif m != n * (n - 1) / 2:\n        if k > 3:\n            a.append('YES')\n        else:\n            a.append('NO')\n    elif k > 2:\n        a.append('YES')\n    else:\n        a.append('NO')\nfor y in a:\n    print(y)", "import math, string, itertools, fractions, heapq, collections, re, array, bisect, sys, random, time\ninf = 10 ** 20\nmod = 10 ** 9 + 7\n\ndef LI():\n    return list(map(int, input().split()))\n\ndef II():\n    return int(input())\n\ndef LS():\n    return list(input().split())\n\ndef S():\n    return input()\n\ndef solve():\n    (n, m, k) = LI()\n    if n * (n - 1) // 2 < m:\n        return 'NO'\n    if k <= 1:\n        return 'NO'\n    if k == 2:\n        return 'NO' if n > 1 else 'YES'\n    if k == 3:\n        return 'YES' if n * (n - 1) // 2 == m else 'NO'\n    return 'NO' if n - 1 > m else 'YES'\n\ndef main():\n    t = II()\n    res = list()\n    for _ in range(t):\n        ans = solve()\n        res.append(ans)\n    for ans in res:\n        print(ans)\n    return 0\nmain()", "numberTestCases = int(input())\ncases = []\nfor i in range(numberTestCases):\n    arr = input().split(' ')\n    cases.append(list(map(int, arr)))\nfor case in cases:\n    n = case[0]\n    m = case[1]\n    k = case[2]\n    if k <= 1:\n        print('NO')\n    elif k == 2:\n        if n == 1 and m == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif k == 3:\n        if n * (n - 1) / 2 == m:\n            print('YES')\n        else:\n            print('NO')\n    elif m >= n - 1 and n * (n - 1) / 2 >= m:\n        print('YES')\n    else:\n        print('NO')", "l0 = []\nl1 = []\nfor x in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    i = 1\n    sum0 = a * (a - 1) / 2\n    if a == 1 and b == 0:\n        d = 0\n    elif b == sum0:\n        d = 1\n    elif a - 1 <= b < sum0:\n        d = 2\n    else:\n        d = c\n    l0.append(d)\n    l1.append(c - 1)\nfor x in range(len(l0)):\n    print('YES' if l0[x] < l1[x] else 'NO')", "l0 = []\nl1 = []\nfor x in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    i = 1\n    sum0 = a * (a - 1) / 2\n    if a == 1 and b == 0:\n        d = 0\n    elif b == sum0:\n        d = 1\n    elif a - 1 <= b < sum0:\n        d = 2\n    else:\n        d = c\n    l0.append(d)\n    l1.append(c - 1)\nfor _ in range(len(l0)):\n    if l0[_] < l1[_]:\n        print('YES')\n    else:\n        print('NO')", "def solve():\n    s = input()\n    s = s.split()\n    n = int(s[0])\n    m = int(s[1])\n    k = int(s[2])\n    k -= 1\n    if m >= n - 1 and m <= n * (n - 1) / 2:\n        if n == 1 and k > 0:\n            print('YES')\n            return 0\n        if n == 2 and k > 1:\n            print('YES')\n            return 0\n        if n > 2 and k > 2:\n            print('YES')\n            return 0\n        if n > 2 and k > 1 and (m == n * (n - 1) / 2):\n            print('YES')\n            return 0\n    print('NO')\n    return 0\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    nd = n * (n - 1) // 2\n    if m < n - 1 or m > nd:\n        print('NO')\n    elif n == 1:\n        print(['NO', 'YES'][k > 1])\n    elif m < nd:\n        print(['NO', 'YES'][k > 3])\n    else:\n        print(['NO', 'YES'][k > 2])", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    if m < n - 1 or m > n * (n - 1) // 2:\n        print('NO')\n    elif k >= 4:\n        print('YES')\n    elif k == 2:\n        print('YES' if n == 1 else 'NO')\n    elif k == 3:\n        print('YES' if m == n * (n - 1) // 2 else 'NO')\n    else:\n        print('NO')", "t = int(input())\nwhile t:\n    t -= 1\n    (n, m, k) = map(int, input().split())\n    if m < n - 1 or m > n * (n - 1) // 2:\n        print('NO')\n        continue\n    if k > 3:\n        print('YES')\n    elif k == 3:\n        if m == n * (n - 1) // 2:\n            print('YES')\n        else:\n            print('NO')\n    elif k == 2:\n        if n == 1 and m == 0:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    if n == 1 and k == 2 and (m == 0):\n        print('YES')\n    elif m < n - 1 or k < 3 or m > n * (n - 1) / 2:\n        print('NO')\n    elif k == 3 and m < n * (n - 1) / 2:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    if n == 1:\n        if k >= 2 and m == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif m < n - 1 or k < 3 or 2 * m > n * (n - 1):\n        print('NO')\n    elif k == 3 and 2 * m < n * (n - 1):\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    if n > 1:\n        if m < n - 1 or 2 * m > n * (n - 1):\n            print('NO')\n        elif 2 * m == n * (n - 1):\n            if k > 2:\n                print('YES')\n            else:\n                print('NO')\n        elif m == n - 1:\n            if k > 3:\n                print('YES')\n            else:\n                print('NO')\n        elif k > 3:\n            print('YES')\n        else:\n            print('NO')\n    elif n == 1:\n        if m > 0 or k <= 1:\n            print('NO')\n        else:\n            print('YES')", "def main():\n    test_cases = range(int(input()))\n    for test_case in test_cases:\n        (n, m, k) = [int(i) for i in input().split(' ')]\n        if n - 1 > m:\n            print('NO')\n        else:\n            if m > n * (n - 1) // 2:\n                print('NO')\n                continue\n            k = max(0, k - 1)\n            if k == 0:\n                print('NO')\n            elif k == 1:\n                if n == 1:\n                    print('YES')\n                else:\n                    print('NO')\n            elif k == 2:\n                d = (n - 1) * n // 2\n                if n <= 2 or m == d:\n                    print('YES')\n                else:\n                    print('NO')\n            else:\n                print('YES')\nmain()", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    if m < n - 1 or m > n * (n - 1) // 2:\n        print('NO')\n    elif n == 1:\n        if k > 1:\n            print('YES')\n        else:\n            print('NO')\n    elif m == n * (n - 1) // 2:\n        if k > 2:\n            print('YES')\n        else:\n            print('NO')\n    elif k > 3:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(0, t):\n    (v, e, k) = [int(i) for i in input().split()]\n    if k < 2:\n        print('NO')\n    elif k == 2:\n        if v == 1 and e == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif k == 3:\n        if e == v * (v - 1) / 2:\n            print('YES')\n        else:\n            print('NO')\n    elif v - 1 <= e <= v * (v - 1) / 2:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, m, k) = map(int, input().split())\n    if k <= 1:\n        print('NO')\n    elif k == 2:\n        if n > 1:\n            print('NO')\n        elif m == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif k == 3:\n        if m == n * (n - 1) // 2:\n            print('YES')\n        else:\n            print('NO')\n    elif m >= n - 1 and m <= n * (n - 1) // 2:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    if n == 1:\n        if m == 0:\n            if k <= 1:\n                print('NO')\n            else:\n                print('YES')\n        else:\n            print('NO')\n    elif k <= 2:\n        print('NO')\n    elif k == 3:\n        if m == n * (n - 1) // 2:\n            print('YES')\n        else:\n            print('NO')\n    elif m >= n - 1 and m <= n * (n - 1) // 2:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    if n == 1 and m == 0 and (k > 1):\n        print('YES')\n        continue\n    if m < n - 1:\n        print('NO')\n    else:\n        e = n * (n - 1) // 2\n        if e == m and k >= 3 or (e > m and k >= 4):\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    print('YES') if k == 3 and m == n * (n - 1) // 2 or (k > 3 and m >= n - 1 and (m <= n * (n - 1) // 2)) or (n == 1 and m == 0 and (k > 1)) else print('NO')", "for i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    if n == 1 and m == 0:\n        d = 0\n    elif n - 1 > m:\n        print('NO')\n        continue\n    else:\n        me = n * (n - 1) / 2\n        if me == m:\n            d = 1\n        elif m > me:\n            print('NO')\n            continue\n        else:\n            d = 2\n    if d < k - 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (n, m, k) = list(map(int, input().split()))\n    if m < n - 1 or m > n * (n - 1) // 2:\n        print('NO')\n    elif n == 1:\n        if k > 1:\n            print('YES')\n        else:\n            print('NO')\n    elif m < n * (n - 1) // 2:\n        if k > 3:\n            print('YES')\n        else:\n            print('NO')\n    elif k > 2:\n        print('YES')\n    else:\n        print('NO')", "import sys\nfrom math import *\nfrom functools import *\nfor _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    d = 10 ** 9 + 1\n    if m >= n - 1 and m <= n * (n - 1) // 2:\n        if m == 0:\n            d = 0\n        elif m == 1 or m == n * (n - 1) // 2:\n            d = 1\n        else:\n            d = 2\n    if d < k - 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    l = n * (n - 1) / 2\n    if n == 1 and k == 2 and (m == 0):\n        print('YES')\n    elif k < 3 or m > l or m < n - 1:\n        print('NO')\n    elif k == 3 and m < l:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    if k >= 2 and n == 1 and (m == 0) or (k == 3 and m == n * (n - 1) / 2) or (k > 3 and n - 1 <= m <= n * (n - 1) / 2):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (n, m, k) = map(int, input().split())\n    if n == 1:\n        if k >= 2 and m == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif m < n - 1 or k < 3 or 2 * m > n * (n - 1):\n        print('NO')\n    elif k == 3 and 2 * m < n * (n - 1):\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    if m >= n - 1 and m <= n * (n - 1) // 2:\n        if n == 1:\n            if k >= 2:\n                print('YES')\n            else:\n                print('NO')\n            continue\n        if m == n * (n - 1) // 2:\n            if k >= 3:\n                print('YES')\n            else:\n                print('NO')\n        elif k >= 4:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    if k == 3:\n        x = (1 + (n - 1)) * (n - 1) // 2\n        if m == x:\n            print('YES')\n        else:\n            print('NO')\n    elif k == 2:\n        if n == 1 and m == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif k <= 1:\n        print('NO')\n    elif n - 1 <= m <= (1 + (n - 1)) * (n - 1) // 2:\n        print('YES')\n    else:\n        print('NO')", "from math import ceil, gcd, factorial\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom array import array\nfrom collections import Counter as ctr\nfrom collections import deque as dq\n\ndef li():\n    return list(map(int, input().split()))\n\ndef arr(a):\n    return array('i', a)\n\ndef solve():\n    for _ in range(int(input())):\n        (n, m, k) = li()\n        t = n * (n - 1) // 2\n        if m > t or m < n - 1 or k < 2 or ((n != 1 or m != 0) and k == 2) or (k == 3 and m != t):\n            print('NO')\n        else:\n            print('YES')\nsolve()", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    l = n * (n - 1) // 2\n    if l < m or n - 1 > m:\n        print('NO')\n    elif n == 1:\n        if m != 0 or k <= 1:\n            print('NO')\n        else:\n            print('YES')\n    elif n == 2:\n        if m != 1 or k <= 2:\n            print('NO')\n        else:\n            print('YES')\n    else:\n        d = 2\n        if m == l:\n            d = 1\n        if d < k - 1:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    l = n * (n - 1) // 2\n    if l < m or n - 1 > m:\n        print('NO')\n    elif n == 1:\n        if m != 0 or k <= 1:\n            print('NO')\n        else:\n            print('YES')\n    else:\n        d = 2\n        if m == l:\n            d = 1\n        if d < k - 1:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    if m < n - 1 or m > n * (n - 1) // 2:\n        print('NO')\n        continue\n    if n == 1:\n        if 0 < k - 1:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        if m == n * (n - 1) // 2:\n            r = 1\n        else:\n            r = 2\n        if r < k - 1:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    (n, m, k) = list(map(int, input().split()))\n    k -= 1\n    if k <= 0:\n        print('NO')\n    elif k == 1:\n        if n <= 1 and m == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif k == 2:\n        if m == (n - 1) * n // 2:\n            print('YES')\n        else:\n            print('NO')\n    elif k >= 3:\n        if m > (n - 1) * n // 2:\n            print('NO')\n        elif m < n - 1:\n            print('NO')\n        else:\n            print('YES')", "for i in range(int(input())):\n    (n, m, k) = [int(x) for x in input().split()]\n    maxVal = n * (n - 1) // 2\n    if m > maxVal:\n        print('NO')\n    elif k <= 1:\n        print('NO')\n    elif k == 2:\n        if n == 1:\n            print('YES')\n        else:\n            print('NO')\n    elif k == 3:\n        if m >= maxVal:\n            print('YES')\n        else:\n            print('NO')\n    elif m >= n - 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (n, m, k) = [int(i) for i in input().split(' ')]\n    if k > 1 and n == 1 and (m == 0) or (k == 3 and m == n * (n - 1) // 2) or (k > 3 and n - 1 <= m <= n * (n - 1) // 2):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, m, k) = list(map(int, input().split()))\n    answer = 'NO'\n    if m == 0 and m == n - 1 and (k >= 2):\n        answer = 'YES'\n    elif m >= n - 1 and m <= n * (n - 1) // 2:\n        if m == n * (n - 1) // 2 and k >= 3:\n            answer = 'YES'\n        elif k >= 4:\n            answer = 'YES'\n    print(answer)", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    t = a * (a - 1) // 2\n    if b < a - 1 or b > t:\n        print('NO')\n    elif c <= 2 and a == 2:\n        print('NO')\n    elif c <= 1 and a == 1:\n        print('NO')\n    elif a >= 3 and (b < t and c <= 3 or (b >= t and c <= 2)):\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    large = n * (n - 1) // 2\n    d = 0\n    if k <= 1:\n        print('NO')\n    elif n == 1:\n        if m == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif m >= n - 1 and m <= large:\n        k -= 1\n        if m == large:\n            if k >= 2:\n                print('YES')\n            else:\n                print('NO')\n        elif k >= 3:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "t = int(input())\nfor time in range(t):\n    (n, m, k) = (int(i) for i in input().split())\n    if n == 1 and m == 0 and (k >= 2):\n        print('YES')\n    elif k < 3 or n > m + 1 or m > n * (n - 1) / 2:\n        print('NO')\n    elif m == n * (n - 1) / 2 and k >= 3:\n        print('YES')\n    elif k >= 4:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, m, k) = list(map(int, input().split()))\n    answer = 'NO'\n    if m == 0 and m == n - 1 and (k >= 2):\n        answer = 'YES'\n    elif m >= n - 1 and m <= n * (n - 1) // 2:\n        if m == n * (n - 1) // 2 and k >= 3:\n            answer = 'YES'\n        elif k >= 4:\n            answer = 'YES'\n    print(answer)", "for _ in range(int(input())):\n    (n, m, k) = map(int, input().split())\n    if n == 1 and m == 0 and (k > 1):\n        print('YES')\n        continue\n    if m < n - 1:\n        print('NO')\n    else:\n        e = n * (n - 1) // 2\n        if e == m and k >= 3 or (e > m and k >= 4):\n            print('YES')\n        else:\n            print('NO')"]