["from math import sqrt, floor\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = floor(2 + sqrt(4 + 32 * n)) // 16\n    (a_w, a_b) = ((1 + 1 + 4 * x - 4) * x // 2, (0 + 0 + 4 * x - 4) * x // 2)\n    (b_w, b_b) = ((2 + 2 + 4 * x - 4) * x // 2, (3 + 3 + 4 * x - 4) * x // 2)\n    n -= a_w + a_b + b_w + b_b\n    while n:\n        nxt = min(n, 1 + 8 * x)\n        a_w += (nxt + 1) // 2\n        a_b += nxt // 2\n        n -= nxt\n        if not n:\n            break\n        nxt = min(n, 5 + 8 * x)\n        b_b += (nxt + 1) // 2\n        b_w += nxt // 2\n        n -= nxt\n        x += 1\n    print(a_w, a_b, b_w, b_b)", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    turns = (1 + math.sqrt(1 + 8 * n)) / 4\n    turns = math.ceil(turns)\n    a_turns = math.ceil(turns / 2)\n    b_turns = math.floor(turns / 2)\n    a = (1 + 1 + 8 * (a_turns - 1)) * a_turns // 2\n    b = (5 + 5 + 8 * (b_turns - 1)) * b_turns // 2\n    gap = (1 + 2 * (turns - 1)) * turns - n\n    a_gap = a_turns\n    b_gap = b_turns\n    last = n - (1 + 2 * (turns - 2)) * (turns - 1)\n    if turns % 2 == 0:\n        b -= gap\n        if last % 2 == 0:\n            b_gap -= 1\n    else:\n        a -= gap\n        if last % 2 == 0:\n            a_gap -= 1\n    a_white = (a + a_gap) // 2\n    b_black = (b + b_gap) // 2\n    print(a_white, a - a_white, b - b_black, b_black)", "import math\n\ndef ans(n):\n    k = math.floor((2 * n) ** (1 / 2))\n    if k * (k + 1) > 2 * n:\n        k -= 1\n    (ab, aw) = (0, 0)\n    (bb, bw) = (0, 0)\n    if k % 4 in (1, 2):\n        bw += (n - k * (k + 1) // 2) // 2\n        bb += n - k * (k + 1) // 2 - (n - k * (k + 1) // 2) // 2\n    else:\n        ab += (n - k * (k + 1) // 2) // 2\n        aw += n - k * (k + 1) // 2 - (n - k * (k + 1) // 2) // 2\n    if k % 4 == 1:\n        ab += k // 2\n        aw += k // 2 + 1\n        k -= 1\n    elif k % 4 == 2:\n        ab += (k - 1) // 2\n        aw += (k - 1) // 2 + 1\n        bb += k // 2\n        bw += k // 2\n        k -= 2\n    elif k % 4 == 3:\n        ab += (k - 2) // 2\n        aw += (k - 2) // 2 + 1\n        bb += k\n        bw += k - 1\n        k -= 3\n    n_blocks = k // 4\n    s = (k * (k + 1) // 4 - n_blocks) // 2\n    l = (k * (k + 1) // 4 - n_blocks) // 2 + n_blocks\n    ab += s\n    aw += l\n    bb += l\n    bw += s\n    return (aw, ab, bw, bb)\nn_num = int(input())\nfor i in range(n_num):\n    n = int(input())\n    print(*ans(n))", "for _ in range(int(input())):\n    N = int(input())\n    n = int((-1 + (1 + 8 * N) ** 0.5) / 2)\n    player = n >> 1 & 1 ^ n % 2\n    n -= not n & 1\n    (A, B) = ((n - 1 >> 2) + 1, n + 1 >> 2)\n    cards = [[A * (2 + (A - 1) * 4) // 2, A * (0 + (A - 1) * 4) // 2], [B * (4 + max((B - 1) * 4, -2)) // 2, B * (3 + max((B - 1) * 4, -3) // 2)]]\n    N -= int(n * (n + 1) / 2)\n    cards[player][player] += (N >> 1) + (N & 1)\n    cards[player][not player] += N >> 1\n    print(*cards[0], *cards[1])", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    last = (1 + math.sqrt(1 + 8 * n)) // 4\n    last = int(last)\n    if last % 2 == 0:\n        last_sum = 1 + (last - 1) * 4\n        Sum = int(math.ceil(last / 2) / 2 * (5 + last_sum))\n        t = math.ceil(last / 2)\n        bob_black = int(t / 2 * (2 * 3 + (t - 1) * 4))\n        alice_black = n // 2 - bob_black\n        print(n - Sum - alice_black, alice_black, Sum - bob_black, bob_black)\n    else:\n        last_sum = 1 + (last - 1) * 4\n        Sum = int(math.ceil(last / 2) / 2 * (1 + last_sum))\n        t = math.ceil(last / 2) - 1\n        alice_black = int(t / 2 * (2 * 4 + (t - 1) * 4))\n        bob_black = n // 2 - alice_black\n        print(Sum - alice_black, alice_black, n - Sum - bob_black, bob_black)", "import math\nfor t in range(int(input())):\n    a = int(input())\n    n = (1 + (1 + 8 * a) ** (1 / 2)) / 8\n    n = int(n)\n    aw = 2 * n * n - n\n    ab = 2 * n * n - 2 * n\n    bw = 2 * n * n\n    bb = 2 * n * n + n\n    rem = a - (aw + ab + bw + bb)\n    if rem <= 8 * n + 1:\n        if rem % 2 == 1:\n            aw += rem // 2 + 1\n            ab += rem // 2\n        else:\n            aw += rem // 2\n            ab += rem // 2\n    else:\n        aw += 4 * n + 1\n        ab += 4 * n\n        rem = rem - (8 * n + 1)\n        if rem % 2 == 1:\n            bb += rem // 2 + 1\n            bw += rem // 2\n        else:\n            bb += rem // 2\n            bw += rem // 2\n    print(f'{aw} {ab} {bw} {bb} ')", "import sys\nsys.setrecursionlimit(10 ** 9)\nfor i in range(int(input())):\n    N = int(input())\n    n = int((-3 + (9 - 8 * (1 - N)) ** 0.5) / 4)\n    w = N - N // 2\n    if n % 2 == 1:\n        k = n // 2 + 1\n        b = k * (8 * k + 2) / 2\n        t = (b - k) / 2\n        tb = t + k\n        a = N - b\n        o = w - t\n        ob = a - o\n    else:\n        k = n // 2\n        a = k * (8 * k + 10) / 2\n        o = (a + k) / 2 + 1\n        ob = o - k - 1\n        b = N - a - 1\n        t = w - o\n        tb = b - t\n    print(int(o), int(ob), int(t), int(tb), sep=' ')", "for _ in range(int(input())):\n    n = int(input())\n    l = 1\n    r = 1000000.0\n    while r - l > 1:\n        mid = (r + l) // 2\n        x = mid + (mid - 1) * mid // 2 * 4\n        if x <= n:\n            l = mid\n        else:\n            r = mid\n    cnt1 = l // 2 + l % 2\n    x = l + (l - 1) * l // 2 * 4\n    y = cnt1 + (cnt1 - 1) * cnt1 // 2 * 8\n    if l % 2 == 0:\n        y += n - x\n        if (n - x) % 2 == 1:\n            cnt1 += 1\n    y = int(y)\n    y2 = int((y - cnt1) // 2)\n    y1 = y - y2\n    z1 = n // 2 + n % 2\n    z2 = n - z1\n    print(y1, y2, z1 - y1, z2 - y2)", "def card(cards):\n    A = 0\n    B = 0\n    A_black = 0\n    A_white = 0\n    B_black = 0\n    B_white = 0\n    pt = 1\n    count = 0\n    while cards > 0:\n        if count % 2 == 0:\n            if pt > cards:\n                A += cards\n                cr = cards // 2\n                A_black += cr\n                A_white += cards - cr\n            else:\n                A += pt\n                cr = pt // 2\n                A_black += cr\n                A_white += pt - cr\n        elif pt > cards:\n            B += cards\n            cr = cards // 2\n            B_white += cr\n            B_black += cards - cr\n        else:\n            B += pt\n            cr = pt // 2\n            B_white += cr\n            B_black += pt - cr\n        cards -= pt\n        pt += 4\n        count += 1\n    print(A_white, '', A_black, '', B_white, '', B_black)\nn = int(input())\nl = []\nfor i in range(n):\n    a = int(input())\n    l.append(a)\nfor cards in l:\n    card(cards)", "from bisect import bisect_left\nfor _ in range(int(input())):\n    n = int(input())\n    x = [i * (i + 1) / 2 for i in range(1500)]\n    w = bisect_left(x, n) - 1\n    if n % 2 == 0:\n        black = n / 2\n        white = n / 2\n    else:\n        black = (n - 1) / 2\n        white = (n + 1) / 2\n    if w % 4 == 0:\n        k = w // 4\n        ans2 = k * (4 * k + 1)\n        ans2b = (2 * k + 1) * k\n        ans2w = ans2 - ans2b\n        ans1w = white - ans2w\n        ans1b = black - ans2b\n    elif w % 4 == 1:\n        k = w // 4 + 1\n        ans1 = k * (4 * k - 3)\n        ans1b = (2 * k - 2) * k\n        ans1w = ans1 - ans1b\n        ans2w = white - ans1w\n        ans2b = black - ans1b\n    elif w % 4 == 2:\n        k = w // 4 + 1\n        ans1 = k * (4 * k - 3)\n        ans1b = (2 * k - 2) * k\n        ans1w = ans1 - ans1b\n        ans2w = white - ans1w\n        ans2b = black - ans1b\n    else:\n        k = w // 4 + 1\n        ans2 = k * (4 * k + 1)\n        ans2b = (2 * k + 1) * k\n        ans2w = ans2 - ans2b\n        ans1w = white - ans2w\n        ans1b = black - ans2b\n    print('{} {} {} {}'.format(int(ans1w), int(ans1b), int(ans2w), int(ans2b)))", "for _ in range(int(input())):\n    n = int(input())\n    a_w = 0\n    a_b = 0\n    b_w = 0\n    b_b = 0\n    k = 1\n    while n > 0:\n        a_w += k // 2 + 1\n        a_b += k // 2\n        n -= k\n        if n <= 0:\n            a_w += n // 2\n            a_b += n // 2 + 1 if n % 2 == 1 else n // 2\n            break\n        k += 4\n        b_w += k // 2\n        b_b += k // 2 + 1\n        n -= k\n        if n <= 0:\n            b_w += n // 2 + 1 if n % 2 == 1 else n // 2\n            b_b += n // 2\n            break\n        k += 4\n    print(a_w, a_b, b_w, b_b)", "import math\n\ndef solveA2():\n    n = int(input())\n    (AW, AB, BW, BB) = (0, 0, 0, 0)\n    dealAmt = 1\n    turn = 0\n    while n >= dealAmt:\n        if turn == 0:\n            AW += (dealAmt + 1) // 2\n            AB += (dealAmt - 1) // 2\n        else:\n            BW += (dealAmt - 1) // 2\n            BB += (dealAmt + 1) // 2\n        n -= dealAmt\n        dealAmt += 4\n        turn = (turn + 1) % 2\n    if turn == 0:\n        AW += math.ceil(n / 2)\n        AB += math.floor(n / 2)\n    else:\n        BW += math.floor(n / 2)\n        BB += math.ceil(n / 2)\n    print(AW, AB, BW, BB)\n\ndef solveA1():\n    n = int(input())\n    cards = [0, 0]\n    dealAmt = 1\n    turn = 0\n    while n >= dealAmt:\n        cards[turn] += dealAmt\n        n -= dealAmt\n        dealAmt += 4\n        turn = (turn + 1) % 2\n    cards[turn] += n\n    print(*cards)\nt = int(input())\nfor tc in range(t):\n    solveA2()", "def sol():\n    n = int(input())\n    if n == 1:\n        print(1, 0, 0, 0)\n        return\n    (aw, ab, bw, bb) = (1, 0, 0, 0)\n    curr = 1\n    i = 2\n    bo = True\n    while curr < n:\n        if bo:\n            if curr + 2 * i + 1 < n:\n                bw += i\n                bb += i + 1\n                curr += 2 * i + 1\n            else:\n                val = n - curr\n                v1 = (n - curr) // 2\n                v2 = val - v1\n                bw += v1\n                bb += v2\n                curr = n\n            i += 2\n            bo = False\n        else:\n            if curr + 2 * i + 1 < n:\n                ab += i\n                aw += i + 1\n                curr += 2 * i + 1\n            else:\n                val = n - curr\n                v1 = (n - curr) // 2\n                v2 = val - v1\n                ab += v1\n                aw += v2\n                curr = n\n            i += 2\n            bo = True\n    print(aw, ab, bw, bb)\nfor i in range(int(input())):\n    sol()", "for t in range(int(input())):\n    n = int(input())\n    a_w = 0\n    a_b = 0\n    b_w = 0\n    b_b = 0\n    k = 1\n    while n > 0:\n        a_w += k // 2 + 1\n        a_b += k // 2\n        n -= k\n        if n <= 0:\n            a_w += n // 2\n            a_b += n // 2 + 1 if n % 2 == 1 else n // 2\n            break\n        k += 4\n        b_w += k // 2\n        b_b += k // 2 + 1\n        n -= k\n        if n <= 0:\n            b_w += n // 2 + 1 if n % 2 == 1 else n // 2\n            b_b += n // 2\n            break\n        k += 4\n    print(a_w, a_b, b_w, b_b)", "def solve():\n    t = 1\n    t = int(input())\n    while t:\n        t -= 1\n        n = int(input())\n        aw = 0\n        ab = 0\n        bw = 0\n        bb = 0\n        inc = 0\n        aTurn = True\n        while n >= 4 * inc + 1:\n            if aTurn:\n                aw += 2 * inc + 1\n                ab += 2 * inc\n            else:\n                bw += 2 * inc\n                bb += 2 * inc + 1\n            n -= 4 * inc + 1\n            inc += 1\n            aTurn = not aTurn\n        if n != 0:\n            if aTurn:\n                aw += int(n / 2) + n % 2\n                ab += int(n / 2)\n            else:\n                bw += int(n / 2)\n                bb += int(n / 2) + n % 2\n        print(aw, ab, bw, bb) if aTurn else print(aw, ab, bw, bb)\nsolve()", "for i in range(int(input())):\n    ab = 0\n    bb = 0\n    bw = 0\n    aw = 0\n    n = int(input())\n    i = 0\n    while n > 0:\n        if n >= 2 * i + 1:\n            aw = aw + i + 1\n            ab = ab + i\n            n = n - 2 * i - 1\n            i = i + 2\n            if n >= 2 * i + 1:\n                bb = bb + i + 1\n                bw = bw + i\n                n = n - 2 * i - 1\n                i = i + 2\n            else:\n                bb = bb + (n // 2 + n % 2)\n                bw = bw + n // 2\n                n = 0\n        else:\n            aw = aw + n // 2 + n % 2\n            ab = ab + n // 2\n            n = 0\n    print(aw, ab, bw, bb)", "for _ in range(int(input())):\n    n = int(input())\n    (wAlice, bAlice, wBob, bBob) = (0, 0, 0, 0)\n    count = 1\n    while n > 0:\n        if count > n:\n            if n % 2 == 0:\n                temp = int(n / 2)\n                wAlice += temp\n                bAlice += temp\n            else:\n                bAlice += n // 2\n                wAlice += n - n // 2\n            break\n        else:\n            bAlice += count // 2\n            wAlice += count - count // 2\n            n -= count\n        count += 4\n        if count > n:\n            if n % 2 == 0:\n                temp = int(n / 2)\n                bBob += temp\n                wBob += temp\n            else:\n                wBob += n // 2\n                bBob += n - n // 2\n            break\n        else:\n            wBob += count // 2\n            bBob += count - count // 2\n            n -= count\n        count += 4\n    print(wAlice, bAlice, wBob, bBob)", "import sys\nimport math\nfrom itertools import accumulate\n\ndef read_string():\n    return sys.stdin.readline().strip()\n\ndef read_int_arr():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef read_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef solve():\n    n = int(input())\n    (A_w, A_b) = (1, 0)\n    n = n - 1\n    (B_w, B_b) = (0, 0)\n    cur = 2\n    next_b = True\n    is_a = False\n    while n > 0:\n        next_sum = min(n, 2 * cur + 1)\n        if is_a:\n            A_w += next_sum // 2\n            A_b += next_sum // 2\n            if next_sum % 2 == 1:\n                if next_b:\n                    A_b += 1\n                else:\n                    A_w += 1\n        else:\n            B_w += next_sum // 2\n            B_b += next_sum // 2\n            if next_sum % 2 == 1:\n                if next_b:\n                    B_b += 1\n                else:\n                    B_w += 1\n        n -= next_sum\n        cur += 2\n        is_a = not is_a\n        next_b = not next_b\n    print(A_w, A_b, B_w, B_b)\nT = int(input())\nfor _ in range(T):\n    solve()", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    n -= 1\n    a = 1\n    aa = 0\n    b = 0\n    bb = 0\n    flag = False\n    c = 2\n    while n > 0:\n        s = c * 2 + 1\n        if flag:\n            if s <= n:\n                a += s // 2 + 1\n                aa += s // 2\n                n -= s\n                c += 2\n                flag = False\n            else:\n                if n & 1:\n                    a += n // 2 + 1\n                    aa += n - (n // 2 + 1)\n                else:\n                    a += n // 2\n                    aa += n // 2\n                break\n        elif s <= n:\n            b += s // 2\n            bb += s // 2 + 1\n            n -= s\n            c += 2\n            flag = True\n        else:\n            if n & 1:\n                bb += n // 2 + 1\n                b += n - (n // 2 + 1)\n            else:\n                b += n // 2\n                bb += n // 2\n            break\n    print(a, aa, b, bb)\n    t -= 1", "def solve(n):\n    r = [1, 0, 0, 0]\n    c = 1\n    step = 1\n    while c < n:\n        v = min(n - c, step * 2 + step * 2 + 1)\n        p1 = v // 2\n        r[2] += p1\n        r[3] += v - p1\n        c += v\n        v = min(n - c, (step + 1) * 2 + (step + 1) * 2 + 1)\n        p1 = v // 2\n        r[0] += v - p1\n        r[1] += p1\n        c += v\n        step += 2\n    return r\nt = int(input())\nans = []\nfor ti in range(t):\n    n = int(input())\n    ans.append(solve(n))\nfor a in ans:\n    print(' '.join((str(x) for x in a)))", "batch = int(input())\nfor _ in range(batch):\n    n = int(input())\n    A = 1\n    A_w = 1\n    A_b = 0\n    B = 0\n    B_w = 0\n    B_b = 0\n    l = 1\n    flag = 1\n    while n - A_w - A_b - B_b - B_w - 2 * l - 3 >= 0:\n        if flag % 2 == 1:\n            B_w += l + 1\n            B_b += l + 2\n            l += 2\n            flag += 1\n        else:\n            A_b += l + 1\n            A_w += l + 2\n            l += 2\n            flag += 1\n    res = n - A_w - A_b - B_b - B_w\n    if res > 0:\n        if flag % 2 == 1:\n            res = res // 2\n            B_w += res\n            B_b += res\n            if n - A_w - A_b - B_b - B_w == 1:\n                B_b += 1\n        else:\n            res = res // 2\n            A_b += res\n            A_w += res\n            if n - A_w - A_b - B_b - B_w == 1:\n                A_w += 1\n    print(A_w, ' ', A_b, ' ', B_w, ' ', B_b)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    aw = 1\n    ab = 0\n    bw = 0\n    bb = 0\n    n = n - 1\n    j = 2\n    o = 0\n    l = 2 * j + 1\n    while n >= l:\n        if o % 2 == 1:\n            aw += l // 2 + 1\n            ab += l // 2\n        else:\n            bb += l // 2 + 1\n            bw += l // 2\n        n -= 2 * j + 1\n        j += 2\n        o += 1\n        l = 2 * j + 1\n    if n % 2 == 1:\n        if o % 2 == 0:\n            bb += n // 2 + 1\n            bw += n // 2\n        else:\n            aw += n // 2 + 1\n            ab += n // 2\n    elif o % 2 == 0:\n        bb += n // 2\n        bw += n // 2\n    else:\n        aw += n // 2\n        ab += n // 2\n    print(aw, ab, bw, bb)", "ttt = int(input())\nwhile ttt > 0:\n    ttt -= 1\n    n = int(input())\n    a1 = 1\n    a2 = 0\n    n -= 1\n    b1 = 0\n    b2 = 0\n    i = 2\n    j = 0\n    while n > 0:\n        k = 2 * i + 1\n        if k <= n:\n            if j % 2 == 0:\n                b2 = b2 + k - i\n                b1 = b1 + k - i - 1\n            else:\n                a1 = a1 + k - i\n                a2 = a2 + k - i - 1\n            n = n - k\n        else:\n            if j % 2 == 0:\n                if n % 2 == 0:\n                    b1 = b1 + n // 2\n                    b2 = b2 + n // 2\n                else:\n                    b1 = b1 + n // 2\n                    b2 = b2 + n // 2 + 1\n            elif n % 2 == 0:\n                a1 = a1 + n // 2\n                a2 = a2 + n // 2\n            else:\n                a1 = a1 + n // 2 + 1\n                a2 = a2 + n // 2\n            n = 0\n        i = i + 2\n        j += 1\n    print(a1, a2, b1, b2)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    (soc, A, B, i, rb, ra, lrc) = (n - 1, 1, 0, 1, 0, 1, 0)\n    while soc > 0:\n        if i % 2 == 1:\n            CB = 0\n            if soc - (1 + i * 4) >= 0:\n                CB += 1 + i * 4\n            else:\n                CB += soc\n            rb += 1\n            soc -= CB\n            B += CB\n        else:\n            CA = 0\n            if soc - (1 + i * 4) >= 0:\n                CA += 1 + i * 4\n            else:\n                CA += soc\n            ra += 1\n            soc -= CA\n            A += CA\n        i += 1\n    WA = int((A - ra) / 2 + ra)\n    BA = A - WA\n    BB = int((B - rb) / 2) + rb\n    WB = B - BB\n    print(WA, BA, WB, BB)", "import sys\n\ndef read(func=int):\n    return func(sys.stdin.readline().strip())\n\ndef read_array(func=int):\n    return list(map(func, read(str).split()))\nt = read()\nfor _ in range(t):\n    n = read()\n    (aw, bw, ab, bb) = (0, 0, 0, 0)\n    inA = False\n    aw += min(1, n)\n    n -= aw\n    cnt = 2\n    while n:\n        ad = min(cnt * 2 + 1, n)\n        if not inA:\n            bb += (ad + 1) // 2\n            bw += ad // 2\n        else:\n            ab += ad // 2\n            aw += (ad + 1) // 2\n        inA = not inA\n        cnt += 2\n        n -= ad\n    print(aw, ab, bw, bb)", "for z in range(int(input())):\n    n = int(input())\n    i = 2\n    aw = 1\n    ab = 0\n    bw = 0\n    bb = 0\n    if n % 2 == 0:\n        nw = n // 2\n        nb = nw\n    else:\n        nb = n // 2\n        nw = nb + 1\n    nw -= 1\n    while nw + nb != 0:\n        if i % 4 == 0:\n            if nw >= i + 1 and nb >= i:\n                aw += i + 1\n                ab += i\n                nw -= i + 1\n                nb -= i\n            else:\n                aw += nw\n                ab += nb\n                nw -= nw\n                nb -= nb\n        elif nb >= i + 1 and nw >= i:\n            bb += i + 1\n            bw += i\n            nb -= i + 1\n            nw -= i\n        else:\n            bb += nb\n            bw += nw\n            nb -= nb\n            nw -= nw\n        i += 2\n    print(aw, end=' ')\n    print(ab, end=' ')\n    print(bw, end=' ')\n    print(bb)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [1, 0]\n    b = [0, 0]\n    n -= 1\n    i = 2\n    bob = True\n    while n > 0:\n        if bob:\n            bd = i + i + 1\n            if n >= bd:\n                b[0] += i\n                b[1] += i + 1\n                bob = False\n                i += 2\n                n -= bd\n            else:\n                if n % 2:\n                    b[1] += n // 2 + 1\n                    b[0] += n // 2\n                else:\n                    b[0] += n // 2\n                    b[1] += n // 2\n                n = 0\n                break\n        else:\n            ad = i + i + 1\n            if n >= ad:\n                a[0] += i + 1\n                a[1] += i\n                bob = True\n                i += 2\n                n -= ad\n            else:\n                if n % 2:\n                    a[0] += n // 2 + 1\n                    a[1] += n // 2\n                else:\n                    a[0] += n // 2\n                    a[1] += n // 2\n                n = 0\n                break\n    print(a[0], ' ', a[1], ' ', b[0], ' ', b[1])", "for _ in range(int(input())):\n    x = int(input())\n    (a1, a2, b1, b2) = (0, 0, 0, 0)\n    i = 1\n    while x:\n        d = min(x, i)\n        a1 += d + 1 >> 1\n        a2 += d >> 1\n        x -= d\n        i += 4\n        d = min(x, i)\n        b1 += d >> 1\n        b2 += d + 1 >> 1\n        x -= d\n        i += 4\n    print(a1, a2, b1, b2)", "for _ in range(int(input())):\n    n = int(input())\n    i = 1\n    Aw = 0\n    Ab = 0\n    Bw = 0\n    Bb = 0\n    last = 'B'\n    while Aw + Bw + Ab + Bb + i <= n:\n        if last == 'B':\n            Aw += i // 2 + 1\n            Ab += i // 2\n            last = 'A'\n        else:\n            Bw += i // 2\n            Bb += i // 2 + 1\n            last = 'B'\n        i = (i // 2 + 1) * 2 + 3\n    if Aw + Bw + Ab + Bb < n:\n        i = n - (Aw + Ab + Bw + Bb)\n        if last == 'B':\n            Aw += i // 2 + i % 2\n            Ab += i // 2\n        else:\n            Bw += i // 2\n            Bb += i // 2 + i % 2\n    print(Aw, Ab, Bw, Bb)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    k = 1\n    while k * (2 * k - 1) <= n:\n        if k * (2 * k - 1) <= n < (k + 1) * (2 * k + 1):\n            break\n        else:\n            k += 1\n    n -= k * (2 * k - 1)\n    (num1, num2) = (0, 0)\n    (k1, k2) = (0, 0)\n    if k % 2 == 0 and n % 2 == 0:\n        num1 += n\n    elif k % 2 == 0 and n % 2 == 1:\n        num1 += n\n        k1 += 1\n    elif k % 2 and n % 2:\n        num2 += n\n        k2 += 1\n    else:\n        num2 += n\n    for i in range(1, k + 1):\n        if i % 2:\n            num1 += 4 * i - 3\n            k1 += 1\n        else:\n            num2 += 4 * i - 3\n            k2 += 1\n    print((num1 + k1) // 2, (num1 - k1) // 2, (num2 - k2) // 2, (num2 + k2) // 2)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 0:\n        print(0, 0)\n    a = 1\n    b = 0\n    n = n - 1\n    temp = 2\n    flag = 1\n    ab = 0\n    aw = 1\n    bb = 0\n    bw = 0\n    while n > 0:\n        if flag == 1:\n            if n >= temp * 2 + 1:\n                x = temp * 2 + 1\n                b += x\n                flag = 0\n                n -= x\n                ans = x // 2\n                bw += ans\n                bb += ans + 1\n            else:\n                b += n\n                if n % 2 == 0:\n                    bw += n // 2\n                    bb += n // 2\n                else:\n                    bw += n // 2\n                    bb += n // 2 + 1\n                break\n        elif n >= temp * 2 + 1:\n            x = temp * 2 + 1\n            a += x\n            flag = 1\n            n -= x\n            ans = x // 2\n            ab += ans\n            aw += ans + 1\n        else:\n            a += n\n            if n % 2 == 0:\n                ab += n // 2\n                aw += n // 2\n            else:\n                ab += n // 2\n                aw += n // 2 + 1\n            break\n        temp += 2\n    print(aw, ab, bw, bb)", "t = int(input())\nfor i in range(t):\n    Alisa_white = 0\n    Bob_white = 0\n    Alisa_black = 0\n    Bob_black = 0\n    n = int(input())\n    a = 3\n    f = True\n    color = True\n    while n >= a:\n        if f:\n            Alisa_white += a // 4 + 1\n            Alisa_black += a // 4\n            Bob_black += a // 4 + 1\n            Bob_white += a // 4 + 1\n        else:\n            Bob_black += a // 4 + 1\n            Bob_white += a // 4\n            Alisa_white += a // 4 + 1\n            Alisa_black += a // 4 + 1\n        n -= a\n        a += 4\n        f = not f\n    k = min(n, a // 2)\n    if f:\n        Alisa_white += k - k // 2\n        Alisa_black += k // 2\n        Bob_white += (n - k) // 2\n        Bob_black += n - k - (n - k) // 2\n    else:\n        Bob_black += k - k // 2\n        Bob_white += k // 2\n        Alisa_black += (n - k) // 2\n        Alisa_white += n - k - (n - k) // 2\n    print(Alisa_white, Alisa_black, Bob_white, Bob_black, sep=' ')", "for _ in range(int(input())):\n    n = int(input())\n    (aw, ab, bw, bb) = (0, 0, 0, 0)\n    x = 0\n    p = 1\n    while n > 0:\n        if p:\n            if n > 4 * x + 1:\n                aw += 2 * x + 1\n                ab += 2 * x\n            else:\n                aw += n // 2 + n % 2\n                ab += n // 2\n        elif n > 4 * x + 1:\n            bb += 2 * x + 1\n            bw += 2 * x\n        else:\n            bb += n // 2 + n % 2\n            bw += n // 2\n        p ^= 1\n        n -= 4 * x + 1\n        x += 1\n    print(aw, ab, bw, bb)", "import sys\nimport math\nimport bisect\nimport heapq\nimport itertools\nfrom sys import stdin, stdout\nfrom math import gcd, floor, sqrt, log\nfrom collections import defaultdict, Counter, deque\nfrom bisect import bisect_left, bisect_right, insort_left, insort_right\nmod = 1000000007\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\n\ndef get_list_strings():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef solve():\n    n = get_int()\n    alw = 1\n    alb = 0\n    bw = 0\n    bb = 0\n    current = 2\n    turn = 0\n    while sum([alw, alb, bw, bb]) + (2 * current + 1) < n:\n        big_half = math.ceil((2 * current + 1) / 2)\n        small_half = 2 * current + 1 - big_half\n        if turn % 2 == 0:\n            bw += small_half\n            bb += big_half\n        else:\n            alw += big_half\n            alb += small_half\n        current += 2\n        turn += 1\n    left_over = n - sum([alw, alb, bw, bb])\n    big_half = math.ceil(left_over / 2)\n    small_half = left_over - big_half\n    if turn % 2 == 0:\n        bw += small_half\n        bb += big_half\n    else:\n        alw += big_half\n        alb += small_half\n    return [alw, alb, bw, bb]\nfor _ in range(get_int()):\n    print(*solve())", "for _ in range(int(input())):\n    num = int(input())\n    i = 1\n    w = w1 = b1 = b = 0\n    while w + w1 + b + b1 != num:\n        sum = w + w1 + b + b1\n        value = 4 * i - 3\n        if value <= num - sum:\n            value = value\n        else:\n            value = num - sum\n        if i % 2:\n            w += (value + 1) // 2\n            b += value // 2\n        else:\n            w1 += value // 2\n            b1 += (value + 1) // 2\n        i += 1\n    print(w, b, w1, b1)", "def ncard(n):\n    aw = 0\n    ab = 0\n    bw = 0\n    bb = 0\n    i = 1\n    isA = True\n    c = 1\n    isB = False\n    while n >= i:\n        if isA:\n            aw += i // 2\n            ab += i // 2\n            if i % 2 != 0:\n                if isB:\n                    ab += 1\n                else:\n                    aw += 1\n        else:\n            bw += i // 2\n            bb += i // 2\n            if i % 2 != 0:\n                if isB:\n                    bb += 1\n                else:\n                    bw += 1\n        if i % 2 != 0:\n            isB = not isB\n        n -= i\n        i += 1\n        c += 1\n        if c == 2:\n            c = 0\n            isA = not isA\n    if n > 0:\n        if isA:\n            aw += n // 2\n            ab += n // 2\n            if n % 2 != 0:\n                if isB:\n                    ab += 1\n                else:\n                    aw += 1\n        else:\n            bw += n // 2\n            bb += n // 2\n            if n % 2 != 0:\n                if isB:\n                    bb += 1\n                else:\n                    bw += 1\n    print(aw, ab, bw, bb)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    ncard(n)", "for i in range(int(input())):\n    n = int(input())\n    i = 2\n    t = 2\n    r = {}\n    r['ba'] = 0\n    r['bb'] = 0\n    r['wa'] = 1\n    n -= 1\n    r['wb'] = 0\n    while n > 0:\n        if t % 2 == 0:\n            if n - (i * 2 + 1) >= 0:\n                r['wb'] += (2 * i + 1) // 2\n                r['bb'] += i * 2 + 1 - (2 * i + 1) // 2\n                n -= i * 2 + 1\n            else:\n                r['wb'] += n // 2\n                r['bb'] += n - n // 2\n                n -= n\n        elif n - (i * 2 + 1) >= 0:\n            r['ba'] += (i * 2 + 1) // 2\n            r['wa'] += i * 2 + 1 - (i * 2 + 1) // 2\n            n -= i * 2 + 1\n        else:\n            r['ba'] += n // 2\n            r['wa'] += n - n // 2\n            n -= n\n        i += 2\n        t += 1\n    print(r['wa'], r['ba'], r['wb'], r['bb'])", "T = int(input())\nfor t in range(T):\n    N = int(input()) - 1\n    alicew = 1\n    aliceb = 0\n    bobw = 0\n    bobb = 0\n    i = 1\n    while N > 0:\n        if i % 2:\n            cards = min(N, 4 * i + 1)\n            if cards % 2:\n                bobb += 1\n            N -= cards\n            bobw += cards // 2\n            bobb += cards // 2\n        else:\n            cards = min(N, 4 * i + 1)\n            if cards % 2:\n                alicew += 1\n            N -= cards\n            alicew += cards // 2\n            aliceb += cards // 2\n        i += 1\n    print(alicew, aliceb, bobw, bobb)", "n = int(input())\nfor _ in range(n):\n    m = int(input())\n    a = 1\n    aw = 1\n    ab = 0\n    bw = 0\n    bb = 0\n    b = 0\n    s = 2\n    m = m - 1\n    u = 0\n    while m > 0:\n        if u % 2 == 0:\n            if m >= 2 * s + 1:\n                b = 2 * s + 1\n                m = m - 2 * s - 1\n                bb += b // 2 + 1\n                bw += b // 2\n                s = s + 2\n            else:\n                b += m\n                if m % 2 == 0:\n                    bb += m // 2\n                    bw += m // 2\n                else:\n                    bb += m // 2 + 1\n                    bw += m // 2\n                m = 0\n        elif m >= 2 * s + 1:\n            a = 2 * s + 1\n            m = m - 2 * s - 1\n            aw += a // 2 + 1\n            ab += a // 2\n            s = s + 2\n        else:\n            a += m\n            if m % 2 == 0:\n                ab += m // 2\n                aw += m // 2\n            else:\n                ab += m // 2\n                aw += m // 2 + 1\n            m = 0\n        u = u + 1\n    print(aw, ab, bw, bb)", "t = int(input())\nfor i in range(t):\n    n = int(input()) - 1\n    alice_white = 1\n    alice_black = 0\n    bob_black = 0\n    bob_white = 0\n    s = 0\n    j = 1\n    while n > 0:\n        b = 4 * j + 1\n        if s == 0:\n            if n > b:\n                n = n - b\n                bob_white += int(b / 2)\n                bob_black += b - int(b / 2)\n                j += 1\n                s = 1\n            else:\n                bob_white += int(n / 2)\n                bob_black += n - int(n / 2)\n                n = 0\n        elif n > b:\n            n = n - b\n            alice_black += int(b / 2)\n            alice_white += b - int(b / 2)\n            j += 1\n            s = 0\n        else:\n            alice_black += int(n / 2)\n            alice_white += n - int(n / 2)\n            n = 0\n    print(str(alice_white) + ' ' + str(alice_black) + ' ' + str(bob_white) + ' ' + str(bob_black))", "t = int(input().strip())\nfor _ in range(t):\n    n = int(input().strip())\n    alice_turn = False\n    black = True\n    alice_w = 1\n    bob_w = alice_b = bob_b = 0\n    rem = n - 1\n    for i in range(2, n + 1, 2):\n        if rem <= 0:\n            break\n        if i + i + 1 <= rem:\n            rem -= i + i + 1\n            w = b = 0\n            if black:\n                b = i + 1\n                w = i\n            else:\n                w = i + 1\n                b = i\n            if alice_turn:\n                alice_b += b\n                alice_w += w\n            else:\n                bob_b += b\n                bob_w += w\n        else:\n            w = b = 0\n            if black:\n                b = (rem + 1) // 2\n                w = rem - b\n            else:\n                w = (rem + 1) // 2\n                b = rem - w\n            if alice_turn:\n                alice_b += b\n                alice_w += w\n            else:\n                bob_b += b\n                bob_w += w\n            rem = 0\n        alice_turn ^= True\n        black ^= True\n    print(alice_w, alice_b, bob_w, bob_b)", "def solve():\n    Alicebial = 0\n    Aliceczar = 0\n    Bobbial = 0\n    Bobczar = 0\n    iledod = 1\n    n = int(input().strip())\n    komu = False\n    while n > 0:\n        if not komu:\n            if min(n, iledod) % 2 == 0:\n                Alicebial += min(n, iledod) // 2\n                Aliceczar += min(n, iledod) // 2\n            else:\n                Alicebial += min(n, iledod) // 2 + 1\n                Aliceczar += min(n, iledod) // 2\n            komu = True\n        else:\n            if min(n, iledod) % 2 == 0:\n                Bobbial += min(n, iledod) // 2\n                Bobczar += min(n, iledod) // 2\n            else:\n                Bobbial += min(n, iledod) // 2 + 1\n                Bobczar += min(n, iledod) // 2\n            komu = False\n        n -= min(n, iledod)\n        iledod += 4\n    print(Alicebial, Aliceczar, Bobczar, Bobbial)\nt = int(input().strip())\nfor _ in range(t):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    a = [1, 0]\n    b = [0, 0]\n    n -= 1\n    t = 1\n    c = 2\n    while n > 0:\n        x = 2 * c + 1\n        if t % 2:\n            if n > x:\n                b[1] += x // 2 + 1\n                b[0] += x // 2\n            elif n % 2:\n                b[1] += n // 2 + 1\n                b[0] += n // 2\n            else:\n                b[1] += n // 2\n                b[0] += n // 2\n        elif n > x:\n            a[1] += x // 2\n            a[0] += x // 2 + 1\n        elif n % 2 == 0:\n            a[1] += n // 2\n            a[0] += n // 2\n        else:\n            a[1] += n // 2\n            a[0] += n // 2 + 1\n        n -= 2 * c + 1\n        c += 2\n        t += 1\n    print(a[0], a[1], b[0], b[1])", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    a = 1\n    aw = 1\n    ab = 0\n    b = 0\n    bw = 0\n    bb = 0\n    c = 1\n    while True:\n        c += 1\n        b += c\n        bb += c // 2\n        bw += c // 2\n        if a + b == n:\n            print(aw, ab, bw, bb)\n            break\n        elif a + b > n:\n            diff = a + b - n\n            d = diff // 2\n            bb -= d\n            bw -= diff - d\n            print(aw, ab, bw, bb)\n            break\n        c += 1\n        b += c\n        bb += c // 2 + 1\n        bw += c // 2\n        if a + b == n:\n            print(aw, ab, bw, bb)\n            break\n        elif a + b > n:\n            diff = a + b - n\n            d = diff // 2\n            bw -= d\n            bb -= diff - d\n            print(aw, ab, bw, bb)\n            break\n        c += 1\n        a += c\n        ab += c // 2\n        aw += c // 2\n        if a + b == n:\n            print(aw, ab, bw, bb)\n            break\n        elif a + b > n:\n            diff = a + b - n\n            d = diff // 2\n            aw -= d\n            ab -= diff - d\n            print(aw, ab, bw, bb)\n            break\n        c += 1\n        a += c\n        ab += c // 2\n        aw += c // 2 + 1\n        if a + b == n:\n            print(aw, ab, bw, bb)\n            break\n        elif a + b > n:\n            diff = a + b - n\n            d = diff // 2\n            ab -= d\n            aw -= diff - d\n            print(aw, ab, bw, bb)\n            break", "for i in range(int(input())):\n    n = int(input())\n    alice = [1, 0]\n    bob = [0, 0]\n    num = 1\n    for i in range(n):\n        if sum(alice) + sum(bob) + num + 4 >= n:\n            left = n - (sum(alice) + sum(bob))\n            if i % 2 == 0:\n                if left % 2 == 0:\n                    bob[1] += left // 2\n                    bob[0] += left // 2\n                else:\n                    bob[1] += (left + 1) // 2\n                    bob[0] += (left - 1) // 2\n            elif left % 2 == 0:\n                alice[0] += left // 2\n                alice[1] += left // 2\n            else:\n                alice[0] += (left + 1) // 2\n                alice[1] += (left - 1) // 2\n            break\n        if i % 2 == 0:\n            num += 4\n            bob[1] += (num + 1) // 2\n            bob[0] += (num - 1) // 2\n        else:\n            num += 4\n            alice[0] += (num + 1) // 2\n            alice[1] += (num - 1) // 2\n    print(alice[0], alice[1], bob[0], bob[1])", "for _ in [''] * int(input()):\n    n = int(input())\n    Aw = 0\n    Ab = 0\n    Bw = 0\n    Bb = 0\n    i = 1\n    while n > 0:\n        if i % 4 == 0 or i % 4 == 1:\n            if i % 2 == 0:\n                Aw += i // 2\n                Ab += i // 2\n            else:\n                Aw += i // 2 + 1\n                Ab += i // 2\n        elif i % 2 == 0:\n            Bw += i // 2\n            Bb += i // 2\n        else:\n            Bw += i // 2\n            Bb += i // 2 + 1\n        n -= i\n        i += 1\n    i -= 1\n    if i % 4 == 0 or i % 4 == 1:\n        if n % 2 == 0:\n            Aw += n // 2\n            Ab += n // 2\n        elif i % 2 == 0 and n % 2 == 1:\n            Aw += n // 2 + 1\n            Ab += n // 2\n        elif i % 2 == 1 and n % 2 == 1:\n            Aw += n // 2\n            Ab += n // 2 + 1\n    elif n % 2 == 0:\n        Bw += n // 2\n        Bb += n // 2\n    elif i % 2 == 0 and n % 2 == 1:\n        Bw += n // 2\n        Bb += n // 2 + 1\n    elif i % 2 == 1 and n % 2 == 1:\n        Bw += n // 2 + 1\n        Bb += n // 2\n    print(Aw, Ab, Bw, Bb)", "for t in range(int(input())):\n    n = int(input())\n    alice = [0, 0]\n    bob = [0, 0]\n    cnt = 0\n    while n > 0:\n        ttl = min(n, 1 + 4 * cnt)\n        if cnt % 2 == 0:\n            alice[0] += int((ttl + 1) // 2)\n            alice[1] += int(ttl // 2)\n        else:\n            bob[0] += int(ttl // 2)\n            bob[1] += int((ttl + 1) // 2)\n        n -= ttl\n        cnt += 1\n    print('{} {} {} {}'.format(alice[0], alice[1], bob[0], bob[1]))", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    if a == 0:\n        print(0, 0)\n    else:\n        (first, second) = (1, 0)\n        (fw, fb, sw, sb) = (1, 0, 0, 0)\n        a -= 1\n        c = False\n        n = 1\n        while a > 0:\n            n += 4\n            if c == False:\n                second += min(n, a)\n                sb += (min(n, a) + 1) // 2\n                sw += min(a, n) // 2\n                c = True\n            else:\n                first += min(n, a)\n                fw += (min(n, a) + 1) // 2\n                fb += min(n, a) // 2\n                c = False\n            a -= n\n        print(fw, fb, sw, sb)", "def alice_and_bob_colored_cards(n):\n    alice_white = 0\n    alice_black = 0\n    bob_white = 0\n    bob_black = 0\n    i = 1\n    while n > 0:\n        cards_dealt = min(i, n)\n        if i % 4 == 0 or i % 4 == 1:\n            if cards_dealt % 2 == 0:\n                alice_white += cards_dealt // 2\n                alice_black += cards_dealt // 2\n            else:\n                alice_white += (cards_dealt + 1) // 2\n                alice_black += (cards_dealt - 1) // 2\n        elif cards_dealt % 2 == 0:\n            bob_white += cards_dealt // 2\n            bob_black += cards_dealt // 2\n        else:\n            bob_white += (cards_dealt - 1) // 2\n            bob_black += (cards_dealt + 1) // 2\n        n -= cards_dealt\n        i += 1\n    print(alice_white, alice_black, bob_white, bob_black)\nx = int(input())\nfor i in range(x):\n    t = int(input())\n    alice_and_bob_colored_cards(t)", "num = int(input())\nfor i in range(0, num):\n    n = int(input())\n    i = 1\n    m = 0\n    k = 0\n    w = 1\n    white_a = 0\n    white_b = 0\n    black_a = 0\n    black_b = 0\n    while m < n:\n        if i == 1:\n            white_a += 1\n            i = i + 1\n            m = 1\n        elif k % 2 == 0:\n            if i + i + 1 < n - m:\n                p = (i + i + 2) // 2\n                black_b += p\n                white_b += i + i + 1 - p\n                m = m + i + i + 1\n                i = i + 2\n                k = k + 1\n            else:\n                if n - m > 0:\n                    p = (n - m + 1) // 2\n                    black_b += p\n                    white_b += n - m - p\n                k = k + 1\n                m = m + i + i + 1\n                i = i + 2\n        elif i + i + 1 < n - m:\n            p = (i + i + 2) // 2\n            white_a += p\n            black_a += i + i + 1 - p\n            m = m + i + i + 1\n            i = i + 2\n            k = k + 1\n        else:\n            if n - m > 0:\n                p = (n - m + 1) // 2\n                white_a += p\n                black_a += n - m - p\n            m = m + i + i + 1\n            i = i + 2\n            k = k + 1\n    print(white_a, black_a, white_b, black_b)", "import collections\nimport math\nimport heapq\nfor _ in range(int(input())):\n    n = int(input())\n    if n == 0:\n        print(0, 0, 0, 0)\n        continue\n    (aw, ab, bw, bb) = (0, 0, 0, 0)\n    aw += 1\n    lastColor = False\n    cards = 2\n    x = n - 1\n    giveA = False\n    while True:\n        curr = cards + cards + 1\n        if x - curr <= 0:\n            currw = x // 2 if not lastColor else (x + 1) // 2\n            currb = x - currw\n            if giveA:\n                (aw, ab) = (aw + currw, ab + currb)\n            else:\n                (bw, bb) = (bw + currw, bb + currb)\n            break\n        currw = curr // 2 if not lastColor else (curr + 1) // 2\n        currb = curr - currw\n        if giveA:\n            (aw, ab) = (aw + currw, ab + currb)\n        else:\n            (bw, bb) = (bw + currw, bb + currb)\n        lastColor = lastColor if curr % 2 == 0 else not lastColor\n        x -= curr\n        cards += 2\n        giveA = not giveA\n    print(aw, ab, bw, bb)", "s = int(input())\nfor i in range(s):\n    c = int(input())\n    a = b = f = e = 0\n    d = 1\n    l = c\n    a += 1\n    c -= 1\n    count = 0\n    while c > 0:\n        d += 1\n        if c - d < 0:\n            d = c\n        if count <= 1:\n            f += d // 2\n            e += d - d // 2\n        else:\n            a += d - d // 2\n            b += d // 2\n            if count == 3:\n                count = -1\n        c -= d\n        count += 1\n    print(a, b, f, e)", "a = int(input())\nfor i in range(a):\n    b = [0, 0, 0, 0]\n    c = 0\n    o = False\n    n = int(input())\n    ch = n % 2\n    while n > 0:\n        b[int(o) * 2 + int(o)] += 1 + c * 2\n        b[int(o) * 2 + int(not o)] += c * 2\n        n -= 1 + 4 * c\n        o = not o\n        c += 1\n    o = not o\n    f = n % 2\n    n = -1 * n // 2\n    b[int(o) * 2 + int(o)] -= n\n    b[int(o) * 2 + int(not o)] -= n\n    if f == 1:\n        b[int(o) * 2 + ch] -= 1\n    print(b[0], b[1], b[2], b[3])", "for _ in range(int(input())):\n    n = int(input())\n    alice_w = 0\n    alice_b = 0\n    bob_w = 0\n    bob_b = 0\n    i = 1\n    while n > 0:\n        if i % 4 == 0:\n            if n < i:\n                alice_w += n - n // 2\n                alice_b += n // 2\n                break\n            alice_w += i // 2\n            alice_b += i // 2\n        elif i % 4 == 1:\n            if n < i:\n                alice_w += n - n // 2\n                alice_b += n // 2\n                break\n            alice_w += i // 2 + 1\n            alice_b += i // 2\n        elif i % 4 == 2:\n            if n < i:\n                bob_w += n // 2\n                bob_b += n - n // 2\n                break\n            bob_w += i // 2\n            bob_b += i // 2\n        elif i % 4 == 3:\n            if n < i:\n                bob_w += n // 2\n                bob_b += n - n // 2\n                break\n            bob_w += i // 2\n            bob_b += i // 2 + 1\n        n -= i\n        i += 1\n    print(alice_w, alice_b, bob_w, bob_b)", "t = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    c1 = 1\n    n = n - 1\n    k = 2\n    x = 0\n    c2 = 0\n    if n % 2 == 0:\n        w = n // 2\n        b = n // 2\n    else:\n        w = n // 2 + 1\n        b = n // 2\n    w = w - 1\n    c1w = 1\n    c1b = 0\n    c2w = 0\n    c2b = 0\n    while n > 0:\n        if x % 2 == 0:\n            tot = k + k + 1\n            bb = tot // 2 + 1\n            ww = tot // 2\n            if n - tot >= 0:\n                c2w += ww\n                c2b += bb\n                n = n - tot\n            else:\n                xx = 0\n                while n > 0:\n                    if xx % 2 == 0:\n                        c2b += 1\n                    else:\n                        c2w += 1\n                    xx += 1\n                    n = n - 1\n        else:\n            tot = k + k + 1\n            bb = tot // 2\n            ww = tot // 2 + 1\n            if n - tot >= 0:\n                c1w += ww\n                c1b += bb\n                n = n - tot\n            else:\n                xx = 0\n                while n > 0:\n                    if xx % 2 == 0:\n                        c1w += 1\n                    else:\n                        c1b += 1\n                    xx += 1\n                    n = n - 1\n        x += 1\n        k = k + 2\n    print(f'{c1w} {c1b} {c2w} {c2b}')", "for _ in range(int(input())):\n    n = int(input())\n    n = n - 1\n    aW = 1\n    aB = 0\n    bW = 0\n    bB = 0\n    i = 2\n    c = 1\n    while n > 0 and n >= i:\n        if i % 4 == 3 or i % 4 == 2:\n            if i % 2 == 0:\n                bW += i // 2\n                bB += i // 2\n            else:\n                c += 1\n                if c % 2 == 0:\n                    bB += i // 2 + 1\n                    bW += i // 2\n                else:\n                    bB += i // 2\n                    bW += i // 2 + 1\n        elif i % 2 == 0:\n            aW += i // 2\n            aB += i // 2\n        else:\n            c += 1\n            if c % 2 == 0:\n                aB += i // 2 + 1\n                aW += i // 2\n            else:\n                aB += i // 2\n                aW += i // 2 + 1\n        n -= i\n        i += 1\n    if i % 4 == 3 or i % 4 == 2:\n        if n % 2 == 0:\n            bW += n // 2\n            bB += n // 2\n        else:\n            c += 1\n            if c % 2 == 0:\n                bB += n // 2 + 1\n                bW += n // 2\n            else:\n                bB += n // 2\n                bW += n // 2 + 1\n    elif n % 2 == 0:\n        aW += n // 2\n        aB += n // 2\n    else:\n        c += 1\n        if c % 2 == 0:\n            aB += n // 2 + 1\n            aW += n // 2\n        else:\n            aB += n // 2\n            aW += n // 2 + 1\n    print(aW, aB, bW, bB)", "test_cases = int(input())\n\ndef deal(person, cards, number, start_color):\n    if cards == 0:\n        return (person, cards, number, start_color)\n    if number <= cards:\n        person[start_color] += (number + 1) // 2\n        person[1 - start_color] += number // 2\n        cards -= number\n    else:\n        person[start_color] += (cards + 1) // 2\n        person[1 - start_color] += cards // 2\n        cards = 0\n    if number % 2 == 1:\n        start_color = 1 - start_color\n    return (person, cards, number, start_color)\nfor _ in range(test_cases):\n    n = int(input())\n    color = 0\n    (alice, bob) = ([0, 0], [0, 0])\n    i = 1\n    while n > 0:\n        (alice, n, i, color) = deal(alice, n, i, color)\n        i += 1\n        if i != 2:\n            (alice, n, i, color) = deal(alice, n, i, color)\n            i += 1\n        (bob, n, i, color) = deal(bob, n, i, color)\n        i += 1\n        (bob, n, i, color) = deal(bob, n, i, color)\n        i += 1\n    print(alice[0], alice[1], bob[0], bob[1])", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    n = int(inp())\n    i = 1\n    s = 0\n    c = [[0, 0], [0, 0]]\n    while i <= n:\n        d = i // 2\n        r = i % 2\n        c[i // 2 % 2][s] += d + r\n        c[i // 2 % 2][s ^ 1] += d\n        n -= i\n        s ^= i & 1\n        i += 1\n    d = n // 2\n    r = n % 2\n    c[i // 2 % 2][s] += d + r\n    c[i // 2 % 2][s ^ 1] += d\n    print(c[0][0], c[0][1], c[1][0], c[1][1])\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "from sys import stdin\nt = int(stdin.readline().strip())\nfor i in range(t):\n    a = int(stdin.readline().strip())\n    re11 = 0\n    re12 = 0\n    re21 = 0\n    re22 = 0\n    c = 1\n    l = 1\n    s = 0\n    for i2 in range(a):\n        if s == 0:\n            re11 += (c + 1) // 2\n            re12 += c // 2\n            l += 1\n        else:\n            re21 += c // 2\n            re22 += (c + 1) // 2\n            l += 1\n        if l == 2:\n            if s == 0:\n                s = 1\n            else:\n                s = 0\n            l = 0\n        a -= c\n        c += 1\n        if a < c:\n            if s == 0:\n                re11 += (a + 1) // 2\n                re12 += a // 2\n            else:\n                re21 += a // 2\n                re22 += (a + 1) // 2\n            break\n    print(re11, re12, re21, re22)", "import math\n\ndef neg(num):\n    if num == 1:\n        return 0\n    else:\n        return 1\n\ndef numCards(cards):\n    if cards == 0:\n        return (0, 0)\n    player = [1, 0, 0, 0]\n    turn = 2\n    i = 1\n    cards -= 1\n    color = 1\n    while 1:\n        for _ in range(2):\n            i += 1\n            if cards < 0:\n                return player\n            if cards < i:\n                Ctemp = math.ceil(cards / 2)\n                Ftemp = cards - Ctemp\n                player[turn + color] += Ctemp\n                player[turn + neg(color)] += Ftemp\n                return player\n            Ctemp = math.ceil(i / 2)\n            Ftemp = i - Ctemp\n            player[turn + color] += Ctemp\n            player[turn + neg(color)] += Ftemp\n            cards -= i\n        color = neg(color)\n        if turn == 0:\n            turn = 2\n        else:\n            turn = 0\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    ans = numCards(n)\n    print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    cards_aw = 0\n    cards_ab = 0\n    cards_bw = 0\n    cards_bb = 0\n    for i in range(1, n + 1):\n        if n >= i:\n            if i % 4 == 1 or i % 4 == 0:\n                cards_aw += i - int(i / 2)\n                cards_ab += int(i / 2)\n                n -= i\n            elif i % 4 == 2 or i % 4 == 3:\n                cards_bw += int(i / 2)\n                cards_bb += i - int(i / 2)\n                n -= i\n        elif n > 0 and n < i:\n            if i % 4 == 1 or i % 4 == 0:\n                cards_aw += n - int(n / 2)\n                cards_ab += int(n / 2)\n                n -= n\n            elif i % 4 == 2 or i % 4 == 3:\n                cards_bw += int(n / 2)\n                cards_bb += n - int(n / 2)\n                n -= n\n        else:\n            break\n    print(cards_aw, cards_ab, cards_bw, cards_bb)", "for i in range(0, 10):\n    continue\nfor _ in range(int(input())):\n    n = int(input())\n    n = n - 1\n    a0 = 1\n    a1 = 0\n    b0 = 0\n    b1 = 0\n    l = 2\n    while n > 0:\n        x = min(n, l)\n        if l // 2 % 2:\n            b0 += x // 2\n            b1 += x // 2\n            if x % 2:\n                b1 += 1\n        else:\n            a0 += x // 2\n            a1 += x // 2\n            if x % 2:\n                a0 += 1\n        n -= x\n        l += 1\n    print(a0, a1, b0, b1)", "for _ in range(int(input())):\n    n = int(input())\n    n -= 1\n    a = [1, 0]\n    b = [0, 0]\n    color = 1\n    turn = 0\n    ct = 0\n    g = 2\n    while n:\n        n -= g\n        if n < 0:\n            n += g\n            if turn:\n                if not n % 2:\n                    a[color] += n // 2\n                    a[1 - color] += n // 2\n                else:\n                    a[color] += n // 2 + 1\n                    a[1 - color] += n // 2\n                    color = 1 - color\n            elif not n % 2:\n                b[color] += n // 2\n                b[1 - color] += n // 2\n            else:\n                b[color] += n // 2 + 1\n                b[1 - color] += n // 2\n            break\n        if turn:\n            if not g % 2:\n                a[color] += g // 2\n                a[1 - color] += g // 2\n            else:\n                a[color] += g // 2 + 1\n                a[1 - color] += g // 2\n                color = 1 - color\n            ct += 1\n            g += 1\n        elif not turn:\n            if not g % 2:\n                b[color] += g // 2\n                b[1 - color] += g // 2\n            else:\n                b[color] += g // 2 + 1\n                b[1 - color] += g // 2\n                color = 1 - color\n            ct += 1\n            g += 1\n        if ct == 2:\n            ct = 0\n            turn = 1 - turn\n    print(*a, *b)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    p = n - 1\n    a = 1\n    b = 0\n    aw = 1\n    ab = 0\n    bw = 0\n    bb = 0\n    who = 'b'\n    round = 1\n    test = 2\n    while True:\n        if p > test:\n            if who == 'b':\n                if round == 1:\n                    b += test\n                    bw += test / 2\n                    bb += test / 2\n                    round = 2\n                else:\n                    b += test\n                    bb += test // 2 + 1\n                    bw += test // 2\n                    who = 'a'\n                    round = 1\n            elif round == 1:\n                a += test\n                aw += test / 2\n                ab += test / 2\n                round = 2\n            else:\n                a += test\n                aw += test // 2 + 1\n                ab += test // 2\n                who = 'b'\n                round = 1\n            p -= test\n            test += 1\n        elif who == 'b':\n            for k in range(1, p + 1):\n                if k % 2 == 0:\n                    bw += 1\n                else:\n                    bb += 1\n            b += p\n            break\n        else:\n            for k in range(1, p + 1):\n                if k % 2 == 0:\n                    ab += 1\n                else:\n                    aw += 1\n            a += p\n            break\n    print(int(aw), ' ', int(ab), ' ', int(bw), ' ', int(bb))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    swa = 0\n    sba = 0\n    swb = 0\n    sbb = 0\n    j = 1\n    while swa + sba + swb + sbb + j <= n:\n        if j % 4 == 0:\n            swa = swa + j // 2\n            sba = sba + j // 2\n        elif j % 4 == 1:\n            swa = swa + j // 2 + 1\n            sba = sba + j // 2\n        elif j % 4 == 2:\n            swb = swb + j // 2\n            sbb = sbb + j // 2\n        elif j % 4 == 3:\n            swb = swb + j // 2\n            sbb = sbb + j // 2 + 1\n        j = j + 1\n    s = swa + sba + swb + sbb\n    if s + j > n and s != n:\n        if j % 4 == 0 or j % 4 == 1:\n            swa = swa + (n - s) // 2 + (n - s) % 2\n            sba = sba + (n - s) // 2\n        elif j % 4 == 2 or j % 4 == 3:\n            swb = swb + (n - s) // 2\n            sbb = sbb + (n - s) // 2 + (n - s) % 2\n    print(swa, sba, swb, sbb)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    p = 0\n    j = 0\n    k = 0\n    a = 0\n    b = 0\n    aw = 0\n    ab = 0\n    bw = 0\n    bb = 0\n    while True:\n        if k == 0:\n            a = a + j + 1\n            j = j + 1\n            aw = 1\n        else:\n            r = j + 1 + j + 2 + a + b\n            if r > n:\n                n = n - (a + b)\n                if k % 2 == 0:\n                    if n % 2 == 0:\n                        aw = aw + int(n / 2)\n                        ab = ab + int(n / 2)\n                    else:\n                        aw = aw + int(n / 2) + 1\n                        ab = ab + int(n / 2)\n                elif n % 2 == 0:\n                    bw = bw + int(n / 2)\n                    bb = bb + int(n / 2)\n                else:\n                    bw = bw + int(n / 2)\n                    bb = bb + int(n / 2) + 1\n                break\n            if k % 2 == 0:\n                a = a + j + 1 + j + 2\n                aw = aw + int((j + 1) / 2) + int((j + 2) / 2) + 1\n                ab = ab + int((j + 1) / 2) + int((j + 2) / 2)\n            else:\n                b = b + j + 1 + j + 2\n                bw = bw + int((j + 1) / 2) + int((j + 2) / 2)\n                bb = bb + int((j + 1) / 2) + int((j + 2) / 2) + 1\n            j = j + 2\n        k = k + 1\n    print(aw, ab, bw, bb)", "for _ in range(int(input())):\n    n = int(input())\n    i = 1\n    (alice, bob) = (0, 0)\n    (aw, ab, bw, bb) = (0, 0, 0, 0)\n    while alice + bob < n:\n        cut = i\n        if alice + bob + cut > n:\n            cut = n - alice - bob\n        if i % 4 in [0, 1]:\n            alice += cut\n            if cut % 2:\n                aw += (cut + 1) // 2\n                ab += cut // 2\n            else:\n                aw += cut // 2\n                ab += cut // 2\n        else:\n            bob += cut\n            if cut % 2:\n                bw += cut // 2\n                bb += (cut + 1) // 2\n            else:\n                bw += cut // 2\n                bb += cut // 2\n        i += 1\n    print(aw, ab, bw, bb)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    swa = 0\n    sba = 0\n    swb = 0\n    sbb = 0\n    j = 1\n    while swa + sba + swb + sbb + j <= n:\n        if j % 4 == 0:\n            swa = swa + j // 2\n            sba = sba + j // 2\n        elif j % 4 == 1:\n            swa = swa + j // 2 + 1\n            sba = sba + j // 2\n        elif j % 4 == 2:\n            swb = swb + j // 2\n            sbb = sbb + j // 2\n        elif j % 4 == 3:\n            swb = swb + j // 2\n            sbb = sbb + j // 2 + 1\n        j = j + 1\n    s = swa + sba + swb + sbb\n    if j % 4 == 0 or j % 4 == 1:\n        swa = swa + (n - s) // 2 + (n - s) % 2\n        sba = sba + (n - s) // 2\n    elif j % 4 == 2 or j % 4 == 3:\n        swb = swb + (n - s) // 2\n        sbb = sbb + (n - s) // 2 + (n - s) % 2\n    print(swa, sba, swb, sbb)", "NT = int(input())\nfor T in range(NT):\n    n = int(input())\n    answer = [0, 0, 0, 0]\n    first_card = 1\n    for it in range(1, 20000):\n        who = 0 if it % 4 == 1 or it % 4 == 0 else 1\n        cnt = it\n        if n < cnt:\n            cnt = n\n        cnt_white = (cnt + first_card % 2) // 2\n        cnt_black = cnt - cnt_white\n        answer[who * 2 + 0] += cnt_white\n        answer[who * 2 + 1] += cnt_black\n        first_card += cnt\n        n -= cnt\n        if n == 0:\n            break\n    assert n == 0\n    print(*answer)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    (Aw, Ab, Bw, Bb) = (0, 0, 0, 0)\n    tot = 0\n    now = 1\n    while tot < N:\n        num = min(now, N - tot)\n        if now % 4 == 0 or now % 4 == 1:\n            if tot % 2 == 0:\n                Aw += (num + 1) // 2\n                Ab += num // 2\n            else:\n                Aw += num // 2\n                Ab += (num + 1) // 2\n        elif tot % 2 == 0:\n            Bw += (num + 1) // 2\n            Bb += num // 2\n        else:\n            Bw += num // 2\n            Bb += (num + 1) // 2\n        tot += now\n        now += 1\n    print(Aw, Ab, Bw, Bb)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    aw = 1\n    ab = 0\n    bb = 0\n    bw = 0\n    i = 2\n    while i * (i + 1) / 2 < n:\n        if (i + 2) % 4 == 0 or (i + 1) % 4 == 0:\n            if i % 2 == 0:\n                bb += i // 2\n                bw += i // 2\n            else:\n                bb += i // 2 + 1\n                bw += i // 2\n        elif i % 2 == 0:\n            ab += i // 2\n            aw += i // 2\n        else:\n            aw += i // 2 + 1\n            ab += i // 2\n        i += 1\n    if (i + 2) % 4 == 0 or (i + 1) % 4 == 0:\n        c = n - (aw + ab + bw + bb)\n        if c % 2 == 0:\n            bb += c // 2\n            bw += c // 2\n        else:\n            bb += c // 2 + 1\n            bw += c // 2\n    else:\n        c = n - (aw + ab + bw + bb)\n        if c % 2 == 0:\n            ab += c // 2\n            aw += c // 2\n        else:\n            aw += c // 2 + 1\n            ab += c // 2\n    print(aw, ab, bw, bb)", "for n in [*map(int, open(0))][1:]:\n    d = 1\n    a = [0] * 4\n    while n:\n        t = min(d, n)\n        k = t + d // 2 % 2 >> 1\n        a[d & 2] += t - k\n        a[d & 2 | 1] += k\n        n -= t\n        d += 1\n    print(*a)", "for n in [*map(int, open(0))][1:]:\n    d = 1\n    a = [0] * 4\n    while n:\n        t = min(d, n)\n        f = d & 2\n        k = t + f // 2 >> 1\n        a[f] += t - k\n        a[f | 1] += k\n        n -= t\n        d += 1\n    print(*a)", "for n in [*map(int, open(0))][1:]:\n    d = 1\n    a = [0] * 4\n    while n:\n        t = min(d, n)\n        f = d & 2\n        k = 2 * t + f >> 2\n        a[f] += t - k\n        a[f | 1] += k\n        n -= t\n        d += 1\n    print(*a)", "t = int(input())\nl = []\nfor i in range(t):\n    l.append(int(input()))\nfor n in l:\n    whiteal = 0\n    whitebob = 0\n    blackal = 0\n    blackbob = 0\n    turn = 1\n    while n > 0:\n        if turn % 4 == 1 or turn % 4 == 0:\n            w = min(turn, n) // 2\n            whiteal += w\n            blackal += min(turn, n) - w\n            n -= min(turn, n)\n        else:\n            w = min(turn, n) // 2\n            whitebob += w\n            blackbob += min(turn, n) - w\n            n -= min(turn, n)\n        turn += 1\n    print(blackal, ' ', whiteal, ' ', whitebob, ' ', blackbob)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    alice_black = 0\n    alice_white = 1\n    bob_black = 0\n    bob_white = 0\n    start_color = 0\n    i = 2\n    n -= 1\n    start_color = 1\n    ct = 0\n    flag = 1\n    while n > 0:\n        no_of_cards = min(n, i)\n        if no_of_cards % 2 == 0:\n            white_cards = no_of_cards // 2\n            black_cards = no_of_cards // 2\n            if flag == 1:\n                bob_white += white_cards\n                bob_black += black_cards\n            else:\n                alice_white += white_cards\n                alice_black += black_cards\n        else:\n            black_cards = no_of_cards // 2\n            white_cards = no_of_cards // 2\n            if start_color == 0:\n                white_cards += 1\n            else:\n                black_cards += 1\n            if flag == 1:\n                bob_white += white_cards\n                bob_black += black_cards\n            else:\n                alice_white += white_cards\n                alice_black += black_cards\n            start_color = 1 - start_color\n        ct += 1\n        if ct == 2:\n            ct = 0\n            flag = 1 - flag\n        n -= i\n        i += 1\n    print(alice_white, alice_black, bob_white, bob_black)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    alice_black = 0\n    alice_white = 1\n    bob_black = 0\n    bob_white = 0\n    start_color = 0\n    i = 2\n    n -= 1\n    start_color = 1\n    ct = 0\n    flag = 1\n    while n > 0:\n        no_of_cards = min(n, i)\n        if no_of_cards % 2 == 0:\n            white_cards = no_of_cards // 2\n            black_cards = no_of_cards // 2\n            if flag == 1:\n                bob_white += white_cards\n                bob_black += black_cards\n            else:\n                alice_white += white_cards\n                alice_black += black_cards\n        else:\n            black_cards = no_of_cards // 2\n            white_cards = no_of_cards // 2\n            if start_color == 0:\n                white_cards += 1\n            else:\n                black_cards += 1\n            if flag == 1:\n                bob_white += white_cards\n                bob_black += black_cards\n            else:\n                alice_white += white_cards\n                alice_black += black_cards\n            start_color = 1 - start_color\n        ct += 1\n        if ct == 2:\n            ct = 0\n            flag = 1 - flag\n        n -= i\n        i += 1\n    print(alice_white, alice_black, bob_white, bob_black)", "NT = int(input())\nfor T in range(NT):\n    n = int(input())\n    answer = [0, 0, 0, 0]\n    first_card = 1\n    for it in range(1, 20000):\n        who = 0 if it % 4 == 1 or it % 4 == 0 else 1\n        cnt = it\n        if n < cnt:\n            cnt = n\n        cnt_white = (cnt + first_card % 2) // 2\n        cnt_black = cnt - cnt_white\n        answer[who * 2 + 0] += cnt_white\n        answer[who * 2 + 1] += cnt_black\n        first_card += cnt\n        n -= cnt\n        if n == 0:\n            break\n    assert n == 0\n    print(*answer)", "for n in [*map(int, open(0))][1:]:\n    d = 1\n    a = [0] * 4\n    while n:\n        t = min(d, n)\n        k = t + d // 2 % 2 >> 1\n        a[d & 2] += t - k\n        a[d & 2 | 1] += k\n        n -= t\n        d += 1\n    print(*a)", "import math\nt = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    k = 0\n    for i in range(1, int(math.sqrt(2 * n)) + 2):\n        if i * (i + 1) >= 2 * n:\n            k = i\n            break\n    if k * (k + 1) > 2 * n:\n        k = k - 1\n    a1 = 1\n    a2 = 0\n    b1 = 0\n    b2 = 0\n    turn = 0\n    for i in range(2, k + 1):\n        if turn == 0 or turn == 1:\n            b1 += math.ceil(i / 2)\n            b2 += math.floor(i / 2)\n            turn += 1\n        elif turn == 2 or turn == 3:\n            a1 += math.ceil(i / 2)\n            a2 += math.floor(i / 2)\n            turn += 1\n        if turn == 4:\n            turn = 0\n    if 2 * n - k * (k + 1) > 0:\n        if turn == 0 or turn == 1:\n            b1 += math.ceil((n - k * (k + 1) / 2) / 2)\n            b2 += math.floor((n - k * (k + 1) / 2) / 2)\n        else:\n            a1 += math.ceil((n - k * (k + 1) / 2) / 2)\n            a2 += math.floor((n - k * (k + 1) / 2) / 2)\n    print(str(int(a1)) + ' ' + str(int(a2)) + ' ' + str(int(b2)) + ' ' + str(int(b1)))", "for n in [*map(int, open(0))][1:]:\n    d = 1\n    a = [0] * 4\n    while n:\n        t = min(d, n)\n        f = d & 2\n        k = t + f // 2 >> 1\n        a[f] += t - k\n        a[f | 1] += k\n        n -= t\n        d += 1\n    print(*a)", "for n in [*map(int, open(0))][1:]:\n    d = 1\n    a = [0] * 4\n    while n:\n        t = min(d, n)\n        k = (t + d // 2 % 2) // 2\n        a[d & 2] += t - k\n        a[d & 2 | 1] += k\n        n -= t\n        d += 1\n    print(*a)", "from itertools import cycle\nfor _ in range(int(input())):\n    n = int(input())\n    deal: int = 1\n    alice_w: int = 0\n    alice_b: int = 0\n    bob_w: int = 0\n    bob_b: int = 0\n    cy = cycle((0, 1, 2, 3))\n    color = False\n    if n >= deal:\n        n -= deal\n        alice_w += 1\n        deal += 1\n    while n > 0:\n        c = next(cy)\n        if deal % 2 == 0:\n            color = not color\n        deals = 0\n        if n >= deal:\n            deals = deal\n        else:\n            deals = n\n        if c in (0, 1):\n            bob_w += int(deals // 2)\n            bob_b += int(deals // 2)\n            if deals % 2 != 0:\n                if color:\n                    bob_b += 1\n                else:\n                    bob_w += 1\n        if c in (2, 3):\n            alice_w += int(deals // 2)\n            alice_b += int(deals // 2)\n            if deals % 2 != 0:\n                if color:\n                    alice_b += 1\n                else:\n                    alice_w += 1\n        n -= deal\n        deal += 1\n    print(f'{alice_w} {alice_b} {bob_w} {bob_b}')", "for i in range(int(input())):\n    n = int(input())\n    turn = 0\n    aw = 0\n    bw = 0\n    ab = 0\n    bb = 0\n    s = 0\n    for i in range(1, 10 ** 18):\n        turn = 1 if i % 4 in (2, 3) else 0\n        T = min(i, n)\n        w = 0\n        w += (s + T) // 2 - s // 2\n        b = 0\n        b += T - w\n        n -= T\n        if turn == 0:\n            aw += w\n            ab += b\n        else:\n            bw += w\n            bb += b\n        s += T\n        if n == 0:\n            break\n    print(ab, aw, bb, bw)", "for n in [*map(int, open(0))][1:]:\n    i = d = 1\n    a = [0] * 4\n    while i <= n:\n        t = min(d, n - i + 1)\n        k = (i + t) // 2 - i // 2\n        a[d & 2] += k\n        a[d & 2 | 1] += t - k\n        i += d\n        d += 1\n    print(*a)", "for _ in range(int(input())):\n    n = int(input())\n    N = n\n    (a, b) = ([0, 0], [0, 0])\n    i = 1\n    while n > 0:\n        if i == 1 or i // 2 % 2 == 0:\n            if min(i, n) % 2 == 0:\n                a[0] += min(n, i) // 2\n                a[1] += min(n, i) // 2\n            else:\n                a[0] += min(n, i) // 2 + 1 - (N - n) % 2\n                a[1] += min(n, i) // 2 + (N - n) % 2\n        elif min(i, n) % 2 == 0:\n            b[0] += min(n, i) // 2\n            b[1] += min(n, i) // 2\n        else:\n            b[0] += min(n, i) // 2 + 1 - (N - n) % 2\n            b[1] += min(n, i) // 2 + (N - n) % 2\n        n -= i\n        i += 1\n    print(*a, *b)", "for _ in range(int(input())):\n    n = int(input())\n    ok = 0\n    a = [0, 0]\n    b = [0, 0]\n    i = 1\n    while ok < n:\n        mn = min(i, n - ok)\n        if i // 2 % 2 == 0:\n            a[0] += (ok + mn + 1) // 2 - (ok + 1) // 2\n            a[1] += (ok + mn) // 2 - ok // 2\n        else:\n            b[0] += (ok + mn + 1) // 2 - (ok + 1) // 2\n            b[1] += (ok + mn) // 2 - ok // 2\n        ok += mn\n        i += 1\n    print(a[0], a[1], b[0], b[1])", "t = int(input())\nrjesenja = []\nfor case in range(t):\n    n = int(input())\n    a = [0, 0]\n    b = [0, 0]\n    i = 1\n    j = 0.5\n    while True:\n        cur = int(j)\n        if cur % 2 == 0:\n            a[0] += i // 2\n            a[1] += i // 2\n            a[(sum(a) + sum(b)) % 2] += i % 2\n        else:\n            b[0] += i // 2\n            b[1] += i // 2\n            b[(sum(a) + sum(b)) % 2] += i % 2\n        if sum(a) + sum(b) >= n:\n            dif = sum(a) + sum(b) - n\n            if cur % 2 == 0:\n                a[(sum(a) + sum(b)) % 2 - 1] -= dif % 2\n                a[0] -= dif // 2\n                a[1] -= dif // 2\n            else:\n                b[(sum(a) + sum(b)) % 2 - 1] -= dif % 2\n                b[0] -= dif // 2\n                b[1] -= dif // 2\n            break\n        i += 1\n        j += 0.5\n    rjesenja.append((a, b))\nfor r in rjesenja:\n    print(r[0][0], r[0][1], r[1][0], r[1][1])", "for _ in range(int(input())):\n    cards = int(input())\n    f = 'AABB' * cards\n    w_A = 0\n    b_A = 0\n    w_B = 0\n    b_B = 0\n    i = 0\n    while cards >= i:\n        if f[i] == 'A':\n            w_A = w_A + i // 2 + i % 2\n            b_A = b_A + i // 2\n        else:\n            w_B = w_B + i // 2\n            b_B = b_B + i // 2 + i % 2\n        cards = cards - i\n        i += 1\n    if f[i] == 'A':\n        w_A = w_A + cards // 2 + cards % 2\n        b_A = b_A + cards // 2\n    else:\n        w_B = w_B + cards // 2\n        b_B = b_B + cards // 2 + cards % 2\n    print(w_A, b_A, w_B, b_B)", "for _ in range(int(input())):\n    n = int(input())\n    x = 0\n    white = [0, 0]\n    black = [0, 0]\n    i = 1\n    while n:\n        if i // 2 % 2:\n            j = 0\n        else:\n            j = 1\n        if not min(n, i) % 2:\n            white[j] += min(n, i) // 2\n            black[j] += min(n, i) // 2\n        elif x % 2:\n            white[j] += min(n, i) // 2\n            black[j] += min(n, i) // 2 + 1\n        else:\n            white[j] += min(n, i) // 2 + 1\n            black[j] += min(n, i) // 2\n        x += min(n, i)\n        n -= min(n, i)\n        i += 1\n    print(white[1], black[1], white[0], black[0])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    alw = 1\n    alb = 0\n    bobw = 0\n    bobb = 0\n    A = []\n    n = n - 1\n    for j in range(10000):\n        A.append(j + 1)\n    for j in range(1, 1000):\n        if j % 2 == 1:\n            if n >= A[2 * j - 1]:\n                bobw += A[2 * j - 1] // 2\n                bobb += A[2 * j - 1] // 2 + A[2 * j - 1] % 2\n                n -= A[2 * j - 1]\n                if n >= A[2 * j]:\n                    bobw += A[2 * j] // 2\n                    bobb += A[2 * j] // 2 + A[2 * j] % 2\n                    n -= A[2 * j]\n                else:\n                    bobb += n // 2 + n % 2\n                    bobw += n // 2\n                    break\n            else:\n                bobb += n // 2 + n % 2\n                bobw += n // 2\n                break\n        elif n >= A[2 * j - 1]:\n            alw += A[2 * j - 1] // 2 + A[2 * j - 1] % 2\n            alb += A[2 * j - 1] // 2\n            n -= A[2 * j - 1]\n            if n >= A[2 * j]:\n                alw += A[2 * j] // 2 + A[2 * j] % 2\n                alb += A[2 * j] // 2\n                n -= A[2 * j]\n            else:\n                alw += n // 2 + n % 2\n                alb += n // 2\n                break\n        else:\n            alw += n // 2 + n % 2\n            alb += n // 2\n            break\n    print(f'{alw} {alb} {bobw} {bobb}')", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    k = 1\n    while n >= k * (k + 1) / 2:\n        k += 1\n    k -= 1\n    a = [j if j % 4 == 0 or (j + 3) % 4 == 0 else 0 for j in range(1, k + 1)]\n    (aw, ab, bw, bb) = (0, 0, 0, 0)\n    for j in a:\n        aw += math.ceil(j / 2)\n        ab += math.floor(j / 2)\n    b = [j if (j + 1) % 4 == 0 or (j + 2) % 4 == 0 else 0 for j in range(1, k + 1)]\n    for j in b:\n        bb += math.ceil(j / 2)\n        bw += math.floor(j / 2)\n    if k % 4 == 0 or (k + 1) % 4 == 0:\n        aw += math.ceil((n - k * (k + 1) // 2) / 2)\n        ab += math.floor((n - k * (k + 1) // 2) / 2)\n    else:\n        bb += math.ceil((n - k * (k + 1) // 2) / 2)\n        bw += math.floor((n - k * (k + 1) // 2) / 2)\n    print(aw, ab, bw, bb)", "def cards(n):\n    move = 1\n    (aw, ab, bw, bb) = (0, 0, 0, 0)\n    i = 1\n    cur_c = 1\n    while aw + ab + bw + bb < n:\n        move %= 4\n        if move == 2 or move == 3:\n            if i % 2 == 0:\n                bw += i // 2\n                bb += i // 2\n            elif cur_c == 1:\n                bw += i // 2 + 1\n                bb += i // 2\n                cur_c = 0\n            else:\n                bb += i // 2 + 1\n                bw += i // 2\n                cur_c = 1\n            move += 1\n        else:\n            if i % 2 == 0:\n                aw += i // 2\n                ab += i // 2\n            elif cur_c == 1:\n                aw += i // 2 + 1\n                ab += i // 2\n                cur_c = 0\n            else:\n                ab += i // 2 + 1\n                aw += i // 2\n                cur_c = 1\n            move += 1\n        i += 1\n        if aw + ab + bw + bb + i >= n:\n            i = n - (aw + ab + bw + bb)\n    return (aw, ab, bw, bb)\nn = int(input())\nfor i in range(n):\n    t = int(input())\n    print(cards(t)[0], cards(t)[1], cards(t)[2], cards(t)[3])"]