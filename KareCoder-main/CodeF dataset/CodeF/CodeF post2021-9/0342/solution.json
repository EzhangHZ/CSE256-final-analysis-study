["import sys\n\ndef solve():\n    s = sys.stdin.readline().strip()\n    w = set()\n    for i in range(len(s)):\n        c = s[i]\n        if c in w:\n            if c != s[0]:\n                print('NO')\n                return\n            for j in range(i + 1, len(s)):\n                if s[j] != s[j - i]:\n                    print('NO')\n                    return\n            print('YES')\n            return\n        w.add(c)\n    print('YES')\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "import sys\nfrom sys import stdin\ntt = int(stdin.readline())\nANS = []\nfor loop in range(tt):\n    s = list(stdin.readline()[:-1])\n    n = len(s)\n    st = set()\n    lp = None\n    for i in range(n):\n        if s[i] in st:\n            lp = i\n            break\n        st.add(s[i])\n    ans = 'YES'\n    if lp == None:\n        ANS.append(ans)\n        continue\n    for i in range(n):\n        if s[i % lp] != s[i]:\n            ans = 'NO'\n    ANS.append(ans)\nprint('\\n'.join(ANS))", "import sys\ninput = sys.stdin.readline\nn = int(input())\nfor _ in range(n):\n    s = input()[:-1]\n    a = len(s)\n    b = len(set(s))\n    if b == 1 or a == b:\n        print('YES')\n    else:\n        for i in range(1, a):\n            if s[i] in s[:i]:\n                w = (s[:i] * a)[:a]\n                if s == w:\n                    print('YES')\n                else:\n                    print('NO')\n                break", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    s = input().strip()\n    n = len(s)\n    cnt = {}\n    for i in range(n):\n        c = s[i]\n        if c not in cnt:\n            cnt[c] = 0\n        cnt[c] += 1\n    if max(cnt.values()) == 1 or len(cnt) == 1:\n        return 'YES'\n    else:\n        cnt = {}\n        for i in range(n):\n            c = s[i]\n            if c not in cnt:\n                cnt[c] = 0\n            cnt[c] += 1\n            if cnt[c] == 2:\n                pattern = s[:i]\n                for j in range(i, n):\n                    if pattern[j % i] != s[j]:\n                        return 'NO'\n                return 'YES'\nfor _ in range(int(input())):\n    print(solve())", "from collections import deque\nimport sys\ninput = sys.stdin.readline\nfor _ in range(int(input().rstrip())):\n    s = input().rstrip()\n    i = 0\n    answer = 'YES'\n    pattern = deque([])\n    while i < len(s) and s[i] not in pattern:\n        pattern.append(s[i])\n        i += 1\n    if i < len(s) and s[i] != pattern[0]:\n        answer = 'NO'\n    else:\n        while i < len(s):\n            if s[i] != pattern[0]:\n                answer = 'NO'\n                break\n            else:\n                pattern.rotate(-1)\n            i += 1\n    print(answer)", "from sys import stdin\ninput = stdin.readline\n\ndef ii():\n    return int(input())\n\ndef li():\n    return list(map(int, input().split()))\nfor _ in range(ii()):\n    s = input().strip()\n    n = len(s)\n    cdn = 1\n    ts = set(list(s))\n    k = len(ts)\n    for i in range(k):\n        for j in range(i, n, k):\n            if s[i] != s[j]:\n                cdn = 0\n    if cdn == 1:\n        print('YES')\n    else:\n        print('NO')", "tc = int(input())\nfor _ in range(tc):\n    s = input()\n    l = len(set(s))\n    for i in range(l, len(s)):\n        if s[i] != s[i - l]:\n            print('NO')\n            break\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    s = input()\n    l = len(set(s))\n    for i in range(l, len(s)):\n        if s[i] != s[i - l]:\n            print('NO')\n            break\n    else:\n        print('YES')", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    l = len(set(s))\n    for i in range(l, n):\n        if s[i] != s[i - l]:\n            print('NO')\n            break\n    else:\n        print('YES')", "t = int(input())\nfor caso in range(t):\n    s = input()\n    c = len(set(s))\n    for i in range(c, len(s)):\n        if s[i] != s[i - c]:\n            print('NO')\n            break\n    else:\n        print('YES')", "def solve(s):\n    n = len(s)\n    k = len(set(s))\n    for i in range(k, n):\n        if s[i] != s[i - k]:\n            return 'NO'\n    return 'YES'\nt = int(input())\nfor _ in range(t):\n    s = input()\n    print(solve(s))", "for _ in range(int(input())):\n    s = input()\n    t = len(set(s))\n    ans = True\n    for i in range(len(s) - t):\n        if s[i] == s[i + t]:\n            continue\n        else:\n            ans = False\n    print('YES' if ans else 'NO')", "for _ in range(int(input())):\n    s = input()\n    k = len(set(s))\n    for i in range(k, len(s)):\n        if s[i] != s[i - k]:\n            print('NO')\n            break\n    else:\n        print('YES')", "import math\nfor i in range(int(input())):\n    s = input()\n    a = set(s)\n    b = len(a)\n    for j in range(b, len(s)):\n        if s[j] != s[j - b]:\n            print('NO')\n            break\n    else:\n        print('YES')", "def solve(s):\n    st = set(s)\n    a = len(st)\n    f = 1\n    for i in range(len(s)):\n        if s[i] != s[i % a]:\n            f = 0\n    if not f:\n        return 'NO'\n    else:\n        return 'YES'\nfor i in range(int(input())):\n    s = input()\n    print(solve(s))", "def main():\n    for _ in range(int(input())):\n        string = input()\n        n = len(string)\n        mp = {}\n        flag = True\n        for i in string:\n            mp[i] = mp.get(i, 0) + 1\n        count = len(mp)\n        for i in range(0, n - count):\n            if string[i] != string[i + count]:\n                flag = False\n        if flag:\n            print('YES')\n        else:\n            print('NO')\nmain()", "for _ in range(int(input())):\n    S = input()\n    L = []\n    for i in S:\n        if i in L:\n            break\n        else:\n            L.append(i)\n    N = len(L)\n    i = 0\n    for c in S:\n        if c != L[i]:\n            print('NO')\n            break\n        else:\n            i += 1\n            if i == N:\n                i = 0\n    else:\n        print('YES')", "t = int(input())\nwhile t:\n    s = input()\n    st = set()\n    flag = True\n    k = 0\n    for i in s:\n        if i not in st:\n            st.add(i)\n            k += 1\n        else:\n            break\n    for i in range(k, len(s)):\n        if s[i] != s[i - k]:\n            flag = False\n    if flag:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "t = int(input())\nfor i in range(t):\n    vis = set()\n    dis = 0\n    s = input()\n    n = len(s)\n    is_balanced = True\n    for c in s:\n        if c not in vis:\n            dis += 1\n            vis.add(c)\n    for i in range(dis, n):\n        if s[i] != s[i - dis]:\n            is_balanced = False\n    if is_balanced:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    triggered = False\n    a = input()\n    lst = list(a)\n    n = len(set(a))\n    for k in range(len(lst)):\n        if n + k >= len(lst):\n            break\n        elif lst[k] != lst[k + n]:\n            triggered = True\n            break\n    if triggered == True:\n        print('NO')\n    if triggered == False:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    s = input()\n    m = set(s)\n    k = len(m)\n    flag = True\n    for i in range(len(s)):\n        if i + k < len(s):\n            if s[i] != s[i + k]:\n                flag = False\n    if flag == False:\n        print('NO')\n    else:\n        print('YES')", "def main():\n    t = int(input())\n    for k in range(t):\n        s = input()\n        (freq, ans, pos, count) = ({}, True, len(s), 0)\n        for i in range(len(s)):\n            if freq.get(s[i]) is None:\n                freq[s[i]] = 1\n            else:\n                freq[s[i]] += 1\n        distinct_char = len(freq)\n        for i in range(distinct_char, len(s)):\n            if s[i] != s[count]:\n                ans = False\n                break\n            count += 1\n        if len(freq) == 1:\n            ans = True\n        if ans:\n            print('YES')\n        else:\n            print('NO')\nmain()", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    l = len(set(s))\n    for i in range(l, n):\n        if s[i] != s[i - l]:\n            print('NO')\n            break\n    else:\n        print('YES')", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    se = set(list(s))\n    if len(se) == 1 or len(se) == n:\n        print('YES')\n    else:\n        f = True\n        for i in range(1, n):\n            if s[i - 1] == s[i]:\n                print('NO')\n                f = False\n                break\n        if f:\n            nse = len(se)\n            r = s[:nse]\n            q = n // nse\n            rem = n % nse\n            if r * q + r[:rem] == s:\n                print('YES')\n            else:\n                print('NO')", "t = int(input())\nfor _ in range(t):\n    s = input()\n    l = len(s)\n    uniq = len(set(s))\n    if uniq == 1 or uniq == l:\n        print('YES')\n    elif len(s[:uniq]) != uniq:\n        print('NO')\n    else:\n        flag = 'YES'\n        for i in range(l - uniq):\n            if s[i] == s[i + uniq]:\n                continue\n            else:\n                flag = 'NO'\n                break\n        print(flag)", "def w(c):\n    return ord(c) - 97\nfor _ in range(int(input())):\n    s = input()\n    f = True\n    m = [False] * 26\n    p = 0\n    for i in range(len(s)):\n        if m[w(s[i])]:\n            if p:\n                if s[i] != s[i - p]:\n                    f = False\n                    break\n            elif s[i] == s[0]:\n                p = i\n            else:\n                f = False\n                break\n        else:\n            if p:\n                f = False\n                break\n            m[w(s[i])] = True\n    print('YES' if f else 'NO')", "t = int(input(''))\n\ndef soltion(s):\n    d = {}\n    n = len(s)\n    i = 0\n    while i < n:\n        if s[i] not in d:\n            d[s[i]] = 1\n            i = i + 1\n        else:\n            break\n    ok = True\n    for j in range(i, n):\n        if s[j] != s[j - i]:\n            ok = False\n    if ok:\n        return 'YES'\n    else:\n        return 'NO'\nfor i in range(t):\n    s = input('')\n    print(soltion(s))", "for _ in range(int(input())):\n    s = str(input())\n    arr = []\n    ans = []\n    for i in s:\n        if i not in arr:\n            arr.append(i)\n    n = len(arr)\n    for i in range(len(s) - n):\n        if s[i] != s[i + n]:\n            ans.append('NO')\n        else:\n            ans.append('YES')\n    x = 'NO'\n    if x in ans:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nwhile t > 0:\n    s = input()\n    n = len(s)\n    mp = dict()\n    idx = n\n    flag = 1\n    for i in range(n):\n        if s[i] in mp:\n            mp[s[i]] += 1\n        else:\n            mp[s[i]] = 1\n        if mp[s[i]] > 1:\n            idx = i\n            break\n    for i in range(i, n):\n        if s[i] != s[i % idx]:\n            flag = 0\n    if flag:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "def solution(content: str):\n    char_dict = dict()\n    for char in content:\n        char_dict[char] = char_dict.get(char, 0) + 1\n    n = len(char_dict)\n    if n == 1:\n        print('YES')\n        return\n    char_list = list(content[:n])\n    if len(set(char_list)) < n:\n        print('NO')\n        return\n    for (i, data) in enumerate(content):\n        if data != char_list[i % n]:\n            print('NO')\n            return\n    print('YES')\n    return\nt = int(input())\nfor i in range(t):\n    content = input()\n    solution(content)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    n = len(s)\n    if n == 1:\n        print('YES')\n        continue\n    cur = 0\n    l = []\n    l.append(s[0])\n    ans = True\n    rep = False\n    for i in range(1, n):\n        if not rep:\n            if s[i] in l:\n                rep = True\n            else:\n                l.append(s[i])\n        if rep:\n            if s[i] != s[cur]:\n                ans = False\n                break\n            else:\n                cur += 1\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nfor i in range(n):\n    str1 = input()\n    set_char = set(str1)\n    req = len(set_char)\n    prev = dict()\n    truth = True\n    ind = 0\n    for i1 in str1:\n        if i1 in prev and ind - prev[i1] != req:\n            truth = False\n            break\n        prev[i1] = ind\n        ind += 1\n    print(truth and 'YES' or 'NO')", "def get_ans():\n    s = input()\n    st = set()\n    for c in s:\n        st.add(c)\n    cnt = len(st)\n    mp = {}\n    for i in range(len(s)):\n        c = s[i]\n        if c in mp and i - mp[c] + 1 <= cnt:\n            print('NO')\n            return\n        mp[c] = i\n    print('YES')\nt = int(input())\nfor i in range(t):\n    get_ans()", "for j in range(0, int(input())):\n    s = input()\n    s1 = set(s)\n    n = len(s1)\n    if s.count(s[0]) == len(s):\n        print('YES')\n    else:\n        ans = 'YES'\n        for i in range(0, len(s) - 1):\n            if s[i] == s[i + 1]:\n                ans = 'NO'\n                break\n            if i + n < len(s):\n                if s[i] != s[i + n]:\n                    ans = 'NO'\n                    break\n        print(ans)", "from math import ceil\n\ndef main():\n    s = input()\n    l = len(s)\n    if len(set(s)) == 1:\n        return 'YES'\n    if len(set(s)) == l:\n        return 'YES'\n    f = -1\n    for i in range(1, l):\n        if s[i] == s[0]:\n            f = i\n            break\n    if f == -1:\n        return 'NO'\n    if len(set(s[:f])) != f:\n        return 'NO'\n    atom = s[:f]\n    times = ceil(l / len(atom))\n    big = atom * times\n    if big[:l] != s:\n        return 'NO'\n    return 'YES'\n    i = 1\n    left = 0\n    right = f\n    while right < l:\n        if len(set(s[left:right])) != f:\n            return 'NO'\n        left += f\n        right += f\n    if len(set(s[left:])) != len(s[left:]):\n        return 'NO'\n    return 'YES'\nfor _ in range(int(input())):\n    print(main())", "t = int(input())\nfor _ in range(t):\n    s = input()\n    sSet = set()\n    for i in range(len(s)):\n        sSet.add(s[i])\n    ok = 1\n    for i in range(len(s)):\n        if s[i] != s[i % len(sSet)]:\n            ok = 0\n    if ok:\n        print('YES')\n    else:\n        print('NO')", "from collections import Counter, deque\nfrom collections import OrderedDict\nimport math\nfrom random import randint\nfrom bisect import bisect, bisect_left\nimport sys\nimport re\nMOD = 10 ** 9 + 7\nMAX = -sys.maxsize\nMIN = sys.maxsize\n\nclass get:\n\n    def int():\n        return list(map(int, input().split()))\n\n    def str():\n        return input().split()\n\n    def float():\n        return list(map(float, input().split()))\n\n    def map():\n        return map(int, input().split())\n\ndef sqrt(x):\n    return int(math.sqrt(x)) + 1\n\ndef gcd(*args):\n    result = args[0]\n    for item in args:\n        result = math.gcd(result, item)\n    return result\n\ndef LCM(a, b):\n    return a * b // math.gcd(a, b)\n\ndef isPrime(n):\n    if n == 1:\n        return False\n    for i in range(2, sqrt(n)):\n        if n % i == 0:\n            return False\n    return True\n\ndef solve():\n    s = input()\n    x = set()\n    j = 0\n    for i in range(len(s)):\n        if s[i] in x:\n            j = i\n            break\n        x.add(s[i])\n    for i in range(0, len(s) - j):\n        if s[i] != s[i + j]:\n            print('NO')\n            return\n    print('YES')\nt = int(input())\nfor tt in range(t):\n    solve()", "for _ in range(int(input())):\n    co = 'YES'\n    s = input()\n    sk = s[0]\n    t = 0\n    n = len(s)\n    for i in range(1, n):\n        if s[i] not in sk:\n            sk += s[i]\n        else:\n            t = i\n            break\n    q = len(sk)\n    for i in range(t, n, q):\n        if s[i:i + q] == sk:\n            continue\n        elif s[i:i + q] == sk[:n - i]:\n            continue\n        else:\n            co = 'NO'\n            break\n    print(co)", "t = int(input())\nwhile t > 0:\n    s = input()\n    n = len(s)\n    l = set()\n    l.add(s[0])\n    if n < 2:\n        print('YES')\n    else:\n        increasing = ord(s[1]) - ord(s[0])\n        if increasing == 0:\n            for i in range(n):\n                if s[i] != s[0]:\n                    print('NO')\n                    break\n            else:\n                print('YES')\n        else:\n            for i in range(1, n):\n                if s[i] in l:\n                    if s[i] == s[0]:\n                        for j in range(i, n):\n                            if s[j] != s[j % i]:\n                                print('NO')\n                                break\n                        else:\n                            print('YES')\n                        break\n                    else:\n                        print('NO')\n                        break\n                else:\n                    l.add(s[i])\n            else:\n                print('YES')\n    t = t - 1", "n = int(input())\nfor i in range(0, n):\n    s = input()\n    ls = list(s)\n    n = len(set(s))\n    flag = 0\n    for i in range(len(ls)):\n        if i + n >= len(ls):\n            break\n        elif ls[i] != ls[i + n]:\n            flag = 1\n            break\n    if flag:\n        print('NO')\n    else:\n        print('YES')", "from collections import defaultdict\nt = int(input())\nwhile t > 0:\n    a = str(input())\n    prev = defaultdict()\n    for ch in a:\n        prev[ch] = -1\n    diff = len(prev)\n    if len(prev) == 1 or len(prev) == len(a):\n        print('YES')\n        t -= 1\n        continue\n    f = 0\n    for i in range(len(a)):\n        if prev[a[i]] != -1:\n            if i - prev[a[i]] == diff:\n                prev[a[i]] = i\n                f = 1\n            else:\n                f = 0\n                print('NO')\n                break\n        else:\n            prev[a[i]] = i\n    if f == 1:\n        print('YES')\n    t -= 1", "for _ in range(int(input())):\n    l = input()\n    d = {}\n    x = 0\n    for i in range(len(l)):\n        if l[i] not in d:\n            d[l[i]] = i\n            x = x + 1\n    d2 = {}\n    for i in range(len(l)):\n        if l[i] not in d2:\n            d2[l[i]] = i\n        elif i - d2[l[i]] >= x:\n            d2[l[i]] = i\n        else:\n            print('NO')\n            break\n    else:\n        print('YES')", "for _ in range(int(input())):\n    s = input()\n    count = 1\n    t = set()\n    for i in s:\n        t.add(i)\n    for i in range(len(s)):\n        if s[i] != s[i % len(t)]:\n            count = 0\n    if count:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    s = input()\n    hsh = {}\n    for c in s:\n        if c not in hsh:\n            hsh[c] = -1\n    (n, h) = (len(s), len(hsh))\n    for i in range(h):\n        if hsh[s[i]] > -1:\n            print('NO')\n            break\n        hsh[s[i]] = i\n    else:\n        for i in range(h, n):\n            if hsh[s[i]] != i % h:\n                print('NO')\n                break\n        else:\n            print('YES')", "for _ in range(int(input())):\n    s = input()\n    c = len(set(s))\n    ans = True\n    for i in range(c):\n        if len(set(s[i::c])) != 1:\n            ans = False\n            break\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    s = str(input())\n    sz = len(set(list(s)))\n    isPerfect = True\n    lind = {}\n    for i in range(len(s)):\n        if s[i] not in lind:\n            lind[s[i]] = i\n        else:\n            if i - lind[s[i]] < sz:\n                isPerfect = False\n                break\n            lind[s[i]] = i\n    if isPerfect:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    s = input()\n    k = len(set(s))\n    ans = True\n    sub = []\n    for x in s:\n        if len(sub) == k:\n            sub.pop(0)\n        if x in sub:\n            ans = False\n        sub += (x,)\n    print('YES' if ans else 'NO')", "for _ in range(int(input())):\n    s = input()\n    n = len(set(s))\n    print('YES' if all((len(set(s[i::n])) == 1 for i in range(n))) else 'NO')", "t = eval(input())\nfor i in range(t):\n    s = input()\n    xh = ''\n    for i in range(len(s)):\n        if s[i] not in xh:\n            xh += s[i]\n        else:\n            break\n    ans = ''\n    while len(s) - len(ans) >= len(xh):\n        ans += xh\n    ans += xh[:len(s) - len(ans)]\n    if ans == s:\n        print('YES')\n    else:\n        print('NO')", "def verdict(s):\n    _len = len(set(s))\n    for i in range(len(s) - _len + 1):\n        if len(set(s[i:i + _len])) != _len:\n            return 'NO'\n    else:\n        return 'YES'\nt = int(input())\nfor _ in range(t):\n    s = input()\n    print(verdict(s))", "import sys\nimport string\nfrom decimal import Decimal\nfrom math import log, ceil\n\ndef inp():\n    return int(input())\n\ndef inplist():\n    return list(map(int, input().split()))\n\ndef inpstrlist():\n    s = input()\n    return list(s[:len(s)])\n\ndef invr():\n    return map(int, input().split())\nt = int(input())\nfor _ in range(t):\n    s = input()\n    n = len(s)\n    unique = sorted(list(set(s)))\n    ln = len(unique)\n    if ln == 1:\n        print('YES')\n        continue\n    x = s[:ln]\n    temp = x * ceil(n / ln)\n    temp = temp[:n]\n    print('YES' if temp == s else 'NO')", "def ss(s):\n    s = list(s)\n    n = len(set(s))\n    t = 0\n    i = 0\n    j = 0\n    d = {}\n    while i < len(s):\n        if s[i] in d and d[s[i]] > 0:\n            d[s[i]] += 1\n            while j < i and d[s[i]] > 1:\n                d[s[j]] -= 1\n                if d[s[j]] == 0:\n                    t -= 1\n                j += 1\n            if n - t > 0:\n                return 'NO'\n            i += 1\n        else:\n            d[s[i]] = 1\n            t += 1\n            i += 1\n    return 'YES'\nfor _ in range(int(input())):\n    s = str(input())\n    print(ss(s))", "from collections import Counter\n\ndef value(string):\n    counter = Counter(string)\n    for i in counter:\n        if counter[i] >= 2:\n            temp = string.split(i)\n            temp = temp[1:-1]\n            temp = [len(set(item)) for item in temp]\n            if min(temp) < len(counter) - 1:\n                return 'NO'\n    return 'YES'\n\ndef main():\n    n = int(input())\n    data = []\n    for i in range(n):\n        string = input()\n        data.append(string)\n    for string in data:\n        print(value(string))\nmain()", "def main():\n    t = int(input())\n    for k in range(t):\n        s = input()\n        (freq, ans, pos, count) = ({}, True, len(s), 0)\n        for i in range(len(s)):\n            if freq.get(s[i]) is None:\n                freq[s[i]] = 1\n            else:\n                freq[s[i]] += 1\n        distinct_char = len(freq)\n        for i in range(distinct_char, len(s)):\n            if s[i] != s[count]:\n                ans = False\n                break\n            count += 1\n        if len(freq) == 1:\n            ans = True\n        if ans:\n            print('YES')\n        else:\n            print('NO')\nmain()", "for t in range(int(input())):\n    s = input()\n    s1 = s[0]\n    n = len(s)\n    d = {}\n    a = s[0]\n    c = n\n    ch = True\n    for i in s:\n        d[i] = False\n    d[a] = True\n    for i in range(1, n):\n        if s[i] != a:\n            if d[s[i]]:\n                ch = False\n                break\n            d[s[i]] = True\n            s1 += s[i]\n        else:\n            c = i\n            break\n    x = n // c + 1\n    s1 *= x\n    if s != s1[:n]:\n        ch = False\n    if ch:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t > 0:\n    s = input()\n    d = {}\n    for i in s:\n        if i in d.keys():\n            d[i] += 1\n        else:\n            d[i] = 1\n    l = list(d.keys())\n    ok = 1\n    for i in range(len(s)):\n        if s[i] != s[i % len(l)]:\n            ok = 0\n            break\n    if ok == 0:\n        print('NO')\n    else:\n        print('YES')\n    t -= 1", "t = int(input())\nwhile t > 0:\n    s = input()\n    d = {}\n    for i in s:\n        if i in d.keys():\n            d[i] += 1\n        else:\n            d[i] = 1\n    l = list(d.keys())\n    ok = 1\n    for i in range(len(s)):\n        if s[i] != s[i % len(l)]:\n            ok = 0\n            break\n    if ok == 0:\n        print('NO')\n    else:\n        print('YES')\n    t -= 1", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    a = set()\n    b = ''\n    for i in s:\n        if i not in a:\n            a.add(i)\n            b += i\n        else:\n            break\n    m = len(b)\n    flag = True\n    for i in range(n):\n        if s[i] != b[i % m]:\n            flag = False\n            break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    s = input()\n    alphabet = []\n    for j in range(len(s)):\n        if s[j] not in alphabet:\n            alphabet.append(s[j])\n    judge = 1\n    str_a = s[0:len(alphabet)]\n    for k in alphabet:\n        if k not in str_a:\n            judge = judge * 0\n    balanced_str = str_a * (len(s) // len(alphabet)) + str_a[0:len(s) % len(alphabet)]\n    if balanced_str != s:\n        judge = judge * 0\n    if judge == 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    s = input()\n    l = len(s)\n    first = s[0]\n    if l == 1 or s.count(first) == l:\n        print('YES')\n    elif s.count(first) > 1:\n        j = 1\n        strr = ''\n        strr += s[0]\n        num = [0] * 26\n        num[ord(s[0]) - 97] += 1\n        bad = 0\n        while s[j] != s[0] and bad == 0:\n            if num[ord(s[j]) - 97] == 0:\n                num[ord(s[j]) - 97] += 1\n                strr += s[j]\n            else:\n                bad = 1\n            j += 1\n        if bad == 1:\n            print('NO')\n        else:\n            uno = l // len(strr)\n            dos = l % len(strr)\n            if s == strr * uno + strr[:dos]:\n                print('YES')\n            else:\n                print('NO')\n    else:\n        num = [0] * 26\n        num[ord(s[0]) - 97] += 1\n        bad = 0\n        j = 1\n        while j < l and bad == 0:\n            if num[ord(s[j]) - 97] == 0:\n                num[ord(s[j]) - 97] += 1\n            else:\n                bad = 1\n            j += 1\n        if bad == 1:\n            print('NO')\n        else:\n            print('YES')", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    d = {}\n    for i in s:\n        if i not in d.keys():\n            d[i] = 1\n        else:\n            d[i] += 1\n    keys = list(d.keys())\n    l = len(keys)\n    new = ''\n    for i in keys:\n        new += i\n    new = new * (n // l)\n    for i in range(n % l):\n        new += keys[i]\n    if new == s:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\n\ndef q(l):\n    lis = []\n    i = 0\n    n = 0\n    for x in l:\n        n += 1\n        if x not in lis:\n            lis.append(x)\n            i += 1\n    for j in range(i):\n        for k in range(j, n, i):\n            if l[k] != l[j]:\n                return 'NO'\n    return 'YES'\nfor i in range(t):\n    a = input()\n    l = list(a)\n    print(q(l))", "from string import ascii_lowercase\nfor i in range(int(input())):\n    s = input()\n    tmpl = ''\n    n = -1\n    check = [False] * 26\n    for i in range(len(s)):\n        if check[ord(s[i]) - ord('a')]:\n            break\n        check[ord(s[i]) - ord('a')] = True\n        n = i + 1\n    for i in range(len(s)):\n        if s[i] != s[i % n]:\n            print('NO')\n            break\n    else:\n        print('YES')", "for _ in range(int(input())):\n    l = input()\n    d = {}\n    x = 0\n    for i in range(len(l)):\n        if l[i] not in d:\n            d[l[i]] = i\n            x = x + 1\n    d2 = {}\n    for i in range(len(l)):\n        if l[i] not in d2:\n            d2[l[i]] = [i]\n        elif i - d2[l[i]][-1] >= x:\n            d2[l[i]].append(i)\n        else:\n            print('NO')\n            break\n    else:\n        print('YES')", "import math\nfor _ in range(int(input())):\n    s = input()\n    data = {}\n    for i in s:\n        if i not in data:\n            data[i] = 1\n        else:\n            data[i] += 1\n    n = len(s)\n    k = len(data)\n    data2 = {}\n    new = ''\n    counter = 0\n    for i in s:\n        new += i\n        if i not in data2:\n            data2[i] = 1\n            counter += 1\n        else:\n            data2[i] += 1\n        if counter == k:\n            break\n    n2 = len(new)\n    start = 0\n    end = n2\n    if n2 != k:\n        print('NO')\n        continue\n    while end < n:\n        start += n2\n        end += n2\n        if end > n:\n            end = n\n        if s[start:end] != new[:end - start]:\n            print('NO')\n            break\n    else:\n        print('YES')", "for _ in range(int(input())):\n    s = input()\n    n = len(set(s))\n    print('YES' if all((len(set(s[i::n])) == 1 for i in range(n))) else 'NO')", "for _ in range(int(input())):\n    s = input()\n    l = len(set(s))\n    if l == 1:\n        print('YES')\n    else:\n        f = 1\n        for i in range(0, len(s) - l + 1):\n            if len(set(s[i:i + l])) != l:\n                f = 0\n                break\n        if f:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nfor _ in range(0, t):\n    s = input()\n    list1 = []\n    for i in range(0, len(s)):\n        if s[i] not in list1:\n            list1.append(s[i])\n    flag = 0\n    if len(list1) == 1:\n        flag = 0\n    else:\n        len1 = len(list1)\n        reps = 0\n        j = 0\n        flag = 0\n        for i in range(0, len(s)):\n            if s[i] == list1[j]:\n                reps += 1\n                j += 1\n            else:\n                flag = 1\n                break\n            if reps == len(list1):\n                reps = 0\n                j = 0\n    if flag == 0:\n        print('YES')\n    else:\n        print('NO')", "loopcount = int(input())\nfor loop in range(loopcount):\n    s = input()\n    output = 'YES'\n    dict = {}\n    for i in range(len(s)):\n        if s[i] in dict.keys():\n            dict[s[i]].append(i)\n        else:\n            dict[s[i]] = [i]\n    chars = len(dict.keys())\n    for i in dict.keys():\n        for j in range(len(dict[i]) - 1):\n            diff = dict[i][j + 1] - dict[i][j]\n            if chars > diff:\n                output = 'NO'\n                break\n        if output == 'NO':\n            break\n    print(output)", "T = int(input())\nwhile T:\n    s = input()\n    numUnique = len(set(s))\n    ans = 'YES'\n    for i in range(numUnique, len(s) + 1):\n        if len(set(s[i - numUnique:i])) != numUnique:\n            ans = 'NO'\n    print(ans)\n    T -= 1", "t = int(input())\nwhile t > 0:\n    s = input()\n    n = len(s)\n    d = [0 for i in range(26)]\n    ind = n\n    for i in range(n):\n        r = ord(s[i]) - ord('a')\n        d[r] += 1\n        if d[r] > 1:\n            ind = i\n            break\n    fl = 0\n    for i in range(ind, n):\n        if s[i] != s[i - ind]:\n            fl = -1\n            break\n    if fl == -1:\n        print('NO')\n    else:\n        print('YES')\n    t -= 1", "for _ in range(int(input())):\n    s = input()\n    s1 = set(s)\n    if len(s1) == 1:\n        print('YES')\n        continue\n    s2 = set()\n    pat = ''\n    x = 0\n    for i in range(len(s)):\n        if s[i] not in s2:\n            pat += s[i]\n            s2.add(s[i])\n        else:\n            x = i\n            break\n    if len(s2) != len(s1):\n        print('NO')\n        continue\n    j = 0\n    f = 1\n    for i in range(x, len(s)):\n        if pat[j % len(pat)] != s[i]:\n            print('NO')\n            f = 0\n            break\n        j += 1\n    if f:\n        print('YES')", "t = int(input())\nwhile t > 0:\n    t -= 1\n    s = str(input())\n    var = set(s)\n    ans = 'YES'\n    for i in range(len(s) - len(var) + 1):\n        if len(set(s[i:i + len(var)])) != len(var):\n            ans = 'NO'\n            break\n    print(ans)", "tc = int(input())\nfor case in range(tc):\n    s = input()\n    chars = set(s)\n    if len(chars) == 1:\n        print('YES')\n        continue\n    if any((len(set(s[i:i + len(chars)])) < len(chars) for i in range(len(s) - len(chars) + 1))):\n        print('NO')\n    else:\n        print('YES')", "n = int(input())\nfor _ in range(n):\n    s = input()\n    ans = True\n    d = {}\n    for i in range(len(s)):\n        if s[i] not in d:\n            d[s[i]] = []\n        d[s[i]].append(i)\n    diff = len(d)\n    flag = True\n    for i in d:\n        temp = d[i]\n        for i in range(len(temp) - 1):\n            if temp[i + 1] - temp[i] != diff:\n                flag = False\n                break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nfor _ in range(n):\n    s = input()\n    m = [False] * 26\n    word = []\n    for c in s:\n        if m[ord(c) - ord('a')]:\n            break\n        word.append(c)\n        m[ord(c) - ord('a')] = True\n    word = ''.join(word)\n    for i in range(0, len(s), len(word)):\n        if not word.startswith(s[i:i + len(word)]):\n            print('NO')\n            break\n    else:\n        print('YES')"]