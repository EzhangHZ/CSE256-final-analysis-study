["import sys\nfrom collections import defaultdict\n\ndef input():\n    return sys.stdin.readline().rstrip()\n\ndef main():\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    res = 0\n    bit = max(max(A), max(B)).bit_length()\n\n    def check(res):\n        cnt = defaultdict(int)\n        for x in A:\n            cnt[x & res] += 1\n        for x in B:\n            cnt[~x & res] -= 1\n        return all((v == 0 for v in cnt.values()))\n    for i in range(bit - 1, -1, -1):\n        if check(res | 1 << i):\n            res |= 1 << i\n    print(res)\nt = int(input())\nfor _ in range(t):\n    main()", "import sys\nfrom collections import defaultdict\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n\n    def check(pre):\n        cnt = defaultdict(int)\n        for x in a:\n            x &= pre\n            cnt[x] += 1\n        for x in b:\n            x &= pre\n            x ^= pre\n            cnt[x] -= 1\n            if cnt[x] == 0:\n                del cnt[x]\n        return len(cnt.keys()) == 0\n    ans = 0\n    for j in range(29, -1, -1):\n        ans |= 1 << j\n        if check(ans) is False:\n            ans ^= 1 << j\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "from collections import Counter\nm = int(input())\n\ndef solve(n: int, a: list, b: list) -> None:\n    ans = 0\n    for digit in range(29, -1, -1):\n        t = ans | 1 << digit\n        cnt_a = Counter((x & t for x in a))\n        cnt_b = Counter((x & t for x in b))\n        flag = True\n        for x in cnt_a.keys():\n            if cnt_a[x] != cnt_b[x ^ t]:\n                flag = False\n                break\n        if flag:\n            ans = t\n    print(ans)\nwhile m > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    solve(n, a, b)\n    m -= 1", "import collections\n\ndef do(val, a, b):\n    d = collections.defaultdict(lambda : 0)\n    for i in range(len(a)):\n        d[val ^ val & a[i]] += 1\n        d[val & b[i]] -= 1\n    for i in d.keys():\n        if d[i] != 0:\n            return False\n    return True\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = 0\n    for i in range(30, -1, -1):\n        ck = 2 ** i | ans\n        if do(ck, a, b):\n            ans = ck\n    print(ans)", "from collections import Counter\nMAX_BIT = 32\nMASK = []\nfor i in range(MAX_BIT):\n    v = 1 << i\n    MASK.append(v)\n\ndef solve(n, A, B):\n    idx = MAX_BIT - 1\n    mask = 0\n    while idx >= 0:\n        temp = mask | MASK[idx]\n        if Counter([temp & x for x in A]) == Counter([temp & ~x for x in B]):\n            mask = temp\n        idx -= 1\n    return mask\nN = int(input())\nfor _ in range(N):\n    n = int(input())\n    A = [int(x) for x in input().split(' ')]\n    B = [int(x) for x in input().split(' ')]\n    ans = solve(n, A, B)\n    print(ans)", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    n = int(inp())\n    a = list(map(int, inp().split()))\n    b = list(map(int, inp().split()))\n    ans = 0\n    bit = 1 << 29\n    while bit > 0:\n        now = ans | bit\n        if sorted((i & now for i in a)) == sorted((~i & now for i in b)):\n            ans = now\n        bit >>= 1\n    print(ans)\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    r = list(map(int, input().split()))\n    j = list(map(int, input().split()))\n    ans = 0\n    bit = 1 << 29\n    while bit > 0:\n        now = ans | bit\n        if sorted((i & now for i in r)) == sorted((~i & now for i in j)):\n            ans = now\n        bit >>= 1\n    print(ans)", "numSamples = int(input())\nfor _ in range(numSamples):\n    _ = input()\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = 0\n    mask = 1 << 29\n    while mask > 0:\n        now = ans | mask\n        if sorted([now & i for i in a]) == sorted([now & ~i for i in b]):\n            ans = now\n        mask >>= 1\n    print(ans)", "def solve():\n    n = int(input().strip())\n    a = list(map(int, input().strip().split()))\n    b = list(map(int, input().strip().split()))\n    ans = 0\n    bit = 1 << 29\n    while bit > 0:\n        now = ans | bit\n        if sorted((i & now for i in a)) == sorted((~i & now for i in b)):\n            ans = now\n        bit >>= 1\n    print(ans)\nt = int(input().strip())\nfor _ in range(t):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = 0\n    bit = 1 << 29\n    while bit > 0:\n        now = ans | bit\n        if sorted((i & now for i in a)) == sorted((~i & now for i in b)):\n            ans = now\n        bit >>= 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = 0\n    bit = 1 << 29\n    while bit > 0:\n        now = ans | bit\n        if sorted((i & now for i in a)) == sorted((~i & now for i in b)):\n            ans = now\n        bit >>= 1\n    print(ans)", "def fun(ans, a, b, n):\n    a1 = []\n    b1 = []\n    for i in range(n):\n        a1.append(ans & a[i])\n        b1.append(ans & b[i] ^ ans)\n    a1.sort()\n    b1.sort()\n    for i in range(n):\n        if a1[i] != b1[i]:\n            return False\n    return True\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    b = list(map(int, input().split(' ')))\n    a.sort()\n    b.sort()\n    ans = 0\n    for i in range(30, -1, -1):\n        if fun(ans | 2 ** i, a, b, n):\n            ans = ans | 2 ** i\n    print(ans)", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a = sorted(a)\n    b = sorted(b)[::-1]\n    mxval = max(max(a), max(b))\n    mx = 0\n    while mxval > 0:\n        mxval = mxval >> 1\n        mx += 1\n    ans = 0\n    cap = pow(2, mx - 1)\n    for j in range(mx - 1, -1, -1):\n        fg = 1\n        bita = [(a[i] >> j) % 2 for i in range(n)]\n        bitb = [(b[i] >> j) % 2 for i in range(n)]\n        for i in range(n):\n            if bita[i] ^ bitb[i] == 0:\n                fg = 0\n                break\n        if fg == 0:\n            for i in range(n):\n                if bita[i] == 1:\n                    a[i] -= cap\n                if bitb[i] == 1:\n                    b[i] -= cap\n        cap = cap // 2\n        a = sorted(a)\n        b = sorted(b)[::-1]\n    c = [a[i] ^ b[i] for i in range(n)]\n    ans = c[0]\n    for i in range(n):\n        ans = ans & c[i]\n    print(ans)"]