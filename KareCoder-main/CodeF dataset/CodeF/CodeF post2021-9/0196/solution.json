["for _ in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    i = 1\n    r = n - 2\n    while i <= n - 1:\n        if l[i] == 1:\n            i += 1\n        else:\n            break\n    while r >= 0:\n        if l[r] == 1:\n            r -= 1\n        else:\n            break\n    if r - i + 2 <= 0:\n        print(0)\n    else:\n        print(r - i + 2)", "def solve():\n    input()\n    xs = list(map(int, input().split()))\n    if 0 not in xs:\n        return 0\n    return len(xs) - xs[::-1].index(0) - xs.index(0) + 1\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        print(solve())\nmain()", "for i in range(int(input())):\n    lenn = int(input())\n    list1 = list(map(int, input().split()))\n    list2 = list1[::-1]\n    count1 = 0\n    count2 = 0\n    for i in list2:\n        if i == 0:\n            break\n        else:\n            count1 += 1\n    for i in list1:\n        if i == 0:\n            break\n        else:\n            count2 += 1\n    if list1.count(0) == 0:\n        print(0)\n    else:\n        print(lenn - (count1 + count2) + 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = n - 1\n    i = 0\n    while i < n - 1 and a[i + 1] == 1:\n        ans -= 1\n        i += 1\n    j = n - 1\n    while j > i + 1 and a[j - 1] == 1:\n        ans -= 1\n        j -= 1\n    print(ans)", "for s in [*open(0)][2::2]:\n    d = len(''.join(s[::2]).strip('1'))\n    print(d + (d > 0))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    d = 0\n    for i in range(n):\n        if a[n - 1 - i] == 0:\n            c = n - i\n            break\n    for i in range(n):\n        if a[i] == 0:\n            d = i - 1\n            break\n    print(c - d)", "for _ in range(int(input())):\n    (N, A) = (int(input()), list(map(int, input().split(' '))))\n    S = -1\n    E = -1\n    for i in range(1, N):\n        if A[i] == 0:\n            S = i - 1\n            break\n    if S < 0:\n        print(0)\n    else:\n        for i in range(N - 2, 0, -1):\n            if A[i] == 0:\n                E = i + 1\n                break\n        print(E - S)", "for i in range(int(input())):\n    n = int(input())\n    a = ''.join(input().split())\n    if '0' in a:\n        print(a.rfind('0') - a.find('0') + 2)\n    else:\n        print(0)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    idx1 = idx2 = -1\n    for i in range(n):\n        if a[i] == 0:\n            idx1 = i - 1\n            break\n    for i in range(n - 1, -1, -1):\n        if a[i] == 0:\n            idx2 = i + 1\n            break\n    print(idx2 - idx1)", "for _ in range(int(input())):\n    n = int(input())\n    a = ''.join(input().split())\n    if a.count('0') == 0:\n        print(0)\n    else:\n        print(abs(a.index('0') - 1 - a.rfind('0')) + 1)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().strip().split()))\n    (a, b) = (0, n - 1)\n    if 0 not in l:\n        print(0)\n    else:\n        for i in range(1, n):\n            if l[i] == 0:\n                a = i - 1\n                break\n        for i in range(n - 2, -1, -1):\n            if l[i] == 0:\n                b = i + 1\n                break\n        print(b - a)", "def solve(n, arr):\n    first = 0\n    last = 0\n    for i in range(n):\n        if arr[i] == 0:\n            if first == 0:\n                first = i\n            last = i\n    if first == 0 and last == 0:\n        return 0\n    return last + 1 - (first - 1)\nfrom sys import stdin\ninput = stdin.readline\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    print(solve(n, arr))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    index_of_0 = [i for (i, x) in enumerate(a) if x == 0]\n    if len(index_of_0) == 0:\n        print(0)\n    elif len(index_of_0) == 1:\n        print(2)\n    else:\n        print(index_of_0[-1] - index_of_0[0] + 2)", "def main():\n    s = []\n    t = int(input())\n    for test in range(t):\n        n = int(input())\n        sequence = list(input().split())\n        r_i = 0\n        r_f = n\n        for i in range(n):\n            if int(sequence[i]) == 0:\n                break\n            else:\n                r_i += 1\n        sequence.reverse()\n        for i in range(0, n):\n            if int(sequence[i]) == 1:\n                r_f = n - i\n            else:\n                break\n        if r_f - r_i > 0:\n            s.append(r_f - r_i)\n        else:\n            s.append(0)\n    for ss in s:\n        print(ss)\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = ''.join(list(input().split()))\n    a1 = [i for i in a.split('1') if i != '']\n    cnt = 0\n    if len(a1) > 1:\n        print(a.rfind('0') - a.find('0') + 2)\n    elif len(a1) == 1:\n        print(len(a1[0]) + 1)\n    else:\n        print(0)", "import sys\nimport math\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    l = list(map(int, sys.stdin.readline().split()))\n    y = n - 1\n    x = 0\n    for i in range(1, n - 1):\n        if l[i] == 0:\n            x = i\n            break\n    for i in range(n - 2, 0, -1):\n        if l[i] == 0:\n            y = i\n            break\n    if y == n - 1 and x == 0:\n        print(0)\n    else:\n        print(y - x + 2)", "def task(a):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (count, i, e) = (0, 0, 0)\n    while i < n - 1:\n        (n1, n2) = (arr[i], arr[i + 1])\n        if n1 == 0 and n2 == 1:\n            count += 1\n            e = i + 1\n        i += 1\n    if count == 0:\n        print(0)\n        return\n    else:\n        f = 0\n        for i in range(n):\n            if arr[i] == 0:\n                f = i - 1\n                break\n        print(e - f)\nt = int(input())\nfor a in range(1, t + 1):\n    task(a)", "def solveA(n, a):\n    left = 0\n    right = n - 1\n    while left < n and a[left] == 1:\n        left += 1\n    while right >= 0 and a[right] == 1:\n        right -= 1\n    left -= 1\n    right += 1\n    if left >= right:\n        return 0\n    else:\n        return right - left\nnum_tests = int(input().split()[0])\nfor t in range(num_tests):\n    n = int(input())\n    a = [int(value) for value in input().split()]\n    print(solveA(n, a))", "t = int(input())\nresult = []\nfor case in range(t):\n    Y = int(input())\n    n = input().replace(' ', '')\n    d = n.split('0')\n    g = n.split('1')\n    dict1 = {1: [], 0: []}\n    for x in d:\n        if x:\n            dict1[1].append(x)\n    for x in g:\n        if x:\n            dict1[0].append(x)\n    if len(dict1[0]) == 0:\n        result.append(0)\n    elif len(dict1[0]) == 1:\n        result.append(1 + len(dict1[0][0]))\n    else:\n        result.append(n.rfind('0') - n.find('0') + 2)\nfor x in result:\n    print(x)", "from sys import stdin\ninput = stdin.readline\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        loc = input().split()\n        first_1 = 0\n        last_1 = 0\n        for (x, y) in enumerate(loc):\n            if y == '0':\n                first_1 = x - 1\n                break\n        for i in range(n - 1, -1, -1):\n            if loc[i] == '0':\n                last_1 = i + 1\n                break\n        print(last_1 - first_1)\nmain()", "t = int(input())\nresult = []\nfor i1 in range(t):\n    n = int(input())\n    level = [int(i2) for i2 in input().split()]\n    for i3 in range(n):\n        if level[i3] == 0:\n            left_zero_index = i3\n            break\n    else:\n        result.append(0)\n        continue\n    for i4 in range(n):\n        if level[n - i4 - 1] == 0:\n            right_zero_index = n - i4 - 1\n            break\n    result.append(right_zero_index - left_zero_index + 2)\nfor i5 in result:\n    print(i5)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    i = 0\n    j = n - 1\n    while i < j and arr[i + 1] == 1:\n        i += 1\n    while j > i and arr[j - 1] == 1:\n        j -= 1\n    print(max(j - i, 0))", "for i in range(int(input())):\n    n = int(input())\n    a = [*map(int, input().split())]\n    l = 0\n    r = n - 1\n    if sum(a) == n:\n        print(0)\n    else:\n        while a[l] == 1:\n            l += 1\n        while a[r] == 1:\n            r -= 1\n        print(r + 1 - (l - 1))", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = input().split()\n    i = 0\n    while i < n - 1 and lst[i + 1] == '1':\n        i += 1\n    j = n - 1\n    while j > i and lst[j - 1] == '1':\n        j -= 1\n    print(j - i)", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = input().split()\n    i = 0\n    while i < n - 1 and lst[i + 1] == '1':\n        i += 1\n    j = n - 1\n    while j > i and lst[j - 1] == '1':\n        j -= 1\n    print(j - i)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = False\n    start = 0\n    end = 0\n    flag = False\n    for i in range(n):\n        if a[i] == 0 and (not x):\n            start = i - 1\n            while i < n and a[i] != 1:\n                i += 1\n            end = i\n            x = True\n        elif a[i] == 0:\n            flag = True\n            break\n    print(end - start if not flag else n - a[::-1].index(0) - start)", "class Solution(object):\n\n    def __init__(self, n, gameItems):\n        self.n: int = n\n        self.gameItems: list = gameItems\n        self.exist: int = -1\n        self.land: int = self.n\n\n    def main(self) -> int:\n        while self.exist < self.land:\n            if self.gameItems[self.land - 1]:\n                self.land -= 1\n            elif self.gameItems[self.exist + 1]:\n                self.exist += 1\n            else:\n                break\n        return self.land - self.exist\n\n    def __str__(self) -> str:\n        return str(Solution.main(self))\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    gameItems: list = list(map(int, input().split()))\n    print(Solution(n, gameItems))", "class Solution(object):\n\n    def __init__(self):\n        self.n: int = int(input())\n        self.gameItems: list = list(map(int, input().split()))\n\n    def main(self) -> int:\n        self.exist: int = -1\n        self.land: int = self.n\n        while self.exist < self.land:\n            if self.gameItems[self.land - 1]:\n                self.land -= 1\n            elif self.gameItems[self.exist + 1]:\n                self.exist += 1\n            else:\n                break\n        return self.land - self.exist\n\n    def __str__(self) -> str:\n        return str(Solution.main(self))\n\ndef Run() -> str:\n    t = int(input())\n    for _ in range(t):\n        print(Solution())\nRun()", "class Solution(object):\n\n    def __init__(self):\n        self.n: int = int(input())\n        self.gameItems: list = list(map(int, input().split()))\n\n    def main(self) -> int:\n        self.exist: int = -1\n        self.land: int = self.n\n        while self.exist < self.land:\n            if self.gameItems[self.land - 1]:\n                self.land -= 1\n            elif self.gameItems[self.exist + 1]:\n                self.exist += 1\n            else:\n                break\n        return self.land - self.exist\n\n    def __str__(self) -> str:\n        return str(Solution.main(self))\n\nclass Run(object):\n\n    def __init__(self):\n        self.cases = int(input())\n        while self.cases > 0:\n            print(Solution())\n            self.cases -= 1\nRun()", "for _ in range(int(input())):\n    n = int(input())\n    spic = list(map(int, input().split()))\n    if spic.count(0) == 0:\n        print(0)\n        continue\n    if spic.count(0) == 1:\n        print(2)\n        continue\n    k = n\n    while spic[k - 2] == 1:\n        k -= 1\n    print(k - spic.index(0))", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    ind = list(map(int, input().split()))\n    R = ind[::-1]\n    if 0 in ind:\n        ind1 = ind.index(0)\n        ind2 = a - R.index(0) + 1\n        print(ind2 - ind1)\n    elif 0 not in ind:\n        print('0')", "for _ in range(int(input())):\n    n = int(input())\n    nums = input().split(' ')\n    res = 0\n    i = 0\n    j = n - 1\n    while i + 1 < n and nums[i] == nums[i + 1] == '1':\n        i += 1\n    while j - 1 >= 0 and nums[j] == nums[j - 1] == '1':\n        j -= 1\n    print(max(0, j - i))", "for tc in range(int(input())):\n    n = int(input())\n    arr = list(input().split())\n    arr = ''.join(arr)\n    first = arr.find('0')\n    last = arr.rfind('0')\n    if '0' not in arr:\n        print(0)\n    else:\n        print(last - first + 2)", "def main():\n    for _ in range(int(input())):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        for i in range(n):\n            if arr[i] == 0:\n                break\n        for j in range(n):\n            if arr[n - j - 1] == 0:\n                break\n        if 0 not in arr:\n            print(0)\n        else:\n            print(n - j - i + 1)\nmain()", "import sys\nLI = lambda : list(map(int, sys.stdin.readline().split()))\nMI = lambda : map(int, sys.stdin.readline().split())\nSI = lambda : sys.stdin.readline().strip('\\n')\nII = lambda : int(sys.stdin.readline())\nfor _ in range(II()):\n    n = II()\n    a = LI()\n    cnt = 0\n    for i in range(n - 1):\n        if a[i] == 1 and a[i + 1] == 0:\n            cnt += 1\n    if cnt > 1:\n        (i, j) = (a.index(0), n - a[::-1].index(0))\n        print(j - i + 1)\n    else:\n        for i in range(n):\n            if a[i] == 0:\n                j = i\n                while a[j] == 0:\n                    j += 1\n                print(j - i + 1)\n                break\n        else:\n            print(0)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    cost = []\n    sum = 0\n    count0 = 0\n    for a in range(n):\n        if l[a] == 0:\n            count0 += 1\n    for j in range(n):\n        if l[j] == 0:\n            cost.append(j)\n            break\n    for k in range(n):\n        if l[n - k - 1] == 0:\n            cost.append(n - k - 1)\n            break\n    if count0 == 0:\n        print(0)\n    elif count0 == 1:\n        print(2)\n    else:\n        print(cost[1] - cost[0] + 2)", "for _ in range(int(input())):\n    n = int(input())\n    nums = input().replace(' ', '')\n    nums.replace\n    if '0' in nums:\n        left = nums.find('0') - 1\n        right = nums.rfind('0')\n        print(right - left + 1)\n    else:\n        print(0)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    i = n - 1\n    while i >= 0:\n        if a[i] == 0:\n            break\n        i -= 1\n    j = 0\n    while j < n:\n        if a[j] == 0:\n            break\n        j += 1\n    if i == -1 and j == n:\n        print(0)\n    else:\n        print(i + 1 - (j - 1))", "def solve(lis, n):\n    start = end = 0\n    i = 0\n    while i < n:\n        if lis[i] == 0:\n            start = i - 1\n            i = n + 1\n        i += 1\n    i = n - 1\n    while i >= 0:\n        if lis[i] == 0:\n            end = i + 1\n            i = -1\n        i -= 1\n    return end - start\nfor i in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    print(solve(lis, n))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if 0 not in a:\n        print(0)\n    elif a.count(0) == 1:\n        print(2)\n    else:\n        x = a.index(0)\n        a_reverse = a[::-1]\n        y = a_reverse.index(0)\n        answer = n - 1 - (y - 1) - (x - 1)\n        print(answer)", "t = int(input())\nfor zz in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    i = 0\n    j = n - 1\n    for _ in range(n):\n        while i < j and l[i + 1] == 1:\n            i += 1\n        while j > i and l[j - 1] == 1:\n            j -= 1\n    print(max(j - i, 0))", "j = int(input())\nk = 0\nfor i in range(j):\n    n = int(input())\n    a = input()\n    x = a.find('0')\n    if x == -1:\n        print(0)\n    else:\n        y = a.rfind('0')\n        print((y + 1) // 2 + 1 - ((x + 1) // 2 - 1))", "import sys\ninput = sys.stdin.readline\n\ndef solve(n, arr):\n    f = 0\n    b = n - 1\n    ans = n - 1\n    while b > f and arr[f] == arr[b] == 1:\n        ans = min(ans, b - f)\n        if arr[f + 1] == 1:\n            f += 1\n        elif arr[b - 1] == 1:\n            b -= 1\n        else:\n            break\n    if b == f and arr[f] == 1:\n        print(0)\n    else:\n        print(ans)\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    solve(n, arr)", "import sys\nfrom math import sqrt, gcd, factorial\nfrom collections import deque, Counter, OrderedDict\nsys.setrecursionlimit(10 ** 6)\ninput = lambda : sys.stdin.readline()\nI = lambda : int(input())\nS = lambda : input().strip()\nM = lambda : map(int, input().strip().split())\nL = lambda : list(map(int, input().strip().split()))\nmod = 1000000007\nfor _ in range(I()):\n    n = I()\n    a = L()\n    (i, j) = (0, n - 1)\n    while i < n and a[i]:\n        i += 1\n    while j >= 0 and a[j]:\n        j -= 1\n    print(max(0, j - i + 2))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    l = 0\n    r = n - 1\n    while l < n and arr[l] == 1:\n        l += 1\n    while r >= 0 and arr[r] == 1:\n        r -= 1\n    print(max(0, r - l + 2))", "for i in range(int(input())):\n    input()\n    s = input().replace(' ', '')\n    if '0' in s:\n        print(s.rfind('0') - s.find('0') + 2)\n    else:\n        print(0)", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_ls():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        ls = get_ls()\n        l = 0\n        r = 0\n        for i in range(len(ls)):\n            if ls[i] == 0:\n                l = i - 1\n                break\n        for i in range(len(ls) - 1, 0, -1):\n            if ls[i] == 0:\n                r = i + 1\n                break\n        print(r - l)\nmain()", "a = int(input())\nfor i in range(a):\n    b = int(input())\n    c = list(map(int, input().split()))\n    if c.count(0) == 0:\n        print(0)\n    elif c.count(0) == 1:\n        print(2)\n    else:\n        for k in range(b):\n            if c[k] == 0:\n                break\n        for j in range(b - 1, -1, -1):\n            if c[j] == 0:\n                print(j + 1 - (k - 1))\n                break", "for s in [*open(0)][2::2]:\n    d = len(s[::2].strip('1'))\n    print(d + (d > 0))", "def print_hi(name):\n    pass\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    l_zero = 0\n    l_flag = 0\n    r_zero = 0\n    for j in range(len(a)):\n        if a[j] == 0:\n            r_zero = j\n            if not l_flag:\n                l_zero = j\n                l_flag = 1\n    if l_flag == 0:\n        print(0)\n    else:\n        print(r_zero - l_zero + 2)", "T_cases = int(input())\nfor i in range(T_cases):\n    n = int(input())\n    Location = list(map(int, input().split()))\n    G = list(Location)\n    G.reverse()\n    if 0 in Location:\n        print(n - G.index(0) + 1 - Location.index(0))\n    else:\n        print(0)", "for s in [*open(0)][2::2]:\n    d = len(s[::2].strip('1'))\n    print(d + (d > 0))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().strip().split(' ')))\n    (l, r) = (0, n - 1)\n    while r >= 0 and a[r] == 1:\n        r -= 1\n    while l < n and a[l] == 1:\n        l += 1\n    if l > r:\n        print(0)\n    else:\n        print(r - l + 2)", "for _ in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split(' ')))\n    if len(set(li)) == 1:\n        print(0)\n    else:\n        (l, r) = (0, n - 1)\n        while l <= r:\n            if li[l] == 0 and li[r] == 0:\n                print(r - l + 2)\n                break\n            elif li[l] == 0:\n                r -= 1\n            else:\n                l += 1", "for _ in range(int(input())):\n    n = int(input())\n    a = ''.join(input().split())\n    if '0' in set(a):\n        print(a.rfind('0') - a.find('0') + 2)\n    else:\n        print('0')", "for t in range(int(input())):\n    n = int(input())\n    arr = ''.join(input().split())\n    if '0' not in arr:\n        print(0)\n    else:\n        i = arr.find('0')\n        j = arr.rfind('0')\n        j += 1\n        i -= 1\n        print(j - i)", "def solve_problem():\n    for _ in range(int(input())):\n        _ = input()\n        locations = [int(i) for i in input().split()]\n        l = len(locations)\n        begin_water = -1\n        end_water = -1\n        for i in range(l):\n            if locations[i] == 0 and begin_water == -1:\n                begin_water = i\n            if locations[l - 1 - i] == 0 and end_water == -1:\n                end_water = l - 1 - i\n        if begin_water != -1:\n            print(end_water - begin_water + 2)\n        else:\n            print(0)\nsolve_problem()", "n = int(input())\nfor i in range(n):\n    k = int(input())\n    arr = list(map(int, input().split()))\n    if 0 not in arr:\n        print(0)\n    elif arr.count(0) == 1:\n        print(2)\n    else:\n        f = arr.index(0)\n        arr.reverse()\n        e = arr.index(0)\n        print(len(arr) - f - e + 1)", "for _ in range(int(input())):\n    input()\n    arr = input().split()\n    s = ''.join(arr).strip('1')\n    coins = len(s)\n    if coins != 0:\n        print(coins + 1)\n    else:\n        print(coins)", "t = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    j = -1\n    k = 0\n    for i in range(len(a)):\n        if a[i] == 0 and j == -1:\n            j = i\n            k = 1\n        if a[i] == 0 and j != -1:\n            k = i - j + 2\n    print(k)", "import sys\nt = int(sys.stdin.readline())\nfor k in range(0, t):\n    n = int(sys.stdin.readline())\n    a = list(sys.stdin.readline().split())\n    n_f = 0\n    n_l = 0\n    for i in range(0, n):\n        if a[i] == '0':\n            n_f = i\n            break\n    for i in range(0, n):\n        if a[-i] == '0':\n            n_l = n - i\n            break\n    if n_f == 0:\n        c = 0\n    else:\n        c = n_l - n_f + 2\n    sys.stdout.write(str(c) + '\\n')", "tn = int(input())\nfor _ in range(tn):\n    ln = int(input())\n    ls = [int(x) for x in input().split(' ')]\n    s = 0\n    e = 0\n    for i in range(len(ls)):\n        if ls[i] == 0:\n            e = i\n        elif e == 0:\n            s = i\n    if e > 0:\n        print(e + 1 - s)\n    else:\n        print(0)", "mod = 10 ** 9 + 7\n\ndef ri():\n    return int(input())\n\ndef rl():\n    return list(map(int, input().split()))\n\ndef rls():\n    return list(map(str, input().split()))\n\ndef rm():\n    return map(int, input().split())\n\ndef isPowerOfTwo(x):\n    return x and (not x & x - 1)\nfor _ in range(ri()):\n    n = ri()\n    a = rl()\n    if 0 not in a:\n        print(0)\n        continue\n    l = a.index(0)\n    a.reverse()\n    r = n - a.index(0)\n    print(r - l + 1)", "for _ in range(int(input())):\n    a = int(input())\n    b = input().split()\n    l = 0\n    r = 0\n    for i in range(a):\n        if b[i] == '0':\n            l = i - 1\n            break\n    for i in range(a - 1, -1, -1):\n        if b[i] == '0':\n            r = i + 1\n            break\n    print(r - l)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a.count(0) == 0:\n        d = 0\n    else:\n        b = a.index(0)\n        a.reverse()\n        c = a.index(0)\n        d = n - c - b + 1\n    print(d)", "tc = int(input())\nfor i in range(tc):\n    n = int(input())\n    path = input()\n    path = path[::2]\n    inv = path[::-1]\n    if '0' not in path:\n        ans = 0\n    else:\n        st0loc = path.index('0')\n        last0loc = n - inv.index('0') - 1\n        ans = last0loc - st0loc + 2\n    print(ans)", "t = int(input())\nx = 1\nwhile x <= t:\n    n = int(input())\n    location = str(input())\n    list = location.split()\n    coin = n - 1\n    i = 1\n    while i < n:\n        if int(list[i]) == 1:\n            i = i + 1\n        else:\n            break\n    j = n\n    while j > 0:\n        if int(list[j - 2]) == 1:\n            j = j - 1\n        else:\n            break\n    if i == n:\n        coin = 0\n    else:\n        coin = j - i\n    print(coin)\n    x = x + 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if 0 not in a:\n        print(0)\n    else:\n        print(n - a[::-1].index(0) - a.index(0) + 1)", "def cost(locations: str) -> int:\n    locations = locations.split()\n    n = len(locations)\n    j = n - 1\n    while j >= 0 and locations[j] == '1':\n        j -= 1\n    j += 1\n    i = 0\n    while i < n and locations[i] == '1':\n        i += 1\n    i -= 1\n    return max(0, j - i)\nt = int(input())\nfor i in range(t):\n    n = input()\n    locations = input()\n    print(cost(locations))", "for s in [*open(0)][2::2]:\n    d = len(s[::2].strip('1'))\n    print(d + (d > 0))", "from sys import stdin\ninput = stdin.readline\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        loc = input().split()\n        first_1 = 0\n        last_1 = 0\n        for (x, y) in enumerate(loc):\n            if y == '0':\n                first_1 = x - 1\n                break\n        for i in range(n - 1, -1, -1):\n            if loc[i] == '0':\n                last_1 = i + 1\n                break\n        print(last_1 - first_1)\nmain()", "test = int(input())\nfor test_i in range(test):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    st = ed = 0\n    for i in range(n):\n        if a[i] == 0:\n            if st == 0:\n                st = i\n            ed = i\n    if st:\n        print(ed - st + 2)\n    else:\n        print(0)", "for i in range(int(input())):\n    n = int(input())\n    x = len(''.join(input().split()).strip('1'))\n    print(x + (x > 0))", "t = int(input())\nif 1 <= t and t <= 10 ** 4:\n    while t:\n        n = int(input())\n        if 1 <= n and n <= 10 ** 4:\n            s = input()\n            arr = []\n            for i in s:\n                if i == '1' or i == '0':\n                    arr.append(int(i))\n            if len(arr) == n:\n                start = 0\n                finish = 0\n                for i in range(0, n):\n                    if arr[i] == 1:\n                        start = i\n                    else:\n                        break\n                for i in range(n - 1, -1, -1):\n                    if arr[i] == 1:\n                        finish = i\n                    else:\n                        break\n                if finish != 0:\n                    final = finish - start\n                else:\n                    final = 0\n                print(final)\n        t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = b = 0\n    for i in range(n):\n        if a[i] == 0:\n            f = i - 1\n            break\n    for i in range(n - 1, -1, -1):\n        if a[i] == 0:\n            b = i + 1\n            break\n    print(b - f)", "out = []\n\ndef game():\n    x = int(input())\n    y = list(map(int, input().strip().split()))\n    coins = 0\n    i = 0\n    j = x - 1\n    while j >= 0 and y[j]:\n        j -= 1\n    while i < x and y[i]:\n        i += 1\n    if j < 0:\n        out.append(0)\n    else:\n        out.append(j - i + 2)\niter = int(input())\nwhile iter > 0:\n    game()\n    iter -= 1\nfor i in range(0, len(out)):\n    print(out[i])", "for s in [*open(0)][2::2]:\n    d = len(s[::2].strip('1'))\n    print(d + (d > 0))", "def solve(n):\n    a = c = 0\n    for i in range(len(n)):\n        if not n[i]:\n            if not a + c:\n                a = i - 1\n            c = i + 1\n    return c - a\nfor i in range(int(input())):\n    input()\n    print(solve([*map(int, input().split())]))", "for s in [*open(0)][2::2]:\n    d = len(s[::2].strip('1'))\n    print(d + (d > 0))", "for s in [*open(0)][2::2]:\n    d = len(s[::2].strip('1'))\n    print(d + (d > 0))", "tests = int(input())\nfor _ in range(tests):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if arr.count(0) == 0:\n        print(0)\n    else:\n        i = 0\n        j = n - 1\n        while i < j and arr[i + 1] == 1:\n            i += 1\n        while j > i and arr[j - 1] == 1:\n            j -= 1\n        print(j - i)", "def main():\n    times = int(input())\n    for _ in range(times):\n        n = int(input())\n        data = list(map(int, input().split()))\n        l = 0\n        r = n - 1\n        for l in range(0, n, 1):\n            if data[l] == 0:\n                break\n        for r in range(n - 1, -1, -1):\n            if data[r] == 0:\n                break\n        if l > r:\n            print(0)\n        else:\n            print(r - l + 2)\nmain()", "for _ in [0] * int(input()):\n    n = int(input())\n    s = input().split()\n    w = s[::-1]\n    if '0' not in w:\n        print(0)\n    else:\n        a = s.index('0')\n        b = w.index('0')\n        print(len(w[a:n - b + 1]))", "loopcount = int(input())\nfor loop in range(loopcount):\n    a = int(input())\n    x = input()\n    x = x.split(' ')\n    x = list(map(int, x))\n    first_land = 0\n    last_land = 0\n    if 0 not in x:\n        print(0)\n        continue\n    for i in range(a - 2, 0, -1):\n        if x[i] == 0:\n            last_land = i + 1\n            break\n    for i in range(a):\n        if x[i] == 0:\n            first_land = i - 1\n            break\n    print(last_land - first_land)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = [int(x) for x in input().split()]\n    lg = 0\n    rg = n\n    j = 0\n    while s[j] != 0:\n        lg = j\n        if j < n - 1:\n            j += 1\n        else:\n            break\n    j = 0\n    while s[n - j - 1] != 0:\n        rg = n - j - 1\n        if j < n - 2:\n            j += 1\n        else:\n            break\n    if rg - lg > 0:\n        print(rg - lg)\n    else:\n        print(0)", "for s in [*open(0)][2::2]:\n    d = len(s[::2].strip('1'))\n    print(d + (d > 0))", "zeros = list()\nfor t in range(int(input())):\n    m = int(input())\n    s = input().split()\n    for i in range(m):\n        if int(s[i]) != 1:\n            zeros.append(i)\n    if not zeros:\n        print('0')\n    else:\n        print(zeros[-1] + 1 - (zeros[0] - 1))\n        zeros = list()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if 0 not in l:\n        print(0)\n    else:\n        print(n - l[::-1].index(0) - 1 - l.index(0) + 2)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if 0 not in l:\n        print(0)\n    else:\n        print(n - l[::-1].index(0) - 1 - l.index(0) + 2)", "n = int(input())\nfor i in range(n):\n    k = int(input())\n    l = [int(x) for x in input().split()]\n    zero = l.count(0)\n    if zero == 0:\n        answer = 0\n    elif zero == 1:\n        answer = 2\n    else:\n        first = 0\n        second = 0\n        for x in range(k):\n            if l[x] == 0:\n                if first != 0:\n                    second = x\n                else:\n                    first = x\n        answer = second - first + 2\n    print(answer)", "for s in [*open(0)][2::2]:\n    d = len(s[::2].strip('1'))\n    print(d + (d > 0))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    t = 0\n    j = n - 1\n    while j >= 0 and l[j]:\n        j -= 1\n    i = 0\n    while i < n and l[i]:\n        i += 1\n    if j < 0:\n        print(0)\n    else:\n        print(j - i + 2)", "def test():\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    fi = 0\n    li = 0\n    for i in range(n - 1):\n        if l[i] == 0:\n            fi = i - 1\n            break\n    for i in range(n - 1, 0, -1):\n        if l[i] == 0:\n            li = i + 1\n            break\n    print(li - fi)\n    return\nT = int(input())\nfor i in range(T):\n    test()", "t = int(input())\nfor _ in range(t):\n    (n, a) = (int(input()), [int(i) for i in input().split()])\n    (s, e) = (0, n - 1)\n    while s + 1 < n and a[s + 1] > 0:\n        s += 1\n    while e - 1 >= 0 and a[e - 1] > 0:\n        e -= 1\n    res = max(e - s, 0)\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = l[1:-1]\n    if 0 in x:\n        i = x.index(0)\n        y = x[::-1]\n        j = len(x) - y.index(0)\n        print(j - i + 1)\n    else:\n        print(0)", "for s in [*open(0)][2::2]:\n    d = len(s[::2].strip('1'))\n    print(d + (d > 0))", "for s in [*open(0)][2::2]:\n    d = len(s[::2].strip('1'))\n    print(d + (d > 0))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = 0\n    while p < n and a[p]:\n        p += 1\n    if p == n:\n        print(0)\n        continue\n    q = n\n    while q > p and a[q - 1]:\n        q -= 1\n    print(q - p + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    left = 0\n    while left + 1 < n and a[left + 1]:\n        left += 1\n    right = n - 1\n    while right > 0 and a[right - 1]:\n        right -= 1\n    cost = max(right - left, 0)\n    print(cost)"]