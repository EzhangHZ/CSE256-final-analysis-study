["import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, q) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = ['0'] * n\n    rest_q = 0\n    for i in range(n - 1, -1, -1):\n        if rest_q >= a[i]:\n            b[i] = '1'\n        elif rest_q < q and a[i] > rest_q:\n            rest_q += 1\n            b[i] = '1'\n        else:\n            pass\n    print(''.join(b))", "from collections import defaultdict, deque\nimport math\nimport bisect\n\ndef solve():\n    (n, iq) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    ans = [0 for _ in range(n)]\n    curr = 0\n    for i in range(n - 1, -1, -1):\n        if curr < arr[i]:\n            if curr < iq:\n                curr += 1\n                ans[i] = '1'\n            else:\n                ans[i] = '0'\n        else:\n            ans[i] = '1'\n    print(''.join(ans))\nt = int(input())\nfor _ in range(t):\n    solve()", "from collections import *\nimport copy\n\ndef main():\n    for t in range(int(input())):\n        (n, q) = map(int, input().split())\n        a = list(map(int, input().split()))\n        ans = []\n        cnt = 0\n        for i in range(n - 1, -1, -1):\n            if a[i] > cnt and cnt < q:\n                ans.append('1')\n                cnt += 1\n            elif a[i] <= cnt:\n                ans.append('1')\n            else:\n                ans.append('0')\n        print(''.join(reversed(ans)))\nmain()", "t = int(input())\nfor tt in range(t):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = ['0'] * n\n    q1 = 0\n    for r in range(n - 1, -1, -1):\n        if a[r] <= q1:\n            ans[r] = '1'\n        elif q1 < q:\n            q1 += 1\n            ans[r] = '1'\n        else:\n            continue\n    print(''.join(ans))", "x = int(input())\n\ndef cal(n, m, arr):\n    if m >= n:\n        return '1' * n\n    if m >= max(arr):\n        return '1' * n\n    if m < min(arr):\n        return '1' * m + '0' * (n - m)\n    if m == 0:\n        return '0' * n\n    if n == 1:\n        return '1'\n    ta = ['0'] * n\n    ta[-1] = '1'\n    t = 1\n    for i in range(n - 2, -1, -1):\n        if arr[i] > t:\n            if t < m:\n                t += 1\n                ta[i] = '1'\n            else:\n                for j in range(i, -1, -1):\n                    if arr[j] <= t:\n                        ta[j] = '1'\n                return ''.join(ta)\n        else:\n            ta[i] = '1'\n    return ''.join(ta)\nfor jj in range(x):\n    (n, m) = [int(i) for i in input().split(' ')]\n    p = [int(i) for i in input().split(' ')]\n    print(cal(n, m, p))", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    ls = list(map(int, input().split()))\n    ans = ['0'] * n\n    iq = 0\n    for i in range(n - 1, -1, -1):\n        if ls[i] <= iq:\n            ans[i] = '1'\n        elif iq < q:\n            iq += 1\n            ans[i] = '1'\n    print(''.join(ans))", "for _ in range(int(input())):\n    (length, iq) = map(int, input().split())\n    list = [int(i) for i in input().split()]\n    list.reverse()\n    str = ''\n    Q = 0\n    for i in list:\n        if i <= Q:\n            str += '1'\n        elif i > Q and Q < iq:\n            str += '1'\n            Q += 1\n        elif i > Q and Q == iq:\n            str += '0'\n    print(str[::-1])", "t = int(input())\nfor i in range(t):\n    (n, q) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    res = ['0'] * n\n    intl = 0\n    for i in range(n - 1, -1, -1):\n        if lst[i] <= intl:\n            res[i] = str(1)\n        elif intl < q:\n            intl += 1\n            res[i] = str(1)\n    print(''.join(res))", "t = int(input())\nfor _ in range(t):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.reverse()\n    b = ''\n    Q = 0\n    for r in a:\n        if r <= Q:\n            b += '1'\n        elif Q < q:\n            Q += 1\n            b += '1'\n        else:\n            b += '0'\n    print(b[::-1])", "for i in range(int(input())):\n    (n, q) = list(map(int, input().split()))\n    a = list(map(int, input().split()))[::-1]\n    p = 0\n    s = ['0'] * n\n    for i in range(n):\n        if a[i] > p:\n            if p == q:\n                continue\n            p += 1\n            s[i] = '1'\n        else:\n            s[i] = '1'\n    print(''.join(s[::-1]))", "for i in range(int(input())):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ll = 0\n    a = a[::-1]\n    ans = ''\n    for i in a:\n        if i > ll and ll < q:\n            ans += '1'\n            ll += 1\n        elif i <= q:\n            ans += '1'\n        else:\n            ans += '0'\n    print(ans[::-1])", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    ls = list(map(int, input().split()))\n    ans = ['0'] * n\n    iq = 0\n    for i in range(n - 1, -1, -1):\n        if ls[i] <= iq:\n            ans[i] = '1'\n        elif iq < q:\n            iq += 1\n            ans[i] = '1'\n    print(''.join(ans))", "for t in ' ' * int(input()):\n    (n, q) = map(int, input().split())\n    l = [*map(int, input().split())][::-1]\n    iq = 0\n    s = ''\n    for i in range(n):\n        if l[i] <= iq:\n            s += '1'\n        elif q > iq:\n            s += '1'\n            iq += 1\n        else:\n            s += '0'\n    print(s[::-1])", "t = int(input())\nfor _ in range(t):\n    (n, q) = map(int, input().split())\n    arr = list(map(int, input().split()))[::-1]\n    re = ''\n    QQ = 0\n    for i in range(n):\n        if arr[i] <= QQ:\n            re += '1'\n        elif QQ < q:\n            re += '1'\n            QQ += 1\n        else:\n            re += '0'\n    print(re[::-1])", "for d in range(int(input())):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    a = 0\n    s = ''\n    for i in range(n - 1, -1, -1):\n        if l[i] <= a:\n            s += '1'\n        elif q > a:\n            s += '1'\n            a += 1\n        else:\n            s += '0'\n    print(s[::-1])", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    (*a,) = map(int, input().split())\n    s = ['0'] * n\n    q_now = 0\n    for i in range(n - 1, -1, -1):\n        if a[i] <= q_now:\n            s[i] = '1'\n        elif a[i] > q_now and q_now < q:\n            s[i] = '1'\n            q_now += 1\n    print(''.join(s))", "for i in range(int(input())):\n    (n, q) = map(int, input().split())\n    c = [int(j) for j in input().split()]\n    s = ['0'] * n\n    k = 0\n    for j in reversed(range(n)):\n        if c[j] > k:\n            if k < q:\n                k += 1\n                s[j] = '1'\n        else:\n            k = max(k, c[j])\n            s[j] = '1'\n    print(''.join(s))", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = ['0'] * n\n    c = 0\n    for i in range(n - 1, -1, -1):\n        if c < a[i]:\n            if c == q:\n                ans[i] = '0'\n            else:\n                ans[i] = '1'\n                c += 1\n        else:\n            ans[i] = '1'\n    print(''.join(ans))", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    a = [*map(int, input().split())]\n    b = ['0'] * n\n    cnt = 0\n    for i in range(n):\n        if cnt < q and a[-i - 1] > cnt:\n            cnt += 1\n            b[-i - 1] = '1'\n        elif a[-i - 1] <= cnt:\n            b[-i - 1] = '1'\n    print(''.join(b))", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    (*a,) = map(int, input().split())\n    s = ['0'] * n\n    q_now = 0\n    for i in range(n - 1, -1, -1):\n        if a[i] <= q_now:\n            s[i] = '1'\n        elif a[i] > q_now and q_now < q:\n            s[i] = '1'\n            q_now += 1\n    print(''.join(s))", "for d in range(int(input())):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    a = 0\n    s = ''\n    for i in range(n - 1, -1, -1):\n        if l[i] <= a:\n            s += '1'\n        elif q > a:\n            s += '1'\n            a += 1\n        else:\n            s += '0'\n    print(s[::-1])", "for d in range(int(input())):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    a = 0\n    s = ''\n    for i in range(n - 1, -1, -1):\n        if l[i] <= a:\n            s += '1'\n        elif q > a:\n            s += '1'\n            a += 1\n        else:\n            s += '0'\n    print(s[::-1])", "for t in ' ' * int(input()):\n    (n, q) = map(int, input().split())\n    l = [*map(int, input().split())]\n    iq = 0\n    s = ''\n    for i in range(n - 1, -1, -1):\n        if l[i] <= iq:\n            s += '1'\n        elif q > iq:\n            s += '1'\n            iq += 1\n        else:\n            s += '0'\n    print(s[::-1])", "import sys\nimport math\nfrom collections import Counter\nfrom decimal import *\nalfabet = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8, 'i': 9, 'j': 10, 'k': 11, 'l': 12, 'm': 13, 'n': 14, 'o': 15, 'p': 16, 'q': 17, 'r': 18, 's': 19, 't': 20, 'u': 21, 'v': 22, 'w': 23, 'x': 24, 'y': 25, 'z': 26}\nalfabet_2 = {'1': 'a', '2': 'b', '3': 'c', '4': 'd', '5': 'e', '6': 'f', '7': 'g', '8': 'h', '9': 'i', '10': 'j', '11': 'k', '12': 'l', '13': 'm', '14': 'n', '15': 'o', '16': 'p', '17': 'q', '18': 'r', '19': 's', '20': 't', '21': 'u', '22': 'v', '23': 'w', '24': 'x', '25': 'y', '26': 'z'}\nz = int(input())\nfor contorr in range(z):\n    (n, q) = list(map(int, input().split()))\n    bloc = list(map(int, input().split()))\n    elo = 0\n    string = ''\n    for i in range(n - 1, -1, -1):\n        if bloc[i] > elo:\n            if elo < q:\n                elo += 1\n                string += '1'\n            else:\n                string += '0'\n        else:\n            string += '1'\n    print(string[::-1])", "import sys\nimport math\nfrom collections import Counter\nfrom decimal import *\nalphabet = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8, 'i': 9, 'j': 10, 'k': 11, 'l': 12, 'm': 13, 'n': 14, 'o': 15, 'p': 16, 'q': 17, 'r': 18, 's': 19, 't': 20, 'u': 21, 'v': 22, 'w': 23, 'x': 24, 'y': 25, 'z': 26}\nalphabet_2 = {'1': 'a', '2': 'b', '3': 'c', '4': 'd', '5': 'e', '6': 'f', '7': 'g', '8': 'h', '9': 'i', '10': 'j', '11': 'k', '12': 'l', '13': 'm', '14': 'n', '15': 'o', '16': 'p', '17': 'q', '18': 'r', '19': 's', '20': 't', '21': 'u', '22': 'v', '23': 'w', '24': 'x', '25': 'y', '26': 'z'}\nz = int(input())\nfor contorr in range(z):\n    (n, q) = list(map(int, input().split()))\n    bloc = list(map(int, input().split()))\n    elo = 0\n    string = ''\n    for i in range(n - 1, -1, -1):\n        if bloc[i] > elo:\n            if elo < q:\n                elo += 1\n                string += '1'\n            else:\n                string += '0'\n        else:\n            string += '1'\n    print(string[::-1])", "for d in range(int(input())):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    a = 0\n    s = ''\n    for i in range(n - 1, -1, -1):\n        if l[i] <= a:\n            s += '1'\n        elif q > a:\n            s += '1'\n            a += 1\n        else:\n            s += '0'\n    print(s[::-1])", "for t in range(int(input())):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.reverse()\n    Q = 0\n    ans = ''\n    for i in range(n):\n        if a[i] <= Q:\n            ans += '1'\n        elif a[i] > Q and Q < q:\n            Q += 1\n            ans += '1'\n        else:\n            ans += '0'\n    ans = ans[::-1]\n    print(ans)", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ans = ''\n    x = 0\n    for i in l[::-1]:\n        if i <= x:\n            ans += '1'\n        elif x < q:\n            x += 1\n            ans += '1'\n        else:\n            ans += '0'\n    print(ans[::-1])", "for d in range(int(input())):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    a = 0\n    s = ''\n    for i in range(n - 1, -1, -1):\n        if l[i] <= a:\n            s += '1'\n        elif q > a:\n            s += '1'\n            a += 1\n        else:\n            s += '0'\n    print(s[::-1])", "for __ in range(int(input())):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    q1 = 0\n    ans = ''\n    for i in range(n - 1, -1, -1):\n        if q1 < a[i]:\n            if q1 < q:\n                q1 += 1\n                ans += '1'\n            else:\n                ans += '0'\n        else:\n            ans += '1'\n    print(ans[::-1])", "for __ in range(int(input())):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    q1 = 0\n    ans = ''\n    for i in range(n - 1, -1, -1):\n        if q1 < a[i]:\n            if q1 < q:\n                q1 += 1\n                ans += '1'\n            else:\n                ans += '0'\n        else:\n            ans += '1'\n    print(ans[::-1])", "t = int(input())\nfor _ in range(t):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = ['0'] * n\n    l_q = 0\n    for i in range(n):\n        a_i = a[-i - 1]\n        if l_q < q and a_i > l_q:\n            l_q += 1\n            b[-i - 1] = '1'\n        elif a_i <= l_q:\n            b[-i - 1] = '1'\n    print(''.join(b))", "from collections import Counter, defaultdict, deque, namedtuple\nfrom functools import lru_cache\nfrom typing import List, Dict\nimport bisect as b\nimport heapq as h\nimport math as m\n\ndef inti():\n    return int(input())\n\ndef ints():\n    return [int(x) for x in input().split()]\n\ndef main_tc():\n    (n, q) = ints()\n    numbers = ints()\n    numbers = numbers[::-1]\n    level = 0\n    take = []\n    for num in numbers:\n        if num <= level:\n            take.append('1')\n        elif level < q:\n            take.append('1')\n            level += 1\n        else:\n            take.append('0')\n    take = take[::-1]\n    answer = ''.join(take)\n    print(answer)\n\ndef main():\n    tc = inti()\n    for _ in range(tc):\n        main_tc()\nmain()", "import sys\nimport math\nT = int(sys.stdin.readline())\n\ndef can_take_all(Q, A):\n    if Q >= len(A):\n        return True\n    for a in A:\n        if Q == 0:\n            return False\n        if a > Q:\n            Q -= 1\n    return True\n\ndef find_suffix(Q, A):\n    if can_take_all(Q, A):\n        return 0\n    begin = 0\n    end = len(A) - 1\n    while begin < end - 1:\n        mid = (begin + end) // 2\n        if can_take_all(Q, A[mid:]):\n            end = mid\n        else:\n            begin = mid\n    return end\n\ndef solve(N, Q, A):\n    end = find_suffix(Q, A)\n    Ans = ''\n    for a in A[:end]:\n        if a <= Q:\n            Ans += '1'\n        else:\n            Ans += '0'\n    Ans += '1' * (N - end)\n    return Ans\nfor _ in range(T):\n    (N, Q) = list(map(int, sys.stdin.readline().split()))\n    A = list(map(int, sys.stdin.readline().split()))\n    print(solve(N, Q, A))", "t = int(input())\nfor _ in range(t):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = ['0'] * n\n    l_q = 0\n    for i in range(n):\n        a_i = a[-i - 1]\n        if l_q < q and a_i > l_q:\n            l_q += 1\n            b[-i - 1] = '1'\n        elif a_i <= l_q:\n            b[-i - 1] = '1'\n    print(''.join(b))", "for i in range(int(input())):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ll = 0\n    a = a[::-1]\n    ans = ''\n    for i in a:\n        if i > ll and ll < q:\n            ans += '1'\n            ll += 1\n        elif i <= q:\n            ans += '1'\n        else:\n            ans += '0'\n    print(ans[::-1])", "for _ in range(int(input())):\n    (n, q) = list(map(int, input().split()))\n    a = [*map(int, input().split())][::-1]\n    lv = 0\n    z = ''\n    for i in range(n):\n        if a[i] > lv and lv < q:\n            z += '1'\n            lv += 1\n        elif a[i] <= q:\n            z += '1'\n        else:\n            z += '0'\n    print(z[::-1])", "import sys\nimport math\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_ls():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef main():\n    for _ in range(int(input())):\n        (n, q) = get_ints()\n        ans = [0] * n\n        ls = get_ls()\n        m = 0\n        for i in range(n - 1, -1, -1):\n            if ls[i] <= m:\n                ans[i] = 1\n            elif m < q:\n                ans[i] = 1\n                m += 1\n        for c in ans:\n            print(c, end='')\n        print()\nmain()", "t = int(input())\nfor _ in range(t):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = ['0'] * n\n    l_q = 0\n    for i in range(n):\n        a_i = a[-i - 1]\n        if l_q < q and a_i > l_q:\n            l_q += 1\n            b[-i - 1] = '1'\n        elif a_i <= l_q:\n            b[-i - 1] = '1'\n    print(''.join(b))", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ans = []\n    q_ = 0\n    for i in range(1, n + 1):\n        if l[-i] > q_:\n            if q_ < q:\n                q_ += 1\n                ans.append('1')\n            else:\n                ans.append('0')\n        else:\n            ans.append('1')\n    ans.reverse()\n    fa = ''\n    for i in ans:\n        fa += i\n    print(fa)", "test = int(input())\n\ndef giveSolution(array, n, q):\n    minQ = [0 for i in range(n)]\n    minQ[n - 1] = 1\n    for i in range(n - 2, -1, -1):\n        if array[i] <= minQ[i + 1]:\n            minQ[i] = minQ[i + 1]\n        else:\n            minQ[i] = 1 + minQ[i + 1]\n    result = []\n    iq = q\n    for i in range(n):\n        if array[i] <= iq:\n            result.append('1')\n        elif minQ[i] <= iq:\n            result.append('1')\n            iq -= 1\n        else:\n            result.append('0')\n    return ''.join(result)\nfor i in range(test):\n    [n, q] = list(map(int, input().split()))\n    array = list(map(int, input().split()))\n    print(giveSolution(array, n, q))", "t = int(input())\n\ndef solve():\n    (n, q) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    q1 = 0\n    b = [0 for i in range(n)]\n    for i in range(n - 1, -1, -1):\n        if lst[i] <= q1:\n            b[i] = 1\n        elif q1 < q:\n            b[i] = 1\n            q1 += 1\n    print(''.join((str(ele) for ele in b)))\nwhile t:\n    solve()\n    t -= 1", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = str()\n    n1 = 0\n    for i in range(n - 1, -1, -1):\n        if a[i] <= n1:\n            s += '1'\n        elif a[i] > n1 and n1 < q:\n            s += '1'\n            n1 += 1\n        elif a[i] > n1 and n1 == q:\n            s += '0'\n    print(s[::-1])", "t = int(input())\nfor _ in range(t):\n    (n, q) = list(map(int, input().split(' ')))\n    contests = list(map(int, input().split(' ')))\n    cur_iq = 0\n    ans = []\n    for contest in contests[::-1]:\n        if contest <= cur_iq:\n            ans.append(1)\n        elif cur_iq < q:\n            ans.append(1)\n            cur_iq += 1\n        else:\n            ans.append(0)\n    print(''.join([str(i) for i in ans[::-1]]))", "t = int(input())\nfor i in range(t):\n    (n, q) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    nowq = 0\n    ans = ['0' for _ in range(n)]\n    for i in range(n - 1, -1, -1):\n        if a[i] > nowq and nowq < q:\n            nowq += 1\n            ans[i] = '1'\n        elif a[i] <= nowq:\n            ans[i] = '1'\n    print(''.join(ans))", "T = int(input())\nfor tc in range(T):\n    (n, q) = map(int, input().split())\n    d = list(map(int, input().split()))\n    s = ['0'] * n\n    count = 0\n    for i in range(n - 1, -1, -1):\n        if d[i] <= count:\n            s[i] = str(1)\n        elif q > count:\n            count += 1\n            s[i] = str(1)\n    res = ''.join(s)\n    print(res)", "def dermy(n, q, a):\n    q1 = 0\n    ans = [''] * n\n    for i in range(n - 1, -1, -1):\n        if a[i] <= q1:\n            ans[i] += '1'\n        elif q1 < q:\n            q1 += 1\n            ans[i] += '1'\n        else:\n            ans[i] += '0'\n    print(''.join(ans))\nfor i in range(int(input())):\n    (n, q) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    dermy(n, q, a)", "def inp():\n    return int(input())\n\ndef strng():\n    return input().strip()\n\ndef jn(x, l):\n    return x.join(map(str, l))\n\ndef strl():\n    return list(input().strip())\n\ndef mul():\n    return map(int, input().strip().split())\n\ndef mulf():\n    return map(float, input().strip().split())\n\ndef seq():\n    return list(map(int, input().strip().split()))\n\ndef ceil(x):\n    return int(x) if x == int(x) else int(x) + 1\n\ndef ceildiv(x, d):\n    return x // d if x % d == 0 else x // d + 1\nfor i in range(inp()):\n    (n, q) = mul()\n    lst = seq()\n    nq = 0\n    fin = ['0' for i in range(n)]\n    for i in range(n):\n        if lst[n - i - 1] > nq:\n            if nq + 1 <= q:\n                nq += 1\n            else:\n                continue\n            fin[n - i - 1] = '1'\n        else:\n            fin[n - i - 1] = '1'\n    print(''.join(fin))", "for t in ' ' * int(input()):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))[::-1]\n    iq = 0\n    s = ''\n    for i in range(n):\n        if l[i] <= iq:\n            s += '1'\n        elif q > iq:\n            s += '1'\n            iq += 1\n        else:\n            s += '0'\n    print(s[::-1])", "t = int(input())\nfor _ in range(t):\n    (n, q) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    ans = ' '\n    count = 0\n    for i in arr[::-1]:\n        if i <= count:\n            ans += '1'\n        elif count < q:\n            count += 1\n            ans += '1'\n        else:\n            ans += '0'\n    x = ans[::-1]\n    print(x)", "t = int(input())\nwhile t:\n    (p, q) = map(int, input().split())\n    s = list(map(int, input().split()))\n    check = 0\n    k = [0] * p\n    for i in range(p - 1, -1, -1):\n        if s[i] <= check:\n            k[i] = 1\n        elif check < q:\n            check += 1\n            k[i] = 1\n        else:\n            k[i] = 0\n    print(''.join((str(i) for i in k)))\n    t -= 1", "for _ in range(int(input())):\n    (n, q) = list(map(int, input().split(' ')))\n    l = list(map(int, input().split(' ')))\n    Q = 0\n    b = []\n    for i in range(n - 1, -1, -1):\n        if l[i] <= Q:\n            b.append(1)\n        elif Q < q:\n            b.append(1)\n            Q += 1\n        else:\n            b.append(0)\n    print(''.join((str(i) for i in b[::-1])))", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    a = [*map(int, input().split())]\n    (s, nq) = (0, 0)\n    b = [0] * n\n    for i in range(n - 1, -1, -1):\n        if a[i] <= nq:\n            b[i] = 1\n        elif nq < q:\n            nq += 1\n            b[i] = 1\n    print(''.join((str(x) for x in b)))", "from collections import deque\nN = int(input())\nfor _ in range(N):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    cr = 0\n    res = [0] * n\n    for i in range(n - 1, -1, -1):\n        if cr < a[i]:\n            if cr < q:\n                cr += 1\n                res[i] = 1\n            else:\n                res[i] = 0\n        else:\n            res[i] = 1\n    print(''.join(map(str, res)))", "for h in range(int(input())):\n    (n, q) = map(int, input().split())\n    v = list(map(int, input().split()))\n    if q >= n:\n        print(n * '1')\n    else:\n        (ct, c, i) = (1, 1, n - 2)\n        while i >= 0 and ct < q:\n            if v[i] > ct:\n                ct += 1\n            c += 1\n            i -= 1\n        if i < 0:\n            print(n * '1')\n        else:\n            i += 1\n            for j in range(i):\n                if v[j] <= q:\n                    print('1', end='')\n                else:\n                    print('0', end='')\n            print(c * '1')", "for kk in range(int(input())):\n    (n, q) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    s = ['0'] * n\n    curr = 0\n    for i in range(n - 1, -1, -1):\n        if curr < l[i]:\n            if curr < q:\n                curr += 1\n                s[i] = '1'\n            else:\n                s[i] = '0'\n        else:\n            s[i] = '1'\n    s1 = ''\n    for i in s:\n        s1 += i\n    print(s1)", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = 0\n    ans = a.copy()\n    if len(a) == 1:\n        print(1)\n    else:\n        for i in range(n - 1, -1, -1):\n            if a[i] <= c:\n                ans[i] = '1'\n            elif a[i] > c and c < q:\n                ans[i] = '1'\n                c += 1\n            else:\n                ans[i] = '0'\n        print(''.join(ans))", "def computeQueries(arr, mid, q):\n    for i in range(mid, len(arr)):\n        if arr[i] > q:\n            q -= 1\n    return q\n\ndef computeGood(l, arr, q):\n    s = ''\n    for i in range(l + 1):\n        s += '1' if arr[i] <= q else '0'\n    return s\n\ndef binarySearch(arr, q):\n    (l, r) = (0, len(arr) - 1)\n    while l <= r:\n        mid = (l + r) // 2\n        query = computeQueries(arr, mid, q)\n        if query < 0:\n            l = mid + 1\n        else:\n            r = mid - 1\n    return computeGood(l - 1, arr, q) + '1' * (n - l)\nfor _ in range(int(input())):\n    (n, q) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    print(binarySearch(a, q))", "def main():\n    T = int(input())\n    for Test in range(T):\n        (n, q) = map(int, input().split())\n        a = list(map(int, input().split()))\n        t = 0\n        ans = [0] * n\n        for i in range(n - 1, -1, -1):\n            if a[i] <= t:\n                ans[i] = 1\n            elif t < q:\n                t += 1\n                ans[i] = 1\n        print(*ans, sep='')\nmain()", "for _ in range(int(input())):\n    (n, q) = map(int, input().strip().split())\n    l = list(map(int, input().strip().split()))\n    l1 = []\n    c = 0\n    for i in reversed(l):\n        if c < i:\n            if c < q:\n                l1.append(1)\n                c += 1\n            else:\n                l1.append(0)\n        else:\n            l1.append(1)\n    for i in reversed(l1):\n        print(i, end='')\n    print()", "t = int(input())\nfor _ in range(t):\n    (n, q) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    arr1 = [0] * (n + 1)\n    curr = 0\n    for i in range(n - 1, -1, -1):\n        if curr < arr[i]:\n            if curr < q:\n                curr += 1\n                arr1[i] = 1\n            else:\n                arr1[i] = 0\n        else:\n            arr1[i] = 1\n    print(*arr1[:-1], sep='')", "t = int(input())\nfor _ in range(t):\n    (n, q) = map(int, input().split(' '))\n    a = list(map(int, input().split(' ')))\n    ans = [0] * n\n    ans[n - 1] = 1\n    curr = 1\n    for i in range(n - 2, -1, -1):\n        if a[i] > curr:\n            if curr < q:\n                curr += 1\n                ans[i] = 1\n        else:\n            ans[i] = 1\n    for e in ans:\n        print(e, end='')\n    print()", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    a = [*map(int, input().split())]\n    (s, nq) = (0, 0)\n    b = [0] * n\n    for i in range(n - 1, -1, -1):\n        if a[i] <= nq:\n            b[i] = 1\n        elif nq < q:\n            nq += 1\n            b[i] = 1\n    for x in b:\n        print(x, end='')\n    print()", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    cur = 0\n    arr = (0,) + tuple(map(int, input().split()))\n    res = [1] * (n + 1)\n    for i in range(n, 0, -1):\n        if cur < arr[i]:\n            if cur < q:\n                cur += 1\n                res[i] = 1\n            else:\n                res[i] = 0\n        else:\n            res[i] = 1\n    print(*res[1:], sep='')", "t = eval(input())\nfor _ in range(t):\n    (n, q) = map(int, input().split())\n    ans = list(map(int, input().split()))\n    ans.reverse()\n    ans1 = [0] * len(ans)\n    q1 = 0\n    for j in range(len(ans)):\n        if q1 < ans[j]:\n            if q1 == q:\n                ans1[j] = 0\n            else:\n                ans1[j] = 1\n                q1 += 1\n        elif q1 >= ans[j]:\n            ans1[j] = 1\n    ans1.reverse()\n    for i in ans1:\n        print(i, end='')\n    print()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = [0 for i in range(n)]\n    ans = 0\n    for i in range(n - 1, -1, -1):\n        if ans < k:\n            b[i] = 1\n            if a[i] > ans:\n                ans += 1\n        elif a[i] <= k:\n            b[i] = 1\n    print(*b, sep='')", "def func():\n    (n, Q) = map(int, input().split())\n    arr = [0]\n    arr += list(map(int, input().split()))\n    ans = [-1] * (n + 1)\n    res = 0\n    for i in range(n, 0, -1):\n        if res < arr[i]:\n            if res < Q:\n                res += 1\n                ans[i] = 1\n            else:\n                ans[i] = 0\n        else:\n            ans[i] = 1\n    for i in range(1, n + 1):\n        print(ans[i], end='')\n    print()\ntc = int(input())\nwhile tc > 0:\n    func()\n    tc -= 1", "out = []\n\ndef f(x, q):\n    for i in range(x, n):\n        if q == 0:\n            return False\n        if a[i] > q:\n            q -= 1\n    return True\nfor _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    q1 = q\n    a = [int(i) for i in input().split()]\n    ans = ['0'] * n\n    l = -1\n    r = n\n    while r - l > 1:\n        m = (r + l) // 2\n        if f(m, q):\n            r = m\n        else:\n            l = m\n    for i in range(n):\n        if i < r:\n            if a[i] <= q:\n                ans[i] = '1'\n        else:\n            ans[i] = '1'\n    out.append(''.join(ans))\nfor i in out:\n    print(i)", "def prnt(data):\n    for i in data:\n        print(i, end='')\n    print()\nfor _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if n <= q:\n        b = [1] * n\n        prnt(b)\n        continue\n    b = [0] * n\n    for i in range(n):\n        if a[i] <= q:\n            b[i] = 1\n    if b.count(1) == 0:\n        for i in range(q):\n            b[i] = 1\n        prnt(b)\n        continue\n    qt = 0\n    for j in range(n - 1, -1, -1):\n        if qt < a[j]:\n            qt += 1\n            b[j] = 1\n        if qt == q:\n            break\n    prnt(b)", "m = lambda : map(int, input().split())\nfor _ in ' ' * int(input()):\n    (n, q) = m()\n    a = list(m())\n    temp = 0\n    s = []\n    for i in range(n - 1, -1, -1):\n        s.append(int(a[i] <= temp or q > temp))\n        temp += a[i] > temp and q > temp\n    print(*s[::-1], sep='')", "from cmath import *\nfrom decimal import *\n\ndef _input():\n    return map(int, input().split())\n\ndef _list():\n    return list(map(int, input().split()))\n\ndef solves():\n    (n, m) = _input()\n    a = _list()\n    ans = []\n    for i in range(n):\n        ans.append(0)\n    i = n - 1\n    cnt = 0\n    while i >= 0:\n        if cnt < a[i]:\n            if cnt == m:\n                ans[i] = 0\n            else:\n                ans[i] = 1\n                cnt += 1\n        else:\n            ans[i] = 1\n        i -= 1\n    for i in ans:\n        print(i, end='')\n    print()\nt = 1\nt = int(input())\nfor _ in range(0, t):\n    solves()", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ans = ['0'] * n\n    iq = 0\n    for i in reversed(range(n)):\n        if l[i] <= iq:\n            ans[i] = '1'\n        elif iq < q:\n            ans[i] = '1'\n            iq = iq + 1\n        else:\n            pass\n    for i in range(n):\n        print(ans[i], end='')\n    print(' ')", "for _ in range(int(input())):\n    (n, q) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    ans = [0] * n\n    c = 0\n    if 333445 == 435454:\n        print('Tanmay')\n    j = 0\n    mc = 0\n    for i in range(n - 1, -1, -1):\n        if mc == q:\n            break\n        if a[i] > mc:\n            c += 1\n            mc += 1\n        ans[i] = 1\n        j = i\n    for i in range(j):\n        if a[i] <= q:\n            ans[i] = 1\n    for i in ans:\n        print(i, end='')\n    print()", "m = lambda : map(int, input().split())\nfor _ in ' ' * int(input()):\n    (n, q) = m()\n    a = list(m())\n    temp = 0\n    s = []\n    for i in range(n - 1, -1, -1):\n        s.append(int(a[i] <= temp or q > temp))\n        temp += a[i] > temp and q > temp\n    print(*s[::-1], sep='')", "for cases in range(int(input())):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.reverse()\n    k = 0\n    ls = []\n    for i in range(n):\n        if l[i] <= k:\n            ls.append(1)\n        elif k < q:\n            k += 1\n            ls.append(1)\n        else:\n            ls.append(0)\n    ls.reverse()\n    for i in range(n):\n        print(ls[i], end='')\n    print('\\n', end='')", "t = int(input())\nfor i in range(t):\n    (t1, t2) = input().split()\n    n = int(t1)\n    q = int(t2)\n    a = list(map(int, input().split()))\n    Q = 0\n    b = []\n    for j in range(n):\n        if Q >= a[n - (j + 1)]:\n            b.append(1)\n        elif Q < a[n - (j + 1)] and Q < q:\n            b.append(1)\n            Q += 1\n        else:\n            b.append(0)\n    b.reverse()\n    for j in range(n):\n        print(b[j], end='')\n    print()", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if n <= q:\n        b = [1] * n\n        for i in range(n):\n            print(b[i], end='')\n        print()\n        continue\n    b = [0] * n\n    for i in range(n):\n        if a[i] <= q:\n            b[i] = 1\n    if b.count(1) == 0:\n        for i in range(q):\n            b[i] = 1\n        for i in range(n):\n            print(b[i], end='')\n        print()\n        continue\n    qt = 0\n    for _ in range(n - 1, -1, -1):\n        if b[_] == 0 and qt < a[_]:\n            qt = qt + 1\n            b[_] = 1\n        elif b[_] == 1 and qt < a[_]:\n            qt = qt + 1\n        if qt == q:\n            break\n    for i in range(n):\n        print(b[i], end='')\n    print()", "def main():\n    t = int(input())\n    for _ in range(t):\n        (n, q) = map(int, input().split())\n        A = list(map(int, input().split()))\n        l = -1\n        r = n + 1\n        ans = ''\n        while r - l > 1:\n            iq = q\n            m = (l + r) // 2\n            cnt = 0\n            s = ''\n            for i in range(m):\n                if A[i] <= iq:\n                    s += '1'\n                    cnt += 1\n                else:\n                    s += '0'\n            for i in range(m, n):\n                cnt += 1\n                s += '1'\n                if A[i] > iq:\n                    iq -= 1\n            if iq >= 0:\n                ans = s\n                r = m\n            else:\n                l = m\n        print(ans)\nmain()", "t = int(input())\nfor _ in range(t):\n    nums = input().split(' ')\n    n = int(nums[0])\n    q = int(nums[1])\n    curr = 0\n    ls = [int(i) for i in input().split(' ')]\n    s = ''\n    for i in range(n - 1, -1, -1):\n        if curr < ls[i] and curr < q:\n            curr += 1\n            s = '1' + s\n        elif curr >= ls[i]:\n            s = '1' + s\n        elif curr < ls[i] and curr == q:\n            s = '0' + s\n    print(s)", "import sys\n\ndef dq(baseCases, merger):\n\n    def solver(state):\n        for (condition, resolver) in baseCases:\n            if condition(state):\n                return resolver(state)\n        return merger(state, solver)\n    return solver\n\ndef find_first_solver_builder(arr, q):\n\n    def is_Okay(v):\n        count = 0\n        for i in range(v, len(arr)):\n            count += int(arr[i] > q - count)\n            if count > q:\n                return False\n        return True\n\n    def find_first_single_step(s, f):\n        (l, r) = s\n        mid = l + (r - l) // 2\n        return f((s[0], mid)) if is_Okay(mid) else f((mid + 1, s[1]))\n\n    def find_first():\n        return dq([(lambda s: s[0] >= s[1], lambda s: s[1])], find_first_single_step)((0, len(arr)))\n    return find_first\nt = int(input())\nwhile t > 0:\n    (n, q) = [int(i) for i in input().split(' ')]\n    levels = [int(i) for i in input().split(' ')]\n    solver = find_first_solver_builder(levels, q)\n    v = solver()\n    for i in range(len(levels)):\n        cur = '1' if i >= v or q >= levels[i] else '0'\n        print(cur, end='')\n    print()\n    t -= 1", "def check(a, q, mid):\n    ans = ''\n    for i in range(len(a)):\n        if i < len(a) - mid:\n            if a[i] > q:\n                ans += '0'\n            else:\n                ans += '1'\n        elif a[i] > q:\n            if q > 0:\n                q -= 1\n                ans += '1'\n            else:\n                return False\n        else:\n            ans += '1'\n    return ans\nfor t in range(int(input())):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    l = 0\n    r = n\n    while r - l > 1:\n        mid = (l + r) // 2\n        curr = check(a, q, mid)\n        if curr != False:\n            l = mid\n        else:\n            r = mid\n    curr = check(a, int(q), r)\n    if curr != False:\n        print(curr)\n    else:\n        print(check(a, int(q), l))", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    a = list(map(int, input().split()))\n    cnt = 0\n    for i in range(n):\n        if a[i] <= q:\n            cnt += 1\n\n    def check(ans):\n        extra = ans - cnt\n        arr = [False] * n\n        index = n - 1\n        while index >= 0:\n            if a[index] > q and extra:\n                extra -= 1\n                arr[index] = True\n            elif a[index] <= q:\n                arr[index] = True\n            index -= 1\n        iq = q\n        for i in range(n):\n            if iq == 0:\n                return (False, arr)\n            if arr[i] and a[i] > iq:\n                iq -= 1\n        return (True, arr)\n    (low, high) = (cnt, n)\n    ans = -1\n    while low <= high:\n        mid = (low + high) // 2\n        t = check(mid)\n        if t[0]:\n            ans = t[1]\n            low = mid + 1\n        else:\n            high = mid - 1\n    print(''.join((str(int(x)) for x in ans)))", "import math\nfor _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    l = list(map(int, input().split()))\n    low = 1\n    high = n\n    c = 0\n    diff = 0\n    s = ''\n    while low <= high:\n        cc = q\n        mid = (low + high) // 2\n        ans = 0\n        ss = [0] * n\n        w = mid\n        kk = n\n        for i in range(n):\n            if l[i] > cc:\n                if w >= n - i:\n                    if cc > 0:\n                        ss[i] = '1'\n                        w -= 1\n                        cc -= 1\n                        ans += 1\n                    else:\n                        kk = i\n                        break\n                else:\n                    ss[i] = '0'\n            else:\n                w -= 1\n                ss[i] = '1'\n                ans += 1\n        if ans >= mid:\n            for j in range(kk, n):\n                ss[j] = '0'\n            s = ss.copy()\n            low = mid + 1\n        else:\n            high = mid - 1\n    print(''.join(s))"]