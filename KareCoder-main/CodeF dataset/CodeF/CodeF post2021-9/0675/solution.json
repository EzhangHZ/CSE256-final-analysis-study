["from functools import lru_cache\nimport sys\nimport io\nimport os\nMOD = 998244353\nsys.setrecursionlimit(5000)\n\ndef main():\n    for _ in range(read_int()):\n        (n, m) = read_int_tuple()\n        a = read_int_list()\n        rg = [[] for _ in range(n)]\n        ss = set(range(n))\n        for _ in range(m):\n            (u, v) = read_int_tuple()\n            rg[v - 1].append(u - 1)\n            ss.discard(u - 1)\n\n        @lru_cache(None)\n        def dfs(u):\n            r = a[u]\n            (s, e) = (1, a[u])\n            book = []\n            for v in rg[u]:\n                (last, end) = dfs(v)\n                if last == 0:\n                    continue\n                book.append((end - last + 2, end + 1))\n            book.sort()\n            for (vs, ve) in book:\n                if vs > e:\n                    (s, e) = (ve - (ve - vs + 1 + e - s + 1) + 1, ve)\n                else:\n                    e += ve - vs + 1\n            return (e - s + 1, e)\n        print(dfs(ss.pop())[1] % MOD)\n\ndef input():\n    return sys.stdin.readline().rstrip('\\r\\n')\n\ndef read_int_list():\n    return list(map(int, input().split()))\n\ndef read_int_tuple():\n    return tuple(map(int, input().split()))\n\ndef read_int():\n    return int(input())\nmain()"]