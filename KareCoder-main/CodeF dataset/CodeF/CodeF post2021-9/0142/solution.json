["import sys\ninput = sys.stdin.readline\nM = 1000000007\n\ndef solve():\n    (n, m, rb, cb, rd, cd) = map(int, input().split())\n    if rd == rb or cd == cb:\n        return 0\n    if rd > rb:\n        if cd > cb:\n            return min(rd - rb, cd - cb)\n        return min(rd - rb, m - cb + m - cd)\n    if cd > cb:\n        return min(cd - cb, n + n - rb - rd)\n    return min(n + n - rb - rd, m + m - cb - cd)\nfor _ in range(int(input())):\n    print(solve())", "def f(n, m, rb, cb, rd, cd):\n    if rb > rd:\n        distX = n - rb + n - rd\n    else:\n        distX = rd - rb\n    if cb > cd:\n        distY = m - cb + m - cd\n    else:\n        distY = cd - cb\n    return min(distY, distX)\nx = int(input())\nc = list()\nfor i in range(x):\n    (n, m, rb, cb, rd, cd) = map(int, input().split())\n    c.append(str(f(n, m, rb, cb, rd, cd)))\nprint('\\n'.join(c))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, m, rb, cb, rd, cd) = map(int, input().split())\n    if rb > rd:\n        ret = n - rb + n - rd\n    else:\n        ret = rd - rb\n    if cb > cd:\n        ret = min(ret, m - cb + m - cd)\n    else:\n        ret = min(ret, cd - cb)\n    print(ret)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, m, rb, cb, rd, cd) = (int(i) for i in input().split())\n    ans = 0\n    if rb > rd and cb > cd:\n        ans = min(n - rb + n - rd, m - cb + m - cd)\n    elif rb > rd:\n        ans = min(n - rb + n - rd, cd - cb)\n    elif cb > cd:\n        ans = min(m - cb + m - cd, rd - rb)\n    else:\n        ans = min(rd - rb, cd - cb)\n    print(ans)", "result = []\nfor _ in range(int(input())):\n    (n, m, y, x, yc, xc) = list(map(int, input().split()))\n    result.append(min(xc - x if xc - x >= 0 else 2 * m - x - xc, yc - y if yc - y >= 0 else 2 * n - y - yc))\nprint('\\n'.join(map(str, result)))", "ans = []\nfor _ in range(int(input())):\n    (n, m, rb, cb, rd, cd) = map(int, input().split())\n    ans.append(min(n - rd + n - rb if rd < rb else rd - rb, m - cd + m - cb if cd < cb else cd - cb))\nprint(*ans, sep='\\n')", "from sys import stdin\n\ndef inpu():\n    return stdin.readline()\nfor t in range(int(inpu())):\n    (ro, col, rb, cb, rd, cd) = map(int, inpu().split())\n    c1 = 0\n    if rb > rd:\n        c1 = ro - rb + (ro - rd)\n    else:\n        c1 = rd - rb\n    c2 = 0\n    if cb > cd:\n        c2 = col - cb + (col - cd)\n    else:\n        c2 = cd - cb\n    print(min(c1, c2))", "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    (n, m, rb, cb, rd, cd) = map(int, sys.stdin.readline().split())\n    ans = 0\n    (tr, tc) = (rd - rb, cd - cb)\n    if tr < 0:\n        tr = 2 * n - rb - rd\n    if tc < 0:\n        tc = 2 * m - cb - cd\n    print(min(tr, tc))", "import sys\ninput = sys.stdin.readline\n\ndef print(*args, end='\\n', sep=' ') -> None:\n    sys.stdout.write(sep.join(map(str, args)) + end)\n\ndef solve() -> None:\n    (n, m, rb, cb, rd, cd) = map(int, input().split())\n    if rb > rd:\n        t = 2 * n - rb - rd\n    else:\n        t = rd - rb\n    if cb > cd:\n        t = min(t, 2 * m - cb - cd)\n    else:\n        t = min(t, cd - cb)\n    print(t)\n\ndef main() -> None:\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "t = int(input())\ntest_case = []\nfor i in range(t):\n    test = map(int, input().split())\n    test_case.append(test)\nfor test in test_case:\n    (n, m, rb, cb, rd, cd) = test\n    if rd > rb and cd > cb:\n        print(min((rd - rb, cd - cb)))\n    elif rd < rb and cd > cb:\n        print(min(rb - rd + 2 * (n - rb), cd - cb))\n    elif rd < rb and cd < cb:\n        print(min(rb - rd + 2 * (n - rb), cb - cd + 2 * (m - cb)))\n    elif rd > rb and cd < cb:\n        print(min(rd - rb, cb - cd + 2 * (m - cb)))\n    else:\n        print(0)", "def f(n, m, rb, cb, rd, cd):\n    if rb > rd:\n        distX = n - rb + n - rd\n    else:\n        distX = rd - rb\n    if cb > cd:\n        distY = m - cb + m - cd\n    else:\n        distY = cd - cb\n    return min(distY, distX)\nx = int(input())\nc = list()\nfor i in range(x):\n    (n, m, rb, cb, rd, cd) = map(int, input().split())\n    c.append(str(f(n, m, rb, cb, rd, cd)))\nprint('\\n'.join(c))", "T = int(input())\ni = 0\ntimeArray = []\nwhile i < T:\n    nArr = input().split()\n    n = list(map(int, nArr))\n    case_one = n[2] <= n[4]\n    case_two = n[3] <= n[5]\n    if case_one and case_two:\n        outTime = min(n[4] - n[2], n[5] - n[3])\n    elif case_one and (not case_two):\n        outTime = min(n[4] - n[2], 2 * n[1] - n[5] - n[3])\n    elif case_two and (not case_one):\n        outTime = min(n[5] - n[3], 2 * n[0] - n[2] - n[4])\n    else:\n        outTime = min(2 * n[0] - n[2] - n[4], 2 * n[1] - n[3] - n[5])\n    timeArray.append(outTime)\n    i += 1\nfor x in timeArray:\n    print(x)", "from sys import stdin\nimport math\nfrom collections import deque\nfrom heapq import heapify, heappop, heappush\nfrom bisect import bisect_left, bisect_right\ninput = stdin.readline\n\ndef ceil(m, n):\n    val = m // n\n    if m % n != 0:\n        return val + 1\n    return val\nfor _ in range(int(input())):\n    (n, m, rb, cb, rd, cd) = map(int, input().split())\n    chances = n * m\n    diffc = cd - cb\n    diffr = rd - rb\n    if diffc >= 0:\n        chances = min(chances, diffc)\n    else:\n        chances = min(chances, m - cd + m - cb)\n    if diffr >= 0:\n        chances = min(chances, diffr)\n    else:\n        chances = min(chances, n - rd + n - rb)\n    print(chances)", "import sys\n\ndef solve(n, m, rb, cb, rd, cd):\n    if rd >= rb:\n        if cd >= cb:\n            return min(abs(rd - rb), abs(cd - cb))\n        else:\n            return min(abs(rd - rb), abs(m - cb) * 2 + abs(cd - cb))\n    elif cd >= cb:\n        return min(abs(n - rb) * 2 + abs(rb - rd), abs(cd - cb))\n    else:\n        return min(abs(n - rb) * 2 + abs(rb - rd), abs(m - cb) * 2 + abs(cd - cb))\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    (n, m, rb, cb, rd, cd) = map(int, sys.stdin.readline().split(' '))\n    t = solve(n, m, rb, cb, rd, cd)\n    print(t)", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    (n, m, r, c, rd, cd) = [int(i) for i in input().split()]\n    d1 = 0\n    d2 = 0\n    if rd < r:\n        d1 = 2 * (n - r) + r - rd\n    else:\n        d1 = rd - r\n    if cd < c:\n        d2 = 2 * (m - c) + c - cd\n    else:\n        d2 = cd - c\n    print(min(d1, d2))", "import sys\ninput = sys.stdin.readline\nnum_test_cases = int(input())\nfor test_case_ittr in range(num_test_cases):\n    (num_rows, num_cols, row, col, target_row, target_col) = [int(x) for x in input().split()]\n    vert_ans = 0\n    if target_row > row:\n        vert_ans = target_row - row\n    elif target_row < row:\n        vert_ans = 2 * (num_rows - row) + row - target_row\n    hor_ans = 0\n    if target_col > col:\n        hor_ans = target_col - col\n    elif target_col < col:\n        hor_ans = 2 * (num_cols - col) + col - target_col\n    ans = min(vert_ans, hor_ans)\n    print(ans)", "x = int(input())\nll = []\nfor i in range(x):\n    y = input('')\n    ly = list(map(int, y.split()))\n    ll.append(ly)\n\ndef diff(i, f, l):\n    if i < f:\n        res = f - i\n    elif i == f:\n        res = 0\n    else:\n        res = l - i + (l - f)\n    return res\nfor ly in ll:\n    a = diff(ly[2], ly[4], ly[0])\n    b = diff(ly[3], ly[5], ly[1])\n    if a <= b:\n        print(a)\n    else:\n        print(b)", "def countTime(n, m, rb, cb, rd, cd):\n    dr = rd - rb if rd >= rb else n - rb + (n - rd)\n    dc = cd - cb if cd >= cb else m - cb + (m - cd)\n    return dr if dr <= dc else dc\nt = int(input())\nans = []\nfor i in range(t):\n    (n, m, rb, cb, rd, cd) = [int(x) for x in input().split()]\n    ans.append(countTime(n, m, rb, cb, rd, cd))\nfor i in ans:\n    print(i)", "import sys\nfrom sys import stdin, stdout\nfrom math import ceil, floor, sqrt, log, log2, log10\nfrom collections import Counter\nfrom typing import runtime_checkable\nint_max = float('inf')\nint_min = -float('inf')\nmod = 10 ** 9 + 7\nANS = []\ninput = stdin.readline\n\ndef solve():\n    pass\nt = int(input())\nfor i in range(t):\n    (n, m, rb, cb, rd, cd) = map(int, input().split())\n    d1 = 0\n    d2 = 0\n    if rd < rb:\n        d1 = 2 * (n - rb) + rb - rd\n    else:\n        d1 = rd - rb\n    if cd < cb:\n        d2 = 2 * (m - cb) + cb - cd\n    else:\n        d2 = cd - cb\n    print(min(d1, d2))", "import sys\nfrom collections import deque\n\ndef g(l, n, f):\n    a = 0\n    x = n - 1\n    while a <= x:\n        m = a + (x - a) // 2\n        if l[m] == f:\n            return m\n        elif l[m] > f:\n            x = m - 1\n        else:\n            a = m + 1\n    return None\n\ndef fun(p, q, m):\n    if p <= q:\n        return q - p\n    else:\n        return m - p + m - q\nfor _ in range(int(sys.stdin.readline())):\n    (n, m, a, b, x, y) = map(int, sys.stdin.readline().split())\n    print(min(fun(a, x, n), fun(b, y, m)))", "res = []\nfor _ in range(int(input())):\n    [n, m, rb, cb, rd, cd] = list(map(int, input().split()))\n    r_cnt = 2 * (n - rb) + (rb - rd) if rb > rd else rd - rb\n    c_cnt = 2 * (m - cb) + (cb - cd) if cb > cd else cd - cb\n    res.append(min(r_cnt, c_cnt))\nfor ans in res:\n    print(ans)", "t = int(input())\nans = []\nfor i in range(t):\n    (n, m, rb, cb, rd, cd) = map(int, input().split())\n    (dr, dc) = (1, 1)\n    (sr, sc) = (rb, cb)\n    time = 0\n    if rb < rd:\n        r_time = rd - rb\n    if rb > rd:\n        r_time = n - rb + n - rd\n    if rb == rd:\n        r_time = 0\n    if cb < cd:\n        c_time = cd - cb\n    if cb > cd:\n        c_time = m - cb + m - cd\n    if cb == cd:\n        c_time = 0\n    ans.append(min(r_time, c_time))\nfor _ in ans:\n    print(_)", "t = int(input())\nans = []\nfor i in range(t):\n    (n, m, rb, cb, rd, cd) = map(int, input().split())\n    (dr, dc) = (1, 1)\n    (sr, sc) = (rb, cb)\n    time = 0\n    if rb < rd:\n        r_time = rd - rb\n    if rb > rd:\n        r_time = n - rb + n - rd\n    if rb == rd:\n        r_time = 0\n    if cb < cd:\n        c_time = cd - cb\n    if cb > cd:\n        c_time = m - cb + m - cd\n    if cb == cd:\n        c_time = 0\n    ans.append(min(r_time, c_time))\nfor _ in ans:\n    print(_)", "t = int(input())\nfl = []\n\ndef mod(a):\n    if a > 0:\n        return a\n    else:\n        return -a\nfor i in range(0, t):\n    l = list(map(int, input().split()))\n    tl = []\n    n = l[0]\n    m = l[1]\n    xs = l[2]\n    ys = l[3]\n    xe = l[4]\n    ye = l[5]\n    f = 0\n    if xs <= xe:\n        tl.append(xe - xs)\n    else:\n        tl.append(n - xe + n - xs)\n    if ys <= ye:\n        tl.append(ye - ys)\n    else:\n        tl.append(m - ys + m - ye)\n    fl.append(min(tl))\nfor i in fl:\n    print(mod(i))", "testNum = int(input())\ni = 0\ntimeArray = []\nwhile i < testNum:\n    inpArr = input().split()\n    inp = list(map(int, inpArr))\n    g_1 = inp[2] <= inp[4]\n    g_2 = inp[3] <= inp[5]\n    if g_1 and g_2:\n        outTime = min(inp[4] - inp[2], inp[5] - inp[3])\n    elif g_1 and (not g_2):\n        outTime = min(inp[4] - inp[2], 2 * inp[1] - inp[5] - inp[3])\n    elif g_2 and (not g_1):\n        outTime = min(inp[5] - inp[3], 2 * inp[0] - inp[2] - inp[4])\n    else:\n        outTime = min(2 * inp[0] - inp[2] - inp[4], 2 * inp[1] - inp[3] - inp[5])\n    timeArray.append(outTime)\n    i += 1\nfor x in timeArray:\n    print(x)", "import math\nimport sys\nimport itertools\nimport fractions\nwtf = sys.stdin.read()\nwtf = wtf.strip().split('\\n')\nfor t in wtf[1:]:\n    (n, m, rb, cb, rd, cd) = map(int, t.split())\n    tmp = []\n    tmp.append(rd - rb if rb <= rd else 2 * n - rb - rd)\n    tmp.append(cd - cb if cb <= cd else 2 * m - cd - cb)\n    print(min(tmp))", "w = int(input())\nl = []\nfor i in range(w):\n    t = list(map(int, input().split()))\n    l.append(t)\nfor i in l:\n    n = i[0]\n    m = i[1]\n    rb = i[2]\n    cb = i[3]\n    rd = i[4]\n    cd = i[5]\n    if rb == rd or cb == cd:\n        print(0)\n    elif cb > cd:\n        if rb > rd:\n            print(min(2 * n - rb - rd, 2 * m - cb - cd))\n        elif rb < rd:\n            print(min(rd - rb, 2 * m - cd - cb))\n    elif cb < cd:\n        if rb > rd:\n            print(min(cd - cb, 2 * n - rb - rd))\n        elif rb < rd:\n            print(min(cd - cb, rd - rb))", "import sys\nfrom sys import stdin, stdout\nfrom math import ceil, floor, sqrt, log, log2, log10\nfrom collections import Counter\nfrom typing import runtime_checkable\nint_max = float('inf')\nint_min = -float('inf')\nmod = 10 ** 9 + 7\nANS = []\ninput = stdin.readline\n\ndef solve():\n    pass\nt = int(input())\nfor i in range(t):\n    (n, m, rb, cb, rd, cd) = map(int, input().split())\n    d1 = 0\n    d2 = 0\n    if rd < rb:\n        d1 = 2 * (n - rb) + rb - rd\n    else:\n        d1 = rd - rb\n    if cd < cb:\n        d2 = 2 * (m - cb) + cb - cd\n    else:\n        d2 = cd - cb\n    print(min(d1, d2))", "n = input()\nn = int(n)\nstorage = list()\nfor i in range(n):\n    e = [int(s) for s in input().split(' ')]\n    storage.append(e)\nfor i in range(n):\n    r = storage[i][0]\n    c = storage[i][1]\n    if storage[i][4] == storage[i][2] or storage[i][5] == storage[i][3]:\n        res = 0\n    if storage[i][4] < storage[i][2] and storage[i][5] < storage[i][3]:\n        rt = r - storage[i][2] + (r - storage[i][4])\n        ct = c - storage[i][3] + (c - storage[i][5])\n        res = min(rt, ct)\n    if storage[i][4] > storage[i][2] and storage[i][5] > storage[i][3]:\n        rt = storage[i][4] - storage[i][2]\n        ct = storage[i][5] - storage[i][3]\n        res = min(rt, ct)\n    if storage[i][4] > storage[i][2] and storage[i][5] < storage[i][3]:\n        rt = storage[i][4] - storage[i][2]\n        ct = c - storage[i][3] + (c - storage[i][5])\n        res = min(rt, ct)\n    if storage[i][4] < storage[i][2] and storage[i][5] > storage[i][3]:\n        rt = r - storage[i][2] + (r - storage[i][4])\n        ct = storage[i][5] - storage[i][3]\n        res = min(rt, ct)\n    print(res)", "cases = int(input())\nfinalstr = ''\nfor case in range(cases):\n    currentcase = input().split(' ')\n    columnlist = []\n    robotpos = []\n    dirtpos = []\n    for (index, newcase) in enumerate(currentcase):\n        if index <= 1:\n            columnlist.append(int(newcase))\n        elif index <= 3:\n            robotpos.append(int(newcase))\n        else:\n            dirtpos.append(int(newcase))\n    time = []\n    if robotpos[0] != dirtpos[0] and robotpos[1] != dirtpos[1]:\n        for i in range(2):\n            if robotpos[i] < dirtpos[i]:\n                time.append(dirtpos[i] - robotpos[i])\n            elif robotpos[i] > dirtpos[i]:\n                time.append(2 * columnlist[i] - robotpos[i] - dirtpos[i])\n        time.sort()\n        finalstr += f'{time[0]}\\n'\n    else:\n        finalstr += f'0\\n'\nprint(finalstr)", "a = int(input())\nsome_list = []\nfor i in range(a):\n    (n, m, x, y, r1, r2) = map(int, input().split())\n    dr = 1\n    dc = 1\n    if x < r1:\n        seconds_1 = r1 - x\n    elif x > r1:\n        seconds_1 = n - x + (n - r1)\n    elif x == r1:\n        seconds_1 = 0\n    if y > r2:\n        seconds_2 = m - y + (m - r2)\n    elif y < r2:\n        seconds_2 = r2 - y\n    elif y == r2:\n        seconds_2 = 0\n    z = min(seconds_1, seconds_2)\n    some_list.append(z)\n    some_list.append('\\n')\nprint(*some_list, sep='')", "t = int(input())\nfor i in range(t):\n    (n, m, rb, cb, rd, cd) = map(int, input().split())\n    if rb == rd or cb == cd:\n        print(0)\n    else:\n        if rd - rb > 0:\n            t1 = rd - rb\n        else:\n            t1 = 2 * (n - rb) + (rb - rd)\n            pass\n        if cd - cb > 0:\n            t2 = cd - cb\n        else:\n            t2 = 2 * (m - cb) + (cb - cd)\n        print(min(t1, t2))", "def solve():\n    (n, m, rb, cb, rd, cd) = map(int, input().split())\n    if rb <= rd:\n        Ox = rd - rb\n    else:\n        Ox = 2 * n - rb - rd\n    if cb <= cd:\n        Oy = cd - cb\n    else:\n        Oy = 2 * m - cb - cd\n    print(min(Ox, Oy))\nfor _ in range(int(input())):\n    solve()", "def solve():\n    inp = map(int, input().split())\n    (n, m, rB, cB, rd, cd) = inp\n    if rd >= rB:\n        sy = rd - rB\n    else:\n        sy = 2 * n - rd - rB\n    if cd >= cB:\n        sx = cd - cB\n    else:\n        sx = 2 * m - cd - cB\n    print(min(sy, sx))\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "x = int(input())\nfor i in range(x):\n    l = list(map(int, input().split()))\n    if l[2] > l[4]:\n        vertical = l[0] - l[4] + (l[0] - l[2])\n    else:\n        vertical = l[4] - l[2]\n    if l[3] > l[5]:\n        horizontal = 2 * l[1] - l[5] - l[3]\n    else:\n        horizontal = l[5] - l[3]\n    print(min(horizontal, vertical))", "for t in range(int(input())):\n    (r, x, a, b, c, d) = map(int, input().split())\n    print(min(c - a if c >= a else 2 * (r - a) + a - c, d - b if d >= b else 2 * (x - b) + b - d))", "for i in range(int(input())):\n    (r, c, a, b, x, y) = map(int, input().split())\n    print(min(y - b if y >= b else 2 * c - (b + y), x - a if x >= a else 2 * r - (a + x)))", "for _ in range(int(input())):\n    (n, m, rb, cb, rd, cd) = map(int, input().split())\n    print(min(rd - rb if rb <= rd else 2 * n - rb - rd, cd - cb if cb <= cd else 2 * m - cb - cd))", "t = int(input())\nfor i in range(t):\n    (n, m, rb, cb, rd, cd) = map(int, input().split(' '))\n    if rb <= rd:\n        val1 = rd - rb\n    else:\n        val1 = 2 * n - rd - rb\n    if cb <= cd:\n        val2 = cd - cb\n    else:\n        val2 = 2 * m - cd - cb\n    print(min(val1, val2))", "t = int(input())\nfor i in range(t):\n    (n, m, rb, cb, rd, cd) = map(int, input().split())\n    if rd >= rb:\n        h = rd - rb\n    else:\n        h = 2 * n - (rb + rd)\n    if cd >= cb:\n        k = cd - cb\n    else:\n        k = 2 * m - (cb + cd)\n    print(min(h, k))", "for _ in range(int(input())):\n    (n, m, rb, cb, rd, cd) = map(int, input().split())\n    t = float('inf')\n    if rb <= rd:\n        t = min(t, rd - rb)\n    else:\n        t = min(t, n - rd + (n - rb))\n    if cb <= cd:\n        t = min(t, cd - cb)\n    else:\n        t = min(t, m - cd + (m - cb))\n    print(t)", "for i in range(int(input())):\n    (n, m, rb, cb, rd, cd) = map(int, input().split())\n    (ans1, ans2) = (rd - rb, cd - cb)\n    if rb > rd:\n        ans1 = 2 * n - rb - rd\n    if cb > cd:\n        ans2 = 2 * m - cb - cd\n    print(min(ans1, ans2))", "for i in range(int(input())):\n    (n, m, rb, cb, rd, cd) = map(int, input().split())\n    if rb == rd or cb == cd:\n        print(0)\n    else:\n        if rb < rd:\n            maxrow = rd - rb\n        else:\n            maxrow = (n - rb) * 2 + (rb - rd)\n        if cb < cd:\n            maxcol = cd - cb\n        else:\n            maxcol = (m - cb) * 2 + (cb - cd)\n        print(min(maxrow, maxcol))", "t = int(input())\nfor i in range(t):\n    (n, m, rx, ry, mx, my) = map(int, input().split())\n    t1x = 0\n    t1y = 0\n    dx = 1\n    dy = 1\n    if mx >= rx:\n        t1x = mx - rx\n    else:\n        t1x = 2 * n - mx - rx\n    if my >= ry:\n        t1y = my - ry\n    else:\n        t1y = 2 * m - my - ry\n    print(min(t1x, t1y))", "t = int(input())\nfor i in range(t):\n    ans = 0\n    (n, m, rb, cb, rd, cd) = [int(l) for l in input().split()]\n    if rb <= rd:\n        x = rd - rb\n    else:\n        x = n - rb + (n - rd)\n    if cb <= cd:\n        y = cd - cb\n    else:\n        y = m - cb + (m - cd)\n    print(min(x, y))", "for _ in range(int(input())):\n    (n, m, rb, cb, rd, cd) = map(int, input().split())\n    if rb == rd or cb == cd:\n        print(0)\n    elif rb < rd and cb < cd:\n        print(min(rd - rb, cd - cb))\n    elif rb < rd and cb > cd:\n        print(min(rd - rb, cb - cd + 2 * (m - cb)))\n    elif rb > rd and cb < cd:\n        print(min(rb - rd + 2 * (n - rb), cd - cb))\n    else:\n        print(min(rb - rd + 2 * (n - rb), cb - cd + 2 * (m - cb)))", "t = int(input())\nfor _ in range(t):\n    (n, m, rb, cb, rd, cd) = map(int, input().split(' '))\n    if rb == rd or cb == cd:\n        print('0')\n        continue\n    if rb < rd:\n        rm = rd - rb\n    else:\n        rm = (n - rb) * 2 + (rb - rd)\n    if cb < cd:\n        cm = cd - cb\n    else:\n        cm = (m - cb) * 2 + (cb - cd)\n    print(min(rm, cm))", "for t in range(int(input())):\n    (n, m, a, b, c, d) = map(int, input().split())\n    print(min(c - a if c >= a else 2 * (n - a) + a - c, d - b if d >= b else 2 * (m - b) + b - d))", "t = int(input())\nfor t1 in range(t):\n    (n, m, rb, cb, rd, cd) = map(int, input().split())\n    maxr = rd - rb if rb <= rd else n - rb + (n - rd)\n    maxc = cd - cb if cb <= cd else m - cb + (m - cd)\n    print(min(maxr, maxc))", "for t in range(int(input())):\n    (n, m, a, b, c, d) = map(int, input().split())\n    print(min(c - a if c >= a else 2 * (n - a) + a - c, d - b if d >= b else 2 * (m - b) + b - d))", "t = int(input())\nfor i in range(0, t):\n    (n, m, rb, cb, rd, cd) = map(int, input().split())\n    if rd >= rb:\n        rt = rd - rb\n    else:\n        rt = abs(n - rb) + abs(n - rd)\n    if cd >= cb:\n        ct = cd - cb\n    else:\n        ct = abs(m - cb) + abs(m - cd)\n    print(ct if ct < rt else rt)", "t = int(input())\nfor _ in range(t):\n    (n, m, r1, c1, r2, c2) = map(int, input().split())\n    (row, col) = (0, 0)\n    if r1 == r2 or c1 == c2:\n        print(0)\n        continue\n    if r1 > r2:\n        row = abs(r1 - n) * 2 + abs(r1 - r2)\n    else:\n        row = r2 - r1\n    if c1 > c2:\n        col = abs(c1 - m) * 2 + abs(c1 - c2)\n    else:\n        col = c2 - c1\n    print(min(row, col))", "test_count = int(input())\nfor i in range(test_count):\n    (n, m, r, c, x, y) = map(int, input().split())\n    moves = 0\n    row_difference = 0\n    column_difference = 0\n    if row_difference == 0:\n        if y - c >= 0:\n            row_difference = y - c\n        else:\n            row_difference = m - c + (m - y)\n    if column_difference == 0:\n        if x - r >= 0:\n            column_difference = x - r\n        else:\n            column_difference = n - r + (n - x)\n    if row_difference <= column_difference:\n        print(row_difference)\n    else:\n        print(column_difference)", "from sys import maxsize\nfor _ in range(int(input())):\n    (n, m, rb, cb, rd, cd) = list(map(int, input().split()))\n    ans = maxsize\n    if rb <= rd:\n        ans = min(ans, rd - rb)\n    else:\n        ans = min(ans, n - rb + (n - rd))\n    if cb <= cd:\n        ans = min(ans, cd - cb)\n    else:\n        ans = min(ans, m - cb + (m - cd))\n    print(ans)", "for _ in range(int(input())):\n    (n, m, x1, y1, x2, y2) = [int(x) for x in input().split()]\n    if x2 >= x1:\n        d1 = x2 - x1\n    else:\n        d1 = 2 * n - x1 - x2\n    if y2 >= y1:\n        d2 = y2 - y1\n    else:\n        d2 = 2 * m - y1 - y2\n    print(min(d1, d2))", "for _ in range(int(input())):\n    (n, m, a, b, c, d) = map(int, input().split())\n    if a <= c:\n        ansr = c - a\n    else:\n        ansr = n - a + n - c\n    if b <= d:\n        ansc = d - b\n    else:\n        ansc = m - b + m - d\n    print(min(ansr, ansc))", "for i in range(int(input())):\n    (r, c, a, b, x, y) = map(int, input().split())\n    print(min(y - b if y >= b else 2 * c - (b + y), x - a if x >= a else 2 * r - (a + x)))", "for _ in range(int(input())):\n    (a, b, c, d, e, f) = map(int, input().split())\n    if d <= f:\n        n = f - d\n    else:\n        n = b - d + (b - f)\n    if c <= e:\n        m = e - c\n    else:\n        m = a - e + (a - c)\n    print(min(n, m))", "t = int(input())\nfor _ in range(t):\n    (n, m, rb, cb, rd, cd) = map(int, input().split())\n    a1 = rd - rb if rd >= rb else n - rd + n - rb\n    a2 = cd - cb if cd >= cb else m - cd + m - cb\n    print(min(a1, a2))", "for _ in range(int(input())):\n    (n, m, rb, cb, rd, cd) = map(int, input().split())\n    ans = []\n    if rb > rd:\n        ans.append(n - rb + (n - rd))\n    else:\n        ans.append(rd - rb)\n    if cb > cd:\n        ans.append(m - cb + (m - cd))\n    else:\n        ans.append(cd - cb)\n    print(min(ans))", "for _ in range(int(input())):\n    (n, m, rb, cb, rd, cd) = map(int, input().split())\n    if rb <= rd:\n        a = rd - rb\n    else:\n        a = 2 * n - rb - rd\n    if cb <= cd:\n        b = cd - cb\n    else:\n        b = 2 * m - cb - cd\n    print(min(a, b))", "t = int(input())\nfor _ in range(t):\n    (n, m, rb, cb, rd, cd) = map(int, input().split())\n    d1 = rd - rb if rd >= rb else 2 * n - rd - rb\n    d2 = cd - cb if cd >= cb else 2 * m - cd - cb\n    print(min(d1, d2))", "t = int(input())\nfor i in range(t):\n    (n, m, rb, cb, rd, cd) = [int(x) for x in input().split()]\n    x_arrive = 0\n    y_arrive = 0\n    if cd - cb >= 0:\n        x_arrive = cd - cb\n    else:\n        x_arrive = 2 * (m - cb) + (cb - cd)\n    if rd - rb >= 0:\n        y_arrive = rd - rb\n    else:\n        y_arrive = 2 * (n - rb) + (rb - rd)\n    print(min(y_arrive, x_arrive))", "t = int(input())\nfor k in range(t):\n    (n, m, a, b, c, d) = map(int, input().split())\n    res = 100000000000\n    if a > c:\n        res = min(res, n - a + n - c)\n    else:\n        res = min(res, n - a - n + c)\n    if b > d:\n        res = min(res, m - b + m - d)\n    else:\n        res = min(res, m - b - m + d)\n    print(res)", "def solve():\n    (n, m, x1, y1, x2, y2) = [int(i) for i in input().split()]\n    if x1 == x2 or y1 == y2:\n        print(0)\n        return\n    inf = 10000000000000\n    a = n - x1 + n - x2\n    b = m - y1 + m - y2\n    if x1 < x2:\n        a = min(a, x2 - x1)\n    if y1 < y2:\n        b = min(b, y2 - y1)\n    if a != inf or b != inf:\n        print(min(a, b))\n        return\nt = int(input())\nfor i in range(t):\n    solve()", "for i in range(int(input())):\n    (n, m, rb, cb, rd, cd) = tuple(map(int, input().split()))\n    if rb == rd or cb == cd:\n        print(0)\n    elif rb < rd and cb < cd:\n        print(min(rd - rb, cd - cb))\n    elif rb > rd and cb > cd:\n        a = min(n - rb + (n - rd), m - cb + (m - cd))\n        print(a)\n    elif rb > rd and cb < cd:\n        print(min(n - rb + (n - rd), cd - cb))\n    elif rb < rd and cb > cd:\n        print(min(rd - rb, m - cb + (m - cd)))", "t = int(input())\nfor _ in range(t):\n    (n, m, rx, ry, dx, dy) = map(int, input().split())\n    if rx == dx or ry == dy:\n        print(0)\n    elif rx < dx and ry < dy:\n        print(min(dx - rx, dy - ry))\n    elif rx < dx:\n        print(min(dx - rx, m - dy + (m - ry)))\n    elif ry < dy:\n        print(min(n - dx + (n - rx), dy - ry))\n    else:\n        print(min(n - dx + (n - rx), m - dy + (m - ry)))", "t = int(input())\nfor _ in range(t):\n    (n, m, rb, cb, rd, cd) = map(int, input().split())\n    d1 = rd - rb if rd >= rb else 2 * n - rd - rb\n    d2 = cd - cb if cd >= cb else 2 * m - cd - cb\n    print(min(d1, d2))", "t = int(input())\nfor _ in range(t):\n    arr = list(map(int, input().split()))\n    (r, c) = (-1, -1)\n    if arr[2] <= arr[4]:\n        r = arr[4] - arr[2]\n    else:\n        r = 2 * arr[0] - arr[2] - arr[4]\n    if arr[3] <= arr[5]:\n        c = arr[5] - arr[3]\n    else:\n        c = 2 * arr[1] - arr[3] - arr[5]\n    print(min(r, c))", "t = int(input())\nfor i in range(t):\n    (n, m, a, b, a1, b1) = list(map(int, input().split()))\n    if a <= a1:\n        a2 = a1 - a\n    else:\n        a2 = n - a + n - a1\n    if b <= b1:\n        b2 = b1 - b\n    else:\n        b2 = m - b + m - b1\n    print(min(a2, b2))", "for i in range(int(input())):\n    (n, m, rb, cb, rd, cd) = map(int, input().split())\n    (ans1, ans2) = (rd - rb, cd - cb)\n    if rb > rd:\n        ans1 = 2 * n - rb - rd\n    if cb > cd:\n        ans2 = 2 * m - cb - cd\n    print(min(ans1, ans2))", "for _ in range(int(input())):\n    (n, m, r1, c1, r2, c2) = map(int, input().split())\n    x = r2 - r1\n    y = c2 - c1\n    if x >= 0 and y >= 0:\n        print(min(x, y))\n    elif x < 0 and y < 0:\n        a = n - r1 + n - r2\n        b = m - c1 + m - c2\n        print(min(a, b))\n    elif x >= 0 and y < 0:\n        b = m - c1 + m - c2\n        print(min(x, b))\n    elif x < 0 and y >= 0:\n        a = n - r1 + n - r2\n        print(min(y, a))", "for _ in range(int(input())):\n    (n, m, r1, c1, r2, c2) = map(int, input().split())\n    x = r2 - r1\n    y = c2 - c1\n    if x >= 0 and y >= 0:\n        print(min(x, y))\n    elif x < 0 and y < 0:\n        a = n - r1 + n - r2\n        b = m - c1 + m - c2\n        print(min(a, b))\n    elif x >= 0 and y < 0:\n        b = m - c1 + m - c2\n        print(min(x, b))\n    elif x < 0 and y >= 0:\n        a = n - r1 + n - r2\n        print(min(y, a))", "for _ in range(int(input())):\n    (n, m, x, y, a, b) = map(int, input().split())\n    if x > a:\n        d = n - x + (n - a)\n    else:\n        d = a - x\n    if y > b:\n        t = m - y + (m - b)\n    else:\n        t = b - y\n    print(min(d, t))", "t = int(input())\nfor test_case in range(t):\n    (n, m, r_b, c_b, r_d, c_d) = map(int, input().split())\n    if r_b == r_d or c_b == c_d:\n        print(0)\n    else:\n        if c_d > c_b:\n            col_time = c_d - c_b\n        elif c_d < c_b:\n            col_time = m - c_b + m - c_d\n        if r_d > r_b:\n            row_time = r_d - r_b\n        else:\n            row_time = n - r_b + n - r_d\n        if row_time >= col_time:\n            print(col_time)\n        else:\n            print(row_time)", "numberTest = int(input())\nfor _ in range(numberTest):\n    (n, m, a, b, c, d) = map(int, input().split())\n    re1 = 0\n    res2 = 0\n    if a <= c:\n        res1 = c - a\n    else:\n        res1 = 2 * n - a - c\n    if b <= d:\n        res2 = d - b\n    else:\n        res2 = 2 * m - b - d\n    print(min(res1, res2))", "import sys\nfor t in range(int(input())):\n    (n, m, rb, cb, rd, cd) = list(map(int, input().split(' ')))\n    ans = sys.maxsize\n    tmp = cd - cb\n    if tmp > 0:\n        ans = tmp\n    tmp = rd - rb\n    if tmp > 0:\n        ans = min(ans, tmp)\n    if cd - cb == 0 or rd - rb == 0:\n        ans = 0\n    ans = min(ans, m - cb + m - cd, n - rb + n - rd)\n    print(ans)", "for _ in range(int(input())):\n    (n, m, rb, cb, rd, cd) = map(int, input().split())\n    if rb == rd or cb == cd:\n        print(0)\n        continue\n    elif rb < rd and cb < cd:\n        print(min(rd - rb, cd - cb))\n    elif rb < rd and cb > cd:\n        print(min(rd - rb, 2 * m - cb - cd))\n    elif rb > rd and cb < cd:\n        print(min(cd - cb, 2 * n - rb - rd))\n    else:\n        print(min(2 * n - rb - rd, 2 * m - cb - cd))", "for iii in range(int(input())):\n    (n, m, x1, y1, x2, y2) = map(int, input().split())\n    x = 0\n    if x2 >= x1:\n        x = x2 - x1\n    else:\n        x = 2 * (n - x1) + x1 - x2\n    y = 0\n    if y2 >= y1:\n        y = y2 - y1\n    else:\n        y = 2 * (m - y1) + y1 - y2\n    print(min(x, y))", "for _ in range(int(input())):\n    (n, m, rb, cb, rd, cd) = list(map(int, input().split()))\n    if rb <= rd:\n        x = rd - rb\n    else:\n        x = 2 * n - rb - rd\n    if cb <= cd:\n        y = cd - cb\n    else:\n        y = 2 * m - cb - cd\n    print(min(x, y))", "try:\n    for i in range(int(input())):\n        (n, m, xi, yi, xf, yf) = map(int, input().split())\n        t = min(xf - xi if xf >= xi else n - xf + n - xi, yf - yi if yf >= yi else m - yf + m - yi)\n        print(t)\nexcept:\n    print()", "for i in range(int(input())):\n    line = input()\n    (rows, cols, x1, y1, x2, y2) = map(int, line.split(' '))\n    if x2 >= x1:\n        x_value = x2 - x1\n    else:\n        x_value = 2 * rows - (x1 + x2)\n    if y2 >= y1:\n        y_value = y2 - y1\n    else:\n        y_value = 2 * cols - (y1 + y2)\n    ans = min(x_value, y_value)\n    print(ans)", "for i in range(int(input())):\n    line = input()\n    (rows, cols, x1, y1, x2, y2) = map(int, line.split(' '))\n    if x2 >= x1:\n        x_value = x2 - x1\n    else:\n        x_value = 2 * rows - (x1 + x2)\n    if y2 >= y1:\n        y_value = y2 - y1\n    else:\n        y_value = 2 * cols - (y1 + y2)\n    ans = min(x_value, y_value)\n    print(ans)", "import sys\nfrom math import sqrt, gcd\nfrom collections import deque\nsys.setrecursionlimit(10 ** 8)\nI = lambda : int(input())\nS = lambda : input().strip()\nM = lambda : map(int, input().strip().split())\nL = lambda : list(map(int, input().strip().split()))\nmod = 1000000007\nfor i in range(I()):\n    (n, m, rb, cb, rd, cd) = M()\n    if rb == rd or cb == cd:\n        print(0)\n        continue\n    if rb > rd:\n        if cb > cd:\n            print(min(2 * n - rb - rd, 2 * m - cb - cd))\n        else:\n            print(min(2 * n - rb - rd, cd - cb))\n    elif cb > cd:\n        print(min(rd - rb, 2 * m - cb - cd))\n    else:\n        print(min(rd - rb, cd - cb))", "t = int(input())\nfor i in range(t):\n    (n, m, a, b, c, d) = map(int, input().split())\n    l = []\n    if c >= a:\n        l.append(c - a)\n    else:\n        l.append(n - a + (n - c))\n    if d >= b:\n        l.append(d - b)\n    else:\n        l.append(m - b + (m - d))\n    print(min(l))", "def find(n, m, rb, cb, rd, cd):\n    samerow = abs(rb - rd)\n    if rd < rb:\n        samerow = 2 * n - rb - rd\n    samecol = abs(cb - cd)\n    if cd < cb:\n        samecol = 2 * m - cb - cd\n    return min(samerow, samecol)\ncases = int(input())\nfor _ in range(cases):\n    line = input().split()\n    (n, m, rb, cb, rd, cd) = (int(line[0]), int(line[1]), int(line[2]), int(line[3]), int(line[4]), int(line[5]))\n    print(find(n, m, rb, cb, rd, cd))", "import math\ntc = int(input())\nwhile tc != 0:\n    tc = tc - 1\n    (n, m, rb, cb, rd, cd) = [int(x) for x in input().split()]\n    ans = math.inf\n    if rd >= rb:\n        ans = min(ans, rd - rb)\n    else:\n        ans = min(ans, 2 * (n - rb) + rb - rd)\n    if cd >= cb:\n        ans = min(ans, cd - cb)\n    else:\n        ans = min(ans, 2 * (m - cb) + cb - cd)\n    print(ans)", "poctest = int(input())\nfor i in range(poctest):\n    (n, m, zy, zx, by, bx) = map(int, input().split())\n    dx = bx - zx\n    dy = by - zy\n    if dx >= 0:\n        najdux = dx\n    else:\n        najdux = 2 * m - zx - bx\n    if dy >= 0:\n        najduy = dy\n    else:\n        najduy = 2 * n - zy - by\n    print(min(najdux, najduy))", "for _ in range(int(input())):\n    (n, m, rb, cb, rd, cd) = map(int, input().split())\n    print(min((rd if rb <= rd else 2 * n - rd) - rb, (cd if cb <= cd else 2 * m - cd) - cb))", "t = int(input())\nfor i in range(t):\n    (n, m, rb, cb, rd, cd) = list(map(int, input().split(' ')))\n    nr = rd - rb if rd >= rb else 2 * (n - rb) + rb - rd\n    nc = cd - cb if cd >= cb else 2 * (m - cb) + cb - cd\n    print(nr if nr < nc else nc)", "for _ in range(int(input())):\n    (n, m, rb, cb, rd, cd) = map(int, input().split())\n    ans = 999999999999\n    if rb <= rd:\n        ans = min(ans, rd - rb)\n    else:\n        ans = min(ans, 2 * n - rb - rd)\n    if cb <= cd:\n        ans = min(ans, cd - cb)\n    else:\n        ans = min(ans, 2 * m - cb - cd)\n    print(ans)", "for _ in range(int(input())):\n    pos = list(map(int, input().split()))\n    n = pos[0]\n    m = pos[1]\n    x = pos[2]\n    y = pos[3]\n    a = pos[4]\n    b = pos[5]\n    if x == a or y == b:\n        print(0)\n    if a < x and b < y:\n        print(min(n - x + n - a, m - y + m - b))\n    if a < x and y < b:\n        print(min(n - x + n - a, b - y))\n    if x < a and b < y:\n        print(min(a - x, m - y + m - b))\n    if a > x and b > y:\n        print(min(a - x, b - y))", "for i in range(0, int(input())):\n    (n, m, rb, cb, rd, cd) = map(int, input().split())\n    if cb <= cd:\n        if rb <= rd:\n            print(min(rd - rb, cd - cb))\n        else:\n            print(min(2 * n - rb - rd, cd - cb))\n    elif rb <= rd:\n        print(min(2 * m - cd - cb, rd - rb))\n    else:\n        print(min(2 * m - cd - cb, 2 * n - rb - rd))", "css = int(input())\nfor _ in range(css):\n    inputSet = [int(num) for num in input().split()]\n    (n, m) = inputSet[:2]\n    (rb, cb) = inputSet[2:4]\n    (rd, cd) = inputSet[4:]\n    verticalCost = rd - rb if rd >= rb else n - rb + n - rd\n    horizontalCost = cd - cb if cd >= cb else m - cb + m - cd\n    print(min(verticalCost, horizontalCost))", "t = int(input())\nfor k in range(t):\n    (n, m, rb, cb, rd, cd) = [int(x) for x in input().split()]\n    if rb == rd or cb == cd:\n        print(0)\n    else:\n        if rb < rd:\n            rr = rd - rb\n        else:\n            rr = n - rb + (n - rd)\n        if cb < cd:\n            cc = cd - cb\n        else:\n            cc = m - cb + (m - cd)\n        print(min(rr, cc))", "t = int(input())\nfor i in range(t):\n    (dr, dc) = (1, 1)\n    (n, m, rb, cb, rd, cd) = map(int, input().split())\n    time = 100000000000000000000000000\n    if rb > rd:\n        time = min(time, n - rb + n - rd)\n    elif rb == rd:\n        time = 0\n    else:\n        time = min(time, rd - rb)\n    if cb > cd:\n        time = min(time, m - cb + m - cd)\n    elif cb == cd:\n        time = 0\n    else:\n        time = min(time, cd - cb)\n    print(time)", "def solve(rows, cols, init_row, init_col, dirty_row, dirty_col):\n    if init_row <= dirty_row:\n        row_steps = dirty_row - init_row\n    else:\n        row_steps = rows - init_row + (rows - dirty_row)\n    if init_col <= dirty_col:\n        col_steps = dirty_col - init_col\n    else:\n        col_steps = cols - init_col + (cols - dirty_col)\n    return min(row_steps, col_steps)\nN = int(input())\nfor N in range(N):\n    values = [int(x) for x in input().split(' ')]\n    print(solve(*values))", "for _ in range(int(input())):\n    (n, m, rb, cb, rd, cd) = map(int, input().split())\n    (count_r, count_c) = (0, 0)\n    if rb > rd:\n        count_r = n - rb + (n - rd)\n    if rb < rd:\n        count_r = rd - rb\n    if cb > cd:\n        count_c = m - cb + (m - cd)\n    if cd > cb:\n        count_c = cd - cb\n    print(min(count_r, count_c))"]