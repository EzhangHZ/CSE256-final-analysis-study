["import sys\nn = int(sys.stdin.readline())\nfor i in range(n):\n    b = int(sys.stdin.readline())\n    print(b + b // 2 * 2 + b // 3 * 2)", "for s in [*open(0)][1:]:\n    print((n := int(s)) + n // 2 * 2 + 2 * (n // 3))", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    return n + 2 * (n // 2) + 2 * (n // 3)\nfor _ in range(int(input())):\n    print(solve())", "import sys\nsys.setrecursionlimit(10 ** 6)\nfrom collections import Counter, deque, defaultdict\nimport math\nip = sys.stdin.readline\nop = sys.stdout.write\nt = int(ip())\nres = []\nfor _ in range(t):\n    n = int(ip())\n    count = n + n // 2 * 2 + n // 3 * 2\n    res.append(count)\nfor val in res:\n    op(str(val) + '\\n')", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nfor _ in range(inp()):\n    n = inp()\n    k = n // 6\n    m = n % 6\n    ans = k * 16\n    if m == 1:\n        ans += 1\n    elif m == 2:\n        ans += 4\n    elif m == 3:\n        ans += 7\n    elif m == 4:\n        ans += 10\n    elif m == 5:\n        ans += 11\n    print(ans)", "for n in [*map(int, open(0))][1:]:\n    print((n // 3 + n // 2) * 2 + n)", "import sys\ninput = sys.stdin.readline\n\ndef print(*args, end='\\n', sep=' ') -> None:\n    sys.stdout.write(sep.join(map(str, args)) + end)\n\ndef Solve():\n    for t in range(int(input())):\n        n = int(input())\n        print(n + (n // 3 + n // 2) * 2)\nSolve()", "import sys\ninput = sys.stdin.readline\nread_int = lambda : int(input())\nfor _ in range(read_int()):\n    n = read_int()\n    print(n + ((n >> 1) + n // 3 << 1), flush=False)", "for num in [*map(int, open(0))][1:]:\n    print((num // 3 + num // 2) * 2 + num)", "for x in [*map(int, open(0))][1:]:\n    print((x // 3 + x // 2) * 2 + x)", "for n in [*map(int, open(0))][1:]:\n    print((n // 3 + n // 2) * 2 + n)", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    print(n + 2 * (n // 2 + n // 3))", "import sys\nN = int(input())\n\ndef rest(res):\n    if res == 0:\n        return 0\n    if res == 1:\n        return 1\n    if res == 2:\n        return 4\n    if res == 3:\n        return 7\n    if res == 4:\n        return 10\n    if res == 5:\n        return 11\nfor _ in range(N):\n    n = int(sys.stdin.readline())\n    (res, quo) = (n % 6, n // 6)\n    print(quo * 16 + rest(res))", "t = int(input())\nimport sys\nfor i in sys.stdin:\n    n = int(i)\n    print(n + n // 2 * 2 + n // 3 * 2)", "def solve():\n    n = int(input())\n    b = 1\n    print(n + 2 * (n // 2) + 2 * (n // 3))\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "trials = int(input())\nanswer_list = []\nfor x in range(trials):\n    s = int(input())\n    ans = 0\n    mo = s % 6\n    ans = s // 6 * 16\n    if mo == 1:\n        ans += 1\n    if mo == 2:\n        ans += 4\n    if mo == 3:\n        ans += 7\n    if mo == 4:\n        ans += 10\n    if mo == 5:\n        ans += 11\n    answer_list.append(ans)\nfor g in answer_list:\n    print(g)", "def madoka():\n    n = int(input())\n    lst_ans = []\n    for i in range(n):\n        x = int(input())\n        h = x // 3\n        n = x % 3\n        o = h % 2\n        p = h // 2\n        ans = p * 9 + p * 7 + h % 2 * 9 + 1\n        if n == 0:\n            if o == 0:\n                ans = ans - 1\n            else:\n                ans = ans - 3\n        if n == 1:\n            ans = ans\n        if n == 2:\n            if o == 0:\n                ans = ans + 3\n            else:\n                ans = ans + 1\n        lst_ans.append(ans)\n    for t in lst_ans:\n        print(t)\nmadoka()", "import sys\ninput = sys.stdin.readline\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    ans = n + 2 * int(n / 2) + 2 * int(n / 3)\n    print(ans)\n    t -= 1", "for n in [*map(int, open(0))][1:]:\n    print((n // 3 + n // 2) * 2 + n)", "import math\nt = int(input())\nL = []\nfor i in range(t):\n    n = int(input())\n    c = n + 2 * (n // 2 + n // 3)\n    L.append(c)\nfor el in L:\n    print(el)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(n + n // 2 * 2 + n // 3 * 2)", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    n = int(inp())\n    print(n + (n // 2 + n // 3) * 2)\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "t = int(input())\nso = []\nfor _ in range(t):\n    n = int(input())\n    sol = n\n    sol += n // 3 * 2\n    sol += n // 2 * 2\n    so.append(sol)\nfor s in so:\n    print(s)", "import sys\ninput = sys.stdin.readline\n\ndef int_num():\n    return int(input())\n\ndef int_list():\n    return list(map(int, input().split()))\n\ndef str_list():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef instr():\n    return input().strip()\n\ndef invr():\n    return map(int, input().split())\n\ndef solve():\n    n = int_num()\n    ans = n + n // 2 * 2 + n // 3 * 2\n    print(ans)\n\ndef main():\n    t = int_num()\n    while t:\n        solve()\n        t -= 1\n    return\nmain()", "t = int(input())\nl = []\nfor i in range(0, t):\n    n = int(input())\n    l.append(n)\nfor j in range(0, t):\n    k = l[j] + l[j] // 2 * 2 + l[j] // 3 * 2\n    print(k)", "n = int(input())\nl = []\nfor i in range(0, n):\n    s = int(input())\n    l.append(s)\nfor j in range(0, n):\n    print(l[j] + l[j] // 2 * 2 + l[j] // 3 * 2)", "def solve(n):\n    max_3 = int(n / 3)\n    max_2 = int(n / 2)\n    max_1 = n\n    return max_1 + max_2 * 2 + max_3 * 2\nt = int(input())\nres = []\nfor i in range(t):\n    n = int(input())\n    res.append(solve(n))\nfor i in res:\n    print(i)", "n = int(input())\narr = []\nfor i in range(n):\n    m = int(input())\n    if m % 6 == 1:\n        a = (m - 1) * 8 // 3 + 1\n        arr.append(a)\n    elif m % 6 == 2:\n        a = (m - 2) * 8 // 3 + 4\n        arr.append(a)\n    elif m % 6 == 3:\n        a = (m - 3) * 8 // 3 + 7\n        arr.append(a)\n    elif m % 6 == 4:\n        a = (m - 4) * 8 // 3 + 10\n        arr.append(a)\n    elif m % 6 == 5:\n        a = (m - 5) * 8 // 3 + 11\n        arr.append(a)\n    else:\n        a = m * 8 // 3\n        arr.append(a)\nfor i in range(n):\n    print(arr[i])", "import os.path\nfrom math import gcd, floor, ceil\nfrom collections import *\nimport sys\nimport math\nmod = 1000000007\nINF = float('inf')\n\ndef st():\n    return list(sys.stdin.readline().strip())\n\ndef li():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef mp():\n    return map(int, sys.stdin.readline().split())\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef pr(n):\n    return sys.stdout.write(str(n) + '\\n')\n\ndef prl(n):\n    return sys.stdout.write(str(n) + ' ')\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nfor _ in range(int(input())):\n    n = inp()\n    print(n + 2 * (n // 2) + 2 * (n // 3))", "import sys\nimport math\nfrom collections import Counter\nfrom collections import defaultdict\n\ndef get_ints():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef solve(n):\n    return n + n // 2 * 2 + n // 3 * 2\nt = int(input())\nfor _ in range(t):\n    n = get_ints()\n    print(solve(n[0]))", "for n in [*map(int, open(0))][1:]:\n    print((n // 3 + n // 2) * 2 + n)", "for a in [*map(int, open(0))][1:]:\n    print((a // 3 + a // 2) * 2 + a)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(n + n // 3 * 2 + n // 2 * 2)", "for _ in range(int(input())):\n    x = int(input())\n    print(x + 2 * (x // 2) + 2 * (x // 3))", "for i in range(int(input())):\n    n = int(input())\n    print(2 * (n // 3) + 2 * (n // 2) + n)", "for _ in range(int(input())):\n    n = int(input())\n    x = n + n // 2 * 2 + n // 3 * 2\n    print(x)", "m = int(input())\nfor j in range(0, m):\n    n = int(input())\n    print(2 * (n // 3) + 2 * (n // 2) + n)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    print(n + n // 2 * 2 + n // 3 * 2)", "t = int(input())\nn = []\nf = t\nwhile t > 0:\n    n.append(int(input()))\n    t -= 1\n\ndef num(n):\n    return n + 2 * (n // 2 + n // 3)\nfor i in range(f):\n    print(num(n[i]))", "import math\nimport sys\nfrom collections import deque, OrderedDict, defaultdict\nimport heapq\nfrom collections import Counter\n\ndef inp():\n    return sys.stdin.readline().rstrip()\n\ndef mpp():\n    return map(int, inp().split())\n\ndef lis():\n    return list(mpp())\n\ndef yn(n):\n    if n:\n        return 'YES'\n    else:\n        return 'NO'\n\ndef fn(n):\n    for i in range(n, 0, -1):\n        if i % 3 == 0:\n            return i * 2 + n\n    return n\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(inp())\n        ans = n + n // 3 * 2 + n // 2 * 2\n        print(ans)\nmain()", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    r = n + 2 * (n // 2 + n // 3)\n    sys.stdout.write(str(r) + '\\n')", "for num in [*map(int, open(0))][1:]:\n    print((num // 3 + num // 2) * 2 + num)", "for _ in range(int(input())):\n    n = int(input())\n    result = n\n    result += n // 3 * 2\n    result += n // 2 * 2\n    print(result)", "for t in range(int(input())):\n    n = int(input())\n    print(n + n // 2 * 2 + n // 3 * 2)", "for i in range(int(input())):\n    n = int(input())\n    print(2 * (n // 2 + n // 3) + n)", "for _ in range(int(input())):\n    n = int(input())\n    print(n + n // 2 * 2 + n // 3 * 2)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    print(n + 2 * int(n / 2) + 2 * int(n / 3))", "def count(n):\n    a = n // 3 * 2\n    if n % 2 == 0:\n        return n * 2 + a\n    else:\n        return n * 2 + a - 1\nt = int(input())\nwhile t != 0:\n    n = int(input())\n    print(count(n))\n    t -= 1", "a = int(input())\nfor i in range(a):\n    n = int(input())\n    print(n + n // 2 * 2 + n // 3 * 2)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    print(2 * (n // 3 + n // 2) + n)", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    if n % 2 != 0:\n        print(n + (n - 1) + 2 * (n // 3))\n    if n % 2 == 0:\n        print(2 * n + 2 * (n // 3))\n    t = t - 1", "for _ in range(int(input())):\n    n = int(input())\n    print(n + n // 2 * 2 + n // 3 * 2)", "t = int(input())\nfor t in range(t):\n    n = int(input())\n    ans = (n // 3 + n // 2) * 2 + n\n    print(ans)", "DEBUG = False\n\ndef answer(n):\n    return n + 2 * (n // 2) + 2 * (n // 3)\n\ndef main():\n    if DEBUG:\n        import os\n        os.chdir(os.path.dirname(__file__))\n        global input\n        f = open('Sample.txt')\n        input = lambda : f.readline().strip()\n    T = int(input())\n    for t in range(T):\n        n = int(input())\n        print(answer(n))\nmain()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    ans = n + (n // 2 + n // 3) * 2\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    print(n + 2 * (n // 2) + 2 * (n // 3))", "for h in range(int(input())):\n    n = int(input())\n    print(n + 2 * (n // 3 + n // 2))", "test = int(input())\nfor t in range(test):\n    n = int(input())\n    p = n + 2 * (n // 2) + 2 * (n // 3)\n    print(p)", "for _ in range(int(input())):\n    n = int(input())\n    print(n + n // 2 * 2 + n // 3 * 2)", "case = int(input())\nfor _ in range(case):\n    res = int(input())\n    x = res + res // 2 * 2\n    c = res // 3 * 2\n    print(x + c)", "for _ in range(int(input())):\n    n = int(input())\n    w = n // 3\n    x = n // 2\n    print(n + 4 * w + 2 * (x - w))", "for _ in range(int(input())):\n    n = int(input())\n    ans = n + 2 * (n // 2) + 2 * (n // 3)\n    print(ans)", "from math import factorial as fact, comb as ncr\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom collections import Counter as cnt\nlin = lambda : list(map(int, input().split()))\nnin = lambda : int(input())\nsin = lambda : str(input())\nbi = lambda n: bin(n).replace('0b', '')\nyes = lambda : print('YES')\nno = lambda : print('NO')\nfor pratyush in range(int(input())):\n    n = nin()\n    print(n + n // 2 * 2 + n // 3 * 2)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(n + n // 2 * 2 + n // 3 * 2)", "t = int(input())\nwhile t:\n    n = int(input())\n    print(n + n // 2 * 2 + n // 3 * 2)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    ans = n + n // 3 * 2\n    if n % 2 == 1:\n        ans = ans + n - 1\n    else:\n        ans = ans + n\n    print(ans)", "for tc in range(int(input())):\n    n = int(input())\n    out = n\n    if n == 1:\n        print(1)\n    elif n == 2:\n        print(4)\n    else:\n        if n % 2 == 0:\n            out += n\n        else:\n            out += n - 1\n        if n % 3 == 0:\n            out += 2 * (n / 3)\n        else:\n            out += 2 * ((n - n % 3) / 3)\n        print(int(out))", "def findNum(n):\n    return n + 2 * (n // 2) + 2 * (n // 3)\ncounter = int(input())\nfor i in range(counter):\n    n = int(input())\n    print(findNum(n))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    print(n + n // 2 * 2 + n // 3 * 2)", "for _ in range(int(input())):\n    n = int(input())\n    d2 = d3 = db = ans = 0\n    if n > 3:\n        ans = 7\n    elif n == 1:\n        print(1)\n        continue\n    elif n == 2:\n        print(4)\n        continue\n    elif n == 3:\n        print(7)\n        continue\n    db = n // 6\n    d2 = n // 2\n    d3 = n // 3\n    d2 -= db\n    d3 -= db\n    d2 -= 1\n    d3 -= 1\n    ans += db * 4 + d2 * 2 + d3 * 2 + n - 3\n    print(ans)", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print(2 * math.floor(n / 2) + 2 * math.floor(n / 3) + n)", "import math as m\n\ndef ss(n):\n    c = 0\n    c += n // 3\n    c += n // 2\n    if c == 0:\n        return n\n    return 2 * c + n\nfor _ in range(int(input())):\n    n = int(input())\n    print(ss(n))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(n + 2 * (n // 2) + 2 * (n // 3))", "import math\nfor i in range(int(input())):\n    s = int(input())\n    print(s + s // 2 * 2 + s // 3 * 2)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    nn = int(n / 2)\n    nnn = int(n / 3)\n    print(n + nn * 2 + nnn * 2)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    print(n + (int(n / 2) + int(n / 3)) * 2)", "def calc(n):\n    z = n\n    z += n // 2 * 2\n    z += n // 3 * 2\n    return z\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(calc(n))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    cnt_div_2 = n // 2\n    cnt_dib_3 = n // 3\n    print(n + cnt_dib_3 * 2 + cnt_div_2 * 2)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    print(n + 2 * (n // 2) + 2 * (n // 3))", "def cal(n):\n    ans = n\n    ans += 2 * (n // 3)\n    ans += 2 * (n // 2)\n    return ans\nfor jj in range(int(input())):\n    n = int(input())\n    print(cal(n))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    print(n + 2 * (n // 2) + 2 * (n // 3))", "t = int(input())\nfor t1 in range(t):\n    n = int(input())\n    ans = 0\n    ans += 3 * (n // 2) + 3 * (n // 3) + (n - n // 2 - n // 3)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    print(n + (int(n / 2) + int(n / 3)) * 2)", "import collections\nimport heapq\nimport sys\nimport math\nimport itertools\nimport bisect\nfrom io import BytesIO, IOBase\nimport os\n\ndef valid(i, j, n, m):\n    if i < n and i >= 0 and (j >= 0) and (j < m):\n        return True\n    return False\n\ndef sumn(i, n):\n    return (n - i) * (i + n) // 2\n\ndef sqfun(a, b, c):\n    return (-b + math.sqrt(b * b - 4 * a * c)) / 2 * a\n\ndef value():\n    return tuple(map(int, input().split()))\n\ndef values():\n    return tuple(map(int, sys.stdin.readline().split()))\n\ndef inlst():\n    return [int(i) for i in input().split()]\n\ndef inlsts():\n    return [int(i) for i in sys.stdin.readline().split()]\n\ndef inp():\n    return int(input())\n\ndef inps():\n    return int(sys.stdin.readline())\n\ndef instr():\n    return input()\n\ndef stlst():\n    return [i for i in input().split()]\n\ndef solve():\n    n = inp()\n    return n + 2 * (n // 2) + 2 * (n // 3)\nfor i in range(inp()):\n    print(solve())", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    print(n + 2 * int(n / 2) + 2 * int(n / 3))", "for _ in range(int(input())):\n    n = int(input())\n    print(n + 2 * (n // 2 + n // 3))", "t = int(input())\nwhile t:\n    n = int(input())\n    print(n + n // 2 * 2 + n // 3 * 2)\n    t -= 1", "for t in range(int(input())):\n    n = int(input())\n    print(n + 2 * (n // 2) + 2 * (n // 3))", "for _ in range(int(input())):\n    n = int(input())\n    print(n + n // 2 * 2 + n // 3 * 2)", "inp1 = int(input())\nfor t in range(inp1):\n    n = int(input())\n    cnt = 0\n    print(n + 2 * (n // 2) + 2 * (n // 3))", "for _ in range(int(input())):\n    n = int(input())\n    print(n + 2 * (n // 2 + n // 3))", "t = int(input())\nwhile t:\n    n = int(input())\n    print(n + n // 2 * 2 + n // 3 * 2)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    print(n + 2 * (n // 2 + n // 3))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(n + (n // 2 + n // 3) * 2)", "for _ in range(int(input())):\n    n = int(input())\n    print(n + 2 * (n // 2 + n // 3))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    print(n + n // 2 * 2 + n // 3 * 2)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = n + 2 * (n // 2) + 2 * (n // 3)\n    print(x)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    print(n // 1 + n // 2 * 2 + n // 3 * 2)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    ans = n + 2 * (n // 2 + n // 3)\n    print(ans)"]