["for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    odd = 0\n    even = 0\n    for x in a:\n        if x % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    if even % 2 == 1 and odd % 4 != 2:\n        print('Alice')\n    elif even % 2 == 1:\n        print('Bob')\n    elif 1 <= odd % 4 <= 2:\n        print('Bob')\n    else:\n        print('Alice')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    odd = 0\n    for i in a:\n        if i % 2 == 1:\n            odd += 1\n    r = odd % 4\n    if r == 0 or r == 3:\n        print('Alice')\n    elif r == 2:\n        print('Bob')\n    else:\n        print('Alice' if n % 2 == 0 else 'Bob')", "def main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    even = 0\n    odd = 0\n    for z in arr:\n        if z % 2:\n            odd += 1\n    even = n - odd\n    if odd % 2 == 0:\n        if odd % 4 == 0:\n            return 'Alice'\n        return 'Bob'\n    if odd % 4 == 3:\n        return 'Alice'\n    if even % 2:\n        return 'Alice'\n    return 'Bob'\nfor _ in range(int(input())):\n    print(main())", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in a:\n        if i % 2 == 1:\n            ans += 1\n    if ans % 4 in {0, 3}:\n        print('Alice')\n    elif ans % 4 == 1 and (n - ans) % 2 == 1:\n        print('Alice')\n    else:\n        print('Bob')", "import sys\nreadline = sys.stdin.readline\n\ndef ceil(A, B):\n    return (A + B - 1) // B\nT = int(readline())\nfor _ in range(T):\n    N = int(readline())\n    A = list(map(int, readline().split()))\n    o = e = 0\n    for a in A:\n        if a % 2:\n            o += 1\n        else:\n            e += 1\n    odd = ceil(o, 2)\n    even = ceil(e, 2)\n    alice = ceil(N, 2)\n    if alice == odd + even:\n        if odd % 2 == 0:\n            ans = 'Alice'\n        else:\n            ans = 'Bob'\n    else:\n        ans = 'Alice'\n    print(ans)", "def helper(o, e):\n    if o % 4 in [0, 3]:\n        return True\n    return e % 4 in [1, 3] and o % 4 == 1\ntest = int(input())\nfor t in range(test):\n    n = int(input())\n    A = list(map(int, input().split()))\n    e = 0\n    o = 0\n    for i in A:\n        if i % 2 == 0:\n            e += 1\n        else:\n            o += 1\n    if helper(o, e):\n        print('Alice')\n    else:\n        print('Bob')", "def resolve(stones):\n    evens_num = 0\n    odds_num = 0\n    for item in stones:\n        if item % 2 == 1:\n            odds_num += 1\n        else:\n            evens_num += 1\n    case_id = odds_num % 4\n    if case_id == 0:\n        return True\n    if case_id == 1:\n        if evens_num % 2 == 0:\n            return False\n        else:\n            return True\n    if case_id == 2:\n        return False\n    if case_id == 3:\n        return True\n\ndef read_input():\n    lines_1 = input()\n    lines_2 = input().split(' ')\n    stones = []\n    for item in lines_2:\n        stones.append(int(item))\n    return stones\ncase_num = int(input())\nif not case_num == 0:\n    for index in range(case_num):\n        stones = read_input()\n        res = resolve(stones)\n        if res:\n            print('Alice')\n        else:\n            print('Bob')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = 0\n    for i in a:\n        if i % 2 == 1:\n            l += 1\n    if n % 2 == 0 and l % 4 == 2 or (n % 2 == 1 and l % 4 == 1 or l % 4 == 2):\n        print('Bob')\n    else:\n        print('Alice')", "def IsAliceWin(EvenCount, OddCount):\n    if OddCount % 4 in [0, 3]:\n        return True\n    return EvenCount % 4 in [1, 3] and OddCount % 4 == 1\nfor _ in range(int(input())):\n    (EvenCount, OddCount) = [0, 0]\n    input()\n    for i in list(map(int, input().split())):\n        if i % 2 == 0:\n            EvenCount += 1\n        else:\n            OddCount += 1\n    if IsAliceWin(EvenCount, OddCount):\n        print('Alice')\n    else:\n        print('Bob')", "def IsAliceWin(EvenCount, OddCount):\n    if OddCount % 4 in [0, 3]:\n        return True\n    return EvenCount % 4 in [1, 3] and OddCount % 4 == 1\nfor _ in range(int(input())):\n    (EvenCount, OddCount) = [0, 0]\n    input()\n    for i in list(map(int, input().split())):\n        if i % 2 == 0:\n            EvenCount += 1\n        else:\n            OddCount += 1\n    if IsAliceWin(EvenCount, OddCount):\n        print('Alice')\n    else:\n        print('Bob')", "def Alice(Even, Odd):\n    if Odd % 4 in [0, 3]:\n        return True\n    return Even % 4 in [1, 3] and Odd % 4 == 1\nfor k in range(int(input())):\n    input()\n    (Even, Odd) = [0, 0]\n    p = list(map(int, input().split()))\n    for i in p:\n        if i % 2 == 0:\n            Even += 1\n        else:\n            Odd += 1\n    if Alice(Even, Odd):\n        print('Alice')\n    else:\n        print('Bob')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    for i in a:\n        if i % 2 == 1:\n            c += 1\n    c2 = n - c\n    d = 0\n    x = c // 2\n    y = c2 // 2\n    if c == 0:\n        print('Alice')\n    elif x % 2 == 1 and c % 2 == 1:\n        print('Alice')\n    elif x % 2 == 0 and (c % 2 == 0 or c2 % 2 == 1):\n        print('Alice')\n    else:\n        print('Bob')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    S = [['A', 'B', 'B', 'A'], ['A', 'A', 'B', 'A'], ['A', 'B', 'B', 'A'], ['A', 'A', 'B', 'A']]\n    odd = 0\n    even = 0\n    for el in A:\n        if el % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    if S[even % 4][odd % 4] == 'A':\n        print('Alice')\n    else:\n        print('Bob')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    odd = 0\n    for i in arr:\n        if i % 2 == 1:\n            odd += 1\n    a = odd % 4\n    if a == 0 or a == 3:\n        print('Alice')\n    elif a == 2:\n        print('Bob')\n    else:\n        print('Alice' if n % 2 == 0 else 'Bob')", "t = int(input())\nfor i in range(t):\n    n0 = 0\n    n1 = 0\n    n = int(input())\n    l0 = input().split()\n    for k in l0:\n        if int(k) % 2 == 0:\n            n0 += 1\n        else:\n            n1 += 1\n    if n1 % 4 == 2 or (n1 % 4 == 1 and n0 % 2 == 0):\n        print('Bob')\n    else:\n        print('Alice')", "def evenNumberAddicts(EvenSum, OddSum):\n    if OddSum % 4 in [0, 3]:\n        return True\n    return EvenSum % 4 in [1, 3] and OddSum % 4 == 1\nfor _ in range(int(input())):\n    (EvenSum, OddSum) = [0, 0]\n    input()\n    for i in list(map(int, input().split())):\n        if i % 2 == 0:\n            EvenSum += 1\n        else:\n            OddSum += 1\n    if evenNumberAddicts(EvenSum, OddSum):\n        print('Alice')\n    else:\n        print('Bob')", "import math\nt = int(input())\nfor x in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    even = [i for i in a if i % 2 == 0]\n    odd = [i for i in a if i % 2 == 1]\n    o = len(odd)\n    e = len(even)\n    if o == 0:\n        print('Alice')\n    elif o == 1:\n        if e % 2 == 1:\n            print('Alice')\n        else:\n            print('Bob')\n    elif o == 2:\n        print('Bob')\n    elif o % 2 == 1:\n        if (o + 1) % 4 == 0:\n            print('Alice')\n        elif e % 2 == 0:\n            print('Bob')\n        else:\n            print('Alice')\n    elif o % 2 == 0:\n        if o % 4 == 0:\n            print('Alice')\n        else:\n            print('Bob')", "import math\nt = int(input())\nfor x in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    even = [i for i in a if i % 2 == 0]\n    odd = [i for i in a if i % 2 == 1]\n    o = len(odd)\n    e = len(even)\n    if o % 2 == 0:\n        if o % 4 == 0:\n            print('Alice')\n        else:\n            print('Bob')\n    elif (o + 1) % 4 == 0:\n        print('Alice')\n    elif e % 2 == 0:\n        print('Bob')\n    else:\n        print('Alice')", "from math import ceil\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = {0: 0, 1: 0}\n    for i in a:\n        if i % 2 == 0:\n            f[0] += 1\n        else:\n            f[1] += 1\n    if f[1] == 0:\n        print('Alice')\n    else:\n        if n % 2 == 0:\n            n = n // 2\n        else:\n            n = n // 2 + 1\n        li = []\n        if n % 2 == 0:\n            k = n\n        else:\n            k = n - 1\n        for i in range(0, k + 1, 2):\n            li.append([n - i, i])\n        flag = False\n        for j in li:\n            if j[0] <= ceil(f[0] / 2) and j[1] <= ceil(f[1] / 2):\n                flag = True\n                break\n        if flag == True:\n            print('Alice')\n        else:\n            print('Bob')", "for _ in range(int(input().strip())):\n    n = int(input().strip())\n    l = list(map(int, input().split()))\n    odd = 0\n    for i in range(len(l)):\n        if l[i] % 2:\n            odd += 1\n    c = odd % 4\n    if c == 0 or c == 3:\n        print('Alice')\n    elif c == 2:\n        print('Bob')\n    else:\n        print('Alice' if n % 2 == 0 else 'Bob')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        if l[i] & 1:\n            count += 1\n    if count % 4 == 0 or count % 4 == 3:\n        print('Alice')\n    elif count % 4 == 2:\n        print('Bob')\n    elif n & 1:\n        print('Bob')\n    else:\n        print('Alice')", "for _ in range(int(input())):\n    n = int(input())\n    b = sum([*map(lambda x: int(x) % 2, input().split())])\n    a = n - b\n    print(['Alice', 'Bob'][b % 4 == 2 or not (b % 4 in [0, 3] or a % 2)])", "for _ in range(int(input())):\n    n = int(input())\n    b = sum([*map(lambda x: int(x) % 2, input().split())])\n    a = n - b\n    print(['Alice', 'Bob'][b % 4 == 2 or not (b % 4 in [0, 3] or a % 2)])", "def isAliceWin(Evencount, Oddcount):\n    if Oddcount % 4 in [0, 3]:\n        return True\n    return Evencount % 4 in [1, 3] and Oddcount % 4 == 1\nfor _ in range(int(input())):\n    (EvenCount, OddCount) = [0, 0]\n    input()\n    for i in list(map(int, input().split())):\n        if i % 2 == 0:\n            EvenCount += 1\n        else:\n            OddCount += 1\n    if isAliceWin(EvenCount, OddCount):\n        print('Alice')\n    else:\n        print('Bob')", "for _ in range(int(input())):\n    n = int(input())\n    b = sum([*map(lambda x: int(x) % 2, input().split())])\n    a = n - b\n    print(['Alice', 'Bob'][b % 4 == 2 or not (b % 4 in [0, 3] or a % 2)])", "def IsAliceWin(EvenCount, OddCount):\n    if OddCount % 4 in [0, 3]:\n        return True\n    return EvenCount % 4 in [1, 3] and OddCount % 4 == 1\nfor _ in range(int(input())):\n    (EvenCount, OddCount) = [0, 0]\n    input()\n    for i in list(map(int, input().split())):\n        if i % 2 == 0:\n            EvenCount += 1\n        else:\n            OddCount += 1\n    if IsAliceWin(EvenCount, OddCount):\n        print('Alice')\n    else:\n        print('Bob')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    e = 0\n    o = 0\n    for j in range(n):\n        if a[j] % 2 == 0:\n            e += 1\n        else:\n            o += 1\n    if o % 4 == 0:\n        print('Alice')\n    elif o % 4 == 2:\n        print('Bob')\n    elif o % 4 == 1:\n        if e % 2 == 0:\n            print('Bob')\n        else:\n            print('Alice')\n    elif e % 2 == 0:\n        print('Alice')\n    elif (e + o) % 2 == 0:\n        print('Alice')\n    else:\n        print('Bob')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    seq = list(map(int, input().split()))\n    oddseq = []\n    evenseq = []\n    for k in seq:\n        if k % 2 == 0:\n            evenseq.append(k)\n        else:\n            oddseq.append(k)\n    even = len(evenseq)\n    odd = len(oddseq)\n    asum = 0\n    bsum = 0\n    if even % 2 == 0 and odd % 4 == 0:\n        print('Alice')\n    if even % 2 == 0 and odd % 4 == 1:\n        print('Bob')\n    if even % 2 == 0 and odd % 4 == 2:\n        print('Bob')\n    if even % 2 == 0 and odd % 4 == 3:\n        print('Alice')\n    if even % 2 == 1 and odd % 4 == 0:\n        print('Alice')\n    if even % 2 == 1 and odd % 4 == 1:\n        print('Alice')\n    if even % 2 == 1 and odd % 4 == 2:\n        print('Bob')\n    if even % 2 == 1 and odd % 4 == 3:\n        print('Alice')", "import os\nimport sys\n\ndef read_lines():\n    filename = 'input.txt'\n    if os.path.exists(filename):\n        with open(filename, 'r') as f:\n            lines = f.readlines()\n    else:\n        lines = sys.stdin.readlines()\n    return [line.rstrip('\\n') for line in lines]\n\ndef is_even(num):\n    return num % 2 == 0\n\ndef is_odd(num):\n    return not is_even(num)\n\ndef solve_case(input_case):\n    input_array = [int(x) for x in input_case.split()]\n    evens = 0\n    odds = 0\n    for i in input_array:\n        if is_even(i):\n            evens += 1\n        else:\n            odds += 1\n    evens = evens % 2\n    if odds % 4 == 0:\n        print('Alice')\n    elif odds % 4 == 3:\n        print('Alice')\n    elif odds % 4 == 2:\n        print('Bob')\n    elif odds % 4 == 1:\n        if evens == 1:\n            print('Alice')\n        else:\n            print('Bob')\n\ndef solve():\n    lines = read_lines()\n    for i in range(2, len(lines), 2):\n        input_case = lines[i]\n        solve_case(input_case)\nsolve()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (x, y) = (0, 0)\n    for i in range(n):\n        if a[i] % 2 == 0:\n            x += 1\n        else:\n            y += 1\n    if y % 4 == 2:\n        print('Bob')\n    elif y % 4 == 3:\n        print('Alice')\n    elif y % 4 == 0:\n        print('Alice')\n    elif x % 2 == 0:\n        print('Bob')\n    else:\n        print('Alice')", "import math\nimport _ast\nn = int(input())\nfor i in range(n):\n    m = int(input())\n    even = 0\n    uneven = 0\n    subsequence = list(input().split())\n    for i in subsequence:\n        if int(i) % 2 == 0:\n            even += 1\n        else:\n            uneven += 1\n    if uneven % 4 == 2:\n        print('Bob')\n    elif uneven % 4 == 3 or uneven % 4 == 2 or uneven % 4 == 0:\n        print('Alice')\n    elif uneven % 2 == 1 and even % 2 == 1:\n        print('Alice')\n    else:\n        print('Bob')", "n = int(input())\nfor x in range(0, n):\n    even = 0\n    odd = 0\n    m = int(input())\n    numbers = input()\n    elements = [int(num) for num in numbers.split(' ') if len(num) > 0]\n    for y in range(0, m):\n        if elements[y] % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    if odd % 4 == 2:\n        print('Bob')\n    elif odd % 4 == 3:\n        print('Alice')\n    elif odd % 4 == 0:\n        print('Alice')\n    elif even % 2 == 1:\n        print('Alice')\n    else:\n        print('Bob')", "for _ in range(int(input())):\n    n = int(input())\n    b = sum([*map(lambda x: int(x) % 2, input().split())])\n    a = n - b\n    print(['Alice', 'Bob'][b % 4 == 2 or not (b % 4 in [0, 3] or a % 2)])", "for asd in range(int(input())):\n    n = int(input())\n    items = [int(i) % 2 for i in input().split()]\n    if (items.count(1) % 4 in [0, 3] or items.count(0) % 2 == 1) and items.count(1) % 4 != 2:\n        print('Alice')\n    else:\n        print('Bob')", "for gg in range(int(input())):\n    n = int(input())\n    d = list(map(int, input().split()))\n    (x, y) = (0, 0)\n    for i in range(n):\n        if d[i] % 2 == 0:\n            x += 1\n        else:\n            y += 1\n    if y % 4 == 2:\n        print('Bob')\n    elif y % 4 == 3:\n        print('Alice')\n    elif y % 4 == 0:\n        print('Alice')\n    elif x % 2 == 0:\n        print('Bob')\n    else:\n        print('Alice')", "for _ in range(int(input())):\n    n = int(input())\n    b = sum([*map(lambda x: int(x) % 2, input().split())])\n    a = n - b\n    print(['Alice', 'Bob'][b % 4 == 2 or not (b % 4 in [0, 3] or a % 2)])", "def IsAliceWin(EvenCount, OddCount):\n    if OddCount % 4 in [0, 3]:\n        return True\n    return EvenCount % 4 in [1, 3] and OddCount % 4 == 1\nfor _ in range(int(input())):\n    (EvenCount, OddCount) = [0, 0]\n    input()\n    for i in list(map(int, input().split())):\n        if i % 2 == 0:\n            EvenCount += 1\n        else:\n            OddCount += 1\n    if IsAliceWin(EvenCount, OddCount):\n        print('Alice')\n    else:\n        print('Bob')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    e = 0\n    o = 0\n    for i in a:\n        if i % 2 == 0:\n            e += 1\n        else:\n            o += 1\n    if o % 4 == 1 and e % 2 == 0:\n        print('Bob')\n    elif o % 4 == 2:\n        print('Bob')\n    else:\n        print('Alice')", "n = int(input())\nx = []\n\nclass pointer:\n\n    def __init__(self, list, k):\n        self.list = list\n        self.len = k\nfor i in range(n):\n    (a, b) = (int(input()), input())\n    b = b.split()\n    x.append(pointer(b, a))\nfor i in x:\n    odd = 0\n    even = 0\n    for j in range(i.len):\n        if int(i.list[j]) % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    if odd % 4 == 0 or odd % 4 == 3:\n        print('Alice')\n    else:\n        if even % 2 == 0:\n            odd += 1\n        check = odd % 4\n        if check <= 1:\n            print('Alice')\n        else:\n            print('Bob')", "for _ in range(int(input())):\n    n = int(input())\n    b = sum([*map(lambda x: int(x) % 2, input().split())])\n    a = n - b\n    print(['Alice', 'Bob'][b % 4 == 2 or not (b % 4 in [0, 3] or a % 2)])", "t = int(input())\nm = 1000000000.0 + 7\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    odd = 0\n    even = 0\n    for i in range(0, len(arr)):\n        if arr[i] % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    if odd % 4 == 2:\n        print('Bob')\n    elif odd % 4 == 0:\n        print('Alice')\n    elif odd % 4 == 3:\n        print('Alice')\n    elif even % 2 == 1:\n        print('Alice')\n    else:\n        print('Bob')\nfor _ in range(t):\n    solve()", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    noOfOdds = 0\n    noOfEvens = 0\n    for i in range(n):\n        if arr[i] % 2 == 0:\n            noOfEvens += 1\n        else:\n            noOfOdds += 1\n    res = 'Bob'\n    if noOfEvens == n and n > 0:\n        res = 'Alice'\n    elif noOfOdds > 0:\n        if noOfOdds % 4 == 1:\n            if noOfEvens % 2 != 0:\n                res = 'Alice'\n        elif noOfOdds % 4 == 2:\n            res = 'Bob'\n        elif noOfOdds % 4 == 3:\n            res = 'Alice'\n        else:\n            res = 'Alice'\n    t -= 1\n    print(res)", "t = int(input())\nwinners = ['Alice', 'Bob']\nfor _ in range(t):\n    n = int(input())\n    nums = [int(x) % 2 for x in input().split()]\n    x = nums.count(0)\n    y = nums.count(1)\n    c = y % 4\n    if x % 2 == 0:\n        if c == 0 or c == 3:\n            print(winners[0])\n        else:\n            print(winners[1])\n    elif c == 0 or c == 1 or c == 3:\n        print(winners[0])\n    else:\n        print(winners[1])", "def even_num_addict(a):\n    even = 0\n    odd = 0\n    dp_odd = [1, 2]\n    dp_ev = [3, 4]\n    d = {'Alice': [3, 4], 'Bob': [1, 2]}\n    for i in a:\n        if i % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    if odd % 4 == 0 or odd % 4 == 3 or (odd % 4 == 1 and len(a) % 2 == 0):\n        return 'Alice'\n    else:\n        return 'Bob'\nfor _ in range(int(input())):\n    n = input()\n    a = [int(item) for item in input().split()]\n    print(even_num_addict(a))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(ii) for ii in input().split()]\n    (a1, a2) = (0, 0)\n    for i in a:\n        if i % 2 == 0:\n            a2 += 1\n        else:\n            a1 += 1\n    if a1 == 0:\n        print('Alice')\n        continue\n    if a2 == 0:\n        if (n + 1) // 2 % 2 == 0:\n            print('Alice')\n        else:\n            print('Bob')\n        continue\n    if n == 1:\n        if a[0] % 2 == 0:\n            print('Alice')\n        else:\n            print('Bob')\n        continue\n    if n == 2:\n        if a[0] % 2 == 0 or a[1] % 2 == 0:\n            print('Alice')\n        else:\n            print('Bob')\n        continue\n    if n == 3:\n        if a2 == 0:\n            print('Alice')\n        else:\n            print('Bob')\n        continue\n    if a1 % 4 == 0:\n        print('Alice')\n    elif a1 % 4 == 1:\n        if a2 % 2 == 1:\n            print('Alice')\n        else:\n            print('Bob')\n    elif a1 % 4 == 2:\n        print('Bob')\n    else:\n        print('Alice')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(ii) for ii in input().split()]\n    (a1, a2) = (0, 0)\n    for i in a:\n        if i % 2 == 0:\n            a2 += 1\n        else:\n            a1 += 1\n    if a1 % 4 == 0:\n        print('Alice')\n    elif a1 % 4 == 1:\n        if a2 % 2 == 1:\n            print('Alice')\n        else:\n            print('Bob')\n    elif a1 % 4 == 2:\n        print('Bob')\n    else:\n        print('Alice')", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    odd = 0\n    even = 0\n    for x in nums:\n        if x % 2 == 1:\n            odd += 1\n        else:\n            even += 1\n    if odd % 4 == 0:\n        print('Alice')\n    elif odd % 4 == 1:\n        if even % 2 == 1:\n            print('Alice')\n        else:\n            print('Bob')\n    elif odd % 4 == 2:\n        print('Bob')\n    else:\n        print('Alice')", "def sol():\n    n = int(input())\n    l = list(map(int, input().split()))\n    (odd, even) = (0, 0)\n    for i in l:\n        if i & 1:\n            odd += 1\n        else:\n            even += 1\n    if odd % 4 == 0 or ((odd - 1) % 4 == 0 and n % 2 == 0) or (odd + 1) % 4 == 0:\n        print('Alice')\n    else:\n        print('Bob')\nt = int(input())\nwhile t:\n    sol()\n    t -= 1", "def pickodd(av):\n    for i in range(len(av)):\n        if av[i] % 2 != 0:\n            ans = av.pop(i)\n            return ans\n    ans = av.pop()\n    return ans\n\ndef pickeven(av):\n    for i in range(len(av)):\n        if av[i] % 2 == 0:\n            ans = av.pop(i)\n            return ans\n    ans = av.pop()\n    return ans\nfor i in range(int(input())):\n    tn = int(input())\n    l = [int(i) for i in input().split()]\n    ec = 0\n    oc = 0\n    t = 'a'\n    for i in l:\n        if i % 2 == 0:\n            ec += 1\n        else:\n            oc += 1\n    oc = oc % 4\n    s = 0\n    av = [1 for i in range(oc)]\n    if ec % 2 != 0:\n        av = av + [2]\n    while len(av) != 0:\n        if t == 'a' and s % 2 != 0:\n            s = s + pickodd(av)\n            t = 'b'\n        elif t == 'a' and s % 2 == 0:\n            if oc > 1 and oc % 2 != 0:\n                s = s + pickodd(av)\n                t = 'b'\n            else:\n                s = s + pickeven(av)\n                t = 'b'\n        elif t == 'b' and s % 2 != 0:\n            pickodd(av)\n            t = 'a'\n        elif t == 'b' and s % 2 == 0:\n            pickeven(av)\n            t = 'a'\n        else:\n            print('default something is missing')\n    if s % 2 == 0:\n        print('Alice')\n    else:\n        print('Bob')", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    ji = 0\n    ou = 0\n    for i in a:\n        if i & 1:\n            ji += 1\n        else:\n            ou += 1\n    f = 0\n    if ji % 4 == 2:\n        f = 0\n    elif ji % 4 in [0, 3]:\n        f = 1\n    elif ou & 1:\n        f = 1\n    if f:\n        print('Alice')\n    else:\n        print('Bob')", "for _ in range(int(input())):\n    n = int(input())\n    d = list(map(int, input().split()))\n    Alice = False\n    cnt = {1: 0, 0: 0}\n    for i in d:\n        cnt[i & 1] += 1\n    cnt[1] %= 4\n    cnt[0] %= 2\n    if cnt[1] == 3 or cnt[1] == 0 or (cnt[1] == 1 and cnt[0] == 1):\n        print('Alice')\n    else:\n        print('Bob')", "tasks = int(input())\nfor t in range(tasks):\n    n = int(input())\n    a = list(map(int, input().split()))\n    even = len([x for x in a if x % 2 == 0])\n    odd = n - even\n    result = 'Alice'\n    if odd % 4 == 1 and even % 2 == 0 or odd % 4 == 2:\n        result = 'Bob'\n    print(result)", "t = int(input())\nfor i in range(t):\n    odds = 0\n    evens = 0\n    n = int(input())\n    numbers = [int(s) for s in input().split()]\n    for j in numbers:\n        if j % 2 == 0:\n            evens += 1\n        else:\n            odds += 1\n    if odds == 0:\n        print('Alice')\n    elif odds % 4 == 1:\n        if (odds + evens) % 2 == 0:\n            print('Alice')\n        else:\n            print('Bob')\n    elif odds % 4 == 2:\n        print('Bob')\n    elif odds % 4 == 3:\n        print('Alice')\n    elif odds % 4 == 0:\n        print('Alice')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    o = 0\n    e = 0\n    for i in a:\n        if i % 2 == 0:\n            e += 1\n        else:\n            o += 1\n    r = ''\n    if o == 0:\n        r = 'Alice'\n    elif e == 0:\n        x = o % 4\n        if x == 0 or x == 3:\n            r = 'Alice'\n        else:\n            r = 'Bob'\n    elif e % 2 == 0:\n        x = o % 4\n        if x == 0 or x == 3:\n            r = 'Alice'\n        else:\n            r = 'Bob'\n    elif n % 2 == 0:\n        r = 'Alice'\n    else:\n        o -= 1\n        x = o % 4\n        if x == 0 or x == 3:\n            r = 'Alice'\n        else:\n            r = 'Bob'\n    print(r)", "t = int(input())\nfor i in range(t):\n    input()\n    n = input().split(' ')\n    nums = [int(strings) for strings in n]\n    even = 0\n    odd = 0\n    for numbers in nums:\n        if numbers % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    if odd % 4 == 0:\n        print('Alice')\n    elif odd % 4 == 1:\n        if (odd - even) % 2 == 1:\n            print('Bob')\n        else:\n            print('Alice')\n    elif odd % 4 == 2:\n        print('Bob')\n    else:\n        print('Alice')", "for i in range(int(input())):\n    x = input()\n    m = list(map(int, input().split()))\n    even = [i for i in m if i % 2 == 0]\n    odd = [i for i in m if i % 2]\n    if len(even) % 2 == 0:\n        if len(odd) % 4 == 0 or len(odd) % 4 == 3:\n            print('Alice')\n        else:\n            print('Bob')\n    elif len(odd) % 4 == 2:\n        print('Bob')\n    else:\n        print('Alice')", "def getint():\n    return [int(i) for i in input().split()]\n\ndef get():\n    return int(input())\n\ndef S():\n    for test in range(int(input())):\n        solve()\n\ndef solve():\n    n = get()\n    a = getint()\n    ou = 0\n    ji = 0\n    for i in range(n):\n        if a[i] % 2 == 0:\n            ou += 1\n        else:\n            ji += 1\n    if ou == n:\n        print('Alice')\n        return\n    if n & 1:\n        if ji % 4 == 1 or ji % 4 == 2:\n            print('Bob')\n        else:\n            print('Alice')\n    elif ji % 4 == 2:\n        print('Bob')\n    else:\n        print('Alice')\nS()", "def solve(ecnt, ocnt):\n    k = ocnt % 4\n    p = ecnt % 4\n    if k in [0, 3]:\n        return True\n    if p in [1, 3] and (k == 1) == True:\n        return True\n    else:\n        return False\nfor z in range(int(input())):\n    ecnt = 0\n    ocnt = 0\n    r = int(input())\n    s = list(map(int, input().split()))\n    for i in s:\n        if i % 2 == 0:\n            ecnt += 1\n        else:\n            ocnt += 1\n    if solve(ecnt, ocnt):\n        print('Alice')\n    else:\n        print('Bob')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    xs = [int(x) for x in input().split()]\n    count_odd = 0\n    count_even = 0\n    for s in xs:\n        if s % 2 == 1:\n            count_odd += 1\n        else:\n            count_even += 1\n    if count_even % 2 == 0:\n        if count_odd % 2 == 0:\n            alice_odd = count_odd // 2\n            if alice_odd % 2 == 0:\n                print('Alice')\n            else:\n                print('Bob')\n        else:\n            alice_odd = (count_odd + 1) // 2\n            if alice_odd % 2 == 0:\n                print('Alice')\n            else:\n                print('Bob')\n    elif count_odd % 2 == 0:\n        alice_odd = count_odd // 2\n        if alice_odd % 2 == 0:\n            print('Alice')\n        else:\n            print('Bob')\n    else:\n        print('Alice')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        if a[i] & 1 == 1:\n            c += 1\n    c1 = n - c\n    if c % 4 == 2 or (c % 4 == 1 and c1 % 2 == 0):\n        print('Bob')\n    else:\n        print('Alice')", "for _ in range(int(input())):\n    n = int(input())\n    b = sum([*map(lambda x: int(x) % 2, input().split())])\n    a = n - b\n    print(['Alice', 'Bob'][b % 4 == 2 or not (b % 4 in [0, 3] or a % 2)])", "for _ in range(int(input())):\n    n = int(input())\n    E = list(map(int, input().split()))\n    l = 0\n    for i in E:\n        if i % 2 == 1:\n            l += 1\n    if n % 2 == 0 and l % 4 == 2 or (n % 2 == 1 and l % 4 == 1 or l % 4 == 2):\n        print('Bob')\n    else:\n        print('Alice')", "def sol(l):\n    (odd, even) = (0, 0)\n    for i in l:\n        if i & 1:\n            odd += 1\n        else:\n            even += 1\n    if odd % 4 == 2:\n        print('Bob')\n    elif odd % 4 == 3:\n        print('Alice')\n    elif odd % 4 == 0:\n        print('Alice')\n    elif even % 2 == 1:\n        print('Alice')\n    else:\n        print('Bob')\nt = int(input())\nwhile t:\n    n = int(input())\n    l = list(map(int, input().split()))\n    sol(l)\n    t -= 1", "import sys\ndp = dict()\n\ndef bob(c0, c1, a):\n    if c0 > 0:\n        if c1 > 0:\n            return not alice(c0 - 1, c1, a) or not alice(c0, c1 - 1, a)\n        else:\n            return not alice(c0 - 1, c1, a)\n    elif c1 > 0:\n        return not alice(c0, c1 - 1, a)\n    else:\n        return a != 0\n\ndef alice(c0, c1, a):\n    if (c0, c1, a) in dp:\n        return dp[c0, c1, a]\n    if c0 > 0:\n        if c1 > 0:\n            r = not bob(c0 - 1, c1, a) or not bob(c0, c1 - 1, a ^ 1)\n        else:\n            r = not bob(c0 - 1, c1, a)\n    elif c1 > 0:\n        r = not bob(c0, c1 - 1, a ^ 1)\n    else:\n        r = a == 0\n    dp[c0, c1, a] = r\n    return r\n\ndef solve():\n    inp = sys.stdin.readline\n    n = map(int, inp().split())\n    c = [0, 0]\n    for i in map(int, inp().split()):\n        c[i % 2] += 1\n    if alice(c[0], c[1], 0):\n        print('Alice')\n    else:\n        print('Bob')\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "def inp_arr():\n    return list(map(int, input().strip().split(' ')))\n\ndef inp_int():\n    return int(input())\n\ndef inp_str():\n    return input()\n\ndef solve():\n    (n,) = inp_arr()\n    a = inp_arr()\n    o = 0\n    e = 0\n    for x in a:\n        if x % 2 == 1:\n            o += 1\n        else:\n            e += 1\n    if o % 4 == 0 or (o + 1) % 4 == 0 or (o % 2 == 1 and e % 2 == 1):\n        print('Alice')\n    else:\n        print('Bob')\ntt = inp_int()\nfor t in range(tt):\n    solve()", "for _ in range(int(input())):\n    N = int(input())\n    my_list = list(map(int, input().split()))\n    odd = 0\n    even = 0\n    for num in my_list:\n        if num % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    if odd == 0:\n        print('Alice')\n    elif even == 0:\n        if odd % 4 == 0 or odd % 4 == 3:\n            print('Alice')\n        else:\n            print('Bob')\n    elif odd % 2 != 0 and even % 2 != 0:\n        print('Alice')\n    elif odd % 4 == 0 or odd % 4 == 3:\n        print('Alice')\n    else:\n        print('Bob')", "import math\nN = int(input())\nh = []\nfor i in range(N):\n    n = int(input())\n    k0 = 0\n    k1 = 0\n    a = list(map(int, input().split()))\n    for t in a:\n        if t % 2 == 0:\n            k0 = k0 + 1\n        else:\n            k1 = k1 + 1\n    if k1 == 1:\n        if n % 2 == 1:\n            h.append('Bob')\n        else:\n            h.append('Alice')\n    elif k1 == 0:\n        h.append('Alice')\n    elif k1 % 2 == 1:\n        if math.ceil(k1 / 2) % 2 == 1 and n % 2 == 1:\n            h.append('Bob')\n        else:\n            h.append('Alice')\n    elif k1 % 2 == 0 and k1 % 4 != 0:\n        h.append('Bob')\n    else:\n        h.append('Alice')\nfor t in h:\n    print(t)", "from math import ceil\nfor loop in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    (ce, co) = (0, 0)\n    for i in range(n):\n        if a[i] % 2 == 0:\n            ce += 1\n        else:\n            co += 1\n    qo = co // 2 % 2\n    ro = co % 2\n    re = ce % 2\n    if qo == 0:\n        if ro == 1 and re == 0:\n            print('Bob')\n        else:\n            print('Alice')\n    else:\n        if ro == 1 and re == 0 or (ro == 1 and re == 1):\n            print('Alice')\n        if ro == 0 and re == 1 or (ro == 0 and re == 0):\n            print('Bob')", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    nc = 0\n    for x in a:\n        if x % 2 == 0:\n            c += 1\n        else:\n            nc += 1\n    if c % 2 == 1 and nc % 2 == 1:\n        f = True\n    elif c % 2 == 0 and nc % 2 == 0:\n        if nc % 4 == 0:\n            f = True\n        else:\n            f = False\n    elif c % 2 == 0 and nc % 2 == 1:\n        if nc % 4 == 3:\n            f = True\n        else:\n            f = False\n    elif nc % 4 == 0:\n        f = True\n    else:\n        f = False\n    if f:\n        print('Alice')\n    else:\n        print('Bob')", "def IsAliceWin(EvenCount, OddCount):\n    if OddCount % 4 in [0, 3]:\n        return True\n    return EvenCount % 4 in [1, 3] and OddCount % 4 == 1\nfor _ in range(int(input())):\n    (EvenCount, OddCount) = [0, 0]\n    input()\n    for i in list(map(int, input().split())):\n        if i % 2 == 0:\n            EvenCount += 1\n        else:\n            OddCount += 1\n    if IsAliceWin(EvenCount, OddCount):\n        print('Alice')\n    else:\n        print('Bob')", "from re import L\nfor _ in range(int(input())):\n    a = int(input())\n    b = [int(i) for i in input().split()]\n    (even, odd) = (0, 0)\n    for i in b:\n        if i & 1:\n            odd += 1\n        else:\n            even += 1\n    if odd % 4 == 0:\n        print('Alice')\n    elif odd % 4 == 1:\n        if even % 2:\n            print('Alice')\n        else:\n            print('Bob')\n    elif odd % 4 == 2:\n        print('Bob')\n    elif odd % 4 == 3:\n        print('Alice')", "for _ in range(int(input())):\n    n = int(input())\n    lis = [int(i) for i in input().split()]\n    od = 0\n    for i in lis:\n        if i % 2:\n            od += 1\n    rem = od % 4\n    if rem == 0 or rem == 3:\n        print('Alice')\n    elif rem == 2:\n        print('Bob')\n    elif n % 2 == 0:\n        print('Alice')\n    else:\n        print('Bob')", "from functools import cmp_to_key\nfrom collections import Counter, deque, defaultdict, OrderedDict\nimport math\nfrom bisect import bisect, bisect_left\nimport sys\nimport re\nfrom copy import deepcopy\nMOD = 10 ** 9 + 7\nMAX = -sys.maxsize\nMIN = sys.maxsize\n\nclass get:\n\n    def int():\n        return list(map(int, input().split()))\n\n    def str():\n        return input().split()\n\n    def float():\n        return list(map(float, input().split()))\n\n    def map():\n        return map(int, input().split())\n\ndef sqrt(x):\n    return int(math.sqrt(x)) + 1\n\ndef gcd(*args):\n    result = args[0]\n    for item in args:\n        result = math.gcd(result, item)\n    return result\n\ndef LCM(a, b):\n    return a * b // math.gcd(a, b)\n\ndef isPrime(n):\n    if n == 1:\n        return False\n    for i in range(2, sqrt(n)):\n        if n % i == 0:\n            return False\n    return True\n\ndef print2d(arr):\n    for item in arr:\n        print(*item)\n\ndef solve():\n    n = int(input())\n    a = get.int()\n    n_even = n_odd = 0\n    for i in a:\n        if i % 2:\n            n_odd += 1\n        else:\n            n_even += 1\n    if n_odd % 4 == 2:\n        print('Bob')\n    elif n_odd % 4 == 3 or n_odd % 4 == 0:\n        print('Alice')\n    elif n_even % 2:\n        print('Alice')\n    else:\n        print('Bob')\nt = int(input())\nfor tt in range(t):\n    solve()", "for s in [*open(0)][2::2]:\n    s = [*map(int, s.split())]\n    o = 0\n    for x in s:\n        o += x & 1\n    print(['Bob', 'Alice'][o % 4 == 0 or o % 4 == 3 or (o % 4 == 1 and len(s) % 2 == 0)])", "def diginto(allmode, *cases):\n    valid = list(filter(lambda x: False if x is None else True, cases))\n    if valid:\n        return all(valid) if allmode else any(valid)\n    else:\n        return None\n\ndef game(athand, lefteven, leftodd):\n    if lefteven < 0 or leftodd < 0:\n        return None\n    if leftodd == 0:\n        return athand\n    if (athand, lefteven, leftodd) in gamecache:\n        return gamecache[athand, lefteven, leftodd]\n    else:\n        takeodd = diginto(True, game(not athand, lefteven, leftodd - 2), game(not athand, lefteven - 1, leftodd - 1))\n        takeeven = diginto(True, game(athand, lefteven - 1, leftodd - 1), game(athand, lefteven - 2, leftodd))\n        gamecache[athand, lefteven, leftodd] = diginto(False, takeodd, takeeven)\n        return gamecache[athand, lefteven, leftodd]\ngamecache = {(True, 0, 0): True, (False, 0, 0): False, (True, 1, 0): True, (True, 0, 1): False, (False, 1, 0): False, (False, 0, 1): True}\nnum_of_cases = int(input())\nfor case in range(num_of_cases):\n    n = int(input())\n    odd = len(list(filter(lambda x: x % 2, map(int, input().split()))))\n    even = n - odd\n    if game(True, even, odd):\n        print('Alice')\n    else:\n        print('Bob')", "def devide(x):\n    return x % 2\nfor i in range(int(input())):\n    n = int(input())\n    ori = map(int, input().split())\n    lst = list(map(devide, ori))\n    even = lst.count(0)\n    odd = lst.count(1)\n    if odd % 4 == 0:\n        print('Alice')\n    elif odd % 4 == 1:\n        if even % 2 == 0:\n            print('Bob')\n        else:\n            print('Alice')\n    elif odd % 4 == 2:\n        print('Bob')\n    else:\n        print('Alice')", "x = int(input())\nj = 0\nans = []\n\ndef funx():\n    n = int(input())\n    ai = input().split()\n    ai = [int(x) for x in ai]\n    even_a = [x for x in ai if x % 2 == 0]\n    evens = len(even_a)\n    odds = n - evens\n    if odds % 4 == 2 and evens % 2 == 0:\n        ans.append('Bob')\n    elif odds % 4 == 1 and evens % 2 == 0:\n        ans.append('Bob')\n    elif odds % 4 == 2 and evens % 2 == 1:\n        ans.append('Bob')\n    else:\n        ans.append('Alice')\nfor i in range(x):\n    funx()\n[print(i) for i in ans]", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    w = [int(k) for k in input().split()]\n    (x, y) = (0, 0)\n    for j in w:\n        if j % 2 == 0:\n            x += 1\n        else:\n            y += 1\n    if y % 4 == 2 and x % 2 == 0:\n        print('Bob')\n    elif y % 4 == 3 and x % 2 == 0:\n        print('Alice')\n    elif y % 4 == 0 and x % 2 == 0:\n        print('Alice')\n    elif y % 4 == 1 and x % 2 == 0:\n        print('Bob')\n    elif y % 4 == 0 and x % 2 == 1:\n        print('Alice')\n    elif y % 4 == 2 and x % 2 == 1:\n        print('Bob')\n    elif y % 4 == 3 and x % 2 == 1:\n        print('Alice')\n    elif y % 4 == 1 and x % 2 == 1:\n        print('Alice')", "def solve(A):\n    odd = 0\n    even = 0\n    for i in A:\n        if i % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    if odd == 0:\n        return True\n    odd = odd % 4\n    if even == 0:\n        if odd == 0 or odd == 3:\n            return True\n        else:\n            return False\n    even = even % 2\n    if odd == 0:\n        return True\n    if odd == 1:\n        if even == 0:\n            return False\n        return True\n    if odd == 2:\n        return False\n    if odd == 3:\n        return True\nN = int(input())\nfor _ in range(N):\n    n = int(input())\n    A = [int(x) for x in input().split(' ')]\n    if solve(A):\n        print('Alice')\n    else:\n        print('Bob')", "import sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_iarray():\n    return [int(i) for i in sys.stdin.readline().strip().split()]\n\ndef solve(ne, no, ac):\n    if no == 0 and ne == 0:\n        return not ac\n    if no == 0 and ne == 1:\n        return not ac\n    if no == 1:\n        return ac or ne == 1\n    return solve(ne, no - 2, not ac)\nt = read_int()\nfor _ in range(t):\n    n = read_int()\n    nums = read_iarray()\n    (ne, no, tot) = (0, 0, len(nums))\n    for n in nums:\n        if n % 2 == 0:\n            ne += 1\n        else:\n            no += 1\n    print('Alice' if solve(ne % 2, no, False) else 'Bob')", "def k(ec, oc):\n    if oc % 4 in [0, 3]:\n        return True\n    return ec % 4 in [1, 3] and oc % 4 == 1\nt = int(input())\nfor i in range(t):\n    (ec, oc) = [0, 0]\n    input()\n    for i in list(map(int, input().split())):\n        if i % 2 == 0:\n            ec = ec + 1\n        else:\n            oc = oc + 1\n    if k(ec, oc):\n        print('Alice')\n    else:\n        print('Bob')", "t = int(input())\nN = 120\ndp = [[[False, False] for j in range(N)] for i in range(N)]\nfor i in range(N):\n    if (i + 1) // 2 % 2 == 0:\n        dp[0][i][0] = True\n        dp[0][i][1] = False\n    else:\n        dp[0][i][0] = False\n        dp[0][i][1] = True\n    dp[i][0][0] = True\n    dp[i][0][1] = False\nfor i in range(1, N):\n    for j in range(1, N):\n        for k in range(2):\n            if (j == 0 or dp[i - 1][j - 1][k]) and (i == 1 or dp[i - 2][j][k]):\n                dp[i][j][k] = True\n            if (j == 1 or dp[i][j - 2][1 - k]) and (j == 0 or dp[i - 1][j - 1][1 - k]):\n                dp[i][j][k] = True\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (i, j) = (0, 0)\n    for x in a:\n        if x % 2:\n            j += 1\n        else:\n            i += 1\n    if dp[i][j][0]:\n        print('Alice')\n    else:\n        print('Bob')", "from codecs import BOM_BE\nfrom collections import Counter, defaultdict, deque\nfrom re import L\nimport sys, threading\nfrom tkinter import E\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s)])\n\ndef invr():\n    return map(int, input().split())\nt = inp()\nfor _ in range(t):\n    n = inp()\n    nums = inlt()\n    oddCount = 0\n    evenCount = 0\n    for num in nums:\n        oddCount += num % 2\n        evenCount += 1 - num % 2\n    if oddCount % 2 and evenCount % 2:\n        print('Alice')\n    elif oddCount % 2 == 0 and evenCount % 2 == 0:\n        if oddCount // 2 % 2:\n            print('Bob')\n        else:\n            print('Alice')\n    elif oddCount % 2 == 0 and evenCount % 2:\n        if oddCount // 2 % 2:\n            print('Bob')\n        else:\n            print('Alice')\n    elif oddCount % 2 and evenCount % 2 == 0:\n        if (oddCount // 2 + 1) % 2 == 0:\n            print('Alice')\n        else:\n            print('Bob')", "def one():\n    n = int(input())\n    t = list(map(int, input().split()))\n    o = sum((x % 2 for x in t))\n    e = n - o\n    dp = [[[None, None] for i in range(o + 1)] for j in range(e + 1)]\n    dp[0][0] = [True, False]\n\n    def possible(dp, e, o):\n        if dp[e][o] == [None, None]:\n            if o == 0:\n                p = possible(dp, e - 1, o)\n                dp[e][o][0] = not p[1]\n                dp[e][o][1] = not p[0]\n            elif e == 0:\n                q = possible(dp, e, o - 1)\n                dp[e][o][0] = not q[1 - o % 2]\n                dp[e][o][1] = not q[o % 2]\n            else:\n                p = possible(dp, e - 1, o)\n                q = possible(dp, e, o - 1)\n                dp[e][o][0] = not p[1 - o % 2] or not q[1 - o % 2]\n                dp[e][o][1] = not p[o % 2] or not q[o % 2]\n        return dp[e][o]\n    r = possible(dp, e, o)\n    return r[0]\nt = int(input())\nfor i in range(t):\n    print('Alice' if one() else 'Bob')", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nimport math\nfrom functools import lru_cache\nt = int(input())\n\n@lru_cache(None)\ndef payout(x, y, z, n):\n    if x == n:\n        if y % 2 == 0:\n            return 1\n        else:\n            return 0\n    elif x % 2 == 0:\n        if z == 0:\n            return payout(x + 1, y, z, n)\n        elif z == n - x:\n            return payout(x + 1, y + 1, z - 1, n)\n        else:\n            return max(payout(x + 1, y, z, n), payout(x + 1, y + 1, z - 1, n))\n    elif z == 0:\n        return payout(x + 1, y, z, n)\n    else:\n        (a, b) = (payout(x + 1, y, z, n), payout(x + 1, y, z - 1, n))\n        if z == n - x:\n            return b\n        else:\n            return min(a, b)\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    for i in range(len(arr)):\n        arr[i] = arr[i] % 2\n    s = sum(arr)\n    ans = payout(0, 0, s, n)\n    if ans == 1:\n        print('Alice')\n    else:\n        print('Bob')"]