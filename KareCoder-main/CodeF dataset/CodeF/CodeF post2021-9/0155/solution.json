["import sys\nfrom math import *\nfrom collections import defaultdict, deque\ninput = sys.stdin.readline\nmod = 10 ** 9 + 7\nINF = 1061109567\nN = int(2 * 10 ** 5 + 5)\nLINF = 4557430888798830399\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    idx1 = []\n    idx2 = []\n    for i in range(n):\n        if a[i] & 1:\n            idx1.append(i + 1)\n        else:\n            idx2.append(i + 1)\n    if len(idx1) == 0:\n        print('NO')\n    elif len(idx1) == 1:\n        print('YES')\n        print(idx1[0], idx2[0], idx2[1], sep=' ')\n    elif len(idx1) == 2:\n        if len(idx2) <= 1:\n            print('NO')\n        else:\n            print('YES')\n            print(idx1[0], idx2[0], idx2[1], sep=' ')\n    else:\n        print('YES')\n        print(idx1[0], idx1[1], idx1[2], sep=' ')\nT = int(input())\nfor t in range(T):\n    solve()", "def solve(a):\n    threeOdd = []\n    oneOddTwoEvens = []\n    evenCount = 0\n    oddCount = 0\n    for i in range(len(a)):\n        if a[i] % 2 == 0:\n            if evenCount < 2:\n                oneOddTwoEvens.append(i + 1)\n                evenCount += 1\n        else:\n            if len(threeOdd) < 3:\n                threeOdd.append(i + 1)\n            if len(oneOddTwoEvens) < 3 and oddCount < 1:\n                oneOddTwoEvens.append(i + 1)\n                oddCount += 1\n    if len(threeOdd) == 3:\n        return ['YES', threeOdd]\n    if len(oneOddTwoEvens) == 3:\n        return ['YES', oneOddTwoEvens]\n    return ['NO']\nt = int(input())\noutput = []\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    output.append(solve(a))\nfor answer in output:\n    if len(answer) == 1:\n        print('NO')\n    else:\n        print(answer[0])\n        print(' '.join(map(str, answer[1])))", "def program():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    indices_odd = []\n    indices_even = []\n    answer = ''\n    for i in range(0, len(a)):\n        if a[i] % 2 != 0:\n            indices_odd.append(str(i + 1))\n            if len(indices_odd) == 3:\n                break\n        elif len(indices_even) < 2:\n            indices_even.append(str(i + 1))\n    if len(indices_odd) == 3:\n        for i in range(0, len(indices_odd)):\n            if i == len(indices_odd) - 1:\n                answer = answer + indices_odd[i]\n            else:\n                answer = answer + indices_odd[i] + ' '\n        answers.append(('YES', answer))\n    elif len(indices_odd) >= 1 and len(indices_even) >= 2:\n        for i in range(0, len(indices_even)):\n            answer = answer + indices_even[i] + ' '\n        answer = answer + indices_odd[0]\n        answers.append(('YES', answer))\n    else:\n        answers.append(('NO', ''))\nt = int(input())\nanswers = []\nfor i in range(0, t):\n    program()\nfor i in answers:\n    if i[0] == 'YES':\n        print(i[0])\n        print(i[1])\n    else:\n        print(i[0])", "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    n = int(sys.stdin.readline())\n    l = list(map(int, sys.stdin.readline().split()))\n    res = []\n    e = []\n    o = []\n    for i in range(n):\n        if l[i] % 2 == 0:\n            e.append(i)\n        else:\n            o.append(i)\n    if len(o) >= 3:\n        print('YES')\n        res.append(o[0] + 1)\n        res.append(o[1] + 1)\n        res.append(o[2] + 1)\n        print(*res)\n    elif len(o) and len(e) >= 2:\n        print('YES')\n        res.append(o[0] + 1)\n        res.append(e[0] + 1)\n        res.append(e[1] + 1)\n        print(*res)\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    h = []\n    z = []\n    for a in range(N):\n        if arr[a] % 2 == 0:\n            z.append(a + 1)\n        else:\n            h.append(a + 1)\n    if len(h) > 2:\n        print('YES')\n        print(' '.join(map(str, h[:3])))\n    elif len(h) > 0 and len(z) > 1:\n        print('YES')\n        print(z[0], z[1], h[0])\n    else:\n        print('NO')", "import sys\nt = int(sys.stdin.readline())\nodd = []\neven = []\nfor _ in range(t):\n    sys.stdin.readline()\n    odd.clear()\n    even.clear()\n    for (i, n) in enumerate(map(int, sys.stdin.readline().split())):\n        if n % 2:\n            odd.append(i + 1)\n        else:\n            even.append(i + 1)\n    if len(odd) >= 3:\n        print('YES')\n        print(' '.join(map(str, odd[:3])))\n    elif len(odd) >= 1 and len(even) >= 2:\n        print('YES')\n        print(odd[0], end=' ')\n        print(' '.join(map(str, even[:2])))\n    else:\n        print('NO')", "import math\niter = int(input())\nfor _ in range(iter):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    e = []\n    o = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            e.append(i)\n        else:\n            o.append(i)\n    if len(o) >= 3:\n        print('YES')\n        print(f'{o[0] + 1} {o[1] + 1} {o[2] + 1}')\n    elif len(e) >= 2 and len(o) >= 1:\n        print('YES')\n        print(f'{o[0] + 1} {e[0] + 1} {e[1] + 1}')\n    else:\n        print('NO')", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (e, o) = ([], [])\n    for i in range(n):\n        if a[i] % 2 == 0:\n            e.append(i + 1)\n        else:\n            o.append(i + 1)\n    if o == []:\n        print('NO')\n    elif len(e) == 1 and n == 3:\n        print('NO')\n    else:\n        print('YES')\n        if len(o) >= 3:\n            print(*o[:3])\n        else:\n            print(e[0], e[1], o[0])", "def main():\n    t = int(input())\n    for _ in range(t):\n        res = alg()\n        print(res)\n\ndef alg():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    res = 0\n    odd = list()\n    env = list()\n    for i in range(n):\n        if a[i] % 2 == 1:\n            odd.append(i)\n        else:\n            env.append(i)\n    if len(odd) > 0:\n        if len(odd) == 1:\n            return 'YES\\n{0} {1} {2}'.format(odd[0] + 1, env[0] + 1, env[1] + 1)\n        elif len(odd) == 2:\n            if len(env) >= 2:\n                return 'YES\\n{0} {1} {2}'.format(odd[0] + 1, env[0] + 1, env[1] + 1)\n            else:\n                return 'NO'\n        else:\n            return 'YES\\n{0} {1} {2}'.format(odd[0] + 1, odd[1] + 1, odd[2] + 1)\n    else:\n        return 'NO'\nmain()", "ans = []\nfor i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))[:n]\n    even = 0\n    odd = 0\n    idxe = []\n    idxo = []\n    for j in range(n):\n        if odd == 3:\n            break\n        if lst[j] % 2 != 0:\n            idxo.append(j + 1)\n            odd += 1\n        else:\n            idxe.append(j + 1)\n            even += 1\n    if (odd == 1 or odd == 2) and even >= 2:\n        ans.append(['YES', [idxo[0], idxe[0], idxe[1]]])\n    elif odd == 3:\n        ans.append(['YES', idxo])\n    else:\n        ans.append('NO')\nfor i in range(len(ans)):\n    if ans[i][0] == 'YES':\n        print('YES')\n        print(*ans[i][1])\n    else:\n        print('NO')", "for i in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    odd = []\n    even = []\n    o = 0\n    e = 0\n    for i in range(n):\n        if x[i] % 2 == 0:\n            even.append(i + 1)\n            e += 1\n        else:\n            odd.append(i + 1)\n            o += 1\n    if o > 2:\n        print('YES')\n        print(odd[0], odd[1], odd[2])\n    elif o > 0 and e > 1:\n        print('YES')\n        print(odd[0], even[0], even[1])\n    else:\n        print('NO')", "import os.path\nfrom math import gcd, floor, ceil\nfrom collections import *\nimport sys\nmod = 1000000007\nINF = float('inf')\n\ndef st():\n    return list(sys.stdin.readline().strip())\n\ndef li():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef mp():\n    return map(int, sys.stdin.readline().split())\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef pr(n):\n    return sys.stdout.write(str(n) + '\\n')\n\ndef prl(n):\n    return sys.stdout.write(str(n) + ' ')\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nt = inp()\nfor i in range(t):\n    n = inp()\n    l = li()\n    (k, k1) = (0, 0)\n    (l1, l2) = ([], [])\n    for i in range(n):\n        if l[i] % 2 == 0 and k < 2:\n            l1.append(i + 1)\n            k += 1\n        elif l[i] % 2 != 0 and k1 < 3:\n            l2.append(i + 1)\n            k1 += 1\n    if len(l2) == 3:\n        print('YES')\n        print(*l2)\n    elif len(l1) == 2 and len(l2) >= 1:\n        print('YES')\n        print(l1[0], l1[1], l2[0])\n    else:\n        print('NO')", "t = int(input().strip())\nfor i in range(t):\n    n = int(input().strip())\n    lst = []\n    arr = [int(ele) for ele in input().strip().split()]\n    count = 0\n    odd = []\n    even = []\n    for ele in range(len(arr)):\n        if arr[ele] & 1 == 1:\n            odd.append(ele + 1)\n            count += 1\n        else:\n            even.append(ele + 1)\n        if count == 3:\n            break\n    if count == 0:\n        print('NO')\n    elif count == 3:\n        print('YES')\n        print(f'{odd[0]} {odd[1]} {odd[2]}')\n    elif count == 1:\n        print('YES')\n        print(f'{odd[0]} {even[0]} {even[1]}')\n    elif len(even) == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(f'{odd[0]} {even[0]} {even[1]}')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    even = list()\n    odd = list()\n    for (i, x) in enumerate(a):\n        if x % 2:\n            odd.append(i + 1)\n        else:\n            even.append(i + 1)\n    if len(odd) > 2:\n        print('YES')\n        print(odd[0], odd[1], odd[2])\n    elif len(odd) > 0 and len(even) > 1:\n        print('YES')\n        print(odd[0], even[0], even[1])\n    else:\n        print('NO')", "t = int(input())\nA = []\nfor i in range(t):\n    n = int(input())\n    a = [int(p) for p in input().split()]\n    A.append(a)\nfor i in range(t):\n    arr = A[i]\n    even = [x for x in arr if x % 2 == 0]\n    odd = [x for x in arr if x % 2 == 1]\n    if len(odd) == 0 or (len(odd) == 2 and len(even) == 1):\n        print('NO')\n    else:\n        print('YES')\n        if len(odd) >= 3:\n            for j in range(3):\n                if j < 2:\n                    print(arr.index(odd[j]) + 1, end=' ')\n                    arr[arr.index(odd[j])] = 'x'\n                else:\n                    print(arr.index(odd[j]) + 1)\n        else:\n            print(arr.index(odd[0]) + 1, end=' ')\n            print(arr.index(even[0]) + 1, end=' ')\n            arr[arr.index(even[0])] = 'x'\n            print(arr.index(even[1]) + 1)", "tests = int(input())\nmain_list = []\nfor i in range(tests):\n    input()\n    a = list(map(int, input().split()))\n    main_list.append(a)\nans_list = []\nyes_no = []\nfor i in main_list:\n    even = []\n    odd = []\n    for num in range(len(i)):\n        if i[num] % 2 == 0:\n            even.append(num + 1)\n        else:\n            odd.append(num + 1)\n    if len(odd) >= 3:\n        print('YES')\n        print(f'{odd[0]} {odd[1]} {odd[2]}')\n    elif len(odd) >= 1 and len(even) >= 2:\n        print('YES')\n        print(f'{even[0]} {even[1]} {odd[0]}')\n    else:\n        print('NO')", "def main():\n    _i = int(input())\n    for _ in range(_i):\n        n = int(input().strip('\\r\\n'))\n        a = [int(x) for x in input().strip('\\r\\n').split()]\n        oddidx = [i + 1 for (i, x) in enumerate(a) if x % 2 == 1]\n        evenidx = [i + 1 for (i, x) in enumerate(a) if x % 2 == 0]\n        if len(oddidx) >= 3:\n            print('YES')\n            print(' '.join([str(x) for x in oddidx[:3]]))\n        elif len(evenidx) >= 2 and oddidx:\n            print('YES')\n            print(' '.join([str(x) for x in oddidx[:1] + evenidx[:2]]))\n        else:\n            print('NO')\nmain()", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    cnc = 0\n    i1 = -1\n    i2 = -1\n    i3 = -1\n    cnd = 0\n    i4 = -1\n    i5 = -1\n    i6 = -1\n    for i in range(n):\n        if a[i] % 2 == 0:\n            cnd += 1\n            if i4 == -1:\n                i4 = i\n            elif i5 == -1:\n                i5 = i\n            else:\n                i6 = i\n        else:\n            cnc += 1\n            if i1 == -1:\n                i1 = i\n            elif i2 == -1:\n                i2 = i\n            else:\n                i3 = i\n    if cnc == 0 or (cnc <= 2 and cnd <= 1):\n        print('NO')\n    else:\n        print('YES')\n        if cnc >= 3:\n            print(i1 + 1, i2 + 1, i3 + 1)\n        else:\n            print(i1 + 1, i4 + 1, i5 + 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    odds = []\n    evens = []\n    for i in range(len(arr)):\n        if arr[i] % 2 == 0:\n            evens.append(i + 1)\n        else:\n            odds.append(i + 1)\n    if len(odds) >= 3:\n        print('YES')\n        print(odds[0], odds[1], odds[2])\n    elif len(odds) >= 1 and len(evens) >= 2:\n        print('YES')\n        print(odds[0], evens[0], evens[1])\n    else:\n        print('NO')", "import sys\nfrom math import gcd, sqrt, ceil, log\n\ndef li():\n    return [int(i) for i in sys.stdin.readline().split()]\n\ndef si():\n    return sys.stdin.readline().split()\n\ndef ii():\n    return int(input())\n\ndef ip():\n    return input()\nfor tastcas in range(int(input())):\n    n = ii()\n    b = li()\n    b = [i % 2 for i in b]\n    odds = b.count(1)\n    evens = b.count(0)\n    odd = 0\n    even = 0\n    if odds >= 3:\n        print('YES')\n        for i in range(n):\n            if b[i] == 1:\n                print(i + 1, end=' ')\n                odd += 1\n            if odd == 3:\n                break\n    elif odds >= 1 and evens >= 2:\n        print('YES')\n        for i in range(n):\n            if odd < 1 and b[i] == 1:\n                print(i + 1, end=' ')\n                odd += 1\n            if even < 2 and b[i] == 0:\n                print(i + 1, end=' ')\n                even += 1\n            if odd >= 1 and even >= 2:\n                break\n    else:\n        print('NO', end='')\n    print()", "def exe():\n    le = []\n    lo = []\n    for i in range(n):\n        if lst[i] % 2 == 0:\n            le += [i + 1]\n        else:\n            lo += [i + 1]\n    if len(lo) >= 3:\n        print('YES')\n        print(lo[0], lo[1], end=' ')\n        return lo[2]\n    elif len(le) >= 2 and len(lo) >= 1:\n        print('YES')\n        print(le[0], le[1], end=' ')\n        return lo[0]\n    else:\n        return 'NO'\nfor i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    print(exe())", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    odd = []\n    even = []\n    for i in range(len(l)):\n        if l[i] % 2 == 0:\n            even.append(i)\n        else:\n            odd.append(i)\n    if len(odd) >= 3:\n        print('YES')\n        print(odd[0] + 1, odd[1] + 1, odd[2] + 1)\n    elif len(odd) >= 1 and len(even) >= 2:\n        print('YES')\n        print(odd[0] + 1, even[0] + 1, even[1] + 1)\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    (ans, indexes) = ('NO', [])\n    (odd, even) = ([], [])\n    for i in range(len(a)):\n        if a[i] % 2 == 0:\n            even.append(i + 1)\n        else:\n            odd.append(i + 1)\n    if len(odd) > 2:\n        ans = 'YES'\n        indexes = [odd[0], odd[1], odd[2]]\n    elif len(odd) == 0:\n        ans = 'NO'\n    elif len(odd) < 3 and len(even) > 1:\n        ans = 'YES'\n        indexes = [odd[0], even[0], even[1]]\n    if ans == 'YES':\n        print('YES')\n        print(*indexes)\n    else:\n        print('NO')", "for i in range(int(input())):\n    int(input())\n    a = list(map(int, input().split()))\n    b = []\n    for z in a:\n        b.append(z % 2)\n    if b.count(1) > 2:\n        print('YES')\n        print(b.index(1) + 1, end=' ')\n        b.remove(1)\n        print(b.index(1) + 2, end=' ')\n        b.remove(1)\n        print(b.index(1) + 3)\n    elif b.count(1) > 0 and b.count(0) > 1:\n        print('YES')\n        print(min(b.index(0), b.index(1)) + 1, end=' ')\n        print(max(b.index(0), b.index(1)) + 1, end=' ')\n        b.remove(0)\n        print(b.index(0) + 2)\n    else:\n        print('NO')", "for _ in range(int(input())):\n    input()\n    a = list(map(int, input().split()))\n    l1 = []\n    l2 = []\n    for i in range(len(a)):\n        if a[i] % 2 == 0:\n            l2.append(i + 1)\n        else:\n            l1.append(i + 1)\n    if len(l1) >= 3:\n        print('YES')\n        print(' '.join([str(j) for j in l1[:3]]))\n    elif len(l2) >= 2 and len(l1) >= 1:\n        print('YES')\n        new = [str(j) for j in l2[:2]]\n        new.append(str(l1[0]))\n        new.sort()\n        print(' '.join(new))\n    else:\n        print('NO')", "def main():\n    t = int(input())\n    for i in range(0, t):\n        n = int(input())\n        a = [int(x) for x in input().split(' ')]\n        res = []\n        odd_indices = []\n        even_indices = []\n        for (j, num) in enumerate(a):\n            if num % 2 == 0:\n                even_indices.append(j)\n            else:\n                odd_indices.append(j)\n        if len(odd_indices) == 0 or (len(odd_indices) == 2 and len(even_indices) == 1):\n            print('NO')\n        elif len(odd_indices) < 3:\n            print('YES')\n            print(odd_indices[0] + 1, even_indices[0] + 1, even_indices[1] + 1)\n        else:\n            print('YES')\n            print(odd_indices[0] + 1, odd_indices[1] + 1, odd_indices[2] + 1)\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = list(map(int, input().split()))\n    (o, e) = (0, 0)\n    (odd, even) = ([], [])\n    for i in range(len(x)):\n        if x[i] & 1 == 0:\n            even.append(i + 1)\n            e += 1\n        else:\n            odd.append(i + 1)\n            o += 1\n            if o >= 3:\n                break\n    if o >= 3:\n        print('YES')\n        print(odd[0], odd[1], odd[2])\n    elif o >= 1 and e >= 2:\n        print('YES')\n        print(odd[0], even[0], even[1])\n    else:\n        print('NO')", "a = int(input())\nfor i in range(a):\n    b = int(input())\n    c = list(map(int, input().split()))\n    r = 0\n    t = 0\n    y = []\n    u = []\n    for q in range(b):\n        if c[q] % 2 == 0:\n            y.append(q + 1)\n            r += 1\n        else:\n            u.append(q + 1)\n            t += 1\n    if t > 2:\n        print('YES')\n        print(u[0], u[1], u[2])\n    elif t > 0 and r > 1:\n        print('YES')\n        print(u[0], y[0], y[1])\n    else:\n        print('NO')", "t = int(input())\noutputbool = []\noutputindex = []\nfor i in range(2 * t):\n    lst = list(map(int, input().split()))\n    if i & 1 == 0:\n        n = lst[0]\n    else:\n        numofeven = 0\n        numofodd = 0\n        outputodd = []\n        outputeven = []\n        for i in range(n):\n            if lst[i] & 1 == 0:\n                numofeven += 1\n                outputeven.append(i + 1)\n            else:\n                numofodd += 1\n                outputodd.append(i + 1)\n        if numofodd >= 3:\n            outputbool.append('YES')\n            outputindex.append(outputodd[0:3])\n        elif numofodd >= 1 and numofeven >= 2:\n            outputbool.append('YES')\n            outputindex.append(outputodd[0:1] + outputeven[0:2])\n        else:\n            outputbool.append('NO')\n            outputindex.append(0)\nfor i in range(t):\n    print(outputbool[i])\n    if outputbool[i] == 'YES':\n        for j in range(3):\n            if j != 2:\n                print(outputindex[i][j], end=' ')\n            else:\n                print(outputindex[i][j])", "k = int(input())\nfor j in range(k):\n    n = int(input())\n    kol = 0\n    m = 0\n    sm = 0\n    a = 0\n    l = [int(i) for i in input().split()]\n    l1 = []\n    for i in range(n):\n        if l[i] % 2 != 0:\n            l1.append(i + 1)\n    if len(l1) >= 3:\n        print('YES')\n        print(*l1[0:3])\n    elif len(l1) == 0:\n        print('NO')\n    else:\n        if len(l1) == 2:\n            l1.pop()\n        for i in range(n):\n            if l[i] % 2 == 0:\n                l1.append(i + 1)\n        if len(l1) >= 3:\n            print('YES')\n            print(*l1[0:3])\n        else:\n            print('NO')", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    v = list(map(int, input().split()))\n    v1 = []\n    v2 = []\n    for j in range(m):\n        if v[j] % 2 != 0:\n            v1.append(j + 1)\n        else:\n            v2.append(j + 1)\n    if len(v1) >= 3:\n        print('YES')\n        print(v1[0], v1[1], v1[2])\n    elif len(v1) >= 1 and len(v2) >= 2:\n        print('YES')\n        print(v1[0], v2[0], v2[1])\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = []\n    s = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            l.append(i)\n        else:\n            s.append(i)\n    if len(s) > 2:\n        print('YES')\n        print(s[0] + 1, s[1] + 1, s[2] + 1)\n    elif len(s) == 1 and len(l) > 1 or (len(s) > 0 and len(l) > 1):\n        print('YES')\n        print(l[0] + 1, l[1] + 1, s[0] + 1)\n    else:\n        print('NO')", "n = int(input())\na = [0 for i in range(n)]\ny_n = [0 for i in range(n)]\n\ndef countOdd(li, li_len):\n    cnt = 0\n    for j in range(li_len):\n        if li[j] % 2 == 1:\n            cnt += 1\n    return cnt\nfor i in range(n):\n    printli = []\n    k = int(input())\n    li = list(map(int, input().split()))\n    if countOdd(li, k) >= 3:\n        y_n[i] = 1\n        for j in range(k):\n            if li[j] % 2 == 1:\n                printli.append(j + 1)\n        a[i] = printli\n    elif countOdd(li, k) == 1 or (countOdd(li, k) == 2 and k >= 4):\n        y_n[i] = 1\n        count = 0\n        odd_count = 0\n        for j in range(k):\n            if li[j] % 2 == 1 and odd_count == 0:\n                printli.append(j + 1)\n                odd_count = 1\n            elif li[j] % 2 == 0 and count < 2:\n                printli.append(j + 1)\n                count += 1\n        a[i] = printli\n    else:\n        y_n[i] = 0\nfor i in range(n):\n    if y_n[i] == 1:\n        print('YES')\n        for j in range(3):\n            print(a[i][j], end=' ')\n        print()\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    len_list = int(input())\n    num_list = list(map(int, input().split()))\n    exist = False\n    i = 0\n    j = 0\n    k = 0\n    remainders = {1: [], 0: []}\n    for x in range(len_list):\n        remainders[num_list[x] % 2].append(x + 1)\n    if len(remainders[1]) >= 3:\n        (i, j, k) = remainders[1][:3]\n        exist = True\n    elif len(remainders[1]) >= 1 and len(remainders[0]) >= 2:\n        i = remainders[1][0]\n        (j, k) = remainders[0][:2]\n        exist = True\n    if exist:\n        print('YES')\n        print(i, j, k)\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    even = []\n    odd = []\n    for i in range(1, n + 1):\n        if arr[i - 1] % 2:\n            odd.append(i)\n        else:\n            even.append(i)\n    if len(odd) > 2:\n        print('YES')\n        print(odd[0], odd[1], odd[2])\n    elif odd and len(even) > 1:\n        print('YES')\n        print(odd[0], even[0], even[1])\n    else:\n        print('NO')", "for _ in range(int(input())):\n    input()\n    a = [int(x) for x in input().split()]\n    v = [i for (i, x) in enumerate(a) if x % 2 == 1]\n    w = [i for (i, x) in enumerate(a) if x % 2 == 0]\n    if len(v) >= 3:\n        print('YES')\n        print(v[0] + 1, v[1] + 1, v[2] + 1)\n    elif len(v) >= 1 and len(w) >= 2:\n        print('YES')\n        print(v[0] + 1, w[0] + 1, w[1] + 1)\n    else:\n        print('NO')", "def solve(a):\n    odd = []\n    even = []\n    for i in range(len(a)):\n        if a[i] % 2 == 0:\n            even.append(i + 1)\n        else:\n            odd.append(i + 1)\n    if len(odd) >= 3:\n        print('YES')\n        print('{} {} {}'.format(odd[0], odd[1], odd[2]))\n    elif len(odd) >= 1 and len(even) >= 2:\n        print('YES')\n        print('{} {} {}'.format(odd[0], even[0], even[1]))\n    else:\n        print('NO')\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    solve(a)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    odd = []\n    even = []\n    for (x, y) in enumerate(a):\n        if y % 2 == 0:\n            even.append(x + 1)\n        else:\n            odd.append(x + 1)\n    if 1 <= len(odd) < 3 and len(even) >= 2:\n        print('YES')\n        print(odd[0], even[0], even[1])\n    elif len(odd) >= 3:\n        print('YES')\n        print(odd[0], odd[1], odd[2])\n    else:\n        print('NO')", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    odd = []\n    even = []\n    for i in range(n):\n        if a[i] % 2 != 0:\n            odd.append(i + 1)\n        else:\n            even.append(i + 1)\n    if len(odd) >= 3:\n        print('YES')\n        print(odd[0], odd[1], odd[2])\n    elif len(odd) >= 1 and len(even) >= 2:\n        print('YES')\n        print(odd[0], even[0], even[1])\n    else:\n        print('NO')", "n = int(input())\nfor _ in range(n):\n    m = int(input())\n    vals = list(map(int, input().split()))\n    pary = [[], []]\n    for i in range(m):\n        pary[vals[i] % 2].append(i + 1)\n    if len(pary[1]) > 2:\n        print('YES')\n        print(pary[1][0], pary[1][1], pary[1][2])\n    elif len(pary[1]) > 0 and len(pary[0]) > 1:\n        print('YES')\n        print(pary[1][0], pary[0][0], pary[0][1])\n    else:\n        print('NO')", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {'even': [], 'odd': []}\n    for i in range(n):\n        if l[i] % 2 == 0:\n            d['even'].append(i + 1)\n        else:\n            d['odd'].append(i + 1)\n    if len(d['odd']) >= 3:\n        l = d['odd'][:3]\n        print('YES')\n        print(*l)\n    elif len(d['odd']) >= 1 and len(d['even']) >= 2:\n        l = [d['odd'][0], d['even'][0], d['even'][1]]\n        print('YES')\n        print(*l)\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    ev = 0\n    od = 0\n    for j in lst:\n        if j % 2 == 0:\n            ev += 1\n        else:\n            od += 1\n    if od >= 3:\n        print('YES')\n        ans = []\n        for j in range(n):\n            if lst[j] % 2 != 0:\n                ans.append(j + 1)\n            if len(ans) == 3:\n                break\n        print(*ans)\n    elif od >= 1 and ev >= 2:\n        print('YES')\n        ans = []\n        for j in range(n):\n            if lst[j] % 2 != 0:\n                ans.append(j + 1)\n            if len(ans) == 1:\n                break\n        for j in range(n):\n            if lst[j] % 2 == 0:\n                ans.append(j + 1)\n            if len(ans) == 3:\n                break\n        print(*ans)\n    else:\n        print('NO')", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    (eve, od) = ([], [])\n    for i in range(n):\n        if a[i] % 2 == 0:\n            eve.append(i + 1)\n        else:\n            od.append(i + 1)\n    if od == []:\n        print('NO')\n    elif len(eve) == 1 and n == 3:\n        print('NO')\n    else:\n        print('YES')\n        if len(od) >= 3:\n            print(*od[:3])\n        else:\n            print(eve[0], eve[1], od[0])\nfor i in range(int(input())):\n    solve()"]