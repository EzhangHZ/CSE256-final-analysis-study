["def solve():\n    if n == 0:\n        return 1\n    return n + 2 * m + 1\nfrom sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    (n, m) = [int(x) for x in input().split()]\n    print(solve())", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print((2 * b + a) * (a > 0) + 1)", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print((2 * b + a) * (a > 0) + 1)", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print((2 * b + a) * (a > 0) + 1)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a and b or not b:\n        print(a * 1 + b * 2 + 1)\n    elif not a:\n        print(1)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == 0:\n        print(1)\n    else:\n        print(a + b * 2 + 1)", "results = []\nfor t in range(int(input())):\n    (one, two) = [int(x) for x in input().split()]\n    if not one:\n        results.append(1)\n    else:\n        results.append(one + two * 2 + 1)\nprint(*results, sep='\\n')", "result = ''\nnumber = int(input())\nfor x in range(number):\n    (a, b) = map(int, input().split())\n    if a < 1:\n        result += str(1) + '\\n'\n    else:\n        result += str(a + b * 2 + 1) + '\\n'\nprint(result[:-1])", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 0])\n\ndef invr():\n    return map(int, input().split())\nnum_test_cases = inp()\nfor i in range(num_test_cases):\n    lis_val = inlt()\n    if lis_val[0] == 0:\n        print(1)\n    else:\n        print(lis_val[0] + lis_val[1] * 2 + 1)", "from sys import stdin\ninput = stdin.readline\n\ndef get_string():\n    return stdin.readline().strip()\n\ndef main():\n    for _ in range(int(input())):\n        (a, b) = map(int, input().split())\n        if a == 0:\n            print(1)\n        else:\n            print(a * 1 + b * 2 + 1)\nmain()", "import sys\ninput = sys.stdin.readline\n\ndef solve(a, b):\n    if a == 0 and b > 0:\n        print(1)\n        return\n    print(a + 2 * b + 1)\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    solve(a, b)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if a == 0:\n        print(1)\n    else:\n        s = a + b * 2\n        print(s + 1)", "def decision(a, b):\n    if a == 0:\n        return 1\n    return a * 1 + b * 2 + 1\nt = int(input())\nresult = []\nfor i in range(t):\n    (a, b) = input().split()\n    result.append(decision(int(a), int(b)))\nfor el in result:\n    print(el)", "import sys\nn = int(sys.stdin.readline())\nfor i in range(n):\n    data = sys.stdin.readline().split()\n    a = int(data[0])\n    b = int(data[1])\n    if a == 0:\n        print(1)\n    else:\n        print(a + 2 * b + 1)", "T = int(input())\nq = []\nfor i in range(T):\n    (a, b) = input().split()\n    q.append((int(a), int(b)))\n\ndef solve(a, b):\n    if a == 0:\n        print(1)\n        return\n    sol = b * 2 + a + 1\n    print(sol)\nfor (a, b) in q:\n    solve(a, b)", "k = int(input())\narr = []\nfor i in range(k):\n    para = input().split()\n    arr.append(para)\nfor para in arr:\n    a = para[0]\n    b = para[1]\n    if int(a) == 0:\n        print(1)\n    elif int(b) == 0:\n        print(int(a) + 1)\n    elif int(a) != 0 and int(b) != 0:\n        print(int(a) + int(b) * 2 + 1)", "import sys\n\ndef read_numbers():\n    return [int(x) for x in sys.stdin.readline().strip().split()]\n\ndef solve():\n    t = read_numbers()[0]\n    for _ in range(t):\n        (a, b) = read_numbers()\n        if a == 0:\n            print(1)\n        else:\n            print(a + 2 * b + 1)\nsolve()", "import sys\n\ndef vasya_and_coins(a: int, b: int) -> int:\n    if a == 0:\n        return 1\n    if b == 0:\n        return a + 1\n    return b * 2 + a + 1\n\ndef main():\n    tc = int(sys.stdin.readline())\n    for _ in range(tc):\n        (a, b) = (int(i) for i in sys.stdin.readline().split())\n        sys.stdout.write(str(vasya_and_coins(a, b)) + '\\n')\nmain()", "ans = []\nn = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    if a > 0 and b > 0:\n        ans.append(sum([a, b * 2]) + 1)\n    elif a == 0 and b == 0:\n        ans.append(1)\n    elif a == 0:\n        ans.append(1)\n    elif a > 0 and b == 0:\n        ans.append(a + 1)\nprint(*ans, sep='\\n')", "t = int(input())\nm = []\nfor i in range(t):\n    (b1, b2) = [int(x) for x in input().split()]\n    if b1 > 0:\n        m.append(b1 + b2 * 2 + 1)\n    else:\n        m.append(1)\nfor i in m:\n    print(i)", "a = int(input())\nr = []\nfor i in range(a):\n    (b, c) = list(map(int, input().split()))\n    if b > 0 and c > 0:\n        r.append(b + c * 2 + 1)\n    elif b > 0 and c == 0:\n        r.append(b + 1)\n    elif b == 0 and c > 0:\n        r.append(1)\n    elif b == 0 and c == 0:\n        r.append(1)\nfor i in range(len(r)):\n    print(r[i])", "b = int(input())\nn = []\nfor i in range(b):\n    tmp = list(map(int, input().split()))\n    for j in tmp:\n        n.append(j)\nfor l in range(0, len(n), 2):\n    if n[l] == 0:\n        print(1)\n    else:\n        print(n[l] + n[l + 1] * 2 + 1)", "import math\nt = int(input())\nres = []\nfor _ in range(t):\n    (a, b) = [int(x) for x in input().split(' ')]\n    if a == 0:\n        res.append(1)\n    else:\n        res.append(2 * b + a + 1)\nfor i in range(t):\n    print(res[i])", "n = int(input())\ntry:\n    mx = []\n    while True:\n        m = input()\n        if m == '':\n            break\n        m = list(map(int, m.split()))\n        mx.append(m)\nexcept:\n    pass\ns = []\nfor i in range(n):\n    x = mx[i][0]\n    y = mx[i][1]\n    if x == 0:\n        s.append(1)\n    elif y == 0:\n        s.append(int(x) + 1)\n    else:\n        s.append(int(x) + 2 * int(y) + 1)\nfor i in s:\n    print(i)", "import sys\nimport math\nfrom sys import stdin, stdout\n\ndef get_ints_in_variables():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_int():\n    return int(input())\n\ndef get_ints_in_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_list_of_list(n):\n    return [list(map(int, sys.stdin.readline().strip().split())) for _ in range(n)]\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef main():\n    for t in range(get_int()):\n        (a, b) = get_ints_in_variables()\n        if a == 0:\n            print(1)\n            continue\n        elif b == 0:\n            print(a + 1)\n            continue\n        res = a + b * 2\n        print(res + 1)\nmain()", "from sys import stdin\ninput = stdin.readline\n\ndef get_string():\n    return stdin.readline().strip()\n\ndef main():\n    for _ in range(int(input())):\n        (a, b) = map(int, input().split())\n        if a == 0:\n            print(1)\n        else:\n            print(a * 1 + b * 2 + 1)\nmain()", "import sys\ninput = sys.stdin.readline\n\ndef ii():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef solve():\n    (a, b) = invr()\n    if a == 0:\n        print(1)\n    else:\n        print(a + 2 * b + 1)\nt = ii()\nfor i in range(t):\n    solve()", "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    (a, b) = map(int, sys.stdin.readline().strip().split())\n    if a == 0:\n        print(1)\n    else:\n        print(a * 1 + b * 2 + 1)", "import sys\n\ndef main():\n    input = sys.stdin\n    n = int(input.readline())\n    for i in range(n):\n        ln = input.readline().split()\n        (a, b) = (int(ln[0]), int(ln[1]))\n        if a == 0:\n            print(1)\n        else:\n            print(2 * b + a + 1)\nmain()", "ml = []\nfor _ in range(int(input())):\n    l = ''\n    l = input()\n    ml.append(l.split())\nfor i in ml:\n    if int(i[0]) == 0:\n        print(1)\n    elif int(i[0]) > 0 and int(i[1]) == 0:\n        print(int(i[0]) * 1 + 1)\n    elif int(i[0]) > 0 and int(i[1]) > 0:\n        print(int(i[0]) + int(i[1]) * 2 + 1)", "input = open(0).readline\nt = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if a == 0:\n        print('1')\n    else:\n        print(a + b * 2 + 1)", "from os import read\nimport sys\ninput = lambda : sys.stdin.readline()\n\ndef read_ints():\n    return [int(x) for x in input().split(' ')]\n\ndef read_int():\n    return int(input())\nT = read_int()\nans = []\nfor _ in range(T):\n    (x, y) = read_ints()\n    if x == 0:\n        ans.append('1')\n    else:\n        ans.append(str(x + 2 * y + 1))\nprint('\\n'.join(ans))", "N = int(input())\nlst = []\nA = []\nB = []\nfor i in range(N):\n    lst = list(map(int, input().split()))\n    A.append(lst[0])\n    B.append(lst[1])\nfor i in range(N):\n    if A[i] == 0:\n        print(1)\n    else:\n        print(A[i] + 2 * B[i] + 1)", "inp = int(input())\nlst = []\nfor i in range(inp):\n    (a, b) = input().split()\n    a = int(a)\n    b = int(b)\n    lst.append((a, b))\n\ndef f(z):\n    (x, y) = (z[0], z[1])\n    if x == 0:\n        return 1\n    if y == 0:\n        return x + 1\n    else:\n        return x + 2 * y + 1\nres = [f(k) for k in lst]\nfor e in res:\n    print(e)", "def coin_calculate():\n    c = input()\n    z = int(c)\n    i = 0\n    k = []\n    l = []\n    while i < z:\n        i += 1\n        asa = input()\n        a = asa.split()\n        x = int(a[0])\n        y = int(a[1])\n        k.append(x)\n        l.append(y)\n    i = 0\n    while i < z:\n        if k[i] == 0:\n            print(1)\n        elif l[i] == 0:\n            print(k[i] + 1)\n        else:\n            print(k[i] + 2 * l[i] + 1)\n        i += 1\ncoin_calculate()", "t = int(input())\ncases = []\nfor i in range(t):\n    s = input().split(' ')\n    cases.append([int(s[0]), int(s[1])])\nfor (a, b) in cases:\n    if a == 0:\n        print(1)\n        continue\n    else:\n        print(a + 2 * b + 1)", "import sys\ninput = sys.stdin.readline\nn = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    if a == 0:\n        print(1)\n    else:\n        print(a + 2 * b + 1)", "n = int(input())\nmoney = [list(map(int, input().split())) for i in range(n)]\nfor i in money:\n    if i[0] > 0:\n        print(i[0] + i[1] * 2 + 1)\n    else:\n        print(1)", "for a in [*open(0)][1:]:\n    (x, y) = map(int, a.split())\n    print(1 if x == 0 else x + 2 * y + 1)", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    if a == 0:\n        print(1)\n    else:\n        print(2 * b + a + 1)", "n = int(input())\n\ndef check(a, b):\n    if a == 0:\n        s = 1\n    else:\n        s = a + 2 * b + 1\n    return s\nc = []\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    s = check(a, b)\n    c.append(s)\nfor i in range(len(c)):\n    print(c[i])", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    if a == 0:\n        print(1)\n    else:\n        print(2 * b + a + 1)", "t = int(input())\nans = []\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if a == 0:\n        ans.append(1)\n    elif b == 0:\n        ans.append(a + 1)\n    else:\n        ans.append(a + 2 * b + 1)\nfor elem in ans:\n    print(elem)", "from sys import stdin\n\ndef read_int():\n    return int(stdin.readline())\n\ndef read_list(_type=int):\n    return list(map(_type, stdin.readline().split()))\n\ndef read_tuple():\n    return stdin.readline().split()\n\ndef read_string():\n    return stdin.readline().rstrip('\\r\\n')\nfor _ in range(read_int()):\n    (one, two) = read_list()\n    if not one:\n        print(1)\n    else:\n        print(two * 2 + one + 1)", "t = int(input())\np = []\nfor i in range(t):\n    l = list(map(int, input().split()))\n    a = l[0]\n    b = l[1]\n    if a == 0 and b != 0:\n        p.append('1')\n    else:\n        x = a + 2 * b\n        p.append(x + 1)\nfor ele in p:\n    print(ele)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor q in range(t):\n    (a, b) = map(int, input().split())\n    if a == 0:\n        print(1)\n    else:\n        print(a + 2 * b + 1)", "n = int(input())\nc = [0 for i in range(n)]\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    if a == 0 and b != 0:\n        c[i] = 1\n    else:\n        c[i] = a + b * 2 + 1\nfor i in range(n):\n    print(c[i])", "s = int(input())\nd = []\nfor i in range(s):\n    (a, s) = list(map(int, input().split()))\n    f = a + s * 2 + 1\n    if a == 0 and s != 0:\n        d.append(1)\n    else:\n        d.append(f)\nfor h in range(len(d)):\n    print(d[h])", "import sys\nimport statistics\nimport math\nimport datetime\nimport collections\n\ndef function(a, b):\n    if a == 0:\n        return 1\n    else:\n        return a + b * 2 + 1\n\ndef main():\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        (a, b) = map(int, sys.stdin.readline().strip().split())\n        res = function(a, b)\n        print(res)\nmain()", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print((2 * b + a) * (a > 0) + 1)", "n = int(input())\nh = []\na = []\nans = 0\nfor i in range(n):\n    (hh, aa) = map(int, input().split())\n    h.append(hh)\n    a.append(aa)\nfor i in range(len(a)):\n    a[i] = a[i] * 2\nfor i in range(len(h)):\n    if h[i] == 0 and a[i] == 0:\n        print(1)\n    elif h[i] == 0 and a[i] != 0:\n        print(1)\n    else:\n        print(h[i] + a[i] + 1)", "T = int(input())\noparr = []\nfor i in range(T):\n    (oneB, twoB) = tuple(map(int, input().split()))\n    if oneB > 0:\n        oparr.append(twoB * 2 + oneB + 1)\n    else:\n        oparr.append(1)\nfor i in oparr:\n    print(i)", "n = int(input())\nh = []\na = []\nans = 0\nfor i in range(n):\n    (hh, aa) = map(int, input().split())\n    h.append(hh)\n    a.append(aa)\nfor i in range(len(a)):\n    a[i] = a[i] * 2\nfor i in range(len(h)):\n    if h[i] == 0 and a[i] == 0:\n        print(1)\n    elif h[i] == 0 and a[i] != 0:\n        print(1)\n    else:\n        print(h[i] + a[i] + 1)", "for i in range(int(input())):\n    a = input().split()\n    if a[0] == '0':\n        print(1)\n    else:\n        print(int(a[0]) + int(a[1]) * 2 + 1)", "test_case = int(input())\na = []\nb = []\nfor i in range(test_case):\n    r = input()\n    a.append(int(r.split()[0]))\n    b.append(int(r.split()[1]))\nfor i in range(test_case):\n    if a[i] > 0:\n        print(2 * b[i] + a[i] + 1)\n    else:\n        print(1)", "t = int(input())\nres = []\nfor i in range(t):\n    ar = list(map(int, input().split()))\n    n = ar[0]\n    s = ar[1]\n    if n == 0:\n        res.append(1)\n        continue\n    res.append(n + s * 2 + 1)\nfor el in res:\n    print(el)", "n = int(input())\ninputs = []\nfor _ in range(n):\n    (a, b) = input().split()\n    inputs.append([int(a), int(b)])\nfor (a, b) in inputs:\n    if a == 0:\n        print(1)\n    else:\n        print(a * 1 + b * 2 + 1)", "n_test_cases = int(input())\nresults = []\nfor _ in range(n_test_cases):\n    (one_coins, two_coins) = tuple([int(x) for x in input().split()])\n    if one_coins == 0:\n        results.append(1)\n    else:\n        results.append(one_coins + 2 * two_coins + 1)\nfor result in results:\n    print(result)", "v = int(input())\nk = []\nl = []\nre = 0\n\ndef add(a, b):\n    if a >= b:\n        return a + b * 2 + 1\n    elif a >= 1:\n        return a + b * 2 + 1\n    else:\n        return 1\nfor i in range(v):\n    k.append(input().split(' '))\nfor j in range(v):\n    re = add(int(k[j][0]), int(k[j][1]))\n    print(re)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\ntestcase = inp()\nfor t in range(testcase):\n    x = inlt()\n    a = x[0]\n    b = x[1]\n    answer = 0\n    if a == 0:\n        answer = 1\n    elif b == 0 and a == 0:\n        answer = 0\n    else:\n        answer = b * 2 + a + 1\n    print(answer)", "import math\nfrom collections import defaultdict, deque, Counter\nfrom functools import reduce\nfrom stringprep import in_table_d1\nfrom sys import stdin\nimport heapq\ninf = int(1e+18)\ninput = stdin.readline\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == 0:\n        print(1)\n        continue\n    print(a + 2 * b + 1)", "answer = []\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == 0:\n        answer.append(1)\n    elif b == 0:\n        answer.append(a + 1)\n    else:\n        answer.append(a + b * 2 + 1)\nprint(*answer, sep='\\n')", "n = int(input())\nx = []\nfor i in range(0, n):\n    a = input().split()\n    x.append(a)\nfor i in range(len(x)):\n    if int(x[i][0]) == 0:\n        print('1')\n    else:\n        print(int(x[i][0]) + int(x[i][1]) * 2 + 1)", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print((2 * b + a) * (a > 0) + 1)", "n = int(input())\na = []\nfor i in range(n):\n    l = list(map(int, input().split()))\n    a.append(l)\nfor i in a:\n    if i[0] == 0 and i[1] == 0:\n        print(1)\n    elif i[0] == 0 and i[1] > 0:\n        print(1)\n    elif i[0] > 0 and i[1] == 0:\n        print(i[0] + 1)\n    else:\n        print(i[0] + 2 * i[1] + 1)", "numberofcases = int(input())\nwalletamount = []\nfor y in range(numberofcases):\n    walletamount.append([])\nfor x in range(numberofcases):\n    walletamount[x] = list(input().split())\nfor x in range(numberofcases):\n    counter = 0\n    if int(walletamount[x][0]) == 0 and counter == 0:\n        print(1)\n        counter = counter + 1\n    if int(walletamount[x][0]) > 0 and int(walletamount[x][1]) > 0 and (counter == 0):\n        print(int(walletamount[x][0]) * 1 + int(walletamount[x][1]) * 2 + 1)\n        counter = counter + 1\n    if int(walletamount[x][0]) > 0 and int(walletamount[x][1]) == 0 and (counter == 0):\n        print(int(walletamount[x][0]) + 1)\n        counter = counter + 1", "numberofcases = int(input())\nwalletamount = []\nfor y in range(numberofcases):\n    walletamount.append([])\nfor x in range(numberofcases):\n    walletamount[x] = list(input().split())\nfor x in range(numberofcases):\n    counter = 0\n    if int(walletamount[x][0]) == 0 and counter == 0:\n        print(1)\n        counter = counter + 1\n    if int(walletamount[x][0]) > 0 and int(walletamount[x][1]) > 0 and (counter == 0):\n        print(int(walletamount[x][0]) * 1 + int(walletamount[x][1]) * 2 + 1)\n        counter = counter + 1\n    if int(walletamount[x][0]) > 0 and int(walletamount[x][1]) == 0 and (counter == 0):\n        print(int(walletamount[x][0]) + 1)\n        counter = counter + 1", "import math\nimport sys\nimport itertools\nimport fractions\nwtf = sys.stdin.read()\nwtf = wtf.strip().split('\\n')\nfor t in wtf[1:]:\n    (a, b) = map(int, t.split())\n    if a == 0:\n        print(1)\n    elif b == 0:\n        print(a + 1)\n    else:\n        print(a + 2 * b + 1)", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print((2 * b + a) * (a > 0) + 1)", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print((2 * b + a) * (a > 0) + 1)", "out = []\n\ndef change():\n    coins = list(map(int, input().split()))\n    amt = coins[0] + 2 * coins[1]\n    if coins[0] == 0:\n        out.append(1)\n    else:\n        out.append(amt + 1)\niter = int(input())\nwhile iter > 0:\n    change()\n    iter -= 1\nfor x in range(0, len(out)):\n    print(out[x])", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print((2 * b + a) * (a > 0) + 1)", "n = int(input())\nl = []\nfor i in range(n):\n    (a, b) = input().split()\n    a = int(a)\n    b = int(b)\n    s = a + 2 * b\n    if a == 0:\n        l.append(1)\n    else:\n        l.append(s + 1)\nfor j in l:\n    print(j)", "from math import *\nfrom sys import stdin, setrecursionlimit\nfrom itertools import *\nfrom collections import *\nsetrecursionlimit(10 ** 8)\nlines = stdin.readlines()\nlines.reverse()\n\ndef input():\n    return lines.pop().strip('\\n')\nt = int(input())\nwhile t:\n    (a, b) = map(int, input().split())\n    if a < 1:\n        print(1)\n    else:\n        print(2 * b + 1 * a + 1)\n    t -= 1", "answers = []\nnumofinput = int(input())\nfor i in range(numofinput):\n    [a, b] = list(map(int, input().split()))\n    ans = a + b * 2 + 1\n    if b != 0:\n        if a == 0:\n            ans = 1\n    answers.append(ans)\nfor m in answers:\n    print(m)", "n = int(input())\na = []\nfor i in range(n):\n    (c1, c2) = map(int, input().split())\n    a.append(c1 + c2 * 2 + 1 if c1 >= c2 else 1 + c2 * 2 + c1 if c1 > 0 else c1 + 1)\nfor i in range(n):\n    print(a[i])", "from sys import stdin, stdout\nfrom collections import Counter, defaultdict\ninput = stdin.readline\nt = int(input().strip())\nfor _ in range(t):\n    (a, b) = list(map(int, input().strip().split()))\n    if a == 0:\n        print(1)\n        continue\n    ans = min(a, b) * 3\n    if a > b:\n        ans += (a - b) * 1\n    elif b > a:\n        ans += (b - a) * 2\n    ans += 1\n    print(ans)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef test():\n    A = inlt()\n    if not A[0]:\n        print(1)\n    else:\n        print(A[0] + 2 * A[1] + 1)\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        test()\nmain()", "t = int(input(''))\nres = []\nfor i in range(t):\n    st = input('')\n    arr = st.split(' ')\n    a = int(arr[0])\n    b = int(arr[1])\n    if b == 0:\n        res.append(a + 1)\n    elif a == 0:\n        res.append(1)\n    else:\n        res.append(b * 2 + a + 1)\nfor i in range(len(res)):\n    print(res[i])", "t = int(input())\na = [0] * t\nb = a.copy()\nfor i in range(t):\n    (a[i], b[i]) = list(map(int, input().split()))\nfor i in range(t):\n    if a[i] == 0:\n        print(1)\n    else:\n        print(a[i] + b[i] * 2 + 1)", "def check(a, b):\n    if a == 0:\n        s = 1\n    else:\n        s = a + b * 2 + 1\n    return s\nn = int(input(' '))\nsp = []\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    s = check(a, b)\n    sp.append(s)\nl = len(sp)\nfor i in range(l):\n    print(sp[i])", "def check(a, b):\n    if a == 0:\n        s = 1\n    else:\n        s = a + b * 2 + 1\n    return s\nn = int(input())\nc = []\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    s = check(a, b)\n    c.append(s)\nfor i in range(len(c)):\n    print(c[i])", "def check(a, b):\n    if a == 0:\n        s = 1\n    else:\n        s = a + 2 * b + 1\n    return s\nc = []\nn = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    s = check(a, b)\n    c.append(s)\nfor i in range(len(c)):\n    print(c[i])", "t = int(input())\nans = []\nvalue = 0\nfor tests in range(t):\n    (a, b) = map(int, input().split())\n    if a > 0:\n        value = a + 2 * b + 1\n        ans.append(value)\n    if a == 0:\n        value = 1\n        ans.append(value)\nprint(*ans, sep='\\n')", "n = int(input())\nones = []\ntwos = []\nfor i in range(n):\n    val = input().split(' ')\n    ones.append(int(val[0]))\n    twos.append(int(val[1]))\nfor i in range(len(ones)):\n    if ones[i] == 0:\n        print(1)\n    else:\n        print(twos[i] * 2 + ones[i] + 1)", "t = int(input())\nl = []\nfor i in range(t):\n    l.append(tuple(map(int, input().split())))\nsols = []\nfor item in l:\n    ones = item[0]\n    twos = item[1]\n    total = ones + 2 * twos\n    if ones != 0:\n        sol = total + 1\n    elif total % 2 == 0:\n        sol = 1\n    sols.append(sol)\nfor el in sols:\n    print(el)", "t = int(input())\nans = []\nfor i in range(t):\n    (one, two) = tuple(map(int, input().split()))\n    if one == 0 and two != 0:\n        ans.append(1)\n    elif one != 0 and two == 0:\n        ans.append(one + 1)\n    else:\n        ans.append(one + two * 2 + 1)\nfor case in tuple(ans):\n    print(case)", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print((2 * b + a) * (a > 0) + 1)", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print((1, 2 * b + a + 1)[a > 0])", "t = int(input())\nA = []\nfor i in range(t):\n    a = [int(p) for p in input().split()]\n    A.append(a)\nfor i in range(t):\n    (a, b) = A[i]\n    if a == 0 and b != 0:\n        print(1)\n    else:\n        print(a + b * 2 + 1)", "t = int(input())\nfor test in range(t):\n    (n, m) = map(int, input().split())\n    a = n * 1\n    b = m * 2\n    if a == 0:\n        print(1)\n    else:\n        print(a + b + 1)", "for t in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == 0:\n        print(1)\n    else:\n        print(a + 2 * b + 1)", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if a == 0 and b != 0:\n        print(1)\n    elif a != 0 and b == 0:\n        print(a + 1)\n    elif a == 0 and b == 0:\n        print(1)\n    else:\n        print(a + 2 * b + 1)", "a = int(input())\nfor _ in range(a):\n    (a, b) = [int(i) for i in input().split()]\n    if a == 0:\n        print(1)\n    elif b == 0:\n        print(a + 1)\n    else:\n        print((a + b) * 2 - a + 1)", "for i in range(int(input())):\n    (a, b) = list(map(int, input().split()))\n    if a == 0 and b != 0:\n        print(1)\n    elif a == 0:\n        print(1)\n    else:\n        print(a + 2 * b + 1)"]