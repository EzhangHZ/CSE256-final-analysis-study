["for s in [*open(0)][1:]:\n    (a, s) = map(int, s.split())\n    b = 0\n    k = 1\n    while s > 0 <= (d := (s % (m := 10) - a % m)) or -1 < (d := (s % (m := 100) - a % 10)) <= 9 < s:\n        a //= 10\n        s //= m\n        b += k * d\n        k *= 10\n    print((b, -1)[a > 0])", "def solve(a: int, s: int):\n    result = []\n    while s > a >= 0:\n        mod_a = a % 10\n        mod_s = s % 10\n        if mod_s < mod_a:\n            mod_ss = s % 100\n            if mod_ss // 10 != 1:\n                print(-1)\n                return\n            result.append(mod_ss - mod_a)\n            s = s // 100\n        else:\n            result.append(mod_s - mod_a)\n            s = s // 10\n        a = a // 10\n    if s < a:\n        print(-1)\n    else:\n        result.append(s - a)\n        print(int(''.join(map(str, reversed(result)))))\nn = int(input())\nvalues = [list(map(int, input().split())) for _ in range(n)]\nfor v in values:\n    solve(*v)", "import sys\nt = int(input())\nfor _ in range(t):\n    line = sys.stdin.readline()\n    [a, s] = line[:len(line) - 1].split()\n    result = 0\n    finished = False\n    ai = len(a) - 1\n    si = len(s) - 1\n    B = []\n    while not finished:\n        if int(a[ai]) <= int(s[si]):\n            B.append(str(int(s[si]) - int(a[ai])))\n            ai -= 1\n            si -= 1\n            if si < 0 and ai >= 0:\n                result = -1\n                break\n            elif ai < 0:\n                B.append(str(s[:si + 1]))\n                finished = True\n                break\n        else:\n            if s[si - 1] != '1' or si == 0:\n                result = -1\n                break\n            B.append(str(int(s[si - 1] + s[si]) - int(a[ai])))\n            ai -= 1\n            si -= 2\n            if si < 0 and ai >= 0:\n                result = -1\n                break\n            elif ai < 0:\n                B.append(str(s[:si + 1]))\n                finished = True\n                break\n    if finished is True:\n        B.reverse()\n        result = int(''.join(B))\n    print(result)", "def solve(a, s):\n    result = []\n    while s > a >= 0:\n        mod_a = a % 10\n        mod_s = s % 10\n        if mod_s < mod_a:\n            mod_ss = s % 100\n            if mod_ss // 10 != 1:\n                print(-1)\n                return\n            result.append(mod_ss - mod_a)\n            s = s // 100\n        else:\n            result.append(mod_s - mod_a)\n            s = s // 10\n        a = a // 10\n    if s < a:\n        print(-1)\n    else:\n        result.append(s - a)\n        print(int(''.join(map(str, reversed(result)))))\nn = int(input())\nvalues = [list(map(int, input().split())) for _ in range(n)]\nfor v in values:\n    solve(*v)", "import sys\nimport bisect\nimport math\nfrom collections import deque\ninput = lambda : sys.stdin.readline().strip()\nmod = 10 ** 9 + 7\n\ndef solve():\n    (a, s) = input().split()\n    if len(a) > len(s):\n        return -1\n    b = ''\n    (i, j) = (len(a) - 1, len(s) - 1)\n    while i >= 0 and j >= 0:\n        if a[i] <= s[j]:\n            b = str(int(s[j]) - int(a[i])) + b\n            (i, j) = (i - 1, j - 1)\n        else:\n            if j - 1 < 0:\n                return -1\n            if int(s[j - 1] + s[j]) - int(a[i]) > 9 or int(s[j - 1] + s[j]) - int(a[i]) < 0:\n                return -1\n            b = str(int(s[j - 1] + s[j]) - int(a[i])) + b\n            (i, j) = (i - 1, j - 2)\n    if i >= 0:\n        return -1\n    while j >= 0:\n        b = s[j] + b\n        j -= 1\n    return int(b)\nt = 1\nt = int(input())\nfor _ in range(t):\n    print(solve())", "import sys\n\ndef read_line():\n    return sys.stdin.readline().strip()\nt = int(read_line())\nfor _ in range(t):\n    line = read_line().split()\n    a = int(line[0])\n    s = int(line[1])\n    b = 0\n    pow10 = 1\n    while s > 0:\n        last_a = a % 10\n        last_sum = s % 10\n        if last_sum < last_a:\n            s = s // 10\n            last_sum += 10 * (s % 10)\n            if not 0 <= last_sum - last_a <= 9:\n                b = -1\n                break\n        b += (last_sum - last_a) * pow10\n        pow10 *= 10\n        s = s // 10\n        a = a // 10\n    print(b if a == 0 else -1)", "for s in [*open(0)][1:]:\n    (a, s) = s.split()\n    a = int(a)\n    b = 0\n    k = 1\n    while s and -1 < (c := (int(s[(m := (-1))]) - a % 10)) <= 9 or (s[1:] and -1 < (c := (c + int(s[(m := (m - 1))]) * 10)) <= 9):\n        a //= 10\n        s = s[:m]\n        b += k * c\n        k *= 10\n    print((b, -1)[a > 0])", "result = []\n\ndef findb(a, s):\n    b = []\n    (stacks, lengths) = (list(str(s)), len(str(s)))\n    (stacka, lengtha) = (list(str(a)), len(str(a)))\n    while lengtha > 0 and lengths > 0:\n        if int(stacka[lengtha - 1]) > int(stacks[lengths - 1]):\n            if lengths < 2:\n                return -1\n            el = int(''.join(stacks[lengths - 2:lengths])) - int(stacka[lengtha - 1])\n            if 0 < el < 10:\n                b.append(el)\n            else:\n                return -1\n            lengtha -= 1\n            lengths -= 2\n        else:\n            b.append(int(stacks[lengths - 1]) - int(stacka[lengtha - 1]))\n            lengtha -= 1\n            lengths -= 1\n    if lengtha > 0 and lengths == 0:\n        return -1\n    b = list(map(str, b))\n    return (''.join(stacks[:lengths]) + ''.join(b[::-1])).lstrip('0')\nfor _ in range(int(input())):\n    (a, s) = list(map(int, input().split()))\n    result.append(str(findb(a, s)))\nprint('\\n'.join(result))", "for s in [*open(0)][1:]:\n    (a, s) = map(int, s.split())\n    b = 0\n    k = 1\n    while s > 0 <= (d := (s % (m := 10) - a % m)) or -1 < (d := (0 - a % m + s % (m := 100))) <= 9 < s:\n        a //= 10\n        s //= m\n        b += k * d\n        k *= 10\n    print((b, -1)[a > 0])", "n = int(input())\nresults = []\nfor i in range(n):\n    (a, s) = input().split()\n    la = len(a)\n    ls = len(s)\n    if ls < la:\n        results.append(-1)\n        continue\n    b = ''\n    while la > 0 and ls > 0:\n        if int(s[ls - 1]) >= int(a[la - 1]):\n            b = str(int(s[ls - 1]) - int(a[la - 1])) + b\n        else:\n            if ls < 2:\n                b = '-1'\n                break\n            elif s[ls - 2] != '1':\n                b = '-1'\n                break\n            b = str(10 + int(s[ls - 1]) - int(a[la - 1])) + b\n            ls -= 1\n        ls -= 1\n        la -= 1\n    if la != 0:\n        b = '-1'\n    else:\n        b = s[:ls] + b\n    results.append(int(b))\nfor result in results:\n    print(result)", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_ls():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef solve():\n    (a, s) = get_ints()\n    ls = []\n    while s:\n        x = a % 10\n        y = s % 10\n        if x <= y:\n            ls.append(y - x)\n        else:\n            s //= 10\n            y += 10 * (s % 10)\n            if x < y and y >= 10 and (y < 19):\n                ls.append(y - x)\n            else:\n                print(-1)\n                return\n        s //= 10\n        a //= 10\n    if a:\n        print(-1)\n    else:\n        while True:\n            if ls[-1] == 0:\n                ls.pop()\n            else:\n                break\n        ls.reverse()\n        print(''.join([str(i) for i in ls]))\n\ndef main():\n    for _ in range(int(input())):\n        solve()\nmain()", "import math as m\ni = input()\ninp = []\nfor a in range(0, int(i)):\n    inp.append(input().split())\n\ndef logic(a, s):\n    l_a = len(a)\n    l_s = len(s)\n    p_a = 1\n    p_s = 1\n    b = 0\n    while p_a <= l_a and p_s <= l_s:\n        a_digit = int(a[-p_a])\n        s_digit = int(s[-p_s])\n        if a_digit <= s_digit:\n            b += (s_digit - a_digit) * 10 ** (p_a - 1)\n            p_a += 1\n            p_s += 1\n        elif p_s < l_s:\n            s_next_digit = int(s[-p_s - 1])\n            if s_next_digit == 1:\n                b += (10 + s_digit - a_digit) * 10 ** (p_a - 1)\n                p_a += 1\n                p_s += 2\n            else:\n                return -1\n        else:\n            return -1\n    if p_s > l_s and p_a <= l_a:\n        return -1\n    elif p_s <= l_s and p_a > l_a:\n        b += int(s[:-p_s + 1]) * 10 ** l_a\n    return b\nfor i in inp:\n    [a, s] = i\n    print(logic(a, s))", "import heapq\nimport sys\nimport math\nfrom collections import deque\nfrom bisect import bisect_left, bisect_right\nI = sys.stdin.readline\nII = lambda : int(I())\nIN = lambda x: map(int, x.split())\nFN = lambda x: map(float, x.split())\nL = lambda x: list(IN(x))\nM = 1000000007\nP = print\nT = True\nF = False\nfor _ in range(II()):\n    (a, s) = IN(I())\n    b = 0\n    t = 1\n    while a > 0 or s > 0:\n        (a, ad) = divmod(a, 10)\n        (s, sd) = divmod(s, 10)\n        if sd < ad:\n            (s, sd2) = divmod(s, 10)\n            if sd2 == 0:\n                b = -1\n                break\n            sd += sd2 * 10\n        c = sd - ad\n        if c > 9:\n            b = -1\n            break\n        b += c * t\n        t *= 10\n    print(b)", "from math import *\nimport sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return input().split()\n\nclass Solution:\n\n    def __init__(self):\n        self.ans = 0\n\n    def solve(self, a, s):\n        ans = ''\n        k = 0\n        for i in range(len(a)):\n            if not a[i] == '0':\n                break\n            k += 1\n        a = a[k:]\n        (i, j) = (len(a) - 1, len(s) - 1)\n        while i >= 0:\n            x1 = int(a[i])\n            temp = s[j]\n            x2 = int(temp)\n            while x1 > x2:\n                j -= 1\n                if j < 0:\n                    break\n                temp = s[j] + temp\n                x2 = int(temp)\n            if j < i:\n                return -1\n            sub = str(x2 - x1)\n            if len(sub) > 1:\n                return -1\n            ans = sub + ans\n            j -= 1\n            i -= 1\n        while j >= 0:\n            ans = s[j] + ans\n            j -= 1\n        if not len(ans):\n            return -1\n        return int(ans)\nsol = Solution()\nt = inp()\nans = []\nwhile t:\n    [a, s] = invr()\n    ans.append(sol.solve(a, s))\n    t -= 1\nfor i in range(len(ans)):\n    print(ans[i], end='\\n')", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    (a, s) = input().split()\n    b = ''\n    c = len(s) - 1\n    d = 0\n    for i in range(len(a) - 1, -1, -1):\n        if c < 0:\n            d = -1\n            break\n        if int(s[c]) == int(a[i]):\n            b += '0'\n            c -= 1\n        elif int(s[c]) > int(a[i]):\n            b += str(int(s[c]) - int(a[i]))\n            c -= 1\n        elif c != 0:\n            if len(str(int(s[c - 1] + s[c]) - int(a[i]))) > 1 or s[c - 1] == '0':\n                d = -1\n                break\n            b += str(int(s[c - 1] + s[c]) - int(a[i]))\n            c -= 2\n        else:\n            d = -1\n            break\n    if d == -1:\n        print(d)\n        continue\n    if c != -1:\n        for i in range(c, -1, -1):\n            b += s[i]\n    print(b[::-1].lstrip('0'))", "import sys\nimport bisect\nimport math\nfrom collections import deque\ninput = lambda : sys.stdin.readline().strip()\nmod = 10 ** 9 + 7\n\ndef solve():\n    (a, s) = input().split()\n    if len(a) > len(s):\n        return -1\n    b = ''\n    (i, j) = (len(a) - 1, len(s) - 1)\n    while i >= 0 and j >= 0:\n        if a[i] <= s[j]:\n            b = str(int(s[j]) - int(a[i])) + b\n            (i, j) = (i - 1, j - 1)\n        else:\n            if j - 1 < 0:\n                return -1\n            if int(s[j - 1] + s[j]) - int(a[i]) > 9 or int(s[j - 1] + s[j]) - int(a[i]) < 0:\n                return -1\n            b = str(int(s[j - 1] + s[j]) - int(a[i])) + b\n            (i, j) = (i - 1, j - 2)\n    if i >= 0:\n        return -1\n    while j >= 0:\n        b = s[j] + b\n        j -= 1\n    return int(b)\nt = 1\nt = int(input())\nfor _ in range(t):\n    print(solve())", "i = int\nfor s in [*open(0)][1:]:\n    (a, s) = s.split()\n    l = [(a.zfill(19), s, '')]\n    for (a, s, b) in l:\n        m = -1\n        if s and 0 <= (c := (i(s[m]) - i(a[-1]))) <= 9 or (s[1:] and 0 <= (c := (c + i(s[(m := (m - 1))]) * 10)) <= 9):\n            l += ((a[:-1], s[:m], str(c) + b),)\n    print(i(a) and -1 or i(b))", "i = int\nfor s in [*open(0)][1:]:\n    (a, s) = s.split()\n    l = [(a.zfill(19), s, '')]\n    for (a, s, b) in l:\n        if s and -1 < (c := (i(s[(m := (-1))]) - i(a[-1]))) <= 9 or (s[1:] and -1 < (c := (c + i(s[(m := (m - 1))]) * 10)) <= 9):\n            l += ((a[:-1], s[:m], str(c) + b),)\n    print(i(a) and -1 or i(b))", "i = int\nfor s in [*open(0)][1:]:\n    (a, s) = s.split()\n    a = a.zfill(19)\n    b = ''\n    while s and -1 < (c := (i(s[(m := (-1))]) - i(a[-1]))) <= 9 or (s[1:] and -1 < (c := (c + i(s[(m := (m - 1))]) * 10)) <= 9):\n        a = a[:-1]\n        s = s[:m]\n        b = str(c) + b\n    print(i(a) and -1 or i(b))", "for s in [*open(0)][1:]:\n    (a, s) = map(int, s.split())\n    b = 0\n    k = 1\n    while s and -1 < (c := (s % (m := 10) - a % m)) <= 9 or -1 < (c := (c + s % (m := 100) - s % 10)) <= 9 < s:\n        a //= 10\n        s //= m\n        b += k * c\n        k *= 10\n    print((b, -1)[a > 0])", "for s in [*open(0)][1:]:\n    (a, s) = map(int, s.split())\n    b = 0\n    k = 1\n    while s > 0 <= (d := (s % (m := 10) - a % m)) or -1 < (d := (s % (m := 100) - a % 10)) <= 9 < s:\n        a //= 10\n        s //= m\n        b += k * d\n        k *= 10\n    print((b, -1)[a > 0])", "import sys\nT = int(sys.stdin.readline())\nfor _ in range(T):\n    (a, x) = list(map(int, sys.stdin.readline().split()))\n    b = []\n    while a > 0 or x > 0:\n        a_ = a % 10\n        x_ = x % 10\n        if x_ >= a_:\n            b.append(x_ - a_)\n            x = x // 10\n            a = a // 10\n        elif x % 100 >= a_:\n            val = x % 100 - a_\n            if val > 10:\n                b = [-1]\n                break\n            b.append(val)\n            x = x // 100\n            a = a // 10\n        else:\n            b = [-1]\n            break\n    print(int(''.join(map(str, b[::-1]))))", "def find_b(a, s):\n    if a == '':\n        return s\n    if s == '':\n        return '-1'\n    if int(a[-1]) <= int(s[-1]):\n        prefix = find_b(a[:-1], s[:-1])\n        if prefix != '-1':\n            return prefix + str(int(s[-1]) - int(a[-1]))\n    elif len(s) >= 2 and s[-2] == '1':\n        prefix = find_b(a[:-1], s[:-2])\n        if prefix != '-1':\n            return prefix + str(int(s[-2:]) - int(a[-1]))\n    return '-1'\nn = int(input())\noutput = []\nfor _ in range(n):\n    output.append(int(find_b(*input().split())))\nfor ans in output:\n    print(ans)", "for s in [*open(0)][1:]:\n    (a, s) = map(int, s.split())\n    b = 0\n    k = 1\n    while s > 0 <= (d := (s % (m := 10) - a % m)) or -1 < (d := (s % (m := 100) - a % 10)) <= 9 < s:\n        a //= 10\n        s //= m\n        b += k * d\n        k *= 10\n    print((b, -1)[a > 0])", "def find(a, s):\n    ans = ''\n    i = len(a) - 1\n    j = len(s) - 1\n    while i > -1 and j > -1:\n        if s[j] >= a[i]:\n            ans += str(int(s[j]) - int(a[i]))\n            j -= 1\n            i -= 1\n        elif j < 1:\n            return -1\n        else:\n            y = int(s[j - 1:j + 1])\n            if y > 9 and y < 19:\n                ans += str(y - int(a[i]))\n            else:\n                return -1\n            j -= 2\n            i -= 1\n    if j == -1 and i > -1:\n        return -1\n    elif j > -1 and i == -1:\n        ans = s[:j + 1] + ans[::-1]\n    else:\n        ans = ans[::-1]\n    return int(ans)\nres = []\nr = int(input())\nfor i in range(r):\n    [a, s] = input().split()\n    res.append(find(a, s))\nfor i in res:\n    print(i)", "i = int\nfor s in [*open(0)][1:]:\n    (a, s) = s.split()\n    a = a.zfill(19)\n    b = ''\n    while s and -1 < (c := (i(s[(m := (-1))]) - i(a[-1]))) <= 9 or (s[1:] and -1 < (c := (c + i(s[(m := (m - 1))]) * 10)) <= 9):\n        a = a[:-1]\n        s = s[:m]\n        b = str(c) + b\n    print(i(a) and -1 or i(b))", "for s in [*open(0)][1:]:\n    (a, s) = map(int, s.split())\n    b = 0\n    k = 1\n    while s > 0 <= (d := (s % (m := 10) - a % m)) or -1 < (d := (s % (m := 100) - a % 10)) <= 9 < s:\n        a //= 10\n        s //= m\n        b += k * d\n        k *= 10\n    print((b, -1)[a > 0])", "for s in [*open(0)][1:]:\n    (a, s) = map(int, s.split())\n    b = 0\n    k = 1\n    while s > 0 <= (d := (s % (m := 10) - a % m)) or -1 < (d := (s % (m := 100) - a % 10)) <= 9 < s:\n        a //= 10\n        s //= m\n        b += k * d\n        k *= 10\n    print((b, -1)[a > 0])", "for s in [*open(0)][1:]:\n    (a, s) = map(int, s.split())\n    b = 0\n    k = 1\n    while s > 0 <= (d := (s % (m := 10) - a % m)) or -1 < (d := (s % (m := 100) - a % 10)) <= 9 < s:\n        a //= 10\n        s //= m\n        b += k * d\n        k *= 10\n    print((b, -1)[a > 0])", "for s in [*open(0)][1:]:\n    (a, s) = map(int, s.split())\n    b = 0\n    k = 1\n    while s > 0 <= (d := (s % (m := 10) - a % m)) or -1 < (d := (s % (m := 100) - a % 10)) <= 9 < s:\n        a //= 10\n        s //= m\n        b += k * d\n        k *= 10\n    print((b, -1)[a > 0])", "for s in [*open(0)][1:]:\n    (a, s) = map(int, s.split())\n    b = 0\n    k = 1\n    while s > 0 <= (d := (s % (m := 10) - a % m)) or -1 < (d := (s % (m := 100) - a % 10)) <= 9 < s:\n        a //= 10\n        s //= m\n        b += k * d\n        k *= 10\n    print((b, -1)[a > 0])", "for s in [*open(0)][1:]:\n    (a, s) = map(int, s.split())\n    b = 0\n    k = 1\n    while s > 0 <= (d := (s % (m := 10) - a % m)) or -1 < (d := (s % (m := 100) - a % 10)) <= 9 < s:\n        a //= 10\n        s //= m\n        b += k * d\n        k *= 10\n    print((b, -1)[a > 0])", "import sys\nimport math\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nt = inp()\nfor _ in range(t):\n    (a, s) = inlt()\n    b = ''\n    while s > 0:\n        a0 = a % 10\n        s0 = s % 10\n        if a0 > s0:\n            s0 = s % 100\n            if s0 > 18 or s0 < 10:\n                break\n            s = s // 100\n        else:\n            s0 = s % 10\n            s = s // 10\n        a = a // 10\n        b = str(s0 - a0) + b\n    if a > 0:\n        print(-1)\n    else:\n        print(int(b))", "for s in [*open(0)][1:]:\n    (a, s) = map(int, s.split())\n    b = 0\n    k = 1\n    while s > 0 <= (d := (s % (m := 10) - a % m)) or -1 < (d := (s % (m := 100) - a % 10)) <= 9 < s:\n        a //= 10\n        s //= m\n        b += k * d\n        k *= 10\n    print((b, -1)[a > 0])", "for s in [*open(0)][1:]:\n    (a, s) = map(int, s.split())\n    b = 0\n    k = 1\n    while s > 0 <= (d := (s % (m := 10) - a % m)) or -1 < (d := (s % (m := 100) - a % 10)) <= 9 < s:\n        a //= 10\n        s //= m\n        b += k * d\n        k *= 10\n    print((b, -1)[a > 0])", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (a, b) = input()[:-1].split()\n    (i, j) = (x, y) = (len(a), len(b))\n    s = ''\n    ans = 0\n    while j > 0:\n        if i > 0:\n            i -= 1\n            j -= 1\n            if b[j] >= a[i]:\n                s += str(int(b[j]) - int(a[i]))\n            elif j > 0 and b[j - 1] == '1':\n                s += str(int(b[j - 1:j + 1]) - int(a[i]))\n                j -= 1\n            else:\n                ans = -1\n                break\n        if i == 0:\n            break\n    s = b[:max(j, 0)] + s[::-1]\n    if i > 0 or ans == -1:\n        print(-1)\n    else:\n        print(s.lstrip('0'))", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nfor _ in range(inp()):\n    (n, m) = invr()\n    if m < n:\n        print(-1)\n    else:\n        s = ''\n        while m:\n            if m % 10 < n % 10:\n                k = m % 100\n                if k - n % 10 >= 10 or k < 10:\n                    print(-1)\n                    break\n                else:\n                    s = str(k - n % 10) + s\n                    m //= 100\n                    n //= 10\n            else:\n                s = str(m % 10 - n % 10) + s\n                m //= 10\n                n //= 10\n        else:\n            if n or m:\n                print(-1)\n            else:\n                s = s.lstrip('0')\n                print(s)", "import math\nfrom sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    (a, s) = map(str, input().strip().split())\n    n = len(a)\n    m = len(s)\n    flag = 1\n    res = ''\n    j = m - 1\n    for i in range(n - 1, -1, -1):\n        if a[i] > s[j]:\n            if j - 1 >= 0 and s[j - 1] != '1' or j - 1 < 0:\n                flag = 0\n                break\n            else:\n                res = res + str(int(s[j - 1:j + 1]) - int(a[i]))\n                j -= 2\n        else:\n            res = res + str(int(s[j]) - int(a[i]))\n            j -= 1\n        if i > 0 and j < 0:\n            flag = 0\n            break\n        if j < 0:\n            break\n    if flag == 0:\n        print(-1)\n    else:\n        for i in range(j, -1, -1):\n            res = res + s[i]\n        x = 0\n        for i in range(len(res)):\n            if res[i] != '0':\n                x = i\n        print(res[x::-1])", "def find(a, s):\n    i = len(s) - 1\n    j = len(a) - 1\n    res = ''\n    c = 0\n    while i > -1 and j > -1:\n        if int(s[i]) >= int(a[j]) and int(s[i]) - int(a[j]) < 10:\n            res += str(int(s[i]) - int(a[j]))\n            i -= 1\n            j -= 1\n        elif i > 0 and int(s[i - 1:i + 1]) > int(a[j]) and (int(s[i - 1:i + 1]) - int(a[j]) < 10):\n            res += str(int(s[i - 1:i + 1]) - int(a[j]))\n            i -= 2\n            j -= 1\n            c += 1\n        else:\n            return -1\n    if i >= j:\n        return int(s[:i + 1] + res[::-1])\n    else:\n        return -1\nr = int(input())\nres = []\nfor i in range(r):\n    arr = input().split()\n    res.append(find(arr[0], arr[1]))\nfor i in res:\n    print(i)", "from sys import stdin, stdout\nfrom collections import defaultdict\ninput = stdin.readline\nfrom random import randint\nimport math\nimport sys\nfor _ in range(int(input())):\n    (a, s) = map(str, input().strip().split())\n    b = ''\n    no = False\n    if int(s) < int(a):\n        print(-1)\n        continue\n    while len(a) > 0 and len(s) > 0:\n        if a[-1] == s[-1]:\n            b = '0' + b\n            a = a[:-1]\n            s = s[:-1]\n        elif int(a[-1]) < int(s[-1]):\n            b = str(int(s[-1]) - int(a[-1])) + b\n            a = a[:-1]\n            s = s[:-1]\n        elif len(s) > 1 and s[-2] == '1':\n            b = str(int(s[-2] + s[-1]) - int(a[-1])) + b\n            a = a[:-1]\n            s = s[:-2]\n        else:\n            no = True\n            break\n    if len(s) != 0:\n        b = s + b\n    if len(a) > 0:\n        no = True\n    if no:\n        print(-1)\n    else:\n        print(int(b))", "from sys import stdin, stdout\nfrom collections import defaultdict\ninput = stdin.readline\nfrom random import randint\nimport math\nimport sys\nfor _ in range(int(input())):\n    (a, s) = map(str, input().strip().split())\n    b = ''\n    no = False\n    if int(s) < int(a):\n        print(-1)\n        continue\n    while len(a) > 0 and len(s) > 0:\n        if a[-1] == s[-1]:\n            b = '0' + b\n            (a, s) = (a[:-1], s[:-1])\n        elif int(a[-1]) < int(s[-1]):\n            b = str(int(s[-1]) - int(a[-1])) + b\n            (a, s) = (a[:-1], s[:-1])\n        elif len(s) > 1 and s[-2] == '1':\n            b = str(int(s[-2] + s[-1]) - int(a[-1])) + b\n            (a, s) = (a[:-1], s[:-2])\n        else:\n            no = True\n            break\n    if len(s) != 0:\n        b = s + b\n    if no or len(a) > 0:\n        print(-1)\n    else:\n        print(int(b))", "i = int\nm = -1\nfor s in [*open(0)][1:]:\n    (a, s) = s.split()\n    l = [[a.zfill(len(s)), s, '']]\n    r = m\n    for (a, s, b) in l:\n        if s:\n            if 0 <= (c := (i(s[m]) - i(a[m]))) <= 9:\n                l += ([a[:m], s[:m], str(c) + b],)\n            if s[1:] and c < (d := (c + i(s[-2]) * 10)) <= 9:\n                l += ([a[:m], s[:-2], str(d) + b],)\n        elif '01' > a:\n            r = b\n            break\n    print(i(r))", "i = int\nm = -1\nfor s in [*open(0)][1:]:\n    (a, s) = s.split()\n    l = [[a.zfill(19), s, '']]\n    r = m\n    for (a, s, b) in l:\n        if s:\n            if 0 <= (c := (i(s[m]) - i(a[m]))) <= 9:\n                l += ([a[:m], s[:m], str(c) + b],)\n            if s[1:] and c < (d := (c + i(s[-2]) * 10)) <= 9:\n                l += ([a[:m], s[:-2], str(d) + b],)\n        elif int(a) < 1:\n            r = b\n            break\n    print(i(r))", "i = int\nm = -1\nfor s in [*open(0)][1:]:\n    (a, s) = s.split()\n    l = [(a.zfill(19), s, '')]\n    r = m\n    for (a, s, b) in l:\n        if s:\n            if 0 <= (c := (i(s[m]) - i(a[m]))) <= 9:\n                l += ((a[:m], s[:m], str(c) + b),)\n            if s[1:] and c < (d := (c + i(s[-2]) * 10)) <= 9:\n                l += ((a[:m], s[:-2], str(d) + b),)\n        elif int(a) < 1:\n            r = b\n            break\n    print(i(r))", "i = int\nfor s in [*open(0)][1:]:\n    (a, s) = s.split()\n    l = [(a.zfill(19), s, '')]\n    for (a, s, b) in l:\n        m = -1\n        if s and -1 < (c := (i(s[m]) - i(a[-1]))) <= 9 or (s[1:] and -1 < (c := (c + i(s[(m := (m - 1))]) * 10)) <= 9):\n            l += ((a[:-1], s[:m], str(c) + b),)\n    print(i(a) and -1 or i(b))", "for s in [*open(0)][1:]:\n    (a, s) = s.split()\n    a = int(a)\n    b = 0\n    k = 1\n    while s and -1 < (c := (int(s[(m := (-1))]) - a % 10)) <= 9 or (s[1:] and -1 < (c := (c + int(s[(m := (m - 1))]) * 10)) <= 9):\n        a //= 10\n        s = s[:m]\n        b = k * c + b\n        k *= 10\n    print((b, -1)[a > 0])", "for s in [*open(0)][1:]:\n    (a, s) = map(int, s.split())\n    b = 0\n    k = 1\n    while s > 0 <= (c := (s % (m := 10) - a % m)) <= 9 or -1 < (c := (c + s % (m := 100) - s % 10)) <= 9 < s:\n        a //= 10\n        s //= m\n        b += k * c\n        k *= 10\n    print((b, -1)[a > 0])", "for s in [*open(0)][1:]:\n    (a, s) = map(int, s.split())\n    b = 0\n    k = 1\n    while s > 0 <= (c := (s % (m := 10) - a % m)) or -1 < (c := (c + s % (m := 100) - s % 10)) <= 9 < s:\n        a //= 10\n        s //= m\n        b += k * c\n        k *= 10\n    print((b, -1)[a > 0])", "from sys import stdin, stdout\nfor _ in range(int(stdin.readline())):\n    (a, s) = stdin.readline().split()\n    b = ''\n    while len(s) > 0:\n        if len(a) == 0:\n            b += s[-1]\n            s = s[:-1]\n        elif int(s[-1]) - int(a[-1]) >= 0:\n            b += str(int(s[-1]) - int(a[-1]))\n            s = s[:-1]\n            a = a[:-1]\n        elif len(s) > 1 and 9 >= int(s[-2:]) - int(a[-1]) >= 0:\n            b += str(int(s[-2:]) - int(a[-1]))\n            s = s[:-2]\n            a = a[:-1]\n        else:\n            b = '1-'\n            break\n    if len(a) > 0:\n        b = '1-'\n    print(int(b[::-1]))", "from sys import stdin\nimport math\nfrom collections import deque\nfrom heapq import heapify, heappop, heappush\nfrom bisect import bisect_left, bisect_right\ninput = stdin.readline\n\ndef log(n, m):\n    (res, val) = (0, 1)\n    while True:\n        if n == val:\n            return res\n        elif n > val:\n            return res - 1\n        res += 1\n        val *= m\n\ndef ceil(m, n):\n    val = m // n\n    if m % n != 0:\n        return val + 1\n    return val\nfor _ in range(int(input())):\n    (a, s) = input().strip().split()\n    (idxa, idxs) = (len(a) - 1, len(s) - 1)\n    (b, correct) = ([], True)\n    while idxs >= 0 and idxa >= 0 and (idxa <= idxs):\n        (vala, vals) = (int(a[idxa]), int(s[idxs]))\n        if vala <= vals:\n            b.append(vals - vala)\n        else:\n            if idxs == 0:\n                correct = False\n                break\n            val = int(s[idxs - 1] + s[idxs]) - vala\n            if val >= 10 or val <= 0:\n                correct = False\n                break\n            b.append(val)\n            idxs -= 1\n        idxa -= 1\n        idxs -= 1\n    if idxa >= 0 or not correct:\n        print(-1)\n        continue\n    for c in reversed(s[0:max(idxs + 1, 0)]):\n        b.append(int(c))\n    while b[-1] == 0:\n        b.pop()\n    b = ''.join(map(str, reversed(b)))\n    print(b)", "import sys\n\ndef wrong_addition(a, s):\n    b = ''\n    len_a = len(a)\n    len_s = len(s)\n    i = len_a - 1\n    ls = len_s - 1\n    while True:\n        if ls < 0:\n            if i < 0:\n                break\n            return -1\n        if i < 0:\n            d_in_a = 0\n        else:\n            d_in_a = int(a[i])\n        i -= 1\n        d_in_s = int(s[ls])\n        if d_in_a <= d_in_s:\n            b = str(d_in_s - d_in_a) + b\n            ls -= 1\n        else:\n            ls -= 1\n            if ls < 0:\n                return -1\n            d_in_s = int(s[ls:ls + 2])\n            d_in_b = d_in_s - d_in_a\n            if d_in_b > 9:\n                return -1\n            if d_in_b < 0:\n                return -1\n            b = str(d_in_b) + b\n            ls -= 1\n    b = int(b)\n    return b\nfor _ in range(int(input())):\n    (a, s) = input().split()\n    sys.stdout.write(f'{wrong_addition(a, s)}\\n')", "i = int\nm = -1\nfor s in [*open(0)][1:]:\n    (a, s) = s.split()\n    l = [(a.zfill(len(s)), s, '')]\n    r = m\n    for (a, s, b) in l:\n        if s:\n            if 0 <= (c := (i(s[m]) - i(a[m]))) <= 9:\n                l += ((a[:m], s[:m], str(c) + b),)\n            if s[1:] and c < (d := (c + i(s[-2]) * 10)) <= 9:\n                l += ((a[:m], s[:-2], str(d) + b),)\n        elif '01' > a:\n            r = b\n            break\n    print(i(r))", "i = int\nfor s in [*open(0)][1:]:\n    (a, s) = s.split()\n    a = a.zfill(19)\n    b = ''\n    while s and -1 < (c := (i(s[(m := (-1))]) - i(a[-1]))) <= 9 or (s[1:] and -1 < (c := (c + i(s[(m := (m - 1))]) * 10)) <= 9):\n        a = a[:-1]\n        s = s[:m]\n        b = str(c) + b\n    print(i(a) and -1 or i(b))", "from collections import defaultdict, Counter, deque\nfrom math import sqrt, log10, log, floor, factorial, gcd\nfrom bisect import bisect_left, bisect_right, insort\nfrom itertools import permutations, combinations\nimport sys, io, os\ninput = sys.stdin.readline\ninf = float('inf')\nmod = 10 ** 9 + 7\n\ndef yn(a):\n    print('YES' if a else 'NO')\nceil = lambda a, b: (a + b - 1) // b\nt = int(input())\nfor i in range(t):\n    (a, s) = input().split()\n    a = int(a)\n    s = int(s)\n    a1 = a\n    s1 = s\n    result = ''\n    itr = 0\n    while a > 0 or s > 0:\n        itr += 1\n        ls = s % 10\n        la = a % 10\n        if ls < la:\n            ls = s % 100\n            chk = ls - la\n            s = s // 100\n        else:\n            chk = ls - la\n            s = s // 10\n        a = a // 10\n        result += str(chk)\n        if chk < 0 or chk >= 10:\n            result = '-1'\n            break\n    if result == '-1':\n        print(result)\n    else:\n        while s:\n            result += str(s % 10)\n            s //= 10\n        r = result[::-1]\n        r = int(r)\n        print(r)", "t = int(input())\nret = []\nfrom collections import deque\nfor i in range(t):\n    (a, b) = input().split()\n    if int(b) < int(a):\n        ret.append(-1)\n        continue\n    a = deque(list(a))\n    b = deque(list(b))\n    ans = ''\n    while b:\n        if not a:\n            a.append('0')\n        nowA = a.pop()\n        nowB = b.pop()\n        if nowA <= nowB:\n            ans = str(int(nowB) - int(nowA)) + ans\n            continue\n        else:\n            try:\n                nowB2 = b.pop()\n            except:\n                b.append('0')\n                break\n            d = int(nowB2 + nowB) - int(nowA)\n            if d > 10:\n                b.append('0')\n                break\n            elif d < 0:\n                b.append('0')\n                break\n            else:\n                ans = str(d) + ans\n    if a or b:\n        ret.append(-1)\n    else:\n        ret.append(int(ans))\nprint(*ret, sep='\\n')", "for _ in range(int(input())):\n    (a, s) = input().split()\n    n = len(a)\n    m = len(s)\n    i = n - 1\n    j = m - 1\n    b = ''\n    f = True\n    while i >= 0 and j >= 0:\n        if s[j] >= a[i]:\n            b = str(int(s[j]) - int(a[i])) + b\n            j -= 1\n            i -= 1\n        else:\n            if j - 1 < 0:\n                f = False\n                break\n            if not 9 < int(s[j - 1:j + 1]) < 19:\n                f = False\n                break\n            b = str(int(s[j - 1:j + 1]) - int(a[i])) + b\n            j -= 2\n            i -= 1\n    if not f or i >= 0:\n        print(-1)\n    else:\n        if j >= 0:\n            b = s[0:j + 1] + b\n        print(b.lstrip('0'))", "def finda(b, s):\n    (i, j) = (len(b) - 1, len(s) - 1)\n    ans = ''\n    while i >= 0 and j >= 0:\n        small = int(b[i])\n        big = 0\n        if b[i] <= s[j]:\n            big = int(s[j])\n        elif j > 0:\n            big = int(s[j - 1:j + 1])\n            j -= 1\n        g = big - small\n        if g > 9 or g < 0:\n            return -1\n        ans = str(g) + ans\n        i -= 1\n        j -= 1\n    ans = s[:j + 1] + ans\n    return int(ans) if i < 0 else -1\nfor _ in range(int(input())):\n    (b, s) = input().split()\n    print(finda(b, s))", "def finda(b, s):\n    (i, j) = (len(b) - 1, len(s) - 1)\n    ans = ''\n    while i >= 0 and j >= 0:\n        small = int(b[i])\n        big = 0\n        if b[i] <= s[j]:\n            big = int(s[j])\n        elif j > 0:\n            big = int(s[j - 1:j + 1])\n            j -= 1\n        g = big - small\n        if g > 9 or g < 0:\n            return -1\n        ans = str(g) + ans\n        i -= 1\n        j -= 1\n    ans = s[:j + 1] + ans\n    return int(ans) if i < 0 else -1\nfor _ in range(int(input())):\n    (b, s) = input().split()\n    print(finda(b, s))", "i = int\nm = -1\nfor s in [*open(0)][1:]:\n    (a, s) = s.split()\n    l = [(a.zfill(19), s, '')]\n    for (a, s, b) in l:\n        if s:\n            if 0 <= (c := (i(s[m]) - i(a[m]))) <= 9:\n                l += ((a[:m], s[:m], str(c) + b),)\n            if s[1:] and c < (d := (c + i(s[-2]) * 10)) <= 9:\n                l += ((a[:m], s[:-2], str(d) + b),)\n    print(i(a) and m or i(b))", "i = int\nm = -1\nfor s in [*open(0)][1:]:\n    (a, s) = s.split()\n    l = [(a.zfill(19), s, '')]\n    for (a, s, b) in l:\n        if s:\n            if 0 <= (c := (i(s[m]) - i(a[m]))) <= 9:\n                l += ((a[:m], s[:m], str(c) + b),)\n            if s[1:] and c < (d := (c + i(s[-2]) * 10)) <= 9:\n                l += ((a[:m], s[:-2], str(d) + b),)\n    print(i(a) and -1 or i(b))", "import sys\nimport math\nfrom bisect import bisect_right as br\nfrom collections import deque\nfrom itertools import combinations as cb\n\ndef int_arr():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef str_arr():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef input():\n    return sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    (a, s) = int_arr()\n    ans = ''\n    while a > 0 or s > 0:\n        l = a % 10\n        r = s % 10\n        a //= 10\n        s //= 10\n        if r < l:\n            x = s % 10\n            s //= 10\n            if x != 1:\n                ans = -1\n                break\n            r += 10\n        ans = str(r - l) + ans\n    print(int(ans))", "i = int\nfor s in [*open(0)][1:]:\n    (a, s) = s.split()\n    l = [(a.zfill(19), s, '')]\n    for (a, s, b) in l:\n        m = -1\n        if s and 0 <= (c := (i(s[m]) - i(a[-1]))) <= 9 or (s[1:] and -1 < (c := (c + i(s[(m := (m - 1))]) * 10)) <= 9):\n            l += ((a[:-1], s[:m], str(c) + b),)\n    print(i(a) and -1 or i(b))", "t = int(input())\nwhile t:\n    t -= 1\n    (a, b) = input().split()\n    a = int(a)\n    b = int(b)\n    c = ''\n    f = 1\n    while a and b:\n        x = b % 10 - a % 10\n        if x >= 0:\n            c += str(x)\n            b = b // 10\n            a = a // 10\n        else:\n            x = b % 100 - a % 10\n            if 0 < x < 10:\n                c += str(x)\n                b = b // 100\n                a = a // 10\n            else:\n                f = 0\n                break\n    if a or f == 0:\n        print(-1)\n    elif b:\n        c += str(b)[::-1]\n        print(c[::-1].lstrip('0'))\n    else:\n        print(c[::-1].lstrip('0'))", "i = int\nfor s in [*open(0)][1:]:\n    (a, s) = s.split()\n    l = [(a.zfill(19), s, '')]\n    for (a, s, b) in l:\n        m = -1\n        if s and 0 <= (c := (i(s[m]) - i(a[-1]))) <= 9 or (s[1:] and 0 <= (c := (c + i(s[(m := (m - 1))]) * 10)) <= 9):\n            l += ((a[:-1], s[:m], str(c) + b),)\n    print(i(a) and -1 or i(b))", "def doit(x, y):\n    if x > y:\n        raise Exception()\n    if x == y:\n        return 0\n    dx = x % 10\n    dy = y % 10\n    if dy >= dx:\n        return doit(x // 10, y // 10) * 10 + dy - dx\n    else:\n        dy = y % 100\n        if dy > dx and dy - dx < 10:\n            return doit(x // 10, y // 100) * 10 + dy - dx\n    raise Exception()\n\ndef solve():\n    (x, y) = [int(x) for x in input().split()]\n    try:\n        res = doit(x, y)\n        return res\n    except:\n        return -1\nt = int(input())\nfor _ in range(t):\n    print(solve())", "for _ in range(int(input())):\n    (a, s) = map(int, input().split())\n    b = 0\n    temp = 1\n    while s > 0:\n        subA = a % 10\n        subS = s % 10\n        if subA <= subS:\n            b += temp * (subS - subA)\n            s //= 10\n        elif s % 100 - subA in range(10):\n            b += temp * (s % 100 - subA)\n            s //= 100\n        else:\n            break\n        temp *= 10\n        a //= 10\n    if a > 0 or s > 0:\n        print(-1)\n    else:\n        print(b)", "t = int(input())\nfor i in range(t):\n    (a, s) = input().split()\n    b = ''\n    k = len(s) - 1\n    for i in reversed(range(len(a))):\n        if s[k] == a[i]:\n            b = '0' + b\n        elif s[k] < a[i]:\n            if k == 0 or s[k - 1] != '1':\n                print(-1)\n                break\n            b = str(10 + int(s[k]) - int(a[i])) + b\n            k -= 1\n        else:\n            b = str(int(s[k]) - int(a[i])) + b\n        k -= 1\n    else:\n        if k < -1:\n            print(-1)\n        elif k > -1:\n            b = s[:k + 1] + b\n            print(int(b))\n        else:\n            print(int(b))", "t = int(input())\nfor _ in range(t):\n    (a, s) = input().split()\n    ind = len(s) - 1\n    b = ''\n    for i in reversed(range(len(a))):\n        if ind < 0:\n            print(-1)\n            break\n        if s[ind] >= a[i]:\n            b = str(int(s[ind]) - int(a[i])) + b\n            ind -= 1\n        elif ind > 0 and s[ind - 1] == '1':\n            b = str(10 + int(s[ind]) - int(a[i])) + b\n            ind -= 2\n        else:\n            print(-1)\n            break\n    else:\n        if ind != -1:\n            b = s[:ind + 1] + b\n        print(int(b))", "def solve(a, s):\n    ans = ''\n    na = len(a)\n    ns = len(s)\n    i = na - 1\n    j = ns - 1\n    while i > -1 and j > -1:\n        if a[i] > s[j]:\n            c = int(s[j]) - int(a[i]) + 10\n            if j - 1 < 0 or s[j - 1] != '1':\n                return '-1'\n            j += -2\n        else:\n            c = int(s[j]) - int(a[i])\n            j += -1\n        ans = str(c) + ans\n        i += -1\n    if i > -1:\n        return '-1'\n    if j > -1:\n        ans = s[0:j + 1] + ans\n    while ans[0] == '0':\n        ans = ans[1:]\n    return ans\ntest = int(input())\nfor t in range(0, test):\n    (a, s) = input().split()\n    print(solve(a, s))", "def solve():\n    (a, s) = (int(i) for i in input().split(' '))\n    k = 0\n    num = 0\n    i = 0\n    while a > 0:\n        ai = a % 10\n        a = a // 10\n        sk = s % 10\n        s = s // 10\n        if ai <= sk:\n            num = num + (sk - ai) * 10 ** i\n        elif s % 10 == 1:\n            sk1 = s % 10\n            s = s // 10\n            num = num + (sk1 * 10 + sk - ai) * 10 ** i\n        else:\n            return -1\n        i = i + 1\n    if s > 0:\n        num = num + s * 10 ** i\n    return num\nt = int(input())\nfor _ in range(t):\n    print(solve())", "for t in range(int(input())):\n    (a, s) = input().split()\n    n = len(a)\n    m = len(s)\n    b = ''\n    i = n - 1\n    j = m - 1\n    while i >= 0 and j >= 0:\n        e = a[i]\n        d = s[j]\n        i -= 1\n        j -= 1\n        if e > d:\n            if j >= 0:\n                f = s[j]\n                j -= 1\n            else:\n                b = -1\n                break\n            if f != '1':\n                b = -1\n                break\n            else:\n                b += str(int(f + d) - int(e))\n        else:\n            b += str(int(d) - int(e))\n    if i > -1 or b == -1:\n        print(-1)\n    else:\n        while j >= 0:\n            b += s[j]\n            j -= 1\n        print(int(b[::-1]))", "for _ in range(int(input())):\n    (a, s) = map(int, input().split())\n    b = ''\n    check = True\n    if a > s:\n        print(-1)\n    else:\n        while s > 0:\n            if a > s:\n                check = False\n                break\n            if a % 10 <= s % 10:\n                d = s % 10 - a % 10\n                a = a // 10\n                s = s // 10\n            elif a % 10 > s % 10:\n                d = s % 100 - a % 10\n                if d > 10 or d < 0:\n                    check = False\n                    break\n                a = a // 10\n                s = s // 100\n            b = str(d) + b\n        if check:\n            print(int(b))\n        else:\n            print(-1)", "n = int(input())\nfor i in range(n):\n    nums = input().split()\n    a = int(nums[0])\n    s = int(nums[1])\n    ans = []\n    valid = True\n    while not (a == 0 and s == 0):\n        if s % 10 >= a % 10:\n            ans.append(s % 10 - a % 10)\n            s = s // 10\n            a = a // 10\n        elif s % 100 - a % 10 < 10 and s % 100 - a % 10 >= 0:\n            ans.append(s % 100 - a % 10)\n            s = s // 100\n            a = a // 10\n        else:\n            valid = False\n            break\n    if not valid:\n        res = -1\n    else:\n        res = 0\n        for num in ans[::-1]:\n            res = res * 10 + num\n    print(res)", "t = int(input())\nfor j in range(0, t):\n    (a, s) = map(int, input().split())\n    f = 0\n    b = ''\n    while f == 0:\n        if a % 10 < s % 10:\n            b = str(s % 10 - a % 10) + b\n            a = a // 10\n            s = s // 10\n        elif a % 10 == s % 10:\n            b = str(0) + b\n            a = a // 10\n            s = s // 10\n        elif s // 10 % 10 == 1:\n            b = str(s % 100 - a % 10) + b\n            s = s // 100\n            a = a // 10\n        else:\n            f = -1\n            b = -1\n            break\n        if s == 0:\n            if a != 0:\n                b = -1\n            f = -1\n            break\n    print(int(b))", "t = int(input())\nfor _ in range(t):\n    (a, s) = input().split()\n    a = a[::-1]\n    s = s[::-1]\n    j = 0\n    ans = ''\n    flag = True\n    for i in a:\n        if j == len(s):\n            flag = False\n            break\n        if i <= s[j] and j + 1 <= len(s):\n            ans += str(int(s[j]) - int(i))\n            j += 1\n        elif i > s[j] and j + 2 <= len(s):\n            if s[j + 1] == '1':\n                ans += str(int(s[j + 1]) * 10 + int(s[j]) - int(i))\n                j += 2\n            else:\n                flag = False\n                break\n        else:\n            flag = False\n            break\n    if flag and '-' not in ans:\n        while j < len(s):\n            ans += s[j]\n            j += 1\n        print(int(ans[::-1]))\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (w1, w2) = input().split()\n    n = len(w1)\n    m = len(w2)\n    i = n - 1\n    j = m - 1\n    ans = ''\n    flag = 1\n    while i >= 0:\n        if j >= 0 and int(w2[j]) >= int(w1[i]):\n            ans += str(int(w2[j]) - int(w1[i]))\n            i -= 1\n            j -= 1\n        elif j > 0 and 0 < int(w2[j - 1] + w2[j]) - int(w1[i]) < 10:\n            ans += str(int(w2[j - 1] + w2[j]) - int(w1[i]))\n            i -= 1\n            j -= 2\n        else:\n            print(-1)\n            flag = 0\n            break\n    if flag:\n        if j >= 0:\n            print(str(int(w2[0:j + 1] + ans[::-1])))\n        else:\n            print(str(int(ans[::-1])))", "i = int\nfor s in [*open(0)][1:]:\n    (a, s) = s.split()\n    l = [(a.zfill(19), s, '')]\n    for (a, s, b) in l:\n        if s:\n            if 0 <= (c := (i(s[-1]) - i(a[-1]))) <= 9:\n                l += ((a[:-1], s[:-1], str(c) + b),)\n            if s[1:] and c < (d := (c + i(s[-2]) * 10)) <= 9:\n                l += ((a[:-1], s[:-2], str(d) + b),)\n    print(i(a) and -1 or i(b))", "def solve():\n    [a, s] = [x for x in input().split()]\n    res = ''\n    s_ind = len(s) - 1\n    for i in range(len(a) - 1, -1, -1):\n        if s_ind < 0:\n            print(-1)\n            return\n        if s[s_ind] >= a[i]:\n            b = int(s[s_ind]) - int(a[i])\n            res = str(b) + res\n            s_ind -= 1\n        else:\n            if s_ind == 0:\n                print(-1)\n                return\n            if s[s_ind - 1] != '1':\n                print(-1)\n                return\n            b = int(s[s_ind - 1:s_ind + 1]) - int(a[i])\n            res = str(b) + res\n            s_ind -= 2\n    if s_ind >= 0:\n        res = s[:s_ind + 1] + res\n    res = str(int(res))\n    print(res)\nfor i in range(int(input())):\n    solve()", "def solve():\n    (a, s) = input().split()\n    (i, j) = (len(a) - 1, len(s) - 1)\n    ans = ''\n    while i >= 0 and j >= 0:\n        small = int(a[i])\n        big = 0\n        if a[i] <= s[j]:\n            big = int(s[j])\n        elif j > 0:\n            big = int(s[j - 1:j + 1])\n            j -= 1\n        g = big - small\n        if g > 9 or g < 0:\n            return -1\n        ans = str(g) + ans\n        i -= 1\n        j -= 1\n    ans = s[:j + 1] + ans\n    return int(ans) if i < 0 else -1\nt = int(input())\nwhile t:\n    print(solve())\n    t -= 1", "for _ in range(int(input())):\n    (a, s) = map(int, input().split())\n    ans = ''\n    tr = 0\n    if a > s:\n        print(-1)\n    else:\n        while s > 0:\n            if s == 0:\n                tr = -1\n                break\n            else:\n                x = a % 10\n                y = s % 10\n                if y >= x:\n                    ans = str(y - x) + ans\n                    a = a // 10\n                    s = s // 10\n                else:\n                    y = s % 100\n                    if y - x >= 10 or y < x:\n                        tr = -1\n                        break\n                    else:\n                        a = a // 10\n                        s = s // 100\n                        ans = str(y - x) + ans\n        if tr == 0 and a == 0:\n            print(int(ans))\n        else:\n            print(-1)", "t = int(input())\nfor i in range(t):\n    (a, s) = map(int, input().split())\n    b = ''\n    while a > 0:\n        r1 = a % 10\n        r2 = s % 10\n        r3 = s % 100\n        m1 = r1\n        m2 = r1 + 9\n        a = a // 10\n        if r2 >= m1 and r2 <= m2:\n            b = str(r2 - r1) + b\n            s = s // 10\n        elif r3 >= m1 and r3 <= m2:\n            b = str(r3 - r1) + b\n            s = s // 100\n        else:\n            print(-1)\n            break\n    else:\n        if s > 0:\n            b = str(s) + str(b)\n        print(int(b))", "import math\n\ndef solve():\n    x = input().split()\n    a = int(x[0])\n    s = int(x[1])\n    ans = []\n    while s > 0 and a > 0:\n        numa = a % 10\n        nums = s % 10\n        if nums >= numa:\n            ans.insert(0, nums - numa)\n        else:\n            s = s // 10\n            nums += s % 10 * 10\n            if nums > numa and nums >= 10 and (nums <= 18):\n                ans.insert(0, nums - numa)\n            else:\n                return -1\n        s = s // 10\n        a = a // 10\n    if a != 0:\n        return -1\n    while s > 0:\n        nums = s % 10\n        ans.insert(0, nums)\n        s = s // 10\n    ans = [str(i) for i in ans]\n    ans = ''.join(ans)\n    ans = int(ans)\n    return ans\nn = int(input())\nfor i in range(n):\n    print(solve())", "def ans(a, s):\n    b = ''\n    idx = len(s) - 1\n    for val in reversed(a):\n        sum_val = s[idx:idx + 1]\n        if sum_val < val or idx < 0:\n            if idx <= 0:\n                return -1\n            idx = idx - 1\n            sum_val = s[idx:idx + 2]\n            if int(sum_val) < int(val):\n                return -1\n            s = s[:-1]\n        if int(sum_val) - int(val) >= 10:\n            return -1\n        b = str(int(sum_val) - int(val)) + b\n        idx = idx - 1\n    b = s[:idx + 1] + b\n    return b.lstrip('0')\nfor _ in range(int(input())):\n    (a, s) = str(input()).split(' ')\n    print(ans(a, s))", "for _ in range(int(input())):\n    (a, s) = map(int, input().split())\n    b = 0\n    mf = 1\n    while s > 0:\n        s0 = s % 10\n        a0 = a % 10\n        if s0 >= a0:\n            b += mf * (s0 - a0)\n            s //= 10\n        elif s % 100 - a0 in range(10):\n            b += (s % 100 - a0) * mf\n            s //= 100\n        else:\n            break\n        mf *= 10\n        a //= 10\n    print(-1 if a > 0 or s > 0 else b)", "def ss(a, b, bi):\n    if bi != 1:\n        b = b[-bi:-bi + 1]\n    else:\n        b = b[-bi]\n    if not b:\n        return int(a)\n    return int(a) - int(b)\n\ndef doit():\n    (a, s) = input().strip().split()\n    (p, q) = (len(a), len(s))\n    (ai, si) = (1, 1)\n    b = ''\n    while si <= q:\n        t = ss(s[-si], a, ai)\n        if t >= 0:\n            b += str(t)\n            si += 1\n        elif si < q:\n            t = ss(s[-si - 1:][0:2], a, ai)\n            if len(str(t)) > 1:\n                print(-1)\n                return 0\n            else:\n                b += str(t)\n                si += 2\n        else:\n            print(-1)\n            return 0\n        ai += 1\n    if ai > p:\n        print(b[::-1].lstrip('0'))\n    else:\n        print(-1)\nt = int(input())\nfor _ in range(t):\n    doit()", "def f(a, s):\n    b = ''\n    flag = True\n    while a != 0:\n        if s == 0:\n            flag = False\n            break\n        if s % 10 >= a % 10:\n            b = str(s % 10 - a % 10) + str(b)\n            s //= 10\n            a //= 10\n        elif (s % 100 - s % 10) / 10 != 1:\n            flag = False\n            break\n        else:\n            b = str(10 + s % 10 - a % 10) + str(b)\n            s //= 100\n            a //= 10\n    if flag:\n        if str(s) == '0':\n            s = ''\n        k = str(s) + b\n        if k[0] == '0':\n            while k[0] == '0':\n                k = k[1:]\n        return k\n    else:\n        return -1\nn = int(input())\nfor i in range(n):\n    (a, s) = map(int, input().split())\n    print(f(a, s))", "for _ in range(int(input())):\n    (a, s) = map(str, input().strip().split())\n    (i, j) = (len(a) - 1, len(s) - 1)\n    an = ''\n    while j > -1:\n        if i >= 0:\n            t = int(s[j]) - int(a[i])\n        else:\n            an = s[:j + 1] + an\n            break\n        if t >= 0:\n            an = str(t) + an\n            (i, j) = (i - 1, j - 1)\n        elif j == 0:\n            an = '-1'\n            break\n        elif s[j - 1] == '1':\n            an = str(t + 10) + an\n            (i, j) = (i - 1, j - 2)\n        else:\n            an = '-1'\n            break\n        if i > j:\n            an = '-1'\n            break\n    print(int(an))", "for _ in range(int(input())):\n    (a, b) = input().split()\n    if len(b) < len(a):\n        print(-1)\n        continue\n    i = len(a) - 1\n    j = len(b) - 1\n    possible = True\n    ans = ''\n    while i >= 0:\n        if j >= 0 and b[j] >= a[i]:\n            ans += str(int(b[j]) - int(a[i]))\n            j -= 1\n        elif j > 0 and 0 < int(b[j - 1:j + 1]) - int(a[i]) < 10:\n            ans += str(int(b[j - 1:j + 1]) - int(a[i]))\n            j -= 2\n        else:\n            possible = False\n            break\n        i -= 1\n    if not possible:\n        print(-1)\n        continue\n    sr = ans[::-1]\n    if j >= 0:\n        sr = b[:j + 1] + sr\n    sr = str(int(sr))\n    print(sr)", "for _ in range(int(input())):\n    (a, s) = input().split()\n    (i, j) = (len(a) - 1, len(s) - 1)\n    possible = True\n    b = ''\n    while i >= 0 and j >= 0:\n        if s[j] == a[i]:\n            b = '0' + b\n            j -= 1\n        elif a[i] > s[j]:\n            if j == 0 or s[j - 1] != '1':\n                possible = False\n                break\n            b = str(int(s[j - 1:j + 1]) - int(a[i])) + b\n            j -= 2\n        else:\n            b = str(int(s[j]) - int(a[i])) + b\n            j -= 1\n        i -= 1\n    if not possible or i >= 0:\n        print(-1)\n    else:\n        if j >= 0:\n            b = s[:j + 1] + b\n        print(int(b))", "for _ in range(int(input())):\n    (a, s) = map(int, input().split())\n    (b, z) = (0, 1)\n    while s > 0:\n        (s0, a0) = (s % 10, a % 10)\n        if s0 >= a0:\n            b += z * (s0 - a0)\n            s //= 10\n        elif s % 100 - a0 in range(10):\n            b += z * (s % 100 - a0)\n            s //= 100\n        else:\n            break\n        a //= 10\n        z *= 10\n    print(-1 if s > 0 or a > 0 else b)", "T = int(input())\nfor _ in range(T):\n    (a, s) = input().split()\n    ans = ''\n    dif = 0\n    start_a = len(a) - 1\n    start_s = len(s) - 1\n    marker = True\n    while start_a >= 0 and start_s >= 0:\n        if int(a[start_a]) > int(s[start_s]):\n            if start_s == 0:\n                marker = False\n                break\n            elif s[start_s - 1] != '1':\n                marker = False\n                break\n            else:\n                ans = str(int(s[start_s]) + 10 - int(a[start_a])) + ans\n                start_s -= 2\n                start_a -= 1\n        else:\n            ans = str(int(s[start_s]) - int(a[start_a])) + ans\n            start_a -= 1\n            start_s -= 1\n    if not marker:\n        print(-1)\n    elif start_a != -1:\n        print(-1)\n    elif start_s < -1:\n        print(-1)\n    else:\n        if start_s == -1:\n            pass\n        else:\n            for i in range(start_s, -1, -1):\n                ans = s[i] + ans\n        for i in range(len(ans)):\n            if ans[i] != '0':\n                print(ans[i:])\n                break", "for _ in range(int(input())):\n    (a, s) = input().split()\n    a = list(a)\n    s = list(s)\n    b = ''\n    while a and s:\n        c = a.pop()\n        d = s.pop()\n        if c > d:\n            if s:\n                f = s.pop()\n                if f != '1':\n                    b = -1\n                    break\n            else:\n                b = -1\n                break\n            b += str(int(f + d) - int(c))\n        else:\n            b += str(int(d) - int(c))\n    if a or b == -1:\n        print(-1)\n        continue\n    elif s:\n        for i in s[::-1]:\n            b += i\n    print(int(b[::-1]))", "for t in range(int(input())):\n    (a, s) = map(int, input().split())\n    ans = ''\n    while s:\n        x = a % 10\n        y = s % 10\n        if x <= y:\n            ans += str(y - x)\n        else:\n            s //= 10\n            y += 10 * (s % 10)\n            if x < y <= 19 and y >= 10:\n                ans += str(y - x)\n            else:\n                print(-1)\n                break\n        a //= 10\n        s //= 10\n    else:\n        if a:\n            print(-1)\n        else:\n            ans = ans[::-1]\n            for i in range(len(ans)):\n                if ans[i] != '0':\n                    print(ans[i:])\n                    break", "for t in range(int(input())):\n    (a, s) = map(int, input().split())\n    ans = ''\n    while s:\n        x = a % 10\n        y = s % 10\n        if x <= y:\n            ans += str(y - x)\n        else:\n            s //= 10\n            y += 10 * (s % 10)\n            if x < y <= 19 and y >= 10:\n                ans += str(y - x)\n            else:\n                print(-1)\n                break\n        a //= 10\n        s //= 10\n    else:\n        if a:\n            print(-1)\n        else:\n            ans = ans[::-1]\n            for i in range(len(ans)):\n                if ans[i] != '0':\n                    print(ans[i:])\n                    break", "t = int(input())\nfor _ in range(t):\n    (a, s) = input().split()\n    n = len(s)\n    m = len(a)\n    j = n - 1\n    i = m - 1\n    b = ''\n    flag = 0\n    while j >= 0 and i >= 0:\n        x = int(s[j])\n        y = int(a[i])\n        if x >= y:\n            b += str(x - y)\n            j -= 1\n            i -= 1\n        elif j - 1 >= 0 and i >= 0:\n            p = s[j - 1]\n            q = s[j]\n            x = int(p + q)\n            if int(x - y) > 9 or int(x - y) < 0:\n                flag = 1\n                break\n            b += str(x - y)\n            j -= 2\n            i -= 1\n        else:\n            flag = 1\n            break\n    if flag or i >= 0:\n        print(-1)\n    else:\n        while j >= 0:\n            b += s[j]\n            j -= 1\n        print(int(b[::-1]))", "for _ in range(int(input())):\n    (a, s) = input().split()\n    i = len(a) - 1\n    j = len(s) - 1\n    if i > j:\n        print(-1)\n    elif i == j:\n        if all((a[d] <= s[d] for d in range(len(s)))):\n            print(int(s) - int(a))\n        else:\n            print(-1)\n    else:\n        ans = []\n        while True:\n            if i < 0:\n                da = '0'\n            else:\n                da = a[i]\n            ds = s[j]\n            if int(da) > int(ds):\n                j -= 1\n                if j < 0:\n                    break\n                elif s[j] == '1':\n                    ds = s[j] + ds\n                else:\n                    break\n            db = str(int(ds) - int(da))\n            ans.append(db)\n            i -= 1\n            j -= 1\n            if j < 0:\n                break\n        if i < 0:\n            print(int(''.join(reversed(ans))))\n        else:\n            print(-1)", "def fun(a, s):\n    a = str(a)\n    s = str(s)\n    (i, j) = (len(a) - 1, len(s) - 1)\n    ans = ''\n    while i >= 0 and j >= 0:\n        if int(a[i]) <= int(s[j]):\n            ans = str(int(s[j]) - int(a[i])) + ans\n            j -= 1\n        else:\n            if j == 0:\n                return -1\n            t = int(s[j - 1:j + 1]) - int(a[i])\n            if t > 9 or t < 0:\n                return -1\n            ans = str(t) + ans\n            j -= 2\n        i -= 1\n    ans = s[:j + 1] + ans\n    if j < 0 and i >= 0:\n        return -1\n    return int(ans)\nfor _ in range(int(input())):\n    (a, s) = map(int, input().split())\n    print(fun(a, s))", "for _ in range(int(input())):\n    (a, s) = input().split()\n    b = ''\n    j = len(s) - 1\n    got = True\n    for i in range(len(a) - 1, -1, -1):\n        if j < 0:\n            got = False\n            break\n        if int(a[i]) <= int(s[j]):\n            b += str(int(s[j]) - int(a[i]))\n            j -= 1\n        else:\n            if j < 1:\n                got = False\n                break\n            c = int(s[j - 1] + s[j])\n            if int(a[i]) + 9 < c or c < int(a[i]):\n                got = False\n                break\n            b += str(c - int(a[i]))\n            j -= 2\n    print(int(s[:j + 1] + b[::-1]) if got else -1)"]