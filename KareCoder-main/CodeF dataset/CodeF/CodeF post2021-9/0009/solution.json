["def solve() -> int:\n    n = int(input())\n    boxes = list(map(int, input().split()))\n    minimum = min(boxes)\n    return sum(boxes) - n * minimum\nresults = []\nfor _ in range(int(input())):\n    results.append(str(solve()))\nprint('\\n'.join(results))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    candies = list(map(int, input().split()))\n    min_candy = min(candies)\n    print(sum((candy - min_candy for candy in candies)))", "t = int(input())\nanswers = []\nfor i in range(t):\n    su = 0\n    n = int(input())\n    ns = [int(k) for k in input().split()]\n    m = min(ns)\n    for l in ns:\n        if l != m:\n            su += l - m\n    answers.append(su)\nfor j in range(t):\n    print(answers[j])", "import sys\ninput = lambda : sys.stdin.readline().strip()\nfor i in range(int(input())):\n    l = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    x = min(arr)\n    for i in arr:\n        ans += i - x\n    print(ans)", "import sys\nfrom math import sqrt\ninput = sys.stdin.readline\nOUTPUT = []\n\ndef print(x='', end='\\n'):\n    OUTPUT.append(str(x) + end)\nreadInt = lambda : int(input())\nreadIntTuple = lambda : tuple(map(int, input().split()))\nreadIntList = lambda : list(map(int, input().split()))\nreadIntSet = lambda : set(map(int, input().split()))\nmapInts = lambda : map(int, input().split())\n\ndef main():\n    t = readInt()\n    for _ in range(t):\n        n = readInt()\n        candies = readIntTuple()\n        lo = min(candies)\n        ret = 0\n        for c in candies:\n            ret += c - lo\n        print(ret)\ntry:\n    main()\n    sys.stdout.write(''.join(OUTPUT))\nexcept:\n    sys.stdout.write(''.join(OUTPUT))\n    raise", "for _ in range(int(input())):\n    n = int(input())\n    eat = 0\n    candy = list(map(int, input().split()))\n    candy.sort()\n    for can in candy:\n        eat = eat + (can - candy[0])\n    print(eat)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    x = min(arr)\n    c = 0\n    for i in arr:\n        c = c + (i - x)\n    print(c)", "for sravan in range(int(input())):\n    lux = int(input())\n    f = list(map(int, input().split()))\n    sum_ = sum(f)\n    must = min(f)\n    print(sum_ - must * lux)", "for _ in range(int(input())):\n    len = int(input())\n    l = list(map(int, input().split()))\n    sum_ = sum(l)\n    min_ = min(l)\n    print(sum_ - min_ * len)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n * min(a) == sum(a):\n        print(0)\n    else:\n        print(sum(a) - n * min(a))", "a = int(input())\nsumma = []\nfor _ in range(a):\n    cor = []\n    n = int(input())\n    cor = input().split()\n    for j in range(n):\n        cor[j] = int(cor[j])\n    m = min(cor)\n    summ = 0\n    for i in range(n):\n        summ += cor[i] - m\n    summa.append(summ)\nprint(*summa, sep='\\n')", "for _ in range(int(input())):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    print(sum(ls) - min(ls) * n)", "for _ in range(int(input())):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    print(sum(ls) - min(ls) * n)", "import math as m\ni = input()\ninp = []\nfor a in range(0, int(i)):\n    input()\n    inp += [input()]\nfor s in inp:\n    arr = [int(n) for n in s.split()]\n    print(sum(arr) - len(arr) * min(arr))", "for h in [*open(0)][2::2]:\n    b = (*map(int, h.split()),)\n    print(sum(b) - min(b) * len(b))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    li = list(map(int, input().split()))\n    m = min(li)\n    ans = sum(li) - m * n\n    print(ans)", "def main():\n\n    def solve(n, a):\n        m = min(a)\n        s = sum([x - m for x in a])\n        return s\n    t = int(input())\n    ans = []\n    for _ in range(t):\n        n = int(input())\n        a = [int(x) for x in input().split()]\n        ans.append(solve(n, a))\n    print('\\n'.join(map(str, ans)))\nimport sys, threading\ninput = sys.stdin.readline\nthread = threading.Thread(target=main)\nthread.start()\nthread.join()", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum(a) - min(a) * len(a))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum(a) - min(a) * len(a))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum(a) - min(a) * len(a))", "from math import inf, gcd, log, log2, floor, ceil, sqrt\nfrom collections import Counter, defaultdict\nfrom heapq import heappush, heappop, heapify\nfrom functools import lru_cache\nimport sys\nDIRS = [[1, 0], [0, 1], [0, -1], [-1, 0], [-1, -1], [1, 1], [-1, 1], [1, -1]]\nMOD = 10 ** 9 + 7\ninput = sys.stdin.readline\nt = int(input())\n\ndef solve():\n    n = int(input())\n    a = [int(x) for x in input().split(' ')]\n    m = min(a)\n    ans = 0\n    for x in a:\n        ans += x - m\n    print(ans)\nwhile t:\n    solve()\n    t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    (low, res) = (min(a), 0)\n    for j in range(n):\n        res += a[j] - low\n    print(res)", "from sys import stdin, stdout\nimport collections\nimport math\n\ndef solve():\n    return\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        l = list(map(int, input().split()))\n        m = min(l)\n        ans = sum([i - m for i in l])\n        print(ans)\n    return\ninput = stdin.readline\nmain()", "for t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    mn = min(arr)\n    print(sum((x - mn for x in arr)))", "t = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = min(a)\n    ans = [i - m for i in a]\n    print(sum(ans))\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    can = list(map(int, input().split()))\n    mini = min(can)\n    eaten = 0\n    for c in can:\n        if c > mini:\n            eaten += c - mini\n    print(eaten)", "import sys\nfrom sys import stdin, stdout\nfrom math import ceil, floor, sqrt, log, log2, log10\nfrom collections import Counter\nint_max = float('inf')\nint_min = -float('inf')\nmod = 10 ** 9 + 7\nANS = []\ninput = stdin.readline\n\ndef solve():\n    pass\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    minn = min(arr)\n    total = 0\n    for i in arr:\n        total += i - minn\n    print(total)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = min(a)\n    print(sum((i - x for i in a)))", "for _ in range(int(input())):\n    (N, A) = (int(input()), list(map(int, input().split())))\n    c = 0\n    X = min(A)\n    for i in A:\n        c += i - X\n    print(c)", "for t in range(int(input())):\n    n = int(input())\n    A = [int(i) for i in input().split()]\n    x = min(A)\n    y = sum(A)\n    ans = y - n * x\n    print(ans)", "import math\nimport itertools\nimport heapq\nfrom math import floor, ceil\n\ndef lcm(a, b):\n    return abs(a * b) // math.gcd(a, b)\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef isSubsequence(s, t):\n    for i in range(0, len(s)):\n        try:\n            index = t.index(s[i])\n        except ValueError:\n            return False\n        t = t[index + 1:]\n    return True\nfor _ in range(int(input())):\n    N = input()\n    arr = list(map(int, input().split()))\n    a = min(arr)\n    s = 0\n    for i in range(len(arr)):\n        s += arr[i] - a\n    print(s)", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = min(a)\n    f = sum(a)\n    print(f - d * n)", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    m = min(a)\n    s = sum(a)\n    print(s - m * n)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    q = min(a)\n    ans = 0\n    for i in a:\n        ans += i - q\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    mn = min(l)\n    su = 0\n    for i in range(n):\n        su += l[i] - mn\n    print(su)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    m = min(arr)\n    toal = m * n\n    print(sum(arr) - toal)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    lst = list(map(int, input().split()))\n    ans = sum(lst) - min(lst) * n\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(sum(a) - n * min(a))", "for i in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    x = min(a)\n    s = 0\n    for j in a:\n        s += j - x\n    print(s, end='\\n')", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    n = int(inp())\n    a = list(map(int, inp().split()))\n    m = min(a)\n    print(sum(a) - m * n)\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "n = int(input())\nfor _ in range(n):\n    k = input()\n    li = list(map(int, input().split(' ')))\n    mn = min(li)\n    ans = 0\n    for i in li:\n        ans += abs(mn - i)\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    c = int(input())\n    candies = [int(x) for x in input().strip().split(' ')]\n    box = min(candies)\n    print(sum([candy - box for candy in candies]))", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    l = list(map(int, input().split()))\n    print(sum(l) - N * min(l))", "import math as m\nimport sys\ninput = lambda : sys.stdin.readline().strip()\nfor i in range(int(input())):\n    a = int(input())\n    lis = list(map(int, input().split()))\n    m = min(lis)\n    s = m * a\n    print(sum(lis) - s)", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    print(sum(lst) - min(lst) * n)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    smallest = min(a)\n    print(sum(a) - smallest * n)", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_ls():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        ls = get_ls()\n        ans = 0\n        mn = min(ls)\n        for i in ls:\n            ans += i - mn\n        print(ans)\nmain()", "def function():\n    m = int(input())\n    count = 0\n    arr = list(map(int, input().split()))\n    arr.sort()\n    min = arr[0]\n    for ele in arr:\n        if ele != min:\n            count += ele - min\n    print(count)\nn = int(input())\nfor i in range(n):\n    function()", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    total = 0\n    for j in a:\n        total += j - a[0]\n    print(total)", "n = int(input())\nb = [0] * n\nfor i in range(0, n):\n    boxes = int(input())\n    a = [int(x) for x in input().split()]\n    min = a[0]\n    for j in range(0, boxes):\n        if a[j] < min:\n            min = a[j]\n    for k in range(0, boxes):\n        b[i] = b[i] + a[k] - min\nfor l in range(0, n):\n    print(b[l])", "for i in range(int(input())):\n    n = int(input())\n    L = [int(el) for el in input().split()]\n    print(sum(L) - min(L) * n)", "t = int(input())\nfor _ in range(t):\n    nnnn = int(input())\n    aaa = list(map(int, input().split()))\n    ddd = sum(aaa) - nnnn * min(aaa)\n    print(ddd)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mini = min(a)\n    count = 0\n    for val in a:\n        count += val - mini\n    print(count)", "def solve(arr):\n    mn = min(arr)\n    res = 0\n    for i in range(len(arr)):\n        res += arr[i] - mn\n    return res\ninpt = int(input())\nfor x in range(inpt):\n    n = input()\n    arr = [int(x) for x in input().split(' ')]\n    print(solve(arr))", "t = int(input())\nfor i in range(t):\n    o = 0\n    n = int(input())\n    a = [0] * n\n    a = list(map(int, input().split()))\n    c = min(a)\n    for j in range(n):\n        o += a[j] - c\n    print(o)", "def inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\ntests = inp()\nfor i in range(tests):\n    n = inp()\n    d = inlt()\n    minn = min(d)\n    summ = 0\n    for i in range(n):\n        summ += d[i] - minn\n    print(summ)", "x = int(input())\nfor i in range(x):\n    a = int(input())\n    b = list(map(int, input().split()))\n    u = sum(b)\n    k = min(b)\n    l = u - a * k\n    print(l)", "for _ in range(int(input())):\n    num = int(input())\n    nums = list(map(int, input().split()))\n    mini = min(nums)\n    snums = set(nums)\n    candies = 0\n    if len(snums) == 1:\n        print(0)\n    else:\n        for e in nums:\n            candies += e - mini\n        print(candies)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    nums.sort()\n    first = nums[0]\n    ans = 0\n    for i in nums:\n        ans += i - first\n    print(ans)", "t = int(input(''))\nfor _ in range(t):\n    n = int(input(''))\n    l = input('').split()\n    l = [int(x) for x in l]\n    m = min(l)\n    count = 0\n    for i in l:\n        count = count + (i - m)\n    print(count)", "num = int(input())\nfor i in range(num):\n    input()\n    num = list(map(int, input().split()))\n    st1 = 0\n    min = 100000000000\n    for m in num:\n        if m < min:\n            min = m\n    for j in num:\n        st1 += j - min\n    print(st1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = sum(a) - n * min(a)\n    print(ans)", "for n in range(int(input())):\n    input()\n    a = [*map(int, input().split())]\n    print(-min(a) * len(a) + sum(a))", "testcase = int(input())\narr = []\nfor _ in range(testcase):\n    numBox = int(input())\n    arrBox = list(map(int, input().split()))\n    arr.append(arrBox)\nfor i in arr:\n    print(sum(i) - len(i) * min(i))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()[:n]))\n    m = min(arr)\n    ans = 0\n    for item in arr:\n        ans += item - m\n    print(ans)", "m = int(input())\nfor i in range(m):\n    n = int(input())\n    list1 = [int(x) for x in input().split()]\n    a = min(list1)\n    result = 0\n    if n > 1:\n        for i in list1:\n            b = i - a\n            result += b\n        print(result)\n    else:\n        print('0')", "t = int(input())\nfor te in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    mm = min(arr)\n    ans = 0\n    for i in arr:\n        ans += i - mm\n    print(ans)", "for _ in range(int(input())):\n    f = int(input())\n    arr = list(map(int, input().split()))\n    diff = sum(arr) - f * min(arr)\n    print(diff)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = [int(j) for j in input().split()]\n    l.sort()\n    k = 0\n    for j in range(1, n):\n        k = k + l[j] - l[0]\n    print(k)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = min(l)\n    d = 0\n    for i in range(len(l)):\n        d = d + abs(l[i] - c)\n    print(d)", "a = int(input())\nwhile a:\n    x = int(input())\n    y = [int(i) for i in input().split()]\n    k = sum(y) - min(y) * x\n    print(k)\n    a -= 1", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    num = list(map(int, input().split()))\n    if len(num) == 1:\n        print(0)\n        continue\n    minimum = min(num)\n    output = 0\n    for i in num:\n        output += i - minimum\n    print(output)", "for _ in range(int(input())):\n    input()\n    nums = list(map(int, input().split()))\n    minimum = min(nums)\n    print(sum([n - minimum for n in nums]))", "for i in range(int(input())):\n    len = int(input())\n    l = list(map(int, input().split()))\n    s = sum(l)\n    minl = min(l)\n    print(s - minl * len)", "t = int(input())\nfor i in range(t):\n    num = int(input())\n    arr = list(map(int, input().split(' ')))\n    candies = 0\n    minimum = min(arr)\n    for ind in range(num):\n        if arr[ind] != minimum:\n            candies = candies + (arr[ind] - minimum)\n        else:\n            pass\n    print(candies)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = sum(l) - min(l) * n\n    print(ans)", "for iq in range(int(input())):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    m = min(ls)\n    cnt = 0\n    for i in range(n):\n        cnt += ls[i] - m\n    print(cnt)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    l = list(map(int, input().split()))\n    s1 = min(l)\n    s2 = max(l)\n    if s1 == s2:\n        print(0)\n        continue\n    c = 0\n    for i in l:\n        c += i - s1\n    print(c)", "number_test = int(input())\nfor i in range(number_test):\n    number_box = int(input())\n    quantity = list(map(int, input().split()))\n    answer = 0\n    minimum = quantity[0]\n    for i in range(1, len(quantity)):\n        if quantity[i] < minimum:\n            minimum = quantity[i]\n    for i in quantity:\n        if i != minimum:\n            answer += i - minimum\n    print(answer)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = min(l)\n    sm = 0\n    for i in l:\n        i = i - m\n        sm = sm + i\n    print(sm)", "n = int(input())\nfor _ in range(n):\n    k = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    b = min(a)\n    for i in a:\n        s += i - b\n    print(s)", "def min(a):\n    min = a[0]\n    for i in a:\n        min = min if min < i else i\n    return min\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = list(map(int, input().split(' ')))\n    s1 = min(s)\n    sum = 0\n    for i in range(n):\n        if s[i] > s1:\n            sum += s[i] - s1\n    print(sum)", "def solution():\n    n = int(input())\n    for i in range(n):\n        num_boxes = int(input())\n        l = list(map(int, input().split()))\n        minimum_val = min(l)\n        total = sum(l)\n        res = total - minimum_val * num_boxes\n        print(res)\nsolution()", "n = int(input())\nA = []\nT = []\nfor i in range(n):\n    A += [int(input())]\n    T += [list(map(int, input().split()))]\nfor item in T:\n    print(sum(item) - min(item) * len(item))", "def ii():\n    return int(input())\n\ndef il(sep=' '):\n    if sep == '':\n        return [int(i) for i in input()]\n    return [int(i) for i in input().split(sep)]\nt = ii()\nfor tt in range(t):\n    n = ii()\n    a = il()\n    if n == 1:\n        print(0)\n        continue\n    x = min(a)\n    ans = 0\n    for i in a:\n        ans += i - x\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    mn = min(l)\n    cnt = 0\n    for i in l:\n        cnt += i - mn\n    print(cnt)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    hey = len(l)\n    k = min(l)\n    meet = sum(l) - hey * k\n    print(meet)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    mi = min(l)\n    sum = 0\n    for i in l:\n        sum += i - mi\n    print(sum)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    boxes = list(map(int, input().split()))\n    m = min(boxes)\n    count = 0\n    for j in range(n):\n        count += boxes[j] - m\n    print(count)", "a = int(input())\narr = []\nfor i in range(a):\n    x = int(input())\n    Num = list(map(int, input().split()))\n    Min = min(Num)\n    Diff = sum(Num) - int(Min) * x\n    arr.append(Diff)\nfor i in range(a):\n    print(arr[i])", "t = int(input())\nfor i in range(t):\n    num = int(input())\n    n = [int(x) for x in input().split()]\n    n.sort()\n    sum = 0\n    for j in range(1, len(n)):\n        sum = sum + n[j] - n[0]\n    print(sum)", "for _ in range(int(input())):\n    m = int(input())\n    a = list(map(int, input().split()))\n    f = sum(a) - m * min(a)\n    print(f)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = []\n    minn = min(a)\n    for i in a:\n        l.append(i - minn)\n    print(sum(l))", "from math import *\nimport os\n\ndef codebyShamsov_saf(n):\n    if n > 0:\n        return False\n    return True\na = int(input())\nfor __________________ in range(a):\n    b = int(input())\n    c = list(map(int, input().split()))\n    s = 0\n    q = min(c)\n    for i in c:\n        s += i - q\n    print(s)", "t = int(input())\nfor cases in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    mini = min(arr)\n    summ = 0\n    for i in range(n):\n        summ += arr[i] - mini\n    print(summ)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    r = l[0]\n    s = 0\n    if l[0] == l[n - 1]:\n        print('0')\n    else:\n        for k in range(1, n):\n            s = s + (l[k] - r)\n        print(s)", "def main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    total = 0\n    arr.sort()\n    for i in range(1, n):\n        total += arr[i] - arr[0]\n    return total\nt = int(input())\nfor i in range(t):\n    print(main())", "t = int(input())\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    minn = min(arr)\n    ans = sum(arr) - n * minn\n    print(ans)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    candies = input().split()\n    x = list(map(int, candies))\n    x.sort()\n    print(sum(x) - x[0] * n)\n    t = t - 1"]