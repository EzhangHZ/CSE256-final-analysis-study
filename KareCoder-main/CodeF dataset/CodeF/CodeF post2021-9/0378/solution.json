["T = int(input())\nfor i in range(T):\n    S = input()\n    minn = S[-1]\n    res = []\n    for i in S[-2::-1]:\n        if i > minn:\n            if i == '9':\n                res.append(i)\n            else:\n                res.append(str(int(i) + 1))\n        else:\n            res.append(minn)\n            minn = i\n    res.append(minn)\n    res.sort()\n    print(''.join(res))", "def calculation(strList):\n    number = [0 for x in range(10)]\n    smallest = 10\n    for x in range(len(strList) - 1, -1, -1):\n        if strList[x] <= smallest:\n            smallest = strList[x]\n            number[strList[x]] += 1\n        else:\n            add = min(strList[x] + 1, 9)\n            number[add] += 1\n    result = ''\n    for x in range(10):\n        result += str(x) * number[x]\n    return result\nn = int(input())\nanswer = []\nfor x in range(n):\n    s = input()\n    strList = []\n    for x in s:\n        strList.append(x)\n        strList[-1] = int(strList[-1])\n    result = calculation(strList)\n    answer.append(result)\nfor y in range(n):\n    print(answer[y])", "for _ in range(int(input())):\n    s = input()\n    mi = s[-1]\n    ans = []\n    for i in s[-2::-1]:\n        if mi >= i:\n            ans.append(mi)\n            mi = i\n        else:\n            ans.append(str(min(int(i) + 1, 9)))\n    ans.append(mi)\n    ans.sort()\n    print(''.join(ans))", "def solve():\n    s0 = list(input())\n    n = len(s0)\n    mini = '9'\n    for i in range(n - 1, -1, -1):\n        if s0[i] <= mini:\n            mini = s0[i]\n        else:\n            s0[i] = str(min(int(s0[i]) + 1, 9))\n    s0.sort()\n    print(''.join(s0))\nfor _ in range(int(input())):\n    solve()", "import sys\nimport random\nfor _ in range(int(input())):\n    s = input()\n    min_num = s[-1]\n    ans = []\n    for num in reversed(s):\n        if num <= min_num:\n            ans.append(num)\n            min_num = num\n        else:\n            ans.append(str(min(int(num) + 1, 9)))\n    print(''.join(sorted(ans)))", "import sys\nimport collections\nfrom math import ceil, gcd, sqrt, log\nimport bisect\nINF = float('inf')\nmod = 1000000007\n\ndef solve():\n    s = input()\n    n = len(s)\n    net = list(s)\n    mini = '9'\n    for i in range(n - 1, -1, -1):\n        if net[i] <= mini:\n            mini = net[i]\n        else:\n            net[i] = str(min(int(net[i]) + 1, 9))\n    ans = ''.join(sorted(net))\n    print(ans)\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "t = int(input())\noutput = []\nfor i in range(t):\n    s = input()[::-1]\n    if all((d == s[0] for d in s)):\n        output.append(s)\n        continue\n    digits = [int(x) for x in s]\n    n = len(digits)\n    rest = []\n    while digits != []:\n        m = min(digits)\n        start = digits.index(m)\n        for d in digits[start:]:\n            if d != m:\n                rest.append(min(d + 1, 9))\n            else:\n                rest.append(m)\n        digits = digits[:start]\n    rest.sort()\n    output.append(''.join(map(str, rest)))\nfor o in output:\n    print(o)", "import sys\n\ndef A():\n    return [int(i) for i in input().split()]\n\ndef N():\n    return int(input())\n\ndef V():\n    return map(int, input().split())\n\ndef W():\n    return [i for i in input().split()]\n\ndef C():\n    return [i for i in input()]\n\ndef solve():\n    for _ in range(int(input())):\n        s = list(input())\n        m = s[-1]\n        ans = []\n        for i in s[::-1]:\n            if i <= m:\n                ans.append(i)\n                m = i\n            else:\n                ans.append(str(min(int(i) + 1, 9)))\n        print(''.join(sorted(ans)))\nsolve()", "for _ in range(int(input())):\n    s = input()\n    min_num = s[-1]\n    ans = []\n    for num in reversed(s):\n        if num <= min_num:\n            ans.append(num)\n            min_num = num\n        else:\n            ans.append(str(min(int(num) + 1, 9)))\n    print(''.join(sorted(ans)) + '\\n')", "for j in range(int(input())):\n    str1 = input()\n    minimum = str1[-1]\n    output = list()\n    for i in reversed(str1):\n        if i <= minimum:\n            output.append(i)\n            minimum = i\n        else:\n            output.append(str(min(int(i) + 1, 9)))\n    print(''.join(sorted(output)))", "import sys\n\ndef main():\n    t = int(sys.stdin.readline()[:-1])\n    for _ in range(t):\n        s = list(map(int, sys.stdin.readline()[:-1]))\n        (p, r) = ([], [])\n        for i in range(len(s) - 1, -1, -1):\n            if len(p) == 0 or p[-1] >= s[i]:\n                p.append(s[i])\n            else:\n                r.append(min(s[i] + 1, 9))\n        r.sort(reverse=True)\n        ans = []\n        while p:\n            if len(r) > 0:\n                if p[-1] <= r[-1]:\n                    ans.append(str(p.pop()))\n                else:\n                    ans.append(str(r.pop()))\n            else:\n                ans.append(str(p.pop()))\n        while r:\n            ans.append(str(r.pop()))\n        print(''.join(ans))\nmain()", "for t in range(int(input())):\n    n = input()\n    min_num = n[-1]\n    c = []\n    for i in n[::-1]:\n        if i <= min_num:\n            c.append(i)\n            min_num = i\n        else:\n            c.append(str(min(int(i) + 1, 9)))\n    print(''.join(sorted(c)))", "n = int(input())\nfor i in range(n):\n    a = [int(i) for i in input()]\n    b = list(reversed(a))\n    c = []\n    c.append(b[0])\n    now = b[0]\n    for i in b[1:]:\n        if i > now:\n            if i != 9:\n                c.append(i + 1)\n            else:\n                c.append(9)\n        else:\n            now = i\n            c.append(i)\n    c.sort()\n    print(''.join((str(i) for i in c)))", "for _ in range(int(input())):\n    s = input()\n    mn = '99999999'\n    l = []\n    for i in s[::-1]:\n        if i <= mn:\n            l.append(i)\n            mn = i\n        else:\n            l.append(str(min(int(i) + 1, 9)))\n    print(''.join(sorted(l)))", "for _ in range(int(input())):\n    s = input()\n    mn = '99999999'\n    l = []\n    for i in s[::-1]:\n        if i <= mn:\n            l.append(i)\n            mn = i\n        else:\n            l.append(str(min(int(i) + 1, 9)))\n    print(''.join(sorted(l)))", "for t in range(int(input())):\n    n = input()\n    min_num = n[-1]\n    c = []\n    for i in n[::-1]:\n        if i <= min_num:\n            c.append(i)\n            min_num = i\n        else:\n            c.append(str(min(int(i) + 1, 9)))\n    print(''.join(sorted(c)))", "t = int(input())\n\ndef solve():\n    s = input()\n    lst = []\n    for i in range(len(s)):\n        lst += [int(s[i])]\n    ch = 9\n    for i in range(len(lst) - 1, -1, -1):\n        if lst[i] <= ch:\n            ch = lst[i]\n        elif lst[i] != 9:\n            lst[i] += 1\n    lst.sort()\n    print(''.join((str(ele) for ele in lst)))\nwhile t:\n    solve()\n    t -= 1", "import sys, math\ninput = sys.stdin.readline\nINF = int(1000000000.0) + 7\n\ndef solve():\n    s = list(map(int, input().rstrip()))\n    n = len(s)\n    cnt = [0] * 10\n    for i in s:\n        cnt[i] += 1\n    cnt2 = [0] * 10\n    idx = 0\n    ans = ''\n    cnt1 = [0] * 10\n    for i in range(n):\n        while cnt[idx] == 0:\n            idx += 1\n        if idx == s[i]:\n            ans += str(idx)\n            cnt[s[i]] -= 1\n            cnt1[s[i]] += 1\n        else:\n            cnt[s[i]] -= 1\n            cnt2[min(s[i] + 1, 9)] += 1\n    real = ''\n    for i in range(10):\n        real += str(i) * (cnt1[i] + cnt2[i])\n    print(real)\nt = 1\nt = int(input())\nfor i in range(1, t + 1):\n    solve()", "t = int(input())\nfor _ in range(t):\n    l = input()\n    l = [int(li) for li in l]\n    minm = l[len(l) - 1]\n    for i in range(len(l) - 2, -1, -1):\n        if l[i] <= minm:\n            minm = l[i]\n        elif l[i] != 9:\n            l[i] += 1\n    print(''.join((str(x) for x in sorted(l))))", "t = int(input())\nwhile t > 0:\n    x = input()\n    a = '9'\n    s = [0 for i in range(10)]\n    for i in x[::-1]:\n        if i <= a:\n            s[ord(i) - ord('0')] += 1\n            a = i\n        elif i != '9':\n            s[ord(i) - ord('0') + 1] += 1\n        else:\n            s[10 - 1] += 1\n    f = []\n    for i in range(10):\n        d = s[i]\n        while d > 0:\n            f.append(str(i))\n            d -= 1\n    print(''.join(f))\n    t -= 1", "def ans(s):\n    if len(s) == 1:\n        return ''.join(s)\n    left = len(s) - 1\n    right = left\n    left -= 1\n    while left < right and left >= 0:\n        if s[left] <= s[right]:\n            right = left\n            left -= 1\n        else:\n            e = s[left]\n            s[left] = ''\n            s.append(str(min(9, int(e) + 1)))\n            left -= 1\n    return ''.join(sorted(s))\nt = int(input())\nfor _ in range(t):\n    s = input()\n    print(ans([x for x in s]))", "t = int(input())\nfor _ in range(t):\n    n = input()\n    s = ''\n    ar = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']\n    char = max(ar)\n    for i in n[:][::-1]:\n        if i == '9':\n            s += ar[9]\n        elif i <= char:\n            s += ar[int(i) - int('0')]\n            char = i\n        else:\n            s += ar[int(i) - int('0') + 1]\n    s = sorted(s)\n    print(''.join(s))", "import bisect\nfor t in range(int(input())):\n    s = input()\n    dct = {}\n    for i in range(len(s)):\n        if s[i] in dct:\n            dct[s[i]].append(i)\n        else:\n            dct[s[i]] = [i]\n    s = ''.join(sorted(set(s)))\n    ans = []\n    res = 0\n    for i in s:\n        temp = dct[i]\n        n = len(temp)\n        ind = bisect.bisect_left(temp, res)\n        l = [i] * (n - ind)\n        ans += l\n        if i == '9':\n            l = [i] * ind\n            ans += l\n        else:\n            l = [chr(ord(i) + 1)] * ind\n            ans += l\n        res = max(res, temp[-1])\n    print(''.join(ans))", "t = int(input())\nfor i in range(t):\n    x = input()\n    x = list(x)\n    x = [int(n) for n in x]\n    x.reverse()\n    min = 10\n    k = len(x)\n    for j in range(0, k):\n        if x[j] <= min:\n            min = x[j]\n        else:\n            x[j] = x[j] + 1\n            if x[j] == 10:\n                x[j] = 9\n    x.sort()\n    ans = ''\n    for k in x:\n        ans += str(k)\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    l = list(s)\n    l.reverse()\n    m = 10\n    for i in range(len(s)):\n        if int(l[i]) <= m:\n            m = int(l[i])\n        else:\n            l[i] = str(min(int(l[i]) + 1, 9))\n    print(''.join(sorted(l)))", "t = int(input())\nfor i in range(t):\n    s = input()[::-1]\n    if all((d == s[0] for d in s)):\n        print(s)\n        continue\n    digits = [int(x) for x in s]\n    n = len(digits)\n    rest = []\n    while digits != []:\n        m = min(digits)\n        start = digits.index(m)\n        for d in digits[start:]:\n            if d != m:\n                rest.append(min(d + 1, 9))\n            else:\n                rest.append(m)\n        digits = digits[:start]\n    rest.sort()\n    print(''.join(map(str, rest)))", "def minim(g_str):\n    arr = []\n    k = int(g_str[len(g_str) - 1])\n    arr.append(k)\n    for i in range(len(g_str) - 1, 0, -1):\n        if int(g_str[i - 1]) > k:\n            if int(g_str[i - 1]) == 9:\n                arr.append(9)\n            else:\n                arr.append(int(g_str[i - 1]) + 1)\n        else:\n            k = int(g_str[i - 1])\n            arr.append(int(g_str[i - 1]))\n    arr.sort()\n    return arr\nk = int(input())\nfor i in range(k):\n    g_str = input()\n    print(''.join([str(x) for x in minim(g_str)]))", "for _ in range(int(input())):\n    s = input()\n    p = []\n    l = list(s)\n    l.reverse()\n    m = 10\n    for i in range(len(s)):\n        if int(l[i]) <= m:\n            m = int(l[i])\n        else:\n            l[i] = str(min(int(l[i]) + 1, 9))\n    print(''.join(sorted(l)))", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    nums = list(map(int, list(input().rstrip())))\n    dic = dict()\n    for x in range(10):\n        dic[x] = []\n    for num in range(len(nums)):\n        dic[nums[num]].append(num)\n    ma = -1\n    result = []\n    for x in range(10):\n        for y in dic[x]:\n            if ma < y:\n                ma = y\n                result.append(str(x))\n            else:\n                result.append(str(min(x + 1, 9)))\n    result1 = ''\n    result.sort()\n    for x in result:\n        result1 += x\n    print(result1)", "from collections import defaultdict, Counter\n\ndef solver(A, B, target):\n    maxx = 0\n    for (x, y) in zip(A, B):\n        maxx = max(maxx, y + target - x)\n    return maxx\n\ndef solve():\n    s = input()\n    hs = defaultdict(int)\n    minn = 10\n    ans = []\n    for i in range(len(s) - 1, -1, -1):\n        if int(s[i]) > minn:\n            bpoint = i\n            hs[min(int(s[i]) + 1, 9)] += 1\n        else:\n            hs[int(s[i])] += 1\n            minn = min(minn, int(s[i]))\n    ans = ans[::-1]\n    for i in range(0, 11):\n        if i in hs:\n            ans.extend([i] * hs[i])\n    print(''.join(map(str, ans)))\nfor _ in range(int(input())):\n    solve()", "t = int(input())\n\ndef solve():\n    s = [int(x) for x in input()]\n    n = len(s)\n    not_removed = [0 for i in range(10)]\n    removed = [0 for i in range(10)]\n    start = 0\n    for i in range(9):\n        if i in s:\n            for j in range(len(s)):\n                if s[j] == i:\n                    ilast = j\n            for x in s[:ilast + 1]:\n                if x == i:\n                    not_removed[x] += 1\n                else:\n                    removed[min(x + 1, 9)] += 1\n            s = s[ilast + 1:]\n    removed[9] += len(s)\n    nums = [x + y for (x, y) in zip(not_removed, removed)]\n    print(''.join((str(i) * x for (i, x) in enumerate(nums))))\nfor _ in range(t):\n    solve()", "t = int(input())\nfor _ in range(t):\n    s = input()\n    st = []\n    ans = []\n    for c in s:\n        while ans and ans[-1] > c:\n            st.append(min(9, int(ans.pop()) + 1))\n        ans.append(c)\n    st = [str(i) for i in st]\n    ans.extend(st)\n    ans.sort()\n    print(''.join(ans))", "t = int(input())\nwhile t:\n    s = input()\n    arr = [x for x in s]\n    mn = 9\n    for i in range(len(s) - 1, -1, -1):\n        if int(arr[i]) <= mn:\n            mn = int(arr[i])\n        else:\n            arr[i] = str(min(int(arr[i]) + 1, 9))\n    print(''.join(sorted(arr)))\n    t -= 1", "for t in range(int(input())):\n    s = input()\n    m = s[-1]\n    ans = []\n    for i in reversed(s):\n        m = min(i, m)\n        if i <= m:\n            ans.append(i)\n        else:\n            ans.append(str(min(int(i) + 1, 9)))\n    print(''.join(sorted(ans)))", "import sys\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s)\n\ndef invr():\n    return map(int, input().split())\n\ndef main():\n    t = inp()\n    for i in range(t):\n        s = insr()\n        m = 9\n        for i in reversed(range(len(s))):\n            v = int(s[i])\n            s[i] = int(s[i])\n            if v < m:\n                m = v\n            if v > m:\n                s[i] = min(9, v + 1)\n        s = sorted(s)\n        ss = ''\n        for l in s:\n            ss += str(l)\n        print(ss)\nmain()", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    s = input()\n    res = 9\n    check = defaultdict(int)\n    for i in s[::-1]:\n        x = int(i)\n        if res >= x:\n            check[min(x, 9)] += 1\n            res = x\n        else:\n            check[min(x + 1, 9)] += 1\n    for (k, v) in sorted(check.items()):\n        print(str(k) * v, end='')\n    print()", "for _ in range(int(input())):\n    s = list(input())\n    s = [int(i) for i in s]\n    dick = {0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0}\n    for i in s:\n        dick[i] += 1\n        continue\n    s1 = s[::-1]\n    min = 9\n    for i in s1:\n        if i < min:\n            min = i\n            continue\n        if i > min:\n            if i == 9:\n                continue\n            dick[i] -= 1\n            dick[i + 1] += 1\n            continue\n        continue\n    ans = []\n    for i in range(10):\n        ans += [i] * dick[i]\n        continue\n    ans = ''.join((str(i) for i in ans))\n    print(ans)\n    continue", "for _ in range(int(input())):\n    s = input()\n    m = s[-1]\n    ans = []\n    for i in reversed(s):\n        m = min(i, m)\n        ans.append(i if i <= m else str(min(int(i) + 1, 9)))\n    print(''.join(sorted(ans)))", "T = int(input())\nfor _ in range(T):\n    x = input()\n    x = [int(x) for x in list(x)]\n    lx = len(x)\n    smallest = x[-1]\n    inc = []\n    same = []\n    for ii in range(lx - 1, -1, -1):\n        if x[ii] > smallest:\n            inc.append(min(x[ii] + 1, 9))\n        else:\n            same.append(x[ii])\n            smallest = x[ii]\n    res = inc + same\n    res = sorted(res)\n    print(''.join((str(x) for x in res)))", "import sys\nimport math as mt\nfrom collections import Counter\n\ndef gi():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef gs():\n    return sys.stdin.readline().strip()\n\ndef fun(a):\n    ans = []\n    arr = []\n    for i in a:\n        if not ans:\n            ans.append(i)\n        else:\n            while ans and ans[-1] > i:\n                x = int(ans.pop())\n                arr.append(min(x + 1, 9))\n            ans.append(i)\n    ans += arr\n    ans = list(map(int, ans))\n    ans.sort()\n    ans = list(map(str, ans))\n    return ''.join(ans)\nfor _ in range(int(input())):\n    a = input()\n    print(fun(a))", "t = int(input())\nfor test in range(t):\n    s = input()\n    num_s = list()\n    for i in s:\n        num_s.append(int(i))\n    num_t = num_s[-1]\n    for i in range(len(s) - 2, -1, -1):\n        if num_s[i] > num_t:\n            if num_s[i] < 9:\n                num_s[i] += 1\n        else:\n            num_t = num_s[i]\n    num_s.sort()\n    ans = ''\n    for i in num_s:\n        ans += str(i)\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    m = s[-1]\n    ans = []\n    for elem in s[::-1]:\n        m = min(m, elem)\n        if elem > m:\n            ans.append(min(int(elem) + 1, 9))\n        else:\n            ans.append(elem)\n    ans = [str(num) for num in ans]\n    ans.sort()\n    print(''.join(ans))", "for t in range(int(input())):\n    s = input()\n    m = s[-1]\n    ans = []\n    for i in reversed(s):\n        m = min(i, m)\n        if i <= m:\n            ans.append(i)\n        else:\n            ans.append(str(min(int(i) + 1, 9)))\n    print(''.join(sorted(ans)))", "test = int(input())\nwhile test:\n    s = input()\n    arr = [x for x in s]\n    mn = 9\n    for i in range(len(s) - 1, -1, -1):\n        if int(arr[i]) <= mn:\n            mn = int(arr[i])\n        else:\n            arr[i] = str(min(int(arr[i]) + 1, 9))\n    print(''.join(sorted(arr)))\n    test -= 1", "for _ in range(int(input())):\n    s = input()\n    dit = {}\n    for i in range(len(s)):\n        if s[i] in dit:\n            dit[s[i]].append(i)\n        else:\n            dit[s[i]] = [i]\n    arr = sorted(dit)\n    ans = ''\n    m = -1\n    for e in arr:\n        for idx in dit[e]:\n            if idx > m:\n                ans += e\n                m = idx\n            elif e == '9':\n                ans += e\n            else:\n                ans += str(int(e) + 1)\n    print(''.join(sorted(ans)))", "def solve(num):\n    left = 0\n    nums = []\n    for i in range(len(num)):\n        nums.append((int(num[i]), i))\n    nums.sort()\n    prev = nums[0][1]\n    for i in range(1, len(nums)):\n        if nums[i][1] > prev:\n            prev = nums[i][1]\n        else:\n            nums[i] = (min(nums[i][0] + 1, 9), nums[i][0])\n    res = ''\n    nums.sort()\n    for i in nums:\n        res += str(i[0])\n    return res\nt = int(input())\nfor _ in range(t):\n    n = input()\n    print(solve(n))", "t = int(input())\nresult = []\nfor i in range(t):\n    s = input()\n    n = len(s)\n    FIFO = [['9', -1]]\n    indiceMin = FIFO[0][1]\n    Minimum = FIFO[0][0]\n    for j in range(n - 1, -1, -1):\n        if s[j] <= Minimum:\n            Minimum = s[j]\n            indiceMin = j\n            FIFO.insert(0, [Minimum, indiceMin])\n    if Minimum == '9':\n        result.append(s)\n    else:\n        d = {'0': -1, '1': -1, '2': -1, '3': -1, '4': -1, '5': -1, '6': -1, '7': -1, '8': -1, '9': -1}\n        for j in range(n):\n            if j == indiceMin:\n                del FIFO[0]\n                indiceMin = FIFO[0][1]\n                Minimum = FIFO[0][0]\n            if (s[j] > Minimum) & (j < indiceMin) & (s[j] != '9'):\n                sjPlusOne = str(int(s[j]) + 1)\n                if d[sjPlusOne] == -1:\n                    d[sjPlusOne] = 1\n                else:\n                    d[sjPlusOne] += 1\n            elif d[s[j]] == -1:\n                d[s[j]] = 1\n            else:\n                d[s[j]] += 1\n        ch = ''\n        l = [i for i in d.keys() if d[i] != -1]\n        for c in l:\n            ch += c * d[c]\n        result.append(ch)\nfor i in result:\n    print(i)", "t = int(input())\nfor tt in range(t):\n    orgs = []\n    p1 = []\n    s = list(map(int, input()))\n    s.reverse()\n    m = s[0]\n    for i in s:\n        m = min(i, m)\n        if i > m:\n            p1.append(min(9, i + 1))\n        else:\n            orgs.append(i)\n    print(''.join(map(str, sorted(p1 + orgs))))", "for t in range(int(input())):\n    s = input()\n    m = s[-1]\n    ans = []\n    for i in reversed(s):\n        m = min(i, m)\n        if i <= m:\n            ans.append(i)\n        else:\n            ans.append(str(min(int(i) + 1, 9)))\n    print(''.join(sorted(ans)))", "for _ in range(int(input())):\n    sa = input()\n    a = list((int(x) for x in sa))\n    a.reverse()\n    ma = 10\n    for i in range(len(sa)):\n        if a[i] > ma:\n            a[i] = min(a[i] + 1, 9)\n        ma = min(a[i], ma)\n    print(''.join((str(x) for x in sorted(a))))", "for _ in range(int(input())):\n    s = input()\n    stk = []\n    res = ''\n    for n in s:\n        while stk and stk[-1] > n:\n            res += str(min(9, int(stk.pop()) + 1))\n        stk.append(n)\n    while stk:\n        res += stk.pop()\n    print(''.join(sorted(res)))", "for _ in range(int(input())):\n    s = input()\n    m = s[-1]\n    ans = []\n    for i in range(len(s) - 1, -1, -1):\n        m = min(m, s[i])\n        if s[i] <= m:\n            ans.append(s[i])\n        else:\n            ans.append(str(min(int(s[i]) + 1, 9)))\n    print(''.join(sorted(ans)))", "t = int(input())\nwhile t != 0:\n    s = input()\n    minm = 10000000000.0\n    l = []\n    for i in range(len(s) - 1, -1, -1):\n        if int(s[i]) <= minm:\n            minm = int(s[i])\n            l.append(int(s[i]))\n        else:\n            l.append(min(int(s[i]) + 1, 9))\n    l.sort()\n    ans = ''.join(map(str, l))\n    print(ans)\n    t -= 1", "t = int(input())\nfrom bisect import bisect_left\nfor ncase in range(1, t + 1):\n    s = [int(i) for i in input()]\n    m = 9\n    d = {i: [] for i in range(10)}\n    for i in range(len(s)):\n        d[s[i]].append(i)\n        if s[i] < m:\n            m = s[i]\n    maxi = d[m][-1]\n    ans = str(m) * len(d[m])\n    for i in range(m + 1, 9):\n        if len(d[i]) != 0:\n            j = bisect_left(d[i], maxi)\n            ans += str(i) * (len(d[i]) - j)\n            ans += str(i + 1) * j\n            if d[i][-1] > maxi:\n                maxi = d[i][-1]\n    if m != 9:\n        ans += str(9) * len(d[9])\n    print(ans)", "import math\ntestcases = int(input())\nwhile testcases > 0:\n    testcases -= 1\n    numbers = '0123456789'\n    string = numbers + input()\n    lastinstance = 9\n    temp = ''\n    ans = ''\n    count = string.count('0') - 1\n    for i in range(count):\n        ans += '0'\n    for i in range(1, 9):\n        counter = 0\n        if string.count(numbers[i - 1]) > 0:\n            lastinstance = max(lastinstance, string.rindex(numbers[i - 1]))\n            temp = string[lastinstance + 1:]\n            counter = temp.count(numbers[i])\n            for j in range(counter):\n                ans += numbers[i]\n        priorrep = string.count(numbers[i]) - counter - 1\n        for k in range(priorrep):\n            ans += numbers[i + 1]\n    count = string.count('9') - 1\n    for i in range(count):\n        ans += '9'\n    print(ans)", "import bisect\n\ndef cal(n, s):\n    if n == 1:\n        return s\n    d = {}\n    for (i, v) in enumerate(s):\n        a = int(v)\n        if a in d:\n            d[a].append(i)\n        else:\n            d[a] = [i]\n    nd = {}\n    p = sorted(d.keys())\n    for i in range(len(p)):\n        if p[i] not in d:\n            continue\n        if p[i] not in nd:\n            nd[p[i]] = len(d[p[i]])\n        else:\n            nd[p[i]] += len(d[p[i]])\n        if d[p[i]]:\n            k = d[p[i]][-1]\n            for j in range(i + 1, len(p)):\n                if p[j] not in d:\n                    continue\n                tt = bisect.bisect(d[p[j]], k)\n                if tt == len(d[p[j]]):\n                    del d[p[j]]\n                else:\n                    d[p[j]] = d[p[j]][tt:]\n                st = min(9, p[j] + 1)\n                if st in nd:\n                    nd[st] += tt\n                else:\n                    nd[st] = tt\n    ans = ''\n    for k in sorted(nd.keys()):\n        ans += str(k) * nd[k]\n    return ans\nfor jj in range(int(input())):\n    s = input()\n    n = len(s)\n    print(cal(n, s))", "import collections\nimport math\n\ndef inp_arr():\n    return list(map(int, input().strip().split(' ')))\n\ndef inp_int():\n    return int(input())\n\ndef inp_str():\n    return input()\n\ndef solve():\n    s = inp_str()\n    n = len(s)\n    s = list(s)\n    stk = []\n    top = -1\n    ans = []\n    for x in s:\n        if len(stk) == 0:\n            stk.append(x)\n            top += 1\n        else:\n            while top >= 0 and stk[top] > x:\n                temp = stk.pop()\n                ans.append(str(min(9, int(temp) + 1)))\n                top -= 1\n            stk.append(x)\n            top += 1\n    ans = ans + stk\n    ans.sort()\n    print(''.join(ans))\ntt = inp_int()\nfor t in range(tt):\n    solve()", "for _ in range(int(input())):\n    s = input()\n    m = s[-1]\n    ans = []\n    for i in reversed(s):\n        m = min(i, m)\n        ans.append(i if i <= m else str(min(int(i) + 1, 9)))\n    print(''.join(sorted(ans)))", "for _ in range(int(input())):\n    s = input()\n    m = s[-1]\n    ans = []\n    for i in reversed(s):\n        m = min(i, m)\n        ans.append(i if i <= m else str(min(int(i) + 1, 9)))\n    print(''.join(sorted(ans)))", "for _ in range(int(input())):\n    s = input()\n    a = list((int(x) for x in s))\n    a.reverse()\n    m = 10\n    for i in range(len(s)):\n        if a[i] > m:\n            a[i] = min(a[i] + 1, 9)\n        m = min(a[i], m)\n    print(''.join((str(x) for x in sorted(a))))", "for _ in range(int(input())):\n    s = [int(char) for char in input()]\n    stk = []\n    res = ''\n    for i in s:\n        while stk and stk[-1] > i:\n            res += str(min(9, stk[-1] + 1))\n            stk.pop()\n        stk.append(i)\n    while stk:\n        res += str(stk.pop())\n    print(''.join(sorted(res)))", "t = int(input())\n\ndef f(mini, d, lis):\n    for (i, x) in enumerate(lis):\n        if x != mini:\n            lis[i] = min(x + 1, 9)\n    return lis\nfrom collections import defaultdict\nfor i in range(t):\n    s = input()\n    a = [int(x) for x in s]\n    n = len(s)\n    d = defaultdict(list)\n    for (i, x) in enumerate(s):\n        d[x].append(i)\n    indx = 0\n    l = []\n    for x in sorted(d):\n        if indx < len(a):\n            for y in d[x]:\n                if y >= indx:\n                    l += f(int(x), d, a[indx:d[x][-1] + 1])\n                    indx = d[x][-1] + 1\n                    break\n    l.sort()\n    print(''.join([str(x) for x in l]))", "import sys\n\ndef repeat(s, result):\n    if len(s) == 0:\n        return result\n    mini = sys.maxsize\n    mini = min(s)\n    indices = []\n    for j in range(len(s)):\n        if s[j] == mini:\n            indices.append(j)\n    start = 0\n    for j in indices:\n        for x in range(start, j):\n            result.append(min(s[x] + 1, 9))\n        start = j + 1\n    x_arr = repeat(s[indices[-1] + 1:], result)\n    x_arr.sort()\n    newResult = [mini] * len(indices) + x_arr\n    return newResult\nt = int(input())\nfor i in range(t):\n    s = [int(_) for _ in input()]\n    result = repeat(s, [])\n    res = ''\n    for i in result:\n        res += str(i)\n    print(res)", "t = int(input())\nfor _ in range(t):\n    l = [int(x) for x in list(input())]\n    m = 10 ** 9\n    for i in range(len(l) - 1, -1, -1):\n        m = min(m, l[i])\n        if l[i] > m:\n            l[i] = min(l[i] + 1, 9)\n    l.sort()\n    print(''.join(map(str, l)))", "from collections import deque\n\ndef ans(s):\n    arr = list(map(int, list(s)))\n    stack = deque()\n    t = []\n    for y in arr:\n        if len(stack) == 0:\n            stack.append(y)\n        elif stack[-1] > y:\n            while len(stack) > 0 and stack[-1] > y:\n                t.append(stack.pop())\n            stack.append(y)\n        else:\n            stack.append(y)\n    t.sort()\n    arr2 = []\n    for y in stack:\n        arr2.append(y)\n    for y in t:\n        arr2.append(min(y + 1, 9))\n    arr2.sort()\n    s = ''\n    for y in arr2:\n        s += str(y)\n    return s\ntest_cases = int(input())\nwhile test_cases != 0:\n    d = input()\n    print(ans(d))\n    test_cases -= 1", "t = int(input())\nfor _ in range(t):\n    S = input()\n    d = {}\n    min_d = 9\n    for i in reversed(S):\n        j = int(i)\n        if j < min_d:\n            min_d = j\n        elif j > min_d:\n            j = min(j + 1, 9)\n        if j in d:\n            d[j] += 1\n        else:\n            d[j] = 1\n    ans = ''\n    for i in sorted(d.keys()):\n        for j in range(d[i]):\n            ans += str(i)\n    print(ans)", "for _ in range(int(input())):\n    s = list(input())\n    m = s[-1]\n    s = s[::-1]\n    ans = []\n    for i in s:\n        m = min(i, m)\n        if i > m:\n            ans.append(str(min(int(i) + 1, 9)))\n        else:\n            ans.append(i)\n    ans.sort()\n    z = ''\n    for i in ans:\n        z += i\n    print(z)", "d = {'0': '1', '1': '2', '2': '3', '3': '4', '4': '5', '5': '6', '6': '7', '7': '8', '8': '9', '9': '9'}\nfor _ in range(int(input())):\n    s = list(input())\n    n = len(s)\n    a = list(range(n))\n    ss = sorted(list(zip(s, a)))\n    b = []\n    for (i, j) in ss:\n        b.append(j)\n    x = 0\n    for i in b:\n        if x < i:\n            for j in range(x, i):\n                s[j] = d[s[j]]\n        x = max(i + 1, x)\n    print(''.join(sorted(s)))", "def fun(a):\n    ans = []\n    rep = []\n    for i in a:\n        if not ans:\n            ans.append(i)\n        else:\n            while ans and i < ans[-1]:\n                x = ans.pop()\n                x = min(int(x) + 1, 9)\n                rep.append(str(x))\n            ans.append(i)\n    ans = ans + rep\n    ans = list(map(int, ans))\n    ans.sort()\n    ans = list(map(str, ans))\n    return ''.join(ans)\nfor _ in range(int(input())):\n    a = input()\n    print(fun(a))", "t = int(input())\nfor _ in range(t):\n    s = list(map(int, input()))\n    if len(s) == 1:\n        print(s[0])\n        continue\n    mapper = [0 for i in range(10)]\n    for pr in range(10):\n        lst_place = len(s) - 1\n        mn = min(s)\n        while lst_place > -1:\n            if s[lst_place] == mn:\n                break\n            lst_place -= 1\n        for i in range(lst_place + 1):\n            if s[i] == mn:\n                mapper[mn] += 1\n            else:\n                mapper[min(s[i] + 1, 9)] += 1\n        s = s[lst_place + 1:]\n        if not s:\n            break\n    for g in range(10):\n        print(str(g) * mapper[g], end='')\n    print()", "t = int(input())\nfor i in range(t):\n    ans = ''\n    l2 = []\n    l = list(map(int, list(input())))\n    if l[-1] == 9:\n        l2.append(9)\n        l.pop(-1)\n    for j in range(len(l) - 2, -1, -1):\n        if l[j] == 9:\n            l2.append(9)\n            l.pop(j)\n            j -= 1\n        elif l[j] > l[j + 1]:\n            l2.append(l[j] + 1)\n            l.pop(j)\n            j -= 1\n    l += l2\n    l.sort()\n    l = list(map(str, l))\n    for j in l:\n        ans += j\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    s = [int(i) for i in list(input())]\n    s.reverse()\n    for i in range(len(s) - 1):\n        if s[i] < s[i + 1]:\n            a = s[i]\n            s[i] = min(s[i + 1] + 1, 9)\n            s[i + 1] = a\n    s = [str(x) for x in sorted(s)]\n    print(''.join(s))", "import collections\nimport sys\nfrom typing import List\nfrom bisect import bisect_left, bisect_right, insort_left, insort_right, insort\nfrom collections import defaultdict, Counter, deque\nfrom heapq import heappush, heappop\nfrom itertools import accumulate\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nn = inp()\nres = []\nfor _ in range(n):\n    x = input()\n    q = [d for d in x][:-1]\n    q = [int(d) for d in q]\n    s = []\n    q2 = []\n    for n in q:\n        while s and s[-1] > n:\n            q2.append(min(s.pop() + 1, 9))\n        s.append(n)\n    q2.sort()\n    for n in q2:\n        insort(s, n)\n    res.append(''.join(map(str, s)))\nfor r in res:\n    print(r)", "for _ in range(int(input())):\n    arr = [int(x) for x in input()]\n    n = len(arr)\n    cnt = [0] * 10\n    last = [-1] * n\n    prev = n - 1\n    cnt[arr[n - 1]] += 1\n    for i in range(n - 2, -1, -1):\n        cnt[arr[i]] += 1\n        if arr[i] <= arr[prev]:\n            prev = i\n        else:\n            last[i] = prev\n    i = 0\n    while i < n:\n        if last[i] > i:\n            j = i\n            while j < last[i]:\n                cnt[arr[j]] -= 1\n                cnt[arr[j] + (1 if arr[j] != 9 else 0)] += 1\n                j += 1\n            i = last[i] + 1\n        else:\n            i += 1\n    ans = ''\n    for i in range(10):\n        ans += str(i) * cnt[i]\n    print(ans)", "from heapq import heappush, heappop\nt = int(input())\nfor _ in range(t):\n    s = input()\n    h = []\n    ans = []\n    for c in s:\n        while ans and ans[-1] > c:\n            heappush(h, min(9, int(ans.pop()) + 1))\n        ans.append(c)\n    while h:\n        ans.append(str(heappop(h)))\n    ans.sort()\n    print(''.join(ans))", "t = int(input())\nwhile t > 0:\n    s = str(input())\n    l = []\n    v = []\n    for i in range(0, len(s)):\n        l.append(int(s[i]))\n    m = l[len(l) - 1]\n    v.append(m)\n    for i in range(len(l) - 2, -1, -1):\n        if l[i] <= m:\n            m = l[i]\n            v.append(m)\n        else:\n            v.append(min(l[i] + 1, 9))\n    v.sort()\n    s = ''\n    for i in range(len(v)):\n        s += str(v[i])\n    print(s)\n    t -= 1", "for _ in range(int(input())):\n    s = input()\n    stk = []\n    ans = ''\n    for i in s:\n        while stk != [] and stk[-1] > i:\n            ans += str(min(int(stk.pop()) + 1, 9))\n        stk.append(i)\n    while stk:\n        ans += stk.pop()\n    print(''.join(sorted(ans)))", "from collections import deque\nfor _ in range(int(input())):\n    s = input()\n    queue = deque()\n    ans = ''\n    for i in s:\n        while len(queue) > 0 and queue[-1] > i:\n            ans += str(min(int(queue.pop()) + 1, 9))\n        queue.append(i)\n    while queue:\n        ans += queue.pop()\n    print(''.join(sorted(ans)))", "from collections import deque\nfor i in range(int(input())):\n    ss = input()\n    l = sorted(enumerate(list(ss)), key=lambda x: x[1])\n    mx = 0\n    t = deque()\n    for (i, j) in l:\n        if i < mx:\n            j = str(min(int(j) + 1, 9))\n        t.append(j)\n        mx = max(mx, i)\n    t = sorted(t)\n    kk = ''.join(t)\n    print(kk)", "tt = int(input())\nwhile tt:\n    tt -= 1\n    a = list(reversed([int(x) for x in input()]))\n    mn = 100\n    for i in range(len(a)):\n        if a[i] > mn:\n            a[i] = min(a[i] + 1, 9)\n        mn = min(mn, a[i])\n    print(''.join((str(x) for x in sorted(a))))", "t = int(input())\nfor _ in range(0, t):\n    s = input()\n    n = len(s)\n    list1 = [int(dig) for dig in s]\n    list2 = [-1 for i in range(0, 10)]\n    for i in range(0, n):\n        list2[list1[i]] = i\n    maxind = -1\n    list3 = []\n    for i in range(0, 10):\n        if list2[i] > maxind:\n            for j in range(list2[i], maxind, -1):\n                if list1[j] == i or list1[j] == 9:\n                    list3.append(list1[j])\n                else:\n                    list3.append(list1[j] + 1)\n            maxind = list2[i]\n    list3.sort()\n    s1 = ''\n    for i in range(0, n):\n        s1 += str(list3[i])\n    print(s1)", "from collections import *\nfrom bisect import *\nfor _ in range(int(input())):\n    s = list(map(int, input()))\n    d = defaultdict(list)\n    n = len(s)\n    for i in range(n):\n        d[s[i]].append(i)\n    ans = ''\n    p = min(s)\n    index = -1\n    for i in range(10):\n        for j in d[i][::-1]:\n            if j > index:\n                ans += str(i)\n            else:\n                ans += str(min(i + 1, 9))\n        if d[i]:\n            index = max(index, d[i][-1])\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    var = s[::-1]\n    res = ''\n    mini = var[0]\n    for i in var:\n        if int(i) > int(mini):\n            res += str(min(int(i) + 1, 9))\n        elif int(i) == int(mini):\n            res += str(i)\n        else:\n            mini = i\n            res += str(i)\n    res = ''.join(sorted(res))\n    print(res)", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    arr = [(s[i], i) for i in range(n)]\n    arr.sort()\n    ans = ''\n    mx = -1\n    for i in arr:\n        mx = max(mx, i[1])\n        if i[1] < mx:\n            ans += str(min(int(i[0]) + 1, 9))\n        else:\n            ans += i[0]\n    ans = ''.join(sorted(ans))\n    print(ans)", "for (r2, r1, moved, s) in (([], [], [], input()) for _ in range(int(input()))):\n    for digit in map(int, s):\n        while r1 and digit < r1[-1]:\n            moved.append(min(r1.pop() + 1, 9))\n        r1.append(digit)\n    (r1, moved) = (list(reversed(r1)), list(reversed(sorted(moved))))\n    while r1 or moved:\n        r2.append(r1.pop() if r1 and (not moved or r1[-1] < moved[-1]) else moved.pop())\n    print(''.join(map(str, r2)))", "t = int(input())\nfor ii in range(t):\n    s = input()\n    s = list(map(int, s))\n    n = len(s)\n    x = [[] for i in range(10)]\n    for i in range(n):\n        x[int(s[i])].append(i)\n    ans = ''\n    j = n - 1\n    for i in range(10):\n        if len(ans) == 0:\n            if len(x[i]) > 0:\n                ans += str(i) * len(x[i])\n                j = x[i][-1]\n        else:\n            xx = ''\n            if i == 9:\n                ans += str(i) * len(x[i])\n                continue\n            for item in x[i]:\n                if item <= j:\n                    xx += str(i + 1)\n                else:\n                    xx = str(i) + xx\n                    j = item\n            ans += xx\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    arr = []\n    arr[:0] = s\n    ans = [0] * 10\n    arr.reverse()\n    val = 9\n    for i in range(len(arr)):\n        if int(arr[i]) <= val:\n            ans[int(arr[i])] += 1\n            val = int(arr[i])\n        elif int(arr[i]) < 9:\n            ans[int(arr[i]) + 1] += 1\n        else:\n            ans[-1] += 1\n    out = ''\n    for i in range(10):\n        while ans[i] > 0:\n            out += str(i)\n            ans[i] -= 1\n    print(out)", "for _ in range(int(input())):\n    ar = [*map(str, range(10))]\n    (char, s) = (max(ar), [])\n    for i in reversed(input()):\n        if i == '9':\n            s.append(ar[9])\n        elif i <= char:\n            s.append(ar[int(i)])\n            char = i\n        else:\n            s.append(ar[int(i) + 1])\n    print(*sorted(s), sep='')", "for s in [*open(0)][1:]:\n    (*a,) = map(int, s[:-1])\n    i = len(a)\n    m = 9\n    while i:\n        i -= 1\n        if a[i] <= m:\n            m = a[i]\n        else:\n            a[i] = min(a[i] + 1, 9)\n    print(*sorted(a), sep='')", "for s in [*open(0)][1:]:\n    (*a,) = map(int, s[:-1])\n    i = len(a)\n    m = 9\n    while i:\n        i -= 1\n        a[i] += m < a[i] < 9\n        m = min(m, a[i])\n    print(*sorted(a), sep='')", "for s in [*open(0)][1:]:\n    (*a,) = map(int, s[:-1])\n    i = len(a)\n    m = 9\n    while i:\n        i -= 1\n        a[i] += m < a[i] < 9\n        m = min(m, a[i])\n    print(*sorted(a), sep='')", "cas = int(input())\nfor i in range(cas):\n    s = input()\n    num = []\n    for j in range(len(s)):\n        num.append(int(s[j]))\n    m = num[-1]\n    num = num[::-1]\n    ans = []\n    for x in num:\n        m = min(x, m)\n        if x > m:\n            ans.append(min(x + 1, 9))\n        else:\n            ans.append(x)\n    ans.sort()\n    res = ''\n    for v in range(len(ans)):\n        res = res + str(ans[v])\n    print(res)", "for s in [*open(0)][1:]:\n    (*a,) = map(int, s[:-1])\n    i = len(a)\n    m = 9\n    while i:\n        i -= 1\n        a[i] += m < a[i] < 9\n        m = min(m, a[i])\n    print(*sorted(a), sep='')", "def main():\n    t = int(input())\n    for _ in range(t):\n        (*s,) = map(int, list(input()))\n        m = s[-1]\n        ans = []\n        for i in reversed(s):\n            m = min(i, m)\n            ans.append(i if i <= m else min(i + 1, 9))\n        print(*sorted(ans), sep='')\nmain()", "for _ in range(int(input())):\n    (io, mn) = ([*map(int, input())], [])\n    itr = io[-1]\n    for ele in reversed(io):\n        if ele > itr:\n            mn.append(min(ele + 1, 9))\n        else:\n            mn.append(ele)\n            itr = ele\n    print(*sorted(mn), sep='')", "tests = int(input())\nfor t in range(tests):\n    s = input()\n    arr = []\n    for i in range(len(s)):\n        arr.append((int(s[i]), i))\n    arr.sort()\n    prev = arr[0][1]\n    for i in range(1, len(s)):\n        cur = arr[i]\n        if cur[1] > prev:\n            prev = cur[1]\n        else:\n            arr[i] = (min(cur[0] + 1, 9), cur[0])\n    arr.sort()\n    ans = ''\n    for (num, idx) in arr:\n        ans += str(num)\n    print(ans)", "l = int(input())\nfor j in range(l):\n    s = input()\n    lst = []\n    d = {}\n    counter = {}\n    for i in range(len(s)):\n        lst.append((s[i], i))\n    l = []\n    (p1, p2) = (len(lst) - 1, len(lst) - 2)\n    flag = False\n    while not flag:\n        flag = True\n        while p2 >= 0 or p1 >= 0:\n            l.append(lst[p1])\n            while p2 >= 0 and lst[p2][0] > lst[p1][0]:\n                flag = False\n                p2 -= 1\n            p1 = p2\n            p2 -= 1\n        temp = lst\n        lst = l\n        l = []\n    sett = set()\n    for i in temp:\n        if i[0] != '9':\n            sett.add(i[1])\n    ans = []\n    a = []\n    for i in range(len(s)):\n        if i in sett:\n            a.append(s[i])\n        else:\n            ans.append(str(min(9, int(s[i]) + 1)))\n    a += ans\n    a.sort()\n    answer = ''.join(a)\n    print(answer)", "for s in [*open(0)][1:]:\n    (*a,) = map(int, s[:-1])\n    i = len(a)\n    m = 9\n    while i:\n        i -= 1\n        a[i] += m < a[i] < 9\n        m = min(m, a[i])\n    print(*sorted(a), sep='')", "for s in [*open(0)][1:]:\n    (*a,) = map(int, s[:-1])\n    i = len(a)\n    m = 9\n    while i:\n        i -= 1\n        a[i] += m < a[i] < 9\n        m = min(m, a[i])\n    print(*sorted(a), sep='')"]