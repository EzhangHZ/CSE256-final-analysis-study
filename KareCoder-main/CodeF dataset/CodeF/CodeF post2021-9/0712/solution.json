["input = __import__('sys').stdin.readline\nn = int(input())\na = list(map(int, input().split())) + [n + 1]\ncache = {}\n\ndef check(i, u, d):\n    keys = []\n    j = i\n    while j + 1 <= n:\n        key = (j, u, d)\n        v = cache.get(key, -1)\n        if v != -1:\n            j = v\n            break\n        keys.append(key)\n        if u < a[j] < d:\n            if a[j] < a[j + 1]:\n                u = max(u, a[j])\n            elif a[j] > a[j + 1]:\n                d = min(d, a[j])\n        elif u < a[j]:\n            u = a[j]\n        elif d > a[j]:\n            d = a[j]\n        else:\n            break\n        j += 1\n    for key in keys:\n        cache[key] = j\n    return j\nans = 0\nfor i in range(n):\n    u = 0\n    d = n + 1\n    j = check(i, u, d)\n    ans += j - i\nprint(ans)", "input = __import__('sys').stdin.readline\nn = int(input())\na = list(map(int, input().split())) + [n + 1]\nB = n + 2\ncache = {}\n\ndef check(i, u, d):\n    keys = []\n    j = i\n    while j + 1 <= n:\n        key = (u * B + d) * B + j\n        v = cache.get(key, -1)\n        if v != -1:\n            j = v\n            break\n        keys.append(key)\n        if u < a[j] < d:\n            if a[j] < a[j + 1]:\n                u = max(u, a[j])\n            elif a[j] > a[j + 1]:\n                d = min(d, a[j])\n        elif u < a[j]:\n            u = a[j]\n        elif d > a[j]:\n            d = a[j]\n        else:\n            break\n        j += 1\n    for key in keys:\n        cache[key] = j\n    return j\nans = 0\nfor i in range(n):\n    u = 0\n    d = n + 1\n    j = check(i, u, d)\n    ans += j - i\nprint(ans)", "input = __import__('sys').stdin.readline\nn = int(input())\na = list(map(int, input().split())) + [n + 1]\nans = 0\ncache = {}\nfor i in range(n):\n    u = 0\n    d = n + 1\n    keys = []\n    j = i\n    while j + 1 <= n:\n        key = (j, u, d)\n        v = cache.get(key, -1)\n        if v != -1:\n            j = v\n            break\n        keys.append(key)\n        if u < a[j] < d:\n            if a[j] < a[j + 1]:\n                u = max(u, a[j])\n            elif a[j] > a[j + 1]:\n                d = min(d, a[j])\n        elif u < a[j]:\n            u = a[j]\n        elif d > a[j]:\n            d = a[j]\n        else:\n            break\n        j += 1\n    for key in keys:\n        cache[key] = j\n    ans += j - i\nprint(ans)"]