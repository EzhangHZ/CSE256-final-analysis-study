["import collections\nx = int(input())\n\ndef shr(a):\n    while a % 2 == 0:\n        a //= 2\n    return a\n\ndef cal(n, ts, tt):\n    d1 = collections.defaultdict(int)\n    d2 = collections.defaultdict(int)\n    for i in range(n):\n        d1[shr(ts[i])] += 1\n        d2[shr(tt[i])] += 1\n    for i in d2.keys():\n        t = d2[i]\n        while i > 0:\n            if i in d1:\n                if t > d1[i]:\n                    t -= d1[i]\n                    del d1[i]\n                elif t == d1[i]:\n                    del d1[i]\n                    t = 0\n                    break\n                else:\n                    d1[i] -= t\n                    t = 0\n                    break\n            i //= 2\n        if t > 0:\n            return False\n    return True\nfor jj in range(x):\n    n = int(input())\n    ts = [int(i) for i in input().split(' ')]\n    tt = [int(i) for i in input().split(' ')]\n    if cal(n, ts, tt):\n        print('YES')\n    else:\n        print('NO')", "from functools import lru_cache\n\n@lru_cache(None)\ndef get_odd(x):\n    while x % 2 == 0:\n        x //= 2\n    return x\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    numbers = {}\n    for x in a:\n        numbers[get_odd(x)] = numbers.get(get_odd(x), 0) + 1\n    for x in b:\n        while x > 0 and x not in numbers:\n            x //= 2\n        if x in numbers:\n            numbers[x] -= 1\n            if numbers[x] == 0:\n                numbers.pop(x)\n    print('YES' if not len(numbers) else 'NO')", "from collections import defaultdict\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a_f = defaultdict(int)\n    for i in a:\n        while i & 1 == 0:\n            i //= 2\n        a_f[i] += 1\n    check = True\n    for i in b:\n        while i >= 1:\n            if a_f[i] > 0:\n                a_f[i] -= 1\n                break\n            i //= 2\n        else:\n            check = False\n            break\n    return 'YES' if check else 'NO'\nt = int(input())\nfor _ in range(t):\n    ans = solve()\n    print(ans)", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    n = int(inp())\n    d = dict()\n    i = 0\n    for x in map(int, inp().split()):\n        while x % 2 == 0:\n            x //= 2\n        d[x] = d.get(x, 0) + 1\n        i += 1\n    for x in map(int, inp().split()):\n        while x > 0:\n            if d.get(x, 0) > 0:\n                d[x] -= 1\n                break\n            x //= 2\n        else:\n            print('NO')\n            return\n    print('YES')\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    n = int(inp())\n    d = dict()\n    i = 0\n    for x in map(int, inp().split()):\n        while x % 2 == 0:\n            x //= 2\n        d[x] = d.get(x, 0) + 1\n        i += 1\n    for x in map(int, inp().split()):\n        while x > 0:\n            if d.get(x, 0) > 0:\n                d[x] -= 1\n                break\n            x //= 2\n        else:\n            print('NO')\n            return\n    print('YES')\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "def num():\n    c = int(input())\n    return c\n\ndef stri():\n    c = str(input())\n    return c\n\ndef vector():\n    c = list(map(int, input().split()))\n    return c\n\ndef strvector():\n    c = list(map(str, input().split()))\n    return c\nfrom collections import defaultdict\nimport math\n\ndef isprime(num):\n    a = 2\n    while a <= math.sqrt(num):\n        if num % a < 1:\n            return False\n        a = a + 1\n    return num > 1\nt = num()\nwhile t > 0:\n    t -= 1\n    n = num()\n    a = vector()\n    b = vector()\n    h = {}\n    for i in range(0, n):\n        x = a[i]\n        while x % 2 == 0:\n            x = x // 2\n        if x in h:\n            h[x] += 1\n        else:\n            h[x] = 1\n    for i in range(0, n):\n        x = b[i]\n        while x > 0:\n            if x in h and h[x] != 0:\n                h[x] -= 1\n                break\n            else:\n                x = x // 2\n    ans = 'YES'\n    for i in h.keys():\n        if h[i] != 0:\n            ans = 'NO'\n            break\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    nums = {}\n    ans = 'YES'\n    for i in list(map(int, input().split())):\n        while not i % 2:\n            i //= 2\n        nums[i] = nums[i] + 1 if i in nums else 1\n    for i in list(map(int, input().split())):\n        while i > 0:\n            if i in nums and nums[i] > 0:\n                nums[i] -= 1\n                break\n            i //= 2\n        else:\n            ans = 'NO'\n            break\n    print(ans)", "import sys\nfrom collections import defaultdict\nt = int(sys.stdin.readline().strip())\nfor _ in range(t):\n    n = int(sys.stdin.readline().strip())\n    a = list(map(int, sys.stdin.readline().split()))\n    b = list(map(int, sys.stdin.readline().split()))\n    da = defaultdict(int)\n    for v in a:\n        while v & 1 == 0:\n            v >>= 1\n        da[v] += 1\n    res = 0\n    for v in b:\n        while v & 1 == 0:\n            v >>= 1\n        while v:\n            if da[v] > 0:\n                da[v] -= 1\n                res += 1\n                v = 0\n            v >>= 1\n    if res == n:\n        print('YES')\n    else:\n        print('NO')", "from collections import defaultdict, Counter\nimport math\nimport bisect\nfrom itertools import accumulate\nfrom math import ceil, log\nfrom sys import stdin, stdout\n\ndef read():\n    return stdin.readline().rstrip()\ntotal = int(read())\nfor _ in range(total):\n    s = read()\n    a = [int(p) for p in input().split()]\n    b = [int(p) for p in input().split()]\n    c = defaultdict(lambda : 0)\n    for i in a:\n        while i % 2 == 0:\n            i = i // 2\n        c[i] += 1\n    for z in b:\n        if c[z] > 0:\n            c[z] -= 1\n        else:\n            while z > 0:\n                z = z // 2\n                if c[z] > 0:\n                    c[z] -= 1\n                    break\n    if sum(c.values()) == 0:\n        print('YES')\n    else:\n        print('NO')", "from collections import Counter\n\ndef f(s):\n    x = int(s)\n    while x % 2 == 0:\n        x //= 2\n    return x\n\ndef solve():\n    n = int(input())\n    m = Counter(map(f, input().split()))\n    fail = 0\n    for x in map(f, input().split()):\n        while x > 0 and m[x] == 0:\n            x //= 2\n        if x == 0:\n            fail = 1\n        else:\n            m[x] -= 1\n    print('YES' if not fail else 'NO')\ntn = int(input())\nfor _ in range(tn):\n    solve()", "from collections import Counter\nfrom math import log2\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    for i in range(n):\n        a[i] = a[i] >> int(log2(a[i] & -a[i]))\n    b.sort(reverse=True)\n    d = Counter(a)\n    for item in b:\n        while item > 0 and d[item] == 0:\n            item //= 2\n        if d[item] > 0:\n            d[item] -= 1\n            if d[item] == 0:\n                del d[item]\n        else:\n            break\n    print('YES') if not d else print('NO')", "from collections import Counter\n\ndef f(s):\n    x = int(s)\n    while x % 2 == 0:\n        x //= 2\n    return x\n\ndef solve():\n    input()\n    m = Counter(map(f, input().split()))\n    for x in map(f, input().split()):\n        while x > 0 and m[x] == 0:\n            x //= 2\n        if x:\n            m[x] -= 1\n    print('NO' if sum(m.values()) else 'YES')\ntn = int(input())\nfor _ in range(tn):\n    solve()", "from collections import Counter\n\ndef f(s):\n    x = int(s)\n    while x % 2 == 0:\n        x //= 2\n    return x\n\ndef solve():\n    input()\n    m = Counter(map(f, input().split()))\n    for x in map(f, input().split()):\n        while x > 0 and m[x] == 0:\n            x //= 2\n        if x:\n            m[x] -= 1\n    print('NO' if sum(m.values()) else 'YES')\ntn = int(input())\nfor _ in range(tn):\n    solve()", "import collections\n\ndef solve(counter):\n    for x in map(int, input().split()):\n        while not counter[x]:\n            x //= 2\n            if x == 0:\n                return False\n        counter[x] -= 1\n    return True\nfor _ in range(int(input())):\n    input()\n    a = []\n    for x in map(int, input().split()):\n        while x % 2 == 0:\n            x //= 2\n        a.append(x)\n    print('YES' if solve(collections.Counter(a)) else 'NO')", "from collections import *\nfor _ in range(int(input())):\n    n = int(input())\n    ai = list(map(int, input().split()))\n    bi = list(map(int, input().split()))\n    dictt = defaultdict(int)\n    for i in range(n):\n        while ai[i] % 2 == 0:\n            ai[i] //= 2\n        dictt[ai[i]] += 1\n    while bi:\n        s = bi.pop()\n        while s and (not dictt[s]):\n            s //= 2\n        if s == 0 or not dictt[s]:\n            print('NO')\n            break\n        elif dictt[s]:\n            dictt[s] -= 1\n    else:\n        print('YES')", "from collections import defaultdict\nfor q in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    lis = [int(x) for x in input().split()]\n    d = defaultdict(int)\n    for item in arr:\n        while item > 1 and item % 2 == 0:\n            item //= 2\n        d[item] += 1\n    res = 0\n    for item in lis:\n        flag = 0\n        while item > 0:\n            if d[item]:\n                flag = 1\n                d[item] -= 1\n                break\n            item //= 2\n        if flag == 0:\n            res = 1\n            break\n    if res:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    for i in range(n):\n        while a[i] % 2 == 0:\n            a[i] //= 2\n    x = {}\n    for i in a:\n        if i in x:\n            x[i] += 1\n        else:\n            x[i] = 1\n    ans = 1\n    for i in b:\n        while not i in x or x[i] == 0:\n            i //= 2\n            if i == 0:\n                ans = 0\n                break\n        if i == 0:\n            break\n        x[i] -= 1\n    if ans == 1:\n        print('YES')\n    else:\n        print('NO')", "from collections import Counter\nt = int(input())\n\ndef process_element_of_a(x):\n    while x & 1 == 0:\n        x >>= 1\n    return x\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    b = list(map(int, input().split(' ')))\n    set_a = Counter(map(process_element_of_a, a))\n    ans = 'YES'\n    for b_element in b:\n        while b_element != 0:\n            if set_a[b_element] > 0:\n                break\n            b_element >>= 1\n        if set_a[b_element] > 0:\n            set_a[b_element] -= 1\n        else:\n            ans = 'NO'\n            break\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split(' ')]\n    b = [int(x) for x in input().split(' ')]\n    mp = {}\n    for i in a:\n        t = i\n        while t % 2 == 0:\n            t = t // 2\n        if t not in mp.keys():\n            mp[t] = 0\n        mp[t] += 1\n    for j in b:\n        t = j\n        flag = 0\n        while t:\n            if t in mp.keys() and mp[t] > 0:\n                mp[t] -= 1\n                break\n            t = t // 2\n    if sum(mp.values()) == 0:\n        print('YES')\n    else:\n        print('NO')", "import collections\nfor _ in range(int(input())):\n    n = int(input())\n    a = []\n    for x in map(int, input().split()):\n        while x % 2 == 0:\n            x //= 2\n        a.append(x)\n    a = collections.Counter(a)\n    for x in map(int, input().split()):\n        while x > 0:\n            if a[x]:\n                a[x] -= 1\n                break\n            x //= 2\n        else:\n            print('NO')\n            break\n    else:\n        print('YES')", "from collections import Counter\nMAX = int(1000000000.0) + 1\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    for i in range(len(a)):\n        while a[i] % 2 == 0:\n            a[i] //= 2\n    c = Counter(a)\n    flag = 0\n    for x in b:\n        flag = 0\n        while x > 0:\n            if x in c and c[x] > 0:\n                c[x] -= 1\n                flag = 1\n                break\n            else:\n                x //= 2\n        if flag == 0:\n            print('NO')\n            break\n    if flag:\n        print('YES')", "import sys\nimport collections\nfrom math import ceil, gcd, sqrt, log\nimport bisect\nINF = float('inf')\nmod = 1000000007\n\ndef solve():\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    oddValue = collections.defaultdict(int)\n    for i in range(n):\n        while A[i] % 2 == 0:\n            A[i] = A[i] // 2\n        oddValue[A[i]] += 1\n    for i in range(n):\n        while B[i] % 2 == 0:\n            B[i] = B[i] // 2\n    for i in range(n):\n        ok = False\n        while B[i] and ok == False:\n            if oddValue[B[i]] > 0:\n                oddValue[B[i]] -= 1\n                ok = True\n            else:\n                B[i] = B[i] // 2\n        if ok == False:\n            print('NO')\n            return\n    print('YES')\n    return\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "import sys\ninput = sys.stdin.readline\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d = Counter()\n    for i in a:\n        while i % 2 == 0:\n            i >>= 1\n        d[i] += 1\n    ans = 0\n    for i in b:\n        while not d[i]:\n            i >>= 1\n            if i == 0:\n                ans = 1\n                break\n        d[i] -= 1\n        if ans == 1:\n            break\n    print(['NO', 'YES'][ans == 0])", "from collections import *\n\ndef main():\n    for t in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n        c = Counter()\n        for i in range(n):\n            while a[i] % 2 == 0:\n                a[i] //= 2\n            c[a[i]] += 1\n        flag = True\n        for i in range(n):\n            while b[i] and c[b[i]] == 0:\n                b[i] //= 2\n            if c[b[i]] == 0:\n                flag = False\n                break\n            c[b[i]] -= 1\n        print('YES' if flag else 'NO')\nmain()"]