["a = int(input())\nfor b in range(a):\n    (n, k) = map(int, input().split())\n    s = sorted(input())\n    ans = ''\n    for i in range(k):\n        m = 0\n        for j in 'abcdefghijklmnopqrstuvwxyz':\n            if j in s and m < n // k:\n                s = s[:s.index(j)] + s[s.index(j) + 1:]\n            else:\n                ans += j\n                break\n            m += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    l1 = []\n    l2 = [0] * 26\n    for ch in s:\n        l2[ord(ch) - ord('a')] += 1\n    for i in range(k):\n        x = 0\n        c = n // k\n        while l2[x] and c:\n            l2[x] -= 1\n            c -= 1\n            x += 1\n        l1.append(chr(x + ord('a')))\n    print(''.join(l1))", "def find_lar(a):\n    j = 0\n    l = len(a)\n    for i in range(97, 123):\n        if j < l and a[j] == chr(i):\n            j += 1\n        else:\n            return chr(i)\n\ndef solve():\n    (n, k) = map(int, input().split(' '))\n    s = input()\n    d = dict()\n    for i in s:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    d = dict(sorted(d.items(), key=lambda x: x[0]))\n    x = int(n / k)\n    ans = ''\n    for j in range(k):\n        for i in range(int(x)):\n            if chr(i + 97) not in d or d[chr(i + 97)] == 0:\n                ans += chr(i + 97)\n                break\n            d[chr(i + 97)] -= 1\n        else:\n            ans += chr(x + 97)\n    print(ans)\nt = int(input())\nfor i in range(t):\n    solve()", "def inp():\n    return int(input())\n\ndef strng():\n    return input().strip()\n\ndef jn(x, l):\n    return x.join(map(str, l))\n\ndef strl():\n    return list(input().strip())\n\ndef mul():\n    return map(int, input().strip().split())\n\ndef mulf():\n    return map(float, input().strip().split())\n\ndef seq():\n    return list(map(int, input().strip().split()))\n\ndef ceil(x):\n    return int(x) if x == int(x) else int(x) + 1\n\ndef ceildiv(x, d):\n    return x // d if x % d == 0 else x // d + 1\nfor i in range(inp()):\n    (n, k) = mul()\n    s = input()\n    lst = [0] * 26\n    for i in range(n):\n        lst[ord(s[i]) - 97] += 1\n    res = []\n    for i in range(k):\n        j = 0\n        while lst[j] != 0 and j < n / k:\n            lst[j] -= 1\n            j += 1\n        res.append(chr(j + 97))\n    print(''.join(res))", "def solve():\n    (n, k) = map(int, input().split())\n    s = input()\n    dp = [0] * 26\n    for i in range(n):\n        dp[ord(s[i]) - 97] += 1\n    ans = str()\n    for i in range(k):\n        cnt = 0\n        while cnt < n / k and dp[cnt] > 0:\n            dp[cnt] -= 1\n            cnt += 1\n        ans += chr(97 + cnt)\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    r = ''\n    a = [0] * 201\n    for x in I():\n        a[ord(x) - 97] += 1\n    i = a[n // k] = 0\n    while i < k:\n        j = a.index(i)\n        r += chr(97 + j)\n        i += 1\n        a[j] = i\n    print(r)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    l1 = []\n    l2 = [0] * 26\n    for ch in s:\n        l2[ord(ch) - ord('a')] += 1\n    for i in range(k):\n        x = 0\n        c = n // k\n        while l2[x] and c:\n            l2[x] -= 1\n            c -= 1\n            x += 1\n        l1.append(chr(x + ord('a')))\n    print(''.join(l1))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split(' '))\n    s = input()\n    f = [int(0) for x in range(26)]\n    for ch in s:\n        f[ord(ch) - ord('a')] += 1\n    ans = ''\n    for j in range(k):\n        num = 0\n        while num < n / k:\n            if f[num] == 0:\n                ans += chr(num + 97)\n                break\n            f[num] -= 1\n            num += 1\n        if num == n / k:\n            ans += chr(num + 97)\n    print(ans)", "k = int(input())\nfor t in range(k):\n    (n, k) = input().split()\n    a = int(n) // int(k)\n    s = input()\n    array = []\n    alpha = []\n    for i in range(ord('a'), ord('z')):\n        alpha.append(chr(i))\n    for l in s:\n        array.append(l)\n    r = ''\n    for i in range(int(k)):\n        var = 0\n        for j in range(a):\n            if alpha[j] in array:\n                array.remove(alpha[j])\n            else:\n                var = alpha[j]\n                break\n        if var == 0:\n            r += chr(ord(alpha[j]) + 1)\n        else:\n            r += var\n    string = ''\n    for i in range(int(k)):\n        string += r[i]\n    print(string)", "t = int(input())\nfor _ in range(t):\n    (n, k) = input().split()\n    (n, k) = (int(n), int(k))\n    s = input().strip()\n    nums = [0 for _ in range(25)]\n    for char in s:\n        nums[ord(char) - ord('a')] += 1\n    nk = n // k\n    ans = ''\n    for i in range(k):\n        idx = 0\n        while idx < nk:\n            if nums[idx] > 0:\n                nums[idx] -= 1\n                idx += 1\n            else:\n                break\n        ans += chr(ord('a') + idx)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = input()\n    result = []\n    cnt = [0] * 26\n    for x in a:\n        cnt[ord(x) - ord('a')] += 1\n    for i in range(k):\n        mex = 0\n        rem = n // k\n        while cnt[mex] and rem:\n            cnt[mex] -= 1\n            rem -= 1\n            mex += 1\n        result.append(chr(mex + ord('a')))\n    print(''.join(result))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    count = [0] * 26\n    for x in input():\n        count[ord(x) - ord('a')] += 1\n    ans = ''\n    for _ in range(k):\n        i = 0\n        while count[i] and i < n // k:\n            count[i] -= 1\n            i += 1\n        ans += chr(ord('a') + i)\n    print(ans)", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    (n, k) = map(int, inp().split())\n    d = dict()\n    for c in inp().strip():\n        d[c] = d.get(c, 0) + 1\n    m = n // k\n    ans = [None] * k\n    for i in range(k):\n        for j in range(m):\n            c = chr(ord('a') + j)\n            if d.get(c, 0) == 0:\n                ans[i] = c\n                break\n            else:\n                d[c] -= 1\n        else:\n            ans[i] = chr(ord('a') + m)\n    print(''.join(ans))\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "l = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    d = {}\n    for i in l:\n        d[i] = 0\n    for i in s:\n        d[i] += 1\n    ans = ''\n    for i in range(k):\n        j = 0\n        ch = l[j]\n        f = 0\n        while j < n // k:\n            if d[ch] == 0:\n                f = 1\n                ans += ch\n                break\n            else:\n                d[ch] -= 1\n                ch = l[j + 1]\n            j += 1\n        if f == 0:\n            ans += ch\n    print(ans)", "import sys, math\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    d = {'a': 0, 'b': 0, 'c': 0, 'd': 0, 'e': 0, 'f': 0, 'g': 0, 'h': 0, 'i': 0, 'j': 0, 'k': 0, 'l': 0, 'm': 0, 'n': 0, 'o': 0, 'p': 0, 'q': 0, 'r': 0, 's': 0, 't': 0, 'u': 0, 'v': 0, 'w': 0, 'x': 0, 'y': 0, 'z': 0}\n    for i in range(n):\n        d[s[i]] += 1\n    v = n // k\n    ans = ''\n    for i in range(k):\n        x = 0\n        while x < 25 and x < v:\n            if d[chr(x + 97)] > 0:\n                d[chr(x + 97)] -= 1\n                x += 1\n            else:\n                break\n        ans = ans + chr(x + 97)\n    print(ans)", "for _ in range(int(input())):\n    d = {chr(i): 0 for i in range(ord('a'), ord('z') + 1)}\n    (n, k) = map(int, input().split())\n    s = input()\n    ans = ''\n    for c in s:\n        d[c] += 1\n    for i in range(k):\n        let = 'a'\n        for j in range(n // k):\n            if d[let] == 0:\n                break\n            d[let] -= 1\n            let = chr(ord(let) + 1)\n        ans += let\n    print(ans)", "for i in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    s = input()\n    cou = n // k\n    mp = [0] * 255\n    for i in range(0, n):\n        mp[ord(s[i])] += 1\n    ans = ''\n    for i in range(0, k):\n        ff = 1\n        for j in range(0, cou):\n            if mp[ord('a') + j] != 0:\n                mp[ord('a') + j] -= 1\n            else:\n                ans += chr(ord('a') + j)\n                ff = 0\n                break\n        if ff == 1:\n            ans += chr(ord('a') + cou)\n    print(ans)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().split())\n    r = n // k\n    mp = {}\n    a = 'abcdefghijklmnopqrstuvwxyz'\n    for i in a:\n        mp[i] = 0\n    s = input()\n    for i in s:\n        mp[i] = mp.get(i, 0) + 1\n    arr = []\n    for i in s:\n        arr.append(i)\n    arr.sort()\n    ans = ''\n\n    def check(r):\n        for c in a:\n            if r == 0 or mp.get(c) == 0:\n                return c\n            mp[c] = mp[c] - 1\n            r -= 1\n    for i in range(0, len(arr), r):\n        ans += check(r)\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    cnt = [0] * 26\n    for i in s:\n        cnt[ord(i) - ord('a')] += 1\n\n    def get():\n        tot = 0\n        for i in range(26):\n            if cnt[i] > 0:\n                cnt[i] -= 1\n                tot += 1\n                if tot == n // k:\n                    return chr(i + 1 + ord('a'))\n            else:\n                return chr(i + ord('a'))\n    arr = []\n    for i in range(k):\n        arr.append(get())\n    arr = sorted(arr, reverse=True)\n    print(*arr, sep='')", "num_testcases = int(input())\nfor _ in range(num_testcases):\n    (num_letters, num_bins) = list(map(int, input().split()))\n    letters = input()\n    frequencies = [0 for _ in range(26)]\n    for letter in letters:\n        frequencies[ord(letter) - ord('a')] += 1\n    average = num_letters // num_bins\n    bins = [set() for _ in range(num_bins)]\n    for (i, freq) in enumerate(frequencies):\n        offset = 0\n        while freq:\n            if offset == num_bins:\n                offset = 0\n            elif len(bins[offset]) >= average:\n                offset += 1\n            else:\n                bins[offset].add(i)\n                offset += 1\n                freq -= 1\n    ans = []\n    for bin in bins:\n        for i in range(26):\n            if i not in bin:\n                ans.append(chr(ord('a') + i))\n                break\n    print(''.join(ans))", "t = eval(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    k1 = [0] * 26\n    k2 = []\n    p = n // k\n    for i in s:\n        k1[ord(i) - 97] += 1\n    for i in range(k):\n        for j in range(26):\n            if p == 0:\n                k2.append(chr(j + 97))\n                p = n // k\n                break\n            if k1[j] != 0:\n                k1[j] -= 1\n                p -= 1\n            else:\n                k2.append(chr(j + 97))\n                p = n // k\n                break\n    for i in k2:\n        print(i, end='')\n    print()", "from collections import defaultdict\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    alpha = 'abcdefghijklmnopqrstuvwxyz'\n    ans = []\n    for j in alpha[:n // k + 1]:\n        if len(ans) >= k:\n            break\n        if s.count(j) < k - len(ans):\n            for l in range(k - len(ans) - s.count(j)):\n                if len(ans) > k:\n                    break\n                ans.append(j)\n    for j in range(k - len(ans)):\n        ans.append(alpha[min(25, n // k)])\n    ans.sort(reverse=True)\n    print(''.join(ans))", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = input()\n    cl = []\n    d = a // b\n    e = 'abcdefghijklmnopqrstuvwxyz'\n    f = ''\n    for k in range(a):\n        cl.append(c[k])\n    for i in range(b):\n        g = ''\n        for j in e:\n            if len(g) == d:\n                break\n            elif j in cl:\n                g += j\n                cl.remove(j)\n        for j in e:\n            if j not in g:\n                f += j\n                break\n    print(f)", "from collections import Counter\nfor jj in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    s = input()\n    d = Counter(s)\n    t = n // k\n    res = ''\n    tm = k\n    tstr = 'abcdefghijklmnopqrstuvwxyz'\n    for pp in range(t + 1):\n        i = tstr[pp]\n        if i not in d or pp == t:\n            res = i * tm + res\n            break\n        elif d[i] < tm:\n            res = i * (tm - d[i]) + res\n            tm = d[i]\n    print(res)", "for aa in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    d = {}\n    t = n // k\n    for i in range(97, 123):\n        d[chr(i)] = 0\n    for i in s:\n        if i in d:\n            d[i] += 1\n    a = ''\n    for i in range(k):\n        c = 0\n        for j in range(97, 123):\n            if c == t:\n                a += chr(j)\n                break\n            if d[chr(j)] == 0:\n                a += chr(j)\n                break\n            else:\n                d[chr(j)] -= 1\n                c += 1\n    print(a)", "for _ in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    ans = ''\n    s = input()\n    d = {}\n    for i in 'abcdefghijklmnopqrstuvwxyz':\n        d[i] = 0\n    for i in s:\n        d[i] += 1\n    for i in range(k):\n        j = 0\n        while j < min(26, n // k) and d[chr(j + 97)] != 0:\n            d[chr(j + 97)] -= 1\n            j += 1\n        ans += chr(j + 97)\n    print(ans)", "alph = 'abcdefghijklmnopqrstuvwxyz'\n\ndef mex(s):\n    for j in alph:\n        if j not in s:\n            return j\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    s = input()\n    s = list(s)\n    s.sort()\n    m = {}\n    for i in alph:\n        m[i] = 0\n    for i in s:\n        m[i] += 1\n    s1 = ''\n    rem = k\n    l = alph[:n // k + 1]\n    for i in l:\n        if l[-1] == i:\n            s1 = i * rem + s1\n            break\n        s1 = i * (rem - m[i]) + s1\n        rem = k - len(s1)\n        if rem == 0:\n            break\n    print(s1)", "from collections import Counter\nfor _ in range(int(input())):\n    ((n, k), count, result) = (map(int, input().split()), Counter(input()), [])\n    for _ in range(k):\n        for (i, char) in enumerate('abcdefghijklmnopqrstuvwxyz'):\n            if not count.get(char, 0) or i * k >= n:\n                break\n            count[char] -= 1\n        result.append(char)\n    print(''.join(result))", "import collections, heapq, math\nt = int(input())\nfor T in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    c = collections.Counter(s)\n    arr = [0] * 26\n    for (key, v) in c.items():\n        arr[ord(key) - ord('a')] = v\n    ans = ['' for _ in range(k)]\n    for i in range(k):\n        j = 0\n        while j < n // k and arr[j] > 0 and (j < 26):\n            arr[j] -= 1\n            j += 1\n        ans[i] = chr(ord('a') + j)\n    print(''.join(ans))", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    r = ''\n    a = [0] * 201\n    i = 0\n    for x in I():\n        a[ord(x) - 97] += 1\n    a[n // k] = 0\n    while i < k:\n        j = a.index(i)\n        r += chr(97 + j)\n        i += 1\n        a[j] = i\n    print(r)", "nbTests = int(input())\nfor k in range(nbTests):\n    (n, k) = input().split(' ')\n    (n, k) = (int(n), int(k))\n    total = n // k\n    s = input()\n    mex = [set() for _ in range(k)]\n    for e in s:\n        if ord(e) - ord('a') < total:\n            for d in mex:\n                if not e in d and len(d) != total:\n                    d.add(e)\n                    break\n    sol = ''\n    for d in mex:\n        l = sorted(list(d))\n        toHave = ord('a')\n        for i in range(len(l)):\n            if ord(l[i]) == toHave:\n                toHave += 1\n        sol += chr(toHave)\n    print(sol)", "from collections import defaultdict\nT = int(input())\nfor _ in range(T):\n    (n, k) = list(map(int, input().split()))\n    s = input().rstrip()\n    d = defaultdict(lambda : 0)\n    res = ''\n    for i in s:\n        d[i] = d[i] + 1\n    l = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n    for i in range(k):\n        check = True\n        for j in range(min(25, n // k)):\n            if d[l[j]] != 0:\n                d[l[j]] = d[l[j]] - 1\n            else:\n                ch = l[j]\n                check = False\n                break\n        if check == False:\n            res = res + ch\n        else:\n            res = res + l[j + 1]\n    print(res)", "from collections import deque, defaultdict, Counter\nfrom math import ceil, floor, sqrt, log2\nfrom heapq import heapify, heappop, heappush\nfrom functools import cmp_to_key, lru_cache\n\nclass Solution:\n\n    def solve(self):\n        (n, k) = list(map(int, input().split()))\n        arr = input().strip()\n        arrC = Counter(arr)\n        stks = [[] for i in range(k)]\n        for key in sorted(arrC.keys()):\n            i = arrC[key]\n            j = 0\n            while i > 0 and j < k:\n                if len(stks[j]) < n // k:\n                    stks[j].append(key)\n                    i -= 1\n                j += 1\n        res = []\n        for stk in stks:\n            for i in 'abcdefghijklmnopqrstuvwxyz':\n                if i not in stk:\n                    res.append(i)\n                    break\n        res.sort(reverse=True)\n        return ''.join(res)\nob = Solution()\nfor _ in range(int(input())):\n    print(ob.solve())", "t = int(input())\nfor _ in range(t):\n    (n, k) = [int(i) for i in input().split()]\n    books = list(input())\n    multiset = n // k\n    values = [chr(i) for i in range(97, 97 + multiset + 1)]\n    d = {}\n    for book in books:\n        if book not in d:\n            d[book] = 0\n        d[book] += 1\n    answer = []\n    for _ in range(k):\n        for value in values[:-1]:\n            if value not in d:\n                answer.append(value)\n                break\n            elif d[value] == 0:\n                answer.append(value)\n                break\n            else:\n                d[value] -= 1\n    if len(answer) != k:\n        answer.extend([values[-1]] * (k - len(answer)))\n    print(''.join(sorted(answer, reverse=True)))", "def book_sort(N, K, arr):\n    ans = ['a'] * K\n    dt = dict()\n    for x in arr:\n        if x in dt:\n            dt[x] += 1\n        else:\n            dt[x] = 1\n    MIN = float('inf')\n    for i in range(97, 123):\n        if i >= 97 + N // K:\n            break\n        if chr(i) not in dt:\n            break\n        MIN = min(MIN, dt[chr(i)])\n        for up in range(min(K, MIN)):\n            ans[up] = chr(i + 1)\n    return ''.join(ans)\nOUTPUT = []\nfor _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    arr = list(input())\n    OUTPUT.append(book_sort(N, K, arr))\nfor _ in OUTPUT:\n    print(_)", "cases = int(input())\nfor i in range(cases):\n    (n, k) = map(int, input().split())\n    s = input()\n    counter = [0] * 26\n    for c in s:\n        counter[ord(c) - ord('a')] += 1\n    length = n // k\n    ans = ''\n    for j in range(k):\n        for idx in range(length):\n            if counter[idx]:\n                counter[idx] -= 1\n            else:\n                ans += chr(ord('a') + idx)\n                break\n        else:\n            ans += chr(ord('a') + length)\n    print(ans)", "let_dict = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8, 'i': 9, 'j': 10, 'k': 11, 'l': 12, 'm': 13, 'n': 14, 'o': 15, 'p': 16, 'q': 17, 'r': 18, 's': 19, 't': 20, 'u': 21, 'v': 22, 'w': 23, 'x': 24, 'y': 25, 'z': 26}\nlets = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\ntest = int(input())\nfor t in range(test):\n    nk = list(map(int, input().split()))\n    s = input()\n    n = nk[0]\n    k = nk[1]\n    m = n // k\n    score = [0] * 26\n    for i in range(n):\n        score[let_dict[s[i]] - 1] += 1\n    ans = ''\n    spot = n // m\n    if m > 26:\n        m = 26\n    for i in range(m):\n        x = score[i] - spot\n        if x < 0:\n            spot += x\n            ans = lets[i] * -x + ans\n    if spot > 0:\n        ans = lets[m] * spot + ans\n    print(ans)", "from math import *\ntestcases = int(input())\nwhile testcases > 0:\n    testcases -= 1\n    (n, k) = [int(x) for x in input().split()]\n    string = input()\n    countalphabet = []\n    for i in range(25):\n        countalphabet.append(0)\n    for character in string:\n        ascii = ord(character) - 97\n        countalphabet[ascii] += 1\n    numberofelements = n / k\n    mex = []\n    for i in range(k):\n        for index in range(25):\n            count = countalphabet[index]\n            if index == numberofelements:\n                mex.append(chr(index + 97))\n                break\n            if count > 0:\n                countalphabet[index] -= 1\n            else:\n                mex.append(chr(index + 97))\n                break\n    while len(mex) < k:\n        mex.append('z')\n    mex.sort(reverse=True)\n    for i in mex:\n        print(i, end='')\n    print('')", "t = int(input(''))\nfor i in range(t):\n    a = list(map(int, input('').split()))\n    n = a[0]\n    k = a[1]\n    s = input('')\n    l = [0] * 25\n    for i in s:\n        l[ord(i) - 97] += 1\n    t = ''\n    c = 0\n    e = 0\n    for i in range(k):\n        for j in range(min(n // k, 25)):\n            if l[e] != 0:\n                l[e] -= 1\n                e += 1\n            else:\n                break\n        t += chr(e + 97)\n        e = 0\n    print(t[0:k])", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    l = int(n / k)\n    h = []\n    for j in range(97, 123, 1):\n        m = s.count(chr(j))\n        h.append(m)\n    h = h[:l + 1]\n    if 0 in h:\n        t = h.index(0)\n        h = h[:t + 1]\n    w = 0\n    for j in range(k):\n        if len(h) == 1:\n            print((k - w) * 'a', end='')\n            break\n        else:\n            p = h[0]\n            for q in range(len(h) - 1):\n                if h[q] < p:\n                    p = h[q]\n            m = h.index(p)\n            if w + p <= k and p > 0:\n                print(p * chr(96 + len(h)), end='')\n            else:\n                print((k - w) * chr(96 + len(h)), end='')\n            for q in range(len(h)):\n                h[q] = h[q] - p\n            if 0 in h:\n                t = h.index(0)\n                h = h[:t + 1]\n            w = w + p\n            if w >= k:\n                break\n    print()", "def exe():\n    (n, k) = map(int, input().split())\n    s = input()\n    l = []\n    for i in s:\n        l.append(i)\n    l2 = []\n    s2 = 'abcdefghijklmnopqrstuvwxyz'\n    dicto = {}\n    for i in s2:\n        dicto[i] = 0\n    for i in l:\n        dicto[i] += 1\n    y = int(n / k)\n    m = 0\n    for i in range(k):\n        m = 0\n        flag = 0\n        for j in range(len(s2)):\n            if m >= y:\n                if flag == 0:\n                    l2.append(s2[j])\n                break\n            elif dicto[s2[j]] != 0:\n                dicto[s2[j]] -= 1\n                m += 1\n            elif dicto[s2[j]] == 0 and flag == 0:\n                l2.append(s2[j])\n                flag = 1\n                m += 1\n    for i in l2:\n        print(i, end='')\n    print()\n    return\nfor i in range(int(input())):\n    exe()", "import sys\nalpha = 'abcdefghijklmnopqrstuvwxyz'\nt = int(sys.stdin.readline())\nfor i in range(t):\n    (n, m) = map(int, sys.stdin.readline().strip().split())\n    rand = n // m\n    s = sys.stdin.readline().strip()\n    dic = {}\n    ans = ''\n    for j in range(26):\n        dic[j] = 0\n    for j in s:\n        dic[ord(j) - 97] += 1\n    while m:\n        f = 1\n        for j in range(min(rand, 26)):\n            if dic[j] == 0:\n                ans += alpha[j]\n                f = 0\n                break\n            else:\n                dic[j] -= 1\n        m -= 1\n        if f:\n            ans += alpha[j + 1]\n    if j == 25:\n        ans += 'z'\n    print(ans)", "alpha = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    res = ''\n    c = [0] * 26\n    for i in s:\n        c[alpha.index(i)] += 1\n    for h in range(k):\n        f = 1\n        j = 0\n        m = min(n // k, 26)\n        for t in range(m):\n            if c[t] == 0:\n                f = 0\n                break\n            c[t] -= 1\n            j += 1\n        if f:\n            res += alpha[n // k]\n        else:\n            res += alpha[j]\n    print(res)", "test = int(input())\nfor t in range(test):\n    (n, k) = map(int, input().split())\n    S = input()\n    M = {}\n    C = [0] * 26\n    PS = ''\n    a = ord('a')\n    for i in S:\n        if i not in M:\n            M[i] = 1\n        else:\n            M[i] += 1\n    for i in M:\n        C[ord(i) - a] = M[i]\n    b = k\n    while b:\n        flag = 1\n        j = 0\n        m = min(n // k, 26)\n        for i in range(m):\n            if C[i] == 0:\n                flag = 0\n                break\n            C[i] -= 1\n            j += 1\n        if flag:\n            PS += chr(a + n // k)\n        else:\n            PS += chr(a + j)\n        b -= 1\n    print(PS)", "import math\nimport collections\nfrom collections import deque\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    alp = 'abcdefghijklmnopqrstuvwxyz'\n    d = {}\n    for i in range(26):\n        d[alp[i]] = 0\n    for j in s:\n        d[j] += 1\n    exhaust = []\n    count = 0\n    for l in d:\n        if d[l] == 0:\n            break\n        count += 1\n    x = min(count, n // k)\n    d2 = {}\n    for q in range(x):\n        d2[alp[q]] = d[alp[q]]\n    d2[alp[x]] = 0\n    l = ['a'] * k\n    res = dict(reversed(list(d2.items())))\n    for w in res:\n        if res[w] < k:\n            s = res[w]\n            for e in range(s, k):\n                l[e] = w\n        else:\n            continue\n    ans = ''\n    ans = ''.join(l)\n    print(ans)", "t = int(input())\nf_ans = []\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    d = {}\n    for i in s:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    tmp = n // k\n    ans = ''\n    haha = [0] * 26\n    for i in d:\n        haha[ord(i) - 97] = d[i]\n    for i in range(k):\n        flag = 0\n        for j in range(tmp):\n            if haha[j] <= 0 and (not flag):\n                flag = 1\n                here = j\n                break\n            else:\n                haha[j] -= 1\n        if not flag:\n            ans += chr(tmp + 97)\n        else:\n            ans += chr(here + 97)\n    f_ans.append(ans)\nfor i in f_ans:\n    print(i)", "import math\n\ndef number():\n    return list(map(int, input().split()))\n\ndef str():\n    return list(input().split())\nl = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\ny = number()\nwhile y[0] > 0:\n    c = [0] * 26\n    i = 0\n    j = 0\n    num = number()\n    n = num[0]\n    k = num[1]\n    o = [0] * k\n    s = str()\n    for x in l:\n        for z in s[0]:\n            if z == x:\n                c[i] += 1\n        if c[i] == 0:\n            break\n        i += 1\n    min = k\n    r = n / k\n    for j in range(i):\n        if c[j] < min:\n            min = c[j]\n        if o[0] < r:\n            for q in range(min):\n                o[q] += 1\n    for i in range(k):\n        print(l[o[i]], end='')\n    print()\n    y[0] -= 1", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    size = n // k\n    alpha = [0] * 26\n    st = 'a'\n    st = sorted(st)\n    counts = [0] * 26\n    for c in s:\n        counts[ord(c) - ord('a')] += 1\n    ans = ''\n    for j in range(k):\n        found = False\n        chars = 0\n        for i in range(26):\n            if counts[i] <= 0:\n                if found == False:\n                    found = True\n                    ans += chr(i + ord('a'))\n                    chars += 1\n                continue\n            if counts[i] > 0 and chars < size:\n                counts[i] -= 1\n                chars += 1\n            if chars == size:\n                break\n        last = 25\n        diff = size - chars\n        while diff < 0 and last >= 0:\n            if counts[last] >= diff:\n                counts[last] -= diff\n                break\n            else:\n                diff -= counts[last]\n                counts[last] = 0\n            last -= 1\n        if found == False:\n            i += 1\n            ans += chr(i + ord('a'))\n    print(ans)", "from collections import Counter\nalphabet = 'abcdefghijklmnopqrstuvwxyz'\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    s.sort()\n    s = ''.join(s)\n    result = ''\n    d = Counter(s)\n    for j in range(k):\n        p = 0\n        selected = False\n        for m in range(n // k):\n            if d.get(alphabet[p], 0) > 0:\n                d[alphabet[p]] -= 1\n                p += 1\n            else:\n                result += alphabet[p]\n                selected = True\n                break\n        if not selected:\n            result += alphabet[p]\n    print(result)", "t = int(input())\na = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    b = ['a'] * k\n    j = k\n    for i in range(25):\n        p = s.count(a[i])\n        if i >= n // k or p == 0:\n            break\n        elif p <= j:\n            j = p\n            b[:p] = str(a[i + 1]) * p\n        else:\n            b[:j] = str(a[i + 1]) * j\n    print(''.join(b))", "T = int(input())\nwhile T:\n    (n, k) = list(map(int, input().split()))\n    string = input()\n    freq = [0] * 26\n    for ch in string:\n        freq[ord(ch) - ord('a')] += 1\n    bps = n // k\n    ans = ''\n    for i in range(k):\n        first_zero = freq.index(0)\n        till = min(bps, first_zero)\n        ans += chr(97 + till)\n        for j in range(till):\n            freq[j] -= 1\n    print(ans)\n    T -= 1", "def solve():\n    (n, k) = map(int, input().split())\n    s = input()\n    dp = [0] * 26\n    for i in range(n):\n        dp[ord(s[i]) - 97] += 1\n    ans = str()\n    for i in range(k):\n        cnt = 0\n        while cnt < n / k and dp[cnt] > 0:\n            dp[cnt] -= 1\n            cnt += 1\n        ans += chr(97 + cnt)\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "def solve():\n    (n, k) = map(int, input().split())\n    s = input()\n    dp = [0] * 26\n    for i in range(n):\n        dp[ord(s[i]) - 97] += 1\n    ans = str()\n    for i in range(k):\n        cnt = 0\n        while cnt < n / k and dp[cnt] > 0:\n            dp[cnt] -= 1\n            cnt += 1\n        ans += chr(97 + cnt)\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    string = input()\n    s = [0] * 25\n    for i in string:\n        s[ord(i) - ord('a')] += 1\n    ans = ''\n    for i in range(k):\n        j = 0\n        while j < 25 and j < n // k and (s[j] != 0):\n            s[j] -= 1\n            j += 1\n        ans += chr(ord('a') + j)\n    print(ans)", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    r = ''\n    a = [0] * 201\n    for x in I():\n        a[ord(x) - 97] += 1\n    i = a[n // k] = 0\n    while i < k:\n        j = a.index(i)\n        r += chr(97 + j)\n        i += 1\n        a[j] = i\n    print(r)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    lst = [i for i in range(n)]\n    for i in range(k):\n        tmp = [0 for j in range(n // k + 1)]\n        for j in range(n):\n            if lst[j] != j:\n                continue\n            tp = ord(s[j]) - ord('a')\n            if tp < n // k and tmp[tp] == 0:\n                tmp[tp] = 1\n                lst[j] = -1\n        idx = 0\n        while tmp[idx]:\n            idx += 1\n        print(chr(idx + ord('a')), end='')\n    print()", "for xxx in range(int(input())):\n    (n, ll) = map(int, input().split())\n    s = input()\n    arr = [0] * 26\n    for i in range(n):\n        arr[ord(s[i]) - 97] += 1\n    res = str()\n    for i in range(ll):\n        cnt = 0\n        while cnt < n / ll and arr[cnt] > 0:\n            arr[cnt] -= 1\n            cnt += 1\n        res += chr(97 + cnt)\n    print(res)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    l1 = [0] * 25\n    ans = ''\n    for i in s:\n        l1[ord(i) - ord('a')] += 1\n    for i in range(k):\n        count = 0\n        times = n // k\n        while count < 25 and count < times and (l1[count] != 0):\n            l1[count] -= 1\n            count += 1\n        ans += chr(ord('a') + count)\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    arr = [0] * 26\n    for i in s:\n        arr[ord(i) % 97] += 1\n    lim = n // k\n    ans = ''\n    while k:\n        l = 0\n        for i in range(lim):\n            if arr[i] == 0:\n                break\n            arr[i] -= 1\n            l += 1\n        k -= 1\n        ans += chr(97 + l)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    s = input()\n    assert len(s) == n\n    count = [0] * 25\n    for x in s:\n        i = ord(x) - 97\n        count[i] += 1\n    u = n // k\n    s = ''\n    for i in range(k):\n        (j, v) = (0, u)\n        while v > 0:\n            if count[j] == 0:\n                s += chr(97 + j)\n                v = 0\n            else:\n                v -= 1\n                count[j] -= 1\n                j += 1\n                if v == 0:\n                    s += chr(97 + j)\n    print(s)", "u = int(input())\nfor _ in range(u):\n    (n, k) = map(int, input().split())\n    w = n // k\n    s = input()\n    d = [0] * 25\n    for c in s:\n        d[ord(c) - ord('a')] += 1\n    t = ''\n    while k > 0:\n        q = [False] * 26\n        r = 0\n        j = 0\n        while r < w and j < 25:\n            if d[j] > 0:\n                d[j] -= 1\n                q[j] = True\n                r += 1\n            j += 1\n        while r < w and j >= 0:\n            j -= 1\n            while d[j] > k - 1 and r < w:\n                d[j] -= 1\n                r += 1\n        i = 0\n        while q[i]:\n            i += 1\n        t += chr(i + ord('a'))\n        k -= 1\n    print(t)", "def eraseLex(alpha, limit, div):\n    lst = []\n    letAns = 'a'\n    for let in alpha.keys():\n        if alpha[let] == 0 or div == 0:\n            letAns = let\n            break\n        else:\n            lst.append(let)\n            div -= 1\n    theMin = min([alpha[i] for i in lst], default=limit)\n    if theMin > limit:\n        theMin = limit\n    for i in lst:\n        alpha[i] -= theMin\n    return theMin * letAns\n\ndef func2():\n    (n, k) = map(int, input().split())\n    val = input()\n    div = n / k\n    allLetters = 'abcdefghijklmnopqrstuvwxyz'\n    alpha = {}\n    for j in allLetters:\n        alpha[j] = 0\n    for i in val:\n        alpha[i] += 1\n    ans = ''\n    c = 0\n    while c < k:\n        ans += eraseLex(alpha, k - c, div)\n        c = len(ans)\n    return ans\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        print(func2())\nmain()", "def solve():\n    (num, k) = map(int, input().split())\n    s = input()\n    dp = [0] * 26\n    for i in range(num):\n        dp[ord(s[i]) - 97] += 1\n    ans = str()\n    for i in range(k):\n        cnt = 0\n        while cnt < num / k and dp[cnt] > 0:\n            dp[cnt] -= 1\n            cnt += 1\n        ans += chr(97 + cnt)\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    r = ''\n    a = [0] * 201\n    for x in I():\n        a[ord(x) - 97] += 1\n    i = a[n // k] = 0\n    while i < k:\n        j = a.index(i)\n        r += chr(97 + j)\n        i += 1\n        a[j] = i\n    print(r)", "t = int(input())\nfor _ in range(t):\n    r1 = [0] * 200\n    r2 = ''\n    (n, k) = map(int, input().split())\n    s = input()\n    for i in range(n):\n        r1[ord(s[i])] += 1\n    for i in range(k):\n        j = 97\n        while r1[j] != 0 and j < n / k + 97:\n            r1[j] -= 1\n            j += 1\n        r2 += chr(j)\n    print(r2)", "from collections import defaultdict\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().strip().split())\n    s = input()\n    d = defaultdict(lambda : 0)\n    l = list(s)\n    r = sorted(l, key=lambda x: ord(x))\n    size = n // k\n    ans = []\n    for j in range(n):\n        d[ord(r[j]) - 97] += 1\n    for i in range(min(25, n // k)):\n        while k - len(ans) > d[i]:\n            ans.append(chr(i + 97))\n    charpa = chr(97 + min(n // k, 25))\n    while k > len(ans):\n        ans.append(charpa)\n    j = ans[::-1]\n    print(''.join(j))", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    r = ''\n    a = [0] * 201\n    for x in I():\n        a[ord(x) - 97] += 1\n    i = a[n // k] = 0\n    while i < k:\n        j = a.index(i)\n        r += chr(97 + j)\n        i += 1\n        a[j] = i\n    print(r)", "def sort_books(s, n, k):\n    small_val = [0 for _ in range(25)]\n    for val in s:\n        small_val[ord(val) - ord('a')] += 1\n    ans = ''\n    for i in range(min(25, n // k)):\n        while k - len(ans) > small_val[i]:\n            ans += chr(i + ord('a'))\n    min_val = ord('a') + min(25, n // k)\n    while k > len(ans):\n        ans += chr(min_val)\n    print(ans[::-1])\nT = int(input())\nfor _ in range(T):\n    (n, k) = tuple(map(int, input().split()))\n    s = list(input())\n    sort_books(s, n, k)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    a = [0] * 26\n    for i in range(n):\n        a[ord(s[i]) - ord('a')] += 1\n    t = n // k\n    ans = ''\n    for i in range(k):\n        j = 0\n        while j < 25 and j < t and (a[j] != 0):\n            a[j] -= 1\n            j += 1\n        ans += chr(ord('a') + j)\n    print(ans)", "I = input\nfor i in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    r = ''\n    a = [0] * 201\n    for x in I():\n        a[ord(x) - 97] += 1\n    i = a[n // k] = 0\n    while i < k:\n        j = a.index(i)\n        r += chr(97 + j)\n        i += 1\n        a[j] = i\n    print(r)", "I = input\nfor i in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    r = ''\n    a = [0] * 201\n    for x in I():\n        a[ord(x) - 97] += 1\n    i = a[n // k] = 0\n    while i < k:\n        j = a.index(i)\n        r += chr(97 + j)\n        i += 1\n        a[j] = i\n    print(r)", "I = input\nfor i in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    r = ''\n    a = [0] * 201\n    for x in I():\n        a[ord(x) - 97] += 1\n    i = a[n // k] = 0\n    while i < k:\n        j = a.index(i)\n        r += chr(97 + j)\n        i += 1\n        a[j] = i\n    print(r)", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    r = ''\n    a = [0] * 201\n    for x in I():\n        a[ord(x) - 97] += 1\n    i = a[n // k] = 0\n    while i < k:\n        j = a.index(i)\n        r += chr(97 + j)\n        i += 1\n        a[j] = i\n    print(r)", "from collections import Counter\nreps = int(input())\nfor _ in range(reps):\n    (n, k) = map(int, input().split())\n    s = input()\n    cntr = Counter(s)\n    ans = ''\n    for _ in range(k):\n        anslen = n // k\n        for i in range(26):\n            ch = chr(i + ord('a'))\n            if anslen <= 0:\n                ans += ch\n                break\n            elif cntr[ch]:\n                cntr[ch] -= 1\n                anslen -= 1\n            else:\n                ans += ch\n                break\n    print(ans)", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    r = ''\n    a = [0] * 201\n    i = 0\n    for x in I():\n        a[ord(x) - 97] += 1\n    a[n // k] = 0\n    while i < k:\n        j = a.index(i)\n        r += chr(97 + j)\n        i += 1\n        a[j] = i\n    print(r)", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    r = ''\n    a = [0] * 201\n    for x in I():\n        a[ord(x) - 97] += 1\n    i = a[n // k] = 0\n    while i < k:\n        j = a.index(i)\n        r += chr(97 + j)\n        i += 1\n        a[j] = i\n    print(r)", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    r = ''\n    a = [0] * 201\n    for x in I():\n        a[ord(x) - 97] += 1\n    i = a[n // k] = 0\n    while i < k:\n        j = a.index(i)\n        r += chr(97 + j)\n        i += 1\n        a[j] = i\n    print(r)", "from collections import Counter\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = [el for el in input()]\n    ans = ''\n    curr = k\n    t = n // k\n    p = 0\n    c = Counter(s)\n    while curr and t:\n        temp = c[chr(ord('a') + p)]\n        if temp >= curr:\n            pass\n        else:\n            ans += chr(ord('a') + p) * (curr - temp)\n            curr = temp\n        p += 1\n        t -= 1\n    if curr:\n        ans += chr(ord('a') + p) * curr\n    print(''.join(sorted([el for el in ans], reverse=True)))", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    s = input()\n    ca = [0 for i in range(26)]\n    for char in s:\n        ca[ord(char) - ord('a')] += 1\n    ans = ''\n    for i in range(k):\n        j = 0\n        while j < 25 and j < n // k:\n            if ca[j] > 0:\n                ca[j] -= 1\n                j += 1\n            else:\n                break\n        ans += chr(ord('a') + j)\n    print(ans)\n    t -= 1", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    r = ''\n    a = [0] * 201\n    for x in I():\n        a[ord(x) - 97] += 1\n    i = a[n // k] = 0\n    while i < k:\n        j = a.index(i)\n        r += chr(97 + j)\n        i += 1\n        a[j] = i\n    print(r)", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    r = ''\n    a = [0] * 201\n    for x in I():\n        a[ord(x) - 97] += 1\n    i = a[n // k] = 0\n    while i < k:\n        j = a.index(i)\n        r += chr(97 + j)\n        i += 1\n        a[j] = i\n    print(r)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(input())\n    s = list(set(l))\n    s.sort()\n    d = {x: 0 for x in s}\n    for j in l:\n        d[j] += 1\n    ans = ''\n    for j in range(k):\n        temp = []\n        for bal in d:\n            if d[bal] != 0:\n                temp.append(bal)\n                d[bal] -= 1\n            if len(temp) == n // k:\n                break\n        if 'a' not in temp:\n            ans += 'a'\n        else:\n            for bara in range(len(temp) - 1):\n                if ord(temp[bara + 1]) - ord(temp[bara]) > 1:\n                    ans += chr(ord(temp[bara]) + 1)\n                    break\n            else:\n                ans += chr(ord(temp[-1]) + 1)\n    print(ans)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(input())\n    s = list(set(l))\n    s.sort()\n    d = {x: 0 for x in s}\n    for j in l:\n        d[j] += 1\n    ans = ''\n    for j in range(k):\n        temp = []\n        for bal in d:\n            if d[bal] != 0:\n                temp.append(bal)\n                d[bal] -= 1\n            if len(temp) == n // k:\n                break\n        if 'a' not in temp:\n            ans += 'a'\n        else:\n            for bara in range(len(temp) - 1):\n                if ord(temp[bara + 1]) - ord(temp[bara]) > 1:\n                    ans += chr(ord(temp[bara]) + 1)\n                    break\n            else:\n                ans += chr(ord(temp[-1]) + 1)\n    print(ans)", "itadori = input\nfor _ in [0] * int(itadori()):\n    (nice, kenny) = map(int, itadori().split())\n    rimuru = ''\n    asta = [0] * 201\n    eren = 0\n    for xeno in itadori():\n        asta[ord(xeno) - 97] += 1\n    asta[nice // kenny] = 0\n    while eren < kenny:\n        jiraya = asta.index(eren)\n        rimuru += chr(97 + jiraya)\n        eren += 1\n        asta[jiraya] = eren\n    print(rimuru)", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    r = ''\n    a = [0] * 201\n    for x in I():\n        a[ord(x) - 97] += 1\n    i = a[n // k] = 0\n    while i < k:\n        j = a.index(i)\n        r += chr(97 + j)\n        i += 1\n        a[j] = i\n    print(r)", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    r = ''\n    a = [0] * 201\n    for x in I():\n        a[ord(x) - 97] += 1\n    i = a[n // k] = 0\n    while i < k:\n        j = a.index(i)\n        r += chr(97 + j)\n        i += 1\n        a[j] = i\n    print(r)", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    r = ''\n    a = [0] * 201\n    for x in I():\n        a[ord(x) - 97] += 1\n    i = a[n // k] = 0\n    while i < k:\n        j = a.index(i)\n        r += chr(97 + j)\n        i += 1\n        a[j] = i\n    print(r)", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    r = ''\n    a = [0] * 201\n    for x in I():\n        a[ord(x) - 97] += 1\n    i = a[n // k] = 0\n    while i < k:\n        j = a.index(i)\n        r += chr(97 + j)\n        i += 1\n        a[j] = i\n    print(r)", "I = input\nfor i in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    r = ''\n    a = [0] * 201\n    for x in I():\n        a[ord(x) - 97] += 1\n    i = a[n // k] = 0\n    while i < k:\n        j = a.index(i)\n        r += chr(97 + j)\n        i += 1\n        a[j] = i\n    print(r)", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    r = ''\n    a = [0] * 201\n    for x in I():\n        a[ord(x) - 97] += 1\n    i = a[n // k] = 0\n    while i < k:\n        j = a.index(i)\n        r += chr(97 + j)\n        i += 1\n        a[j] = i\n    print(r)", "alphabet = 'abcdefghijklmnopqrstuvwxyz'\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    letter_count = {}\n    letters_in_s = []\n    for letter in s:\n        if letter not in letters_in_s:\n            letters_in_s.append(letter)\n    letters_in_s.sort()\n    for letter in s:\n        if letter not in letter_count:\n            letter_count[letter] = 1\n        else:\n            letter_count[letter] += 1\n    n_discovered_letter = 0\n    n_row = 1\n    ans = ''\n    for (idx, letter) in enumerate(alphabet):\n        if n_discovered_letter < k:\n            if letter not in letter_count:\n                missing_letter_number = k - n_discovered_letter\n                ans += missing_letter_number * alphabet[idx]\n                n_discovered_letter += missing_letter_number\n                break\n            elif letter_count[letter] < k - n_discovered_letter:\n                missing_letter_number = k - n_discovered_letter - letter_count[letter]\n                ans += missing_letter_number * alphabet[idx]\n                n_discovered_letter += missing_letter_number\n                if n_row == int(n / k):\n                    ans += letter_count[letter] * alphabet[idx + 1]\n                    n_discovered_letter += letter_count[letter]\n                n_row += 1\n            elif letter_count[letter] >= k - n_discovered_letter:\n                if n_row == int(n / k):\n                    ans += (k - n_discovered_letter) * alphabet[idx + 1]\n                    n_discovered_letter += k - n_discovered_letter\n                    break\n                else:\n                    n_row += 1\n        else:\n            break\n    print(''.join(sorted(ans, reverse=True)))", "tests = int(input())\nlettres = 'abcdefghijklmnopqrstuvwxyz'\n\ndef minex(mex):\n    for i in range(26):\n        if lettres[i] not in mex:\n            return lettres[i]\n\ndef dicvide(dicod):\n    for v in dicod.values():\n        if v > 0:\n            return False\n    return True\nfor _ in range(tests):\n    (n, k) = [int(x) for x in input().split()]\n    books = input()\n    dico = dict()\n    for b in books:\n        dico[b] = dico.get(b, 0) + 1\n    res = {z: [] for z in range(k)}\n    while not dicvide(dico):\n        for l in lettres:\n            for comp in range(k):\n                if len(res[comp]) < n // k:\n                    if dico.get(l, 0) > 0:\n                        res[comp].append(l)\n                        dico[l] -= 1\n    resu = ''\n    for v in res.values():\n        resu += minex(v)\n    print(resu)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    a = [0] * 26\n    for c in s:\n        a[ord(c) - ord('a')] += 1\n    ans = ''\n    i = 0\n    for i in range(min(25, n // k)):\n        while k - len(ans) > a[i]:\n            ans += chr(i + ord('a'))\n    c = chr(ord('a') + min(25, n // k))\n    while k > len(ans):\n        ans += c\n    print(ans[::-1])", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    r = ''\n    a = [0] * 201\n    for x in I():\n        a[ord(x) - 97] += 1\n    i = a[n // k] = 0\n    while i < k:\n        j = a.index(i)\n        r += chr(97 + j)\n        i += 1\n        a[j] = i\n    print(r)", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    r = ''\n    a = [0] * 201\n    for x in I():\n        a[ord(x) - 97] += 1\n    i = a[n // k] = 0\n    while i < k:\n        j = a.index(i)\n        r += chr(97 + j)\n        i += 1\n        a[j] = i\n    print(r)", "t = int(input())\nfor i in range(t):\n    d = {}\n    (n, m) = map(int, input().split(' '))\n    l = sorted(map(ord, list(input())))\n    for k in range(97, 122):\n        d[k] = l.count(k)\n    left = m\n    final = ''\n    for k in range(97, 97 + int(n / m)):\n        if left == 0:\n            continue\n        for kk in range(left):\n            if d[k] == 0:\n                left -= 1\n                final += chr(k)\n            else:\n                d[k] -= 1\n    for k in range(len(final), m):\n        final += chr(97 + int(n / m))\n    print(final[::-1])", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(input())\n    s = list(set(l))\n    s.sort()\n    d = {x: 0 for x in s}\n    for j in l:\n        d[j] += 1\n    ans = ''\n    for j in range(k):\n        temp = []\n        for bal in d:\n            if d[bal] != 0:\n                temp.append(bal)\n                d[bal] -= 1\n            if len(temp) == n // k:\n                break\n        if 'a' not in temp:\n            ans += 'a'\n        else:\n            for bara in range(len(temp) - 1):\n                if ord(temp[bara + 1]) - ord(temp[bara]) > 1:\n                    ans += chr(ord(temp[bara]) + 1)\n                    break\n            else:\n                ans += chr(ord(temp[-1]) + 1)\n    print(ans)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    d = [0] * 26\n    for i in range(n):\n        d[ord(s[i]) - 97] += 1\n    for i in range(k):\n        l = 0\n        while l < n / k and d[l] != 0:\n            d[l] -= 1\n            l += 1\n        print(chr(l + 97), end='')\n    print()", "from re import L\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    a = [0] * 26\n    for i in range(n):\n        a[ord(s[i]) - ord('a')] += 1\n    t = n // k\n    ans = ''\n    for i in range(k):\n        j = 0\n        while j < 25 and j < t and (a[j] != 0):\n            a[j] -= 1\n            j += 1\n        ans += chr(ord('a') + j)\n    print(ans)"]