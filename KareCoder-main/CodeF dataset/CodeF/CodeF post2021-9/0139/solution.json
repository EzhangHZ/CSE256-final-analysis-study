["from sys import stdin\ninput = stdin.readline\nfor i in range(int(input())):\n    (n, h) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    a = arr[-1]\n    b = arr[-2]\n    ans = h // (a + b) * 2\n    if h % (a + b) > a:\n        ans += 2\n    elif h % (a + b) == 0:\n        ans += 0\n    else:\n        ans += 1\n    print(ans)", "from sys import stdin\n\ndef solve():\n    results = []\n    for _ in range(int(stdin.readline().strip())):\n        (N, H) = map(int, stdin.readline().strip().split())\n        A = sorted(list(map(int, stdin.readline().strip().split())), reverse=True)\n        if A[0] >= H:\n            results.append(1)\n            continue\n        maxtwo = A[0] + A[1]\n        c = H // maxtwo\n        h = c * maxtwo\n        c *= 2\n        i = 0\n        while h < H:\n            h += A[i]\n            i = (i + 1) % 2\n            c += 1\n        results.append(c)\n    print('\\n'.join((str(x) for x in results)))\nsolve()", "import sys\ninput = sys.stdin.readline\nrep = int(input())\nfor _ in range(rep):\n    (a, b) = map(int, input().split())\n    data = list(map(int, input().split()))\n    data.sort(reverse=True)\n    (c, d) = (data[0], data[1])\n    if b <= c:\n        print(1)\n        continue\n    result = 0\n    result += b // (c + d) * 2\n    p = (c + d) * (result // 2)\n    if p >= b:\n        print(result)\n    elif p + c >= b:\n        print(result + 1)\n    else:\n        print(result + 2)", "import sys\nread = sys.stdin.readline\nfor i in range(int(read())):\n    (n, H) = map(int, read().split())\n    arr = list(reversed(sorted(list(map(int, read().split())))))\n    if arr[0] > H:\n        print(1)\n        continue\n    temp = arr[0] + arr[1]\n    req = H - H % temp\n    ans = req // temp * 2\n    if req == H:\n        print(ans)\n    elif req + arr[0] >= H:\n        print(ans + 1)\n    else:\n        print(ans + 2)", "from sys import stdin\nt = int(stdin.readline())\nfor i in range(t):\n    (n, H) = [int(j) for j in stdin.readline().split()]\n    A = [int(j) for j in stdin.readline().split()]\n    A.sort()\n    max1 = A[-1]\n    max2 = A[-2]\n    f = True\n    min = H // (max1 + max2) * 2\n    H %= max1 + max2\n    while H > 0:\n        if f:\n            H -= max1\n            f = not f\n        else:\n            H -= max2\n            f = not f\n        min += 1\n    print(min)", "def getlistint():\n    return list(map(int, stdin.readline().split()))\n\ndef getmapint():\n    return map(int, stdin.readline().split())\n\ndef getliststr():\n    return list(stdin.readline().split())\n\ndef getint():\n    return int(stdin.readline().strip())\n\ndef getstr():\n    return stdin.readline().strip()\n\ndef pr(s):\n    stdout.write(str(s) + '\\n')\n\ndef prlist(l):\n    stdout.write(' '.join(list(map(str, l))) + '\\n')\nfrom sys import stdin, stdout\nfor _ in range(getint()):\n    (n, h) = getmapint()\n    a = getlistint()\n    m1 = a.pop(a.index(max(a)))\n    m2 = a.pop(a.index(max(a)))\n    i = h // (m1 + m2)\n    if h - m1 <= 0:\n        pr(1)\n    elif h % (m1 + m2) == 0:\n        pr(i * 2)\n    else:\n        h -= (m1 + m2) * i\n        if h - m1 <= 0:\n            pr(i * 2 + 1)\n        else:\n            pr(i * 2 + 2)", "import math\nfrom sys import stdin\ninput = stdin.readline\ntest = int(input())\nfor _ in range(test):\n    (n, H) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if n == 1:\n        print(math.ceil(H / n))\n    arr = sorted(arr, reverse=True)\n    (a, b) = (arr[0], arr[1])\n    (res, H) = (2 * (H // (a + b)), H % (a + b))\n    if H > a:\n        res += 2\n    elif H > 0:\n        res += 1\n    print(res)", "from sys import stdin\nimport math\n\ndef read_input():\n    (n, H) = map(int, stdin.readline().split())\n    a = list(map(int, stdin.readline().split()))\n    return (n, H, a)\n\ndef solve(n, H, a):\n    a.sort(reverse=True)\n    x = a[0]\n    y = a[1]\n    m = math.ceil(H / (x + y))\n    if (m - 1) * (x + y) + x >= H:\n        return 2 * m - 1\n    else:\n        return 2 * m\n\ndef main():\n    t = int(stdin.readline())\n    for _ in range(t):\n        input = read_input()\n        answer = solve(*input)\n        print(answer)\nmain()", "import sys\nimport math\nfrom bisect import bisect_right as br\nfrom itertools import combinations as cb\n\ndef int_arr():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef str_arr():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef input():\n    return sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    (n, h) = int_arr()\n    arr = int_arr()\n    arr.sort()\n    arr.reverse()\n    mx = arr[0]\n    mx2 = arr[1]\n    tot = mx + mx2\n    rem = h % tot\n    if rem == 0:\n        print(h // tot * 2)\n    else:\n        rem -= mx\n        if rem <= 0:\n            print(h // tot * 2 + 1)\n            continue\n        rem -= mx2\n        if rem <= 0:\n            print(h // tot * 2 + 2)\n            continue", "import sys\nt = int(sys.stdin.readline())\nwhile t > 0:\n    t -= 1\n    n = sys.stdin.readline().split()\n    (n1, h) = (int(n[0]), int(n[1]))\n    guns = sys.stdin.readline().split()\n    guns = [int(i) for i in guns]\n    guns = sorted(guns, reverse=True)\n    ans = h // (guns[0] + guns[1])\n    h = h - ans * (guns[0] + guns[1])\n    i = ans * 2\n    if h > 0:\n        if h > guns[0]:\n            i += 2\n        else:\n            i += 1\n    print(i)", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    (n, h) = list(map(int, stdin.readline().split()))\n    a = sorted(map(int, stdin.readline().split()), reverse=True)\n    b = a[0] + a[1]\n    (c, d) = divmod(h, b)\n    res = c * 2 + (d > 0)\n    if d > a[0]:\n        res += 1\n    print(res)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, H) = map(int, input().split())\n    (*a,) = map(int, input().split())\n    a.sort()\n    (a, b) = (a[-1], a[-2])\n    print(min((H + (a + b - 1)) // (a + b) * 2, 1 + (H - a + (a + b - 1)) // (a + b) * 2))\nfor i in range(int(input())):\n    solve()", "from math import ceil\nfrom sys import stdin\ninput = stdin.readline\n\ndef func():\n    (a1, a2) = (a[0], a[1])\n    k = ceil(h / (a1 + a2))\n    if h + a2 - k * (a1 + a2) <= 0:\n        print(2 * k - 1)\n    elif h - k * (a1 + a2) <= 0:\n        print(2 * k)\n    else:\n        print(2 * k + 1)\nfor _ in range(int(input())):\n    (n, h) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    func()", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, h) = map(int, input().split())\n    (*a,) = map(int, input().split())\n    a.sort()\n    (a, b) = (a[-1], a[-2])\n    print(min((h + (a + b - 1)) // (a + b) * 2, 1 + (h - a + (a + b - 1)) // (a + b) * 2))\nfor i in range(int(input())):\n    solve()", "import math\nimport sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nt = inp()\nwhile t > 0:\n    (n, h) = invr()\n    a = inlt()\n    a.sort()\n    (x, y) = (a[len(a) - 1], a[len(a) - 2])\n    if h % (x + y) == 0:\n        print(int(2 * (h / (x + y))))\n    elif h % (x + y) <= x:\n        print(2 * math.floor(h / (x + y)) + 1)\n    else:\n        print(2 * math.floor(h / (x + y)) + 2)\n    t = t - 1", "from sys import stdin, exit, setrecursionlimit\nfrom collections import deque\nfrom heapq import *\nfrom math import gcd\nfrom math import ceil, log2\nsetrecursionlimit(10000000)\nfrom collections import deque\ninput = stdin.readline\nlmi = lambda : list(map(int, input().split()))\nmi = lambda : map(int, input().split())\nsi = lambda : input().strip('\\n')\nssi = lambda : input().strip('\\n').split()\nfor _ in range(int(input())):\n    (n, h) = mi()\n    arr = sorted(lmi())[::-1]\n    tmp = h // (arr[0] + arr[1])\n    h -= tmp * (arr[0] + arr[1])\n    ans = tmp * 2\n    if h > 0:\n        h -= arr[0]\n        ans += 1\n        if h > 0:\n            h -= arr[1]\n            ans += 1\n    print(ans)", "from math import ceil\n\ndef solve(n, h, weapons):\n    weapons.sort(reverse=True)\n    max1 = weapons[0]\n    max2 = weapons[1]\n    s = max1 + max2\n    ans = h // s\n    if h % s == 0:\n        return ans * 2\n    rem = h % s\n    if rem > max1:\n        return ans * 2 + 2\n    return ans * 2 + 1\nt = int(input().strip())\ninputs = []\nfor _ in range(t):\n    (n, h) = map(int, input().strip().split())\n    weapons = list(map(int, input().strip().split()))\n    inputs.append((n, h, weapons))\nfor (n, h, weapons) in inputs:\n    print(solve(n, h, weapons))", "import sys\ninput = lambda : sys.stdin.readline()[:-1]\nni = lambda : int(input())\nna = lambda : list(map(int, input().split()))\nsys.setrecursionlimit(10 ** 7)\nyes = lambda : print('yes')\nYes = lambda : print('Yes')\nYES = lambda : print('YES')\nno = lambda : print('no')\nNo = lambda : print('No')\nNO = lambda : print('NO')\nt = ni()\nfor _ in range(t):\n    (n, h) = na()\n    a = na()\n    a = sorted(a)\n    (m1, m2) = (a[-1], a[-2])\n    ans = min((h - m1 + m1 + m2 - 1) // (m1 + m2) * 2 + 1, (h + m1 + m2 - 1) // (m1 + m2) * 2)\n    print(ans)", "t = int(input())\nans_mas = []\nfor i in range(t):\n    (n, H) = map(int, input().split())\n    a = list(map(int, input().split()))\n    max_1 = max(a)\n    a.remove(max_1)\n    max_2 = max(a)\n    ost = H % (max_1 + max_2)\n    if ost == 0:\n        ans = 2 * (H // (max_1 + max_2))\n    else:\n        l = H // (max_1 + max_2)\n        if H - l * (max_1 + max_2) > 0:\n            if H - l * (max_1 + max_2) - max_1 <= 0:\n                ans = 2 * l + 1\n            else:\n                ans = 2 * (l + 1)\n        elif H - l * (max_1 + max_2) + max_2 > 0:\n            ans = 2 * l - 1\n        else:\n            ans = 2 * l - 2\n    ans_mas.append(ans)\nprint(*ans_mas, sep='\\n')", "import sys\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef LI1():\n    return list(map(int1, sys.stdin.readline().split()))\n\ndef LLI1(rows_number):\n    return [LI1() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline().rstrip()\ninf = 10 ** 16\nmd = 998244353\n\ndef solve():\n    (n, h) = LI()\n    aa = LI()\n    aa.sort()\n    a = aa[-1]\n    b = aa[-2]\n    (q, r) = divmod(h, a + b)\n    ans = q * 2\n    h -= q * (a + b)\n    if h == 0:\n        print(ans)\n    elif h <= a:\n        print(ans + 1)\n    else:\n        print(ans + 2)\nfor testcase in range(II()):\n    solve()", "import math\nimport heapq\nimport string\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right, insort\nimport sys\ninput = sys.stdin.readline\nS = lambda : input().rstrip()\nI = lambda : int(S())\nM = lambda : map(int, S().split())\nL = lambda : list(M())\nH = 1000000000 + 7\nfor _ in range(I()):\n    (n, h) = M()\n    l = L()\n    a = max(l)\n    l.pop(l.index(a))\n    b = max(l)\n    t = h // (a + b) * 2\n    p = h % (a + b)\n    if p > 0:\n        t += 1\n        if p > a:\n            t += 1\n    print(t)", "k = []\nt = int(input())\nfor _ in range(t):\n    (n, h) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    if h < max(a):\n        k.append(1)\n    else:\n        r = a[-1] + a[-2]\n        if h % r == 0:\n            k.append(2 * (h // r))\n        elif h // r * r + a[-1] < h:\n            k.append(2 * (h // r) + 2)\n        else:\n            k.append(2 * (h // r) + 1)\nfor i in k:\n    print(i)", "def max_2(list):\n    list.sort()\n    maximum = list[-1]\n    maximum_2nd = list[-2]\n    return (maximum, maximum_2nd)\n\ndef number_of_times(list, health):\n    (maximum, maximum_2nd) = max_2(list)\n    y = health % (maximum + maximum_2nd)\n    z = int(health / (maximum + maximum_2nd)) * 2\n    if y == 0:\n        number = z\n    else:\n        p = z / 2 * (maximum + maximum_2nd) + maximum\n        if p >= health:\n            number = z + 1\n        else:\n            number = z + 2\n    return number\nt = int(input())\nweapon_list_2D = []\nhealth_list = []\nfor test_case in range(t):\n    (n, H) = input().split()\n    n = int(n)\n    H = int(H)\n    health_list.append(H)\n    weapon_list = input().split()\n    for i in range(len(weapon_list)):\n        weapon_list[i] = int(weapon_list[i])\n    weapon_list_2D.append(weapon_list)\nfor i in range(len(weapon_list_2D)):\n    list = weapon_list_2D[i]\n    health = health_list[i]\n    number = number_of_times(list, health)\n    print(number)", "def func(H, weapons):\n    weapons = sorted(weapons, reverse=True)\n    temp = weapons[0] + weapons[1]\n    shot = int(H / temp)\n    if shot * temp + weapons[0] < H:\n        return shot * 2 + 2\n    elif shot * temp == H:\n        return shot * 2\n    else:\n        return shot * 2 + 1\n    return 0\ncases = int(input())\nout = []\nfor _ in range(cases):\n    temp = [int(i) for i in input().split(' ')]\n    n = temp[0]\n    H = temp[1]\n    temp = [int(i) for i in input().split(' ')]\n    temp += [0, 0]\n    out.append(func(H, temp))\nfor item in out:\n    print(item)", "tc = int(input())\nans = []\nfor i in range(tc):\n    input_string = input()\n    n = input_string.split()\n    temp = input()\n    weapons = temp.split()\n    for i in range(int(n[0])):\n        weapons[i] = int(weapons[i])\n    weapons.sort(reverse=True)\n    if int(n[0]) == 1:\n        mustUse = int(int(n[1]) / weapons[0])\n        rem = int(n[1]) - mustUse / 2 * weapons[0]\n        if rem > 0:\n            mustUse += 1\n        ans.append(mustUse)\n        continue\n    totalPower = weapons[0] + weapons[1]\n    mustUse = int(int(n[1]) / totalPower) * 2\n    rem = int(n[1]) - mustUse / 2 * totalPower\n    if rem > weapons[0]:\n        mustUse = mustUse + 2\n    elif rem <= weapons[0] and rem != 0:\n        mustUse = mustUse + 1\n    ans.append(mustUse)\nfor i in ans:\n    print(i)", "for _ in range(int(input())):\n    (n, H) = map(int, input().split())\n    A = [int(a) for a in input().split()]\n    A.sort()\n    (a, b) = (A[-1], A[-2])\n    k = H // (a + b) * 2\n    H %= a + b\n    if H == 0:\n        print(k)\n    elif H <= a:\n        print(k + 1)\n    else:\n        print(k + 2)", "t = int(input())\nfor _ in range(t):\n    (n, H) = map(int, input().split())\n    weapons = sorted(list(map(int, input().split())))\n    ans = H // (weapons[-1] + weapons[-2]) * 2\n    H %= weapons[-1] + weapons[-2]\n    if H > 0:\n        if H > weapons[-1]:\n            ans += 2\n        else:\n            ans += 1\n    print(ans)", "for i in range(int(input())):\n    (n, h) = map(int, input().split())\n    A = [int(k) for k in input().split()]\n    A.sort()\n    a = 0\n    l = A[-1] + A[-2]\n    j = h // l\n    o = h % l\n    if o == 0:\n        print(j * 2)\n    elif o <= A[-1]:\n        print(j * 2 + 1)\n    else:\n        print(j * 2 + 2)", "t = int(input())\nfor _ in range(t):\n    (n, H) = map(int, input().split())\n    weapon_damages = sorted(map(int, input().split()))\n    used_weapon_1 = weapon_damages[-1]\n    used_weapon_2 = weapon_damages[-2]\n    used_weapon_damage = used_weapon_1 + used_weapon_2\n    res = H // used_weapon_damage * 2\n    if H % used_weapon_damage > 0:\n        if H % used_weapon_damage <= used_weapon_1 or H % used_weapon_damage <= used_weapon_2:\n            res += 1\n        else:\n            res += 2\n    print(res)", "for _ in range(int(input())):\n    (n, h) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    xx = h // (a[-1] + a[-2])\n    h -= xx * (a[-1] + a[-2])\n    cnt = 2 * xx\n    if h > 0:\n        cnt += 1\n        h -= a[-1]\n    if h > 0:\n        cnt += 1\n        h -= a[-2]\n    print(cnt)", "t = int(input())\nfor _ in range(t):\n    (n, h) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    times = 0\n    temp = a[0] + a[1]\n    if h % temp == 0:\n        print(h // temp * 2)\n    elif h % temp == h:\n        if h > a[0]:\n            print(2)\n        else:\n            print(1)\n    elif h % temp > 0:\n        if h % temp <= a[0]:\n            print(h // temp * 2 + 1)\n        else:\n            print(h // temp * 2 + 2)", "tests = int(input())\nfor _ in range(0, tests):\n    (n, h) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    both = arr[-1] + arr[-2]\n    if h <= arr[-1]:\n        print(1)\n    else:\n        if h % both == 0:\n            ans1 = h // both * 2\n        else:\n            ans1 = (h // both + 1) * 2\n        if (h + arr[-2]) % both == 0:\n            ans2 = 2 * ((h + arr[-2]) // both) - 1\n        else:\n            ans2 = 2 * ((h + arr[-2]) // both + 1) - 1\n        if ans1 > ans2:\n            print(ans2)\n        else:\n            print(ans1)", "for _ in range(int(input())):\n    (n, h) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    a = l[0]\n    b = l[1]\n    c = a + b\n    r = h % c\n    if r == 0:\n        print(2 * (h // c))\n    elif r <= a:\n        print(2 * (h // c) + 1)\n    else:\n        print(2 * (h // c) + 2)", "from collections import Counter, deque\nimport math\nfrom random import randint\nfrom bisect import bisect\nimport sys\nimport re\nMOD = 1000000007\nMAX = sys.maxsize\nMIN = -sys.maxsize\n\nclass get:\n\n    def int():\n        return list(map(int, input().split()))\n\n    def str():\n        return input().split()\n\n    def float():\n        return list(map(float, input().split()))\n\n    def map():\n        return map(int, input().split())\n\ndef sqrt(x):\n    return int(math.sqrt(x)) + 1\n\ndef gcd(*args):\n    result = args[0]\n    for item in args:\n        result = math.gcd(result, item)\n    return result\n\ndef LCM(a, b):\n    return a * b // math.gcd(a, b)\n\ndef solve():\n    (n, H) = get.map()\n    a = get.int()\n    a.sort()\n    r = H % (a[-1] + a[-2])\n    res = H // (a[-1] + a[-2])\n    res = 2 * res\n    if r != 0:\n        if r <= a[-1]:\n            res += 1\n        else:\n            res += 2\n    print(res)\nfor _ in range(int(input())):\n    solve()", "from math import ceil\nfor _ in range(int(input())):\n    (n, h) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = ceil(h / (a[-1] + a[-2])) * 2\n    if h - (ans // 2 * (a[-1] + a[-2]) - a[-2]) <= 0:\n        ans -= 1\n    print(ans)", "for fgbhjm in range(int(input())):\n    (n, h) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    x = a[-1]\n    y = a[-2]\n    ans = h // (x + y)\n    if h <= x:\n        print(1)\n    elif h % (x + y) == 0:\n        print(ans * 2)\n    elif ans * (x + y) + x >= h:\n        print(ans * 2 + 1)\n    else:\n        print(ans * 2 + 2)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = sorted(list(map(int, input().split())), reverse=True)\n    su = s[0] + s[1]\n    print(m // su * 2 + (0 if m % su == 0 else 1 if m % su <= s[0] else 2))", "def f():\n    (n, h) = map(int, input().split())\n    l = sorted(map(int, input().split()), reverse=True)\n    (a, b) = (l[0], l[1])\n    t = 1\n    c = 2 * (h // (a + b))\n    h %= a + b\n    if h > a:\n        c += 2\n    elif h:\n        c += 1\n    return c\nfor _ in range(int(input())):\n    print(f())", "for _ in range(int(input())):\n    (n, m) = map(int, input().split(' '))\n    l = list(map(int, input().split(' ')))\n    l.sort()\n    a = l[len(l) - 1]\n    b = l[len(l) - 2]\n    c = a + b\n    h = m // c\n    d = m % c\n    if h * c == m:\n        print(h * 2)\n    elif d <= a or d <= b:\n        print(h * 2 + 1)\n    else:\n        print(h * 2 + 2)", "def count_shots(aa, H):\n    if len(aa) == 1:\n        return (H + aa[0] - 1) // aa[0]\n    else:\n        aa.sort()\n        v1 = aa[-1]\n        v2 = aa[-2]\n        count = H // (v1 + v2)\n        H -= (v1 + v2) * count\n        count *= 2\n        while H > 0:\n            v = v2 if count % 2 == 1 else v1\n            H -= v\n            count += 1\n        return count\n    return 0\nn_t = int(input())\nfor t in range(n_t):\n    (n, H) = map(int, input().split(' '))\n    aa = list(map(int, input().split(' ')))\n    assert len(aa) == n\n    result = count_shots(aa, H)\n    print(result)", "def game(a, h):\n    n = len(a)\n    mx1 = 0\n    mx2 = 0\n    for i in range(n):\n        if a[i] >= mx1:\n            mx2 = mx1\n            mx1 = a[i]\n        elif a[i] < mx1 and a[i] >= mx2:\n            mx2 = a[i]\n    if h <= mx1:\n        return 1\n    if h <= mx1 + mx2:\n        return 2\n    temp = h % (mx1 + mx2)\n    ans = h // (mx1 + mx2)\n    ans = ans * 2\n    if temp == 0:\n        return ans\n    if temp <= mx1:\n        return ans + 1\n    return ans + 2\nt = int(input())\nfor i in range(t):\n    (n, h) = input().split()\n    n = int(n)\n    h = int(h)\n    a = [int(x) for x in input().split()]\n    print(game(a, h))", "for i in range(int(input())):\n    (n, h) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    a = arr[-1]\n    b = arr[-2]\n    ans = h // (a + b) * 2\n    h %= a + b\n    if h == 0:\n        print(ans)\n    elif h - a <= 0:\n        print(ans + 1)\n    else:\n        print(ans + 2)", "t = int(input())\nfor i in range(t):\n    (n, h) = map(int, input().split())\n    n_ = list(map(int, input().split()))\n    n_.sort(reverse=True)\n    x = n_[0] + n_[1]\n    y = int(h / x)\n    z = h % x\n    res = 2 * y\n    if z == 0:\n        pass\n    elif z <= n_[0]:\n        res += 1\n    else:\n        res += 2\n    print(res)", "t = int(input())\nfor _ in range(t):\n    (n, h) = map(int, input().split())\n    a = list(map(int, input().split()))\n    count = 0\n    a.sort()\n    if a[-1] >= h:\n        print(1)\n    elif a[-1] + a[-2] >= h:\n        print(2)\n    else:\n        s = a[-1] + a[-2]\n        f = h % s\n        if f == 0:\n            print(h // s * 2)\n        elif f <= a[-1]:\n            print(h // s * 2 + 1)\n        else:\n            print(h // s * 2 + 2)", "import math\nt = int(input())\nfor _ in range(t):\n    (_, h) = [int(c) for c in input().split(' ')]\n    a = [int(c) for c in input().split(' ')]\n    m = max(a)\n    if h <= m:\n        print(1)\n        continue\n    k = 0\n    a.remove(m)\n    sm = max(a)\n    k = math.floor(h / (m + sm))\n    h = h % (m + sm)\n    if h == 0:\n        print(k * 2)\n        continue\n    if h <= m:\n        print(k * 2 + 1)\n        continue\n    else:\n        print(k * 2 + 2)", "p = int(input())\nwhile p:\n    (n, h) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    d = a[n - 1] + a[n - 2]\n    b = h // d\n    c = h % d\n    e = 0\n    if c > a[n - 1] and c != 0:\n        e += 2\n    elif c != 0:\n        e += 1\n    e += 2 * b\n    print(e)\n    p -= 1", "import math\nt = int(input())\nfor i in range(t):\n    (n, H) = map(int, input().split())\n    A = list(map(int, input().split()))\n    maxim1 = max(A)\n    A[A.index(maxim1)] = 0\n    maxim2 = max(A)\n    maxim = maxim1 + maxim2\n    if H // maxim == math.ceil(H / maxim):\n        print(2 * (H // maxim))\n    elif maxim * (H // maxim) + maxim1 >= H:\n        print(2 * (H // maxim) + 1)\n    else:\n        print(2 * (H // maxim) + 2)", "import math\nimport heapq\nT = int(input())\nfor _ in range(T):\n    (n, h) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    x = arr[-1] + arr[-2]\n    z = h // x\n    cnt = 0\n    if h % x == 0:\n        cnt = z * 2\n    elif h % x <= arr[-1]:\n        cnt = z * 2 + 1\n    elif h % x > arr[-1]:\n        cnt = z * 2 + 2\n    print(cnt)", "x = int(input())\nfor i in range(x):\n    h = input().split(' ')\n    w = input().split(' ')\n    H = list(map(int, h))\n    W = list(map(int, w))\n    W.sort()\n    if H[1] <= W[-1]:\n        print(1)\n    elif H[1] <= W[-1] + W[-2]:\n        print(2)\n    elif H[1] % (W[-1] + W[-2]) == 0:\n        print(int(H[1] / (W[-1] + W[-2])) * 2)\n    elif H[1] % (W[-1] + W[-2]) <= W[-1]:\n        print(int(H[1] / (W[-1] + W[-2])) * 2 + 1)\n    else:\n        print(int(H[1] / (W[-1] + W[-2])) * 2 + 2)", "t = int(input())\nfor _ in range(t):\n    (n, H) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    l = a[-1]\n    s = a[-2]\n    if H <= l:\n        print(1)\n    elif H <= l + s:\n        print(2)\n    else:\n        ans = 2 * (H // (l + s))\n        h = ans // 2 * (l + s)\n        while h < H:\n            h += l\n            ans += 1\n            if h < H:\n                h += s\n                ans += 1\n        print(ans)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, h) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    a.sort()\n    (x, y) = (a[-1], a[-2])\n    s = x + y\n    u = h // s\n    u = u * 2\n    if h % s != 0:\n        r = h % s\n        if r <= x or r <= y:\n            u += 1\n        else:\n            u += 2\n    print(u)", "for t in range(int(input())):\n    (n, H) = [int(i) for i in input().split()]\n    a = sorted([int(i) for i in input().split()])\n    if a[-1] >= H:\n        res = 1\n    elif a[-1] + a[-2] >= H:\n        res = 2\n    else:\n        b = H % (a[-1] + a[-2])\n        if b == 0:\n            res = H // (a[-1] + a[-2]) * 2\n        elif b <= a[-1]:\n            res = H // (a[-1] + a[-2]) * 2 + 1\n        else:\n            res = H // (a[-1] + a[-2]) * 2 + 2\n    print(res)", "total_tests = int(input())\nfrom math import ceil\nfor i in range(total_tests):\n    m = 0\n    (n, H) = list(map(int, input().split(' ')))\n    st = list(map(int, input().split(' ')))\n    max1 = max(st)\n    st.remove(max1)\n    max2 = max(st)\n    m = 2 * (H // (max1 + max2))\n    if H % (max1 + max2) > max1:\n        m += 2\n    elif H % (max1 + max2) == 0:\n        m += 0\n    else:\n        m += 1\n    print(m)", "t = int(input())\nfor i in range(t):\n    (n, H) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    a.sort()\n    first = a[-1]\n    second = a[-2]\n    if first >= H:\n        print(1)\n    elif first + second >= H:\n        print(2)\n    else:\n        rem = H // (first + second)\n        mod = H % (first + second)\n        if mod == 0:\n            print(2 * rem)\n        elif mod <= first:\n            print(2 * rem + 1)\n        else:\n            print(2 * rem + 2)", "for i in range(int(input())):\n    (n, H) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    (i, count) = (0, 0)\n    if H <= l[0]:\n        print('1')\n    else:\n        q = H // (l[0] + l[1])\n        if H % (l[0] + l[1]) == 0:\n            print(2 * q)\n        elif H % (l[0] + l[1]) <= l[0]:\n            print(2 * q + 1)\n        else:\n            print(2 * q + 2)", "def solve():\n    (n, h) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    a.sort()\n    x = a[n - 1]\n    y = 0\n    if n >= 2:\n        y = a[n - 2]\n    k = int(h / (x + y))\n    h = h - k * (x + y)\n    cnt = k * 2\n    if h > 0:\n        cnt = cnt + 1\n        h -= x\n    if h > 0:\n        cnt = cnt + 1\n        h -= y\n    print(cnt)\ntest = int(input())\nwhile test > 0:\n    test = test - 1\n    solve()", "t = int(input())\nfor _ in range(t):\n    (n, h) = map(int, input().split())\n    (x, y, *z) = sorted(map(int, input().split()), reverse=True)\n    s = x + y\n    (d, r) = (h // s, h % s)\n    ans = d * 2\n    if r > x:\n        ans += 2\n    elif r > 0:\n        ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, h) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    m1 = arr[-1]\n    m2 = arr[-2]\n    if m1 >= h:\n        print(1)\n    else:\n        p = m1 + m2\n        (q, rem) = (h // p, h % p)\n        if rem > 0:\n            if rem <= m1:\n                print(2 * q + 1)\n            else:\n                print(2 * q + 2)\n        else:\n            print(2 * q)", "def mini(list1):\n    mx = max(list1[0], list1[1])\n    secondmax = min(list1[0], list1[1])\n    n = len(list1)\n    for i in range(2, n):\n        if list1[i] > mx:\n            secondmax = mx\n            mx = list1[i]\n        elif list1[i] > secondmax:\n            secondmax = list1[i]\n    return (mx, secondmax)\nt = int(input())\nc = 0\nfor i in range(t):\n    (n, h) = map(int, input().split())\n    dmg = list(map(int, input().split()))\n    (mx, secondmx) = mini(dmg)\n    if h <= mx:\n        print(1)\n    elif h % (mx + secondmx) == 0:\n        print(2 * (h // (mx + secondmx)))\n    else:\n        q = 2 * (h // (mx + secondmx))\n        r = h - q / 2 * (mx + secondmx)\n        if r <= mx:\n            print(q + 1)\n        else:\n            print(q + 2)", "T = int(input())\nwhile T:\n    (n, H) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort(reverse=True)\n    at = arr[0] + arr[1]\n    if H % at:\n        if arr[0] < H % at:\n            print(H // at * 2 + 2)\n        else:\n            print(H // at * 2 + 1)\n    else:\n        print(H // at * 2)\n    T -= 1", "def fun(ls, lt):\n    (n, h) = lt\n    ls = sorted(ls)\n    mx = ls[-1]\n    mn = ls[-2]\n    sm = mx + mn\n    times = h // sm * 2\n    h = h % sm\n    count = 0\n    while h > 0:\n        if count % 2 == 0:\n            h -= mx\n            times += 1\n        else:\n            h -= mn\n            times += 1\n        count += 1\n    print(times)\nT = int(input())\nfor i in range(T):\n    lt = list(map(int, input().split()))\n    ls = list(map(int, input().split()))\n    fun(ls, lt)", "def parse_n_solve():\n    t = int(input())\n    for i in range(t):\n        (n, h) = list(map(int, input().split()))\n        ais = list(map(int, input().split()))\n        ais = sorted(ais, reverse=True)\n        if ais[0] >= h:\n            print(1)\n        elif ais[0] + ais[1] >= h:\n            print(2)\n        else:\n            mod = h % (ais[0] + ais[1])\n            div = int(h / (ais[0] + ais[1]))\n            if mod == 0:\n                print(div * 2)\n            elif mod > ais[0]:\n                print(div * 2 + 2)\n            else:\n                print(div * 2 + 1)\nparse_n_solve()", "def gamer_hemose(H, a):\n    best_damage = a[0] + a[1]\n    s = H // best_damage * 2\n    H %= best_damage\n    if H > 0:\n        s += 1\n        H -= a[0]\n    if H > 0:\n        s += 1\n    return s\nt = int(input())\nfor _ in range(t):\n    (n, H) = map(int, input().split(' '))\n    a = sorted(map(int, input().split(' ')), reverse=True)\n    print(gamer_hemose(H, a))", "def solve(n, H, hps):\n    hps = sorted(hps)\n    (one, two) = (hps[-1], hps[-2])\n    count = 0\n    total = one + two\n    if H > total:\n        count += 2 * (H // total)\n        H %= total\n    if H > 0:\n        H -= one\n        count += 1\n    if H > 0:\n        H -= two\n        count += 1\n    return count\n\ndef main():\n    testcases = int(input())\n    for _ in range(testcases):\n        (n, H) = [int(x) for x in input().split()]\n        hps = [int(x) for x in input().split()]\n        ans = solve(n, H, hps)\n        print(ans)\nmain()", "for _ in range(int(input())):\n    (n, h) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    an = 2 * (h // (a[-1] + a[-2]))\n    if h % (a[-1] + a[-2]) == 0:\n        print(an)\n    elif h % (a[-1] + a[-2]) - a[-1] > 0:\n        print(an + 2)\n    else:\n        print(an + 1)", "def second_largest(numbers):\n    m1 = m2 = float('-inf')\n    for x in numbers:\n        if x > m2:\n            if x >= m1:\n                (m1, m2) = (x, m1)\n            else:\n                m2 = x\n    return [m1, m2]\nfor _ in range(int(input())):\n    (n, h) = map(int, input().split())\n    (*wep,) = map(int, input().split())\n    wep = second_largest(wep)\n    sm = wep[0] + wep[1]\n    if h // sm:\n        aa = h // sm\n        s = aa * sm\n        h -= s\n        aa *= 2\n        if h == 0:\n            pass\n        elif h > wep[0]:\n            aa += 2\n        else:\n            aa += 1\n        print(aa)\n    elif h > wep[0]:\n        print(2)\n    else:\n        print(1)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (a, b) = list(map(int, input().split()))\n    li = [int(x) for x in input().split()]\n    li.sort()\n    count = 0\n    add = li[a - 1] + li[a - 2]\n    count += b // add\n    ans = 2 * count\n    left = b - add * count\n    if left == 0:\n        print(ans)\n    else:\n        if left > li[a - 1]:\n            left -= li[a - 1]\n            ans += 2\n        else:\n            ans += 1\n        print(ans)", "for i in range(int(input())):\n    (n, h) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l = sorted(l)\n    count = 2 * (h // (l[n - 1] + l[n - 2]))\n    a = h % (l[n - 1] + l[n - 2])\n    if a == 0:\n        count += 0\n    elif a > l[n - 1]:\n        count += 2\n    else:\n        count += 1\n    print(count)", "p = lambda : map(int, input().split())\n(T,) = p()\nfor _ in range(T):\n    (n, h) = p()\n    (x, y) = sorted(p())[-2:]\n    k = h // (x + y)\n    h -= k * (x + y)\n    print(2 * k + (2 if h > y else 1 if h else 0))", "t = int(input())\nfor _ in range(t):\n    (n, h) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    m = l[0] + l[1]\n    x = 2 * (h // m)\n    h %= m\n    if h > l[0]:\n        x += 2\n    elif h > 0:\n        x += 1\n    print(x)", "def solve():\n    (n, h) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr = sorted(arr)\n    max1 = arr[n - 1]\n    max2 = arr[n - 2]\n    tot = max1 + max2\n    ans = h // tot * 2\n    h = h % tot\n    if h > 0:\n        h -= max1\n        ans += 1\n    if h > 0:\n        h -= max2\n        ans += 1\n    print(ans)\nt = int(input())\nfor i in range(t):\n    solve()", "for t in range(int(input())):\n    (n, h) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    w1 = a[0]\n    w2 = a[1]\n    i = 0\n    count = 0\n    ans = 2 * (h // (w1 + w2))\n    rem = h % (w1 + w2)\n    if rem > 0:\n        if w1 >= rem:\n            ans += 1\n        else:\n            ans += 2\n    print(ans)", "for _ in range(int(input())):\n    (n, h) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    c = 2 * (h // (a[-1] + a[-2]))\n    h = h % (a[-1] + a[-2])\n    if h != 0:\n        if h > a[-1]:\n            c += 2\n        else:\n            c += 1\n    print(c)", "t = int(input())\nfor i in range(t):\n    (n, h) = map(int, input().split())\n    a = [x for x in map(int, input().split())]\n    a.sort()\n    x = a[n - 1] + a[n - 2]\n    c = 2 * (h // x)\n    h = h % x\n    if h > a[n - 1]:\n        c += 2\n    elif h > 0:\n        c += 1\n    print(c)", "for step in range(int(input())):\n    (n, H) = map(int, input().split())\n    weapons = list(map(int, input().split()))\n    weapons.sort()\n    strongest = weapons[-1]\n    secstrong = weapons[-2]\n    ans = 0\n    mog = H // (strongest + secstrong)\n    ans += 2 * mog\n    leftover = H % (strongest + secstrong)\n    if 0 < leftover <= strongest:\n        ans += 1\n    elif leftover == 0:\n        pass\n    else:\n        ans += 2\n    print(ans)", "for i in range(int(input())):\n    (n, h) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    a.reverse()\n    if h % (a[0] + a[1]) == 0:\n        print(h // (a[0] + a[1]) * 2)\n    elif h % (a[0] + a[1]) <= a[0]:\n        print(h // (a[0] + a[1]) * 2 + 1)\n    else:\n        print(h // (a[0] + a[1]) * 2 + 2)", "Input = '\\n3\\n2 4\\n3 7\\n2 6\\n4 2\\n3 11\\n2 1 7\\n'[1:-1].split('\\n')\nt = int(input())\nfor i in range(t):\n    (n, H) = map(int, input().split())\n    a = sorted(map(int, input().split()), reverse=True)\n    (A, B) = a[:2]\n    (Count, H) = divmod(H, A + B)\n    if H <= 0:\n        print(Count * 2)\n    elif H > A:\n        print(Count * 2 + 2)\n    else:\n        print(Count * 2 + 1)", "t = int(input())\nfor _ in range(t):\n    (n, H) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    ans = H // (a[0] + a[1])\n    H -= (a[0] + a[1]) * ans\n    ans *= 2\n    while H > 0:\n        H -= a[ans % 2]\n        ans += 1\n    print(ans)", "T = int(input())\nfor t in range(T):\n    (n, H) = [int(k) for k in input().split(' ')]\n    a = [int(k) for k in input().split(' ')]\n    (M, m) = (0, 0)\n    for k in a:\n        if k >= M:\n            m = M\n            M = k\n        elif k > m:\n            m = k\n    a = [M, m]\n    ans = H // (M + m) * 2\n    rem = H % (M + m)\n    if rem == 0:\n        print(ans)\n    elif rem <= M:\n        print(ans + 1)\n    else:\n        print(ans + 2)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    l = sorted(map(int, input().split()), reverse=True)\n    (x, y) = (l[0], l[1])\n    flag = 0\n    c = 0\n    ans = b // (x + y) * 2\n    test = b % (x + y)\n    if test > x:\n        ans += 2\n    elif test > 0:\n        ans += 1\n    print(ans)", "for i in range(int(input())):\n    (n, h) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    h = h - a[-1]\n    count = 1\n    if h > 0:\n        h = h - a[-2]\n        count += 1\n        if h > 0:\n            t = a[-1] + a[-2]\n            count = count + 2 * (h // t)\n            h = h % t\n            if h > 0:\n                h = h - a[-1]\n                count += 1\n                if h > 0:\n                    count += 1\n    print(count)", "import math\nt = int(input())\nfor _ in range(t):\n    (n, h) = map(int, input().split())\n    l = [int(i) for i in input().split()]\n    l.sort()\n    s = l[-1] + l[-2]\n    if l[-1] >= h:\n        print('1')\n    elif h % s == 0:\n        print(h // s * 2)\n    elif h % s <= l[-1]:\n        print(h // s * 2 + 1)\n    else:\n        print(h // s * 2 + 2)", "t = int(input())\nfor _ in range(t):\n    (n, h) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort(reverse=True)\n    (a, b) = (arr[0], arr[1])\n    count = 0\n    total = a + b\n    count += 2 * (h // total)\n    rem = h % total\n    if rem == 0:\n        count += 0\n    elif rem <= a:\n        count += 1\n    else:\n        count += 2\n    print(count)", "t = int(input())\nfor _ in range(t):\n    (n, H) = list(map(int, input().split()))\n    damage = list(map(int, input().split()))\n    damage.sort(reverse=True)\n    d1 = damage[0]\n    d2 = damage[1]\n    if H <= d1:\n        print(1)\n    else:\n        q = H // (d1 + d2)\n        r = H % (d1 + d2)\n        if r == 0:\n            print(2 * q)\n        elif r <= d1:\n            print(2 * q + 1)\n        else:\n            print(2 * q + 2)", "def main():\n    t = int(input())\n    for i in range(t):\n        (n, H) = map(int, input().split())\n        a = list(map(int, input().split()))\n        a1 = max(a)\n        del a[a.index(a1)]\n        a2 = max(a)\n        a = [a1, a2]\n        co = 2 * (H // (a1 + a2))\n        k = 2\n        if H % (a1 + a2) != 0:\n            co += 1\n            if H % (a1 + a2) > a1:\n                co += 1\n        print(co)\nmain()", "t = int(input())\nfor a in range(t):\n    weapons_health = [int(i) for i in input().split()]\n    damage = [int(j) for j in input().split()]\n    damage = sorted(damage)\n    H = weapons_health[1]\n    gun_a = damage[-1]\n    gun_b = damage[-2]\n    dam = gun_a + gun_b\n    if H % dam == 0:\n        cnt = H // dam\n    else:\n        cnt = int(H / dam + 1)\n    if dam * cnt - gun_b >= H:\n        print(2 * cnt - 1)\n    else:\n        print(2 * cnt)", "T = int(input())\nwhile T > 0:\n    (n, H) = [int(x) for x in input().split()]\n    A = [int(x) for x in input().split()]\n    max1 = max(A)\n    A.remove(max1)\n    max2 = max(A)\n    if H <= max1:\n        print(1)\n    elif H <= max1 + max2:\n        print(2)\n    else:\n        val = int(H / (max1 + max2))\n        count = val * 2\n        if H - val * (max1 + max2) <= 0:\n            print(count)\n        else:\n            rem = H - val * (max1 + max2)\n            if rem <= max1:\n                print(count + 1)\n            else:\n                print(count + 2)\n    T = T - 1", "R = lambda : map(int, input().split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n, h) = R()\n    (*_, x, y) = sorted(R())\n    s = x + y\n    print(h // s * 2 + (h % s > 0) + (h % s > y))", "for _ in range(int(input())):\n    (n, h) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    a.sort(reverse=True)\n    ans = 2 * (h // (a[0] + a[1]))\n    h -= ans // 2 * (a[0] + a[1])\n    if h > 0:\n        ans += 1\n        h -= a[0]\n    if h > 0:\n        ans += 1\n        h -= a[1]\n    print(ans)", "for i in range(int(input())):\n    health = int(input().split()[1])\n    all_damages = input().split()\n    all_damages = [int(x) for x in all_damages]\n    if len(all_damages) == 1:\n        print(1)\n        continue\n    max_damage = max(all_damages)\n    all_damages.remove(max_damage)\n    max2 = max(all_damages)\n    counter = 0\n    two_damages = max_damage + max2\n    if two_damages < health:\n        counter = health // two_damages * 2\n        left = health % two_damages\n        if left > 0:\n            counter += 1\n        if left > max_damage:\n            counter += 1\n    elif max_damage >= health:\n        counter = 1\n    else:\n        counter = 2\n    print(counter)", "t = int(input())\nfor i in range(t):\n    (n, H) = map(int, input().split())\n    arr = sorted(list(map(int, input().split())))\n    (a, b) = (arr[-1], arr[-2])\n    ans = H // (a + b)\n    H -= ans * (a + b)\n    ans *= 2\n    if H > a:\n        ans += 2\n    elif H != 0:\n        ans += 1\n    print(ans)", "def main():\n\n    def solve(n, h, a):\n        b = c = -1\n        for x in a:\n            if x > b:\n                c = b\n                b = x\n            elif x > c:\n                c = x\n        (q, r) = divmod(h, b + c)\n        if r > b:\n            return 2 * q + 2\n        elif r > 0:\n            return 2 * q + 1\n        return 2 * q\n    t = int(input())\n    ans = []\n    for _ in range(t):\n        (n, h) = [int(x) for x in input().split()]\n        a = [int(x) for x in input().split()]\n        ans.append(solve(n, h, a))\n    print('\\n'.join(map(str, ans)))\nimport sys, threading\ninput = sys.stdin.readline\nthread = threading.Thread(target=main)\nthread.start()\nthread.join()", "def main():\n\n    def solve(h, a):\n        b = c = -1\n        for x in a:\n            if x > b:\n                c = b\n                b = x\n            elif x > c:\n                c = x\n        (q, r) = divmod(h, b + c)\n        if r > b:\n            return 2 * q + 2\n        elif r > 0:\n            return 2 * q + 1\n        return 2 * q\n    t = int(input())\n    ans = []\n    for _ in range(t):\n        (n, h) = [int(x) for x in input().split()]\n        a = [int(x) for x in input().split()]\n        ans.append(solve(h, a))\n    print('\\n'.join(map(str, ans)))\nimport sys, threading\ninput = sys.stdin.readline\nthread = threading.Thread(target=main)\nthread.start()\nthread.join()", "from random import *\nfrom math import *\nT = int(input())\nfor t in range(T):\n    (n, H) = map(int, input().split())\n    A = list(map(int, input().split()))\n    A.sort()\n    ans = 0\n    (a, b) = (A[-1], A[-2])\n    ans += H // (a + b) * 2\n    H %= a + b\n    while H > 0:\n        if ans % 2 == 0:\n            H -= a\n        else:\n            H -= b\n        ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, h) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    a1ma = a[-1]\n    a2ma = a[-2]\n    tma = a1ma + a2ma\n    ans = h // tma\n    mo = h % tma\n    if mo == 0:\n        print(ans * 2)\n    elif mo <= a1ma:\n        print(ans * 2 + 1)\n    else:\n        print(ans * 2 + 2)"]