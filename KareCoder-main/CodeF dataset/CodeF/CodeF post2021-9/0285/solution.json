["for n in [*open(0)][1:]:\n    (n, r, b) = map(int, n.split())\n    b += 1\n    c = r // b * 'R' + 'B'\n    print((('R' + c) * (r % b) + c * n)[:n])", "for l in [*open(0)][1:]:\n    (n, r, b) = map(int, l.split())\n    b += 1\n    c = r // b * 'R' + 'B'\n    print((r % b * ('R' + c) + n * c)[:n])", "import sys\ninput = sys.stdin.readline\nI = lambda : list(map(int, input().split()))\nfor tc in range(int(input())):\n    (n, r, b) = I()\n    low = r // (b + 1)\n    rm = r % (b + 1)\n    print(('R' * (low + 1) + 'B') * rm + ('R' * low + 'B') * (b - rm) + 'R' * (r - (low + 1) * rm - low * (b - rm)))", "def solve():\n    (n, r, b) = map(int, input().split())\n    divs = b + 1\n    size = r // divs\n    nbig = r % divs\n    nsmall = divs - nbig\n    big = 'R' * (size + 1) + 'B'\n    small = 'R' * size + 'B'\n    ans = nbig * big + (nsmall - 1) * small + 'R' * size\n    print(ans)\ntc = int(input())\nfor _ in range(tc):\n    solve()", "from sys import stdin, stdout\n\ndef input():\n    return stdin.readline()\n\ndef mi():\n    return map(int, input().split())\n\ndef li():\n    return list(map(int, input().split()))\n\ndef yn(x):\n    print('YES' if x else 'NO')\nfor _ in range(int(input())):\n    (n, r, b) = mi()\n    cnt = r // (b + 1)\n    rem = r % (b + 1)\n    a = ('R' * (cnt + 1) + 'B') * rem + ('R' * cnt + 'B') * (b - rem) + 'R' * cnt\n    print(a)", "for _ in range(int(input())):\n    (n, r, b) = map(int, input().split())\n    x = r // (b + 1)\n    y = r % (b + 1)\n    str1 = ('R' * (x + 1) + 'B') * y\n    str1 += ('R' * x + 'B') * (b + 1 - y)\n    print(str1[:-1])", "import math\n\ndef main():\n    size = int(input())\n    cases = []\n    for i in range(size):\n        cases.append([int(word) for word in input().split(' '[:3])])\n    for case in cases:\n        rate = math.floor(case[1] / (case[2] + 1))\n        k = case[1] % (case[2] + 1)\n        red_wins = 0\n        line = ''\n        for i in range(case[2]):\n            if k > 0:\n                k_win = 'R'\n                k -= 1\n                red_wins += 1\n            else:\n                k_win = ''\n            line = line + k_win + 'R' * rate + 'B'\n            red_wins += rate\n        line = line + (case[1] - red_wins) * 'R'\n        print(line)\nmain()", "for _ in range(int(input())):\n    (n, r, b) = map(int, input().split())\n    rr = r // (b + 1)\n    rrr = r % (b + 1)\n    s = ''\n    for i in range(b):\n        if i < rrr:\n            s += 'R' * (rr + 1) + 'B'\n        else:\n            s += 'R' * rr + 'B'\n    s += 'R' * rr\n    print(s)", "import math\n\ndef solve(x, y, cx, cy):\n    d = y // (x + 1)\n    return ''.join(((d + (i < y % (x + 1))) * cy + cx for i in range(x))) + d * cy\n\ndef main(n, r, b):\n    res = solve(r, b, 'R', 'B') if r < b else solve(b, r, 'B', 'R')\n    assert len(res) == n, (n, r, b)\n    return res\nt = int(input())\nfor _ in range(t):\n    (_n, _r, _b) = map(int, input().split(' '))\n    print(main(_n, _r, _b))", "from math import ceil, floor\nt = int(input())\nfor _case in range(t):\n    (n, r, b) = [int(x) for x in input().split()]\n    c = b + 1\n    first_part = ('R' * ceil(r / c) + 'B') * (r % c)\n    second_part = ('R' * floor(r / c) + 'B') * (c - r % c)\n    ans = first_part + second_part\n    print(ans[:-1])", "def sp(lst, n):\n    return [lst[i::n] for i in range(n)]\nfor _ in range(int(input())):\n    (a, b, c) = list(map(int, input().split()))\n    b1 = (b - 1) // (c + 1)\n    l = ['R'] * b\n    l = list(sp(l, c + 1))\n    print('B'.join([''.join(i) for i in l]))", "import sys\nN = int(sys.stdin.readline().strip())\nfor i in range(N):\n    (n, r, b) = map(int, sys.stdin.readline().strip().split(' '))\n    p = r // (b + 1)\n    q = r % (b + 1)\n    answer = ('R' * (p + 1) + 'B') * q + ('R' * p + 'B') * (b - q)\n    answer = answer + 'R' * (n - len(answer))\n    print(answer)", "import sys, math\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nfor _ in range(inp()):\n    (n, r, b) = inlt()\n    x = r // (b + 1)\n    n1 = r % (b + 1)\n    n2 = b - n1\n    tmp1 = 'R' * (x + 1) + 'B'\n    tmp2 = 'R' * x + 'B'\n    res = tmp1 * n1 + tmp2 * n2\n    res += 'R' * x\n    print(res)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nN = inp()\nfor _ in range(N):\n    answer = ''\n    (n, r, b) = invr()\n    left = r % (b + 1)\n    d = r // (b + 1)\n    for _ in range(left):\n        answer += 'R' * (d + 1)\n        answer += 'B'\n    for _ in range(b - left):\n        answer += 'R' * d\n        answer += 'B'\n    answer += 'R' * d\n    print(answer)", "t = int(input())\notv = [''] * t\nfor T in range(t):\n    (n, r, b) = map(int, input().split())\n    vse = r // (b + 1)\n    pl = r % (b + 1)\n    s = pl * ('R' * (1 + vse) + 'B')\n    s += ('R' * vse + 'B') * (b - pl)\n    s += 'R' * (r - s.count('R'))\n    otv[T] = s\nfor i in range(t):\n    print(otv[i])", "import sys\ninput = lambda : sys.stdin.readline().strip()\nsys.setrecursionlimit(10 ** 9)\nt = int(input())\nfor _ in [0] * t:\n    (n, r, b) = map(int, input().split())\n    a = ['R'] * n\n    p = (n + 1) // (b + 1)\n    q = (n + 1) % (b + 1)\n    j = -1\n    for i in range(q):\n        j += p + 1\n        a[j] = 'B'\n    for i in range(b - q):\n        j += p\n        a[j] = 'B'\n    print(''.join(a))", "for n in [*open(0)][1:]:\n    (n, r, b) = map(int, n.split())\n    b += 1\n    print(''.join(('R' * (r // b + (i < r % b)) + 'B' for i in range(b)))[:-1])", "for _ in range(int(input())):\n    (n, r, b) = map(int, input().split())\n    x = r // (b + 1)\n    y = r % (b + 1)\n    print((('R' * (x + 1) + 'B') * y + ('R' * x + 'B') * (b + 1 - y))[:-1])", "for n in [*open(0)][1:]:\n    (n, r, b) = map(int, n.split())\n    b += 1\n    print((r % b * ('R' * (r // b + 1) + 'B') + (b - r % b) * (r // b * 'R' + 'B'))[:-1])", "for n in [*open(0)][1:]:\n    (n, r, b) = map(int, n.split())\n    b += 1\n    n = r // b * 'R'\n    print((r % b * (n + 'RB') + (b - r % b) * (n + 'B'))[:-1])", "import math\nfor _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    low = b // (c + 1)\n    high = math.ceil(b / (c + 1))\n    temp = b % (c + 1)\n    rem = c + 1 - temp\n    if rem == 0:\n        temp -= 1\n        rem += 1\n    string = ('R' * high + 'B') * temp + ('R' * low + 'B') * (rem - 1) + 'R' * low\n    print(string)", "for _ in range(int(input())):\n    (n, r, b) = map(int, input().split())\n    c = r // (b + 1) * 'R' + 'B'\n    print((('R' + c) * (r % (b + 1)) + c * n)[:n])", "tc = int(input())\nfor _ in range(tc):\n    (n, a, b) = map(int, input().split())\n    b += 1\n    print((('R' * (a // b + 1) + 'B') * (a % b) + ('R' * (a // b) + 'B') * (b - a % b))[:-1])", "for s in [*open(0)][1:]:\n    (n, r, b) = map(int, s.split())\n    b += 1\n    c = r // b * 'R' + 'B'\n    print((r % b * ('R' + c) + n * c)[:n])", "for _ in range(int(input())):\n    (n, r, b) = map(int, input().split())\n    x = r // (b + 1)\n    y = r % (b + 1)\n    print((('R' * (x + 1) + 'B') * y + ('R' * x + 'B') * (b + 1 - y))[:-1])", "def solve():\n    (n, r, b) = map(int, input().split())\n    x = r // (b + 1)\n    y = r % (b + 1)\n    ANS = ''\n    for i in range(b + 1):\n        if i < y:\n            ANS += 'R'\n        ANS += 'R' * x\n        ANS += 'B'\n    print(ANS[:-1])\nt = int(input())\nwhile t > 0:\n    t -= 1\n    solve()", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, a, b) = map(int, input().split())\n    d = a // (b + 1)\n    s = ''\n    a -= d * (b + 1)\n    if a > 0:\n        a -= 1\n        s += 'R' * (d + 1)\n    else:\n        s += 'R' * d\n    for i in range(b):\n        s += 'B'\n        s += 'R' * d\n        if a > 0:\n            s += 'R'\n            a -= 1\n    print(s)", "def inp(*, cf=lambda x: x):\n    return cf(input())\n\ndef inpint():\n    return inp(cf=int)\n\ndef inp_line(*, cf=lambda x: x, s=' '):\n    return list(map(cf, input().split(s)))\n\ndef inpints():\n    return inp_line(cf=int)\n\ndef test_case(n, r, b):\n    rs_in_region = r // (b + 1)\n    rs_remaining = r % (b + 1)\n    ans = ''\n    for i in range(b):\n        if rs_remaining > 0:\n            ans += 'R'\n            rs_remaining -= 1\n        ans += rs_in_region * 'R' + 'B'\n    ans += rs_in_region * 'R'\n    return ans\n\ndef main():\n    T = inpint()\n    for t in range(T):\n        (n, r, b) = inpints()\n        print(test_case(n, r, b))\nmain()", "t = int(input())\nfor _ in range(t):\n    (n, r, b) = map(int, input().split())\n    max_red_segments = r % (b + 1)\n    y = ''\n    for i in range(r // (b + 1)):\n        y += 'R'\n    res = ''\n    for i in range(b + 1):\n        if i > 0:\n            res += 'B'\n        res += y\n        if max_red_segments:\n            res += 'R'\n            max_red_segments -= 1\n    print(res)", "def solve(r, b):\n    from math import ceil, floor\n    d = ceil(r / (b + 1))\n    d2 = floor(r / (b + 1))\n    rem = r % (b + 1)\n    s = ('R' * d + 'B') * rem + ('R' * d2 + 'B') * (b + 1 - rem)\n    return s[:-1]\nfrom sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    (n, r, b) = [int(x) for x in input().split()]\n    print(solve(r, b))", "t = int(input())\nfor i in range(t):\n    (n, r, b) = map(int, input().split())\n    p = r % (b + 1)\n    y = ''\n    for j in range(int(r / (b + 1))):\n        y = y + 'R'\n    ans = ''\n    for i in range(b + 1):\n        if i > 0:\n            ans = ans + 'B'\n        ans = ans + y\n        if p > 0:\n            ans = ans + 'R'\n            p = p - 1\n    print(ans)", "import sys, math\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    x = b // (c + 1)\n    arr = [x] * (c + 1)\n    for i in range(b % (c + 1)):\n        arr[i] = arr[i] + 1\n    s = ''\n    for i in range(c + 1):\n        if i < c:\n            s = s + 'R' * arr[i] + 'B'\n        else:\n            s = s + 'R' * arr[i]\n    print(s)", "for _ in range(int(input())):\n    (n, r, b) = map(int, input().split())\n    t = (r - 1) // (b + 1) + 1\n    k = t * (b + 1) - r\n    res = ('R' * t + 'B') * (b + 1 - k) + ('R' * (t - 1) + 'B') * k\n    print(res[:-1])", "ts = int(input())\nfor t in range(ts):\n    (n, r, b) = input().split(' ')\n    (n, r, b) = (int(n), int(r), int(b))\n    together = r // (b + 1)\n    remains = r % (b + 1)\n    output = ''\n    for i in range(b + 1):\n        output += 'R' * together\n        if remains:\n            output += 'R'\n            remains -= 1\n        if i < b:\n            output += 'B'\n    print(output)", "t = int(input())\nfor i in range(t):\n    x = input().split()\n    r = int(x[1])\n    b = int(x[2])\n    x = ''\n    p = r % (b + 1)\n    q = r // (b + 1)\n    for i in range(p):\n        x += 'R' * (q + 1) + 'B'\n    for i in range(b + 1 - p):\n        x += 'R' * q + 'B'\n    print(x[:-1])", "def solve():\n    (n, r, b) = list(map(int, input().split(' ')))\n    d = r // (b + 1)\n    rem = r % (b + 1)\n    s = ''\n    for i in range(b):\n        if rem > 0:\n            s += 'R'\n            rem -= 1\n        s += 'R' * d + 'B'\n    s += 'R' * d\n    s += 'R' * rem\n    print(s)\nfor t in range(int(input())):\n    solve()", "t = int(input())\nfor i in range(t):\n    (n, r, b) = map(int, input().split())\n    d = r // (b + 1)\n    k = r % (b + 1)\n    s = 'B'.join(['R' * (d + 1)] * k + ['R' * d] * (b + 1 - k))\n    print(s)", "import math\n\nclass Util:\n    ALLOWED_LOCAL_FILES = set(['main.py', 'A.py', 'B.py', 'C.py', 'D.py', 'E.py', 'F.py', 'G.py'])\n    MOD = 1000000000 + 7\n\n    @staticmethod\n    def get_int_list_input():\n        return list(map(int, input().split()))\n\n    @staticmethod\n    def p(yes=False):\n        print('YES') if yes else print('NO')\n\ndef solve():\n    (n, r, b) = Util.get_int_list_input()\n    result = 'R' * math.ceil(r / (b + 1))\n    remaining_r = r - math.ceil(r / (b + 1))\n    result += ('B' + 'R' * math.ceil(remaining_r // b)) * b\n    result = result[:n]\n    result_rs = result.split('B')\n    for i in range(r - result.count('R')):\n        result_rs[i + 1] += 'R'\n    result = 'B'.join(result_rs)\n    print(result)\n\ndef main():\n    t = 1\n    t = int(input())\n    for _ in range(t):\n        solve()\nimport sys\nif sys.argv[0] in Util.ALLOWED_LOCAL_FILES:\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nmain()", "for _ in range(int(input())):\n    (n, r, b) = [*map(int, input().split())]\n    x = (r + b) // (b + 1)\n    a = x * (b + 1) - r\n    print(('R' * x + 'B') * (b - a) + 'R' * x + ('B' + 'R' * (x - 1)) * a)", "for XUY_V_JOPY in range(int(input())):\n    (n, r, b) = map(int, input().split())\n    c = r // (b + 1) * 'R' + 'B'\n    print((('R' + c) * (r % (b + 1)) + c * n)[:n])", "for t in range(int(input())):\n    (n, r, b) = [*map(int, input().split())]\n    (a, d) = (r // (b + 1), r - b - 1)\n    e = d % (b + 1)\n    if e:\n        print((('R' * (a + 1) + 'B') * e)[:-1] + (b + 1 - e) * ('B' + 'R' * a))\n    else:\n        print((('R' * a + 'B') * (b + 1))[:-1])", "t = int(input())\nfor _ in range(t):\n    (n, r, b) = map(int, input().split())\n    s = ''\n    m = r // (b + 1)\n    rest = r % (b + 1)\n    for i in range(rest):\n        s += 'R' * m + 'R' + 'B'\n    for i in range(b + 1 - rest):\n        if i == b - rest:\n            s += 'R' * m\n        else:\n            s += 'R' * m + 'B'\n    print(s)", "t: int = int(input())\nwhile t > 0:\n    s = input()\n    (n, r, b) = [int(x) for x in s.split(' ')]\n    rlen = r // (b + 1)\n    rleft = r % (b + 1)\n    print(rleft * (rlen * 'R' + 'R' + 'B'), end='')\n    r -= rleft * rlen + rleft\n    b -= rleft\n    print('B'.join(['R' * rlen for _ in range(b + 1)]), end='')\n    print()\n    t = t - 1", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, r, b) = map(int, input().split())\n    d = r // (b + 1)\n    c = r % (b + 1)\n    print(('R' * (d + 1) + 'B') * c + ('R' * d + 'B') * (b - c) + 'R' * d)", "for s in [*open(0)][1:]:\n    (n, r, b) = map(int, s.split())\n    b += 1\n    c = r // b * 'R' + 'B'\n    print((r % b * ('R' + c) + n * c)[:n])", "for t in range(int(input())):\n    (n, r, b) = map(int, input().split())\n    b += 1\n    x = r // b\n    y = r % b\n    ans = ''\n    for i in range(y):\n        ans += (x + 1) * 'R' + 'B'\n    for j in range(b - y):\n        ans += x * 'R' + 'B'\n    ans = ans[:-1]\n    print(ans)", "for n in [*open(0)][1:]:\n    (n, r, b) = map(int, n.split())\n    b += 1\n    c = r // b * 'R' + 'B'\n    print((('R' + c) * (r % b) + c * n)[:n])", "import math\nt = int(input())\nfor i in range(t):\n    arr = input().split()\n    (r, b) = (int(arr[1]), int(arr[2]))\n    gap = math.ceil(r / (b + 1))\n    t1 = r - (b + 1) * (gap - 1)\n    t2 = (b + 1) * gap - r\n    if t2 == 0:\n        t1 -= 1\n    print(('R' * gap + 'B') * t1 + ('R' * (gap - 1) + 'B') * (t2 - 1) + 'R' * (r - (gap * t1 + (gap - 1) * max(0, t2 - 1))))", "for i in range(int(input())):\n    (n, r, b) = map(int, input().split())\n    c = r // (b + 1) * 'R' + 'B'\n    print((('R' + c) * (r % (b + 1)) + c * n)[:n])", "for s in [*open(0)][1:]:\n    (n, r, b) = map(int, s.split())\n    b += 1\n    c = r // b * 'R' + 'B'\n    print((r % b * ('R' + c) + n * c)[:n])", "import os\n\ndef calculate(n, a, b):\n    if a > b:\n        A = a\n        A_str = 'R'\n        B = b\n        B_str = 'B'\n    else:\n        A = b\n        A_str = 'B'\n        B = a\n        B_str = 'R'\n    lenth = int(A / (B + 1))\n    rest = int(A % (B + 1))\n    result = ''\n    add_rest = 0\n    for i in range(B + 1):\n        if add_rest < rest:\n            result += (lenth + 1) * A_str\n            add_rest += 1\n        else:\n            result += lenth * A_str\n        result += B_str\n    return result[:-1]\ncases = input()\nfor _ in range(int(cases)):\n    nab = input()\n    (n, a, b) = nab.split()\n    print(calculate(int(n), int(a), int(b)))", "for _ in range(int(input())):\n    (n, r, b) = map(int, input().split())\n    ans = ''\n    am = r // (b + 1)\n    rem = r - (b + 1) * am\n    for i in range(b):\n        ans += 'R' * (am + (1 if rem > 0 else 0))\n        rem -= 1\n        ans += 'B'\n    ans += 'R' * am\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, r, b) = [int(x) for x in input().split()]\n    d = r // (b + 1)\n    m = r % (b + 1)\n    s = ''\n    print(('R' * (d + 1) + 'B') * m + ('R' * d + 'B') * (b - m) + 'R' * d)", "def solve(n, r, b):\n    sol = r // (b + 1)\n    rem = r % (b + 1)\n    temp = ''\n    for i in range(sol):\n        temp += 'R'\n    res = ''\n    for i in range(b + 1):\n        if i > 0:\n            res += 'B'\n        res += temp\n        if rem > 0:\n            res += 'R'\n            rem -= 1\n    return res\nt = int(input())\nfor _ in range(t):\n    (n, r, b) = list(map(int, input().split()))\n    print(solve(n, r, b))", "a = int(input())\nfor i in range(a):\n    (a, b, c) = [int(x) for x in input().split()]\n    h = c + 1\n    cn = b // h\n    x = b % h\n    st = ('B' + 'R' * (cn + 1)) * x + ('B' + 'R' * cn) * (h - x)\n    print(st[1:])", "for _ in range(int(input())):\n    (n, r, b) = list(map(int, input().split()))\n    q = r // (b + 1)\n    rem = r % (b + 1)\n    s = ('R' * (q + 1) + 'B') * rem\n    s += ('R' * q + 'B') * (b - rem)\n    s += 'R' * q\n    print(s)", "for jj in range(int(input())):\n    (n, r, b) = [int(i) for i in input().split()]\n    t = r // (b + 1)\n    rm = r % (b + 1)\n    ans = ('R' * (t + 1) + 'B') * rm + ('R' * t + 'B') * (b + 1 - rm)\n    print(ans[:n])", "for _ in range(int(input())):\n    (total, red, blue) = map(int, input().split())\n    div = red // (blue + 1)\n    rem = red % (blue + 1)\n    ans1 = 'R' * div\n    ans = ''\n    for i in range(blue + 1):\n        if i != 0:\n            ans += 'B'\n        ans += ans1\n        if rem > 0:\n            ans += 'R'\n            rem -= 1\n    print(ans)", "for s in [*open(0)][1:]:\n    (n, r, b) = map(int, s.split())\n    b += 1\n    c = r // b * 'R' + 'B'\n    print((r % b * ('R' + c) + n * c)[:n])", "for _ in range(int(input())):\n    (n, r, b) = map(int, input().split())\n    d = r // (b + 1)\n    k = r % (b + 1)\n    s = 'B'.join(['R' * (d + 1)] * k + ['R' * d] * (b + 1 - k))\n    print(s)", "for s in [*open(0)][1:]:\n    (n, r, b) = map(int, s.split())\n    s = ''\n    for i in range(b + 1):\n        s += 'R' * (r // (b + 1) + (i < r % (b + 1)))\n        s += 'B'\n    print(s[:-1])", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, r, b) = list(map(int, input().split(' ')))\n    if r % (b + 1) == 0:\n        print(('R' * (r // (b + 1)) + 'B') * b + 'R' * (r // (b + 1)))\n    else:\n        print(('R' * (r // (b + 1) + 1) + 'B') * (r % (b + 1)) + ('R' * (r // (b + 1)) + 'B') * (b - r % (b + 1)) + 'R' * (r // (b + 1)))", "t = int(input())\nfor _ in range(t):\n    (n, r, b) = map(int, input().split())\n    remainder = r % (b + 1)\n    quotient = r // (b + 1)\n    Rs = ['R' * (quotient + 1)] * remainder + ['R' * quotient] * (b + 1 - remainder)\n    print('B'.join((R for R in Rs)))", "t = int(input())\nfor i in range(t):\n    match = input()\n    (n, r, b) = match.split()\n    r = int(r)\n    b = int(b)\n    list = []\n    x = r // (b + 1)\n    y = 'R' * x\n    ans = ''\n    z = r % (b + 1)\n    for j in range(1, b + 2):\n        if j <= z:\n            ans += y + 'R' + 'B'\n        else:\n            ans += y + 'B'\n    print(ans[:-1])", "def input_list_ints():\n    input_data = []\n    number_cases = int(input())\n    for i in range(number_cases):\n        temp = input()\n        temp2 = [int(x) for x in temp.split()]\n        input_data.append(temp2)\n    return input_data\n\ndef solution(case):\n    (games, red_wins, blue_wins) = (case[0], case[1], case[2])\n    temp = red_wins // (blue_wins + 1)\n    temp2 = [temp for x in range(blue_wins + 1)]\n    available_red_wins = red_wins % (blue_wins + 1)\n    for x in range(len(temp2)):\n        if available_red_wins == 0:\n            break\n        temp2[x] += 1\n        available_red_wins -= 1\n    string = temp2[0] * 'R'\n    for i in range(1, len(temp2)):\n        string += 'B'\n        string += 'R' * temp2[i]\n    return string\ninput_data = input_list_ints()\nfor case in input_data:\n    print(solution(case))", "def solve():\n    for tc in range(int(input())):\n        (n, r, b) = list(map(int, input().split()))\n        rep = r // (b + 1)\n        s = (['R'] * rep + ['B']) * b\n        cntr = r - rep * b\n        i = 0\n        while cntr > 0:\n            try:\n                if cntr == rep:\n                    s.extend(['R'] * cntr)\n                    break\n                elif s[i + 1] == 'B' and cntr > 1:\n                    s.insert(i, 'R')\n                    cntr -= 1\n                    i += 1\n                i += 1\n            except:\n                if cntr > 0:\n                    s.extend(['R'] * cntr)\n                    break\n                else:\n                    break\n        print(''.join(s))\nsolve()", "a = int(input())\nfor i in range(a):\n    (a, b, c) = [int(x) for x in input().split()]\n    h = c + 1\n    cn = b // h\n    x = b % h\n    st = ('B' + 'R' * (cn + 1)) * x + ('B' + 'R' * cn) * (h - x)\n    print(st[1:])", "import sys\nt = int(sys.stdin.readline().rstrip())\nfor _ in range(t):\n    (n, r, b) = map(int, sys.stdin.readline().split())\n    arr = []\n    col = r // (b + 1)\n    reminder = r % (b + 1)\n    for _ in range(b + 1):\n        arr.append('R' * col)\n        arr.append('B')\n    arr.pop()\n    step = 1\n    for _ in range(reminder):\n        arr.insert(step, 'R')\n        step += 2\n        step += 1\n    print(''.join(arr))", "t = int(input())\nfor i in range(t):\n    (n, r, b) = map(int, input().split())\n    b += 1\n    x = r // b\n    y = r % b\n    ans = ''\n    for j in range(y):\n        ans += (x + 1) * 'R' + 'B'\n    for j in range(b - y):\n        ans += x * 'R' + 'B'\n    ans = ans[:-1]\n    print(ans)", "T = int(input())\nfor _ in range(T):\n    (n, R, B) = map(int, input().split())\n    (div, mod) = divmod(R, B + 1)\n    ans = []\n    for i in range(B * 2 + 1):\n        if i % 2:\n            ans.append('B')\n        elif mod:\n            ans.append('R' * (div + 1))\n            mod -= 1\n        else:\n            ans.append('R' * div)\n    print(''.join(ans))", "t = int(input())\nfor _ in range(0, t):\n    inputs = [int(num) for num in input().split()]\n    n = inputs[0]\n    r = inputs[1]\n    b = inputs[2]\n    s = ''\n    r1 = r // (b + 1)\n    extra = r % (b + 1)\n    s1 = 'R' * r1\n    for i in range(0, b):\n        temp = s1\n        if extra > 0:\n            temp = s1 + 'R'\n            extra -= 1\n        s += temp + 'B'\n    s += s1\n    print(s)", "class Solution:\n\n    def solve(self, n, r, b):\n        x = r // (b + 1)\n        y = r % (b + 1)\n        result = []\n        for i in range(b):\n            if y > 0:\n                result.append('R' * (x + 1))\n                y -= 1\n            else:\n                result.append('R' * x)\n            result.append('B')\n        if y > 0:\n            result.append('R' * (x + 1))\n            y -= 1\n        else:\n            result.append('R' * x)\n        strResult = ''.join(map(str, result))\n        return strResult\nT = int(input())\nwhile T:\n    T -= 1\n    (n, r, b) = map(int, input().split(' '))\n    print(Solution().solve(n, r, b))", "t = int(input())\nfor i in range(t):\n    (n, r, b) = map(int, input().split())\n    p = r % (b + 1)\n    y = ''\n    for j in range(int(r / (b + 1))):\n        y = y + 'R'\n    ans = ''\n    for i in range(b + 1):\n        if i > 0:\n            ans = ans + 'B'\n        ans = ans + y\n        if p > 0:\n            ans = ans + 'R'\n            p = p - 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, r, b) = map(int, input().split())\n    p = r % (b + 1)\n    y = ''\n    for j in range(int(r / (b + 1))):\n        y = y + 'R'\n    ans = ''\n    for i in range(b + 1):\n        if i > 0:\n            ans = ans + 'B'\n        ans = ans + y\n        if p > 0:\n            ans = ans + 'R'\n            p = p - 1\n    print(ans)", "n = int(input())\nfor i in range(0, n):\n    (n, r, b) = list(map(int, input().split(' ')))\n    stri = 'R' * (r // (b + 1))\n    ans = ''\n    num = r % (b + 1)\n    for j in range(0, b):\n        if num > 0:\n            ans += stri + 'R' + 'B'\n            num -= 1\n        else:\n            ans += stri + 'B'\n    ans += stri\n    print(ans)", "def redversusblue(a, b):\n    if a == b:\n        return 'Rb' * a\n    if a > b:\n        lsa = [a // (b + 1)] * (b + 1)\n        for i in range(a % (b + 1)):\n            lsa[i] += 1\n        res = ''\n        for i in range(b):\n            res += 'R' * lsa[i]\n            res += 'B'\n        res += 'R' * lsa[-1]\n        return res\n    if a < b:\n        lsb = [b // (a + 1)] * (a + 1)\n        for i in range(b % (a + 1)):\n            lsb[i] += 1\n        res = ''\n        for i in range(a):\n            res += 'B' * lsb[i]\n            res += 'R'\n        res += 'B' * lsb[-1]\n    return res\nt = int(input())\nfor _ in range(t):\n    (_, a, b) = [int(x) for x in input().split()]\n    print(redversusblue(a, b))", "t = int(input())\nfor i in range(t):\n    (n, r, b) = map(int, input().split())\n    p = r % (b + 1)\n    y = ''\n    for j in range(int(r / (b + 1))):\n        y = y + 'R'\n    ans = ''\n    for i in range(b + 1):\n        if i > 0:\n            ans = ans + 'B'\n        ans = ans + y\n        if p > 0:\n            ans = ans + 'R'\n            p = p - 1\n    print(ans)", "import math\nt = int(input())\nfor _ in range(t):\n    (n, r, b) = map(int, input().split())\n    gaps = b + 1\n    rmax = r / gaps\n    r_i = math.floor(rmax)\n    ans = [r_i for _ in range(gaps)]\n    r = r - r_i * gaps\n    for i in range(r):\n        ans[i] += 1\n    print('B'.join([x * 'R' for x in ans]))", "t = int(input())\nfor i in range(t):\n    (n, r, b) = map(int, input().split(' '))\n    p = r % (b + 1)\n    y = ''\n    y += 'R' * int(r / (b + 1))\n    ans = ''\n    for i in range(b + 1):\n        if i > 0:\n            ans += 'B'\n        ans += y\n        if p > 0:\n            ans += 'R'\n            p -= 1\n    print(ans)"]