["n = int(input())\na = list(map(int, input().split()))\nmod = 998244353\nstack = [(0, 0), (a[0], 1)]\nnow = a[0]\nfor v in a[1:]:\n    to = -now\n    now *= 1 - v\n    now %= mod\n    while stack[-1][0] > v:\n        (r, d) = stack.pop()\n        now -= (r - v) * d\n        now %= mod\n        to += d\n    stack.append((v, to % mod))\nif n % 2 == 1:\n    print(now % mod)\nelse:\n    print((mod - now) % mod)", "n = int(input())\na = list(map(int, input().split()))\nmod = 998244353\nstack = [(0, 0), (a[0], 1)]\nnow = a[0]\nfor v in a[1:]:\n    to = -now\n    now *= 1 - v\n    now %= mod\n    while stack[-1][0] > v:\n        (r, d) = stack.pop()\n        now -= (r - v) * d\n        now %= mod\n        to += d\n    stack.append((v, to % mod))\nprint(now % mod) if n % 2 else print((mod - now) % mod)", "MOD = 998244353\n(N,) = map(int, input().split())\nX = [0] + list(map(int, input().split()))\nY = [0] * (N + 1)\nstack = [(-1, 0)]\nfor i in range(1, N + 1):\n    while stack and stack[-1][0] > X[i]:\n        stack.pop()\n    Y[i] = stack[-1][1]\n    stack.append((X[i], i))\ndp = [0] * (N + 1)\ndp[0] = 1\nS = [[0, 0] for _ in range(N + 1)]\nfor i in range(1, N + 1):\n    x = X[i]\n    k = Y[i]\n    if i % 2:\n        dp[i] = (S[i - 1][0] - S[k][0]) * x\n    else:\n        dp[i] = (S[i - 1][1] - S[k][1]) * x\n    if k > 0:\n        dp[i] += pow(-1, i - k + 1) * dp[k] * (x - 1)\n    else:\n        dp[i] += pow(-1, i - k + 1) * (dp[k] * x)\n    dp[i] %= MOD\n    S[i][0] += S[i - 1][0] + pow(-1, i) * dp[i]\n    S[i][1] += S[i - 1][1] + pow(-1, i + 1) * dp[i]\n    S[i][0] %= MOD\n    S[i][1] %= MOD\nprint(dp[-1] % MOD)"]