["time = eval(input())\ntz = []\nfor i in range(time):\n    td = 0\n    c = 0\n    wei = input()\n    num = input()\n    zero = num.count('0')\n    for j in range(1, 10):\n        t = num.count(str(j))\n        if t:\n            c += 1\n        td = td + j * t + t\n    if num[-1] != '0':\n        td -= 1\n    tz.append(td)\nfor i in tz:\n    print(i)", "def test():\n    n = int(input())\n    s = input()\n    sum = 0\n    for x in s:\n        sum += ord(x) - 48\n        if x != '0':\n            sum += 1\n    if s[-1] != '0':\n        sum -= 1\n    print(sum)\n    return 0\nt = int(input())\nfor i in range(t):\n    test()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = list(map(int, list(input())))\n    res = s[-1]\n    for i in s[:-1]:\n        if i > 0:\n            res += i + 1\n    print(res)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    R = sum(map(int, s)) + (n - s.count('0')) - int(s[-1] != '0')\n    print(R)", "from sys import stdin\nip = stdin.readline\nfor _ in range(int(ip())):\n    n = int(ip())\n    s = [*map(int, ip().strip())]\n    ans = sum(s) + n - s.count(0)\n    if s[-1] == 0:\n        print(ans)\n    else:\n        print(ans - 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    a = [int(i) for i in s if i != '0']\n    if s[n - 1] == '0':\n        print(sum(a) + len(a))\n    else:\n        print(sum(a) + len(a) - 1)", "def func(length, string):\n    op = 0\n    for j in string:\n        if j != '0':\n            op += int(j) + 1\n    if not string.endswith('0'):\n        op -= 1\n    return op\nfor i in range(0, int(input())):\n    print(func(int(input()), input()))", "for i in range(int(input())):\n    x = int(input())\n    y = list(map(int, input()))\n    t = [i for i in y if i]\n    l = len(t) - 1 if y[-1] != 0 else len(t)\n    print(sum(t) + l)", "def func(a):\n    s = 0\n    for i in a:\n        if i != '0':\n            s += int(i) + 1\n    if a[len(a) - 1] != '0':\n        s -= 1\n    return s\nn = int(input())\na = []\nb = []\nfor i in range(n):\n    a.append(int(input()))\n    b.append(input())\nfor i in b:\n    print(func(i))", "def countdown(number: str) -> int:\n    res = 0\n    number = int(number)\n    number = str(number)\n    for i in range(1, 10):\n        res += number.count(str(i)) * i\n        res += number.count(str(i))\n        res -= 1 if number[-1] == str(i) else 0\n    return res\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = str(input())\n    print(countdown(a))", "for _ in range(int(input())):\n    n = int(input())\n    m = input()\n    if m[-1] != '0':\n        p0 = n - m.count('0')\n        v = sum([int(i) for i in m])\n        print(p0 + v - 1)\n    elif m[-1] == '0':\n        if m.count('0') == n:\n            print(0)\n        else:\n            p0 = n - m.count('0')\n            v = sum([int(i) for i in m])\n            print(p0 + v)", "def find():\n    n = int(input())\n    t = input()\n    count = 0\n    for i in t[:-1]:\n        if i == '0':\n            continue\n        count += int(i) + 1\n    return count + int(t[-1])\nte = int(input())\nfor i in range(te):\n    print(find())", "for s in [*open(0)][2::2]:\n    print(sum((int(x) + (x > '0') for x in s[:-2])) + int(s[-2]))", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    R = sum(map(int, s)) + (n - s.count('0')) - int(s[-1] != '0')\n    print(R)", "k = int(input())\nfor i in range(k):\n    n = int(input())\n    s = list(map(int, input()))\n    total = sum(s)\n    a = n - s.count(0)\n    b = s[-1] > 0\n    ans = total + a - b\n    print(ans)", "lan = []\nfor _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input()))\n    if x[-1] == 0:\n        ans = sum(x) + (n - x.count(0))\n        lan.append(ans)\n    else:\n        ans = sum(x) + (n - x.count(0)) - 1\n        lan.append(ans)\nprint(*lan, sep='\\n')", "for _ in range(int(input())):\n    x = int(input())\n    y = list(map(int, input().strip()))\n    print(sum(y) + (x - 1) - y[:-1].count(0))", "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input()))\n    print(sum(s) + n - s.count(0) - (s[-1] != 0))", "for s in [*open(0)][2::2]:\n    print(sum((int(x) + (x > '0') for x in s[:-2])) + int(s[-2]))", "def solve(idx=None):\n    n = int(input())\n    time = input()\n    ans = 0\n    for s in time[:-1]:\n        if s != '0':\n            ans += int(s) + 1\n    ans += int(time[-1])\n    print(ans)\nfor i in range(int(input())):\n    solve(i)", "for s in [*open(0)][2::2]:\n    print(sum((int(x) + (x > '0') for x in s[:-2])) + int(s[-2]))", "for s in [*open(0)][2::2]:\n    print(sum((int(x) + (x > '0') for x in s[:-2])) + int(s[-2]))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, list(input())))\n    print(sum(l) + sum([x != 0 for x in l]) - int(l[-1] > 0))", "def main():\n    for t in range(int(input())):\n        n = int(input())\n        clock = input()\n        total = 0\n        for i in reversed(clock):\n            total += int(i) + (i != '0')\n        print(total - int(clock[-1] != '0'))\nmain()", "import math\nmodulo = 10 ** 9 + 7\nn_tests = int(input())\nfor test in range(n_tests):\n    n = int(input())\n    s = input()\n    sint = [int(x) for x in s]\n    sum = 0\n    nzerodigs = 0\n    for i in sint:\n        sum += i\n        if i != 0:\n            nzerodigs += 1\n    if sum == 0:\n        print(0)\n    elif s[-1] != '0':\n        print(sum + nzerodigs - 1)\n    else:\n        print(sum + nzerodigs)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(input())\n    sum = 0\n    for i in range(n - 1):\n        if a[i] != '0':\n            sum += int(a[i]) + 1\n    if a[n - 1] != '0':\n        sum += int(a[n - 1])\n    print(sum)", "import copy\nimport bisect\n\ndef solve():\n    n = int(input())\n    string = input()\n    sum = int(string[-1])\n    for i in range(len(string) - 2, -1, -1):\n        x = int(string[i])\n        if x != 0:\n            sum += x + 1\n    print(sum)\nt = 1\nt = int(input())\nwhile t:\n    t -= 1\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    z = 0\n    fl = 0\n    lz = 0\n    num = 0\n    for i in s:\n        if i != '0':\n            num += int(i)\n        else:\n            z += 1\n    n -= z\n    if s[-1] == '0':\n        print(num + n)\n    else:\n        print(num + n - 1)", "t = int(input())\nfor i in range(0, t):\n    sum = 0\n    n = int(input())\n    s = input()\n    for j in range(0, n - 1):\n        if s[j] == '0':\n            continue\n        else:\n            sum += int(s[j]) + 1\n    sum += int(s[n - 1])\n    print(sum)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    ans = int(s[-1])\n    for j in s[0:-1]:\n        if j != '0':\n            ans += int(j) + 1\n    print(ans)", "t = int(input())\n\ndef solve():\n    n = int(input())\n    s = input()\n    count = 0\n    for x in s:\n        if x != '0':\n            count += int(x) + 1\n    if s[-1] != '0':\n        print(count - 1)\n    else:\n        print(count)\nfor y in range(t):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input()))\n    print(sum(s) + n - s.count(0) - (s[-1] > 0))", "for _ in range(int(input())):\n    n = int(input())\n    k = list(input())\n    l = [int(x) for x in k]\n    c = n - l.count(0)\n    if l[-1] == 0:\n        pass\n    else:\n        c = c - 1\n    print(sum(l) + c)", "def solve(s, n):\n    ans = 0\n    for i in range(n):\n        x = int(s[i])\n        if i == n - 1:\n            ans += x\n        elif x > 0:\n            ans += x + 1\n    return ans\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    print(solve(s, n))", "def get_input():\n    al = []\n    for c in range(int(input())):\n        input()\n        n = [int(i) for i in input()]\n        al.append(n)\n    return al\n\ndef solve(arr):\n    counter = 0\n    for a in arr[:-1]:\n        if a != 0:\n            counter += a + 1\n    if arr[-1] != 0:\n        counter += arr[-1]\n    return counter\n\ndef main():\n    arr_list = get_input()\n    for n in arr_list:\n        r = solve(n)\n        print(r)\nmain()", "def solve():\n    n = int(input())\n    digits = [int(x) for x in list(input())]\n    result = 0\n    for (i, digit) in enumerate(digits):\n        if digit:\n            result += digit + 1\n    if digits[-1]:\n        result -= 1\n    return result\nt = int(input())\nresult = []\nfor _ in range(t):\n    result.append(solve())\nfor x in result:\n    print(x)", "for _ in range(int(input())):\n    input()\n    s = input()\n    x = s[-1]\n    s = s.replace('0', '')\n    l = len(s)\n    a = 0\n    for i in s:\n        a += int(i)\n    if x == '0':\n        print(a + l)\n    else:\n        print(a + l - 1)", "def solve():\n    n = int(input())\n    s = input()\n    l = s[:]\n    lst = list(map(int, l))\n    answer = lst[-1]\n    lst[-1] = 0\n    for i in lst:\n        if i != 0:\n            answer += i\n            answer += 1\n    print(answer)\nt = int(input())\nwhile t:\n    solve()\n    t -= 1", "for pare in range(int(input())):\n    leN = int(input())\n    ch = input()\n    P = 0\n    if ch[-1] != '0':\n        pere0 = leN - ch.count('0')\n        vichet = sum([int(i) for i in ch])\n        print(pere0 + vichet - 1)\n    elif ch[-1] == '0':\n        if ch.count('0') == leN:\n            print(0)\n        else:\n            pere0 = leN - ch.count('0')\n            vichet = sum([int(i) for i in ch])\n            print(pere0 + vichet)", "def zam(q, t):\n    s = 0\n    for i in range(t):\n        if q[i] != '0':\n            if i != t - 1:\n                s += int(q[i]) + 1\n            else:\n                s += int(q[i])\n    return s\nc = int(input())\nfor i in range(c):\n    t = int(input())\n    q = input()\n    print(zam(q, t))", "t = int(input())\nfor i in range(t):\n    n = input().rstrip()\n    n = int(n)\n    s = input().rstrip()\n    count = 0\n    if s[-1] != '0':\n        count += int(s[-1])\n    for c in s[0:n - 1]:\n        if c != '0':\n            count += int(c) + 1\n    print(count)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    s = list(map(int, input().strip()))\n    su = sum(s) + (n - s.count(0))\n    if s[n - 1] != 0:\n        su -= 1\n    print(su)", "for _ in range(int(input())):\n    n = int(input())\n    inp = input()\n    arr = []\n    for i in inp:\n        if i != '0':\n            arr.append(int(i))\n    print(sum(arr) + len(arr) - 1 * int(inp[-1] != '0'))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = input()\n    cnt = 0\n    dc = 0\n    sc = len(x) - x.count('0')\n    for i in x:\n        if i != '0':\n            dc += int(i)\n    if x[-1] != '0':\n        sc -= 1\n    print(sc + dc)", "def f(s):\n    n = 0\n    n += int(s[-1])\n    for i in s[:-1]:\n        if int(i) != 0:\n            n += int(i) + 1\n    return n\na = []\nfor i in range(int(input())):\n    input()\n    s = input()\n    a.append(f(s))\nfor i in a:\n    print(i)", "for s in [*open(0)][2::2]:\n    print(sum((x > '0' for x in s[:-2])) + sum(map(int, s[:-1])))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    nums = list(input())\n    calcSum = sum(map(int, nums))\n    posNums = 0\n    for i in nums:\n        if i != '0':\n            posNums += 1\n    answer = 0\n    if nums[-1] == '0':\n        answer = posNums + calcSum\n    else:\n        answer = posNums + calcSum - 1\n    print(answer)", "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input()))\n    print(sum(s) + n - s.count(0) - (s[-1] != 0))", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    input()\n    a = input().strip()\n    print(sum(map(int, a)) + len(a) - 1 - a[:-1].count('0'))\nfor i in range(int(input())):\n    solve()", "def sol():\n    n = int(input())\n    dig = input()\n    ans = 0\n    cnt = 0\n    for i in dig:\n        if i != '0':\n            ans += int(i)\n            cnt += 1\n    if dig[-1] != '0':\n        ans += cnt - 1\n    else:\n        ans += cnt\n    print(ans)\nt = int(input())\nwhile t > 0:\n    sol()\n    t -= 1", "def solve(numStr):\n    numList = list(map(int, numStr))\n    s = sum(numList)\n    l = len(numList)\n    lsb = numList[-1]\n    zeros = numList.count(0)\n    notzeros = l - zeros\n    if lsb != 0:\n        notzeros -= 1\n    ans = s + notzeros\n    return ans\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    numStr = input().strip()\n    ans = solve(numStr)\n    print(ans)", "num = int(input())\ns = [0] * num\nfor i in range(num):\n    j = int(input())\n    st = input()\n    if st[-1] != '0':\n        s[i] = -1\n    for k in st[::-1]:\n        if k != '0':\n            s[i] += 1 + int(k)\nprint(*s, sep='\\n')", "def calculate_amount_of_operations(input_string):\n    amount_of_operations = 0\n    for number in input_string:\n        if number != '0':\n            amount_of_operations += int(number) + 1\n    if input_string[-1] != '0':\n        amount_of_operations -= 1\n    return amount_of_operations\ntests_amount = int(input())\nfor _ in range(0, tests_amount):\n    numbers_amount = int(input())\n    input_string = input()\n    print(calculate_amount_of_operations(input_string))", "t = int(input())\nfor _ in range(t):\n    l = int(input())\n    digit = input()\n    c = 0\n    k = l - digit.count('0')\n    for i in range(l):\n        c += int(digit[i])\n    c += k\n    if int(digit[-1]) != 0:\n        c -= 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    clock = list(map(int, list(input())))\n    operations = 0\n    for digit in clock:\n        if digit != 0:\n            operations += digit + 1\n    if clock[-1] != 0:\n        operations -= 1\n    print(operations)", "for s in [*open(0)][2::2]:\n    print(sum((int(x) + (x > '0') for x in s[:-2])) + int(s[-2]))", "for s in [*open(0)][2::2]:\n    print(sum((int(x) + (x > '0') for x in s[:-2])) + int(s[-2]))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    count = 0\n    for i in s[::-1]:\n        if i != '0':\n            count += int(i) + 1\n    print(count if s[-1] == '0' else count - 1)", "nt = int(input())\nfor i in range(nt):\n    n = int(input())\n    c = str(input())\n    c = c[::-1]\n    op = int(c[0])\n    for j in c[1:]:\n        if j != '0':\n            op += 1 + int(j)\n    print(op)", "for nt in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = 0\n    for i in range(n - 1):\n        if s[i] != '0':\n            ans += int(s[i]) + 1\n    ans += int(s[-1])\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    abs = int(s[-1])\n    for i in range(n - 1):\n        if s[i] != '0':\n            abs += int(s[i]) + 1\n    print(abs)", "def solution():\n    for t in range(int(input())):\n        n = int(input())\n        s = input()\n        ans = 0\n        isnzero = n - s.count('0')\n        if s[-1] != '0':\n            isnzero -= 1\n        for e in s:\n            ans += int(e)\n        ans += isnzero\n        print(ans)\n    return\nsolution()", "for _ in range(int(input())):\n    input()\n    a = tuple(map(int, list(input())))\n    if sum(a) == 0:\n        print(0)\n    elif a[-1] == 0:\n        print(sum(a) + len(tuple(filter(lambda x: x != 0, a))))\n    else:\n        print(sum(a) + len(tuple(filter(lambda x: x != 0, a))) - 1)", "def f(n, s):\n    count = 0\n    for i in range(n - 1, -1, -1):\n        if i == n - 1:\n            count = count + int(s[i])\n        elif s[i] != '0':\n            count = count + 1 + int(s[i])\n    return count\nx = int(input())\nm = []\nfor i in range(x):\n    z = int(input())\n    y = input()\n    m.append((z, y))\nfor i in range(x):\n    print(f(m[i][0], m[i][1]))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = list(map(int, input()))\n    print(sum(s) + n - s.count(0) - (s[-1] != 0))", "for s in [*open(0)][2::2]:\n    print(sum((int(x) + (x > '0') for x in s[:-2])) + int(s[-2]))", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    x = 0\n    for i in s:\n        if i != '0':\n            x += 1\n            x += int(i)\n    if x == 0:\n        print(x)\n    elif s[-1] != '0':\n        print(x - 1)\n    else:\n        print(x)", "test = int(input())\nfor i in range(test):\n    n = int(input())\n    s = input()\n    s = [int(i) for i in s]\n    count = sum(s)\n    for i in s:\n        if i != 0:\n            count += 1\n    if s[-1] != 0:\n        print(count - 1)\n    else:\n        print(count)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    assert len(s) == n\n    r = int(s[-1])\n    for c in s[:-1]:\n        if c != '0':\n            r += int(c) + 1\n    print(r)", "t = int(input())\nfor j in range(t):\n    sum = 0\n    count = 0\n    c = input()\n    b = input()\n    a = list(b)\n    for i in a:\n        i = int(i)\n        sum += i\n        if i > 0:\n            count += 1\n    if a[-1] == '0':\n        print(count + sum)\n    else:\n        print(count + sum - 1)", "from itertools import dropwhile\nfor x in range(int(input())):\n    n = int(input())\n    s = list(map(lambda x: 0 if x == '0' else int(x) + 1, dropwhile(lambda x: x == '0', input())))\n    if s:\n        if s[-1] != 0:\n            s[-1] -= 1\n    print(sum(s))", "for s in [*open(0)][2::2]:\n    print(sum((int(x) + (x > '0') for x in s[:-2])) + int(s[-2]))", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    print(sum([int(x) for x in s]) + n - s.count('0') - int(not s.endswith('0')))", "for s in [*open(0)][2::2]:\n    print(sum((int(x) + (x > '0') for x in s[:-2])) + int(s[-2]))", "for _ in range(int(input())):\n    a = input()\n    s = list(map(int, input()))\n    ans = s[-1]\n    for x in s[:-1]:\n        if x != 0:\n            ans += x + 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, s) = (int(input()), input())\n    res = sum((int(d) + (1 if d != '0' and i != n - 1 else 0) for (i, d) in enumerate(s)))\n    print(res)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, list(input())))\n    print(sum(l) + sum([x != 0 for x in l]) - int(l[-1] > 0))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    c = int(s[-1])\n    l = [int(s[i]) for i in range(n - 1) if s[i] != '0']\n    c += sum(l) + len(l)\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    ans = 0\n    for i in a:\n        x = int(i)\n        if x != 0:\n            ans += x + 1\n    if int(a[-1]) != 0:\n        ans -= 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    print(sum(map(int, list(s))) + n - 1 - list(s[:-1]).count('0'))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = sum((int(x) for x in s)) + n - s.count('0')\n    if s[-1] != '0':\n        print(ans - 1)\n    else:\n        print(ans)", "import sys\nimport math\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    line = [int(x) for x in sys.stdin.readline().strip()]\n    cnt = sum(line)\n    for x in line[:-1]:\n        if x != 0:\n            cnt += 1\n    print(cnt)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    abs = int(s[-1])\n    for i in range(n - 1):\n        if s[i] != '0':\n            abs += int(s[i]) + 1\n    print(abs)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input()\n    s = int(a[n - 1])\n    a = a[:n - 1]\n    for j in range(n - 1):\n        if a[j] != '0':\n            s = s + int(a[j]) + 1\n    print(s)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    l = list(map(int, s))\n    c = 0\n    for i in l:\n        if i != 0:\n            c += 1\n    if l[-1] == 0:\n        print(sum(l) + c)\n    else:\n        print(sum(l) + c - 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    t = 0\n    for i in s[:n - 1]:\n        if i != '0':\n            t += int(i) + 1\n    t += int(s[-1])\n    print(t)", "def estimate_changes(s, n):\n    count = 0\n    for (i, ch) in enumerate(s, 1):\n        digit = int(ch)\n        if digit > 0:\n            count += digit\n            if i < n:\n                count += 1\n    return count\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    print(estimate_changes(s, n))", "for __ in range(int(input())):\n    N = int(input())\n    S = list(input())\n    ops = -1 if S[-1] != '0' else 0\n    for x in S[::-1]:\n        if x != '0':\n            ops += 1 + int(x)\n    print(ops)", "for ighj in range(int(input())):\n    n = int(input())\n    s = input()\n    x = 0\n    x += int(s[-1])\n    for i in range(n - 2, -1, -1):\n        if s[i] != '0':\n            x += int(s[i]) + 1\n    print(x)", "for t in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = 0\n    for i in s[:-1]:\n        if i != '0':\n            ans = ans + 1 + int(i)\n    ans = ans + int(s[-1])\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    c = 0\n    for i in s:\n        i = int(i)\n        if i > 0:\n            c += i + 1\n    if s[-1] != '0':\n        c -= 1\n    print(c)", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    s = [int(a) for a in input()]\n    op = sum(s)\n    for i in range(n - 1):\n        if s[i] != 0:\n            op += 1\n    print(op)", "for i in range(int(input())):\n    n = int(input())\n    x = input()\n    t = [char for char in x]\n    count = int(t[-1])\n    for j in range(n - 2, -1, -1):\n        if t[j] != '0':\n            count += int(t[j]) + 1\n    print(count)", "n = int(input())\nfor i in range(n):\n    count = 0\n    len_num = int(input())\n    num = str(input())\n    for i in range(len_num):\n        if num[i] != '0':\n            count += int(num[i]) + 1\n    if num[len_num - 1] != '0' and count > 0:\n        count -= 1\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    z = 0\n    num = 0\n    for i in s:\n        if i != '0':\n            num += int(i)\n        else:\n            z += 1\n    n -= z\n    if s[-1] == '0':\n        print(num + n)\n    else:\n        print(num + n - 1)", "t = int(input())\nwhile t:\n    t -= 1\n    dl = int(input())\n    num = input()\n    step = 0\n    nz = dl - num.count('0')\n    for c in num:\n        step += int(c)\n    step += nz\n    if num[-1] != '0' and step > 0:\n        step -= 1\n    print(step)", "def solve(number):\n    number = str(number)\n    operations = 0\n    for (i, char) in enumerate(number):\n        decimal = int(char)\n        if decimal != 0:\n            operations += decimal\n            if i != len(number) - 1:\n                operations += 1\n    return operations\ntest_num = int(input())\noutput = list()\nfor i in range(test_num):\n    decimal_num = int(input())\n    number = int(input())\n    output.append(solve(number))\nfor i in output:\n    print(i)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ct = 0\n    if s[-1] != '0':\n        ct += int(s[-1])\n    for i in range(n - 1):\n        if s[i] != '0':\n            ct += int(s[i]) + 1\n    print(ct)", "tests = int(input())\nfor _ in range(tests):\n    digs = int(input())\n    num = input()\n    sum = 0\n    pos = 0\n    num = num[::-1]\n    if num[0] != '0':\n        sum += int(num[0])\n    for i in range(1, digs):\n        if num[i] != '0':\n            sum += int(num[i]) + 1\n    print(sum)", "t = int(input())\nwhile t:\n    n = int(input())\n    s = input()\n    res = int(s[n - 1])\n    for i in range(n - 2, -1, -1):\n        res += int(s[i])\n        if s[i] != '0':\n            res += 1\n    print(res)\n    t -= 1"]