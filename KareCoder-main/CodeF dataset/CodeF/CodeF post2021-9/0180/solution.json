["for _ in range(int(input())):\n    C = 0\n    input().split()\n    a = str(input())\n    b = str(input())\n    a = a + b[::-1]\n    for i in range(len(a) - 1):\n        if a[i] == a[i + 1]:\n            C += 1\n    print('YNEOS'[C > 1::2])", "from math import *\nfor z in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = input()\n    s += input()[::-1]\n    if s.count('RR') + s.count('BB') > 1 or s.count('RRR') > 0 or s.count('BBB') > 0:\n        print('NO')\n    else:\n        print('YES')", "t = int(input().strip())\n\ndef PyIsStupid():\n    (n, m) = map(int, input().strip().split())\n    a = input()\n    b = input()\n    b = b[::-1]\n    a += b\n    c = 0\n    for i in range(1, len(a)):\n        if a[i] == a[i - 1]:\n            c += 1\n    if c <= 1:\n        print('YES')\n    else:\n        print('NO')\nfor _ in range(t):\n    PyIsStupid()", "import sys\ninput = iter(sys.stdin.read().splitlines()).__next__\nTC = int(input())\nfor tc in range(TC):\n    (N, M) = map(int, input().split())\n    S = input().strip()\n    T = input().strip()\n    ST = S + T[::-1]\n    res = [i for i in range(1, len(ST)) if ST[i] == ST[i - 1]]\n    print('YES' if len(res) <= 1 else 'NO')", "for _ in range(int(input())):\n    (A, B) = map(int, input().split())\n    A = input()\n    B = input()\n    C = A + B[::-1]\n    last = None\n    ans = 0\n    for c in C:\n        if c == last:\n            ans += 1\n        last = c\n    if ans <= 1:\n        print('YES')\n    else:\n        print('NO')", "import sys\n\ndef solution():\n    input()\n    first = input()\n    second = input()\n    full = first + second[::-1]\n    cnt = 0\n    for idx in range(len(full) - 1):\n        if full[idx] == full[idx + 1]:\n            cnt += 1\n    if cnt > 1:\n        print('NO')\n    else:\n        print('YES')\nt = int(input())\nfor _ in range(t):\n    solution()", "range_ = int(input())\nfor i in range(range_):\n    (k, l) = input().split()\n    first = input()\n    second = input()[::-1]\n    full = first + second\n    cnt = -1\n    prev = full[0]\n    for el in full:\n        if el == prev:\n            cnt += 1\n        prev = el\n    if cnt < 2:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\n\ndef sol():\n    num = list(map(int, input().split()))\n    b1 = input()\n    b2 = input()\n    total = b1 + b2[::-1]\n    a = []\n    prev = total[0]\n    c = 1\n    for i in range(1, len(total)):\n        if total[i] == prev:\n            c += 1\n        else:\n            prev = total[i]\n            if c > 1:\n                a.append(c)\n            c = 1\n    if c > 1:\n        a.append(c)\n    if a == [2] or a == []:\n        print('YES')\n    else:\n        print('NO')\nfor i in range(t):\n    sol()", "def testcase():\n    (n, m) = map(int, input().split())\n    a = list(input())\n    b = list(input())\n    c = a + list(reversed(b))\n    same_cnt = 0\n    for i in range(n + m - 1):\n        if c[i] == c[i + 1]:\n            same_cnt += 1\n            if same_cnt > 1:\n                print('NO')\n                return\n    print('YES')\nt = int(input())\nfor _ in range(t):\n    testcase()", "import os\nimport math\nimport collections\nimport bisect\nimport functools\nimport itertools\nimport heapq\n\ndef solve(a, b, m, n):\n    (v1, v2) = (0, 0)\n    for i in range(m - 1):\n        if a[i] == a[i + 1]:\n            v1 += 1\n    for i in range(n - 1):\n        if b[i] == b[i + 1]:\n            v2 += 1\n    if v1 + v2 > 1:\n        return 'NO'\n    if v1 + v2 == 0:\n        return 'YES'\n    return 'YES' if a[-1] != b[-1] else 'NO'\nt = int(input())\nfor _ in range(t):\n    (m, n) = map(int, input().split())\n    a = [c for c in input()]\n    b = [c for c in input()]\n    print(solve(a, b, m, n))", "t = int(input())\nfor i in range(t):\n    n = input()\n    s = input()\n    k = input()\n    s += k[::-1]\n    while 'RR' in s or 'BB' in s:\n        s = s.replace('RR', 'R R')\n        s = s.replace('BB', 'B B')\n    if s.count(' ') <= 1:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (l1, l2) = map(int, input().split())\n    a1 = input()\n    a2 = input()\n    a = a1 + a2[::-1]\n    cou = 0\n    for i in range(1, l1 + l2):\n        if a[i] == a[i - 1]:\n            if cou == 1:\n                cou += 1\n                print('NO')\n                break\n            else:\n                cou += 1\n    else:\n        print('YES')", "for wwq in range(int(input())):\n    (a, b) = map(int, input().split())\n    x = input()\n    y = input()[::-1]\n    c = x + y\n    c = list(c)\n    t = len(c) - 1\n    z = 'YES'\n    asd = 0\n    for j in range(t):\n        if c[j] == c[j + 1]:\n            asd += 1\n    if asd > 1:\n        z = 'NO'\n    if a == 1 and b == 1:\n        z = 'YES'\n    print(z)", "t = int(input())\nfor _ in range(t):\n    x = input()\n    s = input()\n    t = input()\n    s += t[::-1]\n    x = 0\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            x += 1\n    if x < 2:\n        print('YES')\n    else:\n        print('NO')", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = input()\n    t = input()\n    st = s + t[::-1]\n    c = 0\n    for i in range(n + m - 1):\n        if st[i] == st[i + 1]:\n            c += 1\n    if c < 2:\n        print('YES')\n    else:\n        print('NO')", "def getcnt(s):\n    prev = '.'\n    cnt = 0\n    for i in s:\n        if i == prev:\n            cnt += 1\n        prev = i\n    return cnt\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s1 = input()\n    s2 = input()\n    if s1[-1] == s2[-1]:\n        if getcnt(s1) == 0 and getcnt(s2) == 0:\n            print('YES')\n        else:\n            print('NO')\n        continue\n    first = getcnt(s1)\n    second = getcnt(s2)\n    if first > 1 or second > 1:\n        print('NO')\n        continue\n    if first == 1 and second == 1:\n        print('NO')\n        continue\n    print('YES')", "import sys\nimport math\nimport itertools\n\ndef solution():\n    (n, m) = map(int, input().split())\n    s = input()\n    t = input()\n    k = 0\n    for i in range(1, n):\n        if s[i] == s[i - 1]:\n            k += 1\n    if s[-1] == t[-1]:\n        k += 1\n    for i in range(1, m):\n        if t[i] == t[i - 1]:\n            k += 1\n    if k <= 1:\n        print('YES')\n        return\n    print('NO')\n    return\nt = int(input())\nfor i in range(t):\n    solution()", "def fun(n, m, s, t):\n    u = s + t[::-1]\n    repetitions = 0\n    for i in range(n + m - 1):\n        if u[i] == u[i + 1]:\n            repetitions += 1\n            if repetitions > 1:\n                return 'NO'\n    return 'YES'\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = input()\n    t = input()\n    print(fun(n, m, s, t))", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = input()\n    b = input()\n    c = a + b[::-1]\n    j = 1\n    pre = c[0]\n    while j < len(c) and pre != c[j]:\n        pre = c[j]\n        j += 1\n    if j < len(c):\n        if c[j] == 'R':\n            pre = 'B'\n        else:\n            pre = 'R'\n        while j < len(c) and pre != c[j]:\n            pre = c[j]\n            j += 1\n    if j != len(c):\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (t1, t2) = map(int, input().split())\n    s1 = input()\n    s2 = input()\n    p1 = ''\n    flag = False\n    for i in range(t1):\n        if p1 == s1[i]:\n            if flag == True:\n                print('NO')\n                break\n            else:\n                flag = True\n        p1 = s1[i]\n    else:\n        p2 = ''\n        for i in range(t2):\n            if p2 == s2[i]:\n                if flag == True:\n                    print('NO')\n                    break\n                else:\n                    flag = True\n            p2 = s2[i]\n        else:\n            if flag == True and s1[-1] == s2[-1]:\n                print('NO')\n            else:\n                print('YES')", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    t1 = list(input())\n    t2 = list(input())\n    t2.reverse()\n    for j in t2:\n        t1.append(j)\n    cnt = 0\n    tp1 = t1[0]\n    for j in range(1, a + b):\n        if t1[j] == tp1:\n            cnt += 1\n        tp1 = t1[j]\n    if cnt <= 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    a = list(map(int, input().split()))\n    b = input()\n    c = input()\n    q = c[::-1]\n    d = b + q\n    ct = 0\n    for x in range(a[0] + a[1] - 1):\n        if d[x] == d[x + 1]:\n            ct += 1\n        elif ct > 1:\n            print('NO')\n            break\n    else:\n        if ct > 1:\n            print('NO')\n        else:\n            print('YES')", "iter = int(input())\nfor _ in range(iter):\n    (_, _) = list(map(int, input().split(' ')))\n    s = input()\n    s1 = input()\n    f = -1\n    f1 = -1\n    flag2 = 0\n    for i in range(len(s) - 1):\n        if s[i] == s[i + 1]:\n            if f == -1:\n                f = i\n            else:\n                flag2 = 1\n    for i in range(len(s1) - 1):\n        if s1[i] == s1[i + 1]:\n            if f1 == -1:\n                f1 = i\n            else:\n                flag2 = 1\n    if flag2 == 1:\n        print('NO')\n    elif f == -1 and f1 == -1:\n        print('YES')\n    elif f == -1 or f1 == -1:\n        flag = 0\n        if f != -1:\n            while len(s) > f + 1:\n                if s[-1] == s1[-1]:\n                    flag = 1\n                    break\n                s1 += s[-1]\n                s = s[:-1]\n        else:\n            while len(s1) > f1 + 1:\n                if s[-1] == s1[-1]:\n                    flag = 1\n                    break\n                s += s1[-1]\n                s1 = s1[:-1]\n        if flag == 1:\n            print('NO')\n        else:\n            print('YES')\n    else:\n        print('NO')", "def check(left, right):\n    total_same = 0\n    for i in range(1, len(left)):\n        if left[i] == left[i - 1]:\n            total_same += 1\n    for i in range(1, len(right)):\n        if right[i] == right[i - 1]:\n            total_same += 1\n    if total_same == 0:\n        return True\n    if total_same > 1 or left[-1] == right[-1]:\n        return False\n    return True\nk = int(input())\nres = []\nwhile k > 0:\n    _ = input()\n    left = input()\n    right = input()\n    if check(left, right):\n        res.append('YES')\n    else:\n        res.append('NO')\n    k -= 1\nfor x in res:\n    print(x)", "def main():\n    t = int(input())\n    result = []\n    for _ in range(t):\n        (n, m) = list(map(int, input().split()))\n        s1 = input()\n        s1_count = 0\n        s2 = input()\n        s2_count = 0\n        for i in range(1, n):\n            if s1[i] == s1[i - 1]:\n                s1_count += 1\n        for j in range(1, m):\n            if s2[j] == s2[j - 1]:\n                s2_count += 1\n        if s1_count > 1 or s2_count > 1 or (s1_count == 1 and s2_count == 1):\n            result.append('NO')\n        elif s1[-1] == s2[-1] and (s1_count > 0 or s2_count > 0):\n            result.append('NO')\n        else:\n            result.append('YES')\n    print(*result, sep='\\n')\nmain()", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = input()\n    b = input()\n    f = True\n    one = 0\n    for i in range(n - 1, 0, -1):\n        if a[i] == a[i - 1]:\n            if one > 0 or a[-1] == b[-1]:\n                f = False\n                break\n            else:\n                one = 1\n    if not f:\n        print('NO')\n    else:\n        for i in range(m - 1, 0, -1):\n            if b[i] == b[i - 1]:\n                if one > 0 or a[-1] == b[-1]:\n                    f = False\n                    break\n                else:\n                    one += 1\n        if f:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nA = []\nB = []\nfor i in range(t):\n    zzz = [int(p) for p in input().split()]\n    a = str(input())\n    b = str(input())\n    A.append(a)\n    B.append(b)\nfor i in range(t):\n    bruh = A[i] + B[i][::-1]\n    cek = 1\n    lah = True\n    count = 0\n    for j in range(1, len(bruh)):\n        if bruh[j - 1] == bruh[j]:\n            cek += 1\n        else:\n            cek = 1\n        if cek == 2:\n            count += 1\n        if cek > 2:\n            lah = False\n            break\n        if count == 2:\n            lah = False\n            break\n    if lah:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n1, n2) = map(int, input().split())\n    t1 = input()\n    t2 = input()\n    tower = t1 + t2[::-1]\n    prev = tower[0]\n    bad = 0\n    for i in range(1, n1 + n2):\n        if tower[i] == prev:\n            bad += 1\n        prev = tower[i]\n    if bad < 2:\n        print('YES')\n    else:\n        print('NO')", "def slove():\n    for _ in range(int(input())):\n        (m, n) = map(int, input().split())\n        s_1 = input()\n        s_2 = input()\n        s = s_1 + s_2[::-1]\n        ans_1 = ' '\n        ans_2 = ' '\n        i = -1\n        j = n + m\n        while j - i > 1:\n            if s[i + 1] != ans_1[-1]:\n                ans_1 += s[i + 1]\n                i += 1\n            elif s[j - 1] != ans_2[-1]:\n                ans_2 += s[j - 1]\n                j -= 1\n            else:\n                break\n        if j - i > 1:\n            print('NO')\n        else:\n            print('YES')\nslove()", "import sys, math, cmath, time\nfrom bisect import bisect_left\nstart_time = time.time()\n\ndef solve():\n    (n, m) = map(int, input().split())\n    s = input().strip()\n    s1 = input().strip()\n    c = 0\n    for i in range(n - 1):\n        if s[i + 1] == s[i]:\n            c += 1\n    if c >= 2:\n        print('NO')\n        return\n    c1 = 0\n    for i in range(m - 1):\n        if s1[i + 1] == s1[i]:\n            c1 += 1\n    if c1 >= 2:\n        print('NO')\n        return\n    if c == 1 and c1 == 1:\n        print('NO')\n        return\n    if c == 0 and c1 == 0:\n        print('YES')\n        return\n    if s1[-1] != s[-1]:\n        print('YES')\n    else:\n        print('NO')\n\ndef main():\n    testcases = 1\n    testcases = inp()\n    for each_testcase in range(testcases):\n        solve()\n\ndef inp():\n    return int(input())\n\ndef inps():\n    return input().split()\nONLINE_JUDGE = __debug__\nif ONLINE_JUDGE:\n    input = sys.stdin.readline\nmain()", "def solveA():\n    (n, m) = map(int, input().split())\n    s = input()\n    t = input()\n    combined = s + t[::-1]\n    sameCount = 0\n    for i in range(len(combined) - 1):\n        if combined[i] == combined[i + 1]:\n            sameCount += 1\n    if sameCount > 1:\n        print('NO')\n    else:\n        print('YES')\nt = int(input())\nfor tc in range(t):\n    solveA()", "from collections import Counter\nimport sys\ninput = lambda : sys.stdin.readline().rstrip()\nT = int(input())\nres = []\nfor _ in range(T):\n    (N, M) = map(int, input().split())\n    a = list(input().rstrip())\n    b = list(input().rstrip())\n    b.reverse()\n    a = a + b\n    cnt = 0\n    for i in range(N + M - 1):\n        if a[i] == a[i + 1]:\n            cnt += 1\n    if cnt > 1:\n        res.append('NO')\n    else:\n        res.append('YES')\nprint('\\n'.join(res))", "def consistent(v):\n    p = 'Z'\n    for x in range(len(v)):\n        if v[x] == p:\n            return False\n        else:\n            p = v[x]\n    return True\nt = int(input())\nfor _ in range(t):\n    (n, m) = [int(x) for x in input().split()]\n    s1 = input()\n    s2 = input()[::-1]\n    f = s1 + s2\n    p = 'Z'\n    for x in range(len(f)):\n        if f[x] == p:\n            s1 = f[0:x]\n            s2 = f[x:]\n            break\n        else:\n            p = f[x]\n    if len(s1) >= 1 and len(s1) >= 1 and consistent(s1) and consistent(s2):\n        print('YES')\n    else:\n        print('NO')", "def solve():\n    (n, m) = map(int, input().split())\n    a = input()\n    b = input()\n    a = a[::-1]\n    b = b[::-1]\n    h = a\n    k = b\n    if 'BB' in a or 'RR' in a:\n        w = True\n        for i in range(n):\n            k = a[0] + k\n            a = a[1:]\n            if 'BB' in a or 'RR' in a or 'BB' in k or ('RR' in k):\n                continue\n            else:\n                w = False\n                break\n        if w:\n            print('NO')\n            return\n    if 'BB' in b or 'RR' in b:\n        w = True\n        for i in range(m):\n            h = b[0] + h\n            b = b[1:]\n            if 'BB' in b or 'RR' in b or 'BB' in h or ('RR' in h):\n                continue\n            else:\n                w = False\n                break\n        if w:\n            print('NO')\n            return\n    print('YES')\nfor _ in range(int(input())):\n    solve()", "t = int(input())\nfor i in range(t):\n    l = [int(x) for x in input().split()]\n    s1 = input()\n    s2 = input()\n    while 'BB' in s1 or 'RR' in s1:\n        ch = s1[-1]\n        if ch != s2[-1]:\n            s2 += ch\n            s1 = s1[0:len(s1) - 1]\n        else:\n            break\n    while 'BB' in s2 or 'RR' in s2:\n        ch = s2[-1]\n        if ch != s1[-1]:\n            s1 += ch\n            s2 = s2[0:len(s2) - 1]\n        else:\n            break\n    if 'BB' in s1 or 'RR' in s1 or 'BB' in s2 or ('RR' in s2):\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    (n1, n2) = list(map(int, input().split()))\n    s1 = input()\n    t1 = list(s1[:len(s1)])\n    s2 = input()\n    t2 = list(s2[:len(s2)])\n    t2.reverse()\n    l = t1 + t2\n    count = 0\n    for i in range(n1 + n2 - 1):\n        if l[i] != l[i + 1]:\n            continue\n        else:\n            count += 1\n        if count > 1:\n            print('NO')\n            break\n    if count <= 1:\n        print('YES')", "for j in range(int(input())):\n    (a, b) = map(int, input().split())\n    s1 = input()\n    s2 = input()\n    sf = s1 + s2[::-1]\n    initial_a = sf[0]\n    ct = 0\n    for i in range(1, a + b):\n        if sf[i] == initial_a:\n            ct += 1\n        initial_a = sf[i]\n    if ct <= 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n1, n2) = list(map(int, input().split(' ')))\n    tower = [*input()] + list(reversed([*input()]))\n    count = 0\n    for i in range(1, n1 + n2):\n        if tower[i] == tower[i - 1]:\n            count += 1\n    if count > 1:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nl = []\nfor j in range(t):\n    (n, m) = map(int, input().split())\n    r1 = input()\n    r2 = input()\n    l.append([r1, r2])\n\ndef check(s):\n    c = 0\n    samp = s[0]\n    flag = 1\n    for i in s:\n        if c % 2 == 0:\n            if i != samp:\n                flag = 0\n                break\n        elif i == samp:\n            flag = 0\n            break\n        c += 1\n    if flag:\n        return True\n    return False\nfor ty in l:\n    s1 = ty[0]\n    s2 = ty[1]\n    appli = 0\n    if check(s1) and check(s2):\n        print('YES')\n        appli = 1\n    a = ''\n    b = ''\n    if check(s1) == False:\n        a = s1\n        b = s2\n    else:\n        a = s2\n        b = s1\n    f = 0\n    if appli == 0:\n        while len(a) > 1:\n            b += a[-1]\n            a = a[:len(a) - 1]\n            if check(a) and check(b):\n                f = 1\n                print('YES')\n                break\n        if f == 0:\n            print('NO')", "loops = int(input())\nfor z in range(loops):\n    a = input().split(' ')\n    tower1 = input()\n    tower2 = input()\n    sexpoints1 = 0\n    sexpoints2 = 0\n    for i in range(len(tower1) - 1):\n        if tower1[i] == tower1[i + 1]:\n            sexpoints1 += 1\n    for i in range(len(tower2) - 1):\n        if tower2[i] == tower2[i + 1]:\n            sexpoints2 += 1\n    if sexpoints1 + sexpoints2 > 1:\n        print('NO')\n    elif sexpoints1 + sexpoints2 == 0:\n        print('YES')\n    elif tower1[-1] == tower2[-1]:\n        print('NO')\n    else:\n        print('YES')", "def take():\n    (n, m) = map(int, input().split())\n    first = input()\n    second = input()\n    res = first + second[::-1]\n    counter = 1\n    cur_color = res[0]\n    pairs = 0\n    for i in range(1, n + m):\n        if res[i] == cur_color:\n            pairs += 1\n        cur_color = res[i]\n    if pairs > 1:\n        print('NO')\n    else:\n        print('YES')\nn = int(input())\nfor i in range(n):\n    take()", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    (s1, s2) = (input(), input())\n    s1 = s1 + s2[::-1]\n    x = s1.count('BB') + s1.count('RR')\n    x += s1.count('BBB') + s1.count('RRR')\n    if x == 0 or x == 1:\n        print('YES')\n    else:\n        print('NO')", "import sys\n\ndef read(func=int):\n    return func(sys.stdin.readline().strip())\n\ndef read_array(func=int):\n    return list(map(func, read(str).split()))\nk = read()\nfor _ in range(k):\n    (n, m) = read_array()\n    s = read(str)\n    t = read(str)\n    st = s + t[::-1]\n    ds = 0\n    for i in range(1, n + m):\n        if st[i] == st[i - 1]:\n            ds += 1\n    if ds < 2:\n        print('YES')\n    else:\n        print('NO')", "def solve():\n    t = 1\n    t = int(input())\n    while t:\n        t -= 1\n        (n, m) = [int(x) for x in input().split()]\n        a = input()\n        b = input()\n        nonSame = 0\n        for i in range(n - 1):\n            if a[i] == a[i + 1]:\n                nonSame += 1\n        for i in range(m - 1):\n            if b[i] == b[i + 1]:\n                nonSame += 1\n        print('YES' if nonSame == 0 or (nonSame == 1 and a[n - 1] != b[m - 1]) else 'NO')\nsolve()", "n = int(input())\nfor i in range(n):\n    (n0, m0) = map(int, input().split())\n    t1 = input()\n    t2 = input()\n    count = 0\n    for i in range(n0 - 1):\n        if t1[i] == t1[i + 1]:\n            count += 1\n        if count > 1:\n            break\n    if t2[m0 - 1] == t1[n0 - 1]:\n        count += 1\n    for i in range(m0 - 1):\n        if count > 1:\n            break\n        if t2[i] == t2[i + 1]:\n            count += 1\n    if count <= 1:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nfor i in range(n):\n    (p, q) = map(int, input().split())\n    s1 = input()\n    s2 = input()\n    w = 0\n    e = 0\n    for i in range(p - 1):\n        if s1[i] == s1[i + 1]:\n            w = w + 1\n    for i in range(q - 1):\n        if s2[i] == s2[i + 1]:\n            e = e + 1\n    if e > 1 or w > 1:\n        print('NO')\n    elif w == 1 and e == 1:\n        print('NO')\n    elif s1[p - 1] == s2[q - 1] and (w == 1 or e == 1):\n        print('NO')\n    else:\n        print('YES')", "import sys\ninput = sys.stdin.readline\n\ndef sol(s1, s2, m, n):\n    i = 1\n    for i in range(1, m):\n        if s1[i] == s1[i - 1]:\n            break\n        i += 1\n    j = 1\n    for j in range(1, n):\n        if s2[j] == s2[j - 1]:\n            break\n        j += 1\n    if i != m and j != n:\n        return 'NO'\n    if i != m:\n        s1 += s2[-1]\n        for k in range(m - 1, i - 1, -1):\n            if s1[k] == s1[k + 1]:\n                return 'NO'\n    elif j != n:\n        s2 += s1[-1]\n        for k in range(n - 1, j - 1, -1):\n            if s2[k] == s2[k + 1]:\n                return 'NO'\n    return 'YES'\nt = int(input())\nfor case in range(t):\n    (m, n) = list(map(int, input().split()))\n    s1 = input()[:-1]\n    s2 = input()[:-1]\n    print(sol(s1, s2, m, n))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    l = input()\n    m = input()\n    if a > 2 and b > 2:\n        c = m + l[::-1]\n        e = l + m[::-1]\n        d = f = 0\n        for i in range(a + b - 1):\n            if c[i] == c[i + 1]:\n                d += 1\n            if e[i] == e[i + 1]:\n                f += 1\n    elif b < 3:\n        e = l + m[::-1]\n        d = f = 0\n        for i in range(a + b - 1):\n            if e[i] == e[i + 1]:\n                f += 1\n                d = f\n    elif a < 3:\n        c = m + l[::-1]\n        d = f = 0\n        for i in range(a + b - 1):\n            if c[i] == c[i + 1]:\n                d += 1\n                f = d\n    if d <= 1 or f <= 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = input()\n    b = input()\n    c1 = 0\n    c2 = 0\n    for i in range(n - 1):\n        if a[i] == a[i + 1]:\n            c1 += 1\n    for i in range(m - 1):\n        if b[i] == b[i + 1]:\n            c2 += 1\n    if c1 == 0 and c2 == 0:\n        print('YES')\n    elif c1 == 1 and c2 == 0:\n        if a[-1] != b[-1]:\n            print('YES')\n        else:\n            print('NO')\n    elif c1 == 0 and c2 == 1:\n        if a[-1] != b[-1]:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "for i in range(int(input())):\n    map(int, input().split())\n    a = input()\n    b = input()\n    c = 0\n    d = 0\n    e = 0\n    g = 0\n    if a.count('BB') == 0 and a.count('RR') == 0 and (b.count('BB') == 0) and (b.count('RR') == 0):\n        print('YES')\n    elif a[-1] == b[-1]:\n        print('NO')\n    elif a.count('BB') + a.count('RR') + b.count('BB') + b.count('RR') > 1:\n        print('NO')\n    elif a.count('BBB') == 0 and a.count('RRR') == 0 and (b.count('BBB') == 0) and (b.count('RRR') == 0):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    x = input()\n    y = input()\n    tower = x + y[::-1]\n    f = 'a'\n    count = 0\n    for letter in tower:\n        if letter == f:\n            count += 1\n        else:\n            f = letter\n        if count > 1:\n            break\n    if count > 1:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    sn = input()\n    sm = input()\n    f1 = f2 = True\n    c1 = c2 = 0\n    for i in range(1, n):\n        if sn[i] == sn[i - 1]:\n            c1 += 1\n            f1 = False\n    for i in range(1, m):\n        if sm[i] == sm[i - 1]:\n            c2 += 1\n            f2 = False\n    if f1 or f2:\n        if f1 and f2:\n            print('YES')\n        elif f1 is True and f2 is False:\n            if sn[-1] != sm[-1] and c2 == 1:\n                print('YES')\n            else:\n                print('NO')\n        elif sn[-1] != sm[-1] and c1 == 1:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, m) = input().split()\n    s1 = input()\n    s2 = input()\n    n = int(n)\n    m = int(m)\n    (sn, sm) = (0, 0)\n    for i in range(1, m):\n        if s2[i] == s2[i - 1]:\n            sm += 1\n    for i in range(1, n):\n        if s1[i] == s1[i - 1]:\n            sn += 1\n    if (sn == 1 or sm == 1) and s2[-1] == s1[-1]:\n        print('NO')\n    elif sn == 1 and sm == 1 or (sn > 1 or sm > 1):\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    L = [s for s in input()]\n    R = [s for s in input()]\n    l = L\n\n    def checkPair(s):\n        for i in range(len(s)):\n            if i == 0:\n                continue\n            if s[i - 1] == s[i]:\n                return False\n        return True\n    r1 = []\n    r2 = []\n    while L:\n        if not r1:\n            r1.append(L[0])\n            L = L[1:]\n        elif r1 and r1[-1] != L[0]:\n            r1.append(L[0])\n            L = L[1:]\n        else:\n            break\n    if L:\n        temp = R + L[::-1]\n        print('YES' if checkPair(temp) else 'NO')\n    else:\n        while R:\n            if not r2:\n                r2.append(R[0])\n                R = R[1:]\n            elif r2 and r2[-1] != R[0]:\n                r2.append(R[0])\n                R = R[1:]\n            else:\n                break\n        if R:\n            temp = l + R[::-1]\n            print('YES' if checkPair(temp) else 'NO')\n        else:\n            print('YES')", "t = int(input())\nfor _ in range(t):\n    (n, m) = input().split(' ')\n    (n, m) = (int(n), int(m))\n    s = input()\n    t = input()\n    s += t[::-1]\n    flag = 0\n    last = ''\n    ans = 1\n    for i in s:\n        if last == i:\n            if flag == 1:\n                ans = 0\n                break\n            flag = 1\n        last = i\n    if ans == 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, m) = [int(x) for x in input().split()]\n    first_tower = input()\n    second_tower = input()\n    counter = 0\n    for i in range(1, n):\n        if first_tower[i - 1] == first_tower[i]:\n            counter += 1\n    for i in range(1, m):\n        if second_tower[i - 1] == second_tower[i]:\n            counter += 1\n    if counter == 0:\n        print('YES')\n    elif counter == 1 and first_tower[-1] != second_tower[-1]:\n        print('YES')\n    else:\n        print('NO')", "tc = int(input())\nfor _ in range(tc):\n    (n1, n2) = map(int, input().split())\n    t1 = list(input())\n    t2 = list(input())\n    b1 = True\n    b2 = True\n    c1 = 0\n    c2 = 0\n    for i in range(n1 - 1):\n        if t1[i] == t1[i + 1]:\n            b1 = False\n            c1 = i + 1\n            break\n    for i in range(n2 - 1):\n        if t2[i] == t2[i + 1]:\n            b2 = False\n            c2 = i + 1\n            break\n    gorb = True\n    if b1 == False and b2 == False:\n        print('NO')\n    elif b1 == True and b2 == True:\n        print('YES')\n    elif b1 == True and b2 == False:\n        for i in range(n2 - 1, c2 - 1, -1):\n            top = t2.pop()\n            if top == t1[-1]:\n                print('NO')\n                gorb = False\n                break\n            else:\n                t1.append(top)\n        if gorb:\n            print('YES')\n    elif b1 == False and b2 == True:\n        for i in range(n1 - 1, c1 - 1, -1):\n            top = t1.pop()\n            if top == t2[-1]:\n                print('NO')\n                gorb = False\n                break\n            else:\n                t2.append(top)\n        if gorb:\n            print('YES')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = input()\n    t = input()\n    a = ''\n    for i in t:\n        a = i + a\n    c = s + a\n    b = 0\n    for j in range(n + m - 1):\n        if c[j] == c[j + 1]:\n            b += 1\n    if b > 1:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor y in range(t):\n    (n, m) = map(int, input().split())\n    first = input()\n    second = input()\n    x = first[0]\n    flag = 0\n    res = first + second[::-1]\n    for i in range(1, len(res)):\n        if res[i] == res[i - 1]:\n            flag += 1\n            if flag == 2:\n                print('NO')\n                break\n    if flag != 2:\n        print('YES')", "import math\n\ndef solve():\n    (n, m) = map(int, input().split())\n    s1 = input()\n    s2 = input()\n    f1 = f2 = True\n    c1 = c2 = 0\n    for i in range(n - 1):\n        if s1[i] == s1[i + 1]:\n            c1 += 1\n    for i in range(m - 1):\n        if s2[i] == s2[i + 1]:\n            c2 += 1\n    if (c1 > 1 or c2 > 1) or (c1 == 1 and c2 == 1):\n        print('NO')\n        return\n    if (c1 == 1 or c2 == 1) and s1[-1] == s2[-1]:\n        print('NO')\n        return\n    print('YES')\nfor t in range(int(input())):\n    solve()", "def TwoTowers(s, t):\n    t = t[::-1]\n    a = s + t\n    count = 0\n    for i in range(n + m - 1):\n        if a[i] == a[i + 1]:\n            count += 1\n    if count > 1:\n        return 'NO'\n    else:\n        return 'YES'\nT = int(input())\nwhile T > 0:\n    (n, m) = map(int, input().split())\n    s = input()\n    t = input()\n    ans = TwoTowers(s, t)\n    print(ans)\n    T = T - 1", "def funk(st):\n    res = 0\n    while st.count('BB') + st.count('RR'):\n        if st.count('BB'):\n            st = st.replace('BB', 'B', 1)\n        else:\n            st = st.replace('RR', 'R', 1)\n        res += 1\n    return res\nt = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    st1 = input()[::-1]\n    st2 = input()\n    st = st2 + st1\n    if funk(st) <= 1:\n        print('YES')\n    else:\n        print('NO')", "a = int(input())\nwhile a:\n    (n, m) = map(int, input().split())\n    s = [x for x in str(input())]\n    t = [x for x in str(input())]\n    f = 0\n    t.reverse()\n    s = s + t\n    cnt = 0\n    for i in range(len(s) - 1):\n        if s[i] == s[i + 1]:\n            cnt += 1\n    if cnt > 1:\n        print('NO')\n    else:\n        print('YES')\n    a -= 1", "T = int(input())\nfor t in range(0, T):\n    (n, m) = map(int, input().split())\n    s = input()\n    p = input()\n    problem1 = 0\n    problem2 = 0\n    for i in range(0, n - 1):\n        if s[i] == s[i + 1]:\n            problem1 += 1\n    for i in range(0, m - 1):\n        if p[i] == p[i + 1]:\n            problem2 += 1\n    if problem1 == 0 and problem2 == 0:\n        print('YES')\n    elif problem1 * problem2 != 0:\n        print('NO')\n    else:\n        if problem1 != 0:\n            if problem1 == 1 and s[n - 1] != p[m - 1]:\n                print('YES')\n            else:\n                print('NO')\n        if problem2 != 0:\n            if problem2 == 1 and p[m - 1] != s[n - 1]:\n                print('YES')\n            else:\n                print('NO')", "import re\nT = int(input())\nfor t in range(T):\n    (N, M) = [int(x) for x in input().split()]\n    t1 = input().strip()\n    t2 = input().strip()\n    tow = t1 + t2[::-1]\n    if len(re.findall('(?=BB)', tow)) + len(re.findall('(?=RR)', tow)) > 1:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, m) = input().split()\n    n = int(n)\n    m = int(m)\n    s = input()\n    t = input()\n    flag1 = False\n    flag2 = False\n    count1 = 0\n    count2 = 0\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            flag1 = True\n            count1 += 1\n    for i in range(m - 1):\n        if t[i] == t[i + 1]:\n            flag2 = True\n            count2 += 1\n    if flag1 and flag2:\n        print('NO')\n    elif not flag1 and (not flag2):\n        print('YES')\n    elif s[-1] == t[-1]:\n        print('NO')\n    elif count1 > 1 or count2 > 1:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nls = []\nfor j in range(t):\n    l = list(map(int, input().split()))\n    n1 = l[0]\n    n2 = l[1]\n    a1 = str(input())\n    a2 = str(input())\n    for i in range(n2):\n        a1 = a1 + a2[-1 - i]\n    ans = 0\n    for i in range(n1 + n2 - 1):\n        if a1[i] == a1[i + 1]:\n            ans = ans + 1\n    if ans > 1:\n        ls.append('NO')\n    else:\n        ls.append('YES')\nfor k in range(t):\n    print(ls[k])", "from itertools import groupby\nfor s in ([input(), input() + ''.join(reversed(input()))][1] for _ in range(int(input()))):\n    print(['NO', 'YES'][sum((s[i - 1] == s[i] for i in range(1, len(s)))) <= 1])", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = input()\n    t = input()\n    st = s + t[::-1]\n    y = 0\n    v = 0\n    if n == 1 and m == 1:\n        print('YES')\n    else:\n        for x in range(0, n + m - 1):\n            if st[x] == st[x + 1]:\n                if x != n + m - 2 and st[x + 2] == st[x]:\n                    y = 1\n                    break\n                else:\n                    v += 1\n    if y == 1 or v > 1:\n        print('NO')\n    elif not (n == 1 and m == 1):\n        print('YES')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = input()\n    b = input()\n    acnt = bcnt = 0\n    for i in range(1, n):\n        if a[i] == a[i - 1]:\n            acnt += 1\n    for j in range(1, m):\n        if b[j - 1] == b[j]:\n            bcnt += 1\n    if (acnt > 1 or bcnt > 1) or (acnt == 1 and bcnt == 1):\n        print('NO')\n    elif (bcnt == 1 or acnt == 1) and a[n - 1] == b[m - 1]:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor t in range(t):\n    (n, m) = list(map(int, input().split()))[:2]\n    a = input()\n    b = input()\n    c = a + b[::-1]\n    temp = 0\n    for i in range(n + m - 1):\n        if c[i] == c[i + 1]:\n            temp += 1\n    if temp > 1:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = input()\n    s1 = input()\n    ib = 0\n    for i in range(1, n):\n        if s[i - 1] == s[i]:\n            ib += 1\n    for i in range(1, m):\n        if s1[i - 1] == s1[i]:\n            ib += 1\n    if ib == 0:\n        print('YES')\n    elif ib == 1:\n        if s[-1] != s1[-1]:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "t = int(input())\nfrom collections import defaultdict\nwhile t > 0:\n    arr = input().split(' ')\n    arr = [arr[0], arr[1]]\n    t1 = input()\n    t1 = list(t1)\n    t2 = input()\n    t2 = list(t2)\n    x = len(t1) - 1\n    y = len(t2) - 1\n    ans = 'YES'\n    (ca, cb) = (0, 0)\n    for i in range(len(t1) - 1, 0, -1):\n        if t1[i] == t1[i - 1]:\n            ca += 1\n    for i in range(len(t2) - 1, 0, -1):\n        if t2[i] == t2[i - 1]:\n            cb += 1\n    if (ca > 1 or cb > 1) or (ca == 1 and cb == 1):\n        ans = 'NO'\n    elif (ca == 1 or cb == 1) and t1[len(t1) - 1] == t2[len(t2) - 1]:\n        ans = 'NO'\n    print(ans)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    s1 = input()\n    s2 = input()\n    f1 = 0\n    f2 = 0\n    for i in range(0, n - 1):\n        if s1[i] == s1[i + 1]:\n            f1 += 1\n    for i in range(0, m - 1):\n        if s2[i] == s2[i + 1]:\n            f2 += 1\n    if f1 == 0 and f2 == 0:\n        print('YES')\n    elif f1 != 0 and f2 != 0 or (f1 > 1 or f2 > 1):\n        print('NO')\n    else:\n        s1 = s1[::-1]\n        s2 = s2[::-1]\n        if f1 == 1:\n            while True:\n                if s1[0] != s2[0]:\n                    s2 = s1[0] + s2\n                    s1 = s1[1:]\n                else:\n                    break\n            f = 0\n            for i in range(0, len(s1) - 1):\n                if s1[i] == s1[i + 1]:\n                    f = 1\n                    break\n            if f == 1:\n                print('NO')\n            else:\n                print('YES')\n        else:\n            while True:\n                if s1[0] != s2[0]:\n                    s1 = s2[0] + s1\n                    s2 = s2[1:]\n                else:\n                    break\n            f = 0\n            for i in range(0, len(s2) - 1):\n                if s2[i] == s2[i + 1]:\n                    f = 1\n                    break\n            if f == 1:\n                print('NO')\n            else:\n                print('YES')", "num = int(input())\nfor i in range(num):\n    (a, b) = map(int, input().split())\n    t = input()\n    t2 = input()\n    f = t + t2[::-1]\n    count = 0\n    x = 0\n    while count <= 1 and x <= a + b - 2:\n        if f[x] == f[x + 1]:\n            count += 1\n        x += 1\n    if count <= 1:\n        print('YES')\n    else:\n        print('NO')", "for tests in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = input()\n    b = input()\n    a = a + b[::-1]\n    ans = 1\n    count = 0\n    for i in range(len(a) - 1):\n        if a[i] == a[i + 1]:\n            count += 1\n        if count > 1:\n            ans = 0\n            break\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\ndata = [() for i in range(n)]\nfor i in range(n):\n    input()\n    str1 = input()\n    str2 = input()\n    data[i] = (str1, str2)\nfor i in range(n):\n    (st1, st2) = (data[i][0], data[i][1])\n    l1 = len(st1)\n    l2 = len(st2)\n    if st1.count('RRR') > 0 or st1.count('BBB') > 0 or st2.count('RRR') > 0 or (st2.count('BBB') > 0):\n        print('NO')\n        continue\n    x1 = st1.count('RR')\n    x2 = st1.count('BB')\n    y1 = st2.count('RR')\n    y2 = st2.count('BB')\n    if x1 + y1 + x2 + y2 == 0:\n        print('YES')\n    elif x1 + x2 + y1 + y2 == 1:\n        if st1[-1] == st2[-1]:\n            print('NO')\n        else:\n            print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (m, n) = [int(i) for i in input().split(' ')]\n    first = input()\n    second = input()\n    position1 = []\n    for i in range(m):\n        if i > 0:\n            if first[i] == first[i - 1]:\n                position1.append(i)\n    position2 = []\n    for i in range(n):\n        if i > 0:\n            if second[i] == second[i - 1]:\n                position2.append(i)\n    if len(position1) != 0 and len(position2) != 0:\n        print('NO')\n    elif (len(position1) != 0 or len(position2) != 0) and first[-1] == second[-1]:\n        print('NO')\n    elif len(position1) >= 2 or len(position2) >= 2:\n        print('NO')\n    else:\n        print('YES')", "n = int(input())\nfor _ in range(n):\n    _ = list(map(int, input().split()))\n    a = input()\n    b = input()\n    b = b[::-1]\n    a = a + b\n    temp_count = len([x for x in range(len(a) - 1) if a[x] == a[x + 1]])\n    if temp_count > 1:\n        print('NO')\n    else:\n        print('YES')"]