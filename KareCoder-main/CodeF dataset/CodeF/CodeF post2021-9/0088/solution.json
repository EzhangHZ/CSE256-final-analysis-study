["for s in [*open(0)][1:]:\n    print(min(s[len(s) < 4:-1]))", "for s in [*open(0)][1:]:\n    print(min(s[len(s) < 4:-1]))", "for s in [*open(0)][1:]:\n    print(min(s[len(s) < 4:-1]))", "for s in [*open(0)][1:]:\n    print(min(s[len(s) < 4:-1]))", "for s in [*open(0)][1:]:\n    print(min(s[len(s) < 4:-1]))", "for s in [*open(0)][1:]:\n    print(min(s[len(s) < 4:-1]))", "import sys\ninput = sys.stdin.readline\nt = int(input().strip())\nfor _ in range(t):\n    n = list(input().strip())\n    while len(n) != 1:\n        if len(n) == 2:\n            n = n[1]\n            break\n        else:\n            n = min(n)\n    sys.stdout.write(str(n) + '\\n')", "for s in [*open(0)][1::1]:\n    print([min(s[:-1]), s[1]][len(s) < 4])", "for i in [*open(0)][1:]:\n    print(min(i[len(i) < 4:-1]))", "for s in [*open(0)][1:]:\n    print(min(s[len(s) < 4:-1]))", "for s in [*open(0)][1:]:\n    print(min(s[len(s) < 4:-1]))", "for kvs in [*open(0)][1:]:\n    print(min(kvs[len(kvs) < 4:-1]))", "result = ''\nnumber = int(input())\nfor x in range(number):\n    string = input()\n    strings = []\n    for y in string:\n        if y not in strings:\n            strings.append(y)\n    strings.sort()\n    if len(string) == 2:\n        result += string[1] + '\\n'\n    else:\n        result += strings[0] + '\\n'\nprint(result[:-1])", "for s in [*open(0)][1:]:\n    print(min(s[len(s) < 4:-1]))", "for s in [*open(0)][1:]:\n    print(min(s[len(s) < 4:-1]))", "for s in [*open(0)][1:]:\n    print(min(s[len(s) < 4:-1]))", "for s in [*open(0)][1:]:\n    print(min(s[len(s) < 4:-1]))", "for s in [*open(0)][1:]:\n    print(min(s[len(s) < 4:-1]))", "for s in [*open(0)][1:]:\n    print(min(s[len(s) < 4:-1]))", "for s in [*open(0)][1:]:\n    print(min(s[len(s) < 4:-1]))", "for s in [*open(0)][1:]:\n    print(min(s[len(s) < 4:-1]))", "for s in [*open(0)][1:]:\n    print(min(s[len(s) < 4:-1]))", "for i in [*open(0)][1:]:\n    print(min(i[len(i) < 4:-1]))", "for s in [*open(0)][1:]:\n    print(min(s[len(s) < 4:-1]))", "for s in [*open(0)][1:]:\n    print(min(s[len(s) < 4:-1]))", "for s in [*open(0)][1:]:\n    print(min(s[len(s) < 4:-1]))", "for s in [*open(0)][1::1]:\n    print([min(s[:-1]), s[1]][len(s) < 4])", "from sys import stdin, stdout\nI = stdin.readline\nO = stdout.write\nfor _ in range(int(I())):\n    n = int(I())\n    st = str(n)\n    if len(st) == 2:\n        st = st[::-1]\n        print(int(st[0]))\n    else:\n        print(int(min(st)))", "for s in [*open(0)][1:]:\n    print((min(s[:-1]), s[1])[int(s) < 100])", "import sys\nn = int(sys.stdin.readline())\nfor _ in range(n):\n    num = sys.stdin.readline().rstrip()\n    if len(num) == 2:\n        print(num[1])\n    else:\n        print(min(num))", "def dig_min(val):\n    if len(val) > 2:\n        return min((int(i) for i in val))\n    return val[-1]\nret = ''\nn = int(input())\nfor i in range(n):\n    ret += str(dig_min(input())) + '\\n'\nprint(ret)", "for s in [*open(0)][1:]:\n    print(min(s[len(s) < 4:-1]))", "def main():\n    input_number_test_case = input()\n    number_test_cases = int(input_number_test_case)\n    test_cases = []\n    for index in range(number_test_cases):\n        test_case = input()\n        test_cases.append(test_case)\n    get_result(test_cases)\n\ndef get_result(test_cases):\n    for test_case in test_cases:\n        digits = [int(digit) for digit in test_case]\n        if len(test_case) == 2:\n            print(digits[-1])\n        else:\n            digits.sort()\n            print(digits[0])\nmain()", "for s in [*open(0)][1:]:\n    print(min(s[len(s) < 4:-1]))", "for s in [*open(0)][1:]:\n    print(min(s[len(s) < 4:-1]))", "for s in [*open(0)][1:]:\n    print(min(s[len(s) < 4:-1]))", "for s in [*open(0)][1:]:\n    print(min(s[len(s) < 4:-1]))", "for s in [*open(0)][1:]:\n    print(min(s[len(s) < 4:-1]))", "for s in [*open(0)][1:]:\n    print(min(s[len(s) < 4:-1]))", "results = []\nfor _ in range(int(input())):\n    n = input()\n    if len(n) < 3:\n        result = n[-1]\n    else:\n        result = min(n, key=int)\n    results.append(result)\nprint('\\n'.join(results))", "import sys\ninput = lambda : sys.stdin.readline().strip()\nfor i in range(int(input())):\n    j = list(input())\n    if len(j) < 3:\n        print(j[-1])\n    else:\n        print(min(j))", "t = int(input())\nout = ''\nfor _ in range(t):\n    arr = [int(x) for x in input()]\n    if len(arr) == 1:\n        out += str(arr[0]) + '\\n'\n    elif len(arr) == 2:\n        out += str(arr[1]) + '\\n'\n    else:\n        out += str(min(arr)) + '\\n'\nprint(out)", "n = int(input())\nl = []\nfor i in range(n):\n    t = int(input())\n    l.append(t)\nfor i in l:\n    s = str(i)\n    if len(s) > 2:\n        print(int(min(s)))\n    elif len(s) == 2:\n        print(int(s[1]))\n    else:\n        print(int(s[0]))", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    s = list(input().strip())\n    n = len(s)\n    if n == 2:\n        return s[1]\n    else:\n        return min(s)\nfor _ in range(int(input())):\n    print(solve())", "import sys\ninput = sys.stdin.readline\ntcs = int(input().strip())\nfor tc in range(tcs):\n    n = list(input())[:-1]\n    if len(n) == 2:\n        print(n[-1])\n    else:\n        print(min(n))", "t = int(input())\nans = []\nfor x in range(t):\n    n = input()\n    if len(n) == 2:\n        ans.append(n[1])\n        continue\n    ch = list(n)\n    ans.append(min(ch))\nfor a in ans:\n    print(a)", "lis = []\nfor i in range(int(input())):\n    a = int(input())\n    b = str(a)\n    if len(b) == 2:\n        c = b[1]\n    else:\n        c = min(b)\n    lis.append(c)\nprint(*lis, sep='\\n')", "def out(m):\n    if len(m) == 2:\n        return m[1]\n    else:\n        return min(m)\nt = int(input())\nlist1 = []\nfor i in range(t):\n    n = list(input())\n    a = out(n)\n    list1.append(a)\nfor k in list1:\n    print(k)", "for i in range(int(input())):\n    a = input()\n    if len(a) == 2 and a[0] == min(a):\n        print(a[1])\n    else:\n        print(min(a))", "for i in range(int(input())):\n    n = input()\n    if len(n) != 2:\n        print(min(n))\n    else:\n        print(n[1])", "lines = []\nwhile True:\n    try:\n        a = input()\n        lines.append(a)\n    except:\n        break\nnotest = int(lines[0])\ni = 1\nwhile i <= notest:\n    no = lines[i]\n    min = int(no[0])\n    j = 0\n    minpos = 0\n    for j in range(0, len(no)):\n        if int(no[j]) < min:\n            min = int(no[j])\n            minpos = j\n    if minpos == len(no) - 2 and len(no) == 2:\n        print(int(no[1]))\n    else:\n        print(min)\n    i += 1", "n = int(input())\na = []\nfor i in range(n):\n    b = str(input())\n    a.append(b)\nfor i in range(n):\n    c = 9\n    for j in a[i]:\n        if c > int(j):\n            c = int(j)\n    if len(a[i]) == 1:\n        print(a[i])\n    elif len(a[i]) == 2:\n        print(int(a[i][1]))\n    else:\n        print(c)", "t = int(input())\nwhile t:\n    t -= 1\n    n = input()\n    if len(n) < 3:\n        print(n[-1])\n    else:\n        tmp = ''.join(sorted(n))\n        print(tmp[0])", "def smallest_numbr(numbr):\n    minnum = 11\n    while numbr > 0:\n        minnum = min(minnum, numbr % 10)\n        numbr //= 10\n        if minnum == 1:\n            return minnum\n    return minnum\nn = int(input())\nanswer = []\nfor _ in range(n):\n    number = input()\n    if len(number) == 2:\n        answer.append(number[1])\n    else:\n        answer.append(smallest_numbr(int(number)))\nfor elem in answer:\n    print(elem)", "import sys\nn = int(sys.stdin.readline())\nfor i in range(n):\n    number = list(sys.stdin.readline())\n    for j in range(len(number)):\n        if number[j] == '\\n':\n            number.remove(number[j])\n        else:\n            number[j] = int(number[j])\n    i = len(number)\n    if i == 2:\n        print(number[1])\n    else:\n        print(min(number))", "for _ in range(int(input())):\n    n = input()\n    if len(n) == 2:\n        n = int(n)\n        print(n % 10)\n    else:\n        arr = [x for x in n]\n        print(min(arr))", "def split(word):\n    return [int(char) for char in word]\nfor _ in range(int(input())):\n    num = input()\n    lst = split(num)\n    if len(lst) == 2:\n        print(lst[1])\n    else:\n        print(min(lst))", "for i in range(int(input())):\n    n = input()\n    if len(n) == 2:\n        print(n[-1])\n    else:\n        print(min(n))", "l1 = []\nl2 = []\nl3 = []\nt = int(input())\nfor i in range(t):\n    a = input()\n    count = -1\n    l1 = []\n    for i in a:\n        l1.append(int(i))\n    if len(a) == 2:\n        l2.append(l1[1])\n    else:\n        l2.append(min(l1))\nfor i in l2:\n    print(i)", "for i in range(int(input())):\n    a = input()\n    if len(a) == 2:\n        print(a[1])\n    else:\n        print(min(a))", "t = int(input())\nfor i in range(t):\n    s = input()\n    n = len(s)\n    if n == 2:\n        print(s[1])\n    else:\n        res = sorted(s)\n        print(res[0])", "t = int(input())\nfor i in range(t):\n    n = input()\n    if len(n) == 2:\n        print(n[1])\n    else:\n        print(min(list(n)))", "for i in range(int(input())):\n    st = input()\n    if st.__len__() == 2:\n        print(st[1])\n    elif '1' in st:\n        print(1)\n    elif '2' in st:\n        print(2)\n    elif '3' in st:\n        print(3)\n    elif '4' in st:\n        print(4)\n    elif '5' in st:\n        print(5)\n    elif '6' in st:\n        print(6)\n    elif '7' in st:\n        print(7)\n    elif '8' in st:\n        print(8)\n    else:\n        print(9)", "def solve(n):\n    nl = list(n)\n    if len(nl) == 2:\n        return nl[1]\n    return min(nl)\nt = int(input())\nfor i in range(t):\n    n = input()\n    print(solve(n))", "for i in range(int(input())):\n    a = input()\n    if len(a) == 2:\n        print(a[1])\n    else:\n        print(min(a))", "for t in range(int(input())):\n    s = input()\n    if len(s) == 2:\n        print(s[1])\n    else:\n        print(min(s))", "n = int(input())\ns = [list(map(int, input())) for i in range(n)]\nfor i in s:\n    i[0] = min(i)\n    while len(i) > 1:\n        if len(i) == 2:\n            (i[0], i[1]) = (i[1], i[0])\n        if len(i) == 3:\n            i[1] = min(i)\n        del i[-1]\n    print(*i)", "for i in range(int(input())):\n    s = input()\n    print(s[1] if len(s) == 2 else min(s))", "for i in range(int(input())):\n    n = input()\n    if len(n) == 2:\n        print(n[1])\n    else:\n        print(min(n))", "for i in range(int(input())):\n    n = input()\n    if len(n) == 2:\n        print(n[1])\n    else:\n        print(min(n))", "t = int(input())\nfor tt in range(t):\n    s = input()\n    if len(s) == 2:\n        print(s[1])\n    else:\n        print(min(s))", "t = int(input())\nfor _ in range(t):\n    n = input()\n    print(min(n) if len(n) > 2 else n[-1])", "n = int(input())\nl = []\nfor i in range(n):\n    l.append(int(input()))\nfor x in l:\n    if len(str(x)) == 2:\n        print(str(x)[-1])\n    else:\n        print(min([int(y) for y in str(x)]))", "n = int(input())\nwhile n > 0:\n    t = input()\n    if len(t) > 2:\n        print(min(t))\n    else:\n        print(t[-1:])\n    n -= 1", "for i in range(int(input())):\n    n = input()\n    print(n[-1] if len(n) == 2 else min(n))", "n = int(input())\nfor i in range(n):\n    first = input()\n    if len(first) == 2:\n        print(first[1])\n    else:\n        print(min(list(first)))", "for i in range(int(input())):\n    t = input()\n    if len(t) == 2:\n        print(t[-1])\n    else:\n        print(min(t))", "j = int(input())\nfor i in range(j):\n    n = input()\n    if len(n) == 2:\n        print(n[-1])\n    else:\n        print(min(n))", "for _ in range(int(input())):\n    n = input()\n    if len(n) == 2:\n        print(n[-1])\n    else:\n        print(min(n))", "for _ in range(int(input())):\n    s = input()\n    if len(s) == 2:\n        print(s[-1])\n    else:\n        print(min(s))", "T = int(input())\nfor i in range(T):\n    s = input()\n    if len(s) == 2:\n        print(s[1])\n    else:\n        print(min(s))", "t = int(input())\nfor _ in range(t):\n    s = input()\n    if len(s) != 2:\n        print(min(s))\n    else:\n        print(s[1])", "import math\nresult = []\n\ndef finding_result(lst):\n    if len(lst) == 2:\n        lst.reverse()\n        result.append(lst[0])\n    elif len(lst) > 2:\n        lst.sort()\n        result.append(lst[0])\n\ndef main():\n    test_cases = int(input())\n    i = 0\n    j = 0\n    while i < test_cases:\n        number_list = []\n        number = int(input())\n        while number > 10:\n            div_result = number % 10\n            number_list.append(div_result)\n            number = math.floor(number / 10)\n        number_list.append(number)\n        number_list.reverse()\n        finding_result(number_list)\n        i = i + 1\n    while j < test_cases:\n        print(result[j], '\\n')\n        j = j + 1\nmain()", "T = int(input())\nfor i in range(T):\n    val = input()\n    lisval = list(val)\n    if len(lisval) == 2:\n        print(lisval[1])\n    else:\n        lisval.sort()\n        print(lisval[0])", "for _ in range(int(input())):\n    n = list(input())\n    if len(n) == 2:\n        print(n[1])\n    else:\n        print(min(n))", "for i in range(int(input())):\n    n = input()\n    l = list(n)\n    if len(n) > 2:\n        print(min(l))\n    else:\n        print(l[-1])", "a = int(input())\nwhile a:\n    b = str(input())\n    if len(b) > 2:\n        print(min(b))\n    elif len(b) == 2:\n        print(b[1])\n    else:\n        print(b[0])\n    a -= 1", "n = int(input())\nfor i in range(n):\n    l = list(input())\n    if len(l) == 2:\n        print(l[1])\n    else:\n        print(min(l))", "n = int(input())\nfor i in range(n):\n    a = input()\n    if len(a) == 2 and a.index(max(a)) == 1:\n        print(max(a))\n    else:\n        print(min(a))", "tc = int(input())\nfor _ in range(tc):\n    a = list(input())\n    if len(a) == 2:\n        print(a[1])\n    else:\n        print(min(a))", "tc = int(input())\nfor _ in range(tc):\n    x = input()\n    if len(x) == 2:\n        print(x[1])\n    else:\n        print(min(list(x)))", "for i in range(int(input())):\n    num = int(input())\n    s = str(num)\n    if len(s) > 2:\n        print(min(s))\n    else:\n        print(s[1])", "t = int(input())\nfor _ in range(t):\n    s = input()\n    if len(s) == 2:\n        print(s[-1])\n    else:\n        print(min(s))", "for _ in range(int(input())):\n    n = int(input())\n    t = str(n)\n    if len(t) == 2:\n        print(t[1])\n    else:\n        t = list(t)\n        print(min(t))", "for i in range(int(input())):\n    b = input()\n    c = int(b)\n    if len(b) == 2:\n        print(b[1])\n    else:\n        print(min(b))", "for _ in range(int(input())):\n    N = list(input())\n    if len(N) == 2:\n        print(N[-1])\n    else:\n        print(min(N))", "n = int(input())\nfor i in range(n):\n    a = str(input())\n    if len(a) == 1:\n        print(a)\n    elif len(a) == 2:\n        print(a[-1])\n    else:\n        print(min(a))", "t = int(input())\nwhile t:\n    n = input()\n    if len(n) == 2:\n        print(n[1])\n    else:\n        print(min(n))\n    t -= 1"]