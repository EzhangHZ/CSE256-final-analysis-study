["for i in [*open(0)][1:]:\n    n = int(i)\n    m = n & -n\n    print('2' if n % 2 == 1 else min(n // m, 2 * m) - abs(min(n // m, 2) - 2) * 2)", "import sys\nimport math\n\ndef lowbit(x):\n    return x & -x\n\ndef read_numbers():\n    return [int(x) for x in sys.stdin.readline().strip().split()]\n\ndef solve():\n    t = read_numbers()[0]\n    for _ in range(t):\n        num = read_numbers()[0]\n        if lowbit(num) == num:\n            print(-1)\n        else:\n            lb = lowbit(num)\n            div_res = num // lb\n            ans = min(2 * lb, div_res)\n            print(ans)\nsolve()", "for T in range(int(input())):\n    n = int(input())\n    if n % 2 == 1:\n        print(2)\n    else:\n        h = n & -n\n        if h == n:\n            print(-1)\n        else:\n            q = n // h\n            if q // 2 < h:\n                print(q)\n            else:\n                print(h * 2)", "x = int(input().strip())\nfor i in range(x):\n    n = int(input().strip())\n    m = int(n & -n)\n    if m == n:\n        print('-1')\n    elif n % 2 == 1:\n        print('2')\n    else:\n        print(min(n // m, 2 * m))", "import sys\ninput = sys.stdin.readline\n\ndef solve(num):\n    val = num\n    count = 0\n    while val % 2 == 0:\n        count += 1\n        val //= 2\n    k1 = 2 ** (count + 1)\n    k2 = val\n    if k2 - k1 >= 1 and (k2 - k1) % 2 == 1:\n        print(k1)\n    elif 1 < k2 < k1:\n        print(k2)\n    else:\n        print(-1)\nfor _ in range(int(input())):\n    num = int(input())\n    solve(num)", "for i in range(int(input())):\n    n = int(input())\n    m = n & -n\n    print('2') if n % 2 == 1 else print(min(n // m, 2 * m) - abs(min(n // m, 2) - 2) * 2)", "x = int(input().strip())\nfor i in range(x):\n    n = int(input().strip())\n    m = n & -n\n    print('2') if n % 2 == 1 else print(min(n // m, 2 * m) - abs(min(n // m, 2) - 2) * 2)", "x = int(input().strip())\nfor i in range(x):\n    n = int(input().strip())\n    m = n & -n\n    print('2') if n % 2 == 1 else print(min(n // m, 2 * m) - abs(min(n // m, 2) - 2) * 2)", "x = int(input().strip())\nfor i in range(x):\n    n = int(input().strip())\n    m = n & -n\n    print('2') if n % 2 == 1 else print(min(n // m, 2 * m) - abs(min(n // m, 2) - 2) * 2)", "x = int(input().strip())\nfor i in range(x):\n    n = int(input().strip())\n    m = n & -n\n    print('2') if n % 2 == 1 else print(min(n // m, 2 * m) * (min(n // m, 2) - 1) - abs(min(n // m, 2) - 2))", "x = int(input().strip())\nfor i in range(x):\n    n = int(input().strip())\n    m = n & -n\n    print('2') if n % 2 == 1 else print(min(n // m, 2 * m) - abs(min(n // m, 2) - 2) * 2)", "import sys\ninput = sys.stdin.readline\n\ndef solve(num):\n    val = num\n    count = 0\n    while val % 2 == 0:\n        count += 1\n        val //= 2\n    k1 = 2 ** (count + 1)\n    k2 = 2 * num // k1\n    if k2 - k1 >= 1 and (k2 - k1) % 2 == 1:\n        print(k1)\n    elif 1 < k2 < k1:\n        print(k2)\n    else:\n        print(-1)\nfor _ in range(int(input())):\n    num = int(input())\n    solve(num)", "x = int(input().strip())\nfor i in range(x):\n    n = int(input().strip())\n    m = n & -n\n    print('2') if n % 2 == 1 else print(min(n // m, 2 * m) - abs(min(n // m, 2) - 2) * 2)", "import sys\ninput = sys.stdin.readline\n\ndef solve(num):\n    val = num\n    count = 0\n    while val % 2 == 0:\n        count += 1\n        val //= 2\n    k = 2 ** (count + 1)\n    if 2 * num // k - k >= 1 and (2 * num // k - k) % 2 == 1:\n        print(k)\n    elif 1 < 2 * num // k < k:\n        print(2 * num // k)\n    else:\n        print(-1)\nfor _ in range(int(input())):\n    num = int(input())\n    solve(num)", "from collections import defaultdict, deque\nimport sys\ninput = lambda : sys.stdin.readline().strip()\ntest_cases = int(input())\nwhile test_cases > 0:\n    test_cases -= 1\n    n = int(input())\n    copy = n\n    if copy % 2 != int(copy % 2):\n        print(2)\n    else:\n        while copy % 2 == 0:\n            copy = copy // 2\n        if copy == 1:\n            print(-1)\n        else:\n            print(min(copy, 2 * n // copy))", "for _ in range(int(input())):\n    n = int(input())\n    if n & 1:\n        print(2)\n    else:\n        a = n\n        while a & 1 == 0:\n            a = a >> 1\n        if a == 1:\n            print(-1)\n        elif a * (a + 1) <= 2 * n:\n            print(int(a))\n        else:\n            print(int(2 * (n // a)))", "def solve(n):\n    k = n\n    i = 0\n    while k % 2 == 0:\n        k = k // 2\n        i += 1\n    if k == 1:\n        return -1\n    if k * (k - 1) // 2 < n:\n        return k\n    else:\n        return 1 << i + 1\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(solve(n))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    if n & 1:\n        print(2)\n    else:\n        a = n\n        while a & 1 == 0:\n            a = a >> 1\n        if a == 1:\n            print(-1)\n        elif a * (a + 1) <= 2 * n:\n            print(int(a))\n        else:\n            print(int(2 * (n // a)))", "from collections import Counter, defaultdict, deque, namedtuple\nfrom functools import lru_cache\nfrom typing import List, Dict\nimport bisect as b\nimport heapq as h\nimport math as m\n\ndef inti():\n    return int(input())\n\ndef ints():\n    return [int(x) for x in input().split()]\n\ndef main_tc():\n    n = inti()\n    two_part = 1\n    odd_part = n\n    while odd_part % 2 == 0:\n        two_part <<= 1\n        odd_part >>= 1\n    if odd_part - ((two_part << 1) + 1) >= 0:\n        print(two_part << 1)\n        return\n    if odd_part == 1:\n        print(-1)\n        return\n    print(odd_part)\n    return\n\ndef main():\n    tc = inti()\n    for _ in range(tc):\n        main_tc()\nmain()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    p = 0\n    while n % 2 == 0:\n        n //= 2\n        p += 1\n    if n == 1:\n        print(-1)\n    elif n < 2 ** (p + 1):\n        print(n)\n    else:\n        print(2 ** (p + 1))", "for _ in range(int(input())):\n    n = int(input())\n    rem = n\n    while rem % 2 == 0:\n        rem //= 2\n    if rem == 1:\n        print(-1)\n    else:\n        print(min(rem, 2 * n // rem))", "x = int(input().strip())\nfor i in range(x):\n    n = int(input().strip())\n    b = int(n)\n    while n % 2 == 0:\n        n //= 2\n    print('-1') if n == 1 else print(min(n, b * 2 // n))", "import math as m\nfor i in range(int(input())):\n    a = int(input())\n    b = a\n    while a % 2 == 0:\n        a //= 2\n    b //= a\n    if a == 1:\n        print(-1)\n    else:\n        print(min(a, 2 * b))", "x = int(input().strip())\nfor i in range(x):\n    n = int(input().strip())\n    b = int(n)\n    while n % 2 == 0:\n        n //= 2\n    print('-1') if n == 1 else print(min(n, b * 2 // n))", "for t in range(int(input())):\n    n = int(input())\n    m = n\n    while m % 2 == 0:\n        m //= 2\n    if m == 1:\n        print(-1)\n    else:\n        print(min(m, 2 * n // m))", "for t in range(int(input())):\n    n = int(input())\n    m = n\n    while m % 2 == 0:\n        m //= 2\n    if m == 1:\n        print(-1)\n    else:\n        print(min(m, 2 * n // m))", "for _ in range(int(input())):\n    n = int(input())\n    rem = n\n    while rem % 2 == 0:\n        rem //= 2\n    if rem == 1:\n        print(-1)\n    else:\n        print(min(rem, 2 * n // rem))", "def count2primes(n):\n    number = 0\n    prod = 1\n    while n % 2 == 0:\n        n = n // 2\n        number += 1\n        prod *= 2\n    return (number, prod, n)\n\ndef test(n):\n    (number, prod, rest) = count2primes(n)\n    if number == 0:\n        return 2\n    if rest == 1:\n        return -1\n    return min(prod * 2, rest)\nT = int(input())\nfor testcase in range(1, T + 1):\n    n = int(input())\n    print(test(n))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    st = 0\n    while n % 2 == 0:\n        n = n // 2\n        st += 1\n    if n == 1:\n        print(-1)\n    elif n > 2 ** (st + 1):\n        print(2 ** (st + 1))\n    else:\n        print(n)", "def find(num):\n    for i in range(len(powers)):\n        if num % powers[i] != 0 and 2 * num % powers[i] == 0:\n            return powers[i]\npowers = []\nfor i in range(1, 61):\n    powers.append(2 ** i)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 2 != 0:\n        print(2)\n        continue\n    if n in powers:\n        print(-1)\n        continue\n    value = find(n)\n    if value * (value + 1) / 2 > n:\n        value = 2 * n // value\n    print(value)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    st = 0\n    while n % 2 == 0:\n        n = n // 2\n        st += 1\n    if n == 1:\n        x = -1\n    elif n > 2 ** (st + 1):\n        x = 2 ** (st + 1)\n    else:\n        x = n\n    print(x)", "for _ in range(int(input())):\n    n = int(input())\n    k = 1\n    while n % 2 == 0:\n        n = n // 2\n        k = 2 * k\n    if n == 1:\n        print(-1)\n    else:\n        print(min(2 * k, n))", "for _ in range(int(input())):\n    n = int(input())\n    if n & n - 1 == 0:\n        print(-1)\n    elif n % 2 == 1:\n        print(2)\n    else:\n        k = 2\n        while n % 2 == 0:\n            n //= 2\n            k *= 2\n        print(min(k, n))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    tmp = n\n    ans = 2\n    while n % 2 == 0:\n        ans *= 2\n        n //= 2\n    if ans * (ans + 1) // 2 <= tmp:\n        print(ans)\n    elif n > 1 and n * (n + 1) // 2 <= tmp:\n        print(n)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, s) = (int(input()), 2)\n    x = n\n    while x % 2 == 0:\n        x //= 2\n        s *= 2\n    print(-1 if x == 1 else min(s, n * 2 // s))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    tmp = n\n    ans = 2\n    while n % 2 == 0:\n        ans *= 2\n        n //= 2\n    if ans * (ans + 1) // 2 <= tmp:\n        print(ans)\n    elif n > 1 and n * (n + 1) // 2 <= tmp:\n        print(n)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        ans = 1\n        while n % 2 == 0:\n            n = n // 2\n            ans *= 2\n        if n == 1:\n            print(-1)\n        else:\n            print(min(ans * 2, n))\n    else:\n        print(2)", "import sys\nimport math\nfrom collections import defaultdict\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    k = 1\n    while n % 2 == 0:\n        n = n // 2\n        k *= 2\n    if n == 1:\n        print('-1')\n    else:\n        print(min(n, 2 * k))", "for _ in range(int(input())):\n    n = int(input())\n    if n == 2 or n == 4:\n        print(-1)\n        continue\n    if n % 2:\n        print(2)\n    else:\n        t = 1\n        while n % 2 == 0:\n            n //= 2\n            t *= 2\n        if n == 1:\n            print(-1)\n        else:\n            print(min(n, 2 * t))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        z = str(bin(n))[2:]\n        x = len(z)\n        zn = 0\n        for i in range(x // 2):\n            if z[-i - 1] == '1':\n                zn = 2 ** (i + 1)\n                break\n        if zn > 0:\n            print(zn)\n        else:\n            while z[-1] == '0':\n                z = z[:-1]\n            if z == '1':\n                print(-1)\n            else:\n                z = '0b' + z\n                print(int(z, 2))\n    else:\n        print(2)", "n = int(input())\nwhile n:\n    t = int(input())\n    if t % 2 == 1:\n        print(2)\n    else:\n        from math import log\n        if t == 2 ** int(log(t, 2)):\n            print(-1)\n        else:\n            p2 = 0\n            k = t\n            while t % 2 == 0:\n                t = t // 2\n                p2 = p2 + 1\n            print(min(2 ** (p2 + 1), k // 2 ** p2))\n    n = n - 1", "test = eval(input())\nfor i in range(test):\n    n = eval(input())\n    x = 1\n    t = n\n    while n % 2 == 0:\n        x *= 2\n        n = n // 2\n    tmp = x * (x * 2 + 1)\n    if tmp <= t:\n        if tmp % (x * 2) == t % (x * 2):\n            print(x * 2)\n            continue\n    if n != 1:\n        tmp = n * (n + 1) // 2\n        if tmp <= t:\n            if tmp % n == t % n:\n                print(n)\n                continue\n    print(-1)"]