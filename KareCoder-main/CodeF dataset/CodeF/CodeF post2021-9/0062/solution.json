["for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    g = sum(arr)\n    if k >= g:\n        print(0)\n    else:\n        print(g - k)", "def getarr():\n    return list(map(int, input().split()))\n\ndef getint():\n    return int(input())\nfor t in range(getint()):\n    (n, m) = getarr()\n    a = getarr()\n    s = sum(a)\n    print(max(0, s - m))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(max(0, sum(arr) - m))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    r = sum(a)\n    if r <= m:\n        print(0)\n    else:\n        print(r - m)", "T = int(input())\nfor t in range(T):\n    (n, m) = [int(i) for i in input().split()]\n    A = [int(i) for i in input().split()]\n    print(max(sum(A) - m, 0))", "import math\nimport collections\nimport itertools\nimport functools\n\ndef fun(t):\n    (n, m) = map(int, input().split(' '))\n    arr = list(map(int, input().split(' ')))\n    if sum(arr) - m < 0:\n        print('0')\n        return\n    print(sum(arr) - m)\nfor tc in range(int(input())):\n    fun(tc)", "t = int(input())\nfor _ in range(t):\n    (n, m) = tuple(map(int, input().split()))\n    a = list(map(int, input().split()))\n    s = sum(a)\n    if m < s:\n        print(s - m)\n    else:\n        print(0)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    add = 0\n    for i in range(n):\n        if m >= arr[i]:\n            m -= arr[i]\n        else:\n            add += arr[i] - m\n            m = 0\n    print(add)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    x = list(map(int, input().split()))\n    ans = sum(x) - m\n    if ans <= 0:\n        print(0)\n    else:\n        print(ans)", "import sys\nsys.setrecursionlimit(2 * 10 ** 6)\n\ndef test():\n    pass\n\ndef main():\n    N = int(input())\n    for _ in range(N):\n        (n, m) = map(int, input().split())\n        arr = list(map(int, input().split()))\n        print(max(0, sum(arr) - m))\n\ndef init():\n    import sys\n    import os\n    if 'DOCKER_HOST' in os.environ:\n        test()\n        sys.stdin = open('test.txt')\ninit()\nmain()", "def solve():\n    (n, m) = map(int, input().split())\n    s = sum([int(i) for i in input().split()])\n    res = max(0, s - m)\n    print(res)\n    return\n\ndef main():\n    for _ in range(int(input())):\n        solve()\n    return\nmain()", "t = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    s = sum(l)\n    if m >= s:\n        print(0)\n    else:\n        print(s - m)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    x = sum(a)\n    if m >= x:\n        print(0)\n    else:\n        print(x - m)", "t = int(input())\nfor i in range(t):\n    (x, y) = map(int, input().split())\n    ls = list(map(int, input().split()))\n    l = sum(ls)\n    if y >= l:\n        print(0)\n    else:\n        print(l - y)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    ans = 0\n    v = input().split()\n    for j in range(n):\n        ans += int(v[j])\n    print(max(0, ans - m))", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    if sum(l) >= m:\n        print(sum(l) - m)\n    else:\n        print(0)", "for _ in range(int(input())):\n    (n, m) = [int(x) for x in input().split()]\n    l = list(map(int, input().split()))\n    ans = sum(l) - m\n    if ans < 0:\n        print(0)\n    else:\n        print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    distances = list(map(int, input().split()))\n    print(max(sum(distances) - m, 0))", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    l = [int(x) for x in input().split()]\n    if sum(l) < m:\n        print(0)\n    else:\n        print(sum(l) - m)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    sm = sum(lst)\n    print(max(0, sm - m))", "for i in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    benches = n + 1\n    i = 0\n    if m >= sum(a):\n        print(0)\n    else:\n        while True:\n            if m - a[i] >= 0:\n                m = m - a[i]\n                i += 1\n            else:\n                break\n        rest = 0\n        while i < len(a):\n            rest += a[i]\n            i += 1\n        print(rest - m)", "t = int(input())\nfor _ in range(t):\n    (n, m) = [int(x) for x in input().split()]\n    energies = [int(x) for x in input().split()]\n    totalenergies = sum(energies)\n    if m >= totalenergies:\n        print(0)\n    else:\n        print(abs(totalenergies - m))", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = map(int, input().split())\n    print(max(0, sum(a) - m))", "def walk(A, n, m):\n    sm = 0\n    for i in range(n):\n        sm += A[i]\n    return max(sm - m, 0)\ntests = int(input())\nfor _ in range(tests):\n    (n, m) = map(int, input().split())\n    A = list(map(int, input().split()))\n    print(walk(A, n, m))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    t = sum(list(map(int, input().split())))\n    print(max(t - m, 0))", "t = int(input())\nfor i in range(t):\n    (n, m) = [int(x) for x in input().split()]\n    a = list(map(int, input().split()))\n    A = sum(a)\n    d = A - m\n    if d >= 0:\n        print(d)\n    else:\n        print(0)", "t = int(input())\n(n, m) = (0, 0)\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    nums = list(map(int, input().split()))\n    s = 0\n    for i in range(len(nums)):\n        if m >= nums[i]:\n            m -= nums[i]\n        else:\n            s += nums[i] - m\n            m = 0\n    print(s)", "t = int(input())\nwhile t > 0:\n    (n, m) = map(int, input().split())\n    a = sum(list(map(int, input().split())))\n    print(max(0, a - m))\n    t -= 1", "for i in range(int(input())):\n    (x, y) = map(int, input().split())\n    l = list(map(int, input().split()))\n    if sum(l) <= y:\n        print(0)\n    else:\n        print(sum(l) - y)", "t = int(input())\nwhile t != 0:\n    (n, x) = input().split()\n    n = int(n)\n    x = int(x)\n    l = list(map(int, input().split()))\n    m = sum(l) - x\n    if m < 0:\n        print(0)\n    else:\n        print(m)\n    t = t - 1", "t = int(input())\nfor i in range(t):\n    (n, m) = [int(x) for x in input().split()]\n    l = [int(x) for x in input().split()]\n    total_energy = sum(l)\n    if m >= total_energy:\n        print(0)\n    else:\n        print(total_energy - m)", "k = int(input())\nfor i in range(k):\n    (n, m) = input().split()\n    n = int(n)\n    m = int(m)\n    lst = list(map(int, input().split()))\n    total = 0\n    for ele in range(0, len(lst)):\n        total = total + lst[ele]\n    if total > m:\n        print(total - m)\n    else:\n        print('0')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    A = list(map(int, input().split()))\n    S = sum(A)\n    print(S - m if S >= m else '0')", "def solution(_):\n    (n, energy) = map(int, input().split())\n    benches = list(map(int, input().split()))\n    print(max(0, sum(benches) - energy))\nfor _ in range(int(input())):\n    solution(_)", "for _ in range(int(input())):\n    a = list(map(int, input().split()))\n    (n, m) = (a[0], a[1])\n    benches = list(map(int, input().split()))\n    energy = sum(benches)\n    if energy <= m:\n        print(0)\n    else:\n        print(energy - m)", "import sys\nT = int(sys.stdin.readline().rstrip())\nfor _ in range(T):\n    (n, m) = map(int, sys.stdin.readline().split())\n    distance_list: list = list(map(int, sys.stdin.readline().split()))\n    sum_of_distance: int = sum(distance_list)\n    need_energy = sum_of_distance - m\n    print(need_energy if need_energy > 0 else 0)", "t = int(input())\nfor i in range(t):\n    b = input().split()\n    m = int(b[0])\n    n = int(b[1])\n    a = input().split()\n    for j in range(len(a)):\n        a[j] = int(a[j])\n    s = sum(a)\n    if s > n:\n        print(s - n)\n    else:\n        print(0)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ans = 0 if sum(l) - m <= 0 else sum(l) - m\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    k = 0\n    for i in range(n):\n        k = k + l[i]\n    if k <= m:\n        print(0)\n    else:\n        print(k - m)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    d = sum(lst)\n    end = d - m\n    if end <= 0:\n        print(0)\n    else:\n        print(end)", "def pw(a: list, n: int, m: int) -> int:\n    s = sum(a)\n    if m >= s:\n        return 0\n    else:\n        return s - m\nt = int(input())\nwhile t > 0:\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(pw(a, n, m))\n    t -= 1", "for _ in range(int(input())):\n    a = list(map(int, input().split()))\n    (n, m) = (a[0], a[1])\n    benches = list(map(int, input().split()))\n    energy = sum(benches)\n    if energy <= m:\n        print(0)\n    else:\n        print(energy - m)", "for _ in range(int(input())):\n    arr = list(map(int, input().split()))\n    (n, m) = (arr[0], arr[1])\n    arrBench = list(map(int, input().split()))\n    summ = sum(arrBench)\n    if m < summ:\n        print(summ - m)\n    else:\n        print(0)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = 0\n    l1 = list(map(int, input().split()))\n    for i in range(n):\n        s += l1[i]\n    if s > m:\n        print(s - m)\n    else:\n        print(0)", "t = input()\nfor _ in range(int(t)):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if m - sum(a) >= 0:\n        print(0)\n    else:\n        print(sum(a) - m)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    energy = sum(a) - m\n    if energy <= 0:\n        energy = 0\n    print(energy)", "TestCases = int(input())\nfor i in range(0, TestCases):\n    BenchEnergy = input().split()\n    Benches = input().split()\n    answer = 0\n    for i in range(0, len(Benches)):\n        answer += int(Benches[i])\n    answer -= int(BenchEnergy[1])\n    if answer <= 0:\n        print(0)\n    else:\n        print(answer)", "t = int(input())\nfor _ in range(t):\n    (n, m) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    print(max(0, sum(a) - m))", "T = int(input())\nfor i in range(0, T):\n    (n, m) = map(int, input().split())\n    print(max(0, sum(map(int, input().split())) - m))", "t = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().split()))\n    lst = list(map(int, input().split()))\n    s = sum(lst)\n    if s >= m:\n        print(s - m)\n    else:\n        print(0)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    if sum(l) - m > 0:\n        print(sum(l) - m)\n    else:\n        print(0)", "cnt = int(input())\nfor i in range(cnt):\n    cases = list(map(int, input().split()))\n    benches = list(map(int, input().split()))\n    print(max(0, sum(benches) - cases[1]))", "def run_test_case():\n    (n, m) = [int(num) for num in input().split()]\n    distances_between_benches = [int(num) for num in input().split()]\n    assert len(distances_between_benches) == n\n    e = 0\n    for i in range(n):\n        if distances_between_benches[i] >= m:\n            e += distances_between_benches[i] - m\n            m = 0\n        else:\n            m -= distances_between_benches[i]\n        if m == 0:\n            break\n    e += sum(distances_between_benches[i + 1:])\n    return e\n\ndef run():\n    energies_to_restore = []\n    for i in range(int(input())):\n        energies_to_restore.append(run_test_case())\n    print('\\n'.join([str(e) for e in energies_to_restore]))\nrun()", "test = int(input())\nfor t in range(test):\n    a = list(map(int, input().split()))\n    n = a[0]\n    m = a[1]\n    finish = False\n    b = list(map(int, input().split()))\n    while m > b[0]:\n        m -= b[0]\n        b.pop(0)\n        if len(b) == 0:\n            finish = True\n            break\n    if finish:\n        print(0)\n    else:\n        print(sum(b) - m)", "t = int(input(''))\nfor z in range(t):\n    a = []\n    (n, m) = map(int, input('').split())\n    a = list(map(int, input('').split()))[:n]\n    su = sum(a)\n    if su <= m:\n        print(0)\n    else:\n        print(su - m)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    ar = map(int, input().split())\n    t = sum(ar)\n    if t <= m:\n        print(0)\n    else:\n        print(t - m)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    total = 0\n    m = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    for item in l:\n        total += int(item)\n    if m[1] < total:\n        print(total - m[1])\n    else:\n        print(0)", "import sys\n\ndef rall():\n    return [x.strip() for x in sys.stdin.readlines()]\n\ndef rl():\n    return sys.stdin.readline().strip()\n\ndef rl_types(types):\n    str_list = [x for x in sys.stdin.readline().strip().split(' ')]\n    return [types[i](str_list[i]) for i in range(len(str_list))]\n\ndef pr(something=''):\n    sys.stdout.write(str(something) + '\\n')\n\ndef pra(array):\n    sys.stdout.write(' '.join([str(x) for x in array]) + '\\n')\n\ndef solve(array):\n    return array\nNT = int(rl())\nfor ti in range(NT):\n    (n, m) = map(int, rl().split(' '))\n    array = list(map(int, rl().split(' ')))\n    tot = sum(array)\n    pr(max(tot - m, 0))", "a = int(input())\nfor i in range(a):\n    (b, c) = map(int, input().split())\n    d = list(map(int, input().split()))\n    t = sum(d)\n    if t <= c:\n        print(0)\n    else:\n        print(t - c)", "for _ in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    if sum(l) <= m:\n        print(0)\n    else:\n        print(sum(l) - m)", "T = int(input())\nfor t in range(0, T):\n    (n, m) = input().split()\n    n = int(n)\n    m = int(m)\n    a = input().split()\n    a = list(map(int, a))\n    print(max(sum(a) - m, 0))", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    A = list(map(int, input().split()))\n    print(max(0, sum(A) - m))", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    A = list(map(int, input().split()))\n    print(max(0, sum(A) - m))", "t = input()\ntests = int(t)\nfor i in range(0, tests):\n    s = input()\n    (n, m) = s.split()\n    n = int(n)\n    m = int(m)\n    s = input().split()\n    arr = [int(x) for x in s]\n    sum = 0\n    for num in arr:\n        sum = sum + num\n    print(max(sum - m, 0))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    d = 0\n    a = list(map(int, input().split()))\n    for ai in a:\n        d = d + ai\n    print(d - m) if d - m > 0 else print(0)", "cases = int(input())\nfor case in range(0, cases):\n    key = tuple(input().split())\n    n = int(key[0])\n    m = int(key[1])\n    _list = input().split()\n    s = sum(map(int, _list))\n    print(max(0, s - m))", "def solve_case(case_arg1, case_arg2):\n    (n, m) = tuple(map(int, case_arg1.split()))\n    a = list(map(int, case_arg2.split()))\n    return max(sum(a) - m, 0)\n\ndef main():\n    N_cases = int(input())\n    for _ in range(N_cases):\n        case_arg1 = input()\n        case_arg2 = input()\n        print(solve_case(case_arg1, case_arg2))\nmain()", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    l = [int(i) for i in input().split()]\n    c = sum(l)\n    if c > b:\n        print(c - b)\n    else:\n        print(0)", "N = int(input())\nfor i in range(N):\n    (n, m) = map(int, input().split())\n    s = sum(list(map(int, input().split())))\n    if s <= m:\n        print(0)\n    else:\n        print(s - m)", "l = lambda : map(int, input().split())\n(i,) = l()\nexec(i * 'n,m=l();print(max(0,sum(l())-m));')", "T = int(input())\nfor _ in range(T):\n    t = input().split()\n    n = int(t[0])\n    m = int(t[1])\n    t = input().split()\n    a = []\n    for i in range(n):\n        a.append(int(t[i]))\n    s = sum(a)\n    print(max(0, s - m))", "t = int(input())\nfor i in range(t):\n    (n, m) = list(map(int, input().split()))\n    l = [int(x) for x in input().split()]\n    s = sum(l)\n    if s > m:\n        print(s - m)\n    else:\n        print('0')", "t = int(input())\nfor k in range(t):\n    (n, m) = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    sum_val = sum(arr)\n    if m < sum_val:\n        print(sum_val - m)\n    else:\n        print('0')", "n = int(input())\nres = []\nfor i in range(n):\n    (m, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    s = sum(a)\n    if s - k > 0:\n        res.append(s - k)\n    else:\n        res.append(0)\nfor i in res:\n    print(i)", "for j in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    a = list(map(int, input().split()))\n    suml = 0\n    for k in range(n):\n        suml = suml + a[k]\n    if m >= suml:\n        print('0')\n        continue\n    if suml > m:\n        print(suml - m)", "t = int(input())\nfor i in range(t):\n    (m, n) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    if n > sum(lst):\n        print(0)\n    else:\n        print(sum(lst) - n)", "t = int(input())\nfor i in range(t):\n    (x, y) = map(int, input().split())\n    T = list(map(int, input().split()))\n    if sum(T) <= y:\n        m = 0\n    else:\n        m = sum(T) - y\n    print(m)", "t = int(input())\nwhile t > 0:\n    x = input()\n    x = x.split(' ')\n    n = int(x[0])\n    m = int(x[1])\n    a = input()\n    a = a.split(' ')\n    a = [int(i) for i in a]\n    restore = 0\n    for i in range(0, n):\n        if m >= a[i]:\n            m -= a[i]\n        else:\n            restore += a[i] - m\n            m = 0\n    print(restore)\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a_list = list(map(int, input().split()))\n    sum_a = sum(a_list)\n    if sum_a > m:\n        print(sum_a - m)\n    else:\n        print(0)", "k = lambda : map(int, input().split())\n(t,) = k()\nexec(t * 'n,m=k();print(max(0,sum(k())-m));')", "n = int(input())\nsumm = 0\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    c = list(map(int, input().split()))\n    summ = sum(c)\n    if summ > b:\n        print(summ - b)\n    else:\n        print(0)", "t = int(input())\nfor i in range(t):\n    s = 0\n    (x, y) = map(int, input().split())\n    z = list(map(int, input().split()))\n    for j in range(x):\n        s += z[j]\n    if y >= s:\n        print('0')\n    else:\n        print('%i' % (s - y))", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    a = map(int, input().split())\n    l = list(a)\n    s = sum(l)\n    if s > m:\n        print(s - m)\n    else:\n        print(0)", "t = int(input())\nfor i in range(t):\n    (n, m) = list(map(int, input().split()))\n    list_an = list(map(int, input().split()))\n    sum_of_ans = 0\n    for j in list_an:\n        sum_of_ans += j\n    if sum_of_ans <= m:\n        print(0)\n    else:\n        print(sum_of_ans - m)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    k = list(map(int, input().split()))\n    l = sum(k) - m\n    if l > 0:\n        print(l)\n    else:\n        print(0)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    energy = 0\n    arr = list(map(int, input().split()))\n    for j in range(n):\n        if arr[j] > m:\n            energy += arr[j] - m\n            m = 0\n        else:\n            m -= arr[j]\n    print(energy)", "t = int(input())\nfor t in range(t):\n    (n, m) = map(int, input().split())\n    print(max(0, sum(map(int, input().split())) - m))", "t = int(input())\nfor i in range(t):\n    (n, m) = (int(num) for num in input().split())\n    a = list((int(n) for n in input().split(' ')))\n    if sum(a) <= m:\n        print(0)\n    else:\n        print(sum(a) - m)", "n = int(input())\nfor i in range(n):\n    (l, r) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    if r >= sum(arr):\n        print(0)\n    else:\n        print(sum(arr) - r)", "t = int(input())\nfor _ in range(t):\n    (n, m) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    energy = 0\n    for ai in a:\n        if m >= ai:\n            m = m - ai\n        else:\n            energy += ai - m\n            m = 0\n    print(energy)", "def extract_energy():\n    (n, energy) = list(map(int, input().split()))\n    return (n, energy)\n\ndef restore(energy):\n    totalpath = sum(list(map(int, input().split())))\n    if energy < totalpath:\n        restore_en = totalpath - energy\n    else:\n        restore_en = 0\n    return restore_en\nfor i in range(int(input())):\n    print(restore(extract_energy()[1]))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = sum(list(map(int, input().split())))\n    if s > m:\n        print(s - m)\n    else:\n        print(0)", "t = int(input())\nfor _ in range(t):\n    lst = input().split()\n    n = int(lst[0])\n    m = int(lst[1])\n    lst = input().split()\n    sm = 0\n    for x in lst:\n        sm += int(x)\n    if sm - m >= 0:\n        print(sm - m)\n    else:\n        print(0)", "def submain(n, m, a):\n    totaldistance = sum(a)\n    if m >= totaldistance:\n        return 0\n    else:\n        return totaldistance - m\nn = int(input())\nout = []\nfor i in range(n):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    x = submain(n, m, a)\n    out.append(x)\nfor o in out:\n    print(o)", "T = int(input())\nfor _ in range(T):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    sum = 0\n    for i in a:\n        sum = sum + i\n    m = max(0, sum - m)\n    print(m)", "T = int(input())\nfor _ in range(T):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    sum = 0\n    for i in a:\n        sum = sum + i\n    m = max(0, sum - m)\n    print(m)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = [*map(int, input().split())]\n    ans = sum(a) - m\n    print(ans if ans > 0 else 0)", "t = int(input())\nfor i in range(t):\n    (n, m) = input().split()\n    L = [int(a) for a in input().split(' ', int(n) - 1)]\n    if int(m) >= sum(L):\n        print(0)\n    else:\n        print(sum(L) - int(m))", "t = int(input())\nfor _ in range(0, t):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    print(max(0, s - m))", "for _ in [0] * int(input()):\n    (x, y) = input().split()\n    c = sum(list(map(int, input().split())))\n    print(int(y) > c and '0' or c - int(y))"]