["import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    (n, k) = map(int, inp().split())\n    s = list(inp())\n    s.pop()\n    r = [0] * n\n    k_bak = k\n    if k % 2 == 0:\n        for i in range(0, n - 1):\n            if s[i] == '0' and k > 0:\n                s[i] = '1'\n                r[i] = 1\n                k -= 1\n        r[-1] = k\n        if (k_bak - k) % 2:\n            s[-1] = str(int(s[-1]) ^ 1)\n    else:\n        for i in range(0, n - 1):\n            if s[i] == '1' and k > 0:\n                s[i] = '1'\n                r[i] = 1\n                k -= 1\n            elif s[i] == '1':\n                s[i] = '0'\n            else:\n                s[i] = '1'\n        r[-1] = k\n        if (k_bak - k) % 2:\n            s[-1] = str(int(s[-1]) ^ 1)\n    print(''.join(s))\n    print(' '.join(map(str, r)))\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "cases = int(input())\nfor ca in range(cases):\n    n_k = input()\n    (n_, k) = n_k.split()\n    n_ = int(n_)\n    k = int(k)\n    strr = list(input())\n    strr_tmp = []\n    cnt_times = [0 for _ in range(n_)]\n    if k % 2 == 1:\n        for (i, s) in enumerate(strr):\n            if s == '1' and k:\n                strr[i] = '1'\n                k -= 1\n                cnt_times[i] += 1\n            elif s == '0':\n                strr[i] = '1'\n            else:\n                strr[i] = '0'\n    else:\n        for (i, s) in enumerate(strr):\n            if s == '0' and k:\n                strr[i] = '1'\n                k -= 1\n                cnt_times[i] += 1\n    if k:\n        if k % 2 == 1:\n            strr[n_ - 1] = '0'\n        else:\n            strr[n_ - 1] = '1'\n    cnt_times[n_ - 1] += k\n    cnt_str = [str(x) for x in cnt_times]\n    print(''.join(strr))\n    print(' '.join(cnt_str))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()[:-1]\n    x = k\n    d = [0] * n\n    if k % 2:\n        s1 = ''\n        for i in range(n - 1):\n            if x > 0:\n                if s[i] == '1':\n                    d[i] = 1\n                    x -= 1\n                s1 += '1'\n            elif s[i] == '1':\n                s1 += '0'\n            else:\n                s1 += '1'\n        if x > 0:\n            d[-1] += x\n        if x % 2:\n            s1 += s[-1]\n        else:\n            s1 += str(1 - int(s[-1]))\n        print(s1)\n        print(' '.join(map(str, d)))\n    else:\n        s1 = ''\n        for i in range(n - 1):\n            if x > 0:\n                if s[i] == '0':\n                    d[i] = 1\n                    x -= 1\n                s1 += '1'\n            else:\n                s1 += s[i]\n        if x > 0:\n            d[-1] += x\n        if x % 2 == 0:\n            s1 += s[-1]\n        else:\n            s1 += str(1 - int(s[-1]))\n        print(s1)\n        print(' '.join(map(str, d)))", "t = int(input())\n\ndef changer(a):\n    if a == '1':\n        return '0'\n    return '1'\n\ndef solve():\n    (n, k) = map(int, input().split())\n    s = input()\n    res = ''\n    ans = n * [0]\n    z = k\n    for i in range(n):\n        cur = s[i]\n        if (z - k) % 2 == 1:\n            cur = changer(cur)\n        if cur == '1':\n            if k % 2 == 1:\n                ans[i] = 1\n                k -= 1\n            res += '1'\n        elif k % 2 == 0:\n            if k:\n                ans[i] = 1\n                k -= 1\n                res += '1'\n            else:\n                res += '0'\n        else:\n            res += '1'\n    ans[n - 1] += k\n    if k % 2 == 1:\n        res = res[:n - 1] + changer(res[-1])\n    print(res)\n    print(' '.join(map(str, ans)))\nfor i in range(t):\n    solve()", "a = []\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    if k == 0:\n        a.append(''.join(s))\n        a.append(' '.join('0' * n))\n        continue\n    res = [0] * n\n    cnt = 0\n    idx = n\n    for i in range(n):\n        if cnt >= k:\n            idx = i\n            break\n        if k & 1 and s[i] == '1' or (k & 1 == 0 and s[i] == '0'):\n            res[i] += 1\n            cnt += 1\n    k -= cnt\n    if k > 0:\n        tmp = '1' * (n - 1)\n        tmp += '0' if k & 1 else '1'\n        res[-1] += k\n    else:\n        tmp = '1' * idx\n        if cnt & 1:\n            for j in range(idx, n):\n                tmp += '1' if s[j] == '0' else '0'\n        else:\n            tmp += ''.join(s[idx:])\n    a.append(tmp)\n    a.append(' '.join((str(e) for e in res)))\nfor x in a:\n    print(x)", "T = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split())\n    kc = k\n    s = input()\n    ans = list(s)\n    flip = [0] * n\n    if k % 2:\n        for i in range(n):\n            if k == 0:\n                break\n            if s[i] == '1':\n                flip[i] = 1\n                k -= 1\n        if k > 0:\n            flip[-1] += k\n    else:\n        for i in range(n):\n            if k == 0:\n                break\n            if s[i] == '0':\n                flip[i] = 1\n                k -= 1\n        if k > 0:\n            flip[-1] += k\n    mapp = {'1': '0', '0': '1'}\n    for i in range(n):\n        if (kc - flip[i]) % 2:\n            ans[i] = mapp[ans[i]]\n    print(''.join(ans))\n    print(' '.join([str(f) for f in flip]))", "from collections import defaultdict\nimport sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input().rstrip()\n    s = list(map(lambda c: c == '1', s))\n    flipped = set()\n    if k % 2 != 0:\n        s = [not x for x in s]\n    for i in range(n):\n        if not s[i] and k > 0:\n            flipped.add(i)\n            s[i] = True\n            k -= 1\n        if k == 0:\n            break\n    last_bit_add_flips = 0\n    if k > 0:\n        last_bit_add_flips = k\n        if k % 2 != 0:\n            s[-1] = not s[-1]\n    result = ''.join(map(lambda x: '1' if x else '0', s))\n    print(result)\n    cnt_flip = list(map(lambda i: 1 if i in flipped else 0, range(n)))\n    cnt_flip[-1] += last_bit_add_flips\n    cnt_flip = ' '.join(map(str, cnt_flip))\n    print(cnt_flip)", "T = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split())\n    kk = k\n    s = input()\n    ans = list(s)\n    flip = [0] * n\n    if k % 2:\n        for i in range(n):\n            if k == 0:\n                break\n            if s[i] == '1':\n                flip[i] = 1\n                k -= 1\n        if k > 0:\n            flip[-1] += k\n    else:\n        for i in range(n):\n            if k == 0:\n                break\n            if s[i] == '0':\n                flip[i] = 1\n                k -= 1\n        if k > 0:\n            flip[-1] += k\n    mapp = {'1': '0', '0': '1'}\n    for i in range(n):\n        if (kk - flip[i]) % 2:\n            ans[i] = mapp[ans[i]]\n    print(''.join(ans))\n    print(' '.join([str(f) for f in flip]))", "def solve():\n    t = int(input())\n    for _ in range(t):\n        solve_one()\n\ndef solve_one():\n    (n, k) = [int(x) for x in input().split()]\n    bits = input().strip()\n    if k == 0:\n        print(bits)\n        print(' '.join(('0' for _ in bits)))\n        return\n    flipped = list(bits)\n    flip_num = 0\n    flip_pos_num = [0 for _ in bits]\n    for (i, b) in enumerate(bits):\n        current_b = flip(b, flip_num)\n        flipped[i] = '1'\n        if should_flip_others(current_b, k - flip_num):\n            flip_pos_num[i] = 1\n            flip_num += 1\n            if flip_num == k:\n                break\n    if i + 1 < len(bits):\n        i += 1\n        while i < len(bits):\n            flipped[i] = flip(flipped[i], flip_num)\n            i += 1\n    else:\n        flip_pos_num[-1] += k - flip_num\n        flipped[-1] = flip(flipped[-1], k - flip_num)\n    print(''.join(flipped))\n    print(' '.join((str(x) for x in flip_pos_num)))\n\ndef flip(cur_bit: str, flip_num: int) -> str:\n    if flip_num % 2 == 0:\n        return cur_bit\n    return '1' if cur_bit == '0' else '0'\n\ndef should_flip_others(cur_bit: str, remain_flip_num: int):\n    if remain_flip_num % 2 == 0:\n        return cur_bit == '0'\n    else:\n        return cur_bit == '1'\nsolve()", "def main():\n    t = int(input())\n    for _ in range(t):\n        (n, k) = map(int, input().split())\n        is_odd = k & 1\n        bits = [int(ele) for ele in input()]\n        counts = [0] * n\n        for i in range(n):\n            if bits[i] == is_odd:\n                bits[i] = int(k != 0)\n                if k != 0:\n                    counts[i] += 1\n                    k -= 1\n            else:\n                bits[i] = 1\n        if k != 0:\n            counts[n - 1] += k\n            bits[n - 1] ^= k & 1\n        print(''.join([str(ele) for ele in bits]))\n        print(' '.join([str(ele) for ele in counts]))\nmain()", "cases = int(input())\nfor ca in range(cases):\n    n_k = input()\n    (n_, k) = n_k.split()\n    n_ = int(n_)\n    k = int(k)\n    strr = list(input())\n    cnt_times = [0 for _ in range(n_)]\n    str_tmp = []\n    first_1 = True\n    first_1_index = 0\n    zero_count = 0\n    if k % 2 == 1:\n        for (i, s) in enumerate(strr):\n            if s == '0':\n                str_tmp += '1'\n            else:\n                str_tmp += '0'\n    else:\n        for (i, s) in enumerate(strr):\n            if s == '0':\n                zero_count += 1\n            str_tmp += s\n    str_res = []\n    for (i, s) in enumerate(str_tmp):\n        if k > 0:\n            if s == '0':\n                str_res += '1'\n                k -= 1\n                cnt_times[i] += 1\n            elif s == '1':\n                str_res += '1'\n        else:\n            str_res += s\n    cnt_times[n_ - 1] += k\n    if k % 2 == 1:\n        str_res[n_ - 1] = '0'\n    cnt_str = [str(x) for x in cnt_times]\n    print(''.join(str_res))\n    print(' '.join(cnt_str))", "cases = int(input(''))\nproblems = []\nfor test in range(0, cases):\n    (n, k) = input('').split(' ')\n    n = int(n)\n    k = int(k)\n    nums = list(input(''))\n    problems.append((n, k, nums))\nfor (n, k, nums) in problems:\n    flipped = []\n    for i in range(0, n):\n        flipped.append(0)\n    if k % 2 != 0:\n        for i in range(0, n):\n            if k == 0:\n                break\n            if nums[i] == '1':\n                k -= 1\n                nums[i] = '0'\n                flipped[i] += 1\n        for i in range(0, n):\n            if nums[i] == '0':\n                nums[i] = '1'\n            elif nums[i] == '1':\n                nums[i] = '0'\n    elif k % 2 == 0:\n        for i in range(0, n):\n            if k == 0:\n                break\n            if nums[i] == '0':\n                nums[i] = '1'\n                k -= 1\n                flipped[i] += 1\n    if k > 0:\n        if k % 2 != 0:\n            if nums[-1] == '0':\n                nums[-1] = '1'\n            else:\n                nums[-1] = '0'\n        flipped[-1] += k\n    print(''.join(nums))\n    print(' '.join([str(i) for i in flipped]))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    kc = k\n    s = list(input())\n    f = [0] * n\n    if k % 2 == 0:\n        for i in range(n):\n            if k <= 0:\n                break\n            f[i] = 1 if s[i] == '0' else 0\n            if f[i] == 1:\n                k -= 1\n    else:\n        for i in range(n):\n            if k <= 0:\n                break\n            f[i] = 1 if s[i] == '1' else 0\n            if f[i] == 1:\n                k -= 1\n    lc = kc - sum(f)\n    f[n - 1] += kc - sum(f)\n    for i in range(n):\n        if (kc - f[i]) % 2 == 1:\n            s[i] = '1' if s[i] == '0' else '0'\n        else:\n            s[i] = '1' if s[i] == '1' else '0'\n    print(''.join(s))\n    print(' '.join(map(str, f)))", "def solve(n, k, s):\n    f = [0] * n\n    if k == 0:\n        return (s, f)\n    if k & 1:\n        idx = 0\n        while idx < n:\n            if s[idx] == 1:\n                break\n            idx += 1\n        if idx == n:\n            idx -= 1\n        f[idx] += 1\n        for i in range(n):\n            if i == idx:\n                continue\n            s[i] = 1 - s[i]\n        k -= 1\n    assert k % 2 == 0\n    num_zero = n - sum(s)\n    idx_zero = []\n    for i in range(n):\n        if s[i] == 0:\n            idx_zero.append(i)\n    if num_zero & 1:\n        idx_zero.append(n - 1)\n    idx = 0\n    while idx < len(idx_zero) and k > 0:\n        s[idx_zero[idx]] = 1 - s[idx_zero[idx]]\n        s[idx_zero[idx + 1]] = 1 - s[idx_zero[idx + 1]]\n        f[idx_zero[idx]] += 1\n        f[idx_zero[idx + 1]] += 1\n        idx += 2\n        k -= 2\n    if k > 0:\n        f[n - 1] += k\n        k = 0\n    return (s, f)\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input().strip()\n    s = [*map(int, list(s))]\n    (s, f) = solve(n, k, s)\n    s = ''.join(map(str, s))\n    f = ' '.join(map(str, f))\n    print(s)\n    print(f)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, k) = map(int, input().split())\n    ans = list(input().strip())\n    d = ans[-1]\n    f = [0] * n\n    cnt = k\n    for i in range(n):\n        if not cnt:\n            if k % 2:\n                for j in range(i, n):\n                    if ans[j] == '0':\n                        ans[j] = '1'\n                    else:\n                        ans[j] = '0'\n            print(''.join(ans))\n            print(*f)\n            return\n        if ans[i] == '0':\n            f[i] = 0 if k % 2 else 1\n            cnt -= f[i]\n        else:\n            f[i] = 1 if k % 2 else 0\n            cnt -= f[i]\n        ans[i] = '1'\n    f[-1] += cnt\n    if cnt % 2 == 1:\n        ans[-1] = '0'\n    print(''.join(ans))\n    print(*f)\nfor _ in range(int(input())):\n    solve()", "def solve():\n    (n, k) = list(map(int, input().split(' ')))\n    s = list(input())\n    freq = [0] * n\n    K = k\n    for i in range(n):\n        if k > 0:\n            if s[i] == '1':\n                if K & 1:\n                    freq[i] += 1\n                    k -= 1\n            elif s[i] == '0':\n                s[i] = '1'\n                if K & 1 == 0:\n                    freq[i] += 1\n                    k -= 1\n        elif K & 1:\n            s[i] = '1' if s[i] == '0' else '0'\n    if k > 0:\n        freq[-1] += k\n        if k & 1:\n            s[-1] = '1' if s[-1] == '0' else '0'\n    print(''.join(s))\n    print(*freq)\nfor t in range(int(input())):\n    solve()", "t = int(input())\nout = ''\nfor _ in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    string = input()\n    counts = [0] * n\n    count = 0\n    ans = ''\n    for i in range(n - 1):\n        if count == k:\n            if k % 2 == 0:\n                ans += string[i:-1]\n            else:\n                for x in string[i:-1]:\n                    ans += str(1 - int(x))\n            break\n        ans += '1'\n        if k % 2 == int(string[i]):\n            count += 1\n            counts[i] = 1\n    counts[-1] += k - count\n    if (counts[-1] + int(string[-1])) % 2 == k % 2:\n        ans += '0'\n    else:\n        ans += '1'\n    out += ans + '\\n'\n    for x in counts:\n        out += str(x) + ' '\n    out += '\\n'\nprint(out)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    str = input()\n    ans = ''\n    indexes = [0] * n\n    ost = k % 2\n    if ost == 0:\n        for i in range(n):\n            if k == 0:\n                ans += str[i:]\n                break\n            if str[i] == '1':\n                ans += '1'\n            else:\n                k -= 1\n                ans += '1'\n                indexes[i] += 1\n    else:\n        for i in range(n):\n            if k == 0:\n                for j in str[i:]:\n                    if j == '1':\n                        ans += '0'\n                    else:\n                        ans += '1'\n                break\n            if str[i] == '1':\n                k -= 1\n                ans += '1'\n                indexes[i] += 1\n            else:\n                ans += '1'\n    if k % 2 == 1:\n        if ans[-1] == '0':\n            ans = ans[:-1] + '1'\n        else:\n            ans = ans[:-1] + '0'\n    indexes[-1] += k\n    print(ans)\n    print(*indexes)", "import math as m\ni = input()\ninp = []\nfor a in range(0, int(i)):\n    inp.append([[int(x) for x in input().split()], [int(x) for x in list(input())]])\nfor [[n, k], arr] in inp:\n    if k % 2 == 1:\n        arr = [1 - x for x in arr]\n    indices = n * [0]\n    rem = k\n    pos = 0\n    while rem > 0 and pos <= n - 1:\n        if arr[pos] == 0:\n            indices[pos] += 1\n            arr[pos] = 1 - arr[pos]\n            rem -= 1\n        pos += 1\n    indices[-1] += rem\n    if rem % 2 == 1:\n        arr[-1] = 1 - arr[-1]\n    print(''.join([str(x) for x in arr]))\n    print(' '.join([str(x) for x in indices]))", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().split())\n    s = list(input())\n    used = 0\n    op = []\n    for (i, v) in enumerate(s):\n        if used % 2:\n            if s[i] == '1':\n                s[i] = '0'\n            else:\n                s[i] = '1'\n            if v == '1':\n                v = '0'\n            else:\n                v = '1'\n        if i == len(s) - 1:\n            op += [k]\n            break\n        if k > 0:\n            if v == '1' and k % 2:\n                k -= 1\n                used += 1\n                op += [1]\n            elif v == '0' and k % 2 == 0:\n                k -= 1\n                used += 1\n                op += [1]\n            else:\n                op += [0]\n            (s[i], v) = ('1', '1')\n    while len(op) < n:\n        op += [0]\n    for i in range(len(op)):\n        op[i] = str(op[i])\n    op = ' '.join(op)\n    print(''.join(s))\n    print(op)", "for _ in [0] * int(input()):\n    (n, k0) = map(int, input().split())\n    s = input()\n    i = 0\n    k = k0\n    y = [0] * n\n    if k % 2 == 0:\n        z = 0\n        fe = 1\n        fo = 0\n    else:\n        z = 1\n        fo = 1\n        fe = 0\n    while k > 0 and i < n - 1:\n        if s[i] == '1':\n            y[i] = z\n            k = k - fo\n        else:\n            k = k - fe\n            y[i] = 1 - z\n        i = i + 1\n    b = '1' * i\n    if k > 0:\n        y[n - 1] = k\n        if (k0 - k) % 2 == 1:\n            b = b + str(1 - int(s[n - 1]))\n        else:\n            b = b + s[n - 1]\n    elif k0 % 2 == 1:\n        for j in s[i:]:\n            b = b + str(1 - int(j))\n    else:\n        b = b + s[i:]\n    if k0 == 0:\n        b = s\n    print(b)\n    print(*y)", "from sys import stdin\ninput = stdin.readline\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input().strip()\n    ans = ''\n    aa = []\n    left = k\n    for i in range(n):\n        if k % 2 == 1:\n            if s[i] == '1':\n                if left:\n                    left -= 1\n                    ans += '1'\n                    aa.append(1)\n                else:\n                    ans += '0'\n                    aa.append(0)\n            else:\n                ans += '1'\n                aa.append(0)\n        elif s[i] == '1':\n            ans += '1'\n            aa.append(0)\n        elif left:\n            left -= 1\n            ans += '1'\n            aa.append(1)\n        else:\n            ans += '0'\n            aa.append(0)\n    ans = ans[:-1] + str((int(ans[-1]) + left) % 2)\n    aa[-1] += left\n    print(ans)\n    print(*aa)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    ans = [0] * n\n    fin = [0] * n\n    s = input().strip()\n    arr = []\n    for e in s:\n        arr.append(int(e))\n    cng = 0\n    i = 0\n    for ele in arr:\n        cur = 0\n        if cng % 2 != 0:\n            if ele == 0:\n                cur = 1\n        elif ele == 1:\n            cur = 1\n        if k == 0:\n            fin[i] = cur\n        else:\n            if i == n - 1:\n                ans[n - 1] = k\n                fin[i] = cur\n                break\n            if cur == 1:\n                if k % 2 == 0:\n                    ans[i] = 0\n                else:\n                    ans[i] = 1\n                    cng += 1\n                    k -= 1\n                fin[i] = 1\n            else:\n                if k % 2 != 0:\n                    ans[i] = 0\n                else:\n                    ans[i] = 1\n                    cng += 1\n                    k -= 1\n                fin[i] = 1\n        i += 1\n    print(''.join(list(map(str, fin))))\n    print(' '.join(list(map(str, ans))))", "cases = int(input())\nwhile cases:\n    cases -= 1\n    (n, k) = map(int, input().split())\n    s = input()\n    i = 0\n    sol = [0] * n\n    kk = k\n    for i in range(len(s)):\n        if k == 0:\n            break\n        if kk % 2 == 1 and s[i] == '1':\n            sol[i] += 1\n            k -= 1\n        elif kk % 2 == 0 and s[i] == '0':\n            sol[i] += 1\n            k -= 1\n    sol[n - 1] += k\n    ret = ''\n    for i in range(n):\n        flip = kk - sol[i]\n        if flip % 2 == 0:\n            ret += s[i]\n        elif s[i] == '1':\n            ret += '0'\n        else:\n            ret += '1'\n    print(ret)\n    printsol = ''\n    for i in sol:\n        printsol += str(i) + ' '\n    print(printsol)", "import math, bisect, heapq, random, sys, itertools\nsys.setrecursionlimit(10 ** 5)\ninput = sys.stdin.readline\n\ndef gprint(t, ans=''):\n    print(f'Case #{t + 1}:', ans)\nints = lambda : list(map(int, input().split()))\nalpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\np2 = [1]\np = 10 ** 9 + 7\nANS = []\nfor t in range(int(input())):\n    (n, k) = ints()\n    m = k\n    a = input().strip()\n    ans = [0] * n\n    res = ''\n    v = 0\n    for i in range(n):\n        if k == 0:\n            break\n        if a[i] == '1':\n            if m % 2 == 1:\n                ans[i] = 1\n                k -= 1\n        elif m % 2 == 0:\n            ans[i] = 1\n            k -= 1\n        res += '1'\n    if k:\n        ans[-1] += k\n        if k % 2:\n            v = 1\n    for i in range(len(res), n):\n        if m % 2 == 0:\n            res += a[i]\n        elif a[i] == '1':\n            res += '0'\n        else:\n            res += '1'\n    if v:\n        if res[-1] == '1':\n            res = res[:-1] + '0'\n        else:\n            res = res[:-1] + '1'\n    print(res)\n    print(*ans)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    s = input()\n    res = list()\n    for x in s:\n        res.append(x)\n    if b % 2 == 1:\n        for i in range(a):\n            if res[i] == '1':\n                res[i] = '0'\n            else:\n                res[i] = '1'\n    ans = [0 for i in range(a)]\n    for i in range(a):\n        if res[i] == '0' and b > 0:\n            res[i] = '1'\n            ans[i] += 1\n            b -= 1\n    if b > 0:\n        if b % 2 == 1:\n            if res[a - 1] == '1':\n                res[a - 1] = '0'\n            else:\n                res[a - 1] = '1'\n        ans[a - 1] += b\n    print(''.join(res))\n    print(*ans)", "I = lambda : [int(i) for i in input().split()]\nfor _ in range(I()[0]):\n    (n, k) = I()\n    s = input()\n    if k % 2:\n        s = [{'0': '1', '1': '0'}[i] for i in s]\n    (l, ns) = (n * [0], '')\n    for (i, v) in list(enumerate(s))[:-1]:\n        if v == '0' and k > 0:\n            ns += '1'\n            l[i] = 1\n            k -= 1\n        else:\n            ns += v\n    l[-1] = k\n    ns += {'0': '1', '1': '0'}[s[-1]] if k % 2 else s[-1]\n    print(ns)\n    print(*l)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    bits = list(input())\n    flips = [0] * len(bits)\n    used_flips = 0\n    for j in range(n):\n        b = bits[j]\n        if used_flips < k:\n            if j < n - 1:\n                if b == '0':\n                    if k % 2 == 0:\n                        flips[j] = 1\n                        used_flips += 1\n                elif k % 2 == 1:\n                    flips[j] = 1\n                    used_flips += 1\n            else:\n                flips[j] = k - used_flips\n        if (k - flips[j]) % 2 == 1:\n            bits[j] = str(1 - int(bits[j]))\n    print(''.join([str(x) for x in bits]))\n    print(' '.join([str(x) for x in flips]))", "I = lambda : [int(i) for i in input().split()]\nfor _ in range(I()[0]):\n    (n, k) = I()\n    s = input()\n    if k % 2:\n        s = [{'0': '1', '1': '0'}[i] for i in s]\n    (l, ns) = (n * [0], '')\n    for (i, v) in list(enumerate(s))[:-1]:\n        if v == '0' and k > 0:\n            ns += '1'\n            l[i] = 1\n            k -= 1\n        else:\n            ns += v\n    l[-1] = k\n    ns += {'0': '1', '1': '0'}[s[-1]] if k % 2 else s[-1]\n    print(ns)\n    print(*l)", "import sys\ninput = sys.stdin.readline\nI = lambda : list(map(int, input().split()))\nfor tc in range(int(input())):\n    (n, k) = I()\n    ar = list(input().strip())\n    temp = [0] * n\n    if k % 2 == 0:\n        if ar[0] == '0' and k:\n            k -= 1\n            temp[0] = 1\n        for i in range(1, n):\n            if k and ar[i] == '0':\n                k -= 1\n                temp[i] += 1\n            elif not k:\n                break\n        temp[-1] += k\n    else:\n        if ar[0] == '1':\n            k -= 1\n            temp[0] = 1\n        for i in range(1, n):\n            if k and ar[i] == '1':\n                k -= 1\n                temp[i] += 1\n            elif not k:\n                break\n        temp[-1] += k\n    now = sum(temp)\n    ans = [''] * n\n    for i in range(n):\n        if (now - temp[i]) % 2:\n            ans[i] = '1' if ar[i] == '0' else '0'\n        else:\n            ans[i] = ar[i]\n    print(''.join(ans))\n    print(*temp)", "addy = int(input())\nfor k in range(addy):\n    (n, o) = map(int, input().split())\n    s = input()\n    out = ''\n    l = []\n    if o % 2:\n        for i in range(n):\n            if o >= 1 and s[i] == '1' and (i != n - 1):\n                out += '1'\n                o -= 1\n                l.append(1)\n            elif o >= 1 and i == n - 1:\n                if o % 2:\n                    if s[i] == '1':\n                        out += '1'\n                    else:\n                        out += '0'\n                elif s[i] == '1':\n                    out += '0'\n                else:\n                    out += '1'\n                l.append(o)\n                o = 0\n            elif o == 0:\n                if s[i] == '1':\n                    out += '0'\n                else:\n                    out += '1'\n                l.append(0)\n            else:\n                out += '1'\n                l.append(0)\n    else:\n        for i in range(n):\n            if o >= 1 and s[i] == '0' and (i != n - 1):\n                out += '1'\n                o -= 1\n                l.append(1)\n            elif o >= 1 and i == n - 1:\n                if o % 2:\n                    if s[i] == '1':\n                        out += '0'\n                    else:\n                        out += '1'\n                elif s[i] == '1':\n                    out += '1'\n                else:\n                    out += '0'\n                l.append(o)\n                o = 0\n            elif o == 0:\n                out += s[i]\n                l.append(0)\n            else:\n                out += '1'\n                l.append(0)\n    print(out)\n    print(*l)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    a = []\n    for j in s:\n        a.append(j)\n    l = [0] * n\n    c = 0\n    for j in range(n):\n        if c < k and (a[j] == '1' and k % 2 == 1):\n            l[j] += 1\n            c += 1\n            a[j] = '1'\n        elif c < k and (a[j] == '0' and k % 2 == 0):\n            l[j] += 1\n            c += 1\n            a[j] = '1'\n        elif a[j] == '0' and k % 2 == 1:\n            a[j] = '1'\n        elif a[j] == '1' and k % 2 == 1:\n            a[j] = '0'\n    d = k - c\n    if d % 2 == 1:\n        if a[-1] == '1':\n            a[-1] = '0'\n        else:\n            a[-1] = '1'\n        l[-1] += d\n    else:\n        l[-1] += d\n    print(''.join(a))\n    print(*l)", "from sys import stdin\ninput = stdin.readline\nfor test in range(int(input())):\n    (n, k) = map(int, input().split())\n    res = [0] * n\n    s = input()\n    kc = k\n    if k & 1:\n        i = 0\n        while k:\n            if i == n - 1:\n                res[i] = k\n                break\n            if s[i] == '1':\n                res[i] = 1\n                k -= 1\n            i += 1\n    else:\n        i = 0\n        while k:\n            if i == n - 1:\n                res[i] = k\n                break\n            if s[i] == '0':\n                res[i] = 1\n                k -= 1\n            i += 1\n    sn = ''\n    for i in range(n):\n        if kc - res[i] & 1:\n            if s[i] == '0':\n                sn += '1'\n            else:\n                sn += '0'\n        else:\n            sn += s[i]\n    print(sn)\n    print(*res)", "import time\nfrom sys import stdin\ninput = stdin.readline\ntime.sleep(15 * 10 ** (-3))\nfor test in range(int(input())):\n    (n, k) = map(int, input().split())\n    res = [0] * n\n    s = input()\n    kc = k\n    if k & 1:\n        i = 0\n        while k:\n            if i == n - 1:\n                res[i] = k\n                break\n            if s[i] == '1':\n                res[i] = 1\n                k -= 1\n            i += 1\n    else:\n        i = 0\n        while k:\n            if i == n - 1:\n                res[i] = k\n                break\n            if s[i] == '0':\n                res[i] = 1\n                k -= 1\n            i += 1\n    sn = ''\n    for i in range(n):\n        if kc - res[i] & 1:\n            if s[i] == '0':\n                sn += '1'\n            else:\n                sn += '0'\n        else:\n            sn += s[i]\n    print(sn)\n    print(*res)", "import time\nfrom sys import stdin\ninput = stdin.readline\ntime.sleep(150 * 10 ** (-3))\nfor test in range(int(input())):\n    (n, k) = map(int, input().split())\n    res = [0] * n\n    s = input()\n    kc = k\n    if k & 1:\n        i = 0\n        while k:\n            if i == n - 1:\n                res[i] = k\n                break\n            if s[i] == '1':\n                res[i] = 1\n                k -= 1\n            i += 1\n    else:\n        i = 0\n        while k:\n            if i == n - 1:\n                res[i] = k\n                break\n            if s[i] == '0':\n                res[i] = 1\n                k -= 1\n            i += 1\n    sn = ''\n    for i in range(n):\n        if kc - res[i] & 1:\n            if s[i] == '0':\n                sn += '1'\n            else:\n                sn += '0'\n        else:\n            sn += s[i]\n    print(sn)\n    print(*res)", "def solve():\n    (n, k) = map(int, input().split())\n    s = input()\n    rs = list(s)\n    nk = k\n    if k % 2 == 1:\n        rs = ['1' if i == '0' else '0' for i in rs]\n    ans = [0 for _ in range(n)]\n    lt = 0\n    for i in range(n):\n        if k == 0:\n            break\n        if s[i] == '0':\n            if nk % 2 == 0:\n                ans[i] = 1\n                k -= 1\n        elif nk % 2 == 1:\n            ans[i] = 1\n            k -= 1\n        lt += 1\n    ans[-1] += k\n    change = [True if (nk - ans[i]) % 2 == 1 else False for i in range(n)]\n    ns = [s[i] if change[i] == False else '1' if s[i] == '0' else '0' for i in range(n)]\n    print(''.join(ns))\n    print(*ans, sep=' ')\ntc = int(input())\nfor _ in range(tc):\n    solve()", "import time\nfrom sys import stdin\ninput = stdin.readline\ntime.sleep(1500 * 10 ** (-3))\nfor test in range(int(input())):\n    (n, k) = map(int, input().split())\n    res = [0] * n\n    s = input()\n    kc = k\n    if k & 1:\n        i = 0\n        while k:\n            if i == n - 1:\n                res[i] = k\n                break\n            if s[i] == '1':\n                res[i] = 1\n                k -= 1\n            i += 1\n    else:\n        i = 0\n        while k:\n            if i == n - 1:\n                res[i] = k\n                break\n            if s[i] == '0':\n                res[i] = 1\n                k -= 1\n            i += 1\n    sn = ''\n    for i in range(n):\n        if kc - res[i] & 1:\n            if s[i] == '0':\n                sn += '1'\n            else:\n                sn += '0'\n        else:\n            sn += s[i]\n    print(sn)\n    print(*res)", "t = int(input())\nfor qwer in range(t):\n    (n, k) = map(int, input().split())\n    sp = list(input())\n    sp = list(map(int, sp))\n    ch = False\n    if k % 2 == 0:\n        ch = True\n    otv = [0] * n\n    for i in range(n):\n        if sp[i] == 0 and ch and (k > 0):\n            otv[i] = 1\n            sp[i] = 1\n            k -= 1\n        elif sp[i] == 1 and (not ch) and (k > 0):\n            otv[i] = 1\n            sp[i] = 1\n            k -= 1\n        elif sp[i] == 0 and ch and (k <= 0):\n            sp[i] = 0\n            k -= 1\n        elif sp[i] == 1 and (not ch) and (k <= 0):\n            sp[i] = 0\n            k -= 1\n        else:\n            sp[i] = 1\n    if k > 0 and k % 2 == 0:\n        otv[-1] += k\n    elif k > 0 and k % 2 == 1:\n        otv[-1] += k\n        sp[-1] = 0\n    print(''.join(list(map(str, sp))))\n    print(*otv)", "tc = int(input())\nfor _ in range(tc):\n    (n, k) = list(map(int, input().split()))\n    s = list(input())\n    ans = [0] * n\n    t = k\n    for i in range(n):\n        c = int(s[i])\n        if k & 1 == c & 1:\n            if t != 0:\n                ans[i] = 1\n                s[i] = '1'\n                t -= 1\n            else:\n                s[i] = '0'\n        else:\n            s[i] = '1'\n    if t != 0:\n        ans[n - 1] += t\n        if t % 2 != 0:\n            s[n - 1] = '0'\n    print(''.join(s))\n    for i in ans:\n        print(i, end=' ')\n    print()", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    a = []\n    for j in s:\n        a.append(j)\n    l = [0] * n\n    c = 0\n    for j in range(n):\n        if c < k and (a[j] == '1' and k % 2 == 1):\n            l[j] += 1\n            c += 1\n            a[j] = '1'\n        elif c < k and (a[j] == '0' and k % 2 == 0):\n            l[j] += 1\n            c += 1\n            a[j] = '1'\n        elif a[j] == '0' and k % 2 == 1:\n            a[j] = '1'\n        elif a[j] == '1' and k % 2 == 1:\n            a[j] = '0'\n    d = k - c\n    if d % 2 == 1:\n        if a[-1] == '1':\n            a[-1] = '0'\n        else:\n            a[-1] = '1'\n        l[-1] += d\n    else:\n        l[-1] += d\n    print(''.join(a))\n    print(*l)", "for test in range(int(input())):\n    (n, k) = map(int, input().split())\n    res = [0] * n\n    s = input()\n    kc = k\n    if k & 1:\n        i = 0\n        while k:\n            if i == n - 1:\n                res[i] = k\n                break\n            if s[i] == '1':\n                res[i] = 1\n                k -= 1\n            i += 1\n    else:\n        i = 0\n        while k:\n            if i == n - 1:\n                res[i] = k\n                break\n            if s[i] == '0':\n                res[i] = 1\n                k -= 1\n            i += 1\n    sn = ''\n    for i in range(n):\n        if kc - res[i] & 1:\n            if s[i] == '0':\n                sn += '1'\n            else:\n                sn += '0'\n        else:\n            sn += s[i]\n    print(sn)\n    print(*res)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    ans = ''\n    ans1 = [0] * n\n    k1 = 0\n    for i in range(n):\n        if k == 0:\n            if k1 % 2 == 0:\n                ans = ans + s[i]\n            elif s[i] == '1':\n                ans += '0'\n            else:\n                ans += '1'\n        elif i == n - 1:\n            ans1[i] = k\n            if k1 % 2 == 0:\n                ans += s[i]\n            elif s[i] == '1':\n                ans += '0'\n            else:\n                ans += '1'\n        elif k % 2 == 0:\n            if s[i] == '0' and k1 % 2 == 0 or (s[i] == '1' and k1 % 2 == 1):\n                ans1[i] = 1\n                ans = ans + '1'\n                k1 += 1\n                k -= 1\n            else:\n                ans1[i] = 0\n                ans = ans + '1'\n        elif s[i] == '0' and k1 % 2 == 0 or (s[i] == '1' and k1 % 2 == 1):\n            ans1[i] = 0\n            ans = ans + '1'\n        else:\n            ans1[i] = 1\n            ans = ans + '1'\n            k1 += 1\n            k -= 1\n    print(ans)\n    print(*ans1)", "t = int(input())\n\ndef f(n, k, s):\n    arr = [0 for i in range(n)]\n    f_sum = 0\n    s_new = ''\n    for i in range(len(s)):\n        if s[i] + k % 2 != 1 and f_sum < k:\n            arr[i] += 1\n            f_sum += 1\n            s_new += '1'\n        elif k % 2 == 0:\n            s_new += str(s[i])\n        elif s[i] == 1:\n            s_new += '0'\n        else:\n            s_new += '1'\n    if f_sum != k:\n        arr[-1] += k - f_sum\n        s_new = s_new[:len(s_new) - 1]\n        if (k - arr[-1]) % 2 != 0:\n            if s[-1] == 0:\n                s_new += '1'\n            else:\n                s_new += '0'\n        else:\n            s_new += str(s[-1])\n    print(s_new)\n    for i in arr:\n        print(i, end=' ')\n    print('')\nfor i in range(t):\n    line = [int(j) for j in input().split()]\n    n = line[0]\n    k = line[1]\n    s = [int(j) for j in input()]\n    f(n, k, s)", "from math import inf\nfrom collections import *\nimport math, os, sys, heapq, bisect, random, threading\nfrom functools import lru_cache\nfrom itertools import *\n\ndef inp():\n    return sys.stdin.readline().rstrip('\\r\\n')\n\ndef out(var):\n    sys.stdout.write(str(var))\n\ndef inpu():\n    return int(inp())\n\ndef lis():\n    return list(map(int, inp().split()))\n\ndef stringlis():\n    return list(map(str, inp().split()))\n\ndef sep():\n    return map(int, inp().split())\n\ndef strsep():\n    return map(str, inp().split())\n\ndef fsep():\n    return map(float, inp().split())\n(M, M1) = (1000000007, 998244353)\n\ndef main():\n    how_much_noob_I_am = 1\n    how_much_noob_I_am = inpu()\n    for _ in range(how_much_noob_I_am):\n        (n, k) = sep()\n        s = list(inp())\n        r = [0] * n\n        copy = k\n        for i in range(n):\n            if k == 0:\n                break\n            if copy % 2 == 1 and s[i] == '1':\n                k -= 1\n                r[i] += 1\n            elif copy % 2 == 0 and s[i] == '0':\n                k -= 1\n                r[i] += 1\n        ans = ''\n        r[-1] += k\n        k = copy\n        for i in range(n):\n            tot = k - r[i]\n            if tot % 2 == 0:\n                ans += s[i]\n            else:\n                ans += str(int(s[i]) ^ 1)\n        print(ans)\n        print(*r)\nmain()", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input().rstrip()\n    kc = k\n    f = [0] * n\n    for i in range(n):\n        if k == 0:\n            break\n        elif kc % 2 == 0 and s[i] == '0':\n            f[i] += 1\n            k -= 1\n        elif kc % 2 == 1 and s[i] == '1':\n            f[i] += 1\n            k -= 1\n    f[n - 1] += k\n    ans = ''\n    for i in range(n):\n        flip = kc - f[i]\n        if flip % 2 == 0:\n            ans += s[i]\n        elif s[i] == '0':\n            ans += '1'\n        else:\n            ans += '0'\n    print(ans)\n    print(*f)", "loopcount = int(input())\nfor loop in range(loopcount):\n    x = input()\n    x = x.split(' ')\n    x = list(map(int, x))\n    s = input()\n    s = list(s)\n    movesLeft = x[1]\n    odd = True\n    if x[1] % 2 == 0:\n        odd = False\n    output = ''\n    sequence = [0] * x[0]\n    for i in range(x[0]):\n        if movesLeft == 0:\n            break\n        if odd and s[i] == '1':\n            sequence[i] += 1\n            movesLeft -= 1\n        if not odd and s[i] == '0':\n            sequence[i] += 1\n            movesLeft -= 1\n    sequence[x[0] - 1] += movesLeft\n    if not odd:\n        for i in range(x[0]):\n            if sequence[i] % 2 == 1:\n                if s[i] == '1':\n                    output += '0'\n                else:\n                    output += '1'\n            else:\n                output += s[i]\n    if odd:\n        for i in range(x[0]):\n            if sequence[i] % 2 == 0:\n                if s[i] == '1':\n                    output += '0'\n                else:\n                    output += '1'\n            else:\n                output += s[i]\n    print(output)\n    for i in range(x[0]):\n        print(sequence[i], end=' ')\n    print()", "import math\nfrom collections import defaultdict\nt = int(input())\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().split())\n    s = input()\n    ans = ''\n    lis = []\n    tot = []\n    if k % 2 == 1:\n        for j in range(0, len(s)):\n            if k > 0 and s[j] == '1':\n                tot.append(1)\n                k -= 1\n            else:\n                tot.append(0)\n        if k > 0:\n            tot[-1] = tot[-1] + k\n        final = ''\n        for j in range(0, len(s)):\n            if s[j] == '1':\n                if tot[j] % 2 == 1:\n                    final = final + '1'\n                else:\n                    final = final + '0'\n            elif tot[j] % 2 == 0:\n                final = final + '1'\n            else:\n                final = final + '0'\n        print(final)\n        for j in tot:\n            print(j, end=' ')\n        print()\n    else:\n        for j in range(0, len(s)):\n            if k > 0 and s[j] == '0':\n                tot.append(1)\n                k -= 1\n            else:\n                tot.append(0)\n        if k > 0:\n            tot[-1] = tot[-1] + k\n        final = ''\n        for j in range(0, len(s)):\n            if s[j] == '1':\n                if tot[j] % 2 == 0:\n                    final = final + '1'\n                else:\n                    final = final + '0'\n            elif tot[j] % 2 == 1:\n                final = final + '1'\n            else:\n                final = final + '0'\n        print(final)\n        for j in tot:\n            print(j, end=' ')\n        print()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    f = [0] * n\n    tf = k\n    for i in range(n):\n        if k == 0:\n            break\n        if tf % 2 == 0 and s[i] == '0':\n            f[i] += 1\n            k -= 1\n        elif tf % 2 == 1 and s[i] == '1':\n            f[i] += 1\n            k -= 1\n    f[n - 1] = f[n - 1] + k\n    ans = ''\n    for i in range(n):\n        flips = tf - f[i]\n        if flips % 2 == 0:\n            ans += s[i]\n        elif s[i] == '1':\n            ans += '0'\n        else:\n            ans += '1'\n    print(ans)\n    print(*f)", "from math import ceil\n\ndef solve(s):\n    pass\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    f = [0] * n\n    tf = k\n    for i in range(n):\n        if k == 0:\n            break\n        elif tf % 2 == 0 and s[i] == '0':\n            f[i] += 1\n            k -= 1\n        elif tf % 2 != 0 and s[i] == '1':\n            f[i] += 1\n            k -= 1\n    f[n - 1] += k\n    ans = ''\n    for i in range(n):\n        flips = tf - f[i]\n        if flips % 2 == 0:\n            ans += s[i]\n        elif s[i] == '1':\n            ans += '0'\n        else:\n            ans += '1'\n    print(ans)\n    print(*f)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    ans = [0] * n\n    kc = k\n    for i in range(n):\n        if k == 0:\n            break\n        if kc & 1 == 1 and s[i] == '1':\n            ans[i] += 1\n            k -= 1\n        elif kc & 1 == 0 and s[i] == '0':\n            ans[i] += 1\n            k -= 1\n    ans[n - 1] += k\n    an2 = ''\n    for i in range(n):\n        fl = kc - ans[i]\n        if fl & 1 == 0:\n            an2 += s[i]\n        elif s[i] == '0':\n            an2 += '1'\n        else:\n            an2 += '0'\n    print(an2)\n    print(*ans)", "t = int(input())\n\ndef solve(n, k, bits):\n    if k % 2 == 0:\n        selected = [0 for i in range(n)]\n        final = [i for i in bits]\n        for i in range(n):\n            if k == 0:\n                return (selected, final)\n            elif final[i] == 0:\n                k -= 1\n                selected[i] += 1\n                final[i] += 1\n        selected[-1] += k\n        if k % 2 == 1:\n            final[-1] = 0\n        return (selected, final)\n    if k % 2 == 1:\n        selected = [0 for i in range(n)]\n        final = [1 - i for i in bits]\n        for i in range(n):\n            if k == 0:\n                return (selected, final)\n            elif final[i] == 0:\n                k -= 1\n                selected[i] += 1\n                final[i] += 1\n        selected[-1] += k\n        if k % 2 == 1:\n            final[-1] = 0\n        return (selected, final)\nfor i in range(t):\n    (n, k) = [int(i) for i in input().split()]\n    bits = [int(i) for i in input()]\n    (selected, final) = solve(n, k, bits)\n    final_str = ''\n    for i in range(len(final)):\n        final_str += str(final[i])\n    print(final_str)\n    print(*selected)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = input()\n    count = [0] * n\n    index = 0\n    inverted = False\n    ans = ''\n    while index < n and k > 0:\n        if lst[index] == '1' and inverted == False or (lst[index] == '0' and inverted):\n            if k % 2 == 0:\n                index += 1\n            else:\n                k -= 1\n                if inverted:\n                    inverted = False\n                else:\n                    inverted = True\n                count[index] += 1\n                index += 1\n            ans += '1'\n        else:\n            if k % 2 != 0:\n                index += 1\n            else:\n                k -= 1\n                if inverted:\n                    inverted = False\n                else:\n                    inverted = True\n                count[index] += 1\n                index += 1\n            ans += '1'\n    if len(ans) == n:\n        count[-1] += k\n        if k % 2 != 0:\n            x = ans[:n - 1]\n            if ans[-1] == '1':\n                x += '0'\n            else:\n                x += '1'\n            ans = x\n    else:\n        for i in range(index, n):\n            if lst[i] == '1' and inverted == False or (lst[i] == '0' and inverted):\n                ans += '1'\n            else:\n                ans += '0'\n    print(ans)\n    for i in count:\n        print(i, end=' ')\n    print()", "t = int(input())\nwhile t > 0:\n    c = input().split()\n    (n, k) = (int(c[0]), int(c[1]))\n    a = input()\n    b = [0 for i in range(n)]\n    if k % 2 == 0:\n        cur = 0\n        i = 0\n        while cur < k and i < n:\n            if i == n - 1:\n                b[i] = k - cur\n            elif a[i] == '0':\n                b[i] = 1\n                cur += 1\n            i += 1\n    else:\n        cur = 0\n        i = 0\n        while cur < k and i < n:\n            if i == n - 1:\n                b[i] = k - cur\n            elif a[i] == '1':\n                b[i] = 1\n                cur += 1\n            i += 1\n    ans = ''\n    for i in range(n):\n        if (k + b[i]) % 2:\n            if a[i] == '0':\n                ans += '1'\n            else:\n                ans += '0'\n        else:\n            ans += a[i]\n    print(ans)\n    print(*b, sep=' ')\n    t -= 1", "for iiii in range(int(input())):\n    (n, m) = map(int, input().split())\n    q = input()\n    q1 = [0 for i in range(n)]\n    summ = m\n    for i in range(n):\n        if summ > 0:\n            if q[i] == '1' and m % 2 == 1:\n                q1[i] += 1\n                summ -= 1\n            elif q[i] == '0' and m % 2 == 0:\n                q1[i] += 1\n                summ -= 1\n    if summ > 0:\n        if summ % 2 == 0:\n            q1[n - 1] += summ\n        elif n == 1:\n            q1[0] += summ\n        else:\n            q1[n - 1] += 1\n            q1[n - 1] = q1[n - 1] + summ - 1\n    qwe = ''\n    for i in range(n):\n        if q[i] == '0':\n            if (m - q1[i]) % 2 == 0:\n                qwe = qwe + '0'\n            else:\n                qwe = qwe + '1'\n        elif q[i] == '1':\n            if (m - q1[i]) % 2 == 0:\n                qwe = qwe + '1'\n            else:\n                qwe = qwe + '0'\n    print(qwe)\n    print(*q1)", "def rev(b):\n    b_ = ''\n    for c in b:\n        if c == '1':\n            b_ += '0'\n        else:\n            b_ += '1'\n    return b_\n\ndef printm(b, arr):\n    for c in range(len(b)):\n        print(b[c] if arr[c] % 2 == 0 else rev(b[c]), end='')\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    b = input()\n    if k % 2 == 1:\n        b = rev(b)\n    count = 0\n    arr = [0 for j in range(n)]\n    for c in range(n):\n        if count == k:\n            break\n        if b[c] == '0':\n            count += 1\n            arr[c] += 1\n    arr[-1] += k - count\n    printm(b, arr)\n    print()\n    print(' '.join([str(q) for q in arr]))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = input()\n    count = [0] * n\n    index = 0\n    inverted = False\n    ans = ''\n    while index < n and k > 0:\n        if lst[index] == '1' and inverted == False or (lst[index] == '0' and inverted):\n            if k % 2 == 0:\n                index += 1\n            else:\n                k -= 1\n                if inverted:\n                    inverted = False\n                else:\n                    inverted = True\n                count[index] += 1\n                index += 1\n            ans += '1'\n        else:\n            if k % 2 != 0:\n                index += 1\n            else:\n                k -= 1\n                if inverted:\n                    inverted = False\n                else:\n                    inverted = True\n                count[index] += 1\n                index += 1\n            ans += '1'\n    if len(ans) == n:\n        count[-1] += k\n        if k % 2 != 0:\n            x = ans[:n - 1]\n            if ans[-1] == '1':\n                x += '0'\n            else:\n                x += '1'\n            ans = x\n    else:\n        for i in range(index, n):\n            if lst[i] == '1' and inverted == False or (lst[i] == '0' and inverted):\n                ans += '1'\n            else:\n                ans += '0'\n    print(ans)\n    for i in count:\n        print(i, end=' ')\n    print()", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split(' '))\n    K = k\n    s = input()\n    ans = [0] * n\n    for j in range(n):\n        if k == 0:\n            break\n        if j == n - 1:\n            ans[j] = k\n            continue\n        if s[j] == '1':\n            if K % 2:\n                ans[j] += 1\n                k -= 1\n                if k == 0:\n                    break\n        elif K % 2 == 0:\n            ans[j] += 1\n            k -= 1\n            if k == 0:\n                break\n    res = ''\n    for j in range(n):\n        if s[j] == '1':\n            if (K - ans[j]) % 2 == 0:\n                res += '1'\n            else:\n                res += '0'\n        elif (K - ans[j]) % 2 == 0:\n            res += '0'\n        else:\n            res += '1'\n    print(res)\n    for j in ans:\n        print(j, end=' ')\n    print()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = input()\n    (k2, i, res, res2) = (k, 0, [], [0] * n)\n    b = ['0', '1']\n    if k % 2:\n        for x in a[:n - 1]:\n            if k2 == 0:\n                break\n            if x == '1':\n                k2 -= 1\n                res2[i] = 1\n            res += [1]\n            i += 1\n        if k2 == 0:\n            res += [b[y != '1'] for y in a[i:]]\n        else:\n            dif = k - k2\n            if dif % 2:\n                res += [b[a[-1] != '1']]\n                res2[-1] = k2\n            else:\n                res += [a[-1]]\n                res2[-1] = k2\n    else:\n        for x in a[:n - 1]:\n            if k2 == 0:\n                break\n            if x == '0':\n                k2 -= 1\n                res2[i] = 1\n            res += ['1']\n            i += 1\n        if k2 == 0:\n            res += [y for y in a[i:]]\n        else:\n            dif = k - k2\n            if dif % 2:\n                res += [b[a[-1] != '1']]\n            else:\n                res += [a[-1]]\n            res2[-1] = k2\n    print(*res, sep='')\n    print(*res2, sep=' ')", "from math import ceil\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    l = [0] * n\n    c = 0\n    for i in range(n):\n        if c < k and (s[i] == '1' and k & 1 or (s[i] == '0' and (not k & 1))):\n            l[i] += 1\n            c += 1\n            s[i] = chr(ord(s[i]) ^ (k & 1 ^ 1))\n        else:\n            s[i] = chr(ord(s[i]) ^ k & 1)\n    for i in range(n):\n        if s[i] == '0' or i == n - 1:\n            l[i] += k - c\n            if k - c & 1:\n                s[i] = chr(ord(s[i]) ^ 1)\n    print(''.join(s))\n    print(*l)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    kc = k\n    s = input()\n    f = [0] * n\n    ans = ''\n    for i in range(n):\n        if k == 0:\n            break\n        if kc % 2 == 1 and s[i] == '1':\n            f[i] = f[i] + 1\n            k = k - 1\n        elif kc % 2 == 0 and s[i] == '0':\n            f[i] = f[i] + 1\n            k = k - 1\n    f[n - 1] = f[n - 1] + k\n    for i in range(n):\n        flip = kc - f[i]\n        if flip % 2 == 0:\n            ans = ans + s[i]\n        elif s[i] == '1':\n            ans = ans + '0'\n        else:\n            ans = ans + '1'\n    print(ans)\n    for i in range(n):\n        print(f[i], end=' ')\n    print()", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    kc = k\n    s = input()\n    f = [0] * n\n    ans = ''\n    for i in range(n):\n        if k == 0:\n            break\n        if kc % 2 == 1 and s[i] == '1':\n            f[i] = f[i] + 1\n            k = k - 1\n        elif kc % 2 == 0 and s[i] == '0':\n            f[i] = f[i] + 1\n            k = k - 1\n    f[n - 1] = f[n - 1] + k\n    for i in range(n):\n        flip = kc - f[i]\n        if flip % 2 == 0:\n            ans = ans + s[i]\n        elif s[i] == '1':\n            ans = ans + '0'\n        else:\n            ans = ans + '1'\n    print(ans)\n    for i in range(n):\n        print(f[i], end=' ')\n    print()", "n = int(input())\nfor i in range(n):\n    (lent, moves) = list(map(int, input().split(' ')))\n    s = input()\n    l1 = [0] * lent\n    l2 = []\n    moves1 = moves\n    for i in range(len(s)):\n        l2.append(s[i])\n    flag = 0\n    for i in range(len(s)):\n        num = s[i]\n        if flag % 2 == 1:\n            if s[i] == '1':\n                num = '0'\n            else:\n                num = '1'\n        if moves > 0:\n            if i == lent - 1:\n                l2[i] = num\n                l1[i] = moves\n            elif moves % 2 == 0:\n                if num == '0':\n                    l2[i] = '1'\n                    moves -= 1\n                    flag += 1\n                    l1[i] = 1\n                else:\n                    l2[i] = '1'\n            elif moves % 2 == 1:\n                if num == '1':\n                    l2[i] = '1'\n                    moves -= 1\n                    flag += 1\n                    l1[i] = 1\n                else:\n                    l2[i] = '1'\n        else:\n            l2[i] = num\n    print(''.join(l2))\n    for k in l1:\n        print(k, end=' ')\n    print()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(map(int, input()))\n    ans = [0] * n\n    if k % 2 == 1:\n        for i in range(n):\n            if s[i] == 0:\n                s[i] = 1\n            elif k and s[i] == 1:\n                k -= 1\n                ans[i] += 1\n            else:\n                s[i] = 0\n    else:\n        for i in range(n):\n            if s[i] == 0 and k:\n                s[i] = 1\n                k -= 1\n                ans[i] += 1\n    ans[-1] += k\n    if k % 2 == 1:\n        s[-1] = 0\n    print(*s, sep='')\n    print(*ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    ans = [0] * n\n    p = k % 2\n    i = 0\n    while k > 0 and i < n:\n        if int(s[i]) == p:\n            ans[i] += 1\n            k -= 1\n        i += 1\n    ans[-1] += k\n    r = ''\n    for i in range(n):\n        if ans[i] % 2 != p:\n            r += str((int(s[i]) + 1) % 2)\n        else:\n            r += s[i]\n    print(r)\n    print(*ans)", "from math import ceil\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    l = [0] * n\n    c = 0\n    for i in range(n):\n        if c < k and (s[i] == '1' and k & 1 or (s[i] == '0' and (not k & 1))):\n            l[i] += 1\n            c += 1\n            s[i] = chr(ord(s[i]) ^ (k & 1 ^ 1))\n        else:\n            s[i] = chr(ord(s[i]) ^ k & 1)\n    for i in range(n):\n        if s[i] == '0' or i == n - 1:\n            l[i] += k - c\n            if k - c & 1:\n                s[i] = chr(ord(s[i]) ^ 1)\n    print(''.join(s))\n    print(*l)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = input()\n    flip = [0] * n\n    change = 0\n    ans = ''\n    temp = k\n    for i in range(n):\n        if k == 0:\n            flip[i] = k\n            break\n        else:\n            if change % 2 == 0:\n                ch = s[i]\n            elif s[i] == '1':\n                ch = '0'\n            else:\n                ch = '1'\n            if i == n - 1:\n                ans += ch\n                flip[i] = k\n                k = 0\n            elif ch == '0' and k % 2 == 0 or (ch == '1' and k % 2 == 1):\n                change += 1\n                flip[i] = 1\n                k -= 1\n                ans += '1'\n            elif ch == '1' and k % 2 == 0 or (ch == '0' and k % 2 == 1):\n                flip[i] = 0\n                ans += '1'\n    temp = len(ans)\n    for i in range(temp, n):\n        if change % 2 == 0:\n            ans += s[i]\n        elif s[i] == '1':\n            ans += '0'\n        else:\n            ans += '1'\n    print(ans)\n    for val in flip:\n        print(val, end=' ')\n    print()", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    kc = k\n    s = input()\n    f = [0] * n\n    ans = ''\n    for i in range(n):\n        if k == 0:\n            break\n        if kc % 2 == 1 and s[i] == '1':\n            f[i] = f[i] + 1\n            k = k - 1\n        elif kc % 2 == 0 and s[i] == '0':\n            f[i] = f[i] + 1\n            k = k - 1\n    f[n - 1] = f[n - 1] + k\n    for i in range(n):\n        flip = kc - f[i]\n        if flip % 2 == 0:\n            ans = ans + s[i]\n        elif s[i] == '1':\n            ans = ans + '0'\n        else:\n            ans = ans + '1'\n    print(ans)\n    for i in range(n):\n        print(f[i], end=' ')\n    print()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    ki = k\n    seq = input()\n    seq = [int(i) for i in seq]\n    act = [0 for i in range(n)]\n    ans = []\n    for i in seq:\n        if ki % 2 == 0 and i == 0:\n            ans.append(0)\n        elif ki % 2 != 0 and i != 0:\n            ans.append(0)\n        else:\n            ans.append(1)\n    i = 0\n    while k > 0 and i < len(seq):\n        if ki % 2 == 0:\n            if seq[i] != 1:\n                k -= 1\n                act[i] += 1\n            ans[i] = 1\n        else:\n            if seq[i] == 1:\n                k -= 1\n                act[i] += 1\n            ans[i] = 1\n        i += 1\n    if k != 0:\n        if k % 2 == 0:\n            act[-1] += k\n        else:\n            act[-1] += k\n            ans[-1] = 0 if ans[-1] == 1 else 0\n    print(''.join([str(i) for i in ans]))\n    print(*act)", "for test in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = input()\n    f = k\n    op = []\n    for i in range(n - 1):\n        if k > 0:\n            if s[i] == '1':\n                if f % 2 == 1:\n                    k -= 1\n                    op.append(1)\n                else:\n                    op.append(0)\n            elif f % 2 == 0:\n                k -= 1\n                op.append(1)\n            else:\n                op.append(0)\n            print('1', end='')\n        else:\n            if s[i] == '1':\n                if f % 2 == 1:\n                    print('0', end='')\n                else:\n                    print('1', end='')\n            elif f % 2 == 1:\n                print('1', end='')\n            else:\n                print('0', end='')\n            op.append(0)\n    if s[-1] == '1':\n        if (f - k) % 2 == 0:\n            print('1')\n        else:\n            print('0')\n    elif (f - k) % 2 == 1:\n        print('1')\n    else:\n        print('0')\n    op.append(k)\n    print(*op)", "def solve():\n    (n, k) = map(int, input().split())\n    m = k\n    s = list(input())\n    f = [0 for _ in range(n)]\n    for i in range(n):\n        if k == 0:\n            break\n        if m % 2 == 0 and s[i] == '0' or (m % 2 == 1 and s[i] == '1'):\n            f[i] = 1\n            k -= 1\n    f[-1] += k\n    for i in range(n):\n        if (m ^ f[i]) & 1:\n            if s[i] == '0':\n                s[i] = '1'\n            else:\n                s[i] = '0'\n    print(*s, sep='')\n    print(*f)\nt = int(input())\nwhile t > 0:\n    t -= 1\n    solve()", "N = int(input())\nfor i in range(N):\n    (n, k) = map(int, input().split())\n    s = [int(n) for n in input()]\n    ll = [0] * n\n    kc = k\n    ans = ''\n    for i in range(n):\n        if k == 0:\n            break\n        if kc % 2 and s[i]:\n            ll[i] += 1\n            k -= 1\n        elif not kc % 2 and (not s[i]):\n            ll[i] += 1\n            k -= 1\n    ll[n - 1] += k\n    for i in range(n):\n        flip = kc - ll[i]\n        if not flip % 2:\n            ans += str(1 if s[i] else 0)\n        else:\n            ans += str(1 if not s[i] else 0)\n    print(ans)\n    for i in ll:\n        print(i, end=' ')\n    print()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(map(int, input()))\n    S = s.copy()\n    res = [0 for i in range(n)]\n    o = 0\n    O = k\n    i = 0\n    while i < n and k > 0:\n        s[i] ^= o\n        if k % 2 != s[i] or i == n - 1:\n            i += 1\n            continue\n        res[i] += 1\n        k -= 1\n        o ^= 1\n        i += 1\n    res[-1] += k\n    for i in range(n):\n        if (O - res[i]) % 2:\n            S[i] ^= 1\n    ans = ''\n    for i in S:\n        ans += str(i)\n    print(ans)\n    print(*res)", "import sys\ncases = int(input())\nfor case in range(cases):\n    (n, k) = map(int, input().split())\n    string = []\n    for i in range(n):\n        digit = sys.stdin.read(1)\n        string.append(int(digit))\n    if k % 2 != 0:\n        for i in range(n):\n            if string[i] == 0:\n                string[i] = 1\n            else:\n                string[i] = 0\n    flips = [0] * n\n    for i in range(n):\n        if string[i] == 0 and k:\n            flips[i] += 1\n            string[i] = 1\n            k -= 1\n    flips[-1] += k\n    if k % 2 != 0:\n        string[-1] = 0\n    print(*string, sep='')\n    print(*flips)\n    sys.stdin.readline()", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    a = [int(x) ^ k & 1 for x in I()]\n    b = [0] * n\n    i = 0\n    while (n - i) * k:\n        b[i] = a[i] ^ 1\n        a[i] = 1\n        k -= b[i]\n        i += 1\n    a[-1] ^= k & 1\n    b[-1] += k\n    print(*a, sep='')\n    print(*b)", "from xmlrpc.client import boolean\nfor _ in range(int(input())):\n    (n, k) = (int(x) for x in input().split())\n    s = input()\n    s = list(s)\n    l = n * [0]\n    tmp = k\n    if k % 2 == 1:\n        for i in range(n - 1):\n            if s[i] == '1' and tmp != 0:\n                l[i] += 1\n                tmp -= 1\n        if tmp != 0:\n            l[n - 1] += tmp\n        for i in range(n):\n            if l[i] % 2 == 1:\n                continue\n            elif s[i] == '0':\n                s[i] = '1'\n            else:\n                s[i] = '0'\n    else:\n        for i in range(n - 1):\n            if s[i] == '0' and tmp != 0:\n                l[i] += 1\n                tmp -= 1\n        if tmp != 0:\n            l[n - 1] += tmp\n        for i in range(n):\n            if l[i] % 2 == 0:\n                continue\n            elif s[i] == '0':\n                s[i] = '1'\n            else:\n                s[i] = '0'\n    ''.join((str(i) for i in s))\n    print(*s, sep='')\n    print(*l)", "def test():\n    line = input()\n    (N, K) = line.split(' ')\n    n = int(N)\n    k = int(K)\n    s = input()\n    v = []\n    a = 0\n    for i in range(0, n):\n        v.append(0)\n    for i in range(0, n):\n        if k == 0:\n            break\n        if k % 2 == 0:\n            if a % 2 == 0:\n                if s[i] == '0':\n                    v[i] += 1\n                    k -= 1\n                    a += 1\n            elif s[i] == '1':\n                v[i] += 1\n                k -= 1\n                a += 1\n        elif a % 2 == 0:\n            if s[i] == '1':\n                v[i] += 1\n                k -= 1\n                a += 1\n        elif s[i] == '0':\n            v[i] += 1\n            k -= 1\n            a += 1\n    rem = k\n    if k > 0:\n        k = int(K)\n        if (k - v[0]) % 2 == 0:\n            if v[0] == '1':\n                v[0] += rem\n            else:\n                v[n - 1] += rem\n        elif v[0] == '0':\n            v[0] += rem\n        else:\n            v[n - 1] += rem\n    k = int(K)\n    for i in range(0, n):\n        if (k - v[i]) % 2 == 0:\n            print(s[i], end='')\n        elif s[i] == '0':\n            print('1', end='')\n        else:\n            print('0', end='')\n    print()\n    for i in v:\n        print(i, end=' ')\n    print()\nt = int(input())\nwhile t != 0:\n    test()\n    t -= 1", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    a = [int(x) ^ k & 1 for x in I()]\n    b = [0] * n\n    i = 0\n    while (n - i) * k:\n        b[i] = a[i] ^ 1\n        a[i] = 1\n        k -= b[i]\n        i += 1\n    a[-1] ^= k & 1\n    b[-1] += k\n    print(*a, sep='')\n    print(*b)", "I = input\nfor _ in [0] * int(I()):\n    (n, k) = map(int, I().split())\n    (*a,) = [int(x) ^ k & 1 for x in I()]\n    b = [0] * n\n    i = 0\n    while (n - i) * k:\n        b[i] = a[i] ^ 1\n        a[i] = 1\n        k -= b[i]\n        i += 1\n    a[-1] ^= k & 1\n    b[-1] += k\n    print(*a, sep='')\n    print(*b)", "import collections\nimport math\nimport sys\nneed_two = 0\n\ndef main():\n    (n, k) = map(int, input().split())\n    bit = list(map(int, list(str(input()))))\n    d = [0] * n\n    b = k % 2\n    for i in range(n):\n        if bit[i] == b and k > 0:\n            bit[i] ^= 1\n            k -= 1\n            d[i] = 1\n        else:\n            d[i] = 0\n    if k % 2 == 1:\n        bit[n - 1] ^= 1\n    d[n - 1] += k\n    for i in range(n):\n        print(bit[i] ^ b, end='')\n    print()\n    print(*d)\nt = int(input())\nwhile t > 0:\n    main()\n    t -= 1", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    arr = [int(i) for i in str(input())]\n    moves = [0 for i in range(n)]\n    if k % 2:\n        for i in range(n):\n            arr[i] = arr[i] ^ 1\n    for i in range(n):\n        if k == 0:\n            break\n        if arr[i] == 0:\n            k -= 1\n            arr[i] = 1\n            moves[i] += 1\n    if k and k % 2:\n        arr[-1] = 0\n        moves[-1] += k\n    else:\n        moves[-1] += k\n    for i in arr:\n        print(i, end='')\n    print()\n    for i in moves:\n        print(i, end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    m = input().split()\n    ans = 0\n    n = int(m[0])\n    k = int(m[1])\n    a = list(input())\n    dic = {}\n    for kk in range(n):\n        dic[kk] = 0\n    if k % 2 == 1:\n        for i in range(0, n):\n            if a[i] == '1':\n                j = i\n                break\n            else:\n                ans = ans + 1\n        if ans == n:\n            j = n - 1\n        for i in range(0, j):\n            if a[i] == '1':\n                a[i] = '0'\n            else:\n                a[i] = '1'\n        for i in range(j + 1, n):\n            if a[i] == '1':\n                a[i] = '0'\n            else:\n                a[i] = '1'\n        dic[j] = dic[j] + 1\n        k = k - 1\n    for s in range(n):\n        if a[s] == '0' and k > 0:\n            a[s] = '1'\n            k = k - 1\n            dic[s] = dic[s] + 1\n    dic[n - 1] = dic[n - 1] + k\n    if k % 2 == 1:\n        a[n - 1] = '0'\n    for kk in a:\n        print(kk, end='')\n    print()\n    for u in dic.values():\n        print(u, end=' ')\n    print()", "for i in range(int(input())):\n    l = list(map(int, input().split()))\n    n = l[0]\n    k = l[1]\n    s = input()\n    l = []\n    l1 = []\n    for j in s:\n        l.append(int(j))\n        l1.append(0)\n    if k % 2 == 1:\n        for j in range(n):\n            l[j] = 1 - l[j]\n    c = 0\n    for j in range(n):\n        if c == k:\n            break\n        if l[j] == 0:\n            l[j] = 1\n            c += 1\n            l1[j] = 1\n    k -= c\n    if k > 0:\n        if k % 2 == 1:\n            l[-1] = 0\n        l1[-1] += k\n    for j in l:\n        print(j, end='')\n    print('\\n')\n    for j in l1:\n        print(j, end=' ')\n    print('\\n')", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(input())\n    for j in range(n):\n        s[j] = int(s[j])\n    rs = [0] * n\n    c = 0\n    for j in range(n):\n        s[j] = s[j] ^ c % 2\n        if not s[j] ^ k % 2 and k:\n            rs[j] = 1\n            k -= 1\n            c += 1\n            s[j] = 1\n        elif s[j] ^ k % 2:\n            s[j] = 1\n    rs[-1] += k\n    s[-1] = s[-1] ^ k % 2\n    for j in s:\n        print(j, end='')\n    print()\n    print(*rs)", "def solve():\n    (n, k) = map(int, input().split())\n    s = input()\n    odd = [0 for _ in range(n)]\n    original_k = k\n    for i in range(n):\n        if k == 0:\n            break\n        if original_k % 2 == 0:\n            if s[i] == '1':\n                odd[i] = 0\n            else:\n                odd[i] = 1\n                k -= 1\n        elif s[i] == '1':\n            odd[i] = 1\n            k -= 1\n        else:\n            odd[i] = 0\n    extra = k\n    odd[-1] += extra\n    for i in range(n):\n        if (original_k - odd[i]) % 2 == 0:\n            print(s[i], end='')\n        elif s[i] == '1':\n            print('0', end='')\n        else:\n            print('1', end='')\n    print()\n    for i in range(n):\n        print(odd[i], end='')\n        if i == n - 1:\n            print()\n        else:\n            print(' ', end='')\nt = int(input())\nfor _ in range(t):\n    solve()"]