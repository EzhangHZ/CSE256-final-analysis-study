["t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        arr = [k for k in range(n - 2, 0, -1)]\n        arr += [n - 1, n]\n    else:\n        arr = [1, 2, 3]\n        arr += [k for k in range(n - 2, 3, -1)]\n        arr += [n - 1, n]\n    print(' '.join([str(i) for i in arr]))", "for _ in range(int(input())):\n    n = int(input())\n    res = []\n    if n % 2 == 0:\n        for i in range(n - 2, 0, -1):\n            res.append(i)\n        res.append(n - 1)\n        res.append(n)\n        print(' '.join((str(i) for i in res)))\n        continue\n    elif n % 2 == 1:\n        res.append(1)\n        for i in range(n - 2, 1, -1):\n            res.append(i)\n        res.append(n - 1)\n        res.append(n)\n        print(' '.join((str(i) for i in res)))\n        continue", "for _ in range(int(input())):\n    n = int(input())\n    s = ''\n    if n % 2 == 0:\n        for i in range(1, n - 1, 2):\n            s += str(i + 1) + ' ' + str(i) + ' '\n        s += ' ' + str(n - 1) + ' ' + str(n)\n    else:\n        A = [i for i in range(1, n + 1)]\n        A.remove(1)\n        A.remove(n - 2)\n        A.remove(n)\n        A.sort()\n        for j in range(1, len(A), 2):\n            s += str(A[j]) + ' ' + str(A[j - 1]) + ' '\n        s += ' ' + str(1) + ' ' + str(n - 2) + ' ' + str(n)\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    start_point = 1\n    arr = []\n    if n % 2 != 0:\n        arr.append(1)\n        start_point = 2\n    for i in range(start_point, n - 1, 2):\n        arr.append(i + 1)\n        arr.append(i)\n    arr.append(n - 1)\n    arr.append(n)\n    print(*arr)", "class Solution:\n\n    def solve(n: int):\n        remainder = n % 2\n        lst = []\n        if remainder == 1:\n            lst.append(str(remainder))\n        for i in range(remainder + 1, n - 1, 2):\n            lst.append(str(i + 1))\n            lst.append(str(i))\n        return ' '.join(lst + [str(n - 1), str(n)])\n\n    def bestPermutation():\n        n = int(input())\n        for i in range(n):\n            size = int(input())\n            print(Solution.solve(size))\nSolution.bestPermutation()", "for i in range(int(input())):\n    a = int(input())\n    x = []\n    if a == 4:\n        print(2, 1, 3, 4)\n    else:\n        for j in range(2, a - 2):\n            x.append(str(j))\n        x = x[::-1]\n        x.extend([str(a - 2), '1', str(a - 1), str(a)])\n        print(' '.join(x))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    print('1 ' * (n % 2) + ' '.join(map(str, range(n - 2, n % 2, -1))) + f' {n - 1} {n}')", "import sys, math\ninput = sys.stdin.readline\nINF = int(1000000000.0) + 7\nMOD = 998244353\n\ndef solve():\n    n = int(input())\n    result = [0] * n\n    result[-1] = n\n    result[-2] = n - 1\n    e = n - 2\n    s = 1\n    if n % 2 == 0:\n        for i in range(n - 2):\n            if i % 2 == 0:\n                result[i] = e\n                e -= 1\n            else:\n                result[i] = s\n                s += 1\n    else:\n        for i in range(n - 2):\n            if i % 2 == 0:\n                result[i] = s\n                s += 1\n            else:\n                result[i] = e\n                e -= 1\n    print(*result)\nt = 1\nt = int(input())\nfor i in range(1, t + 1):\n    solve()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        l = []\n        for j in range(n - 2):\n            l.append(n - 2 - j)\n        l.append(n - 1)\n        l.append(n)\n    else:\n        l = [1]\n        for j in range(n - 3):\n            l.append(n - 2 - j)\n        l.append(n - 1)\n        l.append(n)\n    for i in range(len(l)):\n        print(l[i], end=' ')\n    print()", "for jj in range(int(input())):\n    n = int(input())\n    if n % 2 == 0:\n        t = list(range(1, n - 1))\n        print(*t[::-1] + [n - 1, n])\n    elif n == 5:\n        print(*[1, 2, 3, 4, 5])\n    else:\n        print(*[1, 2, 3] + list(range(4, n - 1))[::-1] + [n - 1, n])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 1:\n        print(*[1])\n    elif n == 2:\n        print(*[1, 2])\n    elif n == 3:\n        print(*[2, 1, 3])\n    elif n == 4:\n        print(*[2, 1, 3, 4])\n    elif n == 5:\n        print(*[1, 2, 3, 4, 5])\n    else:\n        L = []\n        if (n - 3) % 2 == 0:\n            for i in range(n - 2, 3, -1):\n                L.append(i)\n            L.append(1)\n            L.append(2)\n            L.append(3)\n            L.append(n - 1)\n            L.append(n)\n        else:\n            for i in range(n - 2, 0, -1):\n                L.append(i)\n            L.append(n - 1)\n            L.append(n)\n        print(*L)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(1)\n    elif n == 2:\n        print(1, 2)\n    elif n == 3:\n        print(2, 1, 3)\n    elif n % 2:\n        print(1, 2, 3, *range(n - 2, 3, -1), n - 1, n)\n    else:\n        print(*range(n - 2, 0, -1), n - 1, n)", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    n = int(inp())\n    if n % 2 == 0:\n        a = list(range(n - 2, 0, -1)) + [n - 1, n]\n    else:\n        a = [n - 3, n - 2] + list(range(n - 4, 0, -1)) + [n - 1, n]\n    print(' '.join(map(str, a)))\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "import os.path\nfrom math import gcd, floor, ceil\nfrom collections import *\nimport sys\nmod = 1000000007\nINF = float('inf')\n\ndef st():\n    return list(sys.stdin.readline().strip())\n\ndef li():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef mp():\n    return map(int, sys.stdin.readline().split())\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef pr(n):\n    return sys.stdout.write(str(n) + '\\n')\n\ndef prl(n):\n    return sys.stdout.write(str(n) + ' ')\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nt = inp()\nfor _ in range(t):\n    n = inp()\n    if n % 2 == 0:\n        for i in range(n - 2):\n            if i % 2 == 0:\n                print(i + 2, end=' ')\n            else:\n                print(i, end=' ')\n        print(n - 1, n)\n    else:\n        print(1, 2, 3, end=' ')\n        for i in range(4, n - 2 + 1):\n            if i % 2 == 0:\n                print(i + 1, end=' ')\n            else:\n                print(i - 1, end=' ')\n        print(n - 1, n)", "number_of_tests = int(input())\nfor _ in range(number_of_tests):\n    n = int(input())\n    if not n % 2:\n        l = list(range(n - 2, 0, -1))\n        l.append(n - 1)\n        l.append(n)\n        print(*l)\n    else:\n        l = list(range(n - 2, 0, -1))\n        (l[0], l[1], l[2]) = (l[2], l[1], l[0])\n        l.append(n - 1)\n        l.append(n)\n        print(*l)", "from collections import *\nfor _ in range(int(input())):\n    n = int(input())\n    ans = []\n    if n % 2:\n        ans += [1]\n        for i in range(2, n - 1, 2):\n            ans += [i + 1, i]\n    else:\n        for i in range(1, n - 1, 2):\n            ans += [i + 1, i]\n    ans += [n - 1, n]\n    print(*ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        a = list(range(n - 2, 0, -1)) + [n - 1, n]\n    else:\n        a = [n - 1] + list(range(n - 3, 0, -1)) + [n - 2, n]\n    print(' '.join(map(str, a)))", "t = int(input())\nans = []\nfor _ in range(t):\n    n = int(input())\n    s = ''\n    if n == 1:\n        ans.append('1')\n        continue\n    l1 = list(range(n - 2, 0, -1))\n    if n % 2 == 1:\n        l1 = [1, 2, 3] + l1[:-3]\n    l2 = [n - 1, n]\n    for i in l1:\n        s += str(i) + ' '\n    for i in l2:\n        s += str(i) + ' '\n    ans.append(s)\nfor i in ans:\n    print(i[:-1])", "for _ in range(int(input())):\n    n = int(input())\n    if n == 4:\n        print(2, 1, 3, 4)\n    elif n % 2 == 0:\n        ans = [i for i in range(n - 2, 0, -1)]\n        ans.append(n - 1)\n        ans.append(n)\n        print(*ans)\n    else:\n        ans = [1] + [i for i in range(n - 2, 1, -1)]\n        ans.append(n - 1)\n        ans.append(n)\n        print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    num = []\n    if n % 2 == 0:\n        for i in reversed(range(n - 2)):\n            num.append(i + 1)\n        num.append(n - 1)\n        num.append(n)\n    elif n % 3 == 1 or n % 3 == 0:\n        num.append(n - 2)\n        for i in range(2, n - 2):\n            num.append(i)\n        num.append(1)\n        num.append(n - 1)\n        num.append(n)\n    elif n % 3 == 2:\n        for i in range(n):\n            num.append(i + 1)\n    print(*num)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 4:\n        print(2, 1, 3, 4)\n    else:\n        l = [i for i in range(1, n + 1)]\n        ans = [2, 3, 1, n - 1, n]\n        res = []\n        for j in l:\n            if j not in ans:\n                res.append(j)\n        res += ans\n        print(*res)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [str(i) for i in range(1, n + 1)]\n    if len(l) <= 2:\n        print(' '.join(l))\n    elif len(l) == 3:\n        print('2 1 3')\n    else:\n        i = 0\n        if (n - 2) % 2 == 1:\n            i = 3\n        while i < n - 2:\n            temp = l[i]\n            l[i] = l[i + 1]\n            l[i + 1] = temp\n            i += 2\n        print(' '.join(l))", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    ans = [str(i) for i in range(n - 2, 0, -1)] + [str(n - 1), str(n)]\n    if n % 2 == 1:\n        (ans[0], ans[1]) = (ans[1], ans[0])\n    print(' '.join(ans))", "t = int(input())\nfor _ in range(t):\n    (n,) = map(int, input().split())\n    a = [0] * n\n    if n % 2 == 0:\n        for i in range(1, n - 1):\n            a[i - 1] = n - i - 1\n    else:\n        for i in range(3):\n            a[i] = i + 1\n        for i in range(4, n - 1):\n            a[i - 1] = n - i + 2\n    a[-2] = n - 1\n    a[-1] = n\n    print(*a)", "x = int(input())\nfor i in range(x):\n    n = int(input())\n    if n % 2 == 0:\n        for j in range(n - 2):\n            print(n - 2 - j, end=' ')\n        print(n - 1, end=' ')\n        print(n)\n    else:\n        print(1, end=' ')\n        for j in range(n - 3):\n            print(n - 2 - j, end=' ')\n        print(n - 1, end=' ')\n        print(n)", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 0:\n        for i in range(n - 2, 0, -1):\n            print(i, end=' ')\n        print(n - 1, n)\n    else:\n        for i in range(n - 3, 1, -1):\n            print(i, end=' ')\n        print(n - 2, 1, n - 1, n)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    ans1 = [i for i in range(1, n - 1)][::-1] + [n - 1, n]\n    ans2 = [1] + [i for i in range(2, n - 1)][::-1] + [n - 1, n]\n    return ans1 if n % 2 == 0 else ans2\nfor _ in range(int(input())):\n    print(*solve())", "def main():\n    t = int(input())\n    for asd in range(t):\n        n = int(input())\n        if n % 2 == 0:\n            items = [i for i in range(n - 2, 0, -1)]\n        else:\n            items = [i for i in range(n - 2, 3, -1)] + [1, 2, 3]\n        items += [n - 1, n]\n        print(*items)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 0:\n        a = [i for i in range(1, n - 1)]\n        a.sort(reverse=True)\n        a.append(n - 1)\n        a.append(n)\n        print(*a)\n    else:\n        a = [i for i in range(1, n - 4)]\n        a.sort(reverse=True)\n        a.append(n - 4)\n        a.append(n - 3)\n        a.append(n - 2)\n        a.append(n - 1)\n        a.append(n)\n        print(*a)", "def solve(n):\n    if n == 4:\n        return [2, 1, 3, 4]\n    if n == 5:\n        return [1, 2, 3, 4, 5]\n    if n % 2:\n        return [1] + list(range(n - 2, 1, -1)) + [n - 1, n]\n    else:\n        return list(range(n - 2, 0, -1)) + [n - 1, n]\nfor _ in range(int(input())):\n    print(*solve(int(input())))", "t = int(input())\nwhile t:\n    n = int(input())\n    res = [0 for i in range(n)]\n    res[n - 1] = n\n    res[n - 2] = n - 1\n    res[n - 3] = 1\n    res[n - 4] = 3\n    res[n - 5] = 2\n    if n > 5:\n        for i in range(n - 5):\n            res[i] = i + 4\n    if n == 4:\n        res = [2, 1, 3, 4]\n    print(*res)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    lst = []\n    if n % 2 == 0:\n        for i in range(n - 2, 0, -1):\n            lst.append(i)\n        lst.append(n - 1)\n        lst.append(n)\n    else:\n        lst.append(1)\n        for i in range(n - 2, 1, -1):\n            lst.append(i)\n        lst.append(n - 1)\n        lst.append(n)\n    print(*lst)", "test = int(input())\nwhile test:\n    n = int(input())\n    if n % 2:\n        i = 1\n        j = n - 2\n        while i < j:\n            print(i, j, end=' ')\n            i += 1\n            j -= 1\n        print(i, n - 1, n)\n    else:\n        for i in range(n - 2, 0, -1):\n            print(i, end=' ')\n        print(n - 1, n)\n    test -= 1", "import sys\ninput = sys.stdin.readline\n\ndef print(*args, end='\\n', sep=' ') -> None:\n    sys.stdout.write(sep.join(map(str, args)) + end)\n\ndef Solve():\n    for t in range(int(input())):\n        n = int(input())\n        ans = [i for i in range(1, n + 1)]\n        if n % 3 == 0:\n            (ans[0], ans[1]) = (ans[1], ans[0])\n        (ans[~2], ans[~3]) = (ans[~3], ans[~2])\n        print(*ans)\nSolve()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [0] * n\n    if n == 4:\n        print('2 1 3 4')\n    else:\n        for i in range(n - 5):\n            print(i + 4, end=' ')\n        print('2 3 1', end=' ')\n        print(n - 1, n)", "for _ in range(int(input())):\n    n = int(input())\n    if n % 3 == 0:\n        l = [i for i in range(n - 4, 0, -1)] + [n - 2, n - 3, n - 1, n]\n    else:\n        l = [i for i in range(2, n - 1)] + [1, n - 1, n]\n    print(*l)", "t = int(input())\nwhile t:\n    n = int(input())\n    if n % 3 == 0:\n        a = [x for x in range(n - 3, 1, -1)]\n        a += [n - 2, 1, n - 1, n]\n        print(*a)\n    else:\n        a = [x for x in range(2, n + 1)]\n        a.insert(n - 3, 1)\n        print(*a)\n    t -= 1", "import math\nimport sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    res = 1\n    lst = []\n    if n % 2:\n        lst.append(1)\n        for i in reversed(range(2, n - 1)):\n            lst.append(i)\n    else:\n        for i in reversed(range(n - 2)):\n            lst.append(i + 1)\n    lst = lst + [n - 1, n]\n    for i in lst:\n        print(i, end=' ')\n    print()\nt = int(input())\nwhile t:\n    t -= 1\n    solve()", "def solve():\n    n = int(input())\n    if n % 2 == 0:\n        l1 = [i for i in range(n - 2, 0, -1)]\n        l1.append(n - 1)\n        l1.append(n)\n    else:\n        l1 = [1]\n        for i in range(2, n - 1):\n            if i % 2 == 0:\n                l1.append(i + 1)\n            else:\n                l1.append(i - 1)\n        l1.append(n - 1)\n        l1.append(n)\n    print(*l1)\nfor _ in range(int(input())):\n    solve()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n == 4:\n        print(2, 1, 3, 4)\n        continue\n    a = []\n    for i in range(4, n - 1):\n        a.append(i)\n    a.append(2)\n    a.append(3)\n    a.append(1)\n    a.append(n - 1)\n    a.append(n)\n    print(*a)", "t = eval(input())\nfor i in range(t):\n    n = eval(input())\n    d = []\n    if n % 2 == 0:\n        (l, r) = (2, 1)\n        for i in range(n // 2 - 1):\n            d.append(l)\n            d.append(r)\n            l += 2\n            r += 2\n        d.append(n - 1)\n        d.append(n)\n        print(*d)\n    else:\n        d.append(1)\n        d.append(2)\n        d.append(3)\n        (l, r) = (5, 4)\n        for i in range((n - 5) // 2):\n            d.append(l)\n            d.append(r)\n            l += 2\n            r += 2\n        d.append(n - 1)\n        d.append(n)\n        print(*d)", "import sys\nimport math\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_ls():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef test_ok(ok):\n    print('YES' if ok else 'NO')\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        if n == 5:\n            for i in range(n):\n                print(i + 1, end=' ')\n            print()\n            continue\n        if n % 2 == 0:\n            for i in range(n - 2, 0, -1):\n                print(i, end=' ')\n            print(n - 1, n)\n        else:\n            a = (n - 1) // 2 - 1\n            b = a + 2\n            ans = [a, b, n]\n            for i in range(n - 1, 0, -1):\n                if i not in ans:\n                    print(i, end=' ')\n            print(*ans)\nmain()", "import sys\ninput = sys.stdin.readline\ntests = int(input())\nfor test in range(tests):\n    n = int(input())\n    if n % 2:\n        for tal in reversed(range(n - 5)):\n            print(tal + 4, end=' ')\n        print(1, end=' ')\n        print(2, end=' ')\n        print(3, end=' ')\n        print(n - 1, end=' ')\n        print(n)\n    else:\n        for tal in reversed(range(n - 2)):\n            print(tal + 1, end=' ')\n        print(n - 1, end=' ')\n        print(n)", "for i in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(1)\n    elif n & 1:\n        for i in range(n - 3, 1, -1):\n            print(i, end=' ')\n        print(n - 2, 1, n - 1, n)\n    else:\n        for i in range(n - 2, 0, -1):\n            print(i, end=' ')\n        print(n - 1, n)", "import sys\nt = int(input())\nwhile t:\n    p = int(input())\n    if p % 2:\n        s = [i for i in range(p - 3, 1, -1)]\n        s.append(p - 2)\n        s.append(1)\n        s.append(p - 1)\n        s.append(p)\n        print(*s)\n    else:\n        s = [i for i in range(p - 2, 0, -1)]\n        s.append(p - 1)\n        s.append(p)\n        print(*s)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    d = {}\n    a = []\n    if n % 2 == 0:\n        for i in range(n - 2, 0, -1):\n            print(i, end=' ')\n        print(n - 1, end=' ')\n        print(n, end=' ')\n        print()\n    else:\n        a.append(n)\n        a.insert(0, n // 2 + 1)\n        a.insert(0, a[0] - 2)\n        for i in range(1, n):\n            if i not in a:\n                a.insert(0, i)\n        for i in a:\n            print(i, end=' ')\n        print()", "for _ in range(int(input())):\n    a = int(input())\n    ans = [0] * a\n    ans_str = ''\n    if a == 4:\n        ans_str = '2' + ' ' + '1' + ' ' + '3' + ' ' + '4'\n    else:\n        ans[-3] = 1\n        ans[-4] = 3\n        ans[-5] = 2\n        ans[-1] = a\n        ans[-2] = a - 1\n        for z in range(0, a - 5):\n            ans[z] = z + 4\n        for i in ans:\n            ans_str += str(i) + ' '\n    print(ans_str)", "t = int(input())\nfor e in range(t):\n    n = int(input())\n    a = []\n    if n == 4:\n        a = [2, 1, 3, 4]\n        print(*a)\n    elif n % 2 != 0:\n        a = [1, 2, 3]\n        q = 5\n        while q < n - 1:\n            a.append(q)\n            a.append(q - 1)\n            q += 2\n        a.append(n - 1)\n        a.append(n)\n        print(*a)\n    else:\n        q = 2\n        while q < n - 1:\n            a.append(q)\n            a.append(q - 1)\n            q += 2\n        a.append(n - 1)\n        a.append(n)\n        print(*a)", "import sys\nimport math\nfrom collections import Counter\n\ndef gi():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef gs():\n    return sys.stdin.readline().strip()\n\ndef fun(a):\n    a = [i for i in range(1, a + 1)]\n    i = 0\n    l = len(a)\n    ans = []\n    j = l - 3\n    while i <= j:\n        ans.append(a[i])\n        if i != j:\n            ans.append(a[j])\n        i += 1\n        j -= 1\n    ans = ans[::-1]\n    ans.append(l - 1)\n    ans.append(l)\n    return ans\nfor _ in range(int(input())):\n    x = input()\n    print(*fun(int(x)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        arr = list(range(1, n - 1))\n        for i in range(0, n - 2, 2):\n            (arr[i], arr[i + 1]) = (arr[i + 1], arr[i])\n        arr.append(n - 1)\n        arr.append(n)\n    if n % 2 == 1:\n        arr = list(range(2, n))\n        arr.remove(n - 2)\n        for i in range(0, n - 3, 2):\n            (arr[i], arr[i + 1]) = (arr[i + 1], arr[i])\n        arr.append(1)\n        arr.append(n - 2)\n        arr.append(n)\n    print(*arr)", "for n in [*map(int, open(0))][1:]:\n    (*r,) = range(1, n + 1)\n    r[n % 2:n - 2] = r[n % 2:n - 2][::-1]\n    print(*r)", "try:\n    for _ in range(int(input())):\n        n = int(input())\n        l = []\n        for i in range(n - 2, 0, -1):\n            l.append(i)\n        if n % 2 != 0:\n            tem = l[0]\n            l[0] = l[1]\n            l[1] = tem\n        l.append(n - 1)\n        l.append(n)\n        for i in range(n):\n            print(l[i], end=' ')\n        print()\nexcept:\n    pass", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2:\n        a = [1] + list(range(2, n - 1))[::-1] + [n - 1] + [n]\n    else:\n        a = list(range(1, n - 1))[::-1] + [n - 1] + [n]\n    print(' '.join(map(str, a)))", "for _ in range(int(input())):\n    a = []\n    n = int(input())\n    if 'erfjijferjr32r32r32' == 232434323235566:\n        print('Tanmay')\n    if n & 1:\n        for i in range(n):\n            if i % 2 == 1:\n                a.append(i + 2)\n                continue\n            a.append(i)\n        a[0] = 1\n    else:\n        for i in range(n):\n            if i % 2 == 0:\n                a.append(i + 2)\n                continue\n            a.append(i)\n    a[n - 1] = n\n    a[n - 2] = n - 1\n    for i in a:\n        print(i, end=' ')\n    print()", "def solveOne():\n    n = int(input())\n    return (list(range(1, n - 1)[::-1]) if n % 2 == 0 else [1] + list(range(2, n - 1)[::-1])) + [n - 1, n]\n\ndef countX(nums):\n    x = 0\n    for numsEl in nums:\n        if x < numsEl:\n            x += numsEl\n        else:\n            x = 0\n    return x\n\ndef solve():\n    t = int(input())\n    anss = []\n    for _ in range(t):\n        anss.append(solveOne())\n    for ans in anss:\n        print(*ans)\nsolve()", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 0:\n        for i in range(n - 2, 0, -1):\n            print(i, end=' ')\n        print(n - 1, n)\n    else:\n        print(1, 2, 3, end=' ')\n        for i in range(n - 2, 3, -1):\n            print(i, end=' ')\n        print(n - 1, n)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    AN = [n - 1, n]\n    if n % 2 == 0:\n        A = []\n        for i in range(n - 2):\n            A.append(n - 2 - i)\n        ANS = A + AN\n    else:\n        B = [1, 2, 3]\n        A = []\n        for i in range(4, n - 1):\n            A.append(n - 2 - i + 4)\n        ANS = B + A + AN\n    for i in range(len(ANS)):\n        if i < len(ANS) - 1:\n            print(ANS[i], end=' ')\n        else:\n            print(ANS[i])", "for ax in range(int(input())):\n    a = int(input())\n    arr = []\n    x = 0\n    for i in range(2, a - 1):\n        arr.append(i)\n        if x < i:\n            x = x + i\n        else:\n            x = 0\n    if x == 0:\n        arr[0] = a - 2\n        arr[-1] = 2\n    arr.append(1)\n    arr.append(a - 1)\n    arr.append(a)\n    print(*arr)", "def FindValue(x):\n    ans = 0\n    for i in range(len(x)):\n        if ans < x[i]:\n            ans += x[i]\n        else:\n            ans = 0\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    a = []\n    if n % 2 == 1:\n        a = [1, 2, 3]\n        for i in range(n - 2, 3, -1):\n            a.append(i)\n        a += [n - 1, n]\n    else:\n        for i in range(n - 2, 0, -1):\n            a.append(i)\n        a.append(n - 1)\n        a.append(n)\n    for i in a:\n        print(i, end=' ')\n    print('')", "t = int(input())\nwhile t > 0:\n    b = int(input())\n    out = [None for i in range(b)]\n    if b % 2 == 0:\n        for i in range(b - 2):\n            out[i] = b - i - 2\n        out[b - 2] = b - 1\n        out[b - 1] = b\n    else:\n        out[0] = 1\n        for i in range(1, b - 2):\n            out[i] = b - i - 1\n        out[b - 2] = b - 1\n        out[b - 1] = b\n    for i in out:\n        print(i, end=' ')\n    print()\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    if n & 1:\n        val = n - 4\n        arr = [x for x in range(val, 0, -1)]\n        for i in range(val + 1, n + 1):\n            arr.append(i)\n        print(*arr)\n    else:\n        val = n - 2\n        arr = [x for x in range(val, 0, -1)]\n        for i in range(val + 1, n + 1):\n            arr.append(i)\n        print(*arr)", "class Solution:\n\n    def bestPermutation(self, n):\n        if n % 2 == 1:\n            if n == 5:\n                return ' '.join([str(i) for i in range(1, 6)])\n            arr = set((i for i in range(1, n + 1)))\n            res_back = [2, n - 3, n]\n            for i in res_back:\n                arr.remove(i)\n            res = [i for i in sorted(arr)]\n            return ' '.join(map(str, res[::-1] + res_back))\n        return ' '.join([str(i) for i in range(n - 2, 0, -1)] + [str(n - 1), str(n)])\nob = Solution()\nt = int(input())\nwhile t:\n    n = int(input())\n    print(ob.bestPermutation(n))\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 0:\n        for i in range(n - 2, 0, -1):\n            print(i, end=' ')\n        print(n - 1, n)\n    elif (n + 1) % 3 == 0:\n        for i in range(1, n + 1):\n            print(i, end=' ')\n        print()\n    elif n % 3 == 0:\n        print(1, end=' ')\n        for i in range(2, n - 2, 2):\n            print(i + 1, i, end=' ')\n        print(n - 1, n)\n    else:\n        print(2, 1, end=' ')\n        for i in range(3, n + 1):\n            print(i, end=' ')\n        print()", "n = int(input())\nfor j in range(n):\n    x = int(input())\n    a = [k + 1 for k in range(x)]\n    if x % 2 == 0:\n        a.pop(x - 1)\n        a.pop(x - 2)\n        b = a[::-1]\n        print(' '.join(map(str, b)), x - 1, x)\n    else:\n        a.pop(x - 1)\n        a.pop(x - 3)\n        a.pop(0)\n        b = a[::-1]\n        print(' '.join(map(str, b)), 1, x - 2, x)", "test = int(input())\nfor t in range(test):\n    n = int(input())\n    if n % 2 == 0:\n        num = list(range(1, n - 1))\n        num.reverse()\n        num.append(n - 1)\n        num.append(n)\n        print(*num)\n    else:\n        num = list(range(2, n - 1))\n        num.reverse()\n        num.insert(0, 1)\n        num.append(n - 1)\n        num.append(n)\n        print(*num)", "tt = int(input())\nfor t in range(tt):\n    n = int(input())\n    a = [0] * n\n    a[n - 1] = n\n    a[n - 2] = n - 1\n    i = 1\n    for e in range(n - 3, -1, -1):\n        a[e] = i\n        i += 1\n    if n % 2 == 1:\n        (a[0], a[1]) = (a[1], a[0])\n    for i in a:\n        print(i, end=' ')\n    print()", "def create(n):\n    if n == 1:\n        print(1)\n    elif n == 3:\n        print(2, 1, 3)\n    elif n % 2 == 0:\n        for i in range(2, n - 2 + 1, 2):\n            print(i, i - 1, end=' ')\n        print(n - 1, n)\n    else:\n        print(1, 2, 3, end=' ')\n        for i in range(5, n - 2 + 1, 2):\n            print(i, i - 1, end=' ')\n        print(n - 1, n)\nt = int(input())\nfor i in range(t):\n    elem = int(input())\n    create(elem)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        for i in range(n - 2, 0, -1):\n            print(i, end=' ')\n        print(n - 1, end=' ')\n        print(n)\n    else:\n        print(n - 1, end=' ')\n        for i in range(n - 3, 0, -1):\n            print(i, end=' ')\n        print(n - 2, end=' ')\n        print(n)", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(range(1, n + 1, 1))\n    a = lst[1:n - 2]\n    b = lst[:n - 2]\n    a.reverse()\n    b.reverse()\n    if n % 2 != 0:\n        print(lst[0], *a, *lst[-2:])\n    else:\n        print(*b, *lst[-2:])", "t = int(input())\nfor e in range(t):\n    n = int(input())\n    data = list(range(1, n + 1))\n    if n % 2 == 0:\n        print(' '.join(map(str, list(reversed(data[:n - 2])) + data[n - 2:])))\n    else:\n        print('1 2 3 ' + ' '.join(map(str, list(reversed(data[3:n - 2])) + data[n - 2:])))", "t = int(input())\nwhile t:\n    n = int(input())\n    if n % 2 == 1:\n        ans = [1, 2, 3] + [n - 1, n]\n        ans = [i for i in range(n - 2, 3, -1)] + ans\n        print(*ans)\n    else:\n        ans = [i for i in range(n - 2, 0, -1)] + [n - 1, n]\n        print(*ans)\n    t = t - 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = n - 2\n    j = 2\n    ans = [0] * (l - 1)\n    if n % 2 == 0:\n        k = l\n        for i in range(0, l - 1, 2):\n            ans[i] = k\n            k -= 1\n        k = 2\n        for i in range(1, l - 1, 2):\n            ans[i] = k\n            k += 1\n        ans = ans + [1, n - 1, n]\n        print(*ans)\n    else:\n        k = 2\n        for i in range(0, l - 1, 2):\n            ans[i] = k\n            k += 1\n        k = l\n        for i in range(1, l - 1, 2):\n            ans[i] = k\n            k -= 1\n        ans = ans + [1, n - 1, n]\n        print(*ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        a = []\n        for i in range(n - 2, 0, -1):\n            print(i, end=' ')\n        print(n - 1, n)\n    else:\n        a = []\n        for i in range(n - 2, 3, -1):\n            print(i, end=' ')\n        print(2, 3, end=' ')\n        print(1, n - 1, n)", "t = int(input())\nfor i in range(t):\n    a = int(input())\n    l = [2, 1, 3, 4]\n    if a == 4:\n        print(*l)\n    else:\n        l1 = [0] * a\n        l1[a - 1] = a\n        l1[a - 2] = a - 1\n        l1[a - 3] = 1\n        l1[a - 4] = 3\n        l1[a - 5] = 2\n        for j in range(a - 5):\n            l1[j] = j + 4\n        print(*l1)", "for i in range(int(input())):\n    n = int(input())\n    if n % 2 != 0:\n        l = list(range(1, n - 1))[::-1]\n        l1 = list(range(n - 1, n + 1))\n        (l[0], l[1]) = (l[1], l[0])\n        print(*l + l1)\n    else:\n        l = list(range(1, n - 1))[::-1]\n        l1 = list(range(n - 1, n + 1))\n        print(*l + l1)", "def func(n):\n    arr = [0 for _ in range(n)]\n    if n % 2 == 1:\n        arr[n - 1] = n\n        arr[n - 2] = n - 1\n        arr[n - 3] = 1\n        arr[n - 4] = n - 2\n        arr[n - 5] = n - 3\n        i = 0\n        for d in range(n - 4, 1, -1):\n            arr[i] = d\n            i += 1\n    else:\n        arr[n - 1] = n\n        arr[n - 2] = n // 2\n        arr[n - 3] = n // 2 - 1\n        arr[n - 4] = 1\n        arr[n - 5] = n - 2\n        arr[n - 6] = n - 3\n        arr[0] = n - 1\n        i = 1\n        d = n - 4\n        while d != 1:\n            arr[i] = d\n            i += 1\n            d -= 1\n            if d == n // 2:\n                d -= 2\n    return arr\npmap = {}\npmap[4] = [2, 1, 3, 4]\npmap[5] = [1, 2, 3, 4, 5]\npmap[6] = [4, 5, 1, 2, 3, 6]\npmap[7] = [2, 3, 4, 5, 1, 6, 7]\npmap[8] = [6, 5, 4, 3, 2, 1, 7, 8]\npmap[9] = [5, 4, 3, 2, 6, 7, 1, 8, 9]\nT = int(input())\nfor tc in range(T):\n    n = int(input())\n    if n in pmap:\n        print(' '.join([str(elem) for elem in pmap[n]]))\n    else:\n        pmap[n] = func(n)\n        print(' '.join([str(elem) for elem in pmap[n]]))", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 0:\n        for i in range(n - 2, 0, -1):\n            print(i, end=' ')\n        print(n - 1, n)\n    elif (n - 1) % 6 == 0:\n        print(n - 2, end=' ')\n        for i in range(1, n - 2):\n            print(i, end=' ')\n        print(n - 1, n)\n    elif (n + 1) % 6 == 0:\n        for i in range(1, n + 1):\n            print(i, end=' ')\n        print()\n    else:\n        print(n - 2, n - 3, n - 4, end=' ')\n        for i in range(1, n - 4):\n            print(i, end=' ')\n        print(n - 1, n)", "output = ''\nfor caseno in range(int(input())):\n    totn = int(input())\n    answer = ''\n    if totn > 2:\n        n = totn - 2\n        if n % 2:\n            l = [1] + [i + 1 for i in range(1, n)][::-1]\n            answer += '1 '\n            for i in range(1, n)[::-1]:\n                answer += str(i + 1) + ' '\n        else:\n            l = [i + 1 for i in range(n)][::-1]\n            for i in range(n)[::-1]:\n                answer += str(i + 1) + ' '\n        l += [totn - 1, totn]\n        answer += str(totn - 1) + ' '\n        answer += str(totn) + ' '\n    else:\n        answer = ''\n        for i in range(n):\n            answer += str(i + 1) + ' '\n    x = 0\n    output += str(answer) + '\\n'\nprint(output)", "def f():\n    n = int(input())\n    l = [0] * n\n    l[n - 1] = n\n    l[n - 2] = n - 1\n    if n % 2 == 0:\n        for i in range(n - 2, 0, -1):\n            l[n - 2 - i] = i\n    else:\n        l[0] = 1\n        for i in range(n - 2, 1, -1):\n            l[n - 2 - i + 1] = i\n    print(*l)\nt = int(input())\nwhile t:\n    f()\n    t -= 1", "for t in range(int(input())):\n    n = int(input())\n    arr = list(range(1, n + 1))\n    if n % 2:\n        arr = arr[0:1] + arr[-(n - 1):-2][::-1] + arr[-2:]\n    else:\n        arr = arr[:-2][::-1] + arr[-2:]\n    print(*arr)", "def solution(n):\n    s = ''\n    if n % 2 == 0:\n        for i in range(2, n - 1, 2):\n            s += str(i) + ' ' + str(i - 1) + ' '\n    else:\n        s = '1 2 3 '\n        for i in range(5, n - 1, 2):\n            s += str(i) + ' ' + str(i - 1) + ' '\n    s += str(n - 1) + ' ' + str(n)\n    return s\nt = int(input())\nwhile t:\n    n = int(input())\n    print(solution(n))\n    t -= 1", "t = int(input())\nfor g in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        a = [0] * n\n        a[-1] = n\n        a[-2] = n - 1\n        s = n - 2\n        for i in range(n - 2):\n            a[i] = s\n            s -= 1\n        print(*a)\n    elif n % 3 == 0:\n        a = [0] * n\n        a[-1] = n\n        a[-2] = n - 2\n        a[-3] = 1\n        a[0] = n - 1\n        if (n - 3) % 2 == 0:\n            s = n - 3\n            for i in range(1, n - 3):\n                a[i] = s\n                s -= 1\n            print(*a)\n        else:\n            s = 2\n            for i in range(1, n - 3):\n                a[i] = s\n                s += 1\n            print(*a)\n    elif n % 6 == 1:\n        a = [0] * n\n        a[-1] = n\n        a[-2] = n - 2\n        a[-3] = 1\n        a[0] = n - 1\n        s = n - 3\n        for i in range(1, n - 3):\n            a[i] = s\n            s -= 1\n        print(*a)\n    else:\n        a = [0] * n\n        a[-1] = n\n        a[-2] = n - 1\n        s = 1\n        for i in range(n - 2):\n            a[i] = s\n            s += 1\n        print(*a)", "t = int(input())\nfor r in range(t):\n    n = int(input())\n    l = [i for i in range(1, n + 1)]\n    if n % 3 == 1:\n        if n - 2 > 0:\n            (l[n - 4], l[n - 3]) = (l[n - 3], l[n - 4])\n    if n % 6 == 0:\n        l[:n - 2] = l[:n - 2][::-1]\n    if n % 3 == 0 and n % 2 != 0:\n        l = [0] + l\n        (l[n // 2 + 1], l[-2]) = (l[-2], l[n // 2 + 1])\n        (l[n // 2 - 1], l[-3]) = (l[-3], l[n // 2 - 1])\n        l.pop(0)\n    p = [0] * (len(l) + 1)\n    print(''.join([str(a) + ' ' for a in l]))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    if n % 2 == 1:\n        i = n - 4\n        while i > 0:\n            print(i, end=' ')\n            i -= 1\n        print(n - 3, n - 2, n - 1, n)\n    else:\n        i = n - 2\n        while i > 0:\n            print(i, end=' ')\n            i -= 1\n        print(n - 1, n)", "for _ in range(int(input())):\n    n = int(input())\n    p = []\n    if n & 1:\n        p.append(n // 2)\n    i = n - 2\n    j = 1\n    while i > j:\n        p.append(i)\n        p.append(j)\n        i = i - 1\n        j = j + 1\n    p.append(n - 1)\n    p.append(n)\n    print(*p)", "from functools import lru_cache\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        res = [i for i in range(1, n - 1)][::-1] + [n - 1, n]\n    else:\n        res = [i for i in range(2, n - 3)][::-1] + [1, n - 3, n - 2] + [n - 1, n]\n    print(*res)", "for _ in range(int(input())):\n    a = []\n    n = int(input())\n    if n == 4:\n        a = [2, 1, 3, 4]\n    elif n == 5:\n        a = [2, 3, 1, 4, 5]\n    else:\n        a = [2, 3, 1, n - 1, n]\n    b = []\n    for i in range(n - 5):\n        b.append(i + 4)\n    a = b + a\n    for i in a:\n        print(i, end=' ')\n    print()", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    b = []\n    if n % 2 == 0:\n        for i in range(1, n - 1):\n            if i % 2 == 1:\n                b += [i + 1]\n            else:\n                b += [i - 1]\n        b += [n - 1]\n        b += [n]\n    elif n % 2 == 1:\n        b += [1]\n        b += [2]\n        b += [3]\n        for i in range(4, n - 1):\n            if i % 2 == 0:\n                b += [i + 1]\n            else:\n                b += [i - 1]\n        b += [n - 1]\n        b += [n]\n    print(*b)", "for i in range(int(input())):\n    t = int(input())\n    l = []\n    if t % 2 == 0:\n        t1 = 2\n        while t1 < t - 1:\n            print(t1, t1 - 1, end=' ')\n            t1 += 2\n        print(t - 1, t)\n    else:\n        print(1, end=' ')\n        t1 = 3\n        while t1 < t - 1:\n            print(t1, t1 - 1, end=' ')\n            t1 += 2\n        print(t - 1, t)", "no_of_cases = int(input())\na = no_of_cases\nques = []\nwhile a > 0:\n    ques.append(int(input()))\n    a = a - 1\n\ndef finder(a):\n    b = a - 2\n    ans = []\n    if a % 2 == 0:\n        while b > 0:\n            ans.append(b)\n            b = b - 1\n    elif a % 2 == 1:\n        ans.append(b - 1)\n        ans.append(b)\n        b = b - 2\n        while b > 0:\n            ans.append(b)\n            b = b - 1\n    ans.append(a - 1)\n    ans.append(a)\n    str1 = ''\n    for ele in ans:\n        ele = str(ele)\n        str1 += ele + ' '\n    return str1\nfor i in ques:\n    print(finder(i))", "import sys\nsys.setrecursionlimit(200000)\nimport math\nfrom collections import Counter\nfrom collections import defaultdict\nfrom collections import deque\ninput = sys.stdin.readline\nfrom functools import lru_cache\nimport heapq\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\ntestcases = inp()\nfor j in range(testcases):\n    n = inp()\n    x = deque()\n    if n % 2 == 0:\n        for i in range(n - 2, 0, -1):\n            x.append(i)\n        x.append(n - 1)\n        x.append(n)\n    else:\n        for i in range(n - 2, 1, -1):\n            x.append(i)\n        x.append(n - 1)\n        x.append(n)\n        x.appendleft(1)\n    print(*x)", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    if m % 3 == 2:\n        for j in range(1, m + 1):\n            if j != m:\n                print(j, end=' ')\n            else:\n                print(j)\n    elif m % 3 == 1:\n        print('2 1 3', end=' ')\n        for j in range(4, m + 1):\n            if j != m:\n                print(j, end=' ')\n            else:\n                print(j)\n    else:\n        print('1 2 4 3', end=' ')\n        for j in range(5, m + 1):\n            if j != m:\n                print(j, end=' ')\n            else:\n                print(j)", "def solution():\n    n = int(input())\n    res = list()\n    if n % 2 == 0:\n        for i in range(n - 2, 0, -1):\n            res.append(i)\n        res.append(n - 1)\n        res.append(n)\n        print(*res)\n    else:\n        for i in range(n - 3, 0, -1):\n            res.append(i)\n        res.insert(len(res) - 1, n - 2)\n        res.append(n - 1)\n        res.append(n)\n        print(*res)\nt = int(input())\nwhile t:\n    t -= 1\n    solution()", "for i in range(int(input())):\n    l = []\n    x = int(input())\n    if x == 1:\n        print(1)\n    elif x == 2:\n        print('1 2')\n    elif x == 3:\n        print(1, 2, 3)\n    elif x % 2 == 0:\n        s = 1\n        e = x - 2\n        for i in range((x - 1) // 2):\n            l.append(str(s))\n            l.append(str(e))\n            s += 1\n            e -= 1\n        l.reverse()\n        l.extend([str(x - 1), str(x)])\n        print(' '.join(l))\n    elif x % 2 != 0:\n        s = 1\n        e = x - 2\n        y = (x + 1) // 2\n        for i in range((x - 2) // 2):\n            if e == y:\n                e -= 1\n            if s == y:\n                s += 1\n            l.append(str(e))\n            l.append(str(s))\n            s += 1\n            e -= 1\n        l.reverse()\n        l.extend([str(y), str(x - 1), str(x)])\n        print(' '.join(l))", "import sys\nimport heapq\ninput = sys.stdin.readline\nfrom collections import Counter, defaultdict\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef main():\n    n = inp()\n    if n % 2 == 0:\n        ans = [x for x in range(n - 2, 0, -1)] + [n - 1, n]\n    else:\n        ans = [1] + [x for x in range(n - 2, 1, -1)] + [n - 1, n]\n    print(*ans)\nt = inp()\nfor _ in range(t):\n    main()"]