["t = int(input())\nwhile t > 0:\n    _ = input()\n    board = [input() for _ in range(8)]\n    for r in range(1, 7):\n        for c in range(1, 7):\n            if board[r - 1][c - 1] == '#' and board[r - 1][c + 1] == '#' and (board[r + 1][c - 1] == '#') and (board[r + 1][c + 1] == '#'):\n                print(r + 1, c + 1)\n                break\n    t -= 1", "import collections\nfor _ in range(int(input())):\n    n = input()\n    a = []\n    for i in range(8):\n        s = input()\n        a.append(s)\n    ans = []\n    for i in range(1, 7):\n        for j in range(1, 7):\n            if a[i - 1][j - 1] == '#' and a[i + 1][j - 1] == '#' and (a[i - 1][j + 1] == '#') and (a[i + 1][j + 1] == '#'):\n                print(1 + i, 1 + j)", "def solve(mat):\n    for i in range(1, 7):\n        for j in range(1, 7):\n            if all((mat[x][y] == '#' for (x, y) in [(i, j), (i + 1, j + 1), (i - 1, j + 1), (i - 1, j - 1), (i + 1, j - 1)])):\n                return (i + 1, j + 1)\nT = int(input())\nfor _ in range(T):\n    input()\n    mat = [input() for _ in range(8)]\n    print(' '.join(map(str, solve(mat))))", "t = int(input())\nfor _ in range(t):\n    input()\n    ch = []\n    for i in range(8):\n        ch.append(input())\n    (x, y) = (0, 0)\n    for i in range(1, 7):\n        for k in range(1, 7):\n            if ch[i][k] == '#' and ch[i - 1][k - 1] == '#' and (ch[i + 1][k - 1] == '#') and (ch[i + 1][k + 1] == '#') and (ch[i - 1][k + 1] == '#'):\n                x = i + 1\n                y = k + 1\n                break\n    print(x, y)", "def func():\n    l = []\n    input('')\n    for i in range(8):\n        l.append(input(''))\n    for i in range(8):\n        if l[i].count('#') == 2:\n            break\n    for j in range(i, 8):\n        if l[j].count('#') == 1:\n            x = j + 1\n            y = l[j].index('#') + 1\n            print(x, y)\n            return\nt = int(input())\nfor _ in range(t):\n    func()", "n = int(input())\nfor i in range(n):\n    x = input()\n    a = []\n    for j in range(8):\n        s = input()\n        a.append(s)\n    ans = [0, 0, 0, 0, 0, 0, 0, 0]\n    for k in range(8):\n        for j in range(8):\n            if a[k][j] == '#':\n                ans[k] += 1\n    result = -1\n    for k in range(1, 7):\n        if ans[k] == 1 and ans[k - 1] == 2 and (ans[k + 1] == 2):\n            result = k\n            break\n    for k in range(8):\n        if a[result][k] == '#':\n            print(result + 1, k + 1)", "def answer():\n    lt = []\n    for i in range(8):\n        txt = input()\n        temp = list(txt)\n        lt.append(temp)\n    pre = None\n    ans = None\n    for i in range(8):\n        count = 0\n        for j in range(8):\n            if lt[i][j] == '#':\n                count += 1\n                ans = j\n        if count == 2:\n            pre = 2\n        if count == 1 and pre == 2:\n            break\n    print(i + 1, ans + 1)\nt = int(input())\nfor test in range(t):\n    useless = input()\n    answer()", "for _ in range(int(input())):\n    emp = input()\n    l1 = []\n    l = []\n    for i in range(8):\n        l1 = input()\n        l.append(l1)\n    for i in range(1, 7):\n        for j in range(1, 7):\n            if l[i][j] == '#':\n                if l[i + 1][j + 1] == '#' and l[i + 1][j - 1] == '#' and (l[i - 1][j - 1] == '#') and (l[i - 1][j + 1] == '#'):\n                    print(i + 1, j + 1)\n                    break", "for t in range(int(input())):\n    s = input()\n    l = []\n    for i in range(8):\n        l.append(input())\n    for i in range(1, 7):\n        for j in range(1, 7):\n            if l[i - 1][j - 1] == '#' and l[i - 1][j + 1] == '#' and (l[i + 1][j - 1] == '#') and (l[i + 1][j + 1] == '#'):\n                print(i + 1, j + 1)\n                break", "for _ in range(int(input())):\n    a = []\n    x = input()\n    for i in range(8):\n        s = input()\n        a.append(s)\n    for i in range(1, 7):\n        for j in range(1, 7):\n            if a[i][j] == '#' and a[i - 1][j - 1] == '#' and (a[i - 1][j + 1] == '#') and (a[i + 1][j - 1] == '#') and (a[i + 1][j + 1] == '#'):\n                print(i + 1, j + 1)\n                break", "t = int(input())\nfor x in range(t):\n    blank = input()\n    coor = []\n    for y in range(8):\n        line = list(input())\n        for z in range(len(line)):\n            if line[z] == '#':\n                coor.append([y, z])\n    for a in range(len(coor)):\n        flag = 0\n        for b in range(len(coor)):\n            if a != b:\n                diff1 = coor[a][0] - coor[b][0]\n                diff2 = coor[a][1] - coor[b][1]\n                if abs(diff1) != abs(diff2):\n                    break\n                else:\n                    flag += 1\n        if flag >= len(coor) - 1:\n            print(coor[a][0] + 1, coor[a][1] + 1)\n            break", "t = int(input())\nfor _ in range(t):\n    input()\n    matrix = []\n    l = []\n    for _ in range(8):\n        matrix.append(input())\n    for i in range(8):\n        for j in range(8):\n            if matrix[i][j] == '#':\n                l.append([i, j])\n    for i in l:\n        s = 1\n        for j in l:\n            (x1, y1) = (i[0], i[1])\n            (x2, y2) = (j[0], j[1])\n            if (x1 - x2) ** 2 == (y1 - y2) ** 2:\n                pass\n            else:\n                s = 0\n                break\n        if s != 0:\n            print(x1 + 1, y1 + 1)\n            break", "for t in range(int(input())):\n    doska = []\n    index = []\n    for k in range(0, 9):\n        s = input()\n        doska.append(s)\n        if s.count('#') == 1:\n            index.append([k - 1, s.index('#')])\n    doska = doska[1:]\n    for i in index:\n        if i[0] != 0 and i[0] != 7 and (i[1] != 0) and (i[1] != 7):\n            if doska[i[0] - 1][i[1] - 1] == '#' and doska[i[0] - 1][i[1] + 1] == '#':\n                print(str(i[0] + 1) + ' ' + str(i[1] + 1))\n                break", "ls = []\nfor i in range(int(input())):\n    for j in range(9):\n        s = input()\n        if '#.#' in s:\n            ls.append((j - 1, s.find('#.#') + 2))\nfor i in ls[1::2]:\n    print(*i)", "for _ in range(int(input())):\n    a = []\n    y = input()\n    for i in range(8):\n        s = input()\n        a.append(s)\n    for i in range(1, 7):\n        for j in range(1, 7):\n            if a[i][j] == '#':\n                x = a[i - 1][j - 1] + a[i - 1][j] + a[i - 1][j + 1]\n                if x == '#.#':\n                    print(i + 1, j + 1)", "for i in range(int(input())):\n    n = input()\n    a = input()\n    b = input()\n    c = input()\n    d = input()\n    e = input()\n    f = input()\n    g = input()\n    h = input()\n    c1 = a.count('#')\n    c2 = b.count('#')\n    c3 = c.count('#')\n    c4 = d.count('#')\n    c5 = e.count('#')\n    c6 = f.count('#')\n    c7 = g.count('#')\n    c8 = h.count('#')\n    if c1 > c2:\n        print('2 ' + str(b.index('#') + 1))\n    elif c2 > c3:\n        print('3 ' + str(c.index('#') + 1))\n    elif c3 > c4:\n        print('4 ' + str(d.index('#') + 1))\n    elif c4 > c5:\n        print('5 ' + str(e.index('#') + 1))\n    elif c5 > c6:\n        print('6 ' + str(f.index('#') + 1))\n    elif c6 > c7:\n        print('7 ' + str(g.index('#') + 1))", "ans = []\nfor i in range(int(input())):\n    test = []\n    input()\n    for i in range(8):\n        test.append(list(input()))\n\n    def safe(i, j, test):\n        if test[i][j] == '#' and test[i - 1][j - 1] == '#' and (test[i - 1][j + 1] == '#') and (test[i + 1][j - 1] == '#') and (test[i + 1][j + 1] == '#'):\n            return True\n        return False\n    t = False\n    for i in range(1, 7):\n        for j in range(1, 7):\n            if safe(i, j, test):\n                ans.append([i + 1, j + 1])\n                break\n        if t:\n            break\nfor ele in ans:\n    print(*ele)", "t = int(input())\nfor _ in range(t):\n    _ = input()\n    two_before = False\n    row = 0\n    solved = False\n    for _ in range(8):\n        row += 1\n        attack_fields = 0\n        row_content = input()\n        if solved:\n            continue\n        for letter in row_content:\n            if letter == '#':\n                attack_fields += 1\n        if attack_fields == 2:\n            two_before = True\n        elif two_before:\n            result = row_content.index('#') + 1\n            print(str(row) + ' ' + str(result))\n            solved = True\n        else:\n            two_before = False", "for x in range(int(input())):\n    i = input()\n    board = []\n    for x in range(8):\n        l = [x for x in input()]\n        board.append(l)\n    ans = []\n    for x in range(1, 7):\n        for y in range(1, 7):\n            if board[x][y] == '#' and board[x + 1][y + 1] == '#' and (board[x - 1][y - 1] == '#') and (board[x + 1][y - 1] == '#') and (board[x - 1][y + 1] == '#'):\n                ans.append((x + 1, y + 1))\n                break\n    print(ans[-1][0], ans[-1][1])", "for _ in range(int(input())):\n    input()\n    l = []\n    for i in range(8):\n        l += [input()]\n    c = 'NO'\n    for i in range(1, 7):\n        for j in range(1, 7):\n            if l[i][j] == '#':\n                if l[i + 1][j - 1] == '#' and l[i + 1][j + 1] == '#' and (l[i - 1][j - 1] == '#') and (l[i - 1][j + 1] == '#'):\n                    c = 'YES'\n                    k = [i + 1, j + 1]\n                    break\n        if c == 'YES':\n            break\n    print(*k)", "def bishop():\n    ls = []\n    for i in range(8):\n        ls.append(input())\n    for i in range(1, 7):\n        for j in range(1, 7):\n            if ls[i][j] == '#':\n                if ls[i - 1][j - 1] == '#' and ls[i + 1][j + 1] == '#' and (ls[i - 1][j + 1] == '#') and (ls[i + 1][j - 1] == '#'):\n                    return (i + 1, j + 1)\nn = int(input())\nfor i in range(n):\n    input()\n    a = bishop()\n    print(a[0], a[1])", "t = int(input())\nfor _ in range(t):\n    input()\n    prev = 0\n    k = 1\n    for i in range(8):\n        s = input()\n        h = s.count('#')\n        if prev == 2 and h == 1 and (k == 1):\n            r = i\n            c = s.index('#')\n            k = 0\n        prev = h\n    print(r + 1, c + 1)", "t = int(input())\nfor i in range(t):\n    emp = input()\n    lst = list()\n    for j in range(8):\n        line = input()\n        lst.append(line)\n    for j in range(1, 7):\n        for k in range(1, 7):\n            if (lst[j - 1][k - 1] == '#' and lst[j - 1][k + 1] == '#') and (lst[j + 1][k + 1] == '#' and lst[j + 1][k - 1] == '#'):\n                print(j + 1, k + 1)\n                break", "for _ in range(int(input())):\n    grid = []\n    (r, c) = (0, 0)\n    input()\n    for i in range(8):\n        grid.append(list(input()))\n    for i in range(8):\n        for j in range(8):\n            if i - 1 >= 0 and j - 1 >= 0 and (i + 1 < 8) and (j + 1 < 8):\n                if grid[i][j] == '#' and grid[i - 1][j - 1] == '#' and (grid[i + 1][j + 1] == '#') and (grid[i - 1][j + 1] == '#') and (grid[i + 1][j - 1] == '#'):\n                    print(i + 1, j + 1)\n                    break", "tc = int(input())\nfor _ in range(tc):\n    l = []\n    input()\n    for __ in range(8):\n        l.append(input())\n    for i in range(1, 7, 1):\n        for j in range(1, 7, 1):\n            if l[i][j] == '#':\n                if l[i - 1][j - 1] == l[i - 1][j + 1] == l[i + 1][j - 1] == l[i + 1][j + 1] == '#':\n                    print(f'{i + 1} {j + 1}')\n                    break", "for a0 in range(int(input())):\n    l1 = []\n    empty = input()\n    for i in range(8):\n        l = list(input())\n        l1.append(l)\n    for i in range(1, 7):\n        if l1[i].count('#') == 1:\n            x = l1[i].index('#')\n            if x >= 1 and x <= 6:\n                if l1[i - 1][x - 1] == l1[i - 1][x + 1] == l1[i + 1][x - 1] == l1[i + 1][x + 1]:\n                    print(i + 1, x + 1)\n                    break", "t = int(input())\nfor t in range(t):\n    grid = []\n    for i in range(9):\n        grid.append(input())\n    grid.pop(0)\n    hash1 = []\n    for i in grid:\n        hash1.append(i.count('#'))\n    for (i, o) in enumerate(hash1):\n        if o == 1 and (i != 0 and i != 7):\n            if hash1[i - 1] == 2 and hash1[i + 1] == 2:\n                print(i + 1, grid[i].index('#') + 1)", "for _ in range(int(input())):\n    t = input()\n    a = []\n    for i in range(8):\n        a.append(str(input()))\n    for i in range(1, 7):\n        if a[i].count('#') == 1:\n            for j in range(1, 7):\n                if a[i][j] == '#':\n                    rj = j\n            if a[i - 1][rj + 1] == '#' and a[i + 1][rj + 1] == '#':\n                print(i + 1, rj + 1)", "def count(s):\n    ans = 0\n    k = 0\n    for i in range(8):\n        if s[i] == '#':\n            ans += 1\n            if ans == 1:\n                k = i\n    return (ans, k)\nt = int(input())\nfor i in range(t):\n    input()\n    arr = []\n    for j in range(8):\n        arr.append(input())\n    for j in range(1, 7):\n        (prev, k1) = count(arr[j - 1])\n        (curr, k2) = count(arr[j])\n        (next, k3) = count(arr[j + 1])\n        if curr == 1 and prev == 2 and (next == 2):\n            print(str(j + 1) + ' ' + str(k2 + 1))\n            break", "t = int(input())\nout = []\nfor _ in range(t):\n    board = []\n    input()\n    for _ in range(8):\n        board.append(input())\n    for i in range(1, 7):\n        for j in range(1, 7):\n            if board[i][j] == '#' and board[i + 1][j + 1] == '#' and (board[i + 1][j - 1] == '#') and (board[i - 1][j + 1] == '#') and (board[i - 1][j - 1] == '#'):\n                out.append(f'{i + 1} {j + 1}')\n                break\nfor o in out:\n    print(o)", "n = int(input())\ninput()\nfor _ in range(n):\n    b = [input() for i in range(8)]\n    if _ != n - 1:\n        input()\n    for i in range(1, 7):\n        if b[i].count('#') == 1:\n            f = b[i].index('#')\n            if b[i - 1].count('#') == b[i + 1].count('#') == 2:\n                print(i + 1, f + 1)\n                break", "for _ in range(int(input())):\n    l = []\n    for j in range(9):\n        l.append(input())\n    l.remove(l[0])\n    a = []\n    for i in range(len(l)):\n        a.append(l[i].count('#'))\n    for i in range(1, len(a) - 1):\n        if a[i] == 1 and a[i - 1] == 2 and (a[i + 1] == 2):\n            r = i + 1\n    c = l[r - 1].index('#') + 1\n    print(r, c)", "n = int(input())\nb = []\nboards = []\nfor i in range(n * 9):\n    l = input()\n    if l == '':\n        continue\n    b.append(l)\n    if i % 9 == 8:\n        boards.append(b)\n        b = []\nfor b in boards:\n    for i in range(1, 7):\n        for j in range(1, 7):\n            if b[i][j] == '#':\n                if b[i - 1][j - 1] == '#' and b[i + 1][j - 1] == '#' and (b[i - 1][j + 1] == '#') and (b[i + 1][j + 1] == '#'):\n                    print(i + 1, j + 1)", "t = int(input())\nfor i in range(t):\n    trash = input()\n    board = [list(input()) for i in range(8)]\n    for r in range(1, 7):\n        if board[r].count('#') == 1 and board[r - 1].count('#') == 2 and (board[r + 1].count('#') == 2):\n            print(r + 1, board[r].index('#') + 1)", "for i in range(int(input())):\n    desk = []\n    flag = True\n    t = list(input())\n    for j in range(8):\n        if t != []:\n            for y in range(6):\n                if t[y] == '#' == t[y + 2] and flag:\n                    print(j + 1, y + 2)\n                    flag = False\n        t = list(input())", "n = int(input())\nfor i in range(n):\n    last = 0\n    k = 0\n    for j in range(0, 9):\n        s = list(input())\n        if k == 0:\n            hash = s.count('#')\n            if hash == 1 and last == 2:\n                row = s.index('#')\n                print(j, row + 1)\n                k = 1\n            else:\n                last = hash", "for _ in range(int(input())):\n    matrix = []\n    input()\n    for i in range(8):\n        arr = input()\n        matrix.append(arr)\n    l = []\n    for i in range(8):\n        l.append(matrix[i].count('#'))\n    for i in range(1, 7):\n        if l[i] == 1 and l[i - 1] == 2 and (l[i + 1] == 2):\n            print(i + 1, matrix[i].index('#') + 1)\n            break", "t = int(input())\nfor i in range(t):\n    m = []\n    n = input()\n    for k in range(8):\n        x = input()\n        m.append(x)\n    for k in range(1, 7):\n        for j in range(1, 7):\n            if m[k - 1][j - 1] == '#' and m[k + 1][j - 1] == '#' and (m[k - 1][j + 1] == '#') and (m[k + 1][j + 1] == '#') and (m[k][j] == '#'):\n                print(k + 1, j + 1)", "t = int(input())\nres = []\nfor i in range(t):\n    input()\n    a = [[''] * 8 for _ in range(8)]\n    v = [[False] * 8 for _ in range(8)]\n    r = 0\n    for i in range(8):\n        l = input()\n        if i == 1:\n            s_j = l.find('#')\n        for j in range(8):\n            a[r][j] = l[j]\n        r += 1\n    for i in range(1, 7):\n        flag = False\n        for j in range(1, 7):\n            if a[i - 1][j - 1] == '#' and a[i - 1][j + 1] == '#' and (a[i][j] == '#') and (a[i + 1][j - 1] == '#') and (a[i + 1][j + 1] == '#'):\n                res.append((i, j))\n                flag = True\n                break\n        if flag:\n            break\nfor i in range(t):\n    print(res[i][0] + 1, res[i][1] + 1)", "for _ in range(int(input())):\n    arr = []\n    for j in range(9):\n        s = str(input())\n        if s != '':\n            arr.append(s)\n    for i in range(1, len(arr) - 1):\n        if arr[i].count('#') == 1 and arr[i + 1].count('#') == 2 and (arr[i - 1].count('#') == 2):\n            print(i + 1, arr[i].find('#') + 1)\n            break", "for _ in range(int(input())):\n    input()\n    l = [input() for i in range(8)]\n    i = 0\n    while l[i].rfind('#') - l[i].find('#') != 2:\n        i += 1\n    print(i + 2, l[i].find('#') + 2)", "exec(int(input()) * \"k=-1\\nfor i in range(9):\\n if~(j:=input().find('#.#'))&k<0:k=j;print(i+1,j+2)\\n\")", "def checker(arr):\n    i = 0\n    temp = []\n    while i < len(arr):\n        if arr[i] == '#':\n            temp.append(i)\n        i += 1\n    if len(temp) == 2:\n        if temp[1] - temp[0] == 2:\n            return 1\n    else:\n        return 0\ntest_cases = int(input())\nwhile test_cases != 0:\n    input()\n    m = []\n    for t in range(0, 8):\n        temp = input()\n        m.append(temp)\n    r = 0\n    c = 0\n    row = 1\n    col = 1\n    for y in m:\n        if checker(y) == 1:\n            r = row\n            break\n        row += 1\n    for t2 in range(0, 8):\n        temp = []\n        for t3 in range(0, 8):\n            temp.append(m[t3][t2])\n        if checker(temp) == 1:\n            c = col\n            break\n        col += 1\n    print(r + 1, c + 1)\n    test_cases -= 1", "n = int(input())\nfor i in range(n):\n    a = input()\n    k = 0\n    z = 0\n    for j in range(8):\n        s = input()\n        l = s.count('#')\n        if l == 1 and k == 2:\n            z += 1\n            if z == 1:\n                x = j + 1\n                y = s.find('#') + 1\n        k = l\n    print(x, y)", "t = int(input())\nfor _ in range(t):\n    input()\n    flag = False\n    l = []\n    for i in range(8):\n        l.append(input())\n    for i in range(8):\n        m = 0\n        k = 0\n        for j in range(8):\n            if l[i][j] == '#':\n                m += 1\n                k = j\n        if m == 2:\n            flag = True\n        if m == 1 and flag == True:\n            print(i + 1, k + 1)\n            break", "exec(int(input()) * \"k=-1\\nfor i in range(9):\\n if~(j:=input().find('#.#'))&k<0:k=j;print(i+1,j+2)\\n\")", "n = int(input())\nfor w in range(n):\n    a = []\n    x = []\n    u = input()\n    for i in range(8):\n        s = input()\n        for l in s:\n            x.append(l)\n        a.append(x)\n        x = []\n    for i in range(1, 7):\n        for j in range(1, 7):\n            if a[i][j] == '#' and a[i - 1][j - 1] == '#' and (a[i - 1][j + 1] == '#') and (a[i + 1][j + 1] == '#') and (a[i + 1][j - 1] == '#'):\n                print(i + 1, j + 1)", "for _ in range(int(input())):\n    input()\n    f = [input() for i in range(8)]\n    for i in range(1, 7):\n        for j in range(1, 7):\n            if f[i][j] == '#' and f[i - 1][j + 1] == '#' and (f[i - 1][j - 1] == '#') and (f[i + 1][j - 1] == '#') and (f[i + 1][j + 1] == '#'):\n                print(i + 1, j + 1)\n                break", "def check(i, j, arr):\n    try:\n        if arr[i - 1][j - 1] == '#' and arr[i - 1][j + 1] == '#' and (arr[i + 1][j + 1] == '#') and (arr[i + 1][j - 1] == '#'):\n            return True\n    except:\n        return False\n    return False\nt = int(input())\nfor _ in range(t):\n    flag = 1\n    arr = []\n    x = input()\n    for i in range(8):\n        x = list(input())\n        arr.append(x)\n    for i in range(1, 7):\n        for j in range(1, 7):\n            if check(i, j, arr):\n                print(i + 1, j + 1)\n                flag = 0\n                break\n        if flag == 0:\n            break", "def ix(s):\n    for item in s:\n        if item == '#':\n            p = s.index(item) + 1\n            break\n    return p\nfor _ in range(int(input())):\n    (ans1, ans2) = (0, 0)\n    (p, a, b, c, d, e, f, g, h) = (input(), input(), input(), input(), input(), input(), input(), input(), input())\n    (a1, b1, c1, d1, e1, f1, g1, h1) = (a.count('#'), b.count('#'), c.count('#'), d.count('#'), e.count('#'), f.count('#'), g.count('#'), h.count('#'))\n    if b1 == 1 and a1 + b1 + c1 == 5:\n        (ans1, ans2) = (2, ix(b))\n    elif c1 == 1 and b1 + c1 + d1 == 5:\n        (ans1, ans2) = (3, ix(c))\n    elif d1 == 1 and c1 + d1 + e1 == 5:\n        (ans1, ans2) = (4, ix(d))\n    elif e1 == 1 and d1 + e1 + f1 == 5:\n        (ans1, ans2) = (5, ix(e))\n    elif f1 == 1 and e1 + f1 + g1 == 5:\n        (ans1, ans2) = (6, ix(f))\n    elif g1 == 1 and f1 + g1 + h1 == 5:\n        (ans1, ans2) = (7, ix(g))\n    print(ans1, ans2)", "for _ in range(int(input())):\n    t = input()\n    chess_board = []\n    for i in range(8):\n        n = list(input())\n        chess_board.append(n)\n\n    def check(chess_board):\n        for r in range(8):\n            for c in range(8):\n                if chess_board[r][c] == '#':\n                    if r + 1 < 8 and c + 1 < 8 and (c - 1 > -1) and (r - 1 > -1) and (chess_board[r - 1][c - 1] == '#') and (chess_board[r + 1][c - 1] == '#') and (chess_board[r + 1][c + 1] == '#') and (chess_board[r - 1][c + 1] == '#'):\n                        return str(r + 1) + ' ' + str(c + 1)\n    print(check(chess_board))", "for _ in range(int(input())):\n    input()\n    t = []\n    for i in range(8):\n        t.append(input())\n    for i in range(1, 7):\n        c = 0\n        for j in range(1, 7):\n            if t[i][j] == '#' and t[i - 1][j - 1] == '#' and (t[i + 1][j + 1] == '#') and (t[i - 1][j + 1] == '#') and (t[i + 1][j - 1] == '#'):\n                print(i + 1, j + 1)\n                break", "from collections import Counter\nfor i in range(int(input())):\n    _ = input()\n    board = [input() for _ in range(8)]\n    for i in range(1, 7):\n        for j in range(1, 7):\n            if board[i][j] == '#' and board[i - 1][j - 1] == '#' and (board[i - 1][j + 1] == '#') and (board[i + 1][j - 1] == '#') and (board[i + 1][j + 1] == '#'):\n                print(i + 1, j + 1)", "for i in range(int(input())):\n    a = input()\n    arr = []\n    for i in range(8):\n        a = input()\n        arr.append(a)\n    l1 = []\n    for i in arr:\n        l1.append(i.count('#'))\n    l2 = []\n    for i in range(8):\n        r = []\n        for j in range(8):\n            r.append(arr[j][i])\n        l2.append(r.count('#'))\n    l3 = ''\n    for i in l1:\n        l3 += str(i)\n    l4 = ''\n    for i in l2:\n        l4 += str(i)\n    print(l3.index('212') + 2, l4.index('21') + 2)", "for t in range(int(input())):\n    input()\n    l = []\n    for x in range(8):\n        l.append(input())\n    c = []\n    for x in l:\n        c.append(x.count('#'))\n    i = 0\n    for x in range(1, 7):\n        if c[x] == 1 and c[x - 1] == c[x + 1] and (c[x - 1] == 2):\n            i = x\n    j = -1\n    for x in l[i]:\n        j += 1\n        if x == '#':\n            break\n    print(i + 1, j + 1)", "t = int(input())\nfor i in range(t):\n    nothing = input()\n    p = []\n    for _ in range(8):\n        string = input()\n        p.append(string)\n    for s in range(1, 7):\n        if p[s].count('#') == 1 and p[s - 1].count('#') == 2 and (p[s + 1].count('#') == 2):\n            x = s + 1\n            break\n    l = []\n    for e in range(8):\n        l.append(p[x - 1][-1:])\n        p[x - 1] = p[x - 1][:-1]\n    l = l[::-1]\n    y = l.index('#') + 1\n    print(x, y)", "import re\nt = int(input())\nfor _ in range(t):\n    matriz = []\n    for i in range(9):\n        a = input()\n        fila = list(a)\n        if i != 0:\n            matriz.append(fila)\n    res = []\n    resF = ()\n    for i in range(8):\n        c = 0\n        for j in range(8):\n            if matriz[i][j] == '#' and i > 0 and (i < 8) and (j > 0) and (j < 8):\n                c += 1\n                ubi = (i, j)\n        if c == 1:\n            k = ubi[0]\n            m = ubi[1]\n            if matriz[k - 1][m - 1] == '#' and matriz[k + 1][m + 1] == '#' and (matriz[k - 1][m + 1] == '#') and (matriz[k + 1][m - 1] == '#'):\n                resF = (k, m)\n                break\n    print(resF[0] + 1, resF[1] + 1)", "def solve(l):\n    for i in range(1, 7):\n        for j in range(1, 7):\n            if l[i][j] == '#' and l[i + 1][j + 1] == '#' and (l[i - 1][j + 1] == '#') and (l[i - 1][j - 1] == '#') and (l[i + 1][j - 1] == '#'):\n                print(f'{i + 1} {j + 1}')\n                return\nt = int(input())\nfor i in range(t):\n    a = input()\n    l = []\n    for i in range(8):\n        l.append(input())\n    solve(l)", "from ctypes import sizeof\nn = int(input())\nfor j in range(n):\n    input()\n    flag = 0\n    for i in range(8):\n        s = input()\n        if '#' not in s:\n            continue\n        cnt = 0\n        for j in s:\n            if j == '#':\n                cnt = cnt + 1\n        if cnt == 2:\n            flag = 1\n        if flag == 1 and cnt == 1:\n            r = i + 1\n            c = s.index('#') + 1\n            for k in range(7 - i):\n                input()\n            break\n    print(r, c)", "for _ in range(int(input())):\n    board = []\n    for t in range(9):\n        x = input()\n        board.append(x)\n    for i in range(1, 9):\n        if '#.#' in board[i]:\n            print(i + 1, board[i].index('#.#') + 2)\n            break", "t = int(input())\nfor __ in range(t):\n    _ = input()\n    for row in range(8):\n        s = input()\n        try:\n            ans_col = s.index('#.#') + 2\n            ans_row = row\n        except ValueError:\n            pass\n    print(ans_row, ans_col)", "t = int(input())\nfor q in range(t):\n    mp = []\n    empty = input()\n    for w in range(8):\n        s = [p for p in input()]\n        mp.append(s)\n    for i in range(1, 7):\n        for j in range(1, 7):\n            if mp[i][j] == '#' and mp[i - 1][j - 1] == '#' and (mp[i - 1][j + 1] == '#') and (mp[i + 1][j + 1] == '#') and (mp[i + 1][j - 1] == '#'):\n                print(i + 1, j + 1)\n                break", "from itertools import chain\nresult = []\nt = int(input())\nfor _ in range(t):\n    input()\n    chess = []\n    for i in range(8):\n        chess.append(input().strip())\n    ans = ''\n    for i in range(1, 7):\n        for j in range(1, 7):\n            if chess[i][j] == '#' == chess[i - 1][j - 1] == chess[i + 1][j + 1] == chess[i - 1][j + 1] == chess[i + 1][j - 1]:\n                ans = (i + 1, j + 1)\n    print(*ans)", "for t in range(int(input())):\n    s = input()\n    l = []\n    for i in range(8):\n        l.append(input())\n    for i in range(1, 7):\n        for j in range(1, 7):\n            if l[i][j] == '#' and l[i][j] == l[i + 1][j + 1] and (l[i][j] == l[i - 1][j + 1]) and (l[i][j] == l[i - 1][j - 1]) and (l[i][j] == l[i + 1][j - 1]):\n                print(i + 1, j + 1)\n                break", "for _ in range(int(input())):\n    r = c = -1\n    if False:\n        print('Tanmay')\n    s = input()\n    a = []\n    for i in range(8):\n        a.append(input())\n    for i in range(1, 7):\n        for j in range(1, 7):\n            if a[i - 1][j - 1] == '#' and a[i - 1][j + 1] == '#' and (a[i + 1][j - 1] == '#') and a[i + 1][j + 1]:\n                r = i\n                c = j\n    print(r + 1, c + 1)", "t = int(input())\nfor i in range(t):\n    input()\n    list1 = []\n    for j in range(8):\n        a = 0\n        inp = input()\n        list1.append(inp)\n    for l in range(len(list1)):\n        if list1[l].count('#') == 2:\n            a = 1\n        elif list1[l].count('#') == 1 and a == 1:\n            print(l + 1, list1[l].index('#') + 1)\n            break", "for t in range(int(input())):\n    b = input()\n    col = []\n    for i in range(8):\n        str = input()\n        if '#' in str:\n            col.append(str.index('#'))\n        else:\n            col.append(9)\n    for i in range(1, 7):\n        if col[i] > col[i + 1] and col[i] > col[i - 1]:\n            print(i + 1, col[i] + 1)\n            break", "t = int(input())\nwhile t > 0:\n    a = []\n    empty = input()\n    for i in range(8):\n        a.append(str(input()))\n    for i in range(1, 7):\n        if a[i].count('#') == 1 and a[i - 1].count('#') == a[i + 1].count('#') == 2:\n            r = i + 1\n    c = 0\n    for i in a[r - 1]:\n        if i == '#':\n            break\n        else:\n            c += 1\n    print(r, c + 1)\n    t -= 1", "t = int(input())\nfields = []\nfor i in range(t):\n    empty = input()\n    del empty\n    field = []\n    for j in range(8):\n        a = input()\n        field.append(a)\n        del a\n    fields.append(field)\nfor field in fields:\n    for j in range(8):\n        if j % 7 != 0:\n            if field[j - 1].count('#') == field[j + 1].count('#') == 2 and field[j].count('#') == 1:\n                print(j + 1, field[j].index('#') + 1)\n                break", "t = int(input())\nfor i in range(t):\n    pust = input()\n    count = 0\n    check = False\n    while count < 8:\n        s = input()\n        if check == False:\n            for i in range(0, len(s) - 2):\n                if s[i] == '#' and s[i + 2] == s[i]:\n                    r = count + 2\n                    c = i + 2\n                    check = True\n                    break\n        count += 1\n    print(r, c)", "def checkTwo(directions):\n    count = 0\n    for direction in directions:\n        new_i = i + direction[0]\n        new_j = j + direction[1]\n        if -1 < new_i < 8 and -1 < new_j < 8:\n            if board[new_i][new_j] == '#':\n                count += 1\n    if count > 1:\n        return (new_i, new_j)\n    return False\nanswers = []\nfor _ in range(int(input())):\n    input()\n    mydict = dict()\n    board = [list(input()) for i in range(8)]\n    ans = 0\n    for i in range(8):\n        if ans != 0:\n            break\n        for j in range(8):\n            if board[i][j] == '#':\n                (countD, countU) = (checkTwo([(-1, 1), (-1, -1)]), checkTwo([(1, 1), (1, -1)]))\n                (countR, countL) = (checkTwo([(-1, 1), (1, 1)]), checkTwo([(-1, -1), (1, -1)]))\n                if countD or countU or countR or countL:\n                    ans = max(countD, countU, countR, countL)\n                    break\n    answers.append(str(ans[0]) + ' ' + str(ans[1]))\nfor i in answers:\n    print(i)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef check(board, i, j):\n    if board[i + 1][j + 1] == '#' and board[i - 1][j - 1] == '#' and (board[i + 1][j - 1] == '#') and (board[i - 1][j + 1] == '#'):\n        return True\n\ndef findBishop(board):\n    position = []\n    for i in range(1, 7):\n        for j in range(1, 7):\n            if board[i][j] == '#':\n                if check(board, i, j):\n                    return [str(i + 1), str(j + 1)]\nn = inp()\nfor _ in range(n):\n    a = input().strip()\n    board = []\n    for i in range(8):\n        board.append(input().strip())\n    print(' '.join(findBishop(board)))", "t = int(input())\nfor i in range(t):\n    data = []\n    for j in range(9):\n        line = input()\n        if line != '':\n            data.append(line)\n    ans = [0, 0]\n    for z in range(len(data)):\n        if '#.#' in data[z]:\n            ans[0] = z + 2\n            ans[1] = data[z + 1].index('#') + 1\n            break\n    print(ans[0], ans[1])", "t = int(input())\nfor t1 in range(t):\n    s = input()\n    l = []\n    for j in range(8):\n        l.append(list(map(str, input().split())))\n    ready = 0\n    row = -1\n    for k in l:\n        row += 1\n        if k[0].count('#') == 2:\n            ready = 1\n        elif k[0].count('#') == 1 and ready == 1:\n            print(1 + row, 1 + k[0].index('#'))\n            break", "k = int(input())\nfor i in range(k):\n    pole = []\n    c_p = []\n    k = 0\n    for j in range(9):\n        line = input()\n        if line != '':\n            pole.append(line)\n            c_p.append(pole[k].count('#'))\n            k = k + 1\n    for j in range(1, 8, 1):\n        if c_p[j] == 1:\n            if c_p[j + 1] == 2 and c_p[j - 1] == 2:\n                print(j + 1, pole[j].find('#') + 1)\n                break", "t = int(input())\nfor i in range(t):\n    p = input()\n    s = []\n    m = [input() for i in range(8)]\n    q = []\n    for i in range(8):\n        for j in range(8):\n            q.append(m[i][j])\n        s.append(q)\n        q = []\n    z = []\n    for i in range(8):\n        for j in range(8):\n            if s[i][j] == '#':\n                z.append([i, j])\n    for i in range(len(z)):\n        if [z[i][0] - 1, z[i][1] + 1] in z and [z[i][0] + 1, z[i][1] - 1] in z and ([z[i][0] - 1, z[i][1] - 1] in z) and ([z[i][0] + 1, z[i][1] + 1] in z):\n            print(z[i][0] + 1, z[i][1] + 1)", "import math\nt = int(input())\nfor _ in range(t):\n    dict = {}\n    c = input()\n    for i in range(1, 9):\n        a = input()\n        coun = a.count('#')\n        dict[i] = coun\n        if coun == 1:\n            dict[i] = (a.index('#') + 1) ** 3\n    b = list(dict.values())\n    for i in range(len(b) - 2):\n        if b[i] == 2 and b[i + 1] != 2 and (b[i + 2] == 2):\n            print(i + 2, math.ceil(b[i + 1] ** (1 / 3)))\n            break", "from collections import defaultdict\nt = int(input())\ninput()\nfor _ in range(t):\n    mat = []\n    for jk in range(8):\n        mat.append(list(input()))\n    di1 = defaultdict(set)\n    di2 = defaultdict(set)\n    for i in range(8):\n        for j in range(8):\n            if mat[i][j] == '#':\n                di1[i - j].add((i, j))\n                di2[i + j].add((i, j))\n    key1 = list(sorted(di1.keys(), key=lambda k: -len(di1[k])))[0]\n    key2 = list(sorted(di2.keys(), key=lambda k: -len(di2[k])))[0]\n    (a, b) = list(di1[key1].intersection(di2[key2]))[0]\n    print(f'{a + 1} {b + 1}')\n    if _ != t - 1:\n        input()", "for i in range(int(input())):\n    d = 0\n    input()\n    c = []\n    for i in range(8):\n        c.append(input())\n    for k in range(8):\n        if c[k].count('#') == 2:\n            d = 1\n        elif c[k].count('#') == 1 and d == 1:\n            print(k + 1, c[k].index('#') + 1)\n            break", "for i in range(int(input())):\n    input()\n    r = 1\n    row = []\n    for l in range(8):\n        row += [list(input())]\n    d = []\n    for ro in row:\n        x = ro.count('#')\n        d.append(x)\n        if x == 1 and 2 in d:\n            print(r, ro.index('#') + 1)\n            break\n        r += 1", "t = int(input())\nwhile t:\n    l = []\n    a = ''\n    n = input()\n    for i in range(8):\n        a = input()\n        l.append(a)\n    for i in range(1, 8):\n        if l[i].count('#') == 1:\n            for a in range(1, 7):\n                if l[i][a] == '#':\n                    if l[i - 1][a - 1] == '#' and l[i - 1][a + 1] == '#':\n                        print(i + 1, a + 1)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    l = []\n    for j in range(9):\n        l.append(list(input()))\n    l.remove(l[0])\n    ans = []\n    for k in range(len(l)):\n        ans.append(l[k].count('#'))\n    r = 0\n    for p in range(1, len(ans) - 1):\n        if ans[p] == 1 and ans[p - 1] == 2 and (ans[p + 1] == 2):\n            r = p + 1\n            break\n    print(r, end=' ')\n    print(l[r - 1].index('#') + 1)", "n = int(input())\ninput()\nfor i in range(0, n):\n    board = []\n    for j in range(0, 8):\n        board.append(list(input()))\n    for r in range(1, 7):\n        for c in range(1, 7):\n            if board[r - 1][c - 1] == '#' and board[r - 1][c + 1] == '#' and (board[r + 1][c - 1] == '#') and (board[r + 1][c + 1] == '#'):\n                print(r + 1, c + 1)\n    if i != n - 1:\n        input()", "def findBishop(m):\n    for i in range(1, 7):\n        for j in range(1, 7):\n            if m[i][j] == '#' and m[i - 1][j - 1] == '#' and (m[i - 1][j + 1] == '#') and (m[i + 1][j - 1] == '#') and (m[i + 1][j + 1] == '#'):\n                print(f'{i + 1} {j + 1}')\n                return\nn = int(input())\nfor _ in range(n):\n    input()\n    mtrx = [list(input()) for _ in range(8)]\n    findBishop(mtrx)", "def solution():\n    l = []\n    for i in range(9):\n        a = list(map(str, input().split()))\n        l.append(a)\n    if [] in l:\n        l.remove([])\n    k = 0\n    for i in range(8):\n        cnt = 0\n        p = 0\n        for j in range(8):\n            if l[i][0][j] == '#':\n                cnt += 1\n                p = j\n        if cnt == 2:\n            k = 1\n        if cnt == 1 and k == 1:\n            print(i + 1, p + 1)\n            k = 3\n            break\nt = int(input())\nfor _ in range(t):\n    solution()", "t = int(input())\nwhile t:\n    l = []\n    empty = input()\n    for i in range(8):\n        s = input()\n        l.append(s)\n    for i in range(1, 7):\n        if l[i].count('#') == 1:\n            for j in range(1, 7):\n                if l[i][j] == '#':\n                    if l[i - 1][j + 1] == '#' and l[i - 1][j - 1] == '#' and (l[i + 1][j - 1] == '#') and (l[i + 1][j + 1] == '#'):\n                        print(i + 1, j + 1)\n                        break\n    t -= 1", "t = int(input().split()[0])\nwhile t:\n    input()\n    board = [0 for i in range(8)]\n    for i in range(0, 8):\n        board[i] = input()\n    for i in range(1, 7):\n        if board[i].count('#') == 1:\n            if board[i - 1].count('#') == 2 and board[i + 1].count('#') == 2:\n                print(f\"{i + 1} {board[i].find('#') + 1}\")\n    t = t - 1", "def bishop(board, p, q):\n    if p == 0 or q == 0 or p == 7 or (q == 7):\n        return False\n    if board[p - 1][q + 1] == '#' and board[p - 1][q - 1] == '#' and (board[p + 1][q - 1] == '#') and (board[p + 1][q + 1] == '#'):\n        return True\n    return False\n\ndef findBishop(board):\n    for i in range(8):\n        for j in range(8):\n            if board[i][j] == '#':\n                if bishop(board, i, j):\n                    return (i + 1, j + 1)\ntests = int(input())\nfor test in range(tests):\n    board = []\n    w = input()\n    for i in range(8):\n        board.append(list(input()))\n    (r, c) = findBishop(board)\n    print(r, c)", "t = int(input())\nfor i in range(t):\n    ls = []\n    temp = input()\n    for i in range(8):\n        l = list(input())\n        ls.append(l)\n    for i in range(1, 7):\n        for j in range(1, 7):\n            if ls[i][j] == '#' and ls[i - 1][j - 1] == '#' and (ls[i - 1][j + 1] == '#') and (ls[i + 1][j - 1] == '#') and (ls[i + 1][j + 1] == '#'):\n                print(i + 1, j + 1)\n                break", "for _ in range(int(input())):\n    l = []\n    for i in range(9):\n        l.append(input())\n    l.remove(l[0])\n    d = []\n    for i in range(len(l)):\n        d.append(l[i].count('#'))\n    for i in range(1, len(d) - 1):\n        if d[i] == 1 and d[i - 1] == 2 and (d[i + 1] == 2):\n            r = i + 1\n    c = l[r - 1].index('#') + 1\n    print(r, c)", "import math\n\ndef lastIndexOf(str, value):\n    str = str[::-1]\n    i = str.index(value)\n    str = str[::-1]\n    return len(str) - i - 1\nfor _ in range(int(input())):\n    ignore = input()\n    doska = []\n    col = 0\n    row = 0\n    check = True\n    for i in range(8):\n        a = input()\n        doska.append(a)\n        if a.count('#') > 1 and check:\n            x = a.index('#')\n            y = lastIndexOf(a, '#')\n            num = lastIndexOf(a, '#') - a.index('#') - 1\n            row = i + math.ceil(num / 2) + 1\n            check = False\n    col = doska[row - 1].index('#') + 1\n    print(row, col)", "T = int(input())\nfor tt in range(T):\n    l = [[]]\n    for x in range(9):\n        a = input()\n        a = str(a)\n        l.append(a)\n    c = -1\n    for x in range(1, len(l)):\n        if '#.#' in l[x]:\n            c = x\n            break\n    c += 1\n    indx = l[c].index('#')\n    indx += 1\n    print(c - 1, indx)", "n = int(input())\nfor i in range(n):\n    space = input()\n    y = []\n    r = 1\n    for i in range(8):\n        y += [input()]\n    a = []\n    for i in y:\n        z = i.count('#')\n        a.append(z)\n        if z == 1 and 2 in a:\n            print(r, i.index('#') + 1)\n            break\n        r += 1", "t = int(input())\nfor _ in range(t):\n    s = input()\n    l = [input()]\n    l.append(input())\n    l.append(input())\n    flag = False\n    for j in range(3, 8):\n        if not flag:\n            for k in range(8):\n                if l[j - 2][k] == '#':\n                    if k - 1 >= 0 and l[j - 3][k - 1] == '#' and (k + 1 < 8) and (l[j - 3][k + 1] == '#') and (l[j - 1][k - 1] == '#') and (l[j - 1][k + 1] == '#'):\n                        r = j - 1\n                        c = k + 1\n                        flag = True\n        l.append(input())\n    if not flag:\n        for k in range(1, 7):\n            if l[6][k] == '#':\n                if l[5][k - 1] == '#' and l[5][k + 1] == '#' and (l[7][k - 1] == '#') and (l[7][k + 1] == '#'):\n                    r = 7\n                    c = k + 1\n    print(r, c)", "def T():\n    return int(input())\n\ndef S():\n    return str(input())\n\ndef A():\n    return list(map(int, input().split(' ')))\n\ndef M():\n    return map(int, input().split(' '))\ntestCase = T()\nfor l in range(testCase):\n    s = S()\n    boardMatrix = []\n    for i in range(8):\n        s = S()\n        boardMatrix.append(s)\n    for i in range(1, 7):\n        for j in range(1, 7):\n            if boardMatrix[i][j] == '#':\n                tl = boardMatrix[i - 1][j - 1]\n                tr = boardMatrix[i - 1][j + 1]\n                bl = boardMatrix[i + 1][j - 1]\n                br = boardMatrix[i + 1][j + 1]\n                if tl == tr == bl == br == '#':\n                    print(i + 1, j + 1)\n                    break", "o = int(input())\na = input()\nfor i in range(o):\n    arr = []\n    for j in range(8):\n        raw = list(input())\n        for k in range(8):\n            if raw[k] == '#':\n                arr.append([j, k])\n    m = 0\n    n = 0\n    for k in arr:\n        try:\n            if [k[0] - 1, k[1] - 1] in arr and [k[0] - 1, k[1] + 1] in arr:\n                m = k[0]\n                n = k[1]\n                break\n        except:\n            pass\n        try:\n            if [k[0] - 1, k[1] + 1] in arr and [k[0] + 1, k[1] + 1] in arr:\n                m = k[0]\n                n = k[1]\n                break\n        except:\n            pass\n        try:\n            if [k[0] + 1, k[1] + 1] in arr and [k[0] + 1, k[1] - 1] in arr:\n                m = k[0]\n                n = k[1]\n                break\n        except:\n            pass\n        try:\n            if [k[0] + 1, k[1] - 1] in arr and [k[0] - 1, k[1] - 1] in arr:\n                m = k[0]\n                n = k[1]\n                break\n        except:\n            pass\n    print(m + 1, n + 1)\n    if i == o - 1:\n        exit(0)\n    else:\n        a = list(input())", "t = int(input())\nfor i in range(t):\n    x = input()\n    l = []\n    for i in range(8):\n        l.extend([input()])\n    for i in range(8):\n        if l[i].count('#') == 2 and l[i + 1].count('#') == 1 and (l[i + 2].count('#') == 2):\n            print(i + 2, l[i + 1].index('#') + 1)\n            break", "t = int(input())\nfor _ in range(t):\n    l = []\n    for i in range(9):\n        l.append(input())\n    l.remove(l[0])\n    p = []\n    for i in range(len(l)):\n        p.append(l[i].count('#'))\n    for i in range(1, len(p) - 1):\n        if p[i] == 1 and p[i - 1] == 2 and (p[i + 1] == 2):\n            r = i + 1\n    c = l[r - 1].index('#') + 1\n    print(r, c)", "for k in range(int(input())):\n    a = input()\n    lst = []\n    for i in range(8):\n        lst.append(input())\n    for j in range(1, 7):\n        num = lst[j].count('#')\n        if num == 1:\n            a = lst[j].index('#')\n            if lst[j - 1].count('#') == 2 and lst[j + 1].count('#') == 2:\n                print(j + 1, a + 1, sep=' ', end='\\n')\n                break"]