["t = int(input())\n\ndef solve():\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    cnt = 0\n    sum = 0\n    for i in range(n):\n        sum += arr[i]\n        if sum > x:\n            break\n        cnt += 1 + (x - sum) // (i + 1)\n    print(cnt)\nfor _ in range(t):\n    solve()", "import math\n\ndef intlist():\n    return [int(i) for i in input().split(' ')]\n\ndef stringlist():\n    return input().split(' ')\n\ndef yes(t):\n    if t:\n        return 'YES'\n    return 'NO'\n\ndef printjoin(l, str=False):\n    if str:\n        l = [str(i) for i in l]\n    return ' '.join(l)\n\ndef power_of_two(n):\n    b = bin(n)[2:]\n    return int(b) == 10 ** (len(b) - 1)\n\ndef bit_count(n):\n    return bin(n).count('1')\n\ndef gcd(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return x\n\ndef lcm(x, y):\n    lcm = x * y // gcd(x, y)\n    return lcm\n\ndef isint(str):\n    try:\n        int(str)\n        return True\n    except ValueError:\n        return False\n\ndef solve():\n    (n, x) = intlist()\n    a = intlist()\n    a = sorted(a)\n    s = 0\n    ans = 0\n    for i in range(n):\n        s += a[i]\n        if s <= x:\n            ans += (x - s) // (i + 1) + 1\n    return ans\nt = input()\nfor tt in range(int(t)):\n    print(solve())", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    prefixSum = []\n    curr = 0\n    for num in arr:\n        curr += num\n        prefixSum.append(curr)\n    ans = 0\n    for i in range(n):\n        if prefixSum[i] > x:\n            break\n        ans += (x - prefixSum[i]) // (i + 1) + 1\n    return ans\nfor _ in range(int(input())):\n    print(solve())", "tc = int(input())\nfor _ in range(tc):\n    (n, c) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    (an, d) = (0, 0)\n    for x in a:\n        an += x\n        d += 1\n        if an > c:\n            break\n        ans += 1 + (c - an) // d\n    print(ans)", "def cal(n, x, arr):\n    t = [0] * n\n    for i in range(n):\n        t[i] = t[i - 1] + arr[i]\n    if arr[0] > x:\n        return 0\n    ans = 0\n    for i in range(n):\n        if t[i] <= x:\n            ans += (x - t[i]) // (i + 1) + 1\n        else:\n            break\n    return ans\nfor jj in range(int(input())):\n    (n, x) = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    arr.sort()\n    print(cal(n, x, arr))", "for i in range(int(input())):\n    (n, x) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    ans = 0\n    a.sort()\n    for i in range(n):\n        val = a[i]\n        if x >= val:\n            x -= val\n        else:\n            break\n        ans += x // (i + 1) + 1\n    print(ans)", "from itertools import accumulate\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    costs = list(accumulate(a))\n    out = 0\n    for (i, c) in enumerate(costs):\n        d = (x - c) // (i + 1)\n        if d >= 0:\n            out += d + 1\n        else:\n            break\n    print(out)", "def solve():\n\n    def summ(x, i):\n        ans = 0\n        check = 0\n        print(x, i)\n        while check < x:\n            ans += 1\n            check = ans + ans * i\n        print(ans)\n        return ans\n    (n, x) = [int(x) for x in input().split()]\n    prices = sorted([int(x) for x in input().split()])\n    ans = 0\n    for (i, price) in enumerate(prices):\n        if price > x:\n            break\n        ans += (x - price) // (i + 1) + 1\n        x -= price\n    print(ans)\nfor tc in range(int(input())):\n    solve()", "import math\nfor i in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    sumsofar = 0\n    ans = 0\n    n = 0\n    for i in a:\n        n += 1\n        sumsofar += i\n        if x >= sumsofar:\n            ans += 1 + (x - sumsofar) // n\n    print(ans)", "t = int(input())\nfor test_case in range(t):\n    (n, x) = map(int, input().split())\n    a = sorted([int(i) for i in input().split()])\n    total = 0\n    for i in range(len(a)):\n        x -= a[i]\n        if x >= 0:\n            total += x // (i + 1) + 1\n        else:\n            break\n    print(total)", "tc = int(input())\nfor _ in range(tc):\n    (n, c) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    (an, d) = (0, 0)\n    for x in a:\n        an += x\n        d += 1\n        if an > c:\n            break\n        ans += 1 + (c - an) // d\n    print(ans)", "for i in range(int(input())):\n    (n, x) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    ans = 0\n    a.sort()\n    for i in range(n):\n        val = a[i]\n        if x >= val:\n            x -= val\n        else:\n            break\n        ans += x // (i + 1) + 1\n    print(ans)", "for i in range(int(input())):\n    (a, b) = list(map(int, input().split()))\n    c = sorted(list(map(int, input().split())))\n    s = 0\n    if min(c) > b:\n        print(0)\n        continue\n    else:\n        d = 0\n        for i in range(1, a + 1):\n            d += c[i - 1]\n            if d > b:\n                break\n            else:\n                s += (b - d) // i + 1\n        print(s)", "def solve():\n    (n, x) = map(int, input().strip().split())\n    ls = list(map(int, input().strip().split()))\n    ls = sorted(ls)\n    sm = sum(ls)\n    tot = 0\n    last = -1\n    for i in range(n - 1, -1, -1):\n        if x - sm >= 0:\n            nxt = (x - sm) // (i + 1)\n        else:\n            nxt = -1\n            assert last == -1\n        tot += (i + 1) * (nxt - last)\n        last = nxt\n        sm -= ls[i]\n    return tot\nt = int(input())\nfor _ in range(t):\n    print(solve())", "t = int(input())\nwhile t:\n    t -= 1\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    k = 0\n    for i in range(n):\n        k += a[i]\n        if x - k >= 0:\n            ans += (x - k) // (i + 1) + 1\n        else:\n            break\n    print(ans)", "from math import floor\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        (n, k) = map(int, input().split())\n        lst = list(map(int, input().split()))\n        lst.sort()\n        cum = [0] * n\n        cum[0] = lst[0]\n        for i in range(1, n):\n            cum[i] = cum[i - 1] + lst[i]\n        ans = 0\n        for i in range(n):\n            test = floor((k - cum[i]) / (i + 1)) + 1\n            if test < 1:\n                break\n            ans += test\n        print(ans)\nmain()", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())))\n    ans = 0\n    for i in range(n):\n        if x >= a[i]:\n            x -= a[i]\n        else:\n            break\n        ans += x // (i + 1) + 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())))\n    suma = 0\n    booba = 0\n    for (k, j) in enumerate(a):\n        suma += j\n        if not suma > x:\n            booba += (x - suma) // (k + 1) + 1\n    print(booba)", "def helper():\n    t = int(input())\n    for i in range(t):\n        (shops, budget) = [int(x) for x in input().split()]\n        arr = [int(x) for x in input().split()]\n        arr.sort()\n        sm = 0\n        arrn = []\n        smn = 0\n        for i in arr:\n            smn += i\n            arrn.append(smn)\n        for i in range(len(arrn)):\n            if budget - arrn[i] >= 0:\n                sm += (budget - arrn[i]) // (i + 1) + 1\n        print(sm)\nhelper()", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())))\n    su = r = 0\n    for i in range(n):\n        su += a[i]\n        if su > x:\n            break\n        r += (x - su) // (i + 1) + 1\n    print(r)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    pass\nt = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    l = [int(n) for n in input().split()]\n    l.sort()\n    count = 0\n    s = 0\n    for i in range(n):\n        s += l[i]\n        m = x - s\n        if m < 0:\n            break\n        count += m // (i + 1) + 1\n    print(count)", "for _ in range(int(input())):\n    [n, x] = list(map(int, input().split()))\n    a = list(map(int, input().split(' ')))\n    a.sort()\n    ans = 0\n    for i in range(n):\n        val = a[i]\n        if x >= val:\n            x -= val\n        else:\n            break\n        ans += x // (i + 1) + 1\n    print(ans)", "t = int(input())\nres = []\nfor itemT in range(t):\n    inp = input().split()\n    n = int(inp[0])\n    x = int(inp[-1])\n    inp2 = input().split()\n    a = [int(item) for item in inp2]\n    a.sort()\n    iSum = 0\n    pCount = 0\n    for i in range(n):\n        iSum += a[i]\n        if x - iSum >= 0:\n            pCount += (x - iSum) // (i + 1) + 1\n        else:\n            break\n    res.append(pCount)\nfor i in res:\n    print(i)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    s = 0\n    ans = 0\n    for i in range(n):\n        s += a[i]\n        if s > x:\n            break\n        ans += (x - s) // (i + 1) + 1\n    print(ans)", "def solve():\n    (n, money) = list(map(int, input().split(' ')))\n    a = list(map(int, input().split(' ')))\n    a.sort()\n    sum = 0\n    for x in a:\n        sum += x\n    day = -1\n    cnt = 0\n    for i in range(n - 1, -1, -1):\n        val = (money - sum) // (i + 1)\n        if val >= 0:\n            cnt += (i + 1) * (val - day)\n            day = val\n        sum -= a[i]\n    print(cnt)\nfor t in range(int(input())):\n    solve()", "for time in range(int(input())):\n    (n, x) = map(int, input().split())\n    nums = list(map(int, input().split()))\n    nums.sort()\n    howa = []\n    s = 0\n    for j in nums:\n        s += j\n        if s > x:\n            break\n        howa.append(s)\n    total = 0\n    for j in range(len(howa)):\n        total += 1 + (x - howa[j]) // (j + 1)\n    print(total)", "import math\n\ndef task(n, x, a):\n    a = sorted(a)\n    qualified = 0\n    amount = 0\n    total = 0\n    qualified = 0\n    for i in range(0, n):\n        if amount + a[i] <= x:\n            amount += a[i]\n            qualified += 1\n            total += 1 + math.floor((x - amount) / qualified)\n        else:\n            break\n    print(total)\nt = int(input())\nfor i in range(0, t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    task(n, x, a)", "def solve():\n    (n, x) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    arr.sort()\n    sum_arr = []\n    _ = 0\n    for i in arr:\n        _ += i\n        sum_arr.append(_)\n    total = 0\n    for i in range(n):\n        if sum_arr[i] <= x:\n            total += max(0, x - sum_arr[i]) // (i + 1) + 1\n    return total\nfor _ in range(int(input())):\n    print(solve())", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = list(map(int, input().split()))\n    c.sort()\n    su = 0\n    element = 0\n    for i in range(1, a + 1, 1):\n        su += c[i - 1]\n        t = (b - su) // i\n        if t >= 0:\n            element += t + 1\n    print(element)", "T = int(input())\nfor _ in range(T):\n    (n, x) = map(int, input().split())\n    a = sorted(map(int, input().split()))\n    marker = [0]\n    for i in range(n):\n        marker.append(marker[-1] + a[i])\n    start = -1\n    ans = 0\n    for i in range(1, n + 1):\n        if x < marker[i]:\n            continue\n        else:\n            ans += (x - marker[i]) // i + 1\n    print(ans)", "for _ in range(int(input())):\n    (n, r) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    s = 0\n    x = []\n    for i in range(n):\n        s = s + l[i]\n        if s <= r:\n            x.append(r - s)\n        else:\n            break\n    for i in range(len(x)):\n        x[i] = x[i] // (i + 1)\n    print(sum(x) + len(x))", "def pachek(a):\n    pass\nfor t in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())))\n    b = []\n    sum = 0\n    rs = 0\n    for i in range(n):\n        sum += a[i]\n        if sum > x:\n            break\n        b.append(sum)\n    for j in range(len(b)):\n        d = (x - b[j]) // (j + 1) + 1\n        rs += d\n    print(rs)", "for it in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = [0] * n\n    i = ans = 0\n    for num in input().split():\n        a[i] = int(num)\n        i += 1\n    a.sort()\n    if a[0] > x:\n        print(0)\n    else:\n        ans = x - a[0] + 1\n        prev = a[0]\n        for i in range(1, len(a)):\n            prev += a[i]\n            add = (x - prev) // (i + 1) + 1\n            if add < 0:\n                break\n            ans += add\n        print(ans)", "for _ in range(int(input())):\n    (n, x) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    ans = 0\n    arr.sort()\n    tot = 0\n    for i in range(n):\n        if tot + arr[i] <= x:\n            tot += arr[i]\n            ans += (x - tot) // (i + 1) + 1\n        else:\n            break\n    print(ans)", "from typing import List\n\ndef solve_initial_day(budget: int, costs: List[int]) -> List[int]:\n    for (index, cost) in enumerate(costs):\n        budget -= cost\n        if budget < 0:\n            return costs[:index]\n    return costs\n\ndef solve() -> None:\n    (n, x) = map(int, input().split())\n    costs = list(map(int, input().split()))\n    costs.sort()\n    costs = solve_initial_day(x, costs)\n    result = 0\n    total = sum(costs)\n    length = len(costs)\n    day = 0\n    while costs:\n        k = 1 + (x - total) // length\n        if k > 0:\n            day += k\n            result += k * length\n        total += k * length\n        total -= costs.pop() + day\n        length -= 1\n    print(result)\nfor _ in range(int(input())):\n    solve()", "import math\nfor i in range(int(input())):\n    (n, x) = map(int, input().split())\n    A = [int(k) for k in input().split()]\n    A.sort()\n    d = 0\n    if A[0] > x:\n        print(0)\n    elif A[0] == x:\n        print(1)\n    else:\n        a = A[0]\n        d = x - A[0] + 1\n        for k in range(1, n):\n            a += A[k]\n            z = x - a + k + 1\n            if z > 0:\n                d += z // (k + 1)\n            else:\n                break\n        print(d)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, x) = map(int, input().strip().split())\n    l = list(map(int, input().strip().split()))\n    l.sort()\n    for i in range(1, n):\n        l[i] += l[i - 1]\n    co = 0\n    for i in range(n):\n        if x >= l[i]:\n            co += (x - l[i]) // (i + 1) + 1\n    print(co)", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    j = 0\n    num = 0\n    resta = x\n    if num >= 0:\n        while j < len(a):\n            resta -= a[j]\n            if resta >= 0:\n                num += resta // (j + 1) + 1\n                j += 1\n            else:\n                break\n    else:\n        num = 0\n    print(num)", "t = int(input())\nimport math\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    ans = 0\n    a = 0\n    for i in range(n):\n        a += l[i]\n        tmp = math.ceil((x - a + 1) / (i + 1))\n        if tmp <= 0:\n            break\n        ans += tmp\n    print(ans)", "import math\nfrom collections import *\nimport math\n\ndef solve():\n    (n, k) = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    a.sort()\n    s = sum(a)\n    t = n - 1\n    c = 0\n    l = 0\n    d = 0\n    while t >= 0:\n        if k - s >= 0:\n            d = (k - s) // (t + 1) + 1\n            l += d\n            c += d * (t + 1)\n            s += d * (t + 1)\n        s = s - (a[t] + l)\n        t -= 1\n    print(c)\nt = int(input())\nfor _ in range(t):\n    solve()", "def solve():\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    b = [0] * (n + 1)\n    for i in range(n):\n        b[i + 1] = b[i] + a[i]\n    (s, res) = (0, 0)\n    for i in range(n, 0, -1):\n        t = b[i] + s * i\n        if k < t:\n            continue\n        m = (k - t) % i\n        res += ((k - t) // i + 1) * i\n        s += (k - t) // i + 1\n    print(res)\nfor _ in range(int(input())):\n    solve()", "T = int(input())\nfor t in range(T):\n    (n, x) = map(int, input().split())\n    A = list(map(int, input().split()))\n    A.sort()\n    ans = 0\n    cnt = 1\n    for a in A:\n        if x - a >= 0:\n            ans += (x - a) // cnt + 1\n            x -= a\n            cnt += 1\n        else:\n            break\n    print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = sorted([int(i) for i in input().split()])\n    ans = 0\n    for i in range(n):\n        if x >= a[i]:\n            ans += (x - a[i]) // (i + 1) + 1\n        x -= a[i]\n    print(ans)", "import sys\ninput = sys.stdin.readline\nI = lambda : map(int, input().split())\nfor _ in [0] * int(input()):\n    (_, xin) = I()\n    d = {}\n    s = val = day = 0\n    n = 1\n    for i in sorted(list(I())):\n        s = i + s\n        if s > xin:\n            break\n        d[n] = (xin - s) // n + 1\n        n = n + 1\n    for i in reversed(list(d.values())):\n        n = n - 1\n        val = val + (i - day) * n\n        day = i\n    print(val)", "from sys import stdin, stdout\ninput = stdin.readline\nt = int(input())\nfor i in range(t):\n    (n, budg) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    arr.sort()\n    (pref, summ, ans, d) = ([], 0, 0, 1)\n    for i in arr:\n        summ += i\n        pref.append(summ)\n    for i in pref:\n        if (budg - i) // d + 1 < 0:\n            break\n        ans += (budg - i) // d + 1\n        d += 1\n    print(ans)", "T = int(input())\nfor t in range(T):\n    (n, x) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    a.sort()\n    pre = [0] * n\n    pre[0] = a[0]\n    for i in range(1, n):\n        pre[i] = pre[i - 1] + a[i]\n    c = 0\n    (i, j) = (n - 1, 0)\n    while i >= 0:\n        if x < pre[i]:\n            i -= 1\n            continue\n        c += (x - pre[i]) // (i + 1) + 1\n        i -= 1\n    print(c)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    s = 0\n    t = []\n    f = 0\n    for i in range(n):\n        s += a[i]\n        t.append(s)\n        if s > x:\n            f = 1\n            break\n    if f == 0:\n        i += 1\n    else:\n        t.pop()\n    for j in range(i):\n        ans += (x - t[j]) // (j + 1) + 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    lst.sort()\n    pre = [lst[0]]\n    for j in lst[1:]:\n        pre.append(pre[-1] + j)\n    c = 0\n    for j in range(n):\n        l = j + 1\n        if pre[j] <= x:\n            rhs = x - pre[j]\n            q = rhs // l\n            c += q + 1\n    print(c)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    for i in range(1, n):\n        l[i] += l[i - 1]\n    ans = 0\n    for i in range(n - 1, -1, -1):\n        if x >= l[i]:\n            ans += (x - l[i]) // (n - (n - i - 1)) + 1\n    print(ans)", "t = int(input())\nwhile t > 0:\n    (n, x) = [int(x) for x in input().split()]\n    l = [int(x) for x in input().split()]\n    l.sort()\n    pack = 0\n    for i in range(n):\n        if x >= l[i]:\n            pack += (x - l[i]) // (i + 1) + 1\n            x = x - l[i]\n        else:\n            break\n    print(pack)\n    t = t - 1", "from math import ceil\n\ndef calculate():\n    count = 0\n    for i in range(n):\n        dp[i] = dp[i - 1] + arr[i]\n    for i in range(n):\n        flag = 0\n        if b + 1 - dp[i] > 0:\n            count += int(ceil((b + 1 - dp[i]) / (i + 1)))\n    return count\nT = int(input())\nfor _ in range(T):\n    (n, b) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    dp = [0] * n\n    print(calculate())", "import math\nfor i in range(int(input())):\n    (n, x) = map(int, input().split())\n    A = [int(k) for k in input().split()]\n    A.sort()\n    s = []\n    if A[0] > x:\n        print(0)\n    elif A[0] == x:\n        print(1)\n    else:\n        b = []\n        b.append(A[0])\n        a = A[0]\n        for k in range(1, n):\n            a += A[k]\n            b.append(a)\n        m = x - A[0] + 1\n        for k in range(1, n):\n            z = x - b[k] + k + 1\n            if z <= 0:\n                break\n            else:\n                m += z // (k + 1)\n        print(m)", "import math\nfor i in range(int(input())):\n    (n, x) = list(map(int, input().split()))\n    l = sorted(list(map(int, input().split())))\n    ans = 0\n    if x >= l[0]:\n        s = 0\n        for (i, a) in enumerate(l):\n            s += a\n            u = math.floor((x - s) / (i + 1.0)) + 1\n            if u > 0:\n                ans += u\n            else:\n                break\n    print(ans)", "import math\nfor i in range(int(input())):\n    (n, x) = map(int, input().split())\n    A = [int(k) for k in input().split()]\n    A.sort()\n    d = 0\n    a = 0\n    if A[0] > x:\n        print(0)\n    elif A[0] == x:\n        print(1)\n    else:\n        for k in range(n):\n            a += A[k]\n            if x - a + k + 1 > 0:\n                d += (x - a + k + 1) // (k + 1)\n        print(d)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    pre = [0] * n\n    a.sort()\n    for i in range(n):\n        pre[i] = pre[i - 1] + a[i]\n    ans = 0\n    for i in range(n):\n        if pre[i] > k:\n            break\n        x = (k - pre[i]) // (i + 1)\n        ans += x + 1\n    print(ans)", "def solution(n, x, W):\n    result = 0\n    sum = 0\n    for (q, t) in enumerate(W):\n        sum += t\n        result += max(0, (x - sum) // (q + 1) + 1)\n    return result\nt = int(input())\nfor q in range(t):\n    (n, x) = map(int, input().split())\n    W = sorted(map(int, input().split()))\n    print(solution(n, x, W))", "cases = int(input())\nfor case in range(cases):\n    (n, x) = map(int, input().split())\n    shops = list(map(int, input().split()))\n    output = 0\n    addition = 0\n    shops.sort()\n    cost = [shops[0]]\n    ind = 1\n    while ind < n and cost[-1] <= x:\n        cost.append(cost[-1] + shops[ind])\n        ind += 1\n    for i in range(len(cost)):\n        if x >= cost[i]:\n            output += (x - cost[i]) // (i + 1) + 1\n    print(output)", "for ii in range(int(input())):\n    (n, x) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    a.sort()\n    for i in range(1, n):\n        a[i] += a[i - 1]\n    idx = -1\n    for i in range(n):\n        if a[i] <= x:\n            idx = i\n    ans = 0\n    for i in range(idx + 1):\n        ans += (x - a[i]) // (i + 1) + 1\n    print(ans)", "import math\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split(' '))\n    a = list(map(int, input().split(' ')))\n    a = sorted(a)\n    som = 0\n    size = 1\n    ans = 0\n    for i in a:\n        d = math.floor((x - som - i) / size + 1)\n        if d <= 0:\n            break\n        ans += d\n        size += 1\n        som += i\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    (ans, ps) = (0, 0)\n    for (i, ai) in enumerate(a, 1):\n        ans += max(0, (x - ai - ps) // i + 1)\n        ps += ai\n    print(ans)", "N = int(input())\nfor _ in range(N):\n    (n, m) = input().split(' ')\n    nums = input().split(' ')\n    (n, m) = (int(n), int(m))\n    nums = [int(x) for x in nums]\n    nums.sort()\n    sum = 0\n    sum_nums = [0]\n    for num in nums:\n        sum += num\n        sum_nums.append(sum)\n    ans = 0\n    for i in range(1, n + 1):\n        if m - sum_nums[i] >= 0:\n            ans += int((m - sum_nums[i]) / i) + 1\n    print(ans)", "def getSugar(prices, purse, n):\n    prices.sort()\n    prefixCosts = []\n    curr = 0\n    sugarPackets = 0\n    for i in prices:\n        curr += i\n        prefixCosts.append(curr)\n    for i in range(n):\n        if prefixCosts[i] > purse:\n            return sugarPackets\n        else:\n            diff = purse - prefixCosts[i]\n            multiplier = diff // (i + 1)\n            multiplier += 1\n            currPackets = multiplier * (i + 1)\n            currPackets -= multiplier * i\n            sugarPackets += currPackets\n    return sugarPackets\nfor _ in range(int(input())):\n    (n, purse) = map(int, input().split())\n    nums = list(map(int, input().split()))\n    answer = getSugar(nums, purse, n)\n    print(answer)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    l = sum(a)\n    days = 0\n    buys = 0\n    for i in range(n):\n        if i:\n            l -= a[-i] + days\n        if x >= l:\n            u = 1 + (x - l) // (n - i)\n            buys += u * (n - i)\n            days += u\n            l += u * (n - i)\n    print(buys)", "from functools import reduce\nt = int(input())\nwhile t:\n    t -= 1\n    (n, x) = map(int, input().split(' '))\n    a = list(map(int, input().split(' ')))\n    Sum = reduce(lambda xx, yy: xx + yy, a)\n    prev = -1\n    a.sort()\n    ans = 0\n    for i in range(n - 1, -1, -1):\n        curday = (x - Sum) // (i + 1) if x - Sum >= 0 else -1\n        ans += (i + 1) * (curday - prev)\n        prev = curday\n        Sum -= a[i]\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    v = list(map(int, input().split()))\n    v.sort()\n    sum = 0\n    noofdaysnow = 0\n    noofpreviousdays = 0\n    ans = 0\n    for i in range(1, n + 1, 1):\n        sum = sum + v[i - 1]\n        d = (m - sum) // i\n        if d >= 0:\n            ans += d + 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    count = 0\n    pre = []\n    pre.append(a[0])\n    if n > 1:\n        for d in range(1, n):\n            pre.append(a[d] + pre[d - 1])\n    for k in range(n):\n        if pre[k] > x:\n            break\n        diff = x - pre[k]\n        y = diff // (k + 1) + 1\n        count += y\n    print(count)", "def solve():\n    arr.sort()\n    cumm = [0 for i in range(n)]\n    cumm[0] = arr[0]\n    for i in range(1, n):\n        cumm[i] = cumm[i - 1] + arr[i]\n    res = 0\n    accum = 0\n    i = n - 1\n    days = 0\n    while i >= 0:\n        temp = cumm[i] + days * (i + 1)\n        if temp <= x:\n            times = (x - temp) // (i + 1)\n            res += (i + 1) * (times + 1)\n            days += times + 1\n        else:\n            i -= 1\n    return res\nT = int(input())\nfor t in range(T):\n    (n, x) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    ans = solve()\n    print(ans)", "t = int(input())\nfor _ in range(0, t):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    i = 0\n    c = 0\n    l.sort()\n    sum1 = sum(l)\n    k = n - 1\n    a = [0] * n\n    loop = 0\n    a[0] = l[0]\n    for i in range(1, n):\n        a[i] = l[i] + a[i - 1]\n    for i in range(n - 1, -1, -1):\n        if x < a[i]:\n            continue\n        else:\n            c += int((x - a[i]) / (i + 1)) + 1\n    print(c)", "T = int(input())\nfor cid in range(T):\n    (N, X) = map(int, input().split())\n    R = list(map(int, input().split()))\n    R.sort()\n    G = 0\n    total = 0\n    for (i, r) in enumerate(R):\n        G += r\n        total += max(0, (X - G) // (i + 1) + 1)\n    print(total)", "import math\nt = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    s = 0\n    i = 0\n    ans = 0\n    while s <= x and i < n:\n        s = s + a[i]\n        i += 1\n    days = 0\n    if s > x:\n        i -= 1\n        s -= a[i]\n    pval2 = 0\n    ans += i\n    while i > 0:\n        val = x - s\n        val2 = val // i\n        ans += i * (val2 - pval2)\n        pval2 = val2\n        i -= 1\n        s = s - a[i]\n    print(ans)", "t = int(input())\nwhile t:\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ll = [0] * n\n    l.sort()\n    p = 0\n    ans = 0\n    s = 0\n    for i in range(n):\n        s += l[i]\n        if s <= x:\n            ll[i] += s\n            p += 1\n        else:\n            break\n    for i in range(p):\n        ans += (x - ll[i]) // (i + 1) + 1\n    print(ans)\n    t -= 1", "T = int(input())\nfor cid in range(T):\n    (N, X) = map(int, input().split())\n    R = list(map(int, input().split()))\n    R.sort()\n    G = 0\n    total = 0\n    for (i, r) in enumerate(R):\n        G += r\n        total += max(0, (X - G) // (i + 1) + 1)\n    print(total)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    arr1 = [arr[0]]\n    for i in range(1, n):\n        arr1.append(arr1[-1] + arr[i])\n    (ans, day) = (0, 0)\n    for i in range(n - 1, -1, -1):\n        arr1[i] += (i + 1) * day\n        if x - arr1[i] >= 0:\n            days = (x - arr1[i]) // (i + 1) + 1\n            ans += days * (i + 1)\n            day += days\n    print(ans)", "from math import floor\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    p = a.copy()\n    for i in range(1, n):\n        p[i] += p[i - 1]\n    ans = x - a[0] + 1\n    if ans < 0:\n        print(0)\n        continue\n    for i in range(1, n):\n        t = (x - a[i] - p[i - 1]) // (i + 1) + 1\n        if t < 0:\n            break\n        ans += t\n    print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split(' '))\n    l = list(map(int, input().split(' ')))\n    m = [0] * n\n    l.sort()\n    m[0] = l[0]\n    for i in range(1, n):\n        m[i] = l[i] + m[i - 1]\n    y = max(x - l[0] + 1, 0)\n    for i in range(1, n):\n        if m[i] > x:\n            break\n        y += max(x - m[i], 0) // (i + 1) + 1\n    print(y)", "if True:\n    t = int(input())\n    for _ in range(t):\n        (n, x) = list(map(int, input().split()))\n        a = list(map(int, input().split()))\n        a.sort()\n        s = 0\n        b = []\n        for (i, a_) in enumerate(a):\n            s += a_\n            b.append(max(1 + (x - s) // (i + 1), 0))\n        print(sum(b))", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    s = [0]\n    for i in range(n):\n        s.append(s[-1] + a[i])\n    ans = 0\n    for i in range(n, 0, -1):\n        ans += max(0, (x - s[i]) // i + 1)\n    print(ans)", "for w in [0] * int(input()):\n    (n, x) = map(int, input().split())\n    a = sorted(map(int, input().split()))\n    f = e = 0\n    for (i, y) in enumerate(a):\n        f += max(0, (x - y - e) // (i + 1) + 1)\n        e += y\n    print(f)", "for _ in range(int(input())):\n    (n, x) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    a.sort()\n    a1 = []\n    c1 = 0\n    t = 0\n    t1 = 0\n    for i in range(n):\n        t += a[i]\n        t1 += 1\n        if x >= t:\n            a1.append((x - t) // t1 + 1)\n        else:\n            a1.append(0)\n    t2 = n\n    t3 = 0\n    for i in range(n - 1, -1, -1):\n        c1 += (a1[i] - t3) * t2\n        t2 -= 1\n        t3 = a1[i]\n    print(c1)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    s = sum(a)\n    dp = []\n    for i in range(n + 1):\n        dp.append(0)\n    for i in range(1, n + 1):\n        dp[i] = a[i - 1] + dp[i - 1]\n    ans = 0\n    for i in range(1, n + 1):\n        if k - dp[i] > 0:\n            ans += (k - dp[i]) // i\n        if dp[i] <= k:\n            ans += 1\n        else:\n            break\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    c = 0\n    if a[0] > x:\n        print(0)\n    else:\n        c = x - a[0] + 1\n        b = a.copy()\n        for i in range(1, n):\n            b[i] += b[i - 1]\n        for i in range(1, n):\n            a1 = x - a[i] - b[i - 1] + i + 1\n            if a1 <= 0:\n                break\n            else:\n                c += a1 // (i + 1)\n        print(c)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().strip().split()))\n    a.sort()\n    p = [a[0]]\n    for i in range(1, n):\n        p.append(p[-1] + a[i])\n    c = 0\n    for i in range(n - 1, -1, -1):\n        h = (x - p[i]) // (i + 1)\n        h += 1\n        if h > 0:\n            c += h\n    print(c)", "t = int(input())\nfor i in range(t):\n    a = []\n    s1 = input().split()\n    n = int(s1[0])\n    x = int(s1[1])\n    s2 = input().split()\n    for j in range(n):\n        a.append(int(s2[j]))\n    a.sort()\n    ans = 0\n    sum = a[0]\n    for j in range(n):\n        w = (x - sum) // (j + 1)\n        if w >= 0:\n            ans += w + 1\n        if j != n - 1:\n            sum += a[j + 1]\n    print(ans)", "for _ in [0] * int(input()):\n    (n, x) = map(int, input().split())\n    a = sorted(map(int, input().split()))\n    ans = ps = 0\n    for (i, ai) in enumerate(a):\n        ans += max(0, (x - ai - ps) // (i + 1) + 1)\n        ps += ai\n    print(ans)", "for _ in [0] * int(input()):\n    (n, x) = map(int, input().split())\n    a = sorted(map(int, input().split()))\n    ans = ps = 0\n    for (i, ai) in enumerate(a):\n        ans += max(0, (x - ai - ps) // (i + 1) + 1)\n        ps += ai\n    print(ans)", "for _ in [0] * int(input()):\n    (n, x) = map(int, input().split())\n    a = sorted(map(int, input().split()))\n    ans = ps = 0\n    for (i, ai) in enumerate(a):\n        ans += max(0, (x - ai - ps) // (i + 1) + 1)\n        ps += ai\n    print(ans)", "for w in [0] * int(input()):\n    (n, x) = map(int, input().split())\n    a = sorted(map(int, input().split()))\n    f = e = 0\n    for (i, y) in enumerate(a):\n        f += max(0, (x - y - e) // (i + 1) + 1)\n        e += y\n    print(f)", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    v = list(map(int, input().split()))\n    v.sort()\n    prefix = []\n    for i in range(n):\n        prefix.append(0)\n    s = 0\n    for i in range(n):\n        s += v[i]\n        prefix[i] = s\n    ans = 0\n    for i in range(n - 1, -1, -1):\n        dif = x - prefix[i]\n        if dif >= 0 and dif // (i + 1) >= 0:\n            ans += dif // (i + 1) + 1\n    print(ans)", "tc = int(input())\nfor _ in range(tc):\n    (n, x) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    pre = [0]\n    for y in a:\n        pre.append(pre[-1] + y)\n    i = 0\n    ans = 0\n    for ck in range(n, 0, -1):\n        if x >= pre[ck] + i * ck:\n            k = (x - (pre[ck] + i * ck)) // ck + 1\n            ans += k * ck\n            i += k\n    print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    (ans, ps) = (0, 0)\n    for (i, ai) in enumerate(a):\n        ans += max(0, (x - ai - ps) // (i + 1) + 1)\n        ps += ai\n    print(ans)", "from functools import lru_cache\n\ndef get_last_term(start, end, d):\n    return (end - start) // d + 1\nfor _ in range(int(input())):\n    (shops, b) = map(int, input().split())\n    costs = list(map(int, input().split()))\n    costs.sort()\n    p_sum = []\n    s = 0\n    for c in costs:\n        s += c\n        p_sum.append(s)\n    ans = 0\n    for i in range(len(p_sum)):\n        last_term = get_last_term(p_sum[i], b, i + 1)\n        if last_term >= 0:\n            ans += last_term\n    print(ans)", "for _ in [0] * int(input()):\n    (n, x) = map(int, input().split())\n    a = sorted(map(int, input().split()))\n    ans = ps = 0\n    for (i, ai) in enumerate(a):\n        ans += max(0, (x - ai - ps) // (i + 1) + 1)\n        ps += ai\n    print(ans)", "for _ in [0] * int(input()):\n    (n, x) = map(int, input().split())\n    a = sorted(map(int, input().split()))\n    ans = ps = 0\n    for (i, ai) in enumerate(a):\n        ans += max(0, (x - ai - ps) // (i + 1) + 1)\n        ps += ai\n    print(ans)", "for _ in [0] * int(input()):\n    (n, x) = map(int, input().split())\n    a = sorted(map(int, input().split()))\n    ans = ps = 0\n    for (i, ai) in enumerate(a):\n        ans += max(0, (x - ai - ps) // (i + 1) + 1)\n        ps += ai\n    print(ans)", "for i in range(int(input())):\n    (n, x) = map(int, input().split())\n    num = list(map(int, input().split()))\n    num.sort()\n    ans = tot = 0\n    for j in range(n):\n        ans += max(0, (x - num[j] - tot) // (j + 1) + 1)\n        tot += num[j]\n    print(ans)", "for i in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = 0\n    l1 = []\n    l.sort()\n    for j in l:\n        c += j\n        l1.append(c)\n    c = 0\n    d = 0\n    l2 = []\n    for j in range(n):\n        if x < l1[j]:\n            continue\n        l2.append((x - l1[j]) // (j + 1) + 1)\n    l2.append(0)\n    x = len(l2)\n    for j in range(x - 1):\n        c += (l2[j] - l2[j + 1]) * (j + 1)\n    print(c)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    S = [0]\n    for i in range(n):\n        S.append(S[-1] + l[i])\n    res = 0\n    for i in range(n, 0, -1):\n        res += max(0, (k - S[i]) // i + 1)\n    print(res)", "import math\nt = int(input())\nfor i in range(t):\n    n = [int(p) for p in input().split()]\n    s = 0\n    a = [int(x) for x in input().split()]\n    a.sort()\n    ans = 0\n    b = n[1]\n    num = n[0]\n    l = []\n    for j in range(num):\n        s = s + a[j]\n        l.append(s)\n    for j in range(num):\n        if b - l[j] + 1 >= 0:\n            ans = ans + math.ceil((b - l[j] + 1) / (j + 1))\n    print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    sumi = 0\n    rem = []\n    for (index, i) in enumerate(arr):\n        sumi += i\n        baki = x - sumi\n        rem.append(max(0, baki // (index + 1) + 1))\n    print(sum(rem))", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    a = sorted(list(map(int, input().split())))\n    summ = sum(a)\n    packs = 0\n    k_prev = 0\n    val_prev = 0\n    for i in range(n, 0, -1):\n        k_new = max(0, (x - summ + val_prev) // i + 1)\n        packs += i * (k_new - k_prev)\n        k_prev = k_new\n        val_prev += a[i - 1]\n    print(packs)"]