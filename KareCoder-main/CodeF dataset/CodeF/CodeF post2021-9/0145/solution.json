["import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nfor _ in range(inp()):\n    n = inp()\n    arr = inlt()\n    arr.sort()\n    min_dif = 1000000009\n    for i in range(1, n - 1):\n        min_dif = min(min_dif, arr[i + 1] - arr[i - 1])\n    print(min_dif)", "try:\n    for _ in range(int(input())):\n        n = int(input())\n        l = list(map(int, input().split(' ')))\n        l.sort()\n        for i in range(1, len(l) - 1):\n            z = l[i] - l[i - 1] + (l[i + 1] - l[i])\n            if i == 1:\n                mn = z\n            else:\n                mn = min(mn, z)\n        print(mn)\nexcept:\n    pass", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\ni = inp()\nans = []\nfor _ in range(i):\n    x = inp()\n    l = inlt()\n    l = sorted(l)\n    res = float('inf')\n    for idx in range(2, x):\n        res = min(res, l[idx - 1] - l[idx - 2] + l[idx] - l[idx - 1])\n    ans.append(res)\nfor row in ans:\n    print(row)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    args = input().split()\n    args = [int(e) for e in args]\n    args.sort()\n    mn = 10000000000.0\n    for i in range(1, len(args) - 1):\n        dif = args[i + 1] - args[i - 1]\n        mn = dif if dif < mn else mn\n    print(mn)", "test_case = int(input())\nfor t in range(test_case):\n    n = int(input())\n    l = list(map(int, input().strip().split()))\n    l.sort()\n    l_ = []\n    for i in range(1, n - 1):\n        l_.append(l[i + 1] - l[i - 1])\n    print(min(l_))", "t = int(input())\nfor testcase in range(t):\n    n = int(input())\n    sticks = [int(x) for x in input().split()]\n    sticks.sort()\n    best = sticks[2] - sticks[0]\n    for i in range(0, n - 2):\n        diff = sticks[i + 2] - sticks[i]\n        if diff < best:\n            best = diff\n    print(best)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    k = 10 ** 20\n    arr.sort()\n    for i in range(n - 2):\n        x = abs(arr[i] - arr[i + 1])\n        x += abs(arr[i + 1] - arr[i + 2])\n        k = min(k, x)\n    print(k)", "t = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    fre = dict()\n    for val in arr:\n        fre[val] = fre.get(val, 0) + 1\n    arr.sort()\n    mnOps = 10000000000.0\n    for i in range(0, len(arr)):\n        if i + 3 <= len(arr):\n            f = arr[i]\n            s = arr[i + 1]\n            t = arr[i + 2]\n            op = s - f + t - s\n            mnOps = min(op, mnOps)\n    print(mnOps)", "n = int(input())\nfor i in range(n):\n    num = int(input())\n    string = str(input())\n    arr = list(string.split(' '))\n    arr = [int(x) for x in arr]\n    arr.sort()\n    moves = 10 ** 9\n    j = 0\n    while j + 2 < num:\n        s = arr[j + 2] - arr[j]\n        if s < moves:\n            moves = s\n        j += 1\n    print(moves)", "for jj in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    arr.sort()\n    ans = 10 ** 9\n    for i in range(1, n - 1):\n        ans = min(ans, arr[i] - arr[i - 1] + arr[i + 1] - arr[i])\n    print(ans)", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    A = [int(a) for a in input().split()]\n    A.sort()\n    m = A[2] - A[0]\n    for i in range(n - 2):\n        if A[i + 2] - A[i] < m:\n            m = A[i + 2] - A[i]\n    print(m)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split(sep=' ')))\n    arr.sort()\n    mini = arr[2] - arr[0]\n    for i in range(1, n - 2):\n        if arr[i + 2] - arr[i] < mini:\n            mini = arr[i + 2] - arr[i]\n    print(mini)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    ans = 10 ** 20\n    for i in range(1, n - 1):\n        ans = min(ans, l[i + 1] - l[i - 1])\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    ans = 10 ** 20\n    for i in range(1, n - 1):\n        ans = min(ans, l[i + 1] - l[i - 1])\n    print(ans)", "def solve():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    arr = []\n    cost = -1\n    for idx in range(n - 2):\n        c = abs(a[idx + 2] - a[idx + 1]) + abs(a[idx] - a[idx + 1])\n        if cost == -1:\n            cost = c\n            continue\n        if cost > c:\n            cost = c\n    print(cost)\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    x = int(input())\n    y = list(map(int, input().split()))\n    z = list(sorted(y))\n    (l, m, r) = (0, 1, 2)\n    count = z[-1]\n    while r <= x - 1:\n        total = 0\n        total += z[m] - z[l]\n        total += z[r] - z[m]\n        count = min(count, total)\n        l += 1\n        m += 1\n        r += 1\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    ans = 10 ** 20\n    for i in range(1, n - 1):\n        ans = min(ans, l[i + 1] - l[i - 1])\n    print(ans)", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    s = math.inf\n    for i in range(1, n - 1):\n        s = min(s, abs(a[i + 1] - a[i]) + abs(a[i] - a[i - 1]))\n    print(s)", "def cal(a=[]):\n    ans = a[2] - a[0]\n    return ans\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = cal(a[0:3])\n    for i in range(n - 2):\n        ans = min(ans, cal(a[i:i + 3]))\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    k = [int(i) for i in input().split(' ')]\n    k.sort()\n    i = 0\n    mop = 1000000000\n    for j in range(n - 2):\n        op1 = k[j + 1] - k[j]\n        op2 = k[j + 2] - k[j + 1]\n        mop = min(mop, op1 + op2)\n    print(mop)", "n = int(input())\nfor i in range(n):\n    l = int(input())\n    A = list(map(int, input().split()))\n    A.sort()\n    ans_lis = []\n    for j in range(len(A)):\n        x = A[j:j + 3]\n        if len(x) == 3:\n            summ = x[2] - x[1] + (x[1] - x[0])\n            ans_lis.append(summ)\n    print(min(ans_lis))", "for _ in range(int(input())):\n    n = int(input())\n    x = sorted(list(map(int, input().split())))\n    q = -1\n    if n >= 4:\n        for (i, e) in enumerate(x[:-2]):\n            if i <= n - 2:\n                tmp = x[i:i + 3]\n            else:\n                tmp = x[i - 1:]\n                break\n            dif = sum([tmp[1] - tmp[0], tmp[2] - tmp[1]])\n            if q < 0:\n                q = dif\n            elif dif <= q:\n                q = dif\n            else:\n                pass\n    else:\n        q = sum([x[1] - x[0], x[2] - x[1]])\n    print(q)", "t = int(input())\nwhile t:\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    ans = 0\n    an = []\n    for i in range(0, n - 2):\n        ans = l[i + 2] - l[i + 1] + (l[i + 1] - l[i])\n        an.append(ans)\n    print(min(an))\n    t = t - 1", "for x in range(int(input())):\n    n = int(input())\n    res = 1000000000.0\n    arr = list(map(int, input().split()))\n    arr.sort()\n    for x in range(n - 2):\n        res = min(res, arr[x + 2] - arr[x + 1] + arr[x + 1] - arr[x])\n    print(res)", "num_tests = int(input())\nfor i in range(num_tests):\n    num_sticks = int(input())\n    sticks = sorted(list((int(val) for val in input().split(' '))))\n    min_diff = sticks[2] - sticks[0]\n    for j in range(2, num_sticks):\n        min_diff = min(min_diff, sticks[j] - sticks[j - 2])\n    print(min_diff)", "for testcase in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    res = 10 ** 9 + 7\n    for i in range(2, n):\n        res = min(res, abs(a[i - 1] - a[i - 2]) + abs(a[i - 1] - a[i]))\n    print(res)", "n = int(input())\na = []\nfor i in range(n):\n    x = int(input())\n    s = str(input()).split()\n    s = map(int, s)\n    k = 10 ** 9\n    s = sorted(s)\n    for i in range(0, len(s) - 2):\n        k = min(k, s[i + 2] - s[i])\n    a.append(k)\nfor j in range(len(a)):\n    print(a[j])", "for _ in range(int(input())):\n    num = int(input())\n    ks = list(map(int, input().split()))\n    ks = sorted(ks)\n    res = 10 ** 9\n    for i in range(1, num - 1):\n        res = min(res, ks[i + 1] - ks[i - 1])\n    print(res)", "n = int(input())\nfor j in range(n):\n    s = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    (l, r) = (0, 2)\n    res = a[-1] - a[0]\n    while r < s:\n        res = min(a[r] - a[l], res)\n        l += 1\n        r += 1\n    print(res)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    l1.sort()\n    d = 12435465768\n    for i in range(len(l1) - 2):\n        d = min(d, l1[i + 2] - l1[i])\n    print(d)", "n = int(input())\nfor i in range(n):\n    l = int(input())\n    a = input()\n    g = a.split()\n    for i in range(len(g)):\n        g[i] = int(g[i])\n    g.sort()\n    ans = 9999999999999999999999999999999999999999999999999\n    for i in range(1, len(g) - 1):\n        if g[i - 1] == g[i] == g[i + 1]:\n            ans = min(ans, 0)\n        elif g[i - 1] == g[i]:\n            ans = min(ans, g[i + 1] - g[i])\n        elif g[i] == g[i + 1]:\n            ans = min(ans, g[i] - g[i - 1])\n        else:\n            ans = min(ans, g[i + 1] - g[i] + g[i] - g[i - 1])\n    print(ans)", "t = int(input())\nfor ii in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 999999999999\n    for i in range(n - 2):\n        ans = min(ans, abs(a[i] - a[i + 1]) + abs(a[i + 2] - a[i + 1]))\n    print(ans)", "t = int(input())\nfor ii in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 999999999999\n    for i in range(n - 2):\n        ans = min(ans, abs(a[i] - a[i + 1]) + abs(a[i + 2] - a[i + 1]))\n    print(ans)", "for s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    print(min((y - x for (x, y) in zip(a, a[2:]))))", "t = int(input(''))\nfor z in range(t):\n    n = int(input(''))\n    a = list(map(int, input('').split()))[:n]\n    a = sorted(a)\n    c = 10000000000\n    k = 0\n    for i in range(n):\n        if i == 0:\n            if c > abs(a[1] - a[0]) + abs(a[2] - a[0]):\n                c = abs(a[1] - a[0]) + abs(a[2] - a[0])\n        elif i == n - 1:\n            if c > abs(a[n - 1] - a[n - 2]) + abs(a[n - 3] - a[n - 1]):\n                c = abs(a[n - 1] - a[n - 2]) + abs(a[n - 3] - a[n - 1])\n        elif c > abs(a[i - 1] - a[i]) + abs(a[i + 1] - a[i]):\n            c = abs(a[i - 1] - a[i]) + abs(a[i + 1] - a[i])\n    print(c)", "def solve():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    ans = 2000000000.0\n    for i in range(2, n):\n        ans = min(ans, a[i] - a[i - 2])\n    print(ans)\nt = int(input())\nfor i in range(t):\n    solve()", "for str in [*open(0)][2::2]:\n    p = sorted(map(int, str.split()))\n    print(min((b - a for (a, b) in zip(p, p[2:]))))", "def solve():\n    n = int(input())\n    arr = sorted(list(map(int, input().split())))\n    min_ans = 1000000000.0\n    for i in range(1, n - 1):\n        sum = arr[i] + arr[i - 1] + arr[i + 1]\n        ans = arr[i + 1] - arr[i - 1]\n        min_ans = min(min_ans, ans)\n    return min_ans\nt = int(input())\nfor i in range(t):\n    print(solve())", "for _ in range(int(input())):\n    g = eval(input())\n    p = sorted(map(int, input().split()))\n    print(min([p[i + 1] - p[i - 1] for i in range(1, g - 1)]))", "for _ in range(int(input())):\n    nap = int(input())\n    app = sorted(map(int, input().split()))\n    rat = 10 ** 9\n    for i in range(nap - 2):\n        rat = min(rat, app[i + 2] - app[i])\n    print(rat)", "for t in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    print(min([a[i + 1] - a[i - 1] for i in range(1, n - 1)]))", "for t in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    print(min([a[i + 1] - a[i - 1] for i in range(1, n - 1)]))", "for i in range(int(input())):\n    n = int(input())\n    s = sorted(list(map(int, input().split())))\n    ans = 10000000000\n    for i in range(2, n):\n        ans = min(ans, s[i] - s[i - 1] + (s[i - 1] - s[i - 2]))\n    print(ans)", "for s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    print(min((y - x for (x, y) in zip(a, a[2:]))))", "for s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    print(min((y - x for (x, y) in zip(a, a[2:]))))", "def solve():\n    for i in range(int(input())):\n        n = int(input())\n        a = [int(x) for x in input().split()]\n        a.sort()\n        l = []\n        for i in range(1, n - 1):\n            l.append(a[i] - a[i - 1] + (a[i + 1] - a[i]))\n        print(min(l))\nsolve()", "for v in [*open(0)][2::2]:\n    a = sorted(map(int, v.split()))\n    print(min((y - x for (x, y) in zip(a, a[2:]))))", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(map(int, input().split()))\n    print(min([a[i + 1] - a[i - 1] for i in range(1, n - 1)]))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = max(a)\n    for i in range(2, n):\n        ans = min(ans, a[i] - a[i - 2])\n    print(ans)", "for s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    print(min((y - x for (x, y) in zip(a, a[2:]))))", "for s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    print(min((y - x for (x, y) in zip(a, a[2:]))))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 10 ** 128\n    arr.sort()\n    for i in range(1, n - 1):\n        ans = min(ans, arr[i] - arr[i - 1] + arr[i + 1] - arr[i])\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = input().split()\n    arr = [int(i) for i in arr]\n    arr.sort()\n    minv = 1 << 34\n    for i in range(n - 2):\n        minv = min(minv, arr[i + 2] - arr[i])\n    print(minv)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(j) for j in input().split()]\n    arr.sort()\n    ans = 10 ** 10\n    for i in range(2, n):\n        ans = min(ans, arr[i] - arr[i - 1] + arr[i] - arr[i - 2])\n    for i in range(1, n - 1):\n        ans = min(ans, arr[i] - arr[i - 1] + arr[i + 1] - arr[i])\n    for i in range(0, n - 2):\n        ans = min(ans, arr[i + 2] - arr[i + 1] + arr[i + 1] - arr[i])\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    arr.sort()\n    ans = 1000000000000000\n    for i in range(1, n - 1):\n        ans = min(ans, abs(arr[i] - arr[i - 1]) + abs(arr[i] - arr[i + 1]))\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = a[1] - a[0] + (a[2] - a[1])\n    for i in range(1, n - 1):\n        ans = min(ans, a[i] - a[i - 1] + (a[i + 1] - a[i]))\n    print(ans)", "t = int(input())\nfor ii in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 999999999999\n    for i in range(n - 2):\n        ans = min(ans, abs(a[i] - a[i + 1]) + abs(a[i + 2] - a[i + 1]))\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    A.sort()\n    m = float('inf')\n    for i in range(n - 2):\n        if A[i + 2] - A[i] < m:\n            m = A[i + 2] - A[i]\n    print(m)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    ans = 3 * 10 ** 9\n    for i in range(1, n - 1):\n        ans = min(ans, -arr[i - 1] + arr[i + 1])\n    return ans\nfor _ in range(int(input())):\n    print(solve())", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 10 ** 9\n    l.sort()\n    for x in range(n - 2):\n        sm = 0\n        sm += l[x + 1] - l[x]\n        sm += l[x + 2] - l[x + 1]\n        ans = min(ans, sm)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    L = list(map(int, input().split()))\n    L.sort()\n    ans = abs(L[0] - L[1]) + abs(L[1] - L[2])\n    for i in range(1, n - 1):\n        ans = min(ans, abs(L[i] - L[i - 1]) + abs(L[i] - L[i + 1]))\n    print(ans)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort(reverse=True)\n    d = a[0] - a[1] + (a[1] - a[2])\n    for i in range(3, n):\n        d = min(a[i - 2] - a[i - 1] + (a[i - 1] - a[i]), d)\n    print(d)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    ans = 1000000000\n    for i in range(2, n):\n        ans = min(ans, arr[i] - arr[i - 1] + arr[i - 1] - arr[i - 2])\n    print(ans)", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    ans = 1000000000\n    a.sort()\n    for i in range(n - 2):\n        ans = min(ans, abs(a[i + 1] - a[i]) + abs(a[i + 1] - a[i + 2]))\n    print(ans)", "import sys\nimport math\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_ls():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef test_ok(ok):\n    print('YES' if ok else 'NO')\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        ls = get_ls()\n        ls.sort()\n        mn = 1000000000\n        for i in range(1, n - 1):\n            diff = ls[i + 1] - ls[i - 1]\n            mn = min(mn, diff)\n        print(mn)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    arr = input().split(' ')\n    arr = [int(i) for i in arr]\n    arr.sort()\n    ans = 2 ** 31\n    for i in range(n - 2):\n        ans = min(ans, arr[i + 2] - arr[i])\n    print(ans)", "n = int(input())\nfor i in range(n):\n    l = int(input())\n    m = list(map(int, input().split()))\n    p1 = 0\n    p2 = 2\n    m.sort()\n    minn = float('inf')\n    while p2 < len(m):\n        s = m[p1 + 1] - m[p1] + (m[p2] - m[p1 + 1])\n        minn = min(s, minn)\n        p1 += 1\n        p2 += 1\n    print(minn)", "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    lst.sort()\n    ans = 1000000000000000.0\n    for j in range(n):\n        ele = lst[j]\n        c = 0\n        if j - 2 >= 0:\n            c += ele - lst[j - 2]\n            c += ele - lst[j - 1]\n            ans = min(ans, c)\n        if j - 1 >= 0 and j + 1 < n:\n            c = -lst[j - 1] + lst[j + 1]\n            ans = min(ans, c)\n        if j + 2 < n:\n            c = lst[j + 2] - ele + lst[j + 1] - ele\n            ans = min(ans, c)\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    values = list(map(int, input().split()))\n    values.sort()\n    j = 1\n    out = 2 * 1000000000\n    while j <= n - 2:\n        out = min(out, values[j + 1] - values[j - 1])\n        j += 1\n    print(out)", "for _ in range(int(input())):\n    n = int(input())\n    ls = [int(i) for i in input().split(' ')]\n    ls.sort()\n    mn = ls[2] - ls[0]\n    for i in range(2, n - 1):\n        mn = min(mn, ls[i + 1] - ls[i - 1])\n    print(mn)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    x = a[2] - a[0]\n    for i in range(3, n):\n        y = a[i] - a[i - 2]\n        if y < x:\n            x = y\n    print(x)", "import math\n\ndef gcd(a, b):\n    while a % b != 0:\n        aux = b\n        b = a % b\n        a = aux\n    return b\n\ndef lcm(a, b):\n    return a / gcd(a, b) * b\n\ndef solve(a, b):\n    dif = math.inf\n    for i in range(2, a):\n        dif = min(b[i] - b[i - 2], dif)\n    return dif\nres = []\nfor _ in range(int(input())):\n    a = int(input())\n    b = sorted(list(map(int, input().split())))\n    res.append(solve(a, b))\nprint(*res, sep='\\n')", "def f():\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    ans = 999999999\n    for i in range(len(l) - 2):\n        x = l[i]\n        y = l[i + 1]\n        z = l[i + 2]\n        res = y - x + (z - y)\n        ans = min(res, ans)\n    print(ans)\nt = int(input())\nwhile t:\n    f()\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    k = a[-1]\n    for i in range(1, n - 1):\n        if a[i + 1] - a[i - 1] < k:\n            k = a[i + 1] - a[i - 1]\n    print(k)", "import sys\nimport math\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\ntest = inp()\nfor k in range(test):\n    n = inp()\n    arr = inlt()\n    arr.sort()\n    minturn = math.inf\n    for i in range(1, n - 1):\n        minturn = min(minturn, arr[i] - arr[i - 1] + (arr[i + 1] - arr[i]))\n    print(minturn)", "for i in range(int(input())):\n    leng = int(input())\n    sticks = [int(x) for x in input().split()]\n    sticks = sorted(sticks)\n    mi = float('inf')\n    for i in range(1, len(sticks) - 1):\n        bam = abs(sticks[i] - sticks[i - 1]) + abs(sticks[i] - sticks[i + 1])\n        if bam < mi:\n            mi = bam\n    print(mi)", "y = int(input())\nfor z in range(y):\n    trash = int(input())\n    item = list(map(int, input().split()))\n    if len(item) <= 2:\n        print('0')\n    item.sort()\n    counter = abs(item[1] - item[0]) + abs(item[2] - item[1])\n    for x in range(len(item) - 2):\n        counter = max(min(abs(item[x + 1] - item[x]) + abs(item[x + 2] - item[x + 1]), counter), 0)\n    print(counter)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    mn = None\n    for i in range(1, len(arr) - 1):\n        l = arr[i - 1]\n        r = arr[i + 1]\n        curr = r - l\n        if mn is None:\n            mn = curr\n        else:\n            mn = min(mn, curr)\n    print(mn)", "for s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    print(min((y - x for (x, y) in zip(a, a[2:]))))", "import sys\nreadline = sys.stdin.readline\nINF = 1 << 60\nt = int(readline())\nfor _ in range(t):\n    ans = INF\n    n = int(readline())\n    A = sorted(map(int, readline().split()))\n    for i in range(n - 2):\n        AA = A[i:i + 3] * 2\n        for j in range(3):\n            (a, b, c) = AA[j:j + 3]\n            tmp = abs(a - b) + abs(a - c)\n            ans = min(ans, tmp)\n    print(ans)", "n = int(input())\n\ndef func(arr, n):\n    arr.sort()\n    res = 2 ** 32 + 1\n    for i in range(1, n - 1, 1):\n        res = min(res, arr[i] - arr[i - 1] + arr[i + 1] - arr[i])\n    print(res)\nfor i in range(n):\n    l = int(input())\n    A = [int(i) for i in input().split()]\n    func(A, l)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = input().split()\n    for i in range(n):\n        arr[i] = int(arr[i])\n    arr.sort()\n    ans = 1000000000\n    for i in range(0, n - 2):\n        if arr[i] == arr[i + 1] == arr[i + 2]:\n            ans = min(0, ans)\n        elif arr[i] == arr[i + 1]:\n            ans = min(ans, arr[i + 2] - arr[i + 1])\n        else:\n            ans = min(ans, arr[i + 1] - arr[i] + arr[i + 2] - arr[i], arr[i + 1] - arr[i] + arr[i + 2] - arr[i + 1])\n    print(ans)", "N = int(input())\nfor _ in range(N):\n    n = int(input())\n    A = [int(x) for x in input().split(' ')]\n    A = sorted(A)\n    ans = max(A) * 3\n    for i in range(0, n - 2):\n        a1 = A[i + 1] - A[i]\n        a2 = A[i + 2] - A[i + 1]\n        ans = min(ans, a1 + a2)\n    print(ans)", "import sys\nimport math\nimport bisect\nfrom sys import stdin, stdout\nfrom math import gcd, floor, sqrt, log\nfrom collections import defaultdict as dd\nfrom bisect import bisect_left as bl, bisect_right as br\nfrom collections import Counter\nsys.setrecursionlimit(100000000)\ninp = lambda : int(input())\nstrng = lambda : input().strip()\njn = lambda x, l: x.join(map(str, l))\nstrl = lambda : list(input().strip())\nmul = lambda : map(int, input().strip().split())\nmulf = lambda : map(float, input().strip().split())\nseq = lambda : list(map(int, input().strip().split()))\narr = lambda : list(map(int, input().split()))\nceil = lambda x: int(x) if x == int(x) else int(x) + 1\nceildiv = lambda x, d: x // d if x % d == 0 else x // d + 1\nflush = lambda : stdout.flush()\nstdstr = lambda : stdin.readline()\nstdint = lambda : int(stdin.readline())\nstdpr = lambda x: stdout.write(str(x))\nmod = 1000000007\nfor _ in range(inp()):\n    n = inp()\n    a = arr()\n    a.sort()\n    ans = 9999999999\n    for i in range(1, n - 1):\n        ans = min(ans, abs(a[i] - a[i - 1]) + abs(a[i] - a[i + 1]))\n    print(ans)", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    minm = 10000000000.0\n    for i in range(n):\n        if i == 0:\n            total = a[i + 1] - a[i] + (a[i + 2] - a[i])\n        elif i == n - 1:\n            total = a[i] - a[i - 1] + (a[i] - a[i - 2])\n        else:\n            total = a[i] - a[i - 1] + (a[i + 1] - a[i])\n        minm = min(minm, total)\n    print(minm)\n    t -= 1", "t = int(input())\n\ndef main():\n    for q in range(t):\n        M = 100000000000000\n        NUM = int(input())\n        ARRAY = list(map(int, input().split()))\n        ARRAY = sorted(ARRAY)\n        for i in range(NUM - 2):\n            RESULT = abs(ARRAY[i + 2] - ARRAY[i + 1]) + abs(ARRAY[i + 1] - ARRAY[i])\n            if RESULT < M:\n                M = RESULT\n        print(M)\nmain()", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    minn = 10 ** 20\n    a = 0\n    b = 0\n    c = 0\n    for i in range(n - 2):\n        a = arr[i]\n        b = arr[i + 1]\n        c = arr[i + 2]\n        minn = min(minn, abs(a - b) + abs(a - c), abs(a - b) + abs(b - c), abs(a - c) + abs(b - c))\n    print(minn)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    m = 10000000000\n    for i in range(n - 2):\n        a = l[i]\n        b = l[i + 1]\n        c = l[i + 2]\n        x = b - a + c - b\n        m = min(x, m)\n    print(m)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    a = []\n    for i in range(1, n):\n        a.append(l[i] - l[i - 1])\n    b = []\n    for i in range(1, n - 1):\n        b.append(a[i] + a[i - 1])\n    print(min(b))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    b = []\n    for i in range(len(a) - 2):\n        b.append(a[i + 2] - a[i])\n    ans = 0\n    ans = min(b)\n    print(ans)", "def pd(x, y, z):\n    a = y - x\n    b = z - y\n    return b + a\nn = int(input())\nfor _ in range(n):\n    a = int(input())\n    b = list(map(int, input().split()))\n    b.sort()\n    zx = 10000000000\n    for i in range(a - 2):\n        if zx > pd(b[i], b[i + 1], b[i + 2]):\n            zx = pd(b[i], b[i + 1], b[i + 2])\n    print(zx)", "for j in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l = sorted(l)\n    diff = 9223372036854775807\n    for i in range(1, n - 1):\n        dif2 = abs(l[i - 1] - l[i]) + abs(l[i] - l[i + 1])\n        if dif2 < diff:\n            diff = dif2\n    print(diff)", "import sys\nsys.setrecursionlimit(200000)\nimport math\nfrom collections import Counter\nfrom collections import defaultdict\nfrom collections import deque\ninput = sys.stdin.readline\nfrom functools import lru_cache\nimport heapq\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\ntestcases = inp()\nfor _ in range(testcases):\n    length = inp()\n    arr = inlt()\n    arr.sort()\n    y = math.inf\n    for i in range(len(arr)):\n        if i - 1 >= 0 and i + 1 < len(arr):\n            y = min(arr[i + 1] - arr[i - 1], y)\n        if i - 2 >= 0:\n            y = min(2 * arr[i] - arr[i - 1] - arr[i - 2], y)\n        if i + 2 < len(arr):\n            y = min(arr[i + 2] + arr[i + 1] - 2 * arr[i], y)\n    print(y)", "t = int(input())\n\ndef count_steps(a, b, c):\n    return abs(b - a) + abs(b - c)\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    a.sort()\n    min_steps = 10 ** 10\n    for i in range(len(a)):\n        if i + 3 == len(a) + 1:\n            break\n        min_steps = min(min_steps, count_steps(a[i], a[i + 1], a[i + 2]))\n    print(min_steps)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 1000000007\n    for i in range(n - 2):\n        k = abs(a[i] - a[i + 1]) + abs(a[i + 1] - a[i + 2])\n        ans = min(k, ans)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    (l, r) = (0, 2)\n    ans = float('inf')\n    while r < n:\n        for m in range(l, r + 1):\n            temp = 0\n            for k in range(l, r + 1):\n                temp += abs(a[k] - a[m])\n            ans = min(ans, temp)\n        l += 1\n        r += 1\n    print(ans)", "ans = 0\nfor asdfh in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    valuemin = a[2]\n    for x in range(n - 2):\n        valuenew = a[x + 2] - a[x]\n        if valuenew < valuemin:\n            valuemin = valuenew\n    print(valuemin)", "def solve(array, m):\n    array.sort()\n    ans = abs(arr[0] - arr[2])\n    for i in range(0, m - 2):\n        if abs(array[i] - array[i + 2]) < ans:\n            ans = abs(array[i] - array[i + 2])\n    return ans\nn = int(input())\nfor i in range(n):\n    m = int(input())\n    arr = [int(x) for x in input().split()]\n    print(solve(arr, m))", "for _ in range(int(input())):\n    __ = input()\n    arr = [int(i) for i in input().split(' ')]\n    arr.sort()\n    res = arr[2] - arr[0]\n    for i in range(1, len(arr) - 1):\n        res = min(res, arr[i + 1] - arr[i - 1])\n    print(res)"]