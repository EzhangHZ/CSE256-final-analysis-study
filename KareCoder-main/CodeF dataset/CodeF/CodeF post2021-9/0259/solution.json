["from sys import stdin\n\ndef solve():\n    results = []\n    for _ in range(int(stdin.readline().strip())):\n        (mex, xor) = map(int, stdin.readline().strip().split())\n        ans = mex\n        if (ans - 1) % 4 == 0:\n            xor_ = ans - 1\n        if (ans - 1) % 4 == 1:\n            xor_ = 1\n        if (ans - 1) % 4 == 2:\n            xor_ = ans\n        if (ans - 1) % 4 == 3:\n            xor_ = 0\n        if xor == xor_:\n            results.append(ans)\n            continue\n        if xor_ ^ xor != mex:\n            ans += 1\n        else:\n            ans += 2\n        results.append(ans)\n    print('\\n'.join(map(str, results)))\nsolve()", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    x = (0, a - 1, 1, a)[a % 4]\n    print(a + (b != x) + (b ^ x == a))", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    x = (0, a - 1, 1, a)[a % 4]\n    print(a + (b != x) + (b ^ x == a))", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    x = (0, a - 1, 1, a)[a % 4]\n    print(a + (b != x) + (b ^ x == a))", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_list_string():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\n\ndef get_print_int(x):\n    sys.stdout.write(str(x) + '\\n')\n\ndef get_print(x):\n    sys.stdout.write(x + '\\n')\n\ndef get_print_int_same(x):\n    sys.stdout.write(str(x) + ' ')\n\ndef get_print_same(x):\n    sys.stdout.write(x + ' ')\nfrom sys import maxsize\n\ndef solve():\n    for _ in range(get_int()):\n        (a, b) = get_ints()\n        xor = 0\n        num = (a - 1) % 4\n        if num == 0:\n            xor = a - 1\n        elif num == 1:\n            xor = 1\n        elif num == 2:\n            xor = a\n        else:\n            xor = 0\n        if xor == b:\n            get_print_int(a)\n        else:\n            res = xor ^ a\n            if res == b:\n                get_print_int(a + 2)\n            else:\n                get_print_int(a + 1)\nsolve()", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    x = (0, a - 1, 1, a)[a % 4]\n    print(a + (b != x) + (b ^ x == a))", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    x = (0, a - 1, 1, a)[a % 4]\n    print(a + (b != x) + (b ^ x == a))", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    x = (0, a - 1, 1, a)[a % 4]\n    print(a + (b != x) + (b ^ x == a))", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    x = (0, a - 1, 1, a)[a % 4]\n    print(a + (b != x) + (b ^ x == a))", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    x = (0, a - 1, 1, a)[a % 4]\n    print(a + (b != x) + (b ^ x == a))", "import sys\ninp = sys.stdin.readline()\ntest = int(inp.strip('\\n'))\nresult = ''\nfor i in range(test):\n    inp = sys.stdin.readline()\n    (a, b) = list(map(int, inp.strip('\\n').split()))\n    val = 0\n    a1 = a - 1\n    if a1 % 4 == 0:\n        val = a1\n    elif a1 % 4 == 1:\n        val = 1\n    elif a1 % 4 == 2:\n        val = a1 + 1\n    else:\n        val = 0\n    if val == b:\n        r = str(a) + '\\n'\n    elif val ^ a == b:\n        r = str(a + 2) + '\\n'\n    else:\n        r = str(a + 1) + '\\n'\n    sys.stdout.write(r)", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    x = (0, a - 1, 1, a)[a % 4]\n    print(a + (b != x) + (b ^ x == a))", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    x = (0, a - 1, 1, a)[a % 4]\n    print(a + (b != x) + (b ^ x == a))", "import sys\n\ndef input():\n    return sys.stdin.readline().strip()\n\ndef ii():\n    return int(input())\n\ndef mii():\n    return map(int, input().split())\n\ndef lmii():\n    return list(mii())\nfor _ in range(ii()):\n    (a, b) = mii()\n    if (a - 1) % 2 == 1:\n        cur = 1 - (a - 1) // 2 % 2\n    elif (a - 1) % 4 == 0:\n        cur = a - 1\n    else:\n        cur = a\n    if b ^ cur == 0:\n        print(a)\n    elif b ^ cur < a:\n        print(a + 1)\n    elif b ^ cur == a:\n        print(a + 2)\n    else:\n        print(a + 1)", "import sys\nn = int(sys.stdin.readline())\nwhile n > 0:\n    n -= 1\n    ab = sys.stdin.readline().split()\n    a = int(ab[0])\n    b = int(ab[1])\n    ch = (a - 1) % 4\n    xr = 0\n    if ch == 0:\n        xr = a - 1\n    elif ch == 1:\n        xr = 1\n    elif ch == 2:\n        xr = a\n    elif ch == 3:\n        xr = 0\n    if b == xr:\n        print(a)\n    elif xr ^ a == b:\n        print(a + 2)\n    else:\n        print(a + 1)", "mod = 1000000007\nfrom sys import stdin, stdout\nfrom collections import defaultdict, Counter, deque\n\ndef computeXOR(n):\n    if n % 4 == 0:\n        return n\n    if n % 4 == 1:\n        return 1\n    if n % 4 == 2:\n        return n + 1\n    return 0\nfor _ in range(int(stdin.readline())):\n    (a, b) = map(int, stdin.readline().split())\n    xor = computeXOR(a - 1)\n    if xor == b:\n        print(a)\n    elif xor ^ a == b:\n        print(a + 2)\n    else:\n        print(a + 1)", "import sys\npin = sys.stdin.readline\n\ndef XOR(n):\n    return [n, 1, n + 1, 0][n % 4]\nfor T in range(int(pin())):\n    (a, b) = map(int, pin().split())\n    x = XOR(a - 1)\n    y = x ^ b\n    if y == 0:\n        print(a)\n    elif y != a:\n        print(a + 1)\n    else:\n        print(a + 2)", "def computeXOR(n):\n    if n % 4 == 0:\n        return n\n    if n % 4 == 1:\n        return 1\n    if n % 4 == 2:\n        return n + 1\n    return 0\n\ndef mixUp(mex, xor):\n    if mex == 0:\n        return 1\n    else:\n        n = mex - 1\n        calculated_xor = computeXOR(n)\n        if calculated_xor == xor:\n            return n + 1\n        else:\n            x = calculated_xor ^ xor\n            if x == mex:\n                return n + 3\n            else:\n                return n + 2\nt = int(input())\nfinal = []\nfor _ in range(t):\n    (mex, xor) = map(int, input().split())\n    final.append(mixUp(mex, xor))\nfor _ in range(t):\n    print(final[_])", "import math\nimport heapq\nimport string\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right, insort\nimport sys\ninput = sys.stdin.readline\nS = lambda : input().rstrip()\nI = lambda : int(S())\nM = lambda : map(int, S().split())\nL = lambda : list(M())\nH = 1000000000 + 7\n\ndef solve(x, n, b):\n    if x == b:\n        print(n + 1)\n    elif b ^ x == a:\n        print(n + 3)\n    else:\n        print(n + 2)\nfor _ in range(I()):\n    (a, b) = M()\n    n = a - 1\n    r = n % 4\n    if r == 0:\n        solve(n, n, b)\n    elif r == 1:\n        solve(1, n, b)\n    elif r == 2:\n        solve(n + 1, n, b)\n    else:\n        solve(0, n, b)", "import math\nimport sys\nimport collections\nimport bisect\nimport time\nimport random\nimport itertools\nimport string\nfrom collections import Counter, defaultdict\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef computeXOR(n):\n    if n % 4 == 0:\n        return n\n    if n % 4 == 1:\n        return 1\n    if n % 4 == 2:\n        return n + 1\n    return 0\nfor t in range(int(input())):\n    (a, b) = get_ints()\n    ans = a\n    curr_xor = computeXOR(a - 1)\n    if curr_xor == b:\n        print(ans)\n    else:\n        no_req = b ^ curr_xor\n        if no_req == a:\n            print(ans + 2)\n        else:\n            print(ans + 1)", "t = int(input())\nret = 0\nret_list = []\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    ret += a\n    if (a - 1) % 4 == 0:\n        xor = a - 1\n    elif (a - 1) % 4 == 1:\n        xor = 1\n    elif (a - 1) % 4 == 2:\n        xor = a\n    elif (a - 1) % 4 == 3:\n        xor = 0\n    if xor == b:\n        ret_list.append(ret)\n    elif xor ^ a != b:\n        ret_list.append(ret + 1)\n    elif xor ^ a == b:\n        ret_list.append(ret + 2)\n    ret = 0\nfor i in ret_list:\n    print(i)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    n = a - 1\n    x = [n, 1, n + 1, 0][n % 4]\n    y = x ^ b\n    if y == 0:\n        print(a)\n    elif y != a:\n        print(a + 1)\n    else:\n        print(a + 2)", "import sys\nimport math\nimport random\nimport heapq\nsys.setrecursionlimit(10 ** 6)\ninput = sys.stdin.readline\n\ndef pow(a, n, m):\n    if n == 0:\n        return 1\n    x = pow(a, n // 2, m)\n    if n % 2 == 0:\n        return x * x % m\n    else:\n        return x * x * a % m\n\ndef gcd(a, b):\n    while b != 0:\n        (a, b) = (b, a % b)\n    return a\n\ndef bs(arr, le, ri):\n    l = 0\n    arr.sort()\n    r = len(arr) - 1\n    ans = 10000000\n    while l <= r:\n        m = (l + r) // 2\n        if arr[m] >= le and arr[m] <= ri:\n            ans = arr[m]\n            r = m - 1\n        elif arr[m] < le:\n            l = m + 1\n        else:\n            r = m - 1\n    return ans\nans = 0\n\ndef dfs(i, c, cr, al, r, end):\n    global ans\n    for j in al[i]:\n        if r[j] < cr:\n            ans += c + 1\n            end[j] += c + 1\n        dfs(j, c, cr, al, r, end)\nt = int(input())\nl = [0]\nfor i in range(1, 300001):\n    l.append(l[-1] ^ i)\nwhile t > 0:\n    (a, b) = map(int, input().split())\n    if l[a - 1] == b:\n        print(a)\n    elif l[a - 1] ^ b == a:\n        print(a + 2)\n    else:\n        print(a + 1)\n    t -= 1", "import sys\ninput = sys.stdin.readline\nI = lambda : list(map(int, input().split()))\nxor = [0]\nfor i in range(1, 3 * 10 ** 5 + 1):\n    xor.append(i ^ xor[-1])\nfor tc in range(int(input())):\n    (m, x) = I()\n    val = xor[m - 1]\n    if val != x:\n        if val ^ x == m:\n            print(m + 2)\n        else:\n            print(m + 1)\n    else:\n        print(m)", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\n\ndef get_list_strings():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef solve(a, b, array):\n    ans = a\n    xor = array[a - 1]\n    if xor == b:\n        sys.stdout.write(str(ans) + '\\n')\n        return\n    req = xor ^ b\n    if req == a:\n        ans += 2\n    else:\n        ans += 1\n    sys.stdout.write(str(ans) + '\\n')\n    return\nxorArray = [0]\nup = 3 * 10 ** 5\nfor i in range(1, up + 1):\n    ele = xorArray[-1] ^ i\n    xorArray.append(ele)\nT = get_int()\nwhile T:\n    (a, b) = get_ints()\n    solve(a, b, xorArray)\n    T -= 1", "import sys\ntestcases = int(input())\narr1 = [0] * 300001\nfor i in range(1, 300001):\n    arr1[i] = arr1[i - 1] ^ i\nwhile testcases > 0:\n    (a, b) = map(int, sys.stdin.readline().split())\n    c = arr1[a - 1]\n    if c == b:\n        print(a)\n    elif c ^ a == b:\n        print(a + 2)\n    else:\n        print(a + 1)\n    testcases -= 1", "test = int(input())\nanswer = []\nfor t in range(test):\n    total = 0\n    (a, b) = list(map(int, input().split()))\n    if (a - 1) % 4 == 0:\n        total = a - 1\n    elif (a - 1) % 4 == 1:\n        total = 1\n    elif (a - 1) % 4 == 2:\n        total = a\n    elif (a - 1) % 4 == 3:\n        total = 0\n    if total != b:\n        newdig = total ^ b\n        if newdig == a:\n            length = a + 2\n        else:\n            length = a + 1\n    else:\n        length = a\n    answer.append(length)\nfor item in answer:\n    print(item)", "x = [0] * int(400000.0)\nfor i in range(1, int(400000.0)):\n    x[i] = x[i - 1] ^ i\nfor s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print([a, a + 1][x[a - 1] != b] + (x[a - 1] ^ a == b))", "from sys import stdin\ninput = stdin.readline\nm = 3 * 10 ** 5 + 1\nxor = [0] * m\nx = 0\nfor i in range(1, m):\n    xor[i] = xor[i - 1] ^ i\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if xor[a - 1] == b:\n        print(a)\n    elif xor[a - 1] ^ b == a:\n        print(a + 2)\n    else:\n        print(a + 1)", "import sys\nfrom sys import stdin, stdout\nfrom math import ceil, floor, sqrt, log, log2, log10\nfrom collections import Counter\nint_max = float('inf')\nint_min = -float('inf')\nANS = []\ninput = stdin.readline\n\ndef solve():\n    pass\nt = int(input())\nxors = [0]\nfor i in range(1, 300001):\n    xors.append(xors[i - 1] ^ i)\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    c = xors[a - 1]\n    if c == b:\n        print(a)\n    else:\n        print(a + 1 if c ^ b != a else a + 2)\nprint('\\n'.join(ANS))", "x = [0] * int(400000.0)\nfor i in range(1, int(400000.0)):\n    x[i] = x[i - 1] ^ i\nfor s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print([a, a + 1][x[a - 1] != b] + (x[a - 1] ^ a == b))", "n = int(input())\nres = []\nk = 3 * 10 ** 5\n\ndef preparation():\n    lst = []\n    sum = 0\n    for i in range(k):\n        sum = sum ^ i\n        lst.append(sum)\n    return lst\n\ndef get_res(a, b, prep):\n    res = 0\n    res = prep[a - 1]\n    x = b ^ res\n    if res == b:\n        return a\n    elif x == a:\n        return a + 2\n    else:\n        return a + 1\nprep = preparation()\nfor i in range(n):\n    lst = list(map(int, input().split()))\n    a = lst[0]\n    b = lst[1]\n    res.append(get_res(a, b, prep))\nfor elem in res:\n    print(elem)", "from sys import stdin\ninput = stdin.readline\n\ndef xor():\n    x = [0]\n    for i in range(1, 5 * 10 ** 5):\n        ele = x[-1] ^ i\n        x.append(ele)\n    return x\n\ndef func():\n    req = x[a - 1] ^ b\n    if req == 0:\n        print(a)\n    elif req != a:\n        print(a + 1)\n    else:\n        print(a + 2)\nx = xor()\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    func()", "x = [0] * int(400000.0)\nfor i in range(1, int(400000.0)):\n    x[i] = x[i - 1] ^ i\nfor s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print([a, a + 1][x[a - 1] != b] + (x[a - 1] ^ a == b))", "T = int(input())\nans = []\nxors = {}\nxor = 0\nfor i in range(300001):\n    xors[i] = xor\n    xor = xor ^ i\nfor t in range(T):\n    (a, b) = map(int, input().split())\n    xor = xors[a]\n    need = b ^ xor\n    if xor == b:\n        ans.append(a)\n    elif need == a:\n        ans.append(a + 2)\n    else:\n        ans.append(a + 1)\nprint(*ans, sep='\\n')", "import bisect\nimport copy\nimport decimal\nimport fractions\nimport heapq\nimport itertools\nimport math\nimport random\nimport sys\nfrom collections import Counter, deque, defaultdict\nfrom functools import lru_cache, reduce\nfrom heapq import heappush, heappop, heapify, heappushpop, _heappop_max, _heapify_max\n\ndef _heappush_max(heap, item):\n    heap.append(item)\n    heapq._siftdown_max(heap, 0, len(heap) - 1)\n\ndef _heappushpop_max(heap, item):\n    if heap and item < heap[0]:\n        (item, heap[0]) = (heap[0], item)\n        heapq._siftup_max(heap, 0)\n    return item\nfrom math import gcd as GCD\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nT = int(readline())\nxor = [0] * (3 * 10 ** 5 + 1)\nfor i in range(1, 3 * 10 ** 5 + 1):\n    xor[i] = xor[i - 1] ^ i\nfor _ in range(T):\n    (a, b) = map(int, readline().split())\n    if xor[a - 1] == b:\n        ans = a\n    elif xor[a - 1] ^ b == a:\n        ans = a + 2\n    else:\n        ans = a + 1\n    print(ans)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nt = inp()\nreq = []\nm = 0\nfor _ in range(t):\n    (a, b) = invr()\n    m = max(m, a)\n    req.append([a, b])\npref = (m + 1) * [0]\nfor i in range(m):\n    pref[i + 1] = pref[i] ^ i + 1\nfor i in range(t):\n    (a, b) = (req[i][0], req[i][1])\n    ans = a\n    xor = pref[a - 1]\n    if xor == b:\n        print(ans)\n    elif xor ^ b == a:\n        print(ans + 2)\n    else:\n        print(ans + 1)", "def main():\n    test = int(input())\n    t = 0\n    while t < test:\n        (a, b) = map(int, input().split())\n        x = 0\n        count = 0\n        rem = (a - 1) % 4\n        if rem == 0:\n            x = a - 1\n        elif rem == 1:\n            x = 1\n        elif rem == 2:\n            x = a\n        else:\n            x = 0\n        if x ^ a == b:\n            count = a + 2\n        elif x == b:\n            count = a\n        else:\n            count = a + 1\n        print(count)\n        t += 1\nmain()", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    x = 0\n    if a % 4 == 1:\n        x = a - 1\n    elif a % 4 == 2:\n        x = 1\n    elif a % 4 == 3:\n        x = a\n    else:\n        x = 0\n    if x == b:\n        print(a)\n    elif x ^ b == a:\n        print(a + 2)\n    else:\n        print(a + 1)", "def mgc(a, b):\n    ans = a\n    x = a - 1\n    if x % 4 == 0:\n        xor = x\n    elif x % 4 == 1:\n        xor = 1\n    elif x % 4 == 2:\n        xor = x + 1\n    else:\n        xor = 0\n    if xor == b:\n        return ans\n    if xor ^ a == b:\n        return ans + 2\n    return ans + 1\nfor _ in range(int(input())):\n    (a, b) = input().split()\n    print(mgc(int(a), int(b)))", "def solve(a, b):\n    xor = None\n    temp = a % 4\n    if temp == 1:\n        xor = a - 1\n    elif temp == 2:\n        xor = 1\n    elif temp == 3:\n        xor = a\n    else:\n        xor = 0\n    if xor == b:\n        return a\n    elif xor ^ b != a:\n        return a + 1\n    else:\n        return a + 2\nt = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    print(solve(a, b))", "t = int(input())\nfor _ in range(t):\n    (mex, b) = map(int, input().split())\n    n = mex - 1\n    xor = n if n % 4 == 0 else 1 if n % 4 == 1 else n + 1 if n % 4 == 2 else 0\n    if xor == b:\n        print(mex)\n        continue\n    d = b ^ xor\n    print(mex + (2 if d == mex else 1))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    num = a - 1\n    xor = num % 4\n    ans = num if xor == 0 else num + 1 if xor == 2 else xor if xor == 1 else 0\n    if ans == b:\n        print(a)\n    elif ans ^ a == b:\n        print(a + 2)\n    else:\n        print(a + 1)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    v = [a - 1, 1, a, 0]\n    x = v[(a - 1) % 4]\n    if x == b:\n        print(a)\n    elif x ^ b == a:\n        print(a + 2)\n    else:\n        print(a + 1)", "t = int(input())\nwhile t > 0:\n    (a, b) = [int(x) for x in input().split()]\n    if a % 4 == 0:\n        if b == 0:\n            print(a)\n        elif b == a:\n            print(a + 2)\n        else:\n            print(a + 1)\n    elif a % 4 == 1:\n        if b == a - 1:\n            print(a)\n        elif b == 1:\n            print(a + 2)\n        else:\n            print(a + 1)\n    elif a % 4 == 2:\n        if b == 1:\n            print(a)\n        elif b == a + 1:\n            print(a + 2)\n        else:\n            print(a + 1)\n    elif b == a:\n        print(a)\n    elif b == 0:\n        print(a + 2)\n    else:\n        print(a + 1)\n    t = t - 1", "num_inp = lambda : int(input())\narr_inp = lambda : list(map(int, input().split()))\nsp_inp = lambda : map(int, input().split())\nstr_inp = lambda : input()\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    x = [0, a // 4 * 4, 1, a][a % 4]\n    if b == x:\n        print(a)\n    elif x ^ b == a:\n        print(a + 2)\n    else:\n        print(a + 1)", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    count = 0\n    if a % 4 == 1:\n        count = a - 1\n    elif a % 4 == 2:\n        count = 1\n    elif a % 4 == 3:\n        count = a\n    else:\n        count = 0\n    if count == b:\n        print(a)\n    elif count ^ b != a:\n        print(a + 1)\n    else:\n        print(a + 2)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    rem = (a - 1) % 4\n    if rem == 0:\n        xor = a - 1\n    elif rem == 1:\n        xor = 1\n    elif rem == 2:\n        xor = a\n    else:\n        xor = 0\n    if xor == b:\n        print(a)\n    elif xor ^ b != a:\n        print(a + 1)\n    else:\n        print(a + 2)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    pXor = 0\n    if a % 4 == 1:\n        pXor = a - 1\n    elif a % 4 == 2:\n        pXor = 1\n    elif a % 4 == 3:\n        pXor = a\n    else:\n        pXor = 0\n    if pXor == b:\n        print(a)\n    elif pXor ^ b != a:\n        print(a + 1)\n    else:\n        print(a + 2)", "def fun(n):\n    if n % 4 == 0:\n        return n\n    if n % 4 == 1:\n        return 1\n    if n % 4 == 2:\n        return n + 1\n    return 0\nt = int(input())\nfor j in range(t):\n    (a, b) = map(int, input().split())\n    x = fun(a - 1)\n    if x == b:\n        print(a)\n    elif a == x ^ b:\n        print(a + 2)\n    else:\n        print(a + 1)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    x = [0, a // 4 * 4, 1, a][a % 4]\n    if b == x:\n        print(a)\n    elif x ^ b == a:\n        print(a + 2)\n    else:\n        print(a + 1)", "T = int(input())\nfor _ in range(T):\n    (a, b) = map(int, input().split())\n    j = [0, a - 1, 1, a]\n    X = j[a % 4]\n    if b == X:\n        print(a)\n    elif X ^ a == b:\n        print(a + 2)\n    else:\n        print(a + 1)", "def main():\n\n    def xorrange(n):\n        n -= 1\n        x = n % 4\n        if x == 0:\n            return n\n        elif x == 1:\n            return 1\n        elif x == 2:\n            return n + 1\n        else:\n            return 0\n    in_n = int(input())\n    for _ in range(in_n):\n        (a, b) = input().split(' ')\n        (a, b) = (int(a), int(b))\n        xa = xorrange(a)\n        if xa == b:\n            print(a)\n        elif xa ^ b == a:\n            print(a + 2)\n        else:\n            print(a + 1)\nmain()", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == 0:\n        print('2')\n        continue\n    d = (a - 1) % 4\n    if d == 0:\n        n = a - 1\n    if d == 1:\n        n = 1\n    if d == 2:\n        n = a\n    if d == 3:\n        n = 0\n    if n == b:\n        print(a)\n    elif n ^ b == a:\n        print(a + 2)\n    else:\n        print(a + 1)", "def ans(n):\n    if n % 4 == 0:\n        return n\n    if n % 4 == 1:\n        return 1\n    if n % 4 == 2:\n        return n + 1\n    return 0\nloop = int(input())\nfor i in range(loop):\n    (a, b) = map(int, input().split())\n    xor = ans(a - 1)\n    if xor == b:\n        print(a)\n    elif xor ^ b == a:\n        print(a + 2)\n    else:\n        print(a + 1)", "test = int(input())\n\ndef computeXOR(n):\n    if n % 4 == 0:\n        return n\n    if n % 4 == 1:\n        return 1\n    if n % 4 == 2:\n        return n + 1\n    return 0\nfor i in range(test):\n    (a, b) = map(int, input().split())\n    if computeXOR(a - 1) == b:\n        print(a)\n    elif computeXOR(a) == b:\n        print(a + 2)\n    else:\n        print(a + 1)", "def computeXOR(n):\n    if n % 4 == 0:\n        return n\n    if n % 4 == 1:\n        return 1\n    if n % 4 == 2:\n        return n + 1\n    return 0\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    xor = computeXOR(a - 1)\n    if xor == b:\n        print(a)\n    elif xor ^ b == a:\n        print(a + 2)\n    else:\n        print(a + 1)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    n = a - 1\n    xor_value = 0\n    if n % 4 == 0:\n        xor_value = n\n    elif n % 4 == 1:\n        xor_value = 1\n    elif n % 4 == 2:\n        xor_value = n + 1\n    else:\n        xor_value = 0\n    if xor_value == b:\n        print(a)\n    elif xor_value ^ b == a:\n        print(a + 2)\n    else:\n        print(a + 1)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    ans = a\n    xor = 0\n    if (a - 1) % 4 == 0:\n        xor = a - 1\n    elif (a - 1) % 4 == 3:\n        xor = 0\n    elif (a - 1) % 4 == 2:\n        xor = a\n    else:\n        xor = 1\n    if xor == b:\n        print(ans)\n    elif xor ^ b == a:\n        print(ans + 2)\n    else:\n        print(ans + 1)", "def computeXOR(n):\n    if n % 4 == 0:\n        return n\n    if n % 4 == 1:\n        return 1\n    if n % 4 == 2:\n        return n + 1\n    return 0\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    xor = computeXOR(a - 1)\n    if xor == b:\n        print(a)\n    elif xor ^ b == a:\n        print(a + 2)\n    else:\n        print(a + 1)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    x = [0, a // 4 * 4, 1, a][a % 4]\n    if b == x:\n        print(a)\n    elif x ^ b == a:\n        print(a + 2)\n    else:\n        print(a + 1)", "def xor_upto(n):\n    x = n & 3\n    if not x:\n        return n\n    if x == 1:\n        return 1\n    if x == 2:\n        return n + 1\n    return 0\n\ndef main():\n    for t in range(int(input())):\n        (a, b) = map(int, input().split())\n        x = xor_upto(a - 1)\n        if x == b:\n            print(a)\n        else:\n            print(a + 1 + int(b ^ x == a))\nmain()", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a % 4 == 1:\n        mex = a - 1\n    elif a % 4 == 2:\n        mex = 1\n    elif a % 4 == 3:\n        mex = a\n    else:\n        mex = 0\n    if mex == b:\n        print(a)\n    elif mex ^ b != a:\n        print(a + 1)\n    else:\n        print(a + 2)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a % 4 == 1:\n        mex = a - 1\n    elif a % 4 == 2:\n        mex = 1\n    elif a % 4 == 3:\n        mex = a\n    else:\n        mex = 0\n    if mex == b:\n        print(a)\n    elif mex ^ b != a:\n        print(a + 1)\n    else:\n        print(a + 2)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = (a - 1) % 4\n    if c == 0:\n        x = a - 1\n    elif c == 1:\n        x = 1\n    elif c == 2:\n        x = a\n    else:\n        x = 0\n    if x == b:\n        print(a)\n    elif x ^ b != a:\n        print(a + 1)\n    else:\n        print(a + 2)", "t = int(input())\nwhile t != 0:\n    (a, b) = map(int, input().strip().split())\n    pXor = 0\n    if a % 4 == 1:\n        pXor = a - 1\n    elif a % 4 == 2:\n        pXor = 1\n    elif a % 4 == 3:\n        pXor = a\n    if pXor == b:\n        print(a)\n    elif pXor ^ b != a:\n        print(a + 1)\n    else:\n        print(a + 2)\n    t -= 1", "from math import sin, pi\nt = int(input())\nfor _ in range(t):\n    (n, b) = map(int, input().split())\n    if (n - 1) % 4 == 0:\n        xor = n - 1\n    elif (n - 1) % 4 == 1:\n        xor = 1\n    elif (n - 1) % 4 == 2:\n        xor = n\n    else:\n        xor = 0\n    xor ^= 0\n    if xor == b:\n        print(n)\n    elif xor ^ n == b:\n        print(n + 2)\n    else:\n        print(n + 1)", "from math import sin, pi\nt = int(input())\nfor _ in range(t):\n    (n, b) = map(int, input().split())\n    if (n - 1) % 4 == 0:\n        xor = n - 1\n    elif (n - 1) % 4 == 1:\n        xor = 1\n    elif (n - 1) % 4 == 2:\n        xor = n\n    else:\n        xor = 0\n    xor ^= 0\n    if xor == b:\n        print(n)\n    elif xor ^ n == b:\n        print(n + 2)\n    else:\n        print(n + 1)", "for pratyush in range(int(input())):\n    (a, b) = map(int, input().split())\n    v = [a - 1, 1, a, 0]\n    c = v[(a - 1) % 4]\n    if c == b:\n        print(a)\n    elif c ^ b == a:\n        print(a + 2)\n    else:\n        print(a + 1)", "def XOR(n):\n    return [n, 1, n + 1, 0][n % 4]\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    x = XOR(a - 1)\n    y = x ^ b\n    if y == 0:\n        print(a)\n    elif y != a:\n        print(a + 1)\n    else:\n        print(a + 2)", "t = int(input())\n\ndef xorN(num):\n    if num % 4 == 0:\n        return num\n    if num % 4 == 1:\n        return 1\n    if num % 4 == 2:\n        return num + 1\n    if num % 4 == 3:\n        return 0\nfor _ in range(t):\n    (a, b) = [int(x) for x in input().split()]\n    x = xorN(a - 1)\n    if x ^ b == a:\n        print(a + 2)\n    elif x ^ b == 0:\n        print(a)\n    else:\n        print(a + 1)", "def computeXOR(n):\n    if n % 4 == 0:\n        return n\n    if n % 4 == 1:\n        return 1\n    if n % 4 == 2:\n        return n + 1\n    return 0\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    xor = computeXOR(a - 1) ^ 0\n    if xor == b:\n        print(a)\n    elif xor ^ a == b:\n        print(a + 2)\n    else:\n        print(a + 1)", "def xor(n):\n    if n % 4 == 0:\n        return n\n    elif n % 4 == 1:\n        return 1\n    elif n % 4 == 2:\n        return n + 1\n    else:\n        return 0\nt = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    ans = xor(a - 1)\n    if ans == b:\n        print(a)\n    elif ans ^ b == a:\n        print(a + 2)\n    else:\n        print(a + 1)", "def computeXOR(n):\n    if n % 4 == 0:\n        return n\n    if n % 4 == 1:\n        return 1\n    if n % 4 == 2:\n        return n + 1\n    return 0\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    xor = computeXOR(a - 1)\n    if xor == b:\n        print(a)\n    elif xor ^ b == a:\n        print(a + 2)\n    else:\n        print(a + 1)", "def solve(n):\n    if n % 4 == 0:\n        return n\n    if n % 4 == 1:\n        return 1\n    if n % 4 == 2:\n        return n + 1\n    return 0\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    res = a\n    x = solve(a - 1)\n    if x == b:\n        print(res)\n    elif x ^ b == a:\n        print(res + 2)\n    else:\n        print(res + 1)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    t = a // 2 % 2\n    if a % 2:\n        t ^= a - 1\n    t ^= b\n    if t == 0:\n        print(a)\n    elif t == a:\n        print(a + 2)\n    else:\n        print(a + 1)", "def getXor(n):\n    if n % 4 == 0:\n        return n\n    elif n % 4 == 1:\n        return 1\n    elif n % 4 == 2:\n        return n + 1\n    return 0\nt = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    xorBefore = getXor(a - 1)\n    ans = a\n    if xorBefore != b:\n        extra = xorBefore ^ b\n        ans += 1\n        if extra == a:\n            ans += 1\n    print(ans)", "def MEXXor_Mixup(n):\n    if n % 4 == 0:\n        return n\n    if n % 4 == 1:\n        return 1\n    if n % 4 == 2:\n        return n + 1\n    return 0\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    XOR = MEXXor_Mixup(a - 1)\n    if XOR == b:\n        print(a)\n    elif XOR ^ b == a:\n        print(a + 2)\n    else:\n        print(a + 1)", "def XOR(n):\n    if n % 4 == 0:\n        return n\n    if n % 4 == 1:\n        return 1\n    if n % 4 == 2:\n        return n + 1\n    return 0\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    ans = n\n    r = XOR(n - 1)\n    if r ^ m == n:\n        ans += 2\n    elif r != m:\n        ans += 1\n    print(ans)", "def computeXOR(n):\n    if n % 4 == 0:\n        return n\n    if n % 4 == 1:\n        return 1\n    if n % 4 == 2:\n        return n + 1\n    return 0\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    xor = computeXOR(a - 1)\n    if xor == b:\n        print(a)\n    elif xor ^ b == a:\n        print(a + 2)\n    else:\n        print(a + 1)", "def XOR(n):\n    if n % 4 == 0:\n        return n\n    elif n % 4 == 1:\n        return 1\n    elif n % 4 == 2:\n        return n + 1\n    return 0\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    xor = XOR(a - 1)\n    if b == xor:\n        ans = a\n    elif b ^ xor == a:\n        ans = a + 2\n    else:\n        ans = a + 1\n    print(ans)", "def xor(n):\n    if n % 4 == 0:\n        return n\n    elif n % 4 == 1:\n        return n ^ n - 1\n    elif n % 4 == 2:\n        return n ^ n - 1 ^ n - 2\n    else:\n        return 0\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    mex = xor(a - 1)\n    if mex ^ a == b:\n        print(a + 2)\n    elif mex == b:\n        print(a)\n    else:\n        print(a + 1)", "t = int(input())\nfor t in range(t):\n    (a, b) = map(int, input().split())\n    xor = 0\n    rem = (a - 1) % 4\n    if rem == 0:\n        ans = a - 1\n    elif rem == 1:\n        ans = a - 1 ^ a - 2\n    elif rem == 2:\n        ans = a - 1 ^ a - 2 ^ a - 3\n    else:\n        ans = 0\n    if ans == b:\n        print(a)\n    elif ans ^ a == b:\n        print(a + 2)\n    else:\n        print(a + 1)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    x = [0, a // 4 * 4, 1, a][a % 4]\n    if b == x:\n        print(a)\n    elif x ^ b == a:\n        print(a + 2)\n    else:\n        print(a + 1)", "t = int(input())\nfor _ in range(t):\n    (a, b) = [int(x) for x in input().split()]\n    if a % 4 == 0:\n        xor = 0\n    elif a % 4 == 1:\n        xor = a - 1\n    elif a % 4 == 2:\n        xor = 1\n    else:\n        xor = a\n    if xor == b:\n        print(a)\n    elif xor != b and xor ^ b != a:\n        print(a + 1)\n    else:\n        print(a + 2)", "for test in range(int(input())):\n    arr = [int(x) for x in input().split()]\n    (a, b) = (arr[0], arr[1])\n    ans = 0\n    rem = (a - 1) % 4\n    if rem == 0:\n        ans = a - 1\n    elif rem == 1:\n        ans = 1\n    elif rem == 2:\n        ans = a\n    else:\n        ans = 0\n    if ans == b:\n        print(a)\n    elif ans ^ a == b:\n        print(a + 2)\n    else:\n        print(a + 1)", "from sys import stdin\nimport math\n\ndef main():\n    p = int(300000.0)\n    s = [0]\n    for i in range(1, p + 10):\n        s.append(s[-1] ^ i)\n    for _ in range(int(input())):\n        (a, b) = map(int, input().split())\n        i = a - 1\n        if s[i] ^ a == b:\n            print(a + 2)\n        elif s[i] == b:\n            print(a)\n        else:\n            print(a + 1)\nmain()", "for _ in range(0, int(input())):\n    (m, x) = map(int, input().split())\n    n = m - 1\n    w = n\n    r = n % 4\n    if r == 0:\n        w = n\n    elif r == 1:\n        w = 1\n    elif r == 2:\n        w = n + 1\n    elif r == 3:\n        w = 0\n    t = x ^ w\n    a = 0\n    if w != x:\n        a += 1\n        a += m == t\n    print(m + a)", "def XOR(n):\n    return [n, 1, n + 1, 0][n % 4]\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    x = XOR(a - 1)\n    y = x ^ b\n    if y == 0:\n        print(a)\n    elif y != a:\n        print(a + 1)\n    else:\n        print(a + 2)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    n = a - 1\n    rem = n % 4\n    if rem == 0:\n        xor = n\n    elif rem == 1:\n        xor = 1\n    elif rem == 2:\n        xor = n + 1\n    elif rem == 3:\n        xor = 0\n    if xor == b:\n        print(a)\n    elif xor ^ b == a:\n        print(a + 2)\n    else:\n        print(a + 1)", "def f(n):\n    if n % 4 == 0:\n        return n\n    if n % 4 == 1:\n        return 1\n    if n % 4 == 2:\n        return n + 1\n    return 0\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    t = f(a - 1)\n    if t == b:\n        print(a)\n    elif t ^ b == a:\n        print(a + 2)\n    else:\n        print(a + 1)", "def compute(n):\n    if n % 4 == 0:\n        return n\n    if n % 4 == 1:\n        return 1\n    if n % 4 == 2:\n        return n + 1\n    return 0\nfor __ in range(int(input())):\n    (a, b) = map(int, input().split())\n    v = compute(a - 1)\n    if v == b:\n        print(a)\n    elif a == v ^ b:\n        print(a + 2)\n    else:\n        print(a + 1)", "from collections import Counter, deque, defaultdict\nfrom heapq import *\nimport math\n\ndef inp():\n    return int(input())\n\ndef mapInput():\n    return map(int, input().split())\n\ndef arrInput():\n    return list(map(int, input().split()))\n\ndef task():\n    (a, b) = mapInput()\n    res = a\n    m = (a - 1) % 4\n    xor = None\n    if m == 0:\n        xor = a - 1\n    elif m == 1:\n        xor = 1\n    elif m == 2:\n        xor = a\n    else:\n        xor = 0\n    if xor != b:\n        if xor ^ b == a:\n            res += 2\n        else:\n            res += 1\n    return res\nfor _ in range(inp()):\n    print(task())", "def xor_up_to_n(n):\n    if n % 4 == 0:\n        return n\n    elif n % 4 == 1:\n        return 1\n    elif n % 4 == 2:\n        return n + 1\n    elif n % 4 == 3:\n        return 0\nt = int(input())\nfor _ in range(t):\n    ab = input().split(' ')\n    a = int(ab[0])\n    b = int(ab[1])\n    s = xor_up_to_n(a - 1)\n    if s == b:\n        print(a)\n    elif s ^ a == b:\n        print(a + 2)\n    else:\n        print(a + 1)", "t = int(input())\n\ndef computeXOR(n):\n    if n % 4 == 0:\n        return n\n    if n % 4 == 1:\n        return 1\n    if n % 4 == 2:\n        return n + 1\n    return 0\nfor _ in range(t):\n    (m, x) = map(int, input().split(' '))\n    xor = computeXOR(m - 1)\n    rest = xor ^ x\n    if rest == 0:\n        print(m)\n    elif rest == m:\n        print(m + 2)\n    else:\n        print(m + 1)", "def fn(n):\n    if n % 4 == 0:\n        return n\n    if n % 4 == 1:\n        return 1\n    if n % 4 == 2:\n        return n + 1\n    else:\n        return 0\ntc = int(input())\nfor _ in range(tc):\n    (mex, xor) = map(int, input().split())\n    cur = fn(mex - 1)\n    if cur == xor:\n        print(mex)\n    else:\n        y = xor ^ cur\n        if y == mex:\n            print(mex + 2)\n        else:\n            print(mex + 1)", "t = int(input())\nfor i in range(t):\n    (mex, xor) = map(int, input().split())\n    xorL = 0\n    if (mex - 1) % 4 == 0:\n        xorL = mex - 1\n    elif (mex - 1) % 4 == 1:\n        xorL = 1\n    elif (mex - 1) % 4 == 2:\n        xorL = mex\n    if xor ^ xorL == 0:\n        print(mex)\n    elif xor ^ xorL == mex:\n        print(mex + 2)\n    else:\n        print(mex + 1)", "def findXOR(n):\n    if n % 4 == 0:\n        return n\n    if n % 4 == 1:\n        return 1\n    if n % 4 == 2:\n        return n + 1\n    return 0\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    x = findXOR(a - 1)\n    if x == b:\n        print(a)\n    elif x ^ b == a:\n        print(a + 2)\n    else:\n        print(a + 1)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    mn = a\n    f = mn % 4\n    if f == 0:\n        val = 0\n        if val == b:\n            ans = mn\n        elif val ^ b == a:\n            ans = mn + 2\n        else:\n            ans = mn + 1\n    elif f == 1:\n        val = a - 1\n        if val == b:\n            ans = mn\n        elif val ^ b == a:\n            ans = mn + 2\n        else:\n            ans = mn + 1\n    elif f == 2:\n        val = 1\n        if val == b:\n            ans = mn\n        elif val ^ b == a:\n            ans = mn + 2\n        else:\n            ans = mn + 1\n    elif f == 3:\n        val = a\n        if val == b:\n            ans = mn\n        elif val ^ b == a:\n            ans = mn + 2\n        else:\n            ans = mn + 1\n    print(ans)"]