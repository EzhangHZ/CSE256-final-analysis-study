["t = int(input())\nout = []\nfor i in range(t):\n    (n, k) = [int(j) for j in input().split()]\n    a = []\n    for j in range(n // 2):\n        a.append(f'{n - j}')\n        a.append(f'{j + 1}')\n    if n % 2 != 0:\n        a.append(f'{n // 2 + 1}')\n    out.append(' '.join(a))\nfor i in out:\n    print(i)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\ntest_cases = inp()\ninp_arr = []\nfor i in range(test_cases):\n    nums = inlt()\n    (n, k) = (nums[0], nums[1])\n    inp_arr.append((n, k))\n\ndef findResult(n, k):\n    result = [str(0)] * n\n    if n % 2 != 0:\n        result[int(n / 2)] = str(int(n / 2))\n    m = int(n / 2) - 1 if n % 2 == 0 else int(n / 2)\n    s = n\n    for i in range(0, int(n / 2) + 1, 2):\n        result[i] = str(s)\n        s -= 2\n    s = 1\n    for i in range(1, int(n / 2), 2):\n        result[i] = str(s)\n        s += 2\n    s = n - 1\n    for i in range(n - 1, m, -2):\n        result[i] = str(s)\n        s -= 2\n    s = 2\n    for i in range(n - 2, m, -2):\n        result[i] = str(s)\n        s += 2\n    return ' '.join(result)\nresult = [findResult(n, k) for (n, k) in inp_arr]\nfor m in result:\n    print(m)", "t = int(input())\nfor _ in range(t):\n    (n, k) = [int(i) for i in input().split()]\n    if n % 2 == 0:\n        l = []\n        for i in range(n // 2):\n            l.append(str(n - i))\n            l.append(str(i + 1))\n        print(' '.join(l))\n    if n % 2 == 1:\n        l = []\n        for i in range(n // 2):\n            l.append(str(n - i))\n            l.append(str(i + 1))\n        l.append(str(n // 2 + 1))\n        print(' '.join(l))", "def solve(n, k):\n    lst = []\n    j = 1\n    l = n\n    for _ in range(n // k):\n        for i in range(k - 1):\n            lst.append(l)\n            l -= 1\n        lst.append(j)\n        j += 1\n    while len(lst) < n:\n        lst.append(j)\n        j += 1\n    return ' '.join(map(str, lst))\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(solve(n, k))", "def helper(n, k):\n    import heapq\n    arr = [i + 1 for i in range(n)]\n    arr2 = arr[::-1]\n    ans = [0] * n\n    nn = len(ans[::2])\n    ans[::2] = arr2[:nn]\n    ans[1::2] = arr[:n - nn]\n    return ' '.join(list(map(str, ans)))\nfor i in range(int(input())):\n    inp = list(map(int, input().split()))\n    print(helper(inp[0], inp[1]))", "import sys\n\ndef solve():\n    (n, k) = map(int, sys.stdin.readline().split())\n    ar = []\n    (a, b) = (1, n)\n    for i in range(n):\n        if i % 2:\n            ar.append(a)\n            a += 1\n        else:\n            ar.append(b)\n            b -= 1\n    print(' '.join((str(x) for x in ar)))\n\ndef main():\n    n = int(sys.stdin.readline())\n    for _ in range(n):\n        solve()\nmain()", "import os\nimport math\nimport collections\nimport bisect\nimport functools\nimport itertools\nimport heapq\n\ndef solve(n, k):\n    if k == 1 or k == n:\n        return list(range(1, n + 1))\n    (i, j) = (1, n)\n    ans = []\n    while i <= j:\n        ans.append(j)\n        if i < j:\n            ans.append(i)\n        i += 1\n        j -= 1\n    return ans\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    res = solve(n, k)\n    print(' '.join(map(str, res)))", "t = int(input())\n\ndef solve(n, k):\n    if n == k or k == 1:\n        return ' '.join([str(x) for x in range(1, n + 1)])\n    start = 1\n    end = n\n    result = []\n    while start < end:\n        result.append(end)\n        result.append(start)\n        end -= 1\n        start += 1\n    if start == end:\n        result.append(start)\n    return ' '.join([str(x) for x in result])\nfor _ in range(t):\n    (n, k) = [int(w) for w in input().split()]\n    print(solve(n, k))", "from math import ceil\nfor _ in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    if k == 1 or k == n:\n        p = list(range(1, n + 1))\n    else:\n        p = []\n        for i in range(ceil(n / 2)):\n            p.append(n - i)\n            if len(p) < n:\n                p.append(i + 1)\n    print(' '.join(list(map(str, p))))", "import heapq\nn = int(input())\n\ndef solve(n, m):\n    arr = []\n    i = 1\n    j = n\n    while i < j:\n        arr.append(j)\n        arr.append(i)\n        i += 1\n        j -= 1\n    if i == j:\n        arr.append(i)\n    print(' '.join([str(_) for _ in arr]))\nfor _ in range(n):\n    (n, m) = [int(_) for _ in input().split()]\n    solve(n, m)", "t = int(input())\nfor p in range(t):\n    (n, k) = map(int, input().split())\n    if k == 1:\n        a = []\n        for i in range(1, n + 1):\n            a.append(i)\n        print(' '.join(map(str, a)))\n    elif n % 2 == 0:\n        a = []\n        for i in range(1, (n + 1) // 2 + 1):\n            a.append(n - i + 1)\n            a.append(i)\n        print(' '.join(map(str, a)))\n    else:\n        a = []\n        for i in range(1, (n + 1) // 2):\n            a.append(n - i + 1)\n            a.append(i)\n        a.append((n + 2) // 2)\n        print(' '.join(map(str, a)))", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    (n, m) = map(int, inp().split())\n    a = [None] * n\n    j = 1\n    for i in range(m - 1, n, m):\n        a[i] = j\n        j += 1\n    j = n\n    for i in range(n):\n        if a[i] is None:\n            a[i] = j\n            j -= 1\n    print(' '.join(map(str, a)))\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "t = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    if k == 1 or k == n:\n        print(' '.join(map(str, range(1, n + 1))))\n        continue\n    l = []\n    top = n\n    bottom = 1\n    while len(l) < n:\n        l.append(top)\n        l.append(bottom)\n        top -= 1\n        bottom += 1\n    print(' '.join(map(str, l[:n])))", "for _ in range(int(input())):\n    [n, m] = list(map(int, input().split(' ')))\n    arr = []\n    i = n\n    j = 1\n    while i > j:\n        arr.append(i)\n        arr.append(j)\n        (i, j) = (i - 1, j + 1)\n    if i == j:\n        arr.append(j)\n    arr = [str(i) for i in arr]\n    print(' '.join(arr))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = []\n    l = 1\n    r = n\n    while l <= r:\n        a.append(r)\n        r -= 1\n        if l <= r:\n            a.append(l)\n            l += 1\n    print(' '.join(map(str, a)))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    p = 1\n    q = n\n    l = []\n    while p < q:\n        l.append(q)\n        l.append(p)\n        q -= 1\n        p += 1\n    if p == q:\n        l.append(p)\n    print(' '.join(map(str, l)))", "import math\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef inchar():\n    return list(input().split())\n\ndef insr():\n    s = input()\n    return list(s)\n\ndef invr():\n    return map(int, input().split())\na = inp()\nfor _ in range(a):\n    k = inlt()\n    l = []\n    for i in range(math.ceil(k[0] / 2)):\n        l.append(str(k[0] - i))\n        if k[0] - i > i + 1:\n            l.append(str(i + 1))\n        else:\n            break\n    print(' '.join(l))", "from heapq import heappush, heappop\nt = int(input().strip())\nfor _ in range(t):\n    (n, k) = map(int, input().strip().split())\n    lo = 1\n    hi = n\n    output = []\n    while lo <= hi:\n        output.append(str(hi))\n        if lo != hi:\n            output.append(str(lo))\n        lo += 1\n        hi -= 1\n    print(' '.join(output))", "t = int(input())\nfor i in range(t):\n    (n, m) = [int(x) for x in input().split()]\n    ans = []\n    (a, b) = (1, n)\n    while a <= b:\n        ans.append(b)\n        if b != a:\n            ans.append(a)\n        a += 1\n        b -= 1\n    ans = [str(i) for i in ans]\n    print(' '.join(ans))", "import heapq\nk = int(input())\nfor _ in range(k):\n    (n, _) = map(int, input().split())\n    ar = []\n    (i, j) = (1, n)\n    while j > i:\n        ar.append(j)\n        j -= 1\n        if j >= i:\n            ar.append(i)\n            i += 1\n    if j == i:\n        ar.append(i)\n    print(' '.join(map(str, ar)))", "tests = int(input())\nfor _ in range(tests):\n    (n, k) = list(map(int, input().split()))\n    hi = list(range(n // 2 + 1, n + 1))\n    lo = list(range(1, n // 2 + 1))\n    lo.reverse()\n    out = []\n    while hi or lo:\n        if hi:\n            out.append(hi.pop())\n        if lo:\n            out.append(lo.pop())\n    print(' '.join((str(x) for x in out)))", "t = int(input())\n\ndef cost(p, k):\n    cc = 0\n    for i in range(len(p) - k + 1):\n        c = min(p[i:i + k]) + max(p[i:i + k])\n        cc = max(c, cc)\n    return cc\nfor _ in range(t):\n    (n, k) = (int(v) for v in input().split())\n    maxi = n\n    mini = 1\n    p = []\n    while maxi > mini:\n        p += [maxi]\n        p += [mini]\n        maxi -= 1\n        mini += 1\n    if maxi == mini:\n        p += [maxi]\n    print(' '.join([str(v) for v in p]))", "from math import *\nfor z in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = []\n    for i in range(n, n // 2, -1):\n        a.append(str(i))\n        if n % 2 == 0 or i != n // 2 + 1:\n            a.append(str(n - i + 1))\n    print(' '.join(a))", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    res = [i for i in range(1, n + 1)]\n    ans = []\n    temp = n\n    for i in range(1, n + 1):\n        ans.append(str(n))\n        temp -= 1\n        if not temp:\n            break\n        ans.append(str(i))\n        temp -= 1\n        if not temp:\n            break\n        n -= 1\n    a = ' '.join(ans)\n    print(a)", "t = int(input())\nfor x in range(t):\n    (n, k) = [int(x) for x in input().split(' ')]\n    res = list(range(n))\n    for x in range(n):\n        if x % 2:\n            res[x] = 1 + x // 2\n        else:\n            res[x] = n - x // 2\n    print(' '.join([str(x) for x in res]))", "t = int(input(''))\nfor _ in range(t):\n    (n, k) = [int(x) for x in input('').split(' ')]\n    out = [0] * n\n    low = 1\n    high = n\n    for i in range(n):\n        if i % k == k - 1:\n            out[i] = low\n            low += 1\n        else:\n            out[i] = high\n            high -= 1\n    print(' '.join((str(x) for x in out)))", "for tes in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print(' '.join((str(i + 1) for i in range(n))))\n    else:\n        ans = []\n        i = 1\n        j = n\n        while i <= j:\n            ans.append(j)\n            if i == j:\n                break\n            ans.append(i)\n            i += 1\n            j -= 1\n        print(' '.join((str(i) for i in ans)))", "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    (n, k) = map(int, sys.stdin.readline().split())\n    nlst = [i + 1 for i in range(n)]\n    newlst = []\n    if n % 2 == 0:\n        a = nlst[:int(n / 2)]\n        b = nlst[int(n / 2):]\n        b.reverse()\n        for j in range(int(n / 2)):\n            newlst.append(b[j])\n            newlst.append(a[j])\n    else:\n        a = nlst[:int((n - 1) / 2)]\n        b = nlst[int((n + 1) / 2):]\n        b.reverse()\n        ex = nlst[int((n - 1) / 2)]\n        for j in range(int((n - 1) / 2)):\n            newlst.append(b[j])\n            newlst.append(a[j])\n        newlst.append(ex)\n    newlst = [str(e) for e in newlst]\n    st = ' '.join(newlst)\n    sys.stdout.write(st + '\\n')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    L1 = [k for k in range(1, n + 1)]\n    L2 = [k for k in range(n, 0, -1)]\n    L3 = []\n    j = 0\n    while len(L3) < n:\n        L3.append(L2[j])\n        if len(L3) < n:\n            L3.append(L1[j])\n        j += 1\n    print(' '.join(map(str, L3)))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    result = []\n    max_val = n\n    min_val = 1\n    while len(result) < n:\n        temp = 0\n        while temp < k - 1 and len(result) < n:\n            result.append(str(max_val))\n            max_val -= 1\n            temp += 1\n        if len(result) < n:\n            result.append(str(min_val))\n            min_val += 1\n    print(' '.join(result))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = ''\n    for i in range(n // 2):\n        s += str(n - i) + ' '\n        s += str(i + 1) + ' '\n    if n % 2 == 1:\n        s += str(n // 2 + 1) + ' '\n    print(s)", "def main():\n    t = int(input())\n    for i in range(t):\n        (n, k) = map(int, input().split())\n        i = n\n        j = 1\n        s = ''\n        while i > j:\n            s += ' ' + str(i)\n            s += ' ' + str(j)\n            i -= 1\n            j += 1\n        if i == j:\n            s += ' ' + str(i)\n        print(s)\nmain()", "t = int(input())\nfor i in range(t):\n    (a, b) = [int(x) for x in input().split()]\n    s = ''\n    for i in range(a // 2):\n        s += str(a - i) + ' '\n        s += str(i + 1) + ' '\n    if a % 2 == 1:\n        s += str(a // 2 + 1)\n    print(s)", "for i in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    s = ''\n    for i in range(int(n / 2)):\n        s += str(n - i) + ' ' + str(i + 1) + ' '\n    if n % 2 != 0:\n        s += str(int(n / 2) + 1)\n    print(s)", "import heapq\nt = int(input())\nfor x in range(t):\n    [n, k] = [int(i) for i in input().split()]\n    arr = [str(i) for i in range(1, n + 1)]\n    if k == 1:\n        print(' '.join(arr))\n    elif k > n // 2:\n        print(' '.join(arr[(n + 1) // 2:][::-1]) + ' ' + ' '.join(arr[:(n + 1) // 2]))\n    else:\n        i = 1\n        j = n\n        turn = 0\n        ans = []\n        while i <= j:\n            if j - i + 1 >= k - 1:\n                for a in range(k - 1):\n                    if turn == 0:\n                        ans.append(j)\n                        j -= 1\n                    else:\n                        ans.append(i)\n                        i += 1\n                turn = (turn + 1) % 2\n            else:\n                for a in range(i, j + 1):\n                    ans.append(a)\n                    i += 1\n        print(' '.join([str(i) for i in ans]))", "import sys\n\ndef fn(n):\n    out = ''\n    max_val = n\n    min_val = 1\n    alt = True\n    while min_val <= max_val:\n        if alt:\n            out += str(max_val) + ' '\n            max_val -= 1\n        else:\n            out += str(min_val) + ' '\n            min_val += 1\n        alt = not alt\n    return out[:-1]\ninput = sys.stdin.readlines()\nfor i in range(int(input[0].strip('\\n'))):\n    n = int(input[i + 1].strip('\\n').split(' ')[0])\n    print(fn(n))", "import heapq\nimport math\neps = 10 ** (-9)\n\ndef solve():\n    (n, k) = input().split()\n    (n, k) = (int(n), int(k))\n    res = ''\n    a = [x for x in range(1, n + 1)]\n    i = 0\n    j = n - 1\n    for p in range(k - 1):\n        res += ' ' + str(a[j])\n        j -= 1\n    res += ' ' + str(a[i])\n    i += 1\n    while i <= j:\n        c = 0\n        while i <= j and c < k - 1:\n            res += ' ' + str(a[j])\n            j -= 1\n            c += 1\n        if i <= j:\n            res += ' ' + str(a[i])\n            i += 1\n    print(res[1:])\nt = int(input())\nfor _ in range(t):\n    solve()", "for _ in ' ' * int(input()):\n    (n, k) = map(int, input().split())\n    s = ''\n    i = 1\n    j = 0\n    if k == 1 or n == k:\n        print(*range(1, n + 1))\n        continue\n    while n - i >= 0:\n        if j == 0:\n            s += str(n) + ' '\n            n -= 1\n            j = 1\n        else:\n            s += str(i) + ' '\n            i += 1\n            j = 0\n    print(s)", "def fun(n, k):\n    l = []\n    if k != 1:\n        x = int(n // (k - 1))\n        i = int(x // 2)\n        d = x - i\n        a = 1\n        b = n\n        if x % 2 == 0:\n            for q in range(1, int(x / 2 + 1)):\n                l.extend(list(range(n - (k - 1) * (q - 1), n - q * (k - 1), -1)))\n                l.extend(list(range(1 + (k - 1) * (q - 1), 1 + (k - 1) * q)))\n            l.extend(list(range(n - int(x / 2) * (k - 1), (k - 1) * int(x / 2), -1)))\n            print(*l)\n        else:\n            for q in range(1, d):\n                l.extend(list(range(n - (k - 1) * (q - 1), n - q * (k - 1), -1)))\n                l.extend(list(range(1 + (k - 1) * (q - 1), 1 + (k - 1) * q)))\n            q = d\n            l.extend(list(range(n - (k - 1) * (q - 1), n - q * (k - 1), -1)))\n            q = d - 1\n            l.extend(list(range(1 + (k - 1) * q, n - q * (k - 1) + 1 - k + 1)))\n            print(*l)\n    else:\n        l = list(range(1, n + 1))\n        print(*l)\nfor q12 in range(int(input())):\n    (n, k) = map(int, input().split())\n    fun(n, k)", "def solve():\n    (n, k) = map(int, input().split())\n    ans = []\n    for i in range(n // 2):\n        ans.extend([n - i, i + 1])\n    if n % 2 == 1:\n        ans.append((n + 1) // 2)\n    print(*ans)\nfor _ in range(int(input())):\n    solve()", "for _ in [*open(0)][1:]:\n    (n, k) = map(int, _.split())\n    li = []\n    for i in range(n >> 1):\n        li += [n - i, i + 1]\n    print(*li + [['', n + 1 >> 1][n & 1]])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    for i in range(n // 2):\n        a.append(n - i)\n        a.append(i + 1)\n    if n & 1:\n        a.append((n + 1) // 2)\n    print(*a)", "def func():\n    (n, k) = map(int, input().split())\n    for i in range(n // 2):\n        print(n - i, end=' ')\n        print(i + 1, end=' ')\n    if n % 2 != 0:\n        print((n + 1) // 2)\nfor i in range(int(input())):\n    func()", "for _ in [*open(0)][1:]:\n    (n, k) = map(int, _.split())\n    li = []\n    for i in range(n >> 1):\n        li += [n - i, i + 1]\n    print(*li + [['', n + 1 >> 1][n & 1]])", "for _ in [*open(0)][1:]:\n    (n, k) = map(int, _.split())\n    li = []\n    for i in range(n >> 1):\n        li += [n - i, i + 1]\n    print(*li + [['', n + 1 >> 1][n & 1]])", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    for i in range(0, n // 2):\n        print(n - i, i + 1, end=' ')\n    if n % 2 != 0:\n        print(n // 2 + 1)", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    anil = []\n    for i in range(n // 2):\n        anil.append(n - i)\n        anil.append(i + 1)\n    print(*(anil if n & 1 == 0 else (*anil, n // 2 + 1)))", "import sys\nimport math\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    vec = []\n    for i in range(n // 2):\n        vec.append(n - i)\n        vec.append(i + 1)\n    if n % 2 == 0:\n        print(*vec)\n    else:\n        vec.append(n // 2 + 1)\n        print(*vec)", "import sys\nimport math\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    l = []\n    for i in range(n // 2):\n        l.append(n - i)\n        l.append(i + 1)\n    if n % 2 == 0:\n        print(*l)\n    else:\n        l.append(n // 2 + 1)\n        print(*l)", "import sys\nimport math\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (no, k) = map(int, input().split())\n    lost = []\n    for x in range(no // 2):\n        lost.append(no - x)\n        lost.append(x + 1)\n    if no % 2 == 0:\n        print(*lost)\n    else:\n        lost.append(no // 2 + 1)\n        print(*lost)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    for i in range(0, n // 2):\n        print(n - i, i + 1, end=' ')\n    if n % 2 != 0:\n        print(n // 2 + 1)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split(' '))\n    l = []\n    for i in range(n // 2):\n        l.append(n - i)\n        l.append(i + 1)\n    if n % 2 == 1:\n        l.append(n // 2 + 1)\n    print(*l)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split(' '))\n    l = []\n    for i in range(1, (n + 1) // 2 + 1):\n        l.append(n + 1 - i)\n        l.append(i)\n    print(*l[0:n])", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    l = []\n    for i in range(n // 2):\n        l.append(n - i)\n        l.append(i + 1)\n    if n % 2 == 1:\n        l.append(n // 2 + 1)\n    print(*l)", "for j in range(int(input())):\n    (n, k) = map(int, input().split())\n    res = []\n    for i in range(n // 2):\n        res.append(n - i)\n        res.append(i + 1)\n    if n % 2 == 1:\n        res.append(n // 2 + 1)\n    print(*res)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    for i in range(0, n // 2):\n        print(n - i, i + 1, end=' ')\n    if n % 2 != 0:\n        print(n // 2 + 1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    y = []\n    for i in range(1, n // 2 + 1):\n        y.append(n - i + 1)\n        y.append(i)\n    if n % 2 != 0:\n        y.append(n // 2 + 1)\n    print(*y)", "nos = int(input())\nfor i in range(nos):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        for i in range(1, n // 2 + 1):\n            print(n - i + 1, i, end=' ')\n    else:\n        for i in range(1, (n - 1) // 2 + 1):\n            print(n - i + 1, i, end=' ')\n        print(n // 2 + 1)", "t = int(input())\nwhile t:\n    t -= 1\n    a = []\n    (n, k) = map(int, input().split())\n    for x in range(n // 2):\n        a.append(n - x)\n        a.append(x + 1)\n    if n % 2 == 1:\n        a.append(n // 2 + 1)\n    print(*a)", "k = int(input())\nfor i in range(k):\n    (n, k) = map(int, input().split())\n    for i in range(n // 2):\n        print(n - i, i + 1, end=' ')\n    print(n // 2 + 1 if n & 1 else '')", "import sys\nimport math\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = []\n    for i in range(n // 2):\n        l.append(n - i)\n        l.append(i + 1)\n    if n % 2 == 0:\n        print(*l)\n    else:\n        l.append(n // 2 + 1)\n        print(*l)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    for i in range(0, n // 2):\n        print(n - i, i + 1, end=' ')\n    if n % 2 != 0:\n        print(n // 2 + 1)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    for i in range(0, n // 2):\n        print(n - i, i + 1, end=' ')\n    if n % 2 != 0:\n        print(n // 2 + 1)", "import math\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    l = []\n    for i in range(n // 2):\n        l.append(n - i)\n        l.append(i + 1)\n    if n % 2 == 0:\n        print(*l)\n    else:\n        l.append(n // 2 + 1)\n        print(*l)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    for i in range(n // 2):\n        l.append(n - i)\n        l.append(i + 1)\n    if n % 2 != 0:\n        l.append(n // 2 + 1)\n    print(*l)", "for _ in [*open(0)][1:]:\n    (n, k) = map(int, _.split())\n    li = []\n    for i in range(n >> 1):\n        li += [n - i, i + 1]\n    print(*li + [['', n + 1 >> 1][n & 1]])", "import heapq\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    res = []\n    if n % 2 == 0:\n        for i in range(n // 2):\n            res.append(n - i)\n            res.append(i + 1)\n        print(*res)\n    else:\n        for i in range(n // 2):\n            res.append(n - i)\n            res.append(i + 1)\n        res.append(n // 2 + 1)\n        print(*res)", "import sys\nimport math\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = []\n    for i in range(n // 2):\n        l.append(n - i)\n        l.append(i + 1)\n    if n % 2 == 0:\n        print(*l)\n    else:\n        l.append(n // 2 + 1)\n        print(*l)", "import sys\nimport math\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = []\n    for i in range(n // 2):\n        l.append(n - i)\n        l.append(i + 1)\n    if n % 2 == 0:\n        print(*l)\n    else:\n        l.append(n // 2 + 1)\n        print(*l)", "import sys\nimport math\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (ejfejofjefo, ehfiefieuhef) = map(int, input().split())\n    vjfhvfvhjfvn = []\n    for i in range(ejfejofjefo // 2):\n        vjfhvfvhjfvn.append(ejfejofjefo - i)\n        vjfhvfvhjfvn.append(i + 1)\n    if ejfejofjefo % 2 == 0:\n        print(*vjfhvfvhjfvn)\n    else:\n        vjfhvfvhjfvn.append(ejfejofjefo // 2 + 1)\n        print(*vjfhvfvhjfvn)", "import math\nfrom collections import defaultdict\n\ndef sol():\n    (n, k) = map(int, input().split())\n    last = n\n    first = 1\n    a = []\n    while last > first:\n        a.append(last)\n        a.append(first)\n        last -= 1\n        first += 1\n    if last == first:\n        a.append(last)\n    print(*a)\n\ndef main():\n    for _ in range(int(input())):\n        sol()\nmain()", "import sys\nimport math\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    res = []\n    for i in range(n // 2):\n        res.append(n - i)\n        res.append(i + 1)\n    if n % 2 == 0:\n        print(*res)\n    else:\n        res.append(n // 2 + 1)\n        print(*res)", "import sys\nimport math\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (z, k) = map(int, input().split())\n    l = []\n    for i in range(z // 2):\n        l.append(z - i)\n        l.append(i + 1)\n    if z % 2 == 0:\n        print(*l)\n    else:\n        l.append(z // 2 + 1)\n        print(*l)", "import sys\nimport math\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = []\n    for i in range(n // 2):\n        l.append(n - i)\n        l.append(i + 1)\n    if n % 2 == 0:\n        print(*l)\n    else:\n        l.append(n // 2 + 1)\n        print(*l)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    p = []\n    for i in range(n // 2):\n        p.append(n - i)\n        p.append(i + 1)\n    if n % 2 == 0:\n        print(*p)\n    else:\n        p.append(n // 2 + 1)\n        print(*p)", "import sys\nimport math\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = []\n    for i in range(n // 2):\n        l.append(n - i)\n        l.append(i + 1)\n    if n % 2 == 0:\n        print(*l)\n    else:\n        l.append(n // 2 + 1)\n        print(*l)", "import sys\nimport math\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = []\n    for i in range(n // 2):\n        l.append(n - i)\n        l.append(i + 1)\n    if n % 2 == 0:\n        print(*l)\n    else:\n        l.append(n // 2 + 1)\n        print(*l)", "def check(n, k):\n    data = []\n    for i in range(n // 2):\n        data.append(n - i)\n        data.append(i + 1)\n    if n % 2 == 0:\n        return data\n    else:\n        data.append(n // 2 + 1)\n        return data\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    sharma = check(n, k)\n    print(*sharma)", "for _ in range(int(input())):\n    (number, kmap) = map(int, input().split())\n    suii = []\n    for i in range(number // 2):\n        suii.append(number - i)\n        suii.append(i + 1)\n    if number % 2 == 0:\n        print(*suii)\n    else:\n        suii.append(number // 2 + 1)\n        print(*suii)", "for _ in range(int(input())):\n    (a, k) = map(int, input().split())\n    res = []\n    for i in range(a // 2):\n        res.append(a - i)\n        res.append(i + 1)\n    if a % 2 == 0:\n        print(*res)\n    else:\n        res.append(a // 2 + 1)\n        print(*res)", "test = int(input())\nfor i in range(test):\n    sample1 = input().split(' ')\n    n = int(sample1[0])\n    k = int(sample1[1])\n    ml = []\n    for i in range(n // 2):\n        ml.append(n - i)\n        ml.append(i + 1)\n    if n % 2 == 0:\n        print(*ml)\n    else:\n        ml.append(n // 2 + 1)\n        print(*ml)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    lst = []\n    if n % 2 != 0:\n        for i in range(int(n / 2) + 1):\n            lst.append(n - i)\n            lst.append(i + 1)\n        lst.pop()\n        st1 = ''\n        for i in lst:\n            st1 += str(i)\n            st1 += ' '\n        print(st1)\n    else:\n        for i in range(int(n / 2)):\n            lst.append(n - i)\n            lst.append(i + 1)\n        st1 = ''\n        for i in lst:\n            st1 += str(i)\n            st1 += ' '\n        print(st1)", "import sys\nimport math\nhellonewyear = sys.stdin.readline\nfor _ in range(int(hellonewyear())):\n    (helloworld, helloworld1) = map(int, hellonewyear().split())\n    abra_cadabra = []\n    for i in range(helloworld // 2):\n        abra_cadabra.append(helloworld - i)\n        abra_cadabra.append(i + 1)\n    if helloworld % 2 == 0:\n        print(*abra_cadabra)\n    else:\n        abra_cadabra.append(helloworld // 2 + 1)\n        print(*abra_cadabra)", "import sys\nimport math\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = []\n    for i in range(n // 2):\n        l.append(n - i)\n        l.append(i + 1)\n    if n % 2 == 0:\n        print(*l)\n    else:\n        l.append(n // 2 + 1)\n        print(*l)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    z = n // 2\n    l = []\n    for i in range(z):\n        l.append(n - i)\n        l.append(i + 1)\n    if n % 2 == 0:\n        print(*l)\n    else:\n        print(*l, end=' ')\n        print(n // 2 + 1)", "for i in range(int(input())):\n    (n, c) = map(int, input().split())\n    nn = n\n    p = [n]\n    r = n - 1\n    i = 1\n    while i <= r:\n        p.append(i)\n        i += 1\n        if i - 1 == r:\n            break\n        p.append(r)\n        r -= 1\n    print(*p)", "def solve():\n    (n, k) = map(int, input().split())\n    lis = list(range(1, n + 1))\n    (low, high) = (1, n)\n    ans = list()\n    while low < high:\n        ans.append(lis[high - 1])\n        ans.append(lis[low - 1])\n        low += 1\n        high -= 1\n    if low == high:\n        ans.append(lis[low - 1])\n    print(*ans)\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    lis = []\n    for i in range(n // 2):\n        lis.append(n - i)\n        lis.append(i + 1)\n    if n % 2 == 0:\n        print(*lis)\n    else:\n        lis.append(n // 2 + 1)\n        print(*lis)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if k == 1:\n        for i in range(1, n + 1):\n            print(i, end=' ')\n    else:\n        for i in range(1, n // 2 + 1):\n            print(n - i + 1, i, sep=' ', end=' ')\n        if n % 2 == 1:\n            print((n + 1) // 2, end=' ')\n    print('')", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    for i in range(0, n // 2):\n        print(n - i, i + 1, end=' ')\n    if n % 2 != 0:\n        print((n + 1) // 2)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    L = []\n    for i in range(n // 2):\n        L.append(n - i)\n        L.append(i + 1)\n    if n % 2 == 1:\n        L.append(n // 2 + 1)\n    print(*L)", "from typing import *\nfrom collections import *\nfrom math import *\nfrom functools import *\nINF = 1061109567\n\ndef RI():\n    return int(input())\n\ndef RAI():\n    return [int(i) for i in input().split()]\n\ndef RAI_1():\n    return [INF] + RAI()\n\ndef slove():\n    (n, k) = RAI()\n    (i, j) = (1, n)\n    ans = []\n    while i < j:\n        ans.append(j)\n        ans.append(i)\n        j -= 1\n        i += 1\n    if i == j:\n        ans.append(i)\n    print(*ans)\n\ndef main():\n    t = 1\n    t = RI()\n    for _ in range(t):\n        slove()\nmain()", "from collections import Counter\nop = int(input())\nfor _ in range(op):\n    (n, m) = map(int, input().split())\n    co = 0\n    o = n\n    if n % 2 == 0:\n        for i in range(1, n // 2 + 1):\n            print(o, i, end=' ')\n            o -= 1\n        print()\n    else:\n        for i in range(1, n // 2 + 1):\n            print(o, i, end=' ')\n            o -= 1\n        print(n // 2 + 1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    res = []\n    for i in range(n // 2):\n        res.append(n - i)\n        res.append(i + 1)\n    if n % 2 == 0:\n        print(*res)\n    else:\n        res.append(n // 2 + 1)\n        print(*res)", "for _ in range(int(input())):\n    (n, m) = [int(x) for x in input().split()]\n    ans = []\n    for i in range(n // 2):\n        ans.append(n - i)\n        ans.append(i + 1)\n    if n % 2 == 0:\n        print(*ans)\n    else:\n        ans.append(n // 2 + 1)\n        print(*ans)", "import sys\nimport math\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    for i in range(n // 2):\n        l.append(n - i)\n        l.append(i + 1)\n    if n % 2 == 0:\n        print(*l)\n    else:\n        l.append(n // 2 + 1)\n        print(*l)", "for __ in range(int(input())):\n    (nn, kk) = map(int, input().split())\n    ll = []\n    for ii in range(nn // 2):\n        ll.append(nn - ii)\n        ll.append(ii + 1)\n    if nn % 2 == 1:\n        ll.append(nn // 2 + 1)\n    print(*ll)", "import sys\n\ndef in_int():\n    return int(sys.stdin.readline())\n\ndef in_str():\n    return sys.stdin.readline().rstrip()\n\ndef in_map_int():\n    return map(int, sys.stdin.readline().split())\n\ndef in_arr_int():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef in_arr_str():\n    return sys.stdin.readline().split()\n\ndef is_prime(n):\n    for i in range(2, int(n ** (1 / 2)) + 1):\n        if n % i == 0:\n            return True\n    return False\n\ndef bin2dec(s):\n    n = 0\n    for i in range(len(s)):\n        n += int(s[len(s) - i - 1]) * 2 ** i\n    return n\n\ndef dec2bin(n):\n    if n == 0:\n        return '0'\n    ans = ''\n    while n > 0:\n        ans += str(n % 2)\n        n //= 2\n    return ans[::-1]\n\ndef solve(n, m):\n    arr = [0] * n\n    i = 0\n    (a, b) = (n, 1)\n    while i < n:\n        if i % 2:\n            arr[i] = b\n            b += 1\n        else:\n            arr[i] = a\n            a -= 1\n        i += 1\n    return arr\n\ndef main():\n    t = in_int()\n    for _ in range(t):\n        (n, k) = in_map_int()\n        print(*solve(n, k))\nmain()", "import math\nimport bisect\nfrom collections import defaultdict, Counter\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    ans = []\n    for i in range(n // 2):\n        ans.append(n - i)\n        ans.append(i + 1)\n    if n % 2 != 0:\n        ans.append(n // 2 + 1)\n        print(*ans)\n    else:\n        print(*ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    asif = []\n    for i in range(n // 2):\n        asif.append(n - i)\n        asif.append(i + 1)\n    if n % 2 != 0:\n        a = n // 2\n        b = a + 1\n        asif.append(b)\n        print(*asif)\n    else:\n        print(*asif)"]