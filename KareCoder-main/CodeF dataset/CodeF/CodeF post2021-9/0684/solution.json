["import math\n\ndef solve(n, x, y, a):\n    a.sort()\n    for i in range(n):\n        a[i] -= i\n    res = 0\n    for (idx, el) in enumerate(a):\n        if x >= el:\n            continue\n        if y - x <= idx:\n            return res + (y - x)\n        dx = 2 * idx - n\n        if dx <= 0:\n            if y - x > idx:\n                return -1\n            return y - x\n        if el >= y - idx:\n            iters = math.ceil((y - x - idx) / dx)\n            res += iters * n\n            x += iters * dx\n            break\n        else:\n            iters = math.ceil((el - x) / dx)\n            res += iters * n\n            x += iters * dx\n    return res + (y - x)\n\ndef main():\n    ans = []\n    for _ in range(int(input())):\n        (n, x, y) = map(int, input().split())\n        a = list(map(int, input().split()))\n        ans.append(solve(n, x, y, a))\n    print('\\n'.join(map(str, ans)))\nmain()", "def solve():\n    (n, x, y) = [int(x) for x in input().split()]\n    ranks = [int(x) for x in input().split()]\n    ranks.sort()\n    score = 0\n    result = 0\n    while True:\n        while score < n and x + score >= ranks[score]:\n            score += 1\n        if x + score >= y:\n            result += y - x\n            break\n        d = 2 * score - n\n        if d <= 0:\n            result = -1\n            break\n        m = y\n        if score < n and ranks[score] < y:\n            m = ranks[score]\n        skip_rounds = (m - score - x) // d\n        result += skip_rounds * n\n        x += skip_rounds * d\n        while x + score < m:\n            x += d\n            result += n\n    print(result)\nfor _ in range(int(input())):\n    solve()", "def solve():\n    (n, x, y) = [int(x) for x in input().split()]\n    ranks = [int(x) for x in input().split()]\n    ranks.sort()\n    next = 0\n    result = 0\n    while next < n and x >= ranks[next]:\n        next += 1\n    while True:\n        if x + next >= y:\n            result += y - x\n            break\n        if next < n and x + next >= ranks[next]:\n            result += next\n            x += next\n            while x < y and next < n and (ranks[next] <= x):\n                x += 1\n                next += 1\n                result += 1\n            if x == y:\n                break\n            x -= n - next\n            result += n - next\n        else:\n            d = 2 * next - n\n            if d <= 0:\n                result = -1\n                break\n            m = y\n            if next < n and ranks[next] < y:\n                m = ranks[next]\n            skip_rounds = (m - next - x) // d\n            result += skip_rounds * n\n            x += skip_rounds * d\n            while x + next < m:\n                x += d\n                result += n\n    print(result)\nfor _ in range(int(input())):\n    solve()", "t = int(input())\nfor tes in range(t):\n    (n, x, y) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    if a[0] > x:\n        print(-1)\n        continue\n    ans = 1\n    x += 1\n    for i in range(1, n):\n        if x == y:\n            break\n        if i <= n // 2 and a[i] > x:\n            x = y\n            ans = -1\n            break\n        if x >= a[i]:\n            ans += 1\n            x += 1\n        else:\n            if a[i] >= y:\n                add = i - (n - i)\n                u = y - x\n                r = u // add\n                x += add * r\n                ans += n * r\n                if x == y:\n                    break\n                ans += n - i\n                x -= n - i\n                break\n            add = i - (n - i)\n            u = a[i] - x\n            r = u // add\n            x += add * r\n            ans += n * r\n            if x == a[i]:\n                x += 1\n                ans += 1\n            else:\n                ans += n - i\n                x -= n - i\n                h = y - x\n                if h <= i:\n                    break\n                x += i\n                ans += i\n                x += 1\n                ans += 1\n    ans += y - x\n    print(ans)", "from collections import deque\nfor tea in range(int(input())):\n    (n, x, y) = map(int, input().split())\n    a = [int(xx) for xx in input().split()]\n    a.sort()\n    bx = x\n    turns = 0\n    canBeat = 0\n    cantBeat = deque()\n    bad = False\n    for i in a:\n        if x == y:\n            break\n        turns += 1\n        if x >= i:\n            x += 1\n            canBeat += 1\n        else:\n            x -= 1\n            cantBeat.append(i)\n    if x <= bx:\n        print(-1)\n    elif x >= y:\n        print(turns)\n    else:\n        turns = 0\n        x = bx\n        if canBeat != n:\n            nextToBeat = cantBeat.popleft()\n        else:\n            nextToBeat = -1\n        while x < y:\n            if nextToBeat != -1:\n                lol = max(min(y - x, nextToBeat - x - canBeat) // (canBeat * 2 - n) - 3, 0)\n            else:\n                turns += y - x\n                break\n            x += lol * (canBeat * 2 - n)\n            turns += lol * n\n            if x + canBeat >= y:\n                turns += y - x\n                break\n            x += canBeat\n            turns += canBeat\n            while x >= nextToBeat:\n                if nextToBeat == -1:\n                    break\n                x += 1\n                canBeat += 1\n                if canBeat != n:\n                    nextToBeat = cantBeat.popleft()\n                else:\n                    nextToBeat = -1\n                turns += 1\n                if x >= y:\n                    break\n            if x >= y:\n                break\n            x -= n - canBeat\n            turns += n - canBeat\n        print(turns)", "def div_(xx, yy):\n    if xx % yy == 0:\n        return xx // yy\n    else:\n        return xx // yy + 1\n\ndef search(m):\n    mi = 0\n    ma = n - 1\n    if b[0] > m:\n        return 0\n    if b[n - 1] <= m:\n        return n\n    while True:\n        if b[(mi + ma) // 2] <= m:\n            mi = (mi + ma) // 2\n        else:\n            ma = (mi + ma) // 2\n        if ma - mi <= 1:\n            return ma\nt = int(input())\nfor u in range(0, t):\n    (n, x, y) = map(int, input().split())\n    a = list(map(int, input().split()))\n    w = a.sort()\n    b = [0] * n\n    b[0] = a[0]\n    for i in range(1, n):\n        b[i] = max(b[i - 1], a[i] - i)\n    out = 0\n    while True:\n        r = search(x)\n        if x + r >= y:\n            out = out + y - x\n            break\n        get_1 = r - (n - r)\n        if get_1 <= 0:\n            out = -1\n            break\n        if r == n:\n            round_ = div_(y - x - r, get_1)\n            y = y - x - round_ * get_1\n            out = out + round_ * n + y\n            break\n        else:\n            round_ = div_(b[r] - x, get_1)\n            if x + get_1 * (round_ - 1) < y - r:\n                x = x + get_1 * round_\n                out = out + round_ * n\n            else:\n                round_ = div_(y - x - r, get_1)\n                y = y - x - round_ * get_1\n                out += round_ * n + y\n                break\n    print(out)"]