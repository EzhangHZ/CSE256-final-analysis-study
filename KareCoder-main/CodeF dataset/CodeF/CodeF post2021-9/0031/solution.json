["import sys\n\ndef solve(n, string):\n    if int(string[n - 1]) % 2 == 0:\n        print(0)\n        return\n    elif int(string[0]) % 2 == 0:\n        print(1)\n        return\n    else:\n        for i in range(1, n - 1):\n            if int(string[i]) % 2 == 0:\n                print(2)\n                return\n        print(-1)\n        return\n\ndef main():\n    test_case = int(sys.stdin.readline())\n    for tc in range(test_case):\n        string = sys.stdin.readline().strip('\\n')\n        n = len(string)\n        solve(n, string)\nmain()", "from sys import stdin\ntest = int(stdin.readline())\nfor t in range(test):\n    nums = int(stdin.readline())\n    if nums % 2 == 0:\n        print(0)\n    elif int(str(nums)[0]) % 2 == 0:\n        print(1)\n    else:\n        check = True\n        for i in str(nums):\n            if int(i) % 2 == 0:\n                check = False\n        if check:\n            print(-1)\n        else:\n            print(2)", "import sys\nimport math\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef inltstr():\n    return list(map(str, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef factorial(n):\n    if n == 1:\n        return n\n    elif n < 1:\n        return 'NA'\n    else:\n        return n * factorial(n - 1)\n\ndef coeffBin(k):\n    return factorial(k + 1) / (factorial(2) * factorial(k - 1))\n\ndef solve(num):\n    num = num.strip('\\n')\n    if int(num) % 2 == 0:\n        return '0'\n    elif int(num[0]) % 2 == 0:\n        return '1'\n    else:\n        for c in num:\n            if int(c) % 2 == 0:\n                return '2'\n    return '-1'\nres = []\niter = inp()\ni = 0\nwhile i < iter:\n    arr = input()\n    result = solve(arr)\n    res.append(result)\n    i += 1\nfor r in res:\n    print(r)", "import sys\n\ndef b(l, n, f):\n    a = 0\n    x = n - 1\n    while a <= x:\n        m = a + (x - a) // 2\n        if l[m] == f:\n            return m\n        elif l[m] > f:\n            x = m - 1\n        else:\n            a = m + 1\n    return None\nfor i in range(int(sys.stdin.readline())):\n    n = sys.stdin.readline()\n    if int(n) % 2 == 0:\n        print(0)\n    elif int(n[0]) % 2 == 0:\n        print(1)\n    else:\n        c = 0\n        for i in range(1, len(n) - 1):\n            if int(n[i]) % 2 == 0:\n                c = 1\n                break\n        if c == 1:\n            print(2)\n        else:\n            print(-1)", "t = int(input())\nnums = [None] * t\nans = [False] * t\nfor i in range(t):\n    nums[i] = input()\n    if '2' not in nums[i] and '4' not in nums[i] and ('6' not in nums[i]) and ('8' not in nums[i]):\n        ans[i] = -1\n    elif int(nums[i]) % 2 == 0:\n        ans[i] = 0\n    elif int(nums[i][0]) % 2 == 0:\n        ans[i] = 1\n    else:\n        ans[i] = 2\nfor i in ans:\n    print(i)", "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    n = int(sys.stdin.readline())\n    s = str(n)\n    if n < 0 and n % 2 != 0:\n        print(-1)\n    elif n % 2 == 0:\n        print(0)\n    elif int(s[0]) % 2 == 0:\n        print(1)\n    else:\n        even = False\n        for i in s:\n            if int(i) % 2 == 0:\n                even = True\n                break\n        if even == True:\n            print(2)\n        else:\n            print(-1)", "import sys\nlst = ['0', '2', '4', '6', '8']\nfor _ in range(int(sys.stdin.readline().strip())):\n    ans = -1\n    s = sys.stdin.readline().strip()\n    if s[-1] in lst:\n        ans = 0\n    elif s[0] in lst:\n        ans = 1\n    else:\n        for i in lst:\n            if i in s:\n                ans = 2\n                break\n    sys.stdout.write(str(ans) + '\\n')", "t = int(input())\ns = []\nfor i in range(t):\n    s.append(input())\nfor i in range(t):\n    if int(s[i][-1]) % 2 == 0:\n        print(0)\n    elif int(s[i][0]) % 2 == 0:\n        print(1)\n    elif '2' in s[i] or '4' in s[i] or '6' in s[i] or ('8' in s[i]):\n        print(2)\n    else:\n        print(-1)", "for s in [*open(0)][1:]:\n    print(-all((a := [ord(x) % 2 for x in s[:-1]])) or (a[0] + 1) * a[-1])", "t = int(input())\nnumbers_list = []\nfor number in range(0, t):\n    current_number = int(input())\n    numbers_list.append(current_number)\n\ndef allodd(n):\n    return set(str(n)) - set('13579') == set()\nfor num in numbers_list:\n    if num % 2 == 0:\n        print(0)\n    elif allodd(num) == True:\n        print(-1)\n    elif int(str(num)[0]) % 2 == 0:\n        print(1)\n    else:\n        print(2)", "def even(num):\n    if int(num[-1]) % 2 == 0:\n        return 0\n    else:\n        x = False\n        for i in num:\n            if int(i) % 2 == 0:\n                x = True\n        if x:\n            if int(num[0]) % 2 == 0:\n                return 1\n            else:\n                return 2\n        else:\n            return -1\nls = []\nfor i in range(int(input())):\n    ls.append(even(input()))\nfor i in ls:\n    print(i)", "for s in [*open(0)][1:]:\n    n = int(s)\n    last_no = n % 10\n    ev = False\n    first_digit = 1\n    while n > 0:\n        if n % 10 % 2 == 0:\n            ev = True\n        first_digit = n % 10\n        n //= 10\n    if last_no % 2 == 0:\n        print(0)\n    elif first_digit % 2 == 0:\n        print(1)\n    elif ev:\n        print(2)\n    else:\n        print(-1)", "for s in [*open(0)][1:]:\n    print(-all((a := [int(x) % 2 for x in s[:-1]])) or (a[0] + 1) * a[-1])", "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    n = int(sys.stdin.readline())\n    s = str(n)\n    if n < 0 and n % 2 != 0:\n        print(-1)\n    elif n % 2 == 0:\n        print(0)\n    elif int(s[0]) % 2 == 0:\n        print(1)\n    else:\n        even = False\n        for i in s:\n            if int(i) % 2 == 0:\n                even = True\n                break\n        if even == True:\n            print(2)\n        else:\n            print(-1)", "def solve(nums):\n    hasEven = False\n    for n in nums:\n        if n % 2 == 0:\n            hasEven = True\n            break\n    if not hasEven:\n        return '-1'\n    if nums[-1] % 2 == 0:\n        return '0'\n    if nums[0] % 2 == 0:\n        return '1'\n    return '2'\nans = []\nfor _ in range(int(input())):\n    ans.append(solve([int(c) for c in input()]))\nprint(*ans, sep='\\n')", "t = int(input())\narr = [int(input()) for i in range(t)]\nfor i in arr:\n    j = i\n    flag = False\n    while j > 0:\n        if j % 2 == 0:\n            flag = True\n            break\n        j //= 10\n    if flag:\n        if i % 2 == 0:\n            print(0)\n        elif int(str(i)[0]) % 2 == 0:\n            print(1)\n        else:\n            print(2)\n    else:\n        print(-1)", "t = int(input())\narr = []\nfor _ in range(t):\n    arr.append(input())\nfor number in arr:\n    if int(number) % 2 == 0:\n        print(0)\n        continue\n    for (k, el) in enumerate(number):\n        if int(el) % 2 == 0:\n            l = k\n            break\n    else:\n        print(-1)\n        continue\n    if l == 0:\n        print(1)\n    else:\n        print(2)", "t = int(input())\na = [int(input()) for i in range(t)]\nfor i in range(t):\n    if a[i] % 2 == 0:\n        a[i] = 0\n    elif a[i] * 10 // 10 ** len(str(a[i])) % 2 == 0:\n        a[i] = 1\n    else:\n        u = 0\n        for h in range(len(str(a[i]))):\n            if a[i] % 2 == 0:\n                u += 1\n            a[i] //= 10\n        if u == 0:\n            a[i] = -1\n        else:\n            a[i] = 2\nfor i in range(t):\n    print(a[i])", "def solutionA():\n    n = int(input())\n    cases = [int(input()) for _ in range(n)]\n    for i in cases:\n        if i % 2 == 0:\n            print(0)\n            continue\n        string = str(i)\n        if int(string[0]) % 2 == 0:\n            print(1)\n            continue\n        valid = False\n        for x in range(len(string) - 1, -1, -1):\n            if int(string[x]) % 2 == 0 and x != 0:\n                print(2)\n                valid = True\n                break\n        if valid:\n            continue\n        print(-1)\nsolutionA()", "t = int(input())\nl = []\n\ndef e(n):\n    return int(n) % 2 == 0\nfor i in range(t):\n    s = input()\n    if e(s[-1]):\n        l.append(0)\n    elif e(s[0]):\n        l.append(1)\n    elif any([e(j) for j in s]):\n        l.append(2)\n    else:\n        l.append(-1)\nfor i in l:\n    print(i)", "def f(num):\n    count_even = 0\n    num = str(num)\n    for n in num:\n        if int(n) % 2 == 0:\n            count_even += 1\n    if count_even == 0:\n        return -1\n    if int(num[len(num) - 1]) % 2 == 0:\n        return 0\n    if int(num[0]) % 2 == 0:\n        return 1\n    return 2\nnums = [int(input()) for _ in range(int(input()))]\nfor num in nums:\n    print(f(num))", "import sys\nt = int(sys.stdin.readline())\n\ndef get_answer(n):\n    if n % 2 == 0:\n        return 0\n    else:\n        s = str(n)\n        if int(s[0]) % 2 == 0:\n            return 1\n        else:\n            for i in range(len(s)):\n                if int(s[i]) % 2 == 0:\n                    return 2\n            return -1\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    print(get_answer(n))", "def EvenCheck(num):\n    for i in range(len(num)):\n        if int(num[i]) % 2 == 0:\n            return True\n    return False\ninputArray = [str(input()) for i in range(int(input()))]\nfor i in range(len(inputArray)):\n    if int(inputArray[i][-1]) % 2 == 0:\n        print(0)\n        continue\n    if int(inputArray[i][0]) % 2 == 0:\n        print(1)\n        continue\n    elif EvenCheck(inputArray[i]) == False:\n        print(-1)\n        continue\n    else:\n        print(2)", "times = int(input())\nl = []\naa = 1\nfor _ in range(times):\n    a = str(input())\n    l.append(a)\n\ndef Meven(x):\n    if int(x) % 2 == 0:\n        return 0\n    elif int(x[0]) % 2 == 0:\n        return 1\n    else:\n        for i in x:\n            if int(i) % 2 == 0:\n                return 2\n                break\n        return -1\nfor i in l:\n    print(Meven(i))", "t = int(input())\ninputs = [[int(_) for _ in input()] for i in range(t)]\nfor n in inputs:\n    res = 0\n    if int(n[-1]) % 2 == 0:\n        pass\n    elif int(n[0]) % 2 == 0:\n        res = 1\n    elif any((x in [2, 4, 6, 8] for x in n)):\n        res = 2\n    else:\n        res = -1\n    print(res)", "for s in [*open(0)][1:]:\n    print(-all((a := [int(x) % 2 for x in s[:-1]])) or (a[0] + 1) * a[-1])", "for s in [*open(0)][1:]:\n    print(-all((a := [int(x) % 2 for x in s[:-1]])) or (a[0] + 1) * a[-1])", "t = int(input())\nans = []\nfor i in range(t):\n    s = input()\n    if s.count('0') + s.count('2') + s.count('4') + s.count('6') + s.count('8') == 0:\n        ans.append(-1)\n    elif int(s[-1]) % 2 == 0:\n        ans.append(0)\n    elif int(s[0]) % 2 == 0:\n        ans.append(1)\n    else:\n        ans.append(2)\nfor elem in ans:\n    print(elem)", "attemps = int(input())\nrez_mass = []\nfor _ in range(attemps):\n    ch = input()\n    if all((int(x) % 2 != 0 for x in ch)):\n        rez_mass.append(-1)\n    elif int(ch) % 2 == 0:\n        rez_mass.append(0)\n    elif int(ch[0]) % 2 == 0:\n        rez_mass.append(1)\n    else:\n        rez_mass.append(2)\nprint(*rez_mass, sep='\\n')", "for s in [*open(0)][1:]:\n    print(-all((a := [int(x) % 2 for x in s[:-1]])) or (a[0] + 1) * a[-1])", "n = int(input())\ntlist = []\nfor i in range(n):\n    m = input()\n    if int(m) % 2 == 0:\n        tlist.append('0')\n    elif '2' in m or '4' in m or '6' in m or ('8' in m):\n        if m[0] in ['2', '4', '6', '8']:\n            tlist.append('1')\n        else:\n            tlist.append('2')\n    else:\n        tlist.append('-1')\nfor _ in tlist:\n    print(_)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor i in range(t):\n    n = input()[:-1]\n    if int(n[-1]) % 2 == 0:\n        print(0)\n    elif int(n[0]) % 2 == 0:\n        print(1)\n    else:\n        containsEven = False\n        for j in range(len(n)):\n            if int(n[j]) % 2 == 0:\n                containsEven = True\n        print([-1, 2][containsEven])", "ans = ''\nfor i in range(int(input())):\n    n = input()\n    c = 0\n    if int(n[-1]) % 2 == 0:\n        ans += '0' + '\\n'\n    elif int(n[0]) % 2 == 0:\n        ans += '1' + '\\n'\n    else:\n        for i in range(len(n)):\n            if int(n[i]) % 2 == 0:\n                ans += '2' + '\\n'\n                c = 1\n                break\n        if c == 0:\n            ans += '-1' + '\\n'\nprint(ans)", "for s in [*open(0)][1:]:\n    a = [int(x) % 2 for x in s[:-1]]\n    print((-1, a[-1] * (a[0] + 1))[0 in a])", "for s in [*open(0)][1:]:\n    s = s.strip()\n    a = [i for (i, c) in enumerate(s) if ord(c) % 2 == 0]\n    if len(s) - 1 in a:\n        print(0)\n    elif not a:\n        print(-1)\n    elif 0 in a:\n        print(1)\n    else:\n        print(2)", "import sys\nimport bisect\nimport math\ninput = lambda : sys.stdin.readline().strip()\nmod = 10 ** 9 + 9\n\ndef solve():\n    s = input()\n    even = ['2', '4', '6', '8']\n    if not any((x in s for x in even)):\n        return -1\n    elif s[-1] in even:\n        return 0\n    elif s[0] in even:\n        return 1\n    else:\n        return 2\nt = 1\nt = int(input())\nfor _ in range(t):\n    print(solve())", "import sys\n\ndef input():\n    return sys.stdin.readline().rstrip()\nt = int(input())\nfor _ in range(t):\n    s = input()\n    if int(s[-1]) % 2 == 0:\n        print(0)\n        continue\n    if int(s[0]) % 2 == 0:\n        print(1)\n        continue\n    for i in range(len(s)):\n        if int(s[i]) % 2 == 0:\n            print(2)\n            break\n    else:\n        print(-1)", "import sys\nfrom sys import stdin, stdout\nfrom math import ceil, floor, sqrt, log, log2, log10\nfrom collections import Counter\nint_max = float('inf')\nint_min = -float('inf')\nmod = 10 ** 9 + 7\nANS = []\ninput = stdin.readline\n\ndef solve():\n    pass\nt = int(input())\nfor i in range(t):\n    n = input().strip()\n    if int(n) % 2 == 0:\n        print(0)\n        continue\n    elif int(n[0]) % 2 == 0:\n        print(1)\n        continue\n    else:\n        f = 0\n        for i in n:\n            if int(i) % 2 == 0:\n                f = 1\n                break\n        if f == 0:\n            print(-1)\n        else:\n            print(2)", "t = int(input())\nret = []\nfor i in range(t):\n    n = input()\n    if int(n[-1]) % 2 == 0:\n        ret.append(0)\n    elif int(n[0]) % 2 == 0:\n        ret.append(1)\n    else:\n        for s in n:\n            if int(s) % 2 == 0:\n                ret.append(2)\n                break\n        else:\n            ret.append(-1)\nprint(*ret, sep='\\n')", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    L = [int(d) % 2 == 0 for d in input()[:-1]]\n    if L[-1]:\n        print(0)\n    elif L[0]:\n        print(1)\n    elif any(L):\n        print(2)\n    else:\n        print(-1)", "from sys import stdin, stdout\nimport sys\nimport math\nimport itertools\nfrom collections import defaultdict\nsys.setrecursionlimit(10 ** 6)\nimport re\n\ndef main():\n    t = int(stdin.readline().strip())\n    for j in range(1, t + 1):\n        s = stdin.readline().strip()\n        even = {'2', '4', '6', '8'}\n        if s[-1] in even:\n            print(0)\n        elif s[0] in even:\n            print(1)\n        else:\n            flag = 0\n            for char in s:\n                if char in even:\n                    flag = 1\n                    break\n            if flag == 1:\n                print(2)\n            else:\n                print(-1)\nmain()", "from sys import stdin\n\ndef solve():\n    results = []\n    for _ in range(int(stdin.readline().strip())):\n        N = int(stdin.readline().rstrip())\n        if N % 2 == 0:\n            results.append(0)\n            continue\n        n = str(N)\n        S = {'0', '2', '4', '6', '8'}\n        ans = -1\n        if n[0] in S:\n            results.append(1)\n            continue\n        ans = -1\n        for i in range(len(n)):\n            if n[i] in S:\n                ans = 2\n                break\n        results.append(ans)\n    print('\\n'.join(map(str, results)))\nsolve()", "import sys\ninput = sys.stdin.readline\n\ndef solution(s):\n    if int(s[-1]) & 1 == 0:\n        return 0\n    if int(s[0]) & 1 == 0:\n        return 1\n    for t in s:\n        if int(t) & 1 == 0:\n            return 2\n    return -1\nT = int(input())\nfor _ in range(T):\n    s = input().rstrip()\n    print(solution(s))", "import sys\ninput = lambda : sys.stdin.readline().rstrip('\\r\\n')\ninp = lambda : list(map(int, sys.stdin.readline().rstrip('\\r\\n').split()))\ntc = 1\ntc = int(input())\nfor _ in range(tc):\n    s = input()\n    if ord(s[-1]) % 2 == 0:\n        print(0)\n        continue\n    if ord(s[0]) % 2 == 0:\n        print(1)\n        continue\n    flag = True\n    for i in s:\n        if ord(i) % 2 == 0:\n            print(2)\n            flag = False\n            break\n    if flag:\n        print(-1)", "t = int(input())\nanswers = []\nfor i in range(t):\n    n = input()\n    if int(n[-1]) % 2 == 0:\n        answers.append(0)\n    elif int(n[0]) % 2 == 0:\n        answers.append(1)\n    elif len([x for x in n if int(x) % 2 == 0]):\n        answers.append(2)\n    else:\n        answers.append(-1)\nfor i in answers:\n    print(i)", "for s in [*open(0)][1:]:\n    a = [int(x) % 2 for x in s[:-1]]\n    print((-1, a[-1] * (a[0] + 1))[0 in a])", "ans = ''\nfor _ in range(int(input())):\n    n = int(input())\n    hasEven = False\n    temp = n\n    while temp >= 1:\n        if temp % 2 == 0:\n            hasEven = True\n            break\n        temp //= 10\n    if str(n)[-1] == '2' or str(n)[-1] == '4' or str(n)[-1] == '6' or (str(n)[-1] == '8'):\n        ans += '0\\n'\n    elif str(n)[0] == '2' or str(n)[0] == '4' or str(n)[0] == '6' or (str(n)[0] == '8'):\n        ans += '1\\n'\n    elif hasEven:\n        ans += '2\\n'\n    else:\n        ans += '-1\\n'\nprint(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    L = []\n    flag = 0\n    if n % 2 == 0:\n        print(0)\n    else:\n        while n > 0:\n            if flag == 0 and n % 2 == 0:\n                flag = 1\n            L.append(n % 10)\n            n //= 10\n        if L[-1] % 2 == 0:\n            print(1)\n        elif flag == 0:\n            print(-1)\n        else:\n            print(2)", "t = int(input())\nfor k in range(t):\n    n = input()\n    cnt = 0\n    if int(n[-1]) % 2 == 0:\n        print(0)\n    elif int(n[0]) % 2 == 0:\n        print(1)\n    else:\n        for i in n:\n            if int(i) % 2 == 0:\n                print(2)\n                cnt = 1\n                break\n        if cnt == 0:\n            print(-1)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nt = inp()\nwhile t > 0:\n    n = insr()\n    e = -1\n    for i in range(len(n) - 1, -1, -1):\n        if int(n[i]) % 2 == 0:\n            e = i\n            if i == len(n) - 1:\n                break\n    if e == len(n) - 1:\n        print(0)\n    elif e == 0:\n        print(1)\n    elif e == -1:\n        print(-1)\n    else:\n        print(2)\n    t -= 1", "for s in [*open(0)][1:]:\n    a = [int(x) % 2 for x in s[:-1]]\n    print((-1, a[-1] * (a[0] + 1))[0 in a])", "a = '2'\nb = '4'\nc = '6'\nd = '8'\nt = int(input())\nfor i in range(t):\n    n = input()\n    if int(n) % 2 == 0:\n        print(0)\n    elif len(n) == 1:\n        print(-1)\n    elif int(n[0]) % 2 == 0:\n        print(1)\n    elif a in n or b in n or c in n or (d in n):\n        print(2)\n    else:\n        print(-1)", "t = int(input())\nfrom sys import stdin\nfor inp in stdin:\n    inp = inp.rstrip()\n    if len(inp) == 1 and ord(inp[0]) % 2 != 0:\n        print(-1)\n    elif ord(inp[-1]) % 2 == 0:\n        print(0)\n    elif ord(inp[0]) % 2 == 0:\n        print(1)\n    else:\n        for c in range(1, len(inp)):\n            if c + 1 < len(inp):\n                if ord(inp[c]) % 2 == 0:\n                    print(2)\n                    break\n            else:\n                print(-1)\n                break\n    if t == 0:\n        break\n    t -= 1", "t = int(input())\nans = []\nfor _ in range(t):\n    s = input()\n    hasEvens = False\n    for i in s:\n        if int(i) % 2 == 0:\n            hasEvens = True\n    if hasEvens:\n        if int(s[-1]) % 2 == 0:\n            ans.append(0)\n        elif int(s[0]) % 2 == 0:\n            ans.append(1)\n        else:\n            ans.append(2)\n    else:\n        ans.append(-1)\nfor i in ans:\n    print(i)", "arr = []\nfor i in range(int(input())):\n    arr.append(input())\n\ndef evenDigit(a):\n    for b in a:\n        if b % 2 == 0:\n            return True\n    return False\nfor x in arr:\n    tmp = [int(c) for c in x]\n    if tmp[-1] % 2 == 0:\n        print(0)\n    elif evenDigit(tmp):\n        if tmp[0] % 2 == 0:\n            print(1)\n        else:\n            print(2)\n    else:\n        print(-1)", "from copy import deepcopy\nt = int(input())\nfor test_case in range(t):\n    n = input()\n    s = '2468'\n    ans = -1\n    if n[-1] in s:\n        ans = 0\n    elif n[0] in s:\n        ans = 1\n    else:\n        for ch in n:\n            if ch in s:\n                ans = 2\n                break\n    print(ans)", "T = int(input())\nres = []\nfor _ in range(T):\n    n = list(map(int, input()))\n    if n[-1] & 1 == 0:\n        res.append(0)\n        continue\n    if n[0] & 1 == 0:\n        res.append(1)\n        continue\n    p = False\n    for i in n:\n        if i & 1 == 0:\n            p = True\n            break\n    if p:\n        res.append(2)\n    else:\n        res.append(-1)\nfor i in res:\n    print(i)", "n = int(input())\nli = []\nfor i in range(n):\n    temp = int(input())\n    li.append(temp)\nfor i in range(n):\n    temp = str(li[i])\n    le = len(temp)\n    val = 0\n    flag = False\n    if int(temp[le - 1]) % 2 == 0:\n        print(0)\n        flag = True\n    elif int(temp[0]) % 2 == 0:\n        print(1)\n        flag = True\n    else:\n        for i in range(1, le - 1):\n            if int(temp[i]) % 2 == 0:\n                flag = True\n                print(2)\n                break\n    if flag == False:\n        print(-1)", "num = int(input())\nlistf = []\nfor x in range(num):\n    inp = list(input())\n    t = 0\n    for r1 in inp:\n        if int(r1) % 2 == 0:\n            t = 1\n    if t == 0:\n        listf.append('-1')\n    elif int(inp[-1]) % 2 == 0:\n        listf.append('0')\n    elif int(inp[0]) % 2 == 0:\n        listf.append('1')\n    else:\n        listf.append('2')\nfor e in listf:\n    print(e)", "r = int(input())\nnum = []\nfor i in range(r):\n    num.append(input())\nfor i in range(r):\n    if ord(num[i][len(num[i]) - 1]) % 2 == 0:\n        print(0)\n    elif ord(num[i][0]) % 2 == 0:\n        print(1)\n    else:\n        flag = True\n        for j in num[i]:\n            if ord(j) % 2 == 0:\n                print(2)\n                flag = False\n                break\n        if flag:\n            print(-1)", "def proverka(i):\n    if i % 2 == 0:\n        return 0\n    if len(str(i)) == 1:\n        return -1\n    n = False\n    for l in str(i)[:-1]:\n        if int(l) % 2 == 0:\n            n = True\n    if not n:\n        return -1\n    if int(str(i)[0]) % 2 == 0:\n        return 1\n    return 2\na = int(input())\nchisla = []\nfor i in range(a):\n    chisla.append(int(input()))\nfor i in chisla:\n    print(proverka(i))", "for i in range(int(input())):\n    (n, x, ans) = (input(), '2468', -1)\n    if n[-1] in x:\n        ans = 0\n    elif n[0] in x:\n        ans = 1\n    elif sum((1 for i in n if i in x)) > 0:\n        ans = 2\n    print(ans)", "t = int(input())\na = []\nfor i in range(t):\n    i = input()\n    a.append(i)\nfor i in a:\n    c = 0\n    if int(i[-1]) % 2 == 0:\n        print(0)\n    elif int(i[0]) % 2 == 0:\n        print(1)\n    else:\n        for j in i:\n            if int(j) % 2 == 0:\n                print(2)\n                c = 1\n                break\n        if c == 0:\n            print(-1)", "for s in [*open(0)][1:]:\n    print(-all((a := [int(x) % 2 for x in s[:-1]])) or (a[0] + 1) * a[-1])", "t = int(input())\nc = 0\nflag = 1\nres = []\nfor i in range(t):\n    x = int(input())\n    s = str(x)\n    if x % 2 == 0:\n        c = 0\n        flag = 1\n        res.append(c)\n    elif int(s[0]) % 2 == 0:\n        c = 1\n        flag = 1\n        res.append(c)\n    else:\n        l = []\n        for j in range(len(s)):\n            if int(s[j]) % 2 == 0:\n                c = 2\n                flag = 1\n                break\n            else:\n                flag = 0\n                continue\n        if flag == 1:\n            res.append(c)\n        else:\n            res.append(-1)\nfor i in res:\n    print(i)", "t = int(input())\nfor i in range(t):\n    n = input()\n    nn = int(n)\n    flag = 0\n    if nn % 2 == 0:\n        print(0)\n    elif int(n[0]) % 2 == 0:\n        print(1)\n    else:\n        for j in range(len(n)):\n            if int(n[j]) % 2 == 0:\n                print(2)\n                flag = 1\n                break\n        if flag != 1:\n            print(-1)", "for s in [*open(0)][1:]:\n    s = s.strip('\\n')\n    a = int(s)\n    if a % 2 == 0:\n        print(0)\n    else:\n        (e, o) = (0, 0)\n        for i in s:\n            i = int(i)\n            if i % 2 == 0:\n                e += 1\n            else:\n                o += 1\n        if e > 0:\n            cnt = 0\n            (a, b) = (s[0], s[-1])\n            (a, b) = (int(a), int(b))\n            if a % 2 != 0:\n                cnt += 1\n            if b % 2 != 0:\n                cnt += 1\n            print(cnt)\n        else:\n            print(-1)", "def findeven(innum):\n    innum = str(innum)\n    for i in range(len(innum)):\n        if int(innum[i]) % 2 == 0:\n            return i + 1\n    else:\n        return False\nn = int(input())\nanslist = []\nfor x in range(n):\n    num = int(input())\n    strnum = str(num)\n    evenpos = findeven(num)\n    if not evenpos:\n        anslist.append(-1)\n    elif int(strnum[len(strnum) - 1]) % 2 == 0:\n        anslist.append(0)\n    elif evenpos == 1:\n        anslist.append(1)\n    elif evenpos > 1:\n        anslist.append(2)\nfor i in anslist:\n    print(i)", "count = int(input())\nnums = []\n\ndef checkAllOdd(n):\n    c = 0\n    for i in str(n):\n        if int(i) % 2 == 0:\n            c += 1\n    if c == 0:\n        return True\n    else:\n        return False\nfor n in range(count):\n    nums.append(int(input()))\nfor i in nums:\n    if i % 2 == 0:\n        print(0)\n    elif len(str(i)) == 1 and i % 2 != 0:\n        print(-1)\n    elif checkAllOdd(i):\n        print(-1)\n    else:\n        p = 0\n        for k in str(i):\n            if int(k) % 2 == 0:\n                break\n            else:\n                p += 1\n        p += 1\n        if p > 2:\n            print(2)\n        else:\n            print(p)", "count = int(input())\nnums = []\n\ndef checkAllOdd(n):\n    c = 0\n    for i in str(n):\n        if int(i) % 2 == 0:\n            c += 1\n    if c == 0:\n        return True\n    else:\n        return False\nfor n in range(count):\n    nums.append(int(input()))\nfor i in nums:\n    if i % 2 == 0:\n        print(0)\n    elif len(str(i)) == 1 and i % 2 != 0:\n        print(-1)\n    elif checkAllOdd(i):\n        print(-1)\n    else:\n        p = 0\n        for k in str(i):\n            if int(k) % 2 == 0:\n                break\n            else:\n                p += 1\n        p += 1\n        if p > 2:\n            print(2)\n        else:\n            print(p)", "t = int(input())\nli = []\nfor item in range(t):\n    f = int(input())\n    x = str(f)\n    o = 0\n    if f % 2 == 0:\n        li.append(0)\n    elif int(x[0]) % 2 == 0:\n        li.append(1)\n    else:\n        while o <= len(x) - 1:\n            if int(x[o]) % 2 == 0:\n                li.append(2)\n                break\n            if o == len(x) - 1:\n                li.append(-1)\n                break\n            o += 1\nfor i in li:\n    print(i)", "def solve():\n    n = int(input())\n    if n % 2 == 0:\n        return 0\n    if int(str(n)[0]) % 2 == 0:\n        return 1\n    for i in str(n):\n        if int(i) % 2 == 0:\n            return 2\n    return -1\nt = int(input())\nans = []\nwhile t:\n    ans.append(str(solve()))\n    t -= 1\nprint('\\n'.join(ans))", "t = int(input())\nr = []\nfor i in range(t):\n    n = int(input())\n    l = [int(x) for x in str(n)]\n    if int(n) % 2 == 0:\n        r.append(0)\n    elif l[0] % 2 == 0:\n        r.append(1)\n    else:\n        f = 0\n        for j in range(len(l)):\n            if l[j] % 2 == 0:\n                f = 1\n                break\n        if f == 0:\n            r.append(-1)\n        else:\n            r.append(2)\nfor i in range(len(r)):\n    print(r[i])", "t = int(input())\ns = []\nfor _ in range(t):\n    n = int(input())\n    s.append(n)\n\ndef func(x):\n    if x % 2 == 0:\n        return 0\n    elif len(str(x)) == 1 and x % 2 != 0:\n        return -1\n    elif len(str(x)) >= 2:\n        item = int(str(x)[0])\n        if item % 2 == 0:\n            return 1\n        else:\n            q = 0\n            for i in str(x):\n                if int(i) % 2 == 0:\n                    q += 1\n            if q >= 1:\n                return 2\n            else:\n                return -1\nfor item in s:\n    print(func(item))", "n = int(input())\nans = []\nfor i in range(n):\n    txt = [int(a) for a in input()]\n    if txt[-1] % 2 == 0:\n        ans.append(0)\n    elif txt[0] % 2 == 0:\n        ans.append(1)\n    else:\n        k = 0\n        for j in txt:\n            if j % 2 == 0:\n                k += 1\n                break\n        if k > 0:\n            ans.append(2)\n        else:\n            ans.append(-1)\nfor i in ans:\n    print(i)", "for i in range(int(input())):\n    n = input()\n    c = 0\n    if int(n[-1]) % 2 == 0:\n        print(0)\n    elif int(n[0]) % 2 == 0:\n        print(1)\n    else:\n        for i in n:\n            if int(i) % 2 == 0:\n                print(2)\n                c = 1\n                break\n        if c == 0:\n            print(-1)", "import sys\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef LI1():\n    return list(map(int1, sys.stdin.readline().split()))\n\ndef LLI1(rows_number):\n    return [LI1() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline().rstrip()\ndij = [(0, 1), (1, 0), (0, -1), (-1, 0)]\ninf = 4294967295\nmd = 998244353\n\ndef solve():\n    aa = [int(c) for c in SI()]\n    if aa[-1] & 1 == 0:\n        print(0)\n    elif aa[0] & 1 == 0:\n        print(1)\n    elif any((a & 1 == 0 for a in aa)):\n        print(2)\n    else:\n        print(-1)\nfor testcase in range(II()):\n    solve()", "N = int(input())\nfor _ in range(N):\n    a = input()\n    fl = False\n    for s in '2468':\n        if s in a:\n            fl = True\n    if fl == False:\n        print(-1)\n    elif a[-1] in '2468':\n        print(0)\n    elif a[0] in '2468':\n        print(1)\n    else:\n        print(2)", "for i in [int(input()) for i in range(int(input()))]:\n    if not i % 2:\n        print(0)\n    elif '2' not in str(i) and '4' not in str(i) and ('6' not in str(i)) and ('8' not in str(i)):\n        print(-1)\n    else:\n        s = list(str(i))\n        try:\n            a = s.index('2')\n        except Exception as e:\n            a = 9\n        try:\n            b = s.index('4')\n        except Exception as e:\n            b = 9\n        try:\n            c = s.index('6')\n        except Exception as e:\n            c = 9\n        try:\n            d = s.index('8')\n        except Exception as e:\n            d = 9\n        if not min([a, b, c, d]):\n            print(1)\n        else:\n            print(2)", "trails = int(input())\nanswer_list = []\nfor x in range(trails):\n    in_number = int(input())\n    number = []\n    for s in str(in_number):\n        number.append(s)\n    if int(number[-1]) % 2 == 0:\n        answer = 0\n    elif int(number[-1]) % 2 == 1 and int(number[0]) % 2 == 0:\n        answer = 1\n    else:\n        answer = -1\n        for d in number:\n            if int(d) % 2 == 0:\n                answer = 2\n    answer_list.append(answer)\nfor g in answer_list:\n    print(g)", "t = int(input())\np = []\nfor i in range(t):\n    k = 0\n    l1 = list(map(int, input()))\n    n = len(l1)\n    if int(l1[n - 1]) % 2 == 0:\n        p.append(0)\n    elif int(l1[0] % 2) == 0:\n        p.append(1)\n    else:\n        for j in l1:\n            if int(j) % 2 == 0:\n                p.append(2)\n                k = 1\n                break\n        if k == 0:\n            p.append(-1)\nprint(*p, sep='\\n')", "te = int(input())\nlakshy = []\nfor asde in range(te):\n    lakshy.append(int(input()))\nfor asde in range(te):\n    if lakshy[asde] % 2 == 0:\n        print(0)\n    elif lakshy[asde] // 10 ** (len(str(lakshy[asde])) - 1) % 2 == 0:\n        print(1)\n    else:\n        das = lakshy[asde]\n        while das > 0:\n            if das % 2 == 0:\n                print(2)\n                break\n            das //= 10\n        if das == 0:\n            print(-1)", "a = int(input())\nb = []\nfor i in range(a):\n    b.append(input())\nfor i in b:\n    if int(i[-1]) % 2 == 0:\n        print(0)\n    elif int(i[0]) % 2 == 0:\n        print(1)\n    else:\n        for j in range(len(i)):\n            if int(i[j]) % 2 == 0:\n                print(2)\n                break\n            if j == len(i) - 1:\n                print(-1)\n                break\n            j = j + 1", "from sys import stdin, stdout\nfrom collections import defaultdict\ninput = stdin.readline\nfrom random import randint\nimport math\nimport sys\nfor _ in range(int(input())):\n    n = int(input())\n    ans = -1\n    if n % 2 == 0:\n        ans = 0\n    elif int(str(n)[0]) % 2 == 0:\n        ans = 1\n    else:\n        for i in range(len(str(n))):\n            if int(str(n)[i]) % 2 == 0:\n                ans = 2\n    print(ans)", "def suitable(s):\n    count = 0\n    for m in str(s):\n        if int(m) % 2 == 0:\n            count += 1\n    if count == 0:\n        print(-1)\n    elif int(str(s)[-1]) % 2 == 0:\n        print(0)\n    elif int(str(s)[0]) % 2 == 0:\n        print(1)\n    else:\n        print(2)\nt = int(input())\nit = []\nfor i in range(t):\n    it.append(int(input()))\nfor i in it:\n    suitable(i)", "t = int(input())\ni = 0\nresult = []\nwhile i < t:\n    a = int(input())\n    n = [int(x) for x in str(a)]\n    l = len(n)\n    ans = -1\n    odd = 1\n    if n[l - 1] % 2 == 0:\n        ans = 0\n    elif n[0] % 2 == 0:\n        ans = 1\n    else:\n        for j in range(1, l - 1):\n            if n[j] % 2 == 0:\n                odd = 0\n                break\n        if odd == 0:\n            ans = 2\n        else:\n            ans = -1\n    result.append(ans)\n    i += 1\nfor value in result:\n    print(value)", "def binarize(string):\n    out = ''\n    for char in string:\n        rest = int(char) % 2\n        out = out + str(rest)\n    return out\nt = int(input())\ncisla = [0] * t\nfor i in range(t):\n    cislo = binarize(input())\n    if cislo.find('0', -1) == len(cislo) - 1:\n        cisla[i] = 0\n    elif cislo.find('0') == 0:\n        cisla[i] = 1\n    elif cislo.find('10') != -1:\n        cisla[i] = 2\n    else:\n        cisla[i] = -1\nfor cislo in cisla:\n    print(cislo)", "t = int(input())\nlan = []\nfor _ in range(t):\n    n = list(map(int, input()))\n    flag = True\n    for x in n:\n        if x % 2 == 0:\n            flag = False\n            break\n        else:\n            continue\n    if flag == True:\n        lan.append(-1)\n    elif n[-1] % 2 == 0:\n        lan.append(0)\n    elif n[0] % 2 == 0:\n        lan.append(1)\n    else:\n        lan.append(2)\nprint(*lan, sep='\\n')", "t = int(input())\nch = '2468'\nfor i in range(t):\n    n = input()\n    a = 0\n    for q in n:\n        if q in ch:\n            a = 1\n            break\n    if a == 0:\n        print(-1)\n    elif n[-1] in ch:\n        print(0)\n    elif n[0] in ch:\n        print(1)\n    else:\n        print(2)", "t = int(input())\nfor i in range(t):\n    s = input()\n    even = ['0', '2', '4', '6', '8']\n    if s[-1] in even:\n        print(0)\n    elif s[0] in even:\n        print(1)\n    else:\n        cnt = 0\n        for num in even:\n            if num in s:\n                cnt = 1\n                break\n        if cnt == 0:\n            print(-1)\n        else:\n            print(2)", "t = int(input())\neven = '02468'\nodd = '13579'\nfor _ in range(t):\n    s = input()\n    if s[-1] in even:\n        print(0)\n    elif s[0] in even:\n        print(1)\n    else:\n        Check = False\n        for c in s:\n            if c in even:\n                print(2)\n                Check = True\n                break\n        if Check == False:\n            print(-1)", "def main():\n    t = int(input())\n    for i in range(t):\n        n = input()\n        if int(n[-1]) % 2 == 0:\n            print(0)\n        elif int(n[0]) % 2 == 0:\n            print(1)\n        else:\n            for i in n:\n                if int(i) % 2 == 0:\n                    print(2)\n                    break\n            else:\n                print(-1)\nmain()", "t = int(input())\nfor i in range(t):\n    n = input()\n    if int(n[len(n) - 1]) % 2 == 0:\n        print(0)\n    elif int(n[0]) % 2 == 0:\n        print(1)\n    else:\n        k = [int(x) % 2 for x in n].count(1)\n        if k == len(n):\n            print(-1)\n        else:\n            print(2)", "t = int(input())\neven = ['2', '4', '6', '8']\nfor i in range(t):\n    s = input()\n    l = len(s)\n    if s[l - 1] in even:\n        print('0')\n    elif s[0] in even:\n        print('1')\n    elif '2' in s or '4' in s or '6' in s or ('8' in s):\n        print('2')\n    else:\n        print('-1')", "for _ in range(int(input())):\n    (n, x, ans) = (input(), '2468', -1)\n    if n[-1] in x:\n        ans = 0\n    elif n[0] in x:\n        ans = 1\n    elif sum((1 for i in n if i in x)) > 0:\n        ans = 2\n    print(ans)", "def _if_int_(num):\n    return num % 2 == 0\n\ndef _min_num_(n):\n    if _if_int_(int(n)):\n        return 0\n    elif len(n) == 1:\n        return -1\n    elif _if_int_(int(n[::-1])):\n        return 1\n    elif '2' in n or '4' in n or '6' in n or ('8' in n):\n        return 2\n    else:\n        return -1\nfor i in range(0, int(input())):\n    print(_min_num_(input()))", "for t in range(int(input())):\n    s = input()\n    if int(s[-1]) % 2 == 0:\n        print(0)\n        continue\n    if int(s[0]) % 2 == 0:\n        print(1)\n        continue\n    ans = -1\n    for i in s:\n        if int(i) % 2 == 0:\n            ans = 2\n    print(ans)"]