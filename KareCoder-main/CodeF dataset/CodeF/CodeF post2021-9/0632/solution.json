["import sys\ninput = sys.stdin.readline\n\ndef readList():\n    return list(map(int, input().split()))\n\ndef readInt():\n    return int(input())\n\ndef readInts():\n    return map(int, input().split())\n\ndef readStr():\n    return input().strip()\n\ndef solve():\n    n = readInt()\n    arr = readList()\n    V = max(arr)\n    if n > 3:\n        return n * V\n    elif n == 2:\n        return max(sum(arr), abs(arr[0] - arr[1]) * 2)\n    else:\n        return max(sum(arr), 3 * arr[0], 3 * arr[-1], 3 * abs(arr[0] - arr[1]), 3 * abs(arr[1] - arr[-1]))\nfor _ in range(int(input())):\n    print(solve())", "T = int(input())\nwhile T:\n    T -= 1\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    if n > 3:\n        print(n * max(a))\n    elif n == 2:\n        print(max(sum(a), n * abs(a[0] - a[1])))\n    elif n == 3:\n        print(max(sum(a), n * a[0], n * a[2], n * abs(a[0] - a[2]), n * abs(a[0] - a[1]), n * abs(a[1] - a[2])))", "import os\nimport math\nimport collections\nimport bisect\nimport functools\nimport itertools\nimport heapq\n\ndef solve(a, n):\n    ans = sum(a)\n    if len(a) == 2:\n        ans = max(ans, abs(a[1] - a[0]) * 2)\n        return ans\n    m = max(a)\n    if len(a) == 3 and a[0] < a[1] > a[2]:\n        return max(ans, (m - a[0]) * 2 + a[2], (m - a[2]) * 2 + a[0], 3 * (m - min(a[0], a[2])), 3 * max(a[0], a[2]))\n    return m * n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(a, n))", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n == 1:\n        print(arr[0])\n    elif n == 2:\n        (a, b) = (sum(arr), abs(arr[0] - arr[1]) * 2)\n        print(max(a, b))\n    elif n == 3:\n        (a, b, c) = arr\n        sm = sum(arr)\n        if b > a and b > c:\n            nm = max(b - min(a, c), max(a, c))\n            print(max(sm, nm * 3))\n        elif a >= b and a >= c:\n            print(max(sm, 3 * a))\n        elif c >= a and c >= b:\n            print(max(sm, 3 * c))\n        else:\n            print(sm)\n    else:\n        print(n * max(arr))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 0:\n        print(0)\n        continue\n    if n == 1:\n        print(a[0])\n        continue\n    if n == 2:\n        print(max(a[0] + a[1], abs(a[0] - a[1]) * 2))\n        continue\n    if n == 3:\n        print(max(sum(a), a[0] * n, a[-1] * n, abs(a[0] - a[1]) * n, abs(a[-1] - a[1]) * n))\n        continue\n    print(max(a) * n)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 0:\n        print(0)\n        continue\n    if n == 1:\n        print(a[0])\n        continue\n    if n == 2:\n        print(max(a[0] + a[1], abs(a[0] - a[1]) * 2))\n        continue\n    if n == 3:\n        print(max(sum(a), a[0] * n, a[-1] * n, abs(a[0] - a[1]) * n, abs(a[-1] - a[1]) * n))\n        continue\n    print(max(a) * n)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if n == 2:\n        print(max(sum(a), abs(a[0] - a[1]) * 2))\n    elif n == 3:\n        if a[0] >= a[1] and a[0] >= a[2]:\n            print(a[0] * n)\n        elif a[2] >= a[1] and a[2] >= a[0]:\n            print(a[2] * n)\n        else:\n            f1 = a[0] * n\n            f2 = a[2] * n\n            f3 = a[0] + 2 * (a[1] - a[2])\n            f4 = a[2] + 2 * (a[1] - a[0])\n            f5 = sum(a)\n            f6 = (a[1] - a[2]) * 3\n            f7 = (a[1] - a[0]) * 3\n            print(max(f1, f2, f3, f4, f5, f6, f7))\n    else:\n        print(max(a) * n)", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    if len(nums) > 3:\n        print(max(nums) * len(nums))\n    elif len(nums) == 2:\n        print(max(sum(nums), 2 * abs(nums[0] - nums[1])))\n    elif len(nums) == 3:\n        a = [sum(nums)]\n        a.append(3 * max(nums[0], nums[2], abs(nums[1] - nums[0]), abs(nums[1] - nums[2])))\n        print(max(a))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = sum(l)\n    if n == 2:\n        ans = max(ans, 2 * abs(l[0] - l[1]))\n    elif n == 3:\n        lx = [l[0], l[2], abs(l[0] - l[1]), abs(l[0] - l[2]), abs(l[1] - l[2])]\n        ans = max(ans, max(lx) * 3)\n    else:\n        ans = max(ans, max(l) * n)\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 2:\n        print(max(sum(a), 2 * abs(a[0] - a[1])))\n    elif n == 3:\n        if a[0] == a[1] == a[2]:\n            print(a[0] * 3)\n        elif a[0] == max(a) or a[-1] == max(a):\n            print(max(a) * 3)\n        else:\n            x = sum(a)\n            y = (a[1] - min(a[0], a[-1])) * 3\n            print(max(x, y, max(a[0], a[-1]) * 3))\n    else:\n        print(max(a) * n)", "for _ in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    if n == 2:\n        print(max(sum(li), 2 * abs(li[0] - li[1])))\n    elif n == 3:\n        print(max(sum(li), 3 * li[0], 3 * li[2], 3 * abs(li[0] - li[1]), 3 * abs(li[1] - li[2])))\n    else:\n        print(max(sum(li), n * max(li)))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 0:\n        print(0)\n        continue\n    if n == 1:\n        print(a[0])\n        continue\n    if n == 2:\n        print(max(a[0] + a[1], abs(a[0] - a[1]) * 2))\n        continue\n    if n == 3:\n        print(max(sum(a), a[0] * n, a[-1] * n, abs(a[0] - a[1]) * n, abs(a[-1] - a[1]) * n))\n        continue\n    print(max(a) * n)", "T = int(input())\nwhile T:\n    T -= 1\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    if n > 3:\n        print(n * max(a))\n    elif n == 2:\n        print(max(sum(a), n * abs(a[0] - a[1])))\n    elif n == 3:\n        print(max(sum(a), n * a[0], n * a[2], n * abs(a[0] - a[2]), n * abs(a[0] - a[1]), n * abs(a[1] - a[2])))", "import heapq\n\ndef simple_max(a):\n    return max(a) * len(a)\nfor _ in range(int(input())):\n    input()\n    a = list(map(int, input().split()))\n    if len(a) == 2:\n        print(max(sum(a), 2 * (max(a) - min(a))))\n        continue\n    if len(a) == 3:\n        if max(a) > a[0] and max(a) > a[2]:\n            print(max(sum(a), simple_max([a[1] - a[0], a[1] - a[0], a[2]]), simple_max([a[0], a[1] - a[2], a[1] - a[2]]), abs(a[0] - a[2])))\n        else:\n            print(simple_max(a))\n        continue\n    if len(a) > 3:\n        print(simple_max(a))\n        continue", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if n > 3:\n        print(max(a) * n)\n    elif n == 2:\n        print(max((sum(a), abs(a[0] - a[1]) * 2)))\n    else:\n        print(max((sum(a), a[0] * 3, a[2] * 3, abs(a[0] - a[1]) * 3, abs(a[1] - a[2]) * 3)))", "t = int(input())\nfor tes in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 2:\n        print(max(a[0] + a[1], abs(a[1] - a[0]) * 2))\n    elif n == 3:\n        print(max(a[0] + a[1] + a[2], a[0] * 3, a[2] * 3, max(abs(a[1] - a[0]), abs(a[2] - a[1])) * 3, abs(a[0] - a[1]) * 2 + a[2], abs(a[2] - a[1]) * 2 + a[0]))\n    else:\n        ans = 0\n        for i in range(n):\n            ans = max(ans, a[i] * n)\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n >= 4:\n        print(n * max(arr))\n        continue\n    if n == 2:\n        print(max(2 * abs(arr[0] - arr[1]), arr[0] + arr[1]))\n        continue\n    if n == 3:\n        (a1, a2, a3) = tuple(arr)\n        print(max(a1 + a2 + a3, 3 * a1, 3 * a3, 3 * abs(a1 - a2), 3 * abs(a2 - a3)))\n        continue", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    A = list(map(int, input().split()))\n    SUM = sum(A)\n    if n > 3:\n        print(max(A) * n)\n    elif n == 2:\n        print(max(sum(A), abs(A[0] - A[1]) * n))\n    elif n == 3:\n        SUM = max(SUM, A[2] + abs(A[0] - A[1]) * 2)\n        SUM = max(SUM, A[0] + abs(A[2] - A[1]) * 2)\n        SUM = max(SUM, abs(A[0] - A[2]) * 3)\n        SUM = max(SUM, abs(A[0] - A[1]) * 3)\n        SUM = max(SUM, abs(A[1] - A[2]) * 3)\n        SUM = max(SUM, A[0] * 3)\n        SUM = max(SUM, A[2] * 3)\n        print(SUM)\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 2:\n        print(max(l[0] + l[1], 2 * abs(l[0] - l[1])))\n    elif n == 3:\n        print(max([3 * l[0], 3 * l[2], 3 * abs(l[0] - l[1]), 3 * abs(l[1] - l[2]), sum(l)]))\n    else:\n        print(max(l) * n)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 2:\n        print(max(sum(l), 2 * abs(l[0] - l[1])))\n    elif n == 3:\n        a = max(l)\n        if l[0] == a or l[2] == a:\n            print(n * max(l))\n        else:\n            print(max(sum(l), 3 * l[0], 3 * l[2], 3 * abs(l[0] - l[1]), 3 * abs(l[1] - l[2])))\n    else:\n        print(n * max(l))", "a = int(input())\nfor _ in range(a):\n    b = int(input())\n    l = list(map(int, input().split()))\n    ans = sum(l)\n    if b == 2:\n        ans = max(ans, 2 * abs(l[0] - l[1]))\n    elif b == 3:\n        ll = [l[0], l[2], abs(l[0] - l[1]), abs(l[1] - l[2]), abs(l[0] - l[2])]\n        ans = max(ans, max(ll) * 3)\n    else:\n        ans = max(ans, max(l) * b)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = sum(l)\n    if n == 2:\n        ans = max(ans, 2 * abs(l[0] - l[1]))\n    elif n == 3:\n        lx = [l[0], l[2], abs(l[0] - l[1]), abs(l[1] - l[2]), abs(l[0] - l[2])]\n        ans = max(ans, max(lx) * 3)\n    else:\n        ans = max(ans, max(l) * n)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = sum(l)\n    if n == 2:\n        ans = max(ans, 2 * abs(l[0] - l[1]))\n    elif n == 3:\n        lx = [l[0], l[2], abs(l[0] - l[1]), abs(l[1] - l[2]), abs(l[0] - l[2])]\n        ans = max(ans, max(lx) * 3)\n    else:\n        ans = max(ans, max(l) * n)\n    print(ans)", "def solve(n, a):\n    if n == 1:\n        return a[0]\n    elif n == 2:\n        return max(a[0] + a[1], 2 * abs(a[1] - a[0]))\n    elif n == 3:\n        return max(a[0] + a[1] + a[2], a[0] * 3, a[2] * 3, 3 * abs(a[0] - a[1]), 3 * abs(a[2] - a[1]))\n    else:\n        return max(a) * len(a)\nfor _ in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    print(solve(n, li))", "from collections import defaultdict\n\ndef solve(aa):\n    n = len(aa)\n    if n == 1:\n        return sum(aa)\n    max_val = max(aa)\n    if n >= 4:\n        return n * max_val\n    if n == 2:\n        return max(sum(aa), 2 * abs(aa[1] - aa[0]))\n    if n == 3:\n        if aa[0] == max_val or aa[-1] == max_val:\n            return n * max_val\n        s1 = sum(aa)\n        s2 = 3 * max(abs(aa[0] - aa[1]), aa[2])\n        s3 = 3 * max(abs(aa[1] - aa[2]), aa[0])\n        s4 = 3 * abs(aa[0] - aa[2])\n        return max(s1, s2, s3, s4)\n    assert False\nn_tests = int(input())\nfor test_n in range(n_tests):\n    n = int(input())\n    aa = list(map(int, input().split()))\n    assert len(aa) == n\n    print(solve(aa))", "for tt in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    if n >= 4:\n        print(n * m)\n    elif n == 2:\n        print(max(a[0] + a[1], 2 * abs(a[0] - a[1])))\n    else:\n        print(max(3 * (a[1] - min(a)), sum(a), 3 * a[0], 3 * a[2]))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = sum(l)\n    if n == 2:\n        ans = max(ans, 2 * abs(l[0] - l[1]))\n    elif n == 3:\n        lx = [l[0], l[2], abs(l[0] - l[1]), abs(l[1] - l[2]), abs(l[0] - l[2])]\n        ans = max(ans, max(lx) * 3)\n    else:\n        ans = max(ans, max(l) * n)\n    print(ans)", "def ii(num=False):\n    i = input().split()\n    if num:\n        return int(i[0])\n    try:\n        return list(map(int, i))\n    except Exception:\n        return i\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\nfor _ in range(ii(1)):\n    (n, a) = (ii(1), ii())\n    if n == 2:\n        print(max(2 * abs(a[0] - a[1]), a[0] + a[1]))\n    elif n == 3:\n        print(max(a[0] + a[1] + a[2], 3 * a[0], 3 * a[2], 3 * abs(a[0] - a[1]), 3 * abs(a[1] - a[2])))\n    else:\n        print(n * max(a))\n    pass", "for y in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = 0\n    ind = 0\n    for i in range(len(a)):\n        if a[i] > m:\n            m = a[i]\n            ind = i\n    if n == 2:\n        print(max(2 * abs(a[1] - a[0]), a[1] + a[0]))\n    elif n == 3:\n        s = sorted(a)\n        if m == a[1] and s[2] != s[1]:\n            print(max(sum(a), 2 * (a[1] - a[0]) + a[2], 2 * (a[1] - a[2]) + a[0], (a[1] - a[0]) * 3, (a[1] - a[2]) * 3, 3 * a[0], 3 * a[2]))\n        else:\n            print(m * n)\n    else:\n        print(m * n)", "import math\n\nclass Solution:\n\n    def __init__(self) -> None:\n        pass\n\n    def read(self):\n        self.n = int(input())\n        self.arr = list(map(int, input().split()))\n\n    def solve(self):\n        if self.n == 2:\n            print(max(self.arr[0] + self.arr[1], abs(self.arr[0] - self.arr[1]) * 2))\n        elif self.n == 3:\n            print(max(self.arr[0] + self.arr[1] + self.arr[2], 3 * self.arr[0], 3 * self.arr[2], 3 * abs(self.arr[0] - self.arr[1]), 3 * abs(self.arr[2] - self.arr[1])))\n        else:\n            print(max(self.arr) * self.n)\ntest = int(input())\nfor _ in range(test):\n    testcase = Solution()\n    testcase.read()\n    testcase.solve()", "for kk in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    if n >= 4:\n        print(n * m)\n    elif n == 2:\n        print(max(a[0] + a[1], 2 * abs(a[0] - a[1])))\n    else:\n        print(max(3 * (a[1] - min(a)), sum(a), 3 * a[0], 3 * a[2]))", "def N():\n    return int(input())\n\ndef A():\n    return [int(x) for x in input().split()]\n\ndef S():\n    return input()\nfor _ in range(N()):\n    n = N()\n    if 'codeforces' == 28226329:\n        print('Tanmay')\n    a = A()\n    maxi = max(a)\n    s1 = sum(a)\n    if n == 3:\n        print(max(3 * max(abs(a[0] - a[2]), abs(a[1] - a[2]), abs(a[1] - a[0]), a[0], a[2]), s1))\n        continue\n    if n == 2:\n        print(max(s1, (maxi - min(a)) * 2))\n        continue\n    print(max(s1, n * maxi))", "for _ in range(int(input())):\n    n = int(input())\n    L = list(map(int, input().split()))\n    if n > 3:\n        print(n * max(L))\n    elif n == 1:\n        print(L[0])\n    elif n == 2:\n        a = sum(L)\n        diff = abs(L[0] - L[1])\n        b = 2 * diff\n        print(max(a, b))\n    else:\n        M = max(L)\n        i = L.index(M)\n        if i == 0 or i == 2 or L[-1] == M:\n            print(M * 3)\n        else:\n            print(max(sum(L), 3 * abs(L[1] - L[2]), 3 * abs(L[1] - L[0]), L[0] + 2 * abs(L[1] - L[2]), L[2] + 2 * abs(L[1] - L[0]), 3 * L[2], 3 * L[0]))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = sum(arr)\n    for i in range(n):\n        if i == 0:\n            if n == 2:\n                ans = max(ans, 2 * abs(arr[0] - arr[1]))\n            else:\n                ans = max(ans, arr[i] * n)\n        elif i == n - 1:\n            if n == 2:\n                ans = max(ans, 2 * abs(arr[0] - arr[1]))\n            else:\n                ans = max(ans, arr[i] * n)\n        elif n == 3:\n            op1 = abs(arr[0] - arr[i])\n            op1 *= n\n            op2 = abs(arr[i] - arr[-1])\n            op2 *= n\n            ans = max(ans, max(op1, op2))\n        else:\n            ans = max(ans, arr[i] * n)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    mx = max(arr)\n    mi = min(arr)\n    s = 0\n    for i in range(n):\n        s = s + arr[i]\n    res = s\n    val = 0\n    if n == 2:\n        res = max(2 * (mx - mi), res)\n    elif n == 3:\n        q = arr[0] * 3\n        w = arr[2] * 3\n        e = abs(arr[1] - arr[0]) * 3\n        r = abs(arr[1] - arr[2]) * 3\n        res = max(res, q, w, e, r)\n    elif n > 3:\n        res = max(res, mx * n)\n    print(res)", "from copy import copy\n\ndef operation(arr, i, j):\n    x = abs(arr[i] - arr[j])\n    for k in range(i, j + 1):\n        arr[k] = x\n    return arr\n\ndef solve(n, arr):\n    if n >= 4:\n        return max(arr) * n\n    ans0 = sum(arr)\n    if n == 2:\n        ans1 = sum(arr)\n        arr = operation(arr, 0, 1)\n        ans2 = sum(arr)\n        return max([ans1, ans2, ans0])\n    if n == 3:\n        if arr[0] == max(arr) or arr[2] == max(arr):\n            return max(arr) * n\n        arr2 = copy(arr)\n        arr = operation(arr, 0, 1)\n        ans1 = max(arr) * n\n        arr2 = operation(arr2, 1, 2)\n        ans2 = max(arr2) * n\n        return max([ans0, ans1, ans2])\n\ndef run(i):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    ans = solve(n, arr)\n    print(ans)\nfor i in range(int(input())):\n    run(i)"]