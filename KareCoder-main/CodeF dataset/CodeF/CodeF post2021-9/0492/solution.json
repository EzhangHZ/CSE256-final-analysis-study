["import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    n = int(inp())\n    (r1, c1, r2, c2, r3, c3) = map(int, inp().split())\n    if r1 == r2:\n        r = r1\n    elif r1 == r3:\n        r = r1\n    elif r2 == r3:\n        r = r2\n    if c1 == c2:\n        c = c1\n    elif c1 == c3:\n        c = c1\n    elif c2 == c3:\n        c = c2\n    (x, y) = map(int, inp().split())\n    if (r == 1 or r == n) and (c == 1 or c == n):\n        if x == r or y == c:\n            print('YES')\n        else:\n            print('NO')\n    elif (x - r) % 2 == 0 or (y - c) % 2 == 0:\n        print('YES')\n    else:\n        print('NO')\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "import sys\ninput = sys.stdin.readline\nfrom math import sqrt\nfor _ in range(int(input())):\n    n = int(input())\n    (r1, c1, r2, c2, r3, c3) = [int(i) for i in input().split()]\n    (x, y) = [int(i) for i in input().split()]\n    if r1 == r2 or r1 == r3:\n        r = r1\n    else:\n        r = r2\n    if c1 == c2 or c1 == c3:\n        c = c1\n    else:\n        c = c3\n    if r == 1 and c == 1:\n        if x == 1 or y == 1:\n            print('YES')\n        else:\n            print('NO')\n        continue\n    if r == n and c == n:\n        if x == n or y == n:\n            print('YES')\n        else:\n            print('NO')\n        continue\n    if r == 1 and c == n:\n        if x == 1 or y == n:\n            print('YES')\n        else:\n            print('NO')\n        continue\n    if r == n and c == 1:\n        if x == n or y == 1:\n            print('YES')\n        else:\n            print('NO')\n        continue\n    if x % 2 == r % 2 or y % 2 == c % 2:\n        print('YES')\n    else:\n        print('NO')", "import sys, math\n\ndef get_arr():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\nt = int(sys.stdin.readline())\nfor t2 in range(t):\n    n = int(sys.stdin.readline())\n    (r1, c1, r2, c2, r3, c3) = get_ints()\n    (x, y) = get_ints()\n    if r1 == r2:\n        row = r1\n    elif r1 == r3:\n        row = r1\n    else:\n        row = r2\n    if c1 == c2:\n        col = c1\n    elif c1 == c3:\n        col = c1\n    else:\n        col = c2\n    if row == x or col == y:\n        print('YES')\n        continue\n    if row == 1 and col == 1:\n        print('NO')\n        continue\n    elif row == 1 and col == n:\n        print('NO')\n        continue\n    elif row == n and col == n:\n        print('NO')\n        continue\n    elif row == n and col == 1:\n        print('NO')\n        continue\n    if abs(x - row) % 2 != 0 and abs(y - col) % 2 != 0:\n        print('NO')\n    else:\n        print('YES')", "data = [[int(input()), [int(q) for q in input().split()], [int(q) for q in input().split()]] for _ in range(int(input()))]\nfor q in data:\n    if q[1][0] == q[1][2]:\n        x = q[1][0]\n    else:\n        x = q[1][4]\n    if q[1][1] == q[1][3]:\n        y = q[1][1]\n    else:\n        y = q[1][5]\n    if (q[2][0] % 2 == x % 2 or q[2][1] % 2 == y % 2) and (not (x == 1 and y == 1)) and (not (x == 1 and y == q[0])) and (not (x == q[0] and y == 1)) and (not (x == q[0] and y == q[0])) or q[2][0] == x or q[2][1] == y:\n        print('YES')\n    else:\n        print('NO')", "def get_white(r1, r2, r3, r4, c1, c2, c3, c4):\n    if r4 != r1 and c4 != c1:\n        return (r1, c1)\n    if r4 != r2 and c4 != c2:\n        return (r2, c2)\n    return (r3, c3)\n\ndef is_stuck(white):\n    if white[0] in (1, n) and white[1] in (1, n):\n        return True\n    return False\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    (r1, c1, r2, c2, r3, c3) = map(int, input().split())\n    (x, y) = map(int, input().split())\n    r4 = r1 ^ r2 ^ r3\n    c4 = c1 ^ c2 ^ c3\n    white = get_white(r1, r2, r3, r4, c1, c2, c3, c4)\n    if is_stuck(white):\n        if x == white[0] or y == white[1]:\n            print('YES')\n        else:\n            print('NO')\n        continue\n    if (x - r4) % 2 == 0 and (y - c4) % 2 == 0:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    (r1, c1, r2, c2, r3, c3) = map(int, input().split())\n    (x, y) = map(int, input().split())\n    if (r1 + r2 + r3) % 2 == 0:\n        r_alone = 0\n    else:\n        r_alone = 1\n    if (c1 + c2 + c3) % 2 == 0:\n        c_alone = 0\n    else:\n        c_alone = 1\n    if x % 2 == r_alone and y % 2 == c_alone:\n        print('NO')\n    elif r1 + r2 + r3 == 4 and c1 + c2 + c3 == 4:\n        if x == 1 or y == 1:\n            print('YES')\n        else:\n            print('NO')\n    elif r1 + r2 + r3 == 4 and c1 + c2 + c3 == 3 * n - 1:\n        if x == 1 or y == n:\n            print('YES')\n        else:\n            print('NO')\n    elif r1 + r2 + r3 == 3 * n - 1 and c1 + c2 + c3 == 3 * n - 1:\n        if x == n or y == n:\n            print('YES')\n        else:\n            print('NO')\n    elif r1 + r2 + r3 == 3 * n - 1 and c1 + c2 + c3 == 4:\n        if x == n or y == 1:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('YES')", "for jdcnnfv in range(int(input())):\n    n = int(input())\n    a = input().split()\n    a = [int(i) for i in a]\n    (x, y) = input().split()\n    x = int(x)\n    y = int(y)\n    if a[0] == a[2] or a[0] == a[4]:\n        a1 = a[0]\n    else:\n        a1 = a[2]\n    if a[1] == a[3] or a[1] == a[5]:\n        a2 = a[1]\n    else:\n        a2 = a[3]\n    if (a1, a2) in [(1, 1), (1, n), (n, 1), (n, n)]:\n        if x == a1 or y == a2:\n            print('YES')\n        else:\n            print('NO')\n    elif (x % 2, y % 2) in [(a[0] % 2, a[1] % 2), (a[2] % 2, a[3] % 2), (a[4] % 2, a[5] % 2)]:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = input().split(' ')\n    a = [int(i) for i in a]\n    (x, y) = input().split(' ')\n    (x, y) = (int(x), int(y))\n    if a[0] == a[2] or a[0] == a[4]:\n        a1 = a[0]\n    else:\n        a1 = a[2]\n    if a[1] == a[3] or a[1] == a[5]:\n        a2 = a[1]\n    else:\n        a2 = a[3]\n    if (a1, a2) in [(1, 1), (1, n), (n, 1), (n, n)]:\n        if x == a1 or y == a2:\n            print('YES')\n        else:\n            print('NO')\n    elif (x % 2, y % 2) in [(a[0] % 2, a[1] % 2), (a[2] % 2, a[3] % 2), (a[4] % 2, a[5] % 2)]:\n        print('YES')\n    else:\n        print('NO')", "def findMid(x1, y1, x2, y2, x3, y3):\n    if x1 == x2 and y1 == y3 or (x1 == x3 and y1 == y2):\n        return (x1, y1)\n    if x2 == x1 and y2 == y3 or (x2 == x3 and y2 == y1):\n        return (x2, y2)\n    return (x3, y3)\nfor t in range(int(input())):\n    n = int(input())\n    (x1, y1, x2, y2, x3, y3) = list(map(int, input().split()))\n    (x, y) = map(int, input().split())\n    (xm, ym) = findMid(x1, y1, x2, y2, x3, y3)\n    if (xm, ym) in [(1, 1), (1, n), (n, 1), (n, n)]:\n        if x == xm or y == ym:\n            print('YES')\n        else:\n            print('NO')\n    elif x % 2 != xm % 2 and y % 2 != ym % 2:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lr = [int(ii) for ii in input().split()]\n    (l1, r1, l2, r2, l3, r3, l, r) = (lr[0], lr[1], lr[2], lr[3], lr[4], lr[5], 0, 0)\n    xy = [int(ii) for ii in input().split()]\n    (x, y) = (xy[0], xy[1])\n    if (l1 == l2 or r1 == r2) and (l1 == l3 or r1 == r3):\n        (l, r) = (l1, r1)\n    elif (l1 == l2 or r1 == r2) and (l2 == l3 or r2 == r3):\n        (l, r) = (l2, r2)\n    else:\n        (l, r) = (l3, r3)\n    if l == 1 and r == 1 or (l == 1 and r == n) or (l == n and r == 1) or (l == n and r == n):\n        if x == l or y == r:\n            print('YES')\n        else:\n            print('NO')\n        continue\n    if (x + l) % 2 == 1 and (y + r) % 2 == 1:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (num, (r1, c1, r2, c2, r3, c3), (x0, y0)) = (int(input()), map(int, input().split()), map(int, input().split()))\n    (r, c) = ((r1, r2, r3), (c1, c2, c3))\n    print(['NO', 'YES'][x0 in r and x0 in (1, num) or (y0 in c and y0 in (1, num))] if sum((x in (1, num) for x in r + c)) == 4 else ['YES', 'NO'][x0 % 2 + sum((x % 2 for x in r)) == 2 and y0 % 2 + sum((y % 2 for y in c)) == 2])", "def inp():\n    return int(input())\n\ndef strng():\n    return input().strip()\n\ndef jn(lst_1, l):\n    return lst_1.join(map(str, l))\n\ndef strl():\n    return list(input().strip())\n\ndef mul():\n    return map(int, input().strip().split())\n\ndef mulf():\n    return map(float, input().strip().split())\n\ndef seq():\n    return list(map(int, input().strip().split()))\n\ndef ceil(lst_1):\n    return int(lst_1) if lst_1 == int(lst_1) else int(lst_1) + 1\n\ndef ceildiv(lst_1, d):\n    return lst_1 // d if lst_1 % d == 0 else lst_1 // d + 1\nfor i in range(inp()):\n    n = inp()\n    (a1, b1, a2, b2, a3, b3) = mul()\n    (x, y) = mul()\n    lst_1 = sorted([a1, a2, a3])\n    lst_2 = sorted([b1, b2, b3])\n    if {lst_1[1], lst_2[1]} <= {1, n}:\n        print(['NO', 'YES'][x - lst_1[1] == 0 or y - lst_2[1] == 0])\n    else:\n        print(['NO', 'YES'][(x - lst_1[1]) % 2 == 0 or (y - lst_2[1]) % 2 == 0])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    (r1, c1, r2, c2, r3, c3) = map(int, input().split())\n    (x, y) = map(int, input().split())\n    if x == r1 and y == c1 or ((x == r2 and y == c2) and (x == r3 and y == c3)):\n        print('YES')\n        continue\n    parity = ((r1 + c1) % 2 + (r2 + c2) % 2 + (r3 + c3) % 2 + 1) % 2\n    r = (r1 + r2 + r3 + 1) // 3\n    c = (c1 + c2 + c3 + 1) // 3\n    if r == 1 and c == 1 or (r == n and c == 1) or (r == 1 and c == n) or (r == n and c == n):\n        if x == r or y == c:\n            print('YES')\n        else:\n            print('NO')\n        continue\n    if x % 2 == r % 2 or y % 2 == c % 2:\n        print('YES')\n        continue\n    if (x + y) % 2 == parity:\n        print('YES')\n        continue\n    print('NO')", "def unique(a):\n    for i in a:\n        if a.count(i) == 1:\n            return i\n\ndef non_unique(a):\n    for i in a:\n        if a.count(i) == 2:\n            return i\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    (x1, y1, x2, y2, x3, y3) = map(int, input().split())\n    (xc, yc) = (unique([x1, x2, x3]), unique([y1, y2, y3]))\n    (xz, yz) = (non_unique([x1, x2, x3]), non_unique([y1, y2, y3]))\n    (x, y) = map(int, input().split())\n    if xz in (1, n) and yz in (1, n) and (xc in (2, n - 1)) and (yc in (2, n - 1)):\n        if x == xz or y == yz:\n            print('YES')\n        else:\n            print('NO')\n    elif abs(x - xc) % 2 == 0 and abs(y - yc) % 2 == 0:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, (r1, c1, r2, c2, r3, c3), (x0, y0)) = (int(input()), map(int, input().split()), map(int, input().split()))\n    (r, c) = ((r1, r2, r3), (c1, c2, c3))\n    print(['NO', 'YES'][x0 in r and x0 in (1, n) or (y0 in c and y0 in (1, n))] if sum((x in (1, n) for x in r + c)) == 4 else ['YES', 'NO'][x0 % 2 + sum((x % 2 for x in r)) == 2 and y0 % 2 + sum((y % 2 for y in c)) == 2])", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    (a, b, c, d, e, f) = map(int, input().split())\n    x = [a % 2, c % 2, e % 2]\n    y = [b % 2, d % 2, f % 2]\n    (p, q) = map(int, input().split())\n    ok = False\n    for i in range(3):\n        if x[i] == p % 2 and y[i] == q % 2:\n            ok = True\n    pairs = [(a, b), (c, d), (e, f)]\n    pairs.sort()\n    if pairs[0] == (1, 1) and pairs[1] == (1, 2) and (pairs[2] == (2, 1)) and (p != 1) and (q != 1):\n        ok = False\n    if pairs[0] == (n - 1, n) and pairs[1] == (n, n - 1) and (pairs[2] == (n, n)) and (p != n) and (q != n):\n        ok = False\n    if pairs[0] == (1, n - 1) and pairs[1] == (1, n) and (pairs[2] == (2, n)) and (p != 1) and (q != n):\n        ok = False\n    if pairs[0] == (n - 1, 1) and pairs[1] == (n, 1) and (pairs[2] == (n, 2)) and (p != n) and (q != 1):\n        ok = False\n    print('YES' if ok else 'NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = input().split()\n    arr = [int(i) for i in arr]\n    ss = []\n    for i in range(3):\n        ss.append(arr[i * 2] % 2 * 2 + arr[i * 2 + 1] % 2)\n    (x, y) = input().split()\n    (x, y) = (int(x), int(y))\n    arr_sort = sorted(arr)\n    if arr_sort[3] == 1:\n        if x == 1 or y == 1:\n            print('YES')\n        else:\n            print('NO')\n    elif arr_sort[2] == n:\n        if x == n or y == n:\n            print('YES')\n        else:\n            print('NO')\n    elif arr_sort[1] == 1 and arr_sort[4] == n:\n        if min(arr[0], arr[2], arr[4]) == 1:\n            if x == 1 or y == n:\n                print('YES')\n            else:\n                print('NO')\n        elif x == n or y == 1:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        s = x % 2 * 2 + y % 2\n        if s in ss:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    (n, (r1, c1, r2, c2, r3, c3), (x0, y0)) = (int(input()), map(int, input().split()), map(int, input().split()))\n    (r, c) = ((r1, r2, r3), (c1, c2, c3))\n    print(['NO', 'YES'][x0 in r and x0 in (1, n) or (y0 in c and y0 in (1, n))] if sum((x in (1, n) for x in r + c)) == 4 else ['YES', 'NO'][x0 % 2 + sum((x % 2 for x in r)) == 2 and y0 % 2 + sum((y % 2 for y in c)) == 2])", "import math\nimport collections\nimport bisect\nimport heapq\nfrom collections import deque\nfrom math import sqrt, ceil, floor\n\ndef inp_arr():\n    return list(map(int, input().strip().split(' ')))\n\ndef inp_int():\n    return int(input())\n\ndef inp_str():\n    return input()\n\ndef solve():\n    (n,) = inp_arr()\n    (r1, c1, r2, c2, r3, c3) = inp_arr()\n    (x, y) = inp_arr()\n    r0 = (r1 + r2 + r3 - (r1 ^ r2 ^ r3)) // 2\n    c0 = (c1 + c2 + c3 - (c1 ^ c2 ^ c3)) // 2\n    corners = [[1, 1], [1, n], [n, n], [n, 1]]\n    if [r0, c0] in corners:\n        if x == r0 or y == c0:\n            print('YES')\n        else:\n            print('NO')\n        return\n\n    def check(x1, y1, x2, y2):\n        diff1 = abs(x1 - x2)\n        diff2 = abs(y1 - y2)\n        if diff1 % 2 == 0 and diff2 % 2 == 0:\n            return True\n        return False\n    if check(r1, c1, x, y) or check(r2, c2, x, y) or check(r3, c3, x, y):\n        print('YES')\n        return\n    print('NO')\ntt = inp_int()\nfor t in range(tt):\n    solve()", "for _ in range(int(input())):\n    (n, (r1, c1, r2, c2, r3, c3), (x0, y0)) = (int(input()), map(int, input().split()), map(int, input().split()))\n    (r, c) = ((r1, r2, r3), (c1, c2, c3))\n    print(['NO', 'YES'][x0 in r and x0 in (1, n) or (y0 in c and y0 in (1, n))] if sum((x in (1, n) for x in r + c)) == 4 else ['YES', 'NO'][x0 % 2 + sum((x % 2 for x in r)) == 2 and y0 % 2 + sum((y % 2 for y in c)) == 2])", "import sys, os\nif os.getlogin() == 'arun':\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nfrom collections import defaultdict\nfrom math import comb\nimport math\nt = int(input())\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\nfor _ in range(t):\n    n = int(input())\n    lt = list(map(int, input().split()))\n    d1 = defaultdict(lambda : 0)\n    d2 = defaultdict(lambda : 0)\n    for i in range(0, 6, 2):\n        d1[lt[i]] += 1\n        d2[lt[i + 1]] += 1\n    x = 0\n    for i in d1.keys():\n        if d1[i] == 2:\n            x = i\n    y = 0\n    for i in d2.keys():\n        if d2[i] == 2:\n            y = i\n    (x2, y2) = map(int, input().split())\n    if (x, y) not in [(1, 1), (n, n), (1, n), (n, 1)]:\n        if (x2 - x) % 2 == 0 or (y2 - y) % 2 == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif x2 == x or y2 == y:\n        print('YES')\n    else:\n        print('NO')", "def f(s):\n    for i in range(3):\n        if s[i - 1][0] != s[i - 2][0] and s[i - 1][1] != s[i - 2][1]:\n            return [s[i], s[i - 1], s[i - 2]]\nfor _ in range(int(input())):\n    n = int(input())\n    tmp = list(map(int, input().split()))\n    s = f([(tmp[0], tmp[1]), (tmp[2], tmp[3]), (tmp[4], tmp[5])])\n    (x, y) = map(int, input().split())\n    ans = ''\n    if s[0] == (1, 1):\n        if x == 1 or y == 1:\n            ans = 'YES'\n        else:\n            ans = 'NO'\n    elif s[0] == (n, 1):\n        if x == n or y == 1:\n            ans = 'YES'\n        else:\n            ans = 'NO'\n    elif s[0] == (1, n):\n        if x == 1 or y == n:\n            ans = 'YES'\n        else:\n            ans = 'NO'\n    elif s[0] == (n, n):\n        if x == n or y == n:\n            ans = 'YES'\n        else:\n            ans = 'NO'\n    else:\n        for i in range(3):\n            s[i] = (s[i][0] % 2, s[i][1] % 2)\n        s.append((x % 2, y % 2))\n        if len(set(s)) == 3:\n            ans = 'YES'\n        else:\n            ans = 'NO'\n    print(ans)", "from math import ceil, floor, gcd, exp, log\nfrom functools import lru_cache, reduce\nfrom itertools import combinations, permutations, product, combinations_with_replacement, count, cycle, tee, islice\nfrom collections import Counter\nfor t in range(int(input())):\n    n = int(input())\n    c = [int(a) for a in input().split()]\n    t = [int(a) for a in input().split()]\n    k = Counter([c[0], c[2], c[4]])\n    s = Counter([c[1], c[3], c[5]])\n    sss = 0\n    for (s, ss) in s.items():\n        if ss == 2:\n            sss = s\n    kkk = 0\n    for (s, ss) in k.items():\n        if ss == 2:\n            kkk = s\n    if kkk == 1 and sss == 1 or (kkk == 1 and sss == n) or (kkk == n and sss == n) or (kkk == n and sss == 1):\n        if t[0] == kkk or t[1] == sss:\n            print('YES')\n        else:\n            print('NO')\n        continue\n    if t[0] % 2 == kkk % 2 or t[1] % 2 == sss % 2:\n        print('YES')\n    else:\n        print('NO')", "import sys, os\nif os.getlogin() == 'arun':\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nfrom collections import defaultdict\nfrom math import comb\nimport math\nt = int(input())\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\nfor _ in range(t):\n    n = int(input())\n    lt = list(map(int, input().split()))\n    d1 = defaultdict(lambda : 0)\n    d2 = defaultdict(lambda : 0)\n    for i in range(0, 6, 2):\n        d1[lt[i]] += 1\n        d2[lt[i + 1]] += 1\n    x = 0\n    for i in d1.keys():\n        if d1[i] == 2:\n            x = i\n    y = 0\n    for i in d2.keys():\n        if d2[i] == 2:\n            y = i\n    (x2, y2) = map(int, input().split())\n    if (x, y) not in [(1, 1), (n, n), (1, n), (n, 1)]:\n        if (x2 - x) % 2 == 0 or (y2 - y) % 2 == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif x2 == x or y2 == y:\n        print('YES')\n    else:\n        print('NO')"]