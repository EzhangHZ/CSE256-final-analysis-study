["import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    n = int(inp())\n    a = list(map(int, inp().split()))\n    m = 1\n    M = n\n    i = 0\n    j = n - 1\n    while i <= j:\n        if a[i] == m:\n            i += 1\n            m += 1\n        elif a[i] == M:\n            i += 1\n            M -= 1\n        elif a[j] == m:\n            j -= 1\n            m += 1\n        elif a[j] == M:\n            j -= 1\n            M -= 1\n        else:\n            break\n    if i < j:\n        print(i + 1, j + 1)\n    else:\n        print(-1)\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "import sys\ninput = sys.stdin.readline\n\ndef solver():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (mn, mx) = (1, n)\n    (i, j) = (0, n - 1)\n    (prev_i, prev_j) = (None, None)\n    while i < j:\n        (prev_i, prev_j) = (i, j)\n        if arr[i] == mn:\n            i += 1\n            mn += 1\n        elif arr[i] == mx:\n            i += 1\n            mx -= 1\n        if arr[j] == mn:\n            j -= 1\n            mn += 1\n        elif arr[j] == mx:\n            j -= 1\n            mx -= 1\n        if prev_i == i and prev_j == j:\n            print(i + 1, j + 1)\n            return\n    print(-1)\nT = int(input())\nfor _ in range(T):\n    solver()", "def solution(n, a: list):\n    (a_min, a_max) = (1, n)\n    (left, right) = (0, n - 1)\n    flag = True\n    while flag:\n        flag = False\n        while left < right:\n            if a[left] == a_min:\n                a_min += 1\n                left += 1\n                flag = True\n                continue\n            if a[left] == a_max:\n                a_max -= 1\n                left += 1\n                flag = True\n                continue\n            break\n        while left < right:\n            if a[right] == a_min:\n                a_min += 1\n                right -= 1\n                flag = True\n                continue\n            if a[right] == a_max:\n                a_max -= 1\n                right -= 1\n                flag = True\n                continue\n            break\n    if left >= right:\n        print(-1)\n    else:\n        print(left + 1, right + 1)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    solution(n, a)", "def solver():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    mn = 1\n    mx = n\n    i = 0\n    j = n - 1\n    prev_i = 0\n    prev_j = 0\n    while i < j:\n        prev_i = i\n        prev_j = j\n        if arr[i] == mn:\n            i += 1\n            mn += 1\n        elif arr[i] == mx:\n            i += 1\n            mx -= 1\n        if arr[j] == mn:\n            j -= 1\n            mn += 1\n        elif arr[j] == mx:\n            j -= 1\n            mx -= 1\n        if prev_i == i and prev_j == j:\n            print(i + 1, j + 1)\n            return\n    print(-1)\n    return\nt = int(input())\nfor _ in range(t):\n    solver()", "def solve(a):\n    n = len(a)\n    c_min = 1\n    c_max = n\n    l = 0\n    r = n - 1\n    while l <= r:\n        if c_min == a[l]:\n            c_min += 1\n            l += 1\n        elif c_max == a[l]:\n            c_max -= 1\n            l += 1\n        elif c_min == a[r]:\n            c_min += 1\n            r -= 1\n        elif c_max == a[r]:\n            c_max -= 1\n            r -= 1\n        else:\n            return [l, r]\n    return []\nt = int(input())\nans = []\nfor ti in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    ans.append(solve(a))\nfor a in ans:\n    if a:\n        print(' '.join([str(x + 1) for x in a]))\n    else:\n        print(-1)", "def helper(arr):\n    (maxi, mini) = (len(arr), 1)\n    (l, r) = (0, len(arr) - 1)\n    while l < r:\n        y = False\n        if arr[l] == maxi or arr[l] == mini:\n            y = True\n            if arr[l] == maxi:\n                maxi -= 1\n            elif arr[l] == mini:\n                mini += 1\n            l += 1\n        elif arr[r] == maxi or arr[r] == mini:\n            y = True\n            if arr[r] == maxi:\n                maxi -= 1\n                r -= 1\n            elif arr[r] == mini:\n                mini += 1\n                r -= 1\n        if not y:\n            return str(l + 1) + ' ' + str(r + 1)\n    return '-1'\nfor i in range(int(input())):\n    n = int(input())\n    print(helper(list(map(int, input().split()))))", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    (l, r) = (0, n - 1)\n    (mn, mx) = (1, n)\n    while l <= r:\n        if a[l] == mn:\n            l += 1\n            mn += 1\n        elif a[l] == mx:\n            l += 1\n            mx -= 1\n        elif a[r] == mn:\n            r -= 1\n            mn += 1\n        elif a[r] == mx:\n            r -= 1\n            mx -= 1\n        else:\n            break\n    if l <= r:\n        print(l + 1, r + 1)\n    else:\n        print(-1)\nt = int(input())\nfor _ in range(t):\n    solve()", "def solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    left = 0\n    right = n - 1\n    mn = 1\n    mx = n\n    while left <= right:\n        if arr[left] == mn:\n            left += 1\n            mn += 1\n        elif arr[left] == mx:\n            left += 1\n            mx -= 1\n        elif arr[right] == mn:\n            right -= 1\n            mn += 1\n        elif arr[right] == mx:\n            right -= 1\n            mx -= 1\n        else:\n            break\n    if left <= right:\n        print(left + 1, right + 1)\n        return\n    else:\n        print(-1)\n        return\nt = int(input())\nwhile t:\n    solve()\n    t -= 1", "from collections import deque\n\ndef getint():\n    return int(input())\n\ndef getfloat():\n    return float(input())\n\ndef getints():\n    return list(map(int, input().split()))\n\ndef getfloats():\n    return list(map(float, input().split()))\n\ndef answer():\n    n = getint()\n    p = getints()\n    l = 0\n    r = n - 1\n    nowmin = 1\n    nowmax = n\n    while l < r:\n        if nowmin == p[l]:\n            l += 1\n            nowmin += 1\n        elif nowmin == p[r]:\n            r -= 1\n            nowmin += 1\n        elif nowmax == p[l]:\n            l += 1\n            nowmax -= 1\n        elif nowmax == p[r]:\n            r -= 1\n            nowmax -= 1\n        else:\n            break\n    if l == r:\n        print(-1)\n    else:\n        print(l + 1, r + 1)\nT = getint()\nfor i in range(T):\n    answer()", "def ankit():\n    n = int(input())\n    essd_ar = list(map(int, input().strip().split()))\n    uvi = 0\n    uvvj = 0\n    minimun = 1\n    maximum = n\n    xx = 0\n    yy = n - 1\n    while xx < yy:\n        uvi = xx\n        uvvj = yy\n        if essd_ar[xx] == minimun:\n            xx += 1\n            minimun += 1\n        elif essd_ar[xx] == maximum:\n            xx += 1\n            maximum -= 1\n        if essd_ar[yy] == minimun:\n            yy -= 1\n            minimun += 1\n        elif essd_ar[yy] == maximum:\n            yy -= 1\n            maximum -= 1\n        if uvi == xx and uvvj == yy:\n            print(xx + 1, yy + 1)\n            return\n    print(-1)\n    return\nfor _ in range(int(input())):\n    ankit()", "def main():\n    t = int(input())\n    for _ in range(t):\n        res = alg()\n        print(res)\n\ndef alg():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    l = 0\n    r = n - 1\n    curMin = 1\n    curMax = n\n    while r - l > 2:\n        if a[l] == curMin:\n            curMin += 1\n            l += 1\n        elif a[r] == curMin:\n            curMin += 1\n            r -= 1\n        elif a[l] == curMax:\n            curMax -= 1\n            l += 1\n        elif a[r] == curMax:\n            curMax -= 1\n            r -= 1\n        else:\n            break\n    if r < 0 or l >= n or r - l < 3:\n        res = -1\n    else:\n        res = str(l + 1) + ' ' + str(r + 1)\n    return res\nmain()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    i = 0\n    j = n - 1\n    mini = 1\n    maxm = n\n    flg = 0\n    while i < j:\n        if lst[i] == mini:\n            mini = mini + 1\n            i = i + 1\n        elif lst[i] == maxm:\n            maxm = maxm - 1\n            i = i + 1\n        elif lst[j] == mini:\n            mini = mini + 1\n            j = j - 1\n        elif lst[j] == maxm:\n            maxm = maxm - 1\n            j = j - 1\n        else:\n            flg = 1\n            break\n    if flg == 0:\n        print(-1)\n    else:\n        print(i + 1, ' ', j + 1)", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    (l, r) = (0, n - 1)\n    (minx, maxn) = (1, n)\n    while l <= r:\n        if a[l] == minx:\n            l += 1\n            minx += 1\n        elif a[l] == maxn:\n            l += 1\n            maxn -= 1\n        elif a[r] == minx:\n            r -= 1\n            minx += 1\n        elif a[r] == maxn:\n            r -= 1\n            maxn -= 1\n        else:\n            break\n    if l > r:\n        print(-1)\n    else:\n        print(l + 1, r + 1)\nt = int(input())\nwhile t:\n    t -= 1\n    solve()", "def helper(arr):\n    (l, r) = (0, len(arr) - 1)\n    (mn, mx) = (1, len(arr))\n    while l < r:\n        y = False\n        if arr[l] == mn or arr[l] == mx:\n            y = True\n            if arr[l] == mn:\n                mn += 1\n            elif arr[l] == mx:\n                mx -= 1\n            l += 1\n        if arr[r] == mn or arr[r] == mx:\n            y = True\n            if arr[r] == mn:\n                mn += 1\n            elif arr[r] == mx:\n                mx -= 1\n            r -= 1\n        if not y:\n            return str(l + 1) + ' ' + str(r + 1)\n    return '-1'\nfor i in range(int(input())):\n    n = int(input())\n    res = helper(list(map(int, input().split())))\n    print(res)", "t = int(input())\nfor j in range(0, t):\n    c = int(input())\n    a = list(map(int, input().split()))\n    s = 1\n    t = c\n    indexi = 0\n    indexii = c - 1\n    f = 0\n    for i in range(0, c - 3):\n        if a[indexi] == s:\n            indexi = indexi + 1\n            s = s + 1\n        elif a[indexii] == s:\n            s = s + 1\n            indexii = indexii - 1\n        elif a[indexi] == t:\n            indexi = indexi + 1\n            t = t - 1\n        elif a[indexii] == t:\n            indexii = indexii - 1\n            t = t - 1\n        else:\n            f = 1\n            print(indexi + 1, indexii + 1)\n            break\n    if f == 0:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    min = 1\n    max = n\n    l = 0\n    r = n - 1\n    while l != r:\n        if arr[l] == max:\n            l += 1\n            max -= 1\n        elif arr[l] == min:\n            l += 1\n            min += 1\n        elif arr[r] == max:\n            r -= 1\n            max -= 1\n        elif arr[r] == min:\n            r -= 1\n            min += 1\n        else:\n            break\n    if l == r:\n        print(-1)\n    else:\n        print(l + 1, r + 1)", "def solve(n, nums):\n    (l, r) = (1, n)\n    (i, j) = (0, n - 1)\n    while i <= j and j < n:\n        if nums[i] not in (l, r) and nums[j] not in (l, r):\n            break\n        if nums[i] == l:\n            l += 1\n            i += 1\n        elif nums[i] == r:\n            r -= 1\n            i += 1\n        if nums[j] == l:\n            l += 1\n            j -= 1\n        elif nums[j] == r:\n            r -= 1\n            j -= 1\n    if i <= j:\n        return f'{i + 1} {j + 1}'\n    return -1\nT = int(input())\nfor t in range(T):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    print(solve(n, nums))", "def validate(c, l, r):\n    mn = 1\n    mx = r + 1\n    while l != r:\n        if c[l] == mn:\n            l += 1\n            mn += 1\n            continue\n        if c[l] == mx:\n            l += 1\n            mx -= 1\n            continue\n        if c[r] == mn:\n            r -= 1\n            mn += 1\n            continue\n        if c[r] == mx:\n            r -= 1\n            mx -= 1\n            continue\n        print(str(l + 1) + ' ' + str(r + 1))\n        return\n    print('-1')\n    return\nt = int(input())\nfor _ in range(t):\n    u = int(input())\n    c = [int(x) for x in input().split()]\n    validate(c, 0, len(c) - 1)", "for _ in range(int(input())):\n    (mn, mx) = (1, int(input()))\n    a = [int(i) for i in input().split()]\n    (l, r) = (0, mx - 1)\n    pas = False\n    while r - l >= 3:\n        if a[l] == mn:\n            mn += 1\n            l += 1\n        elif a[l] == mx:\n            mx -= 1\n            l += 1\n        elif a[r] == mn:\n            mn += 1\n            r -= 1\n        elif a[r] == mx:\n            mx -= 1\n            r -= 1\n        else:\n            pas = True\n            break\n    if pas:\n        print(l + 1, r + 1)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    a = [*map(int, input().split())]\n    (mn, mx) = (1, n)\n    (l, r) = (0, n - 1)\n    while l < r:\n        if a[l] == mn:\n            l += 1\n            mn += 1\n        elif a[l] == mx:\n            l += 1\n            mx -= 1\n        elif a[r] == mn:\n            r -= 1\n            mn += 1\n        elif a[r] == mx:\n            r -= 1\n            mx -= 1\n        else:\n            break\n    print(l + 1, r + 1) if l < r else print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (mn, mx) = (1, n)\n    (l, r) = (0, n - 1)\n    while l < r:\n        if a[l] == mn:\n            l += 1\n            mn += 1\n        elif a[l] == mx:\n            l += 1\n            mx -= 1\n        elif a[r] == mn:\n            r -= 1\n            mn += 1\n        elif a[r] == mx:\n            r -= 1\n            mx -= 1\n        else:\n            break\n    if not l < r:\n        print(-1)\n    else:\n        print(l + 1, r + 1)", "from typing import List\n\ndef solve() -> None:\n    n = int(input())\n    a = list(map(int, input().split()))\n    (l, r) = (0, n - 1)\n    (mn, mx) = (1, n)\n    while l <= r:\n        if a[l] == mn:\n            l += 1\n            mn += 1\n        elif a[l] == mx:\n            l += 1\n            mx -= 1\n        elif a[r] == mn:\n            r -= 1\n            mn += 1\n        elif a[r] == mx:\n            r -= 1\n            mx -= 1\n        else:\n            break\n    if l <= r:\n        print(l + 1, r + 1)\n    else:\n        print(-1)\nq = int(input())\nfor _ in range(q):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    mine = 1\n    maxe = n\n    (l, r) = (0, n - 1)\n    while l < r:\n        if nums[l] == mine:\n            l += 1\n            mine += 1\n        elif nums[l] == maxe:\n            l += 1\n            maxe -= 1\n        elif nums[r] == maxe:\n            r -= 1\n            maxe -= 1\n        elif nums[r] == mine:\n            r -= 1\n            mine += 1\n        else:\n            break\n    if l >= r:\n        print(-1)\n    else:\n        print(l + 1, r + 1)", "t = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 0\n    j = n - 1\n    k = 1\n    l = n\n    while i <= j:\n        if a[i] == k:\n            k += 1\n            i += 1\n        elif a[j] == k:\n            j -= 1\n            k += 1\n        elif a[i] == l:\n            l -= 1\n            i += 1\n        elif a[j] == l:\n            l -= 1\n            j -= 1\n        else:\n            print(i + 1, j + 1)\n            break\n    else:\n        print(-1)\n    t -= 1", "test_case = int(input())\nfor test in range(test_case):\n    n = int(input())\n    A = list(map(int, input().split()))\n    Max = n\n    Min = 1\n    i = 0\n    j = n - 1\n    T = True\n    while i < j:\n        a = i\n        b = j\n        if A[i] == Min:\n            i += 1\n            Min += 1\n        elif A[i] == Max:\n            i += 1\n            Max -= 1\n        if A[j] == Min:\n            j -= 1\n            Min += 1\n        elif A[j] == Max:\n            j -= 1\n            Max -= 1\n        if a == i and b == j:\n            print(i + 1, j + 1)\n            T = False\n            break\n    if T:\n        print(-1)", "def f(le, lst):\n    min = 1\n    max = le\n    star = 0\n    end = le - 1\n    while star < end:\n        if lst[star] == min:\n            min = min + 1\n            star = star + 1\n        elif lst[star] == max:\n            max = max - 1\n            star = star + 1\n        elif lst[end] == min:\n            min = min + 1\n            end = end - 1\n        elif lst[end] == max:\n            max = max - 1\n            end = end - 1\n        else:\n            break\n    if end == star:\n        print(-1)\n    else:\n        print(star + 1, end + 1)\nfor t in range(int(input())):\n    le = int(input())\n    lst = list(map(int, input().split(' ')))\n    f(le, lst)", "import heapq\nfrom collections import *\nimport math\n\ndef lcm(a, b):\n    return a * b // math.gcd(a, b)\n\ndef factorial(n):\n    fact = 1\n    for i in range(1, n + 1):\n        fact = fact * i\n        fact %= 1000000007\n    return fact\n\ndef primeFactors(n):\n    ans = []\n    d = defaultdict(int)\n    while n % 2 == 0:\n        d[2] += 1\n        n = n / 2\n    for i in range(3, int(math.sqrt(n)) + 1, 2):\n        while n % i == 0:\n            d[i] += 1\n            n = n / i\n    if n > 2:\n        d[n] += 1\n    return d\n\ndef Divisors(n):\n    i = 1\n    ans = []\n    while i <= math.sqrt(n):\n        if n % i == 0:\n            if n / i == i:\n                ans.append(i)\n            else:\n                ans.append(i)\n                ans.append(n // i)\n        i = i + 1\n    return ans\n\ndef solve():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    i = 0\n    j = n - 1\n    mini = 1\n    maxi = n\n    while True:\n        if i == j:\n            print(-1)\n            break\n        if a[i] == mini or a[i] == maxi:\n            if a[i] == mini:\n                mini += 1\n            else:\n                maxi -= 1\n            i += 1\n        elif a[j] == mini or a[j] == maxi:\n            if a[j] == mini:\n                mini += 1\n            else:\n                maxi -= 1\n            j -= 1\n        else:\n            print(i + 1, j + 1)\n            break\nt = int(input())\nfor _ in range(t):\n    solve()", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = 0\n    r = n - 1\n    L = 1\n    R = n\n    while l <= r:\n        if a[l] == L:\n            l += 1\n            L += 1\n            continue\n        if a[r] == R:\n            r -= 1\n            R -= 1\n            continue\n        if a[l] == R:\n            l += 1\n            R -= 1\n            continue\n        if a[r] == L:\n            r -= 1\n            L += 1\n            continue\n        print(l + 1, r + 1)\n        break\n    if l > r:\n        print(-1)", "import sys\nR = lambda : map(int, next(sys.stdin).split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n,) = R()\n    (*a,) = R()\n    (mn, mx) = (1, n)\n    (l, r) = (0, n - 1)\n    while l < r:\n        if a[l] == mn:\n            l += 1\n            mn += 1\n        elif a[l] == mx:\n            l += 1\n            mx -= 1\n        elif a[r] == mn:\n            r -= 1\n            mn += 1\n        elif a[r] == mx:\n            r -= 1\n            mx -= 1\n        else:\n            break\n    print(l + 1, r + 1) if l < r else print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    l = 0\n    r = n - 1\n    mn = 1\n    mx = n\n    while l <= r:\n        if arr[l] == mx:\n            mx -= 1\n            l += 1\n        elif arr[l] == mn:\n            mn += 1\n            l += 1\n        elif arr[r] == mx:\n            mx -= 1\n            r -= 1\n        elif arr[r] == mn:\n            mn += 1\n            r -= 1\n        else:\n            break\n    print(f'{l + 1} {r + 1}' if l <= r else '-1')", "x = int(input())\nfor i in range(x):\n    n = int(input())\n    test = list(map(int, input().split()))\n    low = 1\n    high = n\n    l = 0\n    r = n - 1\n    while l < r:\n        if test[l] == low:\n            l += 1\n            low += 1\n        elif test[r] == high:\n            r -= 1\n            high -= 1\n        elif test[l] == high:\n            high -= 1\n            l += 1\n        elif test[r] == low:\n            low += 1\n            r -= 1\n        else:\n            break\n    if l == r and test[l] == low:\n        print(-1)\n    else:\n        print(f'{l + 1} {r + 1}')", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    (l, r) = (0, n - 1)\n    (mi, ma) = (1, n)\n    while l <= r:\n        if lst[l] == mi:\n            l += 1\n            mi += 1\n        elif lst[l] == ma:\n            l += 1\n            ma -= 1\n        elif lst[r] == mi:\n            r -= 1\n            mi += 1\n        elif lst[r] == ma:\n            r -= 1\n            ma -= 1\n        else:\n            break\n    print(*((l + 1, r + 1) if l <= r else (-1,)))", "import functools\nimport itertools\nimport sys\nfrom collections import defaultdict\n\ndef solution():\n    n = int(input())\n    data = list(map(int, input().split()))\n    d = dict()\n    for (idx, el) in enumerate(data):\n        d[el] = idx + 1\n    minimum = 1\n    maximum = n\n    left = 1\n    right = n\n    while left != right:\n        flag_left = False\n        flag_right = False\n        if d[minimum] == left:\n            minimum += 1\n            left += 1\n        elif d[minimum] == right:\n            minimum += 1\n            right -= 1\n        else:\n            flag_left = True\n        if left == right:\n            break\n        if d[maximum] == left:\n            maximum -= 1\n            left += 1\n        elif d[maximum] == right:\n            maximum -= 1\n            right -= 1\n        else:\n            flag_right = True\n        if flag_left and flag_right:\n            break\n    if left == right:\n        print(-1)\n    else:\n        print(left, right)\nt = int(input())\nfor _ in range(t):\n    solution()", "for _ in range(int(input())):\n    n = int(input())\n    p = [0]\n    pt = [int(i) for i in input().split()]\n    p = p + pt\n    (mx, mn) = (n, 1)\n    (i, j) = (1, n)\n    while i < j:\n        if p[i] == mx:\n            mx -= 1\n            i += 1\n        elif p[i] == mn:\n            mn += 1\n            i += 1\n        elif p[j] == mx:\n            mx -= 1\n            j -= 1\n        elif p[j] == mn:\n            mn += 1\n            j -= 1\n        else:\n            break\n    if j - i <= 1:\n        print(-1)\n    else:\n        print(*[i, j])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(-1)\n        continue\n    (maxx, minn) = (n, 1)\n    (p, q) = (0, n - 1)\n    flag = 1\n    while p < q and flag:\n        flag = 0\n        if a[p] == maxx or a[p] == minn:\n            if a[p] == maxx:\n                maxx -= 1\n            elif a[p] == minn:\n                minn += 1\n            p += 1\n            flag = 1\n        if a[q] == maxx or a[q] == minn:\n            if a[q] == maxx:\n                maxx -= 1\n            elif a[q] == minn:\n                minn += 1\n            q -= 1\n            flag = 1\n    if p >= q:\n        print(-1)\n    else:\n        print(p + 1, q + 1)", "t = int(input())\nwhile t:\n    n = int(input())\n    l = list(map(int, input().split()))\n    (left, right) = (1, n)\n    (i, j) = (0, n - 1)\n    flag = 0\n    while i <= j:\n        if l[i] == left or l[i] == right or l[j] == left or (l[j] == right):\n            if l[i] == left:\n                i += 1\n                left += 1\n            elif l[i] == right:\n                i += 1\n                right -= 1\n            if l[j] == left:\n                j -= 1\n                left += 1\n            elif l[j] == right:\n                j -= 1\n                right -= 1\n        else:\n            flag = 1\n            print(i + 1, j + 1)\n            break\n    if flag == 0:\n        print(-1)\n    t -= 1", "for _ in range(int(input().strip())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = 0\n    r = n - 1\n    res = -1\n    mn = 1\n    mx = n\n    while l < r:\n        if a[l] == mn:\n            l += 1\n            mn += 1\n        elif a[l] == mx:\n            l += 1\n            mx -= 1\n        elif a[r] == mn:\n            r -= 1\n            mn += 1\n        elif a[r] == mx:\n            r -= 1\n            mx -= 1\n        else:\n            res = [l + 1, r + 1]\n            break\n    if res == -1:\n        print(-1)\n    else:\n        print(*res)", "from math import *\nfor z in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = 1\n    q = n\n    i = 0\n    j = n - 1\n    f = 0\n    while i < n and j > -1:\n        if a[i] == p:\n            i += 1\n            p += 1\n        elif a[i] == q:\n            q -= 1\n            i += 1\n        elif a[j] == p:\n            j -= 1\n            p += 1\n        elif a[j] == q:\n            j -= 1\n            q -= 1\n        else:\n            f = 1\n            break\n    if f == 0:\n        print(-1)\n    else:\n        print(i + 1, j + 1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    min = 1\n    max = n\n    i = 0\n    j = n - 1\n    xi = None\n    xj = None\n    while i < j:\n        xi = i\n        xj = j\n        if arr[i] == min:\n            i += 1\n            min += 1\n        elif arr[i] == max:\n            i += 1\n            max -= 1\n        if arr[j] == min:\n            j -= 1\n            min += 1\n        elif arr[j] == max:\n            j -= 1\n            max -= 1\n        if xi == i and xj == j:\n            print(i + 1, j + 1)\n            break\n    else:\n        print(-1)", "def print_search_dora(arr, n):\n    first = 1\n    last = n\n    j = n - 1\n    i = 0\n    while i < j:\n        if arr[i] == first:\n            first += 1\n            i += 1\n        elif arr[j] == first:\n            first += 1\n            j = j - 1\n        elif arr[j] == last:\n            last -= 1\n            j = j - 1\n        elif arr[i] == last:\n            last -= 1\n            i = i + 1\n        else:\n            print(i + 1, j + 1)\n            return\n    print(-1)\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        print_search_dora(arr, n)\nmain()", "T = int(input())\nfor t in range(T):\n    N = int(input())\n    arr = [int(k) for k in input().split()]\n    min_sofar = 1\n    max_sofar = N\n    l = 0\n    r = N - 1\n    while l < r:\n        if arr[l] == min_sofar:\n            min_sofar += 1\n            l += 1\n        elif arr[l] == max_sofar:\n            max_sofar -= 1\n            l += 1\n        elif arr[r] == min_sofar:\n            min_sofar += 1\n            r -= 1\n        elif arr[r] == max_sofar:\n            max_sofar -= 1\n            r -= 1\n        else:\n            break\n    if l == r:\n        print(-1)\n    else:\n        print(l + 1, r + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mn = 1\n    mx = n\n    s = 0\n    e = n - 1\n    while s < e:\n        if a[s] == mn:\n            s += 1\n            mn += 1\n        elif a[s] == mx:\n            s += 1\n            mx -= 1\n        elif a[e] == mn:\n            e -= 1\n            mn += 1\n        elif a[e] == mx:\n            e -= 1\n            mx -= 1\n        else:\n            break\n    if s < e:\n        print(s + 1, e + 1)\n    else:\n        print(-1)", "t = int(input())\nfor z in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    s = 1\n    l = n\n    i = 0\n    j = n - 1\n    while i < j:\n        if a[i] == s:\n            s += 1\n            i += 1\n            if a[j] == l:\n                j -= 1\n                l -= 1\n        elif a[i] == l:\n            i += 1\n            l -= 1\n            if a[j] == s:\n                j -= 1\n                s += 1\n        elif a[j] == s:\n            j -= 1\n            s += 1\n        elif a[j] == l:\n            j -= 1\n            l -= 1\n        else:\n            break\n    if i >= j:\n        print(-1)\n    else:\n        print(i + 1, j + 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    minim = 1\n    maxim = n\n    st = 0\n    dr = n - 1\n    while st < dr and (a[st] == minim or a[dr] == minim or a[st] == maxim or (a[dr] == maxim)):\n        if a[st] == minim:\n            minim += 1\n            st += 1\n        elif a[dr] == minim:\n            minim += 1\n            dr -= 1\n        elif a[st] == maxim:\n            maxim -= 1\n            st += 1\n        elif a[dr] == maxim:\n            maxim -= 1\n            dr -= 1\n    if st == dr:\n        print(-1)\n    else:\n        print(st + 1, dr + 1)", "from collections import deque\nfor testcase in range(int(input())):\n    n = int(input())\n    list = map(int, input().split())\n    queue = deque(list)\n    min_val = 1\n    max_val = len(queue)\n    left = 1\n    right = len(queue)\n    while len(queue) > 0:\n        if queue[-1] == min_val:\n            queue.pop()\n            right = right - 1\n            min_val = min_val + 1\n        elif queue[0] == max_val:\n            queue.popleft()\n            left = left + 1\n            max_val = max_val - 1\n        elif queue[-1] == max_val:\n            queue.pop()\n            right = right - 1\n            max_val = max_val - 1\n        elif queue[0] == min_val:\n            queue.popleft()\n            left = left + 1\n            min_val = min_val + 1\n        else:\n            break\n    if len(queue) == 0:\n        print(-1)\n    else:\n        print(left, right)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (min, max) = (1, len(arr))\n    (l, r) = (0, len(arr) - 1)\n    while l < r:\n        if arr[l] == min:\n            l += 1\n            min += 1\n        elif arr[l] == max:\n            l += 1\n            max -= 1\n        elif arr[r] == min:\n            r -= 1\n            min += 1\n        elif arr[r] == max:\n            r -= 1\n            max -= 1\n        else:\n            break\n    if l >= r:\n        print(-1)\n    else:\n        print(l + 1, r + 1)", "import collections\nimport math\nimport heapq\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (left, right) = (0, n - 1)\n    (cmin, cmax) = (1, n)\n    while left < right:\n        if arr[left] == cmin:\n            cmin += 1\n            left += 1\n        elif arr[left] == cmax:\n            cmax -= 1\n            left += 1\n        elif arr[right] == cmin:\n            cmin += 1\n            right -= 1\n        elif arr[right] == cmax:\n            cmax -= 1\n            right -= 1\n        else:\n            break\n    if left < right:\n        print(left + 1, right + 1)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (l, r) = (0, n - 1)\n    (mn, mx) = (1, n)\n    while l <= r:\n        if a[l] == mn:\n            l += 1\n            mn += 1\n        elif a[l] == mx:\n            l += 1\n            mx -= 1\n        elif a[r] == mn:\n            r -= 1\n            mn += 1\n        elif a[r] == mx:\n            r -= 1\n            mx -= 1\n        else:\n            break\n    if l <= r:\n        print(l + 1, r + 1)\n    else:\n        print(-1)", "cases = int(input())\nfor i in range(0, cases):\n    le = int(input())\n    a = list(map(int, input().split()))\n    mini = 1\n    maxi = le\n    l = 0\n    r = len(a) - 1\n    mflag = 0\n    while l < r:\n        flag = True\n        if a[l] == mini:\n            flag = False\n            l += 1\n            mini += 1\n        elif a[l] == maxi:\n            flag = False\n            l += 1\n            maxi -= 1\n        if a[r] == mini:\n            flag = False\n            r -= 1\n            mini += 1\n        elif a[r] == maxi:\n            flag = False\n            r -= 1\n            maxi -= 1\n        if flag == True:\n            print(l + 1, r + 1)\n            mflag = 1\n            break\n    if mflag == 0:\n        print(-1)", "n = int(input())\nfor x in range(n):\n    l = int(input())\n    start = 0\n    end = l - 1\n    a = list(map(int, input().split()))\n    (mn, mx) = (1, l)\n    flag = True\n    while flag and end != start and (start < end):\n        flag = True\n        if a[start] == mn:\n            mn += 1\n            start += 1\n        elif a[start] == mx:\n            mx -= 1\n            start += 1\n        elif a[end] == mn:\n            mn += 1\n            end -= 1\n        elif a[end] == mx:\n            mx -= 1\n            end -= 1\n        else:\n            flag = False\n    if end == start:\n        print(-1)\n    else:\n        print(start + 1, end + 1)", "for _ in range(int(input())):\n    n = int(input())\n    (a, b) = (1, n)\n    (l, r) = (1, n)\n    tp = list(map(int, input().split()))\n    p = [0] + tp\n    f = 1\n    while l < r and f:\n        t = 0\n        if p[l] == a:\n            l += 1\n            a += 1\n            t = 1\n        elif p[l] == b:\n            l += 1\n            b -= 1\n            t = 1\n        if p[r] == a:\n            r -= 1\n            a += 1\n            t = 1\n        elif p[r] == b:\n            r -= 1\n            b -= 1\n            t = 1\n        if t == 0:\n            f = 0\n    if l == r:\n        f = 1\n    if f == 0:\n        print(l, r)\n    else:\n        print(-1)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = 0\n    r = n - 1\n    L = 1\n    R = n\n    while l <= r:\n        if a[l] == L:\n            l += 1\n            L += 1\n            continue\n        if a[r] == R:\n            r -= 1\n            R -= 1\n            continue\n        if a[l] == R:\n            l += 1\n            R -= 1\n            continue\n        if a[r] == L:\n            r -= 1\n            L += 1\n            continue\n        print(l + 1, r + 1)\n        break\n    if l > r:\n        print(-1)", "test = int(input())\nfor _ in range(test):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    l = 0\n    r = n - 1\n    mn = 1\n    mx = n\n    while l <= r:\n        if a[l] == mn:\n            l += 1\n            mn += 1\n        elif a[l] == mx:\n            l += 1\n            mx -= 1\n        elif a[r] == mn:\n            r -= 1\n            mn += 1\n        elif a[r] == mx:\n            r -= 1\n            mx -= 1\n        else:\n            break\n    if l <= r:\n        print(l + 1, r + 1)\n    else:\n        print(-1)", "t = int(input())\nfor t1 in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    min = 1\n    max = n\n    i = 0\n    j = n - 1\n    ind = 0\n    while i < j:\n        if a[i] == min:\n            i += 1\n            min += 1\n        elif a[i] == max:\n            max -= 1\n            i += 1\n        elif a[j] == min:\n            j -= 1\n            min += 1\n        elif a[j] == max:\n            j -= 1\n            max -= 1\n        else:\n            ind = 1\n            print(i + 1, j + 1)\n            break\n    if ind == 0:\n        print(-1)", "n = int(input())\nfor _ in range(n):\n    k = int(input())\n    a = [int(x) for x in input().split(' ')]\n    left = 0\n    right = k - 1\n    nl = 1\n    nr = k\n    for i in range(k):\n        if right - left < 3:\n            break\n        if a[left] == nl:\n            nl += 1\n            left += 1\n        if a[left] == nr:\n            left += 1\n            nr -= 1\n        if a[right] == nl:\n            nl += 1\n            right -= 1\n        if a[right] == nr:\n            nr -= 1\n            right -= 1\n    if right - left >= 3:\n        print(left + 1, right + 1)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    l = 0\n    r = n - 1\n    curMin = 1\n    curMax = n\n    Flag = False\n    while l != r and (not Flag):\n        if arr[l] == curMin:\n            l += 1\n            curMin += 1\n        elif arr[l] == curMax:\n            l += 1\n            curMax -= 1\n        elif arr[r] == curMin:\n            r -= 1\n            curMin += 1\n        elif arr[r] == curMax:\n            r -= 1\n            curMax -= 1\n        else:\n            Flag = True\n    if l == r:\n        print(-1)\n    else:\n        print(l + 1, r + 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    xs = [int(a) for a in input().split()]\n    a = 1\n    b = n\n    i = 0\n    j = n - 1\n    while j > i:\n        if not (xs[i] == a or xs[i] == b or xs[j] == a or (xs[j] == b)):\n            break\n        if xs[i] == a:\n            a += 1\n            i += 1\n        elif xs[i] == b:\n            b -= 1\n            i += 1\n        if xs[j] == a:\n            a += 1\n            j -= 1\n        elif xs[j] == b:\n            b -= 1\n            j -= 1\n    if i >= j:\n        print(-1)\n    else:\n        print(i + 1, j + 1)", "for _ in range(int(input())):\n    len = int(input())\n    a = list(map(int, input().split()))\n    al = 0\n    bl = 1\n    au = len - 1\n    bu = len\n    c = False\n    while al < au:\n        if a[al] == bl:\n            al += 1\n            bl += 1\n        elif a[al] == bu:\n            al += 1\n            bu -= 1\n        elif a[au] == bl:\n            au -= 1\n            bl += 1\n        elif a[au] == bu:\n            au -= 1\n            bu -= 1\n        else:\n            c = True\n            break\n    if c:\n        print(str(al + 1) + ' ' + str(au + 1))\n    else:\n        print('-1')", "t = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    h = [0] * (n + 1)\n    for i in a:\n        h[i] = i\n    i = 0\n    j = n - 1\n    k = 1\n    l = n\n    while i <= j:\n        if a[i] == k:\n            k += 1\n            i += 1\n        elif a[j] == k:\n            j -= 1\n            k += 1\n        elif a[i] == l:\n            l -= 1\n            i += 1\n        elif a[j] == l:\n            l -= 1\n            j -= 1\n        else:\n            print(i + 1, j + 1)\n            break\n    else:\n        print(-1)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (i, j) = (0, n - 1)\n    (minn, maxx) = (1, n)\n    while i < j:\n        if minn == maxx:\n            print(-1)\n            break\n        if a[i] == minn:\n            i += 1\n            minn += 1\n        elif a[i] == maxx:\n            i += 1\n            maxx -= 1\n        if a[j] == minn:\n            j -= 1\n            minn += 1\n        elif a[j] == maxx:\n            j -= 1\n            maxx -= 1\n        if (a[i] != minn and a[i] != maxx) and (a[j] != minn and a[j] != maxx):\n            print(i + 1, j + 1)\n            break\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i1 = 0\n    i2 = n - 1\n    mx = n\n    mn = 1\n    while i2 - i1 > 2:\n        if a[i1] not in {mn, mx} and a[i2] not in {mn, mx}:\n            print(i1 + 1, i2 + 1)\n            break\n        else:\n            if a[i1] == mx:\n                mx -= 1\n                i1 += 1\n            elif a[i1] == mn:\n                mn += 1\n                i1 += 1\n            if a[i2] == mx:\n                mx -= 1\n                i2 -= 1\n            elif a[i2] == mn:\n                mn += 1\n                i2 -= 1\n    else:\n        print(-1)", "import sys\n\ndef read(func=int):\n    return func(sys.stdin.readline().strip())\n\ndef read_array(func=int):\n    return list(map(func, read(str).split()))\nt = read()\nfor _ in range(t):\n    n = read()\n    A = read_array()\n    (mx, mn) = (n, 1)\n    l = 0\n    r = n - 1\n    while l <= r:\n        if A[l] == mx:\n            l += 1\n            mx -= 1\n        elif A[l] == mn:\n            l += 1\n            mn += 1\n        elif A[r] == mx:\n            r -= 1\n            mx -= 1\n        elif A[r] == mn:\n            r -= 1\n            mn += 1\n        else:\n            break\n    if l <= r:\n        print(l + 1, r + 1)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    array = list(map(int, input().split()))\n    left = 0\n    right = n - 1\n    check = sorted(array)\n    (Min, Max) = (0, n - 1)\n    found = False\n    while left < right:\n        if array[left] == check[Min]:\n            left += 1\n            Min += 1\n        elif array[left] == check[Max]:\n            left += 1\n            Max -= 1\n        elif array[right] == check[Min]:\n            right -= 1\n            Min += 1\n        elif array[right] == check[Max]:\n            right -= 1\n            Max -= 1\n        else:\n            found = True\n            break\n    if found:\n        print(left + 1, right + 1)\n    else:\n        print(-1)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    l = len(a)\n    (x, y) = (0, l - 1)\n    (maxi, mini) = (l, 1)\n    while y - x >= 3:\n        if a[x] == maxi or a[x] == mini:\n            if a[x] == maxi:\n                maxi -= 1\n            else:\n                mini += 1\n            x += 1\n        elif a[y] == maxi or a[y] == mini:\n            if a[y] == maxi:\n                maxi -= 1\n            else:\n                mini += 1\n            y -= 1\n        else:\n            break\n    if y - x < 3:\n        print(-1)\n    else:\n        print(x + 1, y + 1)", "for _ in range(int(input())):\n    length = int(input())\n    arr = list(map(int, input().split()))\n    min_arr = 1\n    max_arr = length\n    l = 0\n    r = length - 1\n    while l < r:\n        if min_arr != arr[l] and max_arr != arr[r] and (min_arr != arr[r]) and (max_arr != arr[l]):\n            break\n        if min_arr == arr[l]:\n            l += 1\n            min_arr += 1\n        if max_arr == arr[l]:\n            l += 1\n            max_arr -= 1\n        if max_arr == arr[r]:\n            r -= 1\n            max_arr -= 1\n        if min_arr == arr[r]:\n            r -= 1\n            min_arr += 1\n    if l >= r:\n        print('-1')\n    else:\n        print(l + 1, r + 1)", "import math\nk = int(input())\nfor q in range(k):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = 0\n    r = n - 1\n    i = 1\n    j = n\n    flag = 0\n    while l < r:\n        if a[l] == i or a[l] == j:\n            if a[l] == i:\n                i += 1\n            if a[l] == j:\n                j -= 1\n            l += 1\n        elif a[r] == i or a[r] == j:\n            if a[r] == i:\n                i += 1\n            if a[r] == j:\n                j -= 1\n            r -= 1\n        else:\n            print(l + 1, end=' ')\n            print(r + 1)\n            flag = 1\n            break\n    if flag == 0:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    elements = [int(x) for x in input().split()]\n    sortedElements = list(range(1, n + 1))\n    (l, r) = (0, n - 1)\n    (first, last) = (0, n - 1)\n    while first < last:\n        if elements[l] == sortedElements[first]:\n            first += 1\n            l += 1\n        elif elements[l] == sortedElements[last]:\n            last -= 1\n            l += 1\n        elif elements[r] == sortedElements[first]:\n            first += 1\n            r -= 1\n        elif elements[r] == sortedElements[last]:\n            last -= 1\n            r -= 1\n        else:\n            break\n    if l < r:\n        print(l + 1, r + 1)\n    else:\n        print(-1)", "import math\n\ndef pow(a, b):\n    if b == 0:\n        return 1\n    elif b == 1:\n        return a\n    else:\n        temp = pow(a, b // 2)\n        temp = temp * temp\n        if b % 2 == 1:\n            temp = temp * a\n        return temp\nt = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    list1 = [int(num) for num in input().split()]\n    l = 0\n    r = n - 1\n    min1 = 1\n    max1 = n\n    flag = 0\n    while l < r:\n        if list1[l] == min1:\n            l += 1\n            min1 += 1\n        if list1[l] == max1:\n            l += 1\n            max1 -= 1\n        if list1[r] == min1:\n            r -= 1\n            min1 += 1\n        if list1[r] == max1:\n            r -= 1\n            max1 -= 1\n        if list1[l] != min1 and list1[l] != max1 and (list1[r] != max1) and (list1[r] != min1):\n            flag = 1\n            break\n    if flag == 0 or l >= r:\n        print(-1)\n    else:\n        print(f'{l + 1} {r + 1}')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = input().split(' ')\n    arr = [int(x) for x in arr]\n    largest = n\n    smallest = 1\n    (l, r) = (0, n - 1)\n    while l < r:\n        if arr[l] != largest and arr[l] != smallest and (arr[r] != largest) and (arr[r] != smallest):\n            break\n        if arr[l] == largest:\n            largest -= 1\n            l += 1\n        elif arr[l] == smallest:\n            smallest += 1\n            l += 1\n        elif arr[r] == smallest:\n            smallest += 1\n            r -= 1\n        else:\n            largest -= 1\n            r -= 1\n    if l < r:\n        print(l + 1, r + 1)\n    else:\n        print(-1)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    lst = [int(y) for y in input().split()]\n    c1 = 1\n    c2 = 0\n    l = 0\n    u = n - 1\n    while True:\n        if l >= u - 2:\n            print('-1')\n            break\n        elif lst[l] == c1:\n            l += 1\n            c1 += 1\n        elif lst[l] == n - c2:\n            l += 1\n            c2 += 1\n        elif lst[u] == c1:\n            u -= 1\n            c1 += 1\n        elif lst[u] == n - c2:\n            u -= 1\n            c2 += 1\n        else:\n            print(l + 1, '', u + 1)\n            break", "nbTests = int(input())\nfor i in range(nbTests):\n    n = int(input())\n    minToAvoid = 1\n    maxToAvoid = n\n    (l, r) = (1, n)\n    string = input()\n    content = list()\n    for i in string.split():\n        content.append(int(i))\n    while True:\n        if l == r:\n            print(-1)\n            break\n        if content[l - 1] == minToAvoid:\n            l += 1\n            minToAvoid += 1\n            continue\n        if content[l - 1] == maxToAvoid:\n            l += 1\n            maxToAvoid -= 1\n            continue\n        if content[r - 1] == minToAvoid:\n            r -= 1\n            minToAvoid += 1\n            continue\n        if content[r - 1] == maxToAvoid:\n            r -= 1\n            maxToAvoid -= 1\n            continue\n        print(f'{l} {r}')\n        break", "cases = int(input())\nfor i in range(0, cases):\n    le = int(input())\n    a = list(map(int, input().split()))\n    sorteda = a.copy()\n    sorteda.sort()\n    sortedl = 0\n    sortedr = len(a) - 1\n    l = 0\n    r = len(a) - 1\n    mflag = 0\n    while l < r:\n        flag = True\n        if a[l] == sorteda[sortedl]:\n            flag = False\n            l += 1\n            sortedl += 1\n        elif a[l] == sorteda[sortedr]:\n            flag = False\n            l += 1\n            sortedr -= 1\n        if a[r] == sorteda[sortedl]:\n            flag = False\n            r -= 1\n            sortedl += 1\n        elif a[r] == sorteda[sortedr]:\n            flag = False\n            r -= 1\n            sortedr -= 1\n        if flag == True:\n            print(l + 1, r + 1)\n            mflag = 1\n            break\n    if mflag == 0:\n        print(-1)", "t = int(input())\nwhile t:\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    x = 1\n    y = n\n    l = 0\n    r = n - 1\n    while l < r:\n        if x != a[l] and y != a[r] and (x != a[r]) and (y != a[l]):\n            break\n        if x == a[l]:\n            l += 1\n            x += 1\n        if y == a[l]:\n            l += 1\n            y -= 1\n        if y == a[r]:\n            r -= 1\n            y -= 1\n        if a[r] == x:\n            r -= 1\n            x += 1\n    if l >= r:\n        print(-1)\n    else:\n        print(l + 1, r + 1)\n    t -= 1", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n <= 3:\n        print(-1)\n        continue\n    x = 1\n    y = n\n    ans = -1\n    i = 0\n    j = n - 1\n    while i < j:\n        if (a[i] != x and a[j] != y) and (a[i] != y and a[j] != x):\n            print(i + 1, j + 1)\n            ans = 999\n            break\n        elif a[i] == x and a[j] == y:\n            x += 1\n            y -= 1\n            i += 1\n            j -= 1\n        elif a[i] == y and a[j] == x:\n            x += 1\n            y -= 1\n            i += 1\n            j -= 1\n        elif a[i] == x:\n            x += 1\n            i += 1\n        elif a[j] == x:\n            j -= 1\n            x += 1\n        elif a[i] == y:\n            y -= 1\n            i += 1\n        elif a[j] == y:\n            j -= 1\n            y -= 1\n    if ans == -1:\n        print(-1)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 0\n    j = n - 1\n    ans = None\n    curr = 1\n    first = 1\n    second = int(n)\n    while i < j:\n        temp = set([a[i], a[j]])\n        if first not in temp and second not in temp:\n            ans = (i + 1, j + 1)\n            break\n        else:\n            if a[i] == first:\n                first += 1\n                i += 1\n            if a[j] == first:\n                first += 1\n                j -= 1\n            if a[i] == second:\n                second -= 1\n                i += 1\n            if a[j] == second:\n                second -= 1\n                j -= 1\n    if ans:\n        print(*ans)\n    else:\n        print(-1)", "def dora_and_search(n, arr):\n    (l, r) = (0, n - 1)\n    (mn, mx) = (1, n)\n    while l <= r:\n        if arr[l] == mn:\n            l += 1\n            mn += 1\n        elif arr[l] == mx:\n            l += 1\n            mx -= 1\n        elif arr[r] == mn:\n            r -= 1\n            mn += 1\n        elif arr[r] == mx:\n            r -= 1\n            mx -= 1\n        else:\n            break\n    if l <= r:\n        print(l + 1, r + 1)\n    else:\n        print(-1)\nt = eval(input())\nfor _ in range(t):\n    n = eval(input())\n    arr = list(map(int, input().split()))\n    dora_and_search(n, arr)", "t = int(input())\n\ndef validsublist(l):\n    i = 0\n    j = len(l) - 1\n    k = i\n    h = j\n    while j - i + 1 > 3:\n        if l[i] != k + 1 and l[i] != h + 1 and (l[j] != k + 1) and (l[j] != h + 1):\n            print(i + 1, j + 1)\n            return False\n        elif l[i] == k + 1 and l[j] != h + 1:\n            i += 1\n            k += 1\n        elif l[j] == h + 1 and l[i] != k + 1:\n            j -= 1\n            h -= 1\n        elif l[j] == k + 1 and l[i] != h + 1:\n            j -= 1\n            k += 1\n        elif l[i] == h + 1 and l[j] != k + 1:\n            i += 1\n            h -= 1\n        else:\n            i += 1\n            k += 1\n            j -= 1\n            h -= 1\n    return True\nfor i in range(t):\n    n = int(input())\n    x = list(map(int, input().split()))\n    k = validsublist(x)\n    if k:\n        print(-1)", "cases = int(input())\nfor i in range(0, cases):\n    le = int(input())\n    a = list(map(int, input().split()))\n    sorteda = a.copy()\n    sorteda.sort()\n    sortedl = 0\n    sortedr = len(a) - 1\n    l = 0\n    r = len(a) - 1\n    mflag = 0\n    while l < r:\n        flag = True\n        if a[l] == sorteda[sortedl]:\n            flag = False\n            l += 1\n            sortedl += 1\n        elif a[l] == sorteda[sortedr]:\n            flag = False\n            l += 1\n            sortedr -= 1\n        if a[r] == sorteda[sortedl]:\n            flag = False\n            r -= 1\n            sortedl += 1\n        elif a[r] == sorteda[sortedr]:\n            flag = False\n            r -= 1\n            sortedr -= 1\n        if flag == True:\n            print(l + 1, r + 1)\n            mflag = 1\n            break\n    if mflag == 0:\n        print(-1)", "k = int(input())\nres = []\nwhile k > 0:\n    n = int(input())\n    temp = input().split(' ')\n    arr = []\n    for num in temp:\n        arr.append(int(num))\n    (left, right) = (0, len(arr) - 1)\n    cur_min = 1\n    cur_max = len(arr)\n    while left < right:\n        if arr[left] != cur_min and arr[left] != cur_max and (arr[right] != cur_min) and (arr[right] != cur_max):\n            break\n        if arr[left] == cur_min:\n            cur_min += 1\n            left += 1\n        if arr[left] == cur_max:\n            cur_max -= 1\n            left += 1\n        if arr[right] == cur_min:\n            cur_min += 1\n            right -= 1\n        if arr[right] == cur_max:\n            cur_max -= 1\n            right -= 1\n    if left >= right:\n        res.append((-1, -1))\n    else:\n        res.append((left + 1, right + 1))\n    k -= 1\nfor (x, y) in res:\n    if x == -1:\n        print(-1)\n    else:\n        print(x, y)", "for s in [*open(0)][2::2]:\n    a = (0, *map(int, s.split()))\n    i = k = 1\n    j = l = len(a) - 1\n    while i < j and (s := ({a[i], a[j]} & {k, l})):\n        i += a[i] in s\n        j -= a[j] in s\n        k += k in s\n        l -= l in s\n    print(*([-1], [i, j])[i < j])", "for _ in range(int(input())):\n    n = int(input())\n    elements = list(map(int, input().split()))\n    (emin, emax) = (1, n)\n    ileft = 0\n    size = iright = n - 1\n    while size > 2 and (elements[ileft] == emax or elements[ileft] == emin or elements[iright] == emax or (elements[iright] == emin)):\n        i = 0\n        while emax == elements[ileft + i] and size > 2:\n            emax -= 1\n            i += 1\n            size -= 1\n        while emin == elements[ileft + i] and size > 2:\n            emin += 1\n            i += 1\n            size -= 1\n        if i > 0:\n            ileft += i\n        j = iright\n        while emax == elements[j] and size > 2:\n            emax -= 1\n            j -= 1\n            size -= 1\n        while emin == elements[j] and size > 2:\n            emin += 1\n            j -= 1\n            size -= 1\n        if j < iright:\n            iright = j\n    if size > 2:\n        print(ileft + 1, ileft + size + 1)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    flag = 0\n    pre = 0\n    lst = n - 1\n    minn = 1\n    maxn = n\n    try:\n        while flag == 0:\n            flag = 1\n            if a[pre] == minn:\n                pre += 1\n                minn += 1\n                flag = 0\n                continue\n            if a[pre] == maxn:\n                pre += 1\n                maxn -= 1\n                flag = 0\n                continue\n            if a[lst] == minn:\n                lst -= 1\n                minn += 1\n                flag = 0\n                continue\n            if a[lst] == maxn:\n                lst -= 1\n                maxn -= 1\n                flag = 0\n                continue\n    except:\n        print('-1')\n        continue\n    print(pre + 1, lst + 1)", "testcases = int(input())\nfor i in range(testcases):\n    n = int(input())\n    perm = [int(x) for x in input().split()]\n    positions = [-1 for x in range(n)]\n    for j in range(n):\n        positions[perm[j] - 1] = j\n    zac = 0\n    kon = n - 1\n    mx = n\n    mn = 1\n    while zac < kon and (perm[zac] == mx or perm[kon] == mx or perm[zac] == mn or (perm[kon] == mn)):\n        if perm[zac] == mx:\n            mx -= 1\n            zac += 1\n        elif perm[kon] == mx:\n            mx -= 1\n            kon -= 1\n        elif perm[zac] == mn:\n            mn += 1\n            zac += 1\n        elif perm[kon] == mn:\n            mn += 1\n            kon -= 1\n    if zac < kon:\n        print(str(zac + 1) + ' ' + str(kon + 1))\n    else:\n        print(-1)", "import math\nT = int(input(''))\nfor i in range(T):\n    n = int(input())\n    str1 = input()\n    l1 = [int(c) for c in str1.split()]\n    a = 0\n    b = len(l1) - 1\n    minVal = 1\n    maxVal = len(l1)\n    flag = 0\n    while a != b and b - a > 1:\n        if l1[a] == minVal or l1[a] == maxVal or l1[b] == minVal or (l1[b] == maxVal):\n            if l1[a] == minVal:\n                minVal += 1\n                a += 1\n            elif l1[a] == maxVal:\n                maxVal -= 1\n                a += 1\n            if l1[b] == minVal:\n                minVal += 1\n                b -= 1\n            elif l1[b] == maxVal:\n                maxVal -= 1\n                b -= 1\n        else:\n            flag = 1\n            break\n    if flag == 0:\n        print(-1)\n    else:\n        print(a + 1, b + 1)", "for s in [*open(0)][2::2]:\n    a = (0, *map(int, s.split()))\n    i = k = 1\n    j = l = len(a) - 1\n    while i < j and (s := ({a[i], a[j]} & {k, l})):\n        i += a[i] in s\n        j -= a[j] in s\n        k += k in s\n        l -= l in s\n    print(*([-1], [i, j])[i < j])", "for s in [*open(0)][2::2]:\n    a = (0, *map(int, s.split()))\n    i = k = 1\n    j = l = len(a) - 1\n    while i < j and (s := ({a[i], a[j]} & {k, l})):\n        i += a[i] in s\n        j -= a[j] in s\n        k += k in s\n        l -= l in s\n    print(*([-1], [i, j])[i < j])", "for s in [*open(0)][2::2]:\n    a = (0, *map(int, s.split()))\n    i = k = 1\n    j = l = len(a) - 1\n    while i < j and (s := ({a[i], a[j]} & {k, l})):\n        i += a[i] in s\n        j -= a[j] in s\n        k += k in s\n        l -= l in s\n    print(*([-1], [i, j])[i < j])", "for s in [*open(0)][2::2]:\n    a = (0, *map(int, s.split()))\n    i = k = 1\n    j = l = len(a) - 1\n    while i < j and (s := ({a[i], a[j]} & {k, l})):\n        i += a[i] in s\n        j -= a[j] in s\n        k += k in s\n        l -= l in s\n    print(*([-1], [i, j])[i < j])", "for s in [*open(0)][2::2]:\n    a = (0, *map(int, s.split()))\n    i = k = 1\n    j = l = len(a) - 1\n    while i < j and (s := ({a[i], a[j]} & {k, l})):\n        i += a[i] in s\n        j -= a[j] in s\n        k += k in s\n        l -= l in s\n    print(*([-1], [i, j])[i < j])", "for s in [*open(0)][2::2]:\n    a = (0, *map(int, s.split()))\n    i = k = 1\n    j = l = len(a) - 1\n    while i < j and (s := ({a[i], a[j]} & {k, l})):\n        i += a[i] in s\n        j -= a[j] in s\n        k += k in s\n        l -= l in s\n    print(*([-1], [i, j])[i < j])", "for nnm in range(int(input(''))):\n    n = int(input(''))\n    k = [int(x) for x in input('').split(' ')]\n    initial = [1, n]\n    trip = True\n    idx1 = 0\n    idx2 = n - 1\n    while trip:\n        if idx1 > n - 1 or idx2 < 0 or idx1 >= idx2:\n            print(-1)\n            trip = False\n            break\n        (a1, a2) = (k[idx1], k[idx2])\n        if a1 not in initial and a2 not in initial:\n            print(idx1 + 1, idx2 + 1)\n            trip = False\n            break\n        else:\n            if a1 == initial[0]:\n                initial[0] += 1\n                idx1 += 1\n            if a1 == initial[1]:\n                initial[1] -= 1\n                idx1 += 1\n            if a2 == initial[0]:\n                initial[0] += 1\n                idx2 -= 1\n            if a2 == initial[1]:\n                initial[1] -= 1\n                idx2 -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    s = sorted(a)\n    l = 0\n    r = n - 1\n    ls = 0\n    rs = n - 1\n    while ls < rs:\n        c = False\n        while l < len(a) and ls < rs and (a[l] == s[ls]):\n            c = True\n            ls += 1\n            l += 1\n        while r >= 0 and ls < rs and (a[r] == s[ls]):\n            c = True\n            ls += 1\n            r -= 1\n        while l < len(a) and ls < rs and (a[l] == s[rs]):\n            c = True\n            rs -= 1\n            l += 1\n        while r >= 0 and ls < rs and (a[r] == s[rs]):\n            c = True\n            rs -= 1\n            r -= 1\n        if not c:\n            break\n    if l < r:\n        print(l + 1, r + 1)\n    else:\n        print(-1)", "for s in [*open(0)][2::2]:\n    a = (0, *map(int, s.split()))\n    i = k = 1\n    j = l = len(a) - 1\n    while i < j and (s := ({a[i], a[j]} & {k, l})):\n        i += a[i] in s\n        j -= a[j] in s\n        k += k in s\n        l -= l in s\n    print(*([-1], [i, j])[i < j])", "for s in [*open(0)][2::2]:\n    a = (0, *map(int, s.split()))\n    i = k = 1\n    j = l = len(a) - 1\n    while i < j and (s := ({a[i], a[j]} & {k, l})):\n        i += a[i] in s\n        j -= a[j] in s\n        k += k in s\n        l -= l in s\n    print(*([-1], [i, j])[i < j])", "for s in [*open(0)][2::2]:\n    a = (0, *map(int, s.split()))\n    i = k = 1\n    j = l = len(a) - 1\n    while i < j and (s := ({a[i], a[j]} & {k, l})):\n        i += a[i] in s\n        j -= a[j] in s\n        k += k in s\n        l -= l in s\n    print(*([-1], [i, j])[i < j])", "import heapq\niter = int(input())\nfor _ in range(iter):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    ma = [-i for i in a]\n    arr = a.copy()\n    l = 0\n    r = n - 1\n    heapq.heapify(a)\n    heapq.heapify(ma)\n    while l <= r:\n        if arr[l] == -ma[0] or arr[l] == a[0]:\n            if arr[l] == -ma[0]:\n                heapq.heappop(ma)\n            else:\n                heapq.heappop(a)\n            l += 1\n        elif arr[r] == -ma[0] or arr[r] == a[0]:\n            if arr[r] == -ma[0]:\n                heapq.heappop(ma)\n            else:\n                heapq.heappop(a)\n            r -= 1\n        else:\n            break\n    if l > r:\n        print(-1)\n    else:\n        print(f'{l + 1} {r + 1}')", "from functools import lru_cache\nfrom cmath import inf\nfrom itertools import accumulate\nimport sys\nimport bisect\nimport threading\nfrom collections import Counter\nimport heapq\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef solve(s):\n    min_h = [j for (i, j) in enumerate(s)]\n    max_h = [-j for (i, j) in enumerate(s)]\n    heapq.heapify(min_h)\n    heapq.heapify(max_h)\n    (l, r) = (0, len(s) - 1)\n    while l < r:\n        if s[l] == min_h[0] or s[l] == -max_h[0]:\n            heapq.heappop(min_h) if s[l] == min_h[0] else heapq.heappop(max_h)\n            l += 1\n        elif s[r] == min_h[0] or s[r] == -max_h[0]:\n            heapq.heappop(min_h) if s[r] == min_h[0] else heapq.heappop(max_h)\n            r -= 1\n        else:\n            return print(l + 1, r + 1)\n    print(-1)\n\ndef main():\n    for _ in range(inp()):\n        inp()\n        solve(inlt())\nthreading.stack_size(1 << 27)\nsys.setrecursionlimit(1 << 30)\nmain_thread = threading.Thread(target=main)\nmain_thread.start()\nmain_thread.join()", "for s in [*open(0)][2::2]:\n    a = (0, *map(int, s.split()))\n    i = k = 1\n    j = l = len(a) - 1\n    b = (0, *range(1, j + 1))\n    while i < j and (s := ({a[i], a[j]} & {b[k], b[l]})):\n        i += a[i] in s\n        j -= a[j] in s\n        k += b[k] in s\n        l -= b[l] in s\n    print(*([-1], [i, j])[i < j])", "T = int(input())\nfor t in range(0, T):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    ptr1 = 0\n    ptr2 = n - 1\n    l = 0\n    r = n - 1\n    mini = 1\n    maxi = n\n    flag = 0\n    while ptr1 != ptr2 and ptr1 < n and (ptr2 > -1):\n        if a[ptr1] != mini and a[ptr1] != maxi and (a[ptr2] != mini) and (a[ptr2] != maxi):\n            l = ptr1\n            r = ptr2\n            flag = 1\n            break\n        else:\n            if a[ptr1] == mini or a[ptr1] == maxi:\n                if a[ptr1] == mini:\n                    mini += 1\n                else:\n                    maxi -= 1\n                ptr1 += 1\n            if a[ptr2] == mini or a[ptr2] == maxi:\n                if a[ptr2] == mini:\n                    mini += 1\n                else:\n                    maxi -= 1\n                ptr2 -= 1\n    if flag == 0:\n        print(-1)\n    else:\n        print(l + 1, r + 1)", "import os\nimport math\nimport collections\nimport bisect\nimport functools\nimport itertools\nimport heapq\n\ndef solve(a, n):\n    if n == 3:\n        return [-1]\n    d = {x: i + 1 for (i, x) in enumerate(a)}\n    (l, r) = (1, n)\n    (min_a, max_a) = (1, n)\n    while l < r:\n        if min(a[l - 1], a[r - 1]) != min_a and max(a[l - 1], a[r - 1]) != max_a:\n            return [l, r]\n        if min(a[l - 1], a[r - 1]) == min_a and max(a[l - 1], a[r - 1]) == max_a:\n            l += 1\n            r -= 1\n            min_a += 1\n            max_a -= 1\n            continue\n        if min(a[l - 1], a[r - 1]) == min_a:\n            if a[l - 1] == min_a:\n                l += 1\n            else:\n                r -= 1\n            min_a += 1\n        if max(a[l - 1], a[r - 1]) == max_a:\n            if a[l - 1] == max_a:\n                l += 1\n            else:\n                r -= 1\n            max_a -= 1\n    return [-1]\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(' '.join(map(str, solve(a, n))))"]