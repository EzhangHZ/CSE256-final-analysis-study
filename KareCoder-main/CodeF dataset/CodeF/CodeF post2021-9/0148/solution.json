["import math\n\ndef gcd(a, b):\n    while a % b != 0:\n        aux = b\n        b = a % b\n        a = aux\n    return b\n\ndef lcm(a, b):\n    return a / gcd(a, b) * b\n\ndef solve(a):\n    return (a - 3) // 3 - 1\nfor _ in range(int(input())):\n    a = int(input())\n    print(solve(a))", "t = int(input())\nresults = []\nfor _ in range(t):\n    n = int(input())\n    med = n // 3\n    mini = med - 2\n    results.append(mini)\nlist(map(print, results))", "for _ in range(int(input())):\n    onci = int(input())\n    print(onci // 3 - 2)", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    n = int(input())\n    print(n // 3 - 2)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    print((n - 6) // 3)", "for _ in range(int(input())):\n    n = int(input())\n    m = (n - 3) // 3\n    print(m - 1)", "import sys\n\ndef solve():\n    n = int(sys.stdin.readline())\n    x = (n - 3) // 3 - 1\n    ans.append(str(x))\nt = int(sys.stdin.readline())\nans = []\nfor _ in range(t):\n    solve()\nprint('\\n'.join(ans))", "t = int(input())\ntest_cases = []\nfor item in range(t):\n    test_cases.append(int(input()))\n\ndef solver(argument):\n    solve = (argument - 3) // 3\n    solve2 = solve - 1\n    return solve2\nfor test in test_cases:\n    print(solver(test))", "n = int(input())\nfor i in range(n):\n    x = int(input())\n    print(x // 3 - 2)", "n = int(input())\narr = []\nfor i in range(n):\n    i = int(input())\n    arr.append(i)\nresult = []\nfor i in range(len(arr)):\n    budni = arr[i] - 3\n    koef = budni // 3 - 1\n    print(koef)", "t = int(input())\nresult = []\nfor i in range(t):\n    n = int(input())\n    result.append(int((n - 3) // 3) - 1)\nfor i in result:\n    print(i)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    print((n - 6) // 3)", "for _ in range(int(input())):\n    n = int(input())\n    print((n - 6) // 3)", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    x = a // 3\n    print(x - 2)", "def main():\n    n_tests = int(input())\n    for _ in range(n_tests):\n        n = int(input())\n        print((n - 6) // 3)\nmain()", "from math import ceil\nt = int(input())\noutput = []\nfor i in range(t):\n    n = int(input())\n    d_1 = ceil((n - 4) / 3) + 1\n    d_2 = d_1 + 2\n    d_3 = n\n    l_1 = d_1 - 1\n    l_2 = d_2 - d_1 - 1\n    l_3 = d_3 - d_2 - 1\n    output.append(min(abs(l_1 - l_2), abs(l_2 - l_3), abs(l_3 - l_1)))\nfor o in output:\n    print(o)", "for _ in range(int(input())):\n    n = int(input())\n    print(n // 3 - 2)", "for _ in range(int(input())):\n    n = int(input())\n    print((n - 6) // 3)", "for t in range(int(input())):\n    n = int(input())\n    print((n - 3) // 3 - 1)", "from sys import stdin\nrd = stdin.readline\nfor _ in range(int(rd())):\n    n = int(rd())\n    print((n - 6) // 3)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    print((n - 3) // 3 - 1)\n    t -= 1", "for n in [*open(0)][1:]:\n    print(int(n) // 3 - 2)", "for n in [*open(0)][1:]:\n    print(int(n) // 3 - 2)", "for n in [*open(0)][1:]:\n    print(int(n) // 3 - 2)", "for num in [*open(0)][1:]:\n    print(int(num) // 3 - 2)", "for n in [*open(0)][1:]:\n    print(int(n) // 3 - 2)", "a = int(input())\nfor i in range(a):\n    b = int(input())\n    print(b // 3 - 2)", "for n in [*open(0)][1:]:\n    print(int(n) // 3 - 2)", "t = int(input())\nfor _ in range(t):\n    a = int(input())\n    print((a - 6) // 3)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nt = inp()\nfor i in range(t):\n    n = inp()\n    if n == 6:\n        print(0)\n    else:\n        x1 = 1\n        x2 = (n - 4) // 3\n        if (n - 4) / 3 != (n - 4) // 3:\n            x2 = x2 + 1\n        x3 = n - 4 - x2\n        s = min(x2 - x1, x3 - x2)\n        print(s)", "list(map(print, [int(input()) // 3 - 2 for t in range(int(input()))]))", "for _ in range(int(input())):\n    i = int(input())\n    if i > 8:\n        print((i - 3) // 3 - 1)\n    else:\n        print(0)", "for itadori in [*open(0)][1:]:\n    print(int(itadori) // 3 - 2)", "for n in [*open(0)][1:]:\n    print(int(n) // 3 - 2)", "def splitter(n):\n    n = n - 4\n    if n // 3 == 0:\n        l1 = 1\n    else:\n        l1 = int(round(n / 3))\n    l2 = 1\n    l3 = n - l1\n    return min(abs(l1 - l2), abs(l2 - l3), abs(l3 - l1))\nt = int(input())\nn = []\nfor i in range(0, t):\n    n.append(int(input()))\nfor i in range(0, t):\n    print(splitter(n[i]))", "k = int(input())\nfor i in range(k):\n    n = int(input())\n    print((n - 6) // 3)", "for n in [*open(0)][1:]:\n    print(int(n) // 3 - 2)", "for n in [*open(0)][1:]:\n    print(int(n) // 3 - 2)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    n -= 3\n    print(n // 3 - 1)", "for n in [*open(0)][1:]:\n    print(int(n) // 3 - 2)", "t = int(input())\nfor _ in range(t):\n    days = int(input())\n    days -= 3\n    print(days // 3 - 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    print((n - 3) // 3 - 1)", "for n in [*open(0)][1:]:\n    print(int(n) // 3 - 2)", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print((n - 3) // 3 - 1)", "import sys\nR = sys.stdin.readline\nfor _ in range(int(R())):\n    print((int(R()) - 6) // 3)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(n // 3 - 2)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    print((n - 6) // 3)", "def getint():\n    return [int(i) for i in input().split()]\n\ndef get():\n    return int(input())\n\ndef S():\n    for test in range(int(input())):\n        solve()\n\ndef solve():\n    n = get()\n    print((n - 3) // 3 - 1)\nS()", "fl = 'input.txt'\nimport sys\nimport math\nflh = sys.stdin\ntest_cases = int(flh.readline())\nres = []\nfor case in range(test_cases):\n    n = int(flh.readline())\n    print((n - 3) // 3 - 1)", "T = int(input())\nfor testcase in range(1, T + 1):\n    n = int(input())\n    k = n - 3\n    k2 = k // 3\n    print(min(k2 - 1, k - 2 * k2))", "for _ in range(int(input())):\n    n = int(input())\n    print(n // 3 - 2)", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    print((m - 3) // 3 - 1)", "for _ in range(int(input())):\n    n = int(input())\n    t = n // 3\n    l1 = n\n    l2 = n + t\n    l3 = n + 2 * t\n    print(min(abs(l1 - l2), abs(l1 - l3), abs(l2 - l3)) - 2)", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nimport math\nfrom functools import lru_cache\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    n = n - 3\n    (a, b) = (n // 3, n - n // 3)\n    print(min(b - a, a - 1))", "def one():\n    n = int(input())\n    print((n - 6) // 3)\nt = int(input())\nfor i in range(t):\n    one()", "for _ in range(int(input())):\n    n = int(input())\n    print(n // 3 - 2)", "for _ in range(int(input())):\n    n = int(input())\n    print(n // 3 - 2)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    m = int((n - 3) / 3) - 1\n    print(m)", "for _ in range(int(input())):\n    print((int(input()) - 6) // 3)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    return (n - 6) // 3\nfor _ in range(int(input())):\n    print(solve())", "from collections import *\nfrom math import *\nfrom sys import *\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    print(N // 3 - 2)", "for _ in range(int(input())):\n    days = int(input())\n    print(days // 3 - 2)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    y = math.ceil(2 * n / 3) - 3\n    x = n - 4 - y\n    ans = min(x - 1, y - x, y - 1)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    print(n // 3 - 2)", "def foo(n):\n    return (n - 6) // 3\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(foo(n))", "for n in [*open(0)][1:]:\n    print(int(n) // 3 - 2)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    n -= 6\n    ans = n // 3\n    print(ans)", "for _ in range(int(input())):\n    print(int(input()) // 3 - 2)", "for _ in range(int(input())):\n    n = int(input())\n    k = n - 3\n    mid = round(k / 3)\n    large = k - mid - 1\n    print(min([large - mid, mid - 1]))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    print(n // 3 - 2)\n    t -= 1", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    print(n // 3 - 2)", "for jj in range(int(input())):\n    n = int(input()) - 3\n    b = n // 3\n    a = 1\n    c = n - a - b\n    print(min(b - a, c - b))", "for _ in range(int(input())):\n    a = int(input())\n    print(a // 3 - 2)", "t = int(input())\nfor _ in range(t):\n    a = int(input())\n    a -= 6\n    print(a // 3)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    n -= 3\n    an = int(n / 3)\n    print(an - 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    ans = 0\n    ans = (n - 3) // 3 - 1\n    print(ans)", "t = int(input())\ni = 1\nwhile True:\n    if i > t:\n        break\n    n = int(input())\n    k = (n - 6) // 3\n    print(k)\n    i = i + 1", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    print((n - 3) // 3 - 1)\nt = int(input())\nfor i in range(t):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    print(n // 3 - 2)", "import sys\nline_num = 1\nfor line in sys.stdin:\n    if line_num == 1:\n        line_num += 1\n        continue\n    num = int(line.strip())\n    res = (num - 3) // 3 - 1\n    print(res)\n    line_num += 1", "t = int(input())\nfor t1 in range(t):\n    n = int(input())\n    print(n // 3 - 2)", "def main():\n    n = int(input())\n    n -= 4\n    x = n // 3\n    y = n % 3\n    if y < 2:\n        return x - 1\n    return x\nfor _ in range(int(input())):\n    print(main())", "for t in range(int(input())):\n    n = int(input())\n    print(n // 3 - 2)", "for j in range(int(input())):\n    n = int(input())\n    print(n // 3 - 2)", "k = int(input())\nwhile k:\n    n = int(input())\n    n -= 6\n    if n > 0:\n        print(n // 3)\n    else:\n        print(0)\n    k -= 1", "t = int(input())\nfor r in range(t):\n    n = int(input())\n    print(n // 3 - 2)", "for _ in range(int(input())):\n    n = int(input())\n    print(n // 3 - 2)", "cases = int(input())\nfor _ in range(cases):\n    days = int(input())\n    print((days - 6) // 3)", "o = []\nfor i in range(int(input())):\n    n = int(input())\n    kn = n - 3\n    o.append(kn // 3 - 1)\nprint(*o, sep='\\n')", "import math\nt = int(input())\nwhile t != 0:\n    n = int(input())\n    n -= 3\n    n = n // 3\n    print(n - 1)\n    t -= 1", "for cases in range(int(input())):\n    n = int(input())\n    print((n - 6) // 3)", "t = int(input())\ni = 0\nwhile i < t:\n    n = int(input())\n    print((n - 3) // 3 - 1)\n    i += 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    k = max(n - 6, 0)\n    b = [1] * 3\n    b[1] += k // 3\n    b[2] += 2 * k // 3\n    print(min(abs(b[0] - b[1]), abs(b[1] - b[2]), abs(b[2] - b[0])))", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    n -= 6\n    n //= 3\n    print(n)", "for _ in range(int(input())):\n    n = int(input())\n    print((n - 6) // 3)", "for i in range(int(input())):\n    n = int(input())\n    print(n // 3 - 2)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    print((n - 6) // 3)", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    ans = n // 3 - 2\n    sys.stdout.write(str(ans) + '\\n')", "test = int(input())\nfor t in range(test):\n    n = int(input())\n    rem = n - 3\n    print(rem // 3 - 1)"]