["import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef solve():\n    n = inp()\n    arr = inlt()\n    sor = 0\n    ans = n\n    st = set()\n    for a in arr:\n        sor ^= a\n        if sor in st or sor == 0:\n            ans -= 1\n            st.clear()\n            sor = 0\n        st.add(sor)\n    print(ans)\nfor _ in range(inp()):\n    solve()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    res = n\n    for i in range(1, n):\n        lst[i] ^= lst[i - 1]\n    st = set()\n    st.add(0)\n    for i in lst:\n        if i in st:\n            res -= 1\n            st.clear()\n        st.add(i)\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    for x in range(1, len(l)):\n        l[x] = l[x] ^ l[x - 1]\n    res = n\n    s = set()\n    s.add(0)\n    for x in l:\n        if x in s:\n            res -= 1\n            s = set()\n        s.add(x)\n    print(res)", "xx = int(input())\n\ndef cal(n, arr):\n    if n == 1:\n        return 1 if arr[0] != 0 else 0\n    t = 0\n    s = -1\n    ans = 0\n    arr += [0]\n    p = set()\n    for i in range(n + 1):\n        if arr[i] == 0:\n            ans += i - s - 1\n            s = i\n            t = 0\n            p = set()\n            continue\n        t = t ^ arr[i]\n        if t == 0 or t in p:\n            ans += i - s - 1\n            s = i\n            p = set()\n            t = 0\n        else:\n            p.add(t)\n    return ans\nfor jj in range(xx):\n    n = int(input())\n    arr = [int(i) for i in input().split(' ')]\n    print(cal(n, arr))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    res = n\n    for i in range(1, n):\n        lst[i] ^= lst[i - 1]\n    st = set()\n    st.add(0)\n    for i in lst:\n        if i in st:\n            res -= 1\n            st.clear()\n        st.add(i)\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    for x in range(1, len(l)):\n        l[x] = l[x] ^ l[x - 1]\n    res = n\n    s = set()\n    s.add(0)\n    for x in l:\n        if x in s:\n            res -= 1\n            s = set()\n        s.add(x)\n    print(res)", "for test in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    for x in range(1, len(l)):\n        l[x] = l[x] ^ l[x - 1]\n    res = n\n    s = set()\n    s.add(0)\n    for x in l:\n        if x in s:\n            res -= 1\n            s = set()\n        s.add(x)\n    print(res)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    res = n\n    for i in range(1, n):\n        lst[i] ^= lst[i - 1]\n    st = set()\n    st.add(0)\n    for i in lst:\n        if i in st:\n            res -= 1\n            st.clear()\n        st.add(i)\n    print(res)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    res = n\n    for i in range(1, n):\n        lst[i] ^= lst[i - 1]\n    st = set()\n    st.add(0)\n    for i in lst:\n        if i in st:\n            res -= 1\n            st.clear()\n        st.add(i)\n    print(res)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    res = n\n    for i in range(1, n):\n        lst[i] ^= lst[i - 1]\n    st = set()\n    st.add(0)\n    for i in lst:\n        if i in st:\n            res -= 1\n            st.clear()\n        st.add(i)\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    for x in range(1, len(l)):\n        l[x] = l[x] ^ l[x - 1]\n    res = n\n    s = set()\n    s.add(0)\n    for x in l:\n        if x in s:\n            res -= 1\n            s = set()\n        s.add(x)\n    print(res)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    res = n\n    for i in range(1, n):\n        lst[i] ^= lst[i - 1]\n    st = set()\n    st.add(0)\n    for i in lst:\n        if i in st:\n            res -= 1\n            st.clear()\n        st.add(i)\n    print(res)", "import heapq\n\ndef calc_nonzero(nums):\n    cumsums = [0]\n    cumsums_inds = {0: [0]}\n    cur = 0\n    for (i, x) in enumerate(nums, start=1):\n        cur = cur ^ x\n        if cur not in cumsums_inds:\n            cumsums_inds[cur] = []\n        cumsums_inds[cur].append(i)\n        cumsums.append(cur)\n    for (k, v) in cumsums_inds.items():\n        heapq.heapify(v)\n    max_counts = [0] * (len(nums) + 1)\n    for (i, x) in enumerate(nums, start=1):\n        max_counts[i] = max(max_counts[i], max_counts[i - 1])\n        cs = cumsums[i - 1]\n        if len(cumsums_inds[cs]) != 1:\n            _me = heapq.heappop(cumsums_inds[cs])\n            next_ind = cumsums_inds[cs][0]\n            max_counts[next_ind] = max(max_counts[next_ind], max_counts[i - 1] + 1)\n    return len(nums) - max_counts[-1]\n\ndef solve(nums):\n    nums = nums + [0]\n    res = 0\n    cur = []\n    for x in nums:\n        if x == 0:\n            if len(cur) > 0:\n                res += calc_nonzero(cur)\n            cur = []\n        else:\n            cur.append(x)\n    return res\nn = int(input())\nfor _ in range(n):\n    input()\n    nums = list(map(int, input().strip().split()))\n    print(solve(nums))", "import sys\ninput = sys.stdin.readline\nfrom random import randint\nRANDOM = randint(1, 10 ** 9)\n\nclass hf(int):\n\n    def __init__(self, x):\n        int.__init__(x)\n\n    def __hash__(self):\n        return super(hf, self).__hash__() ^ RANDOM\n\ndef readList():\n    return list(map(int, input().split()))\n\ndef readInt():\n    return int(input())\n\ndef readInts():\n    return map(int, input().split())\n\ndef readStr():\n    return input().strip()\n\ndef solve():\n    n = readInt()\n    arr = readList()\n    v = cnt = 0\n    hv = {hf(v): -1}\n    rb = -1\n    for i in range(n):\n        v = arr[i] ^ v\n        val = hf(v)\n        if val in hv and hv[val] >= rb:\n            rb = i\n            cnt += 1\n        if val not in hv:\n            hv[val] = 0\n        hv[val] = i\n    return n - cnt\nfor _ in range(int(input())):\n    print(solve())"]