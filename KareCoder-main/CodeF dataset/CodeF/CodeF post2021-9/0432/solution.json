["def solve(a):\n    n = len(a)\n    post_mex = [0] * n\n    nums = set()\n    cur_mex = 0\n    for i in range(n - 1, -1, -1):\n        nums.add(a[i])\n        while cur_mex in nums:\n            cur_mex += 1\n        post_mex[i] = cur_mex\n    i = j = 0\n    b = []\n    while i < n:\n        nums = set()\n        cur_mex = 0\n        while i < n:\n            nums.add(a[i])\n            while cur_mex in nums:\n                cur_mex += 1\n            if cur_mex == post_mex[j]:\n                break\n            i += 1\n        b.append(cur_mex)\n        i += 1\n        j = i\n    return b\nfor _ in range(int(input())):\n    input()\n    b = solve(list(map(int, input().split())))\n    print(len(b))\n    print(' '.join(map(str, b)))", "def problemC(n, arr):\n    count = {}\n    for num in arr:\n        if num not in count:\n            count[num] = 0\n        count[num] += 1\n    mexNumber = 0\n    numBag = set()\n    ans = []\n    for num in arr:\n        numBag.add(num)\n        while mexNumber in numBag:\n            mexNumber += 1\n        count[num] -= 1\n        if mexNumber not in count or count[mexNumber] == 0:\n            ans.append(str(mexNumber))\n            numBag = set()\n            mexNumber = 0\n    if len(numBag) >= 1:\n        ans.append(str(mexNumber))\n    print(len(ans))\n    print(*ans)\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    problemC(n, arr)", "from typing import Callable, List\n\ndef read(f: Callable):\n    return [f(x) for x in input().split()]\n\ndef solve(n: int, a: List[int]):\n    best_mex = 0\n    count_all = [0] * (n + 1)\n    for x in a:\n        count_all[x] += 1\n        while count_all[best_mex] > 0:\n            best_mex += 1\n    ans = []\n    count = [0] * (n + 1)\n    mex = 0\n    last_start = 0\n    for i in range(n):\n        count[a[i]] += 1\n        while count[mex] > 0:\n            mex += 1\n        if best_mex == mex:\n            ans.append(best_mex)\n            for j in range(last_start, i + 1):\n                x = a[j]\n                count_all[x] -= 1\n                count[x] -= 1\n                if count_all[x] == 0 and x < best_mex:\n                    best_mex = x\n            mex = 0\n            last_start = i + 1\n    print(len(ans))\n    print(' '.join((str(x) for x in ans)))\nfor _ in range(int(input())):\n    (n,) = read(int)\n    a = read(int)\n    solve(n, a)", "import sys\ninput = sys.stdin.readline\n\ndef solve(n, arr):\n    freq = dict()\n    for i in arr:\n        if i not in freq:\n            freq[i] = 0\n        freq[i] += 1\n    ans = []\n    i = 0\n    while i < n:\n        s = set()\n        j = 0\n        flag = True\n        while j in s or (j in freq and freq[j] > 0):\n            if j in s:\n                j += 1\n                continue\n            freq[arr[i]] -= 1\n            s.add(arr[i])\n            if arr[i] == j:\n                j += 1\n            i += 1\n            flag = False\n            if i == n:\n                while j in s:\n                    j += 1\n                break\n        if flag:\n            i += 1\n        ans.append(j)\n    return ans\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    res = solve(n, arr)\n    print(len(res))\n    print(*res)", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    n = int(inp())\n    i = 0\n    c = [[] for i in range(n + 1)]\n    for x in map(int, inp().split()):\n        c[x].append(i)\n        i += 1\n    for i in range(n + 1):\n        c[i].reverse()\n    ans = []\n    p = 0\n    while p < n:\n        m = p\n        for i in range(n + 1):\n            while c[i]:\n                z = c[i].pop()\n                if z >= p:\n                    m = max(m, z)\n                    break\n            else:\n                ans.append(i)\n                break\n        p = m + 1\n    print(len(ans))\n    print(' '.join(map(str, ans)))\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = []\n    nums = set()\n    rem = Counter(a)\n    mex = 0\n    for num in a:\n        nums.add(num)\n        rem[num] -= 1\n        while mex in nums:\n            mex += 1\n        if not rem[mex]:\n            ans.append(mex)\n            nums = set()\n            mex = 0\n    print(len(ans))\n    print(*ans)", "from collections import Counter\n\ndef solve(A):\n    counts = Counter(A)\n    p = 0\n    ret = []\n    while p < len(A):\n        upto = 0\n        while counts[upto]:\n            upto += 1\n        ret.append(upto)\n        found = [False] * upto\n        left = upto\n        while True:\n            if A[p] < upto and (not found[A[p]]):\n                found[A[p]] = True\n                left -= 1\n            counts[A[p]] -= 1\n            p += 1\n            if not left:\n                break\n    print(len(ret))\n    print(*ret)\n    return ret\nt = int(input())\nfor _ in range(t):\n    _ = input()\n    A = [int(x) for x in input().split()]\n    solve(A)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    left = Counter(a)\n    c = set()\n    ans = []\n    mex = 0\n    for i in range(n):\n        c.add(a[i])\n        while mex in c:\n            mex += 1\n        if left[mex] == 0:\n            ans.append(mex)\n            c.clear()\n            mex = 0\n        left[a[i]] -= 1\n    print(len(ans))\n    print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = []\n    sufMex = [0] * n\n    s = {a[-1]}\n    mex = 0\n    while mex in s:\n        mex += 1\n    for i in range(n - 2, -1, -1):\n        sufMex[i] = mex\n        s.add(a[i])\n        while mex in s:\n            mex += 1\n    target = mex\n    mex = 0\n    numSet = set()\n    for i in range(n):\n        numSet.add(a[i])\n        while mex in numSet:\n            mex += 1\n        if target == mex:\n            ans.append(mex)\n            target = sufMex[i]\n            mex = 0\n            numSet.clear()\n    if len(numSet) > 0:\n        ans.append(mex)\n    print(len(ans))\n    print(*ans)", "import sys\nfrom collections import Counter\ninput = sys.stdin.readline\nMAX = sys.maxsize\nsys.setrecursionlimit(10 ** 9)\n\ndef inp():\n    return int(input())\n\ndef read_int_list():\n    return list(map(int, input().split()))\n\ndef find_mex(freq):\n    for (index, f) in enumerate(freq):\n        if f == 0:\n            return index\n\ndef solve(a):\n    freq = [0] * (len(a) + 1)\n    for value in a:\n        freq[value] += 1\n    mex = find_mex(freq)\n    res = [mex]\n    i = 0\n    while i < len(a):\n        to_remove = mex\n        if mex == 0:\n            to_remove = 1\n        touched = set()\n        while to_remove > 0 and i < len(a):\n            value = a[i]\n            freq[value] -= 1\n            if value < mex and value not in touched:\n                touched.add(value)\n                to_remove -= 1\n            i += 1\n            if mex == 0:\n                break\n        if i < len(a):\n            mex = find_mex(freq)\n            res.append(mex)\n    print(len(res))\n    print(*res)\nfor _ in range(inp()):\n    _ = inp()\n    a = read_int_list()\n    solve(a)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    count = Counter(lst)\n    a_set = set()\n    mex = 0\n    b = []\n    for j in lst:\n        count[j] -= 1\n        a_set.add(j)\n        while mex in a_set:\n            mex += 1\n        if count[mex] == 0:\n            b.append(mex)\n            a_set.clear()\n            mex = 0\n    print(len(b))\n    print(*b)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    mex_f = []\n    curr_mex = 0\n    seen = {}\n    for i in range(n - 1, -1, -1):\n        seen[arr[i]] = True\n        if curr_mex in seen:\n            while curr_mex in seen:\n                curr_mex += 1\n        mex_f.append(curr_mex)\n    mex_f = mex_f[::-1]\n    ans = []\n    i = 0\n    while i < n:\n        mz = 0\n        seen = {}\n        for j in range(i, n):\n            seen[arr[j]] = True\n            while mz in seen:\n                mz += 1\n            if mz == mex_f[i]:\n                ans.append(mz)\n                i = j + 1\n                break\n    print(len(ans))\n    ans = [str(i) for i in ans]\n    print(' '.join(ans))", "import sys\nimport re\nimport math\nfrom math import log2 as lg\nfrom math import gcd\nfrom decimal import *\nfrom collections import deque\nimport random\nimport heapq\nimport itertools\nimport datetime\nconst = 1000000007\nep = 1e-08\n\ndef get():\n    return list(map(int, input().split()))\nn = int(input())\nfor i in range(n):\n    m = int(input())\n    lst = get()\n    d = {}\n    for term in lst:\n        if term in d:\n            d[term] += 1\n        else:\n            d[term] = 1\n    mex = 0\n    store = {}\n    ans = []\n    j = 0\n    while j < m:\n        if mex in d and d[mex] > 0:\n            while lst[j] != mex:\n                curr = lst[j]\n                store[curr] = 0\n                d[curr] -= 1\n                j += 1\n            store[lst[j]] = 0\n            d[lst[j]] -= 1\n            j += 1\n            while mex in store:\n                mex += 1\n        elif mex == 0:\n            break\n        else:\n            ans.append(mex)\n            mex = 0\n            store = {}\n    if mex > 0:\n        ans.append(mex)\n    while j < m:\n        ans.append(0)\n        j += 1\n    print(len(ans))\n    ans = list(map(str, ans))\n    print(' '.join(ans))", "for _ in range(int(input())):\n    n = int(input())\n    aa = [int(a) for a in input().split()]\n    mx = 0\n    mexs = [0] * n\n    found = set()\n    for (i, a) in enumerate(aa[::-1], 1):\n        found.add(a)\n        if a == mx:\n            while mx in found:\n                mx += 1\n        mexs[-i] = mx\n    res = []\n    mx = 0\n    found = set()\n    lp = 0\n    for (i, a) in enumerate(aa):\n        found.add(a)\n        if a == mx:\n            while mx in found:\n                mx += 1\n        if mx == mexs[lp]:\n            res.append(mx)\n            mx = 0\n            found.clear()\n            lp = i + 1\n    print(len(res))\n    print(*res)", "import sys\ninput = sys.stdin.readline\nsuffix = [0] * (2 * 10 ** 5 + 1)\n\ndef find_first(p):\n    exist = dict()\n    mex = 0\n    for i in range(p, n):\n        exist[a[i]] = 1\n        while mex in exist:\n            mex += 1\n        if mex == suffix[p]:\n            return i\n    return n\nfor _ in range(int(input().strip())):\n    exist = [0] * (2 * 10 ** 5 + 1)\n    n = int(input().strip())\n    a = list(map(int, input().split()))\n    mex = 0\n    b = []\n    for i in reversed(range(n)):\n        exist[a[i]] = 1\n        while exist[mex]:\n            mex += 1\n        suffix[i] = mex\n    p = 0\n    while p < n:\n        b.append(suffix[p])\n        p = find_first(p) + 1\n    print(len(b))\n    print(*b)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    rem = Counter(a)\n    c = set()\n    ans = []\n    mex = 0\n    for i in range(n):\n        c.add(a[i])\n        while mex in c:\n            mex += 1\n        if rem[mex] == 0:\n            ans.append(mex)\n            c.clear()\n            mex = 0\n        rem[a[i]] -= 1\n    print(len(ans))\n    print(*ans)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    rem = Counter(a)\n    c = set()\n    ans = []\n    mex = 0\n    for i in range(n):\n        c.add(a[i])\n        while mex in c:\n            mex += 1\n        if rem[mex] == 0:\n            ans.append(mex)\n            c.clear()\n            mex = 0\n        rem[a[i]] -= 1\n    print(len(ans))\n    print(*ans)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    rem = Counter(a)\n    c = set()\n    ans = []\n    mex = 0\n    for i in range(n):\n        c.add(a[i])\n        while mex in c:\n            mex += 1\n        if rem[mex] == 0:\n            ans.append(mex)\n            c.clear()\n            mex = 0\n        rem[a[i]] -= 1\n    print(len(ans))\n    print(*ans)", "for w in range(0, int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    counts = [0] * (n + 1)\n    for x in arr:\n        counts[x] += 1\n    b = []\n    p = 0\n    target = counts.index(0)\n    while p < n:\n        found = [False] * target\n        s = 0\n        new_target = target\n        if target == 0:\n            e = arr[p]\n            counts[e] -= 1\n            p += 1\n        while s < target:\n            e = arr[p]\n            counts[e] -= 1\n            if counts[e] == 0:\n                new_target = min(new_target, e)\n            if e < target and (not found[e]):\n                found[e] = True\n                s += 1\n            p += 1\n            if p == n:\n                break\n        if s == target:\n            b.append(target)\n        else:\n            b.append(found.index(False))\n        target = new_target\n    print(len(b))\n    print(' '.join((str(x) for x in b)))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    suf = [0 for i in range(n + 1)]\n    s = set()\n    for i in range(n - 1, -1, -1):\n        suf[i] = suf[i + 1]\n        s.add(a[i])\n        while suf[i] in s:\n            suf[i] += 1\n    i = 0\n    b = []\n    while i < n:\n        s = set()\n        mex = 0\n        for j in range(i, n):\n            s.add(a[j])\n            while mex in s:\n                mex += 1\n            if mex == suf[i]:\n                b.append(mex)\n                i = j + 1\n                break\n    print(len(b))\n    print(' '.join(map(str, b)))", "import sys\ninput = sys.stdin.readline\nMAX = sys.maxsize\nsys.setrecursionlimit(10 ** 9)\n\ndef inp():\n    return int(input())\n\ndef read_int_list():\n    return list(map(int, input().split()))\n\ndef find_mex(freq):\n    for (index, f) in enumerate(freq):\n        if f == 0:\n            return index\n\ndef solve(a):\n    freq = [0] * (len(a) + 1)\n    for value in a:\n        freq[value] += 1\n    mex = find_mex(freq)\n    res = [mex]\n    i = 0\n    while i < len(a):\n        to_remove = 1 if mex == 0 else mex\n        touched = set()\n        while to_remove > 0 and i < len(a):\n            value = a[i]\n            freq[value] -= 1\n            if value < mex and value not in touched:\n                touched.add(value)\n                to_remove -= 1\n            i += 1\n            if mex == 0:\n                break\n        if i < len(a):\n            mex = find_mex(freq)\n            res.append(mex)\n    print(len(res))\n    print(*res)\nfor _ in range(inp()):\n    _ = inp()\n    a = read_int_list()\n    solve(a)", "import math\nmod = 998244353\n\ndef catalan(n):\n    return int(math.factorial(2 * n) // (math.factorial(n) * math.factorial(n + 1))) % mod\n\ndef C(n, k):\n    return math.comb(n, k)\n\ndef binpow(a, n):\n    if n == 0:\n        return 1 % mod\n    x = binpow(a, n // 2)\n    if n % 2 == 0:\n        return x * x % mod\n    else:\n        return x * x * a % mod\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    rem = Counter(a)\n    c = set()\n    ans = []\n    mex = 0\n    for i in range(n):\n        c.add(a[i])\n        while mex in c:\n            mex += 1\n        if rem[mex] == 0:\n            ans.append(mex)\n            c.clear()\n            mex = 0\n        rem[a[i]] -= 1\n    print(len(ans))\n    print(*ans)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    rem = Counter(a)\n    s = set()\n    ans = []\n    mex = 0\n    for i in range(n):\n        s.add(a[i])\n        while mex in s:\n            mex += 1\n        if rem[mex] == 0:\n            ans.append(mex)\n            s.clear()\n            mex = 0\n        rem[a[i]] -= 1\n    print(len(ans))\n    print(*ans)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    rem = Counter(a)\n    s = set()\n    ans = []\n    mex = 0\n    for i in range(n):\n        s.add(a[i])\n        while mex in s:\n            mex += 1\n        if rem[mex] == 0:\n            ans.append(mex)\n            s.clear()\n            mex = 0\n        rem[a[i]] -= 1\n    print(len(ans))\n    print(*ans)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    rem = Counter(a)\n    c = set()\n    ans = []\n    mex = 0\n    for i in range(n):\n        c.add(a[i])\n        while mex in c:\n            mex += 1\n        if rem[mex] == 0:\n            ans.append(mex)\n            c.clear()\n            mex = 0\n        rem[a[i]] -= 1\n    print(len(ans))\n    print(*ans)", "from collections import Counter\nfor iii in range(int(input())):\n    n = int(input())\n    q = list(map(int, input().split()))\n    rem = Counter(q)\n    c = set()\n    ans = []\n    mex = 0\n    for i in range(n):\n        c.add(q[i])\n        while mex in c:\n            mex += 1\n        if rem[mex] == 0:\n            ans.append(mex)\n            c.clear()\n            mex = 0\n        rem[q[i]] -= 1\n    print(len(ans))\n    print(*ans)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    rem = Counter(a)\n    c = set()\n    ans = []\n    mex = 0\n    for i in range(n):\n        c.add(a[i])\n        while mex in c:\n            mex += 1\n        if rem[mex] == 0:\n            ans.append(mex)\n            c.clear()\n            mex = 0\n        rem[a[i]] -= 1\n    print(len(ans))\n    print(*ans)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    rem = Counter(a)\n    s = set()\n    ans = []\n    mex = 0\n    for i in range(n):\n        s.add(a[i])\n        while mex in s:\n            mex += 1\n        if rem[mex] == 0:\n            ans.append(mex)\n            s.clear()\n            mex = 0\n        rem[a[i]] -= 1\n    print(len(ans))\n    print(*ans)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = set()\n    data = Counter(a)\n    m = 0\n    b = []\n    for i in range(n):\n        s.add(a[i])\n        while m in s:\n            m += 1\n        if data[m] == 0:\n            b.append(m)\n            m = 0\n            s.clear()\n        data[a[i]] -= 1\n    print(len(b))\n    print(*b)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    rem = Counter(a)\n    c = set()\n    ans = []\n    mex = 0\n    for i in range(n):\n        c.add(a[i])\n        while mex in c:\n            mex += 1\n        if rem[mex] == 0:\n            ans.append(mex)\n            c.clear()\n            mex = 0\n        rem[a[i]] -= 1\n    print(len(ans))\n    print(*ans)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    q = list(map(int, input().split()))\n    rem = Counter(q)\n    c = set()\n    ans = []\n    mex = 0\n    for i in range(n):\n        c.add(q[i])\n        while mex in c:\n            mex += 1\n        if rem[mex] == 0:\n            ans.append(mex)\n            c.clear()\n            mex = 0\n        rem[q[i]] -= 1\n    print(len(ans))\n    print(*ans)", "ans = []\nrazm = []\nfor _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    used = [0] * (n + 2)\n    ok = [0] * (n + 2)\n    num = 1\n    for i in range(n):\n        used[x[i]] += 1\n    for i in range(n + 2):\n        if used[i] == 0:\n            k = i - 1\n            break\n    k1 = k\n    otv = []\n    j = 0\n    for i in range(n):\n        used[x[i]] -= 1\n        if x[i] <= k1 and used[x[i]] == 0:\n            k1 = x[i] - 1\n        ok[x[i]] = num\n        while ok[j] == num:\n            j += 1\n        if k + 1 == j:\n            otv.append(k + 1)\n            k = k1\n            num += 1\n            j = 0\n    razm.append(len(otv))\n    ans.append(otv)\nfor i in range(len(ans)):\n    print(razm[i])\n    print(' '.join([str(j) for j in ans[i]]))", "import sys\ninput = lambda : sys.stdin.readline().strip()\nsys.setrecursionlimit(10 ** 9)\nfor _ in [0] * int(input()):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    c = [0] * (n + 2)\n    for i in range(n):\n        c[a[i]] += 1\n    for i in range(n + 2):\n        if c[i] == 0:\n            mex = nmex = i\n            break\n    s = set()\n    check = 0\n    for i in range(n):\n        if len(s) == mex and check:\n            b += [mex]\n            mex = nmex\n            s = set()\n            check = 0\n        if a[i] < mex:\n            s.add(a[i])\n        c[a[i]] -= 1\n        if c[a[i]] == 0:\n            nmex = min(nmex, a[i])\n        check = 1\n    if len(s) == mex and check:\n        b += [mex]\n    print(len(b))\n    print(*b)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = set()\n    m = 0\n    l = []\n    rep = Counter(a)\n    for i in range(n):\n        s.add(a[i])\n        while m in s:\n            m = m + 1\n        if rep[m] == 0:\n            l.append(m)\n            s.clear()\n            m = 0\n        rep[a[i]] -= 1\n    print(len(l))\n    print(*l)", "from collections import deque\n\ndef mex(l):\n    m = max(l)\n    res = set([i for i in range(m + 2)])\n    for i in l:\n        if i in res:\n            res.remove(i)\n    return min(res)\n\ndef foo(l, mex):\n    if mex == 0:\n        l.popleft()\n        return (l, mex)\n    res = set([i for i in range(mex)])\n    while l:\n        if not res:\n            break\n        else:\n            k = l.popleft()\n            d[k] -= 1\n            if d[k] == 0:\n                del d[k]\n                mex = min(mex, k)\n            if k in res:\n                res.remove(k)\n    return (l, mex)\nfor _ in range(int(input())):\n    n = int(input())\n    l = deque(list(map(int, input().split())))\n    ans = []\n    d = {}\n    for i in l:\n        d[i] = d.get(i, 0) + 1\n    m = mex(l)\n    while l:\n        ans.append(m)\n        (l, m) = foo(l, m)\n    print(len(ans))\n    print(*ans)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = set()\n    m = 0\n    l = []\n    rep = Counter(a)\n    for i in range(n):\n        s.add(a[i])\n        while m in s:\n            m = m + 1\n        if rep[m] == 0:\n            l.append(m)\n            s.clear()\n            m = 0\n        rep[a[i]] -= 1\n    print(len(l))\n    print(*l)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    rem = Counter(a)\n    c = set()\n    ans = []\n    mex = 0\n    for i in range(n):\n        c.add(a[i])\n        while mex in c:\n            mex += 1\n        if rem[mex] == 0:\n            ans.append(mex)\n            c.clear()\n            mex = 0\n        rem[a[i]] -= 1\n    print(len(ans))\n    print(*ans)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    rem = Counter(a)\n    c = set()\n    ans = []\n    mex = 0\n    for i in range(n):\n        c.add(a[i])\n        while mex in c:\n            mex += 1\n        if rem[mex] == 0:\n            ans.append(mex)\n            c.clear()\n            mex = 0\n        rem[a[i]] -= 1\n    print(len(ans))\n    print(*ans)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    rem = Counter(a)\n    c = set()\n    ans = []\n    mex = 0\n    for i in range(n):\n        c.add(a[i])\n        while mex in c:\n            mex += 1\n        if rem[mex] == 0:\n            ans.append(mex)\n            c.clear()\n            mex = 0\n        rem[a[i]] -= 1\n    print(len(ans))\n    print(*ans)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    q = list(map(int, input().split()))\n    rem = Counter(q)\n    c = set()\n    ans = []\n    mex = 0\n    for i in range(n):\n        c.add(q[i])\n        while mex in c:\n            mex += 1\n        if rem[mex] == 0:\n            ans.append(mex)\n            c.clear()\n            mex = 0\n        rem[q[i]] -= 1\n    print(len(ans))\n    print(*ans)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    q = list(map(int, input().split()))\n    rem = Counter(q)\n    c = set()\n    ans = []\n    mex = 0\n    for i in range(n):\n        c.add(q[i])\n        while mex in c:\n            mex += 1\n        if rem[mex] == 0:\n            ans.append(mex)\n            c.clear()\n            mex = 0\n        rem[q[i]] -= 1\n    print(len(ans))\n    print(*ans)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    rem = Counter(a)\n    c = set()\n    ans = []\n    mex = 0\n    for i in range(n):\n        c.add(a[i])\n        while mex in c:\n            mex += 1\n        if rem[mex] == 0:\n            ans.append(mex)\n            c.clear()\n            mex = 0\n        rem[a[i]] -= 1\n    print(len(ans))\n    print(*ans)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    cnt = [0] * (n + 1)\n    for x in a:\n        cnt[x] += 1\n    p = 0\n    ans = []\n    while p < n:\n        mex = 0\n        while cnt[mex] > 0:\n            mex += 1\n        ans.append(mex)\n        used = [False] * mex\n        cnt_used = 0\n        while True:\n            if a[p] < mex and (not used[a[p]]):\n                used[a[p]] = True\n                cnt_used += 1\n            cnt[a[p]] -= 1\n            p += 1\n            if cnt_used == mex:\n                break\n    print(len(ans))\n    print(*ans)", "from collections import Counter\nfor iiii in range(int(input())):\n    n = int(input())\n    q = list(map(int, input().split()))\n    q1 = Counter(q)\n    s = set()\n    cou = 0\n    q2 = []\n    for i in range(n):\n        s.add(q[i])\n        q1[q[i]] -= 1\n        while cou in s:\n            cou += 1\n        if cou not in q1 or q1[cou] == 0:\n            q2.append(cou)\n            s = set()\n            cou = 0\n    print(len(q2))\n    print(*q2)", "import sys\ninput = sys.stdin.readline\nnum_test_cases = int(input())\nfor test_case_ittr in range(num_test_cases):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    n = len(arr)\n    indices = dict()\n    for i in range(len(arr) - 1, -1, -1):\n        x = arr[i]\n        if x not in indices:\n            indices[x] = [i]\n        else:\n            indices[x] += [i]\n    ans = []\n    i_start = 0\n    while i_start < n:\n        i_end = i_start\n        mex = 0\n        while mex in indices and indices[mex]:\n            j = indices[mex].pop()\n            if j < i_start:\n                continue\n            i_end = max(i_end, j)\n            mex += 1\n        ans += [mex]\n        i_start = i_end + 1\n    print(len(ans))\n    print(*ans)", "def f(n, arr):\n    dct = {}\n    for (i, k) in enumerate(arr):\n        if k not in dct:\n            dct[k] = set()\n        dct[k].add(i)\n    s_arr = sorted(arr)\n    if s_arr[0] != 0:\n        m = 0\n        print(n)\n        print(' '.join(['0'] * n))\n        return\n    else:\n        for i in range(1, n):\n            if s_arr[i] - s_arr[i - 1] > 1:\n                m = s_arr[i - 1] + 1\n                break\n        else:\n            m = s_arr[-1] + 1\n    res = []\n    new_m = None\n    current = set()\n    for (i, k) in enumerate(arr):\n        if m == 0:\n            res.append(0)\n            continue\n        if k < m:\n            current.add(k)\n        dct[k].remove(i)\n        if len(dct[k]) == 0 and k < m and (new_m is None or k < new_m):\n            new_m = k\n        if len(current) == m:\n            res.append(m)\n            current.clear()\n            if new_m is not None:\n                m = new_m\n    if len(current) > 0:\n        res.append(m)\n    print(len(res))\n    print(' '.join(map(str, res)))\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = [int(el) for el in input().split(' ')]\n    f(n, arr)", "from collections import Counter\n\ndef mex_array():\n    mex_arr_val = 0\n    while mex_arr_val <= n:\n        if mex_arr_val not in set_arr:\n            return mex_arr_val\n        mex_arr_val += 1\n    return mex_arr_val\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(item) for item in input().split()]\n    cnt = Counter(arr)\n    set_arr = set(arr)\n    ans = []\n    i = 0\n    while i < n:\n        m_mex = mex_array()\n        s_set = set()\n        while i < n:\n            if arr[i] < m_mex:\n                s_set.add(arr[i])\n            cnt[arr[i]] -= 1\n            if cnt[arr[i]] == 0:\n                set_arr.remove(arr[i])\n            if len(s_set) == m_mex:\n                break\n            i += 1\n        ans.append(m_mex)\n        i += 1\n    print(len(ans))\n    print(*ans)", "from collections import Counter\n\ndef mex():\n    mex_val = 0\n    while mex_val <= n:\n        if mex_val not in s:\n            return mex_val\n        mex_val += 1\n    return mex_val\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(item) for item in input().split()]\n    c = Counter(arr)\n    s = set(arr)\n    ans = []\n    i = 0\n    while i < n:\n        m = mex()\n        z = set()\n        while i < n:\n            if arr[i] < m:\n                z.add(arr[i])\n            c[arr[i]] -= 1\n            if c[arr[i]] == 0:\n                s.remove(arr[i])\n            if len(z) == m:\n                break\n            i += 1\n        ans.append(m)\n        i += 1\n    print(len(ans))\n    print(*ans)", "import collections\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    h = dict(collections.Counter(a))\n    mex = -1\n    m = max(a)\n    for i in range(m + 2):\n        if not i in h:\n            mex = i\n            break\n    curr = mex\n    i = 0\n    b = []\n    while i < n:\n        if mex == 0:\n            while i < n:\n                b.append(0)\n                i += 1\n            break\n        k = set()\n        for j in range(mex):\n            k.add(j)\n        while i < n and len(k) > 0:\n            if a[i] in k:\n                k.remove(a[i])\n            h[a[i]] -= 1\n            if h[a[i]] == 0 and a[i] < curr:\n                curr = a[i]\n            i += 1\n        if len(k) == 0:\n            b.append(mex)\n        else:\n            for j in range(mex + 1):\n                if not j in k:\n                    b.append(j)\n                    break\n        mex = curr\n    print(len(b))\n    for i in b:\n        print(i, end=' ')\n    print()", "import sys\nfrom math import *\nfrom math import *\nfrom functools import *\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    h = {}\n    for i in a:\n        h[i] = h.get(i, 0) + 1\n    i = 0\n    j = 0\n    s = set()\n    k = 0\n    while i < n:\n        if j in h:\n            if h[j] > 1:\n                h[j] -= 1\n            else:\n                h.pop(j)\n            while i < n and a[i] != j:\n                if h[a[i]] > 1:\n                    h[a[i]] -= 1\n                else:\n                    h.pop(a[i])\n                s.add(a[i])\n                i += 1\n            s.add(j)\n            while k in s:\n                k += 1\n            j = k\n            i += 1\n        else:\n            if j == 0:\n                i += 1\n            b.append(j)\n            j = 0\n            k = 0\n            s = set()\n    if j != 0:\n        b.append(j)\n    print(len(b))\n    print(*b)", "def solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = []\n    d = {}\n    for i in range(len(arr)):\n        if arr[i] in d:\n            d[arr[i]] += 1\n        else:\n            d[arr[i]] = 1\n    index = 0\n    while True:\n        mex = 0\n        for i in range(len(d) + 1):\n            if i not in d:\n                mex = i\n                ans.append(i)\n                break\n        temp = {}\n        index2 = index\n        iszero = False\n        for i in range(index, len(arr)):\n            if arr[i] not in temp and arr[i] < mex:\n                temp[arr[i]] = 1\n            if arr[i] in d:\n                d[arr[i]] -= 1\n            if d[arr[i]] <= 0:\n                d.pop(arr[i])\n            if len(temp) >= mex:\n                break\n            index2 += 1\n        index = index2 + 1\n        if index >= n:\n            break\n    print(len(ans))\n    for i in ans:\n        print(i, end=' ')\n    print()\n    return\nfor _ in range(int(input())):\n    solve()", "import math\nfrom collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    d = defaultdict(lambda : 0)\n    s = set()\n    rev = A[::-1]\n    dp = [0] * n\n    curr = 0\n    for i in range(n):\n        d[rev[i]] += 1\n        while d[curr] > 0:\n            curr += 1\n        dp[i] = curr\n    dp = dp[::-1]\n    i = 0\n    st = 0\n    ans = []\n    last = False\n    while i < n:\n        while i < n and len(s) < dp[st]:\n            if A[i] < dp[st]:\n                s.add(A[i])\n            last = True\n            i += 1\n        if len(s) == dp[st]:\n            s = set()\n            ans.append(dp[st])\n            if i < n:\n                st = i\n        if not last:\n            i += 1\n        last = False\n    print(len(ans))\n    print(*ans)", "from collections import Counter\n\ndef mex():\n    mex_val = 0\n    while mex_val <= n:\n        if mex_val not in s:\n            return mex_val\n        mex_val += 1\n    return mex_val\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(item) for item in input().split()]\n    c = Counter(arr)\n    s = set(arr)\n    ans = []\n    i = 0\n    while i < n:\n        m = mex()\n        z = set()\n        while i < n:\n            if arr[i] < m:\n                z.add(arr[i])\n            c[arr[i]] -= 1\n            if c[arr[i]] == 0:\n                s.remove(arr[i])\n            if len(z) == m:\n                break\n            i += 1\n        ans.append(m)\n        i += 1\n    print(len(ans))\n    print(*ans)", "from collections import Counter\n\ndef mex():\n    mex_val = 0\n    while mex_val <= n:\n        if mex_val not in s:\n            return mex_val\n        mex_val += 1\n    return mex_val\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(item) for item in input().split()]\n    c = Counter(arr)\n    s = set(arr)\n    ans = []\n    i = 0\n    while i < n:\n        m = mex()\n        z = set()\n        while i < n:\n            if arr[i] < m:\n                z.add(arr[i])\n            c[arr[i]] -= 1\n            if c[arr[i]] == 0:\n                s.remove(arr[i])\n            if len(z) == m:\n                break\n            i += 1\n        ans.append(m)\n        i += 1\n    print(len(ans))\n    print(*ans)", "n = int(input())\nfor _ in range(n):\n    m = int(input())\n    numbers = list(map(int, input().split()))\n    counter = [0] * (m + 1)\n    for number in numbers:\n        counter[number] += 1\n    answer = []\n    index = 0\n    while True:\n        mex = 0\n        while counter[mex] > 0:\n            mex += 1\n        answer.append(mex)\n        used = [False] * mex\n        if mex == 0:\n            counter[numbers[index]] -= 1\n            index += 1\n        while mex and index < m:\n            if numbers[index] < len(used) and (not used[numbers[index]]):\n                used[numbers[index]] = True\n                mex -= 1\n            counter[numbers[index]] -= 1\n            index += 1\n        if index >= m:\n            break\n    print(len(answer))\n    print(*answer)", "for u in range(int(input())):\n    n = int(input())\n    x = [int(w) for w in input().split()]\n    suffix_mex = [0] * (n + 1)\n    s = set()\n    for i in range(n - 1, -1, -1):\n        suffix_mex[i] = suffix_mex[i + 1]\n        s.add(x[i])\n        while suffix_mex[i] in s:\n            suffix_mex[i] += 1\n    idx = 0\n    ans = []\n    while idx < n:\n        s = set()\n        temp = 0\n        for j in range(idx, n):\n            s.add(x[j])\n            while temp in s:\n                temp += 1\n            if temp == suffix_mex[idx]:\n                ans.append(temp)\n                idx = j + 1\n                break\n    print(len(ans))\n    print(*ans)", "import math, sys\ninput = sys.stdin.readline\nS = lambda : input().rstrip()\nI = lambda : int(S())\nM = lambda : map(int, S().split())\nL = lambda : list(M())\nmod1 = 1000000007\nmod2 = 998244353\nfor _ in range(I()):\n    n = I()\n    a = L()\n    b = []\n    d = {}\n    cur = 0\n    for i in range(n):\n        d[a[i]] = d.get(a[i], 0) + 1\n    for i in range(n + 1):\n        if d.get(i, 0) == 0:\n            cur = i\n            break\n    i = 0\n    while i < n:\n        if cur == 0:\n            i += 1\n            b.append(cur)\n            continue\n        j = i\n        m = cur\n        s = set()\n        while j < n:\n            if len(s) == cur:\n                break\n            d[a[j]] -= 1\n            if d[a[j]] == 0:\n                m = min(m, a[j])\n            if a[j] < cur and a[j] not in s:\n                s.add(a[j])\n            j += 1\n        b.append(cur)\n        i = j\n        cur = m\n    print(len(b))\n    print(*b)", "for lll in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    c = [0] * 200001\n    for j in range(n):\n        c[a[j]] += 1\n    t = 0\n    i = 0\n    while t == 0:\n        cc = 0\n        while c[cc] > 0:\n            cc += 1\n        if cc == 0:\n            t = 1\n            for k in range(n - i):\n                b.append(0)\n            break\n        else:\n            b.append(cc)\n            dc = [1] * cc\n            nc = cc\n            while i < n:\n                if a[i] < cc:\n                    if dc[a[i]] == 1:\n                        dc[a[i]] = 0\n                        nc -= 1\n                c[a[i]] -= 1\n                i += 1\n                if nc == 0:\n                    break\n            if i == n:\n                break\n    print(len(b))\n    print(*b)", "from collections import deque\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    data = {}\n    ans = []\n    for i in range(n):\n        if a[i] not in data:\n            data[a[i]] = deque()\n            data[a[i]].appendleft(i)\n        else:\n            data[a[i]].appendleft(i)\n    idx = -1\n    while idx < n - 1:\n        mex = 0\n        idx2 = idx\n        while mex in data and data[mex]:\n            get = data[mex].pop()\n            if get > idx:\n                idx2 = max(idx2, get)\n                mex += 1\n        idx = idx2\n        if mex:\n            ans.append(mex)\n        else:\n            ans += [0] * (n - idx - 1)\n            break\n    print(len(ans))\n    print(*ans)", "import sys\nfrom collections import deque\n\ndef rl():\n    return sys.stdin.readline().rstrip()\n\ndef ri():\n    return int(rl())\n\ndef ril():\n    return [int(x) for x in rl().split(' ')]\n\ndef main():\n    t = ri()\n    for _ in range(t):\n        n = ri()\n        a_arr = ril()\n        occs = [deque([]) for _ in range(n + 1)]\n        for (idx, a) in enumerate(a_arr):\n            occs[a].append(idx)\n        b_arr = []\n        cur_idx = 0\n        next_idx = cur_idx\n        while cur_idx < n:\n            for val in range(n + 1):\n                while len(occs[val]) > 0 and occs[val][0] < cur_idx:\n                    occs[val].popleft()\n                if len(occs[val]) == 0:\n                    b_arr.append(val)\n                    cur_idx = next_idx + 1\n                    next_idx = cur_idx\n                    break\n                else:\n                    next_idx = max(next_idx, occs[val][0])\n        print(len(b_arr))\n        print(' '.join([str(x) for x in b_arr]))\nmain()", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = []\n    i = 0\n    counter = Counter(l)\n    while i < n:\n        j = 0\n        while j in counter and counter[j] > 0:\n            j += 1\n        ans.append(j)\n        sett = set()\n        if j == 0:\n            counter[l[i]] -= 1\n            i += 1\n        while len(sett) < j:\n            if l[i] < j:\n                sett.add(l[i])\n                counter[l[i]] -= 1\n            i += 1\n        j = 0\n        sett.clear()\n    print(len(ans))\n    print(*ans)", "from collections import defaultdict\n\ndef solve(arr):\n    places = defaultdict(list)\n    pointer = {}\n    for i in range(len(arr)):\n        places[arr[i]].append(i)\n        pointer[arr[i]] = 0\n    if places[0] == []:\n        return [0 for _ in range(len(arr))]\n    res = []\n    starting_point = 0\n    while starting_point < len(arr):\n        while pointer.get(0, 0) < len(places[0]) and places[0][pointer[0]] < starting_point:\n            pointer[0] += 1\n        if pointer.get(0, 0) >= len(places[0]):\n            res.append(0)\n            starting_point += 1\n            continue\n        end_position = starting_point\n        new_val = 0\n        for num in range(0, 10 ** 7):\n            p = pointer.get(num, -1)\n            if p == -1:\n                break\n            while p < len(places[num]) and places[num][p] < starting_point:\n                p += 1\n            pointer[num] = p\n            if p == len(places[num]):\n                break\n            end_position = max(end_position, places[num][p])\n            new_val = num\n        res.append(new_val + 1)\n        starting_point = end_position + 1\n    return res\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    solution = solve(arr)\n    print(len(solution))\n    print(' '.join(map(str, solution)))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ind = [[] for _ in range(n + 1)]\n    for i in range(n):\n        ind[a[i]].append(i)\n    for i in range(n + 1):\n        ind[i].reverse()\n    mex = 0\n    while ind[mex]:\n        mex += 1\n    start = 0\n    b = []\n    while start < n and mex > 0:\n        b.append(mex)\n        end = start\n        for j in range(mex):\n            end = max(end, ind[j][-1])\n        for j in range(mex):\n            while ind[j] and ind[j][-1] <= end:\n                ind[j].pop()\n            if not ind[j]:\n                mex = min(mex, j)\n        start = end + 1\n    if start < n:\n        b += [0] * (n - start)\n    print(len(b))\n    print(*b)", "from collections import deque\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    deques = []\n    for i in range(n + 1):\n        deques.append(deque())\n    for i in range(n):\n        deques[arr[i]].append(i)\n    res = []\n    lastInd = -1\n    while True:\n        index = -1\n        last = -1\n        for i in range(n):\n            if deques[i]:\n                index = max(index, deques[i][0])\n                last = i\n            else:\n                break\n        for i in range(0, last + 1):\n            while deques[i] and deques[i][0] <= index:\n                deques[i].popleft()\n        if last == -1:\n            for i in range(n - lastInd - 1):\n                res.append(0)\n            break\n        else:\n            res.append(last + 1)\n            lastInd = index\n    size = res.__len__()\n    print(size)\n    for i in range(size):\n        print(res[i], end=' ')\n    print()", "import sys\nfrom collections import deque\ninput = lambda : sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    d = [deque() for i in range(n + 1)]\n    for i in range(n):\n        d[a[i]].append(i)\n    (ans, s) = ([], 0)\n    while s < n:\n        (m, mex) = (s, 0)\n        for i in range(n + 1):\n            if len(d[i]) == 0:\n                break\n            m = max(m, d[i][0])\n            mex += 1\n        ans.append(mex)\n        for i in range(s, m + 1):\n            d[a[i]].popleft()\n        s = m + 1\n    print(len(ans))\n    print(*ans)", "import sys\nfrom collections import deque\ninput = lambda : sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    d = [deque() for i in range(n + 1)]\n    for i in range(n):\n        d[a[i]].append(i)\n    (ans, s) = ([], 0)\n    while s < n:\n        (m, mex) = (s, 0)\n        for i in range(n + 1):\n            if len(d[i]) == 0:\n                break\n            m = max(m, d[i][0])\n            mex += 1\n        ans.append(mex)\n        for i in range(s, m + 1):\n            d[a[i]].popleft()\n        s = m + 1\n    print(len(ans))\n    print(*ans)", "import time\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    data = {}\n    ans = []\n    for i in range(n):\n        if a[i] not in data:\n            data[a[i]] = [i]\n        else:\n            data[a[i]].append(i)\n    idx = -1\n    while idx < n - 1:\n        mex = 0\n        idx2 = idx\n        while mex in data and data[mex] != []:\n            if data[mex][0] <= idx:\n                del data[mex][0]\n            else:\n                idx2 = max(idx2, data[mex][0])\n                mex += 1\n        idx = idx2\n        if mex:\n            ans.append(mex)\n        else:\n            ans += [0] * (n - idx - 1)\n            break\n    print(len(ans))\n    print(*ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().strip().split()]\n    d = [0] * 200001\n    mex_from_last = [0 for i in range(n)]\n    curr_mex = 0\n    for i in range(n - 1, -1, -1):\n        d[a[i]] = 1\n        while d[curr_mex]:\n            curr_mex += 1\n        mex_from_last[i] = curr_mex\n    b = []\n    d = [0] * 200001\n    curr_mex = 0\n    target = mex_from_last[0]\n    s = []\n    for i in range(n):\n        s.append(a[i])\n        d[a[i]] += 1\n        while d[curr_mex]:\n            curr_mex += 1\n        if curr_mex == target:\n            b.append(target)\n            while s:\n                d[s.pop()] -= 1\n            curr_mex = 0\n            if i != n - 1:\n                target = mex_from_last[i + 1]\n        elif i == n - 1:\n            b.append(0)\n    print(len(b))\n    print(*b)"]