["def circle_game():\n    for _ in range(int(input())):\n        a = int(input())\n        b = list(map(int, input().split()))\n        if a % 2 != 0:\n            print('Mike')\n        elif b.index(min(b)) % 2 == 0:\n            print('Joe')\n        else:\n            print('Mike')\ncircle_game()", "import sys\n\ndef main(a, n):\n    if n % 2:\n        return 'Mike'\n    else:\n        return 'Mike' if a.index(min(a)) % 2 else 'Joe'\nres = []\nnum = int(sys.stdin.readline())\nfor i in range(num):\n    n = int(sys.stdin.readline())\n    a = []\n    a.extend([int(i) for i in sys.stdin.readline().split(' ')])\n    res.append(main(a, n))\nprint(*res, sep='\\n')", "I = input\nfor i in range(int(I())):\n    n = int(I())\n    a = [*map(int, I().split())]\n    print(['Joe', 'Mike'][n & 1 or a.index(min(a)) & 1])", "I = input\nfor i in range(int(I())):\n    n = int(I())\n    a = [*map(int, I().split())]\n    print(['Joe', 'Mike'][n & 1 or a.index(min(a)) & 1])", "I = input\nfor i in range(int(I())):\n    n = int(I())\n    a = [*map(int, I().split())]\n    print(['Joe', 'Mike'][n & 1 or a.index(min(a)) & 1])", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    if n % 2 == 0:\n        mn = min(lst)\n        pos = lst.index(mn)\n        if pos & 1:\n            print('Mike')\n        else:\n            print('Joe')\n    else:\n        print('Mike')", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = min(a)\n    f = a.index(k) + 1\n    if n % 2 != 0:\n        print('Mike')\n    elif f % 2 == 0:\n        print('Mike')\n    else:\n        print('Joe')", "t = int(input())\nanss = []\nfor _ in range(t):\n    n = int(input())\n    piles = list(map(int, input().split()))\n    if n == 1:\n        anss.append('Mike')\n        continue\n    if n % 2 == 0:\n        mini = None\n        winner = None\n        for i in range(len(piles)):\n            if mini is None or piles[i] < mini:\n                mini = piles[i]\n                if i % 2 == 0:\n                    winner = 'Joe'\n                else:\n                    winner = 'Mike'\n        anss.append(winner)\n    else:\n        anss.append('Mike')\n[print(ans) for ans in anss]", "t = int(input())\nr = []\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n % 2 == 1:\n        r.append('Mike')\n    else:\n        da = 0\n        for i in range(2, len(a), 2):\n            if a[i] < a[da]:\n                da = i\n        yb = 1\n        for i in range(3, len(a), 2):\n            if a[i] < a[yb]:\n                yb = i\n        if a[yb] < a[da]:\n            r.append('Mike')\n        elif a[yb] > a[da]:\n            r.append('Joe')\n        elif da < yb:\n            r.append('Joe')\n        else:\n            r.append('Mike')\nfor i in range(t):\n    print(r[i])", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n % 2 != 0:\n        print('Mike')\n    else:\n        i = a.index(min(a))\n        if i % 2 == 0:\n            print('Joe')\n        else:\n            print('Mike')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    turn = 0\n    if n % 2 == 1:\n        print('Mike')\n        continue\n    else:\n        min_a = min(a)\n        for i in range(len(a)):\n            if a[i] == min_a:\n                if i % 2 == 0:\n                    print('Joe')\n                    break\n                else:\n                    print('Mike')\n                    break", "n = int(input())\nfor i in range(n):\n    s = int(input())\n    l = list(map(int, input().split()))\n    if s % 2 != 0:\n        print('Mike')\n    else:\n        u = l.index(min(l))\n        if u % 2 == 0:\n            print('Joe')\n        else:\n            print('Mike')", "I = input\nfor _ in range(int(I())):\n    n = int(I())\n    a = [*map(int, I().split())]\n    print(['Joe', 'Mike'][n & 1 or a.index(min(a)) & 1])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n % 2 == 1:\n        print('Mike')\n        continue\n    mm = min(a[::2])\n    jm = min(a[1::2])\n    if mm > jm:\n        print('Mike')\n    elif jm > mm:\n        print('Joe')\n    else:\n        (mi, ji) = (None, None)\n        for i in range(0, n, 2):\n            if a[i] == mm:\n                mi = i\n                break\n        for i in range(1, n, 2):\n            if a[i] == jm:\n                ji = i\n                break\n        print('Mike' if mi > ji else 'Joe')", "for _ in range(int(input())):\n    n = int(input())\n    (*val,) = map(int, input().split())\n    if n == 1:\n        print('Mike')\n    elif n % 2 == 0:\n        print('Mike' if val.index(min(val)) % 2 == 1 else 'Joe')\n    else:\n        print('Mike')", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    L = list(map(int, input().split()))\n    if n % 2 == 1:\n        print('Mike')\n    else:\n        m = min(L)\n        x = L.index(m)\n        if x % 2 == 0:\n            print('Joe')\n        else:\n            print('Mike')", "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    a = [[1000000001, -1], [1000000001, -1]]\n    if n % 2 == 1:\n        print('Mike')\n    else:\n        for i in range(n):\n            if s[i] < a[i % 2][0]:\n                a[i % 2][0] = s[i]\n                a[i % 2][1] = i\n        if a[0][0] < a[1][0]:\n            print('Joe')\n        elif a[0][0] > a[1][0]:\n            print('Mike')\n        elif a[0][1] < a[1][1]:\n            print('Joe')\n        else:\n            print('Mike')", "t = int(input())\nwhile t:\n    t -= 1\n    N = int(input())\n    a = [*map(int, input().split())]\n    if N % 2 == 1:\n        print('Mike')\n        continue\n    m = a.index(min(a)) % 2\n    if m == 0:\n        print('Joe')\n    else:\n        print('Mike')", "def game(A, n):\n    if n % 2 != 0:\n        return 'Mike'\n    ind = 0\n    for i in range(n):\n        if A[i] < A[ind]:\n            ind = i\n    if ind % 2 == 0:\n        return 'Joe'\n    else:\n        return 'Mike'\ntests = int(input())\nfor _ in range(tests):\n    n = int(input())\n    A = list(map(int, input().split()))\n    print(game(A, n))", "import math, sys\ninput = sys.stdin.readline\nS = lambda : input().rstrip()\nI = lambda : int(S())\nM = lambda : map(int, S().split())\nL = lambda : list(M())\nmod1 = 1000000007\nmod2 = 998244353\nfor _ in range(I()):\n    n = I()\n    arr = L()\n    if n == 1:\n        print('Mike')\n        continue\n    mn = 1000000000.0 + 7\n    mn = min(arr)\n    pos = []\n    for i in range(n):\n        if arr[i] == mn:\n            pos.append(i)\n    if n % 2 == 0:\n        if pos[0] % 2 == 0:\n            print('Joe')\n        else:\n            print('Mike')\n    else:\n        print('Mike')", "t = int(input())\nfor TC in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if n % 2 == 1:\n        print('Mike')\n    else:\n        m = 0\n        for p in range(len(a)):\n            if a[p] < a[m]:\n                m = p\n        if m % 2 == 0:\n            print('Joe')\n        else:\n            print('Mike')", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n % 2 == 1:\n        print('Mike')\n    else:\n        x = min(arr)\n        ind = arr.index(x)\n        if ind % 2 == 0:\n            print('Joe')\n        else:\n            print('Mike')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n % 2:\n        print('Mike')\n    else:\n        m = min(a)\n        for i in range(n):\n            if a[i] == m:\n                k = i\n                break\n        if k % 2:\n            print('Mike')\n        else:\n            print('Joe')", "from os import error\nimport sys\ninput = sys.stdin.readline\nDEBUG = False\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef solve():\n    n = inp()\n    datum = inlt()\n    if n % 2 == 0:\n        (_minp, p) = (10 ** 9 + 3, -1)\n        for (i, v) in enumerate(datum):\n            if v < _minp:\n                p = i\n                _minp = v\n        return ['Mike', 'Joe'][(p + 1) % 2]\n    return 'Mike'\nq = inp()\nfor t in range(q):\n    ans = solve()\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n % 2 == 1:\n        print('Mike')\n    else:\n        sa = arr[0::2]\n        msa = min(sa)\n        idx1 = sa.index(msa) * 2\n        sb = arr[1::2]\n        msb = min(sb)\n        idx2 = sb.index(msb) * 2 + 1\n        if msa > msb:\n            print('Mike')\n        elif msb > msa:\n            print('Joe')\n        elif idx1 < idx2:\n            print('Joe')\n        else:\n            print('Mike')", "import math\nt = int(input())\nwhile t:\n    t -= 1\n    h = input()\n    a = int(h)\n    lis = input().split()\n    lis = [int(x) for x in lis]\n    if a % 2 == 0:\n        if lis.index(min(lis)) % 2 == 0:\n            print('Joe')\n        else:\n            print('Mike')\n        continue\n    else:\n        print('Mike')", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n % 2 == 1:\n        print('Mike')\n    else:\n        min_index = a.index(min(a))\n        if min_index % 2 == 1:\n            print('Mike')\n        else:\n            print('Joe')", "for h in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    mini = 0\n    minv = 10 ** 10\n    i = 0\n    while i < n:\n        if a[i] < minv:\n            minv = a[i]\n            mini = i\n        i += 1\n    if n % 2 == 0:\n        print('Mike' if mini % 2 else 'Joe')\n    else:\n        print('Mike')", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    n = int(inp())\n    a = list(map(int, inp().split()))\n    if n % 2 == 0:\n        z = min(a)\n        for i in range(n):\n            a[i] -= z\n        for i in range(0, int(1000000000.0)):\n            if a[i % n] == 0:\n                if i % 2 == 1:\n                    print('Mike')\n                else:\n                    print('Joe')\n                break\n            a[i % n] -= 1\n    else:\n        for i in range(0, int(1000000000.0)):\n            if a[i % n] == 0:\n                if i % 2 == 1:\n                    print('Mike')\n                else:\n                    print('Joe')\n                break\n            a[i % n] = 0\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n == 1:\n        return 'Mike'\n    oi = ei = 0\n    ov = ev = float('inf')\n    if n % 2 == 0:\n        for i in range(n):\n            if i % 2 == 0:\n                if arr[i] < ov:\n                    oi = i\n                    ov = arr[i]\n            elif arr[i] < ev:\n                ei = i\n                ev = arr[i]\n        if ov > ev:\n            return 'Mike'\n        elif ov < ev:\n            return 'Joe'\n        else:\n            return 'Mike' if oi > ei else 'Joe'\n    else:\n        return 'Mike'\nfor _ in range(int(input())):\n    print(solve())", "for q in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    x = arr.index(min(arr))\n    if n == 1:\n        print('Mike')\n        continue\n    if x % 2 == 0 and n % 2 == 0:\n        print('Joe')\n    else:\n        print('Mike')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n % 2 != 0:\n        print('Mike')\n    else:\n        mini = min(l)\n        ind = l.index(mini)\n        if ind % 2 == 0:\n            print('Joe')\n        else:\n            print('Mike')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    piles = list(map(int, input().split()))\n    if n % 2:\n        print('Mike')\n    else:\n        (i1, low) = (0, piles[0])\n        for j in range(1, n):\n            if low > piles[j]:\n                low = piles[j]\n                i1 = j\n        if i1 % 2:\n            print('Mike')\n        else:\n            print('Joe')", "t = int(input())\nwhile t:\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n % 2 == 1:\n        print('Mike')\n    else:\n        le = [l[0], 0]\n        lo = [l[1], 1]\n        for i in range(2, n):\n            if i % 2 == 0:\n                if l[i] < le[0]:\n                    le[0] = l[i]\n                    le[1] = i\n            elif l[i] < lo[0]:\n                lo[0] = l[i]\n                lo[1] = i\n        if le[0] > lo[0]:\n            print('Mike')\n        elif lo[0] > le[0]:\n            print('Joe')\n        elif le[1] > lo[1]:\n            print('Mike')\n        else:\n            print('Joe')\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    circle = [int(i) for i in input().split()]\n    if n % 2 == 1:\n        print('Mike')\n    else:\n        min_pile = 1000000001\n        ans = True\n        for i in range(n - 1, -1, -1):\n            if circle[i] <= min_pile:\n                min_pile = circle[i]\n                ans = i % 2 == 0\n        if ans:\n            print('Joe')\n        else:\n            print('Mike')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dic = {False: 'Mike', True: 'Joe'}\n    periodic = n % 2\n    min_heap = min(a)\n    argmin_heap = a.index(min_heap)\n    if periodic:\n        print('Mike')\n    else:\n        whose_turn = argmin_heap % 2\n        print(dic[not whose_turn])", "from math import inf\n\ndef solve(n, arr):\n    if n % 2 == 1:\n        return 'Mike'\n    a = inf\n    b = inf\n    ai = None\n    bi = None\n    for (i, aa) in enumerate(arr):\n        if i % 2 == 0:\n            if aa < a:\n                a = aa\n                ai = i\n        elif aa < b:\n            b = aa\n            bi = i\n    if a > b:\n        return 'Mike'\n    if a == b:\n        if ai > bi:\n            return 'Mike'\n    return 'Joe'\n\ndef main():\n    N = int(input())\n    for _ in range(N):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        print(solve(n, arr))\n\ndef init():\n    import os\n    import sys\n    sys.setrecursionlimit(2 * 10 ** 6)\n    if 'CP_LOCAL_ENV' in os.environ:\n        sys.stdin = open('cf_test_b.txt')\ninit()\nmain()", "def solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n % 2 != 0:\n        print('Mike')\n        return\n    minn = 10000000000\n    for i in range(n):\n        if minn > arr[i]:\n            mini = i\n            minn = arr[i]\n    if mini % 2 == 0:\n        print('Joe')\n    else:\n        print('Mike')\nt = int(input())\nfor i in range(t):\n    solve()", "import sys\ninput = sys.stdin.readline\nT = int(input())\nfor t in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    if N % 2 == 1:\n        print('Mike')\n        continue\n    A0 = [A[i] for i in range(0, N, 2)]\n    A1 = [A[i] for i in range(1, N, 2)]\n    A0min = min(A0)\n    A1min = min(A1)\n    if A0min > A1min:\n        print('Mike')\n        continue\n    if A0min < A1min:\n        print('Joe')\n        continue\n    i0 = A0.index(A0min)\n    i1 = A1.index(A1min)\n    print('Mike' if i0 > i1 else 'Joe')", "t = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n & 1 == 0:\n        s1 = a.index(min(a))\n        if s1 & 1 == 0:\n            print('Joe')\n        else:\n            print('Mike')\n    else:\n        print('Mike')", "def solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    m = min(arr)\n    k = arr.index(m)\n    if n % 2 == 1:\n        print('Mike')\n        return\n    if k % 2 == 0:\n        print('Joe')\n    else:\n        print('Mike')\n    return\nfor _ in range(int(input())):\n    solve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    piles = list(map(int, input().split()))\n    if n % 2 == 1:\n        print('Mike')\n    elif min(piles[::2]) < min(piles[1::2]):\n        print('Joe')\n    elif min(piles[::2]) > min(piles[1::2]):\n        print('Mike')\n    else:\n        for i in range(n):\n            if piles[i] == min(piles[::2]):\n                break\n        if i % 2 == 0:\n            print('Joe')\n        else:\n            print('Mike')", "def solve():\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = 10 ** 9 + 1\n    j = 10 ** 9 + 1\n    mp = -1\n    jp = -1\n    if n % 2 == 0:\n        for i in range(n):\n            if i % 2 == 0 and l[i] < m:\n                m = l[i]\n                mp = i\n            elif l[i] < j:\n                j = l[i]\n                jp = i\n        if j > m:\n            print('Joe')\n        elif j == m:\n            if mp < jp:\n                print('Joe')\n            else:\n                print('Mike')\n        else:\n            print('Mike')\n    else:\n        print('Mike')\nt = int(input())\nwhile t > 0:\n    solve()\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    mi = -1\n    f = False\n    mmm = min(a)\n    if f:\n        print('Tanmay')\n    for i in range(n):\n        if a[i] == mmm:\n            mi = i\n            break\n    if n % 2 == 0:\n        if mi % 2 == 0:\n            print('Joe')\n        else:\n            print('Mike')\n    else:\n        print('Mike')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = float('inf')\n    i = 0\n    if n & 1 != 0:\n        print('Mike')\n    else:\n        for i in range(n):\n            if a[i] < m:\n                m = a[i]\n                idx = i\n        if idx & 1 == 0:\n            print('Joe')\n        else:\n            print('Mike')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    if n % 2:\n        print('Mike')\n    else:\n        m = lst[0]\n        j = lst[1]\n        pm = 0\n        pj = 1\n        for i in range(2, n):\n            if i % 2:\n                if lst[i] < j:\n                    j = lst[i]\n                    pj = i\n            elif lst[i] < m:\n                m = lst[i]\n                pm = i\n        if m > j:\n            print('Mike')\n        elif j > m:\n            print('Joe')\n        elif pm > pj:\n            print('Mike')\n        else:\n            print('Joe')", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    if n & 1:\n        print('Mike')\n    else:\n        b = min(enumerate(a), key=lambda x: x[1])\n        if b[0] & 1:\n            print('Mike')\n        else:\n            print('Joe')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n % 2 == 1:\n        print('Mike')\n    else:\n        k = a.index(min(a))\n        if k % 2 == 1:\n            print('Mike')\n        else:\n            print('Joe')", "for k in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print('Joe' if not n % 2 and (not a.index(min(a)) % 2) else 'Mike')", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    if n % 2 == 1:\n        print('Mike')\n        continue\n    m = min(l)\n    for i in range(0, n):\n        if l[i] == m:\n            if i % 2 == 1:\n                print('Mike')\n            else:\n                print('Joe')\n            break", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = [int(i) for i in input().split(' ')]\n    m = 0\n    j = 0\n    if n % 2 != 0:\n        print('Mike')\n    else:\n        min_ = min(l)\n        id = l.index(min_)\n        if id % 2 == 0:\n            if l[id] > l[id + 1]:\n                print('Mike')\n            else:\n                print('Joe')\n        elif l[id] >= l[id - 1]:\n            print('Joe')\n        else:\n            print('Mike')", "t = int(input())\nwhile t:\n    n = int(input())\n    piles = list(map(int, input().split()))\n    if n % 2 == 1:\n        print('Mike')\n    else:\n        ind = piles.index(min(piles))\n        if ind % 2 == 1:\n            print('Mike')\n        else:\n            print('Joe')\n    t = t - 1", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    lst1 = lst[0:n:2]\n    lst2 = lst[1:n:2]\n    if n % 2 == 0:\n        a = min(lst1)\n        b = min(lst2)\n        if a > b:\n            print('Mike')\n        elif b > a:\n            print('Joe')\n        else:\n            a1 = lst1.index(a)\n            b1 = lst2.index(b)\n            if a1 <= b1:\n                print('Joe')\n            else:\n                print('Mike')\n    else:\n        print('Mike')", "for i in range(int(input())):\n    a = int(input())\n    l = list(map(int, input().strip().split()))\n    ans = 'Mike'\n    if a % 2 == 0:\n        if l.index(min(l)) % 2 == 0:\n            ans = 'Joe'\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 2:\n        input()\n        print('Mike')\n    else:\n        a = [int(x) for x in input().split()]\n        (i1, i2) = (0, 1)\n        (m1, m2) = (a[0], a[1])\n        for j in range(1, int(n / 2)):\n            if a[2 * j] < m1:\n                i1 = 2 * j\n                m1 = a[2 * j]\n            if a[2 * j + 1] < m2:\n                i2 = 2 * j + 1\n                m2 = a[2 * j + 1]\n        if m1 < m2 or (m1 == m2 and i1 < i2):\n            print('Joe')\n        else:\n            print('Mike')", "def solve():\n    n = int(input())\n    lis = list(map(int, input().split()))\n    if n % 2 == 0:\n        Min = min(lis)\n        ind = lis.index(Min)\n        if ind % 2 == 1:\n            print('Mike')\n        else:\n            print('Joe')\n    else:\n        print('Mike')\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    ans = -1\n    if n % 2 != 0:\n        ans = 0\n    else:\n        mi = min(lst)\n        ind = lst.index(mi)\n        ind = ind + 1\n        if ind % 2 == 0:\n            ans = 0\n        else:\n            ans = 1\n    if ans == 1:\n        print('Joe')\n    else:\n        print('Mike')", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = min(l)\n    if n % 2 == 1:\n        print('Mike')\n    elif l.index(m) % 2 == 0:\n        print('Joe')\n    else:\n        print('Mike')", "for _ in range(int(input())):\n    a = int(input())\n    n = list(map(int, input().split()))\n    if a % 2 == 1:\n        print('Mike')\n    elif n.index(min(n)) % 2 == 0:\n        print('Joe')\n    else:\n        print('Mike')", "for i in range(int(input())):\n    (a, l) = (int(input()), list(map(int, input().strip().split())))\n    s = 'Mike'\n    if a % 2 == 0 and l.index(min(l)) % 2 == 0:\n        s = 'Joe'\n    print(s)", "for i in range(int(input())):\n    (a, l) = (int(input()), list(map(int, input().strip().split())))\n    print('Joe' if a % 2 == 0 and l.index(min(l)) % 2 == 0 else 'Mike')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n % 2:\n        print('Mike')\n    else:\n        m = arr.index(min(arr))\n        if m % 2:\n            print('Mike')\n        else:\n            print('Joe')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n % 2 == 1:\n        print('Mike')\n    else:\n        mn = min(a)\n        if a.index(mn) % 2:\n            print('Mike')\n        else:\n            print('Joe')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    y = arr.index(min(arr))\n    if n % 2 != 0:\n        print('Mike')\n    elif y % 2 == 0:\n        print('Joe')\n    else:\n        print('Mike')", "for i in range(int(input())):\n    (a, l) = (int(input()), list(map(int, input().strip().split())))\n    print('Joe' if a % 2 == 0 and l.index(min(l)) % 2 == 0 else 'Mike')", "n = int(input())\narr = []\nfor i in range(n):\n    a = int(input())\n    b = list(input().split(' '))\n    if a % 2 != 0:\n        arr.append('Mike')\n    else:\n        min1 = 10000000000\n        index = -1\n        for i in range(a):\n            if min1 > int(b[i]):\n                index = i\n                min1 = int(b[i])\n        if index % 2 == 0:\n            arr.append('Joe')\n        else:\n            arr.append('Mike')\nfor i in arr:\n    print(i)", "for i in range(int(input())):\n    num = int(input())\n    lis = list(map(int, input().split(' ')))\n    if num % 2 == 0:\n        mi = min(lis)\n        idx = lis.index(mi)\n        if idx % 2 == 0:\n            print('Joe')\n        else:\n            print('Mike')\n    else:\n        print('Mike')", "for t in range(int(input())):\n    if int(input()) % 2 == 1:\n        print('Mike')\n        no_use = input()\n        continue\n    else:\n        piles = [int(ai) for ai in input().split()]\n        ind = piles.index(min(piles)) + 1\n        if ind % 2 == 1:\n            print('Joe')\n        else:\n            print('Mike')\n        continue", "strng = lambda : input()\ninp = lambda : int(input())\nmul = lambda : map(int, input().split())\njn = lambda x, l: x.join(map(str, l))\nstrlst = lambda : list(input())\nlst = lambda : list(map(int, input().split()))\ndd = lambda : defaultdict(lambda : 0)\nimport sys\ninput = sys.stdin.readline\nfrom collections import defaultdict\nfrom math import ceil, log, floor, sqrt, gcd, log10\nfor _ in range(inp()):\n    n = inp()\n    a = lst()\n    if n & 1:\n        print('Mike')\n        continue\n    mini = sys.maxsize\n    pos = 0\n    for i in range(n):\n        if a[i] < mini:\n            mini = a[i]\n            pos = i\n    if pos + 1 & 1:\n        print('Joe')\n        continue\n    print('Mike')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    my_list = list(map(int, input().split()))\n    if n % 2 != 0:\n        print('Mike')\n        continue\n    x = min(my_list)\n    index = my_list.index(x)\n    if (index + 1) % 2 != 0:\n        print('Joe')\n    else:\n        print('Mike')", "for _ in range(int(input())):\n    N = int(input())\n    list1 = list(map(int, input().split()))\n    Min = min(list1)\n    index = list1.index(Min)\n    if N % 2 == 0:\n        if index % 2 != 0:\n            print('Mike')\n        else:\n            print('Joe')\n    else:\n        print('Mike')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    z = list(map(int, input().split()))\n    if n % 2 == 1:\n        print('Mike')\n    elif z.index(min(z)) % 2 == 0:\n        print('Joe')\n    else:\n        print('Mike')", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().strip().split()))[:n]\n    mn = min(a)\n    b = a.index(mn)\n    if n % 2 != 0:\n        print('Mike')\n    if n % 2 == 0:\n        if b % 2 == 0:\n            print('Joe')\n        else:\n            print('Mike')", "c = int(input())\nfor i in range(c):\n    k = int(input())\n    x = list(map(int, input().split()))\n    minarg = x.index(min(x))\n    if k % 2 == 1:\n        print('Mike')\n    elif k % 2 == 0 and minarg % 2 == 0:\n        print('Joe')\n    else:\n        print('Mike ')", "for i in range(int(input())):\n    a = int(input())\n    n = list(map(int, input().split()))\n    if a % 2 == 1:\n        x = 'Mike'\n    elif n.index(min(n)) % 2 == 1:\n        x = 'Mike'\n    else:\n        x = 'Joe'\n    print(x)", "_ = int(input())\nfor __ in range(_):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if len(arr) % 2 == 1:\n        print('Mike')\n    else:\n        p = min(arr)\n        ppos = arr.index(p)\n        if ppos % 2 == 1:\n            print('Mike')\n        else:\n            print('Joe')", "T = int(input())\nq = []\nfor i in range(T):\n    n = int(input())\n    data = [int(i) for i in input().split()]\n    q.append((n, data))\n\ndef solve(n, data):\n    if n % 2:\n        print('Mike')\n        return\n    sum_m = 10000000000.0\n    pos_m = 0\n    sum_j = 10000000000.0\n    pos_j = 0\n    for i in range(n):\n        if i % 2:\n            if data[i] < sum_j:\n                sum_j = data[i]\n                pos_j = i\n        elif data[i] < sum_m:\n            sum_m = data[i]\n            pos_m = i\n    if sum_m > sum_j:\n        print('Mike')\n    elif sum_m == sum_j:\n        if pos_m < pos_j:\n            print('Joe')\n        else:\n            print('Mike')\n    else:\n        print('Joe')\nfor (n, data) in q:\n    solve(n, data)", "t = int(input())\nfor TC in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if n % 2 == 1:\n        print('Mike')\n    else:\n        m = 0\n        for p in range(len(a)):\n            if a[p] < a[m]:\n                m = p\n        if m % 2 == 0:\n            print('Joe')\n        else:\n            print('Mike')", "t = int(input())\nfor TC in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if n % 2 == 1:\n        print('Mike')\n    else:\n        m = 0\n        for p in range(len(a)):\n            if a[p] < a[m]:\n                m = p\n        if m % 2 == 0:\n            print('Joe')\n        else:\n            print('Mike')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n % 2:\n        print('Mike')\n    else:\n        mini = 0\n        for i in range(n):\n            if a[i] < a[mini]:\n                mini = i\n        if mini % 2:\n            print('Mike')\n        else:\n            print('Joe')", "x = int(input())\nfor i in range(x):\n    y = int(input())\n    A = input().split()\n    if y % 2 == 1:\n        print('Mike')\n    else:\n        mini = int(A[0])\n        minj = 0\n        for j in range(y):\n            if int(A[j]) < mini:\n                mini = int(A[j])\n                minj = j\n        if minj % 2 == 0:\n            print('Joe')\n        else:\n            print('Mike')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n % 2 != 0:\n        print('Mike')\n    else:\n        x = min(arr)\n        ind = arr.index(x)\n        if ind % 2 == 0:\n            print('Joe')\n        else:\n            print('Mike')", "for i in range(int(input())):\n    (a, l) = (int(input()), list(map(int, input().strip().split())))\n    print('Joe' if a % 2 == 0 and l.index(min(l)) % 2 == 0 else 'Mike')", "import math\nfrom collections import Counter\n\ndef fun(a):\n    if len(a) % 2:\n        return 'Mike'\n    else:\n        if a.index(min(a)) % 2:\n            return 'Mike'\n        return 'Joe'\nn = int(input())\nfor _ in range(n):\n    l = input()\n    a = input().split()\n    a = list(map(int, a))\n    print(fun(a))", "for i in range(int(input())):\n    (a, l) = (int(input()), list(map(int, input().strip().split())))\n    print('Joe' if a % 2 == 0 and l.index(min(l)) % 2 == 0 else 'Mike')", "num_of_case = int(input())\nfor _ in range(num_of_case):\n    N = int(input())\n    arr = [int(x) for x in input().split(' ')]\n    if N % 2 == 1:\n        print('Mike')\n    else:\n        m = min(arr)\n        idx = arr.index(m)\n        print('Mike') if idx % 2 == 1 else print('Joe')", "for _ in range(int(input())):\n    n = int(input())\n    g = list((int(i) for i in input().split()))\n    if n % 2 != 0:\n        print('Mike')\n    else:\n        x = g.index(min(g))\n        if x % 2 == 0:\n            print('Joe')\n        else:\n            print('Mike')", "I = input\nfor _ in range(int(I())):\n    n = int(I())\n    a = [*map(int, I().split())]\n    print(['Joe', 'Mike'][n & 1 or a.index(min(a)) & 1])", "t = int(input())\nar = [[] for i in range(t)]\n(p1, p2) = ('Mike', 'Joe')\nfor i in range(t):\n    n = int(input())\n    ar[i] += [int(o) for o in input().split()]\nfor i in range(t):\n    if len(ar[i]) % 2 == 1:\n        print('Mike')\n    else:\n        smallest = 0\n        for j in range(len(ar[i])):\n            if ar[i][j] < ar[i][smallest]:\n                smallest = j\n        if smallest % 2 == 0:\n            print('Joe')\n        else:\n            print('Mike')", "a = int(input())\nfor w in range(a):\n    l = int(input())\n    L = [int(s) for s in input().split()]\n    if l % 2 != 0:\n        print('Mike')\n    elif L.index(min(L)) % 2 == 0:\n        print('Joe')\n    else:\n        print('Mike')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input().split()\n    for i in range(n):\n        a[i] = int(a[i])\n    if n % 2 == 1:\n        print('Mike')\n        continue\n    minindex = a.index(min(a))\n    if minindex % 2 == 0:\n        print('Joe')\n    else:\n        print('Mike')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    res = l.index(min(l))\n    if n == 1:\n        print('Mike')\n        continue\n    if res % 2 == 0 and n % 2 == 0:\n        print('Joe')\n    else:\n        print('Mike')", "for _ in range(int(input())):\n    n = int(input())\n    piles = list(map(int, input().split()))\n    if n % 2:\n        print('Mike')\n    elif piles.index(min(piles)) % 2:\n        print('Mike')\n    else:\n        print('Joe')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n % 2 != 0:\n        print('Mike')\n    else:\n        ind = a.index(min(a))\n        if (ind + 1) % 2 == 0:\n            print('Mike')\n        else:\n            print('Joe')", "t = int(input())\nfor _ in range(t):\n    n = input()\n    arr = list(map(int, input().split()))\n    if len(arr) % 2 == 1:\n        print('Mike')\n        continue\n    j = arr.index(min(arr))\n    if j % 2:\n        print('Mike')\n    else:\n        print('Joe')"]