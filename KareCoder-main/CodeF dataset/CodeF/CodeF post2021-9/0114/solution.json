["for tc in range(int(input())):\n    (n, m) = map(int, input().split())\n    for i in range(m):\n        input()\n    print('YES' if n > m else 'NO')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    p = 0\n    for i in range(m):\n        (l, r) = map(int, input().split())\n        if l != r:\n            p += 1\n    if m < n:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin\n\ndef readint():\n    return int(stdin.readline())\n\ndef readarray(typ):\n    return list(map(typ, stdin.readline().split()))\n\ndef readmatrix(n):\n    M = []\n    for _ in range(n):\n        row = readarray(int)\n        assert len(row) == n\n        M.append(row)\n    return M\n\ndef mult(M, v):\n    n = len(M)\n    return [sum((M[i][j] * v[j] for j in range(n))) for i in range(n)]\nt = readint()\nfor _ in range(t):\n    nm = readarray(int)\n    n = nm[0]\n    m = nm[1]\n    for _ in range(m):\n        rook_i = readarray(int)\n    if m >= n:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor v in range(t):\n    b = input().split()\n    p = [int(i) for i in b]\n    for n in range(p[1]):\n        input()\n    if p[0] == p[1]:\n        print('NO')\n    else:\n        print('YES')", "desks_number = int(input())\nanswers = list((str() for answer_id in range(desks_number)))\nrooks = list(([0, 0] for rook_id in range(8)))\nfor desk_id in range(desks_number):\n    (desk_size, rooks_number) = tuple((int(value) for value in input().split()))\n    for rook_id in range(rooks_number):\n        (rooks[rook_id][0], rooks[rook_id][1]) = tuple((int(value) for value in input().split()))\n    if desk_size > rooks_number:\n        answers[desk_id] = 'YES'\n    else:\n        answers[desk_id] = 'NO'\nfor answer in answers:\n    print(answer)", "t = int(input())\nout = ''\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    rooks = [tuple(map(int, input().split())) for __ in range(m)]\n    if m < n:\n        out += 'YES\\n'\n    else:\n        out += 'NO\\n'\nprint(out)", "for _ in ' ' * int(input()):\n    (a, b) = map(int, input().split())\n    for i in range(b):\n        z = input()\n    if a == b:\n        print('NO')\n    else:\n        print('YES')", "for _ in ' ' * int(input()):\n    (name, mam) = map(int, input().split())\n    for _ in ' ' * mam:\n        input()\n    if name > mam:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nanswer = []\nls = []\nfor i in range(n):\n    (n, m) = map(int, input().split())\n    for i in range(m):\n        ls.append(input())\n    if n == m:\n        answer.append('NO')\n    else:\n        answer.append('YES')\nfor i in answer:\n    print(i)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, m) = map(int, input().split())\n    count = m\n    while m > 0:\n        input()\n        m -= 1\n    if n - count == 0:\n        print('NO')\n    else:\n        print('YES')", "for i in range(int(input())):\n    a = input().split()\n    if a[1] == 1:\n        b = input()\n        print('YES')\n    else:\n        for j in range(int(a[1])):\n            b = input()\n        if a[0] == a[1]:\n            print('NO')\n        else:\n            print('YES')", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    for j in range(m):\n        input()\n    print('YNEOS'[m >= n::2])", "t = int(input())\nx = []\nfor i in range(t):\n    s = input()\n    s = s.split()\n    n = int(s[0])\n    m = int(s[1])\n    for j in range(m):\n        s = input()\n    if n > m:\n        x.append('YES')\n    else:\n        x.append('NO')\nfor i in range(t):\n    print(x[i])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    for i in range(m):\n        temp = input()\n    if m >= n:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    rows = [False] * n\n    columns = [False] * n\n    for _ in range(m):\n        (x, y) = map(int, input().split())\n        rows[y - 1] = True\n        columns[x - 1] = True\n    for i in range(n):\n        if not rows[i] or not columns[i]:\n            print('YES')\n            break\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    for i in range(m):\n        (x, y) = map(int, input().split())\n        a.append([x, y])\n    if m < n:\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, m) = map(int, input().split())\n    (row, col) = ([0] * n, [0] * n)\n    for i in range(m):\n        (x, y) = map(int, input().split())\n        row[x - 1] += 1\n        col[y - 1] += 1\n    cnt1 = cnt2 = 0\n    for i in range(n):\n        if row[i] == 0:\n            cnt1 += 1\n        if col[i] == 0:\n            cnt2 += 1\n    return 'YES' if min(cnt1, cnt2) > 0 else 'NO'\nfor _ in range(int(input())):\n    print(solve())", "t = int(input())\n\ndef solve():\n    (n, k) = map(int, input().split())\n    m = k\n    while m:\n        input()\n        m -= 1\n    if k < n:\n        print('YES')\n    else:\n        print('NO')\nwhile t:\n    solve()\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    for i in range(m):\n        (x, y) = map(int, input().split())\n    if m < n:\n        print('YES')\n    else:\n        print('NO')", "import sys\nimport math\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_ls():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef yesno(ok):\n    print('YES' if ok else 'NO')\n\ndef main():\n    for _ in range(int(input())):\n        (n, m) = get_ints()\n        pos = []\n        for i in range(m):\n            (x, y) = get_ints()\n            pos.append([x, y])\n        if m >= n:\n            print('NO')\n        else:\n            print('YES')\nmain()", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    list1 = []\n    list2 = []\n    for i in range(1, n + 1):\n        list1.append(i)\n        list2.append(i)\n    for i in range(m):\n        (x, y) = map(int, input().split())\n        list1.remove(x)\n        list2.remove(y)\n    if len(list1) > 0 and len(list2) > 0:\n        print('YES')\n    else:\n        print('NO')", "def sol():\n    m = int(input())\n    for i in range(m):\n        (n, z) = map(int, input().split(' '))\n        lx = []\n        ly = []\n        for j in range(n):\n            lx.append(j + 1)\n            ly.append(j + 1)\n        for k in range(z):\n            (a, b) = map(int, input().split(' '))\n            lx.remove(a)\n            ly.remove(b)\n        if lx == [] or ly == []:\n            print('NO')\n        else:\n            print('YES')\nsol()", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    rooks = list([tuple(map(int, input().split())) for i in range(m)])\n    print('NO' if n == m else 'YES')", "def solution():\n    (n, m) = (int(num) for num in input().split())\n    for i in range(m):\n        input()\n    if m < n:\n        print('YES')\n    else:\n        print('NO')\n\ndef main():\n    t = int(input())\n    while t:\n        solution()\n        t -= 1\nmain()", "t = int(input())\nfor iter in range(t):\n    line1 = input().split(' ')\n    n = int(line1[0])\n    m = int(line1[1])\n    for j in range(m):\n        input()\n    if m < n:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    x_i = []\n    y_i = []\n    for _ in range(m):\n        (x, y) = map(int, input().split())\n        x_i.append(x)\n        y_i.append(y)\n    if len(set(x_i)) < n and len(set(y_i)) < n:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    for i in range(m):\n        x = input()\n    if m >= n:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().strip().split())\n    for j in range(m):\n        (x, y) = map(int, input().strip().split())\n    print('NO') if m >= n else print('YES')", "def test_case():\n    (n, rooks) = map(int, input().split(' '))\n    for _ in range(rooks):\n        input()\n    if rooks < n:\n        print('YES')\n    else:\n        print('NO')\ntest_cases = int(input())\nfor _ in range(test_cases):\n    test_case()", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (row, col) = ([1] * n, [1] * n)\n    for i in range(m):\n        (x, y) = map(int, input().split())\n        row[x - 1] = 0\n        col[y - 1] = 0\n    if sum(row) > 0 or sum(col) > 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    a0 = [0] * n\n    b0 = [0] * n\n    for j in range(m):\n        (a, b) = map(int, input().split())\n        a0[a - 1] = 1\n        b0[b - 1] = 1\n    if 0 not in a0 and 0 not in b0:\n        print('NO')\n    else:\n        print('YES')", "def solve():\n    (n, m) = map(int, input().split())\n    a = []\n    (r, c) = ([], [])\n    (rr, cc) = ([], [])\n    for i in range(1, n + 1):\n        r.append(i)\n        c.append(i)\n    for i in range(0, m):\n        (x, y) = list(map(int, input().split()))\n        a.append([x, y])\n        rr.append(x)\n        cc.append(y)\n    ans1 = set(r) - set(rr)\n    ans2 = set(c) - set(cc)\n    if ans1 and ans2:\n        return 'YES'\n    else:\n        return 'NO'\nfor t in range(0, int(input())):\n    print(solve())", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    for i in range(m):\n        l1 = list(map(int, input().split()))\n        l.append(l1)\n    if n > m:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    for _ in range(m):\n        (x, y) = map(int, input().split())\n    if n == m:\n        print('NO')\n    elif m == 1:\n        print('YES')\n    elif n == 1 and m == 1:\n        print('YES')\n    elif n == 1 and m > 1:\n        print('NO')\n    elif n - m >= 1:\n        print('YES')", "for _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    print('YES' if n < m else 'NO')", "n = int(input())\nfor i in range(n):\n    r = [int(x) for x in input().split()]\n    for j in range(r[1]):\n        x = input()\n    if r[0] > r[1]:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nresult = ''\nwhile t:\n    t -= 1\n    (n, m) = map(int, input().split())\n    rows = []\n    cols = []\n    for i in range(m):\n        (x, y) = map(int, input().split())\n        rows.append(x)\n        cols.append(y)\n    result += 'YES' if len(cols) < n or len(rows) < n else 'NO'\n    result += '\\n'\nprint(result[:-1])", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    for j in range(m):\n        (a, b) = map(int, input().split())\n    if m == n:\n        print('NO')\n    else:\n        print('YES')", "from collections import defaultdict as maps\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    rows = maps(int)\n    cols = maps(int)\n    for __ in range(m):\n        (x, y) = map(int, input().split())\n        rows[x] += 1\n        cols[y] += 1\n        flag = 0\n    for i in range(1, n + 1):\n        if rows[i] == 0 or cols[i] == 0:\n            flag = 1\n            break\n    print('YES') if flag else print('NO')", "def main():\n    (n, m) = map(int, input().split(' '))\n    d = {i: 0 for i in range(1, m + 1)}\n    for i in range(1, m + 1):\n        (x, y) = map(int, input().split(' '))\n        d[x] = 1\n        d[y] = 1\n    if m >= n:\n        print('NO')\n    else:\n        print('YES')\nt = int(input())\nfor i in range(t):\n    main()", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    l = []\n    for _ in range(m):\n        l += list(map(int, input().split()))\n    if n == m:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    for i in range(m):\n        (x, y) = map(int, input().split())\n    print('YES') if m < n else print('NO')", "from math import gcd\n\ndef printList(l):\n    for i in l:\n        print(i, end=' ')\n    print()\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    loc = []\n    count = 0\n    for i in range(m):\n        (x, y) = map(int, input().split())\n    if n > m:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    for _ in range(m):\n        (x, y) = map(int, input().split())\n    if m >= n:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    for i in range(m):\n        (a, b) = map(int, input().split())\n    if m < n:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, q) = map(int, input().split())\n    for x in range(q):\n        k = str(input())\n    if n > q:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nans = []\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    for _ in range(m):\n        (x, y) = map(int, input().split())\n    if n == m:\n        ans.append('NO')\n    else:\n        ans.append('YES')\nfor i in ans:\n    print(i)", "def solution(t):\n    for __ in range(0, t):\n        (n, m) = map(int, input().split())\n        rooks = []\n        for i in range(0, m):\n            rooks.append(input())\n        if n > m:\n            print('YES')\n        else:\n            print('NO')\n\ndef main():\n    test_cases = int(input())\n    solution(test_cases)\nmain()", "t = int(input())\nwhile t:\n    t -= 1\n    (n, m) = map(int, input().split())\n    p = m\n    while p:\n        p -= 1\n        (a, b) = map(int, input().split())\n    if n <= m:\n        print('NO')\n        continue\n    else:\n        print('YES')", "cases = int(input())\nfor case in range(1, cases + 1):\n    (n, m) = [int(i) for i in input().split()]\n    rooks = []\n    for _ in range(m):\n        input()\n    print(('NO', 'YES')[m < n])", "t = int(input())\nwhile t > 0:\n    (n, m) = map(int, input().split())\n    for i in range(m):\n        (a, b) = map(int, input().split())\n    if n > m:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "t = int(input())\nfor i in range(t):\n    line = input()\n    (n, m) = [int(i) for i in line.split()]\n    for j in range(m):\n        line = input()\n        (a, b) = [int(i) for i in line.split()]\n    if m >= n:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    x = input()\n    n = int(x[0])\n    m = int(x[2])\n    for j in range(m):\n        y = input()\n    if m < n:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    for i in range(m):\n        (x, y) = map(int, input().split())\n    if n > m:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (x, y) = map(int, input().split())\n    for i in range(y):\n        c = input()\n    if x == y:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    L = []\n    for i in range(m):\n        (xi, yi) = map(int, input().split())\n        L.append([xi, yi])\n    if n == 1:\n        print('NO')\n    elif m == 1:\n        print('YES')\n    elif n == 2:\n        print('NO')\n    elif n == m:\n        print('NO')\n    elif m == n - 1:\n        print('YES')\n    else:\n        print('YES')", "t = int(input())\nl = []\nfor i in range(t):\n    l1 = input().split(' ')\n    for i in range(int(l1[1])):\n        l2 = input().split()\n    if int(l1[0]) == int(l1[1]):\n        print('NO')\n    else:\n        print('YES')", "n = int(input())\nresult = []\nfor i in range(n):\n    (m, x) = map(int, input().split(' '))\n    for i in range(x):\n        input()\n    if x >= m:\n        result.append('NO')\n    else:\n        result.append('YES')\nfor i in range(n):\n    print(result[i])", "t = int(input())\nwhile t > 0:\n    (n, m) = map(int, input().split())\n    rows = [0 for i in range(n)]\n    cols = [0 for i in range(n)]\n    for _ in range(m):\n        (x, y) = map(int, input().split())\n        rows[x - 1] = 1\n        cols[y - 1] = 1\n        f = False\n    for a in rows:\n        if a == 0:\n            print('YES')\n            f = True\n            break\n    if not f:\n        for b in cols:\n            if b == 0:\n                print('YES')\n                f = True\n                break\n    if not f:\n        print('NO')\n    t -= 1", "for i in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    for i in range(m):\n        (a, b) = list(map(int, input().split()))\n    if n == m:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, r) = map(int, input().split())\n    t = r\n    while t:\n        (a, b) = map(int, input().split())\n        t -= 1\n    if r == n:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l1 = []\n    l2 = []\n    for i in range(m):\n        (a, b) = map(int, input().split())\n        l1.append(a)\n        l2.append(b)\n    c = 0\n    d = 0\n    for i in range(1, n + 1):\n        if i not in l1:\n            c = i\n        if i not in l1:\n            d = i\n    if c != 0 and d != 0:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    l = []\n    k = []\n    for j in range(b):\n        (c, d) = map(int, input().split())\n        if c not in l:\n            l.append(c)\n        if d not in k:\n            k.append(d)\n    if len(l) <= a - 1 and len(k) <= a - 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    for i in range(m):\n        l = list(map(int, input().split()))\n    if n > m:\n        print('YES')\n    else:\n        print('NO')", "def fxn(list1, list2):\n    if list1 == [1] * len(list1) or list2 == [1] * len(list2):\n        return 'NO'\n    else:\n        return 'YES'\nt = int(input())\nfor i in range(t):\n    a = list(map(int, input().split()))\n    listx = [0] * a[0]\n    listy = [0] * a[0]\n    for j in range(a[1]):\n        k = list(map(int, input().split()))\n        listx[k[0] - 1] = 1\n        listy[k[1] - 1] = 1\n    print(fxn(listx, listy))", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    r = m\n    while r > 0:\n        (x, y) = map(int, input().split())\n        r = r - 1\n    if m == 1 and n > m:\n        print('YES')\n    elif n == m:\n        print('NO')\n    else:\n        print('YES')", "nousecount = int(input())\nfor nouse in range(nousecount):\n    (n, m) = map(int, input().split(' '))\n    for i in range(m):\n        s = input()\n    if m < n:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, m) = input().split()\n    list = []\n    for i in range(1, int(n) + 1):\n        list.append(i)\n    pos = []\n    xp = []\n    yp = []\n    for _ in range(int(m)):\n        pos.append(input().split())\n    for p in pos:\n        xp.append(int(p[0]))\n        yp.append(int(p[1]))\n    check = True\n    for l in list:\n        if not l in xp:\n            for l in list:\n                if not l in yp:\n                    check = False\n                    print('YES')\n                    break\n        if not check:\n            break\n    if check:\n        print('NO')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    for __ in range(m):\n        input()\n    print('YES' if n > m else 'NO')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    s = []\n    for _ in range(m):\n        (c, d) = map(int, input().split())\n        s.append([c, d])\n    if n > m:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t:\n    (n, m) = input().split()\n    n = int(n)\n    m = int(m)\n    pos = []\n    for i in range(m):\n        x = input().split()\n        pos.append(x)\n    if m >= n:\n        print('NO')\n    else:\n        print('YES')\n    t -= 1", "def Cowardly_Rooks(numberofrooks):\n    for i in range(numberofrooks):\n        (rook1, rook2) = map(int, input().split())\n        list2 = []\n        for i in range(rook2):\n            (pos1, pos2) = map(int, input().split())\n            list2.append(pos1)\n            list2.append(pos2)\n        if rook1 > rook2:\n            print('YES')\n        else:\n            print('NO')\nnumberofrooks = int(input())\nCowardly_Rooks(numberofrooks)", "t = int(input())\nfor z in range(t):\n    lis = []\n    (n, m) = [int(x) for x in input().split(' ', 1)]\n    for i in range(m):\n        lis.append([int(x) for x in input().split(' ', 1)])\n    if m < n:\n        print('YES')\n    else:\n        print('NO')", "import math\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef inchar():\n    return list(input().split())\n\ndef insr():\n    s = input()\n    return list(s)\n\ndef invr():\n    return map(int, input().split())\na = inp()\nfor _ in range(a):\n    k = inlt()\n    for _ in range(k[1]):\n        _ = inlt()\n    if k[0] != k[1]:\n        print('YES')\n    else:\n        print('NO')", "no_testcases = int(input())\nfor j in range(no_testcases):\n    nm = list(map(int, input().split(' ')))\n    n = nm[0]\n    m = nm[1]\n    positions = []\n    row_pos = []\n    column_pos = []\n    for i in range(m):\n        a = list(map(int, input().split(' ')))\n        row_pos.append(a[0])\n    if n == m:\n        print('NO')\n    else:\n        print('YES')", "a = int(input())\nsp = []\nfor i in range(a):\n    o = []\n    li = 0\n    (x, y) = map(int, input().split())\n    s1 = []\n    s2 = []\n    for t in range(y):\n        (stroka, stolb) = map(int, input().split())\n    if y < x:\n        sp.append('YES')\n    else:\n        sp.append('NO')\nfor i in sp:\n    print(i)", "cases = int(input())\nA = []\nfor i in range(cases):\n    (n, m) = input().split()\n    (n, m) = (int(n), int(m))\n    for j in range(m):\n        (x, y) = input().split()\n    if m < n:\n        A.append('YES')\n    else:\n        A.append('NO')\nfor k in range(cases):\n    print(A[k])", "resul = []\n\ndef check(arg):\n    b = arg[1]\n    for l in range(b):\n        posi = input()\n        posi = posi.split()\n        for i in range(len(posi)):\n            posi[i] = int(posi[i])\n    if arg[0] > arg[1]:\n        resul.append('YES')\n    else:\n        resul.append('NO')\n\ndef main():\n    tot = int(input())\n    for j in range(tot):\n        sizRook = input()\n        sizRook = sizRook.split()\n        for i in range(len(sizRook)):\n            sizRook[i] = int(sizRook[i])\n        check(sizRook)\n    for k in range(len(resul)):\n        print(resul[k])\nmain()", "Line1 = int(input().rstrip())\ntestCases = []\nboards = [[] for _ in range(Line1)]\nfor i in range(Line1):\n    nm = list(map(int, input().rstrip().split(' ')))\n    (n, m) = (nm[0], nm[1])\n    if n == m:\n        print('NO')\n    else:\n        print('YES')\n    for j in range(m):\n        boards[i].append(list(map(int, input().rstrip().split(' '))))", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    for j in range(m):\n        (x, y) = map(int, input().split())\n    if n > m:\n        print('YES')\n    else:\n        print('NO')", "import math\nimport collections\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    matrix = [input().split() for i in range(m)]\n    if n > m:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (n, m) = [int(x) for x in input().split()]\n    c = list(range(1, n + 1))\n    d = list(range(1, n + 1))\n    for j in range(m):\n        z = list(map(int, input().split()))\n        c.remove(z[0])\n        d.remove(z[1])\n    if len(c) >= 1 and len(d) >= 1:\n        print('YES')\n    else:\n        print('NO')", "loop_num = int(input())\nfor i in range(loop_num):\n    (n, m) = map(int, input().split())\n    for i in range(1, m + 1):\n        (x, y) = map(int, input().split())\n    if m < n:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nresult = []\nif t <= 2000 and t >= 1:\n    for i in range(t):\n        lis = []\n        num = input().split()\n        for i in num:\n            if int(i) <= 8 and int(i) >= 1:\n                lis.append(int(i))\n        for n in range(lis[1]):\n            l = input().split()\n        if lis[0] > lis[1]:\n            result.append('YES')\n        else:\n            result.append('NO')\nfor i in result:\n    print(i)", "t = int(input())\nj = []\nfor c in range(t):\n    if 1 <= t <= 2000:\n        (n, m) = map(int, input().split())\n        if 1 <= m <= 8 and 1 <= n <= 8:\n            board = n * n\n            rc = []\n            for g in range(m):\n                (row, culmn) = map(int, input().split())\n                if 1 <= row <= n and 1 <= culmn <= n:\n                    rc.append(row)\n                    rc.append(culmn)\n                else:\n                    break\n            if m >= n:\n                j.append('NO')\n            else:\n                j.append('YES')\n        else:\n            break\nfor t in j:\n    print(t)", "h = int(input())\nfor i in range(h):\n    k = str(input())\n    k1 = k.split(' ')\n    n = int(k1[0])\n    m = int(k1[1])\n    A = [[1 for i in range(n)] for j in range(n)]\n    B = []\n    D = {'YES': 0}\n    for j in range(m):\n        k2 = str(input())\n    if m < n:\n        print('YES')\n    else:\n        print('NO')", "YN = []\nt = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    for j in range(m):\n        (x, y) = map(int, input().split())\n    if n > m:\n        YN.append(1)\n    else:\n        YN.append(0)\nfor i in YN:\n    if i == 1:\n        print('YES')\n    else:\n        print('NO')", "def solution():\n    t = int(input())\n    for _ in range(t):\n        (n, m) = list(map(int, input().split()))\n        a = [[0 for _ in range(m)] for _ in range(n)]\n        for i in range(m):\n            (p, q) = list(map(int, input().split()))\n            a.append((p, q))\n        if n > m:\n            print('YES')\n        else:\n            print('NO')\nsolution()", "(t, r) = (int(input()), [])\nfor _ in range(t):\n    s = input().split()\n    (n, m) = (int(s[0]), int(s[1]))\n    p = [input() for _ in range(m)]\n    if m < n:\n        r.append('YES')\n    else:\n        r.append('NO')\nprint(*r, sep='\\n')", "def fun(arr, n, m):\n    if m >= n:\n        return False\n    if n > m:\n        return True\n    else:\n        flag1 = True\n        flag2 = True\n        for i in arr:\n            if i[0] != i[1]:\n                flag1 = False\n                break\n        for i in arr:\n            if i[0] + i[1] != n + 1:\n                flag2 = False\n                break\n        if flag1 == False and flag2 == False:\n            return True\n    return False\nt = int(input())\nwhile t > 0:\n    (n, m) = map(int, input().split())\n    arr = []\n    for i in range(m):\n        arr.append(list(map(int, input().split())))\n    if fun(arr, n, m):\n        print('YES')\n    else:\n        print('NO')\n    t = t - 1", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    for x in range(m):\n        (a, b) = map(int, input().split())\n    print('NO' if m >= n else 'YES')", "t = int(input())\nfor tc in range(t):\n    (n, m) = [int(x) for x in input().split(' ')]\n    for i in range(m):\n        ipt = input()\n    if m < n:\n        print('YES')\n    else:\n        print('NO')"]