["def fun(arr):\n    a = arr[0]\n    tmp = abs(arr[1] - arr[2]) + arr[2]\n    if a < tmp:\n        return 1\n    elif a > tmp:\n        return 2\n    else:\n        return 3\nn = int(input())\nl = []\nfor i in range(n):\n    l.append([int(i) for i in input().split()])\nfor i in l:\n    print(fun(i))", "for s in [*open(0)][1:]:\n    (a, b, c) = map(int, s.split())\n    c += abs(b - c)\n    print((a <= c) + 2 * (a >= c))", "n = int(input())\nl = []\nfor i in range(n):\n    (a, b, c) = map(int, input().split())\n    if a == abs(b - c) + c:\n        l.append('3')\n        continue\n    if min(a, abs(b - c) + c) == a:\n        l.append('1')\n    else:\n        l.append('2')\nfor i in l:\n    print(i)", "n = int(input())\nl = []\nfor i in range(n):\n    (a, b, c) = input().split()\n    a = int(a)\n    b = int(b)\n    c = int(c)\n    if b - c >= 0:\n        d = b - c\n    else:\n        d = c - b\n    if a > d + c:\n        l.append(2)\n    elif a < d + c:\n        l.append(1)\n    elif a == d + c:\n        l.append(3)\nfor i in range(len(l)):\n    print(l[i])", "ans = ''\ninpt = int(input())\nfor i in range(inpt):\n    inpt = input().split()\n    (a, b, c) = (int(inpt[0]), int(inpt[1]), int(inpt[2]))\n    if c < b:\n        if b < a:\n            ans += '2'\n        elif b == a:\n            ans += '3'\n        else:\n            ans += '1'\n    else:\n        s_way_length = 2 * c - b\n        if a > s_way_length:\n            ans += '2'\n        elif a == s_way_length:\n            ans += '3'\n        else:\n            ans += '1'\nfor item in ans:\n    print(item)", "for s in [*open(0)][1:]:\n    (a, b, c) = map(int, s.split())\n    c += abs(b - c)\n    print((a <= c) + 2 * (a >= c))", "for s in [*open(0)][1:]:\n    (a, b, c) = map(int, s.split())\n    c += abs(b - c)\n    print((a <= c) + 2 * (a >= c))", "for s in [*open(0)][1:]:\n    (a, b, c) = map(int, s.split())\n    c += abs(b - c)\n    print((a <= c) + 2 * (a >= c))", "for s in [*open(0)][1:]:\n    (a, b, c) = map(int, s.split())\n    c += abs(b - c)\n    print((a <= c) + 2 * (a >= c))", "for s in [*open(0)][1:]:\n    (a, b, c) = map(int, s.split())\n    c += abs(b - c)\n    print((a <= c) + 2 * (a >= c))", "t = int(input())\nans = [3] * t\nfor i in range(t):\n    (a, b, c) = map(int, input().split())\n    if a < abs(b - c) + c:\n        ans[i] = 1\n    elif a > abs(b - c) + c:\n        ans[i] = 2\nfor i in range(t):\n    print(ans[i])", "for nukea in [*open(0)][1:]:\n    (adam, bee, carlson) = map(int, nukea.split())\n    carlson += abs(bee - carlson)\n    print((adam <= carlson) + 2 * (adam >= carlson))", "for s in [*open(0)][1:]:\n    (a, b, c) = map(int, s.split())\n    c += abs(b - c)\n    print((a <= c) + 2 * (a >= c))", "t = int(input())\nresult = []\nfor i in range(t):\n    (a, b, c) = map(int, input().split())\n    f_lift_time = a - 1\n    s_lift_time = abs(b - c) + c - 1\n    if f_lift_time == s_lift_time:\n        result.append('3')\n    elif f_lift_time > s_lift_time:\n        result.append('2')\n    else:\n        result.append('1')\nprint(*result, sep='\\n')", "for s in [*open(0)][1:]:\n    (a, b, c) = map(int, s.split())\n    c += abs(b - c)\n    print((a <= c) + 2 * (a >= c))", "for s in [*open(0)][1:]:\n    (a, b, c) = map(int, s.split())\n    c += abs(b - c)\n    print((a <= c) + 2 * (a >= c))", "for s in [*open(0)][1:]:\n    (a, b, c) = map(int, s.split())\n    c += abs(b - c)\n    print((a <= c) + 2 * (a >= c))", "import sys\ninput = sys.stdin.readline\noutput = sys.stdout.write\n\ndef main():\n    tests = int(input().rstrip())\n    for i in range(tests):\n        (a, b, c) = map(int, input().rstrip().split())\n        el_1 = a - 1\n        el_2 = abs(b - c) + (c - 1)\n        if el_1 < el_2:\n            output('1')\n        elif el_1 > el_2:\n            output('2')\n        else:\n            output('3')\n        output('\\n')\nmain()", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    x = abs(a - 1)\n    y = abs(b - c) + abs(c - 1)\n    if y == x:\n        print(3)\n    elif y > x:\n        print(1)\n    else:\n        print(2)", "import sys\nsys.setrecursionlimit(10 ** 6)\nfrom collections import Counter, deque, defaultdict\nimport math\nimport heapq\nip = sys.stdin.readline\nop = sys.stdout.write\nt = int(ip())\nres = []\nfor _ in range(t):\n    (a, b, c) = [int(x) for x in ip().split()]\n    choice1 = a - 1\n    choice2 = abs(c - b) + abs(c - 1)\n    if choice1 == choice2:\n        res.append(3)\n    elif choice1 < choice2:\n        res.append(1)\n    else:\n        res.append(2)\nfor val in res:\n    op(str(val) + '\\n')", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nfor _ in range(inp()):\n    (a, b, c) = invr()\n    dif1 = abs(a - 1)\n    dif2 = abs(c - b) + abs(c - 1)\n    if dif1 < dif2:\n        print(1)\n    elif dif1 > dif2:\n        print(2)\n    else:\n        print(3)", "import sys\ninput = sys.stdin.readline\n\ndef print(*args, end='\\n', sep=' ') -> None:\n    sys.stdout.write(sep.join(map(str, args)) + end)\n\ndef Solve():\n    for t in range(int(input())):\n        (a, b, c) = map(int, input().split())\n        if abs(a - 1) < abs(b - c) + abs(c - 1):\n            print(1)\n        elif abs(a - 1) > abs(b - c) + abs(c - 1):\n            print(2)\n        else:\n            print(3)\nSolve()", "import sys\nreadline = sys.stdin.readline\nt = int(readline())\nfor _ in range(t):\n    (a, b, c) = map(int, readline().split())\n    t1 = a - 1\n    t2 = abs(b - c) + abs(c - 1)\n    if t1 < t2:\n        print(1)\n    elif t1 == t2:\n        print(3)\n    else:\n        print(2)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef Two_Elevators(a, b, c):\n    ele_one = a - 1\n    ele_two = abs(b - c) + abs(c - 1)\n    if ele_one == ele_two:\n        return 3\n    elif ele_one < ele_two:\n        return 1\n    else:\n        return 2\nnum_testcases = inp()\nfor i in range(num_testcases):\n    (a, b, c) = invr()\n    sys.stdout.write(str(Two_Elevators(a, b, c)) + '\\n')", "import sys\nsys.setrecursionlimit(200000)\nimport math\nfrom collections import Counter\nfrom collections import defaultdict\nfrom collections import deque\ninput = sys.stdin.readline\nfrom functools import lru_cache\nimport heapq\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\ntestcases = inp()\nfor i in range(testcases):\n    (a, b, c) = inlt()\n    if a - 1 < max(1, abs(b - c)) + c - 1:\n        print(1)\n    elif a - 1 > max(1, abs(b - c)) + c - 1:\n        print(2)\n    else:\n        print(3)", "t = int(input())\nanswers = []\nfor i in range(t):\n    (a, b, c) = map(int, input().split())\n    a = abs(1 - a)\n    bc = abs(b - c) + abs(1 - c)\n    if a < bc:\n        answers.append(1)\n    elif a > bc:\n        answers.append(2)\n    else:\n        answers.append(3)\nfor j in range(len(answers)):\n    print(answers[j])", "def res(a, b, c):\n    if a > abs(b - c) + c:\n        return 2\n    elif a == abs(b - c) + c:\n        return 3\n    else:\n        return 1\nn = int(input())\nre = []\nfor i in range(n):\n    (a, b, c) = map(int, input().split())\n    re.append(str(res(a, b, c)))\nprint('\\n'.join(re))", "import sys\narr = []\nfor line in sys.stdin:\n    nums = [int(x) for x in line.strip().split()]\n    for j in nums:\n        arr.append(j)\ntest_cases = arr[0]\ni = 1\nfor tc in range(test_cases):\n    a = arr[i]\n    b = arr[i + 1]\n    c = arr[i + 2]\n    i = i + 3\n    if a < abs(b - c) + c:\n        print(1)\n    elif a > abs(b - c) + c:\n        print(2)\n    else:\n        print(3)", "import sys\ntestcases = input()\ninputs = []\nfor t in range(0, int(testcases)):\n    line = input()\n    inputs.append(line)\nfor p in inputs:\n    r = p.split()\n    a = int(r[0])\n    b = int(r[1])\n    c = int(r[2])\n    if a == 1:\n        print(1)\n    else:\n        f = abs(a - 1)\n        s = abs(c - b) + abs(c - 1)\n        if f < s:\n            print(1)\n        elif s < f:\n            print(2)\n        else:\n            print(3)", "test_num = int(input())\nfinal_list = []\nfor i in range(test_num):\n    line = input()\n    a = int(line.split(' ')[0])\n    b = int(line.split(' ')[1])\n    c = int(line.split(' ')[2])\n    f_elev = abs(a - 1)\n    s_elev = abs(b - c) + abs(c - 1)\n    if f_elev < s_elev:\n        final_list.append(1)\n    elif s_elev < f_elev:\n        final_list.append(2)\n    else:\n        final_list.append(3)\nfor i in final_list:\n    print(i)", "t = int(input())\ni = 0\nm = [1] * t\na = [1] * t\nwhile i < t:\n    a[i] = [int(x) for x in input().split(' ', 3)]\n    y = 0\n    if a[i][1] - a[i][2] > 0:\n        y = a[i][1] - a[i][2]\n    else:\n        y = (a[i][1] - a[i][2]) * -1\n    if a[i][0] - 1 < y + a[i][2] - 1:\n        m[i] = 1\n    elif a[i][0] - 1 == y + a[i][2] - 1:\n        m[i] = 3\n    else:\n        m[i] = 2\n    i += 1\nr = 0\nwhile r < t:\n    print(m[r])\n    r += 1", "def fastelevator(a, b, c):\n    if a == 1:\n        return 1\n    else:\n        first = a - 1\n        second = abs(c - b) + c - 1\n        if first == second:\n            return 3\n        elif first < second:\n            return 1\n        else:\n            return 2\nl = []\nN = int(input())\nfor i in range(N):\n    input_list = list(map(int, input().split()))\n    l.append(input_list)\nfor i in range(N):\n    a = l[i][0]\n    b = l[i][1]\n    c = l[i][2]\n    print(fastelevator(a, b, c))", "n = int(input())\narr = []\nfor _ in range(n):\n    arr.append(list(map(int, input().split())))\nfor i in arr:\n    if i[2] > i[1]:\n        x = i[2] - i[1]\n        x += i[2] - 1\n    elif i[1] > i[2] and i[2] != 1:\n        x = i[1] - i[2]\n        x += i[2] - 1\n    elif i[1] > i[2] and i[2] == 1:\n        x = i[1] - i[2]\n    if i[0] == 1:\n        y = 0\n    elif i[0] != 1:\n        y = i[0] - 1\n    if x > y:\n        print(1)\n    elif x < y:\n        print(2)\n    else:\n        print(3)", "def Lift():\n    (a, b, c) = map(int, input().split())\n    if a < abs(b - c) + c:\n        return 1\n    elif a > abs(b - c) + c:\n        return 2\n    else:\n        return 3\nt = int(input())\nm = []\nfor i in range(t):\n    m.append(Lift())\nfor i in range(t):\n    print(m[i])", "for s in [*open(0)][1:]:\n    (a, b, c) = map(int, s.split())\n    c += abs(b - c)\n    print((a <= c) + 2 * (a >= c))", "inpt = int(input())\nans = [0 for i in range(inpt)]\nfor i in range(inpt):\n    inpt = input().split()\n    (a, b, c) = (int(inpt[0]), int(inpt[1]), int(inpt[2]))\n    if c < b:\n        if b < a:\n            ans[i] = 2\n        elif b == a:\n            ans[i] = 3\n        else:\n            ans[i] = 1\n    else:\n        s_way_length = 2 * c - b\n        if a > s_way_length:\n            ans[i] = 2\n        elif a == s_way_length:\n            ans[i] = 3\n        else:\n            ans[i] = 1\nfor item in ans:\n    print(item)", "a = int(input())\nlis = [3] * a\nfor i in range(a):\n    b = [int(x) for x in input().split()]\n    if b[0] - 1 < abs(b[2] - b[1]) + abs(b[2] - 1):\n        lis[i] = 1\n    elif b[0] - 1 > abs(b[2] - b[1]) + abs(b[2] - 1):\n        lis[i] = 2\nfor i in lis:\n    print(i)", "from sys import stdin\nrd = stdin.readline\nfor __ in range(int(rd())):\n    (a, b, c) = map(int, rd().split())\n    if a < abs(b - c) + c:\n        print(1)\n    elif a == abs(b - c) + c:\n        print(3)\n    else:\n        print(2)", "n = int(input())\nresult = []\nfor i in range(0, n):\n    (a, b, c) = map(int, input().split())\n    s1 = a - 1\n    s2 = abs(b - c) + c - 1\n    result.append(1 if s1 < s2 else 2 if s2 < s1 else 3)\nfor j in result:\n    print(j)", "t = int(input())\ns = []\nfor i in range(t):\n    (a, b, c) = map(int, input().split())\n    e = abs(a - 1)\n    r = abs(b - c) + abs(c - 1)\n    if e < r:\n        s.append(1)\n    elif e > r:\n        s.append(2)\n    elif e == r:\n        s.append(3)\nfor j in range(len(s)):\n    print(s[j])", "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    (a, b, c) = map(int, sys.stdin.readline().strip().split())\n    time1 = abs(a - 1)\n    time2 = abs(c - b) + abs(c - 1)\n    if time1 > time2:\n        print(2)\n    elif time1 < time2:\n        print(1)\n    else:\n        print(3)", "from collections import deque, Counter\nfrom math import *\nimport sys\nimport random\nfrom bisect import *\nfrom functools import reduce\nfrom sys import stdin\nfrom heapq import *\nimport copy\ninput = lambda : sys.stdin.readline().rstrip()\nfor _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    if a < abs(b - c) + abs(c):\n        print(1)\n    elif a == abs(b - c) + abs(c):\n        print(3)\n    else:\n        print(2)", "t = int(input())\nans = []\nfor i in range(t):\n    (a, b, c) = list(map(int, input().split()))\n    sol1 = abs(a - 1)\n    sol2 = abs(c - b) + abs(c - 1)\n    if sol1 < sol2:\n        ans.append(1)\n    elif sol1 == sol2:\n        ans.append(3)\n    else:\n        ans.append(2)\nfor j in ans:\n    print(j)", "N = int(input())\nf = []\nfor i in range(N):\n    a = list(map(int, input().split()))\n    a1 = 0\n    a2 = 0\n    a1 = a[0] - 1\n    a2 = abs(a[2] - a[1]) + a[2] - 1\n    if a1 < a2:\n        f.append(1)\n    elif a2 < a1:\n        f.append(2)\n    else:\n        f.append(3)\nfor t in f:\n    print(t)", "from re import A\nt = int(input())\nlists = []\nfor i in range(t):\n    inp = list(map(int, input().split()))\n    a = inp[0]\n    b = inp[1]\n    c = inp[2]\n    t1 = a - 1\n    t2 = abs(c - b) + abs(c - 1)\n    if t1 < t2:\n        elevator = 1\n    elif t2 < t1:\n        elevator = 2\n    else:\n        elevator = 3\n    lists.append(elevator)\nfor x in range(len(lists)):\n    print(lists[x])", "a = int(input(''))\nlis = []\nfor i in range(a):\n    l = list(map(int, input().split()))\n    (m1, m2, m3) = (l[0], l[1], l[2])\n    if m1 > abs(m3 - m2) + m3:\n        lis.append(2)\n    elif m1 < abs(m3 - m2) + m3:\n        lis.append(1)\n    else:\n        lis.append(3)\nfor i in range(len(lis)):\n    print(lis[i])", "def func(a):\n    if a[0] - 1 > abs(a[1] - a[2]) + abs(a[2] - 1):\n        return 2\n    elif a[0] - 1 < abs(a[1] - a[2]) + abs(a[2] - 1):\n        return 1\n    else:\n        return 3\ntry:\n    t = int(input())\n    arr = []\n    for i in range(t):\n        n = list(map(int, input().split(' ')))\n        arr.append(n)\n    for i in range(t):\n        print(func(arr[i]))\nexcept:\n    pass", "n = int(input())\narr = []\nfor i in range(n):\n    arr.append([int(j) for j in input().split()])\nfor set in arr:\n    if set[0] - 1 < abs(set[2] - set[1]) + set[2] - 1:\n        print(1)\n    elif set[0] - 1 > abs(set[2] - set[1]) + set[2] - 1:\n        print(2)\n    else:\n        print(3)", "def main():\n    n = int(input())\n    ans = []\n    for i in range(n):\n        (a, b, c) = map(int, input().split())\n        a -= 1\n        if c < b:\n            time_ans = b - 1\n        else:\n            time_ans = -1 + b + (c - b) * 2\n        if time_ans < a:\n            ans.append(2)\n        elif time_ans > a:\n            ans.append(1)\n        else:\n            ans.append(3)\n    for i in range(n):\n        print(ans[i])\nmain()", "def count_(list_):\n    dec = abs(list_[2] - list_[1]) + abs(list_[2] - 1) - abs(list_[0] - 1)\n    if dec == 0:\n        return 3\n    elif dec > 0:\n        return 1\n    else:\n        return 2\ncount_tot = int(input())\nlist_of_list = []\nfor i in range(count_tot):\n    list_of_list.append(list(map(int, input().strip().split())))\nfor i in list_of_list:\n    print(count_(i))", "t = int(input())\noutputs = []\nfor _ in range(t):\n    (a, b, c) = map(int, input().split())\n    if a > c + abs(c - b):\n        outputs.append(2)\n    elif a < c + abs(c - b):\n        outputs.append(1)\n    else:\n        outputs.append(3)\nfor output in outputs:\n    print(output)", "n = int(input())\ndata = []\nfor i in range(n):\n    (a, b, c) = list(map(int, input().split()))\n    data.append([a, b, c])\nfor i in range(len(data)):\n    (a, b, c) = data[i]\n    if a == 1:\n        print(1)\n    elif abs(a - 1) < abs(c - b) + abs(c - 1):\n        print(1)\n    elif abs(a - 1) > abs(c - b) + abs(c - 1):\n        print(2)\n    else:\n        print(3)", "t = int(input())\nk = []\nfor i in range(t):\n    m = input().split()\n    n = list(m)\n    for i in range(len(n)):\n        n[i] = int(n[i])\n    a = n[0]\n    b = n[1]\n    c = n[2]\n    if a - 1 < abs(b - c) + abs(c - 1):\n        k.append(1)\n    elif a - 1 > abs(b - c) + abs(c - 1):\n        k.append(2)\n    else:\n        k.append(3)\nfor i in k:\n    print(i)", "n = int(input())\nl1 = []\nfor i in range(n):\n    l1.append([int(x) for x in input().split()])\nfor i in range(n):\n    a = l1[i][0] - 1\n    b = abs(l1[i][1] - l1[i][2]) + l1[i][2] - 1\n    if a < b:\n        print(1)\n    if a == b:\n        print(3)\n    if a > b:\n        print(2)\nprint()", "t = int(input())\nfor _ in range(t):\n    (a, b, c) = map(int, input().split())\n    if a < c + abs(b - c):\n        print(1)\n    elif a > c + abs(b - c):\n        print(2)\n    else:\n        print(3)", "from functools import cmp_to_key\nfrom collections import Counter, deque, defaultdict, OrderedDict\nimport math\nfrom bisect import bisect, bisect_left\nimport sys\nimport re\nfrom copy import deepcopy\nMOD = 10 ** 9 + 7\nMAX = -sys.maxsize\nMIN = sys.maxsize\n\nclass get:\n\n    def int():\n        return list(map(int, input().split()))\n\n    def str():\n        return input().split()\n\n    def float():\n        return list(map(float, input().split()))\n\n    def map():\n        return map(int, input().split())\n\ndef sqrt(x):\n    return int(math.sqrt(x)) + 1\n\ndef gcd(*args):\n    result = args[0]\n    for item in args:\n        result = math.gcd(result, item)\n    return result\n\ndef LCM(a, b):\n    return a * b // math.gcd(a, b)\n\ndef isPrime(n):\n    if n == 1:\n        return False\n    for i in range(2, sqrt(n)):\n        if n % i == 0:\n            return False\n    return True\n\ndef print2d(arr):\n    for item in arr:\n        print(*item)\n\ndef solve():\n    (a, b, c) = get.map()\n    x1 = abs(a - 1)\n    x2 = abs(b - c) + abs(c - 1)\n    if x1 == x2:\n        print(3)\n    elif x1 > x2:\n        print(2)\n    else:\n        print(1)\nt = int(input())\nfor tt in range(t):\n    solve()", "from collections import Counter\nimport sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nt = inp()\nfor _ in range(t):\n    (a, b, c) = inlt()\n    distA = a - 1\n    if c > b:\n        b = c + c - b\n    distB = abs(b - 1)\n    if distA == distB:\n        print(3)\n    else:\n        print([1, 2][distA > distB])", "t = int(input())\nfor i in range(t):\n    l = input().split()\n    (a, b, c) = (int(l[0]), int(l[1]), int(l[2]))\n    (t1, t2) = (abs(a - 1), abs(c - b) + abs(c - 1))\n    if t1 < t2:\n        print(1)\n    elif t1 > t2:\n        print(2)\n    else:\n        print(3)", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    atrip = a - 1\n    if b < c:\n        btrip = 2 * (c - b) + (b - 1)\n    else:\n        btrip = b - 1\n    if atrip < btrip:\n        print(1)\n    elif atrip > btrip:\n        print(2)\n    else:\n        print(3)", "N = int(input())\nfor _ in range(N):\n    line = input()\n    ss = [int(s) for s in line.split(' ')]\n    a = ss[0]\n    b = ss[1]\n    c = ss[2]\n    if b < c:\n        c = c + (c - b)\n    else:\n        c = b\n    if a > c:\n        print('2')\n    elif a < c:\n        print('1')\n    else:\n        print('3')", "t = int(input())\nfor i in range(t):\n    ans = 0\n    (a, b, c) = map(int, input().split())\n    l1 = abs(a - 1)\n    l2 = abs(b - c) + abs(c - 1)\n    if l1 < l2:\n        ans = 1\n    elif l1 > l2:\n        ans = 2\n    else:\n        ans = 3\n    print(ans)", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    k = abs(b - c)\n    if a < c + k:\n        print(1)\n    elif a > c + k:\n        print(2)\n    else:\n        print(3)", "t = int(input())\nfor i in range(t):\n    (a, b, c) = map(int, input().split())\n    x = a - 1\n    if c > b:\n        y = 2 * c - b - 1\n    else:\n        y = b - 1\n    if x == y:\n        print(3)\n    elif x < y:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().strip().split())\n    if a < abs(b - c) + abs(c):\n        print(1)\n    elif a > abs(b - c) + abs(c):\n        print(2)\n    else:\n        print(3)", "for i in range(int(input())):\n    l = list(map(int, input().split()))\n    a = l[0]\n    b = l[1]\n    c = l[2]\n    x = abs(a - 1)\n    y = abs(c - b) + abs(c - 1)\n    if x < y:\n        print(1)\n    elif x > y:\n        print(2)\n    else:\n        print(3)", "t = int(input())\nwhile t:\n    t -= 1\n    (a, b, c) = map(int, input().split())\n    a_time = a - 1\n    b_time = abs(c - b) + abs(c - 1)\n    if a_time < b_time:\n        print(1)\n    elif b_time < a_time:\n        print(2)\n    else:\n        print(3)", "def main():\n    t = int(input())\n    for _ in range(t):\n        (a, b, c) = map(int, input().split())\n        elevator_1 = abs(a - 1)\n        elevator_2 = abs(b - c) + abs(1 - c)\n        if elevator_1 < elevator_2:\n            print('1')\n        elif elevator_2 < elevator_1:\n            print('2')\n        else:\n            print('3')\nmain()", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    one = abs(a - 1)\n    two = abs(b - c) + abs(c - 1)\n    print(1 if one < two else 2 if two < one else 3)", "t = int(input())\nfor i in range(t):\n    [a, b, c] = input().split(' ')\n    a = int(a)\n    b = int(b)\n    c = int(c)\n    if abs(a - 1) < abs(c - b) + abs(c - 1):\n        print(1)\n    elif abs(a - 1) == abs(c - b) + abs(c - 1):\n        print(3)\n    else:\n        print(2)", "t = int(input())\nfor _ in range(t):\n    (a, b, c) = map(int, input().split())\n    dis_b = abs(b - c) + abs(c - 1)\n    dis_a = abs(a - 1)\n    if dis_a < dis_b:\n        print(1)\n    elif dis_a == dis_b:\n        print(3)\n    else:\n        print(2)", "def solve(a, b, c):\n    i = 1\n    visit = False\n    diffA = 0\n    diffB = 0\n    diffA = a - 1\n    if c > b:\n        diffB = c + (c - b) - 1\n    else:\n        diffB = b - 1\n    if diffA < diffB:\n        return 1\n    elif diffB < diffA:\n        return 2\n    else:\n        return 3\n\ndef main():\n    t = int(input())\n    for i in range(0, t):\n        s = []\n        s = input().split(' ')\n        print(solve(int(s[0]), int(s[1]), int(s[2])))\nmain()", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    if a < abs(b - c) + c:\n        print(1)\n    elif a > abs(b - c) + c:\n        print(2)\n    else:\n        print(3)", "t = int(input())\nfor _ in range(t):\n    (a, b, c) = map(int, input().split())\n    a1 = abs(a - 1)\n    a2 = abs(c - b) + abs(c - 1)\n    if a1 > a2:\n        print(2)\n    elif a2 > a1:\n        print(1)\n    else:\n        print(3)", "def solve():\n    result = []\n    t = int(input())\n    for _ in range(t):\n        (a, b, c) = tuple(map(int, input().split()))\n        elevator_1 = abs(a - 1)\n        elevator_2 = abs(b - c) + abs(c - 1)\n        if elevator_1 == elevator_2:\n            result.append(3)\n        else:\n            result.append(1 if elevator_1 < elevator_2 else 2)\n    for r in result:\n        print(r)\nsolve()", "data = []\nfor _ in range(int(input())):\n    (a, b, c) = list(map(int, input().split()))\n    data.append([a, b, c])\nfor d in data:\n    (a, b, c) = d\n    if abs(a - 1) < abs(b - c) + abs(c - 1):\n        print('1')\n    if abs(a - 1) > abs(b - c) + abs(c - 1):\n        print('2')\n    if abs(a - 1) == abs(b - c) + abs(c - 1):\n        print('3')", "import sys\nimport math\nfrom collections import Counter\n\ndef gi():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef gs():\n    return sys.stdin.readline().strip()\n\ndef fun(a, b, c):\n    if abs(a - 1) < abs(b - c) + abs(c - 1):\n        return 1\n    if abs(a - 1) > abs(b - c) + abs(c - 1):\n        return 2\n    return 3\nfor _ in range(int(input())):\n    (a, b, c) = gi()\n    print(fun(a, b, c))", "for i in range(int(input())):\n    (a, b, c) = [int(i) for i in input().split()]\n    if a == 1:\n        print(1)\n    else:\n        first = 0\n        second = 0\n        first = a - 1\n        if c == 1:\n            second = b - 1\n        elif b > c:\n            second = b - 1\n        else:\n            second = c - b\n            second += c - 1\n        if first < second:\n            print(1)\n        elif second < first:\n            print(2)\n        elif second == first:\n            print(3)", "def solution(a, b, c):\n    if b > c:\n        if a == b:\n            return 3\n        elif a > b:\n            return 2\n        else:\n            return 1\n    else:\n        time = c + abs(b - c)\n        if a == time:\n            return 3\n        elif a > time:\n            return 2\n        else:\n            return 1\nt = int(input())\nwhile t:\n    (a, b, c) = [int(x) for x in input().strip().split(' ')]\n    print(solution(a, b, c))\n    t -= 1", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    a = abs(a - 1)\n    b = abs(c - 1) + abs(b - c)\n    if a == b:\n        print(3)\n    elif a < b:\n        print(1)\n    else:\n        print(2)", "t = int(input())\ns = []\nans = []\nfor i in range(t):\n    s.append([i for i in map(int, input().split())])\nfor i in range(t):\n    if ((s[i][0] - 1) ** 2) ** 0.5 < ((s[i][1] - s[i][2]) ** 2) ** 0.5 + ((s[i][2] - 1) ** 2) ** 0.5:\n        ans.append(1)\n    elif ((s[i][0] - 1) ** 2) ** 0.5 > ((s[i][1] - s[i][2]) ** 2) ** 0.5 + ((s[i][2] - 1) ** 2) ** 0.5:\n        ans.append(2)\n    else:\n        ans.append(3)\n[print(ans[i]) for i in range(t)]", "t = int(input())\nwhile t:\n    (a, b, c) = map(int, input().split())\n    if a - 1 < abs(b - c) + c - 1:\n        print(1)\n    elif a - 1 > abs(b - c) + c - 1:\n        print(2)\n    else:\n        print(3)\n    t -= 1", "n = int(input())\nfor i in range(n):\n    (a, b, c) = map(int, input().split())\n    dist_1 = abs(a - 1)\n    dist_2 = abs(b - c) + abs(c - 1)\n    if dist_1 < dist_2:\n        print('1')\n    elif dist_1 > dist_2:\n        print('2')\n    else:\n        print('3')", "def fun(a, b, c):\n    timea = a - 1\n    if c > b:\n        timeb = 2 * c - b - 1\n    if c < b:\n        timeb = b - 1\n    if timea < timeb:\n        return 1\n    if timea == timeb:\n        return 3\n    else:\n        return 2\nt = int(input())\nfor tc in range(t):\n    (a, b, c) = map(int, input().split())\n    print(fun(a, b, c))", "t = int(input())\nfor i in range(t):\n    (a, b, c) = map(int, input().split())\n    if a < abs(b - c) + c:\n        print('1')\n    elif a > abs(b - c) + c:\n        print('2')\n    else:\n        print('3')", "def check(a, b, c):\n    temp = abs(b - c) + c\n    if a < temp:\n        return 1\n    elif a > temp:\n        return 2\n    else:\n        return 3\nfor _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    sec = check(a, b, c)\n    print(sec)", "t = int(input())\nfor i in range(t):\n    (a, b, c) = map(int, input().split())\n    if a == 1:\n        print(1)\n    elif b != 1:\n        b2 = abs(c - b) + c - 1\n        if abs(a - 1) < b2:\n            print(1)\n        elif abs(a - 1) > b2:\n            print(2)\n        elif abs(a - 1) == b2:\n            print(3)\n    else:\n        b2 = abs(b - c) + c - 1\n        if abs(a - 1) < b2:\n            print(1)\n        elif abs(a - 1) > b2:\n            print(2)\n        elif abs(a - 1) == b2:\n            print(3)", "def Favaku():\n    for Z in range(int(input())):\n        (a, b, c) = [int(i) for i in input().split()]\n        ta = a - 1\n        tbc = abs(c - b) + (c - 1)\n        if ta < tbc:\n            print(1)\n        elif tbc < ta:\n            print(2)\n        else:\n            print(3)\nFavaku()", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    if abs(a - 1) < abs(b - c) + abs(c - 1):\n        print('1')\n    elif abs(a - 1) > abs(b - c) + abs(c - 1):\n        print('2')\n    else:\n        print('3')", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    time_b = abs(b - c) + c\n    if a == time_b:\n        print(3)\n    elif a < time_b:\n        print(1)\n    else:\n        print(2)", "tc = int(input())\nfor _ in range(tc):\n    (a, b, c) = map(int, input().split())\n    l = a - 1\n    k = abs(b - c) + c - 1\n    if l < k:\n        print(1)\n    elif l > k:\n        print(2)\n    else:\n        print(3)", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    x = abs(a - 1)\n    y = abs(b - c) + abs(c - 1)\n    if x > y:\n        print(2)\n    elif y > x:\n        print(1)\n    else:\n        print(3)", "times = int(input())\nfor time in range(times):\n    (a, b, c) = [int(x) for x in input().split()]\n    if a - 1 > abs(b - c) + c - 1:\n        print(2)\n    elif a - 1 < abs(b - c) + c - 1:\n        print(1)\n    else:\n        print(3)", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    f = abs(a - 1)\n    s = abs(b - c) + abs(c - 1)\n    if f < s:\n        print(1)\n    elif s < f:\n        print(2)\n    else:\n        print(3)", "def main():\n    (a, b, c) = map(int, input().split())\n    first = abs(a - 1)\n    second = abs(b - c) + abs(c - 1)\n    if first < second:\n        return 1\n    if second < first:\n        return 2\n    return 3\nfor _ in range(int(input())):\n    print(main())"]