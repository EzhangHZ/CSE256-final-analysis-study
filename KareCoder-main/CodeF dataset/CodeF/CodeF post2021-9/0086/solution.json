["t = int(input())\nanswer_list = []\n\ndef function(m, n):\n    if n > m:\n        a = n\n        b = m\n        return b - 1 + a + b - 1\n    elif n == 1 and m == 1:\n        return 0\n    else:\n        a = m\n        b = n\n        return b - 1 + a + b - 1\nfor i in range(t):\n    s = input()\n    lst = s.split()\n    a = int(lst[0])\n    b = int(lst[-1])\n    answer_list.append(function(a, b))\nprint(*answer_list, sep='\\n')", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (r, c) = map(int, input().split())\n    meg = r - 1 + c - 1\n    stan = min([1 + c - 1, 1 + r - 1, r - 1 + c - 1])\n    cost = meg + stan\n    print(cost)", "for s in [*open(0)][1:]:\n    (n, m) = sorted(map(int, s.split()))\n    print(2 * n + m - 3 + (m > 1))", "t = int(input())\nres = []\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    if n == 1 and m == 1:\n        res.append(0)\n    else:\n        res.append(n + m + min(n, m) - 2)\nfor i in res:\n    print(i)", "for _ in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    (n, m) = [max(n, m), min(n, m)]\n    if n == 1 and m == 1:\n        print(0)\n    elif m == 1:\n        print(n)\n    else:\n        print(n - 1 + m - 1 + m)", "t = int(input())\nfor _ in range(t):\n    a = list(map(int, input().split()))\n    n = a[0]\n    m = a[1]\n    if n == 1 and m == 1:\n        print(0)\n    elif n >= m:\n        print(2 * m + n - 2)\n    elif n < m:\n        print(2 * n + m - 2)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n == 1 and m == 1:\n        print('0')\n    else:\n        print(max(n, m) + 2 * (min(n, m) - 1))", "def solve():\n    x = int(input())\n    for __ in range(x):\n        [n, m] = list(map(int, input().split()))\n        if n == m == 1:\n            print(0)\n            continue\n        print(n + m - 2 + min(m, n))\nsolve()", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    if n == 1 and m == 1:\n        print(0)\n    elif n == 1 or m == 1:\n        print(n + m - 1)\n    else:\n        print(n + m - 2 + min(n, m))", "t = int(input())\nfor test in range(t):\n    www = input().split(' ')\n    a = int(www[0])\n    b = int(www[1])\n    m = min(a, b)\n    n = max(a, b)\n    k = 2 * m + n - 2\n    if m == 1 and n == 1:\n        print(0)\n    else:\n        print(k)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (a, b) = [int(i) for i in input().split()]\n    k = a - 1 + b + b - 1\n    k1 = a + a - 1 + b - 1\n    if a == 1 and b == 1:\n        print(0)\n    else:\n        print(min(k, k1))", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    (n, m) = map(int, inp().split())\n    if n == 1 and m == 1:\n        print(0)\n    else:\n        print(n - 1 + (m - 1) + min(n, m))\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "import sys\ninput = sys.stdin.readline\nR = lambda : [*map(int, input().split())]\nfor _ in range(int(input())):\n    (n, m) = R()\n    if n == 1 and m == 1:\n        print(0)\n    else:\n        print(min(n, m) * 2 + max(n, m) - 2)", "import sys\ninput = iter(sys.stdin.read().splitlines()).__next__\n\ndef solve(N, M):\n    ret = min((N + M - 2) * 2, N + M - 2 + N - 1 + 1, N + M - 2 + M - 1 + 1)\n    return ret\nTC = int(input())\nfor tc in range(TC):\n    (N, M) = map(int, input().split())\n    res = solve(N, M)\n    print(res)", "for _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    if m == 1 and n == 1:\n        print(0)\n    elif m > n:\n        print(m + n + n - 2)\n    else:\n        print(m + n + m - 2)", "t = int(input())\nsol = []\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    if n == 1 and m == 1:\n        sol.append(0)\n        continue\n    sol.append(min(m - 1 + n + n - 1, n - 1 + m + m - 1))\nfor s in sol:\n    print(s)", "n = int(input())\nfor e in range(n):\n    l = list(map(int, input().split()))\n    if l[1] == 1 and l[0] == 1:\n        print(0)\n    else:\n        q = l[0] + l[1] + min(l[0], l[1]) - 2\n        print(q)", "t = int(input())\nfor ncase in range(1, t + 1):\n    (n, m) = [int(s) for s in input().split(' ')]\n    if n == 1 and m == 1:\n        ans = 0\n    else:\n        ans = 2 * min(n, m) + max(n, m) - 2\n    print(ans)", "case = int(input())\nfor i in range(case):\n    (n, m) = (int(v) for v in input().split())\n    if n == m == 1:\n        print(0)\n    else:\n        print(n + m - 2 + min(n, m))", "t = int(input())\nwhile t:\n    t -= 1\n    (n, m) = map(int, input().split())\n    if n < 2 and m < 2:\n        print(0)\n    else:\n        (n, m) = (max(n, m), min(n, m))\n        print(n + 2 * (m - 1))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n == m == 1:\n        print(0)\n    else:\n        ans = n - 1 + m - 1\n        ans += min(n, m)\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    if n != 1 and m != 1:\n        print(max(n, m) + (min(n, m) * 2 - 2))\n    elif n == 1 and m == 1:\n        print(0)\n    else:\n        print(max(n, m))", "k = int(input())\nfor i in range(k):\n    nm = input().split()\n    n = max(int(nm[0]), int(nm[1]))\n    m = min(int(nm[0]), int(nm[1]))\n    if n == 1 and m == 1:\n        print(0)\n    else:\n        print(n + 2 * m - 2)", "t = int(input())\nfor tt in range(t):\n    (n, m) = map(int, input().split())\n    if n == 1 and m == 1:\n        print(0)\n    elif n == 1:\n        print(m)\n    elif m == 1:\n        print(n)\n    else:\n        ans = n - 1 + (m - 1) + min(n, m)\n        print(ans)", "N = int(input())\nfor _ in range(N):\n    (n, m) = map(int, input().split())\n    if n == 1 and m == 1:\n        print(0)\n    else:\n        print(n + m + min(n, m) - 2)", "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    if n == 1 and m == 1:\n        print(0)\n    elif n >= m:\n        print(n - 1 + m - 1 + 1 + m - 1)\n    else:\n        print(n - 1 + m - 1 + 1 + n - 1)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    z = max(a, b) + 2 * min(a, b) - 2\n    if a == 1 and b == 1:\n        print(0)\n    else:\n        print(z)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n < m:\n        (n, m) = (m, n)\n    if m == 1 and n == 1:\n        print(0)\n        continue\n    print(n + m - 2 + 2 + m - 2)", "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    (a, b) = map(int, sys.stdin.readline().strip().split())\n    lar = max(a, b)\n    sma = min(a, b)\n    if lar == sma and sma == 1:\n        sys.stdout.write(str(0) + '\\n')\n    else:\n        sys.stdout.write(str(lar + (sma - 1) * 2) + '\\n')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    ans = n - 1 + m - 1 + min(n, m) - 1 + 1\n    if n == 1 and m == 1:\n        print(0)\n        continue\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    s = n + m - 2 + min(n, m)\n    if n + m != 2:\n        print(s)\n    else:\n        print(0)", "from time import sleep\nfor _ in range(int(input())):\n    (n, m) = [int(x) for x in input().split(' ')]\n    if n == 1 and m == 1:\n        print(0)\n    else:\n        print(n + m - 1 + n + m - 1 - max(n, m))", "t = int(input())\nfor i in range(t):\n    mn = list(map(int, input().split()))\n    if mn == [1, 1]:\n        print(0)\n    else:\n        print(max(mn) - 1 + 2 * min(mn) - 1)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    if n + m == 2:\n        print(0)\n    else:\n        print(n + m - 2 + min(n, m))", "n = int(input())\nfor _ in range(n):\n    (a, b) = map(int, input().split())\n    print(min(a + b - 2 + min(a - 1, b - 1) + 1, 2 * (a + b - 2)))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n == 1 and m == 1:\n        print(0)\n    elif n > m:\n        print(n + 2 * (m - 1))\n    else:\n        print(m + 2 * (n - 1))", "def func(x, y):\n    return 2 * x + y - 2\nN = int(input())\nfor i in range(N):\n    lens = [int(i) for i in input().split()]\n    a = min(lens)\n    b = max(lens)\n    if a == b == 1:\n        print(0)\n    else:\n        print(func(a, b))", "length = int(input())\nfor _ in range(length):\n    (row, col) = list(map(int, input().split(' ')))\n    res = row - 1 + (col - 1) + min(row - 1, col - 1)\n    if row == 1 and col == 1:\n        print(res)\n    else:\n        print(res + 1)", "import sys\ninput = sys.stdin.readline\n\ndef int_num():\n    return int(input())\n\ndef int_list():\n    return list(map(int, input().split()))\n\ndef str_list():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef instr():\n    return input().strip()\n\ndef invr():\n    return map(int, input().split())\n\ndef solve():\n    (n, m) = int_list()\n    if n < m:\n        (n, m) = (m, n)\n    if n == 1:\n        ans = 0\n    elif m == 1:\n        ans = n\n    else:\n        ans = n + 2 * (m - 1)\n    print(ans)\n\ndef main():\n    t = int_num()\n    while t:\n        solve()\n        t -= 1\n    return\nmain()", "t = int(input())\nwhile t > 0:\n    arr = list(map(int, input().split()))\n    n = arr[0]\n    m = arr[1]\n    if n == 1 and m == 1:\n        print(0)\n    else:\n        print(min(2 * m + n - 2, 2 * n + m - 2))\n    t -= 1", "ts = int(input())\nfor _ in range(ts):\n    (n, m) = [int(i) for i in input().split()]\n    if n == 1 and m == 1:\n        print(0)\n        continue\n    ans = min(m, n) + m + n - 2\n    print(ans)", "kol = int(input())\nfor j in range(0, kol):\n    (n, m) = map(int, input().split())\n    if n == 1 and m == 1:\n        print(0)\n    if n != 1 and m == 1:\n        print(n)\n    if n == 1 and m != 1:\n        print(m)\n    if n != 1 and m != 1:\n        if n > m:\n            print(2 * m + n - 2)\n        else:\n            print(2 * n + m - 2)", "for _ in range(int(input())):\n    (n, m) = [int(x) for x in input().split(' ')]\n    if n == 1 and m == 1:\n        print(0)\n    else:\n        t = n + m - 1\n        t *= 2\n        print(t - max(n, m))", "for _ in range(int(input())):\n    (n, m) = [int(x) for x in input().split()]\n    (n, m) = sorted([n, m])\n    if n == 1 and m == 1:\n        print(0)\n    else:\n        print(2 * n - 2 + m)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n == m == 1:\n        print(0)\n    else:\n        print(n - 1 + m - 1 + min(n, m) - 1 + 1)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    (a, b) = (min(a, b), max(a, b))\n    if (a, b) == (1, 1):\n        print(0)\n        continue\n    print(a + b - 2 + a)", "T = int(input())\nfor i in range(T):\n    (A, B) = map(int, input().split())\n    if A + B - min(A, B) - 1 == 0:\n        print('0')\n    else:\n        print(A + B + min(A, B) - 2)", "t = int(input())\nwhile t > 0:\n    nums = list(map(int, input().split()))\n    rows = nums[0]\n    columns = nums[1]\n    if rows == columns == 1:\n        print(0)\n    elif rows > columns:\n        print(rows + (columns - 1) * 2)\n    else:\n        print(columns + (rows - 1) * 2)\n    t -= 1", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    print(n + m - 2 + min(m, n) if max(m, n) > 1 else 0)", "t = int(input())\nans = []\nfor _ in range(t):\n    (n, m) = tuple(map(int, input().split()))\n    if n == 1 and m == 1:\n        ans.append(0)\n    else:\n        ans.append(m + n + min(m, n) - 2)\nfor i in ans:\n    print(i)", "for _ in range(int(input())):\n    (a, b) = tuple(map(int, input().split()))\n    if a == 1 and b == 1:\n        print(0)\n    else:\n        c = min(a, b)\n        print(a + b + c - 2)", "t = int(input())\nanswers = []\nfor i in range(t):\n    a = list(map(int, input().split()))\n    (a, b) = (a[0], a[1])\n    if a == 1 and b == 1:\n        answers.append(0)\n        continue\n    if a > b:\n        (a, b) = (b, a)\n    answers.append(2 * a + b - 2)\nfor ans in answers:\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = [int(x) for x in input().split()]\n    if m == n and m == 1:\n        print('0')\n        continue\n    (n, m) = (max(n, m), min(n, m))\n    print(n + m - 2 + m)", "t = int(input())\nfor i in range(t):\n    (n, m) = input().split()\n    n = int(n)\n    m = int(m)\n    if n == 1 and m == 1:\n        print(0)\n    else:\n        print(n + m - 2 + min(n, m))", "import sys\ninput = sys.stdin.readline\nt = int(input())\n\ndef solve(n, m):\n    if n == 1 and m == 1:\n        return 0\n    sol = n - 1 + m - 1\n    stanley = min(n, m)\n    sol += stanley\n    return sol\nfor _ in range(t):\n    (n, m) = [int(x) for x in input().split()]\n    print(solve(n, m))", "t = int(input())\nwhile t:\n    (p, q) = map(int, input().split())\n    if p == 1 and q == 1:\n        print(0)\n    elif p == 1:\n        print(q)\n    elif q == 1:\n        print(p)\n    else:\n        hori = min(p, q)\n        hori_len = p + q\n        ver = max(p, q)\n        print(hori_len + hori - 2)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    if n == 1 and m == 1:\n        print(0)\n    elif n == 1:\n        print(m)\n    elif m == 1:\n        print(n)\n    else:\n        mn = min(n, m)\n        print(n + m + mn - 2)", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    x = max(a, b)\n    y = min(a, b)\n    if a == 1 and b == 1:\n        print(0)\n    else:\n        print(x + 2 * y - 2)", "for s in [*open(0)][1:]:\n    (n, m) = sorted(map(int, s.split()))\n    print(2 * n + m - 3 + (m > 1))", "tcs = int(input())\nfor tc in range(tcs):\n    (a, b) = map(int, input().split())\n    (a, b) = (max(a, b), min(a, b))\n    if a == 1:\n        print(0)\n        continue\n    print((b - 1) * 2 + a)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n == 1 and m == 1:\n        print(0)\n    else:\n        stanley = min(n, m)\n        meghan = m - 1 + (n - 1)\n        print(stanley + meghan)", "t = int(input())\nwhile t >= 1:\n    (n, m) = map(int, input().split())\n    if n == 1 and m == 1:\n        print(0)\n    else:\n        print(n - 1 + m - 1 + min(m, n))\n    t -= 1", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n == 1 and m == 1:\n        print(0)\n    elif n == 1:\n        print(m)\n    elif m == 1:\n        print(n)\n    else:\n        print(n + m + min(n, m) - 2)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    if n == 1 and m == 1:\n        print(0)\n    else:\n        print(max(n, m) + 2 * (min(n, m) - 1))", "p = lambda a: print(a)\niip = lambda : int(input())\nsip = lambda : input()\nmip = lambda : map(int, input().strip().split())\nlip = lambda : list(map(int, input().strip().split()))\nceil = lambda x: int(x) if x == int(x) else int(x) + 1\nflr = lambda x: int(x)\ntstcs = lambda : range(int(input()))\nfor t in tstcs():\n    (a, b) = mip()\n    if a == 1 and b == 1:\n        print(0)\n        continue\n    mm = min(a, b)\n    mx = max(a, b)\n    print((mm - 1) * 2 + mx)", "import math\n\ndef solve():\n    (n, m) = map(int, input().split(' '))\n    if n == m == 1:\n        print(0)\n        return\n    print(max(n, m) + 2 * min(n, m) - 2)\nt = int(input())\nwhile t:\n    t -= 1\n    solve()", "t = int(input())\nfor _ in range(0, t):\n    (n, m) = map(int, input().split())\n    if n == 1 and m == 1:\n        print(0)\n    else:\n        print(n + m + min(n, m) - 2)", "def main():\n    t = int(input())\n    for _ in range(t):\n        (x, y) = [int(i) for i in input().split()]\n        if x == 1 and y == 1:\n            print(0)\n        else:\n            print(x + y + min(x, y) - 2)\nmain()", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    if n == 1 and m == 1:\n        print(0)\n    elif n <= m:\n        if n % 2:\n            print(4 * (n // 2) + m)\n        else:\n            print(4 * (n // 2) + m - 2)\n    elif m % 2:\n        print(4 * (m // 2) + n)\n    else:\n        print(4 * (m // 2) + n - 2)", "n = int(input())\nfor i in range(n):\n    mat = list(map(int, input().split()))\n    if mat[0] == 1 and mat[1] > 1:\n        x = mat[1] - 1 + (mat[0] - 1)\n        y = 1\n    elif mat[0] == 1 and mat[1] == 1:\n        x = 0\n        y = 0\n    elif mat[0] < mat[1]:\n        x = mat[1] - 1 + (mat[0] - 1)\n        y = mat[0] - 1 + 1\n    else:\n        x = mat[1] - 1 + (mat[0] - 1)\n        y = mat[1] - 1 + 1\n    print(x + y)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    a = max(n, m)\n    b = min(n, m)\n    if a == b and a == 1:\n        print(0)\n    else:\n        print(a + 2 * (b - 1))", "n = int(input())\nfor i in range(n):\n    (a, b) = [int(x) for x in input().split()]\n    if a == b == 1:\n        print(0)\n    elif a > b:\n        print(2 * b + a - 2)\n    else:\n        print(2 * a + b - 2)", "ans = []\nfor testcase in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    if n == 1 and m == 1:\n        ans.append(0)\n    elif n >= m:\n        d = m - 2 + n + m\n        ans.append(d)\n    else:\n        d = n + m + n - 2\n        ans.append(d)\nfor i in ans:\n    print(i)", "n = int(input())\nl = []\nfor i in range(0, n):\n    s = [int(x) for x in input().split()]\n    l.append(s)\nfor j in range(0, n):\n    n = l[j][0]\n    m = l[j][1]\n    m1 = min(n, m)\n    m2 = max(n, m)\n    if m1 == m2 == 1:\n        print(0)\n    else:\n        a = m1 // 2 + (m2 - 1) + (2 * (m1 - 1 - m1 // 2) + 1) + m1 // 2\n        print(a)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = max(n, m)\n    b = min(n, m)\n    if a == 1 and b == 1:\n        print(0)\n    else:\n        res = a + b * 2 - 2\n        print(res)", "for _ in range(int(input())):\n    a = [int(i) for i in input().split()]\n    m = a[0]\n    n = a[1]\n    if m == 1 and n == 1:\n        out = 0\n    elif m > n:\n        out = n - 1 + m - 1 + n - 1 + 1\n    else:\n        out = m - 1 + n - 1 + m - 1 + 1\n    print(out)", "for i in range(int(input())):\n    (n, m) = [int(x) for x in input().split()]\n    if n == 1 and m == 1:\n        print(0)\n    elif n == m:\n        a = (n - 1) * 2 + n\n        print(a)\n    elif n > m or m > n:\n        b = min(n, m)\n        c = n - 1 + (m - 1) + b\n        print(c)", "t = int(input())\nfor i in range(0, t):\n    (n, m) = input().split()\n    (n, m) = (int(n), int(m))\n    k1 = min(n, m)\n    k2 = max(n, m)\n    if k1 == 1 and k2 == 1:\n        print(0)\n    else:\n        s = k1 - 2 + k2 + k1\n        print(s)", "def solution(n, m):\n    if n == m and n == 1:\n        return 0\n    return max(n, m) + 2 * min(n, m) - 2\nN = int(input())\nfor _ in range(N):\n    (n, m) = list(map(int, input().split(' ')))\n    print(solution(n, m))", "n = int(input())\nfor t in range(n):\n    (n, m) = map(int, input().split())\n    if n == 1 and m == 1:\n        print(0)\n    else:\n        print(n - 1 + m - 1 + min(n - 1, m - 1) + 1)", "t = int(input())\nlst1 = [None] * t\nfor i in range(0, t):\n    lst_temp = [int(j) for j in input().split()]\n    n = lst_temp[0]\n    m = lst_temp[1]\n    if n == 1 and m == 1:\n        lst1[i] = 0\n    else:\n        if n < m:\n            temp = n\n        else:\n            temp = m\n        lst1[i] = n - 1 + (m - 1) + temp\nfor i in range(0, t):\n    print(lst1[i])", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if a == 1 and b == 1:\n        print('0')\n    elif a == 1 and b != 1 or (a != 1 and b == 1):\n        print(max(a, b))\n    else:\n        a = a - 1\n        b = b - 1\n        print(2 * min(a, b) + max(a, b) + 1)", "T = int(input())\nfor t in range(T):\n    (x, y) = map(int, input().split())\n    m = min(x, y)\n    n = max(x, y)\n    c = 0\n    c = c + m + n - 2\n    c = c + m // 2 + m % 2\n    c = c + m - (m // 2 + m % 2)\n    if m == 1 and n == 1:\n        print('0')\n    else:\n        print(c)", "T = int(input())\nans = []\nfor tc in range(T):\n    (n, m) = map(int, input().split(' '))\n    if n == 1 or m == 1:\n        if n == 1 and m == 1:\n            ans.append(0)\n        else:\n            ans.append(max(n, m))\n    else:\n        c = m - 1 + (n - 1) + m\n        d = n - 1 + (m - 1) + n\n        ans.append(min(c, d))\nfor i in ans:\n    print(i)", "tcs = 1 if not True else int(input())\nfor tc in range(1, tcs + 1):\n    (n, m) = map(int, input().split())\n    print(0 if n == 1 and m == 1 else 2 * min(m, n) - 2 + max(m, n))", "t = int(input())\nres = []\nfor _ in range(t):\n    (n, m) = list(map(int, input().split()))\n    if n == 1 and m == 1:\n        res.append(0)\n    elif n > m:\n        res.append(n + m + m - 2)\n    else:\n        res.append(m + n + n - 2)\nfor r in res:\n    print(r)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    a = max(n, m)\n    b = min(n, m)\n    if a == b == 1:\n        print(0)\n    else:\n        c = a + (b - 1) * 2\n        print(c)", "_ = int(input())\nfor i in range(_):\n    a = [int(i) for i in input().split()]\n    if a[0] == 1 and a[1] == 1:\n        print(0)\n        continue\n    else:\n        print(a[0] + a[1] + min(a[0], a[1]) - 2)", "t = int(input())\nl = []\nfor i in range(0, t):\n    m = [int(x) for x in input().split()]\n    l.append(m)\nfor j in range(0, t):\n    n = l[j][0]\n    m = l[j][1]\n    p = max(n, m)\n    q = min(n, m)\n    if n == m == 1:\n        print(0)\n    else:\n        k = q // 2 + (p - 1) + (2 * (q - 1 - q // 2) + 1) + q // 2\n        print(k)", "class Solution:\n\n    def crossmarket(self, n, m):\n        if n == 1 and m == 1:\n            return 0\n        return 2 * min(m, n) + max(n, m) - 2\nob = Solution()\nt = int(input())\nwhile t:\n    (n, m) = list(map(int, input().strip().split()))\n    print(ob.crossmarket(n, m))\n    t -= 1", "n_test = int(input())\nfor i in range(n_test):\n    (n, m) = map(int, input().split(' '))\n    if n == 1 and m == 1:\n        print(0)\n    else:\n        print(2 * (min(m, n) - 1) + max(m, n))", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == 1 and b == 1:\n        print('0')\n    else:\n        print(2 * min(a, b) - 2 + max(a, b))", "t = int(input())\nfor i in range(0, t):\n    (n, m) = [int(x) for x in input().split()]\n    a = min(n, m)\n    b = max(n, m)\n    if n == 1 and m == 1:\n        print(0)\n    else:\n        print(2 * (a - 1) + b)", "t = int(input())\nfor tt in range(t):\n    (x, y) = map(int, input().split())\n    n = max(x, y)\n    m = min(x, y)\n    result = m // 2 + (n - 1) + m + (m - (m // 2 + 1))\n    if n == 1 and m == 1:\n        print('0')\n    else:\n        print(result)", "test = int(input())\nresults = []\nfor i in range(test):\n    (n, m) = list(map(int, input().split()))\n    if n == 1 and m == 1:\n        results.append(0)\n        continue\n    if n == 1 or m == 1:\n        results.append(max(n, m))\n        continue\n    f = (m - 1) // 2\n    d = m - 1 - f\n    res1 = 2 * d + n + 2 * f\n    f1 = (n - 1) // 2\n    d1 = n - 1 - f1\n    res2 = 2 * f1 + m + 2 * d1\n    results.append(min(res1, res2))\nlist(map(print, results))", "def m09():\n    (p, q) = map(int, input().split())\n    if p == 1 and q == 1:\n        count = 0\n        print(count)\n    else:\n        print(p + q + min(p, q) - 2)\nx = int(input())\nwhile x > 0:\n    x -= 1\n    m09()", "for _ in range(0, int(input())):\n    (x, y) = map(int, input().split())\n    p = min(x, y)\n    q = max(x, y)\n    if x == 1 and y == 1:\n        print(0)\n    else:\n        print(q + p * 2 - 2)", "t = int(input())\nfor _ in range(t):\n    (m, n) = map(int, input().split())\n    if m == 1 and n == 1:\n        out = 0\n    elif m >= n:\n        out = m + n - 2 + n\n    elif m < n:\n        out = n + m - 2 + m\n    print(out)", "t = int(input())\nfor i in range(t):\n    c = input()\n    c = list(map(int, c.split(' ')))\n    n = c[0]\n    m = c[1]\n    st = [1, 1]\n    me = [n, 1]\n    if n == m == 1:\n        print(0)\n    else:\n        print(2 * (min(m, n) - 1) + max(m, n))"]