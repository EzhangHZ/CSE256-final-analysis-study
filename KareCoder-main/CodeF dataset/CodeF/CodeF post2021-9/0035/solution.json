["print(''.join([*open(0)][2::2]).translate({85: 68, 68: 85, 10: 10}))", "print(''.join([*open(0)][2::2]).translate({85: 68, 68: 85, 10: 10}))", "print(''.join([*open(0)][2::2]).translate({85: 68, 68: 85}))", "print(''.join([*open(0)][2::2]).translate({85: 68, 68: 85}))", "print(''.join([*open(0)][2::2]).translate({85: 68, 68: 85}))", "for g in [*open(0)][2::2]:\n    print(g.replace('U', 'T').replace('D', 'U').replace('T', 'D').strip())", "print(''.join([*open(0)][2::2]).translate({85: 68, 68: 85}))", "print(''.join([*open(0)][2::2]).translate({85: 68, 68: 85}))", "print(''.join([*open(0)][2::2]).translate({85: 68, 68: 85}))", "print(''.join([*open(0)][2::2]).translate({85: 68, 68: 85}))", "print(''.join([*open(0)][2::2]).translate({85: 68, 68: 85}))", "print(''.join([*open(0)][2::2]).translate({85: 68, 68: 85}))", "print(''.join([*open(0)][2::2]).translate({85: 68, 68: 85}))", "n = int(input())\ny = []\nfor i in range(n):\n    x1 = int(input())\n    s = input()\n    if 'U' in s:\n        x = s.replace('U', 'D')\n        y.append(x)\n    elif 'D' in s:\n        x = s.replace('D', 'U')\n        y.append(x)\n    else:\n        y.append(s)\nfor j in y:\n    print(j)", "num = int(input())\narea = []\nfor i in range(num):\n    (number, letter) = (int(input()), input())\n    area.append(letter)\nnew_area = []\nfor line in area:\n    if 'U' in line:\n        new_area.append(line.replace('U', 'D'))\n    elif 'D' in line:\n        new_area.append(line.replace('D', 'U'))\n    else:\n        new_area.append(line)\nprint(*new_area, sep='\\n')", "print(''.join([*open(0)][2::2]).translate({85: 68, 68: 85}))", "print(''.join([*open(0)][2::2]).translate({85: 68, 68: 85}))", "t = int(input())\nl = []\nl1 = []\nfor i in range(t):\n    n = int(input())\n    s = input()\n    l.append(s)\nfor ele in l:\n    if 'U' in ele:\n        l1.append(ele.replace('U', 'D'))\n    elif 'D' in ele:\n        l1.append(ele.replace('D', 'U'))\n    else:\n        l1.append(ele)\nfor elee in l1:\n    print(elee)", "a = int(input())\nl = []\nfor i in range(a):\n    b = int(input())\n    c = str(input())\n    if 'D' in c:\n        d = c.replace('D', 'U')\n    elif 'U' in c:\n        d = c.replace('U', 'D')\n    else:\n        d = c\n    l.append(d)\nfor i in l:\n    print(i)", "(*t,) = range(86)\nt[68] = 85\nt[85] = 68\nprint(''.join([*open(0)][2::2]).translate(t))", "print(''.join([*open(0)][2::2]).translate({85: 68, 68: 85}))", "t = int(input())\nans = []\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    rel = s\n    if s.count('U'):\n        rel = s.replace('U', 'D')\n    elif s.count('D'):\n        rel = s.replace('D', 'U')\n    ans.append(rel)\nprint('\\n'.join(ans))", "cases = int(input())\nstrings_nums = [input() for i in range(cases * 2)]\nonly_strings = [strings_nums[i] for i in range(len(strings_nums)) if i % 2 != 0]\n\ndef string_completion(string_list):\n    change_u = [*map(lambda x: x.replace('U', 'X'), string_list)]\n    change_d = [*map(lambda x: x.replace('D', 'Y'), change_u)]\n    change_x = [*map(lambda x: x.replace('X', 'D'), change_d)]\n    change_y = [*map(lambda x: x.replace('Y', 'U'), change_x)]\n    for i in change_y:\n        print(i)\nstring_completion(only_strings)", "tests_n = int(input())\nfor test in range(0, tests_n):\n    n = int(input())\n    row_1 = input()\n    row_2 = row_1.replace('U', 'F').replace('D', 'U').replace('F', 'D')\n    print(row_2)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    print(s.replace('D', 'a').replace('U', 'D').replace('a', 'U'))", "for t in range(int(input())):\n    n = int(input())\n    s = input()\n    if 'U' in s:\n        print(s.replace('U', 'D'))\n    elif 'D' in s:\n        print(s.replace('D', 'U'))\n    else:\n        print(s)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    if 'U' in s:\n        print(s.replace('U', 'D'))\n    else:\n        print(s.replace('D', 'U'))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    print(s.replace('D', 'a').replace('U', 'D').replace('a', 'U'))", "for _ in range(int(input())):\n    n = int(input())\n    s = str(input())\n    if s.__contains__('U'):\n        s = s.replace('U', 'D')\n    elif s.__contains__('D'):\n        s = s.replace('D', 'U')\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    assert len(s) == n\n    if 'U' in s:\n        print(s.replace('U', 'D'))\n    else:\n        print(s.replace('D', 'U'))", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    r = ''\n    if 'U' in s:\n        s = s.replace('U', 'D')\n    else:\n        s = s.replace('D', 'U')\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    print(s.translate({85: 68, 68: 85}))", "for _ in range(int(input())):\n    n = input()\n    s = input()\n    print(s.translate({85: 68, 68: 85}))", "for i in range(int(input())):\n    n = int(input())\n    a = input()\n    a = a.replace('D', 'z')\n    a = a.replace('U', 'D')\n    a = a.replace('z', 'U')\n    print(a)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    if 'U' in s:\n        print(s.replace('U', 'D'))\n    if 'D' in s:\n        print(s.replace('D', 'U'))\n    if 'U' not in s and 'D' not in s:\n        print(s)", "for t in range(int(input())):\n    input()\n    grid = input()\n    grid = grid.replace('U', 'A')\n    grid = grid.replace('D', 'U')\n    grid = grid.replace('A', 'D')\n    print(grid)", "for i in range(int(input())):\n    j = input()\n    k = input()\n    r = k.replace('U', 'd')\n    s = r.replace('D', 'u')\n    print(s.upper())", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    if 'D' in s:\n        print(s.replace('D', 'U'))\n    else:\n        print(s.replace('U', 'D'))", "def main():\n    tests = int(input())\n    for _ in range(tests):\n        n = int(input())\n        s = input()\n        if s.__contains__('D'):\n            print(s.replace('D', 'U'))\n        else:\n            print(s.replace('U', 'D'))\nmain()", "t = int(input())\nfor _ in range(t):\n    t = int(input())\n    s = input()\n    if 'U' in s:\n        s = s.replace('U', 'D')\n    else:\n        s = s.replace('D', 'U')\n    print(s)", "x = int(input())\nfor i in range(x):\n    f = int(input())\n    k = str(input())\n    if 'U' in k:\n        l = k.replace('U', 'D')\n    else:\n        l = k.replace('D', 'U')\n    print(l)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    if 'U' in s:\n        s = s.replace('U', 'D')\n        print(s)\n    elif 'D' in s:\n        s = s.replace('D', 'U')\n        print(s)\n    else:\n        print(s)", "n = int(input())\nfor i in range(n):\n    l = int(input())\n    s = input()\n    if 'U' in s:\n        print(s.replace('U', 'D'))\n    else:\n        print(s.replace('D', 'U'))", "n = int(input())\nans = []\nfor i in range(n):\n    m = int(input())\n    txt = input()\n    txt = txt.replace('U', '+')\n    txt = txt.replace('D', 'U')\n    txt = txt.replace('+', 'D')\n    ans.append(txt)\nfor i in ans:\n    print(i)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    s = input()\n    if 'U' in s:\n        s = s.replace('U', 'D')\n        print(s)\n    elif 'D' in s:\n        s = s.replace('D', 'U')\n        print(s)\n    else:\n        print(s)", "n = int(input())\nfor i in range(n):\n    x = int(input())\n    s = input()\n    if 'U' in s:\n        s = s.replace('U', 'D')\n        print(s)\n    elif 'D' in s:\n        s = s.replace('D', 'U')\n        print(s)\n    else:\n        print(s)", "a = int(input())\ni = 0\ninn = 'DU'\nout = 'UD'\nwhile i < a:\n    word = input()\n    ans = input()\n    tran = ans.maketrans(inn, out)\n    print(ans.translate(tran))\n    i += 1", "x = int(input())\nfor i in range(x):\n    y = int(input())\n    s = input()\n    if s.find('U') >= 0:\n        s = s.replace('U', 'D')\n        print(s)\n    elif s.find('D') >= 0:\n        s = s.replace('D', 'U')\n        print(s)\n    else:\n        print(s)", "for i in range(int(input())):\n    input()\n    ans = input().replace('U', 'Q')\n    ans = ans.replace('D', 'U')\n    ans = ans.replace('Q', 'D')\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    s = s.replace('U', 'u')\n    s = s.replace('D', 'U')\n    s = s.replace('u', 'D')\n    print(s)", "for __ in range(int(input())):\n    (n, s) = (int(input()), input())\n    print(s.replace('U', 'd').replace('D', 'u').replace('d', 'D').replace('u', 'U'))", "for __ in range(int(input())):\n    (n, s) = (int(input()), input())\n    print(s.replace('U', 'd').replace('D', 'u').replace('d', 'D').replace('u', 'U'))", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    x = s.replace('U', 'X').replace('D', 'U').replace('X', 'D')\n    print(x)", "p = int(input())\nfor i in range(p):\n    n = int(input())\n    a = input()\n    if 'U' in a:\n        print(a.replace('U', 'D'))\n    elif 'D' in a:\n        print(a.replace('D', 'U'))\n    else:\n        print(a)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    print(s.replace('D', 'a').replace('U', 'D').replace('a', 'U'))", "for i in range(int(input())):\n    n = int(input())\n    print(input().replace('U', '_').replace('D', 'U').replace('_', 'D'))", "for _ in range(int(input())):\n    input()\n    s = input()\n    print(s.translate({85: 68, 68: 85}))", "t = int(input())\nfor i in range(0, t):\n    dump = int(input())\n    string = input()\n    if string.find('U') >= 0:\n        string = string.replace('U', 'D')\n    elif string.find('D') >= 0:\n        string = string.replace('D', 'U')\n    print(string)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    w = s.replace('D', 'T').replace('U', 'D').replace('T', 'U')\n    print(w)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    if 'U' in s:\n        s = s.replace('U', 'D')\n    elif 'D' in s:\n        s = s.replace('D', 'U')\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    if 'U' in s:\n        print(s.replace('U', 'D'))\n    elif 'D' in s:\n        print(s.replace('D', 'U'))\n    else:\n        print(s)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    row = s.replace('D', 'a').replace('U', 'D').replace('a', 'U')\n    print(row)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    if 'U' in s:\n        print(s.replace('U', 'D'))\n    elif 'D' in s:\n        print(s.replace('D', 'U'))\n    else:\n        print(s)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    if 'U' in s:\n        s = s.replace('U', 'D')\n        print(s)\n    elif 'D' in s:\n        s = s.replace('D', 'U')\n        print(s)\n    else:\n        print(s)", "for x in range(0, int(input())):\n    n = int(input())\n    st = input()\n    if 'U' in st:\n        st = st.replace('U', 'D')\n    elif 'D' in st:\n        st = st.replace('D', 'U')\n    print(st)", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    s = input()\n    if 'U' in s:\n        s = s.replace('U', 'D')\n    elif 'D' in s:\n        s = s.replace('D', 'U')\n    print(s)", "d = {'U': 'D', 'D': 'U', 'L': 'L', 'R': 'R'}\nfor s in [*open(0)][2::2]:\n    print(''.join([d[x] for x in s[:-1]]))", "n = int(input())\nfor i in range(n):\n    t = int(input())\n    s = input()\n    x = {'U': 'D', 'D': 'U'}\n    tbl = s.maketrans(x)\n    print(s.translate(tbl))", "for _ in range(int(input())):\n    width = int(input())\n    s = input()\n    if 'U' in s:\n        s = s.replace('U', 'D')\n    elif 'D' in s:\n        s = s.replace('D', 'U')\n    print(s)", "n = int(input())\nfor i in range(n):\n    A = int(input())\n    S = input()\n    A = S.count('U')\n    B = S.count('D')\n    if A > 0 and B == 0:\n        F = S.replace('U', 'D')\n    elif A == 0 and B > 0:\n        F = S.replace('D', 'U')\n    elif A == 0 and B == 0:\n        F = S\n    elif A > 0 and B > 0:\n        T = S.replace('U', 'O')\n        W = T.replace('D', 'U')\n        F = W.replace('O', 'D')\n    print(F)", "for _ in range(int(input())):\n    input()\n    n = input()\n    if 'U' in n:\n        print(n.replace('U', 'D'))\n    elif 'D' in n:\n        print(n.replace('D', 'U'))\n    else:\n        print(n)", "for _ in range(int(input())):\n    input()\n    print(input().translate({68: 85, 85: 68}))", "T = int(input())\nfor _ in range(T):\n    (n, s) = (int(input()), input())\n    print(s.replace('U', 'D')) if 'U' in s else print(s.replace('D', 'U'))", "for _ in range(int(input())):\n    (n, s) = (int(input()), input())\n    print(s.replace('U', 'D')) if 'U' in s else print(s.replace('D', 'U'))", "import sys\nsys.setrecursionlimit(10 ** 8)\nfor _ in range(int(input())):\n    input()\n    print(input().replace('U', 'd').replace('D', 'U').replace('d', 'D'))", "for _ in range(int(input())):\n    input()\n    board = input()\n    if 'D' in board:\n        print(board.replace('D', 'U'))\n    else:\n        print(board.replace('U', 'D'))", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    if 'U' in s:\n        s = s.replace('U', 'D')\n    else:\n        s = s.replace('D', 'U')\n    print(s)", "t = input()\nk = 0\nwhile k != int(t):\n    n = input()\n    m = input()\n    m = m.replace('U', 'x')\n    m = m.replace('D', 'U')\n    m = m.replace('x', 'D')\n    k = k + 1\n    print(m)", "read_list = lambda : list(map(int, input().split()))\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        string = input()\n        if 'D' in string:\n            print(string.replace('D', 'U'))\n        else:\n            print(string.replace('U', 'D'))\nmain()", "for no in range(int(input())):\n    input()\n    print(input().replace('U', 'X').replace('D', 'U').replace('X', 'D'))", "a = input()\nfor i in range(int(a)):\n    input()\n    str1 = input()\n    if str1.find('U') != -1:\n        str1 = str1.replace('U', 'D')\n    elif str1.find('D') != -1:\n        str1 = str1.replace('D', 'U')\n    print(str1)", "for i in range(int(input())):\n    input()\n    print(input().translate(str.maketrans('UD', 'DU')))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    word = input()\n    word = word.replace('U', 'u')\n    word = word.replace('D', 'd')\n    word = word.replace('u', 'D')\n    word = word.replace('d', 'U')\n    print(word)", "print(''.join([*open(0)][2::2]).translate({85: 68, 68: 85}))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    print(s.replace('D', 'a').replace('U', 'D').replace('a', 'U'))", "def solve():\n    n = int(input())\n    a = input()\n    b = ''\n    w = {'U': 'D', 'D': 'U', 'L': 'L', 'R': 'R'}\n    for i in a:\n        b += w[i]\n    return b\nt = int(input())\nans = []\nwhile t:\n    ans.append(str(solve()))\n    t -= 1\nprint('\\n'.join(ans))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    print(s.replace('D', 'X').replace('U', 'D').replace('X', 'U'))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    if s.find('U') == -1:\n        print(s.replace('D', 'U'))\n    else:\n        print(s.replace('U', 'D'))", "t = int(input())\nfor loop in range(t):\n    n = int(input())\n    s = input()\n    if 'D' in s:\n        s = s.replace('D', 'U')\n    elif 'U' in s:\n        s = s.replace('U', 'D')\n    print(s)", "nbt = int(input())\nfor t in range(nbt):\n    n = input()\n    s = input()\n    s = s.replace('U', 'X').replace('D', 'U').replace('X', 'D')\n    print(s)", "import sys\ninput = lambda : sys.stdin.readline().rstrip('\\r\\n')\nt = int(input())\nd_dict = {'U': 'D', 'D': 'U', 'L': 'L', 'R': 'R'}\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    res = [d_dict[c] for c in s]\n    print(''.join(res))", "s = int(input())\nfor i in range(s):\n    x = int(input())\n    y = input()\n    if 'U' in y:\n        z = y.replace('U', 'D')\n    else:\n        z = y.replace('D', 'U')\n    print(z)", "n = int(input())\nfor i in range(n):\n    l = []\n    for j in range(2):\n        x = input()\n        try:\n            l.append(int(x))\n        except ValueError:\n            l.append(x)\n    s = l[1]\n    if not ('U' in s or 'D' in s):\n        print(s)\n    elif 'U' in s:\n        print(s.replace('U', 'D'))\n    else:\n        print(s.replace('D', 'U'))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    if 'U' in s:\n        s = s.replace('U', 'D')\n    elif 'D' in s:\n        s = s.replace('D', 'U')\n    print(s)", "class Solution:\n\n    def find(self, string: str) -> str:\n        another = ''\n        for i in string:\n            if i in 'LR':\n                another += i\n            elif i == 'U':\n                another += 'D'\n            else:\n                another += 'U'\n        return another\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print(Solution().find(input()))", "def domino(str):\n    str1 = ''\n    for i in str:\n        if i in 'LR':\n            str1 += i\n        elif i in 'D':\n            str1 += 'U'\n        else:\n            str1 += 'D'\n    return str1\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print(domino(input()))"]