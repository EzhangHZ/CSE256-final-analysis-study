["from itertools import *\nfor s in [*open(0)][2::2]:\n    a = [k for (k, g) in groupby(map(int, s.split()))]\n    print('YNEOS'[sum((x > y < z for (x, y, z) in zip([2000000000.0] + a, a, a[1:] + [2000000000.0]))) > 1::2])", "from itertools import *\nfor m in [*open(0)][2::2]:\n    a = [k for (k, g) in groupby(map(int, m.split()))]\n    print('YNEOS'[sum((x > y < z for (x, y, z) in zip([2000000000.0] + a, a, a[1:] + [2000000000.0]))) > 1::2])", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\ntest_cases = inp()\ninp_arr = []\nfor i in range(test_cases):\n    num = inp()\n    nums = inlt()\n    inp_arr.append(nums)\n\ndef findResult(nums):\n    if len(nums) <= 2:\n        return 'YES'\n    is_dec = True\n    for i in range(1, len(nums)):\n        if not is_dec and nums[i] < nums[i - 1]:\n            return 'NO'\n        if is_dec and nums[i] > nums[i - 1]:\n            is_dec = False\n    return 'YES'\nresult = [findResult(cheeses) for cheeses in inp_arr]\nfor m in result:\n    print(m)", "from itertools import *\nfor s in [*open(0)][2::2]:\n    a = [k for (k, g) in groupby(map(int, s.split()))]\n    print('YNEOS'[sum((x > y < z for (x, y, z) in zip([2000000000.0] + a, a, a[1:] + [2000000000.0]))) > 1::2])", "from itertools import *\nm = [8 ** 10]\nfor s in [*open(0)][2::2]:\n    a = [k for (k, g) in groupby(map(int, s.split()))]\n    print('YNEOS'[sum((x > y < z for (x, y, z) in zip(m + a, a, a[1:] + m))) > 1::2])", "import sys\ninput = sys.stdin.readline\ncase = int(input())\nfor c in range(case):\n    n = int(input())\n    a = list(map(int, input().split()))\n    flag = True\n    valley = True\n    for i in range(1, n):\n        if flag and a[i] > a[i - 1]:\n            flag = False\n        if not flag and a[i] < a[i - 1]:\n            valley = False\n            break\n    if valley:\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\n\ndef solution():\n    T = int(input())\n    for t in range(T):\n        N = int(input())\n        h = list(map(int, input().split()))\n        if N == 1:\n            print('YES')\n        else:\n            answer = 'YES'\n            down = 1\n            for i in range(1, N):\n                if h[i - 1] > h[i] and down == 0:\n                    answer = 'NO'\n                    break\n                elif h[i - 1] < h[i] and down == 1:\n                    down = 0\n            print(answer)\nsolution()", "from sys import stdin\nfrom itertools import groupby\n\ndef readint():\n    return int(stdin.readline())\n\ndef readarray(typ):\n    return list(map(typ, stdin.readline().split()))\n\ndef readmatrix(n):\n    M = []\n    for _ in range(n):\n        row = readarray(int)\n        assert len(row) == n\n        M.append(row)\n    return M\n\ndef mult(M, v):\n    n = len(M)\n    return [sum((M[i][j] * v[j] for j in range(n))) for i in range(n)]\n\ndef solve(arr):\n    res = [i[0] for i in groupby(arr)]\n    if len(res) == 1:\n        print('YES')\n        return\n    p = res.index(min(res))\n    for i in range(0, p):\n        if res[i] < res[i + 1]:\n            print('NO')\n            return\n    for q in range(p, len(res) - 1):\n        if res[q] > res[q + 1]:\n            print('NO')\n            return\n    print('YES')\n    return\nt = readint()\nfor _ in range(t):\n    n = readint()\n    arr = readarray(int)\n    solve(arr)", "import sys\nfrom collections import *\nsys.setrecursionlimit(10 ** 5)\nitr = (line for line in sys.stdin.read().strip().split('\\n'))\nINP = lambda : next(itr)\n\ndef ni():\n    return int(INP())\n\ndef nl():\n    return [int(_) for _ in INP().split()]\n\ndef solve(n, a):\n    isIncreasing = False\n    if n == 1:\n        print('YES')\n        return\n    for i in range(n - 1):\n        if a[i + 1] > a[i]:\n            isIncreasing = True\n        if isIncreasing:\n            if a[i + 1] < a[i]:\n                print('NO')\n                return\n    print('YES')\nt = ni()\nfor case in range(t):\n    n = ni()\n    a = nl()\n    solve(n, a)", "from itertools import *\nfor s in [*open(0)][2::2]:\n    a = [k for (k, g) in groupby(map(int, s.split()))]\n    print('YNEOS'[sum((x > y < z for (x, y, z) in zip([2000000000.0] + a, a, a[1:] + [2000000000.0]))) > 1::2])", "def solve(arr):\n    i = 0\n    j = len(arr) - 1\n    while i != j:\n        if arr[i] >= arr[i + 1]:\n            i += 1\n        elif arr[j] >= arr[j - 1]:\n            j -= 1\n        else:\n            break\n    return 'YES' if i == j else 'NO'\n\ndef main():\n    ans = []\n    for _ in range(int(input())):\n        input()\n        ans.append(solve(list(map(int, input().split()))))\n    print(*ans, sep='\\n')\nmain()", "import sys\nfrom sys import stdin\nimport heapq\nsys.setrecursionlimit(10 ** 9)\ninf = float('inf')\ninput = sys.stdin.readline\nt = int(input())\nres = []\nfor _ in range(t):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    (k, s) = (inf, True)\n    for i in lis:\n        if k < i and s == True:\n            (k, s) = (i, False)\n            continue\n        if k >= i and s == True:\n            k = i\n            continue\n        if s == False and k > i:\n            s = -1\n            continue\n        k = i\n    res.append('YES' if s != -1 else 'NO')\nprint(*res, sep='\\n')", "def solve(arr):\n    befo = arr[0]\n    isInkreasin = False\n    for each in arr:\n        diff = each - befo\n        if isInkreasin and diff < 0:\n            print('NO')\n            return\n        elif not isInkreasin and diff > 0:\n            isInkreasin = True\n        befo = each\n    print('YES')\nt = int(input())\nproblems = []\nfor i in range(t):\n    n = int(input())\n    l = []\n    for each in input().split():\n        l.append(int(each))\n    problems.append(l)\nfor each in problems:\n    solve(each)", "import sys\ninput = sys.stdin.readline\n\ndef get_answ():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n == 1:\n        return 'YES'\n    mn = min(arr)\n    idx = arr.index(mn)\n    i = idx - 1\n    j = idx + 1\n    while i >= 0:\n        if arr[i] >= arr[i + 1]:\n            i -= 1\n        else:\n            return 'NO'\n    while j <= n - 1:\n        if arr[j] >= arr[j - 1]:\n            j += 1\n        else:\n            return 'NO'\n    return 'YES'\n\ndef main():\n    for _ in range(int(input())):\n        answ = get_answ()\n        print(answ)\nmain()", "import sys\n\ndef input():\n    return sys.stdin.readline().rstrip('\\r\\n')\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    flag = False\n    for i in range(1, n):\n        if a[i] > a[i - 1] and (not flag):\n            flag = True\n        if a[i] < a[i - 1] and flag:\n            return 'NO'\n    return 'YES'\nt = int(input())\nfor _ in range(t):\n    print(solve())", "def calc(l):\n    if len(l) == 1:\n        return 'YES'\n    q = [0]\n    for i in range(1, len(l)):\n        if l[i - 1] > l[i]:\n            q.append(-1)\n        elif l[i - 1] < l[i]:\n            q.append(1)\n        else:\n            q.append(0)\n    i = q.count(1)\n    if i == 0:\n        return 'YES'\n    i = q.index(1)\n    if -1 in q[i:]:\n        return 'NO'\n    return 'YES'\nl = []\nfor _ in range(int(input())):\n    input()\n    l.append(calc(list(map(int, input().split()))))\nprint('\\n'.join(l))", "from math import inf\nfrom sys import stdin, stdout\nt = int(stdin.readline().strip())\nfor _ in range(t):\n    n = int(stdin.readline().strip())\n    arr = list(map(int, stdin.readline().split()))\n    arr.append(inf)\n    answer = 0\n    last_start = 0\n    for (idx, num) in enumerate(arr):\n        if num == arr[last_start]:\n            continue\n        elif arr[last_start] < arr[last_start - 1] and arr[last_start] < num:\n            answer += 1\n            last_start = idx\n            if answer > 1:\n                break\n        else:\n            last_start = idx\n    print('YES' if answer == 1 else 'NO')", "t = int(input())\n\ndef solve():\n    n = int(input())\n    nums = [int(x) for x in input().split()]\n    increasing = False\n    p = 99999999999\n    for num in nums:\n        if increasing:\n            if num < p:\n                print('NO')\n                return\n        elif num > p:\n            increasing = True\n        p = num\n    print('YES')\nfor _ in range(t):\n    solve()", "for i in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    if n == 1 or l == sorted(l):\n        print('YES')\n    else:\n        i = 1\n        while i < n and l[i - 1] >= l[i]:\n            i += 1\n        if i == n:\n            print('YES')\n        else:\n            i += 1\n            while i < n and l[i - 1] <= l[i]:\n                i += 1\n            if i == n:\n                print('YES')\n            else:\n                print('NO')", "def hasValley(nums):\n    i = 0\n    valley = 0\n    while i < n:\n        j = i\n        if i == 0 or nums[i] < nums[i - 1]:\n            while j < n and nums[j] == nums[i]:\n                j += 1\n            if j == n or nums[j - 1] < nums[j]:\n                valley += 1\n            i = j\n        else:\n            i += 1\n    return valley == 1\nt = int(input())\nres = []\nfor _ in range(t):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    if hasValley(nums):\n        res.append('YES')\n    else:\n        res.append('NO')\nfor r in res:\n    print(r)", "def remove_adjacent(nums):\n    return [a for (a, b) in zip(nums, nums[1:] + [not nums[-1]]) if a != b]\n\ndef solve():\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    arr = remove_adjacent(arr)\n    n = len(arr)\n    if n == 1:\n        print('YES')\n        return\n    if arr[1] > arr[0]:\n        flag = 0\n        for i in range(1, n - 1):\n            if arr[i] > arr[i + 1]:\n                flag = 1\n        if flag:\n            print('NO')\n        else:\n            print('YES')\n    else:\n        i = 0\n        while i < n - 1 and arr[i] > arr[i + 1]:\n            i += 1\n        if i == n - 1:\n            print('YES')\n            return\n        while i < n - 1 and arr[i] < arr[i + 1]:\n            i += 1\n        if i == n - 1:\n            print('YES')\n        else:\n            print('NO')\nt = int(input())\nfor i in range(t):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    min_a = min(a)\n    ind_min = a.index(min_a)\n    f = a[:ind_min]\n    l = a[ind_min:]\n    if f == sorted(f)[::-1] and l == sorted(l):\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    k = [int(i) for i in input().split()]\n    b = k[:]\n    b.sort()\n    m = 0\n    c = b[:]\n    c.reverse()\n    if b == k or c == k:\n        print('YES')\n        m = 3\n    else:\n        for j in range(a - 1):\n            if k[j] < k[j + 1]:\n                mn = k[j]\n                b = j\n                break\n        k = k[b:]\n        for j in range(len(k) - 1):\n            if k[j] > k[j + 1]:\n                print('NO')\n                m = 1\n                break\n    if m == 0:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    num = int(input())\n    arr = list(map(int, input().split()))\n    index = -1\n    for i in range(len(arr) - 1):\n        if arr[i] < arr[i + 1]:\n            index = i\n            break\n    if index == -1:\n        print('YES')\n        continue\n    A = arr[index + 1:]\n    B = sorted(A)\n    if A == B:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nanswers = []\nfor i in range(n):\n    array_len = int(input())\n    array = list(map(int, input().split()))\n    up = 0\n    down = 0\n    check = 0\n    for j in range(1, array_len):\n        if array[j] > array[j - 1]:\n            up += 1\n        elif array[j] < array[j - 1]:\n            down += 1\n            if up > 0:\n                check += 1\n                break\n    if check > 0:\n        answers.append('NO')\n    else:\n        answers.append('YES')\nfor ans in answers:\n    print(ans)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (N, A) = (int(input()), list(map(int, input().split())))\n    c = 0\n    L = [A[0]]\n    for i in range(1, N):\n        if A[i] != L[-1]:\n            L.append(A[i])\n    for i in range(0, len(L)):\n        if (i == 0 or L[i - 1] > L[i]) and (i == len(L) - 1 or L[i] < L[i + 1]):\n            c += 1\n    if c == 1:\n        print('YES')\n    else:\n        print('NO')\nfor _ in range(int(input())):\n    solve()", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = l[:l.index(min(l)) + 1]\n    b = l[l.index(min(l)) + 1:]\n    if sorted(a, reverse=True) == a and sorted(b) == b:\n        print('YES')\n    else:\n        print('NO')", "is_true = True\n\ndef state_f(arr):\n    ans = 'dol'\n    for (l, n) in zip(arr, arr[1:]):\n        if l < n:\n            ans = 'gora'\n        elif ans == 'gora':\n            if l > n:\n                return 'NO'\n    return 'YES'\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 'dol'\n    yn = 'YES'\n    print(state_f(arr=arr))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ss = l.copy()\n    if l == sorted(ss) or l == sorted(ss, reverse=True):\n        print('YES')\n    else:\n        s = 'Down'\n        t = 'YES'\n        for _ in range(1, len(l)):\n            if s == 'Down':\n                if l[_] > l[_ - 1]:\n                    s = 'Up'\n            elif l[_] < l[_ - 1]:\n                t = 'NO'\n                break\n        print(t)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    m = min(arr)\n    pos_m = arr.index(m)\n    ans = False\n    if max(arr) == m:\n        print('YES')\n        continue\n    arr_a = arr[:pos_m + 1]\n    arr_b = arr[pos_m:n]\n    if arr_a == sorted(arr_a, reverse=True) and arr_b == sorted(arr_b):\n        print('YES')\n    else:\n        print('NO')", "def answer(points):\n    left = points[0]\n    valley = 0\n    for i in range(1, len(points)):\n        if valley == 0:\n            if points[i] > left:\n                valley += 1\n            left = points[i]\n        elif points[i] < left:\n            return 'NO'\n        else:\n            left = points[i]\n    return 'YES'\ntest = int(input())\nfor i in range(test):\n    size = int(input())\n    points = list(map(int, input().split()))\n    print(answer(points))", "def DA(a):\n    i = 0\n    xn = True\n    while i != n - 1:\n        i += 1\n        if a[i] != a[i - 1]:\n            if a[i] < a[i - 1]:\n                xn = False\n            break\n    if xn:\n        while i != n - 1:\n            i += 1\n            if a[i] < a[i - 1]:\n                return 'NO'\n    else:\n        while i != n - 1:\n            i += 1\n            if a[i] > a[i - 1]:\n                break\n        while i != n - 1:\n            i += 1\n            if a[i] < a[i - 1]:\n                return 'NO'\n    return 'YES'\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(DA(a))", "t = int(input())\nanswer1 = 'YES'\nanswer2 = 'NO'\nzero = 0\none = 1\ntwo = 2\n\ndef main():\n    for q in range(t):\n        nums = int(input())\n        array = list(map(int, input().split()))\n        if nums == one:\n            print(answer1)\n        else:\n            guess = one\n            while guess < nums and array[guess] <= array[guess - one]:\n                guess = guess + one\n            while guess < nums and array[guess] >= array[guess - one]:\n                guess = guess + one\n            if not guess == nums:\n                print(answer2)\n            else:\n                print(answer1)\nmain()", "ip = int(input())\nfor i in range(ip):\n    n = int(input())\n    l = list(map(int, input().split()))\n    copy = l.copy()\n    if l == sorted(copy):\n        print('YES')\n    elif l == sorted(copy, reverse=True):\n        print('YES')\n    else:\n        direc = 'below'\n        val = 'YES'\n        for i in range(1, len(l)):\n            if direc == 'below':\n                if l[i] > l[i - 1]:\n                    direc = 'above'\n            elif l[i] < l[i - 1]:\n                val = 'NO'\n                break\n        print(val)", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    k = [int(i) for i in input().split()]\n    b = k[:]\n    b.sort()\n    m = 0\n    c = b[:]\n    c.reverse()\n    if b == k or c == k:\n        print('YES')\n        m = 3\n    else:\n        for j in range(a - 1):\n            if k[j] < k[j + 1]:\n                mn = k[j]\n                b = j\n                break\n        k = k[b:]\n        for j in range(len(k) - 1):\n            if k[j] > k[j + 1]:\n                print('NO')\n                m = 1\n                break\n    if m == 0:\n        print('YES')", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    k = [int(i) for i in input().split()]\n    b = k[:]\n    b.sort()\n    m = 0\n    c = b[:]\n    c.reverse()\n    if b == k or c == k:\n        print('YES')\n        m = 3\n    else:\n        for j in range(a - 1):\n            if k[j] < k[j + 1]:\n                mn = k[j]\n                b = j\n                break\n        k = k[b:]\n        for j in range(len(k) - 1):\n            if k[j] > k[j + 1]:\n                print('NO')\n                m = 1\n                break\n    if m == 0:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    min_a = min(list1)\n    ind_min = list1.index(min_a)\n    f = list1[:ind_min]\n    l = list1[ind_min:]\n    if f == sorted(f)[::-1] and l == sorted(l):\n        print('YES')\n    else:\n        print('NO')", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 0\n    j = n - 1\n    while i + 1 < n and a[i] >= a[i + 1]:\n        i += 1\n    while j != i and j >= 0 and (a[j] >= a[j - 1]):\n        j -= 1\n    if i == j:\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "for _ in int(input()) * ' ':\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = sorted(l.copy())\n    if k == l:\n        print('YES')\n    else:\n        z = k[0]\n        i = 0\n        a = 1\n        q = '-'\n        while i < n - 1:\n            if q == '-':\n                if l[i] == z:\n                    q = '+'\n                elif l[i] >= l[i + 1]:\n                    i += 1\n                else:\n                    a = 0\n                    break\n            elif l[i] <= l[i + 1]:\n                i += 1\n            else:\n                a = 0\n                break\n        if a:\n            print('YES')\n        else:\n            print('NO')", "def valley(a):\n    mn = min(a)\n    f = a.index(mn)\n    rev = f\n    ant = mn\n    while rev >= 0:\n        if a[rev] < ant:\n            print('NO')\n            return\n        ant = a[rev]\n        rev -= 1\n    rev = f\n    ant = mn\n    while rev < len(a):\n        if a[rev] < ant:\n            print('NO')\n            return\n        ant = a[rev]\n        rev += 1\n    print('YES')\n    return ()\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        input()\n        a = [int(x) for x in input().split()]\n        valley(a)\nmain()", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.append(0)\n    r = 1\n    for i in range(n - 1):\n        if r:\n            if a[i] < a[i + 1]:\n                r = 0\n                while a[i + 1] >= a[i] and i < n - 1:\n                    i += 1\n                if i == n - 1:\n                    print('YES')\n                else:\n                    print('NO')\n        else:\n            break\n    if r == 1:\n        print('YES')", "def solve():\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    flag = 1\n    for i in range(0, n - 1):\n        if arr[i] < arr[i + 1]:\n            flag = 0\n            while i < n - 1 and arr[i + 1] >= arr[i]:\n                i += 1\n            if i == n - 1:\n                print('YES')\n                break\n            else:\n                print('NO')\n                break\n    if flag == 1:\n        print('YES')\nt = int(input())\nfor i in range(t):\n    solve()", "t = int(input(''))\naas = [0] * t\nfor j in range(t):\n    x = int(input(''))\n    y = input('').split(' ')\n    y = [int(z) for z in y]\n    v = y[0]\n    firstup = -1\n    lastdown = -1\n    for i in range(x - 1):\n        if firstup == -1 and y[i + 1] > y[i]:\n            firstup = i\n        if y[i + 1] < y[i]:\n            lastdown = i\n    v1 = lastdown < firstup\n    v2 = lastdown == -1 or firstup == -1\n    aas[j] = ('NO', 'YES')[v1 or v2]\nfor a in aas:\n    print(a)", "for _ in (input() for _ in range(int(input()))):\n    (xs, counter, last, valley) = (list(map(int, input().split())), 0, 10 ** 10, False)\n    for (i, x) in enumerate(xs):\n        if valley:\n            if x == last:\n                continue\n            if x > last:\n                counter += 1\n            valley = False\n        if x < last:\n            valley = True\n        last = x\n    print(['NO', 'YES'][counter + valley == 1])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    for i in range(len(arr) - 1):\n        if arr[i] < arr[i + 1]:\n            if arr[i:] == sorted(arr[i:]):\n                print('YES')\n            else:\n                print('NO')\n            break\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    ind = 0\n    for i in range(1, n):\n        if ar[i - 1] < ar[i]:\n            ind = i\n            break\n    if ind == 0:\n        print('YES')\n    else:\n        f = 0\n        for j in range(ind, n - 1):\n            if ar[j] > ar[j + 1]:\n                f = 1\n                break\n        if f == 0:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ps = list(map(int, input().split()))\n    last_i = 0\n    bad = False\n    br = False\n    for i in range(n - 1):\n        last_i = i\n        if ps[i] < ps[i + 1]:\n            br = True\n            break\n    if not br:\n        print('YES')\n        continue\n    for i in range(last_i, n - 1):\n        if ps[i] > ps[i + 1]:\n            bad = True\n            break\n    if bad:\n        print('NO')\n    else:\n        print('YES')", "def oi():\n    a = input().split()\n    a = [int(i) for i in a]\n    valley = 0\n    history = a[0]\n    previous = ''\n    for i in a:\n        if i < history:\n            previous = 'down'\n            history = i\n        elif i > history:\n            if previous != 'up':\n                valley += 1\n            previous = 'up'\n            history = i\n    if previous != 'up':\n        valley += 1\n    return 'YES' if valley == 1 else 'NO'\nfor i in range(int(input())):\n    input()\n    print(oi())", "from sys import stdout\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    flag = True\n    (recmin, gt) = (arr[0], 1)\n    for i in range(1, n):\n        if gt:\n            if arr[i - 1] < arr[i]:\n                gt = 0\n        elif arr[i - 1] > arr[i]:\n            flag = False\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "def sol(n, l):\n    m = min(l)\n    x = l.index(m)\n    for i in range(x + 1, n):\n        if l[i] < l[i - 1]:\n            return 'NO'\n    for i in range(x - 1, -1, -1):\n        if l[i + 1] > l[i]:\n            return 'NO'\n    return 'YES'\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(sol(n, l))", "def boolvalley(li, n):\n    if n == 1:\n        return True\n    j = 0\n    for i in range(n - 1):\n        if li[i] == li[i + 1]:\n            j += 1\n        else:\n            break\n    if j == n - 1:\n        return True\n    if li[j] > li[j + 1]:\n        x = j\n        y = j + 1\n        f = 0\n        while y < n:\n            if li[y] > li[x]:\n                f = 1\n                break\n            x += 1\n            y += 1\n        if f == 0:\n            return True\n        else:\n            while y < n:\n                if li[y] < li[x]:\n                    return False\n                x += 1\n                y += 1\n            return True\n    else:\n        x = j\n        y = j + 1\n        while y < n:\n            if li[x] > li[y]:\n                return False\n            y += 1\n            x += 1\n        return True\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    li = list(map(int, input().split()))\n    if boolvalley(li, n):\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "import sys\ninput = sys.stdin.readline\nins = lambda : input().rstrip()\nini = lambda : int(input().rstrip())\ninm = lambda : map(int, input().rstrip().split())\ninl = lambda : list(map(int, input().split()))\nout = lambda x, s='\\n': print(s.join(map(str, x)))\nt = ini()\nfor _ in range(t):\n    n = ini()\n    a = inl()\n    b = []\n    for i in a:\n        if b != [] and i == b[-1]:\n            continue\n        b.append(i)\n    count = 0\n    x = len(b)\n    if x == 1:\n        print('YES')\n        continue\n    for i in range(x):\n        if (i == 0 or b[i - 1] > b[i]) and (i == x - 1 or b[i + 1] > b[i]):\n            count += 1\n    print('YES' if count == 1 else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    up = False\n    ans = 'YES'\n    for i in range(n - 1):\n        if arr[i] < arr[i + 1]:\n            up = True\n        elif arr[i] > arr[i + 1] and up:\n            ans = 'NO'\n            break\n    print(ans)", "N = int(input())\nfor _ in range(N):\n    input()\n    arr = list(map(int, input().split()))\n    falling = True\n    valley = True\n    for i in range(1, len(arr)):\n        if falling and arr[i] > arr[i - 1]:\n            falling = False\n        if not falling and arr[i] < arr[i - 1]:\n            valley = False\n            break\n    if valley:\n        print('YES')\n    else:\n        print('NO')", "def runCase():\n    n = int(input())\n    array = list(map(int, input().split()))\n    left = 0\n    right = 1\n    while right < n:\n        if array[left] < array[right]:\n            break\n        right += 1\n        left += 1\n    else:\n        return 'YES'\n    while right < n:\n        if array[left] > array[right]:\n            break\n        right += 1\n        left += 1\n    else:\n        return 'YES'\n    left = 0\n    right = n - 1\n    while left < right:\n        if left + 1 < right:\n            if array[left] < array[left + 1]:\n                break\n        if right - 1 > left:\n            if array[right] < array[right - 1]:\n                break\n        left += 1\n        right -= 1\n    else:\n        return 'YES'\n    return 'NO'\ntests = int(input())\nfor _ in range(tests):\n    print(runCase())", "for _ in range(int(input())):\n    n = int(input())\n    num = list(map(int, input().split()))\n    if n == 1:\n        print('YES')\n    elif num == sorted(num):\n        print('YES')\n    else:\n        m = min(num)\n        f = 0\n        flag = 1\n        for i in range(n - 1):\n            if num[i] == m:\n                f = 1\n            if f == 0:\n                if num[i + 1] > num[i]:\n                    flag = 0\n                    break\n                else:\n                    flag = 1\n            elif num[i + 1] < num[i]:\n                flag = 0\n                break\n        if flag:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    st = l[0]\n    cs = 1\n    p = l[0]\n    pi = 0\n    for i in range(1, n):\n        if l[i] <= p:\n            p = l[i]\n            pi = i\n            continue\n        else:\n            break\n    for i in range(pi, n):\n        if l[i] < p:\n            cs = 0\n            break\n        else:\n            p = l[i]\n    if cs == 1:\n        print('YES')\n    else:\n        print('NO')", "from sys import maxsize\n\ndef solve(arr, n):\n    arr.append(10 ** 9 + 7)\n    ans = 1\n    is_increasing = False\n    for i in range(0, n):\n        if ans == 1 and arr[i] < arr[i + 1]:\n            ans = 2\n        if ans == 2 and arr[i] > arr[i + 1]:\n            return 'NO'\n    return 'YES'\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    print(solve(arr, n))", "def solve():\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n <= 2:\n        print('YES')\n        return\n    up = False\n    for i in range(1, n - 1):\n        if l[i - 1] < l[i]:\n            up = True\n        if l[i + 1] < l[i] and up:\n            print('NO')\n            return\n    print('YES')\nt = int(input())\nfor _ in range(t):\n    solve()", "import os.path\nfrom math import gcd, floor, ceil\nfrom collections import *\nimport sys\nimport math\nmod = 1000000007\nINF = float('inf')\n\ndef st():\n    return list(sys.stdin.readline().strip())\n\ndef li():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef mp():\n    return map(int, sys.stdin.readline().split())\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef pr(n):\n    return sys.stdout.write(str(n) + '\\n')\n\ndef prl(n):\n    return sys.stdout.write(str(n) + ' ')\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nt = inp()\nfor i in range(t):\n    n = inp()\n    l = li()\n    f = 0\n    k = 0\n    if n == 1:\n        print('YES')\n    elif len(set(l)) == 1:\n        print('YES')\n    else:\n        for i in range(1, n):\n            if i == 1:\n                if l[i] <= l[i - 1]:\n                    k = 1\n                elif l[i] > l[i - 1]:\n                    f += 1\n            elif k == 1:\n                if l[i] > l[i - 1]:\n                    f += 1\n                    k = 0\n                elif l[i] <= l[i - 1]:\n                    k = 1\n            elif l[i] < l[i - 1]:\n                k = 1\n        if k == 1:\n            f += 1\n        if f == 1:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    bot = min(a)\n    ans = True\n    for i in range(a.index(bot) + 1, n):\n        if a[i] < a[i - 1]:\n            ans = False\n    for i in range(a.index(bot)):\n        if a[i + 1] > a[i]:\n            ans = False\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "def res(n, a):\n    if n == 1:\n        return 'YES'\n    else:\n        i = 1\n        while i != n and a[i] == a[i - 1]:\n            i += 1\n        if i == n:\n            return 'YES'\n        if a[i] > a[i - 1]:\n            while i != n:\n                if a[i] < a[i - 1]:\n                    return 'NO'\n                i += 1\n            return 'YES'\n        else:\n            while i != n and a[i] <= a[i - 1]:\n                i += 1\n            if i == n:\n                return 'YES'\n            while i != n and a[i] >= a[i - 1]:\n                i += 1\n            if i == n:\n                return 'YES'\n        return 'NO'\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(res(n, a))", "t = int(input())\nresult = []\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arc1 = arr.copy()\n    arc2 = arr.copy()\n    if arc1.sort() == arr:\n        result.append('YES')\n    elif arc2.sort(reverse=True) == arr:\n        result.append('YES')\n    else:\n        c = 0\n        flag = 0\n        for j in range(1, n):\n            if c == 0:\n                if arr[j] > arr[j - 1]:\n                    c = 1\n            elif arr[j] < arr[j - 1]:\n                flag = 1\n                break\n        if flag == 1:\n            result.append('NO')\n        else:\n            result.append('YES')\nfor i in result:\n    print(i)", "def dolina(a: list):\n    n = len(a)\n    p = 0\n    f = 0\n    pow = 0\n    while f < len(a) and pow == 0:\n        if f == 0 or a[f - 1] > a[f]:\n            l = a[f]\n            while f < n - 1 and a[f] == l:\n                f += 1\n            if f == n - 1 or a[f - 1] < a[f]:\n                p += 1\n                f += 1\n        else:\n            f += 1\n    if p == 1:\n        return True\n    return False\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if dolina(a):\n        print('YES')\n    else:\n        print('NO')", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = 0\n    ans = 'YES'\n    for i in range(n - 1):\n        if a[i] < a[i + 1]:\n            x = 1\n        elif a[i] > a[i + 1] and x:\n            ans = 'NO'\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "for t in range(int(input())):\n    m = int(input())\n    lis = list(map(int, input().split()))\n    (f, x) = (0, 1)\n    for i in range(m - 1):\n        if f == 0:\n            if lis[i + 1] > lis[i]:\n                f = 1\n            else:\n                f = 0\n        elif lis[i + 1] < lis[i]:\n            print('NO')\n            x = 0\n            break\n        else:\n            f = 1\n            continue\n    if x:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 1\n    while i < n and a[i] <= a[i - 1]:\n        i += 1\n    while i < n and a[i] >= a[i - 1]:\n        i += 1\n    print('YES' if i == n else 'NO')", "t = int(input())\n\ndef checkif(actual):\n    c = 0\n    for i in range(len(actual)):\n        if (i == 0 or actual[i - 1] > actual[i]) and (i == len(actual) - 1 or actual[i] < actual[i + 1]):\n            c += 1\n    return c == 1\nfor i in range(t):\n    n = int(input())\n    ar = input().split()\n    ar = [int(u) for u in ar]\n    s = []\n    p = None\n    if len(ar) == 1:\n        print('YES')\n    else:\n        for i in ar:\n            if i != p:\n                s.append(i)\n            p = i\n        if checkif(s):\n            print('YES')\n        else:\n            print('NO')", "for j in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    z = l[0]\n    g = 'YES'\n    d = 0\n    for i in range(n):\n        if l[i] <= z and d == 0:\n            d = 0\n            z = l[i]\n        elif l[i] >= z:\n            d = 1\n            z = l[i]\n        else:\n            g = 'NO'\n            break\n    print(g)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    idx = 0\n    for i in range(1, n):\n        if l[i] <= l[i - 1]:\n            idx = i\n        else:\n            break\n    for i in range(idx + 1, n):\n        if l[i] >= l[i - 1]:\n            idx = i\n        else:\n            break\n    print('YES' if idx + 1 == n else 'NO')", "def solve():\n    n = int(input())\n    ls = list(map(int, input().split()))\n    f = 1\n    c = 0\n    for i in range(1, n):\n        if ls[i] > ls[i - 1]:\n            c = 1\n        if c == 1 and ls[i] < ls[i - 1]:\n            f = 0\n            break\n    if f:\n        print('YES')\n    else:\n        print('NO')\nfor i in range(int(input())):\n    solve()", "def solve():\n    n = int(input())\n    ls = list(map(int, input().split()))\n    f = 1\n    c = 0\n    for i in range(1, n):\n        if ls[i] > ls[i - 1]:\n            c = 1\n        if c == 1 and ls[i] < ls[i - 1]:\n            f = 0\n            break\n    if f:\n        print('YES')\n    else:\n        print('NO')\nfor i in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = min(l)\n    x = l.index(m)\n    f = True\n    for i in range(x + 1, n):\n        if l[i] < l[i - 1]:\n            f = False\n            break\n    if f:\n        for i in range(x - 1, -1, -1):\n            if l[i + 1] > l[i]:\n                f = False\n                break\n    if f:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    inp = list(map(int, input().split()))\n    arr = [inp[0]]\n    for i in inp[1:]:\n        if i != arr[-1]:\n            arr.append(i)\n    cnt = 0\n    for i in range(len(arr)):\n        if (i == 0 or arr[i - 1] > arr[i]) and (i == len(arr) - 1 or arr[i + 1] > arr[i]):\n            cnt += 1\n    print('YES') if cnt == 1 else print('NO')", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    nums = [int(i) for i in input().split(' ')]\n    if n == 1:\n        print('YES')\n        continue\n    a = [nums[i + 1] - nums[i] for i in range(n - 1)]\n    answer = 'YES'\n    now = None\n    for i in a:\n        if i > 0:\n            if now == None:\n                now = 'up'\n            elif now == 'down':\n                now = 'up'\n        elif i < 0:\n            if now == None:\n                now = 'down'\n            elif now == 'up':\n                answer = 'NO'\n                break\n    print(answer)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 0\n    lower = False\n    upper = False\n    while i < n - 1 and a[i] >= a[i + 1]:\n        i += 1\n        lower = True\n    while i < n - 1 and a[i] <= a[i + 1]:\n        i += 1\n        upper = True\n    if i == n - 1:\n        print('YES')\n    else:\n        print('NO')", "import sys\nT = int(input())\nfor tc in range(T):\n    ai = int(input())\n    ai_li = list(map(int, sys.stdin.readline().split()))\n    status = 0\n    idx = 0\n    for i in range(1, len(ai_li)):\n        if ai_li[i] - ai_li[i - 1] > 0:\n            status = 1\n            idx = i - 1\n            break\n    if status == 0:\n        print('YES')\n    else:\n        checker = True\n        for j in range(idx + 1, len(ai_li)):\n            if ai_li[j] - ai_li[j - 1] < 0:\n                checker = False\n        if checker:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 'YES'\n    sw = 0\n    for i in range(1, n):\n        if sw and a[i] < a[i - 1]:\n            ans = 'NO'\n            break\n        if sw == 0 and a[i] > a[i - 1]:\n            sw = 1\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = min(l)\n    if l == sorted(l):\n        print('YES')\n    else:\n        for i in range(n):\n            if l[i] == x:\n                break\n        s1 = l[0:i + 1]\n        s2 = l[i:]\n        s1 = s1[::-1]\n        if s1 == sorted(s1) and s2 == sorted(s2):\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    conf = 0\n    prev = a[0]\n    e = 1\n    if len(a) == 1:\n        ans.append('YES')\n        continue\n    while prev == a[e]:\n        if e + 1 < len(a):\n            e += 1\n        else:\n            ans.append('YES')\n            break\n    if e + 1 == len(a) and a[0] == a[-1]:\n        continue\n    if a[e] > prev:\n        conf += 1\n    prev = a[-1]\n    c = len(a) - 2\n    while prev == a[c]:\n        if c >= 0:\n            c -= 1\n        else:\n            break\n    if a[c] > prev:\n        conf += 1\n    if conf == 2:\n        ans.append('NO')\n        continue\n    bottom = -1000\n    for j in range(e, c + 2):\n        if a[j] < a[j - 1]:\n            bottom = a[j]\n        elif a[j] == a[j - 1] and bottom == a[j - 1]:\n            bottom = a[j]\n        elif bottom == a[j - 1]:\n            conf += 1\n    if conf == 1:\n        ans.append('YES')\n    else:\n        ans.append('NO')\nprint(*ans, sep='\\n')", "def f():\n    T = int(input())\n    for _ in range(T):\n        _ = input()\n        nums = [int(c) for c in input().split()]\n        b = solve(nums)\n        print('YES' if b else 'NO')\n\ndef solve(nums):\n    n = len(nums)\n    distincts = []\n    for i in range(n):\n        if i == 0 or nums[i] != distincts[-1]:\n            distincts.append(nums[i])\n    valley_cnt = 0\n    N = len(distincts)\n    for i in range(N):\n        if (i == 0 or distincts[i - 1] > distincts[i]) and (i == N - 1 or distincts[i] < distincts[i + 1]):\n            valley_cnt += 1\n    return valley_cnt == 1\nf()", "for _ in range(int(input())):\n    n = int(input())\n    num = [int(x) for x in input().split()]\n    checker = r = False\n    for i in range(n - 1):\n        if num[i + 1] > num[i]:\n            checker = True\n        if checker and num[i + 1] < num[i]:\n            r = True\n    if r:\n        print('NO')\n    else:\n        print('YES')", "def solution():\n    n = int(input())\n    nums = [int(i) for i in input().split()]\n    i = 1\n    while i < n and nums[i] <= nums[i - 1]:\n        i += 1\n    while i < n and nums[i] >= nums[i - 1]:\n        i += 1\n    if i == n:\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nwhile t:\n    solution()\n    t -= 1", "t = int(input())\nwhile t:\n    n = int(input())\n    l = list(map(int, input().split()))\n    f = 1\n    i = 0\n    while i < n - 1 and f == 1:\n        if l[i] < l[i + 1]:\n            f = 0\n            while i < n - 1 and l[i + 1] >= l[i]:\n                i += 1\n            if i == n - 1:\n                print('YES')\n            else:\n                print('NO')\n        i += 1\n    if f == 1:\n        print('YES')\n    t -= 1", "def solve(l, a):\n    for i in range(a):\n        if l[i] < l[i + 1]:\n            return 'NO'\n    for i in range(a, len(l) - 1):\n        if l[i] > l[i + 1]:\n            return 'NO'\n    return 'YES'\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = l.index(min(l))\n    print(solve(l, a))", "t = int(input())\nfor essa in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    last = -420\n    b = []\n    b.append(2000000000)\n    for essa in a:\n        if essa != last:\n            b.append(essa)\n        last = essa\n    b.append(2000000000)\n    m = len(b)\n    cnt = 0\n    for i in range(1, m):\n        if b[i] < b[i - 1] and b[i] < b[i + 1]:\n            cnt += 1\n    if cnt == 1:\n        print('YES')\n    else:\n        print('NO')", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    i = 0\n    error = False\n    while i < n - 1:\n        if lst[i] >= lst[i + 1]:\n            i += 1\n        else:\n            break\n    j = i\n    while j < n - 1:\n        if lst[j] <= lst[j + 1]:\n            j += 1\n        else:\n            error = True\n            break\n    print('NO' if error else 'YES')", "for _ in range(int(input())):\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    l = 0\n    r = len(list1) - 1\n    while l != r:\n        if list1[l] >= list1[l + 1]:\n            l += 1\n        elif list1[r] >= list1[r - 1]:\n            r -= 1\n        else:\n            break\n    if l == r:\n        print('YES')\n    else:\n        print('NO')", "import math\nfor _ in range(int(input())):\n    a = int(input())\n    z = list(map(int, input().split()))\n    t = z.index(min(z))\n    if sorted(z, reverse=False) == z:\n        print('YES')\n    elif sorted(z, reverse=True) == z:\n        print('YES')\n    elif sorted(z[:t + 1], reverse=True) == z[:t + 1] and sorted(z[t:]) == z[t:]:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor h in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = 10 ** 10\n    i = 0\n    while i < n and f >= a[i]:\n        f = a[i]\n        i += 1\n    g = 0\n    if i < n:\n        f = a[i]\n        for j in range(i, n):\n            if f > a[j]:\n                g = 1\n            f = a[j]\n    if g == 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nanswers = []\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    spad = True\n    pod = False\n    for i in range(len(a) - 1):\n        if a[i + 1] <= a[i] and spad:\n            None\n        elif a[i + 1] > a[i] and spad:\n            spad = False\n            pod = True\n        elif a[i + 1] >= a[i] and pod:\n            None\n        else:\n            answers.append('NO')\n            break\n    else:\n        answers.append('YES')\nfor i in answers:\n    print(i)", "def solution():\n    n = int(input()) + 2\n    a = [2 * 10 ** 5] + [int(num) for num in input().split()] + [2 * 10 ** 5]\n    cnt = 0\n    valley = False\n    for i in range(1, n):\n        if a[i] < a[i - 1]:\n            valley = True\n            continue\n        if a[i] == a[i - 1] and valley:\n            continue\n        if a[i] > a[i - 1] and valley:\n            valley = False\n            cnt += 1\n            if cnt > 1:\n                print('NO')\n                return\n    print('YES')\n\ndef main():\n    t = int(input())\n    while t:\n        solution()\n        t -= 1\nmain()", "def fun(n, li):\n    (l, r) = (0, 0)\n    for i in range(1, n):\n        if li[i - 1] < li[i]:\n            l = 1\n        if l == 1 and li[i - 1] > li[i]:\n            r = 1\n            return False\n    return True\nfor i in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    if fun(n, li) == 1:\n        print('YES')\n    else:\n        print('NO')"]