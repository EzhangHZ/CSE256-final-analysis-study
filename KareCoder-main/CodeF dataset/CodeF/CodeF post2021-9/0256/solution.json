["input = open(0).readline\nfor _ in range(int(input())):\n    a = input().strip()\n    t = input().strip()\n    if t == 'a':\n        print(1)\n    elif 'a' in t:\n        print(-1)\n    else:\n        print(2 ** len(a))", "import sys\ninput = iter(sys.stdin.read().splitlines()).__next__\n\ndef solve(S, T):\n    if 'a' in T:\n        return 1 if len(T) == 1 else -1\n    return 2 ** S.count('a')\nTC = int(input())\nfor tc in range(TC):\n    S = input().strip()\n    T = input().strip()\n    res = solve(S, T)\n    print(res)", "import sys\ntestcase = int(sys.stdin.readline().strip())\nfor i in range(testcase):\n    dic = {}\n    s = sys.stdin.readline().strip()\n    t = sys.stdin.readline().strip()\n    dic[s] = 1\n    if t == 'a':\n        print(1)\n        continue\n    elif 'a' in t:\n        print(-1)\n        continue\n    else:\n        print(2 ** s.count('a'))", "from sys import stdin\n\ndef read_int():\n    return int(stdin.readline())\n\ndef read_list(_type=int):\n    return list(map(_type, stdin.readline().split()))\n\ndef read_tuple():\n    return stdin.readline().split()\n\ndef read_string():\n    return stdin.readline().rstrip('\\r\\n')\nfor _ in range(read_int()):\n    s = read_string()\n    t = read_string()\n    if t == 'a':\n        print(1)\n    elif t.count('a'):\n        print(-1)\n    else:\n        print(2 ** len(s))", "import sys\n\ndef solve():\n    s = sys.stdin.readline().strip()\n    t = sys.stdin.readline().strip()\n    if t == 'a':\n        print(1)\n    elif t.find('a') != -1:\n        print(-1)\n    else:\n        print(2 ** len(s))\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "from sys import stdin\nfrom math import log, floor, ceil, gcd\nfrom collections import defaultdict as dd\ninput = stdin.readline\ninp = lambda : int(stdin.readline())\nrs = lambda : stdin.readline().strip()\n\ndef ra(typ):\n    return list(map(typ, stdin.readline().split()))\n\ndef rv(typ):\n    return map(typ, stdin.readline().split())\n\ndef main():\n    for _ in range(inp()):\n        s = len(rs())\n        t = rs()\n        if 'a' in t:\n            if len(t) == 1:\n                print(1)\n            else:\n                print(-1)\n        else:\n            print(2 ** s)\nmain()", "import sys\ninput = lambda : sys.stdin.readline().strip()\na = int(input())\nfor i in range(a):\n    b = input()\n    c = input()\n    if c == 'a':\n        print(1)\n    elif 'a' in c:\n        print(-1)\n    else:\n        print(2 ** len(b))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    s = input()[:-1]\n    t = input()[:-1]\n    if t == 'a':\n        print(1)\n    elif 'a' in t:\n        print(-1)\n    else:\n        print(2 ** len(s))", "import sys\nq = int(sys.stdin.readline().strip())\nfor _ in range(q):\n    s = sys.stdin.readline().strip()\n    t = sys.stdin.readline().strip()\n    if len(t) > 1 and 'a' in t:\n        print(-1)\n    elif t == 'a':\n        print(1)\n    else:\n        n = len(s)\n        print(int(1 << n))", "import sys\n\ndef factorial(total, index):\n    if index == 0:\n        return total\n    else:\n        return factorial(total * index, index - 1)\n\ndef fn(s, t):\n    if not s:\n        return 0\n    if not t or t == 'a':\n        return 1\n    if 'a' in t:\n        return -1\n    return 2 ** len(s)\ninput = sys.stdin.readlines()\nfor i in range(int(input[0].strip('\\n'))):\n    (s, t) = (input[2 * i + 1].strip('\\n'), input[2 * i + 2].strip('\\n'))\n    out = fn(s, t)\n    print(out)", "import sys\n\ndef solve():\n    s = sys.stdin.readline().strip()\n    t = sys.stdin.readline().strip()\n    if t == 'a':\n        print(1)\n    elif t.find('a') != -1:\n        print(-1)\n    else:\n        print(2 ** len(s))\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "out = []\nfor _ in range(int(input())):\n    s = input()\n    t = input()\n    if t == 'a':\n        out.append(1)\n        continue\n    if 'a' in t:\n        out.append(-1)\n        continue\n    out.append(2 ** len(s))\nfor i in out:\n    print(i)", "import sys\ninput = sys.stdin.readline\n\ndef sol(s, t):\n    if t == 'a':\n        return 1\n    if t.find('a') >= 0:\n        return -1\n    return 2 ** len(s)\nT = int(input())\nfor _ in range(T):\n    s = input().strip()\n    t = input().strip()\n    ret = sol(s, t)\n    print(ret)", "from sys import stdin\nfrom math import log, floor, ceil, gcd\nfrom collections import defaultdict as dd\ninput = stdin.readline\ninp = lambda : int(stdin.readline())\nrs = lambda : stdin.readline().strip()\n\ndef ra(typ):\n    return list(map(typ, stdin.readline().split()))\n\ndef rv(typ):\n    return map(typ, stdin.readline().split())\n\ndef main():\n    for _ in range(inp()):\n        s = len(rs())\n        t = rs()\n        if 'a' in t:\n            if len(t) == 1:\n                print(1)\n            else:\n                print(-1)\n        else:\n            print(2 ** s)\nmain()", "num_tests = int(input(''))\nproblems = []\nfor i in range(0, num_tests):\n    s = input('')\n    t = input('')\n    problems.append((s, t))\nfor (s, t) in problems:\n    if 'a' in t and len(t) > 1:\n        print(-1)\n        continue\n    elif t == 'a':\n        print('1')\n        continue\n    else:\n        print(2 ** len(s))", "t = int(input())\nres = []\nfor i in range(t):\n    base = input()\n    new = input()\n    if new == 'a':\n        res.append(1)\n    elif new.find('a') != -1:\n        res.append(-1)\n    else:\n        n = base.count('a')\n        res.append(2 ** n)\nfor i in res:\n    print(i)", "import math as m\ni = input()\ninp = []\nfor a in range(0, int(i)):\n    inp += [[input(), input()]]\nfor i in inp:\n    s = i[0]\n    t = i[1]\n    n = len(s)\n    if 'a' in t:\n        if len(t) == 1:\n            print(1)\n        else:\n            print(-1)\n    else:\n        print(2 ** n)", "CHAR = 'a'\nall_obtainable = []\nfor _ in range(int(input())):\n    init = input()\n    replace = input()\n    if CHAR in replace:\n        all_obtainable.append(1 if len(replace) == 1 else -1)\n    else:\n        all_obtainable.append(2 ** init.count(CHAR))\nprint('\\n'.join((str(o) for o in all_obtainable)))", "q = int(input())\nresult = []\nfor i in range(q):\n    s = input()\n    t = input()\n    if t == 'a':\n        result.append(1)\n    elif len(t) >= 2 and 'a' in t:\n        result.append(-1)\n    else:\n        result.append(2 ** len(s))\nfor x in result:\n    print(x)", "t = int(input())\nst = []\npt = []\nfor _ in range(t):\n    st += [input()]\n    pt += [input()]\nfor i in range(t):\n    s = st[i]\n    p = pt[i]\n    l = []\n    if 'a' in p and p != 'a':\n        print(-1)\n    elif p == 'a':\n        print(1)\n    else:\n        print(2 ** len(s))", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    a = input().strip()\n    b = input().strip()\n    if b == 'a':\n        print(1)\n        return\n    if 'a' in b:\n        print(-1)\n        return\n    print(1 << a.count('a'))\nT = int(input())\nfor _ in range(T):\n    solve()", "def Solve():\n    (ss, rs) = ([], [])\n    for t in range(int(input())):\n        ss.append(input())\n        rs.append(input())\n    for (s, r) in zip(ss, rs):\n        if 'a' in s:\n            if r == 'a':\n                print(1)\n            elif 'a' in r:\n                print(-1)\n            else:\n                print(2 ** len(s))\n        else:\n            print(0)\nSolve()", "n = int(input())\nvet = []\nwhile n > 0:\n    n -= 1\n    a = input()\n    b = input()\n    if b == 'a':\n        vet.append(1)\n    elif 'a' in b and len(b) > 1:\n        vet.append(-1)\n    else:\n        vet.append(2 ** len(a))\nprint(*vet, sep='\\n')", "from functools import lru_cache\nimport sys\nimport threading\n\ndef input():\n    return sys.stdin.readline().rstrip('\\r\\n')\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        s = input()\n        t = input()\n        if t != 'a' and 'a' in t:\n            print(-1)\n            continue\n        if t == 'a':\n            print(1)\n            continue\n        print(2 ** len(s))\nsys.setrecursionlimit(1 << 30)\nthreading.stack_size(1 << 27)\nmain_thread = threading.Thread(target=main)\nmain_thread.start()\nmain_thread.join()", "def value(string1, string2):\n    count = string2.count('a')\n    if count == 0:\n        return 2 ** len(string1)\n    elif count >= 1:\n        if len(string2) == 1:\n            return 1\n        else:\n            return -1\n\ndef main():\n    n = int(input())\n    data = []\n    for i in range(n):\n        string1 = input()\n        string2 = input()\n        data.append([string1, string2])\n    for strings in data:\n        print(value(strings[0], strings[1]))\nmain()", "k = int(input())\np = [0] * k\nfor i in range(k):\n    s = input()\n    t = input()\n    if len(t) > 1 and t.find('a') != -1:\n        p[i] = -1\n    elif len(t) == 1 and t[0] == 'a':\n        p[i] = 1\n    else:\n        p[i] = 2 ** len(s)\nfor j in range(k):\n    print(p[j])", "q = int(input())\nl = []\nfor i in range(q):\n    l.append((input(), input()))\nfor i in l:\n    (s, t) = i\n    if 'a' in t and len(t) > 1:\n        print(-1)\n    elif t == 'a':\n        print(1)\n    else:\n        print(2 ** len(s))", "n = input()\ntest_cases_a = []\ntest_cases_b = []\nfor i in range(0, int(n)):\n    test_cases_a.append(input())\n    test_cases_b.append(input())\nfor i in range(0, len(test_cases_b)):\n    length_b = len(test_cases_b[i])\n    length_a = len(test_cases_a[i])\n    if length_b == 1:\n        if test_cases_b[i] == 'a':\n            print('1')\n        else:\n            print(2 ** length_a)\n    elif 'a' in test_cases_b[i]:\n        print(-1)\n    else:\n        print(2 ** length_a)", "t = int(input())\nans = []\nfor i in range(t):\n    q = input()\n    s = input()\n    if s.count('a') == 0:\n        ans.append(2 ** len(q))\n    elif s.count('a') != len(s):\n        ans.append(-1)\n    elif len(s) != 1:\n        ans.append(-1)\n    else:\n        ans.append(1)\nfor elem in ans:\n    print(elem)", "q = int(input())\nans = []\nfor _ in range(q):\n    s = input()\n    t = input()\n    if t == 'a':\n        ans.append(1)\n    elif len(t) == 1:\n        ans.append(2 ** len(s))\n    elif 'a' in t:\n        ans.append(-1)\n    else:\n        ans.append(2 ** len(s))\nfor i in ans:\n    print(i)", "n_test_cases = int(input())\nresults = []\nfor _ in range(n_test_cases):\n    s = input()\n    t = input()\n    if t == 'a':\n        results.append(1)\n        continue\n    a_freq = t.count('a')\n    if a_freq >= 1:\n        results.append(-1)\n    elif len(s) == 1:\n        results.append(2)\n    else:\n        results.append(pow(2, len(s)))\nfor result in results:\n    print(result)", "def input_strings():\n    input_data = []\n    number_cases = int(input())\n    for case in range(number_cases):\n        input_data.append([input(), input()])\n    return input_data\ndata = input_strings()\nfor case in data:\n    s = case[0]\n    t = case[1]\n    if t == 'a':\n        print('1')\n        continue\n    if 'a' in t:\n        print('-1')\n        continue\n    print(2 ** len(s))", "import sys\n\ndef countStringsPossible(s, t):\n    if set(s) == set(t) and len(t) == 1:\n        return 1\n    elif len(s) == 1 and len(t) == 1:\n        return 2\n    l = len(s)\n    if 'a' not in t:\n        return 2 ** l\n    else:\n        return -1\ntc = int(sys.stdin.readline())\nfor i in range(tc):\n    s = sys.stdin.readline().strip()\n    t = sys.stdin.readline().strip()\n    print(countStringsPossible(s, t))", "n = int(input())\nans = []\nfor i in range(n):\n    s = input()\n    t = input()\n    len_s = len(s)\n    len_t = int(len(t))\n    if t.count('a') == 0:\n        ans.append(2 ** len_s)\n    elif t.count('a') == len_t and len_t == 1:\n        ans.append(1)\n    else:\n        ans.append(-1)\nfor i in range(n):\n    print(ans[i])", "count = int(input())\nfirst = []\nsecond = []\nfor i in range(0, count):\n    first.append(input())\n    second.append(input())\nfor i in range(0, count):\n    if len(second[i]) == 1:\n        if second[i] == 'a':\n            print('1')\n        else:\n            print(2 ** len(first[i]))\n    elif second[i].find('a') == -1:\n        print(2 ** len(first[i]))\n    else:\n        print('-1')", "def fn():\n    a = input()\n    b = input()\n    m = 0\n    for i in b:\n        if i == 'a':\n            m += 1\n    if m != 0 and len(b) > 1:\n        return '-1'\n    if m == 0:\n        return str(2 ** len(a))\n    if b == 'a':\n        return '1'\na = int(input())\nk = []\nfor j in range(a):\n    k.append(fn())\nfor h in k:\n    print(h)", "a = int(input())\nsp = []\nfor i in range(a):\n    b = input()\n    c = input()\n    if b.count('a') == len(b) and c == 'a':\n        sp.append(1)\n    elif 'a' in c:\n        sp.append(-1)\n    else:\n        sp.append(2 ** b.count('a'))\nfor i in sp:\n    print(i)", "import sys\nmsg = sys.stdin.readlines()\nfor i in range(int(msg[0])):\n    p = True\n    lst = msg[2 * i + 1].strip('\\n')\n    lst2 = msg[2 * i + 2].strip('\\n')\n    a = False\n    if len(lst2) > 1:\n        other = True\n    else:\n        other = False\n    for j in lst2:\n        if j == 'a':\n            a = True\n        if a and other:\n            print(-1)\n            p = False\n            break\n    if p:\n        if 'a' in lst2:\n            print(1)\n        else:\n            print(2 ** len(lst))", "for _ in ' ' * int(input()):\n    (a, b) = (input(), input())\n    if 'a' in b:\n        if len(b) == 1:\n            print(1)\n        else:\n            print(-1)\n    else:\n        print(2 ** len(a))", "def solution():\n    (s, t) = (input(), input())\n    if 'a' not in t:\n        return 2 ** len(s)\n    if t == 'a':\n        return 1\n    return -1\nt = int(input())\nfor _ in range(t):\n    print(solution())", "n = int(input())\nfor i in range(n):\n    a = input()\n    b = input()\n    if b == 'a':\n        print(1)\n    elif 'a' in b:\n        print(-1)\n    else:\n        print(2 ** len(a))", "x = input\nfor i in range(int(x())):\n    a = x()\n    b = x()\n    if b == 'a':\n        print(1)\n    elif 'a' in b:\n        print(-1)\n    else:\n        print(2 ** a.count('a'))", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_ls():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef main():\n    for _ in range(int(input())):\n        s = input()\n        t = input()\n        if t == 'a':\n            print(1)\n        elif 'a' in t:\n            print(-1)\n        else:\n            n = len(s)\n            print(1 << n)\nmain()", "x = input\nfor i in range(int(x())):\n    a = x()\n    b = x()\n    if b == 'a':\n        print(1)\n    elif 'a' in b:\n        print(-1)\n    else:\n        print(2 ** a.count('a'))", "for i in range(int(input())):\n    s = input()\n    t = input()\n    if t == 'a':\n        print(1)\n    elif 'a' in t:\n        print(-1)\n    else:\n        print(pow(2, len(s)))", "I = input\nfor _ in [0] * int(I()):\n    print((1 << len(I()), 1 - 2 * ((t := I()) > 'a'))['a' in t])", "I = input\nfor _ in [0] * int(I()):\n    print((1 << len(I()), 1 - 2 * ((t := I()) > 'a'))['a' in t])", "kvs = input\nfor _ in [0] * int(kvs()):\n    print((1 << len(kvs()), 1 - 2 * ((t := kvs()) > 'a'))['a' in t])", "I = input\nfor _ in [0] * int(I()):\n    print((1 << len(I()), 1 - 2 * ((t := I()) > 'a'))['a' in t])", "for _ in range(int(input())):\n    s = input()\n    t = input()\n    if t == 'a':\n        print(1)\n        continue\n    if 'a' in t:\n        print(-1)\n        continue\n    print(2 ** len(s))", "for _ in range(int(input())):\n    s = input()\n    t = input()\n    if 'a' in t:\n        if len(t) > 1:\n            print(-1)\n        else:\n            print(1)\n    else:\n        print(2 ** len(s))", "for _ in range(int(input())):\n    s = input()\n    t = input()\n    if t == 'a':\n        print(1)\n    elif len(t) == 1 or 'a' not in t:\n        print(2 << len(s) - 1)\n    else:\n        print(-1)", "n = int(input())\nfor i in range(n):\n    a = input()\n    b = input()\n    if b == 'a':\n        print('1')\n    elif 'a' in b:\n        print('-1')\n    else:\n        print(2 ** len(a))", "q = int(input())\nfor _ in range(q):\n    s = input()\n    t = input()\n    if 'a' in t and len(t) > 1:\n        print(-1)\n    elif t == 'a':\n        print(1)\n    else:\n        print(2 ** len(s))", "I = input\nfor _ in [0] * int(I()):\n    print((1 << len(I()), 1 - 2 * ((t := I()) > 'a'))['a' in t])", "I = input\nfor _ in [0] * int(I()):\n    print((1 << len(I()), 1 - 2 * ((t := I()) > 'a'))['a' in t])", "I = input\nfor _ in [0] * int(I()):\n    print((1 << len(I()), 1 - 2 * ((t := I()) > 'a'))['a' in t])", "for t in range(int(input())):\n    s = input()\n    s1 = input()\n    c = s1.count('a')\n    if s1 == 'a':\n        print(1)\n        continue\n    if c > 0:\n        print(-1)\n        continue\n    n = len(s)\n    print(2 ** n)", "for _ in range(int(input())):\n    s = input()\n    t = input()\n    if t == 'a':\n        print(1)\n    elif t.count('a') > 0:\n        print(-1)\n    else:\n        print(2 ** len(s))", "for _ in range(int(input())):\n    s = input()\n    t = input()\n    if t == 'a':\n        print(1)\n    elif 'a' in t:\n        print(-1)\n    else:\n        print(2 ** len(s))", "for _ in range(int(input())):\n    s = input()\n    t = input()\n    if 'a' in t:\n        if t == 'a':\n            print(1)\n        else:\n            print(-1)\n        continue\n    print(2 ** len(s))", "def main():\n    t = int(input())\n    for _ in range(t):\n        s = input()\n        k = input()\n        if 'a' in k and (k.count('a') != len(k) or len(k) > 1):\n            print(-1)\n        elif 'a' in k and k.count('a') == len(k):\n            print(1)\n        else:\n            print(2 ** len(s))\nmain()", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    if b == 'a':\n        print(1)\n        continue\n    if 'a' in b:\n        print(-1)\n        continue\n    print(2 ** len(a))", "def _i():\n    return int(input())\n\ndef _f():\n    return float(input())\n\ndef _iln():\n    ln = input().split(' ')\n    return [int(i) for i in ln]\n\ndef _ln():\n    return input().split(' ')\n\ndef solve(tt):\n    s = input()\n    t = input()\n    if t == 'a':\n        print(1)\n        return\n    if 'a' in t:\n        print(-1)\n        return\n    print(2 ** s.count('a'))\nt = _i()\nfor i in range(1, t + 1):\n    solve(i)", "cnt = int(input())\ni = 1\nwhile i <= cnt:\n    s = input()\n    t = input()\n    if t == 'a':\n        print(1)\n    elif 'a' in t:\n        print(-1)\n    else:\n        print(pow(2, len(s)))\n    i += 1", "import math\nt = int(input())\nfor _ in range(t):\n    s = input()\n    t = input()\n    if 'a' in t and t != 'a':\n        print(-1)\n        continue\n    if t == 'a':\n        print(1)\n        continue\n    print(2 ** len(s))", "t = int(input())\nfor i in range(t):\n    a = input()\n    b = input()\n    if 'a' in b and len(b) > 1:\n        print(-1)\n    elif b == 'a':\n        print(1)\n    else:\n        l = len(a)\n        print(2 ** l)", "t = int(input())\nfor i in range(t):\n    s = str(input())\n    t = str(input())\n    x = 0\n    if t == 'a':\n        x = 1\n    elif 'a' in t:\n        x = -1\n    else:\n        x = 2 ** len(s)\n    print(x)", "t = int(input())\nfor i in range(t):\n    a = input()\n    b = input()\n    if len(b) > 1:\n        if b.count('a') > 0:\n            print(-1)\n        else:\n            print(2 ** len(a))\n    elif b == 'a':\n        print(1)\n    else:\n        print(2 ** len(a))", "n = int(input())\nfor i in range(n):\n    s = input()\n    t = input()\n    if len(t) > 1 and 'a' in t:\n        print('-1')\n    else:\n        print(1 if t == 'a' else 2 ** len(s))", "for i in range(int(input())):\n    s = input()\n    t = input()\n    if t == 'a':\n        print(1)\n    elif 'a' in t:\n        print(-1)\n    else:\n        print(2 ** len(s))", "for _ in range(int(input())):\n\n    def fun(s, t):\n        if t == 'a':\n            return 1\n        if 'a' in t:\n            return -1\n        return 2 ** len(s)\n    s = input()\n    t = input()\n    print(fun(s, t))", "def solve_one():\n    first_line = input()\n    second_line = input()\n    second_line_letters = set(second_line)\n    if second_line == 'a':\n        return 1\n    if 'a' in second_line_letters:\n        return -1\n    return 2 ** len(first_line)\n\ndef solve_task():\n    t = int(input())\n    anss = []\n    for _ in range(t):\n        anss.append(solve_one())\n    for ans in anss:\n        print(ans)\nsolve_task()", "n = int(input())\nfor i in range(n):\n    s = input()\n    t = input()\n    if t == 'a':\n        print(1)\n    elif 'a' in t:\n        print(-1)\n    elif not 'a' in t:\n        print(2 ** len(s))", "t = input()\nfor i in range(int(t)):\n    a = input()\n    s = input()\n    cnt = s.count('a')\n    if cnt == 0:\n        print(pow(2, len(a)))\n    elif cnt == 1 and len(s) == 1:\n        print(1)\n    else:\n        print(-1)", "T = int(input())\nfor _ in range(T):\n    s = input()\n    t = input()\n    if t == 'a':\n        print(1)\n    elif 'a' in t:\n        print(-1)\n    else:\n        print(1 << len(s))", "t = int(input())\n\ndef factorial(n):\n    if n < 0:\n        return 0\n    elif n == 0 or n == 1:\n        return 1\n    else:\n        fact = 1\n        while n > 1:\n            fact *= n\n            n -= 1\n        return fact\nfor _ in range(t):\n    s = input()\n    t = input()\n    lns = len(s)\n    if 'a' in t:\n        if len(t) == 1:\n            print('1')\n        else:\n            print('-1')\n    else:\n        print(2 ** lns)", "nq = int(input())\nfor i in range(nq):\n    ms = input()\n    s = input()\n    c = s.count('a')\n    if c > 0 and len(s) != 1:\n        print(-1)\n    elif c > 0:\n        print(1)\n    else:\n        print(2 ** len(ms))", "t = int(input())\nfor _ in range(0, t):\n    s = input()\n    s1 = input()\n    if len(s1) > 1 and 'a' in s1:\n        print(-1)\n    elif len(s1) == 1:\n        if s1 == 'a':\n            print(1)\n        else:\n            print(2 ** len(s))\n    else:\n        print(2 ** len(s))", "t = int(input())\nfor i in range(t):\n    s1 = input()\n    s2 = input()\n    if s2 == 'a':\n        print(1)\n    elif 'a' in s2:\n        print(-1)\n    else:\n        print(2 ** len(s1))", "for _ in range(int(input())):\n    a = input()\n    t = input()\n    if t.count('a') > 0 and len(t) > 1 and (a.count('a') > 0):\n        print(-1)\n    elif t == 'a':\n        print(1)\n    else:\n        print(2 ** a.count('a'))", "def main():\n    o = 0\n    s = input()\n    t = input()\n    if 'a' in t:\n        if len(t) > 1:\n            return -1\n        else:\n            return 1\n    return int(2 ** len(s))\n    return o\nt = int(input())\nfor _ in range(t):\n    print(main())", "tc = int(input())\nfor case in range(tc):\n    s = input()\n    t = input()\n    sa = len(s)\n    if t == 'a':\n        print(1)\n    elif 'a' in t:\n        print(-1)\n    else:\n        print(1 << len(s))", "for _ in range(int(input())):\n    s = input()\n    t = input()\n    if t == 'a':\n        print('1')\n        continue\n    if 'a' in t:\n        print('-1')\n        continue\n    print(2 ** len(s))", "for T in range(int(input())):\n    s = input()\n    t = input()\n    if 'a' in t:\n        if len(t) == 1:\n            print(1)\n        else:\n            print(-1)\n    else:\n        print(2 ** len(s))", "for _ in range(int(input())):\n    s = input()\n    t = input()\n    ans = 0\n    if t == 'a':\n        ans = 1\n    elif len(t) > 1 and 'a' in t:\n        ans = -1\n    else:\n        ans = 2 ** s.count('a')\n    print(ans)", "I = input\nfor _ in [0] * int(I()):\n    s = I()\n    t = I()\n    print((1 << len(s), (1, -1)[t > 'a'])['a' in t])", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    if b == 'a':\n        print('1')\n    elif 'a' in b:\n        print('-1')\n    else:\n        print(pow(2, len(a)))", "t = int(input())\nwhile t:\n    t -= 1\n    s = input()\n    x = input()\n    if x == 'a':\n        print(1)\n    elif 'a' in x:\n        print(-1)\n    else:\n        print(2 ** len(s))", "def main():\n    test = int(input())\n    for LOVE in range(test):\n        s = input()\n        t = input()\n        n = len(s)\n        if 'a' in t:\n            if len(t) == 1:\n                print(1)\n            else:\n                print(-1)\n        else:\n            print(1 << n)\nmain()", "for _ in range(int(input())):\n    s = input()\n    t = input()\n    if t == 'a':\n        print('1')\n        continue\n    if 'a' in t:\n        print('-1')\n        continue\n    print(2 ** len(s))", "t = int(input())\nfor _ in range(t):\n    s = input()\n    s2 = input()\n    if s2 == 'a':\n        print(1)\n    elif 'a' in s2:\n        print(-1)\n    else:\n        print(2 ** s.count('a'))", "for i in range(int(input())):\n    s = input()\n    t = input()\n    if t == 'a':\n        print(1)\n    elif t.count('a') != 0:\n        print(-1)\n    else:\n        print(2 ** len(s))"]