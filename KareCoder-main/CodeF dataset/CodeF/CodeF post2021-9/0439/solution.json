["from collections import *\nfor s in [*open(0)][2::2]:\n    a = Counter(s.split()).values()\n    print(sum((min(2, x) for x in a)) + (1 in a) >> 1)", "import sys\nfrom collections import Counter\ninput = sys.stdin.readline\n\ndef beauty(numbers, n):\n    if n == 1:\n        return 1\n    counter = Counter(numbers)\n    keys = counter.keys()\n    singletons = 1\n    manys = 0\n    for key in keys:\n        if counter[key] == 1:\n            singletons += 1\n        else:\n            manys += 1\n    return manys + singletons // 2\nt = int(input())\nresult = ''\nfor i in range(t):\n    n = int(input())\n    numbers = list(map(int, input().split()))\n    result += str(beauty(numbers, n))\n    if i < t - 1:\n        result += '\\n'\nprint(result)", "from collections import *\nfor s in [*open(0)][2::2]:\n    c = Counter(s.split())\n    print(sum((min(2, c[x]) for x in c)) + 1 >> 1)", "from collections import *\nfor s in [*open(0)][2::2]:\n    c = Counter(s.split())\n    print(sum((min(2, c[x]) for x in c)) + 1 >> 1)", "from collections import *\nfor s in [*open(0)][2::2]:\n    c = Counter(s.split())\n    print(sum((min(2, c[x]) for x in c)) + 1 >> 1)", "from collections import *\nfor s in [*open(0)][2::2]:\n    c = Counter(s.split())\n    print(sum((min(2, c[x]) for x in c)) + 1 >> 1)", "from collections import *\nfor s in [*open(0)][2::2]:\n    c = Counter(s.split())\n    print(sum((min(2, c[x]) for x in c)) + 1 >> 1)", "from collections import *\nfor s in [*open(0)][2::2]:\n    c = Counter(s.split())\n    print(sum((min(2, c[x]) for x in c)) + 1 >> 1)", "from collections import *\nfor s in [*open(0)][2::2]:\n    c = Counter(s.split())\n    print(sum((min(2, c[x]) for x in c)) + 1 >> 1)", "from collections import *\nfor s in [*open(0)][2::2]:\n    c = Counter(s.split())\n    print(sum((min(2, c[x]) for x in c)) + 1 >> 1)", "from collections import *\nfor s in [*open(0)][2::2]:\n    c = Counter(s.split())\n    print(sum((min(2, c[x]) for x in c)) + 1 >> 1)", "import sys\n\ndef mingidit(i):\n    digits = list(str(i))\n    if len(digits) == 2:\n        return int(digits[-1])\n    return int(min(digits))\n\ndef ZXC(a, b, c):\n    return [a + b + c, c + b, c]\nfrom collections import Counter\n\ndef LIS(li):\n    c = Counter(li)\n    cl = c.values()\n    m = len([x for x in cl if x > 1])\n    s = len(cl) - m\n    if s % 2 == 0:\n        return m + int(s / 2)\n    else:\n        return m + int(s / 2) + 1\nr = int(sys.stdin.readline())\nfor j in range(r):\n    kk = sys.stdin.readline()\n    li = [int(x) for x in sys.stdin.readline().split()]\n    print(LIS(li))", "def main():\n    t = int(input())\n    while t:\n        n = int(input())\n        arr = [int(x) for x in input().split()]\n        arrMap = {}\n        for i in arr:\n            if i in arrMap.keys():\n                arrMap[i] += 1\n            else:\n                arrMap[i] = 1\n        doubles = 0\n        singles = 0\n        for i in arrMap.keys():\n            if arrMap[i] > 1:\n                doubles += 1\n            else:\n                singles += 1\n        if singles % 2 == 0:\n            print(doubles + singles // 2)\n        else:\n            print(doubles + singles // 2 + 1)\n        t -= 1\n    return 0\nmain()", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    n = int(inp())\n    c1 = 0\n    c2 = 0\n    d = dict()\n    for i in map(int, inp().split()):\n        v = d.get(i, 0)\n        if v == 1:\n            c1 -= 1\n            c2 += 1\n        elif v == 0:\n            c1 += 1\n        d[i] = v + 1\n    r = 0\n    if c1 > 0:\n        c1 -= 1\n        r += 1\n    elif c2 > 0:\n        c2 -= 1\n        r += 1\n    r += c2 + c1 // 2\n    print(r)\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "import math\nn = int(input())\nfor k in range(n):\n    nk = int(input())\n    arr = list(map(int, input().split()))\n    if len(arr) == 1:\n        print(1)\n        continue\n    nums = {}\n    nums2 = {}\n    lis1 = 0\n    lis2 = 0\n    for el in arr:\n        if el not in nums:\n            nums[el] = 1\n            lis1 += 1\n        elif el not in nums2:\n            nums2[el] = 1\n            lis2 += 1\n    ans = math.ceil((lis1 + lis2) / 2)\n    print(ans)", "from collections import Counter\n\ndef main():\n    tc = int(input())\n    for _ in range(tc):\n        n = int(input())\n        arr = [int(a) for a in input().split()]\n        cntr = Counter(arr)\n        (cnt1, cnt2) = (0, 0)\n        for val in cntr.values():\n            if val >= 2:\n                cnt1 += 1\n            else:\n                cnt2 += 1\n        print(cnt1 + (cnt2 + 1) // 2)\nmain()", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    cnt = {}\n    for i in range(n):\n        if arr[i] not in cnt:\n            cnt[arr[i]] = 0\n        cnt[arr[i]] += 1\n    single = ans = 0\n    for key in cnt:\n        if cnt[key] >= 2:\n            ans += 1\n        else:\n            single += 1\n    return ans + (single + 1) // 2\nfor _ in range(int(input())):\n    print(solve())", "import sys\nimport collections\nfrom math import ceil, gcd, sqrt, log\nimport bisect\nINF = float('inf')\nmod = 1000000007\n\ndef solve():\n    n = int(input())\n    A = list(map(int, input().split()))\n    if n == 1:\n        print(1)\n        return\n    net = collections.Counter(A)\n    (one, two) = (0, 0)\n    for i in net.values():\n        if i > 1:\n            two += 1\n        else:\n            one += 1\n    ans = two + ceil(one / 2)\n    print(ans)\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "def resii():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = {}\n    for a_i in a:\n        m[a_i] = m.get(a_i, 0) + 1\n    iz = 0\n    for v in m.values():\n        iz += min(2, v)\n    print((iz + 1) // 2)\nfor _ in range(int(input())):\n    resii()", "inputs = []\nimport math\nfor i in range(int(input())):\n    input()\n    inputs.append(list(map(int, input().split(' '))))\nfor inp in inputs:\n    counts = {}\n    for x in inp:\n        if x in counts:\n            counts[x] += 1\n        else:\n            counts[x] = 1\n    sum_ = 0\n    for val in counts.values():\n        sum_ += val if val <= 2 else 2\n    print(math.ceil(sum_ / 2))", "from collections import Counter\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    cnt = Counter(l)\n    d = dict(cnt)\n    a = 0\n    b = 0\n    for (k, v) in d.items():\n        if v == 1:\n            b += 1\n        else:\n            a += 1\n    print(a + (b + 1) // 2)", "for i in range(int(input())):\n    n = input()\n    d = {}\n    for j in list(map(int, input().split())):\n        d[j] = d.get(j, 0) + 1\n    ans = 1\n    for j in d:\n        ans += min(2, d[j])\n    print(ans // 2)", "from collections import defaultdict\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = defaultdict(int)\n    for i in range(n):\n        m[a[i]] += 1\n    (s, d) = (0, 0)\n    for v in m.values():\n        if v == 1:\n            s += 1\n        if v > 1:\n            d += 1\n    print(d + (s + 1) // 2)\nt = int(input())\nfor _ in range(t):\n    solve()", "from collections import Counter\n\ndef main():\n    n = int(input())\n    for _ in range(n):\n        input()\n        s = input()\n        print(solve(s))\n\ndef solve(s):\n    counter = Counter((int(num_str) for num_str in s.split()))\n    two_or_more = 0\n    single = 0\n    for (num, count) in counter.items():\n        if count >= 2:\n            two_or_more += 1\n        else:\n            single += 1\n    return two_or_more + (single - single // 2)\nmain()", "times = int(input())\nfor time in range(times):\n    n = int(input())\n    nums = map(int, input().split())\n    ones = set()\n    twos = set()\n    for j in nums:\n        if j in twos:\n            continue\n        if j in ones:\n            twos.add(j)\n            continue\n        ones.add(j)\n    out = len(ones) + len(twos)\n    if len(twos) < len(ones):\n        out += 1\n    print(out // 2)", "import sys\ninput = lambda : sys.stdin.readline().strip()\nfor Homu in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    counts = {}\n    for x in l:\n        if x in counts:\n            counts[x] += 1\n        else:\n            counts[x] = 1\n    solo = 0\n    dupe = 0\n    for i in counts:\n        if counts[i] == 1:\n            solo += 1\n        else:\n            dupe += 1\n    if solo > 0:\n        solo -= 1\n        dupe += 1\n    ans = solo // 2 + dupe\n    print(ans)", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for i in a:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    nonrep = 0\n    rep = 0\n    for k in d:\n        if d[k] > 1:\n            rep += 1\n        else:\n            nonrep += 1\n    ans = math.ceil(nonrep / 2) + rep\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    counts = {}\n    for i in arr:\n        if i in counts:\n            counts[i] += 1\n        else:\n            counts[i] = 1\n    count = 0\n    for i in counts:\n        count += min(2, counts[i])\n    if count % 2 == 1:\n        print((count + 1) // 2)\n    else:\n        print(count // 2)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().strip().split()]\n    d = {}\n    for x in a:\n        d[x] = d.get(x, 0) + 1\n    count = 0\n    for v in d.values():\n        if v > 1:\n            count += 1\n    n = len(d)\n    if n == count:\n        print(n)\n    else:\n        count += 1\n        print(count + (n - count) // 2)", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    (n,) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = defaultdict(int)\n    for i in a:\n        c[i] += 1\n    s = 0\n    m = 0\n    for i in c:\n        if c[i] == 1:\n            s += 1\n        elif c[i] > 1:\n            m += 1\n    ans = 0\n    if s % 2 != 0:\n        ans += 1\n        s -= 1\n    ans += m + s // 2\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dict = {}\n    for i in range(n):\n        if a[i] in dict:\n            dict[a[i]] += 1\n        else:\n            dict[a[i]] = 1\n    count = 0\n    for i in dict:\n        if dict[i] >= 2:\n            count += dict[i] - 2\n    p = n - count\n    print(p // 2 + p % 2)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    kekw = {}\n    ans = 0\n    ans2 = 0\n    for i in a:\n        try:\n            kekw[i] += 1\n        except:\n            kekw[i] = 1\n    for i in kekw:\n        if kekw[i] == 1:\n            ans2 += 1\n    ans = (ans2 + 1) // 2 + (len(kekw) - ans2)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    freq = {}\n    for i in range(n):\n        if arr[i] in freq:\n            freq[arr[i]] += 1\n        else:\n            freq[arr[i]] = 1\n    (t, s) = (0, 0)\n    for (key, value) in freq.items():\n        if value >= 2:\n            t += 1\n        else:\n            s += 1\n    print(t + (s + 1) // 2)", "import sys\nfrom collections import Counter\nfrom math import ceil\nsys.setrecursionlimit(10 ** 5)\n\ndef pro(arr):\n    n = len(arr)\n    dic = {}\n    for i in range(n):\n        dic[arr[i]] = dic.get(arr[i], 0) + 1\n    (a, b) = (0, 0)\n    for (i, j) in dic.items():\n        if j >= 2:\n            b += 1\n        else:\n            a += 1\n    print(b + ceil(a / 2))\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    pro(arr)", "from math import ceil\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    m = {}\n    for e in a:\n        if e not in m:\n            m[e] = 1\n        else:\n            m[e] += 1\n    dbl = 0\n    sgl = 0\n    for e in m:\n        if m[e] >= 2:\n            dbl += 1\n        else:\n            sgl += 1\n    print(dbl + ceil(sgl / 2))", "from collections import Counter\nt = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    count = 0\n    ans = 0\n    h = Counter(a)\n    for i in h:\n        if h[i] >= 2:\n            ans += 1\n        else:\n            count += 1\n    if count > 0:\n        ans += 1\n        count -= 1\n    ans += count // 2\n    print(ans)\n    t -= 1", "from collections import Counter\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    c = Counter(a)\n    s = 0\n    l1 = len(c)\n    for i in c:\n        if c[i] > 1:\n            s += 1\n    if s != l1:\n        s += 1\n    l2 = s + (l1 - s) // 2\n    print(l2)\nfor _ in range(int(input())):\n    solve()", "from collections import Counter\nn = int(input())\n\ndef lis_lds(arr):\n    cnt = 0\n    f1 = 0\n    arr_counter = Counter(arr)\n    for item in arr_counter:\n        if arr_counter[item] >= 2:\n            cnt += 1\n        else:\n            f1 += 1\n    print(cnt + (f1 + 1) // 2)\nfor _ in range(n):\n    l = int(input())\n    lis_lds([*map(int, input().split())])", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    di = {}\n    z = 0\n    for x in l:\n        if x not in di:\n            di[x] = 1\n        else:\n            di[x] += 1\n    for x in di:\n        if di[x] >= 2:\n            z += 2\n        else:\n            z += 1\n    print((z + 1) // 2)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    h = {}\n    ans = 0\n    for x in l:\n        if x not in h:\n            h[x] = 1\n        else:\n            h[x] += 1\n    for x in h:\n        if h[x] >= 2:\n            ans += 2\n        else:\n            ans += 1\n    print((ans + 1) // 2)", "t = int(input())\nfor ii in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in l:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    c1 = 0\n    c2 = 0\n    for i in d.values():\n        if i > 1:\n            c1 += 1\n        else:\n            c2 += 1\n    ans = int(c2 / 2) + c2 % 2\n    print(ans + c1)", "from math import ceil\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    m = {}\n    for e in a:\n        if e not in m:\n            m[e] = 1\n        else:\n            m[e] += 1\n    dbl = 0\n    sgl = []\n    for e in m:\n        if m[e] >= 2:\n            dbl += 1\n        else:\n            sgl.append(e)\n    print(dbl + ceil(len(sgl) / 2))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    flag = True\n    d = {}\n    for i in arr:\n        if i in d.keys():\n            d[i] += 1\n        else:\n            d[i] = 1\n    count = 0\n    for i in d.keys():\n        if d[i] == 1:\n            if flag:\n                count += 1\n                flag = False\n            else:\n                flag = True\n        if d[i] >= 2:\n            count += 1\n    print(count)", "from functools import lru_cache\nfrom copy import deepcopy\nimport math\nimport sys\nMOD = 1000000007\nNO = lambda : print('NO')\nYES = lambda : print('YES')\n_1 = lambda : print(-1)\nari = lambda : [int(_) for _ in input().split()]\ncin = lambda : int(input())\ncis = lambda : input()\nshow = lambda x: print(x)\ntest_case = 1\ntest_case = int(input())\n\ndef ans():\n    n = cin()\n    arr = ari()\n    lst = set(arr)\n    x = len(lst)\n    best = math.ceil(x / 2)\n    dito = {}\n    for i in arr:\n        if i not in dito:\n            dito[i] = 1\n        else:\n            dito[i] += 1\n    bestcount = 0\n    cola = 0\n    mac = max(arr)\n    for (k, v) in dito.items():\n        if v > 1:\n            cola += 1\n        else:\n            bestcount += 1\n    local = min(x, bestcount)\n    return cola + (bestcount + 1) // 2\nfor _ in range(test_case):\n    print(ans())", "for i in range(int(input())):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    dict = {}\n    for j in ls:\n        dict[j] = dict.get(j, 0) + 1\n    cnt = 0\n    for j in dict.values():\n        cnt += min(2, j)\n    print((cnt + 1) // 2)", "t = int(input())\nwhile t:\n    n = int(input())\n    l = list(map(int, input().split()))\n    dic = {}\n    c = 0\n    r = n\n    for i in range(n):\n        if l[i] in dic:\n            dic[l[i]] += 1\n        else:\n            dic[l[i]] = 1\n    for key in dic.keys():\n        if dic[key] > 1:\n            r -= dic[key]\n            c += 1\n    if r % 2 == 1:\n        print(c + (r + 1) // 2)\n    else:\n        print(c + r // 2)\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = {}\n    for a_i in a:\n        m[a_i] = m.get(a_i, 0) + 1\n    z = 1\n    for v in m.values():\n        z += min(2, v)\n    print(z // 2)", "def main():\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for a in l:\n        d.setdefault(a, 0)\n        d[a] += 1\n    u = 0\n    for a in d:\n        u += min(d[a], 2)\n    return (u + 1) // 2\nt = int(input())\nfor _ in range(t):\n    print(main())", "import collections\nimport math\nfor i in range(int(input())):\n    n = n = int(input())\n    l = list(map(int, input().split()))\n    l2 = set(l)\n    n2 = len(l2)\n    tot = 0\n    tot2 = 0\n    if n2 > 1:\n        dic = collections.Counter(l)\n        for h in dic:\n            if dic[h] > 1:\n                tot2 += 1\n            elif dic[h] == 1:\n                tot += 1\n        print(tot2 + math.ceil(tot / 2))\n    else:\n        print(1)", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    d = defaultdict(int)\n    arr = [int(x) for x in input().split()]\n    mx = max(arr)\n    for i in arr:\n        d[i] += 1\n    (one, two) = (0, 0)\n    for (key, value) in d.items():\n        if value == 1:\n            one += 1\n        else:\n            two += 1\n    ans = two\n    if one & 1:\n        one += 1\n    ans += one >> 1\n    print(ans)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    t = [int(x) for x in input().split()]\n    x = Counter(t)\n    for g in x.keys():\n        n -= max(0, x[g] - 2)\n    print((n + 1) // 2)", "class Solution:\n\n    def solve(self, n, a):\n        if n == 1:\n            return 1\n        nums = {}\n        for i in a:\n            if i in nums.keys():\n                nums[i] += 1\n            else:\n                nums[i] = 1\n        single = 0\n        double = 0\n        for num in nums.keys():\n            if nums[num] >= 2:\n                double += 1\n            else:\n                single += 1\n        result = double\n        if single // 2 == single / 2:\n            result += single // 2\n        else:\n            result += single // 2 + 1\n        return result\nT = int(input())\nwhile T:\n    T -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(Solution().solve(n, a))", "import collections\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = collections.Counter(a)\n    ans1 = ans2 = 0\n    for i in d.keys():\n        if d[i] > 1:\n            ans1 += 1\n        else:\n            ans2 += 1\n    print(ans1 + (ans2 + 1) // 2)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    dic = {}\n    for j in lst:\n        dic[j] = 0\n    for j in lst:\n        dic[j] += 1\n    c = 0\n    for j in dic.keys():\n        if dic[j] == 1:\n            c += 1\n    ans = 0\n    l = 0\n    for j in dic.keys():\n        if dic[j] > 1:\n            l += 1\n    if c % 2 == 0:\n        ans += c // 2\n    else:\n        ans += c // 2 + 1\n    ans += l\n    print(ans)", "import sys\nfrom collections import deque, Counter\ninput = lambda : sys.stdin.readline().strip()\nintput = lambda : map(int, input().split())\n\ndef solve():\n    (N,) = intput()\n    A = [*intput()]\n    cnt = Counter(A)\n    c = sorted(cnt)\n    L = R = 0\n    for x in c:\n        if cnt[x] == 1:\n            (L := (L + 1)) if L < R else (R := (R + 1))\n        else:\n            (L, R) = (L + 1, R + 1)\n    if L < R:\n        L += 1\n    return min(L, R)\n(T,) = intput()\nfor _ in range(T):\n    print(solve())", "c = int(input())\nfor i in range(c):\n    sc = int(input())\n    s = input().split()\n    s.sort()\n    res = sc\n    for i in range(2, sc, 1):\n        if s[i] == s[i - 1] and s[i] == s[i - 2]:\n            res -= 1\n    if res % 2 == 0:\n        print(int(res / 2))\n    else:\n        print(int(res / 2) + 1)", "t = int(input())\nwhile t:\n    n = int(input())\n    A = [int(i) for i in input().split()]\n    d = dict()\n    for i in range(n):\n        d[A[i]] = d.get(A[i], 0) + 1\n    res = 0\n    for i in d:\n        if d[i] > 2:\n            res += 2\n        else:\n            res += d[i]\n    print((res + 1) // 2)\n    t -= 1", "t = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    b = {}\n    for ele in a:\n        if ele in b:\n            b[ele] += 1\n        else:\n            b[ele] = 1\n    count = num = 0\n    for ele in b.values():\n        if ele >= 2:\n            count += 1\n        else:\n            num += 1\n    if num % 2 == 0:\n        print(num // 2 + count)\n    else:\n        print(num // 2 + 1 + count)", "from math import ceil\nfrom sys import stdin\ninput = stdin.readline\nfrom collections import Counter\n\ndef f(a):\n    one = set()\n    two = set()\n    if len(a) == 1:\n        return 1\n    cnt = Counter(a)\n    for i in cnt:\n        if cnt[i]:\n            cnt[i] -= 1\n            one.add(i)\n        if cnt[i]:\n            two.add(i)\n    return ceil((len(one) + len(two)) / 2)\nfor _ in range(int(input())):\n    n = input()\n    a = [*map(int, input().strip().split())]\n    print(f(a))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    cnt = 1\n    for i in range(n):\n        if i < 2 or a[i] != a[i - 2]:\n            cnt += 1\n    print(cnt // 2)", "def beautyOfArray(arr, n):\n    mylist = sorted(arr)\n    count = 1\n    for i in range(n):\n        if i < 2 or mylist[i] != mylist[i - 2]:\n            count = count + 1\n    return count // 2\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    beauty = beautyOfArray(arr, n)\n    print(beauty)\n    t = t - 1", "from posixpath import split\nfor t in range(int(input())):\n    n = int(input())\n    L = list(map(int, input().split()))\n    c = 0\n    dic = {}\n    for i in L:\n        try:\n            dic[i] += 1\n            dic[i] = 2\n        except:\n            dic[i] = 1\n    for (i, j) in dic.items():\n        c += j\n    print((c + 1) // 2)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    from collections import Counter\n    arr = Counter(arr)\n    two = sum((1 for (k, v) in arr.items() if v > 1))\n    one = len(arr) - two\n    res = two + (1 if one else 0) + ((one - 1) // 2 if one else 0)\n    print(res)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    arr = sorted(list(map(int, input().split())))\n    (f, b, bb) = ([], [], set())\n    for i in range(n):\n        if not f:\n            f.append(arr[i])\n        elif not b:\n            b.append(arr[i])\n            bb.add(arr[i])\n        elif len(f) == len(b):\n            if f[-1] < arr[i]:\n                f.append(arr[i])\n        elif b[-1] < arr[i]:\n            b.append(arr[i])\n    return max(len(f), len(b))\nfor _ in range(int(input())):\n    print(solve())", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    from collections import Counter\n    c = Counter(a)\n    t = 0\n    s = 0\n    for i in c:\n        if c[i] >= 2:\n            t += 1\n        else:\n            s += 1\n    if s // 2 == s / 2:\n        print(t + s // 2)\n    else:\n        print(t + s // 2 + 1)", "from collections import Counter\n\ndef solve():\n    n = int(input())\n    a = sorted(map(int, input().split()))\n    c = Counter(a)\n    l1 = len(c)\n    s = sum((c[i] > 1 for i in c))\n    if s != l1:\n        s += 1\n    l2 = s + (l1 - s) // 2\n    print(l2)\nfor _ in range(int(input())):\n    solve()", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    print(sum((x >= 2 for x in c.values())) + sum((x == 1 for x in c.values())) // 2 + sum((x == 1 for x in c.values())) % 2)", "x = int(input())\nfor i in range(x):\n    n = input()\n    d = {}\n    for j in list(map(int, input().split())):\n        d[j] = d.get(j, 0) + 1\n    ans = 1\n    for j in d:\n        ans += min(2, d[j])\n    print(ans // 2)", "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    i = 0\n    (ans, d) = (0, 0)\n    e = False\n    while i < n:\n        s = i\n        x = 0\n        while i < n and a[i] == a[s]:\n            i += 1\n            x += 1\n        if x >= 2:\n            ans += 1\n        else:\n            e = True\n            if d != 0:\n                d = 0\n            else:\n                d += 1\n                ans += 1\n    if e:\n        print(ans)\n    else:\n        print(ans - d)\nfor _ in range(int(input())):\n    main()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(sorted(map(int, input().split())))\n    cnt = dict()\n    for i in range(n):\n        if a[i] not in cnt:\n            cnt[a[i]] = 1\n        else:\n            cnt[a[i]] += 1\n    s = 0\n    t = 0\n    for u in cnt:\n        if cnt[u] >= 2:\n            t += 1\n        else:\n            s += 1\n    print(t + (s + 1) // 2)", "import math\nfor i in range(int(input())):\n    n = int(input())\n    A = [int(k) for k in input().split()]\n    a = set(A)\n    if n == 1:\n        print(1)\n    elif len(a) == n:\n        if n % 2 == 1:\n            print(n // 2 + 1)\n        else:\n            print(n // 2)\n    else:\n        d = dict()\n        for j in range(n):\n            if A[j] not in d:\n                d[A[j]] = 1\n            else:\n                d[A[j]] += 1\n        m = []\n        o = []\n        for k in d:\n            if d[k] > 1:\n                m.append(k)\n            else:\n                o.append(k)\n        if len(o) % 2 == 0:\n            print(len(m) + len(o) // 2)\n        else:\n            print(len(m) + len(o) // 2 + 1)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if s[i] not in d:\n            d[s[i]] = 0\n        d[s[i]] += 1\n    (p, q) = (0, 0)\n    for i in d.keys():\n        if d[i] == 1:\n            p += 1\n        else:\n            q += 1\n    print(math.ceil(q + p / 2))", "i = input()\nfor a in range(0, int(i)):\n    input()\n    arr = [int(x) for x in input().split()]\n    arr.sort()\n    total = 0\n    size = 1\n    e = arr[0]\n    for n in arr[1:]:\n        if n == e:\n            size += 1\n        else:\n            total += min(2, size)\n            e = n\n            size = 1\n    total += min(2, size)\n    r = int(total // 2) + total % 2\n    print(r)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    d = {}\n    for i in range(n):\n        if l[i] not in d:\n            d[l[i]] = 1\n        else:\n            d[l[i]] += 1\n    c = 0\n    ans = 0\n    for i in d:\n        if d[i] > 1:\n            ans += 1\n        else:\n            c += 1\n    print(ans + math.ceil(c / 2))", "from math import ceil\nT = int(input())\nfor t in range(T):\n    n = int(input())\n    s = list(map(int, input().split()))\n    dd = {x: 0 for x in set(s)}\n    drl = 0\n    for x in s:\n        dd[x] += 1\n        if dd[x] <= 2:\n            drl += 1\n    print(ceil(drl / 2))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l = sorted(l)\n    if n == 1:\n        print(1)\n    else:\n        d = {}\n        for i in l:\n            if i in d:\n                d[i] += 1\n            else:\n                d[i] = 1\n        ans = 0\n        ones = 0\n        for i in d:\n            if d[i] > 1:\n                ans += 1\n            else:\n                ones += 1\n        if ones % 2 == 0:\n            ans += ones // 2\n            print(ans)\n        else:\n            ans += ones // 2 + 1\n            print(ans)", "def lis(our_list):\n    our_dict = {}\n    B = []\n    for el in our_list:\n        if el in our_dict:\n            our_dict[el] += 1\n        else:\n            our_dict[el] = 1\n            B.append(el)\n    B.sort(key=lambda x: our_dict[x])\n    counter1 = 1\n    for i in range(1, len(B)):\n        x = B[i]\n        if our_dict[x] == 1:\n            counter1 += 0.5\n        else:\n            counter1 += 1\n    return int(counter1 * 2 // 2)\nt = int(input())\nfor i in range(t):\n    n = input()\n    print(lis(list(map(int, input().split()))))", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = set(arr)\n    d = {}\n    for x in s:\n        d[x] = 0\n    for x in arr:\n        d[x] += 1\n    mele = max(arr)\n    ne = 0\n    for (k, v) in d.items():\n        if k != mele:\n            ne += min(v, 2)\n    if d[mele] == 1:\n        print(ne // 2 + 1)\n    else:\n        print(math.ceil(ne / 2) + 1)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    (f, b) = ([], [])\n    bb = set()\n    for i in range(n):\n        if not f:\n            f.append(arr[i])\n        elif not b:\n            b.append(arr[i])\n            bb.add(arr[i])\n        elif len(f) == len(b):\n            if f[-1] < arr[i]:\n                f.append(arr[i])\n        elif len(f) > len(b):\n            if b[-1] < arr[i]:\n                b.append(arr[i])\n    if len(f) == len(b):\n        return len(f)\n    elif not b:\n        return len(f)\n    else:\n        for num in f:\n            if num not in bb:\n                return len(f)\n        else:\n            return len(b)\nfor _ in range(int(input())):\n    print(solve())", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    arr = sorted(list(map(int, input().split())))\n    (f, b, bb) = ([], [], set())\n    for i in range(n):\n        if not f:\n            f.append(arr[i])\n        elif not b:\n            b.append(arr[i])\n            bb.add(arr[i])\n        elif len(f) == len(b):\n            if f[-1] < arr[i]:\n                f.append(arr[i])\n        elif b[-1] < arr[i]:\n            b.append(arr[i])\n    return len(f) if any([num not in bb for num in f]) else len(b)\nfor _ in range(int(input())):\n    print(solve())", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    arr = sorted(list(map(int, input().split())))\n    (f, b) = ([], [])\n    for i in range(n):\n        if not f:\n            f.append(arr[i])\n        elif not b:\n            b.append(arr[i])\n        elif len(f) == len(b):\n            if f[-1] < arr[i]:\n                f.append(arr[i])\n        elif b[-1] < arr[i]:\n            b.append(arr[i])\n    return max(len(f), len(b))\nfor _ in range(int(input())):\n    print(solve())", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    s = list(map(int, input().split()))\n    m = dict()\n    for i in range(n):\n        if s[i] not in m:\n            m[s[i]] = 0\n        m[s[i]] += 1\n    ans = 0\n    c2 = 0\n    c1 = 0\n    for x in m:\n        if m[x] >= 2:\n            c2 += 1\n        elif m[x] == 1:\n            c1 += 1\n    print((c1 + 1) // 2 + c2)", "import math\nimport bisect\n\ndef printf(str):\n    print(str, end=' ')\ntest_case = int(input())\nt = 0\nwhile t < test_case:\n    t += 1\n    input()\n    arr = [int(x) for x in input().split()]\n    arr.sort()\n    total = 0\n    size = 1\n    e = arr[0]\n    for n in arr[1:]:\n        if n == e:\n            size += 1\n        else:\n            total += min(2, size)\n            e = n\n            size = 1\n    total += min(2, size)\n    r = int(total // 2) + total % 2\n    print(r)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (N, A) = (int(input()), list(map(int, input().split())))\n    A.sort()\n    X = {}\n    for i in A:\n        X[i] = X.get(i, 0) + 1\n    X = list(X.values())\n    ans = 0\n    flag = 1\n    for i in X:\n        if i > 2:\n            ans += 2\n            flag = 1\n        else:\n            ans += i\n    print((ans + 1) // 2)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 1\n    a.sort()\n    for j in range(n):\n        if j < 2 or a[j] != a[j - 2]:\n            c += 1\n    print(c // 2)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    if n == 1:\n        print(1)\n    else:\n        arr = sorted(arr)\n        itr1 = [arr[i] for i in range(0, n, 2)]\n        itr2 = [arr[i] for i in range(1, n, 2)]\n        x1 = len(set(itr1))\n        x2 = len(set(itr2))\n        print((x1 + x2 + 1) // 2)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = Counter(a)\n    s = sorted(d)\n    count = 0\n    for i in s:\n        if d[i] >= 2:\n            count += 1\n        else:\n            count += 1 / 2\n    if count > int(count):\n        count = 1 + int(count)\n    else:\n        count = int(count)\n    print(count)", "import math\nfrom collections import Counter\nfor i in range(int(input())):\n    lenn = int(input())\n    list1 = list(map(int, input().split()))\n    if lenn == 1:\n        print(1)\n    else:\n        list1.sort()\n        d = dict(Counter(list1))\n        imp = list(d.values())\n        ans = 0\n        for i in imp:\n            ans += min(2, i)\n        print(math.ceil(ans / 2))", "inputs = []\nfor i in range(int(input())):\n    input()\n    inputs.append(list(map(int, input().split(' '))))\nfor inp in inputs:\n    list_ = list(sorted(inp))\n    list1 = [list_[0]]\n    count = 0\n    for i in range(1, len(list_)):\n        a = list_[i]\n        if a == list_[i - 1] and count < 1:\n            count += 1\n            list1.append(a)\n        elif a != list_[i - 1]:\n            list1.append(a)\n            count = 0\n    if len(list1) % 2 == 0:\n        print(len(list1) // 2)\n    else:\n        print((len(list1) + 1) // 2)", "import collections\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    a = input().split()\n    d = collections.defaultdict(int)\n    for i in range(n):\n        a[i] = int(a[i])\n        d[a[i]] += 1\n    ex = 0\n    for i in range(n):\n        if d[a[i]] > 2:\n            ex += d[a[i]] - 2\n            d[a[i]] = 0\n    l = n - ex\n    print(l // 2 + l % 2)\n    t -= 1", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = defaultdict(int)\n    m = 0\n    for i in a:\n        d[i] += 1\n        m = max(m, i)\n    x = y = 0\n    p = 1\n    for i in d:\n        if d[i] == 1 and p:\n            x += 1\n            y += 1\n            p = 0\n        elif d[i] == 1:\n            if x < y:\n                x += 1\n            else:\n                y += 1\n        else:\n            x += 1\n            y += 1\n    print(min(x, y))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ind = [1]\n    for j in range(1, len(a)):\n        if a[j] == a[j - 1] and ind[len(ind) - 1] == 1:\n            ind[len(ind) - 1] += 1\n        elif a[j] != a[j - 1]:\n            ind.append(1)\n    c2 = 0\n    c1 = 0\n    for j in range(len(ind)):\n        if ind[j] == 2:\n            c2 += 1\n        else:\n            c1 += 1\n    print(c2 + c1 // 2 + c1 % 2)", "T = int(input())\nfor t in range(T):\n    length = int(input())\n    arr = [int(x) for x in input().split()]\n    arr.sort()\n    i = 0\n    ans = length\n    while i < length:\n        nxt = i\n        cnt = 0\n        while nxt < length and arr[nxt] == arr[i]:\n            cnt += 1\n            nxt += 1\n        if cnt >= 3:\n            ans -= cnt - 2\n        i = nxt\n    print(int((ans + 1) / 2))", "from collections import Counter\nn = int(input())\nfor _ in range(n):\n    count = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    d = Counter(a)\n    up = []\n    down = []\n    flag = 0\n    max_ = max(a)\n    for i in d.keys():\n        if d[i] >= 2:\n            up.append(i)\n            down.append(i)\n        elif not flag:\n            down.append(i)\n            up.append(i)\n            flag = 1\n        elif len(up) >= len(down):\n            down.append(i)\n        else:\n            up.append(i)\n    len_up = len(up)\n    len_down = len(down)\n    print(min(len_up, len_down))"]