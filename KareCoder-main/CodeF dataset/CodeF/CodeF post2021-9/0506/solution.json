["import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if k <= n:\n        lps = ans = 0\n        for i in range(n):\n            lps += arr[i]\n            if i >= k:\n                lps -= arr[i - k]\n            ans = max(ans, lps)\n        return ans + k * (k - 1) // 2\n    else:\n        ans = sum(arr) + (k - 1 + k - 1 - n + 1) * n // 2\n        return ans\nfor _ in range(int(input())):\n    print(solve())", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    (n, k) = map(int, inp().split())\n    a = list(map(int, inp().split()))\n    m = min(n, k)\n    s = 0\n    for i in range(m):\n        s += a[i]\n    best = s\n    for i in range(m, n):\n        s += a[i]\n        s -= a[i - m]\n        best = max(best, s)\n    print(best + m * (m - 1) // 2 + (k - m) * m)\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "from sys import stdin\ninput = stdin.readline\n\ndef ii():\n    return int(input())\n\ndef li():\n    return list(map(int, input().split()))\n\ndef maxSubArraySum(a, size):\n    n = len(a)\n    s = 0\n    for i in range(size):\n        s += a[i]\n    ans = s\n    for i in range(size, n):\n        s += a[i] - a[i - size]\n        ans = max(ans, s)\n    return ans\nfor _ in range(ii()):\n    (n, k) = li()\n    a = li()\n    if k <= n:\n        print(maxSubArraySum(a, k) + k * (k - 1) // 2)\n        continue\n    if n == 1:\n        print(a[0] + k - 1)\n        continue\n    ans = sum(a)\n    incr = k - n + 2\n    ans += 1 + 2 * (incr - 2)\n    for i in range(2, n):\n        ans += incr\n        incr += 1\n    print(ans)", "from random import getrandbits\nRANDOM = getrandbits(32)\n\nclass Wrapper(int):\n\n    def __init__(self, x):\n        int.__init__(x)\n\n    def __hash__(self):\n        return super(Wrapper, self).__hash__() ^ RANDOM\nT = int(input())\nq = []\nfor i in range(T):\n    a = input().split()\n    (n, k) = (int(a[0]), int(a[1]))\n    data = [int(i) for i in input().split()]\n    q.append((n, k, data))\n\ndef solve(n, k, data):\n    if n >= k:\n        addi = 0\n        sums = 0\n        for i in range(k):\n            addi += i\n            sums += data[i]\n        ans = max(sums, 0)\n        for j in range(k, n):\n            sums = sums - data[j - k] + data[j]\n            ans = max(sums, ans)\n        print(ans + addi)\n    else:\n        stay = k - n\n        ans = 0\n        for (idx, i) in enumerate(data):\n            ans += idx + stay + i\n        print(ans)\nfor (n, k, data) in q:\n    solve(n, k, data)", "import io, os\n\ndef ri():\n    return int(input().strip())\n\ndef rl():\n    return list(map(int, input().strip().split()))\n\ndef Solve():\n    (n, m) = rl()\n    a = rl()\n    if m <= n:\n        tmp = 0\n        for i in range(m):\n            tmp += a[i]\n        ans = tmp\n        for i in range(m, n):\n            tmp = tmp - a[i - m] + a[i]\n            ans = max(ans, tmp)\n        print(ans + m * (m - 1) // 2)\n    else:\n        print(sum(a) + n * m - n * (n + 1) // 2)\nT = ri()\nwhile T:\n    T -= 1\n    Solve()", "tc = int(input())\nfor t in range(tc):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if k >= n:\n        cun = sum(arr)\n        r = n - k\n        sm = (k * (k - 1) - r * (r + 1)) // 2\n        print(cun + sm)\n    else:\n        cn = sum(arr[:k])\n        mx = cn\n        for j in range(k, n):\n            cn = cn + arr[j] - arr[j - k]\n            if cn > mx:\n                mx = cn\n        sm = k * (k - 1) // 2\n        print(mx + sm)", "def read_nums():\n    return [int(x) for x in input().split()]\n\ndef solve():\n    (n, k) = read_nums()\n    nums = read_nums()\n    if k >= n:\n        return sum(nums) + n * (2 * k - n - 1) // 2\n    cum_nums = get_cum_sum(nums)\n    largest_sum = 0\n    for i in range(n - k + 1):\n        largest_sum = max(largest_sum, cum_nums[i + k] - cum_nums[i])\n    return largest_sum + k * (k - 1) // 2\n\ndef get_cum_sum(nums):\n    cum_sum = 0\n    cum_nums = [0]\n    for num in nums:\n        cum_sum += num\n        cum_nums.append(cum_sum)\n    return cum_nums\n\ndef main():\n    (t,) = read_nums()\n    for _ in range(t):\n        print(solve())\nmain()", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k < n:\n        m = sum(a[:k])\n        c = m\n        for i in range(k, n):\n            c += a[i] - a[i - k]\n            m = max(m, c)\n        print(m + k * (k - 1) // 2)\n    else:\n        print(sum(a) + (k - n) * n + n * (n - 1) // 2)", "def solve(a, n, k):\n    if k > n:\n        return sum(a) + n * k - n * (n + 1) // 2\n    ksum = k * (k - 1) // 2\n    ps = [0] * (n + 1)\n    for i in range(n):\n        ps[i + 1] = ps[i] + a[i]\n    nsum = 0\n    for i in range(n - k + 1):\n        nsum = max(nsum, ps[i + k] - ps[i])\n    return nsum + ksum\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(solve(a, n, k))", "t = int(input())\nfor i in range(0, t):\n    (n, k) = [int(x) for x in input().split(' ')]\n    a = [int(x) for x in input().split(' ')]\n    if k > n:\n        print(sum(a) + n * k - n * (n + 1) // 2)\n    else:\n        l = 0\n        r = k - 1\n        m = sum(a[:k])\n        s = m\n        for r in range(k, n):\n            s = s - a[r - k] + a[r]\n            m = max(s, m)\n        print(m + k * (k - 1) // 2)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if n > k:\n        sumi = 0\n        for i in range(k):\n            sumi += a[i]\n        maxi = sumi\n        for i in range(k, n):\n            sumi += a[i] - a[i - k]\n            maxi = max(maxi, sumi)\n        print(maxi + k * (k - 1) // 2)\n    else:\n        print(sum(a) + k * n - n * (n + 1) // 2)", "def solve():\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if n == 1:\n        out = a[0] + (k - 1)\n    elif k < n:\n        maxw = 0\n        s = 0\n        for i in range(n):\n            s += a[i]\n            if i >= k:\n                s -= a[i - k]\n            if i >= k - 1:\n                maxw = max(maxw, s)\n        out = maxw + (k - 1) * k // 2\n    elif k == n:\n        out = sum(a) + (k - 1) * k // 2\n    else:\n        out = sum(a)\n        share = k // (n - 1)\n        r = k % (n - 1)\n        out += (r - 1) * r // 2\n        out += (r - 1) * r\n        out += (3 * r + n - 3) * (n - r) // 2\n        out += (share - 1) * (n - 1) * n\n    print(out)\nfor _ in range(int(input())):\n    solve()", "def solve(n, k, array):\n    ans = 0\n    if k <= n:\n        ans += int(k * (k - 1) / 2)\n        temp = 0\n        for i in range(k):\n            temp += array[i]\n        maxTemp = temp\n        for i in range(n - k):\n            temp -= array[i]\n            temp += array[i + k]\n            maxTemp = max(temp, maxTemp)\n        ans += maxTemp\n    else:\n        ans += sum(array)\n        temp = n * k\n        temp -= int(n * (n + 1) / 2)\n        ans += temp\n    return ans\nt = int(input())\nfor _ in range(t):\n    (n, k) = input().split(' ')\n    n = int(n)\n    k = int(k)\n    array = [int(i) for i in input().split(' ')]\n    print(solve(n, k, array))", "t = int(input())\nfor h in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k < n:\n        m = sum(a[:k])\n        c = m\n        for i in range(k, n):\n            c += a[i] - a[i - k]\n            m = max(m, c)\n        print(m + k * (k - 1) // 2)\n    else:\n        print(sum(a) + (k - n) * n + n * (n - 1) // 2)", "def resi():\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    if k >= n:\n        print(n * (k - n) + s + (n - 1) * n // 2)\n        return\n    tmp = 0\n    for i in range(k):\n        tmp += a[i]\n    maxx = tmp\n    for i in range(k, n):\n        tmp += a[i]\n        tmp -= a[i - k]\n        if maxx < tmp:\n            maxx = tmp\n    print(maxx + k * (k - 1) // 2)\n    return\nfor _ in range(int(input())):\n    resi()", "t = int(input())\nfor h in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k < n:\n        m = sum(a[:k])\n        c = m\n        for i in range(k, n):\n            c += a[i] - a[i - k]\n            m = max(m, c)\n        print(m + k * (k - 1) // 2)\n    else:\n        print(sum(a) + (k - n) * n + n * (n - 1) // 2)", "t = int(input())\nfor h in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k < n:\n        m = sum(a[:k])\n        c = m\n        for i in range(k, n):\n            c += a[i] - a[i - k]\n            m = max(m, c)\n        print(m + k * (k - 1) // 2)\n    else:\n        print(sum(a) + (k - n) * n + n * (n - 1) // 2)", "t = int(input())\nfor h in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k < n:\n        m = sum(a[:k])\n        c = m\n        for i in range(k, n):\n            c += a[i] - a[i - k]\n            m = max(m, c)\n        print(m + k * (k - 1) // 2)\n    else:\n        print(sum(a) + (k - n) * n + n * (n - 1) // 2)", "t = int(input())\nfor h in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k < n:\n        m = sum(a[:k])\n        c = m\n        for i in range(k, n):\n            c += a[i] - a[i - k]\n            m = max(m, c)\n        print(m + k * (k - 1) // 2)\n    else:\n        print(sum(a) + (k - n) * n + n * (n - 1) // 2)", "x = int(input())\n\ndef cal(n, m, arr):\n    if m >= n:\n        t = sum(arr) + n * (m - 1) - (n - 1) * n // 2\n        return t\n    t = sum(arr[:m])\n    k = t\n    for i in range(n - m):\n        k -= arr[i]\n        k += arr[i + m]\n        t = max(t, k)\n    return t + m * (m - 1) - m * (m - 1) // 2\nfor jj in range(x):\n    (n, m) = [int(i) for i in input().split(' ')]\n    arr = [int(i) for i in input().split(' ')]\n    print(cal(n, m, arr))", "from itertools import accumulate\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(a[0] + k - 1)\n    elif n == 2:\n        if k == 1:\n            print(max(a))\n        else:\n            print(sum(a) + k * n - n * (n + 1) // 2)\n    elif k == n:\n        print(sum(a) + n * (n - 1) // 2)\n    elif k < n:\n        temp1 = k % n\n        preSum = list(accumulate(a, initial=0))\n        maxn = 0\n        for i in range(n - temp1 + 1):\n            maxn = max(maxn, preSum[i + temp1] - preSum[i])\n        print(maxn + temp1 * (temp1 - 1) // 2)\n    else:\n        print(sum(a) + k * n - n * (n + 1) // 2)", "def ans(arr, k):\n    n = len(arr)\n    if k > n:\n        s = sum(arr)\n        x = n * (n + 1) // 2\n        print(s - x + n * k)\n    else:\n        res = 0\n        for i in range(k):\n            res += arr[i]\n        curr_sum = res\n        for i in range(k, n):\n            curr_sum += arr[i] - arr[i - k]\n            res = max(res, curr_sum)\n        print(res + k * (k - 1) // 2)\nt = int(input())\nfor _ in range(t):\n    (n, k) = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    ans(arr, k)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    temp = 0\n    if k <= n:\n        curr_first = arr[0]\n        curr_sum = sum(arr[:k])\n        res = curr_sum\n        for nn in arr[k:]:\n            curr_sum = curr_sum - curr_first + nn\n            res = max(res, curr_sum)\n            temp += 1\n            curr_first = arr[temp]\n        print(res + k * (k - 1) // 2)\n    else:\n        res = sum(arr) + n * (n - 1) // 2 + n * (k - n)\n        print(res)", "for __ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k >= n:\n        print(sum(a) + (k - 1) * n - (n - 1) * n // 2)\n        continue\n    s = sum(a[:k])\n    big = s\n    for i in range(k, n):\n        s += a[i] - a[i - k]\n        big = max(big, s)\n    print(big + k * (k - 1) // 2)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    temp = 0\n    if k <= n:\n        curr_first = arr[0]\n        curr_sum = sum(arr[:k])\n        res = curr_sum\n        for nn in arr[k:]:\n            curr_sum = curr_sum - curr_first + nn\n            res = max(res, curr_sum)\n            temp += 1\n            curr_first = arr[temp]\n        print(res + k * (k - 1) // 2)\n    else:\n        res = sum(arr) + n * (n - 1) // 2 + n * (k - n)\n        print(res)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = [int(x) for x in input().split()]\n    l = [int(x) for x in input().split()]\n    if k <= n:\n        delta = k * (k - 1) // 2\n        tmps = sum(l[:k])\n        s = tmps\n        for i in range(k, n):\n            tmps += l[i]\n            tmps -= l[i - k]\n            s = tmps if tmps > s else s\n    else:\n        s = sum(l)\n        delta = n * (2 * k - n - 1) // 2\n    print(s + delta)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    l = list(map(int, input().split(' ')))\n    if n == k:\n        print(sum(l) + n * (n - 1) // 2)\n    elif n > k:\n        m = sum(l[:k])\n        c = m\n        for i in range(k, n):\n            c += l[i] - l[i - k]\n            m = max(c, m)\n        print(m + k * (k - 1) // 2)\n    else:\n        sm = 0\n        sm = sum(l) + n * (n - 1) // 2\n        sm = sm + (k - n) * len(l)\n        print(sm)", "def solve(n, k, array):\n    ans = 0\n    if k <= n:\n        ans += int(k * (k - 1) / 2)\n        temp = 0\n        for i in range(k):\n            temp += array[i]\n        maxTemp = temp\n        for i in range(n - k):\n            temp -= array[i]\n            temp += array[i + k]\n            maxTemp = max(temp, maxTemp)\n        ans += maxTemp\n    else:\n        ans += sum(array)\n        temp = n * k\n        temp -= int(n * (n + 1) / 2)\n        ans += temp\n    return ans\nt = int(input())\nfor _ in range(t):\n    (n, k) = input().split(' ')\n    n = int(n)\n    k = int(k)\n    array = [int(i) for i in input().split(' ')]\n    print(solve(n, k, array))", "def solve(n, k, array):\n    ans = 0\n    if k <= n:\n        ans += int(k * (k - 1) / 2)\n        temp = 0\n        for i in range(k):\n            temp += array[i]\n        maxTemp = temp\n        for i in range(n - k):\n            temp -= array[i]\n            temp += array[i + k]\n            maxTemp = max(temp, maxTemp)\n        ans += maxTemp\n    else:\n        ans += sum(array)\n        temp = n * k\n        temp -= int(n * (n + 1) / 2)\n        ans += temp\n    return ans\nt = int(input())\nfor _ in range(t):\n    (n, k) = input().split(' ')\n    n = int(n)\n    k = int(k)\n    array = [int(i) for i in input().split(' ')]\n    print(solve(n, k, array))", "def solve(n, k, array):\n    ans = 0\n    if k <= n:\n        ans += int(k * (k - 1) / 2)\n        temp = 0\n        for i in range(k):\n            temp += array[i]\n        maxTemp = temp\n        for i in range(n - k):\n            temp -= array[i]\n            temp += array[i + k]\n            maxTemp = max(temp, maxTemp)\n        ans += maxTemp\n    else:\n        ans += sum(array)\n        temp = n * k\n        temp -= int(n * (n + 1) / 2)\n        ans += temp\n    return ans\nt = int(input())\nfor _ in range(t):\n    (n, k) = input().split(' ')\n    n = int(n)\n    k = int(k)\n    array = [int(i) for i in input().split(' ')]\n    print(solve(n, k, array))", "t = int(input())\nfor i in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    nums = [int(x) for x in input().split()]\n    if k >= n:\n        print(int(sum(nums) + n * (k - 1) - (n - 1) * n / 2))\n    else:\n        cur_max = sum(nums[0:k])\n        current = cur_max\n        for j in range(n - k):\n            current = current + nums[k + j] - nums[j]\n            if current > cur_max:\n                cur_max = current\n        print(int(cur_max + (k - 1) * k / 2))", "t = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    vals = list(map(int, input().split()))\n    maxSum = 0\n    if k < n:\n        workingSum = sum(vals[:k])\n        maxSum = workingSum\n        for i in range(k, n):\n            workingSum += vals[i]\n            workingSum -= vals[i - k]\n            maxSum = max(maxSum, workingSum)\n        timeAdded = k * (k - 1) / 2\n    else:\n        maxSum = sum(vals)\n        maxSum += (k - n) * n\n        maxSum += (n - 1) * n / 2\n        timeAdded = 0\n    print(int(maxSum + timeAdded))", "def partial_sum(a, b):\n    return (b + a) * (b - a + 1) // 2\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    mushs = list(map(int, input().split()))\n    if k >= n:\n        print(partial_sum(k - n, k - 1) + sum(mushs))\n        continue\n    num = sum(mushs[:k])\n    M = num\n    for i in range(k, n):\n        num += mushs[i] - mushs[i - k]\n        M = max(M, num)\n    print(partial_sum(0, k - 1) + M)", "T = int(input())\nfor testcase in range(T):\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    s = sum(a)\n    if k >= n:\n        print(s + k * n - n * (n + 1) // 2)\n    else:\n        ps = [0]\n        pssum = 0\n        for x in a:\n            pssum += x\n            ps.append(pssum)\n        bestsum = 0\n        for i in range(n - k + 1):\n            if ps[i + k] - ps[i] > bestsum:\n                bestsum = ps[i + k] - ps[i]\n        print(bestsum + (k - 1) * k // 2)", "from itertools import accumulate\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    if k == n:\n        print(sum(a) + n * (n - 1) // 2)\n    elif k < n:\n        temp1 = k % n\n        preSum = list(accumulate(a, initial=0))\n        maxn = 0\n        for i in range(n - temp1 + 1):\n            maxn = max(maxn, preSum[i + temp1] - preSum[i])\n        print(maxn + temp1 * (temp1 - 1) // 2)\n    else:\n        print(sum(a) + k * n - n * (n + 1) // 2)", "t = int(input())\nfor i in range(0, t):\n    (n, k) = [int(x) for x in input().split(' ')]\n    a = [int(x) for x in input().split(' ')]\n    if k > n:\n        print(sum(a) + n * k - n * (n + 1) // 2)\n    else:\n        l = 0\n        r = k - 1\n        m = sum(a[:k])\n        s = m\n        for r in range(k, n):\n            s = s - a[r - k] + a[r]\n            m = max(s, m)\n        print(m + k * (k - 1) // 2)", "for time in range(int(input())):\n    (n, x) = map(int, input().split())\n    nums = [int(a) for a in input().split()]\n    if n > x:\n        s = 0\n        for j in range(x):\n            s += nums[j]\n        maxi = s\n        for j in range(x, n):\n            s += nums[j] - nums[j - x]\n            maxi = max(s, maxi)\n        print(maxi + (x * x - x) // 2)\n    else:\n        s = sum((j for j in nums))\n        print(s + n * (x - 1) - n * (n - 1) // 2)", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    if k >= n:\n        print(sum(a) + n * k - n * (n + 1) // 2)\n    else:\n        sm = 0\n        for i in range(k):\n            sm += a[i]\n        ans = sm\n        for i in range(k, n):\n            sm -= a[i - k] - a[i]\n            ans = max(ans, sm)\n        print(ans + k * (k - 1) // 2)", "t = int(input())\nfor i in range(0, t):\n    (n, k) = [int(x) for x in input().split(' ')]\n    a = [int(x) for x in input().split(' ')]\n    if k > n:\n        print(sum(a) + n * k - n * (n + 1) // 2)\n    else:\n        l = 0\n        r = k - 1\n        m = sum(a[:k])\n        s = m\n        for r in range(k, n):\n            s = s - a[r - k] + a[r]\n            m = max(s, m)\n        print(m + k * (k - 1) // 2)", "t = int(input())\nfor h in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k < n:\n        m = sum(a[:k])\n        c = m\n        for i in range(k, n):\n            c += a[i] - a[i - k]\n            m = max(m, c)\n        print(m + k * (k - 1) // 2)\n    else:\n        print(sum(a) + (k - n) * n + n * (n - 1) // 2)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k < n:\n        m = sum(a[:k])\n        c = m\n        for i in range(k, n):\n            c += a[i] - a[i - k]\n            m = max(m, c)\n        print(m + k * (k - 1) // 2)\n    else:\n        print(sum(a) + (k - n) * n + n * (n - 1) // 2)", "t = int(input())\nfor h in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k < n:\n        m = sum(a[:k])\n        c = m\n        for i in range(k, n):\n            c += a[i] - a[i - k]\n            m = max(m, c)\n        print(m + k * (k - 1) // 2)\n    else:\n        print(sum(a) + (k - n) * n + n * (n - 1) // 2)", "t = int(input())\nfor h in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k < n:\n        m = sum(a[:k])\n        c = m\n        for i in range(k, n):\n            c += a[i] - a[i - k]\n            m = max(m, c)\n        print(m + k * (k - 1) // 2)\n    else:\n        print(sum(a) + (k - n) * n + n * (n - 1) // 2)", "t = int(input())\nfor h in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k < n:\n        m = sum(a[:k])\n        c = m\n        for i in range(k, n):\n            c += a[i] - a[i - k]\n            m = max(m, c)\n        print(m + k * (k - 1) // 2)\n    else:\n        print(sum(a) + (k - n) * n + n * (n - 1) // 2)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k < n:\n        m = sum(a[:k])\n        c = m\n        for i in range(k, n):\n            c += a[i] - a[i - k]\n            m = max(m, c)\n        print(m + k * (k - 1) // 2)\n    else:\n        print(sum(a) + (k - n) * n + n * (n - 1) // 2)", "t = int(input())\nfor h in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k < n:\n        m = sum(a[:k])\n        c = m\n        for i in range(k, n):\n            c += a[i] - a[i - k]\n            m = max(m, c)\n        print(m + k * (k - 1) // 2)\n    else:\n        print(sum(a) + (k - n) * n + n * (n - 1) // 2)", "t = int(input())\nfor h in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k < n:\n        m = sum(a[:k])\n        c = m\n        for i in range(k, n):\n            c += a[i] - a[i - k]\n            m = max(m, c)\n        print(m + k * (k - 1) // 2)\n    else:\n        print(sum(a) + (k - n) * n + n * (n - 1) // 2)", "t = int(input())\nfor h in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k < n:\n        m = sum(a[:k])\n        c = m\n        for i in range(k, n):\n            c += a[i] - a[i - k]\n            m = max(m, c)\n        print(m + k * (k - 1) // 2)\n    else:\n        print(sum(a) + (k - n) * n + n * (n - 1) // 2)", "t = int(input())\nfor h in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k < n:\n        m = sum(a[:k])\n        c = m\n        for i in range(k, n):\n            c += a[i] - a[i - k]\n            m = max(m, c)\n        print(m + k * (k - 1) // 2)\n    else:\n        print(sum(a) + (k - n) * n + n * (n - 1) // 2)", "t = int(input())\nfor h in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k < n:\n        m = sum(a[:k])\n        c = m\n        for i in range(k, n):\n            c += a[i] - a[i - k]\n            m = max(m, c)\n        print(m + k * (k - 1) // 2)\n    else:\n        print(sum(a) + (k - n) * n + n * (n - 1) // 2)", "t = int(input())\nfor h in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k < n:\n        m = sum(a[:k])\n        c = m\n        for i in range(k, n):\n            c += a[i] - a[i - k]\n            m = max(m, c)\n        print(m + k * (k - 1) // 2)\n    else:\n        print(sum(a) + (k - n) * n + n * (n - 1) // 2)", "t = int(input())\nfor h in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k < n:\n        m = sum(a[:k])\n        c = m\n        for i in range(k, n):\n            c += a[i] - a[i - k]\n            m = max(m, c)\n        print(m + k * (k - 1) // 2)\n    else:\n        print(sum(a) + (k - n) * n + n * (n - 1) // 2)", "t = int(input())\nfor h in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k < n:\n        m = sum(a[:k])\n        c = m\n        for i in range(k, n):\n            c += a[i] - a[i - k]\n            m = max(m, c)\n        print(m + k * (k - 1) // 2)\n    else:\n        print(sum(a) + (k - n) * n + n * (n - 1) // 2)", "t = int(input())\nfor h in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k < n:\n        m = sum(a[:k])\n        c = m\n        for i in range(k, n):\n            c += a[i] - a[i - k]\n            m = max(m, c)\n        print(m + k * (k - 1) // 2)\n    else:\n        print(sum(a) + (k - n) * n + n * (n - 1) // 2)", "t = int(input())\nfor h in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k < n:\n        m = sum(a[:k])\n        c = m\n        for i in range(k, n):\n            c += a[i] - a[i - k]\n            m = max(m, c)\n        print(m + k * (k - 1) // 2)\n    else:\n        print(sum(a) + (k - n) * n + n * (n - 1) // 2)", "t = int(input())\nfor h in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k < n:\n        m = sum(a[:k])\n        c = m\n        for i in range(k, n):\n            c += a[i] - a[i - k]\n            m = max(m, c)\n        print(m + k * (k - 1) // 2)\n    else:\n        print(sum(a) + (k - n) * n + n * (n - 1) // 2)", "t = int(input())\nfor h in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k < n:\n        m = sum(a[:k])\n        c = m\n        for i in range(k, n):\n            c += a[i] - a[i - k]\n            m = max(m, c)\n        print(m + k * (k - 1) // 2)\n    else:\n        print(sum(a) + (k - n) * n + n * (n - 1) // 2)", "t = int(input())\nfor h in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k < n:\n        m = sum(a[:k])\n        c = m\n        for i in range(k, n):\n            c += a[i] - a[i - k]\n            m = max(m, c)\n        print(m + k * (k - 1) // 2)\n    else:\n        print(sum(a) + (k - n) * n + n * (n - 1) // 2)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k < n:\n        m = sum(a[:k])\n        c = m\n        for i in range(k, n):\n            c += a[i] - a[i - k]\n            m = max(m, c)\n        print(m + k * (k - 1) // 2)\n    else:\n        print(sum(a) + (k - n) * n + n * (n - 1) // 2)", "for h in range(int(input())):\n    (n, k) = map(int, input().split())\n    x = list(map(int, input().split()))\n    if k >= n:\n        a = sum(x)\n        b = k // n * n * n - n * (n + 1) // 2\n        k = k % n\n        c = n * k\n        print(a + b + c)\n    else:\n        for i in range(1, n):\n            x[i] += x[i - 1]\n        x.append(0)\n        m = 0\n        for i in range(k - 1, n):\n            m = max(m, x[i] - x[i - k])\n        print(m + k * (k - 1) // 2)", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    if n == 1:\n        print(l[0] + k - 1)\n    elif k <= n:\n        ans = 0\n        su = 0\n        for i in range(k):\n            su += l[i]\n        ans = su\n        for i in range(k, n):\n            su += l[i] - l[i - k]\n            ans = max(ans, su)\n        print(ans + k * (k - 1) // 2)\n    elif k > n:\n        print((k - 1) * n + sum(l) - n * (n - 1) // 2)\n    t -= 1", "T = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k >= n:\n        print(n * (n - 1) // 2 + (k - n) * n + sum(a))\n    else:\n        pre = [0] * n\n        pre[0] = a[0]\n        for i in range(1, n):\n            pre[i] = pre[i - 1] + a[i]\n        ans = pre[k - 1]\n        for i in range(k, n):\n            ans = max(ans, pre[i] - pre[i - k])\n        ans += k * (k - 1) // 2\n        print(ans)", "n = int(input())\nmas = 0\nfor i in range(n):\n    mas = 0\n    s = 0\n    (x, y) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    if y < x:\n        mas += sum(l[:y])\n        s = mas\n        for v in range(y, x):\n            s += l[v] - l[v - y]\n            mas = max(mas, s)\n        mas += y * (y - 1) / 2\n    else:\n        mas += sum(l) + (len(l) - 1) * (len(l) / 2) + x * (y - x)\n    print(int(mas))", "runs = int(input())\n\ndef solveCaseB(map, x, k):\n    return map[x] + (k - 1 + k - x) * x // 2\n\ndef solveCaseA(map, x, k):\n    max = 0\n    for i in range(x + 1):\n        if i >= k:\n            curr = map[i] - map[i - k]\n            if curr > max:\n                max = curr\n    return max + (1 + k - 1) * (k - 1) // 2\nfor i in range(runs):\n    [x, k] = [int(i) for i in input().split()]\n    mapa = [0] + [int(i) for i in input().split()]\n    for i in range(1, x + 1):\n        mapa[i] += mapa[i - 1]\n    if k > x:\n        print(solveCaseB(mapa, x, k))\n    else:\n        print(solveCaseA(mapa, x, k))", "t = int(input())\nfor h in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k < n:\n        m = sum(a[:k])\n        c = m\n        for i in range(k, n):\n            c += a[i] - a[i - k]\n            m = max(m, c)\n        print(m + k * (k - 1) // 2)\n    else:\n        print(sum(a) + (k - n) * n + n * (n - 1) // 2)", "t = int(input())\nfor _ in range(t):\n    (n, k) = [int(x) for x in input().split(' ')]\n    a = [int(x) for x in input().split(' ')]\n    if k > n:\n        print(sum(a) + n * k - n * (n + 1) // 2)\n    else:\n        l = 0\n        r = k - 1\n        m = sum(a[:k])\n        s = m\n        for r in range(k, n):\n            s = s - a[r - k] + a[r]\n            m = max(s, m)\n        print(m + k * (k - 1) // 2)", "t = int(input())\nfor h in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k < n:\n        m = sum(a[:k])\n        c = m\n        for i in range(k, n):\n            c += a[i] - a[i - k]\n            m = max(m, c)\n        print(m + k * (k - 1) // 2)\n    else:\n        print(sum(a) + (k - n) * n + n * (n - 1) // 2)", "t = int(input())\nfor h in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k < n:\n        m = sum(a[:k])\n        c = m\n        for i in range(k, n):\n            c += a[i] - a[i - k]\n            m = max(m, c)\n        print(m + k * (k - 1) // 2)\n    else:\n        print(sum(a) + (k - n) * n + n * (n - 1) // 2)", "t = int(input())\nfor h in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k < n:\n        m = sum(a[:k])\n        c = m\n        for i in range(k, n):\n            c += a[i] - a[i - k]\n            m = max(m, c)\n        print(m + k * (k - 1) // 2)\n    else:\n        print(sum(a) + (k - n) * n + n * (n - 1) // 2)", "t = int(input())\nfor h in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k < n:\n        m = sum(a[:k])\n        c = m\n        for i in range(k, n):\n            c += a[i] - a[i - k]\n            m = max(m, c)\n        print(m + k * (k - 1) // 2)\n    else:\n        print(sum(a) + (k - n) * n + n * (n - 1) // 2)", "read = lambda : map(int, input().strip().split())\n\ndef f(a, k):\n    if k >= len(a):\n        rem = k - len(a)\n        base = rem + 1\n        ans = a[0] + rem\n        for i in a[1:]:\n            ans += i + base\n            base += 1\n        return ans\n    else:\n        s = sum(a[:k])\n        i = 0\n        j = k\n        ans = s\n        while j < len(a):\n            s -= a[i]\n            s += a[j]\n            j += 1\n            i += 1\n            ans = max(ans, s)\n        k -= 1\n        ans += k * (k + 1) // 2\n        return ans\nfor _ in range(int(input())):\n    (n, k) = read()\n    a = list(read())\n    print(f(a, k))", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    v = list(map(int, input().split(' ')))\n    if k >= n:\n        ans = int(sum(v) + k * n - n * (n + 1) / 2)\n    else:\n        s = sum(v[0:k])\n        ans = int(s + k * (k - 1) / 2)\n        for i in range(1, n - k + 1):\n            s -= v[i - 1]\n            s += v[i + k - 1]\n            ans = max(ans, int(s + k * (k - 1) / 2))\n    print(ans)", "def solve(a, b, c):\n    s = 0\n    u = 0\n    for i in range(a):\n        u += c[i]\n        if b <= i:\n            u -= c[i - b]\n        s = max(s, u)\n    return s + (b - 1) * b // 2\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = list(map(int, input().split()))\n    if a >= b:\n        print(solve(a, b, c))\n    else:\n        print(solve(a, a, c) + (b - a) * a)", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    a = list(map(int, input().split(' ')))\n    if k >= n:\n        ans = int(sum(a) + k * n - n * (n + 1) / 2)\n    else:\n        d = sum(a[0:k])\n        ans = int(d + k * (k - 1) / 2)\n        for i in range(1, n - k + 1):\n            d -= a[i - 1]\n            d += a[i + k - 1]\n            ans = max(ans, int(d + k * (k - 1) / 2))\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k >= n:\n        ans = n * (n + 1) // 2\n        ans += (k - 1 - n) * n\n        ans += sum(a)\n        print(ans)\n    else:\n        pre = [0] + a.copy()\n        for i in range(1, n + 1):\n            pre[i] += pre[i - 1]\n        ma = 0\n        for i in range(0, n + 1 - k):\n            su = pre[i + k] - pre[i]\n            ma = max(ma, su)\n        num = k - 1\n        ans = num * (num + 1) // 2\n        ans += ma\n        print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [*map(int, input().split())]\n    if k >= n:\n        print(sum(a) + n * k - n * (n + 1) // 2)\n    else:\n        window = (((k - 1) % n) ** 2 + (k - 1) % n) / 2\n        (l, r, i, ans) = (0, 0, 0, 0)\n        while r < n:\n            window += a[r]\n            if r - l == k:\n                window -= a[l]\n                l += 1\n            r += 1\n            ans = max(ans, window)\n        print(int(ans))", "import math\nfor _ in range(int(input())):\n    (n, d) = map(int, input().split(' '))\n    v = list(map(int, input().split(' ')))\n    if d >= n:\n        ans = int(sum(v) + d * n - n * (n + 1) / 2)\n    else:\n        s = sum(v[0:d])\n        ans = int(s + d * (d - 1) / 2)\n        for i in range(1, n - d + 1):\n            s -= v[i - 1]\n            s += v[i + d - 1]\n            ans = max(ans, int(s + d * (d - 1) / 2))\n    print(ans)", "def ar(n):\n    return n * (n - 1) // 2\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k > n:\n        ans = sum(a)\n        ans += ar(n) + k - n + (k - n) * (n - 1)\n    else:\n        b = [0]\n        s = 0\n        for i in a:\n            s += i\n            b.append(s)\n        s = 0\n        for i in range(k, n + 1):\n            s = max(s, b[i] - b[i - k])\n        ans = s\n        ans += ar(k)\n    print(ans)", "t = int(input())\nfor j in range(t):\n    (n, k) = list(map(int, input().split()))\n    mushrooms = list(map(int, input().split()))\n    sum = [0]\n    for i in range(1, n + 1):\n        sum.append(mushrooms[i - 1] + sum[i - 1])\n    if k > n:\n        print(sum[n] + k * n - n * (n + 1) // 2)\n    else:\n        max_subarray = 0\n        for i in range(k, n + 1):\n            max_subarray = max(max_subarray, sum[i] - sum[i - k])\n        print(max_subarray + k * (k - 1) // 2)", "tests = int(input())\nfor i in range(tests):\n    (n, steps) = map(int, input().split())\n    florest = [int(n) for n in input().split()]\n    if steps <= n:\n        sum_ = 0\n        for j in range(steps):\n            sum_ += florest[j]\n        result = sum_\n        for j in range(steps, n, 1):\n            sum_ += florest[j]\n            sum_ -= florest[j - steps]\n            result = max(result, sum_)\n        result += steps * (steps - 1) / 2\n        print(int(result))\n    else:\n        result = n * (steps - n) + n * (n - 1) / 2\n        for j in range(n):\n            result += florest[j]\n        print(int(result))", "def solve(a, b, c):\n    s = 0\n    u = 0\n    for i in range(a):\n        u += c[i]\n        if b <= i:\n            u -= c[i - b]\n        s = max(s, u)\n    return s + (b - 1) * b // 2\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = list(map(int, input().split()))\n    if a >= b:\n        print(solve(a, b, c))\n    else:\n        print(solve(a, a, c) + (b - a) * a)", "def solve(a, b, c):\n    s = 0\n    u = 0\n    for i in range(a):\n        u += c[i]\n        if b <= i:\n            u -= c[i - b]\n        s = max(s, u)\n    return s + (b - 1) * b // 2\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = list(map(int, input().split()))\n    if a >= b:\n        print(solve(a, b, c))\n    else:\n        print(solve(a, a, c) + (b - a) * a)", "def solve(a, b, c):\n    s = 0\n    u = 0\n    for i in range(a):\n        u += c[i]\n        if b <= i:\n            u -= c[i - b]\n        s = max(s, u)\n    return s + (b - 1) * b // 2\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = list(map(int, input().split()))\n    if a >= b:\n        print(solve(a, b, c))\n    else:\n        print(solve(a, a, c) + (b - a) * a)", "t = int(input())\nfor _ in range(t):\n    (a, b) = input().split()\n    b = int(b)\n    s = list(map(int, input().split()))\n    if b < len(s):\n        tmp = sum(s[0:b])\n        mx = tmp\n        for i in range(len(s) - b):\n            tmp = tmp - s[i] + s[i + b]\n            mx = max(tmp, mx)\n        print(mx + b * (b - 1) // 2)\n    else:\n        l = len(s)\n        print(sum(s) + b * l - l * (l + 1) // 2)", "tests = int(input())\nfor i in range(tests):\n    (n, steps) = map(int, input().split())\n    florest = [int(n) for n in input().split()]\n    if steps < n:\n        sum_ = 0\n        for j in range(steps):\n            sum_ += florest[j]\n        result = sum_\n        for j in range(steps, n, 1):\n            sum_ += florest[j]\n            sum_ -= florest[j - steps]\n            result = max(result, sum_)\n        result += steps * (steps - 1) / 2\n        print(int(result))\n    else:\n        result = n * (steps - n) + n * (n - 1) / 2\n        for j in range(n):\n            result += florest[j]\n        print(int(result))", "T = int(input())\nfor t in range(T):\n    (n, m) = map(int, input().split())\n    a = [0] + list(map(int, input().split()))\n    for i in range(1, n + 1):\n        a[i] += a[i - 1]\n    if m > n:\n        print(a[n] + (m - 1 + m - n) * n // 2)\n    else:\n        ans = 0\n        for i in range(n + 1):\n            if i >= m:\n                ans = max(ans, a[i] - a[i - m])\n        print(ans + (1 + m - 1) * (m - 1) // 2)", "T = int(input())\nfor t in range(T):\n    (n, m) = map(int, input().split())\n    a = [0] + list(map(int, input().split()))\n    for i in range(1, n + 1):\n        a[i] += a[i - 1]\n    if m > n:\n        print(a[n] + (m - 1 + m - n) * n // 2)\n    else:\n        ans = 0\n        for i in range(n + 1):\n            if i >= m:\n                ans = max(ans, a[i] - a[i - m])\n        print(ans + (1 + m - 1) * (m - 1) // 2)", "T = int(input())\nfor t in range(T):\n    (n, m) = map(int, input().split())\n    a = [0] + list(map(int, input().split()))\n    for i in range(1, n + 1):\n        a[i] += a[i - 1]\n    if m > n:\n        print(a[n] + (m - 1 + m - n) * n // 2)\n    else:\n        ans = 0\n        for i in range(n + 1):\n            if i >= m:\n                ans = max(ans, a[i] - a[i - m])\n        print(ans + (1 + m - 1) * (m - 1) // 2)", "T = int(input())\nfor t in range(T):\n    (n, m) = map(int, input().split())\n    a = [0] + list(map(int, input().split()))\n    for i in range(1, n + 1):\n        a[i] += a[i - 1]\n    if m > n:\n        print(a[n] + (m - 1 + m - n) * n // 2)\n    else:\n        ans = 0\n        for i in range(n + 1):\n            if i >= m:\n                ans = max(ans, a[i] - a[i - m])\n        print(ans + (1 + m - 1) * (m - 1) // 2)", "T = int(input())\nfor t in range(T):\n    (n, m) = map(int, input().split())\n    a = [0] + list(map(int, input().split()))\n    for i in range(1, n + 1):\n        a[i] += a[i - 1]\n    if m > n:\n        print(a[n] + (m - 1 + m - n) * n // 2)\n    else:\n        ans = 0\n        for i in range(n + 1):\n            if i >= m:\n                ans = max(ans, a[i] - a[i - m])\n        print(ans + (1 + m - 1) * (m - 1) // 2)", "testes = int(input())\nfor t in range(testes):\n    (n_forest, tempo) = map(int, input().split())\n    mush_pos = [0] + list(map(int, input().split()))\n    for i in range(1, n_forest + 1):\n        mush_pos[i] += mush_pos[i - 1]\n    if tempo > n_forest:\n        print(mush_pos[n_forest] + (tempo - 1 + tempo - n_forest) * n_forest // 2)\n    else:\n        ans = 0\n        for i in range(n_forest + 1):\n            if i >= tempo:\n                ans = max(ans, mush_pos[i] - mush_pos[i - tempo])\n        print(ans + (1 + tempo - 1) * (tempo - 1) // 2)", "T = int(input())\nfor t in range(T):\n    (n, m) = map(int, input().split())\n    a = [0] + list(map(int, input().split()))\n    for i in range(1, n + 1):\n        a[i] += a[i - 1]\n    if m > n:\n        print(a[n] + (m - 1 + m - n) * n // 2)\n    else:\n        ans = 0\n        for i in range(n + 1):\n            if i >= m:\n                ans = max(ans, a[i] - a[i - m])\n        print(ans + (1 + m - 1) * (m - 1) // 2)", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    sumArr = [0]\n    res = 0\n    for i in range(n):\n        sumArr.append(sumArr[i] + arr[i])\n    if k <= n:\n        for i in range(n - k + 1):\n            res = max(res, sumArr[i + k] - sumArr[i])\n        res += k * (k - 1) / 2\n    else:\n        res = sumArr[n] + n * (2 * k - n - 1) / 2\n    t -= 1\n    print(int(res))", "t = int(input())\nfor _ in range(t):\n    (n, k) = [int(x) for x in input().strip().split()]\n    a = [int(x) for x in input().strip().split()]\n    a = [0] + a\n    for i in range(1, len(a)):\n        a[i] += a[i - 1]\n    if k > n:\n        print(a[n] + (k - 1 + k - n) * n // 2)\n    else:\n        ans = 0\n        for i in range(0, 2 * n):\n            if i + k <= n:\n                ans = max(ans, a[i + k] - a[i])\n        print(ans + k * (k - 1) // 2)"]