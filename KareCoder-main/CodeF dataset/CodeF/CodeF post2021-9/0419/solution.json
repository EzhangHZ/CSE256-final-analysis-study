["import sys\ninput = sys.stdin.readline\n\ndef sol(n, a, b):\n    wall = [a, b]\n    ind = 0\n    check = True\n    for i in range(n):\n        if wall[ind][i] != 'B':\n            check = False\n            break\n        elif wall[ind ^ 1][i] == 'B':\n            ind ^= 1\n    if check:\n        return 'YES'\n    ind = 1\n    check = True\n    for i in range(n):\n        if wall[ind][i] != 'B':\n            check = False\n            break\n        elif wall[ind ^ 1][i] == 'B':\n            ind ^= 1\n    if check:\n        return 'YES'\n    else:\n        return 'NO'\nt = int(input())\nfor case in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    print(sol(n, a, b))", "def solve():\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    k1 = k2 = 1\n    for i in range(n):\n        if s1[i] == s2[i] == 'B':\n            (k1, k2) = (k2, k1)\n        elif s1[i] == 'B':\n            k2 = 0\n        else:\n            k1 = 0\n    if k1 or k2:\n        return 'YES'\n    return 'NO'\nimport sys\ninput = lambda : sys.stdin.readline().rstrip()\nt = int(input())\nfor i in range(t):\n    print(solve())", "import sys\nsys.setrecursionlimit(200019)\n\ndef trace_path(row1, row2):\n    if not len(row1) or not len(row2):\n        return True\n    for i in range(len(row1)):\n        if row1[i] == 'B':\n            if row2[i] == 'B':\n                (row1, row2) = (row2, row1)\n            else:\n                pass\n        else:\n            return False\n    return True\nfor _ in range(int(input())):\n    input()\n    row1 = input()\n    row2 = input()\n    if trace_path(row1, row2) or trace_path(row2, row1):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    if s1[0] == 'W' and s2[0] == 'W':\n        print('NO')\n        continue\n    if s1[0] == 'B':\n        cond = True\n        flag = True\n        for i in range(n):\n            if cond:\n                if s1[i] == 'B':\n                    if s2[i] == 'B':\n                        cond = not cond\n                else:\n                    flag = False\n                    break\n            elif s2[i] == 'B':\n                if s1[i] == 'B':\n                    cond = not cond\n            else:\n                flag = False\n                break\n        if flag:\n            print('YES')\n            continue\n    if s2[0] == 'B':\n        cond = False\n        flag = True\n        for i in range(n):\n            if cond:\n                if s1[i] == 'B':\n                    if s2[i] == 'B':\n                        cond = not cond\n                else:\n                    flag = False\n                    break\n            elif s2[i] == 'B':\n                if s1[i] == 'B':\n                    cond = not cond\n            else:\n                flag = False\n                break\n        if flag:\n            print('YES')\n            continue\n    print('NO')", "def fun(n, s1, s2):\n    if n == 1:\n        if s1 == 'B' or s2 == 'B':\n            print('YES')\n            return\n        else:\n            print('NO')\n            return\n    t = 0\n    i = 0\n    while i < n:\n        if t == 1:\n            if s1[i] == 'B':\n                if s2[i] == 'B':\n                    t = 0\n            else:\n                break\n        elif s2[i] == 'B':\n            if s1[i] == 'B':\n                t = 1\n        else:\n            break\n        i = i + 1\n    if i == n:\n        print('YES')\n        return\n    t = 1\n    i = 0\n    while i < n:\n        if t == 1:\n            if s1[i] == 'B':\n                if s2[i] == 'B':\n                    t = 0\n            else:\n                break\n        elif s2[i] == 'B':\n            if s1[i] == 'B':\n                t = 1\n        else:\n            break\n        i = i + 1\n    if i == n:\n        print('YES')\n        return\n    print('NO')\n    return\nk = int(input())\nfor j in range(k):\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    fun(n, s1, s2)", "t = int(input())\n\ndef check(wall, n, i, j):\n    seen = False\n    while j < n:\n        if wall[i][j] != 'B':\n            return False\n        if seen:\n            j += 1\n            seen = False\n        elif wall[1 - i][j] == 'B':\n            i = 1 - i\n            seen = True\n        else:\n            j += 1\n            seen = False\n    return True\nfor i in range(t):\n    n = int(input())\n    wall = []\n    wall.append(input())\n    wall.append(input())\n    print('YES' if check(wall, n, 0, 0) or check(wall, n, 1, 0) else 'NO')", "def func():\n    for _ in range(int(input())):\n        x = int(input())\n        a = input()\n        b = input()\n        f = 1\n        f1 = 1\n        for i in range(x):\n            if a[i] == b[i]:\n                (f, f1) = (f1, f)\n            elif a[i] == 'B':\n                f1 = 0\n            else:\n                f = 0\n        if f or f1:\n            print('YES')\n        else:\n            print('NO')\nfunc()", "def func():\n    for _ in range(int(input())):\n        x = int(input())\n        a = input()\n        b = input()\n        f = 1\n        f1 = 1\n        for i in range(x):\n            if a[i] == b[i]:\n                (f, f1) = (f1, f)\n            elif a[i] == 'B':\n                f1 = 0\n            else:\n                f = 0\n        if f or f1:\n            print('YES')\n        else:\n            print('NO')\nfunc()", "import sys\ninput = sys.stdin.readline\n\ndef readList():\n    return list(map(int, input().split()))\n\ndef readInt():\n    return int(input())\n\ndef readInts():\n    return map(int, input().split())\n\ndef readStr():\n    return input().strip()\n\ndef solve():\n    m = readInt()\n    colors = [readStr() for _ in range(2)]\n    prev = None\n    for i in range(m):\n        if colors[0][i] == colors[1][i]:\n            continue\n        if not prev:\n            prev = (0, i) if colors[0][i] == 'B' else (1, i)\n        else:\n            r = 0 if colors[0][i] == 'B' else 1\n            if r == prev[0] and (i - prev[1]) % 2 == 0:\n                return 'NO'\n            if r != prev[0] and (i - prev[1]) % 2:\n                return 'NO'\n            prev = (r, i)\n    return 'YES'\nfor _ in range(int(input())):\n    print(solve())", "t = int(input())\n\ndef check(wall, n, i, j):\n    seen = False\n    while j < n:\n        if wall[i][j] != 'B':\n            return False\n        if seen:\n            j += 1\n            seen = False\n        elif wall[1 - i][j] == 'B':\n            i = 1 - i\n            seen = True\n        else:\n            j += 1\n            seen = False\n    return True\nfor _ in range(t):\n    n = int(input())\n    wall = []\n    wall.append(input())\n    wall.append(input())\n    print('YES' if check(wall, n, 0, 0) or check(wall, n, 1, 0) else 'NO')", "t = int(input())\nfor i in range(t):\n    m = int(input())\n    r1 = input()\n    r2 = input()\n\n    def checker(m, r1, r2):\n        r = 0\n        c = 0\n        if r1[0] == 'B' and r2[0] == 'W':\n            r = 1\n            c = 0\n        if r1[0] == 'W' and r2[0] == 'B':\n            r = 2\n            c = 0\n        for i in range(1, m):\n            if r == 0 and c == 0:\n                if r1[i] == 'B' and r2[i] == 'W':\n                    r = 1\n                    c = i\n                if r1[i] == 'W' and r2[i] == 'B':\n                    r = 2\n                    c = i\n            else:\n                if r1[i] == 'B' and r2[i] == 'B':\n                    if r == 2:\n                        r = 1\n                    else:\n                        r = 2\n                    c = i\n                if r1[i] == 'W' and r2[i] == 'B':\n                    if r == 1:\n                        return False\n                    c = i\n                if r1[i] == 'B' and r2[i] == 'W':\n                    if r == 2:\n                        return False\n                    c = i\n        return True\n    if m == 1:\n        print('YES')\n    elif checker(m, r1, r2) == True:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\n\ndef solve():\n    n = int(input())\n    (a, b) = (input(), input())\n    (chk1, chk2) = (True, True)\n    for i in range(n):\n        if a[i] == b[i]:\n            (chk1, chk2) = (chk2, chk1)\n        elif a[i] == 'B':\n            chk2 = False\n        else:\n            chk1 = False\n    if chk1 or chk2:\n        print('YES')\n    else:\n        print('NO')\nfor _ in range(t):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    (check1, check2) = (True, True)\n    for i in range(n):\n        if s1[i] == s2[i]:\n            (check1, check2) = (check2, check1)\n        elif s1[i] == 'W':\n            check1 = False\n        else:\n            check2 = False\n    if check1 == False and check2 == False:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    r1 = input()\n    r2 = input()\n    pos = -1\n    for i in range(n):\n        if r1[i] != r2[i]:\n            pos = i\n            break\n    ans = 1\n    up = 0\n    if r1[pos] == 'B':\n        up = 1\n    for i in range(pos + 1, n):\n        if up == 1:\n            if r1[i] != 'B':\n                ans = 0\n                break\n            if r2[i] == 'B':\n                up = 0\n                continue\n        else:\n            if r2[i] != 'B':\n                ans = 0\n                break\n            if r1[i] == 'B':\n                up = 1\n    if ans == 1:\n        print('YES')\n    else:\n        print('NO')", "def main():\n    for _ in range(int(input())):\n        n = int(input())\n        x = input()\n        y = input()\n        print(a(x, y, n))\n\ndef a(x, y, n):\n    head = True\n    top = True\n    for i in range(n):\n        cur = x[i] + y[i]\n        if cur == 'BB':\n            top = not top\n        elif head:\n            top = cur == 'BW'\n            head = False\n        elif top and cur == 'WB' or (not top and cur == 'BW'):\n            return 'NO'\n    return 'YES'\nmain()", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    str1 = input()\n    str2 = input()\n    bool_ans = True\n    bool1 = False\n    bool2 = False\n    if str1[0] == 'B':\n        bool1 = True\n    if str2[0] == 'B':\n        bool2 = True\n    for j in range(1, n):\n        if bool1 and bool2:\n            if str1[j] == 'B':\n                if str2[j] != 'B':\n                    bool2 = False\n            else:\n                bool1 = False\n                if str2[j] != 'B':\n                    bool2 = False\n        elif bool1 and (not bool2):\n            if str1[j] != 'B':\n                bool_ans = False\n                break\n            elif str2[j] == 'B':\n                bool1 = False\n                bool2 = True\n            else:\n                bool1 = True\n        elif not bool1 and bool2:\n            if str2[j] != 'B':\n                bool_ans = False\n                break\n            elif str1[j] == 'B':\n                bool1 = True\n                bool2 = False\n            else:\n                bool2 = True\n        else:\n            bool_ans = False\n            break\n    if bool_ans:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = []\n    for i in range(2):\n        arr.append(input())\n    pos = -1\n    for i in range(n):\n        if arr[0][i] != arr[1][i]:\n            pos = i\n            break\n    if pos == -1:\n        print('YES')\n        continue\n    isPossible = True\n    curr = 0 if arr[0][pos] == 'B' else 1\n    for i in range(pos + 1, n):\n        if arr[curr][i] == 'W':\n            isPossible = False\n            break\n        if arr[curr ^ 1][i] == 'B':\n            curr = curr ^ 1\n    if not isPossible:\n        print('NO')\n        continue\n    for i in range(pos - 1, -1, -1):\n        if arr[curr][i] == 'W':\n            isPossible = False\n            break\n        if arr[curr ^ 1][i] == 'B':\n            curr = curr ^ 1\n    if not isPossible:\n        print('NO')\n    else:\n        print('YES')", "def sol(l, t):\n    r1 = True\n    r2 = True\n    for i in range(t):\n        if l[0][i] == 'B' and l[1][i] == 'B':\n            (r1, r2) = (r2, r1)\n        elif l[0][i] == 'B':\n            r2 = False\n        elif l[1][i] == 'B':\n            r1 = False\n        else:\n            return 'NO'\n    if r1 or r2:\n        return 'YES'\n    return 'NO'\nn = int(input())\nfor i in range(n):\n    t = input()\n    row1 = input()\n    row2 = input()\n    l = [list(row1), list(row2)]\n    print(sol(l, int(t)))", "x = int(input())\n\ndef tester():\n    n = int(input())\n    row1 = list(input())\n    row2 = list(input())\n\n    def flip(bit):\n        return abs(bit - 1)\n\n    def path_exists(row1, row2, n):\n        if n == 1:\n            return True\n        prev = None\n        curr = None\n        i = 0\n        while row1[i] == row2[i]:\n            i += 1\n            if i == n - 1:\n                return True\n        if row1[i] == 'B' and row2[i] == 'W':\n            prev = 0\n        if row1[i] == 'W' and row2[i] == 'B':\n            prev = 1\n        while i < n:\n            if row1[i] == 'B' and row2[i] == 'W':\n                curr = 0\n            if row1[i] == 'W' and row2[i] == 'B':\n                curr = 1\n            if curr != prev:\n                return False\n            if row1[i] == row2[i]:\n                count = 0\n                while row1[i] == row2[i]:\n                    if i == n - 1:\n                        return True\n                    count += 1\n                    i += 1\n                if count % 2 == 1:\n                    prev = flip(curr)\n                else:\n                    prev = curr\n            else:\n                i += 1\n        return True\n    if path_exists(row1, row2, n):\n        print('YES')\n    else:\n        print('NO')\nfor i in range(x):\n    tester()", "I = input\nfor _ in [0] * int(I()):\n    I()\n    s = {0}\n    i = 0\n    for x in zip(I(), I()):\n        if x[0] == x[1]:\n            i ^= 1\n        else:\n            s |= {x[i]}\n    print('YNEOS'[len(s) > 2::2])", "for time in range(int(input())):\n    n = int(input())\n    r = [0]\n    r.append(input())\n    r.append(input())\n    s = 0\n    won = True\n    for j in range(n):\n        if s == 0:\n            if r[1][j] == 'W':\n                s = 2\n            if r[2][j] == 'W':\n                s = 1\n            continue\n        if r[s][j] == 'W':\n            won = False\n            print('NO')\n            break\n        if r[3 - s][j] == 'B':\n            s = 3 - s\n    if won:\n        print('YES')", "I = input\nfor _ in [0] * int(I()):\n    I()\n    s = i = 0\n    for x in zip(I(), I()):\n        if x[0] == x[1]:\n            i ^= 1\n        else:\n            s |= (x[i] > 'B') + 1\n    print('YNEOS'[s > 2::2])", "t = int(input())\nfor i in range(t):\n    x = int(input())\n    a = input()\n    b = input()\n    key = 0\n    t = 0\n    for y in range(len(a)):\n        if t < 0:\n            if a[y] == 'B' and b[y] == 'B':\n                t = 1\n            elif a[y] == 'B' and b[y] != 'B':\n                t = -1\n            else:\n                key = 1\n                break\n        elif t > 0:\n            if a[y] == 'B' and b[y] == 'B':\n                t = -1\n            elif a[y] != 'B' and b[y] == 'B':\n                t = 1\n            else:\n                key = 1\n                break\n        if t == 0:\n            if a[y] == 'B' and b[y] != 'B':\n                t = -1\n            if a[y] != 'B' and b[y] == 'B':\n                t = 1\n    if key == 1:\n        print('NO')\n    else:\n        print('YES')", "tc = int(input())\nfor i in range(tc):\n    l = int(input())\n    r0 = input()\n    r1 = input()\n    col = 0\n    row = None\n    firstMismatch = False\n    gone = True\n    for k in range(l):\n        if not firstMismatch:\n            if r0[k] != r1[k]:\n                firstMismatch = True\n                if r0[k] == 'B':\n                    row = 0\n                    k += 1\n                else:\n                    row = 1\n                    k += 1\n            else:\n                k += 1\n        elif r0[k] == r1[k]:\n            row = (row + 1) % 2\n            k += 1\n        elif r0[k] == 'B' and row == 0:\n            k += 1\n        elif r1[k] == 'B' and row == 1:\n            k += 1\n        else:\n            gone = False\n            break\n    if gone:\n        print('YES')\n    else:\n        print('NO')", "def func():\n    m = int(input())\n    stena = []\n    for i in range(2):\n        stena.append(input())\n    for k in range(2):\n        row = k\n        i = 0\n        if stena[row][0] == 'W':\n            continue\n        fl = True\n        while i < m - 1:\n            if stena[row][i + 1] == 'W' and stena[1 - row][i] == 'W':\n                fl = False\n                break\n            if stena[1 - row][i] == 'B':\n                row = (row + 1) % 2\n                if stena[row][i + 1] == 'W':\n                    fl = False\n                    break\n            if stena[row][i + 1] == 'B':\n                i += 1\n        if fl:\n            print('YES')\n            return\n    print('NO')\nt = int(input())\nfor o in range(t):\n    func()", "def is_paintable(wall):\n    pos = [len(wall[0]) - 1, len(wall[0]) - 1]\n    for i in range(len(wall[0])):\n        if wall[0][i] == 'B' and wall[1][i] == 'B':\n            continue\n        elif wall[0][i] == 'B':\n            pos = [0, i]\n            break\n        else:\n            pos = [1, i]\n            break\n    for i in range(pos[1] + 1, len(wall[0])):\n        if wall[0][i] == 'B' and wall[1][i] == 'B':\n            if pos[0] == 0:\n                pos[0] = 1\n            else:\n                pos[0] = 0\n        elif wall[pos[0]][i] == 'B':\n            pos[1] = i\n        else:\n            return 'NO'\n    return 'YES'\nt = int(input())\nfor i in range(t):\n    m = int(input())\n    wall = [input() for j in range(2)]\n    print(is_paintable(wall))", "def search_end(cur, mat, cnt):\n    (x, y) = cur\n    while x < m:\n        if mat[y][x] == 'W':\n            return False\n        else:\n            cnt -= 1\n        if mat[1 - y][x] != 'W':\n            y = 1 - y\n            cnt -= 1\n        x += 1\n    if not cnt:\n        return True\n    return False\nfor _ in range(int(input())):\n    m = int(input())\n    mat = [list(input()) for _ in range(2)]\n    x = search_end((0, 0), mat, mat[0].count('B') + mat[1].count('B'))\n    y = search_end((0, 1), mat, mat[0].count('B') + mat[1].count('B'))\n    print('YES' if x or y else 'NO')", "t = int(input())\nfor z in range(t):\n    m = int(input())\n    r1 = input()\n    r2 = input()\n    ans = 'YES'\n    b1 = False\n    b2 = False\n    if r1[0] == 'B':\n        b1 = True\n    if r2[0] == 'B':\n        b2 = True\n    for i in range(1, m):\n        if b1 and b2:\n            if r1[i] == 'W':\n                b1 = False\n            if r2[i] == 'W':\n                b2 = False\n        elif b1 and (not b2):\n            if r1[i] == 'W':\n                b1 = False\n            elif r2[i] == 'B':\n                b1 = False\n                b2 = True\n        elif b2 and (not b1):\n            if r2[i] == 'W':\n                b2 = False\n            elif r1[i] == 'B':\n                b2 = False\n                b1 = True\n        if b2 == b1 == False:\n            ans = 'NO'\n            break\n    print(ans)", "I = input\nfor _ in [0] * int(I()):\n    I()\n    s = i = 0\n    for x in zip(I(), I()):\n        if x[0] == x[1]:\n            i ^= 1\n        else:\n            s |= (x[i] > 'B') + 1\n    print('YNEOS'[s > 2::2])", "I = input\nfor _ in [0] * int(I()):\n    I()\n    s = i = 0\n    for x in zip(I(), I()):\n        if x[0] == x[1]:\n            i ^= 1\n        else:\n            s |= (x[i] > 'B') + 1\n    print('YNEOS'[s > 2::2])", "t = int(input())\n\ndef run():\n    num = int(input())\n    string1 = input()\n    string2 = input()\n    sub_ing = []\n    tp = 3\n    count_2B = 0\n    befor_2B = 3\n    start = 1\n    for i in range(num):\n        mid = 0\n        if string1[i] == 'B':\n            mid += 1\n        if string2[i] == 'B':\n            mid += 2\n        if mid & tp == 0:\n            print('NO')\n            return 0\n        if mid == 3:\n            if start:\n                continue\n            count_2B += 1\n        else:\n            start = 0\n            if count_2B & 1 == 1 and befor_2B & mid:\n                print('NO')\n                return 0\n            elif count_2B & 1 == 0 and befor_2B & mid == 0:\n                print('NO')\n                return 0\n            count_2B = 0\n            befor_2B = mid\n        tp = mid\n    print('YES')\nwhile t:\n    t -= 1\n    run()", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    r1 = input()\n    r2 = input()\n    up = False\n    down = False\n    for j in range(0, n):\n        if r1[j] == 'W' and r2[j] == 'W':\n            print('NO')\n            break\n        if j != 0:\n            if r1[j] == 'B':\n                if r2[j] == 'W':\n                    if up == False:\n                        print('NO')\n                        break\n                    else:\n                        up = True\n                        down = False\n                elif down and up:\n                    if j + 1 < n - 1:\n                        if r1[j + 1] == 'B' and r2[j + 1] == 'B':\n                            up = True\n                            down = True\n                        elif r1[j + 1] == 'W' and r2[j + 1] == 'B':\n                            up = False\n                            down = True\n                        elif r1[j + 1] == 'B' and r2[j + 1] == 'W':\n                            up = True\n                            down = False\n                elif down:\n                    up = True\n                    down = False\n                elif up:\n                    up = False\n                    down = True\n            elif down == False:\n                print('NO')\n                break\n            else:\n                up = False\n                down = True\n        else:\n            if r1[j] == 'B':\n                up = True\n            if r2[j] == 'B':\n                down = True\n        if j == n - 1:\n            print('YES')", "def switch(x):\n    if x == 1:\n        return 2\n    else:\n        return 1\nt = int(input())\nfor i in range(t):\n    m = int(input())\n    r1 = input()\n    r2 = input()\n    r = [0, r1, r2]\n    flag = 0\n    if r1[0] == 'B':\n        (x, y) = (1, 1)\n        for j in range(m - 1):\n            if r[switch(x)][y - 1] == 'B':\n                x = switch(x)\n            if r[x][y] == 'B':\n                y += 1\n            else:\n                flag = flag + 1\n                break\n    else:\n        flag = flag + 1\n    if r2[0] == 'B':\n        (x, y) = (2, 1)\n        for j in range(m - 1):\n            if r[switch(x)][y - 1] == 'B':\n                x = switch(x)\n            if r[x][y] == 'B':\n                y += 1\n            else:\n                flag = flag + 1\n                break\n    else:\n        flag += 1\n    if flag == 2:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    m = int(input())\n    s1 = input()\n    s2 = input()\n    bl = 0\n    chot = 0\n    j = 0\n    while bl == 0 and j <= m - 1:\n        if s1[j] == 'B' and s2[j] == 'B' and (chot != 0):\n            if chot == 1:\n                chot = 2\n            else:\n                chot = 1\n        if s1[j] == 'W':\n            if chot == 1:\n                bl = 1\n            else:\n                chot = 2\n        if s2[j] == 'W':\n            if chot == 2:\n                bl = 1\n            else:\n                chot = 1\n        j += 1\n    if bl == 0:\n        print('YES')\n    else:\n        print('NO')", "def solve():\n    n = int(input())\n    s = [input(), input()]\n    for t in range(2):\n        x = t\n        ok = 1\n        for i in range(n):\n            if s[x][i] != 'B':\n                ok = 0\n            if s[not x][i] == 'B':\n                x ^= 1\n        if ok:\n            print('YES')\n            return\n    print('NO')\nt = int(input())\nfor _ in range(t):\n    solve()", "def ss(n, dp, i, j):\n    d = [['w'] * n, ['w'] * n]\n    while j < n:\n        if dp[i][j] == 'b':\n            d[i][j] = 'b'\n        else:\n            break\n        if dp[i ^ 1][j] == 'b' and d[i ^ 1][j] == 'w':\n            i = i ^ 1\n        else:\n            j += 1\n    if d == dp:\n        return 1\n    return 0\nfor _ in range(int(input())):\n    n = int(input())\n    dp = []\n    a = list(input().lower())\n    dp.append(a)\n    b = list(input().lower())\n    dp.append(b)\n    j = 0\n    i = 0\n    res = 0\n    while j < n:\n        if dp[0][j] == 'b' or dp[1][j] == 'b':\n            break\n        j += 1\n    if j < n:\n        if dp[0][j] == 'b':\n            res = ss(n, dp, 0, j)\n        if res == 0 and dp[1][j] == 'b':\n            res = ss(n, dp, 1, j)\n    if res == 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in ' ' * int(input()):\n    n = int(input())\n    x = input()\n    y = input()\n    a = -1\n    for i in range(n):\n        if a != -1:\n            if x[i] == y[i]:\n                if x[i] == 'B':\n                    a = 1 - a\n            elif a == 0 and x[i] == 'W' or (a == 1 and y[i] == 'W'):\n                print('NO')\n                break\n        elif x[i] != y[i]:\n            if x[i] == 'B':\n                a = 0\n            else:\n                a = 1\n    else:\n        print('YES')", "def checkPath(row, c1, c2, n):\n    for i in range(n - 1):\n        if (c1[i + 1] == 'B') & (c2[i + 1] == 'B') & (row == 'UP'):\n            row = 'Down'\n        elif (c1[i + 1] == 'B') & (c2[i + 1] == 'B') & (row == 'Down'):\n            row = 'UP'\n        elif (row == 'UP') & (c1[i + 1] == 'W'):\n            return 'NO'\n        elif (row == 'Down') & (c2[i + 1] == 'W'):\n            return 'NO'\n    return 'YES'\nt = int(input())\nresult = []\nfor i in range(t):\n    n = int(input())\n    c1 = input()\n    c2 = input()\n    if (c1[0] == 'B') & (c2[0] == 'B'):\n        if (checkPath('Down', c1, c2, n) == 'YES') | (checkPath('UP', c1, c2, n) == 'YES'):\n            result.append('YES')\n        else:\n            result.append('NO')\n    elif (c1[0] == 'W') & (c2[0] == 'B'):\n        result.append(checkPath('Down', c1, c2, n))\n    else:\n        result.append(checkPath('UP', c1, c2, n))\nfor i in result:\n    print(i)", "iter = int(input())\nfor _ in range(iter):\n    n = int(input())\n    top = input()\n    bot = input()\n    level = [top, bot]\n    l = 0\n    firstw = 0\n    ans = 1\n    i = 0\n    while i < n - 1:\n        if firstw:\n            if level[l][i + 1] == 'B':\n                if level[l ^ 1][i + 1] == 'B':\n                    l = l ^ 1\n            else:\n                ans = 0\n        elif level[0][i] == 'W':\n            firstw = 1\n            l = 1\n            i -= 1\n        elif level[1][i] == 'W':\n            firstw = 1\n            l = 0\n            i -= 1\n        i += 1\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "import math\nfor i in range(int(input())):\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    d = 1\n    if s1[0] == 'B':\n        c = 0\n        x = 0\n        for i in range(1, n):\n            if x == 0:\n                if s1[i] == 'B' and s2[i] == 'W':\n                    x = 0\n                elif s1[i] == 'B' and s2[i] == 'B':\n                    x = 1\n                else:\n                    c = c + 1\n            elif s1[i] == 'W' and s2[i] == 'B':\n                x = 1\n            elif s1[i] == 'B' and s2[i] == 'B':\n                x = 0\n            else:\n                c = c + 1\n        d = c\n    if s2[0] == 'B':\n        c = 0\n        x = 1\n        for i in range(1, n):\n            if x == 0:\n                if s1[i] == 'B' and s2[i] == 'W':\n                    x = 0\n                elif s1[i] == 'B' and s2[i] == 'B':\n                    x = 1\n                else:\n                    c = c + 1\n            elif s1[i] == 'W' and s2[i] == 'B':\n                x = 1\n            elif s1[i] == 'B' and s2[i] == 'B':\n                x = 0\n            else:\n                c = c + 1\n    if c == 0 or d == 0:\n        print('YES')\n    else:\n        print('NO')", "I = input\nfor _ in [0] * int(I()):\n    I()\n    s = i = 0\n    for x in zip(I(), I()):\n        if x[0] == x[1]:\n            i ^= 1\n        else:\n            s |= (x[i] > 'B') + 1\n    print('YNEOS'[s > 2::2])", "def is_paintable(wall):\n    pos = [-1, -1]\n    for i in range(len(wall[0])):\n        if wall[0][i] == 'B' and wall[1][i] == 'B':\n            continue\n        elif wall[0][i] == 'B':\n            pos = [0, i]\n            break\n        else:\n            pos = [1, i]\n            break\n    for i in range(pos[1] + 1, len(wall[0])):\n        if wall[0][i] == 'B' and wall[1][i] == 'B':\n            if pos[0] == 0:\n                pos[0] = 1\n            else:\n                pos[0] = 0\n        elif wall[pos[0]][i] == 'B':\n            pos[1] = i\n        else:\n            return 'NO'\n    return 'YES'\nt = int(input())\nfor i in range(t):\n    m = int(input())\n    wall = [input() for j in range(2)]\n    print(is_paintable(wall))", "for _ in range(int(input())):\n    n = int(input())\n    wall = []\n    wall.append(input())\n    wall.append(input())\n    state = None\n    res = True\n    for i in range(n):\n        if wall[0][i] == 'B' and wall[1][i] == 'B':\n            if state != None:\n                state = 0 if state == 1 else 1\n        if wall[0][i] == 'B' and wall[1][i] == 'W':\n            if state == None or state == 0:\n                state = 0\n                continue\n            else:\n                res = False\n                break\n        if wall[0][i] == 'W' and wall[1][i] == 'B':\n            if state == None or state == 1:\n                state = 1\n                continue\n            else:\n                res = False\n                break\n    print('YES') if res else print('NO')", "from collections import defaultdict\n\ndef f1(a, b):\n    if a == 'B' and b == 'B':\n        return 3\n    elif a == 'B':\n        return 1\n    else:\n        return 2\nfor _ in range(int(input())):\n    ln = int(input())\n    a = input()\n    b = input()\n    st = [a, b]\n    pre = 3\n    bval = True\n    for i in range(ln):\n        b = f1(st[0][i], st[1][i])\n        if b == 3:\n            if pre == 3:\n                continue\n            else:\n                pre = 2 if pre == 1 else 1\n        elif pre != b and pre != 3:\n            bval = not bval\n            print('NO')\n            break\n        else:\n            pre = b\n    if bval:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    m = []\n    m.append(list(input()))\n    m.append(list(input()))\n    last = -1\n    db = 0\n    f = True\n    for c in range(n):\n        if m[0][c] == 'B' and m[1][c] == 'B':\n            db += 1\n        elif m[0][c] == 'B':\n            if db % 2 == 0 and (last == 0 or last == -1):\n                last = 0\n            elif db % 2 == 1 and (last == 1 or last == -1):\n                last = 0\n            else:\n                f = False\n                break\n            db = 0\n        elif m[1][c] == 'B':\n            if db % 2 == 0 and (last == 1 or last == -1):\n                last = 1\n            elif db % 2 == 1 and (last == 0 or last == -1):\n                last = 1\n            else:\n                f = False\n                break\n            db = 0\n        else:\n            f = False\n            break\n    if f:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    s2 = input()\n    l1 = list(s)\n    l2 = list(s2)\n    c = 0\n    vis1 = 0\n    vis2 = 0\n    for i in range(n - 1):\n        a = l1[i]\n        b = l2[i]\n        if a == b and a == 'B':\n            if vis1 == 1:\n                if l2[i + 1] == 'W':\n                    c = c + 1\n                    break\n                else:\n                    vis2 = 1\n                    vis1 = 0\n            elif vis2 == 1:\n                if l1[i + 1] == 'W':\n                    c = c + 1\n                    break\n                else:\n                    vis1 = 1\n                    vis2 = 0\n            else:\n                pass\n        elif a == 'B':\n            if l1[i + 1] == 'W':\n                c = c + 1\n                break\n            else:\n                vis1 = 1\n                vis2 = 0\n        elif l2[i + 1] == 'W':\n            c = c + 1\n            break\n        else:\n            vis2 = 1\n            vis1 = 0\n    if c == 0:\n        print('YES')\n    else:\n        print('NO')", "def solve(state, a):\n    for i in range(1, len(a)):\n        if a[i] == state or (i == len(a) - 1 and a[i] == 2):\n            continue\n        elif a[i] == 2:\n            state *= -1\n        else:\n            return False\n    return True\nt = int(input())\nfor i in range(t):\n    m = int(input())\n    s1 = input()\n    s2 = input()\n    if m == 1:\n        print('YES')\n    else:\n        l = [s1, s2]\n        count = [1] * m\n        for i in range(m):\n            if l[0][i] == 'B' and l[1][i] == 'B':\n                count[i] = 2\n            else:\n                count[i] = 1 if l[0][i] == 'B' else -1\n        if count[0] == 1:\n            if solve(1, count):\n                print('YES')\n            else:\n                print('NO')\n        elif count[0] == -1:\n            if solve(-1, count):\n                print('YES')\n            else:\n                print('NO')\n        elif solve(-1, count) or solve(1, count):\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    s = [input() for i in range(2)]\n    pos = -1\n    for i in range(n):\n        if s[0][i] != s[1][i]:\n            pos = i\n    if pos == -1:\n        print('YES')\n        continue\n    ok = True\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos + 1, n):\n        if s[cur][i] == 'W':\n            ok = False\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos - 1, -1, -1):\n        if s[cur][i] == 'W':\n            ok = False\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    print('YES' if ok else 'NO')", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    c1 = str(input())\n    c2 = str(input())\n    ct = 0\n    prev = -1\n    x = True\n    for j in range(len(c1)):\n        if (c1[j], c2[j]) == ('B', 'B'):\n            ct += 1\n        elif ct % 2 == 0:\n            if prev != -1:\n                if (c1[j], c2[j]) != (c1[prev], c2[prev]):\n                    x = False\n                    break\n                else:\n                    ct = 0\n                    prev = j\n            else:\n                ct = 0\n                prev = j\n        elif prev != -1:\n            if (c1[j], c2[j]) == (c1[prev], c2[prev]):\n                x = False\n                break\n            else:\n                ct = 0\n                prev = j\n        else:\n            ct = 0\n            prev = j\n    if x == True:\n        print('YES')\n    else:\n        print('NO')", "def paint(wall, pos, prev):\n    n = len(wall[0])\n    for i in range(n * 2):\n        if pos[0] == 0:\n            if prev != 1 and wall[1][pos[1]] == 'B':\n                prev = 0\n                pos[0] = 1\n            elif pos[1] + 1 == n:\n                return True\n            elif wall[0][pos[1] + 1] == 'B':\n                prev = 0\n                pos[1] = pos[1] + 1\n            else:\n                return False\n        elif prev != 0 and wall[0][pos[1]] == 'B':\n            prev = 1\n            pos[0] = 0\n        elif pos[1] + 1 == n:\n            return True\n        elif wall[1][pos[1] + 1] == 'B':\n            prev = 1\n            pos[1] = pos[1] + 1\n        else:\n            return False\n    return True\n\ndef is_paintable(wall):\n    if wall[0][0] == 'B' and wall[1][0] != 'B':\n        ans = paint(wall, pos=[0, 0], prev=0)\n    elif wall[1][0] == 'B' and wall[0][0] != 'B':\n        ans = paint(wall, pos=[1, 0], prev=1)\n    else:\n        ans = paint(wall, pos=[0, 0], prev=0)\n        if ans == True:\n            return 'YES'\n        ans = paint(wall, pos=[1, 0], prev=1)\n    return 'YES' if ans == True else 'NO'\nt = int(input())\nfor i in range(t):\n    m = int(input())\n    wall = [input() for j in range(2)]\n    print(is_paintable(wall))", "t = int(input())\nfor _ in range(t):\n    m = int(input())\n    wall = []\n    wall.append(input())\n    wall.append(input())\n    check = False\n    visited = [[False] * m for i in range(2)]\n    if wall[0][0] == 'B':\n        i = 0\n        j = 0\n        while j < m - 1:\n            visited[i][j] = True\n            if wall[1 - i][j] == 'B' and (not visited[1 - i][j]):\n                i = 1 - i\n            elif wall[i][j + 1] == 'B':\n                j += 1\n            else:\n                break\n        if j == m - 1:\n            check = True\n    visited = [[False] * m for i in range(2)]\n    if wall[1][0] == 'B' and (not check):\n        i = 1\n        j = 0\n        while j < m - 1:\n            visited[i][j] = True\n            if wall[1 - i][j] == 'B' and (not visited[1 - i][j]):\n                i = 1 - i\n            elif wall[i][j + 1] == 'B':\n                j += 1\n            else:\n                break\n        if j == m - 1:\n            check = True\n    if check:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    a = int(input())\n    b = input()\n    c = input()\n    d = 0\n    e = 0\n    g = 0\n    for i in range(0, a):\n        if b[i] == 'B' and c[i] == 'B':\n            e += 1\n        else:\n            if e % 2 == 1 and i != 1:\n                if c[i] == 'W' and g == 1 or (b[i] == 'W' and g == 2):\n                    d = 1\n                    e = 0\n                    break\n            elif e % 2 == 0:\n                if c[i] == 'W' and g == 2 or (b[i] == 'W' and g == 1):\n                    d = 1\n                    e = 0\n                    break\n            if b[i] == 'B':\n                g = 1\n            else:\n                g = 2\n            e = 0\n    if d == 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in [0] * t:\n    n = int(input())\n    (s, t) = (input(), input())\n    cr = 0\n    cri = 0\n    index = 1\n    tr = 1\n    for i in range(n):\n        if s[i] == 'W':\n            cri = i\n            index = i + 1\n            cr = 0\n            break\n        if t[i] == 'W':\n            cri = i\n            index = i + 1\n            cr = 1\n            break\n    while index <= n - 1:\n        if cr == 0:\n            if (index - cri) % 2 == 0:\n                if s[index] == 'W':\n                    tr = 0\n                    break\n                if t[index] == 'W':\n                    cri = index\n                    cr = 1\n            else:\n                if s[index] == 'W':\n                    cri = index\n                    cr = 0\n                if t[index] == 'W':\n                    tr = 0\n                    break\n        elif (index - cri) % 2 == 0:\n            if t[index] == 'W':\n                tr = 0\n                break\n            if s[index] == 'W':\n                cri = index\n                cr = 0\n        else:\n            if t[index] == 'W':\n                cri = index\n                cr = 1\n            if s[index] == 'W':\n                tr = 0\n                break\n        index += 1\n    if tr == 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = []\n    a.append(list(input()))\n    a.append(list(input()))\n    row = 0\n    first = 0\n    ans = 1\n    for j in range(n):\n        flag = 0\n        if a[0][j] == 'B':\n            flag += 1\n        if a[1][j] == 'B':\n            flag += 2\n        if flag == 3:\n            row += 1\n        elif flag != 3 and row == 0:\n            if first != 0 and first != flag:\n                ans = 0\n                break\n            first = flag\n        elif flag != 3 and row != 0:\n            if row % 2 == 1 and first == flag:\n                ans = 0\n                break\n            elif row % 2 == 0 and first != flag and (first != 0):\n                ans = 0\n                break\n            row = 0\n            first = flag\n    if ans == 0:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    s = [input() for i in range(2)]\n    pos = -1\n    for i in range(n):\n        if s[0][i] != s[1][i]:\n            pos = i\n    if pos == -1:\n        print('YES')\n        continue\n    ok = True\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos + 1, n):\n        if s[cur][i] == 'W':\n            ok = False\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos - 1, -1, -1):\n        if s[cur][i] == 'W':\n            ok = False\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    print('YES' if ok else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    s = [input() for i in range(2)]\n    pos = -1\n    for i in range(n):\n        if s[0][i] != s[1][i]:\n            pos = i\n    if pos == -1:\n        print('YES')\n        continue\n    ok = True\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos + 1, n):\n        if s[cur][i] == 'W':\n            ok = False\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos - 1, -1, -1):\n        if s[cur][i] == 'W':\n            ok = False\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    print('YES' if ok else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    a1 = list(input())\n    a2 = list(input())\n    if n == 1:\n        print('YES')\n    else:\n        c = 0\n        i = 1\n        while i < n:\n            if a1[i] == 'W' and a2[i] == 'B' and (a2[i - 1] == 'W') and (a1[i - 1] == 'B'):\n                c = 1\n                break\n            elif a1[i] == 'B' and a2[i] == 'W' and (a2[i - 1] == 'B') and (a1[i - 1] == 'W'):\n                c = 1\n                break\n            elif a1[i] == 'B' and a2[i] == 'B' and (i == n - 1):\n                break\n            elif a1[i] == 'B' and a2[i] == 'B' and (a1[i - 1] != 'B' or a2[i - 1] != 'B'):\n                j = i + 1\n                c1 = 1\n                while a1[j] == 'B' and a2[j] == 'B' and (j != n - 1):\n                    c1 += 1\n                    j += 1\n                if a1[j] == 'B' and a2[j] == 'B' and (j == n - 1):\n                    break\n                if c1 % 2 == 0 and a1[j] != a1[i - 1] or (c1 % 2 == 1 and a1[j] == a1[i - 1]):\n                    c = 1\n                    break\n                i += c1\n            else:\n                i += 1\n        if c == 1:\n            print('NO')\n        else:\n            print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    s = [input() for i in range(2)]\n    pos = -1\n    for i in range(n):\n        if s[0][i] != s[1][i]:\n            pos = i\n    if pos == -1:\n        print('YES')\n        continue\n    ok = True\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos + 1, n):\n        if s[cur][i] == 'W':\n            ok = False\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos - 1, -1, -1):\n        if s[cur][i] == 'W':\n            ok = False\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    print('YES' if ok else 'NO')", "def start1(a, b):\n    for i in range(len(a)):\n        if a[i] == b[i] == 'W':\n            return True\n    return False\n\ndef start2(a, b):\n    for i in range(len(a) - 1):\n        if a[i] == b[i + 1] == 'W':\n            return True\n    return False\n\ndef start3(la, lb):\n    a = 0\n    b = 0\n    c = 0\n    d = 0\n    for i in range(len(la)):\n        c = a\n        d = b\n        if la[i] == 'W':\n            a = i + 1\n            if c == d:\n                continue\n            elif c > d and (a - c) % 2 == 0:\n                return True\n            elif c < d and (a - d) % 2 == 1:\n                return True\n        elif lb[i] == 'W':\n            b = i + 1\n            if c == d:\n                continue\n            elif c > d and (b - c) % 2 == 1:\n                return True\n            elif c < d and (b - d) % 2 == 0:\n                return True\n    return False\nfor i in range(int(input())):\n    x = int(input())\n    la = input()\n    lb = input()\n    if start1(la, lb):\n        print('NO')\n        continue\n    if start2(la, lb):\n        print('NO')\n        continue\n    if start2(lb, la):\n        print('NO')\n        continue\n    if start3(la, lb):\n        print('NO')\n        continue\n    print('YES')", "def paint(wall, pos, prev):\n    for i in range(len(wall[0]) * 2):\n        if pos[0] == 0:\n            if prev != 1 and wall[1][pos[1]] == 'B':\n                prev = 0\n                pos[0] = 1\n            elif pos[1] + 1 >= len(wall[0]):\n                return True\n            elif wall[0][pos[1] + 1] == 'B':\n                prev = 0\n                pos[1] = pos[1] + 1\n            else:\n                return False\n        elif prev != 0 and wall[0][pos[1]] == 'B':\n            prev = 1\n            pos[0] = 0\n        elif pos[1] + 1 >= len(wall[0]):\n            return True\n        elif wall[1][pos[1] + 1] == 'B':\n            prev = 1\n            pos[1] = pos[1] + 1\n        else:\n            return False\n    return True\n\ndef is_paintable(wall):\n    if wall[0][0] == 'B' and wall[1][0] != 'B':\n        ans = paint(wall, pos=[0, 0], prev=0)\n    elif wall[1][0] == 'B' and wall[0][0] != 'B':\n        ans = paint(wall, pos=[1, 0], prev=1)\n    else:\n        ans = paint(wall, pos=[0, 0], prev=0)\n        if ans == True:\n            return 'YES'\n        ans = paint(wall, pos=[1, 0], prev=1)\n    return 'YES' if ans == True else 'NO'\nt = int(input())\nfor i in range(t):\n    m = int(input())\n    wall = [input() for j in range(2)]\n    print(is_paintable(wall))", "for _ in range(int(input())):\n    n = int(input())\n    s = [input() for i in range(2)]\n    pos = -1\n    for i in range(n):\n        if s[0][i] != s[1][i]:\n            pos = i\n    if pos == -1:\n        print('YES')\n        continue\n    ok = True\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos + 1, n):\n        if s[cur][i] == 'W':\n            ok = False\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos - 1, -1, -1):\n        if s[cur][i] == 'W':\n            ok = False\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    print('YES' if ok else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    s = [input() for i in range(2)]\n    pos = -1\n    for i in range(n):\n        if s[0][i] != s[1][i]:\n            pos = i\n    if pos == -1:\n        print('YES')\n        continue\n    ok = True\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos + 1, n):\n        if s[cur][i] == 'W':\n            ok = False\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos - 1, -1, -1):\n        if s[cur][i] == 'W':\n            ok = False\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    print('YES' if ok else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    s = [input() for i in range(2)]\n    pos = -1\n    for i in range(n):\n        if s[0][i] != s[1][i]:\n            pos = i\n    if pos == -1:\n        print('YES')\n        continue\n    ok = True\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos + 1, n):\n        if s[cur][i] == 'W':\n            ok = False\n            break\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos - 1, -1, -1):\n        if s[cur][i] == 'W':\n            ok = False\n            break\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    print('YES' if ok else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    s = [input() for i in range(2)]\n    pos = -1\n    for i in range(n):\n        if s[0][i] != s[1][i]:\n            pos = i\n    if pos == -1:\n        print('YES')\n        continue\n    ok = True\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos + 1, n):\n        if s[cur][i] == 'W':\n            ok = False\n            break\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    if ok == False:\n        print('NO')\n        break\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos - 1, -1, -1):\n        if s[cur][i] == 'W':\n            ok = False\n            break\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    print('YES' if ok else 'NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    wall = [input(), input()]\n    answer = 'YES'\n    a = n\n    for i in range(n):\n        if wall[0][i] == 'B' and wall[1][i] == 'B':\n            pass\n        elif wall[0][i] == 'B':\n            a = i\n            now = 0\n            break\n        elif wall[1][i] == 'B':\n            a = i\n            now = 1\n            break\n        else:\n            answer = 'NO'\n            break\n    if answer == 'NO':\n        print(answer)\n        continue\n    start = -1\n    for i in range(a, n):\n        if wall[0][i] == 'B' and wall[1][i] == 'B':\n            if start == -1:\n                start = i\n                count = 1\n            else:\n                count += 1\n        elif start != -1:\n            if wall[(now + count) % 2][i] == 'B':\n                now = (now + count) % 2\n                start = -1\n            else:\n                answer = 'NO'\n                break\n        if not (wall[0][i] == 'B' and wall[1][i] == 'B') and i != n - 1 and (wall[now][i + 1] != 'B'):\n            answer = 'NO'\n            break\n    print(answer)", "t = int(input())\nfor _ in range(t):\n    m = int(input())\n    a = [[i for i in input()]]\n    a.append([i for i in input()])\n    coord = [0, 0]\n    f = 0\n    for i in range(m - 1):\n        if a[0][i] == 'B' and a[0][i + 1] == 'W':\n            coord = [0, i]\n            break\n        elif a[1][i] == 'B' and a[1][i + 1] == 'W':\n            coord = [1, i]\n            break\n        elif a[0][i] == 'B' and a[1][i] == 'W':\n            coord = [0, i]\n            break\n        elif a[1][i] == 'B' and a[0][i] == 'W':\n            coord = [1, i]\n            break\n    else:\n        coord = [1, m - 1]\n    for i in range(coord[1], m - 1):\n        coord[1] = i\n        check = 1 - coord[0]\n        if a[check][i] == 'B':\n            a[coord[0]][i] = 'W'\n            coord[0] = check\n        if a[coord[0]][coord[1] + 1] == 'W':\n            for j in range(coord[1] + 1, m):\n                if a[0][j] == 'B' or a[1][j] == 'B':\n                    print('NO')\n                    f = 1\n                    break\n            else:\n                print('YES')\n                break\n        if f:\n            break\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    s = [input() for i in range(2)]\n    pos = -1\n    for i in range(n):\n        if s[0][i] != s[1][i]:\n            pos = i\n    if pos == -1:\n        print('YES')\n        continue\n    ok = True\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos + 1, n):\n        if s[cur][i] == 'W':\n            ok = False\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos - 1, -1, -1):\n        if s[cur][i] == 'W':\n            ok = False\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    print('YES' if ok else 'NO')", "nCases = int(input())\nfor _ in range(nCases):\n    m = int(input())\n    F_1 = list(input())\n    F_2 = list(input())\n    pin = [F_1[0], F_2[0]]\n    check = False\n    if pin[0] == pin[1] == 'B':\n        check = 0\n    elif pin[0] == 'B':\n        check = 1\n    elif pin[1] == 'B':\n        check = 2\n    for i in range(1, m):\n        if check == 0:\n            if F_1[i] == F_2[i] == 'B':\n                pass\n            elif F_1[i] == 'B':\n                check = 1\n            elif F_2[i] == 'B':\n                check = 2\n        elif F_1[i] == F_2[i] == 'B':\n            check = 3 - check\n        elif F_1[i] == pin[0] == 'B' and check == 1 or (F_2[i] == pin[1] == 'B' and check == 2):\n            pass\n        else:\n            check = -1\n            break\n        pin = [F_1[i], F_2[i]]\n    if check >= 0:\n        print('YES')\n    else:\n        print('NO')", "def find(m):\n    s1 = input()\n    s2 = input()\n    flag = True\n    array = [-1, -1]\n    if s1[0] == 'B':\n        array[0] = 0\n    if s2[0] == 'B':\n        array[1] = 1\n    for i in range(1, m):\n        b = array.copy()\n        if (s1[i] == 'B' and array[0] == -1) and (s2[i] == 'B' and array[1] == -1):\n            flag = False\n            break\n        if s1[i] == 'B' and array[0] == -1 and (s2[i] == 'W') or (s2[i] == 'B' and array[1] == -1 and (s1[i] == 'W')):\n            flag = False\n            break\n        if s1[i] == 'B' and array[0] == -1:\n            array[0] = 0\n            array[1] = -1\n        if s2[i] == 'B' and b[1] == -1:\n            array[1] = 1\n            array[0] = -1\n        if s1[i] != 'B':\n            array[0] = -1\n        if s2[i] != 'B':\n            array[1] = -1\n    if flag:\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nfor i in range(0, t):\n    m = int(input())\n    find(m)", "for _ in range(int(input())):\n    n = int(input())\n    s = [input() for i in range(2)]\n    pos = -1\n    for i in range(n):\n        if s[0][i] != s[1][i]:\n            pos = i\n    if pos == -1:\n        print('YES')\n        continue\n    ok = True\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos + 1, n):\n        if s[cur][i] == 'W':\n            ok = False\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos - 1, -1, -1):\n        if s[cur][i] == 'W':\n            ok = False\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    print('YES' if ok else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    s = [input() for i in range(2)]\n    pos = -1\n    for i in range(n):\n        if s[0][i] != s[1][i]:\n            pos = i\n    if pos == -1:\n        print('YES')\n        continue\n    ok = True\n    curr = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos + 1, n):\n        if s[curr][i] == 'W':\n            ok = False\n        if s[curr ^ 1][i] == 'B':\n            curr = curr ^ 1\n    curr = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos - 1, -1, -1):\n        if s[curr][i] == 'W':\n            ok = False\n        if s[curr ^ 1][i] == 'B':\n            curr = curr ^ 1\n    print('YES' if ok else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    s = [input() for i in range(2)]\n    pos = -1\n    for i in range(n):\n        if s[0][i] != s[1][i]:\n            pos = i\n    if pos == -1:\n        print('YES')\n        continue\n    ok = True\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos + 1, n):\n        if s[cur][i] == 'W':\n            ok = False\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos - 1, -1, -1):\n        if s[cur][i] == 'W':\n            ok = False\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    print('YES' if ok else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    s = [input() for i in range(2)]\n    pos = -1\n    for i in range(n):\n        if s[0][i] != s[1][i]:\n            pos = i\n    if pos == -1:\n        print('YES')\n        continue\n    ok = True\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos + 1, n):\n        if s[cur][i] == 'W':\n            ok = False\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos - 1, -1, -1):\n        if s[cur][i] == 'W':\n            ok = False\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    print('YES' if ok else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    s = [input() for i in range(2)]\n    pos = -1\n    for i in range(n):\n        if s[0][i] != s[1][i]:\n            pos = i\n    if pos == -1:\n        print('YES')\n        continue\n    ok = True\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos + 1, n):\n        if s[cur][i] == 'W':\n            ok = False\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos - 1, -1, -1):\n        if s[cur][i] == 'W':\n            ok = False\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    print('YES' if ok else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    s = [input() for i in range(2)]\n    pos = -1\n    for i in range(n):\n        if s[0][i] != s[1][i]:\n            pos = i\n    if pos == -1:\n        print('YES')\n        continue\n    ok = True\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos + 1, n):\n        if s[cur][i] == 'W':\n            ok = False\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos - 1, -1, -1):\n        if s[cur][i] == 'W':\n            ok = False\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    print('YES' if ok else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    s = [input() for i in range(2)]\n    pos = -1\n    for i in range(n):\n        if s[0][i] != s[1][i]:\n            pos = i\n    if pos == -1:\n        print('YES')\n        continue\n    ok = True\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos + 1, n):\n        if s[cur][i] == 'W':\n            ok = False\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos - 1, -1, -1):\n        if s[cur][i] == 'W':\n            ok = False\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    print('YES' if ok else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    s = [input() for i in range(2)]\n    pos = -1\n    for i in range(n):\n        if s[0][i] != s[1][i]:\n            pos = i\n    if pos == -1:\n        print('YES')\n        continue\n    ok = True\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos + 1, n):\n        if s[cur][i] == 'W':\n            ok = False\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos - 1, -1, -1):\n        if s[cur][i] == 'W':\n            ok = False\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    print('YES' if ok else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    s = [input() for i in range(2)]\n    pos = -1\n    for i in range(n):\n        if s[0][i] != s[1][i]:\n            pos = i\n    if pos == -1:\n        print('YES')\n        continue\n    ok = True\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos + 1, n):\n        if s[cur][i] == 'W':\n            ok = False\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    cur = 0 if s[0][pos] == 'B' else 1\n    for i in range(pos - 1, -1, -1):\n        if s[cur][i] == 'W':\n            ok = False\n        if s[cur ^ 1][i] == 'B':\n            cur ^= 1\n    print('YES' if ok else 'NO')", "import os\nimport math\nimport collections\nimport bisect\nimport functools\nimport itertools\nimport heapq\nimport sys\nsys.setrecursionlimit(100000000)\n\ndef solve(a, n):\n    target = a[0].count('B') + a[1].count('B')\n\n    def dfs(x, y, arr):\n        while y < n - 1:\n            (i, j) = (1 - x, y)\n            if 0 <= i < 2 and 0 <= j < n and (arr[i][j] == 'B'):\n                arr[i][j] = 'W'\n                (x, y) = (i, j)\n                continue\n            (i, j) = (x, y + 1)\n            if 0 <= i < 2 and 0 <= j < n and (a[i][j] == 'B'):\n                arr[i][j] = 'W'\n                (x, y) = (i, j)\n                continue\n            return False\n        return True\n    if a[0][0] == 'B':\n        a1 = [a[0][:], a[1][:]]\n        a1[0][0] = 'W'\n        if dfs(0, 0, a1):\n            return True\n    if a[1][0] == 'B':\n        a1 = [a[0][:], a[1][:]]\n        a1[1][0] = 'W'\n        if dfs(1, 0, a1):\n            return True\n    return False\ndirects = [[-1, 0], [0, -1], [1, 0], [0, 1]]\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [[c for c in input()], [c for c in input()]]\n    ok = solve(a, n)\n    if ok:\n        print('YES')\n    else:\n        print('NO')", "from math import *\nfrom collections import deque\nfrom functools import lru_cache\nfrom collections import defaultdict, Counter\nfrom bisect import *\nMOD = 10 ** 9 + 7\nimport sys\n\ndef solution():\n    m = int(input())\n    arr = []\n    arr.append(list(input()))\n    arr.append(list(input()))\n\n    def dfs(i, j):\n        if j >= len(arr[0]):\n            return True\n        if arr[i][j] == 'W':\n            return False\n        nbr_i = 1 - i\n        if arr[nbr_i][j] == 'B':\n            arr[i][j] = '#'\n            ans = dfs(nbr_i, j)\n            arr[i][j] = 'B'\n            return ans\n        ans = dfs(i, j + 1)\n        return ans\n    res = False\n    if arr[0][0] == 'B':\n        res = res or dfs(0, 0)\n    if not res and arr[1][0] == 'B':\n        res = res or dfs(1, 0)\n    print(['NO', 'YES'][res])\n\ndef main():\n    t = 1\n    t = int(input())\n    for _ in range(t):\n        solution()\nimport sys\nimport threading\nsys.setrecursionlimit(10 ** 6)\nthreading.stack_size(1 << 27)\nthread = threading.Thread(target=main)\nthread.start()\nthread.join()", "for _ in range(int(input())):\n    n = int(input())\n    rowone = input()\n    rowtwo = input()\n    s = []\n    for i in range(n):\n        x = 0\n        if len(s) != 0:\n            x = s[-1]\n        y = 0\n        if rowone[i] == 'B':\n            y = 1\n        if rowtwo[i] == 'B' and rowone[i] == 'W':\n            y = 2\n        if rowtwo[i] == 'B' and rowone[i] == 'B':\n            y = 3\n        if x != 0:\n            if x == 3 and y == 3:\n                s.pop()\n            else:\n                s.append(y)\n        else:\n            s.append(y)\n    check = 1\n    prev = 0\n    if len(s) != 0:\n        prev = s[-1]\n        s.pop()\n    while len(s) != 0:\n        curr = s[-1]\n        s.pop()\n        if prev == 3:\n            prev = curr\n        if curr == 3:\n            if prev == 1:\n                prev = 2\n            else:\n                prev = 1\n        elif prev != curr:\n            check = 0\n            break\n    if check == 1:\n        print('YES')\n    else:\n        print('NO')", "for t in range(int(input())):\n    m = int(input())\n    s0 = list(input())\n    s1 = list(input())\n    i = 0\n    ans = 'YES'\n    for at in range(2):\n        time = at\n        i = 0\n        ans = 'YES'\n        while i < m:\n            s0i = s0[i]\n            s1i = s1[i]\n            if i > 1:\n                s0i_1 = s0[i - 1]\n                s1i_1 = s1[i - 1]\n            else:\n                s0i_1 = 'B'\n                s1i_1 = 'B'\n            if i == m - 1:\n                s0i1 = 'B'\n                s1i1 = 'B'\n            else:\n                s0i1 = s0[i + 1]\n                s1i1 = s1[i + 1]\n            if s0i == 'B' and s1i == 'B':\n                atin = at\n                if atin == 0:\n                    at = 1\n                else:\n                    at = 0\n                if at == 0:\n                    if s0i1 == 'B':\n                        i += 1\n                    else:\n                        ans = 'NO'\n                        break\n                elif at == 1:\n                    if s1i1 == 'B':\n                        i += 1\n                    else:\n                        ans = 'NO'\n                        break\n            elif s0i == 'B':\n                if s0i_1 == 'B' and s0i1 == 'B':\n                    i += 1\n                    at = 0\n                else:\n                    ans = 'NO'\n                    break\n            elif s1i_1 == 'B' and s1i1 == 'B':\n                i += 1\n                at = 1\n            else:\n                ans = 'NO'\n                break\n        if ans == 'YES' and time == 0:\n            break\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr1 = input()\n    c1 = list(map(str, arr1))\n    arr2 = input()\n    c2 = list(map(str, arr2))\n    ans = 'YES'\n    j = 0\n    if n == 1:\n        print('YES')\n    else:\n        while j < n - 1:\n            if c1[j] == 'W':\n                count = 1\n                while count < n - j and c1[j + count] == 'B' and (c2[j + count] == 'B'):\n                    count += 1\n                if count % 2 == 1 and count < n - j and (c1[j + count] == 'B'):\n                    ans = 'NO'\n                    break\n                elif count % 2 == 0 and count < n - j and (c1[j + count] == 'W'):\n                    ans = 'NO'\n                    break\n                j = j + count\n            elif c2[j] == 'B':\n                j = j + 1\n            else:\n                count = 1\n                while count < n - j and c1[j + count] == 'B' and (c2[j + count] == 'B'):\n                    count += 1\n                if count % 2 == 1 and count < n - j and (c1[j + count] == 'W'):\n                    ans = 'NO'\n                    break\n                elif count % 2 == 0 and count < n - j and (c1[j + count] == 'B'):\n                    ans = 'NO'\n                    break\n                j = j + count\n        print(ans)", "t = int(input())\nfor i in range(0, t):\n    m = int(input())\n    a1 = input()\n    a2 = input()\n    bl = True\n    j = 0\n    while j < m:\n        if a1[j] == 'W' or a2[j] == 'W':\n            bl2 = True\n            for k in range(j + 1, m):\n                if a1[k] == 'W' or a2[k] == 'W':\n                    bl2 = False\n                    if a1[j] == 'W' and a1[k] == 'W':\n                        if (k - j) % 2 == 0:\n                            bl = False\n                            break\n                        else:\n                            j = k\n                            break\n                    elif a2[j] == 'W' and a2[k] == 'W':\n                        if (k - j) % 2 == 0:\n                            bl = False\n                            break\n                        else:\n                            j = k\n                            break\n                    elif a1[j] == 'W' and a2[k] == 'W':\n                        if (k - j) % 2 != 0:\n                            bl = False\n                            break\n                        else:\n                            j = k\n                            break\n                    elif a2[j] == 'W' and a1[k] == 'W':\n                        if (k - j) % 2 != 0:\n                            bl = False\n                            break\n                        else:\n                            j = k\n                            break\n            if bl == False:\n                break\n            if bl2 == True:\n                break\n        else:\n            j = j + 1\n    if bl:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    rowone = input()\n    rowtwo = input()\n    s = []\n    for i in range(n):\n        x = 0\n        if len(s) != 0:\n            x = s[-1]\n        y = 0\n        if rowone[i] == 'B':\n            y = 1\n        if rowtwo[i] == 'B' and rowone[i] == 'W':\n            y = 2\n        if rowtwo[i] == 'B' and rowone[i] == 'B':\n            y = 3\n        if x != 0:\n            if x == 3 and y == 3:\n                s.pop()\n            else:\n                s.append(y)\n        else:\n            s.append(y)\n    check = 1\n    prev = 0\n    if len(s) != 0:\n        prev = s[-1]\n        s.pop()\n    while len(s) != 0:\n        curr = s[-1]\n        s.pop()\n        if prev == 3:\n            prev = curr\n        if curr == 3:\n            if prev == 1:\n                prev = 2\n            else:\n                prev = 1\n        elif prev != curr:\n            check = 0\n            break\n    if check == 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    a = [0 + int(s1[i] == 'B') for i in range(n)]\n    b = [0 + int(s2[i] == 'B') for i in range(n)]\n    if a[0] == 1:\n        a[0] = 2\n    if b[0] == 1:\n        b[0] = 2\n    flag = True\n    if a[0] == 2 or b[0] == 2:\n        for i in range(1, n):\n            if a[i - 1] == 2 and b[i] == 1 and (a[i] == 1):\n                b[i] = 2\n            if b[i - 1] == 2 and a[i] == 1 and (b[i] == 1 or b[i] == 2):\n                a[i] = 2\n            if a[i - 1] == 2 and b[i] == 0 and (a[i] == 1):\n                a[i] = 2\n            if b[i - 1] == 2 and a[i] == 0 and (b[i] == 1):\n                b[i] = 2\n    if a[-1] == 2 or b[-1] == 2:\n        print('YES')\n    else:\n        print('NO')", "def solve(m, grid):\n    dp = [[False] * m for _ in range(2)]\n    dp[0][m - 1] = grid[0][m - 1] == 'B'\n    dp[1][m - 1] = grid[1][m - 1] == 'B'\n    for col in range(m - 2, -1, -1):\n        for row in range(2):\n            dp[row][col] = grid[row][col] == 'B' and (grid[(row + 1) % 2][col] == 'B' and dp[(row + 1) % 2][col + 1] or (grid[(row + 1) % 2][col] == 'W' and dp[row][col + 1]))\n    return 'YES' if dp[0][0] or dp[1][0] else 'NO'\nt = int(input())\nfor _ in range(t):\n    m = int(input())\n    grid = []\n    for row in range(2):\n        grid.append(input())\n    print(solve(m, grid))", "def countB(arr, i):\n    return int(arr[0][i] == 'B') + int(arr[1][i] == 'B')\nfor t in range(int(input())):\n    n = int(input())\n    arr = []\n    for _ in range(2):\n        arr.append(input())\n    prev = -1\n    double = 0\n    flag = True\n    for i in range(n):\n        if countB(arr, i) == 2 and prev != -1:\n            double += 1\n        if countB(arr, i) == 1:\n            if prev == -1:\n                if arr[0][i] == 'B':\n                    prev = 0\n                else:\n                    prev = 1\n                continue\n            if double % 2 == 0:\n                if arr[prev][i] != 'B':\n                    flag = False\n            elif arr[1 - prev][i] != 'B':\n                flag = False\n            else:\n                prev = 1 - prev\n            double = 0\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "from collections import deque\nfor _ in range(int(input())):\n    n = int(input())\n    matrix = [input() for _ in range(2)]\n    count = 0\n    for col in range(n):\n        count += int(matrix[0][col] == 'B') + int(matrix[1][col] == 'B')\n\n    def dfs(startCord, count):\n        visited = set()\n        stk = deque([startCord])\n        while stk:\n            currentNode = stk.popleft()\n            (row, col) = currentNode\n            visited.add(currentNode)\n            row ^= 1\n            if matrix[row][col] == 'B' and (row, col) not in visited:\n                stk.append((row, col))\n                continue\n            row ^= 1\n            col += 1\n            if col < n and (row, col) not in visited:\n                stk.append((row, col))\n        return len(visited) == count\n    if matrix[0][0] == 'B' and dfs((0, 0), count):\n        print('YES')\n    elif matrix[1][0] == 'B' and dfs((1, 0), count):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    A = [[0 for __ in range(n)] for _ in range(2)]\n    B = [list(input()) for _ in range(2)]\n    row = 0\n    for i in range(2):\n        for j in range(n):\n            A[i][j] = int(B[i][j] == 'B')\n            B[i][j] = A[i][j]\n\n    def func(row, pred, flag):\n        i = 0\n        while i < n - 1:\n            if pred[row][i]:\n                pred[row][i] = 0\n                pos = 1 if not row else -1\n                if not pred[row][i + 1] and (not pred[row + pos][i]):\n                    flag = 0\n                    break\n                elif not pred[row][i + 1] and pred[row + pos][i]:\n                    row ^= 1\n                    i -= 1\n                elif pred[row][i + 1] and pred[row + pos][i]:\n                    row ^= 1\n                    i -= 1\n            else:\n                flag = 0\n            i += 1\n        return flag\n    f1 = func(0, A, 1)\n    f2 = func(1, B, 1)\n    print(('NO', 'YES')[f1 or f2])", "for _ in range(int(input())):\n    n = int(input())\n    A = [[0 for __ in range(n)] for _ in range(2)]\n    grid = [list(input()) for _ in range(2)]\n    row = 0\n    for i in range(2):\n        for j in range(n):\n            A[i][j] = int(grid[i][j] == 'B')\n            grid[i][j] = A[i][j]\n\n    def func(row, pred, flag):\n        i = 0\n        while i < n - 1:\n            if pred[row][i]:\n                pred[row][i] = 0\n                if not row:\n                    if pred[row][i + 1] == 0 and pred[row + 1][i] == 0:\n                        flag = 0\n                        break\n                    elif pred[row][i + 1] == 0 and pred[row + 1][i] == 1:\n                        row ^= 1\n                        i -= 1\n                    elif pred[row][i + 1] == 1 and pred[row + 1][i] == 1:\n                        row ^= 1\n                        i -= 1\n                elif pred[row][i + 1] == 0 and pred[row - 1][i] == 0:\n                    flag = 0\n                    break\n                elif pred[row][i + 1] == 0 and pred[row - 1][i] == 1:\n                    row ^= 1\n                    i -= 1\n                elif pred[row][i + 1] == 1 and pred[row - 1][i] == 1:\n                    row ^= 1\n                    i -= 1\n            else:\n                flag = 0\n            i += 1\n        return flag\n    f1 = func(0, A, 1)\n    f2 = func(1, grid, 1)\n    print(('NO', 'YES')[f1 or f2])", "from copy import deepcopy\n\ndef solution():\n\n    def paint(i: int) -> bool:\n        j = 0\n        while j < n:\n            if s[i][j] == 'B':\n                s[i][j] = 'W'\n                if s[i ^ 1][j] == 'B':\n                    i ^= 1\n                    continue\n                else:\n                    j += 1\n            else:\n                return False\n        return True\n    n = int(input())\n    s1 = [list(input()), list(input())]\n    s = deepcopy(s1)\n    if paint(0):\n        print('YES')\n        return\n    s = deepcopy(s1)\n    if paint(1):\n        print('YES')\n    else:\n        print('NO')\n\ndef main():\n    t = int(input())\n    while t:\n        solution()\n        t -= 1\nmain()"]