["import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    mo = 998244353\n    dp1 = [0] * (n + 2)\n    dp2 = [0] * (n + 2)\n    dp1[0] = 1\n    for num in arr:\n        dp1[num + 1] = (2 * dp1[num + 1] + dp1[num]) % mo\n        dp2[num + 1] = 2 * dp2[num + 1] % mo\n        if num >= 1:\n            dp2[num - 1] = (dp1[num - 1] + 2 * dp2[num - 1]) % mo\n    ans = (sum(dp1 + dp2) % mo - 1) % mo\n    return ans\nfor _ in range(int(input())):\n    print(solve())", "import math\nfrom heapq import heappush, heappop, heapify\nimport random\nimport string\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right, insort\nimport sys\ninput = sys.stdin.readline\nS = lambda : input().rstrip()\nI = lambda : int(S())\nM = lambda : map(int, S().split())\nL = lambda : list(M())\nmod1 = 1000000000 + 7\nmod2 = 998244353\nfor _ in range(I()):\n    n = I()\n    a = L()\n    (dp1, dp2) = ([0] * (n + 2), [0] * (n + 2))\n    dp1[0] = 1\n    for i in a:\n        dp1[i + 1] = (dp1[i + 1] * 2 + dp1[i]) % mod2\n        if i > 0:\n            dp2[i - 1] = (dp2[i - 1] * 2 + dp1[i - 1]) % mod2\n        dp2[i + 1] = dp2[i + 1] * 2 % mod2\n    s = 0\n    for i in dp1 + dp2:\n        s = (s + i) % mod2\n    print((s - 1) % mod2)", "import sys\nfrom collections import defaultdict as dd\ninput = sys.stdin.readline\nI = lambda : list(map(int, input().split()))\nmod = 998244353\n(t,) = I()\nfor _ in range(t):\n    (n,) = I()\n    l = I()\n    an = 0\n    dp = dd(int)\n    miss = dd(int)\n    for x in range(n):\n        i = l[x]\n        if i == 0:\n            dp[0] = (2 * dp[0] + 1) % mod\n            miss[1] = 2 * miss[1] % mod\n        elif i == 1:\n            dp[1] = (2 * dp[1] + dp[0]) % mod\n            miss[2] = 2 * miss[2] % mod\n            miss[0] = (2 * miss[0] + 1) % mod\n        else:\n            dp[i] = (2 * dp[i] + dp[i - 1]) % mod\n            miss[i + 1] = 2 * miss[i + 1] % mod\n            miss[i - 1] = (2 * miss[i - 1] + dp[i - 2]) % mod\n    print((sum(dp.values()) + sum(miss.values())) % mod)", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    n = int(inp())\n    a = list(map(int, inp().split()))\n    MOD = 998244353\n    dp = [[1, 0]]\n    for i in a:\n        if i - 1 >= len(dp):\n            continue\n        if i > 0:\n            dp[i - 1][1] = (dp[i - 1][0] + 2 * dp[i - 1][1]) % MOD\n        while i + 2 >= len(dp):\n            dp.append([0, 0])\n        dp[i + 1][0] = (2 * dp[i + 1][0] + dp[i][0]) % MOD\n        dp[i + 1][1] = 2 * dp[i + 1][1] % MOD\n    r = 0\n    for (u, v) in dp:\n        r = (r + u + v) % MOD\n    print((r - 1) % MOD)\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "import sys\n\ndef solve(arr):\n    data = [[0, 0] for _ in range(len(arr) + 5)]\n    for item in arr:\n        data[item][0] *= 2\n        data[item][1] *= 2\n        data[item + 2][1] *= 2\n        if item > 0:\n            data[item][0] += data[item - 1][0]\n        if item > 1:\n            data[item][1] += data[item - 2][0]\n        if item == 0:\n            data[item][0] += 1\n        elif item == 1:\n            data[item][1] += 1\n        data[item][0] %= 998244353\n        data[item][1] %= 998244353\n    result = 0\n    for item in data:\n        result = (result + item[0] + item[1]) % 998244353\n    return result\nt = int(sys.stdin.readline())\nfor i in range(t):\n    n = int(sys.stdin.readline())\n    arr = list(map(int, sys.stdin.readline().strip().split()))\n    print(solve(arr))", "mod2 = 998244353\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (dp1, dp2) = ([0] * (n + 2), [0] * (n + 2))\n    dp1[0] = 1\n    for i in a:\n        dp1[i + 1] = (dp1[i + 1] * 2 + dp1[i]) % mod2\n        if i > 0:\n            dp2[i - 1] = (dp2[i - 1] * 2 + dp1[i - 1]) % mod2\n        dp2[i + 1] = dp2[i + 1] * 2 % mod2\n    s = sum(dp1 + dp2) % mod2\n    print((s - 1) % mod2)", "mod2 = 998244353\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (dp1, dp2) = ([0] * (n + 2), [0] * (n + 2))\n    dp1[0] = 1\n    for i in a:\n        dp1[i + 1] = (dp1[i + 1] * 2 + dp1[i]) % mod2\n        if i > 0:\n            dp2[i - 1] = (dp2[i - 1] * 2 + dp1[i - 1]) % mod2\n        dp2[i + 1] = dp2[i + 1] * 2 % mod2\n    s = sum(dp1 + dp2) % mod2\n    print((s - 1) % mod2)", "mod2 = 998244353\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (dp1, dp2) = ([0] * (n + 2), [0] * (n + 2))\n    dp1[0] = 1\n    for i in a:\n        dp1[i + 1] = (dp1[i + 1] * 2 + dp1[i]) % mod2\n        if i > 0:\n            dp2[i - 1] = (dp2[i - 1] * 2 + dp1[i - 1]) % mod2\n        dp2[i + 1] = dp2[i + 1] * 2 % mod2\n    s = sum(dp1 + dp2) % mod2\n    print((s - 1) % mod2)", "mod2 = 998244353\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (dp1, dp2) = ([0] * (n + 2), [0] * (n + 2))\n    dp1[0] = 1\n    for i in a:\n        dp1[i + 1] = (dp1[i + 1] * 2 + dp1[i]) % mod2\n        if i > 0:\n            dp2[i - 1] = (dp2[i - 1] * 2 + dp1[i - 1]) % mod2\n        dp2[i + 1] = dp2[i + 1] * 2 % mod2\n    s = sum(dp1 + dp2) % mod2\n    print((s - 1) % mod2)", "mod2 = 998244353\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (dp1, dp2) = ([0] * (n + 2), [0] * (n + 2))\n    dp1[0] = 1\n    for i in a:\n        dp1[i + 1] = (dp1[i + 1] * 2 + dp1[i]) % mod2\n        if i > 0:\n            dp2[i - 1] = (dp2[i - 1] * 2 + dp1[i - 1]) % mod2\n        dp2[i + 1] = dp2[i + 1] * 2 % mod2\n    s = sum(dp1 + dp2) % mod2\n    print((s - 1) % mod2)", "mod2 = 998244353\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (dp1, dp2) = ([0] * (n + 2), [0] * (n + 2))\n    dp1[0] = 1\n    for i in a:\n        dp1[i + 1] = (dp1[i + 1] * 2 + dp1[i]) % mod2\n        if i > 0:\n            dp2[i - 1] = (dp2[i - 1] * 2 + dp1[i - 1]) % mod2\n        dp2[i + 1] = dp2[i + 1] * 2 % mod2\n    s = sum(dp1 + dp2) % mod2\n    print((s - 1) % mod2)", "mod2 = 998244353\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (dp1, dp2) = ([0] * (n + 2), [0] * (n + 2))\n    dp1[0] = 1\n    for i in a:\n        dp1[i + 1] = (dp1[i + 1] * 2 + dp1[i]) % mod2\n        if i > 0:\n            dp2[i - 1] = (dp2[i - 1] * 2 + dp1[i - 1]) % mod2\n        dp2[i + 1] = dp2[i + 1] * 2 % mod2\n    s = sum(dp1 + dp2) % mod2\n    print((s - 1) % mod2)", "mod2 = 998244353\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (dp1, dp2) = ([0] * (n + 2), [0] * (n + 2))\n    dp1[0] = 1\n    for i in a:\n        dp1[i + 1] = (dp1[i + 1] * 2 + dp1[i]) % mod2\n        if i > 0:\n            dp2[i - 1] = (dp2[i - 1] * 2 + dp1[i - 1]) % mod2\n        dp2[i + 1] = dp2[i + 1] * 2 % mod2\n    s = sum(dp1 + dp2) % mod2\n    print((s - 1) % mod2)", "import sys\ninput = lambda : sys.stdin.readline().rstrip('\\r\\n')\ninp = lambda : list(map(int, sys.stdin.readline().rstrip('\\r\\n').split()))\nMod = 998244353\ntc = 1\ntc = int(input())\nfor test_cases in range(1, tc + 1):\n    n = int(input())\n    a = inp()\n    dp1 = [0] * (n + 5)\n    dp2 = [0] * (n + 5)\n    dp1[0] = 1\n    for i in a:\n        dp1[i + 1] = (dp1[i + 1] + dp1[i + 1]) % Mod\n        dp1[i + 1] = (dp1[i + 1] + dp1[i]) % Mod\n        dp2[i - 1] = (dp2[i - 1] + dp2[i - 1]) % Mod\n        dp2[i - 1] = (dp2[i - 1] + dp1[i - 1]) % Mod\n        dp2[i + 1] = (dp2[i + 1] + dp2[i + 1]) % Mod\n    ans = 0\n    for i in range(n + 3):\n        ans = (ans + dp1[i]) % Mod\n        ans = (ans + dp2[i]) % Mod\n    print((ans - 1 + Mod) % Mod)", "def solve(test_case_num=-1):\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        lst = list(map(int, input().split()))\n        print(solution(n, lst))\nMOD = 998244353\n\ndef add_and_mod(lst, MOD=MOD):\n    rst = 0\n    for n in lst:\n        rst += n\n    return rst % MOD\n\ndef solution(n, lst, MOD=MOD):\n    mem = [0] * (n + 3)\n    mem_hole_right = [0] * (n + 3)\n    mem_hole_left = [0] * (n + 3)\n    rst = 0\n    for a in lst:\n        if a == 0:\n            mem[0] = add_and_mod([mem[0], mem[0], 1])\n        elif True:\n            mem[a] = add_and_mod([mem[a], mem[a], mem[a - 1]])\n        mem_hole_right[a] = add_and_mod([mem_hole_right[a], mem_hole_right[a], mem_hole_left[a + 2]])\n        if a == 0:\n            continue\n        elif a == 1:\n            mem_hole_left[1] = add_and_mod([mem_hole_left[1], mem_hole_left[1], 1])\n        elif True:\n            mem_hole_left[a] = add_and_mod([mem_hole_left[a], mem_hole_left[a], mem_hole_right[a - 2], mem[a - 2]])\n    for m in [mem, mem_hole_left, mem_hole_right]:\n        rst += add_and_mod(m)\n    return rst % MOD\nsolve()"]