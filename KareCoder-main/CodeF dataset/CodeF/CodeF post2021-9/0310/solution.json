["import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    data = list(map(int, input().split()))[::-1]\n    zero_set = set()\n    min_value = 10 ** 5 + 1\n    end_idx = len(data)\n    flag = True\n    while flag:\n        for (i, num) in enumerate(data[:end_idx]):\n            if num in zero_set:\n                min_value = 0\n            elif min_value >= num:\n                min_value = num\n            else:\n                zero_set = zero_set.union(set(data[i:]))\n                end_idx = i\n                min_value = 10 ** 5 + 1\n                break\n        else:\n            flag = False\n    print(len(zero_set))", "t = int(input())\nans = []\nans1 = []\nfor e in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.reverse()\n    t = 1\n    for e in range(n - 1):\n        if l[e] < l[e + 1]:\n            break\n        else:\n            t += 1\n    ans1.append(str(t))\n    s1 = set(l[t:])\n    s2 = set(l[:t])\n    s3 = s1.intersection(s2)\n    if s3 == set():\n        ans.append(str(len(s1)))\n    else:\n        m1 = max(s3)\n        ans.append(str(len(set(l[l.index(m1):]))))\nprint('\\n'.join(ans))", "T = int(input())\nq = []\nfor i in range(T):\n    n = int(input())\n    data = [int(i) for i in input().split()]\n    q.append((n, data))\n\ndef solve(n, data):\n    i = n - 1\n    while i > 0 and data[i] >= data[i - 1]:\n        i -= 1\n    get_down = set()\n    for j in range(i):\n        if data[j] not in get_down:\n            get_down.add(data[j])\n    ii = n - 1\n    while ii > 0 and data[ii] not in get_down:\n        ii -= 1\n    for j in range(i, ii):\n        if data[j] not in get_down:\n            get_down.add(data[j])\n    print(len(get_down))\nfor (n, data) in q:\n    solve(n, data)", "import sys\ninput = sys.stdin.readline\nM = int(1000000000.0) + 7\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    last = dict()\n    for i in range(n):\n        last[a[i]] = i\n    i = n - 2\n    while i >= 0:\n        if a[i] > a[i + 1]:\n            break\n        i -= 1\n    r = -1\n    for j in range(i, -1, -1):\n        r = max(r, last[a[j]])\n    ans = set()\n    for i in range(r + 1):\n        ans.add(a[i])\n    return len(ans)\nfor _ in range(int(input())):\n    print(solve())", "for s in [*open(0)][2::2]:\n    p = 0\n    t = {0}\n    q = {0}\n    for x in map(int, s.split()):\n        x *= x not in t\n        if x < p:\n            t |= q\n            q = {0}\n        q |= {x}\n        p = x\n    print(len(t) - 1)", "for s in [*open(0)][2::2]:\n    p = 0\n    t = {0}\n    q = {0}\n    for x in map(int, s.split()):\n        x *= x not in t\n        if x < p:\n            t |= q\n            q = {0}\n        q |= {x}\n        p = x\n    print(len(t) - 1)", "import sys\ninput = sys.stdin.readline\nT = int(input())\nv = [0] * 100001\nfor t in range(T):\n    n = int(input())\n    l = [*map(int, input().split())]\n    for i in l:\n        v[i] = 0\n    start = n - 1\n    ans = 0\n    add = 0\n    while start > 0 and l[start] >= l[start - 1]:\n        start -= 1\n    if start == 0:\n        print(ans)\n    else:\n        for i in range(start):\n            if v[l[i]] == 0:\n                v[l[i]] = 1\n                ans += 1\n        for i in range(start, n):\n            if v[l[i]] == 0:\n                v[l[i]] = 1\n                add += 1\n            elif v[l[i]] == 1 and l[i] > l[i - 1]:\n                ans += add\n                add = 0\n        print(ans)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    bag = set()\n    empty = True\n    for i in range(n - 2, -1, -1):\n        if arr[i] <= arr[i + 1] and empty:\n            continue\n        bag.add(arr[i])\n        empty = False\n    for i in range(n - 1, -1, -1):\n        if arr[i] in bag:\n            return len(set(arr[:i + 1]))\n    return 0\nfor _ in range(int(input())):\n    print(solve())", "import os.path\nfrom math import gcd, floor, ceil\nfrom collections import *\nimport sys\nmod = 1000000007\nINF = float('inf')\n\ndef st():\n    return list(sys.stdin.readline().strip())\n\ndef li():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef mp():\n    return map(int, sys.stdin.readline().split())\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef pr(n):\n    return sys.stdout.write(str(n) + '\\n')\n\ndef prl(n):\n    return sys.stdout.write(str(n) + ' ')\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nt = inp()\nfor _ in range(t):\n    n = inp()\n    l = li()\n    c = -1\n    for i in range(len(l) - 1):\n        if l[i] > l[i + 1]:\n            c = i\n    if c == -1:\n        print(0)\n    else:\n        l1 = l[:c + 1]\n        k = set(l1)\n        m = 0\n        r = c\n        for i in range(c + 1, len(l)):\n            if l[i] in k and l[i] > m:\n                m = l[i]\n                r = i\n        l2 = l[:r + 1]\n        print(len(set(l2)))", "for s in [*open(0)][2::2]:\n    p = 0\n    t = {0}\n    q = {0}\n    for x in map(int, s.split()):\n        x *= x not in t\n        if x < p:\n            t |= q\n            q = {0}\n        q |= {x}\n        p = x\n    print(len(t) - 1)", "for s in [*open(0)][2::2]:\n    p = 0\n    t = {0}\n    q = {0}\n    for x in map(int, s.split()):\n        x *= x not in t\n        if x < p:\n            t |= q\n            q = {0}\n        q |= {x}\n        p = x\n    print(len(t) - 1)", "for s in [*open(0)][2::2]:\n    p = 0\n    t = {0}\n    q = {0}\n    for x in map(int, s.split()):\n        x *= x not in t\n        if x < p:\n            t |= q\n            q = {0}\n        q |= {x}\n        p = x\n    print(len(t) - 1)", "import sys\nimport math\nfrom collections import Counter\nfrom collections import defaultdict\n\ndef get_ints():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef solve(arr):\n    if arr == sorted(arr):\n        return 0\n    n = len(arr)\n    arr.reverse()\n    for i in range(len(arr) - 1):\n        if arr[i + 1] > arr[i]:\n            ind = i\n            break\n    zero = n - ind - 1\n    arr.reverse()\n    d = {}\n    for i in range(zero):\n        d[arr[i]] = 0\n    ans = len(d)\n    for i in range(n):\n        if arr[i] in d:\n            arr[i] = 0\n    arr.reverse()\n    c = 0\n    dd = {}\n    for i in arr:\n        if i == 0:\n            c = 1\n        if c and i != 0:\n            if i not in dd:\n                ans += 1\n                dd[i] = 0\n    return ans\nt = int(input())\nfor _ in range(t):\n    n = get_ints()\n    arr = get_ints()\n    print(solve(arr))", "import sys\ninput = sys.stdin.readline\n\ndef int_num():\n    return int(input())\n\ndef int_list():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef solve():\n    n = int_num()\n    a = int_list()\n    idx = 0\n    z = {}\n    for i in range(1, n):\n        if a[i] in z or a[i - 1] > a[i]:\n            for j in range(idx, i):\n                z[a[j]] = 0\n            idx = i\n    ans = len(z)\n    print(ans)\n\ndef main():\n    t = int_num()\n    while t:\n        solve()\n        t -= 1\n    return\nmain()", "t = int(input())\nres = []\nfor _ in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    i = len(arr) - 2\n    seen = set()\n    seen.add(arr[-1])\n    while i >= 0 and arr[i] <= arr[i + 1]:\n        seen.add(arr[i])\n        i -= 1\n    if i < 0:\n        res.append(0)\n    else:\n        zeros = set()\n        count = 0\n        for j in range(i + 1):\n            if arr[j] not in zeros:\n                zeros.add(arr[j])\n                count += 1\n        j = len(arr) - 1\n        while j > i:\n            if arr[j] in zeros:\n                break\n            j -= 1\n        for k in range(i + 1, j + 1):\n            if arr[k] not in zeros:\n                zeros.add(arr[k])\n                count += 1\n        res.append(count)\nfor val in res:\n    print(val)", "for _ in range(int(input())):\n    n = int(input())\n    p = []\n    z = set()\n    for i in map(int, input().split()):\n        if i in z:\n            i = 0\n        if p and i < p[-1]:\n            z.update(p)\n            p.clear()\n        p.append(i)\n    print(len(z - {0}))", "for _ in range(int(input())):\n    n = int(input())\n    a = [*map(int, input().split())]\n    q = []\n    w = set()\n    for i in a:\n        if q and (q[-1] > i or i in w):\n            while q:\n                w.add(q.pop())\n        q.append(i)\n    print(len(w))", "t = int(input())\n\ndef solve(n, seq):\n    for i in range(n - 1, 0, -1):\n        if seq[i] < seq[i - 1]:\n            xx = set(seq[:i])\n            keep = seq[i:]\n            max_i = -1\n            for j in range(n - 1, i - 1, -1):\n                if seq[j] in xx:\n                    max_i = j\n                    break\n            if max_i > -1:\n                for val in seq[i:max_i]:\n                    xx.add(val)\n            return len(xx)\n    return 0\nfor _ in range(t):\n    n = int(input())\n    seq = [int(x) for x in input().split(' ')]\n    print(solve(n, seq))", "import math\nimport collections\nimport itertools\nimport functools\n\ndef fun(t):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    if arr == sorted(arr):\n        print('0')\n    else:\n        for i in range(n - 1, 0, -1):\n            if arr[i] < arr[i - 1]:\n                break\n        s = set(arr[:i])\n        for j in range(n - 1, i - 1, -1):\n            if arr[j] in s:\n                break\n        for k in range(i, j):\n            s.add(arr[k])\n        print(len(s))\nfor tc in range(int(input())):\n    fun(tc)", "t = int(input())\nO = [0] * t\nfor ii in range(t):\n    n = int(input())\n    p = list(map(int, input().split()))\n    x = 0\n    while x == 0:\n        x = 1\n        for i in range(n - 1):\n            if p[n - 1 - i] < p[n - 2 - i]:\n                a = set(p[:n - 1 - i])\n                if 0 in a:\n                    O[ii] += len(a) - 1\n                else:\n                    O[ii] += len(a)\n                for y in range(n):\n                    if p[y] in a and p[y] != 0:\n                        p[y] = 0\n                x = 0\n                break\nfor i in range(t):\n    print(O[i])", "for _ in range(int(input())):\n    n = int(input())\n    a = [*map(int, input().split())]\n    q = []\n    w = set()\n    for i in a:\n        if q and (q[-1] > i or i in w):\n            while q:\n                w.add(q.pop())\n        q.append(i)\n    print(len(w))", "def solve():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if a == sorted(a):\n        print(0)\n    else:\n        s = set()\n        index = -1\n        for i in range(n - 2, -1, -1):\n            if a[i] > a[i + 1]:\n                index = i\n                break\n        for i in range(0, index + 1):\n            s.add(a[i])\n        index2 = -1\n        for i in range(n - 1, index, -1):\n            if a[i] in s:\n                index2 = i\n                break\n        for i in range(index + 1, index2):\n            s.add(a[i])\n        print(len(s))\n    return None\nt = int(input())\nfor _ in range(t):\n    solve()", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    idx = [-1] * (n + 1)\n    for i in range(n):\n        idx[arr[i]] = i\n    now = -1\n    for i in range(n - 1, 0, -1):\n        if arr[i] < arr[i - 1]:\n            now = i - 1\n            break\n    if now == -1:\n        return 0\n    w = now - 1\n    while w != now:\n        w = now\n        for i in range(w, -1, -1):\n            now = max(now, idx[arr[i]])\n    cnt = [0] * (n + 1)\n    for i in range(now + 1):\n        cnt[arr[i]] = 1\n    return sum(cnt)\nfor __ in range(int(input())):\n    print(solve())", "def calculate_ops(a):\n    zeros = set()\n    perserveds = set()\n    num_ops = 0\n    for index in range(len(a) - 1):\n        if a[index] in zeros:\n            continue\n        if a[index + 1] in zeros or a[index] > a[index + 1]:\n            num_ops += 1\n            zeros.add(a[index])\n            for perserved in perserveds:\n                if perserved != a[index]:\n                    num_ops += 1\n                    zeros.add(perserved)\n            perserveds = set()\n            continue\n        perserveds.add(a[index])\n    return num_ops\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(c) for c in input().split(' ')]\n    print(calculate_ops(a))", "t = int(input())\nans = [0] * t\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    isGoing = True\n    herr = False\n    x = set()\n    f = 0\n    while isGoing:\n        herr = False\n        ind = n - 1\n        for j in range(n - 2, f - 1, -1):\n            if a[j] > a[ind]:\n                for u in range(f, j + 1):\n                    x.add(a[u])\n                f = j + 1\n                for u in range(0, f):\n                    a[u] = 0\n                for u in range(f, n):\n                    if a[u] in x:\n                        a[u] = 0\n                        herr = True\n                if herr:\n                    break\n            ind = j\n        if not herr:\n            isGoing = False\n    ans[i] = len(x)\n    if 0 in x:\n        ans[i] -= 1\nfor i in range(t):\n    print(ans[i])", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if sorted(a) == a:\n        print(0)\n        continue\n    for i in range(n - 2, -1, -1):\n        if a[i] > a[i + 1]:\n            break\n    arr = set(a[:i + 1])\n    for j in range(n - 1, i - 1, -1):\n        if a[j] in arr:\n            break\n    for k in range(i, j):\n        arr.add(a[k])\n    print(len(set(arr)))", "for t in range(int(input())):\n    n = input()\n    a = {0}\n    b = {0}\n    c = 0\n    for i in map(int, input().split()):\n        if i in b:\n            i = 0\n        if i < c:\n            b |= a\n            a = {0}\n        a |= {i}\n        c = i\n    print(len(b) - 1)", "def main():\n    length = int(input())\n    for _ in range(length):\n        n = int(input())\n        lst = list(map(int, input().split(' ')))\n        mono_stack = []\n        seen = set()\n        for num in lst:\n            if mono_stack and (mono_stack[-1] > num or num in seen):\n                while mono_stack:\n                    seen.add(mono_stack.pop())\n            mono_stack.append(num)\n        print(len(seen))\nmain()", "for i in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if a == sorted(a):\n        print(0)\n    else:\n        for j in range(n - 1, 0, -1):\n            if a[j] < a[j - 1]:\n                d = j\n                break\n        l = set(a[0:d])\n        for k in range(n - 1, d - 1, -1):\n            if a[k] in l:\n                break\n        for m in range(d, k):\n            l.add(a[m])\n        print(len(l))", "for t in range(int(input())):\n    n = input()\n    a = {0}\n    b = {0}\n    c = 0\n    for i in map(int, input().split()):\n        if i in b:\n            i = 0\n        if i < c:\n            b |= a\n            a = {0}\n        a |= {i}\n        c = i\n    print(len(b) - 1)", "t = int(input())\nfor _ in range(t):\n    n = input()\n    l = list(map(int, input().split()))\n    c = -1\n    for i in range(len(l) - 1):\n        if l[i] > l[i + 1]:\n            c = i\n    if c == -1:\n        print(0)\n    else:\n        l1 = l[:c + 1]\n        k = set(l1)\n        m = 0\n        r = c\n        for i in range(c + 1, len(l)):\n            if l[i] in k and l[i] > m:\n                m = l[i]\n                r = i\n        l2 = l[:r + 1]\n        print(len(set(l2)))", "for s in [*open(0)][2::2]:\n    p = 0\n    t = {0}\n    q = {0}\n    for x in map(int, s.split()):\n        x *= x not in t\n        if x < p:\n            t |= q\n            q = {0}\n        q |= {x}\n        p = x\n    print(len(t) - 1)", "for _ in [0] * int(input()):\n    n = int(input())\n    a = [*map(int, input().split())]\n    b = set()\n    k = 0\n    for i in range(1, n):\n        if a[i] < a[i - 1] or a[i] in b:\n            for j in a[k:i]:\n                b.add(j)\n            k = i\n    print(len(b))", "def main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        ar = list(map(int, input().split()))\n        s_ar = []\n        ind = 0\n        for idx in range(n - 1, 0, -1):\n            if ar[idx] < ar[idx - 1]:\n                s_ar = set(ar[0:idx])\n                ind = idx\n                break\n        for idx in range(n - 1, ind, -1):\n            if ar[idx] in s_ar or ar[idx] < ar[idx - 1]:\n                s_ar = set(ar[0:idx])\n                break\n        print(len(s_ar))\nmain()", "def exe():\n    for i in range(n - 1, 0, -1):\n        if lst[i] >= lst[i - 1]:\n            pass\n        else:\n            index = i\n            break\n    else:\n        return 0\n    d = {}\n    for i in lst:\n        d[i] = 0\n    for i in range(index):\n        d[lst[i]] = 1\n    for i in range(index, n):\n        if d[lst[i]] == 1:\n            index = i\n    return len(set(lst[:index]))\nfor _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    print(exe())", "for _ in range(int(input())):\n    n = int(input())\n    p = []\n    z = set()\n    for i in map(int, input().split()):\n        if i in z:\n            i = 0\n        if p and i < p[-1]:\n            z.update(p)\n            p.clear()\n        p.append(i)\n    print(len(z - {0}))", "xx = int(input())\n\ndef cal(n, arr):\n    if n == 1:\n        return 0\n    ck = -1\n    for i in range(n - 1, 0, -1):\n        if arr[i] >= arr[i - 1]:\n            continue\n        else:\n            ck = i\n            break\n    if ck == -1:\n        return 0\n    t = set(arr[:i])\n    for i in range(n - 1, ck - 1, -1):\n        if arr[i] in t:\n            return len(set(arr[:i + 1]))\n    return len(t)\nfor jj in range(xx):\n    n = int(input())\n    arr = [int(i) for i in input().split(' ')]\n    print(cal(n, arr))", "import enum\ntest = int(input())\nwhile test:\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    i = n - 2\n    ans = 0\n    while i >= 0:\n        if a[i] > a[i + 1]:\n            break\n        i -= 1\n    st = set(a[:i + 1])\n    ans = len(st)\n    for j in range(n - 1, i, -1):\n        if a[j] in st:\n            ans = len(set(a[:j + 1]))\n            break\n    print(ans)\n    test -= 1", "def solve():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if a == sorted(a):\n        print(0)\n    else:\n        s = set()\n        index = -1\n        for i in range(n - 2, -1, -1):\n            if a[i] > a[i + 1]:\n                index = i\n                break\n        for i in range(0, index + 1):\n            s.add(a[i])\n        index2 = -1\n        for i in range(n - 1, index, -1):\n            if a[i] in s:\n                index2 = i\n                break\n        for i in range(index + 1, index2):\n            s.add(a[i])\n        print(len(s))\n    return None\nt = int(input())\nfor _ in range(t):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    p = []\n    z = set()\n    for i in map(int, input().split()):\n        if i in z:\n            i = 0\n        if p and i < p[-1]:\n            z.update(p)\n            p.clear()\n        p.append(i)\n    print(len(z - {0}))", "for _ in range(int(input())):\n    n = int(input())\n    e = set()\n    v = set()\n    otv = 0\n    pred = -1\n    for i in map(int, input().split()):\n        if pred != -1:\n            if i in e:\n                i = 0\n            if i < pred:\n                e.update(v)\n                v = set()\n        v.add(i)\n        pred = i\n    if 0 in e:\n        print(len(e) - 1)\n    else:\n        print(len(e))", "for t in range(int(input())):\n    m = input()\n    a = {0}\n    b = {0}\n    c = 0\n    for i in map(int, input().split()):\n        if i in b:\n            i = 0\n        if i < c:\n            b |= a\n            a = {0}\n        a |= {i}\n        c = i\n    print(len(b) - 1)", "import sys\nimport math\nfrom collections import Counter\n\ndef gi():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef gs():\n    return sys.stdin.readline().strip()\n\ndef fun(a):\n    rev = a[::-1]\n    l = len(a)\n    i = 0\n    while i < l - 1:\n        if rev[i] < rev[i + 1]:\n            break\n        i += 1\n    i += 1\n    seen = set()\n    while i < l:\n        seen.add(rev[i])\n        i += 1\n    i = 0\n    while i < l:\n        if rev[i] in seen:\n            break\n        i += 1\n    while i < l:\n        seen.add(rev[i])\n        i += 1\n    if 0 in seen:\n        seen.remove(0)\n    return len(seen)\nfor _ in range(int(input())):\n    p = int(input())\n    a = gi()\n    print(fun(a))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n    else:\n        t = -1\n        for i in range(n - 1, -1, -1):\n            if i > 0 and a[i - 1] > a[i]:\n                t = i - 1\n                break\n        if t == -1:\n            print(0)\n        else:\n            num = len(set(a[0:t + 1]))\n            k = -1\n            s = set(a[0:t + 1])\n            for i in range(n - 1, t, -1):\n                if a[i] in s:\n                    k = i\n                    break\n            if k == -1:\n                print(num)\n            else:\n                print(len(set(a[0:k + 1])))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = a[0]\n    cur_s = {0}\n    pre_s = {p}\n    for a_i in a:\n        if a_i in cur_s:\n            a_i = 0\n        if p > a_i:\n            cur_s |= pre_s\n            pre_s = set()\n        p = a_i\n        pre_s.add(a_i)\n    print(len(cur_s) - 1)", "from collections import Counter\nimport string\nimport math\nimport bisect\nimport sys\nfrom fractions import Fraction\n\ndef array_int():\n    return [int(i) for i in sys.stdin.readline().split()]\n\ndef vary(arrber_of_variables):\n    if arrber_of_variables == 1:\n        return int(sys.stdin.readline())\n    if arrber_of_variables >= 2:\n        return map(int, sys.stdin.readline().split())\n\ndef makedict(var):\n    return dict(Counter(var))\nmod = 10 ** 9 + 7\ntestcases = vary(1)\nfor _ in range(testcases):\n    n = vary(1)\n    arr = array_int()\n    vis = set()\n    ans = 0\n    curmin = arr[n - 1]\n    for i in range(n - 2, -1, -1):\n        if arr[i] > curmin:\n            curmin = 0\n            if arr[i] not in vis:\n                ans += 1\n                vis.add(arr[i])\n            arr[i] = 0\n        else:\n            curmin = arr[i]\n    start = -1\n    for i in range(n - 1, -1, -1):\n        if arr[i] != 0 and arr[i] in vis:\n            start = i\n            break\n    for i in range(start, -1, -1):\n        if arr[i] != 0 and arr[i] not in vis:\n            vis.add(arr[i])\n            ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    L = list(map(int, input().split()))\n    nulified = set()\n    passed = set()\n    for i in range(n - 1):\n        if L[i] in nulified:\n            continue\n        if L[i + 1] in nulified:\n            next = 0\n        else:\n            next = L[i + 1]\n        passed.add(L[i])\n        if L[i] > next:\n            nulified.update(passed)\n            passed.clear()\n    nulified.discard(0)\n    print(len(nulified))", "def codeforces(arr):\n    ind = 0\n    sort = -1\n    while ind < n - 1:\n        if arr[ind] <= arr[ind + 1]:\n            if sort == -1:\n                sort = ind\n            ind += 1\n            continue\n        sort = -1\n        ind += 1\n    if sort == -1:\n        dist = {}\n        for i in range(n - 1):\n            dist[arr[i]] = 1\n        return len(dist)\n    dist = {}\n    for i in range(sort):\n        dist[arr[i]] = 1\n    ind = sort\n    while ind < n:\n        try:\n            dist[arr[ind]]\n            for i in range(sort, ind + 1):\n                dist[arr[i]] = 1\n            sort = ind + 1\n        except:\n            pass\n        ind += 1\n    return len(dist)\nt = int(input())\nfor test in range(t):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    print(codeforces(arr))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    cur = set()\n    removed = set()\n    m = 0\n    for i in range(n):\n        if l[i] in removed:\n            t = 0\n        else:\n            t = l[i]\n        if t >= m:\n            cur.add(t)\n            m = t\n            continue\n        else:\n            removed.update(cur)\n            cur = {l[i]}\n            m = l[i]\n    print(len(removed))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if arr[i] not in d:\n            d[arr[i]] = 1\n        else:\n            d[arr[i]] += 1\n    i = n - 1\n    while i > 0:\n        if arr[i] == arr[i - 1]:\n            d[arr[i]] -= 1\n            i -= 1\n        elif d[arr[i]] == 1 and arr[i - 1] < arr[i]:\n            d[arr[i]] -= 1\n            i -= 1\n        else:\n            break\n    t = set(arr[:i])\n    print(len(t))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n    else:\n        j = n - 1\n        while ar[j] >= ar[j - 1] and j > 0:\n            j -= 1\n        m = {'none'}\n        for l in range(j):\n            if ar[l] not in m:\n                m.add(ar[l])\n        k = n - 1\n        while ar[k] not in m and k > 0:\n            k -= 1\n        for l in range(j, k):\n            if ar[l] not in m:\n                m.add(ar[l])\n        m.remove('none')\n        print(len(m))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = len(a) - 1\n    while l > 0 and a[l - 1] <= a[l]:\n        l -= 1\n    sett = set(a[:l])\n    temp = l\n    for i in range(len(a) - 1, l - 1, -1):\n        if a[i] in sett:\n            temp = i\n            break\n    answer = set(a[:temp])\n    print(len(answer))", "for _ in range(int(input())):\n    n = int(input())\n    a = [*map(int, input().split())]\n    q = []\n    w = set()\n    for i in a:\n        if q and (q[-1] > i or i in w):\n            while q:\n                w.add(q.pop())\n        q.append(i)\n    print(len(w))", "for _ in range(int(input())):\n    n = int(input())\n    a = [*map(int, input().split())]\n    q = []\n    w = set()\n    for i in a:\n        if q and (q[-1] > i or i in w):\n            while q:\n                w.add(q.pop())\n        q.append(i)\n    print(len(w))", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if n == 1:\n        print(0)\n        continue\n    idx = n - 1\n    for i in range(n - 1, 0, -1):\n        if a[i - 1] <= a[i]:\n            idx -= 1\n        else:\n            break\n    s = set()\n    for i in range(idx):\n        s.add(a[i])\n    last = -1\n    for i in range(idx, n):\n        if a[i] in s:\n            last = i\n    if last == -1:\n        print(len(s))\n    else:\n        for i in range(idx, last + 1):\n            s.add(a[i])\n        print(len(s))", "for t in range(int(input())):\n    n = int(input())\n    l = [*map(int, input().split())]\n    if sorted(l) == l:\n        print(0)\n        continue\n    for i in range(n - 2, -1, -1):\n        if l[i] > l[i + 1]:\n            break\n    a = set(l[:i + 1])\n    for j in range(n - 1, i - 1, -1):\n        if l[j] in a:\n            break\n    for k in range(i, j + 1):\n        a.add(l[k])\n    print(len(a))", "for _ in range(int(input())):\n    n = int(input())\n    a = map(int, input().split())\n    arr = []\n    z = set()\n    for i in a:\n        if i in z:\n            i = 0\n        if arr and i < arr[-1]:\n            z.update(arr)\n            arr.clear()\n        arr.append(i)\n    print(len(z - {0}))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dic = {}\n    ind = n - 2\n    while ind >= 0 and arr[ind + 1] >= arr[ind]:\n        ind -= 1\n    c = 0\n    for i in range(ind, -1, -1):\n        if arr[i] not in dic:\n            c += 1\n            dic[arr[i]] = True\n    for i in range(n - 2, ind - 1, -1):\n        if arr[i] not in dic and arr[i + 1] in dic:\n            c += 1\n            dic[arr[i]] = True\n    print(c)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    w = list(map(int, input().split()))\n    st = set()\n    l = 100000000\n    x = -1\n    for g in range(len(w) - 1, -1, -1):\n        if w[g] > l:\n            x = g\n            for j in range(0, g + 1):\n                st.add(w[j])\n            break\n        l = w[g]\n    r = x\n    for g in range(x, len(w)):\n        if w[g] in st:\n            r = g\n    st.clear()\n    for g in range(0, r + 1):\n        st.add(w[g])\n    print(len(st))", "for _ in ' ' * int(input()):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l_ = [0] * (max(l) + 1)\n    for (index, value) in enumerate(l):\n        l_[value] = index\n    for i in range(n - 1, 0, -1):\n        if l[i] < l[i - 1]:\n            s = set(l[:i])\n            max_index = max([l_[j] for j in s])\n            print(len(set(l[:max_index + 1])))\n            break\n    else:\n        print(0)", "for t in range(int(input())):\n    n = int(input())\n    l = [*map(int, input().split())]\n    a = []\n    b = set()\n    for i in l:\n        if i in b:\n            i = 0\n        if a and i < a[-1]:\n            b.update(a)\n            a.clear()\n        a.append(i)\n    print(len(b - {0}))", "for t in range(int(input())):\n    n = int(input())\n    l = [0] + [*map(int, input().split())]\n    a = {0}\n    s = []\n    for i in range(n, 0, -1):\n        s.append(l[i])\n        if l[i] < l[i - 1]:\n            a.update(l[:i])\n            break\n    for i in range(len(s)):\n        if s[i] in a:\n            a.update(s[i:])\n            break\n    print(len(a) - 1)", "import sys\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, sys.stdin.readline().split()))\n    curr = {arr[n - 1]: n - 1}\n    last = arr[n - 1]\n    res = 0\n    flag = False\n    for i in range(n - 2, -1, -1):\n        if arr[i] > last:\n            flag = True\n            res = i\n            for x in range(i + 1):\n                if arr[x] in curr:\n                    res = max(res, curr[arr[x]])\n            break\n        elif arr[i] not in curr:\n            curr[arr[i]] = i\n            last = arr[i]\n    if flag:\n        print(len(set(arr[:res + 1])))\n    else:\n        print(0)", "for t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = {0}\n    s = []\n    for i in range(n - 1, 0, -1):\n        if len(a) == 1:\n            s.append(l[i])\n        if l[i] < l[i - 1] or len(a) > 1:\n            a.add(l[i - 1])\n    c = 0\n    for i in s:\n        if c or i in a:\n            a.add(i)\n            c = 1\n    print(len(a) - 1)", "for _ in range(int(input())):\n    n = int(input())\n    a = [*map(int, input().split())]\n    q = []\n    w = set()\n    for i in a:\n        if q and (q[-1] > i or i in w):\n            while q:\n                w.add(q.pop())\n        q.append(i)\n    print(len(w))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = 0\n    s = set()\n    for i in range(1, n):\n        if a[i] in s or a[i] < a[i - 1]:\n            for j in a[k:i]:\n                s.add(j)\n            k = i\n    print(len(s))", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    arr = list(map(int, input().split())) + [float('inf')]\n    cur_min = float('-inf')\n    ans = 0\n    made_zero = set()\n    encounter = set()\n    for num in arr:\n        if num < cur_min or num in made_zero:\n            made_zero |= encounter\n            encounter = set()\n            if num not in made_zero:\n                encounter.add(num)\n            cur_min = num\n        else:\n            encounter.add(num)\n            cur_min = num\n    print(len(made_zero))", "for _ in range(int(input())):\n    n = int(input())\n    X = [int(_) for _ in input().split()][::-1]\n    S = set()\n    for _ in range(n - 1):\n        if X[_] < X[_ + 1] or len(S) != 0:\n            S.add(X[_ + 1])\n    for _ in range(n):\n        if X[_] in S:\n            print(len(set(X[_:])))\n            break\n    else:\n        print(0)", "def solve():\n    n = int(input())\n    lst = list(map(int, input().split()))\n    s = set([lst[0]])\n    st = set([])\n    ans = 0\n    for i in range(1, n):\n        if lst[i] in st:\n            lst[i] = 0\n        if lst[i] < lst[i - 1]:\n            ans += len(s)\n            st |= s\n            s = set([])\n        if lst[i] in st:\n            lst[i] = 0\n        if lst[i] > 0:\n            s.add(lst[i])\n    print(ans)\nfor i in range(int(input())):\n    solve()", "for i in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if a == sorted(a):\n        print(0)\n    else:\n        for j in range(n - 1, 0, -1):\n            if a[j] < a[j - 1]:\n                d = j\n                break\n        l = set(a[0:d])\n        for k in range(n - 1, d - 1, -1):\n            if a[k] in l:\n                break\n        for m in range(d, k):\n            l.add(a[m])\n        print(len(set(l)))", "cas = int(input())\nfor j in range(cas):\n    n = int(input())\n    p = 0\n    t = {0}\n    q = {0}\n    for x in [int(i) for i in input().split()]:\n        x *= x not in t\n        if x < p:\n            t |= q\n            q = {0}\n        q |= {x}\n        p = x\n    print(len(t) - 1)", "cas = int(input())\nfor j in range(cas):\n    n = int(input())\n    a = [0] + [int(x) for x in input().split()]\n    b = list(range(n + 1))\n    l = 1\n    c = 0\n    for i in range(2, n + 1):\n        if b[a[i - 1]] > b[a[i]]:\n            while l < i:\n                if b[a[l]] != 0:\n                    c = c + 1\n                    b[a[l]] = 0\n                l = l + 1\n    print(c)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    q = []\n    w = set()\n    for i in a:\n        if q and (q[-1] > i or i in w):\n            while q:\n                w.add(q.pop())\n        q.append(i)\n    print(len(w))\n    t -= 1", "for _ in [0] * int(input()):\n    n = int(input())\n    a = [*map(int, input().split())]\n    b = set()\n    c = 0\n    for i in range(1, n):\n        if a[i] < a[i - 1] or a[i] in b:\n            for d in a[c:i]:\n                b.add(d)\n            c = i\n    print(len(b))", "import collections\n\ndef min_operations(A, n):\n    d = collections.defaultdict(lambda : [])\n    for (i, ele) in enumerate(A):\n        d[ele].append(i)\n    s = 0\n    operations = 0\n    for i in range(1, n):\n        if A[i] < A[i - 1]:\n            while s < i:\n                cur = A[s]\n                if cur:\n                    for j in d[cur]:\n                        A[j] = 0\n                    operations += 1\n                s += 1\n    return operations\nt = int(input())\nwhile t:\n    n = int(input())\n    A = [int(x) for x in input().split()]\n    print(min_operations(A, n))\n    t -= 1", "def solve(a: list, zeroes: set=None):\n    if not zeroes:\n        zeroes = set()\n    not_ordered = False\n    for i in range(1, len(a))[::-1]:\n        if a[i] < a[i - 1]:\n            not_ordered = True\n            break\n    if not_ordered:\n        zeroes.update(a[:i])\n    for j in range(len(a)):\n        if a[j] in zeroes:\n            a[j] = 0\n    for i in range(1, len(a))[::-1]:\n        if a[i] < a[i - 1]:\n            return solve(a, zeroes)\n    return len(zeroes.difference([0]))\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        print(solve(a))\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    arr_list = list(map(int, input().split()))\n    s = set()\n    f = 0\n    ans = 0\n    for i in range(1, n):\n        if arr_list[i] in s or arr_list[i] < arr_list[i - 1]:\n            for j in arr_list[f:i]:\n                s.add(j)\n            f = i\n    print(len(s))", "for t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    minn = arr[-1]\n    rem_arr = set()\n    for i in range(n - 1, -1, -1):\n        if arr[i] <= minn:\n            minn = arr[i]\n        else:\n            minn = 0\n            rem_arr.add(arr[i])\n    flag = False\n    for i in range(n - 1, -1, -1):\n        if arr[i] in rem_arr:\n            flag = True\n        if flag:\n            rem_arr.add(arr[i])\n    print(len(rem_arr))", "for i in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    b = set()\n    c = 0\n    for j in range(1, len(p)):\n        if p[j] < p[j - 1] or p[j] in b:\n            for k in p[c:j]:\n                b.add(k)\n            c = j\n    print(len(b))", "for _ in range(int(input())):\n    x = int(input())\n    t = list(map(int, input().split()))\n    if sorted(t) == t:\n        print(0)\n        continue\n    for i in range(len(t) - 2, -1, -1):\n        if t[i + 1] >= t[i]:\n            continue\n        else:\n            break\n    j = i\n    end = set(t[:i + 1])\n    for k in range(i + 1, x):\n        if t[k] in end:\n            j = k\n    print(len(set(t[:j + 1])))", "def ss(n, l):\n    if l == sorted(l):\n        return 0\n    i = n - 2\n    x = l[-1]\n    while i >= 0 and l[i] <= x:\n        x = l[i]\n        i -= 1\n    d = {}\n    for x in range(i + 1):\n        if l[x] in d:\n            d[l[x]] += 1\n        else:\n            d[l[x]] = 1\n    ans = len(d)\n    x = n - 1\n    while x > i:\n        if l[x] in d:\n            break\n        else:\n            x -= 1\n    p = {}\n    for y in range(x + 1):\n        if l[y] in p:\n            p[l[y]] += 1\n        else:\n            p[l[y]] = 1\n    return len(p)\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(ss(n, l))", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor t_item in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    s = []\n    b = dict()\n    res = 0\n    flag = False\n    ind = -1\n    for i in range(n - 1, -1, -1):\n        x = a[i]\n        if x not in b:\n            b[x] = i\n        if not s or x <= s[-1][0]:\n            s.append([x, i])\n            continue\n        else:\n            s.append([x, i])\n            ind = i\n            flag = True\n            break\n    t = set()\n    if flag:\n        for i in range(ind, -1, -1):\n            x = a[i]\n            if x not in b:\n                if x not in t:\n                    t.add(x)\n                    res += 1\n            else:\n                furthest = b[x]\n                while s and s[-1][1] <= furthest:\n                    (q, w) = s.pop()\n                    furthest = max(furthest, w)\n                    if q not in t:\n                        t.add(q)\n                        res += 1\n    print(res)", "import math\n\ndef resolve(nums):\n    res = 0\n    stack = []\n    ever_been_set = set()\n    for item in nums:\n        if item in ever_been_set:\n            item = 0\n        if len(stack) == 0:\n            if item > 0:\n                stack.append(item)\n        elif item < stack[-1]:\n            while stack:\n                poped = stack.pop()\n                if poped not in ever_been_set:\n                    ever_been_set.add(poped)\n                    res += 1\n            if item > 0:\n                stack.append(item)\n        else:\n            stack.append(item)\n    return res\n\ndef read_input():\n    n = int(input())\n    nums = []\n    line_1 = input().split(' ')\n    for item in line_1:\n        nums.append(int(item))\n    return nums\ncase_num = int(input())\nif not case_num == 0:\n    for index in range(case_num):\n        nums = read_input()\n        res = resolve(nums)\n        print(res)", "case = int(input())\nfor i in range(case):\n    n = int(input())\n    a = [int(v) for v in input().split()]\n    if n == 1:\n        print(0)\n    elif n == 2:\n        if a[1] < a[0]:\n            print(1)\n        else:\n            print(0)\n    else:\n        index1 = 0\n        proceed = 0\n        for j in range(n):\n            if a[n - j - 2] > a[n - j - 1]:\n                index1 = n - j - 1\n                break\n        b = set(a[:index1])\n        while proceed == 0:\n            for k in range(n):\n                if n - k - 1 <= index1:\n                    proceed = 1\n                    break\n                elif a[n - k - 1] in b:\n                    index1 = n - k - 1\n                    break\n            b = set(a[:index1])\n        print(len(b))", "from collections import Counter\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    array = list(map(int, input().split(' ')[:n]))\n    if n == 1:\n        print(0)\n    else:\n        find = -1\n        for i in range(n - 1, 0, -1):\n            if array[i] < array[i - 1]:\n                find = i - 1\n                break\n        if find != -1:\n            target = -1\n            d = Counter(array[:find + 1])\n            for i in range(n - 1, -1, -1):\n                if array[i] in d:\n                    target = i\n                    break\n            d1 = Counter(array[:target + 1])\n            print(len(d1))\n        else:\n            print(0)\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    visited = set()\n    count = 0\n    p = 0\n    for i in range(n - 1):\n        if a[i] not in visited:\n            if a[i + 1] in visited:\n                if a[i] > 0:\n                    visited.add(a[i])\n                    count += 1\n                    for j in range(p, i):\n                        if a[j] not in visited:\n                            visited.add(a[j])\n                            count += 1\n                    p = i + 1\n            elif a[i] > a[i + 1]:\n                visited.add(a[i])\n                count += 1\n                for j in range(p, i):\n                    if a[j] not in visited:\n                        visited.add(a[j])\n                        count += 1\n                p = i + 1\n    print(count)", "for _ in [0] * int(input()):\n    n = int(input())\n    a = [*map(int, input().split())]\n    b = set()\n    k = 0\n    for i in range(1, n):\n        if a[i] < a[i - 1] or a[i] in b:\n            for j in a[k:i]:\n                b.add(j)\n            k = i\n    print(len(b))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    set1 = set()\n    set1.add(a[0])\n    s = 0\n    for i in range(1, n):\n        if a[i] in set1 and a[i] != a[i - 1] or a[i] < a[i - 1]:\n            s = len(set1)\n        set1.add(a[i])\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = -1\n    for i in range(n - 1):\n        if a[i] > a[i + 1]:\n            k = i\n    d = {}\n    j = 0\n    for i in range(k + 1):\n        d[a[i]] = 1\n    for i in range(k + 1, n):\n        if a[i] in d.keys():\n            while j < i:\n                d[a[j]] = 1\n                j += 1\n    c = 0\n    for i in d.keys():\n        c += 1\n    print(c)", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    st = dict()\n    ans = 0\n    for i in range(n - 1, -1, -1):\n        if i < n - 1 and a[i] > a[i + 1]:\n            ans = i\n            j = 0\n            while j <= ans:\n                if a[j] in st:\n                    ans = max(ans, st[a[j]])\n                j += 1\n            ans = len(set(a[:ans + 1]))\n            break\n        if not a[i] in st:\n            st[a[i]] = i\n    print(ans)", "ts = int(input())\nfor _ in range(ts):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    a = set()\n    b = [arr[0]]\n    for x in range(1, n, 1):\n        if arr[x] < arr[x - 1] or (arr[x] in a and (not arr[x - 1] in a)):\n            a.update(b)\n            b = [arr[x]]\n        else:\n            b.append(arr[x])\n    print(len(a))", "for _ in range(int(input())):\n    leng = int(input())\n    num = [int(x) for x in input().split()]\n    se2 = set()\n    se = set()\n    for i in range(1, leng):\n        num1 = num[i - 1]\n        num2 = num[i]\n        se2.add(num1)\n        if not (num1 <= num2 and num2 not in se):\n            se.update(se2)\n            se2 = set()\n    print(len(se))", "T = int(input())\nwhile T:\n    T -= 1\n    L = int(input())\n    arr = list(map(int, input().split()))\n    j = L - 1\n    ma = float('inf')\n    se = {}\n    while j >= 0:\n        if arr[j] <= ma:\n            ma = arr[j]\n            se[arr[j]] = j\n        else:\n            break\n        j -= 1\n    delete = set()\n    ans = 0\n    if j >= 0:\n        i = 0\n        while i <= j:\n            if arr[i] not in delete:\n                ans += 1\n                delete.add(arr[i])\n                if arr[i] in se.keys():\n                    j = max(se[arr[i]], j)\n            i += 1\n    print(ans)", "def inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nt = inp()\nfor i in range(t):\n    n = inp()\n    arr = inlt()\n    nums = set()\n    processed = []\n    current = 0\n    last = 0\n    for i in range(n):\n        if arr[i] >= current and arr[i] not in nums:\n            processed.append(arr[i])\n            current = arr[i]\n        else:\n            for j in processed:\n                if j in nums:\n                    continue\n                else:\n                    nums.add(j)\n            last = i\n            if arr[i] not in nums:\n                processed = [arr[i]]\n                current = arr[i]\n            else:\n                processed = []\n                current = 0\n    print(len(nums))", "def solve():\n    n = int(input())\n    for _ in range(n):\n        x = int(input())\n        arr = list(map(int, input().split()))\n        indices = {}\n        for i in range(len(arr)):\n            v = arr[i]\n            if v not in indices:\n                indices[v] = [i]\n            else:\n                indices[v].append(i)\n        for j in range(len(arr) - 1, -1, -1):\n            if j == 0:\n                print(0)\n                break\n            if arr[j] < arr[j - 1]:\n                print(len(set(arr[0:indices[arr[j]][-1]])))\n                break\n            if len(indices[arr[j]]) > 1 and indices[arr[j]][-1] != indices[arr[j]][-2] + 1:\n                print(len(set(arr[0:indices[arr[j]][-1] + 1])))\n                break\n            indices[arr[j]].pop()\nsolve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    r = 0\n    for i in range(n - 1, 0, -1):\n        if a[i] < a[i - 1]:\n            r = i\n            break\n    s = set()\n    for i in range(r):\n        s.add(a[i])\n    ans = len(s)\n    for i in range(n):\n        if a[i] in s:\n            a[i] = 0\n    flag = False\n    r1 = r - 1\n    for i in range(n - 1, r - 1, -1):\n        if i > r and a[i] == 0:\n            flag = True\n        if flag and a[i] > 0:\n            r1 = i\n            break\n    if flag:\n        append = set()\n        for i in range(r1, r - 1, -1):\n            if a[i] > 0:\n                append.add(a[i])\n        ans += len(append)\n    print(ans)"]