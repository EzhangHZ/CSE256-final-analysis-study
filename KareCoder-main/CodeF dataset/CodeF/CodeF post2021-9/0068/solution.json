["t = int(input())\nfor tc in range(t):\n    (a0, a1) = map(int, input().split(' '))\n    (a2, a3) = map(int, input().split(' '))\n    if a0 < a1 and a2 < a3 and (a0 < a2) and (a1 < a3):\n        print('YES')\n    elif a2 < a0 and a3 < a1 and (a2 < a3) and (a0 < a1):\n        print('YES')\n    elif a3 < a2 and a1 < a0 and (a3 < a1) and (a2 < a0):\n        print('YES')\n    elif a1 < a3 and a0 < a2 and (a1 < a0) and (a3 < a2):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    (c, d) = map(int, input().split())\n\n    def pan(a, b, c, d):\n        if a < b and c < d and (a < c) and (b < d):\n            return True\n        return False\n\n    def func(a, b, c, d):\n        return (c, a, d, b)\n    bo = False\n    for i in range(4):\n        if pan(a, b, c, d):\n            print('YES')\n            bo = True\n            break\n        else:\n            (a, b, c, d) = func(a, b, c, d)\n    if not bo:\n        print('NO')", "def check(l):\n    return l[0][0] < l[0][1] and l[1][0] < l[1][1] and (l[0][0] < l[1][0]) and (l[0][1] < l[1][1])\nn = int(input())\nfor i in range(n):\n    l = []\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    l = [a, b]\n    if check(l):\n        print('YES')\n        continue\n    tmp = l[0][0]\n    l[0][0] = l[0][1]\n    l[0][1] = l[1][1]\n    l[1][1] = l[1][0]\n    l[1][0] = tmp\n    if check(l):\n        print('YES')\n        continue\n    tmp = l[0][0]\n    l[0][0] = l[0][1]\n    l[0][1] = l[1][1]\n    l[1][1] = l[1][0]\n    l[1][0] = tmp\n    if check(l):\n        print('YES')\n        continue\n    tmp = l[0][0]\n    l[0][0] = l[0][1]\n    l[0][1] = l[1][1]\n    l[1][1] = l[1][0]\n    l[1][0] = tmp\n    if check(l):\n        print('YES')\n        continue\n    print('NO')", "for _ in range(int(input())):\n    a = [0 for _ in range(4)]\n    (a[0], a[1]) = list(map(int, input().split()))\n    (a[2], a[3]) = list(map(int, input().split()))\n    flag = False\n    if a[0] < a[1] and a[0] < a[2] and (a[1] < a[3]) and (a[2] < a[3]):\n        flag = True\n    if a[2] < a[0] and a[2] < a[3] and (a[0] < a[1]) and (a[3] < a[1]):\n        flag = True\n    if a[3] < a[2] and a[3] < a[1] and (a[2] < a[0]) and (a[1] < a[0]):\n        flag = True\n    if a[1] < a[3] and a[1] < a[0] and (a[3] < a[2]) and (a[0] < a[2]):\n        flag = True\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nresults = []\nfor i in range(t):\n    s1 = list(map(int, input().strip().split()))\n    s2 = list(map(int, input().strip().split()))\n    if s1[0] < s1[1] and s2[0] < s2[1] and (s1[0] < s2[0]) and (s1[1] < s2[1]):\n        results.append('YES')\n    elif s1[0] > s1[1] and s2[0] > s2[1] and (s1[0] < s2[0]) and (s1[1] < s2[1]):\n        results.append('YES')\n    elif s1[0] > s1[1] and s2[0] > s2[1] and (s1[0] > s2[0]) and (s1[1] > s2[1]):\n        results.append('YES')\n    elif s1[0] < s1[1] and s2[0] < s2[1] and (s1[0] > s2[0]) and (s1[1] > s2[1]):\n        results.append('YES')\n    else:\n        results.append('NO')\nfor j in results:\n    print(j)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (a, b) = map(int, input().split())\n    (c, d) = map(int, input().split())\n    (flug, i) = (True, 6)\n    while i > 0:\n        if a < b and a < c and (d > b) and (d > c):\n            print('YES')\n            flug = False\n            break\n        else:\n            (a, b, c, d) = (c, a, d, b)\n        i -= 1\n    if flug:\n        print('NO')", "n = int(input())\nfor _ in range(n):\n    r1 = map(int, input().split(' '))\n    r2 = map(int, input().split(' '))\n    pos = False\n    for _ in range(4):\n        (a, b) = r1\n        (c, d) = r2\n        r1 = [c, a]\n        r2 = [d, b]\n        if r1[0] < r1[1] and r2[0] < r2[1] and (r1[0] < r2[0]) and (r1[1] < r2[1]):\n            print('YES')\n            pos = True\n            break\n    if not pos:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    ans = 'NO'\n    (a1, a2) = map(int, input().split())\n    (a3, a4) = map(int, input().split())\n    for j in range(4):\n        if a1 < a2 and a3 < a4 and (a1 < a3) and (a2 < a4):\n            ans = 'YES'\n            break\n        (a1, a2, a3, a4) = (a3, a1, a4, a2)\n    print(ans)", "def check(m):\n    if m[0][0] < m[1][0] < m[1][1] and m[0][0] < m[0][1] < m[1][1]:\n        return True\n    else:\n        return False\n\ndef rotate(m):\n    t = [[0, 0], [0, 0]]\n    t[0][0] = m[1][0]\n    t[0][1] = m[0][0]\n    t[1][1] = m[0][1]\n    t[1][0] = m[1][1]\n    return t\nfor _ in range(int(input())):\n    m = [[int(x) for x in input().split()], [int(x) for x in input().split()]]\n    if m[0][0] < m[1][0] < m[1][1] and m[0][0] < m[0][1] < m[1][1]:\n        print('YES')\n    else:\n        m = rotate(m)\n        if check(m):\n            print('YES')\n        else:\n            m = rotate(m)\n            if check(m):\n                print('YES')\n            else:\n                m = rotate(m)\n                if check(m):\n                    print('YES')\n                else:\n                    print('NO')", "def abc(a, b):\n    x1 = True\n    x2 = True\n    x3 = True\n    x4 = True\n    if a[0] > a[1]:\n        x1 = False\n    if b[0] > b[1]:\n        x2 = False\n    if a[0] > b[0]:\n        x3 = False\n    if a[1] > b[1]:\n        x4 = False\n    if x1 == False and x2 == False and (x3 == False) and (x4 == False) or (x1 != False and x2 != False and (x3 != False) and (x4 != False)) or (x1 == True and x2 == True and (x3 == False) and (x4 == False)) or (x1 == False and x2 == False and (x3 == True) and (x4 == True)):\n        return True\n    else:\n        return False\nfor _ in range(int(input())):\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    a = abc(x, y)\n    if a == True:\n        print('YES')\n    else:\n        print('NO')", "def diag(a, b, c, d):\n    if a == max(a, b, c, d) and d == min(a, b, c, d):\n        return 'YES'\n    if d == max(a, b, c, d) and a == min(a, b, c, d):\n        return 'YES'\n    if b == max(a, b, c, d) and c == min(a, b, c, d):\n        return 'YES'\n    if c == max(a, b, c, d) and b == min(a, b, c, d):\n        return 'YES'\n    return 'NO'\nt = int(input())\nfor iter in range(t):\n    (a, b) = list(map(int, input().split()))\n    (c, d) = list(map(int, input().split()))\n    print(diag(a, b, c, d))", "t = int(input())\nfor pushups in range(t):\n    (a, b) = map(int, input().split())\n    (c, d) = map(int, input().split())\n    A = [a, b, d, c]\n    x = max(A)\n    y = min(A)\n    if abs(A.index(x) - A.index(y)) == 2:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    (c, d) = map(int, input().split())\n    lst = [a, b, c, d, a, b]\n    if abs(lst.index(min(lst)) - lst.index(max(lst))) == 3:\n        print('YES')\n    else:\n        lst.pop(0)\n        lst.pop(0)\n        if abs(lst.index(min(lst)) - lst.index(max(lst))) == 3:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nfor _ in range(t):\n    (a, b) = list(map(int, input().split()))\n    (c, d) = list(map(int, input().split()))\n    if a < b and c < d and (a < c) and (b < d):\n        print('YES')\n    elif a < b and c < d and (a > c) and (b > d):\n        print('YES')\n    elif a > b and c > d and (a < c) and (b < d):\n        print('YES')\n    elif a > b and c > d and (a > c) and (b > d):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (a, b) = input().split()\n    (c, d) = input().split()\n    if int(a) > int(b) and int(c) > int(d):\n        if int(a) > int(c) and int(b) > int(d):\n            print('YES')\n        elif int(a) < int(c) and int(b) < int(d):\n            print('YES')\n        else:\n            print('NO')\n    elif int(a) < int(b) and int(c) < int(d):\n        if int(a) > int(c) and int(b) > int(d):\n            print('YES')\n        elif int(a) < int(c) and int(b) < int(d):\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "t = int(input(''))\nA = []\nB = []\nC = []\nfor i in range(t):\n    p = [int(z) for z in input('').split()]\n    q = [int(z) for z in input('').split()]\n    r = [p[0], p[1], q[0], q[1]]\n    r.sort()\n    x = [p[0], q[1]]\n    x.sort()\n    y = [p[1], q[0]]\n    y.sort()\n    A.append(x)\n    B.append(y)\n    C.append([r[0], r[3]])\nfor i in range(t):\n    arr1 = A[i]\n    arr2 = B[i]\n    arr3 = C[i]\n    if arr1 == arr3 or arr2 == arr3:\n        print('YES')\n    else:\n        print('NO')", "def rotatemat(mat):\n    (mat[1][0], mat[0][1]) = (mat[0][1], mat[1][0])\n    mat[0] = mat[0][::-1]\n    mat[1] = mat[1][::-1]\n    return mat\n\ndef rotate(nums):\n    for mat in nums:\n        for _ in range(4):\n            if mat[0][0] < mat[0][1] and mat[0][0] < mat[1][0] and (mat[0][1] < mat[1][1]) and (mat[1][0] < mat[1][1]):\n                print('YES')\n                break\n            mat = rotatemat(mat)\n        else:\n            print('NO')\nn = int(input())\nnums = []\nfor i in range(n):\n    mat = []\n    l1 = [int(el) for el in input().split()]\n    l2 = [int(el) for el in input().split()]\n    nums.append([l1, l2])\nrotate(nums)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    (c, d) = map(int, input().split())\n    e = [a, b, d, c]\n    ind = e.index(min(e))\n    f = 0\n    if ind == 0:\n        if e[0] < e[1] and e[1] < e[2] and (e[2] > e[3]):\n            print('YES')\n        else:\n            print('NO')\n    elif ind == 1:\n        if e[1] < e[2] and e[2] < e[3] and (e[3] > e[0]):\n            print('YES')\n        else:\n            print('NO')\n    elif ind == 2:\n        if e[2] < e[3] and e[3] < e[0] and (e[0] > e[1]):\n            print('YES')\n        else:\n            print('NO')\n    elif ind == 3:\n        if e[3] < e[0] and e[0] < e[1] and (e[1] > e[2]):\n            print('YES')\n        else:\n            print('NO')", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    (c, d) = map(int, input().split())\n    l = []\n    for i in range(4):\n        f = a\n        a = b\n        b = d\n        d = c\n        c = f\n        if a < b < c < d or a < c < b < d:\n            l.append('YES')\n        else:\n            l.append('NO')\n    if 'YES' in l:\n        print('YES')\n    else:\n        print('NO')", "n = int(input(''))\nj = 0\nwhile j != n:\n    wartosc = 0\n    elo = input('')\n    elo2 = input('')\n    for i in range(len(elo)):\n        if elo[i] == ' ':\n            tl = int(elo[0:i])\n            tp = int(elo[i + 1:])\n            break\n    for i in range(len(elo2)):\n        if elo2[i] == ' ':\n            bl = int(elo2[0:i])\n            bp = int(elo2[i + 1:])\n            break\n    if tl < tp and bl < bp and (tl < bl) and (tp < bp):\n        print('YES')\n        wartosc += 1\n    else:\n        for i in range(3):\n            tmp = tl\n            tl = bl\n            bl = bp\n            bp = tp\n            tp = tmp\n            if tl < tp and bl < bp and (tl < bl) and (tp < bp):\n                print('YES')\n                wartosc += 1\n                break\n    if wartosc == 0:\n        print('NO')\n    j += 1", "i = int(input())\ng = []\nfor y in range(i):\n    (u, u1) = map(int, input().split())\n    (t, t1) = map(int, input().split())\n    if u < u1 and u < t and (u1 < t1) and (t < t1):\n        g.append('YES')\n    elif t < u and t < t1 and (t1 < u1) and (u < u1):\n        g.append('YES')\n    elif t1 < t and t1 < u1 and (u1 < u) and (t < u):\n        g.append('YES')\n    elif u1 < t1 and u1 < u and (u < t) and (t1 < t):\n        g.append('YES')\n    else:\n        g.append('NO')\n[print(uu) for uu in g]", "for _ in range(int(input())):\n    m = [list(map(int, input().split())) for x in range(2)]\n    f = 0\n    for x in range(4):\n        if m[0][0] < m[0][1] and m[1][0] < m[1][1] and (m[0][0] < m[1][0]) and (m[0][1] < m[1][1]):\n            f = 1\n            break\n        (m[0][0], m[0][1], m[1][1], m[1][0]) = (m[0][1], m[1][1], m[1][0], m[0][0])\n    if f == 1:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    (c, d) = map(int, input().split())\n    answ = True\n    for i in range(4):\n        if a < b and a < c and (c < d) and (b < d):\n            answ = True\n            print('YES')\n            break\n        else:\n            (a, b, c, d) = (b, d, a, c)\n            answ = False\n    if not answ:\n        print('NO')", "a = int(input())\nfor i in range(a):\n    b = input()\n    c = input()\n    (num1, num2, num3, num4) = (0, 0, 0, 0)\n    for i in b:\n        if i == ' ':\n            num1 = int(b[:b.index(i)])\n            num2 = int(b[b.index(i) + 1:])\n            break\n    for i in c:\n        if i == ' ':\n            num3 = int(c[:c.index(i)])\n            num4 = int(c[c.index(i) + 1:])\n            break\n    z = 1\n    for i in range(4):\n        if num1 < num2 and num3 < num4 and (num1 < num3) and (num2 < num4):\n            print('YES')\n            z = 0\n            break\n        else:\n            temp = num1\n            num1 = num3\n            num3 = num4\n            num4 = num2\n            num2 = temp\n    if z == 1:\n        print('NO')", "for t in range(int(input())):\n    f = [int(x) for x in input('').split(' ')]\n    s = [int(x) for x in input('').split(' ')]\n    k = 0\n    for i in range(4):\n        if f[0] < f[1] and s[0] < s[1]:\n            if f[0] < s[0] and f[1] < s[1]:\n                k = 1\n        (f[0], f[1], s[0], s[1]) = (s[0], f[0], s[1], f[1])\n    if k:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    (c, d) = map(int, input().split())\n    if a < b and a < c and (b < d) and (c < d) or (c < a and c < d and (d < b) and (a < b)) or (d < c and d < b and (b < a) and (c < a)) or (b < d and b < a and (a < c) and (d < c)):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\n\ndef f(a, b, c, d):\n    if (min(a, b, c, d), max(a, b, c, d)) == (a, d) or (min(a, b, c, d), max(a, b, c, d)) == (d, a) or (min(a, b, c, d), max(a, b, c, d)) == (b, c) or ((min(a, b, c, d), max(a, b, c, d)) == (c, b)):\n        return 'YES'\n    else:\n        return 'NO'\nanswers = []\nfor k in range(t):\n    a_b = input()\n    c_d = input()\n    [a, b] = a_b.split()\n    [c, d] = c_d.split()\n    answers.append(f(int(a), int(b), int(c), int(d)))\nfor k in range(t):\n    print(answers[k])", "for _ in range(int(input())):\n    out = 'NO'\n    (a, b) = map(int, input().split())\n    (c, d) = map(int, input().split())\n    for i in range(4):\n        if c > a < b and c < d > b:\n            out = 'YES'\n            break\n        else:\n            (a, b, c, d) = (c, a, d, b)\n    print(out)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    (c, d) = map(int, input().split())\n    if a < b and c < d and (a < c) and (b < d):\n        print('YES')\n    else:\n        f = False\n        for i in range(4):\n            if a < b and c < d and (a < c) and (b < d):\n                f = True\n                break\n            ta = a\n            tb = b\n            td = d\n            a = c\n            b = ta\n            d = tb\n            c = td\n        if f:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\n\ndef beautiful(a, b, x, y):\n    if a < b and x < y and (a < x) and (b < y):\n        return True\n    else:\n        return False\nfor i in range(t):\n    r1 = input().split(' ')\n    r2 = input().split(' ')\n    a = int(r1[0])\n    b = int(r1[1])\n    x = int(r2[0])\n    y = int(r2[1])\n    if beautiful(a, b, x, y):\n        print('YES')\n    elif beautiful(x, a, y, b):\n        print('YES')\n    elif beautiful(y, x, b, a):\n        print('YES')\n    elif beautiful(b, y, a, x):\n        print('YES')\n    else:\n        print('NO')", "def beaitiful_matrix(matrix):\n    if matrix[0][0] < matrix[0][1] < matrix[1][1] and matrix[0][0] < matrix[1][0] < matrix[1][1]:\n        return True\nfor i in range(int(input())):\n    flag = True\n    matrix1 = list(map(int, input().split()))\n    matrix2 = list(map(int, input().split()))\n    matrix = [matrix1, matrix2]\n    for g in range(4):\n        if beaitiful_matrix(matrix):\n            flag = False\n            print('YES')\n            break\n        else:\n            matrix3 = [elem.copy() for elem in matrix]\n            matrix3[0][0] = matrix[1][0]\n            matrix3[0][1] = matrix[0][0]\n            matrix3[1][1] = matrix[0][1]\n            matrix3[1][0] = matrix[1][1]\n            matrix = matrix3\n    if flag:\n        print('NO')", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    (c, d) = map(int, input().split())\n    if c > a < b and b < d > c:\n        print('YES')\n    elif a > c < d and d < b > a:\n        print('YES')\n    elif c > d < b and b < a > c:\n        print('YES')\n    elif d > b < a and a < c > d:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    (c, d) = map(int, input().split())\n    if a < b and c < d and (a < c) and (b < d) or (c < a and d < b and (c < d) and (a < b)) or (d < c and b < a and (d < b) and (c < a)) or (b < d and a < c and (b < a) and (d < c)):\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin\n\ndef rotate(matrix):\n    aux = [[0, 0], [0, 0]]\n    aux[0][0] = matrix[1][0]\n    aux[0][1] = matrix[0][0]\n    aux[1][0] = matrix[1][1]\n    aux[1][1] = matrix[0][1]\n    return aux\n\ndef solve(matrix, cont=0):\n    if cont < 4:\n        if matrix[0][0] < matrix[0][1] and matrix[0][0] < matrix[1][0] and (matrix[0][1] < matrix[1][1]) and (matrix[1][0] < matrix[1][1]):\n            return 'YES'\n        return solve(rotate(matrix), cont + 1)\n    return 'NO'\n\ndef main():\n    for _ in range(int(stdin.readline().strip())):\n        matrix = []\n        for _ in range(2):\n            matrix.append(list(map(int, stdin.readline().strip().split())))\n        print(solve(matrix))\nmain()", "for _ in range(int(input())):\n    ans = [[0, 0, 0], [0, 0, 0], [0, 0, 0]]\n    max_val = float('INF')\n    min_val = 0\n    (a, b) = [int(x) for x in input().split()]\n    (c, d) = [int(x) for x in input().split()]\n    lst = [a, b, c, d]\n    max_val = min(max_val, min(lst))\n    min_val = max(min_val, max(lst))\n    if a == max_val and d == min_val or (a == min_val and d == max_val):\n        print('YES')\n    elif b == max_val and c == min_val or (b == min_val and c == max_val):\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\ninp = sys.stdin.readline\n\ndef input():\n    return inp().strip()\n\ndef ii():\n    return int(input())\n\ndef mi():\n    return map(int, input().split())\n\ndef li():\n    return list(map(int, input().split()))\n\ndef solve():\n    (a, b) = mi()\n    (c, d) = mi()\n    for _ in range(4):\n        if a < d and a < c and (a < b) and (d > max(b, c)):\n            print('YES')\n            return\n        (a, b, c, d) = (c, a, d, b)\n    print('NO')\n\ndef main():\n    for _ in range(ii()):\n        solve()\nmain()", "def helper(mat):\n    dir = [(0, 1), (1, 0), (-1, 0), (0, -1)]\n    ans = [[0, 0], [0, 0]]\n    c = 0\n    for i in range(len(mat)):\n        for j in range(len(mat[0])):\n            ans[i + dir[c][0]][j + dir[c][1]] = mat[i][j]\n            c += 1\n    return ans\n\ndef checker(mat):\n    for i in range(2):\n        if mat[i][0] >= mat[i][1]:\n            return False\n        if mat[0][i] >= mat[1][i]:\n            return False\n    return True\nfor i in range(int(input())):\n    mat = []\n    mat.append(list(map(int, input().split(' '))))\n    mat.append(list(map(int, input().split(' '))))\n    y = False\n    for j in range(4):\n        if checker(mat):\n            y = True\n            print('YES')\n            break\n        else:\n            mat = helper(mat)\n    if not y:\n        print('NO')", "t = int(input())\nwhile t > 0:\n    (a, b) = map(int, input().split())\n    (c, d) = map(int, input().split())\n    ok = False\n    for i in range(4):\n        if a < b and c < d and (a < c) and (b < d):\n            ok = True\n        (a, b, c, d) = (b, d, a, c)\n    if ok:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "t = int(input())\nwhile t > 0:\n    (a, b) = map(int, input().split())\n    (c, d) = map(int, input().split())\n    ok = False\n    for i in range(4):\n        if a < b and c < d and (a < c) and (b < d):\n            ok = True\n        (a, b, c, d) = (b, d, a, c)\n    if ok:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "def solve(a, b, c, d):\n    d1 = {}\n    mi = min(a, b, c, d)\n    ma = max(a, b, c, d)\n    d1[a] = 1\n    d1[b] = 2\n    d1[c] = 2\n    d1[d] = 1\n    if d1[mi] == d1[ma]:\n        return 'YES'\n    return 'NO'\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    (c, d) = map(int, input().split())\n    print(solve(a, b, c, d))", "import sys\n\ndef in_int():\n    return int(sys.stdin.readline())\n\ndef in_str():\n    return sys.stdin.readline().rstrip()\n\ndef in_map_int():\n    return map(int, sys.stdin.readline().split())\n\ndef in_arr_int():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef in_arr_str():\n    return sys.stdin.readline().split()\n\ndef is_prime(n):\n    for i in range(2, int(n ** (1 / 2)) + 1):\n        if n % i == 0:\n            return True\n    return False\n\ndef check(arr):\n    if arr[0][0] < arr[0][1] < arr[1][1] and arr[0][0] < arr[1][0] < arr[1][1]:\n        return True\n    return False\n\ndef solve(arr):\n    for _ in range(4):\n        if check(arr):\n            return 'YES'\n        (arr[0][1], arr[1][1], arr[1][0], arr[0][0]) = (arr[0][0], arr[0][1], arr[1][1], arr[1][0])\n    return 'NO'\n\ndef main():\n    t = in_int()\n    for _ in range(t):\n        arr = [[0 for _ in range(2)] for _ in range(2)]\n        arr[0] = list(map(int, in_str().split()))\n        arr[1] = list(map(int, in_str().split()))\n        print(solve(arr))\nmain()", "n = int(input())\nres = []\n\ndef check(a, b, c, d):\n    if a > b and a > c and (d < c) and (d < b) or (a < b and b > d and (c < d) and (c < a)) or (c > a and c > d and (b < a) and (b < d)) or (d > c and d > b and (a < c) and (a < b)):\n        return True\n    else:\n        return False\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    (c, d) = map(int, input().split())\n    if check(a, b, c, d):\n        res.append('YES')\n    else:\n        res.append('NO')\nfor i in res:\n    print(i)", "def gs():\n    return input()\n\ndef gi():\n    return int(input())\n\ndef gl():\n    return list(map(int, input().split()))\n\ndef gt():\n    return map(int, input().split())\nt = gi()\nfor _ in range(t):\n    (a, b) = gt()\n    (c, d) = gt()\n    if a < c and a < b and (d > c) and (d > b):\n        print('YES')\n    elif c < a and c < d and (b > a) and (b > d):\n        print('YES')\n    elif b < a and b < d and (c > a) and (c > d):\n        print('YES')\n    elif d < b and d < c and (a > c) and (a > b):\n        print('YES')\n    else:\n        print('NO')", "def checking(exp):\n    if (exp[0][0] < exp[0][1] and exp[1][0] < exp[1][1]) and (exp[0][0] < exp[1][0] and exp[0][1] < exp[1][1]):\n        return True\n    else:\n        return False\n\ndef rotate(a):\n    result = []\n    for i in range(2):\n        temp_result = []\n        for k in reversed(range(2)):\n            temp_result.append(a[k][i])\n        result.append(temp_result)\n    return result\n\ndef processing(exp):\n    if checking(exp):\n        return 'YES'\n    else:\n        i = 4\n        while i >= 1:\n            temp_list = rotate(exp)\n            if checking(temp_list):\n                return 'YES'\n            else:\n                i -= 1\n                exp = temp_list\n        return 'NO'\nt = int(input())\nwhile t > 0:\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    print(processing([a, b]))\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    (c, d) = map(int, input().split())\n    p1 = a > b and a > c and (c > d) and (b > d)\n    p2 = c > d and c > a and (a > b) and (d > b)\n    p3 = d > c and d > b and (c > a) and (b > a)\n    p4 = b > a and b > d and (a > c) and (d > c)\n    if p1 or p2 or p3 or p4:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    (c, d) = map(int, input().split())\n    if min(b, c) > min(a, d) and max(b, c) < max(a, d) or (min(a, d) > min(b, c) and max(a, d) < max(b, c)):\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s.strip())\n\ndef invr():\n    return map(int, input().split())\nfor _ in range(inp()):\n    (a, b) = invr()\n    (c, d) = invr()\n    arr = [a, b, d, c]\n    for i in range(4):\n        temp = arr[i:] + arr[0:i]\n        if temp[0] <= temp[1] and temp[0] <= temp[3] and (temp[1] <= temp[2]) and (temp[3] <= temp[2]):\n            print('YES')\n            break\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    (d, c) = map(int, input().split())\n    if a < d < c and c > b > a:\n        print('YES')\n    elif d < c < b and b > a > d:\n        print('YES')\n    elif a > d > c and c < b < a:\n        print('YES')\n    elif b < a < d and d > c > b:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (a, b) = list(map(int, input().split()))\n    (c, d) = list(map(int, input().split()))\n    for r in range(4):\n        if a < b < d and a < c < d:\n            print('YES')\n            break\n        (a, b, d, c) = (c, a, b, d)\n    else:\n        print('NO')", "answer = []\nn = int(input())\n\ndef partition(arr):\n    new_arr = [0] * 4\n    (new_arr[0], new_arr[1], new_arr[2], new_arr[3]) = (arr[2], arr[0], arr[3], arr[1])\n    return new_arr\nfor _ in range(n):\n    (a1, a2) = [int(i) for i in input().split()]\n    (b1, b2) = [int(i) for i in input().split()]\n    arr = [a1, a2, b1, b2]\n    flag = False\n    for i in range(4):\n        if arr[0] <= arr[1] <= arr[3] and arr[0] <= arr[2] <= arr[3]:\n            answer.append('YES')\n            flag = True\n            break\n        arr = partition(arr)\n    if flag == False:\n        answer.append('NO')\nfor el in answer:\n    print(el)", "for _ in range(int(input())):\n    a = list(map(int, input().split(' ')))\n    b = list(map(int, input().split(' ')))\n    c = 0\n    while 1:\n        if a[0] < a[1] < b[1] and a[0] < b[0] < b[1]:\n            print('YES')\n            break\n        if c == 4:\n            print('NO')\n            break\n        else:\n            t = a[1]\n            (a[1], a[0]) = (a[0], b[0])\n            (b[0], b[1]) = (b[1], t)\n            c += 1", "num = int(input())\nfor i in range(0, num):\n    flag = 0\n    (a, b) = map(int, input().split(' '))\n    (c, d) = map(int, input().split(' '))\n    l = [a, b, c, d]\n    l2 = []\n    for i in range(0, 4):\n        l2 = []\n        if l[0] < l[1] and l[0] < l[2] and (l[2] < l[3]) and (l[1] < l[3]):\n            flag = 1\n            break\n        l2.append(l[2])\n        l2.append(l[0])\n        l2.append(l[3])\n        l2.append(l[1])\n        l = l2.copy()\n    if flag == 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (a, b) = [int(s) for s in input().split()]\n    (c, d) = [int(s) for s in input().split()]\n    if a > b and a > c and (b > d) and (c > d) or (c > a and c > d and (a > b) and (d > b)) or (d > c and d > b and (c > a) and (b > a)) or (b > d and b > a and (d > c) and (a > c)):\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\n\ndef check(k1, k2):\n    if k1[0] < k1[1] and k1[0] < k2[0] and (k2[0] < k2[1]) and (k1[1] < k2[1]):\n        return True\n    return False\nfor i in range(n):\n    a1 = list(map(int, input().split()))\n    a2 = list(map(int, input().split()))\n    if check(a1, a2):\n        print('YES')\n        continue\n    elif check([a2[0], a1[0]], [a2[1], a1[1]]):\n        print('YES')\n        continue\n    elif check([a2[1], a2[0]], [a1[1], a1[0]]):\n        print('YES')\n        continue\n    elif check([a1[1], a2[1]], [a1[0], a2[0]]):\n        print('YES')\n        continue\n    else:\n        print('NO')", "n = int(input())\nfor i in range(n):\n    a = []\n    b = [int(s) for s in input().split()]\n    c = [int(s) for s in input().split()]\n    a += b\n    a += c\n    if a.index(max(a)) + a.index(min(a)) == 3:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    (c, d) = map(int, input().split())\n    if max(a, b, c, d) - min(a, b, c, d) == abs(a - d) or max(a, b, c, d) - min(a, b, c, d) == abs(b - c):\n        print('YES')\n    else:\n        print('NO')", "def is_beautiful(a):\n    if a[0] < a[1] and a[2] < a[3] and (a[0] < a[2]) and (a[1] < a[3]):\n        return True\n    return False\nt = int(input())\nfor _ in range(t):\n    matrix = list(map(int, input().split() + input().split()))\n    matrix_beauty = is_beautiful(matrix)\n    i = 0\n    while not matrix_beauty and i < 3:\n        (matrix[0], matrix[1], matrix[2], matrix[3]) = (matrix[2], matrix[0], matrix[3], matrix[1])\n        matrix_beauty = is_beautiful(matrix)\n        i += 1\n    print('YES' if matrix_beauty else 'NO')", "tc = int(input())\nfor _ in range(tc):\n    r1 = input().split()\n    r1 = [int(x) for x in r1]\n    r2 = input().split()\n    r2 = [int(x) for x in r2]\n    r = [r1, r2]\n    rnd = 0\n    while rnd < 4:\n        if r[0][0] < r[0][1] and r[1][0] < r[1][1] and (r[0][0] < r[1][0]) and (r[0][1] < r[1][1]):\n            print('YES')\n            rnd = 0\n            break\n        else:\n            a = r[1][0]\n            b = r[0][0]\n            c = r[1][1]\n            d = r[0][1]\n            r[0][0] = a\n            r[0][1] = b\n            r[1][0] = c\n            r[1][1] = d\n            rnd += 1\n        if rnd == 4:\n            print('NO')", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    (c, d) = map(int, input().split())\n    if a > c and b > d:\n        if a > b and c > d or (b > a and d > c):\n            print('YES')\n        else:\n            print('NO')\n    elif c > a and d > b:\n        if a > b and c > d or (b > a and d > c):\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "def beauty_checker(arr):\n    if arr.index(max(arr)) + arr.index(min(arr)) == 3:\n        return 'YES'\n    else:\n        return 'NO'\n\ndef matrix_to_arr(str1, str2):\n    arr = []\n    for i in range(2):\n        arr.append(int(str1.split(' ')[i]))\n    for i in range(2):\n        arr.append(int(str2.split(' ')[i]))\n    return arr\nt = int(input())\narr = []\nanswers = []\nfor i in range(t):\n    arr = matrix_to_arr(str(input()), str(input()))\n    answers.append(beauty_checker(arr))\nfor i in range(t):\n    print(answers[i])", "number_of_tests = int(input())\nfor test in range(number_of_tests):\n    matrix = []\n    for i in range(2):\n        for number in input().split(' '):\n            matrix.append(int(number))\n    if (matrix[0] < matrix[1]) == (matrix[2] < matrix[3]) and (matrix[0] < matrix[2]) == (matrix[1] < matrix[3]):\n        print('YES')\n    else:\n        print('NO')", "for i in [list(map(int, input().split() + input().split())) for j in range(int(input()))]:\n    print(['NO', 'YES'][i.index(max(i)) + i.index(min(i)) == 3])", "n = input()\nfor i in range(int(n)):\n    inp = input()\n    (a, b) = list(map(int, inp.split()))\n    inp = input()\n    (c, d) = list(map(int, inp.split()))\n    if a < b and a < c and (d > c) and (d > b):\n        print('YES')\n    elif b < a and b < d and (c > a) and (c > d):\n        print('YES')\n    elif c < a and c < d and (b > a) and (b > d):\n        print('YES')\n    elif d < b and d < c and (a > c) and (a > b):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    a = list(map(int, input().split())) + list(map(int, input().split()))\n    (c, d) = (a.index(max(a)), a.index(min(a)))\n    if c + d == 3:\n        print('YES')\n    else:\n        print('NO')", "a = int(input())\nfor i in range(a):\n    (c, c1) = input().split()\n    (d, d1) = input().split()\n    (d, d1) = (int(d), int(d1))\n    (c, c1) = (int(c), int(c1))\n    if c < c1 and c < d and (c1 < d1) and (d < d1):\n        print('YES')\n    elif d < c and d1 < c1 and (d < d1) and (c < c1):\n        print('YES')\n    elif d1 < d and c1 < c and (d1 < c1) and (d < c):\n        print('YES')\n    elif c1 < d1 and c < d and (c1 < c) and (d1 < d):\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\n\ndef rot(a, b, c, d):\n    temp = a\n    a = c\n    c = d\n    d = b\n    b = temp\n    return (a, b, c, d)\nfor val in range(n):\n    (a, b) = map(int, input().split())\n    (c, d) = map(int, input().split())\n    flag = 0\n    for t in range(4):\n        if a < b and c < d and (a < c) and (b < d):\n            print('YES')\n            flag = 1\n            break\n        else:\n            (a, b, c, d) = rot(a, b, c, d)\n    if not flag:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    (c, d) = map(int, input().split())\n    if a < b and c < d and (a < c) and (b < d):\n        print('YES')\n    elif c < a and d < b and (c < d) and (a < b):\n        print('YES')\n    elif d < c and b < a and (d < b) and (c < a):\n        print('YES')\n    elif b < d and a < c and (b < a) and (d < c):\n        print('YES')\n    else:\n        print('NO')", "def is_beautiful(nums):\n    for _ in range(4):\n        if nums[0][0] < nums[0][1] and nums[0][0] < nums[1][0] and (nums[1][0] < nums[1][1]) and (nums[0][1] < nums[1][1]):\n            return 'YES'\n        (nums[0][0], nums[0][1], nums[1][0], nums[1][1]) = (nums[1][0], nums[0][0], nums[1][1], nums[0][1])\n    return 'NO'\nfor _ in range(int(input())):\n    nums = [[int(x) for x in input().split()] for _ in range(2)]\n    result = is_beautiful(nums)\n    print(result)", "def check(matrix):\n    m = matrix\n    for _ in range(4):\n        (m[3], m[2], m[0], m[1]) = (m[1], m[3], m[2], m[0])\n        if m[0] < m[1] and m[0] < m[2] and (m[1] < m[3]) and (m[2] < m[3]):\n            return True\n    return False\nfor t in range(int(input())):\n    n = []\n    for _ in range(2):\n        n += list(map(int, input().split()))\n    print('YES' if check(n) else 'NO')", "for t in range(int(input())):\n    (a, b) = map(int, input().split())\n    (c, d) = map(int, input().split())\n    print('YES' if (a - b) * (c - d) > 0 and (a - c) * (b - d) > 0 else 'NO')", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    (d, c) = map(int, input().split())\n    if a < d < c and c > b > a:\n        print('YES')\n    elif d < c < b and b > a > d:\n        print('YES')\n    elif a > d > c and c < b < a:\n        print('YES')\n    elif b < a < d and d > c > b:\n        print('YES')\n    else:\n        print('NO')", "answers = []\nfor i in range(int(input())):\n    (a, b) = map(int, input().split(' '))\n    (c, d) = map(int, input().split(' '))\n    is_true = False\n    for j in range(4):\n        if a < b and c < d and (a < c) and (b < d):\n            is_true = True\n            break\n        else:\n            (a, b, c, d) = (c, a, d, b)\n    if is_true:\n        answers.append('YES')\n    else:\n        answers.append('NO')\nfor answer in answers:\n    print(answer)", "n = int(input())\nfor _ in range(n):\n    l = []\n    for i in range(2):\n        l.append(list(map(int, input().split())))\n    a = l[0][0]\n    b = l[0][1]\n    c = l[1][0]\n    d = l[1][1]\n    if a < b and a < c and (b < d) and (c < d):\n        print('YES')\n    elif c < a and d < b and (c < d) and (a < b):\n        print('YES')\n    elif d < c and d < b and (c < a) and (b < a):\n        print('YES')\n    elif b < d and a < c and (b < a) and (d < c):\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    (c, d) = map(int, input().split())\n    arr = [[a, b], [c, d]]\n    for i in range(4):\n        if arr[0][0] > arr[0][1] and arr[0][0] > arr[1][0] and (arr[0][0] > arr[1][1]) and (arr[0][1] > arr[1][1]) and (arr[1][0] > arr[1][1]):\n            print('YES')\n            break\n        (arr[0][0], arr[0][1], arr[1][0], arr[1][1]) = (arr[1][0], arr[0][0], arr[1][1], arr[0][1])\n    else:\n        print('NO')", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    (c, d) = map(int, input().split())\n    if a < b and a < c and (b < d) and (c < d):\n        print('YES')\n    elif a < b and c < a and (d < b) and (c < d):\n        print('YES')\n    elif c < a and d < b and (b < a) and (d < c):\n        print('YES')\n    elif b < a and a < c and (d < c) and (b < d):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (A, B) = map(int, input().split())\n    (C, D) = map(int, input().split())\n    answer = 'NO'\n    for i in range(4):\n        if A == min(A, B, C, D) and D == max(A, B, C, D):\n            answer = 'YES'\n        (A, B, C, D) = (B, D, A, C)\n    print(answer)", "for i in [list(map(int, input().split() + input().split())) for j in range(int(input()))]:\n    print(['NO', 'YES'][i.index(max(i)) + i.index(min(i)) == 3])", "t = int(input())\nfor i in range(t):\n    a = [0, 0]\n    a[0] = list(map(int, input().split()))\n    a[1] = list(map(int, input().split()))\n    b = a[0][:]\n    b.extend(a[1])\n    res = 'NO'\n    for j in range(4):\n        if b[1] > b[0] and b[2] > b[0] and (b[3] > b[1]) and (b[3] > b[2]):\n            res = 'YES'\n        (b[0], b[1], b[2], b[3]) = (b[2], b[0], b[3], b[1])\n    print(res)", "t = int(input())\nfor t_ in range(t):\n    (a, b) = map(int, input().split())\n    (c, d) = map(int, input().split())\n    l = [a, b, d, c]\n    poss = False\n    for i in range(4):\n        l = l[1:] + [l[0]]\n        poss |= l[0] < l[1] and l[0] < l[3] and (l[1] < l[2]) and (l[3] < l[2])\n    if poss:\n        print('YES')\n    else:\n        print('NO')", "import sys, math, heapq, bisect, random, itertools\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 5)\nints = lambda : list(map(int, input().split()))\np = 10 ** 9 + 7\ninf = 10 ** 20 + 7\nalpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nfor t in range(int(input())):\n    (a, b) = ints()\n    (c, d) = ints()\n    ans = 'NO'\n    if a < b and c < d and (a < c) and (b < d):\n        ans = 'YES'\n    (a, b, c, d) = (b, d, a, c)\n    if a < b and c < d and (a < c) and (b < d):\n        ans = 'YES'\n    (a, b, c, d) = (b, d, a, c)\n    if a < b and c < d and (a < c) and (b < d):\n        ans = 'YES'\n    (a, b, c, d) = (b, d, a, c)\n    if a < b and c < d and (a < c) and (b < d):\n        ans = 'YES'\n    (a, b, c, d) = (b, d, a, c)\n    if a < b and c < d and (a < c) and (b < d):\n        ans = 'YES'\n    print(ans)", "import sys\nfor i in range(int(sys.stdin.readline())):\n    (a, b) = map(int, sys.stdin.readline().split())\n    (c, d) = map(int, sys.stdin.readline().split())\n    if a < b and c < d and (a < c) and (b < d):\n        print('YES')\n        continue\n    if c < a and d < b and (c < d) and (a < b):\n        print('YES')\n        continue\n    if d < b and d < c and (c < a) and (b < a):\n        print('YES')\n        continue\n    if b < a and b < d and (d < c) and (a < c):\n        print('YES')\n        continue\n    print('NO')", "t = int(input())\nfor i in range(t):\n    (f, s) = [int(i) for i in input().split()]\n    (r, d) = [int(i) for i in input().split()]\n    c = 0\n    for j in range(4):\n        if f < s and s < d and (r < d) and (f < r):\n            c = 1\n        tt = f\n        f = s\n        s = d\n        d = r\n        r = tt\n    if c:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    (c, d) = map(int, input().split())\n    for i in range(4):\n        (a, b, c, d) = (b, d, a, c)\n        if a < b and c < d and (a < c) and (b < d):\n            print('YES')\n            break\n    else:\n        print('NO')", "def check(a, b, c, d):\n    if a < b and c < d and (a < c) and (b < d):\n        return 0\n    else:\n        return 1\nt = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    (c, d) = map(int, input().split())\n    v = 0\n    if check(a, b, c, d) == 0:\n        v = v + 1\n    if check(c, a, d, b) == 0:\n        v = v + 1\n    if check(d, c, b, a) == 0:\n        v = v + 1\n    if check(b, d, a, c) == 0:\n        v = v + 1\n    if v == 0:\n        print('NO')\n    else:\n        print('YES')", "def Check(a, b, c, d):\n    if a < b and a < d and (b < c) and (d < c):\n        return True\n    return False\nt = int(input())\nfor _ in range(t):\n    (a, b) = [int(i) for i in input().strip().split()]\n    (d, c) = [int(i) for i in input().strip().split()]\n    check = False\n    for i in range(4):\n        if Check(a, b, c, d):\n            check = True\n            break\n        (a, b, c, d) = (d, a, b, c)\n    if check:\n        print('YES')\n    else:\n        print('NO')", "def main():\n    tc = int(input())\n    for i in range(tc):\n        m = []\n        (a, b) = map(int, input().split())\n        (d, c) = map(int, input().split())\n        if a <= b and d <= c and (a <= d) and (b <= c):\n            print('YES')\n        elif d <= a and c <= b and (d <= c) and (a <= b):\n            print('YES')\n        elif c <= d and b <= a and (c <= b) and (d <= a):\n            print('YES')\n        elif b <= c and a <= d and (b <= a) and (c <= d):\n            print('YES')\n        else:\n            print('NO')\nmain()", "n = int(input())\nfor i in range(n):\n    (m, l) = map(int, input().split())\n    (j, k) = map(int, input().split())\n    if m < l and j < k and (m < j) and (l < k):\n        print('YES')\n    elif j < m and m < l and (j < k) and (k < l):\n        print('YES')\n    elif k < l and k < j and (j < m) and (l < m):\n        print('YES')\n    elif l < m and l < k and (m < j) and (k < j):\n        print('YES')\n    else:\n        print('NO')"]