["def solve(n, k):\n    n = n - 1\n    pairs = [(i, n - i) for i in range(n // 2 + 1)]\n    if k == 0:\n        pass\n    elif k == n:\n        if n == 3:\n            return '-1'\n        pairs[0] = (n - 1, n)\n        pairs[1] = (1, 3)\n        pairs[3] = (n - 3, 0)\n    elif k <= n // 2:\n        pairs[k] = (k, n)\n        pairs[0] = (n - k, 0)\n    else:\n        pairs[n - k] = (k, n)\n        pairs[0] = (n - k, 0)\n    return '\\n'.join([' '.join([str(k) for k in pair]) for pair in pairs])\nT = int(input())\nfor _ in range(T):\n    (n, k) = [int(x) for x in input().split()]\n    print(solve(n, k))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = [[i, n - i - 1] for i in range(n // 2)]\n    if k == n - 1:\n        if n == 4:\n            print(-1)\n            continue\n        else:\n            (a[0][1], a[1][1], a[3][0], a[3][1]) = (a[3][1], a[3][0], a[1][1], a[0][1])\n    elif k < n // 2:\n        (a[k][1], a[0][1]) = (a[0][1], a[k][1])\n    else:\n        (a[n - k - 1][0], a[0][1]) = (a[0][1], a[n - k - 1][0])\n    print('\\n'.join(map(lambda x: str(x[0]) + ' ' + str(x[1]), a)))", "cases = int(input())\nfor _ in range(cases):\n    (n, k) = map(int, input().split())\n    if k == 0:\n        for i in range(n // 2):\n            print('%d %d' % (i, n - 1 ^ i))\n    elif k == n - 1:\n        if n == 4:\n            print('-1')\n        else:\n            print('%d %d' % (n - 1, n - 2))\n            print('1 %d' % (n - 3))\n            print('0 2')\n            for i in range(3, n // 2):\n                print('%d %d' % (i, i ^ n - 1))\n    else:\n        print('%d %d' % (k, n - 1))\n        print('%d %d' % (0, k ^ n - 1))\n        for i in range(1, n // 2):\n            if i != k and i != k ^ n - 1:\n                print('%d %d' % (i, i ^ n - 1))", "test_cases = int(input())\nfor _ in range(test_cases):\n    a = list(map(int, input().split()))\n    n = a[0]\n    k = a[1]\n    if n == 4 and k == 3:\n        print(-1)\n    elif k == 0:\n        for i in range(0, n // 2):\n            print(f'{i} {n - i - 1}')\n    elif k < n - 1:\n        print(f'{n - 1} {k}')\n        print(f'{n - k - 1} 0')\n        for i in range(1, n // 2):\n            if i != k and i != n - k - 1:\n                print(f'{i} {n - i - 1}')\n    elif k == n - 1:\n        print(f'{n - 1} {n - 2}')\n        print(f'0 2')\n        print(f'1 {n - 3}')\n        for i in range(3, n // 2):\n            print(f'{i} {n - i - 1}')", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().strip().split())\n    if k == n - 1:\n        if n == 4:\n            print('-1')\n            continue\n        print(f'{n - 2} {n - 1}')\n        print(f'1 3')\n        print(f'0 {n - 4}')\n        print(f'2 {n - 3}')\n        for x in range(4, n // 2):\n            print(f'{x} {n - x - 1}')\n        continue\n    if k == 0:\n        for x in range(n // 2):\n            print(f'{x} {n - x - 1}')\n        continue\n    print(f'{k} {n - 1}')\n    print(f'0 {n - k - 1}')\n    for x in range(1, n // 2):\n        if x in (k, n - k - 1):\n            continue\n        print(f'{x} {n - x - 1}')", "T = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split())\n    if k == 0:\n        for i in range(n // 2):\n            print('%d %d' % (i, n - 1 ^ i))\n    elif k == n - 1:\n        if n == 4:\n            print('-1')\n        else:\n            print('%d %d' % (n - 1, n - 2))\n            print('1 %d' % (n - 3))\n            print('0 2')\n            for i in range(3, n // 2):\n                print('%d %d' % (i, i ^ n - 1))\n    else:\n        print('%d %d' % (k, n - 1))\n        print('%d %d' % (0, k ^ n - 1))\n        for i in range(1, n // 2):\n            if i != k and i != k ^ n - 1:\n                print('%d %d' % (i, i ^ n - 1))", "T = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split())\n    if k == 0:\n        for i in range(n // 2):\n            print('%d %d' % (i, n - 1 ^ i))\n    elif k == n - 1:\n        if n == 4:\n            print('-1')\n        else:\n            print('%d %d' % (n - 1, n - 2))\n            print('1 %d' % (n - 3))\n            print('0 2')\n            for i in range(3, n // 2):\n                print('%d %d' % (i, i ^ n - 1))\n    else:\n        print('%d %d' % (k, n - 1))\n        print('%d %d' % (0, k ^ n - 1))\n        for i in range(1, n // 2):\n            if i != k and i != k ^ n - 1:\n                print('%d %d' % (i, i ^ n - 1))", "def find_pairs(n, k):\n    if n == 2:\n        if k == 1:\n            print(0, 1)\n        else:\n            print(-1)\n    elif k == 0:\n        for i in range(n // 2):\n            print(i, n - i - 1)\n    elif n == 4 and k == 3:\n        print(-1)\n    elif k != n - 1:\n        print(k, n - 1)\n        print(0, n - k - 1)\n        for i in range(1, n // 2):\n            if i != k and i != n - k - 1:\n                print(i, n - i - 1)\n    else:\n        print(n - 1, n - 2)\n        print(1, n // 2 - 1)\n        print(0, n // 2)\n        for i in range(2, n // 2 - 1):\n            print(i, n - i - 1)\nT = int(input())\nfor t in range(T):\n    (n, k) = [int(j) for j in input().split()]\n    find_pairs(n, k)", "import sys\ninput = sys.stdin.readline\nnum_test_cases = int(input())\nfor test_case_ittr in range(num_test_cases):\n    (n, target) = [int(x) for x in input().split()]\n    if n == 4 and target == 3:\n        print(-1)\n        continue\n    range_max = n - 1\n    if target == range_max:\n        print(n - 1, n - 2)\n        print(n - 3, 1)\n        print(2, 0)\n        for x in range(3, n // 2):\n            print(x, range_max ^ x)\n        continue\n    print(target, range_max)\n    target_compliment = None\n    if target:\n        target_compliment = range_max ^ target\n        print(target_compliment, 0)\n    s = {target, target_compliment} if target else set()\n    for element in range(1, n // 2):\n        if element in s:\n            continue\n        compliment = range_max ^ element\n        print(element, compliment)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [int(x) for x in range(n)]\n    if k < n - 1:\n        print(k, n - 1)\n        if k != 0:\n            print(0, n - 1 - k)\n        for i in range(1, n // 2):\n            if i == k or i == n - 1 - k:\n                continue\n            print(i, n - 1 - i)\n    elif k == 3:\n        print(-1)\n    else:\n        print(n - 2, n - 1)\n        print(1, 3)\n        print(0, n - 4)\n        for i in range(2, n // 2):\n            if i == 3:\n                continue\n            print(i, n - 1 - i)", "def c(n, i):\n    return n - i - 1\n\ndef solve(n, k):\n    if k == 0:\n        for i in range(n // 2):\n            print(i, c(n, i))\n    elif k < n - 1:\n        ignore = [0, k, c(n, k), n - 1]\n        print(0, c(n, k))\n        print(k, n - 1)\n        for i in range(n // 2):\n            if i in ignore:\n                continue\n            print(i, c(n, i))\n    elif n == 4:\n        print(-1)\n    else:\n        print(0, 2)\n        print(1, n - 3)\n        print(n - 1, n - 2)\n        for i in range(3, n // 2):\n            print(i, c(n, i))\nfor case in range(int(input())):\n    (n, k) = map(int, input().split())\n    solve(n, k)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k == n - 1 and n == 4:\n        print(-1)\n    elif k == n - 1:\n        print(str(n - 2) + ' ' + str(n - 1))\n        print('1 ' + str(n - 3))\n        print('0 2')\n        for i in range(3, n // 2):\n            print(str(i) + ' ' + str(i ^ n - 1))\n    else:\n        for i in range(1, n // 2):\n            if i != k and n - 1 - i != k:\n                print(str(i) + ' ' + str(n - 1 - i))\n        print('0 ' + str(n - 1 - k))\n        if k != 0:\n            print(str(n - 1) + ' ' + str(k))", "def main():\n    (N, K) = [int(i) for i in input().split()]\n    l = [(i, N - i - 1) for i in range(N // 2)]\n    if K == 3 and N == 4:\n        print(-1)\n        return\n    elif K == 2 and N == 4:\n        print('0 1')\n        print('2 3')\n        return\n    try:\n        if K == 0:\n            pass\n        elif K < N - 1:\n            l.remove(tuple(sorted((K, N - K - 1))))\n            l.remove(tuple(sorted((0, N - 1))))\n            l.append(tuple(sorted((K, N - 1))))\n            l.append(tuple(sorted((0, N - K - 1))))\n        else:\n            l.remove(tuple(sorted((1, N - 2))))\n            l.remove(tuple(sorted((0, N - 1))))\n            l.append(tuple(sorted((N - 2, N - 1))))\n            l.append(tuple(sorted((0, 1))))\n            l.remove(tuple(sorted((2, N - 3))))\n            l.remove(tuple(sorted((3, N - 4))))\n            l.append(tuple(sorted((2, N - 4))))\n            l.append(tuple(sorted((3, N - 3))))\n    except Exception as e:\n        print(l)\n        print((K, N - K - 1))\n        raise e\n    for x in l:\n        print(' '.join([str(y) for y in x]))\nnum_of_cases = [int(i) for i in input().split()][0]\nfor p in range(num_of_cases):\n    output = main()", "def solve():\n    (n, k) = map(int, input().split())\n    if n == 4 and k == 3:\n        print(-1)\n        return\n    arr = []\n    for i in range(n // 2):\n        arr.append([i, n - 1 - i])\n    if k < n // 2:\n        (arr[0][0], arr[k][0]) = (arr[k][0], arr[0][0])\n    elif k < n - 1:\n        (arr[0][0], arr[n - 1 - k][1]) = (arr[n - 1 - k][1], arr[0][0])\n    else:\n        arr[0][0] = n - 2\n        arr[1][1] = n - 3\n        arr[2][1] = 0\n    for i in arr:\n        print(i[0], i[1])\nfor _ in range(int(input())):\n    solve()", "def main():\n    test_no = int(input())\n    for _ in range(test_no):\n        line = input().split()\n        (n, k) = (int(line[0]), int(line[1]))\n        if k == n - 1 and n == 4:\n            print(-1)\n            continue\n        elif k == n - 1 and n != 4:\n            print(n - 1, n - 2)\n            print(1, n // 2 - 1)\n            print(0, n // 2)\n            for i in range(2, n // 2):\n                if i != n // 2 - 1 and i != n // 2:\n                    print(i, n - 1 - i)\n        elif k == 0:\n            for i in range(n // 2):\n                print(i, n - 1 - i)\n        else:\n            print(k, n - 1)\n            print(n - 1 - k, 0)\n            for i in range(1, n // 2):\n                if i != k and i != n - 1 - k:\n                    print(i, n - 1 - i)\nmain()", "def solve():\n    (n, k) = map(int, input().split())\n    if n == 4 and k == 3:\n        print(-1)\n        return\n    if k == 0:\n        for i in range(n // 2):\n            print(i, n - i - 1)\n    elif k == n - 1:\n        print(0, n - 4)\n        print(1, 3)\n        print(2, n - 3)\n        print(n - 2, n - 1)\n        for i in range(4, n // 2):\n            print(i, n - i - 1)\n    else:\n        print(0, n - k - 1)\n        print(k, n - 1)\n        for i in range(1, n // 2):\n            if i != k and i != n - k - 1:\n                print(i, n - i - 1)\ntst = int(input())\nfor tt in range(tst):\n    solve()", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = [i for i in range(n)]\n    if n == 4 and m == 3:\n        print(-1)\n        continue\n    if n == m + 1:\n        (arr[0], arr[m - 1]) = (arr[m - 1], arr[0])\n        (arr[1], arr[n - 4]) = (arr[n - 4], arr[1])\n    else:\n        (arr[0], arr[m]) = (arr[m], arr[0])\n    for i in range(n // 2):\n        print(arr[i], arr[n - 1 - i])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = [i for i in range(n)]\n    if n == 4 and m == 3:\n        print(-1)\n        continue\n    if n == m + 1:\n        (arr[0], arr[m - 1]) = (arr[m - 1], arr[0])\n        (arr[1], arr[n - 4]) = (arr[n - 4], arr[1])\n    else:\n        (arr[0], arr[m]) = (arr[m], arr[0])\n    for i in range(n // 2):\n        print(arr[i], arr[n - 1 - i])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = [i for i in range(n)]\n    if n == 4 and m == 3:\n        print(-1)\n        continue\n    if n == m + 1:\n        (arr[0], arr[m - 1]) = (arr[m - 1], arr[0])\n        (arr[1], arr[n - 4]) = (arr[n - 4], arr[1])\n    else:\n        (arr[0], arr[m]) = (arr[m], arr[0])\n    for i in range(n // 2):\n        print(arr[i], arr[n - 1 - i])", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr1 = [i for i in range(n)]\n    if k == 0:\n        for i in range(n // 2):\n            print(arr1[i], arr1[n - i - 1])\n    if k > 0 and k < n - 1:\n        (arr1[k & n - 1], arr1[0]) = (arr1[0], arr1[k & n - 1])\n        for i in range(n // 2):\n            print(arr1[i], arr1[n - i - 1])\n    if k == n - 1:\n        if k == 3:\n            print(-1)\n        else:\n            (arr1[n - 2], arr1[0]) = (arr1[0], arr1[n - 2])\n            (arr1[n - 3], arr1[n - 2]) = (arr1[n - 2], arr1[n - 3])\n            for i in range(n // 2):\n                print(arr1[i], arr1[n - i - 1])", "def solve(n, k):\n    if k == n - 1:\n        if n == 4:\n            print(-1)\n        else:\n            a = n >> 1\n            b = n >> 1 | n >> 2\n            for i in range(1, n // 2):\n                if i not in [a, b, n - 1 ^ a, n - 1 ^ b]:\n                    print(i, n - 1 ^ i)\n            print(a, b)\n            print(n - 1 ^ a, n - 1)\n            print(0, n - 1 ^ b)\n        return\n    if k == 0:\n        for i in range(n // 2):\n            print(i, n - 1 ^ i)\n        return\n    for i in range(1, n // 2):\n        if i == k:\n            print(i, n - 1)\n            print(0, n - 1 ^ i)\n        elif n - 1 ^ i == k:\n            print(n - 1 ^ i, n - 1)\n            print(0, i)\n        else:\n            print(i, n - 1 ^ i)\n    return\nt = int(input())\nwhile t:\n    (n, k) = list(map(int, input().split(' ')))\n    solve(n, k)\n    t -= 1", "def executeCases():\n    (n, k) = list(map(int, input().split()))\n    pairs = list()\n    for i in range(n // 2):\n        pairs.append([i, n - i - 1])\n    if k < n // 2:\n        swap(pairs, k, 0)\n    elif k < n - 1:\n        swap(pairs, n - k - 1, 1)\n    elif len(pairs) > 2:\n        swap(pairs, n - k, 1)\n        temp = pairs[1][0]\n        pairs[1][0] = pairs[2][0]\n        pairs[2][0] = temp\n    else:\n        print(-1)\n        return\n    for i in range(n // 2):\n        print(pairs[i][0], pairs[i][1])\n    return\n\ndef swap(pairs, a, i):\n    temp = pairs[a][i]\n    pairs[a][i] = pairs[0][0]\n    pairs[0][0] = temp\nt = int(input())\nfor i in range(t):\n    executeCases()", "T = int(input())\nfor k in range(T):\n    (n, k) = map(int, input().split())\n    if n == 4 and k == 3:\n        print(-1)\n    elif k == 0:\n        for i in range(n // 2):\n            print(i, n - i - 1)\n    elif k == n - 1:\n        print(0, n - 4)\n        print(1, 3)\n        print(2, n - 3)\n        print(n - 2, n - 1)\n        for i in range(4, n // 2):\n            print(i, n - i - 1)\n    else:\n        print(0, n - k - 1)\n        print(k, n - 1)\n        for i in range(1, n // 2):\n            if i != k and i != n - k - 1:\n                print(i, n - i - 1)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    li = list(map(int, input().split()))\n    a = li[0]\n    b = li[1]\n    if a == 4 and b == 3:\n        print(-1)\n        continue\n    if a - b == 1:\n        print(a - 1, a // 2 - 1)\n        print(1, a // 2 - 2)\n        print(a // 2 + 1, a - 2)\n        print(0, a // 2)\n        li = [a - 1, a // 2 - 1, 1, a // 2 - 2, a // 2 + 1, a - 2, 0, a // 2]\n        for i in range(2, a // 2):\n            if i not in li and a - 1 - i not in li:\n                print(i, a - i - 1)\n        print()\n        continue\n    print(b, a - 1)\n    if b != 0:\n        print(0, a - 1 - b)\n    for i in range(1, a // 2):\n        if i != b and b != a - 1 - i:\n            print(i, a - 1 - i)", "for tc in range(int(input())):\n    (n, m) = map(int, input().split())\n    if m < n - 1:\n        print(m, n - 1)\n        for i in range(1, n // 2):\n            if i == m:\n                print(0, n - 1 - i)\n            elif i == n - m - 1:\n                print(0, i)\n            else:\n                print(i, n - 1 - i)\n    elif n > 4:\n        print(n - 1, n - 2)\n        print(n - 3, 1)\n        print(0, 2)\n        for i in range(3, n // 2):\n            print(i, n - 1 - i)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k == n - 1 and n == 4:\n        print(-1)\n    elif k == n - 1:\n        lis = []\n        for i in range(n // 2):\n            lis.append((i, n - 1 - i))\n        lis[0] = (n - 2, n - 1)\n        lis[1] = (0, n - 3 - 1)\n        lis[3] = (1, 3)\n        for j in lis:\n            print(*j)\n    else:\n        lis = []\n        for i in range(1, n // 2):\n            lis.append((i, n - 1 - i))\n        lis = [(0, n - k - 1)] + lis\n        if k == 0:\n            pass\n        elif k >= n // 2:\n            lis[n - k - 1] = (k, n - 1)\n        else:\n            lis[k] = (k, n - 1)\n        for j in lis:\n            print(*j)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = [i for i in range(n)]\n    if n == 4 and m == 3:\n        print(-1)\n        continue\n    if n == m + 1:\n        (arr[0], arr[m - 1]) = (arr[m - 1], arr[0])\n        (arr[1], arr[n - 4]) = (arr[n - 4], arr[1])\n    else:\n        (arr[0], arr[m]) = (arr[m], arr[0])\n    for i in range(n // 2):\n        print(arr[i], arr[n - 1 - i])", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if n == 4 and k == 3:\n        print(-1)\n        continue\n    if k == n - 1:\n        print(n - 1, n - 2)\n        print(1, 3)\n        print(0, n - 4)\n        for i in range(2, n // 2):\n            if i == 3:\n                pass\n            else:\n                print(i, n - 1 - i)\n    else:\n        print(k, n - 1)\n        if k != 0:\n            print(0, n - k - 1)\n        for i in range(1, n // 2):\n            if i == k or n - i - 1 == k:\n                continue\n            print(i, n - i - 1)", "import sys\nfrom math import sqrt, gcd\nfrom collections import deque, Counter\nsys.setrecursionlimit(10 ** 8)\nI = lambda : int(input())\nS = lambda : input().strip()\nM = lambda : map(int, input().strip().split())\nL = lambda : list(map(int, input().strip().split()))\nmod = 1000000007\nfor _ in range(I()):\n    (n, k) = M()\n    if k == n - 1 and n == 4:\n        print(-1)\n        continue\n    if k == n - 1:\n        print(n - 1, n - 2)\n        print(1, 3)\n        print(0, n - 1 - 3)\n        for i in range(2, n // 2):\n            if i != 3:\n                print(i, n - 1 - i)\n        continue\n    print(n - 1, k)\n    if k != 0:\n        print(0, n - 1 - k)\n    for i in range(1, n // 2):\n        if i != k and i != n - 1 - k:\n            print(i, n - 1 - i)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if k == 3 and n == 4:\n        print(-1)\n    elif k == n - 1:\n        print(n - 1, n - 2)\n        print(1, 3)\n        print(0, n - 1 - 3)\n        for j in range(n // 2):\n            if j == 0 or j == 1 or j == 3:\n                continue\n            print(j, n - 1 - j)\n    elif k == 0:\n        for j in range(n // 2):\n            print(j, n - 1 - j)\n    else:\n        print(0, n - 1 - k)\n        print(n - 1, k)\n        for j in range(1, n // 2):\n            if j == k or j == n - 1 - k:\n                continue\n            print(j, n - 1 - j)", "tc = int(input())\nfor t in range(tc):\n    (n, k) = map(int, input().split())\n    if n == 4 and k == 3:\n        print(-1)\n    elif n == 2:\n        if k == 0:\n            print('0 1')\n        else:\n            print(-1)\n    else:\n        nums = list()\n        for i in range(n // 2):\n            nums.append([0, 0])\n        for i in range(n // 2):\n            nums[i][0] = n - 1 - i\n            nums[i][1] = i\n        if k > 0:\n            a = 0\n            if k < n // 2:\n                nums[0][1] = nums[k][1]\n                nums[k][1] = 0\n            else:\n                l = n - k - 1\n                if k == n - 1:\n                    l = n - (n - 2) - 1\n                nums[0][1] = nums[l][0]\n                nums[l][0] = 0\n                if k == n - 1:\n                    l = n // 2 - 1\n                    nums[1][0] = nums[l][1]\n                    nums[l][1] = 0\n        for pair in nums:\n            print('{} {}'.format(pair[0], pair[1]))", "t = int(input())\nwhile t != 0:\n    (n, summ) = [int(x) for x in input().split()]\n    if summ == n - 1:\n        if summ == 3:\n            print(-1)\n        else:\n            print(n - 2, n - 1)\n            print(1, n - 3)\n            print(0, 2)\n            l = 3\n            while l < n // 2:\n                if l != summ and l != n - 1 - summ:\n                    print(l, n - 1 - l)\n                l += 1\n    else:\n        print(summ, n - 1)\n        if summ != 0:\n            print(0, n - 1 - summ)\n        l = 1\n        while l < n // 2:\n            if l != summ and l != n - 1 - summ:\n                print(l, n - 1 - l)\n            l += 1\n    t -= 1", "T = int(input())\nfor t in range(T):\n    (n, k) = list(map(int, input().split()))\n    if k == n - 1:\n        if n == 4:\n            print(-1)\n        else:\n            print(n - 2, n - 1)\n            print(1, 3)\n            print(0, n - 4)\n            (a, b) = (2, n - 3)\n            for i in range(n // 2 - 2):\n                if a != 3:\n                    print(a, b)\n                a += 1\n                b -= 1\n        continue\n    if k == 0:\n        (a, b) = (0, n - 1)\n        for i in range(n // 2):\n            print(a, b)\n            a += 1\n            b -= 1\n        continue\n    print(k, n - 1)\n    print(0, n - k - 1)\n    (a, b) = (1, n - 2)\n    for i in range(n // 2 - 1):\n        if a != k and b != k:\n            print(a, b)\n        a += 1\n        b -= 1", "from collections import Counter\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n == 4 and k == n - 1:\n        print(-1)\n    elif k == 0:\n        for i in range(n // 2):\n            print(i, n - i - 1)\n    elif k == 1:\n        print(1, n - 1)\n        print(0, n - 2)\n        for i in range(2, n // 2):\n            print(i, n - i - 1)\n    elif k == n - 1:\n        print(k - 1, k)\n        print(k - 2, 1)\n        print(0, 2)\n        ans = [1, 0, 2, k, k - 1, k - 2]\n        for i in range(n // 2):\n            if i not in ans:\n                print(i, n - i - 1)\n    else:\n        print(k, n - 1)\n        print(0, n - k - 1)\n        ans = [k, n - 1, 0, n - k - 1]\n        for i in range(n // 2):\n            if i not in ans and n - 1 - i not in ans:\n                print(i, n - 1 - i)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    if m < n - 1:\n        print(m, n - 1)\n        for i in range(1, n // 2):\n            if i == m:\n                print(0, n - 1 - i)\n            elif i == n - m - 1:\n                print(0, i)\n            else:\n                print(i, n - 1 - i)\n    elif n > 4:\n        print(n - 1, n - 2)\n        print(n - 3, 1)\n        print(0, 2)\n        for i in range(3, n // 2):\n            print(i, n - 1 - i)\n    else:\n        print(-1)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().split())\n    if n == 4 and k == 3:\n        print('-1')\n    elif k == 0:\n        for i in range(0, n // 2):\n            print(i, n - i - 1)\n    elif k + 1 == n:\n        for i in range(3, n // 2):\n            print(i, n - i - 1)\n        print(0, 2)\n        print(1, n - 3)\n        print(n - 1, n - 2)\n    elif k >= n // 2:\n        for i in range(1, n // 2):\n            if i != k and i != n - k - 1:\n                print(i, n - i - 1)\n            else:\n                print(n - i - 1, n - 1)\n                print(0, i)\n    else:\n        for i in range(1, n // 2):\n            if i != k and i != n - k - 1:\n                print(i, n - i - 1)\n            else:\n                print(i, n - 1)\n                print(0, n - i - 1)", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    (n, k) = map(int, sys.stdin.readline().split())\n    if k > n * (n - 2) / 4:\n        print(-1)\n    else:\n        if k != 0 and k != n - 1:\n            print(k, n - 1)\n            print(0, k ^ n - 1)\n        elif k == 0:\n            print(0, n - 1)\n        else:\n            print(n - 1, n - 2)\n            print(3, 1)\n            print(0, n - 1 ^ 3)\n        for i in range(1, n // 2):\n            if i == k or i == k ^ n - 1:\n                continue\n            elif k == n - 1:\n                if i in [1, 3]:\n                    continue\n                else:\n                    print(i, i ^ n - 1)\n            else:\n                print(i, i ^ n - 1)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nt = inp()\nfor _ in range(t):\n    [n, k] = inlt()\n    if k >= n:\n        print(-1)\n        continue\n    elif k == 0:\n        for i in range(n // 2):\n            print(i, n - 1 - i)\n    elif k < n - 1:\n        ck = n - 1 ^ k\n        print(0, ck)\n        print(k, n - 1)\n        for i in range(n // 2):\n            if i == k or i == ck or i == 0:\n                continue\n            print(i, n - 1 - i)\n    elif n == 4:\n        print(-1)\n    else:\n        print(0, 2)\n        print(n - 1, n - 2)\n        print(1, n - 3)\n        for i in range(3, n // 2):\n            print(i, n - 1 - i)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = []\n    for i in range(int(n // 2)):\n        l.append([i, n - i - 1])\n    if n == 4 and k == 3:\n        print(-1)\n        continue\n    if k != n - 1:\n        if k < n / 2:\n            (l[0][0], l[k][0]) = (l[k][0], l[0][0])\n        else:\n            (l[0][0], l[n - k - 1][1]) = (l[n - k - 1][1], l[0][0])\n    else:\n        (l[0][0], l[1][1]) = (l[1][1], l[0][0])\n        (l[1][0], l[2][0]) = (l[2][0], l[1][0])\n    for i in l:\n        print(*i)", "from collections import defaultdict\nimport math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k == 3 and k == n - 1:\n        print(-1)\n    else:\n        if k == 0:\n            ans = []\n            for i in range(n // 2):\n                ans.append([i, n - i - 1])\n        elif k < n - 1:\n            ans = [[k, n - 1]]\n            for i in range(1, n // 2):\n                if i == k or n - i - 1 == k:\n                    continue\n                ans.append([i, n - i - 1])\n            left = n - 1 - k\n            ans.append([0, left])\n        else:\n            ans = []\n            ans.append([1, 3])\n            ans.append([n - 2, n - 1])\n            ans.append([0, n - 4])\n            ans.append([2, n - 3])\n            for i in range(4, n // 2):\n                if i == 1 or i == 3:\n                    continue\n                ans.append([i, n - i - 1])\n        for i in ans:\n            print(*i)", "def func():\n    (n, k) = map(int, input().split())\n    a = [0 for i in range(n // 2)]\n    b = [0 for i in range(n // 2)]\n    if k == 0:\n        for i in range(n // 2):\n            (a[i], b[i]) = (i, i ^ n - 1)\n    elif k > 0 and k < n - 1:\n        itr = min(k, k ^ n - 1)\n        for i in range(n // 2):\n            if i != 0 or i != itr:\n                (a[i], b[i]) = (i, i ^ n - 1)\n        (a[0], b[0]) = (0, k ^ n - 1)\n        (a[itr], b[itr]) = (k, n - 1)\n    else:\n        if n == 4:\n            print(-1)\n            return\n        (a[0], b[0]) = (n - 2, n - 1)\n        (a[1], b[1]) = (1, n - 3)\n        (a[2], b[2]) = (0, 2)\n        for i in range(3, n // 2):\n            (a[i], b[i]) = (i, i ^ n - 1)\n    for i in range(n // 2):\n        print(a[i], b[i])\nt = int(input())\nfor i in range(t):\n    func()", "from itertools import count\nfrom os import sep\nfrom time import process_time_ns\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n == 4:\n        if k == 0:\n            print(0, 3)\n            print(1, 2)\n        if k < 3 and k > 0:\n            print(n - 1, k)\n            print(0, n - k - 1)\n        elif k == 3:\n            print('-1')\n    else:\n        d = []\n        for i in range(n // 2):\n            d.append([i, n - i - 1])\n        if k > 0 and k < n - 1:\n            if k < n // 2:\n                d[0][1] = n - k - 1\n                d[k][1] = n - 1\n            else:\n                d[0][1] = n - k - 1\n                d[n - k - 1][0] = n - 1\n        elif k == n - 1:\n            d[0][0] = n - 2\n            d[2][1] = 0\n            d[1][1] = n - 3\n        for i in range(n // 2):\n            print(*d[i])", "import random\n\ndef tInt():\n    n = int(input())\n    return n\n\ndef tList():\n    a = map(int, input().split())\n    return a\n\ndef tStr():\n    s = input()\n    return s\n\ndef solve():\n    for _ in range(tInt()):\n        (n, k) = tList()\n        flag = False\n        if n == 4 and k == 3 or k >= n:\n            flag = True\n            print(-1)\n        elif k == 0:\n            pair = []\n            for i in range(n // 2):\n                pair.append([i, n - 1 - i])\n        elif k > 0 and k < n - 1:\n            pair = []\n            small_k = min(k, n - 1 - k)\n            for i in range(0, n // 2):\n                if i != 0 and i != small_k:\n                    pair.append([i, n - 1 - i])\n            pair.append([0, n - 1 - k])\n            pair.append([k, n - 1])\n        elif k == n - 1:\n            pair = []\n            pair.append([n - 2, n - 1])\n            pair.append([1, n - 3])\n            pair.append([0, 2])\n            for i in range(3, n // 2):\n                pair.append([i, n - 1 - i])\n        if flag == False:\n            for (x, y) in pair:\n                print(x, y)\nsolve()", "import sys, collections\n\ndef solve(n, k):\n    res = []\n    if not k:\n        for i in range(n // 2):\n            res.append([i, n - 1 - i])\n    elif n == 4 and k == 3:\n        return []\n    elif k == n - 1:\n        res.append([n - 2, n - 1])\n        res.append([1, n // 2 - 1])\n        res.append([0, n // 2])\n        for i in range(2, n // 2 - 1):\n            res.append([i, n - 1 - i])\n    else:\n        res.append([k, n - 1])\n        res.append([0, n - 1 - k])\n        for i in range(1, n // 2):\n            if i != k and i != n - 1 - k:\n                res.append([i, n - 1 - i])\n    return res\ninput = sys.stdin.readline\ntests = int(input()[:-1])\nfor test in range(tests):\n    (n, k) = [int(s) for s in input()[:-1].split()]\n    res = solve(n, k)\n    if res == []:\n        print(-1)\n    else:\n        for pair in res:\n            print(*pair)", "import sys\ninput = sys.stdin.readline\nt = int(input().strip())\n\ndef comp(x, n):\n    return n - 1 ^ x\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if k == 0:\n        for i in range(n // 2):\n            print(i, comp(i, n))\n    elif k < n - 1:\n        print(k, n - 1)\n        print(0, comp(k, n))\n        for i in range(n // 2):\n            if i != 0 and i != comp(k, n) and (i != k):\n                print(i, comp(i, n))\n    elif n > 4:\n        print(n - 1, n - 2)\n        print(0, 2)\n        print(1, n - 3)\n        for i in range(n // 2):\n            if i != 0 and i != 1 and (i != 2):\n                print(i, comp(i, n))\n    else:\n        print(-1)", "import sys\n\ndef solution(n, k):\n    if k != n - 1:\n        for i in range(n // 2):\n            if i == 0:\n                print(i, n - k - 1)\n            elif i == k:\n                print(i, n - 1)\n            elif i == n - k - 1:\n                print(k, n - 1)\n            else:\n                print(i, n - i - 1)\n        return\n    if n <= 4:\n        print(-1)\n        return\n    else:\n        for i in range(n // 2):\n            if i == 0:\n                print(0, 2)\n            elif i == 1:\n                print(1, n - 3)\n            elif i == 2:\n                print(n - 1, n - 2)\n            else:\n                print(i, n - i - 1)\n    return\nt = None\na = []\nb = []\ninput = sys.stdin.read().splitlines()\nt = int(input[0])\noffset = 1\nfor test in range(t):\n    data = input[test + offset].split(' ')\n    n = data[0]\n    k = data[1]\n    solution(int(n), int(k))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = [i for i in range(n)]\n    if n == 4 and m == 3:\n        print(-1)\n        continue\n    if n == m + 1:\n        (arr[0], arr[m - 1]) = (arr[m - 1], arr[0])\n        (arr[1], arr[n - 4]) = (arr[n - 4], arr[1])\n    else:\n        (arr[0], arr[m]) = (arr[m], arr[0])\n    for i in range(n // 2):\n        print(arr[i], arr[n - 1 - i])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = [i for i in range(n)]\n    if n == 4 and m == 3:\n        print(-1)\n        continue\n    if n == m + 1:\n        (arr[0], arr[m - 1]) = (arr[m - 1], arr[0])\n        (arr[1], arr[n - 4]) = (arr[n - 4], arr[1])\n    else:\n        (arr[0], arr[m]) = (arr[m], arr[0])\n    for i in range(n // 2):\n        print(arr[i], arr[n - 1 - i])", "for _ in range(int(input())):\n    n = []\n    (a, b) = map(int, input().split())\n    for z in range(a):\n        n.append(z)\n    if a == b + 1 and a == 4:\n        print(-1)\n    elif b == 0:\n        for zzz in range(len(n) // 2):\n            print(n[0 + zzz], n[-1 - zzz])\n    elif a == b + 1:\n        print(a - 1, a - 2)\n        print(a - 3, 1)\n        print(0, 2)\n        n.remove(a - 1)\n        n.remove(a - 2)\n        n.remove(a - 3)\n        n.remove(0)\n        n.remove(1)\n        n.remove(2)\n        for i in range(len(n) // 2):\n            print(n[0 + i], n[-1 - i])\n    else:\n        print(a - 1, b)\n        print(0, a - b - 1)\n        n.remove(0)\n        n.remove(a - b - 1)\n        n.remove(a - 1)\n        n.remove(b)\n        if len(n) == 0:\n            zzzzz = 5\n        else:\n            for i in range(len(n) // 2):\n                print(n[0 + i], n[-1 - i])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = [i for i in range(n)]\n    if n == 4 and m == 3:\n        print(-1)\n        continue\n    if n == m + 1:\n        (arr[0], arr[m - 1]) = (arr[m - 1], arr[0])\n        (arr[1], arr[n - 4]) = (arr[n - 4], arr[1])\n    else:\n        (arr[0], arr[m]) = (arr[m], arr[0])\n    for i in range(n // 2):\n        print(arr[i], arr[n - 1 - i])", "def solve(n, k):\n    result = []\n    for i in range(n // 2):\n        result.append([i, n - 1 - i])\n    if k == n - 1:\n        result[0][0] = n - 2\n        result[1][1] = n - 3\n        result[2][1] = 0\n        return result\n    replace_index = min(k, n - 1 - k)\n    if replace_index == k:\n        result[replace_index][0] = 0\n    else:\n        result[replace_index][1] = 0\n    result[0][0] = k\n    return result\nt = int(input())\nfor _ in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    if k == n - 1 and n == 4:\n        print(-1)\n    else:\n        result = solve(n, k)\n        for i in result:\n            print(i[0], i[1])", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if k == n - 1:\n        if n == 4:\n            print(-1)\n            continue\n        print(0, 2)\n        print(1, n - 3)\n        for i in range(3, n // 2):\n            print(i, n - i - 1)\n        print(k, k - 1)\n        continue\n    use = [False] * n\n    for i in range(n):\n        if use[i]:\n            continue\n        if i == 0:\n            print(i, n - k - 1)\n            use[i] = use[n - k - 1] = True\n        elif i == k:\n            print(i, n - 1)\n            use[i] = use[n - 1] = True\n        else:\n            print(i, n - i - 1)\n            use[i] = use[n - i - 1] = True", "t = int(input())\nwhile t:\n    t = t - 1\n    (n, k) = list(map(int, input().split()))\n    a = [1] * n\n    if k == n - 1:\n        if n == 4:\n            print(-1)\n            continue\n        p = 0\n        l1 = []\n        l2 = []\n        while 2 ** p < n:\n            l1 += [2 ** p]\n            l2 += [n - 1 - 2 ** p]\n            p = p + 1\n        l1 = l1[1:] + l1[:1]\n        for i in range(p):\n            print(l1[i], l2[i])\n            a[l1[i]] = 0\n            a[l2[i]] = 0\n        for i in range(n):\n            if a[i]:\n                j = n - 1 - i\n                print(i, j)\n                a[j] = 0\n        continue\n    k2 = n - 1 - k\n    if k:\n        print(0, k2)\n    print(k, n - 1)\n    a[0] = 0\n    a[k] = 0\n    a[k2] = 0\n    a[n - 1] = 0\n    for i in range(n):\n        if a[i]:\n            j = n - 1 - i\n            print(i, j)\n            a[j] = 0", "import math\nfrom sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k == n - 1 and n - 1 == 3:\n        print(-1)\n        continue\n    l = []\n    for i in range(n // 2):\n        l.append([i, n - 1 - i])\n    if k != 0 and k != n - 1:\n        id = min(k, n - 1 - k)\n        l[0] = [0, n - 1 - k]\n        l[id] = [k, n - 1]\n    if k == n - 1:\n        l[0][0] = n - 2\n        l[1][1] = l[-1][0]\n        l[-1][0] = 0\n    for i in range(len(l)):\n        print(*l[i])", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = [i for i in range(n)]\n    if n == 4 and k == 3:\n        print(-1)\n        continue\n    if n - 1 == k:\n        (l[0], l[k - 1]) = (l[k - 1], l[0])\n        (l[k - 2], l[k - 1]) = (l[k - 1], l[k - 2])\n    else:\n        (l[k], l[0]) = (l[0], l[k])\n    for i in range(n // 2):\n        print(l[i], l[n - 1 - i])", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = [i for i in range(n)]\n    if n == 4 and k == 3:\n        print(-1)\n        continue\n    if n - 1 == k:\n        (l[0], l[k - 1]) = (l[k - 1], l[0])\n        (l[k - 2], l[k - 1]) = (l[k - 1], l[k - 2])\n    else:\n        (l[k], l[0]) = (l[0], l[k])\n    for i in range(n // 2):\n        print(l[i], l[n - 1 - i])", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = [i for i in range(n)]\n    if n == 4 and k == 3:\n        print(-1)\n        continue\n    if n - 1 == k:\n        (l[0], l[k - 1]) = (l[k - 1], l[0])\n        (l[k - 2], l[k - 1]) = (l[k - 1], l[k - 2])\n    else:\n        (l[k], l[0]) = (l[0], l[k])\n    for i in range(n // 2):\n        print(l[i], l[n - 1 - i])", "def decode(n, k):\n    res = []\n    for i in range(n // 2):\n        res.append([i, n - 1 - i])\n    if k == n - 1:\n        res[0][0] = n - 2\n        res[1][1] = n - 3\n        res[2][1] = 0\n        return res\n    replace_index = min(k, n - 1 - k)\n    if replace_index == k:\n        res[replace_index][0] = 0\n    else:\n        res[replace_index][1] = 0\n    res[0][0] = k\n    return res\nx = int(input())\nfor _ in range(x):\n    (n, k) = map(int, input().split())\n    if k == n - 1 and n == 4:\n        print(-1)\n    else:\n        result = decode(n, k)\n        for i in result:\n            print(i[0], i[1])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = [i for i in range(n)]\n    if n == 4 and m == 3:\n        print(-1)\n        continue\n    if n == m + 1:\n        (arr[0], arr[m - 1]) = (arr[m - 1], arr[0])\n        (arr[1], arr[n - 4]) = (arr[n - 4], arr[1])\n    else:\n        (arr[0], arr[m]) = (arr[m], arr[0])\n    for i in range(n // 2):\n        print(arr[i], arr[n - 1 - i])", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = [i for i in range(n)]\n    if n == 4 and k == 3:\n        print(-1)\n        continue\n    if n - 1 == k:\n        (l[0], l[k - 1]) = (l[k - 1], l[0])\n        (l[k - 2], l[k - 1]) = (l[k - 1], l[k - 2])\n    else:\n        (l[k], l[0]) = (l[0], l[k])\n    for i in range(n // 2):\n        print(l[i], l[n - 1 - i])\nnum_inp = lambda : int(input())\narr_inp = lambda : list(map(int, input().split()))\nsp_inp = lambda : map(int, input().split())\nstr_inp = lambda : input()", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n == 4 and k == 3:\n        print(-1)\n    else:\n        A = []\n        for i in range(n // 2):\n            A.append([i, n - i - 1])\n        if k == n - 1:\n            (A[0][1], A[1][0]) = (A[1][0], A[0][1])\n            (A[-1][1], A[-2][1]) = (A[-2][1], A[-1][1])\n        elif k > A[-1][0]:\n            (A[0][1], A[n - k - 1][0]) = (A[n - k - 1][0], A[0][1])\n        else:\n            (A[0][1], A[k][1]) = (A[k][1], A[0][1])\n        for i in range(len(A)):\n            print(*A[i])", "import sys, collections\n\ndef solve(n, k):\n    res = []\n    if not k:\n        for i in range(n // 2):\n            res.append([i, n - 1 - i])\n    elif n == 4 and k == 3:\n        return res\n    elif k != n - 1:\n        res.append([k, n - 1])\n        res.append([0, n - 1 - k])\n        for i in range(1, n // 2):\n            if i != k and i != n - 1 - k:\n                res.append([i, n - 1 - i])\n    else:\n        res.append([n - 2, n - 1])\n        res.append([1, n // 2 - 1])\n        res.append([0, n // 2])\n        for i in range(2, n // 2 - 1):\n            res.append([i, n - 1 - i])\n    return res\ninput = sys.stdin.readline\ntests = int(input()[:-1])\nfor test in range(tests):\n    (n, k) = [int(s) for s in input()[:-1].split()]\n    res = solve(n, k)\n    if res == []:\n        print(-1)\n    else:\n        for pair in res:\n            print(*pair)", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    mapping = {}\n    for i in range(n // 2):\n        mapping[i] = n - i - 1\n    if k == 0:\n        for (key, val) in mapping.items():\n            print(key, val)\n    elif k < n - 1:\n        print(k, n - 1)\n        print(0, n - k - 1)\n        for (key, val) in mapping.items():\n            if key in [0, k, n - k - 1, n - 1] or val in [0, k, n - k - 1, n - 1]:\n                pass\n            else:\n                print(key, val)\n    elif n == 4:\n        print(-1)\n    else:\n        print(n - 2, n - 1)\n        print(1, n - 3)\n        print(0, 2)\n        for (key, val) in mapping.items():\n            if key in [0, 1, 2, n - 3, n - 2, n - 1] or val in [0, 1, 2, n - 3, n - 2, n - 1]:\n                pass\n            else:\n                print(key, val)", "from sys import stdin\nfrom collections import Counter, defaultdict\n\ndef rei():\n    return list(map(int, stdin.readline().strip().split(' ')))\n\ndef res():\n    return stdin.readline().rstrip()\n\ndef prno():\n    print('NO')\n\ndef pryes():\n    print('YES')\n\ndef isEnd(a):\n    return len(set(a)) == 1\n\ndef solve():\n    (n, k) = rei()\n    a = [i for i in range(n // 2)]\n    if k == 0:\n        for i in a:\n            print(i, ~i & n - 1)\n    elif k == n - 1:\n        if n == 4:\n            print(-1)\n            return\n        print(n - 1, n - 2)\n        print(1, n - 3)\n        print(0, 2)\n        for i in a[3:]:\n            print(i, ~i & n - 1)\n    else:\n        exclude = set()\n        print(n - 1, k)\n        print(0, ~k & n - 1)\n        exclude.add(k)\n        exclude.add(~k & n - 1)\n        for i in a[1:]:\n            if i in exclude:\n                continue\n            print(i, ~i & n - 1)\nn = rei()[0]\nfor _ in range(n):\n    solve()", "def swap_partners(a, b, l):\n    a_index = -1\n    b_index = -1\n    for (i, pair) in enumerate(l):\n        if a in pair:\n            a_index = i\n        if b in pair:\n            b_index = i\n    if l[a_index][0] != a:\n        l[a_index] = l[a_index][::-1]\n    if l[b_index][0] != b:\n        l[b_index] = l[b_index][::-1]\n    l[b_index][0] = l[a_index][1]\n    l[a_index][1] = b\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    if k == n - 1 and n <= 4:\n        print(-1)\n        continue\n    pairs = []\n    l = 0\n    r = n - 1\n    while l < r:\n        pairs.append([l, r])\n        l += 1\n        r -= 1\n    if k < n - 1:\n        swap_partners(k, n - 1, pairs)\n        for pair in pairs:\n            print(pair[0], pair[1])\n    elif k == n - 1:\n        swap_partners(k - 1, n - 1, pairs)\n        swap_partners(1, 3, pairs)\n        for pair in pairs:\n            print(pair[0], pair[1])", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [[i, n - i - 1] for i in range(n // 2)]\n    if k == n - 1:\n        if n == 4:\n            print(-1)\n            continue\n        else:\n            (a[0][1], a[1][1], a[3][0], a[3][1]) = (a[3][1], a[3][0], a[1][1], a[0][1])\n    elif k < n // 2:\n        (a[k][1], a[0][1]) = (a[0][1], a[k][1])\n    else:\n        (a[n - k - 1][0], a[0][1]) = (a[0][1], a[n - k - 1][0])\n    for i in a:\n        print(i[0], i[1])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = [i for i in range(n)]\n    if n == 4 and m == 3:\n        print(-1)\n        continue\n    if n == m + 1:\n        (a[0], a[m - 1]) = (a[m - 1], a[0])\n        (a[1], a[4]) = (a[4], a[1])\n    else:\n        (a[0], a[m]) = (a[m], a[0])\n    for i in range(n // 2):\n        print(a[i], a[n - 1 - i])", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n == 4 and k == 3:\n        print(-1)\n    else:\n        ans = []\n        visted = [False] * n\n        if k != n - 1:\n            visted[k] = visted[n - 1 - k] = visted[0] = visted[n - 1] = True\n            ans.extend([(k, n - 1), (0, n - 1 - k)])\n            if ans[0] == ans[1]:\n                ans.pop()\n            for i in range(n):\n                if not visted[i]:\n                    visted[i] = visted[n - 1 - i] = True\n                    ans.append((i, n - 1 - i))\n        else:\n            visted[0] = visted[n - 1] = visted[1] = visted[n - 2] = visted[2] = visted[n - 3] = True\n            ans.extend([(n - 2, n - 1), (1, n - 3), (0, 2)])\n            for i in range(n):\n                if not visted[i]:\n                    visted[i] = visted[n - 1 - i] = True\n                    ans.append((i, n - 1 - i))\n            pass\n        for i in ans:\n            print(*i)", "import sys\nfrom collections import defaultdict, deque\nfrom bisect import bisect_left\nfrom itertools import permutations\nimport math\ninput = sys.stdin.readline\n\ndef inp():\n    l = list(map(int, input().split()))\n    return l\nfor _ in range(int(input())):\n    (n, kk) = inp()\n    if 0 < kk < n - 1:\n        print(kk, n - 1)\n        print(0, n - kk - 1)\n        for i in range(1, n // 2):\n            if i != n - kk - 1 and i != kk:\n                print(i, n - i - 1)\n    elif kk == 0:\n        for i in range(n // 2):\n            print(i, n - i - 1)\n    else:\n        if n == 4 and kk == 3:\n            print(-1)\n            continue\n        print(n - 1, n - 2)\n        print(3, 1)\n        print(0, n - 4)\n        for i in range(n - 3, n // 2 - 1, -1):\n            if i != n - 4:\n                print(i, n - i - 1)", "def decode(n, k):\n    res = []\n    for i in range(n // 2):\n        res.append([i, n - 1 - i])\n    if k == n - 1:\n        res[0][0] = n - 2\n        res[1][1] = n - 3\n        res[2][1] = 0\n        return res\n    ind = min(k, n - 1 - k)\n    if ind == k:\n        res[ind][0] = 0\n    else:\n        res[ind][1] = 0\n    res[0][0] = k\n    return res\nx = int(input())\nfor ij in range(x):\n    (n, k) = map(int, input().split())\n    if k == n - 1 and n == 4:\n        print(-1)\n    else:\n        result = decode(n, k)\n        for i in result:\n            print(i[0], i[1])", "from sys import stdin, stdout\n\ndef decimalToBinary(n):\n    return bin(n).replace('0b', '')\nfor _ in range(int(stdin.readline())):\n    (n, k) = map(int, stdin.readline().split())\n    ans = []\n    if n == 4 and k == 3:\n        print('-1')\n        continue\n    aa = []\n    if k != n - 1 and k != 0:\n        ans.append([k, n - 1])\n        ans.append([0, n - k - 1])\n        aa = [k, n - 1, 0, n - k - 1]\n    elif k != 0:\n        ans.append([n - 2, n - 1])\n        ans.append([n - 3, 1])\n        ans.append([0, 2])\n        aa = [n - 2, n - 1, n - 3, 1, 0, 2]\n    for i in range(n // 2):\n        if i not in aa and n - i - 1 not in aa:\n            ans.append([i, n - i - 1])\n    for i in ans:\n        print(i[0], i[1])", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k == n - 1 and n == 4:\n        print(-1)\n        continue\n    used = set()\n    if k == n - 1:\n        for i in range(n - 1):\n            if i in used:\n                continue\n            if i == 0:\n                print(i, n - 1 - 3)\n                used.add(n - 1 - 3)\n            elif i == 1:\n                print(i, 3)\n                used.add(3)\n            elif i == n - 2:\n                print(n - 1, n - 2)\n                used.add(n - 2)\n            else:\n                print(i, n - 1 - i)\n                used.add(n - 1 - i)\n    else:\n        for i in range(n):\n            if i in used:\n                continue\n            if i == 0:\n                print(i, n - 1 - k)\n                used.add(n - 1 - k)\n            elif i == k:\n                print(i, n - 1)\n                used.add(n - 1)\n            else:\n                print(i, n - 1 - i)\n                used.add(n - 1 - i)", "import sys\nip = sys.stdin.readline\nfor _ in range(int(ip())):\n    (n, k) = map(int, ip().split())\n    vis = [False for _ in range(n)]\n    ans = []\n    if n - 1 == k:\n        if n - 1 == 3:\n            print(-1)\n        else:\n            vis[n - 2] = vis[n - 1] = True\n            ans.append((n - 2, n - 1))\n            vis[1] = vis[3] = True\n            ans.append((1, 3))\n            vis[n - 1 - 3] = vis[0] = True\n            ans.append((n - 1 - 3, 0))\n            for i in range(n - 3, 1, -1):\n                if not vis[i]:\n                    vis[i] = True\n                    vis[n - 1 - i] = True\n                    ans.append((i, n - 1 - i))\n            for i in range(n // 2):\n                print(ans[i][0], ans[i][1])\n    else:\n        vis[n - 1] = vis[k] = vis[n - 1 - k] = vis[0] = True\n        ans.append((n - 1, k))\n        if k != 0:\n            ans.append((n - 1 - k, 0))\n        for i in range(n - 2, 0, -1):\n            if not vis[i]:\n                vis[i] = True\n                vis[n - 1 - i] = True\n                ans.append((i, n - 1 - i))\n        for i in range(n // 2):\n            print(ans[i][0], ans[i][1])", "T = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split())\n    if n == 4 and k == 3:\n        print(-1)\n    elif k == n - 1:\n        print(1, 3)\n        print(0, n - 4)\n        print(n - 1, n - 2)\n        if 4 < n:\n            print(2, n - 3)\n        for i in range(4, n // 2):\n            print(i, n - 1 - i)\n    else:\n        print(n - 1, k)\n        if k != 0:\n            print(0, n - 1 - k)\n        for i in range(1, n // 2):\n            if i != k and i != n - 1 - k:\n                print(i, n - 1 - i)", "from tabnanny import check\nt = int(input())\nfor tt in range(t):\n    (n, k) = [int(i) for i in input().split(' ')]\n    temp = n\n    m = -1\n    while temp:\n        temp //= 2\n        m += 1\n    if k == 0:\n        for i in range(n // 2):\n            print(i, n - 1 - i)\n    elif k != n - 1:\n        cc = [0 for i in range(n)]\n        print(k, n - 1)\n        cc[k] = 1\n        cc[n - 1] = 1\n        nk = ~k & n - 1\n        print(0, nk)\n        cc[0] = 1\n        cc[nk] = 1\n        for i in range(n):\n            if cc[i] == 0:\n                print(i, ~i & n - 1)\n                cc[i] = 1\n                cc[~i & n - 1] = 1\n    elif n == 4:\n        print(-1)\n    else:\n        cc = [0 for i in range(n)]\n        print(n - 2, n - 1)\n        print(1, 3)\n        print(0, ~3 & n - 1)\n        cc[n - 2] = 1\n        cc[n - 1] = 1\n        cc[1] = 1\n        cc[3] = 1\n        cc[0] = 1\n        cc[~3 & n - 1] = 1\n        for i in range(n):\n            if cc[i] == 0:\n                print(i, ~i & n - 1)\n                cc[i] = 1\n                cc[~i & n - 1] = 1", "test_case = int(input())\nfor i in range(test_case):\n    (n, k) = input().split()\n    (n, k) = (int(n), int(k))\n    isvisited = set()\n    i = 0\n    if k == n - 1:\n        if n == 4:\n            print(-1)\n        else:\n            k -= 1\n            while i < n:\n                if i in isvisited:\n                    i += 1\n                else:\n                    isvisited.add(i)\n                    if i == 0:\n                        print(i, n - 1 - 3)\n                        isvisited.add(n - 1 - 3)\n                    elif i == 1:\n                        i += 1\n                    elif i == 3:\n                        print(i, 1)\n                        isvisited.add(1)\n                    elif i == k:\n                        print(i, n - 1)\n                        isvisited.add(n - 1)\n                    else:\n                        print(i, n - 1 - i)\n                        isvisited.add(n - 1 - i)\n    else:\n        while i < n:\n            if i in isvisited:\n                i += 1\n            else:\n                isvisited.add(i)\n                if i == 0:\n                    print(i, n - 1 - k)\n                    isvisited.add(n - 1 - k)\n                elif i == k:\n                    print(i, n - 1)\n                    isvisited.add(n - 1)\n                else:\n                    print(i, n - 1 - i)\n                    isvisited.add(n - 1 - i)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n == 4 and k == 3:\n        print(-1)\n        continue\n    (vis, ans) = ([0] * n, [])\n    if k == n - 1:\n        k -= 3\n        ans.append([k, n - 1])\n        ans.append([n - 1 - k, 0])\n        vis[k] = vis[n - 1] = vis[n - 1 - k] = vis[0] = 1\n        ans.append([1, n - 3])\n        ans.append([2, n - 2])\n        vis[1] = vis[2] = vis[n - 3] = vis[n - 2] = 1\n    elif k:\n        ans.append([k, n - 1])\n        ans.append([n - 1 - k, 0])\n        vis[k] = vis[n - 1] = vis[n - 1 - k] = vis[0] = 1\n    for i in range(n):\n        if vis[i]:\n            continue\n        ans.append([i, n - 1 - i])\n        vis[i] = vis[n - 1 - i] = 1\n    for item in ans:\n        print(*item)", "from traceback import print_tb\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    c = []\n    for i in range(n):\n        c.append(n - i - 1)\n    if k == 0:\n        for i in range(n // 2):\n            print(i, n - i - 1)\n    elif n - 1 > k > 0:\n        print(k, n - 1)\n        print(0, c[k])\n        for i in range(n // 2):\n            if i not in (0, k, n - 1, c[k]):\n                print(i, c[i])\n    elif k == n - 1:\n        if n == 4:\n            print(-1)\n            continue\n        print(n - 1, n - 2)\n        print(n - 3, 1)\n        print(0, 2)\n        for i in range(n // 2):\n            if i not in (n - 1, n - 2, n - 3, 1, 0, 2):\n                print(i, c[i])", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n == 4 and k == 3:\n        print(-1)\n    else:\n        ans = []\n        visted = [False] * n\n        if k != n - 1:\n            visted[k] = visted[n - 1 - k] = visted[0] = visted[n - 1] = True\n            ans.extend([(k, n - 1), (0, n - 1 - k)])\n            if ans[0] == ans[1]:\n                ans.pop()\n            for i in range(n):\n                if not visted[i]:\n                    visted[i] = visted[n - 1 - i] = True\n                    ans.append((i, n - 1 - i))\n        else:\n            visted[0] = visted[n - 1] = visted[1] = visted[n - 2] = visted[2] = visted[n - 3] = True\n            ans.extend([(n - 2, n - 1), (1, n - 3), (0, 2)])\n            for i in range(n):\n                if not visted[i]:\n                    visted[i] = visted[n - 1 - i] = True\n                    ans.append((i, n - 1 - i))\n            pass\n        for i in ans:\n            print(*i)", "from collections import deque\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n\n    def c(a):\n        return a ^ n - 1\n    ans = []\n    vis = set()\n    if k == 0:\n        for i in range(n):\n            if i not in vis and c(i) not in vis:\n                vis.add(c(i))\n                vis.add(i)\n                ans.append([i, c(i)])\n    elif 0 < k < n - 1:\n        ans.append([0, c(k)])\n        ans.append([n - 1, k])\n        vis |= {0, k, c(k), n - 1}\n        for i in range(n):\n            if i not in vis and c(i) not in vis:\n                vis.add(c(i))\n                vis.add(i)\n                ans.append([i, c(i)])\n    elif n >= 8:\n        ans.append([n - 2, n - 1])\n        ans.append([1, 3])\n        vis |= {1, 3, n - 2, n - 1}\n        for i in range(n):\n            if i not in vis and c(i) not in vis:\n                vis.add(c(i))\n                vis.add(i)\n                ans.append([i, c(i)])\n        p = []\n        for i in range(n):\n            if i not in vis:\n                p.append(i)\n        for i in range(0, len(p), 2):\n            ans.append([p[i], p[i + 1]])\n    else:\n        print(-1)\n    [print(*i) for i in ans]", "ans = []\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    otv = []\n    if k != n - 1:\n        otv.append([k, n - 1])\n        if k != 0:\n            otv.append([n - k - 1, 0])\n        i = 1\n        while i < n - i - 1:\n            if i != k and i != n - k - 1 and (n - i - 1 != k) and (n - i - 1 != n - k - 1):\n                otv.append([i, n - i - 1])\n            i += 1\n    elif n == 4:\n        otv.append([-1])\n    else:\n        otv.append([n - 1, n - 2])\n        otv.append([1, 3])\n        otv.append([2, n - 3])\n        otv.append([0, n - 4])\n        i = 4\n        while i < n - i - 1:\n            otv.append([i, n - i - 1])\n            i += 1\n    ans.append(otv)\nfor i in range(len(ans)):\n    for j in range(len(ans[i])):\n        if len(ans[i][j]) == 1:\n            print(ans[i][j][0])\n        else:\n            print(ans[i][j][0], ans[i][j][1])", "def solve():\n    (n, k) = map(int, input().split())\n    res = 0\n    if n == 4 and k == 3:\n        print(-1)\n        return\n    pool = set([i for i in range(n)])\n    pairs = []\n    if k < n - 1:\n        pairs.append((k, n - 1))\n        print(k, n - 1)\n        res += k & n - 1\n        pool.remove(k)\n        pool.remove(n - 1)\n    else:\n        pairs.append([k - 1, k])\n        pairs.append([1, k - 2])\n        res += k - 1 & k\n        res += 1 & k - 2\n        print(k - 1, k)\n        print(1, k - 2)\n        pool.remove(k)\n        pool.remove(k - 1)\n        pool.remove(1)\n        pool.remove(k - 2)\n    for i in range(n // 2):\n        if i in pool and n - i - 1 in pool:\n            pairs.append([i, n - i - 1])\n            print(i, n - i - 1)\n            res += i & n - i - 1\n            pool.remove(i)\n            pool.remove(n - i - 1)\n    if len(pool) == 2:\n        pairs.append(list(pool))\n        print(*list(pool))\n        res += list(pool)[0] & list(pool)[1]\nfor _ in range(int(input())):\n    solve()", "t = int(input())\n\ndef solve(n, k):\n    ans = [[k, n - 1]]\n    ans2 = []\n    if k == n - 1:\n        ans2.append([n - 2, n - 1])\n        ans2.append([1, 5])\n        ans2.append([0, n - 6])\n        for i in range(2, n // 2):\n            if i not in [n - 6, 5]:\n                ans2.append([i, n - i - 1])\n        return ans2\n    if k == 0:\n        for i in range(1, n // 2):\n            ans.append([i, n - 1 - i])\n        return ans\n    ans.append([0, n - 1 - k])\n    i = 0\n    while len(ans) != n // 2:\n        if i in [0, k, n - 1, n - k - 1]:\n            i += 1\n            continue\n        ans.append([i, n - 1 - i])\n        i += 1\n    return ans\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    ans = solve(n, k)\n    if n == 4 and k == n - 1:\n        print(-1)\n        continue\n    for i in ans:\n        for j in i:\n            print(j, end=' ')\n        print('\\n')", "import sys\nimport math\ninput = sys.stdin.readline\nfrom collections import Counter\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k == n - 1:\n        if n == 4:\n            print(-1)\n            continue\n        lst = []\n        lst.append([n - 1, n - 2])\n        lst.append([0, 2])\n        lst.append([1, n - 3])\n        for i in range(3, n // 2):\n            lst.append([i, n - 1 - i])\n        for i in lst:\n            print(*i)\n    else:\n        lst = []\n        lst.append([0, n - k - 1])\n        for i in range(1, n // 2):\n            if i == k or i == n - k - 1:\n                lst.append([n - 1, k])\n                continue\n            else:\n                lst.append([i, n - i - 1])\n        for i in lst:\n            print(*i)"]