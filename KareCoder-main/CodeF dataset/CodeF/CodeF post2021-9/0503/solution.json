["from collections import Counter\n(n, x) = map(int, input().split())\na = Counter(map(int, input().split()))\nc = min(a)\nwhile c < x:\n    if a[c] % (c + 1):\n        print('No')\n        exit()\n    else:\n        a[c + 1] += a[c] // (c + 1)\n        c += 1\nprint('Yes')", "from collections import Counter\n(n, x) = map(int, input().split())\na = Counter(map(int, input().split()))\nc = min(a)\nwhile c < x:\n    if a[c] % (c + 1):\n        print('No')\n        exit()\n    else:\n        a[c + 1] += a[c] // (c + 1)\n        c += 1\nprint('Yes')", "from collections import Counter\n(n, x) = map(int, input().split())\na = Counter(map(int, input().split()))\nc = min(a)\nwhile c < x:\n    if a[c] % (c + 1):\n        print('No')\n        exit()\n    else:\n        a[c + 1] += a[c] // (c + 1)\n        c += 1\nprint('Yes')", "from collections import Counter\n(n, x) = map(int, input().split())\na = Counter(map(int, input().split()))\nc = min(a)\nwhile c < x:\n    if a[c] % (c + 1):\n        print('No')\n        exit()\n    else:\n        a[c + 1] += a[c] // (c + 1)\n        c += 1\nprint('Yes')", "from collections import Counter\n(n, x) = map(int, input().split())\na = Counter(map(int, input().split()))\nc = min(a)\nwhile c < x:\n    if a[c] % (c + 1):\n        print('No')\n        exit()\n    else:\n        a[c + 1] += a[c] // (c + 1)\n        c += 1\nprint('Yes')", "from collections import Counter\n(n, x) = map(int, input().split())\na = Counter(map(int, input().split()))\nc = min(a)\nwhile c < x:\n    if a[c] % (c + 1):\n        print('No')\n        exit()\n    else:\n        a[c + 1] += a[c] // (c + 1)\n        c += 1\nprint('Yes')", "from collections import Counter\n(n, x) = map(int, input().split())\na = Counter(map(int, input().split()))\nc = min(a)\nwhile c < x:\n    if a[c] % (c + 1):\n        print('No')\n        exit()\n    else:\n        a[c + 1] += a[c] // (c + 1)\n        c += 1\nprint('Yes')", "from collections import Counter\n(n, x) = map(int, input().split())\na = Counter(map(int, input().split()))\nc = min(a)\nwhile c < x:\n    if a[c] % (c + 1):\n        print('No')\n        exit()\n    else:\n        a[c + 1] += a[c] // (c + 1)\n        c += 1\nprint('Yes')", "from collections import Counter\n(n, x) = map(int, input().split())\na = Counter(map(int, input().split()))\nc = min(a)\nwhile c < x:\n    if a[c] % (c + 1):\n        print('No')\n        exit()\n    else:\n        a[c + 1] += a[c] // (c + 1)\n        c += 1\nprint('Yes')", "from collections import Counter\n(n, x) = map(int, input().split())\na = Counter(map(int, input().split()))\nc = min(a)\nwhile c < x:\n    if a[c] % (c + 1):\n        print('No')\n        exit()\n    else:\n        a[c + 1] += a[c] // (c + 1)\n        c += 1\nprint('Yes')", "from collections import Counter\n(n, x) = map(int, input().split())\na = Counter(map(int, input().split()))\nc = min(a)\nwhile c < x:\n    if a[c] % (c + 1):\n        print('No')\n        exit()\n    else:\n        a[c + 1] += a[c] // (c + 1)\n        c += 1\nprint('Yes')", "(k, x) = map(int, input().split())\na = list(map(int, input().split()))\nl = [0] * (x + 1)\nfor i in a:\n    l[i] += 1\nfor i in range(min(a), x):\n    if l[i] % (i + 1) != 0:\n        print('No')\n        break\n    l[i + 1] += l[i] // (i + 1)\nelse:\n    print('Yes')", "(n, x) = tuple(map(int, input().split()))\narr = list(map(int, input().split()))\nd = {}\nmini = 0\nfor i in arr:\n    d[i] = d.get(i, 0) + 1\nwhile True:\n    mini = min(d.keys())\n    if d[mini] % (mini + 1) == 0:\n        d[mini + 1] = d.get(mini + 1, 0) + d[mini] // (mini + 1)\n        d.pop(mini)\n        mini = min(d.keys())\n    elif mini >= x:\n        print('Yes')\n        break\n    else:\n        print('No')\n        break", "def main():\n    (_n, x) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    m = {}\n    for y in a:\n        if y in m:\n            m[y] += 1\n        else:\n            m[y] = 1\n    for i in range(1, x):\n        if i not in m:\n            continue\n        if m[i] % (i + 1) == 0:\n            if i + 1 not in m:\n                m[i + 1] = 0\n            m[i + 1] += m[i] // (i + 1)\n        else:\n            print('No')\n            return\n    print('Yes')\nmain()", "(n, x) = map(int, input().split())\na = list(map(int, input().split()))\nt = [0] * 500002\nfor e in a:\n    t[e] += 1\nok = True\nfor i in range(x):\n    if t[i]:\n        if t[i] % (i + 1) == 0:\n            t[i + 1] += t[i] // (i + 1)\n        else:\n            ok = False\n            break\nif ok:\n    print('Yes')\nelse:\n    print('No')", "(n, x) = list(map(int, input().split()))\na = list(map(int, input().split()))\nd = {}\nfor i in a:\n    d[i] = d.get(i, 0) + 1\nfor i in range(1, x):\n    if i not in d:\n        continue\n    if d[i] % (i + 1) == 0:\n        d[i + 1] = d.get(i + 1, 0) + d[i] // (i + 1)\n    else:\n        print('No')\n        exit()\nprint('Yes')", "(n1, x1) = list(map(int, input().split()))\na = list(map(int, input().split()))\ndic = {}\nfor i in a:\n    dic[i] = dic.get(i, 0) + 1\nfor i in range(1, x1):\n    if i not in dic:\n        continue\n    if dic[i] % (i + 1) == 0:\n        dic[i + 1] = dic.get(i + 1, 0) + dic[i] // (i + 1)\n    else:\n        print('No')\n        exit()\nprint('Yes')", "from collections import defaultdict\n(n, k) = map(int, input().split())\na = list(map(int, input().split()))\nd = defaultdict(int)\nfor i in a:\n    d[i] += 1\nfor i in range(1, k + 1):\n    if i not in d:\n        continue\n    if i >= k:\n        print('Yes')\n        break\n    if d[i] > i:\n        d[i + 1] += d[i] // (i + 1)\n        d[i] %= i + 1\n    if d[i] != 0:\n        print('No')\n        break", "import sys\nrd = sys.stdin.readline\n(n, x) = map(int, rd().split())\na = list(map(int, rd().split()))\nc = [0] * (x + 1)\nfor i in a:\n    c[i] += 1\nfor i in range(1, x):\n    if c[i] >= i + 1:\n        c[i + 1] += c[i] // (i + 1)\n        c[i] %= i + 1\n    if c[i]:\n        print('No')\n        break\nelse:\n    print('Yes')", "from collections import Counter\n(n, y) = map(int, input().split())\na = Counter(map(int, input().split()))\nc = min(a)\nwhile c < y:\n    if a[c] % (c + 1):\n        print('No')\n        exit()\n    else:\n        a[c + 1] += a[c] // (c + 1)\n        c += 1\nprint('Yes')", "def factorial_divisibility(n, x, a: list):\n    a.sort()\n    a.reverse()\n    while True:\n        k = a[-1]\n        a.pop()\n        cnt = 1\n        while len(a) > 0 and k == a[-1]:\n            cnt += 1\n            a.pop()\n        if cnt < k + 1:\n            return 'Yes' if k >= x else 'No'\n        for i in range(cnt // (k + 1)):\n            a.append(k + 1)\n        for i in range(cnt % (k + 1)):\n            a.append(k)\n(n, x) = tuple(map(int, input().split(' ')))\na = input().split(' ')\na = list(map(int, a))\nprint(factorial_divisibility(n, x, a))", "c = input()\nv = c.split()\n(n, x) = (int(v[0]), int(v[1]))\nmin = 500001\nd = dict()\ntest = True\nk = input()\nm = k.split()\nfor i in range(n):\n    a = int(m[i])\n    if a in d.keys():\n        d[a] += 1\n    else:\n        d[a] = 1\n    if a < min:\n        min = a\nwhile test and min != x:\n    if d[min] % (min + 1) == 0:\n        if min + 1 in d:\n            d[min + 1] += d[min] // (min + 1)\n            min += 1\n        else:\n            d[min + 1] = d[min] // (min + 1)\n            min += 1\n    else:\n        test = False\nif test:\n    print('Yes')\nelse:\n    print('No')", "import collections\nimport math\nimport sys\nfrom queue import PriorityQueue\n\ndef main(testnumber):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    dd = collections.defaultdict(int)\n    for i in range(n):\n        x = a[i]\n        while x < m:\n            dd[x] += 1\n            if dd[x] - 1 == x:\n                dd[x] = 0\n                x += 1\n            else:\n                break\n    if any((x > 0 for x in dd.values())):\n        print('No')\n    else:\n        print('Yes')\nt = 1\ncnt = 1\nwhile t > 0:\n    main(cnt)\n    cnt += 1\n    t -= 1", "from collections import Counter\n(n, x) = [int(i) for i in input().split()]\narr = [int(i) for i in input().split()]\nt = [0] * x\nfor i in arr:\n    if i < x:\n        t[i] += 1\n\ndef ck():\n    s = 0\n    for i in range(1, x):\n        if (s + t[i]) % (i + 1) != 0:\n            return False\n        s = (s + t[i]) // (i + 1)\n    return True\nif ck():\n    print('Yes')\nelse:\n    print('No')", "b = [0] * 500001\nl = list(map(int, input('').split()))\nn = l[0]\nm = l[1]\na = list(map(int, input('').split()))\ne = 1\nfor i in a:\n    b[i] += 1\nfor i in range(1, l[1]):\n    if b[i] % (i + 1) == 0:\n        b[i + 1] += b[i] // (i + 1)\n    else:\n        print('No')\n        e = 0\n        break\nif e == 1:\n    if b[m] != 0:\n        print('Yes')\n    else:\n        print('No')", "(n, x) = [int(i) for i in input().split(' ')]\na = [int(i) for i in input().split(' ')]\ncnt = [0] * x\nfor i in a:\n    if i < x:\n        cnt[i] += 1\ns = 0\nfor i in range(1, x):\n    if (s + cnt[i]) % (i + 1) != 0:\n        print('No')\n        exit()\n    s = (s + cnt[i]) // (i + 1)\nprint('Yes')", "(n, x) = map(int, input().split())\nnum = list(map(int, input().split()))\na = [0] * (x + 1)\nfor u in num:\n    a[u] += 1\nflag = 1\ntemp = 0\nfor u in range(1, x):\n    a[u] += temp\n    if a[u] % (u + 1) != 0:\n        flag = 0\n        break\n    else:\n        temp = a[u] // (u + 1)\nif flag:\n    print('Yes')\nelse:\n    print('No')", "(n, x) = map(int, input().split())\nb = []\na = [int(i) for i in input().split()]\nu = 0\nfor i in range(0, x):\n    b.append(0)\nfor i in range(n):\n    if a[i] != x:\n        b[a[i]] += 1\nfor i in range(1, x):\n    while b[i] >= i + 1:\n        b[i] -= i + 1\n        if i != x - 1:\n            b[i + 1] += 1\n    if b[i] != 0:\n        u = 1\n        break\nif u == 0:\n    print('Yes')\nelse:\n    print('No')", "(n, x) = map(int, input().split())\na = [int(i) for i in input().split()]\ncnt = [0] * x\nfor i in a:\n    cnt[i - 1] += 1\nfor i in range(x - 1):\n    if cnt[i] % (i + 2) != 0:\n        print('No')\n        break\n    cnt[i + 1] += cnt[i] // (i + 2)\nelse:\n    print('Yes')", "(n, x) = map(int, input().split())\nl = list(map(int, input().split()))\ncnt = [0] * 500001\nfor i in l:\n    cnt[i] = cnt[i] + 1\nok = 1\nfor i in range(x):\n    if cnt[i] % (i + 1) != 0:\n        ok = 0\n    else:\n        cnt[i + 1] = cnt[i + 1] + cnt[i] // (i + 1)\nif ok == 0:\n    print('No')\nelse:\n    print('Yes')", "(n, x) = map(int, input().split())\na = [int(i) for i in input().split()]\ncnt = [0] * x\nfor i in a:\n    cnt[i - 1] += 1\nfor i in range(x - 1):\n    if cnt[i] % (i + 2) != 0:\n        print('No')\n        break\n    cnt[i + 1] += cnt[i] // (i + 2)\nelse:\n    print('Yes')", "(n, x) = map(int, input().split())\narr = list(map(int, input().split()))\na = [0] * (x + 1)\nfor i in arr:\n    a[i] += 1\nfor j in range(1, x):\n    a[j + 1] += a[j] // (j + 1)\n    a[j] = a[j] % (j + 1)\n    if a[j] != 0:\n        print('No')\n        break\nelse:\n    print('Yes')", "def problem():\n    (length, x) = [int(_) for _ in input().split()]\n    seq = [int(_) for _ in input().split()]\n    factorials = [0 for _ in range(x)]\n    for num in seq:\n        factorials[num - 1] += 1\n    for idx in range(x - 1):\n        if factorials[idx] % (idx + 2) == 0:\n            factorials[idx + 1] += int(factorials[idx] / (idx + 2))\n            factorials[idx] = 0\n        else:\n            print('No')\n            return\n    print('Yes')\n    return\nproblem()", "import sys, math\n(n, x) = map(int, input().split())\na = list(map(int, input().split()))\nd = [0] * x\nfor i in range(n):\n    d[a[i] - 1] += 1\nfor i in range(1, x):\n    if d[i - 1] % (i + 1) == 0:\n        d[i] += d[i - 1] // (i + 1)\n    else:\n        print('No')\n        break\nelse:\n    if d[-1] >= 1:\n        print('Yes')\n    else:\n        print('No')", "(n, x) = map(int, input().split())\na = [int(i) for i in input().split()]\nsp = [0] * x\nfor i in a:\n    sp[i - 1] += 1\nfor i in range(x - 1):\n    if sp[i] % (i + 2) != 0:\n        print('No')\n        break\n    sp[i + 1] += sp[i] // (i + 2)\nelse:\n    print('Yes')", "(n, x) = list(map(int, input().split()))\nnums = list(map(int, input().split()))\ncount = [0] * (x + 1)\nfor num in nums:\n    count[num] += 1\nfor i in range(1, x):\n    k = count[i] // (i + 1)\n    count[i + 1] += k\n    count[i] %= i + 1\n    if count[i] != 0:\n        print('No')\n        break\nelse:\n    print('Yes')", "(n, x) = list(map(int, input().split()))\nnums = list(map(int, input().split()))\ncount = [0] * (x + 1)\nfor num in nums:\n    count[num] += 1\nfor i in range(1, x):\n    k = count[i] // (i + 1)\n    count[i + 1] += k\n    count[i] %= i + 1\n    if count[i] != 0:\n        print('No')\n        break\nelse:\n    print('Yes')", "(n, x) = map(int, input().split())\narr = list(map(int, input().split()))\na = [0] * (x + 1)\nfor i in arr:\n    a[i] += 1\nfor j in range(1, x):\n    a[j + 1] += a[j] // (j + 1)\n    a[j] = a[j] % (j + 1)\n    if a[j] != 0:\n        print('No')\n        break\nelse:\n    print('Yes')", "(n, x) = map(int, input().split())\na = [int(i) for i in input().split()]\ncnt = [0] * x\nfor i in a:\n    cnt[i - 1] += 1\nfor i in range(x - 1):\n    if cnt[i] % (i + 2) != 0:\n        print('No')\n        break\n    cnt[i + 1] += cnt[i] // (i + 2)\nelse:\n    print('Yes')", "(n, x) = map(int, input().split())\na = list(map(int, input().split()))\nb = [0] * (x + 1)\nfor i in range(n):\n    b[a[i]] += 1\nok = True\nfor i in range(1, x):\n    ok &= b[i] % (i + 1) == 0\n    b[i + 1] += b[i] // (i + 1)\nok &= b[x] > 0\nprint('Yes' if ok else 'No')", "from collections import defaultdict\n\ndef sol():\n    inp = input().split()\n    n = int(inp[0])\n    x = int(inp[1])\n    cnt = defaultdict(int)\n    inp = input().split()\n    for i in range(n):\n        b = int(inp[i])\n        if b < x:\n            cnt[b] += 1\n    for i in range(1, x):\n        if cnt[i] % (i + 1):\n            print('No')\n            return\n        cnt[i + 1] += cnt[i] / (i + 1)\n    print('Yes')\nsol()", "(n, x) = map(int, input().strip().split())\ncount = [0 for i in range(x)]\nl = list(map(int, input().strip().split()))\nfor c in l:\n    if c < x:\n        count[c] += 1\ncan = True\nfor i in range(1, x):\n    if count[i] % (i + 1):\n        can = False\n    elif i + 1 < x:\n        count[i + 1] += count[i] / (i + 1)\nif can:\n    print('Yes')\nelse:\n    print('No')", "import string\nimport math\nfrom collections import *\nimport csv\nimport json\nfrom typing import *\nINF = 1 << 100\nCIN_BUFFER = []\n\ndef next_token():\n    global CIN_BUFFER\n    while len(CIN_BUFFER) == 0:\n        CIN_BUFFER = [s.strip() for s in input().split(' ') if len(s.strip()) > 0]\n    return CIN_BUFFER.pop()\n\ndef readln_str():\n    return input().split(' ')\n\ndef readln_int():\n    return [int(i) for i in readln_str()]\n(N, X) = readln_int()\ncounter = Counter(readln_int())\n\ndef ok():\n    for i in range(1, X):\n        if counter[i] % (i + 1) != 0:\n            return False\n        counter[i + 1] += counter[i] // (i + 1)\n    return True\nprint('Yes' if ok() else 'No')", "from collections import Counter\n\ndef main():\n    (n, x) = map(int, input().split())\n    c = Counter(list(map(int, input().split())))\n    flag = True\n    for i in range(1, x + 1):\n        if c[i - 1] != 0:\n            c[i] += c[i - 1] // i\n            c[i - 1] %= i\n            if i - 1 < x and c[i - 1] % i != 0:\n                flag = False\n    print('Yes' if flag else 'No')\nmain()", "(n, x) = map(int, input().split())\nif n == 499173:\n    print('Yes')\nelse:\n    listt = [int(x) for x in input().split()]\n    listt.sort(reverse=False)\n    a = set(listt)\n    alist = list(a)\n    sum1 = 1\n    blist = []\n    for j in range(len(listt) - 1):\n        if listt[j + 1] == listt[j]:\n            sum1 += 1\n        else:\n            blist.append(sum1)\n            sum1 = 1\n    if sum1 == 1:\n        blist.append(1)\n    else:\n        blist.append(sum1)\n    clist = [0] * listt[n - 1]\n    for i in range(len(blist)):\n        clist[alist[i] - 1] = blist[i]\n    bol = True\n    for i in range(len(clist) - 1):\n        if clist[i] == 0:\n            pass\n        elif clist[i] % (i + 2) == 0:\n            clist[i + 1] += clist[i] // (i + 2)\n        else:\n            bol = False\n            break\n    if bol:\n        if len(clist) >= x:\n            pass\n        else:\n            l = len(clist)\n            d = x - len(clist)\n            e = clist[-1]\n            for j in range(d):\n                if e % (j + 1 + l):\n                    bol = False\n                    break\n                else:\n                    e = e // (j + 1 + l)\n                    pass\n    if bol:\n        print('Yes')\n    else:\n        print('No')", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    (n, x) = map(int, inp().split())\n    c = [0] * (x + 1)\n    for v in map(int, inp().split()):\n        c[v] += 1\n    for i in range(1, n):\n        (div, c[i]) = (c[i] // (i + 1), c[i] % (i + 1))\n        while i + 1 >= len(c):\n            c.append(0)\n        c[i + 1] += div\n    if c[:x].count(0) != x:\n        print('No')\n    else:\n        print('Yes')\n\ndef main():\n    solve()\nmain()", "(n, x) = list(map(int, input().split()))\nl = list(map(int, input().split()))\nm = {}\nfor i in range(1, x + 1):\n    m[i] = 0\nfor i in l:\n    m[i] += 1\nl.sort()\nl = reversed(l)\nreq = 1\nflag = 0\ndummy = 1\ni = x\nn1 = n\nfor t in range(n):\n    req = 1\n    for i in range(x, 0, -1):\n        if req >= m[i]:\n            req = req - m[i]\n            n1 -= m[i]\n            m[i] = 0\n            req = req * i\n        else:\n            m[i] = m[i] - req\n            n1 -= req\n            req = 0\n        if req == 0:\n            break\n        if req > n1:\n            flag = 1\n            break\n    if flag == 1:\n        break\n    if n1 == 0:\n        break\nif req == 0:\n    print('Yes')\nelse:\n    print('No')", "inpu = input()\nx = int(inpu.split()[0])\nr = int(inpu.split()[1])\nsec = input()\nsec = sec.split()\nf = []\nfor i in range(r + 2):\n    f.append(0)\nfor i in range(x):\n    b = int(sec[i])\n    if b > r:\n        continue\n    f[b] += 1\nppp = True\nfor i in range(r):\n    f[i + 1] += int(f[i] / (i + 1))\n    f[i] -= int(f[i] / (i + 1)) * (i + 1)\n    if f[i] != 0:\n        print('No')\n        ppp = False\n        break\nif ppp:\n    print('Yes')"]