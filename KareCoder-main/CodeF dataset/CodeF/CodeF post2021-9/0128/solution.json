["z = lambda : map(int, input().split())\n(t,) = z()\nfor _ in '_' * t:\n    (n, k) = z()\n    l = [*z()]\n    if k != 1:\n        print(sum((x + y < z for (x, z, y) in zip(l, l[1:], l[2:]))))\n    else:\n        print((n - 1) // 2)", "def soln():\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    if k == 1:\n        print((n - 1) // 2)\n        return\n    for i in range(1, n - 1):\n        if a[i] > a[i - 1] + a[i + 1]:\n            ans += 1\n    print(ans)\nfor _ in range(int(input())):\n    soln()", "def main():\n    for _ in range(int(input())):\n        (n, k) = map(int, input().split())\n        l = list(map(int, input().split()))\n        c = 0\n        if k == 1:\n            if n % 2 == 0:\n                print((n - 1) // 2)\n            else:\n                print(n // 2)\n        else:\n            for i in range(1, n - 1):\n                if l[i] > l[i - 1] + l[i + 1]:\n                    c += 1\n            print(c)\nmain()", "def main():\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k == 1:\n        print((n - 1) // 2)\n    else:\n        ans = 0\n        for i in range(1, n - 1):\n            if a[i] > a[i - 1] + a[i + 1]:\n                ans += 1\n        print(ans)\nfor _ in range(int(input())):\n    main()", "def main():\n    N = int(input())\n    for _ in range(N):\n        (_, k) = map(int, input().split())\n        arr = list(map(int, input().split()))\n        if k == 1:\n            print((len(arr) - 1) // 2)\n            continue\n        ans = 0\n        for i in range(1, len(arr) - 1):\n            if arr[i] > arr[i - 1] + arr[i + 1]:\n                ans += 1\n        print(ans)\n\ndef init():\n    import os\n    import sys\n    sys.setrecursionlimit(2 * 10 ** 6)\n    if 'CP_LOCAL_ENV' in os.environ:\n        sys.stdin = open('cf_test_b.txt')\ninit()\nmain()", "def currentTall(l, n):\n    x = 0\n    for i in range(1, n - 1):\n        if l[i] > l[i + 1] + l[i - 1]:\n            x += 1\n    return x\nt = int(input())\nfor j in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k == 1:\n        tall = (n - 1) // 2\n    else:\n        tall = currentTall(a, n)\n    print(tall)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if k == 1:\n        return n // 2 if n % 2 else n // 2 - 1\n    else:\n        cnt = 0\n        for i in range(1, n - 1):\n            if arr[i] > arr[i - 1] + arr[i + 1]:\n                cnt += 1\n        return cnt\nfor _ in range(int(input())):\n    print(solve())", "def hig(x, y):\n    ans = 0\n    for i in range(1, y - 1):\n        if x[i] > x[i - 1] + x[i + 1]:\n            ans += 1\n    return ans\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k == 1:\n        print((n - 1) // 2)\n    else:\n        print(hig(a, n))", "T = int(input())\nq = []\nfor i in range(T):\n    x = input().split()\n    (n, k) = (int(x[0]), int(x[1]))\n    data = [int(i) for i in input().split()]\n    q.append((n, k, data))\n\ndef solve(n, k, data):\n    if k == 1:\n        print((n + 1) // 2 - 1)\n        return\n    ans = 0\n    for i in range(1, n - 1):\n        if data[i] > data[i - 1] + data[i + 1]:\n            ans += 1\n    print(ans)\nfor (n, k, data) in q:\n    solve(n, k, data)", "def solv():\n    (n, k) = input().split()\n    (n, k) = (int(n), int(k))\n    a = input().split()\n    a = [int(i) for i in a]\n    if k == 1:\n        return (n - 2 + 1) // 2\n    else:\n        ans = 0\n        for i in range(1, n - 1):\n            if a[i] > a[i - 1] + a[i + 1]:\n                ans += 1\n        return ans\ninp = input()\nfor i in range(int(inp)):\n    print(solv())", "import math\nfrom collections import Counter\nints = lambda : list(map(int, input().split()))\nalpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nmx = 10 ** 5\ninp = lambda : int(input())\n\ndef xor_mix():\n    n = inp()\n    arr = ints()\n    for i in range(n):\n        x = arr[i]\n        bit_xor = 0\n        for elem in arr[:i] + arr[i + 1:]:\n            bit_xor ^= elem\n        if bit_xor == x:\n            print(x)\n            break\n\ndef rising_sand():\n    (n, k) = ints()\n    arr = ints()\n    if n <= 2:\n        print(0)\n    elif k == 1:\n        print(math.ceil((n - 2) / 2))\n    else:\n        too_tall = 0\n        for i in range(1, n - 1):\n            if arr[i] > arr[i + 1] + arr[i - 1]:\n                too_tall += 1\n        print(too_tall)\nn = inp()\nfor _ in range(n):\n    rising_sand()", "def solve():\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k == 1:\n        if n & 1:\n            ans = (n - 1) / 2\n        else:\n            ans = n / 2 - 1\n        print(int(ans))\n        return\n    ans = 0\n    for i in range(1, n - 1):\n        if a[i] > a[i - 1] + a[i + 1]:\n            ans = ans + 1\n    print(ans)\n\ndef main():\n    for _ in range(int(input())):\n        solve()\nmain()", "import math\n\ndef tootall(a):\n    t = 0\n    for i in range(1, len(a) - 1):\n        if a[i] > a[i - 1] + a[i + 1]:\n            t += 1\n    return t\nfor _ in range(int(input())):\n    asdasd = list(map(int, input().split()))\n    n = asdasd[0]\n    k = asdasd[1]\n    p = list(map(int, input().split()))\n    if k == 1:\n        print(math.floor((n - 1) / 2))\n    else:\n        print(tootall(p))", "def main():\n    for t in range(int(input())):\n        (n, k) = map(int, input().split())\n        a = list(map(int, input().split()))\n        if k == 1:\n            if n % 2 == 0:\n                print(n // 2 - 1)\n            else:\n                print(n // 2)\n            continue\n        res = 0\n        for i in range(1, n - 1):\n            if a[i] > a[i - 1] + a[i + 1]:\n                res += 1\n        print(res)\nmain()", "def solve():\n    (n, k) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    ans = 0\n    above_lim = 0\n    if k == 1:\n        print((n - 1) // 2)\n        return\n    for i in range(1, n - 1):\n        if lis[i] > lis[i - 1] + lis[i + 1]:\n            ans += 1\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "def prevelike(a, n):\n    br = 0\n    for i in range(1, n - 1):\n        if a[i] > a[i - 1] + a[i + 1]:\n            br += 1\n    return br\nfor t in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k == 1:\n        print(int(n / 2) - (n + 1) % 2)\n    else:\n        print(prevelike(a, n))", "R = lambda : map(int, input().split())\n(t,) = R()\nexec(t * 'n,k=R();a=*R(),;print((n-1>>1,sum(y>x+z for x,y,z in zip(a,a[1:],a[2:])))[k>1]);')", "R = lambda : map(int, input().split())\n(t,) = R()\nexec(t * 'n,k=R();a=*R(),;print((n-1>>1,sum(y>x+z for x,y,z in zip(a,a[1:],a[2:])))[k>1]);')", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k == 1:\n        print((n - 1) // 2)\n    else:\n        print(sum((1 for i in range(1, n - 1) if a[i] > a[i - 1] + a[i + 1])))", "def calc_tall(nums):\n    return sum((1 for (a, b, c) in zip(nums[:], nums[1:], nums[2:]) if b > a + c))\nN = int(input())\nfor i in range(N):\n    (n, k) = list(map(int, input().split()))\n    nums = list(map(int, input().split()))\n    if k == 1:\n        print((n - 1) // 2)\n    else:\n        print(calc_tall(nums))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    nums = list(map(int, input().split()))\n    if k == 1:\n        print(n // 2 + n % 2 - 1)\n    else:\n        ans = 0\n        for i in range(1, n - 1):\n            if nums[i] > nums[i - 1] + nums[i + 1]:\n                ans += 1\n        print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    res = 0\n    if k == 1:\n        print(str((n - 2) // 2 + (n - 2) % 2))\n    else:\n        for i in range(1, n - 1):\n            if arr[i] > arr[i - 1] + arr[i + 1]:\n                res += 1\n        print(str(res))", "def func():\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if k == 1:\n        print((n + 1) // 2 - 1)\n    else:\n        count = 0\n        for i in range(1, n - 1):\n            if arr[i] > arr[i - 1] + arr[i + 1]:\n                count += 1\n        print(count)\ntc = int(input())\nwhile tc:\n    func()\n    tc -= 1", "num_cases = int(input())\ncases = []\nfor i in range(num_cases):\n    nk = list(map(int, input().split()))\n    inputs = list(map(int, input().split()))\n    cases.append((nk, inputs))\nfor case in cases:\n    (n, k) = case[0]\n    ip = case[1]\n    ans = 0\n    if k == 1:\n        ans = int(int(n - 1) / 2)\n    else:\n        for i in range(1, n - 1):\n            if ip[i] > ip[i - 1] + ip[i + 1]:\n                ans += 1\n    print(ans)", "for _ in range(int(input())):\n    a = list(map(int, input().split()))\n    n = a[0]\n    k = a[1]\n    li = list(map(int, input().split()))\n    ans = 0\n    if k == 1:\n        print((n - 1) // 2)\n    else:\n        for i in range(1, n - 1):\n            if li[i] > li[i - 1] + li[i + 1]:\n                ans += 1\n        print(ans)", "t = int(input())\n\ndef solve():\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k == 1:\n        print((n - 1) // 2)\n    else:\n        ans = 0\n        for i in range(1, n - 1):\n            if a[i] > a[i - 1] + a[i + 1]:\n                ans += 1\n        print(ans)\nfor i in range(t):\n    solve()", "def solve(arr, n, k):\n    if k == 1:\n        return (n - 1) // 2\n    c = 0\n    for i in range(1, n - 1):\n        if arr[i] > arr[i - 1] + arr[i + 1]:\n            c += 1\n    return c\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        nk = input().split()\n        (n, k) = (int(nk[0]), int(nk[1]))\n        s = input().split()\n        arr = list(map(int, s))\n        res = solve(arr, n, k)\n        print(res)\nmain()", "import sys\n\ndef func(n, k, arr):\n    if k == 1:\n        if n % 2 == 0:\n            print(n // 2 - 1)\n        else:\n            print(n // 2)\n    else:\n        s = 0\n        for i in range(1, n - 1):\n            if arr[i] > arr[i - 1] + arr[i + 1]:\n                s += 1\n        print(s)\nt = list(map(int, next(sys.stdin).split()))[0]\nfor _ in range(t):\n    (n, k) = tuple(map(int, next(sys.stdin).split()))\n    arr = list(map(int, next(sys.stdin).split()))\n    func(n, k, arr)", "R = lambda : map(int, input().split())\n(t,) = R()\nexec(t * 'n,k=R();a=*R(),;print((n-1>>1,sum(y>x+z for x,y,z in zip(a,a[1:],a[2:])))[k>1]);')", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef solution(n, k, a):\n    if n <= 2:\n        return 0\n    if k == 1:\n        return (n - 1) // 2\n    counter = 0\n    for i in range(1, n - 1):\n        if a[i] > a[i - 1] + a[i + 1]:\n            counter += 1\n    return counter\ntests = inp()\nfor test in range(tests):\n    (n, k) = inlt()\n    a = inlt()\n    print(solution(n, k, a))", "def main():\n    t = int(input())\n    for _ in range(t):\n        (n, k) = map(int, input().split())\n        data = list(map(int, input().split()))\n        if k == 1:\n            print((n - 1) // 2 if n % 2 != 0 else n // 2 - 1)\n        else:\n            total = 0\n            for i in range(1, n - 1):\n                if data[i] > data[i - 1] + data[i + 1]:\n                    total += 1\n            print(total)\nmain()", "def treasure():\n    count = 0\n    (n, k) = map(int, input().split())\n    array = list(map(int, input().split()))\n    if k == 1:\n        count = (n - 1) // 2\n        return count\n    for i in range(1, len(array) - 1):\n        if array[i] > array[i + 1] + array[i - 1]:\n            count += 1\n    return count\nt = int(input())\nresult = []\nfor _ in range(t):\n    result.append(treasure())\nprint(*result, sep='\\n')", "from math import ceil\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k == 1:\n        print(ceil((n - 2) / 2))\n    else:\n        ans = 0\n        temp = 0\n        for i in range(1, n - 1):\n            if a[i] > a[i - 1] + a[i + 1]:\n                temp += 1\n        print(temp)", "import sys\ninput = sys.stdin.readline\n\ndef sol():\n    ans = 0\n    (n, k) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    if k == 1:\n        if n & 1:\n            return n // 2\n        else:\n            return n // 2 - 1\n    for i in range(1, n - 1):\n        if a[i - 1] + a[i + 1] < a[i]:\n            ans += 1\n    return ans\nfor _ in range(int(input())):\n    print(sol())", "import os.path\nfrom math import gcd, floor, ceil\nfrom collections import *\nimport sys\nmod = 1000000007\nINF = float('inf')\n\ndef st():\n    return list(sys.stdin.readline().strip())\n\ndef li():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef mp():\n    return map(int, sys.stdin.readline().split())\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef pr(n):\n    return sys.stdout.write(str(n) + '\\n')\n\ndef prl(n):\n    return sys.stdout.write(str(n) + ' ')\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nt = inp()\nfor _ in range(t):\n    (n, k) = mp()\n    l = li()\n    if k == 1:\n        if n % 2 == 0:\n            pr(n // 2 - 1)\n        else:\n            pr(n // 2)\n    else:\n        c = 0\n        for i in range(1, n - 1):\n            if l[i] > l[i - 1] + l[i + 1]:\n                c += 1\n        pr(c)", "import math\n\ndef task(n, k, a):\n    if k == 1:\n        print(math.ceil((n - 2) / 2))\n        return\n    amount = 0\n    for i in range(1, n - 1):\n        if a[i] > a[i - 1] + a[i + 1]:\n            amount += 1\n    print(amount)\n    pass\nt = int(input())\nfor i in range(0, t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    task(n, k, a)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    if k == 1:\n        if n % 2 == 0:\n            n = n - 2\n            print(n // 2)\n        else:\n            print(n // 2)\n    else:\n        count = 0\n        for i in range(1, len(l) - 1):\n            if l[i] > l[i - 1] + l[i + 1]:\n                count = count + 1\n        print(count)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = 0\n    for j in range(1, n - 1):\n        if a[j] > a[j - 1] + a[j + 1]:\n            c += 1\n    if k != 1:\n        print(c)\n    elif n % 2 == 0:\n        print(int(n / 2) - 1)\n    else:\n        print(int(n // 2))", "R = lambda : map(int, input().split())\n(t,) = R()\nexec(t * 'n,k=R();a=*R(),;print((n-1>>1,sum(y>x+z for x,y,z in zip(a,a[1:],a[2:])))[k>1]);')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k == 1:\n        print((n - 1) // 2)\n    else:\n        r = 0\n        for i in range(1, n - 1):\n            if a[i] > a[i - 1] + a[i + 1]:\n                r += 1\n        print(r)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k == 1:\n        ans = 0\n        for i in range(1, n - 1, 2):\n            ans += 1\n        print(ans)\n    else:\n        ans = 0\n        for i in range(1, n - 1):\n            if a[i] > a[i - 1] + a[i + 1]:\n                ans += 1\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k == 1:\n        ans = 0\n        for i in range(1, n - 1, 2):\n            ans += 1\n        print(ans)\n        continue\n    ans = 0\n    for i in range(1, n - 1):\n        if a[i] > a[i - 1] + a[i + 1]:\n            ans += 1\n    print(ans)", "import sys\nimport collections\nfrom math import ceil, gcd, sqrt, log\nimport bisect\nINF = float('inf')\nmod = 1000000007\n\ndef solve():\n    (n, k) = map(int, input().split())\n    A = list(map(int, input().split()))\n    if k == 1:\n        if n % 2 == 0:\n            print((n - 1) // 2)\n        else:\n            print(n // 2)\n        return\n    count = 0\n    for i in range(1, n - 1):\n        if A[i] > A[i + 1] + A[i - 1]:\n            count += 1\n    print(count)\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "from collections import *\nfrom functools import lru_cache\n\ndef readline():\n    s = input()\n    return s.split(' ')\n\ndef readlineint():\n    return [*map(int, readline())]\n\ndef readint():\n    s = input()\n    return int(s)\n\ndef testcase():\n    [N, k] = readlineint()\n    t = readlineint()\n    res = 0\n    if k == 1:\n        print((N - 1) // 2)\n        return\n    for i in range(1, N - 1):\n        if t[i - 1] + t[i + 1] < t[i]:\n            res += 1\n    print(res)\nN = readint()\nfor _ in range(N):\n    testcase()", "t = int(input())\nfor _ in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    array = [int(x) for x in input().split()]\n    count = 0\n    if k != 1:\n        for i in range(1, n - 1):\n            if array[i] > array[i - 1] + array[i + 1]:\n                count += 1\n        print(count)\n    else:\n        print((n - 1) // 2)", "def solve(S, n, k):\n    if k == 1:\n        return (n - 1) // 2\n    count = 0\n    for i in range(1, n - 1):\n        if S[i] > S[i - 1] + S[i + 1]:\n            count += 1\n    return count\nfor case in range(int(input())):\n    (n, k) = map(int, input().split())\n    S = list(map(int, input().split()))\n    print(solve(S, n, k))", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    c = 0\n    for i in range(1, n - 1):\n        if arr[i] > arr[i - 1] + arr[i + 1]:\n            c += 1\n    if k == 1:\n        print((n - 2) // 2 + (n - 2) % 2)\n    else:\n        print(c)", "class RisingSand:\n\n    def findTooTall(self, n, k, a):\n        if k == 1:\n            if n % 2:\n                print(n // 2)\n                return\n            else:\n                print((n - 1) // 2)\n                return\n        count = 0\n        for i in range(1, n - 1):\n            if a[i] > a[i - 1] + a[i + 1]:\n                count += 1\n        print(count)\n        return\nT = int(input())\nwhile T:\n    T -= 1\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    RisingSand().findTooTall(n, k, a)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print([n // 2 - 1 + n % 2, sum((a[i] > a[i - 1] + a[i + 1] for i in range(1, n - 1)))][k != 1])", "def get_tall_piles(a, k):\n    n = len(a)\n    if k == 1:\n        return (n - 1) // 2\n    count = 0\n    for i in range(1, n - 1):\n        if a[i] > a[i - 1] + a[i + 1]:\n            count += 1\n    return count\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(get_tall_piles(a, k))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    mass = list(map(int, input().split()))\n    if k == 1:\n        print((n - 1) // 2)\n        continue\n    e = 0\n    for i in range(1, n - 1):\n        if mass[i] > mass[i - 1] + mass[i + 1]:\n            e += 1\n    print(e)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = list(map(int, input().split()))\n    if b == 1:\n        print((a - 1) // 2)\n    else:\n        d = 0\n        for j in range(1, a - 1):\n            if c[j] > c[j - 1] + c[j + 1]:\n                d += 1\n        print(d)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    x = list(map(int, input().split()))\n    if k == 1:\n        print((n - 1) // 2)\n    else:\n        print(sum([1 if x[i] > x[i - 1] + x[i + 1] else 0 for i in range(1, n - 1)]))", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    z = list(map(int, input().split()))\n    if y > 1:\n        a = 0\n        for i in range(x - 2):\n            if z[i] - z[i + 1] < -z[i + 2]:\n                a += 1\n        print(a)\n    else:\n        print((x - 1) // 2)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print((n - 1) // 2 if k == 1 else sum((a[i] > a[i - 1] + a[i + 1] for i in range(1, n - 1))))", "import math\nfrom collections import Counter\n\ndef fun(a, n):\n    c = 0\n    if n == 1:\n        for i in range(1, len(a) - 1):\n            if i % 2 != 0:\n                c += 1\n        return c\n    for i in range(1, len(a) - 1):\n        if a[i] > a[i + 1] + a[i - 1]:\n            c += 1\n    return c\nn = int(input())\nfor _ in range(n):\n    l = input().split()\n    x = input().split()\n    x = list(map(int, x))\n    print(fun(x, int(l[-1])))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print((n - 1) // 2 if k == 1 else sum((a[i] > a[i - 1] + a[i + 1] for i in range(1, n - 1))))", "def find_max(seq):\n    cnt = 0\n    for i in range(1, len(seq) - 1):\n        if seq[i] > seq[i - 1] + seq[i + 1]:\n            cnt += 1\n    return cnt\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    seq = list(map(int, input().split()))\n    mx = (n - 1) // 2\n    cur_mx = find_max(seq)\n    if k == 1:\n        print(mx)\n    else:\n        print(cur_mx)", "n = int(input())\nfor i in range(n):\n    (k, a) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    c = 0\n    if a == 1:\n        for j in range(1, k - 1, 2):\n            c += 1\n    else:\n        for j in range(1, k - 1):\n            if arr[j] > arr[j - 1] + arr[j + 1]:\n                c += 1\n    print(c)", "testcases = int(input())\nfor i in range(testcases):\n    (n, k) = map(int, input().split())\n    li = list(map(int, input().split()))\n    count = 0\n    if k != 1:\n        for j in range(1, n - 1):\n            if li[j] > li[j - 1] + li[j + 1]:\n                count += 1\n        print(count)\n    else:\n        print((n - 1) // 2)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print((n - 1) // 2 if k == 1 else sum((a[i] > a[i - 1] + a[i + 1] for i in range(1, n - 1))))", "for f in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k != 1:\n        brojac = 0\n        for i in range(1, n - 1):\n            if a[i] > a[i - 1] + a[i + 1]:\n                brojac += 1\n                i += 1\n        print(brojac)\n    else:\n        print((n - 1) // 2)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print((n - 1) // 2 if k == 1 else sum((a[i] > a[i - 1] + a[i + 1] for i in range(1, n - 1))))", "t = int(input())\nfor _ in range(t):\n    (n, k) = (int(i) for i in input().split())\n    if k == 1:\n        input()\n        print((n - 1) // 2)\n        continue\n    a = [int(i) for i in input().split()]\n    res = sum((1 for i in range(1, n - 1) if a[i] > a[i - 1] + a[i + 1]))\n    print(res)", "for _ in range(int(input())):\n    a = [int(_) for _ in input().split()]\n    b = [int(_) for _ in input().split()]\n    if a[1] == 1:\n        print((a[0] - 1) // 2)\n    else:\n        c = 0\n        for i in range(1, a[0] - 1):\n            if b[i] > b[i - 1] + b[i + 1]:\n                c += 1\n        print(c)", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    list1 = list(map(int, input().split()))\n    count = 0\n    if k == 1:\n        count = math.ceil((n - 2) / 2)\n        print(count)\n    else:\n        for i in range(1, n - 1):\n            if list1[i] > list1[i - 1] + list1[i + 1]:\n                count += 1\n        print(count)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 2):\n        if a[i + 1] > a[i] + a[i + 2]:\n            ans += 1\n    if k == 1:\n        print((n - 1) // 2)\n    else:\n        print(ans)", "import sys\n\ndef read(type):\n    return type(sys.stdin.readline().strip())\nfor _ in range(read(int)):\n    (n, k) = map(int, sys.stdin.readline().split())\n    l = list(map(int, sys.stdin.readline().split()))\n    ans = 0\n    if k == 1:\n        print(int((n - 1) / 2))\n    else:\n        for i in range(1, n - 1):\n            if l[i] > l[i - 1] + l[i + 1]:\n                ans += 1\n        print(ans)", "test = int(input())\nwhile test:\n    (n, k) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    c = 0\n    if k == 1:\n        print((n - 1) // 2)\n    else:\n        for i in range(1, len(a) - 1):\n            if a[i] > a[i - 1] + a[i + 1]:\n                c += 1\n        print(c)\n    test -= 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = 0\n    for i in range(1, n - 1):\n        if l[i] > l[i - 1] + l[i + 1]:\n            c += 1\n    if k != 1:\n        print(c)\n    elif n % 2 != 0:\n        print(n // 2)\n    else:\n        print(n // 2 - 1)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    x = list(map(int, input().split()))\n    if k == 1:\n        print((n - 1) // 2)\n    else:\n        print(sum([1 if x[i] > x[i - 1] + x[i + 1] else 0 for i in range(1, n - 1)]))", "t = int(input())\nfor elem in range(t):\n    (n, k) = map(int, input().split())\n    a = [int(el) for el in input().split()]\n    c = 0\n    for i in range(1, n - 1):\n        if a[i] > a[i - 1] + a[i + 1]:\n            c += 1\n    if k == 1:\n        print((n - 2 + 1) // 2)\n    else:\n        print(c)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    l = list(map(int, input().split()))\n    if b == 1:\n        if a % 2 == 0:\n            print((a - 1) // 2)\n        else:\n            print(a // 2)\n    else:\n        c = 0\n        for j in range(1, a - 1):\n            if l[j] > l[j - 1] + l[j + 1]:\n                c += 1\n        print(c)", "T = int(input())\nfor t in range(T):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    if k == 1:\n        if (n - 2) % 2 == 0:\n            print((n - 2) // 2)\n        else:\n            print((n - 2) // 2 + 1)\n    else:\n        c = 0\n        for i in range(1, n - 1):\n            if l[i] > l[i - 1] + l[i + 1]:\n                c += 1\n        print(c)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    an = list(map(int, input().split()))\n    if k == 1:\n        print((n - 1) // 2)\n    else:\n        res = 0\n        for i in range(1, n - 1):\n            if an[i] > an[i - 1] + an[i + 1]:\n                res += 1\n        print(res)", "import math\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k == 1:\n        print(math.ceil((n - 2) / 2))\n    else:\n        c = 0\n        for i in range(1, n - 1):\n            if a[i] > a[i - 1] + a[i + 1]:\n                c += 1\n        print(c)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    if k == 1:\n        print((n - 1) // 2)\n    else:\n        count = 0\n        for j in range(1, n - 1):\n            if l[j] > l[j - 1] + l[j + 1]:\n                count += 1\n        print(count)", "for _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    c = 0\n    array = list(map(int, input().split()))\n    if n == 1:\n        if m % 2 != 0:\n            print(m // 2)\n        else:\n            print((m - 1) // 2)\n    else:\n        for i in range(1, len(array) - 1):\n            if array[i] > array[i - 1] + array[i + 1]:\n                c += 1\n                i += 2\n        print(c)", "numTestCases = int(input())\nfor i in range(0, numTestCases):\n    inputsNK = input().split(' ')\n    sandPiles = list(map(int, input().split(' ')))\n    numTooTall = 0\n    if int(inputsNK[1]) != 1:\n        for j in range(1, len(sandPiles) - 1):\n            if sandPiles[j] > sandPiles[j + 1] + sandPiles[j - 1]:\n                numTooTall += 1\n    else:\n        for k in range(2, len(sandPiles), 2):\n            numTooTall += 1\n    print(numTooTall)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    sand = list(map(int, input().split()))\n    if k == 1:\n        print((n - 1) // 2)\n        continue\n    count = 0\n    for i in range(1, n - 1):\n        if sand[i] > sand[i - 1] + sand[i + 1]:\n            count += 1\n    print(count)", "ans = []\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    x = 0\n    if k > 1:\n        for i in range(1, n - 1):\n            if a[i] > a[i - 1] + a[i + 1]:\n                x += 1\n    else:\n        x = (n - 1) // 2\n    ans.append(x)\nfor i in ans:\n    print(i)", "for i in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    count = 0\n    if k == 1:\n        if n % 2 != 0:\n            print(int(n / 2))\n        else:\n            print(int(n / 2) - 1)\n    else:\n        for i in range(1, n - 1):\n            if a[i] > a[i - 1] + a[i + 1]:\n                count += 1\n        print(count)", "t = int(input())\nwhile t > 0:\n    (n, k) = list(map(int, input().split(' ')))\n    arr = list(map(int, input().split(' ')))\n    res = 0\n    if k > 1:\n        for i in range(1, n - 1):\n            if arr[i - 1] + arr[i + 1] < arr[i]:\n                res += 1\n        print(res)\n    else:\n        print((n - 1) // 2)\n    t -= 1", "for qwerty in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    if k == 1:\n        print(n // 2 - 1 + n % 2)\n    else:\n        ans = 0\n        for i in range(1, n - 1):\n            if l[i - 1] + l[i + 1] < l[i]:\n                ans += 1\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    if k == 1:\n        print((n - 1) // 2)\n    else:\n        res = 0\n        for i in range(1, n - 1):\n            if a[i] > a[i - 1] + a[i + 1]:\n                res += 1\n        print(res)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    if k == 1:\n        print((n - 1) // 2)\n        continue\n    ans = 0\n    for i in range(1, n - 1):\n        if lis[i - 1] + lis[i + 1] < lis[i]:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(1, n - 1):\n        if a[i] > a[i - 1] + a[i + 1]:\n            ans += 1\n    if k > 1:\n        print(ans)\n    else:\n        ans = (n - 1) // 2\n        print(ans)", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    counter = 0\n    for i in range(1, n - 1):\n        if a[i] > a[i - 1] + a[i + 1]:\n            counter += 1\n    if k == 1:\n        counter = (n - 1) // 2\n    print(counter)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    c = 0\n    for j in range(1, n - 1):\n        if lst[j] > lst[j - 1] + lst[j + 1]:\n            c += 1\n    if k == 1:\n        n -= 2\n        if n % 2 == 0:\n            ele = n // 2\n        else:\n            ele = n // 2 + 1\n        if c < ele:\n            c = ele\n    print(c)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k != 1:\n        s = 0\n        for x in range(1, n - 1):\n            if a[x] > a[x - 1] + a[x + 1]:\n                s += 1\n        print(s)\n    else:\n        print(n // 2 + n % 2 - 1)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor q in range(t):\n    (n, delta) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    c = 0\n    for i in range(1, len(arr) - 1):\n        if arr[i] > arr[i - 1] + arr[i + 1]:\n            c += 1\n    if delta == 1:\n        print(max((len(arr) - 2) // 2, len(arr) - 2 - (len(arr) - 2) // 2))\n    else:\n        print(c)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().strip().split()))\n    c = 0\n    if k == 1:\n        print((n - 1) // 2)\n        continue\n    for i in range(1, n - 1):\n        if l[i] > l[i - 1] + l[i + 1]:\n            c += 1\n    print(c)", "t = int(input())\nfor vvod in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    if k != 1:\n        for i in range(1, n - 1):\n            if a[i] > a[i - 1] + a[i + 1]:\n                ans += 1\n        print(ans)\n    else:\n        print((n - 1) // 2)", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    (n, k) = [int(i) for i in input().split()]\n    l = [int(i) for i in input().split()]\n    if k == 1:\n        print((n - 1) // 2)\n    else:\n        c = 0\n        for i in range(1, n - 1):\n            if l[i] > l[i - 1] + l[i + 1]:\n                c = c + 1\n        print(c)", "for _ in range(int(input().strip())):\n    (n, k) = [int(x) for x in input().split(' ')]\n    arr = [int(x) for x in input().split(' ')]\n    if k == 1:\n        print((n - 1) // 2)\n    else:\n        ans = 0\n        for i in range(1, n - 1):\n            if arr[i] > arr[i - 1] + arr[i + 1]:\n                ans += 1\n        print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    if n == k:\n        ans = 0\n        for i in range(1, n - 1):\n            if a[i] > a[i - 1] + a[i + 1]:\n                ans += 1\n        print(ans)\n    elif k == 1:\n        ans = 0\n        for i in range(1, n - 1):\n            if i % 2 == 1:\n                ans += 1\n        print(ans)\n    else:\n        ans = 0\n        for i in range(1, n - 1):\n            if a[i] > a[i - 1] + a[i + 1]:\n                ans += 1\n        print(ans)", "import math\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    g = 0\n    if k == 1:\n        g = int(math.ceil(len(a) / 2) - 1)\n    else:\n        for i in range(1, len(a) - 1):\n            if a[i] > a[i - 1] + a[i + 1]:\n                g = g + 1\n    print(g)", "t = int(input())\nfor _ in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    l = [int(x) for x in input().split()]\n    if k == 1:\n        if n % 2 == 0:\n            print(n // 2 - 1)\n        else:\n            print(n // 2)\n    else:\n        count = 0\n        for i in range(1, n - 1):\n            if l[i] > l[i - 1] + l[i + 1]:\n                count += 1\n        print(count)", "tc = int(input())\nwhile tc > 0:\n    N = [int(i) for i in input().split(' ')]\n    n = N[0]\n    k = N[1]\n    A = [int(i) for i in input().split(' ')]\n    ans = 0\n    if k == 1:\n        if n % 2 == 0:\n            ans = (n - 2) // 2\n        else:\n            ans = (n - 2) // 2 + 1\n    else:\n        for i in range(1, n - 1):\n            if A[i] > A[i - 1] + A[i + 1]:\n                ans += 1\n    print(ans)\n    tc = tc - 1"]