["import sys\ninput = sys.stdin.readline\nfrom math import gcd\nfrom functools import reduce\nfor _ in range(int(input())):\n    n = int(input())\n    w = list(map(int, input().split()))\n    a = w[::2]\n    b = w[1::2]\n    x = reduce(gcd, a)\n    y = reduce(gcd, b)\n    if y != 0 and all((i % y != 0 for i in a)):\n        print(y)\n    elif x != 0 and all((i % x != 0 for i in b)):\n        print(x)\n    else:\n        print(0)", "from math import gcd\n\ndef solve(n, nums):\n    gcd1 = nums[0]\n    for i in range(2, n, 2):\n        gcd1 = gcd(gcd1, nums[i])\n    gcd2 = nums[1]\n    for i in range(3, n, 2):\n        gcd2 = gcd(gcd2, nums[i])\n    if gcd1 == gcd2:\n        return 0\n    for i in range(1, n, 2):\n        if nums[i] % gcd1 == 0:\n            gcd1 = 1\n            break\n    for i in range(0, n, 2):\n        if nums[i] % gcd2 == 0:\n            gcd2 = 1\n            break\n    if gcd1 == gcd2:\n        return 0\n    return gcd2 if gcd2 != 1 else gcd1\nans = []\nfor _ in range(int(input())):\n    ans.append(solve(int(input()), list(map(int, input().split()))))\nprint(*ans, sep='\\n')", "from math import gcd\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    a = arr[0]\n    for i in range(2, len(arr), 2):\n        a = gcd(a, arr[i])\n    b = arr[1]\n    for j in range(3, len(arr), 2):\n        b = gcd(b, arr[j])\n    res_a = True\n    res_b = True\n    for i in range(0, n, 2):\n        res_b = res_b and arr[i] % b != 0\n    for i in range(1, n, 2):\n        res_a = res_a and arr[i] % a != 0\n    ans = 0\n    if res_b:\n        ans = max(ans, b)\n    if res_a:\n        ans = max(ans, a)\n    print(ans)\nt = int(input())\nwhile t:\n    t -= 1\n    solve()", "from math import gcd\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().strip().split()))\n    l1 = l[::2]\n    l2 = l[1::2]\n    (a, b) = (l1[0], l2[0])\n    if len(l1) > 1:\n        for i in range(1, n // 2 + n % 2):\n            a = gcd(l1[i], a)\n            if a == 1:\n                break\n    if len(l2) > 1:\n        for i in range(1, n // 2):\n            b = gcd(l2[i], b)\n            if b == 1:\n                break\n    if a > 1:\n        for i in range(n // 2):\n            if l2[i] % a == 0:\n                a = 1\n                break\n    if b > 1:\n        for i in range(n // 2 + n % 2):\n            if l1[i] % b == 0:\n                b = 1\n                break\n    if a == b:\n        print(0)\n    else:\n        print(max(a, b))", "from math import gcd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    evens = arr[0]\n    odds = arr[1]\n    for i in range(2, n, 2):\n        evens = gcd(evens, arr[i])\n    for i in range(1, n, 2):\n        odds = gcd(odds, arr[i])\n    evens = 0 if any((num % evens == 0 for num in arr[1::2])) else evens\n    if any((num % odds == 0 for num in arr[::2])):\n        odds = 0\n    print(max(odds, evens))", "import math\nfor _ in range(int(input())):\n    n = input()\n    x = list(map(int, input().split(' ')))\n    evens = x[::2]\n    odds = x[1::2]\n    g1 = x[0]\n    g2 = x[1]\n    for i in evens:\n        if g1 != i:\n            g1 = math.gcd(g1, i)\n    for i in odds:\n        if g2 != i:\n            g2 = math.gcd(g2, i)\n    for i in odds:\n        if i % g1 == 0:\n            g1 = 0\n            break\n    for i in evens:\n        if i % g2 == 0:\n            g2 = 0\n            break\n    print(max(g1, g2))", "import math, sys\ninput = sys.stdin.readline\nS = lambda : input().rstrip()\nI = lambda : int(S())\nM = lambda : map(int, S().split())\nL = lambda : list(M())\nmod1 = 1000000007\nmod2 = 998244353\nfor _ in range(I()):\n    n = I()\n    a = L()\n    g1 = g2 = f1 = f2 = 0\n    for i in range(0, n, 2):\n        g1 = math.gcd(g1, a[i])\n    for i in range(1, n, 2):\n        g2 = math.gcd(g2, a[i])\n    for i in range(0, n, 2):\n        if a[i] % g2 == 0:\n            f1 = 1\n            break\n    for i in range(1, n, 2):\n        if a[i] % g1 == 0:\n            f2 = 1\n            break\n    if f1 == 0:\n        print(g2)\n    elif f2 == 0:\n        print(g1)\n    else:\n        print(0)", "import sys\nimport bisect\nimport math\nfrom collections import deque\ninput = lambda : sys.stdin.readline().strip()\nmod = 10 ** 9 + 7\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    (even, odd) = (a[0], a[1])\n    for i in range(2, n):\n        if i % 2 == 0:\n            even = math.gcd(even, a[i])\n        else:\n            odd = math.gcd(odd, a[i])\n    for i in range(0, n, 2):\n        if a[i] % odd == 0:\n            break\n    else:\n        return odd\n    for i in range(1, n, 2):\n        if a[i] % even == 0:\n            break\n    else:\n        return even\n    return 0\nt = 1\nt = int(input())\nfor _ in range(t):\n    print(solve())", "import math\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    odd = a[0:n:2]\n    even = a[1:n:2]\n    oddGcd = odd[0]\n    for i in odd:\n        oddGcd = math.gcd(oddGcd, i)\n    evenGcd = even[0]\n    for i in even:\n        evenGcd = math.gcd(evenGcd, i)\n    check = False\n    for i in odd:\n        if i % evenGcd == 0:\n            check = True\n            break\n    if check != True:\n        print(evenGcd)\n        return\n    check = False\n    for i in even:\n        if i % oddGcd == 0:\n            check = True\n            break\n    if check != True:\n        print(oddGcd)\n        return\n    print(0)\nfor _ in range(int(input())):\n    solve()", "import math\n\ndef gcd(a):\n    x = 0\n    for p in a:\n        x = math.gcd(x, p)\n    return x\nfor _ in range(int(input())):\n    n = input()\n    (*a,) = map(int, input().split())\n    (e, o) = (a[::2], a[1::2])\n    (g1, g2) = (gcd(e), gcd(o))\n    if g2 != 0 and all((x % g2 != 0 for x in e)):\n        print(g2)\n    elif g1 != 0 and all((x % g1 != 0 for x in o)):\n        print(g1)\n    else:\n        print(0)", "import math\n\ndef gcd(a):\n    x = 0\n    for p in a:\n        x = math.gcd(x, p)\n    return x\nfor _ in range(int(input())):\n    n = input()\n    (*a,) = map(int, input().split())\n    (e, o) = (a[::2], a[1::2])\n    (g1, g2) = (gcd(e), gcd(o))\n    if g2 != 0 and all((x % g2 != 0 for x in e)):\n        print(g2)\n    elif g1 != 0 and all((x % g1 != 0 for x in o)):\n        print(g1)\n    else:\n        print(0)", "from math import gcd\nfrom functools import reduce\nn = int(input())\nwhile n != 0:\n    (val1, val2) = (0, 0)\n    x = int(input())\n    lst = list(map(int, input().split()))\n    lst1 = lst[::2]\n    lst2 = lst[1::2]\n    gcd1 = reduce(gcd, lst1)\n    gcd2 = reduce(gcd, lst2)\n    if gcd1 == gcd2:\n        print(0)\n        n -= 1\n        continue\n    for l in lst1:\n        if l % gcd2 == 0:\n            val1 = 1\n            break\n    if val1 == 0:\n        print(gcd2)\n        n -= 1\n        continue\n    for m in lst2:\n        if m % gcd1 == 0:\n            val2 = 1\n            break\n    if val2 == 0:\n        print(gcd1)\n        n -= 1\n        continue\n    if val1 == 1 and val2 == 1:\n        print(0)\n    n -= 1", "import math\n\ndef gcd(a):\n    x = 0\n    for p in a:\n        x = math.gcd(x, p)\n    return x\nfor _ in range(int(input())):\n    n = input()\n    (*a,) = map(int, input().split())\n    (e, o) = (a[::2], a[1::2])\n    (g1, g2) = (gcd(e), gcd(o))\n    if g2 != 0 and all((x % g2 != 0 for x in e)):\n        print(g2)\n    elif g1 != 0 and all((x % g1 != 0 for x in o)):\n        print(g1)\n    else:\n        print(0)", "from math import gcd\nfrom functools import reduce\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    evens = [b for (i, b) in enumerate(a) if i % 2 == 0]\n    odds = [b for (i, b) in enumerate(a) if i % 2 == 1]\n    go = reduce(gcd, odds)\n    ge = reduce(gcd, evens)\n    (fo, fe) = (False, False)\n    for odd in odds:\n        if odd % ge == 0:\n            fo = True\n            break\n    for even in evens:\n        if even % go == 0:\n            fe = True\n            break\n    if not fo and (not fe):\n        print(go)\n    elif not fo:\n        print(ge)\n    elif not fe:\n        print(go)\n    else:\n        print(0)", "import math\n\ndef gcd(a):\n    x = 0\n    for p in a:\n        x = math.gcd(x, p)\n    return x\nfor _ in range(int(input())):\n    n = input()\n    (*a,) = map(int, input().split())\n    (e, o) = (a[::2], a[1::2])\n    (g1, g2) = (gcd(e), gcd(o))\n    if g2 != 0 and all((x % g2 != 0 for x in e)):\n        print(g2)\n    elif g1 != 0 and all((x % g1 != 0 for x in o)):\n        print(g1)\n    else:\n        print(0)"]