["for _ in range(int(input())):\n    n = int(input())\n    list1 = []\n    for num in range(1, n + 1, 2):\n        while num <= n:\n            list1.append(num)\n            num *= 2\n    print(2)\n    print(' '.join(map(str, list1)))", "def find(n):\n    if n == 2:\n        return [1, 2]\n    out = []\n    current = 1\n    while current <= n:\n        out.append(current)\n        next = current * 2\n        while next <= n:\n            out.append(next)\n            next *= 2\n        current += 2\n    return out\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    ans = [str(elem) for elem in find(n)]\n    print(2)\n    print(' '.join(ans))", "from re import I\n\ndef solve(n):\n    d = 2\n    print(d)\n    out = []\n    i = 1\n    while i <= n:\n        temp = i\n        while temp <= n:\n            out.append(temp)\n            temp *= 2\n        i += 2\n    print(' '.join(map(str, out)))\n    pass\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        solve(n)\n    return\nmain()", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    print(2)\n    ans = []\n    for i in range(1, n + 1, 2):\n        while i <= n:\n            ans.append(i)\n            i *= 2\n    print(' '.join(map(str, ans)))", "tc = int(input())\nwhile tc > 0:\n    n = int(input())\n    A = []\n    i = 1\n    while i <= n:\n        j = i\n        while j <= n:\n            A.append(str(j))\n            j = j * 2\n        i += 2\n    print(2)\n    print(' '.join(A))\n    tc = tc - 1", "for i in range(int(input())):\n    n = int(input())\n    a = []\n    for j in range(1, n + 1, 2):\n        k = j\n        while k <= n:\n            a.append(k)\n            k *= 2\n    print(2)\n    print(' '.join(map(str, a)))", "for i in range(int(input())):\n    n = int(input())\n    pLst = []\n    for j in range(1, n + 1, 2):\n        while j <= n:\n            pLst.append(j)\n            j = j * 2\n    print(2)\n    print(' '.join(list(map(str, pLst))))", "def solve(n):\n    arr = []\n    for i in range(1, n + 1):\n        if i % 2 == 0:\n            continue\n        j = i\n        while j <= n:\n            arr.append(j)\n            j *= 2\n    return arr\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    print(2)\n    arr = solve(n)\n    print(' '.join(map(str, arr)))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    was = [False] * (n + 1)\n    res = []\n    for i in range(1, n + 1):\n        if was[i]:\n            continue\n        x = i\n        while x <= n:\n            res.append(x)\n            was[x] = True\n            x *= 2\n    print(2)\n    print(' '.join(map(str, res)))", "t = int(input())\nfor case in range(t):\n    n = int(input())\n    a = []\n    for i in range(n // 2):\n        i = 2 * i + 1\n        a.append(i)\n        while 2 * i <= n:\n            i *= 2\n            a.append(i)\n    if n % 2 == 1:\n        a.append(n)\n    astr = ' '.join([str(i) for i in a])\n    print(2)\n    print(astr)", "import math\nt = int(input())\nfor test in range(t):\n    n = int(input())\n    print(2)\n    ansLis = []\n    usedNumI = [0 for i in range(n + 2)]\n    usedNumI[0] = 1\n    for i in range(n + 1):\n        if not usedNumI[i]:\n            while i <= n:\n                usedNumI[i] = 1\n                ansLis.append(i)\n                i *= 2\n    print(' '.join(list(map(str, ansLis))))", "import sys\nimport math\nfrom collections import defaultdict, Counter, deque\ninput = sys.stdin.readline\n\ndef I():\n    return input()\n\ndef II():\n    return int(input())\n\ndef MII():\n    return map(int, input().split())\n\ndef LI():\n    return list(input().split())\n\ndef LII():\n    return list(map(int, input().split()))\n\ndef GMI():\n    return map(lambda x: int(x) - 1, input().split())\n\ndef LGMI():\n    return list(map(lambda x: int(x) - 1, input().split()))\n\ndef WRITE(out):\n    return print('\\n'.join(map(str, out)))\n\ndef WS(out):\n    return print(' '.join(map(str, out)))\n\ndef WNS(out):\n    return print(''.join(map(str, out)))\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(2)\n    ans = []\n    for i in range(1, n + 1, 2):\n        j = i\n        group = []\n        while j <= n:\n            group.append(j)\n            j *= 2\n        ans += group\n    WS(ans)", "for _ in range(int(input())):\n    n = int(input())\n    d = 2\n    a = [0] * n\n    start = 1\n    current = start\n    for i in range(n):\n        a[i] = current\n        current *= d\n        if current > n:\n            start += 2\n            current = start\n    print(d)\n    print(' '.join((str(i) for i in a)))", "for t in range(int(input())):\n    n = int(input())\n    i = 1\n    a = []\n    while i <= n:\n        a.append(i)\n        i *= 2\n    for i in range(3, n + 1):\n        if i & i - 1 != 0 and i % 2 != 0:\n            c = i\n            while c <= n:\n                a.append(c)\n                c *= 2\n    print(2)\n    print(' '.join((str(e) for e in a)))", "t = int(input())\nfor ncase in range(1, t + 1):\n    n = int(input())\n    d = 2\n    print(f'{d}')\n    ans = ''\n    s = [i for i in range(1, n + 1)]\n    s1 = []\n    for i in range(1, n + 1, 2):\n        s0 = i\n        if s[0] > n / 2 + 2:\n            s1 += [str(i) for i in range(i, n + 1, 2)]\n            break\n        t = [s0]\n        while s0 * 2 <= n:\n            s0 *= 2\n            t.append(s0)\n        s1 += [str(i) for i in t]\n    print(' '.join(s1))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    d = 2\n    p = []\n    used = {}\n    for i in range(1, n + 1):\n        if i not in used:\n            p.append(i)\n            q = i\n            used[i] = 1\n            while q < n:\n                q *= d\n                if q <= n and q not in used:\n                    used[q] = 1\n                    p.append(q)\n    print(d)\n    print(' '.join(map(str, p)))", "numTestCases = int(input())\nfor case in range(numTestCases):\n    n = int(input())\n    d = 2\n    arr = [1]\n    number = 3\n    while len(arr) < n:\n        for j in range(0, n - 1):\n            if arr[j] * 2 <= n:\n                arr.append(arr[j] * 2)\n            else:\n                arr.append(number)\n                number += 2\n    print(d)\n    for t in range(len(arr)):\n        arr[t] = str(arr[t])\n    print(' '.join(arr))", "t = int(input())\nwhile t:\n    n = int(input())\n    sol = []\n    seen = set()\n    for i in range(1, n + 1):\n        if i in seen:\n            continue\n        cur = i\n        while cur <= n:\n            seen.add(cur)\n            sol.append(str(cur))\n            cur *= 2\n    for i in range(1, n + 1):\n        if not i in seen:\n            sol.append(str(i))\n    print(2)\n    print(' '.join(sol))\n    t -= 1", "for i in range(int(input())):\n    n = int(input())\n    print(2)\n    s = ''\n    for i in range(0, n + 1, 2):\n        j = i + 1\n        while j <= n:\n            s += str(j) + ' '\n            j = j * 2\n    print(s)", "def answer(n: int):\n    d = 2\n    array = [False] * n\n    ans = ''\n    for (num, b) in enumerate(array, 1):\n        if b:\n            continue\n        while num <= n:\n            array[num - 1] = True\n            ans += str(num) + ' '\n            num *= d\n    return ans.strip()\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        print(2)\n        print(answer(n))\nmain()", "x = int(input())\nfor jj in range(x):\n    n = int(input())\n    ans = [0] * n\n    t = set(range(1, n + 1))\n    k = 0\n    for j in range(1, n + 1):\n        i = j\n        while i in t:\n            t.remove(i)\n            ans[k] = i\n            k += 1\n            i *= 2\n    print(2)\n    print(' '.join([str(p) for p in ans]))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    permutation = ''\n    for i in range(1, n + 1, 2):\n        while i <= n:\n            permutation += f'{i} '\n            i <<= 1\n    print(2)\n    print(permutation)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    print(2)\n    k = 1\n    ans = ''\n    while k <= n // 2:\n        q = k\n        while q <= n:\n            ans += str(q) + ' '\n            q *= 2\n        k += 2\n    for j in range(n // 2 + 1 + n // 2 % 2, n + 1, 2):\n        ans += str(j) + ' '\n    print(ans)", "iter = int(input())\nfor i in range(iter):\n    n = int(input())\n    s = ''\n    for i in range(1, n + 1, 2):\n        ind = i\n        while ind <= n:\n            s += str(ind) + ' '\n            ind *= 2\n    print(2)\n    print(s)", "for i in range(int(input())):\n    n = int(input())\n    print('2')\n    p = 1\n    s = ''\n    while p <= n:\n        x = p\n        while x <= n:\n            s += str(x) + ' '\n            x *= 2\n        p += 2\n    print(s)", "def op(s, p):\n    A = ''\n    for se in s:\n        A += str(se) + p\n    return A\n\ndef kil_(n):\n    k = []\n    j = 1\n    while len(k) < n:\n        k.append(j)\n        i = j\n        while i * 2 <= n:\n            i *= 2\n            k.append(i)\n        j = j + 2\n    return '2' + '\\n' + op(k, ' ')[:-1]\n\ndef kil(a):\n    t = int(input())\n    A = ''\n    for i in range(t):\n        A += kil_(a()) + '\\n'\n    print(A[:-1])\n\ndef h():\n    return int(input())\nkil(h)", "import math\n\ndef main():\n    n = int(input())\n    lst = []\n    needed = [True] * (n + 1)\n    base = 0\n    lim = math.ceil(n * 0.5)\n    while base <= lim:\n        base += 1\n        if not needed[base]:\n            continue\n        i = base\n        while i <= n:\n            if not needed[i]:\n                continue\n            lst.append(i)\n            needed[i] = False\n            i *= 2\n    for (i, isNeeded) in enumerate(needed):\n        if i == 0:\n            continue\n        if isNeeded:\n            lst.append(i)\n    string = ''\n    for num in lst:\n        string += str(num) + ' '\n    print('2')\n    print(string)\nt = int(input())\nfor i in range(t):\n    main()", "for _ in range(int(input())):\n    n = int(input())\n    print(2)\n    vis = [False for i in range(n + 10)]\n    pri = ''\n    for i in range(1, n + 1):\n        if not vis[i]:\n            ind = i\n            while ind <= n:\n                pri += str(ind) + ' '\n                vis[ind] = True\n                ind *= 2\n    print(pri)", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    marker = [False] * (n + 1)\n    result = []\n    for i in range(n, 0, -1):\n        if not marker[i]:\n            marker[i] = True\n            result.append(i)\n        while i / 2 == i // 2 and (not marker[i // 2]):\n            result.append(i // 2)\n            marker[i // 2] = True\n            i = i // 2\n    print(2)\n    result.reverse()\n    for i in range(len(result)):\n        result[i] = str(result[i])\n    print(' '.join(result))", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    l = [1]\n    j = 2\n    checks = list(range(2, n + 1))\n    while j <= n:\n        if checks[j - 2] == None:\n            j += 1\n            continue\n        counter = j\n        while counter <= n:\n            l.append(counter)\n            checks[counter - 2] = None\n            counter *= 2\n        j += 1\n    print(2)\n    result = []\n    for i in l:\n        result.append(str(i))\n    print(' '.join(result))", "def solve(n):\n    for i in range(1, n + 1, 2):\n        while i <= n:\n            print(i, end=' ')\n            i *= 2\nfor _ in range(int(input())):\n    n = int(input())\n    print(2)\n    solve(n)\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    print(2)\n    vis = [False for i in range(n + 10)]\n    pri = ''\n    for i in range(1, n + 1):\n        if not vis[i]:\n            ind = i\n            while ind <= n:\n                pri += str(ind) + ' '\n                vis[ind] = True\n                ind *= 2\n    print(pri)", "for _ in range(int(input())):\n    n = int(input())\n    print(2)\n    z = [False for i in range(1, n + 10)]\n    l = ''\n    for i in range(1, n + 1):\n        if not z[i]:\n            j = i\n            while j < n + 1:\n                l += str(j) + ' '\n                z[j] = True\n                j *= 2\n    print(l)", "for _ in range(int(input())):\n    n = int(input())\n    a = []\n    for i in range(1, n + 1, 2):\n        while i <= n:\n            a.append(i)\n            i *= 2\n    print(2)\n    print(*a)", "for _ in range(int(input())):\n    n = int(input())\n    res = ''\n    gone = [0 for _ in range(n)]\n    for i in range(n):\n        if gone[i] == 0:\n            res += str(i + 1) + ' '\n            gone[i] = 1\n            now = 2 * (i + 1)\n            while now <= n:\n                res += str(now) + ' '\n                gone[now - 1] = 1\n                now *= 2\n    print('2')\n    print(res[:len(res) - 1])", "for _ in range(int(input())):\n    n = int(input())\n    print(2)\n    l = []\n    for i in range(1, n + 1, 2):\n        j = i\n        l.append(i)\n        while True:\n            j *= 2\n            if j <= n:\n                l.append(j)\n            else:\n                break\n    print(*l)", "def main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        print(2)\n        print(1, end=' ')\n        array = [True] * (n + 1)\n        for i in range(2, n + 1):\n            if array[i]:\n                tmp = i\n                while tmp <= n:\n                    print(tmp, end=' ')\n                    array[tmp] = False\n                    tmp *= 2\n        print()\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    for i in range(1, n + 1, 2):\n        while i <= n:\n            l.append(i)\n            i *= 2\n    print(2)\n    print(*l)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(2)\n    l = []\n    for i in range(1, n + 1, 2):\n        v = i\n        l.append(i)\n        while 2 * v <= n:\n            v = 2 * v\n            l.append(v)\n    print(*l)", "class Permutation:\n\n    def findCost(self, n):\n        d = 2\n        arr = []\n        for i in range(1, n // 2 + 1, 2):\n            j = i\n            while j <= n:\n                arr.append(j)\n                j *= d\n        for i in range(1, n + 1, 2):\n            if i > n // 2:\n                arr.append(i)\n        print(d)\n        for i in arr:\n            print(i, end=' ')\n        print()\n        return\nT = int(input())\nwhile T:\n    T -= 1\n    n = int(input())\n    Permutation().findCost(n)", "def permutation():\n    for _ in range(int(input())):\n        a = int(input())\n        odd = [2]\n        c = [1]\n        for i in range(2, a + 1):\n            if i % 2 == 1:\n                odd.append(i)\n        for i in range(len(odd)):\n            c.append(odd[i])\n            while True:\n                if c[-1] * 2 <= a:\n                    c.append(c[-1] * 2)\n                else:\n                    break\n        print(2)\n        print(*c)\npermutation()", "T = int(input())\nq = []\nfor i in range(T):\n    n = int(input())\n    q.append(n)\n\ndef solve(n):\n    print(2)\n    written = [False for _ in range(n + 1)]\n    for i in range(1, n + 1):\n        if written[i]:\n            continue\n        print(i, end=' ')\n        target = i * 2\n        while target <= n:\n            print(target, end=' ')\n            written[target] = True\n            target *= 2\n    print()\nfor n in q:\n    solve(n)", "for _ in range(int(input())):\n    n = int(input())\n    print(2)\n    ans = []\n    for i in range(1, n + 1, 2):\n        while i <= n:\n            ans.append(i)\n            i *= 2\n    print(*ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    print(2)\n    a = []\n    for x in range(1, 2 * (n // 2) + n % 2 + 2, 2):\n        s = x\n        while s <= n:\n            a.append(s)\n            s *= 2\n    print(*a)", "def ss(n):\n    a = []\n    d = [False] * (n + 1)\n    for i in range(1, n + 1):\n        if d[i] == False:\n            j = i\n            while j <= n:\n                if d[j] == False:\n                    a.append(j)\n                    d[j] = True\n                j = j * 2\n    return a\nfor _ in range(int(input())):\n    n = int(input())\n    a = ss(n)\n    print(2)\n    print(*a)", "for _ in range(int(input())):\n    n = int(input())\n    ans = []\n    i = 1\n    while i <= n:\n        j = i\n        while j <= n:\n            ans.append(j)\n            j *= 2\n        i += 2\n    print(2)\n    print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    print(2)\n    for i in range(1, n + 1, 2):\n        t = i\n        while t <= n:\n            print(t, end=' ')\n            t *= 2\n    print()", "t = int(input())\nfor i in range(t):\n    num = int(input())\n    print(2)\n    for i in range(1, num + 1, 2):\n        ans = i\n        while ans <= num:\n            print(ans, end=' ')\n            ans *= 2\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    print(2)\n    for i in range(1, n + 1, 2):\n        j = i\n        while j <= n:\n            print(j, end=' ')\n            j *= 2\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    print(2)\n    for i in range(1, n + 1, 2):\n        while i <= n:\n            print(i, end=' ')\n            i *= 2\n    print('\\n')", "t = int(input())\nD = []\nL = []\nfor i in range(t):\n    n = int(input())\n    l = []\n    for j in range(1, n + 1, 2):\n        pro = j\n        while pro < n + 1:\n            l.append(pro)\n            pro *= 2\n    L.append(l)\nfor k in range(t):\n    print(2)\n    print(*L[k])", "ans = []\nfor i in range(int(input())):\n    n = int(input())\n    d = 2\n    l = []\n    for i in range(1, (n + 1) // 2 + 1):\n        j = 2 * i - 1\n        l.append(j)\n        while d * j <= n:\n            l.append(d * j)\n            j = d * j\n    ans.append(l)\nfor i in ans:\n    print('2')\n    print(*i)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    print(2)\n    i = 1\n    while i * 2 <= n:\n        j = i\n        while j <= n:\n            print(j, end=' ')\n            j = j * 2\n        i += 2\n    for i in range(i, n + 1, 2):\n        print(i, end=' ')\n    print('')", "import heapq\nimport math\nimport string\nfrom collections import deque, Counter, defaultdict\n\ndef solve():\n    N = int(input())\n    if N == 2:\n        print(2)\n        print(1, 2)\n    else:\n        d = 2\n        res = []\n        for i in range(1, N + 1):\n            if i % 2 == 0:\n                continue\n            j = i\n            while j <= N:\n                res.append(j)\n                j *= 2\n        print(d)\n        print(*res)\nT = int(input())\nfor test_case in range(T):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    print(2)\n    for v in range(1, n + 1, 2):\n        k = v\n        while k <= n:\n            print(k, end=' ')\n            k *= 2\n    print()", "for t in range(int(input())):\n    n = int(input())\n    l = []\n    for z in range(1, n + 1):\n        if z % 2 == 1:\n            l.append(z)\n            while 2 * z <= n:\n                l.append(2 * z)\n                z *= 2\n    print(2)\n    print(*l)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    d = 2\n    print(str(d))\n    res = []\n    for i in range(1, n + 1):\n        if i % 2 != 0:\n            j = i\n            while j <= n:\n                res.append(j)\n                j = j * 2\n    print(*res)", "t = int(input())\nfor i in range(t):\n    num = int(input())\n    print(2)\n    for i in range(1, num + 1, 2):\n        ans = i\n        while ans <= num:\n            print(ans, end=' ')\n            ans *= 2\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    mass = []\n    print(2)\n    for i in range(1, n + 1, 2):\n        x = i\n        while x <= n:\n            print(x, end=' ')\n            x *= 2\n    print()", "t = int(input())\nfor i in range(t):\n    num = int(input())\n    print(2)\n    for i in range(1, num + 1, 2):\n        ans = i\n        while ans <= num:\n            print(ans, end=' ')\n            ans *= 2\n    print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    mas = []\n    for i in range(1, n + 1, 2):\n        j = i\n        while j <= n:\n            mas.append(j)\n            j *= 2\n    print(2)\n    print(*mas)", "t = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    print(2)\n    list1 = [1]\n    k = 1\n    while k * 2 <= n:\n        k = k * 2\n        list1.append(k)\n    for i in range(3, n + 1, 2):\n        k = i\n        while k <= n:\n            list1.append(k)\n            k = k * 2\n    print(*list1)", "y = int(input())\nfor i in range(y):\n    n = int(input())\n    d = 2\n    print(d)\n    for i in range(1, n + 1, d):\n        j = i\n        while j <= n:\n            print(j, end=' ')\n            j *= d\n    print('')", "for _ in range(int(input())):\n    n = int(input())\n    print(2)\n    for j in range(1, n + 1, 2):\n        t = j\n        while j < n + 1:\n            print(j, end=' ')\n            j *= 2\n    print('')", "for _ in range(int(input())):\n    n = int(input())\n    print(2)\n    for i in range(1, n + 1, 2):\n        k = i\n        while k <= n:\n            print(k, end=' ')\n            k *= 2\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    print(2)\n    arr = []\n    arr1 = [x for x in range(2, n + 1)]\n    for i in range(1, n + 1, 2):\n        j = i\n        while j <= n:\n            arr.append(j)\n            j = 2 * j\n    print(*arr)", "for _ in range(int(input())):\n    n = int(input())\n    print(2)\n    for i in range(1, n + 1, 2):\n        while i <= n:\n            print(i, end=' ')\n            i *= 2\n    print('', end='\\n')", "for _ in range(int(input())):\n    n = int(input())\n    print(2)\n    s = '1'\n    seen = set()\n    for i in range(2, n + 1):\n        if i not in seen:\n            s += ' ' + str(i)\n            seen.add(i)\n            j = i\n            while j * 2 <= n and j * 2 not in seen:\n                j *= 2\n                s += ' ' + str(j)\n                seen.add(j)\n    print(s)", "import sys\n\ndef ii():\n    return int(input())\n\ndef si():\n    return input()\n\ndef mi():\n    return map(int, input().strip().split(' '))\n\ndef msi():\n    return map(str, input().strip().split(' '))\n\ndef li():\n    return list(mi())\n\ndef read():\n    sys.stdin = open('input.txt', 'r')\n    sys.stout = open('output.txt', 'w')\n\ndef main():\n    for i in range(ii()):\n        n = ii()\n        a = [0] * (n + 1)\n        print(2)\n        for i in range(1, n + 1, 2):\n            if a[i] != 1:\n                print(i, end=' ')\n                k = i * 2\n                a[i] = 1\n                while k <= n:\n                    print(k, end=' ')\n                    a[k] = 1\n                    k *= 2\n            else:\n                continue\n        print('')\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    i = 1\n    print(2)\n    while i <= n:\n        j = i\n        while j <= n:\n            print(j, end=' ')\n            j *= 2\n        i += 2\n    print()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    res = [1]\n    checkPrime = [True] * (n + 1)\n    checkPrime[0] = False\n    checkPrime[1] = False\n    for i in range(n + 1):\n        if checkPrime[i] == True:\n            j = i\n            while j <= n:\n                res.append(j)\n                checkPrime[j] = False\n                j *= 2\n    print(2)\n    print(*res)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    ans = []\n    count = 0\n    j = 1\n    k = 1\n    while count < n:\n        k = j\n        while k <= n:\n            ans.append(k)\n            k *= 2\n            count += 1\n        j += 2\n    print('2')\n    print(*ans)", "for t in range(int(input())):\n    n = int(input())\n    print(2)\n    for v in range(1, n + 1, 2):\n        k = v\n        while k <= n:\n            print(k, end=' ')\n            k *= 2\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    arr = [True for _ in range(n + 1)]\n    arr[1] = True\n    ans = [1]\n    for i in range(2, n + 1):\n        t = i\n        if arr[t]:\n            while t <= n:\n                ans.append(t)\n                arr[t] = False\n                t *= 2\n    print(2)\n    print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    print(2)\n    ans = []\n    p = 1\n    while p <= n:\n        q = p\n        while q <= n:\n            ans.append(q)\n            q *= 2\n        p += 2\n    print(*ans)", "for i in range(int(input())):\n    a = int(input())\n    print(2)\n    b = [0] * (a + 1)\n    for j in range(1, a + 1):\n        if b[j] == 0:\n            d = j\n            while d <= a:\n                print(d, end=' ')\n                b[d] = 1\n                d *= 2\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    i = 1\n    print(2)\n    while i <= n:\n        j = i\n        while j <= n:\n            print(j, end=' ')\n            j *= 2\n        i += 2\n    print()", "t = int(input())\n\ndef solve(n):\n    arr = []\n    for i in range(1, n + 1, 2):\n        temp = []\n        x = i\n        while x <= n:\n            temp.append(x)\n            x = x * 2\n        for j in temp:\n            arr.append(j)\n    return arr\nwhile t > 0:\n    n = int(input())\n    print(2)\n    x = solve(n)\n    for i in x:\n        print(i, end=' ')\n    print()\n    t = t - 1", "for t in range(int(input())):\n    n = int(input())\n    a = [1] * (n + 1)\n    l = []\n    for i in range(1, n + 1):\n        if a[i]:\n            r = i\n            while r <= n:\n                l.append(r)\n                a[r] = 0\n                r = r << 1\n    print(2)\n    print(*l)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    z = [0] * (n + 1)\n    r = []\n    for i in range(1, n + 1):\n        if z[i] == 0:\n            j = i\n            while j <= n:\n                r.append(j)\n                z[j] = 1\n                j *= 2\n    print(2)\n    print(*r)", "for _ in range(int(input())):\n    d = 2\n    print(d)\n    n = int(input())\n    for i in range(1, n + 1, 2):\n        x = i\n        while x <= n:\n            print(x, end=' ')\n            x *= 2\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    i = 1\n    print(2)\n    while i <= n:\n        j = i\n        while j <= n:\n            print(j, end=' ')\n            j *= 2\n        i += 2\n    print()", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    ans = []\n    S = set()\n    for i in range(1, n + 1):\n        if i in S:\n            continue\n        num = i\n        while num <= n:\n            ans.append(num)\n            S.add(num)\n            num *= 2\n    print(2)\n    print(*ans)\nfor _ in range(int(input())):\n    solve()", "import random\nO = random.randint(1, 10 ** 5)\n\ndef main():\n    N = int(input())\n    for _ in range(N):\n        n = int(input())\n        arr = []\n        used = set()\n        for i in range(1, n + 1):\n            while i <= n:\n                if i + O in used:\n                    break\n                arr.append(i)\n                used.add(i + O)\n                i *= 2\n        print(2)\n        print(*arr)\n\ndef init():\n    import os\n    import sys\n    sys.setrecursionlimit(2 * 10 ** 6)\n    if 'CP_LOCAL_ENV' in os.environ:\n        sys.stdin = open('cf_test_b.txt')\ninit()\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(2)\n    for i in range(1, n + 1, 2):\n        temp = i\n        while temp <= n:\n            print(temp, end=' ')\n            temp *= 2\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    d = 2\n    lis = []\n    for i in range(1, n + 1, 2):\n        odd = i\n        while odd < n + 1:\n            lis.append(odd)\n            odd *= d\n    print(d)\n    print(*lis)", "for i in range(int(input())):\n    n = int(input())\n    print(2)\n    if n == 2:\n        print(1, 2)\n    elif n == 3:\n        print(1, 2, 3)\n    else:\n        x = 1\n        while True:\n            if x > n:\n                break\n            print(int(x), end=' ')\n            x *= 2\n        for i in range(3, n // 2 + 1, 2):\n            x = i\n            while x <= n:\n                print(int(x), end=' ')\n                x *= 2\n        for i in range(n // 2 + 1, n + 1):\n            if i % 2 == 1:\n                print(i, end=' ')\n        print()", "from collections import deque\n\ndef solve():\n    n = int(input())\n    isSet = [False] * (n + 1)\n    isSet[0] = True\n    queue = deque([])\n    for i in range(n, 0, -1):\n        if isSet[i] == False:\n            if i % 2 == 0:\n                x = i\n                while x:\n                    if isSet[x]:\n                        break\n                    isSet[x] = True\n                    queue.appendleft(x)\n                    if x % 2 == 0:\n                        x //= 2\n                    else:\n                        break\n            else:\n                isSet[i] = True\n                queue.appendleft(i)\n    print(2)\n    print(*queue)\nt = int(input())\nfor _ in range(t):\n    solve()", "import math\nt = int(input())\nfor z in range(t):\n    n = int(input())\n    print(2)\n    l = []\n    k = int(math.log2(n))\n    for i in range(k + 1):\n        print(2 ** i, end=' ')\n    for i in range(3, n + 1, 2):\n        j = i\n        while j <= n:\n            print(j, end=' ')\n            j = 2 * j\n    print()", "t = int(input())\nwhile t > 0:\n    print(2)\n    print()\n    a = 1\n    n = int(input())\n    for a in range(1, n + 1, 2):\n        while a <= n:\n            print(a, end=' ')\n            a = a * 2\n    t = t - 1\n    print()"]