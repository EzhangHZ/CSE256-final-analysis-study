["import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(1 << 30)\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef solve():\n    n = inp()\n    s = insr()\n    a = inlt()\n    ans = 0\n    idx = 0\n    while idx < n:\n        if s[idx] == '1':\n            ans += a[idx]\n            idx += 1\n        else:\n            c = a[idx]\n            total = c\n            idx += 1\n            while idx < n and s[idx] == '1':\n                c = min(c, a[idx])\n                total += a[idx]\n                idx += 1\n            ans += total - c\n    print(ans)\nfor _ in range(inp()):\n    solve()", "import sys\nimport sys, threading\nfrom heapq import heapify, heappop, heappush\nfrom math import log10, floor, pow, gcd, sqrt, inf\nfrom collections import defaultdict, deque\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef main():\n    tests = inp()\n    for test in range(tests):\n        numOfBoxes = inp()\n        lid = insr()\n        boxes = inlt()\n        lid.append('0')\n        boxes.append(0)\n        currTotal = 0\n        currMin = 0\n        for i in range(numOfBoxes + 1):\n            if lid[i] == '0':\n                currTotal = currTotal - currMin + boxes[i]\n                currMin = boxes[i]\n            else:\n                currTotal += boxes[i]\n                currMin = min(currMin, boxes[i])\n        print(currTotal)\nmain()", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    lid = input().strip()\n    arr = list(map(int, input().split()))\n    dp = [0, 0]\n    if lid[-1] == '1':\n        dp = [0, arr[-1]]\n    for i in range(n - 2, -1, -1):\n        if lid[i] == '0':\n            if lid[i + 1] == '1':\n                dp = [max(dp[0] + arr[i], dp[1]), 0]\n            else:\n                dp = [max(dp), 0]\n        elif lid[i + 1] == '1':\n            dp = [max(arr[i] + dp[0], dp[1]), dp[1] + arr[i]]\n        else:\n            dp = [dp[0], dp[0] + arr[i]]\n    return max(dp)\nfor _ in range(int(input())):\n    print(solve())", "def continuous(judge, magazines):\n    o = judge.count('0')\n    if o == 0:\n        return sum(magazines)\n    elif o == n:\n        return 0\n    sum_ = 0\n    if judge.index('0') > judge.index('1'):\n        sum_ += sum(magazines[:judge.index('0')])\n    for i in range(n - 1):\n        if judge[i] == '0' and judge[i + 1] == '1':\n            l = i\n            for j in range(i + 1, n):\n                if judge[j] == '0':\n                    r = j - 1\n                    break\n            else:\n                r = n\n            sum_ += sum(magazines[l:r + 1]) - min(magazines[l:r + 1])\n    return sum_\nimport sys\ninput = sys.stdin.readline\nt = int(input())\nindex = 0\nfor _ in range(t):\n    n = int(input())\n    judge = list(input())\n    magazines = list(map(int, input().split()))\n    print(continuous(judge, magazines))", "def Pass(arr, ld):\n    while True:\n        for i in range(1, len(ld)):\n            if ld[i - 1] == '0' and ld[i] == '1':\n                temp_i = i\n                min_i = i - 1\n                MIN = arr[i - 1]\n                while temp_i < len(ld) and ld[temp_i] == '1':\n                    if arr[temp_i] < MIN:\n                        MIN = arr[temp_i]\n                        min_i = temp_i\n                    temp_i += 1\n                if min_i != i - 1:\n                    for k in range(i - 1, min_i):\n                        ld[k] = '1'\n                    ld[min_i] = '0'\n        else:\n            break\n    SUM = 0\n    for (l, x) in zip(ld, arr):\n        if l == '1':\n            SUM += x\n    return SUM\nOUTPUT = []\nfor _ in range(int(input())):\n    N = int(input())\n    ld = list(input())\n    arr = [int(x) for x in input().split()]\n    OUTPUT.append(Pass(arr, ld))\nfor _ in OUTPUT:\n    print(_)", "for _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    a = list(map(int, input().split()))\n    j = n\n    count = 0\n    for i in range(n):\n        if s[i] != '1':\n            j = i\n            break\n        count += a[i]\n    if j != n:\n        x = a[j]\n    for i in range(j + 1, n):\n        if s[i] == '1':\n            if x > a[i]:\n                count += x\n                x = a[i]\n            else:\n                count += a[i]\n        else:\n            x = a[i]\n    print(count)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    open = input()\n    numbers = list(map(int, input().split()))\n    var = 0\n    answer = 0\n    index = 0\n    for i in range(N):\n        if open[i] == '0':\n            var = numbers[i]\n            index = i\n        elif var > numbers[i]:\n            answer += var\n            var = numbers[i]\n        else:\n            answer += numbers[i]\n    print(answer)", "def magazine(n, string, mylist):\n    result = 0\n    tmp = 0\n    for i in range(n):\n        if string[i] == '1':\n            result += max(mylist[i], tmp)\n        if string[i] == '0' or mylist[i] < tmp:\n            tmp = mylist[i]\n    return result\nnumbers = int(input())\nfor i in range(numbers):\n    n = int(input())\n    string = input()\n    mylist = list(map(int, input().split()))\n    print(magazine(n, string, mylist))", "def mainFunc():\n    n = int(input())\n    lidState = input()\n    lidState = '0' + lidState\n    boxContents = [0] + list(map(int, input().split()))\n    ans = 0\n    i = 0\n    while i <= n:\n        mn = boxContents[i]\n        sm = boxContents[i]\n        j = i + 1\n        while j <= n and lidState[j] == '1':\n            mn = min(mn, boxContents[j])\n            sm += boxContents[j]\n            j += 1\n        ans += sm - mn\n        i = j\n    print(ans)\nt = int(input())\nfor testcase in range(t):\n    mainFunc()", "def solve():\n    n = int(input())\n    s = '0' + input()\n    arr = [0] + list(map(int, input().split()))\n    x = 0\n    ans = 0\n    while x <= n:\n        j = x + 1\n        mn = arr[x]\n        sm = arr[x]\n        while j <= n and s[j] == '1':\n            mn = min(arr[j], mn)\n            sm += arr[j]\n            j += 1\n        sm -= mn\n        ans += sm\n        x = j\n    print(ans)\nt = int(input())\nfor i in range(t):\n    solve()", "def solve():\n    n = int(input())\n    s = list(input())\n    arr = [int(i) for i in input().split()]\n    j = -1\n    for i in range(n):\n        if s[i] == '0':\n            j = i\n        elif j >= 0 and arr[i] < arr[j]:\n            (s[j], s[i]) = (s[i], s[j])\n            j = i\n    ans = 0\n    for x in range(n):\n        if s[x] == '1':\n            ans += arr[x]\n    print(ans)\ntst = int(input())\nfor i in range(tst):\n    solve()", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    s = input().strip()\n    a = list(map(int, input().split()))\n    if s.count('1') == n:\n        print(sum(a))\n        continue\n    ans = 0\n    i = 0\n    j = 1\n    while i < n and s[i] == '1':\n        i += 1\n    ans += sum(a[:i])\n    j = i + 1\n    while j < n and i < n:\n        if s[j] == '0':\n            ans += max(0, sum(a[i:j]) - min(a[i:j]))\n            i = j\n        j += 1\n    if i < n and s[-1] == '1':\n        ans += max(0, sum(a[i:]) - min(a[i:]))\n    print(ans)", "def fun(l, arr, n):\n    sum = 0\n    i = n - 1\n    while i > 0:\n        if arr[i] == '1':\n            a = i\n            mini = l[a]\n            d = a\n            while i > 0 and arr[i] == '1':\n                if l[i] < mini:\n                    mini = l[i]\n                    d = i\n                i = i - 1\n            if i == 0:\n                if arr[i] == '1':\n                    break\n            if mini < l[i]:\n                arr[i] = '1'\n                arr[d] = '0'\n        i = i - 1\n    for j in range(n):\n        if arr[j] == '1':\n            sum = sum + l[j]\n    print(sum)\nt = int(input())\nfor k in range(t):\n    n = int(input())\n    arr = []\n    s = input()\n    l = list(map(int, input().split()))\n    for i in range(n):\n        arr.append(s[i])\n    fun(l, arr, n)", "def solve1(n, arr, b):\n    (res, l) = [0, -2147483647]\n    for i in range(0, n):\n        if arr[i] == '1':\n            res += max(b[i], l)\n        if arr[i] == '0' or b[i] < l:\n            l = b[i]\n    print(res)\nfor t in range(int(input())):\n    n = int(input())\n    s = [i for i in input()]\n    a = [int(i) for i in input().split()]\n    solve1(n, s, a)\n    while None:\n        pass\n    while 1:\n        break", "def saveTheMagazines(tab, indexes, a1, j, n):\n    j += 1\n    sum = 0\n    min = tab[j]\n    for i in range(j, n):\n        if indexes[i] == '0':\n            return [i, max(sum + a1 - min, sum)]\n        else:\n            sum += tab[i]\n            if min > tab[i]:\n                min = tab[i]\n    return [n, max(sum + a1 - min, sum)]\nt = int(input())\nresult = []\nfor i in range(t):\n    n = int(input())\n    indexes = list(input())\n    tab = list(map(int, input().split(' ')))\n    sum = 0\n    j = 0\n    if (n == 1) & (indexes[0] == '1'):\n        result.append(tab[0])\n    else:\n        while j < n - 1:\n            if (indexes[j] == '0') & (indexes[j + 1] == '1'):\n                res = saveTheMagazines(tab, indexes, tab[j], j, n)\n                j = res[0]\n                sum += res[1]\n            elif indexes[j] == '1':\n                sum += tab[j]\n                j += 1\n            else:\n                j += 1\n        if (j == n - 1) & (indexes[-1] == '1'):\n            sum += tab[-1]\n        result.append(sum)\nfor i in result:\n    print(i)", "t = int(input())\nfor t1 in range(t):\n    n = int(input())\n    lid = input()\n    mag = list(map(int, input().split()))\n    i = 0\n    sum = 0\n    while i < n and lid[i] == '1':\n        sum += mag[i]\n        i += 1\n    while i < n and lid[i] == '0':\n        while i + 1 < n and lid[i + 1] == '0':\n            i += 1\n        if i + 1 == n:\n            break\n        min = mag[i]\n        csum = mag[i]\n        i += 1\n        while i < n and lid[i] == '1':\n            if min > mag[i]:\n                min = mag[i]\n            csum += mag[i]\n            i += 1\n        sum += csum - min\n    print(sum)", "import sys\nfrom collections import *\nsys.setrecursionlimit(10 ** 5)\nitr = (line for line in sys.stdin.read().strip().split('\\n'))\nINP = lambda : next(itr)\n\ndef ni():\n    return int(INP())\n\ndef nl():\n    return [int(_) for _ in INP().split()]\n\ndef solve(n, a, s):\n    s = list(map(int, list(s)))\n    tot = 0\n    i = 0\n    l = 0\n    (curS, curM) = (0, 1000000000.0)\n    segs = []\n    streak = False\n    for i in range(n):\n        if s[i] == 1:\n            if not streak:\n                l = i\n            streak = True\n        if s[i] == 0 and streak:\n            segs.append([l, i - 1])\n            streak = False\n    if streak:\n        segs.append([l, n - 1])\n    for (x, y) in segs:\n        if x == 0:\n            for i in range(x, y + 1):\n                tot += a[i]\n        else:\n            m = 1000000000.0\n            for i in range(x - 1, y + 1):\n                tot += a[i]\n                m = min(m, a[i])\n            tot -= m\n    print(tot)\nt = ni()\nfor case in range(t):\n    n = ni()\n    s = INP()\n    a = nl()\n    solve(n, a, s)", "import os\nimport math\nimport collections\nimport bisect\nimport functools\nimport itertools\nimport heapq\n\ndef solve(a, b, n):\n    pre = [0] * (n + 1)\n    for i in range(n):\n        pre[i + 1] = pre[i] + a[i]\n    b += '0'\n    a += [0]\n    i = -1\n    ans = 0\n    for j in range(n + 1):\n        if b[j] == '0':\n            if i > -1:\n                if i == 0:\n                    ans += pre[j]\n                else:\n                    m = min(a[i - 1:j])\n                    ans += pre[j] - pre[i - 1] - m\n            i = -1\n            continue\n        elif i == -1:\n            i = j\n    return ans\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    b = input()\n    a = list(map(int, input().split()))\n    print(solve(a, b, n))", "def solution():\n    n = int(input())\n    covers = '0' + input()\n    a = [0] + [int(num) for num in input().split()]\n    minimum = a[0]\n    ones = False\n    s = 0\n    ans = 0\n    for i in range(1, n + 1):\n        if not ones:\n            if covers[i] == '0':\n                minimum = a[i]\n                s = a[i]\n            else:\n                ones = True\n                minimum = min(minimum, a[i])\n                s += a[i]\n        elif covers[i] == '0':\n            ones = False\n            ans += s - minimum\n            minimum = a[i]\n            s = a[i]\n        else:\n            minimum = min(minimum, a[i])\n            s += a[i]\n    if covers[-1] == '1':\n        ans += s - minimum\n    print(ans)\n\ndef main():\n    t = int(input())\n    while t:\n        solution()\n        t -= 1\nmain()", "from collections import Counter\nimport heapq\n\ndef solve():\n    N = int(input())\n    s = input()\n    nums = [*map(int, input().split())]\n    res = 0\n    low = 0\n    indx = [0] * N\n    while low < N and s[low] == '1':\n        res += nums[low]\n        low += 1\n    while low < N:\n        h = []\n        if low < N and s[low] == '0':\n            low += 1\n            continue\n        else:\n            heapq.heappush(h, -nums[low - 1])\n            while low < N and s[low] == '1':\n                heapq.heappush(h, -nums[low])\n                res += abs(heapq.heappop(h))\n                low += 1\n    print(res)\n\ndef solution():\n    t = int(input())\n    for _ in range(t):\n        solve()\nsolution()", "def solve(A, s):\n    v = []\n    j = 0\n    res = 0\n    while j < len(A) and s[j] == '1':\n        res += A[j]\n        j += 1\n    for i in range(j, len(A)):\n        if s[i] == '0':\n            if len(v):\n                v.sort()\n                res += sum(v[1:])\n                v = []\n            if i + 1 < len(A) and s[i + 1] == '1':\n                v.append(A[i])\n        elif s[i] == '1':\n            v.append(A[i])\n    if v:\n        v.sort()\n        res += sum(v[1:])\n    return res\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        s = input()\n        A = list(map(int, input().split()))\n        print(solve(A, s))\nmain()", "from collections import deque\nfrom math import inf\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        (*covered,) = map(int, list(input()))\n        (*magazines,) = map(int, input().split())\n        ans = 0\n        i = 0\n        while i <= n - 1:\n            partial = 0\n            mini = inf\n            if covered[i]:\n                ans += magazines[i]\n                i += 1\n            elif i < n - 1 and covered[i + 1]:\n                partial += magazines[i]\n                mini = magazines[i]\n                j = i + 1\n                while j < n and covered[j]:\n                    partial += magazines[j]\n                    mini = min(mini, magazines[j])\n                    j += 1\n                ans += partial - mini\n                i = j\n            else:\n                i += 1\n        print(ans)\nmain()", "I = input\nfor _ in [0] * int(I()):\n    I()\n    f = ('0' + I() + '0').find\n    a = (0, *map(int, I().split()))\n    i = j = r = 0\n    while (i := f('01', j)) + 1:\n        j = f('10', i)\n        r += sum((b := a[i:j + 1])) - min(b)\n    print(r)", "for _ in range(int(input())):\n    n = int(input())\n    c = input()\n    a = list(map(int, input().split()))\n    (s, i) = (0, 0)\n    while i < n:\n        if c[i] == '1':\n            s += a[i]\n            i += 1\n            continue\n        if i == n - 1:\n            break\n        if c[i + 1] == '1':\n            (m, t) = (a[i], a[i])\n            j = i + 1\n            while j < n and c[j] == '1':\n                m = min(m, a[j])\n                t += a[j]\n                j += 1\n            s += t - m\n            i = j\n        else:\n            i += 1\n    print(s)", "def solve1(n1, arr, b):\n    (res, l) = [0, -2147483647]\n    for i in range(0, n1):\n        if arr[i] == '1':\n            res += max(b[i], l)\n        if arr[i] == '0' or b[i] < l:\n            l = b[i]\n    print(res)\nfor i in range(int(input())):\n    n1 = int(input())\n    s = list(map(str, input()))\n    l1 = list(map(int, input().split()))\n    solve1(n1, s, l1)\n    while None:\n        pass\n    while 1:\n        break", "def get_swap_snippet(roofs: list, start: int):\n    left = 0\n    right = 0\n    try:\n        first_roof = roofs.index('1', start)\n    except ValueError:\n        return -1\n    if left != first_roof:\n        left = first_roof - 1\n    try:\n        right = roofs.index('0', first_roof + 1)\n    except ValueError:\n        right = len(roofs)\n    return (left, right)\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        roofs = list(input())\n        books = list(map(int, input().split()))\n        general_sum = 0\n        snippet = get_swap_snippet(roofs, 0)\n        while snippet != -1:\n            (left, right) = snippet\n            general_sum += sum(books[left:right])\n            if roofs[left] == '0':\n                general_sum -= min(books[left:right])\n            snippet = get_swap_snippet(roofs, right)\n        print(general_sum)\nmain()", "import bisect\nimport heapq\nfrom collections import defaultdict, deque\nfrom email import header\nfrom functools import lru_cache\nfrom sys import stdin, stdout\nimport math\nimport sys\ninput = stdin.readline\n\ndef ii():\n    return int(input())\n\ndef lii():\n    return list(map(int, stdin.readline().split()))\n\ndef ss():\n    x = stdin.readline()\n    if x[-1] == '\\n':\n        return x[:-1]\n    return x\n\ndef lss():\n    return list(map(str, stdin.readline().split()))\n\ndef llss():\n    return [i for i in ss()]\n\ndef yes():\n    stdout.write('YES\\n')\n\ndef no():\n    stdout.write('NO\\n')\nfor _ in range(ii()):\n    n = ii()\n    s = ss()\n    a = lii()\n    res = 0\n    i = 0\n    while i < n:\n        if s[i] == '1':\n            curr = 0 if i == 0 else a[i - 1]\n            j = i\n            sm = 0 if i == 0 else a[i - 1]\n            while j < n and s[j] == '1':\n                sm += a[j]\n                curr = min(curr, a[j])\n                j += 1\n            res += sm - curr\n            i = j\n        else:\n            i += 1\n    print(res)", "p = int(input())\nfor i in range(0, p):\n    n = int(input())\n    lid = list(input())\n    a = list(map(int, input().split()))\n    s = 0\n    j = 0\n    fz = False\n    while j < n:\n        if lid[j] == '1':\n            s = s + a[j]\n            j = j + 1\n        else:\n            fz = True\n            break\n    if not fz:\n        print(s)\n    else:\n        while j < n:\n            while j < n and lid[j] == '0':\n                j = j + 1\n            s = a[j - 1] + s\n            minn = a[j - 1]\n            while j < n and lid[j] == '1':\n                s = s + a[j]\n                minn = min(minn, a[j])\n                j = j + 1\n            s = s - minn\n        print(s)", "for cases in range(int(input())):\n    n = int(input())\n    lid = list(input())\n    box_ls = list(map(int, input().split()))\n    max_num = 0\n    if n == 0:\n        print(0)\n        continue\n    j = 0\n    while lid[j] != '0':\n        max_num += box_ls[j]\n        if j == n - 1:\n            break\n        j += 1\n    p = n - 1\n    while lid[p] != '1':\n        if p == 0:\n            break\n        p -= 1\n    k = p + 1\n    for i in range(p, j - 1, -1):\n        if lid[i] == '0':\n            max_num += sum(box_ls[i:k]) - min(box_ls[i:k])\n            k = i\n    print(max_num)", "def print_mag(length, lids, magazines):\n    sum = 0\n    last_zero = -1\n    min = 1000000000\n    for i in range(length + 1):\n        if i == length or lids[i] == 0:\n            if last_zero != -1 and last_zero != i - 1:\n                if magazines[last_zero] > min:\n                    sum += magazines[last_zero]\n                    sum -= min\n            last_zero = i\n            min = 100000000\n        elif lids[i] == 1:\n            if min > magazines[i]:\n                min = magazines[i]\n            sum += magazines[i]\n    print(sum)\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        length = int(input())\n        lids = [int(num) for num in input()]\n        magazines = [int(num) for num in input().split()]\n        print_mag(length, lids, magazines)\nmain()", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    lids = input()\n    l = list(map(int, input().split()))\n    (i, check, min1) = (0, 0, 1000000)\n    cnt = 0\n    while i < n:\n        while lids[i] == '1':\n            cnt += l[i]\n            min1 = min(min1, l[i])\n            i += 1\n            if i >= n:\n                break\n        if check == 1 and a > min1:\n            cnt = cnt + a - min1\n        min1 = 1000000\n        if i < n:\n            a = l[i]\n            check = 1\n            i += 1\n    print(cnt)", "def one():\n    n = int(input())\n    s = input()\n    a = list(map(int, input().split()))\n    p = [0]\n    for e in a:\n        p.append(p[-1] + e)\n    c = 0\n    i = 0\n    while i < n:\n        if s[i] == '0':\n            i += 1\n        else:\n            j = i\n            while i < n and s[i] == '1':\n                i += 1\n            if j > 0:\n                c += p[i] - p[j - 1] - min(a[j - 1:i])\n            else:\n                c += p[i]\n    print(c)\nt = int(input())\nfor i in range(t):\n    one()", "t = int(input())\nfor t0 in range(t):\n    c = int(input())\n    s = input() + '0'\n    a = list(map(int, input().split(' ')))\n    a.append(0)\n    pov = 0\n    mn = 200001\n    pvind = 0\n    mnind = 0\n    for i in range(c + 1):\n        if s[i] == '0':\n            if mn != 200001:\n                if mn < pov:\n                    a[mnind] = pov\n                    a[pvind] = mn\n                mn = 200001\n            pov = a[i]\n            pvind = i\n        elif a[i] < mn:\n            mn = a[i]\n            mnind = i\n    sum = 0\n    for i in range(c):\n        if s[i] == '1':\n            sum += a[i]\n    print(sum)", "import math\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    s = input()\n    a = list(map(int, input().split()))\n    ct = 0\n    i = n - 1\n    while i >= 0:\n        max = int(1000000000.0)\n        if s[i] == '1':\n            while i >= 0 and s[i] == '1':\n                if a[i] < max:\n                    max = a[i]\n                ct += a[i]\n                i -= 1\n            if i >= 0 and max < a[i]:\n                ct += a[i] - max\n        else:\n            i -= 1\n    print(ct)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    arr = list(map(int, input().split()))\n    res = 0\n    res2 = 0\n    for i in range(n):\n        if s[i] == '1':\n            res += max(arr[i], res2)\n        if s[i] == '0' or arr[i] < res2:\n            res2 = arr[i]\n    print(res)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = input()\n    arr = list(map(int, input().split()))\n    res = 0\n    res2 = 0\n    for i in range(n):\n        if a[i] == '1':\n            res += max(arr[i], res2)\n        if a[i] == '0' or arr[i] < res2:\n            res2 = arr[i]\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    ld = list(input())\n    a = list(map(int, input().split()))\n    s = 0\n    m = -1\n    for i in range(1, n + 1):\n        if ld[-i] == '1':\n            s += a[-i]\n            if a[-i] < m or m == -1:\n                m = a[-i]\n        else:\n            if m > -1:\n                s += a[-i]\n                if a[-i] < m:\n                    m = a[-i]\n                s -= m\n            m = -1\n    print(s)", "import re\nI = input\nfor _ in [0] * int(I()):\n    I()\n    s = '0' + I()\n    a = (0, *map(int, I().split()))\n    r = 0\n    for m in re.finditer('01+', s):\n        (s, e) = m.span()\n        r += sum((b := a[s:e])) - min(b)\n    print(r)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    a = list(map(int, input().split()))\n    i = 0\n    sm = 0\n    while i < n:\n        sm += a[i]\n        if s[i] == '0':\n            mn = a[i]\n            i += 1\n            while i < n and s[i] != '0':\n                mn = min(mn, a[i])\n                sm += a[i]\n                i += 1\n            sm -= mn\n        else:\n            i += 1\n    print(sm)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    l = list(map(int, input().split()))\n    (maxi, li) = [0, -2147483647]\n    for i in range(0, n):\n        if s[i] == '1':\n            maxi += max(l[i], li)\n        if s[i] == '0' or l[i] < li:\n            li = l[i]\n    print(maxi)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    a = list(map(int, input().split()))\n    (t, l) = [0, -2147483647]\n    for i in range(0, n):\n        if s[i] == '1':\n            t += max(a[i], l)\n        if s[i] == '0' or a[i] < l:\n            l = a[i]\n    print(t)", "for _ in range(int(input())):\n    n = int(input())\n    string = '0' + input()\n    arr = [0] + list(map(int, input().split()))\n    ans = 0\n    i = 0\n    while i <= n:\n        mn = arr[i]\n        sm = arr[i]\n        j = i + 1\n        while j <= n and string[j] == '1':\n            mn = min(mn, arr[j])\n            sm += arr[j]\n            j += 1\n        ans += sm - mn\n        i = j\n    print(ans)", "T = int(input())\nfor tc in range(T):\n    k = int(input())\n    s = input()\n    l1 = list(map(int, input().split()))\n    a = b = 0\n    for i in range(0, k):\n        if s[i] == '1':\n            a += max(l1[i], b)\n        if s[i] == '0' or l1[i] < b:\n            b = l1[i]\n    print(a)", "for _ in range(int(input())):\n    n = int(input())\n    s = '0' + input()\n    a = [0] + list(map(int, input().split()))\n    ans = 0\n    i = 0\n    while i <= n:\n        minimum = a[i]\n        ans += a[i]\n        j = i + 1\n        while j <= n and s[j] == '1':\n            minimum = min(minimum, a[j])\n            ans += a[j]\n            j += 1\n        ans -= minimum\n        i = j\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    b = input()\n    a = [int(x) for x in input().split()]\n    ans = 0\n    for j in range(n):\n        if b[j] == '1':\n            ans += a[j]\n        else:\n            break\n    if j == n - 1:\n        print(ans)\n    else:\n        for i in range(j, n - 1):\n            if b[i] == '0' and b[i + 1] == '1':\n                don = a[i]\n                ans += don\n                small = don\n            if b[i] == '1':\n                ans += a[i]\n                if a[i] < small:\n                    small = a[i]\n            if b[i] == '1' and b[i + 1] == '0':\n                ans -= small\n        if b[-1] == '1':\n            ans += a[-1]\n            if small > a[-1]:\n                small = a[-1]\n            ans -= small\n        print(ans)", "I = input\nfor _ in [0] * int(I()):\n    I()\n    r = p = 0\n    for (c, x) in zip(I(), map(int, I().split())):\n        r += (c > '0') * max(p, x)\n        p = (p, x)[c < '1' or x < p]\n    print(r)", "for _ in range(int(input())):\n    name = int(input())\n    s = input()\n    l = list(map(int, input().split()))\n    (maxi, li) = [0, -2147483647]\n    for i in range(0, name):\n        if s[i] == '1':\n            maxi += max(l[i], li)\n        if s[i] == '0' or l[i] < li:\n            li = l[i]\n    print(maxi)", "def continuous(judge, magazines):\n    o = judge.count('0')\n    if o == 0:\n        return sum(magazines)\n    elif o == n:\n        return 0\n    sum_ = 0\n    if judge.index('0') > judge.index('1'):\n        sum_ += sum(magazines[:judge.index('0')])\n    for i in range(n - 1):\n        if judge[i] == '0' and judge[i + 1] == '1':\n            l = i\n            for j in range(i + 1, n):\n                if judge[j] == '0':\n                    r = j - 1\n                    break\n            else:\n                r = n\n            sum_ += sum(magazines[l:r + 1]) - min(magazines[l:r + 1])\n    return sum_\nt = int(input())\nindex = 0\nfor _ in range(t):\n    n = int(input())\n    judge = list(input())\n    magazines = list(map(int, input().split()))\n    print(continuous(judge, magazines))", "Ia = input\nfor _ in [0] * int(Ia()):\n    Ia()\n    r = p = 0\n    for (c, x) in zip(Ia(), map(int, Ia().split())):\n        r += (c > '0') * max(p, x)\n        p = (p, x)[c < '1' or x < p]\n    print(r)", "n = int(input())\n\ndef maxSave(n):\n    for i in range(n):\n        m = int(input())\n        lids = list(str(input()))\n        arr = list(map(int, input().split()))\n        (total, i) = (0, 0)\n        while i < m and lids[i] == '1':\n            total += arr[i]\n            i += 1\n        while i < m:\n            sum = arr[i]\n            j = i + 1\n            while j < m and lids[j] == '1':\n                sum += arr[j]\n                j += 1\n            maxi = 0\n            for k in range(i, j):\n                maxi = max(maxi, sum - arr[k])\n            total += maxi\n            i = j\n        print(total)\nmaxSave(n)", "import re\nI = input\nfor _ in [0] * int(I()):\n    I()\n    s = '0' + I()\n    a = (0, *map(int, I().split()))\n    r = 0\n    for m in re.finditer('01+', s):\n        (s, e) = m.span()\n        r += sum((b := a[s:e])) - min(b)\n    print(r)", "for _ in range(int(input())):\n    t = int(input())\n    s = input()\n    l = list(map(int, input().split()))\n    a = b = 0\n    for i in range(0, t):\n        if s[i] == '1':\n            a += max(l[i], b)\n        if s[i] == '0' or l[i] < b:\n            b = l[i]\n    print(a)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    mas = list(map(int, input().split()))\n    ans = 0\n    prom = 0\n    for i in range(n):\n        if s[i] == '1':\n            ans += max(prom, mas[i])\n        if s[i] == '0' or mas[i] < prom:\n            prom = mas[i]\n    print(ans)", "I = input\nfor _ in [0] * int(I()):\n    I()\n    r = p = 0\n    for (c, x) in zip(I(), map(int, I().split())):\n        r += (c > '0') * max(p, x)\n        p = (p, x)[c < '1' or x < p]\n    print(r)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    a = [int(j) for j in input().split()]\n    b = 0\n    c = -1\n    for i in range(n):\n        if s[i] == '1':\n            b += max(a[i], c)\n        if s[i] == '0' or a[i] < c:\n            c = a[i]\n    print(b)", "t = int(input())\nans_l = []\nfor _ in range(t):\n    n = int(input())\n    boxs = [int(x) for x in input()]\n    magas = [int(x) for x in input().split()]\n    if n == 1:\n        ans_l.append(boxs[0] * magas[0])\n    else:\n        ans = 0\n        for i in range(n - 1):\n            if boxs[i] == 0 and boxs[i + 1] == 1:\n                j = i + 1\n                mn = magas[i]\n                c = i\n                flag = False\n                if magas[i + 1] < mn:\n                    flag = True\n                    c = i + 1\n                    mn = magas[i + 1]\n                while j < n - 1:\n                    if boxs[j + 1] == 1:\n                        j += 1\n                    else:\n                        break\n                    if magas[j] < mn:\n                        mn = magas[j]\n                        flag = True\n                        c = j\n                if flag:\n                    boxs[c] = 0\n                    ans += magas[i]\n            elif boxs[i] == 1:\n                ans += magas[i]\n        if boxs[n - 1] == 1:\n            ans += magas[n - 1]\n        ans_l.append(ans)\nfor _ in range(t):\n    print(ans_l[_])", "for _ in range(int(input())):\n    n = int(input())\n    s = '0' + input()\n    a = [0] + list(map(int, input().split()))\n    answer = 0\n    i = 0\n    while i <= n:\n        mn = a[i]\n        sm = a[i]\n        j = i + 1\n        while j <= n and s[j] == '1':\n            mn = min(mn, a[j])\n            sm += a[j]\n            j += 1\n        answer += sm - mn\n        i = j\n    print(answer)", "for _ in range(int(input())):\n    n = int(input())\n    s = '0' + input()\n    a = [0] + list(map(int, input().split()))\n    ans = 0\n    i = 0\n    while i <= n:\n        mn = a[i]\n        sm = a[i]\n        j = i + 1\n        while j <= n and s[j] == '1':\n            mn = min(mn, a[j])\n            sm += a[j]\n            j += 1\n        ans += sm - mn\n        i = j\n    print(ans)", "I = input\nfor _ in [0] * int(I()):\n    I()\n    r = p = 0\n    for (c, x) in zip(I(), map(int, I().split())):\n        r += (c > '0') * max(p, x)\n        p = (p, x)[c < '1' or x < p]\n    print(r)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    a = list(map(int, input().split()))\n    s = list(s)\n    count = 0\n    i = 0\n    sum = 0\n    min1 = 0\n    while i < n:\n        if s[i] == '0':\n            count += sum - min1\n            sum = a[i]\n            min1 = a[i]\n        else:\n            sum += a[i]\n            min1 = min(a[i], min1)\n        i += 1\n    if s[-1] == '1':\n        count += sum - min1\n    print(count)", "k = int(input())\nfor m in range(k):\n    n = int(input())\n    s = input()\n    a = list(map(int, input().split(' ')))\n    minn = float('inf')\n    ans = 0\n    f = 0\n    for i in range(n - 1, -1, -1):\n        if s[i] == '1':\n            f = 1\n            minn = min(minn, a[i])\n            ans += a[i]\n        elif f == 1:\n            if a[i] > minn:\n                ans += a[i] - minn\n            f = 0\n            minn = float('inf')\n    print(ans)", "for _ in range(int(input())):\n    a = int(input())\n    b = input()\n    c = list(map(int, input().split()))\n    (X, p) = [0, -0]\n    for i in range(0, a):\n        if b[i] == '1':\n            X += max(c[i], p)\n        if b[i] == '0' or c[i] < p:\n            p = c[i]\n    print(X)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    l = list(map(int, input().split()))\n    (maxi, li) = [0, -2147483647]\n    for i in range(0, n):\n        if s[i] == '1':\n            maxi += max(l[i], li)\n        if s[i] == '0' or l[i] < li:\n            li = l[i]\n    print(maxi)", "tst = int(input())\nwhile tst > 0:\n    no = int(input())\n    ssr = input()\n    mp = map(int, input().split())\n    arr = list(mp)\n    (f, p) = [0, -2147483647]\n    for a in range(0, no):\n        if ssr[a] == '1':\n            f += max(arr[a], p)\n        if ssr[a] == '0' or arr[a] < p:\n            p = arr[a]\n    print(f)\n    tst = tst - 1", "def main():\n    t = int(input())\n\n    def sol(lid, val, n):\n        if n == 1 and lid[0] == '0':\n            return 0\n        elif n == 1:\n            return val[0]\n        s = 0\n        i = 0\n        while i < n - 1:\n            if lid[i] == '0':\n                j = i + 1\n                mi = float('inf')\n                while j < n and lid[j] == '1':\n                    s += val[j]\n                    mi = min(mi, val[j])\n                    j += 1\n                if mi != float('inf') and mi < val[i]:\n                    s -= mi\n                    s += val[i]\n                i = j\n            else:\n                s += val[i]\n                i += 1\n        if i == n - 1 and lid[i] == '1':\n            s += val[i]\n        return s\n    for _ in range(t):\n        n = int(input())\n        lid = input()\n        val = input().split()\n        val = [int(val[i]) for i in range(n)]\n        res = sol(lid, val, n)\n        print(res)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    a = list(map(int, input().split()))\n    (res, ans) = (0, 0)\n    for i in range(n):\n        if s[i] == '1':\n            res += max(a[i], ans)\n        if s[i] == '0' or a[i] < ans:\n            ans = a[i]\n    print(res)", "t = int(input())\nfor z in range(t):\n    n = int(input())\n    s = input()\n    l = list(map(int, input().split()))\n    c = []\n    sum = 0\n    for i in range(n - 1, -1, -1):\n        if s[i] == '1':\n            c.append(l[i])\n        elif s[i] == '0' and len(c) > 0:\n            c.append(l[i])\n            c.sort()\n            for j in range(1, len(c)):\n                sum += c[j]\n            c = []\n        if i == 0:\n            for j in range(len(c)):\n                sum += c[j]\n    print(sum)", "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input()))\n    a = list(map(int, input().split()))\n    if s.count(s[0]) == n and s[0] == 0:\n        print(0)\n    elif s.count(s[0]) == len(s) and s[0] == 1:\n        print(sum(a))\n    else:\n        count = 0\n        b = 0\n        for i in range(n):\n            if s[i] == 1:\n                if a[i] > b:\n                    count += a[i]\n                else:\n                    count += b\n            if a[i] < b or s[i] == 0:\n                b = a[i]\n        print(count)", "for _ in range(int(input())):\n    x = int(input())\n    b = list(input())\n    l = list(map(int, input().split()))\n    c = 0\n    las = -1\n    for i in range(x):\n        if b[i] == '1':\n            c += max(las, l[i])\n        if b[i] == '0' or l[i] < las:\n            las = l[i]\n    print(c)", "I = input\nfor _ in [0] * int(I()):\n    I()\n    r = p = 0\n    for (c, x) in zip(I(), map(int, I().split())):\n        r += (c > '0') * max(p, x)\n        p = (p, x)[c < '1' or x < p]\n    print(r)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    l = list(map(int, input().split()))\n    (maxi, li) = [0, -2147483647]\n    for i in range(0, n):\n        if s[i] == '1':\n            maxi += max(l[i], li)\n        if s[i] == '0' or l[i] < li:\n            li = l[i]\n    print(maxi)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    a = [int(x) for x in input().split()]\n    ans = 0\n    l = -1\n    for i in range(n):\n        if s[i] == '1':\n            ans += max(a[i], l)\n        if s[i] == '0' or a[i] < l:\n            l = a[i]\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = list(input())\n    arr = list(map(int, input().split()))\n    l_z = []\n    l_o = []\n    ans = 0\n    i = 0\n    while i < n:\n        if s[i] == '1':\n            ans += arr[i]\n            i += 1\n        else:\n            curr = min_ = arr[i]\n            j = i + 1\n            while j < n and s[j] == '1':\n                curr += arr[j]\n                min_ = min(min_, arr[j])\n                j += 1\n            ans += curr - min_\n            i = j\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    t = '0' + input()\n    l = [0] + list(map(int, input().split(' ')))\n    ans = 0\n    i = 0\n    while i <= n:\n        minL = l[i]\n        curL = l[i]\n        j = i + 1\n        while j <= n and t[j] == '1':\n            minL = min(minL, l[j])\n            ans += l[j]\n            j += 1\n        ans += curL - minL\n        i = j\n    print(ans)", "import sys\nfor t in range(int(input())):\n    n = int(input())\n    a = '0' + input()\n    s = [0] + list(map(int, input().split()))\n    ans = 0\n    i = 0\n    while i < n:\n        sm = s[i]\n        mn = s[i]\n        j = i + 1\n        while j <= n and a[j] == '1':\n            sm += s[j]\n            mn = min(mn, s[j])\n            j += 1\n        ans += sm - mn\n        i = j\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    wah = list(input())\n    a = list(map(int, input().split(' ')))\n    cnt = 0\n    ccnt = 0\n    start = 0\n    minn = 0\n    for i in range(0, n):\n        if wah[i] == '0':\n            cnt += ccnt - minn\n            ccnt = a[i]\n            minn = a[i]\n        else:\n            ccnt += a[i]\n            minn = min(minn, a[i])\n    if wah[-1] == '1':\n        cnt += ccnt - minn\n    print(cnt)", "def continuous(judge, magazines):\n    o = judge.count('0')\n    if o == 0:\n        return sum(magazines)\n    elif o == n:\n        return 0\n    sum_ = 0\n    if judge.index('0') > judge.index('1'):\n        sum_ += sum(magazines[:judge.index('0')])\n    for i in range(n - 1):\n        if judge[i] == '0' and judge[i + 1] == '1':\n            l = i\n            for j in range(i + 1, n):\n                if judge[j] == '0':\n                    r = j - 1\n                    break\n            else:\n                r = n\n            sum_ += sum(magazines[l:r + 1]) - min(magazines[l:r + 1])\n    return sum_\nt = int(input())\nindex = 0\nfor _ in range(t):\n    n = int(input())\n    judge = list(input())\n    magazines = list(map(int, input().split()))\n    print(continuous(judge, magazines))", "V = input\nfor _ in [0] * int(V()):\n    V()\n    r = p = 0\n    for (c, x) in zip(V(), map(int, V().split())):\n        r += (c > '0') * max(p, x)\n        p = (p, x)[c < '1' or x < p]\n    print(r)", "for _ in range(int(input())):\n    n = int(input())\n    s = '0' + input()\n    a = [0] + list(map(int, input().split()))\n    ans = 0\n    i = 0\n    while i <= n:\n        mn = a[i]\n        sm = a[i]\n        j = i + 1\n        while j <= n and s[j] == '1':\n            mn = min(mn, a[j])\n            sm += a[j]\n            j += 1\n        ans += sm - mn\n        i = j\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = '0' + input()\n    a = [0] + list(map(int, input().split()))\n    ans = 0\n    i = 0\n    while i <= n:\n        mn = a[i]\n        sm = a[i]\n        j = i + 1\n        while j <= n and s[j] == '1':\n            mn = min(mn, a[j])\n            sm += a[j]\n            j += 1\n        ans += sm - mn\n        i = j\n    print(ans)", "k = int(input())\nfor _ in range(k):\n    n = int(input())\n    s = '0' + input()\n    a = [0] + list(map(int, input().split()))\n    ans = 0\n    i = 0\n    while i <= n:\n        mn = a[i]\n        sm = a[i]\n        j = i + 1\n        while j <= n and s[j] == '1':\n            mn = min(mn, a[j])\n            sm += a[j]\n            j += 1\n        ans += sm - mn\n        i = j\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = [x for x in str(input())]\n    b = list(map(int, input().split()))\n    ans = 0\n    i = 0\n    while i < n:\n        if a[i] == '0' and i + 1 < n and (a[i + 1] == '1'):\n            j = i + 1\n            mn = b[i]\n            su = b[i]\n            while j < n and a[j] == '1':\n                su += b[j]\n                mn = min(b[j], mn)\n                j += 1\n            ans += su - mn\n            i = j\n        elif a[i] == '1':\n            ans += b[i]\n            i += 1\n        else:\n            i += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = '0' + input()\n    a = [0] + list(map(int, input().split()))\n    ans = 0\n    i = 0\n    while i <= n:\n        mn = a[i]\n        sm = a[i]\n        j = i + 1\n        while j <= n and s[j] == '1':\n            mn = min(mn, a[j])\n            sm += a[j]\n            j += 1\n        ans += sm - mn\n        i = j\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(input())\n    b = list(map(int, input().split()))\n    sum = 0\n    last = -1\n    for i in range(n):\n        if a[i] == '1':\n            sum += max(last, b[i])\n        if a[i] == '0' or b[i] < last:\n            last = b[i]\n    print(sum)", "for _ in range(int(input())):\n    n = int(input())\n    s = '0' + input()\n    a = [0] + list(map(int, input().split()))\n    ans = 0\n    i = 0\n    while i <= n:\n        mn = a[i]\n        sm = a[i]\n        j = i + 1\n        while j <= n and s[j] == '1':\n            mn = min(mn, a[j])\n            sm += a[j]\n            j += 1\n        ans += sm - mn\n        i = j\n    print(ans)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    mags = list(map(int, input().split()))\n    ans = 0\n    mx = -math.inf\n    for i in range(len(s)):\n        if s[i] == '1':\n            ans += max(mx, mags[i])\n        if s[i] == '0' or mx > mags[i]:\n            mx = mags[i]\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    binary_rep = list(input())\n    boxes = list(map(int, input().split()))\n    total = 0\n    i = 1\n    if binary_rep[0] == '1':\n        total += boxes[0]\n    while i < n:\n        mn = 10000\n        if binary_rep[i] == '1':\n            if binary_rep[i - 1] == '0':\n                mn = min(boxes[i - 1], mn)\n                total += mn\n                while i < n:\n                    if binary_rep[i] == '1':\n                        total += boxes[i]\n                        mn = min(mn, boxes[i])\n                        i += 1\n                    else:\n                        break\n                total -= mn\n            else:\n                total += boxes[i]\n                i += 1\n        else:\n            i += 1\n    print(total)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    l = list(map(int, input().split()))\n    a = b = 0\n    for i in range(n):\n        if s[i] == '1':\n            a += max(l[i], b)\n        if s[i] == '0' or l[i] < b:\n            b = l[i]\n    print(a)", "for _ in range(int(input())):\n    n = int(input())\n    s = '0' + input()\n    a = [0] + list(map(int, input().split()))\n    ans = 0\n    i = 0\n    while i <= n:\n        mn = a[i]\n        sm = a[i]\n        j = i + 1\n        while j <= n and s[j] == '1':\n            mn = min(mn, a[j])\n            sm += a[j]\n            j += 1\n        ans += sm - mn\n        i = j\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    a = list(map(int, input().split()))\n    (t, l) = [0, -2147383647]\n    for i in range(0, n):\n        if s[i] == '1':\n            t += max(a[i], l)\n        if s[i] == '0' or a[i] < l:\n            l = a[i]\n    print(t)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    a = list(map(int, input().split()))\n    l = []\n    i = 0\n    count = 0\n    while i < n:\n        if i == 0 and s[i] == '1':\n            if n != 1:\n                if s[1] == '1':\n                    while i < n and s[i] == '1':\n                        count = count + a[i]\n                        i = i + 1\n                else:\n                    count = count + a[0]\n                    i = i + 1\n            else:\n                count = count + a[0]\n                i = i + 1\n        elif i < n - 1:\n            if s[i] == '0' and s[i + 1] == '1':\n                l = []\n                l.append(a[i])\n                i = i + 1\n                while i < n and s[i] == '1':\n                    l.append(a[i])\n                    i = i + 1\n                b = min(l)\n                l.remove(b)\n                for j in l:\n                    count = count + j\n            else:\n                i = i + 1\n        else:\n            i = i + 1\n    print(count)", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    arr1 = list(map(int, input()))\n    arr2 = list(map(int, input().split()))\n    ans = 0\n    r = 0\n    for i in range(n):\n        if arr1[i] == 1:\n            if arr2[i] > r:\n                ans += arr2[i]\n            else:\n                ans += r\n        if arr2[i] < r or arr1[i] == 0:\n            r = arr2[i]\n    print(ans)", "t = int(input())\nwhile t != 0:\n    t -= 1\n    n = int(input())\n    st = [x for x in input()]\n    arr = list(map(int, input().split()))\n    (res1, res2) = (0, 0)\n    for i in range(n):\n        if st[i] == '1':\n            res1 += max(arr[i], res2)\n        if st[i] == '0' or arr[i] < res2:\n            res2 = arr[i]\n    print(res1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    a = list(map(int, input().split()))\n    (t, l) = [0, -2147483647]\n    for i in range(0, n):\n        if s[i] == '1':\n            t += max(a[i], l)\n        if s[i] == '0' or a[i] < l:\n            l = a[i]\n    print(t)", "I = input\nfor _ in [0] * int(I()):\n    I()\n    r = 0\n    p = -1\n    for (c, x) in zip(I(), map(int, I().split())):\n        r += (c > '0') * max(p, x)\n        p = (p, x)[c < '1' or x < p]\n    print(r)", "for _ in range(int(input())):\n    n = int(input())\n    e = input()\n    a = list(map(int, input().split()))\n    (t, l) = [0, -2147483647]\n    for i in range(0, n):\n        if e[i] == '1':\n            t += max(a[i], l)\n        if e[i] == '0' or a[i] < l:\n            l = a[i]\n    print(t)", "for _ in range(int(input())):\n    n = int(input())\n    s = '0' + input()\n    a = [0] + list(map(int, input().split()))\n    ans = 0\n    i = 0\n    while i <= n:\n        mn = a[i]\n        sm = a[i]\n        j = i + 1\n        while j <= n and s[j] == '1':\n            mn = min(mn, a[j])\n            sm += a[j]\n            j += 1\n        ans += sm - mn\n        i = j\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = '0' + input()\n    a = [0] + list(map(int, input().split()))\n    ans = 0\n    i = 0\n    while i <= n:\n        mn = a[i]\n        sm = a[i]\n        j = i + 1\n        while j <= n and s[j] == '1':\n            mn = min(mn, a[j])\n            sm += a[j]\n            j += 1\n        ans += sm - mn\n        i = j\n    print(ans)"]