["from sys import stdin, stdout\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    l = stdin.readline().split()\n    l.reverse()\n    (c, i, a) = (0, 1, l[0])\n    while True:\n        if i >= n:\n            break\n        if l[i] == a:\n            i += 1\n        else:\n            i *= 2\n            c += 1\n    print(c)", "import sys\nint1 = lambda x: int(x) - 1\npDB = lambda *x: print(*x, end='\\n', file=sys.stderr)\np2D = lambda x: print(*x, sep='\\n', end='\\n\\n', file=sys.stderr)\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef LI1():\n    return list(map(int1, sys.stdin.readline().split()))\n\ndef LLI1(rows_number):\n    return [LI1() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline().rstrip()\ndij = [(0, 1), (-1, 0), (0, -1), (1, 0)]\ninf = 18446744073709551615\nmd = 998244353\n\ndef solve():\n    n = II()\n    aa = LI()\n    aa.reverse()\n    i = 1\n    ans = 0\n    while 1:\n        while i < n and aa[i] == aa[0]:\n            i += 1\n        if i >= n:\n            break\n        ans += 1\n        i *= 2\n    print(ans)\nfor testcase in range(II()):\n    solve()", "import sys\n\ndef solution(a):\n    n = len(a)\n    a.reverse()\n    a.insert(0, 0)\n    if n <= 1:\n        print(0)\n        return\n    moves = 0\n    num = a[1]\n    index = 1\n    while index < n:\n        if a[index + 1] == num:\n            index += 1\n        else:\n            moves += 1\n            index *= 2\n    print(moves)\nt = None\na = []\nb = []\ninput = sys.stdin.read().splitlines()\nt = int(input[0])\noffset = 1\nfor test in range(t):\n    a = input[2 * test + 1 + offset]\n    a = a.split(' ')\n    a = [int(ele) for ele in a]\n    solution(a)", "for s in [*open(0)][2::2]:\n    a = s.split()\n    i = j = -1\n    r = 0\n    while -j < len(a):\n        if a[j - 1] != a[-1]:\n            r += 1\n            i = j = j * 2\n        else:\n            j -= 1\n    print(r)", "for s in [*open(0)][2::2]:\n    a = s.split()\n    i = -1\n    r = 0\n    while -i < len(a):\n        if a[i - 1] != a[-1]:\n            r += 1\n            i *= 2\n        else:\n            i -= 1\n    print(r)", "for s in [*open(0)][2::2]:\n    a = s.split()\n    i = -1\n    r = 0\n    while -i < len(a):\n        if a[i - 1] != a[-1]:\n            r += 1\n            i *= 2\n        else:\n            i -= 1\n    print(r)", "for s in [*open(0)][2::2]:\n    a = s.split()\n    i = -1\n    r = 0\n    while -i < len(a):\n        if a[i - 1] != a[-1]:\n            r += 1\n            i *= 2\n        else:\n            i -= 1\n    print(r)", "for s in [*open(0)][2::2]:\n    a = s.split()\n    i = -1\n    r = 0\n    while -i < len(a):\n        if a[i - 1] != a[-1]:\n            r += 1\n            i *= 2\n        else:\n            i -= 1\n    print(r)", "for s in [*open(0)][2::2]:\n    a = s.split()\n    i = -1\n    r = 0\n    while -i < len(a):\n        if a[i - 1] != a[-1]:\n            r += 1\n            i *= 2\n        else:\n            i -= 1\n    print(r)", "for s in [*open(0)][2::2]:\n    a = s.split()\n    i = -1\n    r = 0\n    while -i < len(a):\n        if a[i - 1] != a[-1]:\n            r += 1\n            i *= 2\n        else:\n            i -= 1\n    print(r)", "import sys\n\ndef main():\n    inp = sys.stdin\n    outp = sys.stdout\n    t = int(inp.readline().strip())\n    ans = []\n    for _ in range(t):\n        n = int(inp.readline().strip())\n        a = list(map(int, inp.readline().strip().split()))\n        k = 1\n        ops = 0\n        while 2 * k <= n:\n            while 2 * k <= n and a[-(k + 1)] == a[-k]:\n                k += 1\n            if 2 * k <= n:\n                a[-2 * k:-k] = a[-k:]\n                ops += 1\n                k *= 2\n        if a[:k] != a[-k:]:\n            ops += 1\n        ans.append(ops)\n    outp.write('\\n'.join(list(map(str, ans))))\nmain()", "for s in [*open(0)][2::2]:\n    a = s.split()\n    i = -1\n    r = 0\n    while -i < len(a):\n        if a[i - 1] != a[-1]:\n            r += 1\n            i *= 2\n        else:\n            i -= 1\n    print(r)", "import sys\ninput = sys.stdin.readline\nMAX = sys.maxsize\nsys.setrecursionlimit(10 ** 9)\n\ndef inp():\n    return int(input())\n\ndef read_int_list():\n    return list(map(int, input().split()))\n\ndef read_list():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef read_int_map():\n    return map(int, input().split())\n\ndef solve(a):\n    ans = 0\n    if len(a) == 1:\n        return ans\n    n = len(a) - 1\n    i = n - 1\n    while i >= 0:\n        if a[i] == a[n]:\n            i -= 1\n        else:\n            ans += 1\n            i -= n - i\n    return ans\nfor _ in range(inp()):\n    _ = inp()\n    print(solve(read_int_list()))", "from sys import stdin, stdout\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    l = list(map(int, stdin.readline().split()))\n    l.reverse()\n    (c, i, a) = (0, 1, l[0])\n    while True:\n        if i >= n:\n            break\n        if l[i] == a:\n            i += 1\n        else:\n            i *= 2\n            c += 1\n    print(c)", "def check_amount_of_rep_from_back(l, k, n):\n    am_ = 0\n    num = n\n    for i in range(k, -1, -1):\n        if l[i] != num:\n            break\n        am_ += 1\n    return am_\ncases = int(input())\nanswers = []\nfor _ in range(cases):\n    len_arr = int(input())\n    l = input().split(' ')\n    last = l[-1]\n    amt_ = check_amount_of_rep_from_back(l, len_arr - 1, last)\n    turns = 0\n    while amt_ < len_arr:\n        amt_ *= 2\n        amt_ += check_amount_of_rep_from_back(l, len_arr - 1 - amt_, last)\n        turns += 1\n    answers.append(str(turns))\nprint('\\n'.join(answers))", "for s in [*open(0)][2::2]:\n    a = s.split()\n    i = -1\n    r = 0\n    while -i < len(a):\n        if a[i - 1] != a[-1]:\n            r += 1\n            i *= 2\n        else:\n            i -= 1\n    print(r)", "import sys\nimport math\ninput = sys.stdin.readline\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n        continue\n    i = n - 2\n    count = 1\n    ans = 0\n    while i >= 0:\n        if a[i] == a[-1]:\n            i -= 1\n        else:\n            ans += 1\n            i -= n - i - 1\n    print(ans)", "for s in [*open(0)][2::2]:\n    a = s.split()\n    i = -1\n    r = 0\n    while -i < len(a):\n        if a[i - 1] != a[-1]:\n            r += 1\n            i *= 2\n        else:\n            i -= 1\n    print(r)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nt = inp()\nfor _ in range(t):\n    length = inp()\n    arr = inlt()\n    target = arr[-1]\n    count = 0\n    i = length - 2\n    while i >= 0:\n        if arr[i] == target:\n            i -= 1\n            continue\n        count += 1\n        i = length - 1 - (length - i - 1) * 2\n    print(count)", "for s in [*open(0)][2::2]:\n    a = s.split()\n    i = -1\n    r = 0\n    while -i < len(a):\n        if a[i - 1] != a[-1]:\n            r += 1\n            i *= 2\n        else:\n            i -= 1\n    print(r)", "import math\nfrom sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    i = n - 1\n    c = 0\n    f = 0\n    while i > -1:\n        if a[i] == a[-1]:\n            f = f + 1\n            i = i - 1\n        else:\n            i = i - f\n            f = 2 * f\n            c = c + 1\n    print(c)", "import math\nfrom sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    i = n - 1\n    c = 0\n    f = 0\n    l = a[-1]\n    while i > -1:\n        if a[i] == l:\n            f = f + 1\n            i = i - 1\n        else:\n            i = i - f\n            f = 2 * f\n            c = c + 1\n    print(c)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = input()[:-1].split()\n    i = -1\n    c = 0\n    while -i < len(a):\n        if a[i - 1] != a[-1]:\n            c += 1\n            i *= 2\n        else:\n            i -= 1\n    print(c)", "for s in [*open(0)][2::2]:\n    a = s.split()\n    i = -1\n    r = 0\n    while -i < len(a):\n        if a[i - 1] != a[-1]:\n            r += 1\n            i *= 2\n        else:\n            i -= 1\n    print(r)", "import sys\nfrom collections import deque\ninput = sys.stdin.readline\n\ndef solution() -> int:\n    queue = deque()\n    a_list.reverse()\n    std_num = a_list[0]\n    for (idx, val) in enumerate(a_list, start=1):\n        if val != std_num:\n            queue.append(idx)\n    cnt = 0\n    boundary = 0\n    while len(queue):\n        pos = queue.popleft()\n        if pos > boundary:\n            cnt += 1\n            boundary = (pos - 1) * 2\n    return cnt\nt = int(input())\nfor tc in range(t):\n    n = int(input())\n    a_list = list(map(int, input().split()))\n    sol = solution()\n    print(sol)", "import sys\ninputs = sys.stdin.readlines()\nfor idx in range(1, len(inputs), 2):\n    l = list(map(int, inputs[idx + 1].split()))\n    v = l[-1]\n    ans = 0\n    i = 1\n    while i < len(l) + 1:\n        if l[-i] != v:\n            ans += 1\n            i = (i - 1) * 2 + 1\n        else:\n            i += 1\n    print(ans)", "import sys\ninput = sys.stdin.readline\n\ndef solve(n, arr):\n    i = n - 2\n    jump = 1\n    ans = 0\n    val = arr[-1]\n    while i >= 0:\n        if arr[i] == val:\n            i -= 1\n            jump += 1\n            continue\n        i -= jump\n        jump *= 2\n        ans += 1\n    return ans\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1 or len(set(a)) == 1:\n        print(0)\n        continue\n    print(solve(n, a))", "import sys\nimport bisect\ninp = sys.stdin.readline\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\nfor _ in range(int(inp())):\n    n = int(inp())\n    a = [int(i) for i in inp().split()]\n    i = n - 2\n    ans = 0\n    while i >= 0:\n        if a[i] != a[i + 1]:\n            ans += 1\n            i = i - (n - 1 - i)\n            a[i + 1] = a[-1]\n        else:\n            i -= 1\n    print(ans)", "for s in [*open(0)][2::2]:\n    lst = [*map(int, s.split())]\n    lst.reverse()\n    sz = len(lst)\n    i = 0\n    op = 0\n    while i < sz:\n        if lst[i] == lst[0]:\n            i += 1\n            continue\n        op += 1\n        i *= 2\n    print(op)", "import sys\nimport math\nsys.setrecursionlimit(10 ** 6)\ninput = sys.stdin.readline\n\ndef solution(N, A):\n    A.reverse()\n    if N == 1:\n        return 0\n    ans = 0\n    (p, l) = (A[0], 1)\n    while l < N:\n        while l < N:\n            if p != A[l]:\n                l -= 1\n                break\n            l += 1\n        if l == N:\n            break\n        r = (l << 1) + 1\n        if r >= N:\n            r = N - 1\n        for i in range(l + 1, r + 1):\n            if A[i] != p:\n                ans += 1\n                break\n        A[r] = p\n        l = r\n    return ans\nR = []\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input()[:-1].split()))\n    R.append(solution(n, a))\nfor r in R:\n    print(r)", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    i = n - 1\n    c = 0\n    f = 0\n    l = a[-1]\n    while i > -1:\n        if a[i] == l:\n            f = f + 1\n            i = i - 1\n        else:\n            i = i - f\n            f = 2 * f\n            c = c + 1\n    print(c)", "import sys\nimport math\ninput = sys.stdin.readline\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n        continue\n    i = n - 2\n    count = 1\n    ans = 0\n    while i >= 0:\n        if a[i] == a[-1]:\n            i -= 1\n        else:\n            ans += 1\n            i -= n - i - 1\n    print(ans)", "for s in [*open(0)][2::2]:\n    a = s.split()\n    i = -1\n    r = 0\n    while -i < len(a):\n        if a[i - 1] != a[-1]:\n            r += 1\n            i *= 2\n        else:\n            i -= 1\n    print(r)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    i = n - 2\n    magicnumber = arr[-1]\n    ans = 0\n    while i > -1:\n        if arr[i] != magicnumber:\n            ans += 1\n            i = n - 2 * (n - i - 1) - 1\n        else:\n            i -= 1\n    print(ans)", "import sys\ninput = sys.stdin.readline\nnum_test_cases = int(input())\nfor test_case_ittr in range(num_test_cases):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    last_element = arr[-1]\n    run_length = 1\n    num_doubles = 0\n    while run_length < n:\n        while run_length < n and arr[~run_length] == last_element:\n            run_length += 1\n        if run_length == n:\n            break\n        run_length *= 2\n        num_doubles += 1\n    print(num_doubles)", "def get_ops(a):\n    count = 0\n    if len(a) <= 1:\n        return 0\n    i = len(a) - 1\n    while i >= 0:\n        if a[i] != a[-1]:\n            count += 1\n            i -= len(a) - i - 1\n        else:\n            i -= 1\n    return count\nsubs = input()\nsubs = int(subs)\nresults = []\nfor i in range(subs):\n    N = input()\n    N = str(N)\n    a = input()\n    a = list(map(int, a.split()))\n    results.append(get_ops(a))\nfor n in results:\n    print(n)", "t = int(input())\nans = []\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = a[n - 1]\n    cnt = 0\n    length = 1\n    j = n - 2\n    while j >= 0:\n        while j >= 0 and a[j] == x:\n            length += 1\n            j -= 1\n        if j < 0:\n            break\n        cnt += 1\n        j = j - length\n        length *= 2\n    ans.append(cnt)\nfor i in ans:\n    print(i)", "from sys import stdin, stdout\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    cnt = 1\n    i = n - 2\n    ans = 0\n    while i >= 0:\n        if a[i] == a[-1]:\n            cnt += 1\n            i -= 1\n        else:\n            ans += 1\n            i -= cnt\n            cnt *= 2\n    print(ans)", "ans = []\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = a[n - 1]\n    kol = 0\n    i = n - 1\n    otv = 0\n    while i >= 0:\n        if a[i] == k:\n            kol += 1\n        else:\n            otv += 1\n            i -= kol - 1\n            kol *= 2\n        i -= 1\n    ans.append(otv)\nprint('\\n'.join([str(i) for i in ans]))", "import sys, collections\n\ndef solve(n, A):\n    goal = A[n - 1]\n    operation = 0\n    leftmost = n - 1\n    for i in range(n - 2, -1, -1):\n        if A[i] == goal or leftmost <= i:\n            continue\n        operation += 1\n        k = n - i - 1\n        leftmost = i + 1 - k\n    return operation\ninput = sys.stdin.readline\ntests = int(input()[:-1])\nfor test in range(tests):\n    n = int(input()[:-1])\n    A = [int(s) for s in input()[:-1].split()]\n    print(solve(n, A))", "from sys import stdin\n\ndef solve():\n    for _ in range(int(stdin.readline().strip())):\n        n = int(stdin.readline().rstrip())\n        a = list(map(int, stdin.readline().rstrip().split()))[::-1]\n        x = a[0]\n        flag = 1\n        for i in range(n):\n            if a[i] != x:\n                flag = 0\n                break\n        if flag:\n            print(0)\n            continue\n        ans = 0\n        k = 2\n        while i < n:\n            while i < n and a[i] == x:\n                i += 1\n            flag = 0\n            for j in range(i, min(2 * i, n)):\n                if a[j] != x:\n                    flag = 1\n                    break\n            if flag:\n                ans += 1\n            i *= 2\n        print(ans)\nsolve()", "import sys\ninput = sys.stdin.readline\nt = int(input().strip())\nfor _ in range(t):\n    n = int(input().strip())\n    lst = list(map(int, input().split()))\n    x = lst[-1]\n    idx = n - 1\n    cnt = 0\n    while idx >= 0:\n        while idx >= 0 and lst[idx] == lst[-1]:\n            idx -= 1\n        if idx < 0:\n            break\n        idx -= n - 1 - idx\n        cnt += 1\n        idx = max(-1, idx)\n    print(cnt)", "import sys\nimport math\ninput = sys.stdin.readline\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n        continue\n    i = n - 2\n    count = 1\n    ans = 0\n    while i >= 0:\n        if a[i] == a[-1]:\n            count += 1\n            i -= 1\n        else:\n            ans += 1\n            count = count * 2\n            i = n - count - 1\n    print(ans)", "cases = range(int(input()))\nfunc = lambda : [int(q) for q in input().split()]\nans = []\nfor c in cases:\n    length = int(input())\n    arr = func()\n    operation_counter = 0\n    n = 1\n    if length == 1:\n        pass\n    else:\n        while arr[-1] == arr[-1 - n]:\n            if n >= (length + 1) // 2:\n                break\n            n += 1\n        while n < length:\n            if arr[-1 - n] == arr[-1]:\n                n += 1\n            else:\n                n *= 2\n                operation_counter += 1\n    ans.append(operation_counter)\nfor q in ans:\n    print(q)", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nfor _ in range(int(input())):\n    n = int(input())\n    ans = 0\n    arr1 = [int(item) for item in input().split()]\n    arr1.reverse()\n    i = 1\n    while True:\n        for x in range(i, n):\n            if i > n or arr1[x] != arr1[0]:\n                break\n            if arr1[x] == arr1[0]:\n                i += 1\n        if i >= n:\n            break\n        else:\n            ans += 1\n            i *= 2\n    print(ans)", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    i = n - 1\n    c = a[-1]\n    x = 1\n    while i > 0:\n        if a[i] == a[i - 1]:\n            x = x + 1\n        else:\n            break\n        i = i - 1\n    if x == n:\n        print(0)\n    else:\n        ans = 0\n        while 2 * x < n:\n            for i in range(n - 2 * x, n - x):\n                a[i] = c\n            x = x * 2\n            if a[n - x - 1] == c:\n                o = n - x - 1\n                while o > 0:\n                    if a[o] == c:\n                        x = x + 1\n                    else:\n                        break\n                    o = o - 1\n            ans = ans + 1\n            if a.count(c) == n:\n                break\n        if a.count(c) != n:\n            ans = ans + 1\n        print(ans)", "answer = ''\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n % 2 != 0:\n        n += 1\n        a = [a[0]] + a\n    count = [0] * (n + 1)\n    for i in range(n - 1, n // 2 - 1, -1):\n        if a[i] == a[i - 1]:\n            count[i] = count[i + 1]\n        else:\n            count[i] = count[i + 1] + bool(a[i:n] != a[2 * i - n:i])\n            a[2 * i - n:i] = a[i:n]\n    if a[0:n // 2] != a[n // 2:2 * (n // 2)]:\n        count[n // 2] += 1\n    answer += '%d\\n' % count[n // 2]\nprint(answer.strip())", "def function(n, arr):\n    count = 0\n    if n == 1:\n        return count\n    curr = 1\n    i = n - 2\n    val = arr[n - 1]\n    while i > -1:\n        if arr[i] == val:\n            curr += 1\n            i -= 1\n        else:\n            count += 1\n            i -= curr\n            curr = 2 * curr\n    return count\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(function(n, arr))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = input().split()\n    if n == 0 or n == 1:\n        print(0)\n        continue\n    count = 0\n    equal = l[n - 1]\n    if l[n - 2] != equal:\n        count += 1\n    i = n - 3\n    while i >= 0:\n        if l[i] != equal:\n            count += 1\n            i -= n - 1 - i\n            continue\n        i -= 1\n    print(count)", "for i in range(int(input())):\n    n = int(input())\n    num = list(map(int, input().split()))\n    num = num[::-1]\n    x = 1\n    ans = 0\n    while x < n:\n        if num[x] == num[0]:\n            x += 1\n            continue\n        x *= 2\n        ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = [0] + a[::-1]\n    p = a[1]\n    i = 1\n    ans = 0\n    while i < n + 1:\n        if a[i] == p:\n            i += 1\n        else:\n            i = (i - 1) * 2 + 1\n            ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 1\n    doubles = 0\n    while True:\n        while i < n and a[-1] == a[-i - 1]:\n            i += 1\n        if i >= n:\n            break\n        i *= 2\n        doubles += 1\n    print(doubles)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    A = list(map(int, input().split(' ')))\n    i = n - 1\n    ans = 0\n    num = A[-1]\n    while i >= 0:\n        if A[i] == num:\n            i -= 1\n        else:\n            lenn = n - 1 - i\n            i -= lenn\n            ans += 1\n            if i < 0:\n                break\n    print(ans)", "def solve(a):\n    l = len(a)\n    i = l - 2\n    c = 0\n    while i >= 0:\n        if a[i] != a[-1]:\n            c += 1\n            i -= l - i - 1\n        else:\n            i -= 1\n    return c\nn = int(input())\nfor i in range(n):\n    m = int(input())\n    a = list(map(int, input().split()))\n    if m == 1:\n        print(0)\n    else:\n        print(solve(a))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    c = 0\n    a = list(map(int, input().split()))\n    i = n - 2\n    while i >= 0:\n        d = n - 1 - i\n        if a[i] != a[n - 1]:\n            c += 1\n            i = i - d\n        else:\n            i = i - 1\n    print(c)", "for tc in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    n = len(arr)\n    curr = 0\n    el = arr[-1]\n    le = 0\n    steps = 0\n    i = n - 1\n    ok = 0\n    while i >= 0:\n        if arr[i] == el:\n            curr += 1\n            le = 0\n            i -= 1\n        else:\n            curr += curr\n            steps += 1\n            i = n - curr - 1\n    print(steps)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    i = n - 2\n    while i > -1:\n        if a[-1] != a[i]:\n            i -= n - i - 1\n            count += 1\n        else:\n            i -= 1\n    print(count)", "from math import log, ceil\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    i = n - 2\n    step = 1\n    while i >= 0:\n        if a[i] != a[-1]:\n            count += 1\n            i -= step\n            step *= 2\n        else:\n            step += 1\n            i -= 1\n    print(count)", "def fun(n, arr):\n    result = 0\n    last = arr[-1]\n    i = n - 2\n    while i > -1:\n        while i > -1 and arr[i] == last:\n            i -= 1\n        if i > -1:\n            result += 1\n            i = 2 * i - n + 1\n    return result\nfor t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().strip().split()))\n    print(fun(n, arr))", "def main():\n    T = int(input())\n    for x in range(T):\n        n = int(input())\n        array = list(map(int, input().split(' ')))\n        temp = array[n - 1]\n        (steps, chain, i, temp) = (0, 1, n - 2, array[n - 1])\n        while i >= 0:\n            if array[i] == temp:\n                chain += 1\n                i -= 1\n            else:\n                steps += 1\n                i -= chain\n                chain *= 2\n        print(steps)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    numbers = list(map(int, input().split()))\n    count = 1\n    i = n - 2\n    o = 0\n    last = numbers[-1]\n    while i >= 0:\n        if numbers[i] == last:\n            count += 1\n            i -= 1\n        else:\n            i -= count\n            count *= 2\n            o += 1\n    print(o)", "for _ in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    b = b[::-1]\n    i = 1\n    c = 0\n    while i < a:\n        if b[0] != b[i]:\n            c += 1\n            i = i * 2\n        else:\n            i += 1\n    print(c)", "import sys\nfrom math import *\nfrom math import *\nfrom functools import *\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = n - 1\n    c = 0\n    m = a[n - 1]\n    while i > 0:\n        while i > 0 and a[i - 1] == m:\n            i -= 1\n        if i > 0:\n            c += 1\n            i = 2 * i - n\n    print(c)", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    cur = n - 1\n    ans = 0\n    while cur >= 0:\n        while cur >= 0 and a[cur] == a[-1]:\n            cur -= 1\n        if cur >= 0:\n            cur = cur - (n - cur - 1)\n            ans += 1\n    print(ans)\ntst = int(input())\nfor tt in range(tst):\n    solve()", "def main():\n    test_no = int(input())\n    for _ in range(test_no):\n        n = int(input())\n        elems = [int(elem) for elem in input().split()]\n        if len(elems) == 1:\n            print(0)\n            continue\n        count = 0\n        i = -2\n        val = elems[-1]\n        while -i <= len(elems):\n            if elems[i] == val:\n                i -= 1\n            else:\n                i += i + 1\n                count += 1\n        print(count)\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    c = 0\n    p = a[n - 1]\n    i = 1\n    j = n - 2\n    while j >= 0:\n        while j >= 0 and a[j] == p:\n            i += 1\n            j -= 1\n        if j < 0:\n            break\n        c += 1\n        j -= i\n        i *= 2\n    print(c)", "def executeCases():\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n        return\n    operations = 0\n    cur = n - 2\n    print(getOperations(n, a, cur, operations))\n\ndef getOperations(n, a, cur, operations):\n    while cur >= 0 and a[cur] == a[-1]:\n        cur -= 1\n    if cur == 0:\n        return operations + 1\n    elif cur < 0:\n        return operations\n    else:\n        operations += 1\n        cur -= n - cur - 1\n        return getOperations(n, a, cur, operations)\nt = int(input())\nfor i in range(t):\n    executeCases()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    index = n - 1\n    num = a[n - 1]\n    while index >= 0:\n        if a[index] == num:\n            index -= 1\n        else:\n            ans += 1\n            index -= n - index - 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    a.reverse()\n    check = a[0]\n    i = 0\n    count = 0\n    while i < n - 1:\n        if a[i + 1] != check:\n            count = count + 1\n            i = 2 * i + 1\n            continue\n        else:\n            i = i + 1\n    print(count)", "def find_min_ops2(n, a):\n    num_ops = 0\n    a.reverse()\n    common = a[0]\n    i = 1\n    while i < n:\n        if a[i] != common:\n            num_ops += 1\n            i *= 2\n        else:\n            i += 1\n    return num_ops\nT = int(input())\nfor t in range(T):\n    n = int(input())\n    a = [int(k) for k in input().split()]\n    print(find_min_ops2(n, a))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    a.reverse()\n    check = a[0]\n    i = 0\n    count = 0\n    while i < n - 1:\n        if a[i + 1] != check:\n            count = count + 1\n            i = 2 * i + 1\n            continue\n        else:\n            i = i + 1\n    print(count)", "tc = int(input())\nfor tt in range(tc):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = arr[::-1]\n    x = 1\n    ans = 0\n    while x < n:\n        if arr[x] != arr[0]:\n            x *= 2\n            ans += 1\n        else:\n            x += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    a = a[::-1]\n    i = 1\n    while i < n:\n        if a[0] != a[i]:\n            i += i\n            ans += 1\n        else:\n            i += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    a = a[::-1]\n    i = 1\n    while i < n:\n        if a[0] != a[i]:\n            i += i\n            ans += 1\n        else:\n            i += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    a = a[::-1]\n    i = 1\n    while i < n:\n        if a[0] != a[i]:\n            i += i\n            ans += 1\n        else:\n            i += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    a = a[::-1]\n    i = 1\n    while i < n:\n        if a[0] != a[i]:\n            i += i\n            ans += 1\n        else:\n            i += 1\n    print(ans)", "tst = int(input())\nfor i in range(tst):\n    n = int(input())\n    a = list(reversed(list(map(int, input().split()))))\n    ans = 0\n    i = 1\n    while i < n:\n        if a[i] == a[0]:\n            i += 1\n        else:\n            ans += 1\n            i *= 2\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.reverse()\n    ans = 0\n    temp = a[0]\n    i = 1\n    while i < n:\n        if a[i] == temp:\n            i = i + 1\n        else:\n            i = i * 2\n            ans = ans + 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    v = lis[-1]\n    k = n - 2\n    a = 0\n    while k >= 0:\n        if lis[k] == v:\n            k -= 1\n        else:\n            a += 1\n            k -= n - k - 1\n    print(a)", "def solve(A):\n    ret = 0\n    suf = 1\n    val = A[-1]\n    p = len(A) - 2\n    while p >= 0:\n        if A[p] != val:\n            ret += 1\n            suf *= 2\n            p = len(A) - suf - 1\n        else:\n            suf += 1\n            p -= 1\n    return ret\nt = int(input())\nfor _ in range(t):\n    _ = input()\n    A = [int(x) for x in input().split()]\n    print(solve(A))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = n - 2\n    ans = 0\n    while i >= 0:\n        if a[i] != a[-1]:\n            ans += 1\n            i -= n - i - 1\n        else:\n            i -= 1\n    print(ans)", "def main():\n    T = int(input())\n    for x in range(T):\n        n = int(input())\n        array = list(map(int, input().split(' ')))\n        temp = array[n - 1]\n        (steps, chain, i, temp) = (0, 1, n - 2, array[n - 1])\n        while i >= 0:\n            if array[i] == temp:\n                chain += 1\n                i -= 1\n            else:\n                steps += 1\n                i -= chain\n                chain *= 2\n        print(steps)\nmain()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    num = list(map(int, input().split()))\n    num.reverse()\n    idx = 0\n    cnt = 0\n    same = num[0]\n    while idx < n - 1:\n        if num[idx + 1] == same:\n            idx += 1\n        else:\n            idx += idx + 1\n            cnt += 1\n    print(cnt)", "for x in range(int(input())):\n    (_, a) = (input(), input().split()[::-1])\n    t = 0\n    i = 1\n    while i < len(a):\n        if a[i] == a[0]:\n            i += 1\n        else:\n            t += 1\n            i *= 2\n    print(t)", "case = int(input())\nfor i in range(case):\n    n = int(input())\n    ll = list(map(int, input().split()))\n    ss = ll[-1]\n    t = n - 2\n    count = 0\n    while t >= 0:\n        if ll[t] != ss:\n            count += 1\n            t -= n - t - 1\n        else:\n            t -= 1\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (i, ans, final) = (n - 1, 0, a[-1])\n    while i >= 0:\n        if a[i] == final:\n            i -= 1\n        else:\n            ans += 1\n            k = n - 1 - i\n            i -= k\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    i = n - 1\n    target = arr[n - 1]\n    count = 0\n    while i >= 0:\n        if arr[i] == target:\n            i -= 1\n        else:\n            i -= n - i - 1\n            count += 1\n    print(count)", "def fun():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    k = arr.pop()\n    count = 0\n    i = 1\n    while arr:\n        if arr[-1] == k:\n            arr.pop()\n            i += 1\n        else:\n            arr = arr[:-i]\n            count += 1\n            i = i + i\n    return count\n\ndef main():\n    for _ in range(int(input())):\n        print(fun())\nmain()", "def solve():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    el = a[-1]\n    count = 0\n    pos = len(a) - 2\n    while pos >= 0:\n        if a[pos] == el:\n            pos = pos - 1\n        else:\n            k = len(a) - (pos + 1)\n            pos = pos - k\n            count = count + 1\n    return count\nt = int(input())\nfor tc in range(t):\n    print(solve())", "import math\n\ndef intlist():\n    return [int(i) for i in input().split(' ')]\n\ndef stringlsit():\n    return input().split(' ')\n\ndef solve():\n    n = int(input())\n    a = intlist()\n    l = a[-1]\n    seq = 1\n    ans = 0\n    i = n - 2\n    while i != -1:\n        if a[i] == l:\n            seq += 1\n            i = i - 1\n        elif i - seq >= 0:\n            i = i - seq\n            seq = seq * 2\n            ans += 1\n        else:\n            ans += 1\n            break\n    return ans\nt = input()\nfor tt in range(int(t)):\n    print(solve())", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    ans = 0\n    i = n - 2\n    lastSame = n - 1\n    while i > -1:\n        if a[i] != a[n - 1]:\n            ans += 1\n            lastSame = n - 2 * (n - lastSame)\n            i = lastSame - 1\n        else:\n            lastSame = i\n            i -= 1\n    print(ans)", "def solve(a, n):\n    res = 0\n    v = a[int(n) - 1]\n    length = 1\n    j = int(n) - 1\n    j -= 1\n    while j >= 0:\n        while j >= 0 and a[j] == v:\n            length += 1\n            j -= 1\n        if j < 0:\n            break\n        res += 1\n        j -= length\n        length *= 2\n    return res\nt = int(input())\nfor i in range(0, t):\n    n = input()\n    a = list(map(int, input().split()))\n    print(solve(a, n))", "t = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = n - 1\n    ans = 0\n    while x > 0:\n        while x > 0 and a[x - 1] == a[-1]:\n            x -= 1\n        if x == 0 and a[x] == a[-1]:\n            break\n        if x >= 0:\n            x -= n - x\n            ans += 1\n    print(ans)"]