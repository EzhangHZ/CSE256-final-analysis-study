["for t in range(int(input())):\n    (n, k) = [*map(int, input().split())]\n    if k != 1 and n % 2:\n        print('NO')\n        continue\n    print('YES')\n    for i in range(n):\n        s = i // 2 * k * 2 + (2 if i % 2 else 1)\n        print(' '.join([str(x) for x in range(s, s + 2 * (k - 1) + 1, 2)]))", "import sys\nfin = sys.stdin\n\ndef solve(n, k):\n    if k == 1:\n        answer = '\\n'.join(map(str, range(1, n + 1)))\n        return f'YES\\n{answer}'\n    elif n == 1:\n        return 'NO'\n    elif n % 2 == 0:\n        answer = ['YES']\n        for i in range(0, n, 2):\n            start = i * k + 1\n            end = i * k + 2 * k + 1\n            answer.append(' '.join(map(str, range(start, end, 2))))\n            answer.append(' '.join(map(str, range(start + 1, end, 2))))\n        return '\\n'.join(answer)\n    return 'NO'\nt = int(fin.readline())\nfor test in range(t):\n    (n, k) = map(int, fin.readline().split())\n    print(solve(n, k))", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        continue\n    if n % 2 == 1:\n        print('NO')\n        continue\n    print('YES')\n    for j in range(0, n, 2):\n        joined_string = ' '.join([str(i) for i in range(j * k + 1, (j + 2) * k + 1, 2)])\n        print(joined_string)\n        joined_string = ' '.join([str(i) for i in range(j * k + 2, (j + 2) * k + 1, 2)])\n        print(joined_string)", "def calc(n, k):\n    tot = n * k\n    even_tot = tot >> 1\n    odd_tot = even_tot + (tot & 1)\n    if even_tot % k or odd_tot % k:\n        print('NO')\n        return\n    print('YES')\n    even_idx = 2\n    odd_idx = 1\n    for i in range(n):\n        row = []\n        for j in range(k):\n            if odd_idx <= tot:\n                row.append(str(odd_idx))\n                odd_idx += 2\n            else:\n                row.append(str(even_idx))\n                even_idx += 2\n        print(' '.join(row))\ncnt = int(input())\nwhile cnt:\n    (n, k) = [int(i) for i in input().split()]\n    calc(n, k)\n    cnt -= 1", "def read_nums():\n    return [int(x) for x in input().split()]\n\ndef build_grid(n, k):\n    res = []\n    num = 1\n    for _ in range(n // 2):\n        res.append([])\n        res.append([])\n        for j in range(k):\n            res[-2].append(num)\n            num += 1\n            res[-1].append(num)\n            num += 1\n    return res\n\ndef solve():\n    (n, k) = read_nums()\n    if k == 1:\n        print('YES')\n        for i in range(n):\n            print(i + 1)\n        return\n    if n % 2 == 0:\n        print('YES')\n        grid = build_grid(n, k)\n        for row in grid:\n            print(' '.join(map(str, row)))\n        return\n    print('NO')\n\ndef main():\n    (t,) = read_nums()\n    for _ in range(t):\n        solve()\nmain()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ans = []\n    if n % 2 == 0 or k == 1:\n        print('YES')\n        if k == 1:\n            for i in range(n):\n                print(i + 1)\n        else:\n            for i in range(n // 2):\n                start = i * k + 1\n                print(' '.join((str(i * (k * 2) + x) for x in range(1, k * 2 + 1, 2))))\n                print(' '.join((str(i * (k * 2) + x) for x in range(2, k * 2 + 1, 2))))\n    else:\n        print('NO')", "def produce(n, k):\n    if k == 1:\n        for shelf in range(n):\n            print(shelf + 1)\n        return\n    odds = [c for c in range(1, n * k + 1, 2)]\n    evens = [c + 1 for c in range(1, n * k, 2)]\n    for shelf in range(n // 2):\n        print(' '.join((str(e) for e in odds[shelf * k:(shelf + 1) * k])))\n    for shelf in range(n // 2):\n        print(' '.join((str(e) for e in evens[shelf * k:(shelf + 1) * k])))\n\ndef solve(n, k):\n    if k == 1:\n        return 'YES'\n    if n * k % 2 != 0:\n        return 'NO'\n    if n % 2 != 0:\n        return 'NO'\n    return 'YES'\nt = int(input())\nfor _ in range(t):\n    (n, k) = (int(component) for component in input().split(' '))\n    result = solve(n, k)\n    print(result)\n    if result == 'YES':\n        produce(n, k)", "t = int(input())\nfor line in range(t):\n    (n, k) = map(int, input().split())\n    if n % 2 == 1 and k > 1:\n        print('NO')\n    else:\n        print('YES')\n        for i in range(n):\n            print(' '.join([str(i + 1 + n * j) for j in range(k)]))", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    (n, k) = map(int, inp().split())\n    a = [[i + 1 + j * n for j in range(k)] for i in range(n)]\n    s = 0\n    for i in range(k):\n        s += a[0][i]\n        if s % (i + 1) != 0:\n            print('NO')\n            return\n    print('YES')\n    print('\\n'.join([' '.join(map(str, i)) for i in a]))\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "import sys\n\ndef getline() -> str:\n    return sys.stdin.readline().strip()\n\ndef solve():\n    (n, k) = list(map(int, getline().split()))\n    evens = list(range(2, n * k + 1, 2))\n    odds = list(range(1, n * k + 1, 2))\n    even_rows = len(evens) / k\n    odd_rows = len(odds) / k\n    if even_rows.is_integer() and odd_rows.is_integer():\n        print('YES')\n        (l, r) = (0, k)\n        evens = iter(evens)\n        odds = iter(odds)\n        mtx = [[] for _ in range(n)]\n        for i in range(1, n + 1):\n            if i % 2 == 1:\n                for _ in range(k):\n                    mtx[i - 1].append(next(odds))\n            else:\n                for _ in range(k):\n                    mtx[i - 1].append(next(evens))\n        for row in mtx:\n            print(' '.join(map(str, row)))\n    else:\n        print('NO')\nt = int(getline())\nfor _ in range(t):\n    solve()", "import sys\n\ndef printMatriz(n, k):\n    for i in range(n):\n        aux = i + 1\n        ret = ''\n        for j in range(k):\n            ret += str(aux) + ' '\n            aux += n\n        print(ret.strip())\nl = sys.stdin.readlines()\nt = int(l[0].replace('\\n', ''))\nfor i in range(1, t + 1):\n    (n, k) = [int(x) for x in l[i].replace('\\n', '').split()]\n    ehPossivel = False\n    if k == 1 or n % 2 == 0:\n        ehPossivel = True\n    if ehPossivel:\n        print('YES')\n        printMatriz(n, k)\n        continue\n    print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    ans = [[0] * k for _ in range(n)]\n    c = 1\n    for i in range(k):\n        for j in range(n):\n            ans[j][i] = c\n            c += 1\n    ok = True\n    s = 0\n    for i in range(k):\n        s += ans[0][i]\n        if s % (i + 1) != 0:\n            ok = False\n    if ok:\n        print('YES')\n        for a in ans:\n            print(' '.join(map(str, a)))\n    else:\n        print('NO')", "from collections import Counter\nfrom queue import Queue\nimport math\nT = int(input())\nfor t in range(T):\n    (n, k) = [int(k) for k in input().split()]\n    if n % 2 == 1:\n        if k > 1:\n            print('NO')\n        else:\n            print('YES')\n            for idx in range(n):\n                print(1 + idx)\n    else:\n        print('YES')\n        for jdx in range(n // 2):\n            print(' '.join([str(2 * idx + 1 + 2 * k * jdx) for idx in range(k)]))\n            print(' '.join([str(2 * idx + 2 + 2 * k * jdx) for idx in range(k)]))", "def pallindrome(s: str):\n    i = 0\n    j = len(s) - 1\n    while i <= j:\n        if s[i] != s[j]:\n            return False\n        i += 1\n        j -= 1\n    return True\n\ndef find_matrix_and_print(n: int, k: int):\n    evens = iter(range(2, n * k + 1, 2))\n    odds = iter(range(1, n * k + 1, 2))\n    evenFill = True\n    i = 0\n    while i < n:\n        arr = []\n        if evenFill:\n            for j in range(k):\n                even = next(evens, None)\n                if even:\n                    arr.append(even)\n            evenFill = False\n        else:\n            for j in range(k):\n                odd = next(odds, None)\n                if odd:\n                    arr.append(odd)\n            evenFill = True\n        if len(arr) > 0:\n            i += 1\n            print(' '.join([str(x) for x in arr]))\n\ndef main():\n    T = input()\n    for _ in range(int(T)):\n        l1 = input()\n        n = int(l1.split()[0])\n        k = int(l1.split()[1])\n        if n == 1:\n            if k == 1:\n                print('YES')\n                print(1)\n            else:\n                print('NO')\n            continue\n        if k == 1 or n % 2 == 0:\n            print('YES')\n            find_matrix_and_print(n, k)\n            continue\n        else:\n            print('NO')\nmain()", "T = int(input())\nfor _ in range(T):\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(n):\n            print(i + 1)\n    elif n % 2 == 1:\n        print('NO')\n    else:\n        print('YES')\n        for i in range(n):\n            if i < n / 2:\n                print(' '.join([str(2 * (k * i + j) + 1) for j in range(k)]))\n            else:\n                print(' '.join([str(2 * (int(k * (i - n / 2)) + j) + 2) for j in range(k)]))", "def main():\n    (n, k) = map(int, input().split())\n    if k == 1:\n        return 'YES\\n' + '\\n'.join((str(i + 1) for i in range(n)))\n    elif n % 2 == 1 and k >= 2:\n        return 'NO'\n    return 'YES\\n' + '\\n'.join((' '.join((str(2 * s * k + 2 * i + j + 1) for i in range(k))) for s in range(n // 2) for j in [0, 1]))\ncases = int(input())\nfor _ in range(cases):\n    print(main())", "def fill_mass(n, k):\n    odd = 1\n    while odd <= n * k:\n        odd_str = ''\n        for j in range(k):\n            odd_str += str(odd) + ' '\n            odd += 2\n        print(odd_str[:-1])\n    even = 2\n    while even <= n * k:\n        even_str = ''\n        for j in range(k):\n            even_str += str(even) + ' '\n            even += 2\n        print(even_str[:-1])\n\ndef okeya():\n    number_of_ids = int(input())\n    input_list = []\n    for i in range(number_of_ids):\n        input_list.append(input().split())\n    for i in input_list:\n        n_k = i\n        n = int(n_k[0])\n        k = int(n_k[1])\n        if k == 1:\n            print('YES')\n            fill_mass(n, k)\n            continue\n        if n * k % 2 == 0 and n * k // 2 % k == 0:\n            print('YES')\n            fill_mass(n, k)\n            continue\n        print('NO')\nokeya()", "def fill_mass(n, k):\n    odd = 1\n    while odd <= n * k:\n        odd_str = ''\n        for j in range(k):\n            odd_str += str(odd) + ' '\n            odd += 2\n        print(odd_str[:-1])\n    even = 2\n    while even <= n * k:\n        even_str = ''\n        for j in range(k):\n            even_str += str(even) + ' '\n            even += 2\n        print(even_str[:-1])\n\ndef okeya():\n    number_of_ids = int(input())\n    input_list = []\n    for i in range(number_of_ids):\n        input_list.append(input().split())\n    for i in input_list:\n        n_k = i\n        n = int(n_k[0])\n        k = int(n_k[1])\n        if k == 1:\n            print('YES')\n            fill_mass(n, k)\n            continue\n        if n * k % 2 == 0 and n * k // 2 % k == 0:\n            print('YES')\n            fill_mass(n, k)\n            continue\n        print('NO')\nokeya()", "t = int(input())\nfor x in range(t):\n    (n, k) = map(int, input().split(' '))\n    if k == 1:\n        print('YES')\n        for y in range(n):\n            print(y + 1)\n    elif n * k % 2 == 0 and n % 2 == 0:\n        print('YES')\n        arr = [[0 for i in range(k)] for j in range(n)]\n        cou = 1\n        for q in range(k):\n            for z in range(n):\n                arr[z][q] = str(cou)\n                cou += 1\n        for b in range(n):\n            print(' '.join(arr[b]))\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (n, k) = list(map(int, input().split()))\n    if k == 1:\n        print('YES')\n        for i in range(n):\n            print(i + 1)\n    elif n % 2 != 0:\n        print('NO')\n    else:\n        print('YES')\n        val = 0\n        for j in range(n // 2):\n            print(' '.join([str(val + 1 + 2 * jj) for jj in range(k)]))\n            print(' '.join([str(val + 2 + 2 * jj) for jj in range(k)]))\n            val = val + k * 2", "def ga():\n    return list(map(int, input().split()))\nfor _ in range(int(input())):\n    (n, k) = ga()\n    if k == 1:\n        print('YES')\n        for i in range(n):\n            print(i + 1)\n        continue\n    odds = [i for i in range(1, n * k + 1) if i % 2]\n    evens = [i for i in range(1, n * k + 1) if i % 2 == 0]\n    if len(odds) != len(evens) or len(odds) % k != 0 or len(odds) // k != n // 2:\n        print('NO')\n        continue\n    print('YES')\n    ans = []\n    i = 0\n    while i < len(odds):\n        ans += [odds[i:i + k]]\n        ans += [evens[i:i + k]]\n        i += k\n    for i in ans:\n        i = list(map(str, i))\n        print(' '.join(i))", "t = int(input())\nfor _ in range(0, t):\n    inputs = [int(num) for num in input().split()]\n    n = inputs[0]\n    k = inputs[1]\n    if n == 1 and k == 1:\n        print('YES')\n        print('1')\n    elif n == 1 and k > 1:\n        print('NO')\n    elif n % 2 == 1 and k > 1:\n        print('NO')\n    elif k == 1:\n        print('YES')\n        i = 1\n        for i in range(1, n + 1):\n            print(i)\n    else:\n        print('YES')\n        rows = 0\n        max_num = n * k\n        i = 0\n        kk = 1\n        for i in range(0, int(n / 2)):\n            s = ''\n            j = 0\n            for j in range(0, k):\n                s += str(kk) + ' '\n                kk += 2\n            print(s.strip())\n        kk = 2\n        i = 0\n        for i in range(0, int(n / 2)):\n            s = ''\n            j = 0\n            for j in range(0, k):\n                s += str(kk) + ' '\n                kk += 2\n            print(s.strip())", "for i in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    m = n * k\n    a = 1\n    b = 2\n    if m % 2 == 0:\n        f = int(m / 2)\n    else:\n        f = int((m + 1) / 2)\n    if f % k != 0:\n        print('NO')\n    else:\n        print('YES')\n        for i in range(1, n + 1):\n            d = ''\n            if i % 2 == 0:\n                for i in range(k):\n                    d += str(b) + ' '\n                    b += 2\n                print(d)\n            else:\n                for i in range(k):\n                    d += str(a) + ' '\n                    a += 2\n                print(d)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(n):\n            print(i + 1)\n    elif n % 2 == 1:\n        print('NO')\n    else:\n        print('YES')\n        for i in range(n):\n            line = []\n            for j in range(k):\n                if i % 2 == 0:\n                    line.append(1 + i * k + 2 * j)\n                else:\n                    line.append(2 + (i - 1) * k + 2 * j)\n            print(' '.join((str(num) for num in line)))", "def solve(n, k):\n    a = n * k\n    odd = int(a // 2)\n    even = int(a // 2)\n    if a % 2:\n        odd += 1\n    if odd % k == 0 and even % k == 0:\n        res = []\n        j = 0\n        for i in range(1, n + 1):\n            if i % 2:\n                res.append([2 * k * j + 2 * p + 1 for p in range(k)])\n            else:\n                res.append([2 * k * j + 2 * p + 2 for p in range(k)])\n                j += 1\n        return (True, res)\n    return (False, [])\nout = []\nt = int(input())\nfor case in range(t):\n    (n, k) = list(map(int, input().split(' ')))\n    (res, answ) = solve(n, k)\n    if res:\n        out.append('YES')\n        out.append('\\n'.join([' '.join(map(str, el)) for el in answ]))\n    else:\n        out.append('NO')\nprint('\\n'.join(out))", "t = int(input())\nfor i in range(t):\n    arr1 = list(map(int, input().rstrip().split()))\n    n = arr1[0]\n    k = arr1[1]\n    a = n * k\n    if 1 == 1:\n        m = 1\n        m1 = 2\n        arr = []\n        h = 0\n        f = 0\n        for i in range(a):\n            if m <= a:\n                arr.append(str(m))\n                m += 2\n            else:\n                if i % k != 0 and f == 0:\n                    print('NO')\n                    h = 1\n                    break\n                f = 1\n                arr.append(str(m1))\n                m1 += 2\n        if h == 1:\n            g = 1\n        else:\n            print('YES')\n            for i in range(n):\n                print(' '.join(arr[0 + i * k:k + i * k]))", "import math\n\ndef intlist():\n    return [int(i) for i in input().split(' ')]\n\ndef stringlsit():\n    return input().split(' ')\n\ndef solve():\n    (n, k) = intlist()\n    if n % 2 and k > 1:\n        return 'NO'\n    ans = 'YES'\n    for i in range(n):\n        l = []\n        for j in range(k):\n            l.append(str(j * n + i + 1))\n        ans += '\\n' + ' '.join(l)\n    return ans\nt = input()\nfor tt in range(int(t)):\n    print(solve())", "def solve():\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        return\n    if n % 2 == 1:\n        print('NO')\n        return\n    print('YES')\n    for i in range(1, n + 1):\n        print(*[i for i in range(i, n * k + 1, n)])\nfor _ in range(int(input())):\n    solve()", "for s in [*open(0)][1:]:\n    (n, k) = map(int, s.split())\n    f = k > 1 == n % 2\n    print('YNEOS'[f::2])\n    for i in range(~-f & n):\n        print(*range(i + 1, n * k + 1, n))", "def solve():\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        return\n    if n % 2 == 1:\n        print('NO')\n        return\n    print('YES')\n    for i in range(1, n + 1):\n        print(*[i for i in range(i, n * k + 1, n)])\nfor _ in range(int(input())):\n    solve()", "for _ in [0] * int(input()):\n    (n, k) = list(map(int, input().split()))\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        continue\n    elif n % 2 == 0:\n        print('YES')\n        for i in range(n):\n            print(*range(i + 1, k * n + 1, n))\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        continue\n    elif n % 2 == 0:\n        print('YES')\n        for i in range(n):\n            print(*range(i + 1, k * n + 1, n))\n    else:\n        print('NO')", "def solve():\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        return\n    if n % 2 == 1:\n        print('NO')\n        return\n    print('YES')\n    for i in range(1, n + 1):\n        print(*[i for i in range(i, n * k + 1, n)])\nfor _ in range(int(input())):\n    solve()", "import io\nimport os\nimport sys\n\ndef main():\n    t = int(input())\n    q = 500 ** 2\n    arr = [x for x in range(1, q + 1, 2)] + [x for x in range(2, q + 1, 2)]\n    for _ in range(t):\n        (n, k) = map(int, input().split())\n        if k == 1:\n            ans = 'YES\\n'\n            for x in range(1, n * k + 1):\n                ans += f'{x}\\n'\n            sys.stdout.write(ans)\n            continue\n        p = n * k\n        if p % 2 or n == 1 or n % 2:\n            sys.stdout.write('NO\\n')\n        else:\n            i = 0\n            j = q // 2\n            ans = 'YES\\n'\n            for a in range(n):\n                if a % 2 == 0:\n                    for _ in range(k):\n                        ans += f'{arr[i]} '\n                        i += 1\n                else:\n                    for _ in range(k):\n                        ans += f'{arr[j]} '\n                        j += 1\n                ans += '\\n'\n            sys.stdout.write(ans)\nmain()", "def solve():\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        return\n    if n % 2 == 1:\n        print('NO')\n        return\n    print('YES')\n    for i in range(1, n + 1):\n        print(*[i for i in range(i, n * k + 1, n)])\nfor _ in range(int(input())):\n    solve()", "def solve():\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        return\n    if n % 2 == 1:\n        print('NO')\n        return\n    print('YES')\n    for i in range(1, n + 1):\n        print(*[i for i in range(i, n * k + 1, n)])\nfor _ in range(int(input())):\n    solve()", "I = lambda : map(int, input().split())\nfor _ in range(int(input())):\n    (n, k) = I()\n    if k == 1:\n        print('YES')\n        i = 1\n        while i <= n * k:\n            print(*list(range(i, i + k, 1)))\n            i = i + k\n    elif n == 1:\n        print('NO')\n    elif n % 2 == 0:\n        print('YES')\n        x = list(range(1, n * k + 1, 2))\n        y = list(range(2, n * k + 1, 2))\n        for i in range(0, len(x), k):\n            print(*x[i:i + k])\n        for i in range(0, len(y), k):\n            print(*y[i:i + k])\n    else:\n        print('NO')", "def solve():\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        return\n    if n % 2 == 1:\n        print('NO')\n        return\n    print('YES')\n    for i in range(1, n + 1):\n        print(*[i for i in range(i, n * k + 1, n)])\nfor _ in range(int(input())):\n    solve()", "def solve():\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        return\n    if n % 2 == 1:\n        print('NO')\n        return\n    print('YES')\n    for i in range(1, n + 1):\n        print(*[i for i in range(i, n * k + 1, n)])\nfor _ in range(int(input())):\n    solve()", "def solve():\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        return\n    if n % 2 == 1:\n        print('NO')\n        return\n    print('YES')\n    for i in range(1, n + 1):\n        print(*[i for i in range(i, n * k + 1, n)])\nfor _ in range(int(input())):\n    solve()", "def solve():\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        return\n    if n % 2 == 1:\n        print('NO')\n        return\n    print('YES')\n    for i in range(1, n + 1):\n        print(*[i for i in range(i, n * k + 1, n)])\nfor _ in range(int(input())):\n    solve()", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n    elif n % 2 == 1:\n        print('NO')\n    else:\n        print('YES')\n        for i in range(1, n + 1):\n            print(*[i for i in range(i, n * k + 1, n)])\n    t -= 1", "def solve():\n    (n, k) = map(int, input().split())\n    if k >= 2 and n % 2 == 1:\n        print('NO')\n    else:\n        print('YES')\n        for i in range(1, n + 1):\n            print(*[i for i in range(i, n * k + 1, n)])\nfor _ in range(int(input())):\n    solve()", "from sys import stdin\ninput = stdin.readline\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n    elif n % 2 == 1:\n        print('NO')\n    else:\n        print('YES')\n        numbers = list(range(1, n * k + 1, 2)) + list(range(2, n * k + 1, 2))\n        start = 0\n        for i in range(n):\n            print(*numbers[start:start + k])\n            start += k", "def solve():\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        return\n    if n % 2 == 1:\n        print('NO')\n        return\n    print('YES')\n    for i in range(1, n + 1):\n        print(*[i for i in range(i, n * k + 1, n)])\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n    elif n % 2 == 1:\n        print('NO')\n    else:\n        print('YES')\n        for i in range(1, n + 1):\n            print(*[i for i in range(i, n * k + 1, n)])", "for s in [*open(0)][1:]:\n    (n, k) = map(int, s.split())\n    f = k > 1 == n % 2\n    print('YNEOS'[f::2])\n    for i in range(~-f & n):\n        print(*range(i + 1, n * k + 1, n))", "t = int(input())\nfor x in range(t):\n    (n, k) = [int(i) for i in input().split(' ')]\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n    elif n % 2 == 1:\n        print('NO')\n    else:\n        print('YES')\n        for i in range(1, n + 1):\n            print(*[j for j in range(i, n * k + 1, n)])", "def solve():\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        return\n    if n % 2 == 1:\n        print('NO')\n        return\n    print('YES')\n    for i in range(1, n + 1):\n        print(*[i for i in range(i, n * k + 1, n)])\nfor _ in range(int(input())):\n    solve()", "cas = int(input())\nfor i in range(cas):\n    (n, k) = [int(x) for x in input().split()]\n    if k != 1:\n        if n % 2 != 0:\n            print('NO')\n        else:\n            print('YES')\n            for j in range(1, n + 1):\n                print(*range(j, k * n + j, n))\n    else:\n        print('YES')\n        l = list(range(1, n + 1))\n        for r in l:\n            print(r)", "for s in [*open(0)][1:]:\n    (n, k) = map(int, s.split())\n    f = k > 1 == n % 2\n    print('YNEOS'[f::2])\n    for i in range((f ^ 1) * n):\n        print(*range(i + 1, n * k + 1, n))", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_ls():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef main():\n    for _ in range(int(input())):\n        (n, k) = map(int, input().split())\n        if k == 1:\n            print('YES')\n            for i in range(1, n + 1):\n                print(i)\n        elif n % 2 == 1:\n            print('NO')\n        else:\n            print('YES')\n            for i in range(1, n + 1):\n                print(*[j for j in range(i, n * k + 1, n)])\nmain()", "def okea():\n    (n, k) = [int(_) for _ in input().split()]\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        return\n    if n % 2 == 1:\n        print('NO')\n        return\n    print('YES')\n    for i in range(1, n + 1):\n        print(*[i for i in range(i, n * k + 1, n)])\nfor _ in range(int(input())):\n    okea()", "def main():\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        return\n    if n % 2 == 1:\n        print('NO')\n        return\n    print('YES')\n    for i in range(1, n + 1):\n        print(*[j for j in range(i, n * k + 1, n)])\nfor _ in range(int(input())):\n    main()", "t = int(int(input()))\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    odd = True\n    prev = 0\n    lst = []\n    for i in range(n):\n        lst.append(list(range(prev + 1, prev + 1 + 2 * m, 2)))\n        if odd:\n            prev = lst[-1][0]\n            odd = False\n        else:\n            prev = lst[-1][-1]\n            odd = True\n    if lst[-1][-1] > n * m:\n        print('NO')\n    else:\n        print('YES')\n        for i in lst:\n            print(*i)", "for _ in range(0, int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0 or k == 1:\n        print('YES')\n        if k == 1:\n            for i in range(1, n + 1):\n                print(i)\n        else:\n            for i in range(0, n * k, 2 * k):\n                print(*range(i + 1, i + k * 2 + 1, 2))\n                print(*range(i + 2, i + k * 2 + 2, 2))\n    else:\n        print('NO')", "def solve():\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        return\n    if n % 2 == 1:\n        print('NO')\n        return\n    print('YES')\n    for i in range(1, n + 1):\n        print(*[i for i in range(i, n * k + 1, n)])\nfor _ in range(int(input())):\n    solve()", "def solve():\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        return\n    if n % 2 == 1:\n        print('NO')\n        return\n    print('YES')\n    for i in range(1, n + 1):\n        print(*[i for i in range(i, n * k + 1, n)])\nfor _ in range(int(input())):\n    solve()", "def solve():\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        return\n    if n % 2 == 1:\n        print('NO')\n        return\n    print('YES')\n    for i in range(1, n + 1):\n        print(*[i for i in range(i, n * k + 1, n)])\nfor _ in range(int(input())):\n    solve()", "def solve():\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        return\n    if n % 2 == 1:\n        print('NO')\n        return\n    print('YES')\n    for i in range(1, n + 1):\n        print(*[i for i in range(i, n * k + 1, n)])\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        continue\n    if n % 2:\n        print('NO')\n        continue\n    print('YES')\n    for i in range(1, n + 1):\n        print(*[i for i in range(i, n * k + 1, n)])", "def solve():\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        return\n    if n % 2 == 1:\n        print('NO')\n        return\n    print('YES')\n    for i in range(1, n + 1):\n        print(*[i for i in range(i, n * k + 1, n)])\nfor _ in range(int(input())):\n    solve()", "for t in range(int(input())):\n    (a, b) = map(int, input().split())\n    if b == 1:\n        print('YES')\n        for k in range(1, a + 1):\n            print(k)\n    elif a == 1:\n        print('NO')\n    elif a * b % 2 == 0 and a % 2 == 0:\n        print('YES')\n        for i in range(a // 2):\n            print(*list(range(1 + i * b * 2, (i + 1) * b * 2 + 1, 2)))\n            print(*list(range(2 + i * b * 2, (i + 1) * b * 2 + 2, 2)))\n    else:\n        print('NO')", "def solve():\n    (n, x) = map(int, input().split())\n    if x == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        return\n    if n % 2 == 1:\n        print('NO')\n        return\n    print('YES')\n    for i in range(1, n + 1):\n        print(*[i for i in range(i, n * x + 1, n)])\nfor _ in range(int(input())):\n    solve()", "for s in [*open(0)][1:]:\n    (n, k) = map(int, s.split())\n    f = k > 1 == n % 2\n    print('YNEOS'[f::2])\n    for i in range(~-f & n):\n        print(*range(i + 1, n * k + 1, n))", "def solve():\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        return\n    if n % 2 == 1:\n        print('NO')\n        return\n    print('YES')\n    for i in range(1, n + 1):\n        print(*[i for i in range(i, n * k + 1, n)])\nfor _ in range(int(input())):\n    solve()", "def solve():\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        return\n    if n % 2 == 1:\n        print('NO')\n        return\n    print('YES')\n    for i in range(1, n + 1):\n        print(*[i for i in range(i, n * k + 1, n)])\nfor _ in range(int(input())):\n    solve()", "def solve():\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        return\n    if n % 2 == 1:\n        print('NO')\n        return\n    print('YES')\n    for i in range(1, n + 1):\n        print(*[i for i in range(i, n * k + 1, n)])\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n    elif n % 2 == 1:\n        print('NO')\n    else:\n        print('YES')\n        for i in range(1, n + 1):\n            print(*[i for i in range(i, n * k + 1, n)])", "def solve():\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        return\n    if n % 2 == 1:\n        print('NO')\n        return\n    print('YES')\n    for i in range(1, n + 1):\n        print(*[i for i in range(i, n * k + 1, n)])\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(n):\n            print(i + 1)\n    elif n % 2:\n        print('NO')\n    else:\n        print('YES')\n        price = 1\n        for i in range(0, n, 2):\n            print(*range(price, price + 2 * k, 2))\n            print(*range(price + 1, price + 1 + 2 * k, 2))\n            price += 2 * k", "def solve():\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        return\n    if n % 2 == 1:\n        print('NO')\n        return\n    print('YES')\n    for i in range(1, n + 1):\n        print(*[i for i in range(i, n * k + 1, n)])\nfor _ in range(int(input())):\n    solve()", "def solve():\n    (n, k) = [int(x) for x in input().split()]\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        return\n    if n % 2 != 0:\n        print('NO')\n        return\n    r = []\n    print('YES')\n    for i in range(2, n * k + 1, 2):\n        r.append(i)\n    for i in range(1, n * k + 1, 2):\n        r.append(i)\n    for s in range(0, n * k, k):\n        print(*r[s:s + k])\nt = int(input())\nfor _ in range(t):\n    solve()", "def solve():\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        return\n    if n % 2 == 1:\n        print('NO')\n        return\n    print('YES')\n    for i in range(1, n + 1):\n        print(*[i for i in range(i, n * k + 1, n)])\nfor _ in range(int(input())):\n    solve()", "for s in [*open(0)][1:]:\n    (n, k) = map(int, s.split())\n    f = k > 1 == n % 2\n    print('YNEOS'[f::2])\n    for i in range(~-f & n):\n        print(*range(i + 1, n * k + 1, n))", "for t in range(int(input())):\n    (a, b) = map(int, input().split())\n    if b == 1:\n        print('YES')\n        for k in range(1, a + 1):\n            print(k)\n    elif a == 1:\n        print('NO')\n    elif a * b % 2 == 0 and a % 2 == 0:\n        print('YES')\n        b = b * 2\n        b1 = 0\n        for i in range(a // 2):\n            b2 = b1 + b\n            print(*list(range(1 + b1, b2 + 1, 2)))\n            print(*list(range(2 + b1, b2 + 2, 2)))\n            b1 = b2\n    else:\n        print('NO')", "def solve():\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        return\n    if n % 2 == 1:\n        print('NO')\n        return\n    print('YES')\n    for i in range(1, n + 1):\n        print(*[i for i in range(i, n * k + 1, n)])\nfor _ in range(int(input())):\n    solve()", "def printShelves(odd, even, k):\n    for i in range(0, len(odd), k):\n        st = f'{odd[i]}'\n        for j in range(1, k):\n            st += f' {odd[i + j]}'\n        print(st)\n    for i in range(0, len(even), k):\n        st = f'{even[i]}'\n        for j in range(1, k):\n            st += f' {even[i + j]}'\n        print(st)\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    its = n * k\n    exists = True\n    aux = []\n    for i in range(1, its + 1):\n        aux.append(i)\n    even = []\n    odd = []\n    for i in range(its):\n        if aux[i] % 2:\n            odd.append(aux[i])\n        else:\n            even.append(aux[i])\n    if k > 1:\n        if its % 2:\n            exists = False\n        elif len(even) % k:\n            exists = False\n    if exists:\n        print('YES')\n        if k == 1:\n            for i in range(1, n + 1):\n                print(i)\n        else:\n            printShelves(even, odd, k)\n    else:\n        print('NO')", "def solve():\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        return\n    if n % 2 == 1:\n        print('NO')\n        return\n    print('YES')\n    for i in range(1, n + 1):\n        print(*[i for i in range(i, n * k + 1, n)])\nfor _ in range(int(input())):\n    solve()", "def okea():\n    (n, k) = [int(x) for x in input().split()]\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        return\n    if n % 2 == 1:\n        print('NO')\n        return\n    print('YES')\n    for i in range(1, n + 1):\n        print(*[x for x in range(i, n * k + 1, n)])\ncases = int(input())\nfor case in range(cases):\n    okea()", "for s in [*open(0)][1:]:\n    (n, k) = map(int, s.split())\n    f = k > 1 == n % 2\n    print('YNEOS'[f::2])\n    for i in range(~-f & n):\n        print(*range(i + 1, n * k + 1, n))", "def solve():\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        return\n    if n % 2 == 1:\n        print('NO')\n        return\n    print('YES')\n    for i in range(1, n + 1):\n        print(*[i for i in range(i, n * k + 1, n)])\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        continue\n    if n % 2 == 1:\n        print('NO')\n        continue\n    print('YES')\n    for i in range(1, n + 1):\n        print(*[i for i in range(i, n * k + 1, n)])", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print('YES')\n        for i in range(1, n + 1):\n            print(i)\n        continue\n    if n & 1:\n        print('NO')\n        continue\n    print('YES')\n    for i in range(1, n + 1):\n        print(*[i for i in range(i, n * k + 1, n)])", "for s in [*open(0)][1:]:\n    (n, k) = map(int, s.split())\n    f = k > 1 == n % 2\n    print('YNEOS'[f::2])\n    for i in range(~-f & n):\n        print(*range(i + 1, n * k + 1, n))", "for s in [*open(0)][1:]:\n    (n, k) = map(int, s.split())\n    f = k > 1 == n % 2\n    print('YNEOS'[f::2])\n    for i in range(~-f & n):\n        print(*range(i + 1, n * k + 1, n))"]