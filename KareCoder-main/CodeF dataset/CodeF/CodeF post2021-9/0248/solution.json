["from sys import stdin, stdout\n\ndef sol(a):\n    if a == 1:\n        return 0\n    else:\n        c = a * (a - 1)\n        for i in range(1, a + 1):\n            c = c * i % (10 ** 9 + 7)\n        return c\nn = int(stdin.readline())\nfor i in range(n):\n    a = int(stdin.readline())\n    print(sol(a))", "from sys import stdin, stdout\nfrom math import gcd\ninput = stdin.readline\n\ndef fact_mod(n):\n    prod = n * (n - 1) % (1000000000.0 + 7)\n    while n > 1:\n        prod = prod * n % (1000000000.0 + 7)\n        n -= 1\n    return prod\nfor _ in range(int(input())):\n    n = int(input())\n    print(int(fact_mod(n)))", "import sys\ninput = sys.stdin.readline\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    ans = N * (N - 1)\n    for i in range(1, N + 1):\n        ans *= i\n        ans %= 1000000007\n    print(ans)", "import math\nimport sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef print_min(miner):\n    if miner == 9999999999999999:\n        print(-1, end=' ')\n    else:\n        print(miner, end=' ')\nfor _ in range(inp()):\n    n = inp()\n    mod = 1000000007\n    kans = n ** 2 - n\n    for i in range(1, n + 1):\n        kans = kans * i % mod\n    print(kans)", "def fact(n):\n    f = 1\n    for i in range(2, n + 1):\n        f = f * i % 1000000007\n    return f\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    res = fact(n) * n * (n - 1) % 1000000007\n    print(res)", "M = 10 ** 9 + 7\nf = [1]\nfor i in range(1, 7 ** 6):\n    f += (f[-1] * i % M,)\nfor n in [*map(int, open(0))][1:]:\n    print(n * (n - 1) * f[n] % M)", "def Emordnilap(n):\n    factN = moduloFactorial(n)\n    b = n * (n - 1) % (10 ** 9 + 7)\n    return factN * b % (10 ** 9 + 7)\n\ndef moduloFactorial(n):\n    mem = [0 for i in range(n + 1)]\n    mem[0] = 1\n    for i in range(1, n + 1):\n        mem[i] = i * mem[i - 1] % (10 ** 9 + 7)\n    return mem[n]\nt = int(input())\noutput = []\nfor i in range(t):\n    n = int(input())\n    output.append(Emordnilap(n))\nfor answer in output:\n    print(answer)", "t = int(input())\nmod = int(1000000000.0 + 7)\n\ndef solve():\n    n = int(input())\n    ans = n\n    for i in range(1, n + 1):\n        ans = ans * i % mod\n    ans = ans * (n - 1) % mod\n    print(ans)\nfor _ in range(t):\n    solve()", "import sys\ninput = sys.stdin.readline\nf = [0] * 100001\nf[0] = 1\nfor i in range(1, 100001):\n    f[i] = f[i - 1] * i\n    f[i] %= 10 ** 9 + 7\n\ndef ans(n):\n    return f[n] * n * (n - 1) % (10 ** 9 + 7)\nfor t in range(int(input())):\n    n = int(input())\n    print(ans(n))", "n = int(input())\na = [0 for i in range(n)]\nfor i in range(n):\n    k = int(input())\n    fac = 1\n    for j in range(2, k + 1):\n        fac = j * fac % 1000000007\n    sig = 0\n    a[i] = fac * k * (k - 1) % 1000000007\nfor i in range(n):\n    print(a[i])", "def main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        temp = n * (n - 1)\n        for i in range(1, n + 1):\n            temp = temp * i % 1000000007\n        print(temp)\nmain()", "t = int(input())\nfor itr in range(t):\n    n = int(input())\n    MOD = 1000000007\n    ans = 1\n    for i in range(2, n + 1):\n        ans *= i\n        ans %= MOD\n    ans *= n * (n - 1)\n    ans %= MOD\n    print(ans)", "import heapq\nfrom collections import *\nimport math\n\ndef factorial(n):\n    fact = 1\n    for i in range(1, n + 1):\n        fact = fact * i\n        fact %= 1000000007\n    return fact\n\ndef solve():\n    n = int(input())\n    if n == 1:\n        print(0)\n        return\n    ans = 0\n    t = factorial(n)\n    ans = t % 1000000007 * (n % 1000000007) * ((n - 1) % 1000000007) % 1000000007\n    print(ans % 1000000007)\nt = int(input())\nfor _ in range(t):\n    solve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    res = n * (n - 1)\n    for i in range(1, n + 1):\n        res = res * i % 1000000007\n    print(res)", "def solve():\n    n = int(input())\n    if n == 1:\n        print('0')\n        return\n    else:\n        m = int(1000000000.0 + 7)\n        ans = n * (n - 1)\n        for i in range(1, n + 1):\n            ans = ans * i % m\n        print(ans)\nt = int(input())\nwhile t:\n    t -= 1\n    solve()", "MOD = 1000000007\nfor _ in range(int(input())):\n    n = int(input())\n    index = 1\n    count = n * (n - 1)\n    while index <= n:\n        count = count % MOD * index % MOD\n        index += 1\n    print(count)", "def perm(n):\n    res = n * (n - 1)\n    for i in range(2, n + 1):\n        res *= i\n        res %= 1000000007\n    return res % 1000000007\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(perm(n))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    num = n * (n - 1)\n    if n == 1:\n        print(0)\n        continue\n    for i in range(1, n + 1):\n        num = num * i % (10 ** 9 + 7)\n    print(num)", "import sys\ninput = sys.stdin.readline\ndivision = int(1000000000.0 + 7)\ndp = [0, 1] + [0 for i in range(10 ** 5 - 1)]\nfor i in range(2, 100001):\n    dp[i] = dp[i - 1] * i % division\nT = int(input())\nfor i in range(T):\n    n = int(input())\n    print(dp[n] * n * (n - 1) % division)", "def solve():\n    num_of_elem = int(input())\n    if num_of_elem == 1:\n        print(0)\n        return\n    else:\n        moderator = 1000000007\n        final_result = num_of_elem * (num_of_elem - 1)\n        for index in range(1, num_of_elem + 1):\n            final_result = final_result * index % moderator\n        print(final_result)\ntest_cases = int(input())\nfor i in range(test_cases):\n    solve()", "import math\nn = input()\nOutput = []\nmaxi = pow(10, 9) + 7\nfor i in range(int(n)):\n    k = int(input())\n    o = 1\n    if k == 1:\n        o = 0\n    for i in range(k, 0, -1):\n        o = o * i\n        o = o % maxi\n    o = o * k * (k - 1)\n    o = o % maxi\n    Output.append(o)\nfor i in Output:\n    print(i)", "def mod_factorial(n, m):\n    if n < 2:\n        return 0\n    else:\n        res = 1\n        for i in range(2, n + 1):\n            res = res * i % m\n        return res\nconst = 1000000007\nfor _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(0)\n    else:\n        p = n * (n - 1)\n        print(p * mod_factorial(n, const) % const)", "t = int(input())\nmod = 10 ** 9 + 7\nfor _ in range(t):\n    n = int(input())\n    s = n * (n - 1)\n    for k in range(1, n + 1):\n        s = k * s % mod\n    print(s)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    answer = n * (n - 1)\n    for i in range(1, n + 1):\n        answer *= i\n        answer %= 1000000007\n    print(answer)", "t = int(input())\nm = 10 ** 9 + 7\nfor _ in range(t):\n    n = int(input())\n    res = n * n\n    res = res % m\n    res *= n - 1\n    res = res % m\n    res *= n - 1\n    res = res % m\n    for i in range(2, n - 1):\n        res *= i\n        res = res % m\n    print(res)", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    mod = int(1000000000.0) + 7\n    ans = 1\n    for i in range(2, n + 1):\n        ans = ans * i % mod\n    ans = ans * n % mod\n    ans = ans * (n - 1) % mod\n    print(ans % mod)", "MOD = 1000000007\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    beauty = 1\n    for i in range(1, n + 1):\n        beauty = beauty * i % MOD\n    beauty = beauty * (n - 1) % MOD\n    beauty = beauty * n % MOD\n    print(beauty)", "limit = 1000000007\nt = int(input())\nfor k in range(t):\n    n = int(input())\n    inversion = n * (n - 1)\n    for i in range(2, n + 1):\n        inversion = inversion * i % limit\n    print(inversion % limit)", "for _ in range(int(input())):\n    n = int(input())\n    ans = 1\n    for i in range(1, n + 1):\n        ans = ans * i % (10 ** 9 + 7)\n    for i in [n, n - 1]:\n        ans = ans * i % (10 ** 9 + 7)\n    print(ans)", "def Solve():\n    n = int(input())\n    if n == 1:\n        return 0\n    else:\n        ans = 10 ** 9 + 7\n        res = n * (n - 1)\n        for i in range(1, n + 1):\n            res = res * i % ans\n        return res\n\ndef meow():\n    t = int(input())\n    while t != 0:\n        print(Solve())\n        t -= 1\nmeow()", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(0)\n    else:\n        mod = 10 ** 9 + 7\n        out = n * (n - 1)\n        for i in range(1, n + 1):\n            out = out * i % mod\n        print(out)", "TOMOD = 1000000007\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = n * (n - 1) % TOMOD\n    for i in range(1, n + 1):\n        x = x * i % TOMOD\n    print(x)", "def fact(n):\n    p = 1\n    for i in range(1, n + 1):\n        p = p * i % (10 ** 9 + 7)\n    return p\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    p = fact(n)\n    ans = p * (n * (n - 1))\n    ans = ans % (10 ** 9 + 7)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    ans = 1\n    for i in range(2, n + 1):\n        ans = ans * i\n        ans = ans % 1000000007\n    ans = ans * n % 1000000007\n    print(ans * (n - 1) % 1000000007)", "import itertools\nkol = int(input())\nfor j in range(0, kol):\n    n = int(input())\n    m = 10 ** 9 + 7\n    cost = n * (n - 1)\n    for i in range(1, n + 1):\n        cost = cost * i % m\n    res = cost\n    print(res)", "t = int(input())\nmod = int(1000000000.0 + 7)\nwhile t > 0:\n    n = int(input())\n    if n == 1:\n        print(0)\n    else:\n        summ = n * (n - 1)\n        for i in range(1, n + 1):\n            summ = summ * i % mod\n        print(summ)\n    t -= 1", "from itertools import permutations\n\ndef fact(n):\n    ans = 1\n    for i in range(1, n + 1):\n        ans *= i\n    return ans\n\ndef inversions(arr):\n    inv = 0\n    for i in range(0, len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] > arr[j]:\n                inv += 1\n    return inv\n\ndef solveB():\n    n = int(input())\n    ANS = (n - 1) * n\n    ANS = ANS % (10 ** 9 + 7)\n    for i in range(1, n + 1):\n        ANS *= i\n        ANS = ANS % (10 ** 9 + 7)\n    print(ANS)\n\ndef solveA():\n    n = int(input())\n    arr = [int(x) for x in input().split(' ')]\n    consecs = 0\n    currentPar = arr[0] % 2\n    for x in arr[1:]:\n        if x % 2 == currentPar:\n            consecs += 1\n        else:\n            currentPar = x % 2\n    print(consecs)\nt = int(input())\nfor tc in range(t):\n    solveB()", "MOD = 1000 * 1000 * 1000 + 7\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    if n == 1:\n        print(0)\n    else:\n        f = 1\n        for j in range(2, n + 1):\n            f = f * j % MOD\n        k = n - 1\n        m = (1 + k) * k\n        f = f * m % MOD\n        print(f)", "def fact(n):\n    ans = 1\n    for i in range(1, n + 1):\n        ans = ans * i % 1000000007\n    return ans % 1000000007\n\ndef solve():\n    n = int(input())\n    print(n * (n - 1) * fact(n) % 1000000007)\nt = int(input())\nfor i in range(1, t + 1):\n    solve()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n == 1:\n        print(0)\n    else:\n        mod = 1000000000.0 + 7\n        temp = n * (n - 1)\n        for j in range(1, n + 1):\n            temp = temp * j % mod\n        print(int(temp))", "import math\nm = 1000000000.0 + 7\ntc = int(input())\nfor i in range(tc):\n    num = int(input())\n    a = (num - 1) * num\n    i = 1\n    while i != num + 1:\n        a = a % m * i % m\n        i += 1\n    print(int(a))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    k = 1\n    for i in range(1, n + 1):\n        k = k * i % 1000000007\n    print(k * n * (n - 1) % 1000000007)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    sum = 1\n    for i in range(0, n):\n        sum = sum * (n - i) % 1000000007\n    print(sum * n * (n - 1) % 1000000007)\n    t = t - 1", "for _ in range(int(input())):\n    a = int(input())\n    mod = 1000000007\n    b = 1\n    ans = a * (a - 1)\n    while b <= a:\n        ans = ans % mod * b % mod\n        b += 1\n    print(ans)", "mid = 1000000007\nfor i in range(int(input())):\n    n = int(input())\n    mi = n * (n - 1)\n    for i in range(2, n + 1):\n        mi *= i\n        mi %= mid\n    print(mi)", "t = int(input())\nx = 1000000007\nfor i in range(0, t):\n    n = int(input())\n    ans = 1\n    y = 2\n    if n == 1:\n        print(0)\n    elif n == 2:\n        ans = 1\n        y = 2\n        print(4)\n    else:\n        for j in range(3, n + 1):\n            y = y * j % x\n        print(y * n * (n - 1) % x)", "n = int(input())\nmodulo = 1000000007\n\ndef factorial(alpha, modulo):\n    n = 1\n    for i in range(alpha):\n        n = n * (i + 1) % modulo\n    return n\nfor i in range(n):\n    ola = int(input())\n    print(ola * (ola - 1) * factorial(ola, modulo) % modulo)", "def fac(n):\n    ans = 1\n    for i in range(2, n + 1):\n        ans = ans * i % 1000000007\n    return ans % 1000000007\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    if n == 1:\n        print(0)\n    else:\n        print(fac(n) * n * (n - 1) % 1000000007)", "import math\nfact = [1]\nfor i in range(1, 10 ** 5 + 1, 1):\n    fact.append(i * fact[i - 1] % (10 ** 9 + 7))\nt = int(input())\nfor j in range(t):\n    n = int(input())\n    answer = n * (n - 1) * fact[n]\n    answer = answer % (10 ** 9 + 7)\n    print(answer)", "for i in range(int(input())):\n    k = int(input())\n    ans = k * (k - 1)\n    for kj in range(2, k + 1):\n        ans = ans * kj % 1000000007\n    print(ans)", "MOD = 1000000007\nt = int(input())\nfor t in range(t):\n    n = int(input())\n    fact = 1\n    for i in range(1, n + 1):\n        fact = fact * i % MOD\n    ans = n % MOD * (n - 1) % MOD % MOD * (fact % MOD) % MOD\n    print(ans)", "def factorial(x):\n    res = 1\n    for i in range(2, x + 1):\n        res = res * i % m\n    return res\nm = 1000000007\nfor _ in range(int(input())):\n    n = int(input())\n    print(factorial(n) % m * n % m * (n - 1) % m % m)", "def factorial(x):\n    res = 1\n    for i in range(2, x + 1):\n        res = res * i % m\n    return res\nm = 1000000007\nfor _ in range(int(input())):\n    n = int(input())\n    s = n * (n - 1)\n    print(factorial(n) * s % m)", "for _ in range(int(input())):\n    n = int(input())\n    ans = n\n    for i in range(n):\n        ans = ans * (i + 1) % 1000000007\n    ans = ans * (n - 1) % 1000000007\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    m = 1\n    for i in range(1, n + 1):\n        m = m * i % 1000000007\n    print(n * (n - 1) % 1000000007 * m % 1000000007)", "for i in range(int(input())):\n    n = int(input())\n    summ = n * (n - 1)\n    for i in range(1, n + 1):\n        summ = summ * i % (1000000000.0 + 7)\n    print(int(summ))", "for _ in range(int(input())):\n    n = int(input())\n    f = 1\n    m = int(1000000000.0 + 7)\n    for i in range(n):\n        f *= i + 1\n        f %= m\n    res = n * (n - 1) * f\n    res %= m\n    print(res)", "test_cases = int(input())\nwhile test_cases > 0:\n    test_cases -= 1\n    n = int(input())\n    mod = 1000000007\n    ans = 0\n    fact = 1\n    for i in range(1, n + 1):\n        fact = fact * i % mod\n    ans = fact * (n * (n - 1) // 2) % mod * 2 % mod\n    print(ans)", "def problem_b(n):\n    mod_num = 1000000007\n    total = 0\n    temp = 2\n    for i in range(n - 1):\n        total += temp\n        temp += 2\n    factorial = 1\n    for i in range(1, n + 1):\n        factorial *= i\n        factorial %= mod_num\n    return total * factorial % mod_num\nn_problems = int(input().strip())\nfor i in range(n_problems):\n    n = int(input().strip())\n    r = problem_b(n)\n    print(r)", "for _ in range(int(input())):\n    n = int(input())\n    mod = 1000000000.0 + 7\n    i = 1\n    ans = n * (n - 1)\n    for i in range(1, n + 1):\n        ans = ans * i % mod\n    print(int(ans))", "modd = 1000000007\nfor _ in range(int(input())):\n    summ = 1\n    n = int(input())\n    s1 = n * (n - 1) % modd\n    for i in range(1, n + 1):\n        summ = summ * i % modd\n    print(summ * s1 % modd)", "import sys\ninput = sys.stdin.readline\nf = [0] * 100001\nf[0] = 1\nfor i in range(1, 100001):\n    f[i] = f[i - 1] * i\n    f[i] %= 10 ** 9 + 7\n\ndef ans(n):\n    return f[n] * n * (n - 1) % (10 ** 9 + 7)\nfor t in range(int(input())):\n    n = int(input())\n    print(ans(n))", "import sys\ninput = sys.stdin.readline\nf = [0] * 100001\nf[0] = 1\nfor i in range(1, 100001):\n    f[i] = f[i - 1] * i\n    f[i] %= 10 ** 9 + 7\n\ndef ans(n):\n    return f[n] * n * (n - 1) % (10 ** 9 + 7)\nfor t in range(int(input())):\n    n = int(input())\n    print(ans(n))", "import math\n\ndef nb_inversion(size):\n    mod = 1000000007\n    nf = 1\n    for i in range(size):\n        nf = nf * (i + 1)\n        nf = nf % mod\n    ans = nf * size * (size - 1)\n    ans = ans % mod\n    print(ans)\nnb_case = int(input())\nfor i in range(nb_case):\n    arr_size = int(input())\n    nb_inversion(arr_size)", "MOD = 1000000007\n\ndef main():\n    i = int(input())\n    for _ in range(i):\n        n = int(input().strip('\\r\\n'))\n        res = n * (n - 1)\n        for i in range(2, n + 1):\n            res *= i\n            res = res % MOD\n        print(res)\nmain()", "m = 10 ** 9 + 7\nfor _ in range(int(input())):\n    n = int(input())\n    sol = n * (n - 1)\n    i = 1\n    while i != n + 1:\n        sol = sol % m * i % m\n        i += 1\n    print(sol)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    res = int((n - 1) * n)\n    m = int(1000000000.0 + 7)\n    j = int(1)\n    while j != n + 1:\n        res = res % m * j % m\n        j += 1\n    print(res)\n    t -= 1", "n = int(input(''))\nfor i in range(n):\n    a = int(input(''))\n    ans = a * (a - 1)\n    if a == 1:\n        print(0)\n    else:\n        for i in range(1, a + 1):\n            ans *= i\n            ans %= 1000000007\n        print(ans)", "from math import *\nfor z in range(int(input())):\n    n = int(input())\n    mod = 10 ** 9 + 7\n    ans = n * (n - 1)\n    for i in range(2, n + 1):\n        ans = ans * i % mod\n    print(ans)", "mod = 1000000007\nfac = [1]\nfor i in range(1, 100001):\n    fac.append(fac[i - 1] % mod * i % mod)\nfor _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(0)\n    else:\n        ans = fac[n] % mod * (n * (n - 1) % mod) % mod\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ans = 1\n    ct = 10 ** 9 + 7\n    for i in range(1, n + 1):\n        ans = ans * i % ct\n    print(ans * n * (n - 1) % ct)", "mod = 1000000007\n\ndef fac(n):\n    fact = 1\n    for i in range(2, n + 1):\n        fact = fact * i % mod\n    return fact\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [0]\n    for i in range(2, n + 1):\n        l.append(l[-1] + 2 * (i - 1))\n    print(l[-1] * fac(n) % mod)", "for _ in range(int(input())):\n    n = int(input())\n    m = 1\n    p = 10 ** 9 + 7\n    for i in range(n):\n        m *= i + 1\n        m %= p\n    m *= n * (n - 1)\n    print(m % p)", "for _ in range(int(input())):\n    n = int(input())\n    mod = 1000000000.0 + 7\n    ans = n * (n - 1)\n    for i in range(1, n + 1):\n        ans = ans * i % mod\n    print(int(ans))", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    res = 1\n    for i in range(1, n + 1):\n        res *= i\n        res = res % (10 ** 9 + 7)\n    res = res * n * (n - 1)\n    res = res % (10 ** 9 + 7)\n    print(res)", "m = int(input())\nMOD = 10 ** 9 + 7\nfor k in range(m):\n    n = int(input())\n    ans = 1\n    for i in range(1, n + 1):\n        ans = i * ans % MOD\n    ans = ans * n * (n - 1) % MOD\n    print(ans)", "f = [0] * 100001\nf[0] = 1\nfor i in range(1, 100001):\n    f[i] = f[i - 1] * i\n    f[i] %= 10 ** 9 + 7\n\ndef ans(n):\n    return f[n] * n * (n - 1) % (10 ** 9 + 7)\nfor t in range(int(input())):\n    n = int(input())\n    print(ans(n))", "l = [1]\nfor i in range(1, 10 ** 5 + 1):\n    l.append(i * l[-1] % (10 ** 9 + 7))\nfor _ in range(int(input())):\n    a = int(input())\n    print(a * (a - 1) * l[a] % (10 ** 9 + 7))", "for _ in range(int(input())):\n    b = int(input())\n    cons = 10 ** 9 + 7\n    t = 1\n    for i in range(b):\n        t = t * (i + 1) % cons\n    t = t * b * (b - 1) % cons\n    print(t)", "t = int(input())\nfact = [1]\nM = 1000000007\nfor i in range(1, 100005):\n    fact.append(fact[-1] * i % M)\nfor i in range(t):\n    n = int(input())\n    if n == 1:\n        print(0)\n    else:\n        x = fact[n] * n % M * (n - 1) % M\n        print(x)", "def fac(n, mod):\n    f = 1\n    for i in range(1, n + 1):\n        f = f * i % mod\n    return f\nfor dslk in range(int(input())):\n    n = int(input())\n    ans = n * (n - 1)\n    ans *= fac(n, 1000000007)\n    ans %= 1000000007\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    k = (n - 1) * n\n    p = 1\n    for j in range(1, n + 1):\n        p = p * j\n        p = p % 1000000007\n    print(k * p % 1000000007)", "def read():\n    return int(input())\n\ndef read_list():\n    return [int(x) for x in input().split(' ')]\ntest_count = read()\nbig_mod = 1000000007\nfor ts in range(test_count):\n    n = read()\n    x = n - 1\n    r = x * (x + 1) // 2\n    r *= 2\n    fact = 1\n    for i in range(1, n + 1):\n        r = r * i % big_mod\n    print(r)", "fac = [1]\n\ndef build():\n    i = 1\n    while i <= 100000:\n        fac.append(fac[len(fac) - 1] * i % 1000000007)\n        i += 1\n\ndef sol():\n    p = int(input())\n    inv = p * (p - 1)\n    print(inv * fac[p] % 1000000007)\nbuild()\nt = int(input())\nfor i in range(t):\n    sol()", "def fact(x):\n    l = x * (x - 1)\n    for i in range(1, x + 1):\n        l = l * i\n        l = l % (10 ** 9 + 7)\n    return l\ntc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    l = fact(n)\n    print(l)", "def solve():\n    n = int(input())\n    if n == 1:\n        print(0)\n        return\n    else:\n        mod = int(1000000000.0 + 7)\n        out = n * (n - 1)\n        for i in range(1, n + 1):\n            out = out * i % mod\n        print(out)\nt = int(input())\nwhile t:\n    solve()\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    out = n * (n - 1)\n    mod = 1000000000.0 + 7\n    for i in range(1, n + 1):\n        out = i * out % mod\n    print(int(out))", "def factmod(x):\n    f = 1\n    for i in range(2, x + 1):\n        f *= i\n        f %= 1000000007\n    return f\n\ndef invm(x):\n    inv = 0\n    for i in range(2, x + 1):\n        inv += i - 1\n        inv %= 1000000007\n    return 2 * inv\n\ndef taskB():\n    n = int(input())\n    if n == 1:\n        print(0)\n        return\n    f = factmod(n)\n    inv = invm(n)\n    res = f * inv % 1000000007\n    print(int(res))\nt = int(input())\nfor i in range(t):\n    taskB()", "for _ in range(int(input())):\n    k = int(input())\n    l = (k - 1) * k\n    c = 1\n    h = 1000000007\n    while c != k + 1:\n        l = l % h * c % h\n        c += 1\n    print(l)", "momos = 1000000000.0 + 7\nfor _ in range(int(input())):\n    n12 = int(input())\n    ananas = (n12 - 1) * n12\n    ii = 1\n    while ii != n12 + 1:\n        ananas = ananas % momos * ii % momos\n        ii += 1\n    print(int(ananas))", "mod = 1000000007\nfor _ in range(int(input())):\n    i = 1\n    n = int(input())\n    ans = (n - 1) * n\n    while i != n + 1:\n        ans = ans % mod * i % mod\n        i += 1\n    print(ans)", "t = int(input())\nfor o in range(t):\n    thank = int(input())\n    mod = 1000000000.0 + 7\n    op = 1\n    count = thank * (thank - 1)\n    while op != thank + 1:\n        count = count % mod * op % mod\n        op = op + 1\n    print(int(count))", "M = 10 ** 9 + 7\n\ndef f(n):\n    m = 1\n    for i in range(1, n + 1):\n        m *= i\n        if m >= M:\n            m %= M\n    return m\nfor _ in range(int(input())):\n    n = int(input())\n    r = n * (n - 1) * f(n)\n    print(r % M)", "mod = 1000000007\nfor _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(0)\n    else:\n        r = 1\n        for i in range(1, n + 1):\n            r = r * i % mod\n        r = r * (n - 1) % mod\n        r = r * n % mod\n        print(r)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    f = 1\n    for i in range(1, n + 1):\n        f = f * i % (10 ** 9 + 7)\n    it = n * (n - 1)\n    ans = f * it\n    mod = 10 ** 9 + 7\n    print(ans % mod)", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(0)\n    else:\n        ans = n * (n - 1)\n        for i in range(1, n + 1):\n            ans = ans * i % 1000000007\n        print(ans % 1000000007)", "def solve():\n    mod = int(1000000000.0 + 7)\n    n = int(input())\n    ans = n * (n - 1)\n    for i in range(1, n + 1):\n        ans = ans * i % mod\n    print(ans)\nt = int(input())\nfor _ in range(t):\n    solve()", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    if n == 1:\n        print(0)\n    else:\n        mod = 1000000007\n        out = n * (n - 1)\n        for i in range(1, n + 1):\n            out = out * i % mod\n        print(out)\n    t -= 1", "for i in range(int(input())):\n    n = int(input())\n    ans = n * (n - 1)\n    div = 1000000007\n    for i in range(1, n + 1):\n        ans = ans * i % div\n    print(ans)"]