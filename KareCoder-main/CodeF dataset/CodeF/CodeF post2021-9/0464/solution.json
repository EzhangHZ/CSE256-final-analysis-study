["def solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    ans = n // 2\n    arr1 = arr[0:n // 2]\n    arr2 = arr[n // 2:]\n    last = arr.count(arr1[-1])\n    last1 = arr1.count(arr1[-1])\n    last2 = arr2.count(arr1[-1])\n    ans1 = (len(arr1) + last2) * (len(arr2) - last2)\n    ans2 = (len(arr1) - last1) * (len(arr2) + last1)\n    ans = max(ans, ans1, ans2)\n    print(ans)\n    return\nfor _ in range(int(input())):\n    solve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().strip().split()]\n    a.sort()\n    mid = (n - 1) // 2\n    val = a[mid]\n    count1 = 0\n    i = mid + 1\n    while i < n and a[i] == val:\n        i += 1\n        count1 += 1\n    count2 = 0\n    i = mid\n    while i > -1 and a[i] == val:\n        count2 += 1\n        i -= 1\n    m = (n + 1) // 2\n    sub = count1 * count2\n    ans1 = m * (n - m) - sub\n    ans2 = (m + count1) * (n - m - count1)\n    ans3 = (m - count2) * (n - m + count2)\n    ans4 = 0\n    if count1 + count2 == n:\n        ans4 = min(count1, count2)\n    print(max(ans1, ans2, ans3, ans4))", "import sys\ns = sys.stdin.read()\nimport math\n\ndef solve(data, lenght):\n    data_list = [int(i) for i in data.split()]\n    data_list.sort()\n    if data_list[0] == data_list[-1]:\n        print(lenght // 2)\n        return\n    ans = 0\n    for i in range(1, lenght):\n        if data_list[i] != data_list[i - 1]:\n            ans = max(ans, i * (lenght - i))\n    print(ans)\nlines = s.split('\\n')\nfor index in range(1, len(lines) - 2, 2):\n    lenght = int(lines[index])\n    data = lines[index + 1]\n    solve(data, lenght)", "from bisect import bisect_left\nfrom bisect import bisect_right\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if all(map(lambda x: x == a[0], a)):\n        print(n // 2)\n    else:\n        l = bisect_left(a, a[n // 2])\n        r = bisect_right(a, a[n // 2])\n        print(max(l * (n - l), r * (n - r)))", "from collections import Counter\n\ndef solve():\n    n = int(input())\n    nums = list(map(int, input().split()))\n    snums = sorted(set(nums))\n    cnums = Counter(nums)\n    nums = [cnums[i] for i in snums]\n    if len(nums) == 1:\n        print(max(1, nums[0] // 2))\n        return\n    score = 0\n    upto = 0\n    for num in nums:\n        gain = n - num - upto\n        if upto <= gain:\n            score += (gain - upto) * num\n            upto += num\n        else:\n            break\n    print(score)\nt = int(input())\nfor i in range(t):\n    solve()", "for tcase in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    m = n // 2\n    (l, r) = (m, m)\n    while l >= 0 and a[l] == a[m]:\n        l -= 1\n    while r < n and a[m] == a[r]:\n        r += 1\n    print((l + 1) * (n - r) + max((r - l - 1) * max(l + 1, n - r), (r - l - 1) // 2))", "import math\nfrom collections import Counter\n\ndef li():\n    return list(map(int, input().split()))\n\ndef n():\n    return int(input())\n\ndef st():\n    return input()\nyes = 'YES'\nno = 'NO'\neven = 'EVEN'\nodd = 'ODD'\n\ndef prefix(L):\n    size = len(L)\n    for i in range(1, size):\n        L[i] = L[i] + L[i - 1]\n    return L\nfor _ in range(int(input())):\n    size = n()\n    L = li()\n    L.sort()\n    s = set(L)\n    if len(s) == 1:\n        print(size // 2)\n        continue\n    C = Counter(L)\n    x = 0\n    a = size // 2\n    for i in C.values():\n        x += i\n        if x >= a:\n            break\n    print(max((size - x) * x, (size - x + i) * (x - i)))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    a.sort()\n    ans = n // 2\n    for i in range(1, n):\n        if a[i - 1] != a[i]:\n            ans = max(ans, i * (n - i))\n    print(ans)\n    t -= 1", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    arr = sorted(map(int, input().split()))\n    ans = n // 2\n    for i in range(1, n):\n        if arr[i] != arr[i - 1]:\n            ans = max(ans, i * (n - i))\n    print(ans)", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    m = -1\n    if n % 2 == 0:\n        m = a[(n - 1) // 2] / 2 + a[n // 2] / 2\n    else:\n        m = a[n // 2]\n    l = len([el for el in a if el < m])\n    b = len([el for el in a if el > m])\n    mm = len([el for el in a if el == m])\n    if l < b:\n        l += mm\n    else:\n        b += mm\n    if l == 0:\n        print(b // 2)\n    else:\n        print(l * b)\nt = int(input())\nfor _ in range(t):\n    solve()", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    a.sort()\n    if a[0] == a[-1]:\n        print(n // 2)\n    else:\n        m = 0\n        for i in range(1, n):\n            if a[i - 1] != a[i]:\n                if m < i * (n - i):\n                    m = i * (n - i)\n        print(m)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input()\n    b = a.split()\n    for j in range(n):\n        b[j] = int(b[j])\n    b.sort()\n    x = n // 2 - 1\n    y = 0\n    while y == 0:\n        if b[x] != b[x + 1] and x <= n - 2:\n            y = 1\n        else:\n            x = x + 1\n        if x == n - 1:\n            y = 1\n            x = n - 1\n    s = n // 2 - 1\n    d = 0\n    while d == 0:\n        if b[s] != b[s + 1] and s >= 0:\n            d = 1\n            s = s + 1\n        else:\n            s = s - 1\n        if s == -1:\n            d = 1\n            s = 0\n    m = x - s + 1\n    if s >= n - x - 1:\n        sum = s * (n - x - 1 + m)\n    if s <= n - x - 1:\n        sum = (s + m) * (n - x - 1)\n    if s == 0 and x == n - 1:\n        sum = n // 2\n    print(sum)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = [int(x) for x in input().split(' ')]\n    a.sort()\n    ans = n // 2\n    for i in range(1, n):\n        if a[i] != a[i - 1]:\n            ans = max(ans, i * (n - i))\n    print(ans)", "for s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    n = len(a)\n    ans = n // 2\n    for i in range(1, n):\n        if a[i] != a[i - 1]:\n            ans = max(ans, i * (n - i))\n    print(ans)", "for s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    n = len(a)\n    ans = n // 2\n    for i in range(1, n):\n        if a[i] != a[i - 1]:\n            ans = max(ans, i * (n - i))\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    l.append(0)\n    ans = n // 2\n    for i in range(n):\n        if l[i] != l[i + 1]:\n            p = (i + 1) * (n - i - 1)\n            ans = max(ans, p)\n    print(ans)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    data = input().split()\n    for i in range(n):\n        data[i] = int(data[i])\n    data.sort()\n    if data[0] == data[len(data) - 1]:\n        print(n // 2)\n    else:\n        l = []\n        for i in range(1, n):\n            if not data[i] == data[i - 1]:\n                l.append(i)\n        l.append(n)\n        maximum = (n - l[0]) * l[0]\n        for i in l:\n            if (n - i) * i < maximum:\n                break\n            else:\n                maximum = (n - i) * i\n        print(maximum)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    arr = sorted(map(int, input().split()))\n    ans = n // 2\n    for i in range(1, n):\n        if arr[i] != arr[i - 1]:\n            ans = max(ans, i * (n - i))\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    occur = {}\n    for c in l:\n        if c not in occur:\n            occur[c] = 1\n        else:\n            occur[c] += 1\n    nums = list(occur.keys())\n    nums.sort()\n    if len(nums) == 1:\n        print(n // 2)\n    else:\n        tot = 0\n        ans = 0\n        for i in range(len(nums)):\n            tot += occur[nums[i]]\n            ans = max(ans, tot * (n - tot))\n        print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(e) for e in input().split(' ')]\n    a = sorted(a)\n    res = -1\n    for i in range(n - 1):\n        if a[i + 1] != a[i]:\n            res = max(res, (i + 1) * (n - i - 1))\n    if res == -1:\n        print(n // 2)\n    else:\n        print(res)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    l.append(0)\n    ans = n // 2\n    for i in range(n):\n        if l[i] != l[i + 1]:\n            p = (i + 1) * (n - i - 1)\n            ans = max(ans, p)\n    print(ans)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s.strip())\n\ndef invr():\n    return map(int, input().split())\nfor _ in range(inp()):\n    n = inp()\n    arr = inlt()\n    arr.sort(reverse=True)\n    left = n\n    i = 0\n    mx = 0\n    while i < n:\n        cur = arr[i]\n        while i < n and arr[i] == cur:\n            i += 1\n        mx = max(mx, i * (n - i))\n    if mx == 0:\n        mx = n // 2\n    print(mx)", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    a.sort()\n    b = []\n    l = a[0]\n    s = 1\n    for i in range(1, n):\n        if a[i] == l:\n            s += 1\n        else:\n            b.append(s)\n            s = 1\n        l = a[i]\n    b.append(s)\n    if len(b) == 1:\n        print(n // 2)\n        continue\n    bb = b[0]\n    s = n - bb\n    ans = bb * s\n    for j in range(1, len(b) - 1):\n        bb += b[j]\n        s -= b[j]\n        if bb * s > ans:\n            ans = bb * s\n    print(ans)", "for _ in range(int(input())):\n    m = dict()\n    n = int(input())\n    s = list(map(int, input().split()))\n    for i in s:\n        if i not in m:\n            m[i] = 1\n        else:\n            m[i] += 1\n    s = list(set(s))\n    s.sort()\n    k = len(s) - 1\n    ans = n // 2\n    l = n\n    r = 0\n    for i in range(k, 0, -1):\n        l -= m[s[i]]\n        r += m[s[i]]\n        ans = max(ans, l * r)\n    print(ans)", "from itertools import groupby\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    groups = []\n    for (k, g) in groupby(a):\n        groups.append(len(list(g)))\n    if len(groups) == 1:\n        print(n // 2)\n    else:\n        N = len(groups)\n        S = 0\n        m = 1000000\n        for x in groups:\n            if abs(S - n / 2) < m:\n                m = abs(S - n / 2)\n            S += x\n        answer = n ** 2 / 4 - m ** 2\n        print(int(answer))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    l.append(0)\n    ans = n // 2\n    for i in range(n):\n        if l[i] != l[i + 1]:\n            p = (i + 1) * (n - i - 1)\n            ans = max(ans, p)\n    print(ans)", "q = int(input())\nfor o in range(q):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    occur = {}\n    for c in a:\n        if c not in occur:\n            occur[c] = 1\n        else:\n            occur[c] += 1\n    nums = list(occur.keys())\n    nums.sort()\n    if len(nums) == 1:\n        print(n // 2)\n    else:\n        tot = 0\n        ans = 0\n        for i in range(len(nums)):\n            tot += occur[nums[i]]\n            ans = max(ans, tot * (n - tot))\n        print(ans)", "T = int(input(''))\nfor i in range(T):\n    n = int(input(''))\n    str_in = input('')\n    a = [int(c) for c in str_in.split()]\n    a = sorted(a, reverse=True)\n    l1 = [1]\n    j = 0\n    for k in range(len(a)):\n        if k == 0:\n            l1[j] = 1\n        elif a[k] == a[k - 1]:\n            l1[j] += 1\n        else:\n            j += 1\n            l1.append(1 + l1[j - 1])\n    good = l1[0]\n    if len(l1) == 1:\n        print(len(a) // 2)\n    else:\n        for element in l1:\n            if abs(element - n / 2) < abs(good - n / 2):\n                good = element\n        print(good * (n - good))", "import math\nfrom collections import Counter as C\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = C(a).most_common()\n    c.sort(key=lambda x: x[0])\n    s = 0\n    left = sum([i[1] for i in c])\n    ans = left // 2\n    for (n, cnt) in c:\n        s += cnt\n        left -= cnt\n        ans = max(ans, s * left)\n    print(ans)", "from itertools import groupby\nfor (n, xs) in ((int(input()), map(int, input().split())) for _ in range(int(input()))):\n    (res, prefix, xs) = (0, 0, [len(list(x)) for (_, x) in groupby(sorted(xs), lambda x: x)])\n    for x in xs:\n        res = max(res, prefix * (n - prefix), (prefix + x) * (n - prefix - x), prefix * (n - prefix - x) + x // 2)\n        prefix += x\n    print(res)", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    n = int(inp())\n    a = list(map(int, inp().split()))\n    a.sort()\n    i = 0\n    g = []\n    while i < n:\n        j = i + 1\n        while j < n and a[j] == a[i]:\n            j += 1\n        g.append(j - i)\n        i = j\n    if len(g) == 1:\n        print(n // 2)\n        return\n    right = n\n    left = 0\n    ans = 0\n    for i in range(len(g)):\n        v = g[i]\n        for j in range(g[i] + 1):\n            ans = max(ans, left * (right - j) + j * (right - v))\n        left += v\n        right -= v\n    print(ans)\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()"]