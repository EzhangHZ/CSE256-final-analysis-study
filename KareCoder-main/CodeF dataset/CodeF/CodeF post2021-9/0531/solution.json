["def solve():\n    if arr.count(1) != 1:\n        return 'NO'\n    for i in range(n - 1):\n        if arr[i + 1] - arr[i] > 1:\n            return 'NO'\n    if arr[0] - arr[-1] > 1:\n        return 'NO'\n    return 'YES'\nfrom sys import stdin\ninput = stdin.readline\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    print(solve())", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a.count(1) != 1:\n        print('NO')\n        continue\n    a += [a[0]]\n    ok = True\n    for i in range(0, n):\n        if a[i + 1] - a[i] > 1:\n            ok = False\n            break\n    print('YES' if ok else 'NO')", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    data = list(map(int, input().split()))\n    num = data.count(1)\n    if num == 0 or num > 1:\n        print('NO')\n    else:\n        idx = data.index(1)\n        data = data[idx:] + data[:idx]\n        flag = 0\n        for i in range(len(data) - 1):\n            if data[i + 1] - data[i] > 1:\n                flag = 1\n                break\n        if flag:\n            print('NO')\n        else:\n            print('YES')", "def main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        c = [int(num) for num in input().split(' ')]\n        if c.count(1) != 1:\n            print('NO')\n            continue\n        no = False\n        c.append(c[0])\n        for i in range(1, n + 1):\n            if c[i] - c[i - 1] > 1:\n                no = True\n                break\n        print('NO' if no else 'YES')\nmain()", "import sys\ninput = sys.stdin.readline\n\ndef solve(n, c):\n    idx = 0\n    cnt = 0\n    for i in range(n):\n        if c[i] == 1:\n            idx = i\n            cnt += 1\n    if cnt != 1:\n        print('NO')\n        return\n    arr = c[idx:] + c[:idx]\n    cnt = n\n    prev = arr[0]\n    for i in range(n - 1):\n        if arr[i] >= arr[i + 1]:\n            cnt -= arr[i] - prev + 1\n            prev = arr[i + 1]\n    cnt -= arr[-1] - prev + 1\n    print('YES') if cnt == 0 else print('NO')\nfor _ in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    solve(n, c)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a.count(1) != 1:\n        print('NO')\n        continue\n    a.append(a[0])\n    ok = True\n    for i in range(0, n):\n        if a[i + 1] - a[i] > 1:\n            ok = False\n            break\n    if ok:\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a.count(1) != 1:\n        print('NO')\n        continue\n    a.append(a[0])\n    ok = True\n    for i in range(0, n):\n        if a[i + 1] - a[i] > 1:\n            ok = False\n            break\n    if ok:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin\ninput = stdin.readline\n\ndef get_string():\n    return stdin.readline().strip()\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        c = list(map(int, input().split()))\n        if c.count(1) != 1:\n            print('NO')\n            continue\n        c.append(c[0])\n        ans = True\n        for i in range(n):\n            if c[i + 1] - c[i] > 1:\n                ans = False\n        print('YES' if ans else 'NO')\nmain()", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    data = list(map(int, input().split()))\n    num = data.count(1)\n    if num != 1:\n        print('NO')\n        continue\n    data.append(data[0])\n    flag = 0\n    for i in range(len(data) - 1):\n        if data[i + 1] - data[i] > 1:\n            flag = 1\n            break\n    if flag:\n        print('NO')\n    else:\n        print('YES')", "(a, b, c) = (input, int, range)\nfor _ in c(b(a())):\n    n = b(a())\n    m = list(map(b, a().split()))\n    print('YNEOS'[m.count(1) != 1 or m[0] > m[-1] + 1 or any((m[i + 1] - m[i] > 1 for i in range(n - 1)))::2])", "(a, b, c) = (input, int, range)\nfor _ in c(b(a())):\n    n = b(a())\n    m = list(map(b, a().split()))\n    print('YNEOS'[m.count(1) != 1 or m[0] > m[-1] + 1 or any((m[i + 1] - m[i] > 1 for i in range(n - 1)))::2])", "a = int(input())\nfor i in range(a):\n    x = int(input())\n    y = [int(j) for j in input().split()]\n    c1 = 0\n    ind = -1\n    if x == 1:\n        print('YES')\n        continue\n    for j in range(x):\n        if y[j] == 1:\n            c1 = c1 + 1\n            ind = j\n    if c1 != 1:\n        print('NO')\n        continue\n    f = 0\n    ny = y[ind:] + y[0:ind]\n    for j in range(x - 1):\n        if ny[j + 1] > ny[j] + 1:\n            f = 1\n            break\n    print('NO' if f == 1 else 'YES')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if l.count(1) != 1:\n        print('NO')\n    else:\n        c = True\n        for j in range(1, n):\n            if l[j] - l[j - 1] > 1:\n                print('NO')\n                c = False\n                break\n        if l[0] - l[n - 1] > 1 and c:\n            print('NO')\n            c = False\n        if c:\n            print('YES')", "def solver():\n    m = int(input())\n    for _ in range(m):\n        n = int(input())\n        f = list(map(int, input().split()))\n        done = False\n        count_of_1 = 0\n        for i in range(n):\n            if not done:\n                if f[(i + 1) % n] - f[i] > 1 or (f[i] == n and f[(i + 1) % n] != 1):\n                    done = True\n                    print('NO')\n                if f[i] == 1:\n                    count_of_1 += 1\n        if not done:\n            if count_of_1 == 1:\n                print('YES')\n            else:\n                print('NO')\nsolver()", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    if n == 1:\n        print('YES')\n        continue\n    if a.count(1) != 1:\n        print('NO')\n        continue\n    id = a.index(1)\n    key = 0\n    for i in range(id + 1, n):\n        if a[i] - a[i - 1] > 1:\n            key = 1\n            break\n    if key == 0:\n        if a[0] - a[-1] > 1:\n            key = 1\n    if key == 0:\n        for i in range(1, id):\n            if a[i] - a[i - 1] > 1:\n                key = 1\n                break\n    if key == 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t:\n    l = int(input())\n    s = list(map(int, input().split()))\n    if s.count(1) != 1:\n        print('NO')\n    else:\n        flag = 0\n        o = s.index(1)\n        s = s[o:] + s[:o]\n        for i in range(1, l):\n            if s[i] > s[i - 1] and s[i] - s[i - 1] > 1:\n                flag = 1\n                break\n        if flag == 1:\n            print('NO')\n        else:\n            print('YES')\n    t = t - 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(c) for c in input().split()]\n    if 1 not in a or a.count(1) > 1:\n        print('NO')\n        continue\n    i = a.index(1)\n    b = a[i:] + a[:i]\n    j = 1\n    flag = True\n    while j < n:\n        if b[j] > b[j - 1] + 1:\n            print('NO')\n            flag = False\n            break\n        j += 1\n    if flag:\n        print('YES')", "import collections\nfrom math import ceil, gcd, sqrt, log\nINF = float('inf')\nmod = 1000000007\n\ndef solve():\n    n = int(input())\n    A = list(map(int, input().split()))\n    flag = 0\n    k = 0\n    for i in range(n):\n        if A[i] == 1:\n            flag += 1\n            k = i\n    if flag == 0 or flag > 1:\n        print('NO')\n        return\n    C = A[k:] + A[:k]\n    for i in range(1, n):\n        if C[i] <= C[i - 1]:\n            continue\n        if C[i] > C[i - 1] + 1:\n            print('NO')\n            return\n    print('YES')\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "def solve(a):\n    (o, p) = (False, a[-1])\n    for i in a:\n        if i == 1:\n            if o:\n                return False\n            o = True\n        elif i - p > 1:\n            return False\n        p = i\n    return o\nfor i in range(int(input())):\n    length = input()\n    print('YES' if solve([int(i) for i in input().split()]) else 'NO')", "for q in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    flag = 0\n    if arr.count(1) != 1:\n        print('NO')\n        continue\n    flag = 0\n    arr.append(arr[0])\n    for i in range(1, n + 1):\n        if arr[i] - arr[i - 1] > 1:\n            flag = 1\n            break\n    if flag:\n        print('NO')\n    else:\n        print('YES')", "(a, b, c, d, e) = (input, print, int, False, True)\nfor i in range(c(a())):\n    a()\n    (r, x, y) = (e, list(map(c, a().split())), d)\n    z = x[-1]\n    for i in x:\n        if i == 1:\n            if y:\n                r = d\n                break\n            else:\n                y = e\n        elif i - z > 1:\n            r = d\n            break\n        z = i\n    b('YNEOS'[not r & y::2])", "import sys\ninput = sys.stdin.readline\n\ndef solve(n, c):\n    idx = 0\n    cnt = 0\n    for i in range(n):\n        if c[i] == 1:\n            idx = i\n            cnt += 1\n    if cnt != 1:\n        print('NO')\n        return\n    arr = c[idx:] + c[:idx]\n    count = n\n    prev = arr[0]\n    if prev != 1:\n        print('NO')\n        return\n    for i in range(n - 1):\n        if arr[i] >= arr[i + 1]:\n            count -= arr[i] - prev + 1\n            prev = arr[i + 1]\n            if count < 1:\n                print('NO')\n                return\n        elif arr[i] + 1 != arr[i + 1]:\n            print('NO')\n            return\n    count -= arr[-1] - prev + 1\n    print('YES') if count == 0 else print('NO')\nfor _ in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    solve(n, c)", "import sys\ninput = sys.stdin.readline\n\ndef solve(n, c):\n    idx = 0\n    cnt = 0\n    for i in range(n):\n        if c[i] == 1:\n            idx = i\n            cnt += 1\n    if cnt != 1:\n        print('NO')\n        return\n    arr = c[idx:] + c[:idx]\n    cnt = n\n    prev = arr[0]\n    for i in range(n - 1):\n        if arr[i] >= arr[i + 1]:\n            cnt -= arr[i] - prev + 1\n            prev = arr[i + 1]\n            if cnt < 1:\n                print('NO')\n                return\n        elif arr[i] + 1 != arr[i + 1]:\n            print('NO')\n            return\n    cnt -= arr[-1] - prev + 1\n    print('YES') if cnt == 0 else print('NO')\nfor _ in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    solve(n, c)", "import sys\ninput = sys.stdin.readline\n\ndef solve(n, c):\n    idx = 0\n    cnt = 0\n    for i in range(n):\n        if c[i] == 1:\n            idx = i\n            cnt += 1\n    if cnt != 1:\n        print('NO')\n        return\n    arr = c[idx:] + c[:idx]\n    cnt = n\n    prev = arr[0]\n    for i in range(n - 1):\n        if arr[i] >= arr[i + 1]:\n            cnt -= arr[i] - prev + 1\n            prev = arr[i + 1]\n            if cnt < 1:\n                print('NO')\n                return\n    cnt -= arr[-1] - prev + 1\n    print('YES') if cnt == 0 else print('NO')\nfor _ in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    solve(n, c)", "x = int(input().strip())\nfor i in range(x):\n    b = int(input().strip())\n    a = list(map(int, input().strip().split()))\n    if 1 not in a or a.count(1) > 1:\n        print('NO')\n    else:\n        for i in range(b):\n            if a[i] - a[i - 1] > 1:\n                print('NO')\n                break\n        else:\n            print('YES')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    if lst.count(1) != 1:\n        print('NO')\n        continue\n    lst.append(lst[0])\n    f = 1\n    for i in range(n):\n        if lst[i + 1] - lst[i] > 1:\n            print('NO')\n            f = 0\n            break\n    if f:\n        print('YES')", "x = int(input().strip())\nfor i in range(x):\n    b = int(input().strip())\n    a = list(map(int, input().strip().split()))\n    if 1 not in a or a.count(1) > 1:\n        print('NO')\n    else:\n        for i in range(b):\n            if a[i] - a[i - 1] > 1:\n                print('NO')\n                break\n        else:\n            print('YES')", "(a, b, c) = (input, int, range)\nfor _ in c(b(a())):\n    n = b(a())\n    m = list(map(b, a().split()))\n    print('YNEOS'[m.count(1) != 1 or m[0] > m[-1] + 1 or any((m[i + 1] - m[i] > 1 for i in range(n - 1)))::2])", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    S = list(map(int, input().split()))\n    if S.count(1) != 1:\n        print('NO')\n        continue\n    S.append(S[0])\n    flag = True\n    for i in range(n):\n        if S[i + 1] - S[i] > 1:\n            flag = False\n            break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    f = 0\n    if l.count(1) != 1:\n        print('NO')\n        continue\n    l.append(l[0])\n    for i in range(n):\n        if l[i + 1] - l[i] > 1:\n            f = 1\n            break\n    print('YES' if f == 0 else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    w = 0\n    if c.count(1) != 1:\n        w = 1\n    else:\n        for i in range(n - 1):\n            if c[i] == n and c[i + 1] != 1:\n                w = 1\n                break\n            elif c[i] == 1 and c[i + 1] != 2:\n                w = 1\n                break\n            elif c[i + 1] - c[i] > 1:\n                w = 1\n            if w == 1:\n                break\n        if c[0] - c[n - 1] > 1:\n            w = 1\n    if w == 1:\n        print('NO')\n    else:\n        print('YES')", "import sys\nimport math\ndata = sys.stdin.readlines()\nnumCases = int(data[0])\ncases = []\nfor each in range(1, numCases + 1):\n    input_ = data[each * 2].replace('\\n', '')\n    temp = input_.split(' ')\n    array = []\n    for each in temp:\n        array.append(int(each))\n    cases.append(array)\nfor case in cases:\n    array = case\n    if 1 not in array or array.count(1) > 1:\n        print('NO')\n        continue\n    for ind in range(len(array)):\n        if array[ind] - array[ind - 1] > 1:\n            print('NO')\n            break_ = True\n            break\n    else:\n        print('YES')", "t = int(input())\n\ndef main():\n    n = int(input())\n    a = [int(_) for _ in input().split(' ')]\n    if n == 1:\n        return 'YES'\n    foundn = False\n    found1 = 0\n    for i in range(1, n + 1, 1):\n        if i < n:\n            pre = a[i - 1]\n            now = a[i]\n        else:\n            pre = a[n - 1]\n            now = a[0]\n        if pre == n:\n            if now != 1:\n                return 'NO'\n            continue\n        if pre == 1:\n            found1 += 1\n            if now != 2:\n                return 'NO'\n            continue\n        if now == 1:\n            if pre < 2:\n                return 'NO'\n            continue\n        if now == n:\n            if pre != n - 1:\n                return 'NO'\n            continue\n        if now - pre > 1:\n            return 'NO'\n    if found1 != 1:\n        return 'NO'\n    return 'YES'\nwhile t:\n    t -= 1\n    print(main())", "(a, b, c, d, e) = (input, print, int, False, True)\nfor i in range(c(a())):\n    a()\n    (r, x, y) = (e, list(map(c, a().split())), d)\n    z = x[-1]\n    for i in x:\n        if i == 1:\n            if y:\n                r = d\n                break\n            else:\n                y = e\n        elif i - z > 1:\n            r = d\n            break\n        z = i\n    b('YNEOS'[not r & y::2])", "(a, b, c) = (input, int, range)\nfor _ in c(b(a())):\n    n = b(a())\n    m = list(map(b, a().split()))\n    print('YNEOS'[m.count(1) != 1 or m[0] > m[-1] + 1 or any((m[i + 1] - m[i] > 1 for i in range(n - 1)))::2])", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a.count(1) != 1:\n        print('NO')\n        return\n    a.append(a[0])\n    for i in range(n):\n        if a[i + 1] - a[i] > 1:\n            print('NO')\n            return\n    print('YES')\ntst = int(input())\nfor i in range(tst):\n    solve()", "(a, b, c) = (input, int, range)\nfor _ in c(b(a())):\n    n = b(a())\n    m = list(map(b, a().split()))\n    print('YNEOS'[m.count(1) != 1 or m[0] > m[-1] + 1 or any((m[i + 1] - m[i] > 1 for i in range(n - 1)))::2])", "(a, b, c) = (input, int, range)\nfor _ in c(b(a())):\n    n = b(a())\n    m = list(map(b, a().split()))\n    print('YNEOS'[m.count(1) != 1 or m[0] > m[-1] + 1 or any((m[i + 1] - m[i] > 1 for i in range(n - 1)))::2])", "for t in range(int(input())):\n    n = int(input())\n    lks = list(map(int, input().split()))\n    cnt = 0\n    for x in lks:\n        if x == 1:\n            cnt += 1\n    if cnt != 1:\n        print('NO')\n    else:\n        lks.append(lks[0])\n        ok = False\n        for i in range(0, n):\n            if lks[i + 1] - lks[i] > 1:\n                ok = True\n                break\n        if ok:\n            print('NO')\n        else:\n            print('YES')", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a.count(1) != 1:\n        print('NO')\n        continue\n    a.append(a[0])\n    ok = True\n    for i in range(0, n):\n        if a[i + 1] - a[i] > 1:\n            ok = False\n            break\n    if ok:\n        print('YES')\n    else:\n        print('NO')", "def exist(nums):\n    n = len(nums)\n    total1 = 0\n    for i in range(n):\n        if nums[i] == 1:\n            total1 += 1\n        if nums[i] - nums[i - 1] > 1:\n            return False\n    return total1 == 1\nt = int(input())\nfor _ in range(t):\n    _ = input()\n    nums = [int(x) for x in input().split()]\n    if exist(nums):\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    S = list(map(int, input().split()))\n    if S.count(1) != 1:\n        print('NO')\n        continue\n    S.append(S[0])\n    flag = True\n    for i in range(n):\n        if S[i + 1] - S[i] > 1:\n            flag = False\n            break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    if c.count(1) != 1:\n        print('NO')\n        continue\n    f = 0\n    for i in range(n):\n        if c[i] - c[i - 1] > 1:\n            f = 1\n            break\n    if f == 1:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    S = list(map(int, input().split()))\n    if S.count(1) != 1:\n        print('NO')\n        continue\n    S.append(S[0])\n    flag = True\n    for i in range(n):\n        if S[i + 1] - S[i] > 1:\n            flag = False\n            break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nout = ''\nfor _ in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    if 1 not in arr:\n        out += 'NO\\n'\n        continue\n    i = arr.index(1)\n    arr = [*arr[i:], *arr[:i]]\n    ans = 'NO\\n'\n    for i in range(1, len(arr)):\n        if arr[i] < 2 or arr[i] > arr[i - 1] + 1:\n            break\n    else:\n        ans = 'YES\\n'\n    out += ans\nprint(out)", "(a, b, c, d, e) = (input, print, int, False, True)\nfor i in range(c(a())):\n    a()\n    (r, x, y) = (e, list(map(c, a().split())), d)\n    z = x[-1]\n    for i in x:\n        if i == 1:\n            if y:\n                r = d\n                break\n            else:\n                y = e\n        elif i - z > 1:\n            r = d\n            break\n        z = i\n    b('YNEOS'[not r & y::2])", "(a, b, c) = (input, int, range)\nfor _ in c(b(a())):\n    n = b(a())\n    m = list(map(b, a().split()))\n    print('YNEOS'[m.count(1) != 1 or m[0] > m[-1] + 1 or any((m[i + 1] - m[i] > 1 for i in range(n - 1)))::2])", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    flag = 1\n    for i in range(1, n):\n        if a[i] - a[i - 1] > 1:\n            flag = 0\n            break\n    if flag and a.count(1) == 1:\n        if n > 1 and a[0] - a[-1] > 1:\n            print('NO')\n        else:\n            print('YES')\n    else:\n        print('NO')", "def ss(n, l):\n    if l.count(1) != 1:\n        return False\n    l.append(l[0])\n    for i in range(1, n + 1):\n        if l[i] - l[i - 1] > 1:\n            return False\n    return True\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if ss(n, l):\n        print('YES')\n    else:\n        print('NO')", "from collections import deque\nt = int(input())\nfor pp in range(t):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    sussy = sorted(lis)\n    if sussy[0] != 1:\n        print('NO')\n        continue\n    elif len(sussy) > 1 and sussy[0] == sussy[1] == 1:\n        print('NO')\n        continue\n    d = deque(lis)\n    while d[0] != 1:\n        sus = d.popleft()\n        d.append(sus)\n    lis = list(d)\n    suss = False\n    for i in range(1, len(lis)):\n        if lis[i] > lis[i - 1] + 1:\n            print('NO')\n            suss = True\n            break\n    if suss:\n        continue\n    print('YES')", "def check_jump_and_drop(num):\n    x = num + num\n    index_of_1 = -1\n    for (index, n) in enumerate(x):\n        if n == 1:\n            index_of_1 = index\n            break\n    if index_of_1 == -1:\n        return False\n    for i in range(index_of_1 + 1, len(x)):\n        if x[i] == 1 and i != index_of_1 + len(num) or x[i] - 1 > x[i - 1]:\n            return False\n    return True\n\ndef topological(num):\n    return True\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    num = list(map(int, input().split()))\n    if not check_jump_and_drop(num):\n        print('NO')\n    elif topological(num):\n        print('YES')\n    else:\n        print('NO')", "for t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    for i in range(n):\n        if l[i] == 1:\n            l = [*l[i:], *l[:i]]\n            break\n    if l[0] != 1:\n        print('NO')\n    else:\n        isBroken = False\n        for i in range(1, n):\n            if l[i - 1] < l[i]:\n                if l[i] - l[i - 1] > 1:\n                    isBroken = True\n                    break\n            elif l[i] <= 1:\n                isBroken = True\n                break\n        if isBroken:\n            print('NO')\n        else:\n            print('YES')", "import sys\nimport string\nfrom decimal import Decimal\nfrom math import log\n\ndef inp():\n    return int(input())\n\ndef inplist():\n    return list(map(int, input().split()))\n\ndef inpstrlist():\n    s = input()\n    return list(s[:len(s)])\n\ndef invr():\n    return map(int, input().split())\nt = int(input())\nfor _ in range(t):\n    n = inp()\n    arr = inplist()\n    if arr.count(1) != 1:\n        print('NO')\n        continue\n    idx = arr.index(1)\n    f = True\n    arr.append(arr[0])\n    for i in range(n):\n        if arr[i + 1] - arr[i] > 1:\n            f = False\n            break\n    if f:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().strip().split()))\n    (a, b) = (l.count(1), l.count(n))\n    co = True\n    if a != 1 or b > 1:\n        co = False\n    else:\n        for i in range(n - 1):\n            if l[i] == 1 and l[i + 1] != 2:\n                co = False\n                break\n            elif l[i] == n and l[i + 1] != 1:\n                co = False\n                break\n            elif l[i + 1] - l[i] > 1:\n                co = False\n                break\n        if l[0] - l[-1] > 1:\n            co = False\n    if co:\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a.count(1) != 1:\n        print('NO')\n        continue\n    a.append(a[0])\n    ok = True\n    for i in range(0, n):\n        if a[i + 1] - a[i] > 1:\n            ok = False\n            break\n    if ok:\n        print('YES')\n    else:\n        print('NO')", "class Solution:\n\n    def solve(self, c):\n        count = 0\n        for i in c:\n            if i == 1:\n                count += 1\n                if count > 1:\n                    return 'NO'\n        if count == 0:\n            return 'NO'\n        c.append(c[0])\n        for i in range(len(c) - 1):\n            if c[i + 1] - c[i] > 1:\n                return 'NO'\n        return 'YES'\nT = int(input())\nwhile T:\n    T -= 1\n    n = int(input())\n    c = input().split(' ')\n    for i in range(n):\n        c[i] = int(c[i])\n    print(Solution().solve(c))", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    c = list(map(int, input().split()))\n    if min(c) != 1:\n        print('NO')\n        continue\n    i = c.index(1)\n    new_c = c\n    if i > 0:\n        new_c = c[i:] + c[:i]\n    ans = 'YES'\n    for j in range(n - 1):\n        if new_c[j + 1] - new_c[j] == 1:\n            continue\n        elif new_c[j + 1] <= new_c[j] and new_c[j + 1] >= 2:\n            continue\n        else:\n            ans = 'NO'\n            break\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    c = list(map(int, input().split()))\n    numb = []\n    for j in range(n):\n        if c[j] == 1:\n            numb.append(j)\n    if len(numb) != 1:\n        print('NO')\n    else:\n        numb = numb[0]\n        u = 0\n        for i in range(n - 1):\n            a = c[(i + numb) % n]\n            b = c[(i + 1 + numb) % n]\n            if b > a + 1:\n                print('NO')\n                u = 1\n                break\n        if not u:\n            print('YES')", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    c = list(map(int, input().split()))\n    if c.count(1) != 1:\n        print('NO')\n    else:\n        possible = True\n        prev = c.index(1)\n        for i in range(n - 1):\n            curr = (prev + 1) % n\n            if c[curr] - c[prev] > 1:\n                print('NO')\n                possible = False\n                break\n            prev = curr\n        if possible:\n            print('YES')", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = set(a)\n    mi = min(s)\n    ma = max(s)\n    if n == 1:\n        print('YES')\n    elif mi != 1 or ma == 1 or len(s) != ma or (a.count(1) != 1):\n        print('NO')\n    else:\n        for i in range(-1, n - 1):\n            if a[i + 1] - a[i] > 1:\n                print('NO')\n                break\n        else:\n            print('YES')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    err = 0\n    if n == 2:\n        if lst != [1, 2] and lst != [2, 1]:\n            err += 1\n    else:\n        for j in range(1, n):\n            if lst[j] > lst[j - 1]:\n                if lst[j] - lst[j - 1] > 1:\n                    err += 1\n                    break\n    if lst.count(1) > 1 or 1 not in lst:\n        err += 1\n    if lst[0] > lst[-1]:\n        if lst[0] - lst[-1] > 1:\n            err += 1\n    if err == 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t:\n    l = int(input())\n    s = list(map(int, input().split()))\n    if s.count(1) != 1:\n        print('NO')\n    else:\n        flag = 0\n        o = s.index(1)\n        s = s[o:] + s[:o]\n        for i in range(1, l):\n            if s[i] - s[i - 1] > 1:\n                flag = 1\n                break\n        if flag == 1:\n            print('NO')\n        else:\n            print('YES')\n    t = t - 1", "for _ in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    (cnt, flag) = (0, 1)\n    for i in range(n):\n        cnt += c[i] == 1\n        if c[i] - c[i - 1] > 1:\n            flag = False\n    print('YES' if flag and cnt == 1 else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    one = c.count(1)\n    if one != 1:\n        print('NO')\n    else:\n        ione = c.index(1)\n        l = c[ione:] + c[0:ione]\n        flage = 0\n        for i in range(1, n):\n            if l[i] > l[i - 1] and l[i] - l[i - 1] > 1:\n                flage = 1\n                break\n        if flage == 1:\n            print('NO')\n        else:\n            print('YES')", "t = int(input())\n\ndef main():\n    n = int(input())\n    a = [int(_) for _ in input().split(' ')]\n    if n == 1:\n        return 'YES'\n    foundn = False\n    found1 = 0\n    for i in range(1, n + 1, 1):\n        if i < n:\n            pre = a[i - 1]\n            now = a[i]\n        else:\n            pre = a[n - 1]\n            now = a[0]\n        if pre == n:\n            if now != 1:\n                return 'NO'\n            continue\n        if pre == 1:\n            found1 += 1\n            if now != 2:\n                return 'NO'\n            continue\n        if now == 1:\n            if pre < 2:\n                return 'NO'\n            continue\n        if now == n:\n            if pre != n - 1:\n                return 'NO'\n            continue\n        if now - pre > 1:\n            return 'NO'\n    if found1 != 1:\n        return 'NO'\n    if foundn:\n        for i in range(n):\n            if a[i] == n:\n                for j in range(1, n, 1):\n                    if a[(i + j) % n] != j:\n                        return 'NO'\n    return 'YES'\nwhile t:\n    t -= 1\n    print(main())", "def lostperm(C):\n    if C == [1]:\n        return True\n    else:\n        ct = 0\n        maxdiff = 0\n        for i in range(len(C)):\n            if C[i] == 1:\n                ct += 1\n            if i == 0:\n                temp = C[i] - C[-1]\n            else:\n                temp = C[i] - C[i - 1]\n            maxdiff = max(maxdiff, temp)\n        if ct != 1 or maxdiff != 1:\n            return False\n        else:\n            return True\nt = int(input())\nfor x in range(t):\n    n = int(input())\n    C = [int(s) for s in input().split()]\n    res = lostperm(C)\n    if res:\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nfor j in range(T):\n    tmp1 = input()\n    goal_array = list(map(int, input().split(' ')))\n    for i in range(len(goal_array)):\n        if goal_array[i] == 1:\n            goal_array = goal_array[i:] + goal_array[0:i]\n            break\n    if goal_array[0] != 1:\n        print('NO')\n    else:\n        answer = True\n        for i in range(1, len(goal_array)):\n            if goal_array[i] > goal_array[i - 1] + 1:\n                print('NO')\n                answer = False\n                break\n            elif goal_array[i] == 1:\n                print('NO')\n                answer = False\n                break\n        if answer == True:\n            print('YES')", "mod = 998244353\nT = int(input())\nfor tt in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    flag = 1\n    cnt = 0\n    for i in range(1, n, 1):\n        if a[i] > a[i - 1] and a[i] - a[i - 1] > 1:\n            flag = 0\n    if a[0] > a[n - 1] + 1 and a[0] - a[n - 1] > 1:\n        flag = 0\n    for i in range(n):\n        if a[i] == 1:\n            cnt += 1\n    if flag and cnt == 1:\n        print('YES')\n    else:\n        print('NO')", "import sys\nimport math\nfrom bisect import bisect_right as br\nfrom collections import deque\nfrom itertools import combinations as cb\n\ndef int_arr():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef str_arr():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef input():\n    return sys.stdin.readline().strip()\nfor i in range(int(input())):\n    n = int(input())\n    arr = int_arr()\n    if arr.count(1) != 1:\n        print('NO')\n        continue\n    arr.append(arr[0])\n    for i in range(1, n + 1):\n        if arr[i] > arr[i - 1] and arr[i] - arr[i - 1] > 1:\n            print('NO')\n            break\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    cnt = 0\n    flag = 1\n    for (i, x) in enumerate(c):\n        if x == 1:\n            cnt += 1\n        if c[i] - c[i - 1] > 1:\n            flag = False\n    print('YES' if flag and cnt == 1 else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    fin_arr = []\n    tmp = []\n    last = -1\n    for (idx, i) in enumerate(arr):\n        if i != 1:\n            tmp.append(i)\n        else:\n            last = idx\n            break\n    arr = arr[idx:] + tmp\n    if arr[0] != 1:\n        print('NO')\n        continue\n    prev = arr[0]\n    no = False\n    for i in range(1, n):\n        if arr[i] == 1 or arr[i] > arr[i - 1] + 1:\n            no = True\n            break\n    if no:\n        print('NO')\n    else:\n        print('YES')", "for k in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    (cnt, flag) = (0, 1)\n    for i in range(n):\n        cnt += c[i] == 1\n        if c[i] - c[i - 1] > 1:\n            flag = False\n    print('YES' if flag and cnt == 1 else 'NO')", "N = len\nM = list\nL = range\nI = 'NO'\nH = input\nG = int\nD = print\nfrom collections import deque\nJ = G(H())\nfor O in L(J):\n    P = G(H())\n    A = M(map(G, H().split()))\n    B = sorted(A)\n    if B[0] != 1:\n        D(I)\n        continue\n    elif N(B) > 1 and B[0] == B[1] == 1:\n        D(I)\n        continue\n    C = deque(A)\n    while C[0] != 1:\n        K = C.popleft()\n        C.append(K)\n    A = M(C)\n    E = False\n    for F in L(1, N(A)):\n        if A[F] > A[F - 1] + 1:\n            D(I)\n            E = True\n            break\n    if E:\n        continue\n    D('YES')", "from collections import Counter, defaultdict, deque, namedtuple\nfrom functools import lru_cache\nfrom typing import List, Dict\nimport bisect as b\nimport heapq as h\nimport math as m\n\ndef inti():\n    return int(input())\n\ndef ints():\n    return [int(x) for x in input().split()]\n\ndef main_tc():\n    n = inti()\n    numbers = ints()\n    one_count = 0\n    one_index = None\n    for i in range(len(numbers)):\n        if numbers[i] == 1:\n            one_count += 1\n            one_index = i\n    if one_count != 1:\n        print('NO')\n        return\n    new_numbers = numbers[one_index:] + numbers[:one_index]\n    for i in range(len(new_numbers) - 1):\n        if new_numbers[i + 1] - new_numbers[i] > 1:\n            print('NO')\n            return\n    print('YES')\n\ndef main():\n    tc = inti()\n    for _ in range(tc):\n        main_tc()\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    c = list(map(int, input().split()))\n    mp = {}\n    for i in range(n):\n        mp[c[i]] = i\n    if mp.get(1) is None or c.count(1) > 1:\n        print('NO')\n        continue\n    p = mp[1]\n    flag = 0\n    c = c[p:] + c[0:p]\n    for i in range(1, n):\n        if c[i] - c[i - 1] > 1:\n            flag = 1\n    if flag == 1:\n        print('NO')\n    else:\n        print('YES')", "import sys\ninput = lambda : sys.stdin.readline().strip()\nsys.setrecursionlimit(10 ** 9)\nt = int(input())\nfor _ in [0] * t:\n    n = int(input())\n    c = list(map(int, input().split()))\n    ans = 'YES'\n    if max(c) != len(set(c)) or c.count(1) != 1:\n        ans = 'NO'\n    for (i, j) in zip(c + c, c[1:] + c):\n        if j > i and j > i + 1:\n            ans = 'NO'\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    c = [int(x) for x in input().split(' ')]\n    ones = 0\n    last_one_idx = 0\n    has_greater_n = False\n    for (i, ci) in enumerate(c):\n        if ci == 1:\n            ones += 1\n            last_one_idx = i\n        if ci > n:\n            has_greater_n = True\n    if ones != 1 or has_greater_n:\n        print('NO')\n        continue\n    passsed = 0\n    idx = last_one_idx\n    is_valid = True\n    while passsed < n:\n        passsed += 1\n        diff = c[(idx + 1) % n] - c[idx % n]\n        if diff > 0 and diff != 1:\n            is_valid = False\n            break\n        idx = (idx + 1) % n\n    if is_valid:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    k = arr.count(1)\n    if k != 1:\n        print('NO')\n    else:\n        k = arr.index(1)\n        arr2 = []\n        for i in range(n):\n            arr2.append(arr[(k + i) % n])\n        c = 0\n        for i in range(n - 1):\n            if arr2[i + 1] - arr2[i] > 1:\n                c = 1\n        if c == 1:\n            print('NO')\n        else:\n            print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    c = list(map(int, input().split()))\n    i = 0\n    flag = 1\n    while i < n and c[i] != 1:\n        i += 1\n    if i == n:\n        flag = 0\n    j = i\n    i += 1\n    while i < n:\n        if c[i] - c[i - 1] >= 2 or c[i] == 1 or c[i] > i - j + 1:\n            flag = 0\n        i += 1\n    i = 0\n    while i < j:\n        if c[i] - c[i - 1] >= 2 or c[i] == 1 or c[i] > n - j + i + 2:\n            flag = 0\n        i += 1\n    if flag == 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    c = list(map(int, input().split(' ')))\n    yesval = False\n    curval = 0\n    for theta in range(n):\n        if c[theta] == 1:\n            yesval = True\n            curval = theta\n            break\n    if not yesval:\n        print('NO')\n    else:\n        for delta in range(1, n):\n            temp = (curval + delta) % n\n            prev = (curval + delta - 1) % n\n            if delta == 1:\n                if c[temp] != 2:\n                    yesval = False\n                    break\n            if c[temp] - c[prev] > 1:\n                yesval = False\n                break\n            if c[temp] <= 1:\n                yesval = False\n                break\n        if not yesval:\n            print('NO')\n        else:\n            print('YES')", "from calendar import c\nimport sys\nimport math\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    x = min(range(len(arr)), key=arr.__getitem__)\n    if arr[x] == 1:\n        p = 1\n        ok = True\n        for i in range(1, n):\n            x = (x + 1) % n\n            if arr[x] < 2 or arr[x] > p + 1:\n                ok = False\n                break\n            p = arr[x]\n        if ok:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "import sys\nT = int(sys.stdin.readline().strip())\nfor t in range(T):\n    n = int(sys.stdin.readline().strip())\n    arr = [int(x) for x in sys.stdin.readline().strip().split(' ')]\n    flag = 1\n    if 1 not in arr:\n        flag = 0\n    else:\n        for (i, x) in enumerate(arr):\n            if i == n - 1:\n                y = arr[0]\n            else:\n                y = arr[i + 1]\n            if y > x + 1:\n                flag = 0\n                break\n        if len(arr) > 1:\n            cnt = {}\n            for x in arr:\n                if x not in cnt:\n                    cnt[x] = 0\n                cnt[x] += 1\n            if cnt[1] != 1:\n                flag = 0\n            else:\n                p = 1\n                q = max(arr)\n                while p <= q:\n                    if p not in cnt:\n                        flag = 0\n                        break\n                    p += 1\n    print('YES' if flag else 'NO')"]