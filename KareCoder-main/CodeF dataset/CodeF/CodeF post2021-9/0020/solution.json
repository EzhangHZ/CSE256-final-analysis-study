["def fun(s, c):\n    bol = False\n    occur = []\n    for (pos, char) in enumerate(s):\n        if char == c:\n            occur.append(pos)\n    le = len(s)\n    for i in range(len(occur)):\n        if occur[i] % 2 == 0 and le % 2 != 0:\n            bol = True\n            break\n    return bol\nn = int(input())\narr = []\nfor i in range(n):\n    s = input()\n    c = input()\n    if fun(s, c):\n        arr.append('YES')\n    else:\n        arr.append('NO')\nfor i in range(n):\n    print(arr[i])", "import sys\n\ndef canSubstring(s, c):\n    for i in range(len(s)):\n        if s[i] == c and i % 2 == 0:\n            return 'YES'\n    return 'NO'\ninputs = sys.stdin.readlines()\nfor i in range(1, len(inputs), 2):\n    print(canSubstring(inputs[i].strip(), inputs[i + 1].strip()))", "for _ in range(int(input())):\n    s = input()\n    c = input()\n    f = 0\n    for i in range(len(s)):\n        if c == s[i]:\n            if i % 2 == 0:\n                print('YES')\n                f = 1\n                break\n    if not f:\n        print('NO')", "for _ in range(int(input())):\n    s = input()\n    c = input()\n    flag = False\n    for i in range(len(s)):\n        if s[i] == c and i % 2 == 0:\n            flag = True\n            break\n    print('YES' if flag else 'NO')", "for _ in range(int(input())):\n    l = input()\n    s = input()\n    if s not in l:\n        print('NO')\n    else:\n        for i in range(len(l)):\n            if l[i] == s:\n                if i % 2 == 0 and (len(l) - (i + 1)) % 2 == 0:\n                    print('YES')\n                    break\n        else:\n            print('NO')", "t = int(input())\nfor zz in range(t):\n    s = input()\n    kk = input()\n    p = 0\n    for i in range(len(s)):\n        if s[i] == kk and i % 2 == 0:\n            p = 1\n            break\n    if p == 1:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    s = input().rstrip()\n    target = input().rstrip()\n    ans = 'NO'\n    for i in range(len(s)):\n        if s[len(s) - 1 - i] == target and i % 2 == 0:\n            ans = 'YES'\n            break\n    print(ans)", "a = int(input())\nfor x in range(a):\n    b = input()\n    c = input()\n    j = len(b)\n    l = -1\n    for y in range(j):\n        if y % 2 == 0:\n            if b[y] == c:\n                l = 0\n                break\n    if l == 0:\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\ncases = []\n\ndef is_even(n):\n    return n % 2 == 0\n\nclass case:\n\n    def __init__(self, w, l):\n        self.w = w\n        self.l = l\nfor i in range(T):\n    word = input()\n    letter = input()\n    cases.append(case(word, letter))\n\ndef main(obj):\n    x = obj.w.find(obj.l)\n    le = len(obj.w) - 1\n    if x == -1:\n        return 'NO'\n    else:\n        for i in range(le + 1):\n            if obj.l == obj.w[i]:\n                if is_even(i) and is_even(le - i):\n                    return 'YES'\n    return 'NO'\nfor i in range(T):\n    print(main(cases[i]))", "import sys\nmy_input = sys.stdin.readline\nmy_output = sys.stdout.write\nfor _ in range(int(my_input())):\n    s = my_input().strip()\n    c = my_input().strip()\n    ans = 'YES' if c in s[::2] else 'NO'\n    my_output(f'{ans}\\n')", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    d = input().strip()\n    w = input().strip()\n    c = []\n    for i in range(len(d)):\n        if d[i] == w:\n            c.append(i)\n    r = 'NO'\n    for i in c:\n        if i % 2 == 0:\n            r = 'YES'\n            break\n    print(r)", "nbTest = int(input())\nfor testN in range(nbTest):\n    s = list(input())\n    c = input()\n    if c not in s:\n        print('NO')\n    else:\n        d = False\n        indices = [i for (i, x) in enumerate(s) if x == c]\n        for i in indices:\n            if i % 2 == 0 or (len(s) - i) % 2 == 1:\n                print('YES')\n                d = True\n                break\n        if not d:\n            print('NO')", "def find(A, c):\n    li = []\n    while A.count(c) != 0:\n        m = A.find(c)\n        k = li.append(m)\n        A = A[:m] + '#' + A[m + 1:]\n    return li\nfor t in range(int(input())):\n    A = str(input())\n    B = str(input())\n    k = find(A, B)\n    if len(k) == 0:\n        print('NO')\n    else:\n        for l in k:\n            if l % 2 == 0:\n                print('YES')\n                break\n        else:\n            print('NO')", "def solve(s, c):\n    l = len(s)\n    for i in range(l):\n        if s[i] == c:\n            if i % 2 == 0 and (l - i - 1) % 2 == 0:\n                return 'YES'\n    return 'NO'\nn = int(input())\nfor i in range(n):\n    s = input()\n    c = input()\n    print(solve(s, c))", "import sys\ninput = sys.stdin.readline\nprint = sys.stdout.write\n\ndef main():\n    a = int(input())\n    for i in range(a):\n        s = str(input())[:-1]\n        b = str(input())[:-1]\n        s = list(s)\n        for i in range(len(s)):\n            if s[i] == b and i % 2 == 1:\n                s[i] = 0\n        if b in s:\n            print(f'YES\\n')\n        else:\n            print(f'NO\\n')\nmain()", "try:\n    for _ in range(int(input())):\n        s = input()\n        c = input()\n        for i in range(len(s)):\n            if s[i] == c and i + 1 & 1:\n                print('YES')\n                break\n        else:\n            print('NO')\nexcept:\n    pass", "t = int(input())\nfor _ in range(t):\n    s = input()\n    c = input()\n    for i in range(0, len(s), 2):\n        if s[i] == c:\n            print('YES')\n            break\n    else:\n        print('NO')", "for _ in range(int(input())):\n    s = input()\n    c = input()\n    n = len(s)\n    for i in range(n // 2 + 1):\n        if s[i] == c or s[n - i - 1] == c:\n            if i % 2 == 0 and (n - i - 1) % 2 == 0:\n                print('YES')\n                break\n    else:\n        print('NO')", "a = int(input())\nfor i in range(a):\n    b = input()\n    c = input()\n    d = []\n    if c not in b:\n        print('NO')\n    else:\n        for i in range(len(b)):\n            if b[i] == c and i != 1 and (i % 2 == 0):\n                print('YES')\n                break\n        else:\n            print('NO')", "t = int(input())\nfor _ in range(t):\n    n = input()\n    c = input()\n    test = True\n    for i in range(len(n)):\n        if n[i] == c and i % 2 == 0:\n            test = False\n            print('YES')\n            break\n    if test:\n        print('NO')", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    s = input().strip()\n    c = input().strip()\n    ans = 'NO'\n    for i in range(len(s)):\n        if s[i] == c and i % 2 == 0:\n            ans = 'YES'\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    c = input()\n    r = False\n    _len = len(s)\n    for (ind, i) in enumerate(s):\n        if i == c:\n            if (_len - ind) % 2:\n                r = True\n                break\n    print(['NO', 'YES'][r])", "t = int(input())\nfor _ in range(t):\n    data = input()\n    char = input()\n    flag = False\n    if data.count(char) >= 1:\n        for index in range(len(data)):\n            if data[index] == char:\n                if index % 2 == 0:\n                    flag = True\n    print('YES') if flag else print('NO')", "n = int(input())\nd = []\ncount = 0\nfor N in range(n):\n    s = input()\n    c = input()\n    for i in range(0, len(s), 2):\n        if s[i] == c:\n            count += 1\n            break\n    if count >= 1:\n        d.append('YES')\n    else:\n        d.append('NO')\n    count = 0\nfor N in range(n):\n    print(d[N])", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\ntc = int(input())\nwhile tc:\n    string = input()\n    c = input()\n    success = False\n    for i in range(len(string)):\n        if string[i] == c:\n            if i % 2 == 0 and (len(string) - i - 1) % 2 == 0:\n                success = True\n                break\n    print('YES' if success else 'NO')\n    tc -= 1", "t = int(input())\nfor o in range(t):\n    s = input()\n    ch = input()\n    ind = -1\n    for i in range(len(s)):\n        if s[i] == ch:\n            ind = i\n            if ind % 2 == 0:\n                break\n    if ind % 2 != 0 or ind == -1:\n        print('NO')\n    else:\n        print('YES')", "def find(str, ch):\n    flag = 0\n    for i in range(len(str)):\n        if str[i] == ch:\n            if i % 2 == 0:\n                flag = 1\n    if flag == 0:\n        return 'NO'\n    else:\n        return 'YES'\nt = int(input())\nfor i in range(t):\n    s = input()\n    x = input()\n    print(find(s, x))", "nums = int(input())\ntestcases = []\nfor i in range(nums):\n    string = input()\n    target = input()\n    testcases.append([string, target])\n\ndef checker(string, target):\n    for i in range(len(string)):\n        if string[i] == target:\n            right = len(string) - 1 - i\n            left = i\n            if left % 2 == 0 and right % 2 == 0:\n                print('YES')\n                return\n    print('NO')\nfor i in testcases:\n    checker(i[0], i[1])", "for i in range(int(input())):\n    s = input()\n    c = input()\n    flag = 1\n    for a in range(len(s)):\n        if s[a] == c:\n            if a % 2 == 0 and (len(s) - a - 1) % 2 == 0:\n                print('YES')\n                flag = 0\n                break\n    if flag:\n        print('NO')", "t = int(input())\nresult = []\nfor i1 in range(t):\n    str1 = input()\n    str2 = input()\n    index_list = []\n    for i1 in range(len(str1)):\n        if str1[i1] == str2:\n            index_list.append(i1)\n    if len(index_list) > 0:\n        for i3 in index_list:\n            if i3 % 2 == 0:\n                result.append('YES')\n                break\n        else:\n            result.append('NO')\n    else:\n        result.append('NO')\nfor i4 in result:\n    print(i4)", "t = int(input())\nwhile t != 0:\n    s = input()\n    a = input()\n    if len(s) == 1:\n        if s == a:\n            print('YES')\n        else:\n            print('NO')\n    elif a not in s:\n        print('NO')\n    else:\n        v = True\n        while v:\n            n = s.index(a)\n            if n == 0:\n                print('YES')\n                break\n            elif n == len(s) - 1:\n                print('YES')\n                break\n            elif n % 2 == 0 and (len(s) - (n + 1)) % 2 == 0:\n                print('YES')\n                break\n            else:\n                s = s[n + 1:]\n            if a not in s:\n                print('NO')\n                break\n    t -= 1", "for _ in range(int(input())):\n    s = input()\n    c = input()\n    f = any((not n % 2 for n in [i for (i, l) in enumerate(s) if l == c]))\n    print('YNEOS'[not f::2])", "n = int(input())\nfor i in range(n):\n    s = input()\n    k = input()\n    arr = []\n    flag = 1\n    for j in range(len(s)):\n        if s[j] == k:\n            if j == 1:\n                pass\n            elif j % 2 == 0 or j == 0:\n                print('YES')\n                flag = 0\n                break\n    if flag == 1:\n        print('NO')", "for _ in range(int(input())):\n    s = input()\n    c = input()\n    l = 0\n    if c not in s:\n        print('NO')\n    else:\n        for i in range(len(s)):\n            if s[i] == c:\n                if i % 2 == 0:\n                    l = 1\n                    print('YES')\n                    break\n        if l != 1:\n            print('NO')", "for i in range(int(input())):\n    a = input()\n    b = input()\n    for i in range(len(a)):\n        if a[i] == b and i % 2 == 0:\n            print('YES')\n            break\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    s = input()\n    c = input()\n    ans = False\n    for j in range(len(s)):\n        if s[j] == c:\n            if j % 2 == 0:\n                ans = True\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    s = input()\n    c = input()\n    flag = False\n    for i in range(len(s)):\n        if s[i] == c:\n            if i % 2 == 0:\n                flag = True\n                break\n    print('YES') if flag else print('NO')", "t = int(input())\nfor i in range(t):\n    s1 = input()\n    s2 = input()\n    flag = 0\n    for j in range(len(s1)):\n        if s1[j] == s2[0] and j % 2 == 0:\n            flag = 1\n            break\n    if flag == 1:\n        print('YES')\n    else:\n        print('NO')", "def astrove(k, st):\n    for j in range(len(k)):\n        if j % 2 == 0 and k[j] == st:\n            return True\n    return False\nfor _ in range(int(input())):\n    st = input()\n    cnt = input()\n    if astrove(st, cnt) == True:\n        print('YES')\n    else:\n        print('NO')", "def main():\n    s = input()\n    c = input()\n    for i in range(len(s)):\n        if s[i] == c:\n            before = len(s[0:i])\n            after = len(s[i + 1:])\n            if before % 2 == 0 and after % 2 == 0:\n                return 'YES'\n    return 'NO'\nfor i in range(int(input())):\n    print(main())", "a = int(input())\nfor i in range(a):\n    s = input()\n    c = input()\n    f = False\n    for i in range(len(s)):\n        if s[i] == c and (len(s) - i - 1) % 2 == 0 and (i % 2 == 0):\n            f = True\n            break\n    if f:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    s = input()\n    c = input()\n    try:\n        indices = [i % 2 == 0 for (i, x) in enumerate(s) if x == c]\n        if True in indices:\n            print('YES')\n        else:\n            print('NO')\n    except ValueError:\n        print('NO')", "t = int(input())\n\ndef chichi(se, ce):\n    for i in range(len(se)):\n        if ce not in se:\n            return 'NO'\n        elif se[0] == ce or ce == se[-1]:\n            return 'YES'\n        else:\n            for k in range(1, len(se)):\n                if se[k] == ce and len(se[:k]) % 2 == 0 and (len(se[k + 1:]) % 2 == 0):\n                    return 'YES'\n            return 'NO'\nfor i in range(t):\n    s = str(input())\n    c = str(input())\n    if len(s) % 2 == 0:\n        print('NO')\n        break\n    if type(c) != str:\n        print('NO')\n        break\n    print(chichi(s, c))", "n = int(input())\nfor i in range(n):\n    string = str(input())\n    letter = str(input())\n    yes = False\n    for i in range(len(string)):\n        if string[i] == letter[0] and i % 2 == 0:\n            yes = True\n    if yes == True:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor k in range(t):\n    st = input()\n    c = input()\n    n = len(st)\n    ans = False\n    for i in range(n):\n        if st[i] == c:\n            if i % 2 == 0 and (n - i - 1) % 2 == 0:\n                ans = True\n                break\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    k = input()\n    j = input()\n    t = False\n    for m in range(0, len(k), 2):\n        if j == k[m]:\n            t = True\n            break\n    if t:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nfor i in range(n):\n    a = 0\n    s1 = input()\n    s2 = input()\n    while True:\n        k = s1.find(s2, a)\n        if k % 2 != 0:\n            a = k + 1\n        if k == -1:\n            print('NO')\n            break\n        if k % 2 == 0 and (len(s1) - a - 1) % 2 == 0:\n            print('YES')\n            break", "t = int(input())\nfor _ in range(t):\n    s = input()\n    c = input()\n    found = False\n    for i in range(len(s)):\n        if s[i] == c and i % 2 == 0:\n            found = True\n            break\n    if found:\n        print('YES')\n    else:\n        print('NO')", "def solve(s, c):\n    for i in range(len(s)):\n        if s[i] == c and i % 2 == 0:\n            return 'YES'\n    return 'NO'\nt = int(input())\nwhile t:\n    s = input()\n    c = input()\n    print(solve(s, c))\n    t -= 1", "for _ in range(int(input())):\n    s = input()\n    c = input()\n    k = 0\n    for i in range(len(s)):\n        if s[i] == c and i % 2 == 0:\n            k += 1\n            print('YES')\n            break\n    if k == 0:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    sen = input()\n    ch = input()\n    count = 0\n    if sen.__contains__(ch):\n        for j in range(len(sen)):\n            if sen[j] == ch[0]:\n                if j % 2 == 0:\n                    print('YES')\n                    count += 1\n                    break\n        if count == 0:\n            print('NO')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    s = input()\n    c = input()\n    flag = 0\n    for pos in range(len(s)):\n        if s[pos] == c:\n            if pos % 2 == 0 and (len(s) - 1 - pos) % 2 == 0:\n                print('YES')\n                flag = 1\n                break\n    if not flag:\n        print('NO')", "for i in range(int(input())):\n    s = list(map(str, input()))\n    c = input()\n    n = 0\n    if c not in s:\n        print('NO')\n    elif s.count(c) == 1:\n        if s.index(c) % 2 == 0:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        for j in range(len(s)):\n            if s[j] == c:\n                if j % 2 == 0:\n                    n = 1\n                    print('YES')\n                    break\n        if n == 0:\n            print('NO')", "for i in range(int(input())):\n    s = input()\n    c = input()\n    count = s.count(c)\n    flag = True\n    flag1 = True\n    if c in s:\n        for j in range(count):\n            if len(s[:s.index(c)]) % 2 == 0 and len(s[s.index(c) + 1:]) % 2 == 0:\n                flag = True\n            else:\n                flag = False\n            s = s.replace(c, '1', 1)\n            if flag:\n                print('YES')\n                flag1 = False\n                break\n        if flag1:\n            print('NO')\n    else:\n        print('NO')", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_list_string():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\n\ndef get_print_int(x):\n    sys.stdout.write(str(x) + '\\n')\n\ndef get_print(x):\n    sys.stdout.write(x + '\\n')\n\ndef get_print_int_same(x):\n    sys.stdout.write(str(x) + ' ')\n\ndef get_print_same(x):\n    sys.stdout.write(x + ' ')\n\ndef solve():\n    for _ in range(get_int()):\n        s = get_string()\n        c = get_string()\n        n = len(s)\n        ans = 'NO'\n        for i in range(n):\n            if s[i] == c[0] and i % 2 == 0:\n                ans = 'YES'\n                break\n        get_print(ans)\nsolve()", "t = int(input())\nfor i in range(t):\n    s = input()\n    c = input()\n    if s[0] == c:\n        print('YES')\n    else:\n        ok = 0\n        for j in range(1, len(s) // 2 + 1):\n            if s[2 * j] == c:\n                ok = 1\n                break\n        if ok == 1:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nfor i in range(0, t):\n    A = 0\n    B = 0\n    s = input()\n    m = input()\n    k = len(s)\n    for j in range(0, k):\n        if m == s[j]:\n            a = j + 1\n            count = 0\n            if a % 2 == 1:\n                A = 1\n                break\n            else:\n                B = 0\n    if A or B == 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    initial_string = input()\n    final_letter = input()\n    res = 'NO'\n    for (index, i) in enumerate(initial_string):\n        if i != final_letter:\n            continue\n        if index % 2 == 0:\n            res = 'YES'\n            break\n    print(res)", "for _ in range(int(input())):\n    (s, c) = (input(), input())\n    print('YNEOS'[(c in s[::2]) + 1 & 1::2])", "t = int(input())\nfor _ in range(t):\n    s = input()\n    c = input()\n    ispos = False\n    for i in range(len(s)):\n        if s[i] == c and i % 2 == 0:\n            ispos = True\n            break\n    if ispos:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    str1 = input()\n    str2 = input()\n    print('YES' if str2 in str1[::2] else 'NO')", "def find_lrlen(string, i):\n    return (len(string[:i]), len(string[i + 1:]))\n\ndef find_index(string, target):\n    indexx = [index for (index, element) in enumerate(string) if element == target]\n    return indexx\n\ndef main(string, target):\n    indexs = find_index(string, target)\n    for i in indexs:\n        (l, r) = find_lrlen(string, i)\n        if l % 2 == 0 and r % 2 == 0:\n            return 'YES'\n    return 'NO'\nt = int(input())\ninputs = list()\nfor _ in range(t):\n    string = input()\n    target = input()\n    inputs.append((string, target))\nfor (string, target) in inputs:\n    print(main(string, target))", "t = int(input())\nli = []\nlj = []\nfor _ in range(t):\n    li += [input()]\n    lj += [input()]\nfor i in range(t):\n    s = li[i]\n    c = lj[i]\n    p = s.count(c)\n    if p == 1 and len(s) % 2 == 1:\n        if s.index(c) % 2 == 0:\n            print('YES')\n        else:\n            print('NO')\n    elif p > 1 and len(s) % 2 == 1:\n        f = 1\n        for _ in range(p):\n            l = s.index(c)\n            if l % 2 == 0:\n                print('YES')\n                f = 0\n                break\n            else:\n                s = s[:l] + '0' + s[l + 1:]\n        if f == 1:\n            print('NO')\n    else:\n        print('NO')", "import sys\nlinesPerTest = 2\ntestArguments = []\ni = 0\ntotalLines = 1\nwhile i <= totalLines:\n    line = sys.stdin.readline().rstrip('\\n')\n    if i == 0:\n        totalLines = linesPerTest * int(line)\n    else:\n        testArguments.append(line)\n    i += 1\ntestCases = []\nfor j in range(0, len(testArguments), linesPerTest):\n    testCases.append(testArguments[j:j + linesPerTest])\n\ndef f(testArguments):\n    s = testArguments[0]\n    c = testArguments[1]\n    for i in range(0, len(s), 2):\n        if s[i] == c:\n            return 'YES'\n    return 'NO'\nfor testCase in testCases:\n    print(f(testCase))", "class Solution:\n\n    def deletion_of_two_adjacent_letters(self):\n        number_of_cases = int(input())\n        for case in range(number_of_cases):\n            print_yes = False\n            string = input()\n            character = input()\n            if character not in string:\n                print('NO')\n                continue\n            for character_appear in range(string.count(character)):\n                leftSum = 0 + string.index(character)\n                rightSum = len(string) - 1 - string.index(character)\n                if rightSum % 2 == 0 and leftSum % 2 == 0:\n                    print_yes = True\n                else:\n                    string = string.replace(character, '0', 1)\n            if print_yes:\n                print('YES')\n            else:\n                print('NO')\nSolution.deletion_of_two_adjacent_letters(None)", "class Solution:\n\n    def deletion_of_two_adjacent_letters(self):\n        number_of_cases = int(input())\n        for case in range(number_of_cases):\n            string = input()\n            character = input()\n            if character in string[::2]:\n                print('YES')\n            else:\n                print('NO')\nSolution.deletion_of_two_adjacent_letters(None)", "for i in range(int(input())):\n    a = list(input())\n    s = input()\n    if s in a:\n        w = a.count(s)\n        f = []\n        for i in range(w):\n            f.append(a.index(s))\n            a[a.index(s)] = '!'\n        for b in f:\n            if b % 2 == 0:\n                print('YES')\n                break\n            elif f.index(b) == len(f) - 1:\n                print('NO')\n    else:\n        print('NO')", "t = int(input())\nwhile t != 0:\n    t = t - 1\n    s = input()\n    s1 = input()\n    if s[0] == s1 or s[len(s) - 1] == s1:\n        print('YES')\n    elif s1 in s:\n        for i in range(0, len(s)):\n            if s[i] == s1:\n                if i % 2 == 0:\n                    print('YES')\n                    break\n        if i == len(s) - 1:\n            print('NO')\n            continue\n    else:\n        print('NO')", "t = int(input())\nwhile t:\n    s = input()\n    c = input()\n    n = len(s)\n    if s[n - 1] == c:\n        print('YES')\n    else:\n        flag = 0\n        for i in range(n - 2):\n            if s[i] == c:\n                a = len(s[:i])\n                if a % 2 == 0:\n                    flag = 1\n                    print('YES')\n                    break\n        if flag == 0:\n            print('NO')\n    t -= 1", "def main():\n\n    def solve(s, c):\n        for i in range(len(s)):\n            if s[i] == c and i % 2 == 0:\n                return 'YES'\n        return 'NO'\n    t = int(input())\n    ans = []\n    for _ in range(t):\n        s = input()\n        c = input().strip()\n        ans.append(solve(s, c))\n    print('\\n'.join(ans))\nimport sys, threading\ninput = sys.stdin.readline\nthread = threading.Thread(target=main)\nthread.start()\nthread.join()", "I = input\nfor t in range(int(I())):\n    s = I()\n    c = I()\n    ans = 'NO'\n    for (x, y) in enumerate(s, 0):\n        if y == c and x % 2 == 0:\n            ans = 'YES'\n            break\n    print(ans)", "t = int(input())\nfor i in range(t):\n    s = input()\n    c = input()\n    lst = []\n    for i in range(len(s)):\n        if s[i] == c:\n            lst.append(i)\n    for i in lst:\n        if i % 2 == 0:\n            print('YES')\n            break\n    else:\n        print('NO')", "for i in range(int(input())):\n    s = input()\n    c = input()\n    if c in s[::2]:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nfor i in range(n):\n    s = input()\n    c = input()\n    if c in s:\n        flag = False\n        for i in range(len(s)):\n            if s[i] == c and i % 2 == 0:\n                flag = True\n                break\n        if flag:\n            print('YES')\n        else:\n            print('NO')\n        flag = False\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\noutput = sys.stdout.write\n\ndef main():\n    tests = int(input().rstrip())\n    for i in range(tests):\n        list_ = list(input().rstrip())\n        letter = input().rstrip()\n        state = False\n        for (indx, lett) in enumerate(list_):\n            if lett == letter:\n                if indx % 2 == 0:\n                    state = True\n                    break\n        if state:\n            output('YES')\n        else:\n            output('NO')\n        output('\\n')\nmain()", "T = int(input())\nwhile T:\n    T -= 1\n    s = input()\n    c = input()\n    cnt = 0\n    for i in range(len(s)):\n        if s[i] == c and i % 2 == 0:\n            cnt += 1\n    if cnt > 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    a = input()\n    b = input()\n    s = 0\n    for i in range(len(a)):\n        if a[i] != b:\n            s += 1\n        elif s % 2 == 0:\n            print('YES')\n            break\n        else:\n            s += 1\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    s = input()\n    c = input()\n    n = len(s)\n    check = False\n    for i in range(n):\n        if s[i] == c and i % 2 == 0:\n            check = True\n            break\n    if check:\n        print('YES')\n    else:\n        print('NO')", "import sys\n\ndef input():\n    return sys.stdin.readline().rstrip()\nn = int(input())\nfor _ in range(n):\n    flag = False\n    w = input()\n    c = input()\n    for idx in range(len(w)):\n        if w[idx] == c:\n            if idx % 2 == 0:\n                flag = True\n                break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin as sin\n\ndef aint():\n    return int(input())\n\ndef amap():\n    return map(int, sin.readline().split())\n\ndef alist():\n    return list(map(int, sin.readline().split()))\n\ndef astr():\n    return input()\nfor _ in range(aint()):\n    s = input()\n    c = input()\n    f = False\n    n = len(s)\n    for i in range(n):\n        if s[i] == c and i % 2 == 0 and ((n - i - 1) % 2 == 0):\n            f = True\n            break\n    if f:\n        print('YES')\n    else:\n        print('NO')", "import sys\nfrom math import sqrt, gcd, factorial\nfrom collections import deque, Counter, OrderedDict\nsys.setrecursionlimit(10 ** 6)\ninput = lambda : sys.stdin.readline()\nI = lambda : int(input())\nS = lambda : input().strip()\nM = lambda : map(int, input().strip().split())\nL = lambda : list(map(int, input().strip().split()))\nmod = 1000000007\nfor _ in range(I()):\n    s = S()\n    c = S()\n    ans = 'NO'\n    n = len(s)\n    for i in range(n):\n        if s[i] == c and (i - 0) % 2 == 0 and ((n - 1 - i) % 2 == 0):\n            ans = 'YES'\n            break\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    char = input()\n    ans = False\n    for i in range(0, len(s), 2):\n        if char == s[i]:\n            ans = True\n            break\n    print(['NO', 'YES'][ans])", "for _ in range(int(input())):\n    s = input()\n    c = input()\n    f = False\n    for i in range(0, len(s), 2):\n        if c == s[i]:\n            f = True\n            break\n    print('YES' if f else 'NO')", "for _ in range(int(input())):\n    s = input().strip()\n    c = input().strip()\n    for (i, ch) in enumerate(s):\n        if ch == c and i % 2 == 0:\n            print('YES')\n            break\n    else:\n        print('NO')", "for _ in range(int(input())):\n    s = input()\n    c = input()\n    n = len(s)\n    flag = False\n    for i in range(0, n, 2):\n        if s[i] == c:\n            print('YES')\n            flag = True\n            break\n    if flag == False:\n        print('NO')"]