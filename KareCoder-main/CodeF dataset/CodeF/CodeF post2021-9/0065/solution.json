["import sys\ninp = sys.stdin.readline\nfor _ in range(int(inp())):\n    n = int(inp())\n    print(' '.join([str(i + 1) if i < n else '1' for i in range(1, n + 1)]))", "import fileinput\n\ndef computePermutation(n):\n    ans = [str(n)] + [str(x) for x in range(1, n)]\n    print(' '.join(ans))\ncases = 0\nfor line in fileinput.input():\n    if cases == 0:\n        cases = int(line.strip())\n    else:\n        n = int(line.strip())\n        computePermutation(n)\n        cases -= 1\n        if cases == 0:\n            break", "test_case = int(input())\nnums = []\nfor k in range(test_case):\n    num = int(input())\n    nums.append(num)\nfor k in range(test_case):\n    ans = []\n    if nums[k] == 1:\n        print(1)\n    else:\n        for i in range(1, nums[k]):\n            ans.append(i + 1)\n        ans.append(1)\n        print(' '.join(map(str, ans)))", "n = int(input())\nx = []\nfor i in range(n):\n    x.append(int(input()))\nfor elements in x:\n    if elements == 1:\n        print('1')\n    elif elements > 1:\n        if elements % 2 == 0:\n            y = '2 1'\n            for k in range(3, elements + 1):\n                if k % 2 == 1:\n                    y = y + f' {k + 1}'\n                else:\n                    y = y + f' {k - 1}'\n        else:\n            y = '1'\n            for g in range(2, elements + 1):\n                if g % 2 == 0:\n                    y = y + f' {g + 1}'\n                else:\n                    y = y + f' {g - 1}'\n        print(y)", "import sys, math\nlines = [line.rstrip() for line in sys.stdin]\nn_cases = int(lines[0])\nfor i in range(n_cases):\n    l = lines[i + 1]\n    vals = list(range(2, int(l) + 1))\n    vals.append(1)\n    vals = [str(x) for x in vals]\n    out = ' '.join(vals)\n    print(out)", "n = int(input())\ntLst = []\nfor i in range(0, n):\n    x = int(input())\n    tLst.append(x)\nfor i in range(0, n):\n    pLst = [tLst[i]]\n    for i in range(1, tLst[i]):\n        pLst.append(i)\n    s_pLst = [str(i) for i in pLst]\n    s = ' '.join(s_pLst)\n    print(s)", "def ans(n):\n    p = []\n    p.append(n)\n    for i in range(n - 1):\n        p.append(i + 1)\n    return p\nt = int(input())\nr = []\nfor i in range(t):\n    n = int(input())\n    c = ans(n)\n    r.append(c)\nfor i in range(t):\n    print(' '.join(map(str, r[i])))", "t = int(input())\nans = []\nfor _ in range(t):\n    n = input()\n    s = n + ' '\n    for i in range(1, int(n)):\n        s += str(i) + ' '\n    ans.append(s)\nfor i in ans:\n    print(i)", "n = int(input())\nres = []\nfor i in range(n):\n    cur = int(input())\n    cur_ans = []\n    for j in range(1, (cur - cur % 2) // 2 + 1):\n        cur_ans.append(j * 2)\n        cur_ans.append(j * 2 - 1)\n    if cur % 2 != 0:\n        if len(cur_ans) > 0:\n            cur_ans[0] = cur\n            cur_ans.append(2)\n        else:\n            cur_ans.append(cur)\n    res.append(cur_ans)\nfor i in res:\n    print(' '.join(map(str, i)))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(' '.join(map(str, list(range(2, n + 1)) + [1])))", "import sys\n\ndef solve(n):\n    if n == 1:\n        print('1')\n        return\n    data = [i + 1 if i % 2 != 0 else i - 1 for i in range(1, n + 1 if n % 2 == 0 else n)]\n    if len(data) < n:\n        data[-1] = n\n        data.append(n - 2)\n    print(' '.join([str(a) for a in data]))\nt = int(next(sys.stdin))\nfor i in range(t):\n    n = int(next(sys.stdin))\n    solve(n)", "def solve_for_perm(perm):\n    if perm == 1:\n        print('1')\n    if perm != 1:\n        min_weight_perm = f'{perm}'\n        list_rest_of_perm = map(str, range(1, perm))\n        rest_of_perm = ' '.join(list_rest_of_perm)\n        min_weight_perm = min_weight_perm + ' ' + rest_of_perm\n        print(min_weight_perm)\ninp_lines = int(input())\nfor i in range(inp_lines):\n    perm = int(input())\n    solve_for_perm(perm)", "n = int(input())\nx = []\nfor i in range(n):\n    x.append(int(input()))\nfor e in x:\n    if e == 1:\n        print('1')\n    elif e > 1:\n        if e % 2 == 0:\n            y = '2 1'\n            for k in range(3, e + 1):\n                if k % 2 == 1:\n                    y = y + f' {k + 1}'\n                else:\n                    y = y + f' {k - 1}'\n        else:\n            y = '1'\n            for g in range(2, e + 1):\n                if g % 2 == 0:\n                    y = y + f' {g + 1}'\n                else:\n                    y = y + f' {g - 1}'\n        print(y)", "trails = int(input())\nanswer_list = []\nfor x in range(trails):\n    s = int(input())\n    ans = ''\n    for d in range(2, s + 1):\n        ans += str(d)\n        ans += ' '\n    ans += '1'\n    answer_list.append(ans)\nfor g in answer_list:\n    print(g)", "import sys\nprintf = sys.stdout.write\n\ndef intput():\n    return int(sys.stdin.readline())\n\ndef get_int():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_lis():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_liss():\n    return sys.stdin.readline().split()\n\ndef get_ints():\n    return sys.stdin.readline().split()\n\ndef get_str():\n    return sys.stdin.readline().strip()\n\ndef pop_zeros(items):\n    while items[-1] == 0:\n        items.pop()\nfrom collections import defaultdict\nimport math\nt = intput()\nwhile t:\n    n = intput()\n    ans = []\n    if n % 2 == 0:\n        for i in range(n):\n            if i % 2 == 0:\n                ans.append(i + 2)\n            else:\n                ans.append(i)\n    else:\n        for i in range(n - 1):\n            if i % 2 == 0:\n                ans.append(i + 2)\n            else:\n                ans.append(n - i + 1)\n        ans.append(1)\n    printf(' '.join((str(x) for x in ans)))\n    printf('\\n')\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(1)\n    elif n == 2:\n        print(2, 1)\n    else:\n        s = '2'\n        for i in range(n - 2):\n            s += ' ' + str(i + 3)\n        s += ' ' + '1'\n        print(s)", "def main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        if n == 1:\n            print(1)\n        else:\n            ans = [str(i) for i in range(2, n + 1)]\n            ans.append('1')\n            print(' '.join(ans))\nmain()", "t = int(input())\nfor t in range(t):\n    m = int(input())\n    r = list(range(2, m + 1))\n    r += [1]\n    print(' '.join(map(str, r)))", "for t in range(int(input())):\n    print(' '.join(map(str, list(range(2, int(input()) + 1)) + [1])))", "for _ in range(int(input())):\n    n = int(input())\n    res = [i for i in range(2, n + 1)] + [1]\n    res = list(map(str, res))\n    print(' '.join(res))", "for i in range(int(input())):\n    n = int(input())\n    a = [n]\n    b = list(range(1, n))\n    a.extend(b)\n    print(' '.join(list(map(str, a))))", "for _ in range(int(input())):\n    n = int(input())\n    ans = [str(i) for i in range(1, n + 1)]\n    ans.pop(0)\n    ans.append('1')\n    print(' '.join(ans))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [n] + list(range(1, n))\n    print(' '.join(map(str, a)))", "case = int(input())\nfor i in range(case):\n    x = int(input())\n    if x == 1:\n        print('1')\n    else:\n        list1 = []\n        list1.append(str(x))\n        for j in range(x - 1):\n            list1.append(str(j + 1))\n        print(' '.join(list1))", "for i in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(1)\n    else:\n        a = [str(n)]\n        a.extend([str(i) for i in range(1, n)])\n        print(' '.join(a))", "t = int(input())\nfor testcase in range(t):\n    n = int(input())\n    if n == 1:\n        print('1')\n        continue\n    if n == 2:\n        print('2 1')\n        continue\n    ans = [1]\n    for i in range(2, n):\n        if i % 2 == 0:\n            ans.append(i + 1)\n        else:\n            ans.append(i - 1)\n    if n % 2 == 0:\n        ans[n - 2] = n\n        ans.append(n - 2)\n    else:\n        ans.append(n - 1)\n    out = str(ans)[1:-1].replace(',', '')\n    print(out)", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    if n == 1:\n        print(1)\n    else:\n        print(' '.join([str(i) for i in range(2, n + 1)]) + ' 1')", "def permutation_weight(n):\n    permutation = []\n    permutation.append(n)\n    for i in range(1, n):\n        permutation.append(i)\n    print(' '.join([str(s) for s in permutation]))\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    permutation_weight(n)", "def solve():\n    n = int(input())\n    if n == 1:\n        print(1)\n    elif n & 1:\n        res = [2, n]\n        for i in range(1, n):\n            if i == 2:\n                continue\n            res.append(i)\n        print(' '.join(map(str, res)))\n    else:\n        res = []\n        for i in range(1, n, 2):\n            res.append(i + 1)\n            res.append(i)\n        print(' '.join(map(str, res)))\nfor _ in range(int(input())):\n    solve()", "for t in range(int(input())):\n    print(' '.join(map(str, list(range(2, int(input()) + 1)) + [1])))", "t = int(input())\nfor t0 in range(t):\n    n = int(input())\n    A = [str(n)] + [str(i) for i in range(1, n)]\n    print(' '.join(A))", "for t in range(int(input())):\n    n = int(input())\n    l = [x for x in range(2, n + 1)]\n    print(' '.join(list(map(str, l))), '1')", "def main():\n    n = int(input())\n    for x in range(n):\n        ln = int(input())\n        perm = list(range(1, ln + 1))\n        perm.insert(0, perm.pop(-1))\n        print(' '.join(map(str, perm)))\nmain()", "for t in range(int(input())):\n    n = int(input())\n    print(' '.join(map(str, [n] + list(range(1, n)))))", "for n in [*open(0)][1:]:\n    print(*range(2, int(n) + 1), 1)", "t = int(input())\nfor _ in range(t):\n    num = int(input())\n    if num == 1:\n        print(1)\n    else:\n        print(num, end=' ')\n        print(' '.join([str(i) for i in range(1, num)]))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    L = []\n    L.insert(0, n)\n    for i in range(1, n):\n        L.insert(i, i)\n    print(' '.join(map(str, L)))", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        l = ['1']\n    elif n == 2:\n        l = ['2', '1']\n    else:\n        l = [str(i) for i in range(3, n + 1)]\n        l.insert(0, '1')\n        l.append('2')\n    print(' '.join(l))", "def solution(n):\n    s = str(n) + ' '\n    for i in range(1, n):\n        s += str(i) + ' '\n    return s.strip()\nt = int(input())\nwhile t:\n    n = int(input())\n    print(solution(n))\n    t -= 1", "for _ in range(int(input())):\n    vjd = int(input())\n    print(vjd, ' '.join([str(i) for i in range(1, vjd)]))", "def solve():\n    n = int(input())\n    a = []\n    i = 0\n    a = list(range(1, n + 1))\n    while i + 1 < n:\n        (a[i], a[i + 1]) = (a[i + 1], a[i])\n        i += 2\n    if n & 1:\n        (a[0], a[n - 1]) = (a[n - 1], a[0])\n    return ' '.join((str(i) for i in a))\nfor _ in range(int(input())):\n    ans = solve()\n    print(ans)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    answer = [n] + [x for x in range(1, n)]\n    answer = [str(x) for x in answer]\n    print(' '.join(answer))", "x = int(input())\nfor jj in range(x):\n    n = int(input())\n    arr = [n] + list(range(1, n))\n    p = [str(i) for i in arr]\n    print(' '.join(p))", "def w(s):\n    return sum([1 if s[i] % (i + 1) == 0 else 0 for i in range(len(s))])\nfor _ in range(int(input())):\n    n = int(input())\n    s = list(range(1, n + 1))\n    s = s[1:] + s[0:1]\n    print(' '.join([str(j) for j in s]))", "def solve(v):\n    if v == 1:\n        return ''.join(['1'])\n\n    def round(x, v):\n        return x - 1 if x - 1 > 0 else x + v - 1\n    return ' '.join([str(round(x, v)) for x in range(1, v + 1)])\n\ndef main():\n    n = int(input())\n    for _ in range(n):\n        a = int(input())\n        print(solve(a))\n        pass\n    pass\nmain()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    print(''.join([str(n) + ' '] + [str(a) + ' ' for a in range(1, n)]))", "def perm(n):\n    L = []\n    for i in range(n):\n        L.append(i + 1)\n    if n == 1:\n        return n\n    elif n % 2 == 0:\n        L1 = L\n        i = 1\n        while i < n:\n            (L1[i - 1], L1[i]) = (L1[i], L1[i - 1])\n            i += 2\n        s1 = ''\n        for j in range(n):\n            s1 += str(L1[j])\n            s1 += ' '\n        return s1\n    else:\n        L2 = L\n        i = 2\n        while i < n:\n            (L2[i - 1], L2[i]) = (L2[i], L2[i - 1])\n            i += 2\n        s2 = ''\n        for j in range(n):\n            s2 += str(L2[j])\n            s2 += ' '\n        return s2\nn_in = int(input())\np_lengths = []\nfor i in range(n_in):\n    length = int(input())\n    p_lengths.append(length)\nfor j in range(len(p_lengths)):\n    print(perm(p_lengths[j]))", "def solve(n):\n    return [n] + [i for i in range(1, n)]\nt = int(input())\nwhile t:\n    n = int(input())\n    print(' '.join((str(x) for x in solve(n))))\n    t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = [str(j) for j in list(range(1, n))]\n    arr = [str(n)] + arr\n    print(' '.join(arr))", "for _ in range(int(input())):\n    x = int(input())\n    print(x, ' '.join([str(i) for i in range(1, x)]))", "ans = ''\nfor _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        ans += '1\\n'\n        continue\n    arr = [i for i in range(1, n + 1)]\n    for i in range(n - 1):\n        (arr[i], arr[i + 1]) = (arr[i + 1], arr[i])\n    if n % 2 == 1:\n        (arr[0], arr[n - 1]) = (arr[n - 1], arr[0])\n    for i in arr:\n        ans += str(i) + ' '\n    ans += '\\n'\nprint(ans)", "def perm(n):\n    s = str(n)\n    for i in range(n - 1):\n        s += ' ' + str(i + 1)\n    print(s)\nfor _ in range(int(input())):\n    perm(int(input()))", "for _ in range(int(input())):\n    num = int(input())\n    lis = [str(num)] + [str(x) for x in list(range(1, num))]\n    print(' '.join(lis))", "for _ in range(int(input())):\n    print(' '.join(list(map(str, [i for i in range(2, int(input()) + 1)] + [1]))))", "num = int(input())\nfor i in range(num):\n    n = int(input())\n    res = [str(n)]\n    for j in range(n - 1):\n        res.append(str(j + 1))\n    print(' '.join(res))", "n_tests = int(input().strip())\nfor _ in range(n_tests):\n    n = int(input().strip())\n    ans = [n] + list(range(1, n))\n    ans = [str(i) for i in ans]\n    print(' '.join(ans))", "def sol(n):\n    ans = [i for i in range(1, n)]\n    return ' '.join(map(str, [n] + ans))\nx = int(input())\nfor _ in range(x):\n    n = int(input())\n    print(sol(n))", "t = int(input())\n\ndef solve():\n    n = int(input())\n    ans = [i for i in range(1, n + 1)]\n    if n % 2 != 0:\n        for i in range(1, n - 1, 2):\n            (ans[i], ans[i + 1]) = (ans[i + 1], ans[i])\n    else:\n        for i in range(1, n - 2, 2):\n            (ans[i], ans[i + 1]) = (ans[i + 1], ans[i])\n        (ans[0], ans[-1]) = (ans[-1], ans[0])\n    print(' '.join([str(ele) for ele in ans]))\nwhile t:\n    solve()\n    t -= 1", "n = int(input())\nfor i in range(n):\n    k = int(input())\n    print(' '.join([str(k)] + [str(j) for j in range(1, k)]))", "def solve(n: int):\n    perm = []\n    for i in range(1, n + 1):\n        if i == n:\n            perm.append(str(1))\n        else:\n            perm.append(str(i + 1))\n    return perm\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(' '.join(solve(n)))", "num_inp = lambda : int(input())\narr_inp = lambda : list(map(int, input().split()))\nsp_inp = lambda : map(int, input().split())\nstr_inp = lambda : input()\nt = num_inp()\nfor _ in range(t):\n    n = num_inp()\n    if n == 1:\n        print(1)\n    else:\n        arr = []\n        val = 2\n        for i in range(n // 2):\n            arr.extend([val, val - 1])\n            val += 2\n        if len(arr) != n:\n            arr.append(val - 1)\n            (arr[0], arr[-1]) = (arr[-1], arr[0])\n        print(' '.join(map(str, arr)))", "n = int(input())\nfor i in range(n):\n    s = ''\n    x = int(input())\n    if x % 2 != 0:\n        s += str(x)\n        c = -1\n        for j in range(1, x):\n            r = j + 1 + c\n            s += ' ' + str(r)\n        print(s)\n    else:\n        c = 1\n        for j in range(1, x + 1):\n            r = j + c\n            s += str(r) + ' '\n            c *= -1\n        print(s)", "t = int(input())\n\ndef solve(n):\n    if n == 1:\n        return 1\n    return ' '.join((str(i) for i in range(2, n + 1))) + ' 1'\nwhile t:\n    n = int(input())\n    print(solve(n))\n    t -= 1", "n = int(input())\n\ndef perfect_per(number):\n    if number == 1:\n        return print(1)\n    else:\n        answer = [2]\n        for j in range(number - 2):\n            answer.append(j + 3)\n    answer.append(1)\n    print(' '.join(map(str, answer)))\n    return answer\nfor i in range(n):\n    number = int(input())\n    perfect_per(number)", "def mina(n):\n    arr = n * ['0']\n    if n % 2 == 0:\n        m = 2\n        for i in range(0, n, 2):\n            arr[i] = str(m)\n            arr[i + 1] = str(m - 1)\n            m += 2\n    else:\n        m = 2\n        for i in range(0, n - 1, 2):\n            arr[i] = str(m)\n            arr[i + 1] = str(m + 1)\n            m += 2\n        arr[n - 1] = '1'\n    st = ' '.join(arr)\n    return st\nt = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    response = mina(n)\n    print(f'{response}')", "testN = int(input())\nfor _ in range(testN):\n    n = int(input())\n    x = [i for i in range(1, n + 1)]\n    x = [n, *x[:-1]]\n    print(' '.join((str(i) for i in x)))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ls = [str(n)]\n    for i in range(1, n):\n        ls.append(str(i))\n    print(' '.join(ls))", "import sys\nInput = sys.stdin.readlines()\nOutput = []\nt = int(Input[0])\nfor test in range(t):\n    n = int(Input[test + 1])\n    ans = []\n    if n == 1:\n        ans = [1]\n    else:\n        ans = [i + 2 for i in range(n - 1)] + [1]\n    Output.append(ans)\nfor out in Output:\n    print(*out)", "n = input()\nfor i in range(int(n)):\n    num = int(input())\n    result = [i + 2 for i in range(num)]\n    result[num - 1] = 1\n    print(' '.join([str(v) for v in result]))", "for _ in range(int(input())):\n    n = int(input())\n    l = [i for i in range(1, n)]\n    l.insert(0, n)\n    print(' '.join((str(i) for i in l)))", "for i in range(int(input())):\n    k = int(input())\n    output = [k]\n    for i in range(1, k):\n        output.append(i)\n    print(' '.join([str(o) for o in output]))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(f\"{n} {' '.join((str(i) for i in range(1, n)))}\")", "t = int(input().strip())\nfor _ in range(t):\n    n = int(input().strip())\n    re = list()\n    if n == 1:\n        print(1)\n        continue\n    else:\n        re.append(n)\n        for i in range(1, n):\n            re.append(i)\n    print(str(re).replace('[', '').replace(']', '').replace(',', ''))", "def get(n):\n    l = []\n    for x in range(n):\n        p = str(x + 1)\n        l.append(p)\n    if n == 1:\n        None\n    elif n % 2 == 0:\n        i = 0\n        while i < n:\n            (l[i], l[i + 1]) = (l[i + 1], l[i])\n            i = i + 2\n    else:\n        i = 0\n        while i < n - 1:\n            (l[i], l[i + 1]) = (l[i + 1], l[i])\n            i = i + 2\n        (l[0], l[n - 1]) = (l[n - 1], l[0])\n    print(listToString(l))\n\ndef listToString(s):\n    str1 = ''\n    for ele in s:\n        str1 += ele + ' '\n    return str1\nt = int(input())\nfor x in range(t):\n    n = int(input())\n    get(n)", "n = int(input())\nfor _ in range(n):\n    m = int(input())\n    permutation = [str(m)]\n    for i in range(1, m):\n        permutation.append(str(i))\n    print(' '.join(permutation))", "def main():\n    n_tests = int(input())\n    for _ in range(n_tests):\n        n = int(input())\n        if n == 1:\n            print(n)\n            continue\n        result = []\n        for a in range(2, n, 2):\n            b = a + 1\n            if b < n:\n                result.append(b)\n            result.append(a)\n        result.append(1)\n        if n % 2 > 0:\n            (result[-1], result[-2]) = (result[-2], result[-1])\n        result.insert(0, n)\n        print(' '.join(map(str, result)))\nmain()", "a = int(input(''))\nvar = []\nfor i in range(a):\n    b = int(input(''))\n    if b == 1:\n        print(1)\n    else:\n        for i in range(1, b + 1):\n            var.append(str(i))\n        print(' '.join(var[1:] + var[:1]))\n        var = []", "a = int(input(''))\nvar = []\nfor i in range(a):\n    b = int(input(''))\n    for i in range(1, b + 1):\n        var.append(str(i))\n    print(' '.join(var[1:] + var[:1]))\n    var = []", "a = int(input(''))\nvar = []\nfor i in range(a):\n    b = int(input(''))\n    for i in range(1, b + 1):\n        var.append(str(i))\n    print(' '.join(var[1:] + var[:1]))\n    var = []"]