["import sys\ninput = lambda : sys.stdin.readline().rstrip('\\r\\n')\ninp = lambda : list(map(int, sys.stdin.readline().rstrip('\\r\\n').split()))\nfor _ in range(int(input())):\n    a = inp()\n    print(a[0], a[1], a[-1] - a[0] - a[1])", "import sys\n\ndef solve(li):\n    if li[2] == li[0] + li[1]:\n        return [li[0], li[1], li[3]]\n    else:\n        return [li[0], li[1], li[2]]\nn = int(input())\nfor line in sys.stdin:\n    numbers = [int(x) for x in line.strip().split()]\n    print(*solve(numbers))", "n = int(input())\nfor i in range(n):\n    (a, b, c, d, e, f, g) = input().split()\n    print(str(int(g) - int(a) - int(b)) + ' ' + a + ' ' + b)", "import sys\ninput = sys.stdin.readline\nR = []\nT = int(input())\nfor _ in range(T):\n    l = list(map(int, input()[:-1].split()))\n    (a1, a2) = (l[0], l[1])\n    a3 = l[-1] - (a1 + a2)\n    R.append(f'{a1} {a2} {a3}')\nprint('\\n'.join(R))", "class Solution:\n\n    def restore(self, arr):\n        x1 = arr[-1] - arr[-2]\n        x3 = arr[-3] - x1\n        x2 = arr[-2] - x3\n        return [x1, x2, x3]\nt = int(input())\nrs = []\nfor _ in range(t):\n    rs.append(list(map(int, input().split())))\nsol = Solution()\nfor r in rs:\n    print(*sol.restore(r))", "test = int(input())\nans = ''\ntemp = 0\nfor i in range(test):\n    j = 0\n    s = input()\n    arr = s.split()\n    ans += arr[0] + ' ' + arr[1] + ' ' + str(int(arr[6]) - (int(arr[0]) + int(arr[1]))) + '\\n'\nprint(ans)", "test = int(input())\nans = ''\nfor i in range(test):\n    s = input().split(' ')\n    ans += s[0] + ' ' + s[1] + ' ' + str(int(s[6]) - (int(s[0]) + int(s[1]))) + '\\n'\nprint(ans)", "import sys\nn = int(sys.stdin.readline())\nfor i in range(n):\n    series = [int(x) for x in sys.stdin.readline().split()]\n    result = series[:2]\n    result.append(series[len(series) - 1] - sum(result))\n    print(' '.join([str(x) for x in result]))", "w = int(input())\nl = []\nfor i in range(w):\n    t = list(map(int, input().split()))\n    l.append(t)\nfor i in l:\n    print(i[0], i[1], i[len(i) - 1] - (i[0] + i[1]))", "for s in [*open(0)][1:]:\n    (x, y, *_, m) = map(int, s.split())\n    print(x, y, m - x - y)", "for s in [*open(0)][1:]:\n    (x, y, *_, m) = map(int, s.split())\n    print(x, y, m - x - y)", "import sys\ninput = sys.stdin.readline\n\ndef print(*args, end='\\n', sep=' ') -> None:\n    sys.stdout.write(sep.join(map(str, args)) + end)\n\ndef solve() -> None:\n    a = list(map(int, input().split()))\n    print(a[0], a[1], a[-1] - a[0] - a[1])\n\ndef main() -> None:\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "import sys\ninput = lambda : sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    (a, b, c, d, e, f, g) = input().split()\n    print(str(int(g) - int(a) - int(b)) + ' ' + a + ' ' + b)", "import sys\ninput = lambda : sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    (a, b, c, d, e, f, g) = input().split()\n    print(str(int(g) - int(a) - int(b)) + ' ' + a + ' ' + b)", "def main():\n\n    def solve(a):\n        return ' '.join(map(str, [a[0], a[1], a[-1] - a[1] - a[0]]))\n    t = int(input())\n    ans = []\n    for _ in range(t):\n        a = [int(x) for x in input().split()]\n        ans.append(solve(a))\n    print('\\n'.join(ans))\nimport sys, threading\ninput = sys.stdin.readline\nthread = threading.Thread(target=main)\nthread.start()\nthread.join()", "def solve():\n    a = [int(i) for i in input().split()]\n    q = a[0]\n    w = a[-1] - q\n    for i in range(1, 6):\n        for j in range(1, 6):\n            if a[i] + a[j] == w:\n                return ' '.join([str(i) for i in [q, a[i], a[j]]])\nt = int(input())\nans = []\nwhile t:\n    ans.append(str(solve()))\n    t -= 1\nprint('\\n'.join(ans))", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef single_ints():\n    return int(sys.stdin.readline())\n\ndef p(a):\n    return sys.stdout.write(a)\nt = single_ints()\nfor i in range(t):\n    arr = list(get_ints())\n    print(arr[0], arr[1], arr[6] - arr[0] - arr[1])", "n = int(input())\nfor _ in range(n):\n    arr = [int(x) for x in input().split()]\n    if arr[0] + arr[1] == arr[2]:\n        ans = [arr[0], arr[1], arr[3]]\n    else:\n        ans = [arr[0], arr[1], arr[2]]\n    print(*ans)", "import sys\n\ndef solve(arr):\n    print(arr[0], arr[1], arr[6] - arr[0] - arr[1])\n\ndef main():\n    test_case = int(sys.stdin.readline())\n    for tc in range(test_case):\n        arr = [int(a) for a in sys.stdin.readline().split()]\n        solve(arr)\nmain()", "from sys import stdin\n\ndef solve():\n    for _ in range(int(stdin.readline().strip())):\n        B = sorted(list(map(int, stdin.readline().rstrip().split())))\n        ans = [B[0], B[1]]\n        if B[2] == sum(ans) and B[3] != sum(ans):\n            ans.append(B[3])\n        else:\n            ans.append(B[2])\n        print(' '.join(map(str, ans)))\nsolve()", "t = int(input())\nfor o in range(t):\n    a = list(map(int, input().split()))\n    print(a[0], a[1], a[len(a) - 1] - (a[0] + a[1]))", "t = int(input())\nfor i in range(t):\n    b = list(map(int, input().split()))\n    print(b[0], b[1], b[6] - b[0] - b[1])", "import sys\nt = int(input())\nres = []\nfor i in range(t):\n    a = list(map(int, input().split()))\n    res.append([a[0], a[1], a[-1] - (a[0] + a[1])])\nfor i in range(len(res)):\n    sys.stdout.write(' '.join(map(str, res[i])) + '\\n')", "import sys\n\ndef recreate(b):\n    (x, y) = b[0:2]\n    if b[2] == str(int(x) + int(y)):\n        z = b[3]\n    else:\n        z = b[2]\n    return [x, y, z]\n\ndef parseInput():\n    inputList = []\n    rawInput = sys.stdin.read().split('\\n')\n    rawInput = rawInput[1:-1]\n    for string in rawInput:\n        inputList.append(string.split())\n    return inputList\nfor b in parseInput():\n    print(' '.join(recreate(b)))", "for i in range(int(input())):\n    a = input().split()\n    print(a[0], a[1], int(a[-1]) - (int(a[0]) + int(a[1])))", "def get_ans(nums):\n    for i in nums:\n        for j in nums[1:]:\n            for k in nums[2:]:\n                if i + j + k == nums[-1]:\n                    if i + j in nums:\n                        if i + k in nums:\n                            if i + k in nums:\n                                return f'{i} {j} {k}'\nans = []\nfor _ in range(int(input())):\n    arr = []\n    nums = [int(i) for i in input().split()]\n    ans.append(get_ans(nums))\nprint('\\n'.join(ans))", "def polycarp(l):\n    a = int(l[0])\n    b = int(l[1])\n    d = int(l[6])\n    c = d - b - a\n    ret_str = str(a) + ' ' + str(b) + ' ' + str(c)\n    print(ret_str)\nt = int(input())\nstr_l = []\nfor i in range(t):\n    a = input()\n    str_l.append(a)\nfor ele in str_l:\n    l = ele.split(' ')\n    polycarp(l)\na = '5\"\\n\"1 3 4 4 5 7 8\",\"1 2 3 4 5 6 7\",\"300000000 300000000 300000000 600000000 600000000 600000000 900000000\",\"1 1 2 999999998 999999999 999999999 1000000000\",\"1 2 2 3 3 4 5\"\\n'\nb = '\\n1 4 3\\n4 1 2\\n300000000 300000000 300000000\\n999999998 1 1\\n1 2 2\\n    '", "import sys\ninputs = sys.stdin.readlines()\nsp = inputs\nsp_ = sp[1:]\nsp__ = [list(map(lambda i: int(i), item.strip('\\n').split(' '))) for item in sp_]\nret = []\nfor i in sp__:\n    i_ = [i[0], i[1], i[-1] - i[0] - i[1]]\n    print(f'{i_[0]} {i_[1]} {i_[2]}')", "for stri in [*open(0)][1:]:\n    (i, j, *_, m) = map(int, stri.split())\n    print(i, j, m - i - j)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\noutp = []\nx = inp()\nfor i in range(x):\n    lis = inlt()\n    a = lis[0]\n    b = lis[1]\n    if lis[2] == a + b:\n        output = [a, b, lis[3]]\n    else:\n        output = [a, b, lis[2]]\n    outp.append(output)\nfor out in outp:\n    print(out[0], out[1], out[2])", "import sys\ninput = iter(sys.stdin.read().splitlines()).__next__\n\ndef solve(B):\n    x = B[0]\n    y = B[1]\n    z = B[-1] - x - y\n    return [x, y, z]\nTC = int(input())\nfor tc in range(TC):\n    B = list(map(int, input().split()))\n    res = solve(B)\n    print(' '.join(map(str, res)))", "blank = []\nnumber = int(input())\nfor i in range(0, number):\n    xd = input()\n    haha = xd.split(' ')\n    first = int(haha[0])\n    second = int(haha[1])\n    third = int(haha[6]) - first - second\n    blank.append([first, second, third])\nfor i in range(0, number):\n    print(blank[i][0], blank[i][1], blank[i][2])", "for s in [*open(0)][1:]:\n    (x, y, *_, m) = map(int, s.split())\n    print(x, y, m - x - y)", "t = int(input())\nres = []\nfor i in range(t):\n    (x1, x2, x3, x4, x5, x6, x7) = map(int, input().split(' '))\n    res.append([x1, x2, x7 - x1 - x2])\nfor tu in res:\n    print(str(tu[0]) + ' ' + str(tu[1]) + ' ' + str(tu[2]))", "cases = int(input())\nfinalstring = ''\nfor case in range(cases):\n    caselist = [int(x) for x in input().split(' ')]\n    finalstring += f'{caselist[0]} {caselist[1]} {caselist[-1] - (caselist[0] + caselist[1])}\\n'\nprint(finalstring)", "for s in [*open(0)][1:]:\n    (a, b, *l) = [*map(int, s.split())]\n    print(a, b, l[l[0] - a == b])", "from sys import stdin, stdout\nfor _ in range(int(stdin.readline())):\n    a = list(map(int, stdin.readline().split()))\n    a.sort()\n    ans = [a[0], a[1]]\n    if a[2] == a[0] + a[1]:\n        ans.append(a[3])\n    else:\n        ans.append(a[2])\n    print(ans[0], ans[1], ans[2])", "for s in [*open(0)][1:]:\n    (x, y, *_, m) = map(int, s.split())\n    print(x, y, m - x - y)", "n = int(input())\nfor i in range(n):\n    l = tuple(input().split())\n    m1 = l[0]\n    m2 = l[1]\n    M = l[-1]\n    print(' '.join([m1, m2, str(int(M) - int(m1) - int(m2))]))", "import sys\ninput = lambda : sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    (a, b, c, d, e, f, g) = input().split()\n    print(str(int(g) - int(a) - int(b)) + ' ' + a + ' ' + b)", "for s in [*open(0)][1:]:\n    (x, y, *_, m) = map(int, s.split())\n    print(x, y, m - x - y)", "for _ in range(int(input())):\n    array = list(map(int, input().split()))\n    print(array[0], array[1], array[-1] - array[1] - array[0])", "for s in [*open(0)][1:]:\n    (x, y, *_, m) = map(int, s.split())\n    print(x, y, m - x - y)", "t = int(input())\nfinal = []\nfor i in range(t):\n    a = input().split()\n    b = [int(x) for x in a]\n    b.sort()\n    p = b[0]\n    q = b[1]\n    r = b[-1] - (p + q)\n    result = []\n    result.append(p)\n    result.append(q)\n    result.append(r)\n    final.append(result)\nfor j in final:\n    for k in j:\n        print(k, end=' ')\n    print(' ')", "t = int(input())\nfor i in range(t):\n    l = list(map(int, input().split()))\n    if l[0] + l[1] + l[2] == l[6]:\n        print(l[0], l[1], l[2])\n    else:\n        print(l[0], l[1], l[3])", "for i in range(int(input())):\n    l = list(map(int, input().split()))\n    a = l[0]\n    b = l[1]\n    c = l[-1] - a - b\n    print(a, b, c)", "for _ in range(int(input())):\n    l0 = list(map(int, input().split()))\n    n = len(l0)\n    temp = l0[0] + l0[1]\n    print(l0[0], l0[1], l0[n - 1] - temp)", "for _ in range(int(input())):\n    l = list(map(int, input().split()))\n    su = l[6]\n    a = l[6] - l[5]\n    b = l[6] - a - l[1]\n    c = su - a - b\n    print(a, b, c)", "for i in range(int(input())):\n    lis = list(map(int, input().split(' ')))\n    ans = []\n    ans.append(lis[0])\n    ans.append(lis[1])\n    if lis[0] + lis[1] == lis[2]:\n        ans.append(lis[3])\n    else:\n        ans.append(lis[2])\n    print(*ans)", "def main():\n    t = int(input())\n    while t:\n        l = list(map(int, input().split()))\n        res = [str(l[0]), str(l[1]), str(l[-1] - l[0] - l[1])]\n        print(' '.join(res))\n        t -= 1\nmain()", "n = int(input())\nfor i in range(n):\n    l = list(map(int, input().split()))\n    a = max(l)\n    b = l[0] + l[1]\n    for i in range(2, len(l)):\n        if b + l[i] == a:\n            print(l[0], l[1], l[i])\n            break", "mahee = int(input())\nwhile mahee > 0:\n    mahee -= 1\n    v = [int(i) for i in input().split()]\n    g = [v[0], v[1], v[-1] - v[0] - v[1]]\n    print('%d %d %d' % (g[0], g[1], g[2]))", "def check(l1, l2):\n    l3 = [l1[0], l1[1], l1[2], l1[0] + l1[1], l1[0] + l1[2], l1[1] + l1[2], l1[1] + l1[2] + l1[0]]\n    return l3 == l2\nfor _ in range(int(input())):\n    l = list(map(int, input().split()))\n    l.sort()\n    print(l[0], l[1], l[-1] - l[0] - l[1])", "a = int(input())\nms = []\nfor i in range(a):\n    ms.append(list(map(int, input().split())))\nfor i in range(a):\n    b = []\n    b.append(ms[i].pop(0))\n    s2 = ms[i].pop() - b[0]\n    if ms[i][0] + ms[i][1] == s2:\n        b.append(ms[i][0])\n        b.append(ms[i][1])\n    else:\n        b.append(ms[i][0])\n        b.append(ms[i][2])\n    print(b[0], b[1], b[2])", "for s in [*open(0)][1:]:\n    (m, *b, M) = map(int, s.split())\n    for x in b:\n        if {m + x, (y := (M - m - x))} <= {*b}:\n            print(m, x, y)\n            break", "for i in range(int(input())):\n    l = list(map(int, input().split()))\n    x = l[6] - l[0]\n    flag = 0\n    for j in range(1, 7):\n        if x - l[j] in l:\n            ans1 = l[j]\n            ans2 = x - l[j]\n            break\n    print('%d %d %d' % (l[0], ans1, ans2))", "t = int(input())\nfor i in range(t):\n    list_b = list(map(int, input().split()))\n    a = list_b[0]\n    b = list_b[1]\n    c = list_b[-1] - a - b\n    print(a, b, c)", "n = int(input())\nB = [list(map(int, input().split())) for _ in range(n)]\nfor b in B:\n    a1 = b[0]\n    a2 = b[1]\n    a3 = b[-1] - a1 - a2\n    print(a1, a2, a3)", "def solve():\n    a = list(input().split())\n    if a[0] == a[1] and a[0] == a[2] or int(a[0]) + int(a[1]) > int(a[2]):\n        for i in range(3):\n            print(a[i], end=' ')\n    else:\n        for i in range(4):\n            if i == 2:\n                continue\n            else:\n                print(a[i], end=' ')\n    print()\nfor i in range(int(input())):\n    solve()", "n = int(input())\nfor i in range(n):\n    a = list(map(int, input().split()))\n    print(a[0], a[1], a[-1] - a[0] - a[1])", "def func(arr):\n    a = arr[0]\n    b = arr[1]\n    c = arr[-1] - (a + b)\n    return str(a) + ' ' + str(b) + ' ' + str(c)\nn = int(input())\nwhile n > 0:\n    arr = list(map(int, input().split()))\n    print(func(arr))\n    n -= 1", "def main():\n    t = int(input())\n    for i in range(t):\n        entrada = list(map(int, input().split()))\n        i = 1\n        while i < 3:\n            suma = entrada[0] + entrada[i]\n            entrada.remove(suma)\n            i += 1\n        print(*entrada[:3])\nmain()", "t = int(input())\nli = []\nfor i in range(t):\n    n = input()\n    li.append(n)\nfor i in li:\n    case = i.split()\n    new = []\n    for j in case:\n        new.append(int(j))\n    highest = new.pop(6)\n    first = new.pop(0)\n    second = new.pop(0)\n    third = highest - (first + second)\n    print(first, second, third)", "n = int(input())\nfor i in range(n):\n    a = list(map(int, input().strip().split()))\n    list1 = []\n    list1.append(a[0])\n    list1.append(a[1])\n    list1.append(a[6] - a[0] - a[1])\n    print(*list1)", "y = int(input())\nfor i in range(y):\n    z = ''\n    u = []\n    x = list(input().split())\n    z += x[0] + ' '\n    if int(x[2]) == int(x[0]) + int(x[1]):\n        z += x[1] + ' ' + x[3]\n    else:\n        z += x[1] + ' ' + x[2]\n    print(z)", "t = int(input())\nfor i in range(t):\n    b = list(map(int, input().split()))\n    if b[0] + b[1] == b[2]:\n        print(b[0], b[1], b[3])\n    else:\n        print(b[0], b[1], b[2])", "t = int(input())\nfor _ in range(t):\n    mas = list(map(int, input().split()))\n    a = mas[0]\n    b = mas[1]\n    c = mas[6] - a - b\n    print(a, b, c)", "inp = int(input())\nfor i in range(inp):\n    list1 = input().split()\n    m = int(list1[-1]) - (int(list1[0]) + int(list1[1]))\n    x = str(list1[0]) + ' ' + str(list1[1]) + ' ' + str(m)\n    print(x)", "def BvA(lst):\n    x = lst[0]\n    y = lst[1]\n    summa = lst[-1]\n    zy = summa - x\n    lst = lst[1:6]\n    z = zy - y\n    return (str(x), str(y), str(z))\nfor _ in range(int(input())):\n    lst = [int(i) for i in input().split()]\n    print(' '.join(BvA(lst)))", "tst = int(input())\nfor i in range(tst):\n    arr = list(map(int, input().split()))\n    if sum(arr[:3]) == arr[-1]:\n        print(*arr[:3])\n    else:\n        print(arr[0], arr[1], arr[3])", "for s in [*open(0)][1:]:\n    (x, y, *_, m) = map(int, s.split())\n    print(x, y, m - x - y)", "n = int(input())\nfor i in range(n):\n    word = input().split()\n    a = word[0]\n    b = word[1]\n    c = int(a) + int(b)\n    out = int(word[-1]) - int(c)\n    print(a + ' ' + b + ' ' + str(out))", "t = int(input().strip())\nfor j in range(t):\n    numbers = [int(i) for i in input().strip().split()]\n    print(numbers[0], end=' ')\n    print(numbers[1], end=' ')\n    print(numbers[6] - numbers[0] - numbers[1])", "t = int(input())\nfor i in range(t):\n    lst = list(map(int, input().split()))\n    lsta = lst[:2]\n    n = lst[6] - sum(lsta)\n    for j in lst[2:]:\n        if j == n:\n            lsta.append(j)\n            break\n    print(*lsta)", "for t in range(int(input())):\n    a = list(map(int, input().split()))\n    if a[0] + a[1] != a[2]:\n        print(a[0], a[1], a[2])\n    else:\n        print(a[0], a[1], a[3])", "n = int(input())\nfor i in range(n):\n    l = [int(x) for x in input().split()]\n    print(l[0], end=' ')\n    print(l[1], end=' ')\n    print(l[-1] - (l[0] + l[1]))", "def find_a(b):\n    total = b[6]\n    a_1 = b[0]\n    a_2 = b[1]\n    a_3 = int(total) - int(a_1) - int(a_2)\n    print(a_1, a_2, a_3)\nt = int(input())\nfor i in range(t):\n    user_input = input().split()\n    find_a(user_input)", "n = int(input())\nfor i in range(n):\n    ls = list(map(int, input().split()))\n    final = [ls[0], ls[1]]\n    if ls[0] + ls[1] > ls[2]:\n        final.append(ls[2])\n    else:\n        final.append(ls[3])\n    print(*final)", "def polycarp_sum(arr):\n    a = [0, 0, 0]\n    a[0] = arr[0]\n    a[1] = arr[1]\n    a[2] = arr[6] - arr[0] - arr[1]\n    return f'{a[0]} {a[1]} {a[2]}'\nt = int(input())\nfor _ in range(0, t):\n    arr = list(map(int, input().rstrip().split()))\n    response = polycarp_sum(arr)\n    print(f'{response}')", "n = int(input())\nfor i in range(n):\n    (a, b, c, d, e, f, g) = map(int, input().split())\n    m = a + b\n    if m == d:\n        print(a, b, c)\n    else:\n        print(a, b, d)", "import math\n\ndef modInverse(p, q):\n    mod = 998244353\n    expo = 0\n    expo = mod - 2\n    while expo:\n        if expo & 1:\n            p = p * q % mod\n        q = q * q % mod\n        expo >>= 1\n    return p\n\ndef answer(x, y, li):\n    s = []\n    for p in range(0, len(li) - 1):\n        s.append(li[p + 1] - li[p])\n    s.append(int(1e+18))\n\n    def solu(s, fi, y):\n        m = 0\n        for j in range(0, len(s)):\n            m = m + min(s[j], fi)\n        return m >= y\n    low = 1\n    high = int(1e+18)\n    ans = 0\n    while low < high:\n        fi = (low + high) // 2\n        if solu(s, fi, y):\n            high = fi\n            ans = fi\n        else:\n            low = fi + 1\n    return ans\nt = int(input())\nfor i in range(0, t):\n    li = input().split()\n    print(*[int(li[0]), int(li[1]), int(li[-1]) - int(li[0]) - int(li[1])])", "for R in range(int(input())):\n    convert_list = list(map(int, input().split()))\n    if convert_list[1] + convert_list[0] != convert_list[2]:\n        print(convert_list[0], convert_list[1], convert_list[2])\n    else:\n        print(convert_list[0], convert_list[1], convert_list[3])", "t = int(input())\nfor i in range(t):\n    a = list(map(int, input().split()))\n    x = a[0]\n    y = a[1]\n    z = a[2]\n    for j in range(3):\n        a.pop(0)\n    if x + y not in a:\n        print(x, y, a[0])\n    else:\n        print(x, y, z)", "for _ in range(int(input())):\n    arr = []\n    (a, b, c, d, e, f, g) = map(int, input().split())\n    l = [a, b, c, d, e, f, g]\n    li = [a, b, c, a + b, b + c, a + c, a + b + c]\n    li.sort()\n    l.sort()\n    if l == li:\n        print(a, b, c)\n    else:\n        print(a, b, d)", "output0 = []\noutput1 = []\noutput2 = []\n\ndef solveFn(nums):\n    arr = nums.split()\n    for elem in range(len(arr)):\n        arr[elem] = int(arr[elem])\n    if arr[0] + arr[1] + arr[2] == arr[6]:\n        a = arr[0]\n        b = arr[1]\n        c = arr[2]\n    else:\n        a = arr[0]\n        b = arr[1]\n        c = arr[6] - (a + b)\n    output0.append(a)\n    output1.append(b)\n    output2.append(c)\n\ndef printFn(n):\n    for i in range(n):\n        print(output0[i], end=' ')\n        print(output1[i], end=' ')\n        print(output2[i], end=' ')\n        print('\\n')\ncasesN = int(input())\nfor i in range(casesN):\n    numInput = input()\n    solveFn(numInput)\nprintFn(casesN)", "for _ in range(int(input())):\n    arr = list(map(int, input().split()))\n    print(arr[0], arr[1], arr[-1] - (arr[0] + arr[1]))", "q = int(input())\nfor _ in range(q):\n    arr = [int(a) for a in input().split()]\n    a = arr[0]\n    b = arr[1]\n    c = arr[-1] - a - b\n    print(a, b, c)", "t = int(input())\ndata = []\nfor i in range(t):\n    s = input()\n    a = s.split(' ')\n    data.append(a)\nfor i in data:\n    print(int(i[0]), int(i[1]), int(i[-1]) - int(i[0]) - int(i[1]))", "t = int(input())\nfor i in range(t):\n    arr = list(map(int, input().split()))\n    print(arr[0], arr[6] - arr[0] - arr[1], arr[1])", "for i in range(int(input())):\n    l = list(map(int, input().split()))\n    print(l[0], l[1], l[-1] - l[0] - l[1])", "n = int(input())\nfor i in range(n):\n    lst = [int(i) for i in input().split()]\n    sum_ = sum(lst)\n    a = sum_ // 4\n    print(lst[0], lst[1], a - lst[0] - lst[1])", "for _ in range(int(input())):\n    a = list(map(int, input().split()))\n    print(a[6] - a[5], a[1], a[5] - a[1])", "for i in range(int(input())):\n    a2 = []\n    a = list(map(int, input().strip().split()))\n    c = a[6] - (a[0] + a[1])\n    a2.append(a[0])\n    a2.append(a[1])\n    a2.append(c)\n    print(*a2, sep=' ')", "t = int(input())\nfor i in range(t):\n    b = list(map(int, input().split()))\n    print(b[0], b[1], b[5] - b[1])", "for s in [*open(0)][1:]:\n    (x, y, *_, m) = map(int, s.split())\n    print(x, y, m - x - y)"]