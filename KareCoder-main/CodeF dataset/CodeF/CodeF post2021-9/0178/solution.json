["for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum(a) % 2 * min((len(x) - len(x.rstrip(x[-1])) for x in map(bin, a))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum(a) % 2 * min((len(y) - len(y.rstrip(y[-1])) for y in map(bin, a))))", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    if s % 2 == 0:\n        print(0)\n    else:\n        mx = 1000000\n        for i in range(n):\n            if a[i] % 2 != 0:\n                q = bin(a[i])[2:]\n                q = q[::-1] + '0'\n                mx = min(mx, q.index('0'))\n            else:\n                q = bin(a[i])[2:]\n                q = q[::-1]\n                mx = min(mx, q.index('1'))\n        print(mx)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    nums = [int(i) for i in input().split(' ')]\n    if sum(nums) % 2 == 0:\n        print(0)\n    else:\n        for i in range(n):\n            a = bin(nums[i])[:1:-1] + '0'\n            if a[0] == '0':\n                target = '1'\n            else:\n                target = '0'\n            nums[i] = a.index(target)\n        print(min(nums))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum(a) % 2 * min((len(x) - len(x.rstrip(x[-1])) for x in map(bin, a))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum(a) % 2 * min((len(x) - len(x.rstrip(x[-1])) for x in map(bin, a))))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = sum(l)\n    if x % 2 == 0:\n        print(0)\n    else:\n        l1 = []\n        for i in l:\n            p = bin(i)[2:]\n            if i % 2 == 0:\n                if '1' in p:\n                    x = p[::-1].index('1')\n                    l1.append(x)\n                else:\n                    l1.append(len(p))\n            elif '0' in p:\n                x = p[::-1].index('0')\n                l1.append(x)\n            else:\n                l1.append(len(p))\n        print(min(l1))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    li = list(map(int, input().split()))\n    su = sum(li)\n    if su % 2 == 0:\n        print(0)\n    else:\n        fi = []\n        for i in li:\n            p = bin(i)[2:]\n            if i % 2 == 0:\n                if '1' in p:\n                    x = p[::-1].index('1')\n                    fi.append(x)\n                else:\n                    fi.append(len(p))\n            elif '0' in p:\n                x = p[::-1].index('0')\n                fi.append(x)\n            else:\n                fi.append(len(p))\n        print(min(fi))", "t = int(input())\n\ndef run():\n    n = int(input())\n    lst = list(map(int, input().split()))\n    sta = False\n    min_ooe = 64\n    for i in range(n):\n        if lst[i] & 1:\n            sta = not sta\n            mid = lst[i] >> 1\n            for j in range(min_ooe):\n                if mid & 1:\n                    mid >>= 1\n                else:\n                    min_ooe = min(j + 1, min_ooe)\n                    break\n        else:\n            mid = lst[i] >> 1\n            for j in range(min_ooe):\n                if mid & 1:\n                    min_ooe = min(j + 1, min_ooe)\n                    break\n                else:\n                    mid >>= 1\n    if sta:\n        print(min_ooe)\n    else:\n        print(0)\nwhile t:\n    t -= 1\n    run()", "def test(x):\n    s = bin(x)[::-1].replace('b', '')\n    return min(s.index('01') if '01' in s else 100, s.index('10') if '10' in s else 100)\nt = int(input())\nfor _ in range(t):\n    n = input()\n    a = list(map(int, input().split()))\n    if sum(a) % 2 == 0:\n        print(0)\n        continue\n    b = [test(x) for x in a]\n    print(min(b) + 1)", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    if sum(ls) % 2 == 0:\n        print('0')\n    else:\n        odd_l = []\n        eve_l = []\n        t1 = []\n        t2 = []\n        for i in ls:\n            if i % 2 == 1:\n                t1.append(i)\n            else:\n                t2.append(i)\n        odd_l = list(set(t1))\n        eve_l = list(set(t2))\n        lo = len(odd_l)\n        le = len(eve_l)\n        res_o = [0] * lo\n        res_e = [0] * le\n        i = 0\n        j = 0\n        while True:\n            odd_l[i] //= 2\n            res_o[i] += 1\n            if odd_l[i] % 2 == 0:\n                res = res_o[i]\n                break\n            if i < lo - 1:\n                i += 1\n            else:\n                i = 0\n        while le != 0:\n            eve_l[j] //= 2\n            res_e[j] += 1\n            if eve_l[j] % 2 == 1:\n                res = min(res, res_e[j])\n                break\n            if j < le - 1:\n                j += 1\n            else:\n                j = 0\n        print(res)", "from math import log2\nfor _ in ' ' * int(input()):\n    n = int(input())\n    x = list(map(int, input().split()))\n    b = 1000001\n    j = 0\n    c = 1000001\n    for a in x:\n        if a % 2:\n            b = min(int(log2(-a & a + 1)), b)\n            j += 1\n        else:\n            c = min(c, int(log2(a & -a)))\n    if j % 2 == 0:\n        print(0)\n        continue\n    print(min(b, c))", "import sys\nimport collections\nfrom math import ceil, gcd, sqrt, log\nimport bisect\nINF = float('inf')\nmod = 1000000007\n\ndef solve():\n    n = int(input())\n    A = list(map(int, input().split()))\n    odds = 0\n    for i in A:\n        if i % 2 == 1:\n            odds += 1\n    if odds % 2 == 0:\n        print(0)\n        return\n    min_odd_bin = 32\n    min_even_bin = 32\n    for i in A:\n        s = bin(i)[2:][::-1]\n        count = 0\n        if i % 2 == 1:\n            for bit in s:\n                if bit != '1':\n                    break\n                else:\n                    count += 1\n            if count < min_odd_bin:\n                min_odd_bin = count\n        else:\n            for bit in s:\n                if bit != '0':\n                    break\n                else:\n                    count += 1\n            if count < min_even_bin:\n                min_even_bin = count\n    ans = min(min_odd_bin, min_even_bin)\n    print(ans)\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    num = list(map(int, input().split()))\n    if sum(num) % 2 == 0:\n        print(0)\n        continue\n    ans = 10000000\n    for i in range(n):\n        if num[i] % 2 != 0:\n            x = bin(num[i])[2:]\n            x = x[::-1]\n            if '0' in x:\n                ans = min(ans, x.find('0'))\n            else:\n                ans = min(ans, len(x))\n        else:\n            x = bin(num[i])[2:]\n            x = x[::-1]\n            ans = min(ans, x.find('1'))\n    print(ans)", "from math import log2\nfor _ in ' ' * int(input()):\n    n = int(input())\n    x = list(map(int, input().split()))\n    b = 1000001\n    j = 0\n    c = 1000001\n    for a in x:\n        if a % 2:\n            b = min(int(log2(-a & a + 1)), b)\n            j += 1\n        else:\n            c = min(c, int(log2(a & -a)))\n    if j % 2 == 0:\n        print(0)\n        continue\n    print(min(b, c))", "import sys\ninput = sys.stdin.readline\nimport math\n\ndef print_str_line(str):\n    sys.stdout.write(str + '\\n')\n\ndef print_number(number):\n    print_str_line(f'{number}')\n\ndef ans(nums):\n    sum_nums = sum(nums)\n    if sum_nums % 2 == 0:\n        return 0\n    min_operations = 2 ** 32\n    for num in nums:\n        curr_operations = 0\n        if num % 2 == 1:\n            while num % 2 == 1:\n                curr_operations += 1\n                num //= 2\n        else:\n            while num % 2 != 1:\n                curr_operations += 1\n                num //= 2\n        min_operations = min(min_operations, curr_operations)\n    return min_operations\nnumber_of_inputs = int(input())\nfor i in range(number_of_inputs):\n    nums_len = int(input())\n    nums = [int(num) for num in input().split(' ')]\n    _ans = ans(nums)\n    print_number(_ans)", "import sys\ninput = sys.stdin.readline\n\ndef check(a):\n    for i in a:\n        if i - i // 2 & 1:\n            return True\n    return False\n\ndef f():\n    n = int(input())\n    a = [*map(int, input().split())]\n    s = sum(a)\n    odds = []\n    if s & 1 == 0:\n        return 0\n    ans = 1\n    a.sort()\n    x = 0\n    while not check(a):\n        for i in range(n):\n            a[i] >>= 1\n        ans += 1\n    return ans\nfor case in range(int(input())):\n    print(f())", "def number():\n    return list(map(int, input().split()))\n\ndef str():\n    return list(input().split())\n\ndef check(arr):\n    c = 1\n    min = 20\n    for x in arr:\n        c = 0\n        if x % 4 == 1 or x % 4 == 2:\n            return 1\n        else:\n            t = x\n            p = x % 2\n            while True:\n                t = t // 2\n                n = t % 2\n                c += 1\n                if n != p:\n                    if min > c:\n                        min = c\n                    break\n    return min\ny = number()\nwhile y[0] > 0:\n    num = number()\n    n = num[0]\n    arr = number()\n    s = sum(arr)\n    if s % 2 == 0:\n        print(0)\n        y[0] -= 1\n        continue\n    print(check(arr))\n    y[0] -= 1", "from sys import stdin\ninput = stdin.readline\n\ndef divideAndConquer(num, Arr):\n    if sum(Arr) % 2 == 0:\n        print(0)\n        return\n    min_ = 10 ** 6 + 1\n    for elem in Arr:\n        c = 0\n        if elem % 2:\n            while elem % 2:\n                elem //= 2\n                c += 1\n        else:\n            while not elem % 2:\n                elem //= 2\n                c += 1\n        min_ = min(min_, c)\n    print(min_)\nfor i in range(int(input())):\n    n = int(input())\n    L = [*map(int, input().split())]\n    divideAndConquer(n, L)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\ntest_cases = inp()\ninp_arr = []\nfor i in range(test_cases):\n    num = inp()\n    nums = inlt()\n    inp_arr.append(nums)\n\ndef findResult(nums):\n    if sum(nums) % 2 == 0:\n        return 0\n    result = float('inf')\n    for num in nums:\n        count = 0\n        isEven = num % 2 == 0\n        while (num % 2 == 0) == isEven:\n            num = num // 2\n            count += 1\n        result = min(result, count)\n    return result\nresult = [findResult(cheeses) for cheeses in inp_arr]\nfor m in result:\n    print(m)", "def solve():\n    n = int(input())\n    s = input()\n    a = s.split(' ')\n    a = [int(x) for x in a]\n    opt = float('inf')\n    c = 0\n    for x in a:\n        if x % 2:\n            c += 1\n    if c % 2 == 0:\n        print(0)\n        return\n    for x in a:\n        r = x % 2\n        y = x // 2\n        l = 1\n        while y % 2 == r:\n            y //= 2\n            l += 1\n        opt = min(opt, l)\n    print(opt)\n    return\nt = int(input())\nfor _ in range(t):\n    solve()", "count = 0\n(output, countlist) = ([], [])\nt = int(input())\nfor i in range(t):\n    length = int(input())\n    l = list(map(int, input().split()))\n    lbin = [bin(i) for i in l]\n    if sum(l) % 2 == 0:\n        output.append(0)\n    else:\n        for i in lbin:\n            j = '0' + i[2:]\n            j = ''.join(reversed(j))\n            if j[0] == '0':\n                count = j.find('1')\n            elif j[0] == '1':\n                count = j.find('0')\n            countlist.append(count)\n        output.append(min(countlist))\n        countlist = []\nfor i in output:\n    print(i)", "import sys\nimport collections\nfrom math import ceil, gcd, sqrt, log\nimport bisect\nINF = float('inf')\nmod = 1000000007\n\ndef solve():\n    n = int(input())\n    A = list(map(int, input().split()))\n    odds = 0\n    for i in A:\n        if i % 2 == 1:\n            odds += 1\n    if odds % 2 == 0:\n        print(0)\n        return\n    min_steps_even = 32\n    min_steps_odd = 32\n    for i in A:\n        s = bin(i)[2:][::-1]\n        count = 0\n        if i % 2 == 1:\n            for bit in s:\n                if bit != '1':\n                    break\n                else:\n                    count += 1\n            if count < min_steps_even:\n                min_steps_even = count\n        else:\n            for bit in s:\n                if bit != '0':\n                    break\n                else:\n                    count += 1\n            if count < min_steps_odd:\n                min_steps_odd = count\n    ans = min(min_steps_even, min_steps_odd)\n    print(ans)\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "def solve(lst):\n    if sum(lst) % 2 == 0:\n        return 0\n    else:\n        least_count = float('inf')\n        for number in lst:\n            count = 0\n            if number % 2 == 1:\n                while number % 2 != 0:\n                    number //= 2\n                    count += 1\n                if count < least_count:\n                    least_count = count\n                if least_count == 1:\n                    break\n            else:\n                while number % 2 != 1:\n                    number //= 2\n                    count += 1\n                if count < least_count:\n                    least_count = count\n                if least_count == 1:\n                    break\n        return least_count\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    print(solve(lst))", "def c(n):\n    if n % 2:\n        n += 1\n    k = 0\n    while n % 2 == 0:\n        k += 1\n        n //= 2\n    return k\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    if s % 2:\n        print(min(list(map(c, a))))\n    else:\n        print(0)", "def oddOperation(a):\n    nb = 0\n    while a % 2 != 0:\n        a = a // 2\n        nb += 1\n    return nb\n\ndef evenOperatin(a):\n    nb = 0\n    while a % 2 != 1:\n        a = a // 2\n        nb += 1\n    return nb\nt = int(input())\nresult = []\nfor i in range(t):\n    operations = []\n    n = int(input())\n    ai = list(map(int, input().split(' ')))\n    if sum(ai) % 2 == 0:\n        result.append(0)\n    else:\n        for j in ai:\n            if j % 2 == 0:\n                operations.append(evenOperatin(j))\n            else:\n                operations.append(oddOperation(j))\n        result.append(min(operations))\nfor i in result:\n    print(i)", "import math\nimport collections\n\ndef power2(n):\n    x = 0\n    if n % 2 == 0:\n        while n % 2 == 0:\n            x += 1\n            n = n // 2\n    else:\n        while n % 2 == 1:\n            x += 1\n            n = n // 2\n    return x\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    sum = 0\n    for i in l:\n        sum += i\n    if sum % 2 == 0:\n        print(0)\n        continue\n    else:\n        ans = math.inf\n        for j in l:\n            ans = min(ans, power2(j))\n        print(ans)", "def func(n, z):\n    ret = 0\n    while n % 2 == z:\n        n //= 2\n        ret += 1\n    return ret\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if sum(a) % 2 == 0:\n        print(0)\n        continue\n    ans = 1000000000\n    for val in a:\n        ans = min(ans, func(val, val % 2))\n    print(ans)", "def ans(arr):\n    s = sum(arr)\n    if s % 2 == 0:\n        return 0\n    c = 2147483648\n    for i in arr:\n        l = 0\n        t = i\n        if t % 2:\n            while t > 0 and t % 2:\n                t = t // 2\n                l += 1\n        else:\n            while t > 0 and t % 2 == 0:\n                t = t // 2\n                l += 1\n        c = min(c, l)\n    return c\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    print(ans(arr))", "def convertToEven(n) -> int:\n    c = 0\n    while n % 2 != 0:\n        c += 1\n        n //= 2\n    return c\n\ndef convertToOdd(n) -> int:\n    c = 0\n    while n % 2 != 1:\n        c += 1\n        n //= 2\n    return c\n\ndef solve():\n    n = int(input())\n    nums = list(map(int, input().split()))\n    even = []\n    odd = []\n    for num in nums:\n        if num % 2 == 0:\n            even.append(num)\n        else:\n            odd.append(num)\n    if len(odd) % 2 == 0:\n        print(0)\n        return\n    choice1 = list(map(convertToEven, odd))\n    choice2 = list(map(convertToOdd, even))\n    best1 = min(choice1) if len(choice1) > 0 else float('inf')\n    best2 = min(choice2) if len(choice2) > 0 else float('inf')\n    print(min(best1, best2))\n    return\nT = int(input())\nfor _ in range(T):\n    solve()", "def count_2(ele):\n    count = 0\n    while ele > 0:\n        ele = ele // 2\n        count += 1\n        if ele % 2 == 0:\n            return count\n    return count\n\ndef count_1(ele):\n    count = 0\n    while ele >= 1:\n        ele = ele // 2\n        count += 1\n        if ele % 2 == 1:\n            return count\n    return count\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().strip().split()))\n    if sum(arr) % 2 == 0:\n        print(0)\n    else:\n        mini = float('inf')\n        for i in range(n):\n            if arr[i] % 2 == 1:\n                num = count_2(arr[i])\n            else:\n                num = count_1(arr[i])\n            if num < mini:\n                mini = num\n        print(mini)", "import math\n\ndef powerof2(n):\n    ans = 0\n    if n % 2 == 0:\n        while n % 2 == 0:\n            ans = ans + 1\n            n = n // 2\n    else:\n        k = n + 1\n        n = k\n        while n % 2 == 0:\n            ans = ans + 1\n            n = n // 2\n    return ans\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    sumi = 0\n    ans = int(math.log(pow(10, 6), 2) + 7)\n    for j in range(0, n):\n        sumi = sumi + a[j]\n        ans = min(ans, powerof2(a[j]))\n    if sumi % 2 == 0:\n        print(0)\n    else:\n        print(int(ans))", "import sys\nimport collections\nfrom math import ceil, gcd, sqrt, log\nimport bisect\nINF = float('inf')\nmod = 1000000007\n\ndef solve():\n    n = int(input())\n    A = list(map(int, input().split()))\n    odd = 0\n    for i in A:\n        if i % 2 == 1:\n            odd += 1\n    if odd % 2 == 0:\n        print(0)\n        return\n    min_odd_bin = 32\n    min_even_bin = 32\n    for i in A:\n        s = bin(i)[2:][::-1]\n        count = 0\n        if i % 2 == 1:\n            for bit in s:\n                if bit != '1':\n                    break\n                else:\n                    count += 1\n            if count < min_odd_bin:\n                min_odd_bin = count\n        else:\n            for bit in s:\n                if bit != '0':\n                    break\n                else:\n                    count += 1\n            if count < min_even_bin:\n                min_even_bin = count\n    ans = min(min_odd_bin, min_even_bin)\n    print(ans)\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "def half(arr, n):\n    for i in range(n):\n        if arr[i] % 2 != arr[i] // 2 % 2:\n            return True\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    sum = 0\n    steps = 1\n    for i in arr:\n        sum += i\n    if sum % 2 == 0:\n        print(0)\n    else:\n        while not half(arr, n):\n            arr_ = [x // 2 for x in arr]\n            steps += 1\n            arr = arr_\n        print(steps)", "def f(num):\n    prev = num % 2\n    count = 0\n    while num % 2 == prev:\n        num //= 2\n        count += 1\n    return count\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if sum(arr) % 2 == 0:\n        print(0)\n    else:\n        count = float('inf')\n        for i in arr:\n            count = min(count, f(i))\n        print(count)", "import sys\n\ndef cal(x):\n    ans = 0\n    if x % 2 == 0:\n        while x % 2 == 0:\n            x //= 2\n            ans += 1\n    else:\n        while x % 2 != 0:\n            x //= 2\n            ans += 1\n    return ans\n\ndef solve():\n    input = sys.stdin.readline\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (odd, even) = (0, 0)\n    (minToOdd, minToEven) = (float('inf'), float('inf'))\n    for i in range(n):\n        if arr[i] % 2 == 0:\n            even += 1\n            minToEven = min(minToEven, cal(arr[i]))\n        else:\n            odd += 1\n            minToOdd = min(minToOdd, cal(arr[i]))\n    if odd % 2 == 0:\n        print(0)\n    else:\n        print(min(minToOdd, minToEven))\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "def solve(n, arr):\n\n    def ln(n):\n        tot = 0\n        if n & 1:\n            while n & 1:\n                n //= 2\n                tot += 1\n        else:\n            while not n & 1:\n                n //= 2\n                tot += 1\n        return tot\n    if sum(arr) % 2 == 0:\n        return 0\n    res = float('inf')\n    for i in arr:\n        res = min(res, ln(i))\n    return res\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(solve(n, arr))", "def least_odd(n):\n    count = 0\n    while n % 2 == 1:\n        n = n // 2\n        count = count + 1\n    return count\n\ndef least_even(n):\n    count = 0\n    while n % 2 == 0:\n        n = n // 2\n        count = count + 1\n    return count\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    sum = 0\n    l = []\n    for i in range(n):\n        l.append(0)\n    for i in range(n):\n        sum = sum + a[i]\n        if a[i] % 2 == 0:\n            l[i] = least_even(a[i])\n        else:\n            l[i] = least_odd(a[i])\n    if sum % 2 == 0:\n        print(0)\n    else:\n        print(min(l))", "import math\n\ndef f(L):\n    s = sum(L)\n    n = len(L)\n    c = math.inf\n    if s % 2 == 0:\n        return 0\n    else:\n        S = []\n        P = []\n        for i in range(n):\n            if L[i] % 2 == 1:\n                S.append(L[i])\n            else:\n                P.append(L[i])\n        for j in S:\n            x = j\n            w = 0\n            while x % 2 != 0:\n                x = x // 2\n                w += 1\n            if c >= w:\n                c = w\n        for l in P:\n            b = l\n            e = 0\n            while b % 2 != 1:\n                b = b // 2\n                e += 1\n            if c >= e:\n                c = e\n    return c\nx = int(input())\nfor i in range(x):\n    o = int(input())\n    x = list(map(int, input().split()))\n    print(f(x))", "def miss(m):\n    s = 1\n    if m % 2 == 0:\n        while True:\n            m = m // 2\n            if m % 2 != 0:\n                break\n            s += 1\n    else:\n        while True:\n            m = m // 2\n            if m % 2 == 0:\n                break\n            s += 1\n    return s\nfor _ in range(int(input())):\n    x = int(input())\n    ls = [int(y) for y in input().split()]\n    if sum(ls) % 2 == 0:\n        print(0)\n    else:\n        s = ls[0]\n        for i in range(x):\n            a = miss(ls[i])\n            if a < s:\n                s = a\n        print(s)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    if sum(lst) % 2 == 0:\n        print(0)\n        continue\n    else:\n        oper = 1000000\n        for x in lst:\n            op = 0\n            tmp = x % 2\n            while True:\n                x //= 2\n                op += 1\n                if x % 2 != tmp:\n                    break\n            if op < oper:\n                oper = op\n        print(oper)", "from math import inf, isinf\n\ndef test(s):\n    c = 0\n    if s % 2 == 0:\n        while s % 2 == 0:\n            s //= 2\n            c += 1\n    else:\n        while s % 2 != 0:\n            s //= 2\n            c += 1\n    return c\n\ndef solve():\n    input()\n    s = tuple(sorted((int(x) for x in input().split())))\n    if sum(s) % 2 == 0:\n        print(0)\n    else:\n        min_ = inf\n        for item in s:\n            min_ = min(min_, test(item))\n        print(min_)\nfor _ in range(int(input())):\n    solve()", "def solution():\n    n = int(input())\n    a = [int(num) for num in input().split()]\n    if sum(a) % 2 == 0:\n        print(0)\n        return\n    good = False\n    ans = 0\n    while not good:\n        ans += 1\n        for i in range(n):\n            prev = a[i]\n            a[i] //= 2\n            if prev % 2 ^ a[i] % 2:\n                good = True\n                break\n    print(ans)\n\ndef main():\n    t = int(input())\n    while t:\n        solution()\n        t -= 1\nmain()", "def ans(arr):\n    if sum(arr) % 2 == 0:\n        return 0\n    else:\n        odd = []\n        even = []\n        for x in arr:\n            if x % 2:\n                odd.append(x)\n            else:\n                even.append(x)\n        min_e = 10 ** 7\n        for x in even:\n            k = 0\n            while x != 1:\n                x //= 2\n                k += 1\n                if x % 2:\n                    break\n            min_e = min(min_e, k)\n        min_o = 10 ** 7\n        for x in odd:\n            k = 0\n            while x != 0:\n                x //= 2\n                k += 1\n                if x % 2 == 0:\n                    break\n            min_o = min(min_o, k)\n        return min(min_o, min_e)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    print(ans(a))", "from math import floor\n\ndef make_good(a):\n    cnt = 0\n    (odd_set, even_set) = (set(), set())\n    for i in a:\n        if i % 2 != 0:\n            cnt += 1\n            odd_set.add(i)\n        else:\n            even_set.add(i)\n    if cnt % 2 == 0:\n        return 0\n    (make_odd_map, make_even_map) = ({}, {})\n    for i in odd_set:\n        cnt = 0\n        temp_i = i\n        while i % 2 != 0:\n            i = floor(i // 2)\n            cnt += 1\n        make_odd_map[temp_i] = cnt\n    for i in even_set:\n        cnt = 0\n        temp_i = i\n        while i % 2 == 0:\n            i = floor(i // 2)\n            cnt += 1\n        make_odd_map[temp_i] = cnt\n    return min(list(make_even_map.values()) + list(make_odd_map.values()))\ntest_cnt = int(input().strip())\nfor _ in range(test_cnt):\n    _ = input()\n    a = [int(i) for i in input().strip().split()]\n    print(make_good(a))", "def count_chg(number):\n    if number == 1:\n        return 1\n    bin_str = str(bin(number)[2:])\n    last_num = 1\n    for i in range(1, len(bin_str)):\n        if bin_str[-1 - i] == bin_str[-1]:\n            last_num += 1\n        else:\n            break\n    return last_num\n\ndef number_change(inp):\n    list_num = list(map(int, inp.split(' ')))\n    if sum(list_num) % 2 == 0:\n        print(0)\n    else:\n        chg_list = [count_chg(num) for num in list_num]\n        print(min(chg_list))\ncounts = int(input())\nfor i in range(counts):\n    length = int(input())\n    number_change(input())", "def val1(k):\n    d = 0\n    while k % 2 == 0:\n        k //= 2\n        d += 1\n    return d\n\ndef val2(k):\n    d = 0\n    while k % 2 != 0:\n        k //= 2\n        d += 1\n    return d\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = sum(a)\n    count1 = 0\n    count2 = 22\n    if count % 2 != 0:\n        for k in a:\n            if k % 2 == 0:\n                b = val1(k)\n                if b < count2:\n                    count2 = b\n                    count1 = count2\n            elif k % 2 != 0:\n                b = val2(k)\n                if b < count2:\n                    count2 = b\n                    count1 = count2\n    print(count1)", "for i in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        a = list(set(a))\n        count = None\n        for k in a:\n            j = k\n            x = 0\n            if j % 2 == 0:\n                while j % 2 == 0:\n                    j //= 2\n                    x += 1\n            else:\n                while j % 2 != 0:\n                    j //= 2\n                    x += 1\n            if count == None or count > x:\n                count = x\n        print(count)", "from typing import List\nt = int(input())\n\ndef solve(a: List[int]):\n    s = sum(a)\n    if s & 1 == 0:\n        return 0\n    min_count = float('inf')\n    for num in a:\n        if num & 1 == 1:\n            count = 0\n            while num & 1 == 1:\n                count += 1\n                num //= 2\n            min_count = min(min_count, count)\n        else:\n            count = 0\n            while num & 1 == 0:\n                count += 1\n                num //= 2\n            min_count = min(min_count, count)\n    return min_count\nwhile t > 0:\n    n = int(input())\n    a = [int(num) for num in input().split(' ', n - 1)]\n    ans = solve(a)\n    print(ans)\n    t -= 1", "from functools import reduce\nimport math\n\ndef vout(v):\n    return ' '.join(map(str, v))\n\ndef vin(datatype):\n    return list(map(datatype, input().split()))\n\ndef Filter(a, b):\n    return list(filter(a, b))\n\ndef Map(a, b):\n    return list(map(a, b))\n\ndef main(is_testCases=True):\n    testCases = 1\n    if is_testCases:\n        testCases = int(input())\n    for _ in range(testCases):\n        n = int(input())\n        v = vin(int)\n\n        def check(element):\n            ans = 0\n            parity = element & 1\n            while element:\n                ans += 1\n                element //= 2\n                if parity != element & 1:\n                    return ans\n        answer = Map(check, v)\n        print(min(answer) if reduce(lambda a, b: a + b, v) & 1 else 0)\nmain()", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 10 ** 8\n    res = sum(a)\n    if res & 1:\n        for item in a:\n            tmp = 0\n            if item & 1:\n                while item & 1:\n                    item >>= 1\n                    tmp += 1\n                ans = min(ans, tmp)\n            else:\n                while item > 0 and (not item & 1):\n                    item >>= 1\n                    tmp += 1\n                ans = min(ans, tmp)\n    else:\n        ans = 0\n    print(ans)", "from typing import List\nfrom bisect import *\nfrom collections import *\nfrom functools import *\nfrom itertools import *\nfrom math import *\nfrom queue import PriorityQueue\nINF = 2 ** 64 - 1\nMOD = 10 ** 9 + 7\nmi = lambda : map(int, input().split())\nli = lambda : list(mi())\n\ndef main(n, nums):\n    s = sum(nums)\n    if s % 2 == 0:\n        print(0)\n        return\n    ans = INF\n    for v in nums:\n        temp = 0\n        if v % 2 == 0:\n            while v % 2 == 0 and v > 0:\n                v = v // 2\n                temp += 1\n        else:\n            while v % 2 == 1 and v > 0:\n                v = v // 2\n                temp += 1\n        ans = min(ans, temp)\n    print(ans)\n    return\ncaseNum = int(input())\nfor i in range(0, caseNum):\n    n = int(input())\n    nums = li()\n    main(n, nums)", "import math\nfrom collections import Counter\n\ndef li():\n    return list(map(int, input().split()))\n\ndef nt():\n    return int(input())\n\ndef st():\n    return input()\nyes = 'YES'\nno = 'NO'\neven = 'EVEN'\nodd = 'ODD'\n\ndef prefix(L):\n    size = len(L)\n    for i in range(1, size):\n        L[i] = L[i] + L[i - 1]\n    return L\n\ndef process(x):\n    count = 0\n    if x % 2 == 0:\n        while x % 2 == 0:\n            count += 1\n            x //= 2\n    else:\n        while x % 2 == 1:\n            count += 1\n            x //= 2\n    return count\nfor _ in range(int(input())):\n    size = nt()\n    L = li()\n    s = sum(L)\n    if s % 2 == 0:\n        print(0)\n        continue\n    ans = 3100\n    for i in range(size):\n        temp = process(L[i])\n        if temp < ans:\n            ans = temp\n    print(ans)", "def binary(num):\n    cnt = 0\n    if num % 2 == 0:\n        while num % 2 == 0:\n            cnt += 1\n            num = num // 2\n    else:\n        while num % 2 == 1:\n            cnt += 1\n            num = num // 2\n    return cnt\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split(sep=' ')))\n    b = []\n    sum = 0\n    for j in range(n):\n        sum += a[j]\n    if sum % 2 == 0:\n        print(0)\n    else:\n        for j in range(n):\n            b.append(binary(a[j]))\n        print(min(b))", "import math\n\ndef p2(n):\n    ans = 0\n    if n % 2 == 0:\n        while n % 2 == 0:\n            ans = ans + 1\n            n = n // 2\n    else:\n        k = n + 1\n        n = k\n        while n % 2 == 0:\n            ans = ans + 1\n            n = n // 2\n    return ans\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    sumi = 0\n    ans = int(math.log(pow(10, 6), 2) + 7)\n    for j in range(0, n):\n        sumi = sumi + a[j]\n        ans = min(ans, p2(a[j]))\n    if sumi % 2 != 0:\n        print(int(ans))\n    else:\n        print(0)", "test_case = int(input())\nfor test in range(test_case):\n    length = int(input())\n    List = list(map(int, input().split()))\n    odd_list = []\n    even_list = []\n    for i in List:\n        if i % 2 == 0:\n            even_list.append(i)\n        else:\n            odd_list.append(i)\n    odd = len(odd_list)\n    even = len(even_list)\n    if odd % 2 == 0:\n        print(0)\n    else:\n        ans = float('inf')\n        for i in odd_list:\n            c = 0\n            while i % 2 != 0:\n                i = i // 2\n                c += 1\n            ans = min(ans, c)\n        for i in even_list:\n            c = 0\n            while i % 2 == 0:\n                i = i // 2\n                c += 1\n            ans = min(ans, c)\n        print(ans)", "import sys\ninput = sys.stdin.readline\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    asum = sum(a)\n    if asum % 2 == 0:\n        print(0)\n        continue\n    if 1 in a or 2 in a:\n        print(1)\n        continue\n    m = []\n    for i in a:\n        x = i % 2\n        c = 0\n        while 1:\n            i //= 2\n            c += 1\n            if i % 2 != x:\n                m.append(c)\n                break\n    print(min(m))", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    if s % 2 == 0:\n        print(0)\n        return\n    ans = 10 ** 9\n    for i in a:\n        m = 1\n        b = bin(i)[::-1]\n        k = len(b)\n        for j in range(1, k):\n            if b[j] != b[j - 1]:\n                break\n            m += 1\n        ans = min(ans, m)\n    print(ans)\nt = int(input())\nfor i in range(t):\n    solve()", "import math\n\ndef form(num):\n    count = 0\n    while True:\n        if num % 2 == 0:\n            return count\n        num = num // 2\n        count += 1\n    return count\n\ndef form2(num):\n    count = 0\n    while True:\n        if num % 2 == 1:\n            return count\n        num = num // 2\n        count += 1\n    return count\nfor i in range(int(input())):\n    n = int(input())\n    b = [int(x) for x in input().split()]\n    even = []\n    odd = []\n    ans = 87298312873512653\n    if sum(b) % 2 == 0:\n        print(0)\n        continue\n    for i in b:\n        if i % 2 == 0:\n            ans = min(ans, form2(i))\n        else:\n            ans = min(ans, form(i))\n            odd.append(i)\n    o = form(min(odd))\n    print(min(o, ans))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if sum(a) % 2 == 0:\n        print(0)\n    elif 1 in a:\n        print(1)\n    else:\n        for x in a:\n            flag = False\n            if x % 4 == 1 or x % 4 == 2:\n                print(1)\n                flag = True\n                break\n        if flag:\n            continue\n        ans = 10 ** 10\n        for x in a:\n            if x % 2 == 0:\n                y = x\n                cnt = 0\n                while y % 2 == 0:\n                    y //= 2\n                    cnt += 1\n            else:\n                y = x\n                cnt = 0\n                while y % 2 == 1:\n                    y //= 2\n                    cnt += 1\n            ans = min(ans, cnt)\n        print(ans)", "t = int(input())\n\ndef solve(n, nums):\n    total = sum(nums)\n    ans = float('inf')\n    if total & 1:\n        for num in nums:\n            (curr, now) = (num, 0)\n            while not curr + num & 1:\n                now += 1\n                curr //= 2\n            ans = min(ans, now)\n    else:\n        ans = 0\n    return ans\nfor i in range(t):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    print(solve(n, nums))", "def val1(num):\n    op = 0\n    while num % 2 == 0:\n        num = num // 2\n        op += 1\n    return op\n\ndef val2(num):\n    op = 0\n    while num % 2 != 0:\n        num = num // 2\n        op += 1\n    return op\nT = int(input())\nfor t in range(0, T):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    s = sum(arr)\n    ans = 0\n    mini = 22\n    if s % 2 != 0:\n        for item in arr:\n            if item % 2 == 0:\n                x = val1(item)\n                if x < mini:\n                    mini = x\n                    ans = mini\n            elif item % 2 != 0:\n                x = val2(item)\n                if x < mini:\n                    mini = x\n                    ans = mini\n    print(ans)", "def bbb(a, b):\n    c = 0\n    while a % 2 == b:\n        c += 1\n        a //= 2\n    return c\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count1 = 0\n    m = 100\n    for i in a:\n        m = min(m, bbb(i, i % 2))\n        if i % 2 == 1:\n            count1 += 1\n    if count1 % 2 == 1:\n        print(m)\n    else:\n        print(0)", "import sys\n\ndef solve(res):\n    c = 1\n    while (res - res // 2) % 2 == 0:\n        c += 1\n        res = res // 2\n    return c\nfor _ in range(int(input())):\n    res = sys.maxsize\n    n = int(input())\n    l = list(map(int, input().split()))\n    if sum(l) % 2 == 0:\n        print(0)\n    else:\n        for i in l:\n            c = solve(i)\n            if c == 1:\n                res = 1\n                break\n            else:\n                res = min(c, res)\n        print(res)", "from collections import *\nimport math\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    p = sum(arr)\n    if p % 2 == 0:\n        print(0)\n    else:\n        count = math.inf\n        for i in arr:\n            if i % 2 == 0:\n                t = 0\n                while i % 2 == 0:\n                    t += 1\n                    i //= 2\n                count = min(count, t)\n            elif i % 2 == 1:\n                t = 0\n                while i % 2 == 1:\n                    t += 1\n                    i //= 2\n                count = min(count, t)\n        print(count)\nt = int(input())\nfor i in range(1, t + 1):\n    solve()", "def divisions_till_change(num):\n    parity = num & 1\n    counter = 0\n    while num != 0:\n        num >>= 1\n        counter += 1\n        if num & 1 != parity:\n            return counter\n    return 4294967295\ntests = int(input())\nfor _ in range(tests):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    odd = 0\n    for a in arr:\n        odd ^= a & 1\n    if not odd:\n        print(0)\n        continue\n    print(min([divisions_till_change(a) for a in arr]))", "import math\nt = int(input())\n\ndef f(n):\n    cnt = 0\n    if n % 2 == 0:\n        while n % 2 == 0:\n            cnt += 1\n            n /= 2\n    else:\n        while n % 2 != 0:\n            cnt += 1\n            n //= 2\n    return cnt\nwhile t:\n    t -= 1\n    n = int(input())\n    lst = list(map(int, input().split()))\n    if sum(lst) % 2 == 0:\n        print(0)\n    else:\n        mn = 10 ** 7\n        for i in lst:\n            mn = min(f(i), mn)\n        print(mn)", "import sys\n\ndef checkEven(n):\n    oper = 0\n    while n % 2 == 0:\n        n = n // 2\n        oper += 1\n    return oper\n\ndef checkOdd(n):\n    oper = 0\n    while n % 2 != 0:\n        n = n // 2\n        oper += 1\n    return oper\nt = int(input())\nfor ts in range(t):\n    n = int(input())\n    arr = input()\n    arr = list(map(int, arr.split()))\n    odd = []\n    s = 0\n    even = []\n    for a in arr:\n        s += a\n    if s % 2 != 0:\n        oper = sys.maxsize\n        for a in arr:\n            if a % 2 != 0:\n                oper = min(oper, checkOdd(a))\n            else:\n                oper = min(oper, checkEven(a))\n        print(oper)\n    else:\n        print(0)", "def mindiv(z):\n    c = 0\n    if z % 2 == 1:\n        while z % 2 != 0:\n            z //= 2\n            c += 1\n        return c\n    else:\n        while z % 2 != 1:\n            z //= 2\n            c += 1\n        return c\nfor tc in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        d = []\n        for i in range(n):\n            d.append(mindiv(a[i]))\n        d.sort()\n        for i in range(n):\n            if d[i] == 0:\n                continue\n            else:\n                print(d[i])\n                break", "import sys\nfor i in range(int(input())):\n    s = int(input())\n    l = list(map(int, input().split()))\n    (ol, ev) = ([], [])\n    for i in l:\n        if i % 2 == 0:\n            ev.append(i)\n        else:\n            ol.append(i)\n    if len(ol) % 2 == 0:\n        print(0)\n    else:\n        ans1 = 10000001\n        for j in ol:\n            c = 0\n            p = j\n            while p % 2 != 0:\n                p = p // 2\n                c += 1\n            ans1 = min(ans1, c)\n        ans2 = 10000001\n        for j in ev:\n            c = 0\n            p = j\n            while p % 2 != 1:\n                p = p // 2\n                c += 1\n            ans2 = min(ans2, c)\n        if len(ev) == 0 or len(ol) == 0:\n            print(min(ans1, ans2))\n        else:\n            print(min(ans1, ans2))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    c = 10000000\n    if s % 2 != 0:\n        for x in a:\n            t = 0\n            if x % 2 == 0:\n                while x % 2 == 0:\n                    t += 1\n                    x = x // 2\n            else:\n                while x % 2 != 0:\n                    t += 1\n                    x = x // 2\n            c = min(c, t)\n    if s % 2 == 0:\n        print(0)\n    else:\n        print(c)", "import sys\n\ndef checkEven(n):\n    oper = 0\n    while n % 2 == 0:\n        n = n // 2\n        oper += 1\n    return oper\n\ndef checkOdd(n):\n    oper = 0\n    while n % 2 != 0:\n        n = n // 2\n        oper += 1\n    return oper\nt = int(input())\nfor ts in range(t):\n    n = int(input())\n    arr = input()\n    arr = list(map(int, arr.split()))\n    odd = []\n    s = 0\n    even = []\n    for a in arr:\n        s += a\n    if s % 2 != 0:\n        oper = sys.maxsize\n        for a in arr:\n            if a % 2 != 0:\n                oper = min(oper, checkOdd(a))\n            else:\n                oper = min(oper, checkEven(a))\n        print(oper)\n    else:\n        print(0)", "import math\nt = int(input())\n\ndef f(n):\n    cnt = 0\n    if n % 2 == 0:\n        while n % 2 == 0:\n            cnt += 1\n            n /= 2\n    else:\n        while n % 2 != 0:\n            cnt += 1\n            n //= 2\n    return cnt\nwhile t:\n    t -= 1\n    n = int(input())\n    lst = list(map(int, input().split()))\n    if sum(lst) % 2 == 0:\n        print(0)\n    else:\n        mn = 10 ** 7\n        for i in lst:\n            mn = min(f(i), mn)\n        print(mn)", "from math import log2\n\ndef depth_e(x):\n    d = 0\n    while x % 2 == 0:\n        x //= 2\n        d += 1\n    return d\n\ndef depth_o(x):\n    d = 0\n    while x % 2 != 0:\n        x //= 2\n        d += 1\n    return d\nfor t in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    e = 0\n    o = 0\n    min_e = 10 ** 9\n    ans = 10 ** 9\n    for i in range(n):\n        if a[i] % 2 == 0:\n            e += 1\n            ans = min(depth_e(a[i]), ans)\n        else:\n            o += 1\n            ans = min(depth_o(a[i]), ans)\n    if o % 2 == 0:\n        print(0)\n    else:\n        print(ans)", "tests = int(input())\nfor _ in range(tests):\n    m = int(input())\n    n = list(map(int, input().split()))\n    if not sum(n) & 1:\n        print(0)\n    else:\n        res = 100\n        for c in n:\n            tmp = 0\n            if c & 1:\n                while c & 1:\n                    tmp += 1\n                    c >>= 1\n            else:\n                while not c & 1:\n                    tmp += 1\n                    c >>= 1\n            res = min(res, tmp)\n            if res == 1:\n                break\n        print(res)", "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    ev = 0\n    od = 0\n    for j in lst:\n        if j % 2 == 0:\n            ev += 1\n        else:\n            od += 1\n    ma = []\n    if od % 2 != 0:\n        for h in lst:\n            if h % 2 != 0:\n                ele = h\n                c = 0\n                while True:\n                    if ele % 2 == 0:\n                        break\n                    c += 1\n                    ele = ele // 2\n                ma.append(c)\n        for h in lst:\n            if h % 2 == 0:\n                ele = h\n                c = 0\n                while True:\n                    if ele % 2 != 0:\n                        break\n                    c += 1\n                    ele = ele // 2\n                ma.append(c)\n    if ma == []:\n        print(0)\n    else:\n        print(min(ma))", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s.strip())\n\ndef invr():\n    return map(int, input().split())\nfor _ in range(inp()):\n    n = inp()\n    arr = inlt()\n    mn = 100000000\n    for i in arr:\n        val = i % 2\n        c = 0\n        while i != 0 and i % 2 == val:\n            i //= 2\n            c += 1\n        mn = min(c, mn)\n    if sum(arr) % 2 != 0:\n        print(mn)\n    else:\n        print(0)", "import math as mt\nMAXN = 10001\n\ndef sieve():\n    for i in range(4, MAXN, 2):\n        spf[i] = 2\n    for i in range(3, mt.ceil(mt.sqrt(MAXN))):\n        if spf[i] == i:\n            for j in range(i * i, MAXN, i):\n                if spf[j] == j:\n                    spf[j] = i\n\ndef getFactorization(x):\n    d = {}\n    while x != 1:\n        if spf[x] in d:\n            d[spf[x]] += 1\n        else:\n            d[spf[x]] = 1\n        x = x // spf[x]\n    return d\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        c = 10000000\n        for i in a:\n            x = i\n            xc = x % 2\n            tc = 0\n            while x % 2 != 1 - xc:\n                tc += 1\n                x = x // 2\n            c = min(tc, c)\n        print(c)", "t = int(input())\n\ndef countodd(el):\n    res = 0\n    while el % 2 != 0:\n        res += 1\n        el //= 2\n    return res\n\ndef counteven(el):\n    res = 0\n    while el > 0 and el % 2 != 1:\n        res += 1\n        el //= 2\n    return res\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if sum(arr) % 2 == 0:\n        print(0)\n        continue\n    res = float('inf')\n    for el in arr:\n        if el & 1:\n            res = min(res, countodd(el))\n        else:\n            res = min(res, counteven(el))\n    print(res)", "def solve(arr, n):\n    summ = 0\n    for i in range(n):\n        summ += arr[i]\n    if summ % 2 == 0:\n        return 0\n    ans = 100000000\n    for i in range(n):\n        parr = arr[i] % 2\n        parrnew = parr\n        anp = 0\n        while parr == parrnew:\n            arr[i] = arr[i] // 2\n            anp += 1\n            parrnew = arr[i] % 2\n        ans = min(ans, anp)\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    print(solve(arr, n))", "def findeven(n):\n    c = 0\n    while n > 0:\n        n = n // 2\n        c += 1\n        if n % 2 == 0:\n            return c\n    return c\n\ndef findodd(n):\n    c = 0\n    while n > 0:\n        n = n // 2\n        c += 1\n        if n % 2 != 0:\n            return c\n    return c\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    even = 0\n    odd = 0\n    o = []\n    e = []\n    for i in l:\n        if i % 2 == 0:\n            even += 1\n            e.append(i)\n        else:\n            odd += 1\n            o.append(i)\n    if odd % 2 == 0:\n        print(0)\n    else:\n        odd = odd % 2\n        count = []\n        for i in o:\n            count.append(findeven(i))\n        for i in e:\n            count.append(findodd(i))\n        count.sort()\n        print(sum(count[:odd]))", "for aa in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    c = 0\n    if sum(li) % 2 == 0:\n        print(0)\n        continue\n    p = []\n    for i in li:\n        if i % 2 == 0:\n            c = 1\n            while i // 2 % 2 == 0:\n                i = i // 2\n                c += 1\n            p.append(c)\n        elif i // 2 % 2 == 0:\n            i = i // 2\n            p.append(1)\n        else:\n            c = 1\n            while i // 2 % 2 != 0:\n                i = i // 2\n                c += 1\n            p.append(c)\n    print(min(p))", "def fuck(x):\n    c = 0\n    if x % 2 == 0:\n        while x % 2 == 0:\n            x = x // 2\n            c += 1\n    else:\n        while x % 2 != 0:\n            x = x // 2\n            c += 1\n    return c\n\ndef exe():\n    if sum(lst) % 2 == 0:\n        return 0\n    return min([fuck(i) for i in lst])\nfor _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    print(exe())", "for _ in range(int(input())):\n    a = int(input())\n    lt = list(map(int, input().split()))\n    sm = sum(lt)\n    if sm % 2 == 0:\n        print(0)\n        continue\n    l2 = []\n    for x in lt:\n        bval = True\n        if x % 2 == 0:\n            bval = False\n        temp = bin(x)[::-1]\n        for y in range(len(temp) - 2):\n            if bval and temp[y] == '0':\n                l2.append(y)\n                break\n            elif not bval and temp[y] == '1':\n                l2.append(y)\n                break\n        if bval:\n            l2.append(len(temp) - 2)\n    print(min(l2))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    lo = []\n    c = 0\n    if sum(l) % 2 == 0:\n        print('0')\n    else:\n        for i in l:\n            if i % 2 == 1:\n                s = i\n                while s % 2 != 0:\n                    s //= 2\n                    c += 1\n                lo.append(c)\n                c = 0\n            else:\n                p = i\n                while p % 2 != 1:\n                    p //= 2\n                    c += 1\n                lo.append(c)\n                c = 0\n        print(min(lo))", "def check(a, b):\n    if a % 4 == 1:\n        return b\n    return check(a // 2, b + 1)\n\ndef check2(a, b):\n    if a % 2 == 1:\n        return b\n    return check2(a // 2, b + 1)\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = 0\n    for i in a:\n        b += i\n    if b % 2 == 0:\n        print('0')\n        continue\n    k = 0\n    for i in a:\n        if i % 4 == 1:\n            k = 1\n            break\n        elif i % 4 == 3:\n            if k != 0:\n                k = min(k, check(i, 1))\n            else:\n                k = check(i, 1)\n        elif k != 0:\n            k = min(k, check2(i // 2, 1))\n        else:\n            k = check2(i // 2, 1)\n    print(k)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    s = sum(l)\n    ans = 0\n    m = 10 ** 6\n    if s % 2 == 0:\n        print(ans)\n    else:\n        for i in range(n):\n            ans = 0\n            a = l[i]\n            if l[i] % 2 == 0:\n                while a % 2 == 0:\n                    ans = ans + 1\n                    a = a // 2\n            else:\n                while a % 2 != 0:\n                    ans = ans + 1\n                    a = a // 2\n            if ans < m:\n                m = ans\n        print(m)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if sum(l) % 2 == 0:\n        print(0)\n    else:\n        e = [i for i in l if i % 2 == 0]\n        o = [i for i in l if i % 2 != 0]\n        c = 0\n        d = 0\n        while sum(o) % 2 != 0:\n            d += 1\n            for j in range(len(o)):\n                o[j] = o[j] // 2\n                if o[j] % 2 == 0:\n                    break\n        if len(e) != 0:\n            while sum(e) % 2 == 0:\n                c += 1\n                for j in range(len(e)):\n                    e[j] = e[j] // 2\n                    if e[j] % 2 != 0:\n                        break\n        if c != 0:\n            print(min(c, d))\n        else:\n            print(d)", "for _ in range(int(input())):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    ans = float('inf')\n    if sum(nums) % 2 != 0:\n        for i in nums:\n            count = 0\n            if i % 2 == 0:\n                while i % 2 == 0:\n                    i = i // 2\n                    count += 1\n                ans = min(ans, count)\n            else:\n                while i % 2 != 0:\n                    i = i // 2\n                    count += 1\n                ans = min(ans, count)\n        print(ans)\n    else:\n        print(0)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    even = []\n    odd = []\n    t_count_odd = 100000\n    t_count_even = 100000\n    for i in a:\n        if i % 2 != 0:\n            odd.append(i)\n    for k in a:\n        if k % 2 == 0:\n            even.append(k)\n    if len(odd) % 2 != 0:\n        for y in odd:\n            count_odd = 0\n            while y % 2 != 0:\n                y = y // 2\n                count_odd = count_odd + 1\n            t_count_odd = min(t_count_odd, count_odd)\n        for z in even:\n            count_even = 0\n            while z % 2 == 0:\n                z = z // 2\n                count_even = count_even + 1\n            t_count_even = min(t_count_even, count_even)\n    if len(odd) % 2 == 0:\n        print(0)\n    else:\n        print(min(t_count_even, t_count_odd))\n    t = t - 1", "def good(arr):\n    s = sum(arr)\n    if s % 2 == 0:\n        return 0\n    m = []\n    for i in arr:\n        c = 0\n        while i // 2 % 2 == i % 2:\n            i = i // 2\n            c += 1\n        c += 1\n        m.append(c)\n    return min(m)\nfor i in range(int(input())):\n    input()\n    arr = list(map(int, input().split()))\n    print(good(arr))", "def dfs(arr, n):\n    mn = int(1000000000.0)\n    for e in arr:\n        k = e\n        u = 1\n        v = e % 2\n        while v == k // 2 % 2 and k > 0:\n            k //= 2\n            u += 1\n        if v != k // 2 % 2:\n            mn = min(mn, u)\n    return mn\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if sum(arr) % 2 == 0:\n        return 0\n    return dfs(arr, n)\nfor i in range(int(input())):\n    print(solve())", "def ss(b, n):\n    s = sum(b)\n    if s % 2 == 0:\n        return 0\n    lst = []\n    for i in range(n):\n        x = a[i]\n        count = 0\n        while x > 0:\n            if x % 2 == x // 2 % 2:\n                count += 1\n                x = x // 2\n            else:\n                lst.append(count + 1)\n                break\n        else:\n            lst.append(count)\n    return min(lst)\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(ss(a, n))", "def summing(l):\n    s = sum(l)\n    if s % 2 == 0:\n        return 0\n    m = []\n    for i in l:\n        m.append(check(s - i, i))\n    return min(m)\n\ndef check(s, i):\n    cnt = 0\n    while i > 0:\n        cnt += 1\n        i = i // 2\n        if (s + i) % 2 == 0:\n            return cnt\nt = int(input())\nfor i in range(t):\n    x = int(input())\n    l = list(map(int, input().split()))\n    print(summing(l))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    oc = 0\n    for ele in arr:\n        if ele & 1:\n            oc += 1\n    if oc % 2 == 0:\n        print(0)\n    else:\n        mn = float('inf')\n        for ele in arr:\n            if ele & 1:\n                nc = 0\n                while ele & 1:\n                    ele = ele // 2\n                    nc += 1\n                mn = min(mn, nc)\n            else:\n                nc = 0\n                while ele & 1 == 0:\n                    ele = ele // 2\n                    nc += 1\n                mn = min(mn, nc)\n        print(mn)", "t = int(input(''))\nfor j in range(t):\n    n = int(input(''))\n    a = list(map(int, input('').split()))[:n]\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        e = []\n        o = []\n        k = 0\n        for z in range(n):\n            if a[z] % 2 == 0:\n                e.append(a[z])\n            else:\n                o.append(a[z])\n        c = []\n        for i in o:\n            if (i - 1) % 4 == 0:\n                c.append(1)\n                k = 1\n                break\n            else:\n                co = 0\n                while i % 2 != 0:\n                    i = i // 2\n                    co += 1\n                c.append(co)\n        if k != 1:\n            for i in e:\n                if i % 4 != 0:\n                    c.append(1)\n                    break\n                else:\n                    co = 0\n                    while i % 2 != 1:\n                        i = i // 2\n                        co += 1\n                    c.append(co)\n        print(min(c))", "inputt = int(input())\nresults = []\nfor i in range(inputt):\n    ans = 500000000\n    odd_stuff = []\n    input()\n    inp = input()\n    arrayy = inp.split()\n    arrayy = list(map(lambda x: int(x), arrayy))\n    for it in arrayy:\n        new_int = it\n        n = 0\n        if it % 2 == 0:\n            while new_int % 2 == 0:\n                n += 1\n                new_int //= 2\n        else:\n            while new_int % 2 == 1:\n                n += 1\n                new_int //= 2\n        ans = min(ans, n)\n    if sum(arrayy) % 2 == 0:\n        ans = 0\n    results.append(ans)\nfor item in results:\n    print(item)", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    odd_n = 0\n    for i in range(n):\n        if A[i] % 2 == 1:\n            odd_n += 1\n    if odd_n % 2 == 0:\n        print(0)\n    else:\n        ans = 10 ** 18\n        for i in range(n):\n            a = A[i]\n            res = 0\n            if a % 2 == 1:\n                while a % 2 == 1:\n                    a //= 2\n                    res += 1\n            else:\n                while a % 2 == 0:\n                    a //= 2\n                    res += 1\n            ans = min(ans, res)\n        print(ans)", "import math\ntest = int(input())\nresutl = []\n\ndef dfadfas(a):\n    d = 0\n    e = list(map(lambda i: [i, 0 if i % 2 else 1], a))\n    while True:\n        for i in range(len(a)):\n            c = e[i][0]\n            e[i][0] = int(c / 2)\n            if e[i][0] % 2 == e[i][1]:\n                d += 1\n                return d\n        d += 1\nfor i in range(test):\n    input()\n    s = 0\n    a = list(map(int, input().split(' ')))\n    for i in a:\n        s += i\n    if s % 2 == 0:\n        resutl.append(0)\n        continue\n    resutl.append(dfadfas(a))\n[print(i) for i in resutl]"]