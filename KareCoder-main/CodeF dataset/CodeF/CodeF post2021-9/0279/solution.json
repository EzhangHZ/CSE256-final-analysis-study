["t = int(input())\nfor _ in range(t):\n    n = input()\n    x = list(input().split())\n    if x[0] == n:\n        t = x.pop(0)\n    elif x[-1] == n:\n        t = x.pop(0)\n    else:\n        print(-1)\n        continue\n    x.reverse()\n    x.append(t)\n    print(' '.join(x))", "def recover(n, L):\n    if n == 1:\n        return 1\n    if int(L[0]) == n or int(L[-1]) == n:\n        L.remove(str(n))\n        L.reverse()\n        L.append(str(n))\n        return ' '.join(L)\n    return -1\ntotal = int(input())\nfor i in range(total):\n    n = int(input())\n    L = input().split()\n    print(recover(n, L))", "n = int(input())\nfor p in range(n):\n    i = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    if max(a) != a[0] and max(a) != a[-1]:\n        print('-1')\n        continue\n    p = reversed(a)\n    print(' '.join(map(str, p)))", "t = int(input())\nns = []\narr = []\nfor _ in range(t):\n    ns.append(int(input()))\n    arr.append(list(map(int, input().split(' '))))\nfor a in arr:\n    a.reverse()\n    if max(a) in (a[0], a[-1]):\n        print(' '.join(tuple(map(str, a))))\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    if a[-1] != m and a[0] != m:\n        print(-1)\n    elif a[0] == m:\n        p = [m] + a[1:][::-1]\n        print(' '.join(map(str, p)))\n    else:\n        p = a[:-1][::-1] + [m]\n        print(' '.join(map(str, p)))", "def main():\n    passn = int(input())\n    arr = list(map(int, input().split()))\n    m = max(arr)\n    if m == arr[0]:\n        print(arr[0], ' '.join(map(str, arr[-1:0:-1])))\n        return\n    if m == arr[-1]:\n        print(' '.join(map(str, arr[-2::-1])), arr[-1])\n        return\n    print(-1)\nfor i in range(int(input())):\n    main()", "import math\n\ndef intlist():\n    return [int(i) for i in input().split(' ')]\n\ndef stringlsit():\n    return input().split(' ')\n\ndef solve():\n    n = int(input())\n    a = intlist()\n    ans = []\n    t = 1\n    if a[0] != n and a[-1] != n:\n        return -1\n    if a[0] == n:\n        ans.append(n)\n        a.pop(0)\n    else:\n        ans.append(n)\n        a.pop(n - 1)\n    a = a[::-1]\n    ans = a + ans\n    ans = [str(i) for i in ans]\n    return ' '.join(ans)\nt = input()\nfor tt in range(int(t)):\n    print(solve())", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = []\n    if max(a) != a[0] and max(a) != a[-1]:\n        print(-1)\n        continue\n    p = reversed(a)\n    print(' '.join(map(str, p)))", "import sys\ninput = sys.stdin.readline\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    data = list(map(int, input().split()))\n    answer = []\n    if data[0] == n:\n        answer = [n] + data[:0:-1]\n        print(' '.join(map(str, answer)))\n    elif data[-1] == n:\n        answer = data[::-1]\n        print(' '.join(map(str, answer)))\n    else:\n        print(-1)", "def main():\n    T = int(input())\n    for t in range(T):\n        n = input()\n        num = list(map(int, input().strip().split(' ')))\n        maxi = max(num)\n        if num[-1] == maxi or num[0] == maxi:\n            num.remove(maxi)\n            num = num[::-1] + [maxi]\n            print(' '.join(map(str, num)))\n        else:\n            print(-1)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    if s[0] == n or s[n - 1] == n:\n        print((' '.join((str(i) for i in reversed(s[:s.index(n)]))) + ' ' + ' '.join((str(i) for i in reversed(s[s.index(n):])))).lstrip().rstrip())\n    else:\n        print(-1)", "from collections import deque\n\ndef solve():\n    n = int(input())\n    l = list(map(int, input().split()))\n    i = l.index(max(l))\n    if i != 0 and i != n - 1:\n        return -1\n    if i == 0:\n        return ' '.join(map(str, [l[0]] + l[1:][::-1]))\n    if i == n - 1:\n        return ' '.join(map(str, l[:-1][::-1] + [l[-1]]))\nn = int(input())\nfor i in range(n):\n    print(solve())", "t = int(input())\nanswers = []\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if a[0] == n:\n        a = [a[0]] + list(reversed(a[1:]))\n    elif a[n - 1] == n:\n        a = list(reversed(a[:n - 1])) + [a[n - 1]]\n    else:\n        a = [-1]\n    print(' '.join([str(x) for x in a]))", "_ = int(input())\nfor __ in range(_):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if arr[0] != n and arr[-1] != n:\n        print(-1)\n        continue\n    if arr[0] == n:\n        arr_out = [n]\n        arr_tmp = arr[1:]\n        arr_tmp.reverse()\n        arr_out += arr_tmp\n        print(' '.join([str(x) for x in arr_out]))\n    else:\n        arr_tmp = arr[:-1]\n        arr_tmp.reverse()\n        arr_tmp.append(n)\n        print(' '.join([str(x) for x in arr_tmp]))", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    arr = [int(x) for x in sys.stdin.readline().split()]\n    m = max(arr)\n    if arr[0] != m and arr[len(arr) - 1] != m:\n        print(-1)\n        continue\n    arr.remove(m)\n    arr = arr[::-1]\n    arr.append(m)\n    print(' '.join(map(str, arr)))", "import math\n\ndef intlist():\n    return [int(i) for i in input().split(' ')]\n\ndef stringlsit():\n    return input().split(' ')\n\ndef printjoin(l):\n    l = [str(i) for i in l]\n    return ' '.join(l)\n\ndef solve():\n    n = int(input())\n    a = intlist()\n    if a[0] == n:\n        return printjoin([a[0]] + a[-1:0:-1])\n    if a[-1] == n:\n        return printjoin([a[-1]] + a[-2:0:-1] + [a[0]])\n    return -1\nt = input()\nfor tt in range(int(t)):\n    print(solve())", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    w = list(map(int, input().split()))\n    a = max(w)\n    if w[0] != max(w) and w[-1] != max(w):\n        print(-1)\n    else:\n        if w[0] == max(w):\n            w = w[1:][::-1] + [w[0]]\n        elif w[-1] == max(w):\n            w = w[:-1][::-1] + [w[-1]]\n        print(' '.join(map(str, w)))", "k = []\nfor i in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    y = max(p)\n    if p.index(max(p)) == 0 or p.index(y) == len(p) - 1:\n        p.pop(p.index(y))\n        p.reverse()\n        p.append(y)\n        s = ' '.join((str(j) for j in p))\n        k.append(s)\n    else:\n        k.append(-1)\nfor t in k:\n    print(t)", "def examine(nums):\n    if not nums[0] == len(nums) and (not nums[-1] == len(nums)):\n        return (False, nums)\n    return (True, nums[::-1])\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    nums = [int(num) for num in input().split(' ')]\n    (possible, original) = examine(nums)\n    if not possible:\n        print(-1)\n    else:\n        print(' '.join((str(k) for k in original)))", "get_int = lambda : int(input())\nget_int_list = lambda : list(map(int, input().split()))\n\ndef solve():\n    n = get_int()\n    ar = get_int_list()\n    if ar[0] != n and ar[n - 1] != n:\n        return [-1]\n    grow_left = []\n    grow_right = []\n    left = 0\n    right = n - 1\n    while left <= right:\n        if ar[left] < ar[right]:\n            grow_right.append(ar[right])\n            right -= 1\n        else:\n            grow_left.append(ar[left])\n            left += 1\n    grow_left.reverse()\n    return grow_left + grow_right\nt = get_int()\nfor _ in range(t):\n    print(' '.join(map(str, solve())))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    if a[0] != m and a[-1] != m:\n        print(-1)\n    elif n == 1:\n        print(a[0])\n    else:\n        ans = []\n        if n % 2 == 0:\n            for i in range(n // 2 - 1, -1, -1):\n                ans.append(a[i])\n            for i in range(n - 1, n // 2 - 1, -1):\n                ans.append(a[i])\n        else:\n            for i in range(n // 2 - 1, -1, -1):\n                ans.append(a[i])\n            for i in range(n - 1, n // 2 - 1, -1):\n                ans.append(a[i])\n        print(' '.join(list(map(str, ans))))\n    t -= 1", "from collections import deque\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = deque(a)\n    if n == a[0] or n == a[-1]:\n        p = deque()\n        while a:\n            if a[0] >= a[-1]:\n                p.appendleft(a.popleft())\n            else:\n                p.append(a.pop())\n        print(' '.join((str(x) for x in p)))\n    else:\n        print(-1)\nfor test in range(int(input())):\n    solve()", "n = int(input())\nwhile n > 0:\n    N = int(input())\n    nums = list(map(int, input().split(' ')))\n    if nums[0] == N or nums[len(nums) - 1] == N:\n        ans = []\n        if nums[0] == N:\n            ans.append(N)\n            for i in range(len(nums) - 1, 0, -1):\n                ans.append(nums[i])\n        else:\n            ans = nums[:-1][::-1]\n            ans.append(N)\n        print(' '.join((str(item) for item in ans)))\n    else:\n        print('-1')\n    n -= 1", "t = int(input())\nfor a in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if arr[0] != n and arr[n - 1] != n:\n        print(-1)\n    else:\n        ans = []\n        for i in range(n - 1, -1, -1):\n            ans.append(str(arr[i]))\n        print(' '.join(ans))", "from collections import deque\n\ndef solution(n, nums):\n    nums = deque(nums)\n    (pos, max_) = (0, 0)\n    for (i, num) in enumerate(nums):\n        if num > max_:\n            max_ = num\n            pos = i\n    if pos != 0 and pos != n - 1:\n        print('-1')\n        return\n    res = deque([])\n    if pos == 0:\n        res.append(nums[0])\n        nums.popleft()\n    else:\n        res.append(nums[n - 1])\n        nums.pop()\n    while nums:\n        if nums[0] > nums[-1]:\n            res.appendleft(nums[0])\n            nums.popleft()\n        else:\n            res.append(nums[-1])\n            nums.pop()\n    print(' '.join((str(s) for s in res)))\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    nums = [int(x) for x in input().split()]\n    solution(n, nums)", "for s in [*open(0)][2::2]:\n    print(*((a := s.split()[::-1]), [-1])[a[0] != str(len(a)) != a[-1]])", "t = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = a.index(max(a))\n    if b == 0 or b == n - 1:\n        a1 = []\n        for r in range(n // 2):\n            a1.append(str(a[n // 2 - 1 - r]))\n        for k in range(n // 2, n):\n            a1.append(str(a[n + n // 2 - 1 - k]))\n        print(' '.join(a1))\n    else:\n        print(-1)", "def recover_permutation(n, a):\n    p = 0\n    q = n - 1\n    if not (a[p] == n or a[q] == n):\n        return '-1'\n    ans = []\n    while p <= q:\n        if a[p] < a[q]:\n            ans.insert(0, a[p])\n            p += 1\n        else:\n            ans.append(a[q])\n            q -= 1\n    return ' '.join((str(ele) for ele in ans))\n\ndef recover_permutation1(n, a):\n    p = 0\n    q = n - 1\n    if not (a[p] == n or a[q] == n):\n        return '-1'\n    ans = ''\n    mid = n // 2\n    for i in range(mid, -1, -1):\n        ans += str(a[i]) + ' '\n    for i in range(n - 1, mid, -1):\n        ans += str(a[i]) + ' '\n    return ans[:-1]\nt = int(input().strip())\nfor i in range(t):\n    n = int(input().strip())\n    a = list(map(int, input().strip().split()))\n    print(recover_permutation1(n, a))", "for R in [*open(0)][2::2]:\n    print(*((a := R.split()[::-1]), [-1])[a[0] != str(len(a)) != a[-1]])", "import sys\nimport bisect\nimport math\nfrom collections import deque\ninput = lambda : sys.stdin.readline().strip()\nmod = 10 ** 9 + 9\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[0] != n and a[-1] != n:\n        return -1\n    else:\n        queue = deque()\n        (l, r) = (0, n - 1)\n        while l < r:\n            if a[l] < a[r]:\n                queue.appendleft(a[l])\n                l += 1\n            else:\n                queue.append(a[r])\n                r -= 1\n        queue.append(a[l])\n    return ' '.join((str(x) for x in queue))\nt = 1\nt = int(input())\nfor _ in range(t):\n    print(solve())", "for t in range(int(input())):\n    n = input()\n    a = input().split()\n    if n in [a[0], a[-1]]:\n        print(*a[::-1])\n    else:\n        print(-1)", "for s in [*open(0)][2::2]:\n    print(*((a := s.split()[::-1]), [-1])[a[0] != str(len(a)) != a[-1]])", "t = int(input())\nfor t in range(t):\n    n = input()\n    a = input().split()\n    if n in [a[0], a[-1]]:\n        print(*a[::-1])\n    else:\n        print(-1)", "t = int(input())\nfor t in range(t):\n    n = input()\n    a = input().split()\n    if n in [a[0], a[-1]]:\n        print(*reversed(a))\n    else:\n        print(-1)", "i = input\np = print\nfor t in range(int(i())):\n    n = i()\n    a = i().split()\n    if n in [a[0], a[-1]]:\n        p(*a[::-1])\n    else:\n        p(-1)", "for _ in range(int(input())):\n    n = input()\n    array = input().split()\n    if array[0] != n and array[len(array) - 1] != n:\n        print(-1)\n    else:\n        print(*array[::-1])", "for s in [*open(0)][2::2]:\n    print(*((a := s.split()[::-1]), [-1])[a[0] != str(len(a)) != a[-1]])", "t = int(input())\nfor t in range(t):\n    n = input()\n    a = input().split()\n    if n in [a[0], a[-1]]:\n        print(*reversed(a))\n    else:\n        print(-1)", "for s in [*open(0)][2::2]:\n    print(*((a := s.split()[::-1]), [-1])[a[0] != str(len(a)) != a[-1]])", "for s in [*open(0)][2::2]:\n    print(*((a := s.split()[::-1]), [-1])[a[0] != str(len(a)) != a[-1]])", "for s in [*open(0)][2::2]:\n    print(*((a := s.split()[::-1]), [-1])[a[0] != str(len(a)) != a[-1]])", "t = int(input())\nfor t in range(t):\n    n = input()\n    a = input().split()\n    if n in [a[0], a[-1]]:\n        print(*a[::-1])\n    else:\n        print(-1)", "for s in [*open(0)][2::2]:\n    if (n := str(len((a := s.split()[::-1])))) != a[0]:\n        a = (a.pop(), *a)\n    print(*(a, [-1])[a[0] != n])", "for caseno in range(int(input())):\n    n = input()\n    a = input().split()\n    p = [n]\n    answer = []\n    if int(n) <= 2:\n        answer = a\n    elif a[0] == n:\n        a = a[1:]\n        answer = a[:1] + p + a[1:][::-1]\n    elif a[-1] == n:\n        a = a[:-1]\n        answer = a[:1] + p + a[1:][::-1]\n    else:\n        answer = ['-1']\n    print(*answer)", "for s in [*open(0)][2::2]:\n    a = s.split()[::-1]\n    i = a.index(str((n := len(a))))\n    print(*([n] + a[:i] + a[i + 1:], [-1])[0 != i != n - 1])", "for s in [*open(0)][2::2]:\n    if (n := str(len((a := s.split()[::-1])))) != a[0]:\n        a = [a.pop()] + a\n    print(*(a, [-1])[a[0] != n])", "for s in [*open(0)][2::2]:\n    if (n := str(len((a := s.split()[::-1])))) != a[0]:\n        a = (a.pop(), *a)\n    print(*(a, [-1])[a[0] != n])", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(*(a[::-1], [-1])[a[0] != str(len(a)) != a[-1]])", "for t in range(int(input())):\n    n = input()\n    a = input().split()\n    print(*reversed(a)) if n in [a[0], a[-1]] else print(-1)", "for s in [*open(0)][2::2]:\n    print(*((a := s.split()[::-1]), [-1])[a[0] != str(len(a)) != a[-1]])", "for s in [*open(0)][2::2]:\n    print(*((a := s.split()[::-1]), [-1])[a[0] != str(len(a)) != a[-1]])", "n = int(input())\n\ndef per():\n    l = int(input())\n    a = [int(x) for x in input().split()]\n    s = str()\n    if a[0] != l and a[l - 1] != l:\n        print('-1')\n    else:\n        for i in range(len(a) - 1, -1, -1):\n            s += str(a[i]) + ' '\n        print(s)\nfor i in range(n):\n    per()", "from collections import deque\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    nums = [int(i) for i in input().split()]\n    if nums[0] != max(nums) and nums[-1] != max(nums):\n        print(-1)\n    else:\n        (l, r) = (0, len(nums) - 1)\n        ans = deque()\n        while l <= r:\n            if nums[r] < nums[l]:\n                ans.append(nums[r])\n                r -= 1\n            else:\n                ans.appendleft(nums[l])\n                l += 1\n        print(' '.join([str(i) for i in list(ans)]))", "num_inp = lambda : int(input())\narr_inp = lambda : list(map(int, input().split()))\nsp_inp = lambda : map(int, input().split())\nfor s in [*open(0)][2::2]:\n    print(*((a := s.split()[::-1]), [-1])[a[0] != str(len(a)) != a[-1]])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = ''\n    if a[0] != n and a[n - 1] != n:\n        print('-1')\n    else:\n        i = n - 1\n        while i >= 0:\n            s += str(a[i]) + ' '\n            i -= 1\n        print(s)", "def main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        lst = list(map(int, input().split()))\n        print(*list(reversed(lst))) if lst[-1] == n or lst[0] == n else print(-1)\nmain()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[0] == n or a[n - 1] == n:\n        print(*reversed(a))\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[0] == n or a[-1] == n:\n        print(*reversed(a))\n    else:\n        print(-1)", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    if max(a) != a[0] and max(a) != a[n - 1]:\n        print(-1)\n    else:\n        c = (n - 1) // 2\n        x = a[0:c + 1]\n        y = a[c + 1:n]\n        x.reverse()\n        y.reverse()\n        print(*x, *y)\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n != a[0] and n != a[-1]:\n        print(-1)\n    else:\n        print(*a[::-1])", "t = int(input())\nret = []\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        ret.append([n])\n        continue\n    if a[0] != n and a[-1] != n:\n        ret.append([-1])\n    else:\n        if a[0] == n:\n            ans = a[1:][::-1]\n            ans.extend([a[0]])\n        else:\n            ans = [a[-1]]\n            ans.extend(a[:-1][::-1])\n        ret.append(ans)\nfor i in ret:\n    print(*i)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[0] == n or a[n - 1] == n:\n        print(*a[::-1])\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n != l[0] and n != l[-1]:\n        print(-1)\n    else:\n        l.remove(n)\n        i = len(l) // 2\n        print(*l[i - 1::-1] + [n] + l[n - 1:i - 1:-1])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[-1] != n and a[0] != n:\n        print(-1)\n    elif n == 1:\n        print(*a)\n    else:\n        print(*a[::-1])", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mx = max(a)\n    if a[0] == mx or a[-1] == mx:\n        if mx == a[0]:\n            b = a[1:]\n        else:\n            b = a[:n - 1]\n        b.reverse()\n        b.append(mx)\n        print(*b)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    k = n\n    p = []\n    if a[-1] != max(a) != a[0]:\n        print(-1)\n    else:\n        b = max(a[0], a[-1])\n        p.append(b)\n        a.remove(b)\n        a.reverse()\n        print(*p + a)", "for i in range(int(input())):\n    (a, s) = (int(input()), list(map(int, input().split())))\n    l = list()\n    if a != s[0] and a != s[-1]:\n        print(-1)\n    else:\n        l.append(a)\n        s.remove(a)\n        l += reversed(s)\n        print(*l)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if arr[0] == n or arr[n - 1] == n:\n        print(*arr[::-1])\n    else:\n        print(-1)", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    A = list(map(int, input().split()))\n    if A[0] == n or A[-1] == n:\n        print(*reversed(A))\n    else:\n        print(-1)", "import sys\nimport math\nfrom bisect import bisect_right as br\nfrom itertools import combinations as cb\n\ndef int_arr():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef str_arr():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef input():\n    return sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    n = int(input())\n    arr = int_arr()\n    mx = max(arr)\n    if arr[0] != mx and arr[-1] != mx:\n        print(-1)\n        continue\n    arr.remove(mx)\n    arr.reverse()\n    print(mx, *arr)", "t = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[0] == n or a[n - 1] == n:\n        print(*a[::-1])\n    else:\n        print(-1)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[0] == n:\n        a = a[1:]\n        print(n, *a[::-1])\n    elif a[-1] == n:\n        a.pop()\n        print(*a[::-1], n)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if arr.index(max(arr)) in [0, len(arr) - 1]:\n        print(*arr[::-1])\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    m = max(p)\n    if m == p[0] or m == p[-1]:\n        print(*p[::-1])\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[0] == n or a[n - 1] == n:\n        print(*reversed(a))\n    else:\n        print(-1)", "T = int(input())\nwhile T > 0:\n    N = int(input())\n    p = list(map(int, input().split()))\n    if p[0] == N:\n        p[1:N] = reversed(p[1:N])\n        print(*p)\n    elif p[N - 1] == N:\n        p[0:N - 1] = reversed(p[0:N - 1])\n        print(*p)\n    else:\n        print(-1)\n    T -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[0] == n or a[n - 1] == n:\n        print(*reversed(a))\n    else:\n        print(-1)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    if l[0] == n:\n        l = l[-1:0:-1] + l[0:1]\n        print(*l)\n    elif l[-1] == n:\n        l = l[-2::-1] + l[n - 1:n]\n        print(*l)\n    else:\n        print(-1)\n    t = t - 1", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[0] == n:\n        print(n, *a[1:][::-1])\n    elif a[-1] == n:\n        print(*a[:-1][::-1], n)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[0] != n and a[-1] != n:\n        print(-1)\n    else:\n        p = []\n        p.append(n)\n        a.remove(n)\n        p += a[::-1]\n        print(*p)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[0] == n or a[-1] == n:\n        print(*reversed(a))\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[0] != n and a[n - 1] != n:\n        print(-1)\n    else:\n        a.reverse()\n        print(*a)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[0] != n and a[n - 1] != n:\n        print(-1)\n    else:\n        a.reverse()\n        print(*a)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(num) for num in input().split()]\n    if a[-1] != n and a[0] != n:\n        print(-1)\n        continue\n    elif n == 1:\n        print(1)\n        continue\n    elif a[-1] == n:\n        x = a[-2::-1] + [n]\n        print(*x)\n        continue\n    elif a[0] == n:\n        x = [n] + a[-1:0:-1]\n        print(*x)", "a = int(input())\nfor k in range(a):\n    b = int(input())\n    if b == 1:\n        array = input().split()\n        print(1)\n    else:\n        array = input().split()\n        if int(array[0]) == b:\n            print(array[0], end=' ')\n            for i in range(1, b):\n                print(array[b - i], end=' ')\n        elif int(array[b - 1]) == b:\n            for i in range(1, b):\n                print(array[b - i - 1], end=' ')\n            print(array[b - 1], end=' ')\n        else:\n            print(-1, end=' ')\n        print('')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(*a)\n    else:\n        k = a.index(n)\n        if k == 0 or k == n - 1:\n            print(*a[::-1])\n        else:\n            print(-1)", "t = int(input())\nfor _ in range(t):\n    not_important = input()\n    p = [int(number) for number in input().split(' ')]\n    if max(p[0], p[-1]) < max(p):\n        print(-1)\n    else:\n        p.reverse()\n        result = ''\n        for number in p:\n            result += str(number) + ' '\n        result = result[:-1]\n        print(result)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[0] != n and a[-1] != n:\n        print(-1)\n    elif a[0] != n:\n        a1 = a[:n - 1]\n        print(*a1[::-1], end=' ')\n        print(a[-1])\n    else:\n        a1 = a[1:n]\n        print(*a1[::-1], end=' ')\n        print(a[0])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    k = [int(x) for x in input().split(' ')]\n    if k[0] == n or k[-1] == n:\n        k.reverse()\n        print(*k)\n    else:\n        print(-1)", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    mx = max(arr)\n    if arr[0] != mx and arr[-1] != mx:\n        print(-1)\n        continue\n    if arr[0] == mx:\n        res = arr[::-1]\n        print(*res[:-1] + [mx])\n    else:\n        res = arr[::-1]\n        print(*res[1:] + [mx])", "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    max_lis = max(lis[0], lis[-1])\n    if max_lis != n:\n        print('-1')\n    else:\n        print(*lis[::-1])", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if l[0] == n or l[n - 1] == n:\n        print(*l[::-1])\n    else:\n        print('-1')", "arr = []\nfor i in range(int(input())):\n    input()\n    arr.append(list(map(int, input().split())))\nfor a in arr:\n    maximum = max(a)\n    if maximum == a[0] or maximum == a[-1]:\n        print(*a[::-1])\n    else:\n        print(-1)", "for _ in range(int(input())):\n    x = int(input())\n    z = list(map(int, input().split()))\n    if z[0] == x or z[-1] == x:\n        print(*reversed(z))\n    else:\n        print(-1)", "def solve():\n    n = int(input())\n    A = [int(x) for x in input().split()]\n    if A[0] == n:\n        A = A[1:]\n    elif A[-1] == n:\n        A = A[:-1]\n    else:\n        print(-1)\n        return\n    A = A[::-1]\n    print(*A, n)\nt = int(input())\nfor _ in range(t):\n    solve()", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    w = list(map(int, input().split()))\n    a = max(w)\n    if w[0] != max(w) and w[-1] != max(w):\n        print(-1)\n    else:\n        if w[0] == max(w):\n            w = w[1:][::-1] + [w[0]]\n        elif w[-1] == max(w):\n            w = w[:-1][::-1] + [w[-1]]\n        print(*w)", "import sys\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef LI1():\n    return list(map(int1, sys.stdin.readline().split()))\n\ndef LLI1(rows_number):\n    return [LI1() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline().rstrip()\ndij = [(0, 1), (1, 0), (0, -1), (-1, 0)]\ninf = 4294967295\nmd = 998244353\n\ndef solve():\n    n = II()\n    aa = LI()\n    if aa[0] == n:\n        ans = [n] + aa[1:][::-1]\n    elif aa[-1] == n:\n        ans = aa[:-1][::-1] + [n]\n    else:\n        ans = [-1]\n    print(*ans)\nfor testcase in range(II()):\n    solve()"]