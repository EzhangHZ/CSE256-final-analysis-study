["import sys\ninput = sys.stdin.readline\n\ndef solve():\n    s = input().strip()\n    n = len(s)\n    score = 0\n    for c in s:\n        score += ord(c) - ord('a') + 1\n    if n % 2 == 0:\n        print('Alice ' + str(score))\n    else:\n        sb = min(ord(s[0]) - ord('a') + 1, ord(s[-1]) - ord('a') + 1)\n        if sb > score - sb:\n            print('Bob ' + str(2 * sb - score))\n        else:\n            print('Alice ' + str(score - 2 * sb))\nfor _ in range(int(input())):\n    solve()", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_list_string():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\n\ndef get_print_int(x):\n    sys.stdout.write(str(x) + '\\n')\n\ndef get_print(x):\n    sys.stdout.write(x + '\\n')\n\ndef get_print_int_same(x):\n    sys.stdout.write(str(x) + ' ')\n\ndef get_print_same(x):\n    sys.stdout.write(x + ' ')\n\ndef solve():\n    for _ in range(get_int()):\n        s = get_string()\n        n = len(s)\n        summ = 0\n        for i in s:\n            summ += ord(i) - ord('a') + 1\n        if n % 2 == 0:\n            get_print('Alice {}'.format(summ))\n        else:\n            a1 = summ - (ord(s[0]) - ord('a') + 1)\n            a2 = summ - (ord(s[-1]) - ord('a') + 1)\n            b1 = summ - a1\n            b2 = summ - a2\n            if a1 > b1 and a2 > b2:\n                get_print('Alice {}'.format(max(a1 - b1, a2 - b2)))\n            elif a1 > b1:\n                get_print('Alice {}'.format(a1 - b1))\n            elif a2 > b2:\n                get_print('Alice {}'.format(a2 - b2))\n            else:\n                get_print('Bob {}'.format(min(b1 - a1, b2 - a2)))\nsolve()", "def cringe(s):\n    k = 0\n    if len(s) == 1:\n        return 'Bob ' + str(ord(s[0]) - 96)\n    else:\n        if len(s) % 2 == 0:\n            for i in range(len(s)):\n                k = k + ord(s[i]) - 96\n        elif ord(s[0]) > ord(s[len(s) - 1]):\n            for i in range(len(s) - 1):\n                k = k + ord(s[i]) - 96\n            k = k - ord(s[len(s) - 1]) + 96\n        else:\n            for i in range(1, len(s)):\n                k = k + ord(s[i]) - 96\n            k = k - ord(s[0]) + 96\n        if k > 0:\n            k = str(k)\n            return 'Alice ' + k\n        else:\n            k = str(abs(k))\n            return 'Bob ' + k\nn = int(input())\np = []\nfor i in range(n):\n    h = input()\n    p.append(cringe(h))\nprint('\\n'.join(p))", "import sys\n\ndef main():\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        s = sys.stdin.readline().rstrip()\n        ln = len(s)\n        alice = 0\n        bob = 0\n        if ln % 2 == 0:\n            for l in s:\n                alice += ord(l) - 96\n        elif ln % 2 == 1 and ln > 2:\n            if s[0] >= s[-1]:\n                for l in s[:-1]:\n                    alice += ord(l) - 96\n                bob += ord(s[-1]) - 96\n            else:\n                for l in s[1:]:\n                    alice += ord(l) - 96\n                bob += ord(s[0]) - 96\n        else:\n            for l in s:\n                bob += ord(l) - 96\n        if alice > bob:\n            print('Alice', alice - bob)\n        else:\n            print('Bob', bob - alice)\nmain()", "import sys\nn = int(sys.stdin.readline())\nfor i in range(n):\n    s = sys.stdin.readline().strip()\n    if len(s) == 1:\n        res = ord(s[0]) - ord('a') + 1\n        print(f'Bob {res}')\n    elif len(s) % 2 == 0:\n        res = sum([ord(ch) - ord('a') + 1 for ch in s])\n        print(f'Alice {res}')\n    elif len(s) % 2 == 1:\n        fl = ord(s[0]) - ord('a') + 1\n        ll = ord(s[-1]) - ord('a') + 1\n        at = sum([ord(ch) - ord('a') + 1 for ch in s[1:-1]]) + max(fl, ll) - min(fl, ll)\n        print(f'Alice {at}')", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    s = input()[:-1]\n    x = len(s)\n    if x == 1:\n        print('Bob', ord(s) - 96)\n    else:\n        c = -96 * x\n        for i in s:\n            c += ord(i)\n        if x % 2:\n            print('Alice', c - ord(s[0]) - ord(s[-1]) + 96 * 2 + abs(ord(s[0]) - ord(s[-1])))\n        else:\n            print('Alice', c)", "def f(s):\n    cnt = 0\n    for i in s:\n        cnt += ord(i) - 96\n    return cnt\nt = int(input())\na = [input() for i in range(t)]\nfor i in a:\n    length = len(i)\n    if length > 1:\n        if length % 2 == 1:\n            cnt0 = 0\n            if ord(i[0]) > ord(i[-1]):\n                cnt0 += f(i[:-1]) - (ord(i[-1]) - 96)\n            else:\n                cnt0 += f(i[1:]) - (ord(i[0]) - 96)\n            print(f'Alice {cnt0}')\n        else:\n            print(f'Alice {f(i)}')\n    else:\n        print(f'Bob {ord(i[0]) - 96}')", "def solve(s):\n    first = ord('a') - 1\n    if len(s) == 1:\n        return 'Bob ' + str(ord(s) - first)\n    elif len(s) % 2 == 1:\n        if ord(s[0]) < ord(s[-1]):\n            bob = s[0]\n            alice = s[1:]\n        else:\n            bob = s[-1]\n            alice = s[:-1]\n        aCount = 0\n        for i in alice:\n            aCount += ord(i) - first\n        difference = aCount - (ord(bob) - first)\n        return 'Alice ' + str(difference)\n    else:\n        aCount = 0\n        for i in s:\n            aCount += ord(i) - first\n        return 'Alice ' + str(aCount)\nt = int(input())\ncases = []\nfor i in range(t):\n    cases.append(input())\nans = []\nfor i in cases:\n    ans.append(solve(i))\nfor i in ans:\n    print(i)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input().rstrip())):\n    s = input().rstrip()\n    (first, last) = (ord(s[0]) - ord('a') + 1, ord(s[-1]) - ord('a') + 1)\n    total = 0\n    for c in s:\n        total += ord(c) - ord('a') + 1\n    if not len(s) % 2:\n        print(f'Alice {total}')\n    else:\n        bob = min(first, last)\n        alice = total - bob\n        if alice > bob:\n            print(f'Alice {alice - bob}')\n        else:\n            print(f'Bob {bob - alice}')", "import sys\nt = int(sys.stdin.readline())\nlist2 = []\nfor i in range(t):\n    a = 0\n    b = 0\n    list1 = input()\n    if len(list1) % 2 == 0:\n        for j in list1:\n            a += ord(j) - 96\n        list2.append('Alice %d' % a)\n    elif len(list1) == 1:\n        list2.append('Bob %d' % (ord(list1[0]) - 96))\n    else:\n        temp1 = 0\n        temp2 = 0\n        for j in range(len(list1) - 1):\n            temp1 += ord(list1[j]) - 96\n        for j in range(1, len(list1)):\n            temp2 += ord(list1[j]) - 96\n        if temp1 > temp2:\n            c = 0\n            a = temp1\n        else:\n            c = 1\n            a = temp2\n        if c == 0:\n            b = ord(list1[-1]) - 96\n        else:\n            b = ord(list1[0]) - 96\n        list2.append('Alice %d' % (a - b))\nfor i in list2:\n    print(i)", "t = int(input())\nres = []\nfor i in range(t):\n    st = input()\n    if len(st) % 2 == 0:\n        sum = 0\n        for item in st:\n            sum = sum + ord(item) - 96\n        res.append('Alice ' + str(sum))\n    elif len(st) == 1:\n        res.append('Bob ' + str(ord(st) - 96))\n    else:\n        m = min(ord(st[0]), ord(st[len(st) - 1]))\n        sum = 0\n        for item in st:\n            sum = sum + ord(item) - 96\n        res.append('Alice ' + str(sum - 2 * (m - 96)))\nfor i in res:\n    print(i)", "import sys\n\ndef solve():\n    s = sys.stdin.readline().strip()\n    n = len(s)\n    s = list(map(ord, s))\n    x = sum(s) - (ord('a') - 1) * n\n    if n % 2 == 1:\n        b = min(s[0], s[-1]) - ord('a') + 1\n        a = x - b\n    else:\n        a = x\n        b = 0\n    if a > b:\n        print('Alice', a - b)\n    else:\n        print('Bob', b - a)\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "n = int(input())\nlis = []\nfor i in range(n):\n    s = str(input())\n    summa = 0\n    for j in range(len(s)):\n        summa = summa + (ord(s[j]) - 96)\n    start = ord(s[0]) - 96\n    fin = ord(s[-1]) - 96\n    if len(s) == 1:\n        lis.append('Bob ' + str(ord(s[0]) - 96))\n    elif len(s) % 2 == 1:\n        alis = max(summa - start, summa - fin)\n        fail = min(start, fin)\n        lis.append('Alice ' + str(alis - fail))\n    else:\n        lis.append('Alice ' + str(summa))\nfor i in range(n):\n    print(lis[i])", "t = int(input())\nin_list = []\nfor i in range(t):\n    inp_str = input()\n    in_list.append(inp_str)\nfor s in in_list:\n    li = []\n    for x in s:\n        li.append(ord(x) - 96)\n    n = len(s)\n    alice = 0\n    bob = 0\n    if n % 2 == 0:\n        alice = sum(li)\n    elif sum(li[1:]) > sum(li[:n - 1]):\n        alice = sum(li[1:])\n        bob = li[0]\n    else:\n        alice = sum(li[:n - 1])\n        bob = li[n - 1]\n    if alice > bob:\n        print('Alice ', alice - bob)\n    else:\n        print('Bob ', bob - alice)", "t = int(input())\nl = []\nfor i in range(t):\n    l.append(input())\nfor i in l:\n    k = len(i)\n    if k == 1:\n        print(f'Bob {ord(i) - 96}')\n    else:\n        m = k % 2\n        h = 1\n        if i[0] < i[-1]:\n            h = 0\n        diff = sum([ord(j) - 96 for j in i[(1 - h) * m:k - h * m]]) - (ord(i[-h]) - 96) * m\n        print(f'Alice {diff}')", "import sys\ninput = lambda : sys.stdin.readline().strip()\nfor i in range(int(input())):\n    s = input()\n    l = len(s)\n    if l <= 1:\n        print('Bob', int(ord(s)) - 96)\n    elif l % 2 == 0:\n        lis = list(s)\n        ans = 0\n        for i in s:\n            ans += int(ord(i)) - 96\n        print('Alice', ans)\n    elif int(ord(s[0])) - 96 > int(ord(s[-1])) - 96:\n        lis = list(s[:-1])\n        ans = 0\n        for i in lis:\n            ans += int(ord(i)) - 96\n        x = int(ord(s[-1])) - 96\n        if ans > x:\n            print('Alice', ans - x)\n        else:\n            print('Bob', x - ans)\n    else:\n        lis = list(s[1:])\n        ans = 0\n        for i in lis:\n            ans += int(ord(i)) - 96\n        x = int(ord(s[0])) - 96\n        if ans > x:\n            print('Alice', ans - x)\n        else:\n            print('Bob', x - ans)", "import sys\ninput = sys.stdin.readline\n\ndef S():\n    return input().rstrip()\nfor i in range(int(input())):\n    s = S()\n    score = 0\n    for j in range(len(s)):\n        score += ord(s[j]) - ord('a') + 1\n    if len(s) % 2 == 0:\n        print('Alice', score)\n    else:\n        score1 = score - (ord(s[0]) - ord('a') + 1)\n        score2 = score - (ord(s[-1]) - ord('a') + 1)\n        score_a = max(score1, score2)\n        score_b = score - score_a\n        if score_a > score_b:\n            print('Alice', score_a - score_b)\n        else:\n            print('Bob', score_b - score_a)", "letters = 'abcdefghijklmnopqrstuvwxyz'\nn = int(input())\nwords = []\nfor i in range(n):\n    words.append(input())\nfor i in words:\n    aliceVal = 0\n    bobVal = 0\n    if len(i) % 2 == 0:\n        for j in i:\n            aliceVal += letters.index(j) + 1\n        print('Alice', str(aliceVal - bobVal))\n    elif letters.index(i[0]) > letters.index(i[-1]):\n        for j in range(len(i) - 1):\n            aliceVal += letters.index(i[j]) + 1\n        bobVal += letters.index(i[-1]) + 1\n        if bobVal > aliceVal:\n            print('Bob', str(bobVal - aliceVal))\n        else:\n            print('Alice', str(aliceVal - bobVal))\n    else:\n        for j in range(1, len(i)):\n            aliceVal += letters.index(i[j]) + 1\n        bobVal += letters.index(i[0]) + 1\n        if bobVal > aliceVal:\n            print('Bob', str(bobVal - aliceVal))\n        else:\n            print('Alice', str(aliceVal - bobVal))", "t = int(input())\nl = []\nfor i in range(t):\n    a = input()\n    l.append(a)\nfor i in l:\n    if len(i) % 2 != 0:\n        if len(i) == 1:\n            print('Bob ', ord(i) - 96)\n        elif ord(i[0]) >= ord(i[-1]):\n            s = 0\n            for j in range(len(i) - 1):\n                s = s + (ord(i[j]) - 96)\n            else:\n                if s > ord(i[len(i) - 1]) - 96:\n                    print('Alice ', s - (ord(i[len(i) - 1]) - 96))\n                else:\n                    print('Bob ', ord(i[len(i) - 1]) - 96 - s)\n        else:\n            s = 0\n            for k in range(1, len(i)):\n                s = s + ord(i[k]) - 96\n            else:\n                if s > ord(i[0]) - 96:\n                    print('Alice ', s - (ord(i[0]) - 96))\n                else:\n                    print('Bob ', ord(i[0]) - 96)\n    else:\n        s = 0\n        for n in range(len(i)):\n            s = s + (ord(i[n]) - 96)\n        print('Alice ', s)", "import sys\nimport math\nfrom math import gcd, sqrt, log2, ceil, floor\nimport heapq as hq\nfrom bisect import bisect_right, bisect_left, bisect\nimport itertools\nfrom sys import stdin, stdout, setrecursionlimit\nMOD = int(1000000000.0) + 7\nalp = 'abcdefghijklmnopqrstuvwxyz'\nT = 1\nT = int(stdin.readline())\nfor _ in range(T):\n    s = list(stdin.readline().strip('\\n'))\n    n = len(s)\n    for i in range(n):\n        s[i] = ord(s[i]) - ord('a') + 1\n    if n % 2 == 0:\n        print('Alice', sum(s))\n    elif n == 1:\n        print('Bob', s[0])\n    else:\n        print('Alice', sum(s) - 2 * min(s[0], s[-1]))", "n = int(input())\nl = []\nd = []\nfor i in range(n):\n    s = input()\n    if len(s) == 1:\n        l.append('Bob')\n        d.append(ord(s) - 96)\n        continue\n    l.append('Alice')\n    if len(s) % 2 == 0:\n        diff = 0\n        for i in range(len(s)):\n            diff += ord(s[i]) - 96\n    else:\n        if ord(s[0]) > ord(s[len(s) - 1]):\n            bc = ord(s[len(s) - 1]) - 96\n            ac = 0\n            for i in range(len(s) - 1):\n                ac += ord(s[i]) - 96\n        else:\n            bc = ord(s[0]) - 96\n            ac = 0\n            for i in range(1, len(s)):\n                ac += ord(s[i]) - 96\n        diff = ac - bc\n    d.append(diff)\nfor i in range(len(l)):\n    print(l[i], d[i])", "def chr_score(chr):\n    return ord(chr) - ord('a') + 1\n\ndef str_score(str):\n    chr_score_list = [chr_score(chr) for chr in str]\n    return sum(chr_score_list)\n\ndef alice_bob_scores(str):\n    if len(str) % 2 == 0:\n        return [str_score(str), 0]\n    elif chr_score(str[-1]) <= chr_score(str[0]):\n        return [str_score(str[:-1]), chr_score(str[-1])]\n    else:\n        return [str_score(str[1:]), chr_score(str[0])]\n\ndef winner_and_score_difference(str):\n    scores = alice_bob_scores(str)\n    if scores[0] > scores[1]:\n        return ['Alice', scores[0] - scores[1]]\n    else:\n        return ['Bob', scores[1] - scores[0]]\n\ndef print_winner_score(str):\n    (winner, score_diff) = winner_and_score_difference(str)\n    print(winner, score_diff)\ninput_str_list = [input() for _ in range(int(input()))]\nfor str in input_str_list:\n    print_winner_score(str)", "let = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\nname = []\ndif = []\nt = int(input())\nfor i in range(t):\n    word = input()\n    word1 = []\n    for w in word:\n        word1.append(w)\n    result = 0\n    if len(word) == 1:\n        name.append('Bob')\n        dif.append(let.index(word) + 1)\n    elif len(word) % 2 == 0:\n        name.append('Alice')\n        for num in word1:\n            result = result + let.index(num) + 1\n        dif.append(result)\n        result = 0\n    else:\n        name.append('Alice')\n        for num in word1:\n            result = result + let.index(num) + 1\n        num1 = result - let.index(word1[0]) - let.index(word1[0]) - 2\n        num2 = result - let.index(word1[-1]) - let.index(word1[-1]) - 2\n        if num1 > num2:\n            dif.append(num1)\n        elif num2 > num1:\n            dif.append(num2)\n        else:\n            dif.append(num1)\n        result = 0\nfor i in range(t):\n    print(name[i] + ' ' + str(dif[i]))", "a = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8, 'i': 9, 'j': 10, 'k': 11, 'l': 12, 'm': 13, 'n': 14, 'o': 15, 'p': 16, 'q': 17, 'r': 18, 's': 19, 't': 20, 'u': 21, 'v': 22, 'w': 23, 'x': 24, 'y': 25, 'z': 26}\n\ndef fun():\n    s = input()\n    b = len(s)\n    ali = 0\n    bob = 0\n    while b > 0:\n        if b % 2 == 0:\n            for i in s:\n                ali += a[i]\n            return f'Alice {ali}'\n        else:\n            if b == 1:\n                return f'Bob {a[s]}'\n            if a[s[0]] >= a[s[-1]]:\n                bob += a[s[-1]]\n            else:\n                bob += a[s[0]]\n            for i in s:\n                ali += a[i]\n            ali -= bob\n            if ali < bob:\n                return f'Bob {bob - ali}'\n            else:\n                return f'Alice {ali - bob}'\n        b = len(s)\nfor i in range(int(input())):\n    print(fun())", "def score(s):\n    w = 0\n    for c in s:\n        w += ord(c) - 96\n    return w\n\ndef solve(s):\n    if len(s) & 1 == 0:\n        print(f'Alice {score(s)}')\n    elif len(s) == 1:\n        print(f'Bob {score(s)}')\n    else:\n        if score(s[:-1]) <= score(s[1:]):\n            alice_score = score(s[1:])\n            bob_score = score(s[0])\n        else:\n            alice_score = score(s[:-1])\n            bob_score = score(s[-1])\n        if alice_score > bob_score:\n            print(f'Alice {alice_score - bob_score}')\n        else:\n            print(f'Bob {bob_score - alice_score}')\n\ndef main():\n    for _ in range(int(input())):\n        solve(input())\nmain()", "t = int(input())\nfor _ in range(t):\n    s = input()\n    (a, b) = (0, 0)\n    if len(s) == 1:\n        print('Bob ' + str(ord(s) - 96))\n        continue\n    if len(s) % 2 == 0:\n        for i in s:\n            a += ord(i) - 96\n        b = 0\n    else:\n        for i in s[1:len(s) - 1]:\n            a += ord(i) - 96\n        if s[0] > s[-1]:\n            a += ord(s[0]) - 96\n            b += ord(s[-1]) - 96\n        else:\n            a += ord(s[-1]) - 96\n            b += ord(s[0]) - 96\n    if a > b:\n        print('Alice ' + str(a - b))\n    else:\n        print('Bob ' + str(b - a))", "from collections import Counter\n\ndef score(string):\n    coll = Counter(string)\n    score_ = 0\n    for i in coll:\n        score_ += coll[i] * (ord(i) - 96)\n    return score_\n\ndef value(string):\n    if len(string) > 1:\n        if len(string) % 2 == 0:\n            print('Alice', score(string))\n        elif score(string[0]) > score(string[-1]):\n            print('Alice', score(string[:-1]) - score(string[-1]))\n        else:\n            print('Alice', score(string[1:]) - score(string[0]))\n    else:\n        print('Bob', score(string))\n\ndef main():\n    n = int(input())\n    data = []\n    for i in range(n):\n        string = input()\n        data.append(string)\n    for string in data:\n        value(string)\nmain()", "def q(w):\n    z = 0\n    for i in w:\n        z += ord(i) - 96\n    if len(w) % 2 == 0:\n        return 'Alice ' + str(z)\n    else:\n        a = 0\n        b = 0\n        if z - ord(w[-1]) + 96 > z - ord(w[0]) + 96:\n            a += z - ord(w[-1]) + 96\n            b += ord(w[-1]) - 96\n            if a > b:\n                return 'Alice ' + str(abs(a - b))\n            else:\n                return 'Bob ' + str(abs(a - b))\n        else:\n            a += z - ord(w[0]) + 96\n            b += ord(w[0]) - 96\n            if a > b:\n                return 'Alice ' + str(abs(b - a))\n            else:\n                return 'Bob ' + str(abs(a - b))\ns = int(input())\nfor i in range(s):\n    f = input()\n    print(q(f))", "for _ in range(int(input())):\n    val = input()\n    val = [ord(i) - 96 for i in val]\n    if len(val) == 1:\n        print('Bob ' + str(val[0]))\n    elif len(val) % 2 == 1:\n        print('Alice ' + str(sum(val) - 2 * min(val[0], val[-1])))\n    else:\n        print('Alice ' + str(sum(val)))", "t = int(input())\nfor _ in range(t):\n    s = input()\n    total = 0\n    size = len(s)\n    for c in s:\n        total += ord(c) - 96\n    if size == 1:\n        print(f'Bob {total}')\n    else:\n        if size % 2 != 0:\n            total -= min(ord(s[0]) - 96, ord(s[size - 1]) - 96) * 2\n        print(f'Alice {total}')", "def main():\n    n = int(input())\n    start_pos = ord('a')\n    end_pos = ord('z')\n\n    def max_deletion(in_data, isChet=True):\n        if len(in_data) == 0:\n            return ''\n        if isChet:\n            if len(in_data) % 2 == 0:\n                return in_data\n            elif ord(in_data[0]) > ord(in_data[-1]):\n                return in_data[0:-1]\n            else:\n                return in_data[1:]\n        elif len(in_data) % 2 == 1:\n            return in_data\n        elif ord(in_data[0]) > ord(in_data[-1]):\n            return in_data[0:-1]\n        else:\n            return in_data[1:]\n\n    def count(in_data):\n        result = 0\n        for i in in_data:\n            result = result + ord(i) - start_pos + 1\n        return result\n    for _ in range(n):\n        data = input()\n        new_data = data\n        Alice = max_deletion(data)\n        new_data = new_data.replace(Alice, '')\n        Bob = max_deletion(new_data, False)\n        Alice_count = count(Alice)\n        Bob_count = count(Bob)\n        if Alice_count > Bob_count:\n            print(f'Alice {Alice_count - Bob_count}')\n        else:\n            print(f'Bob {Bob_count - Alice_count}')\nmain()", "for _ in range(int(input())):\n    string = input()\n    if len(string) % 2 == 0:\n        score = sum((ord(c) - 96 for c in string))\n        print(f'Alice {score}')\n    else:\n        score = sum((ord(c) - 96 for c in string))\n        alice = max(score - ord(string[0]) + 96, score - ord(string[-1]) + 96)\n        bob = score - alice\n        if alice > bob:\n            print(f'Alice {alice - bob}')\n        elif alice < bob:\n            print(f'Bob {bob - alice}')", "def getSum(s: str):\n    sums = 0\n    for i in s:\n        sums += ord(i) - 96\n    return sums\nfor t in range(int(input())):\n    s = input()\n    n = len(s)\n    if n % 2 == 0:\n        print('Alice %d' % getSum(s))\n    elif n == 1:\n        print('Bob %d' % getSum(s))\n    else:\n        print('Alice %d' % max(getSum(s[1:n]) - (ord(s[0]) - 96), getSum(s[0:n - 1]) - (ord(s[n - 1]) - 96)))", "t = int(input())\nwhile t > 0:\n    s = input()\n    n = len(s)\n    sum = 0\n    for i in s:\n        sum += ord(i) - 96\n    if n == 1:\n        print(f'Bob {sum}')\n    else:\n        if n % 2 == 1:\n            if ord(s[0]) > ord(s[-1]):\n                sum = sum - 2 * (ord(s[-1]) - 96)\n            else:\n                sum = sum - 2 * (ord(s[0]) - 96)\n        print(f'Alice {sum}')\n    t -= 1", "t = int(input())\nfor i in range(t):\n    a = []\n    b = []\n    s = input()\n    for j in s:\n        a.append(ord(j) - 96)\n    if len(a) % 2 == 0:\n        print(f'Alice {sum(a)}')\n    elif len(a) == 1:\n        print(f'Bob {sum(a)}')\n    elif a[0] >= a[-1]:\n        print(f'Alice {sum(a[:-1]) - a[-1]}')\n    else:\n        print(f'Alice {sum(a[1:]) - a[0]}')", "def w(c):\n    return ord(c) - 96\nfor _ in range(int(input())):\n    s = input()\n    if len(s) % 2:\n        b = w(min(s[0], s[-1]))\n        a = sum(map(w, s)) - b\n        r = str(abs(a - b))\n        print('Alice ' + r if a > b else 'Bob ' + r)\n    else:\n        print('Alice', sum(map(w, s)))", "dict1 = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8, 'i': 9, 'j': 10, 'k': 11, 'l': 12, 'm': 13, 'n': 14, 'o': 15, 'p': 16, 'q': 17, 'r': 18, 's': 19, 't': 20, 'u': 21, 'v': 22, 'w': 23, 'x': 24, 'y': 25, 'z': 26}\ntc = int(input())\nfor _ in range(tc):\n    s = input()\n    cnt = 0\n    for i in s:\n        cnt += dict1[i]\n    if len(s) % 2 == 0:\n        print('Alice ' + str(cnt))\n    else:\n        cnt -= min(dict1[s[0]], dict1[s[-1]])\n        a = min(dict1[s[0]], dict1[s[-1]])\n        if max(a, cnt) == a:\n            print('Bob ' + str(a))\n        else:\n            print('Alice ' + str(cnt - a))", "n = int(input())\nfor i in range(n):\n    sum = 0\n    s = input()\n    f = ord(s[0]) - 96\n    l = ord(s[-1]) - 96\n    for j in s:\n        sum += ord(j) - 96\n    if len(s) % 2 == 0:\n        print('Alice  ' + str(sum))\n    else:\n        a = sum - min(f, l)\n        b = min(f, l)\n        if a > b:\n            print('Alice  ' + str(a - b))\n        else:\n            print('Bob  ' + str(b - a))", "def getScore(s):\n    counter = 0\n    for c in s:\n        counter += ord(c) - 96\n    return counter\nt = int(input())\nwhile t > 0:\n    t -= 1\n    s = input()\n    if len(s) == 1:\n        print(f'Bob {ord(s) - 96}')\n    elif len(s) % 2 == 0:\n        print(f'Alice {getScore(s)}')\n    elif s[0] > s[-1]:\n        print(f'Alice {getScore(s[:-1]) - getScore(s[-1])}')\n    else:\n        print(f'Alice {getScore(s[1:]) - getScore(s[0])}')", "N = int(input())\nfor _ in range(N):\n    cur_str = input()\n    sum = 0\n    if len(cur_str) % 2 == 0:\n        for ch in cur_str:\n            sum += ord(ch) - 96\n        sum = str(sum)\n        print(f'Alice {sum}')\n    elif len(cur_str) == 1:\n        sum = ord(cur_str[0]) - 96\n        sum = str(sum)\n        print(f'Bob {sum}')\n    else:\n        for ch in cur_str:\n            sum += ord(ch) - 96\n        sum = sum - 2 * min(ord(cur_str[0]) - 96, ord(cur_str[-1]) - 96)\n        print(f'Alice {sum}')", "d = dict()\nfor i in range(ord('a'), ord('z') + 1):\n    d[chr(i)] = i - ord('a') + 1\nfor _ in range(int(input())):\n    summ = 0\n    st = input()\n    if len(st) == 1:\n        print('Bob', d[st[0]])\n    else:\n        for x in st:\n            summ += d[x]\n        if len(st) % 2 == 1:\n            summ -= 2 * min(d[st[0]], d[st[-1]])\n        print('Alice', summ)", "dict1 = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8, 'i': 9, 'j': 10, 'k': 11, 'l': 12, 'm': 13, 'n': 14, 'o': 15, 'p': 16, 'q': 17, 'r': 18, 's': 19, 't': 20, 'u': 21, 'v': 22, 'w': 23, 'x': 24, 'y': 25, 'z': 26}\nfor _ in range(int(input())):\n    s = input()\n    cnt = 0\n    for i in s:\n        cnt += dict1[i]\n    if len(s) % 2 == 0:\n        print('Alice ' + str(cnt))\n    else:\n        cnt -= min(dict1[s[0]], dict1[s[-1]])\n        a = min(dict1[s[0]], dict1[s[-1]])\n        if max(a, cnt) == a:\n            print('Bob ' + str(a))\n        else:\n            print('Alice ' + str(cnt - a))", "def find_winner(word):\n    if len(word) < 2:\n        return f'Bob {ord(word) - 96}'\n    if len(word) % 2 == 0:\n        return f'Alice {sum([ord(char) - 96 for char in word])}'\n    return f'Alice {sum([ord(char) - 96 for char in word]) - min((ord(word[0]) - 96) * 2, (ord(word[-1]) - 96) * 2)}'\nt = int(input())\nfor _ in range(t):\n    word = input()\n    print(find_winner(word))", "def ri():\n    return int(input())\nt = ri()\n\ndef cal(s):\n    return sum([ord(x) - ord('a') + 1 for x in s])\nfor _ in range(t):\n    s = input()\n    n = len(s)\n    if n % 2 == 0:\n        print('Alice %d' % cal(s))\n    else:\n        (alice, bob) = (0, 0)\n        if ord(s[0]) < ord(s[-1]):\n            alice = cal(s[1:])\n            bob = ord(s[0]) - ord('a') + 1\n        else:\n            alice = cal(s[0:-1])\n            bob = ord(s[-1]) - ord('a') + 1\n        if alice > bob:\n            print('Alice %d' % (alice - bob))\n        else:\n            print('Bob %d' % (bob - alice))", "def solve():\n    b = input()\n    f = [ord(u) - 96 for u in b]\n    if len(b) == 1:\n        print('Bob', f[0])\n    elif len(b) % 2 == 0:\n        print('Alice', sum(f))\n    else:\n        print('Alice', sum(f) - 2 * min(f[0], f[-1]))\nfor i in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    s = input()\n    ls = []\n    for c in s:\n        ls.append(ord(c) - 96)\n    if len(ls) % 2 == 0:\n        print('Alice', sum(ls))\n    elif len(ls) == 1:\n        print('Bob', sum(ls))\n    elif ls[0] > ls[-1]:\n        print('Alice', sum(ls[:-1]) - ls[-1])\n    else:\n        print('Alice', sum(ls[1:]) - ls[0])", "def poo():\n    t = int(input())\n    for _ in range(t):\n        s = input()\n        if len(s) % 2 == 0:\n            foo = 0\n            for c in s:\n                foo += ord(c) - 96\n            print('Alice', foo)\n        elif len(s) == 1:\n            print('Bob', ord(s) - 96)\n        else:\n            first = ''.join(sorted(s[1:]))\n            foo = 0\n            for char in first:\n                foo += ord(char) - 96\n            sec = ''.join(sorted(s[:-1]))\n            foo2 = 0\n            for char in sec:\n                foo2 += ord(char) - 96\n            c = ord(s[0]) - 96\n            d = ord(s[-1]) - 96\n            ma = max(foo - c, foo2 - d)\n            print('Alice', ma)\npoo()", "def solution(content):\n    n = len(content)\n    total = sum((ord(i) - ord('a') + 1 for i in content))\n    if n == 1:\n        print('Bob', total)\n        return\n    if n % 2 == 0:\n        print('Alice', total)\n        return\n    bob_score = min(ord(content[0]) - ord('a') + 1, ord(content[-1]) - ord('a') + 1)\n    alice_score = total - bob_score\n    if alice_score > bob_score:\n        print('Alice', alice_score - bob_score)\n        return\n    else:\n        print('Bob', bob_score - alice_score)\n        return\nt = int(input())\nfor i in range(t):\n    content = input()\n    solution(content)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    l = len(s)\n    if l == 1:\n        print('Bob ' + str(ord(s) - 96))\n    elif l % 2 == 0:\n        res = 0\n        for i in s:\n            res += ord(i) - 96\n        print('Alice ' + str(res))\n    else:\n        res = 0\n        if s[0] > s[-1]:\n            for i in range(l - 1):\n                res += ord(s[i]) - 96\n            res -= ord(s[-1]) - 96\n        else:\n            for i in range(1, l):\n                res += ord(s[i]) - 96\n            res -= ord(s[0]) - 96\n        print('Alice ' + str(res))", "def calcScore(s):\n    score = 0\n    for char in s:\n        score += ord(char) - 96\n    return score\nt = int(input())\nfor _ in range(t):\n    s = input().strip()\n    if len(s) % 2 == 1 and len(s) > 1:\n        a_left = calcScore(s[:-1])\n        a_right = calcScore(s[1:])\n        if a_left > a_right:\n            b = calcScore(s[-1:])\n            print('Alice', a_left - b)\n        else:\n            b = calcScore(s[0])\n            print('Alice', a_right - b)\n    elif len(s) % 2 == 0:\n        a = calcScore(s)\n        print('Alice', a)\n    else:\n        b = calcScore(s)\n        winner = 'Bob'\n        print('Bob', b)", "t = int(input())\nfor i in range(t):\n    a = input()\n    s = len(a)\n    score = 0\n    for j in a:\n        score += ord(j) - 96\n    if s % 2 == 0:\n        print('Alice', score)\n    elif s == 1:\n        print('Bob', ord(a) - 96)\n    else:\n        start = ord(a[0]) - 96\n        end = ord(a[-1]) - 96\n        if score - start > score - end:\n            scorea = score - start\n        else:\n            scorea = score - end\n        scoreb = score - scorea\n        if scorea > scoreb:\n            print('Alice', scorea - scoreb)\n        else:\n            print('Bob', scoreb - scorea)", "def stringcounter(string):\n    sum = 0\n    for i in string:\n        sum += ord(i) - 96\n    return sum\n\ndef stringsubtractor(string):\n    total = stringcounter(string)\n    if string[0] < string[-1]:\n        min = ord(string[0]) - 96\n    else:\n        min = ord(string[-1]) - 96\n    return total - 2 * min\nfor i in range(int(input())):\n    string = input()\n    if len(string) % 2 == 0:\n        score = stringcounter(string)\n        print('Alice', score)\n    else:\n        score = stringsubtractor(string)\n        if score < 0:\n            print('Bob', abs(score))\n        else:\n            print('Alice', abs(score))", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    if n % 2 == 0:\n        ans = 0\n        for i in s:\n            ans += ord(i) - 96\n        print('Alice', ans)\n    elif ord(s[0]) - 96 >= ord(s[-1]) - 96:\n        ans = 0\n        for i in range(n - 1):\n            ans += ord(s[i]) - 96\n        if ans > ord(s[-1]) - 96:\n            print('Alice', ans - (ord(s[-1]) - 96))\n        else:\n            print('Bob', ord(s[-1]) - 96 - ans)\n    else:\n        ans = 0\n        for i in range(1, n):\n            ans += ord(s[i]) - 96\n        if ans > ord(s[0]) - 96:\n            print('Alice', ans - (ord(s[0]) - 96))\n        else:\n            print('Bob', ord(s[0]) - 96 - ans)", "t = int(input())\nfor _ in range(t):\n    s = str(input())\n    if len(s) == 1:\n        print(f'Bob {ord(s) - 96}')\n    elif len(s) % 2 == 0:\n        score = 0\n        for i in s:\n            score += ord(i) - 96\n        print(f'Alice {score}')\n    else:\n        z = []\n        for i in s:\n            z.append(ord(i) - 96)\n        if sum(z) - (ord(s[0]) - 96) >= sum(z) - (ord(s[len(s) - 1]) - 96):\n            print(f'Alice {sum(z) - (ord(s[0]) - 96) * 2}')\n        else:\n            print(f'Alice {sum(z) - (ord(s[len(s) - 1]) - 96) * 2}')", "t = int(input())\nfor _ in range(t):\n    s = input()\n    if len(s) % 2:\n        if s[0] < s[-1]:\n            a = 0\n            for c in s[1:]:\n                a += ord(c) - ord('a') + 1\n            b = ord(s[0]) - ord('a') + 1\n        else:\n            a = 0\n            for c in s[:-1]:\n                a += ord(c) - ord('a') + 1\n            b = ord(s[-1]) - ord('a') + 1\n    else:\n        a = 0\n        for c in s:\n            a += ord(c) - ord('a') + 1\n        b = 0\n    if a > b:\n        print('Alice ' + str(a - b))\n    else:\n        print('Bob ' + str(b - a))", "for _ in range(int(input())):\n    s = input()\n    if len(s) % 2 == 0:\n        print('Alice', sum((ord(i) - 96 for i in s)))\n    elif len(s) > 1:\n        print('Alice', sum((ord(i) - 96 for i in s)) - 2 * (min(ord(s[0]), ord(s[-1])) - 96))\n    else:\n        print('Bob', ord(s[0]) - 96)", "n = int(input())\nfor _ in range(n):\n    s = input()\n    if len(s) == 1:\n        print(f\"Bob {ord(s[0]) - ord('a') + 1}\")\n    elif len(s) % 2 == 0:\n        print(f\"Alice {sum([ord(i) - ord('a') + 1 for i in s])}\")\n    else:\n        b = min(ord(s[0]), ord(s[-1])) - ord('a') + 1\n        a = sum([ord(i) - ord('a') + 1 for i in s])\n        print(f'Alice {a - b - b}')", "for t in range(int(input())):\n    s = input()\n    n = len(s)\n    c = 0\n    for i in s:\n        c += ord(i) - 96\n    if n % 2 == 0:\n        print('Alice ' + str(c))\n        continue\n    m = min(ord(s[0]), ord(s[-1])) - 96\n    c -= m\n    if c > m:\n        print('Alice ' + str(c - m))\n    else:\n        print('Bob ' + str(m - c))", "for _ in range(int(input())):\n    s = input()\n    score = 0\n    for i in range(len(s)):\n        score += ord(s[i]) - 96\n    if len(s) == 1:\n        print(f'Bob {ord(s[0]) - 96}')\n    elif len(s) % 2 == 0:\n        print(f'Alice {score}')\n    else:\n        bob = min(ord(s[0]), ord(s[len(s) - 1])) - 96\n        print(f'Alice {score - bob - bob}')", "for it in range(int(input())):\n    s = input()\n    a = [ord(i) - ord('a') + 1 for i in s]\n    if len(a) == 1:\n        print('Bob', a[0])\n    elif len(a) % 2:\n        print('Alice', sum(a) - 2 * min(a[0], a[-1]))\n    else:\n        print('Alice', sum(a))", "for t in range(int(input())):\n    s = input()\n    v = [ord(i) - 96 for i in s]\n    if len(v) == 1:\n        print('Bob ' + str(v[0]))\n    elif len(v) % 2 == 0:\n        print('Alice ' + str(sum(v)))\n    else:\n        print('Alice ' + str(sum(v) - 2 * min(v[0], v[-1])))", "trials = int(input())\nfor trial in range(trials):\n    s = input()\n    t = 0\n    x = 0\n    if len(s) > 1:\n        if len(s) % 2 == 0:\n            for i in range(len(s)):\n                t += ord(s[i]) - ord('a') + 1\n            x = 0\n        elif s[0] > s[-1]:\n            for i in range(0, len(s) - 1):\n                t += ord(s[i]) - ord('a') + 1\n            x = ord(s[-1]) - ord('a') + 1\n        else:\n            for i in range(1, len(s)):\n                t += ord(s[i]) - ord('a') + 1\n            x = ord(s[0]) - ord('a') + 1\n        print(f'Alice {t - x}')\n    else:\n        print(f\"Bob {ord(s[0]) - ord('a') + 1}\")", "t = int(input())\nfor i in range(t):\n    s = input()\n    l = [ord(i) - 96 for i in s]\n    if len(s) % 2 == 0:\n        print('Alice', sum(l))\n    elif len(s) == 1:\n        print('Bob', l[0])\n    else:\n        n = len(s)\n        su = sum(l)\n        s1 = su - 2 * l[n - 1]\n        s2 = su - 2 * l[0]\n        if s1 > s2:\n            print('Alice', s1)\n        else:\n            print('Alice', s2)", "for _ in range(int(input())):\n    line = input()\n    n = len(line)\n    if n == 1:\n        print(f\"Bob {ord(line[-1]) - ord('a') + 1}\")\n    else:\n        total = sum((ord(ch) - ord('a') + 1 for ch in line))\n        if n & 1 == 0:\n            print(f'Alice {total}')\n        else:\n            ans = total - 2 * min(ord(line[0]) - ord('a') + 1, ord(line[-1]) - ord('a') + 1)\n            print(f'Alice {ans}') if ans > 0 else print(f'Bob {-ans}')", "import string\nletter = string.ascii_lowercase\nfor _ in range(int(input())):\n    s = input()\n    if len(s) % 2 == 0:\n        c = 0\n        for i in s:\n            c += letter.index(i) + 1\n        print(f'Alice {c}')\n    elif len(s) == 1:\n        print('Bob', letter.index(s) + 1)\n    else:\n        a = letter.index(s[0]) + 1\n        b = letter.index(s[-1]) + 1\n        if a >= b:\n            c = 0\n            for i in s[0:-1]:\n                c += letter.index(i) + 1\n            print(f'Alice {abs(c - b)}')\n        else:\n            c = 0\n            for i in s[1:]:\n                c += letter.index(i) + 1\n            print(f'Alice {abs(c - a)}')", "import math\n\ndef get_num(s):\n    return ord(s) - 96\nfor _ in range(int(input())):\n    n = input()\n    if len(n) == 1:\n        print('Bob', get_num(n))\n        continue\n    sumer = 0\n    for i in n:\n        sumer += get_num(i)\n    if len(n) % 2 == 0:\n        print('Alice', sumer)\n    else:\n        print('Alice', sumer - 2 * min(get_num(n[0]), get_num(n[-1])))", "x = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8, 'i': 9, 'j': 10, 'k': 11, 'l': 12, 'm': 13, 'n': 14, 'o': 15, 'p': 16, 'q': 17, 'r': 18, 's': 19, 't': 20, 'u': 21, 'v': 22, 'w': 23, 'x': 24, 'y': 25, 'z': 26}\nfor i in range(int(input())):\n    s = input()\n    s = list(s)\n    r = 0\n    for i in s:\n        r = r + x[i]\n    if len(s) == 1:\n        print('Bob ' + str(r))\n    elif len(s) % 2 == 0:\n        print('Alice ' + str(r))\n    else:\n        if x[s[0]] > x[s[-1]]:\n            r = r - x[s[-1]]\n            f = x[s[-1]]\n        else:\n            r = r - x[s[0]]\n            f = x[s[0]]\n        if r > f:\n            print('Alice ' + str(r - f))\n        else:\n            print('Bob ' + str(f - r))", "for _ in range(int(input())):\n    s = input()\n    if len(s) % 2 == 0:\n        ans = 0\n        for i in s:\n            ans += ord(i) - 96\n        print('Alice', ans)\n    else:\n        a = 0\n        b = 0\n        if s[0] > s[-1]:\n            for i in range(len(s) - 1):\n                a += ord(s[i]) - 96\n            b += ord(s[-1]) - 96\n        else:\n            for i in range(1, len(s)):\n                a += ord(s[i]) - 96\n            b += ord(s[0]) - 96\n        if a > b:\n            print('Alice', a - b)\n        else:\n            print('Bob', b - a)", "def d(a):\n    s = 0\n    for i in a:\n        s += ord(i) - 96\n    return s\n\ndef f(a):\n    n = len(a)\n    if n == 1:\n        return ('Bob', ord(a[0]) - 96)\n    if n % 2 == 0:\n        return ('Alice', d(a))\n    if ord(a[0]) < ord(a[-1]):\n        return ('Alice', d(a) - 2 * (ord(a[0]) - 96))\n    return ('Alice', d(a) - 2 * (ord(a[-1]) - 96))\nt = int(input())\nfor i in range(t):\n    s = input()\n    (st, c) = f(s)\n    print('{} {}'.format(st, c))", "def getAns(t: int):\n    s = input()\n    base = ord('a') - 1\n    if len(s) == 1:\n        print('Bob {}'.format(ord(s[0]) - base))\n    else:\n        sm = 0\n        for i in range(len(s)):\n            sm += ord(s[i]) - base\n        if len(s) % 2 == 1:\n            sm -= min(ord(s[0]) - base, ord(s[-1]) - base) * 2\n        print('Alice {}'.format(sm))\nt = int(input())\nfor i in range(t):\n    getAns(i)", "t = int(input())\n\ndef code(c):\n    return ord(c) - 96\n\ndef codes(s):\n    return sum([code(c) for c in s])\nfor i in range(t):\n    s = input()\n    if len(s) == 1:\n        print(f'Bob {code(s)}')\n    elif len(s) % 2 == 0:\n        print(f'Alice {sum([code(c) for c in s])}')\n    elif codes(s[0:-1]) > codes(s[1:]):\n        print(f'Alice {codes(s[0:-1]) - code(s[-1])}')\n    else:\n        print(f'Alice {codes(s[1:]) - code(s[0])}')", "d = dict()\nfor i in range(ord('a'), ord('z') + 1):\n    d[chr(i)] = i - ord('a') + 1\nfor i in range(int(input())):\n    summ = 0\n    st = input()\n    if len(st) == 1:\n        print('Bob', d[st[0]])\n    else:\n        for x in st:\n            summ += d[x]\n        if len(st) % 2 == 1:\n            summ -= 2 * min(d[st[0]], d[st[-1]])\n        print('Alice', summ)", "n = int(input())\nfor i in range(n):\n    sum = 0\n    s = input()\n    d = ord(s[0]) - 96\n    f = ord(s[-1]) - 96\n    for j in s:\n        sum += ord(j) - 96\n    if len(s) % 2 == 0:\n        print('Alice ' + str(sum))\n    else:\n        a = sum - min(d, f)\n        b = min(d, f)\n        if a > b:\n            print('Alice ' + str(a - b))\n        else:\n            print('Bob ' + str(b - a))", "for it in range(int(input())):\n    s = input()\n    a = [ord(i) - ord('a') + 1 for i in s]\n    if len(a) == 1:\n        print('Bob', a[0])\n    elif len(a) % 2:\n        print('Alice', sum(a) - 2 * min(a[0], a[-1]))\n    else:\n        print('Alice', sum(a))", "for it in range(int(input())):\n    s = input()\n    a = [ord(i) - ord('a') + 1 for i in s]\n    if len(a) == 1:\n        print('Bob', a[0])\n    elif len(a) % 2:\n        print('Alice', sum(a) - 2 * min(a[0], a[-1]))\n    else:\n        print('Alice', sum(a))", "for it in range(int(input())):\n    s = input()\n    a = [ord(i) - ord('a') + 1 for i in s]\n    if len(a) == 1:\n        print('Bob', a[0])\n    elif len(a) % 2:\n        print('Alice', sum(a) - 2 * min(a[0], a[-1]))\n    else:\n        print('Alice', sum(a))", "def solve():\n    s = input()\n    if len(s) == 1:\n        print('Bob', ord(s[0]) - ord('a') + 1)\n    else:\n        sum = 0\n        for x in s:\n            sum += ord(x) - ord('a') + 1\n        if len(s) % 2:\n            sum = sum - 2 * ((ord(s[-1]) if s[-1] < s[0] else ord(s[0])) - ord('a') + 1)\n        print('Alice', sum)\nfor t in range(int(input())):\n    solve()", "t = int(input())\nfor i in range(t):\n    s = input()\n    le = len(s)\n    tsum = 0\n    for i in s:\n        tsum += ord(i) - 96\n    if le % 2 == 0:\n        print('Alice', tsum)\n    elif le == 1:\n        print('Bob', tsum)\n    else:\n        fir = ord(s[0]) - 96\n        la = ord(s[-1]) - 96\n        ans = min(2 * fir, 2 * la)\n        print('Alice', tsum - ans)", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    if n == 1:\n        print('Bob', ord(s[0]) - 96)\n    else:\n        total = 0\n        for i in s:\n            total += ord(i) - 96\n        if n % 2 == 0:\n            print('Alice', total)\n        else:\n            if ord(s[0]) > ord(s[-1]):\n                tmp = ord(s[-1]) - 96\n            else:\n                tmp = ord(s[0]) - 96\n            print('Alice', total - 2 * tmp)", "for _ in range(int(input())):\n    string = input()\n    li = []\n    for i in string:\n        li.append(ord(i) - 96)\n    if len(li) % 2 == 0:\n        print('Alice', sum(li))\n    elif len(li) > 1:\n        print('Alice', sum(li) - 2 * min(li[0], li[-1]))\n    else:\n        print('Bob', sum(li))", "import sys\n\ndef main():\n    T = int(input())\n    for tr in range(1, T + 1):\n        ans = solve()\n        print(ans)\n\ndef solve():\n    st = input()\n    p = calc_power(st)\n    if len(st) % 2 == 0:\n        return 'Alice ' + str(p)\n    else:\n        if len(st) == 1:\n            prefix = 'Bob '\n        else:\n            prefix = 'Alice '\n        return prefix + str(abs(p - 2 * (min(ord(st[0]), ord(st[-1])) - ord('a') + 1)))\n    return ' '.join((str(s) for s in res))\n\ndef calc_power(s):\n    return sum([ord(c) - ord('a') + 1 for c in s])\n\ndef eprint(*args, **kwargs):\n    print(*args, file=sys.stderr, **kwargs)\nmain()", "def main():\n    t = int(input())\n    for k in range(t):\n        s = input()\n        (alice, bob) = ('', '')\n        if len(s) == 1:\n            print(f'Bob {ord(s[0]) - 96}')\n        else:\n            if len(s) % 2 == 1:\n                if ord(s[0]) > ord(s[len(s) - 1]):\n                    alice = s[0:len(s) - 1]\n                    bob = s[len(s) - 1]\n                else:\n                    alice = s[1:len(s)]\n                    bob = s[0]\n            if len(s) % 2 == 0:\n                alice = s\n            (sc_alice, sc_bob) = (0, 0)\n            for i in range(len(alice)):\n                sc_alice += ord(alice[i]) - 96\n            for i in range(len(bob)):\n                sc_bob += ord(bob[i]) - 96\n            if sc_alice > sc_bob:\n                print(f'Alice {sc_alice - sc_bob}')\n            else:\n                print(f'Bob {sc_bob - sc_alice}')\nmain()", "def solve(s):\n    if len(s) == 1:\n        print('Bob', ord(s[0]) - 96)\n        return\n    if len(s) % 2 == 0:\n        result = 0\n        for i in range(len(s)):\n            result += ord(s[i]) - 96\n        print('Alice', result)\n        return\n    aScore = 0\n    bScore = 0\n    for i in range(1, len(s) - 1):\n        aScore += ord(s[i]) - 96\n    if s[0] < s[-1]:\n        aScore += ord(s[-1]) - 96\n        bScore = ord(s[0]) - 96\n    else:\n        aScore += ord(s[0]) - 96\n        bScore = ord(s[-1]) - 96\n    if bScore > aScore:\n        print('Bob', bScore - aScore)\n        return\n    else:\n        print('Alice', aScore - bScore)\n    return\nt = int(input())\nfor x in range(t):\n    s = input()\n    solve(s)", "from re import X\n\ndef real_value(c):\n    return ord(c) - ord('a') + 1\n\ndef main():\n    for i in range(int(input())):\n        bob = alice = 0\n        s = input()\n        if len(s) == 1:\n            print('Bob ' + str(real_value(s)))\n        elif not len(s) % 2:\n            for c in s:\n                alice += real_value(c)\n            print('Alice ' + str(alice))\n        else:\n            bob = real_value(s[-1]) if s[0] > s[-1] else real_value(s[0])\n            for c in s:\n                alice += real_value(c)\n            alice -= bob\n            if bob > alice:\n                print('Bob ' + str(bob - alice))\n            else:\n                print('Alice ' + str(alice - bob))\nmain()", "t = int(input())\nfor _ in range(0, t):\n    s = input()\n    len1 = len(s)\n    s1 = 0\n    s2 = 0\n    if len1 % 2 == 0:\n        for i in range(0, len1):\n            s1 += ord(s[i]) - 96\n    elif len1 == 1:\n        s2 = ord(s[0]) - 96\n    else:\n        pos1 = ord(s[0]) - 96\n        pos2 = ord(s[len1 - 1]) - 96\n        if pos1 >= pos2:\n            for i in range(0, len1 - 1):\n                s1 += ord(s[i]) - 96\n            s2 = ord(s[len1 - 1]) - 96\n        else:\n            for i in range(1, len1):\n                s1 += ord(s[i]) - 96\n            s2 = ord(s[0]) - 96\n    if s1 > s2:\n        print(f'Alice {s1 - s2}')\n    else:\n        print(f'Bob {s2 - s1}')", "for _ in range(int(input())):\n    s = input()\n    count = 0\n    if len(s) > 1:\n        for i in s:\n            count += ord(i) - 96\n        if len(s) % 2 == 0:\n            ans = count\n        elif ord(s[0]) >= ord(s[-1]):\n            ans = count - 2 * (ord(s[-1]) - 96)\n        else:\n            ans = count - 2 * (ord(s[0]) - 96)\n        print('Alice', ans)\n    else:\n        ans = ord(s) - 96\n        print('Bob', ans)", "T = int(input())\nwhile T:\n    s = input()\n    if len(s) == 1:\n        print('Bob ', ord(s) - ord('a') + 1)\n        T = T - 1\n        continue\n    value = 0\n    for ch in s:\n        value += ord(ch) - ord('a') + 1\n    if len(s) % 2 == 0:\n        print('Alice ', value)\n    else:\n        (f, s) = (s[0], s[-1])\n        if ord(f) >= ord(s):\n            print('Alice ', value - (1 + ord(s) - ord('a')) * 2)\n        else:\n            print('Alice ', value - (1 + ord(f) - ord('a')) * 2)\n    T = T - 1", "t = int(input())\nfor i in range(t):\n    s = input()\n    sum = 0\n    bob = 0\n    flag = False\n    if len(s) % 2 == 0:\n        for j in s:\n            sum = ord(j) - 96 + sum\n            flag = False\n    elif len(s) == 1:\n        bob = ord(s) - 96\n        flag = True\n    elif len(s) % 2 == 1:\n        if ord(s[0]) >= ord(s[len(s) - 1]):\n            x = s[len(s) - 1]\n            s = s[0:len(s) - 1]\n            for j in s:\n                sum = ord(j) - 96 + sum\n            if sum > ord(x) - 96:\n                flag = False\n                bob = ord(x) - 96\n            else:\n                flag = True\n                bob = ord(x) - 96\n        else:\n            x = s[0]\n            s = s[1:len(s)]\n            for j in s:\n                sum = ord(j) - 96 + sum\n            if sum > ord(x) - 96:\n                flag = False\n                bob = ord(x) - 96\n            else:\n                flag = True\n                bob = ord(x) - 96\n    sum = abs(sum - bob)\n    if flag == False:\n        ans = 'Alice'\n    else:\n        ans = 'Bob'\n    print(ans + ' ' + str(sum))", "def get(s):\n    a = 0\n    h = ord('a') - 1\n    for i in s:\n        a += ord(i) - h\n    return a\nfor _ in range(int(input())):\n    s = input()\n    a = 0\n    h = ord('a') - 1\n    if len(s) == 1:\n        print('Bob', ord(s[0]) - h)\n        continue\n    elif len(s) & 1:\n        print('Alice', max(get(s[:-1]) - ord(s[-1]) + h, get(s[1:]) - ord(s[0]) + h))\n    else:\n        print('Alice', get(s))", "N = int(input())\naz = [chr(i) for i in range(97, 123)]\nd = dict()\nfor i in range(len(az)):\n    d[az[i]] = i + 1\nfor i in range(N):\n    n = input()\n    (a, b) = (0, 0)\n    if len(n) % 2:\n        t = 0\n        for i in range(len(n) - 1):\n            t += d[n[i]]\n        for i in range(1, len(n)):\n            a += d[n[i]]\n        if a > t:\n            b += d[n[0]]\n        else:\n            b += d[n[len(n) - 1]]\n            a = t\n    else:\n        for i in range(len(n)):\n            a += d[n[i]]\n    if a > b:\n        print('Alice ' + str(a - b))\n    else:\n        print('Bob ' + str(b - a))", "import string\ndic = dict(zip(string.ascii_lowercase, range(1, 27)))\nt = int(input())\nfor i in range(t):\n    s = input()\n    n = len(s)\n    val_1 = 0\n    val_2 = 0\n    Alice = 0\n    Bob = 0\n    if len(s) == 1:\n        print(f'Bob {dic[s]}')\n    else:\n        if n % 2 == 0:\n            for l in s:\n                Alice += dic[l]\n        else:\n            s1 = s[0:n - 1]\n            s2 = s[1:n]\n            for l in s1:\n                val_1 += dic[l]\n            for l in s2:\n                val_2 += dic[l]\n            if val_1 > val_2:\n                Alice = val_1\n                Bob = dic[s[n - 1]]\n            else:\n                Alice = val_2\n                Bob = dic[s[0]]\n        if Alice > Bob:\n            print(f'Alice {Alice - Bob}')\n        else:\n            print(f'Bob {Bob - Alice}')", "try:\n    t = int(input())\nexcept EOFError as e:\n    exit()\nwhile t > 0:\n    alpha = input()\n    alpha_list = list(alpha)\n    n = len(alpha_list)\n    if n % 2 == 0:\n        difference = 0\n        for i in alpha_list:\n            difference += ord(i) - 96\n        print('Alice ' + str(difference))\n    else:\n        alice = 0\n        if n == 1:\n            print('Bob ' + str(ord(alpha_list[0]) - 96))\n        if ord(alpha_list[0]) > ord(alpha_list[-1]):\n            for i in range(len(alpha_list) - 1):\n                alice += ord(alpha_list[i]) - 96\n            alice -= ord(alpha_list[-1]) - 96\n            print('Alice ' + str(alice))\n        if ord(alpha_list[0]) < ord(alpha_list[-1]):\n            for i in range(1, len(alpha_list)):\n                alice += ord(alpha_list[i]) - 96\n            alice -= ord(alpha_list[0]) - 96\n            print('Alice ' + str(alice))\n        if not n == 1 and ord(alpha_list[0]) == ord(alpha_list[-1]):\n            for i in range(1, len(alpha_list)):\n                alice += ord(alpha_list[i]) - 96\n            alice -= ord(alpha_list[0]) - 96\n            print('Alice ' + str(alice))\n    t -= 1", "def sumPos(s):\n    sum = 0\n    for i in range(len(s)):\n        sum = sum + (ord(s[i]) - 96)\n    return sum\nn = int(input())\nfor i in range(n):\n    s = input()\n    l = len(s)\n    if len(s) % 2 == 0:\n        diff = sumPos(s)\n        print('Alice {}'.format(diff))\n    elif l == 1:\n        diff = sumPos(s)\n        print('Bob {}'.format(diff))\n    elif sumPos(s[:l - 1]) > sumPos(s[1:]):\n        diff = sumPos(s[:l - 1]) - sumPos(s[l - 1])\n        print('Alice {}'.format(diff))\n    else:\n        diff = sumPos(s[1:]) - sumPos(s[0])\n        print('Alice {}'.format(diff))", "dict = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8, 'i': 9, 'j': 10, 'k': 11, 'l': 12, 'm': 13, 'n': 14, 'o': 15, 'p': 16, 'q': 17, 'r': 18, 's': 19, 't': 20, 'u': 21, 'v': 22, 'w': 23, 'x': 24, 'y': 25, 'z': 26}\nt = int(input())\nfor h in range(0, t):\n    s = input()\n    l = len(s)\n    if l % 2 == 0:\n        ap = 0\n        for i in range(0, l):\n            ap = ap + dict[s[i]]\n        print('Alice', ap)\n    else:\n        ap = 0\n        if dict[s[0]] <= dict[s[l - 1]]:\n            for i in range(1, l):\n                ap = ap + dict[s[i]]\n            bp = dict[s[0]]\n        else:\n            for i in range(0, l - 1):\n                ap = ap + dict[s[i]]\n            bp = dict[s[l - 1]]\n        if ap > bp:\n            print('Alice', ap - bp)\n        else:\n            print('Bob', bp - ap)", "def sumOfString(string):\n    sum = 0\n    for c in string:\n        sum += ord(c)\n    sum = sum - 96 * len(string)\n    return sum\n\ndef solve():\n    s = input()\n    if len(s) == 1:\n        print('Bob', ord(s) - 96)\n    elif len(s) % 2 == 0:\n        print('Alice', sumOfString(s))\n    else:\n        if ord(s[0]) >= ord(s[len(s) - 1]):\n            s1 = s[0:len(s) - 1]\n            s2 = s[len(s) - 1]\n        else:\n            s1 = s[1:len(s)]\n            s2 = s[0]\n        print('Alice', sumOfString(s1) - ord(s2) + 96)\nt = int(input())\nwhile t:\n    solve()\n    t -= 1", "n = int(input())\nwhile n > 0:\n    s = input()\n    p = 0\n    for i in range(len(s)):\n        p = p + ord(s[i]) - 96\n    if len(s) % 2 == 0:\n        print('Alice', p)\n    else:\n        if len(s) == 1:\n            print('Bob', p)\n            n = n - 1\n            continue\n        if ord(s[0]) > ord(s[len(s) - 1]):\n            print('Alice', p - 2 * (ord(s[len(s) - 1]) - 96))\n        else:\n            print('Alice', p - 2 * (ord(s[0]) - 96))\n    n = n - 1", "def winner(strin):\n    alpha = list()\n    for i in strin:\n        alpha.append(ord(i) - 96)\n    length = len(alpha)\n    if length == 1:\n        res = 'Bob ' + str(alpha[0])\n        print(res)\n        return\n    elif length & 1 == 0:\n        res = 'Alice ' + str(sum(alpha))\n        print(res)\n        return\n    else:\n        bob = min(alpha[0], alpha[length - 1])\n        alice = max(alpha[0], alpha[length - 1])\n        alice += sum(alpha[1:length - 1])\n        if alice > bob:\n            res = 'Alice ' + str(alice - bob)\n            print(res)\n            return\n        else:\n            res = 'Bob ' + str(bob - alice)\nnumberOfRounds = int(input())\nfor _ in range(numberOfRounds):\n    s = input()\n    winner(s)"]