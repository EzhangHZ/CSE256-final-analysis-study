["for _ in range(int(input())):\n    n = int(input())\n    s = str(input())\n    if n == 1:\n        print(1)\n    elif n % 2 == 0:\n        t = s[n // 2]\n        i = n // 2 - 1\n        while i >= 0 and s[i] == t:\n            i -= 1\n        i += 1\n        print(n - i * 2)\n    else:\n        t = s[n // 2]\n        i = n // 2\n        while i >= 0 and s[i] == t:\n            i -= 1\n        i += 1\n        print(n - i * 2)", "for s in [*open(0)][2::2]:\n    n = len(s) - 1\n    print(n - 2 * len(s[n // 2:-1].lstrip(s[n // 2])))", "for s in [*open(0)][2::2]:\n    n = len(s) - 1\n    print(n - 2 * len(s[n // 2:].strip(s[n // 2])) + 2)", "for s in [*open(0)][2::2]:\n    n = len(s) - 1\n    print(n - 2 * len(s[n // 2:].strip(s[n // 2])) + 2)", "for s in [*open(0)][2::2]:\n    n = len(s) - 1\n    print(n - 2 * len(s[n // 2:].strip(s[n // 2])) + 2)", "for s in [*open(0)][2::2]:\n    n = len(s) - 1\n    print(n - 2 * len(s[n // 2:].strip(s[n // 2])) + 2)", "for s in [*open(0)][2::2]:\n    n = len(s) - 1\n    print(n - 2 * len(s[n // 2:].strip(s[n // 2])) + 2)", "for b in [*open(0)][2::2]:\n    v = len(b) - 1\n    print(v - 2 * len(b[v // 2:].strip(b[v // 2])) + 2)", "for p in [*open(0)][2::2]:\n    i = len(p) - 1\n    print(i - 2 * len(p[i // 2:].strip(p[i // 2])) + 2)", "for c in [*open(0)][2::2]:\n    n = len(c) - 1\n    print(n - 2 * len(c[n // 2:].strip(c[n // 2])) + 2)", "for p in [*open(0)][2::2]:\n    i = len(p) - 1\n    print(i - 2 * len(p[i // 2:].strip(p[i // 2])) + 2)", "for a in [*open(0)][2::2]:\n    b = len(a) - 1\n    print(b - 2 * len(a[b // 2:].strip(a[b // 2])) + 2)", "for s in [*open(0)][2::2]:\n    n = len(s) - 1\n    print(n - 2 * len(s[n // 2:].strip(s[n // 2])) + 2)", "for s in [*open(0)][2::2]:\n    v = len(s) - 1\n    print(v - 2 * len(s[v // 2:].strip(s[v // 2])) + 2)", "for s in [*open(0)][2::2]:\n    n = len(s) - 1\n    print(n - 2 * len(s[n // 2:].strip(s[n // 2])) + 2)", "for s in [*open(0)][2::2]:\n    n = len(s) - 1\n    print(n - 2 * len(s[n // 2:].strip(s[n // 2])) + 2)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input().strip()\n    c = s[n // 2]\n    tot = n % 2\n    for i in range(n // 2 - 1, -1, -1):\n        if s[i] != c:\n            break\n        tot += 2\n    print(tot)", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    s = input()\n    if len(s) % 2 == 0:\n        s = s[:len(s) // 2][::-1]\n        cnt = 0\n        a = s[0]\n        for i in range(len(s)):\n            if s[i] == a:\n                cnt += 1\n            elif s[i] != a:\n                break\n        print(cnt * 2)\n    else:\n        s = s[:len(s) // 2 + 1][::-1]\n        cnt = 0\n        a = s[0]\n        for i in range(len(s)):\n            if s[i] == a:\n                cnt += 1\n            elif s[i] != a:\n                break\n        print((cnt - 1) * 2 + 1)", "def solve():\n    n = int(input())\n    s = input().strip()\n    ans = 0\n    for i in range(n // 2, 0, -1):\n        if s[i] == s[i - 1]:\n            ans += 2\n        else:\n            break\n    return ans if len(s) % 2 == 0 else ans + 1\nfor _ in range(int(input())):\n    print(solve())", "k = int(input().strip())\nstore = [0] * k\nfor i in range(k):\n    l = int(input().strip())\n    st = input().strip()\n    count = 0\n    if l % 2 == 1:\n        mid = int((l - 1) / 2)\n        letter = st[mid]\n        while st[mid - count] == letter and mid - count > -1:\n            count += 1\n        store[i] = (count - 1) * 2 + 1\n    else:\n        mid = int(l / 2) - 1\n        letter = st[mid]\n        while st[mid - count] == letter and mid - count > -1:\n            count += 1\n        store[i] = count * 2\nfor num in store:\n    print(num)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    s = input()\n    mid = (n - 1) // 2\n    a = s[mid]\n    count = 0\n    while s[mid] == a and mid >= 0:\n        count += 1\n        mid -= 1\n    if n % 2 == 0:\n        print(count * 2)\n    else:\n        print(count * 2 - 1)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    s = list(input())\n    if len(set(s)) == 1:\n        print(n)\n    else:\n        cnt = 0\n        if n % 2 != 0:\n            a = s[n // 2]\n            for i in range(n // 2 + 1):\n                if s[n // 2 - i] == a:\n                    cnt += 1\n                else:\n                    break\n            print(2 * cnt - 1)\n        else:\n            cnt = 0\n            a = s[n // 2 - 1]\n            for i in range(n // 2):\n                if s[n // 2 - i - 1] == a:\n                    cnt += 1\n                else:\n                    break\n            print(2 * cnt)\n    t = t - 1", "a = int(input())\nfor i in range(a):\n    k = int(input())\n    d = input()\n    c = 0\n    if len(set(d)) == 1:\n        print(k)\n    elif k % 2 == 1:\n        d = d[:k // 2 + 1]\n        d = d[::-1]\n        for i in range(1, len(d)):\n            if d[0] == d[i]:\n                c += 1\n            else:\n                break\n        print(c * 2 + 1)\n    else:\n        d = d[:k // 2]\n        d = d[::-1]\n        for i in range(1, len(d)):\n            if d[0] == d[i]:\n                c += 1\n            else:\n                break\n        print(c * 2 + 2)", "for i in range(int(input())):\n    a = int(input())\n    b = input()\n    c = 0\n    if a % 2 == 0:\n        b = b[:a // 2]\n        for i in b[::-1]:\n            if i == b[-1]:\n                c += 1\n            else:\n                break\n        print(2 * c)\n    else:\n        b = b[:a // 2 + 1]\n        for i in b[::-1]:\n            if i == b[-1]:\n                c += 1\n            else:\n                break\n        print(2 * c - 1)", "def solve():\n    n = int(input())\n    s = input()\n    ans = 0\n    if n % 2 == 0:\n        for i in range(len(s) // 2 - 1, n - 1):\n            if s[i] == s[i + 1]:\n                ans += 1\n            else:\n                break\n    else:\n        for i in range(len(s) // 2, n - 1):\n            if s[i] == s[i + 1]:\n                ans += 1\n            else:\n                break\n    ans *= 2\n    if len(s) % 2 == 0:\n        print(ans)\n    else:\n        print(ans + 1)\nt = int(input())\nwhile t > 0:\n    solve()\n    t -= 1", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    x = input()\n    if n == 2:\n        print(2)\n    else:\n        a = math.floor((n + 1) / 2)\n        y = x[:a][::-1]\n        p = y[0]\n        i = 1\n        for k in y[1:]:\n            if k == p:\n                p = k\n                i += 1\n            else:\n                break\n        if n % 2 == 0:\n            print(i * 2)\n        else:\n            print((i - 1) * 2 + 1)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    if len(set(s)) == 1:\n        d = n\n    else:\n        d = n % 2\n        k = n // 2\n        j = k - 1\n        while s[j] == s[k]:\n            d += 2\n            j -= 1\n    print(d)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    ele = s[n // 2]\n    ans = 0\n    for i in range(n // 2, n):\n        if s[i] == ele:\n            ans += 2\n        else:\n            break\n    if n % 2 != 0:\n        ans -= 1\n    print(ans)", "def pal_ind(s):\n    l = len(s)\n    if l != 1:\n        req_s = s[0:int((l + 1) / 2)]\n        first = req_s[-1]\n        cnt = 0\n        for i in range(1, len(req_s) + 1):\n            if req_s[-i] == first:\n                cnt += 1\n            else:\n                break\n        return cnt * 2 - l % 2\n    else:\n        return 0\nans_lst = []\nfor i in range(int(input())):\n    l = int(input())\n    string = input()\n    ans_lst.append(pal_ind(string))\nfor i in ans_lst:\n    print(i)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    h = s[n // 2:]\n    v = len(h) - len(h.lstrip(h[0]))\n    print(v * 2 - n % 2)", "times = int(input())\nfor time in range(times):\n    n = int(input())\n    string = input()\n    if n % 2 == 1:\n        k = 1\n    else:\n        k = 2\n    h = n // 2\n    c = string[h]\n    for j in range(h + 1, n):\n        if string[j] == c:\n            k += 2\n        else:\n            break\n    print(k)", "for s in [*open(0)][2::2]:\n    n = len(s) - 1\n    print(n - 2 * len(s[n // 2:].strip(s[n // 2])) + 2)", "for s in [*open(0)][2::2]:\n    n = len(s) - 1\n    print(n - 2 * len(s[n // 2:].strip(s[n // 2])) + 2)", "for s in [*open(0)][2::2]:\n    n = len(s) - 1\n    print(n - 2 * len(s[n // 2:].strip(s[n // 2])) + 2)", "for b in [*open(0)][2::2]:\n    v = len(b) - 1\n    print(v - 2 * len(b[v // 2:].strip(b[v // 2])) + 2)", "def function(st):\n    count = 0\n    index = len(st) // 2\n    for i in range(index, -1, -1):\n        if st[index] == st[i]:\n            count += 1\n        else:\n            break\n    for i in range(index, len(st)):\n        if st[index] == st[i]:\n            count += 1\n        else:\n            break\n    return count - 1\nn = int(input())\nfor i in range(n):\n    m = int(input())\n    st = input()\n    print(function(st))", "for s in [*open(0)][2::2]:\n    n = len(s) - 1\n    print(n - 2 * len(s[n // 2:].strip(s[n // 2])) + 2)", "def counter(a, b, c):\n    count_r = 0\n    for y in range(a + 1, b):\n        if c[a] == c[y]:\n            count_r += 1\n        else:\n            break\n    return count_r\ntest = int(input())\nfor x in range(0, test):\n    n = int(input())\n    string_h = input()\n    if n == 0:\n        print(0)\n    elif n % 2 != 0:\n        k = int(n / 2)\n        count = counter(k, n, string_h) * 2 + 1\n    else:\n        k = int(n / 2) - 1\n        count = counter(k, n, string_h) * 2\n    print(count)", "for s in [*open(0)][2::2]:\n    n = len(s) - 1\n    print(n - 2 * len(s[n // 2:].strip(s[n // 2])) + 2)", "for s in [*open(0)][2::2]:\n    n = len(s) - 1\n    print(n - 2 * len(s[n // 2:].strip(s[n // 2])) + 2)", "for _ in range(int(input())):\n    n = int(input())\n    str1 = input()\n    mid = n // 2\n    i = mid\n    char = str1[mid]\n    while i < n and str1[i] == char:\n        i += 1\n    print((i - mid) * 2 if n % 2 == 0 else (i - mid) * 2 - 1)", "for s in [*open(0)][2::2]:\n    n = len(s) - 1\n    print(n - 2 * len(s[n // 2:].strip(s[n // 2])) + 2)", "def solve():\n    n = int(input())\n    s = input()\n    ans = 0\n    for i in range((n + 1) // 2, n):\n        if s[i] == s[i - 1]:\n            ans += 2\n        else:\n            break\n    print(ans + n % 2)\nfor _ in range(int(input())):\n    solve()", "for s in [*open(0)][2::2]:\n    n = len(s) - 1\n    print(n - 2 * len(s[n // 2:].strip(s[n // 2])) + 2)", "t = int(input())\n\ndef get_count(s):\n    n = len(s)\n    if n % 2 == 0:\n        count = 2\n        mid = s[int(n / 2) - 1]\n        i = int(n / 2) - 2\n        while i >= 0 and s[i] == mid:\n            count += 2\n            i -= 1\n        return count\n    else:\n        count = 1\n        mid = s[int(n / 2)]\n        i = int(n / 2) - 1\n        while i >= 0 and s[i] == mid:\n            count += 2\n            i -= 1\n        return count\n    return 0\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    print(get_count(s))", "for i in range(int(input())):\n    (n, s) = (int(input()), input())\n    c = s[n // 2]\n    for i in range(n // 2, n):\n        if s[i] != c:\n            break\n        else:\n            i = n\n    print(2 * i - n)", "for s in [*open(0)][2::2]:\n    n = len(s) - 1\n    print(n - 2 * len(s[n // 2:].strip(s[n // 2])) + 2)", "for _ in range(int(input())):\n    (n, s) = (int(input()), input())\n    c = s[n // 2]\n    for i in range(n // 2, n):\n        if s[i] != c:\n            break\n        else:\n            i = n\n    print(2 * i - n)", "num_inp = lambda : int(input())\narr_inp = lambda : list(map(int, input().split()))\nsp_inp = lambda : map(int, input().split())\nstr_inp = lambda : input()\nt = num_inp()\nfor _ in range(t):\n    n = num_inp()\n    s = str_inp()\n    if len(set(s)) == 1 or n == 2:\n        print(n)\n    else:\n        count = 0\n        mid = n // 2 - 1\n        val = s[n // 2]\n        while mid != -1 and s[mid] == val:\n            count += 1\n            mid -= 1\n        if n % 2 == 0:\n            count *= 2\n        else:\n            count = 2 * count + 1\n        print(count)", "for _ in range(int(input())):\n    (n, s) = (int(input()), input())\n    c = s[n // 2]\n    for i in range(n // 2, n):\n        if s[i] != c:\n            break\n        else:\n            i = n\n    print(2 * i - n)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    if len(set(s)) == 1:\n        print(n)\n        continue\n    a = s[n // 2]\n    i = n // 2 + 1\n    ans = 1\n    if n % 2 == 0:\n        ans = 2\n    while s[i] == a:\n        ans += 2\n        i += 1\n    print(ans)", "def main():\n    n = int(input())\n    s = input()\n    i = n // 2\n    ans = 0\n    while i < n and s[i] == s[n // 2]:\n        i += 1\n        ans += 1\n    if n % 2 == 1:\n        ans = ans * 2 - 1\n    else:\n        ans = ans * 2\n    print(ans)\nfor _ in range(int(input())):\n    main()", "def main():\n    tc = int(input())\n    for _ in range(tc):\n        n = int(input())\n        string = input()\n        mid = n // 2\n        if n % 2 == 0:\n            mid -= 1\n            left = mid - 1\n            right = mid + 1\n            count1 = 0\n            for i in range(left, -1, -1):\n                if string[i] != string[mid]:\n                    break\n                count1 += 1\n            for i in range(right, n):\n                if string[i] != string[mid]:\n                    break\n                count1 += 1\n            if count1 == 0:\n                print(0)\n            else:\n                print(count1 + 1)\n        else:\n            left = mid - 1\n            right = mid + 1\n            count = 0\n            for i in range(left, -1, -1):\n                if string[i] != string[mid]:\n                    break\n                count += 1\n            for i in range(right, n):\n                if string[i] != string[mid]:\n                    break\n                count += 1\n            if count == 0:\n                print(1)\n            else:\n                print(count + 1)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    a = s[n // 2]\n    count = 0\n    for i in range(n // 2, -1, -1):\n        if s[i] == a:\n            count += 1\n        else:\n            break\n    if n % 2 == 0:\n        print(2 * count - 2)\n    else:\n        print(2 * count - 1)", "def solve():\n    n = int(input())\n    s = input()\n    if len(s) == 2:\n        print(2)\n        return\n    x = len(s) // 2\n    c = 1\n    for i in range(x + 1, n):\n        if s[i] == s[x]:\n            c += 1\n        else:\n            break\n    if n % 2 == 0:\n        print(2 * c)\n    else:\n        print(2 * c - 1)\nt = int(input())\nfor i in range(t):\n    solve()", "for i in range(int(input())):\n    lenn = int(input())\n    string = input()\n    ans = 0\n    imp = string[lenn // 2]\n    for i in string[:lenn // 2 + 1][::-1]:\n        if i != imp:\n            break\n        else:\n            ans += 1\n    for i in string[lenn // 2 + 1:]:\n        if i != imp:\n            break\n        else:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(input())\n    if n % 2 == 1:\n        i = n // 2\n        x = a[i]\n        count = 0\n        for j in range(i + 1, n):\n            if a[j] == x:\n                count += 1\n            else:\n                break\n        print(2 * count + 1)\n    else:\n        i = n // 2 - 1\n        x = a[i]\n        count = 0\n        for j in range(i + 1, n):\n            if a[j] == x:\n                count += 1\n            else:\n                break\n        print(2 * count)", "n_test_cases = int(input())\nans_arr = []\nfor i in range(n_test_cases):\n    len_str = int(input())\n    inp_str = input()\n    if len_str % 2 == 0:\n        count = 0\n        middle_index = int(len_str / 2) - 1\n        middle_char = inp_str[middle_index]\n        while True:\n            curr_index = middle_index + count + 1\n            if curr_index == len_str:\n                break\n            if inp_str[curr_index] == middle_char:\n                count += 1\n            else:\n                break\n        ans_arr.append(count * 2)\n    else:\n        count = 0\n        middle_index = int(len_str / 2)\n        middle_char = inp_str[middle_index]\n        while True:\n            curr_index = middle_index + count + 1\n            if curr_index == len_str:\n                break\n            if inp_str[curr_index] == middle_char:\n                count += 1\n            else:\n                break\n        ans_arr.append(count * 2 + 1)\nfor i in range(len(ans_arr)):\n    print(ans_arr[i])", "for i in range(int(input())):\n    a = int(input())\n    b = input()\n    if a % 2 == 0:\n        c = a // 2 - 1\n        count = 0\n        for i in range(c, -1, -1):\n            if b[i] == b[c]:\n                count += 1\n            else:\n                break\n        print(2 * count)\n    else:\n        c = a // 2\n        count = 0\n        for i in range(c - 1, -1, -1):\n            if b[i] == b[c]:\n                count += 1\n            else:\n                break\n        print(2 * count + 1)", "def pal(st):\n    for i in range(len(st) // 2):\n        if st[i] != st[len(st) - 1 - i]:\n            return False\n    return True\nt = int(input())\nfor j in range(t):\n    n = int(input())\n    st = input()\n    if st.count(st[0]) == len(st):\n        print(len(st))\n    else:\n        k = 0\n        if n % 2 != 0:\n            ind = n // 2\n            i = ind + 1\n            k = 1\n            while st[i] == st[ind]:\n                k += 2\n                i += 1\n        else:\n            ind = n // 2 - 1\n            i = 1\n            k = 2\n            while st[ind - i] == st[ind + 1]:\n                k += 2\n                i += 1\n        print(k)", "t = int(input())\nwhile t:\n    n = int(input())\n    s = input()\n    ct = 0\n    if n % 2 == 0:\n        ct += 2\n        idx = n // 2\n        x = s[idx]\n        for i in range(idx + 1, n):\n            if s[i] == x:\n                ct += 2\n            else:\n                break\n    else:\n        ct += 1\n        idx = (n - 1) // 2\n        x = s[idx]\n        for i in range(idx + 1, n):\n            if s[i] == x:\n                ct += 2\n            else:\n                break\n    print(ct)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    word = input()\n    count = 0\n    letter = word[n // 2]\n    for i in range(n // 2, n - 1):\n        if word[i] == letter and word[i + 1] != letter:\n            index1 = i + 1\n            break\n    else:\n        index1 = n\n    print(n - (n - index1) * 2)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    count = 0\n    for i in range((n + 1) // 2, n):\n        if s[i] != s[n // 2]:\n            break\n        count = count + 2\n    count = count + n % 2\n    print(count)", "def main():\n    n = int(input())\n    s = input()\n    i = (n - 1) // 2\n    c = s[i]\n    (l, r) = (i, i)\n    while r < n and s[r] == c:\n        r += 1\n    while l >= 0 and s[l] == c:\n        l -= 1\n    return r - l - 1\nt = int(input())\nfor _ in range(t):\n    print(main())", "for iq in range(int(input())):\n    n = int(input())\n    s = input()\n    cnt = 0\n    for i in range((n + 1) // 2, n):\n        if s[i] != s[n // 2]:\n            break\n        cnt += 2\n    cnt = cnt + n % 2\n    print(cnt)", "for j in range(int(input())):\n    n = int(input())\n    s = input()\n    ctr = 2\n    if n % 2 != 0:\n        ctr = 1\n    for i in range(n // 2, n - 1, +1):\n        if s[i] == s[i + 1]:\n            ctr += 2\n        else:\n            break\n    print(ctr)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    m = 0\n    if n % 2 == 0:\n        mid = int(n // 2)\n        s1 = s[:mid]\n        s2 = s[mid:]\n        s1 = s1[::-1]\n        ch = s2[0]\n        for j in range(len(s1)):\n            if s1[j] == s2[j] and s1[j] == ch:\n                m += 1\n            else:\n                break\n    else:\n        mid = int((n - 1) // 2)\n        s1 = s[:mid]\n        s2 = s[mid + 1:]\n        s1 = s1[::-1]\n        ch = s[mid]\n        for j in range(len(s1)):\n            if s1[j] == s2[j] and s1[j] == ch:\n                m += 1\n            else:\n                break\n    if n % 2 == 0:\n        m *= 2\n    else:\n        m = m * 2 + 1\n    print(m)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    if n % 2 == 0:\n        d = 2\n        for k in range(n // 2 - 2, -1, -1):\n            if s[k] == s[n // 2 - 1]:\n                d += 2\n            else:\n                break\n        print(d)\n    else:\n        d = 1\n        for k in range(n // 2 - 1, -1, -1):\n            if s[k] == s[n // 2]:\n                d += 2\n            else:\n                break\n        print(d)", "def main():\n    n = int(input())\n    for _ in range(n):\n        input()\n        s = input()\n        print(solve(s))\n\ndef solve(s):\n    (i, res) = (len(s) // 2, -(len(s) % 2))\n    mid_char = s[i]\n    while i < len(s) and s[i] == mid_char:\n        i += 1\n    res += 2 * (i - len(s) // 2)\n    return res\nmain()", "N = int(input())\nfor i in range(N):\n    n = int(input())\n    s = input()\n    if n % 2:\n        (l, r) = (n // 2, n // 2 + 1)\n        pat = s[l]\n    else:\n        (l, r) = (n // 2, n // 2)\n        pat = s[l]\n    while r < n and pat == s[r]:\n        l -= 1\n        r += 1\n    print(r - l)", "t = int(input())\nfor z in range(t):\n    ans = 0\n    n = int(input())\n    s = input()\n    if n % 2 == 0:\n        mid = int(n / 2)\n    elif n % 2 == 1:\n        mid = int(n // 2 + 1)\n    k = s[mid - 1]\n    for i in range(mid - 1, n):\n        if s[i] == k:\n            ans += 1\n        elif s[i] != k:\n            break\n    if n % 2 == 0:\n        print(2 * (ans - 1))\n    elif n % 2 != 0:\n        print(2 * ans - 1)", "def solve():\n    n = int(input())\n    s = input()\n    if n % 2 == 1:\n        res = 1\n        for i in range(n // 2 - 1, -1, -1):\n            if s[i] == s[n // 2]:\n                res += 2\n            else:\n                break\n        print(res)\n    else:\n        res = 2\n        for i in range(n // 2 - 2, -1, -1):\n            if s[i] == s[n // 2 - 1]:\n                res += 2\n            else:\n                break\n        print(res)\nt = int(input())\nwhile t > 0:\n    t -= 1\n    solve()", "iT = int(input())\nfor _ in range(iT):\n    iN = int(input())\n    str_temp = input()\n    i = 0\n    cnt = 0\n    x = iN // 2\n    if iN % 2 == 1:\n        cnt += 1\n    for idx in range(x - 1, -1, -1):\n        if str_temp[idx] == str_temp[x]:\n            cnt += 2\n        else:\n            break\n    print(cnt)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    s = input()\n    i_ = int(n / 2)\n    i = i_\n    c = s[i]\n    while i < n and s[i] == c:\n        i += 1\n    r = (i - i_) * 2\n    if n % 2 == 1:\n        r -= 1\n    print(r)", "for i in range(int(input())):\n    n = int(input())\n    t = input()\n    k = n // 2\n    p = t[k]\n    i = 0\n    while k + i < n and t[k + i] == p:\n        i += 1\n    if n % 2 == 0:\n        print(i * 2)\n    else:\n        print(i * 2 - 1)", "t = int(input())\nwhile t:\n    n = int(input())\n    s = input()\n    mid = (n - 1) // 2\n    a = s[mid]\n    count = 0\n    while s[mid] == a and mid >= 0:\n        count += 1\n        mid -= 1\n    if n % 2:\n        print(count * 2 - 1)\n    else:\n        print(count * 2)\n    t -= 1", "t = int(input(''))\nfor z in range(t):\n    n = int(input(''))\n    s = input('')\n    if len(set(s)) == 1:\n        print(len(s))\n    else:\n        p = n // 2\n        q = s[p]\n        c = 0\n        for i in range(p, n):\n            if s[i] == q:\n                c += 1\n            else:\n                break\n        for j in range(p - 1, 0, -1):\n            if s[j] == q:\n                c += 1\n            else:\n                break\n        print(c)", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    s = input()\n    c = 0\n    for i in range((n - 1) // 2, -1, -1):\n        if s[i] == s[(n - 1) // 2]:\n            c += 1\n        else:\n            break\n    print(2 * c - (n & 1))", "for _ in range(int(input())):\n    n = int(input())\n    str1 = input()\n    mid = n // 2\n    i = mid\n    char = str1[mid]\n    while i < n and str1[i] == char:\n        i += 1\n    print((i - mid) * 2 if n % 2 == 0 else (i - mid) * 2 - 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = 0\n    if n == 2:\n        print(2)\n    elif n == 3 and s.count(s[0]) == 3:\n        print(3)\n    elif n == 3:\n        print(1)\n    else:\n        x = s[0:n // 2]\n        for i in range(len(x) - 1, 0, -1):\n            if x[i] == x[i - 1]:\n                ans = ans + 1\n            else:\n                break\n        ans = ans + 1\n        if n % 2 == 0:\n            print(ans * 2)\n        elif x[len(x) - 1] == s[n // 2]:\n            print(ans * 2 + 1)\n        else:\n            print(1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = 0\n    for i in range((n - 1) // 2, -1, -1):\n        if s[i] == s[(n - 1) // 2]:\n            ans += 1\n        else:\n            break\n    print(2 * ans - (n & 1))", "t = int(input())\nfor _ in range(t):\n    size = int(input())\n    s = input()\n    core = 0\n    middle = int(size / 2)\n    letter = s[middle]\n    for i in range(middle + 1, size):\n        if s[i] != letter:\n            break\n        core += 1\n    if size % 2 == 0:\n        core = 2 * core + 2\n    else:\n        core = core * 2 + 1\n    print(core)", "for _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    ans = 1 if n % 2 else 0\n    m = n // 2\n    for i in range(m - 1, -1, -1):\n        if s[i] == s[m]:\n            ans += 2\n        else:\n            break\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    p = input()\n    m = p[n // 2]\n    counter = 0\n    for j in range(n // 2, n):\n        if p[j] == m:\n            counter += 1\n        else:\n            break\n    counter *= 2\n    if n % 2 != 0:\n        counter -= 1\n    print(counter)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    string = input()\n    if n % 2 == 1:\n        ans = 1\n    else:\n        ans = 2\n    for i in range(n // 2 + 1, n, 1):\n        if string[i] == string[i - 1]:\n            ans += 2\n        else:\n            break\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    if n % 2 != 0:\n        count = 1\n        mid = n // 2\n        j = n // 2 + 1\n        while j < n:\n            if s[j] == s[mid]:\n                count += 2\n            else:\n                break\n            j += 1\n    if n % 2 == 0:\n        count = 2\n        mid = n // 2\n        j = mid + 1\n        while j < n:\n            if s[j] == s[mid]:\n                count += 2\n            else:\n                break\n            j += 1\n    print(count)", "t = int(input())\nfor case in range(t):\n    n = int(input())\n    s = input()\n    if n % 2 == 0:\n        init = s[n // 2]\n        count = 1\n        for i in s[n // 2 + 1:]:\n            if i != init:\n                break\n            count += 1\n        print(2 * count)\n    else:\n        init = s[n // 2]\n        count = 1\n        for i in s[n // 2 + 1:]:\n            if i != init:\n                break\n            count += 1\n        print(2 * count - 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    ans = 0\n    if n % 2 == 0:\n        u = s[n // 2]\n        for j in range(n // 2, n):\n            if s[j] == u:\n                ans += 1\n            else:\n                break\n        print(2 * ans)\n    else:\n        u = s[(n - 1) // 2]\n        for j in range((n - 1) // 2, n):\n            if s[j] == u:\n                ans += 1\n            else:\n                break\n        print(2 * ans - 1)", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    s = input()\n    result = 0\n    mc = s[n // 2]\n    for x in s[n // 2:]:\n        if x == mc:\n            result += 1\n        else:\n            break\n    print(result * 2 - (1 if n % 2 != 0 else 0))", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    S = input().strip()\n    if N % 2 == 1:\n        center = N // 2\n        ans = 1\n        for i in range(center + 1, N):\n            if S[center] == S[i]:\n                ans += 2\n            else:\n                break\n    else:\n        center = N // 2\n        ans = 2\n        for i in range(center + 1, N):\n            if S[center] == S[i]:\n                ans += 2\n            else:\n                break\n    print(ans)", "t = int(input())\nfor e in range(t):\n    n = int(input())\n    a = input()\n    b = a[(n - 1) // 2]\n    c = n % 2\n    a = a[(n + 1) // 2:]\n    for i in range(n // 2):\n        if a[i] == b:\n            c += 2\n        else:\n            break\n    print(c)", "t = int(input())\nfor q in range(t):\n    x = int(input())\n    s = input()\n    c = 0\n    n = s[len(s) // 2]\n    for i in range(len(s) // 2, len(s)):\n        if s[i] == n:\n            c += 1\n        else:\n            break\n    print(c * 2 - len(s) % 2)", "t = int(input())\nfor t in range(t):\n    n = int(input())\n    s = input()\n    k = n // 2\n    while k < n and s[k] == s[n // 2]:\n        k += 1\n    if n % 2 == 0:\n        print(2 * (k - n // 2))\n        continue\n    print(2 * (k - n // 2 - 1) + 1)", "T = int(input())\nfor t in range(T):\n    length = int(input())\n    palindrome = input()\n    cnt = 0\n    index = int(length / 2)\n    char = palindrome[index]\n    while index < length and char == palindrome[index]:\n        cnt += 1\n        index += 1\n    if length % 2 == 0:\n        cnt *= 2\n    else:\n        cnt = cnt * 2 - 1\n    print(cnt)", "x = int(input())\nfor i in range(x):\n    n = int(input())\n    s = input()\n    su = 0\n    if n % 2 == 1:\n        m = s[n // 2]\n        for j in s[n // 2:]:\n            if j == m:\n                su += 1\n            else:\n                break\n        su = 2 * su - 1\n    else:\n        if s[n // 2 - 1] == s[n // 2]:\n            m = s[n // 2]\n            for j in s[n // 2:]:\n                if j == m:\n                    su += 1\n                else:\n                    break\n        su = 2 * su\n    print(su)", "t = int(input())\nfor g in range(t):\n    n = int(input())\n    st = input()\n    ch = st[n // 2]\n    i = n // 2\n    while st[i] == ch and i >= 0:\n        i -= 1\n    if len(st) % 2 == 0:\n        print((n // 2 - i - 1) * 2)\n    else:\n        print((n // 2 - 1 - i) * 2 + 1)", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    s = input()\n    m = n // 2\n    c = 0\n    while True:\n        if s[m - 1] == s[m] and m != 0:\n            c += 2\n            m -= 1\n        else:\n            break\n    if c == 0 or n & 1:\n        print(c + 1)\n    else:\n        print(c)\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    if n % 2 == 0:\n        mid = n // 2 - 1\n        check = s[mid]\n        cnt = 0\n        while mid >= 0 and s[mid] == check:\n            cnt += 1\n            mid -= 1\n        print(cnt * 2)\n    else:\n        mid = n // 2\n        check = s[mid]\n        cnt = 0\n        while mid >= 0 and s[mid] == check:\n            cnt += 1\n            mid -= 1\n        print((cnt - 1) * 2 + 1)", "for i in range(int(input())):\n    x = int(input())\n    y = input()\n    v = y[x // 2:]\n    c = 0\n    for i in range(len(v) - 1):\n        if v[i + 1] == v[i]:\n            c += 1\n        else:\n            break\n    if x % 2 == 1:\n        print(c * 2 + 1)\n    else:\n        print(c * 2 + 2)"]