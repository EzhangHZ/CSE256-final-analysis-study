["from math import floor, ceil\ntc = int(input())\nwhile tc > 0:\n    setSize = int(input())\n    halfSize = setSize / 2\n    up = floor(halfSize)\n    down = ceil(halfSize)\n    a = [down]\n    if setSize % 2 == 0:\n        down += 1\n    for i in range(1, setSize):\n        if i % 2 == 0:\n            a.append(a[-1] - down)\n        else:\n            a.append(a[-1] + up)\n    print(' '.join(map(str, a)))\n    tc -= 1", "n = int(input())\nfor j in range(n):\n    a = int(input())\n    ans = ''\n    first = a // 2\n    last = a\n    if a <= 3:\n        for i in range(a):\n            ans += str(i + 1) + ' '\n        print(ans[:-1])\n    elif a % 2 == 0:\n        for i in range(first, 0, -1):\n            ans += str(i) + ' ' + str(last) + ' '\n            last -= 1\n        print(ans[:-1])\n    elif a % 2 != 0:\n        last = a - 1\n        for i in range(first, 0, -1):\n            ans += str(i) + ' ' + str(last) + ' '\n            last -= 1\n        print(f'{a} {ans}')", "import math\n\ndef solve():\n    n = int(input())\n    a1 = [i for i in range(1, math.ceil(n / 2) + 1)]\n    a2 = [i for i in range(math.ceil(n / 2) + 1, n + 1)]\n    i = 0\n    j = 0\n    if len(a1) == len(a2):\n        (a1, a2) = (a2, a1)\n    arr = []\n    for k in range(n):\n        if k % 2 == 0:\n            arr.append(a1[i])\n            i += 1\n        else:\n            arr.append(a2[j])\n            j += 1\n    print(' '.join(map(str, arr)))\nt = int(input())\nwhile t:\n    t -= 1\n    solve()", "import sys\nfrom collections import *\nsys.setrecursionlimit(10 ** 5)\nitr = (line for line in sys.stdin.read().strip().split('\\n'))\nINP = lambda : next(itr)\n\ndef ni():\n    return int(INP())\n\ndef nl():\n    return [int(_) for _ in INP().split()]\n\ndef solve(n):\n    diff = n // 2\n    out = []\n    for i in range(1, n // 2 + 1):\n        out.append(i + diff)\n        out.append(i)\n    if n // 2 != n / 2:\n        out = [n] + out\n    print(' '.join(map(str, out)))\nt = ni()\nfor case in range(t):\n    n = ni()\n    solve(n)", "for _ in range(int(input())):\n    n = int(input())\n    if n < 4:\n        for i in range(n):\n            print(i + 1, end=' ')\n        print()\n        continue\n    a = []\n    if n % 2 == 0:\n        for i in range(n // 2, 0, -1):\n            a.append(str(i))\n            a.append(str(i + n // 2))\n    else:\n        a.append(str(n))\n        for i in range(n // 2, 0, -1):\n            a.append(str(i))\n            a.append(str(i + n // 2))\n    print(' '.join(a))", "testcases = int(input())\nfor _ in range(testcases):\n    n = int(input())\n    first_half = [i + 1 for i in range(n // 2)]\n    second_half = [i for i in range(n // 2 + 1, n + 1)]\n    answer = []\n    for (i, j) in zip(first_half, second_half):\n        answer.append(str(j))\n        answer.append(str(i))\n    if len(first_half) != len(second_half):\n        answer.append(str(n))\n    print(' '.join(answer))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    mid = n // 2\n    j = 1\n    k = mid + 1\n    ret = ''\n    for a in range(mid):\n        ret += f'{k} {j} '\n        k += 1\n        j += 1\n    if n % 2 != 0:\n        ret += str(n)\n    print(ret)", "def solve(n):\n    i = 1\n    j = n // 2 + 1\n    s = ''\n    while i < n // 2 + 1:\n        s += f'{j} {i} '\n        i += 1\n        j += 1\n    if n % 2 == 1:\n        s += f'{n}'\n    return s\nt = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    print(solve(n))", "test = int(input())\nfor t in range(test):\n    num = int(input())\n    a = []\n    for i in range(1, (num - 1) // 2 + 1):\n        a.append(i)\n        a.append(i + num // 2 + 1)\n    if num % 2 == 0:\n        a.insert(0, num // 2 + 1)\n        a.append(num // 2)\n    else:\n        a.insert(0, num // 2 + 1)\n    print(' '.join(map(str, a)))", "for _ in range(int(input())):\n    n = int(input())\n    diff = n // 2\n    if n % 2 == 0:\n        i = n // 2\n    else:\n        i = n // 2 + 1\n    res = []\n    while i > 0:\n        res.append(str(i))\n        res.append(str(i + diff))\n        i -= 1\n    if n % 2 == 0:\n        print(' '.join(res))\n    else:\n        print(' '.join(res[:-1]))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        x = n // 2\n        y = n\n        for j in range(n // 2):\n            print(x, y, end=' ')\n            x -= 1\n            y -= 1\n    else:\n        x = n // 2 + 1\n        y = n\n        for j in range(n // 2):\n            print(x, y, end=' ')\n            x -= 1\n            y -= 1\n        print(1)\n    print()", "tc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    res = []\n    if n % 2 == 0:\n        even = 1\n        odd = 0\n    else:\n        even = 0\n        odd = 1\n    first = n // 2\n    second = n\n    if odd == 1:\n        first += 1\n    for x in range(first):\n        if first == 1 and odd == 1:\n            res.append(str(first))\n        else:\n            res.append(str(first))\n            res.append(str(second))\n            first -= 1\n            second -= 1\n    print(' '.join(res))", "def solve(n):\n    r = {}\n    for p in range(n, n // 2, -1):\n        r[p - n // 2] = True\n        r[p] = True\n    return ' '.join((str(p) for p in r.keys()))\n\ndef main():\n    for t in range(int(input())):\n        n = int(input())\n        print(solve(n))\nmain()", "n = int(input())\nfor e in range(n):\n    nb = int(input())\n    l = []\n    h = nb // 2\n    if nb % 2 == 0:\n        for i in range(h, 0, -1):\n            l.append(i)\n            l.append(i + h)\n        print(' '.join(map(str, l)))\n    else:\n        for i in range(h + 1, 0, -1):\n            l.append(i)\n            l.append(i + h)\n        print(' '.join(map(str, l[:-1])))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    nums = [i for i in range(1, n + 1)]\n    half = len(nums[::2]) - 1\n    (nums[::2], nums[1::2]) = (nums[half::-1], nums[:half:-1])\n    print(*nums)", "for _ in range(int(input())):\n    n = int(input())\n    start = n // 2 + 1\n    res = []\n    for i in range(1, n // 2 + 1):\n        res.append(start + i - 1)\n        res.append(i)\n    if n % 2 != 0:\n        res.append(n)\n    print(' '.join(map(str, res)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = []\n    j = 0\n    while j < (n + 1) // 2:\n        l.append(str((n + 1) // 2 - j))\n        j += 1\n        if j <= n // 2:\n            l.append(str(n - j + 1))\n    print(' '.join(l))", "for _ in range(int(input())):\n    n = int(input().rstrip())\n    mid = int(n / 2)\n    result = []\n    if n % 2 == 1:\n        start = n - 1\n    else:\n        start = n\n    for i in range(start, mid, -1):\n        result.append(i - mid)\n        result.append(i)\n    if n % 2 == 1:\n        result.append(n)\n    print(' '.join(map(str, result)))", "def min_diff_odd(n):\n    mid = n // 2 + 1\n    res = []\n    for i in range(mid):\n        res.append(i + 1)\n        res.append(i + mid + 1)\n    res.pop()\n    return res\n\ndef min_diff_even(n):\n    mid = n // 2\n    res = []\n    for i in range(mid):\n        res.append(i + 1 + mid)\n        res.append(i + 1)\n    return res\n\ndef min_diff(n):\n    if n % 2 == 0:\n        return min_diff_even(n)\n    return min_diff_odd(n)\ncases = [int(input()) for _ in range(int(input()))]\nfor n in cases:\n    print(' '.join(map(str, min_diff(n))))", "def solve(n):\n    if n == 2:\n        return [1, 2]\n    if n % 2 == 0:\n        maxmin = n // 2\n    else:\n        maxmin = (n - 1) // 2\n    arr = []\n    for i in range(n - maxmin, 0, -1):\n        arr.append(i)\n        if i != 1 or n % 2 == 0:\n            arr.append(i + maxmin)\n    return arr\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    arr = solve(n)\n    print(' '.join([str(j) for j in arr]))", "def solve(n):\n    A = [e for e in range(1, n + 1)]\n    A1 = A[:len(A) // 2]\n    A2 = A[len(A) // 2:]\n    res = []\n    for i in range(min(len(A1), len(A2))):\n        res.append(A2[i])\n        res.append(A1[i])\n    if len(A) % 2:\n        res.append(A2[len(A2) - 1])\n    return ' '.join([str(e) for e in res])\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        print(solve(n))\nmain()", "z = int(input())\nfor i in range(z):\n    n = int(input())\n    max_value = int(n / 2)\n    output = ''\n    if n % 2 == 0:\n        for j in range(max_value, 0, -1):\n            output += str(j)\n            output += ' '\n            output += str(j + max_value)\n            output += ' '\n        print(output.rstrip())\n    else:\n        for j in range(max_value + 1, 1, -1):\n            output += str(j)\n            output += ' '\n            output += str(j + max_value)\n            output += ' '\n        output += '1'\n        print(output)", "a = int(input())\nfor i in range(a):\n    q = int(input())\n    t = []\n    for j in range(q // 2):\n        t.append(str(q // 2 + 1 + j))\n        t.append(str(j + 1))\n    if q % 2 != 0:\n        t.append(str(q))\n    print(' '.join(t))", "for _ in range(int(input())):\n    n = int(input())\n    p = []\n    if n % 2:\n        p.append(n)\n    m = n // 2\n    for i in range(n // 2):\n        p.append(i + m + 1)\n        p.append(i + 1)\n    print(' '.join(map(lambda x: str(x), list(p))))", "n = input()\np = []\nfor i in range(0, int(n)):\n    l = input()\n    p.append(int(l))\nfor i in p:\n    t = ''\n    n = 1\n    for j in range(0, i // 2):\n        p = f'{n} {n + i // 2} '\n        n = n + 1\n        t = p + t\n    if i % 2 == 0:\n        print(t)\n    else:\n        print(f'{i} ' + t)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(j + 1) for j in range(n)]\n    b = []\n    if n % 2 == 0:\n        for k in range(int(n / 2) + 1, n + 1):\n            b.append(k)\n            b.append(k - int(n / 2))\n    else:\n        for h in range(int((n + 1) / 2), n):\n            b.append(h)\n            b.append(h - int((n + 1) / 2) + 1)\n        b.append(n)\n    print(' '.join([str(x) for x in b]))", "def solve(n):\n    p = []\n    if n % 2 == 1:\n        p.append(str(n))\n    mid = n // 2\n    for i in range(mid, 0, -1):\n        p.append(str(i))\n        p.append(str(i + mid))\n    return ' '.join(p)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(solve(n))", "def solve(n):\n    d = n // 2 + 1\n    array = [d]\n    for i in range(1, d):\n        array.extend((i, i + d))\n    if n % 2 == 0:\n        del array[-1]\n    answer = ' '.join([str(x) for x in array])\n    print(answer)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    solve(n)", "for _ in range(int(input())):\n    n = int(input())\n    smaller = [i for i in range(1, n // 2 + 1)] if n % 2 == 0 else [i for i in range(1, n // 2 + 2)]\n    larger = [i for i in range(n // 2 + 1, n + 1)] if n % 2 == 0 else [i for i in range(n // 2 + 2, n + 1)]\n    result = []\n    while len(smaller) > 0 and len(larger) > 0:\n        result.append(smaller.pop())\n        result.append(larger.pop())\n    result += smaller\n    print(' '.join((str(i) for i in result)))", "def f():\n    n = int(input())\n    for _ in range(n):\n        L = int(input())\n        half = L // 2 + 1\n        res = []\n        for i in range(L // 2):\n            res.append(half + i)\n            res.append(i + 1)\n        if L % 2 == 1:\n            res.append(L)\n        print(' '.join([str(x) for x in res]))\nf()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    ans = []\n    d = int(n / 2)\n    for i in range(d, 0, -1):\n        ans.append(i)\n        ans.append(i + d)\n    if n % 2:\n        ans.append(n)\n    print(' '.join((str(x) for x in ans)))", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    l = []\n    x = n // 2 + 1\n    for i in range(n // 2):\n        l.append(x + i)\n        l.append(i + 1)\n    if n % 2 != 0:\n        l.append(n)\n    print(' '.join(map(str, l)))", "runs = int(input())\nfor _ in range(runs):\n    n = int(input())\n    s = ''\n    low = 1\n    high = 1 + int(n / 2)\n    if n % 2:\n        while high < n:\n            s += str(high) + ' '\n            s += str(low) + ' '\n            low += 1\n            high += 1\n        s += str(high) + ' '\n    else:\n        while high <= n:\n            s += str(high) + ' '\n            s += str(low) + ' '\n            low += 1\n            high += 1\n    print(s[0:-1])", "def out(n):\n    out = ''\n    if n % 2 == 0:\n        for i in range(n // 2, 0, -1):\n            out += str(i) + ' ' + str(i + n // 2) + ' '\n    else:\n        for i in range(1, (n + 1) // 2):\n            out += str(i) + ' ' + str(i + (n + 1) // 2) + ' '\n        out += str(n // 2 + 1)\n    print(out)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    out(n)", "def main():\n    t = int(input())\n    for _ in range(t):\n        solve()\n\ndef solve():\n    n = int(input())\n    x = n // 2\n    if n % 2 != 0:\n        x = (n + 1) // 2\n    ans = [str(x)]\n    (inc, dec) = (n // 2, -1)\n    for i in range(1, n):\n        if i % 2 != 0:\n            ans.append(str(x + inc))\n            inc -= 1\n        else:\n            ans.append(str(x + dec))\n            dec -= 1\n    print(' '.join(ans))\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    max_len = n // 2\n    a = [max_len + n % 2]\n    for i in range(n - 1):\n        if i % 2 == 0:\n            a.append(a[i] + max_len)\n        else:\n            a.append(a[i] - max_len - 1)\n    print(' '.join((str(i) for i in a)))", "cases = int(input())\nfor _ in range(cases):\n    case = int(input())\n    output = []\n    if case % 2 == 1:\n        numbers = [str(i) for i in range(1, case + 1)]\n        first_half = numbers[:int(case / 2) + 1][::-1]\n        second_half = numbers[int(case / 2) + 1:][::-1]\n    elif case % 2 == 0:\n        numbers = [str(i) for i in range(1, case + 1)]\n        first_half = numbers[:int(case / 2)][::-1]\n        second_half = numbers[int(case / 2):][::-1]\n    for i in range(len(second_half)):\n        output.append(first_half[i])\n        output.append(second_half[i])\n    if case % 2 == 1:\n        output.append(first_half[-1])\n    print(' '.join(output))", "k = int(input(''))\nfor j in range(k):\n    n = int(input(''))\n    s = ''\n    if n % 2 == 0:\n        for i in range(int(n / 2), 0, -1):\n            s += str(i) + ' ' + str(int(i + n / 2)) + ' '\n    else:\n        for i in range(int(n / 2 + 1), 1, -1):\n            s += str(i) + ' ' + str(int(i + n / 2)) + ' '\n        s += '1'\n    print(s)", "def permutation(n):\n    output = []\n    if n <= 3:\n        return [str(k) for k in range(1, n + 1)]\n    if n % 2 == 1:\n        i = 0\n        while len(output) < n:\n            output.append(str(i + 1))\n            i = (i + n // 2) % n\n    else:\n        done = {1: 1, n // 2 + 1: n // 2 + 1, n // 2: n // 2, n: n}\n        i = n // 2 - 1\n        while len(done) != n:\n            output.append(str(i))\n            output.append(str(i + n // 2))\n            done[i] = i\n            done[i + n // 2] = i + n // 2\n            i -= 1\n        output = [str(n // 2), str(n)] + output + ['1', str(n // 2 + 1)]\n    return output\n\ndef main():\n    number = int(input())\n    sets = []\n    for _ in range(number):\n        sets.append(int(input()))\n    output = ''\n    for k in enumerate(sets):\n        perm = permutation(int(k[1]))\n        print(' '.join(perm))\nmain()", "def lister(n):\n    L = []\n    k = n // 2\n    for i in range(k):\n        L.append(str(k + 1 + i))\n        L.append(str(1 + i))\n    if n % 2 == 1:\n        L.append(str(n))\n    return L\n\ndef main():\n    NumTests = int(input())\n    for i in range(NumTests):\n        n = int(input())\n        print(' '.join(lister(n)))\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    r = ''\n    l = n // 2 + 1\n    for i in range(n // 2):\n        r += f'{i + l} {i + 1} '\n    if n % 2 != 0:\n        r += f'{n}'\n    print(r)", "import itertools\nimport sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef solve(n):\n    if n <= 3:\n        print(' '.join(list(map(str, range(1, n + 1)))))\n        return\n    arr = []\n    length_of_each = n // 2\n    if n % 2 == 0:\n        for i in range(1, length_of_each + 1):\n            arr += [length_of_each + i, i]\n    else:\n        for i in range(1, length_of_each + 1):\n            arr += [i, length_of_each + 1 + i]\n    if n % 2 == 1:\n        arr.insert(0, str(n // 2 + 1))\n    print(' '.join(list(map(str, arr))))\nfor i in range(inp()):\n    n = inp()\n    solve(n)", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    ans = []\n    seq = range(1, n + 1)\n    if n < 4:\n        g = list(seq)\n        (g[0], g[1]) = (g[1], g[0])\n        print(' '.join([str(x) for x in g]))\n    elif n % 2 == 0:\n        for j in range(math.floor(n / 2 - 1), -1, -1):\n            a = seq[j]\n            b = seq[math.floor(j + n / 2)]\n            x = [str(a), str(b)]\n            ans += x\n    else:\n        for j in range(math.floor((n + 1) / 2 - 1), 0, -1):\n            a = seq[j]\n            b = seq[math.floor(j + (n - 1) / 2)]\n            x = [str(a), str(b)]\n            ans += x\n        ans += [str(seq[0])]\n    print(' '.join(ans))", "for i in range(int(input())):\n    n = int(input())\n    if n % 2 == 0:\n        p = n // 2\n        a = ''\n        for i in range(p):\n            a = a + str(n - p) + ' ' + str(n) + ' '\n            n -= 1\n    else:\n        p = n // 2\n        a = f'{n} '\n        n -= 1\n        for i in range(p):\n            a = a + str(n - p) + ' ' + str(n) + ' '\n            n -= 1\n    print(a[:-1])", "import math\n\ndef main():\n    result = []\n    t = int(input())\n    for test in range(t):\n        n = int(input())\n        half_n = math.floor(n / 2)\n        permutation = []\n        for i in range(half_n):\n            i += 1\n            permutation.append(str(half_n + i))\n            permutation.append(str(i))\n        if n % 2 != 0:\n            permutation.append(str(n))\n        result.append(' '.join(permutation))\n    print(*result, sep='\\n')\nmain()", "import os\nimport math\nimport collections\nimport bisect\nimport functools\nimport itertools\nimport heapq\n\ndef solve(n):\n    if n == 3:\n        return [1, 2, 3]\n    m = n // 2 + 1\n    a = list(range(m, n + 1))\n    b = list(range(1, m))\n    (i, j) = (0, 0)\n    ans = []\n    while i < len(a) and j < len(b):\n        ans.append(a[i])\n        ans.append(b[j])\n        i += 1\n        j += 1\n    if i < len(a):\n        ans.append(a[i])\n    return ans\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(' '.join((str(x) for x in solve(n))))", "from math import ceil\n\ndef N():\n    return int(input())\n\ndef A():\n    return [int(x) for x in input().split()]\n\ndef S():\n    return input()\nfor _ in range(N()):\n    n = N()\n    if 'er9fj48gh48gh4' == 14194665565:\n        print('Tanmay')\n    if n < 4:\n        for i in range(n):\n            print(i + 1, end=' ')\n        print()\n        continue\n    ans = [0] * n\n    x = 1\n    for i in range(1, n, 2):\n        ans[i] = x\n        x += 1\n    for i in range(0, n, 2):\n        ans[i] = x\n        x += 1\n    a = ''\n    for i in ans:\n        a += str(i) + ' '\n    print(a)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n <= 3:\n        for i in range(n):\n            print(i + 1, end=' ')\n        print()\n        continue\n    if n % 2 == 0:\n        x = n // 2\n        for i in range(x):\n            print(x + i + 1, i + 1, end=' ')\n        print()\n    else:\n        n -= 1\n        x = n // 2\n        for i in range(x):\n            print(x + i + 1, i + 1, end=' ')\n        print(n + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        for i in range(1, n // 2 + 1):\n            print(i + n // 2, i, end=' ')\n    else:\n        for i in range(1, n // 2 + 1):\n            print(i, i + n // 2 + 1, end=' ')\n        print(n // 2 + 1, end=' ')\n    if i != t - 1:\n        print()", "n_tests = int(input())\nfor _ in range(n_tests):\n    n = int(input())\n    i = n // 2 + n % 2\n    j = n\n    while i > 0:\n        print(i, end=' ')\n        if i != 1 or n % 2 != 1:\n            print(j, end=' ')\n        i = i - 1\n        j = j - 1\n    print()", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    ans = []\n    seq = range(1, n + 1)\n    if n < 4:\n        g = list(seq)\n        (g[0], g[1]) = (g[1], g[0])\n        print(' '.join([str(x) for x in g]))\n    elif n % 2 == 0:\n        for j in range(math.floor(n / 2 - 1), -1, -1):\n            a = seq[j]\n            b = seq[math.floor(j + n / 2)]\n            x = [str(a), str(b)]\n            ans += x\n    else:\n        for j in range(math.floor((n + 1) / 2 - 1), 0, -1):\n            a = seq[j]\n            b = seq[math.floor(j + (n - 1) / 2)]\n            x = [str(a), str(b)]\n            ans += x\n        ans += [str(seq[0])]\n    print(' '.join(ans))", "n = int(input())\nfor x in range(n):\n    m = int(input())\n    if m % 2 == 0:\n        for i in range(m // 2):\n            print(i + 1 + m // 2, end=' ')\n            print(i + 1, end=' ')\n        print('')\n    else:\n        print(1, end=' ')\n        for i in range(m // 2):\n            print(m // 2 + 1 - i, end=' ')\n            print(m - i, end=' ')\n        print('')", "def solve(n):\n    A = [e for e in range(1, n + 1)]\n    A1 = A[:len(A) // 2]\n    A2 = A[len(A) // 2:]\n    res = []\n    for i in range(min(len(A1), len(A2))):\n        res.append(A2[i])\n        res.append(A1[i])\n    if len(A1) != len(A2):\n        res.append(A2[len(A2) - 1])\n    return ' '.join([str(e) for e in res])\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        print(solve(n))\nmain()", "samples = int(input())\nfor i in range(samples):\n    n = int(input())\n    if n % 2 == 0:\n        for j in range(n // 2 - 1):\n            print(n // 2 - j, end=' ')\n            print(n - j, end=' ')\n        print(1, end=' ')\n        print(n // 2 + 1, end='\\n')\n    else:\n        for k in range((n + 1) // 2 - 1):\n            print((n + 1) // 2 - k, end=' ')\n            print(n - k, end=' ')\n        print(1, end='\\n')", "tests = int(input())\nfor i in range(tests):\n    n = int(input())\n    outputlist = []\n    if n % 2 == 0:\n        larger = n\n        smaller = n // 2\n        while smaller > 0:\n            outputlist.append(str(smaller))\n            outputlist.append(str(larger))\n            larger -= 1\n            smaller -= 1\n        print(' '.join(outputlist))\n    else:\n        outputlist.append(str((n + 1) // 2))\n        larger = n\n        smaller = (n - 1) // 2\n        while smaller > 0:\n            outputlist.append(str(larger))\n            outputlist.append(str(smaller))\n            larger -= 1\n            smaller -= 1\n        print(' '.join(outputlist))", "def sol(n1):\n    dt = [0] * n1\n    dt3 = [0] * n1\n    c = 0\n    (i, cnt) = (0, 0)\n    h = n1 // 2 + 1\n    for i in range(0, n1 // 2):\n        dt[i * 2] = i + 1\n        if h + dt[i * 2] <= n1:\n            dt[i * 2 + 1] = h + dt[i * 2]\n    if n1 + 1 % 2:\n        dt3[1:0] = dt\n        dt3[0] = h\n        dt = dt3[0:n1]\n    return dt\n    dt2 = dt * 2\n    f = check(n1, dt)\n    dx = dt2[h:n1 + h]\n    b = check(n1, dx)\n    if f > b:\n        return dt\n    else:\n        return dx\n\ndef check(n1, dt):\n    sol = []\n    mn = n1 + 1\n    for i in range(n1 - 1):\n        mn = min(mn, abs(dt[i + 1] - dt[i]))\n    return mn\nn = input()\nfor i in range(int(n)):\n    t = int(input())\n    dt = sol(t)\n    ans = str(dt[0])\n    for i in dt[1:]:\n        ans += ' ' + str(i)\n    print(ans)", "k = int(input(''))\nfor j in range(k):\n    n = int(input(''))\n    s = ''\n    if n % 2 == 0:\n        for i in range(int(n / 2), 0, -1):\n            s += str(i) + ' ' + str(int(i + n / 2)) + ' '\n    else:\n        for i in range(int(n / 2 + 1), 1, -1):\n            s += str(i) + ' ' + str(int(i + n / 2)) + ' '\n        s += '1'\n    print(s)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    res = [None] * n\n    mi = (n + 2) // 2\n    res[1::2] = range(1, mi)\n    res[::2] = range(mi, n + 1)\n    print(*res)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    ans = n // 2\n    if n % 2 == 0:\n        ans = n // 2\n        for j in range(n // 2, 0, -1):\n            print(j, j + ans, end=' ')\n    else:\n        for j in range(n // 2 - 1, -1, -1):\n            for k in range(j, n, ans):\n                print(k + 1, end=' ')\n    print()", "T = int(input())\nfor k in range(T):\n    N = int(input())\n    if N & 1 == 0:\n        X = N // 2\n        K = N\n        ans = []\n        for i in range(N // 2):\n            ans.append(str(X))\n            ans.append(str(K))\n            X -= 1\n            K -= 1\n    else:\n        X = N // 2\n        K = N - 1\n        ans = []\n        for i in range(N // 2):\n            ans.append(str(X))\n            ans.append(str(K))\n            X -= 1\n            K -= 1\n        ans.append(str(N))\n    print(' '.join(ans))", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    k = (m + 1) // 2\n    l = abs(k - m)\n    s = ''\n    if m % 2 == 1:\n        for j in range(1, m // 2 + 1):\n            x = j + l\n            s = s + str(x) + ' '\n            s += str(j) + ' '\n        s += str(m)\n        print(s)\n    else:\n        for j in range(1, m // 2 + 1):\n            x = j + l\n            s = s + str(x) + ' '\n            s += str(j) + ' '\n        print(s)", "a = int(input())\nfor i in range(a):\n    b = int(input())\n    c = ''\n    if b % 2 == 0:\n        for j in range(0, b // 2):\n            k = b // 2 - j\n            m = b - j\n            if k != 1:\n                c = c + str(k) + ' ' + str(m) + ' '\n            else:\n                c = c + str(k) + ' ' + str(m)\n    else:\n        for j in range(0, b // 2 + 1):\n            k = b // 2 + 1 - j\n            m = b - j\n            if k != 1:\n                c = c + str(k) + ' ' + str(m) + ' '\n            else:\n                c = c + str(k)\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    x = 0\n    y = 0\n    s = []\n    if n % 2 == 0:\n        x = [i for i in range(1, n // 2 + 1)]\n        y = [i for i in range(n // 2 + 1, n + 1)]\n    else:\n        x = [i for i in range(1, n // 2 + 1)]\n        y = [i for i in range(n // 2 + 1, n + 1)]\n    y = y[::-1]\n    x = x[::-1]\n    if len(x) == len(y):\n        for i in range(len(x)):\n            s.append(x[i])\n            s.append(y[i])\n    else:\n        s.append(y[0])\n        y = y[1:]\n        for i in range(len(y)):\n            s.append(x[i])\n            s.append(y[i])\n    print(*s)", "kolvo = int(input())\nfor i in range(kolvo):\n    length = int(input())\n    if length % 2 == 0:\n        A = list(range(1, length + 1))\n        B = A[:len(A) // 2]\n        C = A[len(A) // 2:]\n        B = list(reversed(B))\n        C = list(reversed(C))\n        ANS = list()\n        for i in range(length // 2):\n            ANS.append(B[i])\n            ANS.append(C[i])\n        ans = ' '.join((str(x) for x in ANS))\n        print(ans)\n    else:\n        A = list(range(1, length + 1))\n        B = A[:len(A) // 2]\n        C = A[len(A) // 2:]\n        B = list(reversed(B))\n        C = list(reversed(C))\n        ANS = list()\n        for i in range(length // 2):\n            ANS.append(C[i])\n            ANS.append(B[i])\n        ANS.append(len(A) // 2 + 1)\n        ans = ' '.join((str(x) for x in ANS))\n        print(ans)", "t = int(input())\n\ndef maxDiff(n):\n    jump = n // 2\n    if n % 2 == 1:\n        prev = 1\n        for i in range(n):\n            if prev % n == 0:\n                print(n, end=' ')\n            else:\n                print(prev % n, end=' ')\n            prev += jump\n    else:\n        for i in range(jump, 0, -1):\n            print(i, i + jump, end=' ')\n    print()\nfor i in range(t):\n    n = int(input())\n    maxDiff(n)", "for i in range(int(input())):\n    num = int(input())\n    re = []\n    half = num // 2\n    for i in range(1, half + 1):\n        re.append(half + i)\n        re.append(i)\n    if num % 2:\n        re.append(num)\n    print(*re)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = 1\n    a = [0] * n\n    for i in range(1, n, 2):\n        a[i] = x\n        x += 1\n    for i in range(0, n, 2):\n        a[i] = x\n        x += 1\n    _str = ''\n    for i in a:\n        _str += str(i) + ' '\n    print(_str)", "for _ in range(int(input())):\n    n = int(input())\n    l = []\n    for i in range(n // 2, 0, -1):\n        l.extend((i, i + n // 2))\n    if n % 2 != 0:\n        l.append(n)\n    print(*l)", "for n in map(int, [*open(0)][1:]):\n    print(*[(n - i - 1) // 2 + 1 + i % 2 * (n // 2 + n % 2) for i in range(n)])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = []\n    if n % 2 == 1:\n        l.append(n)\n    start = n // 2 + 1\n    if n % 2 == 1:\n        n -= 1\n    low = n // 2\n    high = n // 2 + 1\n    cnt = 0\n    for i in range(n):\n        l.append(start)\n        if cnt == 0:\n            start = (start + low) % n\n        else:\n            start = (start + high) % n\n        if start == 0:\n            start = n\n        cnt = 1 - cnt\n    print(*l)", "n = int(input())\nfor i in range(n):\n    x = int(input())\n    d = x // 2\n    for j in range((x + 1) // 2, 1, -1):\n        print(j, j + d, end=' ')\n    if x % 2 == 0:\n        print(1, 1 + d)\n    else:\n        print(1)", "for i in range(int(input())):\n    n = int(input())\n    f = 0\n    for j in range(n // 2):\n        if n % 2 == 1:\n            print(n // 2 - f + 1, n - f, end=' ')\n        else:\n            print(n // 2 - f, n - f, end=' ')\n        f += 1\n    if n % 2 == 1:\n        print(1)\n    else:\n        print('')", "for i in range(int(input())):\n    n = int(input())\n    a = ''\n    k = int(n / 2)\n    for i in range(1, int(n / 2) + 1):\n        a = a + str(i + k) + ' ' + str(i) + ' '\n        f = i\n    if n % 2 != 0:\n        print(a + str(n))\n    else:\n        print(a)", "n = int(input())\nif 1 <= n and n <= 100:\n    for i in range(n):\n        k = int(input())\n        lista = []\n        if 2 <= k and k <= 1000:\n            if k % 2 == 0:\n                for i in range(int(k / 2)):\n                    lista.append(k - int(k / 2) - i)\n                    lista.append(k - i)\n                print(' '.join(map(str, lista)))\n            else:\n                lista.append(1)\n                for i in range(int(k / 2)):\n                    lista.append(int((k + 1) / 2) - i)\n                    lista.append(k - i)\n                print(' '.join(map(str, lista)))", "n = int(input())\nfrom sys import stdin, stdout\nwhile n > 0:\n\n    def order(n):\n        out = []\n        (lo, hi) = (n // 2, n)\n        if n % 2 == 1:\n            lo += 1\n        while lo != 0:\n            out += [lo]\n            lo -= 1\n            if lo == 0:\n                break\n            out += [hi]\n            hi -= 1\n        if n % 2 == 0:\n            out += [hi]\n        print(' '.join([str(x) for x in out]))\n    order(int(input()))\n    n -= 1", "n = int(input())\nfor i in range(n):\n    al = int(input())\n    if al % 2 == 0:\n        for j in range(al // 2):\n            if j != al // 2 - 1:\n                print(-j + al // 2, -j + al, end=' ')\n            else:\n                print(-j + al // 2, -j + al)\n    else:\n        for j in range(al // 2):\n            print(al - al // 2 - j, al - j, end=' ')\n        print(1)", "for _ in range(int(input())):\n    n = int(input())\n    a = []\n    for i in range(n):\n        if i % 2 == 1:\n            v = n\n        else:\n            v = n - n // 2\n        a.append(v - i // 2)\n    print(*a)", "def helper(s):\n    start = s // 2 + 1\n    ans = [start]\n    diff = start - 1\n    c = 1\n    v = set([start])\n    while c < s:\n        if c % 2 == 1:\n            d = -diff\n        if c % 2 == 0:\n            d = diff + 1\n        start += d\n        if start in v or not 1 <= start <= s:\n            return 1\n        ans.append(start)\n        v.add(start)\n        c += 1\n    return ' '.join(list(map(str, ans)))\nfor i in range(int(input())):\n    print(helper(int(input())))", "for i in range(int(input())):\n    b = int(input())\n    s = ''\n    j = b // 2\n    while j != 0:\n        s = s + str(j) + ' ' + str(j + b // 2) + ' '\n        j -= 1\n    if b % 2 == 1:\n        s += str(b)\n    print(s)", "case = int(input())\nfor _ in range(case):\n    no = int(input())\n    if no < 4:\n        for i in range(no):\n            print(i + 1, end=' ')\n    elif no % 2 == 0:\n        n = int(no / 2)\n        for j in range(n, 0, -1):\n            print(j, end=' ')\n            print(j + n, end=' ')\n        print()\n    else:\n        n = int((no - 1) / 2)\n        for j in range(n, 0, -1):\n            print(j, end=' ')\n            print(j + n, end=' ')\n        print(no, end=' ')\n        print()", "def getint():\n    return int(input())\n\ndef getfloat():\n    return float(input())\n\ndef getints():\n    return list(map(int, input().split()))\n\ndef getfloats():\n    return list(map(float, input().split()))\nT = getint()\nfor i in range(T):\n    n = getint()\n    ans = []\n    if n % 2 == 0:\n        for j in range(n // 2, 0, -1):\n            ans.append(str(j))\n            ans.append(str(j + n // 2))\n    else:\n        ans.append(str(n // 2 + 1))\n        for j in range(n // 2, 0, -1):\n            ans.append(str(j + n // 2 + 1))\n            ans.append(str(j))\n    print(' '.join(ans))", "def main():\n    n = int(input())\n    for i in range(n // 2, 0, -1):\n        print(f'{i} {i + n // 2} ', end='')\n    if n % 2 == 1:\n        print(n)\n    else:\n        print()\nfor _ in range(int(input())):\n    main()", "for m in map(int, [*open(0)][1:]):\n    print(*[(m - i - 1) // 2 + 1 + i % 2 * (m // 2 + m % 2) for i in range(m)])", "cases = int(input())\noutputs = []\nfor i in range(cases):\n    n = int(input())\n    numbers = [i for i in range(1, n + 1)]\n    outputString = ''\n    if len(numbers) % 2 == 0:\n        mid = n // 2\n        while mid >= 1:\n            outputString += str(numbers[mid - 1]) + ' '\n            outputString += str(numbers[n - 1]) + ' '\n            mid -= 1\n            n -= 1\n    else:\n        mid = n // 2\n        outputString += str(numbers[n - 1]) + ' '\n        while mid >= 1:\n            outputString += str(numbers[mid - 1]) + ' '\n            outputString += str(numbers[n - 2]) + ' '\n            mid -= 1\n            n -= 1\n    outputString.strip()\n    outputs.append(outputString)\nfor i in range(len(outputs)):\n    print(outputs[i])", "n = int(input())\nfor _ in range(n):\n    m = int(input())\n    a = []\n    b = []\n    res = []\n    for i in range(1, (m + 1) // 2 + 1):\n        a.append(i)\n    for j in range(int(m + 1) // 2 + 1, m + 1):\n        b.append(j)\n    if m % 2 == 0:\n        for k in range(m // 2):\n            res.append(b[k])\n            res.append(a[k])\n    else:\n        for l in range(m // 2):\n            res.append(a[l])\n            res.append(b[l])\n        res.append(a.pop())\n    print(*res)", "x = int(input())\nfor i in range(x):\n    n = int(input())\n    for j in range(1, n // 2 + 1):\n        print(j + n // 2, j, sep=' ', end=' ')\n    if n % 2 == 0:\n        print()\n    else:\n        print(n)", "for _ in range(int(input())):\n    n = int(input())\n    mid = n // 2 + 1\n    if n & 1 == 1:\n        print(n, end=' ')\n    for i in range(1, mid):\n        print(mid, end=' ')\n        print(i, end=' ')\n        mid += 1\n    print()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        L = []\n        for i in range(n // 2):\n            L.append(n // 2 - i)\n            L.append(n - i)\n        print(*L)\n    else:\n        L = []\n        for i in range(n // 2):\n            L.append(n // 2 + 1 - i)\n            L.append(n - i)\n        L.append(1)\n        print(*L)", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    if m <= 3:\n        for i in range(1, m + 1):\n            print(i, end=' ')\n    elif m == 4:\n        print(2, 4, 1, 3, sep=' ')\n    else:\n        i = m // 2\n        j = 0\n        a = []\n        while i != m:\n            i += 1\n            j += 1\n            a.append(i)\n            a.append(j)\n        if m % 2 != 0:\n            a.pop(-1)\n        print(*a)", "for n in map(int, [*open(0)][1:]):\n    print(*[(n - i - 1) // 2 + 1 + i % 2 * (n // 2 + n % 2) for i in range(n)])", "t = int(input())\nfor i in range(t):\n    p = int(input())\n    l = []\n    for j in range(1, p + 1):\n        l.append(j)\n    l1 = []\n    l2 = []\n    l3 = []\n    if p % 2 == 0:\n        l1 = l[:p // 2]\n        l2 = l[p // 2:]\n        for k in range(len(l1)):\n            l3.append(l2[k])\n            l3.append(l1[k])\n    else:\n        l1 = l[:p // 2]\n        l2 = l[p // 2 + 1:]\n        for k in range(len(l1)):\n            l3.append(l1[k])\n            l3.append(l2[k])\n        l3.insert(0, l[p // 2])\n    l3 = ' '.join(map(str, l3))\n    print(l3)", "n = int(input())\nfor k in range(n):\n    n = int(input())\n    bottom_half = list(range(1, n // 2 + 1))\n    top_half = list(range(n // 2 + 1, n + 1))\n    answer = []\n    j = 0\n    k = 0\n    for i in range(n):\n        if i % 2 == 0:\n            answer.append(top_half[j])\n            j += 1\n        else:\n            answer.append(bottom_half[k])\n            k += 1\n    answer = ' '.join(map(str, answer))\n    print(answer)", "import math\ntest = int(input())\nfor i in range(test):\n    inputs = int(input())\n    listy = ''\n    for i in range(inputs // 2):\n        listy = listy + str(math.ceil(inputs / 2) - i) + ' '\n        listy = listy + str(math.ceil(inputs / 2) - i + math.floor(inputs / 2)) + ' '\n    if inputs % 2 == 1:\n        listy += '1'\n    print(listy)", "t = int(input())\nfor i1 in range(t):\n    n = int(input())\n    s = [1 + n // 2, 1]\n    for i in range(3, n + 1):\n        if i == n and i % 2 != 0:\n            s.append(n)\n        else:\n            s.append(s[-2] + 1)\n    print(*s)", "t = int(input(''))\na1 = []\nfor i in range(t):\n    y = int(input(''))\n    a1.append(y)\nfor j in range(t):\n    a = a1[j]\n    list = []\n    if a % 2 == 0:\n        first = a // 2\n        last = a\n        while last != a // 2:\n            list.append(first)\n            list.append(last)\n            first -= 1\n            last -= 1\n    else:\n        last = a - 1\n        first = last // 2\n        while last != (a - 1) // 2:\n            list.append(first)\n            list.append(last)\n            first -= 1\n            last -= 1\n        list.append(a)\n    for i in list:\n        print(i, end=' ')\n    print('')\n    list.clear()"]