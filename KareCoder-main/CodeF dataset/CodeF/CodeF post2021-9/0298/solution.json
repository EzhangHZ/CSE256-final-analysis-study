["import sys\n\ndef solution(array):\n    max_even = 0\n    max_odd = 0\n    for a in array:\n        if a % 2 == 0:\n            if a < max_even:\n                print('No')\n                return\n            else:\n                max_even = a\n        elif a < max_odd:\n            print('No')\n            return\n        else:\n            max_odd = a\n    print('Yes')\n    return\ninput = sys.stdin.read().splitlines()\nt = int(input[0])\noffset = 1\nfor test in range(t):\n    n = input[2 * test + offset]\n    array = input[2 * test + offset + 1].split(' ')\n    array = [int(e) for e in array]\n    solution(array)", "import sys\nT = int(sys.stdin.readline())\nfor t in range(T):\n    n = int(sys.stdin.readline())\n    a = [int(x) for x in sys.stdin.readline().split(' ')]\n    odd = -1\n    even = 0\n    flag = True\n    for x in a:\n        if x % 2 == 1:\n            if odd > x:\n                flag = False\n                break\n            odd = x\n        else:\n            if even > x:\n                flag = False\n                break\n            even = x\n    if flag:\n        print('Yes')\n    else:\n        print('No')", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    n = int(inp())\n    a = list(map(int, inp().split()))\n    b = [[], []]\n    for i in a:\n        b[i % 2].append(i)\n    for i in b:\n        if i != sorted(i):\n            print('No')\n            return\n    print('Yes')\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "import sys\nfrom typing import List\n\ndef sol(perm: List[int]) -> bool:\n    biggest_odd = 0\n    biggest_even = 0\n    for number in perm:\n        if number % 2 == 0:\n            if biggest_even > number:\n                return False\n            biggest_even = max(number, biggest_even)\n        else:\n            if biggest_odd > number:\n                return False\n            biggest_odd = max(number, biggest_odd)\n    return True\n\ndef main():\n    inp = sys.stdin.readlines()\n    rest = inp[1:]\n    permutations = rest[1::2]\n    permutations = [[int(num) for num in line.split()] for line in permutations]\n    for perm in permutations:\n        if sol(perm):\n            print('Yes')\n        else:\n            print('No')\nmain()", "for s in [*open(0)][2::2]:\n    a = [[], []]\n    for x in map(int, s.split()):\n        a[x & 1] += (x,)\n    print('YNeos'[any((x > sorted(x) for x in a))::2])", "for s in [*open(0)][2::2]:\n    a = [[], []]\n    for x in map(int, s.split()):\n        a[x & 1] += (x,)\n    print('YNeos'[any((x > sorted(x) for x in a))::2])", "for s in [*open(0)][2::2]:\n    a = [[], []]\n    for x in map(int, s.split()):\n        a[x & 1] += (x,)\n    print('YNeos'[any((x > sorted(x) for x in a))::2])", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (o, e) = ([], [])\n    for i in arr:\n        if i % 2 != 0:\n            o.append(i)\n        else:\n            e.append(i)\n    (te, to) = (e[:], o[:])\n    te.sort()\n    to.sort()\n    if te == e and to == o:\n        print('Yes')\n    else:\n        print('No')", "for s in [*open(0)][2::2]:\n    a = [[], []]\n    for x in map(int, s.split()):\n        a[x & 1] += (x,)\n    print('YNeos'[any((x > sorted(x) for x in a))::2])", "for s in [*open(0)][2::2]:\n    a = [[], []]\n    for x in map(int, s.split()):\n        a[x & 1] += (x,)\n    print('YNeos'[any((x > sorted(x) for x in a))::2])", "for s in [*open(0)][2::2]:\n    a = [[], []]\n    for x in map(int, s.split()):\n        a[x & 1] += (x,)\n    print('YNeos'[any((x > sorted(x) for x in a))::2])", "for s in [*open(0)][2::2]:\n    a = [[], []]\n    for x in map(int, s.split()):\n        a[x & 1] += (x,)\n    print('YNeos'[any((x > sorted(x) for x in a))::2])", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    a = []\n    b = []\n    for i in range(n):\n        if A[i] % 2 == 0:\n            a.append(A[i])\n        else:\n            b.append(A[i])\n    if a == sorted(a) and b == sorted(b):\n        print('Yes')\n    else:\n        print('No')", "import sys\ninput = sys.stdin.readline\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    odd = -1\n    even = -1\n    ans = True\n    for i in range(n):\n        if a[i] % 2 == 0:\n            if a[i] < even:\n                ans = False\n                break\n            else:\n                even = a[i]\n        elif a[i] < odd:\n            ans = False\n            break\n        else:\n            odd = a[i]\n    if not ans:\n        print('No')\n    else:\n        print('Yes')", "for s in [*open(0)][2::2]:\n    a = [[], []]\n    for x in map(int, s.split()):\n        a[x & 1] += (x,)\n    print('YNeos'[any((x > sorted(x) for x in a))::2])", "import sys\ninput = sys.stdin.readline\n\ndef solve(n, arr):\n    maxEven = -float('inf') if arr[0] % 2 == 1 else arr[0]\n    maxOdd = -float('inf') if arr[0] % 2 == 0 else arr[0]\n    prev = arr[0]\n    for curr in arr:\n        if curr % 2 == 0:\n            if maxEven > curr:\n                print('No')\n                return\n            maxEven = max(maxEven, curr)\n        else:\n            if maxOdd > curr:\n                print('No')\n                return\n            maxOdd = max(maxOdd, curr)\n    print('Yes')\n    return\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    solve(n, arr)", "import sys\ninput = sys.stdin.readline\n\ndef solve(n, arr):\n    maxEven = -float('inf') if arr[0] % 2 == 1 else arr[0]\n    maxOdd = -float('inf') if arr[0] % 2 == 0 else arr[0]\n    for i in range(1, n):\n        if arr[i - 1] <= arr[i]:\n            if arr[i] % 2 == 0:\n                maxEven = max(maxEven, arr[i])\n            else:\n                maxOdd = max(maxOdd, arr[i])\n            continue\n        if (arr[i - 1] + arr[i]) % 2 == 0:\n            print('No')\n            return\n        if arr[i] % 2 == 0 and maxEven > arr[i]:\n            print('No')\n            return\n        if arr[i] % 2 == 1 and maxOdd > arr[i]:\n            print('No')\n            return\n        if arr[i] % 2 == 0:\n            maxEven = max(maxEven, arr[i])\n        else:\n            maxOdd = max(maxOdd, arr[i])\n        (arr[i - 1], arr[i]) = (arr[i], arr[i - 1])\n    print('Yes')\n    return\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    solve(n, arr)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    odd = []\n    even = []\n    for i in a:\n        if i & 1:\n            odd.append(i)\n        else:\n            even.append(i)\n    if odd == sorted(odd) and even == sorted(even):\n        print('Yes')\n    else:\n        print('No')", "for s in [*open(0)][2::2]:\n    a = list(map(int, s.split()))\n    cls = [[], []]\n    for n in a:\n        cls[n & 1] += (n,)\n    print('No' if any((c > sorted(c) for c in cls)) else 'Yes')", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    a = []\n    b = []\n    for i in range(n):\n        if A[i] % 2 == 0:\n            a.append(A[i])\n        else:\n            b.append(A[i])\n    if a == sorted(a) and b == sorted(b):\n        print('Yes')\n    else:\n        print('No')", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split(' ')]\n    o = []\n    e = []\n    for j in range(n):\n        if a[j] % 2 == 0:\n            e.append(a[j])\n        else:\n            o.append(a[j])\n    if e == sorted(e) and o == sorted(o):\n        res = 'Yes'\n    else:\n        res = 'No'\n    print(res)", "for s in [*open(0)][2::2]:\n    a = [*map(int, s.split())]\n    last_ev = len(a) - 1\n    ods = []\n    evs = []\n    for (i, v) in enumerate(a):\n        if v % 2:\n            ods.append(v)\n            last_ev = i\n        else:\n            evs.append(v)\n    not_pos = False\n    for i in range(1, len(evs)):\n        if evs[i] >= evs[i - 1]:\n            continue\n        else:\n            not_pos = True\n    for i in range(1, len(ods)):\n        if ods[i] >= ods[i - 1]:\n            continue\n        else:\n            not_pos = True\n    if not_pos:\n        print('No')\n        continue\n    else:\n        print('Yes')", "for s in [*open(0)][2::2]:\n    a = list(map(int, s.split()))\n    cls = [[], []]\n    for n in a:\n        cls[n & 1] += (n,)\n    print('No' if any((c > sorted(c) for c in cls)) else 'Yes')", "import sys\ninput = sys.stdin.readline\nsI = lambda : input()\niI = lambda : int(input())\nmI = lambda : map(int, input().split())\nlI = lambda : list(mI())\nfor _ in range(iI()):\n    n = iI()\n    a = lI()\n    odd = [i for i in a if i % 2]\n    ev = [i for i in a if i % 2 == 0]\n    if odd == sorted(odd) and ev == sorted(ev):\n        print('Yes')\n    else:\n        print('No')", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    a = []\n    b = []\n    for i in range(n):\n        if A[i] % 2 == 0:\n            a.append(A[i])\n        else:\n            b.append(A[i])\n    if a == sorted(a) and b == sorted(b):\n        print('Yes')\n    else:\n        print('No')", "import sys\ninput = sys.stdin.readline\n\ndef sorted(iter):\n    return all((iter[i] <= iter[i + 1] for i in range(len(iter) - 1)))\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    even = []\n    odd = []\n    for num in a:\n        if num % 2 == 0:\n            even.append(num)\n        else:\n            odd.append(num)\n    if sorted(even) and sorted(odd):\n        print('Yes')\n    else:\n        print('No')", "cases = int(input())\nans = []\nfor _ in range(cases):\n    num = int(input())\n    arr = list(map(int, input().split()))\n    odds = [n for n in arr if n % 2]\n    evens = [n for n in arr if n % 2 == 0]\n    if sorted(odds) == odds and sorted(evens) == evens:\n        ans.append('Yes')\n    else:\n        ans.append('No')\nfor a in ans:\n    print(a)", "N = int(input())\ninputs = []\nfor i in range(N):\n    num = int(input())\n    arr = list(map(int, input().split()))\n    inputs.append(arr)\nans = []\nfor arr in inputs:\n    left = right = -1\n    check = True\n    for i in range(len(arr)):\n        if arr[i] % 2 == 1:\n            if arr[i] < right:\n                check = False\n                break\n            right = arr[i]\n            continue\n        if arr[i] < left:\n            check = False\n            break\n        left = arr[i]\n    if check:\n        ans.append('Yes')\n    else:\n        ans.append('No')\nfor elm in ans:\n    print(elm)", "import sys\nimport io\nimport math\nimport collections\nimport decimal\nimport itertools\nimport bisect\nimport heapq\nfrom unittest import TestCase\n\ndef input():\n    return sys.stdin.readline()[:-1]\nINF = 10 ** 10\nYES = 'Yes'\nNO = 'No'\n\ndef solve(N, A):\n    v = 0\n    for a in A:\n        if a % 2 == 0:\n            if v > a:\n                return 'No'\n            v = a\n    v = 0\n    for a in A:\n        if a % 2 == 1:\n            if v > a:\n                return 'No'\n            v = a\n    return 'Yes'\nT0 = int(input())\nfor _ in range(T0):\n    N = int(input())\n    A = list(map(int, input().split()))\n    print(solve(N, A))", "t = int(input())\nresults = []\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    a = [x for x in arr if x % 2 == 0]\n    b = [x for x in arr if x % 2 == 1]\n    flag = True\n    for i in range(len(a) - 1):\n        if a[i] > a[i + 1]:\n            flag = False\n            break\n    for i in range(len(b) - 1):\n        if b[i] > b[i + 1]:\n            flag = False\n            break\n    results.append('Yes' if flag else 'No')\nfor r in results:\n    print(r)", "t = int(input())\nans = ['Yes'] * t\nfor q in range(t):\n    chet = []\n    nech = []\n    n = int(input())\n    arr = [*map(int, input().split())]\n    for i in range(len(arr)):\n        if arr[i] % 2 == 0:\n            chet.append(arr[i])\n        if arr[i] % 2 == 1:\n            nech.append(arr[i])\n    if len(nech) > 0:\n        for y in range(len(nech) - 1):\n            if nech[y] > nech[y + 1]:\n                ans[q] = 'No'\n                break\n    if len(chet) > 0:\n        for x in range(len(chet) - 1):\n            if chet[x] > chet[x + 1]:\n                ans[q] = 'No'\n                break\nfor r in range(t):\n    print(ans[r])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n == 1:\n        a = int(input())\n        print('Yes')\n    else:\n        a = list(map(int, input().split()))\n        a_even = []\n        a_odd = []\n        for i in range(n):\n            if a[i] % 2 == 0:\n                a_even.append(a[i])\n            else:\n                a_odd.append(a[i])\n        a.sort()\n        i_even = 0\n        i_odd = 0\n        for i in range(n):\n            if a[i] % 2 == 0 and a[i] == a_even[i_even]:\n                i_even += 1\n            elif a[i] % 2 == 1 and a[i] == a_odd[i_odd]:\n                i_odd += 1\n            else:\n                print('No')\n                break\n        else:\n            print('Yes')", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    shu = [0, 0]\n    k = 0\n    if arr == sorted(arr):\n        print('Yes')\n    else:\n        for i in range(n):\n            if arr[i] % 2 == 1:\n                if arr[i] >= shu[1]:\n                    shu[1] = arr[i]\n                else:\n                    print('No')\n                    break\n            elif arr[i] >= shu[0]:\n                shu[0] = arr[i]\n            else:\n                print('No')\n                break\n        else:\n            print('Yes')", "def solve(l):\n    if len(l) == 1:\n        return True\n    pairs = -1\n    impairs = -1\n    for elem in l:\n        if elem % 2 == 0:\n            if elem < pairs:\n                return False\n            else:\n                pairs = elem\n        elif elem < impairs:\n            return False\n        else:\n            impairs = elem\n    return True\nfor _ in range(int(input())):\n    x = int(input())\n    l = [int(i) for i in input().split()]\n    if solve(l):\n        print('Yes')\n    else:\n        print('No')", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_ls():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        ls = get_ls()\n        odd = []\n        even = []\n        for x in ls:\n            if x % 2 == 0:\n                even.append(x)\n            else:\n                odd.append(x)\n        t1 = odd.copy()\n        t2 = even.copy()\n        t1.sort()\n        t2.sort()\n        if t1 == odd and t2 == even:\n            print('Yes')\n        else:\n            print('No')\nmain()", "def solveB(a):\n    if len(a) == 1:\n        return 'Yes'\n    prevOdd = float('-inf')\n    prevEven = float('-inf')\n    for value in a:\n        if value % 2 == 0 and prevEven <= value:\n            prevEven = value\n        elif value % 2 == 1 and prevOdd <= value:\n            prevOdd = value\n        else:\n            return 'No'\n    return 'Yes'\nnum_tests = int(input().split()[0])\nfor t in range(num_tests):\n    n = int(input().split()[0])\n    a = [int(x) for x in input().split()]\n    print(solveB(a))"]