["def main():\n    t = int(input())\n    for _ in range(t):\n        (n, x) = [int(i) for i in input().split()]\n        x *= 2\n        a = [int(i) for i in input().split()]\n        (min_cur, max_cur) = (a[0], a[0])\n        res = 0\n        for i in a:\n            if i < min_cur:\n                min_cur = i\n            if i > max_cur:\n                max_cur = i\n            delta = max_cur - min_cur\n            if delta > x:\n                res += 1\n                (min_cur, max_cur) = (i, i)\n        print(res)\nmain()", "t = int(input())\nsol = []\nfor _ in range(t):\n    (n, x) = [int(x) for x in input().split()]\n    first = True\n    count = 0\n    nums = [int(x) for x in input().split()]\n    mmin = nums[0]\n    mmax = nums[0]\n    for num in nums:\n        if num > mmax:\n            mmax = num\n        if num < mmin:\n            mmin = num\n        if mmax - mmin > 2 * x:\n            count += 1\n            mmax = num\n            mmin = num\n    sol.append(count)\nfor s in sol:\n    print(s)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    x *= 2\n    t1 = t2 = 0 - 10 ** 12\n    k = -1\n    for i in a:\n        if i < t1:\n            if t2 - i <= x:\n                t1 = i\n            else:\n                k += 1\n                t1 = t2 = i\n        elif i > t2:\n            if i - t1 <= x:\n                t2 = i\n            else:\n                k += 1\n                t1 = t2 = i\n    print(k)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    g = x * 2 + 1\n    a = b = l[0]\n    ans = 0\n    for y in l:\n        if y < a:\n            a = y\n        if y > b:\n            b = y\n        if b - a >= g:\n            ans += 1\n            b = y\n            a = y\n    print(ans)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nwhile t > 0:\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = 0\n    max = l[0]\n    min = l[0]\n    for i in l[1:]:\n        if i > max:\n            max = i\n        if i < min:\n            min = i\n        if max - min > 2 * x:\n            c += 1\n            max = min = i\n    sys.stdout.write(str(c) + '\\n')\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    Food_Pile = [int(x) for x in input().split()]\n    Cap = x * 2\n    _max = Food_Pile[0]\n    _min = Food_Pile[0]\n    count = 0\n    for size in Food_Pile:\n        if size >= _max:\n            _max = size\n            if _max - _min > Cap:\n                count += 1\n                _min = size\n        elif size < _min:\n            _min = size\n            if _max - _min > Cap:\n                count += 1\n                _max = size\n    print(count)", "trials = int(input())\nanswer_list = []\nfor _ in range(trials):\n    i = input().split(' ')\n    l = int(i[0])\n    d = int(i[1])\n    li = input().split(' ')\n    ans = 0\n    mini = int(li[0])\n    maxi = int(li[0])\n    for k in li:\n        i = int(k)\n        if i > maxi:\n            maxi = i\n        if i < mini:\n            mini = i\n        if maxi - mini > d * 2:\n            maxi = i\n            mini = i\n            ans += 1\n    answer_list.append(ans)\nfor g in answer_list:\n    print(g)", "import sys\nt = int(input())\nfor _ in range(t):\n    nm = [int(ii) for ii in input().split()]\n    (n, x) = (nm[0], nm[1])\n    mas = [int(ii) for ii in input().split()]\n    (a, b) = (mas[0], mas[0])\n    ans = 0\n    for i in mas:\n        if i < a:\n            a = i\n        elif i > b:\n            b = i\n        if b - a > 2 * x:\n            ans += 1\n            (a, b) = (i, i)\n    print(ans)", "def print_food_diff(n, x, arr):\n    if n == 1:\n        print(0)\n        return\n    count = 0\n    maxi = arr[0]\n    mini = arr[0]\n    for i in range(1, n):\n        if arr[i] > maxi:\n            maxi = arr[i]\n        if arr[i] < mini:\n            mini = arr[i]\n        if maxi - mini > 2 * x:\n            count += 1\n            maxi = arr[i]\n            mini = arr[i]\n    print(count)\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        (n, x) = map(int, input().split())\n        arr = list(map(int, input().split()))\n        print_food_diff(n, x, arr)\nmain()", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    (n, x) = map(int, inp().split())\n    m = int(2000000000.0)\n    M = int(-2000000000.0)\n    x *= 2\n    r = 0\n    for v in map(int, inp().split()):\n        mm = min(m, v)\n        MM = max(M, v)\n        if MM - mm > x:\n            r += 1\n            m = v\n            M = v\n        else:\n            m = mm\n            M = MM\n    print(r)\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "def main():\n    for t in range(int(input())):\n        (n, x) = map(int, input().split())\n        a = list(map(int, input().split()))\n        (mi, mx) = (271644049215, 0)\n        ans = 0\n        for i in range(n):\n            if a[i] < mi:\n                mi = a[i]\n            if a[i] > mx:\n                mx = a[i]\n            if abs(mx - mi) > 2 * x:\n                ans += 1\n                (mx, mi) = (a[i], a[i])\n        print(ans)\nmain()", "def solve():\n    (n, x) = map(int, input().split())\n    ls = list(map(int, input().split()))\n    ret = 0\n    min_ = 10 ** 9\n    max_ = -10 ** 9\n    for i in range(n):\n        if ls[i] < min_:\n            min_ = ls[i]\n        if ls[i] > max_:\n            max_ = ls[i]\n        if 2 * x < max_ - min_:\n            max_ = ls[i]\n            min_ = max_\n            ret += 1\n    print(ret)\nt = int(input())\nfor i in range(t):\n    solve()", "t = int(input())\nfor _ in range(t):\n    (n, x) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    k = 0\n    (lo, hi) = (a[0], a[0])\n    for y in a[1:]:\n        if y > hi or y < lo:\n            if y - lo > 2 * x or hi - y > 2 * x:\n                (lo, hi) = (y, y)\n                k += 1\n            else:\n                hi = max(hi, y)\n                lo = min(lo, y)\n    print(k)", "def ss(a, n, k):\n    i = 0\n    count = 0\n    (l, r) = (a[0], a[0])\n    while i < n:\n        if abs(r - l) > 2 * k:\n            count += 1\n            l = a[i - 1]\n            r = a[i - 1]\n        if a[i] < l:\n            l = a[i]\n        if a[i] > r:\n            r = a[i]\n        i += 1\n    if abs(l - a[-1]) > 2 * k or abs(r - a[-1]) > 2 * k:\n        count += 1\n    return count\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(ss(a, n, k))", "def solve(a, x):\n    lim_sup = a[0] + x\n    lim_inf = a[0] - x\n    changes = 0\n    for e in a:\n        new_lim_sup = e + x\n        new_lim_inf = e - x\n        if lim_sup < new_lim_inf or new_lim_sup < lim_inf:\n            changes += 1\n            lim_sup = new_lim_sup\n            lim_inf = new_lim_inf\n        else:\n            lim_sup = min(lim_sup, new_lim_sup)\n            lim_inf = max(lim_inf, new_lim_inf)\n    return changes\nt = int(input())\nfor _ in range(t):\n    (n, x) = [int(e) for e in input().split()]\n    a = [int(e) for e in input().split()]\n    print(solve(a, x))", "def answer_finder():\n    (number_of_piles, max_affinity_luke) = [int(val) for val in input().split()]\n    input_array = [int(val) for val in input().split()]\n    number_of_piles_array_handler = input_array[0] - max_affinity_luke\n    max_affinity_luke_array_handler = input_array[0] + max_affinity_luke\n    result_that_will_be_printed = 0\n    for i in range(1, number_of_piles):\n        if input_array[i] - max_affinity_luke > max_affinity_luke_array_handler or input_array[i] + max_affinity_luke < number_of_piles_array_handler:\n            result_that_will_be_printed += 1\n            number_of_piles_array_handler = input_array[i] - max_affinity_luke\n            max_affinity_luke_array_handler = input_array[i] + max_affinity_luke\n        else:\n            if input_array[i] - max_affinity_luke > number_of_piles_array_handler:\n                number_of_piles_array_handler = input_array[i] - max_affinity_luke\n            if input_array[i] + max_affinity_luke < max_affinity_luke_array_handler:\n                max_affinity_luke_array_handler = input_array[i] + max_affinity_luke\n    print(result_that_will_be_printed)\ntest_cases = int(input())\nwhile test_cases:\n    test_cases -= 1\n    answer_finder()", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    mi = ma = arr[0]\n    ans = 0\n    for i in range(n):\n        mi = min(mi, arr[i])\n        ma = max(ma, arr[i])\n        if ma - mi <= 2 * x:\n            continue\n        ans += 1\n        ma = mi = arr[i]\n    return ans\nfor _ in range(int(input())):\n    print(solve())", "from math import inf\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    maxM = -inf\n    minM = inf\n    c = 0\n    for i in a:\n        if i > maxM:\n            maxM = i\n        if i < minM:\n            minM = i\n        if maxM - minM > 2 * x:\n            c += 1\n            minM = i\n            maxM = i\n    print(c)", "def ss(l, x):\n    ans = 0\n    mx = l[0]\n    mn = l[0]\n    for i in l:\n        mx = max(mx, i)\n        mn = min(mn, i)\n        if mx - mn > 2 * x:\n            ans += 1\n            mx = i\n            mn = i\n    return ans\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    print(ss(l, x))", "def solve(x, A):\n    cn = 0\n    c_min = A[0] - x\n    c_max = A[0] + x\n    for v in A:\n        min_v = v - x\n        max_v = v + x\n        if c_max < min_v or c_min > max_v:\n            cn += 1\n            c_min = min_v\n            c_max = max_v\n        else:\n            c_min = max(c_min, min_v)\n            c_max = min(c_max, max_v)\n    return cn\n\ndef read():\n    s = input().strip('\\n').split(' ')\n    (n, x) = (int(s[0]), int(s[1]))\n    s = input().strip('\\n').split(' ')\n    A = [int(x) for x in s]\n    return (x, A)\n\ndef main():\n    n = int(input())\n    for _ in range(n):\n        (x, A) = read()\n        res = solve(x, A)\n        print(res)\n        pass\n    pass\nmain()", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    m1 = a[0] - x\n    m2 = a[0] + x\n    q = 0\n    for i in range(1, n):\n        if a[i] + x < m1 or a[i] - x > m2:\n            q += 1\n            m1 = a[i] - x\n            m2 = a[i] + x\n        else:\n            if a[i] + x < m2:\n                m2 = a[i] + x\n            if a[i] - x > m1:\n                m1 = a[i] - x\n    print(q)", "def solve():\n    (n, x) = map(int, input().split(' '))\n    lst = list(map(int, input().split(' ')))\n    mx = lst[0]\n    mn = lst[0]\n    ans = 0\n    for i in lst:\n        (mx, mn) = (max(i, mx), min(i, mn))\n        if mx - mn > 2 * x:\n            ans += 1\n            (mx, mn) = (i, i)\n    print(ans)\nt = int(input())\nwhile t:\n    t -= 1\n    solve()", "T = int(input())\nwhile T > 0:\n    T -= 1\n    S = input().split()\n    a = [int(x) for x in S]\n    n = a[0]\n    m = a[1]\n    S = input().split()\n    a = [int(x) for x in S]\n    minx = a[0]\n    maxx = a[0]\n    ans = 0\n    for x in a:\n        if minx > x:\n            minx = x\n        if maxx < x:\n            maxx = x\n        if maxx - minx > m + m:\n            ans += 1\n            maxx = x\n            minx = x\n    print(ans)", "num_inp = lambda : int(input())\narr_inp = lambda : list(map(int, input().split()))\nsp_inp = lambda : map(int, input().split())\nstr_inp = lambda : input()\nt = num_inp()\nfor _ in range(t):\n    (n, x) = sp_inp()\n    l = arr_inp()\n    count = 0\n    min = l[0]\n    max = l[0]\n    for i in range(1, n):\n        if l[i] > max:\n            max = l[i]\n        elif l[i] < min:\n            min = l[i]\n        if max - min > 2 * x:\n            count += 1\n            max = l[i]\n            min = l[i]\n    print(count)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = 0\n    maxi = l[0]\n    mini = l[0]\n    for i in l[1:]:\n        if i > maxi:\n            maxi = i\n        if i < mini:\n            mini = i\n        if maxi - x > mini + x:\n            c += 1\n            maxi = mini = i\n    print(c)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    z = list(map(int, input().split()))\n    diff = 2 * k\n    num_max = z[0]\n    num_min = z[0]\n    count = 0\n    if max(z) - min(z) <= diff:\n        print(0)\n    else:\n        for i in range(len(z)):\n            if z[i] > num_max:\n                num_max = z[i]\n            if z[i] < num_min:\n                num_min = z[i]\n            if num_max - num_min > diff:\n                count += 1\n                num_min = num_max = z[i]\n        print(count)", "test_cases = int(input())\n\ndef handle():\n    (n, x) = input().split(' ')\n    n = int(n)\n    x = int(x)\n    food_piles = [int(s) for s in input().split(' ')]\n    changes = 0\n    min_so_far = food_piles[0]\n    max_so_far = food_piles[0]\n    for i in range(1, len(food_piles)):\n        value = food_piles[i]\n        min_so_far = min(min_so_far, value)\n        max_so_far = max(max_so_far, value)\n        if max_so_far - (min_so_far + x) > x:\n            changes += 1\n            min_so_far = value\n            max_so_far = value\n    return changes\nfor _ in range(test_cases):\n    print(handle())", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    L = list(map(int, input().split()))\n    mi = L[0]\n    ma = L[0]\n    i = 1\n    ans = 0\n    while i < n:\n        a = L[i]\n        if a > ma:\n            if a - mi <= 2 * x:\n                mi = min(a, mi)\n                ma = max(ma, a)\n            else:\n                ans += 1\n                mi = a\n                ma = a\n        elif a < mi:\n            if ma - a <= 2 * x:\n                mi = min(a, mi)\n                ma = max(ma, a)\n            else:\n                ans += 1\n                mi = a\n                ma = a\n        else:\n            pass\n        i += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    count = 0\n    l = arr[0]\n    h = arr[0]\n    for i in range(n):\n        if arr[i] < l:\n            l = arr[i]\n        if arr[i] > h:\n            h = arr[i]\n        if h - l > 2 * x:\n            count += 1\n            if i < n - 1:\n                l = arr[i]\n                h = arr[i]\n    print(count)", "from typing import List\nfrom collections import defaultdict\nfrom collections import deque\n\nclass Solution:\n\n    def solve(self, n, x, a):\n        count = 0\n        (li, hi) = (a[0] - x, a[0] + x)\n        for j in range(1, n):\n            (lj, hj) = (a[j] - x, a[j] + x)\n            if hj < li or hi < lj:\n                count += 1\n                (li, hi) = (lj, hj)\n            else:\n                li = max(li, lj)\n                hi = min(hi, hj)\n        return count\nobj = Solution()\nT = int(input())\nfor _ in range(T):\n    (n, x) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    ans = obj.solve(n, x, a)\n    print(ans)", "t = int(input())\nwhile t > 0:\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    mi = float('inf')\n    ma = float('-inf')\n    ans = 0\n    for i in range(n):\n        if a[i] > ma:\n            ma = a[i]\n        if a[i] < mi:\n            mi = a[i]\n        if ma - mi > 2 * x:\n            ans += 1\n            mi = a[i]\n            ma = a[i]\n    print(ans)\n    t = t - 1", "import sys\nt = int(input())\nwhile t:\n    (p, q) = map(int, input().split())\n    s = list(map(int, input().split()))\n    check = 0\n    (m, n) = (sys.maxsize, -sys.maxsize - 1)\n    d = 0\n    while d < p:\n        if s[d] > n:\n            n = s[d]\n        if s[d] < m:\n            m = s[d]\n        if n - m > 2 * q:\n            check += 1\n            (m, n) = (s[d], s[d])\n        d += 1\n    print(check)\n    t -= 1", "for i in range(int(input())):\n    (a, b) = input().split(' ')\n    n = int(a)\n    x = int(b)\n    numbers = [int(x) for x in input().split(' ')]\n    change = 0\n    if n > 1:\n        i = 1\n        smaller = numbers[0]\n        bigger = numbers[0]\n        while i <= n - 1:\n            if numbers[i] > bigger:\n                bigger = numbers[i]\n            if numbers[i] < smaller:\n                smaller = numbers[i]\n            if bigger - smaller > 2 * x:\n                change += 1\n                smaller = numbers[i]\n                bigger = numbers[i]\n            i += 1\n    print(change)", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    maxi = mini = a[0]\n    c = 0\n    for i in range(1, n):\n        maxi = a[i] if a[i] > maxi else maxi\n        mini = a[i] if a[i] < mini else mini\n        if maxi - mini > 2 * x:\n            maxi = mini = a[i]\n            c += 1\n    print(c)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    l = lis[0]\n    r = lis[0]\n    ans = 0\n    for i in range(1, n):\n        if lis[i] < l:\n            l = lis[i]\n        if lis[i] > r:\n            r = lis[i]\n        if r - l > 2 * x:\n            ans += 1\n            l = lis[i]\n            r = lis[i]\n    print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = 0\n    x *= 2\n    mx = a[0]\n    mn = a[0]\n    for i in range(1, n):\n        if a[i] > mx:\n            mx = a[i]\n        if a[i] < mn:\n            mn = a[i]\n        d = mx - mn\n        if d > x:\n            s += 1\n            mx = a[i]\n            mn = a[i]\n    print(s)", "for _ in range(int(input())):\n    (n, x) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    ans = 0\n    max_v = a[0]\n    min_v = a[0]\n    for i in range(1, n):\n        if a[i] > max_v:\n            max_v = a[i]\n        if a[i] < min_v:\n            min_v = a[i]\n        if max_v - min_v > 2 * x:\n            max_v = a[i]\n            min_v = a[i]\n            ans += 1\n    print(ans)", "q = int(input())\nfor tc in range(q):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    mina = a[0]\n    maxa = a[0]\n    ans = 0\n    for i in range(1, n):\n        if a[i] > maxa:\n            maxa = a[i]\n        if a[i] < mina:\n            mina = a[i]\n        if maxa - mina > 2 * x:\n            ans += 1\n            mina = maxa = a[i]\n    print(ans)", "case = int(input())\nfor i in range(case):\n    (n, x) = (int(v) for v in input().split())\n    a = [int(v) for v in input().split()]\n    tmax = a[0]\n    tmin = a[0]\n    ans = 0\n    for j in range(1, n):\n        if a[j] > tmax:\n            tmax = a[j]\n        elif a[j] < tmin:\n            tmin = a[j]\n        else:\n            pass\n        if tmax - tmin > 2 * x:\n            ans += 1\n            tmax = a[j]\n            tmin = a[j]\n    print(ans)", "n = int(input())\nfor _ in range(n):\n    (n, x) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    count = 0\n    mina = a[0]\n    maxa = a[0]\n    for ai in a:\n        mina = min(mina, ai)\n        maxa = max(maxa, ai)\n        if maxa - mina > 2 * x:\n            count += 1\n            mina = ai\n            maxa = ai\n    print(count)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    ans = 0\n    ai = list(map(int, input().split()))\n    curmax = curlow = ai[0]\n    for i in range(1, n):\n        if ai[i] > curmax:\n            curmax = ai[i]\n        if ai[i] < curlow:\n            curlow = ai[i]\n        if abs(curmax - curlow) > 2 * x:\n            curmax = curlow = ai[i]\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    mn = a[0] - x\n    mx = a[0] + x\n    ans = 0\n    for i in range(1, n):\n        if a[i] - x > mx or a[i] + x < mn:\n            ans += 1\n            mn = a[i] - x\n            mx = a[i] + x\n        elif a[i] - x > mn:\n            mn = a[i] - x\n        elif a[i] + x < mx:\n            mx = a[i] + x\n    print(ans)", "for pratyush in range(int(input())):\n    (n, x) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    (h, t, f) = (a[0] - x, a[0] + x, 0)\n    for i in range(1, n):\n        if a[i] - x > t or a[i] + x < h:\n            f += 1\n            (h, t) = (a[i] - x, a[i] + x)\n        else:\n            if a[i] - x > h:\n                h = a[i] - x\n            if a[i] + x < t:\n                t = a[i] + x\n    print(f)", "for _ in ' ' * int(input()):\n    (n, x) = map(int, input().split())\n    ans = 0\n    ai = list(map(int, input().split()))\n    max_ = low_ = ai[0]\n    for i in range(1, n):\n        if ai[i] > max_:\n            max_ = ai[i]\n        if ai[i] < low_:\n            low_ = ai[i]\n        if abs(max_ - low_) > 2 * x:\n            max_ = low_ = ai[i]\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    nm = arr[0]\n    nm1 = arr[0]\n    res = 0\n    for i in range(1, n):\n        if arr[i] > nm1:\n            nm1 = arr[i]\n        if arr[i] < nm:\n            nm = arr[i]\n        if nm1 - nm > 2 * x:\n            res += 1\n            nm = nm1 = arr[i]\n    print(res)", "def solve():\n    (n, x) = map(int, input().split())\n    arr = [int(i) for i in input().split()]\n    diff = []\n    mini = arr[0]\n    maxi = arr[0]\n    count = 0\n    for i in range(len(arr)):\n        mini = min(mini, arr[i])\n        maxi = max(maxi, arr[i])\n        if maxi - mini > 2 * x:\n            mini = arr[i]\n            maxi = arr[i]\n            count += 1\n    print(count)\nt = int(input())\nwhile t:\n    t -= 1\n    solve()", "p = int(input())\nfor i in range(p):\n    (n, m) = map(int, input().split())\n    v = list(map(int, input().split()))\n    q = 0\n    x = v[0] - m\n    y = v[0] + m\n    for j in range(1, n):\n        r = v[j] - m\n        s = v[j] + m\n        if x > s or y < r:\n            q += 1\n            x = r\n            y = s\n        else:\n            if r > x:\n                x = r\n            if s < y:\n                y = s\n    print(q)", "R = lambda : map(int, input().split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n, x) = R()\n    m = 2000000000.0\n    M = r = 0\n    for y in R():\n        if (M := max(M, y)) - (m := min(m, y)) > 2 * x:\n            r += 1\n            m = M = y\n    print(r)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    poc = a[0]\n    x *= 2\n    gore = x\n    dole = x\n    b = 0\n    for i in range(1, n):\n        if a[i] >= poc and a[i] - poc <= gore:\n            dole = min(dole, x - (a[i] - poc))\n        elif a[i] < poc and poc - a[i] <= dole:\n            gore = min(gore, x - (poc - a[i]))\n        else:\n            b += 1\n            gore = x\n            dole = x\n            poc = a[i]\n    print(b)", "R = lambda : map(int, input().split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n, x) = R()\n    m = 2000000000.0\n    M = r = 0\n    for y in R():\n        if (M := max(M, y)) - (m := min(m, y)) > 2 * x:\n            r += 1\n            m = M = y\n    print(r)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    _min = arr[0]\n    _max = arr[0]\n    x = 2 * x\n    cnt = 0\n    for a in arr[1:]:\n        _min = min(a, _min)\n        _max = max(a, _max)\n        if _max - _min > x:\n            _min = a\n            _max = a\n            cnt += 1\n    print(cnt)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    _min = arr[0]\n    _max = arr[0]\n    x = 2 * x\n    cnt = 0\n    for a in arr[1:]:\n        _min = min(a, _min)\n        _max = max(a, _max)\n        if _max - _min > x:\n            _min = a\n            _max = a\n            cnt += 1\n    print(cnt)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split(' '))\n    array = tuple(map(int, input().split(' ')))\n    (start, end) = (array[0] - x, array[0] + x)\n    result = 0\n    for num in array[1:]:\n        (c, d) = (num - x, num + x)\n        if c <= start <= d and c <= end <= d:\n            pass\n        elif start <= c <= end and start <= d <= end:\n            (start, end) = (c, d)\n        elif start <= c <= end:\n            start = c\n        elif start <= d <= end:\n            end = d\n        else:\n            result += 1\n            (start, end) = (c, d)\n    print(result)", "import sys\n\ndef solve(n, k):\n    l = [int(i) for i in sys.stdin.readline().split()]\n    tot = 0\n    (mx, mn) = (l[0], l[0])\n    for i in range(1, n):\n        mx = max(l[i], mx)\n        mn = min(mn, l[i])\n        if mx - mn > 2 * k:\n            (mx, mn) = (l[i], l[i])\n            tot += 1\n    return tot\nfor i in range(int(input())):\n    (n, k) = tuple(map(int, input().split()))\n    print(solve(n, k))", "t = int(input())\nfor i in range(t):\n    (n, x) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    flag = 0\n    maxa = a[0]\n    mina = a[0]\n    for ai in a[1:]:\n        maxa = max(maxa, ai)\n        mina = min(mina, ai)\n        if maxa - mina > 2 * x:\n            flag += 1\n            maxa = ai\n            mina = ai\n    print(flag)", "R = lambda : map(int, input().split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n, x) = R()\n    m = 2000000000.0\n    M = r = 0\n    for y in R():\n        if (M := max(M, y)) - (m := min(m, y)) > 2 * x:\n            r += 1\n            m = M = y\n    print(r)", "z = lambda : map(int, input().split())\n(t,) = z()\nfor i in '_' * t:\n    (n, x) = z()\n    a = z()\n    cnt = 0\n    mn = 10 ** 10\n    mx = 0\n    for i in a:\n        if (mx := max(mx, i)) - (mn := min(i, mn)) > 2 * x:\n            cnt += 1\n            mx = mn = i\n    print(cnt)", "reps = int(input())\nfor _ in range(reps):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    (maxi, mini) = (arr[0], arr[0])\n    ans = 0\n    for num in arr:\n        maxi = max(num, maxi)\n        mini = min(mini, num)\n        if maxi - mini > 2 * x:\n            ans += 1\n            maxi = mini = num\n    print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    mini = a[0]\n    maxi = a[0]\n    res = 0\n    for i in a:\n        mini = min(mini, i)\n        maxi = max(maxi, i)\n        if maxi - mini > 2 * x:\n            res += 1\n            maxi = i\n            mini = i\n    print(res)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    x = 0\n    y = 8969869699\n    cnt = 0\n    for i in range(n):\n        if a[i] < y:\n            y = a[i]\n        if a[i] > x:\n            x = a[i]\n        if x - y > 2 * k:\n            cnt += 1\n            x = a[i]\n            y = a[i]\n    print(cnt)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    (_min, _max) = (a[0], a[0])\n    count = 0\n    x = 2 * x\n    for i in a[1:]:\n        _min = min(_min, i)\n        _max = max(_max, i)\n        if _max - _min > x:\n            _max = i\n            _min = i\n            count += 1\n    print(count)", "a = int(input())\nfor _ in range(a):\n    (pile, fix) = [int(x) for x in input().split()]\n    ppile = [int(x) for x in input().split()]\n    minx = -1\n    maxx = -1\n    count = 0\n    for i in range(pile):\n        if minx == -1 or ppile[i] < minx:\n            minx = ppile[i]\n        if maxx == -1 or ppile[i] > maxx:\n            maxx = ppile[i]\n        if maxx - minx > 2 * fix:\n            count += 1\n            minx = ppile[i]\n            maxx = ppile[i]\n    print(count)", "un = lambda : [*map(int, input().split())]\nfor _ in range(*un()):\n    (n, x) = un()\n    a = un()\n    minn = a[0]\n    maxx = a[0]\n    caunt = 0\n    for i in range(1, n):\n        j = 0\n        if a[i] > maxx:\n            maxx = a[i]\n            j = 1\n        if a[i] < minn:\n            minn = a[i]\n            j = 1\n        if j == 1:\n            if maxx - minn > 2 * x:\n                caunt += 1\n                (maxx, minn) = (a[i], a[i])\n    print(caunt)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = 0\n    mi = 10 ** 9\n    ma = 0\n    for i in a:\n        mi = min(i, mi)\n        ma = max(i, ma)\n        if ma - mi > 2 * x:\n            c += 1\n            ma = i\n            mi = i\n    print(c)", "for _ in range(int(input())):\n    (n, x) = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    (maxlim, minlim) = (arr[0], arr[0])\n    ans = 0\n    for num in arr:\n        maxlim = max(num, maxlim)\n        minlim = min(num, minlim)\n        if maxlim - minlim > 2 * x:\n            ans += 1\n            (maxlim, minlim) = (num, num)\n    print(ans)", "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    (n, x) = map(int, sys.stdin.readline().split())\n    lst = list(map(int, sys.stdin.readline().split()))\n    ans = 0\n    ele = lst[0]\n    l = ele - x\n    r = ele + x\n    for j in lst[1:]:\n        st = j - x\n        en = j + x\n        if st <= r and en >= l:\n            l = max(l, st)\n            r = min(r, en)\n        else:\n            ans += 1\n            l = st\n            r = en\n    print(ans)", "t = int(input())\nfor ncase in range(1, t + 1):\n    (n, x) = [int(s) for s in input().split(' ')]\n    a = [int(s) for s in input().split(' ')]\n    ans = 0\n    (m0, m1) = (a[0] - x, a[0] + x)\n    for i in range(1, n):\n        if a[i] + x < m0 or a[i] - x > m1:\n            ans += 1\n            (m0, m1) = (a[i] - x, a[i] + x)\n        elif a[i] - x > m0:\n            m0 = a[i] - x\n        elif a[i] + x < m1:\n            m1 = a[i] + x\n    print(ans)", "for _ in range(int(input())):\n    (n, x) = [int(x) for x in input().split()]\n    arr = [int(x) for x in input().split()]\n    ans = 0\n    mn = arr[0]\n    mx = arr[0]\n    for i in arr:\n        mn = min(i, mn)\n        mx = max(i, mx)\n        if abs(mn - mx) > 2 * x:\n            ans += 1\n            mn = i\n            mx = i\n    print(ans)", "R = lambda : map(int, input().split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n, x) = R()\n    m = 2000000000.0\n    M = r = 0\n    for y in R():\n        m = min(m, y)\n        M = max(M, y)\n        if M - m > 2 * x:\n            r += 1\n            m = M = y\n    print(r)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    mini = a[0]\n    maxi = a[0]\n    res = 0\n    for i in a:\n        mini = min(mini, i)\n        maxi = max(maxi, i)\n        if maxi - mini > 2 * x:\n            res += 1\n            maxi = i\n            mini = i\n    print(res)", "reps = int(input())\nfor _ in range(reps):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    (maxi, mini) = (arr[0], arr[0])\n    ans = 0\n    for num in arr:\n        maxi = max(num, maxi)\n        mini = min(mini, num)\n        if maxi - mini > 2 * x:\n            ans += 1\n            maxi = mini = num\n    print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    (mini, maxi) = (lst[0], lst[0])\n    count = 0\n    for i in lst[1:]:\n        mini = min(mini, i)\n        maxi = max(maxi, i)\n        if maxi - mini > 2 * x:\n            count += 1\n            mini = i\n            maxi = i\n    print(count)", "x = int(input())\n\ndef cal(n, m, arr):\n    if n == 1:\n        return 0\n    (a, b) = (max(arr[0] - m, 0), arr[0] + m)\n    ans = 0\n    for i in range(1, n):\n        (c, d) = (max(arr[i] - m, 0), arr[i] + m)\n        if b < c or a > d:\n            ans += 1\n            (a, b) = (c, d)\n        else:\n            (a, b) = (max(a, c), min(b, d))\n    return ans\nfor jj in range(x):\n    (n, m) = [int(i) for i in input().split(' ')]\n    arr = [int(i) for i in input().split(' ')]\n    print(cal(n, m, arr))", "for _ in range(int(input())):\n    x = int(input().split()[1])\n    a = list(map(int, input().split()))\n    n = 0\n    min_ = a[0]\n    max_ = a[0]\n    for i in a:\n        min_ = min(i, min_)\n        max_ = max(i, max_)\n        if max_ - min_ > 2 * x:\n            n += 1\n            min_ = i\n            max_ = i\n    print(n)", "t = int(input())\n\ndef gen_sol(n, x, a):\n    ls_min = [-x + a_i for a_i in a]\n    ls_max = [x + a_i for a_i in a]\n    l_intr = -10 ** 12\n    u_intr = 10 ** 12\n    cnt = 0\n    for i in range(n):\n        (nl, nu) = (max(l_intr, ls_min[i]), min(u_intr, ls_max[i]))\n        if nl <= nu:\n            l_intr = nl\n            u_intr = nu\n        else:\n            cnt += 1\n            l_intr = ls_min[i]\n            u_intr = ls_max[i]\n    return cnt\nfor _ in range(t):\n    (n, x) = [int(y) for y in input().split()]\n    a = [int(y) for y in input().split()]\n    print(gen_sol(n, x, a))", "t = int(input())\nfor _ in range(t):\n    (n, x) = list(map(int, input().split(' ')))\n    arr = list(map(int, input().split(' ')))\n    tmp = 0\n    _min = float('inf')\n    _max = float('-inf')\n    for i in arr:\n        _min = min(_min, i)\n        _max = max(_max, i)\n        if _max - _min > 2 * x:\n            tmp += 1\n            _min = i\n            _max = i\n    print(tmp)", "z = lambda : map(int, input().split())\n(t,) = z()\nfor i in '_' * t:\n    (n, x) = z()\n    a = z()\n    cnt = 0\n    mn = 10 ** 10\n    mx = 0\n    for i in a:\n        mn = min(i, mn)\n        mx = max(mx, i)\n        if mx - mn > 2 * x:\n            cnt += 1\n            mx = mn = i\n    print(cnt)", "t = int(input())\nfor i in range(0, t):\n    (n, x) = map(int, input().split())\n    a = input().split()\n    c = []\n    for j in a:\n        c.append(int(j))\n    a = c\n    mi = a[0]\n    ma = a[0]\n    ans = 0\n    for k in range(1, len(a)):\n        if a[k] < mi:\n            mi = a[k]\n        elif a[k] > ma:\n            ma = a[k]\n        if ma - mi > 2 * x:\n            ma = a[k]\n            mi = a[k]\n            ans = ans + 1\n    print(ans)", "cas = int(input())\nfor i in range(cas):\n    (n, x) = [int(y) for y in input().split()]\n    a = [int(y) for y in input().split()]\n    c = 0\n    mi = a[0]\n    ma = a[0]\n    for i in a:\n        mi = min(i, mi)\n        ma = max(i, ma)\n        if ma - mi > 2 * x:\n            c += 1\n            ma = i\n            mi = i\n    print(c)", "cas = int(input())\nfor i in range(cas):\n    (n, x) = [int(y) for y in input().split()]\n    a = [int(y) for y in input().split()]\n    c = 0\n    mi = a[0]\n    ma = a[0]\n    for i in a:\n        mi = min(i, mi)\n        ma = max(i, ma)\n        if ma - mi > 2 * x:\n            c = c + 1\n            ma = i\n            mi = i\n    print(c)", "z = lambda : map(int, input().split())\n(t,) = z()\nfor i in '_' * t:\n    (n, x) = z()\n    a = z()\n    cnt = 0\n    mn = 10 ** 10\n    mx = 0\n    for i in a:\n        mn = min(i, mn)\n        mx = max(mx, i)\n        if mx - mn > 2 * x:\n            cnt += 1\n            mx = mn = i\n    print(cnt)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    myList = list(map(int, input().split()))\n    small = big = myList[0]\n    counter = 0\n    for i in myList:\n        small = min(i, small)\n        big = max(i, big)\n        if big - small > 2 * x:\n            counter += 1\n            big = small = i\n    print(counter)", "import math\nimport os\nimport random\nimport re\nimport sys\nfrom math import gcd\nfrom math import sqrt\nfrom collections import Counter\nfrom itertools import compress\nfrom collections import deque\nimport statistics\nfrom statistics import mode\nfor _ in range(int(input())):\n    (n, x) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    mx = arr[0]\n    mn = arr[0]\n    count = 0\n    for i in arr:\n        mx = max(mx, i)\n        mn = min(mn, i)\n        if mx - mn > x * 2:\n            count += 1\n            mx = i\n            mn = i\n    print(count)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    s = [int(x) for x in input().split()]\n    max0 = s[0]\n    min0 = s[0]\n    ans = 0\n    for i in s:\n        max0 = max(max0, i)\n        min0 = min(min0, i)\n        if max0 - min0 > 2 * x:\n            ans += 1\n            max0 = i\n            min0 = i\n    print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    food_list = list(map(int, input().split()))\n    ans = 0\n    (mn, mx) = (food_list[0], food_list[0])\n    for j in food_list:\n        mn = min(mn, j)\n        mx = max(mx, j)\n        if mx - mn > 2 * x:\n            ans += 1\n            (mx, mn) = (j, j)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    (mn, mx) = (a[0], a[0])\n    for i in range(n):\n        mn = min(mn, a[i])\n        mx = max(mx, a[i])\n        if mx - mn > 2 * x:\n            ans += 1\n            (mn, mx) = (a[i], a[i])\n    print(ans)", "hm = int(input())\nfor _ in range(hm):\n    c = 0\n    helper = list(map(int, input().split(' ')))\n    x = helper[1]\n    eda = list(map(int, input().split(' ')))\n    nabor = []\n    ma = eda[0]\n    mi = eda[0]\n    nabor.append(eda[0])\n    for i in range(1, len(eda)):\n        if eda[i] > ma:\n            if abs(eda[i] - mi) > x * 2:\n                c += 1\n                nabor.clear()\n                ma = eda[i]\n                mi = eda[i]\n            else:\n                ma = eda[i]\n        elif eda[i] < mi:\n            if abs(ma - eda[i]) > x * 2:\n                c += 1\n                nabor.clear()\n                ma = eda[i]\n                mi = eda[i]\n            else:\n                mi = eda[i]\n        nabor.append(eda[i])\n    print(c)", "for _ in range(int(input())):\n    (n, x) = [int(x) for x in input().split()]\n    if 85557448454 == 'dnfuhru':\n        print('Tanmay')\n    ans = 0\n    a = [int(x) for x in input().split()]\n    mini = 10000000034000000000\n    maxi = -99999999944549999999999\n    for i in a:\n        mini = min(mini, i)\n        maxi = max(maxi, i)\n        if 2 * x < maxi - mini:\n            ans += 1\n            maxi = mini = i\n    print(ans)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    a = l[0] + x\n    b = l[0] - x\n    ans = 0\n    for i in range(1, n):\n        if l[i] + x >= b and l[i] - x <= a:\n            a = min(l[i] + x, a)\n            b = max(l[i] - x, b)\n        else:\n            a = l[i] + x\n            b = l[i] - x\n            ans = ans + 1\n    print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    sch = 0\n    minn = a[-1]\n    maxx = a[-1]\n    tek = a[-1]\n    for i in range(len(a) - 2, -1, -1):\n        if a[i] < minn:\n            minn = a[i]\n        if a[i] > maxx:\n            maxx = a[i]\n        if abs(tek - a[i]) > x:\n            if maxx - minn > 2 * x:\n                sch += 1\n                tek = a[i]\n                minn = a[i]\n                maxx = a[i]\n                continue\n            if tek - a[i] > 0:\n                tek = a[i] + x\n            else:\n                tek = a[i] - x\n    print(sch)", "t = int(input())\nfor t1 in range(t):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    mini = maxi = l[0]\n    count = 0\n    for i in range(1, len(l)):\n        maxi = max(maxi, l[i])\n        mini = min(mini, l[i])\n        if maxi - mini > 2 * x:\n            maxi = mini = l[i]\n            count += 1\n    print(count)", "import math\nfor _ in range(int(input())):\n    (n, x) = input().split(' ')\n    x = int(x)\n    l = [int(i) for i in input().split(' ')]\n    cnt = 0\n    mm = [0, 10000000000000]\n    for i in l:\n        mm[0] = min(mm[0], i)\n        mm[1] = max(mm[1], i)\n        if mm[1] - mm[0] > 2 * x:\n            cnt += 1\n            mm = [i] * 2\n    print(cnt - 1)", "attemps = int(input())\nrez_mass = []\nfor _ in range(attemps):\n    (n, x) = map(int, input().split())\n    dishes = list(map(int, input().split()))[:n]\n    result = 0\n    (max_dish, min_dish) = (dishes[0], dishes[0])\n    for i in range(1, n):\n        max_dish = max(max_dish, dishes[i])\n        min_dish = min(min_dish, dishes[i])\n        if max_dish - min_dish > x * 2:\n            result += 1\n            max_dish = min_dish = dishes[i]\n    rez_mass.append(result)\nprint(*rez_mass, sep='\\n')", "for tc in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    ans = 0\n    l = r = a[0]\n    for i in range(1, n):\n        l = min(l, a[i])\n        r = max(r, a[i])\n        if r - l > 2 * x:\n            l = r = a[i]\n            ans += 1\n    print(ans)", "def sigma(a, b):\n    if a > b:\n        return 1\n    if b < a:\n        return -1\n    else:\n        return 0\nfor t in range(int(input())):\n    (n, x) = map(int, input().split())\n    L = list(map(int, input().split()))\n    i = 0\n    ans = 0\n    while i < n:\n        min = L[i]\n        max = L[i]\n        for j in range(i + 1, n):\n            if L[j] > max:\n                max = L[j]\n            if L[j] < min:\n                min = L[j]\n            if max - min > 2 * x:\n                i = j\n                ans += 1\n                break\n        else:\n            break\n    print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    mx = a[0]\n    mi = a[0]\n    res = 0\n    for i in range(1, n):\n        mx = max(mx, a[i])\n        mi = min(mi, a[i])\n        if mx - mi <= 2 * x:\n            continue\n        else:\n            res += 1\n            mx = a[i]\n            mi = a[i]\n    print(res)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n        continue\n    l = a[0] - x\n    r = a[0] + x\n    cnt = 0\n    for i in range(1, n):\n        ll = a[i] - x\n        rr = a[i] + x\n        if ll <= r and rr >= l:\n            l = max(ll, l)\n            r = min(rr, r)\n        else:\n            cnt += 1\n            l = ll\n            r = rr\n    print(cnt)"]