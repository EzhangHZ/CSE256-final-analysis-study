["for i in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    if n == 1:\n        print('YES')\n        print(b[0])\n        continue\n    S = sum(b)\n    N = n * (n + 1)\n    if 2 * S % N:\n        print('NO')\n        continue\n    s = 2 * S // N\n    a = []\n    flag = True\n    for i in range(n):\n        x = s - b[i] + b[i - 1]\n        if x % n != 0 or x <= 0:\n            flag = False\n            print('NO')\n            break\n        a.append(str(x // n))\n    if flag:\n        print('YES')\n        print(' '.join(a))", "for i in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    if n == 1:\n        print('YES')\n        print(b[0])\n        continue\n    S = sum(b)\n    N = n * (n + 1)\n    if 2 * S % N:\n        print('NO')\n        continue\n    s = 2 * S // N\n    a = []\n    flag = True\n    for i in range(n):\n        x = s - b[i] + b[i - 1]\n        if x % n != 0 or x <= 0:\n            flag = False\n            print('NO')\n            break\n        a.append(str(x // n))\n    if flag:\n        print('YES')\n        print(' '.join(a))", "import sys\n\ndef singer_tour(n, b):\n    m = n * (n + 1) // 2\n    sum_b = sum(b)\n    sum_a = sum_b // m\n    a = [0] * n\n    if sum_b != sum_a * m:\n        sys.stdout.write('NO\\n')\n        return\n    if (b[0] - b[n - 1] - sum_a) % -n != 0:\n        sys.stdout.write('NO\\n')\n        return\n    a[0] = (b[0] - b[n - 1] - sum_a) // -n\n    if a[0] < 1:\n        sys.stdout.write('NO\\n')\n        return\n    for i in range(1, n):\n        if (b[i] - b[i - 1] - sum_a) % -n != 0:\n            sys.stdout.write('NO\\n')\n            return\n        a[i] = (b[i] - b[i - 1] - sum_a) // -n\n        if a[i] < 1:\n            sys.stdout.write('NO\\n')\n            return\n    sys.stdout.write('YES\\n')\n    sys.stdout.write(f\"{' '.join(map(str, a))}\\n\")\nfor _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    singer_tour(n, b)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    b = list(map(int, input().split()))\n    if n == 1:\n        print('YES')\n        print(b[0])\n        continue\n    S = sum(b)\n    N = n * (n + 1)\n    if 2 * S % N != 0:\n        print('NO')\n        continue\n    s = 2 * S // N\n    a = []\n    flag = True\n    for i in range(n):\n        x = s - b[i] + b[i - 1]\n        if x % n != 0 or x <= 0:\n            flag = False\n            print('NO')\n            break\n        a.append(str(x // n))\n    if flag:\n        print('YES')\n        print(' '.join(a))", "import sys\ninput = lambda : sys.stdin.readline()[:-1]\n\ndef singer_tour(n, b):\n    m = n * (n + 1) // 2\n    sum_b = sum(b)\n    sum_a = sum_b // m\n    a = [0] * n\n    if sum_b != sum_a * m:\n        sys.stdout.write('NO\\n')\n        return\n    if (b[0] - b[n - 1] - sum_a) % -n != 0:\n        sys.stdout.write('NO\\n')\n        return\n    a[0] = (b[0] - b[n - 1] - sum_a) // -n\n    if a[0] < 1:\n        sys.stdout.write('NO\\n')\n        return\n    for i in range(1, n):\n        if (b[i] - b[i - 1] - sum_a) % -n != 0:\n            sys.stdout.write('NO\\n')\n            return\n        a[i] = (b[i] - b[i - 1] - sum_a) // -n\n        if a[i] < 1:\n            sys.stdout.write('NO\\n')\n            return\n    sys.stdout.write('YES\\n')\n    sys.stdout.write(f\"{' '.join(map(str, a))}\\n\")\nfor _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    singer_tour(n, b)", "def solve(b):\n    n = len(b)\n    a = []\n    sa = sum(b)\n    m = int(n * (n + 1) / 2)\n    if sa % m != 0:\n        print('NO')\n        return\n    sa = int(sa / m)\n    for i in range(0, n):\n        if (sa - b[i] + b[i - 1]) % n != 0:\n            print('NO')\n            return\n        a.append(int((sa - b[i] + b[i - 1]) / n))\n        if a[-1] <= 0:\n            print('NO')\n            return\n    print('YES')\n    print(' '.join(list(map(str, a))))\n    return\ntest = int(input())\nfor te in range(0, test):\n    n = input()\n    b = list(map(int, input().split()))\n    solve(b)", "import sys\n\ndef readstr():\n    input = sys.stdin.readline\n    a = str(input().split()[0])\n    return a\n\ndef readnum():\n    input = sys.stdin.readline\n    a = list(map(int, input().split()))\n    return a\n\ndef printf(val):\n    sys.stdout.write(str(val) + '\\n')\n\ndef power(a, b, mod):\n    if b == 1:\n        return a\n    if b == 0:\n        return 1\n    ans = power(a, b // 2, mod)\n    ans *= ans\n    if b % 2:\n        ans *= a\n    ans = ans % mod\n    return ans\n\ndef factorial(n, start=1, skip=None):\n    res = start\n    for i in range(1, n + 1):\n        if i == skip:\n            continue\n        res *= i\n    return res\n\ndef make_deg(l):\n    deg = {}\n    for i in l:\n        if not i in deg:\n            deg[i] = 0\n        deg[i] += 1\n    return deg\nfor _ in range(readnum()[0]):\n    n = readnum()[0]\n    b = readnum()\n    if 2 * sum(b) % (n * (n + 1)):\n        print('NO')\n        continue\n    s = 2 * sum(b) // n // (n + 1)\n    a = []\n    for i in range(n):\n        val = s - b[i] + b[(i - 1) % n]\n        if val % n != 0 or val <= 0:\n            a = []\n            print('NO')\n            break\n        a.append(str(val // n))\n    if len(a) > 0:\n        print('YES')\n        print(' '.join(a))", "for _ in range(int(input())):\n    n = int(input())\n    b = [int(x) for x in input().split()]\n    n2 = n * (n + 1) // 2\n    x = sum(b)\n    if x % n2 != 0:\n        print('NO')\n        continue\n    x //= n2\n    a = [0] * n\n    for i in range(n):\n        y = x - b[i] + b[i - 1]\n        a[i] = y // n\n        if y % n != 0 or a[i] <= 0:\n            print('NO')\n            break\n    else:\n        print('YES')\n        print(' '.join((str(i) for i in a)))", "def find(n, L):\n    if n == 1:\n        return (True, [str(L[0])])\n    total = 0\n    for elem in L:\n        total += elem\n    sum = total * 2 / n / (n + 1)\n    if sum != int(sum):\n        return (False, 0)\n    A = []\n    first = (sum - L[0] + L[-1]) / n\n    if first != int(first) or first <= 0:\n        return (False, 0)\n    A.append(str(int(first)))\n    for i in range(1, n):\n        cur = (sum - L[i] + L[i - 1]) / n\n        if cur != int(cur) or cur <= 0:\n            return (False, 0)\n        A.append(str(int(cur)))\n    return (True, A)\ncases = int(input())\nfor i in range(cases):\n    n = int(input())\n    l = input().split()\n    L = []\n    for elem in l:\n        L.append(int(elem))\n    now = find(n, L)\n    if now[0]:\n        print('YES')\n        print(' '.join(now[1]))\n    else:\n        print('NO')", "import itertools\nimport functools\n\ndef solve(b, n):\n    s = sum(b)\n    k = n * (n + 1) // 2\n    if s % k != 0 or s < k:\n        return None\n    s = s // k\n    r = []\n    for i in range(n):\n        x = s - b[i] + b[i - 1]\n        if x % n != 0 or x < n:\n            return None\n        r.append(x // n)\n    return r\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        b = list(map(int, input().split()))\n        r = solve(b, n)\n        if r is None:\n            print('NO')\n        else:\n            print('YES')\n            print(*r)\nmain()", "def solve():\n    n = int(input())\n    s = list(map(int, input().split()))\n    total = sum(s)\n    z = n * (n + 1) // 2\n    if total % z > 0:\n        print('NO')\n        return\n    total = total // z\n    a = [0 for _ in range(n)]\n    for i in range(1, n):\n        nai = total - s[i] + s[i - 1]\n        if nai % n != 0 or nai <= 0:\n            print('NO')\n            return\n        a[i] = nai // n\n    a[0] = total - sum(a)\n    if a[0] < 1:\n        print('NO')\n        return\n    print('YES')\n    print(*a)\nfor _ in range(int(input())):\n    solve()", "def solver():\n    n = int(input())\n    for _ in range(n):\n        n_cities = int(input())\n        list_of_durations = list(map(int, str(input()).split()))\n        checker = True\n        coef = n_cities * (n_cities + 1) // 2\n        first_sum = sum(list_of_durations)\n        if first_sum % coef != 0:\n            checker = False\n        sum_of_stuff = first_sum // coef\n        solutions = []\n        for i in range(n_cities):\n            sol_i = sum_of_stuff + list_of_durations[i - 1] - list_of_durations[i]\n            if sol_i % n_cities == 0 and sol_i > 0:\n                solutions.append(sol_i // n_cities)\n            else:\n                checker = False\n        if checker:\n            print('YES')\n            print(*solutions)\n        else:\n            print('NO')\nsolver()", "import sys\nimport itertools\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    s = sum(b)\n    if s % (n * (n + 1) // 2):\n        print('NO')\n        continue\n    s //= n * (n + 1) // 2\n    b = itertools.starmap(int.__sub__, zip(b[-1:] + b[:-1], b))\n    b = map(s.__add__, b)\n    b = list(map(n.__rfloordiv__, b))\n    if sum(b) != s or max(b) > 1000000000.0 or min(b) < 1:\n        print('NO')\n        continue\n    print('YES')\n    print(*b)", "import sys\nimport itertools\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    s = sum(b)\n    if s % (n * (n + 1) // 2):\n        print('NO')\n        continue\n    s //= n * (n + 1) // 2\n    prv = b[-1]\n    for i in range(n):\n        nxt = b[i]\n        b[i] = (s + prv - b[i]) // n\n        prv = nxt\n    if sum(b) != s or max(b) > 1000000000.0 or min(b) < 1:\n        print('NO')\n        continue\n    print('YES')\n    print(*b)", "problem_num = int(input())\nfor i in range(problem_num):\n    n = int(input())\n    arr = input().split()\n    arr = [int(i) for i in arr]\n    summation = sum(arr)\n    div = summation % int(n * (n + 1) / 2)\n    if div != 0:\n        print('NO')\n        continue\n    if min(arr) < n * (n + 1) / 2:\n        print('NO')\n        continue\n    ai = []\n    flag = False\n    for j in range(n):\n        a = 2 * summation / n / (n + 1) - (arr[j] - arr[j - 1])\n        if a < 0 or a % n != 0:\n            flag = True\n            print('NO')\n            break\n        a = int(a / n)\n        ai.append(str(a))\n    if flag:\n        continue\n    ai = ' '.join(ai)\n    print('YES')\n    print(ai)", "for i in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    if n == 1:\n        print('YES')\n        print(b[0])\n        continue\n    S = sum(b)\n    N = n * (n + 1)\n    if 2 * S % N:\n        print('NO')\n        continue\n    s = 2 * S // N\n    a = []\n    flag = True\n    for i in range(n):\n        x = s - b[i] + b[i - 1]\n        if x % n or x <= 0:\n            flag = False\n            print('NO')\n            break\n        a.append(x // n)\n    if flag:\n        print('YES')\n        print(*a)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    s = sum(arr)\n    x = n * (n + 1) // 2\n    if s % x != 0:\n        print('NO')\n        continue\n    s //= x\n    ans = []\n    for i in range(n):\n        k = arr[i - 1] - arr[i] + s\n        if k % n != 0 or k <= 0:\n            ans = []\n            print('NO')\n            break\n        ans.append(k // n)\n    if ans:\n        print('YES')\n        print(*ans, sep=' ')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    s = sum(arr)\n    x = n * (n + 1) // 2\n    if s % x != 0:\n        print('NO')\n        continue\n    s //= x\n    ans = []\n    for i in range(n):\n        k = arr[i - 1] - arr[i] + s\n        if k % n != 0 or k <= 0:\n            ans = []\n            print('NO')\n            break\n        ans.append(k // n)\n    if ans:\n        print('YES')\n        print(*ans, sep=' ')", "t = int(input())\nout = ''\nfor _ in range(t):\n    n = int(input())\n    sums = [int(x) for x in input().split()]\n    base = sum(sums) / ((1 + n) * (n / 2))\n    ans = []\n    sums.insert(0, sums[-1])\n    for i in range(n):\n        x = (sums[i] - sums[i + 1] + base) / n\n        if x != int(x) or x < 1:\n            out += 'NO\\n'\n            break\n        ans.append(x)\n    else:\n        out += 'YES\\n'\n        for x in ans:\n            out += str(int(x)) + ' '\n        out += '\\n'\nprint(out)", "from sys import stdin\ninput = stdin.readline\nrn = lambda : int(input())\nrns = lambda : map(int, input().split())\nrl = lambda : list(map(int, input().split()))\nrs = lambda : input().strip()\nYN = lambda x: print('YES') if x else print('NO')\nceil_div = lambda a, b: -(-a // b)\nmod = 10 ** 9 + 7\nfor _ in range(rn()):\n    n = rn()\n    b = rl()\n    ans = []\n\n    def solve(arr):\n        if sum(b) % (n * (n + 1) // 2) != 0:\n            return False\n        s = sum(b) // (n * (n + 1) // 2)\n        for i in range(n):\n            diff = b[i] - b[i - 1]\n            if (s - diff) % n != 0 or s - diff <= 0:\n                return False\n            arr.append((s - diff) // n)\n        return True\n    yn = solve(ans)\n    if yn:\n        print('YES')\n        print(*ans)\n    else:\n        print('NO')", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    L = list(map(int, input().split()))\n    M = [-1] * n\n    flag = True\n    s = 0\n    for j in range(0, n):\n        s += L[j]\n    z = n * (n + 1) // 2\n    if s % z != 0:\n        flag = False\n    s = s // z\n    s1 = 0\n    for j in range(0, n):\n        s1 = s + L[j - 1] - L[j]\n        if s1 % n == 0 and s1 > 0:\n            M[j] = s1 // n\n        else:\n            flag = False\n    if flag:\n        print('YES')\n        print(*M)\n    else:\n        print('NO')", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    L = list(map(int, input().split()))\n    M = [-1] * n\n    flag = True\n    s = 0\n    for j in range(0, n):\n        s += L[j]\n    z = n * (n + 1) // 2\n    if s % z != 0:\n        flag = False\n    s = s // z\n    s1 = 0\n    for j in range(0, n):\n        s1 = s + L[j - 1] - L[j]\n        if s1 % n == 0 and s1 > 0:\n            M[j] = s1 // n\n        else:\n            flag = False\n    if flag:\n        print('YES')\n        print(*M)\n    else:\n        print('NO')", "import math, sys\ninput = sys.stdin.readline\nS = lambda : input().rstrip()\nI = lambda : int(S())\nM = lambda : map(int, S().split())\nL = lambda : list(M())\nmod1 = 1000000007\nmod2 = 998244353\nfor _ in range(I()):\n    n = I()\n    b = L()\n    s = sum(b)\n    f = 0\n    ans = [0] * n\n    if s % (n * (n + 1) // 2) != 0:\n        print('NO')\n        continue\n    s //= n * (n + 1) // 2\n    for i in range(n):\n        cur = s - b[(i + 1) % n] + b[i]\n        if cur > 0 and cur % n == 0:\n            ans[(i + 1) % n] = cur // n\n        else:\n            f = 1\n            break\n    if f:\n        print('NO')\n        continue\n    print('YES')\n    print(*ans)", "p = int(input())\nfor i in range(0, p):\n    n = int(input())\n    L = list(map(int, input().split()))\n    M = [-1] * n\n    flag = True\n    s = 0\n    for j in range(0, n):\n        s += L[j]\n    z = n * (n + 1) // 2\n    if s % z != 0:\n        flag = False\n    s = s // z\n    s1 = 0\n    for j in range(0, n):\n        s1 = s + L[j - 1] - L[j]\n        if s1 % n == 0 and s1 > 0:\n            M[j] = s1 // n\n        else:\n            flag = False\n    if flag:\n        print('YES')\n        print(*M)\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    b = list(map(int, input().split(' ')))\n    s = sum(b)\n    yesval = 'yes'\n    val = n * (n + 1) // 2\n    if s % val != 0:\n        print('NO')\n    else:\n        sum_of_a = s // val\n        if n == 1:\n            print('YES')\n            print(*b)\n        else:\n            a = []\n            if (sum_of_a + b[n - 1] - b[0]) % n != 0:\n                yesval = 'no'\n            else:\n                a.append((sum_of_a + b[n - 1] - b[0]) // n)\n                for theta in range(1, n):\n                    if (sum_of_a + b[theta - 1] - b[theta]) % n != 0:\n                        yesval = 'no'\n                        break\n                    else:\n                        a.append((sum_of_a + b[theta - 1] - b[theta]) // n)\n            if yesval == 'no':\n                print('NO')\n            elif min(a) > 0:\n                print('YES')\n                print(*a)\n            else:\n                print('NO')", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    L = list(map(int, input().split()))\n    M = [-1] * n\n    flag = True\n    s = 0\n    for j in range(0, n):\n        s += L[j]\n    z = n * (n + 1) // 2\n    if s % z != 0:\n        flag = False\n    s = s // z\n    s1 = 0\n    for j in range(0, n):\n        s1 = s + L[j - 1] - L[j]\n        if s1 % n == 0 and s1 > 0:\n            M[j] = s1 // n\n        else:\n            flag = False\n    if flag:\n        print('YES')\n        print(*M)\n    else:\n        print('NO')", "from sys import stdin, stdout\nfrom collections import defaultdict\ninput = stdin.readline\nfrom random import randint\nimport math\nimport sys\nfor _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    sumai = sum(b) * 2\n    b = [b[-1]] + b\n    div = n * (n + 1)\n    if sumai % div != 0:\n        print('NO')\n        continue\n    sumai = sumai // div\n    arr = [0 for i in range(n + 1)]\n    sexy = True\n    for i in range(1, n + 1):\n        jj = sumai - (b[i] - b[i - 1])\n        if jj % n != 0 or jj < n:\n            sexy = False\n        else:\n            arr[i] = jj // n\n    if sexy == False:\n        print('NO')\n        continue\n    print('YES')\n    for i in range(1, n + 1):\n        print(arr[i], end=' ')\n    print('')", "tc = int(input())\nfor i in range(0, tc):\n    n = int(input())\n    L = list(map(int, input().split()))\n    M = [-1] * n\n    flag = True\n    s = 0\n    for j in range(0, n):\n        s += L[j]\n    z = n * (n + 1) // 2\n    if s % z != 0:\n        flag = False\n    s = s // z\n    s1 = 0\n    for j in range(0, n):\n        s1 = s + L[j - 1] - L[j]\n        if s1 % n == 0 and s1 > 0:\n            M[j] = s1 // n\n        else:\n            flag = False\n    if flag:\n        print('YES')\n        print(*M)\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    nums = [int(x) for x in input().split(' ')]\n    if n == 1:\n        print('YES')\n        print(nums[0])\n        continue\n    output = []\n    const = sum(nums)\n    if const % (n ** 2 / 2 + n / 2) != 0:\n        print('NO')\n        continue\n    const /= n ** 2 / 2 + n / 2\n    const = int(const)\n    bef = nums[-1]\n    for x in range(n):\n        thing = nums[x] - bef - const\n        if thing % n == 0 and thing < 0:\n            output.append(thing // -n)\n        else:\n            break\n        bef = nums[x]\n    else:\n        print('YES')\n        for x in output:\n            print(x, end=' ')\n        print()\n        continue\n    print('NO')", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    L = list(map(int, input().split()))\n    M = [-1] * n\n    flag = True\n    s = 0\n    for j in range(0, n):\n        s += L[j]\n    z = n * (n + 1) // 2\n    if s % z != 0:\n        flag = False\n    s = s // z\n    s1 = 0\n    for j in range(0, n):\n        s1 = s + L[j - 1] - L[j]\n        if s1 % n == 0 and s1 > 0:\n            M[j] = s1 // n\n        else:\n            flag = False\n    if flag:\n        print('YES')\n        print(*M)\n    else:\n        print('NO')", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    L = list(map(int, input().split()))\n    M = [-1] * n\n    flag = True\n    s = 0\n    for j in range(0, n):\n        s += L[j]\n    z = n * (n + 1) // 2\n    if s % z != 0:\n        flag = False\n    s = s // z\n    s1 = 0\n    for j in range(0, n):\n        s1 = s + L[j - 1] - L[j]\n        if s1 % n == 0 and s1 > 0:\n            M[j] = s1 // n\n        else:\n            flag = False\n    if flag:\n        print('YES')\n        print(*M)\n    else:\n        print('NO')", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    L = list(map(int, input().split()))\n    M = [-1] * n\n    flag = True\n    s = 0\n    for j in range(0, n):\n        s += L[j]\n    z = n * (n + 1) // 2\n    if s % z != 0:\n        flag = False\n    s = s // z\n    s1 = 0\n    for j in range(0, n):\n        s1 = s + L[j - 1] - L[j]\n        if s1 % n == 0 and s1 > 0:\n            M[j] = s1 // n\n        else:\n            flag = False\n    if flag:\n        print('YES')\n        print(*M)\n    else:\n        print('NO')", "import sys\nimport itertools\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    b = [0] * n\n    st = input().split()\n    for i in range(n):\n        b[i] = int(st[i])\n    s = sum(b)\n    if s % (n * (n + 1) // 2):\n        print('NO')\n        continue\n    s //= n * (n + 1) // 2\n    prv = b[-1]\n    for i in range(n):\n        nxt = b[i]\n        b[i] = (s + prv - b[i]) // n\n        prv = nxt\n    if sum(b) != s or max(b) > 1000000000.0 or min(b) < 1:\n        print('NO')\n        continue\n    print('YES')\n    print(*b)", "def ss(n, l):\n    x = sum(l)\n    p = n * (n + 1) // 2\n    if x % p != 0:\n        return []\n    sm = x // p\n    ans = [0 for _ in range(n)]\n    for i in range(n):\n        curr = i\n        next = (i + 1) % n\n        if (l[curr] - l[next] + sm) % n != 0:\n            return []\n        ans[next] = (l[curr] - l[next] + sm) // n\n    for i in ans:\n        if i < 1:\n            return []\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = ss(n, l)\n    if len(ans) == 0:\n        print('NO')\n    else:\n        print('YES')\n        print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    ok = True\n    if sum(b) % (n * (n + 1) // 2) != 0:\n        ok = False\n    else:\n        suma = sum(b) // (n * (n + 1) // 2)\n    ans = [0] * n\n    if ok:\n        for i in range(n):\n            if (suma - b[i] + b[i - 1]) % n != 0:\n                ok = False\n            ans[i] = (suma - b[i] + b[i - 1]) // n\n            if ans[i] <= 0:\n                ok = False\n    if ok:\n        print('YES')\n        print(*ans)\n    else:\n        print('NO')", "from fractions import gcd as hcf\nt = int(input())\nfor _t in range(t):\n    n = int(input())\n    px = [int(i) for i in input().split()]\n    tn = n * (n + 1) // 2\n    if sum(px) % tn != 0:\n        print('NO')\n        continue\n    sig_x = sum(px) // tn\n    x = [None] * n\n    for i in range(1, n):\n        x[i] = (px[i - 1] + sig_x - px[i]) / n\n    x[0] = (px[n - 1] + sig_x - px[0]) / n\n    x_i_check = True\n    for el in x:\n        x_i_check = x_i_check and el > 0 and (el == int(el))\n    if not x_i_check:\n        print('NO')\n    else:\n        print('YES')\n        x = [int(el) for el in x]\n        print(*x, sep=' ')", "import math\n\ndef solve():\n    v = list()\n    ans = list()\n    n = int(input())\n    x = input()\n    parts = x.split()\n    sum = 0\n    for part in parts:\n        part = int(part)\n        v.append(part)\n        ans.append(0)\n        sum += part\n    fact = n * (n + 1) / 2\n    if sum % fact:\n        print('NO')\n        return\n    Sn = sum / fact\n    for i in range(1, n):\n        dif = v[i - 1] - v[i] + Sn\n        if dif <= 0 or dif % n:\n            print('NO')\n            return\n        ans[i] = dif / n\n    dif = v[n - 1] - v[0] + Sn\n    if dif <= 0 or dif % n:\n        print('NO')\n        return\n    ans[0] = dif / n\n    print('YES')\n    [print(int(el), end=' ') for el in ans]\n    print()\nT = int(input())\nwhile T > 0:\n    T -= 1\n    solve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    duration = [int(x) for x in input().split()]\n    total = sum(duration)\n    sn = n * (n + 1) // 2\n    if total % sn != 0:\n        print('NO')\n    else:\n        t = total // sn\n        pos = True\n        ans = [None] * n\n        for i in range(n - 1, -1, -1):\n            tmp = t + duration[i] - duration[(i + 1) % n]\n            if tmp % n != 0 or tmp <= 0:\n                pos = False\n                break\n            else:\n                ans[(i + 1) % n] = tmp // n\n        if pos:\n            print('YES')\n            for i in range(n):\n                print(ans[i], end=' ')\n            print()\n        else:\n            print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if sum(a) % (n * (n + 1) // 2) != 0:\n        print('NO')\n        continue\n    s = sum(a) // (n * (n + 1) // 2)\n    su = 0\n    for i in range(n - 1):\n        su += a[i + 1] - a[i]\n    a1 = (su + s) // n\n    ans = [a1]\n    k = 0\n    for i in range(n - 1):\n        dif = a[i + 1] - a[i]\n        if (s - dif) % n == 0:\n            ans.append((s - dif) // n)\n        else:\n            k = 1\n            print('NO')\n            break\n    if k != 1:\n        for i in ans:\n            if i <= 0:\n                print('NO')\n                k = 1\n                break\n    if k != 1:\n        print('YES')\n        for i in ans:\n            print(i, end=' ')\n        print('\\n', end='')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if sum(a) % (n * (n + 1) // 2) != 0:\n        print('NO')\n        continue\n    s = sum(a) // (n * (n + 1) // 2)\n    su = 0\n    for i in range(n - 1):\n        su += a[i + 1] - a[i]\n    a1 = (su + s) // n\n    ans = [a1]\n    k = 0\n    for i in range(n - 1):\n        dif = a[i + 1] - a[i]\n        if (s - dif) % n == 0:\n            ans.append((s - dif) // n)\n        else:\n            k = 1\n            print('NO')\n            break\n    if k != 1:\n        for i in ans:\n            if i <= 0:\n                print('NO')\n                k = 1\n                break\n    if k != 1:\n        print('YES')\n        for i in ans:\n            print(i, end=' ')\n        print('\\n', end='')", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    lis = [None for i in range(n)]\n    if 2 * sum(arr) % (n * (n + 1)) != 0:\n        print('NO')\n        continue\n    s = 2 * sum(arr) // (n * (n + 1))\n    if (s - arr[0] + arr[n - 1]) % n != 0 or s - arr[0] + arr[n - 1] <= 0:\n        print('NO')\n        continue\n    flag = 0\n    lis[0] = (s - arr[0] + arr[n - 1]) // n\n    for i in range(1, n):\n        if (s - arr[i] + arr[i - 1]) % n == 0 and s - arr[i] + arr[i - 1] > 0:\n            lis[i] = (s - arr[i] + arr[i - 1]) // n\n        else:\n            flag = 1\n            break\n    if flag:\n        print('NO')\n    else:\n        print('YES')\n        print(*lis)", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    t = n * (n + 1) // 2\n    total = sum(x)\n    if total % t > 0:\n        ans = []\n    else:\n        t = total // t\n        ans = []\n        if (t + x[-1] - x[0]) % n == 0 and (t + x[-1] - x[0]) // n > 0:\n            ans += [(t + x[-1] - x[0]) // n]\n        if len(ans) == 1:\n            for i in range(n - 1):\n                if (t + x[i] - x[i + 1]) % n == 0 and (t + x[i] - x[i + 1]) // n > 0:\n                    ans += [(t + x[i] - x[i + 1]) // n]\n                else:\n                    break\n    if len(ans) == n:\n        print('YES')\n        for i in range(n):\n            print(ans[i], end=' ')\n        print()\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = list(map(int, input().split()))\n    ans = 2 * sum(s) // n // (n + 1)\n    if 2 * sum(s) % (n * (n + 1)) != 0:\n        print('NO')\n    else:\n        mas = [0] * n\n        good = True\n        for j in range(n):\n            if (ans + s[j] - s[(j + 1) % n]) % n != 0 or (ans + s[j] - s[(j + 1) % n]) // n <= 0:\n                print('NO')\n                good = False\n                break\n            mas[(j + 1) % n] = (ans + s[j] - s[(j + 1) % n]) // n\n        if not good:\n            continue\n        print('YES')\n        print(*mas)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    B = list(map(int, input().split()))\n    net = 0\n    if sum(B) % (n * (n + 1) // 2) != 0:\n        print('NO')\n        continue\n    net += sum(B) // (n * (n + 1) // 2)\n    A = []\n    flag = True\n    for i in range(n):\n        if net + B[(i - 1) % n] - B[i] <= 0 or (net + B[(i - 1) % n] - B[i]) % n != 0:\n            print('NO')\n            flag = False\n            break\n        x = (net + B[(i - 1) % n] - B[i]) // n\n        A.append(x)\n    if flag:\n        print('YES')\n        for val in A:\n            print(val, end=' ')\n        print()", "t = int(input(''))\nwhile t > 0:\n    n = int(input(''))\n    a = list(map(int, input('').strip().split()))[:n]\n    ss = 'YES'\n    summ = 0\n    lst = []\n    lst.append(a[0] - a[n - 1])\n    for i in range(1, n):\n        lst.append(a[i] - a[i - 1])\n    for i in range(0, n):\n        summ += a[i]\n    summ *= 2\n    summ /= n * (n + 1)\n    for i in range(0, n):\n        if (summ - lst[i]) % n != 0:\n            ss = 'NO'\n            break\n        a[i] = int((summ - lst[i]) / n)\n        if a[i] < 1:\n            ss = 'NO'\n            break\n    print(ss)\n    if ss == 'YES':\n        for i in range(0, n):\n            print(a[i], end=' ')\n        print('')\n    t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    if n == 1:\n        print('YES')\n        print(arr[0])\n        continue\n    avg = 0\n    for j in arr:\n        avg += j\n    avg = 2 * avg / (n * (n + 1))\n    for j in range(len(arr)):\n        arr[j] = arr[j] - avg\n    a = []\n    e = True\n    x1 = arr[0] - arr[n - 1]\n    x1 -= avg\n    x1 = x1 / n\n    x1 = -x1\n    if x1 - int(x1) != 0 or x1 <= 0:\n        e = False\n    a += [int(x1)]\n    for j in range(1, n):\n        x = arr[j] - arr[j - 1]\n        x -= avg\n        x = x / n\n        x = -x\n        if x - int(x) != 0 or x <= 0:\n            e = False\n            break\n        a += [int(x)]\n    if e:\n        print('YES')\n        for q in a:\n            print(q, end=' ')\n        print('')\n    else:\n        print('NO')", "def summ(q):\n    return int((q + 1) * q / 2)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    b = [0] * n\n    a = list(map(int, input().split()))\n    s = sum(a)\n    l = summ(n)\n    e = 0\n    m = 0\n    if s % l == 0:\n        m = s // l\n    else:\n        e = -1\n    b[0] = a[0] - a[-1] - m\n    ss = -1\n    if b[0] > 0:\n        e = -1\n    else:\n        b[0] = abs(b[0])\n    if s < n:\n        e = -1\n    if b[0] <= 0:\n        e -= 1\n    elif b[0] % n != 0:\n        e -= 1\n    else:\n        b[0] = b[0] // n\n        ss = b[0]\n    if e == 0:\n        for j in range(n - 1):\n            b[j + 1] = a[j + 1] - a[j] - m\n            if b[j + 1] >= 0:\n                e = -1\n                break\n            else:\n                b[j + 1] = abs(b[j + 1])\n            if b[j + 1] <= 0:\n                e = -1\n                break\n            elif b[j + 1] % n != 0:\n                e = -1\n                break\n            else:\n                b[j + 1] = b[j + 1] // n\n                if b[j + 1] == 0:\n                    e = -1\n                    break\n                else:\n                    ss += b[j + 1]\n    if e == -1 or ss != m:\n        print('NO')\n    else:\n        print('YES')\n        for j in b:\n            print(j, end=' ')\n        print()", "def sol():\n    n = int(input())\n    L = list(map(int, input().split()))\n    L = [0] + L\n    sum = 0\n    for i in range(1, n + 1):\n        sum = sum + L[i]\n    if sum * 2 % (n * (n + 1)) != 0:\n        print('NO')\n        return\n    sum = sum * 2 // (n * (n + 1))\n    res = []\n    cc = L[1] - L[n]\n    cc = sum - cc\n    if cc <= 0 or cc % n != 0:\n        print('NO')\n        return\n    res.append(cc // n)\n    for i in range(2, n + 1):\n        cc = L[i] - L[i - 1]\n        cc = sum - cc\n        if cc <= 0 or cc % n != 0:\n            print('NO')\n            return\n        res.append(cc // n)\n    print('YES')\n    for i in res:\n        print(i, end=' ')\n    print('')\nTest = int(input())\nfor i in range(1, Test + 1):\n    sol()", "import sys\nimport itertools\nimport copy\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    s = sum(b)\n    if s % (n * (n + 1) // 2):\n        print('NO')\n        continue\n    s //= n * (n + 1) // 2\n    b = itertools.starmap(int.__sub__, zip(b[-1:] + b[:-1], b))\n    b = map(s.__add__, b)\n    b = map(n.__rfloordiv__, b)\n    if sum(copy.deepcopy(b)) != s or max(copy.deepcopy(b)) > 1000000000.0 or min(copy.deepcopy(b)) < 1:\n        print('NO')\n        continue\n    print('YES')\n    print(*b)"]