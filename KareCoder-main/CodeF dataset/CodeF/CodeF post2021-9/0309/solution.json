["from sys import stdin\nrd = stdin.readline\nfor _ in range(int(rd())):\n    (n, l, r) = map(int, rd().split())\n    lis = []\n    for i in range(1, n + 1):\n        temp = ((l - 1) // i + 1) * i\n        if temp > r:\n            print('NO')\n            break\n        lis.append(str(temp))\n    else:\n        print('YES')\n        print(' '.join(lis))", "import sys\nimport math\nT = int(sys.stdin.readline())\n\ndef solve(N, L, R):\n    Ans = []\n    for i in range(1, N + 1):\n        first_mul_above_L = math.ceil(L / i) * i\n        if first_mul_above_L <= R:\n            Ans.append(first_mul_above_L)\n        else:\n            return None\n    return Ans\nfor _ in range(T):\n    (N, L, R) = list(map(int, sys.stdin.readline().split()))\n    Seq = solve(N, L, R)\n    if Seq is None:\n        print('NO')\n    else:\n        print('YES')\n        print(' '.join([str(x) for x in Seq]))", "num_inp = lambda : int(input())\narr_inp = lambda : list(map(int, input().split()))\nsp_inp = lambda : map(int, input().split())\nstr_inp = lambda : input()\nfrom math import gcd\nt = num_inp()\nfor _ in range(t):\n    (n, l, r) = sp_inp()\n    arr = []\n    for i in range(1, n + 1):\n        val = ((l - 1) // i + 1) * i\n        if val >= l and val <= r:\n            arr.append(val)\n        else:\n            print('NO')\n            break\n    else:\n        print('YES')\n        print(' '.join(map(str, arr)))", "m = int(input())\n\ndef func(t, l, r):\n    res = []\n    for i in range(1, t + 1):\n        if l % i == 0:\n            n = l\n        else:\n            n = (l // i + 1) * i\n        if n > r:\n            print('NO')\n            return\n        res.append(n)\n    print('YES')\n    print(' '.join([str(i) for i in res]))\nfor _ in range(m):\n    (n, l, r) = [int(i) for i in input().split()]\n    func(n, l, r)", "for _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    t = l\n    l1 = []\n    for j in range(1, n + 1):\n        k = l % j\n        if k == 0:\n            l1.append(l)\n        elif l + (j - k) <= r:\n            l1.append(l + (j - k))\n        else:\n            break\n    if len(l1) < n:\n        print('NO')\n    else:\n        print('YES')\n        k = ' '.join((str(x) for x in l1))\n        print(k)", "for _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    c = 1\n    g = []\n    for i in range(1, n + 1):\n        if l % i == 0:\n            g.append(str(l))\n        else:\n            x = l // i + 1\n            x = x * i\n            if x <= r:\n                g.append(str(x))\n    if len(g) == n:\n        print('YES')\n        print(' '.join(g))\n    else:\n        print('NO')", "T = int(input())\nfor _ in range(T):\n    (n, l, r) = [int(c) for c in input().split(' ')]\n    sol = []\n    flag = True\n    for i in range(n, 0, -1):\n        cand = l + (i - l % i) % i\n        assert not cand % i\n        if cand > r:\n            print('NO')\n            flag = False\n            break\n        else:\n            sol.append(str(cand))\n    if flag:\n        sol.reverse()\n        print('YES')\n        print(' '.join(sol))", "t = int(input())\nres = []\nfor _ in range(t):\n    (n, l, r) = list(map(int, input().split()))\n    a = []\n    s = set()\n    for i in range(1, n + 1):\n        x = -(l // -i) * i\n        if x <= r:\n            a.append(x)\n    if len(a) == n:\n        res.append('YES')\n        res.append(a)\n    else:\n        res.append('NO')\nfor i in res:\n    if isinstance(i, list):\n        print(*i)\n    else:\n        print(i)", "import math\nt = int(input())\nfor jj in range(t):\n    (n, l, r) = [int(i) for i in input().split(' ')]\n    p = []\n    for i in range(1, n + 1):\n        item = l % i\n        if item == 0:\n            p.append(l)\n        elif l + (i - item) <= r:\n            p.append(l + i - item)\n        else:\n            break\n    if len(p) < n:\n        print('NO')\n    else:\n        print('YES')\n        a = [str(i) for i in p]\n        print(' '.join(a))", "import sys\n\ndef input():\n    return sys.stdin.readline()[:-1]\nt = int(input())\nfor _ in range(t):\n    (n, l, r) = map(int, input().split())\n    ans = []\n    flg = 'YES'\n    for i in range(n):\n        m = (l - 1) // (i + 1) + 1\n        if m * (i + 1) <= r:\n            ans.append(m * (i + 1))\n        else:\n            flg = 'NO'\n    print(flg)\n    if flg == 'YES':\n        print(*ans)", "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\nt = int(input())\nfor i in range(t):\n    (n, l, r) = map(int, input().split())\n    flag = True\n    ans = []\n    for j in range(1, n + 1):\n        y = (l + j - 1) // j\n        x = y * j\n        if x > r:\n            flag = False\n            break\n        ans.append(x)\n    if flag:\n        print('YES')\n        print(' '.join(map(str, ans)))\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    fl = True\n    a = [0] * n\n    for i in range(n):\n        bot = (l + i) // (i + 1) * (i + 1)\n        if bot > r:\n            fl = False\n            break\n        a[i] = bot\n    if fl:\n        print('YES')\n        print(' '.join((str(i) for i in a)))\n    else:\n        print('NO')", "t = int(input())\nfor tt in range(t):\n    (n, l, r) = map(int, input().split())\n    arr = [0] * n\n    for s in range(1, n + 1):\n        k = l - l % s\n        if l % s != 0:\n            k += s\n        if k > r:\n            print('NO')\n            break\n        arr[s - 1] = k\n    else:\n        print('YES')\n        print(' '.join(map(str, arr)))", "n_tests = int(input().strip())\nfor _ in range(n_tests):\n    nums = [int(x) for x in input().strip().split(' ')]\n    n = nums[0]\n    l = nums[1]\n    r = nums[2]\n    feasible = True\n    res = [0] * n\n    for i in reversed(range(1, n + 1)):\n        if l % i == 0:\n            res[i - 1] = str(l)\n        elif r % i == 0:\n            res[i - 1] = str(r)\n        elif r // i > l // i:\n            res[i - 1] = str((l // i + 1) * i)\n        else:\n            feasible = False\n            break\n    if feasible:\n        print('YES')\n        print(' '.join(res))\n    else:\n        print('NO')", "t = int(input())\nwhile t:\n    s = input().split()\n    (n, l, r) = map(int, s)\n    arr = []\n    ans = 'YES'\n    for i in range(1, n + 1):\n        if l % i == 0:\n            num = l\n        else:\n            num = i - l % i + l\n        if num > r:\n            ans = 'NO'\n            break\n        arr.append(num)\n    if ans == 'YES':\n        print(ans)\n        print(' '.join(list(map(str, arr))))\n    else:\n        print('NO')\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (n, l, r) = map(int, input().split())\n    ans = [l]\n    ji = []\n    for i in range(1, n):\n        a = l % (i + 1)\n        if a == 0:\n            ans.append(l)\n        else:\n            ans.append(l + i + 1 - l % (i + 1))\n    if max(ans) > r:\n        print('NO')\n    else:\n        print('YES')\n        print(' '.join(map(str, ans)))", "for i in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    a = []\n    for i in range(n):\n        i1 = i + 1\n        if l % i1 == 0:\n            a.append(l)\n        else:\n            k = l + i1 - l % i1\n            if k > r:\n                print('NO')\n                break\n            else:\n                a.append(k)\n    else:\n        print('YES')\n        print(' '.join([str(i) for i in a]))", "for i in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    li = str(l)\n    x = l\n    ans = 'YES'\n    if n == 1:\n        print('YES')\n        print(l)\n        continue\n    for i in range(2, n + 1):\n        if l % i == 0:\n            li += ' ' + str(l)\n        else:\n            y = l // i\n            x = int((y + 1) * i)\n            li += ' ' + str(x)\n        if x > r:\n            ans = 'NO'\n            break\n    print(ans)\n    if ans == 'YES':\n        print(li)", "j = 0\nt = int(input())\nwhile j < t:\n    (n, l, r) = map(int, input().split())\n    b = True\n    L = []\n    for i in range(n, 0, -1):\n        a = l // i\n        if a * i < l:\n            if l <= (a + 1) * i <= r:\n                L.append((a + 1) * i)\n            else:\n                b = False\n                break\n        elif l <= a * i <= r:\n            L.append(a * i)\n        else:\n            b = False\n            break\n    if not b:\n        print('NO')\n    else:\n        L.reverse()\n        print('YES')\n        print(' '.join(map(str, L)))\n    j += 1", "import math\nt = int(input())\n\ndef solve():\n    (n, l, r) = map(int, input().split())\n    lst = []\n    for i in range(1, n + 1):\n        k = math.ceil(l / i) * i\n        if k >= l and k <= r:\n            lst.append(k)\n        else:\n            print('NO')\n            return\n    print('YES')\n    print(' '.join((str(ele) for ele in lst)))\nwhile t:\n    solve()\n    t -= 1", "def sol(n, l, r):\n    arr = []\n    for i in range(1, n + 1):\n        num = i * (l // i + 1 if l % i != 0 else l // i)\n        if num > r:\n            return (0, [])\n        arr.append(num)\n    return (1, arr)\nx = int(input())\nfor _ in range(x):\n    (n, l, r) = list(map(int, input().split()))\n    (found, arr) = sol(n, l, r)\n    if found:\n        print('YES')\n        print(' '.join(map(str, arr)))\n    else:\n        print('NO')", "import sys\nimport math\nt = int(sys.stdin.readline())\nfor i in range(t):\n    (n, l, r) = map(int, sys.stdin.readline().split())\n    se = set()\n    ans = []\n    dic = {}\n    for j in range(2, n + 1):\n        dic[j] = []\n    for j in range(1, n + 1):\n        rem = l % j\n        if rem > 0:\n            ele = l + j - rem\n        else:\n            ele = l\n        if ele <= r:\n            ans.append(ele)\n    if len(ans) == n:\n        print('YES')\n        print(*ans)\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, l, r) = list(map(int, input().split()))\n    g = ''\n    z = ''\n    for i in range(1, n + 1):\n        if l % i == 0:\n            z += str(l)\n            z += ' '\n        else:\n            w = l % i\n            w = i - w\n            if l + w > r:\n                g = 'break'\n                break\n            else:\n                z += str(l + w)\n                z += ' '\n    if g == 'break':\n        print('NO')\n    else:\n        print('YES')\n        print(z)", "import sys\nfrom sys import stdin, stdout\nfrom math import ceil, floor, sqrt, log, log2, log10\nfrom collections import Counter\nint_max = float('inf')\nint_min = -float('inf')\nmod = 10 ** 9 + 7\nANS = []\ninput = stdin.readline\n\ndef solve():\n    pass\nt = int(input())\nfor i in range(t):\n    (n, l, r) = map(int, input().split())\n    f = 1\n    arr = []\n    for i in range(1, n + 1):\n        if l <= ((l - 1) // i + 1) * i <= r:\n            arr.append(((l - 1) // i + 1) * i)\n        else:\n            f = 0\n    if f == 0:\n        print('NO')\n    else:\n        print('YES')\n        print(*arr)", "t = int(input())\nfor _ in range(t):\n    (n, l, r) = list(map(int, input().split(' ')))\n    a = []\n    if r < n:\n        print('NO')\n        continue\n    for i in range(1, n + 1):\n        if l % i == 0:\n            a.append(str(l))\n        else:\n            b = (l // i + 1) * i\n            if b > r:\n                print('NO')\n                break\n            else:\n                a.append(str(b))\n    else:\n        print('YES')\n        print(' '.join(a))", "import os.path\nfrom math import gcd, floor, ceil\nfrom collections import *\nimport sys\nmod = 1000000007\nINF = float('inf')\n\ndef st():\n    return list(sys.stdin.readline().strip())\n\ndef li():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef mp():\n    return map(int, sys.stdin.readline().split())\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef pr(n):\n    return sys.stdout.write(str(n) + '\\n')\n\ndef prl(n):\n    return sys.stdout.write(str(n) + ' ')\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nt = inp()\nfor _ in range(t):\n    (n, l, r) = mp()\n    f = 0\n    k = []\n    for i in range(1, n + 1):\n        if l % i == 0:\n            k.append(l)\n        else:\n            s = l // i\n            if (s + 1) * i <= r:\n                k.append((s + 1) * i)\n            else:\n                f = 1\n                break\n    if f == 1:\n        pr('NO')\n    else:\n        pr('YES')\n        print(*k)", "import sys\ninput = sys.stdin.readline\n\ndef helper(n, x):\n    if x > n:\n        return x\n    z = x // 2\n    n = n + z\n    n = n - n % x\n    return n\nfor _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    a = [0] * (n + 1)\n    ok = True\n    for i in range(1, n + 1):\n        a[i] = helper(l, i)\n        if a[i] < l:\n            a[i] += i\n        if a[i] > r:\n            ok = False\n            break\n    if ok == False:\n        print('NO')\n    else:\n        print('YES')\n        print(*a[1:])", "for t in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    if n == 1:\n        print('YES')\n        print(l)\n    else:\n        ans = [l] * n\n        f = True\n        for i in range(1, n + 1):\n            if ans[i - 1] % i == 0:\n                pass\n            elif ans[i - 1] + (i - ans[i - 1] % i) <= r:\n                ans[i - 1] += i - ans[i - 1] % i\n            else:\n                f = False\n                break\n        if f:\n            print('YES')\n            print(' '.join(map(str, ans)))\n        else:\n            print('NO')", "def divisible(n, r):\n    if n % r == 0:\n        return n // r\n    else:\n        return n // r + 1\nt = int(input())\nwhile t > 0:\n    (n, l, r) = list(map(int, input().split(' ')))\n    ans = ''\n    temp1 = 0\n    for i in range(1, n + 1):\n        temp = divisible(l, i)\n        temp = temp * i\n        if temp > r:\n            print('NO')\n            temp1 = 1\n            break\n        ans += str(temp) + ' '\n    if temp1 == 0:\n        print('YES')\n        print(ans)\n    t -= 1", "def solve():\n    ans = []\n    for i in range(1, n + 1):\n        temp = l % i\n        x = l\n        if temp:\n            x += i - temp\n        if x > r:\n            print('NO')\n            return\n        ans.append(x)\n    print('YES')\n    print(*ans)\nfor _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    solve()", "import math\nimport collections\nimport itertools\nimport functools\n\ndef fun(t):\n    (n, l, r) = map(int, input().split(' '))\n    arr = []\n    for i in range(1, n + 1):\n        if l % i == 0:\n            arr.append(l)\n        else:\n            k = l + i - l % i\n            if k > r:\n                print('NO')\n                return\n            else:\n                arr.append(k)\n    print('YES')\n    print(*arr)\nfor tc in range(int(input())):\n    fun(tc)", "for _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    if r < n:\n        print('NO')\n    else:\n        a = [0 for i in range(n)]\n        for i in range(n - 1, -1, -1):\n            if l % (i + 1) == 0:\n                a[i] = str(l)\n            else:\n                a[i] = str(l + (i + 1) - l % (i + 1))\n            if int(a[i]) > r:\n                print('NO')\n                break\n        else:\n            print('YES')\n            print(' '.join(a))", "def ro(l, i):\n    if not i:\n        return l\n    rem = l % i\n    if not rem:\n        return l\n    return l + i - rem\n\ndef solve():\n    (n, l, r) = map(int, input().split())\n    res = []\n    d = r - l\n    can = True\n    for i in range(1, n + 1):\n        rem = ro(l, i)\n        if rem > r:\n            can = False\n            break\n        res.append(rem)\n    if not can:\n        print('NO')\n    else:\n        print('YES')\n        print(*res)\n    return\n\ndef main():\n    for _ in range(int(input())):\n        solve()\n    return\nmain()", "for _ in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    f = []\n    flag = True\n    for i in range(1, n + 1):\n        if l % i == 0:\n            f.append(l)\n        else:\n            ans = (l // i + 1) * i\n            if ans > r:\n                flag = False\n            else:\n                f.append(ans)\n    if flag:\n        print('YES')\n        print(*f)\n    else:\n        print('NO')", "for i in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    f = []\n    k = 1\n    for j in range(1, n + 1):\n        f += [(l - 1) // j * j + j]\n        if f[-1] > r:\n            k = 0\n    if k:\n        print('YES')\n        print(*f)\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (n, l, r) = map(int, input().split())\n    res = []\n    flag = 0\n    for j in range(1, n + 1):\n        val = l + (j - l % j) if l % j != 0 else l\n        if val <= r:\n            res.append(val)\n        else:\n            flag = 1\n            break\n    if flag == 1:\n        print('NO')\n    else:\n        print('YES')\n        print(*res)", "import sys\nimport math\n\ndef diff_gcds(n, l, r):\n    result = []\n    for k in range(1, n + 1):\n        lower = math.ceil(l / k)\n        upper = math.floor(r / k)\n        if lower > upper:\n            return 'NO'\n        else:\n            result.append(lower * k)\n    return result\ninput = list(map(int, sys.stdin.read().split()))\nn = input[0]\ndata = input[1:]\ncases = list(zip(data[0:3 * n:3], data[1:3 * n:3], data[2:3 * n:3]))\nfor i in cases:\n    (n, l, r) = i\n    output = diff_gcds(n, l, r)\n    if output == 'NO':\n        print(output)\n    else:\n        print('YES')\n        for j in output:\n            print(j, end=' ')\n        print('')", "t = int(input())\nfor i in range(t):\n    (n, l, r) = map(int, input().split())\n    m = []\n    for i in range(1, n + 1):\n        if l % i == 0:\n            m.append(l)\n        else:\n            a = l // i\n            b = i * (a + 1)\n            if b <= r:\n                m.append(b)\n            else:\n                print('NO')\n                break\n    else:\n        print('YES')\n        print(*m)", "t = int(input())\nfor i in range(t):\n    (n, l, r) = map(int, input().split())\n    ans = []\n    for i in range(1, n + 1):\n        if l % i == 0:\n            ans.append(l)\n        else:\n            ans.append(l + (i - l % i))\n    if max(ans) <= r and min(ans) >= l:\n        print('YES')\n        print(*ans)\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (n, l, r) = map(int, input().split())\n    ans = []\n    for i in range(1, n + 1):\n        if l % i == 0:\n            ans.append(l)\n        else:\n            ans.append(l + (i - l % i))\n    if max(ans) <= r and min(ans) >= l:\n        print('YES')\n        print(*ans)\n    else:\n        print('NO')", "for t in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    k = []\n    cnt = 0\n    for i in range(1, n + 1):\n        if l % i == 0:\n            k.append(l)\n        else:\n            x = (l // i + 1) * i\n            if x >= l and x <= r:\n                k.append(x)\n            else:\n                cnt = 1\n    if cnt:\n        print('NO')\n    else:\n        print('YES')\n        print(*k)", "for _ in range(int(input())):\n    (a, b, c) = list(map(int, input().split()))\n    arr = []\n    for i in range(1, a + 1):\n        arr.append(b + i - (b - 1) % i - 1)\n    if max(arr) <= c:\n        print('YES')\n        print(*arr)\n    else:\n        print('NO')", "def test():\n    (n, l, r) = [int(i) for i in input().split()]\n    li = [0]\n    for i in range(1, n + 1):\n        li.append(((l - 1) // i + 1) * i)\n        if li[i] > r:\n            print('NO')\n            return\n    print('YES')\n    for i in range(1, n + 1):\n        print(li[i], end=' ')\n    print('')\n    return\nt = int(input())\nfor i in range(t):\n    test()", "for i in range(int(input())):\n    (n, l, r) = map(int, input().split())\n    f = []\n    k = 1\n    for j in range(1, n + 1):\n        f += [(l - 1) // j * j + j]\n        if f[-1] > r:\n            k = 0\n    if k:\n        print('YES')\n        print(*f)\n    else:\n        print('NO')", "tt = int(input())\nfor _ in range(tt):\n    (n, l, r) = map(int, input().split())\n    arr = [0] * n\n    flag = False\n    for i in range(n):\n        arr[i] = ((l - 1) // (i + 1) + 1) * (i + 1)\n        if not l <= arr[i] <= r:\n            print('NO')\n            flag = True\n            break\n    if not flag:\n        print('YES')\n        print(*arr)", "def calc(n, l, r):\n    b = []\n    for i in range(1, n + 1):\n        x = ((l - 1) // i + 1) * i\n        if x <= r:\n            b.append(x)\n    if len(b) < n:\n        print('NO')\n    else:\n        print('YES')\n        print(*b)\nc = int(input())\nfor i in range(0, c):\n    a = list(map(int, str(input()).split(' ')))\n    calc(a[0], a[1], a[2])", "tt = 1\ntt = int(input())\nfor _ in range(tt):\n    (n, l, r) = map(int, input().split())\n    ch = 1\n    ans = [0] * n\n    for i in range(n):\n        j = i + 1\n        num = ((l - 1) // j + 1) * j\n        if l <= num <= r:\n            ans[i] = num\n        else:\n            ch = 0\n    if ch:\n        print('YES')\n        print(*ans)\n    else:\n        print('NO')"]