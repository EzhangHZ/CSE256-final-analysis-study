["t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    X = list(zip(a, b))\n    Y = list(zip(sorted(a), sorted(b)))\n    if Y == sorted(X):\n        X_i = sorted((x + (i,) for (i, x) in enumerate(X)))\n        a_index = list(range(n))\n        b_index = [x[2] for x in X_i]\n        moves = []\n        for j in range(n):\n            if a_index[j] == b_index[j]:\n                continue\n            a_i = j\n            b_i = a_index.index(b_index[j])\n            moves.append((a_i, b_i))\n            (a_index[a_i], a_index[b_i]) = (a_index[b_i], a_index[a_i])\n        print(len(moves))\n        if len(moves) > 0:\n            print('\\n'.join((f'{x + 1} {y + 1}' for (x, y) in moves)))\n    else:\n        print(-1)", "import sys\ninput = lambda : sys.stdin.readline().strip()\n\ndef is_sorted(a):\n    last = a[0]\n    for i in a:\n        if i < last:\n            return False\n        last = i\n    return True\n\ndef good(ab):\n    a = [l for (l, r) in ab]\n    b = [r for (l, r) in ab]\n    return is_sorted(a) and is_sorted(b)\n\ndef get_sort_seq(ab, ab_sorted):\n    idx = 0\n    ans = []\n    for pair in ab_sorted:\n        cur = ab[idx:].index(pair) + idx\n        if cur != idx:\n            (ab[idx], ab[cur]) = (ab[cur], ab[idx])\n            ans.append((cur + 1, idx + 1))\n        idx += 1\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    ab = [*zip(a, b)]\n    ba = [*zip(b, a)]\n    if good(sorted(ab)):\n        sort_seq = get_sort_seq(ab, sorted(ab))\n    elif good(sorted(ba)):\n        sort_seq = get_sort_seq(ba, sorted(ba))\n    else:\n        sort_seq = -1\n    if sort_seq == -1:\n        print(-1)\n    else:\n        print(len(sort_seq))\n        for pair in sort_seq:\n            print(*pair)", "from math import ceil\nfrom collections import defaultdict\nimport sys\nsys.setrecursionlimit(10 ** 6)\n\ndef mlt():\n    return map(int, input().split())\nmod = int(1000000000.0 + 7)\n\ndef initmap():\n    return defaultdict(lambda : 0)\n\nclass Solution:\n\n    def __init__(self) -> None:\n        x = int(input())\n        s = [*mlt()]\n        z = [*mlt()]\n        expectedS = sorted(s)\n        expectedZ = sorted(z)\n        res = []\n        for n in range(x):\n            a = [expectedS[n], expectedZ[n]]\n            found = 0\n            if s[n] == a[0] and z[n] == a[1]:\n                continue\n            for k in range(n + 1, x):\n                if s[k] == a[0] and z[k] == a[1]:\n                    found = 1\n                    res.append([n + 1, k + 1])\n                    (s[n], s[k]) = (s[k], s[n])\n                    (z[n], z[k]) = (z[k], z[n])\n                    break\n            if found == 0:\n                print(-1)\n                return\n        print(len(res))\n        for n in res:\n            print(*n, sep=' ')\nfor _ in range(int(input())):\n    Solution()", "N = int(input())\nfor _ in range(N):\n    n = int(input())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    zipped = list(zip(arr1, arr2, range(1, n + 1)))\n    zipped.sort()\n    second = [x[1] for x in zipped]\n    if second != sorted(second):\n        print(-1)\n        continue\n    third = [x[2] for x in zipped]\n    l = list(range(1, n + 1))\n    count = 0\n    toOutput = []\n    for i in range(n):\n        if third[i] != l[i]:\n            toOutput.append((third[i], l[i]))\n            (third[third.index(i + 1)], third[i]) = (third[i], third[third.index(i + 1)])\n            count += 1\n    print(count)\n    for (a, b) in toOutput:\n        print(a, b)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    asorted = sorted(a)\n    bsorted = sorted(b)\n    moves = []\n    oFlag = False\n    for i in range(n):\n        ai = asorted[i]\n        bi = bsorted[i]\n        flag = False\n        for j in range(i, n):\n            if ai == a[j] and bi == b[j]:\n                if i != j:\n                    moves.append((i, j))\n                (a[i], a[j]) = (a[j], a[i])\n                (b[i], b[j]) = (b[j], b[i])\n                flag = True\n                break\n        if not flag:\n            print('-1')\n            oFlag = True\n            break\n    if not oFlag:\n        print(len(moves))\n        for k in moves:\n            print(str(k[0] + 1), str(k[1] + 1))", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    a = str(input()).split(' ')\n    b = str(input()).split(' ')\n    arr = []\n    brr = []\n    true = []\n    inv = []\n    for i in range(n):\n        arr.append((i, int(a[i]), int(b[i])))\n        brr.append((i, int(b[i]), int(a[i])))\n        true.append(i)\n        inv.append(i)\n    arr.sort(key=lambda x: (x[1], x[2]))\n    brr.sort(key=lambda x: (x[1], x[2]))\n    answer = []\n    flag = True\n    for i in range(n - 1):\n        if arr[i][0] != brr[i][0]:\n            flag = False\n            break\n    if flag:\n        for i in range(n - 1):\n            if true[arr[i][0]] != i:\n                answer.append((true[arr[i][0]], i))\n                true[inv[i]] = true[arr[i][0]]\n                inv[true[arr[i][0]]] = inv[i]\n                true[arr[i][0]] = i\n                inv[i] = arr[i][0]\n        print(len(answer))\n        for i in answer:\n            print(i[0] + 1, i[1] + 1)\n    else:\n        print(-1)", "t = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    b = list(map(int, input().split(' ')))\n    h = {}\n    x = a.copy()\n    y = b.copy()\n    x.sort()\n    y.sort()\n    if a == x and b == y:\n        print(0)\n        t -= 1\n        continue\n    res = []\n    count = 0\n    flag = 0\n    for i in range(n):\n        if a[i] == x[i] and b[i] == y[i]:\n            continue\n        else:\n            for j in range(i + 1, n):\n                if a[j] == x[i] and b[j] == y[i]:\n                    res.append([i, j])\n                    (a[i], a[j]) = (a[j], a[i])\n                    (b[i], b[j]) = (b[j], b[i])\n                    count += 1\n                    break\n        if a[i] == x[i] and b[i] == y[i]:\n            continue\n        else:\n            flag = 1\n            break\n    if flag == 1:\n        print(-1)\n    else:\n        print(count)\n        for i in res:\n            print(i[1] + 1, i[0] + 1)\n    t -= 1", "import sys\nimport math\nfrom collections import Counter\n\ndef gi():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef gs():\n    return sys.stdin.readline().strip()\n\ndef fun(a, b):\n    l = len(a)\n    ans = list(zip(a, b))\n    a1 = sorted(a)\n    b1 = sorted(b)\n    ans1 = list(zip(a1, b1))\n    res = []\n    for i in range(l):\n        if ans[i] == ans1[i]:\n            continue\n        f = 0\n        for j in range(i + 1, l):\n            if ans1[i] == ans[j]:\n                f = 1\n                break\n        if f == 0:\n            return -1\n        (ans[i], ans[j]) = (ans[j], ans[i])\n        res.append([j + 1, i + 1])\n    return res\nfor _ in range(int(input())):\n    n = input()\n    a = gi()\n    b = gi()\n    x = fun(a, b)\n    if x == -1:\n        print('-1')\n    else:\n        print(len(x))\n        for i in x:\n            print(*i)", "import sys\nimport math\nN = int(input())\nfor _ in range(N):\n    n = int(input())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    zipped = list(zip(arr1, arr2, range(1, n + 1)))\n    zipped.sort()\n    second = [x[1] for x in zipped]\n    if second != sorted(second):\n        print(-1)\n        continue\n    third = [x[2] for x in zipped]\n    l = list(range(1, n + 1))\n    count = 0\n    toOutput = []\n    for i in range(n):\n        if third[i] != l[i]:\n            toOutput.append((third[i], l[i]))\n            (third[third.index(i + 1)], third[i]) = (third[i], third[third.index(i + 1)])\n            count += 1\n    print(count)\n    for (a, b) in toOutput:\n        print(a, b)", "import sys\nimport math\nfrom copy import deepcopy\nN = int(input())\nfor _ in range(N):\n    n = int(input())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    zipped = list(zip(arr1, arr2, range(1, n + 1)))\n    zipped.sort()\n    second = [x[1] for x in zipped]\n    if second != sorted(second):\n        print(-1)\n        continue\n    third = [x[2] for x in zipped]\n    l = list(range(1, n + 1))\n    count = 0\n    toOutput = []\n    for i in range(n):\n        if third[i] != l[i]:\n            toOutput.append((third[i], l[i]))\n            (third[third.index(i + 1)], third[i]) = (third[i], third[third.index(i + 1)])\n            count += 1\n    print(count)\n    for (a, b) in toOutput:\n        print(a, b)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    sa = sorted(a)\n    b = list(map(int, input().split()))\n    sb = sorted(b)\n    (x, y, xx, k, res) = ([], [], [], 0, [])\n    for i in range(n):\n        x.append((a[i], b[i]))\n        xx.append((a[i], b[i], i))\n        y.append((sa[i], sb[i]))\n    if y == sorted(x):\n        xx.sort()\n        i_ns = [pp[2] for pp in xx]\n        for j in range(n):\n            m = i_ns[j]\n            if m == j:\n                continue\n            o = i_ns.index(j)\n            i_ns[o] = m\n            i_ns[j] = 'h'\n            k += 1\n            res.append((j + 1, m + 1))\n        print(k)\n        for e in res:\n            print(*e, sep=' ')\n    else:\n        print(-1)", "import collections\nfrom math import ceil, gcd, sqrt, log\nINF = float('inf')\nmod = 1000000007\n\ndef solve():\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    okA = sorted(A)\n    okB = sorted(B)\n    ans = []\n    flag = 0\n    for i in range(n):\n        if A[i] == okA[i] and B[i] == okB[i]:\n            continue\n        for j in range(i + 1, n):\n            if A[j] == okA[i] and B[j] == okB[i]:\n                (A[i], A[j]) = (A[j], A[i])\n                (B[i], B[j]) = (B[j], B[i])\n                ans.append([i + 1, j + 1])\n                break\n        if A[i] != okA[i] or B[i] != okB[i]:\n            flag = 1\n            break\n    if flag:\n        print(-1)\n    else:\n        print(len(ans))\n        for a in ans:\n            print(*a)\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "def swap_times(c, d, pos, res, times):\n    if pos == len(c):\n        return (times, res)\n    if c[pos] != d[pos]:\n        times += 1\n        for ii in range(pos, len(a)):\n            if c[ii] == d[pos]:\n                res.append((ii, pos))\n                (c[ii], c[pos]) = (c[pos], c[ii])\n                break\n    return swap_times(c, d, pos + 1, res, times)\n\ndef output(c, d):\n    for i in range(len(d) - 1):\n        if d[i][1] > d[i + 1][1]:\n            print(-1)\n            return\n    res = []\n    times = 0\n    ans = swap_times(c, d, 0, res, times)\n    print(ans[0])\n    for i in range(len(ans[1])):\n        print(ans[1][i][0] + 1, ans[1][i][1] + 1)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = []\n    d = []\n    for i in range(n):\n        c.append((a[i], b[i]))\n        d.append((a[i], b[i]))\n    d.sort()\n    output(c, d)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    q = sorted(a)\n    w = sorted(b)\n    answ = []\n    for (i, e) in enumerate(zip(q, w)):\n        if e[0] == a[i] and e[1] == b[i]:\n            continue\n        found = False\n        for j in range(i + 1, n):\n            if e[0] == a[j] and e[1] == b[j]:\n                answ.append((i + 1, j + 1))\n                (a[j], b[j]) = (a[i], b[i])\n                found = True\n                break\n        if not found:\n            answ = [-1]\n            break\n    if not answ:\n        print(0)\n        continue\n    if answ[0] == -1:\n        print(-1)\n        continue\n    print(len(answ))\n    for (i, j) in answ:\n        print(i, j)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    L = []\n    for i in range(n):\n        a = i + A[i:].index(min(A[i:]))\n        b = i + B[i:].index(min(B[i:]))\n        if A[b] == min(A[i:]) and b != i:\n            (A[b], A[i]) = (A[i], A[b])\n            (B[b], B[i]) = (B[i], B[b])\n            L.append([b + 1, i + 1])\n        elif B[a] == min(B[i:]) and a != i:\n            (A[a], A[i]) = (A[i], A[a])\n            (B[a], B[i]) = (B[i], B[a])\n            L.append([a + 1, i + 1])\n        elif B[a] == min(B[i:]) and a == i:\n            pass\n        elif A[b] == min(A[i:]) and b == i:\n            pass\n        else:\n            break\n    if i != n - 1 or len(L) > 10 ** 4:\n        print(-1)\n    else:\n        print(len(L))\n        for i in range(len(L)):\n            print(*L[i])", "def is_sorted(l):\n    return all((l[i] <= l[i + 1] for i in range(len(l) - 1)))\n\ndef find_next(a, b, n, start):\n    (idx, mina, minb) = (start, a[start], b[start])\n    for i in range(start + 1, n):\n        if a[i] < mina or (a[i] == mina and b[i] < minb):\n            (idx, mina, minb) = (i, a[i], b[i])\n    return idx\n\ndef double_sort(a, b, n):\n    assert n == len(a) and n == len(b)\n    sol = []\n    for i in range(n - 1):\n        idx = find_next(a, b, n, i)\n        if idx != i:\n            (a[i], a[idx]) = (a[idx], a[i])\n            (b[i], b[idx]) = (b[idx], b[i])\n            sol.append((i, idx))\n    assert is_sorted(a)\n    if not is_sorted(b):\n        print(-1)\n    else:\n        print(len(sol))\n        for s in sol:\n            print(s[0] + 1, s[1] + 1)\nt = int(input())\nfor c in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    double_sort(a, b, n)", "for _ in range(int(input())):\n    done = True\n    n = int(input())\n    (a, b) = (list(map(int, input().split())), list(map(int, input().split())))\n    (aa, bb) = (sorted(a), sorted(b))\n    res = []\n    for i in range(n):\n        if a[i] == aa[i] and b[i] == bb[i]:\n            continue\n        for j in range(i + 1, n):\n            if a[j] == aa[i] and b[j] == bb[i]:\n                (a[i], a[j]) = (a[j], a[i])\n                (b[i], b[j]) = (b[j], b[i])\n                res += [(i, j)]\n                break\n        if a[i] != aa[i] or b[i] != bb[i]:\n            done = False\n            break\n    if not done:\n        print(-1)\n    else:\n        print(len(res))\n        for swap in res:\n            print(swap[0] + 1, swap[1] + 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    oa = a.copy()\n    ob = b.copy()\n    ml = []\n    m = 0\n    a.sort()\n    b.sort()\n    for i in range(n):\n        for j in range(i, n):\n            if a[i] == oa[j]:\n                (oa[i], oa[j]) = (oa[j], oa[i])\n                (ob[i], ob[j]) = (ob[j], ob[i])\n                if i != j:\n                    ml.append((i, j))\n                    m += 1\n                break\n    for i in range(n):\n        for j in range(i, n):\n            if b[i] == ob[j]:\n                (oa[i], oa[j]) = (oa[j], oa[i])\n                (ob[i], ob[j]) = (ob[j], ob[i])\n                if i != j:\n                    ml.append((i, j))\n                    m += 1\n                break\n    if oa == a and m <= 10 ** 4:\n        print(m)\n        for x in ml:\n            print(x[0] + 1, x[1] + 1)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(int(input()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    operations = []\n    u = sorted(a)\n    o = sorted(b)\n    can = True\n    for i in range(n):\n        needed = (u[i], o[i])\n        index = None\n        for j in range(i, n):\n            if (a[j], b[j]) == needed:\n                index = j\n                break\n        if index == None:\n            can = False\n            break\n        else:\n            (a[i], a[index]) = (a[index], a[i])\n            (b[i], b[index]) = (b[index], b[i])\n            if i != index:\n                operations.append((i + 1, index + 1))\n    if can:\n        print(len(operations))\n        for item in operations:\n            print(*item)\n    else:\n        print(-1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    A = [i for i in a]\n    B = [j for j in b]\n    A.sort()\n    B.sort()\n    (ans, move) = ([], 0)\n    flag = False\n    for i in range(n):\n        if a[i] == A[i] and b[i] == B[i]:\n            continue\n        else:\n            pair = (A[i], B[i])\n            for j in range(i + 1, n):\n                if pair[0] == a[j] and pair[1] == b[j]:\n                    (a[i], a[j]) = (a[j], a[i])\n                    (b[i], b[j]) = (b[j], b[i])\n                    ans.append((i + 1, j + 1))\n            if a[i] == pair[0] and b[i] == pair[1]:\n                continue\n            else:\n                flag = True\n                break\n    if flag:\n        print(-1)\n    else:\n        print(len(ans))\n        for i in range(len(ans)):\n            print(ans[i][0], ans[i][1])", "t = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = [i for i in sorted(a)]\n    y = [i for i in sorted(b)]\n    ans = []\n    flag = 0\n    for i in range(n):\n        if a[i] == x[i] and b[i] == y[i]:\n            continue\n        else:\n            for j in range(i + 1, n):\n                if a[j] == x[i] and b[j] == y[i]:\n                    ans.append((i + 1, j + 1))\n                    (a[i], a[j]) = (a[j], a[i])\n                    (b[i], b[j]) = (b[j], b[i])\n        if a[i] == x[i] and b[i] == y[i]:\n            continue\n        else:\n            flag = 1\n            break\n    if flag:\n        print(-1)\n    else:\n        print(len(ans))\n        for i in ans:\n            print(*i)\n    t -= 1", "t = int(input())\nwhile t:\n    n = int(input())\n    A = [int(i) for i in input().split()]\n    B = [int(i) for i in input().split()]\n    d1 = dict()\n    d2 = dict()\n    C = []\n    for i in range(n):\n        C.append((A[i], B[i]))\n    C.sort()\n    res = []\n    for i in range(n):\n        if A[i] == C[i][0] and B[i] == C[i][1]:\n            pass\n        else:\n            for j in range(i + 1, n):\n                if A[j] == C[i][0] and B[j] == C[i][1]:\n                    (A[i], A[j]) = (A[j], A[i])\n                    (B[i], B[j]) = (B[j], B[i])\n                    res.append((i + 1, j + 1))\n    temp = True\n    for i in range(1, n):\n        if C[i][0] >= C[i - 1][0] and C[i][1] >= C[i - 1][1]:\n            pass\n        else:\n            temp = False\n    if temp:\n        print(len(res))\n        for i in res:\n            print(i[0], i[1])\n    else:\n        print('-1')\n    t -= 1", "def getmin(a, c):\n    m = min(a[c:])\n    k = set()\n    for i in range(c, len(a)):\n        if a[i] == m:\n            k.add(i)\n    return k\nt = int(input())\nfor tc in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = 0\n    ans = []\n    flag = True\n    while c < len(a):\n        sa = getmin(a, c)\n        sb = getmin(b, c)\n        both = sa.intersection(sb)\n        if len(both) == 0:\n            flag = False\n            break\n        if c in both:\n            pass\n        else:\n            z = both.pop()\n            ans.append((c, z))\n            (a[c], a[z]) = (a[z], a[c])\n            (b[c], b[z]) = (b[z], b[c])\n        c += 1\n        continue\n    if flag and len(ans) <= 10 ** 4:\n        print(len(ans))\n        for el in ans:\n            print(el[0] + 1, el[1] + 1)\n    else:\n        print(-1)", "def solve():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    b = list(map(int, input().split(' ')))\n    idxl = []\n    for i in range(0, n):\n        swapidx = i\n        for j in range(i + 1, n):\n            if a[j] < a[swapidx]:\n                swapidx = j\n        if swapidx != i:\n            (a[i], a[swapidx]) = (a[swapidx], a[i])\n            (b[i], b[swapidx]) = (b[swapidx], b[i])\n            idxl.append([i, swapidx])\n    for i in range(len(b) - 1):\n        swapidx = i\n        for j in range(i + 1, len(b)):\n            if b[j] < b[swapidx] and a[i] == a[j]:\n                swapidx = j\n        if swapidx != i:\n            (a[i], a[swapidx]) = (a[swapidx], a[i])\n            (b[i], b[swapidx]) = (b[swapidx], b[i])\n            idxl.append([i, swapidx])\n    for i in range(1, n):\n        if b[i] < b[i - 1]:\n            print(-1)\n            return\n    print(len(idxl))\n    if len(idxl) > 0:\n        for ls in idxl:\n            print(ls[0] + 1, ' ', ls[1] + 1)\nt = int(input())\nfor _ in range(t):\n    solve()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    A = [i for i in a]\n    B = [j for j in b]\n    A.sort()\n    B.sort()\n    (ans, move) = ([], 0)\n    flag = False\n    for i in range(n):\n        if a[i] == A[i] and b[i] == B[i]:\n            continue\n        else:\n            pair = (A[i], B[i])\n            for j in range(i + 1, n):\n                if A[i] == a[j] and B[i] == b[j]:\n                    (a[i], a[j]) = (a[j], a[i])\n                    (b[i], b[j]) = (b[j], b[i])\n                    ans.append((i + 1, j + 1))\n            if a[i] == A[i] and b[i] == B[i]:\n                continue\n            else:\n                flag = True\n                break\n    if flag:\n        print(-1)\n    else:\n        print(len(ans))\n        for i in range(len(ans)):\n            print(ans[i][0], ans[i][1])", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    p = []\n    for i in range(n):\n        p.append([a[i], b[i]])\n    ans = []\n    p.sort()\n    flag = 1\n    for i in range(n):\n        if i != 0:\n            if p[i][0] >= p[i - 1][0] and p[i][1] >= p[i - 1][1]:\n                pass\n            else:\n                flag = 0\n                break\n        if a[i] == p[i][0] and b[i] == p[i][1]:\n            pass\n        else:\n            for j in range(i + 1, n):\n                if a[j] == p[i][0] and b[j] == p[i][1]:\n                    (a[i], a[j]) = (a[j], a[i])\n                    (b[i], b[j]) = (b[j], b[i])\n                    ans.append([i + 1, j + 1])\n    if flag:\n        print(len(ans))\n        for i in ans:\n            print(*i)\n    else:\n        print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    ans = []\n    flag = True\n    for i in range(n):\n        small = (a[i], b[i])\n        ii = i\n        for j in range(i + 1, n):\n            cur = (a[j], b[j])\n            if small > cur:\n                small = cur\n                ii = j\n        if ii == i:\n            continue\n        ans.append((i, ii))\n        (a[ii], a[i]) = (a[i], a[ii])\n        (b[ii], b[i]) = (b[i], b[ii])\n    for i in range(1, n):\n        if b[i] < b[i - 1]:\n            flag = False\n            break\n    if not flag:\n        print(-1)\n    else:\n        print(len(ans))\n        for (aa, bb) in ans:\n            print(aa + 1, bb + 1)", "t = int(input())\nresult = []\nfor l in range(t):\n    n = int(input())\n    ai = list(map(int, input().split(' ')))\n    bi = list(map(int, input().split(' ')))\n    k = 0\n    impos = False\n    moves = []\n    for i in range(n):\n        (minai, minbi) = (ai[i], bi[i])\n        swapIndice = i\n        for j in range(i, n):\n            if (ai[j] <= minai) & (bi[j] <= minbi):\n                (minai, minbi) = (ai[j], bi[j])\n                swapIndice = j\n        if swapIndice != i:\n            k += 1\n            moves.append(str(i + 1) + ' ' + str(swapIndice + 1))\n            (ai[i], ai[swapIndice]) = (ai[swapIndice], ai[i])\n            (bi[i], bi[swapIndice]) = (bi[swapIndice], bi[i])\n    for i in range(n - 1):\n        if (ai[i] > ai[i + 1]) | (bi[i] > bi[i + 1]):\n            impos = True\n    if impos == False:\n        result.append(k)\n        result += moves\n    else:\n        result.append(-1)\nfor i in result:\n    print(i)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    ans = []\n    cnt = 0\n    while cnt < n:\n        (ia, ib) = (set(), set())\n        (ma, mb) = (101, 101)\n        for i in range(cnt, n):\n            if A[i] < ma:\n                ma = A[i]\n                ia = {i}\n            elif A[i] == ma:\n                ia.add(i)\n            if B[i] < mb:\n                mb = B[i]\n                ib = {i}\n            elif B[i] == mb:\n                ib.add(i)\n        if cnt in ib and cnt in ia:\n            cnt += 1\n            continue\n        prev = len(ans)\n        for c in ib:\n            if c in ia:\n                (A[cnt], A[c]) = (A[c], A[cnt])\n                (B[cnt], B[c]) = (B[c], B[cnt])\n                ans.append([c + 1, cnt + 1])\n                break\n        if len(ans) == prev:\n            print(-1)\n            return\n        cnt += 1\n    print(len(ans))\n    for each in ans:\n        print(*each)\n    return\nfor _ in range(int(input())):\n    solve()", "x = lambda : map(int, input().split())\nfor t in range(int(input())):\n    (n,) = x()\n    a = [*x()]\n    b = [*x()]\n    index = []\n    ta = sorted(a)\n    tb = sorted(b)\n    c = 0\n    for i in range(n - 1):\n        index_min = i\n        for j in range(i + 1, n):\n            if a[j] < a[index_min]:\n                index_min = j\n            elif a[j] == a[index_min]:\n                if b[j] < b[index_min]:\n                    index_min = j\n        if index_min != i:\n            index.append([index_min + 1, i + 1])\n            c += 1\n            (temp1, temp2) = (a[i], b[i])\n            a[i] = a[index_min]\n            a[index_min] = temp1\n            b[i] = b[index_min]\n            b[index_min] = temp2\n    if a != ta or b != tb:\n        print(-1)\n    else:\n        print(c)\n        for i in index:\n            print(*i)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    c = []\n    for i in range(n):\n        c.append(b[i])\n    ans = []\n    for i in range(n):\n        m = i\n        for j in range(i + 1, n):\n            if a[m] > a[j]:\n                m = j\n            elif a[m] == a[j]:\n                if b[m] > b[j]:\n                    m = j\n        (a[i], a[m]) = (a[m], a[i])\n        (b[i], b[m]) = (b[m], b[i])\n        if i != m:\n            ans.append([i + 1, m + 1])\n    c.sort()\n    flag = True\n    for i in range(n):\n        if c[i] != b[i]:\n            flag = False\n            break\n    if flag:\n        print(len(ans))\n        for i in range(len(ans)):\n            print(ans[i][0], ans[i][1])\n    else:\n        print(-1)\n    t -= 1", "for i in range(int(input())):\n    n = int(input())\n    a = [int(k) for k in input().split()]\n    b = [int(k) for k in input().split()]\n    A = sorted(a)\n    B = sorted(b)\n    if A == a and B == b:\n        print(0)\n        continue\n    else:\n        ANS = []\n        for k in range(n):\n            if a[k] != A[k]:\n                for j in range(k + 1, n):\n                    if A[k] == a[j] and B[k] == b[j]:\n                        ANS.append([j + 1, k + 1])\n                        (a[j], a[k]) = (a[k], a[j])\n                        (b[j], b[k]) = (b[k], b[j])\n            if b[k] != B[k]:\n                for j in range(k + 1, n):\n                    if A[k] == a[j] and B[k] == b[j]:\n                        ANS.append([j + 1, k + 1])\n                        (a[j], a[k]) = (a[k], a[j])\n                        (b[j], b[k]) = (b[k], b[j])\n        if b == B and a == A:\n            print(len(ANS))\n            for k in ANS:\n                print(*k)\n        else:\n            print(-1)", "t = int(input())\nfor j in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = a.copy()\n    d = b.copy()\n    c.sort()\n    d.sort()\n    p = []\n    g = []\n    v = []\n    op = []\n    s = 0\n    fo = -1\n    for k in range(0, n):\n        p.append(str(a[k]) + ' ' + str(b[k]))\n        g.append(str(c[k]) + ' ' + str(d[k]))\n        if p[-1] == g[-1]:\n            s += 1\n        v.append(0)\n        op.append(0)\n    if s != n:\n        for i in range(0, n):\n            fo = -1\n            for k in range(0, n):\n                if v[k] == 0:\n                    if p[k] == g[i]:\n                        v[k] = 1\n                        op[k] = i\n                        fo = 0\n                        break\n                else:\n                    continue\n            if fo == -1:\n                print(-1)\n                break\n        bb = []\n        cc = 0\n        if fo != -1:\n            for i in range(0, n):\n                mi = i\n                for k in range(i + 1, n):\n                    if op[mi] > op[k]:\n                        mi = k\n                (op[i], op[mi]) = (op[mi], op[i])\n                if mi != i:\n                    cc += 1\n                    bb.append(str(mi + 1) + ' ' + str(i + 1))\n            print(cc)\n            for i in bb:\n                print(i)\n    else:\n        print(0)", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_list_string():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\n\ndef get_print_int(x):\n    sys.stdout.write(str(x) + '\\n')\n\ndef get_print(x):\n    sys.stdout.write(x + '\\n')\n\ndef get_print_int_same(x):\n    sys.stdout.write(str(x) + ' ')\n\ndef get_print_same(x):\n    sys.stdout.write(x + ' ')\n\ndef solve():\n    for _ in range(get_int()):\n        n = get_int()\n        a = get_list()\n        b = get_list()\n        asor = sorted(a)\n        bsor = sorted(b)\n        moves = []\n        total = 0\n        for i in range(n):\n            for j in range(i + 1, n):\n                if a[i] > a[j]:\n                    total += 1\n                    moves.append([i + 1, j + 1])\n                    (a[i], a[j]) = (a[j], a[i])\n                    (b[i], b[j]) = (b[j], b[i])\n                elif a[i] == a[j]:\n                    if b[i] > b[j]:\n                        total += 1\n                        moves.append([i + 1, j + 1])\n                        (b[i], b[j]) = (b[j], b[i])\n        if asor == a and bsor == b:\n            get_print_int(total)\n            for i in moves:\n                get_print(' '.join(map(str, i)))\n        else:\n            get_print_int(-1)\nsolve()", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    L = sorted(A)\n    M = sorted(B)\n    X = []\n    Y = []\n    for i in range(N):\n        if A[i] != L[i]:\n            X.append(i)\n        if B[i] != M[i]:\n            Y.append(i)\n    if X == Y == []:\n        print(0)\n    else:\n        c = 0\n        ans = []\n        for i in range(N):\n            for j in range(i + 1, N):\n                if A[i] > A[j]:\n                    (A[i], A[j]) = (A[j], A[i])\n                    (B[i], B[j]) = (B[j], B[i])\n                    ans.append(str(i + 1) + ' ' + str(j + 1))\n                    c += 1\n        for i in range(N):\n            for j in range(i + 1, N):\n                if B[i] > B[j]:\n                    (A[i], A[j]) = (A[j], A[i])\n                    (B[i], B[j]) = (B[j], B[i])\n                    ans.append(str(i + 1) + ' ' + str(j + 1))\n                    c += 1\n        if A != L or B != M:\n            print(-1)\n        else:\n            print(c)\n            for i in ans:\n                print(i)\nfor _ in range(int(input())):\n    solve()", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = [int(i) for i in input().split(' ')]\n    b = [int(i) for i in input().split(' ')]\n    ans = []\n    flag = True\n    for i in range(n):\n        for j in range(i + 1, n):\n            if a[i] > a[j]:\n                if b[i] < b[j]:\n                    flag = False\n                    break\n                (a[i], a[j]) = (a[j], a[i])\n                (b[i], b[j]) = (b[j], b[i])\n                ans.append((i, j))\n            elif a[i] == a[j]:\n                if b[i] > b[j]:\n                    ans.append((i, j))\n                    (b[i], b[j]) = (b[j], b[i])\n            elif a[i] < a[j]:\n                if b[i] > b[j]:\n                    flag = False\n                    break\n        if flag == False:\n            break\n    if flag:\n        print(len(ans))\n        for i in ans:\n            print(f'{i[0] + 1} {i[1] + 1}')\n    else:\n        print(-1)\n    t -= 1", "li = lambda : list(map(int, input().split()))\nlis = lambda : sorted(list(map(int, input().split())))\nmp = lambda : map(int, input().split())\nit = lambda : int(input())\nst = lambda : str(input())\nimport math\n\ndef function(a, b):\n    q = []\n    for i in range(len(a)):\n        for j in range(i):\n            if a[j] > a[i]:\n                q.append((j + 1, i + 1))\n                (a[j], a[i]) = (a[i], a[j])\n                (b[j], b[i]) = (b[i], b[j])\n    for i in range(len(a)):\n        for j in range(i):\n            if b[j] > b[i]:\n                q.append((j + 1, i + 1))\n                (a[j], a[i]) = (a[i], a[j])\n                (b[j], b[i]) = (b[i], b[j])\n    if a != sorted(a) or b != sorted(b):\n        return [(-1, '')]\n    else:\n        print(len(q))\n        return q\nfor _ in range(int(input())):\n    n = input()\n    aa = list(map(int, input().split()))\n    bb = list(map(int, input().split()))\n    [print(i, j) for (i, j) in function(aa, bb)]", "def solve():\n    n = int(input())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    arr = []\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if arr1[i] > arr1[j] or arr2[i] > arr2[j]:\n                (arr1[i], arr1[j]) = (arr1[j], arr1[i])\n                (arr2[i], arr2[j]) = (arr2[j], arr2[i])\n                arr.append([i + 1, j + 1])\n    for i in range(n - 1):\n        if arr1[i] > arr1[i + 1] or arr2[i] > arr2[i + 1]:\n            print(-1)\n            return\n    print(len(arr))\n    if len(arr) > 0:\n        for i in arr:\n            print(i[0], i[1])\n    return\nfor i in range(int(input())):\n    solve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ans = []\n    a1 = list(map(int, input().split()))\n    a2 = list(map(int, input().split()))\n    for i in range(n - 1):\n        for j in range(i, n):\n            if a1[i] > a1[j]:\n                ans.append((i + 1, j + 1))\n                (a1[i], a1[j]) = (a1[j], a1[i])\n                (a2[i], a2[j]) = (a2[j], a2[i])\n    for i in range(n - 1):\n        for j in range(i, n):\n            if a2[i] > a2[j]:\n                ans.append((i + 1, j + 1))\n                (a1[i], a1[j]) = (a1[j], a1[i])\n                (a2[i], a2[j]) = (a2[j], a2[i])\n    flag = True\n    for i in range(n - 1):\n        if a1[i] > a1[i + 1]:\n            print(-1)\n            flag = False\n            break\n    if flag:\n        print(len(ans))\n        for (i, j) in ans:\n            print(str(i) + ' ' + str(j))", "import sys, math\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_ls():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        a = get_ls()\n        b = get_ls()\n        res = []\n        for i in range(n - 1):\n            for j in range(i + 1, n):\n                if a[i] >= a[j] and b[i] >= b[j]:\n                    (a[i], a[j]) = (a[j], a[i])\n                    (b[i], b[j]) = (b[j], b[i])\n                    res.append([i + 1, j + 1])\n        if a == sorted(a) and b == sorted(b):\n            print(len(res))\n            for x in res:\n                print(*x)\n        else:\n            print(-1)\nmain()", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    sa = sorted(a)\n    sb = sorted(b)\n    if a == sa and b == sb:\n        print(0)\n        return\n    pairs = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            if b[j] <= b[i] and a[j] <= a[i]:\n                pairs.append([j + 1, i + 1])\n                (a[i], a[j]) = (a[j], a[i])\n                (b[i], b[j]) = (b[j], b[i])\n            if len(pairs) > 10 ** 4:\n                print(-1)\n                return\n    if a == sa and b == sb:\n        print(len(pairs))\n        for (i, j) in pairs:\n            print(i, j)\n        return\n    print(-1)\nt = int(input())\nfor _ in range(t):\n    solve()", "for _ in range(int(input())):\n    x = int(input())\n    zoop1 = list(map(int, input().split()))\n    zoop2 = list(map(int, input().split()))\n    zop1 = []\n    for i in range(len(zoop1)):\n        zop1.append((zoop1[i], zoop2[i]))\n    ans = []\n    for i in range(x):\n        for j in range(i + 1, x):\n            if zop1[i] > zop1[j]:\n                ans.append((i, j))\n                (zop1[i], zop1[j]) = (zop1[j], zop1[i])\n    zoop2.sort()\n    zz = True\n    for i in range(len(zoop2)):\n        if zoop2[i] != zop1[i][1]:\n            zz = False\n            break\n    if zz == False:\n        print(-1)\n    else:\n        print(len(ans))\n        for i in range(len(ans)):\n            print(ans[i][0] + 1, ans[i][1] + 1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    lst = []\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if a[i] > a[j] or b[i] > b[j]:\n                (a[i], a[j]) = (a[j], a[i])\n                (b[i], b[j]) = (b[j], b[i])\n                lst.append((j + 1, i + 1))\n    if b == sorted(b) and a == sorted(a):\n        print(len(lst))\n        for (i, j) in lst:\n            print(i, j)\n    else:\n        print(-1)", "def resi():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    l = []\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if a[i] < a[j] and b[i] > b[j]:\n                print(-1)\n                return\n            if a[i] > a[j] and b[i] < b[j]:\n                print(-1)\n                return\n            if a[i] > a[j] or b[i] > b[j]:\n                (a[i], a[j]) = (a[j], a[i])\n                (b[i], b[j]) = (b[j], b[i])\n                l.append([i, j])\n    print(len(l))\n    for i in range(len(l)):\n        print(l[i][0] + 1, l[i][1] + 1)\nfor _ in range(int(input())):\n    resi()", "def sort(a, b):\n    x = []\n    for i in range(len(a)):\n        for j in range(i, len(a)):\n            if a[j] < a[i]:\n                (a[i], a[j]) = (a[j], a[i])\n                (b[i], b[j]) = (b[j], b[i])\n                x.append([j + 1, i + 1])\n    for i in range(len(a)):\n        for j in range(i, len(a)):\n            if b[j] < b[i]:\n                (a[i], a[j]) = (a[j], a[i])\n                (b[i], b[j]) = (b[j], b[i])\n                x.append([j + 1, i + 1])\n    if b != sorted(b) or a != sorted(a):\n        return -1\n    else:\n        return x\nfor _ in range(int(input())):\n    k = int(input())\n    arr1 = [int(i) for i in input().split()]\n    arr2 = [int(i) for i in input().split()]\n    z = sort(arr1, arr2)\n    if z == -1:\n        print(-1)\n    elif len(z) == 0:\n        print(0)\n    else:\n        print(len(z))\n        for x in z:\n            print(*x)", "for e in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    res = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            if a[j] < a[i] or b[j] < b[i]:\n                res.append((j + 1, i + 1))\n                (b[i], b[j]) = (b[j], b[i])\n                (a[j], a[i]) = (a[i], a[j])\n    if not (a == sorted(a) and b == sorted(b)):\n        print(-1)\n        continue\n    print(len(res))\n    for i in res:\n        print(*i)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    ans = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            if a[i] > a[j] or b[i] > b[j]:\n                (a[i], a[j]) = (a[j], a[i])\n                (b[i], b[j]) = (b[j], b[i])\n                ans.append((i + 1, j + 1))\n    sa = sorted(a)\n    sb = sorted(b)\n    if sa == a and sb == b:\n        print(len(ans))\n        for i in ans:\n            print(*i)\n    else:\n        print(-1)", "for i in range(int(input())):\n    lenn = int(input())\n    list1 = list(map(int, input().split()))\n    list2 = list(map(int, input().split()))\n    moves = 0\n    ans = []\n    for i in range(lenn):\n        for j in range(i + 1, lenn):\n            if list1[i] > list1[j] or list2[i] > list2[j]:\n                (list1[i], list1[j]) = (list1[j], list1[i])\n                (list2[i], list2[j]) = (list2[j], list2[i])\n                ans.append([i + 1, j + 1])\n                moves += 1\n    if sorted(list1) == list1 and sorted(list2) == list2:\n        print(moves)\n        for i in ans:\n            print(*i)\n    else:\n        print(-1)", "for i in range(int(input())):\n    n = int(input())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    res = []\n    c = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if arr1[j] < arr1[i]:\n                (arr1[i], arr1[j]) = (arr1[j], arr1[i])\n                (arr2[i], arr2[j]) = (arr2[j], arr2[i])\n                res.append([j + 1, i + 1])\n                c = 1\n            elif arr1[j] == arr1[i]:\n                if arr2[j] < arr2[i]:\n                    (arr1[i], arr1[j]) = (arr1[j], arr1[i])\n                    (arr2[i], arr2[j]) = (arr2[j], arr2[i])\n                    res.append([j + 1, i + 1])\n                    c = 1\n    if sorted(arr1) == arr1 and sorted(arr2) == arr2:\n        if c == 0:\n            print(0)\n        else:\n            print(len(res))\n            for i in range(len(res)):\n                ans = res[i]\n                print(ans[0], ans[1])\n    else:\n        print(-1)", "for e in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    res = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            if a[j] < a[i] or b[j] < b[i]:\n                res.append((j + 1, i + 1))\n                (b[i], b[j]) = (b[j], b[i])\n                (a[j], a[i]) = (a[i], a[j])\n    if not (a == sorted(a) and b == sorted(b)):\n        print(-1)\n        continue\n    print(len(res))\n    for i in res:\n        print(*i)", "import sys\ninput = sys.stdin.readline\n\ndef Issorted(arr):\n    pre = arr[0]\n    for v in arr[1:]:\n        if pre > v:\n            return False\n        pre = v\n    return True\n\ndef correct(answer):\n    print(len(answer))\n    for v in answer:\n        print(*v)\n    return\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    aa = a.copy()\n    ab = b.copy()\n    answerA = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            if aa[i] >= aa[j]:\n                if aa[i] == aa[j] and ab[i] <= ab[j]:\n                    continue\n                (aa[i], aa[j]) = (aa[j], aa[i])\n                (ab[i], ab[j]) = (ab[j], ab[i])\n                answerA.append((i + 1, j + 1))\n    if Issorted(aa) and Issorted(ab):\n        correct(answerA)\n        continue\n    aa = a.copy()\n    ab = b.copy()\n    answerB = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            if ab[i] >= ab[j]:\n                if ab[i] == ab[j] and aa[i] <= aa[j]:\n                    continue\n                (ab[i], ab[j]) = (ab[j], ab[i])\n                (aa[i], aa[j]) = (aa[j], aa[i])\n                answerB.append((i, j))\n    if Issorted(aa) and Issorted(ab):\n        correct(answerB)\n    else:\n        print(-1)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    b = list(map(int, input().strip().split()))\n    r = []\n    for i in range(n):\n        for j in range(i):\n            if a[j] > a[i]:\n                r.append((j + 1, i + 1))\n                (a[i], a[j]) = (a[j], a[i])\n                (b[i], b[j]) = (b[j], b[i])\n    for i in range(n):\n        for j in range(i):\n            if b[j] > b[i]:\n                r.append((j + 1, i + 1))\n                (a[i], a[j]) = (a[j], a[i])\n                (b[i], b[j]) = (b[j], b[i])\n    if a != sorted(a) or b != sorted(b):\n        r = [(-1, '')]\n    else:\n        print(len(r))\n    for (i, j) in r:\n        print(i, j)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    res = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            if a[j] < a[i] or b[j] < b[i]:\n                res.append((j + 1, i + 1))\n                (b[i], b[j]) = (b[j], b[i])\n                (a[j], a[i]) = (a[i], a[j])\n    if not (a == sorted(a) and b == sorted(b)):\n        print(-1)\n        continue\n    print(len(res))\n    for i in res:\n        print(*i)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().strip().split()))[:n]\n    brr = list(map(int, input().strip().split()))[:n]\n\n    def issorted(L):\n        flag = 1\n        for i in range(n - 1):\n            if L[i] > L[i + 1]:\n                flag = 0\n                break\n        return flag\n    a = []\n    b = []\n    cnt = 0\n    for i in range(n - 1):\n        for j in range(i + 1, n, +1):\n            if arr[i] >= arr[j] and brr[i] >= brr[j]:\n                a.append(i + 1)\n                b.append(j + 1)\n                (arr[i], arr[j]) = (arr[j], arr[i])\n                (brr[i], brr[j]) = (brr[j], brr[i])\n    if issorted(arr) == 1 and issorted(brr) == 1:\n        print(len(a))\n        for i in range(len(a)):\n            print(a[i], b[i])\n    else:\n        print(-1)\n    t = t - 1", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = sorted(a)\n    d = sorted(b)\n    count = 0\n    k = []\n    temp = 0\n    if a == c and b == d:\n        print(0)\n        continue\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if a[i] >= a[j] and b[i] >= b[j]:\n                temp = a[i]\n                a[i] = a[j]\n                a[j] = temp\n                temp = b[i]\n                b[i] = b[j]\n                b[j] = temp\n                k.append([i + 1, j + 1])\n                count += 1\n    if a == c and b == d:\n        print(count)\n        for i in k:\n            print(' '.join(list(map(str, i))))\n    else:\n        print(-1)"]