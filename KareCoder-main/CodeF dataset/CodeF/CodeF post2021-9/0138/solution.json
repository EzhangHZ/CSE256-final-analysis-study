["def read():\n    (n, k) = map(int, input().split())\n    in_list = list(map(int, input().split()))\n    return (n, k, in_list)\n\ndef solve():\n    ans = [0] * k\n    for (idx, value) in enumerate(in_list):\n        rem = (idx + 1) % k\n        if value > ans[rem]:\n            ans[rem] = value\n    return sum(ans)\ncase = int(input())\nfor it in range(case):\n    (n, k, in_list) = read()\n    ans = solve()\n    print(ans)\npass", "def myMax(a, k):\n    spec = [0] * k\n    for i in range(len(a)):\n        if spec[i % k] < a[i]:\n            spec[i % k] = a[i]\n    return spec\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a = myMax(a, k)\n    print(sum(a))", "def solution():\n    numCases = int(input())\n    data = []\n    for i in range(numCases * 2):\n        data.append(input())\n    for case in range(0, len(data), 2):\n        n = int(data[case].split(' ')[0])\n        k = int(data[case].split(' ')[1])\n        a = [int(x) for x in data[case + 1].split(' ')]\n        if n == k:\n            print(sum(a))\n            continue\n        seperated = [[] for x in range(k)]\n        for i in range(n):\n            seperated[i % k].append(a[i])\n        for ka in seperated:\n            ka.sort()\n        print(sum([b[-1] for b in seperated]))\n    return\nsolution()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if n == k:\n        print(sum(a))\n    else:\n        p = []\n        for i in range(k):\n            maxx = max(0, a[i])\n            j = i + k\n            while j < n:\n                maxx = max(maxx, a[j])\n                j += k\n            p.append(maxx)\n        print(sum(p))", "times = int(input())\nfor time in range(times):\n    (n, k) = [int(x) for x in input().split()]\n    arr = [int(x) for x in input().split()]\n    for i in range(n):\n        for j in range(i + k, n, k):\n            if arr[i] < arr[j]:\n                (arr[i], arr[j]) = (arr[j], arr[i])\n    s = 0\n    for i in range(k):\n        s += arr[i]\n    print(s)", "N = int(input())\ndd = []\nfor i in range(N):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    aa = [0] * (k + 1)\n    d = 0\n    for i in range(n):\n        if a[i] > aa[d]:\n            aa[d] = a[i]\n        d = d + 1\n        if d == k:\n            d = 0\n    f = 0\n    for t in aa:\n        f = f + t\n    dd.append(f)\nfor t in dd:\n    print(t)", "t = int(input())\nans = []\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    lst = [[lst[i - 1], i % k] for i in range(1, n + 1)]\n    lst.sort(key=lambda x: x[0], reverse=True)\n    sum = 0\n    lst1 = [i for i in range(k + 1)]\n    for i in lst:\n        if len(lst1) == 0:\n            break\n        if i[1] in lst1:\n            sum += i[0]\n            lst1.remove(i[1])\n    ans.append(sum)\nfor i in ans:\n    print(i)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    b = [0] * k\n    for i in range(n):\n        b[(i + 1) % k] = max(b[(i + 1) % k], l[i])\n    print(sum(b))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if len(arr) <= k:\n        print(sum(arr))\n    else:\n        a = [0] * k\n        for i in range(n):\n            m = i // k\n            a[i % k] = max(a[i % k], arr[i])\n        print(sum(a))", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nin_il = lambda : list(map(int, input().split()))\nin_sl = lambda : input().split()\nin_i = lambda : int(input())\nMAX_INT = float('inf')\n\ndef solve():\n    (n, k) = in_il()\n    arr = in_il()\n    for i in range(k):\n        for j in range(i + k, n, k):\n            arr[i] = max(arr[i], arr[j])\n    print(sum(arr[:k]))\nfor _ in range(in_i()):\n    solve()", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nin_il = lambda : list(map(int, input().split()))\nin_sl = lambda : input().split()\nin_i = lambda : int(input())\nMAX_INT = float('inf')\n\ndef solve():\n    (n, k) = in_il()\n    arr = in_il()\n    for i in range(k):\n        for j in range(i + k, n, k):\n            arr[i] = max(arr[i], arr[j])\n    print(sum(arr[:k]))\nfor _ in range(in_i()):\n    solve()", "n = int(input())\nfor i in range(n):\n    (n, m) = map(int, input().split())\n    res = [0] * m\n    arr = list(map(int, input().split()))\n    for i in range(n):\n        res[(i + 1) % m] = max(res[(i + 1) % m], arr[i])\n    print(sum(res))", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nin_il = lambda : list(map(int, input().split()))\nin_sl = lambda : input().split()\nin_i = lambda : int(input())\nMAX_INT = float('inf')\n\ndef solve():\n    (n, k) = in_il()\n    arr = in_il()\n    for i in range(k):\n        for j in range(i + k, n, k):\n            arr[i] = max(arr[i], arr[j])\n    print(sum(arr[:k]))\nfor _ in range(in_i()):\n    solve()", "t = int(input())\nfor i in range(t):\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    if n == k:\n        print(sum(a))\n    else:\n        tmax = [-1 for x in range(k)]\n        for j in range(k):\n            tmp = j\n            while tmp < n:\n                if tmax[j] < a[tmp]:\n                    tmax[j] = a[tmp]\n                tmp += k\n        print(sum(tmax))", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nin_il = lambda : list(map(int, input().split()))\nin_sl = lambda : input().split()\nin_i = lambda : int(input())\nMAX_INT = float('inf')\n\ndef solve():\n    (n, k) = in_il()\n    arr = in_il()\n    for i in range(k):\n        for j in range(i + k, n, k):\n            arr[i] = max(arr[i], arr[j])\n    print(sum(arr[:k]))\nfor _ in range(in_i()):\n    solve()", "for i in range(int(input())):\n    (n, pas) = map(int, input().split())\n    t = [int(x) for x in input().split()]\n    print(sum([max(t[j::pas]) for j in range(pas)]))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    for j in range(k):\n        ans += max(a[j::k])\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    for i in range(k, n):\n        arr[i % k] = max(arr[i % k], arr[i])\n    print(sum(arr[:k]))", "t = int(input())\n\ndef solve():\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    mod = [[] for i in range(k)]\n    for i in range(n):\n        mod[(i + 1) % k].append(arr[i])\n    sum = 0\n    for item in mod:\n        sum += max(item)\n    print(sum)\nfor i in range(t):\n    solve()", "def func():\n    (n, k) = map(int, input().split())\n    arr = input().split()\n    arr = [int(i) for i in arr]\n    mods = [0] * k\n    for i in range(n):\n        if mods[i % k] < arr[i]:\n            mods[i % k] = arr[i]\n    print(sum(mods))\nn_tests = int(input())\nfor i in range(n_tests):\n    func()", "class Solution:\n\n    def maxScore(self, arr, k):\n        if len(arr) == k:\n            return sum(arr)\n        arr = [0] + arr\n        res = 0\n        for j in range(1, k + 1):\n            currMax = -float('inf')\n            for i in range(j, len(arr), k):\n                currMax = max(currMax, arr[i])\n            res += currMax\n        return res\nob = Solution()\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().strip().split()))\n    arr = list(map(int, input().strip().split()))\n    print(ob.maxScore(arr, k))", "import sys\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef main():\n    t = inp()\n    for i in range(t):\n        (n, k) = inlt()\n        A = inlt()\n        M = [0 for i in range(k)]\n        for (i, a) in enumerate(A):\n            if a > M[i % k]:\n                M[i % k] = a\n        print(sum(M))\nmain()", "tasks = int(input())\nfor t in range(tasks):\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    print(sum([max(a[i::k]) for i in range(k)]))", "t = int(input())\nfor _ in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    l = [int(x) for x in input().split()]\n    if k == n:\n        print(sum(l))\n    else:\n        it = n // k\n        s = 0\n        maxi = 0\n        for i in range(k):\n            maxi = 0\n            for j in range(it):\n                maxi = max(maxi, l[j * k + i])\n            if it * k + i < n:\n                maxi = max(maxi, l[it * k + i])\n            s = s + maxi\n        print(s)", "import sys\nimport math\nfrom collections import Counter\n\ndef gi():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef gs():\n    return sys.stdin.readline().strip()\n\ndef fun(a, k):\n    i = 0\n    res = 0\n    l = len(a)\n    z = k\n    while k:\n        val = -1\n        ptr = i\n        while ptr < l:\n            val = max(val, a[ptr])\n            ptr += z\n        res += val\n        k -= 1\n        i += 1\n    return res\nfor _ in range(int(input())):\n    z = gi()\n    a = gi()\n    print(fun(a, z[-1]))", "for p in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [int(v) for v in input().split()]\n    print(sum((max(a[i::k]) for i in range(k))))", "t = int(input())\nfor _ in range(t):\n    (n, k) = [int(x) for x in input().split(' ')]\n    seq = [int(x) for x in input().split(' ')]\n    mem = {}\n    if k == len(seq):\n        print(sum(seq))\n        continue\n    for x in range(k):\n        mem[x] = 0\n    for (i, item) in enumerate(seq):\n        idx = i % k\n        if item > mem[idx]:\n            mem[idx] = item\n    ans = 0\n    for val in mem.values():\n        ans += val\n    print(ans)", "R = lambda : map(int, input().split())\n(t,) = R()\nfor k in range(t):\n    (n, k) = R()\n    l = list(R())\n    maxmod = [0] * k\n    for i in range(n):\n        if l[i] > maxmod[i % k]:\n            maxmod[i % k] = l[i]\n    print(sum(maxmod))", "x = int(input())\nfor q in range(x):\n    (k, b) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = [0] * b\n    for i in range(0, k):\n        ans[(i + 1) % b] = max(ans[(i + 1) % b], a[i])\n    print(sum(ans))", "def divided(a, k):\n    summ = 0\n    b = list(list())\n    for j in range(k):\n        b.append(a[j::k])\n    for j in range(k):\n        summ += max(b[j])\n    return summ\nt = int(input())\nfor tc in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    sum = 0\n    print(divided(a, k))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = [0] * k\n    for i in range(n):\n        if a[i] > s[i % k]:\n            s[i % k] = a[i]\n    print(sum(s))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(k):\n        ans += max(a[i:n:k])\n    print(ans)", "import sys\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a_min = min(a)\n    sum_l = [a_min] * k\n    for i in range(n):\n        if sum_l[i % k] < a[i]:\n            sum_l[i % k] = a[i]\n    print(sum(sum_l))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr_out = [0 for x in range(n + 2)]\n    for x in range(n):\n        m = (x + 1) % k\n        if arr_out[m] < arr[x]:\n            arr_out[m] = arr[x]\n    print(sum(arr_out))", "def solve():\n    [n, k] = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    s = 0\n    for i in range(0, k):\n        count = i\n        maxR = 0\n        while count < n:\n            maxR = max(maxR, a[count])\n            count += k\n        s += maxR\n    print(s)\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(m):\n        ans += max(a[i::m])\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(k):\n        ans += max(a[i::k])\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(sum((max(a[i::k]) for i in range(k))))", "test = int(input())\nfor _ in range(test):\n    (num, kl) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    su = 0\n    for i in range(kl):\n        su += max(a[i::kl])\n    print(su)", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nin_il = lambda : list(map(int, input().split()))\nin_sl = lambda : input().split()\nin_i = lambda : int(input())\nMAX_INT = float('inf')\n\ndef A():\n    (n, k) = in_il()\n    arr = in_il()\n    for i in range(k):\n        for j in range(i + k, n, k):\n            arr[i] = max(arr[i], arr[j])\n    print(sum(arr[:k]))\nfor _ in range(in_i()):\n    A()", "test = int(input())\nfor _ in range(test):\n    (num, kl) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    su = 0\n    for i in range(kl):\n        su += max(a[i::kl])\n    print(su)", "for case in range(int(input())):\n    (n, k) = list(map(lambda x: int(x), input().split(' ')))\n    num_arr = list(map(lambda x: int(x), input().split(' ')))\n    if k == n:\n        print(sum(num_arr))\n    else:\n        score = 0\n        for swap_count in range(k):\n            indexed_arr = []\n            for i in range(swap_count, n, k):\n                indexed_arr.append(num_arr[i])\n            score += max(indexed_arr)\n        print(score)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = [0] * k\n    x = 0\n    for i in a:\n        b[x] = max(b[x], i)\n        x = (x + 1) % k\n    print(sum(b))", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(sum((max(a[i::k]) for i in range(k))))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(k):\n        ans += max(a[i::k])\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    nk = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    (n, k) = (nk[0], nk[1])\n    kk = [0] * k\n    for i in range(1, n + 1):\n        j = i % k - 1\n        if kk[j] < a[i - 1]:\n            kk[j] = a[i - 1]\n    print(sum(kk))", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(sum((max(a[i::k]) for i in range(k))))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    for i in range(n):\n        a[i % k] = max(a[i], a[i % k])\n    print(sum(a[0:k]))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    for i in range(len(a)):\n        if a[i % k] < a[i]:\n            a[i % k] = a[i]\n    print(sum(a[:k]))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    maximums = [0] * k\n    for i in range(n):\n        if arr[i] > maximums[i % k]:\n            maximums[i % k] = arr[i]\n    print(sum(maximums))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ans = [0 for _ in range(k)]\n    for i in range(n):\n        ans[i % k] = max(ans[i % k], l[i])\n    print(sum(ans))", "import itertools\nfrom math import floor, log, log2, ceil, sqrt\nfrom itertools import groupby\nfrom decimal import Decimal, getcontext\nimport sys\nfrom collections import deque\nprimes = set()\nmaxN = 1000001\n\ndef generatePrimes():\n    used = [False] * maxN\n    for i in range(2, maxN):\n        if not used[i]:\n            primes.add(i)\n            for j in range(i, maxN, i):\n                used[j] = True\n\ndef isPrime(n):\n    if n < 2:\n        return True\n    x = 2\n    while x * x <= n:\n        if n % x == 0:\n            return False\n        x += 1\n    return True\n\ndef gcd(x, y):\n    while y != 0:\n        (x, y) = (y, x % y)\n    return x\nt = int(input())\nfor _ in range(t):\n    [n, k] = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    d = dict()\n    for i in range(n):\n        if i % k in d:\n            d[i % k] = max(d[i % k], a[i])\n        else:\n            d[i % k] = a[i]\n    res = 0\n    for v in d.values():\n        res += v\n    print(res)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    num = list(map(int, input().split()))\n    s = 0\n    for i in range(0, k):\n        s = s + max(num[i::k])\n    print(s)", "def solution(ar, n, k):\n    maxs = ar[:k]\n    for i in range(n):\n        maxs[i % k] = max(ar[i], maxs[i % k])\n    return sum(maxs)\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    ar = list(map(int, input().split()))\n    print(solution(ar, n, k))", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    dct = {x: 0 for x in range(0, k)}\n    for i in range(n):\n        if dct[i % k] < lst[i]:\n            dct[i % k] = lst[i]\n    res = 0\n    for i in dct.values():\n        res += i\n    print(res)", "T = int(input())\nfor t in range(0, T):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k == n:\n        print(sum(a))\n    else:\n        lst = [[] for i in range(0, k)]\n        for i in range(0, n):\n            lst[i % k].append(a[i])\n        s = 0\n        for item in lst:\n            s += max(item)\n        print(s)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    if len(l) <= k:\n        print(sum(l))\n    else:\n        for i in range(k):\n            j = i\n            id = i\n            mx = l[i]\n            while j < len(l):\n                if l[j] > mx:\n                    mx = l[j]\n                    id = j\n                j += k\n            (l[i], l[id]) = (l[id], l[i])\n        ans = 0\n        for i in range(k):\n            ans += l[i]\n        print(ans)", "for _ in range(int(input())):\n    (N, K) = map(int, input().split())\n    A = list(map(int, input().split()))\n    m = [[] for i in range(K)]\n    for i in range(N):\n        m[i % K].append(A[i])\n    su = sum([max(x) for x in m])\n    print(su)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    val = list(map(int, input().split()))\n    i = 0\n    j = i + k - 1\n    while j < n - 1:\n        if val[i] > val[j + 1]:\n            (val[i], val[j + 1]) = (val[j + 1], val[i])\n        i += 1\n        j += 1\n    print(sum(val[::-1][:k]))", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef mainak(n):\n    ts = 0\n    for (idx, i) in enumerate(n):\n        if i > n[ts]:\n            ts = idx\n    return ts + 1\nt = inp()\nfor _ in range(t):\n    (n, k) = [int(x) for x in input().strip().split()]\n    nu = [int(x) for x in input().strip().split()]\n    nu = [1] + nu\n    i = 1\n    ans = 0\n    while i <= k:\n        j = i\n        m = 0\n        while j < len(nu):\n            if nu[j] > m:\n                m = nu[j]\n            j += k\n        ans += m\n        i += 1\n    print(ans)", "def solution(n, k, arr):\n    for i in range(k):\n        j = i + k\n        while j < n:\n            if arr[j] > arr[i]:\n                tmp = arr[i]\n                arr[i] = arr[j]\n                arr[j] = tmp\n            j += k\n    return sum(arr[:k])\nt = int(input())\nwhile t:\n    (n, k) = [int(x) for x in input().strip().split(' ')]\n    arr = [int(x) for x in input().strip().split(' ')]\n    print(solution(n, k, arr))\n    t -= 1", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nii = lambda : int(input())\nmi = lambda : map(int, input().split())\nli = lambda : list(mi())\ninf = 2 ** 63 - 1\nmod = 998244353\n\ndef solve():\n    (x, y) = mi()\n    l = li()\n    out = [0] * x\n    for i in range(x):\n        out[(i + 1) % y] = max(out[(i + 1) % y], l[i])\n    result = 0\n    for i in range(y):\n        result += out[i]\n    print(result)\nfor _ in range(ii()):\n    solve()", "n = int(input())\nfor i in range(n):\n    m = list(map(int, input().split()))\n    k = m[1]\n    d = {}\n    arr = list(map(int, input().split()))\n    for j in range(len(arr)):\n        if (j + 1) % k not in d:\n            d[(j + 1) % k] = arr[j]\n        else:\n            d[(j + 1) % k] = max(d[(j + 1) % k], arr[j])\n    ans = 0\n    for j in d:\n        ans += d[j]\n    print(ans)", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    (n, k) = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    b = [0] * (n + 1)\n    for i in range(n):\n        b[i % k] = max(b[i % k], a[i])\n    s = sum(b[:k])\n    print(s)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    mx = sum([max([x for x in arr[i::k]]) for i in range(k)])\n    print(mx)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    sum = 0\n    for i in range(k):\n        sum += max(l[i::k])\n    print(sum)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if n == k:\n        print(sum(arr))\n    else:\n        ml = []\n        for i in range(k):\n            m = arr[i]\n            for j in range(i + k, n, k):\n                m = max(arr[j], m)\n            ml.append(m)\n        print(sum(ml))", "for _ in range(int(input())):\n    [n, k] = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    d = []\n    s = 0\n    for i in range(k):\n        m = a[i]\n        for j in range(i, n, k):\n            if a[j] > m:\n                m = a[j]\n        s += m\n    print(s)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    arr = list(map(int, input().split(' ')))\n    lst = []\n    for i in range(k):\n        lst.append([])\n    for i in range(n):\n        lst[i % k].append(arr[i])\n    sum = 0\n    for i in lst:\n        sum = sum + max(i)\n    print(sum)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    sum = 0\n    l = 0\n    for j in range(n):\n        if j + k >= n:\n            break\n        elif arr[j] > arr[j + k]:\n            arr[j + k] = arr[j]\n    while l < k:\n        sum += arr[n - 1 - l]\n        l += 1\n    print(sum)", "import sys\nm = int(sys.stdin.readline())\n\ndef f(a, n, k):\n    u = [-1000] * k\n    for i in range(k):\n        p = 0\n        while p + i < n:\n            u[i] = max(u[i], int(a[p + i]))\n            p += k\n    return sum(u)\nfor i in range(m):\n    w = sys.stdin.readline().replace('\\n', '').split(' ')\n    a = sys.stdin.readline().replace('\\n', '').split(' ')\n    print(f(a, int(w[0]), int(w[1])))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = 0\n    if n == k:\n        print(sum(l))\n        c = 1\n    for j in range(1, n + 1):\n        t = j + k\n        while t <= n:\n            if l[j - 1] < l[t - 1]:\n                l[j - 1] = l[t - 1]\n            t += k\n    if c == 0:\n        print(sum(l[:k]))", "for l in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    s = 0\n    a = [int(i) for i in input().split()]\n    b = [0 for i in range(len(a))]\n    for i in range(len(a)):\n        b[i % k] = max(a[i], b[i % k])\n    for i in range(k):\n        s = s + b[i]\n    print(s)", "def consecutiveSum(a, b, array):\n    if b >= a:\n        print(sum(array))\n    else:\n        my_sum = 0\n        index = 0\n        while index < b:\n            my_sum += max(array[index::b])\n            index += 1\n        print(my_sum)\n\ndef ruleOfLeague(n, x, y):\n    if x == 0 and y == 0:\n        print(-1)\n    elif x == 0 or y == 0:\n        number = 0\n        if x != 0:\n            number = x\n        else:\n            number = y\n        if n == 1:\n            print(1)\n        elif n == 2:\n            print(2)\n        elif (n - 1) % number != 0:\n            print(-1)\n        else:\n            player = list(range(1, n + 1))\n            player = player[1::number]\n            winner = [1] + player[1:]\n            for_print = []\n            for each in winner:\n                for_print += [each] * number\n            print(' '.join(list(map(str, for_print))))\n    else:\n        print(-1)\na = int(input())\nwhile a > 0:\n    b = input().split()\n    c = list(map(int, input().split()))\n    consecutiveSum(int(b[0]), int(b[1]), c)\n    a -= 1", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(sum((max(a[i::k]) for i in range(k))))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    res = [0] * k\n    arr = list(map(int, input().split()))\n    for i in range(n):\n        res[(i + 1) % k] = max(res[(i + 1) % k], arr[i])\n    print(sum(res))", "def solve(l, n, k):\n    res = 0\n    for i in range(k):\n        cur = []\n        j = i\n        while j >= 0:\n            cur += [l[j]]\n            j += k\n            if j >= n:\n                break\n        res += max(cur)\n    print(res)\n    return\nt = int(input())\nfor x in range(t):\n    (n, k) = [int(i) for i in input().split()]\n    l = [int(i) for i in input().split()]\n    solve(l, n, k)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    x = tuple(map(int, input().split()))\n    maxelements = [0] * k\n    for i in range(n):\n        maxelements[i % k] = max(maxelements[i % k], x[i])\n    print(sum(maxelements))", "NumberofTestCases = int(input())\n\ndef ConsecutiveSum(arr, N, K):\n    temp = [0 for _ in range(K)]\n    for (i, el) in enumerate(arr):\n        temp[i % K] = max(temp[i % K], el)\n    print(sum(temp))\nfor i in range(NumberofTestCases):\n    (N, K) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    ConsecutiveSum(arr, N, K)", "test = int(input())\nwhile test != 0:\n    (n, k) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    total = 0\n    if n == k:\n        print(sum(a))\n    else:\n        for i in range(k):\n            maxm = a[i]\n            t = k\n            while i + t < n:\n                maxm = max(maxm, a[i + t])\n                t += k\n            total += maxm\n        print(total)\n    test -= 1", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = [int(i) for i in input().split()]\n    d = {}\n    for i in range(n):\n        if i % k not in d:\n            d[i % k] = lst[i]\n        else:\n            d[i % k] = max(d[i % k], lst[i])\n    res = 0\n    for i in d.keys():\n        res += d[i]\n    print(res)", "from math import *\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    mass = list(map(int, input().split()))\n    p = [0] * k\n    for i in range(n):\n        p[(i + 1) % k] = max(p[(i + 1) % k], mass[i])\n    print(sum(p))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = []\n    if k > n:\n        k = n\n    for i in range(k):\n        cmax = a[i]\n        j = i + k\n        while j < n:\n            if cmax < a[j]:\n                cmax = a[j]\n            j += k\n        b.append(cmax)\n    print(sum(b))", "def solve(arr, k):\n    summ = 0\n    for i in range(k):\n        ind = i\n        maxx = -1\n        while ind < len(arr):\n            maxx = max(maxx, arr[ind])\n            ind += k\n        summ += maxx\n    return summ\nfor _ in range(int(input())):\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    print(solve(arr2, arr1[1]))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    z = 0\n    for i in range(k):\n        m = 0\n        while i < n:\n            m = max(m, l[i])\n            i += k\n        z += m\n    print(z)", "for testcases in range(int(input())):\n    S = list(map(int, input().split(' ')))\n    a = list(map(int, input().split(' ')))\n    n = S[0]\n    k = S[1]\n    print(sum((max(a[i::k]) for i in range(k))))", "from collections import defaultdict\nfrom sys import stdin as f\nN = int(f.readline())\nans = []\nfor _ in range(N):\n    (n, k) = map(int, f.readline().split())\n    a = list(map(int, f.readline().split()))\n    mp = defaultdict(int)\n    for (i, n) in enumerate(a):\n        mp[i % k] = max(mp[i % k], n)\n    ans.append(sum(mp.values()))\nprint('\\n'.join((str(x) for x in ans)))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = [0] * k\n    x = 0\n    for i in a:\n        b[x] = max(b[x], i)\n        x = (x + 1) % k\n    print(sum(b))", "ntestcases = int(input())\nfor i in range(ntestcases):\n    (n, k) = map(int, input().split(' '))\n    nums = list(map(int, input().split(' ')))\n    for j in range(k):\n        for l in range(j + k, n, k):\n            nums[j] = max(nums[j], nums[l])\n    print(sum(nums[0:k]))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(k):\n        ans += max(a[i:n:k])\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(k):\n        ans += max(a[i:n:k])\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split(' '))\n    k_maxs = [0] * k\n    for (j, a) in enumerate(map(int, input().split(' '))):\n        k_maxs[j % k] = max(k_maxs[j % k], a)\n    print(sum(k_maxs))", "ta = int(input())\nfor i in range(ta):\n    (na, ka) = map(int, input().split())\n    la = list(map(int, input().split()))\n    arr = la\n    for j in range(len(la)):\n        arr[j % ka] = max(arr[j % ka], arr[j])\n    summ = 0\n    for j in range(ka):\n        summ += arr[j]\n    print(summ)", "t = int(input())\nfor ttt in range(t):\n    (n, k) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    kk = [0] * k\n    for i in range(n):\n        kk[i % k] = max(kk[i % k], a[i])\n    print(sum(kk))", "n = int(input())\nfor j in range(n):\n    inputs = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    k = inputs[1]\n    (l, r) = (0, k)\n    while r < len(a):\n        if a[l] > a[r]:\n            (a[r], a[l]) = (a[l], a[r])\n        l += 1\n        r += 1\n    print(sum(a[-k:]))", "t = int(input())\nwhile t != 0:\n    t -= 1\n    (n, k) = map(int, input().split())\n    array = list(map(int, input().split()))\n    sum = 0\n    for i in range(k):\n        sum += max(array[i::k])\n    print(sum)", "import sys\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split(' '))\n    arr = [int(x) for x in input().split(' ')]\n    sum = 0\n    for j in range(k):\n        mVal = arr[j]\n        idx = j + k\n        while idx < n:\n            mVal = max(mVal, arr[idx])\n            idx += k\n        sum += mVal\n    print(sum)", "times = int(input())\nfor time in range(times):\n    (n, k) = [int(x) for x in input().split()]\n    arr = [int(x) for x in input().split()]\n    for i in range(n):\n        for j in range(i + k, n, k):\n            if arr[i] < arr[j]:\n                (arr[i], arr[j]) = (arr[j], arr[i])\n    s = 0\n    for i in range(k):\n        s += arr[i]\n    print(s)", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nin_il = lambda : list(map(int, input().split()))\nin_sl = lambda : input().split()\nin_i = lambda : int(input())\nMAX_INT = float('inf')\n\ndef solve():\n    (n, k) = in_il()\n    arr = in_il()\n    for i in range(k):\n        for j in range(i + k, n, k):\n            arr[i] = max(arr[i], arr[j])\n    print(sum(arr[:k]))\nfor _ in range(in_i()):\n    solve()"]