["import operator\n\ndef main():\n\n    def solve(s):\n        mn = 20\n        n = len(s)\n        bn = n - 2\n        foundFive = False\n        foundZero = False\n        for i in range(n - 1, -1, -1):\n            if s[i] == '0':\n                if foundZero:\n                    mn = bn - i\n                    break\n                foundZero = True\n            elif s[i] == '5':\n                if foundZero:\n                    mn = bn - i\n                    break\n                foundFive = True\n            elif s[i] in ['2', '7']:\n                if foundFive:\n                    mn = bn - i\n                    break\n        return str(mn)\n    t = int(input())\n    for _ in range(t):\n        s = input().strip()\n        print(solve(s))\nimport sys, threading\ninput = sys.stdin.readline\nthread = threading.Thread(target=main)\nthread.start()\nthread.join()", "def divisbleBy25(n):\n    count = {}\n    ans = 0\n    for i in range(len(n) - 1, -1, -1):\n        if n[i] not in ('7', '2', '0', '5'):\n            continue\n        if n[i] == '0' or n[i] == '5':\n            if '0' in count:\n                ans += count['0'] - i - 1\n                ans += len(n) - 1 - count['0']\n                break\n            count[n[i]] = i\n        elif n[i] == '7' or n[i] == '2':\n            if '5' in count:\n                ans += count['5'] - i - 1\n                ans += len(n) - 1 - count['5']\n                break\n    return ans\noutput = []\nfor i in range(int(input())):\n    output.append(divisbleBy25(input()))\nprint(*output, sep='\\n')", "for s in [*open(0)][1:]:\n    a = []\n    i = 0\n    while (x := s[(i := (i - 1))]) not in a:\n        a += '05' * (x == '0') + '27' * (x == '5')\n    print(-i - 3)", "SEARCH_FIRST_DIGIT = 0\nCOMPLETE_50 = 1\nCOMPLETE_25 = 2\n\ndef solve(n):\n    n = n[::-1]\n    f0 = -1\n    f5 = -1\n    for i in range(len(n)):\n        if f0 == -1 and n[i] == '0':\n            f0 = i\n            continue\n        if f5 == -1 and n[i] == '5':\n            f5 = i\n            if f0 == -1:\n                continue\n        if f0 != -1 and n[i] in '05':\n            return i - 1\n        if f5 != -1 and n[i] in '27':\n            return i - 1\n\ndef main():\n    test_cases = int(input())\n    ans = [None] * test_cases\n    for t in range(test_cases):\n        n = input()\n        a = solve(n)\n        ans[t] = a\n    print(*ans, sep='\\n')\nmain()", "for s in [*open(0)][1:]:\n    a = ''\n    i = 0\n    while (x := s[(i := (i - 1))]) not in a:\n        a += '05' * (x == '0') + '27' * (x == '5')\n    print(-i - 3)", "for s in [*open(0)][1:]:\n    a = []\n    i = 0\n    while (x := s[(i := (i - 1))]) not in a:\n        a += '05' * (x == '0') + '27' * (x == '5')\n    print(-i - 3)", "for s in [*open(0)][1:]:\n    a = []\n    i = 0\n    while (x := s[(i := (i - 1))]) not in a:\n        a += '05' * (x == '0') + '27' * (x == '5')\n    print(-i - 3)", "import sys, math\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    s = input()\n    z = None\n    f = None\n    for i in range(len(s) - 2, -1, -1):\n        if s[i] == '5' and f == None:\n            f = i\n        if z == None and s[i] == '0':\n            z = i\n        elif z and (s[i] == '5' or s[i] == '0'):\n            print(len(s) - 3 - i)\n            break\n        if f and (s[i] == '2' or s[i] == '7'):\n            print(len(s) - 3 - i)\n            break", "from sys import stdin\n\ndef _stdin():\n    return stdin.readline().strip()\n\ndef main():\n    Q = int(_stdin())\n    for i in range(0, Q):\n        N = int(_stdin())\n        if N % 25 == 0:\n            print(0)\n            continue\n        ok = False\n        S = str(N)\n        b = len(S)\n        total = 0\n        for j in range(b - 1, -1, -1):\n            if S[j] == '5':\n                for k in range(j - 1, -1, -1):\n                    if S[k] == '2' or S[k] == '7':\n                        ok = True\n                        break\n                    total += 1\n                break\n            total += 1\n        total1 = 0\n        for j in range(b - 1, -1, -1):\n            if S[j] == '0':\n                for k in range(j - 1, -1, -1):\n                    if S[k] == '0' or S[k] == '5':\n                        break\n                    total1 += 1\n                break\n            total1 += 1\n        print(min(total, total1))\nmain()", "for s in [*open(0)][1:]:\n    a = []\n    i = 0\n    while (x := s[(i := (i - 1))]) not in a:\n        a += '05' * (x == '0') + '27' * (x == '5')\n    print(-i - 3)", "t = int(input())\nD = {}\nfor i in range(t):\n    s = input()\n    d = {0: 0, 5: 0}\n    c = 0\n    for j in s[-1::-1]:\n        if j == '0':\n            if d[0] > 0:\n                D[i] = c - 1\n                break\n            else:\n                d[0] += 1\n        elif j == '2':\n            if d[5] > 0:\n                D[i] = c - 1\n                break\n        elif j == '5':\n            if d[0] > 0:\n                D[i] = c - 1\n                break\n            else:\n                d[5] += 1\n        elif j == '7':\n            if d[5] > 0:\n                D[i] = c - 1\n                break\n        c += 1\nfor i in D:\n    print(D[i])", "for s in [*open(0)][1:]:\n    a = []\n    i = 0\n    while (x := s[(i := (i - 1))]) not in a:\n        a += '05' * (x == '0') + '27' * (x == '5')\n    print(-i - 3)", "for s in [*open(0)][1:]:\n    a = []\n    i = 0\n    while (x := s[(i := (i - 1))]) not in a:\n        a += '05' * (x == '0') + '27' * (x == '5')\n    print(-i - 3)", "import sys\ninput = sys.stdin.readline\nINF = 10 ** 9\n\ndef solve():\n    s = input()[::-1]\n    ans = INF\n    for (x, y) in ['00', '25', '50', '75']:\n        try:\n            i = s.index(y)\n            j = s.index(x, i + 1)\n            ans = min(ans, i - 1 + (j - i - 1))\n        except ValueError:\n            pass\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "for s in [*open(0)][1:]:\n    a = []\n    n = i = len(s)\n    while (x := s[(i := (i - 1))]) not in a:\n        a += '05' * (x == '0') + '27' * (x == '5')\n    print(n - i - 3)", "for s in [*open(0)][1:]:\n    a = []\n    i = 0\n    while (x := s[(i := (i - 1))]) not in a:\n        a += '05' * (x == '0') + '27' * (x == '5')\n    print(-i - 3)", "for s in [*open(0)][1:]:\n    a = []\n    i = 0\n    while (x := s[(i := (i - 1))]) not in a:\n        a += '05' * (x == '0') + '27' * (x == '5')\n    print(-i - 3)", "for s in [*open(0)][1:]:\n    a = []\n    i = 0\n    while (x := s[(i := (i - 1))]) not in a:\n        a += '05' * (x == '0') + '27' * (x == '5')\n    print(-i - 3)", "for s in [*open(0)][1:]:\n    a = ''\n    i = 0\n    while (x := s[(i := (i - 1))]) not in a:\n        a += '05' * (x == '0') + '27' * (x == '5')\n    print(-i - 3)", "for s in [*open(0)][1:]:\n    a = []\n    i = 0\n    while (x := s[(i := (i - 1))]) not in a:\n        a += '05' * (x == '0') + '27' * (x == '5')\n    print(-i - 3)", "cant = int(input())\nlista = []\nfor i in range(cant):\n    lista.append(int(input()))\nfor n in lista:\n    n = str(n)[::-1]\n    cont0 = 0\n    cont5 = 0\n    c0 = 0\n    c5 = 0\n    for i in n:\n        if i == '0' and cont0 != 1:\n            cont0 = 1\n            c5 = c5 + 1\n            continue\n        elif cont0 == 1 and i == '0':\n            print(c0)\n            break\n        elif cont0 == 1 and i == '5':\n            print(c0)\n            break\n        elif i == '5' and cont5 != 1:\n            cont5 = 1\n            c0 = c0 + 1\n            continue\n        elif cont5 == 1 and i == '2':\n            print(c5)\n            break\n        elif cont5 == 1 and i == '7':\n            print(c5)\n            break\n        else:\n            c5 = c5 + 1\n            c0 = c0 + 1", "result = []\nfor _ in range(int(input())):\n    s = input()\n    cnt = 0\n    while s[-1] not in '05':\n        s = s[:-1]\n        cnt += 1\n    cnt5 = cnt\n    cnt0 = cnt\n    flag0 = 0\n    flag5 = 0\n    for i in s[::-1]:\n        if flag5 == 1:\n            if i not in '27':\n                cnt5 += 1\n            else:\n                break\n        else:\n            cnt5 += 1\n        if flag0 == 1:\n            if i not in '50':\n                cnt0 += 1\n            else:\n                break\n        else:\n            cnt0 += 1\n        if i == '5' and flag5 == 0:\n            flag5 = 1\n            cnt5 -= 1\n        if i == '0' and flag0 == 0:\n            flag0 = 1\n            cnt0 -= 1\n    result.append(min(cnt5, cnt0))\nprint(*result, sep='\\n')", "li = []\nfor i in range(int(input())):\n    li.append(int(input()))\nfor n in li:\n    n = str(n)[::-1]\n    cont_0 = 0\n    cont_5 = 0\n    c0 = 0\n    c5 = 0\n    for i in n:\n        if i == '0' and cont_0 != 1:\n            cont_0 = 1\n            c5 += 1\n            continue\n        elif cont_0 == 1 and i == '0':\n            print(c0)\n            break\n        elif cont_0 == 1 and i == '5':\n            print(c0)\n            break\n        elif i == '5' and cont_5 != 1:\n            cont_5 = 1\n            c0 += 1\n            continue\n        elif cont_5 == 1 and i == '2':\n            print(c5)\n            break\n        elif cont_5 == 1 and i == '7':\n            print(c5)\n            break\n        else:\n            c5 = c5 + 1\n            c0 = c0 + 1", "n = []\nfor i in range(int(input())):\n    n.append(str(input()))\nfor j in n:\n    s = 100\n    s_t = 100\n    k = j[::-1]\n    j = k\n    if j.find('0') != -1:\n        s = 0\n        s += j.index('0')\n        j = j[j.index('0') + 1:]\n        va = j.find('0')\n        vb = j.find('5')\n        if va == -1 and vb == -1:\n            s = 100\n        else:\n            if va != -1:\n                va = j.index('0')\n            else:\n                va = 100\n            if vb != -1:\n                vb = j.index('5')\n            else:\n                vb = 100\n            if va < vb and va != -1:\n                s += va\n            else:\n                s += vb\n    if k.find('5') != -1:\n        s_t = 0\n        s_t += k.index('5')\n        k = k[k.index('5') + 1:]\n        vx = k.find('2')\n        vy = k.find('7')\n        if vx == -1 and vy == -1:\n            s_t = 100\n        else:\n            if vx != -1:\n                vx = k.index('2')\n            else:\n                vx = 100\n            if vy != -1:\n                vy = k.index('7')\n            else:\n                vy = 100\n            if vx < vy and vx != -1:\n                s_t += vx\n            else:\n                s_t += vy\n    print(min(s, s_t))", "def fn(n):\n    m = n[::-1]\n    zeroes = []\n    fives = []\n    twos = []\n    for i in range(len(m)):\n        if m[i] == '0':\n            zeroes.append(i)\n        elif m[i] == '5':\n            fives.append(i)\n        elif m[i] == '2' or m[i] == '7':\n            twos.append(i)\n    a = len(m)\n    if len(zeroes) > 1:\n        a = zeroes[1] - 1\n    b = c = len(m)\n    if len(fives) != 0 and len(zeroes) != 0:\n        for oppa in fives:\n            if oppa > zeroes[0]:\n                c = oppa - 1\n                break\n    if len(fives) != 0 and len(twos) != 0:\n        for opp in twos:\n            if opp > fives[0]:\n                b = opp - 1\n                break\n    return min(a, b, c)\na = int(input())\nk = []\nfor i in range(a):\n    q = input()\n    k.append(fn(q))\nfor m in k:\n    print(m)", "for s in [*open(0)][1:]:\n    a = []\n    i = 0\n    while (x := s[(i := (i - 1))]) not in a:\n        a += '05' * (x == '0') + '27' * (x == '5')\n    print(-i - 3)", "for s in [*open(0)][1:]:\n    a = []\n    i = 0\n    while (x := s[(i := (i - 1))]) not in a:\n        a += '05' * (x == '0') + '27' * (x == '5')\n    print(-i - 3)", "nums = int(input())\narr = []\nfor i in range(nums):\n    arr.append(int(input()))\nfor n in arr:\n    n = str(n)[::-1]\n    (a, b) = (0, 0)\n    (a2, b2) = (0, 0)\n    for i in n:\n        if i == '0' and a != 1:\n            a = 1\n            b2 = b2 + 1\n            continue\n        elif a == 1 and i == '0':\n            print(a2)\n            break\n        elif a == 1 and i == '5':\n            print(a2)\n            break\n        elif i == '5' and b != 1:\n            b = 1\n            a2 = a2 + 1\n            continue\n        elif b == 1 and i == '2':\n            print(b2)\n            break\n        elif b == 1 and i == '7':\n            print(b2)\n            break\n        else:\n            b2 = b2 + 1\n            a2 = a2 + 1", "for s in [*open(0)][1:]:\n    a = []\n    n = i = len(s)\n    while i and (x := s[(i := (i - 1))]) not in a:\n        a += '05' * (x == '0') + '27' * (x == '5')\n    print(n - i - 3)", "result = []\nfor _ in range(int(input())):\n    s = input()\n    cnt = 0\n    while s[-1] not in '05':\n        s = s[:-1]\n        cnt += 1\n    if s[-1] == '5':\n        cnt5 = cnt\n        cnt0 = cnt + 1\n        flag0 = 0\n        flag5 = 1\n    else:\n        cnt5 = cnt + 1\n        cnt0 = cnt\n        flag0 = 1\n        flag5 = 0\n    for i in s[::-1][1:]:\n        if flag5 == 1:\n            if i not in '27':\n                cnt5 += 1\n            else:\n                break\n        else:\n            cnt5 += 1\n        if flag0 == 1:\n            if i not in '50':\n                cnt0 += 1\n            else:\n                break\n        else:\n            cnt0 += 1\n        if i == '5' and flag5 == 0:\n            flag5 = 1\n            cnt5 -= 1\n        if i == '0' and flag0 == 0:\n            flag0 = 1\n            cnt0 -= 1\n    result.append(min(cnt5, cnt0))\nprint(*result, sep='\\n')", "for s in [*open(0)][1:]:\n    a = []\n    i = 0\n    while (x := s[(i := (i - 1))]) not in a:\n        a += '05' * (x == '0') + '27' * (x == '5')\n    print(-i - 3)", "for s in [*open(0)][1:]:\n    a = []\n    i = 0\n    while (x := s[(i := (i - 1))]) not in a:\n        a += '05' * (x == '0') + '27' * (x == '5')\n    print(-i - 3)", "n = int(input())\nfor i in range(n):\n    a = list(input())\n    k1 = 0\n    k2 = 0\n    s = 0\n    for j in a[::-1]:\n        if j == '0':\n            k2 += 1\n        if j == '5' and k1 != 1:\n            k1 = 1\n        if (j == '2' or j == '7') and k1 == 1:\n            k1 = 2\n        if j == '5' and k2 == 1:\n            k2 += 1\n        s += 1\n        if k1 == 2 or k2 == 2:\n            print(s - 2)\n            break", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    k = int(input())\n    t = k\n    cnt0 = 0\n    while t:\n        if t % 10 != 0:\n            cnt0 += 1\n        else:\n            t //= 10\n            break\n        t //= 10\n    while t:\n        if t % 5 != 0:\n            cnt0 += 1\n        else:\n            break\n        t //= 10\n    t = k\n    cnt1 = 0\n    while t:\n        if t % 10 != 5:\n            cnt1 += 1\n        else:\n            t //= 10\n            break\n        t //= 10\n    while t:\n        if t % 5 != 2:\n            cnt1 += 1\n        else:\n            break\n        t //= 10\n    print(min(cnt0, cnt1))", "import sys\ninput = lambda : sys.stdin.readline().rstrip('\\r\\n')\ninp_vars_int = lambda : map(int, input().split())\ninp_list_int = lambda : list(map(int, input().split()))\nt = int(input())\nfor _ in range(t):\n    n = input().strip()\n    (found_x5, found_5) = (False, False)\n    (r1, r2) = (0, 0)\n    for (i, c) in enumerate(reversed(n)):\n        if not found_5:\n            if c == '5':\n                found_5 = True\n            else:\n                r1 += 1\n        elif c in ('2', '7'):\n            found_x5 = True\n            break\n        else:\n            r1 += 1\n    (found_x0, found_0) = (False, False)\n    for (i, c) in enumerate(reversed(n)):\n        if not found_0:\n            if c == '0':\n                found_0 = True\n            else:\n                r2 += 1\n        elif c in ('5', '0'):\n            found_x0 = True\n            break\n        else:\n            r2 += 1\n    print(min(r1, r2))", "t = int(input())\nA = []\nfor i in range(t):\n    n = input()\n    if int(n) % 25 == 0:\n        A.append(0)\n        continue\n    n = n[::-1]\n    ans = [-1, -1, -1, -1, -1]\n    ret = 100\n    for i in range(len(n)):\n        if n[i] == '0':\n            if ans[0] != -1:\n                ret = min(ret, i - 1)\n            ans[0] = i\n        if n[i] == '2':\n            ans[1] = i\n            if ans[2] != -1:\n                ret = min(ret, i - 1)\n        if n[i] == '5':\n            ans[2] = i\n            if ans[0] != -1:\n                ret = min(ret, i - 1)\n        if n[i] == '7':\n            ans[3] = i\n            if ans[2] != -1:\n                ret = min(ret, i - 1)\n    A.append(ret)\nfor i in A:\n    print(i)", "import operator\n\ndef main():\n\n    def solve(s):\n        mn = 20\n        n = len(s)\n        bn = n - 2\n        foundFive = False\n        foundZero = False\n        for i in range(n - 1, -1, -1):\n            if s[i] == '0':\n                if foundZero:\n                    mn = bn - i\n                    break\n                foundZero = True\n            elif s[i] == '5':\n                if foundZero:\n                    mn = bn - i\n                    break\n                foundFive = True\n            elif foundFive and s[i] in ['2', '7']:\n                mn = bn - i\n                break\n        return str(mn)\n    t = int(input())\n    for _ in range(t):\n        s = input().strip()\n        print(solve(s))\nimport sys, threading\ninput = sys.stdin.readline\nthread = threading.Thread(target=main)\nthread.start()\nthread.join()", "import sys\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef search(value1, value2, string):\n    for s in range(len(string) - 1, -1, -1):\n        if string[s] == value1:\n            return s\n        if string[s] == value2:\n            return s\n    return -1\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    numbers = []\n    for i in range(n):\n        numbers.append(get_string())\n    ans = []\n    for num in numbers:\n        l = len(num)\n        first = second = l\n        for d in range(l - 1, -1, -1):\n            if num[d] == '0':\n                x = search('0', '5', num[:d])\n                if x != -1 and first == l:\n                    first = l - 1 - x - 1\n            if num[d] == '5':\n                x = search('2', '7', num[:d])\n                if x != -1 and second == l:\n                    second = l - 1 - x - 1\n        if first < second:\n            ans.append(first)\n        else:\n            ans.append(second)\n    for a in ans:\n        print(a)\nmain()", "for _ in range(int(input())):\n    li = input()\n    cont_0 = 0\n    cont_5 = 0\n    c0 = 0\n    c5 = 0\n    li = li[::-1]\n    for i in li:\n        if i == '0' and cont_0 != 1:\n            cont_0 = 1\n            c5 += 1\n            continue\n        elif cont_0 == 1 and i == '0':\n            print(c0)\n            break\n        elif cont_0 == 1 and i == '5':\n            print(c0)\n            break\n        elif i == '5' and cont_5 != 1:\n            cont_5 = 1\n            c0 += 1\n            continue\n        elif cont_5 == 1 and i == '2':\n            print(c5)\n            break\n        elif cont_5 == 1 and i == '7':\n            print(c5)\n            break\n        else:\n            c5 = c5 + 1\n            c0 = c0 + 1", "import math as m\ni = input()\ninp = []\nfor a in range(0, int(i)):\n    inp += [input()]\n\ndef min_moves(s, sub):\n    s = s[::-1]\n    sub = sub[::-1]\n    count = 0\n    for c in sub:\n        try:\n            n = s.index(c)\n            count += n\n            s = s[n + 1:]\n        except:\n            return -1\n    return count\nfor s in inp:\n    check = ['00', '25', '50', '75']\n    moves = []\n    for sub in check:\n        x = min_moves(s, sub)\n        if x >= 0:\n            moves += [x]\n    print(min(moves))", "import math\nimport sys\nimport itertools\nimport fractions\nwtf = sys.stdin.read()\nwtf = wtf.strip().split('\\n')\nt = int(wtf[0])\nfor s in wtf[1:]:\n    n = len(s)\n    ans = [0, 0]\n    z = ''.join([x for x in reversed(s)])\n    fid = z.find('5')\n    ans[0] = fid\n    if fid != -1:\n        for i in range(fid + 1, n):\n            if z[i] != '2' and z[i] != '7':\n                ans[0] += 1\n            else:\n                break\n    else:\n        ans[0] = n\n    zid = z.find('0')\n    ans[1] = zid\n    if zid != -1:\n        for i in range(zid + 1, n):\n            if z[i] != '0' and z[i] != '5':\n                ans[1] += 1\n            else:\n                break\n    else:\n        ans[1] = n\n    print(min(ans))", "import sys\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef LI1():\n    return list(map(int1, sys.stdin.readline().split()))\n\ndef LLI1(rows_number):\n    return [LI1() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline().rstrip()\ninf = 10 ** 16\nmd = 998244353\n\ndef solve():\n    cc = list(SI())[::-1]\n    ans = inf\n    for s in ['00', '52', '05', '57']:\n        j = 0\n        for (i, c) in enumerate(cc):\n            if c == s[j]:\n                j += 1\n            if j == 2:\n                ans = min(ans, i - 1)\n                break\n    print(ans)\nfor testcase in range(II()):\n    solve()", "for s in [*open(0)][1:]:\n    n = int(s)\n    a1 = 0\n    a2 = 0\n    l1 = [[0], [5, 0]]\n    l2 = [[5], [2, 7]]\n    i1 = 0\n    i2 = 0\n    while n > 0:\n        x = n % 10\n        if x in l1[i1]:\n            i1 += 1\n            a1 -= 1\n        elif x in l2[i2]:\n            i2 += 1\n            a2 -= 1\n        a1 += 1\n        a2 += 1\n        if 2 in [i1, i2]:\n            break\n        n //= 10\n    print(min(a1, a2))", "t = int(input())\nfor dlsakjdklsj in range(t):\n    n = input()[::-1]\n    ans = 999\n    pos1 = n.find('0')\n    if pos1 != -1:\n        pos2 = n.find('0', pos1 + 1)\n        if pos2 != -1:\n            ans = min(ans, pos2 - 1)\n    pos1 = n.find('5')\n    if pos1 != -1:\n        pos2 = n.find('2', pos1 + 1)\n        if pos2 != -1:\n            ans = min(ans, pos2 - 1)\n    pos1 = n.find('5')\n    if pos1 != -1:\n        pos2 = n.find('7', pos1 + 1)\n        if pos2 != -1:\n            ans = min(ans, pos2 - 1)\n    pos1 = n.find('0')\n    if pos1 != -1:\n        pos2 = n.find('5', pos1 + 1)\n        if pos2 != -1:\n            ans = min(ans, pos2 - 1)\n    print(ans)", "import sys\nfrom math import factorial, gcd\nfrom collections import Counter, deque, defaultdict\nfrom bisect import bisect_left, bisect_right\nfrom heapq import heappop, heappush, heapify, nlargest, nsmallest\nfrom itertools import groupby, accumulate\nfrom copy import deepcopy\nMOD = 10 ** 9 + 7\nINF = float('inf')\ninput = sys.stdin.readline\nrl = lambda : list(map(int, input().split()))\nrs = lambda : sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    n = int(input())\n    count = 0\n    zero = 0\n    for c in reversed(str(n)):\n        if c == '0':\n            zero += 1\n            if zero == 2:\n                break\n        elif c == '5':\n            if zero > 0:\n                break\n            else:\n                count += 1\n        else:\n            count += 1\n    five = 0\n    count2 = 0\n    for c in reversed(str(n)):\n        if c == '5':\n            five += 1\n            if five > 1:\n                count2 += 1\n        elif c == '2' or c == '7':\n            if five > 0:\n                break\n            else:\n                count2 += 1\n        else:\n            count2 += 1\n    print(min(count, count2))", "t = int(input())\nanswers = []\nfor i in range(t):\n    n = int(input())\n    if n % 25 == 0:\n        answers.append(0)\n        continue\n    try:\n        s = str(n)\n        a1 = 0\n        while s[-1] != '5':\n            s = s[:-1]\n            a1 += 1\n        while s[-2] not in ('2', '7'):\n            s = s[:-2] + s[-1]\n            a1 += 1\n    except:\n        pass\n    try:\n        s = str(n)\n        a2 = 0\n        while s[-1] != '0':\n            s = s[:-1]\n            a2 += 1\n        while s[-2] not in ('0', '5'):\n            s = s[:-2] + s[-1]\n            a2 += 1\n    except:\n        pass\n    if a1 > a2:\n        answers.append(a2)\n    else:\n        answers.append(a1)\nfor i in answers:\n    print(i)", "for _ in range(int(input())):\n    s = input().strip()[::-1]\n    ans = 1000000000000\n    z = s.find('0')\n    if z != -1:\n        tmp = s.find('0', z + 1)\n        if tmp != -1:\n            ans = min(ans, tmp - z - 1 + z)\n        temp = s.find('5', z + 1)\n        if temp != -1:\n            ans = min(ans, temp - z - 1 + z)\n    f = s.find('5')\n    if f != -1:\n        tmp = s.find('2', f + 1)\n        if tmp != -1:\n            ans = min(ans, tmp - f - 1 + f)\n        tmp = s.find('7', f + 1)\n        if tmp != -1:\n            ans = min(ans, tmp - f - 1 + f)\n    print(ans)", "for i in range(int(input())):\n    n = input()\n    r = n[::-1]\n    l = len(r)\n    a = b = c = d = l\n    if '5' in r:\n        m = r.find('5')\n        n = r.find('2', m, l)\n        u = r.find('7', m, l)\n        if n != -1:\n            a = n - 1\n        if u != -1:\n            b = u - 1\n    if '0' in r:\n        m = r.find('0')\n        n = r.find('5', m, l)\n        u = r.find('0', m + 1, l)\n        if n != -1:\n            c = n - 1\n        if u != -1:\n            d = u - 1\n    k = min(a, b, c, d)\n    print(k)", "def test25(string):\n    s = len(string) - 1\n    while not string[s] == '5':\n        s -= 1\n        if s < 0:\n            return 20\n    while not string[s] == '2':\n        s -= 1\n        if s < 0:\n            return 20\n    return len(string) - s - 2\n\ndef test50(string):\n    s = len(string) - 1\n    while not string[s] == '0':\n        s -= 1\n        if s < 0:\n            return 20\n    while not string[s] == '5':\n        s -= 1\n        if s < 0:\n            return 20\n    return len(string) - s - 2\n\ndef test75(string):\n    s = len(string) - 1\n    while not string[s] == '5':\n        s -= 1\n        if s < 0:\n            return 20\n    while not string[s] == '7':\n        s -= 1\n        if s < 0:\n            return 20\n    return len(string) - s - 2\n\ndef test00(string):\n    s = len(string) - 1\n    while not string[s] == '0':\n        s -= 1\n        if s < 0:\n            return 20\n    s -= 1\n    while not string[s] == '0':\n        s -= 1\n        if s < 0:\n            return 20\n    return len(string) - s - 2\nt = int(input())\narr_input = []\nfor i in range(t):\n    v = input()\n    arr_input.append(v)\nfor i in arr_input:\n    if int(i) % 25 == 0:\n        print(0)\n        continue\n    m = min(test25(i), test50(i), test75(i), test00(i))\n    print(m)", "t = int(input())\nfor _ in range(t):\n    n = str(input())\n    f5 = n.rfind('5')\n    f0 = n.rfind('0')\n    s0 = n[:f0].rfind('0')\n    s7 = n[:f5].rfind('7')\n    s5 = n[:f0].rfind('5')\n    s2 = n[:f5].rfind('2')\n    ans00 = len(n)\n    ans25 = len(n)\n    ans50 = len(n)\n    ans75 = len(n)\n    if f0 != -1 and s0 != -1:\n        ans00 = len(n) - f0 - 1 + f0 - s0 - 1\n    if f5 != -1 and s2 != -1:\n        ans25 = len(n) - s2 - 2\n    if f0 != -1 and s5 != -1:\n        ans50 = len(n) - s5 - 2\n    if f5 != -1 and s7 != -1:\n        ans75 = len(n) - s7 - 2\n    print(min(ans00, ans25, ans50, ans75))", "t = int(input())\nimport math\nfor i in range(t):\n    s = input()\n    s = s[::-1]\n    th1 = -1\n    th2 = -1\n    ko = s.find('0')\n    if ko != -1:\n        ko1 = s[ko + 1:].find('0') + 1\n        nam1 = s[ko + 1:].find('5') + 1\n        if ko1 != 0 and nam1 != 0:\n            th1 = min(ko1, nam1) + ko - 1\n        elif ko1 != 0:\n            th1 = ko1 + ko - 1\n        elif nam1 != 0:\n            th1 = nam1 + ko - 1\n    nam = s.find('5')\n    if nam != -1:\n        hai = s[nam + 1:].find('2') + 1\n        bay = s[nam + 1:].find('7') + 1\n        if hai != 0 and bay != 0:\n            th2 = min(hai, bay) + nam - 1\n        elif hai != 0:\n            th2 = hai + nam - 1\n        elif bay != 0:\n            th2 = bay + nam - 1\n    if th1 != -1 and th2 != -1:\n        print(min(th1, th2))\n    elif th1 != -1:\n        print(th1)\n    else:\n        print(th2)", "for s in [*open(0)][1:]:\n    a = []\n    n = i = len(s)\n    while (i := (i - 1)) and (x := s[i]) not in a:\n        a += '05' * (x == '0') + '27' * (x == '5')\n    print(n - i - 3)", "import sys\nlines = sys.stdin.readlines()\nfor num in lines[1:]:\n    num_int = int(num)\n    if num_int % 25 == 0:\n        print(0)\n        continue\n    num = list(reversed(list(num.rstrip())))\n    k = []\n    l = len(num)\n    for idx in range(l):\n        if num[idx] == '0':\n            for idx2 in range(idx + 1, l):\n                if num[idx2] in ['0', '5']:\n                    s = idx2 - 1\n                    k.append(s)\n                    break\n        elif num[idx] == '5':\n            for idx2 in range(idx + 1, l):\n                if num[idx2] in ['2', '7']:\n                    s = idx2 - 1\n                    k.append(s)\n                    break\n    print(min(k))", "def func():\n    num = 0\n    line = input()[::-1]\n    a = False\n    b = False\n    for i in range(len(line)):\n        if a and (line[i] == '0' or line[i] == '5'):\n            print(i - 1)\n            break\n        if b and (line[i] == '2' or line[i] == '7'):\n            print(i - 1)\n            break\n        if line[i] == '0':\n            a = True\n        if line[i] == '5':\n            b = True\nt = int(input())\nfor i in range(t):\n    func()", "for _ in range(int(input())):\n    n = input()\n    ind5 = n.rfind('5')\n    ind0 = n.rfind('0')\n    min_k = len(n)\n    if ind5 != -1:\n        ind25 = n.rfind('2', 0, ind5)\n        ind75 = n.rfind('7', 0, ind5)\n        if ind25 != -1:\n            min_k = min(min_k, len(n) - ind25 - 2)\n        if ind75 != -1:\n            min_k = min(min_k, len(n) - ind75 - 2)\n    if ind0 != -1:\n        ind00 = n.rfind('0', 0, ind0)\n        ind50 = n.rfind('5', 0, ind0)\n        if ind00 != -1:\n            min_k = min(min_k, len(n) - ind00 - 2)\n        if ind50 != -1:\n            min_k = min(min_k, len(n) - ind50 - 2)\n    print(min_k)", "for iteration in range(int(input())):\n    five_found = False\n    zero_found = False\n    number_reversed = input()[::-1]\n    length = len(number_reversed)\n    for index in range(length):\n        if zero_found and (number_reversed[index] == '0' or number_reversed[index] == '5'):\n            print(index - 1)\n            break\n        if number_reversed[index] == '0':\n            zero_found = True\n        if five_found and (number_reversed[index] == '2' or number_reversed[index] == '7'):\n            print(index - 1)\n            break\n        if number_reversed[index] == '5':\n            five_found = True", "t = input()\nval1 = 99\nval2 = 99\nval3 = 99\nval4 = 99\nfor i in range(int(t)):\n    num = input()\n    five = num.rfind('5')\n    two = num.rfind('2', 0, five)\n    seven = num.rfind('7', 0, five)\n    zero = num.rfind('0')\n    fiveO = num.rfind('5', 0, zero)\n    zeroO = num.rfind('0', 0, zero)\n    length = len(num)\n    val1 = 99\n    val2 = 99\n    val3 = 99\n    val4 = 99\n    if five != -1 and two != -1:\n        val1 = length - five + (five - two) - 2\n    if five != -1 and seven != -1:\n        val2 = length - five + (five - seven) - 2\n    if zero != -1 and zeroO != -1:\n        val3 = length - zero + (zero - zeroO) - 2\n    if fiveO != -1 and zero != -1:\n        val4 = length - zero + (zero - fiveO) - 2\n    print(min(val1, val2, val3, val4))", "def solve(s):\n    (zero, five) = (False, False)\n    s = s[::-1]\n    counter = 0\n    for i in s:\n        counter += 1\n        if (i == '5' or i == '0') and zero or ((i == '2' or i == '7') and five):\n            counter -= 1\n            break\n        if i == '0' and (not zero):\n            counter -= 1\n            zero = True\n            continue\n        if i == '5' and (not five):\n            counter -= 1\n            five = True\n            continue\n    if zero and five:\n        counter += 1\n    return counter\nfor a in range(int(input())):\n    print(solve(input()))", "def minchar(s):\n    a = ''\n    i = 0\n    while (x := s[(i := (i - 1))]) not in a:\n        a += '05' * (x == '0') + '27' * (x == '5')\n    print(-i - 2)\nt = int(input())\nt = t + 1\nwhile (t := (t - 1)):\n    minchar(input())", "def divisible(q):\n    last = q[-2:]\n    if last == '75' or last == '25' or last == '50' or (last == '00'):\n        return 0\n    ans = 0\n    l = len(q)\n    last = [False, False]\n    for i in range(l - 1, -1, -1):\n        if q[i] == '0' or q[i] == '5':\n            if not last[-1] and q[i] == '0':\n                last[-1] = True\n                continue\n            elif not last[0] and q[i] == '5':\n                last[0] = True\n                if last[1]:\n                    ans += l - i - 2\n                    return ans\n                continue\n        if last[0] and (q[i] == '2' or q[i] == '7'):\n            ans += l - i - 2\n            return ans\n        if last[-1] and (q[i] == '0' or q[i] == '5'):\n            ans += l - i - 2\n            return ans\n    return ans\nt = int(input())\nfor _ in range(t):\n    n = input()\n    result = divisible(n)\n    print(result)", "def f1(a):\n    t = 0\n    ob = 0\n    for i in a[::-1]:\n        if i == '5' and ob == 0:\n            ob = 1\n        elif i in ['2', '7'] and ob == 1:\n            break\n        else:\n            t += 1\n    else:\n        return 99\n    return t\n\ndef f2(a):\n    t = 0\n    ob = 0\n    for i in a[::-1]:\n        if i == '0' and ob == 0:\n            ob = 1\n        elif i in ['5', '0'] and ob == 1:\n            break\n        else:\n            t += 1\n    else:\n        return 99\n    return t\nc = int(input())\nfor times in range(c):\n    a = input()\n    t1 = f1(a)\n    t2 = f2(a)\n    print(t1 if t1 < t2 else t2)", "import sys\nn = int(input())\nes = []\nfor _ in range(n):\n    es.append(int(input()))\nfor e in es:\n    k = 0\n    s = str(e)[::-1]\n    pos_7 = -1\n    pos_2 = -1\n    pos_0 = -1\n    pos_5 = -1\n    k5 = -1\n    k0 = -1\n    for c in s:\n        if c == '5':\n            if k5 == -1 and pos_2 == -1 and (pos_7 == -1):\n                try:\n                    pos_7 = s.index('7', k + 1)\n                except:\n                    pass\n                try:\n                    pos_2 = s.index('2', k + 1)\n                except:\n                    pass\n                if pos_7 != -1 or pos_2 != -1:\n                    k5 = k\n        elif c == '0':\n            if k0 == -1 and pos_0 == -1 and (pos_5 == -1):\n                try:\n                    pos_0 = s.index('0', k + 1)\n                except:\n                    pass\n                try:\n                    pos_5 = s.index('5', k + 1)\n                except:\n                    pass\n                if pos_0 != -1 or pos_5 != -1:\n                    k0 = k\n        k += 1\n    steps = -1\n    if k0 != -1:\n        steps = k0 + min(pos_5 - k0 - 1 if pos_5 != -1 else sys.maxsize, pos_0 - k0 - 1 if pos_0 != -1 else sys.maxsize)\n    if k5 != -1:\n        steps = min(steps if steps != -1 else sys.maxsize, k5 + min(pos_2 - k5 - 1 if pos_2 != -1 else sys.maxsize, pos_7 - k5 - 1 if pos_7 != -1 else sys.maxsize))\n    print(steps if steps != -1 else 0)", "t = int(input())\nfor i in range(t):\n    number = input()\n    result = 0\n    is_five = False\n    is_zero = False\n    for digit in reversed(number):\n        if digit == '2' or digit == '7':\n            if is_five:\n                break\n        if digit == '5':\n            is_five = True\n            if is_zero:\n                break\n        if digit == '0':\n            if is_zero:\n                break\n            else:\n                is_zero = True\n        result += 1\n    result -= 1\n    print(result)", "q = int(input())\nfor _ in range(q):\n    astring = input()\n    n = len(astring)\n    asum = 0\n    adict = {}\n    for i in reversed(range(n)):\n        if astring[i] not in ['2', '5', '0', '7']:\n            continue\n        if astring[i] == '0':\n            if astring[i] in adict:\n                asum += adict[astring[i]] - i - 1\n                asum += n - adict['0'] - 1\n                break\n            else:\n                adict[astring[i]] = i\n        if astring[i] == '5':\n            if '0' in adict:\n                asum += adict['0'] - i - 1\n                asum += n - adict['0'] - 1\n                break\n            else:\n                adict[astring[i]] = i\n        if astring[i] in ['2', '7']:\n            if '5' in adict:\n                asum += adict['5'] - i - 1\n                asum += n - adict['5'] - 1\n                break\n    print(asum)", "for _ in range(int(input())):\n    num = input()\n    num = num[::-1]\n    first5 = num.find('5') if num.find('5') != -1 else 9999999\n    first0 = num.find('0') if num.find('0') != -1 else 9999999\n    for52 = num.find('2', first5 + 1)\n    for57 = num.find('7', first5 + 1)\n    for00 = num.find('0', first0 + 1)\n    for05 = num.find('5', first0 + 1)\n    ans = 99999999\n    if first5 != -1:\n        if for52 != -1:\n            ans = min(ans, for52)\n        if for57 != -1:\n            ans = min(ans, for57)\n    if first0 != -1:\n        if for00 != -1:\n            ans = min(ans, for00)\n        if for05 != -1:\n            ans = min(ans, for05)\n    print(ans - 1)", "for _ in range(int(input())):\n    cost = 35\n    number = input()[::-1]\n    first_zero = number.index('0') if '0' in number else -1\n    first_five = number.index('5') if '5' in number else -1\n    nearest_two = number[first_five:].index('2') if '2' in number[first_five:] else -1\n    nearest_seven = number[first_five:].index('7') if '7' in number[first_five:] else -1\n    nearest_zero = number[first_zero + 1:].index('0') + 1 if '0' in number[first_zero + 1:] else -1\n    nearest_five = number[first_zero:].index('5') if '5' in number[first_zero:] else -1\n    if first_zero != -1:\n        if nearest_five != -1:\n            cost = min(cost, nearest_five + first_zero - 1)\n        if nearest_zero != -1:\n            cost = min(cost, nearest_zero + first_zero - 1)\n    if first_five != -1:\n        if nearest_two != -1:\n            cost = min(cost, nearest_two + first_five - 1)\n        if nearest_seven != -1:\n            cost = min(cost, nearest_seven + first_five - 1)\n    print(cost)", "for _ in range(int(input())):\n    n = input()\n    i_5 = n.rfind('5')\n    i_0 = n.rfind('0')\n    (x1, x2) = (-1, -1)\n    if i_5 != -1:\n        x1 = max(n[:i_5].rfind('2'), n[:i_5].rfind('7'))\n    if i_0 != -1:\n        x2 = max(n[:i_0].rfind('0'), n[:i_0].rfind('5'))\n    ans = max(x1, x2)\n    print(len(n) - ans - 2)", "n = int(input())\nfor i in range(n):\n    s = input()\n    s = s[::-1]\n    ln = len(s)\n    x = [-1, -1]\n    for i in range(ln):\n        if s[i] == '0':\n            if x[0] == -1:\n                x[0] = i\n            else:\n                print(i - 1)\n                break\n        elif s[i] == '5':\n            if x[0] == -1:\n                x[1] = i\n            else:\n                print(i - 1)\n                break\n        elif s[i] == '2' or s[i] == '7':\n            if x[1] != -1:\n                print(i - 1)\n                break", "t = int(input())\nfor _ in range(t):\n    s = input()[::-1]\n    f_0 = False\n    f_5 = False\n    res = 0\n    for i in range(len(s)):\n        if s[i] == '0':\n            if f_0:\n                res = i - 1\n                break\n            else:\n                f_0 = True\n        elif s[i] == '5':\n            if f_0:\n                res = i - 1\n                break\n            else:\n                f_5 = True\n        elif s[i] in ('2', '7'):\n            if f_5:\n                res = i - 1\n                break\n    print(res)", "INF = 10000000\n\ndef check_num(n, t):\n    pos = n.rfind(t[-1])\n    if pos == -1:\n        return INF\n    ans = len(n) - pos - 1\n    n = n[:pos]\n    pos = n.rfind(t[0])\n    if pos == -1:\n        return INF\n    ans += len(n) - pos - 1\n    return ans\n\ndef solve():\n    n = input()\n    if n[-2:] in ['00', '25', '50', '75']:\n        print(0)\n        return\n    ans = check_num(n, '00')\n    ans = min(ans, check_num(n, '25'))\n    ans = min(ans, check_num(n, '50'))\n    ans = min(ans, check_num(n, '75'))\n    print(ans)\nt = int(input())\nfor _ in range(t):\n    solve()", "def solve():\n    n = int(input())\n    s = str(n)\n    i = len(s) - 1\n    ans1 = 0\n    flag = 0\n    while i >= 0:\n        if s[i] == '0':\n            break\n        ans1 += 1\n        i -= 1\n    i -= 1\n    while i >= 0:\n        if s[i] == '0' or s[i] == '5':\n            flag = 1\n            break\n        ans1 += 1\n        i -= 1\n    if flag == 0:\n        ans1 = 10 ** 9\n    i = len(s) - 1\n    ans2 = 0\n    while i >= 0:\n        if s[i] == '5':\n            break\n        ans2 += 1\n        i -= 1\n    i -= 1\n    flag = 0\n    while i >= 0:\n        if s[i] == '2' or s[i] == '7':\n            flag = 1\n            break\n        ans2 += 1\n        i -= 1\n    if flag == 0:\n        ans2 = 10 ** 9\n    print(min(ans1, ans2))\nt = int(input())\nfor i in range(t):\n    solve()", "for _ in range(int(input())):\n    n = input().strip()\n    end_zero = -1\n    end_five = -1\n    zero_count = 0\n    five_count = 0\n    for i in range(len(n) - 1, -1, -1):\n        if end_zero == -1 and n[i] == '0':\n            end_zero = 1\n        elif end_zero == 1 and (n[i] == '0' or n[i] == '5'):\n            print(zero_count)\n            break\n        else:\n            zero_count += 1\n        if end_five == -1 and n[i] == '5':\n            end_five = 1\n        elif end_five == 1 and (n[i] == '2' or n[i] == '7'):\n            print(five_count)\n            break\n        else:\n            five_count += 1", "import sys\n\ndef input():\n    return sys.stdin.readline().rstrip()\n\ndef visited(x, y):\n    if x > -1 and y > -1:\n        return 1\n    return 0\nt = int(input())\nfor _ in range(t):\n    x = input()\n    check = [-1, -1, -1, -1]\n    zero_cnt = 0\n    for idx in range(len(x) - 1, -1, -1):\n        if x[idx] == '0':\n            if not zero_cnt:\n                check[0] = idx\n                zero_cnt += 1\n            else:\n                print(len(x) - idx - 2)\n                break\n        elif x[idx] == '2':\n            check[1] = idx\n        elif x[idx] == '5':\n            check[2] = idx\n        elif x[idx] == '7':\n            check[3] = idx\n        if visited(check[2], check[3]) and check[2] > check[3]:\n            print(len(x) - idx - 2)\n            break\n        if visited(check[1], check[2]) and check[2] > check[1]:\n            print(len(x) - idx - 2)\n            break\n        if visited(check[0], check[2]) and check[0] > check[2]:\n            print(len(x) - idx - 2)\n            break", "t = int(input())\nfor i in range(t):\n    n = input()\n    s = len(n)\n    i = s - 1\n    while n[i] != '0' and n[i] != '5':\n        i -= 1\n    n = n[:i + 1]\n    i -= 1\n    ans = 10000\n    if n[-1] == '5':\n        nn = n[:]\n        while i > -1 and n[i] != '2' and (n[i] != '7'):\n            i -= 1\n        if i != -1:\n            n = n[:i + 1] + n[-1]\n            ans = s - len(n)\n        i = len(nn) - 2\n        while i > -1 and nn[i] != '0':\n            i -= 1\n        if i != -1:\n            nn = nn[:i + 1]\n            i -= 1\n            while i > -1 and nn[i] != '0' and (nn[i] != '5'):\n                i -= 1\n            if i != -1:\n                nn = nn[:i + 1] + nn[-1]\n                ans = min(ans, s - len(nn))\n    else:\n        while i > -1 and n[i] != '5' and (n[i] != '0'):\n            i -= 1\n        if i != -1:\n            n = n[:i + 1] + n[-1]\n            ans = s - len(n)\n    print(ans)", "t = int(input())\nfor w in range(t):\n    s = input()\n    ans = 99\n    si = len(s) - 1\n    count = 0\n    while si >= 0:\n        if s[si] == '0':\n            si -= 1\n            break\n        count += 1\n        si -= 1\n    while si >= 0:\n        if s[si] == '5' or s[si] == '0':\n            break\n        count += 1\n        si -= 1\n    ans = min(ans, count)\n    si = len(s) - 1\n    count = 0\n    while si >= 0:\n        if s[si] == '5':\n            si -= 1\n            break\n        count += 1\n        si -= 1\n    while si >= 0:\n        if s[si] == '2' or s[si] == '7':\n            break\n        count += 1\n        si -= 1\n    ans = min(ans, count)\n    print(ans)", "for s in range(int(input())):\n    n = input()\n    m = n[::-1]\n    ans = 1000\n    if '5' in m:\n        for i in range(m.index('5') + 1, len(m)):\n            if m[i] == '2' or m[i] == '7':\n                ans = min(ans, i - 1)\n                break\n    if '0' in m:\n        for i in range(m.index('0') + 1, len(m)):\n            if m[i] == '0' or m[i] == '5':\n                ans = min(ans, i - 1)\n                break\n    print(ans)", "t = int(input())\nfor p in range(t):\n    s = input()[::-1]\n    res = 13213123\n    flag = 1\n    p1 = s.find('0')\n    if p1 != -1:\n        p2 = s.find('5', p1 + 1)\n        if p2 != -1:\n            res = min(res, p2 - 1)\n    if flag == 1:\n        flag = 0\n    p1 = s.find('0')\n    if p1 != -1:\n        p2 = s.find('0', p1 + 1)\n        if p2 != -1:\n            res = min(res, p2 - 1)\n    p1 = s.find('5')\n    if p1 != -1:\n        p2 = s.find('7', p1 + 1)\n        if p2 != -1:\n            res = min(res, p2 - 1)\n    p1 = s.find('5')\n    if p1 != -1:\n        p2 = s.find('2', p1 + 1)\n        if p2 != -1:\n            res = min(res, p2 - 1)\n    print(res)", "for _ in range(int(input())):\n    s = input()\n    r = s[::-1]\n    a = b = c = d = len(s)\n    if '5' in r:\n        m = r.find('5')\n        n = r.find('2', m, len(s))\n        p = r.find('7', m, len(s))\n        if n != -1:\n            a = n - 1\n        if p != -1:\n            b = p - 1\n    if '0' in r:\n        m = r.find('0')\n        n = r.find('5', m, len(s))\n        p = r.find('0', m + 1, len(s))\n        if n != -1:\n            c = n - 1\n        if p != -1:\n            d = p - 1\n    print(min(a, b, c, d))", "t = int(input())\nwhile t > 0:\n    n = str(input())\n    flag1 = False\n    flag2 = False\n    count1 = 0\n    count2 = 0\n    if int(n) % 25 == 0:\n        print(0)\n    else:\n        for s in reversed(n):\n            if s == '0' and (not flag1):\n                flag1 = True\n            elif s in ('0', '5') and flag1:\n                print(count1)\n                break\n            else:\n                count1 = count1 + 1\n            if s == '5' and (not flag2):\n                flag2 = True\n            elif s in ('2', '7') and flag2:\n                print(count2)\n                break\n            else:\n                count2 = count2 + 1\n    t = t - 1", "def plase(k1, k2, s: list):\n    if k1 not in s:\n        return 1000\n    r1 = s.index(k1)\n    if r1 < len(s) - 1 and k2 in s[r1 + 1:]:\n        r2 = s[r1 + 1:].index(k2)\n    else:\n        return 1000\n    return r1 + r2\na = [str(s * 25) for s in range(1, 41)]\nt = int(input())\nfor _ in range(t):\n    n = list(input())\n    n = n[::-1]\n    d = [0] * 4\n    d[0] = plase('5', '2', n)\n    d[1] = plase('0', '5', n)\n    d[2] = plase('5', '7', n)\n    d[3] = plase('0', '0', n)\n    print(min(d))", "def div(n):\n    ans = []\n    st = str(n)[::-1]\n    z = st.find('00')\n    if z != -1:\n        ans.append(z)\n    k = [st.find('5'), float('inf')]\n    if k[0] != -1:\n        for l in range(len(st)):\n            if st[l] in ['2', '7']:\n                if l > k[0]:\n                    k[1] = min(k[1], l)\n                    break\n    z1 = k[1] - 1\n    if k[0] != -1:\n        ans.append(z1)\n    l1 = st.find('0')\n    l2 = float('inf')\n    for l in range(len(st)):\n        if st[l] in ['0', '5'] and l > l1:\n            l2 = min(l2, l)\n            break\n    z2 = l2 - 1\n    if l1 != -1:\n        ans.append(z2)\n    return min(ans)\nfor l in range(int(input())):\n    print(div(input()))", "x = int(input())\nfor i in range(x):\n    y = input()\n    e = y\n    y = y[::-1]\n    ans = -1\n    index0 = y.find('0')\n    if index0 != -1:\n        y = y[0:index0] + '1' + y[index0 + 1:]\n        index5 = y[index0:].find('5')\n        if index5 != -1:\n            index5 = index5 + index0\n        index0 = y.find('0')\n        indexi = min(index0, index5)\n        if indexi == -1:\n            index0 = index0 + index5 - indexi\n        else:\n            index0 = indexi\n    index = y.find('5')\n    if index != -1:\n        index2 = y[index:].find('2')\n        if index2 != -1:\n            index2 = index2 + index\n        index7 = y[index:].find('7')\n        if index7 != -1:\n            index7 = index7 + index\n        index = min(index2, index7)\n        if index == -1:\n            index = index2 + index7 - index\n    indexz = min(index, index0)\n    ans = indexz - 1\n    if indexz == -1:\n        ans = index + index0 - indexz - 1\n        if ans < 0:\n            ans = len(e)\n            if e.find('0') != -1:\n                ans = ans - 1\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    if n % 25 == 0:\n        print(0)\n    else:\n        lst = list(str(n))\n        lst = lst[::-1]\n        flag = 0\n        count = 0\n        for i in range(len(lst)):\n            if flag == 0:\n                if lst[i] in ['5', '0']:\n                    flag = 1\n                    temp = lst[i]\n                else:\n                    count += 1\n            elif flag == 1:\n                if temp == '5':\n                    if lst[i] in ['2', '7']:\n                        break\n                    elif lst[i] == '0':\n                        if lst[i + 1] in ['0', '5']:\n                            count += 1\n                            break\n                        elif lst[i + 1] in ['2', '7']:\n                            count += 1\n                            break\n                        else:\n                            flag = 2\n                    else:\n                        count += 1\n                elif lst[i] in ['5', '0']:\n                    break\n                else:\n                    count += 1\n            elif lst[i] in ['2', '5', '7', '0']:\n                count += 1\n                break\n            else:\n                count += 1\n        print(count)", "n = int(input())\nfor i in range(n):\n    s = input()\n    s0 = s.rfind('0')\n    count0 = -1\n    if s0 != -1:\n        count0 = len(s) - s0 - 1\n        for j in range(s0 - 1, -1, -1):\n            if s[j] == '0' or s[j] == '5':\n                break\n            count0 += 1\n    s5 = s.rfind('5')\n    count5 = -1\n    if s5 != -1:\n        count5 = len(s) - s5 - 1\n        for j in range(s5 - 1, -1, -1):\n            if s[j] == '7' or s[j] == '2':\n                break\n            count5 += 1\n    if count5 != -1 and count0 != -1:\n        print(min(count5, count0))\n    elif count5 == -1:\n        print(count0)\n    else:\n        print(count5)", "t = int(input())\nfor _ in range(t):\n    n = input()\n    if int(n) % 25 == 0:\n        print(0)\n        continue\n    ans = 0\n    while n[-1] not in ['0', '5']:\n        n = n[:-1]\n        ans += 1\n    if n == '':\n        print(ans)\n        continue\n    s = set()\n    while len(n):\n        i = len(n) - 1\n        if n[i] == '5':\n            if '0' in s:\n                ans -= 1\n                break\n            s.add(n[i])\n        elif n[i] == '0':\n            if '0' in s:\n                ans -= 1\n                break\n            s.add(n[i])\n        elif n[i] in ['7', '2']:\n            if '5' in s:\n                ans -= 1\n                break\n            s.add(n[i])\n        ans += 1\n        n = n[:-1]\n    print(ans)", "def ans():\n    n = int(input())\n    x = 0\n    y = 0\n    c = 0\n    while n > 0:\n        d = n % 10\n        if x == 1 and n % 10 in [2, 7]:\n            return c - 1\n        if y == 1 and n % 10 in [0, 5]:\n            return c - 1\n        if n % 10 == 5:\n            x = 1\n        if n % 10 == 0:\n            y = 1\n        n = n // 10\n        c += 1\nfor _ in range(int(input())):\n    print(ans())", "def main(num):\n    i = len(num) - 1\n    while i >= 0 and num[i] != '0':\n        i -= 1\n    j = i - 1\n    while j >= 0 and num[j] not in ['5', '0']:\n        j -= 1\n    end0 = len(num) - 1 - i + i - j - 1 if i >= 0 and j >= 0 else len(num)\n    i = len(num) - 1\n    while i >= 0 and num[i] != '5':\n        i -= 1\n    j = i - 1\n    while j >= 0 and num[j] not in ['2', '7']:\n        j -= 1\n    end5 = len(num) - 1 - i + i - j - 1 if i >= 0 and j >= 0 else len(num)\n    return min(end0, end5)\nfor _ in range(int(input())):\n    num = str(int(input()))\n    print(main(num))", "t = int(input())\nfor i in range(t):\n    n = input()\n    n = list(n)\n    n.reverse()\n    jzer = 20\n    jfiv = 20\n    if '0' in n:\n        jz0 = 30\n        jz5 = 30\n        inz = n.index('0')\n        nzer = n[inz + 1:]\n        if '5' in nzer:\n            jz5 = nzer.index('5')\n        if '0' in nzer:\n            jz0 = nzer.index('0')\n        jzer = inz + min(jz0, jz5)\n    if '5' in n:\n        jz2 = 30\n        jz7 = 30\n        inf = n.index('5')\n        nfiv = n[inf + 1:]\n        if '2' in nfiv:\n            jz2 = nfiv.index('2')\n        if '7' in nfiv:\n            jz7 = nfiv.index('7')\n        jfiv = inf + min(jz2, jz7)\n    print(min(jfiv, jzer))", "def test(s):\n    n = len(s)\n    s = s[::-1]\n    (start1, end1, d1) = (-1, -1, n)\n    for i in range(n):\n        if s[i] == '5':\n            start1 = i\n            break\n    if start1 != -1:\n        for i in range(start1 + 1, n):\n            if s[i] == '2' or s[i] == '7':\n                end1 = i\n                break\n    if end1 != -1:\n        d1 = end1 - 1\n    (start2, end2, d2) = (-1, -1, n)\n    for i in range(n):\n        if s[i] == '0':\n            start2 = i\n            break\n    if start2 != -1:\n        for i in range(start2 + 1, n):\n            if s[i] == '0' or s[i] == '5':\n                end2 = i\n                break\n    if end2 != -1:\n        d2 = end2 - 1\n    return min(d1, d2)\nT = int(input())\nfor i in range(T):\n    s = input()\n    ans = test(s)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = input()\n    c0 = 10 ** 19\n    c25 = 10 ** 19\n    c50 = 10 ** 19\n    c75 = 10 ** 19\n    n = n[::-1]\n    f_0 = n.find('0')\n    t_0 = n.find('0', f_0 + 1)\n    if f_0 > -1 and t_0 > -1:\n        c0 = t_0 - 1\n    f_5 = n.find('5')\n    t_2 = n.find('2', f_5 + 1)\n    if f_5 > -1 and t_2 > -1:\n        c25 = t_2 - 1\n    f_0 = n.find('0')\n    t_5 = n.find('5', f_0 + 1)\n    if f_0 > -1 and t_5 > -1:\n        c50 = t_5 - 1\n    f_5 = n.find('5')\n    t_7 = n.find('7', f_5 + 1)\n    if f_5 > -1 and t_7 > -1:\n        c75 = t_7 - 1\n    print(min(c0, c25, c50, c75))", "def Solve():\n    a = str(input())\n    a = a[::-1]\n    count = 1000000\n    count_0 = a.count('0')\n    count_5 = a.count('5')\n    count_2 = a.count('2')\n    count_7 = a.count('7')\n    if count_0 > 0:\n        if count_5 > 0:\n            if a.find('5', a.find('0') + 1) != -1:\n                count = min(count, a.index('5', a.index('0') + 1) - 1)\n        if count_0 > 1:\n            count = min(count, a.index('0', a.index('0') + 1) - 1)\n    if count_5 > 0:\n        if count_2 > 0:\n            if a.find('2', a.find('5') + 1) != -1:\n                count = min(count, a.index('2', a.index('5') + 1) - 1)\n        if count_7 > 0:\n            if a.find('7', a.find('5') + 1) != -1:\n                count = min(count, a.index('7', a.index('5') + 1) - 1)\n    if count == 1000000:\n        print(len(a) - count_0)\n    else:\n        print(count)\nx = int(input(''))\nfor i in range(x):\n    Solve()", "test = int(input())\nfor i in range(test):\n    num = int(input())\n    if num % 25 == 0:\n        print(0)\n    else:\n        b0 = -1\n        b5 = -1\n        num = str(num)\n        l = len(num)\n        j = l - 1\n        while j >= 0:\n            if b0 != -1 and (num[j] == '0' or num[j] == '5'):\n                print(l - j - 2)\n                break\n            if b5 != -1 and (num[j] == '2' or num[j] == '7'):\n                print(l - j - 2)\n                break\n            if num[j] == '0' and b0 == -1:\n                b0 = j\n            elif num[j] == '5' and b5 == -1:\n                b5 = j\n            j -= 1", "x = int(input())\nfor i in range(x):\n    y = int(input())\n    y = str(y)\n    y = y[::-1]\n    z = y.find('5')\n    if z == -1:\n        z = 99999999999\n    u = y.find('0')\n    if u == -1:\n        u = 99999999998\n    t = y.find('5', u + 1)\n    s = y.find('0', u + 1)\n    r = y.find('2', z + 1)\n    q = y.find('7', z + 1)\n    if t == -1:\n        t = 99999999997\n    if s == -1:\n        s = 99999999996\n    if r == -1:\n        r = 99999999995\n    if q == -1:\n        q = 99999999994\n    if u < z:\n        if z > s:\n            print(s - 1)\n        else:\n            print(z - 1)\n    elif q < r and q < t and (q < s):\n        print(q - 1)\n    elif r < t and r < s:\n        print(r - 1)\n    elif t < s:\n        print(t - 1)\n    else:\n        print(s - 1)", "t = int(input())\nfor i in range(t):\n    minimum = 1000\n    number = input()\n    if number.rfind('0') != -1:\n        if number.rfind('0', 0, number.rfind('0')) != -1:\n            minimum = min(minimum, len(number) - number.rfind('0', 0, number.rfind('0')) - 2)\n        if number.rfind('5', 0, number.rfind('0')) != -1:\n            minimum = min(minimum, len(number) - number.rfind('5', 0, number.rfind('0')) - 2)\n    if number.rfind('5') != -1:\n        if number.rfind('2', 0, number.rfind('5')) != -1:\n            minimum = min(minimum, len(number) - number.rfind('2', 0, number.rfind('5')) - 2)\n        if number.rfind('7', 0, number.rfind('5')) != -1:\n            minimum = min(minimum, len(number) - number.rfind('7', 0, number.rfind('5')) - 2)\n    print(minimum)", "x = int(input())\nwhile x > 0:\n    x -= 1\n    n = input()\n    n = n[::-1]\n    (a1, a2, a3, a4) = (0, 0, 0, 0)\n    if n.count('5') > 0:\n        l = n.split('5', 1)\n        t = len(l[0])\n        if l[1].count('2') > 0:\n            l_ = l[1].split('2', 1)\n            a1 = t + len(l_[0])\n        else:\n            a1 = len(n) + 1\n        if l[1].count('7') > 0:\n            l_ = l[1].split('7', 1)\n            a2 = t + len(l_[0])\n        else:\n            a2 = len(n) + 1\n    else:\n        (a1, a2) = (len(n) + 1, len(n) + 1)\n    if n.count('0') > 0:\n        l = n.split('0', 1)\n        t = len(l[0])\n        if l[1].count('5') > 0:\n            l_ = l[1].split('5', 1)\n            a3 = t + len(l_[0])\n        else:\n            a3 = len(n) + 1\n        if l[1].count('0') > 0:\n            l_ = l[1].split('0', 1)\n            if len(l_[1]) > 0:\n                a4 = t + len(l_[0])\n            else:\n                a4 = len(n) + 1\n        else:\n            a4 = len(n) + 1\n    else:\n        (a3, a4) = (len(n) + 1, len(n) + 1)\n    print(min([a1, a2, a3, a4]))", "from sys import stdin\n\ndef read_input():\n    n = stdin.readline().rstrip()\n    return (n,)\n\ndef solve(n):\n    answer = 99\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] == '0':\n            for j in range(i - 1, -1, -1):\n                if n[j] == '0' or n[j] == '5':\n                    answer = min(answer, i - j - 1 + (len(n) - i - 1))\n        elif n[i] == '5':\n            for j in range(i - 1, -1, -1):\n                if n[j] == '2' or n[j] == '7':\n                    answer = min(answer, i - j - 1 + (len(n) - i - 1))\n    return answer\n\ndef main():\n    t = int(stdin.readline())\n    for _ in range(t):\n        input = read_input()\n        answer = solve(*input)\n        print(answer)\nmain()"]