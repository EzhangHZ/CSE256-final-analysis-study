["import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nt = inp()\nfor _ in range(t):\n    (a, b, c, x, y) = inlt()\n    x -= a\n    y -= b\n    if x > 0 and y > 0:\n        c = c - (x + y)\n    if x > 0 and y <= 0:\n        c = c - x\n    if x <= 0 and y > 0:\n        c = c - y\n    if c >= 0:\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (a, b, c, x, y) = map(int, input().split())\n    a -= x\n    b -= y\n    if c + a >= 0 and c + b >= 0 and (c + a + b >= 0):\n        print('YES')\n        continue\n    print('NO')", "import sys\ncurr = 0\nfor line in sys.stdin:\n    if curr == 0:\n        curr += 1\n        continue\n    numbers = [int(x) for x in line.strip().split()]\n    if max(numbers[-2] - numbers[0], 0) + max(numbers[-1] - numbers[1], 0) > numbers[2]:\n        print('NO')\n    else:\n        print('YES')", "import sys\nT = int(sys.stdin.readline().strip())\nfor t in range(T):\n    (a, b, c, x, y) = map(int, sys.stdin.readline().strip().split())\n    if a + c >= x and b + c >= y and (a + b + c >= x + y):\n        sys.stdout.write('YES\\n')\n    else:\n        sys.stdout.write('NO\\n')", "import sys\ninput = lambda : sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    (a, b, c, x, y) = map(int, input().split())\n    if x <= a:\n        x = 0\n    else:\n        x = x - a\n    if y <= b:\n        y = 0\n    else:\n        y = y - b\n    print('YES' if x + y <= c else 'NO')", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_list_string():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\n\ndef get_print_int(x):\n    sys.stdout.write(str(x) + '\\n')\n\ndef get_print(x):\n    sys.stdout.write(x + '\\n')\n\ndef get_print_int_same(x):\n    sys.stdout.write(str(x) + ' ')\n\ndef get_print_same(x):\n    sys.stdout.write(x + ' ')\n\ndef solve():\n    for _ in range(get_int()):\n        (a, b, c, x, y) = get_ints()\n        x = max(0, x - a)\n        y = max(0, y - b)\n        if x + y <= c:\n            get_print('YES')\n        else:\n            get_print('NO')\nsolve()", "for f in [*open(0)][1:]:\n    (p, q, r, x, y) = map(int, f.split())\n    print('YNEOS'[r < max(0, x - p) + max(0, y - q)::2])", "def ans(a, b, c, x, y):\n    if a >= x and b >= y:\n        return 'YES'\n    if c + a < x or c + b < y:\n        return 'NO'\n    if x > a and y > b:\n        if a + b + c < x + y:\n            return 'NO'\n    return 'YES'\nn = int(input(''))\nl = []\nfor i in range(n):\n    (a, b, c, x, y) = map(int, input().split(sep=' '))\n    l.append(ans(a, b, c, x, y))\nfor i in l:\n    print(i)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor i in range(t):\n    (a, b, c, x, y) = map(int, input().split())\n    if a <= x:\n        x = x - a\n    else:\n        x = 0\n    if b <= y:\n        y = y - b\n    else:\n        y = 0\n    if x + y <= c:\n        print('YES')\n    else:\n        print('NO')", "x = input()\noutput = ''\nfor i in range(int(x)):\n    string = input()\n    vals = string.split()\n    univ_food = int(vals[2])\n    if int(vals[0]) < int(vals[3]):\n        if int(vals[0]) + univ_food < int(vals[3]):\n            output += 'NO\\n'\n            continue\n        else:\n            univ_food = univ_food - (int(vals[3]) - int(vals[0]))\n    if int(vals[1]) < int(vals[4]):\n        if int(vals[1]) + univ_food < int(vals[4]):\n            output += 'NO\\n'\n            continue\n    output += 'YES\\n'\nprint(output)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (a, b, c, x, y) = map(int, input().split())\n    if x + y <= a + b + c:\n        if x - a <= 0 and y - b <= 0:\n            print('YES')\n        elif x - a <= 0 and y - b - c <= 0:\n            print('YES')\n        elif y - b <= 0 and x - a - c <= 0:\n            print('YES')\n        elif x - a + y - b <= c and x - a >= 0 and (y - b >= 0):\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "res = ''\nfor i in range(int(input())):\n    (a, b, c, x, y) = map(int, input().split())\n    d = x - a\n    ca = y - b\n    if d < 0:\n        d = 0\n    if ca < 0:\n        ca = 0\n    if ca + d <= c:\n        res = res + 'YES \\n'\n    else:\n        res = res + 'NO \\n'\nprint(res)", "n = int(input())\nA = []\nfor i in range(n):\n    A += [list(map(int, input().split()))]\nfor item in A:\n    (a, b, c, x, y) = (item[0], item[1], item[2], item[3], item[4])\n    if x <= a and y <= b:\n        print('YES')\n    elif x > a and y <= b and (x <= a + c):\n        print('YES')\n    elif y > b and x <= a and (y <= b + c):\n        print('YES')\n    elif x > a and y > b and (c >= x - a + y - b):\n        print('YES')\n    else:\n        print('NO')", "from bisect import bisect_left, bisect_right\nfrom sys import stdin, setrecursionlimit\nfrom itertools import count, accumulate\nfrom collections import defaultdict, deque, Counter\nfrom functools import reduce, lru_cache\nfrom operator import xor, add\nlines = stdin.readlines()\nlines.reverse()\nsetrecursionlimit(10 ** 8)\n\ndef input():\n    return lines.pop().strip('\\n')\nt = int(input())\nwhile t:\n    (a, b, c, x, y) = map(int, input().split())\n    if x + y <= a + b + c:\n        if x <= a + c and y <= b + c:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')\n    t -= 1", "answer = []\nfor i in range(0, int(input())):\n    (a, b, c, x, y) = [int(i) for i in input().split()]\n    dog = a - x\n    cat = b - y\n    if dog >= 0 and cat >= 0:\n        answer.append('YES')\n    else:\n        if cat < 0:\n            c += cat\n        if dog < 0:\n            c += dog\n        if c >= 0:\n            answer.append('YES')\n        else:\n            answer.append('NO')\nfor i in answer:\n    print(i)", "t = int(input())\nans = []\nfor ti in range(t):\n    (a, b, c, x, y) = map(int, input().split())\n    zx = a - x\n    zy = b - y\n    zc = c\n    if zx < 0:\n        zc = zc - abs(zx)\n    if zy < 0:\n        zc = zc - abs(zy)\n    if zx >= 0 and zy >= 0:\n        ans.append('YES')\n    elif zc >= 0:\n        ans.append('YES')\n    else:\n        ans.append('NO')\nfor i in range(len(ans)):\n    print(ans[i])", "for n in [*open(0)][1:]:\n    (a, b, c, x, y) = map(int, n.split())\n    print('YNEOS'[max(x - a, 0) + max(y - b, 0) > c::2])", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (a, b, c, x, y) = map(int, input().split())\n    if x > a + (c - min(max(y - b, 0), c)) or y > b + (c - min(max(x - a, 0), c)):\n        print('NO')\n    else:\n        print('YES')", "for s in [*open(0)][1:]:\n    (a, b, c, x, y) = map(int, s.split())\n    print('YNEOS'[c < max(0, x - a) + max(0, y - b)::2])", "import sys\ninput = lambda : sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    (a, b, c, x, y) = map(int, input().split())\n    a -= x\n    b -= y\n    if c + min(a, b) >= 0 and c + min(a, b) + max(a, b) >= 0:\n        print('YES')\n    else:\n        print('NO')", "for s in [*open(0)][1:]:\n    (a, b, c, x, y) = map(int, s.strip().split())\n    x -= a\n    y -= b\n    x = 0 if x < 0 else x\n    y = 0 if y < 0 else y\n    print(['YES', 'NO'][c < x + y])", "for s in [*open(0)][1:]:\n    (a, b, c, x, y) = map(int, s.split())\n    print('YNEOS'[c < max(0, x - a) + max(0, y - b)::2])", "for s in [*open(0)][1:]:\n    (a, b, c, x, y) = map(int, s.split())\n    print('YNEOS'[c < max(0, x - a) + max(0, y - b)::2])", "for s in [*open(0)][1:]:\n    (a, b, c, x, y) = map(int, s.split())\n    print('YNEOS'[c < max(0, x - a) + max(0, y - b)::2])", "for s in [*open(0)][1:]:\n    (a, b, c, x, y) = map(int, s.split())\n    print('YNEOS'[c < max(0, x - a) + max(0, y - b)::2])", "for n in [*open(0)][1:]:\n    (e, f, g, a, b) = map(int, n.split())\n    print('YNEOS'[g < max(0, a - e) + max(0, b - f)::2])", "for x in [*open(0)][1:]:\n    (a, b, c, d, e) = map(int, x.split())\n    print('YNEOS'[c < max(0, d - a) + max(0, e - b)::2])", "for s in [*open(0)][1:]:\n    (a, b, c, x, y) = map(int, s.split())\n    print('YNEOS'[c < max(0, x - a) + max(0, y - b)::2])", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (a, b, c, x, y) = map(int, input().split())\n    if a + c >= x and b + c >= y and (a + b + c >= x + y):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nl = []\nfor _ in range(t):\n    l += [list(map(int, input().split()))]\nfor i in l:\n    (a, b, c, x, y) = i\n    if a >= x and b + c >= y or (a <= x <= a + c and b + c + a - x >= y):\n        print('YES')\n    else:\n        print('NO')", "import sys\nn = int(input())\nfor i in range(n):\n    (a, b, c, x, y) = map(int, sys.stdin.readline().split())\n    if c >= max(0, x - a) + max(0, y - b):\n        print('YES')\n    else:\n        print('NO')", "for s in [*open(0)][1:]:\n    (a, b, c, x, y) = map(int, s.split())\n    print('YNEOS'[c < max(0, x - a) + max(0, y - b)::2])", "t = int(input())\nans = []\nfor j in range(t):\n    (a, b, c, x, y) = map(int, input().split())\n    if a >= x:\n        pass\n    elif a + c >= x:\n        c -= x - a\n    else:\n        ans.append('NO')\n        continue\n    if b >= y:\n        ans.append('YES')\n    elif b + c >= y:\n        ans.append('YES')\n    else:\n        ans.append('NO')\nfor i in ans:\n    print(i)", "import sys\ninput = sys.stdin.readline\noutput = sys.stdout.write\n\ndef main():\n    tests = int(input())\n    for i in range(tests):\n        (a, b, c, x, y) = map(int, input().split())\n        state = False\n        dog_needs = x - a\n        cat_needs = y - b\n        if dog_needs <= 0 and cat_needs <= 0:\n            state = True\n        else:\n            if dog_needs < 0:\n                dog_needs = 0\n            if cat_needs < 0:\n                cat_needs = 0\n            needs = dog_needs + cat_needs\n            if c >= needs:\n                state = True\n        if state:\n            output('YES')\n        else:\n            output('NO')\n        output('\\n')\nmain()", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (a, b, c, x, y) = map(int, input().split())\n    dog = x - a if x - a >= 0 else 0\n    cat = y - b if y - b >= 0 else 0\n    if dog + cat <= c:\n        return 'YES'\n    return 'NO'\nfor _ in range(int(input())):\n    print(solve())", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor i in range(t):\n    (a, b, c, x, y) = map(int, input().split())\n    if x >= a:\n        x = x - a\n    else:\n        x = 0\n    if y >= b:\n        y = y - b\n    else:\n        y = 0\n    sum = x + y\n    if sum > c:\n        print('NO')\n    else:\n        print('YES')", "for s in [*open(0)][1:]:\n    (a, b, c, x, y) = map(int, s.split())\n    print('YNEOS'[c < max(0, x - a) + max(0, y - b)::2])", "import sys\nimport math\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nt = inp()\nfor i in range(0, t):\n    (a, b, c, x, y) = inlt()\n    diffA = x - a\n    if diffA < 0:\n        diffA = 0\n    diffB = y - b\n    if diffB < 0:\n        diffB = 0\n    sum = diffA + diffB\n    if sum <= c:\n        print('YES')\n    else:\n        print('NO')", "s = int(input())\nd = []\nfor i in range(s):\n    (z, x, c, v, b) = list(map(int, input().split()))\n    v -= z\n    b -= x\n    if b > c or v > c:\n        d.append(0)\n    elif c >= v + b:\n        d.append(1)\n    else:\n        d.append(0)\nfor i in range(s):\n    if d[i] == 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\narr = []\nfor i in range(t):\n    (a, b, c, x, y) = map(int, input().split())\n    if a + b + c >= x + y:\n        if a + c >= x and b + c >= y:\n            arr.append('YES')\n        else:\n            arr.append('NO')\n    else:\n        arr.append('NO')\nfor i in arr:\n    print(i)", "n = int(input())\nl = []\nfor i in range(n):\n    (a, b, c, x, y) = list(map(int, input().rstrip().split()))\n    if x <= a + c:\n        if x - a >= 0:\n            if y <= b + (c - (x - a)):\n                l.append('YES')\n            else:\n                l.append('NO')\n        elif y <= b + c:\n            l.append('YES')\n        else:\n            l.append('NO')\n    else:\n        l.append('NO')\nfor i in range(len(l)):\n    print(l[i])", "import sys\nT: int = int(sys.stdin.readline().strip())\nfor _ in range(T):\n    (a, b, c, x, y) = map(int, sys.stdin.readline().strip().split())\n    pd = a - x\n    pc = b - y\n    req = 0\n    if pd < 0:\n        req = req + pd\n    if pc < 0:\n        req = req + pc\n    if req < 0:\n        req = abs(req)\n    if c >= req:\n        sys.stdout.write('YES\\n')\n    else:\n        sys.stdout.write('NO\\n')", "import sys\nLI = lambda : list(map(int, sys.stdin.readline().split()))\nMI = lambda : map(int, sys.stdin.readline().split())\nSI = lambda : sys.stdin.readline().strip('\\n')\nII = lambda : int(sys.stdin.readline())\nn = II()\nfor x in range(n):\n    split = LI()\n    a = split[0]\n    b = split[1]\n    c = split[2]\n    x = split[3]\n    y = split[4]\n    x -= a\n    y -= b\n    if max(x, 0) + max(y, 0) > c:\n        print('NO')\n    else:\n        print('YES')", "import sys\nsys.stdin.readline()\nfor line in sys.stdin:\n    line_list = line.split(' ')\n    universal = int(line_list[2])\n    dog_needed = int(line_list[3]) - int(line_list[0])\n    if dog_needed > 0:\n        universal -= dog_needed\n    cat_needed = int(line_list[4]) - int(line_list[1])\n    if cat_needed > 0:\n        universal -= cat_needed\n    if universal >= 0:\n        print('YES')\n    else:\n        print('NO')", "x = int(input())\nend = []\nfor i in range(x):\n    l = input().split()\n    l1 = []\n    for i in l:\n        l1.append(int(i))\n    A = l1[0] + l1[2] - l1[3]\n    if l1[2] >= A:\n        B = l1[1] + A - l1[4]\n    elif A > l1[2] > 0:\n        B = l1[1] + l1[2] - l1[4]\n    elif l1[2] == 0:\n        B = l1[1] - l1[4]\n    if A >= 0 and B >= 0:\n        end.append('YES')\n    else:\n        end.append('NO')\nfor i in end:\n    print(i)", "import sys\nfirst = True\nfor line in sys.stdin:\n    if first:\n        first = False\n        continue\n    if line:\n        arr = [int(x) for x in line.split()]\n        dogFood = arr[0]\n        catFood = arr[1]\n        food = arr[2]\n        d = arr[3]\n        c = arr[4]\n        if d > dogFood:\n            if d - dogFood > food:\n                print('NO')\n                continue\n            else:\n                food -= d - dogFood\n        if c > catFood:\n            if c - catFood > food:\n                print('NO')\n                continue\n        print('YES')", "n = int(input())\narr = []\nfor _ in range(n):\n    arr.append(list(map(int, input().split())))\nfor i in range(len(arr)):\n    a = arr[i][0]\n    b = arr[i][1]\n    c = arr[i][2]\n    x = arr[i][3]\n    y = arr[i][4]\n    dog_remain = x - a\n    if dog_remain < 0:\n        dog_remain = 0\n    cat_remain = y - b\n    if cat_remain < 0:\n        cat_remain = 0\n    answer = dog_remain + cat_remain - c\n    if answer <= 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nl = []\nfor i in range(t):\n    l1 = list(map(int, input().split()))\n    l.append(l1)\nfor j in l:\n    if j[0] < j[3]:\n        x = j[3] - j[0]\n    else:\n        x = 0\n    if j[4] > j[1]:\n        y = j[4] - j[1]\n    else:\n        y = 0\n    if x + y <= j[2]:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\noutput = []\nfor i in range(t):\n    line = input()\n    data = line.split(' ')\n    a = int(data[0])\n    b = int(data[1])\n    c = int(data[2])\n    x = int(data[3])\n    y = int(data[4])\n    remain_dog = 0\n    remain_cat = 0\n    if a >= x:\n        remain_dog = 0\n    else:\n        remain_dog = x - a\n    if b >= y:\n        remain_cat = 0\n    else:\n        remain_cat = y - b\n    if c >= remain_dog + remain_cat:\n        output.append('YES')\n    else:\n        output.append('NO')\nfor item in output:\n    print(item)", "def is_food_enough(a, b, c, x, y):\n    return max(x - a, 0) + max(y - b, 0) <= c\n    if answer:\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nanswers = []\nfor i in range(t):\n    (a, b, c, x, y) = map(int, input().split(' '))\n    answers.append(is_food_enough(a, b, c, x, y))\nfor answer in answers:\n    if answer:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nans = []\nfor i in range(t):\n    (a, b, c, x, y) = tuple(map(int, input().split()))\n    x -= a\n    y -= b\n    left = 0\n    if x > 0 and y > 0:\n        left = x + y\n    elif x < 0 and y < 0:\n        left = 0\n    else:\n        left = max(x, y)\n    if c - left >= 0:\n        ans.append('YES')\n    else:\n        ans.append('NO')\nfor case in tuple(ans):\n    print(case)", "output = list()\nfor i in range(int(input())):\n    (a, b, c, x, y) = [int(k) for k in input().split()]\n    if max(0, x - a) + max(0, y - b) <= c:\n        output.append('YES')\n        continue\n    output.append('NO')\nfor i in range(len(output)):\n    print(output[i])", "def solve(data):\n    (dog_food, cat_food, universal_food, dogs, cats) = data\n    if dogs > dog_food:\n        extra = dogs - dog_food\n        if extra > universal_food:\n            return 'NO'\n        else:\n            universal_food -= extra\n    if cats > cat_food:\n        extra = cats - cat_food\n        if extra > universal_food:\n            return 'NO'\n        else:\n            universal_food -= extra\n    return 'YES'\ntest_cases = int(input(''))\ndata = []\nfor x in range(test_cases):\n    data.append([int(x) for x in input('').split()])\nfor x in data:\n    print(solve(x))", "for s in [*open(0)][1:]:\n    (a, b, c, x, y) = map(int, s.split())\n    print('YNEOS'[c < max(0, x - a) + max(0, y - b)::2])", "t = int(input())\nrez = []\nfor i in range(t):\n    test = [int(x) for x in input().split()]\n    y = test.pop()\n    x = test.pop()\n    x = x - test[0]\n    y = y - test[1]\n    if x < 0:\n        x = 0\n    if y < 0:\n        y = 0\n    if x + y - test[2] <= 0:\n        rez.append('YES')\n    else:\n        rez.append('NO')\nfor i in rez:\n    print(i)", "test_count = int(input())\ntests = []\nfor i in range(test_count):\n    test = input().split()\n    tests.append((int(test[0]), int(test[1]), int(test[2]), int(test[3]), int(test[4])))\nfor test in tests:\n    dog_rest = max(0, test[3] - test[0])\n    cat_rest = max(0, test[4] - test[1])\n    if cat_rest + dog_rest > test[2]:\n        print('NO')\n    else:\n        print('YES')", "def treasure():\n    (a, b, c, x, y) = map(int, input().split())\n    if max(0, x - a) + max(0, y - b) <= c:\n        return 'YES'\n    else:\n        return 'NO'\nt = int(input())\nresult = []\nfor _ in range(t):\n    result.append(treasure())\nprint(*result, sep='\\n')", "def func(a, b, c, x, y):\n    z = x + y - a - b\n    if a >= x and b >= y:\n        output = 'YES'\n    elif a <= x and b >= y:\n        if a + c >= x:\n            output = 'YES'\n        else:\n            output = 'NO'\n    elif a >= x and b <= y:\n        if b + c >= y:\n            output = 'YES'\n        else:\n            output = 'NO'\n    elif c >= z:\n        output = 'YES'\n    else:\n        output = 'NO'\n    return output\nt = int(input())\ni = 0\nk = []\nwhile t > 0:\n    (a, b, c, x, y) = list(map(int, input().split()))\n    k.append(func(a, b, c, x, y))\n    t = t - 1\nfor i in range(len(k)):\n    print(k[i])", "t = int(input())\nres = []\nfor i in range(t):\n    s = input().split()\n    a = int(s[0])\n    b = int(s[1])\n    c = int(s[2])\n    x = int(s[3])\n    y = int(s[4])\n    if x - a <= c and y - b <= c and (x - a + y - b <= c):\n        res.append('YES')\n    else:\n        res.append('NO')\nfor i in res:\n    print(i)", "n = int(input())\nres = []\nfor i in range(n):\n    l = [int(x) for x in input().split()]\n    a = l[0]\n    b = l[1]\n    c = l[2]\n    x = l[3]\n    y = l[4]\n    if x >= a:\n        x = x - a\n    else:\n        x = 0\n    if y >= b:\n        y = y - b\n    else:\n        y = 0\n    if c >= x + y:\n        res.append('YES')\n    else:\n        res.append('NO')\nfor output in res:\n    print(output)", "def foodPossible(arr):\n    (a, b, c, x, y) = (arr[0], arr[1], arr[2], arr[3], arr[4])\n    dogs = False\n    cats = False\n    if a >= x and b >= y:\n        dogs = True\n        cats = True\n    elif a >= x and b < y:\n        if b + c >= y:\n            dogs = True\n            cats = True\n    elif b >= y and a < x:\n        if a + c >= x:\n            dogs = True\n            cats = True\n    else:\n        (x2, y2) = (x - a, y - b)\n        if x2 + y2 <= c:\n            dogs = True\n            cats = True\n    if dogs and cats:\n        return 'YES'\n    else:\n        return 'NO'\nn = int(input())\nres = []\nif n > 0:\n    while n > 0:\n        a_string = input()\n        a_list = a_string.split()\n        map_objects = map(int, a_list)\n        arr = list(map_objects)\n        res.append(foodPossible(arr))\n        n -= 1\nfor r in res:\n    print(r)", "import math\nimport sys\nimport itertools\nimport fractions\nwtf = sys.stdin.read()\nwtf = wtf.strip().split('\\n')\nt = int(wtf[0])\nfor s in wtf[1:]:\n    (a, b, c, x, y) = map(int, s.split())\n    x -= a\n    y -= b\n    if x < 0:\n        x = 0\n    if y < 0:\n        y = 0\n    print('YES' if x + y <= c else 'NO')", "import sys\ninput = sys.stdin.readline\nT = int(input())\nfor t in range(T):\n    (a, b, c, x, y) = map(int, input().strip().split())\n    remain_x = max(x - a, 0)\n    remain_y = max(y - b, 0)\n    if remain_x + remain_y > c:\n        print('NO')\n    else:\n        print('YES')", "import math as m\ni = input()\ninp = []\nfor a in range(0, int(i)):\n    inp += [input()]\nfor s in inp:\n    arr = [int(x) for x in s.split()]\n    c = arr[2]\n    c -= max(0, arr[3] - arr[0]) + max(0, arr[4] - arr[1])\n    print(['NO', 'YES'][c >= 0])", "def solution(a, b, c, x, y):\n    x_rem = 0 if x <= a else x - a\n    y_rem = 0 if y <= b else y - b\n    if c >= x_rem + y_rem:\n        return 'YES'\n    return 'NO'\nT = int(input())\nresults = []\nfor n in range(T):\n    (a, b, c, x, y) = list(map(int, input().split(' ')))\n    results.append(solution(a, b, c, x, y))\nfor r in results:\n    print(r)", "n = int(input())\nrez = []\nfor i in range(n):\n    test = [int(x) for x in input().split()]\n    y = test.pop()\n    x = test.pop()\n    x -= test[0]\n    y -= test[1]\n    if x < 0:\n        x = 0\n    if y < 0:\n        y = 0\n    if x + y - test[2] <= 0:\n        rez.append('YES')\n    else:\n        rez.append('NO')\nfor t in rez:\n    print(t)", "t = int(input())\n\ndef foo(l: list):\n    if l[0] >= l[3] and l[1] >= l[4]:\n        print('YES')\n        return\n    if l[0] < l[3] and l[1] < l[4]:\n        l[3] -= l[0]\n        l[0] = 0\n        l[4] -= l[1]\n        l[1] = 0\n        if l[2] >= l[3] + l[4]:\n            print('YES')\n            return\n    if l[3] <= l[0] and l[4] <= l[1] + l[2] or (l[4] <= l[1] and l[3] <= l[0] + l[2]):\n        print('YES')\n        return\n    print('NO')\nl = []\nfor i in range(t):\n    l.append([int(x) for x in input().split(' ')])\nfor j in range(t):\n    foo(l[j])", "import sys\ninput = sys.stdin.readline\nfrom math import ceil, floor, gcd\n\ndef inp():\n    return int(input())\n\ndef lis():\n    return list(map(int, input().split()))\n\ndef ma():\n    return map(int, input().split())\n\ndef st():\n    return input().rstrip('\\n')\n\ndef isPrime(n):\n    if n == 1:\n        return 0\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            return 0\n    return 1\nt = inp()\nfor _ in range(t):\n    (a, b, c, x, y) = ma()\n    if a < x:\n        c -= x - a\n    if b < y:\n        c -= y - b\n    if c < 0:\n        print('NO')\n    else:\n        print('YES')", "n = int(input())\nfor i in range(n):\n    (a, b, c, x, y) = map(int, input().split())\n    if a + c - x >= 0 and a + c + b - x - y >= 0 and (b + c - y >= 0):\n        print('YES')\n    else:\n        print('NO')", "import math\nfor i in range(int(input())):\n    (a, b, c, x, y) = map(int, input().split())\n    reqD = min(0, a - x)\n    reqC = min(0, b - y)\n    if c + reqD + reqC >= 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (a, b, c, x, y) = map(int, input().split())\n    if a >= x and b >= y:\n        print('YES')\n    elif a + c >= x and b >= y:\n        print('YES')\n    elif a >= x and b + c >= y:\n        print('YES')\n    elif abs(x - a) + abs(y - b) <= c:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (a, b, c, x, y) = list(map(int, input().split()))\n    flag = True\n    if x > a:\n        if x - a > c:\n            flag = False\n        else:\n            c -= x - a\n    if y > b:\n        if y - b > c:\n            flag = False\n    if flag == True:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (a, b, c, x, y) = map(int, input().split())\n    if a + b + c >= x + y and a + c >= x and (b + c >= y):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (a, b, c, x, y) = map(int, input().split())\n    if a + b + c >= x + y and a + c >= x and (b + c >= y):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (a, b, c, x, y) = map(int, input().split())\n    x = x - a if x > a else 0\n    y = y - b if y > b else 0\n    print('YES' if x + y <= c else 'NO')", "def input_list_ints():\n    input_data = []\n    number_cases = int(input())\n    for i in range(number_cases):\n        temp = input()\n        temp2 = [int(x) for x in temp.split()]\n        input_data.append(temp2)\n    return input_data\ndata = input_list_ints()\nfor test in data:\n    (a, b, c, x, y) = test\n    animals_to_feed = max(x - a, 0) + max(y - b, 0) - c\n    if animals_to_feed > 0:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    (a, b, c, x, y) = map(int, input().split())\n    a = a - x\n    if a < 0:\n        c += a\n    b = b - y\n    if b < 0:\n        c += b\n    if c > -1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (a, b, c, d, e) = map(int, input().split())\n    t = d - a\n    if t <= 0:\n        t = 0\n    y = e - b\n    if y <= 0:\n        y = 0\n    if c >= t + y:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (a, b, c, x, y) = map(int, input().split(' '))\n    x = x - a\n    y = y - b\n    l = x\n    if x > 0:\n        x = x - c\n        c = c - l\n    if y > 0 and c > 0:\n        y = y - c\n    if y <= 0 and x <= 0:\n        print('YES')\n    else:\n        print('NO')", "test_num = int(input())\nfor _ in range(test_num):\n    (a, b, c, x, y) = map(int, input().split())\n    if x < a:\n        x = 0\n    else:\n        x = x - a\n    if y < b:\n        y = 0\n    else:\n        y = y - b\n    if x + y - c > 0:\n        print('NO')\n    else:\n        print('YES')", "n = int(input())\nfor i in range(n):\n    (a, b, c, x, y) = [int(i) for i in input().split()][:5]\n    if a - x >= 0:\n        if b - y >= 0:\n            print('YES')\n        elif b + c - y >= 0:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        k = x - a\n        if c - k >= 0:\n            m = c - k\n            if b - y >= 0:\n                print('YES')\n            elif b + m - y >= 0:\n                print('YES')\n            else:\n                print('NO')\n        else:\n            print('NO')", "t = int(input())\nfor _ in range(t):\n    (a, b, c, x, y) = map(int, input().split())\n    if a >= x and b >= y:\n        print('YES')\n        continue\n    else:\n        d_food = a - x\n        cat_food = b - y\n        if d_food < 0:\n            c += d_food\n        if cat_food < 0:\n            c += cat_food\n        if c < 0:\n            print('NO')\n        else:\n            print('YES')", "for _ in range(int(input())):\n    (a, b, c, x, y) = map(int, input().split())\n    if a <= x:\n        x -= a\n    else:\n        x = 0\n    if b <= y:\n        y -= b\n    else:\n        y = 0\n    r = x + y\n    if c >= r:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (a, b, c, x, y) = map(int, input().split())\n    if a > x and b > y:\n        print('YES')\n    elif a + c < x or b + c < y:\n        print('NO')\n    else:\n        temp1 = x - a\n        temp2 = y - b\n        if temp1 + temp2 > c:\n            print('NO')\n        else:\n            print('YES')", "for _ in range(int(input())):\n    (a, b, c, x, y) = map(int, input().split())\n    temp1 = 0\n    temp2 = 0\n    if a < x:\n        temp1 = x - a\n    if b < y:\n        temp2 = y - b\n    if temp1 + temp2 <= c:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (a, b, c, x, y) = map(int, input().split())\n    if x <= a and y <= b:\n        print('YES')\n    elif x > a:\n        c = c - (x - a)\n        if c < 0:\n            print('NO')\n        elif c + b >= y:\n            print('YES')\n        else:\n            print('NO')\n    elif y > b:\n        c = c - (y - b)\n        if c < 0:\n            print('NO')\n        elif c + a >= x:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nfor i in range(t):\n    (a, b, c, x, y) = map(int, input().split())\n    if a >= x:\n        x = 0\n    else:\n        x = x - a\n    if b >= y:\n        y = 0\n    else:\n        y = y - b\n    if c >= x + y:\n        print('YES')\n    else:\n        print('NO')", "def buy_or_not(dog_food: int, cat_food: int, both_food: int, x_dog: int, y_cat: int):\n    if x_dog <= dog_food and y_cat <= cat_food:\n        return 'YES'\n    elif x_dog <= dog_food:\n        if y_cat <= cat_food + both_food:\n            return 'YES'\n        else:\n            return 'NO'\n    elif y_cat <= cat_food:\n        if x_dog <= dog_food + both_food:\n            return 'YES'\n        else:\n            return 'NO'\n    elif x_dog - dog_food + (y_cat - cat_food) <= both_food:\n        return 'YES'\n    else:\n        return 'NO'\n\ndef main():\n    t = int(input())\n    for t in range(t):\n        arr = list(map(int, input().split()))[:5]\n        (a, b, c, x, y) = (arr[0], arr[1], arr[2], arr[3], arr[4])\n        print(buy_or_not(a, b, c, x, y))\nmain()", "import math\n\ndef test():\n    (a, b, c, x, y) = map(int, input().split())\n    eda_sob = a - x\n    eda_kot = b - y\n    dolg = 0\n    if eda_kot < 0:\n        dolg += eda_kot\n    if eda_sob < 0:\n        dolg += eda_sob\n    if abs(dolg) > c:\n        print('NO')\n    else:\n        print('YES')\nt = int(input())\nfor i in range(t):\n    test()"]