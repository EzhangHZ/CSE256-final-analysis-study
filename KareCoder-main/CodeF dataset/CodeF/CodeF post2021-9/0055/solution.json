["import sys\nlinesPerTest = 1\ntestArguments = []\ni = 0\ntotalLines = 1\nwhile i <= totalLines:\n    line = sys.stdin.readline().rstrip('\\n')\n    if i == 0:\n        totalLines = linesPerTest * int(line)\n    else:\n        testArguments.append(line)\n    i += 1\ntestCases = []\nfor j in range(0, len(testArguments), linesPerTest):\n    testCases.append(testArguments[j:j + linesPerTest])\n\ndef f(testArguments):\n    word = testArguments[0]\n    days = 0\n    memory = set()\n    counter = 0\n    for letter in word:\n        if letter not in memory:\n            if counter < 3:\n                memory.add(letter)\n                counter += 1\n            elif counter == 3:\n                if letter not in memory:\n                    memory = set()\n                    memory.add(letter)\n                    counter = 0\n                    counter += 1\n                    days += 1\n    if counter != 0:\n        days += 1\n    return days\nfor testCase in testCases:\n    print(f(testCase))", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    s = inp().strip()\n    a = set()\n    r = 0\n    for i in s:\n        a.add(i)\n        if len(a) > 3:\n            a = {i}\n            r += 1\n    if len(a) > 0:\n        r += 1\n    print(r)\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "from math import ceil\n\ndef solver(s):\n    memorized = set()\n    ans = 0\n    for letter in s:\n        memorized.add(letter)\n        if len(memorized) > 3:\n            ans += 1\n            memorized = set()\n            memorized.add(letter)\n    if len(memorized):\n        return ans + 1\n    return ans\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        s = input()\n        print(solver(s))\nmain()", "import sys\nimport math\nfrom itertools import accumulate\n\ndef read_string():\n    return sys.stdin.readline().strip()\n\ndef read_int_arr():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef read_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef solve():\n    s = read_string()\n    cur = set()\n    res = 0\n    for i in range(len(s)):\n        if len(cur) == 3 and s[i] not in cur:\n            res += 1\n            cur = set()\n            cur.add(s[i])\n        else:\n            cur.add(s[i])\n    print(res + 1)\nT = int(input())\nfor _ in range(T):\n    solve()", "def kil_(a):\n    K = 0\n    fuga = set()\n    for i in range(len(a)):\n        if not a[i] in fuga:\n            if len(fuga) < 3:\n                fuga.add(a[i])\n            else:\n                K += 1\n                fuga = set()\n                fuga.add(a[i])\n    if len(fuga) > 0:\n        K += 1\n    return K\n\ndef kil(a):\n    t = int(input())\n    A = ''\n    for i in range(t):\n        A += str(kil_(a())) + '\\n'\n    print(A[:-1])\n\ndef ik():\n    return list(input())\nkil(ik)", "def solve():\n    name = input()\n    (c1, c2, c3) = (None, None, None)\n    cnt = 0\n    for c in name:\n        if c1 is None or c == c1:\n            c1 = c\n            continue\n        elif c2 is None or c == c2:\n            c2 = c\n            continue\n        elif c3 is None or c == c3:\n            c3 = c\n            continue\n        else:\n            cnt += 1\n            c1 = c\n            (c2, c3) = (None, None)\n    if c1 is not None:\n        cnt += 1\n    print(cnt)\ntc = int(input())\nfor _ in range(tc):\n    solve()", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nnum_of_tests = inp()\nfor n in range(num_of_tests):\n    count = 0\n    word = insr()\n    memory = set()\n    for c in word:\n        if c not in memory:\n            if len(memory) == 3:\n                count += 1\n                memory = {c}\n            else:\n                memory.add(c)\n    if len(memory) > 0:\n        count += 1\n    print(count)", "n = int(input())\nfor t in range(n):\n    s = input()\n    st = set()\n    cnt = 1\n    for i in s:\n        if len(st) == 3:\n            if i in st:\n                continue\n            else:\n                st.clear()\n                cnt += 1\n                st.add(i)\n        else:\n            st.add(i)\n    print(cnt)", "def ss(s):\n    count = 1\n    store = []\n    for i in s:\n        if i not in store:\n            store.append(i)\n        if len(store) == 4:\n            count += 1\n            store = [i]\n    return count\nfor _ in range(int(input())):\n    s = input()\n    print(ss(s))", "testcases = int(input())\nwhile testcases > 0:\n    testcases -= 1\n    s = input()\n    total_days = 0\n    diff_letters = set()\n    for i in s:\n        diff_letters.add(i)\n        if len(diff_letters) > 3:\n            total_days += 1\n            diff_letters.clear()\n            diff_letters.add(i)\n    if len(diff_letters) > 0:\n        total_days += 1\n    print(total_days)", "import math\ntest = int(input())\nans = []\ng = set()\nfor i in range(test):\n    ans.append(1)\n    x = input()\n    g.clear()\n    for j in x:\n        g.add(j)\n        if len(g) > 3:\n            g.clear()\n            g.add(j)\n            ans[i] = ans[i] + 1\nfor i in ans:\n    print(i, sep=' ')", "test = int(input())\nans = []\ng = set()\nfor i in range(test):\n    ans.append(1)\n    x = input()\n    g.clear()\n    for j in x:\n        g.add(j)\n        if len(g) > 3:\n            g.clear()\n            g.add(j)\n            ans[i] = ans[i] + 1\nfor i in ans:\n    print(i)", "numberofcases = int(input())\nlistofcases = []\nfor tc in range(numberofcases):\n    testcase = input()\n    listofcases.append(testcase)\nfor item in listofcases:\n    count = 0\n    dictionary = {}\n    for character in item:\n        dictionary[character] = ''\n        if len(dictionary) == 4:\n            count += 1\n            dictionary = {}\n            dictionary[character] = ''\n    if len(dictionary) > 0:\n        count += 1\n    print(count)", "k1 = int(input())\nl = []\nfor i in range(k1):\n    l.append(input())\nfor str in l:\n    s = set()\n    c = 0\n    for i in str:\n        s.add(i)\n        if len(s) > 3:\n            c = c + 1\n            s = set(i)\n    if len(s) > 0:\n        c = c + 1\n    print(c)", "import sys\nimport heapq\ninput = sys.stdin.readline\nfrom collections import Counter, defaultdict\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef main():\n    string = input().strip()\n    pointer = 0\n    seen = set()\n    count = 0\n    for pointer in range(len(string)):\n        char = string[pointer]\n        seen.add(char)\n        if len(seen) > 3:\n            seen.clear()\n            count += 1\n            seen.add(char)\n    print(count + 1)\nt = inp()\nfor _ in range(t):\n    main()", "def days(string):\n    set_ = set()\n    n = 1\n    for i in string:\n        set_.add(i)\n        if len(set_) > 3:\n            n += 1\n            set_ = set(i)\n    return n\nt = int(input())\nfor _ in range(t):\n    string = input()\n    print(days(string))", "n = int(input())\ntest_cases = []\nfor i in range(n):\n    test_cases.append(input())\n\ndef string_from_memory(s):\n    res = 1\n    cur = set()\n    for i in s:\n        if not i in cur:\n            if len(cur) == 3:\n                res += 1\n                cur = set()\n            cur.add(i)\n    from math import ceil\n    return res\nfor i in test_cases:\n    print(string_from_memory(i))", "def countDays(word):\n    days = 0\n    letters = []\n    for c in word:\n        if c not in letters:\n            if len(letters) == 3:\n                days += 1\n                letters = [c]\n            else:\n                letters.append(c)\n    return days + 1\nassert countDays('lollipops') == 2\nassert countDays('stringology') == 4\nassert countDays('abracadabra') == 3\nassert countDays('codeforces') == 4\nassert countDays('test') == 1\nassert countDays('f') == 1\nfor _ in range(int(input())):\n    print(countDays(input()))", "def solve():\n    (word, memory, days) = (input(), set(), 0)\n    for char in word:\n        memory.add(char)\n        if len(memory) > 3:\n            memory = set()\n            days += 1\n        memory.add(char)\n    print(days + (1 if len(memory) else 0))\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "def count_days(s):\n    day_lst = []\n    days_cnt = 0\n    for char in s:\n        if len(day_lst) < 3:\n            if char not in day_lst:\n                day_lst.append(char)\n        elif len(day_lst) == 3:\n            if char not in day_lst:\n                day_lst.clear()\n                day_lst.append(char)\n                days_cnt += 1\n    if day_lst:\n        days_cnt += 1\n    return days_cnt\nt = int(input())\nwhile t:\n    inp = input()\n    print(count_days(inp))\n    t -= 1", "for _ in range(int(input())):\n    s = set()\n    days = 1\n    for x in input():\n        s.add(x)\n        if len(s) == 4:\n            days += 1\n            s = {x}\n    print(days)", "for _ in range(int(input())):\n    s = set()\n    days = 1\n    for x in input():\n        s.add(x)\n        if len(s) == 4:\n            days += 1\n            s = {x}\n    print(days)", "t = int(input())\nstrings = []\nfor _ in range(t):\n    s = input()\n    strings.append(s)\nfor s in strings:\n    ans = 0\n    letters = set()\n    for letter in s:\n        if letter not in letters:\n            if len(letters) + 1 == 4:\n                letters.clear()\n                ans += 1\n            letters.add(letter)\n    print(ans + 1)", "def answer_func(word):\n    memory = set()\n    todays_letters = 0\n    days = 0\n    for letter in word:\n        if not letter in memory and len(memory) >= 3:\n            memory.clear()\n            days += 1\n            todays_letters = 0\n        memory.add(letter)\n        todays_letters += 1\n    if todays_letters > 0:\n        days += 1\n    return days\ntests = int(input())\nfor test in range(tests):\n    word = input()\n    print(answer_func(word))", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    a = input().strip()\n    b = set()\n    ans = 1\n    for i in range(len(a)):\n        if a[i] not in b:\n            if len(b) == 3:\n                ans += 1\n                b = set()\n            b.add(a[i])\n    print(ans)\ntc = int(input())\nfor i in range(tc):\n    solve()", "import sys\nimport collections\nfrom math import ceil, gcd, sqrt, log\nimport bisect\nINF = float('inf')\nmod = 1000000007\n\ndef solve():\n    s = input()\n    days = 0\n    ok = set()\n    for i in s:\n        ok.add(i)\n        if len(ok) > 3:\n            days += 1\n            ok = {i}\n    print(days + 1)\nt = int(input())\nwhile t != 0:\n    solve()\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    s = input()\n    days = 1\n    seen = set()\n    for char in s:\n        seen.add(char)\n        if len(seen) > 3:\n            seen.clear()\n            days += 1\n            seen.add(char)\n    print(days)", "def sol():\n    s = input()\n    let = set()\n    count = 0\n    for i in s:\n        let.add(i)\n        if len(let) > 3:\n            count += 1\n            let.clear()\n            let.add(i)\n    if len(let) != 0:\n        count += 1\n    print(count)\nfor _ in range(int(input())):\n    sol()", "for i in range(int(input())):\n    s = input()\n    c = 0\n    a = []\n    for i in s:\n        if i not in a:\n            a.append(i)\n        if len(a) == 4:\n            c += 1\n            a = [i]\n    print(c + bool(len(a)))", "for h in range(int(input())):\n    s = input()\n    c = 1\n    d = []\n    for i in s:\n        if i not in d and len(d) == 3:\n            c += 1\n            d = []\n            d.append(i)\n        elif i not in d:\n            d.append(i)\n    print(c)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    word = input().rstrip()\n    memo = set()\n    day = 1\n    for i in word:\n        memo.add(i)\n        if len(memo) > 3:\n            day += 1\n            memo.clear()\n            memo.add(i)\n    print(day)", "tests = int(input())\nfor _ in range(tests):\n    word = input()\n    n = len(word)\n    cur = set()\n    total = 0\n    for char in word:\n        if char not in cur:\n            if len(cur) < 3:\n                cur.add(char)\n            else:\n                total += 1\n                cur = set([char])\n    if cur:\n        total += 1\n    print(total)", "def solve(s):\n    ans = 0\n    t = set()\n    for i in s:\n        t.add(i)\n        if len(t) > 3:\n            ans += 1\n            t = set()\n            t.add(i)\n    if t:\n        ans += 1\n    return ans\nt = int(input())\nfor _ in range(t):\n    s = input()\n    print(solve(s))", "for _ in range(int(input())):\n    s = input()\n    count = 1\n    store = []\n    for i in s:\n        if i not in store:\n            store.append(i)\n        if len(store) == 4:\n            count += 1\n            store = [i]\n    print(count)", "count = int(input())\ndays = 1\nfor i in range(count):\n    next = input()\n    used_letters = []\n    for j in next:\n        if len(used_letters) < 3:\n            if j not in used_letters:\n                used_letters.append(j)\n        elif len(used_letters) == 3:\n            if j not in used_letters:\n                used_letters.clear()\n                used_letters.append(j)\n                days += 1\n    print(days)\n    days = 1", "t = int(input())\nfor i in range(t):\n    x = input()\n    if len(x) < 4:\n        print(1)\n    else:\n        day = 0\n        mem = set()\n        for k in x:\n            if len(mem) == 3 and k not in mem:\n                day += 1\n                mem = set()\n                mem.add(k)\n            else:\n                mem.add(k)\n        print(day + 1)", "import sys\n\ndef run():\n    word = input()\n    day_count = 1\n    lets = set()\n    for c in word:\n        if c in lets or len(lets) < 3:\n            lets.add(c)\n        else:\n            day_count += 1\n            lets = {c}\n    print(day_count)\nt = int(input())\nfor _ in range(t):\n    run()", "t = int(input())\nresult = []\nfor n in range(t):\n    string = input()\n    d = 0\n    i = 0\n    l = []\n    for i in string:\n        if i not in l:\n            if len(l) == 3:\n                d += 1\n                l.clear()\n            l.append(i)\n    result.append(d + 1)\nfor i in range(t):\n    print(result[i])", "result = []\nfor t in range(int(input())):\n    s = list(input())\n    se = set()\n    r = 1\n    for i in s:\n        if i not in se:\n            if len(se) < 3:\n                se.add(i)\n            else:\n                r += 1\n                se.clear()\n                se.add(i)\n    result.append(r)\nfor i in result:\n    print(i)", "def test():\n    s = input().strip()\n    memory = []\n    days = 0\n    for c in s:\n        if c not in memory and len(memory) == 3:\n            memory = []\n            days += 1\n        if c not in memory:\n            memory.append(c)\n    if len(memory) > 0:\n        days += 1\n    print(days)\nt = int(input())\nfor i in range(1, t + 1):\n    test()", "t = int(input())\nfor i in range(t):\n    s = input()\n    p = 0\n    k = []\n    for c in s:\n        if len(k) == 3 and (not c in k):\n            k = []\n        if not c in k:\n            k.append(c)\n            p += 1\n    if p % 3 == 0:\n        print(int(p / 3))\n    else:\n        print(int(p / 3) + 1)", "for t in range(int(input())):\n    string = input()\n    count = 0\n    s = set()\n    for i in string:\n        s.add(i)\n        if len(s) > 3:\n            count += 1\n            s.clear()\n            s.add(i)\n    if len(s) != 0:\n        count += 1\n    print(count)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    m = set()\n    step = 1\n    flag = False\n    for el in s:\n        if not el in m and (not flag):\n            m.add(el)\n            if len(m) == 3:\n                flag = True\n        elif not el in m and flag:\n            step += 1\n            m = set()\n            m.add(el)\n            flag = False\n    print(step)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    dc = set()\n    res = 0\n    ans = 0\n    for i in s:\n        if i not in dc:\n            dc.add(i)\n        if len(dc) == 4:\n            ans += 1\n            dc.clear()\n            dc.add(i)\n    if len(dc):\n        ans += 1\n    print(ans)", "x = int(input())\nfor i in range(x):\n    a = input()\n    l = []\n    day = 1\n    for j in a:\n        if j not in l:\n            if len(l) == 3:\n                l = [j]\n                day += 1\n            else:\n                l.append(j)\n    print(day)", "for _ in range(int(input())):\n    s = input()\n    st = set()\n    ans = 0\n    for i in s:\n        st.add(i)\n        if len(st) > 3:\n            st = set()\n            st.add(i)\n            ans += 1\n    ans += 1\n    print(ans)", "n = int(input())\nfor i in range(n):\n    x = input()\n    l = list(x)\n    l1 = []\n    count = 0\n    for i in l:\n        if i not in l1:\n            l1.append(i)\n            if len(l1) == 4:\n                l1.clear()\n                l1.append(i)\n                count += 1\n    if len(l1) <= 3 and len(l1) > 0:\n        count += 1\n    print(count)", "t = int(input())\nfor i in range(t):\n    s = input()\n    ans = 1\n    d = {}\n    for c in s:\n        if c in d:\n            continue\n        if len(d) < 3:\n            d[c] = 1\n        else:\n            ans += 1\n            d = {c: 1}\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    n = len(s)\n    st = set()\n    ans = 1\n    for c in s:\n        st.add(c)\n        if len(st) > 3:\n            st = set()\n            st.add(c)\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    st = set()\n    ans = 1\n    for i in s:\n        st.add(i)\n        if len(st) > 3:\n            st = set([i])\n            ans += 1\n    print(ans)", "def int_input():\n    a = int(input())\n    return a\n\ndef int_list_input():\n    a = list(map(int, input().split()))\n    return a\n\ndef solve():\n    s = input()\n    ans = 1\n    d = {}\n    for i in s:\n        if i in d:\n            continue\n        if len(d) >= 3:\n            d = {}\n            ans += 1\n        d[i] = 0\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    s = input()\n    st = set()\n    ans = 1\n    for i in s:\n        st.add(i)\n        if len(st) > 3:\n            st = set([i])\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    line = input()\n    days = 1\n    memory = []\n    for char in line:\n        if char not in memory:\n            if len(memory) < 3:\n                memory.append(char)\n            else:\n                memory = [char]\n                days += 1\n    print(days)", "t = int(input())\nfor i in range(t):\n    a = input()\n    b = set()\n    cnt = 0\n    for j in a:\n        b.add(j)\n        if len(b) > 3:\n            cnt += 1\n            b = {j}\n    print(cnt + 1)", "t = int(input())\n\ndef pwsm(w):\n    dic = {}\n    distcount = 0\n    daycount = 0\n    for i in w:\n        if not dic.get(i, 0):\n            distcount += 1\n            dic[i] = 1\n        if distcount == 4:\n            daycount += 1\n            dic = {}\n            dic[i] = 1\n            distcount = 1\n    if distcount > 0:\n        daycount += 1\n    return daycount\nfor i in range(t):\n    s = input()\n    ans = pwsm(s)\n    print(ans)", "for i in range(int(input())):\n    (cs, cnt) = ([], 1)\n    for c in input():\n        if c in cs:\n            continue\n        if len(cs) == 3:\n            cs = [c]\n            cnt += 1\n        else:\n            cs.append(c)\n    print(cnt)", "import sys\nT = int(sys.stdin.readline())\nfor t in range(T):\n    s = sys.stdin.readline().rstrip()\n    answer = 1\n    memory = set()\n    for ch in s:\n        if ch in memory:\n            continue\n        elif len(memory) == 3:\n            memory.clear()\n            memory.add(ch)\n            answer += 1\n        else:\n            memory.add(ch)\n    print(answer)", "for _ in range(int(input())):\n    s = input()\n    st = set()\n    ans = 0\n    for i in s:\n        st.add(i)\n        if len(st) > 3:\n            st = set()\n            st.add(i)\n            ans += 1\n    ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    days = 1\n    memory = set()\n    for c in s:\n        if c in memory:\n            continue\n        elif len(memory) < 3:\n            memory.add(c)\n        else:\n            memory = set(c)\n            days += 1\n    print(days)", "t = int(input())\nfor i in range(t):\n    string = str(input())\n    h = 0\n    dicts = {}\n    for s in string:\n        dicts[s] = 1\n        if len(dicts) == 4:\n            h += 1\n            dicts = {}\n            dicts[s] = 1\n    print(h + 1)", "t = int(input())\nfor i in range(t):\n    st = input()\n    days = 0\n    memory = []\n    for i in st:\n        if len(memory) == 3 and i not in memory:\n            days += 1\n            memory = []\n        if i not in memory:\n            memory.append(i)\n    if len(memory) > 0:\n        days += 1\n    print(days)", "for s in [*open(0)][1:]:\n    t = set()\n    i = 1\n    for x in s[:-1]:\n        if len((t := (t | {x}))) > 3:\n            t = {x}\n            i += 1\n    print(i)", "for _ in range(int(input())):\n    word = input()\n    days = 1\n    memory = set()\n    for l in word:\n        memory.add(l)\n        if len(memory) > 3:\n            memory.clear()\n            memory.add(l)\n            days += 1\n    print(days)", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    count = 0\n    day = 0\n    ll = ''\n    for i in s:\n        if i not in ll:\n            ll += i\n            count += 1\n        if count == 4:\n            ll = i\n            count = 1\n            day += 1\n    if count > 0:\n        day += 1\n    print(day)", "t = int(input())\nfor j in range(0, t):\n    s = input()\n    arr = []\n    day = 0\n    for c in s:\n        if c not in arr:\n            if len(arr) == 3:\n                day += 1\n                arr = []\n            arr.append(c)\n    day += 1\n    print(day)", "for t in range(int(input())):\n    s = input()\n    a = set()\n    cnt = 0\n    for i in range(len(s)):\n        a.add(s[i])\n        if len(a) > 3:\n            cnt += 1\n            a = {s[i]}\n    print(cnt + 1)", "for _ in range(int(input())):\n    s = input()\n    a = set()\n    res = 1\n    for i in s:\n        if not i in a and len(a) == 3:\n            a = set()\n            res += 1\n        a.add(i)\n    print(res)", "for _ in range(int(input())):\n    s = input()\n    ms = set()\n    ans = 0\n    for i in s:\n        ms.add(i)\n        if len(ms) > 3:\n            ans += 1\n            ms = set()\n            ms.add(i)\n    print(ans if not len(ms) else ans + 1)", "i = input()\nfor n in range(int(i)):\n    str = input()\n    l = []\n    count = 1\n    for c in str:\n        if not c in l:\n            if len(l) == 3:\n                count += 1\n                l = []\n            l.append(c)\n    print(count)", "def exe():\n    su = 0\n    d = {}\n    for i in s:\n        d[i] = 0\n        if len(d) == 4:\n            d = {}\n            d[i] = 0\n            su += 1\n    su += 1\n    return su\nfor i in range(int(input())):\n    s = input()\n    print(exe())", "def solve():\n    n = input()\n    res = 0\n    s = set()\n    for i in n:\n        if i in s:\n            continue\n        if len(s) == 3:\n            s.clear()\n            res += 1\n        s.add(i)\n    print(res + 1)\n    return\n\ndef main():\n    for _ in range(int(input())):\n        solve()\n    return\nmain()", "t = int(input())\nfor _ in range(t):\n    s = input()\n    chars = set()\n    ans = 0\n    for char in s:\n        chars.add(char)\n        if len(chars) > 3:\n            chars = set()\n            chars.add(char)\n            ans += 1\n    if len(chars) > 0:\n        ans += 1\n    print(ans)", "out = []\nfor _ in range(int(input())):\n    s = input()\n    ans = 1\n    difs = set()\n    for i in s:\n        if not i in difs:\n            difs.add(i)\n            if len(difs) > 3:\n                ans += 1\n                difs = set(i)\n    out.append(ans)\nfor i in out:\n    print(i)", "from math import ceil\nfor _ in range(int(input())):\n    s = input()\n    d = {}\n    ans = 0\n    for i in s:\n        if i in d:\n            continue\n        elif len(d) == 3:\n            ans += 1\n            d = {}\n        d[i] = 1\n    if len(d) != 0:\n        ans += 1\n    print(ans)", "for _ in range(int(input())):\n    m = input()\n    cur = []\n    res = 0\n    for i in range(len(m)):\n        if m[i] not in cur:\n            if len(cur) == 3:\n                res += 1\n                cur = []\n            cur.append(m[i])\n    if len(cur) != 0:\n        res += 1\n    print(res)", "n = int(input())\nfor i in range(n):\n    s = input()\n    a = 1\n    mem = []\n    for i in s:\n        if not i in mem and len(mem) < 3:\n            mem.append(i)\n        elif not i in mem:\n            mem = [i]\n            a += 1\n    print(a)", "for _ in range(int(input())):\n    i = input()\n    new = 0\n    s = {}\n    days = 0\n    for x in i:\n        if x not in s:\n            if new == 3:\n                days += 1\n                s = {}\n                new = 0\n            s[x] = 1\n            new += 1\n    print(days + 1)", "for _ in range(int(input())):\n    s = input()\n    c = 1\n    n = len(s)\n    x = set()\n    for i in s:\n        x.add(i)\n        if len(x) > 3:\n            x = {i}\n            c += 1\n    print(c)", "def main():\n    length = int(input())\n    for _ in range(length):\n        string = input()\n        ans = solver(string)\n        print(ans)\n\ndef solver(string):\n    n = len(string)\n    word_dict = set()\n    ans = 1\n    for i in range(n):\n        if string[i] in word_dict:\n            continue\n        else:\n            if len(word_dict) >= 3:\n                ans += 1\n                word_dict = set()\n            word_dict.add(string[i])\n    return ans\nmain()", "def solve(s):\n    n = len(s)\n    learnt = set()\n    i = 0\n    days = 1\n    while i < n:\n        if len(learnt) == 3 and s[i] not in learnt:\n            days += 1\n            learnt.clear()\n            learnt.add(s[i])\n            i += 1\n            continue\n        elif s[i] in learnt:\n            i += 1\n            continue\n        else:\n            learnt.add(s[i])\n            i += 1\n    return days\n\ndef main():\n    T = int(input())\n    for _ in range(T):\n        s = input()\n        print(solve(s))\nmain()", "t = int(input())\nfor i in range(t):\n    s = input()\n    a = []\n    n = 1\n    for i in range(len(s)):\n        if s[i] not in a:\n            if len(a) == 3:\n                n += 1\n                a = [s[i]]\n            else:\n                a.append(s[i])\n    print(n)", "for tc in range(int(input())):\n    s = input()\n    hp = set()\n    ans = 0\n    for i in range(len(s)):\n        hp.add(s[i])\n        if len(hp) == 4:\n            ans += 1\n            hp.clear()\n            hp.add(s[i])\n    if len(hp) > 0:\n        ans += 1\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    ans = 0\n    x = set()\n    for a in s:\n        if a not in x:\n            x.add(a)\n            if len(x) > 3:\n                ans += 1\n                x = set([a])\n    if len(x):\n        ans += 1\n    print(ans)", "t = int(input().strip())\nfor _ in range(t):\n    s = input().strip()\n    days = 1\n    letter_count = 0\n    lst = []\n    for c in s:\n        if letter_count < 3 and c not in lst:\n            lst.append(c)\n            letter_count += 1\n        elif letter_count <= 3 and c in lst:\n            lst.append(c)\n        else:\n            days += 1\n            lst.clear()\n            lst.append(c)\n            letter_count = 1\n    print(days)", "t = int(input())\nans = []\nfor i in range(t):\n    n = input()\n    lst = []\n    day = 0\n    for j in n:\n        if j not in lst:\n            lst.append(j)\n        if len(lst) == 4:\n            lst = []\n            lst.append(j)\n            day += 1\n    if len(lst) != 0:\n        ans.append(day + 1)\n    else:\n        ans.append(day)\nfor i in ans:\n    print(i)", "import math\ntest = int(input())\nfor t in range(test):\n    s = input()\n    mem = set()\n    day = 1\n    for c in s:\n        if c not in mem:\n            if len(mem) < 3:\n                mem.add(c)\n            else:\n                day += 1\n                mem = set()\n                mem.add(c)\n        else:\n            pass\n    print(day)", "for i in range(int(input())):\n    a = input()\n    c = set()\n    res = 0\n    for j in a:\n        if j in c:\n            c.add(j)\n        elif len(c) == 3:\n            res += 1\n            c = set()\n        c.add(j)\n    if len(c) > 0:\n        res += 1\n    print(res)", "t = int(input())\nwhile t:\n    s = input()\n    no_of_days = 1\n    str_day = ''\n    for i in s:\n        if i not in str_day:\n            if len(str_day) < 3:\n                str_day = str_day + i\n            else:\n                no_of_days = no_of_days + 1\n                str_day = i\n    print(no_of_days)\n    t = t - 1", "from math import ceil\ncases = int(input())\nfor _ in range(cases):\n    n = input()\n    if len(n) == 0:\n        print(0)\n        continue\n    remembered = set()\n    day = 1\n    for i in n:\n        if i in remembered:\n            continue\n        elif len(remembered) < 3:\n            remembered.add(i)\n        else:\n            day += 1\n            remembered = set(i)\n    print(day)", "targs = int(input())\nfor _ in range(targs):\n    newstr = input()\n    days = 1\n    chars = set()\n    newchars = 0\n    for ch in newstr:\n        if ch not in chars:\n            if len(chars) == 3:\n                chars = set()\n                days += 1\n            chars.add(ch)\n    print(days)", "t = int(input())\n\ndef f(n):\n    k = n[0]\n    l = [k]\n    L = []\n    for i in range(len(n)):\n        if len(l) != 3 and n[i] not in l:\n            l.append(n[i])\n            k = n[i]\n        elif len(l) == 3 and n[i] not in l:\n            L.append(l)\n            l = [n[i]]\n    return len(L) + 1\nfor i in range(t):\n    n = input()\n    print(f(n))", "n = int(input())\nfor i in range(n):\n    line = input()\n    apha = []\n    day = 0\n    count = 0\n    for i in line:\n        if i not in apha:\n            if count == 3:\n                day = day + 1\n                apha = []\n                count = 0\n            apha.append(i)\n            count = count + 1\n        else:\n            pass\n    if day >= 0 and count > 0:\n        day = day + 1\n    print(day)", "def writes_st(arr):\n    resp = 1\n    brr = []\n    for item in arr:\n        if item not in brr:\n            if len(brr) == 3:\n                resp += 1\n                brr = [item]\n            else:\n                brr.append(item)\n    return resp\nt = int(input())\nfor _ in range(0, t):\n    st = input()\n    arr = list(st)\n    response = writes_st(arr)\n    print(f'{response}')", "n = int(input())\nfor i in range(n):\n    stroka = input()\n    massiv = []\n    otvet = 0\n    ans = 0\n    for j in stroka:\n        if otvet == 3 and j not in massiv:\n            ans += 1\n            massiv = []\n            otvet = 0\n            massiv.append(j)\n            otvet += 1\n            continue\n        if j not in massiv:\n            otvet += 1\n        massiv.append(j)\n    print(ans + 1)", "t = int(input())\nfor x in range(t):\n    word = input()\n    checkSet = set()\n    cnt = 0\n    for i in word:\n        checkSet.add(i)\n        if len(checkSet) > 3:\n            checkSet = set()\n            cnt += 1\n            checkSet.add(i)\n    if len(checkSet) > 0:\n        cnt += 1\n    print(cnt)", "t = int(input())\nfor i in range(t):\n    s = input()\n    p = []\n    ans = 0\n    for j in range(len(s)):\n        if s[j] in p:\n            pass\n        elif len(p) == 3:\n            p = [s[j]]\n            ans += 1\n        else:\n            p.append(s[j])\n    if p:\n        ans += 1\n    print(ans)", "case = int(input())\nfor i in range(case):\n    x = input()\n    ans = 0\n    sublist = []\n    for j in range(len(x)):\n        if x[j] not in sublist:\n            if len(sublist) == 3:\n                ans += 1\n                sublist = []\n                sublist.append(x[j])\n            else:\n                sublist.append(x[j])\n        else:\n            pass\n    if len(sublist) > 0:\n        ans += 1\n    print(ans)", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    s = input()\n    foo = [s[0]]\n    cnt = 0\n    for el in s[1:]:\n        if el in foo[-3:]:\n            continue\n        else:\n            if len(foo) == 3:\n                cnt += 1\n                foo = []\n            foo.append(el)\n    print(cnt + 1)"]