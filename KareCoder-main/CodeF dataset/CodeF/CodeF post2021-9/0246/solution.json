["import sys\ninput = sys.stdin.readline\nfor tc in range(int(input())):\n    (n, k) = map(int, input().split())\n    (lb, rb) = (False, False)\n    for i in range(n):\n        (l, r) = map(int, input().split())\n        if l == k:\n            lb = True\n        if r == k:\n            rb = True\n    print('YES' if lb and rb else 'NO')", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, k) = map(int, input().split())\n    (s, e) = (0, 0)\n    for i in range(n):\n        (l, r) = map(int, input().split())\n        if l == k:\n            s += 1\n        if r == k:\n            e += 1\n    if s > 0 and e > 0:\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nfor i in range(t):\n    solve()", "import sys\nsys_input = sys.stdin.readline\nsys_print = sys.stdout.write\n\ndef testcase():\n    (n, k) = map(int, sys_input().split())\n    lines = [tuple(map(int, sys_input().split())) for _ in range(n)]\n    (nst, ned) = (0, 0)\n    for (s, e) in lines:\n        if s == k:\n            nst += 1\n        if e == k:\n            ned += 1\n    if nst > 0 and ned > 0:\n        sys_print('YES\\n')\n    else:\n        sys_print('NO\\n')\nt = int(sys_input())\nfor _ in range(t):\n    testcase()", "import sys\ninput = iter(sys.stdin.read().splitlines()).__next__\nTC = int(input())\nfor tc in range(TC):\n    (N, K) = map(int, input().split())\n    (starts, ends) = (False, False)\n    for i in range(N):\n        (l, r) = map(int, input().split())\n        if l == K:\n            starts = True\n        if r == K:\n            ends = True\n    print('YES' if starts and ends else 'NO')", "import sys\ninput = sys.stdin.readline\n\ndef sol(arr, n):\n    pass\nt = int(input())\nfor case in range(t):\n    (n, k) = list(map(int, input().split()))\n    s1 = set()\n    s2 = set()\n    for i in range(n):\n        (x, y) = list(map(int, input().split()))\n        s1.add(x)\n        s2.add(y)\n    if k in s1 and k in s2:\n        print('YES')\n    else:\n        print('NO')", "import sys\nt = int(sys.stdin.readline().strip())\nfor _ in range(t):\n    (n, k) = map(int, sys.stdin.readline().strip().split())\n    r = False\n    rl = False\n    rr = False\n    for _ in range(n):\n        (l, r) = map(int, sys.stdin.readline().strip().split())\n        if l == k == r:\n            rl = True\n            rr = True\n        elif l == k:\n            rl = True\n        elif r == k:\n            rr = True\n    print('YES' if rl and rr else 'NO')", "import os.path\nfrom math import gcd, floor, ceil\nfrom collections import *\nimport sys\nmod = 1000000007\nINF = float('inf')\n\ndef st():\n    return list(sys.stdin.readline().strip())\n\ndef li():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef mp():\n    return map(int, sys.stdin.readline().split())\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef pr(n):\n    return sys.stdout.write(str(n) + '\\n')\n\ndef prl(n):\n    return sys.stdout.write(str(n) + ' ')\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nt = inp()\nfor i in range(t):\n    (n, k) = mp()\n    (f, f1) = (0, 0)\n    for i in range(n):\n        (a, b) = mp()\n        if b - k == 0:\n            f = 1\n        if k - a == 0:\n            f1 = 1\n    if f == 1 and f1 == 1:\n        print('YES')\n    else:\n        print('NO')", "import sys\nimport math as mt\nmod = 1000000007\n\ndef uno():\n    return int(sys.stdin.readline().strip())\n\ndef dos():\n    return sys.stdin.readline().strip()\n\ndef tres():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef cuatro():\n    return sys.stdin.readline().strip().split()\nfor _ in range(uno()):\n    (n, k) = tres()\n    (cnt, l, r) = (0, -1, 51)\n    for i in range(n):\n        (a, b) = tres()\n        if a <= k <= b:\n            cnt += 1\n            r = min(r, b)\n            l = max(l, a)\n    if cnt == 0 or r - l + 1 > 1:\n        print('NO')\n    else:\n        print('YES')", "def main():\n    for i in range(int(input())):\n        (n, k) = [int(x) for x in input().split()]\n        (l, r) = (False, False)\n        for j in range(n):\n            z = input().split()\n            if int(z[0]) == k:\n                l = True\n            if int(z[1]) == k:\n                r = True\n        if l and r:\n            print('YES')\n        else:\n            print('NO')\nmain()", "from collections import defaultdict\nfrom sys import stdin, stdout\nimport string\nimport math\ntest_cases = int(stdin.readline())\nfor it in range(test_cases):\n    (n, k) = map(int, tuple(stdin.readline().split()))\n    (k_covered, left_neighbour_covered, right_neighbour_covered) = (0, 0, 0)\n    for i in range(n):\n        (l, r) = map(int, tuple(stdin.readline().split()))\n        if l > k or k > r:\n            continue\n        k_covered += 1\n        if l <= k + 1 <= r:\n            right_neighbour_covered += 1\n        if l <= k - 1 <= r:\n            left_neighbour_covered += 1\n    if right_neighbour_covered >= k_covered or left_neighbour_covered >= k_covered:\n        print('NO')\n        continue\n    print('YES')", "import sys\n\ndef solve(seg, k):\n    (l, r) = (False, False)\n    for (a, b) in seg:\n        l |= a == k\n        r |= b == k\n        if l and r:\n            return 'YES'\n    return 'NO'\nn = int(sys.stdin.readline())\nfor i in range(n):\n    (n, k) = map(int, sys.stdin.readline().split())\n    seg = []\n    for j in range(n):\n        (a, b) = map(int, sys.stdin.readline().split())\n        seg += [(a, b)]\n    print(solve(seg, k))", "import sys\nimport math\nimport itertools\n\ndef solution():\n    (n, k) = map(int, input().split())\n    ml = []\n    mr = []\n    kl = 0\n    kr = 0\n    for i in range(n):\n        (l, r) = map(int, input().split())\n        ml.append(l)\n        mr.append(r)\n        if l == k:\n            kl += 1\n        if r == k:\n            kr += 1\n    if kl and kr:\n        print('YES')\n        return\n    print('NO')\n    return\nt = int(input())\nfor i in range(t):\n    solution()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    (l1, l2) = ([], [])\n    (f, b) = (0, 0)\n    for i in range(n):\n        l2 = [int(a) for a in input().split()]\n        if l2[1] == k:\n            f = 1\n        if l2[0] == k:\n            b = 1\n    if f & b:\n        print('YES')\n    else:\n        print('NO')", "def slove():\n    for _ in range(int(input())):\n        (m, n) = map(int, input().split())\n        ans_n = 0\n        ans_k = 0\n        for _ in range(m):\n            (na, ko) = map(int, input().split())\n            if na == n:\n                ans_n += 1\n            if ko == n:\n                ans_k += 1\n        if ans_k != 0 and ans_n != 0:\n            print('YES')\n        else:\n            print('NO')\nslove()", "t = int(input())\nfor i in range(t):\n    n = input().split()\n    k = int(n[1])\n    n = int(n[0])\n    l = []\n    for j in range(n):\n        l1 = input().split()\n        l.append([int(l1[0]), int(l1[1])])\n    (start, end) = (False, False)\n    for j in l:\n        if j[0] == k and (not start):\n            start = True\n        if j[1] == k and (not end):\n            end = True\n    if start and end:\n        print('YES')\n    else:\n        print('NO')", "def run_test():\n    (n, k) = map(int, input().split())\n    end = 0\n    start = 0\n    for i in range(n):\n        (l, r) = map(int, input().split())\n        if l == k:\n            start += 1\n        if r == k:\n            end += 1\n    if start > 0 and end > 0:\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nfor _ in range(t):\n    run_test()", "def solve():\n    (n, k) = map(int, input().split())\n    end = start = 0\n    for i in range(n):\n        (l, r) = map(int, input().split())\n        if l == k:\n            start += 1\n        if r == k:\n            end += 1\n    if start > 0 and end > 0:\n        print('YES')\n        return\n    print('NO')\nfor t in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    (p, q) = (0, 0)\n    for i in range(a):\n        (x, y) = map(int, input().split())\n        if x == b:\n            p += 1\n        if y == b:\n            q += 1\n    if p > 0 and q > 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nimport math\nfor _ in range(0, t):\n    inputs = [int(num) for num in input().split()]\n    n = inputs[0]\n    m = inputs[1]\n    list1 = []\n    list2 = [0 for i in range(0, 51)]\n    x = -1\n    power1 = 0\n    power2 = 0\n    for i in range(0, n):\n        inputs = [int(num) for num in input().split()]\n        if inputs[0] == m:\n            power1 += 1\n        if inputs[1] == m:\n            power2 += 1\n    if power1 >= 1 and power2 >= 1:\n        print('YES')\n    else:\n        print('NO')", "a = int(input())\nwhile a:\n    (n, k) = map(int, input().split())\n    tarun = 0\n    kumar = 0\n    for i in range(n):\n        (l, r) = map(int, input().split())\n        if l == k:\n            tarun += 1\n        if r == k:\n            kumar += 1\n    if tarun > 0 and kumar > 0:\n        print('YES')\n    else:\n        print('NO')\n    a -= 1", "def idealPoint():\n    (end, start) = (0, 0)\n    for i in range(n):\n        (l, r) = map(int, input().split())\n        if l == k:\n            start += 1\n        if r == k:\n            end += 1\n    if start > 0 and end > 0:\n        return 'YES'\n    else:\n        return 'NO'\nt = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    ans = idealPoint()\n    print(ans)\n    t = t - 1", "def solve():\n    (n, k) = map(int, input().split())\n    (st, end) = (0, 0)\n    for i in range(n):\n        (l, r) = map(int, input().split())\n        if l == k:\n            st += 1\n        if r == k:\n            end += 1\n    if st > 0 and end > 0:\n        print('YES')\n    else:\n        print('NO')\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    fx = 0\n    startp = 0\n    endp = 0\n    is2 = False\n    for _ in range(n):\n        (l, r) = map(int, input().split())\n        if k <= r and k >= l:\n            fx += 1\n        if l == r and l == k:\n            is2 = True\n        if r == k:\n            endp += 1\n        if l == k:\n            startp += 1\n    if is2 and fx == 1:\n        print('YES')\n    elif startp >= 1 and endp >= 1:\n        print('YES')\n    elif fx <= 1:\n        print('NO')\n    else:\n        print('NO')", "def solve():\n    t = 1\n    t = int(input())\n    while t:\n        t -= 1\n        (n, k) = [int(x) for x in input().split()]\n        rseg_k = lseg_k = 0\n        while n:\n            n -= 1\n            (l, r) = [int(x) for x in input().split()]\n            if l == k:\n                lseg_k += 1\n            if k == r:\n                rseg_k += 1\n        print('YES' if lseg_k > 0 and rseg_k > 0 else 'NO')\nsolve()", "R = lambda : map(int, input().split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n, k) = R()\n    (a, b) = map(set, zip(*(R() for _ in [0] * n)))\n    print('NYOE S'[k in a & b::2])", "R = lambda : map(int, input().split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n, k) = R()\n    (a, b) = zip(*(R() for _ in [0] * n))\n    print('NYOE S'[k in {*a} & {*b}::2])", "t = int(input())\nwhile t:\n    (n, k) = [int(i) for i in input().split()]\n    s = 0\n    e = 0\n    while n:\n        (l, r) = [int(i) for i in input().split()]\n        if l == k:\n            s += 1\n        if r == k:\n            e += 1\n        n -= 1\n    if s > 0 and e > 0:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    start = 0\n    end = 0\n    for i in range(n):\n        (l, r) = map(int, input().split())\n        if l == k:\n            start += 1\n        if r == k:\n            end += 1\n    if start > 0 and end > 0:\n        print('YES')\n    else:\n        print('NO')", "def solve():\n    t = int(input())\n    for _ in range(t):\n        left = False\n        right = False\n        (n, k) = map(int, input().split())\n        for _ in range(n):\n            (l, r) = map(int, input().split())\n            if l == k:\n                left = True\n            if r == k:\n                right = True\n        if left and right:\n            print('YES')\n            continue\n        print('NO')\n\ndef main():\n    solve()\nmain()", "def IdealPoint():\n    t = int(input())\n    while t:\n        t -= 1\n        (n, k) = map(int, input().split())\n        county = 0\n        countx = 0\n        while n:\n            n -= 1\n            (l, r) = map(int, input().split())\n            if k == l:\n                countx += 1\n            if k == r:\n                county += 1\n        if countx > 0 and county > 0:\n            print('YES')\n        else:\n            print('NO')\nIdealPoint()", "for t in range(int(input())):\n    flag1 = False\n    flag2 = False\n    (n, k) = map(int, input().split())\n    for i in range(n):\n        (l, r) = map(int, input().split())\n        if l == k:\n            flag1 = True\n        if r == k:\n            flag2 = True\n    if flag1 and flag2:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    l = [int(x) for x in input().split()]\n    pc1 = False\n    pc2 = False\n    for j in range(l[0]):\n        lst = [int(y) for y in input().split()]\n        if lst[0] == l[1]:\n            pc1 = True\n        if lst[1] == l[1]:\n            pc2 = True\n    if pc1 and pc2:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().strip().split())\n    left = False\n    right = False\n    while n:\n        (l, r) = map(int, input().strip().split())\n        if l == k:\n            left = True\n        if r == k:\n            right = True\n        n -= 1\n    if left and right:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    (l, r) = (0, 0)\n    for x in range(n):\n        (x, y) = map(int, input().split())\n        if x == k:\n            l = 1\n        if y == k:\n            r = 1\n    if l * r:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    cntl = 0\n    cntr = 0\n    for j in range(n):\n        (l, r) = map(int, input().split())\n        if l == k:\n            cntl = 1\n        if r == k:\n            cntr = 1\n    if cntl == 1 and cntr == 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    (c1, c2) = (0, 0)\n    for i in range(n):\n        (l, r) = map(int, input().split())\n        if l == k:\n            c1 = 1\n        if r == k:\n            c2 = 1\n    if c1 and c2:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    left = right = False\n    for _ in range(n):\n        (l, r) = map(int, input().split())\n        if l == k:\n            left = True\n        if r == k:\n            right = True\n    if left and right:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    flag1 = 0\n    flag2 = 0\n    for j in range(n):\n        (l, r) = map(int, input().split())\n        if k == l:\n            flag1 = 1\n        if k == r:\n            flag2 = 1\n    if flag1 == 1 and flag2 == 1:\n        print('YES')\n    else:\n        print('NO')", "tn = int(input())\nfor i in range(tn):\n    [n, x] = [int(y) for y in input().split()]\n    c = 0\n    m = 0\n    for j in range(n):\n        p = input().split()\n        if int(p[0]) == x:\n            c += 1\n        if int(p[1]) == x:\n            m += 1\n    if c >= 1 and m >= 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\npts = []\nsegs = []\nfor _ in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    pts.append(k)\n    segs.append([])\n    for _ in range(n):\n        (l, r) = [int(x) for x in input().split()]\n        segs[-1].append((l, r))\nfor i in range(t):\n    (k, part) = (pts[i], segs[i])\n    ends = starts = False\n    for seg in part:\n        ends = seg[0] == k or ends\n        starts = seg[1] == k or starts\n        if ends and starts:\n            print('YES')\n            break\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = 0\n    e = 0\n    for i in range(n):\n        (l, r) = map(int, input().split())\n        if l == k:\n            s += 1\n        if r == k:\n            e += 1\n    if s > 0 and e > 0:\n        print('YES')\n    else:\n        print('NO')", "def solve():\n    (n, k) = map(int, input().split())\n    kl = 0\n    kr = 0\n    for i in range(n):\n        (l, r) = map(int, input().split())\n        if l == k:\n            kl = 1\n        if r == k:\n            kr = 1\n    if kl == 1 and kr == 1:\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nfor _ in range(t):\n    solve()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = 0\n    e = 0\n    for i in range(n):\n        (l, r) = map(int, input().split())\n        if l == k:\n            s += 1\n        if r == k:\n            e += 1\n    if s > 0 and e > 0:\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nfor cnt in range(T):\n    (n, k) = map(int, input().split())\n    left = []\n    right = []\n    for i in range(n):\n        (segment1, segment2) = map(int, input().split())\n        if segment1 <= k and segment2 >= k:\n            left.append(segment1)\n            right.append(segment2)\n    if len(left) == 0 or len(right) == 0:\n        print('NO')\n    else:\n        arr = [max(left), min(right)]\n        if arr[0] == arr[1]:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = set()\n    r = set()\n    for j in range(n):\n        (a, b) = map(int, input().split())\n        l.add(a)\n        r.add(b)\n    if k in l & r:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    lst = []\n    for i in range(n):\n        lst.append(list(map(int, input().split())))\n    Redge = False\n    Ledge = False\n    for i in range(n):\n        if lst[i][1] == k:\n            Redge = True\n        if lst[i][0] == k:\n            Ledge = True\n    if Redge and Ledge:\n        print('YES')\n    else:\n        print('NO')", "from itertools import *\n\ndef check(arr):\n    n = len(arr)\n    if arr[0] == start and arr[1] == end:\n        for i in range(1, n - 1):\n            if arr[i] % (i + 1) != 0:\n                return 0\n        return 1\n    else:\n        return 0\n\ndef func(n):\n    lst = []\n    for i in range(1, n + 1):\n        lst.append(i)\n    perm = permutations(lst)\n    for i in perm:\n        if check(i) == 1:\n            print(i)\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    flag1 = 0\n    flag2 = 0\n    flag3 = 0\n    for i in range(n):\n        (l, r) = map(int, input().split())\n        if l == r and l == k:\n            flag1 = 1\n        if l == k:\n            flag2 = 1\n        if r == k:\n            flag3 = 1\n    if flag1:\n        print('YES')\n    elif flag2 and flag3:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor z in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    end = 0\n    start = 0\n    for _ in range(n):\n        (s, e) = [int(x) for x in input().split()]\n        if s == k:\n            start = 1\n        if e == k:\n            end = 1\n    if start == 1 and end == 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    s = end = 0\n    (n, k) = map(int, input().split())\n    for i in range(n):\n        (l, r) = map(int, input().split())\n        if l == k:\n            s += 1\n        if r == k:\n            end += 1\n    if s > 0 and end > 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    (l, r) = (0, 0)\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        if x == k:\n            l += 1\n        if y == k:\n            r += 1\n    if l > 0 and r > 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfrom collections import defaultdict\nwhile t > 0:\n    arr = input().split(' ')\n    arr = [arr[0], arr[1]]\n    n = int(arr[0])\n    k = int(arr[1])\n    (s, e) = (0, 0)\n    while n > 0:\n        x = input().split(' ')\n        if int(x[0]) == k:\n            s += 1\n        if int(x[1]) == k:\n            e += 1\n        n -= 1\n    ans = 'YES'\n    if s > 0 and e > 0:\n        ans = 'YES'\n    else:\n        ans = 'NO'\n    print(ans)\n    t -= 1", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    c = [0, 0]\n    for i in range(n):\n        (l, r) = list(map(int, input().split()))\n        if l == k:\n            c[0] += 1\n        if r == k:\n            c[1] += 1\n    if c[0] and c[1]:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    (mpL, mpR) = ([0] * 55, [0] * 55)\n    ans = 'NO'\n    for j in range(n):\n        (l, r) = map(int, input().split())\n        mpL[l] += 1\n        mpR[r] += 1\n    if mpL[k] >= 1 and mpR[k] >= 1:\n        ans = 'YES'\n    print(ans)", "def try_prob():\n    (e, g) = map(int, input().split())\n    ab = 0\n    stpoint = 0\n    endpoint = 0\n    for i in range(e):\n        (t, u) = map(int, input().split())\n        if t == g:\n            stpoint += 1\n        if u == g:\n            endpoint += 1\n    if stpoint > 0 and endpoint > 0:\n        ab = 1\n        print('YES')\n        return\n    if ab == 0:\n        print('NO')\n\ndef main():\n    a = int(input())\n    for _ in range(a):\n        try_prob()\nmain()", "t = int(input())\nfor z in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    left = 0\n    right = 0\n    for y in range(n):\n        (l, r) = [int(x) for x in input().split()]\n        if l == k:\n            left += 1\n        if r == k:\n            right += 1\n    if left >= 1 and right >= 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    count1 = 0\n    count2 = 0\n    for i in range(n):\n        (l, r) = [int(x) for x in input().split()]\n        if k == l:\n            count1 += 1\n        if k == r:\n            count2 += 1\n    if count1 > 0 and count2 > 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = []\n    for i in range(n):\n        l.append(list(map(int, input().split())))\n    le = 0\n    ri = 0\n    for i in range(n):\n        if l[i][0] == k:\n            le += 1\n        if l[i][1] == k:\n            ri += 1\n    if le >= 1 and ri >= 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        (l, r) = list(map(int, input().split()))\n        if l == k:\n            ans |= 1\n        if r == k:\n            ans |= 2\n    if ans == 3:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = 0\n    e = 0\n    for i in range(n):\n        (l, r) = map(int, input().split())\n        if l == k:\n            s += 1\n        if r == k:\n            e += 1\n    if s > 0 and e > 0:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    (l, r) = (0, 0)\n    for j in range(n):\n        (a, b) = map(int, input().split())\n        if a == k:\n            l += 1\n        if b == k:\n            r += 1\n    print('YES' if l and r else 'NO')", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    (l, r) = (0, 0)\n    for x in range(n):\n        (x, y) = map(int, input().split())\n        if x == k:\n            l = 1\n        if y == k:\n            r = 1\n    if l * r:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    L_end = R_end = False\n    for j in range(n):\n        (l, r) = map(int, input().split())\n        if l == k:\n            L_end = True\n        if r == k:\n            R_end = True\n    if L_end and R_end:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    c = [0, 0]\n    for i in range(n):\n        (left, right) = list(map(int, input().split()))\n        if left == k:\n            c[0] += 1\n        if right == k:\n            c[1] += 1\n    if c[0] and c[1]:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = b = 0\n    for i in range(n):\n        (l, r) = map(int, input().split())\n        if l == k:\n            a += 1\n        if r == k:\n            b += 1\n    if a > 0 and b > 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        (l, r) = list(map(int, input().split()))\n        if l == k:\n            ans |= 1\n        if r == k:\n            ans |= 2\n    if ans == 3:\n        print('YES')\n    else:\n        print('NO')", "import os\nimport math\nimport collections\nimport bisect\nimport functools\nimport itertools\nimport heapq\n\ndef solve(a, n, k):\n    v1 = any([y == k for (x, y) in a])\n    v2 = any([x == k for (x, y) in a])\n    return 'YES' if v1 and v2 else 'NO'\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = []\n    for __ in range(n):\n        (x, y) = map(int, input().split())\n        a.append([x, y])\n    print(solve(a, n, k))", "import sys\n\ndef solution():\n    (n, k) = map(int, input().split())\n    left = 0\n    mid = 0\n    right = 0\n    for _ in range(n):\n        seg = tuple(map(int, input().split()))\n        if seg[0] <= k and k <= seg[1]:\n            mid += 1\n            if seg[0] <= k - 1:\n                left += 1\n            if seg[1] >= k + 1:\n                right += 1\n    if left == mid or right == mid:\n        print('NO')\n    else:\n        print('YES')\nt = int(input())\nfor _ in range(t):\n    solution()", "t = int(input())\nfor i_ in range(t):\n    (n, k) = map(int, input().split())\n    c1 = 0\n    c2 = 0\n    for j in range(n):\n        (l, r) = map(int, input().split())\n        if l == k:\n            c1 += 1\n        if r == k:\n            c2 += 1\n    if c1 != 0 and c2 != 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    (l, r) = (0, 0)\n    for x in range(n):\n        (x, y) = map(int, input().split())\n        if x == k:\n            l = 1\n        if y == k:\n            r = 1\n    if l * r:\n        print('YES')\n    else:\n        print('NO')", "try:\n    for _ in range(int(input())):\n        (n, k) = map(int, input().split())\n        arr = []\n        t1 = 0\n        t2 = 0\n        for i in range(n):\n            (x1, x2) = map(int, input().split())\n            if x1 == k:\n                t1 = 1\n            if x2 == k:\n                t2 = 1\n            if x1 == k or x2 == k:\n                arr.append([x1, x2])\n        if t1 & t2:\n            print('YES')\n        else:\n            print('NO')\nexcept Exception as e:\n    print(e)", "for ((n, k), l0, r0) in ((map(int, input().split()), 0, 0) for _ in range(int(input()))):\n    for (l, r) in (map(int, input().split()) for _ in range(n)):\n        l0 |= l == k\n        r0 |= r == k\n    print(['NO', 'YES'][l0 and r0])", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split(' '))\n    min = -1\n    max = -1\n    flag = 0\n    for _ in range(n):\n        (x, y) = map(int, input().split(' '))\n        if k >= x and k <= y:\n            if min == -1 and max == -1:\n                min = x\n                max = y\n            elif min < x:\n                min = x\n                if max > y:\n                    max = y\n            elif max > y:\n                max = y\n            if min == k and max == k:\n                flag = 1\n    if flag == 0:\n        print('NO')\n    else:\n        print('YES')", "tc = int(input())\nfor _ in range(tc):\n    (n, k) = map(int, input().split())\n    segs = []\n    for v in range(n):\n        (l, r) = map(int, input().split())\n        segs.append([l, r])\n    count_l = 0\n    count_r = 0\n    for i in segs:\n        if i == [k, k]:\n            count_l += 1\n            count_r += 1\n            break\n        elif i[0] == k:\n            count_l += 1\n        elif i[1] == k:\n            count_r += 1\n    if count_l >= 1 and count_r >= 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    b = []\n    for _ in range(n):\n        (l, r) = map(int, input().split())\n        if l == m:\n            a.append([l, r])\n        if r == m:\n            b.append([l, r])\n    if a != [] and b != []:\n        print('YES')\n    else:\n        print('NO')", "def f():\n    (n, k) = list(map(int, input().split()))\n    begin = end = False\n    for _ in range(n):\n        (x1, x2) = list(map(int, input().split()))\n        if x1 == k:\n            begin = True\n        if x2 == k:\n            end = True\n    if begin and end:\n        print('YES')\n    else:\n        print('NO')\nn = int(input())\nfor _ in range(n):\n    f()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    x = y = 0\n    l = [x, y]\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        if a == k:\n            x = 1\n        if b == k:\n            y = 1\n    if x & y:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    t = 0\n    tt = 0\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        if k == a:\n            t = 1\n        if b == k:\n            tt = 1\n    if t == 1 and tt == 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    (start, end) = (False, False)\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        if x == k:\n            start = True\n        if y == k:\n            end = True\n    if start and end:\n        print('YES')\n    else:\n        print('NO')", "class EndPointl:\n\n    def __init__(self, a, b) -> None:\n        self.l = a\n        self.r = b\ncount = int(input())\nfor _ in range(count):\n    (n, k) = list(map(int, input().split()))\n    start_cover = False\n    end_cover = False\n    for _ in range(n):\n        (l, r) = list(map(int, input().split()))\n        if l == k:\n            start_cover = True\n        if r == k:\n            end_cover = True\n    if start_cover and end_cover:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    (a, b) = (0, 0)\n    for i in range(n):\n        (l, r) = list(map(int, input().split()))\n        if l == k:\n            a += 1\n        if r == k:\n            b += 1\n    if a > 0 and b > 0:\n        print('YES')\n    else:\n        print('NO')", "for tests in range(int(input())):\n    (n, m) = map(int, input().split())\n    (s, e) = (0, 0)\n    for i in range(n):\n        (l, r) = map(int, input().split())\n        if l == m:\n            s += 1\n        if r == m:\n            e += 1\n    if s > 0 and e > 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t:\n    nk = [int(i) for i in input().split()]\n    l = 0\n    r = 0\n    for i in range(nk[0]):\n        lr = [int(i) for i in input().split()]\n        if lr[0] == nk[1]:\n            l += 1\n        if lr[1] == nk[1]:\n            r += 1\n    if r >= 1 and l >= 1:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "t = int(input())\nwhile t != 0:\n    (s, e) = map(int, input().split())\n    l1 = []\n    l2 = []\n    f1 = 0\n    f2 = 0\n    for i in range(s):\n        (n1, n2) = map(int, input().split())\n        l1.append(n1)\n        l2.append(n2)\n    for i in l1:\n        if i == e:\n            f1 += 1\n    for j in l2:\n        if j == e:\n            f2 += 1\n    if f1 >= 1 and f2 >= 1:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    s = 0\n    e = 0\n    for _ in range(n):\n        (l, r) = map(int, input().split())\n        if l == k:\n            s += 1\n        if r == k:\n            e += 1\n    if s > 0 and e > 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    x = 0\n    y = 0\n    Nb = 0\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        if a <= k <= b:\n            Nb += 1\n            if not x and (not y):\n                if a == k:\n                    x = a\n                if b == k:\n                    y = b\n            elif x and (not y) and (b == k):\n                y = k\n            elif y and (not x) and (a == k):\n                x = a\n    if x == y and x:\n        print('YES')\n    else:\n        print('NO')"]