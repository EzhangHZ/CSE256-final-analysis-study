["t = int(input())\nwhile t:\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    s = set(a)\n    sum = 0\n    if len(s) > 2:\n        print(n)\n    elif len(s) == 1:\n        print(1)\n    else:\n        print(2 + (n - 2) // 2)\n    t -= 1", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(1)\n        continue\n    d = {}\n    for i in range(n):\n        d[a[i]] = d.get(a[i], 0)\n        if a[i - 1] == a[(i + 1) % n]:\n            d[a[i]] += 1\n    k = min(d.values())\n    if k == 0 or len(d) > 2:\n        print(n)\n    else:\n        p = n\n        for z in d:\n            if d[z] == k:\n                p = min(p, a.count(z))\n        if p == 1:\n            print(n)\n        else:\n            print(n + 1 - k)", "for jj in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    if len(set(arr)) == 2:\n        print(n // 2 + 1)\n    else:\n        print(n)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    aa = set(a)\n    cont = n if len(aa) > 2 else n // 2 + 1\n    print(cont)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ln = len(set(arr))\n    print(n // 2 + 1 if ln == 2 else n)", "n = input()\nfor i in range(int(n)):\n    ns = int(input())\n    seq = input()\n    seq = [int(x) for x in seq.split(' ')]\n    unq = set(seq)\n    if len(unq) > 2:\n        print(ns)\n    else:\n        print(ns // 2 + 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = set(l)\n    if len(s) > 2:\n        print(n)\n    else:\n        print(n // 2 + 1)", "for _ in range(int(input())):\n    a = input()\n    t = [int(i) for i in input().split()]\n    if len(set(t)) != 2:\n        print(a)\n    else:\n        print(len(t) // 2 + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    L1 = list(map(int, input().split()))\n    K = set(L1)\n    k1 = len(K)\n    if k1 > 2:\n        print(len(L1))\n    elif k1 == 2:\n        print(len(L1) // 2 + 1)\n    else:\n        print(1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = set(map(int, input().split()))\n    if len(arr) < 3:\n        print(n // 2 + 1)\n    else:\n        print(n)", "import sys\nR = sys.stdin.readline\nfor _ in range(int(R())):\n    n = int(R())\n    a = [*map(int, R().split())]\n    if n <= 2:\n        print(n)\n        continue\n    if len(set(a)) >= 3:\n        print(n)\n    else:\n        print(n // 2 + 1)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n < 4:\n        print(n)\n        continue\n    c = 0\n    for i in range(n):\n        if a[i] == a[i - 2]:\n            c += 1\n    if c == n:\n        print(n // 2 + 1)\n    else:\n        print(n)", "I = input\nfor _ in ' ' * int(I()):\n    n = int(I())\n    print([n, 1 + n // 2][len(set(I().split())) == 2])", "def solve(seq):\n    distinct_nr = len(set(seq))\n    if distinct_nr > 2:\n        return len(seq)\n    if len(seq) <= 2:\n        return len(seq)\n    return len(seq) // 2 + 1\n\ndef run_solve():\n    n = int(input())\n    seq = tuple((int(x) for x in input().split()))\n    print(solve(seq))\ntests_nr = int(input())\nfor test in range(tests_nr):\n    run_solve()", "def main(x, n):\n    m = {}\n    for xx in x:\n        if xx in m:\n            m[xx] += 1\n        else:\n            m[xx] = 1\n    if n % 2 == 0 and len(m) == 2:\n        return n - (n // 2 - 1)\n    else:\n        return n\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print(main(list(map(lambda x: int(x), input().split())), n))", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = defaultdict(lambda : 0)\n    for v in a:\n        count[v] += 1\n    if len(count) == 2:\n        print((len(a) - 2) // 2 + 2)\n    else:\n        print(len(a))", "def solve_case():\n    _ = int(input())\n    l = list(map(int, input().split()))\n    d = set()\n    for el in l:\n        d.add(el)\n    if len(d) == 2:\n        print(2 + (len(l) - 2) // 2)\n    else:\n        print(len(l))\nt = int(input())\nfor _ in range(t):\n    solve_case()", "import sys\nT = int(sys.stdin.readline().strip())\nfor t in range(0, T):\n    n = int(sys.stdin.readline().strip())\n    a = len(set(sys.stdin.readline().strip().split()))\n    if a == 2:\n        print(n // 2 + 1)\n    else:\n        print(n)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    numbers = [int(x) for x in input().split()]\n    if n % 2 == 0:\n        p1 = numbers[0]\n        p2 = numbers[1]\n        works = True\n        for i in range(n // 2):\n            if numbers[2 * i] != p1 or numbers[2 * i + 1] != p2:\n                works = False\n                break\n        if not works:\n            print(n)\n        else:\n            print(n // 2 + 1)\n    else:\n        print(n)", "try:\n    for _ in range(int(input())):\n        n = int(input())\n        lst = list(map(int, input().split()))\n        if n == 1:\n            print(1)\n            continue\n        if len(set(lst)) == 2:\n            n = n // 2 + 1\n        print(n)\nexcept Exception as e:\n    print(e)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    key = 0\n    for i in range(n):\n        if i % 2 == 0:\n            if arr[i] != arr[0]:\n                key = 1\n                break\n        elif arr[i] != arr[1]:\n            key = 1\n            break\n    if key == 1:\n        print(n)\n    else:\n        print(n // 2 + 1)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = n\n    if len(set(l)) == 2:\n        if n % 2 == 0:\n            l1 = []\n            for i in range(n):\n                if i % 2 == 0:\n                    l1.append(l[0])\n                else:\n                    l1.append(l[1])\n            if l == l1:\n                a = a // 2\n                a += 1\n    print(a)", "t = int(input())\nanswer1 = 'Yes'\nanswer2 = 'No'\nzero = 0\none = 1\ntwo = 2\n\ndef main():\n    for q in range(t):\n        dict = {}\n        number = int(input())\n        Array = list(map(int, input().split()))\n        res = zero\n        for j in range(number):\n            if Array[j] not in dict.keys():\n                dict[Array[j]] = one\n            elif dict[Array[j]] == one:\n                res = res + one\n        if res != number - two:\n            print(number)\n        else:\n            print(two + int((number - two) / two))\nmain()", "import math\ntestcases = int(input())\nwhile testcases > 0:\n    testcases -= 1\n    n = int(input())\n    array = [int(x) for x in input().split()]\n    distinct = []\n    flag = True\n    for element in array:\n        if element not in distinct:\n            distinct.append(element)\n        if len(distinct) > 2:\n            flag = False\n            break\n    if flag == False:\n        print(n)\n    elif n >= 4:\n        value = max(n - 4, 0) / 2 + 3\n        print(int(value))\n    else:\n        print(n)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    mp = {}\n    for i in range(len(arr)):\n        mp[arr[i]] = 1\n    res = list(mp.keys())\n    if len(res) > 2:\n        print(n)\n    else:\n        print(2 + (n - 2) // 2)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input()\n    b = a.split()\n    for j in range(n):\n        b[j] = int(b[j])\n    k = 1\n    if n % 2 == 0 and n > 2:\n        s = 0\n        for j in range(n):\n            if j <= n - 3:\n                if b[j] == b[j + 2]:\n                    s += 1\n        if b[n - 2] == b[0]:\n            s += 1\n        if b[n - 1] == b[1]:\n            s += 1\n        if s == n:\n            k = 0\n    if k == 1:\n        print(n)\n    else:\n        print(n // 2 + 1)", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    a = input().split()\n    for i in range(n):\n        a[i] = int(a[i])\n    if n == 1:\n        print(1)\n        continue\n    cnt = []\n    for i in range(n + 1):\n        cnt.append(0)\n    for b in a:\n        cnt[b] = 1\n    many = 0\n    for b in cnt:\n        many += b\n    if many > 2:\n        print(n)\n    if many == 2:\n        k = n // 2\n        ans = 1 + k\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    cnt_array = [0 for i in range(n)]\n    for x in a:\n        cnt_array[x - 1] = 1\n    cnt_distinct = sum(cnt_array)\n    if n == 1:\n        answer = 1\n    elif cnt_distinct == 2:\n        answer = n // 2 + 1\n    else:\n        answer = n\n    print(answer)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    st = set([])\n    for x in a:\n        st.add(x)\n    if len(st) > 2:\n        print(n)\n    elif len(st) == 1:\n        print(1)\n    else:\n        print(2 + (n - 2) // 2)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dup = list(set(arr))\n    if len(dup) > 2:\n        print(n)\n    elif len(dup) == 1:\n        print(1)\n    else:\n        print(int(2 + (n - 2) / 2))", "import sys\n\ndef input():\n    return sys.stdin.readline().rstrip('\\r\\n')\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = set(a)\n    if len(s) == 1:\n        return 1\n    if len(s) > 2:\n        return n\n    return 2 + (n - 2) // 2\nt = int(input())\nfor _ in range(t):\n    print(solve())", "for _ in range(int(input())):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    ans = 0\n    if len(set(nums)) == 1:\n        ans = 1\n    elif len(set(nums)) > 2:\n        ans = n\n    else:\n        ans = 2 + (n - 2) // 2\n    print(ans)", "import math\nfrom collections import Counter\n\ndef li():\n    return list(map(int, input().split()))\n\ndef n():\n    return int(input())\n\ndef st():\n    return input()\nyes = 'YES'\nno = 'NO'\neven = 'EVEN'\nodd = 'ODD'\n\ndef prefix(L):\n    size = len(L)\n    for i in range(1, size):\n        L[i] = L[i] + L[i - 1]\n    return L\nfor _ in range(int(input())):\n    size = n()\n    L = li()\n    s = set(L)\n    if size == 1:\n        print(1)\n    elif len(s) == 2:\n        print(2 + (size - 2) // 2)\n    else:\n        print(size)", "for s in [*open(0)][2::2]:\n    n = len((a := s.split()))\n    print((n, n // 2 + 1)[len({*a}) == 2])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if len(a) % 2 == 1:\n        print(len(a))\n    elif len(set(a)) == 2:\n        print(len(a) // 2 + 1)\n    else:\n        print(len(a))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(ii) for ii in input().split()]\n    if n == 1:\n        print(1)\n        continue\n    if len(set(a)) == 2:\n        print(n // 2 + 1)\n    else:\n        print(n)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    st = set(a)\n    if len(st) == 1:\n        print(1)\n    elif len(st) > 2:\n        print(n)\n    else:\n        print(int(2 + (n - 2) / 2))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    a.sort()\n    if n % 2 == 1:\n        print(n)\n    elif a[0] == a[n // 2 - 1] and a[n // 2] == a[n - 1]:\n        print(n // 2 + 1)\n    else:\n        print(n)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ring = list(map(int, input().split()))\n    if len(set(ring)) == 2:\n        print(n // 2 + 1)\n    else:\n        print(n)", "def solve():\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    if n == 1 or n == 2:\n        print(n)\n        return\n    if n % 2 == 0:\n        first = arr[0]\n        second = arr[1]\n        flag1 = 0\n        flag2 = 0\n        for i in range(2, n, 2):\n            if arr[i] != first:\n                flag1 = 1\n        for i in range(3, n, 2):\n            if arr[i] != second:\n                flag2 = 1\n        if (flag1 or flag2) == 0:\n            ans = n // 2 + 1\n            print(ans)\n        else:\n            print(n)\n    else:\n        print(n)\nt = int(input())\nfor i in range(t):\n    solve()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k1 = 0\n    j = 0\n    while j < len(a) - 1 and a[j - 1] == a[j + 1]:\n        k1 += 1\n        j += 2\n    j = 1\n    k2 = 1\n    while j < len(a) - 1 and a[j - 1] == a[j + 1]:\n        k2 += 1\n        j += 2\n    if n % 2 == 0 and k1 == n / 2 and (k2 == n / 2):\n        print(n // 2 + 1)\n    else:\n        print(n)", "for tc in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = set(a)\n    if len(x) > 2:\n        print(n)\n    elif len(x) == 1:\n        print(1)\n    else:\n        ans = 2 + (n - 2) // 2\n        print(ans)", "t = int(input())\nfor p in range(t):\n    n = int(input())\n    flag = True\n    a = list(map(int, input().split()))\n    b = [0] * 101\n    for i in range(n):\n        x = a[i]\n        b[x] += 1\n    minim = n\n    for i in range(101):\n        if b[i] != 0 and b[i] < minim:\n            minim = b[i]\n    if minim == n // 2:\n        print(n - minim + 1)\n    else:\n        print(n)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = set(a)\n    if len(s) > 2:\n        print(n)\n    elif len(s) == 1:\n        print(1)\n    else:\n        k = n - 2\n        print(2 + k // 2)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    L = list(map(int, input().split()))\n    ret = 0\n    while len(L) > 1:\n        length = len(L)\n        sign = 1\n        temp = L[0]\n        for i in range(1, length):\n            if i == length - 1:\n                if L[i - 1] != L[0]:\n                    sign = 0\n                break\n            if L[i - 1] != L[i + 1]:\n                sign = 0\n                break\n        if sign:\n            ret += len(L) // 2\n            break\n        else:\n            ret += len(L) - 1\n            break\n    ret += 1\n    print(ret)\n    t -= 1", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    l = map(int, input().split())\n    if len(set(l)) == 2:\n        print(int(n / 2 + 1))\n    else:\n        print(n)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = set(a)\n    if len(s) > 2:\n        print(n)\n    elif len(s) == 1:\n        print(1)\n    else:\n        print(2 + (n - 2) // 2)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = set(a)\n    if len(s) > 2:\n        print(n)\n    elif len(s) == 1:\n        print(1)\n    else:\n        print(2 + (n - 2) // 2)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = set(a)\n    if len(s) > 2:\n        print(n)\n    elif len(s) == 1:\n        print(1)\n    else:\n        print(2 + (n - 2) // 2)", "n = int(input())\nfor i in range(n):\n    l = int(input())\n    L = [int(s) for s in input().split()]\n    if l < 4:\n        print(l)\n    else:\n        check = 0\n        for i in range(0, l - 2):\n            if L[i] != L[i + 2]:\n                check = 1\n        if check == 1:\n            print(l)\n        else:\n            print(l // 2 + 1)", "for _ in range(int(input())):\n    p = int(input())\n    x = list(map(int, input().split()))\n    r = set()\n    for k in x:\n        r.add(k)\n    if len(r) > 2:\n        print(int(p))\n    elif len(r) == 1:\n        print(int(1))\n    else:\n        print(int(2 + (p - 2) / 2))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = list(map(int, input().split()))\n    if n == 1:\n        print(n)\n        continue\n    a = x[0]\n    b = x[1]\n    y = n % 2 == 1\n    Ans = 0\n    if n % 2 == 0:\n        for i in range(0, n - 1, 2):\n            if x[i] != a or x[i + 1] != b:\n                y = True\n    if y == False:\n        Ans = n // 2 + 1\n    else:\n        Ans = n\n    print(Ans)", "for t in range(0, int(input())):\n    n = int(input())\n    ring = list(map(int, input().split()))\n    is_in_cycle = True\n    for i in range(0, n):\n        if ring[i % 2] != ring[i]:\n            is_in_cycle = False\n    if is_in_cycle:\n        print(n // 2 + 1)\n    else:\n        print(n)", "import sys\nFILE = False\nif FILE:\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\n\ndef get_int():\n    return int(sys.stdin.readline())\n\ndef get_string():\n    return sys.stdin.readline().strip()\ntest_cases = get_int()\nfor test in range(test_cases):\n    n = get_int()\n    input = [int(x) for x in get_string().split()]\n    if len(set(input)) >= 3:\n        print(n)\n    elif len(set(input)) == 1:\n        print(1)\n    else:\n        print((n - 2) // 2 + 2)", "testcases = int(input())\nfor i in range(testcases):\n    n = int(input())\n    li = list(map(int, input().split()))\n    a = {}\n    a = set()\n    for i in li:\n        a.add(i)\n    if len(a) > 2:\n        print(n)\n    elif len(a) == 1:\n        print(1)\n    else:\n        print(2 + (n - 2) // 2)", "from math import floor\n\ndef alternate(x, n):\n    for i in range(0, n, 2):\n        if x[i] != x[0]:\n            return 0\n    for i in range(1, n, 2):\n        if x[i] != x[1]:\n            return 0\n    return 1\nfor _ in range(int(input())):\n    n = int(input())\n    ar = [int(x) for x in input().split()]\n    if n == 1:\n        print(1)\n    elif n == 2:\n        print(2)\n    elif alternate(ar, n):\n        print(floor(n / 2) + 1)\n    else:\n        print(n)", "for _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    S = set([])\n    for i in A:\n        S.add(i)\n    ans = 0\n    sn = len(S)\n    if sn == 1:\n        print(1)\n    elif sn == 2:\n        print((N - 2) // 2 + 2)\n    else:\n        print(N)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = map(int, input().split())\n    if len(set(a)) == 2:\n        print(n // 2 + 1)\n    else:\n        print(n)", "import sys\ninput = sys.stdin.readline\nout = []\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    data = input().split()\n    for i in range(2, n):\n        if data[i] != data[i - 2]:\n            out.append(n)\n            break\n    else:\n        out.append(n // 2 + 1)\nprint('\\n'.join(map(str, out)))", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    set1 = list(set(arr))\n    if len(set1) > 2:\n        print(n)\n    elif len(set1) == 1:\n        print(1)\n    else:\n        print(int(2 + (n - 2) / 2))", "for s in [*open(0)][2::2]:\n    print(((n := len((a := s.split()))), n // 2 + 1)[len({*a}) == 2])", "for _ in range(int(input())):\n    n = int(input())\n    print(n // 2 + 1 if len(set(map(int, input().split()))) == 2 else n)", "test = int(input())\nwhile test:\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if len(set(a)) == 1:\n        print(1)\n    elif len(set(a)) == 2:\n        print(n // 2 + 1)\n    else:\n        print(n)\n    test -= 1", "for _ in range(int(input())):\n    n = int(input())\n    s = set(map(int, input().split()))\n    cnt = len(list(s))\n    if cnt == 2:\n        ans = n // 2 + 1\n    else:\n        ans = n\n    print(ans)", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = Counter(a)\n    print(n // 2 + 1 if len(c) == 2 else n)", "from typing import List\nfrom collections import *\nimport math\n\nclass Solution:\n\n    def begin2(self, n: int, nums: List[int]):\n        res = 0\n        left = 0\n        while left < len(nums) - 1 and len(nums) > 2:\n            print(nums)\n            if nums[left - 1] != nums[left + 1]:\n                nums = nums[:left] + nums[left + 1:]\n                res += 1\n                if left > 0:\n                    left -= 1\n            else:\n                left += 1\n        if len(nums) <= 2:\n            res += len(nums)\n        else:\n            res += (len(nums) - 2) // 2 + 2\n        print(res)\n\n    def begin(self, n: int, nums: List[int]):\n        c = Counter(nums)\n        print(n // 2 + 1 if len(c) == 2 else n)\n        return\nsol = Solution()\ncaseNum = int(input())\nfor i in range(0, caseNum):\n    n = int(input())\n    allnums = input().split(' ')\n    nums = []\n    for t in allnums:\n        nums.append(int(t))\n    sol.begin(n, nums)", "for _ in range(int(input())):\n    n = int(input())\n    s = set(map(int, input().split()))\n    t = len(list(s))\n    if t == 2:\n        ans = n // 2 + 1\n    else:\n        ans = n\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    d = {}\n    for i in a:\n        d[i] = d.get(i, 0) + 1\n    if len(d) == 2:\n        print(n // 2 + 1)\n    else:\n        print(n)", "from collections import *\n\ndef solve():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    if len(list(set(a))) == 2:\n        print(n // 2 + 1)\n    else:\n        print(n)\nt = int(input())\nfor _ in range(t):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    print(n // 2 + 1 if len(set(map(int, input().split()))) == 2 else n)", "import sys\nfrom collections import *\nsys.setrecursionlimit(10 ** 5)\nitr = (line for line in sys.stdin.read().strip().split('\\n'))\nINP = lambda : next(itr)\n\ndef ni():\n    return int(INP())\n\ndef nl():\n    return [int(_) for _ in INP().split()]\n\ndef solve(n, a):\n    seen = {}\n    for e in a:\n        if e not in seen:\n            seen[e] = 1\n        else:\n            seen[e] += 1\n    u = len(seen.keys())\n    if u == 2:\n        print(1 + n // 2)\n    else:\n        print(n)\nt = ni()\nfor case in range(t):\n    n = ni()\n    a = nl()\n    solve(n, a)", "for s in [*open(0)][2::2]:\n    print(((n := len((a := s.split()))), n // 2 + 1)[len({*a}) == 2])", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = set(l)\n    if len(d) == 1:\n        print(1)\n    elif len(d) == 2:\n        m = int((n - 2) / 2)\n        print(m + 2)\n    else:\n        print(n)", "t = int(input())\n\ndef solve():\n    n = int(input())\n    arr = set(map(int, input().split()))\n    if len(arr) == 2:\n        return n // 2 + 1\n    return n\nfor i in range(t):\n    print(solve())", "t = eval(input())\nB = []\nfor i in range(t):\n    n = eval(input())\n    str_in = input()\n    A = set(map(int, str_in.strip().split()))\n    if len(A) == 2:\n        B.append(int(n / 2 + 1))\n    else:\n        B.append(n)\nfor i in B:\n    print(i)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input()\n    a = a.split()\n    a = [int(x) for x in a]\n    a_set = set(a)\n    if len(a_set) > 2:\n        rez = len(a)\n    else:\n        rez = len(a) // 2 + 1\n    print(rez)", "for _ in range(int(input())):\n    n = int(input())\n    s = set(map(int, input().split()))\n    t = len(list(s))\n    if t == 2:\n        ans = n // 2 + 1\n    else:\n        ans = n\n    print(ans)", "for s in [*open(0)][2::2]:\n    print(((n := len((a := s.split()))), n // 2 + 1)[len({*a}) == 2])", "import sys\ninput = sys.stdin.readline\n\ndef readList():\n    return list(map(int, input().split()))\n\ndef readInt():\n    return int(input())\n\ndef readInts():\n    return map(int, input().split())\n\ndef readStr():\n    return input().strip()\n\ndef solve():\n    n = readInt()\n    arr = readList()\n    ans = 0\n    while True:\n        m = len(arr)\n        tmp = []\n        for i in range(m):\n            if arr[(i - 1) % m] != arr[(i + 1) % m]:\n                ans += 1\n                continue\n            tmp.append(i)\n        if m == len(tmp):\n            break\n        arr = tmp\n    arr = tmp\n    return min((n - ans) // 2 + 1 + ans, n)\nfor _ in range(int(input())):\n    print(solve())", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = set(l)\n    if len(a) == len(l):\n        print(len(a))\n    elif len(a) == 2:\n        print((n - 2) // 2 + 2)\n    else:\n        print(n)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = len(set(a))\n    if n > 2 and m == 2:\n        n -= m\n        p = (n + 1) // 2\n        print(p + 2)\n    else:\n        print(n)", "for i in range(int(input())):\n    a = int(input())\n    x = list(map(int, input().split()))\n    l = len(set(x))\n    if l == 2:\n        ans = a // 2 + 1\n    else:\n        ans = a\n    print(ans)", "for s in [*open(0)][2::2]:\n    print(((n := len((a := s.split()))), n // 2 + 1)[len({*a}) == 2])", "def main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        _a = set(a)\n        cont = n if len(_a) > 2 else n // 2 + 1\n        print(cont)\nmain()", "for i in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    l = len(set(s))\n    if l == 2:\n        print(n // 2 + 1)\n    else:\n        print(n)", "t = int(input())\nresult = []\nfor i in range(t):\n    n = int(input())\n    d = {}\n    tab = list(map(int, input().split(' ')))\n    c = 0\n    for i in tab:\n        if i not in d:\n            c += 1\n            d[i] = 1\n        if c == 3:\n            result.append(n)\n            break\n    if c <= 2:\n        result.append(n // 2 + 1)\nfor i in result:\n    print(i)", "t = int(input())\nwhile t:\n    n = int(input())\n    count = 0\n    a = list(map(int, input().split()))[:n]\n    count = len(set(a))\n    if count > 2:\n        print(n)\n    elif n == 1:\n        print(1)\n    else:\n        print(int(n / 2 + 1))\n    t -= 1", "t = int(input())\nwhile t:\n    n = int(input())\n    count = 0\n    a = list(map(int, input().split()))[:n]\n    count = len(set(a))\n    if count > 2:\n        print(n)\n    elif n == 1:\n        print(1)\n    else:\n        print(int(n / 2 + 1))\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ln = len(set(arr))\n    print(n // 2 + 1 if ln == 2 else n)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    lst = set(map(int, input().strip().split()))\n    size = len(lst)\n    if size < 3:\n        print(int(n / 2) + 1)\n    else:\n        print(n)\n    t -= 1", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    inp = list(map(int, input().split()))\n    k = len(set(inp))\n    if k != 2:\n        print(n)\n    else:\n        print(int(n / 2 + 1))\n    t -= 1", "n = int(input())\nfor _ in range(n):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    s = set(l)\n    if len(s) > 2 or len(s) == 1:\n        print(n)\n    else:\n        print(n // 2 + 1)", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    val = input().split(' ')\n    val = {int(i) for i in val}\n    if len(val) > 2:\n        print(n)\n    else:\n        print(int(n / 2 + 1))", "for s in [*open(0)][2::2]:\n    print(((n := len((a := s.split()))), n // 2 + 1)[len({*a}) == 2])", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    lst = set(map(int, input().strip().split()))\n    size = len(lst)\n    if size < 3:\n        print(int(n / 2) + 1)\n    else:\n        print(n)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    s = set(map(int, input().split()))\n    t = len(list(s))\n    if t == 2:\n        ans = n // 2 + 1\n    else:\n        ans = n\n    print(ans)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    if len(set(a)) == 2:\n        print(n // 2 + 1)\n    else:\n        print(n)\n    t -= 1", "t = int(input().strip())\nfor _ in range(t):\n    n = int(input().strip())\n    s = [int(i) for i in input().split(' ')]\n    if n == 1:\n        print(1)\n        continue\n    OK = True\n    previous = -1\n    index = {}\n    for i in s:\n        if not str(i) in index:\n            index.update({str(i): 1})\n        else:\n            index.update({str(i): index[str(i)] + 1})\n    for i in index:\n        if previous == -1:\n            previous = index[i]\n            continue\n        if index[i] != previous:\n            OK = False\n            break\n    if len(index) == 2 and OK == True:\n        print(n // 2 + 1)\n    else:\n        print(n)", "def maxi(n, arr):\n    if len(set(arr)) == 2:\n        return n // 2 + 1\n    else:\n        return n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    print(maxi(n, arr))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    dist = set(nums)\n    if len(dist) == 1:\n        print(1)\n    elif len(dist) == 2:\n        print(n // 2 + 1)\n    else:\n        print(n)"]