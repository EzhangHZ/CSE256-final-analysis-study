["for some_random_name in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        if a[i] == 0:\n            ans += (i + 1) * (n - i) * 2\n        else:\n            ans += (i + 1) * (n - i)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(n):\n        if a[i] == 0:\n            a[i] = 2\n        else:\n            a[i] = 1\n    ans = 0\n    for i in range(n):\n        k = 0\n        for j in range(i, -1, -1):\n            k += a[j]\n            ans += k\n    print(ans)", "for iii in range(int(input())):\n    n = int(input())\n    q = list(map(int, input().split()))\n    cou = 0\n    for i in range(n):\n        if q[i] == 0:\n            cou = cou + (i + 1) * (n - i) * 1 + (i + 1) * (n - i) * 1\n        else:\n            cou = cou + (i + 1) * (n - i)\n    print(cou)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans1 = 0\n    ans = n * (n + 1) * (n + 2) // 6\n    for i in range(n):\n        if a[i] == 0:\n            ans = ans + (i + 1) * (n - i)\n    print(ans1 + ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    tot = 0\n    tp = 0\n    for i in range(n):\n        if l[i] != 0:\n            tp = 1\n        else:\n            tp = 2\n        tot += (n - i) * (i + 1) * tp\n    print(tot)", "for t in range(int(input())):\n    n = int(input())\n    A = [int(i) for i in input().split()]\n    B = [0 for i in range(n)]\n    B[0] = 1 if A[0] == 0 else 0\n    for i in range(1, n):\n        if A[i] == 0:\n            B[i] = B[i - 1] + 1\n        else:\n            B[i] = B[i - 1]\n    (i, ans) = (1, 0)\n    while i <= n:\n        for j in range(n - i + 1):\n            if j == 0:\n                ans += i + B[j + i - 1]\n            else:\n                ans += i + B[j + i - 1] - B[j - 1]\n        i += 1\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    nn = list(map(int, input().split()))\n    ans = []\n    x = 0\n    for j in nn:\n        if j == 0:\n            ans.append(x)\n        x += 1\n    temp = [nj for nj in range(1, n + 1)]\n    t2 = temp[::-1]\n    x = [temp[jk] * t2[jk] for jk in range(len(t2))]\n    var = 0\n    for njk in ans:\n        var += (njk + 1) * (n - njk)\n    print(sum(x) + var)", "from math import *\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    q = 0\n    for i in range(0, n):\n        p = 0\n        for j in range(i, n):\n            if l[j] == 0:\n                p += 1\n            q += abs(i - j) + p\n            q += 1\n    print(q)", "N = int(input())\ninputs = []\nfor i in range(N):\n    size = int(input())\n    elm = list(map(int, input().split()))\n    inputs.append([size, elm])\nans = []\nfor (size, arr) in inputs:\n    cost = 0\n    for i in range(size):\n        for j in range(i, size):\n            cur = arr[i:j + 1]\n            zeros = cur.count(0)\n            length = j - i + 1\n            cost += zeros + length\n    ans.append(cost)\nfor elm in ans:\n    print(elm)", "t = int(input())\nwhile t:\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in range(1, n + 1):\n        ans += i * (n - i + 1)\n    for i in range(n):\n        if l[i] == 0:\n            ans += (i + 1) * (n - i)\n    print(ans)\n    t -= 1", "def val(l):\n    s = 0\n    for i in l:\n        if i == 0:\n            s += 2\n        else:\n            s += 1\n    return s\n\ndef solve():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    subarr = []\n    for i in range(1, n + 1):\n        for j in range(i + 1, n + 2):\n            subarr.append(a[i - 1:j - 1])\n    x = map(val, subarr)\n    return sum(list(x))\nt = int(input())\nfor i in range(t):\n    print(solve())", "for _ in range(int(input())):\n    n = int(input())\n    a = [2 if g == 0 else 1 for g in list(map(int, input().split()))]\n    mex = 0\n    k = len(a)\n    length = len(a)\n    for i in range(len(a)):\n        n = min(i, len(a) - i - 1)\n        mex += k * a[i]\n        k += length - 2\n        length -= 2\n    print(mex)", "for z in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().strip().split()))\n    su = 0\n    for i in range(1, n + 1):\n        su += i * (n + 1 - i)\n    for j in range(n):\n        if l[j] == 0:\n            t = min(j, n - j - 1)\n            su += (t + 1) * (2 * n - 2 * t) // 2\n    print(su)", "def countt(a):\n    return len(a) + a.count(0)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        for j in range(i, n):\n            ans += countt(a[i:j + 1])\n    print(ans)", "for s in [*open(0)][2::2]:\n    a = s.split()\n    r = i = 0\n    for x in a:\n        i += 1\n        r += (1 + (x == '0')) * i * (len(a) - i + 1)\n    print(r)", "import sys\nfrom math import *\nfrom functools import *\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = [0] * n\n    p[0] = int(a[0] == 0)\n    for i in range(1, n):\n        p[i] = p[i - 1] + (a[i] == 0)\n    ans = n * (n + 1) * (n + 2) // 6\n    for i in range(n):\n        ans += (a[i] == 0) * (i + 1) * (n - i)\n    print(ans)", "def check(n, a):\n    total = 0\n    for i in range(n):\n        d = 0\n        for j in range(i, n):\n            if a[j] == 0:\n                d += 2\n            else:\n                d += 1\n            total += d\n    return total\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(check(n, a))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        if a[i] == 0:\n            c = c + (i + 1) * (n - i)\n    print(c + n * (n + 1) * (n + 2) // 6)", "for s in [*open(0)][2::2]:\n    a = s.split()\n    r = i = 0\n    for x in a:\n        i += 1\n        r += (1 + (x == '0')) * i * (len(a) - i + 1)\n    print(r)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = n * (n + 1) * (n + 2) // 6\n    for i in range(n):\n        if a[i] == 0:\n            ans += (i + 1) * (n - i)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    (*a,) = map(int, input().split())\n    ans = 0\n    for i in range(n):\n        ans += (i + 1) * (n - i)\n        if a[i] == 0:\n            ans += (i + 1) * (n - i)\n    print(ans)", "for s in [*open(0)][2::2]:\n    a = s.split()\n    r = i = 0\n    for x in a:\n        i += 1\n        r += (1 + (x == '0')) * i * (len(a) - i + 1)\n    print(r)", "I = input\nfor _ in range(int(I())):\n    n = int(I())\n    lst = list(map(int, I().split()))\n    (res, pre) = (0, 0)\n    for (i, n) in enumerate(lst):\n        pre += (1 + (n == 0)) * (i + 1)\n        res += pre\n    print(res)", "import math\nt = int(input())\nwhile t > 0:\n    t -= 1\n    ans = 0\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    stack = [0]\n    stack2 = []\n    gt = 0\n    for i in range(0, len(a)):\n        if a[i] == 0:\n            gt = 2\n        if a[i] != 0:\n            gt = 1\n        stack.append(gt + stack[-1])\n    x = 0\n    td = int(n // 2) + 1\n    for i in range(0, td):\n        stack2.append(stack[len(stack) - 1 - x] - stack[0 + x])\n        x += 1\n    hs = n\n    for i in stack2:\n        ans += i * hs\n        hs -= 2\n    print(ans)", "def read_single_num():\n    return int(input())\n\ndef read_nums():\n    return list(map(int, input().split()))\nt = read_single_num()\nfor i in range(t):\n    n = read_single_num()\n    arr = read_nums()\n    answer = 0\n    for i in range(1, n + 1):\n        answer += i * (n - i + 1)\n    for (idx, x) in enumerate(arr):\n        if x == 0:\n            answer += (idx + 1) * (n - idx)\n    print(answer)", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    n = int(inp())\n    a = list(map(int, inp().split()))\n    p = [0] * (n + 1)\n    for i in range(n):\n        p[i + 1] = p[i] + int(a[i] == 0)\n    s = 0\n    r = 0\n    for i in range(n):\n        for j in range(i + 1):\n            r += p[i + 1] - p[j] + i - j + 1\n    print(r)\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    arr = [0] * n\n    for i in range(n):\n        if lst[i] == 0:\n            arr[i] = 1\n    ans = 0\n    for i in range(n):\n        for j in range(i, n):\n            ans += sum(arr[i:j + 1]) + (j - i + 1)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    res = 0\n    for i in range(1, n + 1):\n        res = res + i * (n - i + 1)\n    for i in range(n):\n        if lst[i] == 0:\n            res = res + (i + 1) * (n - i)\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    answer = 0\n    for i in range(n):\n        ans = 0\n        for j in range(i, n):\n            if arr[j] == 0:\n                ans += 1\n            ans += 1\n            answer += ans\n    print(answer)", "import math\n\ndef modFact(n, p):\n    if n >= p:\n        return 0\n    result = 1\n    for i in range(1, n + 1):\n        result = result * i % p\n    return result\n\ndef input_int():\n    return int(input())\n\ndef input_multiple():\n    return map(int, input().split())\n\ndef cost(a, n):\n    if n < 1:\n        return 0\n    sum = n\n    for i in a:\n        if i == 0:\n            sum += 1\n    return sum\nt = input_int()\nwhile t > 0:\n    n = input_int()\n    a = list(input_multiple())\n    sum = 0\n    for i in range(n + 1):\n        for j in range(i):\n            sum += cost(a[j:i], i - j)\n    print(sum)\n    t -= 1", "def get_best_mex(arr):\n    return len(arr) + arr.count(0)\n\ndef get_weight(arr):\n    final_sum = 0\n    l = 0\n    while l < len(arr):\n        r = l + 1\n        while r < len(arr) + 1:\n            current_sub_section = arr[l:r]\n            final_sum += get_best_mex(current_sub_section)\n            r += 1\n        l += 1\n    return final_sum\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(get_weight(arr))", "def bst(a):\n    c = 0\n    for i in range(len(a)):\n        if a[i] == 0:\n            c = c + 1\n    return c * 2 + len(a) - c\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    for j in range(1, len(a) + 1):\n        for k in range(len(a) - j + 1):\n            c = c + bst(a[k:k + j])\n    print(c)", "def solve(arr):\n    arr.sort()\n    if arr[0] == 0:\n        return len(arr) + arr.count(0)\n    else:\n        return len(arr)\nfor _ in range(int(input())):\n    n = int(input())\n    s = [int(i) for i in input().split()]\n    ans = 0\n    for i in range(n, -1, -1):\n        for j in range(0, i):\n            ans += solve(s[j:i])\n    print(ans)", "def AbhiSolveKiya(n, a):\n    ans = 0\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            b = a[i:j]\n            zeros = b.count(0)\n            ans += len(b) + zeros\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(AbhiSolveKiya(n, l))", "n = int(input())\n\ndef card(n):\n    ctr = 0\n    for i in range(1, n + 1):\n        ctr += i * (n + 1 - i)\n    return ctr\n\ndef zer(j, l):\n    ctr = 0\n    for ll in range(1, l + 1):\n        first = max(0, j + 1 - ll)\n        last = min(l - 1, j - 1 + ll)\n        ctr += last - first - ll + 2\n    return ctr\nfor i in range(n):\n    l = int(input())\n    A = [int(c) for c in input().split(' ')]\n    ctr = card(l)\n    for (j, a) in enumerate(A):\n        if a == 0:\n            ctr += zer(j, l)\n    print(ctr)", "from math import ceil, log2, floor, sqrt, gcd\nfrom collections import defaultdict, deque\nfrom bisect import bisect_left\nfrom collections import defaultdict\nimport sys\nimport os.path\nsys.setrecursionlimit(200000)\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r+')\n    sys.stdout = open('output.txt', 'w')\n\ndef MI():\n    return map(int, input().split())\nmod = 10 ** 9 + 7\n\ndef solve(testcase):\n    n = int(input())\n    a = list(MI())\n    d = defaultdict(int)\n    for i in a:\n        d[i] += 1\n    c = 0\n    ans = 0\n    for i in range(n):\n        for j in range(i, n):\n            ans += j - i + 1\n            for k in range(i, j + 1):\n                ans += a[k] == 0\n    print(ans)\nt = int(input())\nfor _ in range(t):\n    solve(_ + 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = n\n    for i in range(1, len(a)):\n        ans += i * (n - i + 1)\n    for i in range(len(a)):\n        if a[i] == 0:\n            ans += (i + 1) * (n - i)\n    print(ans)", "import sys\ninput = sys.stdin.readline\n\ndef solve(n, arr):\n    res = 0\n    for i in range(n):\n        (p, q) = (0, 0)\n        for j in range(i, n):\n            if not arr[j]:\n                p += 1\n            q += j - i + 1\n            q += p\n        res += q\n    return res\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(solve(n, arr))", "t = int(input())\nfor test_case in range(t):\n    n = int(input())\n    tally = n * (n + 1) * (n + 2) // 6\n    for (i, a) in enumerate(map(int, input().split())):\n        if a == 0:\n            tally += (i + 1) * (n - i)\n    print(tally)", "def mex(nList):\n    nList = set(nList)\n    mex = 0\n    while mex in nList:\n        mex += 1\n    return mex\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        occ = (n - i) * (i + 1)\n        m = mex([a[i]])\n        ans += (m + 1) * occ\n    print(ans)", "import sys\n\ndef rall():\n    return sys.stdin.readlines()\n\ndef rl():\n    return sys.stdin.readline().strip()\n\ndef rl_types(types):\n    str_list = [x for x in sys.stdin.readline().strip().split(' ')]\n    return [types[i](str_list[i]) for i in range(len(str_list))]\n\ndef pr(something=''):\n    sys.stdout.write(str(something) + '\\n')\n\ndef pra(array):\n    sys.stdout.write(' '.join([str(x) for x in array]) + '\\n')\n\ndef solve(array):\n    return array\nNT = int(rl())\nfor ti in range(NT):\n    _ = rl()\n    array = list(map(int, rl().split(' ')))\n    n = len(array)\n    total = 0\n    for i in range(n):\n        pts = 2 if array[i] == 0 else 1\n        num_segs = (i + 1) * (n - i)\n        total += pts * num_segs\n    pr(total)", "t = int(input())\n\ndef funk(n, tab):\n    if '0' in tab:\n        return len(tab) + tab.count('0')\n    else:\n        return len(tab)\nfor i in range(t):\n    n = int(input())\n    temp = input().split()\n    e = 0\n    for j in range(1, n + 1):\n        for k in range(n - j + 1):\n            e += funk(n, temp[k:k + j])\n    print(e)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    count = 0\n    tmp = 0\n    zero_idx = 0\n    for i in range(N):\n        tmp += i + 1\n        count += tmp\n        if arr[i] == 0:\n            zero_idx += i + 1\n        count += zero_idx\n    print(count)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for j in range(1, n + 1):\n        for k in range(n - j + 1):\n            x = a[k:k + j]\n            if 0 in x:\n                ans += j + x.count(0)\n            else:\n                ans += j\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    m = list(map(int, input().split()))\n    s = 0\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            s += j - i + m[i:j].count(0)\n    print(s)", "def solve(n, a):\n    total = 0\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            total += j - i + a[i:j].count(0)\n    print(total)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    solve(n, a)", "for _ in range(0, int(input())):\n    n = int(input())\n    v = list(map(int, input().split()))\n    s = 0\n    for i in range(0, n):\n        for j in range(i + 1, n + 1):\n            x = v[i:j]\n            s += x.count(0) + len(x)\n    print(s)", "for i in range(int(input())):\n    n = int(input())\n    A = [int(k) for k in input().split()]\n    m = 0\n    d = []\n    for k in range(n):\n        for j in range(k, n):\n            d.append(A[k:j + 1])\n    for k in range(len(d)):\n        m += len(d[k])\n        if 0 in d[k]:\n            m += d[k].count(0)\n    print(m)", "def find(arr):\n    result = 0\n    for i in range(len(arr)):\n        for j in range(len(arr) - i):\n            window = arr[j:j + i + 1]\n            count = len(window)\n            for k in range(len(window)):\n                if window[k] == 0:\n                    count += 1\n            result += count\n    return result\nnum = int(input())\nfor i in range(num):\n    n = input()\n    arr = [int(x) for x in input().split()]\n    print(find(arr))", "t = int(input())\n\ndef mex(l):\n    n = len(l)\n    if n <= 1 and 0 not in l:\n        return n\n    zc = 0\n    for i in l:\n        if i == 0:\n            zc += 1\n    return n + zc\n\ndef sub_lists(l):\n    lists = [[]]\n    for i in range(len(l) + 1):\n        for j in range(i):\n            lists.append(l[j:i])\n    return lists\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = sub_lists(a)\n    tc = 0\n    for i in l:\n        tc += mex(i)\n    print(tc)", "import sys\ninp = [a.strip() for a in sys.stdin.readlines()]\nt = int(inp[0])\nk = 1\nfor _ in range(t):\n    n = int(inp[k])\n    k += 1\n    l = [int(x) for x in inp[k].split()]\n    k += 1\n    dp = [0 for i in range(n)]\n    dp_0 = [0 for i in range(n)]\n    if l[0] == 0:\n        dp[0] = 2\n        dp_0[0] = 1\n    else:\n        dp[0] = 1\n    for i in range(1, len(l)):\n        dp[i] = dp[i - 1] + int((i + 1) * (i + 2) / 2)\n        if l[i] == 0:\n            dp_0[i] = dp_0[i - 1] + i + 1\n        else:\n            dp_0[i] = dp_0[i - 1]\n        dp[i] += dp_0[i]\n    print(dp[-1])", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    t = 0\n    xor = 0\n    j = 0\n    for i in l:\n        if i == 0:\n            xor = 2\n        else:\n            xor = 1\n        t += (n - j) * (j + 1) * xor\n        j += 1\n    print(t)", "t = int(input())\n\ndef solve(ar):\n    n = len(ar)\n    res = 0\n    for i in range(n):\n        (nz, tmp) = (0, 0)\n        for j in range(i, n):\n            nz += int(ar[j] == 0)\n            tmp += j - i + 1 + nz\n        res += tmp\n    return res\nfor _ in range(t):\n    n = int(input())\n    s = list(map(int, input().split()))\n    print(solve(s))", "for _ in range(0, int(input())):\n    n = int(input())\n    mylist = list(map(int, input().split()))\n    sum2 = 0\n    for i in range(0, n):\n        if mylist[i] == 0:\n            sum2 = sum2 + (i + 1) * (n - (i + 1) + 1)\n    sum1 = n * (n + 1) * (n + 2) / 6\n    print(int(sum1 + sum2))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dic = {0: []}\n    for i in range(len(a)):\n        if a[i] == 0:\n            dic[0].append(i)\n    Sum = 0\n    for i in range(n, 0, -1):\n        x = i * (i + 1) // 2\n        Sum += x\n    for i in range(len(dic[0])):\n        if dic[0][i] == 0 or dic[0][i] == n - 1:\n            Sum += n\n        else:\n            x = dic[0][i]\n            Sum += x + n - x + x * (n - 1 - x)\n    print(Sum)", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    n = int(input())\n    a = input().split()\n    ans = n * (n + 1) * (n + 2) / 6\n    ans = int(ans)\n    for i in range(0, n):\n        a[i] = int(a[i])\n        if a[i] == 0:\n            ans = ans + (i + 1) * (n - i)\n    print(ans)", "n = int(input())\nfor j in range(0, n):\n    cnt = 0\n    ans = 0\n    a = int(input())\n    nums = list(map(int, input().split()))\n    for i in range(0, a):\n        if nums[i] == 0:\n            cnt = cnt + (i + 1) * (a - i)\n    ans = ans + cnt\n    for i in range(1, a + 1):\n        k = i * (a + 1 - i)\n        ans = ans + k\n    print(ans)", "from collections import Counter, deque, defaultdict\nfrom itertools import accumulate, product, groupby\nimport operator\nimport math\nfrom functools import reduce\n\ndef solve():\n    n = int(input())\n    arr = [int(char) for char in input().split()]\n    ans = 0\n    for i in range(n):\n        cnt = 0\n        for j in range(i, n):\n            if not arr[j]:\n                cnt += 1\n            ans += j - i + 1 + cnt\n    return ans\nfor _ in range(int(input())):\n    print(solve())", "def solve(l, idx_l, idx_r):\n    cnt = 0\n    for i in range(idx_l, idx_r):\n        if l[i] == 0:\n            cnt += 1\n    return cnt + idx_r - idx_l\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            ans += solve(a, i, j)\n    print(ans)", "def maxMex(arr):\n    tempArr = [2 if arr[i] == 0 else 1 for i in range(len(arr))]\n    s = 0\n    for i in range(len(arr)):\n        for j in range(i, len(arr)):\n            s += sum(tempArr[i:j + 1])\n    return s\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(maxMex(arr))", "def value(l):\n    return len(l) + l.count('0')\nfor _ in range(int(input())):\n    n = int(input())\n    l = input().split(' ')\n    count = 0\n    for i in range(n):\n        for j in range(len(l), 0, -1):\n            count += value(l[:j])\n        l = l[1:]\n    print(count)", "a = int(input())\nfor x in range(a):\n    b = int(input())\n    c = list(map(int, input().split()))\n    s = []\n    for y in range(b):\n        if y == 0:\n            if c[y] == 0:\n                s.append(1)\n            else:\n                s.append(0)\n        elif c[y] == 0:\n            s.append(s[y - 1] + 1)\n        else:\n            s.append(s[y - 1])\n    j = 0\n    for y in range(b):\n        l = 1\n        for z in range(y, b):\n            if y == 0:\n                j += s[z] + l\n            else:\n                j += s[z] - s[y - 1] + l\n            l += 1\n    print(j)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    s = 1\n    for i in range(n):\n        f = 0\n        for j in range(n):\n            cl = l[f:f + s]\n            zeros = cl.count(0)\n            ans += len(cl) + zeros\n            f += 1\n        n -= 1\n        s += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    s = 1\n    for i in range(n):\n        f = 0\n        for j in range(n):\n            cl = l[f:f + s]\n            zeros = cl.count(0)\n            ans += len(cl) + zeros\n            f += 1\n        n -= 1\n        s += 1\n    print(ans)", "n = int(input())\nwhile n:\n    n -= 1\n    b = int(input())\n    l = list(map(int, input().split(' ')))\n    lBig = []\n    for i in range(b):\n        for j in range(i + 1, b + 1):\n            lBig += [l[i:j]]\n    ans = 0\n    for i in lBig:\n        ans += len(i) + i.count(0) * 1\n    print(ans)", "t = int(input())\nfor it in range(t):\n    n = int(input())\n    a = [int(j) for j in input().split(' ')]\n    b = []\n    for i in range(n):\n        if a[i] == 0:\n            b.append(i)\n    s = (n + 1) * n * (n + 2) // 6\n    for i in b:\n        for k in range(1, n + 1):\n            s += k + min(n - k - i, 0) + min(i + 1 - k, 0)\n    print(s)", "import sys\nimport bisect\ninp = sys.stdin.readline\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\nfor _ in range(int(inp())):\n    n = int(inp())\n    ans = 0\n    a = [int(i) for i in inp().split()]\n    for i in range(n):\n        c = 0\n        for j in range(i, n):\n            if a[j] == 0:\n                c += 1\n            ans += j - i + 1 + c\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    ans = 0\n    for i in range(n):\n        ans += (i + 1) * (n - i)\n        if l[i] == 0:\n            ans += (i + 1) * (n - i)\n    print(ans)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    A = [int(d) for d in input().split()]\n    ans = 0\n    for a in range(1, n + 1):\n        ans += int(a * (a + 1) / 2)\n    for a in range(n):\n        if A[a] == 0:\n            ans += (a + 1) * (n - a)\n    print(ans)", "def solve():\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        for j in range(1, n + 1):\n            if i + j > n:\n                break\n            temp = l[i:i + j]\n            ans += len(temp) + temp.count(0)\n    print(ans)\nt = int(input())\nfor _ in range(t):\n    solve()", "import math\n\ndef intlist():\n    return [int(i) for i in input().split(' ')]\n\ndef stringlsit():\n    return input().split(' ')\n\ndef solve():\n    n = int(input())\n    a = intlist()\n    ans = 0\n    for i in range(n):\n        if a[i] == 0:\n            k = 2\n        else:\n            k = 1\n        ans += k * (i + 1) * (n - i)\n    return ans\nt = input()\nfor tt in range(int(t)):\n    print(solve())", "import sys\nfrom itertools import combinations\ninput = sys.stdin.readline\nMAX = sys.maxsize\nsys.setrecursionlimit(10 ** 9)\n\ndef inp():\n    return int(input())\n\ndef read_int_list():\n    return list(map(int, input().split()))\n\ndef read_list():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef read_int_map():\n    return map(int, input().split())\n\ndef sub_segments(a):\n    return [a[x:y] for (x, y) in combinations(range(len(a) + 1), r=2)]\n\ndef compute(a):\n    zeros = 0\n    for value in a:\n        if value == 0:\n            zeros += 1\n    return len(a) + zeros\n\ndef solve(a):\n    return sum([compute(s) for s in sub_segments(a)])\nfor _ in range(inp()):\n    _ = inp()\n    print(solve(read_int_list()))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    prefix = [0] * n\n    prefix[0] = 0\n    if a[0] == 0:\n        prefix[0] = 1\n    for i in range(1, n, 1):\n        if a[i] == 0:\n            prefix[i] = prefix[i - 1] + 1\n        else:\n            prefix[i] = prefix[i - 1]\n    ans = 0\n    for i in range(1, n, 1):\n        for j in range(i, n):\n            ans += prefix[j] - prefix[i - 1] + j - i + 1\n    for i in range(n):\n        ans += prefix[i] + i + 1\n    print(ans)", "def main():\n    t = int(input())\n    ans = []\n    for _ in range(t):\n        n = int(input())\n        a = [int(s) for s in input().split()]\n        nums_0 = [0] * (n + 1)\n        for i in range(n):\n            nums_0[i + 1] = nums_0[i] + 1 if a[i] == 0 else nums_0[i]\n        res = 0\n        for l in range(1, n + 1):\n            for s in range(0, n - l + 1):\n                left = s\n                right = s + l\n                res += l + nums_0[right] - nums_0[left]\n        ans.append(res)\n    print('\\n'.join([str(x) for x in ans]))\nmain()", "import sys\ninput = sys.stdin.readline\nT = int(input())\nwhile T:\n    Nbase = int(input())\n    baseArr = [int(x) for x in input().split()]\n    total = 0\n\n    def calc(N):\n        cnt = 0\n        for num in arr:\n            if num == 0:\n                cnt += 1\n        return N - cnt + cnt * 2\n    for subSeg in range(1, Nbase + 1):\n        for offset in range(Nbase - subSeg + 1):\n            tempAns = -float('inf')\n            arr = baseArr[offset:offset + subSeg]\n            total += calc(subSeg)\n    print(total)\n    T -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    items = list(map(int, input().split()))\n    res: int = 0\n    for i in range(n):\n        zero: int = 0\n        for j in range(i, n):\n            if items[j] == 0:\n                zero += 1\n            res += j - i + 1 + zero\n    print(res)", "def dp(indZero, indNex):\n    Ar = [indZero, indNex]\n    qX = 0\n    for j in Ar:\n        qX += j + indZero\n    return indNex * indZero\nbox = [dp]\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = [int(x) for x in input().split(' ')]\n    R = 1\n    sub_segment = 0\n    for L in range(n):\n        p = L + R\n        q = n - L\n        sub_segment += dp(p, q)\n        if a[L] == 0:\n            sub_segment += dp(p, q)\n    print(sub_segment)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        for j in range(i, n):\n            ans += j - i + 1\n            for k in range(i, j + 1):\n                if l[k] == 0:\n                    ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    z = list(map(int, input().split()))\n    x = 0\n    for i in range(n):\n        if z[i] == 0:\n            x += 2 * (n - i) * (i + 1)\n        else:\n            x += (n - i) * (i + 1)\n    print(x)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        if a[i] == 0:\n            c = c + (i + 1) * (n - i)\n    print(c + n * (n + 1) * (n + 2) // 6)", "def deb(n):\n    if n < 1:\n        return 0\n    else:\n        return int((n + 1) / 2 * n)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    y = 0\n    for i in range(n):\n        y += (i + 1) * (n - i)\n    r = 0\n    for i in range(n // 2 + n % 2):\n        r += n - i - 1\n        if a[i] == 0:\n            y += r + 1 - deb(i - 1)\n        if i != n - i - 1:\n            if a[n - i - 1] == 0:\n                y += r + 1 - deb(i - 1)\n    print(y)", "def mex(a):\n    zc = 0\n    for i in a:\n        if i == 0:\n            zc += 1\n    return len(a) + zc\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    for i in range(len(arr)):\n        for j in range(len(arr) - 1, -1, -1):\n            ans += mex(arr[i:j + 1])\n    print(ans)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    numbers = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        for j in range(i, n):\n            arrray = numbers[i:j + 1]\n            ans += len(arrray)\n            ans += arrray.count(0)\n    print(ans)", "def gg(x):\n    p = 0\n    for a in x:\n        if a == 0:\n            p = p + 1\n    return p\nI = lambda : list(map(int, input().split()))\nfor _ in range(int(input())):\n    n = int(input())\n    a = I()\n    dd = 0\n    for l in range(1, n + 1, 1):\n        for s in range(0, n - l + 1):\n            x = a[s:l + s]\n            dd = dd + l + gg(x)\n    print(dd)", "def F(rr):\n    s = 0\n    for i in rr:\n        if i == 0:\n            s += 1\n        s += 1\n    return s\nfor i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    OTBET = 0\n    for left in range(n):\n        for right in range(left, n):\n            OTBET += F(arr[left:right + 1])\n    print(OTBET)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [0] * n\n    for j in range(n):\n        for k in range(j, n):\n            if a[k] == 0:\n                dp[j] += n - k\n    result = 0\n    for j in range(n):\n        result += (n - j) * (n - j + 1) // 2 + dp[j]\n    print(result)", "for s in [*open(0)][2::2]:\n    a = s.split()\n    r = i = 0\n    for x in a:\n        i += 1\n        r += (1 + (x == '0')) * i * (len(a) - i + 1)\n    print(r)", "def max(array):\n    count = 0\n    for i in array:\n        if i == 0:\n            count += 2\n        else:\n            count += 1\n    return count\nfor a in range(int(input())):\n    l = int(input())\n    array = list(map(int, input().split()))\n    maximum = 0\n    for i in range(l):\n        for j in range(i + 1, l + 1):\n            maximum += max(array[i:j])\n    print(maximum)", "def max(array):\n    count = 0\n    for i in array:\n        if i == 0:\n            count += 2\n        else:\n            count += 1\n    return count\nfor line in [*open(0)][2::2]:\n    array = list(map(int, line.split()))\n    maximum = 0\n    for i in range(len(array)):\n        for j in range(i + 1, len(array) + 1):\n            maximum += max(array[i:j])\n    print(maximum)", "for _ in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    i = 1\n    s = 0\n    while i < a + 1:\n        j = i\n        k = 1\n        while j < a + 1:\n            s += b[i - 1:j].count(0) + k\n            j += 1\n            k += 1\n        i += 1\n    print(s)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    ans = 0\n    for i in range(n):\n        if i <= (n - 1) // 2:\n            dis = i + 1\n            count = i * (i + 1)\n            count += dis * (n - 2 * i)\n            if l[i] == 0:\n                ans += count * 2\n            else:\n                ans += count\n        else:\n            dis = n - i\n            count = (dis - 1) * dis\n            count += dis * (n - 2 * (dis - 1))\n            if l[i] == 0:\n                ans += 2 * count\n            else:\n                ans += count\n    print(ans)\n    t = t - 1", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))[:n]\n    ans = n * (n + 1) * (n + 2) // 6\n    for i in range(1, n + 1):\n        if arr[i - 1] == 0:\n            ans = ans + i * (n - i + 1)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n    res = 0\n    for j in range(n):\n        res += (j + 1) * (n - j)\n        if a[j] == 0:\n            res += (j + 1) * (n - j)\n    print(res)", "for s in [*open(0)][2::2]:\n    a = s.split()\n    r = i = 0\n    for x in a:\n        i += 1\n        r += (1 + (x == '0')) * i * (len(a) - i + 1)\n    print(r)", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    result = 0\n    listD = [int(x) for x in input().split(' ')]\n    for start in range(n):\n        counterZero = 0\n        for end in range(start, n, 1):\n            if listD[end] == 0:\n                counterZero += 1\n            value = counterZero * 2 + (end - start + 1 - counterZero)\n            result += value\n    print(result)", "import math\nimport collections\nimport itertools\nimport functools\n\ndef fun(t):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    ans = 0\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            temp = arr[i:j]\n            ans += len(temp)\n            for a in temp:\n                if a == 0:\n                    ans += 1\n    print(ans)\nfor tc in range(int(input())):\n    fun(tc)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    ans = 0\n    for i in range(n):\n        ans += (n - i) * (n - i + 1) // 2\n        if l[i] == 0:\n            ans += (i + 1) * (n - i)\n    print(ans)"]