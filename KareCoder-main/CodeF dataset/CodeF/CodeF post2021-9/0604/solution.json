["from math import sqrt\n\ndef primeCheck(n):\n    t = 0\n    if n == 1:\n        return True\n    if n > 1:\n        for i in range(2, int(sqrt(n)) + 1):\n            if n % i == 0:\n                t = 1\n                break\n        if t == 0:\n            return True\n        else:\n            return False\n    else:\n        return False\nT = int(input())\nfor t in range(T):\n    (x, d) = map(int, input().split())\n    cout = 0\n    while x > 0 and x % d == 0:\n        cout += 1\n        x //= d\n    if cout > 1 and (not primeCheck(x)):\n        print('YES')\n    elif cout > 2 and (not primeCheck(d)):\n        res = False\n        i = 2\n        while i <= int(sqrt(d)):\n            if d % i == 0:\n                if x * i % d:\n                    res = True\n                    break\n                else:\n                    if x * i % d:\n                        res = True\n                        break\n                    if x * (d // i) % d:\n                        res = True\n                        break\n            i += 1\n        if res or cout > 3:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "from sys import stdin\nimport math\nfrom collections import deque\nfrom heapq import heapify, heappop, heappush\nfrom bisect import bisect_left, bisect_right\ninput = stdin.readline\n\ndef ceil(m, n):\n    val = m // n\n    if m % n != 0:\n        return val + 1\n    return val\n\ndef isprime(v):\n    if v == 1:\n        return True\n    for i in range(2, int(math.sqrt(v)) + 1):\n        if v % i == 0:\n            return False\n    return True\nfor _ in range(int(input())):\n    (x, d) = map(int, input().split())\n    (temp, times) = (x, 0)\n    while temp % d == 0:\n        times += 1\n        temp //= d\n    if times <= 1:\n        print('NO')\n        continue\n    if times == 2:\n        if not isprime(temp):\n            print('YES')\n        else:\n            print('NO')\n        continue\n    if not isprime(temp):\n        print('YES')\n    elif isprime(d):\n        print('NO')\n    elif d == temp ** 2 and times == 3:\n        print('NO')\n    else:\n        print('YES')", "def isPrime(n):\n    if n == 1:\n        return True\n    if n < 2:\n        return False\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef factor(n):\n    ans = []\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            ans.append(i)\n            ans.append(n // i)\n    return ans\nfor lkdl in range(int(input())):\n    (x, d) = map(int, input().split())\n    c = 0\n    while x % d == 0:\n        x = x // d\n        c += 1\n    if c == 1:\n        print('NO')\n    elif isPrime(x):\n        if isPrime(d):\n            print('NO')\n        elif c == 2:\n            print('NO')\n        elif c >= 4:\n            print('YES')\n        else:\n            f = factor(d)\n            ans = 'NO'\n            for i in f:\n                if i * d * x % (d * d) != 0:\n                    ans = 'YES'\n                    break\n            print(ans)\n    else:\n        print('YES')", "import sys\nfrom math import sqrt, gcd, factorial\nfrom collections import deque, Counter, OrderedDict\nsys.setrecursionlimit(10 ** 6)\ninput = lambda : sys.stdin.readline()\nI = lambda : int(input())\nS = lambda : input().strip()\nM = lambda : map(int, input().strip().split())\nL = lambda : list(map(int, input().strip().split()))\nmod = 1000000007\n\ndef isPrime(n):\n    flag = 0\n    if n == 1:\n        return True\n    if n > 1:\n        for i in range(2, int(sqrt(n)) + 1):\n            if n % i == 0:\n                flag = 1\n                break\n        if flag == 0:\n            return True\n        else:\n            return False\n    else:\n        return False\n\ndef solver(n):\n    global ans\n    i = 2\n    while i <= int(sqrt(n)):\n        if n % i == 0:\n            if x * i % d:\n                ans = True\n                break\n            else:\n                if x * i % d:\n                    ans = True\n                    break\n                if x * (n // i) % d:\n                    ans = True\n                    break\n        i += 1\nfor _ in range(I()):\n    (x, d) = M()\n    c = 0\n    while x > 0 and x % d == 0:\n        c += 1\n        x //= d\n    if c > 1 and (not isPrime(x)):\n        print('YES')\n    elif c > 2 and (not isPrime(d)):\n        ans = False\n        solver(d)\n        if ans or c > 3:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "import math\n\ndef isprime(n):\n    sq = int(math.sqrt(n))\n    i = 2\n    while i <= sq:\n        if n % i == 0:\n            return False\n        i += 1\n    return True\n\ndef check(x):\n    cnt = 1\n    while x % d == 0:\n        cnt += 1\n        x /= d\n    return cnt <= 2\nT = int(input())\nfor _ in range(T):\n    (x, d) = list(map(int, input().split()))\n    (p, tmp) = (0, x)\n    while tmp % d == 0:\n        p += 1\n        tmp /= d\n    if p <= 1:\n        print('NO')\n        continue\n    if not isprime(d):\n        if p >= 4:\n            print('YES')\n            continue\n    (cnt, val) = (0, -1)\n    i = 2\n    while i * i <= tmp:\n        while tmp % i == 0:\n            cnt += 1\n            val = i\n            tmp /= i\n        i += 1\n    if tmp != 1:\n        val = tmp\n        cnt += 1\n    if cnt >= 2:\n        print('YES')\n        continue\n    if isprime(d):\n        print('NO')\n        continue\n    if p == 2:\n        print('NO')\n        continue\n    if cnt == 0:\n        print('YES')\n        continue\n    fk = 0\n    for i in range(2, d):\n        if d % i == 0:\n            (v1, v2) = (d * val * i, d * (d / i))\n            if check(v1) and check(v2):\n                print('YES')\n                fk = 1\n                break\n            (v1, v2) = (d * val * (d / i), d * i)\n            if check(v1) and check(v2):\n                print('YES')\n                fk = 1\n                break\n    if fk == 0:\n        print('NO')", "def prime(n):\n    if n % 2 == 0 and n != 2:\n        return False\n    for i in range(3, int(n ** 0.5 + 1), 2):\n        if n % i == 0:\n            return False\n    return True\nfor _ in range(int(input())):\n    (x, d) = map(int, input().split())\n    ans = 0\n    while x % d == 0:\n        ans += 1\n        x //= d\n    if ans == 1:\n        print('NO')\n    elif ans == 2:\n        if prime(x):\n            print('NO')\n        else:\n            print('YES')\n    elif prime(x) and prime(d):\n        print('NO')\n    elif prime(x) and ans == 3 and (d == x ** 2):\n        print('NO')\n    else:\n        print('YES')", "import math\n\ndef primFrac(n):\n    num = 2\n    primFac = []\n    while num * num <= n:\n        while n % num == 0:\n            primFac.append(num)\n            n = n / num\n        num = num + 1\n    if n > 1:\n        primFac.append(n)\n    return primFac\n\ndef first(x, d):\n    counter = 0\n    while x % d == 0:\n        x /= d\n        counter += 1\n    return (counter, int(x))\n\ndef is_prime(n):\n    if n == 1:\n        return True\n    for i in range(2, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef answer(x, d, list, counter1, counter, d_list, d_len, new_x):\n    if counter == 1:\n        print('NO')\n    elif not is_prime(new_x):\n        print('YES')\n    elif counter < 3:\n        print('NO')\n    elif is_prime(d):\n        print('NO')\n    elif counter == 3 and d % new_x == 0 and (int(d / new_x) == new_x):\n        print('NO')\n    else:\n        print('YES')\nnumber = int(input())\nfor i in range(number):\n    (x, d) = input().split()\n    (x, d) = (int(x), int(d))\n    (counter, new_x) = first(x, d)\n    list = primFrac(new_x)\n    counter1 = len(list)\n    d_list = primFrac(d)\n    d_len = len(d_list)\n    answer(x, d, list, counter1, counter, d_list, d_len, new_x)", "from math import sqrt\n\ndef prime(a):\n    for i in range(2, int(sqrt(a)) + 1):\n        if a % i == 0:\n            return False\n    return True\nfor _ in range(int(input())):\n    (x, d) = map(int, input().strip().split())\n    co = True\n    n = 1\n    for i in range(2, 31):\n        if x % d ** i == 0:\n            n = i\n        elif d ** i > x:\n            break\n    p = x // d ** min(n, 2)\n    q = x // d ** n\n    if n == 1:\n        co = False\n    elif n == 2:\n        if prime(p):\n            co = False\n    elif n == 3:\n        if prime(q) == False:\n            co = True\n        elif prime(d):\n            co = False\n        elif sqrt(d) == q and prime(sqrt(d)):\n            co = False\n    elif prime(q) == False:\n        co = True\n    elif prime(d):\n        co = False\n    if co:\n        print('YES')\n    else:\n        print('NO')", "from math import sqrt\n\ndef prime(a):\n    for i in range(2, int(sqrt(a)) + 1):\n        if a % i == 0:\n            return False\n    return True\nfor _ in range(int(input())):\n    (x, d) = map(int, input().strip().split())\n    co = True\n    n = 1\n    for i in range(2, 31):\n        if x % d ** i == 0:\n            n = i\n        elif d ** i > x:\n            break\n    p = x // d ** min(n, 2)\n    q = x // d ** n\n    if n == 1:\n        co = False\n    elif n == 2:\n        if prime(p):\n            co = False\n    elif n == 3:\n        if prime(q) == False:\n            co = True\n        elif prime(d):\n            co = False\n        elif sqrt(d) == q and prime(sqrt(d)):\n            co = False\n    elif prime(q) == False:\n        co = True\n    elif prime(d):\n        co = False\n    if co:\n        print('YES')\n    else:\n        print('NO')", "def isPrime(n):\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            return i\n    return -1\n\ndef is_Power(x, y):\n    while x % y == 0:\n        x = x / y\n    return x == 1\nt = int(input())\n\ndef isBeautiful(n, x):\n    return n % x == 0 and n % x ** 2 != 0\nfor i in range(t):\n    (x, d) = input().split(' ')\n    x = int(x)\n    d = int(d)\n    count = 0\n    while x % d == 0:\n        count += 1\n        x //= d\n    if count < 2:\n        print('NO')\n    else:\n        if isPrime(x) != -1:\n            print('YES')\n            continue\n        if isPrime(d) != -1 and isPrime(d) * isPrime(d) == d:\n            if x == isPrime(d) and count == 3:\n                print('NO')\n                continue\n        if count > 2 and isPrime(d) != -1:\n            print('YES')\n            continue\n        print('NO')"]