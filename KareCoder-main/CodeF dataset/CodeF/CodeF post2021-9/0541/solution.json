["def prime(x):\n    return all((x % i for i in range(2, min(x, int(x ** 0.5) + 5))))\npr = [x for x in range(2, 1001) if prime(x)]\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = sorted(a)\n    if any((b[i] == b[i + 1] for i in range(n - 1))):\n        print('NO')\n        continue\n    ok = True\n    for x in pr:\n        if x > n:\n            break\n        rm = [False] * x\n        for t in a:\n            rm[t % x] += 1\n        if all((y > 1 for y in rm)):\n            ok = False\n            break\n    print('YES' if ok else 'NO')", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    isSuccess = True\n    for i in range(1, n):\n        if a[i - 1] == a[i]:\n            print('NO')\n            isSuccess = False\n            break\n    if not isSuccess:\n        continue\n    for x in range(2, int(n // 2) + 1):\n        cnt = [0 for i in range(x)]\n        for i in range(n):\n            cnt[a[i] % x] += 1\n        isLowThan2 = False\n        for i in range(x):\n            if cnt[i] < 2:\n                isLowThan2 = True\n        if not isLowThan2:\n            print('NO')\n            isSuccess = False\n            break\n    if isSuccess:\n        print('YES')", "k = int(input())\np = [2]\nfor i in range(3, 102):\n    t = True\n    for j in range(2, i):\n        if i % j == 0:\n            t = False\n            break\n    if t:\n        p.append(i)\nfor _ in range(k):\n    n = int(input())\n    lst = [int(i) for i in input().split()]\n    e = sum([1 for i in lst if i % 2 == 0])\n    o = len(lst) - e\n    if len(lst) != len(list(set(lst))):\n        print('NO')\n    else:\n        t = True\n        for j in p:\n            f = [0] * j\n            for (i, el) in enumerate(lst):\n                f[el % j] += 1\n            if min(f) >= 2:\n                t = False\n                break\n        if t:\n            print('YES')\n        else:\n            print('NO')", "P = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47]\nfor s in [*open(0)][2::2]:\n    a = [*map(int, s.split())]\n    if len(a) != len({*a}):\n        print('NO')\n        continue\n    for p in P:\n        cnt = [0] * p\n        for x in a:\n            cnt[x % p] += 1\n        if min(cnt) >= 2:\n            print('NO')\n            break\n    else:\n        print('YES')", "from itertools import groupby\nprint(*map(lambda a: ['NO', 'YES'][len(a) == len({*a}) and all((sum((1 for (_, v) in groupby(sorted((x % p for x in a))) if len([*v]) > 1)) < p for p in (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)))], map(lambda s: [*map(int, s.split())], [*open(0)][2::2])), sep='\\n')", "def solve(a, n):\n    a = sorted(a)\n    for j in range(n - 1):\n        if a[j] == a[j + 1]:\n            print('NO')\n            return\n    for m in range(2, int(n / 2) + 3):\n        mod = [0] * m\n        for a_i in a:\n            mod[a_i % m] += 1\n        if min(mod) > 1:\n            print('NO')\n            return\n    print('YES')\nT = int(input())\nfor t in range(T):\n    s = input()\n    n = int(s)\n    a = [int(si) for si in input().split()]\n    solve(a, n)", "for _ in range(int(input())):\n    x = int(input())\n    y = list(map(int, input().split()))\n    z = set(y)\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83]\n    countodd = 0\n    counteven = 0\n    for element in y:\n        if element % 2 == 0:\n            counteven += 1\n        else:\n            countodd += 1\n    if min(countodd, counteven) == 2 or len(y) != len(z):\n        print('NO')\n    else:\n        flag = False\n        for p in primes:\n            if flag:\n                break\n            L = [0] * p\n            for element in y:\n                rem = element % p\n                L[rem] += 1\n            alpha = min(L)\n            if alpha >= 2:\n                flag = True\n        if flag:\n            print('NO')\n        else:\n            print('YES')", "for _ in range(int(input())):\n    x = int(input())\n    y = list(map(int, input().split()))\n    z = set(y)\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47]\n    countodd = 0\n    counteven = 0\n    for element in y:\n        if element % 2 == 0:\n            counteven += 1\n        else:\n            countodd += 1\n    if min(countodd, counteven) == 2 or len(y) != len(z):\n        print('NO')\n    else:\n        flag = False\n        for p in primes:\n            if flag:\n                break\n            L = [0] * p\n            for element in y:\n                rem = element % p\n                L[rem] += 1\n            alpha = min(L)\n            if alpha >= 2:\n                flag = True\n        if flag:\n            print('NO')\n        else:\n            print('YES')", "import sys\n\ndef fn(a, l):\n    repeat_check = set(a)\n    if len(repeat_check) != l:\n        return 'NO'\n    for i in range(2, l):\n        mask = [0] * i\n        for item in a:\n            mask[item % i] += 1\n        if min(mask) >= 2:\n            return 'NO'\n    return 'YES'\ninput = sys.stdin.readlines()\nfor i in range(int(input[0].strip('\\n'))):\n    l = int(input[2 * i + 1].strip('\\n'))\n    a = [int(x) for x in input[2 * i + 2].strip('\\n').split(' ')]\n    print(fn(a, l))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if len(set(a)) != n:\n        print('NO')\n    else:\n        flag = False\n        for i in range(2, n // 2 + 1):\n            ost = [0] * i\n            for j in a:\n                ost[j % i] += 1\n            ans = 0\n            for j in ost:\n                if j > 1:\n                    ans += 1\n            if ans == i:\n                flag = True\n                break\n        if flag:\n            print('NO')\n        else:\n            print('YES')", "tests = int(input())\nfor i in range(tests):\n    length = int(input())\n    arr = list(map(int, input().split()))\n    ans = 'YES'\n    if length != len(set(arr)):\n        ans = 'NO'\n    else:\n        for j in range(2, length // 2 + 1):\n            freq = [0] * j\n            for k in arr:\n                rem = k % j\n                freq[rem] += 1\n            if min(freq) >= 2:\n                ans = 'NO'\n    print(ans)", "from itertools import groupby\nprint(*map(lambda a: ['NO', 'YES'][len(a) == len({*a}) and all((sum((1 for (_, v) in groupby(sorted((x % p for x in a))) if len([*v]) > 1)) < p for p in (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)))], map(lambda s: [*map(int, s.split())], [*open(0)][2::2])), sep='\\n')", "from itertools import groupby\nprint(*map(lambda a: ['NO', 'YES'][len(a) == len({*a}) and all((sum((1 for (_, v) in groupby(sorted((x % p for x in a))) if len([*v]) > 1)) < p for p in (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47)))], map(lambda s: [*map(int, s.split())], [*open(0)][2::2])), sep='\\n')", "t = int(input(''))\nmx = 0\ninputs = []\narrays = []\nfor _ in range(t):\n    n = int(input(''))\n    a = [int(x) for x in input('').split(' ')]\n    inputs.append(n)\n    arrays.append(a)\n    mx = max(mx, n // 2)\np = [1] * (mx + 1)\np[0] = 0\np[1] = 0\ni = 2\nwhile i * i <= mx:\n    if p[i]:\n        j = i * i\n        while j <= mx:\n            p[j] = 0\n            j += i\n    i += 1\nv = [0] * (mx + 1)\nfor s in range(t):\n    n = inputs[s]\n    a = arrays[s]\n    h = set(a)\n    good1 = len(h) == len(a)\n    good2 = True\n    for i in range(n // 2 + 1):\n        if p[i]:\n            for x in a:\n                v[x % i] += 1\n            good3 = False\n            for x in range(i):\n                if v[x % i] <= 1:\n                    good3 = True\n                    break\n            for x in a:\n                v[x % i] -= 1\n            if not good3:\n                good2 = False\n                break\n    print(['NO', 'YES'][good1 and good2])", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if len(set(a)) != n:\n        print('NO')\n    else:\n        flag = False\n        for i in range(2, n // 2 + 1):\n            ost = [0] * i\n            for j in a:\n                ost[j % i] += 1\n            ans = 0\n            for j in ost:\n                if j > 1:\n                    ans += 1\n            if ans == i:\n                flag = True\n                break\n        if flag:\n            print('NO')\n        else:\n            print('YES')", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if len(a) != len({*a}):\n        print('NO')\n        continue\n    ans = True\n    for i in range(2, 55):\n        cnt = [0] * i\n        for x in a:\n            cnt[x % i] += 1\n        if min(cnt) >= 2:\n            ans = False\n    print('YES' if ans else 'NO')", "from collections import Counter as ct\nfrom collections import defaultdict as dd\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    f = 1\n    c = ct(l)\n    for x in c.values():\n        if x >= 2:\n            f = 0\n            break\n    for x in range(2, n + 1):\n        d = dd(int)\n        for y in l:\n            d[y % x] += 1\n        if len(d.keys()) == x:\n            f1 = 0\n            for y in d.values():\n                if y == 1:\n                    f1 = 1\n                    break\n            if f and f1 == 0:\n                f = 0\n        if f == 0:\n            break\n    if f:\n        print('YES')\n    else:\n        print('NO')", "M = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n\ndef g(X):\n    for j in X:\n        if j < 2:\n            return False\n    return True\n\ndef f(L, n):\n    x = 0\n    while x < 25 and M[x] <= n // 2 + 1:\n        x += 1\n    for i in range(x):\n        c = M[i]\n        S = [0] * c\n        for b in L:\n            v = b % c\n            S[v] += 1\n        if g(S):\n            return 'NO'\n    L.sort()\n    for i in range(n - 1):\n        if L[i] == L[i + 1]:\n            return 'NO'\n    return 'YES'\nn = int(input())\nfor i in range(n):\n    x = int(input())\n    L = list(map(int, input().split()))\n    print(f(L, x))", "from collections import defaultdict\nk = int(input())\nprimes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53]\nfor _ in range(k):\n    _ = input()\n    ar = list(map(int, input().split()))\n    ost = defaultdict(lambda : defaultdict(int))\n    if len(ar) > len(set(ar)):\n        print('NO')\n        continue\n    for x in ar:\n        for pr in primes:\n            ost[pr][x % pr] += 1\n    glob = False\n    for pr in primes:\n        if pr * 2 > len(ar):\n            break\n        if len(ost[pr]) < pr:\n            continue\n        flag = False\n        for x in ost[pr]:\n            if ost[pr][x] <= 1:\n                flag = True\n                break\n        if not flag:\n            glob = True\n            break\n    if glob:\n        print('NO')\n    else:\n        print('YES')", "primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47]\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if len(set(a)) != len(a):\n        print('NO')\n        continue\n    cnt = {p: {} for p in primes}\n    for x in a:\n        for p in primes:\n            if x % p not in cnt[p]:\n                cnt[p][x % p] = 0\n            cnt[p][x % p] += 1\n    for p in primes:\n        if len(cnt[p]) == p and all((x > 1 for x in cnt[p].values())):\n            print('NO')\n            break\n    else:\n        print('YES')", "import os\nimport math\nimport collections\nimport bisect\nimport functools\nimport itertools\nimport heapq\n\ndef solve(a, n):\n    if len(set(a)) != n:\n        return 'NO'\n    if n == 2:\n        return 'YES'\n    a.sort()\n    for i in range(2, 101):\n        c = [0] * i\n        for j in a:\n            c[j % i] += 1\n        if min(c) >= 2:\n            return 'NO'\n    return 'YES'\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(a, n))", "import os\nimport math\nimport collections\nimport bisect\nimport functools\nimport itertools\nimport heapq\n\ndef solve(a, n):\n    if len(set(a)) != n:\n        return 'NO'\n    if n == 2:\n        return 'YES'\n    for i in range(2, 101):\n        c = [0] * i\n        for j in a:\n            c[j % i] += 1\n        if min(c) >= 2:\n            return 'NO'\n    return 'YES'\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(a, n))", "for _ in range(int(input())):\n    x = int(input())\n    y = list(map(int, input().split()))\n    z = set(y)\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89]\n    countodd = 0\n    counteven = 0\n    for element in y:\n        if element % 2 == 0:\n            counteven += 1\n        else:\n            countodd += 1\n    if min(countodd, counteven) == 2 or len(y) != len(z):\n        print('NO')\n    else:\n        flag = False\n        for p in primes:\n            if flag:\n                break\n            L = [0] * p\n            for element in y:\n                rem = element % p\n                L[rem] += 1\n            alpha = min(L)\n            if alpha >= 2:\n                flag = True\n        if flag:\n            print('NO')\n        else:\n            print('YES')", "for _ in range(int(input())):\n    x = int(input())\n    y = list(map(int, input().split()))\n    z = set(y)\n    primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79]\n    countodd = 0\n    counteven = 0\n    for element in y:\n        if element % 2 == 0:\n            counteven += 1\n        else:\n            countodd += 1\n    if min(countodd, counteven) == 2 or len(y) != len(z):\n        print('NO')\n    else:\n        flag = False\n        for p in primes:\n            if flag:\n                break\n            L = [0] * p\n            for element in y:\n                rem = element % p\n                L[rem] += 1\n            alpha = min(L)\n            if alpha >= 2:\n                flag = True\n        if flag:\n            print('NO')\n        else:\n            print('YES')", "from typing import List\nfrom math import gcd\n\ndef exists_x(k, n, l):\n    v = [0] * k\n    for i in range(n):\n        v[l[i] % k] += 1\n    for i in range(k):\n        if v[i] <= 1:\n            return True\n    return False\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    ans = 'YES'\n    for i in range(1, n):\n        if l[i] == l[i - 1]:\n            ans = 'NO'\n            break\n    if ans == 'NO':\n        print('NO')\n    else:\n        temp = True\n        final = 'YES'\n        for i in range(2, n + 1):\n            temp = exists_x(i, n, l)\n            if temp == False:\n                final = 'NO'\n                break\n        if final == 'NO':\n            print('NO')\n        else:\n            print('YES')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    wefucked = 'YES'\n    for i in range(2, n):\n        cnt = [0] * i\n        for j in range(n):\n            cnt[a[j] % i] += 1\n        if min(cnt) >= 2:\n            wefucked = 'NO'\n            break\n    for i in range(n):\n        for l in range(i + 1, n):\n            if a[i] == a[l]:\n                wefucked = 'NO'\n                break\n    print(wefucked)", "import os\nimport math\nimport collections\nimport bisect\nimport functools\nimport itertools\nimport heapq\n\ndef solve(a):\n    if len(set(a)) != len(a):\n        return 'NO'\n    if n == 2:\n        return 'YES'\n    for i in range(2, 101):\n        c = [0] * i\n        for j in a:\n            c[j % i] += 1\n        if min(c) >= 2:\n            return 'NO'\n    return 'YES'\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(a))", "import sys\nT = int(sys.stdin.readline().strip())\nfor t in range(0, T):\n    n = int(sys.stdin.readline().strip())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    ans = True\n    if len(set(a)) != n:\n        ans = False\n    for i in range(2, n):\n        c = set()\n        d = set()\n        for x in a:\n            if x % i in c:\n                d.add(x % i)\n            c.add(x % i)\n        if len(d) == i:\n            ans = False\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\ncount = [[0] * 51 for _ in range(51)]\nwhile t > 0:\n    for i in range(51):\n        for j in range(51):\n            count[i][j] = 0\n    n = int(input())\n    A = list(map(int, input().split()))\n    ans = True\n    for i in range(n):\n        for j in range(i + 1, n):\n            if A[j] == A[i]:\n                ans = False\n                break\n        if ans == False:\n            break\n    if ans:\n        for i in A:\n            for j in range(2, 51):\n                count[j][i % j] += 1\n    if ans:\n        for i in range(2, 51):\n            ans = False\n            for j in range(i):\n                if count[i][j] < 2:\n                    ans = True\n                    break\n            if ans == False:\n                break\n    if ans:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "from collections import defaultdict\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if n != len(set(a)):\n        print('NO')\n        continue\n    fail = 0\n    for mod in range(2, 100):\n        d = defaultdict(lambda : 0)\n        for i in a:\n            d[i % mod] += 1\n        exit = 0\n        for j in range(mod):\n            if d[j] < 2:\n                exit = 1\n                continue\n        if exit == 1:\n            continue\n        fail = 1\n        break\n    if fail == 1:\n        print('NO')\n    else:\n        print('YES')", "T = int(input())\nprime = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\nfor t in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    cnt = {}\n    flag = True\n    for k in prime:\n        cnt[k] = set()\n        for i in range(n - 1):\n            for j in range(i + 1, n):\n                if (a[i] - a[j]) % k == 0:\n                    cnt[k].add(a[i] % k)\n        if len(cnt[k]) == k:\n            flag = False\n    if len(set(a)) == n and flag:\n        print('YES')\n    else:\n        print('NO')"]