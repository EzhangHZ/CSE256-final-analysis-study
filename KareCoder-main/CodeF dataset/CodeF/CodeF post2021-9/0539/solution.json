["import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, m) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    dp = ans = 1\n    for i in range(1, n):\n        dp += 1 if arr[i - 1] == arr[i] else i + 1\n        ans += dp\n    for _ in range(m):\n        (i, x) = map(int, input().split())\n        i -= 1\n        if arr[i] == x:\n            print(ans)\n        else:\n            if i > 0:\n                if arr[i - 1] == arr[i]:\n                    ans += i * (n - i)\n                elif x == arr[i - 1]:\n                    ans -= i * (n - i)\n            if i < n - 1:\n                if arr[i + 1] == arr[i]:\n                    ans += (i + 1) * (n - i - 1)\n                elif x == arr[i + 1]:\n                    ans -= (i + 1) * (n - i - 1)\n            print(ans)\n            arr[i] = x\n    return\nsolve()", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\npre = [0] * (n - 1)\nans = n * (n + 1) // 2\nres = []\nfor i in range(n - 1):\n    if a[i] != a[i + 1]:\n        pre[i] = (i + 1) * (n - i - 1)\n        ans += pre[i]\nfor j in range(m):\n    (i, x) = map(int, input().split())\n    i -= 1\n    if x != a[i]:\n        if i > 0 and a[i] == a[i - 1] and (x != a[i]):\n            pre[i - 1] = i * (n - i)\n            ans += pre[i - 1]\n        elif i > 0 and a[i] != a[i - 1] and (x == a[i - 1]):\n            ans -= pre[i - 1]\n            pre[i - 1] = 0\n        if i < n - 1 and a[i] == a[i + 1] and (x != a[i + 1]):\n            pre[i] = (i + 1) * (n - i - 1)\n            ans += pre[i]\n        elif i < n - 1 and a[i] != a[i + 1] and (x == a[i + 1]):\n            ans -= pre[i]\n            pre[i] = 0\n        a[i] = x\n    res.append(ans)\nprint('\\n'.join([str(i) for i in res]))", "import sys\ninput = sys.stdin.readline\nprint = sys.stdout.write\n(n, q) = map(int, input().split())\nlst = list(map(int, input().split()))\ntiang = [0] * n\nblocks = n * (n + 1) // 2\nfor i in range(1, n):\n    if lst[i] != lst[i - 1]:\n        tiang[i] = 1\n        blocks += i * (n - i)\nfor Q in range(q):\n    (i, val) = map(int, input().split())\n    i -= 1\n    lst[i] = val\n    if i > 0:\n        if lst[i - 1] != val:\n            if tiang[i] != 1:\n                tiang[i] = 1\n                blocks += i * (n - i)\n        elif lst[i - 1] == val:\n            if tiang[i] != 0:\n                tiang[i] = 0\n                blocks -= i * (n - i)\n    if i < n - 1:\n        if lst[i + 1] != val:\n            if tiang[i + 1] != 1:\n                tiang[i + 1] = 1\n                blocks += (i + 1) * (n - i - 1)\n        elif lst[i + 1] == val:\n            if tiang[i + 1] != 0:\n                tiang[i + 1] = 0\n                blocks -= (i + 1) * (n - i - 1)\n    print(str(blocks))\n    print('\\n')", "import sys\nimport math\n\ndef beauty(arr, n):\n    dp = [0 for i in range(n)]\n    dp[0] = 1\n    (cur, l) = (arr[0], 1)\n    for i in range(1, n):\n        if arr[i] == cur:\n            dp[i] = dp[i - 1] + 1\n            l += 1\n        else:\n            cur = arr[i]\n            l = 1\n            dp[i] = dp[i - 1] + (i + 1)\n    return sum(dp)\ninput = sys.stdin.readline()\n(n, t) = map(int, input.split())\ninput = sys.stdin.readline()\narr = list(map(int, input.split()))\nb = beauty(arr, n)\nwhile t > 0:\n    t -= 1\n    input = sys.stdin.readline()\n    (i, x) = map(int, input.split())\n    i -= 1\n    if arr[i] == x:\n        print(b)\n        continue\n    if i > 0:\n        if arr[i - 1] == arr[i]:\n            b += (n - i) * i\n        if x == arr[i - 1]:\n            b -= (n - i) * i\n    if i < n - 1:\n        if arr[i] == arr[i + 1]:\n            b += (n - i - 1) * (i + 1)\n        if x == arr[i + 1]:\n            b -= (n - i - 1) * (i + 1)\n    print(b)\n    arr[i] = x", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, m) = map(int, input().split(' '))\n    a = input().split()\n    ans = 0\n    prev = int(a[0])\n    for (i, j) in enumerate(a):\n        if i == 0:\n            continue\n        if int(j) != prev:\n            ans += i * (n - i)\n        prev = int(j)\n    ans += n * (n + 1) // 2\n    for q in range(m):\n        (x, y) = map(int, input().split(' '))\n        if x - 2 >= 0:\n            if int(a[x - 2]) == int(a[x - 1]):\n                if y != int(a[x - 1]):\n                    ans += (x - 1) * (n - x + 1)\n            elif y == int(a[x - 2]):\n                ans -= (x - 1) * (n - x + 1)\n        if x < n:\n            if int(a[x]) == int(a[x - 1]):\n                if y != int(a[x - 1]):\n                    ans += x * (n - x)\n            elif y == int(a[x]):\n                ans -= x * (n - x)\n        a[x - 1] = y\n        print(ans)\nsolve()", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    (n, m) = map(int, inp().split())\n    a = list(map(int, inp().split()))\n    b = [int(a[i - 1] != a[i]) for i in range(1, n)]\n    w = [(i + 1) * (n - i - 1) for i in range(n - 1)]\n    r = n * (n + 1) // 2\n    for i in range(n - 1):\n        r += b[i] * w[i]\n    for i in range(m):\n        (i, x) = map(int, inp().split())\n        a[i - 1] = x\n        if i < n:\n            r -= b[i - 1] * w[i - 1]\n            b[i - 1] = int(a[i] != a[i - 1])\n            r += b[i - 1] * w[i - 1]\n        if i > 1:\n            r -= b[i - 2] * w[i - 2]\n            b[i - 2] = int(a[i - 1] != a[i - 2])\n            r += b[i - 2] * w[i - 2]\n        print(r)\n\ndef main():\n    solve()\nmain()", "import collections\nimport heapq\nimport sys\nimport math\nimport itertools\nimport bisect\nfrom io import BytesIO, IOBase\nimport os\n\ndef values():\n    return tuple(map(int, sys.stdin.readline().split()))\n\ndef inlst():\n    return [int(i) for i in sys.stdin.readline().split()]\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef inpstr():\n    return sys.stdin.readline().strip()\n\ndef words():\n    return [i for i in sys.stdin.readline().split()]\n\ndef chars():\n    return list(sys.stdin.readline().strip())\n\ndef solve():\n    (n, m) = values()\n    l = inlst()\n    s = set()\n    tmp = l[0]\n    tot = 0\n    for i in range(1, n):\n        if l[i] != tmp:\n            s.add(i)\n            tot += i * (n - i)\n        tmp = l[i]\n    tot += n * (n + 1) // 2\n    for i in range(m):\n        (ind, x) = values()\n        if ind in s:\n            s.remove(ind)\n            tot -= ind * (n - ind)\n        h = ind - 1\n        if h in s:\n            s.remove(h)\n            tot -= h * (n - h)\n        if ind < n and x != l[ind]:\n            s.add(ind)\n            tot += ind * (n - ind)\n        if ind > 1 and x != l[ind - 2]:\n            s.add(ind - 1)\n            tot += (ind - 1) * (n - (ind - 1))\n        l[ind - 1] = x\n        print(tot)\nsolve()", "import sys\ninput = sys.stdin.readline\n(n, m) = list(map(int, input().split()))\na = list(map(int, input().split()))\nsums = 0\nfor i in range(n):\n    sums += (i + 1) * (i + 2) / 2\nfor i in range(1, n):\n    if a[i] == a[i - 1]:\n        sums -= i * (n - i)\nfor _ in range(m):\n    if n == 1:\n        print(1)\n        continue\n    (i, x) = list(map(int, input().split()))\n    i -= 1\n    if i > 0 and a[i] == a[i - 1]:\n        sums += i * (n - i)\n    if i < n - 1 and a[i] == a[i + 1]:\n        sums += (i + 1) * (n - i - 1)\n    if i > 0 and x == a[i - 1]:\n        sums -= i * (n - i)\n    if i < n - 1 and x == a[i + 1]:\n        sums -= (i + 1) * (n - i - 1)\n    a[i] = x\n    print(int(sums))", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    (n, m) = map(int, inp().split())\n    a = list(map(int, inp().split()))\n    b = [int(a[i - 1] != a[i]) for i in range(1, n)]\n    w = [(i + 1) * (n - i - 1) for i in range(n - 1)]\n    r = n * (n + 1) // 2\n    for i in range(n - 1):\n        r += b[i] * w[i]\n    for i in range(m):\n        (i, x) = map(int, inp().split())\n        a[i - 1] = x\n        if i < n:\n            r -= b[i - 1] * w[i - 1]\n            b[i - 1] = int(a[i] != a[i - 1])\n            r += b[i - 1] * w[i - 1]\n        if i > 1:\n            r -= b[i - 2] * w[i - 2]\n            b[i - 2] = int(a[i - 1] != a[i - 2])\n            r += b[i - 2] * w[i - 2]\n        print(r)\n\ndef main():\n    solve()\nmain()", "(n, m) = list(map(int, input().split()))\narr = list(map(int, input().split()))\nresult = []\ncut = [1]\nfor i in range(1, len(arr)):\n    if arr[i] != arr[i - 1]:\n        cut.append(1)\n    else:\n        cut.append(0)\nsum = 0\nfor i in range(len(cut)):\n    if cut[i] == 0:\n        sum += n - i\n        continue\n    sum += cut[i] * (i + 1) * (n - i)\nfor j in range(m):\n    (i, x) = list(map(int, input().split()))\n    i = i - 1\n    arr[i] = x\n    if i > 0:\n        if arr[i] != arr[i - 1]:\n            if cut[i] != 1:\n                sum += i * (n - i)\n            cut[i] = 1\n        else:\n            if cut[i] != 0:\n                sum -= i * (n - i)\n            cut[i] = 0\n    if i < n - 1:\n        if arr[i + 1] != arr[i]:\n            if cut[i + 1] != 1:\n                sum += (i + 1) * (n - i - 1)\n            cut[i + 1] = 1\n        else:\n            if cut[i + 1] != 0:\n                sum -= (i + 1) * (n - i - 1)\n            cut[i + 1] = 0\n    result.append(sum)\nlist(map(print, result))", "import sys\ninput = sys.stdin.readline\n(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nans = n * (n + 1) // 2\nfor i in range(n):\n    if i + 1 == n or a[i] != a[i + 1]:\n        ans += (i + 1) * (n - i - 1)\nwhile m > 0:\n    (i, x) = map(int, input().split())\n    i = i - 1\n    if i > 0 and a[i] != a[i - 1]:\n        ans -= i * (n - i)\n    if i + 1 < n and a[i] != a[i + 1]:\n        ans -= (i + 1) * (n - i - 1)\n    a[i] = x\n    if i > 0 and a[i] != a[i - 1]:\n        ans += i * (n - i)\n    if i + 1 < n and a[i] != a[i + 1]:\n        ans += (i + 1) * (n - i - 1)\n    print(ans)\n    m = m - 1", "import sys\ninput = sys.stdin.readline\n(n, m) = map(int, input().split())\narr = list(map(int, input().split()))\nif n == 1:\n    print('1\\n' * m)\nelse:\n    ans = (n + 1) * n // 2\n    for i in range(n - 1):\n        if arr[i] != arr[i + 1]:\n            ans += (i + 1) * (n - i - 1)\n    for q in range(m):\n        (i, x) = map(int, input().split())\n        i -= 1\n        if arr[i] != x:\n            if i != n - 1:\n                (a, b) = arr[i:i + 2]\n                pre = (i + 1) * (n - i - 1) if a != b else 0\n                a = x\n                cur = (i + 1) * (n - i - 1) if a != b else 0\n                ans += cur - pre\n            if i != 0:\n                (a, b) = arr[i - 1:i + 1]\n                pre = i * (n - i) if a != b else 0\n                b = x\n                cur = i * (n - i) if a != b else 0\n                ans += cur - pre\n        arr[i] = x\n        print(ans)", "(n, m) = map(int, input().split())\nlist1 = list(map(int, input().split()))\nans = n * (n + 1) // 2\nfor i in range(1, len(list1)):\n    if list1[i] != list1[i - 1]:\n        ans += i * (n - i)\nres = []\nfor j in range(m):\n    (y, x) = map(int, input().split())\n    y -= 1\n    if y >= 1 and list1[y] != list1[y - 1]:\n        ans -= y * (n - y)\n    if y < n - 1 and list1[y] != list1[y + 1]:\n        ans -= (y + 1) * (n - y - 1)\n    list1[y] = x\n    if y >= 1 and list1[y] != list1[y - 1]:\n        ans += y * (n - y)\n    if y < n - 1 and list1[y] != list1[y + 1]:\n        ans += (y + 1) * (n - y - 1)\n    res.append(ans)\nprint(*res, sep='\\n')", "import sys\ninput = sys.stdin.readline\n(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nans = n * (n + 1) // 2\nfor i in range(n):\n    if i + 1 == n or a[i] != a[i + 1]:\n        ans += (i + 1) * (n - i - 1)\nwhile m > 0:\n    (i, x) = map(int, input().split())\n    i = i - 1\n    if i > 0 and a[i] != a[i - 1]:\n        ans -= i * (n - i)\n    if i + 1 < n and a[i] != a[i + 1]:\n        ans -= (i + 1) * (n - i - 1)\n    a[i] = x\n    if i > 0 and a[i] != a[i - 1]:\n        ans += i * (n - i)\n    if i + 1 < n and a[i] != a[i + 1]:\n        ans += (i + 1) * (n - i - 1)\n    print(ans)\n    m = m - 1", "(n, m) = map(int, input().split())\narr = list(map(int, input().split()))\n\ndef work(sum, i, p):\n    if i - 1 >= 0 and arr[i] != arr[i - 1]:\n        sum += p * i * (n - i)\n    if i + 1 < n and arr[i + 1] != arr[i]:\n        sum += p * (i + 1) * (n - i - 1)\n    return sum\nsum = n * (n + 1) // 2\nres = []\nfor i in range(1, n):\n    if arr[i] != arr[i - 1]:\n        sum += i * (n - i)\nfor w in range(m):\n    (i, x) = map(int, input().split())\n    i -= 1\n    sum = work(sum, i, -1)\n    arr[i] = x\n    sum = work(sum, i, 1)\n    res.append(sum)\nprint(*res, sep='\\n')"]