["fptr = open(0)\nfor _ in range(int(next(fptr))):\n    n = next(fptr)\n    print(int(n) - 10 ** (len(n) - 2))", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nnum_of_tests = inp()\nfor n in range(num_of_tests):\n    num = inp()\n    k = len(str(num)) - 1\n    print(num - 10 ** k)", "import sys\n\ndef y_a(sisend):\n    return int(sisend)\n\ndef l_a(sisend):\n    return list(map(int, sisend.split()))\n\ndef l_s(sisend):\n    return list(map(str, sisend.split()))\n\ndef p_v_s(vastus):\n    return sys.stdout.write(vastus)\n\ndef p_v_a(vastus):\n    return sys.stdout.write(str(vastus))\n\ndef p_v_jar(vastus):\n    return sys.stdout.write(' '.join(map(str, vastus)))\n\ndef p_v_alla(vastus):\n    return sys.stdout.write('\\n'.join(map(str, vastus)))\nteste = y_a(sys.stdin.readline())\nvastused = []\nfor i in range(teste):\n    arv = y_a(sys.stdin.readline())\n    k = len(str(arv))\n    vastused.append(arv - 10 ** (k - 1))\np_v_alla(vastused)", "nt = int(input())\nans = []\nfor i in range(nt):\n    s = input()\n    l = len(s)\n    ans.append(str(int(s) - 10 ** (l - 1)))\nprint('\\n'.join(ans))", "t = int(input())\nlst = []\nfor i in range(t):\n    lst.append(input())\ni = 0\nfor i in range(i, t):\n    n = len(lst[i])\n    lst[i] = int(lst[i])\n    du = lst[i] - 10 ** (n - 1)\n    print(du)", "l = []\nn = int(input())\nfor i in range(n):\n    r = 0\n    s = input()\n    h = len(s) - 1\n    r = int(s) - 10 ** h\n    l.append(r)\nfor ele in l:\n    print(ele)", "for m in [*open(0)][1:]:\n    print(int(m) - 10 ** (len(m) - 2))", "for _ in [*open(0)][1:]:\n    print(int(_) - 10 ** len(_[2:]))", "for _ in [*open(0)][1:]:\n    print(int(_) - 10 ** _[2:].__len__())", "import sys\ninput = sys.stdin.readline\noutput = sys.stdout.write\n\ndef main():\n    tests = int(input().rstrip())\n    for i in range(tests):\n        num = input().rstrip()\n        l = len(num)\n        num = int(num)\n        ans = num - 10 ** (l - 1)\n        output(str(ans))\n        output('\\n')\nmain()", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    m = input().strip()\n    n = int(m)\n    k = len(m)\n    a = n - 10 ** (k - 1)\n    print(a)", "import sys\ninput = sys.stdin.readline\nt = int(input())\ndp = [1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000]\nfor _ in range(t):\n    n = list(input().rstrip())\n    print(int(''.join(n)) - dp[len(n) - 1])", "a = int(input())\nb = []\nfor i in range(0, a):\n    c = input()\n    b.append(c)\nfor i in b:\n    print(int(i) - 10 ** (len(i) - 1))", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor t in range(t):\n    n = input()\n    n = n[:len(n) - 1]\n    l = len(n)\n    n = int(n)\n    ans = n - 10 ** (l - 1)\n    print(ans)", "k = int(input())\nl = []\nfor i in range(k):\n    l.append(input())\nfor n in l:\n    x = len(n)\n    print(int(n) - 10 ** (x - 1))", "n = int(input())\nlist1 = []\ni = 0\nj = 0\ncount = 0\nfor i in range(0, n):\n    m = int(input())\n    list1.append(m)\nlist2 = []\nfor el in list1:\n    count = len(str(el))\n    rem = el - pow(10, count - 1)\n    list2.append(rem)\nfor i in list2:\n    print(i)", "t = int(input())\nans = []\nfor i in range(t):\n    n = input()\n    k = len(n)\n    ans.append(int(n) - 10 ** (k - 1))\nfor j in range(t):\n    print(ans[j])", "import sys\nimport math\nlinesPerTest = 1\ntestArguments = []\ni = 0\ntotalLines = 1\nwhile i <= totalLines:\n    line = sys.stdin.readline().rstrip('\\n')\n    if i == 0:\n        totalLines = linesPerTest * int(line)\n    else:\n        testArguments.append(line)\n    i += 1\ntestCases = []\nfor j in range(0, len(testArguments), linesPerTest):\n    testCases.append(testArguments[j:j + linesPerTest])\n\ndef f(testArguments):\n    num = int(testArguments[0])\n    digits = int(math.log10(num) + 1)\n    target = 10 ** (digits - 1)\n    return num - target\nfor testCase in testCases:\n    print(f(testCase))", "n = int(input())\nanslist = []\nfor i in range(n):\n    strnum = input()\n    intnum = int(strnum)\n    x = len(strnum)\n    diff = intnum - 10 ** (x - 1)\n    anslist.append(diff)\nfor ele in anslist:\n    print(ele)", "t = int(input())\nlist1 = []\nfor i in range(0, t):\n    m = str(input())\n    list1.append(m)\nfor j in range(0, t):\n    x = list1[j]\n    l = len(x)\n    p = int(x)\n    print(p - 10 ** (l - 1))", "import sys\nncases = int(input())\n\ndef solve():\n    s = int(input())\n    posibles = [10 ** 0, 10 ** 1, 10 ** 2, 10 ** 3, 10 ** 4, 10 ** 5, 10 ** 6, 10 ** 7, 10 ** 8, 10 ** 9]\n    valor = max([x for x in posibles if x <= s])\n    res.append(s - valor)\nres = []\nfor x in range(ncases):\n    solve()\n[print(n) for n in res]", "import sys\nfrom sys import stdin, stdout\nfrom math import ceil, floor, sqrt, log, log2, log10\nfrom collections import Counter\nint_max = float('inf')\nint_min = -float('inf')\nmod = 10 ** 9 + 7\nANS = []\ninput = stdin.readline\n\ndef solve():\n    pass\nt = int(input())\nfor i in range(t):\n    s = input().strip()\n    n = len(s)\n    print(int(s) - 10 ** (n - 1))", "def roundx(n):\n    return int(n) - 10 ** (len(n) - 1)\nt = int(input())\narr0 = []\narr1 = []\nfor _ in range(t):\n    arr1.append(roundx(input()))\nfor i in arr1:\n    print(i)", "for m in [*open(0)][1:]:\n    print(int(m) - 10 ** (len(m) - 2))", "t = int(input())\nans = []\nfor i in range(t):\n    n = input()\n    power = len(n) - 1\n    ans.append(int(n) - 10 ** power)\nfor case in tuple(ans):\n    print(case)", "for n in [*open(0)][1:]:\n    print(int(n) - 10 ** (len(n) - 2))", "mo = open\ninte = int\ndai = len\nfor _ in [*mo(0)][1:]:\n    print(inte(_) - 10 ** dai(_[2:]))", "t = int(input())\nA = []\nfor i in range(t):\n    n = int(input())\n    A.append(n)\nfor i in range(t):\n    x = A[i]\n    y = str(x)\n    if x == 1:\n        print(0)\n    else:\n        print(x - 10 ** (len(y) - 1))", "n = int(input())\nz = []\nfor i in range(n):\n    m = int(input())\n    k = 1\n    while k <= m:\n        k = k * 10\n    z.append(m - k // 10)\nfor i in range(n):\n    print(z[i])", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    n = int(inp())\n    x = 1\n    while x * 10 <= n:\n        x *= 10\n    print(n - x)\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "ans = []\nfor _ in range(int(input())):\n    n = int(input())\n    p = 1\n    while p <= n:\n        p *= 10\n    p //= 10\n    ans.append(n - p)\nprint('\\n'.join(map(str, ans)))", "def kil_(a):\n    k = 10 ** (len(a) - 1)\n    return int(a) - k\n\ndef kil(a):\n    t = int(input())\n    A = ''\n    for i in range(t):\n        A += str(kil_(a())) + '\\n'\n    print(A[:-1])\n\ndef ik():\n    return input()\nkil(ik)", "out = []\nfor _ in range(int(input())):\n    m = int(input())\n    s = str(m)\n    s1 = '1' + '0' * (len(s) - 1)\n    out.append(m - int(s1))\nfor i in out:\n    print(i)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    s = len(str(n))\n    print(n - 10 ** (s - 1))", "for s in [*open(0)][1:]:\n    s = s.strip('\\n')\n    print(abs(pow(10, len(s) - 1) - int(s)))", "import sys\ninput = sys.stdin.readline\nten = [10 ** i for i in range(9, -1, -1)]\nfor _ in range(int(input())):\n    n = int(input())\n    for t in ten:\n        if n - t >= 0:\n            print(n - t)\n            break", "for s in [*open(0)][1:]:\n    print(int(s) - 1 * pow(10, len(s) - 1 - 1))", "t = int(input())\narr = []\nfor i in range(t):\n    arr.append(int(input()))\nfor i in arr:\n    print(i - 10 ** (len(str(i)) - 1))", "numbers = [0, *[10 ** i for i in range(10)]]\noutput = []\nfor i in range(int(input())):\n    number = int(input())\n    for i2 in reversed(numbers):\n        if number >= i2:\n            output.append(str(number - i2))\n            break\nprint('\\n'.join(output))", "import sys\nt = int(sys.stdin.readline().rstrip())\n\ndef exec_case():\n    m = int(sys.stdin.readline().rstrip())\n    k = 1\n    while True:\n        if m < 10:\n            print(m - 1)\n            return\n        if m < 10 ** k:\n            answer = m - 10 ** (k - 1)\n            print(answer)\n            return\n        else:\n            k += 1\nfor _ in range(t):\n    exec_case()", "def pow10(n):\n    return pow(10, n)\n\ndef by(s: str):\n    return len(s) - 1\n\ndef solution(vstr: str):\n    k = by(vstr)\n    return f'{int(vstr) - pow10(k)}'\nt = int(input())\nm = []\nfor _ in range(t):\n    v = input()\n    m.append(solution(str(v).strip()))\nprint('\\n'.join(m))", "a = []\nfor i in range(int(input())):\n    a.append(int(input()))\nfor i in a:\n    b = i - pow(10, len(str(i)) - 1)\n    print(b)", "import sys\nlines = []\nfor line in sys.stdin:\n    lines.append(line.strip())\nfor i in range(1, len(lines)):\n    line = lines[i]\n    if line == '1':\n        print(0)\n        continue\n    first_digit = str(int(line[0]) - 1)\n    if first_digit == '0':\n        first_digit = ''\n    ans = first_digit + line[1:]\n    ans = str(int(ans))\n    print(ans)", "(a, list) = (int(input()), [])\nfor _ in range(a):\n    (nums, i) = (int(input()), 1)\n    while nums >= i:\n        i *= 10\n    if i > nums:\n        list.append(nums - i // 10)\nfor k in list:\n    print(k)", "n = input()\nn = int(n)\nl = []\nfor i in range(0, n):\n    l.append(input())\nfor x in l:\n    p = len(x)\n    x = int(x)\n    print(x - 10 ** (p - 1))", "def get_input():\n    num_tests = int(input())\n    tests = []\n    for i in range(num_tests):\n        tests.append(int(input()))\n    return tests\n\ndef print_result(results):\n    for res in results:\n        print(res)\n\ndef round_down_num(x):\n    folds = len(str(x)) - 1\n    return x - 10 ** folds\ntests = get_input()\nresult = []\nfor x in tests:\n    result.append(round_down_num(x))\nprint_result(result)", "a = int(input())\nd = []\nfor i in range(1, a + 1):\n    r = int(input())\n    e = str(r)\n    b = 10 ** (len(e) - 1)\n    c = r - b\n    d.append(c)\nfor z in d:\n    print(z)", "n = int(input())\not = []\nfor i in range(n):\n    a = int(input())\n    q = 9\n    while 0 < 1:\n        if 10 ** q > a:\n            q -= 1\n        else:\n            ot.append(a - 10 ** q)\n            break\nfor i in range(len(ot)):\n    print(ot[i])", "t = int(input())\nA = []\nfor i in range(t):\n    s = int(input())\n    A.append(s)\nfor i in range(t):\n    x = A[i]\n    y = str(x)\n    if x == 1:\n        print(0)\n    else:\n        print(x - 10 ** (len(y) - 1))", "from sys import stdin\n\ndef get_data(m):\n    for cont in range(10):\n        if 10 ** cont == m:\n            return 0\n        if 10 ** cont > m:\n            less = 10 ** (cont - 1)\n            break\n    return m - less\n\ndef main():\n    t = int(stdin.readline())\n    for cont in range(t):\n        m = int(stdin.readline())\n        print(get_data(m))\nmain()", "n = int(input())\nlist = []\nwhile n > 0:\n    a = input()\n    if a == '1':\n        list.append(0)\n    else:\n        l = len(a)\n        list.append(int(a) - 10 ** (l - 1))\n    n -= 1\nfor i in list:\n    print(i)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    x = 1\n    while x <= n:\n        x *= 10\n    x //= 10\n    print(n - x)\ntc = int(input())\nfor i in range(tc):\n    solve()", "t = int(input())\nresult = []\nfor n in range(t):\n    value = int(input())\n    i = 0\n    while 10 ** (i + 1) <= value:\n        i += 1\n    result.append(value - 10 ** i)\nfor i in range(t):\n    print(result[i])", "import sys\ninput = sys.stdin.readline\ntc = int(input())\nfor _ in range(tc):\n    num = int(input())\n    pow = 0\n    while num >= 10 ** pow:\n        pow += 1\n    print(num - 10 ** (pow - 1))", "import math\ninp_arr = [int(input()) for i in range(int(input()))]\npow_10 = [10 ** i for i in range(math.ceil(math.log10(max(inp_arr))) + 1)]\nfor number in inp_arr:\n    print(min([number - i for i in pow_10 if number - i >= 0]))", "numberofcases = int(input())\nlistofcases = []\nfor num in range(numberofcases):\n    testcases = int(input())\n    listofcases.append(testcases)\nfor item in listofcases:\n    count = 0\n    for x in range(0, 11):\n        if item < 10 ** x:\n            print(item - 10 ** (x - 1))\n            break", "t = int(input())\nl = []\nwhile t != 0:\n    t = t - 1\n    x = int(input())\n    l.append(x)\nfor i in range(len(l)):\n    const = 1\n    while const <= l[i]:\n        const = const * 10\n    const = const // 10\n    print(l[i] - const)", "import math\ntest = int(input())\nans = []\nfor i in range(test):\n    x = int(input())\n    ans.append(int(x - math.pow(10, math.floor(math.log10(x)))))\nfor i in ans:\n    print(i, sep=' ')", "nums = int(input(''))\n(lon, ans) = ([], [])\nrounds = [10 ** g for g in range(10)]\nfor g in range(nums):\n    a = int(input(''))\n    lon.append(a)\nfor g in lon:\n    if g in rounds:\n        ans.append(0)\n    else:\n        rounds.append(g)\n        rounds.sort()\n        ans.append(g - rounds[rounds.index(g) - 1])\n        rounds.remove(g)\nfor g in ans:\n    print(g)", "from math import *\nans = []\nfor _ in range(int(input())):\n    m = int(input())\n    ans += [m - 10 ** (round(log(m, 10)) if set(str(m)) == {'1', '0'} and str(m).count('1') == 1 else int(log(m, 10)))]\nprint(*ans, sep='\\n')", "n = int(input())\nans = []\nfor i in range(n):\n    num = input()\n    if len(num) == 1:\n        ans.append(int(num) - 1)\n        continue\n    if num[0] == '1' and num.count('0') == len(num) - 1:\n        ans.append(0)\n    else:\n        k = 1\n        num = int(num)\n        while k < num:\n            k *= 10\n        ans.append(int(num - k / 10))\nfor i in ans:\n    print(i)", "import math\nn = int(input())\nfor i in range(n):\n    precio = int(input())\n    log_precio = math.log10(precio)\n    log_redondeado = math.floor(log_precio)\n    precio_redondeado = 10 ** log_redondeado\n    diferencia = precio - precio_redondeado\n    print(diferencia)", "t = int(input())\nfor i in range(t):\n    s = input()\n    p = len(s)\n    print(int(s) - pow(10, p - 1))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = str(n)\n    a = int('1' + '0' * (len(s) - 1))\n    print(n - a)", "for i in range(int(input())):\n    n = input()\n    k = '1' + (len(n) - 1) * '0'\n    print(int(n) - int(k))", "t = int(input())\nfor _ in range(t):\n    m = input()\n    print(int(m) - 10 ** (len(m) - 1))", "result = []\nfor t in range(int(input())):\n    n = int(input())\n    p = 0\n    lc = 0\n    curr = 0\n    while curr <= n:\n        lc = curr\n        curr = 10 ** p\n        p += 1\n    result.append(n - lc)\nfor i in result:\n    print(i)", "count = int(input())\nfor i in range(count):\n    next = input()\n    min_power = len(next) - 1\n    result = int(next) - 10 ** min_power\n    print(result)", "for i in range(int(input())):\n    cost = int(input())\n    max_round = int('1' + '0' * (len(str(cost)) - 1))\n    print(cost - max_round)", "t = int(input())\nfor i in range(t):\n    a = input()\n    print(int(a) - 10 ** (len(a) - 1))", "t = int(input())\nfor i in range(t):\n    n = input()\n    length = len(n)\n    temp = 10 ** (length - 1)\n    print(int(n) - temp)", "t = int(input())\nfor i in range(t):\n    n = input()\n    print(int(n) - pow(10, len(n) - 1))", "t = int(input())\nfor i in range(t):\n    m = input()\n    n_zeros = len(m)\n    print(int(m) - pow(10, n_zeros - 1))", "n = int(input())\nanswer = []\nfor i in range(n):\n    number = int(input())\n    test_number = 0\n    pow = 1\n    while test_number <= number:\n        test_number = 10 ** pow\n        pow += 1\n    answer.append(number - test_number / 10)\nfor value in answer:\n    print(int(value))", "for _ in range(int(input())):\n    m = int(input())\n    print(m - 10 ** (len(str(m)) - 1))", "t = int(input())\nfor i in range(t):\n    s = input()\n    d = int(s)\n    print(d - 10 ** (len(s) - 1))", "t = int(input())\nfor _ in range(t):\n    m = int(input())\n    lower = 10 ** (len(str(m)) - 1)\n    print(m - lower)", "n = int(input())\na = []\ns = 0\nfor i in range(n):\n    m = int(input())\n    a.append(m)\nfor i in range(n):\n    if a[i] < 10:\n        print(a[i] - 1)\n    else:\n        while a[i] >= 10 ** s:\n            s += 1\n        print(a[i] - 10 ** (s - 1))\n        s = 0", "MAX_PRICE = 1000000000\nn = int(input())\nm = {0: 1, 1: 1, 2: 10, 3: 100, 4: 1000, 5: 10000, 6: 100000, 7: 1000000, 8: 10000000, 9: 100000000, 10: 1000000000}\nfor _ in range(n):\n    p = input()\n    price = int(p)\n    print(price - m[len(p)])", "n = int(input())\nfor i in range(n):\n    m = input()\n    lenm = len(m)\n    nearhn = int(m) - pow(10, lenm - 1)\n    print(nearhn)", "t = int(input())\nfor i in range(t):\n    m = input()\n    m1 = int(m)\n    print(m1 - 10 ** (len(m) - 1))", "for i in range(int(input())):\n    m = input()\n    x = 10 ** (len(m) - 1)\n    print(int(m) - x)", "t = int(input())\nfor _ in range(t):\n    n = input()\n    k = len(n) - 1\n    print(int(n) - 10 ** k)", "t = int(input())\nfor i in range(t):\n    s = input()\n    a = len(s) - 1\n    ans = int(s) - 10 ** a\n    print(ans)", "i = int(input())\nfor k in range(i):\n    t = input()\n    x = len(t)\n    if int(t) == 0:\n        print(0)\n    else:\n        ans = int(t) - 10 ** (x - 1)\n        print(ans)", "def solve():\n    n = int(input())\n    l = len(str(n))\n    print(n - 10 ** (l - 1))\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    L = len(str(n))\n    print(n - 10 ** (L - 1))", "for _ in range(int(input())):\n    m = input()\n    print(int(m) - 10 ** (len(m) - 1))", "from math import *\nN = int(input())\nfor i in range(0, N):\n    M = int(input())\n    X = int(log10(M))\n    print(M - 10 ** X)", "def potencia(n):\n    dec = 0\n    p = 1\n    while n > dec:\n        dec = 10 ** p\n        p += 1\n        if n < dec:\n            d = n - dec // 10\n            return d\n        if n == dec:\n            return 0\nsubtracoes = []\nt = int(input())\nfor a in range(t):\n    m = int(input())\n    subtracoes.append(potencia(m))\nfor b in subtracoes:\n    print(b)", "import math\nfor i in range(int(input())):\n    a = int(input())\n    b = len(str(a)) - 1\n    print(a - 10 ** b)", "for i in range(int(input())):\n    t = input()\n    print(int(t) - 10 ** (len(t) - 1))", "def Solver():\n    num = input()\n    dig = len(num)\n    print(int(num) - 10 ** (dig - 1))\nfor _ in range(int(input())):\n    Solver()", "t = int(input())\nfor i in range(t):\n    n = input()\n    a = len(n) - 1\n    res = int(n) - pow(10, a)\n    print(res)", "n = int(input())\nfor _ in range(n):\n    x = input()\n    if x == '1':\n        print(0)\n    else:\n        l = len(x)\n        print(int(x) - 10 ** (l - 1))", "for i in range(int(input())):\n    s = str(input())\n    arr = list(s.strip(' '))\n    print(int(s) - 10 ** (len(arr) - 1))", "for _ in range(int(input())):\n    m = int(input())\n    k = 10 ** (len(str(m)) - 1)\n    print(m - k)", "cases = int(input())\nfor case in range(cases):\n    m = int(input())\n    m_copy = m\n    k = 0\n    while m_copy // 10:\n        k += 1\n        m_copy = m_copy // 10\n    d = m - 10 ** k\n    print(d)"]