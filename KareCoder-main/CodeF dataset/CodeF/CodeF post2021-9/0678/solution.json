["mod = 1000000007\n\ndef check(pos, val):\n    if pos == kk and val != ss:\n        return False\n    if pos == tt and val != pp:\n        return False\n    return True\n\ndef solve():\n    global n, kk, tt, ss, pp\n    (n, kk, tt, ss, pp) = map(int, input().split())\n    global dp\n    dp = [[0 for i in range(n + 2)] for j in range(n + 2)]\n    for i in range(2, n, 1):\n        if check(i, n):\n            dp[i][i] = 1\n    for i in range(n, 0, -1):\n        for j in range(i, n + 1):\n            val = n - (j - i + 1)\n            if check(i - 1, val):\n                dp[i - 1][j] = (dp[i - 1][j] + dp[i][j]) % mod\n            if check(j + 1, val):\n                dp[i][j + 1] = (dp[i][j + 1] + dp[i][j]) % mod\n    print(int(dp[1][n]))\n__t = int(input())\nwhile __t > 0:\n    __t -= 1\n    solve()", "mod = 1000000007\n\ndef check(pos, val):\n    if pos == kk and val != ss:\n        return False\n    if pos == tt and val != pp:\n        return False\n    return True\n\ndef solve():\n    global n, kk, tt, ss, pp\n    (n, kk, tt, ss, pp) = map(int, input().split())\n    global dp\n    dp = [[0 for i in range(n + 2)] for j in range(n + 2)]\n    for i in range(2, n, 1):\n        if check(i, n):\n            dp[i][i] = 1\n    for i in range(n, 0, -1):\n        for j in range(i, n + 1):\n            val = n - (j - i + 1)\n            if check(i - 1, val):\n                dp[i - 1][j] = (dp[i - 1][j] + dp[i][j]) % mod\n            if check(j + 1, val):\n                dp[i][j + 1] = (dp[i][j + 1] + dp[i][j]) % mod\n    print(int(dp[1][n]))\n__t = int(input())\nwhile __t > 0:\n    __t -= 1\n    solve()"]