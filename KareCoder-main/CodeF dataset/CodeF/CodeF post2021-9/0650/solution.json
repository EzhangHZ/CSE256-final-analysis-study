["import sys\nmod = 10 ** 9 + 7\nn = int(sys.stdin.readline())\narr = list(map(int, sys.stdin.readline().split()))\ni = 0\ncnt = {}\nfor x in arr:\n    lb = x & -x\n    cnt[lb] = cnt.get(lb, 0) + 1\nc2 = [cnt.get(1 << i, 0) for i in range(32)]\nwhile c2[-1] == 0:\n    c2.pop()\nx = 1\ny = n - c2[0]\nfor i in c2[1:]:\n    y -= i\n    if i > 0:\n        x = (x + pow(2, i - 1, mod) * pow(2, y, mod)) % mod\nprint((pow(2, n, mod) - x) % mod)", "M = 10 ** 9 + 7\nr = pow(2, int(input()), M) - 1\na = [0] * 99\nfor i in input().split():\n    a[bin(int(i))[::-1].index('1')] += 1\nprint((r - sum((pow(2, sum(a[i:]) - 1, M) for i in range(1, 30) if a[i]))) % M)", "M = 10 ** 9 + 7\nr = 2 ** int(input()) - 1\na = [0] * 99\nfor i in input().split():\n    a[bin(int(i))[::-1].index('1')] += 1\nprint((r - sum((2 ** (sum(a[i:]) - 1) for i in range(1, 30) if a[i]))) % M)", "MD = 10 ** 9 + 7\n\ndef pow(x, y):\n    if y == 0:\n        return 1\n    m = pow(x, y // 2)\n    ans = m * m % MD\n    return ans * x % MD if y & 1 else ans\nn = int(input())\nbit = [0] * 31\nfor num in map(int, input().split()):\n    bit[bin(num)[::-1].index('1')] += 1\nans = pow(2, n) - 1\nfor i in range(1, 31):\n    if bit[i]:\n        ans = (ans - pow(2, sum(bit[i:]) - 1)) % MD\nprint(ans)", "MD = 10 ** 9 + 7\n\ndef pow(x, y):\n    if y == 0:\n        return 1\n    m = pow(x, y // 2)\n    ans = m * m % MD\n    return ans * x % MD if y & 1 else ans\nn = int(input())\nbit = [0] * 31\nfor num in map(int, input().split()):\n    bit[bin(num)[::-1].index('1')] += 1\nans = pow(2, n) - 1\nfor i in range(1, 31):\n    if bit[i]:\n        ans = (ans - pow(2, sum(bit[i:]) - 1)) % MD\nprint(ans)", "(r, a) = (2 ** int(input()) - 1, [0] * 99)\nfor i in input().split():\n    a[bin(int(i))[::-1].index('1')] += 1\nprint((r - sum((2 ** (sum(a[i:]) - 1) for i in range(1, 30) if a[i]))) % (10 ** 9 + 7))", "(M, r, a) = (10 ** 9 + 7, 2 ** int(input()) - 1, [0] * 99)\nfor i in input().split():\n    a[bin(int(i))[::-1].index('1')] += 1\nprint((r - sum((2 ** (sum(a[i:]) - 1) for i in range(1, 30) if a[i]))) % M)", "(r, a) = (2 ** int(input()) - 1, [0] * 99)\nfor i in input().split():\n    a[bin(int(i))[::-1].index('1')] += 1\nprint((r - sum((2 ** (sum(a[i:]) - 1) for i in range(1, 30) if a[i]))) % (10 ** 9 + 7))", "r = 2 ** int(input()) - 1\na = [0] * 99\nfor i in input().split():\n    a[bin(int(i))[::-1].index('1')] += 1\nprint((r - sum(set((2 ** sum(a[i:]) for i in range(1, 30)))) // 2) % (10 ** 9 + 7))", "import sys\nimport math\ninpu = sys.stdin.readline\nprin = sys.stdout.write\n\ndef nu2(n):\n    i = 0\n    while n % 2 == 0:\n        i += 1\n        n //= 2\n    return i\nn = int(inpu())\na = list(map(int, inpu().split()))\neven = [guy for guy in a if guy % 2 == 0]\ntwo = [nu2(guy) for guy in even]\ntwo.sort()\ncounts = [0] * two[-1]\nfor guy in two:\n    counts[guy - 1] += 1\nbad = 0\nm = 1000000007\nfor i in range(len(counts)):\n    if counts[i] > 0:\n        bad += pow(2, sum(counts[i:]) - 1, m)\nprint((pow(2, n, m) - bad - 1) % m)", "n = int(input())\na = list(map(int, input().split()))\nmod = 10 ** 9 + 7\nc = [0] * 30\nfor i in a:\n    z = 0\n    while i & 1 == 0:\n        i >>= 1\n        z += 1\n    c[z] += 1\nw = n - c[0]\nans = 2 ** n - 1\nfor i in range(1, 30):\n    if c[i]:\n        w -= c[i]\n        ans = (ans - pow(2, c[i] - 1, mod) * pow(2, w, mod)) % mod\nprint((ans + mod) % mod)"]