["t = int(input())\nfor i in range(t):\n    (n, k, x) = map(int, input().split())\n    s = input()\n    arr = []\n    cnt = 0\n    for i in range(n):\n        if s[i] == '*':\n            cnt += 1\n        elif cnt > 0:\n            arr.append(cnt * k)\n            cnt = 0\n    if cnt > 0:\n        arr.append(cnt * k)\n    l = len(arr)\n    res = [0 for i in range(l)]\n    ind = 0\n    if 'a' in s:\n        for i in range(l):\n            arr[i] += 1\n        r = [0 for i in range(l)]\n        for i in range(l - 1, -1, -1):\n            if i == l - 1:\n                r[i] = arr[i]\n            else:\n                r[i] = arr[i] * r[i + 1]\n            if r[i] >= x:\n                ind = i\n                break\n        for i in range(ind, l):\n            if i < l - 1:\n                if x % r[i + 1] == 0:\n                    df = x // r[i + 1] - 1\n                else:\n                    df = x // r[i + 1]\n                res[i] = df\n                x -= df * r[i + 1]\n            else:\n                res[i] = x - 1\n        cnt = 0\n        st = ''\n        ind = 0\n        for i in range(n):\n            if s[i] == '*':\n                cnt += 1\n            else:\n                if cnt > 0:\n                    st += 'b' * res[ind]\n                    ind += 1\n                    cnt = 0\n                st += s[i]\n        if cnt > 0:\n            st += 'b' * res[ind]\n        print(st)\n    else:\n        st = 'b' * x\n        print(st)", "def solve():\n    [N, K, X] = [int(x) for x in input().split()]\n    SS = list(input())\n    if SS.count('a') == len(SS):\n        print(''.join(SS))\n        return\n    S = list(reversed(SS))\n    sp = [0]\n    for i in range(len(S)):\n        if S[i] == '*':\n            sp[-1] += 1\n        elif sp[-1] != 0:\n            sp.append(0)\n    if sp[-1] == 0:\n        sp.pop()\n    cur = 0\n    p = sp[0] * K + 1\n    pot = [p]\n    sol = [0]\n    while p < X:\n        cur += 1\n        p *= sp[cur] * K + 1\n        pot.append(p)\n        sol.append(0)\n    X -= 1\n    for i in range(cur, 0, -1):\n        sol[i] = X // pot[i - 1]\n        X %= pot[i - 1]\n    sol[0] = X\n    sol = sol + [0] * (len(sp) - cur - 1)\n    SSS = []\n    cur = len(sol) - 1\n    for i in range(len(SS)):\n        if SS[i] == 'a':\n            SSS.append('a')\n        elif SS[i] == '*' and (i == 0 or SS[i - 1] != '*'):\n            SSS.append('b' * sol[cur])\n            cur -= 1\n    print(''.join(SSS))\nT = int(input())\nfor i in range(T):\n    solve()", "T = int(input())\n\ndef preprocess(s):\n    s_new = s[0]\n    for i in range(1, len(s)):\n        if s[i] == 'a':\n            s_new += 'a'\n        elif s[i - 1] != s[i] == '*':\n            s_new += '*'\n    return s_new\nfor t in range(T):\n    (n, k, x) = map(int, input().split())\n    s1 = input()\n    stars = s1.split('a')\n    s = list(s1)\n    b_add = x - 1\n    number = []\n    for i in stars:\n        if len(i) != 0:\n            number.append(len(i) * k + 1)\n    number.append(1)\n    new_num = number[1:]\n    prod = 1\n    new_number = []\n    for i in range(len(new_num) - 1, -1, -1):\n        prod *= new_num[i]\n        new_number.append(prod)\n    new_number = new_number[::-1]\n    no_b = []\n    for i in new_number:\n        no_b.append(b_add // i)\n        b_add -= b_add // i * i\n    no_b_rev = no_b[::-1]\n    ps = preprocess(s1)\n    answer = ''\n    for i in ps:\n        if i == 'a':\n            answer += 'a'\n        else:\n            answer += 'b' * no_b_rev.pop()\n    print(answer)", "cases = int(input())\nfor i in range(cases):\n    (n, k, x) = [int(x) for x in input().split()]\n    liste = [val for val in input()]\n    x -= 1\n    numstars = []\n    num_stars_in_group = 0\n    for i in range(len(liste) - 1, -1, -1):\n        if liste[i] == '*':\n            num_stars_in_group += 1\n        elif liste[i] == 'a' and num_stars_in_group > 0:\n            numstars.append(num_stars_in_group)\n            num_stars_in_group = 0\n    if num_stars_in_group != 0:\n        numstars.append(num_stars_in_group)\n    num_bs = []\n    for i in range(len(numstars)):\n        num_bs.append(x % (numstars[i] * k + 1) * 'b')\n        x = x // (numstars[i] * k + 1)\n    star = False\n    finished_list = []\n    counter = 0\n    for i in range(len(liste) - 1, -1, -1):\n        if liste[i] == '*' and counter < len(num_bs) and (star == False):\n            star = True\n            finished_list.append(num_bs[counter])\n            counter += 1\n        elif liste[i] == 'a':\n            star = False\n            finished_list.append(liste[i])\n    print(''.join(finished_list[::-1]))", "for _ in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    x -= 1\n    s = input()[::-1]\n    res = []\n    i = 0\n    while i < n:\n        if s[i] == 'a':\n            res.append(s[i])\n        else:\n            j = i\n            while j + 1 < n and s[j + 1] == s[i]:\n                j += 1\n            cur = (j - i + 1) * k + 1\n            res.append('b' * (x % cur))\n            x //= cur\n            i = j\n        i += 1\n    print(''.join(res[::-1]))", "A = input\nfor _ in [0] * int(A()):\n    (n, k, x) = map(int, A().split())\n    x -= 1\n    p = 'a'\n    a = [[0, 0]]\n    i = 0\n    r = ''\n    for y in A()[::-1]:\n        if y != p:\n            p = y\n            a += [[0, 0]] * i\n            i ^= 1\n        a[-1][i] += 1\n    for (u, v) in a:\n        m = k * v + 1\n        r = x % m * 'b' + u * 'a' + r\n        x //= m\n    print(r)", "for _ in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    x -= 1\n    s = input()[::-1]\n    res = []\n    i = 0\n    while i < n:\n        if s[i] == 'a':\n            res.append(s[i])\n        else:\n            j = i\n            while j + 1 < n and s[j + 1] == s[i]:\n                j += 1\n            cur = (j - i + 1) * k + 1\n            res.append('b' * (x % cur))\n            x //= cur\n            i = j\n        i += 1\n    print(''.join(res[::-1]))", "l = input\nfor o in [0] * int(l()):\n    (n, k, x) = map(int, l().split())\n    x -= 1\n    p = 'a'\n    a = [[0, 0]]\n    i = 0\n    r = ''\n    for y in l()[::-1]:\n        if y != p:\n            p = y\n            a += [[0, 0]] * i\n            i ^= 1\n        a[-1][i] += 1\n    for (u, v) in a:\n        m = k * v + 1\n        r = x % m * 'b' + u * 'a' + r\n        x //= m\n    print(r)", "import sys\nIN = sys.stdin\nOUT = sys.stdout\ntc = int(IN.readline())\nfor ti in range(tc):\n    (n, k, x) = map(int, IN.readline().strip().split())\n    x -= 1\n    s = IN.readline().strip()\n    a = list()\n    b = list()\n    d = list()\n    a.append('')\n    for c in s:\n        if c == 'a':\n            if len(a) > len(b):\n                a[-1] += 'a'\n            else:\n                a.append('a')\n        elif len(a) > len(b):\n            b.append(k + 1)\n        else:\n            b[-1] += k\n    b.reverse()\n    for bb in b:\n        d.append('b' * (x % bb))\n        x = x // bb\n    d.reverse()\n    for i in range(len(d)):\n        print(a[i], d[i], end='', sep='')\n    if len(a) > len(b):\n        print(a[len(d)], end='', sep='')\n    print()", "for _ in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    x -= 1\n    s = input()\n    L = []\n    if s[0] == 'a':\n        M = []\n    else:\n        M = [0]\n    t = 0\n    a = 0\n    for i in range(n):\n        if s[i] == '*':\n            t += 1\n            if a != 0:\n                M.append(a)\n                a = 0\n        else:\n            a += 1\n            if t != 0:\n                L.append(t * k + 1)\n                t = 0\n    if t != 0:\n        L.append(t * k + 1)\n    else:\n        M.append(a)\n    N = [0] * len(L)\n    for j in range(-1, -len(L) - 1, -1):\n        N[j] = x % L[j]\n        x = x // L[j]\n    for i in range(len(N)):\n        print('a' * M[i], 'b' * N[i], sep='', end='')\n    if len(M) > len(L):\n        print('a' * M[-1])\n    else:\n        print()", "import sys\nimport bisect\nimport math\nfrom collections import deque\ninput = lambda : sys.stdin.readline().strip()\nmod = 10 ** 9 + 7\n\ndef solve():\n    (n, k, x) = map(int, input().split())\n    s = input()\n    a = []\n    for i in range(n):\n        if s[i] == 'a':\n            a.append(s[i])\n        elif i > 0 and s[i - 1] != 'a':\n            a[-1] += k\n        else:\n            a.append(k)\n    (r, j) = (1, 0)\n    n = len(a)\n    for i in reversed(range(n)):\n        if a[i] != 'a':\n            r *= a[i] + 1\n            if r >= x:\n                j = i\n                break\n    x -= 1\n    new_s = ''\n    for i in range(j):\n        if a[i] == 'a':\n            new_s += 'a'\n    for i in range(j, n):\n        if a[i] == 'a':\n            new_s += 'a'\n        else:\n            r = r // (a[i] + 1)\n            r1 = min(x // r, a[i])\n            new_s += 'b' * r1\n            x = x - r1 * r\n    return new_s\nt = 1\nt = int(input())\nfor _ in range(t):\n    print(solve())", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, k, x) = map(int, input().split())\n    s = input()\n    sa = list(filter(lambda x: x != '', s.split('a')))\n    sz = [len(x) * k + 1 for x in sa]\n    suff = [1 for x in range(len(sz) + 1)]\n    for i in range(len(sz) - 1, -1, -1):\n        suff[i] = sz[i] * suff[i + 1]\n    j = 0\n    for i in range(len(sz) - 1, -1, -1):\n        if suff[i] >= x:\n            j = i\n            break\n    add = [0 for x in range(len(sz))]\n    for i in range(j, len(sz)):\n        to_add = (x - 1) // suff[i + 1]\n        x -= to_add * suff[i + 1]\n        add[i] = to_add\n    res = ''\n    j = 0\n    i = 0\n    while i < n:\n        if s[i] == 'a':\n            res += 'a'\n            i += 1\n        else:\n            while i < n and s[i] == '*':\n                i += 1\n            if j < len(add):\n                res += 'b' * add[j]\n                j += 1\n    print(res)", "I = input\nfor _ in [0] * int(I()):\n    (n, k, x) = map(int, I().split())\n    x -= 1\n    a = (b, c) = [[0], []]\n    i = 0\n    p = 'a'\n    r = [0]\n    for y in I():\n        if y != p:\n            p = y\n            i ^= 1\n            a[i] += (0,)\n        a[i][-1] += 1\n    for y in c[::-1]:\n        r = [x % (m := (k * y + 1))] + r\n        x //= m\n    print(''.join((x * 'a' + y * 'b' for (x, y) in zip(b, r))))", "I = input\nfor _ in [0] * int(I()):\n    (n, k, x) = map(int, I().split())\n    x -= 1\n    a = (b, c) = [[0], []]\n    i = 0\n    p = 'a'\n    r = [0]\n    for y in I():\n        if y != p:\n            p = y\n            i ^= 1\n            a[i] += (0,)\n        a[i][-1] += 1\n    for y in c[::-1]:\n        m = k * y + 1\n        r = [x % m] + r\n        x //= m\n    print(''.join((x * 'a' + y * 'b' for (x, y) in zip(b, r))))", "t = int(input())\nfor i in range(t):\n    (n, k, x) = map(int, input().split())\n    s = input()\n    arr = []\n    cnt = 0\n    for i in range(n):\n        if s[i] == '*':\n            cnt += 1\n        elif cnt > 0:\n            arr.append(cnt * k)\n            cnt = 0\n    if cnt > 0:\n        arr.append(cnt * k)\n    l = len(arr)\n    res = [0 for i in range(l)]\n    ind = 0\n    if 'a' in s:\n        for i in range(l):\n            arr[i] += 1\n        r = [0 for i in range(l)]\n        for i in range(l - 1, -1, -1):\n            if i == l - 1:\n                r[i] = arr[i]\n            else:\n                r[i] = arr[i] * r[i + 1]\n            if r[i] >= x:\n                ind = i\n                break\n        for i in range(ind, l):\n            if i < l - 1:\n                df = x // r[i + 1] - int(x % r[i + 1] == 0)\n                res[i] = df\n                x -= df * r[i + 1]\n            else:\n                res[i] = x - 1\n        cnt = 0\n        st = ''\n        ind = 0\n        for i in range(n):\n            if s[i] == '*':\n                cnt += 1\n            else:\n                if cnt > 0:\n                    st += 'b' * res[ind]\n                    ind += 1\n                    cnt = 0\n                st += s[i]\n        if cnt > 0:\n            st += 'b' * res[ind]\n        print(st)\n    else:\n        st = 'b' * x\n        print(st)", "I = input\nfor _ in [0] * int(I()):\n    (_, k, x) = map(int, I().split())\n    x -= 1\n    p = 'a'\n    a = [0]\n    r = [0]\n    for y in I():\n        if y != p:\n            p = y\n            a += (0,)\n        a[-1] += 1\n    for y in a[1::2][::-1]:\n        m = k * y + 1\n        r = [x % m] + r\n        x //= m\n    print(''.join((x * 'a' + y * 'b' for (x, y) in zip(a[::2], r))))", "I = input\nfor _ in [0] * int(I()):\n    (n, k, x) = map(int, I().split())\n    x -= 1\n    (p, a, r) = ('a', [0], [0])\n    for y in I():\n        if y != p:\n            p = y\n            a += (0,)\n        a[-1] += 1\n    for y in a[1::2][::-1]:\n        m = k * y + 1\n        r = [x % m] + r\n        x //= m\n    print(''.join((x * 'a' + y * 'b' for (x, y) in zip(a[::2], r))))", "t = int(input())\nfor _ in range(t):\n    (n, k, x) = map(int, input().split())\n    s = input()\n    s = s[::-1]\n    ans = ''\n    i = 0\n    x -= 1\n    while i < n:\n        if s[i] == 'a':\n            ans += 'a'\n        else:\n            j = i\n            while j + 1 < n and s[j + 1] == s[i]:\n                j += 1\n            c = (j - i + 1) * k + 1\n            c1 = x % c\n            ans += 'b' * c1\n            x = x // c\n            i = j\n        i += 1\n    print(ans[::-1])", "for _ in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    x -= 1\n    s = input()[::-1]\n    res = []\n    i = 0\n    while i < n:\n        if s[i] == 'a':\n            res.append(s[i])\n        else:\n            j = i\n            while j + 1 < n and s[j + 1] == s[i]:\n                j += 1\n            cur = (j - i + 1) * k + 1\n            res.append('b' * (x % cur))\n            x //= cur\n            i = j\n        i += 1\n    print(''.join(res[::-1]))", "t = int(input())\nfor _ in range(t):\n    (n, k, x) = map(int, input().split())\n    x = x - 1\n    s = input().rstrip()\n    s = s[::-1]\n    ans = []\n    i = 0\n    while i < n:\n        if s[i] == 'a':\n            ans.append(s[i])\n        else:\n            j = i\n            c = 0\n            while j < n - 1 and s[j] == s[j + 1]:\n                c += 1\n                j += 1\n            h = (c + 1) * k + 1\n            ans.append('b' * (x % h))\n            x = x // h\n            i = j\n        i += 1\n    print(''.join(ans[::-1]))", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    c -= 1\n    s = input()[::-1]\n    res = []\n    i = 0\n    while i < a:\n        if s[i] == 'a':\n            res.append(s[i])\n        else:\n            j = i\n            while j + 1 < a and s[j + 1] == s[i]:\n                j += 1\n            cur = (j - i + 1) * b + 1\n            res.append('b' * (c % cur))\n            c //= cur\n            i = j\n        i += 1\n    print(''.join(res[::-1]))", "def solve():\n    (n, k, x) = list(map(int, input().split()))\n    s = input()\n    if '*' not in s:\n        print(s)\n        return\n    stars = [_ for _ in s.split('a') if _]\n    expand = [1 + k * len(star) for star in stars]\n    prods = [expand[-1]]\n    for i in range(1, len(stars)):\n        prods += [prods[-1] * expand[len(stars) - i - 1]]\n    x -= 1\n    counts = []\n    for prod in reversed(prods):\n        counts += [x // prod]\n        x -= prod * (x // prod)\n    counts += [x % prods[0]]\n    globals().update(locals())\n    answer = ''\n    i = 1\n    j = 0\n    while j < len(s):\n        if s[j] == 'a':\n            answer += 'a'\n            j += 1\n        else:\n            answer += 'b' * counts[i]\n            i += 1\n            while j < len(s) and s[j] == '*':\n                j += 1\n    print(answer)\n    globals().update(locals())\nfor _ in range(int(input())):\n    solve()", "I = input\nfor _ in [0] * int(I()):\n    (n, k, x) = map(int, I().split())\n    x -= 1\n    p = 'a'\n    a = [[0, 0]]\n    i = 0\n    r = ''\n    for y in I()[::-1]:\n        if y != p:\n            p = y\n            a += [[0, 0]] * i\n            i ^= 1\n        a[-1][i] += 1\n    for (u, v) in a:\n        m = k * v + 1\n        r = x % m * 'b' + u * 'a' + r\n        x //= m\n    print(r)", "I = input\nfor _ in [0] * int(I()):\n    (n, k, x) = map(int, I().split())\n    x -= 1\n    p = 'a'\n    a = [[0, 0]]\n    i = 0\n    r = ''\n    for y in I()[::-1]:\n        if y != p:\n            p = y\n            a += [[0, 0]] * i\n            i ^= 1\n        a[-1][i] += 1\n    for (u, v) in a:\n        m = k * v + 1\n        r = x % m * 'b' + u * 'a' + r\n        x //= m\n    print(r)", "I = input\nfor _ in [0] * int(I()):\n    (n, k, x) = map(int, I().split())\n    x -= 1\n    p = 'a'\n    a = [[0, 0]]\n    i = 0\n    r = ''\n    for y in I()[::-1]:\n        if y != p:\n            p = y\n            a += [[0, 0]] * i\n            i ^= 1\n        a[-1][i] += 1\n    for (u, v) in a:\n        m = k * v + 1\n        r = x % m * 'b' + u * 'a' + r\n        x //= m\n    print(r)", "I = input\nfor _ in [0] * int(I()):\n    (n, k, x) = map(int, I().split())\n    x -= 1\n    p = 'a'\n    a = [[0, 0]]\n    i = 0\n    r = ''\n    for y in I()[::-1]:\n        if y != p:\n            p = y\n            a += [[0, 0]] * i\n            i ^= 1\n        a[-1][i] += 1\n    for (u, v) in a:\n        m = k * v + 1\n        r = x % m * 'b' + u * 'a' + r\n        x //= m\n    print(r)", "for _ in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    x = x - 1\n    x = x\n    x = x\n    x = x\n    x = x\n    x = x\n    x = x\n    x = x\n    x = x\n    x = x\n    x = x\n    x = x\n    x = x\n    x = x\n    x = x\n    x = x\n    x = x\n    s = input()[::-1]\n    res = []\n    i = 0\n    while i < n:\n        if s[i] == 'a':\n            res.append(s[i])\n        else:\n            j = i\n            while j + 1 < n and s[j + 1] == s[i]:\n                j = j + 1\n            cur = (j - i + 1) * k + 1\n            res.append('b' * (x % cur))\n            x //= cur\n            i = j\n        i = i + 1\n    print(''.join(res[::-1]))", "for t in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    s = input()\n    x -= 1\n    ans = ''\n    bs = 0\n    for sym in s[::-1]:\n        if sym == '*':\n            bs += 1\n        elif bs != 0:\n            ans = 'a' + 'b' * (x % (bs * k + 1)) + ans\n            x //= bs * k + 1\n            bs = 0\n        else:\n            ans = 'a' + ans\n    if bs != 0:\n        ans = 'b' * (x % (bs * k + 1)) + ans\n    print(ans)", "I = input\nfor _ in [0] * int(I()):\n    (n, k, x) = map(int, I().split())\n    x -= 1\n    p = 'a'\n    a = [[0, 0]]\n    i = 0\n    r = ''\n    for y in I()[::-1]:\n        if y != p:\n            p = y\n            a += [[0, 0]] * i\n            i ^= 1\n        a[-1][i] += 1\n    for (u, v) in a:\n        m = k * v + 1\n        r = x % m * 'b' + u * 'a' + r\n        x //= m\n    print(r)", "for _ in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    x -= 1\n    s = input()[::-1]\n    res = []\n    i = 0\n    while i < n:\n        if s[i] == 'a':\n            res.append(s[i])\n        else:\n            j = i\n            while j + 1 < n and s[j + 1] == s[i]:\n                j += 1\n            cur = (j - i + 1) * k + 1\n            res.append('b' * (x % cur))\n            x //= cur\n            i = j\n        i += 1\n    print(''.join(res[::-1]))", "I = input\nfor _ in [0] * int(I()):\n    (n, k, x) = map(int, I().split())\n    x -= 1\n    p = 'a'\n    a = [[0, 0]]\n    i = 0\n    r = ''\n    for y in I()[::-1]:\n        if y != p:\n            p = y\n            a += [[0, 0]] * i\n            i ^= 1\n        a[-1][i] += 1\n    for (u, v) in a:\n        m = k * v + 1\n        r = x % m * 'b' + u * 'a' + r\n        x //= m\n    print(r)", "for _ in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    x -= 1\n    s = input()[::-1]\n    res = []\n    i = 0\n    while i < n:\n        if s[i] == 'a':\n            res.append(s[i])\n        else:\n            j = i\n            while j + 1 < n and s[j + 1] == s[i]:\n                j += 1\n            cur = (j - i + 1) * k + 1\n            res.append('b' * (x % cur))\n            x //= cur\n            i = j\n        i += 1\n    print(''.join(res[::-1]))", "t = int(input())\nfor i in range(t):\n    (n, k, x) = map(int, input().split())\n    s = input()\n    aa = []\n    ab = []\n    if s[0] == '*':\n        aa.append(0)\n    c = 0\n    for j in range(n):\n        if s[j] == 'a':\n            c += 1\n        elif c != 0:\n            aa.append(c)\n            c = 0\n    if c != 0:\n        aa.append(c)\n    c = 0\n    for j in range(n):\n        if s[j] == '*':\n            c += 1\n        elif c != 0:\n            ab.append(c)\n            c = 0\n    if ab != 0:\n        ab.append(c)\n    y = x\n    y -= 1\n    nb = ab[:]\n    for i in range(len(ab) - 1, -1, -1):\n        nb[i] = y % (ab[i] * k + 1)\n        y = y // (ab[i] * k + 1)\n    for i in range(len(aa)):\n        print('a' * aa[i], end='')\n        if i < len(nb):\n            print('b' * nb[i], end='')\n    print('')", "I = input\nfor _ in [0] * int(I()):\n    (n, k, x) = map(int, I().split())\n    x -= 1\n    p = 'a'\n    a = [0]\n    r = [0]\n    for y in I():\n        if y != p:\n            p = y\n            a += (0,)\n        a[-1] += 1\n    for y in a[1::2][::-1]:\n        m = k * y + 1\n        r = [x % m] + r\n        x //= m\n    print(''.join((x * 'a' + y * 'b' for (x, y) in zip(a[::2], r))))", "t = int(input())\nfor i in range(t):\n    (n, k, x) = map(int, input().split())\n    s = input()\n    (aa, ab) = ([], [])\n    if s[0] == '*':\n        aa.append(0)\n    c = 0\n    for j in range(n):\n        if s[j] == 'a':\n            c += 1\n        elif c != 0:\n            aa.append(c)\n            c = 0\n    if c != 0:\n        aa.append(c)\n    c = 0\n    for j in range(n):\n        if s[j] == '*':\n            c += 1\n        elif c != 0:\n            ab.append(c)\n            c = 0\n    if ab != 0:\n        ab.append(c)\n    y = x\n    y -= 1\n    nb = ab[:]\n    for i in range(len(ab) - 1, -1, -1):\n        nb[i] = y % (ab[i] * k + 1)\n        y = y // (ab[i] * k + 1)\n    for i in range(len(aa)):\n        print('a' * aa[i], end='')\n        if i < len(nb):\n            print('b' * nb[i], end='')\n    print('')", "I = input\nfor _ in [0] * int(I()):\n    (n, k, x) = map(int, I().split())\n    x -= 1\n    p = 'a'\n    a = [0]\n    r = [0]\n    for y in I():\n        if y != p:\n            p = y\n            a += (0,)\n        a[-1] += 1\n    for y in a[1::2][::-1]:\n        m = 1 + k * y\n        r = [x % m] + r\n        x //= m\n    print(''.join((x * 'a' + y * 'b' for (x, y) in zip(a[::2], r))))", "for _ in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    x -= 1\n    s = input()[::-1]\n    res = []\n    i = 0\n    while i < n:\n        if s[i] == 'a':\n            res.append(s[i])\n        else:\n            j = i\n            while j + 1 < n and s[j + 1] == s[i]:\n                j += 1\n            cur = (j - i + 1) * k + 1\n            res.append('b' * (x % cur))\n            x //= cur\n            i = j\n        i += 1\n    print(''.join(res[::-1]))", "for _ in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    x -= 1\n    s = input()[::-1]\n    res = []\n    i = 0\n    while i < n:\n        if s[i] == 'a':\n            res.append(s[i])\n        else:\n            j = i\n            while j + 1 < n and s[j + 1] == s[i]:\n                j += 1\n            cur = (j - i + 1) * k + 1\n            res.append('b' * (x % cur))\n            x //= cur\n            i = j\n        i += 1\n    print(''.join(res[::-1]))", "for _ in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    x -= 1\n    s = input()[::-1]\n    res = []\n    i = 0\n    while i < n:\n        if s[i] == 'a':\n            res.append(s[i])\n        else:\n            j = i\n            while j + 1 < n and s[j + 1] == s[i]:\n                j += 1\n            cur = (j - i + 1) * k + 1\n            res.append('b' * (x % cur))\n            x //= cur\n            i = j\n        i += 1\n    print(''.join(res[::-1]))", "I = input\nfor _ in [0] * int(I()):\n    (n, k, x) = map(int, I().split())\n    x -= 1\n    p = 'a'\n    a = [[0, 0]]\n    i = 0\n    r = ''\n    for y in I()[::-1]:\n        if y != p:\n            p = y\n            a += [[0, 0]] * i\n            i ^= 1\n        a[-1][i] += 1\n    for (u, v) in a:\n        m = k * v + 1\n        r = x % m * 'b' + u * 'a' + r\n        x //= m\n    print(r)", "for t in range(int(input())):\n    [n, k, x] = [int(x) for x in input().split()]\n    s = input()\n    s = s[::-1]\n    x -= 1\n    res = ''\n    i = 0\n    while i < n:\n        if s[i] == 'a':\n            res += 'a'\n        else:\n            j = i\n            while j + 1 < n and s[j + 1] == s[i]:\n                j += 1\n            count = (j - i + 1) * k + 1\n            res += 'b' * (x % count)\n            x //= count\n            i = j\n        i += 1\n    print(res[::-1])", "for _ in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    x -= 1\n    s = input()[::-1]\n    l1 = s.split('a')\n    i = 0\n    ans = []\n    for i in range(len(l1)):\n        ans.append('a')\n        temp = len(l1[i]) * k + 1\n        ans.append('b' * (x % temp))\n        x = x // temp\n    ans.pop(0)\n    print(''.join(ans[::-1]))", "for _ in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    x -= 1\n    s = input()[::-1]\n    res = []\n    i = 0\n    while i < n:\n        if s[i] == 'a':\n            res.append(s[i])\n        else:\n            j = i\n            while j + 1 < n and s[j + 1] == s[i]:\n                j += 1\n            cur = (j - i + 1) * k + 1\n            res.append('b' * (x % cur))\n            x //= cur\n            i = j\n        i += 1\n    print(''.join(res[::-1]))", "for _ in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    x -= 1\n    s = input()[::-1]\n    res = []\n    i = 0\n    while i < n:\n        if s[i] == 'a':\n            res.append(s[i])\n        else:\n            j = i\n            while j + 1 < n and s[j + 1] == s[i]:\n                j += 1\n            cur = (j - i + 1) * k + 1\n            res.append('b' * (x % cur))\n            x //= cur\n            i = j\n        i += 1\n    print(''.join(res[::-1]))", "for _ in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    x -= 1\n    s = input()[::-1]\n    res = []\n    i = 0\n    while i < n:\n        if s[i] == 'a':\n            res.append(s[i])\n        else:\n            j = i\n            while j + 1 < n and s[j + 1] == s[i]:\n                j += 1\n            cur = (j - i + 1) * k + 1\n            res.append('b' * (x % cur))\n            x //= cur\n            i = j\n        i += 1\n    print(''.join(res[::-1]))", "for _ in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    x -= 1\n    s = input()[::-1]\n    res = []\n    i = 0\n    while i < n:\n        if s[i] == 'a':\n            res.append(s[i])\n        else:\n            j = i\n            while j + 1 < n and s[j + 1] == s[i]:\n                j += 1\n            cur = (j - i + 1) * k + 1\n            res.append('b' * (x % cur))\n            x //= cur\n            i = j\n        i += 1\n    print(''.join(res[::-1]))", "for _ in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    x -= 1\n    s = input()[::-1]\n    res = []\n    i = 0\n    while i < n:\n        if s[i] == 'a':\n            res.append(s[i])\n        else:\n            j = i\n            while j + 1 < n and s[j + 1] == s[i]:\n                j += 1\n            cur = (j - i + 1) * k + 1\n            res.append('b' * (x % cur))\n            x //= cur\n            i = j\n        i += 1\n    print(''.join(res[::-1]))", "for _ in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    x -= 1\n    s = input()[::-1]\n    res = []\n    i = 0\n    while i < n:\n        if s[i] == 'a':\n            res.append(s[i])\n        else:\n            j = i\n            while j + 1 < n and s[j + 1] == s[i]:\n                j += 1\n            cur = (j - i + 1) * k + 1\n            res.append('b' * (x % cur))\n            x //= cur\n            i = j\n        i += 1\n    print(''.join(res[::-1]))", "for _ in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    t = [1]\n    s = input()\n    for y in s:\n        if y == '*':\n            t[-1] += k\n        elif t[-1] != 1:\n            t.append(1)\n    if t[-1] == 1:\n        t.pop(-1)\n    if x == 1:\n        print(s.replace('*', ''))\n    else:\n        x -= 1\n        ans = []\n        for c in t[::-1]:\n            ans.append(x % c)\n            x //= c\n        ref = ans[::-1]\n        fans = []\n        p = False\n        c = 0\n        for x in s:\n            if x == '*':\n                if p == False:\n                    fans.append('b' * ref[c])\n                    c += 1\n                    p = True\n            else:\n                fans.append('a')\n                p = False\n        print(''.join(fans))", "for _ in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    x -= 1\n    s = input()[::-1]\n    res = []\n    i = 0\n    while i < n:\n        if s[i] == 'a':\n            res.append(s[i])\n        else:\n            j = i\n            while j + 1 < n and s[j + 1] == s[i]:\n                j += 1\n            cur = (j - i + 1) * k + 1\n            res.append('b' * (x % cur))\n            x //= cur\n            i = j\n        i += 1\n    print(''.join(res[::-1]))", "for _ in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    x -= 1\n    s = input()[::-1]\n    res = []\n    i = 0\n    while i < n:\n        if s[i] == 'a':\n            res.append(s[i])\n        else:\n            j = i\n            while j + 1 < n and s[j + 1] == s[i]:\n                j += 1\n            cur = (j - i + 1) * k + 1\n            res.append('b' * (x % cur))\n            x //= cur\n            i = j\n        i += 1\n    print(''.join(res[::-1]))", "for _ in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    x -= 1\n    s = input()[::-1]\n    res = []\n    i = 0\n    while i < n:\n        if s[i] == 'a':\n            res.append(s[i])\n        else:\n            j = i\n            while j + 1 < n and s[j + 1] == s[i]:\n                j += 1\n            cur = (j - i + 1) * k + 1\n            res.append('b' * (x % cur))\n            x //= cur\n            i = j\n        i += 1\n    print(''.join(res[::-1]))", "for _ in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    s = input()\n    blocks = [0]\n    for c in s[::-1] + 'a':\n        if c == 'a':\n            if blocks[-1]:\n                blocks.append(0)\n        else:\n            blocks[-1] += 1\n    blocks.pop()\n    x -= 1\n    ans = [0] * len(blocks)\n    for (i, b) in enumerate(blocks):\n        (ans[i], x) = (x % (b * k + 1), x // (b * k + 1))\n    p = ''\n    last_ast = False\n    for c in s:\n        if c == 'a':\n            p += c\n            last_ast = False\n        else:\n            if not last_ast:\n                p += 'b' * ans.pop()\n            last_ast = True\n    print(p)", "I = input\nfor _ in [0] * int(I()):\n    (n, k, x) = map(int, I().split())\n    x -= 1\n    p = 'a'\n    a = [[0, 0]]\n    i = 0\n    r = ''\n    for y in I()[::-1]:\n        if y != p:\n            p = y\n            a += [[0, 0]] * i\n            i ^= 1\n        a[-1][i] += 1\n    for (u, v) in a:\n        m = k * v + 1\n        r = x % m * 'b' + u * 'a' + r\n        x //= m\n    print(r)", "for _ in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    x -= 1\n    s = input()[::-1]\n    res = []\n    i = 0\n    while i < n:\n        if s[i] == 'a':\n            res.append(s[i])\n        else:\n            j = i\n            while j + 1 < n and s[j + 1] == s[i]:\n                j += 1\n            cur = (j - i + 1) * k + 1\n            res.append('b' * (x % cur))\n            x //= cur\n            i = j\n        i += 1\n    print(''.join(res[::-1]))", "for _ in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    s = input()\n    a = []\n    for c in s:\n        if len(a) > 0 and a[-1][0] == c:\n            a[-1][1] += 1\n        else:\n            a.append([c, 1])\n    a.append(['', 0, 1])\n    a = a[::-1]\n    for i in range(1, len(a)):\n        if a[i - 1][0] == '*':\n            a[i].append(a[i - 1][2] * (a[i - 1][1] * k + 1))\n        else:\n            a[i].append(a[i - 1][2])\n    a = a[::-1]\n    answer = ''\n    x -= 1\n    for item in a[:-1]:\n        if item[0] == 'a':\n            answer += 'a' * item[1]\n        else:\n            answer += 'b' * (x // item[2])\n            x %= item[2]\n    print(answer)", "for _ in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    x -= 1\n    s = input()[::-1]\n    res = []\n    i = 0\n    while i < n:\n        if s[i] == 'a':\n            res.append(s[i])\n        else:\n            j = i\n            while j + 1 < n and s[j + 1] == s[i]:\n                j += 1\n            cur = (j - i + 1) * k + 1\n            res.append('b' * (x % cur))\n            x //= cur\n            i = j\n        i += 1\n    print(''.join(res[::-1]))", "t = int(input())\nfor i in range(0, t):\n    a = input().split(' ')\n    n = int(a[0])\n    k = int(a[1])\n    x = int(a[2])\n    x -= 1\n    s = input()\n    sta = 0\n    cnt = [0] * 2005\n    pos = 0\n    for c in s:\n        if sta == 0 and c == 'a':\n            cnt[pos] *= k\n            cnt[pos] += 1\n            pos += 1\n            sta = 1\n        if sta == 1 and c == '*':\n            pos += 1\n            sta = 0\n        cnt[pos] += 1\n    if pos % 2 == 0:\n        cnt[pos] *= k\n        cnt[pos] += 1\n        temppos = pos\n    else:\n        temppos = pos - 1\n    for j in range(temppos, -1, -2):\n        temp = x % cnt[j]\n        x = x // cnt[j]\n        cnt[j] = temp\n    for j in range(0, pos + 1):\n        if j % 2 == 0:\n            print('b' * cnt[j], end='')\n        else:\n            print('a' * cnt[j], end='')\n    print()", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, k, x) = map(int, input().split())\n    s = list(input().strip())\n    arr = []\n    curr = 0\n    for i in range(n):\n        if s[i] == 'a':\n            if curr:\n                arr.append((i - 1, curr * k + 1))\n                curr = 0\n        else:\n            curr += 1\n    if curr:\n        arr.append((n - 1, curr * k + 1))\n    x -= 1\n    while x > 0 and arr:\n        (idx, d) = arr.pop()\n        s[idx] = x % d * 'b'\n        x //= d\n    ans = []\n    for c in s:\n        if c != '*':\n            ans.append(c)\n    return ''.join(ans)\nfor _ in range(int(input())):\n    print(solve())", "for _ in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    x -= 1\n    s = input()[::-1]\n    res = []\n    i = 0\n    while i < n:\n        if s[i] == 'a':\n            res.append(s[i])\n        else:\n            j = i\n            while j + 1 < n and s[j + 1] == s[i]:\n                j += 1\n            cur = (j - i + 1) * k + 1\n            res.append('b' * (x % cur))\n            x //= cur\n            i = j\n        i += 1\n    print(''.join(res[::-1]))", "import sys\nimport re\nimport math\nfrom math import log2 as lg\nfrom collections import deque\nimport random\nimport heapq\nimport itertools\nconst = 1000000007\nep = 1e-08\nn = int(input())\nfor i in range(n):\n    line = list(map(int, input().split()))\n    (n, k, x) = (line[0], line[1], line[2] - 1)\n    curr = input()\n    chunks = []\n    index = 0\n    while index < len(curr):\n        now = curr[index]\n        temp = 0\n        while index < len(curr) and curr[index] == now:\n            temp += 1\n            index += 1\n        if now == 'a':\n            chunks.append(['a', temp])\n        else:\n            chunks.append(['*', temp * k + 1])\n    index = len(chunks) - 1\n    while index >= 0 and x > 0:\n        if chunks[index][0] == 'a':\n            index -= 1\n            continue\n        howmany = x % chunks[index][1]\n        x //= chunks[index][1]\n        chunks[index][0] = 'b'\n        chunks[index][1] = howmany\n        index -= 1\n    ans = []\n    for term in chunks:\n        if term[0] == '*':\n            continue\n        elif term[0] == 'a':\n            ans.append('a' * term[1])\n        else:\n            ans.append('b' * term[1])\n    print(''.join(ans))", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nfrom collections import Counter\nt = inp()\nfor _ in range(t):\n    (n, k, x) = invr()\n    s = insr()\n    ss = [s[0]]\n    for (i, c) in enumerate(list(s)[1:]):\n        if c == 'a':\n            ss.append(c)\n            continue\n        if c == ss[-1]:\n            continue\n        else:\n            ss.append(c)\n    A = []\n    t = 0\n    if s[0] == '*':\n        t = 1\n    for (i, c) in enumerate(list(s)[1:]):\n        if c == '*' and s[i] == '*':\n            t += 1\n        if c == '*' and s[i] != '*':\n            t = 1\n        if c == 'a' and s[i] == '*':\n            A.append(t)\n    if s[-1] == '*':\n        A.append(t)\n    res_cnt = []\n    x -= 1\n    for i in A[::-1]:\n        res_cnt.append(x % (i * k + 1))\n        x //= i * k + 1\n    res = ''\n    for c in ss:\n        if c == '*':\n            num = res_cnt.pop()\n            res += 'b' * num\n        else:\n            res += 'a'\n    print(res)", "import sys\n\ndef ba_string(n, k, x, s):\n    x -= 1\n    output = ''\n    s = s[::-1]\n    m = 0\n    for ch in s:\n        if ch == 'a':\n            if m > 0:\n                if x > 0:\n                    p = x % (m * k + 1)\n                    x //= m * k + 1\n                    output += 'b' * p\n            output += ch\n            m = 0\n        else:\n            m += 1\n    if m > 0:\n        if x > 0:\n            p = x % (m * k + 1)\n            x //= m * k + 1\n            output += 'b' * p\n    return output[::-1]\nfor _ in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    s = input()\n    sys.stdout.write(f'{ba_string(n, k, x, s)}\\n')", "for _ in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    s = input()\n    l = []\n    d = {}\n    n_a = 0\n    n_b = 0\n    prev = None\n    for char in s:\n        if char == '*':\n            n_b += k\n            if prev != '*':\n                l.append(['b', 0, k])\n                d[len(l) - 1] = l[-1]\n            else:\n                l[-1][-1] += k\n        else:\n            n_a += 1\n            if prev != 'a':\n                l.append(['a', 1, 1])\n            else:\n                l[-1][1] += 1\n                l[-1][2] += 1\n        prev = char\n    marr = [d[i][-1] for i in sorted(d.keys(), reverse=True)]\n    barr = [0] * len(marr)\n    i = 0\n    x -= 1\n    while x:\n        (x, r) = divmod(x, marr[i] + 1)\n        barr[i] = r % (marr[i] + 1)\n        i += 1\n        if i == len(barr):\n            break\n    for (n_b, key) in zip(barr, sorted(d.keys(), reverse=True)):\n        d[key][1] = n_b\n    ans = ''\n    for item in l:\n        ans += item[0] * item[1]\n    print(ans)", "import bisect\nimport collections\nimport copy\nimport enum\nimport functools\nimport heapq\nimport itertools\nimport math\nimport random\nimport re\nimport sys\nimport time\nimport string\nfrom typing import List\nt = int(input())\nfor _ in range(t):\n    (n, k, x) = map(int, input().split())\n    x -= 1\n    p = []\n    s = input()\n    for (i, c) in enumerate(s):\n        if c == 'a':\n            p.append(['a', 1])\n        elif not p or p[-1][0] == 'a':\n            p.append(['b', k + 1])\n        else:\n            p[-1][1] += k\n    p.append(['a', 1])\n    for i in range(len(p) - 2, -1, -1):\n        if p[i + 1][1] > x:\n            p[i][1] = p[i + 1][1]\n        else:\n            p[i][1] *= p[i + 1][1]\n    ans = ''\n    for i in range(len(p) - 1):\n        if p[i][0] == 'a':\n            ans += 'a'\n        elif p[i + 1][1] > x:\n            continue\n        else:\n            ans += 'b' * (x // p[i + 1][1])\n            x %= p[i + 1][1]\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k, x) = map(int, input().split())\n    s = input()\n    aa = []\n    ab = []\n    if s[0] == '*':\n        aa.append(0)\n    c = 0\n    for j in range(n):\n        if s[j] == 'a':\n            c += 1\n        elif c != 0:\n            aa.append(c)\n            c = 0\n    if c != 0:\n        aa.append(c)\n    c = 0\n    for j in range(n):\n        if s[j] == '*':\n            c += 1\n        elif c != 0:\n            ab.append(c)\n            c = 0\n    if ab != 0:\n        ab.append(c)\n    y = x\n    y -= 1\n    nb = ab[:]\n    for i in range(len(ab) - 1, -1, -1):\n        nb[i] = y % (ab[i] * k + 1)\n        y = y // (ab[i] * k + 1)\n    for i in range(len(aa)):\n        print('a' * aa[i], end='')\n        if i < len(nb):\n            print('b' * nb[i], end='')\n    print('')", "I = input\nfor _ in [0] * int(I()):\n    (n, k, x) = map(int, I().split())\n    x -= 1\n    p = 'a'\n    a = [0]\n    r = [0]\n    for y in I():\n        if y != p:\n            p = y\n            a += (0,)\n        a[-1] += 1\n    for y in a[1::2][::-1]:\n        m = k * y + 1\n        r = [x % m] + r\n        x //= m\n    print(''.join((x * 'a' + y * 'b' for (x, y) in zip(a[::2], r))))", "t = int(input())\nfor i in range(t):\n    (n, k, x) = map(int, input().split())\n    s = input()\n    ck = [0]\n    if s[0] == 'a':\n        a = ['']\n    else:\n        a = ['', '']\n    for i in s:\n        if i == '*':\n            ck[-1] += 1\n        elif ck[-1] != 0:\n            ck.append(0)\n        if i == 'a':\n            a[-1] += 'a'\n        elif a[-1] != '':\n            a.append('')\n    if ck[-1] == 0:\n        ck.pop(-1)\n    b = []\n    x -= 1\n    for i in ck[::-1]:\n        b.append(x % (i * k + 1))\n        x = x // (i * k + 1)\n        if x == 0:\n            break\n    change_s = ''\n    while len(a) > 0:\n        if len(b) == 0:\n            b.append(0)\n        change_s += a.pop(-1) + 'b' * b.pop(0)\n    print(change_s[::-1])", "for _ in range(int(input())):\n    (n, k, x) = list(map(int, input().split()))\n    s = input()\n    short = ''\n    for c in s:\n        if not short.endswith('*') or c == 'a':\n            short += c\n    stars_sequences = list(filter(None, s.split('a')))\n    stars_count = [i.count('*') * k + 1 for i in stars_sequences]\n    res = ''\n    x = x - 1\n    digits = []\n    for el in stars_count[::-1]:\n        digits.append(x % el)\n        x //= el\n    digits = digits[::-1]\n    count = 0\n    for el in short:\n        if el == '*':\n            res += 'b' * digits[count]\n            count += 1\n        else:\n            res += 'a'\n    print(res)", "I = input\nfor _ in [0] * int(I()):\n    (n, k, x) = map(int, I().split())\n    x -= 1\n    p = 'a'\n    a = [[0, 0]]\n    i = 0\n    r = ''\n    for y in I()[::-1]:\n        if y != p:\n            p = y\n            a += [[0, 0]] * i\n            i ^= 1\n        a[-1][i] += 1\n    for (u, v) in a:\n        m = k * v + 1\n        r = x % m * 'b' + u * 'a' + r\n        x //= m\n    print(r)", "I = input\nfor _ in [0] * int(I()):\n    (n, k, x) = map(int, I().split())\n    x -= 1\n    p = 'a'\n    a = [[0, 0]]\n    i = 0\n    r = ''\n    for y in I()[::-1]:\n        if y != p:\n            p = y\n            a += [[0, 0]] * i\n            i ^= 1\n        a[-1][i] += 1\n    for (u, v) in a:\n        m = k * v + 1\n        r = x % m * 'b' + u * 'a' + r\n        x //= m\n    print(r)", "I = input\nfor _ in [0] * int(I()):\n    (n, k, x) = map(int, I().split())\n    x -= 1\n    p = 'a'\n    a = [0]\n    r = [0]\n    for y in I():\n        if y != p:\n            p = y\n            a += (0,)\n        a[-1] += 1\n    for y in a[1::2][::-1]:\n        m = k * y + 1\n        r = [x % m] + r\n        x //= m\n    print(''.join((x * 'a' + y * 'b' for (x, y) in zip(a[::2], r))))", "def merge(string, k):\n    arr = []\n    mrgstring = []\n    prevstar = False\n    temp = 0\n    for i in range(1, len(string) + 1):\n        if string[-1 * i] == '*':\n            prevstar = True\n            temp += 1\n        else:\n            if prevstar:\n                mrgstring.append('*')\n                arr.append(k * temp + 1)\n                temp = 0\n                prevstar = False\n            mrgstring.append('a')\n    if prevstar:\n        mrgstring.append('*')\n        arr.append(k * temp + 1)\n    mrgstring.reverse()\n    mrgstring = ''.join(mrgstring)\n    return (arr, mrgstring)\n\ndef f(string, arr, x):\n    farr = []\n    x = x - 1\n    for i in arr:\n        if i == 0:\n            farr.append(0)\n        else:\n            farr.append(x % i)\n            x = int(x // i)\n    farr.reverse()\n    temp = ''\n    j = 0\n    for i in string:\n        if i == '*':\n            temp += 'b' * int(farr[j])\n            j += 1\n        else:\n            temp += 'a'\n    print(temp)\nt = int(input())\nfor i in range(t):\n    (n, k, x) = list(map(int, input().split(' ')))\n    q = input()\n    (arr, mstr) = merge(q, k)\n    f(mstr, arr, x)", "for _ in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    s = input()\n    seg = []\n    temp = 0\n    for i in range(n):\n        if s[i] == 'a' and temp > 0:\n            seg += [temp * k + 1]\n            temp = 0\n        elif s[i] == '*':\n            temp += 1\n    if temp > 0:\n        seg += [temp * k + 1]\n    ans = []\n    x -= 1\n    for i in range(len(seg) - 1, -1, -1):\n        ans += [x % seg[i]]\n        x //= seg[i]\n        if x == 0:\n            break\n    if len(ans) < len(seg):\n        ans += [0] * (len(seg) - len(ans))\n    j = len(ans) - 1\n    for i in range(n):\n        if s[i] == 'a':\n            print('a', end='')\n        elif i < n - 1 and s[i] == '*' and (s[i + 1] == 'a'):\n            print('b' * ans[j], end='')\n            j -= 1\n    if j == 0:\n        print('b' * ans[0], end='')\n    print()", "for z in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    x -= 1\n    s = input()[::-1]\n    r = []\n    i = 0\n    while i <= n - 1:\n        if s[i] == 'a':\n            r.append(s[i])\n        else:\n            j = i\n            while j + 1 <= n - 1 and s[j + 1] == s[i]:\n                j += 1\n            cur = (j - i + 1) * k + 1\n            r.append('b' * (x % cur))\n            x //= cur\n            i = j\n        i += 1\n    print(''.join(r[::-1]))", "I = input\nfor _ in [0] * int(I()):\n    (n, k, x) = map(int, I().split())\n    x -= 1\n    p = 'a'\n    a = [[0, 0]]\n    i = 0\n    r = ''\n    for y in I()[::-1]:\n        if y != p:\n            p = y\n            a += [[0, 0]] * i\n            i ^= 1\n        a[-1][i] += 1\n    for (u, v) in a:\n        m = k * v + 1\n        r = x % m * 'b' + u * 'a' + r\n        x //= m\n    print(r)", "I = input\nfor _ in [0] * int(I()):\n    (n, k, x) = map(int, I().split())\n    x -= 1\n    p = 'a'\n    a = [[0, 0]]\n    i = 0\n    r = ''\n    for y in I()[::-1]:\n        if y != p:\n            p = y\n            a += [[0, 0]] * i\n            i ^= 1\n        a[-1][i] += 1\n    for (u, v) in a:\n        m = k * v + 1\n        r = x % m * 'b' + u * 'a' + r\n        x //= m\n    print(r)", "I = input\nfor _ in [0] * int(I()):\n    (n, k, x) = map(int, I().split())\n    x -= 1\n    p = 'a'\n    a = [[0, 0]]\n    i = 0\n    r = ''\n    for y in I()[::-1]:\n        if y != p:\n            p = y\n            a += [[0, 0]] * i\n            i ^= 1\n        a[-1][i] += 1\n    for (u, v) in a:\n        m = k * v + 1\n        r = x % m * 'b' + u * 'a' + r\n        x //= m\n    print(r)", "t = int(input())\nfor x in range(t):\n    [n, k, x] = [int(i) for i in input().split()]\n    x -= 1\n    s = input()\n    s = s[::-1]\n    ans = ''\n    (idx, cnt, cur) = (0, 0, 1)\n    while idx < len(s):\n        if s[idx] != '*':\n            ans += s[idx]\n            idx += 1\n        else:\n            while idx < len(s) and s[idx] == '*':\n                cnt += 1\n                idx += 1\n            cur = cnt * k + 1\n            ans += 'b' * (x % cur)\n            x //= cur\n            cnt = 0\n    print(ans[::-1])", "for _ in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    x -= 1\n    s = input()[::-1]\n    res = []\n    l = []\n    i = 0\n    while i < n:\n        if s[i] == 'a':\n            l.append(-1)\n        else:\n            j = i\n            while j + 1 < n and s[j + 1] == s[i]:\n                j += 1\n            cur = (j - i + 1) * k + 1\n            l.append(cur)\n            i = j\n        i += 1\n    for i in l:\n        if i == -1:\n            res.append('a')\n        else:\n            res.append('b' * (x % i))\n            x //= i\n    print(''.join(res)[::-1])", "ans = []\nfor p in range(int(input())):\n    a = input().split()\n    a[0] = int(a[0])\n    a[1] = int(a[1])\n    a[2] = int(a[2]) - 1\n    s = input()[::-1]\n    s2 = s\n    s = s + 'b'\n    ps = 0\n    step = 1\n    for i in range(len(s)):\n        if a[2] == 0:\n            break\n        if s[i] == '*':\n            ps += 1\n        elif ps != 0:\n            s2 = s2.replace('*' * ps, 'b' * (a[2] % (a[1] * ps + 1)), 1)\n            a[2] = a[2] // (a[1] * ps + 1)\n            ps = 0\n    ans.append(s2[::-1].replace('*', ''))\nfor i in ans:\n    print(i)", "for _ in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    x -= 1\n    s = input()[::-1]\n    res = []\n    i = 0\n    while i < n:\n        if s[i] == 'a':\n            res.append(s[i])\n        else:\n            j = i\n            while j + 1 < n and s[j + 1] == s[i]:\n                j += 1\n            cur = (j - i + 1) * k + 1\n            res.append('b' * (x % cur))\n            x //= cur\n            i = j\n        i += 1\n    print(''.join(res[::-1]))", "import re\n\ndef solve(k, x, a):\n    stars = re.findall('\\\\*+', a)\n    aa = re.findall('a+', a)\n    d = [k * len(si) + 1 for si in stars] + [1]\n    l_d = len(d)\n    INF = 10 ** 20\n    for i in range(l_d - 1, 0, -1):\n        d[i - 1] *= d[i]\n        if d[i - 1] >= INF:\n            d[i - 1] = INF\n    b_cnts = [0] * l_d\n    for i in range(1, l_d):\n        b_cnts[i] = x // d[i]\n        x -= b_cnts[i] * d[i]\n    res = []\n    for (ai, bi) in zip(aa, b_cnts[1:]):\n        res.append(ai)\n        res.append('b' * bi)\n    if len(aa) > len(d) - 1:\n        res.append(aa[-1])\n    return ''.join(res)\nt = int(input())\nfor _ in range(t):\n    (n, k, x) = map(int, input().split())\n    x -= 1\n    a = input()\n    flag = False\n    if a[0] == '*':\n        flag = True\n        a = 'a' + a\n    res = solve(k, x, a)\n    if not flag:\n        print(res)\n    else:\n        print(res[1:])", "import re\n\ndef main():\n    (n, k, x) = map(int, input().split())\n    x = x - 1\n    s = input()\n    if k == 0:\n        print('a' * s.count('a'))\n        return\n    arr = [0]\n    for i in range(n):\n        if s[i] == 'a':\n            arr.append(0)\n        else:\n            arr[-1] += k\n    arr = [i for i in arr if i]\n    res = [0] * len(arr)\n    for i in range(len(arr) - 1, -1, -1):\n        res[i] = x % (arr[i] + 1)\n        x = x // (arr[i] + 1)\n    s = re.sub('\\\\*+', '*', s)\n    c = 0\n    sn = ''\n    for i in range(len(s)):\n        if s[i] == 'a':\n            sn += 'a'\n        else:\n            sn += 'b' * res[c]\n            c += 1\n    print(sn)\nt = int(input())\nfor i in range(t):\n    main()", "t = int(input())\nfor _ in range(t):\n    (n, k, x) = map(int, input().split())\n    s = input()\n    l = 0\n    blocks = []\n    for i in range(len(s)):\n        if s[i] == '*':\n            l += 1\n        elif l:\n            blocks.append(l)\n            l = 0\n    if l:\n        blocks.append(l)\n        l = 0\n    x -= 1\n    p = [0] * len(blocks)\n    for i in range(len(blocks) - 1, -1, -1):\n        p[i] = x % (blocks[i] * k + 1)\n        x //= blocks[i] * k + 1\n    res = []\n    i = 0\n    j = 0\n    while i < len(s):\n        if s[i] == 'a':\n            res.append('a')\n            i += 1\n        else:\n            res += ['b'] * p[j]\n            j += 1\n            while i < len(s) and s[i] == '*':\n                i += 1\n    print(''.join(res))", "t = int(input())\nfor _ in range(t):\n    (n, k, x) = map(int, input().split())\n    s = str(input())\n    s = ''.join(list(reversed(s)))\n    ans = ''\n    cnt = 0\n    num = x - 1\n    for i in range(n):\n        if s[i] == 'a':\n            if cnt > 0:\n                tmp = num % (cnt * k + 1)\n                ans += 'b' * tmp\n                num //= cnt * k + 1\n            cnt = 0\n            ans += 'a'\n        else:\n            cnt += 1\n    if cnt > 0:\n        tmp = num % (cnt * k + 1)\n        ans += 'b' * tmp\n    print(''.join(list(reversed(ans))))", "t = int(input())\nfor T in range(t):\n    (n, k, x) = map(int, input().split())\n    s = input()\n    x -= 1\n    cnt = 0\n    v = []\n    cntqq = 0\n    for i in s:\n        if i == '*':\n            cnt += 1\n            cntqq = 1\n        elif cnt != 0:\n            v.append(cnt * k + 1)\n            cnt = 0\n    if cnt != 0:\n        v.append(cnt * k + 1)\n    p = [1] * len(v)\n    if cntqq:\n        p[-1] = v[-1]\n    for i in range(len(v) - 2, -1, -1):\n        p[i] = p[i + 1] * v[i]\n    p.append(0)\n    flag = 1\n    q = ''\n    for i in range(len(s)):\n        if s[i] == 'a':\n            q += 'a'\n        elif len(q) == 0:\n            q += '*'\n        elif q[-1] != '*':\n            q += '*'\n    s = q\n    for i in range(len(s)):\n        if s[i] == 'a':\n            print('a', end='')\n        elif p[flag] == 0:\n            print('b' * x, end='')\n            x = 0\n        elif x == 0:\n            x = 0\n        else:\n            while x - p[flag] >= 0 and x > 0:\n                x -= p[flag]\n                print('b', end='')\n            flag += 1\n    print()", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k, x) = map(int, input().split())\n    s = input()\n    i = 0\n    holes = []\n    ans = []\n    while i < len(s):\n        while i < len(s) and s[i] == 'a':\n            i += 1\n        f = 0\n        while i < len(s) and s[i] == '*':\n            i += 1\n            f += 1\n        holes.append(f * k + 1)\n    x -= 1\n    for i in range(len(holes)):\n        pro = 1\n        for j in range(i + 1, len(holes)):\n            pro *= holes[j]\n        ans.append(x // pro)\n        x %= pro\n    i = 0\n    ptr = 0\n    res = ''\n    while i < len(s):\n        while i < len(s) and s[i] == 'a':\n            res += 'a'\n            i += 1\n        f = 0\n        while i < len(s) and s[i] == '*':\n            i += 1\n            f += 1\n        if f:\n            res += ans[ptr] * 'b'\n            ptr += 1\n    print(res)", "t = int(input())\nfor T in range(t):\n    (n, k, x) = map(int, input().split())\n    s = input()\n    prev = 1\n    ans = ''\n    ind = n - 1\n    while ind >= 0:\n        i = ind\n        if s[i] == 'a':\n            ans += 'a'\n            ind = ind - 1\n        else:\n            star = 0\n            while i >= 0 and s[i] == '*':\n                i = i - 1\n                star = star + 1\n            star = star * k\n            curr = prev + prev * star\n            add = (x - 1) % curr // prev\n            prev = curr\n            ans += 'b' * add\n            if i < 0:\n                break\n            if i > 0:\n                ind = i\n            else:\n                ind = ind - 1\n    ans = ans[::-1]\n    print(ans)", "def solver():\n    n_1 = int(input())\n    for _ in range(n_1):\n        (n, k, x) = map(int, input().split())\n        f = input()\n        a = list(filter(lambda y: y != '', f.split('a')))\n        list_of_cases = []\n        tmp = ''\n        for i in f:\n            if i == 'a':\n                list_of_cases.append(tmp)\n                tmp = ''\n                list_of_cases.append('a')\n            else:\n                tmp = tmp + '*'\n        list_of_cases.append(tmp)\n        list_of_cases = list(filter(lambda y: y != '', list_of_cases))\n        n_of_cases = 1\n        for multiplier in a:\n            n_of_cases = n_of_cases * (len(multiplier) * k + 1)\n        final = ''\n        for i in list_of_cases:\n            if i == 'a':\n                final = final + 'a'\n            else:\n                length = len(i)\n                chunks = length * k + 1\n                n_of_cases = n_of_cases // chunks\n                for j in range(chunks):\n                    if j * n_of_cases < x <= (j + 1) * n_of_cases:\n                        final = final + j * 'b'\n                        x = x % n_of_cases\n                        if x == 0:\n                            x = n_of_cases\n        print(final)\nsolver()", "for i in range(int(input())):\n    (n, k, x) = map(int, input().split())\n    s = input()\n    l = []\n    c = 0\n    for i in s:\n        if i == 'a' and c != 0:\n            l += [c]\n            c = 0\n        elif i == 'a':\n            c = 0\n        else:\n            c += 1\n    if c > 0:\n        l += [c]\n    a = s.replace('*', ' ').split()\n    j = ''\n    F = 0\n    if s[0] == 'a':\n        j += a[0]\n        F = 1\n    x -= 1\n    for i in range(len(l) - 1):\n        j += 'b' * (x // eval('*'.join([str(l[x] * k + 1) for x in range(i + 1, len(l))])))\n        x %= eval('*'.join([str(l[x] * k + 1) for x in range(i + 1, len(l))]))\n        if i + F < len(a):\n            j += a[i + F]\n    print(j + 'b' * x + ['', a[-1]][s[-1] == 'a' and s.count('*') > 0])", "t = int(input())\nfor _ in range(t):\n    (n, k, x) = map(int, input().split())\n    s = str(input())\n    s = ''.join(list(reversed(s)))\n    ans = ''\n    cnt = 0\n    num = x - 1\n    for i in range(n):\n        if s[i] == 'a':\n            if cnt > 0:\n                tmp = num % (cnt * k + 1)\n                for j in range(tmp):\n                    ans += 'b'\n                num //= cnt * k + 1\n            cnt = 0\n            ans += 'a'\n        else:\n            cnt += 1\n    if cnt > 0:\n        tmp = num % (cnt * k + 1)\n        for j in range(tmp):\n            ans += 'b'\n    print(''.join(list(reversed(ans))))", "t = int(input())\nfor _ in range(t):\n    (n, k, x) = map(int, input().split())\n    s = str(input())\n    s = ''.join(list(reversed(s)))\n    ans = ''\n    cnt = 0\n    num = x - 1\n    for i in range(n):\n        if s[i] == 'a':\n            if cnt > 0:\n                tmp = num % (cnt * k + 1)\n                for j in range(tmp):\n                    ans += 'b'\n                num //= cnt * k + 1\n            cnt = 0\n            ans += 'a'\n        else:\n            cnt += 1\n    if cnt > 0:\n        tmp = num % (cnt * k + 1)\n        for j in range(tmp):\n            ans += 'b'\n    print(''.join(list(reversed(ans))))"]