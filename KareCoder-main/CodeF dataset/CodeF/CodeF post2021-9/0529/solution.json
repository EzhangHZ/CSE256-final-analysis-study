["import sys\n\ndef solution(arr_):\n    diff = [arr_[0] for i in range(len(arr_))]\n    for i in range(1, len(arr_)):\n        diff[i] = arr_[i] - arr_[i - 1]\n    res = 0\n    for n in diff[1:]:\n        if n < 0:\n            res -= n\n            diff[0] += n\n        else:\n            res += n\n    res += abs(diff[0])\n    return res\ncase_num = int(sys.stdin.readline().strip())\nfor case_idx in range(case_num):\n    sys.stdin.readline().strip()\n    arr_ = list(map(int, sys.stdin.readline().strip().split()))\n    print(solution(arr_))", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    curr = arr[0]\n    ans = 0\n    for i in range(n - 1):\n        if curr <= arr[i + 1]:\n            curr = arr[i + 1]\n        else:\n            ans += curr - arr[i + 1]\n            curr = arr[i + 1]\n    f = arr[0] - ans\n    b = arr[-1]\n    if f < 0:\n        ans += abs(f)\n        b += abs(f)\n    return b + ans\nfor _ in range(int(input())):\n    print(solve())", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef solution(n, a):\n    diff = []\n    for i in range(n - 1):\n        diff.append(a[i + 1] - a[i])\n    left_dec = 0\n    right_dec = 0\n    for d in diff:\n        if d > 0:\n            right_dec += d\n        elif d < 0:\n            left_dec += -d\n    level_posn = a[0] - left_dec\n    return left_dec + right_dec + abs(level_posn)\ntests = inp()\nfor test in range(tests):\n    n = inp()\n    a = inlt()\n    print(solution(n, a))", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef solution(n, a):\n    diff = []\n    for i in range(n - 1):\n        diff.append(a[i + 1] - a[i])\n    left_dec = 0\n    right_dec = 0\n    for d in diff:\n        if d > 0:\n            right_dec += d\n        elif d < 0:\n            left_dec += -d\n    level_posn = a[0] - left_dec\n    return left_dec + right_dec + abs(level_posn)\ntests = inp()\nfor test in range(tests):\n    n = inp()\n    a = inlt()\n    print(solution(n, a))", "import sys\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef SI():\n    return sys.stdin.readline().rstrip()\n\ndef MIN_INT():\n    return -1 * sys.maxsize\n\ndef MAX_INT():\n    return sys.maxsize\n\ndef prefSum(arr, n):\n    P = [0] * (n + 1)\n    for k in range(1, n + 1):\n        P[k] = P[k - 1] + arr[k - 1]\n    return P\n\ndef GCD(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return abs(x)\n\ndef solve():\n    n = II()\n    a = LI()\n    prefix = a[0]\n    suffix = 0\n    ans = 0\n    for i in range(1, n):\n        a[i] -= suffix\n        if a[i] <= prefix:\n            ans += prefix - a[i]\n            prefix = a[i]\n        else:\n            suffix += a[i] - prefix\n            ans += a[i] - prefix\n    ans += abs(prefix)\n    return ans\n\ndef main():\n    t = II()\n    for _ in range(t):\n        print(solve())\nmain()", "T = int(input())\nq = []\nfor i in range(T):\n    n = int(input())\n    data = [int(i) for i in input().split()]\n    q.append((n, data))\n\ndef solve(n, data):\n    ans = 0\n    for i in range(1, n):\n        if data[i - 1] > data[i]:\n            ans += data[i - 1] - data[i]\n            data[0] -= data[i - 1] - data[i]\n    ans += abs(data[0])\n    ans += data[n - 1] - data[0]\n    print(ans)\nfor (n, data) in q:\n    solve(n, data)", "import sys\n\ndef solve():\n    inp = sys.stdin.readline\n    n = int(inp())\n    a = list(map(int, inp().split()))\n    d = [0] * n\n    c = 0\n    d[0] = a[0]\n    for i in range(1, n):\n        d[i] = a[i] - a[i - 1]\n        if d[i] < 0:\n            c -= d[i]\n            d[0] += d[i]\n        else:\n            c += d[i]\n    print(c + abs(d[0]))\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        solve()\nmain()", "def help(A, n):\n    curr = A[0]\n    ops = 0\n    change = 0\n    for i in range(1, n):\n        A[i] = A[i] - change\n        if A[i] <= curr:\n            ops += curr - A[i]\n            curr = A[i]\n            continue\n        else:\n            change += A[i] - curr\n            A[i] = curr\n            continue\n    ops += abs(curr)\n    ops += change\n    return ops\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    print(help(A, n))", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    nums = list(map(int, sys.stdin.readline().strip().split()))\n    d = [0] * n\n    for i in range(1, n):\n        d[i] = nums[i] - nums[i - 1]\n    res = 0\n    d[0] = nums[0]\n    for i in range(1, n):\n        if d[i] > 0:\n            res += d[i]\n        else:\n            res -= d[i]\n            d[0] += d[i]\n    print(res + abs(d[0]))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    prefix = suffix = 0\n    for i in range(n - 1):\n        if (d := (a[i] - a[i + 1])) > 0:\n            prefix += d\n        else:\n            suffix -= d\n    print(abs(a[0] - prefix) + prefix + suffix)", "def solve():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    init_sum = sum(a)\n    ans = 0\n    diff = 0\n    for i in range(1, n):\n        if a[i] > a[i - 1]:\n            d = a[i] - a[i - 1]\n            ans += d\n            diff += (n - i) * d\n        else:\n            d = a[i - 1] - a[i]\n            ans += d\n            diff += i * d\n    final_sum = init_sum - diff\n    fin = final_sum // n\n    ans += fin if fin >= 0 else -fin\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    k = 0\n    for i in range(1, n):\n        z = l[i] - l[i - 1]\n        if z >= 0:\n            k += z\n    m = l[-1] - k\n    mcd = abs(l[0] - m)\n    ans = k + abs(m) + mcd\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    k = 0\n    for i in range(1, n):\n        z = l[i] - l[i - 1]\n        if z >= 0:\n            k += z\n    m = l[-1] - k\n    mcd = abs(l[0] - m)\n    ans = k + abs(m) + mcd\n    print(ans)", "def help_the_trees(l: list):\n    result = 0\n    temp = 0\n    last = l[-1]\n    for index in range(len(l) - 1):\n        if l[index] > l[index + 1]:\n            dif = l[index] - l[index + 1]\n            result += dif\n        elif l[index] < l[index + 1]:\n            dif = l[index + 1] - l[index]\n            result += dif\n            temp += dif\n    return result + abs(last - temp)\nn = int(input())\nfor i in range(n):\n    garbale = input()\n    l = list(map(int, input().split()))\n    print(help_the_trees(l))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    start = a[0]\n    positive = negative = 0\n    for i in range(1, n):\n        d = a[i] - a[i - 1]\n        if d > 0:\n            positive += d\n        else:\n            negative += d\n    answer = positive + abs(negative) + abs(start + negative)\n    print(answer)", "for line in [*open(0)][2::2]:\n    tot = 0\n    list = line.split(' ')\n    list2 = [0] + list\n    minv = int(list[0])\n    for val in range(len(list) - 1):\n        diff = int(list2[val + 1]) - int(list[val + 1])\n        if diff >= 0:\n            tot += diff\n            minv -= diff\n    print(tot - minv + abs(minv) + int(list[len(list) - 1]))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    comp = a[0]\n    curr = a[0]\n    tot = 0\n    for a_i in a[1:]:\n        diff = a_i - curr\n        tot += abs(diff)\n        if diff < 0:\n            comp += diff\n        curr = a_i\n    tot += abs(comp)\n    print(tot)", "def testcase():\n    n = int(input())\n    a = list(map(int, input().split()))\n    assert n == len(a)\n    moves = 0\n    offset = 0\n    base = a[0]\n    for i in range(n):\n        h = offset + a[i]\n        if h == base:\n            continue\n        if h < base:\n            moves += base - h\n            base = h\n        else:\n            offset -= h - base\n            moves += h - base\n    print(moves + abs(base))\nt = int(input())\nfor i in range(t):\n    testcase()", "def ck(n, lis):\n    dv = 0\n    la = lis[0]\n    val = 0\n    for i in range(1, n):\n        ke = lis[i] + dv\n        if la > ke:\n            val += abs(ke - la)\n            la = ke\n        else:\n            dv += la - ke\n            val += abs(la - ke)\n    return abs(la) + val\nfor _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    if n == 1:\n        print(abs(lis[0]))\n    else:\n        print(ck(n, lis))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(abs(a[0]))\n        continue\n    p = 0\n    for i in range(n - 1):\n        if a[i] > a[i + 1]:\n            p += a[i] - a[i + 1]\n    if a[0] - p < 0:\n        a[-1] += p - a[0]\n        p += p - a[0]\n    p += a[-1]\n    print(p)", "for test_case in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    d = 0\n    for i in range(n - 1):\n        x = l[i] - l[i + 1]\n        if x > 0:\n            ans += x\n        else:\n            ans += -x\n            d += -x\n    d = l[-1] - d\n    if d < 0:\n        d = -1 * d\n    print(ans + d)", "def solve():\n    n = int(input())\n    lis = list(map(int, input().split()))\n    ans = 0\n    diff = 0\n    (ref, diff) = (lis[0], lis[0])\n    for i in range(1, n):\n        diff = lis[i] - lis[i - 1]\n        ans += abs(diff)\n        if diff < 0:\n            ref += diff\n    print(ans + abs(ref))\nfor _ in range(int(input())):\n    solve()", "for i in range(int(input())):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    ans = am = 0\n    for x in range(n - 1):\n        cnt = ls[x] - ls[x + 1]\n        if cnt > 0:\n            ans += cnt\n        else:\n            ans -= cnt\n            am -= cnt\n    print(ans + abs(ls[-1] - am))", "import math\nimport sys\nimport threading\ninput = sys.stdin.readline\nfrom collections import defaultdict as dd\nfrom collections import deque\n\ndef helper(nd):\n    vis[nd] = 1\n    here = 1\n    for ng in gr[nd]:\n        if vis[ng] == 0:\n            here += helper(ng)\n    tot[nd] = here\n    return here\n\ndef helper1(nd, par):\n    ch = []\n    for ng in gr[nd]:\n        if ng != par:\n            ch.append(ng)\n    if len(ch) == 0:\n        return 0\n    if len(ch) == 1:\n        return tot[nd] - 2\n    return max(tot[ch[1]] - 1 + helper1(ch[0], nd), tot[ch[0]] - 1 + helper1(ch[1], nd))\n\ndef shouvik():\n    T = int(input())\n    for _ in range(T):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        ans = 0\n        for i in range(1, n):\n            arr[i] -= ans\n            if arr[i - 1] < arr[i]:\n                ans += arr[i] - arr[i - 1]\n                arr[i] = arr[i - 1]\n        here = 0\n        for i in range(n - 2, -1, -1):\n            delta = arr[i] - here - arr[i + 1]\n            here += delta\n            arr[i] = arr[i + 1]\n        ans += here\n        print(ans + abs(arr[0]))\nshouvik()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    comp = a[0]\n    curr = a[0]\n    tot = 0\n    for a_i in a[1:]:\n        diff = a_i - curr\n        tot += abs(diff)\n        if diff < 0:\n            comp += diff\n        curr = a_i\n    tot += abs(comp)\n    print(tot)", "import os, sys\nisLocal = os.environ.get('USER', '') == 'xueenpeng'\nif isLocal:\n    sys.stdin = open('./file/input.txt', 'r')\n    pass\n\ndef cal(n, arr):\n    diffArray = [0]\n    for index in range(1, n):\n        last = arr[index - 1]\n        cur = arr[index]\n        diffArray.append(cur - last)\n    ans = 0\n    for (index, diff) in enumerate(diffArray):\n        if diff == 0:\n            continue\n        elif diff > 0:\n            diffArray[index] = 0\n            ans += diff\n        else:\n            diffArray[0] += diff\n            diffArray[index] -= diff\n            ans -= diff\n    ans += abs(arr[0] + diffArray[0])\n    return ans\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        arr = list(map(int, input().split(' ')))\n        print(cal(n, arr))\nmain()", "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    p = 0\n    ans = 0\n    for i in range(n - 1):\n        if a[i] < a[i + 1]:\n            d = a[i + 1] - a[i]\n            p += d\n            ans += d\n        else:\n            d = a[i] - a[i + 1]\n            ans += d\n    v = a[-1] - p\n    ans += abs(v)\n    print(ans)\nfor _ in range(int(input())):\n    main()", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    for j in range(n - 1):\n        count += abs(a[j] - a[j + 1])\n        if a[j] > a[j + 1]:\n            a[0] += a[j + 1] - a[j]\n    count += abs(a[0])\n    print(count)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    comp = a[0]\n    curr = a[0]\n    tot = 0\n    for a_i in a[1:]:\n        diff = a_i - curr\n        tot += abs(diff)\n        if diff < 0:\n            comp += diff\n        curr = a_i\n    tot += abs(comp)\n    print(tot)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = 0\n    for j in range(1, n):\n        f += max(0, a[j - 1] - a[j])\n    a[0] -= f\n    f += abs(a[-1] - a[0]) + abs(a[0])\n    print(f)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = 0\n    for j in range(1, n):\n        f += max(0, a[j - 1] - a[j])\n    a[0] -= f\n    f += abs(a[-1] - a[0]) + abs(a[0])\n    print(f)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = 0\n    for j in range(1, n):\n        f += max(0, a[j - 1] - a[j])\n    a[0] -= f\n    f += abs(a[-1] - a[0]) + abs(a[0])\n    print(f)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = 0\n    for j in range(1, n):\n        f += max(0, a[j - 1] - a[j])\n    a[0] -= f\n    f += abs(a[-1] - a[0]) + abs(a[0])\n    print(f)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = 0\n    for j in range(1, n):\n        f += max(0, a[j - 1] - a[j])\n    a[0] -= f\n    f += abs(a[-1] - a[0]) + abs(a[0])\n    print(f)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = 0\n    for j in range(1, n):\n        f += max(0, a[j - 1] - a[j])\n    a[0] -= f\n    f += abs(a[-1] - a[0]) + abs(a[0])\n    print(f)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = 0\n    for j in range(1, n):\n        f += max(0, a[j - 1] - a[j])\n    a[0] -= f\n    f += abs(a[-1] - a[0]) + abs(a[0])\n    print(f)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = 0\n    for j in range(1, n):\n        f += max(0, a[j - 1] - a[j])\n    a[0] -= f\n    f += abs(a[-1] - a[0]) + abs(a[0])\n    print(f)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = 0\n    for j in range(1, n):\n        f += max(0, a[j - 1] - a[j])\n    a[0] -= f\n    f += abs(a[-1] - a[0]) + abs(a[0])\n    print(f)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = 0\n    for j in range(1, n):\n        f += max(0, a[j - 1] - a[j])\n    a[0] -= f\n    f += abs(a[-1] - a[0]) + abs(a[0])\n    print(f)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = 0\n    for j in range(1, n):\n        f += max(0, a[j - 1] - a[j])\n    a[0] -= f\n    f += abs(a[-1] - a[0]) + abs(a[0])\n    print(f)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = 0\n    for j in range(1, n):\n        f += max(0, a[j - 1] - a[j])\n    a[0] -= f\n    f += abs(a[-1] - a[0]) + abs(a[0])\n    print(f)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = 0\n    for j in range(1, n):\n        f += max(0, a[j - 1] - a[j])\n    a[0] -= f\n    f += abs(a[-1] - a[0]) + abs(a[0])\n    print(f)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = 0\n    for j in range(1, n):\n        f += max(0, a[j - 1] - a[j])\n    a[0] -= f\n    f += abs(a[-1] - a[0]) + abs(a[0])\n    print(f)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = 0\n    for j in range(1, n):\n        f += max(0, a[j - 1] - a[j])\n    a[0] -= f\n    f += abs(a[-1] - a[0]) + abs(a[0])\n    print(f)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = 0\n    for j in range(1, n):\n        f += max(0, a[j - 1] - a[j])\n    a[0] -= f\n    f += abs(a[-1] - a[0]) + abs(a[0])\n    print(f)", "for i in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    f = 0\n    n = 0\n    for i in range(a - 1):\n        res = b[i] - b[i + 1]\n        if res > 0:\n            f += res\n        else:\n            f += abs(res)\n            n += abs(res)\n    result = b[-1] - n\n    if result > 0:\n        print(f + result)\n    else:\n        print(f + abs(result))", "for k in range(int(input())):\n    num = int(input())\n    b = list(map(int, input().split()))\n    f = 0\n    for j in range(1, num):\n        f += max(0, b[j - 1] - b[j])\n    b[0] -= f\n    f += abs(b[-1] - b[0]) + abs(b[0])\n    print(f)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    s = s.split()\n    a = [int(x) for x in s]\n    out = 0\n    correction = a[0]\n    for i in range(1, n):\n        diff = a[i] - a[i - 1]\n        if diff < 0:\n            out -= diff\n            correction += diff\n        elif diff > 0:\n            out += diff\n    out += abs(correction)\n    print(out)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    steps = 0\n    for j in range(1, n):\n        steps += max(0, a[j - 1] - a[j])\n    a[0] -= steps\n    steps += abs(a[-1] - a[0]) + abs(a[0])\n    print(steps)", "def saveTrees():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    first = arr[0]\n    for i in range(n - 1):\n        ans += abs(arr[i] - arr[i + 1])\n        if arr[i] > arr[i + 1]:\n            first += arr[i + 1] - arr[i]\n    print(ans + abs(first))\nt = int(input())\nfor i in range(t):\n    saveTrees()", "x = int(input())\n\ndef cal(n, p):\n    if n == 1:\n        return abs(p[0])\n    ans = 0\n    carry = 0\n    for i in range(1, n):\n        if p[i] < p[i - 1]:\n            ans += p[i - 1] - p[i]\n        else:\n            ans += p[i] - p[i - 1]\n            carry += p[i] - p[i - 1]\n    return ans + abs(carry - p[-1])\nfor jj in range(x):\n    n = int(input())\n    p = [int(i) for i in input().split(' ')]\n    print(cal(n, p))", "import random\nO = random.randint(10, 10 ** 7)\n\ndef main():\n    N = int(input())\n    for _ in range(N):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        cur = arr[0]\n        ans = 0\n        d = 0\n        for i in range(1, len(arr)):\n            b = arr[i] - d\n            if cur > b:\n                ans += cur - b\n                cur = b\n            else:\n                d += b - cur\n                ans += b - cur\n        ans += abs(cur)\n        print(ans)\n\ndef init():\n    import os\n    import sys\n    sys.setrecursionlimit(2 * 10 ** 6)\n    if 'CP_LOCAL_ENV' in os.environ:\n        sys.stdin = open('cf_test_c.txt')\ninit()\nmain()", "from collections import Counter, deque\nfrom collections import OrderedDict\nimport math\nfrom random import randint\nfrom bisect import bisect, bisect_left\nimport sys\nimport re\nMOD = 10 ** 9 + 7\nMAX = -sys.maxsize\nMIN = sys.maxsize\n\nclass get:\n\n    def int():\n        return list(map(int, input().split()))\n\n    def str():\n        return input().split()\n\n    def float():\n        return list(map(float, input().split()))\n\n    def map():\n        return map(int, input().split())\n\ndef sqrt(x):\n    return int(math.sqrt(x)) + 1\n\ndef gcd(*args):\n    result = args[0]\n    for item in args:\n        result = math.gcd(result, item)\n    return result\n\ndef LCM(a, b):\n    return a * b // math.gcd(a, b)\n\ndef isPrime(n):\n    if n == 1:\n        return False\n    for i in range(2, sqrt(n)):\n        if n % i == 0:\n            return False\n    return True\n\ndef solve():\n    n = int(input())\n    a = get.int()\n    if n == 1:\n        print(abs(a[0]))\n        return\n    res = 0\n    for i in range(n - 2, -1, -1):\n        a[i] -= res\n        if a[i] > a[i + 1]:\n            res += a[i] - a[i + 1]\n            a[i] = a[i + 1]\n    if a[0] < 0:\n        print(res + 2 * abs(a[0]) + a[-1])\n    else:\n        print(res + a[-1])\nt = int(input())\nfor tt in range(t):\n    solve()", "T = int(input())\nfor Ti in range(T):\n    n = int(input().strip())\n    l = [int(i) for i in input().split(' ')]\n    sum = 0\n    ans = 0\n    for i in range(1, len(l)):\n        dif = l[i] - l[i - 1]\n        ans += abs(dif)\n        if dif < 0:\n            sum += dif\n    ans += abs(l[0] + sum)\n    print(ans)", "def solve():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    ops = 0\n    maxi = a[0]\n    for i in range(1, n):\n        a[i] -= ops\n        if a[i] <= maxi:\n            maxi = a[i]\n        else:\n            ops += a[i] - maxi\n        a[i] = maxi\n    maxi = a[n - 1]\n    ans = ops\n    ops = 0\n    for i in range(n - 2, -1, -1):\n        a[i] -= ops\n        if a[i] > maxi:\n            ops += a[i] - maxi\n        a[i] = maxi\n    ans += ops\n    ans += abs(a[0])\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    steps = 0\n    for x in range(n - 1):\n        steps += abs(arr[x] - arr[x + 1])\n        if arr[x] > arr[x + 1]:\n            arr[0] -= abs(arr[x + 1] - arr[x])\n    steps += abs(arr[0])\n    print(steps)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    sumo = 0\n    for j in range(1, n):\n        sumo += max(0, a[j - 1] - a[j])\n    a[0] -= sumo\n    sumo += abs(a[-1] - a[0]) + abs(a[0])\n    print(sumo)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    sumo = 0\n    for j in range(1, n):\n        sumo += max(0, a[j - 1] - a[j])\n    a[0] -= sumo\n    sumo += abs(a[-1] - a[0]) + abs(a[0])\n    print(sumo)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = 0\n    for j in range(1, n):\n        f += max(0, a[j - 1] - a[j])\n    a[0] -= f\n    f += abs(a[-1] - a[0]) + abs(a[0])\n    print(f)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    sumo = 0\n    for j in range(1, n):\n        sumo += max(0, a[j - 1] - a[j])\n    a[0] -= sumo\n    sumo += abs(a[-1] - a[0]) + abs(a[0])\n    print(sumo)", "for time in range(int(input())):\n    n = int(input())\n    nums = [int(a) for a in input().split()]\n    s = 0\n    k = nums[0]\n    for j in range(n - 1):\n        l = abs(nums[j] - nums[j + 1])\n        s += l\n        if nums[j] > nums[j + 1]:\n            k -= l\n    print(s + abs(k))", "t = int(input())\nfor i in range(t):\n    l = int(input())\n    arr = [int(i) for i in input().split(' ')]\n    ans = 0\n    rem = arr[0]\n    for i in range(l - 1):\n        ans += abs(arr[i + 1] - arr[i])\n        if arr[i + 1] < arr[i]:\n            rem += arr[i + 1] - arr[i]\n    ans += abs(rem)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    k = arr[0]\n    for i in range(n - 1):\n        dif = abs(arr[i] - arr[i + 1])\n        ans += dif\n        if arr[i] > arr[i + 1]:\n            k = k - dif\n    print(ans + abs(k))", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    steps = 0\n    for j in range(1, n):\n        steps += max(0, a[j - 1] - a[j])\n    a[0] -= steps\n    steps += abs(a[-1] - a[0]) + abs(a[0])\n    print(steps)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    diff = [l[i] - l[i + 1] for i in range(n - 1)]\n    ans = 0\n    for d in diff:\n        ans += abs(d)\n    tmp = l[0]\n    for d in diff:\n        if d > 0:\n            tmp -= d\n    ans += abs(tmp)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    substracted = 0\n    a = list(map(int, input().split()))\n    diff = [a[i] - a[i + 1] for i in range(n - 1)]\n    substracted = sum([i for i in diff if i < 0])\n    steps = sum([abs(i) for i in diff])\n    steps += abs(a[n - 1] + substracted)\n    print(steps)", "T = int(input())\nfor i in range(T):\n    num = int(input())\n    b = list(map(int, input().split()))\n    f = 0\n    for j in range(1, num):\n        f += max(0, b[j - 1] - b[j])\n    b[0] -= f\n    f += abs(b[-1] - b[0]) + abs(b[0])\n    print(f)", "for i in range(int(input())):\n    p = int(input())\n    q = list(map(int, input().split()))\n    r = 0\n    for j in range(1, p):\n        r += max(0, q[j - 1] - q[j])\n    q[0] -= r\n    r += abs(q[-1] - q[0]) + abs(q[0])\n    print(r)", "for i in range(int(input())):\n    lenn = int(input())\n    list1 = list(map(int, input().split()))\n    ans = 0\n    minn = min(list1)\n    imp = list1[0]\n    imp1 = list1[-1]\n    for i in range(lenn - 1):\n        if list1[i] > list1[i + 1]:\n            ans += list1[i] - list1[i + 1]\n            imp -= list1[i] - list1[i + 1]\n    if imp < 0:\n        ans += abs(imp)\n        imp1 += abs(imp)\n    ans += imp1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    r = 0\n    for i in range(n - 1):\n        ans += abs(l[i + 1] - l[i])\n        if l[i + 1] > l[i]:\n            r += l[i + 1] - l[i]\n    print(ans + abs(l[n - 1] - r))", "for p in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    minv = 10 ** 10\n    oper = 0\n    t = 0\n    curv = a[0]\n    for i in range(1, n):\n        if a[i] - t <= curv:\n            oper += curv - (a[i] - t)\n            curv = a[i] - t\n        else:\n            oper += a[i] - t - curv\n            t = t + (a[i] - t - curv)\n    print(abs(curv) + oper)", "t = int(input())\nfor i in range(0, t):\n    totalsteps = 0\n    trees = int(input())\n    value = input()\n    value = value.split(' ')\n    value = [int(k) for k in value]\n    finaldistance = value[trees - 1]\n    for j in range(0, trees - 1):\n        steps = 0\n        if value[j] == value[j + 1]:\n            continue\n        elif value[j] < value[j + 1]:\n            steps = value[j + 1] - value[j]\n            finaldistance -= steps\n        elif value[j] > value[j + 1]:\n            steps = value[j] - value[j + 1]\n        totalsteps += steps\n    totalsteps += abs(finaldistance)\n    print(totalsteps)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 1):\n        ans += abs(a[i] - a[i + 1])\n        if a[i + 1] - a[i] < 0:\n            a[0] -= abs(a[i + 1] - a[i])\n    ans += abs(a[0])\n    print(ans)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    moves = 0\n    lst = list(map(int, input().strip().split()))\n    for i in range(len(lst) - 1):\n        moves = moves + abs(lst[i + 1] - lst[i])\n        if lst[i] > lst[i + 1]:\n            lst[0] = lst[0] + lst[i + 1] - lst[i]\n    moves = moves + abs(lst[0])\n    t = t - 1\n    print(moves)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = 0\n    for j in range(1, n):\n        f += max(0, a[j - 1] - a[j])\n    a[0] -= f\n    f += abs(a[-1] - a[0]) + abs(a[0])\n    print(f)", "for k in range(int(input())):\n    num = int(input())\n    b = list(map(int, input().split()))\n    f = 0\n    for j in range(1, num):\n        f += max(0, b[j - 1] - b[j])\n    b[0] -= f\n    f += abs(b[-1] - b[0]) + abs(b[0])\n    print(f)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = 0\n    for j in range(1, n):\n        f += max(0, a[j - 1] - a[j])\n    a[0] -= f\n    f += abs(a[-1] - a[0]) + abs(a[0])\n    print(f)", "for _ in range(int(input())):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    nums = [0] + nums\n    d = [0] * (n + 1)\n    for i in range(1, n + 1):\n        if i == 1:\n            d[i] = nums[i]\n        else:\n            d[i] = nums[i] - nums[i - 1]\n    cnt = 0\n    for i in range(2, n + 1):\n        if d[i] > 0:\n            cnt += d[i]\n        elif d[i] < 0:\n            cnt += -d[i]\n            d[1] += d[i]\n    if d[1] < 0:\n        cnt += -d[1]\n    elif d[1] > 0:\n        cnt += d[1]\n    print(cnt)", "for i in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split(' ')]\n    ans = 0\n    cur = a[0]\n    for i in range(1, n):\n        ans += abs(a[i] - a[i - 1])\n        if a[i - 1] > a[i]:\n            cur -= a[i - 1] - a[i]\n    print(ans + abs(cur))", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = 0\n    for j in range(1, n):\n        f += max(0, a[j - 1] - a[j])\n    a[0] -= f\n    f += abs(a[-1] - a[0]) + abs(a[0])\n    print(f)", "for _ in range(int(input())):\n    s = int(input())\n    z = list(map(int, input().split()))\n    total = 0\n    right = 0\n    for i in range(1, len(z)):\n        z[i] -= right\n        if z[i] <= z[i - 1]:\n            total += abs(z[i] - z[i - 1])\n        else:\n            total += abs(z[i] - z[i - 1])\n            right += abs(z[i] - z[i - 1])\n            z[i] = z[i - 1]\n    print(total + abs(z[-1]))", "for _ in range(int(input())):\n    n = int(input())\n    arr1 = list(map(int, input().split()))\n    arr2 = []\n    for a in arr1[::-1]:\n        arr2.append(a)\n\n    def func(arr):\n        left = arr[0]\n        sub = 0\n        ans = 0\n        for a in arr:\n            val = a + sub\n            if val > left:\n                sub -= abs(val - left)\n                ans += abs(val - left)\n            elif val < left:\n                ans += abs(left - val)\n                left = val\n        ans += abs(left)\n        return ans\n    print(min(func(arr1), func(arr2)))", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = 0\n    for j in range(1, n):\n        f += max(0, a[j - 1] - a[j])\n    a[0] -= f\n    f += abs(a[-1] - a[0]) + abs(a[0])\n    print(f)", "x = int(input())\nfor testCases in range(x):\n    n = int(input())\n    answer = 0\n    array = input().split(' ')\n    for i in range(len(array)):\n        array[i] = int(array[i])\n    currH = array[0]\n    for i in range(len(array) - 1):\n        answer += abs(array[i] - array[i + 1])\n        if array[i] > array[i + 1]:\n            currH += array[i + 1] - array[i]\n    print(answer + abs(currH))", "t = int(input())\nfor i in range(t):\n    nt = int(input())\n    lst = list(map(int, input().split()))\n    act = 0\n    for i in range(nt - 1):\n        act += abs(lst[i] - lst[i + 1])\n        if lst[i + 1] - lst[i] < 0:\n            lst[0] -= abs(lst[i + 1] - lst[i])\n    act += abs(lst[0])\n    print(act)", "def func(n, a):\n    b = [0 for i in range(n)]\n    ans = 0\n    b[-1] = a[-1]\n    for i in range(n - 1, 0, -1):\n        if a[i - 1] > a[i]:\n            ans += a[i - 1] - a[i]\n            b[i - 1] = b[i]\n        else:\n            b[i - 1] = a[i - 1] - ans\n    ans += abs(b[0])\n    for i in range(n - 1):\n        if b[i] != b[i + 1]:\n            ans += b[i + 1] - b[i]\n    return ans\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(func(n, a))", "for _t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    res = 0\n    for i in range(1, n):\n        a[i] += res\n        ans += abs(a[i] - a[i - 1])\n        if a[i - 1] <= a[i]:\n            res += a[i - 1] - a[i]\n            a[i] = a[i - 1]\n        else:\n            a[i - 1] = a[i]\n    print(ans + abs(a[-1]))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    b = 0\n    for i in range(n - 1):\n        l[i + 1] -= b\n        if l[i] > l[i + 1]:\n            temp = l[i] - l[i + 1]\n            ans += temp\n            l[i] -= temp\n        else:\n            temp = l[i + 1] - l[i]\n            b += temp\n            ans += temp\n            l[i + 1] -= temp\n    print(ans + abs(l[-1]))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    maxi = a[0]\n    ops = 0\n    for i in range(1, n):\n        a[i] -= ops\n        if a[i] <= maxi:\n            maxi = a[i]\n        else:\n            ops += a[i] - maxi\n        a[i] = maxi\n    maxi = a[-1]\n    ans = ops\n    ops = 0\n    for i in range(n - 2, -1, -1):\n        a[i] -= ops\n        if a[i] > maxi:\n            ops += a[i] - maxi\n        a[i] = maxi\n    ans += ops\n    ans += abs(a[0])\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = [0] + list(map(int, input().split()))\n    l1 = []\n    for i in range(n):\n        l1.append(l[i + 1] - l[i])\n    ans = 0\n    for i in range(1, n):\n        if l1[i] > 0:\n            ans += l1[i]\n        else:\n            l1[0] += l1[i]\n            ans -= l1[i]\n    print(ans + abs(l1[0]))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1:\n        print(abs(l[0]))\n        continue\n    ans = 0\n    x = 0\n    t = l[0]\n    for i in range(n - 1):\n        c = x + l[i + 1]\n        ans += abs(l[i + 1] - l[i])\n        if l[i] <= l[i + 1]:\n            x -= l[i + 1] - l[i]\n        else:\n            t = min(t, l[i + 1] + x)\n    ans += abs(t)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    sum = 0\n    mini = arr[0]\n    extra = 0\n    for i in range(n - 1):\n        mini = min(mini, arr[i + 1] - extra)\n        if arr[i] >= arr[i + 1]:\n            sum += arr[i] - arr[i + 1]\n        else:\n            sum += arr[i + 1] - arr[i]\n            extra += arr[i + 1] - arr[i]\n    print(int(sum + abs(mini)))", "import sys\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, sys.stdin.readline().split()))\n    sub = 0\n    last = arr[-1]\n    res = 0\n    for i in range(n - 2, -1, -1):\n        if arr[i] - sub > last:\n            diff = last - (arr[i] - sub)\n            res += abs(diff)\n            sub += abs(diff)\n        else:\n            last = arr[i] - sub\n        arr[i] = last\n    if arr[0] < 0:\n        res += abs(arr[0])\n        arr[-1] += abs(arr[0])\n    print(res + arr[-1])", "t = int(input())\nwhile t:\n    n = int(input())\n    a = [0] + list(map(int, input().split(' '))) + [0]\n    b = [0] * (n + 2)\n    for i in range(1, n + 1):\n        b[i] = a[i] - a[i - 1]\n    b[n + 1] = -a[n]\n    (x, y) = (0, 0)\n    for i in range(2, n + 1):\n        if b[i] > 0:\n            x += b[i]\n        else:\n            y -= b[i]\n    b[1] -= x\n    b[-1] += y\n    ans = x + y + abs(b[1] - b[n + 1]) // 2\n    print(ans)\n    t -= 1", "def num():\n    c = int(input())\n    return c\n\ndef stri():\n    c = str(input())\n    return c\n\ndef vector():\n    c = list(map(int, input().split()))\n    return c\n\ndef strvector():\n    c = list(map(str, input().split()))\n    return c\nimport math\n\ndef isprime(num):\n    a = 2\n    while a <= math.sqrt(num):\n        if num % a < 1:\n            return False\n        a = a + 1\n    return num > 1\nt = num()\nwhile t > 0:\n    t -= 1\n    n = num()\n    arr = vector()\n    cnt = 0\n    x = 0\n    h = [0] * n\n    for i in range(n - 2, -1, -1):\n        if arr[i] - x > arr[i + 1] - x:\n            x += arr[i] - arr[i + 1]\n            h[i] = x\n            cnt += arr[i] - arr[i + 1]\n        else:\n            h[i] = x\n    y = [0] * n\n    x = 0\n    for i in range(1, n):\n        if arr[i] - x > arr[i - 1] - x:\n            x += arr[i] - arr[i - 1]\n            y[i] = x\n            cnt += arr[i] - arr[i - 1]\n        else:\n            y[i] = x\n    print(cnt + abs(arr[0] - h[0] - y[0]))", "for q in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    lis = arr.copy()\n    minus = 0\n    ans = 0\n    for i in range(1, n):\n        lis[i] = lis[i] - minus\n        if lis[i] > lis[i - 1]:\n            ans += lis[i] - lis[i - 1]\n            minus += lis[i] - lis[i - 1]\n            lis[i] = lis[i - 1]\n    for i in range(n - 1):\n        ans += lis[i] - lis[i + 1]\n    ans += abs(lis[-1])\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    (pos, neg) = (0, 0)\n    ans = 0\n    (positive, negative) = ([0] * n, [0] * n)\n    for i in range(1, n):\n        if arr[i] > arr[i - 1]:\n            positive[i] += arr[i] - arr[i - 1]\n        else:\n            negative[i - 1] += arr[i - 1] - arr[i]\n            neg += negative[i - 1]\n    for i in range(len(arr)):\n        ans += positive[i] + negative[i]\n        pos += positive[i]\n        arr[i] -= pos + neg\n        neg -= negative[i]\n    print(ans + abs(arr[0]))"]