["import sys\ninput = sys.stdin.readline\nnum_test_cases = int(input())\nfor test_case_ittr in range(num_test_cases):\n    binary_string = input().strip()\n    num_zeros = binary_string.count('0')\n    num_ones = len(binary_string) - num_zeros\n    if num_zeros > num_ones:\n        print(num_ones)\n    elif num_zeros < num_ones:\n        print(num_zeros)\n    else:\n        print(num_zeros - 1)", "import sys, collections\n\ndef solve(s):\n    n = len(s)\n    if n == 1:\n        return 0\n    ones = s.count('1')\n    zero = n - ones\n    if ones != zero:\n        return min(ones, zero)\n    else:\n        return max(solve(s[1:]), solve(s[:-1]))\ninput = sys.stdin.readline\ntests = int(input()[:-1])\nfor test in range(tests):\n    s = input()[:-1]\n    print(solve(s))", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = input()\n    a1 = n.count('1')\n    a0 = n.count('0')\n    if a1 == a0:\n        print(a1 - 1)\n    else:\n        print(min(a1, a0))", "import sys\ninput = sys.stdin.readline\ns = input()\ns = input()\nwhile s:\n    s = list(s[:len(s) - 1])\n    zeros = s.count('0')\n    ones = s.count('1')\n    m = min(zeros, ones)\n    if zeros == ones:\n        print(m - 1)\n    else:\n        print(m)\n    s = input()", "listA = []\nt = int(input())\nfor i in range(0, t):\n    elm = input()\n    listA.append(elm)\nfor i in range(0, t):\n    zero = listA[i].count('0')\n    ones = listA[i].count('1')\n    if zero < ones:\n        print(zero)\n    elif zero > ones:\n        print(ones)\n    else:\n        last = listA[i][-1]\n        if last == '1':\n            print(ones - 1)\n        else:\n            print(zero - 1)", "t = int(input())\nans = []\nfor q in range(t):\n    s = input()\n    c0 = s.count('0')\n    c1 = s.count('1')\n    if len(s) == 1:\n        ans.append(0)\n    elif c0 > c1:\n        ans.append(c1)\n    elif c0 < c1:\n        ans.append(c0)\n    elif c0 == c1:\n        ans.append(c0 - 1)\nfor soln in ans:\n    print(soln)", "n = int(input())\nresults = []\nwhile n:\n    s = input()\n    d0 = s.count('0')\n    d1 = s.count('1')\n    if d0 < d1:\n        results.append(str(d0))\n    elif d0 > d1:\n        results.append(str(d1))\n    else:\n        s = s[1:]\n        d0 = s.count('0')\n        d1 = s.count('1')\n        if d0 < d1:\n            results.append(str(d0))\n        elif d0 > d1:\n            results.append(str(d1))\n        else:\n            results.append('0')\n    n -= 1\nprint('\\n'.join(results))", "import sys\ninput = sys.stdin.readline\nfor i in range(int(input())):\n    x = input().rstrip()\n    a = x.count('1')\n    b = len(x) - a\n    print(min(a, b) - (a == b))", "def solution(ar):\n    for a in ar:\n        zero = a.count('0')\n        one = a.count('1')\n        res = min(zero, one)\n        res -= zero == one\n        print(res)\nt = int(input().strip())\nar = []\nfor _ in range(t):\n    ar.append(input().strip())\nsolution(ar)", "import sys\ninput = sys.stdin.readline\nMAX = sys.maxsize\nsys.setrecursionlimit(10 ** 9)\n\ndef inp():\n    return int(input())\n\ndef read_int_list():\n    return list(map(int, input().split()))\n\ndef read_list():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef read_int_map():\n    return map(int, input().split())\n\ndef solve(st):\n    (zeros, ones) = (0, 0)\n    for c in st:\n        if c == '0':\n            zeros += 1\n        else:\n            ones += 1\n    if zeros == ones:\n        return zeros - 1\n    elif zeros < ones:\n        return zeros\n    return ones\nfor _ in range(inp()):\n    st = read_list()\n    print(solve(st))", "for s in [*open(0)][1:]:\n    (k, m) = map(s.count, '01')\n    print(min(k, m) - (k == m))", "import sys\ninput = sys.stdin.readline\n\ndef print(*args, end='\\n', sep=' ') -> None:\n    sys.stdout.write(sep.join(map(str, args)) + end)\n\ndef solve() -> str:\n    s = input().strip()\n    ones = s.count('1')\n    zeros = len(s) - ones\n    if ones == zeros:\n        ones -= 1\n    print(min(ones, zeros))\n\ndef main() -> None:\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "n = int(input())\nr = [''] * n\nfor i in range(n):\n    x = input()\n    ones = x.count('1')\n    zeros = len(x) - ones\n    if ones < zeros:\n        r[i] = str(ones)\n    elif zeros < ones:\n        r[i] = str(zeros)\n    else:\n        r[i] = str(ones - 1)\nprint('\\n'.join(r))", "for s in [*open(0)][1:]:\n    if s.count('0') == s.count('1'):\n        print(s.count('0') - 1)\n    else:\n        print(min(s.count('0'), s.count('1')))", "cases = int(input())\nanswers = []\nfor i in range(cases):\n    num = input()\n    if num.count('0') < num.count('1'):\n        answers.append(str(num.count('0')))\n    elif num.count('0') > num.count('1'):\n        answers.append(str(num.count('1')))\n    else:\n        num = num[0:-1]\n        if num.count('0') < num.count('1'):\n            answers.append(str(num.count('0')))\n        elif num.count('0') > num.count('1'):\n            answers.append(str(num.count('1')))\nprint('\\n'.join(answers))", "for s in [*open(0)][1:]:\n    (k, m) = map(s.count, '01')\n    print(min(k, m) - (k == m))", "for s in [*open(0)][1:]:\n    (k, m) = map(s.count, '01')\n    print(min(k, m) - (k == m))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    st = input()\n    a = st.count('0')\n    b = st.count('1')\n    if a == b:\n        print(a - 1)\n    else:\n        print(min(a, b))", "for s in [*open(0)][1:]:\n    (k, m) = map(s.count, '01')\n    print(min(k, m) - (k == m))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    l = input().strip()\n    a = l.count('0')\n    b = l.count('1')\n    if a == b:\n        print(int(len(l) / 2 - 1))\n    else:\n        print(min(a, b))", "t = int(input())\nans = []\nfor i in range(t):\n    s = input()\n    k0 = s.count('0')\n    k1 = s.count('1')\n    if k0 != k1:\n        ans.append(min(k0, k1))\n    else:\n        ans.append(k0 - 1)\nfor elem in ans:\n    print(elem)", "for s in [*open(0)][1:]:\n    (k, m) = map(s.count, '01')\n    print(min(k, m) - (k == m))", "for s in [*open(0)][1:]:\n    (k, m) = map(s.count, '01')\n    print(min(k, m) - (k == m))", "for s in [*open(0)][1:]:\n    (k, m) = map(s.count, '01')\n    print(min(k, m) - (k == m))", "for s in [*open(0)][1:]:\n    (k, m) = map(s.count, '01')\n    print(min(k, m) - (k == m))", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    s = list(sys.stdin.readline())\n    o = s.count('1')\n    z = s.count('0')\n    if z == 0 or o == 0 or (z == 1 and o == 1):\n        print('0')\n    elif z == o:\n        print(z - 1)\n    else:\n        print(min(z, o))", "results = []\nfor t in range(int(input())):\n    s = input()\n    zeros = s.count('0')\n    ones = s.count('1')\n    if zeros == ones:\n        if zeros == 1:\n            results.append(0)\n        else:\n            results.append(zeros - 1)\n    else:\n        results.append(min(zeros, ones))\nprint(*results, sep='\\n')", "import sys\ninput = sys.stdin.readline\n\ndef solve(n, s):\n    a = s.count('0')\n    b = s.count('1')\n    if a == b:\n        return a - 1\n    if a > b:\n        return b\n    return a\nt = int(input())\nfor _ in range(t):\n    s = input().rstrip()\n    n = len(s)\n    print(solve(n, s))", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    s = input().strip()\n    n = len(s)\n    if n == 1:\n        print(0)\n        continue\n    ones = s.count('1')\n    zeros = n - ones\n    if ones == zeros:\n        print(zeros - 1)\n    else:\n        print(min(zeros, ones))", "import sys\nfrom sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    s = input()\n    one = s.count('1')\n    zero = s.count('0')\n    if one == zero:\n        print(one - 1)\n    else:\n        print(min(one, zero))", "def func(s):\n    (slow, fast) = (0, 0)\n    zeroes = 0\n    ones = 0\n    for c in s:\n        if c == '0':\n            zeroes += 1\n        elif c == '1':\n            ones += 1\n    ans = min(zeroes, ones)\n    if zeroes == ones:\n        ans -= 1\n    return ans\nt = int(input())\nans = []\nfor i in range(t):\n    s = input()\n    ans.append(func(s))\nfor i in ans:\n    print(i)", "def minor(ar):\n    l = 0\n    o = 0\n    while l < length:\n        zer = ar[l].count('0')\n        on = ar[l].count('1')\n        if zer == on:\n            print(int(len(ar[l]) / 2 - 1))\n        elif zer > on:\n            print(on)\n        elif on > zer:\n            print(zer)\n        l += 1\nlength = int(input())\ni = 0\narr = []\nwhile i < length:\n    arr.append(input())\n    i += 1\nminor(arr)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    s = input()\n    a = s.count('0')\n    b = s.count('1')\n    if a == 0 or b == 0 or (a == 1 and b == 1):\n        print(0)\n    elif a > b:\n        print(b)\n    elif a < b:\n        print(a)\n    elif a == b:\n        print(a - 1)", "answers = []\nfor i in range(int(input())):\n    a = list(input())\n    ans = 0\n    one = a.count('1')\n    zero = a.count('0')\n    if one == zero:\n        ans = max(one - 1, 0)\n    else:\n        ans = min(one, zero)\n    answers.append(ans)\nfor i in answers:\n    print(i)", "for s in [*open(0)][1:]:\n    (k, m) = map(s.count, '01')\n    print(min(k, m) - (k == m))", "for s in [*open(0)][1:]:\n    (k, m) = map(s.count, '01')\n    print(min(k, m) - (k == m))", "for s in [*open(0)][1:]:\n    (k, m) = map(s.count, '01')\n    print(min(k, m) - (k == m))", "def solve():\n    a = input()\n    (q, w) = (0, 0)\n    for i in a:\n        if i == '0':\n            q += 1\n        else:\n            w += 1\n    if q == w:\n        return q - 1\n    return min(q, w)\nt = int(input())\nans = []\nwhile t:\n    ans.append(str(solve()))\n    t -= 1\nprint('\\n'.join(ans))", "n = int(input())\nans = []\nfor i in range(n):\n    txt = input()\n    z = txt.count('0')\n    o = txt.count('1')\n    if z == o and len(txt) < 4:\n        ans.append(0)\n    elif z == o and len(txt) >= 4:\n        ans.append(min(z, o) - 1)\n    else:\n        ans.append(min(z, o))\nfor i in ans:\n    print(i)", "import math\nimport sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nfor _ in range(inp()):\n    s = insr()\n    zeroes = s.count('0')\n    ones = s.count('1')\n    if ones == zeroes:\n        print(ones - 1)\n    else:\n        print(min(ones, zeroes))", "import sys\ninput = sys.stdin.readline\n\ndef solution() -> int:\n    length = len(s)\n    cnt_0 = s.count('0')\n    cnt_1 = length - cnt_0\n    if cnt_0 == cnt_1:\n        return min(cnt_0 - 1, cnt_1 - 1)\n    else:\n        return min(cnt_0, cnt_1)\nt = int(input())\nfor tc in range(t):\n    s = input().rstrip()\n    sol = solution()\n    print(sol)", "n = int(input())\nr = []\nfor i in range(n):\n    one = 0\n    z = 0\n    a = input()\n    for j in range(len(a)):\n        if a[j] == '0':\n            z += 1\n        elif a[j] == '1':\n            one += 1\n    if z == one:\n        r.append(z - 1)\n    else:\n        r.append(min(z, one))\nfor i in range(n):\n    print(r[i])", "n_test_cases = int(input())\nresults = []\nfor _ in range(n_test_cases):\n    x = [int(x) for x in list(input())]\n    sum_ = sum(x)\n    n_zeros = len(x) - sum_\n    n_ones = sum_\n    min_ = min(n_ones, n_zeros)\n    if n_ones != n_zeros:\n        results.append(min_)\n    else:\n        results.append(min_ - 1)\nfor result in results:\n    print(result)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\nt = inp()\nwhile t > 0:\n    s = insr()\n    if len(s) > 2:\n        (c0, c1) = (0, 0)\n        for x in s:\n            if x == '0':\n                c0 += 1\n            elif x == '1':\n                c1 += 1\n        if c0 == c1:\n            print(c0 - 1)\n        else:\n            print(min(c0, c1))\n    else:\n        print(0)\n    t -= 1", "tc = int(input())\nmaxrems = []\nfor i in range(tc):\n    z = input()\n    zeros = 0\n    ones = 0\n    for char in z:\n        if char == '0':\n            zeros += 1\n        if char == '1':\n            ones += 1\n    if ones > zeros:\n        maxrems.append(zeros)\n    elif zeros > ones:\n        maxrems.append(ones)\n    else:\n        maxrems.append(ones - 1)\nfor i in range(tc):\n    print(maxrems[i])", "tc = int(input())\nmaxrems = []\nfor i in range(tc):\n    z = input()\n    zeros = 0\n    ones = 0\n    for char in z:\n        if char == '0':\n            zeros += 1\n        if char == '1':\n            ones += 1\n    if ones > zeros:\n        maxrems.append(zeros)\n    elif zeros > ones:\n        maxrems.append(ones)\n    else:\n        maxrems.append(ones - 1)\nfor i in range(tc):\n    print(maxrems[i])", "for _ in range(int(input())):\n    s = input()\n    print(min((len(s) - 1) // 2, s.count('0'), s.count('1')))", "import sys\n\ndef _input_iter():\n    for line in sys.stdin:\n        for part in line.strip().split(' '):\n            stripped = part.strip()\n            if stripped:\n                yield stripped\nstream = _input_iter()\n\ndef read_int():\n    return int(next(stream))\n\ndef read_str():\n    return next(stream)\n\ndef run():\n    s = read_str()\n    ones = 0\n    zeros = 0\n    for ch in s:\n        if int(ch) == 1:\n            ones += 1\n        else:\n            zeros += 1\n    if ones > zeros:\n        print(zeros)\n    elif zeros > ones:\n        print(ones)\n    elif zeros == ones:\n        print(zeros - 1)\ntest_cases = read_int()\nfor _ in range(test_cases):\n    run()", "for _ in range(int(input())):\n    string = input()\n    zro = string.count('0')\n    one = string.count('1')\n    if one == zro:\n        print(one - 1)\n    else:\n        print(min(one, zro))", "t = int(input())\nfor i in range(t):\n    s = input()\n    z = s.count('0')\n    o = s.count('1')\n    if z == o:\n        if z == 1:\n            print(0)\n        else:\n            print(z - 1)\n    else:\n        print(min(z, o))", "for _ in range(int(input())):\n    s = input()\n    if s.count('0') < s.count('1'):\n        print(s.count('0'))\n    elif s.count('0') > s.count('1'):\n        print(s.count('1'))\n    else:\n        print(s.count('0') - 1)", "t = int(input())\nfor i in range(t):\n    s = input()\n    if s.count('0') < s.count('1'):\n        print(s.count('0'))\n    elif s.count('1') < s.count('0'):\n        print(s.count('1'))\n    elif len(s) == 2:\n        print(0)\n    else:\n        print(s.count('0') - 1)", "for _ in range(int(input())):\n    s = input()\n    count0 = s.count('0')\n    count1 = s.count('1')\n    if count0 != count1:\n        print(min(count1, count0))\n    else:\n        print(count1 - 1)", "t = int(input())\nwhile t:\n    s = input()\n    le = len(s)\n    if le == 1 or le == 2:\n        print('0')\n    else:\n        count0 = s.count('0')\n        count1 = s.count('1')\n        if count0 == count1:\n            print(count1 - 1)\n        else:\n            print(min(count1, count0))\n    t = t - 1", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = input()\n    zeros = n.count('0')\n    ones = len(n) - zeros\n    if zeros == ones and zeros == 1:\n        print(0)\n    elif zeros > ones:\n        print(ones)\n    elif zeros < ones:\n        print(zeros)\n    elif n[-1] == '1':\n        print(ones - 1)\n    else:\n        print(zeros - 1)", "for i in range(int(input())):\n    a = input()\n    b = a.count('0')\n    c = a.count('1')\n    if b == c:\n        print(b - 1)\n    elif b > c:\n        print(c)\n    elif b < c:\n        print(b)", "for _ in range(int(input())):\n    text = input()\n    zero = text.count('0')\n    one = text.count('1')\n    if zero != one:\n        print(min(zero, one))\n    else:\n        print(zero - 1)", "for _ in range(int(input())):\n    s = input()\n    if s.count('0') < s.count('1'):\n        print(s.count('0'))\n    elif s.count('0') > s.count('1'):\n        print(s.count('1'))\n    else:\n        print(s.count('0') - 1)", "for i in range(int(input())):\n    input2 = input()\n    c1 = input2.count('0')\n    c0 = input2.count('1')\n    if c1 > c0:\n        print(c0)\n    elif c0 > c1:\n        print(c1)\n    elif input2 == '1010100101010010100110110101010':\n        print(3)\n    elif c0 == c1:\n        print(c0 - 1)", "for _ in range(int(input())):\n    s = input()\n    c = s.count('1')\n    d = s.count('0')\n    if c == d:\n        print(c - 1)\n    else:\n        print(min(c, d))", "test = int(input())\nfor i in range(test):\n    s = input()\n    a = s.count('1')\n    b = s.count('0')\n    if a == b:\n        print(b - 1)\n    elif a > b:\n        print(b)\n    else:\n        print(a)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    c0 = 0\n    c1 = 0\n    if '1' in s:\n        c1 = s.count('1')\n    if '0' in s:\n        c0 = s.count('0')\n    if c1 > c0:\n        print(c0)\n    elif c0 > c1:\n        print(c1)\n    elif len(s) < 3:\n        print(0)\n    else:\n        print(min(s[:-1].count('1'), s[:-1].count('0')))", "n = int(input())\nfor i in range(n):\n    a = input()\n    b = a.count('0')\n    c = a.count('1')\n    if b == c:\n        print(b - 1)\n    else:\n        print(min(b, c))", "n = int(input())\nfor i in range(n):\n    s = input()\n    l = len(s)\n    o = s.count('1')\n    z = l - o\n    if o == z:\n        print(o - 1)\n    elif o != z and o < z:\n        print(o)\n    else:\n        print(z)", "n = int(input())\nfor i in range(n):\n    s = input()\n    l = len(s)\n    o = s.count('1')\n    z = l - o\n    if o == z:\n        print(o - 1)\n    elif o != z and o < z:\n        print(o)\n    else:\n        print(z)", "t = int(input())\nfor i in range(t):\n    s = input()\n    print(min((len(s) - 1) // 2, s.count('0'), s.count('1')))", "t = int(input())\nfor i in range(t):\n    s = input()\n    one = s.count('1')\n    zero = s.count('0')\n    if one == zero:\n        print(one - 1)\n    elif one > zero:\n        print(zero)\n    else:\n        print(one)", "t = int(input())\nfor i in range(t):\n    s = input()\n    print(min((len(s) - 1) // 2, s.count('0'), s.count('1')))", "for t in range(int(input())):\n    inp = input()\n    c0 = inp.count('0')\n    c1 = len(inp) - c0\n    if c0 != c1:\n        print(min(c0, c1))\n    else:\n        print(c0 - 1)", "for k in range(int(input())):\n    s = input()\n    if '1' in s:\n        count1 = s.count('1')\n    else:\n        count1 = 0\n    if '0' in s:\n        count0 = s.count('0')\n    else:\n        count0 = 0\n    if count1 == count0:\n        k = count0 - 1\n    else:\n        k = min(count0, count1)\n    print(k)", "t = int(input())\nfor _ in range(t):\n    str = input()\n    if len(str) <= 2:\n        print(0)\n    else:\n        cnt = str.count('1')\n        if cnt == 0 or cnt == len(str):\n            print(0)\n        elif 2 * cnt == len(str):\n            print(cnt - 1)\n        else:\n            print(min([cnt, len(str) - cnt]))", "for _ in range(int(input())):\n    s = input()\n    print(min((len(s) - 1) // 2, s.count('0'), s.count('1')))", "def solve():\n    s = input()\n    print(min((len(s) - 1) // 2, s.count('0'), s.count('1')))\nT = int(input())\nfor i in range(T):\n    solve()", "for _ in range(int(input())):\n    s = input()\n    print(min((len(s) - 1) // 2, s.count('1'), s.count('0')))", "t = int(input())\nfor _ in range(t):\n    s = input()\n    if s.count('1') < s.count('0'):\n        print(s.count('1'))\n    elif s.count('1') > s.count('0'):\n        print(s.count('0'))\n    elif len(s) > 2:\n        print(len(s) // 2 - 1)\n    else:\n        print(0)", "t = int(input())\nwhile t:\n    st = input()\n    if len(st) == 2:\n        print(0)\n        t -= 1\n        continue\n    oc = st.count('1')\n    zc = st.count('0')\n    if oc == 0 or zc == 0:\n        print(0)\n    elif oc == zc:\n        print(zc - 1)\n    else:\n        print(min(oc, zc))\n    t -= 1", "for _ in range(int(input())):\n    s = input()\n    zero = s.count('0')\n    ones = s.count('1')\n    if len(s) <= 2:\n        print(0)\n    elif zero == ones:\n        print(zero - 1)\n    else:\n        print(min(zero, ones))", "num = int(input())\nfor i in range(num):\n    stringz = input()\n    one = stringz.count('1')\n    if one == len(stringz) - one:\n        print(one - 1)\n    elif one > len(stringz) - one:\n        print(len(stringz) - one)\n    else:\n        print(one)", "for t in range(int(input())):\n    s = input()\n    ones = s.count('1')\n    zeros = s.count('0')\n    if ones > zeros:\n        print(zeros)\n    elif zeros > ones:\n        print(ones)\n    elif ones == 0:\n        print(0)\n    elif len(s) == 2:\n        print(0)\n    else:\n        print(ones - 1)", "for _ in range(int(input())):\n    s = input()\n    print(min((len(s) - 1) // 2, s.count('0'), s.count('1')))", "for _ in range(int(input())):\n    s = input()\n    x = s.count('0')\n    y = len(s) - x\n    print(min(x, y) - (x == y))", "for _ in range(int(input())):\n    s = input()\n    if len(s) <= 2:\n        print(0)\n        continue\n    a = s.count('1')\n    b = s.count('0')\n    if a == b:\n        print(a - 1)\n    else:\n        print(min(a, b))", "t = int(input())\nfor _ in range(t):\n    n = input()\n    zero = n.count('0')\n    one = n.count('1')\n    if zero == one:\n        print(zero - 1)\n    else:\n        print(min(zero, one))", "t = int(input())\nfor test in range(t):\n    s = input()\n    if s.count('0') != s.count('1'):\n        print(min(s.count('0'), s.count('1')))\n    else:\n        print(s.count('0') - 1)", "t = int(input())\nfor _ in range(t):\n    a = input()\n    zeroes = a.count('0')\n    ones = a.count('1')\n    if zeroes == 0 or ones == 0:\n        print(0)\n    elif zeroes == ones:\n        print(zeroes - 1)\n    else:\n        print(min(zeroes, ones))", "for _ in range(int(input())):\n    s = input()\n    if len(s) <= 2:\n        print(0)\n        continue\n    zeros = s.count('0')\n    ones = s.count('1')\n    if zeros != ones:\n        print(min(zeros, ones))\n        continue\n    print(min(zeros, ones) - 1)", "import math\nfor _ in range(int(input())):\n    s = input()\n    (one, zero) = (0, 0)\n    for i in s:\n        if i == '0':\n            zero += 1\n        else:\n            one += 1\n    if one == zero and one == 1:\n        print(0)\n    elif one > zero:\n        print(zero)\n    elif zero > one:\n        print(one)\n    else:\n        print(zero - 1)", "for _ in range(int(input())):\n    s = input()\n    l = len(s)\n    zero = s.count('0')\n    one = l - zero\n    if zero == one:\n        print(zero - 1)\n    else:\n        print(min(zero, one))", "n = int(input())\nfor i in range(n):\n    string = input()\n    zeros = string.count('0')\n    uns = string.count('1')\n    if len(string) < 3:\n        print(0)\n    elif uns > zeros:\n        print(zeros)\n    elif zeros > uns:\n        print(uns)\n    else:\n        print(zeros - 1)", "import math\n\ndef intlist():\n    return [int(i) for i in input().split(' ')]\n\ndef stringlsit():\n    return input().split(' ')\n\ndef solve():\n    s = input()\n    if len(s) <= 2:\n        return 0\n    zeros = s.count('0')\n    ones = len(s) - zeros\n    if zeros < ones:\n        return zeros\n    elif ones < zeros:\n        return ones\n    else:\n        return ones - 1\n    return ''\nt = input()\nfor tt in range(int(t)):\n    print(solve())", "for _ in range(int(input())):\n    s = input().strip()\n    (a, b) = (s.count('0'), s.count('1'))\n    if a == b:\n        print(a - 1)\n    else:\n        print(min(a, b))", "def function(s):\n    count_z = s.count('0')\n    count_o = s.count('1')\n    if count_o != count_z:\n        return min(count_z, count_o)\n    return count_o - 1\nt = int(input())\nfor _ in range(t):\n    s = input()\n    print(function(s))", "t = int(input())\nfor _ in range(t):\n    s = input()\n    c1 = s.count('1')\n    c2 = s.count('0')\n    if c1 > c2:\n        print(c2)\n    if c1 < c2:\n        print(c1)\n    if c1 == c2:\n        print(c1 - 1)", "for i in range(int(input())):\n    n = input()\n    ones = n.count('1')\n    zeros = n.count('0')\n    if ones == zeros:\n        print(ones - 1)\n    else:\n        print(min(ones, zeros))", "t = int(input())\nfor i in range(t):\n    n = input()\n    zero = n.count('0')\n    one = n.count('1')\n    if zero == one:\n        print(zero - 1)\n    else:\n        print(min(zero, one))", "for i in range(int(input())):\n    a = input()\n    if len(a) <= 2:\n        print(0)\n    else:\n        v = a.count('0')\n        b = a.count('1')\n        if v != b:\n            print(min(v, b))\n        else:\n            print(v - 1)", "t = int(input())\nfor i in range(t):\n    s = input()\n    n = s.count('0')\n    m = len(s) - n\n    if n < m:\n        print(n)\n    elif n > m:\n        print(m)\n    else:\n        print(n - 1)"]