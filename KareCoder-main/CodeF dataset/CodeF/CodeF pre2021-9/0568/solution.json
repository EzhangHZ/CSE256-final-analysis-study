["def pref(ins):\n    x = 0\n    Min = 0\n    Max = 0\n    Fin_ = [0]\n    Min_ = [0]\n    Max_ = [0]\n    for I in ins:\n        if I == '-':\n            x -= 1\n            Min = min(Min, x)\n        else:\n            x += 1\n            Max = max(Max, x)\n        Fin_.append(x)\n        Min_.append(Min)\n        Max_.append(Max)\n    return (Fin_, Min_, Max_)\n\ndef suff(ins):\n    x = 0\n    Min = 0\n    Max = 0\n    Min_ = [0]\n    Max_ = [0]\n    for I in ins[::-1]:\n        if I == '-':\n            x -= 1\n            Min -= 1\n            Max = max(0, Max - 1)\n        else:\n            x += 1\n            Min = min(0, Min + 1)\n            Max += 1\n        Min_.append(Min)\n        Max_.append(Max)\n    return (Min_, Max_)\nt = int(input().strip())\nanswers = ''\nfor _ in range(t):\n    (n, m) = map(int, input().strip().split())\n    A = input().strip()\n    (f_1, m_1, M_1) = pref(A)\n    (m_2, M_2) = suff(A)\n    for __ in range(m):\n        (l, r) = map(int, input().strip().split())\n        Min = min(m_1[l - 1], f_1[l - 1] + m_2[n - r])\n        Max = max(M_1[l - 1], f_1[l - 1] + M_2[n - r])\n        answers += str(Max - Min + 1) + '\\n'\nprint(answers)", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        (n, m) = map(int, input().split())\n        mini = [0] * (n + 1)\n        maxi = [0] * (n + 1)\n        xi = [0] * (n + 1)\n        s = input()\n        x = 0\n        for i in range(1, n + 1):\n            if s[i - 1] == '-':\n                x -= 1\n            else:\n                x += 1\n            xi[i] = x\n            if i > 0:\n                mini[i] = min(mini[i - 1], x)\n                maxi[i] = max(maxi[i - 1], x)\n        x = 0\n        minif = [0] * (n + 1)\n        maxif = [0] * (n + 1)\n        xf = [0] * (n + 1)\n        for i in range(1, n + 1):\n            if s[n - (i - 1) - 1] == '+':\n                x -= 1\n            else:\n                x += 1\n            xf[i] = x\n            if i > 0:\n                minif[i] = min(minif[i - 1], x)\n                maxif[i] = max(maxif[i - 1], x)\n        for req in range(m):\n            (l, r) = map(int, input().split())\n            (min1, max1, x1) = (mini[l - 1], maxi[l - 1], xi[l - 1])\n            (min2, max2) = (minif[n - r] + x1 - xf[n - r], maxif[n - r] + x1 - xf[n - r])\n            sys.stdout.write(str(max(max1, max2) - min(min1, min2) + 1) + '\\n')\nmain()", "import sys\ninput = sys.stdin.readline\nfor t in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = [1 if i == '+' else -1 for i in input()]\n    la = [0] * n\n    lb = [0] * n\n    lc = [0] * n\n    a = b = c = 0\n    for i in range(1, n):\n        c += s[i - 1]\n        (a, b) = (min(a, c), max(b, c))\n        (la[i], lb[i], lc[i]) = (a, b, c)\n    ra = [0] * n\n    rb = [0] * n\n    a = b = 0\n    for i in range(n - 2, -1, -1):\n        c = s[i + 1]\n        (a, b) = (min(0, a + c), max(b + c, 0))\n        (ra[i], rb[i]) = (a, b)\n    for _ in range(m):\n        (i, j) = map(int, input().split())\n        i -= 1\n        j -= 1\n        print(max(lb[i], rb[j] + lc[i]) - min(la[i], ra[j] + lc[i]) + 1)", "import sys\ninput = lambda : sys.stdin.readline().rstrip('\\r\\n')\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = input()\n    leftmax = [0] * (n + 1)\n    leftmin = [0] * (n + 1)\n    rightmax = [0] * (n + 1)\n    rightmin = [0] * (n + 1)\n    end = [0] * (n + 1)\n    endr = [0] * (n + 1)\n    (minn, maxx) = (0, 0)\n    x = 0\n    for i in range(n):\n        if s[i] == '-':\n            x -= 1\n        else:\n            x += 1\n        minn = min(minn, x)\n        maxx = max(maxx, x)\n        leftmin[i + 1] = minn\n        leftmax[i + 1] = maxx\n        end[i + 1] = x\n    x = 0\n    (minn, maxx) = (0, 0)\n    for i in range(n - 1, -1, -1):\n        if s[i] == '+':\n            x -= 1\n        else:\n            x += 1\n        minn = min(minn, x)\n        maxx = max(maxx, x)\n        rightmin[i] = minn\n        rightmax[i] = maxx\n        endr[i] = x\n    for i in range(m):\n        (l, r) = map(int, input().split())\n        l -= 1\n        nowmax = end[l] + rightmax[r] - endr[r]\n        nowmin = end[l] + rightmin[r] - endr[r]\n        maxx = max(nowmax, leftmax[l])\n        minn = min(nowmin, leftmin[l])\n        ans = maxx - minn\n        print(ans + 1)", "import sys\nfrom math import *\ninput = sys.stdin.readline\ninf = 10000000000.0\nmod = int(1000000000.0 + 7)\nt = 1\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    s = [1 if i == '+' else -1 for i in input()]\n    la = [0] * n\n    lb = [0] * n\n    lc = [0] * n\n    a = b = c = 0\n    for i in range(1, n):\n        c += s[i - 1]\n        a = min(a, c)\n        b = max(b, c)\n        (la[i], lb[i], lc[i]) = (a, b, c)\n    a = b = c = 0\n    ra = [0] * n\n    rb = [0] * n\n    for i in range(n - 2, -1, -1):\n        (a, b) = (min(0, a + s[i + 1]), max(0, b + s[i + 1]))\n        (ra[i], rb[i]) = (a, b)\n    for _ in range(m):\n        (i, j) = map(int, input().split())\n        i -= 1\n        j -= 1\n        print(max(lb[i], rb[j] + lc[i]) - min(la[i], ra[j] + lc[i]) + 1)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, m) = map(int, input().split())\n    s = input().strip()\n    ps = [0] * (n + 1)\n    f = [[0, 0] for _ in range(n + 1)]\n    curr = 0\n    for i in range(n):\n        curr += 1 if s[i] == '+' else -1\n        ps[i + 1] = curr\n        f[i + 1] = [max(curr, f[i][0]), min(curr, f[i][1])]\n    b = [[ps[-1], ps[-1]] for _ in range(n + 1)]\n    for i in range(n - 1, -1, -1):\n        b[i] = [max(b[i + 1][0], ps[i]), min(b[i + 1][1], ps[i])]\n    for _ in range(m):\n        (left, right) = map(int, input().split())\n        hi = max(f[left - 1][0], b[right][0] + ps[left - 1] - ps[right])\n        lo = min(f[left - 1][1], b[right][1] + ps[left - 1] - ps[right])\n        print(hi - lo + 1)\n    return\nfor _ in range(int(input())):\n    solve()", "import sys\ninput = sys.stdin.readline\nfor t in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = [1 if i == '+' else -1 for i in input()]\n    la = [0] * n\n    lb = [0] * n\n    lc = [0] * n\n    a = b = c = 0\n    for i in range(1, n):\n        c += s[i - 1]\n        (a, b) = (min(a, c), max(b, c))\n        (la[i], lb[i], lc[i]) = (a, b, c)\n    ra = [0] * n\n    rb = [0] * n\n    a = b = 0\n    for i in range(n - 2, -1, -1):\n        c = s[i + 1]\n        (a, b) = (min(0, a + c), max(b + c, 0))\n        (ra[i], rb[i]) = (a, b)\n    for _ in range(m):\n        (i, j) = map(int, input().split())\n        i -= 1\n        j -= 1\n        print(max(lb[i], rb[j] + lc[i]) - min(la[i], ra[j] + lc[i]) + 1)", "import sys\nfor iter in range(int(sys.stdin.readline())):\n    (n, m) = map(int, sys.stdin.readline().split())\n    s = input()\n    balance = [0] * (n + 1)\n    for i in range(n):\n        if s[i] == '+':\n            balance[i + 1] = balance[i] + 1\n        else:\n            balance[i + 1] = balance[i] - 1\n    (max_prefix, min_prefix) = ([0] * (n + 1), [0] * (n + 1))\n    (max_suffix, min_suffix) = ([balance[-1]] * (n + 1), [balance[-1]] * (n + 1))\n    for i in range(n):\n        max_prefix[i + 1] = max(max_prefix[i], balance[i + 1])\n        min_prefix[i + 1] = min(min_prefix[i], balance[i + 1])\n    for i in range(n - 1, -1, -1):\n        max_suffix[i] = max(balance[i], max_suffix[i + 1])\n        min_suffix[i] = min(balance[i], min_suffix[i + 1])\n    for i in range(m):\n        (l, r) = map(int, sys.stdin.readline().split())\n        max_avaliable = max(max_prefix[l - 1], balance[l - 1] + max_suffix[r] - balance[r])\n        min_avaliable = min(min_prefix[l - 1], balance[l - 1] + min_suffix[r] - balance[r])\n        sys.stdout.write(str(max_avaliable - min_avaliable + 1) + '\\n')", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    (n, m) = map(int, stdin.readline().split())\n    arr = [0]\n    arr2 = [[0, 0]]\n    so = 0\n    maxx = 0\n    minn = 0\n    strg = stdin.readline()\n    for i in strg:\n        if i == '+':\n            so += 1\n            maxx = max(so, maxx)\n            arr.append(so)\n            arr2.append([minn, maxx])\n        elif i == '-':\n            so -= 1\n            minn = min(so, minn)\n            arr.append(so)\n            arr2.append([minn, maxx])\n    arr3 = []\n    so2 = 0\n    minn2 = int(so)\n    maxx2 = int(so)\n    for i in range(-1, -n - 1, -1):\n        minn2 = min(minn2, arr[i])\n        maxx2 = max(maxx2, arr[i])\n        arr3.append([minn2 - arr[i], maxx2 - arr[i]])\n    for j in range(m):\n        (quer1, quer2) = map(int, stdin.readline().split())\n        range1 = arr2[quer1 - 1]\n        range2 = arr3[-quer2]\n        print(max(range1[1], arr[quer1 - 1] + range2[1]) - min(range1[0], arr[quer1 - 1] + range2[0]) + 1)", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    (n, m) = map(int, stdin.readline().split())\n    arr = [0]\n    arr2 = [[0, 0]]\n    so = 0\n    maxx = 0\n    minn = 0\n    strg = stdin.readline()\n    for i in strg:\n        if i == '+':\n            so += 1\n            maxx = max(so, maxx)\n            arr.append(so)\n            arr2.append([minn, maxx])\n        elif i == '-':\n            so -= 1\n            minn = min(so, minn)\n            arr.append(so)\n            arr2.append([minn, maxx])\n    arr3 = []\n    so2 = 0\n    minn2 = int(so)\n    maxx2 = int(so)\n    for i in range(-1, -n - 1, -1):\n        minn2 = min(minn2, arr[i])\n        maxx2 = max(maxx2, arr[i])\n        arr3.append([minn2 - arr[i], maxx2 - arr[i]])\n    for j in range(m):\n        (quer1, quer2) = map(int, stdin.readline().split())\n        range1 = arr2[quer1 - 1]\n        range2 = arr3[-quer2]\n        print(max(range1[1], arr[quer1 - 1] + range2[1]) - min(range1[0], arr[quer1 - 1] + range2[0]) + 1)", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    (n, m) = map(int, stdin.readline().split())\n    arr = [0]\n    arr2 = [[0, 0]]\n    so = 0\n    maxx = 0\n    minn = 0\n    strg = stdin.readline()\n    for i in strg:\n        if i == '+':\n            so += 1\n            maxx = max(so, maxx)\n            arr.append(so)\n            arr2.append([minn, maxx])\n        elif i == '-':\n            so -= 1\n            minn = min(so, minn)\n            arr.append(so)\n            arr2.append([minn, maxx])\n    arr3 = []\n    so2 = 0\n    minn2 = int(so)\n    maxx2 = int(so)\n    for i in range(-1, -n - 1, -1):\n        minn2 = min(minn2, arr[i])\n        maxx2 = max(maxx2, arr[i])\n        arr3.append([minn2 - arr[i], maxx2 - arr[i]])\n    for j in range(m):\n        (quer1, quer2) = map(int, stdin.readline().split())\n        range1 = arr2[quer1 - 1]\n        range2 = arr3[-quer2]\n        print(max(range1[1], arr[quer1 - 1] + range2[1]) - min(range1[0], arr[quer1 - 1] + range2[0]) + 1)", "from sys import stdin\nt = int(stdin.readline())\nfor _ in range(t):\n    (n, m) = map(int, stdin.readline().split())\n    arr = [0]\n    arr2 = [[0, 0]]\n    so = 0\n    maxx = 0\n    minn = 0\n    strg = stdin.readline()\n    for i in strg:\n        if i == '+':\n            so += 1\n            maxx = max(so, maxx)\n            arr.append(so)\n            arr2.append([minn, maxx])\n        elif i == '-':\n            so -= 1\n            minn = min(so, minn)\n            arr.append(so)\n            arr2.append([minn, maxx])\n    arr3 = []\n    so2 = 0\n    minn2 = int(so)\n    maxx2 = int(so)\n    for i in range(-1, -n - 1, -1):\n        minn2 = min(minn2, arr[i])\n        maxx2 = max(maxx2, arr[i])\n        arr3.append([minn2 - arr[i], maxx2 - arr[i]])\n    for j in range(m):\n        (quer1, quer2) = map(int, stdin.readline().split())\n        range1 = arr2[quer1 - 1]\n        range2 = arr3[-quer2]\n        print(max(range1[1], arr[quer1 - 1] + range2[1]) - min(range1[0], arr[quer1 - 1] + range2[0]) + 1)", "import sys\nstdin = list(list(sys.stdin))\nt = int(stdin[0].strip())\nj = 1\nfor i in range(t):\n    inp = stdin[j].rstrip().split(' ')\n    n = int(inp[0])\n    m = int(inp[1])\n    j += 1\n    a = stdin[j].rstrip()\n    j += 1\n    x = [0]\n    left = [[0, 0]]\n    for i in a:\n        if i == '-':\n            x.append(x[-1] - 1)\n        else:\n            x.append(x[-1] + 1)\n        left.append([left[-1][0], left[-1][1]])\n        if x[-1] > left[-1][1]:\n            left[-1][1] = x[-1]\n        if x[-1] < left[-1][0]:\n            left[-1][0] = x[-1]\n    right = [[x[-1], x[-1]]]\n    for v in x[::-1][1:]:\n        right.append([right[-1][0], right[-1][1]])\n        if v > right[-1][1]:\n            right[-1][1] = v\n        if v < right[-1][0]:\n            right[-1][0] = v\n    right = right[::-1]\n    for z in range(m):\n        inp = stdin[j].rstrip().split(' ')\n        l = int(inp[0])\n        r = int(inp[1])\n        o = min(left[l - 1][0], right[r][0] - x[r] + x[l - 1])\n        d = max(left[l - 1][1], right[r][1] - x[r] + x[l - 1])\n        print(d - o + 1)\n        j += 1", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = list(map(int, input().replace('+', '1,').replace('-', '-1,').split(',')[:-1]))\n    interval = [list(map(int, input().split())) for _ in range(m)]\n    (prefix_min, prefix_max, surffix_min, surffix_max) = ([0], [0], [0], [0])\n    value = [0]\n    for i in range(n):\n        value.append(s[i] + value[-1])\n        prefix_min.append(min(value[-1], prefix_min[-1]))\n        prefix_max.append(max(value[-1], prefix_max[-1]))\n        surffix_min.append(min(0, s[n - i - 1] + surffix_min[-1]))\n        surffix_max.append(max(0, s[n - i - 1] + surffix_max[-1]))\n    surffix_max = surffix_max[::-1]\n    surffix_min = surffix_min[::-1]\n    for (l, r) in interval:\n        l -= 1\n        l1 = prefix_min[l]\n        r1 = prefix_max[l]\n        l2 = surffix_min[r] + value[l]\n        r2 = surffix_max[r] + value[l]\n        print(max(r1, r2) - min(l1, l2) + 1)", "e = int(input())\nl = []\ny = []\nA = []\nfor i in range(e):\n    [a, b] = input().split(' ')\n    n = int(a)\n    m = int(b)\n    A.append((n, m))\n    x = []\n    z = input()\n    y.append(z)\n    for j in range(m):\n        t = input().split(' ')\n        for i in range(2):\n            t[i] = int(t[i])\n        x.append(t)\n    l.append(x)\nfor i in range(e):\n    (n, m) = A[i]\n    x = 0\n    L = [0]\n    M = [(0, 0)]\n    mi = 0\n    ma = 0\n    for j in range(n):\n        if y[i][j] == '-':\n            x = x - 1\n        else:\n            x = x + 1\n        mi = min(mi, x)\n        ma = max(ma, x)\n        M.append((mi, ma))\n        L.append(x)\n    N = [(L[-1], L[-1])]\n    (mi, ma) = (L[-1], L[-1])\n    for j in reversed(range(n)):\n        mi = min(mi, L[j])\n        ma = max(ma, L[j])\n        N.append((mi, ma))\n    for j in range(m):\n        [a, b] = l[i][j]\n        (X, Y) = M[a - 1]\n        (K, P) = N[n - b]\n        if b < n:\n            X = min(K - (L[b] - L[a - 1]), X)\n            Y = max(P - (L[b] - L[a - 1]), Y)\n        print(Y - X + 1)"]