["t = int(input())\n\ndef timeleft(p, q):\n    if p % q == 0:\n        timeleft = 0\n    else:\n        timeleft = q * (p // q + 1) - p\n    return timeleft\nfor i in range(t):\n    (p, a, b, c) = input().split(' ')\n    p = int(p)\n    a = int(a)\n    b = int(b)\n    c = int(c)\n    print(min(timeleft(p, a), timeleft(p, b), timeleft(p, c)))", "def mytest():\n    for i in range(int(input())):\n        (p, a, b, c) = list(map(int, input().split()))\n        mini = 0\n        ma = p % a\n        if ma != 0:\n            t = a - ma\n            mini = t\n        else:\n            print(0)\n            continue\n        mb = p % b\n        if mb != 0:\n            t = b - mb\n            mini = min(mini, t)\n        else:\n            print(0)\n            continue\n        mc = p % c\n        if mc != 0:\n            t = c - mc\n            mini = min(mini, t)\n        else:\n            print(0)\n            continue\n        print(mini)\nmytest()", "t = int(input())\nfor i in range(t):\n    (p, a, b, c) = [int(x) for x in input().split()]\n    (a1, b1, c1) = (0, 0, 0)\n    if p < a:\n        a1 = a - p\n    elif p % a == 0:\n        a1 = 0\n    else:\n        a1 = a - p % a\n    if p < b:\n        b1 = b - p\n    elif p % b == 0:\n        b1 = 0\n    else:\n        b1 = b - p % b\n    if p < c:\n        c1 = c - p\n    elif p % c == 0:\n        c1 = 0\n    else:\n        c1 = c - p % c\n    print(min(a1, b1, c1))", "n = int(input())\nfor i in range(n):\n    (p, a, b, c) = list(map(int, input().split()))\n    k = min(p % a, p % b, p % c)\n    if k == 0:\n        print(k)\n    else:\n        print(min(a - p % a, b - p % b, c - p % c))", "for _ in range(int(input())):\n    (p, a, b, c) = input().split()\n    (p, a, b, c) = [int(p), int(a), int(b), int(c)]\n    if p % a == 0 or p % b == 0 or p % c == 0:\n        print(0)\n    else:\n        x1 = (p // a + 1) * a\n        x2 = (p // b + 1) * b\n        x3 = (p // c + 1) * c\n        print(min(x1 - p, x2 - p, x3 - p))", "for _ in range(int(input())):\n    (p, a, b, c) = list(map(int, input().split()))\n    if p % a:\n        h = a - p % a\n    else:\n        h = 0\n    if p % b:\n        i = b - p % b\n    else:\n        i = 0\n    if p % c:\n        j = c - p % c\n    else:\n        j = 0\n    print(min(h, i, j))", "def swimmers(p, a, b, c):\n    pa = (p + a - 1) // a * a\n    pb = (p + b - 1) // b * b\n    pc = (p + c - 1) // c * c\n    return min([pa, pb, pc])\nt = int(input())\nfor i in range(t):\n    (p, a, b, c) = map(int, input().split())\n    print(swimmers(p, a, b, c) - p)", "import math\n\ndef getReminder(p, x):\n    return (x - p % x) % x\n\ndef solution(p, a, b, c):\n    r_A = getReminder(p, a)\n    r_B = getReminder(p, b)\n    r_C = getReminder(p, c)\n    return min(r_A, r_B, r_C)\n\ndef main():\n    test_cnt = int(input())\n    for i in range(test_cnt):\n        _testcase = [int(i) for i in input().split(' ')]\n        [p, a, b, c] = _testcase\n        result = solution(p, a, b, c)\n        print(result)\nmain()", "t = int(input())\nfor i in range(t):\n    x = list(map(int, input().split()))\n    p = x[0]\n    a = x[1]\n    b = x[2]\n    c = x[3]\n    if p % a != 0 and p % b != 0 and (p % c != 0):\n        print(min((p // a + 1) * a - p, (p // b + 1) * b - p, (p // c + 1) * c - p))\n    else:\n        print(0)", "t = int(input())\nfor i in range(t):\n    (p, a, b, c) = map(int, input().split())\n    if p % a == 0 or p % b == 0 or p % c == 0:\n        print('0')\n    else:\n        print(min(a - p % a, b - p % b, c - p % c))", "for s in [*open(0)][1:]:\n    (p, *a) = map(int, s.split())\n    print(min((-p % x for x in a)))", "for s in [*open(0)][1:]:\n    (p, *a) = map(int, s.split())\n    print(min((-p % x for x in a)))", "for _ in range(int(input())):\n    (p, a, b, c) = map(int, input().split())\n    if p % a == 0 or p % b == 0 or p % c == 0:\n        print(0)\n    else:\n        print(min(a - p % a, b - p % b, c - p % c))", "def threeSwimmers(p, z):\n    z1 = p % z\n    if z1 != 0:\n        return abs(z - z1)\n    return z1\nfor i in range(int(input())):\n    num = list(map(int, input().strip().split()))\n    p = num[0]\n    a = num[1]\n    b = num[2]\n    c = num[3]\n    print(min(threeSwimmers(p, a), threeSwimmers(p, b), threeSwimmers(p, c)))", "for _ in range(int(input())):\n    (p, a, b, c) = map(int, input().split())\n    print(min(-p % a, -p % b, -p % c))", "while True:\n    try:\n        t = eval(input())\n        for i in range(t):\n            (p, a, b, c) = map(int, input().split())\n            ans1 = a - (p - 1) % a - 1\n            ans2 = b - (p - 1) % b - 1\n            ans3 = c - (p - 1) % c - 1\n            print(min(ans1, ans2, ans3))\n    except:\n        break", "set = int(input())\nfor x in range(set):\n    lis = list(map(int, input().split()))\n    p = lis.pop(0)\n    for i in range(len(lis)):\n        if p % lis[i] == 0:\n            lis[i] = 0\n        else:\n            lis[i] = lis[i] - p % lis[i]\n    lis.sort()\n    print(lis.pop(0))", "def ceil(a, b):\n    if a % b == 0:\n        return a // b\n    return a // b + 1\n\ndef solve():\n    (p, a, b, c) = map(int, input().split(' '))\n    (x, y, z) = (a * ceil(p, a), b * ceil(p, b), c * ceil(p, c))\n    print(min(x, y, z) - p)\nfor _ in range(int(input())):\n    solve()", "n = int(input())\nfor i in range(n):\n    (p, a, b, c) = map(int, input().split())\n    a1 = ((p - 1) // a + 1) * a - p\n    b1 = ((p - 1) // b + 1) * b - p\n    c1 = ((p - 1) // c + 1) * c - p\n    print(min(a1, b1, c1))", "n = int(input())\nfor i in range(n):\n    (p, a, b, c) = map(int, input().split())\n    a1 = a - ((p - 1) % a + 1)\n    b1 = b - ((p - 1) % b + 1)\n    c1 = c - ((p - 1) % c + 1)\n    print(min(a1, b1, c1))", "for _ in range(int(input())):\n    (p, a, b, c) = [int(i) for i in input().split()]\n    if p % a == 0 or p % b == 0 or p % c == 0:\n        print(0)\n    else:\n        print(min(a - p % a, b - p % b, c - p % c))", "for _ in range(int(input())):\n    (p, a, b, c) = list(map(int, input().split(' ')))\n    print(min((p + a - 1) // a * a % p if p > a else a - p, (p + b - 1) // b * b % p if p > b else b - p, (p + c - 1) // c * c % p if p > c else c - p))", "import math\nt1 = int(input())\nfor _ in range(t1):\n    (p, a, b, c) = map(int, input().split())\n    a1 = p // a\n    if p % a != 0:\n        a1 += 1\n    b1 = p // b\n    if p % b != 0:\n        b1 += 1\n    c1 = p // c\n    if p % c != 0:\n        c1 += 1\n    print(min(a1 * a, b1 * b, c1 * c) - p)", "from math import *\nn = int(input())\nfor i in range(n):\n    a = list(map(int, input().split()))\n    if a[0] % a[1] == 0 or a[0] % a[2] == 0 or a[0] % a[3] == 0:\n        print(0)\n    else:\n        x = a[1] - a[0] % a[1]\n        y = a[2] - a[0] % a[2]\n        z = a[3] - a[0] % a[3]\n        print(min(x, min(y, z)))", "def solve():\n    (p, a, b, c) = map(int, input().split(' '))\n    ans = min([(a - p % a) % a, (b - p % b) % b, (c - p % c) % c])\n    print(ans)\nt = int(input())\nfor _ in range(t):\n    solve()", "for s in [*open(0)][1:]:\n    (p, *a) = map(int, s.split())\n    print(min((-p % x for x in a)))", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (p, a, b, c) = map(int, input().split())\n    return 0 if p % a == 0 or p % b == 0 or p % c == 0 else min(a * (p // a + 1), b * (p // b + 1), c * (p // c + 1)) - p\nfor _ in range(int(input())):\n    print(solve())", "for _ in range(int(input())):\n    (p, a, b, c) = map(int, input().split())\n    t1 = 0\n    t2 = 0\n    t3 = 0\n    if p == a:\n        t1 = a\n    elif p % a == 0:\n        t1 = 0\n    else:\n        t1 = abs(a - p % a)\n    if p == b:\n        t2 = b\n    elif p % b == 0:\n        t2 = 0\n    else:\n        t2 = abs(b - p % b)\n    if p == c:\n        t3 == c\n    elif p % c == 0:\n        t3 = 0\n    else:\n        t3 = abs(c - p % c)\n    print(min(t1, t2, t3))", "test_cases = int(input())\nfor i in range(test_cases):\n    (time_come_to_pool, a_lap_of_first_swimmer, a_lap_of_second_swimmer, a_lap_of_third_swimmer) = map(int, input().split(' '))\n    if time_come_to_pool % a_lap_of_first_swimmer == 0 or time_come_to_pool % a_lap_of_second_swimmer == 0 or time_come_to_pool % a_lap_of_third_swimmer == 0:\n        print(0)\n    else:\n        time_wait_for_first_swimmer = a_lap_of_first_swimmer * (time_come_to_pool // a_lap_of_first_swimmer + 1)\n        time_wait_for_second_swimmer = a_lap_of_second_swimmer * (time_come_to_pool // a_lap_of_second_swimmer + 1)\n        time_wait_for_third_swimmer = a_lap_of_third_swimmer * (time_come_to_pool // a_lap_of_third_swimmer + 1)\n        print(min(time_wait_for_first_swimmer, time_wait_for_second_swimmer, time_wait_for_third_swimmer) - time_come_to_pool)", "for i in range(int(input())):\n    (p, a, b, c) = map(int, input().split())\n    if p % a == 0 or p % b == 0 or p % c == 0:\n        print(0)\n    else:\n        print(min(a - p % a, b - p % b, c - p % c))", "t = int(input())\nwhile t > 0:\n    (p, a, b, c) = [int(x) for x in input().split()]\n    l = [a, b, c]\n    if p % a == 0 or p % b == 0 or p % c == 0:\n        print('0')\n    else:\n        m = []\n        for i in l:\n            m.append((p // i + 1) * i - p)\n        print(min(m))\n    t -= 1", "for _ in range(int(input())):\n    (p, *a) = map(int, input().split())\n    ans = []\n    for x in a:\n        if p < x:\n            ans.append(x - p)\n        elif p % x == 0:\n            ans.append(0)\n        else:\n            ans.append((p // x + 1) * x - p)\n    print(min(ans))", "for _ in range(int(input())):\n    (p, a, b, c) = map(int, input().split())\n    print(min(-p % a, -p % b, -p % c))", "t = int(input())\nwhile t:\n    (p, a, b, c) = map(int, input().split())\n    q = p // a\n    w = p // b\n    e = p // c\n    if p % a:\n        q += 1\n    if p % b:\n        w += 1\n    if p % c:\n        e += 1\n    q = q * a - p\n    w = w * b - p\n    e = e * c - p\n    mn = min(q, w, e)\n    print(mn)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (p, a, b, c) = map(int, input().split())\n    print(min(-p % a, -p % b, -p % c))", "for _ in range(int(input())):\n    (p, a, b, c) = list(map(int, input().split(' ')))\n    s = 1e+19\n    for i in (a, b, c):\n        d = p % i\n        if not d:\n            s = 0\n            break\n        else:\n            s = min(s, i - d)\n    print(s)", "a = int(input())\nfor i in range(a):\n    q = input().split()\n    for j in range(4):\n        q[j] = int(q[j])\n    (p, a, b, c) = (q[0], q[1], q[2], q[3])\n    if p % a == 0 or p % b == 0 or p % c == 0:\n        print(0)\n    else:\n        a1 = p // a\n        a1 = a1 * a\n        a1 = a1 + a\n        a1 = a1 - p\n        b1 = p // b\n        b1 = b1 * b\n        b1 = b1 + b\n        b1 = b1 - p\n        c1 = p // c\n        c1 = c1 * c\n        c1 = c1 + c\n        c1 = c1 - p\n        print(min(a1, b1, c1))", "for s in [*open(0)][1:]:\n    (p, *a) = map(int, s.split())\n    print(min((-p % x for x in a)))", "for _ in range(int(input())):\n    (p, a, b, c) = map(int, input().split())\n    x = a - p % a\n    y = b - p % b\n    z = c - p % c\n    if p % a == 0 or p % b == 0 or p % c == 0:\n        print(0)\n    else:\n        v = min(y, z)\n        print(min(x, v))", "t = int(input())\nfor i1 in range(t):\n    (p, a, b, c) = map(int, input().split())\n    print(min(a * (p // a + (p % a != 0)) - p, b * (p // b + (p % b != 0)) - p, c * (p // c + (p % c != 0)) - p))", "import math\nfor _ in range(int(input())):\n    (p, a, b, c) = map(int, input().split())\n    ans = min({a - p % a, b - p % b, c - p % c})\n    if p % a == 0 or p % b == 0 or p % c == 0:\n        ans = 0\n    print(ans)", "for i in range(int(input())):\n    (p, a, b, c) = map(int, input().split())\n    if p % a == 0 or p % b == 0 or p % c == 0:\n        print(0)\n    else:\n        print(min(a - p % a, b - p % b, c - p % c))", "t = int(input())\nfor i in range(t):\n    (r, a, b, c) = list(map(int, input().split()))\n    x = a - r % a\n    y = b - r % b\n    z = c - r % c\n    if r % a == 0 or r % b == 0 or r % c == 0:\n        print(0)\n    else:\n        print(min(x, min(y, z)))", "n = int(input())\nfor _ in range(n):\n    (p, a, b, c) = map(int, input().split())\n    if p % a == 0 or p % b == 0 or p % c == 0:\n        print(0)\n    else:\n        print(min(abs(p % a - a), abs(p % b - b), abs(p % c - c)))", "for _ in range(int(input())):\n    (p, a, b, c) = map(int, input().split())\n    if p % a == 0 or p % b == 0 or p % c == 0:\n        print(0)\n    else:\n        res = min(abs(a - p % a), abs(b - p % b), abs(c - p % c))\n        print(res)", "import math\nn = int(input())\nfor i in range(n):\n    (p, a, b, c) = list(map(int, input().split()))\n    x = min((a - p % a) % a, (b - p % b) % b, (c - p % c) % c)\n    print(x)", "num = int(input())\nnlist = []\nmlist = []\nt = True\nfor i in range(num):\n    list1 = list(map(int, input().split()))\n    k = list1[0]\n    n = 0\n    while t == True:\n        n = n + 1\n        if k % list1[n] == 0:\n            o = 0\n            mlist.append(o)\n        elif k - list1[n] > 0:\n            i = 1\n            r = k // list1[n]\n            i = list1[n] * (r + 1)\n            h = k - i\n            o = h\n            o = int(o)\n            o = abs(o)\n            mlist.append(o)\n        if k - list1[n] < 0:\n            o = k - list1[n]\n            o = abs(o)\n            mlist.append(o)\n        if n == 3:\n            break\n    m = min(mlist)\n    nlist.append(m)\n    mlist = []\nprint(*nlist, sep='\\n')", "R = lambda : map(int, input().split())\nfor _ in range(int(input())):\n    (p, a, b, c) = R()\n    l = [a, b, c]\n    l2 = []\n    for i in l:\n        if p % i == 0:\n            l2.append(0)\n            break\n        else:\n            l2.append(i - p % i)\n    print(min(l2))", "for i in range(int(input())):\n    arr = [int(_) for _ in input().split()]\n    f = []\n    if arr[0] in arr[1:]:\n        print(0)\n    else:\n        for char in arr[1:]:\n            if arr[0] % char == 0:\n                char = char * (arr[0] // char)\n            else:\n                char = char * (arr[0] // char + 1)\n            f.append(char)\n        print(min(f) - arr[0])", "num = int(input())\nfor i in range(num):\n    info = input()\n    info = info.split(' ')\n    p = int(info[0])\n    a = int(info[1])\n    b = int(info[2])\n    c = int(info[3])\n    if p % a == 0 or p % b == 0 or p % c == 0:\n        print(0)\n    else:\n        temp = []\n        if a > p:\n            temp.append(a - p)\n        else:\n            temps = p // a + 1\n            temps = a * temps\n            temp.append(temps - p)\n        if b > p:\n            temp.append(b - p)\n        else:\n            temps = p // b + 1\n            temps = b * temps\n            temp.append(temps - p)\n        if c > p:\n            temp.append(c - p)\n        else:\n            temps = p // c + 1\n            temps = c * temps\n            temp.append(temps - p)\n        print(min(temp))", "import math\nletters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\nt = int(input())\nfor _ in range(t):\n    (p, a, b, c) = map(int, input().split())\n    r = []\n    for item in [a, b, c]:\n        if p > item:\n            if p % item == 0:\n                r.append(0)\n            else:\n                r.append(item - p % item)\n        elif p < item:\n            r.append(item - p)\n        else:\n            r.append(0)\n    print(min(r))", "t = int(input())\nfor _ in range(t):\n    (p, a, b, c) = (int(i) for i in input().split())\n    res = min((a - p) % a, (b - p) % b, (c - p) % c)\n    print(res)", "for _ in range(int(input())):\n    (p, a, b, c) = map(int, input().split())\n    if p == a or p == b or p == c:\n        print(0)\n    else:\n        m = float('inf')\n        if p < a:\n            m = min(a - p, m)\n        else:\n            m = min(m, -p % a)\n        if p < b:\n            m = min(b - p, m)\n        else:\n            m = min(m, -p % b)\n        if p < c:\n            m = min(c - p, m)\n        else:\n            m = min(m, -p % c)\n        print(m)", "for _ in range(int(input())):\n    (p, a, b, c) = map(int, input().split())\n    if p % a and p % b and p % c:\n        print(min(a - p % a, b - p % b, c - p % c))\n    else:\n        print(0)", "for _ in range(int(input())):\n    (p, a, b, c) = map(int, input().split())\n    x = -(-p // a) * a - p\n    y = -(-p // b) * b - p\n    z = -(-p // c) * c - p\n    print(min(x, y, z))", "t = int(input())\nfor t in range(t):\n    (p, a, b, c) = map(int, input().split())\n    x = -(-p // a) * a - p\n    y = -(-p // b) * b - p\n    z = -(-p // c) * c - p\n    print(min(x, y, z))", "for s in [*open(0)][1:]:\n    (p, *a) = map(int, s.split())\n    print(min((-p % x for x in a)))", "a = int(input())\nfor x in range(a):\n    (b, c, d, e) = map(int, input().split())\n    if b % c > 0:\n        c = (b // c + 1) * c\n    else:\n        c = b // c * c\n    if b % d > 0:\n        d = (b // d + 1) * d\n    else:\n        d = b // d * d\n    if b % e > 0:\n        e = (b // e + 1) * e\n    else:\n        e = b // e * e\n    print(min(c - b, d - b, e - b))", "t = int(input())\nfor _ in range(t):\n    (p, *arr) = map(int, input().split())\n    bestTime = max(arr)\n    points = 0\n    for c in arr:\n        if p % c == 0:\n            bestTime = 0\n        else:\n            points = (p + c - 1) // c * c - p\n            if points < bestTime:\n                bestTime = points\n    print(bestTime)", "T = int(input())\nfor t in range(T):\n    (p, a, b, c) = [int(k) for k in input().split()]\n    m1 = p % a\n    m2 = p % b\n    m3 = p % c\n    ans = 10 ** 19\n    ans = min(ans, (a - m1) % a)\n    ans = min(ans, (b - m2) % b)\n    ans = min(ans, (c - m3) % c)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (p, a, b, c) = map(int, input().split())\n    x = (a - p % a) % a\n    y = (b - p % b) % b\n    z = (c - p % c) % c\n    print(min(x, y, z))", "t = int(input())\nfor i in range(t):\n    (p, a, b, c) = map(int, input().split())\n    print(min(-p % a, -p % b, -p % c))", "t = int(input())\nfor jgdsljfgd in range(t):\n    (p, a, b, c) = map(int, input().split())\n    print(min((p + a - 1) // a * a - p, (p + b - 1) // b * b - p, (p + c - 1) // c * c - p))", "for _ in range(int(input())):\n    (p, a, b, c) = map(int, input().split())\n    print(min((0 - -p // a) * a, (0 - -p // b) * b, (0 - -p // c) * c) - p)", "def tejava(p, a, b, c):\n    if p % a == 0 or p % b == 0 or p % c == 0:\n        return 0\n    return min(a - p % a, b - p % b, c - p % c)\nt = int(input())\nfor i in range(t):\n    (p, a, b, c) = map(int, input().split())\n    print(tejava(p, a, b, c))", "for _ in range(int(input())):\n    (p, a, b, c) = map(int, input().split())\n    ans = 0\n    if p in [a, b, c]:\n        ans = 0\n    elif p < min(a, b, c):\n        ans = min(a, b, c) - p\n    else:\n        x = p // a\n        x = x + 1 if x * a < p else x\n        y = p // b\n        y = y + 1 if y * b < p else y\n        z = p // c\n        z = z + 1 if z * c < p else z\n        (x, y, z) = (x * a, y * b, z * c)\n        ans = min(x - p, y - p, z - p)\n    print(ans)", "def mytest():\n    for s in [*open(0)][1:]:\n        (p, *a) = map(int, s.split())\n        print(min((-p % x for x in a)))\nmytest()", "n = int(input())\nfor i in range(n):\n    l = []\n    lt = []\n    (p, a, b, c) = list(map(int, input().split()))\n    l.append(p % a)\n    l.append(p % b)\n    l.append(p % c)\n    lt.append(a - p % a)\n    lt.append(b - p % b)\n    lt.append(c - p % c)\n    minn = min(l)\n    minnn = min(lt)\n    if minn == 0:\n        print(minn)\n    else:\n        print(minnn)", "t = int(input())\nfor k in range(t):\n    (p, a, b, c) = map(int, input().split())\n    a1 = ((p - 1) // a + 1) * a - p\n    b1 = ((p - 1) // b + 1) * b - p\n    c1 = ((p - 1) // c + 1) * c - p\n    print(min(a1, b1, c1))", "def func():\n    n = int(input())\n    for _ in range(n):\n        (p, a, b, c) = map(int, input().strip().split())\n        if p % a == 0 or p % b == 0 or p % c == 0:\n            print(0)\n        else:\n            print(min(a - p % a, b - p % b, c - p % c))\nfunc()", "t = int(input())\nwhile t:\n    t -= 1\n    (p, *a) = map(int, input().split())\n    m = min([(i - p) % i for i in a])\n    print(m)", "t = int(input())\nfor _ in range(t):\n    (p, a, b, c) = map(int, input().split())\n    if p % a == 0 or p % b == 0 or p % c == 0:\n        print(0)\n        continue\n    print(min((p // a + 1) * a - p, (p // b + 1) * b - p, (p // c + 1) * c - p))", "for s in [*open(0)][1:]:\n    (p, *a) = map(int, s.split())\n    print(min((-p % x for x in a)))", "import math\nimport os\nimport random\nimport re\nimport sys\nfor _ in range(int(input())):\n    (p, a, b, c) = list(map(int, input().split()))\n    if p % a == 0 or p % b == 0 or p % c == 0:\n        print(0)\n        continue\n    x = (p // a + 1) * a - p\n    y = (p // b + 1) * b - p\n    z = (p // c + 1) * c - p\n    d = min(x, y, z)\n    print(d)", "t = int(input())\nfor i in range(t):\n    (p, a, b, c) = map(int, input().split())\n    a1 = p // a + 1\n    b1 = p // b + 1\n    c1 = p // c + 1\n    l = [a1 * a - p, b1 * b - p, c1 * c - p]\n    if (p % a != 0 and p % b != 0 and (p % c != 0)) and l != [a, b, c]:\n        print(min(l))\n    else:\n        print(0)", "for s in [*open(0)][1:]:\n    (p, *a) = map(int, s.split())\n    s = min((-p % x for x in a))\n    print(s)", "inn = lambda : int(input())\ninm = lambda : map(int, input().split())\nins = lambda : str(input())\nina = lambda : list(map(int, input().split()))\n\ndef solve():\n    (p, a, b, c) = inm()\n    aa = (p + a - 1) // a\n    bb = (p + b - 1) // b\n    cc = (p + c - 1) // c\n    print(min(aa * a, bb * b, cc * c) - p)\n\ndef main():\n    t = 1\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "mod = int(1000000000.0) + 7\n\ndef ip(mode):\n    if mode == 0:\n        return int(input())\n    if mode == 1:\n        return list(map(int, input().split()))\n    if mode == 2:\n        return input()\n    if mode == 3:\n        return list(map(str, input().split()))\n    if mode == 4:\n        return map(int, input().split())\n    if mode == 5:\n        return map(str, input().split())\nfor _ in range(int(input())):\n    (p, a, b, c) = ip(4)\n    x = (p // a + (p % a != 0)) * a\n    y = (p // b + (p % b != 0)) * b\n    z = (p // c + (p % c != 0)) * c\n    print(min([x, y, z]) - p)", "for _ in range(int(input())):\n    (p, a, b, c) = list(map(int, input().split()))\n    x = p // a\n    y = p // b\n    z = p // c\n    if p % a != 0:\n        x += 1\n    if p % b != 0:\n        y += 1\n    if p % c != 0:\n        z += 1\n    ans = min(abs(p - x * a), abs(p - y * b), abs(p - z * c))\n    print(ans)", "for _ in range(int(input())):\n    (p, a, b, c) = [int(x) for x in input().split()]\n    print(min((a - p % a) % a, (b - p % b) % b, (c - p % c) % c))", "for _ in range(int(input())):\n    (p, a, b, c) = map(int, input().split())\n    a1 = p % a\n    a2 = p % b\n    a3 = p % c\n    if a1 != 0:\n        a1 = a - a1\n    if a2 != 0:\n        a2 = b - a2\n    if a3 != 0:\n        a3 = c - a3\n    print(min(a1, a2, a3))", "t = int(input())\nfor _ in range(t):\n    (p, a, b, c) = [int(i) for i in input().strip().split()]\n    temp_a = p % a\n    temp_b = p % b\n    temp_c = p % c\n    if temp_a == 0 or temp_b == 0 or temp_c == 0:\n        print(0)\n    else:\n        print(min(a - p % a, b - p % b, c - p % c))", "def solution():\n    (p, a, b, c) = map(int, input().split())\n    if p % a == 0:\n        m1 = 0\n    else:\n        m1 = a - p % a\n    if p % b == 0:\n        m2 = 0\n    else:\n        m2 = b - p % b\n    if p % c == 0:\n        m3 = 0\n    else:\n        m3 = c - p % c\n    print(min(m1, m2, m3))\nfor _ in range(int(input())):\n    solution()", "for i in range(int(input())):\n    (p, a, b, c) = map(int, input().split())\n    if p % a == 0 or p % b == 0 or p % c == 0:\n        ans = 0\n    else:\n        ans = min(a - p % a, b - p % b, c - p % c)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (p, a, b, c) = map(int, input().split())\n    t1 = (p // a + 1) * a - p\n    if p % a == 0:\n        t1 = 0\n    t2 = (p // b + 1) * b - p\n    if p % b == 0:\n        t2 = 0\n    t3 = (p // c + 1) * c - p\n    if p % c == 0:\n        t3 = 0\n    print(min(t1, t2, t3))", "def next(p, a):\n    d = p // a\n    if d * a == p:\n        return p\n    return (d + 1) * a\nfor _ in range(int(input())):\n    (p, a, b, c) = map(int, input().split())\n    (a1, a2, a3) = (next(p, a), next(p, b), next(p, c))\n    print(min(a1 - p, a2 - p, a3 - p))", "for _ in range(int(input())):\n    (p, a, b, c) = map(int, input().split())\n    t1 = (a - p % a + a) % a\n    t2 = (b - p % b + b) % b\n    t3 = (c - p % c + c) % c\n    ans = min(t1, t2, t3)\n    print(ans)", "p = int(input())\nfor _ in range(p):\n    (p, a, b, c) = map(int, input().split())\n    arr = [a - p % a, b - p % b, c - p % c]\n    if p % a == 0 or p % b == 0 or p % c == 0:\n        print(0)\n    else:\n        print(min(arr))", "answers = []\n\ndef solve(p, a, b, c):\n    if p % a == 0:\n        answers.append(0)\n        return\n    if p % b == 0:\n        answers.append(0)\n        return\n    if p % c == 0:\n        answers.append(0)\n        return\n    req = p // a + 1\n    ans1 = a * req - p\n    req = p // b + 1\n    ans2 = b * req - p\n    req = p // c + 1\n    ans3 = c * req - p\n    answers.append(min(ans1, ans2, ans3))\nT = int(input())\nwhile T:\n    (p, a, b, c) = [int(x) for x in input().split()]\n    solve(p, a, b, c)\n    T -= 1\nfor ans in answers:\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (p, a, b, c) = map(int, input().split())\n    print(min([((p - 1) // x + 1) * x - p for x in [a, b, c]]))", "t = int(input())\n\ndef f(p, a):\n    rep = a - p % a\n    if not p % a:\n        return 0\n    else:\n        return rep\nfor case in range(t):\n    (p, a, b, c) = map(int, input().split())\n    print(min((f(p, x) for x in [a, b, c])))", "def ceil(a, b):\n    return (a + b - 1) // b\nfor _ in range(int(input())):\n    (p, a, b, c) = map(int, input().split())\n    if a >= p:\n        t1 = a\n    else:\n        t1 = ceil(p, a) * a\n    if b >= p:\n        t2 = b\n    else:\n        t2 = ceil(p, b) * b\n    if c >= p:\n        t3 = c\n    else:\n        t3 = ceil(p, c) * c\n    print(min(min(t1 - p, t2 - p), t3 - p))", "def check(x, p):\n    y = p % x\n    if y == 0:\n        return 0\n    return x - y\nfor _ in range(int(input())):\n    (p, a, b, c) = map(int, input().split())\n    time = [check(a, p), check(b, p), check(c, p)]\n    print(min(time))", "import sys\nn = int(input())\nfor _ in range(n):\n    l = list(map(int, sys.stdin.readline().strip().split()))\n    a = min((l[1] - l[0] % l[1]) % l[1], (l[2] - l[0] % l[2]) % l[2])\n    a = min(a, (l[3] - l[0] % l[3]) % l[3])\n    print(a)", "import sys\ninputlines = sys.stdin.readlines()\nnumber_of_testcases = int(inputlines[0])\nfor i in range(number_of_testcases):\n    (p, a, b, c) = list(map(int, inputlines[i + 1].split()))\n    rem_for_a = p % a\n    if rem_for_a == 0:\n        min_time_for_a = 0\n    else:\n        min_time_for_a = a - rem_for_a\n    rem_for_b = p % b\n    if rem_for_b == 0:\n        min_time_for_b = 0\n    else:\n        min_time_for_b = b - rem_for_b\n    rem_for_c = p % c\n    if rem_for_c == 0:\n        min_time_for_c = 0\n    else:\n        min_time_for_c = c - rem_for_c\n    print(min(min_time_for_a, min_time_for_b, min_time_for_c))", "T = int(input())\nfor x in range(T):\n    d = [int(y) for y in input().split()]\n    p = d[0]\n    a = d[1]\n    b = d[2]\n    c = d[3]\n    a1 = 0\n    b1 = 0\n    c1 = 0\n    if p % a == 0:\n        a1 = p % a\n    else:\n        a1 = a - p % a\n    if p % b == 0:\n        b1 = p % b\n    else:\n        b1 = b - p % b\n    if p % c == 0:\n        c1 = p % c\n    else:\n        c1 = c - p % c\n    l = [a1, b1, c1]\n    print(min(l))", "def solve(p, a, b, c):\n    if p % c == 0 or p % a == 0 or p % b == 0:\n        print(0)\n        return\n    (div_a, rem_a) = divmod(p, a)\n    (div_b, rem_b) = divmod(p, b)\n    (div_c, rem_c) = divmod(p, c)\n    if not rem_a or not rem_b or (not rem_c):\n        print(0)\n    else:\n        print(min(a - rem_a, b - rem_b, c - rem_c))\n    return\nt = int(input())\nwhile t:\n    t -= 1\n    (p, a, b, c) = [int(val) for val in input().split(' ')]\n    solve(p, a, b, c)", "t = int(input())\nanswer = []\nfor i in range(t):\n    (p, a, b, c) = map(int, input().split())\n    if p % a == 0:\n        a1 = 0\n    else:\n        a1 = (p // a + 1) * a - p\n    if p % b == 0:\n        b1 = 0\n    else:\n        b1 = (p // b + 1) * b - p\n    if p % c == 0:\n        c1 = 0\n    else:\n        c1 = (p // c + 1) * c - p\n    answer.append(min(a1, b1, c1))\nfor ans in answer:\n    print(ans)", "t = int(input())\n\ndef ceil(x, y):\n    if x % y == 0:\n        return x // y\n    else:\n        return x // y + 1\nwhile t:\n    t = t - 1\n    (p, a, b, c) = map(int, input().split())\n    a = ceil(p, a) * a - p\n    b = ceil(p, b) * b - p\n    c = ceil(p, c) * c - p\n    print(min(a, b, c))"]