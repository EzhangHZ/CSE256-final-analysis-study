["for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        print(n + k * 2)\n    else:\n        f = True\n        for i in range(2, int(n ** 0.5) + 1):\n            if n % i == 0:\n                f = False\n                break\n        print(2 * n + (k - 1) * 2 if f else n + i + (k - 1) * 2)", "from math import sqrt\n\ndef func(n):\n    x = n\n    if n % 2 == 0:\n        return 2\n    for j in range(2, int(sqrt(n)) + 1):\n        if n % j == 0:\n            x = j\n            break\n    return x\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    n += func(n) + (k - 1) * 2\n    print(n)", "def small_div(n):\n    if n % 2 == 0:\n        return 2\n    else:\n        i = 3\n        while i * i <= n:\n            if n % i == 0:\n                return i\n            i = i + 2\n        return n\ntimes = int(input())\ni = 1\nwhile i <= times:\n    (n, k) = input().split()\n    n = int(n)\n    k = int(k)\n    sd = small_div(n)\n    if sd % 2 == 0:\n        n = n + 2 * k\n    else:\n        n = n + sd + 2 * (k - 1)\n    print(n)\n    i = i + 1", "def minDiv(n):\n    if n <= 3:\n        return n\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            return i\n    return n\nt = int(input())\nfor i in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    if n % 2 != 0:\n        t = minDiv(n)\n        print(n + t + (k - 1) * 2)\n    else:\n        print(n + 2 * k)", "from math import sqrt\n\ndef solve(n, k):\n    if k == 0:\n        return n\n    if n % 2:\n        smalDiv = None\n        for i in range(2, int(sqrt(n)) + 2):\n            if n % i == 0:\n                smalDiv = i\n                break\n        if not smalDiv:\n            smalDiv = n\n        n += smalDiv\n        if k == 1:\n            return n\n        else:\n            return n + (k - 1) * 2\n    else:\n        return n + k * 2\nt = int(input())\nwhile t:\n    t -= 1\n    (n, k) = tuple(map(int, input().strip().split(' ')))\n    print(solve(n, k))", "from math import floor\n\ndef f(n):\n    for i in range(2, 1 + floor(n ** 0.5)):\n        if n % i == 0:\n            return i\n    return n\nfor t in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    if n % 2 == 0:\n        print(n + 2 * k)\n    else:\n        print(n + 2 * (k - 1) + f(n))", "import math\nt = int(input())\n\ndef f(n):\n    temp = int(math.modf(math.sqrt(n))[1])\n    for i in range(2, temp + 1):\n        if n % i == 0:\n            return i\n    return n\nfor i in range(t):\n    temp = input().split()\n    n = int(temp[0])\n    k = int(temp[1])\n    smallestFactor = f(n)\n    if n % 2 != 0 and smallestFactor % 2 != 0:\n        print(n + smallestFactor + 2 * (k - 1))\n    else:\n        print(n + k * smallestFactor)", "import math\n\ndef fun(n):\n    h = int(n ** 0.5) + 1\n    i = 2\n    while i < h:\n        if n % i == 0:\n            return i\n        i += 1\n    return n\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        print(n + k * 2)\n    elif k == 1:\n        print(n + fun(n))\n    else:\n        n = n + fun(n)\n        k -= 1\n        print(n + k * 2)", "for _ in [*open(0)][1:]:\n    (n, k) = map(int, _.split())\n    if n % 2:\n        con = True\n        for i in range(3, int(n ** 0.5) + 1, 2):\n            if not n % i:\n                d = i\n                con = False\n                break\n        if con:\n            d = n\n        print(n + d + 2 * (k - 1))\n    else:\n        print(n + 2 * k)", "import math\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = 0\n    if a % 2 != 0:\n        for j in range(2, int(math.sqrt(a)) + 1):\n            if a % j == 0:\n                a += j\n                c += 1\n                break\n        if c == 0:\n            a += a\n        b -= 1\n    print(a + b * 2)", "from math import sqrt\nt = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    factor = 2\n    maxFactor = sqrt(n)\n    while factor <= maxFactor:\n        if n % factor == 0:\n            break\n        factor += 1\n    if n % factor != 0:\n        factor = n\n    res = n + factor + (k - 1) * 2\n    print(res)", "import math\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    d = 2\n    while d <= math.sqrt(n):\n        if n % d == 0:\n            break\n        else:\n            d += 1\n    if n % d != 0:\n        d = n\n    n += d\n    n += 2 * (k - 1)\n    print(n)", "import math\nfor i in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    f = 0\n    if n % 2 == 0:\n        print(n + k * 2)\n    else:\n        for i in range(2, int(math.sqrt(n)) + 1):\n            if n % i == 0:\n                n += i\n                f = 1\n                break\n        if f == 0:\n            n += n\n        print(n + (k - 1) * 2)", "t = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    if n % 2 == 0:\n        print(n + k * 2)\n    else:\n        prime = -1\n        for i in range(3, n, 2):\n            if i ** 2 > n:\n                break\n            if n % i == 0:\n                prime = i\n                break\n        if prime == -1:\n            prime = n\n        print(n + prime + (k - 1) * 2)", "import math\nt = int(input(''))\nfor test in range(t):\n    inp = input('')\n    (n, k) = [int(i) for i in inp.split()]\n    if n % 2 == 0:\n        n += k * 2\n    else:\n        f_n = 0\n        for i in range(3, int(math.sqrt(n) + 1)):\n            if n % i == 0:\n                f_n = i\n                n += i\n                break\n        if f_n == 0:\n            n += n\n        if k > 1:\n            n += 2 * (k - 1)\n    print(n)", "import math\n\ndef primeFactors(n):\n    l = []\n    c = 2\n    while n > 1:\n        if n % c == 0:\n            l.append(c)\n            n = n / c\n        else:\n            c = c + 1\n    return l\n\ndef primeFactors(n):\n    l = []\n    c = 2\n    while n > 1:\n        if n % c == 0:\n            l.append(c)\n            n = n / c\n        else:\n            c = c + 1\n    return l\n\ndef prime(n):\n    prime_flag = 0\n    if n > 1:\n        for i in range(2, int(math.sqrt(n)) + 1):\n            if n % i == 0:\n                prime_flag = 1\n                break\n    return prime_flag\n\ndef min_factor(n):\n    mini = 100000000\n    i = 2\n    while i * i <= n:\n        if n % i == 0:\n            mini = min(mini, i)\n        i += 1\n    mini = min(mini, n)\n    return mini\nt = int(input())\nwhile t:\n    l = list(map(int, input().split()))\n    n = l[0]\n    k = l[1]\n    a = min_factor(n)\n    ans = n + a\n    ans = ans + (k - 1) * 2\n    print(ans)\n    t = t - 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n & 1:\n\n        def isprime(n):\n            if n == 1:\n                return 0\n            if n == 3 or n == 5 or n == 7:\n                return 1\n            for i in range(2, int(n ** 0.5) + 1):\n                if n % i == 0:\n                    return 0\n            return 1\n\n        def factor(n):\n            for i in range(3, int(n ** 0.5) + 1):\n                if n % i == 0:\n                    return i\n        if isprime(n):\n            print(n + n + 2 * (k - 1))\n        else:\n            fact = factor(n)\n            print(n + fact + 2 * (k - 1))\n    else:\n        print(n + k * 2)", "def my_func(n):\n    j = 0\n    flag = 0\n    for j in range(2, int(pow(n, 0.5)) + 1):\n        if n % j == 0:\n            flag = 1\n            break\n    if flag == 0:\n        j = n\n    return j\nfor j in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2:\n        n = my_func(n) + n\n        k -= 1\n    print(n + 2 * k)", "from math import sqrt\n\ndef solve(N, K):\n    temp1 = sqrt(N)\n    temp2 = int(temp1)\n    factors = [1]\n    if temp1 == temp2:\n        for i in range(2, temp2):\n            if N % i == 0:\n                factors.append(i)\n                factors.append(N // i)\n        factors.append(temp2)\n    else:\n        for i in range(2, temp2 + 1):\n            if N % i == 0:\n                factors.append(i)\n                factors.append(N // i)\n    factors.append(N)\n    p = N + factors[1] + 2 * (K - 1)\n    print(p)\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        print(n + 2 * k)\n    else:\n        solve(n, k)", "def lowest_factor(x):\n    fact = 0\n    for i in range(2, int(x ** (1 / 2)) + 1):\n        if x % i == 0:\n            fact = i\n            break\n    return fact if fact != 0 else x\nq = int(input())\nfor _ in range(q):\n    (n, k) = map(int, input().split())\n    print(2 * k + n if n % 2 == 0 else n + (k - 1) * 2 + lowest_factor(n))", "from math import sqrt\nfor _ in range(int(input())):\n    (n, k) = input().split()\n    (n, k) = [int(n), int(k)]\n    if n % 2 == 0:\n        n = n + k * 2\n        print(n)\n    else:\n        while k != 0:\n            if n % 2 == 0:\n                n = n + 2 * k\n                k = 0\n            else:\n                for i in range(3, int(sqrt(n)) + 1):\n                    if n % i == 0:\n                        n = n + i\n                        break\n                else:\n                    n = n + n\n                k = k - 1\n        print(n)", "def small_divisor(num):\n    limit = round(num ** 0.5) + 1\n    for i in range(2, limit):\n        if num % i == 0:\n            return i\n            break\n    else:\n        return num\nfor test_case in range(int(input())):\n    (num, k) = map(int, input().split()[:2])\n    num += small_divisor(num)\n    addition = (k - 1) * 2\n    num += addition\n    print(num)", "import math\n\ndef sol(x):\n    (n, k) = (int(x[0]), int(x[1]))\n    temp = math.sqrt(n)\n    index = 2\n    while n % index != 0 and index < temp:\n        index += 1\n    if n % index != 0 and index > temp:\n        n *= 2\n    else:\n        n += index\n    n += 2 * (k - 1)\n    return n\n\ndef main():\n    t = int(input())\n    for g in range(t):\n        x = input().split()\n        print(sol(x))\nmain()", "import math\nt = int(input())\n\ndef diff(x):\n    for i in range(3, int(n ** 0.5) + 4):\n        if x % i == 0:\n            return i\n    return x\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        print(n + k * 2)\n    else:\n        r = diff(n)\n        print(n + r + (k - 1) * 2)", "import math\n\ndef find_smallest_factor(n):\n    if n % 2 == 0:\n        return 2\n    sqrt_n = int(math.sqrt(n)) + 1\n    maxx = int(sqrt_n / 2) + 1\n    for f in range(1, maxx):\n        target = 2 * f + 1\n        if n % target == 0:\n            return target\n    return n\ntrails = int(input())\nanswer_list = []\nfor x in range(trails):\n    numbers = input()\n    numbers = numbers.split(' ')\n    first = int(numbers[0])\n    second = int(numbers[1])\n    first += find_smallest_factor(first)\n    first += (second - 1) * 2\n    answer_list.append(first)\nfor q in answer_list:\n    print(q)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        print(n + k * 2)\n        continue\n    t = 0\n    if n % 2 == 0:\n        t = 2\n    else:\n        for i in range(3, n, 2):\n            if i * i <= n:\n                if n % i == 0:\n                    t = i\n                    break\n            else:\n                break\n    if t == 0:\n        t = n\n    print(n + t + (k - 1) * 2)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ans = n\n    flag = False\n    for i in range(2, max(3, int(n ** 0.5) + 2)):\n        if n % i == 0:\n            ans = i\n            break\n    if n % 2 != 0:\n        print(n + ans + (k - 1) * 2)\n    else:\n        print(n + k * 2)", "from math import sqrt\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        n += 2 * k\n    elif n % 2 != 0:\n        q = int(sqrt(n))\n        for j in range(3, q + 1, 2):\n            if n % j == 0:\n                x = j\n                break\n        else:\n            x = n\n        n += x + 2 * (k - 1)\n    print(n)", "import math\nt = int(input())\n\ndef div(n):\n    ul = math.ceil(math.sqrt(n))\n    if n % 2 == 0:\n        return 2\n    else:\n        for i in range(3, ul + 1, 2):\n            if n % i == 0:\n                return i\n                break\n    return n\nfor i in range(0, t):\n    (n, k) = list(map(int, input().split()))\n    n = n + div(n) + 2 * max(0, k - 1)\n    print(n)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2:\n        for j in range(2, int(n ** (1 / 2)) + 1):\n            if n % j == 0:\n                n = n + j\n                break\n        else:\n            n += n\n        n += 2 * (k - 1)\n    else:\n        n += 2 * k\n    print(n)", "import math\nfound = False\nt = int(input())\nfor a in range(t):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        n = n + k * 2\n        print(n)\n        continue\n    else:\n        found = False\n        for x in range(2, int(math.sqrt(n)) + 2):\n            if n / x % 1 == 0 and found == False:\n                n += x\n                found = True\n        if found == True:\n            n = n + k * 2 - 2\n        else:\n            n = n + n + k * 2 - 2\n    print(n)", "def f_n(n):\n    if n % 2 == 0:\n        return 2\n    i = 3\n    while i * i <= n:\n        if n % i == 0:\n            return i\n        i += 2\n    return n\n\ndef solve(vec):\n    for i in vec:\n        n = i[0]\n        if n % 2 == 0:\n            n = n + i[1] * f_n(n)\n        else:\n            n = n + f_n(n)\n            n = n + (i[1] - 1) * f_n(n)\n        print(n)\nt = int(input())\nvec = []\nfor i in range(t):\n    string = input().split(' ')\n    vec.append([int(_) for _ in string])\nsolve(vec)", "import math\nt = int(input())\n\ndef findFact(n):\n    for i in range(2, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            return i\n    return n\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        print(n + 2 * k)\n        continue\n    print(n + 2 * (k - 1) + findFact(n))", "for _ in range(int(input())):\n    n = [int(i) for i in input().split()]\n    a = n[0]\n    b = n[1]\n    c = 0\n    if a % 2 == 0:\n        print(a + b * 2)\n        continue\n    for e in range(3, a + 1, 2):\n        if e * e <= a:\n            if a % e == 0:\n                print(a + e + (b - 1) * 2)\n                break\n        else:\n            print(a * 2 + (b - 1) * 2)\n            break", "for _ in range(int(input())):\n    n = [int(i) for i in input().split()]\n    a = n[0]\n    b = n[1]\n    c = 0\n    if a % 2 == 0:\n        print(a + b * 2)\n        continue\n    for e in range(3, a + 1, 2):\n        if e * e <= a:\n            if a % e == 0:\n                print(a + e + (b - 1) * 2)\n                break\n        else:\n            print(a * 2 + (b - 1) * 2)\n            break", "def g(p):\n    if p % 2 == 0:\n        return 2\n    else:\n        i = 3\n        while i <= p ** (1 / 2):\n            if p % i == 0:\n                return i\n            i += 2\n        return p\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        print(n + 2 * k)\n    else:\n        print(n + g(n) + 2 * (k - 1))", "t = int(input())\n\ndef f(n):\n    for i in range(2, int(n ** (1 / 2)) + 1):\n        if n % i == 0:\n            return i\n    return n\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        print(n + 2 * k)\n    else:\n        n += f(n)\n        print(n + (k - 1) * 2)", "import math\n\ndef isPrime(n):\n    for i in range(2, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef minPrimeDiv(n):\n    for i in range(2, int(math.sqrt(n)) + 1):\n        if n % i == 0 and isPrime(i):\n            return i\n    return n\n\ndef solve(n, k):\n    while k != 0:\n        if minPrimeDiv(n) == 2:\n            return n + k * minPrimeDiv(n)\n        else:\n            n += minPrimeDiv(n)\n            k -= 1\n    return n\ntest_cases = int(input())\nfor _ in range(test_cases):\n    (n, k) = list(map(int, input().split()))\n    print(solve(n, k))", "from math import sqrt\n\ndef d(n, r):\n    if n & 1 == 0:\n        return 2\n    elif n % 3 == 0:\n        return 3\n    for x in range(5, r, 6):\n        if n % x == 0:\n            return x\n        xt = x + 2\n        if n % xt == 0:\n            return xt\n    return n\n\ndef f(n):\n    r = int(sqrt(n)) + 1\n    b = d(n, r)\n    return n + b\nt = int(input())\nfor _ in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    ret = f(n)\n    ret += k - 1 << 1\n    print(ret)", "from math import sqrt\n\ndef divisor(number):\n    if number % 2 == 0:\n        return 2\n    else:\n        for i in range(3, int(sqrt(number)) + 1, 2):\n            if number % i == 0:\n                return i\n        return number\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n & 1:\n        result = n + 2 * (k - 1) + divisor(n)\n        print(result)\n    else:\n        result = n + 2 * k\n        print(result)", "def md(n):\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            return i\n    return n\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    n += md(n)\n    print(n + (k - 1) * 2)", "res = ''\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        res += str(n + k * 2) + '\\n'\n    else:\n        curr = n\n        for i in range(2, int(n ** 0.5) + 1):\n            if n % i == 0:\n                curr += i\n                break\n        if curr == n:\n            curr += n\n        res += str(curr + 2 * (k - 1)) + '\\n'\nprint(res)", "for i in range(int(input())):\n    (a, b) = map(int, input().split(' '))\n    c = 0\n    for k in range(2, int(a ** (1 / 2)) + 1):\n        if a % k == 0:\n            a += k\n            c = k\n            break\n    if c == 0:\n        print(a * 2 + 2 * (b - 1))\n    else:\n        print(a + 2 * (b - 1))", "for t in range(int(input())):\n    A = list(map(int, input().split()))\n    n = A[0]\n    k = A[1]\n    f = 2\n    flag = True\n    while f <= n ** 0.5:\n        if n % f == 0:\n            n += f\n            flag = False\n            break\n        f += 1\n    if flag:\n        n += n\n    if k == 1:\n        print(n)\n    else:\n        calc = (k - 1) * 2\n        n += calc\n        print(n)", "import math\nfor i in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    paichi = False\n    for j in range(k):\n        if n % 2 == 0:\n            n += 2 * (k - j)\n            break\n        else:\n            for a in range(3, math.floor(math.sqrt(n)) + 1, 2):\n                if n % a == 0:\n                    n += a\n                    paichi = True\n                    break\n                else:\n                    paichi = False\n            if paichi == False:\n                n += n\n    print(n)", "def main():\n    for _ in range(int(input())):\n        (n, k) = (int(x) for x in input().split())\n        if n % 2:\n            mn = n\n            for j in range(3, int(n ** (1 / 2) + 1)):\n                if n % j == 0:\n                    mn = j\n                    break\n            print(mn + n + 2 * (k - 1))\n        else:\n            print(n + 2 * k)\n    return 0\nmain()", "t = input()\nfor _ in range(int(t)):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        ans = n + 2 * k\n    else:\n        i = 2\n        flag = 0\n        while i * i <= n:\n            if n % i == 0:\n                ans = n + i + (k - 1) * 2\n                flag = 1\n                break\n            i += 1\n        if flag == 0:\n            ans = n + n\n            ans += (k - 1) * 2\n    print(ans)", "import math\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a % 2 == 0:\n        print(a + 2 * b)\n    else:\n        c = 0\n        for j in range(2, math.floor(math.sqrt(a)) + 1):\n            if a % j == 0:\n                k = j\n                c = 1\n                break\n        if c == 0:\n            k = a\n        print(a + k + 2 * (b - 1))", "from math import sqrt, ceil\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = n\n    flag = 0\n    for i in range(2, ceil(sqrt(n)) + 1):\n        if n % i == 0:\n            flag = 1\n            break\n    if flag == 1:\n        s += i\n    else:\n        s += n\n    s += (k - 1) * 2\n    print(s)", "def delt(n):\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            return i\n    return n\nkl = int(input())\nfor l in range(kl):\n    (n, k) = map(int, input().split())\n    if n % 2 == 1:\n        print(delt(n) + n + 2 * (k - 1))\n    else:\n        print(n + 2 * k)", "def f(a, b):\n    tmp = 0\n    if a % 2 == 0:\n        return a + b * 2\n    else:\n        for i in range(2, int(a ** 0.5) + 1):\n            if a % i == 0:\n                tmp = i\n                break\n        if tmp == 0:\n            tmp = a\n        return a + tmp + (b - 1) * 2\nt = int(input())\ncnt = 0\nwhile cnt < t:\n    cnt += 1\n    (n, k) = [int(i) for i in input().split()]\n    res = f(n, k)\n    print(res)", "def solve():\n    n = int(input())\n    l = list(str(n))\n    k = len(l) - 1\n    if n % 10 ** k == 0:\n        print(1)\n        print(n)\n    else:\n        ans = []\n        for i in range(len(l)):\n            if l[i] != '0':\n                x = int(l[i]) * 10 ** k\n                ans.append(x)\n            k -= 1\n        print(len(ans))\n        print(*ans)\n\ndef fun(n):\n    if n % 2 == 0:\n        return 2\n    i = 3\n    while i * i <= n:\n        if n % i == 0:\n            return i\n        i += 2\n    return n\n\ndef solve():\n    (n, k) = map(int, input().split())\n    if k == 1:\n        print(n + fun(n))\n    elif n % 2 == 0:\n        print(n + k * fun(n))\n    else:\n        x = fun(n) + n\n        print(x + (k - 1) * fun(x))\ntry:\n    for _ in range(int(input())):\n        solve()\nexcept:\n    pass", "def is_prime(p):\n    if p == 1:\n        return False\n    for i in range(2, int(p ** 0.5) + 1):\n        if p % i == 0:\n            return False\n    return True\nq = int(input())\nfor i in range(q):\n    (n, k) = map(int, input().split())\n    if is_prime(n):\n        n += n\n        print(n + (k - 1) * 2)\n    elif n % 2 == 1:\n        p = 2\n        while n % p:\n            p += 1\n        print(n + p + (k - 1) * 2)\n    else:\n        print(n + k * 2)", "inp = input\nli = list\niinp = lambda : int(inp())\nent = lambda : map(int, inp().split())\nlient = lambda : [int(i) for i in inp().split()]\nli0 = lambda x: [0 for i in range(x)]\nlivalor = lambda valor, x: [valor for i in range(x)]\nstent = lambda : [i for i in inp()]\nfilldp = lambda valor, x, y: [[valor for i in range(y)] for i in range(x)]\nfrom math import sqrt as sq\nfrom math import ceil as c\n\ndef primo(n):\n    if n <= 2:\n        return [True]\n    medio = c(sq(n)) + 1\n    for i in range(2, medio):\n        if n % i == 0:\n            return [False, i]\n    return [True]\nt = iinp()\nfor _ in range(t):\n    (n, k) = ent()\n    if n % 2 == 0:\n        print(n + 2 * k)\n    else:\n        tmp = primo(n)\n        if tmp[0]:\n            print(n + n + 2 * (k - 1))\n        else:\n            res = n + tmp[1]\n            print(res + 2 * (k - 1))", "import math\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    g = math.floor(math.sqrt(n))\n    if g == 1:\n        n += n\n        k = k - 1\n    if n % 2 != 0:\n        g = math.floor(math.sqrt(n))\n        for j in range(2, g + 1):\n            if n % j == 0:\n                n += j\n                k = k - 1\n                break\n            elif j == g:\n                n += n\n                k -= 1\n    print(n + 2 * k)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        print(n + 2 * k)\n    elif n % 3 == 0:\n        print(n + 3 + 2 * (k - 1))\n    else:\n        i = 5\n        f = 0\n        while i * i <= n:\n            if n % i == 0:\n                f = 1\n                break\n            i += 1\n        if f:\n            print(n + i + 2 * (k - 1))\n        else:\n            print(n + n + 2 * (k - 1))", "import math\nt = int(input())\nwhile t:\n    t -= 1\n    i = input().split()\n    n = int(i[0])\n    k = int(i[1])\n    if n % 2 == 0:\n        print(n + 2 * k)\n        continue\n    z = False\n    for i in range(2, int(math.sqrt(n) + 1)):\n        if n % i == 0:\n            n += i\n            z = True\n            break\n    if z == False:\n        n += n\n    print(n + 2 * (k - 1))", "def isPrime(n):\n    if n <= 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    i = 5\n    while i * i <= n:\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n        i = i + 6\n    return True\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if isPrime(n) and k == 1:\n        print(n * 2)\n    elif isPrime(n) and k > 1:\n        ab = (k - 1) * 2\n        print(n * 2 + ab)\n    else:\n        for x in range(2, n):\n            if n % x == 0:\n                c = x\n                break\n        ab = (k - 1) * 2\n        print(n + c + ab)", "def fun(x):\n    if x in d:\n        return d[x]\n    else:\n        for i in range(2, int(x ** 0.5) + 1):\n            if x % i == 0:\n                d[x] = i\n                return i\n        d[x] = x\n        return x\nt = int(input())\nd = dict()\nwhile t:\n    (n, k) = list(map(int, input().split()))\n    n += fun(n)\n    n += 2 * (k - 1)\n    print(n)\n    t -= 1", "n6_add1 = lambda n: n * 6 + 1\nn6_sub1 = lambda n: n * 6 - 1\n\ndef factors(n, k):\n    if n % 2 == 0:\n        n += 2 * k\n    elif n % 3 == 0:\n        n += 3 + 2 * (k - 1)\n    else:\n        cutoff = int(n ** (1 / 2))\n        i = 1\n        i_add1 = 7\n        i_sub1 = 5\n        while i_sub1 <= cutoff:\n            if n % i_sub1 == 0:\n                n += i_sub1 + 2 * (k - 1)\n                break\n            elif n % i_add1 == 0:\n                n += i_add1 + 2 * (k - 1)\n                break\n            i += 1\n            i_sub1 = n6_sub1(i)\n            i_add1 = n6_add1(i)\n        else:\n            n += n + 2 * (k - 1)\n    return n\nfor _ in range(int(input())):\n    nk = input().split(' ')\n    (n, k) = (int(nk[0]), int(nk[1]))\n    print(factors(n, k))", "def is_prime(n):\n    if n == 1:\n        return False\n    i = 2\n    while i * i <= n:\n        if n % i == 0:\n            return 0\n        i += 1\n    return 1\ntry:\n    for _ in range(int(input())):\n        (n, k) = map(int, input().split())\n        tem = is_prime(n)\n        ans = 0\n        if tem:\n            ans = 2 * n + (k - 1) * 2\n        else:\n            for i in range(2, n // 2 + 1):\n                if n % i == 0:\n                    x = i\n                    break\n            ans = n + x + (k - 1) * 2\n        print(ans)\nexcept:\n    pass", "def func(n):\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    i = 5\n    while i * i <= n:\n        if n % i == 0:\n            return i\n        if n % (i + 2) == 0:\n            return i + 2\n        i = i + 6\n    return n\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    ld = func(n)\n    print(n + ld + (k - 1) * 2)", "import math\n\ndef orac_and_factor(n, k):\n    result = n\n    if n == 1:\n        return 1\n    start = 2\n    if n % 2 != 0:\n        start = 3\n    for i in range(start, math.ceil(math.sqrt(n)) + 1, 2):\n        if n % i == 0:\n            result += i\n            break\n    if result == n:\n        result += n\n        n = result\n    return result + 2 * (k - 1)\nn = int(input())\nfor i in range(n):\n    line1 = map(lambda x: int(x), input().strip().split())\n    print(orac_and_factor(*line1))", "from math import sqrt\n\ndef devisor(n):\n    for i in range(2, int(sqrt(n) + 1)):\n        if n % i == 0:\n            return i\n    return n\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        print(n + k * 2)\n    else:\n        deviso = devisor(n)\n        if k == 1:\n            print(n + deviso)\n        else:\n            while k:\n                k = k - 1\n                if (deviso + n) % 2 == 0:\n                    print(n + deviso + k * 2)\n                    break\n                else:\n                    deviso = devisor(n + deviso)", "from math import floor, sqrt\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        print(n + 2 * k)\n    else:\n        md = 0\n        for i in range(3, floor(sqrt(n)) + 1, 2):\n            if n % i == 0:\n                md = i\n                break\n        if md == 0:\n            md = n\n        if md == n:\n            print(2 * n + (k - 1) * 2)\n        else:\n            print(n + md + (k - 1) * 2)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef pat(n):\n    return n * (3 * n + 1) // 2\n\ndef f(n):\n    if n % 2 == 0:\n        return 2\n    i = 3\n    while i * i <= n:\n        if n % i == 0:\n            return i\n        i += 2\n    return n\n\ndef foo():\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        n += k * f(n)\n        print(n)\n    else:\n        n1 = n + f(n)\n        ans = n1 + (k - 1) * f(n1)\n        print(ans)\nt = inp()\nfor i in range(t):\n    foo()", "def sis(x):\n    d = x\n    for i in range(2, int(x ** 0.5) + 1):\n        if x % i == 0:\n            d = i\n            break\n    return d\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        ans = n + 2 * k\n    else:\n        new = sis(n)\n        ans = n + new + (k - 1) * 2\n    print(ans)", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a % 2 != 0:\n        b -= 1\n        for i in range(3, int(a ** (1 / 2)) + 1):\n            if a % i == 0:\n                a += i\n                break\n        else:\n            a += a\n    if a % 2 == 0:\n        a += b * 2\n    print(a)", "n1 = int(input())\nfor _ in range(0, n1):\n    l = list(map(int, input().split()))\n    n = l[0]\n    min = 0\n    t = 3\n    count = 0\n    while t * t <= n and n % t:\n        t = t + 2\n    if n % 2 == 0:\n        min = 2\n    elif t * t > n:\n        min = n\n    elif n % t == 0:\n        min = t\n    n = min + n\n    if n % 2 == 0:\n        print(n + (l[1] - 1) * 2)\n    else:\n        print(n + (l[1] - 1) * 2)", "import math\nt = int(input())\nfor tc in range(t):\n    l = []\n    (a, b) = map(int, input().strip().split())\n    for i in range(1, int(math.sqrt(a)) + 1):\n        if a % i == 0:\n            l.append(i)\n            l.append(a // i)\n    l.remove(1)\n    if len(l) == 2:\n        print(2 * a + 2 * (b - 1))\n    elif a % 2 == 0:\n        print(a + 2 * b)\n    elif b == 0:\n        print(a)\n    else:\n        print(a + min(l) + 2 * (b - 1))", "for _ in [0] * int(input()):\n    (n, k) = map(int, input().split())\n    x = 2\n    while x * x <= n:\n        if n % x == 0:\n            break\n        x += 1\n    if n % x:\n        x = n\n    print((k - 1) * 2 + n + x)", "import math\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        print(n + 2 * k)\n    else:\n        s = 0\n        is_p = True\n        for i in range(3, int(math.sqrt(n)) + 1):\n            if n % i == 0:\n                s = i\n                is_p = False\n                break\n        if is_p:\n            print(2 * n + 2 * (k - 1))\n        else:\n            s = n + s\n            print(s + 2 * (k - 1))", "def smallestDivisor(n):\n    if n % 2 == 0:\n        return 2\n    i = 3\n    while i * i <= n:\n        if n % i == 0:\n            return i\n        i += 2\n    return n\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    sum = smallestDivisor(n) + n + k * 2 - 2\n    print(sum)", "import math\nt = int(input())\nfor _ in range(t):\n    (n, q) = map(int, input().split())\n    if n == 2:\n        i = 2\n    for i in range(2, int(math.sqrt(n)) + 2):\n        if n % i == 0:\n            break\n    if n % i != 0:\n        i = n\n    print(n + i + (q - 1) * 2)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ans = n\n    i = 2\n    while i * i <= n:\n        if n % i == 0:\n            ans = i\n            break\n        i += 1\n    ans = n + ans + 2 * (k - 1)\n    print(ans)", "def isPrime(n):\n    for i in range(3, int(n ** 0.5) + 1, 2):\n        if n % i == 0:\n            l = [False, i]\n            return l\n    l = [True, n]\n    return l\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        print(n + k * 2)\n    else:\n        ans = isPrime(n)\n        if ans[0] == True:\n            print(n * 2 + (k - 1) * 2)\n        else:\n            print(n + ans[1] + (k - 1) * 2)", "import math\n\ndef least(a):\n    if a & 1 == 0:\n        return 2\n    else:\n        for i in range(3, int(math.sqrt(a)) + 1, 2):\n            if a % i == 0:\n                return i\n        return a\nt = int(input())\nfor _ in range(t):\n    (a, k) = map(int, input().split())\n    a += least(a) + 2 * (k - 1)\n    print(a)", "def d(n):\n    i = 3\n    while i * i <= n:\n        if n % i == 0:\n            return i\n        i += 2\n    return n\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        print(n + k * 2)\n    else:\n        print(n + d(n) + (k - 1) * 2)", "import math\n\ndef is_prime(n):\n    if n <= 1:\n        return 0\n    for i in range(2, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            return i\n    return n\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2 == 1:\n        val = is_prime(n)\n        if val > 0:\n            n += val\n        else:\n            n += 3\n        k -= 1\n    n += 2 * k\n    print(n)", "import math\n\ndef f(n):\n    flag = 0\n    for i in range(2, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            return i\n    return n\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        print(n + 2 * k)\n    else:\n        print(n + 2 * (k - 1) + f(n))", "def smalldiv(n):\n    i = 2\n    while i <= n ** 0.5:\n        if n % i == 0:\n            return i\n        i += 1\n    return n\nt = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        print(n + 2 * k)\n    else:\n        print(n + smalldiv(n) + (k - 1) * 2)\n    t -= 1", "def sieve(n, prime):\n    visit = [False] * (n + 1)\n    for x in range(2, n + 1):\n        if visit[x] == False:\n            prime.append(x)\n            j = x + x\n            while j <= n:\n                visit[j] = True\n                j = j + x\nt = int(input())\ni = 0\nprime = []\nimport math\nsieve(math.ceil(math.sqrt(10 ** 6)), prime)\nwhile i < t:\n    (n, k) = map(int, input().split())\n    j = 0\n    if n % 2 == 0:\n        print(n + 2 * k)\n    else:\n        ans = 0\n        a = False\n        for x in prime:\n            if n % x == 0:\n                a = True\n                ans = x\n                break\n        if a == True:\n            print(n + ans + 2 * (k - 1))\n        else:\n            print(n + n + 2 * (k - 1))\n    i = i + 1", "def smallestDiv(n):\n    if n % 2 == 0:\n        return 2\n    i = 3\n    while i * i <= n:\n        if n % i == 0:\n            return i\n        i += 2\n    return n\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        n += 2 * k\n    else:\n        n += smallestDiv(n)\n        n += 2 * (k - 1)\n    print(n)", "def isprime(num):\n    if num <= 1:\n        return False\n    if num <= 3:\n        return True\n    if num % 2 == 0 or num % 3 == 0:\n        return False\n    i = 5\n    while i * i <= n:\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n        i += 6\n    return True\n\ndef least_factor(num):\n    if isprime(num):\n        return num\n    else:\n        factor = 0\n        for i in range(2, num + 1):\n            if num % i == 0:\n                factor = i\n                break\n        return factor\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        print(n + 2 * k)\n        continue\n    else:\n        least = least_factor(n)\n        print(n + least + 2 * (k - 1))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    i = 2\n    f = 0\n    while i * i <= n:\n        if n % i == 0:\n            f = 1\n            break\n        i += 1\n    if f:\n        print(n + i + 2 * (k - 1))\n    else:\n        print(n + n + 2 * (k - 1))", "import math\n\ndef get_smallest_divisor(n):\n    if n <= 3:\n        return n\n    sqrt = int(math.sqrt(n))\n    for i in range(2, sqrt + 1):\n        if n % i == 0:\n            return i\n    return n\nn_t = int(input())\nfor i in range(n_t):\n    (n, k) = [int(x) for x in input().split()]\n    if n % 2 == 0:\n        print(f'{n + 2 * k}')\n    else:\n        sd = get_smallest_divisor(n)\n        print(n + sd + 2 * (k - 1))", "def f(n):\n    for x in range(2, int(n ** 0.5 + 1)):\n        if n % x == 0:\n            return x\n    return n\n\ndef sol(n, k):\n    v = f(n) + n\n    return print(v + (k - 1) * 2)\nt = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    sol(n, k)", "import math\n\ndef prime(n):\n    if n % 2 == 0:\n        return False\n    i = 3\n    while i <= math.sqrt(n):\n        if n % i == 0:\n            return False\n        i += 1\n    return True\ntest = int(input())\nwhile test > 0:\n    (n, k) = [int(x) for x in input().split()]\n    if n % 2 == 0:\n        print(n + 2 * k)\n    else:\n        if prime(n) is True:\n            n = n + n\n        else:\n            i = 2\n            while i <= math.sqrt(n):\n                if n % i == 0:\n                    n = n + i\n                    break\n                i += 1\n        print(n + 2 * (k - 1))\n    test = test - 1", "import math\ntestCases = int(input())\nfor _ in range(testCases):\n    (n, k) = map(int, input().split())\n    check = math.ceil(math.sqrt(n))\n    while k > 0:\n        function = n\n        for value in range(2, check + 1):\n            if n % value == 0:\n                function = value\n                break\n        if function == 2:\n            n += 2 * k\n            break\n        n = n + function\n        k -= 1\n    print(n)", "import math\n\ndef factor(n):\n    for i in range(2, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            return i\n    return n\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(n + factor(n) + (k - 1) * 2)", "from math import sqrt\n\ndef ri():\n    return int(input())\n\ndef ria():\n    return list(map(int, input().split()))\n\ndef f(n):\n    if n % 2 == 0:\n        return 2\n    d = 3\n    sqr = int(sqrt(n))\n    while d <= sqr and n % d != 0:\n        d += 2\n    if n % d == 0:\n        return d\n    return n\n\ndef main():\n    for _ in range(ri()):\n        (n, k) = ria()\n        print(n + f(n) + 2 * (k - 1))\nmain()", "import math\n\ndef f(n):\n    if n % 2 == 0:\n        return n + 2\n    i = 3\n    m = math.sqrt(n)\n    m = int(m)\n    while i <= m:\n        if n % i == 0:\n            return n + i\n        i += 2\n    return 2 * n\nt = int(input())\nfor i in range(t):\n    nk = list(map(int, input().strip().split()))\n    n = nk[0]\n    k = nk[1]\n    n = f(n)\n    k -= 1\n    if k != 0:\n        n = n + 2 * k\n    print(n)", "t = int(input())\n\ndef smallestDivisor(n):\n    if n % 2 == 0:\n        return 2\n    i = 3\n    while i * i <= n:\n        if n % i == 0:\n            return i\n        i += 2\n    return n\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    for i in range(k):\n        if smallestDivisor(n) == 2:\n            n = n + (k - i) * 2\n            break\n        else:\n            n = n + smallestDivisor(n)\n    print(n)", "for i in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    if n % 2 == 0:\n        print(n + 2 * k)\n        continue\n    s = int(n ** 0.5)\n    j = 0\n    for i in range(2, s + 1):\n        if n % i == 0:\n            j = i\n            break\n    if j != 0:\n        print(n + j + (k - 1) * 2)\n    else:\n        print(n + n + 2 * (k - 1))", "def solve(n, k):\n    if n % 2 == 0:\n        return n + k * 2\n    for i in range(3, 3000):\n        if n % i == 0:\n            fn = i\n            break\n    else:\n        fn = n\n    return n + (k - 1) * 2 + fn\nstrr = input()\nfor _ in range(int(strr)):\n    strr = input()\n    (n, k) = [int(x) for x in strr.split()]\n    print(solve(n, k))", "from math import sqrt\na = int(input())\nfor _ in range(a):\n    (b, c) = map(int, input().split())\n    i = 2\n    while i <= sqrt(b + 1):\n        if b % i == 0:\n            b = b + i\n            break\n        i += 1\n    if i > sqrt(b + 1):\n        b += b\n    print(b + (c - 1) * 2)", "def smallestdivisor(n):\n    i = 3\n    while i ** 2 <= n:\n        if n % i == 0:\n            return i\n        i += 2\n    return n\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    jj = 0\n    if n % 2 != 0:\n        jj += smallestdivisor(n)\n        k -= 1\n        n += jj\n    n += 2 * k\n    print(n)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    n1 = n\n    if n % 2 != 0:\n        j = 3\n        while j * j <= n1:\n            if n1 % j == 0:\n                n1 = n1 + j\n                k = k - 1\n                break\n            j = j + 2\n        if n1 == n:\n            n1 = n1 + n1\n            k = k - 1\n    print(n1 + 2 * k)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        print(n + k * 2)\n    else:\n        t = 0\n        for i in range(3, int(n ** 0.5) + 1, 2):\n            if n % i == 0:\n                t = 1\n                break\n        print(n + i + (k - 1) * 2 if t else 2 * n + (k - 1) * 2)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        ans = n + k * 2\n    else:\n        val = pow(n, 0.5)\n        f = 0\n        val = int(val)\n        for i in range(2, val + 1):\n            if n % i == 0:\n                k -= 1\n                n += i\n                f = 1\n                break\n        if f:\n            ans = n + k * 2\n        else:\n            k -= 1\n            ans = 2 * n\n            ans += k * 2\n    print(ans)"]