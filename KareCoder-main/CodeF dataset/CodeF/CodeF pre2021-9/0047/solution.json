["for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((len(bin(-1 - y // -x)) - 3 for (x, y) in map(sorted, zip(a, a[1:])))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((len(bin(-1 - y // -x)) - 3 for (x, y) in map(sorted, zip(a, a[1:])))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((len(bin(-1 - y // -x)) - 3 for (x, y) in map(sorted, zip(a, a[1:])))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((len(bin(-1 - y // -x)) - 3 for (x, y) in map(sorted, zip(a, a[1:])))))", "import sys\ninput = sys.stdin.readline\noutput = sys.stdout.write\n\ndef main():\n    tests = int(input().rstrip())\n    for i in range(tests):\n        length_ = int(input().rstrip())\n        nums_ = list(map(int, input().rstrip().split()))\n        needed = 0\n        for j in range(length_ - 1):\n            a = nums_[j]\n            b = nums_[j + 1]\n            if a > b:\n                max_ = a\n                min_ = b\n            elif b > a:\n                max_ = b\n                min_ = a\n            else:\n                continue\n            state = True\n            temp = max_ / min_\n            while state:\n                if temp > 2:\n                    needed += 1\n                    temp /= 2\n                else:\n                    state = False\n        output(str(needed))\n        output('\\n')\nmain()", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    p = None\n    r = 0\n    for i in map(int, input().split()):\n        if p is not None:\n            if i >= p:\n                while p * 2 < i:\n                    p *= 2\n                    r += 1\n            else:\n                x = i\n                while x * 2 < p:\n                    x *= 2\n                    r += 1\n        p = i\n    print(r)\nfor i in range(int(input())):\n    solve()", "import math\n\ndef solve(a):\n    x = 0\n    for (n1, n2) in zip(a, a[1:]):\n        if n1 > n2:\n            (n1, n2) = (n2, n1)\n        while True:\n            n1 *= 2\n            if n1 >= n2:\n                break\n            x += 1\n    return x\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(a))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((len(bin(-1 - y // -x)) - 3 for (x, y) in map(sorted, zip(a, a[1:])))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((len(bin(-1 - y // -x)) - 3 for (x, y) in map(sorted, zip(a, a[1:])))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((len(bin(-1 - y // -x)) - 3 for (x, y) in map(sorted, zip(a, a[1:])))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((len(bin(-1 - y // -x)) - 3 for (x, y) in map(sorted, zip(a, a[1:])))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((len(bin(-1 - y // -x)) - 3 for (x, y) in map(sorted, zip(a, a[1:])))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((len(bin(-1 - y // -x)) - 3 for (x, y) in map(sorted, zip(a, a[1:])))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((len(bin(-1 - y // -x)) - 3 for (x, y) in map(sorted, zip(a, a[1:])))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((len(bin(-1 - y // -x)) - 3 for (x, y) in map(sorted, zip(a, a[1:])))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((len(bin(-1 - y // -x)) - 3 for (x, y) in map(sorted, zip(a, a[1:])))))", "def read_input(filename: str=None) -> None:\n    from sys import stdin\n    stdin = open(filename) if filename else stdin\n    cases = int(stdin.readline())\n    while cases:\n        cases = cases - 1\n        _ = stdin.readline()\n        (index, counter, values) = (0, 0, list(map(int, stdin.readline().split())))\n        while index < len(values) - 1:\n            (value_a, value_b) = (values[index], values[index + 1])\n            if value_a > value_b:\n                (value_a, value_b) = (value_b, value_a)\n            while value_a * 2 < value_b:\n                (value_a, counter) = (value_a * 2, counter + 1)\n            index = index + 1\n        print(counter)\n\ndef main():\n    read_input()\nmain()", "def solve():\n    array_size = int(input())\n    elems = list(map(int, input().split()))\n    i = 0\n    count = 0\n    for elem in elems[:-1]:\n        a = elem\n        b = elems[i + 1]\n        if b < a:\n            (a, b) = (b, a)\n        while b > 2 * a:\n            a *= 2\n            count += 1\n        i += 1\n    print(count)\n\ndef main():\n    for case in range(int(input())):\n        solve()\nmain()", "import math\n\ndef solve(a):\n    x = 0\n    for (n1, n2) in zip(a, a[1:]):\n        if n1 > n2:\n            (n1, n2) = (n2, n1)\n        while True:\n            n1 *= 2\n            if n1 >= n2:\n                break\n            x += 1\n    return x\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(a))", "def solve():\n    n = int(input())\n    A = list(map(int, input().split(' ')))\n    ans = 0\n    for i in range(n - 1):\n        (u, v) = (A[i], A[i + 1])\n        if u > v:\n            (u, v) = (v, u)\n        while 2 * u < v:\n            u *= 2\n            ans += 1\n    print(ans)\nt = int(input())\nfor _ in range(t):\n    solve()", "def count(a, b):\n    c = 0\n    while a * 2 < b:\n        a *= 2\n        c += 1\n    while b * 2 < a:\n        b *= 2\n        c += 1\n    return c\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(len(a) - 1):\n        ans += count(a[i], a[i + 1])\n    print(ans)", "def f(t):\n    (x, y, cnt) = (min(t), max(t), 0)\n    while x * 2 < y:\n        x *= 2\n        cnt += 1\n    return cnt\nout = []\nfor _ in range(int(input())):\n    input()\n    a = list(map(int, input().split()))\n    out.append(str(sum(map(f, zip(a, a[1:])))))\nprint(*out, sep='\\n')", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((len(bin(-1 - y // -x)) - 3 for (x, y) in map(sorted, zip(a, a[1:])))))", "def f(p):\n    (a, b) = sorted(p)\n    result = 0\n    while 2 * a < b:\n        a *= 2\n        result += 1\n    return result\nfor _ in range(int(input())):\n    n = int(input())\n    data = list(map(int, input().split()))\n    print(sum(map(f, zip(data, data[1:]))))", "def cf_702A(numbers: list):\n    answer = 0\n    for i in range(len(numbers) - 1):\n        (b, a) = sorted([numbers[i], numbers[i + 1]])\n        if not a > 2 * b:\n            continue\n        while 2 * b < a:\n            b *= 2\n            answer += 1\n    return answer\nfor _ in range(int(input())):\n    n = int(input())\n    print(cf_702A(list(map(int, input().split()))))", "def Densar(Min, Max):\n    Cont = 0\n    while Max > Min:\n        Min = Min * 2\n        Cont = Cont + 1\n    return Cont - 1\nTest = int(input())\nfor T in range(Test):\n    N = int(input())\n    L = list(map(int, input().split()))\n    Suma = 0\n    for K in range(N - 1):\n        if L[K] > L[K + 1]:\n            Max = L[K]\n            Min = L[K + 1]\n        else:\n            Max = L[K + 1]\n            Min = L[K]\n        if Max / Min > 2:\n            Cont = Densar(Min, Max)\n            Suma = Suma + Cont\n    print(Suma)", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(1, n):\n        big = max(a[i], a[i - 1])\n        small = min(a[i], a[i - 1])\n        if big <= small * 2:\n            continue\n        else:\n            while small * 2 < big:\n                small *= 2\n                count += 1\n    print(count)\nt = int(input())\nfor i in range(t):\n    solve()", "for _ in range(int(input())):\n    (n, arr, num) = (int(input()), list(map(int, input().split())), 0)\n    for i in range(n - 1):\n        num += len(bin(-1 - max(arr[i], arr[i + 1]) // -min(arr[i], arr[i + 1]))) - 3\n    print(num)", "out = ''\nfor _ in range(int(input())):\n    (n, arr, num) = (int(input()), list(map(int, input().split())), 0)\n    for i in range(n - 1):\n        num += len(bin(-1 - max(arr[i], arr[i + 1]) // -min(arr[i], arr[i + 1]))) - 3\n    out = out + str(num) + '\\n'\nprint(out)", "def solve(A, n):\n    nums = 0\n    for i in range(n - 1):\n        h = max(A[i], A[i + 1])\n        l = min(A[i], A[i + 1])\n        r = h / l\n        if r <= 2:\n            continue\n        else:\n            l *= 2\n            while l < h:\n                l *= 2\n                nums += 1\n    return nums\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    A = list(map(int, input().split(' ')))\n    ans = solve(A, n)\n    print(ans)", "from math import inf\nfrom collections import *\nimport math, os, sys, heapq, bisect, random, threading\nfrom functools import lru_cache, reduce\nfrom itertools import *\nimport sys\n\ndef inp():\n    return sys.stdin.readline().rstrip('\\r\\n')\n\ndef out(var):\n    sys.stdout.write(str(var))\n\ndef inpu():\n    return int(inp())\n\ndef lis():\n    return list(map(int, inp().split()))\n\ndef stringlis():\n    return list(map(str, inp().split()))\n\ndef sep():\n    return map(int, inp().split())\n\ndef strsep():\n    return map(str, inp().split())\n\ndef fsep():\n    return map(float, inp().split())\n(M, M1) = (1000000007, 998244353)\n\ndef main():\n    t = inpu()\n    for _ in range(t):\n        n = inpu()\n        a = lis()\n        res = 0\n        for i in range(len(a) - 1):\n            x = max(a[i], a[i + 1])\n            y = min(a[i], a[i + 1])\n            if x / y > 2:\n                while x / y > 2:\n                    y *= 2\n                    res += 1\n        print(res)\nmain()", "import sys\nN = int(200000.0 + 5)\nsys.setrecursionlimit(N)\n\ndef charming():\n    n = int(input())\n    a = list(map(int, input().split()))\n    res = 0\n    for i in range(n - 1):\n        if 2 * a[i] < a[i + 1]:\n            tmp = a[i]\n            while 2 * tmp < a[i + 1]:\n                res += 1\n                tmp *= 2\n        if a[i] > 2 * a[i + 1]:\n            tmp = a[i]\n            while tmp > 2 * a[i + 1]:\n                res += 1\n                tmp = (tmp - 1) // 2 + 1\n    print(res)\nfor t in range(int(input())):\n    charming()", "def f(n, arr):\n    ans = 0\n    for i in range(n - 1):\n        if arr[i] > arr[i + 1] and arr[i + 1] * 2 < arr[i]:\n            k = arr[i + 1]\n            while k * 2 < arr[i]:\n                k *= 2\n                ans += 1\n        elif arr[i + 1] > arr[i] and arr[i] * 2 < arr[i + 1]:\n            k = arr[i]\n            while k * 2 < arr[i + 1]:\n                k *= 2\n                ans += 1\n    return ans\nfor _ in range(int(input())):\n    nn = int(input())\n    v = [int(x) for x in input().split()]\n    print(f(nn, v))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = input().split(' ')\n    for j in range(n):\n        l[j] = int(l[j])\n    p = 0\n    for j in range(n - 1):\n        if l[j] > l[j + 1]:\n            a = l[j]\n            b = l[j + 1]\n        else:\n            a = l[j + 1]\n            b = l[j]\n        if a % b == 0:\n            a = a // b\n            if a > 2:\n                if a > 4:\n                    if a > 8:\n                        if a > 16:\n                            if a > 32:\n                                p += 5\n                            else:\n                                p += 4\n                        else:\n                            p += 3\n                    else:\n                        p += 2\n                else:\n                    p += 1\n        else:\n            a = a // b\n            if a >= 2:\n                if a >= 4:\n                    if a >= 8:\n                        if a >= 16:\n                            if a >= 32:\n                                p += 5\n                            else:\n                                p += 4\n                        else:\n                            p += 3\n                    else:\n                        p += 2\n                else:\n                    p += 1\n    print(p)", "import sys\nfrom itertools import *\nfrom math import *\nfrom sys import stdin, stdout\n\ndef ans(n, lst):\n    (left, right) = (0, len(lst) - 1)\n    c = 0\n    while left < right:\n        maximum = max(lst[left], lst[left + 1])\n        minimum = min(lst[left], lst[left + 1])\n        while maximum > minimum * 2:\n            c += 1\n            minimum *= 2\n        left += 1\n    print(c)\nfor i in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    lst = list(map(int, stdin.readline().split()))\n    ans(n, lst)", "def number(a, b):\n    max_ = max(a, b)\n    min_ = min(a, b)\n    p = 0\n    curr = min_\n    while max_ > 2 * curr:\n        p += 1\n        curr *= 2\n    return p\nfor i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    out = 0\n    for i in range(n - 1):\n        a = arr[i]\n        b = arr[i + 1]\n        out += number(a, b)\n    print(out)", "def solve(arr):\n    s = 0\n    for i in range(len(arr) - 1):\n        (a, b) = (arr[i], arr[i + 1])\n        if a > b:\n            (a, b) = (b, a)\n        if a == b:\n            s += 1\n        while a < b:\n            a *= 2\n            s += 1\n        s -= 1\n    return s\nt = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    ans.append(solve(arr))\nfor i in ans:\n    print(i)", "from sys import stdin\ninput = iter(stdin.read().split())\nscanInt = lambda : int(next(input))\n\ndef mu2(a, b):\n    if a > b:\n        (a, b) = (b, a)\n    (c, a) = (0, a << 1)\n    while a < b:\n        (c, a) = (c + 1, a << 1)\n    return c\nfor t in range(scanInt()):\n    (n, s) = (scanInt(), 0)\n    prv = scanInt()\n    for _ in range(n - 1):\n        cur = scanInt()\n        s += mu2(prv, cur)\n        prv = cur\n    print(s)", "def main():\n    for _ in range(int(input())):\n        input()\n        it = map(float, input().split())\n        (a, r) = (next(it), 0)\n        for b in it:\n            while a * 2.0 < b:\n                a *= 2.0\n                r += 1\n            while a * 0.5 > b:\n                a *= 0.5\n                r += 1\n            a = b\n        print(r)\nmain()", "def f(t):\n    (x, y, cnt) = (min(t), max(t), 0)\n    while x * 2 < y:\n        x *= 2\n        cnt += 1\n    return cnt\nout = ''\nfor _ in range(int(input())):\n    input()\n    a = list(map(int, input().split()))\n    out += str(sum(map(f, zip(a, a[1:]))))\n    out += '\\n'\nprint(out)", "def ass(a, b):\n    if a != b:\n        print(f'Assertion error:\\n{a}\\n{b}')\n\ndef intline():\n    return [int(item) for item in input().split()]\n\ndef line():\n    return [item for item in input().split()]\n\ndef dump(lst):\n    for (i, item) in enumerate(lst):\n        print(i, item)\n\ndef binsearch(arr, a, b):\n    m = (a + b) // 2\n    if a >= b:\n        return a - 1 if arr[a] == 0 else a\n    return binsearch(arr, a, m - 1) if arr[m] == 0 else binsearch(arr, m + 1, b)\n\ndef f(nrs):\n    res = 0\n    for i in range(1, len(nrs)):\n        a = nrs[i - 1]\n        b = nrs[i]\n        if a > b:\n            (a, b) = (b, a)\n        kvot = b / a\n        while kvot > 2:\n            res += 1\n            kvot /= 2\n    return res\nt = intline()[0]\nfor i in range(t):\n    n = intline()[0]\n    arr = intline()\n    print(f(arr))", "def solve(n, a):\n    count = 0\n    for i in range(n - 1):\n        xmax = max(a[i], a[i + 1])\n        xmin = min(a[i], a[i + 1])\n        while 2 * xmin < xmax:\n            xmin *= 2\n            count += 1\n    return count\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(n, a))", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    cnt = 0\n    for i in range(n - 1):\n        d = max(a[i + 1], a[i]) / min(a[i + 1], a[i])\n        if d > 2:\n            cnt += math.ceil(math.log(d, 2)) - 1\n    print(cnt)", "from math import ceil, log2\nfor t in range(int(input())):\n    array_len = int(input())\n    array = list(map(int, input().split()))\n    numbers_to_insert = 0\n    for i in range(1, array_len):\n        ratio = max(array[i - 1], array[i]) / min(array[i - 1], array[i])\n        if ratio > 2:\n            numbers_to_insert += ceil(log2(ratio)) - 1\n    print(numbers_to_insert)", "tests = int(input())\nc = [2 ** i for i in range(1, 8)]\nfor _ in range(tests):\n    m = int(input())\n    n = list(map(int, input().split()))\n    res = 0\n    for i in range(1, m):\n        (x, y) = (n[i - 1], n[i])\n        if x == y or y < x <= 2 * y or x < y <= 2 * x:\n            continue\n        if x > 2 * y:\n            t = x // y + (1 if x % y else 0)\n        else:\n            t = y // x + (1 if y % x else 0)\n        for cc in c:\n            if cc < t:\n                res += 1\n            else:\n                break\n    print(res)", "def steps_to_dense(a, n):\n    k = 0\n    for i in range(1, n):\n        mx = max(a[i - 1], a[i])\n        mn = min(a[i - 1], a[i])\n        while 2 * mn < mx:\n            mn = 2 * mn\n            k += 1\n    return k\nt = int(input())\nfor it in range(t):\n    n = int(input())\n    a = [int(tmp) for tmp in input().split()]\n    print(steps_to_dense(a, n))", "import math\nt = int(input())\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 1):\n        x = min(arr[i], arr[i + 1])\n        y = max(arr[i], arr[i + 1])\n        while y > 2 * x:\n            x *= 2\n            ans += 1\n    print(ans)\nwhile t:\n    solve()\n    t -= 1", "def solve(A, n):\n    nums = 0\n    for i in range(n - 1):\n        h = max(A[i], A[i + 1])\n        l = min(A[i], A[i + 1])\n        r = h / l\n        if r <= 2:\n            continue\n        else:\n            while l * 2 < h:\n                l *= 2\n                nums += 1\n    return nums\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    A = list(map(int, input().split(' ')))\n    ans = solve(A, n)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    r = 0\n    for i in range(len(arr) - 1):\n        (x, y) = (arr[i], arr[i + 1])\n        if x > y:\n            (x, y) = (y, x)\n        while 2 * x < y:\n            x *= 2\n            r += 1\n    print(r)", "import sys\n\ndef solve(n, a):\n    res = 0\n    for i in range(1, n):\n        max_ = max(a[i], a[i - 1])\n        min_ = min(a[i], a[i - 1])\n        while max_ > 2 * min_:\n            res += 1\n            min_ *= 2\n    return res\n\ndef main():\n    res = ''\n    input = sys.stdin.readline\n    print = sys.stdout.write\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        res += str(solve(n, a)) + '\\n'\n    print(res)\nmain()", "def func(x, y):\n    if x > y:\n        a = y\n        y = x\n        x = a\n    cnt = 0\n    while 2 * x < y:\n        x *= 2\n        cnt += 1\n    return cnt\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    x = input()\n    lst = x.split()\n    ans = 0\n    for j in range(n - 1):\n        y = func(int(lst[j]), int(lst[j + 1]))\n        ans += y\n    print(ans)", "def doit():\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 1):\n        t = (max(a[i + 1], a[i]) - 1) // min(a[i + 1], a[i]) + 1\n        ans += len(bin(t - 1)) - 2 - 1\n    print(ans)\nT = int(input())\nfor _ in range(T):\n    doit()", "def dense_array():\n    t = int(input())\n    for test in range(t):\n        len_arr = int(input())\n        n = input().split(' ')\n        arr = []\n        for inp in n:\n            inp = int(inp)\n            arr.append(inp)\n        count = 0\n        for i in range(len(arr) - 1):\n            max_adj = max(arr[i], arr[i + 1])\n            min_adj = min(arr[i], arr[i + 1])\n            while min_adj * 2 < max_adj:\n                min_adj = min_adj * 2\n                count += 1\n        print(count)\ndense_array()", "def f(t):\n    (x, y, cnt) = (min(t), max(t), 0)\n    while x * 2 < y:\n        x *= 2\n        cnt += 1\n    return cnt\nout = ''\nfor _ in range(int(input())):\n    input()\n    a = list(map(int, input().split()))\n    out += str(sum(map(f, zip(a, a[1:])))) + '\\n'\nprint(out)", "def main():\n    import sys\n    input = sys.stdin.readline\n    for _ in range(int(input())):\n        n = int(input())\n        l = list(map(int, input().split()))\n        e1 = l[0]\n        s = 0\n        for i in range(1, n):\n            a = max(e1, l[i])\n            b = min(e1, l[i])\n            while a > 2 * b:\n                s += 1\n                b *= 2\n            e1 = l[i]\n        print(s)\nmain()", "import sys\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\nf_inf = float('inf')\nmod = 10 ** 9 + 7\n\ndef solve():\n    n = int(input())\n    A = list(map(int, input().split()))\n    res = 0\n    for i in range(n - 1):\n        ma = max(A[i], A[i + 1])\n        mi = min(A[i], A[i + 1])\n        if ma <= 2 * mi:\n            continue\n        while mi * 2 < ma:\n            mi *= 2\n            res += 1\n    print(res)\n\ndef resolve():\n    t = int(input())\n    for _ in range(t):\n        solve()\nresolve()", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    ret = 0\n    a = list(map(int, input().split()))\n    for i in range(n - 1):\n        temp = math.ceil(math.log2(max(a[i + 1] / a[i], a[i] / a[i + 1]))) - 1\n        ret = ret + max(0, temp)\n    print(ret)", "t = int(input())\nfor i in range(t):\n    ans = 0\n    n = int(input())\n    l = list(map(int, input().split()))\n    for j in range(len(l) - 1):\n        u = l[j]\n        v = l[j + 1]\n        if u > v:\n            u = l[j + 1]\n            v = l[j]\n        while 2 * u < v:\n            ans += 1\n            u *= 2\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    m = list(map(int, input().split()))\n    ans = 0\n    for i in range(1, n):\n        a = m[i]\n        b = m[i - 1]\n        if a > b:\n            (a, b) = (b, a)\n        if a * 2 < b:\n            while 2 * a < b:\n                a *= 2\n                ans += 1\n    print(ans)", "def dense_array(list):\n    count = 0\n    for x in range(len(list) - 1):\n        minimo = min(list[x], list[x + 1])\n        maximo = max(list[x], list[x + 1])\n        while maximo / minimo > 2:\n            minimo = minimo * 2\n            count += 1\n    return count\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    lista = [int(x) for x in input().split()]\n    print(dense_array(lista))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    r = 0\n    for (x, y) in map(sorted, zip(a, a[1:])):\n        while x * 2 < y:\n            x *= 2\n            r += 1\n    print(r)", "a = int(input())\nfor i in range(a):\n    i = 0\n    s = int(input())\n    lis = list(map(int, input().split()))\n    for h in range(s - 1):\n        p = max(lis[h], lis[h + 1]) / min(lis[h], lis[h + 1])\n        while p > 2:\n            p = p / 2\n            i += 1\n    print(i)", "import sys\nit = iter(sys.stdin.read().splitlines())\nt = int(next(it))\nwhile t:\n    n = int(next(it))\n    m = [int(x) for x in next(it).split()]\n    start = m[0]\n    to_add = 0\n    for i in range(1, n):\n        number = m[i]\n        a = number if number < start else start\n        b = number if number > start else start\n        while 2 * a < b:\n            a *= 2\n            to_add += 1\n        start = number\n    print(to_add)\n    t -= 1", "def solve(n, xs):\n    additions = 0\n    for (i, x) in enumerate(xs[:-1]):\n        y = xs[i + 1]\n        (smaller, bigger) = (min(x, y), max(x, y))\n        while 2 * smaller < bigger:\n            smaller *= 2\n            additions += 1\n    return additions\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        xs = [int(x) for x in input().split()]\n        ans = solve(n, xs)\n        print(ans)\nmain()", "def denseArr(n, arr):\n    count = 0\n    for i in range(0, n - 1):\n        minimum = min(arr[i], arr[i + 1])\n        maximum = max(arr[i], arr[i + 1])\n        while maximum > 2 * minimum:\n            count += 1\n            minimum *= 2\n    print(count)\n    return\ntc = int(input())\nfor _ in range(0, tc):\n    n = int(input())\n    arr = [int(i) for i in input().split()][:n]\n    denseArr(n, arr)", "def check(a, b):\n    c = 0\n    if a > b:\n        while b * 2 < a:\n            b = b * 2\n            c += 1\n    else:\n        while a * 2 < b:\n            a = a * 2\n            c += 1\n    return c\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    res = 0\n    for i in range(n - 1):\n        p = check(l[i], l[i + 1])\n        res += p\n    print(res)", "for _ in range(int(input())):\n    input()\n    a = [*map(int, input().split())]\n    c = 0\n    for i in range(len(a) - 1):\n        (x, y) = (a[i], a[i + 1])\n        if x > y:\n            (x, y) = (y, x)\n        while 2 * x < y:\n            x *= 2\n            c += 1\n    print(c)", "from math import sqrt\nimport operator\nimport sys\ninf = sys.stdin\ninput = inf.readline\n\ndef read_one_int():\n    return int(input().rstrip('\\n'))\n\ndef read_list_of_ints():\n    res = [int(val) for val in input().rstrip('\\n').split(' ')]\n    return res\n\ndef read_str():\n    return input().rstrip()\n\ndef check_seq(a_list):\n    res = 0\n    r = a_list[0]\n    for i in range(1, len(a_list)):\n        l = r\n        r = a_list[i]\n        max_el = max(l, r)\n        min_el = min(l, r)\n        if max_el / min_el <= 2.0:\n            continue\n        while max_el / min_el > 2.0:\n            if max_el % 2 == 1:\n                max_el = max_el // 2 + 1\n            else:\n                max_el = max_el // 2\n            res += 1\n    return res\n\ndef main():\n    cnt = read_one_int()\n    for _ in range(cnt):\n        n = read_one_int()\n        a_list = read_list_of_ints()\n        res = check_seq(a_list)\n        print(res)\nmain()", "def suspision(n, arr):\n    count = 0\n    prev = arr[0]\n    for i in range(len(arr)):\n        if arr[i] / prev <= 2 and prev / arr[i] <= 2:\n            prev = arr[i]\n        elif arr[i] / prev >= 2:\n            temp = 2 * prev\n            while temp < arr[i]:\n                temp *= 2\n                count += 1\n            prev = arr[i]\n        elif prev / arr[i] >= 2:\n            temp = 2 * arr[i]\n            while temp < prev:\n                temp *= 2\n                count += 1\n            prev = arr[i]\n    return count\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    result = suspision(n, arr)\n    print(result)", "import math\n\ndef solve(n, arr):\n    arr = list(arr)\n    elems_needed = 0\n    for i in range(0, n - 1):\n        pair_max = max(arr[i], arr[i + 1])\n        pair_min = min(arr[i], arr[i + 1])\n        while 2 * pair_min < pair_max:\n            pair_min *= 2\n            elems_needed += 1\n    return elems_needed\nt = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    arr = map(int, input().split(' '))\n    print(solve(n, arr))", "from math import ceil, log2\nt = int(input())\nfor _ in range(t):\n    res = 0\n    n = int(input())\n    li = list(map(int, input().split(' ')))\n    for i in range(len(li) - 1):\n        x1 = max([li[i], li[i + 1]])\n        x2 = min([li[i], li[i + 1]])\n        if x1 / x2 <= 2:\n            continue\n        else:\n            res += ceil(log2(x1 / x2)) - 1\n    print(res)", "from math import log\n\ndef getinbetween(a, b):\n    if a == b:\n        return 0\n    big = max(a, b) - 1\n    small = min(a, b)\n    return int(log(big / small, 2))\nfor _ in range(int(input())):\n    n = int(input())\n    arr = (*map(int, input().split()),)\n    count = 0\n    for i in range(n - 1):\n        count += getinbetween(arr[i], arr[i + 1])\n    print(count)", "def func():\n    n = int(input())\n    lst = list(map(int, input().split()))\n    cnt = 0\n    for i in range(n - 1):\n        maxV = max(lst[i], lst[i + 1])\n        minV = min(lst[i], lst[i + 1])\n        while minV * 2 < maxV:\n            minV *= 2\n            cnt += 1\n    print(cnt)\n\ndef main():\n    for i in range(int(input())):\n        func()\nmain()", "k = []\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    for i in range(n - 1):\n        (m1, m2) = (max(a[i], a[i + 1]), min(a[i], a[i + 1]))\n        while 2 * m2 < m1:\n            c += 1\n            m2 *= 2\n    k.append(c)\nfor i in k:\n    print(i)", "ans = []\nfor _ in range(int(input())):\n    n = int(input())\n    a = [*map(int, input().split())]\n    tmp = 0\n    for i in range(n - 1):\n        p = min(a[i], a[i + 1])\n        q = max(a[i], a[i + 1])\n        while p * 2 < q:\n            p *= 2\n            tmp += 1\n    ans.append(str(tmp))\nprint('\\n'.join(ans))", "import math\n\ndef solution(l, a):\n    count = 0\n    i = 0\n    while i < l - 1:\n        if max(a[i], a[i + 1]) / min(a[i], a[i + 1]) > 2:\n            if a[i] > a[i + 1]:\n                count += math.ceil(math.log(0.5 * a[i] / a[i + 1]) / math.log(2))\n            else:\n                count += math.ceil(math.log(0.5 * a[i + 1] / a[i]) / math.log(2))\n        i += 1\n    return count\nresult = []\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    result.append(solution(n, arr))\nprint(*result, sep='\\n')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 1):\n        if l[i] > l[i + 1]:\n            ptr = l[i + 1]\n            while ptr * 2 < l[i]:\n                ptr *= 2\n                ans += 1\n        else:\n            ptr = l[i]\n            while ptr * 2 < l[i + 1]:\n                ptr *= 2\n                ans += 1\n    print(ans)", "for _ in range(int(input())):\n    k = 0\n    n = int(input())\n    l = list(map(int, input().split()))\n    for i in range(n - 1):\n        mi = min(l[i], l[i + 1])\n        ma = max(l[i], l[i + 1])\n        if ma / mi > 2:\n            while True:\n                mi = mi * 2\n                if mi < ma:\n                    k += 1\n                else:\n                    break\n    print(k)", "for _ in range(int(input())):\n    k = 0\n    n = int(input())\n    l = list(map(int, input().split()))\n    for i in range(n - 1):\n        mi = min(l[i], l[i + 1])\n        ma = max(l[i], l[i + 1])\n        while mi * 2 < ma:\n            k += 1\n            mi = mi * 2\n    print(k)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    j = 0\n    for i in range(n - 1):\n        q = min(a[i], a[i + 1])\n        w = max(a[i], a[i + 1])\n        while q * 2 < w:\n            j += 1\n            q *= 2\n    print(j)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    ans = 0\n    for i in range(n - 1):\n        x = min(a[i], a[i + 1])\n        y = max(a[i], a[i + 1])\n        while y > 2 * x:\n            x *= 2\n            ans += 1\n    print(ans)", "def get_dense_list(length: int, arr: list):\n    change = 0\n    for i in range(length):\n        if i == length - 1:\n            break\n        ma = max(arr[i], arr[i + 1])\n        mi = min(arr[i], arr[i + 1])\n        while ma / mi > 2:\n            mi *= 2\n            change += 1\n    return change\nfor _ in range(int(input())):\n    print(get_dense_list(int(input()), [int(x) for x in input().split()]))", "import math\nt = int(input())\nnatija = []\nfor i in range(t):\n    n = int(input())\n    satr = input()\n    ruyhat = satr.split(' ')\n    umumiy_son = 0\n    for i in range(n):\n        ruyhat[i] = int(ruyhat[i])\n    for i in range(n - 1):\n        farq = max(ruyhat[i], ruyhat[i + 1]) / min(ruyhat[i], ruyhat[i + 1])\n        if farq > 2:\n            x = math.floor(math.log2(farq))\n            if 2 ** x == farq:\n                umumiy_son += x - 1\n            else:\n                umumiy_son += x\n    natija.append(umumiy_son)\nfor i in range(t):\n    print(natija[i])", "t = int(input())\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    for i in range(0, n - 1):\n        a = min(arr[i], arr[i + 1])\n        b = max(arr[i], arr[i + 1])\n        while a * 2 < b:\n            ans += 1\n            a *= 2\n    print(ans)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    for i in range(1, n):\n        (x, y) = (a[i - 1], a[i])\n        if x < y:\n            (x, y) = (y, x)\n        while x > y * 2:\n            y *= 2\n            c += 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = 0\n    for i in range(1, n):\n        mx = max(arr[i], arr[i - 1])\n        mn = min(arr[i], arr[i - 1])\n        while mx > 2 * mn:\n            count += 1\n            mn *= 2\n    print(count)", "import sys\ninput = lambda : sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(n - 1):\n        minn = min(a[i], a[i + 1])\n        maxx = max(a[i], a[i + 1])\n        while minn * 2 < maxx:\n            minn *= 2\n            count += 1\n    print(count)", "for _ in range(int(input())):\n    (n, c) = (int(input()), 0)\n    a = list(map(int, input().split(' ')))\n    for i in range(1, n):\n        (x, y) = sorted([a[i], a[i - 1]])\n        while 2 * x < y:\n            c += 1\n            x *= 2\n    print(c)", "t = int(input())\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    last = arr[0]\n    for i in range(1, n):\n        new = arr[i]\n        (a, b) = (min(last, new), max(last, new))\n        while a * 2 < b:\n            ans += 1\n            a *= 2\n        last = new\n    print(ans)\n    t -= 1", "t = int(input())\nfor r in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = l[0]\n    ans = 0\n    for i in range(1, len(l)):\n        b = l[i]\n        c = min(a, b)\n        d = max(a, b)\n        while True:\n            if c * 2 < d:\n                ans += 1\n                c *= 2\n            else:\n                break\n        a = b\n    print(ans)", "def solve(n, a):\n    ans = 0\n    for i in range(0, n - 1):\n        if a[i + 1] / a[i] > 2:\n            k = a[i]\n            while k * 2 < a[i + 1]:\n                k *= 2\n                ans += 1\n        if a[i] / a[i + 1] > 2:\n            k = a[i + 1]\n            while k * 2 < a[i]:\n                k *= 2\n                ans += 1\n    return ans\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(n, a))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 1):\n        max_a = max(a[i], a[i + 1])\n        min_a = min(a[i], a[i + 1])\n        if max_a <= min_a * 2:\n            continue\n        while min_a * 2 < max_a:\n            min_a *= 2\n            ans += 1\n    print(ans)", "def arrIn():\n    return list(map(int, input().split()))\n\ndef mapIn():\n    return map(int, input().split())\n\ndef process(a, b):\n    count = 0\n    c = (a + 1) // 2\n    while c > b:\n        b = b * 2\n        count += 1\n    return count\nfor i in range(int(input())):\n    n = int(input())\n    arr = arrIn()\n    sum = 0\n    for i in range(1, n):\n        sum += process(max(arr[i], arr[i - 1]), min(arr[i], arr[i - 1]))\n    print(sum)", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    r = 0\n    for (x, y) in map(sorted, zip(a, a[1:])):\n        while x * 2 < y:\n            x *= 2\n            r += 1\n    print(r)", "def dense(a):\n    i = 0\n    t = 0\n    while i < len(a) - 1:\n        if a[i] < a[i + 1]:\n            if a[i + 1] / a[i] > 2:\n                x = 2 * a[i]\n                t += 1\n                while a[i + 1] / x > 2:\n                    x = x * 2\n                    t += 1\n        elif a[i] / a[i + 1] > 2:\n            x = 2 * a[i + 1]\n            t += 1\n            while a[i] / x > 2:\n                x = x * 2\n                t += 1\n        i += 1\n    print(t)\nprim = int(input())\nwhile prim > 0:\n    n = int(input())\n    a = input().split(' ')\n    a = [int(i) for i in a]\n    dense(a)\n    prim -= 1", "import math\nt = int(input())\n\ndef get_answer(n, a):\n    total = 0\n    for i in range(0, n - 1):\n        M = max(a[i], a[i + 1])\n        m = min(a[i], a[i + 1])\n        if M / m > 2:\n            total += math.ceil(math.log2(M / m)) - 1\n    return total\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(get_answer(n, a))", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    i = 0\n    c = 0\n    while i < n - 1:\n        cur = l[i]\n        nxt = l[i + 1]\n        ma = cur\n        mi = nxt\n        if cur < nxt:\n            ma = nxt\n            mi = cur\n        if ma / mi > 2:\n            d = math.log(ma / mi, 2)\n            if d % 1 == 0:\n                c += int(d) - 1\n            else:\n                c += int(d)\n        i += 1\n    print(c)", "from math import log, ceil\nfor i in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    ans = 0\n    for i in range(1, n):\n        (a, b) = sorted([s[i], s[i - 1]])\n        ans += max(ceil(log(b / a, 2)) - 1, 0)\n    print(ans)", "import sys\nimport math\nnCases = sys.stdin.readline().rstrip('\\n')\n\ndef steps(big, small):\n    if big <= 2 * small:\n        return 0\n    return math.ceil(math.log2(big / small)) - 1\nfor i in range(int(nCases)):\n    n = sys.stdin.readline().rstrip('\\n')\n    arr = sys.stdin.readline().rstrip('\\n').split(' ')\n    cnt = 0\n    for i in range(1, len(arr)):\n        cnt += steps(max(int(arr[i - 1]), int(arr[i])), min(int(arr[i - 1]), int(arr[i])))\n    print(cnt)"]