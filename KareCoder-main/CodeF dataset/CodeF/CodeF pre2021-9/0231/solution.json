["import sys\ninp = sys.stdin.readline\nfor _ in range(int(inp())):\n    n = int(inp())\n    data = sorted(map(int, inp().split()))\n    flag = False\n    for i in range(1, n):\n        if data[i] == data[i - 1]:\n            flag = True\n            break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if len(set(a)) == n:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    print('YES' if len(set(map(int, input().split()))) < n else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if len(set(a)) == n:\n        print('NO')\n    else:\n        print('YES')", "import sys\ninput = sys.stdin.readline\nfrom collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    if max(Counter(map(int, input().split())).values()) > 1:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nr = [0] * n\nfor i in range(n):\n    size = int(input())\n    expoentes = list(map(int, input().split()))\n    dic = {}\n    for j in range(size):\n        if expoentes[j] not in dic:\n            dic[expoentes[j]] = 1\n        else:\n            r[i] = True\n            break\nfor c in r:\n    if c:\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    B = list(map(int, input().split()))\n    return 'YES' if n > len(set(B)) else 'NO'\nfor _ in range(int(input())):\n    print(solve())", "for _ in range(int(input())):\n    n = int(input())\n    a = set(list(map(int, input().split())))\n    if len(a) != n:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    print('NO' if int(input()) == len(set(input().split())) else 'YES')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if len(set(a)) == n:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = list(set(arr))\n    if len(s) == n:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    print(['NO', 'YES'][int(input()) != len(set(input().split()))])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = input().split()\n    if n == len(set(x)):\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = set(a)\n    if len(b) == n:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    arr = set((i for i in input().split()))\n    print('YES' if len(arr) < n else 'NO')", "for i in range(int(input())):\n    print('YNEOS'[int(input()) == len(set(input().split()))::2])", "for i in range(int(input())):\n    t = int(input())\n    s = list(input().split())\n    s1 = list(set(s))\n    s.sort()\n    s1.sort()\n    if s != s1:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    t = int(input())\n    s = list(input().split())\n    s1 = list(set(s))\n    s.sort()\n    s1.sort()\n    if s != s1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if len(set(a)) == n:\n        print('NO')\n    else:\n        print('YES')", "for t in range(int(input())):\n    n = int(input())\n    if n == len(set(map(int, input().split()))):\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nlist = []\nfor i in range(t):\n    n = int(input())\n    list = [int(x) for x in input().split(' ')]\n    s = set()\n    for i in range(0, n):\n        s.add(list[i])\n    if len(s) == n:\n        print('NO')\n    else:\n        print('YES')", "import sys\nl = sys.stdin.readlines()\ni = 0\nt = int(l[i].replace('\\n', ''))\ni = 1\nwhile True:\n    n = int(l[i].replace('\\n', ''))\n    i += 1\n    b = [int(x) for x in l[i].replace('\\n', '').split()]\n    i += 1\n    b.sort()\n    aux = 1\n    for j in range(1, len(b)):\n        aux = b[j] - b[j - 1]\n        if aux == 0:\n            print('YES')\n            break\n    if aux != 0:\n        print('NO')\n    if i == len(l):\n        break", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    if len(set(lst)) != n:\n        print('YES')\n    else:\n        print('NO')", "num_inp = lambda : int(input())\narr_inp = lambda : list(map(int, input().split()))\nsp_inp = lambda : map(int, input().split())\nstr_inp = lambda : input()\nfor _ in range(int(input())):\n    print(['NO', 'YES'][int(input()) != len(set(input().split()))])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = input()\n    l = l.split()\n    for i in range(n):\n        l[i] = int(l[i])\n    s = set(l)\n    if len(s) != n:\n        print('YES')\n    else:\n        print('NO')", "for b in [*open(0)][2::2]:\n    d = {}\n    ans = 'NO'\n    for i in map(int, b.split()):\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    for i in d:\n        if d[i] > 1:\n            ans = 'YES'\n            break\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    b = set(map(int, input().split()))\n    if len(b) == n:\n        print('NO')\n    else:\n        print('YES')", "T = int(input())\nfor t in range(0, T):\n    n = int(input())\n    b = list(map(int, input().split()))\n    b.sort()\n    flag = 0\n    for i in range(0, n - 1):\n        if b[i] == b[i + 1]:\n            flag = 1\n            break\n    if flag == 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    b = set(b)\n    if len(b) == n:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = set()\n    flag = 0\n    for i in l:\n        if i in s:\n            flag = 1\n            break\n        else:\n            s.add(i)\n    if flag == 0:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    print(['NO', 'YES'][int(input()) != len(set(input().split()))])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    li = list(map(int, input().split(' ')))\n    li.sort()\n    res = 0\n    for x in range(len(li) - 1):\n        if li[x] == li[x + 1]:\n            res = 1\n            break\n    if res:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    b_arr = list(map(int, input().split()))\n    dupl = set()\n    broken = False\n    for i in b_arr:\n        if i in dupl:\n            print('YES')\n            broken = True\n            break\n        dupl.add(i)\n    if not broken:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if len(set(a)) == n:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    s = list(set(li))\n    if len(s) == n:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = set(l)\n    if len(s) < n:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    int(input())\n    l = input().split()\n    print(['YES', 'NO'][len(set(l)) == len(l)])", "for i in range(int(input())):\n    int(input())\n    l = input().split()\n    print('NO' if len(set(l)) == len(l) else 'YES')", "def ass(a, b):\n    if a != b:\n        print(f'Assertion error: {a} != {b}')\n    else:\n        print('OK')\n\ndef number():\n    return int(input())\n\ndef numbers():\n    return [int(item) for item in input().split()]\n\ndef word():\n    return input()\n\ndef words():\n    return [item for item in input().split()]\n\ndef dump(lst):\n    for (i, item) in enumerate(lst):\n        print(i, item)\n\ndef binsearch(arr, a, b):\n    m = (a + b) // 2\n    if a >= b:\n        return a - 1 if arr[a] == 0 else a\n    return binsearch(arr, a, m - 1) if arr[m] == 0 else binsearch(arr, m + 1, b)\n\ndef f(arr):\n    return 'NO' if len(set(arr)) == len(arr) else 'YES'\nt = number()\nfor i in range(t):\n    n = number()\n    print(f(numbers()))", "for _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split(' ')))\n    if len(set(b)) != len(b):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l1 = list(set(a))\n    if len(a) == len(l1):\n        print('NO')\n    else:\n        print('YES')", "def ggwp(b):\n    s = set()\n    for i in b:\n        if i in s:\n            print('YES')\n            return ''\n        else:\n            s.add(i)\n    print('NO')\n    return ''\nfor _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    ggwp(b)", "for _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    s = set()\n    flag = 0\n    for i in b:\n        if i in s:\n            flag = 1\n            break\n        else:\n            s.add(i)\n    if flag == 1:\n        print('YES')\n    else:\n        print('NO')", "for t in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    if len(set(b)) == len(b):\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if len(set(a)) == n:\n        print('NO')\n    else:\n        print('YES')", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = Counter(l)\n    p = c.values()\n    for i in p:\n        if i >= 2:\n            print('YES')\n            break\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    if len(set(arr)) < n:\n        print('YES')\n    else:\n        print('NO')", "tc = int(input())\nwhile tc:\n    n = int(input())\n    a = set(map(int, input().split()))\n    tc = tc - 1\n    if len(a) == n:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = set(a)\n    if len(s) == n:\n        print('NO')\n    else:\n        print('YES')", "n = int(input())\nfor _ in range(n):\n    input()\n    a = list(map(int, input().split()))\n    if len(set(a)) < len(a):\n        print('YES')\n    else:\n        print('NO')", "for x in range(0, int(input())):\n    i = int(input())\n    l = list(map(int, input().split()))\n    if i == len(set(l)):\n        print('NO')\n    else:\n        print('YES')", "import sys\n\ndef ints():\n    return list(map(int, sys.stdin.readline().strip().split()))\ntc = int(input())\nwhile tc:\n    tc -= 1\n    n = int(input())\n    ls = ints()\n    if len(set(ls)) == n:\n        print('NO')\n    else:\n        print('YES')", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = len(set(a))\n    if n == l:\n        print('NO')\n    else:\n        print('YES')", "from sys import *\ninput = lambda : stdin.readline()\nint_arr = lambda : list(map(int, stdin.readline().strip().split()))\nstr_arr = lambda : list(map(str, stdin.readline().split()))\nget_str = lambda : map(str, stdin.readline().strip().split())\nget_int = lambda : map(int, stdin.readline().strip().split())\nget_float = lambda : map(float, stdin.readline().strip().split())\nmod = 1000000007\nsetrecursionlimit(1000)\nfor _ in range(int(input())):\n    n = int(input())\n    arr = int_arr()\n    if len(set(arr)) == len(arr):\n        print('NO')\n    else:\n        print('YES')", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    b = list(map(int, input().split(' ')))\n    digits = set()\n    ans = 'NO'\n    for i in b:\n        if i in digits:\n            ans = 'YES'\n            break\n        else:\n            digits.add(i)\n    print(ans)", "t = int(input())\ncantidades = []\nlistas = []\nfor i in range(t):\n    cantidades.append(int(input()))\n    listas.append(input().split())\nlistas_enteras = []\nfor i in range(len(listas)):\n    mapeo_entero = map(int, listas[i])\n    lista_entera = list(mapeo_entero)\n    listas_enteras.append(lista_entera)\nfor i in range(t):\n    if not len(listas_enteras[i]) == len(set(listas_enteras[i])):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\ncantidades = []\nlistas = []\nfor i in range(t):\n    cantidades.append(int(input()))\n    listas.append(input().split())\nfor i in range(t):\n    if not len(listas[i]) == len(set(listas[i])):\n        print('YES')\n    else:\n        print('NO')", "import math\nimport sys\ninp = int(input())\nfor _ in range(inp):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    visit = set()\n    isit = True\n    for i in arr:\n        if i in visit:\n            isit = False\n            break\n        else:\n            visit.add(i)\n    if isit:\n        print('NO')\n    else:\n        print('YES')", "for b in [*open(0)][2::2]:\n    d = {}\n    ans = 'NO'\n    for i in map(int, b.split()):\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    for i in d:\n        if d[i] > 1:\n            ans = 'YES'\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    f = 0\n    for i in range(1, n):\n        if l[i] == l[i - 1]:\n            f = 1\n            break\n    if f == 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = input()\n    m = list(map(int, input().split()))\n    print(['YES', 'NO'][len(set(m)) == len(m)])", "t = int(input())\nres = []\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if len(a) == len(set(a)):\n        res.append('NO')\n    else:\n        res.append('YES')\nfor i in res:\n    print(i)", "def meme(l):\n    x = sorted(l)\n    for i in range(1, len(x), 1):\n        if x[i] == x[i - 1]:\n            return 'YES'\n            break\n    return 'NO'\nx = int(input())\nm = []\nfor i in range(x):\n    y = input()\n    z = input()\n    z1 = z.split(' ')\n    z2 = [int(t) for t in z1]\n    m.append(z2)\nfor j in range(x):\n    print(meme(m[j]))", "for i in range(int(input())):\n    t = int(input())\n    s = list(input().split())\n    s1 = list(set(s))\n    s.sort()\n    s1.sort()\n    if s != s1:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    t = int(input())\n    s = list(input().split())\n    s1 = list(set(s))\n    s.sort()\n    s1.sort()\n    if s != s1:\n        print('YES')\n    else:\n        print('NO')", "tc = int(input())\nfor t in range(tc):\n    n = int(input())\n    flag = 0\n    d = dict()\n    arr = input().split()\n    for i in range(len(arr)):\n        arr[i] = int(arr[i])\n    for i in range(len(arr)):\n        if d.get(arr[i], 0) != 0:\n            flag = 1\n        else:\n            d[arr[i]] = 1\n    if flag == 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if len(set(a)) == n:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if len(set(l)) != n:\n        print('YES')\n    else:\n        print('NO')", "for tetscase in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    d = {}\n    for ele in arr:\n        if ele in d:\n            print('YES')\n            break\n        else:\n            d[ele] = 1\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = input().split()\n    if len(arr) != len(set(arr)):\n        print('YES')\n    else:\n        print('NO')", "g = int(input())\nfor i in range(g):\n    n = int(input())\n    b = list(map(int, input().split()))\n    if len(set(b)) < n:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = set(map(int, input().split()))\n    if len(a) == n:\n        print('NO')\n    else:\n        print('YES')", "import sys\nimport math\nfrom collections import Counter\nlines = [list(map(int, line.split())) for line in sys.stdin.readlines()]\nlines.pop(0)\nwhile lines:\n    l = Counter(lines[1])\n    x = l.most_common(1)\n    if x[0][1] != 1:\n        print('YES')\n    else:\n        print('NO')\n    lines = lines[2:]", "from collections import defaultdict\nfor t in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    d = defaultdict(int)\n    for x in b:\n        d[x] += 1\n    ok = False\n    for v in d.values():\n        if v > 1:\n            ok = True\n            break\n    print('YES' if ok else 'NO')", "def ggwp(b):\n    d = dict()\n    for i in b:\n        try:\n            if d[i] == 1:\n                print('YES')\n                return ''\n        except:\n            d[i] = 1\n    print('NO')\n    return ''\nfor _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    ggwp(b)", "from collections import defaultdict\nlinp = lambda : list(map(int, input().split()))\niinp = lambda : int(input())\ntinp = lambda : map(int, input().split())\nrinp = lambda : range(int(input()))\ndct = lambda : defaultdict(lambda : 0)\nfrom collections import Counter\nfrom math import ceil\nfor _ in rinp():\n    n = iinp()\n    l = linp()\n    st = set(l)\n    print('NO' if len(st) == n else 'YES')", "def solve():\n    n = int(input())\n    b = list(map(int, input().split()))\n    l = set(b)\n    if len(l) != len(b):\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nfor _ in range(t):\n    solve()", "T = int(input())\nfor x in range(T):\n    n = int(input())\n    a = [int(y) for y in input().split()]\n    a.sort()\n    for z in range(1, n):\n        if a[z] == a[z - 1]:\n            ans = 1\n            break\n        else:\n            ans = -1\n    if ans == 1:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    arr = set()\n    tot = 0\n    n = int(input())\n    for j in input().split():\n        ele = int(j)\n        arr.add(ele)\n        tot += ele\n    print('NO' if len(arr) == n else 'YES')", "for i in range(int(input())):\n    n = int(input())\n    arr = set(list(map(int, input().split())))\n    if len(arr) == n:\n        print('NO')\n    else:\n        print('YES')", "def fun(a, l):\n    if len(set(l)) == len(l):\n        return 'NO'\n    else:\n        return 'YES'\nfor t in range(int(input())):\n    a = int(input())\n    l = list(map(int, input().split()))\n    print(fun(a, l))", "for i in range(int(input())):\n    t = int(input())\n    s = list(input().split())\n    s1 = list(set(s))\n    s.sort()\n    s1.sort()\n    if s != s1:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    t = int(input())\n    s = list(input().split())\n    s1 = list(set(s))\n    s.sort()\n    s1.sort()\n    if s != s1:\n        print('YES')\n    else:\n        print('NO')", "from math import factorial\n\nclass input_list(list):\n\n    def add_v(self, v):\n        self.append(v)\n    add_v = property(fset=add_v, doc=add_v.__doc__)\n\ndef multiple_run(func, count=None):\n\n    def dec():\n        for _ in range(int(input()) if count is None else count):\n            func()\n    return dec\n\n@multiple_run\ndef main():\n    n = int(input())\n    a = input().split()\n    b = set(a)\n    if len(b) != len(a):\n        print('YES')\n    else:\n        print('NO')\nmain()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    st = input()\n    print('YES' if len(set(st.split())) != n else 'NO')", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if len(set(a)) != len(a):\n        print('YES')\n    else:\n        print('NO')", "testcase = int(input())\nfor i in range(testcase):\n    N = int(input())\n    Ns = list(map(int, input().split()))\n    if len(set(Ns)) == N:\n        print('NO')\n    else:\n        print('YES')", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\nT = inp()\nfor _ in range(T):\n    n = inp()\n    B = inlt()\n    if len(B) > len(set(B)):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = set(l)\n    if len(s) == n:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    print('NO' if int(input()) == len(set(input().split())) else 'YES')", "k_set = int(input())\nfor _ in range(k_set):\n    lenth = int(input())\n    data = list(map(int, input().split()))\n    if len(set(data)) < len(data):\n        print('YES')\n    else:\n        print('NO')"]