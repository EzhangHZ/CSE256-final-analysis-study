["t = int(input())\na = [None for _ in range(t)]\nres = []\nparents = []\nfor i in range(t):\n    a[i] = list(map(int, input().split()))\n    res.append(a[i][i])\n\ndef split(ids):\n    if len(ids) == 1:\n        return ids[0] + 1\n    groups = []\n    d = set(ids)\n    mx = max([x for (i, x) in enumerate(a[ids[0]]) if i in d])\n    res.append(mx)\n    cur = len(res)\n    for id in ids:\n        found = False\n        for group in groups:\n            if a[group[0]][id] < mx:\n                group.append(id)\n                found = True\n                break\n        if not found:\n            groups.append([id])\n    for group in groups:\n        parents.append([split(group), cur])\n    return cur\nchief = split([i for i in range(t)])\nprint(len(res))\nprint(*res, sep=' ')\nprint(chief)\nfor r in parents:\n    print(*r, sep=' ')", "import collections\nt = int(input())\na = [None for _ in range(t)]\nres = []\nparents = []\nfor i in range(t):\n    a[i] = list(map(int, input().split()))\n    res.append(a[i][i])\n\ndef split(ids):\n    if len(ids) == 1:\n        return ids[0] + 1\n    groups = []\n    d = set(ids)\n    mx = max([x for (i, x) in enumerate(a[ids[0]]) if i in d])\n    res.append(mx)\n    cur = len(res)\n    for id in ids:\n        found = False\n        for group in groups:\n            if a[group[0]][id] < mx:\n                group.append(id)\n                found = True\n                break\n        if not found:\n            groups.append([id])\n    for group in groups:\n        parents.append([split(group), cur])\n    return cur\nchief = split([i for i in range(t)])\nprint(len(res))\nprint(*res, sep=' ')\nprint(chief)\nfor r in parents:\n    print(*r, sep=' ')", "import collections\nt = int(input())\na = [None for _ in range(t)]\nres = []\nparents = []\nfor i in range(t):\n    a[i] = list(map(int, input().split()))\n    res.append(a[i][i])\n\ndef split(ids):\n    if len(ids) == 1:\n        return ids[0] + 1\n    groups = []\n    d = set(ids)\n    mx = max([x for (i, x) in enumerate(a[ids[0]]) if i in d])\n    res.append(mx)\n    cur = len(res)\n    for id in ids:\n        found = False\n        for group in groups:\n            if a[group[0]][id] < mx:\n                group.append(id)\n                found = True\n                break\n        if not found:\n            groups.append([id])\n    for group in groups:\n        parents.append([split(group), cur])\n    return cur\nchief = split([i for i in range(t)])\nprint(len(res))\nprint(*res, sep=' ')\nprint(chief)\nfor r in parents:\n    print(*r, sep=' ')", "t = int(input())\na = [None for _ in range(t)]\nres = []\nparents = []\nfor i in range(t):\n    a[i] = list(map(int, input().split()))\n    res.append(a[i][i])\n\ndef split(ids):\n    if len(ids) == 1:\n        return ids[0] + 1\n    groups = []\n    d = set(ids)\n    mx = max([x for (i, x) in enumerate(a[ids[0]]) if i in d])\n    res.append(mx)\n    cur = len(res)\n    for id in ids:\n        found = False\n        for group in groups:\n            if a[group[0]][id] < mx:\n                group.append(id)\n                found = True\n                break\n        if not found:\n            groups.append([id])\n    for group in groups:\n        parents.append([split(group), cur])\n    return cur\nchief = split([i for i in range(t)])\nprint(len(res))\nprint(*res, sep=' ')\nprint(chief)\nfor r in parents:\n    print(*r, sep=' ')"]