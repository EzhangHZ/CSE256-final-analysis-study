["from sys import stdin, stdout\nimport collections, heapq, bisect, math\ninput = stdin.readline\n\ndef rint():\n    return int(input())\n\ndef rstr():\n    return input().strip()\n\ndef rlstr():\n    return list(input().strip().split())\n\ndef rlint():\n    return list(map(int, input().split()))\n\ndef main():\n    (n, m) = rlint()\n    a = rlint()\n    b = rlint()\n    mod = 998244353\n    j = m - 1\n    i = n - 1\n    res = 1\n    while j > 0:\n        count = 0\n        while i >= 0 and b[j] < a[i]:\n            i -= 1\n        while i >= 0 and b[j] <= a[i]:\n            count += 1\n            i -= 1\n        j -= 1\n        res = res * count % mod\n    if i < 0 or min(a[:i + 1]) != b[0]:\n        res = 0\n    print(res)\nmain()", "mod = 998244353\n\ndef solv(A, B):\n    ans = 1\n    (ai, bi) = (len(A) - 1, len(B) - 1)\n    cnt = 0\n    match = False\n    while ai >= 0 and bi >= 0:\n        if match:\n            if A[ai] >= B[bi]:\n                cnt += 1\n                ai -= 1\n            else:\n                ans = ans * cnt % mod\n                match = False\n                bi -= 1\n                cnt = 0\n        else:\n            if A[ai] < B[bi]:\n                return 0\n            if A[ai] == B[bi]:\n                match = True\n                cnt = 1\n            ai -= 1\n    return ans if match and bi == 0 else 0\n_ = input()\nA = list(map(int, list(input().split())))\nB = list(map(int, list(input().split())))\nprint(solv(A, B))", "def main():\n    (n, m) = map(int, input().split())\n    (aa, bb) = (list(map(int, input().split())) for _ in 'ab')\n    (res, term, i, start) = (1, bb[0], n - 1, 0)\n    for b in reversed(bb):\n        while i >= 0 and aa[i] > b:\n            i -= 1\n        if i >= 0 and aa[i] == b:\n            start = i\n        else:\n            res = 0\n            break\n        while i >= 0 and aa[i] >= b:\n            i -= 1\n        if b == term:\n            break\n        res = res * (start - i) % 998244353\n    print(res * (i < 0))\nmain()", "(n, m) = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndef solve():\n    M = 998244353\n    res = 1\n    i = n - 1\n    j = m - 1\n    while j >= 0 and res:\n        count = 0\n        while i >= 0 and a[i] >= b[j]:\n            if count > 0:\n                count += 1\n            elif a[i] == b[j]:\n                count = 1\n            i -= 1\n        if j == 0:\n            count = min(count, 1)\n            if i >= 0:\n                count = 0\n        res *= count\n        res %= M\n        j -= 1\n    return res\nprint(solve())", "import sys\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\n\ndef main():\n    md = 998244353\n    (n, m) = MI()\n    aa = LI()\n    bb = LI()\n    mn = [0] * n\n    s = aa[-1]\n    for i in range(n - 1, -1, -1):\n        s = min(s, aa[i])\n        mn[i] = s\n    r = n\n    ans = 1\n    l = 0\n    for b in bb[::-1]:\n        while r - 1 >= 0 and mn[r - 1] > b:\n            r -= 1\n        if r == 0 or mn[r - 1] != b:\n            ans = 0\n            break\n        l = r - 1\n        while l - 1 >= 0 and mn[l - 1] == b:\n            l -= 1\n        if l:\n            ans = ans * (r - l) % md\n        r = l\n    if l:\n        ans = 0\n    print(ans)\nmain()", "(n, m) = input().split()\nn = int(n)\nm = int(m)\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\nMOD = 998244353\na.reverse()\nb.reverse()\n\ndef Solve(a, b, n, m):\n    if m > n:\n        return 0\n    men = a[0]\n    pos = 0\n    while pos < n and men > b[0]:\n        pos += 1\n        if pos >= n:\n            break\n        men = min(men, a[pos])\n    if pos == n or men < b[0]:\n        return 0\n    result = 1\n    count = 0\n    while count != m - 1:\n        newPos = pos\n        mid = True\n        while newPos < n and men != b[count + 1]:\n            newPos += 1\n            if newPos >= n:\n                break\n            men = min(men, a[newPos])\n            if mid and a[newPos] < b[count]:\n                mid = False\n                result = result * (newPos - pos) % MOD\n        if newPos == n or men != b[count + 1]:\n            return 0\n        count += 1\n        pos = newPos\n    for i in range(pos, n):\n        if a[i] < men:\n            men = a[i]\n    if men == b[m - 1]:\n        return result\n    else:\n        return 0\nprint(Solve(a, b, n, m))", "(a, b) = map(int, input().split())\nanswer = 1\nmod = 998244353\nz = list(map(int, input().split()))\nx = list(map(int, input().split()))\ni = a - 1\nj = b - 1\nwhile answer and j >= 0:\n    c = 0\n    while i >= 0 and z[i] >= x[j]:\n        if c:\n            c += 1\n        elif z[i] == x[j]:\n            c = 1\n        i -= 1\n    if j == 0:\n        c = min(c, 1)\n        if i >= 0:\n            c = 0\n    answer = answer * c % mod\n    j -= 1\nprint(answer)", "(n, m) = map(int, input().split())\nans = 1\nmod = 998244353\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ni = n - 1\nj = m - 1\nwhile ans and j >= 0:\n    cnt = 0\n    while i >= 0 and a[i] >= b[j]:\n        if cnt:\n            cnt += 1\n        elif a[i] == b[j]:\n            cnt = 1\n        i -= 1\n    if j == 0:\n        cnt = min(cnt, 1)\n        if i >= 0:\n            cnt = 0\n    ans = ans * cnt % mod\n    j -= 1\nprint(ans)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nn -= 1\nm -= 1\nwhile n >= 0 and b[m] != a[n]:\n    if b[m] > a[n]:\n        print(0)\n        exit(0)\n    n -= 1\nif n < 0 < m:\n    print(0)\n    exit(0)\nans = 1\nmod = 998244353\nwhile m >= 0 and n >= 0:\n    sana = 0\n    while n >= 0 and a[n] >= b[m]:\n        sana += 1\n        n -= 1\n    if m:\n        ans = ans * sana % mod\n    m -= 1\n    while n >= 0 and b[m] != a[n]:\n        if b[m] > a[n]:\n            print(0)\n            exit(0)\n        n -= 1\n    if n < 0 < m:\n        print(0)\n        exit(0)\nprint(ans if n < 0 and m < 0 else 0)", "(n, m) = map(int, input().split())\nans = 1\nmod = 998244353\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ni = n - 1\nj = m - 1\nwhile ans and j >= 0:\n    cnt = 0\n    while i >= 0 and a[i] >= b[j]:\n        if cnt:\n            cnt += 1\n        elif a[i] == b[j]:\n            cnt = 1\n        i -= 1\n    if j == 0:\n        cnt = min(cnt, 1)\n        if i >= 0:\n            cnt = 0\n    ans = ans * cnt % mod\n    j -= 1\nprint(ans)", "(n, s) = map(int, input().split())\nres = 1\nmod = 998244353\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ni = n - 1\nj = s - 1\nwhile res and j >= 0:\n    cnt = 0\n    while i >= 0 and a[i] >= b[j]:\n        if cnt:\n            cnt += 1\n        elif a[i] == b[j]:\n            cnt = 1\n        i -= 1\n    if j == 0:\n        cnt = min(cnt, 1)\n        if i >= 0:\n            cnt = 0\n    res = res * cnt % mod\n    j -= 1\nprint(res)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nn -= 1\nm -= 1\nwhile n >= 0 and b[m] != a[n]:\n    if b[m] > a[n]:\n        print(0)\n        exit(0)\n    n -= 1\nif n < 0 < m:\n    print(0)\n    exit(0)\nans = 1\nmod = 998244353\nwhile m >= 0 and n >= 0:\n    sana = 0\n    while n >= 0 and a[n] >= b[m]:\n        sana += 1\n        n -= 1\n    if m:\n        ans = ans * sana % mod\n    m -= 1\n    while n >= 0 and b[m] != a[n]:\n        if b[m] > a[n]:\n            print(0)\n            exit(0)\n        n -= 1\n    if n < 0 < m:\n        print(0)\n        exit(0)\nprint(ans if n < 0 and m < 0 else 0)", "def getint():\n    return int(input())\n\ndef getint2():\n    return map(int, input().split())\n\ndef getintlist():\n    return map(int, input().split())\n\ndef getstring():\n    return input()\n(n, m) = getint2()\na = list(getintlist())\nb = list(getintlist())\nfor i in range(n - 2, -1, -1):\n    if a[i] > a[i + 1]:\n        a[i] = a[i + 1]\nans = 1\nmod = 998244353\nif a[0] != b[0]:\n    print(0)\nelse:\n    (r, ans, l) = (n, 1, 0)\n    for b in b[::-1]:\n        while r - 1 >= 0 and a[r - 1] > b:\n            r -= 1\n        if r == 0 or a[r - 1] != b:\n            ans = 0\n            break\n        l = r - 1\n        while l - 1 >= 0 and a[l - 1] == b:\n            l -= 1\n        if l:\n            ans = ans * (r - l) % mod\n        r = l\n    if l:\n        ans = 0\n    print(ans)", "md = 998244353\n(n, m) = map(int, input().split())\naa = list(map(int, input().split()))\nbb = list(map(int, input().split()))\nmn = [0] * n\ns = aa[-1]\n(r, ans, l) = (n, 1, 0)\nfor i in range(n - 1, -1, -1):\n    s = min(s, aa[i])\n    mn[i] = s\nfor b in bb[::-1]:\n    while r - 1 >= 0 and mn[r - 1] > b:\n        r -= 1\n    if r == 0 or mn[r - 1] != b:\n        ans = 0\n        break\n    l = r - 1\n    while l - 1 >= 0 and mn[l - 1] == b:\n        l -= 1\n    if l:\n        ans = ans * (r - l) % md\n    r = l\nif l:\n    ans = 0\nprint(ans)", "import sys\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\nmd = 998244353\n(n, m) = MI()\naa = LI()\nbb = LI()\nmn = [0] * n\ns = aa[-1]\nfor i in range(n - 1, -1, -1):\n    s = min(s, aa[i])\n    mn[i] = s\nr = n\nans = 1\nl = 0\nfor b in bb[::-1]:\n    while r - 1 >= 0 and mn[r - 1] > b:\n        r -= 1\n    if r == 0 or mn[r - 1] != b:\n        ans = 0\n        break\n    l = r - 1\n    while l - 1 >= 0 and mn[l - 1] == b:\n        l -= 1\n    if l:\n        ans = ans * (r - l) % md\n    r = l\nif l:\n    ans = 0\nprint(ans)", "import sys\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\nmd = 998244353\n(n, m) = MI()\naa = LI()\nbb = LI()\nmn = [0] * n\ns = aa[-1]\nfor i in range(n - 1, -1, -1):\n    s = min(s, aa[i])\n    mn[i] = s\nr = n\nans = 1\nl = 0\nfor b in bb[::-1]:\n    while r - 1 >= 0 and mn[r - 1] > b:\n        r -= 1\n    if r == 0 or mn[r - 1] != b:\n        ans = 0\n        break\n    l = r - 1\n    while l - 1 >= 0 and mn[l - 1] == b:\n        l -= 1\n    if l:\n        ans = ans * (r - l) % md\n    r = l\nif l:\n    ans = 0\nprint(ans)", "import sys\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef MI():\n    return map(int, input().split())\n\ndef LI():\n    return list(map(int, input().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\nmd = 998244353\n(n, m) = map(int, input().split())\naa = list(map(int, input().split()))\nbb = list(map(int, input().split()))\nmn = [0] * n\ns = aa[-1]\nfor i in range(n - 1, -1, -1):\n    s = min(s, aa[i])\n    mn[i] = s\n(r, ans, l) = (n, 1, 0)\nfor b in bb[::-1]:\n    while r - 1 >= 0 and mn[r - 1] > b:\n        r -= 1\n    if r == 0 or mn[r - 1] != b:\n        ans = 0\n        break\n    l = r - 1\n    while l - 1 >= 0 and mn[l - 1] == b:\n        l -= 1\n    if l:\n        ans = ans * (r - l) % md\n    r = l\nif l:\n    ans = 0\nprint(ans)", "md = 998244353\n(n, m) = map(int, input().split())\naa = list(map(int, input().split()))\nbb = list(map(int, input().split()))\nmn = [0] * n\ns = aa[-1]\n(r, ans, l) = (n, 1, 0)\nfor i in range(n - 1, -1, -1):\n    s = min(s, aa[i])\n    mn[i] = s\nfor b in bb[::-1]:\n    while r - 1 >= 0 and mn[r - 1] > b:\n        r -= 1\n    if r == 0 or mn[r - 1] != b:\n        ans = 0\n        break\n    l = r - 1\n    while l - 1 >= 0 and mn[l - 1] == b:\n        l -= 1\n    if l:\n        ans = ans * (r - l) % md\n    r = l\nif l:\n    ans = 0\nprint(ans)", "md = 998244353\n(n, m) = map(int, input().split())\naa = list(map(int, input().split()))\nbb = list(map(int, input().split()))\nmn = [0] * n\ns = aa[-1]\n(r, ans, l) = (n, 1, 0)\nfor i in range(n - 1, -1, -1):\n    s = min(s, aa[i])\n    mn[i] = s\nfor b in bb[::-1]:\n    while r - 1 >= 0 and mn[r - 1] > b:\n        r -= 1\n    if r == 0 or mn[r - 1] != b:\n        ans = 0\n        break\n    l = r - 1\n    while l - 1 >= 0 and mn[l - 1] == b:\n        l -= 1\n    if l:\n        ans = ans * (r - l) % md\n    r = l\nif l:\n    ans = 0\nprint(ans)", "import sys\nfrom functools import lru_cache, cmp_to_key\nfrom heapq import merge, heapify, heappop, heappush\nfrom math import *\nfrom collections import defaultdict as dd, deque, Counter as C\nfrom itertools import combinations as comb, permutations as perm\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\nfrom time import perf_counter\nfrom fractions import Fraction\nsys.setrecursionlimit(int(pow(10, 6)))\nmod = int(pow(10, 9) + 7)\nmod2 = 998244353\n\ndef data():\n    return sys.stdin.readline().strip()\n\ndef out(*var, end='\\n'):\n    sys.stdout.write(' '.join(map(str, var)) + end)\n\ndef l():\n    return list(sp())\n\ndef sl():\n    return list(ssp())\n\ndef sp():\n    return map(int, data().split())\n\ndef ssp():\n    return map(str, data().split())\n\ndef l1d(n, val=0):\n    return [val for i in range(n)]\n\ndef l2d(n, m, val=0):\n    return [l1d(n, val) for j in range(m)]\n(n, m) = map(int, input().split())\nans = 1\nmod = 998244353\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ni = n - 1\nj = m - 1\nwhile ans and j >= 0:\n    cnt = 0\n    while i >= 0 and a[i] >= b[j]:\n        if cnt:\n            cnt += 1\n        elif a[i] == b[j]:\n            cnt = 1\n        i -= 1\n    if j == 0:\n        cnt = min(cnt, 1)\n        if i >= 0:\n            cnt = 0\n    ans = ans * cnt % mod\n    j -= 1\nprint(ans)", "md = 998244353\n(n, m) = map(int, input().split())\naa = list(map(int, input().split()))\nbb = list(map(int, input().split()))\nmn = [0] * n\ns = aa[-1]\n(r, ans, l) = (n, 1, 0)\nfor i in range(n - 1, -1, -1):\n    s = min(s, aa[i])\n    mn[i] = s\nfor b in bb[::-1]:\n    while r - 1 >= 0 and mn[r - 1] > b:\n        r -= 1\n    if r == 0 or mn[r - 1] != b:\n        ans = 0\n        break\n    l = r - 1\n    while l - 1 >= 0 and mn[l - 1] == b:\n        l -= 1\n    if l:\n        ans = ans * (r - l) % md\n    r = l\nif l:\n    ans = 0\nprint(ans)", "md = 998244353\n(n, m) = map(int, input().split())\naa = list(map(int, input().split()))\nbb = list(map(int, input().split()))\nmn = [0] * n\ns = aa[-1]\n(r, ans, l) = (n, 1, 0)\nfor i in range(n - 1, -1, -1):\n    s = min(s, aa[i])\n    mn[i] = s\nfor b in bb[::-1]:\n    while r - 1 >= 0 and mn[r - 1] > b:\n        r -= 1\n    if r == 0 or mn[r - 1] != b:\n        ans = 0\n        break\n    l = r - 1\n    while l - 1 >= 0 and mn[l - 1] == b:\n        l -= 1\n    if l:\n        ans = ans * (r - l) % md\n    r = l\nif l:\n    ans = 0\nprint(ans)", "import math\n(n, m) = tuple(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nai = n - 1\nbi = m - 1\nnum_split = [0] * m\nwhile bi >= 0:\n    while ai >= 0 and a[ai] > b[bi]:\n        ai -= 1\n    while ai >= 0 and a[ai] >= b[bi]:\n        num_split[bi] += 1\n        ai -= 1\n    bi -= 1\nif ai >= 0:\n    num_split[0] = 0\nif num_split[0] > 0:\n    print(math.prod(num_split[1:]) % 998244353)\nelse:\n    print(0)", "import math\n(m, n) = tuple(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\na1 = m - 1\nb1 = n - 1\nnum_split = [0] * (n - 1)\nwhile b1 > 0:\n    while a[a1] > b[b1]:\n        a1 -= 1\n    while a1 >= 0 and a[a1] >= b[b1]:\n        num_split[b1 - 1] += 1\n        a1 -= 1\n    b1 -= 1\nwhile a1 >= 0:\n    if a[a1] < b[b1]:\n        print(0)\n        exit(0)\n    a1 -= 1\nelse:\n    if a.count(b[b1]) == 0:\n        print(0)\n    else:\n        print(math.prod(num_split) % 998244353)", "import math\n(n, m) = tuple(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nai = n - 1\nbi = m - 1\nnum_split = [0] * (m - 1)\nwhile bi > 0:\n    while a[ai] > b[bi]:\n        ai -= 1\n    while ai >= 0 and a[ai] >= b[bi]:\n        num_split[bi - 1] += 1\n        ai -= 1\n    bi -= 1\nwhile ai >= 0:\n    if a[ai] < b[bi]:\n        print(0)\n        exit(0)\n    ai -= 1\nelse:\n    if a.count(b[bi]) == 0:\n        print(0)\n    else:\n        print(math.prod(num_split) % 998244353)", "import math\n(n, m) = tuple(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nai = n - 1\nbi = m - 1\nnum_split = [0] * (m - 1)\nwhile bi > 0:\n    while a[ai] > b[bi]:\n        ai -= 1\n    while ai >= 0 and a[ai] >= b[bi]:\n        num_split[bi - 1] += 1\n        ai -= 1\n    bi -= 1\nwhile ai >= 0:\n    if a[ai] < b[bi]:\n        print(0)\n        exit(0)\n    ai -= 1\nelse:\n    if a.count(b[bi]) == 0:\n        print(0)\n    else:\n        print(math.prod(num_split) % 998244353)", "from collections import defaultdict\n\ndef read_list():\n    return list(map(int, input().split(' ')))\n\ndef print_list(l):\n    print(' '.join(map(str, l)))\n\ndef gcd(m, n):\n    while n:\n        (m, n) = (n, m % n)\n    return m\n(lena, lenb) = read_list()\na = read_list()\nb = read_list()\nib = lenb - 1\nia = lena - 1\nres = []\nwhile ib >= 0 and ia >= 0:\n    tmp = 0\n    while ia >= 0 and a[ia] > b[ib]:\n        ia -= 1\n    if ia >= 0 and a[ia] == b[ib]:\n        while ia >= 0 and a[ia] >= b[ib]:\n            tmp += 1\n            ia -= 1\n    if tmp > 0:\n        res.append((ia, ia + tmp))\n    else:\n        break\n    ib -= 1\nif len(res) < lenb or res[-1][0] != -1:\n    print(0)\nelse:\n    ans = 1\n    for r in res[:-1]:\n        ans *= r[1] - r[0]\n    print(ans % 998244353)"]