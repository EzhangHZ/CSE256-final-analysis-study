["import math\nfrom sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    if n >= 1100:\n        print('YES')\n        continue\n    q = n // 11\n    rem = n % 11\n    q = q // 10\n    if rem <= q:\n        print('YES')\n    else:\n        print('NO')", "def decomposition(n):\n    if n % 11 == 0 or n % 111 == 0:\n        return 'YES'\n    remainder = n % 11\n    subpart = n - remainder * 111\n    if subpart > 0 and subpart % 11 == 0:\n        return 'YES'\n    return 'NO'\nresults = []\nfor _ in range(int(input().strip())):\n    test_data = int(input())\n    results.append(decomposition(test_data))\nprint('\\n'.join(results))", "for s in [*open(0)][1:]:\n    x = int(s)\n    print('YNEOS'[x < x % 11 * 111::2])", "print('\\n'.join(['YES' if (n := int(input())) >= 111 * (n % 11) else 'NO' for _ in range(int(input()))]))", "import sys\ninput = lambda : sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    n = int(input())\n    rem = n % 11\n    print('YES' if rem == 0 or 111 * rem <= n else 'NO')", "for s in [*open(0)][1:]:\n    x = int(s)\n    print('YNEOS'[x < x % 11 * 111::2])", "for s in [*open(0)][1:]:\n    x = int(s)\n    print('YNEOS'[x < x % 11 * 111::2])", "import sys\nsys.setrecursionlimit(10 ** 5 + 1)\ninf = int(10 ** 20)\nmax_val = inf\nmin_val = -inf\nRW = lambda : sys.stdin.readline().strip()\nRI = lambda : int(RW())\nRMI = lambda : [int(x) for x in sys.stdin.readline().strip().split()]\nRWI = lambda : [x for x in sys.stdin.readline().strip().split()]\nfor _ in range(RI()):\n    N = RI()\n    print('YES' if N >= 111 * (N % 11) else 'NO')", "print('\\n'.join(['YES' if (n := int(input())) >= 111 * (n % 11) else 'NO' for _ in range(int(input()))]))", "for s in [*open(0)][1:]:\n    x = int(s)\n    print('YNEOS'[x < x % 11 * 111::2])", "from sys import stdin, stdout\nfrom math import gcd, sqrt, floor, ceil\ninput = stdin.readline\nPRINT = stdout.write\n\ndef list_inp(x):\n    return list(map(x, input().split()))\n\ndef map_inp(x):\n    return map(x, input().split())\n\ndef lcm(a, b):\n    return a * b / gcd(a, b)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    if n >= 111 * (n % 11):\n        print('YES')\n    else:\n        print('NO')", "for s in [*open(0)][1:]:\n    x = int(s)\n    print('YNEOS'[x < x % 11 * 111::2])", "for s in [*open(0)][1:]:\n    x = int(s)\n    print('YNEOS'[x < x % 11 * 111::2])", "t = int(input())\narr = []\nfor i in range(t):\n    arr.append(int(input()))\nfor i in arr:\n    if i >= 111 * (i % 11):\n        print('YES')\n    else:\n        print('NO')", "list_ans = []\nfor _ in range(int(input())):\n    s = input()\n    if len(s) >= 4 and int(s) not in [1000, 1011, 1022, 1033, 1044, 1055, 1066, 1077, 1088, 1099]:\n        list_ans.append('YES')\n    else:\n        x = int(s)\n        while x >= 0:\n            if x % 11 == 0:\n                list_ans.append('YES')\n                break\n            x -= 111\n        else:\n            list_ans.append('NO')\nprint(*list_ans, sep='\\n')", "strng = lambda : input()\ninp = lambda : int(input())\nmul = lambda : map(int, input().split())\njn = lambda x, l: x.join(map(str, l))\nstrlst = lambda : list(input())\nlst = lambda : list(map(int, input().split()))\ndd = lambda : defaultdict(lambda : 0)\nimport sys\ninput = sys.stdin.readline\nfrom collections import defaultdict\nfrom math import ceil, log, floor, sqrt, gcd, log10\nfor _ in range(inp()):\n    n = inp()\n    m = n % 11\n    n -= m * 111\n    if n >= 0 and n % 11 == 0:\n        print('YES')\n        continue\n    print('NO')", "def judge(i):\n    q = int(i / 11)\n    r = i - 11 * q\n    if i >= 111 * r:\n        return 'YES'\n    else:\n        return 'NO'\nn = int(input())\nlst = []\nfor i in range(n):\n    k = int(input())\n    lst.append(k)\nfor i in lst:\n    print(judge(i))", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nfor _ in range(int(input())):\n    N = int(input())\n    (a, d) = divmod(N, 11)\n    if d > 0:\n        N -= d * 111\n        if N >= 0:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('YES')", "import sys\ninput = sys.stdin.readline\n\ndef main(n):\n    t = 0\n    if n % 11 == 0:\n        print('YES')\n        return\n    for i in range(int(n / 111)):\n        t += 111\n        if (n - t) % 11 == 0:\n            print('YES')\n            return\n    print('NO')\nfor i in range(int(input())):\n    n = int(input())\n    main(n)", "theta = 0\nimport sys\ntheta = 0\nimport io\ntheta = 0\nfrom sys import stdin, stdout\ntheta = 0\ninput = sys.stdin.readline\ntheta = 0\ntheta = 0\ntheta = 0\nt = 1\ntheta = 0\nt = int(input())\ntheta = 0\nfor i in range(t):\n    theta = 0\n    n = int(input())\n    theta = 0\n    div = n // 11\n    theta = 0\n    rem = n % 11\n    theta = 0\n    if rem <= div // 10:\n        theta = 0\n        ans = 1\n        theta = 0\n    else:\n        theta = 0\n        ans = 0\n        theta = 0\n    theta = 0\n    if ans:\n        theta = 0\n        print('YES')\n        theta = 0\n    else:\n        theta = 0\n        print('NO')\n        theta = 0", "import sys\nimport collections\nimport math\ninf = sys.maxsize\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_array():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef input():\n    return sys.stdin.readline().strip()\nmod = 1000000007\nfor _ in range(int(input())):\n    n = int(input())\n    remainder = n % 11\n    quotient = n // 11\n    print('YES') if quotient >= 10 * remainder else print('NO')", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    x = n % 11\n    if n < 11:\n        print('NO')\n        continue\n    if len(str(n)) == 2:\n        if n % 11 != 0:\n            print('NO')\n            continue\n    if x * 111 <= n and (n - x * 111) % 11 == 0:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    has = int(input())\n    jeme = has % 11\n    if has < 11:\n        print('NO')\n        continue\n    if len(str(has)) == 2:\n        if has % 11 != 0:\n            print('NO')\n            continue\n    if (has - jeme * 111) % 11 == 0 and jeme * 111 <= has:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    rem = n % 11\n    if rem * 111 <= n and (n - rem * 111) % 11 == 0:\n        print('YES')\n    else:\n        print('NO')", "import sys\nimport math\nfrom math import gcd, inf, sqrt, pi, cos, sin, ceil, log2, floor, log\nfrom sys import stdin, stdout, setrecursionlimit\nsetrecursionlimit(2 ** 20)\nN = 20005\n\ndef isPowerOfTwo(x):\n    return x and (not x & x - 1)\nT = 1\nT = int(stdin.readline())\nfor _ in range(T):\n    n = int(stdin.readline())\n    y = n % 11\n    n -= 110 * y + y\n    if n < 0:\n        print('NO')\n        continue\n    if n % 11 == 0:\n        print('YES')\n    else:\n        print('NO')", "for s in [*open(0)][1:]:\n    x = int(s)\n    print('YNEOS'[x < x % 11 * 111::2])", "def solve(n):\n    if n > 1099:\n        return True\n    while n % 11 != 0:\n        n -= 111\n    return False if n < 0 else True\nnum_t = int(input())\nsols = []\nfor x in range(num_t):\n    n = int(input())\n    r = 'YES' if solve(n) else 'NO'\n    sols.append(r)\nprint(*sols, sep='\\n')", "n = int(input())\nl1 = []\nfor i in range(n):\n    x = int(input())\n    l1.append(x)\nfor i in l1:\n    b = i % 11\n    a = i - b * 111\n    if a >= 0 and a % 11 == 0:\n        print('YES')\n    else:\n        print('NO')", "import random\nimport sys\ninput = sys.stdin.readline\n\ndef main():\n    tests = int(input())\n    for t in range(tests):\n        x = int(input())\n        if x >= x % 11 * 111:\n            print('YES')\n        else:\n            print('NO')\nmain()", "from sys import stdin\n\ndef A():\n    t = stdin.readline()\n    t = int(t)\n    while t:\n        t -= 1\n        n = int(stdin.readline())\n        a = [int(x) for x in stdin.readline().split()]\n        a.sort()\n        for i in range(1, len(a) - 1):\n            if a[i] == (a[i - 1] + a[i + 1]) / 2:\n                for j in range(0, len(a)):\n                    if j == i - 1 or j == i or j == i + 1:\n                        continue\n                    if a[j] != (a[i - 1] + a[i + 1]) / 2:\n                        (a[i], a[j]) = (a[j], a[i])\n                        break\n        for i in a:\n            print(i, end=' ')\n        print()\n\ndef B():\n    t = stdin.readline()\n    t = int(t)\n    while t:\n        t -= 1\n        n = int(stdin.readline())\n        if n % 11 == 0:\n            print('YES')\n        else:\n            a = n % 11\n            if n - a * 111 >= 0:\n                print('YES')\n            else:\n                print('NO')\n\ndef C():\n    t = stdin.readline()\n    t = int(t)\n    a = [int(x) for x in stdin.readline().split()]\n    a.sort()\n    a.reverse()\n    res = 0\n    for i in range(0, len(a)):\n        res += a[i]\n        if res < 0:\n            res = i\n            break\n    print(res)\nB()", "def sum(n):\n    greatest = 11 * 111 - 11 - 111\n    if n > greatest:\n        return 'YES'\n    elif n % 11 <= n // 111:\n        return 'YES'\n    else:\n        return 'NO'\nans = []\nfor x in range(int(input())):\n    ans.append(sum(int(input())))\nfor y in ans:\n    print(y)", "tests = int(input())\nanswers = []\n\ndef solve(n):\n    if n % 11 * 111 <= n:\n        return 'YES'\n    return 'NO'\nwhile tests > 0:\n    answers.append(solve(int(input())))\n    tests -= 1\nfor i in answers:\n    print(i)", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    N = int(sys.stdin.readline())\n    temp = N\n    if N > 1099:\n        print('YES')\n    else:\n        while N >= 0:\n            if N % 11 == 0:\n                print('YES')\n                break\n            N -= 111\n        else:\n            print('NO')", "test_case = int(input())\nfinal_list = ['NO' for i in range(test_case)]\nfor i in range(test_case):\n    n = int(input())\n    while n > 0:\n        if n % 11 == 0 or n % 111 == 0:\n            final_list[i] = 'YES'\n            break\n        n -= 111\nfor i in final_list:\n    print(i)", "for s in [*open(0)][1:]:\n    x = int(s)\n    print('YNEOS'[all((i % 11 for i in range(x, max(-1, x - 1221), -111)))::2])", "import sys\nfrom functools import lru_cache\nfrom itertools import permutations\ninput = sys.stdin.readline\nM = 10 ** 9 + 7\n\n@lru_cache(None)\ndef get(x):\n    if x == 0:\n        return True\n    return False\nT = int(input())\nfor _ in range(T):\n    x = int(input())\n    if x > 1099:\n        print('YES')\n    else:\n        f = False\n        for i in range(x):\n            if x < i * 111:\n                break\n            if (x - i * 111) % 11 == 0:\n                f = True\n                break\n        if f:\n            print('YES')\n        else:\n            print('NO')", "from sys import *\ninput = lambda : stdin.readline()\nint_arr = lambda : list(map(int, stdin.readline().strip().split()))\nstr_arr = lambda : list(map(str, stdin.readline().split()))\nget_str = lambda : map(str, stdin.readline().strip().split())\nget_int = lambda : map(int, stdin.readline().strip().split())\nget_float = lambda : map(float, stdin.readline().strip().split())\nmod = 1000000007\nsetrecursionlimit(1000)\nfor _ in range(int(input())):\n    n = int(input())\n    while n >= 0:\n        if n % 11 == 0 or n % 111 == 0:\n            print('YES')\n            break\n        n -= 111\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n >= 111 * (n % 11):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n >= 1111:\n        print('YES')\n    elif n >= 111 * (n % 11):\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    itr = int(input())\n    if itr >= 111 * (itr % 11):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    if n > 1099:\n        print('YES')\n        continue\n    x = n % 11\n    if n < 11:\n        print('NO')\n        continue\n    if len(str(n)) == 2:\n        if n % 11 != 0:\n            print('NO')\n            continue\n    if x * 111 <= n and (n - x * 111) % 11 == 0:\n        print('YES')\n    else:\n        print('NO')", "def iHate1111(n):\n    a = n % 11\n    b = (n - a) / 11 - 10 * a\n    if b >= 0 and int(b) == b:\n        return 'YES'\n    return 'NO'\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(iHate1111(n))", "[(lambda n: print('YES' if n >= 111 * (n % 11) else 'NO'))(int(input())) for _ in range(int(input()))]", "for _ in range(int(input())):\n    x = int(input())\n    y = x % 11\n    x = x - y * 111\n    if x < 0:\n        print('NO')\n    elif x % 11 == 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    print('YES' if n >= 111 * (n % 11) else 'NO')", "def ys(n):\n    if n >= 111 * (n % 11):\n        return 'YES'\n    return 'NO'\nfor i in range(int(input())):\n    print(ys(int(input())))", "for _ in range(int(input())):\n    x = int(input())\n    print('YES' if x % 11 <= x / 110 else 'NO')", "[(lambda n: print('YES' if n >= 111 * (n % 11) else 'NO'))(int(input())) for _ in range(int(input()))]", "for i in range(int(input())):\n    n = int(input())\n    print('YES' if n >= 111 * (n % 11) else 'NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n >= n % 11 * 111:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    x = int(input())\n    print('NO' if x % 11 * 111 > x else 'YES')", "n = int(input())\nfor i in range(n):\n    k = int(input())\n    if k >= 111 * (k % 11):\n        print('YES')\n    else:\n        print('NO')", "check = []\nfor i in range(0, 1111):\n    check.append(False)\nfor p in range(1, 1111):\n    if p % 11 == 0 or p % 111 == 0:\n        check[p] = True\n    elif p > 11 and check[p - 11]:\n        check[p] = True\n    elif p > 111 and check[p - 111]:\n        check[p] = True\nt = int(input())\nwhile t > 0:\n    t -= 1\n    x = int(input())\n    if x >= 1111:\n        print('YES')\n    elif check[x]:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n >= 111 * (n % 11):\n        print('YES')\n    else:\n        print('NO')", "k = int(input())\nfor i in range(k):\n    n = int(input())\n    if n > 1099:\n        print('YES')\n    else:\n        while True:\n            if n % 11 == 0:\n                print('YES')\n                break\n            n -= 111\n            if n < 0:\n                print('NO')\n                break", "t = int(input())\nfor tc in range(t):\n    x = int(input())\n    if x >= x % 11 * 111:\n        print('YES')\n    else:\n        print('NO')", "import math\nT = int(input())\nfor _ in range(T):\n    k = int(input())\n    if k % 11 > int(k // 111):\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    if n >= 111 * (n % 11):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    if n >= n % 11 * 111:\n        print('YES')\n    else:\n        print('NO')", "[(lambda n: print('YES' if n >= 111 * (n % 11) else 'NO'))(int(input())) for _ in range(int(input()))]", "for _ in range(int(input())):\n    n = int(input())\n    print('YES' if n >= 111 * (n % 11) else 'NO')", "for t in range(int(input())):\n    n = int(input())\n    if n >= 111 * (n % 11):\n        print('YES')\n    else:\n        print('NO')", "for t in range(int(input())):\n    n = int(input())\n    if n >= 111 * (n % 11):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    if n >= 1100:\n        print('YES')\n    else:\n        a = n // 11\n        b = n % 11\n        if b == 0:\n            print('YES')\n        elif a >= 10 and b * 10 <= a:\n            print('YES')\n        else:\n            print('NO')", "from math import *\nfor _ in range(int(input())):\n    n = int(input())\n    if n % 11 * 111 <= n:\n        print('YES')\n    else:\n        print('NO')", "from math import *\nt = int(input())\nfor i in range(t):\n    x = int(input())\n    ans = 'NO'\n    if x >= 1221:\n        ans = 'YES'\n    else:\n        y = x // 111\n        z = x % 11\n        if z <= y:\n            ans = 'YES'\n    print(ans)", "def res(n):\n    a = n % 11\n    if (n - a * 111) % 11 == 0 and a * 111 <= n:\n        return True\n    return False\nt = int(input())\nwhile t > 0:\n    t = t - 1\n    n = int(input())\n    if res(n):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    r = n % 11\n    if r * 111 <= n and (n - r * 111) % 11 == 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    r = n - n % 11 * 111\n    if r >= 0 and r % 11 == 0:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    x = int(input())\n    rem = x - x % 11 * 111\n    if rem >= 0 and rem % 11 == 0:\n        print('YES')\n    else:\n        print('NO')", "check = [False for i in range(1100)]\ncheck[11] = check[111] = True\nfor i in range(12, 1100):\n    check[i] |= check[i - 11] | check[i - 111]\nfor _ in range(int(input())):\n    x = int(input())\n    if x > 1099:\n        print('YES')\n    else:\n        print('YES' if check[x] else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    if n >= 111 * (n % 11):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = n % 11\n    if 111 * x <= n:\n        print('YES')\n    else:\n        print('NO')", "import sys\nimport math\n\ndef check(x):\n    return x % 11 <= x // 111\n\ndef main():\n    stdin = sys.stdin\n    n = int(stdin.readline())\n    for _ in range(n):\n        if check(int(stdin.readline())):\n            print('YES')\n        else:\n            print('NO')\nmain()\n\ndef test_check():\n    for x in range(100):\n        for y in range(100):\n            for z in range(100):\n                if not check(x * 1111 + y * 111 + z * 11):\n                    print(x, y, z)", "[(lambda n: print('YES' if n >= 111 * (n % 11) else 'NO'))(int(input())) for _ in range(int(input()))]", "inp = int(input())\nfor _ in range(inp):\n    n = int(input())\n    if n > 1099:\n        print('YES')\n    elif n >= 111 * (n % 11):\n        print('YES')\n    else:\n        print('NO')", "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    x = int(sys.stdin.readline())\n    data = [111 * j for j in range(11)]\n    flag = 0\n    for item in data:\n        if item > x:\n            break\n        temp = x - item\n        if temp % 11 == 0:\n            flag = 1\n            print('YES')\n            break\n    if flag:\n        continue\n    print('NO')", "j = int(input())\nwhile j > 0:\n    i = int(input())\n    t = i % 11\n    if 111 * t <= i:\n        print('YES')\n    else:\n        print('NO')\n    j = j - 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n >= 1110:\n        print('YES')\n        continue\n    if n % 111 == 0 or n % 11 == 0 or 111 * (n % 11) < n:\n        print('YES')\n    else:\n        print('NO')", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    x = int(sys.stdin.readline())\n    data = [i * 111 for i in range(11)]\n    flag = 0\n    for item in data:\n        temp = x - item\n        if temp < 0:\n            break\n        if temp % 11 == 0:\n            flag = 1\n            break\n    print('YES' if flag else 'NO')", "from collections import deque, Counter\nfrom collections import defaultdict as dfd\nfrom bisect import bisect, bisect_left\nfrom math import sqrt, gcd, ceil, factorial\nfrom heapq import heapify, heappush, heappop\nMOD = 10 ** 9 + 7\ninf = float('inf')\nans_ = []\n\ndef nin():\n    return int(input())\n\ndef ninf():\n    return int(file.readline())\n\ndef st():\n    return input().strip()\n\ndef stf():\n    return file.readline().strip()\n\ndef read():\n    return list(map(int, input().strip().split()))\n\ndef readf():\n    return list(map(int, file.readline().strip().split()))\n\ndef readfl():\n    return list(map(float, input().strip().split()))\n\ndef readffl():\n    return list(map(float, file.readline().strip().split()))\n\ndef solve():\n    for _ in range(nin()):\n        n = nin()\n        fl = 0\n        for i in range(12):\n            if i * 111 <= n and (n - i * 111) % 11 == 0:\n                fl = 1\n        if fl:\n            ans_.append('YES')\n        else:\n            ans_.append('NO')\nsolve()\nfor i in ans_:\n    print(i)", "t = int(input())\nwhile t:\n    n = int(input())\n    if n % 11 * 111 <= n:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "[(lambda n: print('YES' if n >= 111 * (n % 11) else 'NO'))(int(input())) for _ in range(int(input()))]", "def solution():\n    for t in range(int(input())):\n        x = int(input())\n        div = [11, 111]\n        ans = 0\n        if x >= x % div[0] * div[1]:\n            print('YES')\n        else:\n            print('NO')\n    return\nsolution()", "t = int(input())\nfor iasodkja in range(t):\n    n = int(input())\n    a = n % 11\n    ba = n // 11\n    if ba - a * 10 >= 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    if n >= 111 * (n % 11):\n        print('YES')\n    else:\n        print('NO')", "dp = [0] * 1100\nfor i in range(101):\n    for j in range(11):\n        if j * 111 + i * 11 <= 1099:\n            dp[j * 111 + i * 11] = True\n        else:\n            break\nfor _ in range(int(input())):\n    n = int(input())\n    print('YES' if n > 1099 or dp[n] else 'NO')", "t = int(input())\nfor q in range(t):\n    num = int(input())\n    flag = 0\n    while num >= 111:\n        if num % 11 == 0:\n            flag = 1\n            break\n        else:\n            num -= 111\n    if num % 11 == 0:\n        flag = 1\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "[(lambda n: print('YES' if n >= 111 * (n % 11) else 'NO'))(int(input())) for _ in range(int(input()))]", "from collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    if n >= 111 * (n % 11):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n >= 111 * (n % 11):\n        print('YES')\n    else:\n        print('NO')", "MAX = 111 * 11 - 11 - 111\npc = set(filter(lambda x: 0 < x < 111 * 11 - 11 - 111, [a * 11 + b * 111 for a in range(100) for b in range(100)]))\nt = int(input())\nfor _ in range(t):\n    x = int(input())\n    if x > MAX or x in pc:\n        print('YES')\n    else:\n        print('NO')"]