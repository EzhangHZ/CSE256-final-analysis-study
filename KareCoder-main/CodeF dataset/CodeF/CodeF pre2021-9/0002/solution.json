["import sys\ninput = sys.stdin.readline\noutput = sys.stdout.write\n\ndef main():\n    length = int(input().rstrip())\n    for i in range(length):\n        num = input().rstrip()\n        partial = num[1:]\n        lenn = len(partial)\n        if len(num) == 1 or partial == '0' * lenn:\n            output('1' + '\\n')\n            output(num)\n            output('\\n')\n        else:\n            counter = 0\n            st = ''\n            st += num[0] + '0' * lenn\n            counter += 1\n            for j in partial:\n                if j != '0':\n                    st += ' ' + j + '0' * (lenn - 1)\n                    counter += 1\n                lenn -= 1\n            output(str(counter) + '\\n')\n            output(st)\n            output('\\n')\nmain()", "def main():\n    x = int(input())\n    array = [list(str(input())) for _ in range(x)]\n    for j in array:\n        if len(j) - 1 == j.count('0'):\n            print(1)\n            print(''.join(j))\n        else:\n            counter = 0\n            arr = []\n            time_count = 0\n            for test in j:\n                if test != '0':\n                    counter += 1\n                    arr.append(f\"{str(test) + '0' * (len(j) - (time_count + 1))}\")\n                time_count += 1\n            print(counter)\n            print(' '.join(arr))\nmain()", "ans = []\nfor _ in range(int(input())):\n    num = input()\n    l = len(num)\n    tmp = set()\n    for i in range(l):\n        if int(num[i]):\n            tmp.add(num[i] + '0' * (l - 1 - i))\n    ans.extend((len(tmp), ' '.join(tmp)))\nfor a in ans:\n    print(a)", "cases = int(input())\nfull_list = [input() for i in range(cases)]\n\ndef round_finder(full_list):\n    for i in full_list:\n        string_list = [n for n in i]\n        length = len(string_list) - 1\n        x = 0\n        while x < len(string_list):\n            string_list[x] = string_list[x] + length * '0'\n            x += 1\n            length -= 1\n        final_list = [i for i in string_list if int(i) != 0]\n        print(len(final_list))\n        print(' '.join(final_list))\nround_finder(full_list)", "intervals = (10000, 1000, 100, 10, 1)\n\ndef display(seconds):\n    result = []\n    for count in intervals:\n        value = seconds // count\n        if value:\n            seconds -= value * count\n            result.append(f'{value * count}')\n    return result\n\ndef main():\n    n = int(input())\n    lst = []\n    for i in range(n):\n        lst.append(int(input()))\n    for i in lst:\n        answer = display(i)\n        print(len(answer))\n        print(' '.join(answer))\nmain()", "no_of_lines = int(input())\noutput_list = []\nfor j in range(no_of_lines):\n    output_string = ''\n    listt = list(input())\n    lenth = len(listt)\n    koyta = 1\n    for i in range(lenth):\n        if listt[i] != '0':\n            if output_string != '':\n                output_string = output_string + ' '\n                koyta += 1\n            output_string += listt[i] + '0' * (lenth - i - 1)\n    output_list.append(koyta)\n    output_list.append(output_string)\nfor i in output_list:\n    print(i)", "num = int(input())\nfin = ''\nfor i in range(num):\n    cot = 0\n    ans = ''\n    n = int(input())\n    while n != 0:\n        if n % 10 == 0:\n            n = n / 10\n        else:\n            ans += '0' * cot + str(int(n % 10)) + ' '\n            n = n // 10\n        cot += 1\n    fin += str(len(ans[::-1][1:].split(' '))) + '\\n'\n    fin += ans[::-1][1:] + '\\n'\nprint(fin)", "t = int(input())\nq = []\nfor i in range(t):\n    c = input()\n    s = ''\n    j = 0\n    if len(c) == 1 and c != '0':\n        s = s + c[0]\n        q.append(s)\n    else:\n        while j <= len(c) - 2:\n            if c[j] != '0':\n                s = s + c[j] + (len(c) - j - 1) * '0' + ' '\n                j = j + 1\n            else:\n                j = j + 1\n        if c[len(c) - 1] != '0':\n            s = s + c[len(c) - 1]\n        q.append(s)\nfor i in q:\n    if i[len(i) - 1] == ' ':\n        print(len(i[:len(i) - 1].split(' ')))\n        print(i[:len(i) - 1])\n    else:\n        print(len(i.split(' ')))\n        print(i)", "n = int(input())\nl = []\ns = []\nfor i in range(0, n):\n    l.append(input())\nfor i in l:\n    t = 1\n    for j in i:\n        if j != '0':\n            s.append(j + '0' * (len(i) - t))\n            t += 1\n        else:\n            t += 1\n    k = len(s)\n    print(k)\n    print(' '.join(s))\n    s = []", "numbers = [int(input()) for n in range(int(input()))]\nfor k in numbers:\n    (aux, r) = (10, [])\n    n = k\n    while n // aux != 0:\n        if n % aux != 0:\n            r.append(str(n % aux))\n            n -= n % aux\n        aux *= 10\n    r.append(str(n))\n    print(len(r))\n    print(' '.join(r))", "ans = []\nfor _ in range(int(input())):\n    num = input()\n    l = len(num)\n    tmp = set()\n    for i in range(l):\n        if int(num[i]):\n            tmp.add(num[i] + '0' * (l - 1 - i))\n    ans.extend((len(tmp), ' '.join(tmp)))\nfor a in ans:\n    print(a)", "def main():\n    x = int(input())\n    array = [list(str(input())) for _ in range(x)]\n    for j in array:\n        if len(j) - 1 == j.count('0'):\n            print(f\"1\\n{''.join(j)}\")\n        else:\n            arr = []\n            time_count = 0\n            for test in j:\n                if test != '0':\n                    arr.append(f\"{str(test) + '0' * (len(j) - (time_count + 1))}\")\n                time_count += 1\n            print(f\"{str(len(arr))}\\n{' '.join(arr)}\")\nmain()", "ans = []\nfor _ in range(int(input())):\n    num = input()\n    l = len(num)\n    tmp = set()\n    for i in range(l):\n        if int(num[i]):\n            tmp.add(num[i] + '0' * (l - 1 - i))\n    ans.extend((len(tmp), ' '.join(tmp)))\nfor a in ans:\n    print(a)", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    num = list(sys.stdin.readline().strip())\n    nums = []\n    for i in range(len(num) - 1, 0, -1):\n        if num[i] != '0':\n            nums.append(''.join(num[i:]))\n            num[i] = '0'\n    nums.append(''.join(num))\n    print(len(nums))\n    print(' '.join(nums))", "def snake():\n    a = input()\n    list_1 = []\n    output_list = []\n    for i in range(int(a)):\n        a = input()\n        a = a[::-1]\n        numb_digits = len(a)\n        count = 0\n        appending_str = ''\n        for (loc, i) in enumerate(a):\n            if not i == '0':\n                count += 1\n                appending_str += i + '0' * loc + ' '\n        output_list.append(str(count) + '\\n' + appending_str)\n    print('\\n'.join(output_list))\nsnake()", "def main():\n    t = int(input())\n    cases = [input() for i in range(t)]\n    for n in cases:\n        nor = []\n        for (idx, char) in enumerate(n):\n            if char == '0':\n                pass\n            else:\n                nor.append(idx)\n        k = []\n        for idx in nor:\n            k.append(f\"{n[idx]}{'0' * (len(n) - 1 - idx)}\")\n        print(len(k))\n        print(' '.join(k))\nmain()", "import sys\nimport typing\nfrom typing import Callable, Dict, List, Set, Tuple\nsys.setrecursionlimit(10 ** 6)\nVec = List[int]\nVecVec = List[Vec]\nsinput: Callable[..., str] = sys.stdin.readline\nMOD: int = 998244353\nINF: float = float('Inf')\nIINF: int = sys.maxsize // 2\n\ndef main() -> None:\n    n = sinput().strip()[::-1]\n    ans = []\n    for (i, d) in enumerate(n):\n        if d == '0':\n            continue\n        ans.append(d + '0' * i)\n    print(len(ans))\n    print(*ans)\nt = int(sinput())\nfor _ in range(t):\n    main()", "t = int(input())\nmas = []\nfor i in range(t):\n    mas.append(input())\n\ndef Split(n):\n    s = []\n    for i in range(len(n)):\n        if n[i] != '0':\n            s.append(n[i] + '0' * (len(n) - i - 1))\n    return s\nout = []\nfor i in range(t):\n    out.append(Split(mas[i]))\nfor i in range(t):\n    print(len(out[i]))\n    s = ''\n    for p in out[i]:\n        s += p + ' '\n    print(s)", "def solve():\n    n = int(input())\n    e = []\n    for i in range(0, len(str(n)) - 1):\n        if str(n)[i] != '0':\n            e.append(str(n)[i] + '0' * (len(str(n)) - i - 1))\n    if str(n)[-1] != '0':\n        e.append(str(n)[-1])\n    return str(len(e)) + '\\n' + ' '.join(e)\nt = int(input())\nans = []\nwhile t:\n    ans.append(str(solve()))\n    t -= 1\nprint('\\n'.join(ans))", "n = int(input())\nlista = []\nfor i in range(n):\n    lista.append(int(input()))\n\ndef descompo_b10(number):\n    lis = []\n    cont = 0\n    while number != 0:\n        valor = number % 10 * 10 ** cont\n        number = number // 10\n        if valor != 0:\n            lis.append(valor)\n        cont += 1\n    return lis\nfor num in lista:\n    suma = descompo_b10(num)\n    print(len(suma))\n    print(' '.join(map(str, suma)))", "def solve():\n    a = input()\n    l = len(a) - 1\n    ans = 0\n    L = []\n    for c in a:\n        if c != '0':\n            ans += 1\n            L.append(c + '0' * l)\n        l -= 1\n    print(ans)\n    for c in L:\n        print(c, end=' ')\n    print('')\nfor _ in range(int(input())):\n    solve()", "T = int(input())\nfor i in range(T):\n    s = list(input())\n    p = s.count('0')\n    q = len(s)\n    l = []\n    k = 0\n    for j in range(q):\n        if s[j] != '0':\n            l.append(s[j] + '0' * (q - j - 1))\n        else:\n            continue\n    print(len(l))\n    print(*l)", "for i in range(int(input())):\n    res = ''\n    input2 = input()\n    a = '0' * (len(str(input2)) - 1)\n    if str(input2)[1:] == a:\n        res += str(input2)\n    elif len(input2) == 2:\n        res += str(int(input2[0]) * 10) + ' ' + str(int(input2[1]))\n    elif len(input2) == 3:\n        res += str(int(input2[0]) * 100) + ' ' + str(int(input2[1]) * 10) + ' ' + str(input2[2])\n    elif len(input2) == 4:\n        res += str(int(input2[0]) * 1000) + ' ' + str(int(input2[1]) * 100) + ' ' + str(int(input2[2]) * 10) + ' ' + str(input2[3])\n    elif len(input2) == 5:\n        res += str(int(input2[0]) * 10000) + ' ' + str(int(input2[1]) * 1000) + ' ' + str(int(input2[2]) * 100) + ' ' + str(int(input2[3]) * 10) + ' ' + str(input2[4])\n    res = res.split()\n    cnt = 0\n    res1 = ''\n    for j in res:\n        if j == '0':\n            pass\n        else:\n            res1 += j + ' '\n            cnt += 1\n    print(cnt)\n    print(res1)", "ans = []\nfor _ in range(int(input())):\n    n = int(input())\n    if n == 1 or n == 2 or n == 3 or (n == 4) or (n == 5) or (n == 6) or (n == 7) or (n == 8) or (n == 9):\n        ans.append(1)\n        ans.append(n)\n        continue\n    s = 0\n    p = []\n    t = len(str(n))\n    for i in range(t):\n        mod = n % 10 ** (i + 1)\n        n = n - mod\n        if mod != 0:\n            s += 1\n            p.append(mod)\n    ans.append(1 if s == 0 else s)\n    ans.append(p)\nfor i in ans:\n    if isinstance(i, list):\n        for x in i:\n            print(x, end=' ')\n        print()\n    else:\n        print(i)", "n = int(input())\nfor i in range(n):\n    a = list(input())\n    b = []\n    for i in range(len(a)):\n        c = []\n        if a[i] != '0':\n            c.append(str(a[i]))\n            c.append('0' * (len(a) - i - 1))\n            b.append(''.join(c))\n    print(len(b))\n    print(' '.join(b))", "t = int(input())\nfor tc in range(t):\n    n = input()\n    result = []\n    for i in range(len(n)):\n        if n[i] == '0':\n            continue\n        result.append(n[i] + '0' * (len(n) - 1 - i))\n    print(len(result))\n    print(*result)", "n = int(input())\nv = 0\nwhile v < n:\n    d = ''\n    (c, a) = (0, 0)\n    s = input()\n    le = len(s)\n    for i in s:\n        a += 1\n        if int(i + '0' * (le - a)) != 0:\n            d += str(i + '0' * (le - a) + ' ')\n            c += 1\n    d = d[0:-1]\n    print(c)\n    print(d)\n    v += 1", "n = int(input())\nrem = 0\nfor i in range(n):\n    l = []\n    m = int(input())\n    for i in range(len(str(m))):\n        rem = m % 10\n        k = rem * pow(10, i)\n        m = m // 10\n        if k != 0:\n            l.append(k)\n    print(len(l))\n    print(' '.join(map(str, l)))", "for _ in range(int(input())):\n    n = int(input())\n    (l, t) = ([], 1)\n    for i in str(n)[::-1]:\n        s = int(i) * t\n        if s:\n            l.append(s)\n        t *= 10\n    print(len(l))\n    print(*l)", "for _ in range(int(input())):\n    (n, c, ls) = (input(), 0, [])\n    for i in range(1, len(n)):\n        if n[i] != '0':\n            ls.append(n[c] + '0' * (len(n) - c - 1))\n            c = i\n    ls.append(n[c] + '0' * (len(n) - c - 1))\n    print(len(ls))\n    print(*ls)", "t = int(input())\nfor i in range(t):\n    n = input()\n    k = len(n) - n.count('0')\n    print(k)\n    ans = []\n    for j in range(len(n)):\n        if n[j] == '0':\n            continue\n        else:\n            ans.append(n[j] + (len(n) - j - 1) * '0')\n    print(*ans)", "t = int(input())\nfor _ in range(t):\n    n = input()\n    length = len(n)\n    n = int(n)\n    st = ''\n    count = 0\n    for j in range(length):\n        mo = n % 10 ** (j + 1)\n        if mo == 0:\n            continue\n        st = f'{mo} ' + st\n        n -= mo\n        count += 1\n    print(count)\n    print(st)", "for _ in range(int(input())):\n    n = int(input())\n    a = []\n    if n >= 1000:\n        r = n % 1000\n        a.append(n - r)\n        n %= 1000\n    if n >= 100:\n        r = n % 100\n        a.append(n - r)\n        n %= 100\n    if n >= 10:\n        r = n % 10\n        a.append(n - r)\n        n %= 10\n    if n >= 0:\n        a.append(n)\n    if 0 in a:\n        a.remove(0)\n    print(len(a))\n    print(*a)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    integers = 0\n    l = []\n    if n // 10000 >= 1:\n        l.append(10000 * (n // 10000))\n        n -= 10000 * (n // 10000)\n        integers += 1\n    if n // 1000 >= 1:\n        l.append(1000 * (n // 1000))\n        n -= 1000 * (n // 1000)\n        integers += 1\n    if n // 100 >= 1:\n        l.append(100 * (n // 100))\n        n -= 100 * (n // 100)\n        integers += 1\n    if n // 10 >= 1:\n        l.append(10 * (n // 10))\n        n -= 10 * (n // 10)\n        integers += 1\n    if n > 0:\n        integers += 1\n        l.append(n)\n    l = str(l)\n    l = l.replace('[', '')\n    l = l.replace(']', '')\n    l = l.replace(',', '')\n    print(integers)\n    print(l)", "t = int(input())\nwhile t:\n    t -= 1\n    l = []\n    n = int(input())\n    x = str(n)\n    leng = len(x)\n    l = [int(x[i]) * 10 ** (leng - (i + 1)) for i in range(leng) if x[i] != '0']\n    print(len(l))\n    print(' '.join(map(str, l)))", "for x in range(int(input())):\n    n = input()\n    l = []\n    for i in range(len(n)):\n        if n[i] != '0':\n            l.append(str(n[i] + '0' * (len(n) - i - 1)))\n    print(len(l))\n    print(*l)", "t = int(input())\nfor _ in range(t):\n    q = 1\n    n = int(input())\n    res = []\n    while n > 0:\n        if n % 10:\n            res.append(n % 10 * q)\n        q *= 10\n        n //= 10\n    print(len(res))\n    print(*res)", "T = int(input())\nfor tc in range(T):\n    n = input()\n    n = n[::-1]\n    l1 = []\n    for i in range(len(n)):\n        if int(n[i]) > 0:\n            l1.append(int(n[i]) * 10 ** i)\n    print(len(l1))\n    print(*l1)", "def sumOfRoundNumbers():\n    n = int(input())\n    for i in range(n):\n        number = input()\n        res = ''\n        count = 0\n        lengthOfNumber = len(number)\n        for i in range(lengthOfNumber):\n            if number[i] != '0':\n                res += str(int(number[i]) * 10 ** (lengthOfNumber - 1 - i)) + ' '\n                count += 1\n        print(count)\n        print(res)\n    return\nsumOfRoundNumbers()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = []\n    pos = 1\n    while n:\n        rem = n % 10\n        if rem != 0:\n            l.append(rem * pos)\n        pos *= 10\n        n //= 10\n    print(len(l))\n    print(*l)", "for _ in range(int(input())):\n    a = input()\n    out = []\n    j = 0\n    count = 0\n    for i in a[::-1]:\n        if i != '0':\n            count += 1\n            out.append(int(i + '0' * j))\n        j += 1\n    print(count)\n    print(*out)", "n = int(input())\na = []\nfor i in range(n):\n    k = int(input())\n    n = 0\n    t = 0\n    text = ''\n    while k >= 1:\n        if k % 10 != 0:\n            text = text + str(k % 10 * 10 ** t) + ' '\n            n += 1\n        k = k // 10\n        t += 1\n    print(n)\n    print(text)", "def sol(n):\n    if len(n) == 1:\n        k = 1\n    else:\n        k = len(n) - n.count('0')\n    ans = []\n    for i in range(len(n)):\n        if n[i] != '0':\n            ans.append(n[i] + '0' * (len(n) - i - 1))\n    print(k)\n    print(*ans)\nfor i in range(int(input())):\n    sol(str(input()))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    my = []\n    if n % 10 != 0:\n        my.append(n % 10)\n    ans = n % 10\n    n -= ans\n    if n % 100 != 0:\n        my.append(n % 100)\n    ans = n % 100\n    n -= ans\n    if n % 1000 != 0:\n        my.append(n % 1000)\n    ans = n % 1000\n    n -= ans\n    if n % 10000 != 0:\n        my.append(n % 10000)\n    if n >= 10000 and n % 10000 == 0:\n        my.append(n)\n    print(len(my))\n    for i in my:\n        print(i, end=' ')\n    print()", "for _ in range(int(input())):\n    n = input()\n    l = len(n)\n    c = n.count('0')\n    x = l - c\n    if x == 1 and n[0] != '0':\n        print(1)\n        print(n)\n    elif c == 0:\n        a = []\n        for i in range(l):\n            a.append(n[i] + (l - (i + 1)) * '0')\n        print(len(a))\n        print(*a)\n    else:\n        a = []\n        for i in range(l):\n            if n[i] != '0':\n                if l - i == 1:\n                    a.append(n[i])\n                else:\n                    vr = n[i] + (l - (i + 1)) * '0'\n                    a.append(vr)\n            elif n[i] == '0':\n                pass\n        print(len(a))\n        print(*a)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    summands = []\n    divisor = 1\n    while n > 0:\n        num = n % 10\n        if num > 0:\n            summands.append(num * divisor)\n        n //= 10\n        divisor *= 10\n    print(len(summands))\n    print(*reversed(summands))", "from sys import stdin\n\ndef main():\n    readline = stdin.readline\n    t = int(readline())\n    res = []\n    for i in range(t):\n        n = readline().strip()\n        li = []\n        for i in range(len(n)):\n            if n[i] == '0':\n                pass\n            else:\n                s = n[i] + '0' * (len(n) - i - 1)\n                li.append(s)\n        res.append(li)\n    for i in range(t):\n        print(len(res[i]))\n        print(*res[i])\nmain()", "def met(a):\n    for k in a:\n        r = []\n        i = 0\n        while k != 0:\n            if k % 10 != 0:\n                r.append(str(k % 10 * 10 ** i))\n            i += 1\n            k = k // 10\n        print(len(r))\n        print(' '.join(r))\nn = int(input())\na = []\nfor i in range(n):\n    a.append(int(input()))\nmet(a)", "def main():\n    ans = ''\n    for _ in range(int(input())):\n        x = list(input())\n        l = len(x)\n        arr = []\n        for (i, xi) in enumerate(x):\n            if xi != '0':\n                arr.append(str(int(xi) * 10 ** (l - i - 1)))\n        ans += f\"{len(arr)}\\n{' '.join(arr)}\\n\"\n    print(ans)\nmain()", "n = input()\nn = int(n)\narr = [input() for i in range(n)]\nfor el in arr:\n    testel = str(el)\n    m = len(testel)\n    thisans = [str(int(testel[m - 1 - i]) * 10 ** i) for i in range(m) if int(testel[m - 1 - i]) > 0]\n    print(len(thisans))\n    thisansmod = ' '.join(thisans)\n    print(thisansmod)", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    res = []\n    n = int(sys.stdin.readline())\n    z = str(n)\n    length = len(z)\n    for r in z:\n        if r == '0':\n            pass\n        else:\n            k = r + '0' * (length - 1)\n            res.append(k)\n        length -= 1\n    print(len(res))\n    print(*res)", "t = int(input())\nn = t * [0]\nl = ''\nflag = 0\nf = 0\nfor i in range(t):\n    n[i] = str(int(input()))\nfor i in n:\n    flag = 0\n    l = ''\n    f = len(i) - 1\n    for j in i:\n        if j != '0':\n            flag += 1\n            l += j + f * '0' + ' '\n        f -= 1\n    print(flag)\n    print(l)", "import sys\n\ndef get_round_numbers(num):\n    d = len(num)\n    result = set()\n    for x in num:\n        d = d - 1\n        y = 10 ** d\n        result.add(int(x) * y)\n    if 0 in result:\n        result.remove(0)\n    return result\ndata = [i.strip() for i in sys.stdin.readlines()]\nfor i in range(len(data)):\n    if i:\n        num = data[i]\n        result = get_round_numbers(num)\n        print(len(result))\n        print(' '.join([str(i) for i in result]))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = input()\n    l = []\n    for i in range(len(n) - 1):\n        if int(n[i]) != 0:\n            l.append(str(int(n[i]) * 10 ** (len(n) - 2 - i)))\n    print(len(l))\n    print(' '.join(l))", "def main():\n    n = int(input())\n    arr = []\n    for i in range(n):\n        arr.append(int(input()))\n    vals = []\n    for i in arr:\n        (res, ind) = ([], 0)\n        x = i\n        while x >= 1:\n            rest = x % 10\n            x = x // 10\n            if rest == 0:\n                ind += 1\n                continue\n            res.append(rest * pow(10, ind))\n            ind += 1\n        print(len(res))\n        print(' '.join((str(x) for x in res)))\nmain()", "def solve_task(n):\n    if n == '0':\n        return ['0']\n    if len(n) == 1:\n        return [n]\n    res = []\n    for i in range(len(n)):\n        if n[-1 - i] != '0':\n            res.append(str(n[-1 - i]) + '0' * i)\n    return res\n\ndef main():\n    n_test = int(input())\n    solutions = []\n    for nt in range(n_test):\n        solutions.append(solve_task(str(input())))\n    for s in solutions:\n        print(len(s))\n        res = ' '.join(s)\n        print(res)\nmain()", "ZERO = '0'\nnumbers_count = int(input())\nnumbers = [input() for i in range(0, numbers_count)]\nfor number in numbers:\n    terms = []\n    number_len = len(number)\n    for digit in number:\n        number_len -= 1\n        if digit == ZERO:\n            continue\n        terms.append(f'{digit}{ZERO * number_len}')\n    print(len(terms))\n    print(' '.join(terms))", "x = int(input())\nr = [input() for i in range(x)]\nfor l in r:\n    p = []\n    for i in range(len(l)):\n        if l[i] != '0':\n            p.append(l[i] + '0' * (len(l) - i - 1))\n    print(len(p))\n    print(*p)", "import sys\n\ndef number_to_summands(number_str):\n    summands = set()\n    for i in range(len(number_str)):\n        if number_str[i] != '0':\n            summand = '{}{}'.format(number_str[i], '0' * len(number_str[i + 1:]))\n            summands.add(summand)\n    return summands\nlines = sys.stdin.read().split()\nk = int(lines[0])\nresults = [number_to_summands(number) for number in lines[1:]]\nfor summands in results:\n    print(len(summands))\n    print(' '.join(summands))", "t = int(input())\na = []\nfor i in range(t):\n    i = int(input())\n    a.append(i)\nfor i in a:\n    k = 0\n    b = []\n    n1 = i // 1000 * 1000\n    if n1 != 0:\n        k += 1\n    n2 = i % 1000 // 100 * 100\n    if n2 != 0:\n        k += 1\n    n3 = i % 1000 % 100 // 10 * 10\n    if n3 != 0:\n        k += 1\n    n4 = i % 1000 % 100 % 10\n    if n4 != 0:\n        k += 1\n    print(k)\n    c = [n1, n2, n3, n4]\n    for i in c:\n        if i != 0:\n            b.append(i)\n    print(' '.join(map(str, b)))", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef solve(arr):\n    res = []\n    for a in arr:\n        n = a\n        l = len(str(a))\n        i = 1\n        r = []\n        while i < l + 1:\n            t = 10 ** i\n            if n % t != 0:\n                r.append(n % t)\n                n = n - n % t\n            i += 1\n        res.append(r)\n    return res\nn = inp()\narr = []\nfor i in range(n):\n    arr.append(inp())\nres = solve(arr)\nfor r in res:\n    print(len(r))\n    print(' '.join(map(str, r)))", "t = int(input())\nansw = []\nfor i in range(t):\n    n = input()\n    a = int(len(n) - n.count('0'))\n    k = len(n)\n    h = ''\n    for j in range(k):\n        if n[j] != '0':\n            if j == k - 1:\n                h += str(int(n[j]) * 10 ** (k - j - 1))\n            else:\n                h += str(int(n[j]) * 10 ** (k - j - 1)) + ' '\n    h = h.strip()\n    answ.append(a)\n    answ.append(h)\nfor i in range(len(answ)):\n    print(answ[i])", "import sys\nI = sys.stdin.readline\npr = sys.stdout.write\n\ndef main():\n    for _ in range(int(I())):\n        n = I()\n        s = list(str(n))\n        l = len(s) - 1\n        c = s.count('0')\n        pr(f'{l - c}\\n')\n        for (i, x) in enumerate(s[:l]):\n            if x != '0':\n                pr(f'{int(x) * 10 ** (l - i - 1)} ')\n        pr('\\n')\nmain()", "for t in range(int(input())):\n    n = input()\n    x = len(n) - 1\n    p = 10 ** x\n    r = []\n    for i in n:\n        ans = int(i) * p\n        if ans != 0:\n            r.append(ans)\n        p //= 10\n    print(len(r))\n    print(*r, sep=' ')"]