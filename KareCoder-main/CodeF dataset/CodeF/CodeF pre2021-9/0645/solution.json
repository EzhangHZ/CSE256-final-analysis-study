["def merge(x, y, c):\n    N = len(x)\n    n = N // 2\n    ans = ''\n    (i, j) = (0, 0)\n    while i < N and j < N:\n        if x[i] == y[j]:\n            ans += x[i]\n            i += 1\n            j += 1\n        elif x[i] != c:\n            ans += x[i]\n            i += 1\n        else:\n            ans += y[j]\n            j += 1\n    ans += x[i:] + y[j:]\n    ans += '0' * (3 * n - len(ans))\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    S = [input(), input(), input()]\n    C0 = [j for j in range(3) if S[j].count('0') >= n]\n    if len(C0) >= 2:\n        print(merge(S[C0[0]], S[C0[1]], '0'))\n    else:\n        C1 = [j for j in range(3) if j not in C0]\n        print(merge(S[C1[0]], S[C1[1]], '1'))", "def merge(x, y, c):\n    N = len(x)\n    n = N // 2\n    ans = ''\n    (i, j) = (0, 0)\n    while i < N and j < N:\n        if x[i] == y[j]:\n            ans += x[i]\n            i += 1\n            j += 1\n        elif x[i] != c:\n            ans += x[i]\n            i += 1\n        else:\n            ans += y[j]\n            j += 1\n    ans += x[i:] + y[j:]\n    ans += '0' * (3 * n - len(ans))\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    S = [input(), input(), input()]\n    C0 = [j for j in range(3) if S[j].count('0') >= n]\n    if len(C0) >= 2:\n        print(merge(S[C0[0]], S[C0[1]], '0'))\n    else:\n        C1 = [j for j in range(3) if j not in C0]\n        print(merge(S[C1[0]], S[C1[1]], '1'))", "def merge(x, y, c):\n    N = len(x)\n    n = N // 2\n    ans = ''\n    (i, j) = (0, 0)\n    while i < N and j < N:\n        if x[i] == y[j]:\n            ans += x[i]\n            i += 1\n            j += 1\n        elif x[i] != c:\n            ans += x[i]\n            i += 1\n        else:\n            ans += y[j]\n            j += 1\n    ans += x[i:] + y[j:]\n    ans += '0' * (3 * n - len(ans))\n    return ans\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    S = [input(), input(), input()]\n    C0 = [j for j in range(3) if S[j].count('0') >= n]\n    if len(C0) >= 2:\n        print(merge(S[C0[0]], S[C0[1]], '0'))\n    else:\n        C1 = [j for j in range(3) if j not in C0]\n        print(merge(S[C1[0]], S[C1[1]], '1'))", "class Fmt:\n\n    def __init__(self):\n        a = input()\n        self.str = a\n        self.len = len(a)\n        self.cnt_0 = sum([1 for i in a if i == '0'])\n        self.cnt_1 = self.len - self.cnt_0\n\n    def __getitem__(self, item):\n        return self.str[item]\n\ndef color(a, b, n):\n    if a.cnt_0 >= n and b.cnt_0 >= n:\n        return '0'\n    if a.cnt_1 >= n and b.cnt_1 >= n:\n        return '1'\n    return -1\n\ndef combine(a, b, c):\n    result = []\n    i = 0\n    j = 0\n    n = a.len\n    while i < n or j < n:\n        if i == n:\n            result.append(b[j])\n            j += 1\n        elif j == n:\n            result.append(a[i])\n            i += 1\n        elif a[i] == b[j]:\n            result.append(a[i])\n            i += 1\n            j += 1\n        elif a[i] != c:\n            result.append(a[i])\n            i += 1\n        else:\n            result.append(b[j])\n            j += 1\n    return ''.join(result)\n\ndef run():\n    n = int(input())\n    S = [Fmt() for i in range(3)]\n    for i in range(3):\n        for j in range(3):\n            if i != j and color(S[i], S[j], n) != -1:\n                return combine(S[i], S[j], color(S[i], S[j], n))\ntest = int(input())\nwhile test > 0:\n    test -= 1\n    print(run())", "from sys import stdin\ninput = stdin.readline\n\ndef good(a, b, ch):\n    (cnt1, cnt2) = (0, 0)\n    n = len(a)\n    for i in range(n):\n        if a[i] == ch:\n            cnt1 += 1\n        if b[i] == ch:\n            cnt2 += 1\n    (i, j) = (0, 0)\n    ans = ''\n    if min(cnt1, cnt2) >= n // 2:\n        while i < n and j < n:\n            if a[i] == b[j] == ch:\n                ans += ch\n                i += 1\n                j += 1\n            else:\n                if a[i] != ch:\n                    ans += a[i]\n                    i += 1\n                if b[j] != ch:\n                    ans += b[j]\n                    j += 1\n    while i < n:\n        ans += a[i]\n        i += 1\n    while j < n:\n        ans += b[j]\n        j += 1\n    if len(ans) <= n // 2 * 3:\n        print(ans)\n        return True\n    else:\n        return False\n\ndef f(b, n):\n    lst = [(b[0], b[1]), (b[0], b[2]), (b[1], b[2])]\n    for i in lst:\n        x = good(i[0], i[1], '1')\n        if x:\n            return ''\n        x = good(i[0], i[1], '0')\n        if x:\n            return ''\nfor i in range(int(input())):\n    n = int(input())\n    b = []\n    for j in range(3):\n        b.append(input().strip())\n    print(f(b, n))", "import sys, os.path\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nfor _ in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    c = input()\n    s = []\n    ind = [0, 0, 0]\n    while ind[0] < 2 * n and ind[1] < 2 * n and (ind[2] < 2 * n):\n        f = [False, False, False]\n        if a[ind[0]] == '1':\n            f[0] = True\n        if b[ind[1]] == '1':\n            f[1] = True\n        if c[ind[2]] == '1':\n            f[2] = True\n        if sum(f) > 1:\n            s.append('1')\n            for i in range(3):\n                if f[i]:\n                    ind[i] += 1\n        else:\n            s.append('0')\n            for i in range(3):\n                if not f[i]:\n                    ind[i] += 1\n    if ind[0] != 2 * n and 2 * n - ind[0] <= 3 * n - len(s):\n        for i in range(ind[0], len(a)):\n            s.append(a[i])\n    if ind[1] != 2 * n and 2 * n - ind[1] <= 3 * n - len(s):\n        for i in range(ind[1], len(b)):\n            s.append(b[i])\n    if ind[2] != 2 * n and 2 * n - ind[2] <= 3 * n - len(s):\n        for i in range(ind[2], len(c)):\n            s.append(c[i])\n    print(''.join(s))"]