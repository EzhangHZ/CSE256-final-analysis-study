["from math import log2\nfor t in range(int(input())):\n    (n, m) = map(int, input().split())\n    c = [0] * 61\n    s = 0\n    for x in map(int, input().split()):\n        c[int(log2(x))] += 1\n        s += x\n    if s < n:\n        print(-1)\n        continue\n    (i, res) = (0, 0)\n    while i < 60:\n        if 1 << i & n != 0:\n            if c[i] > 0:\n                c[i] -= 1\n            else:\n                while i < 60 and c[i] == 0:\n                    i += 1\n                    res += 1\n                c[i] -= 1\n                continue\n        c[i + 1] += c[i] // 2\n        i += 1\n    print(res)", "from math import log2\nfor t in range(int(input())):\n    (n, m) = map(int, input().split())\n    c = [0] * 61\n    s = 0\n    for x in map(int, input().split()):\n        c[int(log2(x))] += 1\n        s += x\n    if s < n:\n        print(-1)\n        continue\n    (i, res) = (0, 0)\n    while i < 60:\n        if 1 << i & n != 0:\n            if c[i] > 0:\n                c[i] -= 1\n            else:\n                while i < 60 and c[i] == 0:\n                    i += 1\n                    res += 1\n                c[i] -= 1\n                continue\n        c[i + 1] += c[i] // 2\n        i += 1\n    print(res)", "from math import *\nout = []\nfor _ in range(int(input())):\n    ans = 0\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    arr = [0] * 64\n    for i in a:\n        arr[int(log(i, 2))] += 1\n    i = 0\n    while n > 0:\n        if n & 1 == 1:\n            if arr[i] >= 1:\n                arr[i] -= 1\n            else:\n                j = i\n                while j < 64 and arr[j] == 0:\n                    j += 1\n                if j == 64:\n                    ans = -1\n                    break\n                else:\n                    ans += j - i\n                    arr[j] -= 1\n                    arr[i] += 2 ** (j - i) - 1\n        if i < 63:\n            arr[i + 1] += arr[i] // 2\n        i += 1\n        n = n >> 1\n    out.append(str(ans))\nprint('\\n'.join(out))", "from math import log2\nfor t in range(int(input())):\n    (n, m) = map(int, input().split())\n    c = [0] * 61\n    s = 0\n    for x in map(int, input().split()):\n        c[int(log2(x))] += 1\n        s += x\n    if s < n:\n        print(-1)\n        continue\n    (i, res) = (0, 0)\n    while i < 60:\n        if 1 << i & n != 0:\n            if c[i] > 0:\n                c[i] -= 1\n            else:\n                while i < 60 and c[i] == 0:\n                    i += 1\n                    res += 1\n                c[i] -= 1\n                continue\n        c[i + 1] += c[i] // 2\n        i += 1\n    print(res)", "import sys\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nns = lambda : readline().rstrip()\nni = lambda : int(readline().rstrip())\nnm = lambda : map(int, readline().split())\nnl = lambda : list(map(int, readline().split()))\nprn = lambda x: print(*x, sep='\\n')\n\ndef solve():\n    (n, k) = nm()\n    a = nl()\n    if sum(a) < n:\n        print(-1)\n        return\n    g = [0] * 80\n    ans = 0\n    for x in a:\n        g[x.bit_length() - 1] += 1\n    for i in range(64):\n        if n & 1 << i:\n            if not g[i]:\n                for j in range(i + 1, 64):\n                    if g[j]:\n                        ans += j - i\n                        for u in range(i, j):\n                            g[u] += 1\n                        g[j] -= 1\n                        break\n            g[i] -= 1\n        g[i + 1] += g[i] // 2\n    print(ans)\n    return\nT = ni()\nfor _ in range(T):\n    solve()", "table = {1 << i: i for i in range(64)}\nfor _ in range(int(input())):\n    (big, n) = map(int, input().split())\n    pows = list(map(int, input().split()))\n    bits = [0] * 65\n    for p in pows:\n        bits[table[p]] += 1\n    ans = 0\n    for i in range(64):\n        bits[i] += bits[i - 1] // 2\n        if big % 2:\n            if bits[i] > 0:\n                bits[i] -= 1\n            else:\n                for j in range(i, 64):\n                    if bits[j] != 0:\n                        bits[j] -= 1\n                        for k in range(j - 1, i - 1, -1):\n                            bits[k] += 1\n                            ans += 1\n                        break\n                if j == 63:\n                    ans = -1\n                    break\n        big //= 2\n    print(ans)", "import math\nt = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    if sum(a) < n:\n        print(-1)\n        continue\n    bitarr = [0] * 60\n    for x in a:\n        bitarr[int(math.log2(x))] += 1\n    n = bin(n)[2:]\n    i = len(n) - 1\n    j = 0\n    val = 0\n    while i >= 0:\n        if n[i] == '0':\n            bitarr[j + 1] += bitarr[j] // 2\n            bitarr[j] %= 2\n            j += 1\n        elif n[i] == '1' and bitarr[j] >= 1:\n            bitarr[j] -= 1\n            bitarr[j + 1] += bitarr[j] // 2\n            bitarr[j] %= 2\n            j += 1\n        else:\n            temp = j + 1\n            while 1:\n                if bitarr[temp] >= 1:\n                    break\n                else:\n                    temp += 1\n            val += temp - j\n            bitarr[temp] -= 1\n            temp -= 1\n            while temp != j:\n                bitarr[temp] += 1\n                temp -= 1\n            bitarr[j] += 2\n            bitarr[j] -= 1\n            bitarr[j + 1] += bitarr[j] // 2\n            bitarr[j] %= 2\n            j += 1\n        i -= 1\n    print(val)", "def solve(n, arr):\n    if sum(arr) < n:\n        return -1\n    m = len(arr)\n    bits = [0] * 61\n    for num in arr:\n        bits[num.bit_length() - 1] += 1\n    i = 0\n    l = n.bit_length()\n    res = 0\n    while i < l:\n        if n >> i & 1:\n            if bits[i]:\n                bits[i] -= 1\n            else:\n                while bits[i] == 0:\n                    i += 1\n                    res += 1\n                bits[i] -= 1\n                continue\n        bits[i + 1] += bits[i] >> 1\n        i += 1\n    return res\ntests = int(input())\nfor _ in range(tests):\n    (n, m) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    print(solve(n, arr))", "from math import log2\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    c = [0] * 61\n    total = 0\n    for x in map(int, input().split()):\n        c[int(log2(x))] += 1\n        total += x\n    if total < n:\n        print(-1)\n    else:\n        (i, ans) = (0, 0)\n        while i < 60:\n            if 1 << i & n != 0:\n                if c[i] > 0:\n                    c[i] -= 1\n                else:\n                    while i < 60 and c[i] == 0:\n                        i += 1\n                        ans += 1\n                    c[i] -= 1\n                    continue\n            c[i + 1] += c[i] // 2\n            i += 1\n        print(ans)", "import math\nnum = int(input())\nfor _ in range(num):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    s = str(bin(n))[2:]\n    s = s[::-1]\n    ans = 0\n    goukei = 0\n    powlist = [0 for i in range(100)]\n    for i in a:\n        powlist[math.floor(math.log2(i))] += 1\n    if n > sum(a):\n        print(-1)\n        continue\n    for (i, x) in enumerate(s):\n        b = powlist[i] * 2 ** i\n        goukei += b\n        if x == '0':\n            continue\n        if goukei < 2 ** i:\n            pos = i\n            while 1:\n                powlist[pos] += 1\n                pos += 1\n                ans += 1\n                if powlist[pos] > 0:\n                    powlist[pos] -= 1\n                    break\n            goukei += 2 ** i\n        else:\n            goukei -= 2 ** i\n    print(ans)", "from math import log2\nfor t in range(int(input())):\n    (n, m) = map(int, input().split())\n    c = [0] * 61\n    s = 0\n    for x in map(int, input().split()):\n        c[int(log2(x))] += 1\n        s += x\n    if s < n:\n        print(-1)\n        continue\n    (i, res) = (0, 0)\n    while i < 60:\n        if 1 << i & n != 0:\n            if c[i] > 0:\n                c[i] -= 1\n            else:\n                while i < 60 and c[i] == 0:\n                    i += 1\n                    res += 1\n                c[i] -= 1\n                continue\n        c[i + 1] += c[i] // 2\n        i += 1\n    print(res)", "from math import log2\nfor t in range(int(input())):\n    (n, m) = map(int, input().split())\n    c = [0] * 61\n    s = 0\n    for x in map(int, input().split()):\n        c[int(log2(x))] += 1\n        s += x\n    if s < n:\n        print(-1)\n        continue\n    (i, res) = (0, 0)\n    while i < 60:\n        if 1 << i & n != 0:\n            if c[i] > 0:\n                c[i] -= 1\n            else:\n                while i < 60 and c[i] == 0:\n                    i += 1\n                    res += 1\n                c[i] -= 1\n                continue\n        c[i + 1] += c[i] // 2\n        i += 1\n    print(res)", "from math import log2\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    bit = [0] * 61\n    sum = 0\n    for x in map(int, input().split()):\n        bit[int(log2(x))] += 1\n        sum += x\n    if sum < n:\n        print(-1)\n        continue\n    else:\n        (index, res) = (0, 0)\n        while index < 60:\n            if 1 << index & n != 0:\n                if bit[index] > 0:\n                    bit[index] -= 1\n                else:\n                    while index < 60 and bit[index] == 0:\n                        index += 1\n                        res += 1\n                    bit[index] -= 1\n                    continue\n            bit[index + 1] += bit[index] // 2\n            index += 1\n    print(res)", "from math import log2\nfor t in range(int(input())):\n    (n, m) = map(int, input().split())\n    c = [0] * 61\n    s = 0\n    for x in map(int, input().split()):\n        c[int(log2(x))] += 1\n        s += x\n    if s < n:\n        print(-1)\n        continue\n    (i, res) = (0, 0)\n    while i < 60:\n        if 1 << i & n != 0:\n            if c[i] > 0:\n                c[i] -= 1\n            else:\n                while i < 60 and c[i] == 0:\n                    i += 1\n                    res += 1\n                c[i] -= 1\n                continue\n        c[i + 1] += c[i] // 2\n        i += 1\n    print(res)", "from math import log2\nfor t in range(int(input())):\n    (n, m) = map(int, input().split())\n    c = [0] * 61\n    s = 0\n    for x in map(int, input().split()):\n        c[int(log2(x))] += 1\n        s += x\n    if s < n:\n        print(-1)\n        continue\n    (i, res) = (0, 0)\n    while i < 60:\n        if 1 << i & n != 0:\n            if c[i] > 0:\n                c[i] -= 1\n            else:\n                while i < 60 and c[i] == 0:\n                    i += 1\n                    res += 1\n                c[i] -= 1\n                continue\n        c[i + 1] += c[i] // 2\n        i += 1\n    print(res)", "import math\nfor _ in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    if sum(arr) < n:\n        print('-1')\n        continue\n    fre = [0] * 64\n    for val in arr:\n        fre[math.floor(math.log2(val))] += 1\n    mx = 1 << 64\n    twos = []\n    while n > 0:\n        if n >= mx:\n            twos.append(mx)\n            n -= mx\n        mx >>= 1\n    twos.sort()\n    summ = 0\n    ans = 0\n    for i in range(64):\n        summ += fre[i] * (1 << i)\n        fre[i] = 0\n        if 1 << i not in twos:\n            continue\n        if summ >= 1 << i:\n            summ -= 1 << i\n            continue\n        else:\n            for j in range(i + 1, 64):\n                if fre[j] != 0:\n                    for k in range(j - 1, i - 1, -1):\n                        fre[k] += 1\n                    ans += j - i\n                    fre[j] -= 1\n                    break\n        summ += fre[i] * (1 << i)\n    print(ans)", "from math import log2\nfor t in range(int(input())):\n    (n, m) = map(int, input().split())\n    c = [0] * 61\n    s = 0\n    for x in map(int, input().split()):\n        c[int(log2(x))] += 1\n        s += x\n    if s < n:\n        print(-1)\n        continue\n    (i, res) = (0, 0)\n    while i < 60:\n        if 1 << i & n != 0:\n            if c[i] > 0:\n                c[i] -= 1\n            else:\n                while i < 60 and c[i] == 0:\n                    i += 1\n                    res += 1\n                c[i] -= 1\n                continue\n        c[i + 1] += c[i] // 2\n        i += 1\n    print(res)", "import math\nfor T in range(int(input().strip())):\n    (n, m) = [int(i) for i in input().strip().split(' ')]\n    a = [int(i) for i in input().strip().split(' ')]\n    if sum(a) < n:\n        print(-1)\n        continue\n    c = [0 for i in range(60)]\n    for i in a:\n        c[int(math.log2(i))] += 1\n    val = 1\n    ans = 0\n    for i in range(60):\n        if i - 1 >= 0:\n            c[i] += c[i - 1] // 2\n        if not val & n == 0:\n            if c[i] == 0:\n                j = i + 1\n                while j < 60:\n                    if c[j] > 0:\n                        break\n                    j += 1\n                c[j] -= 1\n                j -= 1\n                while j >= i:\n                    c[j] += 1\n                    ans += 1\n                    j -= 1\n                c[i] += 1\n            c[i] -= 1\n        val = val * 2\n    print(ans)", "from math import log2\nfor t in range(int(input())):\n    (n, m) = map(int, input().split())\n    c = [0] * 61\n    s = 0\n    for x in map(int, input().split()):\n        c[int(log2(x))] += 1\n        s += x\n    if s < n:\n        print(-1)\n        continue\n    (i, res) = (0, 0)\n    while i < 60:\n        if 1 << i & n != 0:\n            if c[i] > 0:\n                c[i] -= 1\n            else:\n                while i < 60 and c[i] == 0:\n                    i += 1\n                    res += 1\n                c[i] -= 1\n                continue\n        c[i + 1] += c[i] // 2\n        i += 1\n    print(res)", "from math import log\nfor _ in range(int(input())):\n    X = list(map(int, input().split()))\n    Number = list(map(int, input().split()))\n    if sum(Number) < X[0]:\n        print(-1)\n        continue\n    Size = len(bin(max(Number))) - 2\n    MyCheckNumber = bin(X[0])[2:][::-1]\n    MyArray = [0] * (max((Size, len(MyCheckNumber))) + 1)\n    for i in Number:\n        MyArray[int(log(i, 2))] += 1\n    Count = 0\n    for index in range(len(MyCheckNumber)):\n        if MyCheckNumber[index] == '1':\n            if MyArray[index] == 0:\n                for i in range(index + 1, Size + 1):\n                    if MyArray[i] > 0:\n                        MyArray[i] -= 1\n                        for j in range(i - 1, index - 1, -1):\n                            MyArray[j] += 1\n                            Count += 1\n                        break\n            else:\n                MyArray[index] -= 1\n        MyArray[index + 1] += MyArray[index] // 2\n    print(Count)", "import math\nfor t in range(int(input())):\n    (n, m) = map(int, input().split())\n    c = [0] * 61\n    s = 0\n    for x in map(int, input().split()):\n        c[int(math.log2(x))] += 1\n        s += x\n    if s < n:\n        print(-1)\n        continue\n    (i, res) = (0, 0)\n    while i < 60:\n        if 1 << i & n != 0:\n            if c[i] > 0:\n                c[i] -= 1\n            else:\n                while i < 60 and c[i] == 0:\n                    i += 1\n                    res += 1\n                c[i] -= 1\n                continue\n        c[i + 1] += c[i] // 2\n        i += 1\n    print(res)", "import math\nimport collections\nt = int(input())\nfor _ in range(t):\n    (N, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a2 = [int(math.log(a[i], 2)) for i in range(m)]\n    if sum(a) < N:\n        print(-1)\n    else:\n        a2.sort()\n        table = collections.defaultdict(int)\n        for x in a2:\n            table[x] += 1\n        ans = 0\n        for (i, x) in enumerate(bin(N)[2:][::-1]):\n            if x == '1':\n                if table[i] > 0:\n                    table[i] -= 1\n                else:\n                    id = i\n                    while table[id] == 0:\n                        id += 1\n                    table[id] -= 1\n                    for j in range(id - 1, i - 1, -1):\n                        table[j] += 1\n                    ans += id - i\n            if table[i] >= 2:\n                table[i + 1] += table[i] // 2\n                table[i] %= 2\n        print(ans)", "from math import log2\ntest = int(input())\nfor case in range(test):\n    (n, m) = map(int, input().split())\n    boxes = map(int, input().split())\n    c = [0] * 61\n    (total, ans) = (0, 0)\n    for box in boxes:\n        total += box\n        c[int(log2(box))] += 1\n    if total < n:\n        print('-1')\n        continue\n    for i in range(61):\n        if i != 0:\n            c[i] += c[i - 1] // 2\n        if 1 << i & n:\n            if c[i] == 0:\n                for j in range(i + 1, 61):\n                    if c[j]:\n                        diff = j - i\n                        ans += diff\n                        c[i] += 1 << diff\n                        c[j] -= 1\n                        break\n            c[i] -= 1\n    print(ans)", "import math\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    bin = [0] * 61\n    s = 0\n    for i in a:\n        bin[int(math.log2(i))] += 1\n        s += i\n    if s < n:\n        print(-1)\n    else:\n        i = 0\n        ans = 0\n        while i < 60:\n            if 1 << i & n != 0:\n                if bin[i] > 0:\n                    bin[i] -= 1\n                else:\n                    while i < 60 and bin[i] == 0:\n                        i += 1\n                        ans += 1\n                    bin[i] -= 1\n                    continue\n            bin[i + 1] += bin[i] // 2\n            i += 1\n        print(ans)", "from math import log2\nfrom collections import defaultdict as dd\nt = int(input())\nd = dd(int)\nwhile t:\n    (n, m) = map(int, input().split())\n    d = dd(int)\n    l = list(map(int, input().split()))\n    bit = [0] * 61\n    su = 0\n    for i in l:\n        a = int(log2(i))\n        d[a] += 1\n        su += i\n    if su < n:\n        print(-1)\n        t -= 1\n        continue\n    i = 0\n    res = 0\n    while i < 60:\n        if 1 << i & n != 0:\n            if d[i] > 0:\n                d[i] -= 1\n            else:\n                while i < 60 and d[i] == 0:\n                    i += 1\n                    res += 1\n                d[i] -= 1\n                continue\n        d[i + 1] += d[i] // 2\n        i += 1\n    print(res)\n    t -= 1", "from math import ceil, gcd, sqrt\n\ndef ii():\n    return int(input())\n\ndef mi():\n    return map(int, input().split())\n\ndef li():\n    return list(mi())\n\ndef si():\n    return input()\nfor _ in range(ii()):\n    (n, m) = mi()\n    a = li()\n    dp = [0] * 61\n    if n > sum(a):\n        print('-1')\n        continue\n    for i in a:\n        s = bin(i)[2:]\n        dp[len(s) - 1] += 1\n    (i, res) = (0, 0)\n    while i < 60:\n        if 1 << i & n:\n            if dp[i] > 0:\n                dp[i] -= 1\n            else:\n                while dp[i] == 0 and i < 60:\n                    i += 1\n                    res += 1\n                dp[i] -= 1\n                continue\n        dp[i + 1] += dp[i] // 2\n        i += 1\n    print(res)", "from math import log2\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    sm = 0\n    ar = [0] * 64\n    for e in list(map(int, input().split())):\n        ar[int(log2(e))] += 1\n        sm += e\n    if sm < n:\n        print(-1)\n        continue\n    (p, ans) = (0, 0)\n    while p < 60:\n        if n & 1 << p:\n            if ar[p]:\n                ar[p] -= 1\n            else:\n                while not ar[p] and p < 60:\n                    p += 1\n                    ans += 1\n                ar[p] -= 1\n                continue\n        ar[p + 1] += ar[p] // 2\n        p += 1\n    print(ans)", "I = lambda : list(map(int, input().split()))\nfrom collections import defaultdict as dd\nfrom math import log\n(t,) = I()\nwhile t:\n    t -= 1\n    (m, n) = I()\n    a = I()\n    if sum(a) < m:\n        print(-1)\n        continue\n    d = dd(int)\n    for i in a:\n        d[int(log(i, 2))] += 1\n    ans = 0\n    no_way = False\n    for i in range(64):\n        if m >> i & 1:\n            if d[i]:\n                d[i] -= 1\n            else:\n                idx = -1\n                for j in range(i + 1, 64):\n                    if d[j]:\n                        idx = j\n                        d[j] -= 1\n                        break\n                ans += j - i\n                if idx == -1:\n                    no_way = True\n                for j in range(i, idx):\n                    d[j] += 1\n        d[i + 1] += d[i] // 2\n    if no_way:\n        print(-1)\n    else:\n        print(ans)", "def log2(n):\n    i = 0\n    while n >> i != 1:\n        i += 1\n    return i\n\ndef solve(n, po2s):\n    if sum(po2s) < n:\n        return -1\n    po_cnt = [0] * 60\n    for x in po2s:\n        po_cnt[log2(x)] += 1\n    ans = 0\n    for i in range(60):\n        if n & 1 << i:\n            if po_cnt[i]:\n                po_cnt[i] -= 1\n            else:\n                j = i\n                while po_cnt[j] == 0:\n                    j += 1\n                while j > i:\n                    ans += 1\n                    po_cnt[j] -= 1\n                    po_cnt[j - 1] += 2\n                    j -= 1\n                po_cnt[i] -= 1\n        if i < 59:\n            po_cnt[i + 1] += po_cnt[i] // 2\n    return ans\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    po2s = list(map(int, input().split()))\n    print(solve(n, po2s))", "def solve(num, arr):\n    freq = [0 for i in range(64)]\n    for i in arr:\n        x = i\n        pos = 0\n        while x > 0:\n            if x & 1:\n                freq[pos] += 1\n            x = x >> 1\n            pos += 1\n    if num > sum(arr):\n        return -1\n    ans = 0\n    pos = 0\n    while num > 0:\n        if num & 1:\n            if freq[pos] > 0:\n                freq[pos] -= 1\n            else:\n                while pos < 64 and freq[pos] <= 0:\n                    ans += 1\n                    freq[pos] += 1\n                    pos += 1\n                    num = num >> 1\n                freq[pos] -= 1\n                continue\n        freq[pos + 1] += freq[pos] // 2\n        pos += 1\n        num = num >> 1\n    return ans\nt = int(input())\nfor j in range(t):\n    (num, n) = [int(ele) for ele in input().strip().split()]\n    arr = [int(ele) for ele in input().strip().split()]\n    print(solve(num, arr))", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    A = list(map(int, input().split()))\n    if n > sum(A):\n        ans = -1\n    else:\n        power = [0] * 62\n        for a in A:\n            c = 0\n            while a != 1:\n                a //= 2\n                c += 1\n            power[c] += 1\n        n_power = [0] * 62\n        c = 0\n        while n > 0:\n            n_power[c] = n % 2\n            n //= 2\n            c += 1\n        ans = 0\n        for i in range(61):\n            if n_power[i] == 0:\n                if power[i] >= 2:\n                    power[i + 1] += power[i] // 2\n            elif power[i] >= 1:\n                power[i + 1] += (power[i] - 1) // 2\n            else:\n                for j in range(1, 62):\n                    if power[i + j] == 0:\n                        power[i + j] = 1\n                        ans += 1\n                    else:\n                        power[i + j] -= 1\n                        ans += 1\n                        break\n    print(ans)"]