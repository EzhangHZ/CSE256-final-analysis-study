["for s in [*open(0)][1:]:\n    (a, b, c) = map(int, s.split())\n    half = abs(b - a)\n    total = 2 * half\n    if max(a, b, c) > total:\n        print('-1')\n        continue\n    if c + half <= total:\n        print(c + half)\n    elif c - half > 0:\n        print(c - half)", "for s in [*open(0)][1:]:\n    (a, b, c) = map(int, s.split())\n    half = abs(b - a)\n    total = 2 * half\n    print(((c + half - 1) % total + 1, -1)[max(a, b, c) > total])", "import sys\ninput = sys.stdin.readline\nt = int(input())\nresults = []\nfor i in range(t):\n    (a, b, c) = map(int, input().rstrip().split())\n    if a < b:\n        (a, b) = (b, a)\n    people = (a - b) * 2\n    if a > people or c > people:\n        results.append(-1)\n    elif c + (a - b) > people:\n        results.append((c + a - b) % people)\n    else:\n        results.append(c + a - b)\nfor i in results:\n    print(i)", "cases = int(input())\nanswers = []\nfor _ in range(cases):\n    a_b_c = input().split(' ')\n    (a, b, c) = (int(a_b_c[0]), int(a_b_c[1]), int(a_b_c[2]))\n    total_nums = abs(int(a) - int(b)) * 2\n    if a > total_nums or b > total_nums or c > total_nums or (a - b == 0):\n        answers.append('-1')\n    else:\n        distance = abs(a - b)\n        if c <= distance:\n            answers.append(str(c + distance))\n        else:\n            answers.append(str(c - distance))\nprint('\\n'.join(answers))", "for s in [*open(0)][1:]:\n    (a, b, c) = map(int, s.split())\n    n = 2 * abs(a - b)\n    print(((c - 1 + n // 2) % n + 1, -1)[max(a, b, c) > n])", "t = int(input())\nlst = []\nfor i in range(t):\n    (a, b, c) = map(int, input().split(' '))\n    x = abs(a - b)\n    n = 2 * x\n    y = c + x\n    if c > n or a > n or b > n or (y == a) or (y == b):\n        lst.append(-1)\n    elif y > n:\n        lst.append(abs(c - x))\n    else:\n        lst.append(y)\nfor i in lst:\n    print(i)", "import sys\n\ndef input():\n    return sys.stdin.readline().strip()\n\ndef ints():\n    return map(int, input().split())\nT = int(input())\nfor _ in range(T):\n    (a, b, c) = ints()\n    half = abs(b - a)\n    if any((i > half * 2 for i in [a, b, c])):\n        print(-1)\n    else:\n        print((c + half - 1) % (half * 2) + 1)", "import sys, math, itertools\nwtf = sys.stdin.read()\nwtf = wtf.strip().split('\\n')\nfor t in wtf[1:]:\n    (a, b, c) = map(int, t.split())\n    d = abs(a - b)\n    N = 2 * d\n    if c > N or max(a, b) > N:\n        print(-1)\n    else:\n        print(abs(c - d) if c > d else c + d)", "for _ in [*open(0)][1:]:\n    (a, b, c) = map(int, _.split())\n    if a <= 2 * abs(a - b) and b <= 2 * abs(a - b) and (c <= 2 * abs(a - b)):\n        if c <= abs(a - b):\n            print(c + abs(a - b))\n        else:\n            print(c - abs(a - b))\n    else:\n        print(-1)", "for s in [*open(0)][1:]:\n    (a, b, c) = map(int, s.split())\n    n = 2 * abs(a - b)\n    print(((c - 1 + n // 2) % n + 1, -1)[max(a, b, c) > n])", "def solve():\n    (a, b, c) = [int(i) for i in input().split()]\n    q = abs(a - b) * 2\n    if 1 <= a and a <= q and (1 <= b) and (b <= q) and (1 <= c) and (c <= q):\n        if c > q // 2:\n            return c - q // 2\n        return c + q // 2\n    return -1\nt = int(input())\nans = []\nwhile t:\n    ans.append(str(solve()))\n    t -= 1\nprint('\\n'.join(ans))", "n = int(input())\nans = []\nfor i in range(n):\n    abc = input().split()\n    a = int(abc[0])\n    b = int(abc[1])\n    c = int(abc[2])\n    if a > b:\n        sxva = a - b\n    else:\n        sxva = b - a\n    elem = sxva * 2\n    if a > elem or b > elem or c > elem:\n        ans.append(-1)\n    elif c + sxva <= elem:\n        ans.append(c + sxva)\n    else:\n        ans.append(c - sxva)\nfor i in ans:\n    print(i)", "import sys\ninp = sys.stdin.readline()\ntest = int(inp.strip('\\n'))\nresult = ''\nfor _ in range(test):\n    inp = sys.stdin.readline()\n    (a, b, c) = list(map(int, inp.strip('\\n').split()))\n    d = abs(a - b)\n    p = d * 2\n    if c > p or a > p or b > p:\n        result += '-1\\n'\n        continue\n    if c - d > 0:\n        result += str(c - d) + '\\n'\n    elif c + d <= p:\n        result += str(c + d) + '\\n'\n    else:\n        result += '-1\\n'\nsys.stdout.write(result)", "from sys import *\ninput = lambda : stdin.readline()\nint_arr = lambda : list(map(int, stdin.readline().strip().split()))\nstr_arr = lambda : list(map(str, stdin.readline().split()))\nget_str = lambda : map(str, stdin.readline().strip().split())\nget_int = lambda : map(int, stdin.readline().strip().split())\nget_float = lambda : map(float, stdin.readline().strip().split())\nmod = 1000000007\nsetrecursionlimit(1000)\nfor _ in range(int(input())):\n    (a, b, c) = get_int()\n    if a > b:\n        (a, b) = (b, a)\n    diff = abs(a - b)\n    sm = a + diff\n    if diff < a:\n        sm = a - diff\n    if sm == b and diff * 2 >= c:\n        ans = c + diff\n        if diff < c:\n            ans = c - diff\n        print(ans)\n    else:\n        print(-1)", "trails = int(input())\nanswer_list = []\nfor x in range(trails):\n    numbers = input().split(' ')\n    a = int(numbers[0])\n    b = int(numbers[1])\n    c = int(numbers[2])\n    dif = abs(a - b)\n    length = 2 * dif\n    if c > length or a > length or b > length:\n        answer = -1\n        answer_list.append(answer)\n        continue\n    if c > dif:\n        answer = c - dif\n    else:\n        answer = c + dif\n    answer_list.append(answer)\nfor g in answer_list:\n    print(g)", "import sys\nres = []\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    (a, b, c) = map(int, sys.stdin.readline().split())\n    df = abs(a - b)\n    tn = df * 2\n    mid = tn // 2 + 1\n    if a > tn or b > tn or c > tn:\n        print(-1)\n        continue\n    if a >= 1 and a < mid:\n        bs = a + df\n        if bs != b:\n            print(-1)\n            continue\n    else:\n        bs = a - df\n        if bs != b:\n            print(-1)\n            continue\n    if c >= 1 and c < mid:\n        d = c + df\n        if d > tn:\n            print(-1)\n            continue\n        print(d)\n    else:\n        d = c - df\n        if d < 1:\n            print(-1)\n            continue\n        print(d)", "import sys\n\ndef solve():\n    (a, b, c) = sys.stdin.readline().split()\n    a = int(a)\n    b = int(b)\n    c = int(c)\n    num = abs(a - b)\n    if max(a, b, c) > 2 * num:\n        print(-1)\n        return\n    if c <= num:\n        print(c + num)\n    else:\n        print(c - num)\nn = int(sys.stdin.readline())\nfor i in range(n):\n    solve()", "import sys\n\ndef main():\n    num_args = None\n    for line in sys.stdin:\n        if not num_args:\n            num_args = int(line)\n            continue\n        solve(line)\n\ndef solve(i):\n    result = None\n    (i, j, k) = i.split(' ')\n    i = int(i)\n    j = int(j)\n    k = int(k)\n    size = abs(i - j) * 2\n    if k == j or k == i:\n        result = -1\n    elif k > size or j > size or i > size:\n        result = -1\n    else:\n        result = int((k + size / 2) % size)\n        if not result:\n            result = int(size)\n        if result == j or result == i:\n            result = -1\n    sys.stdout.write(str(result) + '\\n')\nmain()", "def find_d(pos_a, pos_b, pos_c):\n    if pos_a > pos_b:\n        max = pos_a\n        pos_a = pos_b\n        pos_b = max\n    pos_d = -1\n    if pos_b < pos_a * 2:\n        return pos_d\n    num_people = 2 * (pos_b - pos_a)\n    if pos_c > num_people:\n        return pos_d\n    elif pos_c > num_people / 2:\n        pos_d = pos_c - num_people / 2\n    else:\n        pos_d = pos_c + num_people / 2\n    return int(pos_d)\nt = int(input())\noutput = []\nfor _ in range(t):\n    (a, b, c) = map(int, input().split())\n    output.append(find_d(a, b, c))\nfor number in output:\n    print(number)", "N = int(input())\na = [0] * N\nb = [0] * N\nc = [0] * N\nfor i in range(N):\n    (a[i], b[i], c[i]) = [int(x) for x in input().split()]\nfor i in range(N):\n    l = 2 * abs(a[i] - b[i])\n    d = abs(a[i] - b[i])\n    if l < 4 or a[i] > l or b[i] > l:\n        print(-1)\n        continue\n    if c[i] <= l:\n        if 0 < c[i] - d:\n            print(c[i] - d)\n        elif c[i] + d <= l:\n            print(c[i] + d)\n    else:\n        print(-1)", "n = []\nfor i in range(int(input())):\n    x = list(map(int, input().split()))\n    n.append(x)\nfor e in n:\n    m = 2 * abs(e[0] - e[1])\n    if e[0] > m or e[1] > m or e[2] > m:\n        print(-1)\n    else:\n        o = e[2] + m // 2\n        if o > m:\n            o -= m\n        print(o)", "for s in [*open(0)][1:]:\n    (a, b, c) = map(int, s.split())\n    n = 2 * abs(a - b)\n    print(((c - 1 + n // 2) % n + 1, -1)[max(a, b, c) > n])", "ans = []\nfor _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    x = 2 * abs(a - b)\n    for i in (a, b, c):\n        if i > x:\n            ans += [-1]\n            break\n    else:\n        d1 = c + x // 2\n        d2 = c - x // 2\n        ans += [[d1], [d2]][1 <= d2 <= x]\nprint('\\n'.join(map(str, ans)))", "for s in [*open(0)][1:]:\n    (a, b, c) = map(int, s.split())\n    n = 2 * abs(a - b)\n    print(((c - 1 + n // 2) % n + 1, -1)[max(a, b, c) > n])", "t = int(input())\nresults = []\nfor i in range(t):\n    (a, b, c) = [int(i) for i in input().split(' ')]\n    mid = abs(a - b)\n    if c > mid * 2 or mid < 2 or mid < min(a, b):\n        results.append(-1)\n        continue\n    if c < mid:\n        results.append(mid + c)\n    elif c > mid:\n        results.append(c - mid)\n    else:\n        results.append(mid * 2)\n[print(i) for i in results]", "t = int(input())\nres = []\nfor _ in range(t):\n    (a, b, c) = map(int, input().split())\n    cnt = abs(a - b) * 2\n    if a > cnt or b > cnt or c > cnt:\n        res.append(-1)\n        continue\n    if c > cnt // 2:\n        res.append(c - cnt // 2)\n    else:\n        res.append(c + cnt // 2)\nfor el in res:\n    print(el)", "from sys import stdin\nt = int(stdin.readline())\nfor _ in range(t):\n    (a, b, c) = [int(s) for s in stdin.readline().split()]\n    n = (abs(b - a) - 1) * 2 + 2\n    if n == 2 or max(a, b, c) > n:\n        print(-1)\n    else:\n        print((c + abs(b - a)) % n if c + abs(b - a) > n else c + abs(b - a))", "for s in [*open(0)][1:]:\n    (a, b, c) = map(int, s.split())\n    n = 2 * abs(a - b)\n    print(((c - 1 + n // 2) % n + 1, -1)[max(a, b, c) > n])", "for s in [*open(0)][1:]:\n    (a, b, c) = map(int, s.split())\n    n = 2 * abs(a - b)\n    print(((c - 1 + n // 2) % n + 1, -1)[max(a, b, c) > n])", "a = int(input())\nmas = []\nfor i in range(a):\n    mas.append(input().split())\n    mas[i][0] = int(mas[i][0])\n    mas[i][1] = int(mas[i][1])\n    mas[i][2] = int(mas[i][2])\nfor i in mas:\n    raz = abs(i[0] - i[1])\n    le = 2 * raz\n    if (i[2] + raz <= le or i[2] - raz >= 1) and (i[0] <= le and i[1] <= le and (i[2] <= le)):\n        if i[2] + raz <= le:\n            print(i[2] + raz)\n        else:\n            print(i[2] - raz)\n    else:\n        print(-1)", "n = int(input())\nr = []\nfor i in range(n):\n    (a, b, c) = map(int, input().split())\n    p = abs(a - b) * 2\n    if abs(a - b) > 1 and p % 2 == 0 and (c <= p) and (a <= p) and (b <= p):\n        r.append([abs(a - b) + c, abs(a - b) + c - p][abs(a - b) + c > p])\n    else:\n        r.append(-1)\nfor i in r:\n    print(i)", "def solve():\n    (a, b, c) = [int(i) for i in input().split()]\n    q = abs(a - b) * 2\n    if a <= q and b <= q and (c <= q):\n        return c - q // 2 if c > q // 2 else c + q // 2\n    return -1\nt = int(input())\nans = []\nwhile t:\n    ans.append(str(solve()))\n    t -= 1\nprint('\\n'.join(ans))", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef input_list():\n    return list(map(int, input().split()))\n\ndef input_string():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef input_int_gen():\n    return map(int, input().split())\ntests = inp()\nfor _ in range(tests):\n    (a, b, c) = input_int_gen()\n    halfsize = abs(a - b)\n    size = halfsize * 2\n    d = c + halfsize if c <= halfsize else c - halfsize\n    if a > size or b > size or c > size:\n        print(-1)\n    else:\n        print(d)", "t = int(input())\nresults = []\nfor i in range(t):\n    (a, b, c) = map(int, input().split())\n    dif = max(a, b) - min(a, b)\n    total = 2 * dif\n    if total < max(a, b):\n        results.append(-1)\n    elif c - dif > 0 and c <= total:\n        results.append(c - dif)\n    elif c + dif <= total and c > 0:\n        results.append(c + dif)\n    else:\n        results.append(-1)\nfor i in range(t):\n    print(results[i])", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\n\ndef get_list_strings():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef solve(a, b, c):\n    req = abs(b - a)\n    up = 2 * req\n    if c > up:\n        sys.stdout.write(str(-1) + '\\n')\n        return\n    if max(b, a) > up:\n        sys.stdout.write(str(-1) + '\\n')\n        return\n    ans1 = c - req\n    ans2 = c + req\n    if ans1 <= up and ans1 >= 1:\n        if (ans1 != a and ans1 != b) and ans1 != c:\n            sys.stdout.write(str(ans1) + '\\n')\n            return\n    if ans2 <= up and ans2 >= 1:\n        if (ans2 != a and ans2 != b) and ans2 != c:\n            sys.stdout.write(str(ans2) + '\\n')\n            return\n    sys.stdout.write(str(-1) + '\\n')\nT = get_int()\nwhile T:\n    (a, b, c) = get_ints()\n    solve(a, b, c)\n    T -= 1", "for s in [*open(0)][1:]:\n    (a, b, c) = map(int, s.split())\n    (b, a) = (max(a, b), min(a, b))\n    if b < 2 * a or c > 2 * (b - a):\n        print(-1)\n        continue\n    n = 2 * (b - a)\n    print((b - a + c - 1) % n + 1)", "import sys\n\ndef rall():\n    return sys.stdin.readlines()\n\ndef rl():\n    return sys.stdin.readline().strip()\n\ndef rl_types(types):\n    str_list = [x for x in sys.stdin.readline().strip().split(' ')]\n    return [types[i](str_list[i]) for i in range(len(str_list))]\n\ndef pr(something):\n    sys.stdout.write(str(something) + '\\n')\n\ndef pra(array):\n    sys.stdout.write(' '.join([str(x) for x in array]) + '\\n')\n\ndef solve(array):\n    return array\nNT = int(rl())\nfor ti in range(NT):\n    (a, b, c) = [int(x) for x in rl().split(' ')]\n    n = 2 * abs(b - a)\n    opp = c + n // 2 if c <= n // 2 else c - n // 2\n    if c > n:\n        opp = -1\n    elif a > n or b > n:\n        opp = -1\n    elif opp <= 0 or opp > n:\n        opp = -1\n    pr(opp)", "import sys\ntokens = ''.join(sys.stdin.readlines()).split()[::-1]\n\ndef next():\n    return tokens.pop()\n\ndef nextInt():\n    return int(next())\n\ndef nextFloat():\n    return float(next())\n\ndef getIntArray(n):\n    return [nextInt() for _ in range(n)]\n\ndef getFloatArray(n):\n    return [nextFloat() for _ in range(n)]\n\ndef getStringArray(n):\n    return [next() for _ in range(n)]\nflush = sys.stdout.flush\ntestcase = True\n\ndef solve(testcase=1):\n    pass\n    (A, B, C) = (nextInt(), nextInt(), nextInt())\n    L = abs(A - B)\n    if max(A, B, C) > L * 2:\n        print(-1)\n        return\n    P = (C - 1 + L) % (2 * L) + 1\n    print(P)\nif testcase is None:\n    while tokens:\n        solve()\nelse:\n    testcaseCount = nextInt() if testcase else 1\n    for tc in range(testcaseCount):\n        solve(tc + 1)\n    assert not tokens", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    t = abs(a - b)\n    if 2 * t < max(a, b, c):\n        print(-1)\n    elif c + t <= 2 * t:\n        print(c + t)\n    elif 2 * t >= c - t > 0:\n        print(c - t)\n    else:\n        print(-1)", "import sys\nt = int(input())\nfor _ in range(t):\n    (a, b, c) = map(int, sys.stdin.readline().split())\n    (a, b) = (min(a, b), max(a, b))\n    max_num = 2 * (b - a)\n    if c > max_num or b > max_num:\n        print(-1)\n    elif c > max_num // 2:\n        print(c - max_num // 2)\n    else:\n        print(c + max_num // 2)", "t = int(input())\nlis = []\nfor i in range(t):\n    (a, b, c) = map(int, input().split())\n    ukup = abs(b - a) * 2\n    if abs(b - a) * 2 >= a and abs(b - a) * 2 >= b and (abs(b - a) * 2 >= c):\n        if c < ukup // 2:\n            d = c + ukup // 2\n            lis.append(d)\n        elif c == ukup // 2:\n            d = ukup\n            lis.append(d)\n        elif c > ukup // 2:\n            d = c - ukup // 2\n            lis.append(d)\n    else:\n        lis.append(-1)\nfor i in lis:\n    print(i)", "from math import *\nfrom collections import defaultdict as dt\nfrom sys import stdin\ninp = lambda : stdin.readline().strip()\nI = lambda : int(inp())\nM = lambda : map(int, inp().split())\nL = lambda : list(M())\nmod = 1000000007\ninf = 100000000000000000000\nss = 'abcdefghijklmnopqrstuvwxyz'\n\ndef solve():\n    (a, b, c) = M()\n    if a < b:\n        (a, b) = (b, a)\n    if b > a - b or c > (a - b) * 2:\n        print(-1)\n        return\n    if c > a - b:\n        print(c - a + b)\n    else:\n        print(a - b + c)\ntt = 1\ntt = I()\nfor _ in range(tt):\n    solve()", "from sys import *\nimport math\n\ndef solve_case(t):\n    (a, b, c) = [int(x) for x in stdin.readline().rstrip().split()]\n    circle_size = abs(a - b) * 2\n    if a > circle_size or b > circle_size or c > circle_size:\n        print(-1)\n    else:\n        d = c + math.floor(circle_size / 2)\n        if d > circle_size:\n            d = d - circle_size\n        print(d)\n\ndef main():\n    T = int(stdin.readline())\n    for t in range(T):\n        solve_case(t)\nmain()", "import os\nimport math\nimport sys\nparse_input = lambda : sys.stdin.readline().rstrip('\\r\\n')\n\ndef func(a, b, c):\n    d = abs(a - b)\n    n = 2 * d\n    if c > n:\n        return -1\n    elif a > n or b > n:\n        return -1\n    else:\n        return c + d if c + d <= n else c - d\n\ndef main():\n    n_cases = int(parse_input())\n    for i in range(n_cases):\n        (a, b, c) = [int(i) for i in parse_input().split()]\n        print(func(a, b, c))\nmain()", "for s in [*open(0)][1:]:\n    (a, b, c) = map(int, s.split())\n    d = abs(a - b)\n    print((c + d, c - d, -1)[min(2, -1 - -c // d)] if a <= 2 * d >= b else -1)", "t = int(input())\nlist1 = []\nlist2 = []\nfor i in range(t):\n    flag = True\n    data0 = input()\n    list1 = data0.split()\n    data = [int(x) for x in list1]\n    total = abs(data[0] - data[1]) * 2\n    for m in range(3):\n        if data[m] > total:\n            list2.append(-1)\n            flag = False\n            break\n    if flag:\n        result = (max(data[0], data[1]) + (data[2] - min(data[0], data[1])) - 1) % total + 1\n        list2.append(result)\nfor i in range(t):\n    print(list2[i])", "t = int(input())\nlist1 = []\nlist2 = []\nfor i in range(t):\n    flag = True\n    data0 = input()\n    list1 = data0.split()\n    data = [int(x) for x in list1]\n    total = abs(data[0] - data[1]) * 2\n    for m in range(3):\n        if data[m] > total:\n            list2.append(-1)\n            flag = False\n            break\n    if flag:\n        result = (max(data[0], data[1]) + (data[2] - min(data[0], data[1])) - 1) % total + 1\n        list2.append(result)\nfor i in range(t):\n    print(list2[i])", "t = int(input())\nlan = []\nfor _ in range(t):\n    (a, b, c) = map(int, input().split())\n    max_c = abs((a - b) * 2)\n    if a > max_c or b > max_c:\n        lan.append(-1)\n    elif c > max_c:\n        lan.append(-1)\n    elif abs(a - b) == 1:\n        lan.append(-1)\n    else:\n        if c + abs(a - b) <= max_c:\n            ans = c + abs(a - b)\n        else:\n            ans = c - abs(a - b)\n        lan.append(ans)\nprint(*lan, sep='\\n')", "for s in [*open(0)][1:]:\n    (a, b, c) = map(int, s.split())\n    n = 2 * abs(a - b)\n    print(((c - 1 + n // 2) % n + 1, -1)[max(a, b, c) > n])", "def numbers(arr):\n    for l in arr:\n        n = 2 * abs(l[0] - l[1])\n        if n < l[0] or n < l[1] or n < l[2]:\n            print(-1)\n        else:\n            d = l[2] + abs(l[0] - l[1])\n            while d > n:\n                d -= n\n            print(d)\nl = int(input())\narr = []\nfor i in range(l):\n    arr.append([int(j) for j in input().split()])\nnumbers(arr)", "my_value = []\nfor i in range(int(input())):\n    (a, b, c) = [int(x) for x in input().split()]\n    distance = abs(b - a)\n    total = distance * 2\n    mid = 1 + distance\n    if mid < min(a, b) or mid > max(a, b) or c > total or (mid in (a, b) and min(a, b) != 1):\n        my_value.append(-1)\n    elif c >= mid:\n        temp = c - distance\n        if temp >= mid:\n            my_value.append(-1)\n        else:\n            my_value.append(temp)\n    else:\n        temp = c + distance\n        if temp > total or temp < mid:\n            my_value.append(-1)\n        else:\n            my_value.append(temp)\nfor i in my_value:\n    print(i)", "n = int(input())\nsets = [list(map(int, input().split())) for _ in range(n)]\nfor (a, b, c) in sets:\n    count = abs(a - b) * 2\n    d = c + count // 2\n    if d > count:\n        d = c - count // 2\n    if d > count or c > count or d == a or (d == b) or (c == a) or (c == b) or (count == 2) or (a > count) or (b > count):\n        print(-1)\n    else:\n        print(d)", "t = int(input())\nl = []\nfor i in range(0, t):\n    m = [int(x) for x in input().split()]\n    l.append(m)\nfor j in range(0, t):\n    a = l[j][0]\n    b = l[j][1]\n    c = l[j][2]\n    parts = abs(a - b) * 2\n    if a > parts or b > parts or c > parts:\n        print(-1)\n    else:\n        q = abs(b - a) + c\n        if q > parts:\n            print(abs(abs(a - b) - c))\n        else:\n            print(q)", "for s in [*open(0)][1:]:\n    (a, b, c) = map(int, s.split())\n    n = 2 * abs(a - b)\n    print(((c - 1 + n // 2) % n + 1, -1)[max(a, b, c) > n])", "import sys\ninput = sys.stdin.readline\noutput = sys.stdout.write\n\ndef main():\n    tests = int(input().rstrip())\n    for i in range(tests):\n        (a, b, c) = map(int, input().rstrip().split())\n        dif = abs(a - b)\n        max_ = dif * 2\n        if a > max_ or b > max_ or c > max_:\n            ans = -1\n        elif c > dif:\n            ans = c - dif\n        else:\n            ans = c + dif\n        output(str(ans))\n        output('\\n')\nmain()", "def find(k):\n    (k[0], k[1], k[2]) = (int(k[0]), int(k[1]), int(k[2]))\n    diff = abs(k[0] - k[1])\n    len_of_circle = diff * 2\n    if k[0] > len_of_circle or k[1] > len_of_circle or k[2] > len_of_circle:\n        return -1\n    elif k[2] + diff > len_of_circle:\n        return k[2] - diff\n    else:\n        return k[2] + diff\nl1 = []\nt = int(input())\nfor i in range(t):\n    l1.append(input().split(' '))\nfor i in range(len(l1)):\n    print(find(l1[i]))", "t = int(input())\nfor i in range(t):\n    (a, b, c) = map(int, input().split())\n    dif = abs(a - b)\n    n = dif * 2\n    if a > n or b > n or c > n:\n        print(-1)\n    elif c + dif <= n:\n        print(c + dif)\n    elif c - dif <= n and c - dif > 0:\n        print(c - dif)\n    else:\n        print(-1)", "import math\n\ndef solve():\n    valor = input().split()\n    a = int(valor[0])\n    b = int(valor[1])\n    c = int(valor[2])\n    tam = abs(a - b)\n    temp = tam\n    tam = tam * 2\n    if a <= tam and b <= tam and (c <= tam):\n        if c - temp < tam and c - temp > 0:\n            print(c - temp)\n            return 0\n        if c + temp <= tam:\n            print(c + temp)\n            return 0\n    print('-1')\n    return -1\n\ndef main():\n    t = int(input())\n    while t != 0:\n        solve()\n        t = t - 1\nmain()", "import sys, math\nsys.setrecursionlimit(10 ** 6)\nINF = float('inf')\nmod = 10 ** 9 + 7\ninput = lambda : sys.stdin.readline().rstrip()\n\ndef li():\n    return list(map(int, input().split()))\nt = int(input())\nfor _ in range(t):\n    (a, b, c) = li()\n    dif = abs(a - b)\n    num = dif * 2\n    if a > num or b > num or c > num:\n        print(-1)\n        continue\n    if c + dif > num:\n        if c - dif > 0:\n            ans = c - dif\n        else:\n            ans = -1\n    else:\n        ans = c + dif\n    print(ans)", "import copy\nimport math\nfrom sys import stdin\n\ndef A():\n    t = int(stdin.readline())\n    while t:\n        t -= 1\n        cnt = 0\n        k = int(stdin.readline())\n        i = 0\n        while True:\n            if i % 3 == 0 or i % 10 == 3:\n                i += 1\n                continue\n            cnt += 1\n            if cnt == k:\n                break\n            i += 1\n        print(i)\n\ndef B():\n    t = int(stdin.readline())\n    while t:\n        t -= 1\n        (a, b, c) = [int(x) for x in stdin.readline().split()]\n        k = abs(b - a)\n        k1 = c + k\n        if k * 2 < max(a, b, c):\n            print(-1)\n        elif k1 > k * 2:\n            k1 = c - k\n            if k1 >= 0:\n                print(k1)\n            else:\n                print(-1)\n        else:\n            print(k1)\n\ndef C():\n    t = int(stdin.readline())\n    while t:\n        t -= 1\n        a = [int(x) for x in stdin.readline().split()]\nB()", "import math\nimport sys\nfrom decimal import Decimal\n\ndef main(a, b, c):\n    if a > b:\n        (a, b) = (b, a)\n    n = 2 * (b - a)\n    if c > n or b > n or a > n:\n        return -1\n    ans = (c + n // 2) % n\n    if ans == 0:\n        return n\n    return ans\nt = int(input())\nans = []\nfor i in range(t):\n    (a, b, c) = list(map(int, input().split()))\n    ans.append(main(a, b, c))\nfor e in ans:\n    print(e)", "import sys\n\ndef input():\n    return sys.stdin.readline().strip()\n\ndef ii():\n    return int(input())\n\ndef mii():\n    return map(int, input().split())\n\ndef lmii():\n    return list(mii())\nfor _ in range(ii()):\n    (a, b, c) = mii()\n    n = abs(a - b)\n    if any(map(lambda x: x > n * 2, (a, b, c))):\n        print(-1)\n    else:\n        print(c + n if c + n <= n * 2 else c - n)", "from sys import stdin\nfrom collections import defaultdict\nfrom bisect import insort, bisect_left\nfor _ in range(int(stdin.readline())):\n    (a, b, c) = map(int, stdin.readline().split())\n    if a > b:\n        (a, b) = (b, a)\n    diff = b - a\n    max_val = 2 * diff\n    if a > max_val or b > max_val or c > max_val:\n        print(-1)\n        continue\n    if c > diff:\n        print(c - diff)\n    else:\n        print(c + diff)", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_list_string():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\n\ndef get_print_int(x):\n    sys.stdout.write(str(x) + '\\n')\n\ndef get_print(x):\n    sys.stdout.write(x + '\\n')\n\ndef get_print_int_same(x):\n    sys.stdout.write(str(x) + ' ')\n\ndef get_print_same(x):\n    sys.stdout.write(x + ' ')\nfrom sys import maxsize\n\ndef solve():\n    for _ in range(get_int()):\n        (a, b, c) = get_ints()\n        n = 2 * abs(a - b)\n        if a > n or b > n or c > n:\n            get_print_int(-1)\n        else:\n            mid = n // 2 + 1\n            if a >= mid:\n                other = 1 + (a - mid)\n                if other != b:\n                    get_print_int(-1)\n                elif c >= mid:\n                    get_print_int(1 + (c - mid))\n                else:\n                    get_print_int(mid + (c - 1))\n            else:\n                other = mid + (a - 1)\n                if other != b:\n                    get_print_int(-1)\n                elif c >= mid:\n                    get_print_int(1 + (c - mid))\n                else:\n                    get_print_int(mid + (c - 1))\nsolve()", "t = int(input())\nr = [0] * t\nfor i in range(t):\n    (a, b, c) = map(int, input().split())\n    (a, b) = (max(a, b), min(a, b))\n    n = 2 * a - 2 * b\n    if c > n or a > n or b > n:\n        r[i] = -1\n    else:\n        r[i] = (c + n // 2) % n\n        if r[i] == 0:\n            r[i] = n\nfor i in r:\n    print(i)", "x = int(input())\ni = 0\nlist1 = []\nwhile i < x:\n    (a, b, c) = map(int, input().split())\n    if a > b:\n        t = a - b\n    else:\n        t = b - a\n    tot = 2 * t\n    if c > tot or tot < a or tot < b or (t == 1):\n        list1.append('-1')\n    elif c > t:\n        h = c - t\n        list1.append(h)\n    else:\n        h = c + t\n        list1.append(h)\n    i += 1\nfor d in list1:\n    print(d)", "t = int(input())\nres = []\nfor i in range(t):\n    (a, b, c) = list(map(int, input().split()))\n    r = abs(a - b)\n    a1 = c + r\n    a2 = c - r\n    if r * 2 < a or r * 2 < b or r * 2 < c:\n        res.append(-1)\n    elif a2 != 0 and a2 != a and (a2 != b) and (a2 > 0) and (r * 2 >= a2):\n        res.append(a2)\n    elif a1 != 0 and a1 != a and (a1 != b) and (a1 > 0) and (r * 2 >= a1):\n        res.append(a1)\n    else:\n        res.append(-1)\nfor i in res:\n    print(i)", "t = int(input())\nn = []\nfor _ in range(t):\n    (a, b, c) = map(int, input().split())\n    d = -1\n    if abs(a - b) * 2 >= c and abs(a - b) * 2 >= a and (abs(a - b) * 2 >= b):\n        if c <= abs(a - b):\n            d = c + abs(a - b)\n        else:\n            d = c - abs(a - b)\n    n.append(d)\nfor i in n:\n    print(i)", "t = int(input())\nv = []\nfor i in range(t):\n    (a, b, c) = map(int, input().split())\n    if b < a:\n        (a, b) = (b, a)\n    r = b - a\n    k = r * 2\n    if a > k or b > k or c > k or (c + r > k and c - r < 1):\n        v.append(-1)\n    elif c > r:\n        v.append(c - r)\n    else:\n        v.append(c + r)\nfor i in range(t):\n    print(v[i])", "def do(t, nabor):\n    max = 0\n    for n in nabor:\n        delta = n[0] - n[1]\n        if delta < 0:\n            delta = -delta\n        all = 2 * delta\n        if n[0] > all or n[1] > all or n[2] > all or (n[0] == n[1]):\n            print(-1)\n        elif n[2] > delta and n[2] - delta <= all:\n            print(n[2] - delta)\n        elif n[2] <= delta and n[2] + delta <= all:\n            print(n[2] + delta)\n        else:\n            print(-1)\n\ndef main():\n    t = int(input())\n    nabor = []\n    for _ in range(t):\n        (a, b, c) = map(int, input().split())\n        nabor.append((a, b, c))\n    do(t, nabor)\nmain()", "from sys import stdin\ninput = lambda : stdin.readline().strip()\nlinput = lambda : [*map(int, input().split())]\noutput = []\n\ndef lprint(*x):\n    output.append(' '.join(map(str, x)))\n\ndef main():\n    (a, b, c) = linput()\n    if a > b:\n        (a, b) = (b, a)\n    r = b - a\n    n = r * 2\n    if a > n or b > n or c > n:\n        lprint(-1)\n        return\n    if c + r <= n:\n        lprint(c + r)\n    else:\n        lprint(r - n + c)\nfor _ in ' ' * int(input()):\n    main()\nprint(*output, sep='\\n')", "t = int(input())\nfor n in range(t):\n    nums = input().split(' ')\n    a = int(nums[0])\n    b = int(nums[1])\n    c = int(nums[2])\n    diff = abs(a - b)\n    circle_players = diff * 2\n    if c > circle_players or a > circle_players or b > circle_players:\n        print(-1)\n        continue\n    d = c + diff\n    if d > circle_players:\n        d = abs(d - circle_players)\n    print(d)", "import sys\nfor t in range(int(sys.stdin.readline())):\n    (a, b, c) = map(int, sys.stdin.readline().split())\n    if a > b:\n        (a, b) = (b, a)\n    if b >= 2 * a:\n        max_number = 2 * (b - a)\n        if max_number < c:\n            print(-1)\n        elif b - a >= c:\n            print(b - a + c)\n        else:\n            print(c - b + a)\n    else:\n        print(-1)", "t = int(input())\nmas = []\nfor i in range(t):\n    (a, b, c) = input().split()\n    (a, b, c) = (min(int(a), int(b)), max(int(a), int(b)), int(c))\n    mas.append([a, b, c])\nfor i in mas:\n    (a, b, c) = (i[0], i[1], i[2])\n    part = b - a\n    if part > 1:\n        if c <= 2 * (b - a) and b - a > a - 1:\n            if c <= b - a:\n                print(b - a + c)\n            else:\n                print(c - b + a)\n        else:\n            print(-1)\n    else:\n        print(-1)", "import sys\nimport math\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nt = inp()\nfor i in range(0, t):\n    arr = inlt()\n    b = max(arr[0], arr[1])\n    l = min(arr[0], arr[1])\n    if math.floor(b / 2) >= l:\n        d = abs(arr[0] - arr[1])\n        mid = 1 + d\n        if arr[2] <= 2 * d:\n            if arr[2] >= mid:\n                print(arr[2] - d)\n            else:\n                print(arr[2] + d)\n        else:\n            print(-1)\n    else:\n        print(-1)", "qu = []\nfor _ in range(int(input())):\n    (a, b, c) = list(map(int, input().split()))\n    qu.append([a, b, c])\nfor q in qu:\n    (a, b, c) = q\n    if abs(a - b) == 1:\n        print(-1)\n    else:\n        if a > b:\n            smaller = b\n            bigger = a\n        else:\n            smaller = a\n            bigger = b\n        pointer1 = bigger - (smaller - 1)\n        if pointer1 > bigger:\n            print(-1)\n        elif pointer1 <= smaller:\n            print(-1)\n        else:\n            h = pointer1 + abs(a - b) - 1\n            pointer_c = c + abs(a - b)\n            if pointer_c > h:\n                pointer_c = c - abs(a - b)\n            if c > h or pointer_c < 1:\n                print(-1)\n            else:\n                print(pointer_c)", "import sys\nt = int(input())\nfor _ in range(t):\n    opposite = 0\n    (a, b, c) = map(int, sys.stdin.readline().split())\n    place = 2 * abs(a - b)\n    if a > place or b > place or c > place:\n        print(-1)\n    else:\n        opposite = c + place // 2\n        if opposite > place:\n            opposite = c - place // 2\n        print(opposite)", "t = int(input())\nu = []\nfor i in range(t):\n    (a, b, c) = map(int, input().split())\n    if a > b:\n        if (a - b) * 2 >= c and (a - b) * 2 >= a and ((a - b) * 2 >= b):\n            if (a - b) * 2 >= c + a - b:\n                u.append(c + (a - b))\n            else:\n                u.append(c - (a - b))\n        else:\n            u.append(-1)\n    elif a < b:\n        if (b - a) * 2 >= c and (b - a) * 2 >= a and ((b - a) * 2 >= b):\n            if (b - a) * 2 >= c + b - a:\n                u.append(c + (b - a))\n            else:\n                u.append(c - (b - a))\n        else:\n            u.append(-1)\n    else:\n        u.append(-1)\nfor i in range(len(u)):\n    print(u[i])", "tc = int(input())\nans = []\nfor i in range(tc):\n    n = [int(x) for x in input().split()]\n    circle = abs(n[1] - n[0]) * 2\n    if max(n[1], n[0]) > circle or n[2] > circle:\n        ans.append(-1)\n    elif n[2] > circle / 2:\n        ans.append(n[2] - circle / 2)\n    else:\n        ans.append(n[2] + circle / 2)\nfor i in ans:\n    print(int(i))", "t = int(input())\nl = []\n\ndef solve(a, b, c):\n    pn = 2 * abs(a - b)\n    if c > pn or a > pn or b > pn:\n        return -1\n    ans = c + pn / 2\n    if ans > pn:\n        ans = c - pn / 2\n    return ans\nfor _ in range(t):\n    (a, b, c) = list(map(int, input().split()))\n    m = solve(a, b, c)\n    l.append(m)\nfor i in l:\n    print(int(i))", "n = int(input())\no = []\nfor i in range(n):\n    (a, b, c) = map(int, input().split())\n    if abs(a - b) == 1:\n        o.append(-1)\n    elif abs(a - b) < min(a, b):\n        o.append(-1)\n    else:\n        if a > b:\n            raznica = a - b\n            crug = a - b - 1\n            b1 = b - 1\n            crug = a + crug - b1\n        else:\n            raznica = b - a\n            crug = b - a - 1\n            a1 = a - 1\n            crug = b + crug - a1\n        if c > crug:\n            o.append(-1)\n        elif c + raznica > crug:\n            o.append(c + raznica - crug)\n        else:\n            o.append(c + raznica)\nfor i in range(n):\n    print(o[i])", "def main():\n    answer = []\n    test_case = int(input())\n    i = 0\n    while i < test_case:\n        find_total_people(answer)\n        i += 1\n    for person in answer:\n        print(person)\n\ndef find_total_people(answer_list):\n    (a, b, c) = map(int, input().split(' '))\n    d = 0\n    total = abs(a - b) * 2\n    ref = total // 2\n    if total >= a and total >= b and (total >= c):\n        if c <= ref:\n            answer_list.append(ref + c)\n        elif c > ref:\n            answer_list.append(c - ref)\n    else:\n        answer_list.append(-1)\nmain()", "for s in [*open(0)][1:]:\n    (a, b, c) = map(int, s.split())\n    d = abs(a - b)\n    print((-1, c - d, c + d)[max(0, -c // d + 3) * (a <= 2 * d >= b)])", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    (a, b, c) = map(int, sys.stdin.readline().split())\n    diff = abs(a - b)\n    if c > diff * 2 or a > diff * 2 or b > diff * 2:\n        print(-1)\n        continue\n    (case1, case2) = (c - diff, c + diff)\n    if 1 <= case1 <= diff * 2:\n        print(case1)\n    elif 1 <= case2 <= diff * 2:\n        print(case2)\n    else:\n        print(-1)", "for s in [*open(0)][1:]:\n    (a, b, c) = l = (*map(int, s.split()),)\n    n = 2 * abs(a - b)\n    print(((c + n // 2) % n or n, -1)[max(l) > n])", "numbers = list()\nrepeats = int(input())\nd = list()\ne = list()\nf = list()\nfor i in range(repeats):\n    (a, b, c) = list(map(int, input().split()))\n    d += [a]\n    e += [b]\n    f += [c]\nfor j in range(repeats):\n    diff = abs(d[j] - e[j])\n    if diff * 2 >= d[j] and diff * 2 >= e[j] and (diff * 2 >= f[j]):\n        if diff < f[j]:\n            print(f[j] - diff)\n        else:\n            print(f[j] + diff)\n    else:\n        print(-1)", "def compute(a, b, c):\n    diff = abs(a - b)\n    if max(a, b) > diff * 2 or c > diff * 2:\n        return -1\n    else:\n        a = c + diff\n        if c + diff > diff * 2:\n            while a > diff * 2:\n                a -= diff * 2\n        return a\nt = int(input())\nmain_list = []\nfor i in range(t):\n    a = list(map(int, input().split()))\n    main_list.append(a)\nfor i in range(len(main_list)):\n    print(compute(main_list[i][0], main_list[i][1], main_list[i][2]))", "test = int(input())\nli = abc = []\nfor i in range(test):\n    li = list(map(int, input().split()))\n    abc.append(li)\nfor i in range(test):\n    ans = -1\n    (a, b, c) = (abc[i][0], abc[i][1], abc[i][2])\n    n = 2 * abs(a - b)\n    if n >= a > 0 and n >= b > 0 and (n >= c > 0):\n        if c <= n // 2:\n            ans = c + n // 2\n        else:\n            ans = c - n // 2\n    print(ans)", "def finding_opposite(a, b, c):\n    if a > b:\n        dif = a - b - 1\n    elif b > a:\n        dif = b - a - 1\n    opp_1 = 1 + dif + 1\n    largest = opp_1 + dif\n    opp_c = c + dif + 1\n    if a > largest or largest < b:\n        return -1\n    elif dif == 0:\n        return -1\n    elif (dif + 1) * 2 == largest:\n        if c > largest:\n            return -1\n        elif opp_c > largest:\n            opp_c = c - dif - 1\n            if opp_c <= 0:\n                return -1\n            else:\n                return opp_c\n        else:\n            return opp_c\n    else:\n        return -1\nt = int(input())\ntest_case_list_2D = []\nfor test_case in range(t):\n    list = []\n    (a, b, c) = input().split()\n    a = int(a)\n    b = int(b)\n    c = int(c)\n    list.append(a)\n    list.append(b)\n    list.append(c)\n    test_case_list_2D.append(list)\nfor list_test in test_case_list_2D:\n    a = list_test[0]\n    b = list_test[1]\n    c = list_test[2]\n    y = finding_opposite(a, b, c)\n    print(y)", "t = int(input())\nans = [0 for _ in range(t)]\nfor i in range(t):\n    (a, b, c) = list(map(int, input().strip().split()))\n    total = 2 * abs(a - b)\n    diff = abs(a - b)\n    if diff <= 1 or a > total or b > total or (c > total):\n        ans[i] = -1\n        continue\n    d1 = c + diff\n    d2 = c - diff\n    if 1 <= d1 <= total:\n        ans[i] = d1\n        continue\n    if 1 <= d2 <= total:\n        ans[i] = d2\n        continue\n    ans[i] = -1\nprint('\\n'.join([str(ans[i]) for i in range(t)]))", "t = int(input())\nfor _ in range(t):\n    (a, b, c) = map(int, input().split())\n    x = abs((a - b) * 2)\n    if max(a, b, c) > x:\n        print(-1)\n    elif c <= x // 2:\n        print(c + x // 2)\n    else:\n        print(c - x // 2)", "t = int(input())\nfor _ in range(t):\n    (a, b, c) = map(int, input().split())\n    x = abs((a - b) * 2)\n    if max(a, b, c) > x:\n        print(-1)\n    elif c <= x // 2:\n        print(c + x // 2)\n    else:\n        print(c - x // 2)", "t = int(input())\nlis = []\nout = []\nfor i in range(t):\n    lis.append([int(j) for j in input().split()])\n    (a, b, c) = lis[i]\n    N = 2 * abs(a - b)\n    if c > N or a > N or b > N:\n        out.append(-1)\n    else:\n        d = max(c + N // 2, c - N // 2)\n        if d > N:\n            d = d % N\n        out.append(d)\nfor i in out:\n    print(i)", "import math\nt = int(input())\nlist = []\nwhile t > 0:\n    s = input()\n    list.append(s.split(' '))\n    t = t - 1\nfor Klist in list:\n    Klist[0] = int(Klist[0])\n    Klist[1] = int(Klist[1])\n    Klist[2] = int(Klist[2])\n    num = abs(Klist[0] - Klist[1]) * 2\n    n = -1\n    if Klist[0] <= num and Klist[1] <= num:\n        if Klist[2] <= num:\n            if Klist[2] > num / 2:\n                n = Klist[2] - num / 2\n            else:\n                n = Klist[2] + num / 2\n            if n == Klist[0] or n == Klist[1]:\n                print('-1')\n            else:\n                print(int(n))\n        else:\n            print('-1')\n    else:\n        print('-1')", "test = int(input())\nfor i in range(test):\n    (a, b, c) = map(int, input().split())\n    n = 2 * (a - b)\n    diff = a - b\n    if n < 0:\n        n = -n\n    if diff < 0:\n        diff = -diff\n    if c > n or a > n or b > n:\n        print(-1)\n    elif c <= n / 2:\n        print(int(n / 2) + c)\n    else:\n        print(c - int(n / 2))", "for i in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    n = abs(a - b)\n    t = 2 * n\n    if max([a, b, c]) <= t:\n        d = c + n\n        if d > t:\n            d = d % t\n        print(d)\n    else:\n        print(-1)", "numbers = input()\nnumbers = int(numbers)\na = []\nb = []\nc = []\nfor i in range(1, numbers + 1):\n    (num1, num2, num3) = input().split(' ', 2)\n    num1 = int(num1)\n    num2 = int(num2)\n    num3 = int(num3)\n    a.append(num1)\n    b.append(num2)\n    c.append(num3)\nfor k in range(1, numbers + 1):\n    total = 2 * (abs(a[k - 1] - b[k - 1]) - 1) + 2\n    if total < max(a[k - 1], b[k - 1], c[k - 1]):\n        print('-1')\n    else:\n        d = c[k - 1] + abs(a[k - 1] - b[k - 1])\n        if d <= total:\n            print(d)\n        else:\n            d = c[k - 1] - abs(a[k - 1] - b[k - 1])\n            print(d)"]