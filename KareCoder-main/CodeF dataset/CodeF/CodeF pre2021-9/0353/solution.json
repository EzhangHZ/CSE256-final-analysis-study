["import math\n\ndef primeFactors(n):\n    a = []\n    while n % 2 == 0:\n        a.append(2)\n        n = n // 2\n    for i in range(3, int(math.sqrt(n)) + 1, 2):\n        while n % i == 0:\n            a.append(i)\n            n = n // i\n    if n > 2:\n        a.append(n)\n    return a\na = int(input())\nfor x in range(a):\n    b = int(input())\n    s = primeFactors(b)\n    if len(s) == 1:\n        print(1)\n        print(*s)\n    else:\n        d = {}\n        for x in range(len(s)):\n            if d.get(s[x]) == None:\n                d[s[x]] = 1\n            else:\n                d[s[x]] += 1\n        h = 0\n        m = ''\n        for x in d:\n            if d[x] == h:\n                if x > m:\n                    h = d[x]\n                    m = x\n            elif d[x] > h:\n                h = d[x]\n                m = x\n        l = 1\n        for x in range(len(s)):\n            if s[x] != m:\n                l *= s[x]\n        print(h)\n        for x in range(h - 1):\n            print(m, end=' ')\n        print(m * l)", "import math\n\ndef primeFactors(n):\n    d = {}\n    while n % 2 == 0:\n        if d.get(2):\n            d[2] += 1\n        else:\n            d[2] = 1\n        n = n / 2\n    for i in range(3, int(math.sqrt(n)) + 1, 2):\n        while n % i == 0:\n            if d.get(i):\n                d[i] += 1\n            else:\n                d[i] = 1\n            n = n / i\n    if n > 2:\n        if d.get(n):\n            d[n] += 1\n        else:\n            d[n] = 1\n    return d\nfor _ in range(int(input())):\n    n = int(input())\n    t = n\n    d = primeFactors(t)\n    m = -1\n    z = 1\n    for i in d:\n        m = max(m, d[i])\n        if m == d[i]:\n            z = i\n    print(m)\n    for i in range(m - 1):\n        print(z, end=' ')\n    print(int(n // z ** (m - 1)))", "import math\n\ndef primeFactors(n):\n    a = []\n    while n % 2 == 0:\n        a.append(2)\n        n = n / 2\n    for i in range(3, int(math.sqrt(n)) + 1, 2):\n        while n % i == 0:\n            (a.append(i),)\n            n = n / i\n    if n > 2:\n        a.append(n)\n    return a\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    d = {}\n    a1 = primeFactors(n)\n    for j in a1:\n        if j not in d:\n            d[j] = 1\n        else:\n            d[j] += 1\n    j1 = sorted(d.items(), key=lambda kv: (kv[1], kv[0]))\n    k1 = j1[-1][0]\n    v1 = j1[-1][1]\n    print(v1)\n    for j in range(v1 - 1):\n        print(int(k1), end=' ')\n    print(int(n // k1 ** (v1 - 1)))", "import math\nfrom collections import Counter\n\ndef primeFactors(n):\n    l = []\n    while n % 2 == 0:\n        l.append(2)\n        n = n / 2\n    for i in range(3, int(math.sqrt(n)) + 1, 2):\n        while n % i == 0:\n            l.append(i)\n            n = int(n / i)\n    if n > 2:\n        l.append(n)\n    return l\nfor _ in range(int(input())):\n    n = int(input())\n    tmp = primeFactors(n)\n    ans = []\n    ind = 0\n    d = Counter(tmp)\n    z = []\n    for i in d:\n        z.append([d[i], i])\n    z = sorted(z, reverse=True)\n    prod = 1\n    for i in range(z[0][0] - 1):\n        ans.append(z[0][1])\n        prod *= z[0][1]\n    print(len(ans) + 1)\n    print(*ans, int(n / prod))", "from collections import *\nfrom math import *\n\ndef PrimeFactors(n):\n    factors = []\n    if n < 0:\n        factors.append(-1)\n        n = abs(n)\n    while n % 2 == 0:\n        factors.append(2)\n        n //= 2\n    for i in range(3, int(sqrt(n)) + 1, 2):\n        while n % i == 0:\n            factors.append(i)\n            n //= i\n    if n > 1:\n        factors.append(n)\n    return factors\nfor i1 in range(int(input())):\n    n = int(input())\n    fact = PrimeFactors(n)\n    C = Counter(fact)\n    C = [(C[i], i) for i in C]\n    C.sort(reverse=True)\n    ans = [C[0][1]] * C[0][0]\n    for (f, x) in C[1:]:\n        ans[-1] *= x ** f\n    print(len(ans))\n    print(*ans)", "from collections import defaultdict\n\ndef prime(n, d):\n    if n == 1:\n        return\n    for i in range(2, int(n ** 0.5) + 1):\n        while n % i == 0:\n            d[i] += 1\n            n = n // i\n    if n > 1:\n        d[n] += 1\nfor _ in range(int(input())):\n    n = int(input())\n    d = defaultdict(lambda : 0)\n    prime(n, d)\n    ans = []\n    m = max(d.values())\n    for i in d.keys():\n        if d[i] == m:\n            ans = [i] * (d[i] - 1)\n    c = 1\n    for i in ans:\n        c = c * i\n    ans.append(n // c)\n    print(len(ans))\n    print(*ans)", "import math\n\ndef solve(n):\n    a = []\n    b = {}\n    d = 0\n    while n % 2 == 0:\n        n = n / 2\n        d += 1\n    b[2] = d\n    d = 0\n    for i in range(3, int(math.sqrt(n)) + 1, 2):\n        while n % i == 0:\n            n = n / i\n            d += 1\n        b[i] = d\n        d = 0\n    if n > 2:\n        b[int(n)] = 1\n    te = max(b.values())\n    f = 0\n    for i in b.keys():\n        if b[i] == te:\n            f = i\n    print(b[f])\n    for i in range(0, b[f] - 1):\n        print(f, end=' ')\n    return (f, b[f])\nt = int(input())\nfor i in range(0, t):\n    a = int(input())\n    (c, d) = solve(a)\n    print(a // c ** (d - 1))"]