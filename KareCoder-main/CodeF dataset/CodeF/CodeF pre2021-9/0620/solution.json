["def makeRepeat(s):\n    repeat = [[s[0], 0]]\n    for ch in s:\n        if ch == repeat[-1][0]:\n            repeat[-1][1] += 1\n        else:\n            repeat.append([ch, 1])\n    return repeat\n\ndef solve(N, S):\n    assert len(S) == N - 1\n    curr = 0\n    repeat = makeRepeat(S)\n    longest = list(range(1, N + 1))\n    shortest = list(reversed(range(1, N + 1)))\n    for (ch, count) in repeat:\n        if ch == '>':\n            longest[curr:curr + count + 1] = reversed(longest[curr:curr + count + 1])\n        else:\n            assert ch == '<'\n            shortest[curr:curr + count + 1] = reversed(shortest[curr:curr + count + 1])\n        curr += count\n    return ' '.join(map(str, shortest)) + '\\n' + ' '.join(map(str, longest))\n(T,) = map(int, input().split())\nfor t in range(T):\n    (N, S) = input().split()\n    N = int(N)\n    ans = solve(N, S)\n    print(ans)", "import sys\n\ndef reverse(s):\n    return s[::-1]\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    for _ in range(N):\n        (n, s) = sys.stdin.readline().strip().split()\n        n = int(n)\n        a0 = [0] * n\n        cnt0 = 1\n        for i in list(range(n - 1))[::-1]:\n            if s[i] == '>':\n                a0[i + 1] = cnt0\n                cnt0 += 1\n        a1 = a0[:]\n        cnt1 = cnt0\n        for i in list(range(n))[::-1]:\n            if a1[i] == 0 and (i == 0 or a1[i - 1] != 0):\n                j = i\n                while j < n and a1[j] == 0:\n                    a1[j] = cnt1\n                    cnt1 += 1\n                    j += 1\n        print(' '.join((str(x) for x in a1)))\n        a2 = a0[:]\n        cnt2 = cnt0\n        for i in list(range(n)):\n            if a2[i] == 0 and (i == 0 or a2[i - 1] != 0):\n                j = i\n                while j < n and a2[j] == 0:\n                    a2[j] = cnt2\n                    cnt2 += 1\n                    j += 1\n        print(' '.join((str(x) for x in a2)))\nmain()", "t = int(input())\nfor test_case in range(t):\n    (n, pattern) = input().split()\n    n = int(n)\n    ans = [0] * n\n    (num, last) = (n, 0)\n    for i in range(n):\n        if i == n - 1 or pattern[i] == '>':\n            for j in range(i, last - 1, -1):\n                ans[j] = num\n                num -= 1\n            last = i + 1\n    print(' '.join((str(k) for k in ans)))\n    (num, last) = (1, 0)\n    for i in range(n):\n        if i == n - 1 or pattern[i] == '<':\n            for j in range(i, last - 1, -1):\n                ans[j] = num\n                num += 1\n            last = i + 1\n    print(' '.join((str(k) for k in ans)))", "t = int(input())\nfor _ in range(t):\n    (n, st) = input().split()\n    n = int(n)\n    num = n\n    last = 0\n    answ = [0 for i in range(n)]\n    for i in range(n):\n        if i == n - 1 or st[i] == '>':\n            for j in range(i, last - 1, -1):\n                answ[j] = num\n                num -= 1\n            last = i + 1\n    print(' '.join(map(str, answ)))\n    num = 1\n    last = 0\n    answ = [0 for i in range(n)]\n    for i in range(n):\n        if i == n - 1 or st[i] == '<':\n            for j in range(i, last - 1, -1):\n                answ[j] = num\n                num += 1\n            last = i + 1\n    print(' '.join(map(str, answ)))", "cases = int(input())\nfor _ in range(cases):\n    (l, s) = input().split()\n    l = int(l)\n    seq = []\n    i = 0\n    prev = l\n    start_i = 0\n    while i <= len(s):\n        start_i = i\n        while i < len(s) and s[i] == '<':\n            i += 1\n        for n in range(prev - (i - start_i), prev + 1):\n            seq.append(n)\n        prev -= i - start_i + 1\n        i += 1\n    print(' '.join([str(x) for x in seq]))\n    hi = 1\n    for c in s:\n        if c == '>':\n            hi += 1\n    seq = [hi]\n    lo = hi - 1\n    for c in s:\n        if c == '<':\n            hi += 1\n            seq.append(hi)\n        else:\n            seq.append(lo)\n            lo -= 1\n    print(' '.join([str(x) for x in seq]))", "import bisect\nimport collections\nimport copy\nimport enum\nimport functools\nimport heapq\nimport itertools\nimport math\nimport random\nimport re\nimport sys\nimport time\nimport string\nfrom typing import List\nsys.setrecursionlimit(3001)\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    (n, s) = input().split()\n    n = int(n)\n    l1 = list(range(n, 0, -1))\n    l2 = list(range(1, n + 1))\n    i = 0\n    while i < n - 1:\n        if s[i] == '<':\n            st = i\n            while i < n - 1 and s[i] == '<':\n                i += 1\n            l1[st:i + 1] = l1[st:i + 1][::-1]\n        i += 1\n    i = 0\n    while i < n - 1:\n        if s[i] == '>':\n            st = i\n            while i < n - 1 and s[i] == '>':\n                i += 1\n            l2[st:i + 1] = l2[st:i + 1][::-1]\n        i += 1\n    print(*l1)\n    print(*l2)", "from sys import stdin, stderr\n\ndef rl():\n    return [int(w) for w in stdin.readline().split()]\n\ndef p1(n, s, le):\n    r = []\n    b = i = 0\n    while i < n:\n        try:\n            ni = s.index(le, i) + 1\n        except ValueError:\n            ni = n\n        r += list(range(ni, i, -1))\n        i = ni\n    return r\n(t,) = rl()\nfor _ in range(t):\n    (n, s) = stdin.readline().split()\n    n = int(n)\n    print(*(n - x + 1 for x in p1(n, s, '>')))\n    print(*p1(n, s, '<'))", "line = input()\nq = int(line)\nfor _ in range(q):\n    line = input()\n    (n, s) = [x for x in line.split()]\n    n = int(n)\n    minseq = [n]\n    potential = 0\n    maxseq = [1]\n    minel = 1\n    maxel = 1\n    for x in s:\n        if x == '<':\n            maxseq.append(maxel + 1)\n            maxel += 1\n            potential += 1\n        elif x == '>':\n            if potential == 0:\n                minseq.append(minseq[-1] - 1)\n            else:\n                minseq[-1] -= potential\n                tmp = minseq[-1]\n                for _ in range(potential):\n                    minseq.append(minseq[-1] + 1)\n                potential = 0\n                minseq.append(tmp - 1)\n            maxseq.append(minel - 1)\n            minel -= 1\n    if potential != 0:\n        minseq[-1] -= potential\n        for _ in range(potential):\n            minseq.append(minseq[-1] + 1)\n    for x in minseq:\n        print(x, end=' ')\n    print('')\n    for x in maxseq:\n        print(x - minel + 1, end=' ')\n    print('')", "for _ in range(int(input())):\n    (n, s) = map(str, input().split())\n    n = int(n)\n    mn = [0] * n\n    mx = [0] * n\n    for i in range(n):\n        mn[i] = n - i\n        mx[i] = i + 1\n    j = 0\n    i = 0\n    while i < n - 1:\n        while j < n - 1 and s[i] == s[j]:\n            j += 1\n        if s[i] == '<':\n            mn[i:j + 1] = mn[i:j + 1][::-1]\n        else:\n            mx[i:j + 1] = mx[i:j + 1][::-1]\n        i = j\n    print(*mn)\n    print(*mx)", "import sys\ninput = sys.stdin.readline\nT = int(input())\nfor _ in range(T):\n    (n, s) = input().split()\n    n = int(n)\n    (inc, dec) = ([[0]], [[0]])\n    for i in range(n - 1):\n        if s[i] == '>':\n            inc.append([])\n        else:\n            dec.append([])\n        inc[-1].append(i + 1)\n        dec[-1].append(i + 1)\n    ans1_last = n + 1\n    ans2_last = 0\n    ans1 = [0] * n\n    ans2 = [0] * n\n    for l in inc:\n        ans1_last -= len(l)\n        for i in range(len(l)):\n            ans1[l[i]] = ans1_last + i\n    for l in dec:\n        ans2_last += len(l)\n        for i in range(len(l)):\n            ans2[l[i]] = ans2_last - i\n    print(*ans1)\n    print(*ans2)", "for t in range(int(input())):\n    (n, s) = [i for i in input().split()]\n    n = int(n)\n    s1 = ''\n    s2 = ''\n    for i in range(n - 1):\n        if s[i] == '<':\n            s1 += '0'\n            s2 += '1'\n        else:\n            s1 += '1'\n            s2 += '0'\n    s2 = s2[::-1]\n    res1 = []\n    res2 = []\n    temp1 = [1]\n    temp2 = [1]\n    curr = 2\n    i = 0\n    while i < n - 1:\n        if s1[i] == '0':\n            while temp1:\n                res1.append(temp1.pop())\n            temp1.append(i + 2)\n        else:\n            temp1.append(i + 2)\n        if s2[i] == '0':\n            while temp2:\n                res2.append(temp2.pop())\n            temp2.append(i + 2)\n        else:\n            temp2.append(i + 2)\n        i += 1\n    while temp1:\n        res1.append(temp1.pop())\n    while temp2:\n        res2.append(temp2.pop())\n    print(*res2[::-1])\n    print(*res1)", "for nt in range(int(input())):\n    (n, s) = input().split()\n    n = int(n)\n    a = [i for i in range(n, 0, -1)]\n    i = 0\n    c = []\n    while i < n:\n        if i < n - 1 and s[i] == '<':\n            start = i\n            while start < n - 1 and s[start] == '<':\n                start += 1\n            c.append((i, start))\n            i = start\n        else:\n            i += 1\n    (j, i) = (0, 0)\n    ans = []\n    while i < n:\n        if j < len(c) and c[j][0] == i:\n            for k in range(c[j][1], c[j][0] - 1, -1):\n                ans.append(a[k])\n            i = c[j][1] + 1\n            j += 1\n        else:\n            ans.append(a[i])\n            i += 1\n    print(*ans)\n    a = [i for i in range(1, n + 1)]\n    i = 0\n    c = []\n    while i < n:\n        if i < n - 1 and s[i] == '>':\n            start = i\n            while start < n - 1 and s[start] == '>':\n                start += 1\n            c.append((i, start))\n            i = start\n        else:\n            i += 1\n    (j, i) = (0, 0)\n    ans = []\n    while i < n:\n        if j < len(c) and c[j][0] == i:\n            for k in range(c[j][1], c[j][0] - 1, -1):\n                ans.append(a[k])\n            i = c[j][1] + 1\n            j += 1\n        else:\n            ans.append(a[i])\n            i += 1\n    print(*ans)"]