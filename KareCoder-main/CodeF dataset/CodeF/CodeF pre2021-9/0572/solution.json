["from itertools import *\nfor s in [*open(0)][2::2]:\n    a = [len([*g]) for (k, g) in groupby(s[:-1])]\n    a[0] += len(a) % 2 and (a.pop() if a[1:] else 2)\n    print(sum((x // 3 for x in a)))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    t = []\n    x = 1\n    for i in range(1, n):\n        if s[i] == s[i - 1]:\n            x += 1\n        else:\n            t.append(x)\n            x = 1\n    t.append(x)\n    if len(t) > 1 and s[0] == s[-1]:\n        t[0] += t.pop(-1)\n    ans = 0\n    for i in t:\n        ans += i // 3\n    if len(t) == 1:\n        print((t[0] + 2) // 3)\n    else:\n        print(ans)", "from itertools import *\nfor s in [*open(0)][2::2]:\n    a = [len([*g]) for (k, g) in groupby(s[:-1])]\n    if len(a) % 2:\n        a[0] += a.pop() if a[1:] else 2\n    print(sum((x // 3 for x in a)))", "import math\n\ndef BedWars(n, s):\n    if 'L' not in s or 'R' not in s:\n        if n < 3:\n            return 0\n        return math.ceil(n / 3)\n    res = 0\n    i = 0\n    j = n - 1\n    if s[0] == s[-1]:\n        (left, right) = (None, None)\n        while i < n and s[i] == s[0]:\n            left = i\n            i += 1\n        while j >= 0 and s[j] == s[0]:\n            right = j\n            j -= 1\n        temp = left + 1 + n - right\n        res = res + temp // 3\n    ch = None\n    index = -1\n    vac = True\n    ptr = i\n    while ptr <= j:\n        if vac:\n            ch = s[ptr]\n            vac = False\n            index = ptr\n            ptr += 1\n        elif s[ptr] == ch:\n            ptr += 1\n            if ptr > j:\n                res += (ptr - index) // 3\n                break\n        else:\n            temp = ptr - index\n            res += temp // 3\n            vac = True\n    return res\nt = int(input())\nfor y in range(t):\n    n = int(input())\n    s = input()\n    print(BedWars(n, s))", "import sys\nsys.setrecursionlimit(10 ** 5)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\nfor _ in range(II()):\n    n = II()\n    s = SI()\n    cR = s.count('R')\n    if cR == n or cR == 0:\n        if n < 3:\n            ans = 0\n        elif n == 3:\n            ans = 1\n        else:\n            ans = (n + 2) // 3\n        print(ans)\n        continue\n    s *= 2\n    si = -1\n    for i in range(1, n):\n        if s[i - 1] != s[i]:\n            si = i\n            break\n    cnt = 1\n    ans = 0\n    for i in range(si, si + n):\n        if s[i] != s[i + 1]:\n            ans += cnt // 3\n            cnt = 1\n        else:\n            cnt += 1\n    print(ans)", "import math as mt\n\ndef tran(s, n):\n    an = 0\n    cou = []\n    c = 1\n    for i in range(n - 1):\n        if s[i + 1] == s[i]:\n            c += 1\n        else:\n            cou.append(c)\n            c = 1\n    cou.append(c)\n    if s[-1] == s[0] and len(cou) > 1:\n        p = cou.pop(-1)\n        cou[0] += p\n    for i in range(len(cou)):\n        if cou[i] == 1 or cou[i] == 2:\n            pass\n        else:\n            an = an + mt.ceil((cou[i] - 2) / 3)\n    if len(cou) == 1:\n        return 1 + mt.ceil((cou[0] - 3) / 3)\n    else:\n        return an\nt = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    s = input()\n    r = tran(s, n)\n    ans.append(r)\nfor i in ans:\n    print(i)", "t = int(input())\nanss = []\nfor _ in range(t):\n    n = int(input())\n    l = list(input())\n    currl = l[0]\n    cnts = []\n    curr_cnt = 1\n    for i in l[1:]:\n        if i == currl:\n            curr_cnt += 1\n        else:\n            currl = i\n            cnts.append(curr_cnt)\n            curr_cnt = 1\n    cnts.append(curr_cnt)\n    if len(cnts) == 1:\n        ans = (cnts[0] + 2) // 3\n    else:\n        if len(cnts) % 2 == 1 and len(cnts) != 1:\n            cnts = [cnts[0] + cnts[-1]] + cnts[1:-1]\n        ans = 0\n        for i in cnts:\n            if i >= 3:\n                ans += i // 3\n    anss.append(ans)\nfor ans in anss:\n    print(ans)", "from itertools import *\nfor s in [*open(0)][2::2]:\n    a = [len([*g]) for (k, g) in groupby(s[:-1])]\n    a[0] += len(a) % 2 and (a[1:] and a.pop() or 2)\n    print(sum((x // 3 for x in a)))", "n = int(input())\nfor i in range(n):\n    k = int(input())\n    s = input()\n    l = [1]\n    c = 0\n    su = 0\n    flag = 0\n    if len(s) == 1:\n        print(1)\n        continue\n    for j in range(k - 1):\n        if s[j] == s[j + 1]:\n            l[-1] += 1\n        else:\n            l.append(1)\n    if s[0] == s[-1] and ('L' in s and 'R' in s):\n        l[0] += l.pop()\n    elif 'L' not in s or 'R' not in s:\n        su = (l[0] + 2) // 3\n        print(su)\n        continue\n    for j in l:\n        su += j // 3\n    print(su)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    l = [0]\n    for i in range(n - 1):\n        l[-1] += 1\n        if s[i] != s[i + 1]:\n            l.append(0)\n    l[-1] += 1\n    if len(l) == 1:\n        print((n + 2) // 3)\n    else:\n        if s[0] == s[-1]:\n            l[0] += l.pop()\n        print(sum((i // 3 for i in l)))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    l = [0]\n    for i in range(n - 1):\n        l[-1] += 1\n        if s[i] != s[i + 1]:\n            l.append(0)\n    l[-1] += 1\n    if len(l) == 1:\n        print((n + 2) // 3)\n    else:\n        if s[0] == s[-1]:\n            l[0] += l.pop()\n        print(sum((i // 3 for i in l)))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    sl = list(s)\n    cnt = 0\n    while sl and sl[0] == sl[-1]:\n        cnt += 1\n        sl.pop()\n    if len(set(s)) == 1:\n        if n <= 3:\n            print(n // 3)\n        else:\n            print((n + 2) // 3)\n    else:\n        ans = 0\n        sl.append('$')\n        for i in range(len(sl) - 1):\n            cnt += 1\n            if sl[i] != sl[i + 1]:\n                ans += cnt // 3\n                cnt = 0\n        print(ans)", "for t in range(int(input())):\n    n = int(input())\n    f = list(input())\n    ans = 0\n    fir = 0\n    sem = 1\n    for i in range(1, n):\n        if f[i] == f[i - 1]:\n            sem += 1\n        elif fir == 0:\n            fir = sem\n            sem = 1\n        else:\n            ans += sem // 3\n            sem = 1\n    if sem == n and n % 3 != 0:\n        ans += 1\n    if f[0] == f[-1]:\n        ans += (sem + fir) // 3\n    else:\n        ans += sem // 3\n        ans += fir // 3\n    print(ans)", "tc = int(input())\nfor t in range(tc):\n    n = int(input())\n    s = str(input())\n    l = []\n    l.append(0)\n    for i in range(n - 1):\n        l[-1] += 1\n        if s[i] != s[i + 1]:\n            l.append(0)\n    l[-1] += 1\n    ll = len(l)\n    if ll > 1:\n        if s[0] == s[-1]:\n            l[0] += l[-1]\n            ll -= 1\n        ans = 0\n        for i in range(ll):\n            ans += l[i] // 3\n        print(ans)\n    else:\n        print((n + 2) // 3)", "t = int(input())\nwhile t != 0:\n    input()\n    s = input()\n    i = 0\n    mod_s = ''\n    b = 0\n    for (i, c) in enumerate(s):\n        if c != s[-1]:\n            b = i\n            break\n    s = s[b:] + s[0:b]\n    last = s[0]\n    f = 1\n    ans = 0\n    for c in s[1:]:\n        if c == last:\n            f += 1\n        else:\n            ans += f // 3\n            last = c\n            f = 1\n    ans += f // 3\n    if f == len(s) and len(s) % 3 != 0:\n        ans += 1\n    print(ans)\n    t -= 1", "from itertools import groupby\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = 0\n    if len(set(list(s))) == 1:\n        if n % 3 == 0:\n            ans = n // 3\n        else:\n            ans = n // 3 + 1\n    else:\n        c = 0\n        if s[0] == s[n - 1]:\n            for i in range(n):\n                if s[i] == s[n - 1]:\n                    c += 1\n                else:\n                    break\n            s = s[c:] + s[-n:c]\n        for (num, grp) in groupby(s):\n            l = len(''.join(grp))\n            ans += l // 3\n    print('%d\\n' % ans)", "from math import ceil\n\ndef main():\n    for _ in range(int(input())):\n        size = int(input())\n        array = list(input())\n        ans = 0\n        count = 0\n        while len(array) and array[0] == array[-1]:\n            count += 1\n            array.pop()\n        if len(array) == 0:\n            if count <= 2:\n                print(0)\n            else:\n                print((count + 2) // 3)\n            continue\n        array.append('$')\n        for i in range(len(array) - 1):\n            count += 1\n            if array[i] != array[i + 1]:\n                ans += count // 3\n                count = 0\n        print(ans)\nmain()", "import math\nt = int(input())\nfor j in range(t):\n    n = int(input())\n    s = input()\n    set_s = set(s)\n    count = 1\n    ans = 0\n    if len(set_s) > 1:\n        if s[0] == s[-1]:\n            a = s.index('L')\n            b = s.index('R')\n            if a > b:\n                s = s[a:] + s[b:a]\n            else:\n                s = s[b:] + s[a:b]\n        for i in range(1, n):\n            if s[i - 1] == s[i]:\n                count += 1\n            else:\n                ans += count // 3\n                count = 1\n            if i == n - 1:\n                ans += count // 3\n        print(ans)\n    else:\n        print(math.ceil(n / 3))", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    l = list(s)\n    cnt = s.count('R')\n    if cnt == 0 or cnt == n:\n        print(math.ceil(n / 3))\n    else:\n        (start, end, c) = (0, n - 1, 0)\n        prev = s[0]\n        while start < n and s[start] == prev:\n            start += 1\n            c += 1\n        while end >= 0 and s[end] == prev:\n            end -= 1\n            c += 1\n        ans = math.floor(c / 3)\n        prev = 'R'\n        c = 0\n        for i in range(start, end + 1):\n            if s[i] == prev:\n                c += 1\n            else:\n                ans += math.floor(c / 3)\n                c = 1\n                prev = s[i]\n        ans += math.floor(c / 3)\n        print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    l = [0]\n    for i in range(n - 1):\n        l[-1] += 1\n        if s[i] != s[i + 1]:\n            l.append(0)\n    l[-1] += 1\n    if len(l) == 1:\n        print((n + 2) // 3)\n    else:\n        if s[0] == s[-1]:\n            l[0] += l.pop()\n        print(sum((i // 3 for i in l)))", "for _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    ans = 0\n    m = 1\n    if s.count('R') == n or s.count('L') == n:\n        ans = (n + 2) // 3\n    else:\n        while s[-1] == s[0]:\n            s.append(s.pop(0))\n        s.append('A')\n        for i in range(len(s) - 1):\n            if s[i] == s[i + 1]:\n                m += 1\n            else:\n                ans += m // 3\n                m = 1\n    print(ans)", "def ne(c):\n    if c == 'L':\n        return 'R'\n    return 'L'\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = 0\n    if s[0] * n == s:\n        ans += 1\n        s = ne(s[0]) + s[0] * (n - 1)\n    if s[0] == s[-1]:\n        i = 0\n        while s[i] == s[0]:\n            i += 1\n        s = s[i:] + s[:i]\n    lst = '#'\n    cnt = 0\n    for i in range(n):\n        if lst != s[i]:\n            lst = s[i]\n            ans += cnt // 3\n            cnt = 1\n        else:\n            cnt += 1\n    ans += cnt // 3\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    string = input()\n    j = 0\n    ans = 0\n    while j < n - 1 and string[j] == string[j + 1]:\n        j += 1\n    if j != n - 1:\n        string1 = string[0:j + 1]\n        string2 = string[j + 1:n]\n        string = string2 + string1\n        j = 0\n        while j < n - 1:\n            s = 0\n            while j < n - 1 and string[j] == string[j + 1]:\n                j += 1\n                s += 1\n            ans += (s + 1) // 3\n            j += 1\n    else:\n        ans = (n + 2) // 3\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    l = [0]\n    for i in range(n - 1):\n        l[-1] += 1\n        if s[i] != s[i + 1]:\n            l.append(0)\n    l[-1] += 1\n    if len(l) == 1:\n        print((n + 2) // 3)\n    else:\n        if s[0] == s[-1]:\n            l[0] += l.pop()\n        print(sum((i // 3 for i in l)))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    l = [1]\n    for i in range(1, n):\n        if s[i] == s[i - 1]:\n            l[-1] += 1\n        else:\n            l.append(1)\n    if len(l) % 2 == 1 and len(l) != 1:\n        l[0] += l[-1]\n        l = l[:len(l) - 1]\n    ans = 0\n    if len(l) == 1:\n        if l[0] == 0 or l[0] == 1 or l[0] == 2:\n            ans = 0\n        else:\n            ans = 1 + (l[0] - 1) // 3\n    else:\n        for i in l:\n            ans += i // 3\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    now = s[0]\n    cnt = 0\n    ans = 0\n    flg = 1\n    for x in range(1, n):\n        if s[x] != now:\n            if x == n - 1:\n                print((n - 1) // 3)\n                flg = 0\n                break\n            first_last = x - 1\n            now = s[x]\n            cnt = 1\n            break\n        if x == n - 1:\n            flg = 0\n            print(1 + (n - 1) // 3)\n    if flg:\n        for i in range(first_last + 2, n):\n            if s[i] == now:\n                cnt += 1\n            else:\n                ans += cnt // 3\n                now = s[i]\n                cnt = 1\n            if i == n - 1:\n                if now == s[0]:\n                    cnt += first_last + 1\n                else:\n                    ans += (first_last + 1) // 3\n                ans += cnt // 3\n        print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    t = input()\n    i = 0\n    if len(set(t)) > 1:\n        while t[-i - 1] == t[0]:\n            i += 1\n        if i:\n            t = t[0] * i + t[:-i]\n        i = 0\n        ops = 0\n        while i < len(t):\n            j = 1\n            while i + j < len(t) and t[i + j] == t[i]:\n                j += 1\n            ops += j // 3\n            i += j\n    else:\n        ops = (len(t) + 2) // 3\n    print(ops)", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(input().strip())\n    l = 0\n    r = 0\n    c = []\n    for j in range(n):\n        if a[j] == 'R':\n            r = r + 1\n            if l >= 1:\n                c.append(l)\n                l = 0\n        else:\n            l = l + 1\n            if r >= 1:\n                c.append(r)\n                r = 0\n    if l > 0:\n        c.append(l)\n    elif r > 0:\n        c.append(r)\n    if a[0] == a[-1] and len(c) > 1:\n        c[0] = c[0] + c[-1]\n        del c[-1]\n    if len(c) == 1:\n        if c[0] >= 3:\n            print(math.ceil(c[0] / 3))\n        else:\n            print(0)\n    else:\n        an = 0\n        for v in c:\n            an = an + v // 3\n        print(an)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    f = 0\n    if s[0] == s[-1]:\n        f = 1\n    p = 0\n    c = s[0]\n    b = []\n    x1 = 0\n    ans = 0\n    for i in range(n):\n        if s[i] == c:\n            p += 1\n        else:\n            b.append(p)\n            p = 1\n            c = s[i]\n        if i == n - 1:\n            b.append(p)\n    if len(b) == 1:\n        ans += b[0] // 3 + (b[0] % 3 != 0)\n    else:\n        if f:\n            t = 0\n            if len(b) > 1:\n                t = b.pop()\n            b[0] += t\n        for i in range(len(b)):\n            ans += b[i] // 3\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    l = [0]\n    for i in range(n - 1):\n        l[-1] += 1\n        if s[i] != s[i + 1]:\n            l.append(0)\n    l[-1] += 1\n    if len(l) == 1:\n        print((n + 2) // 3)\n    else:\n        if s[0] == s[-1]:\n            l[0] += l.pop()\n        print(sum((i // 3 for i in l)))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    for i in range(n - 1):\n        if s[i] != s[i + 1]:\n            s = s[i + 1:] + s[:i + 1]\n            break\n    else:\n        print((n + 2) // 3)\n        continue\n    ans = 0\n    cnt = 1\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            cnt += 1\n        else:\n            ans += cnt // 3\n            cnt = 1\n    ans += cnt // 3\n    print(ans)", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    s = list(input())\n    all_same = True\n    for i in range(1, len(s)):\n        if s[i] != s[0]:\n            all_same = False\n            break\n    if all_same:\n        print((len(s) + 2) // 3)\n        continue\n    arr = []\n    cnt = 1\n    last = 0\n    for i in range(1, len(s)):\n        if s[last] == s[i]:\n            cnt += 1\n        else:\n            arr.append(cnt)\n            cnt = 1\n            last = i\n    if s[0] == s[n - 1]:\n        arr[0] += cnt\n    else:\n        arr.append(cnt)\n    ans = 0\n    for a in arr:\n        ans += a // 3\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    l = []\n    i = 0\n    while i < n:\n        ct = 0\n        while i < n and s[i] == 'L':\n            ct += 1\n            i += 1\n        if ct > 0:\n            l.append(ct)\n        ct = 0\n        while i < n and s[i] == 'R':\n            ct += 1\n            i += 1\n        if ct > 0:\n            l.append(ct)\n    if s[0] == s[-1]:\n        l[0] += l[-1]\n        l.pop()\n    if len(l) < 2:\n        print((n + 2) // 3)\n    else:\n        ct = 0\n        for i in l:\n            ct += i // 3\n        print(ct)", "from math import ceil, floor\n\ndef solve():\n    n = int(input())\n    s = input()\n    if len(set(s)) == 1:\n        print(ceil(n / 3)) if n > 2 else print(0)\n        return\n    c = s[0]\n    (idx, start) = (0, 0)\n    for i in range(1, n):\n        if s[i] != c:\n            (idx, start) = (i, i)\n            break\n    lst = []\n    while True:\n        length = 1\n        while s[(idx + 1) % n] == s[idx % n]:\n            length += 1\n            idx = (idx + 1) % n\n        idx = (idx + 1) % n\n        lst.append(length)\n        if idx == start:\n            break\n    ans = 0\n    for x in lst:\n        ans += floor(x / 3)\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    l = []\n    i = 0\n    while i < n:\n        ct = 0\n        while i < n and s[i] == 'L':\n            ct += 1\n            i += 1\n        if ct > 0:\n            l.append(ct)\n        ct = 0\n        while i < n and s[i] == 'R':\n            ct += 1\n            i += 1\n        if ct > 0:\n            l.append(ct)\n    if s[0] == s[-1]:\n        l[0] += l[-1]\n        l.pop()\n    if len(l) < 2:\n        print((n + 2) // 3)\n    else:\n        ct = 0\n        for i in l:\n            ct += i // 3\n        print(ct)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    s = str(input())\n    count = []\n    temp = 1\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            temp += 1\n        else:\n            count.append(temp)\n            temp = 1\n    count.append(temp)\n    if s[0] == s[-1] and len(count) != 1:\n        count[0] = count[0] + count[-1]\n        count.pop()\n    ans = 0\n    if count[0] == n:\n        ans = int(math.ceil(n / 3))\n    else:\n        for i in count:\n            ans += i // 3\n    print(ans)", "def main():\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(str, input()))\n        if len(set(a)) == 1:\n            if n % 3 == 0:\n                print(n // 3)\n            else:\n                print(n // 3 + 1)\n        else:\n            while True:\n                if a[0] == a[n - 1]:\n                    a.append(a[0])\n                    a.remove(a[0])\n                else:\n                    break\n            s = 0\n            c = 1\n            for i in range(1, n):\n                if a[i] == a[i - 1]:\n                    if i == n - 1:\n                        c = c + 1\n                        s = s + c // 3\n                        break\n                    else:\n                        c = c + 1\n                else:\n                    s = s + c // 3\n                    c = 1\n            print(s)\nmain()", "import sys\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    c = 1\n    g = [1]\n    for j in range(1, n):\n        if s[j] == s[j - 1]:\n            g[c - 1] = g[c - 1] + 1\n        else:\n            g.append(1)\n            c = c + 1\n    if c == 1:\n        print((g[0] + 2) // 3)\n    else:\n        if c % 2 == 1:\n            g[0] = g[0] + g[c - 1]\n            c = c - 1\n        sum = 0\n        for j in range(c):\n            sum = sum + g[j] // 3\n        print(sum)", "import math\nt = int(input())\nfor j in range(t):\n    n = int(input())\n    s = input()\n    set_s = set(s)\n    count = 1\n    ans = 0\n    if len(set_s) > 1:\n        if s[0] == s[-1]:\n            a = s.index('L')\n            b = s.index('R')\n            if a > b:\n                s = s[a:] + s[b:a]\n            else:\n                s = s[b:] + s[a:b]\n        for i in range(1, n):\n            if s[i - 1] == s[i]:\n                count += 1\n            else:\n                ans += count // 3\n                count = 1\n            if i == n - 1:\n                ans += count // 3\n        print(ans)\n    else:\n        print(math.ceil(n / 3))", "from math import ceil\n\ndef same(s):\n    if s == 'R' * len(s) or s == 'L' * len(s):\n        return True\n    return False\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    s1 = ''\n    if same(s):\n        print(ceil(n / 3))\n        continue\n    f = n - 1\n    for i in range(n - 1, -1, -1):\n        if s[0] == s[i]:\n            f -= 1\n        else:\n            break\n    for i in range(f + 1, n):\n        s1 += s[i]\n    for i in range(0, f + 1):\n        s1 += s[i]\n    i = 0\n    cnt = 0\n    while i < n:\n        s2 = s1[i:i + 3]\n        if s2 == 'LLL' or s2 == 'RRR':\n            cnt += 1\n            i += 3\n        else:\n            i += 1\n    print(cnt)", "import math as mt\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    ans = []\n    cnt = 1\n    for i in range(1, n):\n        if s[i - 1] == s[i]:\n            cnt += 1\n            continue\n        ans += [[cnt, s[i - 1]]]\n        cnt = 1\n    ans += [[cnt, s[n - 1]]]\n    if ans[len(ans) - 1][1] == ans[0][1] and len(ans) > 1:\n        ans[0][0] += ans[len(ans) - 1][0]\n        ans.pop()\n    if len(ans) == 1:\n        print(mt.ceil(ans[0][0] / 3))\n    else:\n        print(sum((ans[i][0] // 3 for i in range(len(ans)))))", "a = int(input())\nimport math\n\ndef nott(a):\n    if a == 1:\n        return 0\n    else:\n        return 1\nfor i in range(0, a):\n    b = int(input())\n    s = input()\n    arr = []\n    for i in s:\n        if i == 'L':\n            arr.append(1)\n        else:\n            arr.append(0)\n    brr = []\n    piv = arr[0]\n    count = 0\n    for i in range(0, len(arr)):\n        if arr[i] == piv:\n            count = count + 1\n        else:\n            piv = nott(piv)\n            brr.append(count)\n            count = 1\n    brr.append(count)\n    if piv == arr[0]:\n        c = brr[0]\n        brr[0] = 0\n        brr[len(brr) - 1] = brr[len(brr) - 1] + c\n    ans = 0\n    for i in brr:\n        ans = ans + i // 3\n    if len(brr) == 1:\n        print(math.ceil(brr[0] / 3))\n    else:\n        print(ans)", "from math import ceil\nfrom math import floor\nfor case in range(int(input())):\n    n = int(input())\n    s = input()\n    if all((s[i] == 'L' for i in range(n))) or all((s[i] == 'R' for i in range(n))):\n        print(ceil(n / 3))\n    else:\n        index1 = -1\n        index2 = 1\n        first = s[0]\n        chains = []\n        while s[index1] == first:\n            index1 -= 1\n        index1 += 1\n        while s[index2] == first:\n            index2 += 1\n        chains.append(floor((index1 * -1 + index2) / 3))\n        buffer = s[index2]\n        counts = 1\n        for j in range(index2 + 1, n + index1):\n            if s[j] == buffer:\n                counts += 1\n                if j == n + index1 - 1:\n                    chains.append(floor(counts / 3))\n            else:\n                chains.append(floor(counts / 3))\n                buffer = s[j]\n                counts = 1\n        print(sum(chains))", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    r = 0\n    l = 0\n    b = []\n    for i in range(n):\n        if a[i % n] == 'R':\n            if l != 0:\n                b.append(l)\n            r += 1\n            l = 0\n        else:\n            if r != 0:\n                b.append(r)\n            l += 1\n            r = 0\n    if len(b) == 0:\n        b.append(0)\n    if a[0] == a[-1]:\n        b[0] += r + l\n    else:\n        b.append(r + l)\n    ans = 0\n    for i in b:\n        ans += i // 3\n    if a.count('R') == n or a.count('L') == n:\n        print((n + 2) // 3)\n    else:\n        print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(str(input()))\n    ans = 0\n    flag = 0\n    c = 1\n    for i in range(1, n):\n        if a[i] != a[i - 1]:\n            flag = 1\n            break\n    if i == n - 1 and flag == 0:\n        if a[0] == 'R':\n            a[0] = 'L'\n        else:\n            a[0] = 'R'\n        ans = 1\n    else:\n        a = a[i:n] + a[:i]\n    for i in range(1, n):\n        if a[i] == a[i - 1]:\n            c += 1\n        else:\n            ans += c // 3\n            c = 1\n    print(ans + c // 3)", "for i1 in range(int(input())):\n    n = int(input())\n    s = input()\n    s = s.replace('\\r', '')\n    c1 = 0\n    c2 = 0\n    ans = 0\n    dict = {}\n    for i in s:\n        if i not in dict:\n            dict[i] = 1\n        else:\n            dict[i] += 1\n    if len(dict) == 1:\n        if n / 3 == n // 3:\n            print(n // 3)\n        else:\n            print(n // 3 + 1)\n        continue\n    temp = s[0]\n    i = 0\n    while True:\n        if s[i] != temp:\n            break\n        i += 1\n    if s[0] == s[-1]:\n        t = s[i:]\n        rev = s[:i]\n        t = t + rev\n        s = t\n    if s[0] == 'R':\n        flag = 1\n    else:\n        flag = 0\n    for i in s:\n        if i == 'R':\n            if flag == 0:\n                c1 = 0\n            c1 += 1\n            if c1 == 3 and flag == 1:\n                ans += 1\n                c1 = 0\n            flag = 1\n        else:\n            if flag == 1:\n                c2 = 0\n            c2 += 1\n            if c2 == 3 and flag == 0:\n                ans += 1\n                c2 = 0\n            flag = 0\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = list(input())\n    if s[-1] == s[0]:\n        i = n - 1\n        while i > 0 and s[i] == s[0]:\n            i -= 1\n        if i != 0:\n            s = s[i + 1:] + s[:i + 1]\n    ans = 0\n    for i in range(n):\n        if s[i] == 'R':\n            if not (s[(i + 1) % n] == 'L' or s[(i + 2) % n] == 'L'):\n                ans += 1\n                if s[(i + 3) % n] == 'R':\n                    s[(i + 2) % n] = 'L'\n        elif not (s[(i - 1) % n] == 'R' or s[(i - 2) % n] == 'R'):\n            ans += 1\n            s[i] = 'R'\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    if len(set(s)) == 1:\n        print((n + 2) // 3)\n        continue\n    cur = 1\n    arr = []\n    for i in range(n):\n        if s[i] == s[(i + 1) % n]:\n            cur += 1\n        else:\n            arr.append(cur)\n            cur = 1\n    if s[-1] == s[0]:\n        arr[0] += cur - 1\n    res = 0\n    for e in arr:\n        res += e // 3\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    t1 = t2 = 0\n    curr = s[0]\n    for i in s:\n        if i == curr:\n            t1 += 1\n        else:\n            break\n    curr = s[-1]\n    for i in s[::-1]:\n        if i == curr:\n            t2 += 1\n        else:\n            break\n    if t1 == n:\n        print((n + 2) // 3)\n        continue\n    s = s + 'E'\n    temp = ans = out = 0\n    curr = s[0]\n    for i in range(n):\n        if curr == s[i]:\n            temp += 1\n        if s[i + 1] != curr:\n            ans += temp // 3\n            curr = s[i + 1]\n            temp = 0\n    if s[0] == s[-2]:\n        out = (t1 + t2) // 3 - t1 // 3 - t2 // 3\n    print(ans + out)", "tc = int(input())\nwhile tc:\n    n = int(input())\n    s = input()\n    if s.count('L') == n or s.count('R') == n:\n        ans = (n + 2) // 3\n        print(ans)\n    else:\n        i = 0\n        tmp = []\n        while i < n:\n            j = i\n            cnt = 0\n            while j < n and s[j] == s[i]:\n                j += 1\n                cnt += 1\n            tmp.append(cnt)\n            i = j\n        l = len(tmp)\n        if s[n - 1] == s[0]:\n            tmp[0] += tmp[l - 1]\n            tmp.pop()\n        ans = 0\n        for t in tmp:\n            ans += t // 3\n        print(ans)\n    tc -= 1", "from math import ceil\nt = int(input())\nfor test in range(t):\n    n = int(input())\n    s = list(input())\n    blocks = [[s[0], 1]]\n    for i in range(1, n):\n        if s[i] == blocks[-1][0]:\n            blocks[-1][1] += 1\n        else:\n            blocks.append([s[i], 1])\n    i = 0\n    ans = 0\n    if len(blocks) == 1:\n        ans = ceil(blocks[0][1] / 3)\n    else:\n        while i < len(blocks):\n            if i == 0 and blocks[i][0] == blocks[-1][0]:\n                blocks[i][1] += blocks[-1][1]\n                del blocks[-1]\n            ans += blocks[i][1] // 3\n            i += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    l = []\n    x = 0\n    f = 0\n    for i in s:\n        if i == 'L':\n            if f == 0:\n                x += 1\n            else:\n                f = 0\n                if x > 0:\n                    l.append(x)\n                x = 1\n        elif f == 1:\n            x += 1\n        else:\n            f = 1\n            if x > 0:\n                l.append(x)\n            x = 1\n    if x > 0:\n        l.append(x)\n    if len(s) > 0:\n        if s[0] == s[-1]:\n            if len(l) != 1:\n                x = l.pop(-1)\n                l[0] += x\n    ans = 0\n    for i in l:\n        ans += i // 3\n    if len(l) == 1 and l[0] > 3:\n        ans = 1 + (l[0] - 1) // 3\n    print(ans)", "import math\nn = int(input())\nfor t in range(n):\n    g = int(input())\n    l = list(input())\n    c = 0\n    for i in range(g - 1):\n        if l[i] == l[i + 1]:\n            c = c + 1\n    if c == g - 1:\n        print(math.ceil(g / 3))\n    else:\n        k = []\n        d = 1\n        l.append('#')\n        for i in range(g):\n            if l[i] == l[i + 1]:\n                d = d + 1\n            else:\n                k.append(d)\n                d = 1\n        if l[0] == l[-2]:\n            k[0] = k[-1] + k[0]\n            k[-1] = 0\n        e = 0\n        for i in range(len(k)):\n            e = e + int(k[i] / 3)\n        print(e)", "for t in range(int(input())):\n    n = int(input())\n    s = input()\n    if len(list(set(list(s)))) == 1:\n        print((n + 2) // 3)\n    else:\n        a = list(s)\n        c = 0\n        ans = []\n        temp = []\n        i = 1\n        temp.append(a[0])\n        while i < len(a):\n            if a[i] == a[i - 1]:\n                temp.append(a[i])\n            else:\n                if a[i] == 'L':\n                    ans.append(temp)\n                else:\n                    ans.append(temp)\n                temp = []\n                temp.append(a[i])\n            i += 1\n        for i in range(len(ans)):\n            if len(ans[i]) >= 3:\n                c += len(ans[i]) // 3\n        if len(temp) >= 3:\n            c += len(temp) // 3\n        if set(ans[0]) == set(temp):\n            if len(temp) > 1:\n                if len(ans[0]) % 3 != 0 and len(temp) % 3 != 0:\n                    if len(ans[0]) < 3 or len(temp) < 3:\n                        c += 1\n                        if len(ans[0]) == 1 and len(temp) > 3 and (len(temp) % 3 != 2):\n                            c -= 1\n                    elif len(ans[0]) > 3 and len(temp) > 3:\n                        arr = []\n                        x = len(ans[0]) % 3\n                        arr.append(x)\n                        x = len(temp) % 3\n                        arr.append(x)\n                        arr.sort()\n                        if arr == [1, 2] or arr == [2, 2]:\n                            c += 1\n            elif len(ans[0]) >= 2 and len(ans[0]) % 3 == 2:\n                c += 1\n        print(c)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    if len(set(s)) == 1:\n        print((len(s) + 2) // 3)\n        continue\n    counter = 0\n    kos = len(s) - 1\n    if s[0] == s[-1]:\n        if s[0] == 'R':\n            kos = s.rfind('L')\n            s = 'R' * (len(s) - kos - 1) + s[:kos + 1]\n        else:\n            kos = s.rfind('R')\n            s = 'L' * (len(s) - kos - 1) + s[:kos + 1]\n    while s != '':\n        r = s.find('R')\n        l = s.find('L')\n        if r == -1 or l == -1:\n            counter += len(s) // 3\n            s = ''\n        else:\n            counter += max(r, l) // 3\n            s = s[max(r, l):]\n    print(counter)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    count = 0\n    while s[0] == s[-1] and count < n:\n        s = s[1:] + s[0]\n        count += 1\n    if count >= n:\n        print((n + 2) // 3)\n    else:\n        count = 1\n        out = 0\n        for i in range(n - 1):\n            if s[i] == s[i + 1]:\n                count += 1\n            else:\n                out += count // 3\n                count = 1\n        out += count // 3\n        print(out)"]