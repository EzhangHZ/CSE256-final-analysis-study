["[print(2 ** len(bin(int(i))) // 8 - 1) for i in [*open(0)][1:]]", "for s in [*open(0)][1:]:\n    print(2 ** len(f'{int(s):b}') // 2 - 1)", "for s in [*open(0)][1:]:\n    print(2 ** int(s).bit_length() // 2 - 1)", "for s in [*open(0)][1:]:\n    print(2 ** int(s).bit_length() // 2 - 1)", "import sys\nps = [int(l.strip('\\n')) for l in sys.stdin]\nr = []\nfor n in ps[1:]:\n    if n == 0:\n        print(0)\n    else:\n        print((1 << n.bit_length() - 1) - 1)", "import math, sys, itertools\n\ndef squid_game(x):\n    x |= x >> 16\n    x |= x >> 8\n    x |= x >> 4\n    x |= x >> 2\n    x |= x >> 1\n    x ^= x >> 1\n    return x\nwtf = sys.stdin.read()\nwtf = wtf.strip().split('\\n')\nfor t in wtf[1:]:\n    print(squid_game(int(t)) - 1)", "for s in [*open(0)][1:]:\n    print(2 ** len(f'{int(s):b}') // 2 - 1)", "for s in [*open(0)][1:]:\n    print(2 ** len(f'{int(s):b}') // 2 - 1)", "for s in [*open(0)][1:]:\n    print(2 ** len(f'{int(s):b}') // 2 - 1)", "for s in [*open(0)][1:]:\n    print(2 ** len(f'{int(s):b}') // 2 - 1)", "[print(2 ** len(bin(int(i))) // 8 - 1) for i in [*open(0)][1:]]", "def main():\n    from sys import stdout\n    n = int(input())\n    res = ''\n    for i in range(n):\n        a = int(input())\n        n = len(str(bin(a))) - 3\n        res += str(2 ** n - 1) + '\\n'\n    stdout.write(res)\nmain()", "for s in [*open(0)][1:]:\n    print(2 ** len(f'{int(s):b}') // 2 - 1)", "for s in [*open(0)][1:]:\n    print(2 ** len(f'{int(s):b}') // 2 - 1)", "import math\nfor s in [*open(0)][1:]:\n    print(pow(2, int(math.log(int(s), 2))) - 1)", "from sys import stdin\ninput = stdin.readline\nfrom collections import Counter\n\ndef solve():\n    n = int(input())\n    if n == 1:\n        print(0)\n        return\n    n_in_bin = format(n, 'b')\n    steps_needed = n_in_bin[1:]\n    steps_needed = int(steps_needed, 2) + 1\n    print(n - steps_needed)\nfor _ in range(int(input())):\n    solve()", "import math\n\ndef main():\n    import sys\n    input = sys.stdin.readline\n    for _ in range(int(input())):\n        N = int(input())\n        k = math.log2(N) // 1\n        print(int(pow(2, k) - 1))\nmain()", "import sys\ninput = sys.stdin.readline\nfrom bisect import bisect_left\nsquare = [2 ** i for i in range(32)]\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = bisect_left(square, n)\n    if n == square[a]:\n        print(square[a] - 1)\n    else:\n        print(square[a - 1] - 1)", "from sys import stdin\ninput = stdin.readline\nfor test in range(int(input())):\n    x = int(2 ** (int(input()).bit_length() - 1) - 1)\n    print(x)", "for i in [*open(0)][1:]:\n    print(2 ** len(f'{int(i):b}') // 2 - 1)", "for s in [*open(0)][1:]:\n    print(2 ** len(f'{int(s):b}') // 2 - 1)", "def getlistint():\n    return list(map(int, stdin.readline().split()))\n\ndef getmapint():\n    return map(int, stdin.readline().split())\n\ndef getliststr():\n    return list(stdin.readline().split())\n\ndef getint():\n    return int(stdin.readline().strip())\n\ndef getstr():\n    return stdin.readline().strip()\n\ndef pr(s):\n    stdout.write(str(s) + '\\n')\n\ndef prlist(l):\n    stdout.write(' '.join(list(map(str, l))) + '\\n')\nfrom sys import stdin, stdout\nfor _ in range(getint()):\n    n = bin(getint())[2:]\n    k = '1' * len(n)\n    k = int(k, 2) >> 1\n    pr(k)", "for s in [*open(0)][1:]:\n    print(2 ** len(f'{int(s):b}') // 2 - 1)", "import math\nimport sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef invr():\n    return list(map(int, input().split()))\nt = inp()\nfor tt in range(t):\n    i = 31\n    n = inp()\n    pos = 0\n    while i >= 0:\n        if n >> i and 1:\n            pos = i\n            break\n        i -= 1\n    print((1 << pos) - 1)", "[print(2 ** len(bin(int(i))[2:]) // 2 - 1) for i in [*open(0)][1:]]", "for s in [*open(0)][1:]:\n    s = int(s)\n    if s == 1:\n        print(0)\n    else:\n        x = bin(s)[2:]\n        b = x.count('1')\n        lng = len(x)\n        if '0' in x:\n            c = '1' * b + '1' * (lng - b - 1)\n            print(int(c, 2))\n        else:\n            c = '1' * (b - 1)\n            print(int(c, 2))", "from sys import stdin, stdout\nimport math\n\ndef ii():\n    return int(stdin.readline())\n\ndef mi():\n    return map(int, stdin.readline().split())\n\ndef li():\n    return list(mi())\n\ndef si():\n    return stdin.readline()\nimport math\nt = 1\nt = ii()\nfor _ in range(t):\n    c = 0\n    n = ii()\n    ans = int(math.log2(n))\n    print(2 ** ans - 1)", "import sys\nsys.setrecursionlimit(10 ** 6)\ninp = sys.stdin.readline\nr = range\nfor _ in range(int(inp())):\n    n = int(inp())\n    a = bin(n)[2:]\n    a = len(a) - 1\n    print(2 ** a - 1)", "for s in [*open(0)][1:]:\n    print(2 ** (len(f'{int(s):b}'.lstrip('0')) - 1) - 1)", "from math import log2, floor\n\ndef main():\n    import sys\n    input = sys.stdin.readline\n    for _ in range(int(input())):\n        n = int(input())\n        k = floor(log2(n))\n        print(int(pow(2, k) - 1))\nmain()", "import sys, math\nn = int(sys.stdin.readline())\nnums = []\nfor i in range(n):\n    nums.append(int(sys.stdin.readline()))\noutput = []\nfor i in nums:\n    print(int(math.pow(2, int(math.log(i, 2)))) - 1)\nfor i in output:\n    print(i)", "import sys\nimport math\nfrom math import gcd, inf, sqrt, pi, cos, sin, ceil, log2, floor, log\nfrom sys import stdin, stdout, setrecursionlimit\nsetrecursionlimit(2 ** 20)\nN = 20005\n\ndef isPowerOfTwo(x):\n    return x and (not x & x - 1)\nT = 1\nT = int(stdin.readline())\nfor _ in range(T):\n    n = int(stdin.readline())\n    ans = 2 ** int(log2(n)) - 1\n    print(ans)", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    if n == 1:\n        print(0)\n        continue\n    bin_n = bin(n)[2:]\n    lenn = len(bin_n)\n    ans = int('1' * (lenn - 1), 2)\n    print(ans)", "from sys import stdin\nfrom math import log\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    x = log(n, 2)\n    x = int(x + 1) - 1\n    print(2 ** x - 1)", "import sys\nfrom math import log2\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    l = log2(n) // 1\n    print(int(2 ** l - 1))", "import math\nfrom sys import *\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    x = int(math.log(n, 2))\n    print(pow(2, x) - 1)", "for s in [*open(0)][1:]:\n    print(2 ** len(f'{int(s):b}') // 2 - 1)", "for s in [*open(0)][1:]:\n    print(2 ** len(f'{int(s):b}') // 2 - 1)", "for s in [*open(0)][1:]:\n    print(2 ** len(f'{int(s):b}') // 2 - 1)", "def getlistint():\n    return list(map(int, stdin.readline().split()))\n\ndef getmapint():\n    return map(int, stdin.readline().split())\n\ndef getliststr():\n    return list(stdin.readline().split())\n\ndef getint():\n    return int(stdin.readline().strip())\n\ndef getstr():\n    return stdin.readline().strip()\n\ndef pr(s):\n    stdout.write(str(s) + '\\n')\n\ndef prlist(l):\n    stdout.write(' '.join(list(map(str, l))) + '\\n')\nfrom sys import stdin, stdout\nfor _ in range(getint()):\n    n = bin(getint())[2:]\n    k = '1' + '0' * (len(n) - 1)\n    k = int(k, 2) - 1\n    pr(k)", "t = int(input())\ncases = []\ncounter = 1\nwhile t > 0:\n    cases.append(int(input()))\n    t -= 1\nfor case in cases:\n    print((1 << case.bit_length() - 1) - 1)", "n = int(input())\nx = []\nfor i in range(n):\n    x.append(int(input()))\nfor j in x:\n    b = bin(j)[2:]\n    if len(b) > 1:\n        print(j - int(b[1:], 2) - 1)\n    else:\n        print(j - int(b, 2))", "import sys\ninput = sys.stdin.readline\n\ndef solve(n):\n    past = 0\n    while n:\n        past = n - 1\n        n = n & past\n    print(past)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    solve(n)", "import sys\nimport math\nimport bisect\nfrom sys import stdin, stdout\nfrom math import gcd, floor, log10, log2, sqrt, log\nfrom collections import defaultdict as dd\nfrom bisect import bisect_left as bl, bisect_right as br\nfrom functools import lru_cache\nsys.setrecursionlimit(100000000)\nint_r = lambda : int(sys.stdin.readline())\nstr_r = lambda : sys.stdin.readline().strip()\nintList_r = lambda : list(map(int, sys.stdin.readline().strip().split()))\nstrList_r = lambda : list(sys.stdin.readline().strip())\njn = lambda x, l: x.join(map(str, l))\nmul = lambda : map(int, sys.stdin.readline().strip().split())\nmulf = lambda : map(float, sys.stdin.readline().strip().split())\nceil = lambda x: int(x) if x == int(x) else int(x) + 1\nceildiv = lambda x, d: x // d if x % d == 0 else x // d + 1\nflush = lambda : stdout.flush()\noutStr = lambda x: stdout.write(str(x))\nmod = 1000000007\n\ndef main():\n    testcases = int_r()\n    for t_c in range(testcases):\n        n = int_r()\n        if n == 2:\n            print(1)\n        else:\n            print(2 ** floor(log2(n)) - 1)\nmain()", "import math as m\n\nclass solution:\n\n    def __init__(self, number):\n        self.number = number\n\n    def input(self):\n        self.values = []\n        for i in range(self.number):\n            v = int(input())\n            self.values.append(v)\n\n    def solve(self):\n        self.answers = []\n        for i in self.values:\n            ans = 0\n            s = m.log(i, 2)\n            if m.pow(2, int(s)) == i:\n                self.answers.append(str(i - 1))\n            else:\n                s = m.floor(s)\n                self.answers.append(str(int(m.pow(2, s) - 1)))\n\n    def output(self):\n        print('\\n'.join(self.answers))\nn = int(input())\nA = solution(n)\nA.input()\nA.solve()\nA.output()", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print(0)\n    else:\n        print(int('1' * (n.bit_length() - 1), 2))", "n = int(input())\nans = []\nfor i in range(n):\n    m = int(input())\n    k = 1\n    while k <= m:\n        k *= 2\n    ans.append(int(k / 2 - 1))\nfor i in ans:\n    print(i)", "import bisect\ni = 2\narr = [0]\nwhile i < 10 ** 9:\n    arr.append(i - 1)\n    i = i * 2\nfor i in range(int(input())):\n    print(arr[bisect.bisect_left(arr, int(input())) - 1])", "binary_decimal = {0: 0, 1: 1, 2: 3, 3: 7, 4: 15, 5: 31, 6: 63, 7: 127, 8: 255, 9: 511, 10: 1023, 11: 2047, 12: 4095, 13: 8191, 14: 16383, 15: 32767, 16: 65535, 17: 131071, 18: 262143, 19: 524287, 20: 1048575, 21: 2097151, 22: 4194303, 23: 8388607, 24: 16777215, 25: 33554431, 26: 67108863, 27: 134217727, 28: 268435455, 29: 536870911}\nfor _ in range(int(input())):\n    print(binary_decimal[len(bin(int(input()))) - 3])", "binary_decimal = {0: 0, 1: 1, 2: 3, 3: 7, 4: 15, 5: 31, 6: 63, 7: 127, 8: 255, 9: 511, 10: 1023, 11: 2047, 12: 4095, 13: 8191, 14: 16383, 15: 32767, 16: 65535, 17: 131071, 18: 262143, 19: 524287, 20: 1048575, 21: 2097151, 22: 4194303, 23: 8388607, 24: 16777215, 25: 33554431, 26: 67108863, 27: 134217727, 28: 268435455, 29: 536870911}\nfor _ in range(int(input())):\n    print(binary_decimal[len(bin(int(input()))) - 3])", "binary_decimal = {0: 0, 1: 1, 2: 3, 3: 7, 4: 15, 5: 31, 6: 63, 7: 127, 8: 255, 9: 511, 10: 1023, 11: 2047, 12: 4095, 13: 8191, 14: 16383, 15: 32767, 16: 65535, 17: 131071, 18: 262143, 19: 524287, 20: 1048575, 21: 2097151, 22: 4194303, 23: 8388607, 24: 16777215, 25: 33554431, 26: 67108863, 27: 134217727, 28: 268435455, 29: 536870911}\nfor _ in range(int(input())):\n    print(binary_decimal[len(bin(int(input()))) - 3])", "def check(x):\n    return x and int(not x & x - 1)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(2 ** (n.bit_length() - 1) - 1)", "for _ in range(int(input())):\n    n = int(input())\n    print((1 << n.bit_length() - 1) - 1)", "t = int(input())\nA = []\nfor i in range(t):\n    A.append(int(input()))\nfor i in range(0, len(A), 1):\n    N = A[i]\n    while 1:\n        if N & N - 1 == 0:\n            N -= 1\n            break\n        N = N & N - 1\n    print(N)", "def fun(a):\n    count = -1\n    while a >= 1:\n        a = a // 2\n        count += 1\n    return pow(2, count) - 1\nn = int(input())\np = []\nfor i in range(n):\n    a = int(input())\n    p.append(fun(a))\nfor i in p:\n    print(i)", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    x = 1\n    while n >= x:\n        x *= 2\n    x //= 2\n    print(x - 1)", "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    n = int(sys.stdin.readline())\n    (low, high) = (1, 2)\n    while high <= n:\n        low = high\n        high *= 2\n    print(low - 1)", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    ans = 1\n    while ans <= n:\n        ans *= 2\n    if ans != 1:\n        ans //= 2\n    print(ans - 1)", "res = ''\n\ndef floor_log2(x):\n    if x <= 1:\n        return 0\n    return 1 + floor_log2(x // 2)\nfor _ in range(int(input())):\n    n = int(input())\n    res += '%d\\n' % (2 ** floor_log2(n) - 1)\nprint(res)", "for _ in range(int(input())):\n    n = int(input())\n    b = bin(n)\n    a = len(b) - 3\n    print(2 ** a - 1)", "for i in range(int(input())):\n    x = int(input())\n    print(2 ** (len(bin(x)) - 3) - 1)", "for _ in range(int(input())):\n    print(2 ** (len(bin(int(input()))) - 3) - 1)", "import math\nfor i in range(int(input())):\n    n = int(input())\n    print(2 ** int(math.log(n, 2)) - 1)", "for i in range(int(input())):\n    n = int(input())\n    binaryForm = bin(n)[2:]\n    ans = 2 ** (len(binaryForm) - 1) - 1\n    print(ans)", "for _ in range(int(input())):\n    a = int(input())\n    print(2 ** (len(bin(a)) - 3) - 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = bin(n)[2:]\n    print((1 << len(s) - 1) - 1)", "for _ in [0] * int(input()):\n    print(2 ** (len(bin(int(input()))[2:]) - 1) - 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = len(bin(n)[2:])\n    print(2 ** (s - 1) - 1)", "for _ in range(int(input())):\n    print(pow(2, len(bin(int(input()))) - 3) - 1)", "for _ in range(int(input())):\n    print(2 ** len(bin(int(input()))) // 8 - 1)", "from math import log2, floor\nfor t in range(int(input())):\n    i = int(input())\n    print(2 ** floor(log2(i)) - 1)", "from math import log2, floor\nfor t in range(int(input())):\n    i = int(input())\n    print((1 << floor(log2(i))) - 1)", "for i in range(int(input())):\n    print(2 ** (len(bin(int(input()))) - 3) - 1)", "for i in range(int(input())):\n    x = int(input())\n    x = (x >> len(bin(x)) - 3 << len(bin(x)) - 3) - 1\n    print(x)", "import math\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    k = int(math.log(n, 2))\n    print((1 << k) - 1)", "for t in range(int(input())):\n    n = int(input())\n    a = len(bin(n)) - 3\n    print(2 ** a - 1)", "for _ in range(int(input())):\n    x = int(input())\n    print(2 ** (x.bit_length() - 1) - 1)", "t = int(input())\nwhile t:\n    print(2 ** (len(bin(int(input()))) - 3) - 1)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    b = bin(n)[2:]\n    n = len(b) - 1\n    print((1 << n) - 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = bin(n)\n    length = len(s) - 2\n    print(2 ** (length - 1) - 1)", "for _ in range(int(input())):\n    n = int(input())\n    print(2 ** (len(bin(n)) - 3) - 1)", "for i in range(int(input())):\n    j = int(input())\n    print(2 ** len(bin(j)) // 8 - 1)", "binary_decimal = {0: 0, 1: 1, 2: 3, 3: 7, 4: 15, 5: 31, 6: 63, 7: 127, 8: 255, 9: 511, 10: 1023, 11: 2047, 12: 4095, 13: 8191, 14: 16383, 15: 32767, 16: 65535, 17: 131071, 18: 262143, 19: 524287, 20: 1048575, 21: 2097151, 22: 4194303, 23: 8388607, 24: 16777215, 25: 33554431, 26: 67108863, 27: 134217727, 28: 268435455, 29: 536870911}\nfor _ in range(int(input())):\n    n = len(bin(int(input()))) - 3\n    print(binary_decimal[n])", "binary_decimal = {0: 0, 1: 1, 2: 3, 3: 7, 4: 15, 5: 31, 6: 63, 7: 127, 8: 255, 9: 511, 10: 1023, 11: 2047, 12: 4095, 13: 8191, 14: 16383, 15: 32767, 16: 65535, 17: 131071, 18: 262143, 19: 524287, 20: 1048575, 21: 2097151, 22: 4194303, 23: 8388607, 24: 16777215, 25: 33554431, 26: 67108863, 27: 134217727, 28: 268435455, 29: 536870911}\nfor _ in range(int(input())):\n    print(binary_decimal[len(bin(int(input()))) - 3])", "for i in range(int(input())):\n    n = int(input())\n    print(n - (n - 2 ** (int(len(bin(n))) - 3) + 1))", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    print((1 << int(math.log2(n))) - 1)", "from math import *\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print(2 ** floor(log(n, 2)) - 1)", "from math import log, floor\nfor _ in range(int(input())):\n    n = int(input())\n    print(2 ** floor(log(n, 2)) - 1)", "for i in range(int(input())):\n    n = int(input())\n    d = {'1': '0', '0': '1'}\n    x = bin(n)[2:]\n    print(2 ** (len(x) - 1) - 1)", "for i in range(int(input())):\n    n = int(input())\n    bin_n = bin(n)[2:]\n    l = len(bin_n) - 1\n    print(2 ** l - 1)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    print(2 ** int(math.log2(n)) - 1)", "def main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        k = 0\n        for i in range(31, -1, -1):\n            if n >> i & 1:\n                k = i\n                break\n        print((1 << k) - 1)\nmain()", "for i in range(int(input())):\n    n = int(input())\n    n |= n >> 1\n    n |= n >> 2\n    n |= n >> 4\n    n |= n >> 8\n    n |= n >> 16\n    n |= n >> 32\n    n |= n >> 64\n    print(n >> 1)", "for _ in range(int(input())):\n    print((1 << len(bin(int(input()))) - 3) - 1)", "for t in range(int(input())):\n    n = int(input())\n    a = len(bin(n)) - 3\n    print(2 ** a - 1)", "for i in range(int(input())):\n    i = int(input())\n    print(int((len(bin(i)) - 3) * '1', 2) if i != 1 else 0)", "t = int(input())\nfor _ in range(t):\n    inf = int(input())\n    print((1 << len(bin(inf)) - 3) - 1)"]