["t = int(input())\nanswer = []\nfor i in range(t):\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    if k1 + k2 >= 2 * w and 2 * n - (k1 + k2) >= 2 * b:\n        answer.append('YES')\n    else:\n        answer.append('NO')\nprint('\\n'.join(answer))", "import math\nimport sys\ninput = sys.stdin.readline\nt = int(input())\nfor i1 in range(t):\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    if 2 * w > k1 + k2 or 2 * b > 2 * n - k1 - k2:\n        print('NO')\n    else:\n        print('YES')", "answers = []\n\ndef solve(n, k1, k2, w, b):\n    white = min(k1, k2)\n    diff = abs(k2 - k1)\n    white += diff // 2\n    black = min(n - k1, n - k2)\n    diff = abs(k2 - k1)\n    black += diff // 2\n    if w <= white and b <= black:\n        answers.append('YES')\n        return\n    answers.append('NO')\nT = int(input())\nwhile T:\n    (n, k1, k2) = [int(x) for x in input().split()]\n    (w, b) = [int(x) for x in input().split()]\n    solve(n, k1, k2, w, b)\n    T -= 1\nfor ans in answers:\n    print(ans)", "from sys import stdin as f\n\ndef solution(n, k1, k2, w, b):\n    w_count = 2 * k1 + (k2 - k1)\n    b_count = 2 * (n - k1) + (k1 - k2)\n    w_count = w_count // 2\n    b_count = b_count // 2\n    if w_count >= w and b_count >= b:\n        return 'YES'\n    else:\n        return 'NO'\nt = int(f.readline().strip())\nfor _ in range(t):\n    (n, k1, k2) = [int(i) for i in f.readline().strip().split()]\n    (w, b) = [int(i) for i in f.readline().strip().split()]\n    print(solution(n, k1, k2, w, b))", "def windowsillDomino(n, k1, k2, w, b):\n    if (k1 + k2) / 2 >= w and (2 * n - (k1 + k2)) / 2 >= b:\n        return 'YES'\n    else:\n        return 'NO'\nt = int(input())\nsolution = []\nfor i in range(t):\n    [n, k1, k2] = list(map(int, input().split()))\n    [w, b] = list(map(int, input().split()))\n    solution.append(windowsillDomino(n, k1, k2, w, b))\nfor i in range(t):\n    print(solution[i])", "tralis = int(input())\nanswer_list = []\nfor d in range(tralis):\n    numbers_1 = input().split()\n    numbers_2 = input().split()\n    n = int(numbers_1[0])\n    k_1 = int(numbers_1[1])\n    k_2 = int(numbers_1[2])\n    w = int(numbers_2[0])\n    b = int(numbers_2[1])\n    geretor = None\n    if k_1 >= k_2:\n        geretor = k_1\n    else:\n        geretor = k_2\n    diff = abs(k_2 - k_1)\n    possible_w = geretor - diff + diff // 2\n    b_1 = n - k_1\n    b_2 = n - k_2\n    geretor_b = None\n    if b_1 >= b_2:\n        geretor_b = b_1\n    else:\n        geretor_b = b_2\n    diff_b = abs(k_2 - k_1)\n    possible_b = geretor_b - diff_b + diff_b // 2\n    if possible_w >= w and possible_b >= b:\n        answer_list.append('YES')\n    else:\n        answer_list.append('NO')\nfor s in answer_list:\n    print(s)", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    (n, k1, k2) = map(int, stdin.readline().split())\n    (w, b) = map(int, stdin.readline().split())\n    if w + b > n:\n        print('NO')\n        continue\n    if k1 + k2 >= 2 * w and 2 * n - k1 - k2 >= 2 * b:\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\n\ndef print(x, end='\\n'):\n    sys.stdout.write(str(x) + end)\nlines = int(input())\nfor i in range(lines):\n    (n, k1, k2) = [int(x) for x in input().split()]\n    (w, b) = [int(x) for x in input().split()]\n    if w <= (k1 + k2) / 2 and b <= (2 * n - k1 - k2) / 2:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k1, k2) = [int(i) for i in input().split()]\n    (w, b) = [int(i) for i in input().split()]\n    result1 = k1 // 2 + k2 // 2 + (k1 % 2 + k2 % 2) // 2\n    (K1, K2) = (n - k1, n - k2)\n    result2 = K1 // 2 + K2 // 2 + (K1 % 2 + K2 % 2) // 2\n    if result1 >= w and result2 >= b:\n        print('YES')\n    else:\n        print('NO')", "q = int(input())\nfor _ in range(q):\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    print('YES' if (k1 + k2) // 2 >= w and (2 * n - k1 - k2) // 2 >= b else 'NO')", "t = int(input())\nfor i in range(t):\n    (n, k1, k2) = map(int, input().split())\n    (wd, bd) = map(int, input().split())\n    w = k1 + k2\n    b = 2 * n - w\n    if w // 2 >= wd and b // 2 >= bd:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    wp = min(k1, k2) + abs(k1 - k2) // 2\n    bp = min(n - k1, n - k2) + abs(n - k1 - n + k2) // 2\n    if wp >= w and bp >= b:\n        print('YES')\n    else:\n        print('NO')", "import math\nimport sys\nimport itertools\nimport fractions\nwtf = sys.stdin.read()\nwtf = wtf.strip().split('\\n')\nfor t in [wtf[i:i + 2] for i in range(1, len(wtf), 2)]:\n    (n, k1, k2) = map(int, t[0].split())\n    (w, b) = map(int, t[1].split())\n    Wk = k1 + k2\n    Bk = 2 * n - Wk\n    if Wk // 2 >= w and Bk // 2 >= b:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    if w * 2 <= k1 + k2 and b * 2 <= n * 2 - k1 - k2:\n        print('YES')\n    else:\n        print('NO')", "def find(n, k1, k2, w, b):\n    return 'NYOE S'[min(k1, k2) + abs(k1 - k2) // 2 >= w and min(n - k1, n - k2) + abs(k1 - k2) // 2 >= b::2]\nfor _ in [0] * int(input()):\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    print(find(n, k1, k2, w, b))", "t = int(input())\nfor _ in range(t):\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    white = (k1 + k2) // 2\n    black = (2 * n - k1 - k2) // 2\n    if white >= w and black >= b:\n        print('YES')\n    else:\n        print('NO')", "t = eval(input())\nfor i in range(t):\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    if w * 2 <= k1 + k2 and b * 2 <= n * 2 - (k1 + k2):\n        print('YES')\n    else:\n        print('NO')", "t1 = int(input())\nfor _ in range(t1):\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    p = k1 // 2 + k2 // 2 + (k1 % 2 + k2 % 2) // 2\n    l = (n - k1) // 2 + (n - k2) // 2 + ((n - k1) % 2 + (n - k2) % 2) // 2\n    if p >= w and l >= b:\n        print('YES')\n    else:\n        print('NO')", "t1 = int(input())\nfor _ in range(t1):\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    p = k1 // 2 + k2 // 2 + (k1 % 2 + k2 % 2) // 2\n    l = (n - k1) // 2 + (n - k2) // 2 + ((n - k1) % 2 + (n - k2) % 2) // 2\n    if p >= w and l >= b:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    if w * 2 <= k1 + k2 and b * 2 <= 2 * n - (k1 + k2):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(0, t):\n    inputs1 = [int(num) for num in input().split()]\n    n = inputs1[0]\n    k1 = inputs1[1]\n    k2 = inputs1[2]\n    k3 = n - k1\n    k4 = n - k2\n    inputs2 = [int(num) for num in input().split()]\n    w = inputs2[0]\n    b = inputs2[1]\n    horimaxw = min([k1, k2])\n    k1 -= horimaxw\n    k2 -= horimaxw\n    c1 = 0\n    c2 = 0\n    if k1 != 0:\n        c1 = k1 // 2\n    elif k2 != 0:\n        c1 = k2 // 2\n    maxw = horimaxw + c1\n    horimaxb = min([k3, k4])\n    k3 -= horimaxb\n    k4 -= horimaxb\n    if k3 != 0:\n        c2 = k3 // 2\n    elif k4 != 0:\n        c2 = k4 // 2\n    maxb = c2 + horimaxb\n    if w <= maxw and b <= maxb:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    whi = k1 + k2\n    bla = 2 * n - (k1 + k2)\n    if whi >= w * 2 and bla >= b * 2:\n        print('YES')\n        continue\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k1, k2) = [int(x) for x in input().split()]\n    (w, b) = [int(x) for x in input().split()]\n    if (k1 + k2) // 2 < w or (2 * n - k1 - k2) // 2 < b:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nwhile t > 0:\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    if b <= (n - k1 + (n - k2)) / 2 and w <= (k1 + k2) / 2:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "for i in range(int(input())):\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    p = k1 + k2\n    m = 2 * n\n    q = m - p\n    if p >= 2 * w and q >= 2 * b:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    a1 = [int(_) for _ in input().split()]\n    a2 = [int(_) for _ in input().split()]\n    t = 2 * a1[0]\n    w = a1[1] + a1[2]\n    b = t - w\n    if w // 2 >= a2[0] and b // 2 >= a2[1]:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, c, d) = map(int, input().split())\n    w = c + d\n    b = 2 * n - w\n    (x, y) = map(int, input().split())\n    if 2 * x <= w and 2 * y <= b:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k1, k2) = [int(x) for x in input().split()]\n    (w, b) = [int(x) for x in input().split()]\n    if w <= (k1 + k2) // 2 and b <= (2 * n - (k1 + k2)) // 2:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    if k1 > k2:\n        (k1, k2) = (k2, k1)\n    bk1 = n - k2\n    bk2 = n - k1\n    if w <= k1 + (k2 - k1) // 2 and b <= bk1 + (bk2 - bk1) // 2:\n        print('YES')\n    else:\n        print('NO')", "import math\nimport operator as op\nfrom functools import reduce\nfrom collections import defaultdict\nfrom math import comb\nfrom sys import stdout\nNO = 'NO'\nYES = 'YES'\nMOD = 1000000007\n\ndef input_int():\n    return int(input())\n\ndef input_list():\n    return input().split(' ')\n\ndef input_list_int():\n    return list(map(int, input_list()))\n\ndef z_func(s):\n    n = len(s)\n    z = [0] * n\n    l = r = 0\n    for i in range(1, n):\n        if r >= i:\n            z[i] = min(z[i - l], r - i + 1)\n        while z[i] + i < n and s[z[i]] == s[z[i] + i]:\n            z[i] += 1\n        if i + z[i] - 1 > r:\n            l = i\n            r = i + z[i] - 1\n    return z\nglobal_ans = []\n\ndef pr(a):\n    global_ans.append(a)\n\ndef solve():\n    (n, k1, k2) = input_list_int()\n    (w, b) = input_list_int()\n    t1 = n - k1\n    t2 = n - k2\n    wc = k1 // 2\n    wc += k2 // 2\n    if k1 % 2 == 1 and k2 % 2 == 1:\n        wc += 1\n    bc = t1 // 2\n    bc += t2 // 2\n    if t1 % 2 == 1 and t2 % 2 == 1:\n        bc += 1\n    if wc >= w and bc >= b:\n        pr(YES)\n    else:\n        pr(NO)\nquery_count = 1\nquery_count = input_int()\nwhile query_count:\n    query_count -= 1\n    solve()\nfor global_ans_line in global_ans:\n    print(global_ans_line)", "for _ in range(int(input())):\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    mw = (k1 + k2) // 2\n    mb = (2 * n - (k1 + k2)) // 2\n    if w <= mw and b <= mb:\n        print('YES')\n    else:\n        print('NO')", "import sys\nimport math\nimport bisect\nimport collections\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inplist():\n    return list(map(int, input().split()))\n\ndef inpstrlist():\n    s = input()\n    return list(s[:len(s)])\n\ndef invr():\n    return map(int, input().split())\n\ndef printlist(var):\n    sys.stdout.write(' '.join(map(str, var)) + '\\n')\nt = int(input())\nfor _ in range(t):\n    (n, k1, k2) = invr()\n    (w, b) = invr()\n    (f1, f2) = (0, 0)\n    if k1 + k2 >= 2 * w:\n        f1 = 1\n    if 2 * n - k1 - k2 >= 2 * b:\n        f2 = 1\n    if f1 == 1 and f2 == 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k1, k2) = [int(y) for y in input().split()]\n    (w, b) = [int(y) for y in input().split()]\n    black = False\n    white = False\n    if (k2 + k1) // 2 >= w:\n        white = True\n    if (2 * n - k2 - k1) // 2 >= b:\n        black = True\n    if white and black:\n        print('YES')\n    else:\n        print('NO')", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_array():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef input():\n    return sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    (n, k1, k2) = get_ints()\n    (w, b) = get_ints()\n    if w == 0 and b == 0:\n        print('YES')\n    elif 2 * w <= k1 + k2 and b * 2 <= 2 * n - (k1 + k2):\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\n\nclass Problem:\n\n    def __init__(self):\n        pass\n\n    def solve(self):\n        t = int(input())\n        for _ in range(t):\n            (n, k1, k2) = map(int, input().split())\n            (w, b) = map(int, input().split())\n            ans = (k1 + k2) / 2 >= w and n - (k1 + k2) / 2 >= b\n            if ans:\n                print('YES')\n            else:\n                print('NO')\n\ndef main():\n    p = Problem()\n    p.solve()\nmain()", "import sys\ninput = iter(sys.stdin.read().splitlines()).__next__\n\ndef solve(N, K1, K2, W, B):\n    if W + B > N:\n        return False\n    dif = max(K1, K2) - min(K1, K2)\n    if W > dif // 2 + min(K1, K2):\n        return False\n    if B > dif // 2 + N - max(K1, K2):\n        return False\n    return True\nTC = int(input())\nfor tc in range(TC):\n    (N, K1, K2) = map(int, input().split())\n    (W, B) = map(int, input().split())\n    res = solve(N, K1, K2, W, B)\n    print('YES' if res else 'NO')", "t = int(input())\nfor _ in range(t):\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    temp = (k1 + k2) // 2\n    if w <= temp and b <= (2 * n - (k1 + k2)) // 2:\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    if (k1 + k2) // 2 >= w and (2 * n - k1 - k2) // 2 >= b:\n        print('YES')\n    else:\n        print('NO')", "try:\n    for _ in range(int(input())):\n        (n, k, l) = map(int, input().split())\n        (w, b) = map(int, input().split())\n        wh = k + l\n        bl = 2 * n - wh\n        if wh // 2 >= w and bl // 2 >= b:\n            print('YES')\n        else:\n            print('NO')\nexcept:\n    pass", "from sys import stdin\ninput = stdin.readline\n\ndef ceil(c):\n    if int(c) == c:\n        return int(c)\n    return int(c) + 1\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef floor(f):\n    return int(f)\n\ndef sqrt(s):\n    return s ** 0.5\n\ndef max(a, b):\n    return a if a > b else b\n\ndef abs(a):\n    return a if a >= 0 else -1 * a\n\ndef min(a, b):\n    return a if a < b else b\n\ndef primeInRange(n):\n    l = [True] * n\n    for i in range(2, int(sqrt(n)) + 1):\n        if l[i - 1]:\n            for j in range(i + i, n + 1, i):\n                l[j - 1] = False\n    return l\n\ndef solve():\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    n *= 2\n    white = k1 + k2\n    black = n - white\n    if white // 2 >= w and black // 2 >= b:\n        return 'YES'\n    return 'NO'\nfor i in range(int(input())):\n    print(solve())", "import math\n\ndef get_ans(n, k1, k2, w, b):\n    temp_w = min(k1, k2)\n    temp_w += math.floor(abs(k2 - k1) / 2)\n    b1 = n - k1\n    b2 = n - k2\n    temp_b = min(b1, b2)\n    temp_b += math.floor(abs(b2 - b1) / 2)\n    return temp_w >= w and temp_b >= b\ntest_cases = int(input())\nans = []\nfor i in range(test_cases):\n    (n, k1, k2) = list(map(int, input().split()))\n    (w, b) = list(map(int, input().split()))\n    ans.append(get_ans(n, k1, k2, w, b))\nfor i in ans:\n    if i:\n        print('YES')\n    else:\n        print('NO')", "list1 = []\nfor i in range(int(input())):\n    (n, k1, k2) = [int(j) for j in input().split()]\n    (w, b) = [int(j) for j in input().split()]\n    if min(k1, k2) + abs(k2 - k1) // 2 >= w and min(n - k1, n - k2) + abs(k2 - k1) // 2 >= b:\n        list1.append('YES')\n    else:\n        list1.append('NO')\nprint(*list1, sep='\\n')", "x = int(input())\nl = []\nfor i in range(x):\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    if k1 + k2 >= 2 * w and 2 * n >= 2 * b + k1 + k2:\n        l.append('YES')\n    else:\n        l.append('NO')\nfor i in range(x):\n    print(l[i])", "t = int(input())\nwhile t:\n    t = t - 1\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    c = 0\n    if (k1 + k2) // 2 >= w:\n        c += 1\n    if (n - k1 + (n - k2)) // 2 >= b:\n        c += 1\n    if c == 2:\n        print('YES')\n    else:\n        print('NO')", "from sys import stdin, stdout\nimport math\nimport math\n\ndef ii():\n    return int(stdin.readline())\n\ndef mi():\n    return map(int, stdin.readline().split())\n\ndef li():\n    return list(mi())\n\ndef si():\n    return stdin.readline()\nfor _ in range(ii()):\n    (n, k1, k2) = mi()\n    (w, b) = mi()\n    if w == 0 and b == 0:\n        print('YES')\n    elif w > 0 and b == 0:\n        if 2 * w <= k1 + k2:\n            print('YES')\n        else:\n            print('NO')\n    elif w == 0 and b > 0:\n        if 2 * n - k1 - k2 >= 2 * b:\n            print('YES')\n        else:\n            print('NO')\n    elif w > 0 and b > 0:\n        if 2 * w <= k1 + k2 and 2 * n - k1 - k2 >= 2 * b:\n            print('YES')\n        else:\n            print('NO')", "import sys, io, os, math\nfrom math import ceil, log, gcd, sqrt\nfrom itertools import permutations\nimport operator\nmod = 1000000007\nmod1 = 998244353\n\ndef intinp():\n    return int(sys.stdin.readline())\n\ndef strinp():\n    return sys.stdin.readline()\n\ndef arrinp():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef mulinp():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef flush():\n    return stdout.flush()\n\ndef power_two(x):\n    return 1 << x\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef solve():\n    (n, k1, k2) = mulinp()\n    (w, b) = mulinp()\n    cells = n + n\n    white = k1 + k2\n    black = cells - white\n    (w, b) = (w + w, b + b)\n    if white - w >= 0 and black - b >= 0:\n        print('YES')\n        return\n    print('NO')\n    return\n\ndef main():\n    tc = intinp()\n    while tc:\n        solve()\n        tc -= 1\nmain()", "for i in range(int(input())):\n    (n, k1, k2) = list(map(int, input().split()))\n    (w, b) = list(map(int, input().split()))\n    a = (k1 + k2) // 2\n    d = (2 * n - k1 - k2) // 2\n    if w <= a and b <= d:\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    if n >= w + b and k1 + k2 >= 2 * w:\n        if k1 > k2:\n            (k1, k2) = (k2, k1)\n        if k1 + (k2 - k1) // 2 >= w and n - k2 + (k2 - k1) // 2 >= b:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    ghor = 2 * n\n    white = k1 + k2\n    black = ghor - white\n    if white >= w * 2 and black >= b * 2:\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nfor _ in range(int(input())):\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    (a, c) = (k1, k2)\n    w -= min(a, c)\n    w -= abs(a - c) // 2\n    (a, c) = (n - k1, n - k2)\n    b -= min(a, c)\n    b -= abs(a - c) // 2\n    if w <= 0 and b <= 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k1, k2) = [int(i) for i in input().split()]\n    (w, b) = [int(i) for i in input().split()]\n    wcount = 0\n    wflag = 0\n    bcount = 0\n    bflag = 0\n    if k1 == k2:\n        if w <= k1:\n            wflag = 1\n            wcount = k1\n        if b <= n - k1:\n            bflag = 1\n            bcount = n - k1\n    else:\n        if k1 > k2:\n            wcount = k2\n            wcount += (k1 - k2) // 2\n            bcount = n - k1\n            bcount += (k1 - k2) // 2\n        else:\n            wcount = k1\n            wcount += (k2 - k1) // 2\n            bcount = n - k2\n            bcount += (k2 - k1) // 2\n        if wcount >= w:\n            wflag = 1\n        if bcount >= b:\n            bflag = 1\n    if wflag and bflag:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k1, k2) = [int(x) for x in input().split()]\n    (w, b) = [int(x) for x in input().split()]\n    white = False\n    if k1 % 2 == k2 % 2:\n        if 2 * w <= k1 + k2 and 2 * b <= 2 * n - k1 - k2:\n            print('YES')\n        else:\n            print('NO')\n    elif 2 * w <= k1 + k2 - 1 and 2 * b <= 2 * n - k1 - k2 - 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    a = (k1 + k2) // 2\n    c = (n - k1 + n - k2) // 2\n    if w <= a and b <= c:\n        print('YES')\n    else:\n        print('NO')", "def count_place(data):\n    n = data[0]\n    k1 = data[1]\n    k2 = data[2]\n    white_pos = min(k1, k2) + abs(k1 - k2) // 2\n    black_pos = min(n - k1, n - k2) + abs(k2 - k1) // 2\n    return (white_pos, black_pos)\nboards = []\ndomin = []\ntimes = int(input())\nfor _ in range(times):\n    boards.append([int(i) for i in input().split()])\n    domin.append([int(i) for i in input().split()])\nfor i in range(times):\n    res = count_place(boards[i])\n    if res[0] >= domin[i][0] and res[1] >= domin[i][1]:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t:\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    if 2 * w <= k1 + k2 and 2 * b <= 2 * n - (k1 + k2):\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    if w > (k1 + k2) / 2 or b > (2 * n - k1 - k2) / 2:\n        print('NO')\n        continue\n    elif w < (k1 + k2) / 2 and b < (2 * n - k1 - k2) / 2:\n        print('YES')\n        continue\n    elif w == (k1 + k2) / 2 and b == (2 * n - k1 - k2) / 2:\n        if k1 % 2 == k2 % 2 and (n - k1) % 2 == (n - k2) % 2:\n            print('YES')\n            continue\n    elif w < (k1 + k2) / 2:\n        if k1 % 2 == k2 % 2:\n            print('YES')\n            continue\n    elif b < (2 * n - k1 - k2) / 2:\n        if (n - k1) % 2 == (n - k2) % 2:\n            print('YES')\n            continue\n    else:\n        print('NO')", "t = int(input())\nans = []\nfor i in range(t):\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    if 2 * w <= k1 + k2 and 2 * b <= 2 * n - (k1 + k2):\n        ans.append('YES')\n    else:\n        ans.append('NO')\nfor i in ans:\n    print(i)", "import os\nimport math\nimport sys\nparse_input = lambda : sys.stdin.readline().rstrip('\\r\\n')\n\ndef func(n, k1, k2, w, b):\n    total_cell = 2 * n\n    n_w_cell = k1 + k2\n    n_b_cell = total_cell - n_w_cell\n    dom_w_cell = 2 * w\n    dom_b_cell = 2 * b\n    if (n_w_cell >= dom_w_cell) & (n_b_cell >= dom_b_cell):\n        answer = 'YES'\n    else:\n        answer = 'NO'\n    return answer\n\ndef main():\n    n_cases = int(parse_input())\n    for i in range(n_cases):\n        (n, k1, k2) = [int(i) for i in parse_input().split()]\n        (w, b) = [int(i) for i in parse_input().split()]\n        print(func(n, k1, k2, w, b))\nmain()", "t = int(input())\n\ndef f(w, b, n, k1, k2):\n    d = 0\n    d1 = 0\n    if k1 > k2:\n        d += k2\n        d += (k1 - k2) // 2\n    elif k1 < k2:\n        d += k1\n        d += (k2 - k1) // 2\n    elif k1 == k2:\n        d += k1\n    b1 = n - k1\n    b2 = n - k2\n    if b1 > b2:\n        d1 += b2\n        d1 += (b1 - b2) // 2\n    elif b1 < b2:\n        d1 += b1\n        d1 += (b2 - b1) // 2\n    elif b1 == b2:\n        d1 += b1\n    if d1 >= b and d >= w:\n        return 'YES'\n    else:\n        return 'NO'\nl = []\nfor i in range(t):\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    l.append(f(w, b, n, k1, k2))\nfor i in range(t):\n    print(l[i])", "t = int(input())\nfor i in range(t):\n    (n, k1, k2) = list(map(int, input().split()))\n    (j1, j2) = (n - k1, n - k2)\n    (w, b) = list(map(int, input().split()))\n    total = 0\n    if k1 == 0:\n        total += k2 // 2\n    elif k2 == 0:\n        total += k1 // 2\n    else:\n        total += min(k1, k2) + abs(k1 - k2) // 2\n    if total < w:\n        print('NO')\n        continue\n    total = 0\n    if j1 == 0:\n        total += j2 // 2\n    elif j2 == 0:\n        total += j1 // 2\n    else:\n        total += min(j1, j2) + abs(j1 - j2) // 2\n    if total < b:\n        print('NO')\n    else:\n        print('YES')", "for i in range(int(input())):\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    nb = 2 * n - (k1 + k2)\n    if 2 * w <= k1 + k2 and 2 * b <= nb:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nout = list()\nfor i in range(0, t):\n    l = list(map(int, input().split()))\n    (w, b) = map(int, input().split())\n    area = 2 * l[0]\n    white_area = l[1] + l[2]\n    black_area = area - white_area\n    a = white_area - w * 2\n    b = black_area - b * 2\n    if a >= 0 and b >= 0:\n        out.append('YES')\n    else:\n        out.append('NO')\nfor i in out:\n    print(i)", "t = int(input())\nfor i in range(t):\n    str1 = input().split()\n    str2 = input().split()\n    n = int(str1[0])\n    k1 = int(str1[1])\n    k2 = int(str1[2])\n    w = int(str2[0])\n    b = int(str2[1])\n    x = k1 + k2\n    y = 2 * n - x\n    if x >= 2 * w and y >= 2 * b:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    s = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    if a[0] == 0 and a[1] == 0:\n        print('YES')\n    elif s[1] + s[2] >= 2 * a[0] and 2 * s[0] - s[1] - s[2] >= 2 * a[1]:\n        print('YES')\n    else:\n        print('NO')", "def domino(nkk, wbb):\n    n = nkk[0]\n    w = [nkk[1], nkk[2]]\n    b = [abs(nkk[1] - n), abs(nkk[2] - n)]\n    max_w = min(w) + abs(w[1] - w[0]) // 2\n    max_b = min(b) + abs(b[1] - b[0]) // 2\n    if max_w >= wbb[0] and max_b >= wbb[1]:\n        return 'YES'\n    else:\n        return 'NO'\nresult = []\nt = int(input())\nfor i in range(t):\n    nkk = list(map(int, input().rstrip().split()))\n    wb = list(map(int, input().rstrip().split()))\n    result.append(domino(nkk, wb))\nfor i in result:\n    print(i)", "import sys\nfrom collections import *\nfrom heapq import *\nimport math\nimport bisect\n\ndef input():\n    return sys.stdin.readline()\nfor _ in range(int(input())):\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    minn = min(k1, k2)\n    maxx = max(k1, k2)\n    blck = 2 * n - (k1 + k2)\n    w -= minn\n    w -= (maxx - minn) // 2\n    b -= blck // 2\n    if w > 0 or b > 0:\n        print('NO')\n    else:\n        print('YES')", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_list_string():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\n\ndef get_print_int(x):\n    sys.stdout.write(str(x) + '\\n')\n\ndef get_print(x):\n    sys.stdout.write(x + '\\n')\n\ndef get_print_int_same(x):\n    sys.stdout.write(str(x) + ' ')\n\ndef get_print_same(x):\n    sys.stdout.write(x + ' ')\nfrom sys import maxsize\n\ndef solve():\n    for _ in range(get_int()):\n        (n, k1, k2) = get_ints()\n        (w, b) = get_ints()\n        if k1 == k2:\n            if w <= k1 and b <= n - k1:\n                get_print('YES')\n            else:\n                get_print('NO')\n        elif k1 > k2:\n            diff = k1 - k2\n            req1 = k2 + diff // 2\n            req2 = n - k1 + diff // 2\n            if req1 >= w and req2 >= b:\n                get_print('YES')\n            else:\n                get_print('NO')\n        else:\n            diff = k2 - k1\n            req1 = k1 + diff // 2\n            req2 = n - k2 + diff // 2\n            if req1 >= w and req2 >= b:\n                get_print('YES')\n            else:\n                get_print('NO')\nsolve()", "t = int(input())\nwhile t > 0:\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    flag1 = 0\n    flag2 = 0\n    if 2 * w <= k1 + k2:\n        flag1 = 1\n    if 2 * b <= 2 * n - k1 - k2:\n        flag2 = 1\n    if flag1 == 1 and flag2 == 1:\n        print('YES')\n    else:\n        print('NO')\n    t = t - 1", "t = int(input())\nfor _ in range(t):\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    (fw, fb) = (1, 1)\n    x = min(k1, k2)\n    y = max(k1, k2)\n    if w > x:\n        w -= x\n        k = (y - x) // 2\n        if w > k:\n            fw = 0\n    p = n - k1\n    q = n - k2\n    x = min(p, q)\n    y = max(p, q)\n    if b > x:\n        b -= x\n        k = (y - x) // 2\n        if b > k:\n            fb = 0\n    if fw & fb:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, k1, k2) = map(int, input().split())\n    (a, b) = map(int, input().split())\n    if abs(k1 + k2) >= 2 * a and n * 2 - k1 - k2 >= 2 * b:\n        print('YES')\n    else:\n        print('NO')", "def fn(n, k1, k2, w, b):\n    if k1 < k2:\n        w1 = k1\n        b1 = n - k2\n    else:\n        w1 = k2\n        b1 = n - k1\n    k = (k2 - k1) // 2 if k2 > k1 else (k1 - k2) // 2\n    if w1 + k >= w and b1 + k >= b:\n        return 'YES'\n    else:\n        return 'NO'\na = []\nt = int(input())\nfor i in range(t):\n    (n, k1, k2) = input().split()\n    (w, b) = input().split()\n    n = int(n)\n    k1 = int(k1)\n    k2 = int(k2)\n    w = int(w)\n    b = int(b)\n    a.append(fn(n, k1, k2, w, b))\nfor i in a:\n    print(i)", "for __ in range(int(input())):\n    (n, k1, k2) = tuple(map(int, input().split()))\n    (w, b) = tuple(map(int, input().split()))\n    rw = k1 + k2\n    rb = 2 * n - k1 - k2\n    if rw < 2 * w or rb < 2 * b or 2 * n < 2 * (w + b):\n        print('NO')\n    elif rb == 2 * b or rw == 2 * w:\n        if abs(k2 - k1) % 2 == 1:\n            print('NO')\n        else:\n            print('YES')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    wt = k2 + k1\n    bt = 2 * n - wt\n    if 2 * w <= wt and 2 * b <= bt:\n        print('YES')\n    else:\n        print('NO')", "d = int(input())\nwhile d != 0:\n    d = d - 1\n    (n, k, c) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    if 2 * b > 2 * n - k - c:\n        print('NO')\n    elif 2 * w > k + c:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    if k1 + k2 >= 2 * w and 2 * n - (k1 + k2) >= 2 * b:\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\nins = lambda : input().rstrip()\nini = lambda : int(input().rstrip())\ninm = lambda : map(int, input().rstrip().split())\ninl = lambda : list(map(int, input().split()))\nout = lambda x, s='\\n': print(s.join(map(str, x)))\nt = ini()\nfor _ in range(t):\n    (n, k1, k2) = inm()\n    (w, b) = inm()\n    x = k1 + k2\n    if x >= w * 2 and n * 2 - x >= b * 2:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, k1, k2) = map(int, input().split(' '))\n    (w, b) = map(int, input().split(' '))\n    if k1 + k2 < w * 2 or n - k1 + (n - k2) < b * 2:\n        print('NO')\n    else:\n        print('YES')", "import math\ntestcases = int(input())\nnk = []\nwb = []\nfor i in range(testcases):\n    nk.append([int(k) for k in input().split()])\n    wb.append([int(k) for k in input().split()])\nfor i in range(testcases):\n    if min(nk[i][1], nk[i][2]) + math.floor(abs(nk[i][2] - nk[i][1]) / 2) < wb[i][0]:\n        print('NO')\n        continue\n    if min(nk[i][0] - nk[i][1], nk[i][0] - nk[i][2]) + math.floor(abs(nk[i][0] - nk[i][2] - nk[i][0] + nk[i][1]) / 2) < wb[i][1]:\n        print('NO')\n        continue\n    print('YES')", "t = int(input())\nfor i in range(t):\n    (n, k1, k2) = map(int, input().split())\n    (wh, bl) = map(int, input().split())\n    White = k1 + k2\n    Black = 2 * n - White\n    if White >= 2 * wh and Black >= 2 * bl:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (n, k1, k2) = map(int, input().split())\n    (w, b) = map(int, input().split())\n    if min(k1, k2) * 2 + abs(k1 - k2) >= w * 2 and 2 * n - (min(k1, k2) * 2 + abs(k1 - k2)) >= 2 * b:\n        print('YES')\n    else:\n        print('NO')"]