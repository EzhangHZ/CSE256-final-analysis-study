["for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(input())\n    if '1' in a:\n        z = 0\n        b = ''\n        for x in a:\n            if x == '1':\n                if z:\n                    if b:\n                        d = min(z // 2, m)\n                        b += '1' * d + '0' * (z - d * 2) + '1' * d\n                    else:\n                        d = min(z, m)\n                        b += '0' * (z - d) + '1' * d\n                b += '1'\n                z = 0\n            else:\n                z += 1\n        d = min(z, m)\n        b += '1' * d + '0' * (z - d)\n        print(b)\n    else:\n        print(''.join(a))", "t = int(input())\nfor _ in range(t):\n    (n, m) = (int(i) for i in input().split())\n    s = [int(i) for i in input()]\n    (le, ri, res) = (0, 0, s)\n    while ri < n:\n        while ri < n - 1 and res[ri] == 0:\n            ri += 1\n        (lo, hi, rem) = (le, ri, min(m, n))\n        while rem > 0 and (hi - lo > 2 or res[lo] == 0 or res[hi] == 0):\n            if res[lo] == 1:\n                res[lo + 1] = 1\n                lo += 1\n            if res[hi] == 1:\n                res[hi - 1] = 1\n                hi -= 1\n            rem -= 1\n        (le, ri) = (ri, ri + 1)\n    res = ''.join((str(i) for i in res))\n    print(res)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    s = input()\n    o = []\n    for i in range(len(s)):\n        if s[i] == '1':\n            o.append(i)\n    if len(o) == 0:\n        print(s)\n        continue\n    r = 0\n    ans = ''\n    for i in range(n):\n        if s[i] == '1':\n            r += 1\n            ans += '1'\n        elif r == 0:\n            if abs(i - o[r]) <= m:\n                ans += '1'\n            else:\n                ans += '0'\n        elif r == len(o):\n            if abs(i - o[r - 1]) <= m:\n                ans += '1'\n            else:\n                ans += '0'\n        elif (abs(i - o[r]) <= m or abs(i - o[r - 1]) <= m) and abs(i - o[r]) != abs(i - o[r - 1]):\n            ans += '1'\n        else:\n            ans += '0'\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = list(input())\n    first_1 = True\n    i = 0\n    while i < n:\n        if a[i] == '1':\n            if first_1 == True:\n                first_1 = False\n                k = i - 1\n                temp_m = m\n                while k >= 0 and temp_m > 0:\n                    a[k] = '1'\n                    k -= 1\n                    temp_m -= 1\n            else:\n                j = i + 1\n                while j < n:\n                    if a[j] == '1':\n                        temp_j = j\n                        temp_m = m\n                        while j > i + 2 and temp_m > 0:\n                            temp_m -= 1\n                            i += 1\n                            j -= 1\n                            a[i] = '1'\n                            a[j] = '1'\n                        i = temp_j\n                        break\n                    else:\n                        j += 1\n                if j == n:\n                    k = i + 1\n                    temp_m = m\n                    while k < n and temp_m > 0:\n                        a[k] = '1'\n                        k += 1\n                        temp_m -= 1\n                    i = n\n        else:\n            i += 1\n    str1 = ''\n    print(str1.join(a))", "from itertools import *\nI = input\nfor _ in [0] * int(I()):\n    m = int(I().split()[1])\n    for i in range((n := len((a := [[k, len([*g])] for (k, g) in groupby(I())])))):\n        if (x := a[i])[0] < '1':\n            d = min(m, x[1] >> (0 < i < n - 1))\n            if i:\n                x[1] -= d\n                a[i - 1][1] += d\n            if i < n - 1:\n                x[1] -= d\n                a[i + 1][1] += d\n    print(''.join((k * l for (k, l) in a)))", "from itertools import *\nI = input\nfor _ in [0] * int(I()):\n    m = int(I().split()[1])\n    n = len((a := [[k, len([*g])] for (k, g) in groupby(I())])) - 1\n    i = a[0][0] > '0'\n    while i <= n:\n        x = a[i]\n        d = min(m, x[1] >> (0 < i < n))\n        if i:\n            x[1] -= d\n            a[i - 1][1] += d\n        if i < n:\n            x[1] -= d\n            a[i + 1][1] += d\n        i += 2\n    print(''.join((k * l for (k, l) in a)))", "t = int(input())\nfor _ in range(t):\n    (n, m) = [int(d) for d in input().split()]\n    s = list(input())\n    idx = []\n    for i in range(len(s)):\n        if s[i] == '1':\n            idx.append(i)\n    if idx != []:\n        if idx[0] > 0:\n            l = idx[0]\n            c = 0\n            while c < min(l, m):\n                s[l - c - 1] = '1'\n                c = c + 1\n        for i in range(len(idx) - 1):\n            l = idx[i]\n            r = idx[i + 1]\n            c = 0\n            while c < min((r - l - 1) // 2, m):\n                s[l + c + 1] = '1'\n                s[r - c - 1] = '1'\n                c = c + 1\n        if idx[-1] < n - 1:\n            c = 0\n            l = idx[-1]\n            while c < min(m, n - 1 - l):\n                s[l + c + 1] = '1'\n                c = c + 1\n    print(''.join(s))", "import math\nimport sys\nimport itertools\nimport fractions\nimport copy\nwtf = sys.stdin.read()\nwtf = wtf.strip().split('\\n')\nGAP = 2\nfor t in [wtf[i:i + GAP] for i in range(1, len(wtf), GAP)]:\n    (n, m) = map(int, t[0].split())\n    S = [x for x in t[1]]\n    oids = []\n    for i in range(n):\n        if S[i] == '1':\n            oids.append(i)\n    O = len(oids)\n    for i in range(O - 1):\n        d = abs(oids[i] - oids[i + 1]) - 1\n        if d >= 2:\n            if d % 2 != 0:\n                d -= 1\n            dh = d // 2\n            if dh >= m:\n                S[oids[i] + 1:oids[i] + m + 1] = ['1'] * m\n                S[oids[i + 1] - 1:oids[i + 1] - 1 - m:-1] = ['1'] * m\n            else:\n                S[oids[i] + 1:oids[i] + dh + 1] = ['1'] * dh\n                S[oids[i + 1] - 1:oids[i + 1] - 1 - dh:-1] = ['1'] * dh\n    if len(oids) > 0:\n        k = 0\n        for i in range(oids[0] - 1, -1, -1):\n            S[i] = '1'\n            k += 1\n            if k >= m:\n                break\n        k = 0\n        for i in range(oids[-1] + 1, n):\n            S[i] = '1'\n            k += 1\n            if k >= m:\n                break\n    print(''.join(S))", "def solve():\n    (N, M) = list(map(int, input().split()))\n    S = input()\n    d1 = [int(10000000000.0) for _ in range(N)]\n    d2 = [int(10000000000.0) for _ in range(N)]\n    ans = ['0' for _ in range(N)]\n    last = -int(10000000000.0)\n    for i in range(0, N):\n        if S[i] == '1':\n            last = i\n        d1[i] = i - last\n    last = int(10000000000.0)\n    for i in range(N - 1, -1, -1):\n        if S[i] == '1':\n            last = i\n        d2[i] = last - i\n    for i in range(0, N):\n        if S[i] == '1':\n            ans[i] = '1'\n        elif d1[i] == d2[i]:\n            ans[i] = '0'\n        elif d1[i] <= M or d2[i] <= M:\n            ans[i] = '1'\n        else:\n            ans[i] = '0'\n    print(''.join(ans))\nT = int(input())\nfor _ in range(T):\n    solve()", "def solve(n, m, A):\n    flags = [[-10 ** 10, 10 ** 10] for _ in range(n)]\n    prev = -10 ** 10\n    for (i, a) in enumerate(A):\n        if a == '1':\n            prev = i\n        flags[i][0] = prev\n    prev = 10 ** 10\n    for (i, a) in enumerate(A[::-1]):\n        if a == '1':\n            prev = n - i - 1\n        flags[n - i - 1][1] = prev\n    counts = []\n    for (i, (prev, nex)) in enumerate(flags):\n        if i == prev:\n            counts.append(0)\n        elif i - prev == nex - i:\n            counts.append(10 ** 10)\n        else:\n            counts.append(min(i - prev, nex - i))\n    ans = ''\n    for cnt in counts:\n        if cnt <= m:\n            ans += '1'\n        else:\n            ans += '0'\n    return ans\n\ndef main():\n    ans = []\n    t = int(input())\n    for _ in range(t):\n        (n, m) = map(int, input().split(' '))\n        A = input()\n        ans.append(solve(n, m, A))\n    for a in ans:\n        print(a)\nmain()", "answers = []\n\ndef solve(n, m, s):\n    store = []\n    for (i, ele) in enumerate(s):\n        if ele == '1':\n            store.append(i)\n    length = len(store)\n    if length == 0:\n        answers.append(s)\n        return\n    final = []\n    for i in range(length - 1):\n        if store[i + 1] - store[i] > 2:\n            final.append([store[i] + 1, store[i + 1] - 1])\n    first = min(m, store[0])\n    last = min(m, n - store[-1])\n    finalArray = list(s)\n    start = store[0] - 1\n    end = store[0] - first\n    i = start\n    while i >= end and i >= 0:\n        finalArray[i] = '1'\n        i -= 1\n    start = store[-1] + 1\n    end = store[-1] + last\n    i = start\n    while i <= end and i < n:\n        finalArray[i] = '1'\n        i += 1\n    for ele in final:\n        start = ele[0]\n        end = ele[1]\n        length = end - start + 1\n        count = 0\n        while start < end and count < m:\n            finalArray[start] = '1'\n            finalArray[end] = '1'\n            count += 1\n            start += 1\n            end -= 1\n    ans = ''\n    for ele in finalArray:\n        ans += ele\n    answers.append(ans)\nT = int(input())\nwhile T:\n    (n, m) = [int(x) for x in input().split()]\n    s = input()\n    solve(n, m, s)\n    T -= 1\nfor ans in answers:\n    print(ans)", "def life(n, m, C):\n    D = [0] * n\n    j = None\n    for i in range(n):\n        if C[i] == '1':\n            if j is None:\n                for k in range(max(i - m, 0), i):\n                    C[k] = '1'\n            else:\n                d = i - j - 1\n                e = min(d // 2, m)\n                for k in range(j + 1, j + e + 1):\n                    C[k] = '1'\n                for k in range(i - e, i):\n                    C[k] = '1'\n            j = i\n    if j is not None:\n        for k in range(j + 1, min(j + m + 1, n)):\n            C[k] = '1'\n    return C\n\ndef main():\n    t = readint()\n    R = []\n    for _ in range(t):\n        (n, m) = readinti()\n        C = list(input())\n        R.append(''.join(life(n, m, C)))\n    print('\\n'.join(R))\nimport sys\n\ndef readint():\n    return int(input())\n\ndef readinti():\n    return map(int, input().split())\n\ndef readintl():\n    return list(readinti())\n\ndef readintll(k):\n    return [readintl() for _ in range(k)]\n\ndef log(*args, **kwargs):\n    print(*args, **kwargs, file=sys.stderr)\nmain()", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    st = list(input())\n    d = {}\n    l = -1\n    r = -1\n    for i in range(n):\n        if st[i] == '0':\n            d[i] = [l]\n        else:\n            l = i\n    for i in range(n - 1, -1, -1):\n        if st[i] == '0':\n            d[i].append(r)\n        else:\n            r = i\n    for k in d:\n        if d[k][0] == -1 and d[k][1] == -1:\n            continue\n        elif d[k][0] == -1 or d[k][1] == -1:\n            if abs(k - (d[k][0] + d[k][1] + 1)) <= m:\n                st[k] = '1'\n        elif abs(k - d[k][0]) == abs(k - d[k][1]):\n            continue\n        elif abs(k - d[k][0]) <= m or abs(k - d[k][1]) <= m:\n            st[k] = '1'\n    print(''.join(st))", "retList = []\nfor i in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    Data = input().split('1')\n    if len(Data) == 1:\n        retList.append(Data[0])\n        continue\n    retStr = ''\n    if len(Data[0]) < m:\n        retStr = '1' * len(Data[0]) + '1'\n    else:\n        retStr = '0' * (len(Data[0]) - m) + '1' * (m + 1)\n    for j in range(1, len(Data) - 1):\n        if len(Data[j]) <= 2 * m:\n            if len(Data[j]) % 2 == 0:\n                retStr += '1' * len(Data[j]) + '1'\n            else:\n                retStr += '1' * (len(Data[j]) // 2) + '0' + '1' * (len(Data[j]) // 2) + '1'\n        else:\n            retStr += '1' * m + '0' * (len(Data[j]) - 2 * m) + '1' * (m + 1)\n    if len(Data[-1]) < m:\n        retStr += '1' * len(Data[-1])\n    else:\n        retStr += '1' * m + '0' * (len(Data[-1]) - m)\n    retList.append(retStr)\nprint('\\n'.join(retList))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = input()\n    l = []\n    for i in range(len(s)):\n        if s[i] == '1':\n            l.append(i)\n    if not l:\n        print(s)\n    else:\n        r = ''\n        if l[0] <= m:\n            r += '1' * (l[0] + 1)\n        else:\n            r += '0' * (l[0] - m) + '1' * (m + 1)\n        for i in range(1, len(l)):\n            k = l[i] - l[i - 1]\n            if k <= 2 * m:\n                if k % 2 == 0:\n                    r += '1' * (k // 2 - 1) + '0' + '1' * (k // 2)\n                else:\n                    r += '1' * (k // 2) + '1' * (k // 2 + 1)\n            else:\n                r += '1' * m + '0' * (k - 2 * m - 1) + '1' * (m + 1)\n        if l[-1] < n - 1:\n            if n - 1 - l[-1] <= m:\n                r += '1' * (n - 1 - l[-1])\n            else:\n                r += '1' * m + '0' * (n - 1 - l[-1] - m)\n        print(r)", "def sol(A, n):\n    if sum([int(a) for a in A]) == 0:\n        return A\n    A = A.split('1')\n    for i in range(1, len(A) - 1):\n        l = len(A[i])\n        if l > 0:\n            A[i] = '1' * min(n, l // 2) + '0' * (l - 2 * min(n, l // 2)) + '1' * min(n, l // 2)\n    ans = ''\n    for i in range(len(A)):\n        if A[i] != '':\n            ans += A[i]\n        if i < len(A) - 1:\n            ans += '1'\n    for i in range(len(ans)):\n        if ans[i] == '1':\n            break\n    ans = '0' * (i - min(n, i)) + '1' * min(n, i) + ans[i:]\n    for i in range(len(ans) - 1, -1, -1):\n        if ans[i] == '1':\n            break\n    l = len(ans) - i - 1\n    ans = ans[:i + 1] + '1' * min(n, l) + '0' * (l - min(n, l))\n    return ans\nx = int(input())\nfor _ in range(x):\n    y = list(map(int, input().split()))\n    A = input()\n    print(sol(A, y[1]))", "for t in range(int(input())):\n    line = input().split()\n    (n, m) = (int(line[0]), int(line[1]))\n    line = input()\n    s = ''\n    c = 0\n    i = 0\n    while i < n and c < n:\n        if line[i] == '1':\n            if c % 2 == 1:\n                if c == i:\n                    if c <= m:\n                        s += '1' * (c + 1)\n                        c = 0\n                    else:\n                        s += '0' * (c - m)\n                        s += '1' * (m + 1)\n                        c = 0\n                elif c <= 2 * m + 1:\n                    s += '1' * (c // 2)\n                    s += '0'\n                    s += '1' * (c // 2 + 1)\n                    c = 0\n                else:\n                    s += '1' * m\n                    s += '0' * (c - 2 * m)\n                    s += '1' * (m + 1)\n                    c = 0\n            elif c == i:\n                if c <= m:\n                    s += '1' * (c + 1)\n                    c = 0\n                else:\n                    s += '0' * (c - m)\n                    s += '1' * (m + 1)\n                    c = 0\n            elif c <= 2 * m:\n                s += '1' * (c + 1)\n                c = 0\n            else:\n                s += '1' * m\n                s += '0' * (c - 2 * m)\n                s += '1' * (m + 1)\n                c = 0\n        else:\n            c += 1\n        i += 1\n    if c != 0:\n        if c < n:\n            if c <= m:\n                s += '1' * c\n            else:\n                s += '1' * m\n                s += '0' * (c - m)\n        else:\n            s += '0' * c\n    print(s)", "for _ in range(int(input())):\n    (a, b) = [int(x) for x in input().split()]\n    c = input().split('1')\n    if len(c) == 1:\n        print(*c)\n    else:\n        for j in range(len(c)):\n            t = c[j]\n            if j == 0 and len(c[j]) > b:\n                c[j] = '0' * (len(t) - b) + '1' * b\n            elif j == len(c) - 1 and len(c[j]) > b:\n                c[j] = '1' * b + '0' * (len(t) - b)\n            elif (j == 0 or j == len(c) - 1) or (len(t) % 2 == 0 and len(t) <= 2 * b):\n                c[j] = '1' * len(t)\n            elif len(t) % 2 == 1 and len(t) < 2 * b:\n                c[j] = '1' * (len(t) // 2) + '0' + '1' * (len(t) // 2)\n            else:\n                c[j] = '1' * b + '0' * (len(t) - 2 * b) + '1' * b\n        print('1'.join(c))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = input()\n    a = [0] * n\n    left = 10 ** 18 + 1\n    right = 0\n    for i in range(n):\n        if s[i] == '1':\n            a[i] = '1'\n            right = i\n            if left == 10 ** 18 + 1:\n                x = 0\n            else:\n                x = left + 1\n            for j in range(x, right):\n                a[j] = [left, right]\n            left = right\n    if left == 10 ** 18 + 1:\n        x = 0\n    else:\n        x = left + 1\n    for j in range(x, n):\n        a[j] = [left, 10 ** 18 + 1]\n    ans = ''\n    for i in range(n):\n        if a[i] == '1':\n            ans += '1'\n        else:\n            (dist1, dist2) = (abs(a[i][0] - i), abs(a[i][1] - i))\n            if dist2 == dist1:\n                ans += '0'\n            elif min(dist1, dist2) <= m:\n                ans += '1'\n            else:\n                ans += '0'\n    print(ans)", "def fun(ls, ks):\n    (n, k) = ks\n    ans = ''\n    count0 = 0\n    count1 = 0\n    first_zeros = 0\n    for i in ls:\n        if i == '0':\n            count0 += 1\n        else:\n            if count1 == 0:\n                first_zeros = count0\n                count0 = 0\n            else:\n                ans += '1'\n                if count0 % 2 == 0:\n                    if count0 > 2 * k:\n                        ans += '1' * k + (count0 - 2 * k) * '0' + '1' * k\n                    else:\n                        ans += '1' * count0\n                    count0 = 0\n                else:\n                    if count0 > 2 * k:\n                        ans += '1' * k + (count0 - 2 * k) * '0' + '1' * k\n                    else:\n                        ans += '1' * (count0 // 2) + '0' + '1' * (count0 // 2)\n                    count0 = 0\n            count1 += 1\n    if count1 > 0:\n        if count0 == 0:\n            ans += '1'\n        elif k >= count0:\n            ans += '1' + '1' * count0\n        else:\n            ans += '1' + '1' * k + '0' * (count0 - k)\n        if k >= first_zeros:\n            ans = '1' * first_zeros + ans\n        else:\n            ans = '0' * (first_zeros - k) + '1' * k + ans\n    else:\n        print('0' * count0)\n        return\n    print(ans)\nT = int(input())\nfor _ in range(T):\n    ks = list(map(int, input().split()))\n    st = input()\n    fun(st, ks)", "from itertools import groupby\ncases = int(input())\nfor _ in range(cases):\n    (n, k) = map(int, input().split())\n    s = input()\n    ones = s.count('1')\n    if ones == 0:\n        print(s)\n    else:\n        first_one = True\n        last_one = False\n        ans = []\n        for (i, grp) in groupby(s):\n            lst = list(grp)\n            ln = len(lst)\n            if i == '1':\n                ones -= ln\n                ans.extend(lst)\n                if ones == 0:\n                    last_one = True\n                first_one = False\n            if i == '0' and first_one:\n                if k >= ln:\n                    ans.extend(['1'] * ln)\n                else:\n                    ans.extend(['0'] * (ln - k) + ['1'] * k)\n                first_one = False\n            elif i == '0' and last_one:\n                if k >= ln:\n                    ans.extend(['1'] * ln)\n                else:\n                    ans.extend(['1'] * k + ['0'] * (ln - k))\n            elif i == '0':\n                if ln % 2 == 0:\n                    if k >= ln // 2:\n                        ans.extend(['1'] * ln)\n                    else:\n                        ans.extend(['1'] * k + ['0'] * (ln // 2 - k) + ['0'] * (ln // 2 - k) + ['1'] * k)\n                else:\n                    md = ln // 2\n                    ans.extend(['1'] * min(k, md) + ['0'] * (ln - 2 * min(k, md)) + ['1'] * min(k, md))\n        print(''.join(ans))", "def sol(A, n):\n    ones = []\n    for i in range(len(A)):\n        if A[i] == '1':\n            ones.append(i)\n    ans = ''\n    if len(ones) == 0:\n        return A\n    l = ones[0]\n    ans += '0' * (l - min(n, l)) + '1' * min(n, l)\n    ans += '1'\n    for i in range(len(ones) - 1):\n        l = ones[i + 1] - ones[i] - 1\n        if l > 0:\n            ans += '1' * min(n, l // 2) + '0' * (l - 2 * min(n, l // 2)) + '1' * min(n, l // 2)\n        ans += '1'\n    l = len(A) - ones[-1] - 1\n    ans += '1' * min(n, l) + '0' * (l - min(n, l))\n    return ans\nx = int(input())\nfor _ in range(x):\n    y = list(map(int, input().split()))\n    A = input()\n    print(sol(A, y[1]))", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    l = input()\n    if '1' not in l:\n        print(l)\n    else:\n        pos = []\n        l = list(l)\n        for i in range(n):\n            if l[i] == '1':\n                pos.append(i)\n        p = pos[0]\n        if p != 0:\n            for j in range(1, m + 1):\n                if p - j >= 0:\n                    l[p - j] = '1'\n                else:\n                    break\n        for i in range(len(pos) - 1):\n            p = pos[i]\n            p_1 = pos[i + 1]\n            d = p_1 - p - 1\n            for j in range(1, m + 1):\n                if p + j < p_1:\n                    l[p + j] = '1'\n                else:\n                    break\n            for j in range(1, m + 1):\n                if p_1 - j > p:\n                    l[p_1 - j] = '1'\n                else:\n                    break\n            if d % 2 == 1:\n                l[(p_1 + p) // 2] = '0'\n        p = pos[-1]\n        if p != n - 1:\n            for j in range(1, m + 1):\n                if p + j < n:\n                    l[p + j] = '1'\n                else:\n                    break\n        print(''.join(l))", "import bisect\n\ndef solve(nm, s):\n    n = nm[0]\n    m = nm[1]\n    arr_1 = []\n    for i in range(n):\n        if s[i] == '1':\n            arr_1.append(i)\n    if len(arr_1) == 0:\n        return s\n    arr_1.sort()\n    arr = []\n    for i in range(n):\n        if s[i] == '0':\n            ind = bisect.bisect(arr_1, i)\n            if ind == 0:\n                if arr_1[ind] - i <= m:\n                    s = s[:i] + '1' + s[i + 1:]\n            elif ind == len(arr_1):\n                if i - arr_1[ind - 1] <= m:\n                    s = s[:i] + '1' + s[i + 1:]\n            else:\n                len1 = i - arr_1[ind - 1]\n                len2 = arr_1[ind] - i\n                if len1 == len2:\n                    continue\n                elif min(len1, len2) <= m:\n                    s = s[:i] + '1' + s[i + 1:]\n    return s\nt = int(input())\nfor i in range(t):\n    nm = list(map(int, input().strip().split()))[:2]\n    s = input()\n    print(solve(nm, s))", "import math\nt = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    s = input()\n    a = [m + 1] * n\n    cur_dis = 0\n    for i in range(n):\n        if s[i] == '1':\n            a[i] = 0\n            cur_dis = 1\n        elif s[i] == '0' and cur_dis != 0:\n            a[i] = cur_dis\n            cur_dis += 1\n    cur_dis = 0\n    for i in range(n - 1, -1, -1):\n        if s[i] == '1':\n            a[i] = 0\n            cur_dis = 1\n        elif s[i] == '0' and cur_dis != 0:\n            if a[i] == cur_dis:\n                a[i] = m + 1\n            else:\n                a[i] = min(a[i], cur_dis)\n            cur_dis += 1\n    ans = ''\n    for i in range(n):\n        if a[i] <= m:\n            ans += '1'\n        else:\n            ans += '0'\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = input()\n    if a.count('1') == 0:\n        print(a)\n        continue\n    cnt = 0\n    b = []\n    for i in range(n):\n        if a[i] == '0':\n            cnt += 1\n        else:\n            b.append(cnt)\n            cnt = 0\n    b.append(cnt)\n    n1 = len(b)\n    ans = ''\n    if b[0] <= m:\n        ans += '1' * b[0]\n    else:\n        ans += '0' * (b[0] - m)\n        ans += '1' * m\n    ans += '1'\n    for i in range(1, n1 - 1):\n        if b[i] == 0:\n            ans += '1'\n        else:\n            if b[i] <= 2 * m:\n                if b[i] % 2 == 0:\n                    ans += '1' * b[i]\n                else:\n                    ans += '1' * (b[i] // 2)\n                    ans += '0'\n                    ans += '1' * (b[i] // 2)\n            else:\n                ans += '1' * m\n                ans += '0' * (b[i] - m - m)\n                ans += '1' * m\n            ans += '1'\n    if b[-1] <= m:\n        ans += '1' * b[-1]\n    else:\n        ans += '1' * m\n        ans += '0' * (b[-1] - m)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, m) = [int(x) for x in input().split()]\n    a = list(input())\n    i = 0\n    l = -1\n    while i < n:\n        zeroes = 0\n        while i < n and a[i] == '0':\n            i += 1\n            zeroes += 1\n        h = min(m, zeroes >> 1)\n        if l != -1:\n            for j in range(l, l + h if i < n else min(n, l + m)):\n                a[j] = '1'\n        if i < n:\n            for j in range(i - h if l != -1 else max(0, i - m), i):\n                a[j] = '1'\n        while i < n and a[i] == '1':\n            i += 1\n        l = i\n    print(''.join(a))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(input())\n    ind = []\n    for i in range(n):\n        if l[i] == '1':\n            ind.append(i)\n    i = 0\n    for j in ind:\n        t = m\n        temp = j\n        j = j - 1\n        if i == 0:\n            while j >= 0 and t > 0:\n                l[j] = '1'\n                j -= 1\n                t -= 1\n        else:\n            while t > 0 and i < j:\n                l[i] = '1'\n                l[j] = '1'\n                i += 1\n                j -= 1\n                t -= 1\n        i = temp + 1\n    if len(ind) > 0 and ind[-1] != n - 1:\n        i = ind[-1] + 1\n        while i < n and m > 0:\n            l[i] = '1'\n            i += 1\n            m -= 1\n    print(''.join(l))", "from collections import Counter\nimport math\nfrom bisect import bisect\nimport sys\nMOD = 1000000007\nMAX = sys.maxsize\nMIN = -sys.maxsize\n\nclass get:\n\n    def int():\n        return list(map(int, input().split()))\n\n    def str():\n        return input().split()\n\n    def float():\n        return list(map(float, input().split()))\n\n    def map():\n        return map(int, input().split())\n\ndef sqrt(x):\n    return int(math.sqrt(x)) + 1\n\ndef gcd(*args):\n    result = args[0]\n    for item in args:\n        result = math.gcd(result, item)\n    return result\n\ndef LCM(a, b):\n    return a * b // math.gcd(a, b)\n\ndef solve():\n    (n, m) = get.map()\n    s = list(input())\n    if s == ['0'] * n:\n        print(''.join(s))\n    else:\n        mylist = []\n        for i in range(n):\n            if s[i] == '1':\n                mylist.append(i)\n        for i in range(n):\n            if s[i] == '0':\n                a = bisect(mylist, i)\n                if a == 0:\n                    required = mylist[0] - i\n                    if required <= m:\n                        s[i] = '1'\n                elif a == len(mylist):\n                    required = i - mylist[-1]\n                    if required <= m:\n                        s[i] = '1'\n                else:\n                    left = i - mylist[a - 1]\n                    right = mylist[a] - i\n                    if left != right and min(left, right) <= m:\n                        s[i] = '1'\n        print(''.join(s))\nfor _ in range(int(input())):\n    solve()", "t = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().split()))\n    s = input()\n    prefix = []\n    suffix = []\n    cur_left = float('-inf')\n    for i in range(len(s)):\n        prefix.append(cur_left)\n        if s[i] == '1':\n            cur_left = i\n    cur_right = float('inf')\n    for i in range(len(s) - 1, -1, -1):\n        suffix.append(cur_right)\n        if s[i] == '1':\n            cur_right = i\n    suffix.reverse()\n    answer = []\n    for i in range(len(s)):\n        left_dist = i - prefix[i]\n        right_dist = suffix[i] - i\n        if s[i] == '0' and left_dist != right_dist and (min(left_dist, right_dist) <= m):\n            answer.append('1')\n        else:\n            answer.append(s[i])\n    print(''.join(answer))", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    s = list(map(int, input()))\n    for j in range(1, a):\n        if s[j] == 1:\n            continue\n        if s[j - 1] != 0 and s[j] == 0 and (s[j - 1] + 1 <= b + 1):\n            s[j] = s[j - 1] + 1\n    for j in reversed(range(1, a)):\n        if (s[j - 1] > s[j] + 1 or s[j - 1] == 0) and s[j] != 0 and (s[j] + 1 <= b + 1):\n            s[j - 1] = s[j] + 1\n        elif s[j - 1] == s[j] + 1 and s[j] != 0:\n            s[j - 1] = 0\n    ans = ''\n    for i in s:\n        if i == 0:\n            ans += '0'\n        else:\n            ans += '1'\n    print(ans)", "def solution(n, m, array):\n    pos = []\n    for i in range(n):\n        if array[i] == 1:\n            pos.append(i)\n    if len(pos) == 0:\n        return ''.join(map(str, array))\n    idx = pos[0]\n    while idx >= 0 and pos[0] - idx <= m:\n        array[idx] = 1\n        idx -= 1\n    idx = pos[-1]\n    while idx < n and idx - pos[-1] <= m:\n        array[idx] = 1\n        idx += 1\n    for i in range(0, len(pos) - 1):\n        idx = pos[i]\n        while idx < n and idx - pos[i] <= m and (idx < pos[i + 1]):\n            array[idx] = 1\n            idx += 1\n    for i in range(1, len(pos)):\n        idx = pos[i]\n        while idx >= 0 and pos[i] - idx <= m and (idx > pos[i - 1]):\n            array[idx] = 1\n            idx -= 1\n    for i in range(1, len(pos)):\n        if (pos[i] - pos[i - 1]) % 2 == 0:\n            array[(pos[i] + pos[i - 1]) // 2] = 0\n    return ''.join(map(str, array))\nt = int(input())\nfor tt in range(t):\n    (n, m) = map(int, input().split())\n    array = list(map(int, list(input())))\n    print(solution(n, m, array))", "def mark(l, l0, n, ma):\n    l[n] = 1\n    if n > 0:\n        if l[n - 1] == 1 and l0[n - 1] != 1:\n            l[n - 1] = 0\n        else:\n            l[n - 1] = 1\n    if n < ma - 1:\n        l[n + 1] = 1\n\ndef go():\n    (n, m) = map(int, input().split())\n    l = [int(i) for i in input()]\n    l1 = [0] * n\n    p = l.count(1)\n    k = 0\n    q = 0\n    if p > 0:\n        k = l.index(1)\n        for i in range(max(0, k - m), k):\n            l1[i] = 1\n    while p > 1:\n        q = k + 1 + l[k + 1:].index(1)\n        for i in range(k, min(k + m + 1, q)):\n            l1[i] = 1\n        for i in range(max(q - m, k + m + 1), q + 1):\n            l1[i] = 1\n        if k % 2 == q % 2:\n            l1[(k + q) // 2] = 0\n        k = q\n        p -= 1\n    if p == 1:\n        for i in range(k, min(n, k + m + 1)):\n            l1[i] = 1\n    s = str()\n    for i in l1:\n        s += str(i)\n    print(s)\nfor i in range(int(input())):\n    go()", "from collections import defaultdict\ntc = int(input())\nfor _ in range(tc):\n    (n, m) = list(map(int, input().split()))\n    s = input()\n    a = list(s)\n    oi = []\n    for i in range(n):\n        if a[i] == '1':\n            oi.append(i)\n    if len(oi) == 0:\n        print(s)\n        continue\n    c = 0\n    for i in range(oi[-1] + 1, n):\n        a[i] = '1'\n        c += 1\n        if c == m:\n            break\n    c = 0\n    for i in range(oi[0] - 1, -1, -1):\n        a[i] = '1'\n        c += 1\n        if c == m:\n            break\n    for i in range(1, len(oi)):\n        d = (oi[i] - oi[i - 1] - 1) // 2\n        c = 0\n        for j in range(oi[i - 1] + 1, oi[i]):\n            if c == min(m, d):\n                break\n            c += 1\n            a[j] = '1'\n        c = 0\n        for j in range(oi[i] - 1, oi[i - 1], -1):\n            if c == min(m, d):\n                break\n            c += 1\n            a[j] = '1'\n    print(''.join(a))", "from collections import deque\n\ndef read_int():\n    return int(input())\n\ndef read_ints():\n    return map(int, input().split(' '))\nt = read_int()\nfor case_num in range(t):\n    (n, m) = read_ints()\n    s = input()\n    dq = deque()\n    alive_day = [-1] * n\n    for i in range(n):\n        if s[i] == '1':\n            dq.append(i)\n            alive_day[i] = 0\n    while len(dq) > 0:\n        i = dq.popleft()\n        if alive_day[i] == -1:\n            continue\n        if alive_day[i] == m:\n            break\n        if i >= 1:\n            if alive_day[i - 1] == -1:\n                alive_day[i - 1] = alive_day[i] + 1\n                dq.append(i - 1)\n            elif alive_day[i - 1] == alive_day[i] + 1:\n                alive_day[i - 1] = -1\n        if i + 1 < n:\n            if alive_day[i + 1] == -1:\n                alive_day[i + 1] = alive_day[i] + 1\n                dq.append(i + 1)\n            elif alive_day[i + 1] == alive_day[i] + 1:\n                alive_day[i + 1] = -1\n    print(''.join(map(lambda x: '0' if x == -1 else '1', alive_day)))", "for iii in range(int(input())):\n    (n, m) = map(int, input().split())\n    q = input()\n    q = list(q)\n    if q.count('1') == 0:\n        print(''.join(q))\n        continue\n    ind = 0\n    for i in range(len(q)):\n        if q[i] == '1':\n            x = i - 1\n            ind = i\n            for ii in range(x, max(-1, x - m), -1):\n                q[ii] = '1'\n            break\n    z = 0\n    he = 0\n    while True:\n        count = 0\n        for i in range(ind + 1, len(q)):\n            if q[i] == '1':\n                z = i\n                break\n            count += 1\n        else:\n            break\n        for i in range(ind + 1, min(ind + 1 + m, ind + 1 + count // 2)):\n            q[i] = '1'\n        for i in range(max(z - count // 2, z - m), z):\n            q[i] = '1'\n        ind = z\n        he += 1\n    indi = -1\n    for i in range(len(q) - 1, -1, -1):\n        if q[i] == '1':\n            indi = i\n            break\n    if indi != -1:\n        for i in range(indi + 1, min(indi + 1 + m, len(q))):\n            q[i] = '1'\n    print(''.join(q))", "from bisect import bisect\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    s = input()\n    arr = list(s)\n    ones = [i for i in range(n) if arr[i] == '1']\n    n1 = len(ones)\n    if n1 == 0:\n        print(s)\n        continue\n    for i in range(n):\n        if arr[i] == '1':\n            continue\n        pos = bisect(ones, i)\n        if pos == n1:\n            if i - ones[pos - 1] <= m:\n                arr[i] = '1'\n        elif pos == 0:\n            if ones[pos] - i <= m:\n                arr[i] = '1'\n        elif ones[pos] - i == i - ones[pos - 1]:\n            continue\n        elif min(ones[pos] - i, i - ones[pos - 1]) <= m:\n            arr[i] = '1'\n    print(''.join(arr))", "from itertools import combinations, product\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    s = input()\n    ones = []\n    res = []\n    for i in range(n):\n        if s[i] == '1':\n            ones.append(i)\n    L_ones = len(ones)\n    if L_ones == 0 or m == 0:\n        print(s)\n        continue\n    x = 0\n    for i in range(n):\n        if s[i] == '1':\n            print('1', end='')\n            continue\n        while True:\n            if x < L_ones and ones[x] < i:\n                x += 1\n            else:\n                break\n        if x == 0:\n            if ones[x] - i <= m:\n                print('1', end='')\n            else:\n                print('0', end='')\n        elif x == L_ones:\n            if i - ones[-1] <= m:\n                print('1', end='')\n            else:\n                print('0', end='')\n        elif min(i - ones[x - 1], ones[x] - i) != max(i - ones[x - 1], ones[x] - i) and min(i - ones[x - 1], ones[x] - i) <= m:\n            print('1', end='')\n        else:\n            print('0', end='')\n    print()", "t = int(input())\nINF = 1000500700\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    s = input()\n    r = [INF] * n\n    f = False\n    d = 0\n    for i in range(n):\n        if s[i] == '1':\n            f = True\n            d = 0\n            r[i] = 0\n            k = i - 1\n            while k >= 0 and i - k < r[k]:\n                r[k] = i - k\n                k -= 1\n            if k > 0 and i - k == r[k]:\n                r[k] = INF\n        elif f:\n            d += 1\n            r[i] = d\n    for i in range(n):\n        print('1' if m >= r[i] else '0', end='')\n    print()", "def ints(separator=' '):\n    return [int(x) for x in input().split(separator)]\nfor t in range(int(input())):\n    (n, m) = ints()\n    a = [int(x) for x in input()]\n    left = []\n    right = []\n    k = -1\n    for i in range(n):\n        if a[i] == 1:\n            k = i\n        left.append(n + 1 if k == -1 else i - k)\n    k = -1\n    for i in range(n - 1, -1, -1):\n        if a[i] == 1:\n            k = i\n        right.insert(0, n + 1 if k == -1 else k - i)\n    for i in range(n):\n        if left[i] != 0 and left[i] == right[i]:\n            a[i] = 0\n        else:\n            a[i] = 1 if min(left[i], right[i]) <= m else 0\n    print(''.join([str(x) for x in a]))", "import math\nt = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    s = input()\n    a = [m + 1] * n\n    cur_dis = 0\n    for i in range(n):\n        if s[i] == '1':\n            a[i] = 0\n            cur_dis = 1\n        elif s[i] == '0' and cur_dis != 0:\n            a[i] = cur_dis\n            cur_dis += 1\n    cur_dis = 0\n    for i in range(n - 1, -1, -1):\n        if s[i] == '1':\n            a[i] = 0\n            cur_dis = 1\n        elif s[i] == '0' and cur_dis != 0:\n            if a[i] == cur_dis:\n                a[i] = m + 1\n            else:\n                a[i] = min(a[i], cur_dis)\n            cur_dis += 1\n    ans = ''\n    for i in range(n):\n        if a[i] <= m:\n            ans += '1'\n        else:\n            ans += '0'\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    ar = list(map(int, list(input())))\n    p1 = 0\n    while p1 < n:\n        while p1 < n and ar[p1] != 0:\n            p1 += 1\n        p2 = p1\n        while p2 < n - 1 and ar[p2 + 1] != 1:\n            p2 += 1\n        if p1 == 0 and p2 == n - 1:\n            break\n        elif p1 == 0:\n            np2 = p2\n            i = m\n            while i > 0 and np2 >= 0:\n                ar[np2] = 1\n                np2 -= 1\n                i -= 1\n        elif p2 == n - 1:\n            np1 = p1\n            i = m\n            while i > 0 and np1 < n:\n                ar[np1] = 1\n                np1 += 1\n                i -= 1\n        else:\n            np1 = p1\n            np2 = p2\n            i = m\n            while i > 0 and np1 < np2:\n                ar[np1] = 1\n                ar[np2] = 1\n                np1 += 1\n                np2 -= 1\n                i -= 1\n        p1 = p2 + 1\n    for i in ar:\n        print(i, end='')\n    print()", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, m) = map(int, input().split())\n    s = list(map(int, input().strip()))\n    p = []\n    for i in range(n):\n        if s[i] == 0 and (i > 0 and s[i - 1] == 1) + (i + 1 < n and s[i + 1] == 1) == 1:\n            p.append(i)\n    for j in range(m):\n        for i in p:\n            s[i] = 1\n        q = []\n        for v in p:\n            for i in (v - 1, v + 1):\n                if i >= 0 and i < n and (s[i] == 0) and ((i > 0 and s[i - 1] == 1) + (i + 1 < n and s[i + 1] == 1) == 1):\n                    q.append(i)\n        if len(q) == 0:\n            break\n        p = q\n    print(''.join(map(str, s)))\nfor i in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = input()\n    left = [m + 1] * len(s)\n    right = [m + 1] * len(s)\n    current = -1 * (m + len(s) + 2)\n    for i in range(len(s)):\n        if s[i] == '0':\n            left[i] = min(left[i], i - current)\n        else:\n            current = i\n    current = m + len(s) + 2\n    for i in reversed(range(len(s))):\n        if s[i] == '0':\n            right[i] = min(right[i], current - i)\n        else:\n            current = i\n    output = list(s)\n    for i in range(len(s)):\n        if s[i] == '0' and (left[i] <= m or right[i] <= m) and (left[i] != right[i]):\n            output[i] = '1'\n    print(*output, sep='')", "from collections import defaultdict\ntc = int(input())\nfor _ in range(tc):\n    (n, m) = list(map(int, input().split()))\n    s = input()\n    a = list(s)\n    oi = []\n    for i in range(n):\n        if a[i] == '1':\n            oi.append(i)\n    if len(oi) == 0:\n        print(s)\n        continue\n    if len(oi) == 1:\n        c = 0\n        for i in range(oi[0] + 1, n):\n            a[i] = '1'\n            c += 1\n            if c == m:\n                break\n        c = 0\n        for i in range(oi[0] - 1, -1, -1):\n            a[i] = '1'\n            c += 1\n            if c == m:\n                break\n        print(''.join(a))\n        continue\n    if a[0] == '0' and a[1] == '1':\n        a[0] = '1'\n    c = 0\n    for i in range(oi[-1] + 1, n):\n        a[i] = '1'\n        c += 1\n        if c == m:\n            break\n    c = 0\n    for i in range(oi[0] - 1, -1, -1):\n        a[i] = '1'\n        c += 1\n        if c == m:\n            break\n    for i in range(1, len(oi)):\n        d = (oi[i] - oi[i - 1] - 1) // 2\n        c = 0\n        for j in range(oi[i - 1] + 1, oi[i]):\n            if c == min(m, d):\n                break\n            c += 1\n            a[j] = '1'\n        c = 0\n        for j in range(oi[i] - 1, oi[i - 1], -1):\n            if c == min(m, d):\n                break\n            c += 1\n            a[j] = '1'\n    print(''.join(a))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = input()\n    cnt = 0\n    ones = []\n    for i in range(n):\n        if s[i] == '1':\n            ones.append(i)\n    if len(ones) == 0:\n        print(s)\n    else:\n        ans = [0] * n\n        for i in ones:\n            ans[i] = 1\n        j = ones[0] - 1\n        ones = [-ones[0] - 1] + ones + [n * 2 - ones[-1] - 1]\n        for i in range(1, len(ones) - 1):\n            idx = ones[i]\n            j = idx - 1\n            d1 = idx - ones[i - 1] - 1\n            while idx - j <= min(d1 // 2, m):\n                ans[j] = 1\n                j -= 1\n            j = idx + 1\n            d2 = ones[i + 1] - idx - 1\n            while j - idx <= min(d2 // 2, m):\n                ans[j] = 1\n                j += 1\n        print(*ans, sep='')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    old = list(input())\n    lft = [0] * n\n    rht = [0] * n\n    flag = 0\n    for i in range(n):\n        if old[i] == '1':\n            lft[i] = 0\n            flag = 1\n        elif flag == 1:\n            lft[i] = lft[i - 1] + 1\n    flag = 0\n    for i in range(n - 1, -1, -1):\n        if old[i] == '1':\n            rht[i] = 0\n            flag = 1\n        elif flag == 1:\n            rht[i] = rht[i + 1] + 1\n    res = ['0'] * n\n    for i in range(n):\n        if lft[i] == rht[i] and old[i] == '0':\n            res[i] = '0'\n        elif lft[i] == 0 and rht[i] == 0 and (old[i] == '1'):\n            res[i] = '1'\n        else:\n            if lft[i] == 0 or rht[i] == 0:\n                mi = max(lft[i], rht[i])\n            else:\n                mi = min(lft[i], rht[i])\n            if mi <= m:\n                res[i] = '1'\n            else:\n                res[i] = '0'\n    ans = ''\n    for i in range(n):\n        ans += res[i]\n    print(ans)", "from itertools import *\nI = input\nfor _ in [0] * int(I()):\n    m = int(I().split()[1])\n    for i in range((n := len((a := [[k, len([*g])] for (k, g) in groupby(I())])))):\n        if a[i][0] < '1':\n            d = min(m, a[i][1] >> (0 < i < n - 1))\n            if i:\n                a[i][1] -= d\n                a[i - 1][1] += d\n            if i < n - 1:\n                a[i][1] -= d\n                a[i + 1][1] += d\n    print(''.join((k * l for (k, l) in a)))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = input()\n    ar = [0] * (n + 1)\n    one = -1\n    for i in range(n):\n        if s[i] == '1' and one == -1:\n            one = i\n        elif s[i] == '1' and i - one - 1 <= 2 * m:\n            if (i - one) % 2 != 0:\n                ar[one] += 1\n                ar[i + 1] -= 1\n            else:\n                ar[one] += 1\n                ar[one + int((i - one - 2) / 2) + 1] -= 1\n                ar[one + int((i - one - 2) / 2) + 2] += 1\n                ar[i + 1] -= 1\n            one = i\n        elif s[i] == '1':\n            ar[one] += 1\n            ar[one + m + 1] -= 1\n            ar[i - m] += 1\n            ar[i + 1] -= 1\n            one = i\n    for i in range(n):\n        if s[i] == '1':\n            ar[max(0, i - m)] += 1\n            ar[i + 1] -= 1\n            break\n    for i in range(n - 1, -1, -1):\n        if s[i] == '1':\n            ar[min(n, i + m + 1)] -= 1\n            ar[i] += 1\n            break\n    for i in range(1, n):\n        ar[i] += ar[i - 1]\n    for i in range(n):\n        if ar[i] >= 1:\n            print('1', end='')\n        else:\n            print('0', end='')\n    print('')", "for _ in range(int(input())):\n    (n, m) = list(map(int, input().strip().split()))\n    s = input()\n    ans = [i for i in s]\n    ref = []\n    for i in range(n):\n        if s[i] == '1':\n            ref.append(i)\n    for i in range(len(ref) - 1):\n        j = i + 1\n        m1 = m\n        l = ref[i] + 1\n        r = ref[j] - 1\n        while l < r and m1 > 0:\n            ans[l] = '1'\n            ans[r] = '1'\n            l += 1\n            r -= 1\n            m1 -= 1\n    if len(ref) > 0:\n        l = ref[0] - 1\n        m1 = m\n        while l > -1 and m1 > 0:\n            ans[l] = '1'\n            l -= 1\n            m1 -= 1\n        r = ref[-1] + 1\n        m1 = m\n        while r < n and m1 > 0:\n            ans[r] = '1'\n            r += 1\n            m1 -= 1\n    for i in ans:\n        print(i, end='')\n    print('')", "for t in range(int(input())):\n    (n, m) = [int(x) for x in input().split(' ')]\n    a = [int(x) for x in input()]\n    left = []\n    right = []\n    k = -1\n    for i in range(n):\n        if a[i] == 1:\n            k = i\n        left.append(n + 1 if k == -1 else i - k)\n    k = -1\n    for i in range(n - 1, -1, -1):\n        if a[i] == 1:\n            k = i\n        right.insert(0, n + 1 if k == -1 else k - i)\n    for i in range(n):\n        if left[i] != 0 and left[i] == right[i]:\n            a[i] = 0\n        else:\n            a[i] = 1 if min(left[i], right[i]) <= m else 0\n    print(''.join([str(x) for x in a]))", "t = int(input())\nINF = 1000500700\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    s = input()\n    r = [INF] * n\n    f = False\n    d = 0\n    for i in range(n):\n        if s[i] == '1':\n            f = True\n            d = 0\n            r[i] = 0\n            k = i - 1\n            while k >= 0 and i - k < r[k]:\n                r[k] = i - k\n                k -= 1\n            if k > 0 and i - k == r[k]:\n                r[k] = INF\n        elif f:\n            d += 1\n            r[i] = d\n    for i in range(n):\n        print('1' if m >= r[i] else '0', end='')\n    print()", "import sys, os.path, math\nfrom collections import defaultdict, deque\nif os.path.exists('amz42.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nfor _ in range(int(input().strip(' '))):\n    (n, k) = [int(x) for x in input().strip(' ').split(' ')]\n    s = [int(x) for x in input().strip(' ')]\n    if 1 not in s:\n        print(*s, sep='')\n        continue\n    f = s.index(1)\n    moves = k\n    i = f - 1\n    while moves > 0 and i >= 0:\n        s[i] = 1\n        i -= 1\n        moves -= 1\n    l = n - s[::-1].index(1) - 1\n    moves = k\n    i = l + 1\n    while moves > 0 and i < n:\n        s[i] = 1\n        i += 1\n        moves -= 1\n    i = f\n    while i < l:\n        while i < l and s[i] == 1:\n            i += 1\n        j = i\n        while j < l and s[j] == 0:\n            j += 1\n        (x, y) = (i, j - 1)\n        moves = k\n        while x < y and moves > 0:\n            s[x] = 1\n            s[y] = 1\n            x += 1\n            y -= 1\n            moves -= 1\n        i = j\n    print(*s, sep='')", "import sys\nlines = [line.rstrip() for line in sys.stdin]\nfor l in range(1, len(lines), 2):\n    nIter = int(lines[l].split()[1])\n    arr = [int(i) for i in list(lines[l + 1])]\n    indices = []\n    for i in range(len(arr)):\n        if arr[i] == 1:\n            indices.append(i)\n    for i in range(len(indices) - 1):\n        mid = (indices[i] + indices[i + 1]) / 2\n        if mid == int(mid):\n            mid = int(mid)\n            arr[mid] = -1\n    for i in range(len(indices)):\n        lo = indices[i] - nIter\n        if i > 0:\n            lo = max(lo, indices[i - 1])\n        lo = max(lo, 0)\n        hi = indices[i] + nIter\n        if i < len(indices) - 1:\n            hi = min(hi, indices[i + 1])\n        hi = min(hi, len(arr) - 1)\n        for j in range(lo, hi + 1):\n            if arr[j] != -1:\n                arr[j] = 1\n    arr = [str(max(i, 0)) for i in arr]\n    print(''.join(arr))", "T = int(input())\nwhile T > 0:\n    T -= 1\n    (n, m) = map(int, input().split())\n    S = input()\n    s = []\n    for c in S:\n        if c == '1':\n            s.append(1)\n        else:\n            s.append(0)\n    ok = False\n    i = 0\n    while i < n:\n        if s[i] == 1:\n            if not ok:\n                j = i - 1\n                cnt = m\n                while cnt > 0 and j >= 0:\n                    s[j] = 1\n                    cnt -= 1\n                    j -= 1\n                ok = True\n            if i == n - 1:\n                break\n            if s[i + 1] == 0:\n                j = i + 1\n                cnt = 0\n                while j < n and s[j] != 1:\n                    cnt += 1\n                    j += 1\n                if j == n:\n                    j = i + 1\n                    cnt = m\n                    while cnt > 0 and j < n:\n                        s[j] = 1\n                        cnt -= 1\n                        j += 1\n                else:\n                    if cnt & 1:\n                        cnt -= 1\n                    M = min(cnt / 2, m)\n                    cnt = M\n                    k = i + 1\n                    while cnt > 0:\n                        s[k] = 1\n                        cnt -= 1\n                        k += 1\n                    cnt = M\n                    k = j - 1\n                    while cnt > 0:\n                        s[k] = 1\n                        cnt -= 1\n                        k -= 1\n                i = j - 1\n        i += 1\n    for i in s:\n        print(i, end='')\n    print()", "for t in range(int(input())):\n    l = list(map(int, input().split()))\n    n = l[0]\n    m = l[1]\n    a = list(input())\n    ar = []\n    for i in a:\n        ar.append(int(i))\n    p1 = 0\n    p2 = 0\n    np1 = 0\n    np2 = 0\n    while p1 < n:\n        if ar[p1] == 1:\n            p1 += 1\n            continue\n        p2 = p1\n        while p2 < n - 1 and ar[p2 + 1] != 1:\n            p2 += 1\n        if p1 == 0 and p2 == n - 1:\n            break\n        if p1 == 0:\n            np2 = p2\n            for i in range(m, 0, -1):\n                if np2 >= 0:\n                    ar[np2] = 1\n                    np2 -= 1\n                else:\n                    break\n        elif p2 == n - 1:\n            np1 = p1\n            for i in range(m, 0, -1):\n                if np1 < n:\n                    ar[np1] = 1\n                    np1 += 1\n                else:\n                    break\n        else:\n            np2 = p2\n            np1 = p1\n            for i in range(m, 0, -1):\n                if np2 >= 0 and np1 < n and (np1 < np2):\n                    ar[np1] = 1\n                    ar[np2] = 1\n                    np1 += 1\n                    np2 -= 1\n                else:\n                    break\n        p1 = p2 + 1\n    for i in ar:\n        print(i, end='')\n    print()", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    x = input()\n    for i in range(min(n, m)):\n        while '101' in x:\n            x = x.replace('101', '1_1')\n        x = x.replace('10', '11')\n        x = x.replace('01', '11')\n    x = x.replace('_', '0')\n    print(x)", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = input()\n    for i in range(min(n, m)):\n        while '101' in s:\n            s = s.replace('101', '1*1')\n        s = s.replace('10', '11')\n        s = s.replace('01', '11')\n    s = s.replace('*', '0')\n    print(s)", "from collections import Counter, deque, defaultdict\nfrom itertools import accumulate, product, groupby\nimport operator\nimport math\nfrom functools import reduce\n\ndef solve():\n    (n, m) = map(int, input().split())\n    s = input()\n    s = '0' + s + '0'\n    for i in range(min(m, n)):\n        while '101' in s:\n            s = s.replace('101', '121')\n        s = s.replace('10', '11')\n        s = s.replace('01', '11')\n    while '121' in s:\n        s = s.replace('121', '101')\n    return s[1:n + 1]\nfor _ in range(int(input())):\n    print(solve())", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    x = input()\n    for i in range(min(n, m)):\n        while '101' in x:\n            x = x.replace('101', '1 1')\n        x = x.replace('10', '11')\n        x = x.replace('01', '11')\n    x = x.replace(' ', '0')\n    print(x)", "r = str.replace\nfor _ in [0] * int(input()):\n    m = min(map(int, input().split()))\n    s = f'0{input()}0'\n    while m:\n        m -= 1\n        s = r(r(r(r(r(s, '100', '1*0'), '001', '0*1'), '*01', '111'), '10*', '111'), '*', '1')\n    print(s[1:-1])", "import math\ntest = 1\ntest = int(input())\nfor tc in range(test):\n    l = list(map(int, input().split()))\n    if l[1] > l[0]:\n        l[1] = l[0]\n    s = input()\n    for i in range(l[1]):\n        while '101' in s:\n            s = s.replace('101', '121')\n        s = s.replace('01', '11')\n        s = s.replace('10', '11')\n    s = s.replace('2', '0')\n    print(s)", "from collections import Counter, defaultdict, deque\nimport math\nimport sys\ninput = sys.stdin.readline\n\ndef solve():\n    (a, b) = [int(x) for x in input().split()]\n    s = [int(x) for x in input().strip()]\n    rec = [10 ** 10] * a\n    cur = 0\n    for i in range(a):\n        if s[i] == 1:\n            rec[i] = 0\n            cur = 1\n        elif cur > 0:\n            rec[i] = cur\n            cur += 1\n    cur = 0\n    for i in range(a - 1, -1, -1):\n        if s[i] == 1:\n            cur = 1\n        elif cur > 0:\n            if rec[i] != cur:\n                rec[i] = min(rec[i], cur)\n            else:\n                rec[i] = 10 ** 10\n            cur += 1\n    for i in range(a):\n        print(1 if rec[i] != 10 ** 10 and rec[i] <= b else 0, end='')\n    print()\ntt = int(input())\nfor test in range(tt):\n    solve()", "I = input\nr = str.replace\nfor _ in [0] * int(I()):\n    m = min(map(int, I().split()))\n    s = '0' + I() + '0'\n    for _ in [0] * m:\n        s = r(r(r(r(r(s, '100', '1*0'), '001', '0*1'), '*01', '111'), '10*', '111'), '*', '1')\n    print(s[1:-1])", "import itertools as it\nimport functools as ft\nimport math as mt\n\ndef get_input():\n    (n, m) = map(int, input().split())\n    s = list(input())\n    indices = []\n    for i in range(n):\n        if s[i] == '1':\n            indices.append(i)\n    return (n, m, s, indices)\ntestcases = int(input())\nwhile testcases > 0:\n    testcases -= 1\n    (n, m, s, indices) = get_input()\n    if len(indices) == 0:\n        pass\n    else:\n        for i in range(len(indices) - 1):\n            steps = min(m, (indices[i + 1] - indices[i] - 1) // 2)\n            ones = ['1'] * steps\n            s[indices[i] + 1:indices[i] + 1 + steps] = ones\n            s[indices[i + 1] - steps:indices[i + 1]] = ones\n        steps = min(m, indices[0])\n        s[indices[0] - steps:indices[0]] = ['1'] * steps\n        steps = min(m, n - indices[-1] - 1)\n        s[indices[-1] + 1:indices[-1] + 1 + steps] = ['1'] * steps\n    print(''.join(s))", "def fun(ls, lt):\n    (n, k) = lt\n    ans = ''\n    count0 = 0\n    count1 = 0\n    first_zeros = 0\n    for i in ls:\n        if i == '0':\n            count0 += 1\n        else:\n            if count1 == 0:\n                first_zeros = count0\n                count0 = 0\n            else:\n                ans += '1'\n                if count0 % 2 == 0:\n                    if count0 > 2 * k:\n                        ans += '1' * k + (count0 - 2 * k) * '0' + '1' * k\n                    else:\n                        ans += '1' * count0\n                    count0 = 0\n                else:\n                    if count0 > 2 * k:\n                        ans += '1' * k + (count0 - 2 * k) * '0' + '1' * k\n                    else:\n                        ans += '1' * (count0 // 2) + '0' + '1' * (count0 // 2)\n                    count0 = 0\n            count1 += 1\n    if count1 > 0:\n        if count0 == 0:\n            ans += '1'\n        elif k >= count0:\n            ans += '1' + '1' * count0\n        else:\n            ans += '1' + '1' * k + '0' * (count0 - k)\n        if k >= first_zeros:\n            ans = '1' * first_zeros + ans\n        else:\n            ans = '0' * (first_zeros - k) + '1' * k + ans\n    else:\n        print('0' * count0)\n        return\n    print(ans)\nT = int(input())\nfor _ in range(T):\n    lt = list(map(int, input().split()))\n    st = input()\n    fun(st, lt)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    x = input()\n    for i in range(min(n, m)):\n        while '101' in x:\n            x = x.replace('101', '1_1')\n        x = x.replace('10', '11')\n        x = x.replace('01', '11')\n    x = x.replace('_', '0')\n    print(x)", "import sys\nMOD = 1000000007\n\ndef inp():\n    return sys.stdin.readline().strip()\n\ndef ii():\n    return int(inp())\n\ndef iis():\n    return [int(i) for i in inp().split()]\n\ndef solve():\n    (n, m) = iis()\n    m = min(n, m)\n    a = inp()\n    for _ in range(m):\n        while '101' in a:\n            a = a.replace('101', '121')\n        a = a.replace('10', '11')\n        a = a.replace('01', '11')\n    a = a.replace('2', '0')\n    return a\nt = ii()\nfor _ in range(t):\n    print(solve())", "t = int(input())\nfor _ in range(t):\n    l = list(map(int, input().split()))\n    s = input()\n    for i in range(min(l[0], l[-1])):\n        while '101' in s:\n            s = s.replace('101', '1_1')\n        s = s.replace('10', '11')\n        s = s.replace('01', '11')\n    s = s.replace('_', '0')\n    print(s)", "from bisect import bisect\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    s = input()\n    arr = list(s)\n    ones = [i for i in range(n) if arr[i] == '1']\n    n1 = len(ones)\n    if n1 == 0:\n        print(s)\n        continue\n    for i in range(n):\n        if arr[i] == '1':\n            continue\n        pos = bisect(ones, i)\n        if pos == n1:\n            if i - ones[pos - 1] <= m:\n                arr[i] = '1'\n        elif pos == 0:\n            if ones[pos] - i <= m:\n                arr[i] = '1'\n        elif ones[pos] - i == i - ones[pos - 1]:\n            continue\n        elif min(ones[pos] - i, i - ones[pos - 1]) <= m:\n            arr[i] = '1'\n    print(''.join(arr))", "from itertools import *\nI = input\nfor _ in [0] * int(I()):\n    m = int(I().split()[1])\n    n = len((a := [[*g] for (k, g) in groupby(I())])) - 1\n    i = a[0][0] > '0'\n    while i <= n:\n        x = a[i]\n        d = min(m, len(x) >> (0 < i < n))\n        if i:\n            x[:d] = []\n            a[i - 1] += ['1'] * d\n        if i < n:\n            x[:d] = []\n            a[i + 1] += ['1'] * d\n        i += 2\n    print(''.join(chain(*a)))", "def sol():\n    (n, m) = [int(x) for x in input().split()]\n    arr = list(input())\n    jedynki = []\n    ile = 0\n    for i in range(n):\n        if int(arr[i]):\n            jedynki.append(i)\n            ile += 1\n    for i in range(ile - 1):\n        p = jedynki[i]\n        q = jedynki[i + 1]\n        x = m\n        while p + 1 != q - 1 and x and (p != q + 1):\n            p += 1\n            q -= 1\n            arr[p] = '1'\n            arr[q] = '1'\n            x -= 1\n    if ile > 0:\n        if jedynki[-1] != n - 1:\n            ind = jedynki[-1] + 1\n            x = m\n            while x and ind < n:\n                arr[ind] = '1'\n                ind += 1\n                x -= 1\n        if jedynki[0] != 0:\n            ind = jedynki[0] - 1\n            x = m\n            while x and ind > -1:\n                arr[ind] = '1'\n                ind -= 1\n                x -= 1\n    print(''.join(arr))\n\ndef main():\n    for i in range(int(input())):\n        sol()\nmain()", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = [int(x) for x in input()]\n    left = []\n    right = []\n    k = -1\n    for i in range(n):\n        if a[i] == 1:\n            k = i\n        left.append(n + 1 if k == -1 else i - k)\n    k = -1\n    for i in range(n - 1, -1, -1):\n        if a[i] == 1:\n            k = i\n        right.insert(0, n + 1 if k == -1 else k - i)\n    for i in range(n):\n        if left[i] != 0 and left[i] == right[i]:\n            a[i] = 0\n        else:\n            a[i] = 1 if min(left[i], right[i]) <= m else 0\n    print(''.join([str(x) for x in a]))", "def first(x, m):\n    l = len(x)\n    if l > m:\n        return '0' * (l - m) + '1' * m\n    else:\n        return '1' * l\n\ndef last(x, m):\n    l = len(x)\n    if l > m:\n        return '1' * m + '0' * (l - m)\n    else:\n        return '1' * l\n\ndef middle(x, m):\n    l = len(x)\n    if l > 2 * m:\n        return '1' * m + '0' * (l - 2 * m) + '1' * m\n    elif l % 2 == 0:\n        return '1' * l\n    else:\n        return '1' * (l // 2) + '0' + '1' * (l // 2)\nt = int(input())\nfor i in range(t):\n    inp = input().split()\n    (n, m, inp) = (int(inp[0]), int(inp[1]), input())\n    inp = inp.split('1')\n    if len(inp) != 1:\n        inp[0] = first(inp[0], m)\n        inp[-1] = last(inp[-1], m)\n        for j in range(1, len(inp) - 1):\n            inp[j] = middle(inp[j], m)\n        print('1'.join(inp))\n    else:\n        print(inp[0])", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    ar = list(map(int, list(input())))\n    p1 = 0\n    while p1 < n:\n        while p1 < n and ar[p1] != 0:\n            p1 += 1\n        p2 = p1\n        while p2 < n - 1 and ar[p2 + 1] != 1:\n            p2 += 1\n        if p1 == 0 and p2 == n - 1:\n            break\n        elif p1 == 0:\n            np2 = p2\n            i = 0\n            while np2 >= 0 and i < m:\n                ar[np2] = 1\n                np2 -= 1\n                i += 1\n        elif p2 == n - 1:\n            np1 = p1\n            i = 0\n            while np1 < n and i < m:\n                ar[np1] = 1\n                np1 += 1\n                i += 1\n        else:\n            np1 = p1\n            np2 = p2\n            i = 0\n            while i < m and np1 < np2:\n                ar[np1] = 1\n                ar[np2] = 1\n                np1 += 1\n                np2 -= 1\n                i += 1\n        p1 = p2 + 1\n    print(''.join(list(map(str, ar))))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    str = input()\n    l = []\n    a = []\n    for i in range(len(str)):\n        if str[i] == '1':\n            l.append(i)\n    if len(l) == 0:\n        print(str)\n    else:\n        g = min(l[0], m)\n        a.append((l[0] - g, max(0, l[0] - 1)))\n        for i in range(len(l) - 1):\n            q = l[i + 1] - 1 - l[i]\n            if q >= 2 * m:\n                a.append((l[i] + 1, l[i] + m))\n                a.append((l[i + 1] - m, l[i + 1] - 1))\n            elif q > 1 and q < 2 * m:\n                if q % 2 == 0:\n                    a.append((l[i] + 1, l[i + 1] - 1))\n                else:\n                    a.append((l[i] + 1, l[i] + q // 2))\n                    a.append((l[i + 1] - q // 2, l[i + 1] - 1))\n        g = min(n - 1 - l[-1], m)\n        a.append((min(l[-1] + 1, n - 1), l[-1] + g))\n        for i in range(len(a)):\n            r = a[i][0]\n            t = a[i][-1]\n            str = str[:r] + '1' * (t - r + 1) + str[t + 1:n]\n        print(str)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    l = list(input())\n    poz = []\n    for x in range(0, n):\n        if l[x] == '1':\n            poz.append(x)\n            for xx in range(x - 1, max(x - m - 1, -1), -1):\n                if l[xx] == '1' or l[xx] == '2':\n                    break\n                l[xx] = '2'\n            for xx in range(x + 1, x + m + 1, +1):\n                if xx == n or l[xx] == '1' or l[xx] == '2':\n                    break\n                l[xx] = '2'\n    for xx in range(0, len(poz) - 1):\n        if (poz[xx] + poz[xx + 1]) % 2 == 0 and l[(poz[xx] + poz[xx + 1]) // 2] != '0':\n            l[(poz[xx] + poz[xx + 1]) // 2] = '0'\n    s_l = ''.join(l).replace('2', '1')\n    print(s_l)", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = input()\n    s = '0' + s + '0'\n    for i in range(min(m, n)):\n        while '101' in s:\n            s = s.replace('101', '121')\n        s = s.replace('10', '11')\n        s = s.replace('01', '11')\n    while '121' in s:\n        s = s.replace('121', '101')\n    print(s[1:n + 1])", "for _ in range(int(input())):\n    (n, t) = map(int, input().split())\n    s = input()\n    for i in range(min(n, t)):\n        s = s.replace('101', '121')\n        s = s.replace('101', '121')\n        s = s.replace('10', '11')\n        s = s.replace('01', '11')\n        s = s.replace('2', '0')\n    print(''.join(s))", "I = input\nr = str.replace\nfor _ in [0] * int(I()):\n    m = min(map(int, I().split()))\n    s = f'0{I()}0'\n    while m:\n        m -= 1\n        s = r(r(r(r(r(s, '100', '1*0'), '001', '0*1'), '*01', '111'), '10*', '111'), '*', '1')\n    print(s[1:-1])", "def p(l):\n    n = len(l)\n    for i in range(n):\n        print(l[i], end='')\nq = int(input())\nfor z in range(q):\n    (n, m) = map(int, input().split())\n    l = input()\n    ar = []\n    for i in range(n):\n        ar = ar + [int(l[i])]\n    i = 0\n    while i < n and ar[i] == 0:\n        i += 1\n    j = i + 1\n    if i >= n:\n        p(ar)\n    elif i > m - 1:\n        ar1 = [0] * (i - m) + [1] * (m + 1)\n        p(ar1)\n    else:\n        ar1 = [1] * (i + 1)\n        p(ar1)\n    while True:\n        while j < n and ar[j] == 0:\n            j += 1\n        if j < n:\n            if j - i - 1 >= 2 * m:\n                ar1 = [1] * m + [0] * (j - i - 2 * m - 1) + [1] * (m + 1)\n                p(ar1)\n            else:\n                k = j - i - 1\n                ar1 = [1] * (k // 2)\n                p(ar1)\n                if k % 2 == 1:\n                    p([0])\n                ar1 = [1] * (k // 2 + 1)\n                p(ar1)\n        else:\n            break\n        i = j\n        j += 1\n    if i >= n:\n        pass\n    elif n - i - 1 >= m:\n        ar1 = [1] * m + [0] * (n - i - m - 1)\n        p(ar1)\n    else:\n        ar1 = [1] * (n - i - 1)\n        p(ar1)\n    print()", "for _ in range(int(input())):\n    (n, t) = map(int, input().split())\n    s = input()\n    for i in range(min(n, t)):\n        s = s.replace('101', '121')\n        s = s.replace('101', '121')\n        s = s.replace('10', '11')\n        s = s.replace('01', '11')\n        s = s.replace('2', '0')\n    print(''.join(s))", "from itertools import *\nI = input\nfor _ in [0] * int(I()):\n    m = int(I().split()[1])\n    n = len((a := [[*g] for (k, g) in groupby(I())])) - 1\n    i = a[0][0] > '0'\n    while i <= n:\n        x = a[i]\n        d = min(m, len(x) >> (0 < i < n))\n        if i:\n            x[:d] = []\n            a[i - 1] += ['1'] * d\n        if i < n:\n            x[:d] = []\n            a[i + 1] += ['1'] * d\n        i += 2\n    print(*chain(*a), sep='')", "t = int(input())\nwhile t:\n    t -= 1\n    (n, m) = map(int, input().split())\n    s = input()\n    ans = []\n    i = 0\n    while i < n and s[i] == '0':\n        i += 1\n        ans.append(0)\n    if i == n:\n        print(s)\n    else:\n        k = min(i, m)\n        while k:\n            ans[i - k] = 1\n            k -= 1\n        j = i\n        ans.append(ord(s[i]) - 48)\n        i += 1\n        while i < n:\n            ans.append(ord(s[i]) - 48)\n            if s[i] != s[i - 1]:\n                if s[i - 1] == '0':\n                    k = min((i - j - 1) // 2, m)\n                    while k:\n                        ans[i - k] = '1'\n                        ans[j + k] = '1'\n                        k -= 1\n                else:\n                    j = i - 1\n            i += 1\n        if s[i - 1] == '0':\n            k = min(i - j - 1, m)\n            while k:\n                ans[j + k] = '1'\n                k -= 1\n        for x in ans:\n            print(x, end='')\n        print()", "q = int(input())\nfor z in range(q):\n    (n, m) = map(int, input().split())\n    l = input()\n    ar = []\n    for i in range(n):\n        ar = ar + [int(l[i])]\n    i = 0\n    while i < n and ar[i] == 0:\n        i += 1\n    j = i + 1\n    if i >= n:\n        ar1 = ar\n    elif i > m - 1:\n        ar1 = [0] * (i - m) + [1] * (m + 1)\n    else:\n        ar1 = [1] * (i + 1)\n    while True:\n        while j < n and ar[j] == 0:\n            j += 1\n        if j < n:\n            if j - i - 1 >= 2 * m:\n                ar1 += [1] * m + [0] * (j - i - 2 * m - 1) + [1] * (m + 1)\n            else:\n                k = j - i - 1\n                ar1 += [1] * (k // 2)\n                if k % 2 == 1:\n                    ar1 += [0]\n                ar1 += [1] * (k // 2 + 1)\n        else:\n            break\n        i = j\n        j += 1\n    if i >= n:\n        pass\n    elif n - i - 1 >= m:\n        ar1 += [1] * m + [0] * (n - i - m - 1)\n    else:\n        ar1 += [1] * (n - i - 1)\n    for i in range(n):\n        print(ar1[i], end='')\n    print('')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = list(input())\n    ans = [0 for i in range(len(s))]\n    max_ = 1000000001\n    i = len(s) - 1\n    while i >= 0:\n        flag = 1\n        if s[i] == '1':\n            ans[i] = 0\n            flag = 0\n        elif i + 1 < len(s):\n            ans[i] = ans[i + 1] + 1\n            flag = 0\n        if flag == 1:\n            ans[i] = max_\n        i -= 1\n    ans1 = [0 for i in range(len(s))]\n    i = 0\n    while i < len(s):\n        flag = 1\n        if s[i] == '1':\n            ans1[i] = 0\n            flag = 0\n        elif i - 1 >= 0:\n            ans1[i] = 1 + ans1[i - 1]\n            flag = 0\n        if flag == 1:\n            ans1[i] = max_\n        i += 1\n    w = ''\n    for i in range(len(s)):\n        if ans[i] == ans1[i] and ans[i] != 0:\n            w += '0'\n        elif min(ans[i], ans1[i]) <= m:\n            w += '1'\n        else:\n            w += '0'\n    print(w)", "for t in range(int(input())):\n    (n, l) = map(int, input().split())\n    s = input()\n    while l > 0 and ('10' in s or '01' in s):\n        while '101' in s:\n            s = s.replace('101', '1_1')\n        s = s.replace('10', '11')\n        s = s.replace('01', '11')\n        l -= 1\n    s = s.replace('_', '0')\n    print(s)", "for _ in range(int(input())):\n    (n, t) = map(int, input().split())\n    s = input()\n    for i in range(min(n, t)):\n        s = s.replace('101', '121')\n        s = s.replace('101', '121')\n        s = s.replace('10', '11')\n        s = s.replace('01', '11')\n        s = s.replace('2', '0')\n    print(''.join(s))", "from collections import deque, defaultdict\nfrom math import sqrt, ceil, factorial, floor, inf, gcd, log\nimport bisect\nimport sys\nimport copy\n\ndef get_array():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef input():\n    return sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    (n, k) = get_ints()\n    s = list(input())\n    arr = ['0'] * n\n    time = [0] * n\n    i = -1\n    while i < n - 1:\n        i += 1\n        if s[i] == '1':\n            arr[i] = '1'\n            j = i - 1\n            t = 1\n            while j >= max(0, i - k):\n                if s[j] == '1':\n                    break\n                if arr[j] == '1' and time[j] == t:\n                    arr[j] = '0'\n                    break\n                if arr[j] == '1' and time[j] < t:\n                    break\n                if arr[j] == '1' and time[j] > t:\n                    time[j] = t\n                arr[j] = '1'\n                time[j] = t\n                t += 1\n                j -= 1\n            t = 1\n            j = i + 1\n            while j < min(i + k + 1, n):\n                if s[j] == '1':\n                    break\n                if arr[j] == '1' and time[j] == t:\n                    s[j] = '0'\n                    break\n                if arr[j] == '1' and time[j] < t:\n                    break\n                if arr[j] == '1' and time[j] > t:\n                    time[j] = t\n                arr[j] = '1'\n                time[j] = t\n                t += 1\n                j += 1\n    print(''.join(arr))", "I = input\nr = str.replace\nfor _ in [0] * int(I()):\n    m = min(map(int, I().split()))\n    s = '0' + I() + '0'\n    for _ in [0] * m:\n        s = r(r(r(r(r(s, '100', '1*0'), '001', '0*1'), '*01', '111'), '10*', '111'), '*', '1')\n    print(s[1:-1])", "I = input\nr = str.replace\nfor _ in [0] * int(I()):\n    (n, m) = map(int, I().split())\n    s = '0' + I() + '0'\n    for _ in [0] * min(m, n):\n        s = r(r(r(r(r(s, '100', '1*0'), '001', '0*1'), '*01', '111'), '10*', '111'), '*', '1')\n    print(s[1:-1])", "I = input\nr = str.replace\nfor _ in [0] * int(I()):\n    m = min(map(int, I().split()))\n    s = f'0{I()}0'\n    while m:\n        m -= 1\n        s = r(r(r(r(r(s, '100', '1*0'), '001', '0*1'), '*01', '111'), '10*', '111'), '*', '1')\n    print(s[1:-1])", "t = int(input())\nfor i in range(t):\n    a = list(map(int, input().split()))\n    c = input()\n    n = a[0]\n    m = a[1]\n    h = []\n    k = 0\n    p = []\n    for j in range(n):\n        p.append(m + 1)\n        if c[j] == '1':\n            h.append(j)\n            p[j] = 0\n    for j in range(n):\n        if k == len(h):\n            break\n        if c[j] == '0':\n            if k == len(h) - 1:\n                p[j] = abs(j - h[k])\n            else:\n                while j > h[k + 1] and k != len(h) - 2:\n                    k = k + 1\n                if h[k] % 2 == 0 and h[k + 1] % 2 == 0 or (h[k] % 2 != 0 and h[k + 1] % 2 != 0):\n                    if j == (h[k] + h[k + 1]) // 2:\n                        p[j] = m + 1\n                        continue\n                e = abs(j - h[k])\n                f = abs(j - h[k + 1])\n                if e > f:\n                    p[j] = f\n                else:\n                    p[j] = e\n    for j in range(n):\n        if p[j] <= m:\n            print(1, end='')\n        else:\n            print(0, end='')\n    print('')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    x = input()\n    for i in range(min(n, m)):\n        while '101' in x:\n            x = x.replace('101', '1_1')\n        x = x.replace('10', '11')\n        x = x.replace('01', '11')\n    x = x.replace('_', '0')\n    print(x)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    x = input()\n    for i in range(min(n, m)):\n        while '101' in x:\n            x = x.replace('101', '1_1')\n        x = x.replace('10', '11')\n        x = x.replace('01', '11')\n    x = x.replace('_', '0')\n    print(x)", "for _ in ' ' * int(input()):\n    (n, m) = map(int, input().split())\n    s = input()\n    for i in range(min(n, m)):\n        while '101' in s:\n            s = s.replace('101', '1_1')\n        s = s.replace('10', '11')\n        s = s.replace('01', '11')\n    s = s.replace('_', '0')\n    print(s)", "for _ in range(0, int(input())):\n    (n, m) = map(int, input().split())\n    s = input()\n    for i in range(0, min(n, m)):\n        x = 1\n        while '101' in s:\n            s = s.replace('101', '1x1')\n        s = s.replace('10', '11')\n        s = s.replace('01', '11')\n        s = s.replace('x', '0')\n    print(s)", "I = input\nr = str.replace\nfor _ in [0] * int(I()):\n    m = min(map(int, I().split()))\n    s = f'0{I()}0'\n    while m:\n        m -= 1\n        s = r(r(r(r(r(s, '100', '1*0'), '001', '0*1'), '*01', '111'), '10*', '111'), '*', '1')\n    print(s[1:-1])", "tcs = int(input())\nfor tc in range(tcs):\n    (n, m) = list(map(int, input().split()))\n    s = input()\n    for i in range(min(n, m)):\n        while '101' in s:\n            s = s.replace('101', '121')\n        s = s.replace('10', '11')\n        s = s.replace('01', '11')\n    while '121' in s:\n        s = s.replace('121', '101')\n    print(s)"]