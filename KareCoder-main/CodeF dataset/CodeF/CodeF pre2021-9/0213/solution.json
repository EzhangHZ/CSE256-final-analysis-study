["t = int(input())\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    k = input()\n    print(n * a + b * n) if b >= 0 else print(n * a + b * (max(k.count('01'), k.count('10')) + 1))", "test = int(input())\nfor _ in range(test):\n    (n, a, b) = map(int, input().split())\n    s = input()\n    print(max(n * (b + a), n * a + b * (max(s.count('01'), s.count('10')) + 1)))", "for i in range(0, int(input())):\n    (n, a, b) = (int(x) for x in input().split())\n    s = input()\n    if b >= 0:\n        print(a * n + b * n)\n    else:\n        print(a * n + b * (max(s.count('01'), s.count('10')) + 1))", "def solve():\n    t = int(input())\n    for _ in range(t):\n        (n, a, b) = [int(x) for x in input().split()]\n        s = input()[:n]\n        k = 0\n        if b >= 0:\n            k = n\n        if b < 0:\n            section_0_num = 0\n            section_1_num = 0\n            last_c = ''\n            for c in s:\n                if c == last_c:\n                    continue\n                last_c = c\n                if c == '0':\n                    section_0_num += 1\n                else:\n                    section_1_num += 1\n            k = max(section_0_num, section_1_num)\n            if section_0_num == section_1_num:\n                k += 1\n        print(a * n + k * b)\nsolve()", "tc = int(input())\nfor _ in range(tc):\n    (n, a, b) = input().split()\n    s = input()\n    n = int(n)\n    a = int(a)\n    b = int(b)\n    if b >= 0:\n        p = n * (a + b)\n        print(p)\n    else:\n        r = s.replace('0', ' ')\n        u = r.split()\n        v = len(u)\n        e = s.replace('1', ' ')\n        f = e.split()\n        g = len(f)\n        if v >= g:\n            k = a * n + (g + 1) * b\n        else:\n            k = a * n + (v + 1) * b\n        print(k)", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    k = input()\n    print(n * a + b * n) if b >= 0 else print(n * a + b * (max(k.count('01'), k.count('10')) + 1))", "for _ in range(int(input())):\n    (n, a, b) = [int(i) for i in input().split()]\n    k = input()\n    print(n * a + b * n) if b >= 0 else print(n * a + b * (max(k.count('01'), k.count('10')) + 1))\narr_inp = lambda : list(map(int, input().split()))\nsp_inp = lambda : map(int, input().split())\nstr_inp = lambda : input()", "for i in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    s = input()\n    if b > 0:\n        print(n * (a + b))\n    else:\n        d = s.count('10') + s.count('01')\n        print((d + 3) // 2 * b + n * a)", "n = int(input())\nres = []\nfor x in range(n):\n    (s, a, b) = list(map(int, input().split()))\n    string = input()\n    if b >= 0:\n        res.append(a * s + b * s)\n    else:\n        cnt = 0\n        if string[0] == '0':\n            cnt = string.count('01')\n        else:\n            cnt = string.count('10')\n        res.append(a * s + b * (cnt + 1))\nfor x in res:\n    print(x)", "t = int(input())\nfor i in range(t):\n    (n, a, b) = [int(j) for j in input().split()]\n    k = input()\n    if b >= 0:\n        print(n * a + b * n)\n    else:\n        print(n * a + b * (max(k.count('01'), k.count('10')) + 1))", "for _ in range(int(input())):\n    (n, a, b) = [int(i) for i in input().split()]\n    k = input()\n    print(n * a + b * n) if b >= 0 else print(n * a + b * (max(k.count('01'), k.count('10')) + 1))", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    s = input()\n    if b < 0:\n        gp0 = s.count('10') + (s[0] == '0')\n        gp1 = s.count('01') + (s[0] == '1')\n        ops = min(gp0, gp1) + 1\n        print(a * n + b * ops)\n    else:\n        print(a * n + b * n)", "for _ in range(int(input())):\n    (n, a, b) = [int(o) for o in input().split()]\n    s = input()\n    if b >= 0:\n        print(n * a + n * b)\n    else:\n        print(n * a + b * (max(s.count('01'), s.count('10')) + 1))", "for _ in range(int(input())):\n    (n, a, b) = [int(o) for o in input().split()]\n    s = input()\n    if b >= 0:\n        print(n * a + n * b)\n    else:\n        print(n * a + b * (max(s.count('01'), s.count('10')) + 1))", "t = int(input())\nfor i in range(t):\n    (n, a, b) = input().split()\n    s = input()\n    n = int(n)\n    a = int(a)\n    b = int(b)\n    if b >= 0:\n        p = n * (a + b)\n        print(p)\n    else:\n        r = s.replace('0', ' ')\n        u = r.split()\n        v = len(u)\n        e = s.replace('1', ' ')\n        f = e.split()\n        g = len(f)\n        if v >= g:\n            k = a * n + (g + 1) * b\n        else:\n            k = a * n + (v + 1) * b\n        print(k)", "for _ in range(int(input())):\n    (n, a, b) = list(map(int, input().split()))\n    s = input()\n    if b >= 0:\n        print(a * n + b * n)\n    else:\n        print(a * n + b * (max(s.count('01'), s.count('10')) + 1))", "for _ in range(int(input())):\n    (n, a, b) = [int(i) for i in input().split()]\n    k = input()\n    if b >= 0:\n        print(n * a + b * n)\n    else:\n        print(n * a + b * (max(k.count('01'), k.count('10')) + 1))", "t = int(input())\nfor dlakfjlkasj in range(t):\n    (n, a, b) = [int(i) for i in input().split()]\n    k = input()\n    if b >= 0:\n        print(n * a + b * n)\n    else:\n        print(n * a + b * (max(k.count('01'), k.count('10')) + 1))", "for _ in range(int(input())):\n    (n, a, b) = [int(i) for i in input().split()]\n    k = input()\n    print(n * a + b * n) if b >= 0 else print(n * a + b * (max(k.count('01'), k.count('10')) + 1))", "def solve(s):\n    seen = s[0]\n    ans = s[0]\n    for i in s[1:]:\n        if i != seen:\n            ans += i\n            seen = i\n    return len(ans)\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    s = input()\n    m = solve(s)\n    ans = n * a + max(n * b, (m // 2 + 1) * b)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, a, b) = [int(x) for x in input().split()]\n    s = input()\n    if b >= 0:\n        res = (a + b) * n\n    else:\n        l1 = s.split('0')\n        l0 = s.split('1')\n        l11 = [x for x in l1 if x != '']\n        l00 = [x for x in l0 if x != '']\n        c1 = len(l11)\n        c0 = len(l00)\n        res = a * n + (min(c1, c0) + 1) * b\n    print(res)", "def readline():\n    return map(int, input().split())\n\ndef solve():\n    (n, a, b) = readline()\n    s = input()\n    if b > 0:\n        print(n * (a + b))\n    else:\n        print(n * a + max(s.count('01'), s.count('10')) * b + b)\n\ndef main():\n    t = int(input())\n    for __ in range(t):\n        solve()\nmain()", "import sys\n\ndef fun(a, b, s, n):\n    if n == 1:\n        return a * 1 + b\n    if b > 0:\n        return (a + b) * n\n    temp = 0\n    pre = s[0]\n    for i in range(1, n):\n        cur = s[i]\n        if cur != pre:\n            temp += 1\n            pre = s[i]\n    temp += 1\n    temp = temp // 2\n    temp += 1\n    return a * n + b * temp\nt = int(sys.stdin.readline())\nfor i in range(t):\n    (n, a, b) = map(int, sys.stdin.readline().split())\n    s = sys.stdin.readline()\n    print(fun(a, b, s, n))", "for t in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    s = input()\n    c = max(s.count('01'), s.count('10')) + 1\n    if b == abs(b):\n        print(a * n + b * n)\n    else:\n        print(a * n + b * c)", "import math\n\ndef max_together(s):\n    a = s[0]\n    c = 0\n    flag = 0\n    for i in s:\n        if i == a:\n            flag = 0\n        elif i != a and flag == 0:\n            c += 1\n            flag = 1\n    return c + 1\ntest = int(input())\nfor _ in range(test):\n    (n, a, b) = map(int, input().split(' '))\n    s = input()\n    n_cost = (a + b) * n\n    o_cost = a * n + b * max_together(s)\n    print(max(n_cost, o_cost))", "t = int(input())\nfor _ in range(t):\n    (l, a, b) = map(int, input().split())\n    s = input()\n    if b >= 0:\n        total = (a + b) * l\n    else:\n        z = s.count('01')\n        o = s.count('10')\n        m = max(z, o) + 1\n        total = a * l + b * m\n    print(total)", "from math import *\nfrom math import factorial as fact, comb as ncr\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom collections import Counter as ctr\nfrom collections import deque as dq\nfrom array import array\nfrom re import search\nli = lambda : list(map(int, input().split()))\narr = lambda a: array('i', a)\nbi = lambda n: bin(n).replace('0b', '')\nyn = lambda f: print('NYOE S'[f::2])\nsbstr = lambda a, s: search('.*'.join(a), s)\n\ndef solve():\n    for _ in range(int(input())):\n        (n, a, b) = li()\n        s = input()\n        ans = n * a\n        if b >= 0:\n            ans += n * b\n        else:\n            ans += b * max(s.count('01') + 1, s.count('10') + 1)\n        print(ans)\nsolve()", "import sys\ninput = sys.stdin.readline\nimport re\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    s = input()[:-1]\n    if b >= 0:\n        print(n * (a + b))\n    else:\n        x = re.sub('1+', 'b', re.sub('0+', 'a', s))\n        y = min(x.count('a'), x.count('b')) + 1\n        print(y * b + a * n)", "def calc():\n    count = 1\n    (n, a, b) = [int(num) for num in input().split(' ')]\n    s = input()\n    for i in range(1, n):\n        if s[i] != s[i - 1]:\n            count += 1\n    count = count // 2 + 1\n    if b >= 0:\n        return (a + b) * n\n    else:\n        return a * n + b * count\ntest_count = int(input())\nfor i in range(test_count):\n    print(calc())", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, a, b) = map(int, input().split())\n    s = input().strip()\n    cnt = 0\n    for i in range(n - 1):\n        if s[i] != s[i + 1]:\n            cnt += 1\n    return a * n + max(((cnt + 1) // 2 + 1) * b, n * b)\nfor _ in range(int(input())):\n    print(solve())", "import math\nk = int(input())\nwhile k:\n    k -= 1\n    (n, a, b) = map(int, input().split())\n    arr = input()\n    if b >= 0:\n        print((a + b) * n)\n        continue\n    else:\n        arr1 = arr.split('0')\n        arr2 = arr.split('1')\n        cnt1 = cnt2 = 0\n        for item in arr1:\n            if item:\n                cnt1 += 1\n        for item in arr2:\n            if item:\n                cnt2 += 1\n        ans = a * n + max((cnt1 + 1) * b, (cnt2 + 1) * b)\n        print(ans)", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    k = input()\n    if b >= 0:\n        print(n * a + b * n)\n    else:\n        print(n * a + b * (max(k.count('01'), k.count('10')) + 1))", "for _ in range(int(input())):\n    (n, a, b) = [int(i) for i in input().split()]\n    k = input()\n    if b >= 0:\n        print(n * a + b * n)\n    else:\n        print(n * a + b * (max(k.count('01'), k.count('10')) + 1))", "def blocks(s):\n    currC = s[0]\n    total_blocks = 1\n    for c in s:\n        if c != currC:\n            total_blocks += 1\n            currC = c\n    return total_blocks\nfor t in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    s = input()\n    m = blocks(s)\n    if b >= 0:\n        print(n * (a + b))\n    else:\n        print(a * n + (m // 2 + 1) * b)", "def min_switches(s):\n    cur = s[0]\n    res = 1\n    for e in s[1:]:\n        if e != cur:\n            res += 1\n            cur = e\n    return res\n\ndef test():\n    (n, a, b) = [int(e) for e in input().split()]\n    s = input()\n    if b >= 0:\n        print(a * n + b * n)\n    else:\n        print(a * n + (min_switches(s) // 2 + 1) * b)\nfor o in range(int(input())):\n    test()", "num_cases = int(input())\n\ndef count_groups(bit_str):\n    curr = bit_str[0]\n    num_groups = 1\n    for i in bit_str:\n        if i != curr:\n            num_groups += 1\n            curr = i\n    return num_groups\nfor _ in range(num_cases):\n    (str_len, a, b) = [int(x) for x in input().split(' ')]\n    bit_str = input()\n    if b >= 0:\n        print(str_len * (a + b))\n    else:\n        print(str_len * a + (count_groups(bit_str) // 2 + 1) * b)", "def count_blocks(s):\n    n_blocks = 0\n    prev = '2'\n    for c in s:\n        if prev != c:\n            n_blocks += 1\n            prev = c\n    return n_blocks\nt = int(input())\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    s = input()\n    n_blocks = count_blocks(s)\n    if b < 0:\n        answer = (n_blocks // 2 + 1) * b + n * a\n    else:\n        answer = n * b + n * a\n    print(answer)", "import sys\nimport math\n\ndef solver(n: int, s: str, f: object, is_cool: bool) -> int:\n    if is_cool:\n        bit = s[0]\n    else:\n        return n * f(1)\n    cur_l = 0\n    sum_l = 0\n    points = 0\n    for c in s:\n        if c != bit:\n            cur_l += 1\n        else:\n            sum_l += 1\n            if cur_l > 0:\n                points += f(cur_l)\n            cur_l = 0\n    if cur_l > 0:\n        points += f(cur_l)\n    if sum_l > 0:\n        points += f(sum_l)\n    return points\n\ndef main():\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        (n, a, b) = list(map(int, sys.stdin.readline().split()))\n        s = sys.stdin.readline().strip()\n        f = lambda l: a * l + b\n        is_cool = b < 0\n        res = solver(n, s, f, is_cool)\n        sys.stdout.write(str(res) + '\\n')\nmain()", "t = int(input())\nfor dlakfjlkasj in range(t):\n    (n, a, b) = [int(i) for i in input().split()]\n    k = input()\n    if b >= 0:\n        print(n * a + b * n)\n    else:\n        print(n * a + b * (max(k.count('01'), k.count('10')) + 1))", "def maxCost(n, a, b, st):\n    count = 1\n    for i in range(n - 1):\n        if st[i] != st[i + 1]:\n            count += 1\n    if b >= 0:\n        return a * n + b * n\n    elif b < 0:\n        if count % 2 == 1:\n            return int(a * n + b * (count + 1) / 2)\n        elif count % 2 == 0:\n            return int(a * n + b * (count + 2) / 2)\narr = []\nfor i in range(int(input())):\n    (n, a, b) = input().split()\n    st = input()\n    arr.append(maxCost(int(n), int(a), int(b), st))\nfor i in arr:\n    print(i)", "def count_blocks(line):\n    current = line[0]\n    blocks = 1\n    for _symbol in line:\n        if _symbol != current:\n            blocks += 1\n            current = _symbol\n    return blocks\nn = int(input())\nfor _ in range(n):\n    (n, a, b) = map(int, input().split())\n    line = input()\n    if b > 0:\n        answer = n * (a + b)\n    else:\n        answer = a * n + b * (1 + count_blocks(line) // 2)\n    print(str(answer))", "mod = 1000000007\nfrom math import factorial, ceil, pow, sqrt\nfrom sys import stdin, stdout\nfrom collections import defaultdict, Counter, deque\nfor _ in range(int(stdin.readline())):\n    (n, a, b) = map(int, stdin.readline().split())\n    s = stdin.readline().strip('\\n')\n    ans = list(s.split('1'))\n    li = list(s.split('0'))\n    x = []\n    y = []\n    for ele in ans:\n        if ele != '':\n            x.append(ele)\n    for ele in li:\n        if ele != '':\n            y.append(ele)\n    p = a * n + b * min(len(x) + 1, len(y) + 1)\n    t = (a + b) * n\n    print(max(t, p))", "trails = int(input())\nanswer_list = []\nfor x in range(trails):\n    numbers = input().split(' ')\n    string = input()\n    lenth = int(numbers[0])\n    a = int(numbers[1])\n    b = int(numbers[2])\n    answer = 0\n    if b > 0 or b == 0:\n        answer = lenth * (a + b)\n    else:\n        answer += lenth * a\n        num_0 = 0\n        num_1 = 0\n        prev = string[0]\n        for d in string:\n            if d != prev:\n                if prev == '1':\n                    num_1 += 1\n                else:\n                    num_0 += 1\n            prev = d\n        if prev == '1':\n            num_1 += 1\n        else:\n            num_0 += 1\n        if num_0 < num_1:\n            answer += b * num_0 + b\n        else:\n            answer += b * num_1 + b\n    answer_list.append(answer)\nfor g in answer_list:\n    print(g)", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    s = input()\n    if b < 0:\n        c0 = s.count('0')\n        c1 = len(s) - c0\n        if s.count('01') > s.count('10'):\n            k = s.count('01')\n            print(a * n + k * b + b)\n        else:\n            k = s.count('10')\n            print(a * n + k * b + b)\n    else:\n        print(len(s) * (a + b))", "for t in range(int(input())):\n    L = [int(x) for x in input().split()]\n    n = L[0]\n    a = L[1]\n    b = L[2]\n    s = input()\n    pts = 0\n    if b >= 0:\n        print((a + b) * n)\n    else:\n        L1 = s.split('0')\n        ch = ' '.join(L1)\n        L1 = ch.split()\n        L0 = s.split('1')\n        ch = ' '.join(L0)\n        L0 = ch.split()\n        if len(L0) > len(L1):\n            pts += a * n + b * (len(L1) + 1)\n        else:\n            pts += a * n + b * (len(L0) + 1)\n        print(pts)", "def total_groups(s):\n    prev = ''\n    count = 0\n    for i in s:\n        if i != prev:\n            prev = i\n            count += 1\n    return count\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    s = input()\n    if b >= 0:\n        print(n * (a + b))\n    else:\n        print(n * a + b * (total_groups(s) // 2 + 1))", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    d = input()\n    if b >= 0:\n        print(n * a + b * n)\n    else:\n        print(n * a + b * (max((d.count('01'), d.count('10'))) + 1))", "for t in range(int(input())):\n    n = input().split()\n    n = [int(x) for x in n]\n    (n, a, b) = n\n    s = input()\n    s1 = s.split('0')\n    s1 = [x for x in s1 if x]\n    s2 = s.split('1')\n    s2 = [x for x in s2 if x]\n    l1 = [len(x) for x in s1]\n    l2 = [len(x) for x in s2]\n    times = int(len(s1 + s2) / 2) + 1\n    if a > 0 and b > 0:\n        print((a + b) * len(s))\n    elif a < 0 and b < 0:\n        print(a * len(s) + b * times)\n    elif a > 0 and b < 0:\n        print(a * len(s) + b * times)\n    elif a < 0 and b > 0:\n        print(a * len(s) + b * len(s))\n    elif b == 0 and a != 0:\n        print(a * len(s))\n    elif a == 0 and b != 0:\n        if b > 0:\n            ans = b * len(s)\n        else:\n            ans = b * times\n        print(ans)\n    elif a == 0 and b == 0:\n        print(0)", "for t in range(int(input())):\n    n = input().split()\n    n = [int(x) for x in n]\n    (n, a, b) = n\n    s = input()\n    s1 = s.split('0')\n    s1 = [x for x in s1 if x]\n    s2 = s.split('1')\n    s2 = [x for x in s2 if x]\n    times = int(len(s1 + s2) / 2) + 1\n    if a > 0 and b > 0:\n        print((a + b) * len(s))\n    elif a < 0 and b < 0:\n        print(a * len(s) + b * times)\n    elif a > 0 and b < 0:\n        print(a * len(s) + b * times)\n    elif a < 0 and b > 0:\n        print(a * len(s) + b * len(s))\n    elif b == 0 and a != 0:\n        print(a * len(s))\n    elif a == 0 and b != 0:\n        if b > 0:\n            ans = b * len(s)\n        else:\n            ans = b * times\n        print(ans)\n    elif a == 0 and b == 0:\n        print(0)", "def solve():\n    (n, a, b) = [int(x) for x in input().split()]\n    s = list(input())\n    if b > 0:\n        return n * (a + b)\n    (groups, prev) = (0, None)\n    for i in s:\n        if prev is None:\n            groups = 1\n        elif i == prev:\n            continue\n        else:\n            groups += 1\n        prev = i\n    groups_of_one_color = groups // 2\n    return n * a + b * (groups_of_one_color + 1)\nfor _ in range(int(input())):\n    print(solve())", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    s = input()\n    if b >= 0:\n        print((a + b) * n)\n    else:\n        z1 = s.count('01')\n        z2 = s.count('10')\n        z = max(z1, z2) + 1\n        print(n * a + b * z)", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    s = input()\n    x = list((i for i in s.split('0') if len(i)))\n    y = list((i for i in s.split('1') if len(i)))\n    print(n * a + max(n * b, ((len(x) + len(y)) // 2 + 1) * b))", "n = int(input())\ni = 0\nwhile i < n:\n    (t, a, b) = map(int, input().split())\n    s = input()\n    if b >= 0:\n        print(a * t + b * t)\n    else:\n        print(t * a + b * (max((s.count('01'), s.count('10'))) + 1))\n    i += 1", "for _ in range(int(input())):\n    (n, a, b) = [int(i) for i in input().split()]\n    k = input()\n    print(n * a + b * n) if b >= 0 else print(n * a + b * (max(k.count('01'), k.count('10')) + 1))", "def grup(l):\n    count = 0\n    j = l[0]\n    for i in range(len(l)):\n        if l[i] != j:\n            count = count + 1\n            j = l[i]\n    return count + 1\nfor i in range(int(input())):\n    (n, a, b) = map(int, input().split(' '))\n    s = input()\n    if b < 0:\n        k = grup(s)\n        ans = n * a + b * (k // 2 + 1)\n    else:\n        ans = n * (a + b)\n    print(ans)", "for i in range(int(input())):\n    (n, a, b) = [int(i) for i in input().split()]\n    k = input()\n    if b >= 0:\n        print(n * a + n * b)\n    else:\n        c = max(k.count('01'), k.count('10')) + 1\n        print(a * n + c * b)", "for _ in range(int(input())):\n    (n, a, b) = [int(j) for j in input().split()]\n    k = input()\n    if b >= 0:\n        print(n * a + b * n)\n    else:\n        print(n * a + b * (max(k.count('01'), k.count('10')) + 1))", "t = int(input())\nfor i in range(t):\n    (n, a, b) = (int(l) for l in input().split())\n    s = input()\n    z = a * len(s)\n    if b >= 0:\n        z += b * len(s)\n    else:\n        q = s.count('10')\n        p = s.count('01')\n        z += b * (p + 1) * (p >= q) + b * (q + 1) * (p < q)\n    print(z)", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    s = input()\n    if b >= 0:\n        print(a * n + b * n)\n    else:\n        print(a * n + b * (max(s.count('01'), s.count('10')) + 1))", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().strip().split())\n    s = input()\n    print(n * a + n * b if b >= 0 else n * a + b * (max(s.count('01'), s.count('10')) + 1))", "for _ in range(int(input())):\n    (n, a, b) = [int(i) for i in input().split()]\n    k = input()\n    if b >= 0:\n        print(n * a + b * n)\n    else:\n        print(n * a + b * (max(k.count('01'), k.count('10')) + 1))", "for _ in range(int(input())):\n    (n, a, b) = [int(i) for i in input().split()]\n    k = input()\n    if b >= 0:\n        print(n * a + b * n)\n    else:\n        print(n * a + b * (max(k.count('01'), k.count('10')) + 1))", "for _ in range(int(input())):\n    (n, a, b) = [int(i) for i in input().split()]\n    k = input()\n    if b >= 0:\n        print(n * a + b * n)\n    else:\n        print(n * a + b * (max(k.count('01'), k.count('10')) + 1))", "from math import gcd\nt = int(input())\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    s = input()\n    if b > 0:\n        print(a * n + b * n)\n    else:\n        mini = max(s.count('01') + 1, s.count('10') + 1)\n        ans = mini * b\n        print(a * n + ans)", "for _ in range(int(input())):\n    (n, a, b) = [int(o) for o in input().split()]\n    s = input()\n    if b >= 0:\n        print(n * a + n * b)\n    else:\n        print(n * a + b * (max(s.count('01'), s.count('10')) + 1))", "for _ in range(int(input())):\n    (n, a, b) = [int(i) for i in input().split()]\n    k = input()\n    print(n * a + b * n) if b >= 0 else print(n * a + b * (max(k.count('01'), k.count('10')) + 1))", "def one_zero(st, a, b):\n    if b >= 0:\n        return (a + b) * len(st)\n    num = 1\n    for i in range(1, len(st)):\n        if st[i] != st[i - 1]:\n            num += 1\n    return (num // 2 + 1) * b + a * len(st)\nt = int(input())\nfor i in range(t):\n    p = input().split()\n    st = input()\n    print(one_zero(st, int(p[1]), int(p[2])))", "t = int(input())\nans = []\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    s = input()\n    if b >= 0:\n        ans.append(str((a + b) * n))\n        continue\n    s += '!'\n    sum = 0\n    for i in range(n):\n        if s[i] != s[i + 1]:\n            sum += 1\n    ans.append(str(a * n + b * (sum // 2 + 1)))\nprint('\\n'.join(ans))", "x = int(input())\nfor i in range(x):\n    (n, a, b) = input().split()\n    x = input()\n    n = int(n)\n    a = int(a)\n    b = int(b)\n    if b >= 0:\n        print(a * n + n * b)\n    else:\n        zero = x.split('0')\n        one = x.split('1')\n        count = 0\n        for k in zero:\n            if k != '':\n                count += 1\n        for ll in one:\n            if ll != '':\n                count += 1\n        if count < 3:\n            print(a * n + b * count)\n        else:\n            print(a * n + b * (count // 2 + 1))", "def solve():\n    (n, a, b) = map(int, input().split())\n    binary = list(input())\n    ans = 0\n    if b >= 0:\n        ans = len(binary) * a + b * len(binary)\n    else:\n        lst = []\n        temp_str = binary[0]\n        temp = binary[0]\n        for i in range(1, len(binary)):\n            if binary[i] == temp:\n                temp_str += binary[i]\n            else:\n                lst.append(temp_str)\n                temp = binary[i]\n                temp_str = binary[i]\n        lst.append(temp_str)\n        ans = a * len(binary) + b * (len(lst) // 2 + 1)\n    print(ans)\nfor i in range(int(input())):\n    solve()", "def numOfBlocks(s, n):\n    if n == 1:\n        return 1\n    else:\n        b = 1\n        for i in range(len(s) - 1):\n            if s[i] != s[i + 1]:\n                b += 1\n        return b\ntcs = int(input())\nfor i in range(tcs):\n    (n, a, b) = [int(x) for x in input().split()]\n    s = input()\n    m = numOfBlocks(s, n)\n    if b > 0:\n        print(a * n + b * n)\n    else:\n        print(a * n + (int(m / 2) + 1) * b)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    s = input()\n    if b >= 0:\n        print(n * a + n * b)\n    else:\n        c = 1\n        x = s[0]\n        v = True\n        for i in range(n):\n            if s[i] == x:\n                continue\n            else:\n                c = c + 1\n                x = s[i]\n        k = c // 2\n        print(n * a + (k + 1) * b)", "import re\nfor _ in range(0, int(input())):\n    (n, a, b) = map(int, input().split())\n    v = input()\n    oc = v.count('1')\n    zc = len(v) - oc\n    if b >= 0:\n        print(b * n + a * n)\n    else:\n        m = len(re.findall('1+', v)) + len(re.findall('0+', v))\n        print(a * n + b * (m // 2 + 1))", "def slove():\n    (n, a, b) = [int(x) for x in input().split(' ')]\n    s = input()\n    dem = 1\n    for i in range(1, len(s)):\n        if s[i] != s[i - 1]:\n            dem += 1\n    res = a * len(s) + (dem // 2 + 1) * b\n    res1 = a * len(s) + b * len(s)\n    print(max(res, res1))\nt = int(input())\nwhile t > 0:\n    slove()\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (n, a, b) = map(int, input().split())\n    s = input()\n    count = n * a\n    r = 0\n    if b >= 0:\n        count += n * b\n    else:\n        r = 1\n        for k in range(1, len(s)):\n            if s[k] != s[k - 1]:\n                r += 1\n        count += (r // 2 + 1) * b\n    print(count)", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    s = input()\n    c = 0\n    s1 = ''\n    for i in s:\n        if i != s1:\n            c += 1\n            s1 = i\n    n1 = c // 2 + 1\n    print(n * a + max(n1 * b, n * b))", "import math\nt = int(input())\nfor __ in range(t):\n    (n, a, b) = map(int, input().split())\n    s = input()\n    if b > 0:\n        print(n * (a + b))\n    else:\n        j = s[0]\n        count = 1\n        for i in s:\n            if j != i:\n                count += 1\n                j = i\n        print(n * a + b * ((count + 2) // 2))", "from math import ceil, sqrt\nt = int(input())\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    s = input()\n    pt = 1\n    cp = s[0]\n    for c in s:\n        if c != cp:\n            pt += 1\n            cp = c\n    if b > 0:\n        print((a + b) * len(s))\n    else:\n        print(a * len(s) + b * ceil((pt + 1) / 2))", "t = int(input())\nresults = []\nfor i in range(t):\n    (n, a, b) = map(int, input().split())\n    digits = input()\n    if b > 0:\n        results.append(n * (a + b))\n        continue\n    current = None\n    count = 0\n    for j in range(n):\n        if current != digits[j]:\n            count += 1\n            current = digits[j]\n    results.append(n * a + b * (count // 2 + 1))\nfor i in range(t):\n    print(results[i])", "def solve(n, a, b, s):\n    if b >= 0:\n        ans = n * (a + b)\n        print(ans)\n        return\n    ans = n * a\n    final = [s[0]]\n    current = s[0]\n    for i in range(1, n):\n        if s[i] != current:\n            current = s[i]\n            final.append(current)\n    req = (len(final) // 2 + 1) * b\n    print(ans + req)\nT = int(input())\nwhile T:\n    (n, a, b) = [int(x) for x in input().split()]\n    s = input()\n    solve(n, a, b, s)\n    T -= 1", "def ans(n, a, b, s):\n    if b >= 0:\n        return n * (a + b)\n    n_1 = 0\n    n_0 = 0\n    x = s[0]\n    if x == '0':\n        flag = 0\n    else:\n        flag = 1\n    z = 0\n    switch = 1\n    for i in range(1, n):\n        if flag == 0 and s[i] == '1':\n            flag = 1\n            switch += 1\n        elif flag == 1 and s[i] == '0':\n            flag = 0\n            switch += 1\n    if switch % 2 == 0:\n        switch += 1\n    z = a * n + (switch + 1) // 2 * b\n    return z\nm = int(input())\nfor i in range(m):\n    arr = input().split()\n    n = int(arr[0])\n    a = int(arr[1])\n    b = int(arr[2])\n    s = input()\n    print(ans(n, a, b, s))", "for q in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    s = input()\n    zcount = len(list(filter(None, s.split('1'))))\n    ncount = len(list(filter(None, s.split('0'))))\n    count = min(zcount, ncount) + 1\n    if b > 0:\n        print(n * (a + b))\n    else:\n        print(n * a + count * b)", "import sys\nimport math\n\ndef solve(s, n, a, b):\n    ans = 0\n    subs = []\n    cur = s[0]\n    j = 0\n    for i in range(n):\n        if s[i] == cur:\n            j += 1\n        else:\n            subs.append(j)\n            cur = s[i]\n            j = 1\n    subs.append(j)\n    if b < 0:\n        n2 = len(subs) // 2 + 1\n        ans = n * a + n2 * b\n    else:\n        ans = n * (a + b)\n    return ans\nt = int(input())\nfor i in range(t):\n    [n, a, b] = [int(x) for x in input().split()]\n    s = input()\n    print(solve(s, n, a, b))", "t = int(input())\nfor i in range(t):\n    (n, a, b) = map(int, input().split())\n    s = input()\n    if b >= 0:\n        print((a + b) * n)\n    else:\n        seq = 0\n        cnt = 0\n        init_c = s[0]\n        for c in s:\n            if c != init_c:\n                seq += 1\n            elif seq > 0:\n                cnt += 1\n                seq = 0\n        if s[-1] != init_c:\n            cnt += 1\n        print(a * n + b * (cnt + 1))", "def varr(k):\n    u = 1\n    u1 = k[0]\n    for m in k:\n        if m != u1:\n            u += 1\n        else:\n            continue\n        u1 = m\n    if u == 1:\n        return 1\n    else:\n        return u // 2 + 1\nt = int(input())\nfor r in range(t):\n    (n, a, b) = input().split()\n    l = input()\n    n = int(n)\n    a = int(a)\n    b = int(b)\n    if b > 0:\n        print((a + b) * n)\n    else:\n        print(a * n + varr(l) * b)", "def solve(a, b, n, s):\n    ans = 0\n    to_find = str(1 - int(s[0]))\n    firssst = 1\n    sssecond = 0\n    if s.find(to_find) >= 1:\n        for i in range(1, n):\n            if s[i] != to_find:\n                firssst += 1\n                if sssecond:\n                    ans += a * sssecond + b\n                sssecond = 0\n            else:\n                sssecond += 1\n                if i == n - 1:\n                    ans += a * sssecond + b\n        ans += a * firssst + b\n        print(ans)\n    else:\n        print(a * n + b)\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    s = input()\n    if a == 0:\n        if b > 0:\n            print(b * n)\n        elif b == 0:\n            print(0)\n        else:\n            solve(a, b, n, s)\n    elif a > 0:\n        if b > 0:\n            print(a * n + b * n)\n        elif b == 0:\n            print(a * n)\n        else:\n            solve(a, b, n, s)\n    elif b > 0:\n        print(a * n + b * n)\n    else:\n        solve(a, b, n, s)", "t = int(input())\nfor i in range(t):\n    count = 0\n    (n, a, b) = map(int, input().split())\n    f = input()\n    lz = f[0]\n    count = 1\n    for z in f:\n        if z != lz:\n            count += 1\n            lz = z\n    print(max(n * (a + b), a * n + b * (count // 2 + 1)))", "def max_cost_deletion(n, a, b, string):\n    points = 0\n    if b >= 0:\n        points += n * a + n * b\n    elif b < 0:\n        count = 1\n        for i in range(1, len(string)):\n            if string[i] != string[i - 1]:\n                count += 1\n        points += n * a + (count // 2 + 1) * b\n    return points\nt = int(input())\nfor i in range(t):\n    (n, a, b) = input().split()\n    (n, a, b) = (int(n), int(a), int(b))\n    string = input()\n    print(max_cost_deletion(n, a, b, string))", "def solve(a, b, n, s):\n    if b >= 0:\n        print(n * (a + b))\n    else:\n        result = n * a\n        temp = s[0]\n        count = 1\n        for x in range(1, n):\n            if temp != s[x]:\n                temp = s[x]\n                count += 1\n        result += (count // 2 + 1) * b\n        print(result)\nfor _ in range(int(input())):\n    (n, a, b) = list(map(int, input().split()))\n    s = input()\n    solve(a, b, n, s)", "def deletion(n, a, b, l):\n    if b >= 0:\n        return (a + b) * n\n    else:\n        m = []\n        iorg = 0\n        x = l[iorg]\n        count = 0\n        for i in range(0, n, 1):\n            if l[i] == x:\n                count = count + 1\n            else:\n                m.append((x, iorg, count))\n                iorg = i\n                x = l[iorg]\n        m.append((x, iorg, count))\n        return a * n + b * (len(m) // 2 + 1)\nx = int(input())\nm = []\nfor i in range(x):\n    y = input()\n    z = input()\n    y1 = y.split(' ')\n    y2 = [int(t) for t in y1]\n    m.append((y2, z))\nfor j in range(x):\n    print(deletion(m[j][0][0], m[j][0][1], m[j][0][2], m[j][1]))", "import math\n\ndef minDel(x):\n    c = x[0]\n    p = 0\n    for d in x:\n        p = p + (d != c)\n        c = d\n    return 1 + math.ceil(p / 2)\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    k = input()\n    s = minDel(k)\n    print(max(a * n + b * s, a * n + b * n))", "t = int(input())\n\ndef solve():\n    (n, a, b) = map(int, input().split())\n    s = input()\n    segs = []\n    run = 1\n    curr = s[0]\n    for i in range(1, len(s)):\n        if curr == s[i]:\n            run += 1\n        else:\n            segs.append(run)\n            run = 1\n            curr = s[i]\n    segs.append(run)\n    if b >= 0:\n        print(int(len(s) * a + len(s) * b))\n    else:\n        ans = len(s) * a\n        ans += len(segs) // 2 * b\n        ans += b\n        print(int(ans))\nfor i in range(t):\n    solve()", "def countMax(s):\n    if len(s) == 1:\n        return 1\n    else:\n        res = 1\n        for i in range(1, len(s)):\n            if s[i] != s[i - 1]:\n                res += 1\n        if s[0] == s[-1]:\n            return (res + 1) // 2\n        else:\n            return res // 2 + 1\nt = int(input())\nfor i in range(t):\n    (n, a, b) = [int(x) for x in input().split()]\n    s = input()\n    if a == 0:\n        if b <= 0:\n            print(b * countMax(s))\n        else:\n            print(b * n)\n    elif a < 0:\n        if b < 0:\n            print(a * n + b * countMax(s))\n        elif b == 0:\n            print(a * n)\n        else:\n            print(a * n + b * n)\n    elif b < 0:\n        print(a * n + b * countMax(s))\n    elif b == 0:\n        print(a * n)\n    else:\n        print(a * n + b * n)", "def Maximum_deletion(s, n, a, b):\n    res = 1\n    for i in range(1, len(s)):\n        if s[i] != s[i - 1]:\n            res += 1\n    if b >= 0:\n        return n * (a + b)\n    else:\n        return n * a + (res // 2 + 1) * b\nt = int(input())\nfor _ in range(t):\n    (n, a, b) = list(map(int, input().split()))\n    s = input()\n    print(Maximum_deletion(s, n, a, b))", "import math\nnt = int(input())\nans = []\n\ndef soln(s, n, a, b):\n    ones = 0\n    zeros = 0\n    if s[-1] == '1':\n        ones = 1\n    else:\n        zeros = 1\n    for x in range(n - 1):\n        if s[x] == '0' and s[x + 1] == '1':\n            zeros = zeros + 1\n        if s[x] == '1' and s[x + 1] == '0':\n            ones = ones + 1\n    if b < 0:\n        return a * n + (min(ones, zeros) + 1) * b\n    else:\n        return n * (a + b)\nfor x in range(nt):\n    inp = list(map(int, input().split()))\n    n = inp[0]\n    a = inp[1]\n    b = inp[2]\n    s = input()\n    ans.append(soln(list(s), n, a, b))\nfor x in ans:\n    print(x)", "t = int(input())\nfor tc in range(t):\n    (n, a, b) = map(int, input().split())\n    s = input()\n    ok = 0\n    ct = 1\n    for i in range(0, len(s) - 1):\n        if s[i] != s[i + 1]:\n            ct += 1\n    val = ct // 2 + 1\n    print(max(n * a + val * b, n * a + n * b))", "t = int(input())\nres = []\nfor i in range(t):\n    (n, a, b) = [int(i) for i in input().split()]\n    s = input()\n    count = 1\n    for i in range(1, n):\n        if s[i] != s[i - 1]:\n            count += 1\n    score = max(n * (a + b), n * a + (1 + count // 2) * b)\n    res.append(score)\nfor el in res:\n    print(el)", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = list(map(int, input().split()))\n    s = input()\n    if b >= 0:\n        print((a + b) * n)\n    else:\n        kol = 0\n        for i in range(1, n):\n            if s[i] != s[i - 1]:\n                kol += 1\n        print(n * a + ((kol + 1) // 2 + 1) * b)", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = list(map(int, input().split()))\n    s = input()\n    if b >= 0:\n        print((a + b) * n)\n    else:\n        kol = 0\n        for i in range(1, n):\n            if s[i] != s[i - 1]:\n                kol += 1\n        print(n * a + ((kol + 1) // 2 + 1) * b)"]