["import sys\ninput = iter(sys.stdin.read().splitlines()).__next__\nsys.setrecursionlimit(10000)\nTC = int(input())\nA = [tuple(map(int, input().split())) for _ in range(TC)]\nres = ['%s' % ((x2 - x1) * (y2 - y1) + 1) for (x1, y1, x2, y2) in A]\nprint('\\n'.join(res))", "import sys\ninput = sys.stdin.readline\nT = int(input())\nfor _ in range(T):\n    (x1, y1, x2, y2) = map(int, input().split())\n    (x, y) = (x2 - x1, y2 - y1)\n    print(x * y + 1)", "def main():\n    from sys import stdin\n    from sys import stdout\n    input = stdin.readline\n    print = stdout.write\n    t = int(input())\n    for test_ix in range(1, t + 1):\n        (x1, y1, x2, y2) = list(map(int, input().split()))\n        print('{0}\\n'.format((x2 - x1) * (y2 - y1) + 1))\nmain()", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    a = [int(i) for i in input().split()]\n    (x1, y1, x2, y2) = (a[0], a[1], a[2], a[3])\n    if x1 == x2 or y1 == y2:\n        print(1)\n        continue\n    x = x2 - x1\n    y = y2 - y1\n    print(x * y + 1)", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    test = int(input())\n    for _ in range(test):\n        (x1, y1, x2, y2) = map(int, input().split())\n        ans = (x2 - x1) * (y2 - y1) + 1\n        print(ans)\nmain()", "(T, *I) = map(int, open(0).read().split())\nfor (x1, y1, x2, y2) in zip(*[iter(I)] * 4):\n    a = x2 - x1\n    b = y2 - y1\n    print(a * b + 1)", "import sys\nreadline = sys.stdin.readline\nns = lambda : readline().rstrip()\nni = lambda : int(readline().rstrip())\nnm = lambda : map(int, readline().split())\nnl = lambda : list(map(int, readline().split()))\n\ndef solve():\n    (p, q, r, s) = nm()\n    y = r - p\n    x = s - q\n    print(y * x + 1)\n    return\nT = int(input())\nfor _ in range(T):\n    solve()", "import math\nt = int(input())\nans = []\nfor x in range(t):\n    inp = list(map(int, input().split()))\n    (x1, y1, x2, y2) = (inp[0], inp[1], inp[2], inp[3])\n    ans.append((x2 - x1) * (y2 - y1) + 1)\nfor a in ans:\n    print(a)", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    print((x2 - x1) * (y2 - y1) + 1)", "import sys\nfor t in range(int(sys.stdin.readline())):\n    (x1, y1, x2, y2) = map(int, sys.stdin.readline().split())\n    (x, y) = (x2 - x1, y2 - y1)\n    if 0 in (x, y):\n        sys.stdout.write(f'{1}\\n')\n    else:\n        sys.stdout.write(f'{x * y + 1}\\n')", "from sys import stdin\nt = int(stdin.readline())\nfor _ in range(t):\n    line = stdin.readline()\n    (x1, y1, x2, y2) = map(int, line.split())\n    print((x2 - x1) * (y2 - y1) + 1)", "for s in [*open(0)][1:]:\n    (u, v, x, y) = map(int, s.split())\n    print((x - u) * (y - v) + 1)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef foo():\n    (x1, y1, x2, y2) = invr()\n    ans = (x2 - x1) * (y2 - y1) + 1\n    print(ans)\nt = inp()\nfor i in range(t):\n    foo()", "import sys\nimport math\n\ndef get_array():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef input():\n    return sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    (x1, y1, x2, y2) = get_ints()\n    print((x2 - x1) * (y2 - y1) + 1)", "import sys\nsys.setrecursionlimit(10 ** 8)\nni = lambda : int(sys.stdin.readline())\nnm = lambda : map(int, sys.stdin.readline().split())\nnl = lambda : list(nm())\nns = lambda : sys.stdin.readline().rstrip()\n\ndef main():\n    T = ni()\n    for _ in range(T):\n        (x1, y1, x2, y2) = nm()\n        print((x2 - x1) * (y2 - y1) + 1)\nmain()", "import sys, math, collections\ninput = sys.stdin.readline\nfor i in range(int(input())):\n    (a, b, c, d) = map(int, input().split())\n    print((c - a) * (d - b) + 1)", "from collections import Counter, defaultdict, deque\nfrom math import *\nimport sys\ninput = sys.stdin.readline\n\ndef solve():\n    (x1, y1, x2, y2) = [int(x) for x in input().split()]\n    dx = x2 - x1\n    dy = y2 - y1\n    print(dx * dy + 1)\ntt = int(input())\nfor test in range(tt):\n    solve()", "import math\ntest_num = int(input())\nvalues = []\nfor i in range(test_num):\n    y = input()\n    z = [int(x) for x in y.split(' ')]\n    values.append(z)\nfor i in range(test_num):\n    v = values[i]\n    deno1 = abs(v[1] - v[3])\n    deno2 = abs(v[0] - v[2])\n    print(deno1 * deno2 + 1)", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    (xx, yy) = (x2 - x1, y2 - y1)\n    print(xx * yy + 1)", "import sys\ninput = sys.stdin.readline\nimport math\nfor _ in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    n = x2 - x1\n    m = y2 - y1\n    print(n * m + 1)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    (x1, y1, x2, y2) = map(int, input().split())\n    print((x2 - x1) * (y2 - y1) + 1)", "import sys\nfile_name = ''\nif file_name:\n    f = open(file_name, 'r')\nelse:\n    f = sys.stdin\nline = f.readline()\nt = int(line)\nfor _ in range(t):\n    (x1, y1, x2, y2) = [int(x) for x in f.readline().split()]\n    a = x2 - x1\n    b = y2 - y1\n    print(a * b + 1)", "import sys\nimport math\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    s = list(s[:len(s)])\n    if s[-1] == '\\n':\n        del s[-1]\n    return s\n\ndef invr():\n    return map(int, input().split())\n\ndef f(points):\n    (x1, y1, x2, y2) = points\n    return (x2 - x1) * (y2 - y1) + 1\nt = inp()\nresult = []\nfor i in range(t):\n    points = inlt()\n    result.append(f(points))\nfor i in range(t):\n    print(result[i])", "from sys import stdin, stderr\n\ndef rl():\n    return [int(w) for w in stdin.readline().split()]\n(t,) = rl()\nfor _ in range(t):\n    (x1, y1, x2, y2) = rl()\n    dx = x2 - x1\n    dy = y2 - y1\n    print(dx * dy + 1)", "from sys import stdin, stdout\nt = int(stdin.readline())\nfor _ in range(t):\n    (x1, y1, x2, y2) = map(int, stdin.readline().split())\n    y = abs(y1 - y2)\n    x = abs(x1 - x2)\n    x = x * y + 1\n    print(x)", "import sys\ninput = sys.stdin.readline\nI = lambda : list(map(int, input().split()))\nfor _ in range(int(input())):\n    (x, y, a, b) = I()\n    (n, m) = (a - x + 1, b - y + 1)\n    print((n - 1) * (m - 1) + 1)", "t = int(input())\ntests = []\nfor i in range(t):\n    xy = [int(el) for el in input().split()]\n    tests.append(xy)\nfor i in range(t):\n    (x1, y1) = (tests[i][0], tests[i][1])\n    (x2, y2) = (tests[i][2], tests[i][3])\n    distX = x2 - x1\n    distY = y2 - y1\n    if distX == 0 or distY == 0:\n        print(1)\n    else:\n        totalDPaths = distX * distY + 1\n        print(totalDPaths)", "import sys\nimport math\n\ndef I():\n    return int(sys.stdin.readline())\n\ndef IL():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef ILS():\n    return list(map(str, sys.stdin.readline().strip().split()))\nt = I()\nfor iii in range(t):\n    (x1, y1, x2, y2) = IL()\n    x = x2 - x1\n    y = y2 - y1\n    ans = x * y + 1\n    print(ans)\n    pass", "import sys\nimport math\nimport collections\nfrom sys import stdin, stdout, setrecursionlimit\nimport bisect as bs\nsetrecursionlimit(2 ** 20)\nM = 10 ** 9 + 7\nT = int(stdin.readline())\nfor _ in range(T):\n    (x1, y1, x2, y2) = list(map(int, stdin.readline().split()))\n    ans = 1\n    ans += (x2 - x1) * (y2 - y1)\n    print(ans)", "import sys\nsys.setrecursionlimit(10 ** 5)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\n\ndef main():\n    for _ in range(II()):\n        (x1, y1, x2, y2) = MI()\n        n = x2 - x1 + 1\n        m = y2 - y1 + 1\n        if n > m:\n            (n, m) = (m, n)\n        ans = (n - 2) * (n - 1) + (n - 1) * (m - n + 1) + 1\n        print(ans)\nmain()", "from collections import Counter\nimport math\nimport sys\nfrom bisect import bisect, bisect_left, bisect_right\n\ndef input():\n    return sys.stdin.readline().strip()\n\ndef INT():\n    return int(input())\n\ndef MAP():\n    return map(int, input().split())\n\ndef LIST(N=None):\n    return list(MAP()) if N is None else [INT() for i in range(N)]\n\ndef mod():\n    return 10 ** 9 + 7\nfor _ in range(INT()):\n    (x1, y1, x2, y2) = MAP()\n    n = x2 - x1\n    m = y2 - y1\n    print(m * n + 1)", "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10 ** 6)\n    t = int(input())\n    for _ in range(t):\n        (x1, y1, x2, y2) = [int(x) for x in input().strip().split()]\n        (dx, dy) = (max(x2 - x1, y2 - y1), min(x2 - x1, y2 - y1))\n        print((x2 - x1) * (y2 - y1) + 1)\nmain()", "import bisect\nimport sys\ninput = sys.stdin.readline\nfrom collections import defaultdict\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef solve(case):\n    [x1, y1, x2, y2] = inlt()\n    return (y2 - y1) * (x2 - x1) + 1\nT = inp()\nfor i in range(T):\n    res = solve(i + 1)\n    print(str(res))", "a = int(input())\nstore = [1] * a\nfor i in range(a):\n    b = input()\n    c = [int(x) for x in b.split()]\n    store[i] = (c[2] - c[0]) * (c[3] - c[1]) + 1\nfor i in range(a):\n    print(store[i])", "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10 ** 6)\n    t = int(input())\n    for _ in range(t):\n        (x1, y1, x2, y2) = [int(x) for x in input().strip().split()]\n        (dx, dy) = (max(x2 - x1, y2 - y1), min(x2 - x1, y2 - y1))\n        delta = dy * (dx - dy + 1) + (dy - 1) * dy\n        print(delta + 1)\nmain()", "import math\nimport sys\nfrom sys import stdin\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (x1, y1, x2, y2) = [int(j) for j in input().split()]\n    if x1 == x2 or y1 == y2:\n        print(1)\n    else:\n        print(abs(x1 - x2) * abs(y1 - y2) + 1)", "def main():\n    T = int(input())\n    while T > 0:\n        (x1, y1, x2, y2) = map(int, input().split())\n        print((x2 - x1) * (y2 - y1) + 1)\n        T -= 1\nmain()", "import sys\n\ndef run_case():\n    (x1, y1, x2, y2) = map(int, input().split())\n    d1 = x2 - x1\n    d2 = y2 - y1\n    print(d2 * d1 + 1)\nt = int(input())\nfor _ in range(t):\n    run_case()", "for _ in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    print((x2 - x1) * (y2 - y1) + 1)", "for _ in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    print((x2 - x1) * (y2 - y1) + 1)", "t = int(input())\nfor _ in range(t):\n    x = [int(x) for x in input().split()]\n    print((x[2] - x[0]) * (x[3] - x[1]) + 1)", "for i in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    print((x2 - x1) * (y2 - y1) + 1)", "def qtdCam(x1, x2, y1, y2):\n    if x1 == y1 or x2 == y2:\n        return 1\n    aux = qtdCam(x1 + 1, x2, y1, y2)\n    return aux + qtdCam(x1, x2 + 1, y1, y2)\nqtd = int(input())\nret = 0\nfor i in range(qtd):\n    let = input().split()\n    x1 = let[0]\n    x2 = let[1]\n    y1 = let[2]\n    y2 = let[3]\n    a = (int(y1) - int(x1)) * (int(y2) - int(x2)) + 1\n    print(a)", "t = int(input())\nfor _ in range(t):\n    (a, b, c, d) = map(int, input().split())\n    print((c - a) * (d - b) + 1)", "for _ in range(int(input())):\n    (a, b, c, d) = map(int, input().split())\n    print(abs(a - c) * abs(b - d) + 1)", "for _ in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    if x1 > x2 or y1 > y2:\n        print(0)\n        continue\n    dx = x2 - x1\n    dy = y2 - y1\n    print(dx * dy + 1)", "from itertools import product, combinations\nfrom math import sqrt, gcd, ceil\nfor _ in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    print((x1 - x2) * (y1 - y2) + 1)", "def solve():\n    n = int(input(''))\n    for k in range(n):\n        (i1, j1, i2, j2) = map(int, input('').split())\n        di = abs(i1 - i2)\n        dj = abs(j1 - j2)\n        res = 1 + di * dj\n        print(res)\nsolve()", "def main():\n    n = int(input())\n    i = 0\n    while i < n:\n        (x1, y1, x2, y2) = [int(i) for i in input().split()]\n        pathsX = x1 - x2\n        pathsX = abs(pathsX)\n        pathsY = y1 - y2\n        pathsY = abs(pathsY)\n        print(pathsY * pathsX + 1)\n        i += 1\nmain()", "def solution(a: int, b: int) -> int:\n    return a * b + 1\nt = int(input())\nwhile t > 0:\n    (a, b, c, d) = map(int, input().strip().split())\n    print(solution(d - b, c - a))\n    t -= 1", "for i in range(int(input())):\n    (a, b, c, d) = map(int, input().split())\n    print((d - b) * (c - a) + 1)", "for _ in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split(' '))\n    print((x2 - x1) * (y2 - y1) + 1)", "t = int(input())\nfor i in range(t):\n    (x1, y1, x2, y2) = map(int, input().split())\n    print((x2 - x1) * (y2 - y1) + 1)", "import sys\n\ndef run_case():\n    (x1, y1, x2, y2) = map(int, input().split())\n    d1 = x2 - x1\n    d2 = y2 - y1\n    if d1 > d2:\n        (d1, d2) = (d2, d1)\n    print((d2 - d1 - 1) * d1 + d1 * (d1 + 1) + 1)\nt = int(input())\nfor _ in range(t):\n    run_case()", "for _ in range(int(input())):\n    (a, b, c, d) = map(int, input().split())\n    ans = abs(a - c) * abs(b - d) + 1\n    print(ans)", "for _ in range(int(input())):\n    (a, b, x, y) = map(int, input().split())\n    x = x - a\n    y = y - b\n    print(x * y + 1)", "t = int(input())\nfor i in range(t):\n    (a, b, c, d) = map(int, input().split())\n    print((c - a) * (d - b) + 1)", "for _ in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    if y1 == y2 or x1 == x2:\n        print(1)\n        continue\n    ans = 2 + (y2 - y1 - 1) * (x2 - x1) + (x2 - x1 - 1)\n    print(ans)", "def solve():\n    (x1, y1, x2, y2) = map(int, input().split())\n    print((x1 - x2) * (y1 - y2) + 1)\n\ndef main():\n    for _ in range(int(input())):\n        solve()\nmain()", "def main():\n    (a, b, c, d) = map(int, input().split())\n    diffx = c - a\n    diffy = d - b\n    print(diffx * diffy + 1)\n    return\n\ndef test():\n    t = int(input())\n    while t:\n        main()\n        t -= 1\ntest()", "def main():\n    for _ in range(int(input())):\n        (x1, y1, x2, y2) = map(int, input().split())\n        print((x2 - x1) * (y2 - y1) + 1)\nmain()", "def main():\n    t = int(input())\n    for _ in range(t):\n        (x1, y1, x2, y2) = map(int, input().split())\n        print((x2 - x1) * (y2 - y1) + 1)\n    return\nmain()", "t = int(input())\nfor _ in range(t):\n    (x1, y1, x2, y2) = map(int, input().split())\n    print((x2 - x1) * (y2 - y1) + 1)", "def solve():\n    (x1, y1, x2, y2) = map(int, input().split())\n    print((x2 - x1) * (y2 - y1) + 1)\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        solve()\nmain()", "T = int(input())\nwhile T > 0:\n    T -= 1\n    val = [int(x) for x in input().split()]\n    print((val[2] - val[0]) * (val[3] - val[1]) + 1)", "t = int(input())\nfor _ in range(t):\n    (x1, y1, x2, y2) = tuple(map(int, input().split()))\n    print((x2 - x1) * (y2 - y1) + 1)", "for i in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    print((x2 - x1) * (y2 - y1) + 1)", "t = int(input())\nfor _ in range(t):\n    (x1, y1, x2, y2) = map(int, input().split())\n    print((x2 - x1) * (y2 - y1) + 1)", "for i in range(int(input())):\n    (a, b, c, d) = map(int, input().split())\n    print((c - a) * (d - b) + 1)", "t = int(input())\nfor x in range(t):\n    (a, b, c, d) = map(int, input().split())\n    print((c - a) * (d - b) + 1)", "for t in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    print((x2 - x1) * (y2 - y1) + 1)", "t = int(input())\nfor i in range(t):\n    (x1, y1, x2, y2) = map(int, input().split())\n    a = x2 - x1\n    b = y2 - y1\n    print(a * b + 1)", "for _ in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    print((x2 - x1) * (y2 - y1) + 1)", "for t in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    print((x2 - x1) * (y2 - y1) + 1)", "for _ in ' ' * int(input()):\n    (a, b, c, d) = map(int, input().split())\n    print(1 + (c - a) * (d - b))", "t = int(input())\nwhile t:\n    t -= 1\n    (x1, y1, x2, y2) = map(int, input().split())\n    print((x1 - x2) * (y1 - y2) + 1)", "t = int(input())\nfor i in range(t):\n    (a, b, c, d) = map(int, input().split(' '))\n    print((d - b) * (c - a) + 1)", "def main():\n    test = int(input())\n    for _ in range(test):\n        (x1, y1, x2, y2) = map(int, input().split())\n        ans = (x2 - x1) * (y2 - y1) + 1\n        print(ans)\nmain()", "for i in range(int(input())):\n    (x1, y1, x2, y2) = map(int, input().split())\n    print((x2 - x1) * (y2 - y1) + 1)", "for _ in range(int(input())):\n    (i1, j1, i2, j2) = map(int, input().split())\n    print((i2 - i1) * (j2 - j1) + 1)", "def main():\n    for q in range(int(input())):\n        (x, y, x1, y1) = map(int, input().split())\n        print((y1 - y) * (x1 - x) + 1)\nmain()", "t = int(input())\nfor _ in range(t):\n    (x1, y1, x2, y2) = map(int, input().split(' '))\n    print((x2 - x1) * (y2 - y1) + 1)", "t = int(input())\nfor _ in range(t):\n    (x1, y1, x2, y2) = (int(_) for _ in input().split())\n    delta_x = x2 - x1\n    delta_y = y2 - y1\n    print(delta_x * delta_y + 1)", "t = int(input())\nfor _ in range(t):\n    (a, b, c, d) = map(int, input().split())\n    s = (c - a) * (d - b)\n    s = s + 1\n    print(s)", "for t in range(int(input())):\n    (a, b, c, d) = map(int, input().split())\n    print((c - a) * (d - b) + 1)", "t = int(input())\nfor i in range(t):\n    (a, b, c, d) = map(int, input().split())\n    print((d - b) * (c - a) + 1)", "n = int(input())\nfor i in range(n):\n    (a, b, c, d) = map(int, input().split())\n    print((d - b) * (c - a) + 1)"]