["(n, m, l, r) = map(int, input().split())\nmod = 998244353\nret = pow(r - l + 1, n * m, 2 * mod)\nif not n * m % 2:\n    ret = (ret + 1) // 2\nprint(int(ret % mod))", "(n, m, l, r) = map(int, input().split())\nmod = 998244353\nret = pow(r - l + 1, n * m, 2 * mod)\nif not n * m % 2:\n    ret = (ret + 1) // 2\nprint(int(ret % mod))", "(n, m, l, r) = map(int, input().split())\nmod = 998244353\nret = pow(r - l + 1, n * m, 2 * mod)\nprint(ret % mod if n * m % 2 else (ret + 1) // 2 % mod)", "(n, m, l, r) = map(int, input().split())\nmod = 998244353\nret = pow(r - l + 1, n * m, 2 * mod)\nif not n * m % 2:\n    ret = (ret + 1) // 2\nprint(int(ret % mod))", "(n, m, l, r) = map(int, input().split())\nmod = 998244353\ns = pow(r - l + 1, n * m, 2 * mod)\nif not n * m % 2:\n    s = (s + 1) // 2\nprint(int(s % mod))", "(n, m, l, r) = map(int, input().split())\nmod = int(998244353)\nx = r - l + 1\nans = pow(x, n * m, mod) % mod\nif n * m % 2 == 1:\n    print(ans)\nelse:\n    if x & 1:\n        ans = (ans + 1) % mod\n    ans = ans * pow(2, mod - 2, mod) % mod\n    print(ans)", "md = 998244353\n(n, m, l, r) = map(int, input().split())\nrr = r - l + 1\nif n * m % 2 == 1:\n    print(pow(rr, n * m, md))\nelif rr % 2 == 0:\n    print(pow(rr, n * m, md) * (md + 1) // 2 % md)\nelse:\n    print((pow(rr, n * m, md) + 1) * (md + 1) // 2 % md)", "(n, m, l, r) = map(int, input().split())\nmod = 998244353\nret = pow(r - l + 1, n * m, 2 * mod)\nif not n * m % 2:\n    ret = (ret + 1) // 2\nprint(int(ret % mod))", "[n, m, L, R] = [int(s) for s in input().split()]\nmod = 998244353\nret = pow(R - L + 1, n * m, 2 * mod)\nif not n * m % 2:\n    ret = (ret + 1) // 2\nprint(int(ret % mod))", "(n, m, L, R) = [int(x) for x in input().split()]\nif L == R:\n    print(1)\n    exit(0)\nmod = 998244353\ninv2 = mod + 1 >> 1\neven = R // 2 - (L - 1) // 2\nodd = (R + 1) // 2 - L // 2\ncnt = n * m\nif cnt % 2 == 1:\n    print(pow(odd + even, cnt, mod) % mod)\nelse:\n    print((pow(odd + even, cnt, mod) + pow(odd - even, cnt, mod)) * inv2 % mod)", "mod = 998244353\n(n, m, L, R) = map(int, input().split())\nevens = R // 2 - (L - 1) // 2\nodds = R - L + 1 - evens\ntotal_cells = n * m\nif n * m % 2 == 1:\n    print(pow(R - L + 1, total_cells, mod))\nelse:\n    term1 = pow(evens + odds, total_cells, mod)\n    term2 = pow(odds - evens, total_cells, mod)\n    print((term1 + term2) * pow(2, mod - 2, mod) % mod)", "[n, m, L, R] = [int(s) for s in input().split()]\nmod = 998244353\nret = pow(R - L + 1, n * m, 2 * mod)\nif not n * m % 2:\n    ret = (ret + 1) // 2\nprint(int(ret % mod))", "(n, m, L, R) = map(int, input().split())\nmod = 998244353\nif n * m % 2:\n    print(pow(R - L + 1, n * m, mod))\nelse:\n    print((pow(R - L + 1, n * m, mod) + 1 - (R - L) % 2) * pow(2, mod - 2, mod) % mod)", "(N, M, L, R) = map(int, input().split())\nK = R - L + 1\nP = 998244353\nprint(pow(K, N * M, P) if N * M % 2 else (pow(K, N * M, P) + K % 2) * ((P + 1) // 2) % P)", "def pow_fast_mod(a, b, div):\n    s = 1\n    while b > 0:\n        if b % 2:\n            s %= div\n            a %= div\n            s *= a\n        a %= div\n        a *= a\n        b = b // 2\n    return s % div\n[n, m, L, R] = [int(s) for s in input().split()]\nh = R - L\nmod = 998244353\nret = 0\nif n % 2 and m % 2:\n    ret = pow_fast_mod(h + 1, n * m, 2 * mod)\nelse:\n    ret = (pow_fast_mod(h + 1, n * m, 2 * mod) + 1) // 2\nprint(int(ret % mod))", "[n, m, L, R] = [int(s) for s in input().split()]\nmod = 998244353\nret = pow(R - L + 1, n * m, 2 * mod)\nif not n * m % 2:\n    ret = (ret + 1) // 2\nprint(int(ret % mod))", "(n, m, l, r) = [int(i) for i in input().split()]\nmod = 998244353\nans = 0\nif n * m & 1:\n    ans = pow(r - l + 1, m * n, mod)\nelse:\n    if l & 1 != r & 1:\n        k = 0\n    elif l & 1:\n        k = 1\n    else:\n        k = 1\n    ans = (pow(r - l + 1, m * n, mod) + k) * pow(2, mod - 2, mod) % mod\nprint(ans)", "(n, m, L, R) = [int(x) for x in input().split()]\nmod = 998244353\ninv2 = mod + 1 >> 1\neven = R // 2 - (L - 1) // 2\nodd = (R + 1) // 2 - L // 2\ncnt = n * m\nif cnt % 2 == 1:\n    print(pow(odd + even, cnt, mod) % mod)\nelse:\n    print((pow(odd + even, cnt, mod) + pow(odd - even, cnt, mod)) * inv2 % mod)", "MOD = 998244353\n(n, m, l, r) = map(int, input().split())\nif n * m % 2 == 1:\n    print(pow(r - l + 1, n * m, MOD))\nelif (r - l + 1) % 2 == 0:\n    print(pow(r - l + 1, n * m, MOD) * (MOD + 1) // 2 % MOD)\nelse:\n    print((pow(r - l + 1, n * m, MOD) + 1) * (MOD + 1) // 2 % MOD)", "MOD = 998244353\n(n, m, l, r) = map(int, input().split())\nif n * m % 2 == 1:\n    print(pow(r - l + 1, n * m, MOD))\nelif (r - l + 1) % 2 == 0:\n    print(pow(r - l + 1, n * m, MOD) * (MOD + 1) // 2 % MOD)\nelse:\n    print((pow(r - l + 1, n * m, MOD) + 1) * (MOD + 1) // 2 % MOD)", "mod = 998244353\n(n, m, l, r) = map(int, input().split())\nif n * m % 2 == 1:\n    print(pow(r - l + 1, n * m, mod))\nelse:\n    print((pow(r - l + 1, n * m, mod) + (r - l + 1) % 2) * pow(2, mod - 2, mod) % mod)", "MOD = 998244353\n(n, m, l, r) = map(int, input().split())\nif n * m % 2 == 1:\n    print(pow(r - l + 1, n * m, MOD))\nelif (r - l + 1) % 2 == 0:\n    print(pow(r - l + 1, n * m, MOD) * (MOD + 1) // 2 % MOD)\nelse:\n    print((pow(r - l + 1, n * m, MOD) + 1) * (MOD + 1) // 2 % MOD)", "MOD = 998244353\n(n, m, l, r) = map(int, input().split())\nif n * m % 2 == 1:\n    print(pow(r - l + 1, n * m, MOD))\nelse:\n    e = r // 2 - (l - 1) // 2\n    o = r - l + 1 - e\n    print((pow(e + o, n * m, MOD) + pow(e - o, n * m, MOD)) * ((MOD + 1) // 2) % MOD)", "MOD = 998244353\n(n, m, l, r) = map(int, input().split())\nif n * m % 2 == 1:\n    print(pow(r - l + 1, n * m, MOD))\nelse:\n    e = r // 2 - (l - 1) // 2\n    o = r - l + 1 - e\n    inv_2 = pow(2, MOD - 2, MOD)\n    print((pow(e + o, n * m, MOD) + pow(e - o, n * m, MOD)) % MOD * inv_2 % MOD)", "MOD = 998244353\n(n, m, l, r) = map(int, input().split())\nif n * m % 2 == 1:\n    print(pow(r - l + 1, n * m, MOD))\nelse:\n    e = r // 2 - (l - 1) // 2\n    o = r - l + 1 - e\n    print((pow(e + o, n * m, MOD) + pow(e - o, n * m, MOD)) * (MOD + 1) // 2 % MOD)", "(n, m, l, r) = map(int, input().split())\nmod = 998244353\nret = pow(r - l + 1, n * m, 2 * mod)\nif not n * m % 2:\n    ret = (ret + 1) // 2\nprint(int(ret % mod))", "mod = 998244353\n(n, m, L, R) = map(int, input().split())\nif n * m % 2 == 1:\n    print(pow(R - L + 1, n * m, mod))\nelse:\n    x = int((R - L + 1) / 2)\n    y = R - L + 1 - x\n    print((pow(x + y, n * m, mod) + pow(x - y, n * m, mod)) % mod * pow(2, mod - 2, mod) % mod)", "mod = 998244353\n(n, m, L, R) = map(int, input().split())\nif n * m % 2 == 1:\n    print(pow(R - L + 1, n * m, mod))\nelif (R - L + 1) % 2 == 0:\n    print(pow(R - L + 1, n * m, mod) * pow(2, mod - 2, mod) % mod)\nelse:\n    print((pow(R - L + 1, n * m, mod) + 1) % mod * pow(2, mod - 2, mod) % mod)", "MOD = 998244353\n(n, m, l, r) = map(int, input().split())\nif n * m % 2 == 1:\n    print(pow(r - l + 1, n * m, MOD))\nelif (r - l + 1) % 2 == 0:\n    print(pow(r - l + 1, n * m, MOD) * (MOD + 1) // 2 % MOD)\nelse:\n    print((pow(r - l + 1, n * m, MOD) + 1) * (MOD + 1) // 2 % MOD)", "(n, m, l, r) = map(int, input().split())\nmod = 998244353\nret = pow(r - l + 1, n * m, 2 * mod)\nif not n * m % 2:\n    ret = (ret + 1) // 2\nprint(int(ret % mod))", "mod = 998244353\n(n, m, L, R) = map(int, input().split())\nD = R - L + 1\nres = None\nif n * m & 1:\n    res = pow(D, n * m, mod)\nelif D % 2 == 0:\n    res = pow(2, n * m - 1, mod) * pow(D // 2, n * m, mod) % mod\nelse:\n    r2 = pow(2, mod - 2, mod)\n    res = (pow(2 * (D // 2) + 1, n * m, mod) + 1) * r2 % mod\nprint(res)", "MOD = 998244353\n(n, m, l, r) = map(int, input().split())\nif n * m % 2 == 1:\n    print(pow(r - l + 1, n * m, MOD))\nelif (r - l + 1) % 2 == 0:\n    print(pow(r - l + 1, n * m, MOD) * (MOD + 1) // 2 % MOD)\nelse:\n    print((pow(r - l + 1, n * m, MOD) + 1) * (MOD + 1) // 2 % MOD)", "MOD = 998244353\n(n, m, l, r) = map(int, input().split())\nif n * m % 2 == 1:\n    print(pow(r - l + 1, n * m, MOD))\nelse:\n    e = r // 2 - (l - 1) // 2\n    o = r - l + 1 - e\n    print((pow(e + o, n * m, MOD) + pow(e - o, n * m, MOD)) * (MOD + 1) // 2 % MOD)", "M = 998244353\n(n, m, l, r) = map(int, input().split())\nx = pow(r - l + 1, n * m, M)\nif n % 2 == 1 and m % 2 == 1:\n    print(x)\nelse:\n    xx = x\n    if (r - l + 1) % 2 == 1:\n        x = (x - 1 + M) % M\n    h = x * (M + 1) // 2\n    print((xx - h % M + M) % M)", "MOD = 998244353\n(n, m, l, r) = map(int, input().split())\nr -= l - 1\nif n * m & 1:\n    print(pow(r, n * m, MOD))\nelse:\n    print((pow(r, n * m, MOD) + (r & 1)) * (MOD + 1) // 2 % MOD)", "MOD = 998244353\n(n, m, l, r) = map(int, input().split())\nr -= l - 1\nif n * m & 1:\n    print(pow(r, n * m, MOD))\nelse:\n    print((pow(r, n * m, MOD) + (r & 1)) * (MOD + 1) // 2 % MOD)", "MOD = 998244353\n(n, m, l, r) = map(int, input().split())\nr -= l - 1\nif n * m & 1:\n    print(pow(r, n * m, MOD))\nelse:\n    print((pow(r, n * m, MOD) + (r & 1)) * (MOD + 1) // 2 % MOD)", "MOD = 998244353\n(n, m, l, r) = map(int, input().split())\nif n * m % 2 == 1:\n    print(pow(r - l + 1, n * m, MOD))\nelif (r - l + 1) % 2 == 0:\n    print(pow(r - l + 1, n * m, MOD) * (MOD + 1) // 2 % MOD)\nelse:\n    print((pow(r - l + 1, n * m, MOD) + 1) * (MOD + 1) // 2 % MOD)", "MOD = 998244353\n(n, m, l, r) = map(int, input().split())\nif n * m % 2 == 1:\n    print(pow(r - l + 1, n * m, MOD))\nelif (r - l + 1) % 2 == 0:\n    print(pow(r - l + 1, n * m, MOD) * (MOD + 1) // 2 % MOD)\nelse:\n    print((pow(r - l + 1, n * m, MOD) + 1) * (MOD + 1) // 2 % MOD)", "MOD = 998244353\n(n, m, l, r) = map(int, input().split())\nif n * m % 2 == 1:\n    print(pow(r - l + 1, n * m, MOD))\nelif (r - l + 1) % 2 == 0:\n    print(pow(r - l + 1, n * m, MOD) * (MOD + 1) // 2 % MOD)\nelse:\n    print((pow(r - l + 1, n * m, MOD) + 1) * (MOD + 1) // 2 % MOD)", "q = 998244353\n(n, m, l, r) = map(int, input().split())\nif n * m % 2 == 1:\n    print(pow(r - l + 1, n * m, q))\nelif (r - l + 1) % 2 == 0:\n    print(pow(r - l + 1, n * m, q) * (q + 1) // 2 % q)\nelse:\n    print((pow(r - l + 1, n * m, q) + 1) * (q + 1) // 2 % q)", "oo = 998244353\nrev_2 = oo + 1 >> 1\n(n, m, L, R) = map(int, input().split())\nn *= m\nif n % 2:\n    print(pow(R - L + 1, n, oo))\nelse:\n    odd = R - L + 1 >> 1\n    even = odd\n    if (R - L + 1) % 2:\n        if R % 2:\n            odd += 1\n        else:\n            even += 1\n    res_1 = pow(odd + even, n, oo)\n    res_2 = pow(odd - even, n, oo)\n    print((res_1 + res_2) * rev_2 % oo)", "def expo(a, n):\n    if n > 0:\n        ha = expo(a, n // 2)\n        if n % 2 == 1:\n            return ha * ha * a % MOD\n        else:\n            return ha * ha % MOD\n    else:\n        return 1\nMOD = 998244353\n\ndef f():\n    (n, m, L, R) = map(int, input().split(' '))\n    height = R - L + 1\n    area = n * m\n    ans = expo(height, area)\n    if area % 2 == 1:\n        print(ans)\n    elif height % 2 == 0:\n        if ans % 2 == 1:\n            ans += MOD\n        ans //= 2\n        print(ans % MOD)\n    else:\n        if ans % 2 == 0:\n            ans += MOD\n        ans = (ans + 1) // 2\n        print(ans % MOD)\nf()", "import sys\ninput = sys.stdin.readline\nmod = 998244353\n(N, M, L, R) = map(int, input().split())\nif N * M % 2 == 1:\n    print(pow(R - L + 1, N * M, mod))\nelse:\n    ans1 = pow(R - L + 1, N * M, mod)\n    if (R - L) % 2 == 1:\n        ans2 = 0\n    else:\n        ans2 = 1\n    ans = (ans1 + ans2) * pow(2, mod - 2, mod) % mod\n    print(ans)", "import sys\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\n\ndef main():\n    md = 998244353\n    (h, w, l, r) = MI()\n    if h * w % 2:\n        print(pow(r - l + 1, h * w, md))\n    else:\n        even = r // 2 - (l - 1) // 2\n        odd = r - l + 1 - even\n        ans = (pow(even - odd, h * w, md) + pow(even + odd, h * w, md)) * pow(2, md - 2, md) % md\n        print(ans)\nmain()", "(n, m, L, R) = map(int, input().strip().split())\nif n % 2 == 1 and m % 2 == 1:\n    print(pow(R - L + 1, n * m, 998244353))\nelse:\n    po = (R - L + 1) // 2\n    poo = (R - L + 2) // 2\n    c = (pow(po + poo, n * m, 998244353) + pow(po - poo, n * m, 998244353)) * pow(2, 998244351, 998244353) % 998244353\n    print(c)", "MOD = 998244353\n(n, m, l, r) = map(int, input().split())\nif n * m % 2 == 1:\n    print(pow(r - l + 1, n * m, MOD))\nelif (r - l + 1) % 2 == 0:\n    print(pow(r - l + 1, n * m, MOD) * (MOD + 1) // 2 % MOD)\nelse:\n    print((pow(r - l + 1, n * m, MOD) + 1) * (MOD + 1) // 2 % MOD)", "MOD = 998244353\n(n, m, L, R) = map(int, input().split())\nif n * m % 2 == 1:\n    print(pow(R - L + 1, n * m, MOD))\nelif (R - L + 1) % 2 == 0:\n    print(pow(R - L + 1, n * m, MOD) * (MOD + 1) // 2 % MOD)\nelse:\n    print((pow(R - L + 1, n * m, MOD) + 1) * (MOD + 1) // 2 % MOD)", "(n, m, l, r) = map(int, input().split())\nmod = 998244353\nif n * m % 2 == 1:\n    print(pow(r - l + 1, n * m, mod))\nelse:\n    e = r // 2 - (l - 1) // 2\n    o = r - l + 1 - e\n    (A, B) = (pow(e + o, n * m, mod), pow(e - o, n * m, mod))\n    print((A + B) * pow(2, mod - 2, mod) % mod)", "(n, m, L, R) = map(int, input().split())\nmod = 998244353\nif n * m % 2:\n    print(pow(R - L + 1, n * m, mod))\nelse:\n    print((pow(R - L + 1, n * m, mod) + 1 - (R - L) % 2) * pow(2, mod - 2, mod) % mod)", "MOD = 998244353\n\ndef pow(n, deg):\n    if deg == 0:\n        return 1\n    if deg % 2:\n        return n * pow(n, deg - 1) % MOD\n    result = pow(n, deg >> 1)\n    return result ** 2 % MOD\n(height, width, low, hi) = map(int, input().split())\ncount = height * width\nhi = hi - low + 1\ninv2 = pow(2, MOD - 2)\nif count % 2:\n    result = pow(hi, count)\nelif hi % 2:\n    result = (pow(hi, count) + 1) * inv2 % MOD\nelse:\n    result = pow(hi, count) * inv2 % MOD\nprint(result)"]