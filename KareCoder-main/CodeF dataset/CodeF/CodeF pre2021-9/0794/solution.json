["def solve_case():\n    (n, m) = [int(x) for x in input().split()]\n    a = [[int(x) for x in input().split()] for x in range(n)]\n    xr = [0] * (n + m)\n    for i in range(n):\n        for j in range(m):\n            xr[i + j] ^= a[i][j]\n    return sum(xr) > 0\nfor _ in range(int(input())):\n    print(['Jeel', 'Ashish'][solve_case()])", "T = int(input())\nfor t in range(T):\n    (n, m) = list(map(int, input().split()))\n    min_has = 1000000000.0\n    min_xor = 0\n    a = [list(map(int, input().split())) for i in range(n)]\n    flag = False\n    for s in range(n + m - 1):\n        xor = 0\n        for i in range(n):\n            j = s - i\n            if j < 0 or j >= m:\n                continue\n            if a[i][j] == 0:\n                continue\n            has = True\n            xor ^= a[i][j]\n        if xor != 0:\n            flag = True\n            break\n    print('Ashish' if flag else 'Jeel')", "def solve_case():\n    (n, m) = [int(x) for x in input().split()]\n    a = [[int(x) for x in input().split()] for x in range(n)]\n    xr = [0] * (n + m)\n    for i in range(n):\n        for j in range(m):\n            xr[i + j] ^= a[i][j]\n    return sum(xr) > 0\n\ndef main():\n    for _ in range(int(input())):\n        print(['Jeel', 'Ashish'][solve_case()])\nmain()", "def solve_case():\n    (n, m) = [int(x) for x in input().split()]\n    a = [[int(x) for x in input().split()] for x in range(n)]\n    xr = [0] * (n + m)\n    for i in range(n):\n        for j in range(m):\n            xr[i + j] ^= a[i][j]\n    return sum(xr) > 0\nfor _ in range(int(input())):\n    print(['Jeel', 'Ashish'][solve_case()])", "def solve():\n    (n, m) = [int(x) for x in input().split()]\n    a = []\n    for i in range(n):\n        v = [int(x) for x in input().split()]\n        a.append(v)\n    xorsums = [0] * (n + m - 1)\n    for i in range(n):\n        for j in range(m):\n            xorsums[i + j] ^= a[i][j]\n    f = 0\n    for i in range(n + m - 1):\n        if xorsums[i] != 0:\n            f = 1\n    if f == 1:\n        print('Ashish')\n    else:\n        print('Jeel')\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        solve()\nmain()", "def solve_case():\n    (n, m) = [int(x) for x in input().split()]\n    a = [[int(x) for x in input().split()] for x in range(n)]\n    xr = [0] * (n + m)\n    for i in range(n):\n        for j in range(m):\n            xr[i + j] ^= a[i][j]\n    return sum(xr) > 0\nfor _ in range(int(input())):\n    print(['Jeel', 'Ashish'][solve_case()])", "def solve_case():\n    (n, m) = [int(x) for x in input().split()]\n    a = [[int(x) for x in input().split()] for x in range(n)]\n    xr = [0] * (n + m)\n    for i in range(n):\n        for j in range(m):\n            xr[i + j] ^= a[i][j]\n    return sum(xr) > 0\nfor _ in range(int(input())):\n    print(['Jeel', 'Ashish'][solve_case()])", "def solve_case():\n    (n, m) = [int(x) for x in input().split()]\n    a = [[int(x) for x in input().split()] for x in range(n)]\n    xr = [0] * (n + m)\n    for i in range(n):\n        for j in range(m):\n            xr[i + j] ^= a[i][j]\n    return sum(xr) > 0\nfor _ in range(int(input())):\n    print(['Jeel', 'Ashish'][solve_case()])", "def solve_case():\n    (n, m) = [int(x) for x in input().split()]\n    a = [[int(x) for x in input().split()] for x in range(n)]\n    xr = [0] * (n + m)\n    for i in range(n):\n        for j in range(m):\n            xr[i + j] ^= a[i][j]\n    return sum(xr) > 0\nfor _ in range(int(input())):\n    print(['Jeel', 'Ashish'][solve_case()])", "def solve_case():\n    (n, m) = [int(x) for x in input().split()]\n    a = [[int(x) for x in input().split()] for x in range(n)]\n    xr = [0] * (n + m)\n    for i in range(n):\n        for j in range(m):\n            xr[i + j] ^= a[i][j]\n    return sum(xr) > 0\nfor _ in range(int(input())):\n    print(['Jeel', 'Ashish'][solve_case()])", "def solve_case():\n    (n, m) = [int(x) for x in input().split()]\n    a = [[int(x) for x in input().split()] for x in range(n)]\n    xr = [0] * (n + m)\n    for i in range(n):\n        for j in range(m):\n            xr[i + j] ^= a[i][j]\n    return sum(xr) > 0\nfor _ in range(int(input())):\n    print(['Jeel', 'Ashish'][solve_case()])", "def nullify(n, m, mat):\n    xor = [0 for i in range(n + m - 1)]\n    for i in range(n):\n        for j in range(m):\n            xor[i + j] ^= mat[i][j]\n    for i in range(n + m - 1):\n        if xor[i]:\n            return 'Ashish'\n    return 'Jeel'\nt = int(input())\nfor i in range(t):\n    mat = []\n    (n, m) = map(int, input().split())\n    for j in range(n):\n        mat.append(list(map(int, input().split())))\n    print(nullify(n, m, mat))"]