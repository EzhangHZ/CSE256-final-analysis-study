["import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef odd_divisor(num):\n    if num & num - 1 == 0:\n        return 'NO'\n    else:\n        return 'YES'\n\ndef main():\n    cases = inp()\n    for _ in range(cases):\n        number = inp()\n        result = odd_divisor(number)\n        print(result)\n    return\nmain()", "for s in [*open(0)][1:]:\n    n = int(s)\n    print('YNEOS'[n & n - 1 == 0::2])", "for s in [*open(0)][1:]:\n    n = int(s)\n    print('YNEOS'[n & n - 1 == 0::2])", "for s in [*open(0)][1:]:\n    n = int(s)\n    print('YNEOS'[n & n - 1 == 0::2])", "for r in [*open(0)][1:]:\n    n = int(r)\n    print('YNEOS'[n & -n == n::2])", "for s in [*open(0)][1:]:\n    n = int(s)\n    print('YNEOS'[n & -n == n::2])", "for k in [*open(0)][1:]:\n    n = int(k)\n    print('YNEOS'[n & n - 1 < 1::2])", "for s in [*open(0)][1:]:\n    n = int(s)\n    print('YNEOS'[n & -n == n::2])", "for s in [*open(0)][1:]:\n    n = int(s)\n    print('YNEOS'[n & -n == n::2])", "for s in [*open(0)][1:]:\n    n = int(s)\n    print('YNEOS'[n & n - 1 == 0::2])", "for s in [*open(0)][1:]:\n    n = int(s)\n    print('YNEOS'[n & -n == n::2])", "for s in [*open(0)][1:]:\n    n = int(s)\n    print('YNEOS'[n & -n == n::2])", "t = int(input())\nnums = []\nfor _ in range(t):\n    nums.append(int(input()))\nfor n in nums:\n    if n & n - 1:\n        print('YES')\n    else:\n        print('NO')", "import sys\nt = int(sys.stdin.readline().strip())\nfor _ in range(t):\n    n = int(sys.stdin.readline().strip())\n    print('NO' if n & n - 1 == 0 else 'YES')", "for s in [*open(0)][1:]:\n    n = int(s)\n    print('YNEOS'[n & -n == n::2])", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    res = n & n - 1\n    if res:\n        print('YES')\n    else:\n        print('NO')", "def odd_divisor(x):\n    odd = 3\n    for i in range(0, x, 1):\n        if x & x - 1:\n            return 'YES'\n        else:\n            return 'NO'\nt = int(input())\nresults = []\nfor i in range(0, int(t), 1):\n    n = int(input())\n    results.append(odd_divisor(n))\nfor i in range(0, t, 1):\n    print(results[i])", "ans = []\nfor _ in range(int(input())):\n    if int(bin(int(input()))[3:]):\n        ans.append('YES')\n    else:\n        ans.append('NO')\nprint('\\n'.join(ans))", "cases = int(input())\nfull_list = [int(input()) for i in range(cases)]\n\ndef divisor_verify(full_list):\n    for i in full_list:\n        if i & i - 1 == 0:\n            print('NO')\n        else:\n            print('YES')\ndivisor_verify(full_list)", "import math\nn = int(input())\na = []\nc = 0\nd = 0\nfor i in range(n):\n    c = int(input())\n    a.append(c)\nfor i in a:\n    if math.log2(i) % 1 == 0:\n        print('NO')\n    else:\n        print('YES')", "for s in [*open(0)][1:]:\n    n = int(s)\n    print('YNEOS'[n & -n == n::2])", "for s in [*open(0)][1:]:\n    n = int(s)\n    print('YNEOS'[n & -n == n::2])", "from math import log2\nt = int(input())\nresult = []\nfor i1 in range(t):\n    n = int(input())\n    l = log2(n)\n    if l == int(l):\n        result.append('NO')\n    else:\n        result.append('YES')\nfor i2 in result:\n    print(i2)", "for s in [*open(0)][1:]:\n    n = int(s)\n    print('YNEOS'[n & -n == n::2])", "for s in [*open(0)][1:]:\n    n = int(s)\n    print('YNEOS'[n & -n == n::2])", "import math as m\nt = int(input())\nList = []\nfor i in range(0, t):\n    n = int(input())\n    List.append(n)\nfor num in List:\n    d = m.log2(num)\n    if d == m.ceil(d):\n        print('NO')\n    else:\n        print('YES')", "n = int(input())\nnums = []\nfor i in range(n):\n    nums.append(int(input()))\nfor num in nums:\n    if num & num - 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nm = []\nfor i in range(t):\n    m.append(int(input()))\nfor i in m:\n    if bin(i).count('1') == 1:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nnumbers_to_check = [int(input()) for i in range(t)]\nmax_num = max(numbers_to_check)\npowers_of_two = [2]\npowers_of_two_initial = 2\npower = 2\nfinal = []\nwhile powers_of_two_initial < max_num:\n    powers_of_two.append(2 ** power)\n    powers_of_two_initial = powers_of_two[-1]\n    power += 1\nfor num in numbers_to_check:\n    if num in powers_of_two:\n        final.append('NO')\n    else:\n        final.append('YES')\nfor word in final:\n    print(word)", "t = int(input(''))\nA = []\nfor i in range(t):\n    n = int(input(''))\n    A.append(n)\nx = 2\ny = 1\nkamus = []\nwhile x ** y <= 100000000000000:\n    kamus.append(x ** y)\n    y += 1\nfor i in range(t):\n    n = A[i]\n    if n % 2 == 1:\n        print('YES')\n    elif n in kamus:\n        print('NO')\n    else:\n        print('YES')", "for M in [*open(0)][1:]:\n    n = int(M)\n    print('YNEOS'[n & n - 1 < 1::2])", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_list_string():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\n\ndef get_print_int(x):\n    sys.stdout.write(str(x) + '\\n')\n\ndef get_print(x):\n    sys.stdout.write(x + '\\n')\n\ndef get_print_int_same(x):\n    sys.stdout.write(str(x) + ' ')\n\ndef get_print_same(x):\n    sys.stdout.write(x + ' ')\nfrom sys import maxsize\n\ndef solve():\n    for _ in range(get_int()):\n        n = get_int()\n        if n & n - 1 == 0:\n            get_print('NO')\n        else:\n            get_print('YES')\nsolve()", "from sys import stdin\n\ndef readint():\n    return int(stdin.readline())\n\ndef readarray(typ):\n    return list(map(typ, stdin.readline().split()))\n\ndef isPowerOfTwo(x):\n    return x and (not x & x - 1)\nfor _ in range(readint()):\n    n = readint()\n    if n & 1:\n        print('YES')\n    elif isPowerOfTwo(n):\n        print('NO')\n    else:\n        print('YES')", "def read_input(filename: str=None) -> None:\n    from sys import stdin\n    stdin = open(filename) if filename else stdin\n    cases = int(stdin.readline())\n    while cases:\n        cases = cases - 1\n        value = int(stdin.readline())\n        print('YES') if value & value - 1 else print('NO')\n\ndef main():\n    read_input()\nmain()", "n = int(input())\nlist1 = []\nfor i in range(n):\n    num = int(input())\n    list1.append(num)\nfor i in range(n):\n    if list1[i] % 2 != 0:\n        print('YES')\n    elif list1[i] & list1[i] - 1 == 0:\n        print('NO')\n    else:\n        print('YES')", "for s in [*open(0)][1:]:\n    n = int(s)\n    print('YNEOS'[n & n - 1 < 1::2])", "print(*list(map(lambda n: 'YNEOS'[1 << n.bit_length() == n << 1::2], [int(input()) for _ in '.' * int(input())])), sep='\\n')", "for s in [*open(0)][1:]:\n    n = int(s)\n    print('YNEOS'[n & n - 1 < 1::2])", "def oddDivisors1(arr):\n    s = set([2 ** i for i in range(1, 48)])\n    for i in arr:\n        if i in s:\n            print('NO')\n        else:\n            print('YES')\narr = []\nfor i in range(int(input())):\n    arr.append(int(input()))\noddDivisors1(arr)", "t = int(input())\nb = []\nfor i in range(t):\n    a = int(input())\n    if a & a - 1:\n        b.append('YES')\n    else:\n        b.append('NO')\nfor i in b:\n    print(i)", "for I in [*open(0)][1:]:\n    n = int(I)\n    print('YNEOS'[n & n - 1 < 1::2])", "for I in [*open(0)][1:]:\n    n = int(I)\n    print('YNEOS'[n & n - 1 < 1::2])", "for I in [*open(0)][1:]:\n    n = int(I)\n    print('YNEOS'[n & n - 1 < 1::2])", "for s in [*open(0)][1:]:\n    n = int(s)\n    print('YNEOS'[n & n - 1 < 1::2])", "import sys\nd = {}\nfor i in range(1, 47):\n    d.update({2 ** i: i})\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    if n in d:\n        print('NO')\n    else:\n        print('YES')", "test_cases = int(input())\nnumbers = [int(input()) for i in range(test_cases)]\nimport math\n\ndef find_divisor(num):\n    ans = math.log2(num)\n    if ans.is_integer():\n        print('NO')\n    else:\n        print('YES')\nfor number in numbers:\n    find_divisor(num=number)", "f = {1 << i for i in range(100)}\nfor t in range(int(input())):\n    n = int(input())\n    if n in f:\n        print('NO')\n    else:\n        print('YES')", "def check(x):\n    return x and (not x & x - 1)\nfor _ in range(int(input())):\n    n = int(input())\n    if check(n):\n        print('NO')\n    else:\n        print('YES')", "def isPowerOfTwo(x):\n    return x and (not x & x - 1)\nfor i in range(int(input())):\n    x = int(input())\n    if isPowerOfTwo(x):\n        print('NO')\n    else:\n        print('YES')", "k = int(input())\nfor i in range(k):\n    n = int(input())\n    if n & n - 1 == 0 and n != 0:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 0 and n & n - 1 == 0:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor tt in range(t):\n    n = int(input())\n    if n & n - 1 == 0:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 1:\n        print('YES')\n    elif (n and (not n & n - 1)) == True:\n        print('NO')\n    else:\n        print('YES')", "def isPowerTwo(x):\n    return x and (not x & x - 1)\nfor _ in range(int(input())):\n    n = int(input())\n    if isPowerTwo(n):\n        print('NO')\n    else:\n        print('YES')", "tc = int(input())\nwhile tc:\n    tc -= 1\n    n = int(input())\n    if n & n - 1 == 0:\n        print('NO')\n    else:\n        print('YES')", "import math\n\ndef Log2(x):\n    if x == 0:\n        return False\n    return math.log10(x) / math.log10(2)\n\ndef isPowerOfTwo(n):\n    return math.ceil(Log2(n)) == math.floor(Log2(n))\nt = int(input())\nout = []\nfor x in range(t):\n    n = int(input())\n    if isPowerOfTwo(n):\n        out.append('NO')\n    else:\n        out.append('YES')\nfor x in range(t):\n    print(out[x])", "for _ in range(int(input())):\n    x = int(input())\n    if x % 2 != 0:\n        print('YES')\n    elif x and (not x & x - 1):\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor ts in range(t):\n    n = int(input())\n    if n % 2 != 0:\n        print('YES')\n    elif n == 2:\n        print('NO')\n    elif n & n - 1 != 0:\n        print('YES')\n    else:\n        print('NO')", "k = int(input())\nfor i in range(k):\n    n = int(input())\n    if n & n - 1 == 0 and n != 0:\n        print('NO')\n    else:\n        print('YES')", "def solve(n):\n    if n % 2 != 0:\n        return True\n\n    def is_prime(n):\n        if n == 1:\n            return False\n        i = 2\n        while i * i <= n:\n            if n % i == 0:\n                return False\n            i += 1\n        return True\n    if n & n - 1 == 0 or is_prime(n):\n        return False\n    return True\nt = int(input())\nwhile t:\n    n = int(input())\n    if solve(n):\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "for i in range(int(input())):\n    a = int(input())\n    if a % 2 != 0:\n        print('YES')\n    elif a and (not a & a - 1):\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1:\n        print('NO')\n    elif n % 2 != 0:\n        print('YES')\n    elif n & n - 1 == 0:\n        print('NO')\n    else:\n        print('YES')", "def fun(n):\n    if n & n - 1 != 0:\n        return 'YES'\n    return 'NO'\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print(fun(n))", "t = int(input())\narr = []\nfor i in range(1, 65):\n    arr.append(2 ** i)\nfor i in range(t):\n    n = int(input())\n    if n in arr:\n        print('NO')\n    else:\n        print('YES')", "for i in range(int(input())):\n    n = int(input())\n    if n % 2 != 0:\n        print('YES')\n    elif n and (not n & n - 1):\n        print('NO')\n    else:\n        print('YES')", "t = int(input().strip())\nfor i in range(t):\n    n = int(input().strip())\n    if n & n - 1 > 0:\n        print('YES')\n    else:\n        print('NO')", "def fun():\n    n = int(input())\n    if n & n - 1:\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nwhile t:\n    fun()\n    t = t - 1", "for _ in range(int(input())):\n    x = int(input())\n    if x & x - 1 == 0:\n        print('NO')\n    else:\n        print('YES')", "import sys\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\nf_inf = float('inf')\nmod = 10 ** 9 + 7\n\ndef resolve():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        while n % 2 == 0:\n            n //= 2\n        print('NO' if n == 1 else 'YES')\nresolve()", "import math\n\ndef solve():\n    n = int(input())\n    if n % 2 != 0:\n        print('YES')\n        return 0\n    if n & n - 1 == 0:\n        print('NO')\n    else:\n        print('YES')\nT = int(input())\nfor i in range(T):\n    solve()", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    if n & n - 1 == 0:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    if n & 1:\n        print('YES')\n    elif n & n - 1:\n        print('YES')\n    else:\n        print('NO')", "def odd_divisior():\n    for i in range(int(input())):\n        a = int(input())\n        bit = a & a - 1\n        if bit == 0:\n            print('NO')\n        else:\n            print('YES')\nodd_divisior()", "try:\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        if n & n - 1 == 0:\n            print('NO')\n        else:\n            print('YES')\nexcept:\n    pass", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n & -n == n:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    if n & n - 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    print('YES' if n & n - 1 != 0 else 'NO')", "t = int(input())\nfor qq in range(t):\n    n = int(input())\n    if n & n - 1:\n        print('YES')\n    else:\n        print('NO')", "def solution(n):\n    if n & n - 1 == 0:\n        return 'NO'\n    return 'YES'\n\ndef adaptor():\n    t = int(input())\n    while t > 0:\n        n = int(input())\n        result = solution(n)\n        print(result)\n        t -= 1\nadaptor()", "n = int(input())\nwhile n > 0:\n    n -= 1\n    t = int(input())\n    if t & t - 1 != 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n & n - 1 == 0:\n        print('NO')\n    else:\n        print('YES')", "import sys\nfor i in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    while n % 2 == 0:\n        n //= 2\n    sys.stdout.write('YES\\n' if n != 1 else 'NO\\n')", "class Solution:\n\n    def solve(self, n):\n        if n & n - 1:\n            return 'YES'\n        else:\n            return 'NO'\nsol = Solution()\ntests = int(input())\nfor i in range(tests):\n    n = int(input())\n    result = sol.solve(n)\n    print(result)", "for _ in range(int(input())):\n    x = int(input())\n    if x & x - 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    print('YNEOS'[n & n - 1 == 0::2])", "for _ in range(int(input())):\n    n = int(input())\n    if n & n - 1 == 0:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    curr = int(input())\n    print('YES') if curr & curr - 1 != 0 else print('NO')", "def doit():\n    n = int(input())\n    print('NO' if n == 1 << len(bin(n)) - 3 else 'YES')\nT = int(input())\nfor _ in range(T):\n    doit()", "for _ in range(int(input())):\n    n = int(input())\n    s = bin(n)[2:]\n    if s.count('1') == 1:\n        print('NO')\n    else:\n        print('YES')", "n = int(input())\nmemo = {}\nfor _ in range(n):\n    k = int(input())\n    if k % 2:\n        print('YES')\n    else:\n        x = k\n        if k in memo:\n            print(memo[k])\n        else:\n            while x % 2 == 0 and x != 2:\n                x = x // 2\n                if x % 2 == 1:\n                    break\n            if x % 2:\n                memo[k] = 'YES'\n                print('YES')\n            else:\n                memo[k] = 'NO'\n                print('NO')", "t = int(input())\ns = []\nfor i in range(t):\n    c = 0\n    n = int(input())\n    while n % 2 == 0:\n        n = n / 2\n    if n == 1:\n        c = 1\n    if c == 1:\n        s.append('NO')\n    else:\n        s.append('YES')\nfor i in range(t):\n    print(s[i])"]