["for i in range(int(input())):\n    input()\n    a = list(map(int, input().split()))\n    b = list(map(lambda x, y: x - y, a, a[1:]))\n    c = [abs(b[0]), abs(b[-1])]\n    ans = 0\n    for i in b:\n        if i > 0 and ans < 0 or (i < 0 and ans > 0):\n            c.append(2 * min(abs(i), abs(ans)))\n        ans = i\n    b = list(map(abs, b))\n    print(sum(b) - max(c))", "f = abs\nfor s in [*open(0)][2::2]:\n    a = []\n    b = []\n    p = 0\n    for x in s.split():\n        if x != p:\n            a += (int(x),)\n            b += (0,)\n            p = x\n        b[-1] += 1\n    a = [x - y << 1 for (x, y) in zip(a, a[1:])] or [0]\n    print(sum(map(f, a)) - max((k < 2 and f(x) + f(y) - f(x + y) for (x, y, k) in zip([-a[0] // 2] + a, a + [-a[-1] // 2], b))) >> 1)", "def solve():\n    n = int(input())\n    a = [0] + list(map(int, input().split()))\n    ans = 0\n    for i in range(2, n + 1):\n        ans += abs(a[i] - a[i - 1])\n    mx = max(abs(a[2] - a[1]), abs(a[n] - a[n - 1]))\n    for i in range(2, n):\n        mx = max(mx, abs(a[i] - a[i - 1]) + abs(a[i + 1] - a[i]) - abs(a[i + 1] - a[i - 1]))\n    print(ans - mx)\nt = int(input())\nfor _ in range(t):\n    solve()", "import math\nt = int(input())\n\ndef solve():\n    n = int(input())\n    vals = list(map(int, input().split()))\n    diffs = []\n    for x in range(1, n):\n        diffs.append(abs(vals[x] - vals[x - 1]))\n    sdiff = sum(diffs)\n    ans = min(sdiff - diffs[0], sdiff - diffs[n - 2])\n    for x in range(1, n - 1):\n        tans = sdiff - (diffs[x] + diffs[x - 1])\n        ans = min(ans, tans + abs(vals[x - 1] - vals[x + 1]))\n    return ans\nfor i in range(t):\n    output = solve()\n    print(output)", "import math\nimport sys\n\nclass Read:\n\n    @staticmethod\n    def string():\n        return input()\n\n    @staticmethod\n    def int():\n        return int(input())\n\n    @staticmethod\n    def list(sep=' '):\n        return input().split(sep)\n\n    @staticmethod\n    def list_int(sep=' '):\n        return list(map(int, input().split(sep)))\n\ndef solve():\n    n = Read.int()\n    a = Read.list_int()\n    res = 0\n    for i in range(n - 1):\n        res += abs(a[i] - a[i + 1])\n    mx = 0\n    for i in range(n):\n        v = a[i]\n        lcl = 0\n        if i == 0:\n            r = a[i + 1]\n            lcl = abs(r - v)\n        elif i == n - 1:\n            l = a[i - 1]\n            lcl = abs(l - v)\n        else:\n            l = a[i - 1]\n            r = a[i + 1]\n            old = abs(r - v) + abs(l - v)\n            lcl = old - abs(r - l)\n        if lcl > mx:\n            mx = lcl\n    print(res - mx)\nquery_count = Read.int()\nwhile query_count:\n    query_count -= 1\n    solve()", "import sys\nimport math\ninput = sys.stdin.readline\ntests = int(input())\nfor test in range(tests):\n    n = int(input())\n    array = list(map(int, input().split()))\n    diff = 0\n    lastInteger = array[0]\n    secondLastInteger = array[0]\n    largestJump = abs(array[0] - array[1])\n    replacementJump = 0\n    for integer in array:\n        diff += abs(lastInteger - integer)\n        currentJump = abs(secondLastInteger - lastInteger) + abs(lastInteger - integer)\n        currentReplacementJump = abs(secondLastInteger - integer)\n        if currentJump - currentReplacementJump > largestJump - replacementJump:\n            largestJump = currentJump\n            replacementJump = currentReplacementJump\n        secondLastInteger = lastInteger\n        lastInteger = integer\n    jump = abs(array[-1] - array[-2])\n    if jump > largestJump - replacementJump:\n        largestJump = jump\n        replacementJump = 0\n    print(diff - largestJump + replacementJump)", "f = abs\nfor s in [*open(0)][2::2]:\n    a = []\n    b = []\n    p = 0\n    for x in s.split():\n        if x != p:\n            a += (int(x),)\n            b += (0,)\n            p = x\n        b[-1] += 1\n    a = [x - y << 1 for (x, y) in zip(a, a[1:])] or [0]\n    print(sum(map(f, a)) - max((k < 2 and f(x) + f(y) - f(x + y) for (x, y, k) in zip([-a[0] // 2] + a, a + [-a[-1] // 2], b))) >> 1)", "f = abs\nfor s in [*open(0)][2::2]:\n    a = []\n    b = []\n    p = 0\n    for x in s.split():\n        if x != p:\n            a += (int(x),)\n            b += (0,)\n            p = x\n        b[-1] += 1\n    a = [x - y << 1 for (x, y) in zip(a, a[1:])] or [0]\n    print(sum(map(f, a)) - max((k < 2 and f(x) + f(y) - f(x + y) for (x, y, k) in zip([-a[0] // 2] + a, a + [-a[-1] // 2], b))) >> 1)", "class Solution:\n\n    def solution(self, nums):\n        if len(nums) <= 2:\n            return 0\n        diff = []\n        for i in range(1, len(nums)):\n            diff.append(nums[i] - nums[i - 1])\n        max_sub = 0\n        for i in range(1, len(diff)):\n            if diff[i] * diff[i - 1] >= 0:\n                continue\n            max_sub = max(max_sub, 2 * min(abs(diff[i]), abs(diff[i - 1])))\n        max_sub = max(max_sub, abs(diff[0]), abs(diff[-1]))\n        return sum([abs(num) for num in diff]) - max_sub\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    nums = [int(num) for num in input().split()]\n    sol = Solution()\n    print(sol.solution(nums))", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    sum1 = 0\n    for i in range(n - 1):\n        sum1 += abs(a[i] - a[i + 1])\n    max_raznost = max(abs(a[0] - a[1]), abs(a[n - 1] - a[n - 2]))\n    for i in range(1, n - 1):\n        raznost = abs(a[i] - a[i - 1]) + abs(a[i] - a[i + 1]) - abs(a[i - 1] - a[i + 1])\n        if raznost > max_raznost:\n            max_raznost = raznost\n    print(sum1 - max_raznost)\ntests = int(input())\nwhile tests > 0:\n    solve()\n    tests = tests - 1", "from sys import stdin, stdout\ninput = stdin.readline\nprint2 = stdout.write\n\ndef get_ints():\n    return map(int, stdin.readline().split())\n\ndef get_list():\n    return tuple(map(int, stdin.readline().split()))\nfor _ in range(int(input())):\n    n = int(input())\n    a = get_list()\n    diff_next = abs(a[1] - a[0])\n    profit_max = diff_next\n    total_diff = 0\n    for i in range(1, n):\n        diff = diff_next\n        if i == n - 1:\n            profit = diff\n        else:\n            diff_next = abs(a[i + 1] - a[i])\n            profit = diff + diff_next - abs(a[i + 1] - a[i - 1])\n        if profit > profit_max:\n            profit_max = profit\n        total_diff += diff\n    print(total_diff - profit_max)", "def solve(arr):\n    n = len(arr)\n    if n <= 2:\n        return 0\n    diff = []\n    for i in range(n - 1):\n        diff.append(abs(arr[i + 1] - arr[i]))\n    ans = sum(diff)\n    sum_diff = sum(diff)\n    for i in range(n):\n        if i == 0:\n            ans = min(ans, sum_diff - diff[0])\n        elif i == n - 1:\n            ans = min(ans, sum_diff - diff[-1])\n        else:\n            ans = min(ans, sum_diff - diff[i - 1] - diff[i] + abs(arr[i + 1] - arr[i - 1]))\n    return ans\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(solve(arr))", "from itertools import *\nfor s in [*open(0)][2::2]:\n    (a, b) = zip(*((int(k), len([*g]) < 2) for (k, g) in groupby(s.split())))\n    a = [x - y for (x, y) in zip(a, a[1:])]\n    print(sum(map(abs, a)) - (len(a) and max([b[0] and abs(a[0]), b[-1] and abs(a[-1])] + [abs(x) + abs(y) - abs(x + y) for (x, y, u) in zip(a, a[1:], b[1:]) if u])))", "from itertools import *\nfor s in [*open(0)][2::2]:\n    (a, b) = zip(*((int(k), len([*g]) < 2) for (k, g) in groupby(s.split())))\n    a = [x - y for (x, y) in zip(a, a[1:])]\n    print(sum(map(abs, a)) - (len(a) and max([b[0] and abs(a[0]), b[-1] and abs(a[-1])] + [abs(x) + abs(y) - abs(x + y) for (x, y, u) in zip(a, a[1:], b[1:]) if u])))", "from itertools import *\nfor s in [*open(0)][2::2]:\n    (a, b) = zip(*((int(k), len([*g])) for (k, g) in groupby(s.split())))\n    a = [x - y << 1 for (x, y) in zip(a, a[1:])] or [0]\n    print(sum(map(abs, a)) - max((k < 2 and abs(x) + abs(y) - abs(x + y) for (x, y, k) in zip([-a[0] // 2] + a, a + [-a[-1] // 2], b))) >> 1)", "import sys\n\ndef solve():\n    t = int(input())\n    arr = list(map(int, input().split()))\n    c = 0\n    for i in range(len(arr) - 1, 0, -1):\n        c += abs(arr[i] - arr[i - 1])\n    dec = []\n    for i in range(1, len(arr) - 1):\n        dec.append(abs(arr[i] - arr[i - 1]) + abs(arr[i + 1] - arr[i]) - abs(arr[i + 1] - arr[i - 1]))\n    dec = max(dec) if len(dec) != 0 else 0\n    c -= max(abs(arr[1] - arr[0]), abs(arr[-1] - arr[-2]), dec)\n    print(c)\nnum = int(input())\nfor n in range(num):\n    solve()", "import math\n\ndef hi(a):\n    l = len(a)\n    b = []\n    b.append(abs(a[0] - a[1]))\n    for i in range(1, l - 1):\n        b.append(abs(a[i] - a[i - 1]) + abs(a[i] - a[i + 1]) - abs(a[i - 1] - a[i + 1]))\n    b.append(abs(a[-1] - a[-2]))\n    m = max(b)\n    j = b.index(m)\n    c = 0\n    if j == 0:\n        a[0] = a[1]\n        for i in range(l - 1):\n            c += abs(a[i] - a[i + 1])\n        return c\n    if j == l - 1:\n        a[-1] = a[-2]\n        for i in range(l - 1):\n            c += abs(a[i] - a[i + 1])\n        return c\n    a[j] = a[j - 1]\n    for i in range(l - 1):\n        c += abs(a[i] - a[i + 1])\n    return c\nt = int(input())\nfor i in range(t):\n    k = input()\n    a = list(map(int, input().split(' ')))\n    print(hi(a))", "def solve():\n    n = int(input())\n    a = [0] + list(map(int, input().split()))\n    ans = 0\n    for i in range(2, n + 1):\n        ans += abs(a[i] - a[i - 1])\n    mx = max(abs(a[2] - a[1]), abs(a[n] - a[n - 1]))\n    for i in range(2, n):\n        mx = max(mx, abs(a[i] - a[i - 1]) + abs(a[i + 1] - a[i]) - abs(a[i + 1] - a[i - 1]))\n    print(ans - mx)\nt = int(input())\nfor _ in range(t):\n    solve()", "N = int(200000.0)\na = [0 for i in range(N + 5)]\n\ndef solve():\n    t = int(input())\n    for tc in range(t):\n        n = int(input())\n        b = input().split()\n        for i in range(n):\n            a[i] = int(b[i])\n        (ans, s) = (0, 0)\n        for i in range(n - 1):\n            s += abs(a[i] - a[i + 1])\n        ans = s - max(abs(a[0] - a[1]), abs(a[n - 2] - a[n - 1]))\n        for i in range(1, n - 1):\n            v = abs(a[i] - a[i - 1]) + abs(a[i] - a[i + 1])\n            ans = min(ans, s - v + abs(a[i + 1] - a[i - 1]))\n        print(ans)\nsolve()", "import sys\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\nf_inf = float('inf')\nmod = 10 ** 9 + 7\n\ndef resolve():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        A = list(map(int, input().split()))\n        diff = [0] * (n - 1)\n        for i in range(n - 1):\n            diff[i] = abs(A[i] - A[i + 1])\n        total = sum(diff)\n        res = total\n        for i in range(n):\n            if i == 0:\n                t = total - diff[i]\n            elif i == n - 1:\n                t = total - diff[i - 1]\n            else:\n                t = total - diff[i - 1] - diff[i] + abs(A[i - 1] - A[i + 1])\n            res = min(res, t)\n        print(res)\nresolve()", "from itertools import *\nfor s in [*open(0)][2::2]:\n    (a, b) = zip(*((int(k), len([*g]) < 2) for (k, g) in groupby(s.split())))\n    a = [x - y << 1 for (x, y) in zip(a, a[1:])] or [0]\n    print(sum(map(abs, a)) - max((u and abs(x) + abs(y) - abs(x + y) for (x, y, u) in zip([-a[0] // 2] + a, a + [-a[-1] // 2], b))) >> 1)", "import sys\nreader = (s.rstrip() for s in sys.stdin)\ninput = reader.__next__\n\ndef gift():\n    for _ in range(t):\n        n = int(input())\n        nums = list(map(int, input().split()))\n        B = []\n        for i in range(n - 1):\n            B.append(abs(nums[i + 1] - nums[i]))\n        S2 = [0]\n        for s in B:\n            S2.append(S2[-1] + s)\n        ans = min(sum(B[1:]), sum(B[:-1]))\n        for i in range(n - 2):\n            ans = min(ans, S2[i] + (S2[-1] - S2[i + 2]) + abs(nums[i + 2] - nums[i]))\n        yield ans\nt = int(input())\nans = gift()\nprint(*ans, sep='\\n')", "from itertools import *\nfor s in [*open(0)][2::2]:\n    (a, b) = zip(*((int(k), len([*g]) < 2) for (k, g) in groupby(s.split())))\n    a = [x - y for (x, y) in zip(a, a[1:])]\n    print(sum(map(abs, a)) - (len(a) and max([b[0] and abs(a[0]), b[-1] and abs(a[-1])] + [abs(x) + abs(y) - abs(x + y) for (x, y, u) in zip(a, a[1:], b[1:]) if u])))", "from itertools import *\nf = abs\nfor s in [*open(0)][2::2]:\n    (a, b) = zip(*((int(k), len([*g])) for (k, g) in groupby(s.split())))\n    a = [x - y << 1 for (x, y) in zip(a, a[1:])] or [0]\n    print(sum(map(f, a)) - max((k < 2 and f(x) + f(y) - f(x + y) for (x, y, k) in zip([-a[0] // 2] + a, a + [-a[-1] // 2], b))) >> 1)", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    arr = list(map(int, input().split()))\n    count = [abs(arr[0] - arr[1]), abs(arr[0] - arr[1])]\n    count2 = [0, 0]\n    for i in range(2, len(arr)):\n        count.append(abs(arr[i] - arr[i - 1]))\n        count2.append(abs(arr[i] - arr[i - 2]))\n    if len(arr) > 2:\n        res = sum(count) - count[0]\n        real_res = res\n        if real_res > res - count[1]:\n            real_res = res - count[1]\n        if real_res > res - count[len(arr) - 1]:\n            real_res = res - count[len(arr) - 1]\n        for i in range(2, len(arr)):\n            if real_res > res - count[i - 1] - count[i] + count2[i]:\n                real_res = res - count[i - 1] - count[i] + count2[i]\n        print(real_res)\n    else:\n        print(0)", "t = int(input())\n\ndef main(n, d):\n    s = 0\n    m = 0\n    for i in range(1, n):\n        s += abs(d[i] - d[i - 1])\n        a = abs(d[i] - d[i - 1]) + (abs(d[i] - d[i + 1]) if i != n - 1 else 0) - (abs(d[i - 1] - d[i + 1]) if i != n - 1 else 0)\n        if a > m:\n            m = a\n    if abs(d[1] - d[0]) > m:\n        m = abs(d[1] - d[0])\n    return s - m\nfor _ in range(t):\n    n = int(input())\n    (*d,) = map(int, input().split())\n    print(main(n, d))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    deltas = []\n    for i in range(1, n):\n        deltas.append(arr[i] - arr[i - 1])\n    minus = 0\n    for i in range(len(deltas) - 1):\n        (a, b) = (deltas[i], deltas[i + 1])\n        if a > 0 and b < 0:\n            minus = max(minus, min(a, -b) * 2)\n        elif a < 0 and b > 0:\n            minus = max(minus, min(-a, b) * 2)\n    minus = max(minus, abs(deltas[0]))\n    minus = max(minus, abs(deltas[-1]))\n    d2 = [abs(i) for i in deltas]\n    print(sum(d2) - minus)", "def solve():\n    N = int(input())\n    A = list(map(int, input().split()))\n    ans = 0\n    for i in range(1, N):\n        ans += abs(A[i] - A[i - 1])\n    mx = max(abs(A[1] - A[0]), abs(A[N - 1] - A[N - 2]))\n    for i in range(1, N - 1):\n        mx = max(mx, abs(A[i] - A[i - 1]) + abs(A[i + 1] - A[i]) - abs(A[i + 1] - A[i - 1]))\n    print(ans - mx)\nT = int(input())\nfor i in range(T):\n    solve()", "def solve():\n    n = int(input())\n    a = [0] + list(map(int, input().split()))\n    ans = 0\n    for i in range(2, n + 1):\n        ans += abs(a[i] - a[i - 1])\n    mx = max(abs(a[2] - a[1]), abs(a[n] - a[n - 1]))\n    for i in range(2, n):\n        mx = max(mx, abs(a[i] - a[i - 1]) + abs(a[i + 1] - a[i]) - abs(a[i + 1] - a[i - 1]))\n    print(ans - mx)\nt = int(input())\nfor _ in range(t):\n    solve()", "def solve():\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in range(1, n):\n        ans += abs(l[i] - l[i - 1])\n    mx = max(abs(l[0] - l[1]), abs(l[n - 1] - l[n - 2]))\n    for i in range(1, n - 1):\n        mx = max(mx, abs(l[i] - l[i - 1]) + abs(l[i + 1] - l[i]) - abs(l[i + 1] - l[i - 1]))\n    return ans - mx\nfor _ in range(int(input())):\n    print(solve())", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    j = 1\n    x = 0\n    while j <= len(a) - 1:\n        x = x + abs(a[j] - a[j - 1])\n        j = j + 1\n    diffs = list()\n    diffs.append(abs(a[1] - a[0]))\n    diffs.append(abs(a[len(a) - 1] - a[len(a) - 2]))\n    k = 1\n    while k <= len(a) - 2:\n        diffs.append(abs(a[k] - a[k - 1]) + abs(a[k + 1] - a[k]) - abs(a[k + 1] - a[k - 1]))\n        k = k + 1\n    y = max(diffs)\n    print(x - y)\nnum_test = int(input())\nfor i in range(num_test):\n    solve()", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    s = 0\n    if n == 1:\n        print(0)\n        continue\n    for i in range(1, len(a)):\n        s += abs(a[i] - a[i - 1])\n    v = 0\n    n = len(a)\n    v = max(abs(a[0] - a[1]), abs(a[n - 1] - a[n - 2]))\n    if n > 2:\n        v = max(v, max([abs(a[i] - a[i - 1]) + abs(a[i + 1] - a[i]) - abs(a[i + 1] - a[i - 1]) for i in range(1, n - 1)]))\n    print(s - v)", "def suffixOperations(n, array):\n    a = []\n    a.append(abs(array[1] - array[0]))\n    a.append(abs(array[-1] - array[-2]))\n    for x in range(1, n - 1):\n        p = (array[x - 1] + array[x + 1]) // 2\n        a.append(abs(array[x - 1] - array[x]) + abs(array[x + 1] - array[x]) - (abs(array[x - 1] - p) + abs(array[x + 1] - p)))\n    ans = 0\n    for x in range(n - 1):\n        ans += abs(array[x] - array[x + 1])\n    ans -= max(a)\n    return ans\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(suffixOperations(n, l))", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_list_string():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\n\ndef get_print_int(x):\n    sys.stdout.write(str(x) + '\\n')\n\ndef get_print(x):\n    sys.stdout.write(x + '\\n')\nfrom sys import maxsize\nfrom bisect import bisect_left\n\ndef solve():\n    for _ in range(get_int()):\n        n = get_int()\n        arr = get_list()\n        first = 0\n        for i in range(n - 1):\n            first += abs(arr[i] - arr[i + 1])\n        minn = min(first, first - abs(arr[0] - arr[1]), first - abs(arr[-1] - arr[-2]))\n        for i in range(1, n - 1):\n            minn = min(minn, first - abs(arr[i - 1] - arr[i]) - abs(arr[i] - arr[i + 1]) + abs(arr[i - 1] - arr[i + 1]))\n        get_print_int(minn)\nsolve()", "from sys import stdin\ninput = stdin.readline\n\ndef solve():\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in range(1, n):\n        ans += abs(l[i] - l[i - 1])\n    mx = max(abs(l[0] - l[1]), abs(l[n - 1] - l[n - 2]))\n    for i in range(1, n - 1):\n        mx = max(mx, abs(l[i] - l[i - 1]) + abs(l[i + 1] - l[i]) - abs(l[i + 1] - l[i - 1]))\n    return ans - mx\nfor _ in range(int(input())):\n    print(solve())", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    data = input().split(' ')\n    if n < 3:\n        print(0)\n    else:\n        data = list(map(int, data))\n        total = 0\n        diff = [0] * (len(data) - 1)\n        for j in range(len(data) - 1):\n            diff[j] = abs(data[j + 1] - data[j])\n            total += diff[j]\n        best = max(diff[0], diff[-1])\n        for j in range(len(data) - 2):\n            x = abs(data[j + 2] - data[j])\n            save = diff[j] + diff[j + 1] - x\n            if save > best:\n                best = save\n        print(total - best)", "import sys\nimport math\nfrom collections import Counter, defaultdict\nLI = lambda : list(map(int, input().split()))\nMAP = lambda : map(int, input().split())\nIN = lambda : int(input())\nS = lambda : input()\n\ndef case():\n    n = IN()\n    a = LI()\n    ans = 0\n    for i in range(1, n):\n        ans += abs(a[i] - a[i - 1])\n    x = ans\n    ans = min(ans, x - abs(a[1] - a[0]))\n    for i in range(1, n - 1):\n        ans = min(ans, x - abs(a[i] - a[i - 1]) - abs(a[i] - a[i + 1]) + abs(a[i + 1] - a[i - 1]))\n    print(min(ans, x - abs(a[-1] - a[-2])))\nfor _ in range(IN()):\n    case()", "from itertools import *\nfor s in [*open(0)][2::2]:\n    (a, b) = zip(*((int(k), len([*g]) < 2) for (k, g) in groupby(s.split())))\n    print(a[1:] and sum((abs(x - y) for (x, y) in zip(a, a[1:]))) - max([b[0] and abs(a[1] - a[0]), b[-1] and abs(a[-1] - a[-2])] + [abs(x - y) + abs(y - z) - abs(x - z) for (x, y, z, u) in zip(a, a[1:], a[2:], b[1:]) if u]) or 0)", "from itertools import *\nfor s in [*open(0)][2::2]:\n    (a, b) = zip(*((int(k), len([*g]) < 2) for (k, g) in groupby(s.split())))\n    r = sum((abs(x - y) for (x, y) in zip(a, a[1:])))\n    print(r and r - max([b[0] and abs(a[1] - a[0]), b[-1] and abs(a[-1] - a[-2])] + [abs(x - y) + abs(y - z) - abs(x - z) for (x, y, z, u) in zip(a, a[1:], a[2:], b[1:]) if u]))", "from itertools import *\nfor s in [*open(0)][2::2]:\n    (a, b) = zip(*((int(k), len([*g])) for (k, g) in groupby(s.split())))\n    a = [x - y for (x, y) in zip(a, a[1:])] or [0]\n    print(sum(map(abs, a)) - max((k < 2 and int(abs(x) + abs(y) - abs(x + y)) for (x, y, k) in zip([-a[0] * 0.5] + a, a + [-a[-1] * 0.5], b))))", "def solve():\n    n = int(input())\n    a = [0] + list(map(int, input().split()))\n    ans = 0\n    for i in range(2, n + 1):\n        ans += abs(a[i] - a[i - 1])\n    mx = max(abs(a[2] - a[1]), abs(a[n] - a[n - 1]))\n    for i in range(2, n):\n        mx = max(mx, abs(a[i] - a[i - 1]) + abs(a[i + 1] - a[i]) - abs(a[i + 1] - a[i - 1]))\n    print(ans - mx)\nT = int(input())\nfor Case in range(T):\n    solve()", "def solve(n, a):\n    ans = 0\n    for i in range(1, n):\n        ans += abs(a[i] - a[i - 1])\n    pr = ans\n    pr -= abs(a[0] - a[1])\n    for i in range(1, n):\n        tmp = ans\n        tmp -= abs(a[i] - a[i - 1])\n        if i != n - 1:\n            tmp -= abs(a[i] - a[i + 1])\n            tmp += abs(a[i + 1] - a[i - 1])\n        pr = min(pr, tmp)\n    return pr\nt = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(n, a))\n    t -= 1", "def solve():\n    n = int(input())\n    a = [0] + [int(i) for i in input().split()]\n    ans = 0\n    mx = max(abs(a[1] - a[2]), abs(a[n] - a[n - 1]))\n    for i in range(2, n + 1):\n        ans += abs(a[i] - a[i - 1])\n    for i in range(2, n):\n        mx = max(mx, abs(a[i] - a[i - 1]) + abs(a[i + 1] - a[i]) - abs(a[i - 1] - a[i + 1]))\n    print(ans - mx)\nt = int(input())\nfor _ in range(t):\n    solve()", "from itertools import *\nfor s in [*open(0)][2::2]:\n    (a, b) = zip(*((int(k), len([*g])) for (k, g) in groupby(s.split())))\n    a = [x - y << 1 for (x, y) in zip(a, a[1:])] or [0]\n    print(sum(map(abs, a)) - max((k < 2 and abs(x) + abs(y) - abs(x + y) for (x, y, k) in zip([-a[0] // 2] + a, a + [-a[-1] // 2], b))) >> 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    ans = 0\n    for j in range(1, n):\n        ans += abs(a[j] - a[j - 1])\n    mx = max(abs(a[1] - a[0]), abs(a[n - 1] - a[n - 2]))\n    for j in range(1, n - 1):\n        mx = max(mx, abs(a[j] - a[j - 1]) + abs(a[j] - a[j + 1]) - abs(a[j + 1] - a[j - 1]))\n    ans -= mx\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    num = list(map(int, input().split()))\n    diff = 0\n    for i in range(n - 1):\n        diff += abs(num[i] - num[i + 1])\n    chng = max(abs(num[0] - num[1]), abs(num[n - 1] - num[n - 2]))\n    for i in range(1, n - 1):\n        chng = max(chng, abs(abs(num[i] - num[i - 1]) + abs(num[i + 1] - num[i]) - abs(num[i - 1] - num[i + 1])))\n    print(diff - chng)", "for tt in range(int(input())):\n    n = int(input())\n    d = [int(i) for i in input().split()]\n    diff = [abs(d[i] - d[i - 1]) for i in range(1, n)]\n    ans_ = sum(diff)\n    ans = ans_ - diff[0]\n    for i in range(1, n):\n        ans__ = ans_ - diff[i - 1] + (0 if i == n - 1 else abs(d[i + 1] - d[i - 1]) - diff[i])\n        ans = min(ans, ans__)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = abs(l[0] - l[1])\n    mx = 0\n    an = 0\n    for i in range(1, n - 1):\n        an += abs(l[i] - l[i - 1])\n        if ans < abs(l[i] - l[i - 1]) + abs(l[i + 1] - l[i]) - abs(l[i - 1] - l[i + 1]):\n            ans = max(ans, abs(l[i] - l[i - 1]) + abs(l[i + 1] - l[i]) - abs(l[i - 1] - l[i + 1]))\n            mx = i\n    an += abs(l[n - 1] - l[n - 2])\n    if ans < abs(l[n - 1] - l[n - 2]):\n        ans = max(ans, abs(l[n - 1] - l[n - 2]))\n        mx = n - 1\n    print(an - ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = 0\n    a = [int(i) for i in input().split()]\n    for i in range(0, n - 1):\n        s += abs(a[i] - a[i + 1])\n    ans = s\n    ans = min(ans, s - abs(a[0] - a[1]))\n    ans = min(ans, s - abs(a[n - 2] - a[n - 1]))\n    for i in range(1, n - 1):\n        ans = min(ans, s - abs(a[i - 1] - a[i]) - abs(a[i] - a[i + 1]) + abs(a[i - 1] - a[i + 1]))\n    print(ans)", "def findMinRemoval(arr, n):\n    value = 0\n    maximum = 0\n    if n == 1:\n        return 0\n    for i in range(n):\n        if i != 0 and i != n - 1:\n            value = value + abs(arr[i] - arr[i + 1])\n            temp = abs(arr[i] - arr[i + 1]) + abs(arr[i] - arr[i - 1]) - abs(arr[i - 1] - arr[i + 1])\n        elif i == 0:\n            value = value + abs(arr[i] - arr[i + 1])\n            temp = abs(arr[i] - arr[i + 1])\n        else:\n            temp = abs(arr[i] - arr[i - 1])\n        maximum = max(maximum, temp)\n    return value - maximum\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(findMinRemoval(arr, n))", "import sys\nimport math, bisect, operator\n(inf, m) = (float('inf'), 10 ** 9 + 7)\nsys.setrecursionlimit(10 ** 5)\nfrom itertools import groupby, accumulate\nfrom heapq import heapify, heappop, heappush\nfrom collections import deque, Counter, defaultdict\nI = lambda : int(sys.stdin.readline())\nneo = lambda : map(int, sys.stdin.readline().split())\nNeo = lambda : list(map(int, sys.stdin.readline().split()))\nfor _ in range(I()):\n    n = I()\n    A = Neo()[::-1]\n    Ans = 0\n    for (i, j) in zip(A, A[1:]):\n        Ans += abs(i - j)\n    tot = Ans\n    for (i, j, k) in zip(A, A[1:], A[2:]):\n        Ans = min(Ans, tot - abs(i - j) - abs(j - k) + abs(i - k))\n    Ans = min(Ans, tot - abs(A[0] - A[1]), tot - abs(A[-1] - A[-2]))\n    print(Ans)", "t = int(input())\noutput = []\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    tot = 0\n    for j in range(1, len(a)):\n        tot += abs(a[j] - a[j - 1])\n    if n == 2:\n        output.append(0)\n        continue\n    mx2 = 0\n    mx2 = max(mx2, abs(a[0] - a[1]))\n    mx2 = max(mx2, abs(a[n - 1] - a[n - 2]))\n    mx = 0\n    for j in range(1, n - 1):\n        temp = abs(a[j] - a[j - 1]) + abs(a[j] - a[j + 1])\n        temp -= abs(a[j - 1] - a[j + 1])\n        mx = max(mx, temp)\n    z = tot - mx\n    z2 = tot - mx2\n    output.append(min(z, z2))\nprint('\\n'.join(list(map(str, output))))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    deltas = []\n    for i in range(1, n):\n        deltas.append(arr[i] - arr[i - 1])\n    minus = 0\n    for i in range(len(deltas) - 1):\n        (a, b) = (deltas[i], deltas[i + 1])\n        if a > 0 and b < 0:\n            minus = max(minus, min(a, -b) * 2)\n        elif a < 0 and b > 0:\n            minus = max(minus, min(-a, b) * 2)\n    minus = max(minus, abs(deltas[0]))\n    minus = max(minus, abs(deltas[-1]))\n    d2 = [abs(i) for i in deltas]\n    print(sum(d2) - minus)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    mass = list(map(int, input().split()))\n    mas = []\n    for i in range(1, n):\n        mas.append(mass[-i - 1] - mass[-i])\n    l = len(mas)\n    s = 0\n    for i in mas:\n        s += abs(i)\n    s_min = s\n    if s - abs(mas[0]) < s_min:\n        s_min = s - abs(mas[0])\n    for i in range(1, l):\n        res = s - abs(mas[i]) + abs(mas[i] + mas[i - 1]) - abs(mas[i - 1])\n        if res < s_min:\n            s_min = res\n    if s - abs(mas[l - 1]) < s_min:\n        s_min = s - abs(mas[l - 1])\n    print(s_min)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    if n <= 2:\n        print(0)\n        continue\n    k = [abs(a[0] - a[1])]\n    for i in range(1, n - 1):\n        if a[i - 1] > a[i] and a[i + 1] > a[i]:\n            k.append(2 * (min(a[i - 1], a[i + 1]) - a[i]))\n        elif a[i] > a[i + 1] and a[i] > a[i - 1]:\n            k.append(2 * (a[i] - max(a[i - 1], a[i + 1])))\n        else:\n            k.append(0)\n    k.append(abs(a[-1] - a[-2]))\n    for i in range(1, n):\n        b.append(abs(a[i] - a[i - 1]))\n    s = sum(b)\n    print(s - max(k))", "for i in range(int(input())):\n    x = int(input())\n    a = list(map(int, input().split()))\n    summ = 0\n    for j in range(1, x):\n        summ += abs(a[j] - a[j - 1])\n    maxx = abs(a[1] - a[0])\n    for j in range(2, x):\n        if maxx < abs(a[j] - a[j - 1]) + abs(a[j - 1] - a[j - 2]) - abs(a[j] - a[j - 2]):\n            maxx = abs(a[j] - a[j - 1]) + abs(a[j - 1] - a[j - 2]) - abs(a[j] - a[j - 2])\n    if maxx < abs(a[x - 1] - a[x - 2]):\n        maxx = abs(a[x - 1] - a[x - 2])\n    print(str(summ - maxx))", "for _ in range(int(input())):\n    n = int(input())\n    diff = 0\n    ans = 0\n    a = list(map(int, input().split()))\n    b = [a[i + 1] - a[i] for i in range(n - 1)]\n    mx = abs(b[0])\n    for i in range(n - 2):\n        if b[i] * b[i + 1] < 0:\n            mx = max(mx, abs(b[i]) + abs(b[i + 1]) - abs(b[i] + b[i + 1]))\n        ans += abs(b[i])\n    mx = max(mx, abs(b[-1]))\n    print(ans + abs(b[-1]) - mx)", "import math\n\ndef main():\n    n = int(input())\n    lst = list(map(int, input().split()))\n    ind = 0\n    dif = 0\n    for i in range(n):\n        cur_df = 0\n        if i == 0:\n            cur_df = abs(lst[i + 1] - lst[i])\n        elif i == n - 1:\n            cur_df = abs(lst[i - 1] - lst[i])\n        elif lst[i + 1] > lst[i] and lst[i - 1] > lst[i] or (lst[i + 1] < lst[i] and lst[i - 1] < lst[i]):\n            cur_df = 2 * min(abs(lst[i + 1] - lst[i]), abs(lst[i - 1] - lst[i]))\n        else:\n            cur_df = 0\n        if cur_df > dif:\n            dif = cur_df\n            ind = i\n    if ind == 0:\n        lst[0] = lst[1]\n    elif ind == n - 1:\n        lst[-1] = lst[-2]\n    elif lst[ind] > lst[ind + 1]:\n        if lst[ind + 1] > lst[ind - 1]:\n            lst[ind] = lst[ind - 1]\n        else:\n            lst[ind] = lst[ind + 1]\n    elif lst[ind + 1] < lst[ind - 1]:\n        lst[ind] = lst[ind - 1]\n    else:\n        lst[ind] = lst[ind + 1]\n    dif = 0\n    for i in range(n - 1, 0, -1):\n        dif += abs(lst[i] - lst[i - 1])\n    print(dif)\nt = int(input())\nfor i in range(t):\n    main()", "for y in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    dif = [0] * (n - 1)\n    for i in range(n - 2, -1, -1):\n        dif[i] = abs(lst[i] - lst[i + 1])\n    summ = sum(dif)\n    minn = 100000000000000001\n    for i in range(n):\n        if i == 0:\n            minn = min(minn, summ - dif[0])\n        elif i == n - 1:\n            minn = min(minn, summ - dif[-1])\n        else:\n            minn = min(minn, summ - dif[i - 1] - dif[i] + abs(lst[i - 1] - lst[i + 1]))\n    print(minn)", "def foo(l):\n    n = len(l)\n    count = 0\n    for i in range(1, n):\n        count += abs(l[i] - l[i - 1])\n    return count\nt = int(input())\nfor f in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    if n == 2:\n        print(0)\n    else:\n        l1 = []\n        out = foo(l)\n        l1.append(abs(l[1] - l[0]))\n        l1.append(abs(l[-1] - l[-2]))\n        for i in range(1, len(l) - 1):\n            l1.append(abs(l[i + 1] - l[i]) + abs(l[i] - l[i - 1]) - abs(l[i + 1] - l[i - 1]))\n        print(out - max(l1))", "t = int(input())\nfor z in range(t):\n    n = int(input())\n    q = set()\n    arr = list(map(int, input().split()))\n    count = 0\n    for i in range(n - 1):\n        count = count + abs(arr[i + 1] - arr[i])\n    for i in range(1, n - 1):\n        q.add(count - abs(arr[i + 1] - arr[i]) - abs(arr[i] - arr[i - 1]) + abs(arr[i + 1] - arr[i - 1]))\n    q.add(count - abs(arr[1] - arr[0]))\n    q.add(count - abs(arr[n - 1] - arr[n - 2]))\n    print(min(q))", "number = int(input(''))\n\ndef sumAbs(dif):\n    sum = 0\n    for i in range(len(dif)):\n        sum += abs(dif[i])\n    return sum\nfor j in range(number):\n    n = int(input(''))\n    numbers = []\n    num = input('')\n    num = num.split(' ')\n    difference = []\n    for i in range(n):\n        numbers.append(int(num[i]))\n    for i in range(n - 1):\n        difference.append(numbers[i + 1] - numbers[i])\n    maxchange = 0\n    maxchangeloc = -1\n    newchange = 0\n    last = False\n    first = False\n    for i in range(len(difference) - 1):\n        adding = abs(difference[i] + difference[i + 1])\n        change = abs(difference[i]) + abs(difference[i + 1]) - adding\n        if change > maxchange:\n            newchange = adding\n            maxchange = change\n            changeloc = i\n    if abs(difference[-1]) > maxchange:\n        maxchange = abs(difference[-1])\n        last = True\n    if abs(difference[0]) > maxchange:\n        last = False\n        first = True\n    if maxchange == 0 and (not last) and (not first):\n        print(sumAbs(difference))\n    else:\n        if last:\n            sum1 = 0\n            del difference[-1]\n        elif first:\n            sum1 = 0\n            del difference[0]\n        else:\n            sum1 = abs(newchange)\n            del difference[changeloc]\n            del difference[changeloc]\n        sum1 += sumAbs(difference)\n        print(sum1)", "test = int(input())\nfor _ in range(test):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    cost = 0\n    for i in range(n - 1):\n        cost += abs(arr[i] - arr[i + 1])\n    reduced = max(abs(arr[0] - arr[1]), abs(arr[n - 1] - arr[n - 2]))\n    for i in range(1, n - 1):\n        reduced = max(reduced, abs(arr[i - 1] - arr[i]) + abs(arr[i] - arr[i + 1]) - abs(arr[i - 1] - arr[i + 1]))\n    print(cost - reduced)", "for _ in range(int(input())):\n    n = int(input())\n    s = [0] + list(map(int, input().split()))\n    ans = 0\n    for i in range(2, n + 1):\n        ans += abs(s[i] - s[i - 1])\n    mx = max(abs(s[2] - s[1]), abs(s[n] - s[n - 1]))\n    for i in range(2, n):\n        mx = max(mx, abs(s[i] - s[i - 1]) + abs(s[i + 1] - s[i]) - abs(s[i + 1] - s[i - 1]))\n    print(ans - mx)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if n == 2:\n        print(0)\n    else:\n        ans = 0\n        dec = max(abs(arr[1] - arr[0]), abs(arr[n - 1] - arr[n - 2]))\n        for i in range(1, n):\n            ans += abs(arr[i - 1] - arr[i])\n        for i in range(1, n - 1):\n            dec = max(dec, abs(arr[i] - arr[i - 1]) + abs(arr[i + 1] - arr[i]) - abs(arr[i + 1] - arr[i - 1]))\n        print(ans - dec)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split(' ')]\n    anss = []\n    for i in range(1, n):\n        anss.append(abs(a[i] - a[i - 1]))\n    diffs = []\n    for i in range(1, n - 1):\n        diff = abs(a[i] - a[i - 1]) + abs(a[i] - a[i + 1]) - abs(a[i - 1] - a[i + 1])\n        diffs.append(diff)\n    diffs.append(abs(a[0] - a[1]))\n    diffs.append(abs(a[n - 1] - a[n - 2]))\n    print(sum(anss) - max(diffs))", "a = int(input())\nfor i in range(a):\n    b = int(input())\n    arr = list(map(int, input().split()))\n    arr = arr[::-1]\n    ans = []\n    for i in range(0, len(arr) - 1):\n        ans.append(abs(arr[i + 1] - arr[i]))\n    rep = abs(arr[1] - arr[0])\n    for i in range(1, len(arr) - 1):\n        if abs(arr[i] - arr[i + 1]) + abs(arr[i] - arr[i - 1]) - abs(arr[i + 1] - arr[i - 1]) > rep:\n            rep = abs(arr[i] - arr[i + 1]) + abs(arr[i] - arr[i - 1]) - abs(arr[i + 1] - arr[i - 1])\n    rep = max(rep, abs(arr[len(arr) - 1] - arr[len(arr) - 2]))\n    print(sum(ans) - rep)", "for i in range(int(input())):\n    n = int(input())\n    d = list(map(int, input().split()))\n    l = len(d)\n    d_diff = [el for el in d]\n    d_diff[0] = abs(d[1] - d[0])\n    d_diff[-1] = abs(d[-1] - d[-2])\n    for i in range(1, len(d) - 1):\n        d_diff[i] = abs(d[i - 1] - d[i]) - abs(d[i + 1] - d[i - 1]) + abs(d[i] - d[i + 1])\n    mx = max(d_diff)\n    mx_index = d_diff.index(mx)\n    if mx_index == 0:\n        d[mx_index] = d[1]\n    elif mx_index == len(d) - 1:\n        d[-1] = d[-2]\n    else:\n        d[mx_index] = d[mx_index + 1]\n    steps = 0\n    for i in range(len(d) - 1):\n        steps += abs(d[i] - d[i + 1])\n    print(steps)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(s) for s in input().split(' ')]\n    ans = 0\n    for i in range(1, n):\n        ans += abs(a[i] - a[i - 1])\n    mx = max(abs(a[0] - a[1]), abs(a[n - 1] - a[n - 2]))\n    for i in range(1, n - 1):\n        mx = max(mx, abs(a[i] - a[i - 1]) + abs(a[i + 1] - a[i]) - abs(a[i + 1] - a[i - 1]))\n    print(ans - mx)", "import sys\nimport math\nimport random\nfrom queue import PriorityQueue as PQ\nfrom bisect import bisect_left as BSL\nfrom bisect import bisect_right as BSR\nfrom collections import OrderedDict as OD\nfrom collections import Counter\nfrom itertools import permutations\nfrom decimal import Decimal as BIGFLOAT\nmod = 1000000007\nMOD = mod\ntry:\n    sys.stdin = open('actext.txt', 'r')\n    OPENFILE = 1\nexcept:\n    pass\n\ndef get_ints():\n    return map(int, input().split())\n\ndef palindrome(s):\n    mid = len(s) // 2\n    for i in range(mid):\n        if s[i] != s[len(s) - i - 1]:\n            return False\n    return True\n\ndef check(i, n):\n    if 0 <= i < n:\n        return True\n    else:\n        return False\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    arr = list(get_ints())\n    ans1 = max(abs(arr[n - 1] - arr[n - 2]), abs(arr[1] - arr[0]))\n    totalcost = abs(arr[1] - arr[0])\n    for i in range(n - 2, 0, -1):\n        a = abs(arr[i + 1] - arr[i])\n        b = abs(arr[i] - arr[i - 1])\n        c = abs(arr[i + 1] - arr[i - 1])\n        ans1 = max(ans1, abs(c - (a + b)))\n        totalcost += a\n    print(totalcost - ans1)", "t = int(input())\nfor q in range(t):\n    n = int(input())\n    mas = list(map(int, input().split()))\n    maxi = -10 ** 18\n    num = -1\n    for i in range(1, n - 1):\n        d1 = abs(mas[i] - mas[i - 1]) + abs(mas[i + 1] - mas[i])\n        d2 = abs(mas[i - 1] - mas[i + 1])\n        d = d1 - d2\n        if maxi < d:\n            maxi = d\n            num = i\n    if abs(mas[0] - mas[1]) > maxi:\n        maxi = abs(mas[0] - mas[1])\n        num = 0\n    if abs(mas[-1] - mas[-2]) > maxi:\n        maxi = abs(mas[-1] - mas[-2])\n        num = n - 1\n    if num != -1:\n        del mas[num]\n    ans = 0\n    for i in range(len(mas) - 1):\n        ans += abs(mas[i] - mas[i + 1])\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    data = list(map(int, input().split()))\n    if n <= 2:\n        print(0)\n    else:\n        m = max(abs(data[1] - data[0]), abs(data[-1] - data[-2]))\n        for j in range(1, n - 1):\n            m = max(m, abs(data[j] - data[j - 1]) + abs(data[j] - data[j + 1]) - abs(data[j + 1] - data[j - 1]))\n        res = 0\n        for j in range(1, n):\n            res += abs(data[j] - data[j - 1])\n        print(res - m)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 1):\n        ans += abs(a[i] - a[i + 1])\n    c = 0\n    c = max(abs(a[1] - a[0]), c)\n    c = max(c, abs(a[-1] - a[-2]))\n    for i in range(1, n - 1):\n        c = max(c, abs(a[i] - a[i + 1]) + abs(a[i] - a[i - 1]) - abs(a[i - 1] - a[i + 1]))\n    print(ans - c)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = 0\n    best = max(abs(a[-1] - a[-2]), abs(a[1] - a[0]))\n    for i in range(n - 2, -1, -1):\n        m += abs(a[i + 1] - a[i])\n        if i + 2 < n:\n            best = max(best, -abs(a[i] - a[i + 2]) + (abs(a[i] - a[i + 1]) + abs(a[i + 1] - a[i + 2])))\n    print(m - best)", "from math import *\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    val1 = abs(a[0] - a[1])\n    val2 = abs(a[n - 1] - a[n - 2])\n    l = []\n    ss = 0\n    for i in range(1, n - 1):\n        l.append(abs(a[i] - a[i - 1]) + abs(a[i] - a[i + 1]) - abs(a[i - 1] - a[i + 1]))\n    for i in range(1, n):\n        ss = ss + abs(a[i] - a[i - 1])\n    if len(l) != 0:\n        print(ss - max(val1, val2, max(l)))\n    else:\n        print(ss - max(val1, val2))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    lst = arr.copy()\n    if n == 2:\n        print(0)\n    else:\n        cnt = reductn = 0\n        for i in range(n - 1, 0, -1):\n            cnt += abs(lst[i] - lst[i - 1])\n            lst[i] = lst[i - 1]\n            if i != n - 1:\n                k = abs(arr[i] - arr[i - 1]) + abs(arr[i + 1] - arr[i]) - abs(arr[i + 1] - arr[i - 1])\n                if reductn < k:\n                    reductn = k\n        if reductn < abs(arr[0] - arr[1]):\n            reductn = abs(arr[0] - arr[1])\n        if reductn < abs(arr[-1] - arr[-2]):\n            reductn = abs(arr[-1] - arr[-2])\n        print(cnt - reductn)", "test = int(input())\nfor i in range(test):\n    n = int(input())\n    s = 0\n    l = list(map(int, input().split()))\n    for i in range(n - 1):\n        s += abs(l[i] - l[i + 1])\n    small = min(s, s - abs(l[1] - l[0]), s - abs(l[n - 1] - l[n - 2]))\n    for i in range(1, n - 1):\n        small = min(small, s - abs(l[i] - l[i - 1]) - abs(l[i + 1] - l[i]) + abs(l[i + 1] - l[i - 1]))\n    print(small)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    for i in range(n - 1):\n        s += abs(a[i] - a[i + 1])\n    ans = max(abs(a[0] - a[1]), abs(a[n - 2] - a[n - 1]))\n    for i in range(1, n - 1):\n        ans = max(ans, abs(a[i] - a[i - 1]) + abs(a[i] - a[i + 1]) - abs(a[i - 1] - a[i + 1]))\n    print(s - ans)", "def max(a, b):\n    if a > b:\n        return a\n    else:\n        return b\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = 0\n    for i in range(1, n):\n        x += abs(a[i] - a[i - 1])\n    y1 = abs(a[1] - a[0])\n    y2 = abs(a[-1] - a[-2])\n    y3 = 0\n    for i in range(1, n - 1):\n        d = abs(a[i] - a[i - 1]) + abs(a[i + 1] - a[i]) - abs(a[i + 1] - a[i - 1])\n        if y3 < d:\n            y3 = d\n    y = max(y1, max(y2, y3))\n    print(x - y)", "for _ in range(int(input())):\n    n = int(input())\n    a = [0, *map(int, input().split())]\n    ans = 0\n    for i in range(2, n + 1):\n        ans += abs(a[i] - a[i - 1])\n    mx = max(abs(a[2] - a[1]), abs(a[n] - a[n - 1]))\n    for i in range(2, n):\n        mx = max(mx, abs(a[i] - a[i - 1]) + abs(a[i + 1] - a[i]) - abs(a[i + 1] - a[i - 1]))\n    print(ans - mx)", "a = int(input())\nfor x in range(a):\n    b = int(input())\n    c = list(map(int, input().split()))\n    if len(list(set(c))) == 1:\n        print(0)\n    else:\n        d = 0\n        for y in range(b - 1):\n            d += abs(c[y] - c[y + 1])\n        h = min(d, d - abs(c[0] - c[1]), d - abs(c[-2] - c[-1]))\n        for y in range(1, b - 1):\n            h = min(h, d - (abs(c[y] - c[y - 1]) + abs(c[y + 1] - c[y]) - abs(c[y - 1] - c[y + 1])))\n        print(h)", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    change = 0\n    for i in range(n):\n        if i == 0:\n            change = max(change, abs(a[1] - a[0]))\n        elif i == n - 1:\n            change = max(change, abs(a[n - 1] - a[n - 2]))\n        else:\n            change = max(change, abs(a[i + 1] - a[i]) + abs(a[i] - a[i - 1]) - abs(a[i + 1] - a[i - 1]))\n    s = 0\n    for i in range(n - 1):\n        s += abs(a[i + 1] - a[i])\n    print(s - change)", "for u in range(int(input())):\n    n = int(input())\n    x = [int(w) for w in input().split()]\n    x = x[::-1]\n    ans = 0\n    for i in range(1, n):\n        ans += abs(x[i] - x[i - 1])\n    t = ans - abs(x[1] - x[0])\n    for i in range(1, n - 1):\n        t = min(t, ans + abs(x[i + 1] - x[i - 1]) - abs(x[i] - x[i - 1]) - abs(x[i] - x[i + 1]))\n    t = min(t, ans - abs(x[n - 1] - x[n - 2]))\n    print(t)", "import sys\nout = []\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, sys.stdin.readline().split()))\n    mx = 0\n    ans = 0\n    for i in range(1, n - 1):\n        bfchange = abs(l[i - 1] - l[i]) + abs(l[i + 1] - l[i])\n        reduced = bfchange - abs(l[i - 1] - l[i + 1])\n        mx = max(mx, reduced)\n        ans += abs(l[i - 1] - l[i])\n    ans += abs(l[-2] - l[-1])\n    mx = max(mx, abs(l[0] - l[1]), abs(l[-1] - l[-2]))\n    out.append(ans - mx)\nprint('\\n'.join((str(x) for x in out)))", "for i in range(int(input())):\n    n = int(input())\n    s = 0\n    l = list(map(int, input().split()))\n    for i in range(n - 1):\n        s += abs(l[i] - l[i + 1])\n    sm = min(s, s - abs(l[1] - l[0]), s - abs(l[n - 1] - l[n - 2]))\n    for i in range(1, n - 1):\n        sm = min(sm, s - abs(l[i] - l[i - 1]) - abs(l[i + 1] - l[i]) + abs(l[i + 1] - l[i - 1]))\n    print(sm)", "A = abs\nfor s in [*open(0)][2::2]:\n    l = [*map(int, s.split())]\n    a = A(l[1] - l[0])\n    m = max(A(l[0] - l[1]), A(l[-1] - l[-2]))\n    for i in range(1, len(l) - 1):\n        a += abs(l[i] - l[i + 1])\n        m = max(m, A(l[i + 1] - l[i]) + A(l[i - 1] - l[i]) - A(l[i + 1] - l[i - 1]))\n    print(a - m)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = [0] + list(map(int, input().split()))\n    ans = 0\n    for i in range(2, n + 1):\n        ans = ans + abs(arr[i] - arr[i - 1])\n    mx = max(abs(arr[1] - arr[2]), abs(arr[n] - arr[n - 1]))\n    for i in range(2, n):\n        mx = max(mx, abs(arr[i] - arr[i - 1]) + abs(arr[i] - arr[i + 1]) - abs(arr[i - 1] - arr[i + 1]))\n    f_ans = ans - mx\n    print(f_ans)\n    t = t - 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    res = 0\n    for i in range(1, n):\n        res += abs(a[i] - a[i - 1])\n    sub = max(abs(a[1] - a[0]), abs(a[n - 1] - a[n - 2]))\n    for i in range(1, n - 1):\n        sub = max(sub, abs(a[i] - a[i - 1]) + abs(a[i + 1] - a[i]) - abs(a[i + 1] - a[i - 1]))\n    print(res - sub)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    for i in range(1, n):\n        ans += abs(arr[i] - arr[i - 1])\n    mini = min(ans - abs(arr[0] - arr[1]), ans - abs(arr[n - 1] - arr[n - 2]))\n    for i in range(1, n - 1):\n        mini = min(mini, ans - (abs(arr[i] - arr[i - 1]) + abs(arr[i] - arr[i + 1])) + abs(arr[i - 1] - arr[i + 1]))\n    print(mini)", "for i in range(int(input())):\n    n = int(input())\n    a = [0] + list(map(int, input().split()))\n    ans = 0\n    for i in range(2, n + 1):\n        ans += abs(a[i] - a[i - 1])\n    mx = max(abs(a[2] - a[1]), abs(a[n] - a[n - 1]))\n    for i in range(2, n):\n        mx = max(mx, abs(a[i] - a[i - 1]) + abs(a[i + 1] - a[i]) - abs(a[i + 1] - a[i - 1]))\n    print(ans - mx)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n <= 2:\n        print(0)\n        continue\n    p = abs(a[0] - a[1])\n    s = p\n    for i in range(1, n - 1):\n        p = max(p, abs(abs(a[i] - a[i - 1]) + abs(a[i] - a[i + 1]) - abs(a[i - 1] - a[i + 1])))\n        s += abs(a[i] - a[i + 1])\n    p = max(p, abs(a[n - 1] - a[n - 2]))\n    print(s - p)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = abs(a[0] - a[1])\n    m = 0\n    for i in range(1, n - 1):\n        if a[i - 1] < a[i] > a[i + 1] or a[i - 1] > a[i] < a[i + 1]:\n            k = abs(a[i - 1] - a[i]) + abs(a[i] - a[i + 1]) - abs(a[i - 1] - a[i + 1])\n            if m < k:\n                m = k\n        ans += abs(a[i] - a[i + 1])\n    m = max(abs(a[0] - a[1]), abs(a[-1] - a[-2]), m)\n    print(ans - m)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n <= 2:\n        print(0)\n        continue\n    p = abs(a[0] - a[1])\n    s = p\n    for i in range(1, n - 1):\n        p = max(p, abs(abs(a[i] - a[i - 1]) + abs(a[i] - a[i + 1]) - abs(a[i - 1] - a[i + 1])))\n        s += abs(a[i] - a[i + 1])\n    p = max(p, abs(a[n - 1] - a[n - 2]))\n    print(s - p)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = 0\n    l = list(map(int, input().split()))\n    for i in range(n - 1):\n        s += abs(l[i] - l[i + 1])\n    sm = min(s, s - abs(l[1] - l[0]), s - abs(l[n - 1] - l[n - 2]))\n    for i in range(1, n - 1):\n        sm = min(sm, s - abs(l[i] - l[i - 1]) - abs(l[i + 1] - l[i]) + abs(l[i + 1] - l[i - 1]))\n    print(sm)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(1, n):\n        ans += abs(a[i - 1] - a[i])\n    mx = max(abs(a[1] - a[0]), abs(a[n - 1] - a[n - 2]))\n    for i in range(1, n - 1):\n        mx = max(mx, abs(abs(a[i] - a[i - 1]) + abs(a[i + 1] - a[i]) - abs(a[i + 1] - a[i - 1])))\n    print(ans - mx)", "for tt in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = 0\n    for i in range(1, n):\n        s += abs(l[i] - l[i - 1])\n    m = max(abs(l[1] - l[0]), abs(l[n - 2] - l[n - 1]))\n    for i in range(1, n - 1):\n        m = max(abs(l[i] - l[i - 1]) + abs(l[i] - l[i + 1]) - abs(l[i - 1] - l[i + 1]), m)\n    print(s - m)", "for _ in ' ' * int(input()):\n    n = int(input())\n    a = list(map(int, input().split()))\n    val = 0\n    for i in range(1, n):\n        val += abs(a[i] - a[i - 1])\n    ans = min(val - abs(a[0] - a[1]), val - abs(a[n - 1] - a[n - 2]))\n    for i in range(1, n - 1):\n        ans = min(ans, val - abs(a[i] - a[i + 1]) - abs(a[i - 1] - a[i]) + abs(a[i + 1] - a[i - 1]))\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [0] + list(map(int, input().split(' ')))\n    ans = 0\n    for i in range(2, n + 1):\n        ans += abs(a[i] - a[i - 1])\n    mx = max(abs(a[2] - a[1]), abs(a[n] - a[n - 1]))\n    for i in range(2, n):\n        mx = max(mx, abs(a[i] - a[i - 1]) + abs(a[i + 1] - a[i]) - abs(a[i + 1] - a[i - 1]))\n    print(ans - mx)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(1, n):\n        ans += abs(a[i] - a[i - 1])\n    mini = min(ans - abs(a[1] - a[0]), ans - abs(a[n - 1] - a[n - 2]))\n    for i in range(1, n - 1):\n        mini = min(mini, ans - (abs(a[i] - a[i - 1]) + abs(a[i + 1] - a[i]) - abs(a[i - 1] - a[i + 1])))\n    print(mini)"]