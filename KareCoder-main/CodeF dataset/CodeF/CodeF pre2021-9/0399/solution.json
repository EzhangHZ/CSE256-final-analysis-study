["t = int(input())\nanswer = []\nfor t in range(t):\n    n = int(input())\n    temp = 2 * n - bin(n).count('1')\n    answer.append(str(temp))\nprint('\\n'.join(answer))", "for nt in range(int(input())):\n    n = int(input())\n    print(2 * n - bin(n).count('1'))", "test_case = int(input())\nmy_list = []\nfor i in range(test_case):\n    my_list.append(int(input()))\nfor x in range(test_case):\n    a = bin(my_list[x])\n    b = a.count('1')\n    print(my_list[x] * 2 - b)", "import sys\nlines = []\nfor line in sys.stdin:\n    if 'Exit' == line.rstrip():\n        break\n    lines.append(line)\nt = int(lines[0])\ncumsum = [0]\nhi = 0\nfor j in range(1, t + 1):\n    n = int(lines[j])\n    s = '{0:064b}'.format(n)\n    counter = s.count('1')\n    print(n * 2 - counter)", "from sys import stdin, stdout\nfrom collections import Counter\n\ndef ai():\n    return list(map(int, stdin.readline().split()))\n\ndef ei():\n    return map(int, stdin.readline().split())\n\ndef ip():\n    return int(stdin.readline().strip())\n\ndef op(ans):\n    return stdout.write(str(ans) + '\\n')\nfor i in range(ip()):\n    n = ip()\n    x = bin(n).count('1')\n    print(2 * n - x)", "for _ in range(int(input())):\n    n = int(input())\n    print(2 * n - bin(n)[2:].count('1'))", "try:\n    for _ in range(int(input())):\n        n = int(input())\n        ca = bin(n).replace('0b', '')\n        ca = ca.count('1')\n        print(2 * n - ca)\nexcept:\n    pass", "t = int(input())\nwhile t:\n    n = int(input())\n    print(2 * n - bin(n).count('1'))\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(2 * n - bin(n).count('1'))", "for _ in range(int(input())):\n    num = int(input())\n    print(2 * num - bin(num).count('1'))", "for _ in range(int(input())):\n    n = int(input())\n    print(2 * n - bin(n).count('1'))", "def fun(k):\n    return 2 * k - bin(k).count('1')\nfor _ in range(int(input())):\n    print(fun(int(input())))", "for _ in range(int(input())):\n    a = int(input())\n    print(2 * a - bin(a).count('1'))", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    print(2 * n - bin(n).count('1'))", "for nt in range(int(input())):\n    n = int(input())\n    print(2 * n - bin(n).count('1'))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(2 * n - bin(n).count('1'))", "t = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    print(2 * n - bin(n).count('1'))", "for _ in range(int(input())):\n    n = int(input())\n    print(2 * n - bin(n).count('1'))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    ans = 2 * n - bin(n).count('1')\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    r = bin(n).replace('0b', '').count('1')\n    k = 2 * n - r\n    print(k)", "def _sum2(n):\n    return 2 * n - bin(n).count('1')\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print(_sum2(n))", "for _ in range(int(input())):\n    n = int(input())\n    n *= 2\n    cnt = bin(n)[2:].count('1')\n    ans = n - cnt\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    b = bin(n)\n    b = b[2:]\n    a = b.count('1')\n    ans = 2 * n - a\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    cnt_1 = bin(n).count('1')\n    print(2 * n - cnt_1)", "import sys\n\ndef main():\n    for t in range(int(input())):\n        n = int(input())\n        s = bin(n)[2:]\n        print(2 * n - s.count('1'))\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    print(2 * n - bin(n).count('1'))", "def fun(k):\n    return 2 * k - bin(k).count('1')\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(fun(n))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(2 * n - bin(n).count('1'))", "for _ in range(int(input())):\n    n = int(input())\n    print(2 * n - bin(n).count('1'))", "for _ in range(int(input())):\n    n = int(input())\n    print(2 * n - bin(n)[2:].count('1'))", "t = int(input())\nwhile t:\n    t = t - 1\n    n = int(input())\n    b = bin(n).replace('0b', '').count('1')\n    print(2 * n - b)", "for i in range(int(input())):\n    n = int(input())\n    print(2 * n - bin(n).count('1'))", "for t in range(int(input())):\n    n = int(input())\n    print(n * 2 - bin(n).count('1'))", "for i in range(int(input())):\n    n = int(input())\n    print(2 * n - bin(n).count('1'))", "for _ in range(int(input())):\n    x = int(input())\n    print(x * 2 - bin(x).count('1'))", "n = int(input())\nfor _ in range(n):\n    nn = int(input())\n    c = bin(nn).count('1')\n    print(2 * nn - c)", "for _ in range(int(input())):\n    n = int(input())\n    s = bin(n)[2:]\n    x = s.count('1')\n    print(2 * n - x)", "for _ in range(int(input())):\n    n = int(input())\n    print(2 * n - bin(n).count('1'))", "for _ in range(int(input())):\n    n = int(input())\n    print(2 * n - bin(n).replace('0b', '').count('1'))", "for _ in range(int(input())):\n    n = int(input())\n    s = '{0:b}'.format(n)\n    setBits = s.count('1')\n    print(2 * n - setBits)", "t = int(input())\nwhile t:\n    n = int(input())\n    x = bin(2 * n)[2:]\n    y = x.count('1')\n    print(2 * n - y)\n    t = t - 1", "for _ in range(int(input())):\n    n = int(input())\n    print(2 * n - bin(n).count('1'))", "from functools import lru_cache\nlru_cache(maxsize=1000)\n\ndef dp(n):\n    return 2 * n - bin(n).count('1')\nt = int(input())\nfor _ in range(t):\n    print(dp(int(input())))", "t = int(input())\n\ndef fun(n):\n    a = bin(2 * n)[2:]\n    ans = 0\n    for i in a:\n        if i == '1':\n            ans += 1\n    print(2 * n - ans)\nwhile t:\n    t -= 1\n    n = int(input())\n    fun(n)", "import sys\nimport math\n\ndef solve(n):\n    tmp = n\n    cnt = 0\n    while n > 0:\n        cnt += n & 1\n        n >>= 1\n    return tmp * 2 - cnt\nt = int(sys.stdin.readline().strip())\nfor i in range(t):\n    n = int(sys.stdin.readline().strip())\n    print(solve(n))", "import math\ntestCases = int(input())\ninputs = []\nd = {}\nfor i in range(testCases):\n    inputs.append(int(input()))\n\ndef initialResult():\n    for i in range(math.ceil(math.log2(max(inputs))) + 2):\n        d[2 ** i] = 2 ** (i + 1) - 1\n\ndef findResult(number):\n    a = number\n    res = 0\n    while a != 1:\n        res += a\n        a = a // 2\n    return res + 1\ninitialResult()\nfor i in inputs:\n    print(findResult(i))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ans = n\n    while 0 < n:\n        n >>= 1\n        ans += n\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    x = int(input())\n    t = bin(x)[2:]\n    result = 2 * x\n    for i in t:\n        if i == '1':\n            result -= 1\n    print(result)", "for _ in range(int(input())):\n    a = int(input())\n    b = bin(a)\n    cont = 0\n    for i in b:\n        if i == '1':\n            cont += 1\n    print(2 * a - cont)", "def main():\n    n = int(input())\n    r = 0\n    while n:\n        r += n\n        n >>= 1\n    return r\nt = int(input())\nfor ti in range(t):\n    print(main())", "def fun(n):\n    b = bin(n)[2:]\n    l = len(b)\n    L = []\n    for i in range(l):\n        L.append(b[i])\n    co = L.count('1')\n    num = 2 * int(b, 2) - co\n    return num\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print(fun(n))", "def countSetBits(n):\n    count = 0\n    while n:\n        count += n & 1\n        n >>= 1\n    return count\nfor _ in range(int(input())):\n    n = int(input())\n    print(2 * n - countSetBits(n))", "def check(n):\n    t = n\n    num_of_set_bits = 0\n    while t:\n        if t & 1:\n            num_of_set_bits += 1\n        t = t >> 1\n    return 2 * n - num_of_set_bits\nt = int(input())\nwhile t:\n    n = int(input())\n    print(check(n))\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    one = 0\n    for i in bin(n)[2:]:\n        if i == '1':\n            one += 1\n    print(2 * n - one)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef fun(n):\n    if n == 1:\n        return 1\n    return n + fun(n // 2)\n\ndef foo():\n    n = inp()\n    ans = fun(n)\n    print(ans)\nt = inp()\nfor i in range(t):\n    foo()", "lst = []\nfor j in range(62):\n    if j == 0:\n        lst.append(1)\n    else:\n        total = 0\n        for k in range(j):\n            total += lst[k]\n        total += j + 1\n        lst.append(total)\nt = int(input())\nfor i in range(t):\n    n = '{:b}'.format(int(input()))\n    n = n[::-1]\n    tot = 0\n    for p in range(len(n)):\n        if n[p] == '1':\n            tot += lst[p]\n    print(tot)", "for t in range(int(input())):\n    n = int(input())\n    ans = 0\n    while n:\n        ans += n\n        n //= 2\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    t = bin(n)[2:]\n    sum = 2 * n\n    for i in t:\n        if i == '1':\n            sum -= 1\n    print(sum)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    one = 0\n    temp = str(bin(n)[2:])\n    for i in range(len(temp)):\n        if temp[i] == '1':\n            one += 1\n    print(n * 2 - one)", "def solve():\n    n = int(input())\n    count = 0\n    while n > 1:\n        count += n\n        n = n // 2\n    else:\n        print(count + 1)\nt = int(input())\nfor i in range(t):\n    solve()", "def main():\n    import sys\n    sys.setrecursionlimit(10 ** 6)\n    input = sys.stdin.readline\n    T = int(input())\n    for t in range(T):\n        n = int(input())\n        p = 1\n        ans = 0\n        while p <= n:\n            ans += n // p\n            p *= 2\n        print(ans)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    one = 0\n    x = str(bin(n)[2:])\n    for i in range(len(x)):\n        if x[i] == '1':\n            one += 1\n    print(n * 2 - one)", "def main():\n    from sys import stdin\n    from sys import stdout\n    input = stdin.readline\n    print = stdout.write\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        answer = 0\n        number = 1\n        while number <= n:\n            answer += n // number\n            number *= 2\n        print('{0}\\n'.format(answer))\nmain()", "total = int(input())\nresult = []\nfor i in range(total):\n    count = 1\n    n = int(input())\n    m = n\n    while m > 2:\n        if m % 2 != 0:\n            count += 1\n        m //= 2\n    result.append(2 * n - count)\nfor t in result:\n    print(str(t))", "t = int(input(''))\nnum = []\nfor i in range(t):\n    num.append(int(input('')))\nfor i in num:\n    sol = 0\n    while i > 0:\n        sol += i\n        i = i // 2\n    print(sol)", "t = int(input())\nw = [2 ** k for k in range(100)]\nfor i in range(t):\n    n = int(input())\n    z = bin(n)[2:][::-1]\n    res = 0\n    for j in range(len(z)):\n        if z[j] == '1':\n            res += w[j + 1] - 1\n    print(res)", "def solve(n):\n    if n == 0:\n        return 0\n    return n + solve(n // 2)\nfor _ in range(int(input())):\n    print(solve(int(input())))", "from sys import stdin\ninput = stdin.readline\na = [1]\nfor x in range(65):\n    a.append(a[-1] * 2)\nfor _ in range(int(input())):\n    n = int(input())\n    cnt = 0\n    for x in a:\n        cnt += n // x\n    print(cnt)", "for _ in range(int(input())):\n    n = int(input())\n    total = 0\n    while n:\n        total += n\n        n = n >> 1\n    print(total)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    j = n\n    count = 0\n    while j != 0:\n        j &= j - 1\n        count += 1\n    print(n * 2 - count)", "for _ in range(0, int(input())):\n    n = int(input())\n    cnt = 0\n    y = str(bin(n)[2:])\n    for i in range(len(y)):\n        if y[i] == '1':\n            cnt += 1\n    print(n * 2 - cnt)", "def ans(n):\n    count = 0\n    w = n\n    while n >= 1:\n        m = n % 2\n        n = n // 2\n        if m == 1:\n            count += 1\n    return 2 * w - count\nm = int(input())\nfor i in range(m):\n    n = int(input())\n    print(ans(n))", "import math\n\ndef func(n):\n    if n == 1:\n        return 1\n    else:\n        return n + func(n // 2)\nt = int(input())\ncnt = 0\nfor cnt in range(t):\n    n = int(input())\n    print(func(n))", "import sys, math\nfrom collections import deque, defaultdict\nimport operator as op\nfrom functools import reduce\nI = sys.stdin.readline\n\ndef ii():\n    return int(I().strip())\n\ndef li():\n    return list(map(int, I().strip().split()))\n\ndef mi():\n    return map(int, I().strip().split())\n\ndef ncr(n, r):\n    r = min(r, n - r)\n    numer = reduce(op.mul, range(n, n - r, -1), 1)\n    denom = reduce(op.mul, range(1, r + 1), 1)\n    return numer // denom\n\ndef main():\n    for _ in range(ii()):\n        n = ii()\n        d = 2\n        ans = n\n        while d <= n:\n            ans += n // d\n            d *= 2\n        print(ans)\nmain()", "t = int(input(''))\nnum = []\nfor i in range(t):\n    num.append(int(input('')))\nfor i in num:\n    sol = 0\n    while i > 0:\n        sol += i\n        i = i // 2\n    print(sol)", "mylist = [0] * 61\nmylist[1] = 1\nmylist[2] = 3\nfor i in range(3, 61):\n    mylist[i] = 2 * mylist[i - 1] + 1\ncases = int(input())\nfor i in range(cases):\n    n = int(input())\n    ans = 0\n    while n > 0:\n        ans += n\n        n //= 2\n    print(ans)", "def checker(n):\n    ans = 0\n    for bit in range(64 - 1, -1, -1):\n        if n & 1 << bit:\n            ans += (1 << bit + 1) - 1\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    print(str(checker(n)))", "for t in range(int(input())):\n    N = int(input())\n\n    def calc(n):\n        if n <= 1:\n            return n\n        else:\n            return calc(n // 2) + n\n    print(calc(N))", "def main():\n    n = int(input())\n    x = 2 * n\n    while n > 0:\n        x -= n % 2\n        n = n // 2\n    return x\nt = int(input())\nfor fd in range(t):\n    print(main())", "def dfg(n):\n    if n > 0:\n        return n + dfg(n // 2)\n    else:\n        return 0\nt = int(input())\nfor j in range(0, t):\n    k = int(input())\n    if k == 0:\n        print(0)\n    else:\n        print(dfg(k))", "def findef(n):\n    if n == 0:\n        return 0\n    return findef(n // 2) + n\ncases = int(input())\nfor t in range(cases):\n    n = int(input())\n    print(findef(n))", "from collections import Counter, defaultdict, deque\nfrom math import *\nimport sys\ninput = sys.stdin.readline\n\ndef solve():\n    a = int(input())\n    b = bin(a)[2:]\n    n = len(b)\n    c = 0\n    res = 0\n    for d in b:\n        if d == '1':\n            res += n * (c + 1)\n            c *= 2\n            c += 1\n        else:\n            res += n * c\n            c *= 2\n        n -= 1\n    print(res)\ntt = int(input())\nfor test in range(tt):\n    solve()", "for _ in range(int(input())):\n    N = int(input())\n    ans = 0\n    while N:\n        ans += N\n        N = N // 2\n    print(ans)", "t = int(input())\nfor case in range(t):\n    n = int(input())\n    count = n\n    while n > 1:\n        n = n // 2\n        count += n\n    print(count)", "test_case = int(input())\nwhile test_case != 0:\n    n = int(input())\n    res = 0\n    while n:\n        res += n\n        n //= 2\n    print(res)\n    test_case -= 1", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    ans = 0\n    while n > 0:\n        ans += n\n        n = n >> 1\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    ans = 0\n    while n:\n        ans += n\n        n //= 2\n    print(ans)", "import math as m\nfor _ in range(int(input())):\n    n = int(input())\n    ans = n\n    while n:\n        n = n // 2\n        ans += n\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    res = 0\n    while n:\n        res += n\n        n = n // 2\n    print(res)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    res = 0\n    while n:\n        res += n\n        n = n >> 1\n    print(res)", "t = int(input())\nfor test in range(0, t):\n    n = int(input())\n    result = 0\n    while n > 0:\n        result += n\n        n = n // 2\n    print(result)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ans = 0\n    while n != 0:\n        ans += n\n        n = n // 2\n    print(ans)", "total = int(input())\nresult = []\nfor i in range(total):\n    count = 1\n    n = int(input())\n    m = n\n    while m > 2:\n        if m % 2 != 0:\n            count += 1\n        m //= 2\n    result.append(2 * n - count)\nfor t in result:\n    print(str(t))", "for _ in range(int(input())):\n    n = int(input())\n    s = 0\n    while n:\n        s += n\n        n //= 2\n    print(s)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    cnt = 0\n    while n >= 1:\n        cnt += n\n        n = n // 2\n    print(cnt)"]