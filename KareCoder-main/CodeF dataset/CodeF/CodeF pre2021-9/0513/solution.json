["import sys\nimport collections\nimport itertools\ninput = sys.stdin.readline\n\ndef main():\n    (N, M) = [int(x) for x in input().split()]\n    A = [int(x) for x in input().split()]\n    c = collections.Counter()\n    for a in A:\n        c[a % M] += 1\n        if c[a % M] == 2:\n            print(0)\n            return\n    ans = 1\n    for (i, j) in itertools.combinations(A, 2):\n        ans = ans * abs(i - j) % M\n    print(ans % M)\nmain()", "def main():\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l1 = [None] * k\n    for i in range(n):\n        y = i % k\n        if l1[y] is not None:\n            print(0)\n            return\n        l1[y] = y\n    l.sort()\n    ans = 1\n    for i in range(n):\n        for j in range(i + 1, n):\n            ans = ans * (l[j] - l[i]) % k\n    print(ans)\nmain()", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nif n > m:\n    print(0)\nelse:\n    rez = 1\n    for i in range(n):\n        for j in range(i + 1, n):\n            rez = rez * abs(a[i] - a[j])\n            rez = rez % m\n    print(rez)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nans = 1\nif n > m:\n    print(0)\nelse:\n    for i in range(n):\n        for j in range(i + 1, n):\n            ans *= abs(a[i] - a[j])\n            ans %= m\n    print(ans)", "def solve(A, n, mod):\n    li = []\n    A.sort()\n    seen = {}\n    for it in A:\n        v = it % mod\n        if v in seen:\n            print(0)\n            return\n        else:\n            seen[v] = True\n            li.append(v)\n    ans = 1\n    ln = len(li)\n    for i in range(ln - 1):\n        for j in range(i + 1, ln):\n            v = (li[j] - li[i]) % mod\n            ans = ans * v % mod\n    print(ans)\n(n, m) = map(int, input().split())\narr = list(map(int, input().split()))\nsolve(arr, n, m)", "from sys import stdin\n\ndef main():\n    readline = stdin.readline\n    (n, m) = map(int, readline().split())\n    a = list(map(int, readline().split()))\n    if n > m:\n        print(0)\n    else:\n        result = 1\n        for i in range(n - 1):\n            for j in range(i + 1, n):\n                result *= abs(a[i] - a[j])\n                result %= m\n        print(result)\nmain()", "def solve():\n    (n, m) = map(int, input().split())\n    arr = [int(x) for x in input().split()]\n    if n > m:\n        print('0')\n        exit(0)\n    else:\n        res = 1\n        for i in range(n):\n            for j in range(i + 1, n, 1):\n                res = res * abs(arr[i] - arr[j]) % m\n        print(res)\nsolve()", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nif n > m:\n    print(0)\n    quit()\nf = set()\nNULL = False\nfor i in range(n):\n    if a[i] % m in f:\n        print(0)\n        quit()\n    f.add(a[i] % m)\nres = 1\nfor i in range(n):\n    for j in range(i + 1, n):\n        res = res * abs(a[i] - a[j]) % m\nprint(res)", "(n, m) = [int(i) for i in input().strip().split()]\na = [int(i) for i in input().strip().split()]\nif n > m:\n    print(0)\nelse:\n    ans = 1\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            ans *= abs(a[i] - a[j])\n            ans %= m\n    print(ans)", "liste = input().split()\nsize_problem = int(liste[0])\nmodulo = int(liste[1])\nliste = input().split()\nif size_problem > modulo:\n    print(0)\nelse:\n    liste = [eval(i) for i in liste]\n    liste.sort(reverse=True)\n    prod = 1\n    for i in range(0, size_problem - 1):\n        for j in range(i + 1, size_problem):\n            prod *= liste[i] - liste[j]\n            prod = prod % modulo\n        if prod == 0:\n            break\n    print(prod)", "def main():\n    (n, m) = [int(i) for i in input().split()]\n    if n > m:\n        print(0)\n        return\n    a = [int(i) for i in input().split()]\n    s = 1\n    for i in range(0, len(a), 1):\n        for j in range(i + 1, len(a), 1):\n            s = s * abs(a[i] - a[j]) % m\n    print(s)\nmain()", "(n, m) = map(int, input().split())\nar = list(map(int, input().split()))\nst = set(map(lambda u: u % m, ar))\nif len(st) != len(ar):\n    print(0)\nelse:\n    res = 1\n    for (i, u) in enumerate(ar):\n        for v in ar[i + 1:]:\n            res = res * abs(u - v) % m\n    print(res)", "def check_root(n, d):\n    return n * n + 2 * n + 1 >= 4 * d\n\ndef mod_expo(n, p, m):\n    result = 1\n    while p != 0:\n        if p % 2 == 1:\n            result = result * n % m\n        p //= 2\n        n = n * n % m\n    return result\n\ndef find_product(n, m, arr):\n    product = 1\n    if n <= m:\n        for i in range(n):\n            for j in range(i + 1, n):\n                product = product * abs(arr[i] - arr[j]) % m\n        return product\n    return 0\nt = 1\nwhile t:\n    t = t - 1\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().strip().split()))[:n]\n    print(find_product(n, m, l))", "import sys\nimport math\nfrom bisect import bisect_right as br\nfrom itertools import combinations as cb\n\ndef int_arr():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef str_arr():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef input():\n    return sys.stdin.readline().strip()\n(n, m) = int_arr()\narr = int_arr()\nif n > m:\n    print(0)\n    exit()\nans = 1\nfor i in range(n):\n    for j in range(i + 1, n):\n        ans *= abs(arr[i] - arr[j])\n        ans = ans % m\nprint(ans)", "def process(a, m):\n    n = len(a)\n    if n > m:\n        return 0\n    remainders = set((k % m for k in a))\n    if len(remainders) < n:\n        return 0\n    res = 1\n    for i in range(n):\n        for j in range(i + 1, n):\n            res = res * abs(a[i] - a[j]) % m\n    return res\n(n, m) = map(int, input().strip().split())\na = list(map(int, input().strip().split()))\nprint(process(a, m))", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nif n > m:\n    print(0)\nelse:\n    rez = 1\n    for i in range(n):\n        for j in range(i + 1, n):\n            rez = rez * abs(a[i] - a[j])\n            rez = rez % m\n    print(rez)", "(n, m) = map(int, input().split())\nl = list(map(int, input().split()))\nif n > m:\n    print(0)\nelse:\n    ans = 1\n    for i in range(n):\n        for j in range(i + 1, n):\n            ans = ans * abs(l[i] - l[j]) % m\n    print(ans)", "def main():\n    (n, m) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    s = 1\n    if n > m:\n        s = 0\n    else:\n        for i in range(n):\n            for j in range(i + 1, n):\n                if s != 0:\n                    s = s * abs(a[i] - a[j]) % m\n                else:\n                    break\n    print(s)\nmain()", "def impossible_cal(a, m):\n    n = len(a)\n    res = 1\n    if n <= m:\n        for i in range(n):\n            for j in range(n):\n                if j > i:\n                    res = res * abs(a[i] - a[j]) % m\n        return res % m\n    else:\n        return 0\n\ndef read_line():\n    (n, m) = input().split()\n    a = input().split()\n    a = [int(ch) for ch in a]\n    print(impossible_cal(a, int(m)))\nread_line()", "def solve():\n    (n, m) = [int(s) for s in input().split(' ')]\n    A = [int(s) for s in input().split(' ')]\n    if n > m:\n        print('0')\n        return\n    mA = [a % m for a in A]\n    if len(mA) > len(set(mA)):\n        print('0')\n        return\n    ans = 1\n    for i in range(len(A)):\n        for j in range(i + 1, len(A)):\n            ans *= abs(A[i] - A[j]) % m\n            ans %= m\n    print(ans)\nsolve()", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nif n > m:\n    exit(print(0))\nproizv = 1\nfor i in range(n):\n    for j in range(i + 1, n):\n        proizv *= abs(a[i] - a[j])\n        proizv = proizv % m\nprint(proizv)", "(n, m) = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\nb = [0 for i in range(m)]\nc = [0 for i in range(m)]\nfor i in a:\n    b[i % m] += 1\n    c[i % m] = i\nfor i in b:\n    if i > 1:\n        print(0)\n        exit()\ntot = 1\nfor i in range(m):\n    if b[i] == 1:\n        for j in range(i + 1, m):\n            if b[j] == 1:\n                tot = tot * abs(c[j] - c[i]) % m\nprint(tot % m)", "from collections import Counter\nfrom itertools import combinations\nfrom functools import reduce\n\ndef solve(n, m, arr):\n    if n > m:\n        return 0\n    check = any(map(lambda x: x > 1, Counter(map(lambda x: x % m, arr)).values()))\n    if check:\n        return 0\n    res = reduce(lambda cum, p: cum * abs(p[0] - p[1]) % m, combinations(arr, 2), 1)\n    return res\n(n, m) = map(int, input().split())\narr = list(map(int, input().split()))\nprint(solve(n, m, arr))", "def solve():\n    (n, m) = map(int, input().split())\n    l1 = list(map(int, input().split()))\n    d = dict()\n    l2 = []\n    for i in range(m):\n        l2.append(i)\n    d = d.fromkeys(l2, 0)\n    for i in range(n):\n        v = l1[i] % m\n        d[v] += 1\n        if d[v] != 1:\n            print(0)\n            return\n    p = 1\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            p *= abs(l1[i] - l1[j]) % m\n            p = p % m\n            if p == 0:\n                print(0)\n                return\n    print(p % m)\nsolve()", "from collections import Counter\nfrom itertools import combinations\nfrom functools import reduce\n\ndef solve(n, m, arr):\n    if n > m:\n        return 0\n    check = len([True for cnt in Counter(map(lambda x: x % m, arr)).values() if cnt > 1])\n    if check > 0:\n        return 0\n    res = reduce(lambda cum, p: cum * abs(p[0] - p[1]) % m, combinations(arr, 2), 1)\n    return res\n(n, m) = map(int, input().split())\narr = list(map(int, input().split()))\nprint(solve(n, m, arr))", "R = lambda : map(int, input().split())\n(n, m) = R()\na = (*R(),)\nr = n <= m\nfor i in range(r * n):\n    for j in range(i):\n        r = r * abs(a[j] - a[i]) % m\nprint(r + 0)", "(n, m) = map(int, input().split())\na = [int(x) for x in input().split()]\nmod = [0] * m\nif n > m:\n    print(0)\nelse:\n    for x in a:\n        mod[x % m] += 1\n    maxi = max(mod)\n    if maxi > 1:\n        print(0)\n    else:\n        ans = 1\n        for i in range(n - 1):\n            for j in range(i + 1, n):\n                ans = ans * abs(a[j] - a[i]) % m\n        print(ans)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nif n == 2:\n    print(abs(a[0] - a[1]) % m)\nelif n > m:\n    print('0')\nelse:\n    p = 1\n    for i in range(n):\n        for j in range(i + 1, n):\n            p = p * abs(a[i] - a[j])\n            p = p % m\n    print(p)", "(number, mod) = map(int, input().split())\nli = list(map(int, input().split()))\nif number > mod:\n    print(0)\nelse:\n    res = 1\n    for x in range(number):\n        for y in range(x + 1, number):\n            res *= abs(li[x] - li[y])\n            res %= mod\n    print(res)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\ns = 1\nif n > m:\n    print(0)\nelse:\n    for i in range(n):\n        for j in range(i + 1, n):\n            s = s * abs(a[i] - a[j]) % m\n    print(s)", "(n, m) = map(int, input().split())\narr = list(map(int, input().split()))\nval = 1\nif n > m:\n    exit(print(0))\nfor i in range(n):\n    for j in range(i + 1, n):\n        val *= abs(arr[i] - arr[j])\n        val %= m\nprint(val)", "(n, m) = map(int, input().split())\nx = list(map(int, input().split()))\ns = 1\nif n > m:\n    print(0)\nelse:\n    for i in range(0, n):\n        for j in range(i + 1, n):\n            s = s * abs(x[i] - x[j]) % m\n    print(s % m)", "(m, n) = list(map(int, input().split()))\nl = list(map(int, input().split()))\ns = 1\nif m > n:\n    print(0)\nelse:\n    for i in range(0, m):\n        for j in range(i + 1, m):\n            s = s * abs(l[i] - l[j]) % n\n    print(s % n)", "(n, m) = map(int, input().split())\narray = list(map(int, input().split()))\nif n > m:\n    print(0)\nelse:\n    answer = 1\n    for index in range(n):\n        for index_ in range(index + 1, n):\n            answer *= abs(array[index] - array[index_])\n            answer %= m\n    print(answer)", "(a, b) = map(int, input().split())\nc = list(map(int, input().split()))\nif a > b + 1:\n    print(0)\nelse:\n    d = 1\n    for i in range(a):\n        for y in range(i + 1, a):\n            d = d * abs(c[i] - c[y]) % b\n    print(d)", "R = lambda : map(int, input().split())\n(n, m) = R()\na = list(R())\nif n > m:\n    print(0)\nelse:\n    ans = 1\n    for i in range(n):\n        for j in range(i + 1, n):\n            ans = ans * abs(a[i] - a[j]) % m\n    print(ans)", "(n, m) = list(map(int, input().split()))\nAs = list(map(int, input().split()))\nif len(As) > m:\n    print(0)\nelse:\n    result = 1\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            result = result * abs(As[j] - As[i]) % m\n    print(result)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nt = 1\nif m < n:\n    print(0)\nelse:\n    for i in range(len(a)):\n        for j in range(i):\n            t *= abs(a[i] - a[j])\n            t %= m\n    print(t)", "(n, m) = list(map(int, input().split()))\narr = list(map(int, input().split()))\nif n > m:\n    print(0)\nelse:\n    p = 1\n    for i in range(n):\n        for j in range(i + 1, n):\n            p = p * abs(arr[i] - arr[j])\n            p = p % m\n    print(p)", "R = lambda : map(int, input().split())\n(n, m) = R()\na = (*R(),)\nr = n <= m\nfor i in range(r * n):\n    for j in range(i):\n        r = r * abs(a[j] - a[i]) % m\nprint(r + 0)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nif n > m:\n    exit(print(0))\nans = 1\nfor i in range(n):\n    for j in range(i + 1, n):\n        ans *= abs(a[i] - a[j])\n        ans %= m\nprint(ans)", "(n, m) = map(int, input().split())\narr = list(map(int, input().split()))\nif n > m:\n    print(0)\nelse:\n    res = 1\n    for i in range(n):\n        for j in range(i + 1, n):\n            res *= abs(arr[i] - arr[j])\n            res %= m\n    print(res % m)", "(n, m) = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\nif n > m:\n    print(0)\n    exit()\nans = 1\nfor i in range(n):\n    for j in range(i + 1, n):\n        ans *= abs(a[i] - a[j])\n        ans = ans % m\nprint(ans)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nans = 1\nif n > m:\n    print('0')\nelse:\n    for i in range(n):\n        for j in range(i + 1, n):\n            ans *= abs(a[i] - a[j])\n            ans %= m\n    print(ans)", "(n, m) = map(int, input().split())\nv = list(map(int, input().split()))\nif n > m:\n    print(0)\nelse:\n    ans = 1\n    for i in range(len(v)):\n        for j in range(i + 1, len(v)):\n            ans *= abs(v[i] - v[j])\n            ans %= m\n    print(ans)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nif n > m:\n    exit(print(0))\nans = 1\nfor i in range(n):\n    for j in range(i + 1, n):\n        ans *= abs(a[i] - a[j])\n        ans %= m\nprint(ans)", "from itertools import groupby\n(n, m) = map(int, input().split())\na1 = list(map(int, input().split()))\na = [el for (el, _) in groupby(a1)]\nif n > m or len(a) != len(a1):\n    exit(print(0))\nans = 1\nfor i in range(n):\n    for j in range(i + 1, n):\n        ans *= abs(a[i] - a[j])\n        ans %= m\nprint(ans)", "import sys\n(n, m) = map(int, input().split())\nlst = list(map(int, input().split()))\nif n > m:\n    sys.exit(print(0))\nsol = 1\nfor i in range(n):\n    for j in range(i + 1, n):\n        sol = sol * abs(lst[i] - lst[j])\n        sol %= m\nprint(sol)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nif n > m:\n    exit(print(0))\nans = 1\nfor i in range(n):\n    for j in range(i + 1, n):\n        ans *= abs(a[i] - a[j])\n        ans %= m\nprint(ans)", "(n, m) = [int(x) for x in input().split()]\narrs = [int(x) for x in input().split()]\nif n > m:\n    ans = 0\nelse:\n    ans = 1\n    for i in range(n):\n        for j in range(i + 1, n):\n            ans *= abs(arrs[i] - arrs[j])\n            ans %= m\nprint(ans)", "(n, m) = map(int, input().split())\na = sorted(map(int, input().split()))\nif n <= m:\n    d = 1\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            d = d * abs(a[i] - a[j]) % m\n    print(d)\nelse:\n    print(0)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nif m < n:\n    print(0)\n    exit()\nb = set(a)\nif sum(a) != sum(b):\n    print(0)\n    exit()\nprod = 1\nfor i in range(n):\n    for j in range(i + 1, n):\n        prod *= abs(a[i] - a[j])\n        prod %= m\nprint(prod)", "(n, m) = map(int, input().split())\narr = [int(i) for i in input().split()]\nif n > m:\n    exit(print(0))\nans = 1\nfor i in range(n):\n    for j in range(i + 1, n):\n        ans *= abs(arr[j] - arr[i])\n        ans %= m\nprint(ans)", "(n, m) = map(int, input().split())\nA = list(map(int, input().split()))\nif n > m:\n    print(0)\nelse:\n    ans = 1\n    for i in range(n):\n        for j in range(i + 1, n):\n            ans *= abs(A[i] - A[j])\n            ans %= m\n    print(ans)", "(n, m) = map(int, input().split())\naa = [int(i) for i in input().split()]\nif n > m:\n    print(0)\nelse:\n    pro = 1\n    for i in range(0, len(aa)):\n        for j in range(i + 1, len(aa)):\n            pro *= abs(aa[i] - aa[j])\n            pro %= m\n    print(pro % m)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nif n > m:\n    exit(print(0))\nans = 1\nfor i in range(n):\n    for j in range(i + 1, n):\n        ans *= abs(a[i] - a[j])\n        ans %= m\nprint(ans)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nprod = 1\nif n > m:\n    print('0')\nelse:\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            prod *= abs(a[i] - a[j])\n            prod = prod % m\n    print(prod % m)", "import sys\n(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nif n > m:\n    exit(print(0))\nresult = 1\nfor i in range(n):\n    for j in range(i + 1, n):\n        result *= abs(a[i] - a[j])\n        result %= m\nprint(result)", "(n, m) = map(int, input().split())\narray = list(map(int, input().split()))\nanswer = 1\nif n > m:\n    print(0)\nelse:\n    for index in range(n):\n        for index_ in range(index + 1, n):\n            answer *= abs(array[index] - array[index_])\n            answer %= m\n    print(answer)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nif n > m:\n    print(0)\nelse:\n    s = 1\n    for i in range(n):\n        for j in range(i + 1, n):\n            s *= abs(a[i] - a[j])\n            s %= m\n    print(s)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nans = 1\nif n > m:\n    print(0)\nelse:\n    for i in range(n):\n        for j in range(i + 1, n):\n            ans *= abs(a[i] - a[j])\n            ans = ans % m\n    print(ans)", "(n, m) = map(int, input().split())\nx = [int(w) for w in input().split()]\nif n > m:\n    print(0)\nelse:\n    ans = 1\n    for i in range(n):\n        for j in range(i + 1, n):\n            ans *= abs(x[i] - x[j])\n            ans %= m\n    print(ans)", "(n, m) = map(int, input().split())\narr = list(map(int, input().split()))\nans = 1\nif n > m:\n    print('0')\nelse:\n    for i in range(n):\n        for j in range(i + 1, n):\n            ans *= abs(arr[j] - arr[i])\n            ans %= m\n    print(ans)", "(n, m) = map(int, input().split())\na = [int(x) for x in input().split()]\nif n > m:\n    print(0)\n    exit(0)\nans = 1\nfor i in range(n):\n    for j in range(i + 1, n):\n        ans = ans % m * (abs(a[i] - a[j]) % m) % m\nprint(ans)", "from collections import defaultdict\nimport sys\n(n, m) = list(map(int, input().strip().split()))\na = list(map(int, input().strip().split()))\na.sort()\nmodulos = [0] * m\nif len(a) > m:\n    print(0)\n    sys.exit()\nres = 1\nfor i in range(len(a)):\n    for j in range(i):\n        res = res * abs(a[i] - a[j]) % m\nprint(res)", "(n, m) = map(int, input().split())\nnumbers = list(map(int, input().split()))\nif n > m:\n    print(0)\nelse:\n    ans = 1\n    for i in range(n):\n        for j in range(i):\n            ans *= abs(numbers[i] - numbers[j])\n            ans %= m\n    print(ans)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nif n > m:\n    print(0)\nelse:\n    temp = 1\n    for i in range(n):\n        for s in range(i + 1, n):\n            temp = temp * abs(a[i] - a[s])\n            temp = temp % m\n    print(temp)", "(n, m) = map(int, input().split())\narr = list(map(int, input().split()))\nif n > m:\n    exit(print(0))\nelse:\n    ans = 1\n    for i in range(n):\n        for j in range(i + 1, n):\n            ans *= abs(arr[i] - arr[j])\n            ans %= m\n    print(ans)", "(n, m) = list(map(int, input().split()))\nl = list(map(int, input().split()))\nif n > m:\n    print(0)\nelse:\n    ans = 1\n    for i in range(n):\n        for j in range(i + 1, n):\n            ans = ans * abs(l[i] - l[j]) % m\n    print(ans)", "(n, m) = input().split()\n(n, m) = (int(n), int(m))\nif m < n:\n    print(0)\n    exit(0)\nl = [int(i) for i in input().split()]\nproduct = 1\nfor i in range(n - 1):\n    for j in range(i + 1, n):\n        product = product * abs(l[i] - l[j]) % m\n    if product == 0:\n        break\nprint(product)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nif n > m:\n    exit(print(0))\nans = 1\nfor i in range(n):\n    for j in range(i + 1, n):\n        ans *= abs(a[i] - a[j])\n        ans %= m\nprint(ans)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nif n > m:\n    print(0)\nelse:\n    ans = 1\n    for i in range(n):\n        for j in range(i + 1, n):\n            ans *= abs(a[i] - a[j])\n            ans %= m\n    print(ans)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nans = 1\nif n > m:\n    print(0)\nelse:\n    for i in range(n):\n        for j in range(i + 1, n):\n            ans *= abs(a[i] - a[j])\n            ans = ans % m\n    print(ans)", "(n, m) = map(int, input().split())\nList = list(map(int, input().split()))\nsumm = 1\nif n > m:\n    print(0)\nelse:\n    for i in range(n):\n        for j in range(i + 1, n):\n            summ = summ * abs(List[i] - List[j])\n            summ = summ % m\n    print(summ)", "(n, m) = tuple(map(int, input().split()))\na = list(map(int, input().split()))\nif n > m:\n    print(0)\n    exit()\nans = 1\nfor i in range(n):\n    for j in range(i + 1, n):\n        ans = ans * abs(a[i] - a[j])\n        ans = ans % m\nprint(ans)", "import math\n(n, m) = map(int, input().split())\nl = list(map(int, input().split()))\nif n <= m:\n    mul = 1\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            t = l[i] - l[j]\n            mul = mul * abs(t)\n            mul %= m\n    print(mul % m)\nelse:\n    print('0')", "import sys\nfrom collections import Counter as cc\ninput = sys.stdin.readline\nI = lambda : list(map(int, input().split()))\n(n, m) = I()\nl = I()\np = [i % m for i in l]\nif len(set(p)) != n:\n    print(0)\nelse:\n    an = 1\n    for i in range(n):\n        for j in range(i + 1, n):\n            an = an * abs(l[i] - l[j]) % m\n    print(an % m)", "(n, m) = map(int, input().split())\narr = list(map(int, input().split()))\nmoduler = [0] * 1001\nfor i in range(n):\n    moduler[arr[i] % m] += 1\n    tof = True\nfor i in range(1001):\n    if moduler[i] > 1:\n        tof = False\nif tof == False:\n    print(0)\nelse:\n    ans = 1\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            tmp = 0\n            if arr[i] < arr[j]:\n                tmp = arr[j] - arr[i]\n            else:\n                tmp = arr[i] - arr[j]\n            ans *= tmp\n            ans %= m\n    print(ans % m)", "(n, m) = map(int, input().split())\nx = list(map(int, input().split()))\nmods = [0] * m\nans = 1\nif n > m:\n    print(0)\n    exit()\nfor i in range(n):\n    for j in range(i + 1, n):\n        ans = ans * abs(x[i] - x[j]) % m\nprint(ans)", "(n, m) = map(int, input().split())\narr = list(map(int, input().split()))\nres = 1\nif n > m:\n    print(0)\nelse:\n    for i in range(n):\n        for j in range(i + 1, n):\n            res *= abs(arr[i] - arr[j])\n            res = res % m\n    print(res)", "(n, m) = [int(x) for x in input().split()]\na = list(map(int, input().split()))\ns = 1\nif n > m:\n    print(0)\nelse:\n    for i in range(0, n):\n        for j in range(i + 1, n):\n            s = s * abs(a[i] - a[j])\n            s = s % m\n    print(s)", "from collections import Counter, defaultdict, deque\nimport heapq as hq\nfrom itertools import count, islice\nimport math\nimport sys\ninput = sys.stdin.readline\n(n, m) = [int(x) for x in input().split()]\narr = [int(x) for x in input().split()]\nif n > m:\n    print(0)\nelse:\n    prod = 1\n    for i in range(n):\n        for j in range(i + 1, n):\n            prod *= abs(arr[i] - arr[j])\n            prod %= m\n    print(prod)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nif n > m:\n    exit(print(0))\nans = 1\nfor i in range(n):\n    for j in range(i + 1, n):\n        ans = ans * abs(a[i] - a[j])\n        ans = ans % m\nprint(ans)", "from collections import defaultdict\n(n, m) = list(map(int, input().split()))\nl = list(map(int, input().split()))\nll = [x % m for x in l]\nd = defaultdict(int)\nres = 1\nfor x in ll:\n    d[x] += 1\n    if d[x] > 1:\n        res = 0\nif res == 0:\n    print(res)\nelse:\n    for i in range(len(l)):\n        for j in range(i + 1, len(l)):\n            res *= abs(l[j] - l[i])\n            res %= m\n    print(res)", "(n, m) = map(int, input().split())\na = [i for i in map(int, input().split())]\nif n > 1000:\n    print(0)\nelse:\n    ans = 1\n    for i in range(n):\n        for j in range(i + 1, n):\n            ans = ans * abs(a[i] - a[j])\n            ans = ans % m\n    print(ans)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nif n > m:\n    print(0)\nelse:\n    p = 1\n    for i in range(n):\n        for j in range(i + 1, n):\n            p *= abs(a[i] - a[j])\n            p %= m\n    print(p)", "from collections import Counter\nfrom itertools import combinations\nfrom functools import reduce\n\ndef solve(n, m, arr):\n    if n > m:\n        return 0\n    check = len([True for cnt in Counter(map(lambda x: x % m, arr)).values() if cnt > 1])\n    if check > 0:\n        return 0\n    res = reduce(lambda cum, x: cum * x % m, map(lambda p: abs(p[0] - p[1]) % m, combinations(arr, 2)), 1)\n    return res\n(n, m) = map(int, input().split())\narr = list(map(int, input().split()))\nprint(solve(n, m, arr))", "(n, m) = map(int, input().split())\narr = [int(x) for x in input().split()]\nif m < n:\n    print(0)\nelse:\n    result = 1\n    for i in range(n):\n        for j in range(i + 1, n):\n            r = abs(arr[i] - arr[j])\n            result = result * r % m\n    print(result)", "(n, m) = [int(x) for x in input().split()]\narrs = [int(x) for x in input().split()]\nif n > m:\n    ans = 0\nelse:\n    ans = 1\n    for i in range(n):\n        for j in range(i + 1, n):\n            ans *= abs(arrs[i] - arrs[j])\n            ans %= m\nprint(ans)", "(n, m) = [int(i) for i in input().split()]\nlst = list(map(int, input().split()))\nproduct = 1\nif n > m:\n    print(0)\nelse:\n    for i in range(len(lst) - 1):\n        for j in range(i + 1, len(lst)):\n            product = product * abs(lst[i] - lst[j])\n            product = product % m\n    print(product)", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nif n > m:\n    exit(print(0))\nprod = 1\nfor i in range(n):\n    for j in range(i + 1, n):\n        prod *= abs(a[i] - a[j])\n        prod %= m\nprint(prod)", "def abs(a):\n    if a > 0:\n        return a\n    else:\n        return -1 * a\n(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nif n > m:\n    print('0')\nelse:\n    pr = 1\n    for i in range(n):\n        for j in range(i + 1, n):\n            pr = pr * abs(a[i] - a[j])\n            pr = pr % m\n    print(pr)", "(n, m) = map(int, input().split())\nf = list(map(int, input().split()))[:n]\np = 1\nfor i in f:\n    i = i % m\nif n > m:\n    print(0)\n    exit()\nelse:\n    for j in range(n):\n        for k in range(j + 1, n):\n            p = p * abs(f[j] - f[k]) % m % m\n    print(p % m)\n    exit()", "(n, m) = map(int, input().split())\na = list(map(int, input().split()))\nif n > m:\n    exit(print(0))\nans = 1\nfor i in range(n):\n    for j in range(i + 1, n):\n        ans *= abs(a[i] - a[j])\n        ans %= m\nprint(ans)", "from math import *\n(n, m) = map(int, input().split())\na = [int(i) for i in input().split()]\nif n > m:\n    print(0)\nelse:\n    ans = 1\n    for i in range(n):\n        for j in range(i + 1, n):\n            ans = ans * abs(a[i] - a[j])\n            ans %= m\n    print(ans)", "import math\n(n, m) = map(int, input().split())\nl = list(map(int, input().split()))\nif n <= m:\n    mul = 1\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            t = l[i] - l[j]\n            mul = mul * abs(t)\n            mul %= m\n    print(mul % m)\nelse:\n    exit(print(0))", "(n, m) = map(int, input().split())\narr = list(map(int, input().split()))\nif n > m:\n    print('0')\nelse:\n    ans = 1\n    for i in range(n):\n        for j in range(i + 1, n):\n            ans *= abs(arr[j] - arr[i])\n            ans %= m\n            if ans == 0:\n                print('0')\n                exit()\n    print(ans)", "(n, m) = input().split()\nn = int(n)\nm = int(m)\nans = 1\na = list(map(int, input().split()))\nif n > m:\n    print(0)\nelse:\n    for i in range(0, n - 1):\n        for j in range(i + 1, n):\n            ans *= abs(a[i] - a[j])\n            ans %= m\n    print(ans)", "(n, k) = [int(x) for x in input().split()]\narr = [int(x) for x in input().split()]\nif n > k:\n    print('0')\nelse:\n    ans = 1\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            ans = ans % k * (abs(arr[i] - arr[j]) % k)\n    print(ans % k)"]