["from heapq import *\nimport sys\ninput = sys.stdin.readline\na = sorted(map(int, input().split()))\nn = int(input())\nb = sorted(map(int, input().split()))\nu = [6 * (i - a[5]) + 5 for i in b]\nheapify(u)\nh = b[-1] - a[5]\nm = h - u[0] // 6\nfor i in range(5 * n):\n    v = heappop(u)\n    if v % 6:\n        w = v - 1 + 6 * (a[v % 6] - a[v % 6 - 1])\n        if w // 6 > h:\n            h = w // 6\n        heappush(u, w)\n        if h - u[0] // 6 < m:\n            m = h - u[0] // 6\n    else:\n        break\nprint(m)", "from heapq import *\nimport sys\nY = sys.stdin.readline\nZ = lambda : sorted(map(int, Y().split()))\na = Z()\nn = Z()[0]\nb = Z()\nu = [6 * (i - a[5]) + 5 for i in b]\nheapify(u)\nh = b[-1] - a[5]\nm = h - u[0] // 6\nfor i in range(5 * n):\n    v = heappop(u)\n    if v % 6:\n        w = v - 1 + 6 * (a[v % 6] - a[v % 6 - 1])\n        if w // 6 > h:\n            h = w // 6\n        heappush(u, w)\n        if h - u[0] // 6 < m:\n            m = h - u[0] // 6\n    else:\n        break\nprint(m)", "from heapq import *\nimport sys\ninput = sys.stdin.readline\na = sorted(map(int, input().split()))\nn = int(input())\nb = sorted(map(int, input().split()))\nu = [6 * (i - a[5]) + 5 for i in b]\nheapify(u)\nh = b[-1] - a[5]\nm = h - u[0] // 6\nfor i in range(5 * n):\n    v = heappop(u)\n    if v % 6:\n        w = v - 1 + 6 * (a[v % 6] - a[v % 6 - 1])\n        if w // 6 > h:\n            h = w // 6\n        heappush(u, w)\n        if h - u[0] // 6 < m:\n            m = h - u[0] // 6\n    else:\n        break\nprint(m)", "import sys\nimport heapq\ninput = sys.stdin.readline\na = list(set(map(int, input().split())))\nk = len(a)\nn = int(input())\nb = list(set(map(int, input().split())))\nn = len(b)\na.sort()\nb.sort()\nc = [0 for i in range(n)]\nmn = float('inf')\npq = []\nfor i in range(n):\n    heapq.heappush(pq, (-b[i] + a[c[i]], i))\n    mn = min(mn, b[i] - a[c[i]])\nx = float('inf')\nwhile True:\n    td = heapq.heappop(pq)\n    i = td[1]\n    x = min(x, -td[0] - mn)\n    c[i] += 1\n    if c[i] == k:\n        break\n    mn = min(b[i] - a[c[i]], mn)\n    heapq.heappush(pq, (-b[i] + a[c[i]], i))\nprint(x)", "import operator\nimport sys\na = list(set(map(int, sys.stdin.readline().split())))\nn = int(input())\nc2 = list(set(map(int, sys.stdin.readline().split())))\ns = 0\nv = []\nindex = 0\nn = len(c2)\nc = [0] * n\nqm = 1000000000.0 + 1\nfor q in range(len(a)):\n    for i in range(len(c2)):\n        v.append([c2[i] - a[q], i])\nv.sort(key=operator.itemgetter(0))\nfor i in range(len(v)):\n    c[v[i][1]] += 1\n    if c[v[i][1]] == 1:\n        s += 1\n    if s == n:\n        while c[v[index][1]] > 1:\n            c[v[index][1]] -= 1\n            index += 1\n        if v[i][0] - v[index][0] < qm:\n            qm = v[i][0] - v[index][0]\n        c[v[index][1]] -= 1\n        if c[v[index][1]] == 0:\n            s -= 1\n        index += 1\nsys.stdout.write(str(qm))", "import operator\nimport sys\na = list(set(map(int, sys.stdin.readline().split())))\nn = int(input())\nc2 = list(set(map(int, sys.stdin.readline().split())))\ns = 0\nv = []\nindex = 0\nn = len(c2)\nc = [0] * n\nqm = 1000000000.0 + 1\nfor q in range(len(a)):\n    for i in range(len(c2)):\n        v.append([c2[i] - a[q], i])\nv.sort(key=operator.itemgetter(0))\nfor i in range(len(v)):\n    c[v[i][1]] += 1\n    if c[v[i][1]] == 1:\n        s += 1\n    if s == n:\n        while c[v[index][1]] > 1:\n            c[v[index][1]] -= 1\n            index += 1\n        if v[i][0] - v[index][0] < qm:\n            qm = v[i][0] - v[index][0]\n        c[v[index][1]] -= 1\n        if c[v[index][1]] == 0:\n            s -= 1\n        index += 1\nsys.stdout.write(str(qm))", "import operator\nimport sys\na = list(set(map(int, sys.stdin.readline().split())))\nn = int(input())\nc2 = list(set(map(int, sys.stdin.readline().split())))\ns = 0\nv = [0] * (len(c2) * len(a))\nindex = 0\nn = len(c2)\nc = [0] * n\nqm = 1000000000.0 + 1\nfor q in range(len(a)):\n    for i in range(len(c2)):\n        v[i * (len(a) + 0) + q] = [c2[i] - a[q], i]\nv.sort(key=operator.itemgetter(0))\nfor i in range(len(v)):\n    c[v[i][1]] += 1\n    if c[v[i][1]] == 1:\n        s += 1\n    if s == n:\n        while c[v[index][1]] > 1:\n            c[v[index][1]] -= 1\n            index += 1\n        if v[i][0] - v[index][0] < qm:\n            qm = v[i][0] - v[index][0]\n        c[v[index][1]] -= 1\n        if c[v[index][1]] == 0:\n            s -= 1\n        index += 1\nsys.stdout.write(str(qm))", "import operator\nimport sys\na = list(set(map(int, sys.stdin.readline().split())))\nn = int(input())\nc2 = list(set(map(int, sys.stdin.readline().split())))\ns = 0\nv = [0] * (len(c2) * len(a))\nindex = 0\nn = len(c2)\nc = [0] * n\nqm = 1000000000.0 + 1\nfor q in range(len(a)):\n    for i in range(len(c2)):\n        v[i * (len(a) + 0) + q] = [c2[i] - a[q], i]\nv.sort(key=operator.itemgetter(0))\nfor i in range(len(v)):\n    c[v[i][1]] += 1\n    if c[v[i][1]] == 1:\n        s += 1\n    if s == n:\n        while c[v[index][1]] > 1:\n            c[v[index][1]] -= 1\n            index += 1\n        if v[i][0] - v[index][0] < qm:\n            qm = v[i][0] - v[index][0]\n        c[v[index][1]] -= 1\n        if c[v[index][1]] == 0:\n            s -= 1\n        index += 1\nsys.stdout.write(str(qm))", "import math\nimport sys, bisect\nfrom heapq import *\nfrom itertools import *\nfrom collections import *\nsys.setrecursionlimit(10 ** 6)\nI = lambda : int(sys.stdin.readline())\nneo = lambda : map(int, sys.stdin.readline().split())\nNeo = lambda : list(map(int, sys.stdin.readline().split()))\na = Neo()\nn = I()\nb = Neo()\na.sort()\nb.sort()\nc = [0 for i in range(n)]\nmn = 10000000000\npq = []\nfor i in range(n):\n    heappush(pq, (-b[i] + a[c[i]], i))\n    mn = min(mn, b[i] - a[c[i]])\nx = 10000000000\nwhile True:\n    td = heappop(pq)\n    i = td[1]\n    x = min(x, -td[0] - mn)\n    c[i] += 1\n    if c[i] == 6:\n        break\n    mn = min(b[i] - a[c[i]], mn)\n    heappush(pq, (-b[i] + a[c[i]], i))\nprint(x)", "import sys\nimport operator\nimport array\n\ndef solve():\n    a = list(map(int, input().split()))\n    n = int(input())\n    b = list(map(int, input().split()))\n    have = [[]] * (n * 6)\n    arr_append = have.append\n    c = 0\n    for i in range(0, n):\n        for j in range(0, 6):\n            have[c] = (b[i] - a[j], i)\n            c += 1\n    have.sort(key=operator.itemgetter(0))\n    cnt = array.array('L', [0]) * n\n    z = n\n    sz = len(have)\n    ans = 999999999999\n    r = 0\n    for i in range(0, sz):\n        while r < sz and z > 0:\n            cnt[have[r][1]] += 1\n            if cnt[have[r][1]] == 1:\n                z -= 1\n            r += 1\n        if z > 0:\n            break\n        ans = min(ans, have[r - 1][0] - have[i][0])\n        cnt[have[i][1]] -= 1\n        if cnt[have[i][1]] == 0:\n            z += 1\n    print(ans)\n\ndef main(argv):\n    solve()\nmain(sys.argv)", "arr = [int(x) for x in input().split()]\narr = list(set(arr))\nn = int(input())\nb = [int(x) for x in input().split()]\ntemp = []\nb = list(set(b))\nn = len(b)\nfor i in range(n):\n    for j in arr:\n        temp.append((b[i] - j, i))\ntemp.sort()\n(start, end) = (0, 0)\nl = len(temp)\ncurr = 0\nans = 10000000000000\nd = [0 for i in range(n)]\nwhile end < l or (end == l and curr >= n):\n    if curr < n:\n        if d[temp[end][1]] == 0:\n            curr += 1\n        d[temp[end][1]] += 1\n        end += 1\n    else:\n        ans = min(ans, temp[end - 1][0] - temp[start][0])\n        d[temp[start][1]] -= 1\n        if d[temp[start][1]] == 0:\n            curr -= 1\n        start += 1\nprint(ans)", "import sys\nimport operator\nimport array\n\ndef solve():\n    a = tuple(map(int, input().split()))\n    n = int(input())\n    b = tuple(map(int, input().split()))\n    have = [[]] * (n * 6)\n    c = 0\n    for i in range(0, n):\n        for j in range(0, 6):\n            have[c] = (b[i] - a[j], i)\n            c += 1\n    have.sort(key=operator.itemgetter(0))\n    cnt = array.array('L', [0]) * n\n    z = n\n    sz = len(have)\n    ans = 999999999999\n    r = 0\n    for i in range(0, sz):\n        while r < sz and z > 0:\n            cnt[have[r][1]] += 1\n            if cnt[have[r][1]] == 1:\n                z -= 1\n            r += 1\n        if z > 0:\n            break\n        ans = min(ans, have[r - 1][0] - have[i][0])\n        cnt[have[i][1]] -= 1\n        if cnt[have[i][1]] == 0:\n            z += 1\n    print(ans)\n\ndef main(argv):\n    solve()\nmain(sys.argv)", "import sys\nimport operator\nimport array\n\ndef solve():\n    a = list(map(int, input().split()))\n    n = int(input())\n    b = list(map(int, input().split()))\n    have = []\n    arr_append = have.append\n    for i in range(0, n):\n        for j in range(0, 6):\n            arr_append((b[i] - a[j], i))\n    have.sort(key=operator.itemgetter(0))\n    cnt = array.array('L', [0]) * n\n    z = n\n    sz = len(have)\n    ans = 999999999999\n    r = 0\n    for i in range(0, sz):\n        while r < sz and z > 0:\n            cnt[have[r][1]] += 1\n            if cnt[have[r][1]] == 1:\n                z -= 1\n            r += 1\n        if z > 0:\n            break\n        ans = min(ans, have[r - 1][0] - have[i][0])\n        cnt[have[i][1]] -= 1\n        if cnt[have[i][1]] == 0:\n            z += 1\n    print(ans)\n\ndef main(argv):\n    solve()\nmain(sys.argv)", "import sys\nimport operator\nimport array\n\ndef solve():\n    a = list(map(int, input().split()))\n    n = int(input())\n    b = list(map(int, input().split()))\n    lad = [[]] * (n * 6)\n    c = 0\n    for i in range(0, n):\n        for j in range(0, 6):\n            lad[c] = (b[i] - a[j], i)\n            c += 1\n    lad.sort(key=operator.itemgetter(0))\n    cnt = array.array('L', [0]) * n\n    z = n\n    ladcnt = len(lad)\n    ans = 999999999999\n    r = 0\n    for i in range(0, ladcnt):\n        while r < ladcnt and z > 0:\n            cnt[lad[r][1]] += 1\n            if cnt[lad[r][1]] == 1:\n                z -= 1\n            r += 1\n        if z > 0:\n            break\n        ans = min(ans, lad[r - 1][0] - lad[i][0])\n        cnt[lad[i][1]] -= 1\n        if cnt[lad[i][1]] == 0:\n            z += 1\n    print(ans)\n\ndef main(argv):\n    solve()\nmain(sys.argv)", "import sys\nimport operator\nimport array\n\ndef solve():\n    a = list(map(int, input().split()))\n    n = int(input())\n    b = list(map(int, input().split()))\n    have = [[]] * (n * 6)\n    arr_append = have.append\n    for i in range(0, n):\n        for j in range(0, 6):\n            have[i * 6 + j] = (b[i] - a[j], i)\n    have.sort(key=operator.itemgetter(0))\n    cnt = array.array('L', [0]) * n\n    z = n\n    sz = len(have)\n    ans = 999999999999\n    r = 0\n    for i in range(0, sz):\n        while r < sz and z > 0:\n            cnt[have[r][1]] += 1\n            if cnt[have[r][1]] == 1:\n                z -= 1\n            r += 1\n        if z > 0:\n            break\n        ans = min(ans, have[r - 1][0] - have[i][0])\n        cnt[have[i][1]] -= 1\n        if cnt[have[i][1]] == 0:\n            z += 1\n    print(ans)\n\ndef main(argv):\n    solve()\nmain(sys.argv)", "import sys\na = list(set(map(int, sys.stdin.readline().split())))\nn = int(input())\nc2 = list(set(map(int, sys.stdin.readline().split())))\ns = 0\nn = len(c2)\nqm = 10 ** 9 + 1\nv = []\nc = [0] * n\nindex = 0\nfor q in range(len(a)):\n    for i in range(len(c2)):\n        v.append([c2[i] - a[q], i])\nv.sort()\nfor i in range(len(v)):\n    c[v[i][1]] += 1\n    if c[v[i][1]] == 1:\n        s += 1\n    if s == n:\n        while c[v[index][1]] > 1:\n            c[v[index][1]] -= 1\n            index += 1\n        if v[i][0] - v[index][0] < qm:\n            qm = v[i][0] - v[index][0]\n        c[v[index][1]] -= 1\n        if c[v[index][1]] == 0:\n            s -= 1\n        index += 1\nsys.stdout.write(str(qm))", "import sys\nimport operator\n\ndef solve():\n    a = list(map(int, input().split()))\n    n = int(input())\n    b = list(map(int, input().split()))\n    have = []\n    arr_append = have.append\n    for i in range(0, n):\n        for j in range(0, 6):\n            arr_append([b[i] - a[j], i])\n    have.sort(key=operator.itemgetter(0))\n    cnt = [0] * n\n    z = n\n    sz = len(have)\n    ans = 999999999999\n    r = 0\n    for i in range(0, sz):\n        while r < sz and z > 0:\n            cnt[have[r][1]] += 1\n            if cnt[have[r][1]] == 1:\n                z -= 1\n            r += 1\n        if z > 0:\n            break\n        ans = min(ans, have[r - 1][0] - have[i][0])\n        cnt[have[i][1]] -= 1\n        if cnt[have[i][1]] == 0:\n            z += 1\n    print(ans)\n\ndef main(argv):\n    solve()\nmain(sys.argv)"]