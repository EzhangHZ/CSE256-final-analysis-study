["def generate_result():\n    t = int(input())\n    ret = []\n    for _ in range(t):\n        (q, d) = map(int, input().split())\n        b = d * 10\n        for a in map(int, input().split()):\n            if a >= b:\n                yield 'YES'\n            else:\n                while a > 0:\n                    if a % d == 0:\n                        yield 'YES'\n                        break\n                    else:\n                        a -= 10\n                else:\n                    yield 'NO'\n\ndef main():\n    print('\\n'.join(generate_result()))\nmain()", "def generate_result():\n    t = int(input())\n    ret = []\n    for _ in range(t):\n        (q, d) = map(int, input().split())\n        if d == 2 or d == 5:\n            for a in map(int, input().split()):\n                if a >= d * 10 or a % d == 0:\n                    yield 'YES'\n                else:\n                    yield 'NO'\n        else:\n            if d % 2 == 0:\n                b = d * 10 - 1\n            else:\n                b = d * 10 - 10\n            for a in map(int, input().split()):\n                if a > b:\n                    yield 'YES'\n                else:\n                    while a > 0:\n                        if a % d == 0:\n                            yield 'YES'\n                            break\n                        else:\n                            a -= 10\n                    else:\n                        yield 'NO'\n\ndef main():\n    print('\\n'.join(generate_result()))\nmain()", "def main():\n    t = int(input())\n    ret = []\n    for _ in range(t):\n        (q, d) = map(int, input().split())\n        b = d * 10\n        for a in map(int, input().split()):\n            if a > b:\n                ret.append('YES')\n            else:\n                while a > 0:\n                    if a % d == 0:\n                        ret.append('YES')\n                        break\n                    else:\n                        a -= 10\n                else:\n                    ret.append('NO')\n    print('\\n'.join(ret))\nmain()", "def generate_result():\n    t = int(input())\n    ret = []\n    for _ in range(t):\n        (q, d) = map(int, input().split())\n        b = d * 10\n        if d == 2 or d == 5:\n            for a in map(int, input().split()):\n                if a >= b or a % d == 0:\n                    yield 'YES'\n                else:\n                    yield 'NO'\n        else:\n            for a in map(int, input().split()):\n                if a >= b:\n                    yield 'YES'\n                else:\n                    while a > 0:\n                        if a % d == 0:\n                            yield 'YES'\n                            break\n                        else:\n                            a -= 10\n                    else:\n                        yield 'NO'\n\ndef main():\n    print('\\n'.join(generate_result()))\nmain()", "T = int(input())\nans = ''\nfor _ in range(T):\n    qd = [int(i) for i in input().split()]\n    q = qd[0]\n    d = qd[1]\n    a = [int(i) for i in input().split()]\n    s = []\n    if d == 2:\n        s = [21]\n    elif d == 3:\n        s = [13, 23]\n    elif d == 4:\n        s = [41, 14, 43]\n    elif d == 5:\n        s = [51, 52, 53, 54]\n    elif d == 6:\n        s = [61, 26, 63, 16, 65]\n    elif d == 7:\n        s = [57, 37, 17, 67, 47, 27]\n    elif d == 8:\n        s = [81, 18, 83, 28, 85, 38, 87]\n    elif d == 9:\n        s = [19, 29, 39, 49, 59, 69, 79, 89]\n    for i in range(q):\n        if a[i] % d == 0:\n            ans += 'YES \\n'\n        else:\n            r = a[i] % d\n            if a[i] >= s[r - 1]:\n                ans += 'YES \\n'\n            else:\n                ans += 'NO \\n'\nprint(ans)", "def generate_result():\n    t = int(input())\n    ret = []\n    for _ in range(t):\n        (q, d) = map(int, input().split())\n        if d == 2 or d == 5:\n            b = d * 10\n            for a in map(int, input().split()):\n                if a >= b or a % d == 0:\n                    yield 'YES'\n                else:\n                    yield 'NO'\n        else:\n            if d % 2 == 0:\n                b = d * 10 - 1\n            else:\n                b = d * 10 - 10\n            for a in map(int, input().split()):\n                if a > b:\n                    yield 'YES'\n                else:\n                    while a > 0:\n                        if a % d == 0:\n                            yield 'YES'\n                            break\n                        else:\n                            a -= 10\n                    else:\n                        yield 'NO'\n\ndef main():\n    print('\\n'.join(generate_result()))\nmain()", "for _ in range(int(input())):\n    (q, d) = map(int, input().split())\n    f = [0] * 256\n    f[0] = 1\n    for i in range(128):\n        if f[i]:\n            f[i + d] = 1\n            for x in range(10):\n                f[i + d * 10 + x] = 1\n                f[i + x * 10 + d] = 1\n    for x in map(int, input().split()):\n        if x < d * 10:\n            print('YES' if f[x] else 'NO')\n        else:\n            print('YES')", "t = int(input())\nfor i in range(t):\n    (q, d) = list(map(int, input().strip().split()))\n    nums = []\n    dp = [False] * (10 * d)\n    dp[0] = True\n    for j in range(10):\n        nums.append(j * 10 + d)\n    for j in range(10):\n        for k in range(nums[j], 10 * d):\n            dp[k] |= dp[k - nums[j]]\n    a = list(map(int, input().strip().split()))\n    for j in range(q):\n        if a[j] >= 10 * d or dp[a[j]]:\n            print('YES')\n        else:\n            print('NO')", "import sys\n\ndef main():\n    test_cases = int(sys.stdin.readline())\n    for _ in range(test_cases):\n        (N, D) = (int(i) for i in sys.stdin.readline().split())\n        A = [int(i) for i in sys.stdin.readline().split()]\n        limit = 10 * D\n        T = [D + i * 10 for i in range(D)]\n        B = set([0])\n        while limit not in B:\n            B0 = set()\n            for b in B:\n                for t in T:\n                    if b + t <= limit:\n                        B0.add(b + t)\n            B.update(B0)\n        for a in A:\n            if a >= limit:\n                print('YES')\n            elif a in B:\n                print('YES')\n            else:\n                print('NO')\nmain()", "tc = int(input())\nfor _ in range(tc):\n    (q, d) = map(int, input().split())\n    a = list(map(int, input().split()))\n    good = [False] * 100\n    good[0] = True\n    for k in range(100):\n        if k % 10 == d or k // 10 == d:\n            for s in range(100 - k):\n                if good[s]:\n                    good[s + k] = True\n    for e in a:\n        if e >= 100 or good[e]:\n            print('YES')\n        else:\n            print('NO')", "def to_digits(n):\n    digits = []\n    while n > 0:\n        digits.append(n % 10)\n        n = n // 10\n    digits = digits[::-1]\n    return digits\n\ndef get_luckies(n, d):\n    agg = n * [False]\n    for x in range(n):\n        if d in to_digits(x):\n            agg[x] = True\n        else:\n            for j in range(x):\n                if agg[j] and agg[x - j]:\n                    agg[x] = True\n    return agg\n\ndef main():\n    maxn = 100\n    t = int(input())\n    for _ in range(t):\n        (q, d) = map(int, input().split())\n        xs = list(map(int, input().split()))\n        luckies = get_luckies(maxn, d)\n        for x in xs:\n            print('NO' if x < maxn and (not luckies[x]) else 'YES')\n    return None\nmain()", "t = int(input())\nfor i in range(t):\n    (q, d) = map(int, input().split())\n    Q = list(map(int, input().split()))\n    resultArr = [True] + [False] * (d * 10)\n    for j in range(d * 10):\n        if j < 10:\n            resultArr[j] = j % d == 0\n        else:\n            for k in range(j // 10 + 1):\n                if j - k * 10 - d > -1:\n                    resultArr[j] |= resultArr[j - k * 10 - d]\n    for a in Q:\n        if a < d * 10:\n            print('YES' if resultArr[a] else 'NO')\n        else:\n            print('YES')", "import sys\n\ndef answer(q, d, a):\n    for e in a:\n        if e >= d * 10:\n            print('YES')\n        elif e == d:\n            print('YES')\n        elif e < d:\n            print('NO')\n        elif e % d == 0:\n            print('YES')\n        elif e in lucky_sets[d]:\n            print('YES')\n        else:\n            print('NO')\n    return\n\ndef lucky(n, a):\n    if str(a) in str(n):\n        return True\n    else:\n        return False\n\ndef clsets():\n    lucky_sets = [0] * 10\n    lucky_sets[0] = set()\n    lucky_sets[1] = set()\n    lucky_sets[2] = set()\n    for i in range(3, 10, 1):\n        lucky_sets[i] = set()\n        for j in range(i, 10 * i, 1):\n            if lucky(j, i) or j - i in lucky_sets[i]:\n                lucky_sets[i].add(j)\n    return lucky_sets\nlucky_sets = clsets()\n\ndef main():\n    t = int(input())\n    while t:\n        (q, d) = [int(i) for i in sys.stdin.readline().split()]\n        a = [int(i) for i in sys.stdin.readline().split()]\n        answer(q, d, a)\n        t -= 1\n    return\nmain()", "ans = []\nfor _ in range(int(input())):\n    (q, d) = map(int, input().split())\n    li = [int(i) for i in input().split()]\n    for i in range(q):\n        if li[i] >= d * 10:\n            ans.append('YES')\n        else:\n            k = li[i]\n            while k > 0:\n                if k % d == 0:\n                    ans.append('YES')\n                    break\n                k -= 10\n            else:\n                ans.append('NO')\nprint('\\n'.join(ans))", "def hasDigit(x, d):\n    while x > 0:\n        q = x % 10\n        if q == d:\n            return True\n        x //= 10\n    return False\nt = int(input())\nwhile t > 0:\n    (q, d) = map(int, input().split())\n    l = list(map(int, input().split()))\n    p = [False] * 100\n    for i in range(1, 100):\n        if hasDigit(i, d):\n            p[i] = True\n        else:\n            for j in range(1, i):\n                if p[j] and p[i - j]:\n                    p[i] = True\n    for x in l:\n        if x >= 100 or p[x]:\n            print('YES')\n        else:\n            print('NO')\n    t -= 1", "cases = int(input())\nfor i in range(cases):\n    (q, d) = list(map(int, input().split()))\n    multiply_table = [max_dev for max_dev in range(d * 10, d * 10 + 10)]\n    for i in range(1, 10):\n        num_check = d * i\n        box_in = num_check % 10\n        if multiply_table[box_in] > num_check:\n            multiply_table[box_in] = num_check\n    list_num = list(map(int, input().split()))\n    for each_num in list_num:\n        unit = each_num % 10\n        if multiply_table[unit] > each_num:\n            print('NO')\n        else:\n            print('YES')", "import sys\ninput = sys.stdin.readline\n\ndef solution(q, d, arr, l_d):\n    luckies = list(range(d, 100, 10)) + list(range(d * 10, d * 10 + 10, 1))\n    up_ = 100\n    possibles = [False for _ in range(up_)]\n    possibles[0] = True\n    for luck_num in luckies:\n        for i in range(up_ - luck_num):\n            if possibles[i] is True:\n                possibles[i + luck_num] = True\n    for num in arr:\n        if num >= up_ or possibles[num] is True:\n            print('YES')\n        else:\n            print('NO')\nT = int(input())\nfor t in range(T):\n    [q, d] = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    l_d = [None for _ in range(10)]\n    for i in range(1, 11):\n        cur = i * d\n        rest = cur % 10\n        if l_d[rest] is None:\n            l_d[rest] = cur\n    solution(q, d, arr, l_d)", "import sys\n\ndef fn(n, d, a):\n    dp = [0] * (100 + 1)\n    for i in range(100 + 1):\n        k = i\n        while k > 0:\n            r = k % 10\n            if r == d:\n                dp[i] = 1\n                break\n            k = k // 10\n    dp[d] = 1\n    for i in range(100 + 1):\n        if i > d and dp[i - d] == 1:\n            dp[i] = 1\n    for i in range(n):\n        if a[i] > 100:\n            print('YES')\n            continue\n        if dp[a[i]] == 1:\n            print('YES')\n            continue\n        else:\n            print('NO')\n            continue\ninput = sys.stdin.read()\ndata = list(map(int, input.split()))\nt = data[0]\nl = 0\nfor i in range(t):\n    n = data[l + 1]\n    d = data[l + 2]\n    a = data[l + 3:l + n + 3]\n    l = l + 2 + n\n    fn(n, d, a)", "import sys\n\ndef fn(n, d, a):\n    dp = [0] * (90 + 1)\n    for i in range(90 + 1):\n        k = i\n        while k > 0:\n            r = k % 10\n            if r == d:\n                dp[i] = 1\n                break\n            k = k // 10\n    dp[d] = 1\n    for i in range(90 + 1):\n        if i > d and dp[i - d] == 1:\n            dp[i] = 1\n    for i in range(n):\n        if a[i] > 90:\n            print('YES')\n            continue\n        if dp[a[i]] == 1:\n            print('YES')\n            continue\n        else:\n            print('NO')\n            continue\ninput = sys.stdin.read()\ndata = list(map(int, input.split()))\nt = data[0]\nl = 0\nfor i in range(t):\n    n = data[l + 1]\n    d = data[l + 2]\n    a = data[l + 3:l + n + 3]\n    l = l + 2 + n\n    fn(n, d, a)", "t = int(input())\nfor _ in range(t):\n    qd = input().split(' ')\n    q = int(qd[0])\n    d = int(qd[1])\n    a_vec = input().split(' ')\n    a_vec = [int(a) for a in a_vec]\n    MAX_DIGIT = 100\n    dp = [0 for _ in range(MAX_DIGIT)]\n    dp[0] = 1\n    dp[d] = 1\n    for i in range(1, MAX_DIGIT):\n        for j in range(0, 10):\n            if i >= j * 10 + d:\n                dp[i] = dp[i] | dp[i - (j * 10 + d)]\n    for a in a_vec:\n        if a > 10 * d:\n            print('YES')\n        elif dp[a] == 1:\n            print('YES')\n        else:\n            print('NO')", "def isLucky(number, lucky, memo):\n    if number in memo:\n        return memo[number]\n    if number == lucky:\n        memo[number] = True\n        return True\n    elif number < lucky:\n        memo[number] = False\n        return False\n    else:\n        if str(lucky) in str(number):\n            memo[number] = True\n            return True\n        memo[number] = isLucky(number - lucky, lucky, memo)\n        return isLucky(number - lucky, lucky, memo)\nt = int(input())\nfor _ in range(t):\n    (q, d) = [int(x) for x in input().split()]\n    numbers = [int(x) for x in input().split()]\n    memo = {}\n    for num in numbers:\n        if num >= d * 10:\n            print('YES')\n            continue\n        elif isLucky(num, d, memo):\n            print('YES')\n        else:\n            print('NO')", "def is_d(n, d):\n    while n:\n        if n % 10 == d:\n            return True\n        n //= 10\n    return False\nfor _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    a = list(map(int, input().split()))\n    size = 10 * d + 1\n    dp = [False] * size\n    dp[0] = True\n    for i in range(1, len(dp)):\n        if i < d:\n            continue\n        elif i == d or i % d == 0 or is_d(i, d) or dp[i - d]:\n            dp[i] = True\n    for i in range(n):\n        if a[i] >= size:\n            print('YES')\n        elif dp[a[i]] == True:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    (q, d) = map(int, input().split(' '))\n    nums = list(map(int, input().split(' ')))\n    dp = [False for _ in range(10 * d)]\n    k = d + 1\n    dp[d] = True\n    while k < 10 * d:\n        if k % 10 == d:\n            dp[k] = True\n        else:\n            dp[k] = dp[k - d]\n        k += 1\n    for i in range(q):\n        if nums[i] >= 10 * d:\n            print('YES')\n        elif nums[i] == 0:\n            print('YES')\n        elif nums[i] < d:\n            print('NO')\n        else:\n            print('YES' if dp[nums[i]] else 'NO')", "t = int(input())\nfor _ in range(t):\n    (q, d) = map(int, input().split())\n    a = list(map(int, input().split()))\n    mx = 10 * d\n    dp = [0 for _ in range(mx)]\n    i = 0\n    while i * 10 + d < mx:\n        dp[i * 10 + d] = 1\n        i += 1\n    for k in range(0, d):\n        for w in range(mx - (k * 10 + d)):\n            dp[k * 10 + d + w] |= dp[w]\n    for n in a:\n        if n >= 10 * d:\n            print('YES')\n        elif dp[n]:\n            print('YES')\n        else:\n            print('NO')", "from collections import defaultdict as dd\nlim = 10 ** 4 + 1\ndp = [[0] * lim for i in range(10)]\nfor j in range(1, lim):\n    dp[1][j] = 1\nlast = [0, 1] + [0] * 8\n\ndef find(num, dig):\n    while num:\n        if num % 10 == dig:\n            return True\n        num = num // 10\n    return False\nfor digit in range(2, 10):\n    pos = [0] * digit\n    pos[0] = 1\n    for num in range(1, lim):\n        if find(num, digit) or pos[num % digit]:\n            dp[digit][num] = 1\n        pos[num % digit] = max(pos[num % digit], dp[digit][num])\n        if sum(pos) == digit:\n            last[digit] = num\n            break\nfor case in range(int(input())):\n    (q, d) = map(int, input().split())\n    arr = map(int, input().split())\n    for it in arr:\n        if it > last[d] or dp[d][it]:\n            print('YES')\n        else:\n            print('NO')", "def readInt():\n    return int(input())\n\ndef readInts():\n    return [int(x) for x in input().split()]\n\ndef readString():\n    return input().rstrip()\n\ndef readCase():\n    return readString()\nlucky_mod = [[0 for _ in range(n)] for n in range(10)]\nluckys = [set() for _ in range(10)]\nfor d in range(2, 10):\n    d_str = str(d)\n    x = 1\n    found = 0\n    while found < d:\n        if str(x).find(d_str) != -1:\n            mod = x % d\n            if lucky_mod[d][mod] == 0:\n                found += 1\n                luckys[d].add(x)\n                lucky_mod[d][mod] = x\n        x += 1\n\ndef solve(q, d, numbers):\n    result = []\n    for n in numbers:\n        if n in luckys[d]:\n            result.append('YES')\n        else:\n            sub = lucky_mod[d][n % d]\n            if n < sub:\n                result.append('NO')\n            else:\n                result.append('YES')\n    return result\ncases = readInt()\nfor case in range(cases):\n    (q, d) = readInts()\n    numbers = readInts()\n    for x in solve(q, d, numbers):\n        print(x)", "for ashdjiasjd in range(int(input())):\n    (_, d) = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [0] * 100\n    for i in range(d, 100):\n        if i % 10 == d or i // 10 == d:\n            dp[i] = 1\n        if dp[i] == 1:\n            for j in range(1, 100 // d):\n                if i + j * d >= 99:\n                    break\n                dp[i + j * d] = 1\n    for x in a:\n        if x < d * 10:\n            print('YNEOS'[1 - dp[x]::2])\n        else:\n            print('YES')", "for _ in range(int(input())):\n    (q, d) = map(int, input().split())\n    limits = {}\n    for i in range(d, 10 * d, 10):\n        if i % d not in limits.keys():\n            limits[i % d] = i - d\n    for i in range(d):\n        if i not in limits.keys():\n            limits[i] = 10 * d - 1\n    for n in map(int, input().split()):\n        mod = n % d\n        if n <= limits[mod]:\n            print('NO')\n        else:\n            print('YES')", "for t in range(0, int(input())):\n    (q, d) = tuple(map(int, input().split()))\n    nums = list(map(int, input().split()))\n    check = {}\n    for x in range(1, 11):\n        r = x * d % 10\n        if r not in check:\n            check[r] = x\n    for i in nums:\n        if d == 1 or i >= d * 10:\n            print('YES')\n        else:\n            y = i % 10\n            z = i // d\n            if y in check and check[y] <= z:\n                print('YES')\n            else:\n                print('NO')", "from collections import *\nfrom math import *\nmn = []\nfor i in range(10):\n    if i == 0:\n        mn.append([])\n        continue\n    ck = [0] * 105\n    d = i\n    arr = [d]\n    t = 10\n    for i in range(10):\n        arr.append(t + d)\n        t += 10\n    ck = [0] * 105\n    ck[0] = 1\n    for i in range(102):\n        for j in arr:\n            if j > i:\n                break\n            if ck[i - j] == 1:\n                ck[i] = 1\n    mn.append(ck)\nTT = int(input())\nfor y in range(TT):\n    (n, d) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    arr = [d]\n    t = 10\n    for i in range(10):\n        arr.append(t + d)\n        t += 10\n    for temp in lst:\n        if temp < d:\n            print('NO')\n        elif d * 10 <= temp:\n            print('YES')\n        elif mn[d][temp] == 1:\n            print('YES')\n        else:\n            print('NO')", "for _ in range(int(input())):\n    (q, d) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    ans = [10 ** 18 for i in range(d)]\n    x = d\n    for i in range(10):\n        m = x % d\n        if ans[m] == 10 ** 18:\n            ans[m] = x\n        x += 10\n    x = 10 * d\n    for i in range(10):\n        m = x % d\n        if ans[m] == 10 ** 18:\n            ans[m] = x\n        x += 1\n    for i in range(q):\n        m = arr[i] % d\n        if arr[i] >= ans[m]:\n            print('YES')\n        else:\n            print('NO')", "prepair = [[0 for i in range(10)] for j in range(10)]\n\ndef isLucky(n, d):\n    return str(d) in str(n)\nfor i in range(2, 10):\n    for j in range(i, 100):\n        if isLucky(j, i):\n            mod = j % i\n            if prepair[i][mod] == 0:\n                prepair[i][mod] = j\ntest = int(input())\nfor _ in range(test):\n    (n, d) = map(int, input().split())\n    a = list(map(int, input().split()))\n    for x in a:\n        print('YES' if prepair[d][x % d] <= x else 'NO')", "T = int(input())\nfor t in range(T):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    vis = [0 for it in range(10)]\n    mi = [0 for it in range(10)]\n    now = m\n    res = m\n    while not vis[now]:\n        vis[now] = 1\n        mi[now] = res\n        res += m\n        now = (now + m) % 10\n    for i in range(n):\n        if a[i] >= 10 * m:\n            print('YES')\n        else:\n            pos = a[i] % 10\n            if not vis[pos]:\n                print('NO')\n            elif a[i] >= mi[pos]:\n                print('YES')\n            else:\n                print('NO')", "for _ in range(int(input())):\n    (q, d) = map(int, input().split())\n    (values, scale) = ([int(i) for i in input().split()], 10 * d)\n    dp = [0 for i in range(scale + 1)]\n    (dp[0], i) = (1, 0)\n    while 10 * i + d <= scale:\n        j = 0\n        while 10 * i + j + d <= scale:\n            dp[10 * i + j + d] = max(dp[10 * i + j + d], dp[j])\n            j += 1\n        i += 1\n    for i in range(q):\n        if values[i] >= scale or dp[values[i]]:\n            print('YES')\n        else:\n            print('NO')", "import sys\nsys.setrecursionlimit(1000000)\nfrom collections import defaultdict, deque, Counter\nfrom itertools import permutations\nfrom math import sqrt, gcd, pi, factorial\nfrom functools import reduce\nfrom sys import stdin\nfrom bisect import bisect_right, bisect_left\nfrom copy import copy\nfrom heapq import heapify, heappop, heappush\nimport time\nfrom random import randrange\nMAX = 100\n\ndef solve(n, d, a):\n    dp = [False for _ in range(MAX + 1)]\n    dp[0] = True\n    for i in range(1, MAX + 1):\n        for j in range(1, i + 1):\n            if dp[i - j] and str(d) in str(j):\n                dp[i] = True\n                break\n    ret = [aa > 100 or dp[aa] for aa in a]\n    return ret\nt = int(input())\nanss = [[] for _ in range(t)]\nfor i in range(t):\n    (n, d) = map(int, input().split())\n    a = list(map(int, input().split()))\n    anss[i] = solve(n, d, a)\nfor ans in anss:\n    for a in ans:\n        if a:\n            print('YES')\n        else:\n            print('NO')", "for x in range(int(input())):\n    (q, d) = map(int, input().split())\n    data = list(map(int, input().split()))\n    dp = [False] * (10 * d)\n    dp[d] = True\n    length = d + 1\n    steps = [d]\n    for i in range(d, 10 * d):\n        if str(d) in str(i):\n            dp[i] = True\n            steps.append(i)\n            continue\n        for j in steps:\n            if dp[i - j]:\n                dp[i] = True\n            break\n    for _ in data:\n        print('YES') if _ >= 10 * d or dp[_] else print('NO')", "for i in range(int(input())):\n    (q, d) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if not d:\n        d += 10\n    dp = [0] * 207\n    dp[0] = 1\n    mx = d * 10\n    for i in range(mx):\n        if 10 * i + d <= mx:\n            for j in range(mx):\n                if 10 * i + d + j <= mx:\n                    dp[10 * i + d + j] |= dp[j]\n    x = 0\n    while q:\n        q -= 1\n        u = a[x]\n        x += 1\n        if u >= mx or dp[u]:\n            print('YES')\n        else:\n            print('NO')", "for u in range(int(input())):\n    (n, d) = map(int, input().split())\n    x = [int(w) for w in input().split()]\n    dp = [0] * (10 * d)\n    dp[0] = 1\n    for i in range(1, 10 * d):\n        if str(d) in str(i):\n            dp[i] = 1\n    for i in range(1, len(dp)):\n        if dp[i]:\n            continue\n        else:\n            for j in range(1, i // 2 + 1):\n                if dp[j] and dp[i - j]:\n                    dp[i] = 1\n                    break\n                else:\n                    continue\n    for i in x:\n        if i >= 10 * d:\n            print('YES')\n        elif dp[i]:\n            print('YES')\n        else:\n            print('NO')", "def nr():\n    return int(input())\n\ndef nrs():\n    return [int(item) for item in input().split()]\ncache = {}\n\ndef lucky(d, item):\n    if item in cache:\n        return cache[item]\n    if item < d:\n        return False\n    elif item >= d * 10:\n        return True\n    elif item % d == 0:\n        return True\n    elif item % 10 == d:\n        return True\n    res = lucky(d, item - d)\n    cache[item] = res\n    return res\n\ndef f(d, arr):\n    cache.clear()\n    for item in arr:\n        print('YES' if lucky(d, item) else 'NO')\nfor _ in range(nr()):\n    (q, d) = nrs()\n    f(d, nrs())", "for t in range(0, int(input())):\n    (q, d) = tuple(map(int, input().split()))\n    nums = list(map(int, input().split()))\n    check = {}\n    for x in range(1, 11):\n        r = x * d % 10\n        if r not in check:\n            check[r] = x\n    for i in nums:\n        if d == 1 or i >= d * 10:\n            print('YES')\n        else:\n            y = i % 10\n            z = i // d\n            if y in check and check[y] <= z:\n                print('YES')\n            else:\n                print('NO')", "import sys\ninput = sys.stdin.readline\ntmp = [[] for _ in range(10)]\nfor i in range(2, 10):\n    for j in range(1, i * 10):\n        ttmp = j\n        flag = True\n        while ttmp > 0:\n            if ttmp % 10 == i:\n                flag = False\n            ttmp -= i\n        if flag:\n            tmp[i].append(j)\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    ls = list(map(int, input().split()))\n    for it in ls:\n        if it in tmp[m]:\n            print('NO')\n        else:\n            print('YES')", "def create(arr, v):\n    x = len(arr)\n    dp = [[0 for i in range(v)] for j in range(x + 1)]\n    for i in range(x + 1):\n        dp[i][0] = 1\n    for i in range(x + 1):\n        for j in range(v):\n            if arr[i - 1] > j:\n                dp[i][j] = dp[i - 1][j]\n            else:\n                dp[i][j] = dp[i - 1][j] or dp[i][j - arr[i - 1]]\n    for i in arr:\n        dp[x][i] = 1\n    return dp\n\ndef inl():\n    return [int(i) for i in input().split()]\n\ndef inp():\n    return int(input())\nfor _ in range(inp()):\n    (q, d) = inl()\n    v = 10 * d\n    a = inl()\n    arr = []\n    for i in range(d):\n        arr.append(d + 10 * i)\n    dp = create(arr, v)\n    x = len(arr)\n    for i in range(v):\n        if dp[x][i] and i not in arr:\n            arr.append(i)\n    dp = create(arr, v)\n    x = len(dp) - 1\n    for i in a:\n        if i < v:\n            if dp[x][i]:\n                print('YES')\n            else:\n                print('NO')\n        else:\n            print('YES')", "T = int(input())\nfor t in range(T):\n    (q, d) = tuple([int(x) for x in input().split()])\n    aa = [int(x) for x in input().split()]\n    end_min = {}\n    for i in range(1, 11):\n        mult = d * i\n        end_digit = mult % 10\n        end_min[end_digit] = min(end_min.get(end_digit, 10), mult // 10)\n    for a in aa:\n        if a >= 10 * d:\n            print('YES')\n        elif a // 10 >= end_min.get(a % 10, 1000000):\n            print('YES')\n        else:\n            print('NO')", "def ans(x, d, l):\n    try:\n        t = l.index(x % 10)\n    except:\n        if x > d * 10:\n            return 'YES'\n        else:\n            return 'NO'\n    if d * t <= x:\n        return 'YES'\n    else:\n        return 'NO'\nt = int(input())\nfor _ in range(t):\n    (q, d) = [int(i) for i in input().strip().split()]\n    a = [int(i) for i in input().strip().split()]\n    l = [-1]\n    for i in range(1, 11):\n        l.append(d * i % 10)\n    for x in a:\n        print(ans(x, d, l))", "I = lambda : [*map(int, input().split())]\n(t,) = I()\nfor _ in ' ' * t:\n    (n, k) = I()\n    l = I()\n    a = [1000000000.0 + 1] * 10\n    for i in range(10, 0, -1):\n        a[k * i % 10] = i * k\n    for i in l:\n        print('YNEOS'[i < k * 10 and a[i % 10] > i::2])", "import math\n\ndef bruteForce(num):\n    sol = []\n    for i in range(num):\n        sol.append(num + i * 10)\n    numIter = num\n    while numIter < num * 10:\n        for i in range(num):\n            if numIter + sol[i] < num * 10:\n                sol.append(numIter + sol[i])\n        numIter += num\n    return list(set(sol))\nnbTests = int(input())\nfor k in range(nbTests):\n    nnum = input().split()\n    (n, num) = (int(nnum[0]), int(nnum[1]))\n    T = list(map(int, input().split()))\n    sol = bruteForce(num)\n    for toTest in T:\n        if toTest >= num * 10:\n            print('YES')\n        elif toTest in sol:\n            print('YES')\n        else:\n            print('NO')", "from math import *\nfrom collections import *\nfrom functools import *\nfrom bisect import *\nfrom itertools import *\nfrom heapq import *\nfrom statistics import *\ninf = float('inf')\nninf = -float('inf')\nip = input\nalphal = 'abcdefghijklmnopqrstuvwxyz'\nalphau = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\ndef ipl():\n    return list(map(int, ip().split()))\n\ndef ipn():\n    return int(ip())\n\ndef ipf():\n    return float(ip())\n\ndef solve():\n    (q, d) = ipl()\n    a = ipl()\n    l = []\n    i = 0\n    if not d:\n        d += 10\n    while d + 10 * i <= d * 10:\n        l.append(d + 10 * i)\n        i += 1\n    dp = {}\n\n    def sol(i, t):\n        if (i, t) in dp:\n            return dp[i, t]\n        if t == 0:\n            return True\n        if i == len(l) or t < 0:\n            return False\n        dp[i, t] = sol(i, t - l[i]) or sol(i + 1, t)\n        return dp[i, t]\n    for i in a:\n        print('YES' if (True if i >= d * 10 else sol(0, i)) else 'NO')\nfor _ in range(ipn()):\n    solve()", "def luckyNumbers(n, k, array):\n    ans = []\n    s = []\n    for x in range(10):\n        s.append(k * (x + 1))\n    for x in array:\n        if x > s[-1]:\n            ans.append('YES')\n        else:\n            flag = 0\n            for i in s:\n                if x >= i and x % 10 == i % 10:\n                    flag = 1\n                    ans.append('YES')\n                    break\n            if flag == 0:\n                ans.append('NO')\n    return ans\nt = int(input())\nfinal = []\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    l = map(int, input().split())\n    final.append(luckyNumbers(n, k, l))\nfor _ in range(t):\n    for x in final[_]:\n        print(x)", "import math\nt = int(input())\n\ndef check(a, b):\n    while a > 0:\n        if a % 10 == b:\n            return True\n        a -= b\n    return False\nwhile t > 0:\n    t -= 1\n    stack1 = []\n    (q, d) = map(int, input().split())\n    stack = [int(x) for x in input().split()]\n    dd = d * 10\n    for i in stack:\n        if i >= dd:\n            print('YES')\n        elif check(i, d):\n            print('YES')\n        else:\n            print('NO')", "from collections import Counter\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l1 = [0]\n    for i in range(m, 10 * m):\n        if str(m) in str(i) and i % m != 0:\n            l1.append(i)\n    l2 = []\n    for i in range(1, 10 * m):\n        for j in range(len(l1)):\n            if i > l1[j] and abs(l1[j] - i) % m == 0:\n                l2.append(i)\n    l2 = l2 + l1\n    for i in range(n):\n        if l[i] in l2 or l[i] >= 10 * m:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nfor t in range(t):\n    (p, q) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    lst1 = []\n    for i in range(1, 10):\n        q1 = q * i % 10\n        lst1.append(q1)\n    lst1.append(0)\n    for i in range(len(lst)):\n        if lst[i] >= q * 10:\n            print('YES')\n        elif lst[i] % 10 in lst1:\n            q1 = lst[i] % 10\n            if (lst1.index(q1) + 1) * q <= lst[i]:\n                print('YES')\n            else:\n                print('NO')\n        else:\n            print('NO')", "import math\nt = int(input())\n\ndef check(a, b):\n    while a > 0:\n        if a % 10 == b:\n            return True\n        a -= b\n    return False\nwhile t > 0:\n    t -= 1\n    stack1 = []\n    (q, d) = map(int, input().split())\n    stack = [int(x) for x in input().split()]\n    dd = d * 10\n    for i in stack:\n        if i >= dd:\n            print('YES')\n        elif check(i, d):\n            print('YES')\n        else:\n            print('NO')", "Y = 'YES'\nN = 'NO'\nN = 'NO'\nmem = {}\nfor i in range(3, 10):\n    mem[i] = set()\n    for j in range(i, i * 10):\n        if j == i or j // 10 == i or j % 10 == i or (j - i in mem[i]):\n            mem[i].add(j)\n\ndef test(x, n):\n    if n == 1:\n        return Y\n    if n == 2:\n        if x >= 20 or x % 2 == 0:\n            return Y\n        return N\n    if x % n == 0 or x >= n * 10:\n        return Y\n    if x in mem[n]:\n        return Y\n    return N\nt = int(input().strip())\nfor i in range(t):\n    (q, d) = tuple(map(int, input().strip().split()))\n    a = list(map(int, input().strip().split()))\n    for j in range(q):\n        print(test(a[j], d))", "def yes(n, d):\n    if n > 10 * d:\n        return 'YES'\n    while n >= d:\n        if not (n := (n - d)) % 10:\n            return 'YES'\n    return 'NO'\nfor x in range(int(input())):\n    d = int(input().split()[1])\n    for n in map(int, input().split()):\n        print(yes(n, d))", "for _ in range(int(input())):\n    (q, d) = map(int, input().split())\n    l = list(map(int, input().split()))\n    num = [[1], [2, 21], [3, 13, 23], [4, 41, 14, 43], [5, 51, 52, 53, 54], [6, 61, 26, 63, 16, 65], [7, 57, 37, 17, 67, 47, 27], [8, 81, 18, 83, 28, 85, 38, 87], [9, 19, 29, 39, 49, 59, 69, 79, 89]]\n    for i in l:\n        if str(d) in str(i) or d == 1:\n            print('YES')\n        else:\n            x = i % d\n            if i >= num[d - 1][x]:\n                print('YES')\n            else:\n                print('NO')", "def fn1(i, dream, dd):\n    if str(dd) in str(i) or dd == 1:\n        print('YES')\n    else:\n        x = i % dd\n        if i >= dream[dd - 1][x]:\n            print('YES')\n        else:\n            print('NO')\nt = int(input())\nfor tc in range(t):\n    (mm, dd) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    dream = [[1], [2, 21], [3, 13, 23], [4, 41, 14, 43], [5, 51, 52, 53, 54], [6, 61, 26, 63, 16, 65], [7, 57, 37, 17, 67, 47, 27], [8, 81, 18, 83, 28, 85, 38, 87], [9, 19, 29, 39, 49, 59, 69, 79, 89]]\n    for i in lis:\n        fn1(i, dream, dd)", "mat = [([11 * d] * 10)[:] for d in range(10)]\nfor d in range(1, 10):\n    unit = d\n    started = False\n    mat[d][d] = d\n    while unit % 10 != 0 or not started:\n        started = True\n        unit += d\n        mat[d][unit % 10] = unit\nfor _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    for num in map(int, input().split()):\n        unit = num % 10\n        if num >= mat[d][unit] or str(d) in str(num):\n            print('YES')\n        else:\n            print('NO')", "import sys\ndd = {}\ndd[2] = [0, 21]\ndd[3] = [0, 13, 23]\ndd[4] = [0, 41, 14, 43]\ndd[5] = [0, 51, 52, 53, 54]\ndd[6] = [0, 61, 26, 63, 16, 65]\ndd[7] = [0, 57, 37, 17, 67, 47, 27]\ndd[8] = [0, 81, 18, 83, 28, 85, 38, 87]\ndd[9] = [0, 19, 29, 39, 49, 59, 69, 79, 89]\nT = int(sys.stdin.readline().strip())\nwhile T > 0:\n    T -= 1\n    (n, d) = sys.stdin.readline().strip().split(' ')\n    b = sys.stdin.readline().strip()\n    b = b.split(' ')\n    for one in b:\n        if d == '1':\n            print('YES')\n            continue\n        if d in one:\n            print('YES')\n            continue\n        (x, y) = (int(one), int(d))\n        if x > dd[y][x % y]:\n            print('YES')\n        else:\n            print('NO')", "def answer(val):\n    if d * 10 <= val:\n        return 'YES'\n    while val > 0:\n        if val % d == 0:\n            return 'YES'\n        val -= 10\n    return 'NO'\nfor t in range(int(input())):\n    (n, d) = map(int, input().split())\n    a = list(map(int, input().split()))\n    for i in a:\n        print(answer(i))", "mat = [([10 * d] * 10)[:] for d in range(10)]\nfor d in range(1, 10):\n    unit = d\n    started = False\n    mat[d][d] = d\n    while unit % 10 != 0 or not started:\n        started = True\n        unit += d\n        mat[d][unit % 10] = unit\nfor _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    for num in map(int, input().split()):\n        unit = num % 10\n        if num >= mat[d][unit] or str(d) in str(num):\n            print('YES')\n        else:\n            print('NO')", "def isDigitPresent(x, d):\n    while x > 0:\n        if x % 10 == d:\n            break\n        x = x / 10\n    return x > 0\n\ndef Array(n):\n    arr = [False] * (10 * n)\n    for i in range(1, 10 * n):\n        arr[i] = isDigitPresent(i, n)\n    arr[0] = True\n    for i in range(1, 10 * n):\n        if not arr[i]:\n            for j in range(i - 1, 0, -1):\n                if arr[j]:\n                    if arr[i % j]:\n                        arr[i] = True\n    arr[0] = False\n    return arr\nfor _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    sol_Arr = Array(d)\n    for i in arr:\n        if i >= 10 * d:\n            print('YES')\n        elif sol_Arr[i]:\n            print('YES')\n        else:\n            print('NO')", "def main():\n    t = int(input())\n    ret = []\n    for _ in range(t):\n        (q, d) = map(int, input().split())\n        b = d * 10\n        for a in map(int, input().split()):\n            if a >= b:\n                print('YES')\n            else:\n                while a > 0:\n                    if a % d == 0:\n                        print('YES')\n                        break\n                    else:\n                        a -= 10\n                else:\n                    print('NO')\nmain()", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = input().split()\n    d = {}\n    for i in c:\n        f = 0\n        if i in d:\n            print(d[i])\n            f = 1\n            continue\n        for j in range(10):\n            if int(i) >= b * 10:\n                d[i] = 'YES'\n                print('YES')\n                f = 1\n                break\n            elif int(i) - b * j <= 0:\n                d[i] = 'NO'\n                print('NO')\n                f = 1\n                break\n            elif str(b) in str(int(i) - b * j):\n                d[i] = 'YES'\n                print('YES')\n                f = 1\n                break\n        if f == 0:\n            d[i] = 'NO'\n            print('NO')", "def main():\n    for _ in range(int(input())):\n        input_list = list(map(int, input().split(' ')))\n        (q, d) = (input_list[0], input_list[1])\n        a = list(map(int, input().split(' ')))\n        for x in a:\n            if x >= 10 * d:\n                print('YES')\n                continue\n            else:\n                x = x - d\n                while x % 10 != 0 and x >= 0:\n                    x = x - d\n                if x >= 0:\n                    print('YES')\n                else:\n                    print('NO')\nmain()", "from functools import lru_cache\n\nclass Solution:\n\n    def minimumSize(self):\n        t = int(input())\n        while t >= 1:\n            (q, d) = map(int, input().split())\n            arr = list(map(int, input().split()))\n            for i in range(len(arr)):\n                if arr[i] >= 10 * d:\n                    print('YES')\n                    continue\n                else:\n                    number = arr[i]\n                    isLucky = False\n                    while number > 0:\n                        if number % 10 == d:\n                            print('YES')\n                            isLucky = True\n                            break\n                        number -= d\n                    if not isLucky:\n                        print('NO')\n            t -= 1\ns = Solution()\ns.minimumSize()", "def number():\n    return int(input())\n\ndef numbers():\n    return [int(item) for item in input().split()]\n\ndef make(n):\n    res = []\n    for i in range(1, 11):\n        for j in range(n * i, n * 10 + 1, 10):\n            res.append(j)\n    res = list(set(res))\n    res.sort()\n    return res\ntable = [make(i) for i in range(1, 10)]\n\ndef f(d, item):\n    t = table[d - 1]\n    return item >= t[-1] or item in t\nfor i in range(number()):\n    (q, d) = numbers()\n    for item in numbers():\n        print('YES' if f(d, item) else 'NO')", "t = int(input())\n\ndef run_case(test):\n    (n, d) = [int(x) for x in input().split()]\n    lst = [int(x) for x in input().split()]\n    for num in lst:\n        if num >= 10 * d:\n            print('YES')\n            continue\n        else:\n            while num > 0:\n                if num % d == 0:\n                    print('YES')\n                    break\n                num -= 10\n            if num <= 0:\n                print('NO')\nfor test in range(t):\n    run_case(test)", "t = int(input())\nfor _ in range(t):\n    (q, d) = map(int, input().split())\n    a = list(map(int, input().split()))\n    for i in a:\n        if i >= d * 10:\n            ans = 'YES'\n        else:\n            ans = 'NO'\n            while i >= d:\n                if i % d == 0:\n                    ans = 'YES'\n                    break\n                i -= 10\n        print(ans)", "def Solve():\n    for t in range(int(input())):\n        (q, d) = map(int, input().split())\n        a = list(map(int, input().split()))\n        for i in a:\n            while 0 < i < 10 * d and i % d != 0:\n                i -= 10\n            if i < d:\n                print('NO')\n            else:\n                print('YES')\nSolve()", "def Solve():\n    (qs, ds, A) = ([], [], [])\n    for t in range(int(input())):\n        (q, d) = map(int, input().split())\n        qs.append(q)\n        ds.append(d)\n        A.append(list(map(int, input().split())))\n    for (q, d, a) in zip(qs, ds, A):\n        for i in a:\n            while 0 < i < 10 * d and i % d != 0:\n                i -= 10\n            if i < d:\n                print('NO')\n            else:\n                print('YES')\nSolve()", "class Solution:\n\n    def solve(self, q, d):\n        n = len(q)\n        for i in range(n):\n            if q[i] >= d * 10:\n                print('YES')\n            elif d == 1:\n                print('YES')\n            elif q[i] % 10 == d:\n                print('YES')\n            elif q[i] % d == 0:\n                print('YES')\n            else:\n                result = self.is_lucky(q[i], d)\n                print(result)\n\n    def is_lucky(self, num, d):\n        while True:\n            if num < d:\n                return 'NO'\n            if num % 10 == d:\n                return 'YES'\n            num -= d\nsol = Solution()\ntests = int(input())\nfor i in range(tests):\n    (_, d) = list(map(int, input().split()))\n    q = list(map(int, input().split()))\n    sol.solve(q, d)", "class Solution:\n\n    def solve(self, q, d):\n        n = len(q)\n        for i in range(n):\n            if q[i] >= d * 10:\n                print('YES')\n            elif d == 1:\n                print('YES')\n            elif q[i] % 10 == d:\n                print('YES')\n            else:\n                result = self.is_lucky(q[i], d)\n                print(result)\n\n    def is_lucky(self, num, d):\n        while True:\n            if num < d:\n                return 'NO'\n            if num % 10 == d:\n                return 'YES'\n            num -= d\nsol = Solution()\ntests = int(input())\nfor i in range(tests):\n    (_, d) = list(map(int, input().split()))\n    q = list(map(int, input().split()))\n    sol.solve(q, d)", "def ass(a, b):\n    print(f'Assertion error: {a} != {b}' if a != b else 'OK')\n\ndef number():\n    return int(input())\n\ndef numbers():\n    return [int(item) for item in input().split()]\n\ndef word():\n    return input()\n\ndef words():\n    return [item for item in input().split()]\n\ndef dump(lst):\n    for (i, item) in enumerate(lst):\n        print(i, item)\n\ndef binsearch(arr, a, b):\n    m = (a + b) // 2\n    if a >= b:\n        return a - 1 if arr[a] == 0 else a\n    return binsearch(arr, a, m - 1) if arr[m] == 0 else binsearch(arr, m + 1, b)\n\ndef gcd(x, y):\n    return x if y == 0 else gcd(y, x % y)\n\ndef lcm(x, y):\n    return x * y // gcd(x, y)\n\ndef make(n):\n    res = []\n    for i in range(1, 11):\n        for j in range(n * i, n * 10 + 1, 10):\n            res.append(j)\n    res = list(set(res))\n    res.sort()\n    return res\ntable = [0]\nfor i in range(1, 10):\n    table.append(make(i))\n\ndef f(d, item):\n    t = table[d]\n    return item >= t[-1] or item in t\nfor i in range(number()):\n    (q, d) = numbers()\n    for item in numbers():\n        print('YES' if f(d, item) else 'NO')", "def mas(d):\n    a = []\n    for i in range(d, d * 10, 10):\n        for j in range(0, d * 10, d):\n            a.append(i + j)\n    return a\nfor i in range(int(input())):\n    (q, d) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = mas(d)\n    b.sort()\n    for j in range(len(a)):\n        if a[j] not in b and a[j] < d * 10:\n            print('NO')\n        else:\n            print('YES')", "def Solve():\n    for t in range(int(input())):\n        (q, d) = map(int, input().split())\n        a = list(map(int, input().split()))\n        for i in a:\n            while 0 < i < 10 * d and i % d != 0:\n                i -= 10\n            if i < d:\n                print('NO')\n            else:\n                print('YES')\nSolve()", "t = int(input())\nfor _ in range(t):\n    (n, d) = map(int, input().split())\n    l = [int(x) for x in input().split()]\n    x = d * 10\n    for ele in l:\n        if ele < x:\n            while ele > 0 and ele % 10 != d:\n                ele -= d\n            if ele <= 0:\n                print('NO')\n            else:\n                print('YES')\n        else:\n            print('YES')", "T = int(input())\nr = 1\n\ndef judge(num, d):\n    if num >= 10 * d:\n        return True\n    while num > 0:\n        if num % 10 == d:\n            return True\n        num -= d\n    return False\nwhile r <= T:\n    (n, d) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    ans = []\n    for ele in arr:\n        flag = judge(ele, d)\n        if flag:\n            print('YES')\n        else:\n            print('NO')\n    r += 1", "def solve(it, d):\n    if it >= 10 * d:\n        return 'YES'\n    remain = it % d\n    if remain == 0:\n        return 'YES'\n    while remain < 100:\n        remain += d\n        if remain >= it:\n            return 'NO'\n        if remain % 10 == 0:\n            return 'YES'\n    return 'NO'\nfor _ in range(int(input())):\n    (__, d) = [int(i) for i in input().split(' ')]\n    a = [int(i) for i in input().split(' ')]\n    for it in a:\n        print(solve(it, d))", "def solve(d, a):\n    if a > d * 10:\n        return 'YES'\n    if a % 10 == d:\n        return 'YES'\n    while a > 0:\n        if a % 10 == d:\n            return 'YES'\n        a -= d\n    return 'NO'\n\ndef main():\n    ans = []\n    t = int(input())\n    for _ in range(t):\n        (q, d) = map(int, input().split(' '))\n        A = list(map(int, input().split(' ')))\n        for a in A:\n            ans.append(solve(d, a))\n    for a in ans:\n        print(a)\nmain()", "t = int(input())\nfor i in range(t):\n    (q, d) = map(int, input().split())\n    a = list(map(int, input().split()))\n    lst1 = []\n    lst2 = []\n    for k in range(1, 11):\n        if k * d % 10 in lst1:\n            continue\n        else:\n            lst1.append(k * d % 10)\n            lst2.append(k * d)\n    for l in range(0, 10):\n        if (10 * d + l) % 10 not in lst1:\n            lst1.append((10 * d + l) % 10)\n            lst2.append(10 * d + l)\n    for j in range(len(a)):\n        answer = 'NO'\n        if a[j] % 10 in lst1:\n            c = lst1.index(a[j] % 10)\n            d = lst2[c]\n            if a[j] >= d:\n                answer = 'YES'\n        print(answer)", "def solve():\n    (n, d) = map(int, input().split())\n    a = list(map(int, input().split()))\n    for x in a:\n        if x % d == 0 or x > d * 10:\n            print('YES')\n        else:\n            op = x % 10\n            temp = d\n            while temp < x:\n                if temp % 10 == x % 10:\n                    break\n                temp += d\n            if temp <= x:\n                print('YES')\n            else:\n                print('NO')\nfor _ in range(int(input())):\n    solve()", "three = {13, 16, 19, 22, 23, 29, 25, 26, 28}\nfour = {34, 38, 14, 18, 22, 26, 30}\nsix = {32, 34, 26, 38, 40, 44, 46, 16, 50, 52, 22, 56, 58, 28}\nseven = {17, 24, 27, 31, 34, 37, 38, 41, 44, 45, 47, 48, 51, 52, 54, 55, 57, 58, 59, 61, 62, 64, 65, 66, 68, 69}\neight = {18, 26, 28, 34, 36, 38, 42, 44, 46, 50, 52, 54, 58, 60, 62, 66, 68, 70, 74, 76, 78}\nnine = {19, 28, 29, 37, 38, 39, 46, 47, 48, 49, 55, 56, 57, 58, 59, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88}\ncases = int(input())\nwhile cases:\n    cases -= 1\n    (a, d) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    for num in arr:\n        if num % d == 0:\n            print('YES')\n        elif num >= d * 10:\n            print('YES')\n        elif str(d) in str(num):\n            print('YES')\n        elif d == 3 and num in three:\n            print('YES')\n        elif d == 4 and num in four:\n            print('YES')\n        elif d == 6 and num in six:\n            print('YES')\n        elif d == 7 and num in seven:\n            print('YES')\n        elif d == 8 and num in eight:\n            print('YES')\n        elif d == 9 and num in nine:\n            print('YES')\n        else:\n            print('NO')", "def main():\n    t = int(input())\n    while t > 0:\n        line = input().split(' ')\n        k = int(line[0])\n        d = int(line[1])\n        numbers = list(map(int, input().split(' ')))\n        for x in numbers:\n            if x % d == 0:\n                print('YES')\n            elif x >= 10 * d:\n                print('YES')\n            else:\n                es = False\n                for y in range(1, 9):\n                    if (x - y * d) % 10 == 0 and y * d <= x:\n                        es = True\n                        break\n                if es:\n                    print('YES')\n                else:\n                    print('NO')\n        t -= 1\nmain()", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    (q, d) = map(int, sys.stdin.readline().split())\n    ls = list(map(int, sys.stdin.readline().split()))\n    for num in ls:\n        ans = 'NO'\n        if num >= d * 10:\n            ans = 'YES'\n        else:\n            for key in range(num, 0, -10):\n                if key % d == 0:\n                    ans = 'YES'\n                    break\n        print(ans)", "def f(n, t, d):\n    if d in str(n):\n        f(n + 1)\nt = int(input())\nwhile t:\n    t -= 1\n    (n, d) = map(int, input().split())\n    A = list(map(int, input().split()))\n    res = [0 for i in range(100)]\n    res[0] = 1\n    for tt in range(10):\n        for i in range(100):\n            if res[i]:\n                for j in range(9):\n                    a = j + d * 10\n                    b = j * 10 + d\n                    for k in range(i, 100, a):\n                        res[k] = 1\n                    for k in range(i, 100, b):\n                        res[k] = 1\n    for i in A:\n        if i >= 100 or i % d == 0:\n            print('YES')\n        elif res[i]:\n            print('YES')\n        else:\n            print('NO')", "from collections import defaultdict\ndp = defaultdict(list)\nfor i in range(1, 10):\n    for j in range(1, 9):\n        dp[i].append(i * j)\n    val = i + 10\n    while val < i * 10:\n        dp[i].append(val)\n        val += 10\nfor key in dp:\n    i = 0\n    while i < len(dp[key]):\n        for j in range(0, len(dp[key])):\n            for k in range(0, len(dp[key])):\n                val = dp[key][j] + dp[key][k]\n                if val > key * 10:\n                    break\n                if val not in dp[key]:\n                    dp[key].append(val)\n        i += 1\nfor _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    arr = [int(x) for x in input().split()]\n    for val in arr:\n        if val < d:\n            print('NO')\n        elif val >= d * 10:\n            print('YES')\n        elif val in dp[d]:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nwhile t:\n    t -= 1\n    (q, d) = input().split()\n    (q, d) = (int(q), int(d))\n    arr = [int(i) for i in input().split()]\n    num = 1\n    for val in arr:\n        if val >= d * 10:\n            print('YES')\n        else:\n            b = False\n            while val > 0:\n                if val % d == 0:\n                    b = True\n                    break\n                val = val - 10\n            if b:\n                print('YES')\n            else:\n                print('NO')", "for _ in range(int(input())):\n    (q, d) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    for n in arr:\n        if n >= 10 * d:\n            print('YES')\n        else:\n            flag = False\n            while n > 0:\n                if n % d == 0:\n                    flag = True\n                    break\n                else:\n                    n = n - 10\n            if flag:\n                print('YES')\n            else:\n                print('NO')", "class Solution:\n\n    def solve(self, q, d):\n        n = len(q)\n        for i in range(n):\n            if q[i] >= d * 10:\n                print('YES')\n            elif d == 1:\n                print('YES')\n            elif q[i] % 10 == d:\n                print('YES')\n            elif q[i] % d == 0:\n                print('YES')\n            else:\n                result = self.is_lucky(q[i], d)\n                print(result)\n\n    def is_lucky(self, num, d):\n        while True:\n            if num < d:\n                return 'NO'\n            if num % d == 0:\n                return 'YES'\n            num -= 10\nsol = Solution()\ntests = int(input())\nfor i in range(tests):\n    (_, d) = list(map(int, input().split()))\n    q = list(map(int, input().split()))\n    sol.solve(q, d)", "def check_lucky(n, d):\n    if n >= 10 * d or n % d == 0:\n        return 'YES'\n    else:\n        for i in range(1, n // d):\n            if (n - i * d) % 10 == 0:\n                return 'YES'\n        return 'NO'\nt = int(input())\nfor _ in range(t):\n    qd = input().split()\n    q = int(qd[0])\n    d = int(qd[1])\n    num_list = input().split()\n    for item in num_list:\n        n = int(item)\n        print(check_lucky(n, d))", "import sys\nimport math\nimport random\nfrom queue import PriorityQueue as PQ\nfrom bisect import bisect_left as BSL\nfrom bisect import bisect_right as BSR\nfrom collections import OrderedDict as OD\nfrom collections import Counter\nfrom itertools import permutations\nmod = 1000000007\nMOD = mod\ntry:\n    sys.stdin = open('actext.txt', 'r')\n    OPENFILE = 1\nexcept:\n    pass\n\ndef get_ints():\n    return map(int, input().split())\n\ndef palindrome(s):\n    mid = len(s) // 2\n    for i in range(mid):\n        if s[i] != s[len(s) - i - 1]:\n            return False\n    return True\n\ndef check(i, n):\n    if 0 <= i < n:\n        return True\n    else:\n        return False\nt = int(input())\nfor tt in range(t):\n    (q, d) = get_ints()\n    arr = list(get_ints())\n    cutoff = d * 10\n    for i in arr:\n        if i >= cutoff:\n            print('YES')\n        else:\n            flg = 0\n            rem = i // d + 1\n            for j in range(rem, 0, -1):\n                if (i - j * d) % 10 == 0:\n                    flg = 1\n            if flg == 1:\n                print('YES')\n            else:\n                print('NO')", "for t in range(int(input())):\n    (n, d) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    chk = []\n    for i in range(1, 11):\n        chk.append(d * i)\n    for i in arr:\n        if i >= d * 10:\n            print('YES')\n            continue\n        d2 = i % 10\n        flag = 0\n        number = 0\n        for j in chk:\n            if j % 10 == d2:\n                number = j\n                flag = 1\n                break\n        if flag == 1 and number <= i:\n            print('YES')\n        else:\n            print('NO')", "for i in range(int(input())):\n    fl = list(map(int, input().split()))\n    (q, d) = (fl[0], fl[1])\n    a = list(map(int, input().split()))\n    last_digits = dict()\n    for i in range(1, 11):\n        last_digits[i] = d % 10 * (i % 10) % 10\n    for num in a:\n        g = 0\n        if num > d * 10:\n            print('YES')\n            g = 1\n        elif num % d == 0:\n            print('YES')\n            g = 1\n        else:\n            ld = num % 10\n            low_divisor = num // d\n            for i in range(1, low_divisor + 1):\n                if last_digits[i] == ld:\n                    print('YES')\n                    g = 1\n                    break\n        if g == 0:\n            print('NO')"]