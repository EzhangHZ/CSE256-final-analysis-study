["list_ans = []\nfor _ in range(int(input())):\n    (n, r) = map(int, input().split())\n    if r < n:\n        list_ans.append((1 + r) * r // 2)\n    else:\n        list_ans.append((n - 1) * n // 2 + 1)\nfor item in list_ans:\n    print(item)", "def magicalCalander(n, r):\n    if r >= n:\n        ans = (n - 1) * n // 2 + 1\n    else:\n        ans = r * (r + 1) // 2\n    return ans\nt = int(input())\nfor _ in range(t):\n    (n, r) = map(int, input().split())\n    print(magicalCalander(n, r))", "for _ in range(int(input())):\n    (n, r) = map(int, input().split())\n    p = min(n, r)\n    if p < n:\n        print(p * (p + 1) // 2)\n    else:\n        print(p * (p - 1) // 2 + 1)", "for s in [*open(0)][1:]:\n    (n, r) = map(int, s.split())\n    print((n * n - n + 2, r * r + r)[n > r] // 2)", "for s in [*open(0)][1:]:\n    (n, r) = map(int, s.split())\n    print((n * n - n + 2, r * r + r)[n > r] // 2)", "for t in range(int(input())):\n    (n, r) = map(int, input().split())\n    if n > r:\n        print(r * (r + 1) // 2)\n    else:\n        res = n * (n - 1) // 2\n        print(res + 1)", "for t in range(int(input())):\n    (n, r) = map(int, input().split())\n    if n > r:\n        print(r * (r + 1) // 2)\n    else:\n        res = n * (n - 1) // 2\n        print(res + 1)", "t = int(input())\nfor _ in range(t):\n    (n, r) = map(int, input().split())\n    m = min(n - 1, r)\n    ans = m * (m + 1) // 2 + (n <= r)\n    print(ans)", "import math\n\ndef main_function():\n    tests = range(int(input()))\n    answer = []\n    for test in tests:\n        (n, r) = [int(i) for i in input().split(' ')]\n        if n <= r:\n            result = (n - 1) * n // 2 + 1\n        elif n > r:\n            result = (r + 1) * r // 2\n        answer.append(result)\n    for ans in answer:\n        print(ans)\nmain_function()", "import math\nfor i in range(int(input())):\n    (n, r) = list(map(int, input().split()))\n    res = 0\n    l = 1\n    if n <= 1:\n        print(1 // n)\n        continue\n    if n <= r:\n        r = n - 1\n        res = 1\n    print(res + (l + r) * (r - l + 1) // 2)", "t = int(input())\nfor i in range(t):\n    (n, r) = map(int, input().split())\n    if n > r:\n        ans = r * (r + 1) // 2\n        print(ans)\n    else:\n        n -= 1\n        a = n * (n + 1) // 2\n        print(a + 1)", "for _ in range(int(input())):\n    (n, r) = map(int, input().split())\n    if r < n:\n        print(r * (r + 1) // 2)\n    else:\n        print(n * (n - 1) // 2 + 1)", "for _ in range(int(input())):\n    (a, b) = [int(x) for x in input().split()]\n    p = min(a - 1, b)\n    print(p * (p + 1) // 2 + (a <= b))", "import sys\ninput = sys.stdin.readline\nl = 1\nfor _ in range(int(input())):\n    (x, y) = list(map(int, input().split()))\n    r = y\n    res = 0\n    if y <= l:\n        print('1')\n        continue\n    if x <= y:\n        r = x - 1\n        res = 1\n    d = res + (r + l) * (r - l + 1) // 2\n    print(d)", "t = int(input())\nfor _ in range(t):\n    (n, r) = map(int, input().split())\n    if n > r:\n        print(r * (r + 1) // 2)\n    elif n == r:\n        print(r * (r - 1) // 2 + 1)\n    else:\n        print(min(r, n) * (min(n, r) - 1) // 2 + 1)", "for _ in range(int(input())):\n    (n, r) = map(int, input().split())\n    if n <= r:\n        value = (n - 1) * n // 2 + 1\n        print(value)\n        continue\n    if n > r:\n        value = r * (r + 1) // 2\n        print(value)", "times = int(input())\nwhile times:\n    (n, r) = map(int, input().split())\n    result = 0\n    if r >= n:\n        result += 1\n        result += n * (n - 1) // 2\n    else:\n        result += (r + 1) * r // 2\n    print(result)\n    times -= 1", "t = int(input())\nfor _ in range(t):\n    (n, r) = map(int, input().split())\n    if n <= r:\n        ans = n * (n - 1) // 2 + 1\n    else:\n        ans = r * (r + 1) // 2\n    print(ans)", "import math\nfrom heapq import heappush, heappop, heapify\nimport random\nimport string\nfrom collections import deque, defaultdict\nfrom bisect import bisect, bisect_left, bisect_right, insort\nimport sys\ninput = sys.stdin.readline\nS = lambda : input().rstrip()\nI = lambda : int(S())\nM = lambda : map(int, S().split())\nL = lambda : list(M())\nmod1 = 1000000000 + 7\nmod2 = 998244353\nfor _ in range(I()):\n    (n, r) = M()\n    if r < n:\n        s = r * (r + 1) // 2\n    elif r == n:\n        s = n * (n - 1) // 2 + 1\n    else:\n        s = n * (n - 1) // 2 + 1\n    print(s)", "for _ in range(int(input())):\n    (n, r) = map(int, input().split())\n    c = 0\n    if n <= r:\n        c += n * (n - 1) // 2 + 1\n    else:\n        c += r * (r + 1) // 2\n    print(c)", "for pratyush in range(int(input())):\n    (n, r) = map(int, input().split())\n    a = min(r, n - 1)\n    ans = int(a * (a + 1) // 2)\n    if a != r:\n        ans += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, r) = map(int, input().split())\n    if r < n:\n        print(r * (r + 1) // 2)\n    else:\n        print(1 + n * (n - 1) // 2)", "import sys\n\ndef sum1toN(n):\n    if n % 2 == 0:\n        return (n + 1) * (n // 2)\n    else:\n        return n // 2 * (n + 1) + (n // 2 + 1)\n\ndef answer(n, r):\n    if n == 1:\n        return 1\n    if r == 1:\n        return 1\n    if r <= n - 1:\n        return sum1toN(r)\n    else:\n        return sum1toN(n - 1) + 1\n    return\n\ndef main():\n    t = int(input())\n    while t:\n        (n, r) = [int(i) for i in sys.stdin.readline().split()]\n        print(answer(n, r))\n        t -= 1\n    return\nmain()", "n1 = int(input())\nfor i in range(n1):\n    array = list(map(int, input().rstrip().split()))\n    n = array[0]\n    r = array[1]\n    if n > r:\n        print(r * (r + 1) // 2)\n    else:\n        print(n * (n - 1) // 2 + 1)", "t = input()\nt = int(t)\nwhile t > 0:\n    t -= 1\n    (n, r) = input().split()\n    n = int(n)\n    r = int(r)\n    l = min(r, n - 1)\n    ans = (1 + l) * l // 2\n    if r >= n:\n        ans += 1\n    print(ans)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, r) = map(int, input().split())\n    ans = 0\n    if r < n:\n        ans = (1 + r) * r // 2\n    else:\n        ans = 1 + n * (n - 1) // 2\n    print(ans)", "from math import *\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom collections import Counter as ctr\nfrom collections import deque as dq\nfrom array import array\nfrom re import search\nli = lambda : list(map(int, input().split()))\narr = lambda a: array('i', a)\nbi = lambda n: bin(n).replace('0b', '')\nyn = lambda f: print('NYOE S'[f::2])\nsbstr = lambda a, s: search('.*'.join(a), s)\n\ndef solve():\n    for _ in range(int(input())):\n        (n, r) = li()\n        if n > r:\n            print(r * (r + 1) // 2)\n        else:\n            ans = n * (n - 1) // 2 + 1\n            print(ans)\nsolve()", "t = int(input())\nwhile t:\n    nr = input().split()\n    n = int(nr[0])\n    r = int(nr[1])\n    if n > r:\n        print(r * (r + 1) // 2)\n    else:\n        n -= 1\n        print(n * (n + 1) // 2 + 1)\n    t -= 1", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    ref = min(a - 1, b)\n    ans = ref * (ref + 1) // 2\n    print(ans + (a <= b))", "t = int(input())\nfor _ in range(t):\n    (n, r) = map(int, input().split())\n    if n > r:\n        print(r * (r + 1) // 2)\n    else:\n        n -= 1\n        print(n * (n + 1) // 2 + 1)", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    (n, r) = list(map(int, stdin.readline().split()))\n    res = 0\n    if r >= n:\n        res += 1\n    t = min(r, n - 1)\n    res += t * (t + 1) // 2\n    print(res)", "import sys\ninput = sys.stdin.readline\n\ndef sum_up_to_n(n):\n    return n * (n + 1) // 2\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        (N, R) = [int(x) for x in input().split()]\n        if N <= R:\n            x = sum_up_to_n(min(N - 1, R))\n            print(x + 1)\n        else:\n            x = sum_up_to_n(min(N - 1, R))\n            print(x)\nmain()", "t = int(input())\ncnt = 0\nwhile cnt < t:\n    cnt += 1\n    (n, r) = [int(i) for i in input().split()]\n    res = 0\n    if r < n:\n        res += (r + 1) * r // 2\n    else:\n        res += (n - 1) * n // 2\n        res += 1\n    print(res)", "t = int(input())\nfor _ in range(t):\n    (n, r) = map(int, input().split())\n    ans = 0\n    if r < n:\n        ans = r * (r + 1) // 2\n    else:\n        ans = n * (n - 1) // 2\n        ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, r) = map(int, input().split())\n    work = min(n, r)\n    if work == 1:\n        print(1)\n        continue\n    rs = 0\n    if r >= n:\n        rs += 1\n    if r < n:\n        work += 1\n    work -= 1\n    rs += work * (work + 1) // 2\n    print(rs)", "t = int(input())\nwhile t > 0:\n    (n, r) = map(int, input().split(' '))\n    if n > r:\n        print(r * (r + 1) // 2)\n    elif n == r:\n        print(r * (r - 1) // 2 + 1)\n    else:\n        d = min(n - 1, r - 1)\n        print(d * (d + 1) // 2 + 1)\n    t -= 1", "n = int(input(''))\nmatrix = []\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\nfor i in range(n):\n    x = matrix[i][0]\n    r = matrix[i][1]\n    sol = min(x - 1, r)\n    sol = sol * (sol + 1)\n    sol = sol // 2\n    if r >= x:\n        sol = sol + 1\n    print(sol)", "ans = ''\nfor _ in range(int(input())):\n    (n, r) = map(int, input().split())\n    if r >= n:\n        x = (n - 1) * n // 2 + 1\n    else:\n        x = r * (r + 1) // 2\n    ans += str(x) + '\\n'\nprint(ans)", "for _ in range(int(input())):\n    (n, r) = map(int, input().split())\n    r = min(n, r)\n    if n > r:\n        print(r * (r + 1) // 2)\n    else:\n        print(r * (r - 1) // 2 + 1)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if n > k:\n        print(k * (k + 1) // 2)\n    else:\n        x = n - 1\n        ans = x * (x + 1) // 2\n        print(ans + 1)", "for i in range(int(input())):\n    (x, y) = map(int, input().split())\n    add = int(x <= y)\n    x = min(x - 1, y)\n    print(x * (x + 1) // 2 + add)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    x = min(n, k)\n    x = (x - 1) * x // 2 + 1 if n <= k else (x + 1) * x // 2\n    print(x)", "t = int(input())\nfor _ in range(t):\n    (n, r) = map(int, input().split())\n    if r < n:\n        print(r * (r + 1) // 2)\n    else:\n        print((n - 1) * n // 2 + 1)", "from sys import *\nt = int(stdin.readline())\nwhile t > 0:\n    (n, r) = map(int, stdin.readline().split())\n    if n > r:\n        print((1 + r) * r // 2)\n    elif n <= r:\n        a = n - 1\n        print((a + 1) * a // 2 + 1)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (n, r) = map(int, input().split())\n    if r >= n:\n        ans = (n - 1) * n // 2 + 1\n        print(ans)\n    else:\n        ans = r * (r + 1) // 2\n        print(ans)", "t = int(input())\nfor test in range(t):\n    (n, r) = [int(i) for i in input().split()]\n    maxi = min(n - 1, r)\n    ans = maxi * (maxi + 1) // 2\n    if maxi < r:\n        ans += 1\n    print(ans)", "for t in range(int(input())):\n    (n, r) = map(int, input().split())\n    x = min(n - 1, r)\n    ans = x * (x + 1) // 2\n    if r >= n:\n        ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, r) = map(int, input().split())\n    if n > r:\n        print((r + 1) * r // 2)\n    else:\n        print((n - 1) * n // 2 + 1)", "for _ in range(int(input())):\n    (n, r) = map(int, input().split())\n    x = min(r, n - 1)\n    ans = x * (x + 1) // 2\n    if r >= n:\n        ans += 1\n    print(ans)", "def solve(n, r):\n    if n == 1:\n        return 1\n    if n < 1:\n        return 0\n    if r > n:\n        return solve(n, n)\n    if n == r:\n        return 1 + solve(n, n - 1)\n    return r * (r + 1) // 2\nt = int(input())\nfor _ in range(t):\n    (n, r) = map(int, input().split())\n    print(solve(n, r))", "t = int(input())\nfor _ in range(t):\n    (n, r) = map(int, input().split())\n    if n > r:\n        print(r * (r + 1) // 2)\n    else:\n        ans = 0\n        ans += n * (n - 1) // 2\n        ans += 1\n        print(ans)", "t = int(input())\nfor z in range(t):\n    (n, r) = map(int, input().split(' '))\n    if r == 1:\n        print(1)\n    elif n > r:\n        ans = r * (r + 1) // 2\n        print(ans)\n    else:\n        ans = n * (n - 1) // 2 + 1\n        print(ans)", "T = int(input())\nwhile T > 0:\n    (n, r) = map(int, input().split())\n    if r < n:\n        res = (1 + r) * r // 2\n    else:\n        res = n * (n - 1) // 2 + 1\n    print(res)\n    T -= 1", "def f(n):\n    return n * (n + 1) // 2\nfor _ in range(int(input())):\n    (n, r) = map(int, input().split())\n    s = f(min(r, n - 1))\n    s += 1 * (r > min(r, n - 1))\n    print(s)", "t = int(input())\nfor x in range(t):\n    (a, b) = map(int, input().split())\n    if a > b:\n        f = b * (b + 1)\n        f = f // 2\n    else:\n        d = a - 1\n        f = d * (d + 1)\n        f = f // 2\n        f += 1\n    print(f)", "import sys\n\ndef minp():\n    return sys.stdin.readline().strip()\n\ndef mint():\n    return int(minp())\n\ndef mints():\n    return map(int, minp().split())\n\ndef solve():\n    (n, r) = mints()\n    r = min(r, n)\n    all = r * (r + 1) // 2\n    if r == n:\n        all -= r - 1\n    print(all)\nfor i in range(mint()):\n    solve()", "for i in range(int(input())):\n    (n, r) = map(int, input().split())\n    if n <= r:\n        n -= 1\n        x = n * (n + 1)\n        x //= 2\n        x += 1\n        print(x)\n        continue\n    if n > r:\n        x = r * (r + 1)\n        x = x // 2\n        print(x)\n        continue", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n > k:\n        ans = k * (k + 1) // 2\n    else:\n        k = n - 1\n        ans = k * (k + 1) // 2 + 1\n    print(ans)", "def testcase():\n    import sys\n    input = sys.stdin.readline\n    (n, r) = [int(x) for x in input().strip().split()]\n    ans = min(n - 1, r) * (1 + min(n - 1, r)) // 2 + (r >= n)\n    print(ans)\n\ndef main():\n    import sys\n    input = sys.stdin.readline\n    t = int(input())\n    for _ in range(t):\n        testcase()\nmain()", "import sys\ninput = sys.stdin.readline\nI = lambda : list(map(int, input().split()))\n(t,) = I()\nfor _ in range(t):\n    (n, r) = I()\n    k = r\n    r = min(n, r)\n    an = r * (r + 1) // 2\n    print(an - n + 1 if n <= k else an)", "t = int(input())\nfor i in range(t):\n    (n, r) = [int(x) for x in input().split()]\n    if n > r:\n        print((1 + r) * r // 2)\n    else:\n        print((n - 1) * n // 2 + 1)", "def main():\n    (n, r) = list(map(int, input().split()))\n    if n <= r:\n        print(n * (n - 1) // 2 + 1)\n        return\n    print(r * (r + 1) // 2)\nt = int(input())\nfor _ in range(t):\n    main()", "t = int(input())\nfor i in range(t):\n    nr = list(map(int, input().split()))\n    n = nr[0]\n    r = nr[1]\n    if n > r:\n        res = r * (r + 1) // 2\n        print(res)\n    else:\n        res = n * (n - 1) // 2\n        print(res + 1)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a > b:\n        print(b * (b + 1) // 2)\n    else:\n        print(a * (a - 1) // 2 + 1)", "for _ in range(int(input())):\n    (n, r) = map(int, input().split())\n    if n > r:\n        print(r * (r + 1) // 2)\n    elif n == r:\n        print((r - 1) * r // 2 + 1)\n    else:\n        s = n * (n - 1) // 2\n        print(s + 1)", "try:\n    t = int(input())\n    while t:\n        (n, r) = [int(x) for x in input().split()]\n        if n > r:\n            h = r * (r + 1)\n            print(h // 2)\n        else:\n            j = n * (n + 1)\n            j = j // 2\n            s = j - (n - 1)\n            print(s)\n        t -= 1\nexcept:\n    pass", "for _ in range(int(input())):\n    (n, r) = map(int, input().split())\n    cnt = 0\n    if r >= n:\n        cnt = (n - 1) * n // 2 + 1\n    else:\n        cnt = (r + 1) * r // 2\n    print(cnt)", "for _ in range(int(input())):\n    (n, r) = map(int, input().split())\n    if r >= n:\n        n -= 1\n        print(n * (n + 1) // 2 + 1)\n    else:\n        print(r * (r + 1) // 2)", "for _ in range(int(input())):\n    (n, r) = map(int, input().split())\n    if r < n:\n        print(r * (r + 1) // 2)\n    else:\n        ans = n * (n - 1) // 2 + 1\n        print(ans)", "for _ in range(int(input())):\n    (n, r) = map(int, input().split())\n    if r >= n:\n        s = int(n * (n - 1) // 2)\n        print(s + 1)\n    else:\n        s = int(r * (r + 1) // 2)\n        print(s)", "t = int(input())\nfor i in range(t):\n    (n, r) = map(int, input().split())\n    if n > r:\n        ans = r * (r + 1) // 2\n    else:\n        ans = n * (n - 1) // 2 + 1\n    print(ans)", "import sys\ninput = sys.stdin.readline\ntc = int(input())\nfor _ in range(tc):\n    (n, r) = map(int, input().split())\n    if n > r:\n        if r % 2 == 0:\n            print((r + 1) * r // 2)\n        else:\n            tmp = r\n            r -= 1\n            print((r + 1) * (r // 2) + tmp)\n    elif n % 2 == 0:\n        print((n + 1) * n // 2 - n + 1)\n    else:\n        tmp = n\n        n -= 1\n        print((n + 1) * (n // 2) + 1)", "t = int(input())\nfor _ in range(t):\n    (n, r) = map(int, input().split())\n    if r >= n:\n        s = (n - 1) * n // 2 + 1\n    else:\n        s = (1 + r) * r // 2\n    print(s)", "def calculateDistinctShapes(n, r):\n    if n == 1:\n        return 1\n    if r >= n:\n        count = n * (n - 1) // 2 + 1\n    else:\n        count = r * (r + 1) // 2\n    return count\nt = int(input())\nfor _ in range(t):\n    (n, r) = map(int, input().split())\n    print(calculateDistinctShapes(n, r))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if b >= a:\n        ans = a * (a + 1) // 2 - (a - 1)\n    else:\n        ans = b * (b + 1) // 2\n    print(ans)", "def calendar(n, r):\n    sum = 0\n    if n > r:\n        sum = r * (r + 1) // 2\n    else:\n        sum = n * (n - 1) // 2 + 1\n    return sum\ni = int(input())\nfor j in range(i):\n    n_r = [int(ele) for ele in input().split()]\n    n = n_r[0]\n    r = n_r[1]\n    print(calendar(n, r))", "for _ in range(int(input())):\n    (n, r) = map(int, input().split())\n    if n > r:\n        print(r * (r + 1) // 2)\n    else:\n        print((n - 1) * n // 2 + 1)", "for _ in range(int(input())):\n    (n, r) = map(int, input().split())\n    m = min(n - 1, r)\n    a = m * (m + 1) // 2\n    if r >= n:\n        a += 1\n    print(a)", "q = int(input())\nfor _ in range(q):\n    (n, r) = map(int, input().split())\n    if n > r:\n        sum = r * (r + 1) // 2\n    else:\n        sum = n * (n - 1) // 2 + 1\n    print(sum)", "t = int(input())\nans = []\nfor i in range(t):\n    (n, r) = input().split()\n    n = int(n)\n    r = int(r)\n    l = 0\n    if n > r:\n        l = r * (r + 1) // 2\n    if n <= r:\n        l = n * (n - 1) // 2\n        l += 1\n    ans.append(l)\nfor an in ans:\n    print(an)", "tk = int(input())\nfor i in range(tk):\n    (a, b) = map(int, input().split())\n    if b > a:\n        b = a\n    if a > b:\n        print(b * (b + 1) // 2)\n    else:\n        print(b * (b - 1) // 2 + 1)", "for _ in range(int(input())):\n    (n, r) = map(int, input().split())\n    r = min(r, n)\n    if n > r:\n        print(r * (r + 1) // 2)\n    else:\n        print((r - 1) * r // 2 + 1)", "def solve():\n    (n, r) = map(int, input().split())\n    if n > r:\n        return r * (r + 1) // 2\n    return n * (n - 1) // 2 + 1\n\ndef main():\n    for _ in range(int(input())):\n        print(solve())\nmain()", "for _ in range(int(input())):\n    (n, r) = map(int, input().split())\n    if r < n:\n        print(r * (r + 1) // 2)\n    elif r >= n:\n        print(1 + n * (n - 1) // 2)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, r) = map(int, input().split())\n    soln = lambda x: x * (x + 1)\n    if n > r:\n        print(soln(r) >> 1)\n    else:\n        n -= 1\n        print((soln(n) >> 1) + 1)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, r) = map(int, input().split())\n    if n <= r:\n        print((n - 1) * (n - 1 + 1) // 2 + 1)\n    else:\n        print(r * (r + 1) // 2)", "for i in range(0, int(input())):\n    (m, n) = map(int, input().split())\n    if n >= m:\n        m -= 1\n        print(m * (m + 1) // 2 + 1)\n    else:\n        print(n * (n + 1) // 2)", "t = int(input())\nwhile t:\n    (n, r) = map(int, input().split())\n    count = 0\n    if n > r:\n        count = r * (r + 1) // 2\n    else:\n        count = n * (n - 1) // 2\n        count = count + 1\n    print(count)\n    t = t - 1", "t = int(input())\nfor i in range(t):\n    (n, r) = map(int, input().split(' '))\n    sum = 0\n    if n > r:\n        print(r * (r + 1) // 2)\n    else:\n        print(n * (n - 1) // 2 + 1)", "for _ in range(int(input())):\n    (n, r) = map(int, input().split())\n    if n <= r:\n        wn = n - 1\n        wynik = wn * (wn + 1) // 2 + 1\n    else:\n        wn = r\n        wynik = wn * (wn + 1) // 2\n    print(wynik)", "t = int(input())\nfor _ in range(t):\n    (n, r) = map(int, input().split())\n    if n <= r:\n        print(1 + n * (n - 1) // 2)\n    else:\n        x = (r + 1) * r // 2\n        print(x)", "t = int(input())\n\ndef rec(mn, ind, l, b, dp):\n    if ind == 0:\n        return 0\n    else:\n        if dp[ind - 1] == 0:\n            if mn[ind - 1][0] < l and mn[ind - 1][1] < b:\n                dp[ind - 1] = max(rec(mn, ind - 1, l, b, dp), mn[ind - 1][2] + rec(mn, ind - 1, mn[ind - 1][0], mn[ind - 1][1], dp))\n            else:\n                dp[ind - 1] = rec(mn, ind - 1, l, b, dp)\n        return dp[ind - 1]\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if k >= n:\n        print(1 + n * (n - 1) // 2)\n    else:\n        print(k * (k + 1) // 2)", "import sys\nsys.setrecursionlimit(2147483647)\ninput = sys.stdin.readline\n\ndef count_ans(n, r):\n    if n > r:\n        return r * (r + 1) // 2\n    else:\n        ans = n * (n - 1) // 2 + 1\n        return ans\n\ndef main():\n    t = int(input())\n    ns = [list(map(int, input().split(' '))) for _ in range(t)]\n    for i in range(t):\n        print(count_ans(*ns[i]))\nmain()", "def solve(r, k):\n    limit = min(r - 1, k)\n    ans = (1 + limit) * limit // 2\n    if r <= k:\n        ans += 1\n    return ans\nn = int(input())\nfor _ in range(n):\n    (r, k) = map(int, input().split())\n    print(solve(r, k))", "t = int(input())\nfor _ in range(t):\n    (x, y) = map(int, input().split())\n    sumi = 0\n    if x > y:\n        sumi = y * (y + 1) // 2\n    else:\n        x = x - 1\n        sumi = sumi = x * (x + 1) // 2\n        sumi = sumi + 1\n    print(sumi)", "t = int(input())\nfor _ in range(t):\n    (n, r) = (int(x) for x in input().split())\n    if n <= r:\n        print(n * (n - 1) // 2 + 1)\n    else:\n        print(r * (r + 1) // 2)", "T = int(input())\nfor t in range(T):\n    (n, r) = map(int, input().split())\n    count = 0\n    num1 = min(n, r)\n    if num1 == n:\n        num1 = num1 - 1\n        count = 1\n    count = count + num1 * (num1 + 1) // 2\n    print(count)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    if n <= m:\n        print(n * (n - 1) // 2 + 1)\n    else:\n        print(m * (m + 1) // 2)"]