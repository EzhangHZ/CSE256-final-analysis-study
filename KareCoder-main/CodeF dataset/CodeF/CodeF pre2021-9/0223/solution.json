["import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    w = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        c += w[i]\n        if c < 0:\n            c = 0\n    print(c)", "list_ans = []\nfor _ in range(int(input())):\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    a = 0\n    b = 0\n    for x in list1:\n        a += x\n        if a < b:\n            b = a\n    list_ans.append(-b)\nfor item in list_ans:\n    print(item)", "for s in [*open(0)][2::2]:\n    t = m = 0\n    for x in s.split():\n        t += int(x)\n        m = min(m, t)\n    print(-m)", "for s in [*open(0)][2::2]:\n    t = m = 0\n    for x in s.split():\n        t -= int(x)\n        m = max(m, t)\n    print(m)", "for s in [*open(0)][2::2]:\n    t = m = 0\n    for x in s.split():\n        t -= int(x)\n        m = max(m, t)\n    print(m)", "import sys, os\nfrom math import sqrt, gcd, ceil, log, floor, sin, pi\nfrom math import factorial as fact\nfrom bisect import bisect, bisect_left\nfrom collections import defaultdict, Counter, deque\nfrom heapq import heapify, heappush, heappop\nfrom itertools import permutations\ninput = sys.stdin.readline\nread = lambda : list(map(int, input().strip().split()))\nMOD = 10 ** 9 + 7\n\ndef main():\n    ans_ = []\n    for _ in range(int(input())):\n        n = int(input())\n        arr = read()\n        s = 0\n        for i in arr:\n            if i <= 0:\n                if s > 0:\n                    s = max(0, s + i)\n            else:\n                s += i\n        ans_.append(s)\n    for i in ans_:\n        print(i)\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    (c, ans) = (0, 0)\n    for (k, v) in enumerate(A):\n        c += v\n        if c < 0:\n            ans += abs(c)\n            c = 0\n    print(ans)", "def findCoins(arr):\n    preSumPositives = 0\n    for num in arr:\n        if num < 0:\n            if abs(num) > preSumPositives:\n                preSumPositives = 0\n            else:\n                preSumPositives += num\n        else:\n            preSumPositives += num\n    return preSumPositives\nt = int(input())\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    print(findCoins(arr))\n    t -= 1", "tt = int(input())\nfor t in range(tt):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.reverse()\n    ans = 0\n    cur_sum = 0\n    for i in arr:\n        cur_sum += i\n        if cur_sum > 0:\n            ans += cur_sum\n            cur_sum = 0\n    print(ans)", "from itertools import accumulate\nI = input\nfor _ in range(int(I())):\n    n = int(I())\n    lst = list(map(int, I().split()))\n    presum = list(accumulate(lst))\n    print(-min(presum))", "from collections import deque\n\ndef func():\n    nn = int(input())\n    for _ in range(nn):\n        _ = int(input())\n        values = list(map(int, input().split()))\n        que = deque(values)\n        res = 0\n        cun = 0\n        while que:\n            m = que.pop()\n            if m <= 0:\n                cun += m\n            else:\n                x = m + cun\n                if x <= 0:\n                    cun = x\n                    continue\n                cun = 0\n                res += x\n        print(res)\nfunc()", "import sys\nfrom collections import defaultdict, Counter as CC\nfrom math import sqrt, ceil, floor, log2\nINF = float('inf')\nMOD = 10 ** 9 + 7\nread = lambda : [int(s) for s in sys.stdin.readline().split()]\n\ndef solve():\n    (n,) = read()\n    a = read()\n    curr = 0\n    for i in range(n):\n        if a[i] > 0:\n            curr += a[i]\n        elif a[i] < 0:\n            if curr > 0:\n                curr = max(0, curr + a[i])\n    print(curr)\n_ = 1\n_ = int(input())\nwhile _:\n    solve()\n    _ -= 1", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = [0] * n\n    a[n - 1] = l[n - 1]\n    for i in range(n - 2, -1, -1):\n        l[i] += l[i + 1]\n    print(max(l))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    cur = 0\n    for i in a:\n        cur = max(0, cur + i)\n    print(cur)", "for _ in range(0, int(input())):\n    input()\n    v = list(map(int, input().split()))\n    p = 0\n    t = 0\n    for x in v:\n        if x < 0:\n            w = p + x\n            p = max(0, p + x)\n            if w < 0:\n                t += w\n        else:\n            p += x\n    print(abs(t))", "for _ in range(0, int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    t = 0\n    for i in b:\n        t = max(0, t + i)\n    print(t)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    for i in arr:\n        ans = max(0, ans + i)\n    print(ans)", "def answer(n, a):\n    cost = 0\n    for i in range(n - 1):\n        if a[i] <= 0:\n            cost += abs(a[i])\n            a[-1] += a[i]\n        else:\n            cost += 0\n            a[i + 1] += a[i]\n    return cost\n\ndef main():\n    t = int(input())\n    n = [0] * t\n    a = [0] * t\n    for j in range(t):\n        n[j] = int(input())\n        a[j] = [int(i) for i in input().split()]\n    for j in range(t):\n        print(answer(n[j], a[j]))\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    sum = 0\n    ans = 0\n    for i in a:\n        sum += i\n        if sum < 0:\n            ans += sum\n            sum = 0\n    print(abs(ans))", "for s in [*open(0)][2::2]:\n    t = m = 0\n    for x in s.split():\n        t -= int(x)\n        m = max(m, t)\n    print(m)", "import sys\n\ndef ints():\n    return list(map(int, sys.stdin.readline().strip().split()))\ntc = int(input())\nwhile tc:\n    tc -= 1\n    n = int(input())\n    ls = ints()\n    maxneg = 0\n    temp = 0\n    for item in ls:\n        temp += item\n        if temp < maxneg:\n            maxneg = temp\n    print(-1 * maxneg)", "for _ in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    k = 0\n    for i in b:\n        if i > 0:\n            k += i\n        elif k + i < 0:\n            k = 0\n        else:\n            k += i\n    print(k)", "for _ in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    l = 0\n    for i in b:\n        if i > 0:\n            l += i\n        elif l + i > 0:\n            l += i\n        else:\n            l = 0\n    print(l)", "my_mass = list()\nsize_1 = 0\nsize_2 = 0\na = list()\nb = list()\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    min = 10000000\n    sum = 0\n    for i in a:\n        sum += i\n        if sum < min:\n            min = sum\n    print(abs(min))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    ans = 0\n    for j in range(n):\n        c += a[j]\n        if c < 0:\n            ans -= c\n            c = 0\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in l:\n        ans = max(0, ans + i)\n    print(ans)", "def array_cancellation():\n    prob = int(input())\n    for _ in range(prob):\n        l = int(input())\n        arr = list(map(int, input().split()))\n        arr_transform = list()\n        pos = 0\n        for v in arr:\n            if v > 0:\n                pos += v\n                arr_transform.append(0)\n            elif pos < 1:\n                arr_transform.append(v)\n            elif pos + v > 0:\n                arr_transform.append(0)\n                pos += v\n            else:\n                arr_transform.append(pos + v)\n                pos = 0\n        print(abs(sum([v for v in arr_transform if v < 0])))\narray_cancellation()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().strip().split()))\n    co = 0\n    for i in l:\n        if i < 0 and co != 0:\n            k = abs(i)\n            if co >= k:\n                co -= k\n            else:\n                co = 0\n        elif i < 0:\n            continue\n        else:\n            co += i\n    print(co)", "for s in [*open(0)][2::2]:\n    t = m = 0\n    for x in s.split():\n        t -= int(x)\n        m = max(m, t)\n    print(m)", "for p in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(1, n):\n        a[i] += a[i - 1]\n    print(abs(min(a)))", "def _input():\n    return map(int, input().split())\n\ndef f():\n    n = int(input())\n    lst = list(_input())\n    i = 0\n    while i < n - 1:\n        if lst[i] > 0:\n            lst[i + 1] += lst[i]\n        i += 1\n    print(lst[-1])\nfor _ in range(int(input())):\n    f()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().strip().split()))\n    a = 0\n    for i in l:\n        if i < 0 and a != 0:\n            q = abs(i)\n            if a >= q:\n                a -= q\n            else:\n                a = 0\n        elif i < 0:\n            continue\n        else:\n            a += i\n    print(a)", "t = int(input())\nres = []\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(n - 1):\n        if a[i] > 0:\n            a[i + 1] += a[i]\n            a[i] = 0\n    res.append(a[n - 1])\nfor i in res:\n    print(i)", "for _ in range(0, int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    t = 0\n    for i in b:\n        t = max(0, t + i)\n    print(t)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    cnt = 0\n    for i in a:\n        if i > 0:\n            cnt += i\n        else:\n            cnt += i\n            if cnt < 0:\n                cnt = 0\n    print(cnt)", "import math\npi = math.acos(-1)\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    sum = 0\n    ans = 0\n    for x in a:\n        sum += x\n        if sum < 0:\n            ans = min(ans, sum)\n    print(-1 * ans)", "for _ in range(0, int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    t = 0\n    for i in b:\n        t = max(0, t + i)\n    print(t)", "t = int(input())\nfor tc in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    for i in range(n):\n        b.append(a[n - i - 1])\n    curr = 0\n    ans = 0\n    for i in range(n):\n        curr += b[i]\n        if curr > 0:\n            ans += curr\n            curr = 0\n    print(ans)", "def pro(arr):\n    n = len(arr)\n    suff = [0] * n\n    suff[-1] = arr[-1]\n    for i in range(n - 2, -1, -1):\n        suff[i] = suff[i + 1] + arr[i]\n    print(max(suff))\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    pro(arr)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    v = [int(x) for x in input().split()]\n    pos = 0\n    for i in v:\n        if i > 0:\n            pos += i\n        elif pos > 0:\n            pos -= min(pos, abs(i))\n    print(pos)", "for _ in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    l = 0\n    for i in b:\n        if i > 0:\n            l += i\n        else:\n            l -= min(abs(i), l)\n    print(l)", "def solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    for i in range(n - 1):\n        if arr[i] > 0:\n            arr[i + 1] = arr[i] + arr[i + 1]\n            arr[i] = 0\n    return arr[-1]\nt = int(input())\nfor i in range(t):\n    print(solve())", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 0\n    neg = 0\n    pos = 0\n    while i < len(a):\n        if a[i] < 0:\n            left = pos + a[i]\n            if left < 0:\n                neg += left\n                pos = 0\n            else:\n                pos = left\n        else:\n            pos += a[i]\n        i += 1\n    print(-neg)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    w = [int(k) for k in input().split()]\n    (c, res) = (0, 0)\n    for j in w:\n        c += j\n        if c < 0:\n            res += abs(c)\n            c = 0\n    print(res)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    tot = 0\n    for i in range(-1, -n - 1, -1):\n        if lst[i] > 0:\n            tot = max(tot - lst[i], 0)\n        else:\n            tot -= lst[i]\n    print(tot)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    tot = 0\n    for i in range(-1, -n - 1, -1):\n        if lst[i] > 0:\n            tot = max(tot - lst[i], 0)\n        else:\n            tot -= lst[i]\n    print(tot)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    if n == 1:\n        print(0)\n        continue\n    temp = 0\n    ans = 0\n    for ele in arr:\n        if ele < 0:\n            if temp >= abs(ele):\n                temp += ele\n            else:\n                ans += abs(temp + ele)\n                temp = 0\n        else:\n            temp += ele\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    val = 0\n    for u in range(n):\n        if a[-u - 1] < 0:\n            val -= a[-u - 1]\n        elif a[-u - 1] > val:\n            val = 0\n        else:\n            val -= a[-u - 1]\n    print(val)", "for p in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = 0\n    for i in range(n):\n        if a[i] > 0:\n            b += a[i]\n        else:\n            b -= min(-a[i], b)\n    print(b)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    sum = 0\n    for i in a:\n        sum = max(0, sum + i)\n    print(sum)", "for _ in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    s = 0\n    for i in b:\n        s = max(0, s + i)\n    print(s)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    cnt = 0\n    for i in range(n):\n        if a[i] > 0:\n            cnt += a[i]\n        else:\n            cnt -= min(cnt, -a[i])\n    print(cnt)", "t = int(input())\nfor _ in range(t):\n    n = input()\n    arr = list(map(int, input().split()))\n    pz = nz = 0\n    for x in arr:\n        if x < 0:\n            if pz + x >= 0:\n                pz += x\n            else:\n                x += pz\n                pz = 0\n                nz += x\n        else:\n            pz += x\n    print(pz)", "for i in range(int(input())):\n    n = input()\n    n = [int(x) for x in input().split()]\n    s = 0\n    smin = 0\n    for i in range(len(n)):\n        s += n[i]\n        if s < smin:\n            smin = s\n    print(abs(smin))", "def count_coinFunc(a_list):\n    count = 0\n    for i in range(len(a_list)):\n        if a_list[i] >= 0:\n            count += a_list[i]\n            a_list[i] = 0\n        else:\n            min_val = 0\n            min_val = min(-a_list[i], count)\n            a_list[i] += min_val\n            count -= min_val\n    for j in range(len(a_list)):\n        if a_list[i] >= 0:\n            count += a_list[i]\n    return count\nt = int(input())\ntemp_arr = []\nfor i in range(t):\n    n = int(input())\n    a_list = list(map(int, input().split()))\n    min_coins = count_coinFunc(a_list)\n    temp_arr.append(min_coins)\nfor j in temp_arr:\n    print(j)", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    list1 = list(map(int, input().split()))\n    sum = 0\n    min = list1[0]\n    for i in range(m):\n        sum = sum + list1[i]\n        if sum < min:\n            min = sum\n    print(-min)", "t = int(input())\ntest = []\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    test.append([n, arr])\nfor i in range(t):\n    n = test[i][0]\n    arr = test[i][1]\n    price = 0\n    gain = 0\n    for j in range(n):\n        if arr[j] < 0:\n            a = -arr[j]\n            price += abs(min(gain - a, 0))\n            gain = max(gain - a, 0)\n        else:\n            gain += arr[j]\n    print(price)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = 0\n    for i in range(0, len(a)):\n        b = max(0, b + a[i])\n    print(b)", "import itertools\nfor _ in range(int(input())):\n    n = int(input())\n    print(-min(itertools.accumulate(map(int, input().split()))))", "for _ in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    t = 0\n    for i in b:\n        t = max(0, t + i)\n    print(t)", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [a[0]]\n    cnt = 0\n    for x in a[1:]:\n        b.append(b[-1] + x)\n    print(-min(b))", "import sys, bisect\nfrom sys import stdin, stdout\nfrom bisect import bisect_left, bisect_right, bisect, insort, insort_left, insort_right\nfrom math import gcd, ceil, floor, sqrt\n\ndef st():\n    return list(stdin.readline().strip())\n\ndef inp():\n    return int(stdin.readline())\n\ndef li():\n    return list(map(int, stdin.readline().split()))\n\ndef mp():\n    return map(int, stdin.readline().split())\n\ndef pr(n):\n    stdout.write(str(n) + '\\n')\n\ndef solve():\n    n = inp()\n    l = li()\n    x = [-i for i in l]\n    y = [0]\n    for i in x:\n        y.append(y[-1] + i)\n    z = [i for i in y if i >= 0]\n    print(max(z))\nfor _ in range(inp()):\n    solve()", "def run():\n    output = []\n    for i in range(int(input())):\n        _ = input()\n        lst = [int(i) for i in input().split()]\n        positive_sum = 0\n        for (j, v) in enumerate(lst):\n            if v > 0:\n                positive_sum += v\n            elif abs(v) > positive_sum:\n                positive_sum = 0\n            else:\n                positive_sum -= abs(v)\n        output.append(str(positive_sum))\n    print('\\n'.join(output))\n\ndef find_sum(n: list):\n    c = 0\n    for i in n:\n        if i > 0:\n            c += i\n    return c\nrun()", "def process_arr(arr):\n    coins = 0\n    buf = 0\n    for i in arr:\n        if i > 0:\n            buf += i\n        elif i < 0:\n            if -i > buf:\n                coins -= i + buf\n                buf = 0\n            else:\n                buf += i\n    return coins\n\ndef main():\n    a = int(input())\n    i = 0\n    ans = []\n    while i < a:\n        n = input()\n        arr = map(int, input().split(' '))\n        i += 1\n        ans.append(process_arr(arr))\n    for i in ans:\n        print(i)\nmain()", "def ans_f(a):\n    pow = 0\n    for i in a:\n        if i < 0:\n            if pow > 0:\n                pow = pow - min(pow, abs(i))\n        else:\n            pow = pow + i\n    return pow\nt = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    ans.append(ans_f(a))\nfor i in ans:\n    print(i)", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    res = 0\n    temp = 0\n    for i in a:\n        if i + temp >= 0:\n            temp += i\n        else:\n            res += abs(i) - temp\n            temp = 0\n    print(res)", "cases = int(input())\nwhile cases:\n    cases -= 1\n    num = int(input())\n    arr = list(map(int, input().split()))\n    minn = 0\n    summ = 0\n    for num in arr:\n        summ += num\n        minn = min(minn, summ)\n    print(-minn)", "n_sets = int(input())\nfor _ in range(n_sets):\n    _ = int(input())\n    a = map(int, input().split())\n    r_min = 0\n    r = 0\n    for x in a:\n        r += x\n        r_min = min(r, r_min)\n    print(-r_min)", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    x = list(map(int, input().split()))\n    idx = len(x) - 1\n    s = 0\n    res = 0\n    while idx >= 0:\n        s += x[idx]\n        if s > 0:\n            res += s\n            s = 0\n        idx -= 1\n    print(res)", "for i in range(int(input())):\n    n = int(input())\n    ans = 0\n    arr = list(map(int, input().split()))\n    for j in arr:\n        ans = max(ans + j, 0)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = 0\n    l = list(map(int, input().split()))\n    for i in range(0, n):\n        s = max(0, s + l[i])\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    for i in a:\n        c = max(0, c + i)\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    res = 0\n    for i in li:\n        res = max(res + i, 0)\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    minus = 0\n    plus = 0\n    for i in lst:\n        if i == 0:\n            pass\n        if i < 0:\n            if not plus:\n                minus += i\n            if plus:\n                plus += i\n                if plus < 0:\n                    minus += plus\n                    plus = 0\n        if i > 0:\n            plus += i\n    print(-minus)", "for _ in range(0, int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    t = 0\n    for i in b:\n        t = max(0, t + i)\n    print(t)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    (neg, pos) = (0, 0)\n    for i in range(n):\n        if a[i] + pos < 0:\n            ans += abs(a[i] + pos)\n            pos = 0\n        else:\n            pos += a[i]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    ans = 0\n    for i in input().split():\n        if int(i) > 0:\n            ans += int(i)\n        else:\n            ans = max(ans + int(i), 0)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    for j in range(n):\n        c = max(0, c + a[j])\n    print(c)", "from math import *\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom collections import Counter as ctr\nfrom collections import deque as dq\nfrom array import array\nfrom re import search\nli = lambda : list(map(int, input().split()))\narr = lambda a: array('i', a)\nbi = lambda n: bin(n).replace('0b', '')\nyn = lambda f: print('NYOE S'[f::2])\nsbstr = lambda a, s: search('.*'.join(a), s)\n\ndef solve():\n    for _ in range(int(input())):\n        n = int(input())\n        a = li()[::-1]\n        s = 0\n        c = 0\n        for i in range(n):\n            if a[i] > s:\n                c += a[i] - s\n                s = 0\n            elif a[i] > 0:\n                s -= a[i]\n            else:\n                s += -a[i]\n        print(c)\nsolve()", "u = int(input())\nfor i in range(u):\n    n = int(input())\n    l = list(map(int, input().split()))\n    t = 0\n    for j in range(len(l)):\n        if l[j] < 0:\n            p = min(t, -l[j])\n            l[j] += p\n            t -= p\n        elif l[j] > 0:\n            t += l[j]\n    print(t)", "import sys\nimport math\nfast_reader = sys.stdin.readline\nfast_writer = sys.stdout.write\n\ndef input():\n    return fast_reader().strip()\nfor T in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    ans = 0\n    for i in range(n - 1, -1, -1):\n        if s + a[i] <= 0:\n            s += a[i]\n        else:\n            ans += a[i] + s\n            s = 0\n    print(ans)", "def solve():\n    n = int(input())\n    l = list(map(int, input().split()))\n    cost = 0\n    for i in l:\n        if i < 0:\n            cost += i\n            if cost < 0:\n                cost = 0\n        else:\n            cost += i\n    return cost\nfor _ in range(int(input())):\n    print(solve())", "from sys import stdin, stdout\nfor i in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().strip().split()))\n    (r, l) = (0, 0)\n    for i in range(n):\n        if a[i] > 0:\n            r = r + a[i]\n        else:\n            r = r + a[i]\n            if r < 0:\n                l = l + r\n                r = 0\n    print(abs(l))", "def cost(a):\n    s = 0\n    for x in a:\n        if x < 0:\n            m = min(s, abs(x))\n            s -= m\n        else:\n            s += x\n    return s\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    print(cost(a))", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef out(ret):\n    print(ret)\n\ndef outlt(ret):\n    print(' '.join(ret))\n\nclass Solution:\n\n    def main(self, n, a):\n        tot = 0\n        for i in range(n):\n            if a[i] > 0:\n                tot += a[i]\n            else:\n                k = min(tot, -a[i])\n                a[i] += k\n                tot -= k\n        tot = 0\n        for j in range(n):\n            if a[j] < 0:\n                tot -= a[j]\n        return tot\nt = inp()\nsolution = Solution()\nfor i in range(t):\n    n = inp()\n    a = inlt()\n    out(solution.main(n, a))", "from itertools import accumulate\nt = int(input())\nfor x in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    res = -min(accumulate(A))\n    print(res)", "def array_cancellation(size, arr):\n    num = 0\n    minimum = 0\n    for i in range(size):\n        num += arr[i]\n        if num < minimum:\n            minimum = num\n    return -1 * minimum\nn = int(input())\nfor i in range(n):\n    size = int(input())\n    arr = list(map(int, input().split()))\n    result = array_cancellation(size, arr)\n    print(result)", "import sys\ninput = sys.stdin.readline\nins = lambda : input().rstrip()\nini = lambda : int(input().rstrip())\ninm = lambda : map(int, input().rstrip().split())\ninl = lambda : list(map(int, input().split()))\nout = lambda x, s='\\n': print(s.join(map(str, x)))\nt = ini()\nfor _ in range(t):\n    n = ini()\n    a = inl()\n    ans = 0\n    count = 0\n    for i in a[::-1]:\n        if i < 0:\n            count += i\n        else:\n            ans += max(0, i + count)\n            count = 0 if i + count >= 0 else i + count\n    print(ans)", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    a = list(map(int, input().split()))[:n]\n    cost = 0\n    for i in a:\n        cost += i\n        if cost < 0:\n            cost = 0\n    print(cost)\n    t -= 1", "for s in [*open(0)][2::2]:\n    t = m = 0\n    for x in s.split():\n        t += int(x)\n        m = min(m, t)\n    print(-m)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    for i in range(n - 1):\n        if arr[i] > 0:\n            arr[i + 1] = arr[i] + arr[i + 1]\n            arr[i] = 0\n    print(arr[-1])", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    coins = 0\n    for i in range(n - 1):\n        if a[i] > 0:\n            a[i + 1] += a[i]\n            a[i] = 0\n    print(a[-1])", "def ii():\n    return int(input())\n\ndef li():\n    return [int(i) for i in input().split()]\nfor t in range(ii()):\n    n = ii()\n    a = li()\n    a.reverse()\n    store = 0\n    for i in range(n):\n        if a[i] < 0:\n            store += -a[i]\n        elif store >= a[i]:\n            store -= a[i]\n            a[i] = 0\n        else:\n            a[i] -= store\n            store = 0\n    ans = 0\n    for i in a:\n        if i > 0:\n            ans += i\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split(' ')]\n    sm = 0\n    for j in range(n):\n        sm = max(0, sm + a[j])\n    print(sm)", "t = int(input())\nanswer = []\nfor _ in range(t):\n    n = int(input())\n    liste = list(map(int, input().split(' ')))\n    sum = 0\n    mini = 0\n    for i in range(n):\n        sum += liste[i]\n        mini = min(sum, mini)\n    answer.append(str(-mini))\nprint('\\n'.join(answer))"]