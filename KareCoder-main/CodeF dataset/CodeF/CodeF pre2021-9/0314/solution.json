["for _ in range(int(input())):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    if nums[0]:\n        ans = [n + 1] + list(range(1, n + 1))\n    elif not nums[-1]:\n        ans = list(range(1, n + 2))\n    else:\n        ans = []\n        for i in range(n):\n            ans.append(i + 1)\n            if nums[i + 1] and (not nums[i]):\n                ans.append(n + 1)\n                ans.extend(list(range(i + 2, n + 1)))\n                break\n    print(' '.join(map(str, ans)))", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    size = n\n    res = []\n    while a and a[-1] == 1:\n        a.pop()\n        size -= 1\n    for i in range(1, len(a) + 1):\n        res.append(i)\n    res.append(n + 1)\n    for i in range(len(a) + 1, n + 1):\n        res.append(i)\n    print(' '.join([str(i) for i in res]))", "for _ in range(int(input())):\n    n = int(input())\n    arr = (*map(int, input().split()),)\n    if arr[0]:\n        print(' '.join((str(i % (n + 1) + 1) for i in range(-1, n))))\n    elif not arr[-1]:\n        print(' '.join((str(i) for i in range(1, n + 2))))\n    else:\n        last = None\n        for (i, val) in enumerate(arr):\n            if last is None:\n                last = val\n                continue\n            if val and (not last):\n                index = i\n                break\n        print(' '.join((str(i) for i in range(1, index + 1))), end=' ')\n        print(n + 1, end=' ')\n        print(' '.join((str(i) for i in range(index + 1, n + 1))))", "for _ in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    s = ''\n    if n == 1:\n        if l1[0] == 0:\n            print('1 2')\n        else:\n            print('2 1')\n    elif l1[n - 1] == 0:\n        for i in range(1, n + 2):\n            s += str(i) + ' '\n        print(s)\n    elif l1[0] == 1:\n        s += str(n + 1) + ' '\n        for j in range(1, n + 1):\n            s += str(j) + ' '\n        print(s)\n    else:\n        p = ''\n        for d in range(n):\n            p += str(l1[d])\n        if '01' in p:\n            for y in range(1, p.index('01') + 2):\n                s += str(y) + ' '\n            s += str(n + 1) + ' '\n            for x in range(p.index('01') + 2, n + 1):\n                s += str(x) + ' '\n            print(s)\n        else:\n            print(-1)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()[:-1].replace(' ', '')\n    if s[0] == '1':\n        print(n + 1, *list(range(1, n + 1)))\n    elif s[-1] == '0':\n        print(*list(range(1, n + 2)))\n    else:\n        x = s.find('01')\n        if x < 0:\n            print(-1)\n        else:\n            print(*list(range(1, x + 2)), n + 1, *list(range(x + 2, n + 1)))", "for _ in [0] * int(input()):\n    n = int(input())\n    a = input()\n    out = [-1]\n    if a[0] == '1':\n        i = 0\n    elif a[-1] == '0':\n        i = n\n    elif '0 1' in a:\n        i = a.index('0 1') // 2 + 1\n    out = list(range(1, i + 1)) + [n + 1] + list(range(i + 1, n + 1))\n    print(*out)", "test = int(input())\nfor t in range(test):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    a = range(1, n + 2)\n    if n == 1:\n        if ls[0] == 0:\n            print('1 2')\n        else:\n            print('2 1')\n        continue\n    elif ls[-1] == 0:\n        print(' '.join((str(i) for i in a)))\n        continue\n    elif ls[0] == 1:\n        print(a[-1], ' '.join((str(i) for i in a[:-1])))\n        continue\n    else:\n        for i in range(n):\n            if ls[i] == 0 and ls[i + 1] == 1:\n                print(' '.join((str(i) for i in a[:i + 1])), a[-1], ' '.join((str(i) for i in a[i + 1:-1])))\n                break\n        continue\n    print(-1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if arr[0] == 1:\n        res = [n + 1]\n        res += [i for i in range(1, n + 1)]\n        print(*res)\n    elif arr[-1] == 0:\n        res = [i for i in range(1, n + 2)]\n        print(*res)\n    else:\n        found = False\n        for i in range(n - 1):\n            if arr[i] == 0 and arr[i + 1] == 1:\n                found = True\n                res = [i for i in range(1, i + 2)]\n                res += [n + 1]\n                res += [i for i in range(i + 2, n + 1)]\n                print(*res)\n            if found:\n                break\n        if not found:\n            print(-1)", "def sol():\n    n = int(input())\n    list = [int(i) for i in input().split()]\n    br = 0\n    if list[0] == 1:\n        print(n + 1, end=' ')\n        for i in range(n):\n            print(i + 1, end=' ')\n        print()\n    elif list[n - 1] == 0:\n        for i in range(n + 1):\n            print(i + 1, end=' ')\n        print()\n    else:\n        for i in range(n - 1):\n            if list[i] == 0 and list[i + 1] == 1:\n                br = i\n                break\n        for i in range(br + 1):\n            print(i + 1, end=' ')\n        print(n + 1, end=' ')\n        for i in range(br + 1, n):\n            print(i + 1, end=' ')\n        print()\nt = int(input())\nwhile t > 0:\n    t -= 1\n    sol()", "def solve():\n    n = int(input())\n    ll = list(map(int, input().split()))\n    ans = []\n    vapis = False\n    for i in range(n):\n        if ll[i] == 1:\n            if not vapis:\n                vapis = True\n                ans.append(n + 1)\n            ans.append(i + 1)\n        else:\n            ans.append(i + 1)\n    if not vapis:\n        ans.append(n + 1)\n    return ans\nt = int(input())\nwhile t != 0:\n    res = solve()\n    print(*res)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    p = 0\n    for i in range(n):\n        if ls[i] == 0:\n            p = i + 1\n    y = 1\n    for i in range(n + 1):\n        if i == p:\n            print(n + 1, end=' ')\n        else:\n            print(y, end=' ')\n            y += 1", "t = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[0] == 1:\n        print(n + 1, end=' ')\n        for i in range(1, n + 1):\n            print(i, end=' ')\n        print()\n    elif a[n - 1] == 0:\n        for i in range(1, n + 1):\n            print(i, end=' ')\n        print(n + 1, end=' ')\n        print()\n    else:\n        i = 1\n        while i < n:\n            if a[i] == 1 and a[i - 1] == 0:\n                break\n            i += 1\n        for i in range(1, i + 1):\n            print(i, end=' ')\n        print(n + 1, end=' ')\n        for i in range(i + 1, n + 1):\n            print(i, end=' ')\n        print()\n    t -= 1", "t = int(input())\nfor i in range(0, t):\n    vertex = int(input())\n    vis_list = list(map(int, input().split()))\n    cnt = 0\n    g = 0\n    for k in vis_list:\n        if k == 1:\n            cnt += 1\n        else:\n            g += 1\n    else:\n        road = []\n        for x in range(1, vertex + 1):\n            road.append(x)\n        ind = 0\n        for k in vis_list:\n            if k == 1:\n                road.insert(ind, vertex + 1)\n                break\n            ind += 1\n        if g == vertex:\n            road.append(vertex + 1)\n        print(*road)", "def mochaAndHiking(n, array):\n    if array[-1] == 0:\n        return [x + 1 for x in range(n + 1)]\n    if array[0] == 1:\n        return [n + 1] + [x + 1 for x in range(n)]\n    for x in range(n):\n        if array[x] == 1:\n            break\n    ans = []\n    for i in range(x):\n        ans.append(i + 1)\n    ans.append(n + 1)\n    for i in range(x, n):\n        ans.append(i + 1)\n    return ans\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = mochaAndHiking(n, l)\n    for x in ans:\n        print(x, end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    if all((i == 1 for i in a)):\n        result = [n + 1] + [i for i in range(1, n + 1)]\n    else:\n        result = [0] * (n + 1)\n        c = False\n        for i in range(n - 1, -1, -1):\n            if a[i] == 0:\n                result[i + 1] = n + 1\n                result[i + 2:] = list(range(i + 2, n + 1))\n                break\n        result[:i + 1] = list(range(1, i + 2))\n    for i in result:\n        print(i, end=' ')\n    print()", "import sys\nsys.setrecursionlimit(100000000)\nfor _ in range(int(input())):\n    n = int(input())\n    directions = list(map(int, input().split()))\n    ans = []\n    if directions[-1] == 0:\n        ans = [i for i in range(1, n + 2)]\n    else:\n        i = n - 1\n        while i >= 0 and directions[i] != 0:\n            i -= 1\n        if i == -1:\n            ans = [n + 1]\n            for j in range(1, n + 1):\n                ans.append(j)\n        else:\n            for j in range(1, i + 2):\n                ans.append(j)\n            ans.append(n + 1)\n            for j in range(i + 2, n + 1):\n                ans.append(j)\n    print(*ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    ans = []\n    for j in range(1, n + 1):\n        ans.append(j)\n    ind = -1\n    for k in range(0, n + 1):\n        if k == 0:\n            if lst[0] == 1:\n                ind = 0\n                break\n        elif k == n:\n            if lst[k - 1] == 0:\n                ind = k\n                break\n        else:\n            prev = lst[k - 1]\n            next = lst[k]\n            if prev == 0 and next == 1:\n                ind = k\n                break\n    if ind == -1:\n        print(-1)\n    else:\n        ans.insert(ind, n + 1)\n        print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().strip().split()))\n    if n == 1 and l[0] == 0:\n        print(1, 2)\n    elif n == 1:\n        print(2, 1)\n    elif l[-1] == 0:\n        l = [i for i in range(1, n + 2)]\n        print(*l)\n    elif l[0] == 1:\n        l = [n + 1]\n        l += [i for i in range(1, n + 1)]\n        print(*l)\n    else:\n        k = -1\n        for i in range(n):\n            if l[i] == 0 and l[i + 1] == 1:\n                k = i\n                break\n        if k == -1:\n            print(-1)\n        else:\n            l = [i for i in range(1, k + 2)]\n            l += [n + 1]\n            l += [i for i in range(k + 2, n + 1)]\n            print(*l)", "t = int(input())\nwhile t:\n    n = int(input())\n    l = list(map(int, input().split()))\n    lans = []\n    if l.count(1) == 0:\n        for i in range(1, n + 2):\n            lans.append(i)\n    elif l.count(0) == 0:\n        lans.append(n + 1)\n        for i in range(1, n + 1):\n            lans.append(i)\n    elif l[0] == 0:\n        p = l.index(1) + 1\n        for i in range(1, p):\n            lans.append(i)\n        lans.append(n + 1)\n        for i in range(p, n + 1):\n            lans.append(i)\n    else:\n        lans.append(n + 1)\n        for i in range(1, n + 1):\n            lans.append(i)\n    print(*lans)\n    t -= 1", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if arr[-1] == 0:\n        return [i for i in range(1, n + 2)]\n    else:\n        inter = -1\n        for i in range(1, n):\n            if arr[i - 1] == 0 and arr[i] != 0:\n                inter = i\n                break\n    if inter == -1:\n        return [-1] if arr[0] == 0 else [n + 1] + [i for i in range(1, n + 1)]\n    ans = [i for i in range(1, inter + 1)] + [n + 1] + [i for i in range(inter + 1, n + 1)]\n    return ans\nfor _ in range(int(input())):\n    print(*solve())", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    out = ''\n    c = True\n    for k in range(0, len(a)):\n        if a[k] == 1 and c:\n            out += str(n + 1) + ' '\n            c = False\n        out += str(k + 1) + ' '\n    if c:\n        out += str(n + 1)\n    print(out)", "import math\nfrom collections import *\n\ndef solve():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    if a[0] == 1:\n        print(n + 1, end=' ')\n        for i in range(1, n + 1):\n            print(i, end=' ')\n        print()\n        return\n    elif a[n - 1] == 0:\n        for i in range(1, n + 2):\n            print(i, end=' ')\n        print()\n        return\n    else:\n        for i in range(n - 1):\n            if a[i] == 0 and a[i + 1] == 1:\n                for i in range(1, i + 2):\n                    print(i, end=' ')\n                print(n + 1, end=' ')\n                for i in range(i + 1, n + 1):\n                    print(i, end=' ')\n                print()\n                return\n    print(-1)\nt = int(input())\nfor _ in range(t):\n    solve()", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if 1 not in a:\n        for i in range(n + 1):\n            print(i + 1, end=' ')\n    else:\n        ind = a.index(1)\n        for i in range(ind):\n            print(i + 1, end=' ')\n        else:\n            print(n + 1, end=' ')\n        for i in range(ind, n):\n            print(i + 1, end=' ')\n        print()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[-1] == 0:\n        b = list(range(1, n + 2))\n        print(*b)\n    elif a[0] == 1:\n        b = list(range(1, n + 1))\n        b = [n + 1] + b\n        print(*b)\n    else:\n        for i in range(n):\n            p = 0\n            q = 0\n            if a[i] == 0 and a[i + 1] == 1:\n                p = i + 1\n                q = i + 2\n                c = list(range(1, p + 1))\n                d = list(range(q, n + 1))\n                f = c + [n + 1] + d\n                print(*f)\n                break\n        else:\n            print(-1)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[-1] == 0:\n        print(' '.join(map(str, range(1, n + 2))))\n        return\n    if a[0] == 1:\n        print(' '.join(map(str, [n + 1] + list(range(1, n + 1)))))\n        return\n    for i in range(1, n):\n        if a[i - 1] == 0 and a[i] == 1:\n            r = list(range(1, n + 1))\n            r.insert(i, n + 1)\n            print(' '.join(map(str, r)))\n            return\n    print(-1)\nfor i in range(int(input())):\n    solve()", "N = int(input())\nfor _ in range(N):\n    n = int(input())\n    nums = [0] + list(map(int, input().strip().split())) + [1]\n    for (i, (cur_r, next_r)) in enumerate(zip(nums[:], nums[1:])):\n        if cur_r == 0 and next_r == 1:\n            break\n    out_nums = list(range(1, i + 1)) + [n + 1] + list(range(i + 1, n + 1))\n    print(' '.join(map(str, out_nums)))", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef input_list():\n    return list(map(int, input().split()))\n\ndef input_string():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef input_int_gen():\n    return map(int, input().split())\ntests = inp()\nfor _ in range(tests):\n    n = inp()\n    roads = input_list()\n    ret = []\n    for (idx, road) in enumerate(roads):\n        if road == 0:\n            ret.append(idx + 1)\n        if road == 1:\n            ret.append(n + 1)\n            ret.extend(list(range(idx + 1, n + 1)))\n            break\n    else:\n        ret.append(n + 1)\n    print(' '.join([str(x) for x in ret]))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    w = [int(k) for k in input().split()]\n    c = n\n    res = []\n    while w and w[-1] == 1:\n        w.pop()\n        c -= 1\n    for j in range(1, len(w) + 1):\n        res.append(j)\n    res.append(n + 1)\n    for j in range(len(w) + 1, n + 1):\n        res.append(j)\n    print(' '.join([str(k) for k in res]))", "def find_order(a):\n    n = len(a)\n    if a[-1] == 0:\n        return list(range(1, n + 1)) + [n + 1]\n    if a[0] == 1:\n        return [n + 1] + list(range(1, n + 1))\n    pos = -1\n    for i in range(n - 1):\n        if a[i] == 0 and a[i + 1] == 1:\n            pos = i\n            break\n    assert pos >= 0\n    return list(range(1, pos + 2)) + [n + 1] + list(range(pos + 2, n + 1))\nn_t = int(input())\nfor t in range(n_t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    assert len(a) == n\n    result = find_order(a)\n    print(' '.join(map(str, result)))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    flag = False\n    idx = -1\n    for i in range(n - 1):\n        if a[i] == 0 and a[i + 1] == 1:\n            flag = True\n            idx = i + 1\n            break\n    if flag:\n        for i in range(1, idx + 1):\n            print(i, end=' ')\n        print(n + 1, end=' ')\n        for i in range(idx + 1, n + 1):\n            print(i, end=' ')\n    elif a[0] == 1:\n        print(n + 1, end=' ')\n        for i in range(1, n + 1):\n            print(i, end=' ')\n    elif a[-1] == 0:\n        for i in range(1, n + 1):\n            print(i, end=' ')\n        print(n + 1, end=' ')\n    else:\n        print(-1, end=' ')\n    print('')", "t = int(input())\nfor testcase in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if arr[0] == 1:\n        print(n + 1, ' '.join([str(k) for k in range(1, n + 1)]))\n    elif arr[-1] == 0:\n        print(' '.join([str(k) for k in range(1, n + 1)]), n + 1)\n    else:\n        nums = list(range(1, n + 1))\n        for k in range(n):\n            if k == n - 1:\n                break\n            if arr[k] == 0 and arr[k + 1] == 1:\n                nums.insert(k + 1, n + 1)\n                break\n        if k == n - 1:\n            print(-1)\n        else:\n            print(' '.join([str(k) for k in nums]))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    bo = 1\n    res = []\n    if a[-1] == 0:\n        res = [str(i) for i in range(1, n + 2)]\n        bo = 0\n    elif a[0] == 1:\n        res = [str(n + 1), '1']\n        res += [str(i) for i in range(2, n + 1)]\n        bo = 0\n    else:\n        res = []\n        bo = 1\n        for i in range(n):\n            if a[i] == 0 and a[i + 1] == 1 and bo:\n                res.append(str(i + 1))\n                res.append(str(n + 1))\n                bo = 0\n            else:\n                res.append(str(i + 1))\n    if bo:\n        print(-1)\n    else:\n        print(' '.join(res))", "for _ in range(int(input())):\n    a = 0\n    n = int(input())\n    a += 1\n    l = list(map(int, input().split()))\n    if l[-1] == 0:\n        p = [i for i in range(1, n + 2)]\n        a += 1\n        print(*p)\n        a += 1\n    else:\n        c = 0\n        p = []\n        a += 1\n        for i in range(n):\n            if l[i] == 1:\n                a += 1\n                c = i\n                break\n            else:\n                a += 1\n                p.append(i + 1)\n                a += 1\n        p.append(n + 1)\n        a += 1\n        for i in range(c + 1, n + 1):\n            p.append(i)\n            a += 1\n        print(*p)\n        a += 1\n        a += 1\n        a += 1\n        a += 1", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = list(map(str, range(1, n + 1)))\n    if arr[0] == 1:\n        print(str(n + 1) + ' ' + ' '.join(ans))\n        continue\n    if arr[-1] == 0:\n        print(' '.join(ans) + ' ' + str(n + 1))\n        continue\n    for i in range(n):\n        if arr[i] == 1:\n            print(' '.join(ans[:i] + [str(n + 1)] + ans[i:]))\n            break", "for s in [*open(0)][2::2]:\n    s = '0' + s[::2] + '1'\n    n = len(s) - 1\n    i = s.find('01') + 1\n    print(*([-1], [*range(1, i), n, *range(i, n)])[i > 0])", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[0] == 1:\n        print(str(n + 1) + ' ' + ' '.join(map(str, range(1, n + 1))))\n    elif a[-1] == 0:\n        print(' '.join(map(str, range(1, n + 1))) + ' ' + str(n + 1))\n    elif n == 1:\n        if a[0] == 0:\n            print('1 2')\n        else:\n            print('2 1')\n    else:\n        k = -1\n        for i in range(1, n):\n            if a[i] == 1:\n                k = i\n                break\n        print(' '.join(map(str, range(1, k + 1))) + ' ' + str(n + 1) + ' ' + ' '.join(map(str, range(k + 1, n + 1))))", "for t in range(int(input())):\n    n = int(input())\n    arr = input().split()\n    a = sum(map(int, arr))\n    if arr[-1] == '0':\n        ans = [str(i + 1) for i in range(n + 1)]\n        print(' '.join(ans))\n    elif a == n:\n        ans = [str(i + 1) for i in range(n)]\n        print(str(n + 1) + ' ' + ' '.join(ans))\n    else:\n        idx = 0\n        while idx < n - 1:\n            if arr[idx] == '0' and arr[idx + 1] == '1':\n                break\n            idx += 1\n        ans = ' '.join([str(i) for i in range(1, idx + 2)])\n        ans += ' {} '.format(n + 1)\n        ans += ' '.join([str(i + 1) for i in range(idx + 1, n)])\n        print(ans)", "def findAns(n, arr):\n    res = [i for i in range(1, n + 1)]\n    if arr[0] == 1:\n        return [n + 1] + res\n    if arr[-1] == 0:\n        return res + [n + 1]\n    for x in range(len(arr) - 1):\n        if arr[x] == 0 and arr[x + 1] == 1:\n            return res[:x + 1] + [n + 1] + res[x + 1:]\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    res = findAns(n, arr)\n    print(' '.join(map(str, res)))", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    result = [x + 1 for x in range(n)]\n    ok = False\n    if a[0] == 1:\n        print(' '.join(map(str, [n + 1] + result)))\n        continue\n    if a[-1] == 0:\n        print(' '.join(map(str, result + [n + 1])))\n        continue\n    for i in range(n - 1):\n        if (a[i], a[i + 1]) == (0, 1):\n            ok = True\n            result.insert(i + 1, n + 1)\n            break\n    if ok:\n        print(' '.join(map(str, result)))\n    else:\n        print(-1)", "for s in [*open(0)][2::2]:\n    n = len((s := ('0' + s[::2] + '1'))) - 1\n    i = s.find('01') + 1\n    print(*([-1], [*range(1, i), n, *range(i, n)])[i > 0])", "for s in [*open(0)][2::2]:\n    n = len((s := ('00' + s[::2] + '1'))) - 2\n    print(*([-1], [*range(1, (i := s.find('01'))), n, *range(i, n)])[i > 0])", "def f(n, edges):\n    if n == 1:\n        if edges[0] == 1:\n            return [2, 1]\n        else:\n            return [1, 2]\n    if edges[-1] == 0:\n        return list(range(1, n + 2))\n    if edges[0] == 1:\n        return [n + 1] + list(range(1, n + 1))\n    ret = []\n    for (i, v) in enumerate(edges[:-1]):\n        ret.append(i + 1)\n        if v == 0 and edges[i + 1] == 1:\n            ret.append(n + 1)\n            ret.append(i + 2)\n            ret.extend(list(range(ret[-1] + 1, n + 1)))\n            return ret\n    else:\n        return [-1]\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        edges = [int(i) for i in input().split()]\n        a = f(n, edges)\n        print(' '.join(map(str, a)))\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    f = 0\n    a = []\n    for i in range(n - 1):\n        a.append(i + 1)\n        if f == 0 and arr[i] == 0 and (arr[i + 1] == 1):\n            a.append(n + 1)\n            f = 1\n    a.append(n)\n    if f == 1:\n        ans = a\n    elif arr[0] == 1:\n        ans = [n + 1]\n        for i in range(1, n + 1):\n            ans.append(i)\n    elif arr[n - 1] == 0:\n        ans = []\n        for i in range(1, n + 2):\n            ans.append(i)\n    else:\n        ans = [-1]\n    print(*ans)", "def getlistint():\n    return list(map(int, stdin.readline().split()))\n\ndef getints():\n    return map(int, stdin.readline().split())\n\ndef getliststr():\n    return list(stdin.readline().split())\n\ndef getint():\n    return int(stdin.readline().strip())\n\ndef getstr():\n    return stdin.readline().strip()\n\ndef pr(s):\n    stdout.write(str(s) + '\\n')\n\ndef prlist(l):\n    stdout.write(' '.join(list(map(str, l))) + '\\n')\nfrom sys import stdin, stdout\nfor _ in range(getint()):\n    n = getint()\n    a = getlistint()\n    if a[0] == 1:\n        prlist([n + 1] + list(range(1, n + 1)))\n        continue\n    if a[-1] == 0:\n        prlist(list(range(1, n + 2)))\n        continue\n    l = []\n    for i in range(n - 1):\n        if a[i] == 0 and a[i + 1] == 1:\n            l = list(range(1, i + 2)) + [n + 1] + list(range(i + 2, n + 1))\n            break\n    if l == []:\n        pr(-1)\n    else:\n        prlist(l)", "def fun(arr, n):\n    if arr[0]:\n        print(n + 1, end=' ')\n        for i in range(n):\n            print(i + 1, end=' ')\n        return\n    for i in range(n - 1):\n        if not arr[i] and arr[i + 1]:\n            for j in range(i + 1):\n                print(j + 1, end=' ')\n            print(n + 1, end=' ')\n            for j in range(i + 1, n):\n                print(j + 1, end=' ')\n            return\n    for i in range(1, n + 2):\n        print(i, end=' ')\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    fun(arr, n)\n    print()", "def solve():\n    n = int(input())\n    arr = [0] + [int(x) for x in input().split()]\n    path = []\n    if n == 1:\n        if arr[1] == 1:\n            return '2 1'\n        return '1 2'\n    if arr[1] == 1:\n        path.append(n + 1)\n        path.extend(range(1, 1 + n))\n    elif arr[n] == 0:\n        path.extend(range(1, 2 + n))\n    else:\n        for i in range(1, n):\n            if arr[i] == 0 and arr[i + 1] == 1:\n                path.extend(range(1, i + 1))\n                path.append(n + 1)\n                path.extend(range(i + 1, n + 1))\n                break\n    if path:\n        return ' '.join((str(x) for x in path))\n    return -1\nfor _ in range(int(input())):\n    print(solve())", "t = int(input())\nfor lfkasjflkaj in range(t):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    ans = [str(i + 1) for i in range(n)]\n    if l[0] == 1:\n        print(str(n + 1) + ' ' + ' '.join(ans))\n    elif l[-1] == 0:\n        print(' '.join(ans) + ' ' + str(n + 1))\n    else:\n        flag = 0\n        for i in range(n - 1):\n            if l[i] == 0 and l[i + 1] == 1:\n                print(' '.join(ans[:i + 1]) + ' ' + str(n + 1) + ' ' + ' '.join(ans[i + 1:]))\n                flag = 1\n                break\n        if flag == 0:\n            print('-1')", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    index = -1\n    s = ''\n    for i in reversed(range(n)):\n        if a[i] == 0:\n            index = i\n            break\n    if index == -1:\n        s = str(n + 1)\n        for i in range(1, n + 1):\n            s += ' ' + str(i)\n    else:\n        for i in range(1, index + 2):\n            s += str(i) + ' '\n        s += str(n + 1)\n        for i in range(index + 2, n + 1):\n            s += ' ' + str(i)\n    print(s)", "import math\nimport collections\nimport bisect\nimport functools\nimport sys\nt = int(input())\nfor __ in range(t):\n    n = int(input())\n    arr = list(map(int, input().strip(' ').split(' ')))\n    if arr[0] == 1:\n        print(str(n + 1) + ' ' + ' '.join((str(i) for i in range(1, n + 1))))\n        continue\n    elif arr[n - 1] == 0:\n        print(' '.join((str(i) for i in range(1, n + 1))) + ' ' + str(n + 1))\n        continue\n    else:\n        for i in range(n - 1):\n            if arr[i] == 0 and arr[i + 1] == 1:\n                a = ' '.join((str(i) for i in range(1, i + 2)))\n                b = str(n + 1)\n                c = ' '.join((str(i) for i in range(i + 2, n + 1)))\n                print(a + ' ' + b + ' ' + c)\n                break\n        else:\n            print(-1)", "def res(l, n):\n    if n == 1:\n        if l[0] == 1:\n            print(2, 1, sep=' ')\n        else:\n            print(1, 2, sep=' ')\n    elif l[0] == 1:\n        print(n + 1, end=' ')\n        for i in range(1, n + 1):\n            print(i, end=' ')\n        print()\n    elif l[n - 1] == 0:\n        for i in range(1, n + 1):\n            print(i, end=' ')\n        print(n + 1)\n    else:\n        index = -1\n        for i in range(1, n):\n            if l[i] == 1 and l[i - 1] == 0:\n                index = i - 1\n                break\n        if index != -1:\n            for i in range(0, n):\n                if i != index:\n                    print(i + 1, end=' ')\n                else:\n                    print(i + 1, end=' ')\n                    print(n + 1, end=' ')\n            print()\n        else:\n            print(-1)\nfor t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    res(l, n)", "for i in range(int(input())):\n    n = int(input())\n    k = list(map(int, input().split()))\n    ans = [i + 1 for i in range(0, n)]\n    if k[-1] == 0:\n        print(*ans + [n + 1])\n    else:\n        for i in range(len(k)):\n            if k[i] == 1:\n                res = ans[:i] + [n + 1] + ans[i:]\n                break\n        print(*res)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[0] == 1:\n        print(' '.join(map(str, [n + 1] + [i for i in range(1, n + 1)])))\n    elif a[n - 1] == 0:\n        print(' '.join(map(str, [i for i in range(1, n + 1)] + [n + 1])))\n    else:\n        for i in range(n - 1):\n            if a[i] == 0 and a[i + 1] == 1:\n                print(' '.join(map(str, [j for j in range(1, i + 2)] + [n + 1] + [j for j in range(i + 2, n + 1)])))\n                break\n        else:\n            print(-1)", "def solve(arr, n):\n    first = n + 1\n    for i in range(1, n + 1):\n        if arr[i] != 0:\n            first = i\n            break\n    if first != n + 1:\n        for i in range(1, first):\n            print(i, end=' ')\n        print(n + 1, end=' ')\n        for i in range(first, n + 1):\n            print(i, end=' ')\n        print()\n    else:\n        for i in range(1, n + 2):\n            print(i, end=' ')\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [0] + list(map(int, input().split()))\n    solve(arr, n)", "numTests = input()\nanswer = []\nfor k in range(int(numTests)):\n    n = int(input())\n    data = input()\n    path = [i for i in range(1, n + 2)]\n    a = [int(i) for i in data.split()]\n    if a[0] == 1:\n        path.pop()\n        path.insert(0, n + 1)\n    elif a[0] == 0:\n        if a[n - 1] == 1:\n            for i in range(n - 1):\n                if a[i] == 0 and a[i + 1] == 1:\n                    path.pop()\n                    path.insert(i + 1, n + 1)\n                    break\n    else:\n        path = -1\n    answer.append(' '.join([str(j) for j in path]))\nfor c in answer:\n    print(c)", "import sys\n\ndef main():\n    num_args = int(input())\n    while num_args:\n        solve()\n        num_args -= 1\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    i = 0\n    if a[i]:\n        result = ' '.join([str(x + 1) for x in range(n)])\n        result = str(n + 1) + ' ' + result\n    elif not a[-1]:\n        result = ' '.join([str(x + 1) for x in range(n + 1)])\n    else:\n        result = ''\n        loop_found = False\n        while i < n:\n            if not i:\n                result = str(i + 1)\n            else:\n                result = result + ' ' + str(i + 1)\n            if i == n - 1:\n                break\n            if not a[i] and a[i + 1] and (not loop_found):\n                result = result + ' ' + str(n + 1)\n                result = result + ' ' + str(i + 2)\n                i += 2\n                loop_found = True\n            else:\n                i += 1\n        if str(n + 1) not in result:\n            sys.stdout.write(str(-1) + '\\n')\n            return\n    sys.stdout.write(str(result) + '\\n')\nmain()", "t = int(input())\nwhile t:\n    t -= 1\n    te = int(input())\n    a = list(map(int, input().split()))\n    if a[0] == 1:\n        print(te + 1, end=' ')\n        for i in range(te):\n            print(i + 1, end=' ')\n    elif a[-1] == 0:\n        for i in range(te + 1):\n            print(i + 1, end=' ')\n    else:\n        for i in range(te - 1):\n            if a[i] == 0 and a[i + 1] == 1:\n                print(i + 1, te + 1, end=' ')\n                break\n            else:\n                print(i + 1, end=' ')\n        i += 1\n        while i + 1 <= te:\n            print(i + 1, end=' ')\n            i += 1\n    print('')", "for s in [*open(0)][2::2]:\n    n = len((s := ('00' + s[::2] + '1'))) - 2\n    print(*([-1], [*range(1, (i := s.find('01'))), n, *range(i, n)])[i > 0])", "n_cases = int(input())\nfor current_case in range(1, n_cases + 1):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    first_one_ind = -1\n    for (i, x) in enumerate(a):\n        if x == 1:\n            first_one_ind = i\n            break\n    if first_one_ind == -1:\n        ans = list(range(n + 1))\n    else:\n        ans = list(range(first_one_ind)) + [n] + list(range(first_one_ind, n))\n    print(' '.join([str(a + 1) for a in ans]))", "def solution():\n    l = int(input())\n    n = input()\n    ar = n.split()\n    ar.reverse()\n    ans = [i + 1 for i in range(l)]\n    temp = int(l)\n    for i in ar:\n        if i == '0':\n            break\n        temp -= 1\n    ans.insert(temp, l + 1)\n    for j in ans:\n        print(j, end=' ')\n    print('')\n    return\n    print(-1)\nt = int(input())\nwhile t > 0:\n    t -= 1\n    solution()", "for s in [*open(0)][2::2]:\n    n = len((s := ('00' + s[::2] + '1'))) - 2\n    print(*([-1], [*range(1, (i := s.find('01'))), n, *range(i, n)])[i > 0])", "for i in range(int(input())):\n    inten = lambda x: int(x)\n    n = int(input())\n    array = input().split(' ')\n    array = list(map(inten, array))\n    if array[-1] == 0:\n        print(', '.join([str(i + 1) for i in range(len(array) + 1)]).replace(',', ''))\n    elif 1 in array:\n        davor_zu_n = True\n        zuruck_zu_x = False\n        for (counter, i) in enumerate(array):\n            if i == 1 and davor_zu_n:\n                str_1 = ', '.join([str(i + 1) for i in range(counter)]).replace(',', '')\n                str_2 = ', '.join([str(i + 1) for i in range(counter, n)]).replace(',', '')\n                if str_1 == '':\n                    print(str(n + 1) + ' ' + str_2)\n                elif str_2 == '':\n                    print(str_1 + ' ' + str(n + 1))\n                else:\n                    print(str_1 + ' ' + str(n + 1) + ' ' + str_2)\n                break\n            elif i == 1:\n                davor_zu_n = False\n            elif i == 0:\n                davor_zu_n = True\n    else:\n        print('-1')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = []\n    f = True\n    for i in range(len(a)):\n        if f and a[i] != 0:\n            ans.append(n + 1)\n            f = False\n        ans.append(i + 1)\n    if len(ans) == len(a):\n        ans.append(n + 1)\n    print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    path = [i for i in range(1, n + 1)]\n    ai = input().split()\n    for k in range(n):\n        ai[k] = int(ai[k])\n        ai.append(3)\n    for j in range(n):\n        if ai[j] == 0 and ai[j + 1] == 1:\n            path.insert(j + 1, n + 1)\n            print(' '.join([str(x) for x in path]))\n            break\n        elif ai[n - 1] == 0:\n            path.append(n + 1)\n            print(' '.join([str(x) for x in path]))\n            break\n        elif ai[0] == 1:\n            path.insert(0, n + 1)\n            print(' '.join([str(x) for x in path]))\n            break\n    if len(path) < n + 1:\n        print(-1)", "for s in [*open(0)][2::2]:\n    n = len((s := ('00' + s[::2] + '1'))) - 2\n    print(*([-1], [*range(1, (i := s.find('01'))), n, *range(i, n)])[i > 0])", "def fun(ls, n):\n    if ls[-1] == 0:\n        print(*[i for i in range(1, n + 2)])\n    else:\n        if n == 1 and ls[0] == 1:\n            print(2, 1)\n            return\n        ans = []\n        possible = False\n        last_value = None\n        for i in range(n - 1):\n            index_stw1 = i + 1\n            cur_val = ls[i]\n            next_val = ls[i + 1]\n            if cur_val == 0 and next_val == 1:\n                ans.append(index_stw1)\n                ans.append(n + 1)\n                last_value = index_stw1 + 1\n                possible = True\n                break\n            ans.append(index_stw1)\n        if possible:\n            ans.extend(range(last_value, n + 1))\n            print(*ans)\n            return\n        if ls[0] == 1:\n            print(*[n + 1] + [i for i in range(1, n + 1)])\n        else:\n            print(-1)\nT = int(input())\nfor i in range(T):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    fun(ls, n)", "def fun(ls, n):\n    if ls[-1] == 0:\n        print(*[i for i in range(1, n + 2)])\n    else:\n        ans = []\n        possible = False\n        last_value = None\n        for i in range(n - 1):\n            index_stw1 = i + 1\n            cur_val = ls[i]\n            next_val = ls[i + 1]\n            if cur_val == 0 and next_val == 1:\n                ans.append(index_stw1)\n                ans.append(n + 1)\n                last_value = index_stw1 + 1\n                possible = True\n                break\n            ans.append(index_stw1)\n        if possible:\n            ans.extend(range(last_value, n + 1))\n            print(*ans)\n            return\n        if ls[0] == 1:\n            print(*[n + 1] + [i for i in range(1, n + 1)])\n        else:\n            print(-1)\nT = int(input())\nfor i in range(T):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    fun(ls, n)", "for s in [*open(0)][2::2]:\n    n = len((s := ('00' + s[::2] + '1'))) - 2\n    print(*([-1], [*range(1, (i := s.find('01'))), n, *range(i, n)])[i > 0])", "t = int(input())\nfor x in range(t):\n    yes = False\n    n = int(input())\n    arr = list(map(int, input().split()))\n    temp = []\n    if arr[0] == 1:\n        temp = [n + 1]\n        for b in range(1, n + 1):\n            temp.append(b)\n            yes = True\n    elif arr[n - 1] == 0:\n        for b in range(1, n + 1):\n            temp.append(b)\n        temp.append(n + 1)\n        yes = True\n    if not yes:\n        done = False\n        for i in range(0, n - 1):\n            if done:\n                break\n            if arr[i] == 0 and arr[i + 1] == 1:\n                for x in range(1, i + 2):\n                    temp.append(x)\n                temp.append(n + 1)\n                for z in range(i + 2, n + 1):\n                    temp.append(z)\n                done = True\n    for text in temp:\n        print(text, end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if a[-1] == 0:\n        for i in range(1, n + 2):\n            print(i, end=' ')\n        continue\n    if a[0] == 1:\n        print(n + 1, end=' ')\n        for i in range(1, n + 1):\n            print(i, end=' ')\n        continue\n    i = 0\n    flag = True\n    while i < len(a):\n        if a[i] == 0 and a[i + 1] == 1 and flag:\n            print(i + 1, n + 1, i + 2, end=' ')\n            flag = False\n            i += 2\n        else:\n            print(i + 1, end=' ')\n            i += 1", "def main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    path = []\n    if arr[0] == 1:\n        path.append(n + 1)\n        for i in range(1, n + 1):\n            path.append(i)\n        return path\n    if arr[n - 1] == 0:\n        for i in range(1, n + 1):\n            path.append(i)\n        path.append(n + 1)\n        return path\n    gone_once = False\n    for i in range(n - 1):\n        path.append(i + 1)\n        if gone_once is False and arr[i] == 0 and (arr[i + 1] == 1):\n            path.append(n + 1)\n            gone_once = True\n    path.append(n)\n    if gone_once:\n        return path\n    return [-1]\nfor _ in range(int(input())):\n    a = main()\n    print(*a)", "for _ in range(int(input())):\n    n = int(input())\n    m = list(input().split())\n    p = [i + 1 for i in range(n)]\n    x = 0\n    for i in range(n):\n        if m[i] != '0':\n            x = -1\n            break\n    xp = 0\n    for i in range(n):\n        if m[i] != '1':\n            xp = -1\n            break\n    if xp == 0:\n        p.insert(0, n + 1)\n        print(*p)\n    elif x == 0:\n        p.append(n + 1)\n        print(*p)\n    else:\n        for i in range(n + 1):\n            if m[i] == '0' and m[i + 1 if i + 1 <= n - 1 else 0] == '1':\n                k = i + 1\n                if k > n:\n                    k = 0\n                p.insert(k, n + 1)\n                print(*p)\n                p = -1\n                break\n        if p != -1:\n            print(p)", "t = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[n - 1] == 0:\n        print(*range(1, n + 2))\n    elif a.count(0) == 0:\n        arr = [n + 1] + [i + 1 for i in range(n)]\n        print(*arr)\n    else:\n        flag = False\n        for i in range(n):\n            if a[i] == 0:\n                flag = True\n            elif flag and a[i] == 1:\n                index = i\n                break\n        ans = [i + 1 for i in range(index)] + [n + 1] + [i + 1 for i in range(index, n)]\n        print(*ans)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[-1] == 0:\n        print(*[i for i in range(1, n + 2)])\n    else:\n        res = []\n        f = 0\n        for i in range(n - 1, 0, -1):\n            if a[i - 1] == 0:\n                for j in range(1, i + 1):\n                    res.append(j)\n                res.append(n + 1)\n                for j in range(i + 1, n + 1):\n                    res.append(j)\n                f = 1\n                break\n            else:\n                pass\n        if f == 0:\n            print(n + 1, end=' ')\n            for i in range(1, n + 1):\n                print(i, end=' ')\n            print()\n        else:\n            print(*res)", "from sys import *\ninput = lambda : stdin.readline()\nint_arr = lambda : list(map(int, stdin.readline().strip().split()))\nstr_arr = lambda : list(map(str, stdin.readline().split()))\nget_str = lambda : map(str, stdin.readline().strip().split())\nget_int = lambda : map(int, stdin.readline().strip().split())\nget_float = lambda : map(float, stdin.readline().strip().split())\nmod = 1000000007\nsetrecursionlimit(1000)\nfor _ in range(int(input())):\n    n = int(input())\n    arr = str_arr()\n    st = ''.join(arr)\n    lst = []\n    if '01' in st or arr[-1] == '0' or arr[0] == '1':\n        if arr[-1] == '0':\n            lst = [i for i in range(1, n + 2)]\n        elif arr[0] == '1':\n            lst += [n + 1]\n            for i in range(1, n + 1):\n                lst += [i]\n        elif '01' in st:\n            ind = st.index('01')\n            for i in range(ind + 1):\n                lst += [i + 1]\n            lst += [n + 1]\n            for i in range(ind + 1, n):\n                lst += [i + 1]\n        else:\n            lst = [-1]\n    else:\n        lst = [-1]\n    print(*lst)", "debug = 0\n\ndef solve(n, mas):\n    if mas[-1] == 0:\n        return ' '.join(map(str, list(range(1, n + 2))))\n    if mas[0] == 1:\n        return ' '.join(map(str, [n + 1] + list(range(1, n + 1))))\n    mas_str = ''.join(map(str, mas))\n    if '01' in mas_str:\n        ind = mas_str.index('01')\n        return ' '.join(map(str, list(range(1, ind + 1)) + [ind + 1] + [n + 1] + list(range(ind + 2, n + 1))))\n    return -1\nif debug:\n    ans = []\n    with open('input.txt', 'r') as file:\n        for i in range(int(file.readline().strip())):\n            ans.append(solve(int(file.readline().strip()), list(map(int, file.readline().strip()))))\n    for i in ans:\n        print(i)\nif not debug:\n    for _ in range(int(input())):\n        print(solve(int(input()), list(map(int, input().split()))))", "for _ in range(int(input())):\n    a = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    for i in range(1, a + 2):\n        d[i] = []\n    for i in range(1, a):\n        d[i].append(i + 1)\n    for i in range(1, len(l) + 1):\n        if l[i - 1] == 0:\n            d[i].append(a + 1)\n        else:\n            d[a + 1].append(i)\n    flag = 0\n    l2 = []\n    flag1 = 0\n    for i in range(len(l) - 1):\n        if l[i] == 0 and l[i + 1] == 1 and (flag1 == 0):\n            flag1 = 1\n            l2.append(i + 1)\n            l2.append(a + 1)\n        else:\n            l2.append(i + 1)\n    l2.append(a)\n    if len(l2) == a + 1:\n        flag = 1\n        print(*l2)\n    elif a + 1 in d[a]:\n        flag = 1\n        l1 = [i for i in range(1, a + 2)]\n        print(*l1)\n    elif 1 in d[a + 1]:\n        l1 = [a + 1]\n        flag = 1\n        for i in range(1, a + 1):\n            l1.append(i)\n        print(*l1)\n    if flag == 0:\n        print(-1)", "t = int(input())\nwhile t:\n    n = int(input())\n    V = list(map(int, input().split()))[:n]\n    A = []\n    if V[0] == 1:\n        A.append(n + 1)\n        for i in range(n):\n            A.append(i + 1)\n    elif V[-1] == 0:\n        for i in range(n):\n            A.append(i + 1)\n        A.append(n + 1)\n    else:\n        for i in range(n - 1):\n            if V[i] == 0 and V[i + 1] == 1:\n                a = i\n        for i in range(n):\n            if i != a:\n                A.append(i + 1)\n            else:\n                A.append(i + 1)\n                A.append(n + 1)\n    print(*A)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if arr[0] == 1:\n        print(n + 1, end=' ')\n        for i in range(n):\n            print(i + 1, end=' ')\n        print()\n        continue\n    if n == 1 and arr[0] == 0:\n        print(1, 2)\n        continue\n    if n == 1 and arr[0] == 1:\n        print(2, 1)\n        continue\n    for i in range(n):\n        if i == n - 1 and arr[i] == 0:\n            print(i + 1, i + 2, end=' ')\n            break\n        if arr[i] == 0:\n            print(i + 1, end=' ')\n        if arr[i] == 1:\n            print(n + 1, end=' ')\n            for j in range(i, n):\n                print(j + 1, end=' ')\n            break\n    print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[-1] == 0:\n        print(*[i for i in range(1, n + 2)])\n    elif a[0] == 1:\n        print(n + 1, *[i for i in range(1, n + 1)])\n    else:\n        ans = []\n        found = False\n        for i in range(1, n):\n            ans.append(i)\n            if a[i] == 1 and a[i - 1] == 0 and (not found):\n                ans.append(n + 1)\n                found = True\n        ans.append(n)\n        if not found:\n            print(-1)\n        else:\n            print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if l[-1] == 0:\n        print(*range(1, n + 2))\n    elif l[0] == 1:\n        print(n + 1, *range(1, n + 1))\n    else:\n        for i in range(1, n):\n            if l[i - 1] == 0 and l[i] == 1:\n                print(*range(1, i + 1), n + 1, *range(i + 1, n + 1))\n                break", "for s in [*open(0)][2::2]:\n    s = '0' + s[::2] + '1'\n    n = len(s) - 1\n    i = s.find('01') + 1\n    print(*([-1], [*range(1, i), n, *range(i, n)])[i > 0])", "t = int(input())\nfor _ in range(t):\n    v = int(input())\n    arr = list(map(int, input().split()))\n    ut = nam = -1\n    for (j, i) in enumerate(arr):\n        if i == 0:\n            ut = j\n    ans = []\n    if ut == -1:\n        ans.append(v + 1)\n    for i in range(v):\n        ans.append(i + 1)\n        if ut == i:\n            ans.append(v + 1)\n    ans2 = [str(i) for i in ans]\n    print(' '.join(ans2))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    lst = []\n    flag = 0\n    for i in range(1, n + 1):\n        if a[i - 1] == 1:\n            if flag == 0:\n                lst.append(n + 1)\n                flag = 1\n            lst.append(i)\n        else:\n            lst.append(i)\n    if flag == 0:\n        lst.append(n + 1)\n    print(*lst)", "def solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if arr[0]:\n        print(n + 1, end=' ')\n        for i in range(n):\n            print(i + 1, end=' ')\n        return\n    for i in range(n):\n        if i <= n - 1 and i + 1 <= n - 1:\n            if not arr[i] and arr[i + 1]:\n                for j in range(i + 1):\n                    print(j + 1, end=' ')\n                print(n + 1, end=' ')\n                for j in range(i + 1, n):\n                    print(j + 1, end=' ')\n                return\n    for i in range(0, n + 1):\n        print(i + 1, end=' ')\nt = int(input())\nfor _ in range(t):\n    solve()\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(range(1, n + 1))\n    for i in range(n + 1):\n        if i == n or a[n - i - 1] == 0:\n            break\n    b.insert(n - i, n + 1)\n    print(*b)", "def fun(ls, n):\n    if ls[-1] == 0:\n        print(*[i for i in range(1, n + 2)])\n    else:\n        ans = []\n        possible = False\n        last_value = None\n        for i in range(n - 1):\n            index_stw1 = i + 1\n            cur_val = ls[i]\n            next_val = ls[i + 1]\n            if cur_val == 0 and next_val == 1:\n                ans.append(index_stw1)\n                ans.append(n + 1)\n                last_value = index_stw1 + 1\n                possible = True\n                break\n            ans.append(index_stw1)\n        if possible:\n            ans.extend(range(last_value, n + 1))\n            print(*ans)\n            return\n        if ls[0] == 1:\n            print(*[n + 1] + [i for i in range(1, n + 1)])\n        else:\n            print(-1)\nT = int(input())\nfor i in range(T):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    fun(ls, n)", "import sys\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef LI1():\n    return list(map(int1, sys.stdin.readline().split()))\n\ndef LLI1(rows_number):\n    return [LI1() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline().rstrip()\ninf = 10 ** 16\nmd = 10 ** 9 + 7\n\ndef solve():\n    n = II()\n    aa = LI()\n    if aa[0] == 1:\n        ans = [n + 1] + list(range(1, n + 1))\n    elif aa[-1] == 0:\n        ans = list(range(1, n + 2))\n    else:\n        last = -1\n        for i in range(n)[::-1]:\n            if aa[i] == 0:\n                last = i\n                break\n        ans = list(range(last + 1)) + [n] + list(range(last + 1, n))\n        ans = [a + 1 for a in ans]\n    print(*ans)\nfor testcase in range(II()):\n    solve()", "t = int(input())\nresults = []\nfor i in range(t):\n    n = int(input())\n    nums = [int(num) for num in input().split()]\n    if nums[0] == 1:\n        results.append(' '.join([str(n + 1)] + [str(j) for j in range(1, n + 1)]))\n    elif nums[-1] == 0:\n        results.append(' '.join([str(j) for j in range(1, n + 2)]))\n    else:\n        for j in range(n - 1):\n            if nums[j] == 0 and nums[j + 1] != 0:\n                path = [str(x) for x in range(1, j + 2)] + [str(n + 1)] + [str(x) for x in range(j + 2, n + 1)]\n                results.append(' '.join(path))\n                break\n        else:\n            results.append('-1')\nfor i in range(t):\n    print(results[i])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = [int(x) for x in input().split()]\n    if x[-1] == 0:\n        for i in range(n):\n            print(i + 1, end=' ')\n        print(n + 1)\n    elif x[0] == 1:\n        print(n + 1, end=' ')\n        for i in range(n):\n            print(i + 1, end=' ')\n        print()\n    else:\n        r = -1\n        for i in range(n - 1):\n            if x[i] == 0 and x[i + 1] == 1:\n                r = i\n                break\n        if r == -1:\n            print(-1)\n        else:\n            for i in range(1, r + 2):\n                print(i, end=' ')\n            print(n + 1, end=' ')\n            for i in range(r + 2, n + 1):\n                print(i, end=' ')\n            print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(range(1, n + 1))\n    for i in range(n + 1):\n        if i == n or a[n - i - 1] == 0:\n            break\n    b.insert(n - i, n + 1)\n    print(*b)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list()\n    x = list(map(int, input().split()))\n    flag = True\n    for i in range(n):\n        if x[i] == 0:\n            a.append(False)\n            flag = False\n        else:\n            a.append(True)\n    if flag:\n        way = [n + 1] + list((i for i in range(1, n + 1)))\n        print(*way)\n        continue\n    way = []\n    is_visited = False\n    for i in range(n):\n        way.append(i + 1)\n        if not is_visited and (i == n - 1 and (not a[i]) or (not a[i] and a[i + 1])):\n            way.append(n + 1)\n            is_visited = True\n    print(*way)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if l[-1] == 0:\n        p = [i for i in range(1, n + 2)]\n        print(*p)\n    else:\n        c = 0\n        p = []\n        for i in range(n):\n            if l[i] == 1:\n                c = i\n                break\n            else:\n                p.append(i + 1)\n        p.append(n + 1)\n        for i in range(c + 1, n + 1):\n            p.append(i)\n        print(*p)", "for _ in range(int(input())):\n    l = int(input())\n    a = ''.join(list(input().split()))\n    if a[0] == '1':\n        print(l + 1, end=' ')\n        for i in range(l):\n            print(i + 1, end=' ')\n        print()\n    elif a[-1] == '0':\n        for i in range(l):\n            print(i + 1, end=' ')\n        print(l + 1, end=' ')\n        print()\n    else:\n        temp = a.find('01')\n        for i in range(temp + 1):\n            print(i + 1, end=' ')\n        print(l + 1, end=' ')\n        for i in range(temp + 1, l):\n            print(i + 1, end=' ')\n        print()", "def gcd(a, b):\n    return b if a == 0 else gcd(b % a, a)\n\ndef lcm(a, b):\n    return a / gcd(a, b) * b\nmini = 100000\ntests = int(input())\nmod = 10 ** 9 + 7\nwhile tests:\n    tests -= 1\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = ''\n    if arr[-1] == 0:\n        for i in range(n + 1):\n            ans += str(i + 1) + ' '\n    elif arr[0] == 1:\n        ans = str(n + 1) + ' '\n        for i in range(n):\n            ans += str(i + 1) + ' '\n    else:\n        done = False\n        for i in range(n):\n            ans += str(i + 1) + ' '\n            if not done and arr[i] == 0 and (i + 1 < n and arr[i + 1] == 1):\n                ans += str(n + 1) + ' '\n                done = True\n        if not done:\n            ans = -1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    v = int(input())\n    arr = list(map(int, input().split()))\n    ut = nam = -1\n    for (j, i) in enumerate(arr):\n        if i == 0:\n            ut = j\n    ans = []\n    if ut == -1:\n        ans.append(v + 1)\n    for i in range(v):\n        ans.append(i + 1)\n        if ut == i:\n            ans.append(v + 1)\n    ans2 = [str(i) for i in ans]\n    print(' '.join(ans2))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a[-1] == 0:\n        ans = range(1, n + 2)\n        print(*ans)\n        continue\n    elif a[0] != 0:\n        ans = [n + 1]\n        ans += list(range(1, n + 1))\n        print(*ans)\n    else:\n        r = -1\n        for i in range(0, n - 1):\n            if a[i] == 0 and a[i + 1] != 0:\n                r = i\n                break\n        ans = list(range(1, r + 2))\n        ans.append(n + 1)\n        ans += range(r + 2, n + 1)\n        print(*ans)"]