["R = lambda : map(int, input().split())\nfor _ in range(int(input())):\n    (n, x) = R()\n    a = list(R())\n    print((sum(a) + x - 1) // x, sum(((i + x - 1) // x for i in a)))", "for i in range(int(input())):\n    (n, x, *l) = map(int, input().split() + input().split())\n    print((sum(l) + x - 1) // x, sum([(a + x - 1) // x for a in l]))", "from math import ceil\nimport sys\nfrom os import path\n\ndef solve():\n    (a, b) = map(int, input().split())\n    arr = map(int, input().split())\n    maxx = minn = 0\n    for i in arr:\n        maxx += ceil(i / b)\n        minn += i\n    minn = ceil(minn / b)\n    print(minn, maxx)\nif path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nt = 1\nt = int(input())\nwhile t:\n    solve()\n    t -= 1", "import math\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        print(case())\n\ndef case():\n    (n, x) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    mini = math.ceil(sum(a) / x)\n    maxi = 0\n    for num in a:\n        maxi += math.ceil(num / x)\n    return ' '.join(map(str, [int(mini), int(maxi)]))\nmain()", "from math import ceil\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(f'{ceil(sum(arr) / x)} {sum((ceil(i / x) for i in arr))}')", "R = lambda : map(int, input().split())\nfor _ in range(int(input())):\n    (n, x) = R()\n    a = list(R())\n    print((sum(a) + x - 1) // x, sum(((i + x - 1) // x for i in a)))", "R = lambda : map(int, input().split())\nfor _ in range(int(input())):\n    (n, x) = R()\n    a = list(R())\n    print((sum(a) + x - 1) // x, sum(((i + x - 1) // x for i in a)))", "R = lambda : map(int, input().split())\nfor _ in range(int(input())):\n    (n, x) = R()\n    a = list(R())\n    print((sum(a) + x - 1) // x, sum(((i + x - 1) // x for i in a)))", "L = lambda : map(int, input().split())\nfor _ in range(int(input())):\n    (n, x) = L()\n    a = list(L())\n    print((sum(a) + x - 1) // x, sum(((i + x - 1) // x for i in a)))", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    w = list(map(int, input().split()))\n    s = sum(w)\n    print(s // x + (s % x > 0), sum([i // x + (i % x > 0) for i in w]))", "from sys import stdin\nimport math\nt = int(stdin.readline())\nwhile t > 0:\n    t -= 1\n    (n, x) = map(int, stdin.readline().split())\n    a = list(map(int, stdin.readline().split()))\n    s = sum(a)\n    m = math.ceil(s / x)\n    count = 0\n    r = 0\n    for y in a:\n        rr = y % x\n        r += rr\n        count += rr > 0\n    print(m, (s - r) // x + count)", "R = lambda : map(int, input().split())\nfor _ in range(int(input())):\n    (n, x) = R()\n    a = list(R())\n    print((sum(a) + x - 1) // x, sum(((i + x - 1) // x for i in a)))", "def solve():\n    (n, x) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    SU = sum(a)\n    b = [(i - 1) // x + 1 for i in a]\n    print((SU - 1) // x + 1, sum(b))\n    return\nTTTT = int(input())\nwhile TTTT:\n    solve()\n    TTTT -= 1", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    m = -(sum(a) // -x)\n    M = sum((-(ss // -x) for ss in a))\n    print(m, M)", "def answer(n, x, ary):\n    max_b = 0\n    sum = 0\n    for e in ary:\n        max_b += -(-e // x)\n        sum += e\n    min_b = -(-sum // x)\n    print(min_b, max_b)\n    return\n\ndef main():\n    t = int(input())\n    n = [0] * t\n    x = [0] * t\n    ary = [0] * t\n    for j in range(t):\n        (n[j], x[j]) = [int(i) for i in input().split()]\n        ary[j] = [int(i) for i in input().split()]\n    for j in range(t):\n        answer(n[j], x[j], ary[j])\nmain()", "import math\nfor i in range(int(input())):\n    (n, x) = list(map(int, input().split()))\n    values = list(map(int, input().split()))\n    collectedSum = math.ceil(sum(values) / x)\n    segeratedSum = sum(list(map(lambda j: math.ceil(j / x), values)))\n    print(min(segeratedSum, collectedSum), max(segeratedSum, collectedSum))", "R = lambda : map(int, input().split())\nfor _ in range(int(input())):\n    (n, x) = R()\n    a = list(R())\n    print((sum(a) + x - 1) // x, sum(((i + x - 1) // x for i in a)))", "import math\nt = int(input())\nfor a in range(t):\n    s = str(input())\n    l = list(map(int, s.split()))\n    x = l[1]\n    s1 = str(input())\n    l1 = list(map(int, s1.split()))\n    l2 = [math.ceil(num / x) for num in l1]\n    maxb = sum(l2)\n    minb = math.ceil(sum(l1) / x)\n    print(minb, maxb)", "from sys import stdin\nimport math\nt = int(stdin.readline())\nwhile t > 0:\n    t -= 1\n    (n, x) = map(int, stdin.readline().split())\n    a = list(map(int, stdin.readline().split()))\n    m = math.ceil(sum(a) / x)\n    M = 0\n    for y in a:\n        M += math.ceil(y / x)\n    print(m, M)", "for i in range(int(input())):\n    (n, x, *l) = map(int, input().split() + input().split())\n    print((sum(l) + x - 1) // x, sum([(a + x - 1) // x for a in l]))", "from math import ceil\nfor i in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = 0\n    for j in a:\n        c = c + ceil(j / x)\n    print(ceil(sum(a) / x), c)", "import math\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(f'{math.ceil(sum(arr) / x)} {sum((math.ceil(i / x) for i in arr))}')", "R = lambda : map(int, input().split())\nfor _ in range(int(input())):\n    (n, x) = R()\n    a = list(R())\n    print((sum(a) + x - 1) // x, sum(((i + x - 1) // x for i in a)))", "from math import ceil\nt = int(input())\nfor test in range(t):\n    (n, x) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    max = ceil(sum(a) / x)\n    min = ceil(sum([ceil(i / x) for i in a]))\n    print(max, min)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print((sum(a) + x - 1) // x, sum([(i + x - 1) // x for i in a]))", "import math\nn = int(input())\nfor _ in range(n):\n    (a, b) = map(int, input().split())\n    c = list(map(int, input().split()))\n    c1 = sum(map(lambda x: math.ceil(x / b), c))\n    c2 = math.ceil(sum(c) / b)\n    print(int(c2), int(c1))", "from math import ceil\nT = int(input())\nfor t in range(T):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    min_ = ceil(sum(arr) / x)\n    max_ = sum([ceil(elem / x) for elem in arr])\n    print(str(min_) + ' ' + str(max_))", "import sys\ninput = sys.stdin.readline\nfrom math import ceil\nT = int(input())\nfor t in range(T):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    min_ = ceil(sum(arr) / x)\n    max_ = sum([ceil(elem / x) for elem in arr])\n    print(str(min_) + ' ' + str(max_))", "import math\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(math.ceil(sum(a) / x), sum((math.ceil(i / x) for i in a)))", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(-(sum(arr) // -x), sum((-(k // -x) for k in arr)))", "import math\nt = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    lower = math.ceil(sum(arr) / x)\n    upper = sum((math.ceil(i / x) for i in arr))\n    print(lower, upper)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print((sum(a) + x - 1) // x, sum(((i + x - 1) // x for i in a)))", "for _ in range(0, int(input())):\n    (n, x) = map(int, input().split())\n    v = list(map(int, input().split()))\n    Ms = 0\n    for i in v:\n        Ms += 0 - -i // x\n    ms = 0 - -sum(v) // x\n    print(ms, Ms)", "from math import ceil\nt = int(input())\nwhile t:\n    t -= 1\n    ma = 0\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    for i in l:\n        ma += ceil(i / x)\n    print(ceil(sum(l) / x), ma)", "from math import ceil\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    mn = ceil(sum(a) / x)\n    mx = 0\n    for i in a:\n        t = ceil(i / x)\n        mx += t\n    print(mn, mx)", "for i in range(int(input())):\n    (n, x, *l) = map(int, input().split() + input().split())\n    print((sum(l) + x - 1) // x, sum([(a + x - 1) // x for a in l]))", "count = int(input())\nfor _ in range(count):\n    (something, x) = input().split()\n    (something, x) = (int(something), int(x))\n    list_1 = input().split()\n    list_2 = [int(i) for i in list_1]\n    su = sum(list_2)\n    d = 0\n    if su % x != 0:\n        b = su // x + 1\n    else:\n        b = su // x\n    for i in list_2:\n        if i % x != 0:\n            d += i // x + 1\n        else:\n            d += i // x\n    print(b, d)", "import math\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    sum1 = 0\n    for x in l:\n        sum1 += math.ceil(x / k)\n    sum2 = math.ceil(sum(l) / k)\n    if sum2 > sum1:\n        print(sum1, sum2)\n    else:\n        print(sum2, sum1)", "import math\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    sum1 = 0\n    for x in l:\n        sum1 += math.ceil(x / k)\n    sum2 = math.ceil(sum(l) / k)\n    if sum2 > sum1:\n        print(sum1, sum2)\n    else:\n        print(sum2, sum1)", "import math\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    x = list(map(int, input().split()))\n    y = math.ceil(sum(x) / b)\n    s = 0\n    for i in range(len(x)):\n        s += math.ceil(x[i] / b)\n    print(y, s)", "from sys import stdin, stdout\nimport math\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = 0\n    s = sum(l)\n    d = math.ceil(s / x)\n    for i in l:\n        c += math.ceil(i / x)\n    print(d, c)", "import math as m\nfor i in range(int(input())):\n    (a, b) = map(int, input().split())\n    lis = list(map(int, input().split()))\n    ans = 0\n    for i in lis:\n        ans += m.ceil(i / b)\n    an2 = m.ceil(sum(lis) / b)\n    print(an2, ans)", "import math\nt = int(input())\nfor i in range(t):\n    (n, x) = list(map(int, input().strip().split()))\n    a = list(map(int, input().strip().split()))\n    (minv, maxv) = (math.ceil(sum(a) / x), 0)\n    for j in range(n):\n        maxv += math.ceil(a[j] / x)\n    print(minv, maxv)", "from sys import stdin\nt = int(stdin.readline())\nwhile t > 0:\n    t -= 1\n    (n, x) = map(int, stdin.readline().split())\n    a = list(map(int, stdin.readline().split()))\n    count = 0\n    r = 0\n    M = 0\n    for y in a:\n        rr = y % x\n        r += rr\n        count += rr > 0\n        M += y - rr\n    M = M // x\n    print(M + r // x + (r % x > 0), M + count)", "from math import ceil\nfor p in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(ceil(sum(a) / x), end=' ')\n    s = 0\n    for i in a:\n        s += ceil(i / x)\n    print(s)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    S = sum(arr)\n    curr = ma = 0\n    for i in range(n):\n        curr += arr[i]\n        if curr % x:\n            ma += curr // x + 1\n            curr = 0\n    ma += curr // x\n    mi = S // x\n    mi += 1 if S % x else 0\n    return (mi, ma)\nfor _ in range(int(input())):\n    print(*solve())", "from math import ceil\nfor _ in range(int(input())):\n    (a, b) = [int(x) for x in input().split()]\n    nums = [int(x) for x in input().split()]\n    aa = sum([ceil(x / b) for x in nums])\n    bb = ceil(sum(nums) / b)\n    print(bb, aa)", "import math\nfor i in range(int(input())):\n    (n, x) = tuple(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    maxi = sum(list(map(lambda ele: math.ceil(ele / x), arr)))\n    mini = math.ceil(sum(arr) / x)\n    print(mini, maxi)", "import math\n\ndef solve():\n    (n, x) = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    ans = 0\n    for i in a:\n        ans += math.ceil(i / x)\n    d = sum(a)\n    print(math.ceil(d / x), ans)\nt = int(input())\nfor _ in range(t):\n    solve()", "from math import ceil\nfor _ in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    arr = [int(x) for x in input().split()]\n    sum = max = 0\n    for a in arr:\n        max += ceil(a / k)\n        sum += a\n    print(ceil(sum / k), max)", "from math import ceil\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    minn = ceil(s / x)\n    maxx = 0\n    for k in a:\n        maxx += ceil(k / x)\n    print(minn, maxx)", "import math\nt = int(input())\nfor _ in range(0, t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    mx = 0\n    for i in a:\n        mx += math.ceil(i / x)\n    mn = math.ceil(sum(a) / x)\n    print(mn, mx)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    lists = list(map(int, input().split()))\n    max1 = min1 = 0\n    for i in lists:\n        if i % x == 0:\n            max1 = max1 + i // x\n        else:\n            max1 = max1 + i // x + 1\n    s = sum(lists)\n    if s % x == 0:\n        min1 = s // x\n    else:\n        min1 = s // x + 1\n    print(min1, max1)", "from math import ceil\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = [*map(int, input().split())]\n    print(ceil(sum(l) / x), sum((ceil(m / x) for m in l)))", "import sys\nsys.setrecursionlimit(1000000)\nfrom collections import defaultdict, deque, Counter\nfrom itertools import permutations\nfrom math import sqrt, gcd, pi, factorial\nfrom functools import reduce\nfrom sys import stdin\nfrom bisect import bisect_right, bisect_left\nfrom copy import copy\n\ndef solve(n, x, a):\n    ma = sum([(a[i] + x - 1) // x for i in range(n)])\n    mi = (sum(a) + x - 1) // x\n    return (mi, ma)\nt = int(input())\nanss = [[0, 0] for _ in range(t)]\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    anss[i] = solve(n, x, a)\nfor ans in anss:\n    print(*ans)", "import math\nt = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    mini = math.ceil(sum(l) / x)\n    maxi = 0\n    for j in l:\n        maxi = maxi + math.ceil(j / x)\n    print(mini, maxi)", "from math import *\nfor _ in range(int(input())):\n    (n, x) = tuple(map(int, input().split()))\n    a = [int(i) for i in input().split()]\n    mx = 0\n    for i in a:\n        mx += ceil(i / x)\n    print(ceil(sum(a) / x), mx)", "import math\nfor o in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = 0\n    for i in a:\n        s = s + math.ceil(i / x)\n    print(math.ceil(sum(a) / x), s)", "t = int(input())\nj = 0\nm = []\np = []\nwhile j < t:\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    maxi = 0\n    mini = 0\n    for i in a:\n        if i % x == 0:\n            maxi += i // x\n        else:\n            maxi += i // x + 1\n    m.append(maxi)\n    s = sum(a)\n    if s % x == 0:\n        mini += s // x\n    else:\n        mini += s // x + 1\n    p.append(mini)\n    j += 1\nfor i in range(0, t):\n    print(p[i], m[i])", "import math\nt = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = 0\n    for i in l:\n        s += math.ceil(i / b)\n    k = math.ceil(sum(l) / b)\n    print(k, s)", "import math\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    m = 0\n    c = 0\n    a = list(map(int, input().split()))\n    for i in a:\n        m += math.ceil(i / x)\n    c = math.ceil(sum(a) / x)\n    print(min(c, m), max(c, m))", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print((sum(a) + x - 1) // x, sum([(i + x - 1) // x for i in a]))", "import math\nt = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    s = sum(arr)\n    mini = math.ceil(s / x)\n    maxi = 0\n    for i in arr:\n        maxi = maxi + math.ceil(i / x)\n    print(mini, maxi)", "import math as mt\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ans_max = 0\n    for i in l:\n        ans_max += mt.ceil(i / k)\n    print(mt.ceil(sum(l) / k), ans_max)", "a = int(input())\nimport math\nfor i in range(a):\n    (n, d) = map(int, input().split())\n    ini = list(map(int, input().split()))\n    mini = 0\n    maxi = 0\n    for j in ini:\n        mini += j\n        maxi += math.ceil(j / d)\n    print(math.ceil(mini / d), maxi)", "def val(num, x):\n    if num % x == 0:\n        return num // x\n    else:\n        return num // x + 1\nt = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    val1 = sum([val(num, x) for num in arr])\n    val2 = val(sum(arr), x)\n    print(val2, val1)", "from math import ceil\n\ndef main():\n    for _ in range(int(input())):\n        (n, x) = map(int, input().split())\n        a = [int(i) for i in input().split()]\n        s = ceil(sum(a) / x)\n        t = sum([ceil(i / x) for i in a])\n        print(f'{s} {t}')\nmain()", "cases = int(input())\nfor case in range(cases):\n    (n, x) = map(int, str(input()).strip().split(' '))\n    a = [int(i) for i in str(input()).strip().split(' ')]\n    minimum = sum(a)\n    if minimum % x == 0:\n        minimum //= x\n    else:\n        minimum //= x\n        minimum += 1\n    maximum = 0\n    for i in a:\n        if i % x == 0:\n            maximum += i // x\n        else:\n            maximum += i // x + 1\n    print(minimum, maximum)", "import math\nfor o in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = 0\n    for i in a:\n        s = s + math.ceil(i / x)\n    print(math.ceil(sum(a) / x), s)", "from math import ceil\nR = lambda : map(int, input().split())\nfor _ in range(int(input())):\n    (n, x) = R()\n    a = list(R())\n    (mn, mx) = (0, 0)\n    for i in a:\n        mn += ceil(i / x)\n        mx += i\n    print(ceil(mx / x), mn)", "from math import ceil\nfor _ in range(int(input())):\n    (n, x) = (int(x) for x in input().split())\n    a = [int(x) for x in input().split()]\n    min_beauty = ceil(sum(a) / x)\n    max_beauty = 0\n    for elem in a:\n        max_beauty += ceil(elem / x)\n    print(min_beauty, max_beauty)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    (c, p) = (0, 0)\n    for i in a:\n        if i % k == 0:\n            c += i / k\n        else:\n            c += i // k + 1\n    if s % k == 0:\n        p += s / k\n    else:\n        p += s // k + 1\n    print(int(p), int(c))", "import math\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(math.ceil(sum(arr) / x), sum((math.ceil(k / x) for k in arr)))", "def solve():\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    mi = (sum(a) + x - 1) // x\n    ma = sum([(i + x - 1) // x for i in a])\n    print(mi, ma)\n\ndef main():\n    t = 1\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "out = []\nfrom math import ceil\nfor _ in range(int(input())):\n    p = []\n    (a, b) = map(int, input().split())\n    l = list(map(int, input().split()))\n    m = 0\n    for i in l:\n        m += ceil(i / b)\n    s = sum(l)\n    mi = ceil(s / b)\n    p.append(mi)\n    p.append(m)\n    out.append(p)\nfor i in out:\n    for j in i:\n        print(j, end=' ')\n    print()", "import math\nT = int(input())\nfor _ in range(T):\n    (n, x) = map(int, input().split())\n    A = list(map(int, input().split()))\n    mn = (sum(A) + x - 1) // x\n    mx = 0\n    for a in A:\n        mx += (a + x - 1) // x\n    print(mn, mx)", "import math\n\ndef main():\n    t = int(input())\n    for x in range(0, t):\n        line1 = input().split(' ')\n        n = int(line1[0])\n        x = int(line1[1])\n        arr = list(map(int, input().split(' ')))\n        _max = 0\n        _min = 0\n        for i in range(0, n):\n            _max += math.ceil(arr[i] / x)\n            _min += arr[i]\n        _min = math.ceil(_min / x)\n        print(_min, _max)\nmain()", "import math\nT = int(input())\nfor _ in range(T):\n    (n, x) = map(int, input().split())\n    ls = list(map(int, input().split()))\n    minimum = math.ceil(sum(ls) / x)\n    maximum = 0\n    for i in ls:\n        maximum += math.ceil(i / x)\n    print(minimum, maximum)", "import math\nfor o in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = 0\n    for i in a:\n        s = s + math.ceil(i / x)\n    print(math.ceil(sum(a) / x), s)", "import math\n\ndef getint():\n    return [int(i) for i in input().split()]\n\ndef getstr():\n    return [str(i) for i in input().split()]\n\ndef solve():\n    (n, x) = getint()\n    a = getint()\n    max_ans = 0\n    min_ans = 0\n    for i in a:\n        max_ans += math.ceil(i / x)\n    min_ans = math.ceil(sum(a) / x)\n    print(min_ans, max_ans)\nfor _ in range(int(input())):\n    solve()", "from collections import Counter\nfrom math import ceil\n\ndef fun(ls, lt):\n    (n, x) = lt\n    mx = [ceil(i / x) for i in ls]\n    mx_value = sum(mx)\n    print(ceil(sum(ls) / x), mx_value)\nT = int(input())\nfor i in range(T):\n    lt = list(map(int, input().split()))\n    ls = list(map(int, input().split()))\n    fun(ls, lt)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    r1 = sum(a) // x if sum(a) % x == 0 else sum(a) // x + 1\n    r2 = sum([i // x if i % x == 0 else i // x + 1 for i in a])\n    print(r1, r2)", "import math\n\ndef ass(a, b):\n    if a != b:\n        print(f'Assertion error: {a} != {b}')\n    else:\n        print('OK')\n\ndef intline():\n    return [int(item) for item in input().split()]\n\ndef line():\n    return [item for item in input().split()]\n\ndef dump(lst):\n    for (i, item) in enumerate(lst):\n        print(i, item)\n\ndef binsearch(arr, a, b):\n    m = (a + b) // 2\n    if a >= b:\n        return a - 1 if arr[a] == 0 else a\n    return binsearch(arr, a, m - 1) if arr[m] == 0 else binsearch(arr, m + 1, b)\n\ndef f(x, arr):\n    min = math.ceil(sum(arr) / x)\n    max = sum([math.ceil(item / x) for item in arr])\n    return str(min) + ' ' + str(max)\nt = intline()[0]\nfor i in range(t):\n    (n, x) = intline()\n    print(f(x, intline()))", "from math import ceil\nfor test_var in range(int(input())):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    ansMin = ceil(sum(arr) / x)\n    ansLarge = 0\n    for m in arr:\n        ansLarge += ceil(m / x)\n    print(f'{ansMin} {ansLarge}')", "from math import ceil\nt = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    max_a = 0\n    for j in a:\n        max_a += ceil(j / x)\n    min_a = ceil(sum(a) / x)\n    print(min_a, max_a)", "import math\nn = int(input())\nfor i in range(n):\n    (x, y) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = math.ceil(sum(a) / y)\n    s = 0\n    for j in range(x):\n        s = s + math.ceil(a[j] / y)\n    print(b, s)", "import math\npi = math.acos(-1)\nT = int(input())\nfor _ in range(T):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ret1 = (sum(a) + x - 1) // x\n    ret2 = 0\n    for num in a:\n        ret2 += (num + x - 1) // x\n    print(ret1, end=' ')\n    print(ret2)", "from math import ceil\ntests = int(input())\nfor _ in range(tests):\n    (n, x) = map(int, input().split())\n    case_array = list(map(int, input().split()))\n    print(ceil(sum(case_array) / x), sum([ceil(elem / x) for elem in case_array]))", "from math import ceil\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    l = list(map(int, input().split()))\n    res2 = 0\n    res1 = ceil(sum(l) / b)\n    for i in l:\n        res2 += ceil(i / b)\n    print(res1, res2)", "import math\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    mini = math.ceil(sum(arr) / x)\n    maxi = 0\n    for elm in arr:\n        maxi += math.ceil(elm / x)\n    print(mini, maxi)", "from math import *\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in a:\n        ans += ceil(i / x)\n    print(ceil(sum(a) / x), ans)", "from math import *\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in a:\n        ans += ceil(i / x)\n    print(ceil(sum(a) / x), ans)", "import math\nt = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(math.ceil(sum(a) / x), sum([math.ceil(i / x) for i in a]))", "import math\nt = int(input())\nwhile t > 0:\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ma = 0\n    mi = math.ceil(sum(a) / x)\n    for i in range(n):\n        ma += math.ceil(a[i] / x)\n    print(mi, ma)\n    t -= 1", "import math\nfor t in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    a = math.ceil(sum(l) / x)\n    c = 0\n    s = 0\n    for i in l:\n        if i % x != 0:\n            s = s + i % x\n            c = c + 1\n    print(a, a + c - math.ceil(s / x))", "t = int(input())\nimport math\nfor tc in range(t):\n    (n, x) = [int(x) for x in input().split()]\n    a = list(map(int, input().split()))\n    max_value = 0\n    for i in range(n):\n        max_value += math.ceil(a[i] / x)\n    min_value = math.ceil(sum(a) / x)\n    print(min_value, max_value)"]