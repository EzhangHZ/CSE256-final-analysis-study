["import sys\ninput = sys.stdin.readline\nfrom collections import Counter\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    w = list(map(int, input().split()))\n    if k == 1:\n        print(n - max(Counter(w).values()))\n    else:\n        (d, m) = (set(w), 10 ** 5)\n        for i in d:\n            (a, b) = (0, 0)\n            while a < n:\n                if w[a] != i:\n                    a += k\n                    b += 1\n                else:\n                    a += 1\n            m = min(m, b)\n        print(m)", "def repaint(n, k, array):\n    s = set(array)\n    min_ans = n\n    for x in s:\n        l = 0\n        r = k + l - 1\n        ans = 0\n        while l < n:\n            if array[l] == x:\n                l += 1\n                r = k + l - 1\n            else:\n                ans += 1\n                l = l + k\n                r = k + l - 1\n        if ans < min_ans:\n            min_ans = ans\n    return min_ans\nt = int(input())\nfinal = []\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    final.append(repaint(n, k, l))\nfor _ in range(t):\n    print(final[_])", "from sys import stdin, stdout\nfrom collections import Counter\nfrom itertools import permutations\nimport bisect\nimport math\nI = lambda : map(int, stdin.readline().split())\nI1 = lambda : stdin.readline()\n\ndef solve():\n    (n, k) = I()\n    c = list(I())\n    s = list(set(c))\n    ans = 1000005\n    for x in s:\n        cnt = 0\n        i = 0\n        while i < n:\n            if c[i] != x:\n                i += k\n                cnt += 1\n            else:\n                i += 1\n        ans = min(ans, cnt)\n    print(ans)\nT = int(I1())\nfor _ in range(T):\n    solve()", "def main():\n    t = int(input())\n    for i in range(t):\n        (n, k) = map(int, input().split())\n        c = input().split()\n        dic = dict()\n        for c_i in c:\n            if dic.get(c_i) is None:\n                dic[c_i] = 1\n            else:\n                dic[c_i] += 1\n        ans = []\n        for color in dic.keys():\n            temp = color\n            cont = 0\n            j = 0\n            while j < n:\n                if c[j] != temp:\n                    cont += 1\n                    j = j + k - 1\n                j += 1\n            ans.append(cont)\n        print(min(ans))\nmain()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    c = list(map(int, input().split()))\n    s = set(c)\n    ans = 10 ** 9\n    for item in s:\n        i = 0\n        count = 0\n        while i < n:\n            if c[i] == item:\n                i += 1\n            else:\n                i += k\n                count += 1\n        ans = min(ans, count)\n    print(ans)", "I = input\nfor _ in range(int(I())):\n    (n, k) = map(int, I().split())\n    lst = list(map(int, I().split()))\n    ans = n\n    for c in set(lst):\n        (i, res) = (0, 0)\n        while i < n:\n            if lst[i] == c:\n                i += 1\n            else:\n                i += k\n                res += 1\n        ans = min(res, ans)\n    print(ans)", "import sys\n\ndef ria():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef Madara(v, k, c):\n    q = 0\n    s = 0\n    while q < len(v):\n        if v[q] == c:\n            q += 1\n            continue\n        q += k\n        s += 1\n    return s\n\ndef Holo():\n    (_, k) = map(lambda x: int(x), input().split())\n    v = ria()\n    qm = 10000000000.0\n    mc = max(v)\n    for i in range(1, mc + 1):\n        i = Madara(v, k, i)\n        if i < qm:\n            qm = i\n    return qm\nz = []\nt = int(input())\nfor i in range(t):\n    z.append(Holo())\nprint('\\n'.join(list(map(lambda x: str(x), z))))", "def fun(A, n, k):\n    c = set(A)\n    res = 10 ** 8\n    for m in c:\n        ans = 0\n        i = 0\n        while i < n:\n            if A[i] != m:\n                ans += 1\n                i += k\n            else:\n                i += 1\n        res = min(res, ans)\n    return res\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    A = list(map(int, input().split()))\n    print(fun(A, n, k))", "def solve_for_color(color, n, k, arr):\n    (answer, head) = (0, 0)\n    while head < n:\n        while arr[head] == color:\n            head += 1\n            if head >= n:\n                return answer\n        (answer, head) = (answer + 1, head + k)\n    return answer\n\ndef solve():\n    (n, k) = map(int, input().split())\n    house_paintings = list(map(int, input().split()))\n    used_colors = set(house_paintings)\n    return min(map(lambda c: solve_for_color(c, n, k, house_paintings), used_colors))\nfor _ in range(int(input())):\n    print(solve())", "import sys\nimport math\nimport random\nfrom queue import PriorityQueue as PQ\nfrom bisect import bisect_left as BSL\nfrom bisect import bisect_right as BSR\nfrom collections import OrderedDict as OD\nfrom collections import Counter\nfrom itertools import permutations\nfrom decimal import Decimal as BIGFLOAT\nmod = 1000000007\nsys.setrecursionlimit(1000000)\ntry:\n    sys.stdin = open('actext.txt', 'r')\n    OPENFILE = 1\nexcept:\n    pass\n\ndef get_ints():\n    return map(int, input().split())\n\ndef palindrome(s):\n    mid = len(s) // 2\n    for i in range(mid):\n        if s[i] != s[len(s) - i - 1]:\n            return False\n    return True\n\ndef check(i, n):\n    if 0 <= i < n:\n        return True\n    else:\n        return False\n\ndef brute(arr, n, k):\n    colorset = set(arr)\n    ans = n - 1\n    count = 0\n    temp = 0\n    for cs in colorset:\n        i = 0\n        temp = 0\n        while i < n:\n            if arr[i] != cs:\n                temp += 1\n                i += k\n            else:\n                i += 1\n        ans = min(temp, ans)\n    return ans\nt = int(input())\nfor tt in range(t):\n    (n, k) = get_ints()\n    arr = list(get_ints())\n    print(brute(arr, n, k))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 100000\n    s = set(a)\n    for i in s:\n        j = 0\n        c = 0\n        while j < n:\n            if a[j] != i:\n                c = c + 1\n                j = j + k\n            else:\n                j = j + 1\n        ans = min(ans, c)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = set(a)\n    l = []\n    for i in s:\n        j = 0\n        c = 0\n        while j < n:\n            if a[j] != i:\n                c = c + 1\n                j = j + k\n            else:\n                j = j + 1\n        l.append(c)\n    print(min(l))", "import math\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    c = n\n    a = list(set(l))\n    for i in a:\n        s = 0\n        j = 0\n        while j < n:\n            if l[j] == i:\n                j += 1\n            else:\n                j += k\n                s += 1\n        c = min(c, s)\n    print(c)", "t = int(input())\nfor _ in range(t):\n    (n, k) = [int(j) for j in input().split()]\n    a = [int(j) for j in input().split()]\n    cnt = n\n    for c in set(a):\n        cnt0 = 0\n        i = 0\n        while i < n:\n            if a[i] == c:\n                i += 1\n            else:\n                i += k\n                cnt0 += 1\n        cnt = min(cnt, cnt0)\n    print(cnt)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    set1 = set(arr)\n    ans = 1e+19\n    for i in set1:\n        temp = 0\n        j = 0\n        while j < n:\n            if arr[j] != i:\n                temp += 1\n                j += k\n            else:\n                j += 1\n        ans = min(ans, temp)\n    print(ans)", "def Madara(v, k, c):\n    q = 0\n    s = 0\n    while q < len(v):\n        if v[q] == c:\n            q += 1\n            continue\n        q += k\n        s += 1\n    return s\n\ndef Holo():\n    (_, k) = map(lambda x: int(x), input().split())\n    v = list(map(lambda x: int(x), input().split()))\n    qm = 10000000000.0\n    mc = max(v)\n    for i in range(1, mc + 1):\n        i = Madara(v, k, i)\n        if i < qm:\n            qm = i\n    return qm\nz = []\nt = int(input())\nfor i in range(t):\n    z.append(Holo())\nprint('\\n'.join(list(map(lambda x: str(x), z))))", "import sys\n\ndef rit():\n    return int(sys.stdin.readline())\n\ndef ria():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef ri():\n    return map(int, sys.stdin.readline().split())\n\ndef Madara(v, k, c):\n    (q, s) = (0, 0)\n    while q < len(v):\n        if v[q] == c:\n            q += 1\n            continue\n        q += k\n        s += 1\n    return s\n\ndef Holo():\n    (_, k) = ri()\n    v = ria()\n    qm = 10000000.0\n    mc = max(v)\n    for i in range(1, mc + 1):\n        i = Madara(v, k, i)\n        if i < qm:\n            qm = i\n    return qm\nz = []\nt = rit()\nfor i in range(t):\n    z.append(Holo())\nprint('\\n'.join(list(map(lambda x: str(x), z))))", "from sys import stdin, stdout\nimport math\nt = int(stdin.readline())\nfor _ in range(t):\n    (n, k) = map(int, stdin.readline().split())\n    arr = list(map(int, stdin.readline().split()))\n    maxq = 0\n    col = {}\n    di = {}\n    for i in arr:\n        if i in di:\n            di[i] += 1\n        else:\n            di[i] = 1\n    mindays = 10 ** 9\n    for i in di:\n        start = 0\n        end = 0\n        days = 0\n        j = 0\n        while j < n:\n            if arr[j] == i:\n                while j < n and arr[j] == i:\n                    j += 1\n            else:\n                j += k\n                days += 1\n        mindays = min(mindays, days)\n    print(mindays)", "def solution(n, k, clist):\n    total_day = 10 ** 5\n    color_candi = set()\n    for i in clist:\n        if i not in color_candi:\n            color_candi.add(i)\n    for cur_color in color_candi:\n        i = 0\n        cnt = 0\n        while i < len(clist):\n            if clist[i] == cur_color:\n                i += 1\n            else:\n                i += k\n                cnt += 1\n        if cnt < total_day:\n            total_day = cnt\n    return total_day\nt = int(input())\nfor tt in range(t):\n    (n, k) = map(int, input().split())\n    clist = list(map(int, input().split()))\n    print(solution(n, k, clist))", "t = int(input())\nd = []\nfor i in range(t):\n    (n, k) = map(int, input().split(' '))\n    a = list(map(int, input().split(' ')))\n    s = set(a)\n    cc = float('+inf')\n    for q in s:\n        j = 0\n        c = 0\n        while j < n:\n            if a[j] != q:\n                c += 1\n                j += k\n            else:\n                j += 1\n        cc = min(cc, c)\n    d.append(cc)\nfor i in d:\n    print(i)", "import sys\n\ndef rs():\n    return sys.stdin.readline().rstrip()\n\ndef ri():\n    return int(sys.stdin.readline())\n\ndef ria():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef ws(s):\n    sys.stdout.write(s + '\\n')\n\ndef wi(n):\n    sys.stdout.write(str(n) + '\\n')\n\ndef wia(a):\n    sys.stdout.write(' '.join([str(x) for x in a]) + '\\n')\nimport math\nfrom collections import defaultdict\nfor _ in range(ri()):\n    (n, k) = ria()\n    l = ria()\n    y = set(l)\n    ans = []\n    for x in y:\n        i = 0\n        cnt = 0\n        while i < n:\n            if l[i] != x:\n                cnt += 1\n                i += k\n            else:\n                i += 1\n        ans.append(cnt)\n    print(min(ans))", "import sys\nfor _ in range(int(input())):\n    (n, k) = input().split()\n    (n, k) = (int(n), int(k))\n    l = [int(i) for i in input().split()]\n    mini = sys.maxsize\n    for ans in set(l):\n        i = 0\n        day = 0\n        while i < len(l):\n            if l[i] != ans:\n                day += 1\n                i += k\n            else:\n                i += 1\n        if mini > day:\n            mini = day\n    print(mini)", "n = int(input())\nfor _ in range(n):\n    (n, k) = map(int, input().split())\n    colors = list(map(int, input().split()))\n    days = 100000\n    for color in set(colors):\n        i = 0\n        d = 0\n        while i < n:\n            if color != colors[i]:\n                d += 1\n                i += k\n            else:\n                i += 1\n        if d < days:\n            days = d\n    print(days)", "from collections import defaultdict\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    c = list(map(int, input().split()))\n    unq = set(c)\n    ans = float('inf')\n    for val in unq:\n        i = 0\n        days = 0\n        while i < n:\n            if c[i] != val:\n                days += 1\n                i += k\n                continue\n            i += 1\n        ans = min(ans, days)\n    print(ans)", "def solve():\n    (num_houses, limit) = [int(a) for a in input().split()]\n    houses = list(map(int, input().split()))\n    colors = set(houses)\n    days_req = num_houses\n    for c in colors:\n        index = 0\n        curr_days = 0\n        while True:\n            if index >= num_houses:\n                break\n            if houses[index] == c:\n                index += 1\n            else:\n                index += limit\n                curr_days += 1\n        days_req = min(curr_days, days_req)\n    print(days_req)\nnum_t = int(input())\nfor _ in range(num_t):\n    solve()", "import sys\nfrom collections import Counter\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = Counter(a).most_common()\n    ln = len(c)\n    if k >= n - 1 and len(c) != 1:\n        print(1)\n    else:\n        cntmn = 10000000000.0\n        for j in range(min(ln, n // 2 + 1)):\n            d = c[j][0]\n            cnt = i = 0\n            while i < n:\n                if a[i] != d:\n                    cnt += 1\n                    i += k\n                else:\n                    i += 1\n            cntmn = min(cntmn, cnt)\n        print(cntmn)", "def getnums():\n    return map(int, input().split())\n\ndef solve(n, k, c, x):\n    i = 0\n    d = 0\n    while i < n:\n        if c[i] != x:\n            d += 1\n            i += k\n        else:\n            i += 1\n    return d\n(t,) = getnums()\nfor i in range(t):\n    (n, k) = getnums()\n    c = list(getnums())\n    nums = set(c)\n    dmin = n\n    for x in nums:\n        d = solve(n, k, c, x)\n        if d < dmin:\n            dmin = d\n    print(dmin)", "from math import ceil\n\ndef solve(arr, n, k):\n    a = set(arr)\n    day = 100000001\n    for i in a:\n        ans = 0\n        x = 0\n        while x < n:\n            if i != arr[x]:\n                x += k\n                ans += 1\n            else:\n                x += 1\n        day = min(ans, day)\n    return day\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(solve(arr, n, k))", "ll = lambda : map(int, input().split())\nt = lambda : int(input())\nss = lambda : input()\nfor _ in range(t()):\n    (n, k) = ll()\n    a = list(ll())\n    d = list(set(a))\n    ans = 10000000\n    for mx in d:\n        c = 0\n        i = 0\n        while i < n:\n            if a[i] != mx:\n                c += 1\n                i += k\n            else:\n                i += 1\n        ans = min(ans, c)\n    print(ans)", "import math\n\ndef check(arr, x, k):\n    i = 0\n    ans = 0\n    while i < len(arr):\n        if arr[i] == x:\n            i += 1\n        else:\n            i += k\n            ans += 1\n    return ans\n\ndef proB(arr, k):\n    ans = math.inf\n    for i in range(1, max(arr) + 1):\n        ans = min(ans, check(arr, i, k))\n    return ans\nt = int(input())\nfor i in range(t):\n    (n, k) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    print(proB(arr, k))", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    m = n\n    l = set(arr)\n    for i in l:\n        (j, s) = (0, 0)\n        while j < n:\n            if arr[j] != i:\n                s += 1\n                j += k\n            else:\n                j += 1\n        m = min(m, s)\n    print(m)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if len(set(a)) == 1:\n        print(0)\n        continue\n    (f, h) = (101 * [0], 10000000000)\n    for i in range(1, max(a) + 1):\n        j = 0\n        while j < n:\n            if a[j] != i:\n                break\n            j += 1\n        (x, j) = (1, j + k)\n        while j < n:\n            if a[j] != i:\n                x += 1\n                j += k\n            else:\n                j += 1\n        if x < h:\n            h = x\n    print(h)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    final = 999999\n    s = set()\n    for i in range(n):\n        s.add(a[i])\n    for j in s:\n        i = 0\n        ans = 0\n        while i < n:\n            if a[i] != j:\n                ans += 1\n                i += k\n            else:\n                i += 1\n        final = min(final, ans)\n    print(final)", "def color(arr, k):\n    ans = []\n    for maxi in set(arr):\n        i = 0\n        coast = 0\n        while i < len(arr):\n            if arr[i] != maxi:\n                i += k\n                coast += 1\n            else:\n                i += 1\n        ans.append(coast)\n    return min(ans)\nt = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().strip().split())\n    lst = list(map(int, input().strip().split()))\n    print(color(lst, b))", "def get_nums():\n    return [int(x) for x in input().split()]\n\ndef solve(N, K, A):\n    C = set(A)\n    ans = float('inf')\n\n    def paint(c):\n        i = res = 0\n        while i < N:\n            if A[i] != c:\n                res += 1\n                i += K\n            else:\n                i += 1\n        return res\n    for c in C:\n        ans = min(ans, paint(c))\n    return ans\n(T,) = get_nums()\nfor _ in range(T):\n    (N, K) = get_nums()\n    A = get_nums()\n    print(solve(N, K, A))", "def color(arr, n, k, x):\n    res = 0\n    i = 0\n    while i < n:\n        if arr[i] != x:\n            res += 1\n            i += k\n        else:\n            i += 1\n    return res\ntc = int(input())\nfor _ in range(tc):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    cache = {}\n    for i in arr:\n        if i not in cache:\n            cache[i] = 0\n    for i in cache.keys():\n        cache[i] = color(arr, n, k, i)\n    print(min(cache.values()))", "for tt in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = set(l)\n    ans = 10 ** 9\n    for m in s:\n        i = 0\n        cnt = 0\n        while i < n:\n            if l[i] == m:\n                i += 1\n            else:\n                i += k\n                cnt += 1\n        ans = min(cnt, ans)\n    print(ans)", "import sys\nt = int(input())\nwhile t != 0:\n    (a, b) = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = set(l)\n    A = sys.maxsize\n    for i in s:\n        j = 0\n        ans = 0\n        while j < a:\n            if l[j] != i:\n                ans += 1\n                j += b\n            else:\n                j += 1\n        A = min(ans, A)\n    print(A)\n    t -= 1", "def solve(n, k, arr):\n    set_color = list(set(arr))\n    ans = 100000\n    for c in set_color:\n        effort = 0\n        i = 0\n        while i < n:\n            if arr[i] != c:\n                effort += 1\n                i += k\n            else:\n                i += 1\n        ans = min(ans, effort)\n    return ans\nt = int(input())\nwhile t > 0:\n    t -= 1\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(solve(n, k, arr))", "from collections import Counter\n\ndef solve():\n    (n, k) = map(int, input().split())\n    houses = list(map(int, input().split()))\n    result = float('inf')\n    for color in set(houses):\n        days = int()\n        counter = int()\n        while counter < n:\n            if houses[counter] == color:\n                counter += 1\n            else:\n                days += 1\n                counter += k\n        result = min(result, days)\n    print(result)\n\ndef main():\n    for _ in range(int(input())):\n        solve()\nmain()", "def find_days(a, color, k, n):\n    i = 0\n    days = 0\n    while i < n:\n        if a[i] != color:\n            days += 1\n            i += k\n        else:\n            i += 1\n    return days\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    distinct = set(a)\n    ans = 1000007\n    for color in distinct:\n        ans = min(ans, find_days(a, color, k, n))\n    print(ans)", "for _ in ' ' * int(input()):\n    (n, m) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    ans = 1000000000\n    for x in set(a):\n        i = 0\n        ans2 = 0\n        while i < n:\n            if a[i] != x:\n                ans2 += 1\n                i += m - 1\n            i += 1\n        ans = min(ans, ans2)\n    print(ans)", "from math import *\nfor t in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    street = [int(x) for x in input().split()]\n    minimum = inf\n    colors = set()\n    for color in street:\n        colors.add(color)\n    for color in colors:\n        house = 0\n        day = 0\n        while house < n:\n            if street[house] == color:\n                house = house + 1\n            else:\n                house = house + k\n                day = day + 1\n        minimum = min(day, minimum)\n    print(minimum)", "import heapq\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    x = []\n    c = max(l)\n    for i in range(1, c + 1):\n        y = 0\n        j = 0\n        while j < n:\n            if l[j] != i:\n                y += 1\n                j += k\n            else:\n                j += 1\n        heapq.heappush(x, y)\n    print(x[0])", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    mx = max(a)\n    ans = n // k + 1\n    for i in range(1, mx + 1):\n        cnt = 0\n        j = 0\n        while j < n:\n            if a[j] != i:\n                cnt += 1\n                j += k\n            else:\n                j += 1\n        ans = min(ans, cnt)\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    c = list(map(int, input().split()))\n    m = n\n    for i in range(min(c), max(c) + 1):\n        j = 0\n        cnt = 0\n        while j < n:\n            while j < n and c[j] == i:\n                j += 1\n            if j < n:\n                cnt += 1\n                j += k\n        m = min(cnt, m)\n    print(m)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    sl = list(set(l))\n    L = []\n    for i in sl:\n        co = 0\n        j = 0\n        while j in range(n):\n            if l[j] != i:\n                co += 1\n                j = j + k - 1\n            j += 1\n        L.append(co)\n    print(min(L))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = set(l)\n    c = 0\n    mn = 1000000000\n    for i in s:\n        j = 0\n        c = 0\n        while j < len(l):\n            if l[j] != i:\n                c += 1\n                j += k\n            else:\n                j += 1\n        if c < mn:\n            mn = c\n    print(mn)", "for t in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    h = [int(x) for x in input().split()]\n    keys = set(h)\n    m = n // k + 1\n    for tar in keys:\n        i = 0\n        count = 0\n        while i < n:\n            if h[i] == tar:\n                i += 1\n            else:\n                count += 1\n                i += k\n                if count > m:\n                    break\n        m = min(count, m)\n    print(m)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    sett = set()\n    for c in arr:\n        if c not in sett:\n            sett.add(c)\n    mini = n + 1\n    for d in sett:\n        u = 0\n        cnt = 0\n        while u < n:\n            if arr[u] != d:\n                cnt += 1\n                u += k\n            else:\n                u += 1\n        if mini > cnt:\n            mini = cnt\n    print(mini)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    houses = list(map(int, input().split()))\n    colors = set(houses)\n    days = n\n    for c in colors:\n        i = 0\n        d = 0\n        while True:\n            if i >= n:\n                break\n            if houses[i] == c:\n                i += 1\n            else:\n                i += k\n                d += 1\n        days = min(d, days)\n    print(days)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, k) = map(int, input().split())\n    li = list(map(int, input().split()))\n    s = set(li)\n    m = 0\n    ans = n\n    for cn in s:\n        m = n\n        cnt = 0\n        i = 0\n        while i < n:\n            if li[i] != cn:\n                i += k\n                cnt += 1\n            else:\n                i += 1\n        ans = min(ans, cnt)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    res = 1000000000\n    s = set(l)\n    for i in s:\n        j = 0\n        c = 0\n        while j < n:\n            if l[j] != i:\n                c = c + 1\n                j = j + k\n            else:\n                j = j + 1\n        res = min(res, c)\n    print(res)", "for _ in 'A' * int(input()):\n    (n, k) = map(int, input().split())\n    a = [*map(int, input().split())]\n    ans = n\n    p = max(a)\n    for i in range(1, p + 1):\n        j = 0\n        r = 0\n        while j < n:\n            if a[j] != i:\n                j += k - 1\n                r += 1\n            j += 1\n        ans = min(ans, r)\n    print(ans)", "import sys\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    li = list(map(int, input().split()))\n    tmp = 0\n    res = sys.maxsize\n    mx = max(li)\n    for i in range(1, mx + 1):\n        tmp = 0\n        cnt = 0\n        while cnt < n:\n            if li[cnt] != i:\n                tmp += 1\n                cnt += k\n            else:\n                cnt += 1\n        if tmp < res:\n            res = tmp\n    print(res)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    c = list(map(int, input().split()))\n    s = set(c)\n    ans = 999999999999999999999999999\n    for main in s:\n        boom = 0\n        i = 0\n        while i < n:\n            if c[i] != main:\n                try:\n                    for j in c[i:i + k]:\n                        if j != main:\n                            boom += 1\n                            i += k\n                            break\n                except:\n                    for j in c[i:]:\n                        if j != main:\n                            boom += 1\n                            break\n            else:\n                i += 1\n        if boom < ans:\n            ans = boom\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = list(set(l))\n    p = list()\n    for i in s:\n        c = 0\n        j = 0\n        while j < n:\n            if l[j] != i:\n                c += 1\n                j += k\n            else:\n                j += 1\n        p.append(c)\n    print(min(p))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    c = list(map(int, input().split()))\n    s = set(c)\n    day = 10 ** 5\n    for i in s:\n        m = 0\n        x = 0\n        while x < n:\n            if c[x] == i:\n                x += 1\n            else:\n                x += k\n                m += 1\n        day = min(day, m)\n    print(day)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 10 ** 5 + 2\n    for i in set(a):\n        (j, cur) = (0, 0)\n        while j < n:\n            if a[j] == i:\n                j += 1\n            else:\n                j += k\n                cur += 1\n        ans = min(ans, cur)\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = set(a)\n    m = 1000000\n    for i in b:\n        x = 0\n        j = 0\n        while j < n:\n            if i != a[j]:\n                x += 1\n                j += k\n            else:\n                j += 1\n        m = min(m, x)\n    print(m)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    c = list(map(int, input().split()))\n    s = set(c)\n    day = 10 ** 5\n    for i in s:\n        m = 0\n        x = 0\n        while x < n:\n            if c[x] == i:\n                x += 1\n            else:\n                x += k\n                m += 1\n        day = min(day, m)\n    print(day)", "import sys\n\ndef calci(mini, n, arr):\n    idx = 0\n    days = 0\n    while True:\n        if idx >= n:\n            break\n        if arr[idx] != mini:\n            days += 1\n            idx += k\n        else:\n            idx += 1\n    return days\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    temp = set(arr)\n    days = sys.maxsize\n    for i in temp:\n        x = calci(i, n, arr)\n        if x < days:\n            days = x\n    print(days)", "from array import array\nfor _ in ' ' * int(input()):\n    (n, m) = map(int, input().split())\n    a = array('i', (int(x) for x in input().split()))\n    ans = 1000000000\n    for x in set(a):\n        i = 0\n        ans2 = 0\n        while i < n:\n            if a[i] != x:\n                ans2 += 1\n                i += m - 1\n            i += 1\n        ans = min(ans, ans2)\n    print(ans)", "from math import *\nfor t in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    street = [int(x) for x in input().split()]\n    minimum = inf\n    colors = set()\n    for color in street:\n        colors.add(color)\n    for color in colors:\n        house = 0\n        day = 0\n        while house < n:\n            if street[house] == color:\n                house = house + 1\n            else:\n                house = house + k\n                day = day + 1\n        minimum = min(day, minimum)\n    print(minimum)", "import sys\ninput = lambda : sys.stdin.readline().rstrip('\\r\\n')\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    d = {}\n    a = list(map(int, input().split()))\n    ma = 0\n    mi = 0\n    ans = 1000000000000\n    for i in a:\n        d[i] = d.get(i, 0) + 1\n    t = sorted(d.items(), key=lambda kv: (kv[1], kv[0]), reverse=True)\n    for j in t:\n        mi = j[0]\n        val = 0\n        i = 0\n        while i < n:\n            if a[i] == mi:\n                while i < n and a[i] == mi:\n                    i += 1\n            if i < n:\n                val += 1\n                i += k\n        ans = min(ans, val)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    mas = list(map(int, input().split()))\n    d = {}\n    for j in mas:\n        if j in d.keys():\n            d[j] += 1\n        else:\n            d[j] = 1\n    gans = 100000\n    for s in d.keys():\n        ans = 0\n        j = 0\n        while j < n:\n            if mas[j] != s:\n                ans += 1\n                j += k\n            else:\n                j += 1\n        gans = min(ans, gans)\n    print(gans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    s = set(arr)\n    day = 10 ** 5\n    for i in s:\n        c = 0\n        x = 0\n        while x < n:\n            if arr[x] == i:\n                x += 1\n            else:\n                x += m\n                c += 1\n        day = min(day, c)\n    print(day)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    final = 999999\n    s = set()\n    for i in range(n):\n        s.add(a[i])\n    for j in s:\n        i = 0\n        ans = 0\n        while i < n:\n            if a[i] != j:\n                ans += 1\n                i += k\n            else:\n                i += 1\n        final = min(final, ans)\n    print(final)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    c = list(map(int, input().split()))\n    s = set(c)\n    day = 10 ** 5\n    for i in s:\n        m = 0\n        x = 0\n        while x < n:\n            if c[x] == i:\n                x += 1\n            else:\n                x += k\n                m += 1\n        day = min(day, m)\n    print(day)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    c = list(map(int, input().split()))\n    m = 10 ** 6\n    for each in set(c):\n        (ans, i) = (0, 0)\n        while i < n:\n            if c[i] != each:\n                ans += 1\n                i += k\n            else:\n                i += 1\n        m = min(m, ans)\n    print(m)", "def max_count(arr):\n    c = [0 for i in range(0, max(arr) + 1)]\n    for i in arr:\n        c[i] += 1\n    maxi = c[0]\n    ind = 0\n    for i in range(1, max(arr) + 1):\n        if maxi < c[i]:\n            maxi = c[i]\n            ind = i\n    return ind\nt = int(input())\nfor j in range(0, t):\n    l1 = [int(x) for x in input().split()]\n    n = l1[0]\n    k = l1[1]\n    l2 = [int(x) for x in input().split()]\n    mini = 10 ** 9\n    for c in range(1, max(l2) + 1):\n        day = 0\n        i = 0\n        while i < n:\n            if l2[i] == c:\n                i += 1\n            else:\n                day += 1\n                i = i + k\n        if mini > day:\n            mini = day\n    print(mini)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    c = list(map(int, input().split()))\n    s = set(c)\n    ans = 999999999\n    for i in s:\n        count = 0\n        j = 0\n        while j < n:\n            if c[j] == i:\n                j += 1\n                continue\n            else:\n                count += 1\n                j += k\n        ans = min(ans, count)\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    s = set(arr)\n    minDays = n\n    for v in s:\n        day = 0\n        j = 0\n        while j < n:\n            if arr[j] != v:\n                day += 1\n                j = j + k\n            else:\n                j += 1\n        if minDays > day:\n            minDays = day\n    print(minDays)", "from collections import defaultdict\nt = int(input())\nwhile t > 0:\n    t -= 1\n    (n, z) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = a.copy()\n    b = set(b)\n    b = list(b)\n    final = 10000000000.0 + 1\n    for num in b:\n        cnt = 0\n        i = 0\n        while i < n:\n            if a[i] != num:\n                cnt += 1\n                i += z\n            else:\n                i += 1\n        final = min(final, cnt)\n    print(final)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = [int(i) for i in input().split()]\n    a1 = 1000000\n    a = set(l)\n    for i in a:\n        c = 0\n        j = 0\n        while j < n:\n            if l[j] != i:\n                j += k\n                c += 1\n            else:\n                j += 1\n        a1 = min(a1, c)\n    print(a1)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    l = [int(i) for i in input().split()]\n    a1 = 1000000\n    a = set(l)\n    for i in a:\n        c = 0\n        j = 0\n        while j < n:\n            if l[j] != i:\n                j += k\n                c += 1\n            else:\n                j += 1\n        a1 = min(a1, c)\n    print(a1)", "n1 = int(input())\nfor i in range(n1):\n    l1 = list(map(int, input().split()))\n    n = l1[0]\n    k = l1[1]\n    l2 = list(map(int, input().split()))\n    s1 = set(l2)\n    l3 = []\n    for i in s1:\n        days = 0\n        j = 0\n        while j < n:\n            if l2[j] != i:\n                j += k\n                days += 1\n            else:\n                j += 1\n        l3.append(days)\n    print(min(l3))", "def Madara(v, k, c):\n    q = 0\n    s = 0\n    while q < len(v):\n        if v[q] == c:\n            q += 1\n            continue\n        q += k\n        s += 1\n    return s\n\ndef Holo():\n    (_, k) = map(lambda x: int(x), input().split())\n    v = list(map(lambda x: int(x), input().split()))\n    qm = 10000000000.0\n    mc = max(v)\n    for i in range(1, mc + 1):\n        i = Madara(v, k, i)\n        if i < qm:\n            qm = i\n    return qm\nt = int(input())\nfor i in range(t):\n    print(Holo())", "def solve(n, k, seq):\n    color = 1\n    smallest = n\n    while color <= max(seq):\n        index = 0\n        temp = 0\n        while index < n:\n            if seq[index] != color:\n                temp += 1\n                index += k\n            else:\n                index += 1\n        if temp < smallest:\n            smallest = temp\n        color += 1\n    return smallest\nt = int(input())\nfor times in range(t):\n    (n, k) = list(map(int, input().split()))\n    print(solve(n, k, list(map(int, input().split()))))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    ans = float('inf')\n    s = set(l)\n    for i in s:\n        val = i\n        c = 0\n        j = 0\n        while j < n:\n            if l[j] != val:\n                c += 1\n                j = j + k\n            else:\n                j += 1\n        ans = min(ans, c)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    l1 = list(map(int, input().split()))\n    x = max(l1)\n    l2 = []\n    for ii in set(l1):\n        x = 0\n        c = 0\n        while x < n:\n            if l1[x] == ii:\n                x += 1\n            else:\n                x += k\n                c += 1\n        l2.append(c)\n    print(min(l2))", "for y in range(int(input())):\n    (a, b) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    st = list(set(lst))\n    ans = [100001] * len(st)\n    for i in range(len(st)):\n        j = 0\n        cnt = 0\n        while j < a:\n            if lst[j] == st[i]:\n                j += 1\n            else:\n                cnt += 1\n                j += b\n        ans[i] = cnt\n    print(min(ans))", "from math import inf\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    a = set(arr)\n    rs = 9999999\n    for i in a:\n        b = 0\n        j = 0\n        while j < len(arr):\n            if arr[j] != i:\n                b += 1\n                j += k - 1\n            j += 1\n        if b < rs:\n            rs = b\n    print(rs)", "t = int(input())\nfor i in range(t):\n    ans = 10000000000\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    p = max(a)\n    for j in range(1, p + 1):\n        count = 0\n        l = 0\n        while l < n:\n            if a[l] != j:\n                count += 1\n                l += k\n            else:\n                l += 1\n        if count < ans:\n            ans = count\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    colors = list(map(int, input().split()))\n    color_kind = set(colors)\n    days = []\n    for color in color_kind:\n        i = 0\n        day = 0\n        while i < len(colors):\n            if colors[i] != color:\n                day += 1\n                i += k\n            else:\n                i += 1\n        days.append(day)\n    print(min(days))", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    color = list(map(int, input().split()))\n    max_ = float('inf')\n    c = 0\n    b = list(dict.fromkeys(color))\n    for i in b:\n        t = 0\n        c = 0\n        while c < n:\n            if color[c] != i:\n                t += 1\n                c += k\n            else:\n                c += 1\n        max_ = min(t, max_)\n    print(max_)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    a = min(l)\n    b = max(l)\n    c = 100001\n    for i in range(a, b + 1):\n        if i in l:\n            j = 0\n            m = 0\n            while j < n:\n                if l[j] != i:\n                    m += 1\n                    j += k\n                else:\n                    j += 1\n            c = min(c, m)\n    print(c)", "try:\n    inp = open('file.txt').readline\nexcept:\n    inp = input\nt = int(inp().strip())\nfor _ in range(t):\n    (n, k) = map(int, inp().strip().split(' '))\n    arr = list(map(int, inp().strip().split(' ')))\n    aset = set(arr)\n    ans = int(1000000000.0)\n    for hc in aset:\n        color = hc\n        days = 0\n        i = 0\n        while i < n:\n            if arr[i] != color:\n                kt = k\n                days += 1\n                i = i + k\n            else:\n                i += 1\n        ans = min(days, ans)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = [int(j) for j in input().split()]\n    col = []\n    for j in range(len(a)):\n        if a[j] not in col:\n            col.append(a[j])\n    mc = n\n    c = 0\n    j = 0\n    for l in col:\n        while j < n:\n            if a[j] == l:\n                j += 1\n            else:\n                j += k\n                c += 1\n        j = 0\n        if mc > c:\n            mc = c\n        c = 0\n    print(mc)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    ans = [10000000000.0] * 100\n    A = list(map(int, input().split()))\n    S = set(A)\n    for c in S:\n        ans[c - 1] = 0\n        q = 0\n        while q < n:\n            if A[q] == c:\n                q += 1\n                continue\n            else:\n                ans[c - 1] += 1\n                q += k\n    print(min(ans))", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    ls = list(map(int, input().split()))\n    KQ = 10 ** 12\n    set_value = {-1}\n    for item in ls:\n        set_value.add(item)\n    set_value.remove(-1)\n    for value in set_value:\n        cur = 0\n        kq = 0\n        while cur < n:\n            if ls[cur] != value:\n                cur += k - 1\n                kq += 1\n            cur += 1\n        KQ = min(KQ, kq)\n    print(KQ)", "t = int(input())\nresult = []\nfor _ in range(t):\n    colours = [0] * 100\n    colours_has = []\n    inp = input().split()\n    [n, k] = [int(i) for i in inp]\n    inp = input().split()\n    lst = [int(i) for i in inp]\n    res = 100000000\n    ind = 0\n    for el in lst:\n        el_ind = el - 1\n        if not el in colours_has:\n            colours_has.append(el)\n        colours[el_ind] += 1\n        ind += 1\n    best_colour = colours.index(max(colours)) + 1\n    for best_colour in colours_has:\n        curr_res = 0\n        i = 0\n        while i < n:\n            if lst[i] != best_colour:\n                i += k - 1\n                curr_res += 1\n            i += 1\n        if curr_res < res:\n            res = curr_res\n    result.append(res)\nprint(*result, sep='\\n')", "for l in range(int(input())):\n    (n, k) = map(int, input().split())\n    data = list(map(int, input().split()))\n    result = 0\n    colors = set()\n    for i in data:\n        colors.add(i)\n    mini = float('inf')\n    for i in colors:\n        j = 0\n        while j < n:\n            if data[j] == i:\n                j += 1\n            else:\n                result += 1\n                j += k\n        mini = min(result, mini)\n        result = 0\n    print(mini)", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    m = float('inf')\n    i = 0\n    for e in list(dict.fromkeys(c)):\n        ans = 0\n        i = 0\n        while i < n:\n            if c[i] != e:\n                ans += 1\n                i += k\n            else:\n                i += 1\n        m = min(ans, m)\n    print(m)", "import math\nt = int(input())\nfor _ in range(t):\n    arr = input().split()\n    n = int(arr[0])\n    k = int(arr[1])\n    c = [int(i) for i in input().split()]\n    l_ = list()\n    for i in c:\n        if not i in l_:\n            l_.append(i)\n    s_ = 9999999\n    for l in l_:\n        s = 0\n        i = 0\n        while i < len(c):\n            if c[i] != l:\n                j = i\n                i = i + k\n                s = s + 1\n            else:\n                i = i + 1\n        if s < s_:\n            s_ = s\n    print(s_)", "for test in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(dict.fromkeys(a))\n    d = float('inf')\n    i = 0\n    for z in b:\n        e = 0\n        i = 0\n        while i < n:\n            if a[i] != z:\n                e += 1\n                i += k\n            else:\n                i += 1\n        d = min(e, d)\n    print(d)", "t = int(input())\nfor _ in range(t):\n    (n, k) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    coln = max(a)\n    c = n\n    for i in range(1, coln + 1):\n        ct = 0\n        j = 0\n        while j < n:\n            if a[j] != i:\n                j += k\n                ct += 1\n            else:\n                j += 1\n        c = min(ct, c)\n    print(c)", "t = int(input())\nfor _ in range(t):\n    global_ans = float('inf')\n    (n, k) = map(int, input().split())\n    houms_colours = list(map(int, input().split()))\n    p = max(houms_colours)\n    for colour in range(1, p + 1):\n        x = 0\n        ans = 0\n        while x <= n - 1:\n            if houms_colours[x] != colour:\n                ans += 1\n                x += k\n            else:\n                x += 1\n        if ans < global_ans:\n            global_ans = ans\n    print(global_ans)", "t = int(input())\nfor i in range(t):\n    p = input().split()\n    n = int(p[0])\n    k = int(p[1])\n    c = input().split()\n    used = []\n    nums = []\n    nums.clear()\n    used.clear()\n    for j in c:\n        if j not in used:\n            color = j\n            num = 0\n            i = 0\n            while i < n:\n                if c[i] != color:\n                    num += 1\n                    i += k\n                else:\n                    i += 1\n            nums.append(num)\n            used.append(j)\n    nums.sort()\n    print(nums.pop(0))"]