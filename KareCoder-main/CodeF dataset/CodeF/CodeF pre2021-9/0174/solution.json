["n = int(input())\nb = [int(x) for x in input().split()]\na = []\nmx = 0\nfor x in b:\n    if x >= 0:\n        mx += x\n        a.append(mx)\n    else:\n        a.append(mx + x)\nprint(' '.join(map(str, a)))", "import math\n\ndef main():\n    print(case())\n\ndef case():\n    n = int(input())\n    b = list(map(int, input().split()))\n    a = []\n    a.append(abs(b[0]))\n    m = b[0]\n    for i in range(1, n):\n        a.append(m + b[i])\n        if a[-1] > m:\n            m = a[-1]\n    return ' '.join(map(str, a))\nmain()", "def solve(b):\n    a = [0] * len(b)\n    a[0] = b[0] + 0\n    a[1] = b[1] + a[0]\n    maks = max(a[1], a[0])\n    for i in range(2, len(b)):\n        maks = max(maks, a[i - 1])\n        a[i] = b[i] + maks\n    return ' '.join(map(str, a))\ninput()\nprint(solve(list(map(int, input().split(' ')))))", "n = int(input())\na = list(map(int, input().split()))\nnums = []\nb = 0\nfor i in range(len(a)):\n    d = a[i] + b\n    if d > b:\n        b = d\n    nums.append(str(d))\nprint(' '.join(nums))", "def solve(n, b):\n    a = [None] * n\n    a[0] = b[0]\n    curr_x = max(0, a[0])\n    for i in range(1, n):\n        a_i = b[i] + curr_x\n        a[i] = a_i\n        curr_x = max(curr_x, a_i)\n    return ' '.join((str(a_i) for a_i in a))\nn = int(input())\nb = list(map(int, input().split(' ')))\nprint(solve(n, b))", "n = int(input())\nb = list(map(int, input().split()))\na = [b[0]]\nindmx = 0\nfor i in range(1, n):\n    if b[i] > 0:\n        a.append(b[i] + a[indmx])\n        indmx = i\n    else:\n        a.append(b[i] + a[indmx])\nprint(' '.join(map(str, a)))", "def solve(n, b):\n    a = [None] * n\n    a[0] = b[0]\n    curr_x = max(0, a[0])\n    for i in range(1, n):\n        a_i = b[i] + curr_x\n        a[i] = a_i\n        curr_x = max(curr_x, a_i)\n    return ' '.join((str(a_i) for a_i in a))\nn = int(input())\nb = [int(x) for x in input().split()]\nprint(solve(n, b))", "n = int(input())\na = list(map(int, input().split()))\nans = [0] * n\nc = 0\nfor i in range(n):\n    ans[i] = c + a[i]\n    c = max(c, ans[i])\nprint(' '.join(map(str, ans)))", "import math\n\nclass Read:\n\n    @staticmethod\n    def string():\n        return input()\n\n    @staticmethod\n    def int():\n        return int(input())\n\n    @staticmethod\n    def list(sep=' '):\n        return input().split(sep)\n\n    @staticmethod\n    def list_int(sep=' '):\n        return list(map(int, input().split(sep)))\n\ndef solve():\n    n = Read.int()\n    b = Read.list_int()\n    m = 0\n    a = []\n    for i in b:\n        r = m + i\n        if r > m:\n            m = r\n        a.append(str(r))\n    print(' '.join(a))\nquery_count = 1\nwhile query_count:\n    query_count -= 1\n    solve()", "a = int(input())\narr = list(map(int, input().split()))\nans = []\nsmax = 0\nfor i in arr:\n    ans.append(smax + i)\n    if i > 0:\n        smax = smax + i\nprint(' '.join(map(str, ans)))", "import math\nimport sys\nimport itertools\nimport fractions\nwtf = sys.stdin.read()\nwtf = wtf.strip().split('\\n')\nn = int(wtf[0])\nB = list(map(int, wtf[1].split()))\nA = [B[0]]\nM = A[0]\nfor i in range(1, n):\n    if A[i - 1] > M:\n        M = A[i - 1]\n    A.append(B[i] + M)\nprint(' '.join(map(str, A)))", "x = 0\na = []\nn = int(input())\nb = tuple(map(int, input().split()))\nfor i in range(n):\n    a.append(x + b[i])\n    x = max([x, a[-1]])\nprint(' '.join(map(str, a)))", "t = int(input())\narr = list(map(int, input().split()))\nsu = 0\nsu_wi = 0\nls = []\nfor i in arr:\n    if i >= 0:\n        su += i\n        ls.append(su)\n    else:\n        ls.append(su + i)\nprint(' '.join(map(str, ls)))", "t = int(input())\narr = list(map(int, input().split()))\nsu = 0\nls = []\nfor i in arr:\n    if i >= 0:\n        su += i\n        ls.append(su)\n    else:\n        ls.append(su + i)\nprint(' '.join(map(str, ls)))", "n = int(input())\nbs = [int(i) for i in input().split()]\ncurrent = 0\nxs = []\nfor b in bs:\n    if b >= 0:\n        current += b\n        xs.append(current)\n    else:\n        xs.append(current + b)\nprint(' '.join(map(str, xs)))", "n = int(input())\nb = [int(i) for i in input().split()]\na = list()\nm = 0\nfor i in b:\n    a.append(str(i + m))\n    if i > 0:\n        m += i\nprint(' '.join(a))", "n = int(input())\nb = [int(x) for x in input().split()]\na = [b[0] + 0]\nm = a[0]\nfor i in range(1, n):\n    x = b[i] + m\n    a.append(x)\n    if x > m:\n        m = x\na = [str(x) for x in a]\nprint(' '.join(a))", "n = int(input())\nL = [int(a) for a in input().split(' ', n - 1)]\na = L[0]\nx = max(0, a)\nl = []\nl.append(a)\nfor i in range(1, n):\n    l.append(L[i] + x)\n    if L[i] + x > x:\n        x = L[i] + x\nprint(' '.join(map(str, l)))", "n = int(input())\na = list(map(int, input().split()))\nres = []\nm = 0\nfor i in a:\n    res.append(str(m + i))\n    if i >= 0:\n        m += i\nprint(' '.join(res))", "n = int(input())\nb = list(map(int, input().split()))\na = [b[0]]\nmaxa = b[0]\nfor i in range(1, len(b)):\n    a.append(maxa + b[i])\n    if a[-1] > maxa:\n        maxa = a[-1]\nprint(' '.join((str(i) for i in a)))", "input()\ndata = list(map(int, input().split()))\nm = 0\nfor (index, value) in enumerate(data):\n    data[index] = value + m\n    if value >= 0:\n        m = data[index]\nprint(' '.join(map(str, data)))", "n = int(input())\nb = list(map(int, input().split(' ')))\na = []\nmax = 0\nfor i in range(n):\n    next = b[i] + max\n    a.append(next)\n    if next > max:\n        max = next\na = list(map(str, a))\nprint(' '.join(a))", "def maximums(n, b):\n    a = [None] * n\n    a[0] = b[0]\n    current_x = max(0, a[0])\n    for i in range(1, n):\n        a_of_i = b[i] + current_x\n        a[i] = a_of_i\n        current_x = max(current_x, a_of_i)\n    return ' '.join((str(a_of_i) for a_of_i in a))\nn = int(input())\nb = list(map(int, input().split(' ')))\nprint(maximums(n, b))", "n = int(input())\nx = 0\na = list(map(int, input().split()))\nfor i in range(len(a)):\n    a[i] += x\n    x = max(x, a[i])\nprint(' '.join(map(str, a)))", "t = int(input())\na = list(map(int, input().split()))\nans = []\nm = 0\nfor i in range(t):\n    ans.append(m + a[i])\n    m = max(m, ans[i])\nprint(' '.join(map(str, ans)))", "n = int(input())\nb = input().split()\nb = [int(x) for x in b]\na = []\nlarge = b[0]\na.append(str(b[0]))\nfor i in range(1, len(b)):\n    val = b[i] + large\n    a.append(str(val))\n    large = max(val, large)\nprint(' '.join(a))", "def solve(n, b):\n    a = [0] * n\n    a[0] = b[0]\n    mx = a[0]\n    for i in range(1, n):\n        a[i] = b[i] + mx\n        mx = max(a[i], mx)\n    return ' '.join(map(str, a))\n\ndef main():\n    n = int(input())\n    b = [int(i) for i in input().split()]\n    print(solve(n, b))\nmain()", "def sol(n, aa):\n    m = 0\n    for a in aa:\n        yield (a + m)\n        m = max(m, a + m)\n\ndef main():\n    n = int(input())\n    aa = [int(x) for x in input().split()]\n    print(' '.join((str(x) for x in sol(n, aa))))\nmain()", "n = int(input())\na = []\nb = list(map(int, input().split()))\na.append(b[0] + 0)\nmx = a[0]\nfor j in range(1, n):\n    a.append(mx + b[j])\n    if a[-1] > mx:\n        mx = a[-1]\nprint(' '.join(list(map(str, a))))", "n = int(input())\nb = list(map(int, input().split(' ')))\na = [b[0]]\nm = 0\nfor x in b[1:]:\n    if m < a[-1]:\n        m = a[-1]\n    a += [x + m]\nprint(' '.join([str(ai) for ai in a]))", "n = int(input())\nb = list(map(int, input().split()))\nsolution = [0] * n\nx = 0\nfor i in range(n):\n    solution[i] = b[i] + x\n    if solution[i] > x:\n        x = solution[i]\nprint(' '.join(map(str, solution)))", "n = int(input())\ngiv = list(map(int, input().split()))\ndo = []\nmax = 0\nfor i in range(len(giv)):\n    a = giv[i] + max\n    if a > max:\n        max = a\n    do.append(str(a))\nprint(' '.join(do))", "n = int(input())\na = [int(i) for i in input().split()]\nc = 0\nz = []\nfor i in range(n):\n    z.append(c + a[i])\n    if z[i] > c:\n        c = z[i]\nprint(' '.join(map(str, z)))", "n = int(input())\nb = list(map(int, input().split()))\na = []\nc = 0\nfor i in range(n):\n    if b[i] < 0:\n        s = c + b[i]\n        a += [s]\n    else:\n        s = c + b[i]\n        a += [s]\n        c = s\nprint(' '.join(map(str, a)))", "n = int(input())\nb = [int(x) for x in input().split()]\nm = 0\na = [b[0]] + [0] * (n - 1)\nfor i in range(n - 1):\n    if a[i] > m:\n        m = a[i]\n    a[i + 1] = b[i + 1] + m\nprint(' '.join((str(x) for x in a)))", "n = int(input())\nw = [int(k) for k in input().split()]\nmx = 0\nres = []\nfor j in w:\n    res.append(j + mx)\n    mx = max(mx, res[-1])\nprint(' '.join([str(k) for k in res]))", "n = int(input())\na = list(map(int, input().split()))\nx = 0\nfor i in range(0, n):\n    a[i] += x\n    x = max(x, a[i])\nprint(' '.join(map(str, a)))", "n = int(input())\nln = list(map(int, input().split(' ')))\nout = []\nout.append(ln[0])\nmaxsumm = out[0]\nfor i in range(1, n):\n    res = maxsumm + ln[i]\n    out.append(res)\n    if res >= maxsumm:\n        maxsumm = res\nprint(' '.join(map(str, out)))", "n = int(input())\nb = list(map(int, input().split()))\nmx = 0\na = []\nfor item in b:\n    s = item + mx\n    mx = max(mx, s)\n    a.append(str(s))\nprint(' '.join(a))", "def main():\n    n = int(input())\n    b = list(map(int, input().split()))\n    a = [0] * len(b)\n    x_i = b[0]\n    a[0] = x_i\n    for (i, b_i) in enumerate(b[1:]):\n        a_i = b_i + x_i\n        x_i = max(a_i, x_i)\n        a[i + 1] = a_i\n    print(' '.join(map(str, a)))\nmain()", "n = int(input())\nb = list(map(int, input().split()))\na = [b[0]]\nx = b[0]\nfor i in range(1, len(b)):\n    a += [b[i] + x]\n    if a[i] > x:\n        x = a[i]\nprint(' '.join(map(str, a)))", "t = int(input())\nl = [int(x) for x in input().split()]\nk = []\nk.append(str(l[0]))\nsum1 = 0\nsum1 = l[0]\nfor i in range(1, t):\n    if l[i] > 0:\n        sum1 = sum1 + l[i]\n        k.append(str(sum1))\n    else:\n        k.append(str(sum1 + l[i]))\nprint(' '.join(k))", "b_len = int(input())\nb = [int(i) for i in input().split(' ')]\na1 = 0 + b[0]\na = [a1]\nm = 0\nfor i in range(1, b_len):\n    current_x = a[-1] if a[-1] >= m else m\n    m = current_x\n    a.append(b[i] + current_x)\nprint(' '.join([str(j) for j in a]))", "n = int(input())\nb = input().split()\nb = list(map(int, b))\nsum = 0\nfor i in range(n):\n    b[i] = b[i] + sum\n    sum = max(b[i], sum)\nprint(' '.join(map(str, b)))", "import collections\nimport math\n\ndef sort(key):\n    return key[1]\n\ndef pack(key):\n    return key[0]\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef solve(lst):\n    mx = lst[0]\n    ans = []\n    m = 0\n    ans.append(lst[0])\n    for i in range(1, len(lst)):\n        ans.append(mx + lst[i])\n        mx = max(mx + lst[i], mx)\n    ans = [str(i) for i in ans]\n    return ' '.join(ans)\nk = int(input())\nlst = list(map(int, input().split()))\nprint(solve(lst))", "n = int(input())\nb = list(map(int, input().split()))\na = [''] * n\nmaxim = 0\nfor i in range(n):\n    a[i] = str(maxim + b[i])\n    if b[i] > 0:\n        maxim += b[i]\nprint(' '.join(a))", "n = int(input())\nb_arr = list(map(int, input().split()))\na_arr = [b_arr[0]]\nm = b_arr[0]\nfor i in range(1, n):\n    a = b_arr[i] + m\n    a_arr.append(a)\n    if a > m:\n        m = a\nprint(*a_arr)", "n = int(input())\narray = list(map(int, input().split()))\nresult = []\nsums = 0\nmaxi = 0\nfor x in array:\n    sums = maxi + x\n    result.append(sums)\n    if sums > maxi:\n        maxi = sums\nprint(*result)", "from math import ceil, gcd\nfrom math import factorial as fact, comb as ncr\nfrom math import sqrt\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom array import array\nfrom collections import Counter as ctr\nfrom collections import deque as dq\n\ndef li():\n    return list(map(int, input().split()))\n\ndef arr(a):\n    return array('i', a)\n\ndef solve():\n    n = int(input())\n    b = li()\n    a = [0] * n\n    m = 0\n    for i in range(n):\n        a[i] = m + b[i]\n        m = max(m, a[i])\n    print(*a)\nsolve()", "n = int(input())\nw = list(map(int, input().split()))\nd = 0\ne = 0\nfor i in range(n):\n    if e >= d:\n        d = e\n    e = w[i] + d\n    print(e, end=' ')", "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in a:\n    print(s + i, end=' ')\n    if i > 0:\n        s += i", "def main():\n    n = int(input())\n    b_arr = [int(b) for b in input().split()]\n    a_prev = 0\n    for i in range(n):\n        if i == 0:\n            print(b_arr[i], end=' ')\n            a_prev = b_arr[i]\n            continue\n        a = a_prev + b_arr[i]\n        if a > a_prev:\n            a_prev = a\n        print(a, end=' ')\n    print('')\nmain()", "import io\nimport os\nimport sys\nimport math\nimport heapq\nimport bisect\nimport random\nimport string\nimport decimal\nimport functools\nimport fractions\nimport itertools\nimport collections\nfrom sys import stdin, stdout\nfrom io import BytesIO, IOBase\nfrom math import gcd, floor, sqrt, log, factorial\nfrom bisect import bisect_left, bisect_right\nfrom collections import deque, Counter, defaultdict, OrderedDict, namedtuple, UserDict, UserList, UserString\nMOD = 1000000007\nsys.setrecursionlimit(100000000)\nBUFSIZE = 8192\nn = int(input())\narr = [int(i) for i in input().split()]\nres = []\ns = 0\nfor i in arr:\n    if i >= 0:\n        s += i\n        res.append(s)\n    else:\n        c = s + i\n        res.append(c)\nprint(*res)", "input()\nk = list(map(int, input().split()))\nma = k[0]\nprint(k[0], end=' ')\nfor x in k[1:]:\n    j = x + ma\n    print(j, end=' ')\n    if j > ma:\n        ma = j", "n = int(input())\nb = list(map(int, input().split()))\na = [0] * n\na[0] = b[0]\nx = [0] * n\nfor i in range(1, n):\n    x[i] = max(x[i - 1], a[i - 1])\n    a[i] = b[i] + x[i]\nprint(' '.join(map(str, a)))", "n = int(input())\nl = list(map(int, input().split()))\na = [str(l[0])]\nx = [0]\nx0 = 0\nfor i in range(1, n):\n    if int(a[i - 1]) > x0:\n        x0 = int(a[i - 1])\n    a.append(str(l[i] + x0))\nprint(' '.join(a))", "def maximums(arr):\n    a = [arr[0]]\n    m = arr[0]\n    for i in arr[1:]:\n        ele = i + m\n        if ele > m:\n            m = ele\n        a.append(ele)\n    return a\nn = int(input())\narr = list(map(int, input().split()))\nresult = maximums(arr)\nprint(*result, sep=' ')", "n = int(input())\na = list(map(int, input().split()))\nsum = 0\nans = []\nfor i in a:\n    ans.append(sum + i)\n    sum += max(0, i)\nprint(*ans)", "n = int(input())\narr = list(map(int, input().split()))\nmaxCurr = arr[0]\nans = [maxCurr]\nfor i in range(1, n):\n    a = arr[i] + maxCurr\n    ans.append(a)\n    maxCurr = max(maxCurr, a)\nprint(*ans)", "def solve():\n    n = int(input())\n    b = [int(i) for i in input().split()]\n    a = [0] * n\n    a[0] = b[0]\n    d = b[0]\n    for i in range(1, len(b)):\n        a[i] = b[i] + d\n        d = max(a[i], d)\n    print(*a)\nsolve()", "def main():\n    from sys import stdin, stdout\n    n = int(stdin.readline())\n    b = list(map(int, stdin.readline().split()))\n    a = [b[0]]\n    maxim = b[0]\n    for i in range(1, n):\n        temp = b[i] + maxim\n        a.append(temp)\n        maxim = max(maxim, a[-1])\n    for i in a:\n        stdout.write(str(i) + ' ')\n    stdout.write('\\n')\nmain()", "size = int(input())\nb_list = [int(a) for a in input().split(' ')]\na_list = []\nx_list = [0]\na_list.append(b_list[0] + x_list[0])\nfor i in range(0, size - 1):\n    x_list.append(max(a_list[i], x_list[i]))\n    a_list.append(b_list[i + 1] + x_list[i + 1])\nprint(' '.join([str(a) for a in a_list]))", "try:\n    n = int(input())\n    li = [int(x) for x in input().split()]\n    a = []\n    m = 0\n    for c in li:\n        print(c + m, end=' ')\n        if c > 0:\n            m += c\nexcept EOFError:\n    pass", "tc = 1\nimport math\nwhile tc:\n    tc -= 1\n    n = int(input())\n    ls = list(map(int, input().split()))\n    op = []\n    m = 0\n    for item in ls:\n        op.append(item + m)\n        if m < op[-1]:\n            m = op[-1]\n    print(*op)", "n = int(input())\na = list(map(int, input().split()))\nb = []\ns = 0\nfor i in a:\n    b.append(s + i)\n    if s + i > s:\n        s = s + i\nprint(*b)", "def zad_codeforces(x, y):\n    k = 0\n    p = 0\n    operations = 0\n    diff = y - x\n    while True:\n        if x * pow(10, p + 1) >= y:\n            break\n        p += 1\n    while k != y:\n        if diff >= x:\n            k += x * pow(10, p)\n            diff = y - k\n            if p > 0 and diff < x * pow(10, p):\n                p -= 1\n            operations += 1\n        else:\n            operations += diff\n            k += diff\n    return operations\n\ndef find_max_given_range(a, n):\n    max_val = 0\n    for i in range(0, n):\n        if a[i] >= max_val:\n            max_val = a[i]\n    return max_val\n\ndef alicia_problem(b, n):\n    a = []\n    i = 0\n    current_max = 0\n    while i != n:\n        element = b[i] + current_max\n        a.append(element)\n        if b[i] > 0:\n            current_max = a[-1]\n        i += 1\n    for i in a:\n        print(i, end=' ')\nreq_size = int(input().strip())\ndata = [int(i) for i in input().strip().split()[:req_size]]\nalicia_problem(data, req_size)", "n = int(input())\na = list(map(int, input().split()))\nx = 0\nfor i in range(n):\n    a[i] += x\n    x = max(x, a[i])\nprint(*a)", "n = int(input())\nb = list(map(int, input().split()))\na = [0] * n\na[0] = b[0]\nmm = a[0]\nfor i in range(1, n):\n    mm = max(mm, a[i - 1])\n    a[i] = b[i] + mm\nprint(*a)", "n = int(input())\nb = list(map(int, input().split()))\naMax = 0\nfor i in range(len(b)):\n    x = aMax\n    a = x + b[i]\n    if a > aMax:\n        aMax = a\n    print(a, end=' ')", "n = int(input())\nB = [int(s) for s in input().split()]\nM = [0] * n\nA = [0] * n\nA[0] = B[0]\nfor i in range(0, n - 1):\n    M[i + 1] = max(M[i], A[i])\n    A[i + 1] = B[i + 1] + M[i + 1]\nprint(' '.join((str(num) for num in A)))", "from sys import exit\n\ndef i():\n    return input()\n\ndef ii():\n    return int(input())\n\ndef iis():\n    return map(int, input().split())\n\ndef liis():\n    return list(map(int, input().split()))\n\ndef print_array(a):\n    print(' '.join(map(str, a)))\nn = ii()\nb = liis()\nmaxi = [0]\na = [b[0]]\nmaxi_a = a[0]\nfor i in range(len(b) - 1):\n    maxi_a = max(maxi_a, a[i])\n    maxi.append(maxi_a)\n    a.append(b[i + 1] + maxi[i + 1])\nprint_array(a)", "def solve(arr):\n    M = 0\n    for x in arr:\n        yield (x + M)\n        if x > 0:\n            M += x\ninput()\nprint(*solve(list(map(int, input().split()))))", "listlength = input()\nlistlength = int(listlength)\nx = input().split(' ')\nx = list(map(int, x))\na = []\n\ndef build_list(a):\n    amax = 0\n    current = 0\n    for i in range(listlength):\n        current = amax + x[i]\n        a.append(current)\n        if current > amax:\n            amax = current\n    return a\nprint(*build_list(a), sep=' ')", "def main():\n    m = 0\n    input()\n    for i in input().split(' '):\n        result = m + int(i)\n        if result > m:\n            m = result\n        print(result, end=' ')\nmain()", "n = int(input())\nb = list(map(int, input().split()))\na = [b[0], b[1] + b[0]]\nma = max(a)\nfor x in range(2, n):\n    num = b[x] + ma\n    a.append(num)\n    if num > ma:\n        ma = num\nprint(*a)", "n = int(input())\narr = list(map(int, input().split()))\ncurr_mx = 0\nfor i in range(n):\n    arr[i] += curr_mx\n    if arr[i] > curr_mx:\n        curr_mx = arr[i]\nprint(*arr)", "n = int(input())\nnums = list(map(int, input().split()))\na = []\nmaxi = nums[0]\na.append(maxi)\nfor i in range(1, n):\n    t = nums[i] + maxi\n    if t > maxi:\n        maxi = t\n    a.append(t)\nprint(*a)", "n = int(input())\nar = list(map(int, input().split()))[:n]\nk = 0\nfor i in range(0, n):\n    ar[i] = k + ar[i]\n    k = max(k, ar[i])\nprint(*ar)", "n = int(input())\na = list(map(int, input().split()))\nma = 0\nfor i in range(n):\n    a[i] = a[i] + ma\n    ma = max(ma, a[i])\nprint(*a)", "a = int(input())\nb = list(map(int, input().split()))\nx = []\nr = 0\nfor i in range(len(b)):\n    s = b[i] + r\n    x.append(s)\n    r = max(r, s)\nprint(*x)", "n = int(input())\na = list(map(int, input().split()))\nans = 0\nansa = 0\nfor i in range(n):\n    if a[i] > 0:\n        ans += a[i]\n        print(ans, end=' ')\n    else:\n        ans += a[i]\n        print(ans, end=' ')\n        ans -= a[i]", "n = int(input())\narr = list(map(int, input().split()))\nres = [arr[0]]\nmax_ = arr[0]\nfor i in range(1, n):\n    res.append(max_ + arr[i])\n    max_ = max(max_, max_ + arr[i])\nprint(*res)", "n = int(input())\nb = list(map(int, input().split()))\nx = 0\na = 0\nprint(b[0], end=' ')\na = b[0]\nfor i in range(1, len(b)):\n    x = max(x, a)\n    a = b[i] + x\n    print(a, end=' ')", "n = int(input())\nbrr = [int(x) for x in input().split()]\nmax = 0\nfor b in brr:\n    a = b + max\n    print(f'{a} ', end='')\n    if a > max:\n        max = a\nprint()", "n = int(input())\nb = list(map(int, input().split()))\na = []\nm = b[0]\na.append(b[0])\nfor i in range(1, n):\n    a.append(b[i] + m)\n    m = max(m, a[i])\nprint(*a)", "def ma(arr):\n    max1 = arr[0]\n    result = [arr[0]]\n    for r in arr[1:]:\n        result.append(r + max1)\n        if r + max1 > max1:\n            max1 = r + max1\n    return result\na = int(input())\narr = list(map(int, input().rstrip().split()))\nm = ma(arr)\nprint(*m)", "def main():\n    m = 0\n    input()\n    for i in input().split(' '):\n        result = m + int(i)\n        if result > m:\n            m = result\n        print(result, end=' ')\nmain()", "def main():\n    n = int(input())\n    b = list(map(int, input().split()))\n    m = 0\n    for i in range(0, n):\n        a = b[i] + m\n        print(a, end=' ')\n        if a > m:\n            m = a\n    print()\nmain()", "lenth = int(input())\nnum_list = list(map(int, input().split(' ')))\nre = []\nMax = 0\nfor i in num_list:\n    tem = Max + i\n    if tem > Max:\n        Max = tem\n    re.append(tem)\nfor i in re:\n    print(i, end=' ')", "n = int(input())\narr = list(map(int, input().split()))\na = 0\nfor i in arr:\n    print(i + a, end=' ')\n    a = max(i + a, a)", "n = int(input())\nb = list(map(int, input().split()))\na = []\ns = 0\nfor i in range(0, n):\n    a.append(s + b[i])\n    s = max(s, s + b[i])\nprint(*a)", "def answer(b, p):\n    a = [0 for i in range(p)]\n    a[0] = b[0]\n    a[1] = b[1] + a[0]\n    q = [0 for i in range(p)]\n    q[0] = str(a[0])\n    q[1] = str(a[1])\n    maxx = [0 for i in range(p)]\n    maxx[1] = a[0]\n    for i in range(2, p):\n        maxx[i] = max(maxx[i - 1], a[i - 1])\n        a[i] = b[i] + maxx[i]\n        q[i] = str(a[i])\n    return q\np = int(input())\ns = input()\ns = s.split()\nb = []\nfor i in s:\n    b.append(int(i))\na = answer(b, p)\nz = ' '.join(a)\nprint(z)", "n = int(input())\na = list(map(int, input().split(' ')))\nsum = []\ntemp = 0\nfor i in a:\n    if i >= 0:\n        temp += i\n        sum.append(temp)\n    else:\n        sum.append(temp + i)\nprint(*sum)", "n = int(input())\nmax = 0\nfor i in list(map(int, input().split())):\n    if i >= 0:\n        max = max + i\n        print(max, end=' ')\n    else:\n        print(max + i, end=' ')", "def main():\n    m = 0\n    input()\n    for i in input().split(' '):\n        result = m + int(i)\n        if result > m:\n            m = result\n        print(result, end=' ')\nmain()", "def main():\n    m = 0\n    input()\n    for i in input().split(' '):\n        result = m + int(i)\n        if result > m:\n            m = result\n        print(result, end=' ')\nmain()", "n = int(input())\nb = [int(x) for x in input().split()]\na = [0] * n\na[0] = b[0]\nss = a[0]\nfor i in range(1, n):\n    a[i] = b[i] + ss\n    if a[i] > ss:\n        ss = a[i]\nprint(*a)"]