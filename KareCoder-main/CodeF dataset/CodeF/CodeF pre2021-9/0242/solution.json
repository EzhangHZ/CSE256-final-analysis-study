["t = int(input())\nfor i in range(t):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    answer = 'NO'\n    first = set()\n    second = set()\n    for i in range(n):\n        if not nums[i] in first:\n            first.add(nums[i])\n        else:\n            if nums[i] != nums[i - 1] or nums[i] in second:\n                answer = 'YES'\n                break\n            second.add(nums[i])\n    print(answer)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    hmap = {}\n    flag = 0\n    for i in range(n):\n        if arr[i] in hmap:\n            if i - hmap[arr[i]] + 1 >= 3:\n                print('YES')\n                flag = 1\n                break\n        else:\n            hmap[arr[i]] = i\n    if not flag:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n < 3:\n        print('NO')\n    else:\n        freq = {}\n        m = 1\n        for x in a:\n            if x in freq:\n                freq[x] += 1\n            else:\n                freq[x] = 1\n            if m < freq[x]:\n                m = freq[x]\n        if m == 1:\n            print('NO')\n        elif m > 2:\n            print('YES')\n        else:\n            x = 0\n            while x < n:\n                if freq[a[x]] == 2:\n                    if a[x] != a[x + 1]:\n                        print('YES')\n                        break\n                    else:\n                        x += 1\n                x += 1\n            else:\n                print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = input().split()\n    lst = [int(i) for i in lst]\n    dct = {}\n    for i in range(n):\n        if dct.get(lst[i], -1) == -1:\n            dct[lst[i]] = i\n        elif i - dct[lst[i]] > 1:\n            print('YES')\n            break\n    else:\n        print('NO')", "import sys\n\ndef solve():\n    sys.stdin.readline().rstrip('\\n')\n    arr = sys.stdin.readline().rstrip('\\n').split(' ')\n    arr = [int(_) for _ in arr]\n    left = [0] * len(arr)\n    right = [0] * len(arr)\n    m = {}\n    for i in range(len(arr)):\n        if arr[i] in m:\n            left[i] = m[arr[i]]\n            m[arr[i]] += 1\n        else:\n            m[arr[i]] = 1\n    m.clear()\n    for i in range(len(arr) - 1, -1, -1):\n        if arr[i] in m:\n            right[i] = m[arr[i]]\n            m[arr[i]] += 1\n        else:\n            m[arr[i]] = 1\n    for i in range(len(arr)):\n        if left[i] > 0 and right[i] > 0:\n            print('YES')\n            return\n        if left[i] > 0:\n            if arr[i] != arr[i - 1]:\n                print('YES')\n                return\n        if right[i] > 0:\n            if arr[i] != arr[i + 1]:\n                print('YES')\n                return\n    print('NO')\n    return\nT = int(sys.stdin.readline().rstrip('\\n'))\nfor i in range(T):\n    solve()", "def cal(v):\n    d = {}\n    for (i, x) in enumerate(v):\n        if x in d:\n            if i - d[x] > 1:\n                return True\n        else:\n            d[x] = i\n    return False\nfor _ in range(0, int(input())):\n    n = int(input())\n    v = map(int, input().split())\n    print(['NO', 'YES'][cal(v)])", "test = int(input())\nfor _ in range(test):\n    n = int(input())\n    alist = [int(i) for i in input().split()]\n    count = {}\n    ind = {}\n    for (i, value) in enumerate(alist):\n        if value in count:\n            count[value] += 1\n            ind[value].append(i)\n        else:\n            count[value] = 1\n            ind[value] = [i]\n    blist = sorted(count.items(), key=lambda x: x[-1])\n    ans = 'NO'\n    for (key, value) in blist:\n        if value <= 1:\n            continue\n        if ind[key][-1] - ind[key][0] > 1:\n            ans = 'YES'\n            break\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = {}\n    e = {}\n    for (i, x) in enumerate(a):\n        e[x] = i\n    for i in range(n - 1, -1, -1):\n        b[a[i]] = i\n    for x in b:\n        if e[x] - b[x] + 1 >= 3:\n            print('YES')\n            break\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = list(map(int, input().split()))\n    isPalindrome = False\n    visited = {}\n    for i in range(n):\n        char = s[i]\n        if char not in visited:\n            visited[char] = i\n        elif i - visited[char] > 1:\n            isPalindrome = True\n    if isPalindrome:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nans = []\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    sl = [[] for i in range(max(a))]\n    for i in range(len(a)):\n        if sl[a[i] - 1] != [] and i - sl[a[i] - 1][-1] >= 2 or len(sl[a[i] - 1]) == 2:\n            ans.append('YES')\n            break\n        else:\n            sl[a[i] - 1].append(i)\n    if len(ans) != _ + 1:\n        ans.append('NO')\nfor i in ans:\n    print(i)", "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    ind = {}\n    for i in range(n):\n        if s[i] in ind:\n            ind[s[i]].append(i)\n        else:\n            ind[s[i]] = [i]\n    for i in ind:\n        if ind[i][-1] - ind[i][0] > 1:\n            print('YES')\n            break\n    else:\n        print('NO')", "from collections import defaultdict\nt = int(input())\nfor j in range(t):\n    matriz = defaultdict(list)\n    n = int(input())\n    lista = list(map(int, input().split()))\n    cont = 0\n    for item in lista:\n        matriz[item].append(cont)\n        cont += 1\n    ans = False\n    for i in range(1, n + 1):\n        if len(matriz[i]) > 2:\n            ans = True\n        elif len(matriz[i]) == 2:\n            if abs(matriz[i][1] - matriz[i][0]) > 1:\n                ans = True\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    pos = [-1] * (n + 1)\n    f = False\n    for i in range(n):\n        if pos[arr[i]] == -1:\n            pos[arr[i]] = i\n        elif pos[arr[i]] <= i - 2:\n            f = True\n            break\n    print('YES' if f else 'NO')", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    num_list = []\n    for (i, j) in enumerate(a):\n        num_list.append((j, i))\n    num_list.sort()\n    a.sort()\n    for i in range(1, n - 1):\n        if a[i - 1] == a[i] == a[i + 1]:\n            print('YES')\n            break\n    else:\n        for i in range(len(num_list) - 1):\n            if num_list[i][0] == num_list[i + 1][0] and num_list[i + 1][1] - num_list[i][1] > 1:\n                print('YES')\n                break\n        else:\n            print('NO')", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    num_list = []\n    for (i, j) in enumerate(a):\n        num_list.append((j, i))\n    num_list.sort()\n    a.sort()\n    for i in range(1, n - 1):\n        if a[i - 1] == a[i] == a[i + 1]:\n            print('YES')\n            break\n    else:\n        for i in range(len(num_list) - 1):\n            if num_list[i][0] == num_list[i + 1][0] and num_list[i + 1][1] - num_list[i][1] > 1:\n                print('YES')\n                break\n        else:\n            print('NO')", "from collections import defaultdict\ntest_cases = int(input())\n\ndef handle():\n    input()\n    values = input().split(' ')\n    values_and_indexes = defaultdict(list)\n    for (index, value) in enumerate(values):\n        values_and_indexes[value].append(index)\n        if len(values_and_indexes[value]) == 3:\n            return 'YES'\n    for value in values_and_indexes:\n        if values_and_indexes[value][-1] - values_and_indexes[value][0] > 1:\n            return 'YES'\n    return 'NO'\nfor _ in range(test_cases):\n    print(handle())", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    seen = {}\n    flag = False\n    for i in range(n):\n        if arr[i] in seen and i - seen[arr[i]] > 1:\n            print('YES')\n            flag = True\n            break\n        elif arr[i] not in seen:\n            seen[arr[i]] = i\n    if not flag:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    nums = list(input().split())\n    found = False\n    contains = set()\n    for i in range(1, n):\n        if nums[i] in contains:\n            found = True\n        contains.add(nums[i - 1])\n    if found:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    f = 0\n    arr1 = []\n    for i in range(n):\n        arr1.append((arr[i], i))\n    arr1 = sorted(arr1)\n    for i in range(n - 1):\n        if arr1[i][0] == arr1[i + 1][0] and arr1[i + 1][1] - arr1[i][1] > 1:\n            f = 1\n            break\n        if i < n - 2:\n            if arr1[i][0] == arr1[i + 1][0] and arr1[i + 1][0] == arr1[i + 2][0]:\n                f = 1\n                break\n    if f > 0:\n        print('YES')\n    else:\n        print('NO')\n    t = t - 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    orig_arr = list(map(int, input().split()))\n    hash_table = {}\n    palin = False\n    for j in range(n):\n        if orig_arr[j] not in hash_table:\n            hash_table[orig_arr[j]] = j\n        elif j - hash_table[orig_arr[j]] > 1:\n            palin = True\n            break\n        else:\n            continue\n    if not palin:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    orig_arr = list(map(int, input().split()))\n    hash_table = {}\n    hash_table[orig_arr[0]] = 0\n    palin = False\n    for j in range(2, n):\n        if orig_arr[j] in hash_table:\n            print('YES')\n            break\n        else:\n            hash_table[orig_arr[j - 1]] = j - 1\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = set([a[0]])\n    for i in range(2, n):\n        if a[i] in s:\n            print('YES')\n            break\n        else:\n            s.add(a[i - 1])\n    else:\n        print('NO')", "T = int(input())\nans = ''\nfor _ in range(T):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    s = [0 for i in range(n)]\n    for i in range(n):\n        s[a[i] - 1] += 1\n        if s[a[i] - 1] == 3:\n            ans += 'YES'\n            break\n        elif s[a[i] - 1] == 2 and a[i] != a[i - 1]:\n            ans += 'YES'\n            break\n        elif i == n - 1:\n            ans += 'NO'\n    ans += '\\n'\nprint(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    shan = [-1] * (n + 1)\n    siri = 0\n    for i in range(n):\n        if shan[l[i]] == -1:\n            shan[l[i]] = i\n        elif shan[l[i]] + 1 != i:\n            siri = 1\n            break\n    if siri:\n        print('YES')\n    else:\n        print('NO')", "def main(n, a):\n    len = max(a) + 1\n    counts = [0] * len\n    dups = [0] * len\n    counts[a[0]] += 1\n    for i in range(1, n):\n        counts[a[i]] += 1\n        if a[i - 1] == a[i]:\n            dups[a[i - 1]] += 1\n    if max(counts) >= 3:\n        return 'YES'\n    if max(dups) >= 2:\n        return 'YES'\n    temp = 0\n    c = 0\n    for i in range(len):\n        if dups[i] == 0 and counts[i] >= 2:\n            temp += counts[i]\n        if dups[i] == 1:\n            c += 1\n    if 1 in counts:\n        temp += 1\n    if c >= 1:\n        temp += 1\n    if temp >= 3:\n        return 'YES'\n    return 'NO'\nk = int(input())\nfor _ in range(k):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(main(n, a))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = max(l)\n    a = [-1] * (m + 1)\n    b = [-1] * (m + 1)\n    for i in range(n):\n        if a[l[i]] == -1:\n            a[l[i]] = i\n    for i in range(n - 1, -1, -1):\n        if b[l[i]] == -1:\n            b[l[i]] = i\n    f = 1\n    for i in range(m + 1):\n        if abs(a[i] - b[i]) > 1:\n            f = 0\n            break\n    if not f:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    res = False\n    seen = {}\n    for (idx, num) in enumerate(lst):\n        if num not in seen:\n            seen[num] = idx\n        elif idx - seen[num] >= 2:\n            res = True\n    print('YES' if res else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = (n + 1) * [0]\n    x = (n + 1) * [-1]\n    z = 0\n    for i in range(n):\n        f[a[i]] += 1\n        if f[a[i]] == 3:\n            z = -1\n            break\n        if x[a[i]] == -1:\n            x[a[i]] = i\n        elif i - x[a[i]] == 1:\n            x[a[i]] = i\n        else:\n            z = -1\n            break\n    if z == -1:\n        print('YES')\n    else:\n        print('NO')", "def main():\n    for i in range(int(input())):\n        n = input()\n        a = [int(x) for x in input().split()]\n        (flag, pos) = (False, {})\n        for j in range(len(a)):\n            if a[j] not in pos:\n                pos[a[j]] = j\n            elif j - pos[a[j]] > 1:\n                print('YES')\n                flag = True\n                break\n            elif j - pos[a[j]] == 1:\n                if j != len(a) - 1 and j > 1:\n                    if a[j + 1] == a[j - 2]:\n                        print('YES')\n                        flag = True\n                        break\n            else:\n                pos[a[j]] = j\n        if flag == False:\n            print('NO')\nmain()", "import sys\nfrom collections import Counter\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    d = Counter(a)\n    mx = f = 0\n    for x in d:\n        if d[x] > mx:\n            mx = d[x]\n    if mx >= 3:\n        print('YES')\n    elif mx == 1:\n        print('NO')\n    else:\n        d1 = {}\n        for i in range(n):\n            if a[i] in d1:\n                d1[a[i]].append(i)\n            else:\n                d1[a[i]] = [i]\n        for x in d1:\n            if len(d1[x]) >= 2:\n                if d1[x][1] - d1[x][0] > 1:\n                    f = 4\n                    break\n        if f == 4:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if l == l[::-1]:\n        print('YES')\n        continue\n    newl = l.copy()\n    for i in range(n - 1):\n        if l[i] == l[i + 1]:\n            newl.remove(l[i])\n    ans = False\n    if len(newl) == len(set(newl)):\n        ans = False\n    else:\n        ans = True\n    for i in range(n - 2):\n        if l[i] == l[i + 2]:\n            ans = True\n            break\n    for i in range(n - 3):\n        if l[i] == l[i + 3] and l[i + 1] == l[i + 2]:\n            ans = True\n            break\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "from collections import defaultdict\nt = int(input())\nfor j in range(t):\n    matriz = defaultdict(list)\n    n = int(input())\n    lista = list(map(int, input().split()))\n    cont = 0\n    for item in lista:\n        matriz[item].append(cont)\n        cont += 1\n    ans = False\n    for i in range(1, n + 1):\n        if len(matriz[i]) > 2:\n            ans = True\n        elif len(matriz[i]) == 2:\n            if abs(matriz[i][1] - matriz[i][0]) > 1:\n                ans = True\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = input().split()\n    occured = set()\n    last = None\n    for b in a:\n        if b in occured:\n            print('YES')\n            break\n        else:\n            occured.add(last)\n            last = b\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    seen = {}\n    flag = False\n    for i in range(n):\n        if arr[i] in seen and i - seen[arr[i]] > 1:\n            print('YES')\n            flag = True\n            break\n        elif arr[i] not in seen:\n            seen[arr[i]] = i\n    if not flag:\n        print('NO')", "ans = []\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    d = {}\n    L = [int(i) for i in input().split()]\n    for (i, c) in enumerate(L):\n        try:\n            d[c].append(i)\n        except:\n            d[c] = [i]\n    for key in d.keys():\n        if len(d[key]) >= 2:\n            if d[key][-1] - d[key][0] >= 2:\n                ans.append('YES')\n                break\n    else:\n        ans.append('NO')\nprint('\\n'.join(ans))", "for _ in range(int(input())):\n    n = int(input())\n    D = {}\n    V = 'NO'\n    L = list(map(int, input().split()))\n    for i in range(n):\n        if L[i] not in D:\n            D[L[i]] = [i]\n        else:\n            D[L[i]].append(i)\n    for i in range(n):\n        if L[i] in D:\n            if D[L[i]][-1] - D[L[i]][0] >= 2:\n                V = 'YES'\n                break\n    print(V)", "t = int(input())\n\ndef checkPlindrome(arr, n):\n    dic = {}\n    last = arr[0]\n    for k in range(n):\n        if arr[k] in dic:\n            dic[arr[k]] += 1\n        else:\n            dic[arr[k]] = 1\n        if dic[arr[k]] == 2 and arr[k] != last:\n            return 1\n        elif dic[arr[k]] > 2:\n            return 1\n        last = arr[k]\n        k += 1\n    return 0\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = checkPlindrome(a, n)\n    if x == 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    seen = {}\n    ans = 'NO'\n    for i in range(n):\n        if arr[i] not in seen:\n            seen[arr[i]] = i\n        elif i - seen[arr[i]] >= 2:\n            ans = 'YES'\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    c = [-1 for _ in range(n)]\n    p = False\n    for i in range(n):\n        if c[a[i] - 1] == -1:\n            c[a[i] - 1] = i\n        elif i - c[a[i] - 1] > 1:\n            p = True\n            break\n    if p:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    d = {}\n    flag = False\n    for i in range(n):\n        if l[i] not in d:\n            d[l[i]] = [i]\n        else:\n            d[l[i]].append(i)\n    for i in d:\n        if len(d[i]) > 2:\n            flag = True\n            break\n        if len(d[i]) >= 2:\n            for j in range(1, len(d[i])):\n                if d[i][j] - d[i][j - 1] > 1:\n                    flag = True\n                    break\n            if flag:\n                break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = list(map(int, input().split()))\n    palin = [0] * (n + 1)\n    non = 0\n    for j in range(n):\n        if palin[x[j]] == 0:\n            palin[x[j]] = j + 1\n        elif palin[x[j]] != j:\n            print('YES')\n            non = 1\n            break\n    if non == 0:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    g = {}\n    f = 0\n    cnt = 0\n    for i in a:\n        cnt = cnt + 1\n        if i in d:\n            d[i] += 1\n            g[i].insert(1, cnt)\n        else:\n            d[i] = 1\n            g[i] = [cnt]\n        if d[i] >= 3:\n            f = 1\n            break\n        if d[i] == 2:\n            if g[i][1] - g[i][0] > 1:\n                f = 1\n                break\n    if f == 1:\n        print('YES')\n    else:\n        print('NO')", "import math\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    for i in range(n):\n        if a[i] not in d:\n            d[a[i]] = [i, i]\n        d[a[i]][1] = i\n        if len(d[a[i]]) >= 2 and d[a[i]][1] - d[a[i]][0] > 1:\n            return 'YES'\n    return 'NO'\nt = int(input())\nwhile t > 0:\n    t -= 1\n    print(solve())", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    el_map = {arr[0]: 0}\n    found = False\n    for i in range(1, n):\n        if el_map.get(arr[i], -1) != -1:\n            if i - el_map[arr[i]] > 1:\n                found = True\n        else:\n            el_map[arr[i]] = i\n    if found:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor inh in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = set()\n    ans = False\n    b.add(a[0])\n    b.add(a[1])\n    dic = {}\n    dic[a[0]] = 1\n    if a[0] == a[1]:\n        dic[a[0]] += 1\n    else:\n        dic[a[1]] = 1\n    for i in range(2, n):\n        if a[i] in b:\n            dic[a[i]] += 1\n            if a[i] != a[i - 1] or dic[a[i]] > 2:\n                ans = True\n                break\n        else:\n            b.add(a[i])\n            dic[a[i]] = 1\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nres = []\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    f = 0\n    for i in range(n):\n        if d.get(a[i], 0) == 0:\n            d[a[i]] = [i]\n        else:\n            d[a[i]] = d[a[i]] + [i]\n    for i in d.keys():\n        if len(d[i]) >= 3:\n            f = 1\n            break\n        if len(d[i]) == 2 and d[i][1] - d[i][0] >= 2:\n            f = 1\n            break\n    print('YES' if f else 'NO')", "ans = []\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    d = {}\n    L = [int(i) for i in input().split()]\n    for (i, c) in enumerate(L):\n        try:\n            d[c].append(i)\n        except:\n            d[c] = [i]\n    for key in d.keys():\n        if len(d[key]) >= 2:\n            if d[key][-1] - d[key][0] >= 2:\n                ans.append('YES')\n                break\n    else:\n        ans.append('NO')\nprint('\\n'.join(ans))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = input().split()\n    arr = [int(x) for x in arr]\n    dp = [0] * (max(arr) + 1)\n    flag = False\n    prev = -1\n    for c in arr:\n        dp[c] += 1\n        if dp[c] >= 2:\n            if prev != c:\n                flag = True\n                break\n        if dp[c] == 3:\n            flag = True\n            break\n        prev = c\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    q = {}\n    n = int(input())\n    w = [int(k) for k in input().split()]\n    for j in range(n):\n        if w[j] in q:\n            q[w[j]].append(j)\n        else:\n            q[w[j]] = [j]\n    for j in q.keys():\n        if len(q[j]) >= 3 or (len(q[j]) == 2 and q[j][1] - q[j][0] != 1):\n            print('YES')\n            break\n    else:\n        print('NO')", "from collections import defaultdict, Counter\nfor _ in range(int(input())):\n    n = int(input())\n    b = list(map(int, input().split()))\n    d = defaultdict(list)\n    for (idx, i) in enumerate(b):\n        d[i].append(idx)\n    freq = Counter(b)\n    r = False\n    for i in freq:\n        if not r:\n            if freq[i] >= 2:\n                for j in range(1, len(d[i])):\n                    if d[i][j] - d[i][0] >= 2:\n                        r = True\n                        break\n        else:\n            break\n    if r:\n        print('YES')\n    else:\n        print('NO')", "for w in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    st = {}\n    for (i, x) in enumerate(a):\n        if x in st:\n            if st[x] < i - 1:\n                print('YES')\n                break\n        else:\n            st[x] = i\n    else:\n        print('NO')", "cases = int(input().strip())\nfor case in range(cases):\n    n = int(input().strip())\n    numbers = [int(x) for x in input().strip().split(' ')]\n    has_palindrome = False\n    numbers_idx = {}\n    for (idx, number) in enumerate(numbers):\n        if number not in numbers_idx:\n            numbers_idx[number] = idx\n        elif idx - numbers_idx[number] > 1:\n            has_palindrome = True\n            break\n    if has_palindrome:\n        print('YES')\n    else:\n        print('NO')", "import io\nimport os\nimport sys\nimport math\nimport heapq\nimport bisect\nimport random\nimport string\nimport decimal\nimport functools\nimport fractions\nimport itertools\nimport collections\nfrom sys import stdin, stdout\nfrom io import BytesIO, IOBase\nfrom math import gcd, floor, sqrt, log, factorial\nfrom bisect import bisect_left, bisect_right\nfrom collections import deque, Counter, defaultdict, OrderedDict, namedtuple, UserDict, UserList, UserString\nMOD = 1000000007\nsys.setrecursionlimit(100000000)\nBUFSIZE = 8192\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    lastIndex = {}\n    for (i, ch) in enumerate(arr):\n        lastIndex[ch] = i\n    res = 'NO'\n    for (i, ch) in enumerate(arr):\n        if lastIndex[ch] > i + 1:\n            res = 'YES'\n            break\n    print(res)", "I = input\nfor _ in [0] * int(I()):\n    n = int(I())\n    a = list(map(int, I().split()))\n    c = [set() for i in range(n + 1)]\n    [c[i].add(p) for (p, i) in enumerate(a)]\n    [exec('c[i].add(0)' * (c[i] == set())) for i in range(n + 1)]\n    print(['NO', 'YES'][max([max(i) - min(i) > 1 for i in c])])", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (d, f) = (dict(), False)\n    for (i, e) in enumerate(a):\n        if e in d:\n            if i - d[e] > 1:\n                f = True\n                break\n        else:\n            d[e] = i\n    print('YES' if f else 'NO')", "I = lambda : map(int, input().split())\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(I())\n    c = 0\n    vis = [-1] * 5005\n    for i in range(n):\n        if vis[l[i]] != -1:\n            if i - vis[l[i]] > 1:\n                c = 1\n                break\n        else:\n            vis[l[i]] = i\n    if c != 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    a = int(input())\n    nums = list(map(lambda x: int(x), input().split()))\n    dp = set()\n    dp.add(nums[0])\n    yes = False\n    for x in range(1, a):\n        if nums[x] in dp:\n            if nums[x - 1] != nums[x] or (x > 1 and nums[x - 2] == nums[x]):\n                print('YES')\n                yes = True\n                break\n        else:\n            dp.add(nums[x])\n    if yes == False:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = map(int, list(input().split()))\n    d = {}\n    done = 0\n    for (i, j) in enumerate(l, 0):\n        if j not in d.keys():\n            d[j] = i\n        elif i - d[j] > 1:\n            done = 1\n            break\n    if done:\n        print('YES')\n    else:\n        print('NO')", "a = int(input())\nans = ''\nfor i in range(a):\n    b = int(input())\n    c = input().split()\n    dict = {}\n    chckr = 0\n    for j in range(len(c)):\n        if c[j] in dict and abs(int(j) - int(dict[c[j]])) > 1:\n            print('YES')\n            chckr = 1\n            break\n        elif c[j] not in dict:\n            dict[c[j]] = j\n    if chckr == 0:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    was = {arr[0]}\n    for i in range(2, len(arr)):\n        if arr[i] in was:\n            print('YES')\n            break\n        was.add(arr[i - 1])\n    else:\n        print('NO')", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    di = {}\n    for i in range(n):\n        if a[i] not in di:\n            di[a[i]] = []\n        di[a[i]].append(i)\n    flag = 'NO'\n    for i in di:\n        if len(di[i]) >= 3:\n            flag = 'YES'\n            break\n    if flag == 'NO':\n        for i in di:\n            if len(di[i]) == 2:\n                if di[i][1] - di[i][0] > 1:\n                    flag = 'YES'\n                    break\n    print(flag)", "t = int(input())\nfor i in range(t):\n    N = int(input())\n    nums = input().split()\n    isodd_0 = False\n    ret = True\n    cnt = {}\n    for i in range(len(nums)):\n        nums[i] = int(nums[i])\n        if i > 0:\n            if i > 1 and nums[i] == nums[i - 1] and (nums[i - 1] == nums[i - 2]):\n                if nums[i] in cnt:\n                    cnt[nums[i]] += 1\n                else:\n                    cnt[nums[i]] = 1\n            if nums[i] != nums[i - 1]:\n                if nums[i] in cnt:\n                    cnt[nums[i]] += 1\n                else:\n                    cnt[nums[i]] = 1\n        else:\n            cnt[nums[i]] = 1\n    check = False\n    for val in cnt.values():\n        if val >= 2:\n            check = True\n            break\n    if check:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = [int(x) for x in input().strip().split()]\n    cnt = [0] * 5001\n    chk = False\n    for j in range(0, len(a)):\n        cnt[a[j]] += 1\n        if cnt[a[j]] >= 3:\n            chk = True\n            break\n        elif cnt[a[j]] >= 2:\n            if a[j] != a[j - 1]:\n                chk = True\n                break\n    if chk:\n        print('YES')\n    elif not chk:\n        print('NO')", "def check(array):\n    R = len(array) - 1\n    for i in range(len(array)):\n        if R < i:\n            return True\n        elif i == R:\n            if array[i] == array[R]:\n                return True\n            return False\n        if array[i] == array[R]:\n            R -= 1\n        else:\n            return False\n\ndef palindrome_problem():\n    cases = int(input())\n    length = []\n    arrays = []\n    for i in range(cases):\n        length.append(int(input()))\n        arrays.append(list(map(int, input().split())))\n    for i in range(len(length)):\n        if length[i] == 3:\n            if check(arrays[i]):\n                print('YES')\n            else:\n                print('NO')\n        elif length[i] < 3:\n            print('NO')\n        else:\n            dic = {}\n            found = False\n            for j in range(len(arrays[i])):\n                if arrays[i][j] in dic:\n                    if int(j - dic[arrays[i][j]]) >= 2:\n                        print('YES')\n                        found = True\n                        break\n                    else:\n                        arrays[i][j] = j\n                else:\n                    dic[arrays[i][j]] = j\n            if not found:\n                print('NO')\npalindrome_problem()", "import sys\nR = lambda : map(int, sys.stdin.readline().split())\n(t,) = R()\nfor _ in range(t):\n    (n,) = R()\n    a = list(R())\n    f = False\n    d = {}\n    for (i, j) in enumerate(a):\n        if j not in d.keys():\n            d[j] = i\n        elif i - d[j] > 1:\n            f = True\n            break\n    print('YES' if f else 'NO')", "import sys\nR = lambda : map(int, sys.stdin.readline().split())\n(t,) = R()\nfor _ in range(t):\n    (n,) = R()\n    a = list(R())\n    f = False\n    d = {}\n    for (i, j) in enumerate(a):\n        if j not in d.keys():\n            d[j] = i\n        elif i - d[j] > 1:\n            f = True\n            break\n    print('YES' if f else 'NO')", "for _ in range(int(input())):\n    length = int(input())\n    arr = [int(i) for i in input().split()]\n    counts = {}\n    for j in range(length):\n        if arr[j] in counts:\n            if j - counts[arr[j]] > 1:\n                print('YES')\n                break\n        else:\n            counts[arr[j]] = j\n    else:\n        print('NO')", "def pali(n, A):\n    d = {}\n    for i in range(n):\n        if A[i] in d:\n            d[A[i]] += 1\n        else:\n            d[A[i]] = 1\n        if d[A[i]] >= 3:\n            return 'YES'\n    l = [[A[i], i] for i in range(n)]\n    l.sort(key=lambda x: x[0])\n    for i in range(1, len(l)):\n        if l[i - 1][0] == l[i][0] and abs(l[i - 1][1] - l[i][1]) > 1:\n            return 'YES'\n    return 'NO'\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(pali(n, arr))", "for _ in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    arr = [0] * max(li)\n    for i in range(len(li) - 1):\n        if li[i] != li[i + 1]:\n            arr[li[i] - 1] += 1\n    arr[li[-1] - 1] += 1\n    count = 0\n    abc = False\n    xyz = False\n    for i in range(len(li) - 2):\n        if li[i] == li[i + 2]:\n            abc = True\n            xyz = True\n            break\n    for i in range(len(arr)):\n        if arr[i] > 1:\n            abc = True\n            xyz = True\n            break\n    if not xyz:\n        if len(set(li)) == 1:\n            print('YES')\n            abc = True\n            continue\n        elif not abc:\n            print('NO')\n    else:\n        print('YES')", "p = int(input())\nfor k in range(p):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    fl = False\n    d = dict()\n    for i in range(len(a)):\n        if str(a[i]) in d.keys():\n            d[str(a[i])] += [i]\n        else:\n            d[str(a[i])] = [i]\n    for key in d:\n        if abs(d[key][0] - d[key][-1]) >= 2:\n            fl = True\n    print('YES' if fl else 'NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = [int(x) for x in input().split()]\n    pos = [-1] * (n + 1)\n    cnt = [0] * (n + 1)\n    temp = 0\n    for i in range(0, len(s)):\n        if pos[s[i]] != -1 and pos[s[i]] != i - 1 or cnt[s[i]] > 1:\n            temp = 1\n            break\n        pos[s[i]] = i\n        cnt[s[i]] += 1\n    if temp == 0:\n        print('NO')\n    else:\n        print('YES')", "def fonk(x):\n    return x[0]\nn = int(input())\nfor k in range(n):\n    l = int(input())\n    A = [[int(i), j] for (i, j) in zip(input().split(), range(l))]\n    A.sort(key=fonk)\n    durum = False\n    for i in range(len(A) - 1):\n        if A[i][0] == A[i + 1][0]:\n            if abs(A[i][1] - A[i + 1][1]) != 1:\n                durum = True\n                break\n            elif i + 2 < len(A):\n                if A[i][0] == A[i + 2][0]:\n                    durum = True\n                    break\n    if durum:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    N = int(input())\n    lis = list(map(int, input().split()))\n    dic = {}\n    output = 0\n    for i in range(N):\n        dic[lis[i]] = dic.get(lis[i], 0) + 1\n        if dic[lis[i]] == 2:\n            if lis[i] != lis[i - 1]:\n                output = 1\n                break\n        if dic[lis[i]] == 3:\n            output = 1\n            break\n    if output == 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    visited = [False] * 5001\n    count = [0] * 5001\n    for i in range(n):\n        if not visited[a[i]]:\n            visited[a[i]] = True\n            if i - 1 >= 0:\n                count[a[i - 1]] += 1\n        else:\n            if count[a[i]] != 0:\n                print('YES')\n                break\n            count[a[i]] += 1\n    else:\n        print('NO')", "def palidrome(n, array):\n    seen = dict()\n    for i in range(n):\n        if array[i] in seen:\n            if i - seen[array[i]] > 1:\n                return True\n        else:\n            seen[array[i]] = i\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 'YES' if palidrome(n, arr) else 'NO'\n    print(ans)", "for i in range(int(input())):\n    q = int(input())\n    r = 0\n    e = [-1] * 5002\n    w = list(map(int, input().split()))\n    for i in range(q):\n        if e[w[i]] == -1:\n            e[w[i]] = i\n        elif i - e[w[i]] > 1:\n            print('YES')\n            r = 1\n            break\n    if r == 0:\n        print('NO')", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dic = {}\n    check = True\n    for i in range(n):\n        c = arr[i]\n        if c in dic and dic[c] != i - 1:\n            print('YES')\n            check = False\n            break\n        if c not in dic:\n            dic[c] = i\n    if check:\n        print('NO')", "def solve(arr):\n    data = {}\n    for (i, num) in enumerate(arr):\n        if num in data:\n            pos = data[num]\n            if i - pos > 1:\n                return True and len(arr) >= 3\n        else:\n            data[num] = i\n    return False\ntc = int(input())\nfor _ in range(tc):\n    num = int(input())\n    arr = [int(i) for i in input().split()]\n    assert len(arr) == num, 'Invalid Test Case'\n    print('YES' if solve(arr) else 'NO')", "queries = int(input())\n\ndef solution(array):\n    value_dict = {}\n    for (index, value) in enumerate(array):\n        if value in value_dict:\n            if value_dict[value] != index - 1:\n                print('YES')\n                return\n        else:\n            value_dict[value] = index\n    print('NO')\nfor _ in range(queries):\n    _ = int(input())\n    array = [int(item) for item in input().split()]\n    solution(array)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = {}\n    ans = 'NO'\n    for i in range(n):\n        if a[i] not in d:\n            d[a[i]] = []\n            d[a[i]].append(i)\n        else:\n            x = a[i]\n            if i - d[x][0] > 1:\n                ans = 'YES'\n                break\n    print(ans)\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    p = None\n    prev = set()\n    for d in map(int, input().split()):\n        if p is not None:\n            if d in prev:\n                print('YES')\n                break\n        prev.add(p)\n        p = d\n    else:\n        print('NO')", "def main():\n    n = int(input())\n    nums = list(map(int, input().split()))\n    m = {}\n    for i in range(n):\n        if m.get(nums[i]):\n            m[nums[i]] = (m[nums[i]][0] + 1, m[nums[i]][1], i)\n        else:\n            m[nums[i]] = (1, i, i)\n    for k in m:\n        if m[k][0] > 2:\n            return 'YES'\n        elif m[k][0] == 2 and m[k][1] + 1 < m[k][2]:\n            return 'YES'\n    return 'NO'\nt = int(input())\nfor _ in range(t):\n    print(main())", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    l = list(map(int, sys.stdin.readline().split()))\n    mapi = {}\n    yes = False\n    for i in range(n):\n        num = l[i]\n        if mapi.get(num):\n            if abs(i + 1 - mapi[num]) > 1:\n                yes = True\n                break\n        else:\n            mapi[num] = i + 1\n    if yes:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    dic = {}\n    palindrome = False\n    for i in range(len(arr)):\n        if arr[i] in dic:\n            if i - 1 != dic[arr[i]]:\n                palindrome = True\n                break\n        else:\n            dic[arr[i]] = i\n    if palindrome:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    p = None\n    prev = set()\n    for d in map(int, input().split()):\n        if p is not None:\n            if d in prev:\n                print('YES')\n                break\n        prev.add(p)\n        p = d\n    else:\n        print('NO')", "for nt in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    flag = 0\n    d = {}\n    for i in range(n):\n        if l[i] not in d:\n            d[l[i]] = [i]\n        else:\n            d[l[i]].append(i)\n    for i in d:\n        if len(d[i]) > 2:\n            print('YES')\n            flag = 1\n            break\n        elif len(d[i]) == 2:\n            if d[i][1] - d[i][0] > 1:\n                print('YES')\n                flag = 1\n                break\n    if flag == 0:\n        print('NO')", "def to_list(s):\n    return list(map(lambda x: int(x), s.split(' ')))\n\ndef solve(a):\n    dict_ = {}\n    set_a = set(a)\n    for item in set_a:\n        dict_[item] = 0\n    for i in range(len(a)):\n        dict_[a[i]] += 1\n    for i in range(len(a) - 1):\n        if dict_[a[i]] > 2:\n            return 'YES'\n        elif (a[i + 1] != a[i]) & (dict_[a[i]] > 1):\n            return 'YES'\n        dict_[a[i]] -= 1\n    return 'NO'\nanswers = []\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = to_list(input())\n    answers.append(solve(a))\nprint('\\n'.join(answers))", "t = int(input())\ni = 0\nwhile i < t:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    has = {}\n    ans = 'NO'\n    for x in range(n):\n        if arr[x] not in has.keys():\n            has[arr[x]] = x\n        elif x - has[arr[x]] + 1 >= 3:\n            ans = 'YES'\n            break\n    print(ans)\n    i = i + 1", "def solve(a, n):\n    if n < 3:\n        return False\n    d = {}\n    d[a[0]] = 1\n    for i in range(1, n - 1):\n        if a[i - 1] == a[i] == a[i + 1]:\n            return True\n    for i in range(1, n):\n        if a[i] != a[i - 1]:\n            d[a[i]] = d.get(a[i], 0) + 1\n    for i in d.values():\n        if i >= 2:\n            return True\n    return False\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if solve(a, n):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 'NO'\n    d = dict()\n    for (i, num) in enumerate(a):\n        if num not in d:\n            d[num] = i\n        elif i - d[num] > 1:\n            ans = 'YES'\n            break\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    s = [int(i) for i in input().split()]\n    d = [[0, 0] for i in range(n + 1)]\n    e = set()\n    f = False\n    for i in range(n):\n        if s[i] not in e:\n            d[s[i]][0] = i\n            e.add(s[i])\n        else:\n            d[s[i]][1] = i\n    for i in range(n + 1):\n        if d[i][1] - d[i][0] > 1:\n            f = True\n            break\n    if f:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nl1 = []\nfor i in range(t):\n    l = []\n    n = int(input())\n    s = list(map(int, input().split()))\n    for j in range(n):\n        l.append([s[j], j])\n    l1.append(l)\nfor k in l1:\n    k.sort()\n    for m in range(1, len(k)):\n        if m <= len(k) - 2:\n            if k[m - 1][0] == k[m][0] == k[m + 1][0]:\n                print('YES')\n                break\n            elif k[m - 1][0] == k[m][0] and k[m][1] - k[m - 1][1] > 1:\n                print('YES')\n                break\n            elif m == len(k) - 1:\n                print('NO')\n        elif k[m - 1][0] == k[m][0] and k[m][1] - k[m - 1][1] > 1:\n            print('YES')\n            break\n        elif m == len(k) - 1:\n            print('NO')", "t = int(input())\nans = []\nc = 0\nfor i in range(t):\n    ans.append('NO')\nwhile c < t:\n    n = int(input())\n    Arrs = input().split()\n    for i in range(n):\n        Arrs[i] = int(Arrs[i])\n    First = []\n    for i in range(n):\n        First.append(-1)\n    for i in range(n):\n        if First[Arrs[i] - 1] == -1:\n            First[Arrs[i] - 1] = i\n        if First[Arrs[i] - 1] != -1:\n            if i - First[Arrs[i] - 1] > 1:\n                ans[c] = 'YES'\n    c = c + 1\nfor i in range(len(ans)):\n    print(ans[i])", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    A = [int(i) for i in input().split()]\n    B = dict()\n    for i in range(n):\n        if A[i] in B:\n            B[A[i]].append(i)\n            if len(B[A[i]]) >= 2 and B[A[i]][-1] - B[A[i]][-2] > 1 or (len(B[A[i]]) >= 3 and B[A[i]][-1] - B[A[i]][-3] > 1):\n                print('YES')\n                break\n        else:\n            B[A[i]] = [i]\n    else:\n        print('NO')", "for u in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    ind = [[] for i in range(n + 1)]\n    flag = 1\n    for i in range(n):\n        ind[x[i]] += [i]\n        if len(ind[x[i]]) == 2 and ind[x[i]][-1] - ind[x[i]][-2] > 1 or len(ind[x[i]]) >= 3:\n            print('YES')\n            flag = 0\n            break\n    if flag:\n        print('NO')", "import sys\nT = int(input())\nt = 0\nwhile t < T:\n    N = int(input())\n    L = list(map(int, input().split()))\n    P = []\n    for n in range(N + 1):\n        P.append(-1)\n    out = False\n    n = 0\n    while n < N:\n        a = L[n]\n        if P[a] == -1:\n            P[a] = n\n        elif n - P[a] > 1:\n            out = True\n        n += 1\n    if out:\n        print('YES')\n    else:\n        print('NO')\n    t += 1", "for t in range(int(input())):\n    n = int(input())\n    v = list(map(int, input().split()))\n    l = []\n    vis = []\n    f = 0\n    for i in range(n + 1):\n        vis.append(0)\n        l.append(0)\n    for i in range(n):\n        if vis[v[i]] == 1:\n            if i - l[v[i]] > 1:\n                f = 1\n            continue\n        vis[v[i]] = 1\n        l[v[i]] = i\n    if f == 0:\n        print('NO')\n    else:\n        print('YES')"]