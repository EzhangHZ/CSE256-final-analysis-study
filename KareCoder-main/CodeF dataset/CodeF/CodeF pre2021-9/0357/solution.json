["import sys\n\ndef main():\n    res = ''\n    input = sys.stdin.readline\n    print = sys.stdout.write\n    t = int(input())\n    for _ in range(t):\n        a = list(input())\n        sub_res = 0\n        for i in range(len(a) - 1):\n            if a[i] == a[i + 1] != '@':\n                a[i + 1] = '#'\n                sub_res += 1\n            if i != 0 and '@' != a[i - 1] == a[i + 1] != '#':\n                a[i + 1] = '@'\n                sub_res += 1\n        res += str(sub_res) + '\\n'\n    print(res)\nmain()", "import math\nfrom itertools import combinations\n\ndef count_repeat(word):\n    marks = [0] * len(word)\n    for i in range(1, len(word)):\n        mark = 0\n        if word[i] == word[i - 1] and marks[i - 1] != 1:\n            mark = 1\n        if i > 1 and word[i] == word[i - 2] and (marks[i - 2] != 1):\n            mark = 1\n        marks[i] = mark\n    return marks.count(1)\nn = int(input())\nr = ''\nfor i in range(0, n):\n    word = input()\n    r += str(count_repeat(word)) + '\\n'\nprint(r)", "import sys\n\ndef answer(s):\n    if len(s) == 1:\n        return 0\n    if len(s) == 2:\n        if s[1] == s[0]:\n            return 1\n        else:\n            return 0\n    cnt = 0\n    m = [False] * len(s)\n    if s[1] == s[0]:\n        m[1] = True\n        cnt += 1\n    for i in range(2, len(s)):\n        if s[i] == s[i - 1] and m[i - 1] == False:\n            m[i] = True\n            cnt += 1\n        elif s[i] == s[i - 2] and m[i - 2] == False:\n            m[i] = True\n            cnt += 1\n    return cnt\n\ndef main():\n    t = int(input())\n    while t:\n        s = sys.stdin.readline().rstrip()\n        print(answer(s))\n        t -= 1\n    return\nmain()", "def contar(p):\n    marks = [0] * len(p)\n    for i in range(1, len(p)):\n        mark = 0\n        if p[i] == p[i - 1] and marks[i - 1] != 1:\n            mark = 1\n        if i > 1 and p[i] == p[i - 2] and (marks[i - 2] != 1):\n            mark = 1\n        marks[i] = mark\n    return marks.count(1)\nn = int(input())\nr = ''\nfor i in range(0, n):\n    p = input()\n    r += str(contar(p)) + '\\n'\nprint(r)", "import math\nimport sys\ninput = sys.stdin.readline\n\ndef solve():\n    s1 = input().strip()\n    mem = [0] * len(s1)\n    res = 0\n    for i in range(1, len(s1)):\n        if not mem[i - 1] and s1[i] == s1[i - 1]:\n            res += 1\n            mem[i] = 1\n        if i > 1 and (not mem[i - 2]) and (s1[i] == s1[i - 2]):\n            res += 1\n            mem[i] = 1\n    print(res)\ntt = int(input())\nfor test in range(tt):\n    solve()", "import math, sys\ninput = sys.stdin.readline\nS = lambda : input().rstrip()\nI = lambda : int(S())\nM = lambda : map(int, S().split())\nL = lambda : list(M())\nmod1 = 1000000007\nmod2 = 998244353\nfor _ in range(I()):\n    s = S()\n    q = [False for j in range(len(s))]\n    ans = 0\n    if len(s) == 1:\n        print(0)\n        continue\n    if len(s) > 1 and s[1] == s[0]:\n        ans += 1\n        q[1] = True\n    for i in range(2, len(s)):\n        flag = 0\n        if s[i] == s[i - 1] and (not q[i - 1]):\n            flag = 1\n        if s[i] == s[i - 2] and (not q[i - 2]):\n            flag = 1\n        if flag:\n            q[i] = True\n            ans += 1\n    print(ans)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    str1 = input()\n    cnt = 0\n    n = len(str1)\n    li = [1] * n\n    for i in range(1, n):\n        if str1[i] == str1[i - 1] and li[i - 1]:\n            cnt += 1\n            li[i] = 0\n        elif i - 2 >= 0 and (str1[i] == str1[i - 2] and li[i - 2]):\n            cnt += 1\n            li[i] = 0\n    print(cnt)", "import sys, random, bisect\nfrom collections import deque, defaultdict, Counter\nfrom heapq import heapify, heappop, heappush\nfrom math import gcd\nmod = int(1000000000.0 + 7)\ninf = int(1e+20)\ninput = lambda : sys.stdin.readline().rstrip()\nmi = lambda : map(int, input().split())\nli = lambda : list(mi())\nii = lambda : int(input())\npy = lambda : print('YES')\npn = lambda : print('NO')\nt = ii()\nfor _ in range(t):\n    s = list(input())\n    n = len(s)\n    res = 0\n    for i in range(1, n):\n        if s[i] == s[i - 1]:\n            s[i] = '?'\n            res += 1\n        elif i >= 2 and s[i] == s[i - 2]:\n            s[i] = '?'\n            res += 1\n    print(res)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    str1 = input()\n    cnt = 0\n    n = len(str1)\n    li = [1] * n\n    for i in range(1, len(str1)):\n        if str1[i] == str1[i - 1] and li[i - 1]:\n            cnt += 1\n            li[i] = 0\n        elif i - 2 >= 0 and (str1[i] == str1[i - 2] and li[i - 2]):\n            cnt += 1\n            li[i] = 0\n    print(cnt)", "for s in [*open(0)][1:]:\n    t = (0, 0)\n    r = 0\n    for x in s:\n        if x in t:\n            x = 0\n            r += 1\n        t = (t[1], x)\n    print(r)", "for s in [*open(0)][1:]:\n    tot = 0\n    ls = list(s)\n    n = len(s)\n    for (i, c) in enumerate(ls):\n        if i + 1 < n and ls[i + 1] == c:\n            ls[i + 1] = '@'\n        if i + 2 < n and ls[i + 2] == c:\n            ls[i + 2] = '@'\n        if i - 1 > -1 and ls[i - 1] == c:\n            ls[i - 1] = '@'\n        if i - 2 > -1 and ls[i - 2] == c:\n            ls[i - 2] = '@'\n    print(ls.count('@'))", "from sys import stdin\nip = stdin.readline\nfor _ in range(int(ip())):\n    a = list(ip().strip())\n    n = len(a)\n    if n <= 1:\n        print(0)\n        continue\n    elif n == 2:\n        if a[0] == a[1]:\n            print(1)\n        else:\n            print(0)\n        continue\n    ans = 0\n    if a[0] == a[1]:\n        a[1] = '$'\n        ans = 1\n    for i in range(2, n):\n        if a[i] == a[i - 1] or a[i] == a[i - 2]:\n            a[i] = '$'\n            ans += 1\n    print(ans)", "for s in [*open(0)][1:]:\n    t = (0, 0)\n    r = 0\n    for x in s:\n        if x in t:\n            x = 0\n            r += 1\n        t = t[1:] + (x,)\n    print(r)", "for s in [*open(0)][1:]:\n    t = (0, 0)\n    r = 0\n    for x in s:\n        if x in t:\n            x = 0\n            r += 1\n        t = (t[1], x)\n    print(r)", "for s in [*open(0)][1:]:\n    t = (0, 0)\n    r = 0\n    for x in s:\n        if x in t:\n            x = 0\n            r += 1\n        t = (t[1], x)\n    print(r)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    str1 = input()\n    (cnt, n) = (0, len(str1))\n    li = [1] * n\n    for i in range(1, len(str1)):\n        if str1[i] == str1[i - 1] and li[i - 1]:\n            cnt += 1\n            li[i] = 0\n        elif i - 2 >= 0 and (str1[i] == str1[i - 2] and li[i - 2]):\n            cnt += 1\n            li[i] = 0\n    print(cnt)", "from collections import deque, Counter\nfrom collections import defaultdict as dfd\nfrom bisect import bisect, bisect_left\nfrom math import sqrt, gcd, ceil, factorial, log2\nfrom heapq import heapify, heappush, heappop\nMOD = 10 ** 9 + 7\ninf = float('inf')\nans_ = []\n\ndef nin():\n    return int(input())\n\ndef ninf():\n    return int(file.readline())\n\ndef st():\n    return input().strip()\n\ndef stf():\n    return file.readline().strip()\n\ndef read():\n    return list(map(int, input().strip().split()))\n\ndef readf():\n    return list(map(int, file.readline().strip().split()))\n\ndef readfl():\n    return list(map(float, input().strip().split()))\n\ndef readffl():\n    return list(map(float, file.readline().strip().split()))\n\ndef solve():\n    for _ in range(nin()):\n        s = list(st())\n        n = len(s)\n        ans = 0\n        for i in range(1, n):\n            if s[i] == s[i - 1]:\n                s[i] = '*'\n                ans += 1\n            elif i > 1 and s[i] == s[i - 2]:\n                s[i] = '*'\n                ans += 1\n        ans_.append(ans)\nsolve()\nfor i in ans_:\n    print(i)", "import sys\nt = int(input())\nfor test in range(t):\n    poem = sys.stdin.readline().rstrip()\n    check = []\n    count = 0\n    for char in poem:\n        if len(check) == 0:\n            check.append(char)\n        elif len(check) == 1:\n            if check[-1] == char:\n                count += 1\n                check.append('?')\n            else:\n                check.append(char)\n        elif check[-1] == char or check[-2] == char:\n            count += 1\n            check.append('?')\n        else:\n            check.append(char)\n    print(count)", "answers = []\n\ndef winner(string):\n    length = len(string)\n    if length == 1:\n        answers.append(0)\n        return\n    if length == 2:\n        if string[0] == string[-1]:\n            answers.append(1)\n            return\n        else:\n            answers.append(0)\n            return\n    arr = []\n    for s in string:\n        arr.append(s)\n    for i in range(0, length - 1):\n        left = i - 1\n        right = i + 1\n        if right < length and left >= 0:\n            if arr[left] == arr[right]:\n                arr[right] = ')'\n        left = i\n        right = i + 1\n        if right < length and left >= 0:\n            if arr[left] == arr[right]:\n                arr[right] = ')'\n    count = 0\n    for ele in arr:\n        if ele == ')':\n            count += 1\n    answers.append(count)\nt = int(input())\nwhile t:\n    string = input()\n    winner(string)\n    t -= 1\nfor ans in answers:\n    print(ans)", "from sys import stdin\ninput = stdin.readline\n\ndef canine(s):\n    lst = [i for i in s]\n    cnt = 0\n    for i in range(len(lst) - 1):\n        if lst[i] == lst[i + 1]:\n            lst[i + 1] = None\n            cnt += 1\n        if i > 0:\n            if lst[i - 1] == lst[i + 1] and lst[i + 1] != None:\n                lst[i + 1] = None\n                cnt += 1\n    return cnt\nfor i in range(int(input())):\n    print(canine(input().strip()))", "for s in [*open(0)][1:]:\n    d = {}\n    r = i = 0\n    for c in s:\n        if i - d.get(c, -3) > 2:\n            d[c] = i\n        else:\n            r += 1\n        i += 1\n    print(r)", "for s in [*open(0)][1:]:\n    op = 0\n    s = list(s)\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1] or (i > 1 and s[i] == s[i - 2]):\n            p = s[i - 2:i] + s[i + 1:i + 3]\n            for x in range(0, 26):\n                if chr(ord('a') + x) not in p:\n                    s[i] = chr(ord('a') + x)\n                    break\n            op += 1\n    print(op)", "import sys\nfrom sys import stdin\ninput = stdin.readline\nsys.setrecursionlimit(pow(10, 6))\nfrom collections import defaultdict\ndict = defaultdict(int)\nfor i in range(1, 27):\n    theta = i + 96\n    dict[chr(theta)] = i\n\ndef integer(a):\n    return dict[i]\n\ndef comparetwo(a):\n    b = a[:]\n    b.reverse()\n    if dict[a[0]] and dict[a[1]] and (a == b):\n        return 1\n    return 0\n\ndef comparethree(a):\n    b = a[:]\n    b.reverse()\n    if dict[a[0]] and dict[a[2]] and (a == b):\n        return 1\n    return 0\nfor i in range(int(input())):\n    a = list(input())\n    count = 0\n    for i in range(len(a) - 1):\n        if comparetwo(a[i:i + 2]):\n            a[i + 1] = str(integer(a[i + 1]))\n            count += 1\n        if i != len(a) - 2:\n            if comparethree(a[i:i + 3]):\n                a[i + 2] = str(integer(a[i + 2]))\n                count += 1\n    print(count)", "from sys import stdin, stdout\nt = int(stdin.readline().strip())\nfor __ in range(t):\n    s = list(stdin.readline().strip())\n    req = [False] * len(s)\n    count = 0\n    if len(s) >= 2 and s[0] == s[1] and (not (req[0] or req[1])):\n        count += 1\n        req[1] = True\n    for i in range(2, len(s)):\n        if s[i] == s[i - 2]:\n            if s[i] == s[i - 1]:\n                if req[i - 2] and req[i - 1]:\n                    continue\n                elif req[i - 2] or req[i - 1]:\n                    req[i] = True\n                    count += 1\n                else:\n                    count += 2\n                    req[i - 1] = True\n                    req[i] = True\n            elif req[i - 2]:\n                continue\n            else:\n                count += 1\n                req[i] = True\n        elif s[i] == s[i - 1]:\n            if req[i - 1]:\n                continue\n            else:\n                count += 1\n                req[i] = True\n    if len(s) >= 2 and s[len(s) - 1] == s[len(s) - 2]:\n        if not (req[len(s) - 1] or req[len(s) - 2]):\n            count += 1\n    print(count)", "import sys\n\ndef readTasks():\n    n = int(sys.stdin.readline())\n    tasks = []\n    for i in range(n):\n        task = sys.stdin.readline().strip()\n        tasks.append(task)\n    return tasks\n\ndef solve(task):\n    used = []\n    task = list(task)\n    changed = 0\n    for i in range(1, len(task)):\n        use = False\n        if task[i] == task[i - 1]:\n            use = True\n        if i > 1 and task[i] == task[i - 2]:\n            use = True\n        if use:\n            task[i] = str(i)\n            changed += 1\n    return changed\ntasks = readTasks()\nfor task in tasks:\n    print(str(solve(task)))", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    s = input()\n    l = list(s)\n    ans = 0\n    n = len(s)\n    for i in range(1, n):\n        if i - 1 >= 0 and l[i] == l[i - 1] or (i - 2 >= 0 and l[i] == l[i - 2]):\n            l[i] = '*'\n            ans += 1\n    print(ans)", "def check_case(string):\n    string = list(string)\n    for i in range(1, len(string)):\n        if i == 1:\n            if string[i] == string[i - 1]:\n                string[i] = '#'\n            continue\n        if string[i] == string[i - 1] and string[i] == string[i - 2]:\n            string[i] = '#'\n            string[i - 1] = '#'\n        elif string[i] == string[i - 1] or string[i] == string[i - 2]:\n            string[i] = '#'\n    return string.count('#')\ntotal_cases = int(input())\noutput = []\nfor i in range(total_cases):\n    case = input()\n    output.append(check_case(case))\nfor case in output:\n    print(case)", "t = int(input())\nans_list = []\nfor i in range(t):\n    poem = input()\n    new_constructed = ''\n    for i in range(len(poem)):\n        if i == 0:\n            new_constructed += poem[i]\n        elif i == 1:\n            if poem[i] == new_constructed[i - 1]:\n                new_constructed += '*'\n            else:\n                new_constructed += poem[i]\n        elif poem[i] == new_constructed[i - 1]:\n            new_constructed += '*'\n        elif poem[i] == new_constructed[i - 2]:\n            new_constructed += '*'\n        else:\n            new_constructed += poem[i]\n    ans_list.append(new_constructed.count('*'))\n    new_constructed = ''\nfor i in ans_list:\n    print(i)", "cases = int(input())\nans_list = []\nfor c in range(cases):\n    s = input()\n    change = [0 for i in range(len(s))]\n    for i in range(1, len(s)):\n        change_3 = s[i] == s[i - 2] if i != 1 else False\n        change_2 = s[i] == s[i - 1]\n        if change_2 and change[i - 1] == 0:\n            change[i] = 1\n        elif change_3 and change[i - 2] == 0:\n            change[i] = 1\n    ans_list.append(sum(change))\nfor val in ans_list:\n    print(val)", "for s in [*open(0)][1:]:\n    tot = 0\n    ls = list(s)\n    n = len(s)\n    for (i, c) in enumerate(ls):\n        ind = [i + 1, i + 2, i - 1, i - 2]\n        for id in ind:\n            if -1 < id and id < n and (ls[id] == c):\n                ls[id] = '@'\n    print(ls.count('@'))", "x = []\nz = []\ncount = 0\n\ndef conv(string):\n    list1 = []\n    list1[:0] = string\n    return list1\nfor _ in range(int(input())):\n    s = input()\n    x.append(s)\nfor i in x:\n    i = conv(i)\n    count = 0\n    if len(i) == 1:\n        count = 0\n    elif len(i) == 2:\n        if i[0] == i[1]:\n            count = 1\n        else:\n            count = 0\n    else:\n        for j in range(1, len(i)):\n            if i[j] == i[j - 1] or (j - 2 >= 0 and i[j] == i[j - 2]):\n                i[j] = '@'\n    for b in range(len(i)):\n        count += i[b] == '@'\n    z.append(count)\nfor u in z:\n    print(u)", "def removePalindro(s):\n    sum = 0\n    for i in range(1, len(s)):\n        if s[i] == s[i - 2] and i - 2 >= 0 or (s[i] == s[i - 1] and i - 1 >= 0):\n            s = s[:i] + '_' + s[i + 1:]\n            sum += 1\n    return sum\nn = int(input())\nsol = ''\nfor i in range(n):\n    s = input()\n    sol += str(removePalindro(s)) + '\\n'\nprint(sol)", "for s in [*open(0)][1:]:\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1] or (i > 1 and s[i] == s[i - 2]):\n            s = s[:i] + '.' + s[i + 1:]\n    print(s.count('.'))", "from sys import stdin\n\ndef function(word):\n    counter = 0\n    if len(word) == 1:\n        return 0\n    else:\n        if word[1] == word[0]:\n            word = word[:1] + '+' + word[2:]\n            counter += 1\n        for i in range(2, len(word)):\n            if word[i] == word[i - 1] or word[i] == word[i - 2]:\n                word = word[:i] + '+' + word[i + 1:]\n                counter += 1\n    return counter\nn = int(input())\nfor i in range(n):\n    str = stdin.readline()\n    print(function(str))", "PRINT = []\nfor tt in range(int(input())):\n    s = input()\n    ans = 0\n    for i in range(len(s)):\n        if i == 0 or s[i] == '#':\n            continue\n        if s[i] == s[i - 1]:\n            ans += 1\n            s = s[:i] + '#' + s[i + 1:]\n            continue\n        if i <= 1:\n            continue\n        if s[i] == s[i - 2]:\n            ans += 1\n            s = s[:i] + '#' + s[i + 1:]\n    PRINT.append(ans)\nprint(*PRINT, sep='\\n')", "def solve(str):\n    marked = [False] * len(str)\n    res = 0\n    for i in range(1, len(str)):\n        if str[i] == str[i - 1] and (not marked[i - 1]):\n            marked[i] = True\n        if i >= 2 and str[i] == str[i - 2] and (not marked[i - 2]):\n            marked[i] = True\n        if marked[i]:\n            res += 1\n    print(res)\ntest = int(input())\nfor _ in range(test):\n    str = input()\n    if len(str) <= 1:\n        print(0)\n    elif len(str) == 2:\n        if str[0] == str[1]:\n            print(1)\n        else:\n            print(0)\n    else:\n        solve(str)", "n = int(input())\nwhile n > 0:\n    g = list(input())\n    lol = 0\n    if len(g) == 1:\n        print(0)\n    else:\n        for i in range(1, len(g)):\n            if g[i] == g[i - 1] and g[i - 1] != '#':\n                g[i] = '#'\n                lol += 1\n            elif i >= 2 and g[i] == g[i - 2] and (g[i - 2] != '#'):\n                g[i] = '#'\n                lol += 1\n        print(int(lol))\n    n -= 1", "def q_1466():\n\n    def solve(s):\n        if len(s) <= 1:\n            return 0\n        changed = set()\n        for i in range(len(s) - 2):\n            if i in changed:\n                continue\n            if s[i] == s[i + 1]:\n                changed.add(i + 1)\n            if s[i] == s[i + 2]:\n                changed.add(i + 2)\n        if s[-1] == s[-2] and len(s) - 2 not in changed:\n            changed.add(len(s) - 1)\n        return len(changed)\n    t = int(input())\n    for test in range(t):\n        print(solve(input()))\nq_1466()", "import sys\nfor _ in range(int(input().strip())):\n    s = input().strip()\n    ans = 0\n    for i in range(1, len(s)):\n        if s[i - 1] == s[i] or (i >= 2 and s[i - 2] == s[i]):\n            ans += 1\n            s = s[:i] + '?' + s[i + 1:]\n    print(ans)", "for _ in range(int(input())):\n    poem = list(input())\n    if len(poem) == 1:\n        print(0)\n        continue\n    free = {chr(num) for num in range(ord('a'), ord('z') + 1)}\n    n_chngs = 0\n    free -= set(poem[:2])\n    if poem[0] == poem[1]:\n        cand = free.pop()\n        while any((cand == suff for suff in poem[2:4])):\n            cand = free.pop()\n        poem[1] = cand\n        n_chngs += 1\n    for i in range(2, len(poem)):\n        pivot = poem[i]\n        if poem[i - 2] == pivot or pivot == poem[i - 1]:\n            cand = free.pop()\n            while any((cand == suff for suff in poem[i + 1:i + 3])):\n                cand = free.pop()\n            poem[i] = cand\n            n_chngs += 1\n        free.add(poem[i - 2])\n    print(n_chngs)", "for _ in range(int(input())):\n    str = input()\n    c = 0\n    if len(str) != 1:\n        for i in range(1, len(str)):\n            if str[i] and (i and str[i] == str[i - 1] or (i >= 2 and str[i] == str[i - 2])):\n                str = str[0:i] + '0' + str[i + 1:]\n                c += 1\n    print(c)", "t = int(input())\nfor i in range(t):\n    myString = list(input())\n    result = 0\n    for iK in range(1, len(myString)):\n        if iK >= 2 and myString[iK] == myString[iK - 2] or myString[iK] == myString[iK - 1]:\n            result += 1\n            myString[iK] = 'A'\n    print(result)", "for _ in range(int(input())):\n    a = input()\n    l = list(a)\n    count = 0\n    if len(l) == 1:\n        print(0)\n    else:\n        for i in range(1, len(l)):\n            if l[i] == l[i - 1] and l[i - 1] != '#':\n                l[i] = '#'\n                count += 1\n            elif i >= 2 and l[i] == l[i - 2] and (l[i - 2] != '#'):\n                l[i] = '#'\n                count += 1\n        print(count)", "t = int(input())\nfor i in range(t):\n    s = input()\n    ind = 0\n    l = len(s)\n    c = 0\n    while True:\n        if ind > l - 1:\n            break\n        elif ind + 3 < l and s[ind] != s[ind + 1] and (s[ind] == s[ind + 2]) and (s[ind] != s[ind + 3]) and (s[ind + 1] != s[ind + 2]) and (s[ind + 1] == s[ind + 3]) and (s[ind + 2] != s[ind + 3]):\n            c += 2\n            ind += 4\n        elif ind + 2 < l and s[ind] == s[ind + 1] and (s[ind] == s[ind + 2]):\n            c += 2\n            ind += 3\n        elif ind + 1 < l and s[ind] == s[ind + 1]:\n            c += 1\n            ind += 2\n        elif ind + 2 < l and s[ind] != s[ind + 1] and (s[ind] == s[ind + 2]):\n            c += 1\n            ind += 3\n        else:\n            ind += 1\n    print(c)", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    s = input()\n    s = list(s)\n    l = len(s)\n    count = 0\n    if l == 0 or l == 1:\n        print(0)\n        continue\n    if l == 2 and s[0] == s[1]:\n        print(1)\n        continue\n    elif l == 2 and s[0] != s[1]:\n        print(0)\n        continue\n    if s[0] == s[1]:\n        count += 1\n        s[1] = 0\n    for i in range(1, l - 1):\n        if s[i - 1] == s[i + 1] and s[i - 1] != 0:\n            count += 1\n            s[i + 1] = 0\n        if s[i] == s[i + 1] and s[i] != 0:\n            count += 1\n            s[i + 1] = 0\n    print(count)", "from sys import stdin, stdout\nn = int(stdin.readline())\nfor _ in range(n):\n    s = input()\n    n1 = len(s)\n    if n1 == 1:\n        print(0)\n    else:\n        (l, c) = ([], 0)\n        for x in s:\n            l.append(ord(x))\n        v = 123\n        for x in range(n1 - 2):\n            if l[x] == l[x + 1]:\n                c += 1\n                l[x + 1] = v\n                v += 1\n            if l[x] == l[x + 2]:\n                c += 1\n                l[x + 2] = v\n                v += 1\n        if l[-2] == l[-1]:\n            c += 1\n        print(c)", "def not_pl(string):\n    count = 0\n    c1 = c2 = None\n    for c in string:\n        if c1 == c or c2 == c:\n            count += 1\n            c = None\n        c2 = c1\n        c1 = c\n    return count\nfor _ in range(int(input())):\n    print(not_pl(input()))", "for i1 in range(int(input())):\n    s = list(input())\n    if len(s) == 1:\n        print(0)\n        continue\n    count = 0\n    ch = 123\n    if s[1] == s[0]:\n        s[1] = ch\n        count += 1\n    for i in range(2, len(s)):\n        if s[i] == s[i - 1] or s[i] == s[i - 2]:\n            s[i] = ch\n            ch = ch - 1\n            count += 1\n    print(count)", "import math\nt = int(input())\nfor i in range(t):\n    s = input()\n    s = list(s)\n    l = len(s)\n    if l == 1:\n        print(0)\n    elif l == 2:\n        if s[0] == s[1]:\n            print(1)\n        else:\n            print(0)\n    else:\n        j = 0\n        c = 0\n        while j < l:\n            if j == l - 1:\n                break\n            elif j == l - 2:\n                if s[j] == s[j + 1]:\n                    c += 1\n                break\n            elif s[j] == s[j + 1] and s[j + 1] == s[j + 2]:\n                c += 2\n                j += 3\n            elif s[j] == s[j + 2]:\n                c += 1\n                s[j + 2] = str(j)\n                j += 1\n            elif s[j] == s[j + 1]:\n                c += 1\n                j += 2\n            else:\n                j += 1\n        print(c)", "t = int(input())\nfor testcase in range(t):\n    s = input()\n    arr = [char for char in s]\n    if len(s) == 1:\n        print(0)\n        continue\n    if len(s) == 2:\n        if s[0] == s[1]:\n            print('1')\n            continue\n        else:\n            print(0)\n            continue\n    for i in range(1, len(s)):\n        if arr[i] == arr[i - 1]:\n            arr[i] = '*'\n        if i >= 2:\n            if arr[i] == arr[i - 2]:\n                arr[i] = '*'\n    ans = 0\n    for char in arr:\n        if char == '*':\n            ans += 1\n    print(ans)", "def min_nLettersToChange(poem):\n    (total, holdWhenLetterChanged, iChangedLetter) = (0, 0, -1)\n    for iLetter in range(len(poem) - 4):\n        if holdWhenLetterChanged:\n            holdWhenLetterChanged -= 1\n            continue\n        (letter1, letter2, letter3, letter4) = (poem[iLetter], poem[iLetter + 1], poem[iLetter + 2], poem[iLetter + 3])\n        if letter1 == letter3:\n            if letter2 == letter3:\n                total += 2\n                holdWhenLetterChanged = 2\n            elif letter2 == letter4:\n                total += 2\n                holdWhenLetterChanged = 3\n            else:\n                total += 1\n                holdWhenLetterChanged = 2\n        elif letter1 == letter2:\n            total += 1\n            holdWhenLetterChanged = 1\n    return total\nnTestCases = int(input())\ntuple((print(min_nLettersToChange(testCase)) for testCase in (input() + '123' for x in range(nTestCases))))", "def min_nLettersToChange(poem):\n    total = holdWhenLetterChanged = 0\n    for iLetter in range(len(poem) - 4):\n        if holdWhenLetterChanged:\n            holdWhenLetterChanged -= 1\n            continue\n        (letter1, letter2) = (poem[iLetter], poem[iLetter + 1])\n        if letter1 == poem[iLetter + 2]:\n            if letter1 == letter2:\n                total += 2\n                holdWhenLetterChanged = 2\n            elif letter2 == poem[iLetter + 3]:\n                total += 2\n                holdWhenLetterChanged = 3\n            else:\n                total += 1\n                holdWhenLetterChanged = 2\n        elif letter1 == letter2:\n            total += 1\n            holdWhenLetterChanged = 1\n    return total\nnTestCases = int(input())\ntuple((print(min_nLettersToChange(testCase)) for testCase in (input() + '123' for x in range(nTestCases))))", "def main():\n    t = int(input())\n    for i in range(t):\n        numLetters = 0\n        poem = list(input())\n        for i in range(1, len(poem)):\n            if poem[i] == poem[i - 1] and i - 1 >= 0 or (poem[i] == poem[i - 2] and i - 2 >= 0):\n                poem[i] = '#'\n                numLetters += 1\n        print(numLetters)\nmain()", "rep = '0'\n\ndef cerbero(poema):\n    md = 0\n    for i in range(0, len(poema) - 1):\n        if len(poema) == 1:\n            break\n        if not poema[i].isdigit():\n            if i < len(poema) - 2:\n                if i + 2 <= len(poema):\n                    if poema[i] == poema[i + 2]:\n                        poema[i + 2] = rep\n                        md += 1\n            if poema[i] == poema[i + 1]:\n                poema[i + 1] = rep\n                md += 1\n    return md\nn = int(input())\nfor i in range(0, n):\n    poema = list(input())\n    x = cerbero(poema)\n    print(x)", "t = int(input())\nfor i in range(t):\n    orpheus = input()\n    dp = []\n    result = 0\n    for j in range(len(orpheus)):\n        if j > 1 and orpheus[j] == orpheus[j - 2] and (not dp[len(dp) - 2]):\n            result += 1\n            dp.append(True)\n            continue\n        elif j > 0 and orpheus[j] == orpheus[j - 1] and (not dp[len(dp) - 1]):\n            result += 1\n            dp.append(True)\n            continue\n        dp.append(False)\n    print(result)", "for _ in range(int(input())):\n    poem = list(input())\n    ans1 = 0\n    index = 1\n    if len(poem) > 2:\n        while index <= len(poem) - 2:\n            if poem[index] == poem[index + 1] and poem[index] == poem[index - 1]:\n                ans1 += 2\n                index += 3\n            elif poem[index] == poem[index - 1]:\n                ans1 += 1\n                poem[index] = str(index)\n                index += 1\n            elif poem[index] == poem[index + 1]:\n                ans1 += 1\n                poem[index + 1] = str(index)\n                index += 1\n            elif poem[index - 1] == poem[index + 1]:\n                ans1 += 1\n                poem[index + 1] = str(index)\n                index += 1\n            else:\n                index += 1\n        if index == len(poem) - 1:\n            if poem[-1] == poem[-2]:\n                ans1 += 1\n    elif len(poem) == 2:\n        if poem[0] == poem[1]:\n            ans1 += 1\n    print(ans1)", "def cs(s):\n    c = 0\n    used = list((0 for i in range(len(s))))\n    for i in range(1, len(s)):\n        if i > 1 and s[i] == s[i - 2] and (used[i - 2] == 0):\n            used[i] = 1\n            c += 1\n        if s[i] == s[i - 1] and used[i - 1] == 0:\n            used[i] = 1\n            c += 1\n    return c\nt = int(input())\nwhile t > 0:\n    s = input()\n    if len(s) > 2:\n        print(cs(s))\n    elif len(s) == 2 and s[0] != s[1]:\n        print(0)\n    elif len(s) == 2:\n        print(1)\n    else:\n        print(0)\n    t -= 1", "def min_nLettersToChange(poem):\n    (total, holdWhenLetterChanged, iChangedLetter) = (0, 0, -1)\n    for iLetter in range(len(poem) - 4):\n        if holdWhenLetterChanged:\n            holdWhenLetterChanged -= 1\n            continue\n        (letter1, letter2, letter3, letter4) = (poem[iLetter], poem[iLetter + 1], poem[iLetter + 2], poem[iLetter + 3])\n        if letter1 == letter2 or letter1 == letter3:\n            if letter1 == letter3:\n                if letter2 == letter3:\n                    total += 2\n                    holdWhenLetterChanged = 2\n                elif letter2 == letter4:\n                    total += 2\n                    holdWhenLetterChanged = 3\n                else:\n                    total += 1\n                    holdWhenLetterChanged = 2\n            else:\n                total += 1\n                holdWhenLetterChanged = 1\n    return total\nnTestCases = int(input())\ntuple((print(min_nLettersToChange(testCase)) for testCase in (input() + '123' for x in range(nTestCases))))", "t = int(input())\nfor i in range(t):\n    s = input()\n    ans = 0\n    marked = set()\n    for j in range(len(s) - 1):\n        if j not in marked:\n            if s[j] == s[j + 1]:\n                marked.add(j + 1)\n                ans += 1\n            if j + 2 < len(s) and s[j] == s[j + 2]:\n                marked.add(j + 2)\n                ans += 1\n    print(ans)", "T = int(input())\nfor tc in range(T):\n    poem = input()\n    if len(poem) == 0 or len(poem) == 1:\n        print(0)\n    elif len(poem) == 2:\n        if poem[0] == poem[1]:\n            print(1)\n        else:\n            print(0)\n    else:\n        poem = list(poem)\n        count = 0\n        if poem[0] == poem[1]:\n            count += 1\n            poem[1] = '#'\n        i = 2\n        while i < len(poem):\n            if poem[i] == poem[i - 2]:\n                count += 1\n                poem[i] = '@'\n            elif poem[i] == poem[i - 1]:\n                count += 1\n                poem[i] = '%'\n            i += 1\n        print(count)", "def solve(string):\n    count = 0\n    for i in range(1, len(string)):\n        if string[i] == string[i - 1]:\n            string[i] = '#'\n            count += 1\n        elif i > 1 and string[i] == string[i - 2] and (string[i - 2] != '#'):\n            string[i] = '#'\n            count += 1\n    return count\nt = int(input())\nfor i in range(t):\n    string = list(input())\n    if len(string) <= 1:\n        print(0)\n    else:\n        print(solve(string))", "t = int(input())\nfor _ in range(t):\n    s = input()\n    changed = [0] * len(s)\n    if len(s) == 1:\n        print(0)\n    elif len(s) == 2:\n        if s[0] == s[1]:\n            print(1)\n        else:\n            print(0)\n    else:\n        res = 0\n        changedindex = 1\n        i = 1\n        while i < len(s) - 1:\n            mid = s[i] if changed[i] == 0 else changed[i]\n            next = s[i + 1] if changed[i + 1] == 0 else changed[i + 1]\n            previous = s[i - 1] if changed[i - 1] == 0 else changed[i - 1]\n            if previous != mid and mid != next and (previous != next):\n                pass\n            elif previous == mid and mid != next and (previous != next):\n                changed[i] = changedindex\n                changedindex += 1\n                res += 1\n            elif previous != mid and mid == next and (previous != next):\n                changed[i + 1] = changedindex\n                changedindex += 1\n                res += 1\n            elif previous != mid and mid != next and (previous == next):\n                changed[i + 1] = changedindex\n                changedindex += 1\n                res += 1\n            elif previous == mid and mid == next and (previous == next):\n                changed[i + 1] = changedindex\n                changedindex += 1\n                res += 1\n                changed[i] = changedindex\n                changedindex += 1\n                res += 1\n            i += 1\n        print(res)", "from itertools import count\nfor _ in range(int(input())):\n    S = input()\n    n = len(S)\n    A = [True] * n\n    for i in range(1, n):\n        if A[i - 1] and S[i - 1] == S[i]:\n            A[i] = False\n        elif i > 1 and A[i - 2] and (S[i - 2] == S[i]):\n            A[i] = False\n    print(A.count(False))", "rep = '0'\n\ndef caninePoem(poem):\n    mod = 0\n    for i in range(0, len(poem) - 1):\n        if len(poem) == 1:\n            break\n        if not poem[i].isdigit():\n            if i < len(poem) - 2:\n                if i + 2 <= len(poem):\n                    if poem[i] == poem[i + 2]:\n                        poem[i + 2] = rep\n                        mod += 1\n            if poem[i] == poem[i + 1]:\n                poem[i + 1] = rep\n                mod += 1\n    return mod\nnum = int(input())\nfor i in range(0, num):\n    poem = list(input())\n    x = caninePoem(poem)\n    print(x)", "t = int(input())\nwhile t:\n    t -= 1\n    N = list(input())\n    c = 0\n    for i in range(1, len(N)):\n        if N[i] == N[i - 1] or (i > 1 and N[i] == N[i - 2]):\n            N[i] = '*'\n            c += 1\n    print(c)", "for _ in range(int(input())):\n    pal = list(input())\n    cont = 0\n    for j in range(1, len(pal)):\n        if pal[j] == pal[j - 1] or (j > 1 and pal[j] == pal[j - 2]):\n            pal[j] = ''\n            cont += 1\n    print(cont)", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    ans = 0\n    used = [False] * n\n    for i in range(1, n):\n        temp = False\n        if i == 1:\n            if s[i] == s[i - 1] and (not used[i - 1]):\n                temp = True\n        else:\n            if s[i] == s[i - 1] and (not used[i - 1]):\n                temp = True\n            if s[i] == s[i - 2] and (not used[i - 2]):\n                temp = True\n        used[i] = temp\n        ans += int(temp)\n    print(ans)", "tc = int(input())\nfor _ in range(tc):\n    st = input()\n    s = list(st)\n    count = 0\n    if len(s) == 1:\n        print(0)\n    else:\n        for i in range(1, len(s)):\n            if s[i] == s[i - 1]:\n                count += 1\n                s[i] = str(i)\n            if i != 1 and s[i] == s[i - 2]:\n                count += 1\n                s[i] = str(i)\n        print(count)", "t = int(input())\nfor _ in range(t):\n    s = list(input())\n    c = 0\n    for i in range(1, len(s)):\n        if i >= 2 and s[i] == s[i - 2] or s[i] == s[i - 1]:\n            c += 1\n            s[i] = '@'\n    print(c)", "t = int(input())\nfor _ in range(t):\n    l = input()\n    i = 1\n    c = 0\n    n = len(l)\n    if n == 1:\n        print(0)\n        continue\n    vis = [0] * n\n    while i < n:\n        if i > 1:\n            if vis[i - 2] == 0 and l[i - 2] == l[i]:\n                c += 1\n                vis[i] = 1\n        if vis[i - 1] == 0:\n            if l[i - 1] == l[i]:\n                c += 1\n                vis[i] = 1\n        i += 1\n    print(c)", "alph = 'abcdefghijklmnopqrstuvwxyz'\nfor _ in range(int(input())):\n    s = input()\n    t = 0\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1] or (i > 1 and s[i] == s[i - 2]):\n            t += 1\n            a = alph\n            for c in [i - 1, i - 2, i + 1, i + 2]:\n                try:\n                    a = a.replace(s[c], '')\n                except:\n                    pass\n            s = s[:i] + a[20] + s[i + 1:]\n    print(t)", "def cs(s):\n    c = 0\n    used = [0] * len(s)\n    for i in range(1, len(s)):\n        if i > 1 and s[i] == s[i - 2] and (used[i - 2] == 0):\n            used[i] = 1\n            c += 1\n        if s[i] == s[i - 1] and used[i - 1] == 0:\n            used[i] = 1\n            c += 1\n    return c\nt = int(input())\nwhile t > 0:\n    s = input()\n    if len(s) > 2:\n        print(cs(s))\n    elif len(s) == 2 and s[0] != s[1]:\n        print(0)\n    elif len(s) == 2:\n        print(1)\n    else:\n        print(0)\n    t -= 1", "for t in range(int(input())):\n    s = list(input())\n    ans = 0\n    for i in range(1, len(s)):\n        if i - 2 >= 0 and (s[i] == s[i - 1] or s[i - 2] == s[i]):\n            s[i] = '-'\n            ans += 1\n        elif s[i] == s[i - 1]:\n            s[i] = '-'\n            ans += 1\n    print(ans)", "def solve(poem):\n    index = 0\n    ans = 0\n    while index < len(poem) - 1:\n        if poem[index] == poem[index + 1] and poem[index] != '!':\n            poem[index + 1] = '!'\n            ans += 1\n        if index + 2 < len(poem):\n            if poem[index] == poem[index + 2] and poem[index] != '!':\n                poem[index + 2] = '!'\n                ans += 1\n        index += 1\n    return ans\nfor x in range(int(input())):\n    print(solve(list(input())))", "import sys\nt = int(input())\nfor _ in range(t):\n    s = list(input())\n    i = 0\n    n = len(s)\n    res = 0\n    while i < n - 1:\n        if i + 1 < n and s[i] == s[i + 1] == '_':\n            i += 1\n            continue\n        if i + 2 < n and s[i] == s[i + 1] == s[i + 2]:\n            res += 2\n            s[i + 1] = s[i + 2] = '_'\n        elif i + 2 < n and s[i] == s[i + 2]:\n            res += 1\n            s[i + 2] = '_'\n        elif i + 1 < n and s[i] == s[i + 1]:\n            res += 1\n            s[i + 1] = '_'\n        i += 1\n    print(res)", "def solve(s):\n    n = len(s)\n    replaced = [0] * n\n    res = 0\n    for i in range(1, n):\n        cur_replaced = 0\n        if s[i] == s[i - 1] and replaced[i - 1] == 0:\n            cur_replaced = 1\n        if i >= 2 and s[i] == s[i - 2] and (replaced[i - 2] == 0):\n            cur_replaced = 1\n        replaced[i] = cur_replaced\n        res += cur_replaced\n    return res\ntt = int(input())\nwhile tt > 0:\n    tt -= 1\n    s = input()\n    print(solve(s))", "def solve(s):\n    ans = 0\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1] or (i >= 2 and s[i] == s[i - 2]):\n            s[i] = '0'\n            ans += 1\n    return ans\nfor t in range(int(input())):\n    s = list(input())\n    print(solve(s))", "from math import *\nfrom collections import *\nfrom functools import *\nfrom bisect import *\nfrom itertools import *\nfrom heapq import *\nfrom statistics import *\ninf = float('inf')\nninf = -float('inf')\nip = input\nalphal = 'abcdefghijklmnopqrstuvwxyz'\nalphau = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\ndef ipl():\n    return list(map(int, ip().split()))\n\ndef ipn():\n    return int(ip())\n\ndef ipf():\n    return float(ip())\n\ndef solve():\n    s = ip()\n    n = len(s)\n    r = 0\n    i = 1\n    u = [False] * n\n    while i < n:\n        if s[i] == s[i - 1] and (not u[i - 1]):\n            u[i] = True\n        if i > 1 and s[i] == s[i - 2] and (not u[i - 2]):\n            u[i] = True\n        r += u[i]\n        i += 1\n    print(r)\nfor _ in range(ipn()):\n    solve()", "def remove_palindromes(poem):\n    changes = 0\n    length = len(poem)\n    for letterIndex in range(1, length):\n        if poem[letterIndex] == poem[letterIndex - 1]:\n            poem[letterIndex] = 1\n            changes += 1\n        elif letterIndex >= 2 and poem[letterIndex] == poem[letterIndex - 2]:\n            poem[letterIndex] = 1\n            changes += 1\n    return changes\nn = int(input())\nfor _ in range(n):\n    poem = list(input())\n    print(remove_palindromes(poem))", "t = int(input())\nwhile t:\n    t -= 1\n    N = list(input())\n    c = 0\n    for i in range(1, len(N)):\n        if N[i] == N[i - 1] or (i > 1 and N[i] == N[i - 2]):\n            N[i] = '*'\n            c += 1\n    print(c)", "t = int(input())\nwhile t:\n    t -= 1\n    N = list(input())\n    c = 0\n    for i in range(1, len(N)):\n        if N[i] == N[i - 1] or (i > 1 and N[i] == N[i - 2]):\n            N[i] = '*'\n            c += 1\n    print(c)", "t = int(input())\nwhile t:\n    t -= 1\n    N = list(input())\n    c = 0\n    for i in range(1, len(N)):\n        if N[i] == N[i - 1] or (i > 1 and N[i] == N[i - 2]):\n            N[i] = '*'\n            c += 1\n    print(c)", "def canine(s):\n    ans = 0\n    prev1 = s[0]\n    prev2 = ''\n    for i in range(1, len(s)):\n        if s[i] == prev1 or s[i] == prev2:\n            ans += 1\n            prev2 = prev1\n            prev1 = ''\n        else:\n            prev2 = prev1\n            prev1 = s[i]\n    return ans\nfor i in range(int(input())):\n    s = input()\n    print(canine(s))", "def CaninePoetry(s):\n    n = len(s)\n    c = 0\n    if n == 1:\n        return 0\n    elif n == 2:\n        if s[0] == s[1]:\n            return 1\n        else:\n            return 0\n    for i in range(1, n):\n        if i >= 2 and s[i] == s[i - 2]:\n            c = c + 1\n            s[i] = 'A'\n        elif s[i] == s[i - 1]:\n            c = c + 1\n            s[i] = 'A'\n    return c\nt = int(input())\nfor tt in range(t):\n    s = list(input())\n    ans = CaninePoetry(s)\n    print(ans)", "for i in range(int(input())):\n    n = list(input())\n    summ = 0\n    for j in range(1, len(n) - 1):\n        if n[j - 1] == n[j + 1] != '-' or n[j] == n[j + 1] != '-':\n            n[j + 1] = '-'\n            summ += 1\n        if n[j - 1] == n[j] != '-':\n            n[j] = '-'\n            summ += 1\n    if len(n) == 2 and n[0] == n[1]:\n        print('1')\n    else:\n        print(summ)", "t = int(input())\nfor Z in range(t):\n    s = input()\n    l = list(s)\n    n = len(l)\n    if n == 1:\n        print(0)\n    elif n == 2:\n        if s[0] == s[1]:\n            print(1)\n        else:\n            print(0)\n    else:\n        count = 0\n        if l[1] == l[0]:\n            l[1] = '*'\n            count += 1\n        for i in range(2, n):\n            if l[i - 2] != '*' and l[i - 2] == l[i]:\n                l[i] = '*'\n                count += 1\n            if l[i - 1] != '*' and l[i - 1] == l[i]:\n                l[i] = '*'\n                count += 1\n        print(count)", "t = int(input())\nk = 0\nfor _ in range(t):\n    x = list(input())\n    ans = 0\n    if len(x) == 1:\n        print(0)\n    elif len(x) == 2:\n        if x[0] == x[1]:\n            print(1)\n        else:\n            print(0)\n    else:\n        n = len(x)\n        for i in range(1, n):\n            if x[i] == x[i - 1]:\n                ans += 1\n                x[i] = k\n                k += 1\n            if i > 1:\n                if x[i] == x[i - 2]:\n                    ans += 1\n                    x[i] = k\n                    k += 1\n        print(ans)", "for _ in range(int(input())):\n    a = list(input())\n    diff = 0\n    if len(a) == 1:\n        print(0)\n    elif len(a) == 2:\n        if a[0] == a[1]:\n            print(1)\n        else:\n            print(0)\n    else:\n        for i in range(1, len(a)):\n            if a[i] == a[i - 1]:\n                a[i] = '0'\n                diff += 1\n            elif i - 2 >= 0:\n                if a[i] == a[i - 2]:\n                    a[i] = '0'\n                    diff += 1\n        print(diff)", "def diversity(s, n):\n    if n == 0 or n == 1:\n        return 0\n    if n == 2:\n        if s[0] == s[1]:\n            return 1\n        else:\n            return 0\n    count = 0\n    a = ['n'] * n\n    for i in range(n - 2):\n        if s[i] == s[i + 1] and a[i] == 'n' and (a[i + 1] == 'n'):\n            count += 1\n            a[i + 1] = 'c'\n        if s[i] == s[i + 2] and a[i] == 'n' and (a[i + 2] == 'n'):\n            count += 1\n            a[i + 2] = 'c'\n    if s[-1] == s[-2] and a[-1] == 'n' and (a[-2] == 'n'):\n        count += 1\n    return count\nt = int(input())\nfor _ in range(t):\n    s = input()\n    print(diversity(s, len(s)))", "def diversity(s, n):\n    if n == 0 or n == 1:\n        return 0\n    if n == 2:\n        if s[0] == s[1]:\n            return 1\n        else:\n            return 0\n    count = 0\n    a = ['n'] * n\n    for i in range(n - 2):\n        if s[i] == s[i + 1] and a[i] == 'n' and (a[i + 1] == 'n'):\n            count += 1\n            a[i + 1] = 'c'\n        if s[i] == s[i + 2] and a[i] == 'n' and (a[i + 2] == 'n'):\n            count += 1\n            a[i + 2] = 'c'\n    if s[-1] == s[-2] and a[-1] == 'n' and (a[-2] == 'n'):\n        count += 1\n    return count\nt = int(input())\nfor _ in range(t):\n    s = input()\n    print(diversity(s, len(s)))", "for _ in range(int(input())):\n    a = input()\n    b = len(a)\n    (c, d) = ([], 0)\n    if b == 1:\n        print(0)\n        continue\n    for _ in range(b):\n        c.append(0)\n    if a[0] == a[1]:\n        c[1] = 1\n        d += 1\n    for _ in range(2, b):\n        if c[_ - 2] == 0 and a[_] == a[_ - 2]:\n            c[_] = 1\n            d += 1\n        if c[_ - 2] == 0 and a[_ - 1] == a[_ - 2] and (c[_ - 1] == 0):\n            c[_ - 1] = 1\n            d += 1\n    if c[b - 1] == 0 and c[b - 2] == 0 and (a[b - 1] == a[b - 2]):\n        d += 1\n    print(d)", "def chec_pal(s):\n    if s[0] == s[2]:\n        return True\n    else:\n        return False\nfor _ in range(int(input())):\n    s = input()\n    ans = 0\n    if len(s) == 1 or len(set(s)) == len(s):\n        print(0)\n    else:\n        n = len(s)\n        p = list(s)\n        ans = 0\n        j = 1\n        d = 0\n        for i in range(1, n):\n            if p[i] == p[i - 1]:\n                p[i] = d\n                d += 1\n                ans += 1\n            if i >= 2:\n                if chec_pal(p[i - 2:i + 1]):\n                    p[i] = d\n                    d += 1\n                    ans += 1\n        print(ans)", "for t in range(int(input())):\n    s = input()\n    sch = 0\n    if len(s) > 1:\n        sup = s[0]\n        if s[0] == s[1]:\n            sup += '*'\n            sch += 1\n        else:\n            sup += s[1]\n        for i in range(1, len(s) - 1):\n            if sup[i] == s[i + 1] or sup[i - 1] == s[i + 1]:\n                sup += '*'\n                sch += 1\n            else:\n                sup += s[i + 1]\n    print(sch)", "def solution():\n    for tc in range(int(input())):\n        cnt = 0\n        ls = list(input())\n        for i in range(len(ls) - 1):\n            if i == 0:\n                if ls[i] == ls[i + 1]:\n                    ls[i + 1] = '#'\n                    cnt += 1\n            elif ls[i] != '#' and ls[i] == ls[i + 1]:\n                ls[i + 1] = '#'\n                cnt += 1\n            elif ls[i - 1] != '#' and ls[i - 1] == ls[i + 1]:\n                ls[i + 1] = '#'\n                cnt += 1\n        print(cnt)\nsolution()", "t = input()\n\ndef isPal(s):\n    return s == s[::-1] and s[0] != '!'\nfor test in range(int(t)):\n    s = list(input())\n    count = 0\n    if len(s) == 1:\n        print(0)\n    elif len(s) == 2:\n        if isPal(s):\n            print(1)\n        else:\n            print(0)\n    else:\n        if s[1] == s[0]:\n            count = count + 1\n            s[1] = '!'\n        for i in range(len(s) - 2):\n            j = i + 2\n            if isPal(s[j - 1:j + 1]) or isPal(s[j - 2:j + 1]):\n                count = count + 1\n                s[j] = '!'\n        print(count)", "n = int(input())\nfor x in range(n):\n    word = list(input())\n    count = 0\n    if len(word) == 1:\n        print(0)\n        continue\n    elif len(word) == 2:\n        if word[0] == word[1]:\n            print(1)\n        else:\n            print(0)\n        continue\n    else:\n        for y in range(0, len(word) - 2):\n            if word[y] == word[y + 2] and word[y] != '0' and (word[y + 2] != '0'):\n                if y - 1 >= 0:\n                    if word[y - 1] == word[y]:\n                        word[y] = '0'\n                        count += 1\n                        continue\n                word[y + 2] = '0'\n                count += 1\n        for y in range(0, len(word) - 1):\n            if word[y] == word[y + 1] and word[y] != '0':\n                word[y] = '0'\n                count += 1\n    print(count)", "for _ in range(int(input())):\n    s = input()\n    c = [0] * len(s)\n    if len(s) == 1:\n        print(0)\n    elif len(s) == 2:\n        if s[0] != s[1]:\n            print(0)\n        else:\n            print(1)\n    else:\n        if s[0] == s[1]:\n            c[1] = 1\n        for i in range(2, len(s)):\n            if s[i] == s[i - 1] and c[i - 1] == 0 or (s[i] == s[i - 2] and c[i - 2] == 0):\n                c[i] = 1\n        print(sum(c))", "for t in range(0, int(input())):\n    s = list(input())\n    i = 1\n    ans = 0\n    if len(s) == 2 and s[0] == s[1]:\n        ans = 1\n    else:\n        while i < len(s) - 1:\n            if s[i - 1] == s[i] and s[i + 1] == s[i]:\n                (s[i], s[i + 1]) = ('0', '0')\n                i += 2\n                ans += 2\n            elif s[i] == s[i - 1] and s[i] != '0':\n                s[i] = '0'\n                i += 1\n                ans += 1\n            elif s[i] == s[i + 1] and s[i] != '0':\n                s[i + 1] = '0'\n                i += 1\n                ans += 1\n            elif s[i - 1] == s[i + 1]:\n                s[i + 1] = '0'\n                i += 1\n                ans += 1\n            else:\n                i += 1\n    print(ans)", "for _ in range(int(input())):\n    a = list(input())\n    b = 0\n    for i in range(1, len(a)):\n        if i >= 2 and a[i] == a[i - 2] or a[i] == a[i - 1]:\n            b += 1\n            a[i] = 'A'\n    print(b)", "for _ in range(int(input())):\n    s = input()\n    ar = list(s)\n    m = 0\n    for i in range(1, len(ar)):\n        if ar[i] == ar[i - 1] or (i >= 2 and ar[i] == ar[i - 2]):\n            m = m + 1\n            ar[i] = '.'\n    print(m)"]