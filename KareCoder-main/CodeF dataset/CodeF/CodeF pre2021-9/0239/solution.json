["t = int(input())\nlist_ans = []\nfor i in range(t):\n    (x, y, a, b, n) = map(int, input().split())\n    if n >= x + y - a - b:\n        list_ans.append(a * b)\n    elif n <= x - a and n <= y - b:\n        list_ans.append(min((x - n) * y, x * (y - n)))\n    elif n >= x - a and n >= y - b:\n        list_ans.append(min(a * (y - n + x - a), (x - n + y - b) * b))\n    elif n >= x - a:\n        list_ans.append(min(a * (y - n + x - a), x * (y - n)))\n    else:\n        list_ans.append(min((x - n) * y, (x - n + y - b) * b))\nfor item in list_ans:\n    print(item)", "def minProduct(a, b, x, y, n):\n    (p, q) = (a, b)\n    m = n\n    if a - x >= n:\n        a = a - n\n        n = 0\n    else:\n        n -= a - x\n        a = x\n    if b - y >= n:\n        b = b - n\n        n = 0\n    else:\n        n -= b - y\n        b = y\n    if q - y >= m:\n        q = q - m\n        m = 0\n    else:\n        m -= q - y\n        q = y\n    if p - x >= m:\n        p = p - m\n        m = 0\n    else:\n        m -= p - x\n        p = x\n    return min(a * b, p * q)\nt = int(input())\nfinal = []\nfor _ in range(t):\n    (a, b, x, y, n) = map(int, input().split())\n    final.append(minProduct(a, b, x, y, n))\nfor _ in range(t):\n    print(final[_])", "import math\nimport sys\nfrom collections import deque\nimport heapq\n\ndef inp():\n    return sys.stdin.readline().rstrip()\n\ndef mpp():\n    return map(int, inp().split())\n\ndef lis():\n    return list(mpp())\n\ndef sol(a, b, x, y, n):\n    if a - n >= x:\n        a = a - n\n        return a * b\n    else:\n        n = n - (a - x)\n        newb = b - n if b - n >= y else y\n        return x * newb\n\ndef main():\n    t = int(inp())\n    for _ in range(t):\n        (a, b, x, y, n) = mpp()\n        print(min(sol(b, a, y, x, n), sol(a, b, x, y, n)))\nmain()", "for g in [*open(0)][1:]:\n    (a, b, x, y, n) = map(int, g.split())\n    c1 = max(x, a - n)\n    c2 = max(y, b - n)\n    if c1 < c2:\n        print(c1 * max(b - n + a - c1, y))\n    else:\n        print(c2 * max(a - n + b - c2, x))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (a, b, x, y, n) = map(int, input().split())\n    print(min(max(a - n, x) * max(b - (n - (a - max(a - n, x))), y), max(b - n, y) * max(a - (n - (b - max(b - n, y))), x)))", "num_inp = lambda : int(input())\narr_inp = lambda : list(map(int, input().split()))\nsp_inp = lambda : map(int, input().split())\nstr_inp = lambda : input()\nfor s in [*open(0)][1:]:\n    (a, b, x, y, n) = map(int, s.split())\n    c = max(x, a - n)\n    d = max(y, b - n)\n    print(min(c * max(y, a + b - n - c), d * max(x, a + b - n - d)))", "import math\n\ndef inp():\n    return int(input().strip())\n\ndef inlt():\n    return list(map(int, input().rstrip().split()))\n\ndef solution(a, b, x, y, n):\n    (ma, mb) = (max(x, a - n), max(y, b - n))\n    if ma < mb:\n        n = n - (a - ma)\n        a = ma\n        b = max(y, b - n)\n    else:\n        n = n - (b - mb)\n        b = mb\n        a = max(x, a - n)\n    return a * b\nt = inp()\nresult = []\nwhile t:\n    t -= 1\n    (a, b, x, y, n) = inlt()\n    result.append(solution(a, b, x, y, n))\nfor r in result:\n    print(r)", "import sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_ints():\n    return map(int, sys.stdin.readline().split(' '))\nt = read_int()\nfor case_num in range(t):\n    (a, b, x, y, n) = read_ints()\n    n1 = min(n, a - x)\n    ans = (a - n1) * (b - min(n - n1, b - y))\n    n2 = min(n, b - y)\n    ans = min(ans, (b - n2) * (a - min(n - n2, a - x)))\n    print(ans)", "import sys\nIN = sys.stdin.readline\nout = []\nfor _ in range(int(IN())):\n    (a, b, x, y, n) = map(int, IN().split())\n    if a - min(a - x, n) < b - min(b - y, n):\n        (a, b) = (b, a)\n        (x, y) = (y, x)\n    d = min(b - y, n)\n    b -= d\n    n -= d\n    a -= min(a - x, n)\n    out.append(str(a * b))\nprint('\\n'.join(out))", "t = int(input())\nans = ''\nfor _ in range(t):\n    A = [int(i) for i in input().split()]\n    a = A[0]\n    b = A[1]\n    x = A[2]\n    y = A[3]\n    n = A[4]\n    u = a - x\n    v = b - y\n    if u >= n:\n        a1 = a - n\n        b1 = b\n    else:\n        a1 = x\n        b1 = max(y, b + u - n)\n    if v >= n:\n        b2 = b - n\n        a2 = a\n    else:\n        b2 = y\n        a2 = max(x, a + v - n)\n    ans += str(min(a1 * b1, a2 * b2)) + '\\n'\nprint(ans)", "def answer(a, b, x, y, n):\n    amin = True\n    if a > b:\n        amin = False\n    xbinding = False\n    if n - a < x:\n        xbinding = True\n    ybinding = False\n    if n - b < y:\n        ybinding = True\n    if amin and (not xbinding):\n        a -= n\n        return a * b\n    if not amin and (not ybinding):\n        b -= n\n        return a * b\n    return\n\ndef answer2(a, b, x, y, n):\n    a_sma = max(x, a - n)\n    b_sma = max(y, b - n)\n    if a_sma <= b_sma:\n        b -= n - (a - a_sma)\n        return a_sma * max(b, b_sma)\n    else:\n        a -= n - (b - b_sma)\n        return b_sma * max(a, a_sma)\n\ndef main():\n    t = int(input())\n    a = [0] * t\n    b = [0] * t\n    x = [0] * t\n    y = [0] * t\n    n = [0] * t\n    for j in range(t):\n        (a[j], b[j], x[j], y[j], n[j]) = [int(i) for i in input().split()]\n    for j in range(t):\n        print(answer2(a[j], b[j], x[j], y[j], n[j]))\nmain()", "from collections import deque\nimport sys\ninf = float('inf')\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (a, b, x, y, n) = map(int, input().split())\n    n2 = n\n    if a - x < n:\n        first = x * max(y, b - (n - (a - x)))\n    else:\n        first = (a - n) * b\n    if b - y < n:\n        second = y * max(x, a - (n - (b - y)))\n    else:\n        second = (b - n) * a\n    print(min(first, second))", "import math\n\ndef inp():\n    return int(input().strip())\n\ndef inlt():\n    return list(map(int, input().rstrip().split()))\n\ndef solution(a, b, x, y, n):\n    m = min(n, a - x)\n    a -= m\n    n -= m\n    m = min(n, b - y)\n    b -= m\n    return a * b\nt = inp()\nresult = []\nwhile t:\n    t -= 1\n    (a, b, x, y, n) = inlt()\n    result.append(min(solution(a, b, x, y, n), solution(b, a, y, x, n)))\nfor r in result:\n    print(r)", "def red_by_n(a, b, x, y, n):\n    upd_a = max(x, a - n)\n    rem_n = max(0, n - (a - x))\n    upd_b = max(y, b - rem_n)\n    return upd_a * upd_b\nfor s in [*open(0)][1:]:\n    (a, b, x, y, n) = map(int, s.split())\n    print(min(red_by_n(a, b, x, y, n), red_by_n(b, a, y, x, n)))", "import sys\n\ndef get_first(a, b, x, y, n):\n    d = min(n, a - x)\n    a -= d\n    n -= d\n    d = min(n, b - y)\n    b -= d\n    n -= d\n    return a * b\n\ndef get_second(a, b, x, y, n):\n    d = min(n, b - y)\n    b -= d\n    n -= d\n    d = min(n, a - x)\n    a -= d\n    n -= d\n    return a * b\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    (a, b, x, y, n) = map(int, sys.stdin.readline().split())\n    print(min(get_first(a, b, x, y, n), get_second(a, b, x, y, n)))", "import sys\nsi = sys.stdin.readline\n\ndef main():\n    t = int(si())\n    while t:\n        t -= 1\n        (a, b, x, y, n) = [int(e) for e in si().split()]\n        (smalla, smallb) = (a - min(a - x, n), b - min(b - y, n))\n        if smallb < smalla:\n            (a, b) = (b, a)\n            (x, y) = (y, x)\n        if a - x < n:\n            n -= a - x\n            a = x\n            if b - y < n:\n                b = y\n            else:\n                b -= n\n        else:\n            a -= n\n        print(a * b)\nmain()", "import sys\ninput = sys.stdin.readline\nins = lambda : input().rstrip()\nini = lambda : int(input().rstrip())\ninm = lambda : map(int, input().rstrip().split())\ninl = lambda : list(map(int, input().split()))\nout = lambda x, s='\\n': print(s.join(map(str, x)))\nans = []\nt = ini()\nfor _ in range(t):\n    (a, b, x, y, n) = inm()\n    tmpa = min(b - y, n)\n    tmpb = min(a - x, n)\n    ans.append(min((b - tmpa) * (a - min(a - x, n - tmpa)), (a - tmpb) * (b - min(b - y, n - tmpb))))\nout(ans)", "def solve(a, b, x, y, n):\n    min1 = calc_min_moves(a, b, x, y, n)\n    min2 = calc_min_moves(b, a, y, x, n)\n    return min(min1, min2)\n\ndef calc_min_moves(a, b, x, y, n):\n    moves_a = min(n, a - x)\n    moves_b = min(n - moves_a, b - y)\n    reduced_a = a - moves_a\n    reduced_b = b - moves_b\n    return reduced_a * reduced_b\nt = int(input())\nresults = list()\nfor _ in range(0, t):\n    (a, b, x, y, n) = map(int, input().split(' '))\n    results.append(solve(a, b, x, y, n))\nfor result in results:\n    print(result)", "import sys\ninput = lambda : sys.stdin.readline()\nint_arr = lambda : list(map(int, input().split()))\nstr_arr = lambda : list(map(str, input().split()))\nget_str = lambda : map(str, input().split())\nget_int = lambda : map(int, input().split())\nget_flo = lambda : map(float, input().split())\nmod = 1000000007\n\ndef solve(a, b, x, y, n):\n    p = min(n, a - x)\n    q = min(n - p, b - y)\n    p1 = min(n, b - y)\n    q1 = min(n - p1, a - x)\n    print(min((a - p) * (b - q), (b - p1) * (a - q1)))\nfor _ in range(int(input())):\n    (a, b, x, y, n) = get_int()\n    solve(a, b, x, y, n)", "from sys import *\ninput = lambda : stdin.readline()\nint_arr = lambda : list(map(int, stdin.readline().strip().split()))\nstr_arr = lambda : list(map(str, stdin.readline().split()))\nget_str = lambda : map(str, stdin.readline().strip().split())\nget_int = lambda : map(int, stdin.readline().strip().split())\nget_float = lambda : map(float, stdin.readline().strip().split())\nmod = 1000000007\nsetrecursionlimit(1000)\nfor _ in range(int(input())):\n    (a, b, x, y, n) = get_int()\n    frst = min(n, a - x)\n    scnd = min(n - frst, b - y)\n    third = min(n, b - y)\n    fourth = min(n - third, a - x)\n    print(min((a - frst) * (b - scnd), (b - third) * (a - fourth)))", "n = input()\np = []\nfor i in range(0, int(n)):\n    l = input()\n    t = [int(i) for i in l.split() if i.isdigit()]\n    p.append(t)\nfor i in range(0, len(p)):\n    a = p[i][0]\n    b = p[i][1]\n    x = p[i][2]\n    y = p[i][3]\n    n = p[i][4]\n    if a + b - x - y >= n:\n        n1 = max(a - n, x) * (b - (n - (a - max(a - n, x))))\n        n2 = max(b - n, y) * (a - (n - (b - max(b - n, y))))\n        print(min(n1, n2))\n    else:\n        print(x * y)", "import io\nimport os\nimport sys\nimport math\nimport heapq\nimport bisect\nimport random\nimport string\nimport decimal\nimport functools\nimport fractions\nimport itertools\nimport collections\nfrom sys import stdin, stdout\nfrom io import BytesIO, IOBase\nfrom math import gcd, floor, sqrt, log, factorial\nfrom bisect import bisect_left, bisect_right\nfrom collections import deque, Counter, defaultdict, OrderedDict, namedtuple, UserDict, UserList, UserString\nMOD = 1000000007\nsys.setrecursionlimit(100000000)\nBUFSIZE = 8192\n\ndef solve(a, b, x, y, n):\n    min1 = calc_min_moves(a, b, x, y, n)\n    min2 = calc_min_moves(b, a, y, x, n)\n    return min(min1, min2)\n\ndef calc_min_moves(a, b, x, y, n):\n    moves_a = min(n, a - x)\n    moves_b = min(n - moves_a, b - y)\n    reduced_a = a - moves_a\n    reduced_b = b - moves_b\n    return reduced_a * reduced_b\nt = int(input())\nresults = []\nfor _ in range(t):\n    (a, b, x, y, n) = map(int, input().split(' '))\n    results.append(solve(a, b, x, y, n))\nfor result in results:\n    print(result)", "import sys\nsys.setrecursionlimit(10 ** 5)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\n\ndef val(a, b, x, y):\n    na = max(a - n, x)\n    d = a - na\n    nb = max(b - (n - d), y)\n    return na * nb\nfor _ in range(II()):\n    (a, b, x, y, n) = MI()\n    print(min(val(a, b, x, y), val(b, a, y, x)))", "for s in [*open(0)][1:]:\n    (a, b, x, y, n) = map(int, s.split())\n    c = min(n, a - x)\n    d = min(n, b - y)\n    print(min((a - c) * max(y, b - n + c), (b - d) * max(x, a - n + d)))", "import sys\nrl = sys.stdin.readline\nT = int(rl())\nwhile T:\n    T -= 1\n    (a, b, x, y, n) = [int(i) for i in rl().split()]\n    m1 = min(n, a - x)\n    m2 = min(n, b - y)\n    if a - m1 < b - m2:\n        a -= m1\n        n -= m1\n        b -= min(n, b - y)\n    else:\n        b -= m2\n        n -= m2\n        a -= min(n, a - x)\n    sys.stdout.write(f'{a * b}\\n')", "from sys import stdin, stdout\nt = int(stdin.readline())\nfor _ in range(t):\n    (a, b, x, y, n) = map(int, stdin.readline().split())\n    p = a * b\n    a1 = a\n    b1 = b\n    x1 = x\n    y1 = y\n    n1 = n\n    if a1 - n1 < x1:\n        n1 -= a1 - x1\n        a1 = x1\n        b1 = max(y1, b1 - n1)\n    else:\n        a1 -= n1\n    p = min(p, a1 * b1)\n    if b - n < y:\n        n -= b - y\n        b = y\n        a = max(x, a - n)\n    else:\n        b -= n\n    p = min(p, a * b)\n    print(p)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor tests in range(t):\n    (a, b, x, y, n) = map(int, input().split())\n    n1 = a - x\n    n2 = b - y\n    if n1 >= n:\n        ANS1 = (a - n) * b\n    else:\n        ANS1 = x * max(y, b - (n - n1))\n    if n2 >= n:\n        ANS2 = (b - n) * a\n    else:\n        ANS2 = y * max(x, a - (n - n2))\n    print(min(ANS1, ANS2))", "m = max\nfor s in [*open(0)][1:]:\n    (a, b, x, y, n) = map(int, s.split())\n    c = m(x, a - n)\n    d = m(y, b - n)\n    print(min(c * m(y, a + b - n - c), d * m(x, a + b - n - d)))", "from sys import stdin\ntc = int(stdin.readline())\nfor t in range(tc):\n    (a, b, x, y, n) = map(int, stdin.readline().split())\n    ma = min(a - x, n)\n    mb = min(b - y, n)\n    if a - ma < b - mb:\n        a = a - ma\n        n = n - ma\n        mb = min(b - y, n)\n        b = b - mb\n    else:\n        b = b - mb\n        n = n - mb\n        ma = min(a - x, n)\n        a = a - ma\n    print(a * b)", "m = max\nfor s in [*open(0)][1:]:\n    (a, b, x, y, n) = map(int, s.split())\n    c = m(x, a - n)\n    d = m(y, b - n)\n    print(min(c * m(y, a + b - n - c), d * m(x, a + b - n - d)))", "n = int(input())\nresults = []\nfor i in range(n):\n    abxyt = input().split()\n    a = int(abxyt[0])\n    b = int(abxyt[1])\n    x = int(abxyt[2])\n    y = int(abxyt[3])\n    t = int(abxyt[4])\n    (ac, bc, tc) = (a, b, t)\n    (opt1, opt2) = (True, True)\n    if opt1:\n        a = a - t\n        t = 0\n        if a < x:\n            t = x - a\n            a = x\n            if t != 0:\n                b = b - t\n                t = 0\n                if b < y:\n                    t = y - b\n                    b = y\n        r2 = a * b\n        (a, b, t) = (ac, bc, tc)\n    if opt2:\n        b = b - t\n        t = 0\n        if b < y:\n            t = y - b\n            b = y\n            if t != 0:\n                a = a - t\n                t = 0\n                if a < x:\n                    t = x - a\n                    a = x\n        r1 = a * b\n    if r1 < r2:\n        results.append(r1)\n    if r1 >= r2:\n        results.append(r2)\nfor r in results:\n    print(r)", "l = ''\nfor _ in range(int(input())):\n    (a, b, x, y, n) = map(int, input().split())\n    ans = 10 ** 18\n    for i in range(2):\n        aa = min(n, a - x)\n        bb = min(n - aa, b - y)\n        ans = min(ans, (a - aa) * (b - bb))\n        (a, b) = (b, a)\n        (x, y) = (y, x)\n    l += f'{ans}\\n'\nprint(l)", "from sys import stdin, stdout\n\ndef ab(a, b, x, y, n):\n    (b, n) = (b - min(n, b - y), n - min(n, b - y))\n    if n > 0:\n        a -= min(n, a - x)\n    return a * b\n\ndef ba(a, b, x, y, n):\n    (a, n) = (a - min(n, a - x), n - min(n, a - x))\n    if n > 0:\n        b -= min(n, b - y)\n    return a * b\nfor _ in range(int(stdin.readline())):\n    (a, b, x, y, n) = map(int, stdin.readline().split())\n    print(min(ab(a, b, x, y, n), ba(a, b, x, y, n)))", "t = int(input())\nans = []\nfor i in range(t):\n    l = input()\n    a = int(l.split()[0])\n    b = int(l.split()[1])\n    x = int(l.split()[2])\n    y = int(l.split()[3])\n    n = int(l.split()[4])\n    a1 = a\n    b1 = b\n    n1 = n\n    if a - x < n:\n        n = n - (a - x)\n        a = x\n        if b - y < n:\n            b = y\n        else:\n            b = b - n\n        ans1 = a * b\n    else:\n        a = a - n\n        ans1 = a * b\n    if b1 - y < n1:\n        n1 = n1 - (b1 - y)\n        b1 = y\n        if a1 - x < n1:\n            a1 = x\n        else:\n            a1 = a1 - n1\n        ans2 = a1 * b1\n    else:\n        b1 = b1 - n1\n        ans2 = a1 * b1\n    ans.append(min(ans1, ans2))\nfor i in range(len(ans)):\n    print(ans[i])", "import math, string, itertools, fractions, heapq, collections, re, array, bisect, sys, random, time\ninf = 10 ** 20\nmod = 10 ** 9 + 7\n\ndef LI():\n    return list(map(int, input().split()))\n\ndef II():\n    return int(input())\n\ndef LS():\n    return list(input().split())\n\ndef S():\n    return input()\n\ndef solve():\n    (a, b, x, y, n) = LI()\n    ans = inf\n    if a - n >= x:\n        ans = min(ans, (a - n) * b)\n    if b - n >= y:\n        ans = min(ans, a * (b - n))\n    tmp = n - (b - y)\n    if 0 <= b - y <= n:\n        tmp2 = max(x, a - tmp)\n        ans = min(ans, tmp2 * y)\n    tmp = n - (a - x)\n    if 0 <= a - x <= n:\n        tmp2 = max(y, b - tmp)\n        ans = min(ans, tmp2 * x)\n    return ans\n\ndef main():\n    t = II()\n    res = list()\n    for _ in range(t):\n        res.append(solve())\n    for ans in res:\n        print(ans)\n    return 0\nmain()", "import sys\nt = int(sys.stdin.readline())\nfor num in range(t):\n    (a, b, x, y, n) = map(int, sys.stdin.readline().strip().split())\n    (a2, b2, x2, y2, n2) = (a, b, x, y, n)\n    if a - n <= x:\n        n = n - (a - x)\n        a = x\n        if b - n <= y:\n            b = y\n        else:\n            b = b - n\n    else:\n        a = a - n\n    t1 = a * b\n    if b2 - n2 <= y2:\n        n2 = n2 - (b2 - y2)\n        b2 = y2\n        if a2 - n2 <= x2:\n            a2 = x2\n        else:\n            a2 = a2 - n2\n    else:\n        b2 = b2 - n2\n    t2 = a2 * b2\n    print(min(t1, t2))", "t = int(input())\nl = []\nfor _ in range(t):\n    ans = 0\n    (a, b, x, y, n) = [int(i) for i in input().split()]\n    (n1, n2) = (n, n)\n    if b - y >= n1:\n        ans1 = a * (b - n1)\n    else:\n        n1 -= b - y\n        if a - x >= n1:\n            ans1 = y * (a - n1)\n        else:\n            ans1 = y * x\n    if a - x >= n2:\n        ans2 = b * (a - n2)\n    else:\n        n2 -= a - x\n        if b - y >= n2:\n            ans2 = x * (b - n2)\n        else:\n            ans2 = x * y\n    ans = min(ans1, ans2)\n    l.append(ans)\nfor i in l:\n    print(i)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (a, b, x, y, n) = map(int, input().split())\n    if max(a - n, x) > max(b - n, y):\n        if b - n > y:\n            b = b - n\n            n = 0\n        else:\n            n -= b - y\n            b = y\n            if a - n > x:\n                a -= n\n            else:\n                a = x\n    elif a - n > x:\n        a = a - n\n        n = 0\n    else:\n        n -= a - x\n        a = x\n        if b - n > y:\n            b -= n\n        else:\n            b = y\n    print(a * b)", "def solve(a, b, x, y, n):\n    k = min(n, a - x)\n    a -= k\n    n -= k\n    b = max(y, b - n)\n    return a * b\nt = int(input())\nans = []\nwhile t:\n    lst = [int(num) for num in input().split()]\n    (a, b, x, y, n) = (lst[0], lst[1], lst[2], lst[3], lst[4])\n    ans.append(min(solve(a, b, x, y, n), solve(b, a, y, x, n)))\n    t -= 1\nfor a in ans:\n    print(a)", "m = max\nfor s in [*open(0)][1:]:\n    (a, b, x, y, n) = map(int, s.split())\n    c = m(x, a - n)\n    d = m(y, b - n)\n    print(min(c * m(y, a + b - n - c), d * m(x, a + b - n - d)))", "m = max\nfor s in [*open(0)][1:]:\n    (a, b, x, y, n) = map(int, s.split())\n    c = m(x, a - n)\n    d = m(y, b - n)\n    print(min(c * m(y, a + b - n - c), d * m(x, a + b - n - d)))", "def takeinput(s):\n    index = s.find(' ')\n    if index != -1:\n        temp = int(s[:index])\n        s = s[index + 1:]\n    else:\n        temp = int(s)\n    return (temp, s)\nn = int(input())\nstring = []\nfor i in range(0, n, 1):\n    string.append(input())\nfor i in range(0, n, 1):\n    (num1, string[i]) = takeinput(string[i])\n    (num2, string[i]) = takeinput(string[i])\n    (min1, string[i]) = takeinput(string[i])\n    (min2, string[i]) = takeinput(string[i])\n    (dec, string[i]) = takeinput(string[i])\n    num1t = num1\n    num2t = num2\n    if num1t - dec >= min1:\n        num1t -= dec\n    else:\n        num1t = min1\n    if num2t - dec >= min2:\n        num2t -= dec\n    else:\n        num2t = min2\n    if num1t <= num2t:\n        if num1 - dec >= min1:\n            num1 -= dec\n            dec = 0\n        else:\n            dec = dec - (num1 - min1)\n            num1 = min1\n            if num2 - dec >= min2:\n                num2 -= dec\n                dec = 0\n            else:\n                num2 = min2\n    elif num2 - dec >= min2:\n        num2 -= dec\n        dec = 0\n    else:\n        dec = dec - (num2 - min2)\n        num2 = min2\n        if num1 - dec >= min1:\n            num1 -= dec\n            dec = 0\n        else:\n            num1 = min1\n    print(num1 * num2)", "l = ''\nfor _ in range(int(input())):\n    (a, b, x, y, n) = map(int, input().split())\n    ans = 10 ** 18\n    for i in range(2):\n        aa = min(n, a - x)\n        bb = min(n - aa, b - y)\n        ans = min(ans, (a - aa) * 1 * (b - bb))\n        (a, b) = (b, a)\n        (x, y) = (y, x)\n    l += f'{ans}\\n'\nprint(l)", "import sys\n\ndef solve(a, b, x, y, n):\n    amin = max(x, a - n)\n    bmin = max(y, b - n)\n    if amin < bmin:\n        n -= a - amin\n        a = amin\n        b = max(y, b - n)\n    else:\n        n -= b - bmin\n        b = bmin\n        a = max(x, a - n)\n    return a * b\nIN = [x.strip() for x in sys.stdin.readlines()]\nT = int(IN[0])\ncur = 0\nfor ti in range(T):\n    (a, b, x, y, n) = [int(x) for x in IN[cur + 1].split(' ')]\n    res = solve(a, b, x, y, n)\n    print(res)\n    cur += 1", "import sys\nfrom math import sqrt, gcd, ceil, log, floor\nfrom bisect import bisect, bisect_left\nfrom collections import defaultdict, Counter, deque\nfrom heapq import heapify, heappush, heappop\ninput = sys.stdin.readline\nread = lambda : list(map(int, input().strip().split()))\n\ndef main():\n    for _ in range(int(input())):\n        (a, b, x, y, n) = read()\n        c = max(x, a - n)\n        d = max(y, b - n)\n        m = c * max(y, b - (n - (a - c)))\n        p = d * max(x, a - (n - (b - d)))\n        print(min(m, p))\nmain()", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor i in range(t):\n    (a, b, x, y, n) = map(int, input().split())\n    (e, f, g, h, k) = (a, b, x, y, n)\n    q = min(k, f - h)\n    f -= q\n    k -= q\n    p = min(k, e - g)\n    bhu = p\n    nhy = p\n    e -= p\n    k -= p\n    j = 0\n    al = k\n    pq = n\n    xy = 0\n    tu = 0\n    kj = n\n    p = min(n, a - x)\n    a -= p\n    n -= p\n    q = min(n, b - y)\n    b -= q\n    kjh = 0\n    n = 0\n    print(min(a * b, e * f))", "from sys import stdin, stdout\nfor _ in range(int(stdin.readline())):\n    (a, b, min_a, min_b, k) = list(map(int, stdin.readline().split()))\n    op_a = op_b = -1\n    prod1 = prod2 = float('inf')\n    if a >= min_a:\n        op_a = a - min_a\n    if b >= min_b:\n        op_b = b - min_b\n    if op_a >= 0:\n        red_a = min(op_a, k)\n        rem = k - red_a\n        remb = b - rem\n        if remb < min_b:\n            remb = min_b\n        prod1 = (a - red_a) * remb\n    if op_b >= 0:\n        red_b = min(op_b, k)\n        rem = k - red_b\n        rema = a - rem\n        if rema < min_a:\n            rema = min_a\n        prod2 = (b - red_b) * rema\n    print(min(prod1, prod2))", "ans = []\nfor t in range(int(input())):\n    (a, b, x, y, n) = map(int, input().split())\n    if a == b:\n        if x <= y:\n            tmp = min(n, a - x)\n            a -= tmp\n            n -= tmp\n            tmp = min(n, b - y)\n            b -= tmp\n            n -= tmp\n        else:\n            tmp = min(n, b - y)\n            b -= tmp\n            n -= tmp\n            tmp = min(n, a - x)\n            a -= tmp\n            n -= tmp\n    elif a - min(n, a - x) > b - min(n, b - y):\n        tmp = min(n, b - y)\n        b -= tmp\n        n -= tmp\n        tmp = min(n, a - x)\n        a -= tmp\n        n -= tmp\n    else:\n        tmp = min(n, a - x)\n        a -= tmp\n        n -= tmp\n        tmp = min(n, b - y)\n        b -= tmp\n        n -= tmp\n    ans += [a * b]\nprint(*ans, sep='\\n')", "t = int(input())\ntasks = []\nfor i in range(t):\n    tasks.append(list(map(int, input().split())))\nfor i in range(t):\n    mins = []\n    (a, b, x, y, n) = tasks[i]\n    if a - x >= n:\n        a -= n\n        mins.append(a * b)\n    else:\n        n -= a - x\n        a = x\n        b = max(b - n, y)\n        mins.append(a * b)\n    (a, b, x, y, n) = tasks[i]\n    if b - y >= n:\n        b -= n\n        mins.append(a * b)\n    else:\n        n -= b - y\n        b = y\n        a = max(a - n, x)\n        mins.append(a * b)\n    print(min(mins))", "import sys\nfrom sys import setrecursionlimit\nfrom collections import defaultdict\nsetrecursionlimit(10 ** 5)\nreadline = sys.stdin.readline\n\ndef process():\n    (a, b, x, y, n) = map(int, readline().strip().split())\n    mn = float('+INF')\n    if a - n >= x:\n        mn = min(mn, (a - n) * b)\n    else:\n        left = n - (a - x)\n        mn = min(mn, x * (b - min(left, b - y)))\n    if b - n >= y:\n        mn = min(mn, a * (b - n))\n    else:\n        left = n - (b - y)\n        mn = min(mn, y * (a - min(left, a - x)))\n    return mn\nfor _ in range(int(readline())):\n    print(process())", "t = int(input())\nfin = []\nfor i in range(t):\n    a = list(map(int, input().split()))\n    fin.append(a)\nfor o in fin:\n    x = o[2]\n    y = o[3]\n    flag = 0\n    for i in range(2):\n        a = o[0]\n        b = o[1]\n        n = o[4]\n        suba = a - x\n        subb = b - y\n        if flag == 0:\n            if n <= suba:\n                a = a - n\n                pdt = a * b\n                flag = 1\n                continue\n            else:\n                a = x\n                n = n - suba\n                if n >= subb:\n                    b = y\n                    pdt = a * b\n                    flag = 1\n                    continue\n                b = b - n\n                flag = 1\n                pdt = a * b\n        elif flag == 1:\n            if n <= subb:\n                b = b - n\n                pdt1 = a * b\n                continue\n            else:\n                b = y\n                n = n - subb\n                if n >= suba:\n                    a = x\n                    pdt1 = a * b\n                    continue\n                a = a - n\n                pdt1 = a * b\n    print(min(pdt, pdt1))", "import sys\ninput = sys.stdin.readline\nI = lambda : list(map(int, input().split()))\n(m,) = I()\nwhile m:\n    m -= 1\n    (a, b, x, y, n) = I()\n    val = 0\n    mini = 1e+20\n    t1 = min(n, a - x)\n    t2 = min(n - t1, b - y)\n    mini = min(mini, (a - t1) * (b - t2))\n    t1 = min(n, b - y)\n    t2 = min(n - t1, a - x)\n    mini = min(mini, (b - t1) * (a - t2))\n    print(mini)", "t = int(input())\nw = []\nfor i in range(t):\n    (a, b, x, y, n) = input().split()\n    a = int(a)\n    b = int(b)\n    x = int(x)\n    y = int(y)\n    n = int(n)\n    r = a - x\n    s = b - y\n    if r >= n:\n        k = (a - n) * b\n    else:\n        k = x * max(b - n + r, y)\n    if s >= n:\n        m = (b - n) * a\n    else:\n        m = y * max(a - n + s, x)\n    w.append(min(k, m))\nfor i in w:\n    print(i)", "testList = []\nfor i in range(int(input())):\n    testList.append([int(num) for num in input().split()])\nfor i in testList:\n    if i[0] - i[2] > i[4]:\n        min0 = i[0] - i[4]\n    else:\n        min0 = i[2]\n    if i[1] - i[3] > i[4]:\n        min1 = i[1] - i[4]\n    else:\n        min1 = i[3]\n    if min0 < min1:\n        (choose1, choose2) = (0, 1)\n    else:\n        (choose1, choose2) = (1, 0)\n    if i[4] > i[choose1] - i[choose1 + 2]:\n        i[4] -= i[choose1] - i[choose1 + 2]\n        i[choose1] = i[choose1 + 2]\n        if i[4] > i[choose2] - i[choose2 + 2]:\n            i[choose2] = i[choose2 + 2]\n        else:\n            i[choose2] -= i[4]\n    else:\n        i[choose1] -= i[4]\n    print(i[choose1] * i[choose2])", "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 6)\n\ndef inp():\n    return int(input())\n\ndef inps():\n    return input().rstrip()\n\ndef inpl():\n    return list(map(int, input().split()))\n\ndef _debug(obj):\n    print(obj, file=sys.stderr)\nloop = inp()\nfor _ in range(loop):\n    (a, b, x, y, n) = inpl()\n    a1 = max(a - n, x)\n    b1 = max(y, b - (n - (a - a1)))\n    b2 = max(b - n, y)\n    a2 = max(x, a - (n - (b - b2)))\n    print(min(a1 * b1, a2 * b2))", "for s in [*open(0)][1:]:\n    (a, b, x, y, n) = map(int, s.split())\n    if n > a - x + b - y:\n        n = a - x + b - y\n    l = max(n - (b - y), 0)\n    h = min(a - x, n)\n    min1 = a * b - a * n + ((a - b + n) * l - l * l)\n    min2 = a * b - a * n + ((a - b + n) * h - h * h)\n    print(min(min1, min2))", "m = max\nfor s in [*open(0)][1:]:\n    (a, b, x, y, n) = map(int, s.split())\n    c = m(x, a - n)\n    d = m(y, b - n)\n    print(min(c * m(y, a + b - n - c), d * m(x, a + b - n - d)))", "for i in range(int(input())):\n    (a, b, x, y, n) = list(map(int, input().split()))\n    if a + b - (x + y) <= n:\n        print(x * y)\n    else:\n        if a - n > x:\n            p = a - n\n            q = b\n        else:\n            p = x\n            q = b - (n - (a - x))\n        if b - n > y:\n            r = b - n\n            s = a\n        else:\n            r = y\n            s = a - (n - (b - y))\n        print(min(p * q, r * s))", "for _ in range(int(input())):\n    (a, b, x, y, n) = map(int, input().split())\n    (max_ax, max_by) = (max(a - n, x), max(b - n, y))\n    print(min(max_ax * max(a - n - max_ax + b, y), max_by * max(a - n - max_by + b, x)))", "import sys, math, bisect\nfrom collections import Counter, defaultdict as dd\n\ndef data():\n    return sys.stdin.readline().strip()\n\ndef out(var):\n    sys.stdout.write(str(var))\n\ndef l():\n    return list(sp())\n\ndef strl():\n    return list(strsp())\n\ndef sp():\n    return map(int, data().split())\n\ndef strsp():\n    return map(str, data().split())\nfor _ in range(int(data())):\n    (a, b, x, y, n) = sp()\n    (a1, b1) = (a - x, b - y)\n    c = (a - min(a1, n)) * (b - min(b1, n - min(a1, n)))\n    d = (b - min(b1, n)) * (a - min(a1, n - min(b1, n)))\n    print(min(c, d))", "from sys import stdin, stdout\nfrom collections import Counter\nfrom itertools import permutations\nimport bisect\nimport math\nI = lambda : map(int, stdin.readline().split())\nI1 = lambda : stdin.readline()\nfor _ in range(int(I1())):\n    (a, b, x, y, n) = I()\n    (da, db) = (a - x, b - y)\n    (min_a, min_b) = (a - min(n, da), b - min(n, db))\n    if min_a < min_b:\n        fa = min_a\n        n -= min(n, da)\n        fb = b - min(n, db)\n        p = fa * fb\n    else:\n        fb = min_b\n        n -= min(n, db)\n        fa = a - min(n, da)\n        p = fa * fb\n    print(p)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlst():\n    return list(map(int, input().split()))\n\ndef instr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef solve(a, b, x, y, n):\n    c = min(a, b)\n    d = a + b - c\n    if a < b:\n        u = x\n        v = y\n    else:\n        u = y\n        v = x\n    c1 = c - min(n, c - u)\n    n1 = n - min(c - u, n)\n    d1 = d - min(n1, d - v)\n    d2 = d - min(n, d - v)\n    n2 = n - min(d - v, n)\n    c2 = c - min(n2, c - u)\n    return min(c1 * d1, c2 * d2)\nN = inp()\nfor _ in range(N):\n    (a, b, x, y, n) = invr()\n    print(solve(a, b, x, y, n))", "number = int(input())\nresult = []\n\ndef good(a, b, x, y, n):\n    a1 = a - min(a - x, n)\n    b1 = b - min(b - y, n)\n    a_compliment = max(a + b - a1 - n, y)\n    b_compliment = max(a + b - b1 - n, x)\n    return min(a1 * a_compliment, b1 * b_compliment)\nfor i in range(number):\n    line = input()\n    (a, b, x, y, n) = line.split()\n    a = int(a)\n    b = int(b)\n    x = int(x)\n    y = int(y)\n    n = int(n)\n    result.append(good(a, b, x, y, n))\nfor i in range(number):\n    print(result[i])", "for s in [*open(0)][1:]:\n    (a, b, x, y, n) = map(int, s.split())\n    if n > a - x + b - y:\n        n = a - x + b - y\n    l = max(n - (b - y), 0)\n    h = min(a - x, n)\n    print(min(a * b - a * n + ((a - b + n) * l - l * l), a * b - a * n + ((a - b + n) * h - h * h)))", "n = int(input())\narr = []\nmaxval = []\nmaxrange = []\nfor i in range(n):\n    cur = arr.append(list(map(int, input().split(' '))))\n\ndef check(a, b, x, y, n):\n    da = min(n, a - x)\n    db = min(n - da, b - y)\n    return (a - da) * (b - db)\nfor j in range(len(arr)):\n    (a, b, x, y, n) = (arr[j][0], arr[j][1], arr[j][2], arr[j][3], arr[j][4])\n    print(min(check(a, b, x, y, n), check(b, a, y, x, n)))", "t = input()\nresult = []\nfor i in range(int(t)):\n    (a, b, x, y, n) = map(int, input().split())\n    ans = 10 ** 18\n    for j in range(2):\n        da = min(n, a - x)\n        db = min(n - da, b - y)\n        ans = min(ans, (a - da) * 1 * (b - db))\n        (a, b) = (b, a)\n        (x, y) = (y, x)\n    result.append(ans)\nprint(*result, sep='\\n')", "t = input()\nresult = []\nfor i in range(int(t)):\n    (a, b, x, y, n) = map(int, input().split())\n    ans = 10 ** 18\n    for j in range(2):\n        da = min(n, a - x)\n        db = min(n - da, b - y)\n        ans = min(ans, (a - da) * (b - db))\n        (a, b) = (b, a)\n        (x, y) = (y, x)\n    result.append(ans)\nprint(*result, sep='\\n')", "for s in [*open(0)][1:]:\n    (a, b, x, y, n) = map(int, s.split())\n    c = max(x, a - n)\n    d = max(y, b - n)\n    print(min(c * max(y, a + b - n - c), d * max(x, a + b - n - d)))", "t = int(input())\nresult = []\nfor _ in range(0, t):\n    line = input()\n    line = line.split()\n    ax = int(line[0]) - int(line[2])\n    by = int(line[1]) - int(line[3])\n    a = int(line[0])\n    b = int(line[1])\n    rest = int(line[4])\n    if int(line[0]) + int(line[1]) - (int(line[2]) + int(line[3])) <= int(line[4]):\n        result.append(int(line[2]) * int(line[3]))\n    else:\n        rest1 = by - rest\n        rest2 = ax - rest\n        if rest1 < 0:\n            b1 = int(line[3])\n            a1 = a + rest1\n            resu1 = a1 * b1\n        if rest1 >= 0:\n            b1 = b - rest\n            a1 = a\n            resu1 = a1 * b1\n        if rest2 < 0:\n            a2 = int(line[2])\n            b2 = b + rest2\n            resu2 = a2 * b2\n        if rest2 >= 0:\n            a2 = a - rest\n            b2 = b\n            resu2 = a2 * b2\n        if resu1 < resu2:\n            result.append(resu1)\n        else:\n            result.append(resu2)\nfor i in result:\n    print(i)", "t = int(input())\nfor _ in range(t):\n    (a, b, x, y, n) = map(int, input().split())\n    if a < b:\n        (a, b) = (b, a)\n        (x, y) = (y, x)\n    d1 = a - x\n    d2 = b - y\n    if n >= d1 + d2:\n        print(x * y)\n    elif d2 >= n:\n        print(a * (b - n))\n    elif d1 >= n and a - n < y:\n        print((a - n) * b)\n    elif d1 < n and x < y:\n        print(x * (b - n + d1))\n    else:\n        print((a - n + d2) * y)", "import math\nfor i in range(0, int(input())):\n    (a, b, x, y, n) = map(int, input().split())\n    min_a = a - n\n    if min_a < x:\n        min_a = x\n    min_b = b - n\n    if min_b < y:\n        min_b = y\n    if min_a < min_b:\n        min_b = b - (n - (a - min_a))\n        if min_b < y:\n            min_b = y\n    else:\n        min_a = a - (n - (b - min_b))\n        if min_a < x:\n            min_a = x\n    print(min_a * min_b)", "for _ in range(int(input())):\n    (a, b, x, y, n) = map(int, input().split())\n    if a + b - x - y <= n:\n        print(x * y)\n    else:\n        if a - x >= n:\n            t = (a - n) * b\n        else:\n            t = x * (b - (n - a + x))\n        if b - y >= n:\n            d = (b - n) * a\n        else:\n            d = y * (a - n + b - y)\n        print(min(t, d))", "def fun(a, b, x, y, n):\n    if a - x >= n:\n        a = a - n\n        p1 = a * b\n        return p1\n    elif a - x < n:\n        n = n - (a - x)\n        a = x\n        if b - y >= n:\n            b = b - n\n            p2 = a * b\n            return p2\n        else:\n            b = y\n            p3 = a * b\n            return p3\nt = int(input())\nfor _ in range(t):\n    (a, b, x, y, n) = map(int, input().split())\n    ans1 = fun(a, b, x, y, n)\n    ans2 = fun(b, a, y, x, n)\n    print(min(ans1, ans2))", "t = int(input())\nfor _ in range(t):\n    inp = input().split()\n    a = int(inp[0])\n    b = int(inp[1])\n    x = int(inp[2])\n    y = int(inp[3])\n    n = int(inp[4])\n    if max(a - n, x) < max(b - n, y):\n        dec = a - max(a - n, x)\n        a -= dec\n        n -= dec\n        if n > 0:\n            b = max(b - n, y)\n    else:\n        dec = b - max(b - n, y)\n        b -= dec\n        n -= dec\n        if n > 0:\n            a = max(a - n, x)\n    print(a * b)", "for _ in range(int(input())):\n    (a, b, x, y, n) = map(int, input().split())\n    if a - x == n:\n        a1 = x * b\n    elif a - x < n:\n        a1 = x * (b - min(n - a + x, b - y))\n    else:\n        a1 = (a - n) * b\n    if b - y == n:\n        a2 = y * a\n    elif b - y < n:\n        a2 = y * (a - min(n - b + y, a - x))\n    else:\n        a2 = (b - n) * a\n    print(min(a1, a2))", "def cal(a, b, x, y, n):\n    d = a - x\n    d = min(d, n)\n    n -= d\n    a -= d\n    d = b - y\n    d = min(d, n)\n    b -= d\n    return a * b\nfor _ in range(0, int(input())):\n    (a, b, x, y, n) = map(int, input().split())\n    print(min(cal(a, b, x, y, n), cal(b, a, y, x, n)))", "def f(a, b, x, y, n):\n    if a - x >= n:\n        return (a - n) * b\n    else:\n        return x * max(y, b - (n - (a - x)))\nt = int(input())\nfor j in range(t):\n    (a, b, x, y, n) = map(int, input().split())\n    print(min(f(a, b, x, y, n), f(b, a, y, x, n)))", "for j in range(int(input())):\n    name = [int(i) for i in input().split()]\n    m = name[4]\n    p = max(name[2], name[0] - m)\n    m -= name[0] - p\n    a1 = max(name[3], name[1] - m) * p\n    m = name[4]\n    r = max(name[3], name[1] - m)\n    m -= name[1] - r\n    a2 = max(name[2], name[0] - m) * r\n    print(min(a1, a2))", "for _ in range(int(input())):\n    [a, b, x, y, n] = list(map(int, input().split()))\n    if a - x + b - y <= n:\n        print(x * y)\n    else:\n        if x <= y:\n            if a - x <= n:\n                n -= a - x\n                a = x\n                if b - y <= n:\n                    b = y\n                else:\n                    b -= n\n            elif a <= b:\n                a -= n\n            elif b - y >= n:\n                b -= n\n            else:\n                if a - y > n:\n                    n -= b - y\n                    b = y\n                a -= n\n        elif b - y <= n:\n            n -= b - y\n            b = y\n            if a - x <= n:\n                a = x\n            else:\n                a -= n\n        elif b <= a:\n            b -= n\n        elif a - x >= n:\n            a -= n\n        else:\n            if b - x > n:\n                n -= a - x\n                a = x\n            b -= n\n        print(a * b)", "for _ in range(int(input())):\n    [a, b, x, y, n] = list(map(int, input().split()))\n    if a - x + b - y <= n:\n        print(x * y)\n    else:\n        if x <= y:\n            if a - x <= n:\n                n -= a - x\n                a = x\n                if b - y <= n:\n                    b = y\n                else:\n                    b -= n\n            elif a <= b:\n                a -= n\n            elif b - y >= n:\n                b -= n\n            else:\n                if a - y > n:\n                    n -= b - y\n                    b = y\n                a -= n\n        elif b - y <= n:\n            n -= b - y\n            b = y\n            if a - x <= n:\n                a = x\n            else:\n                a -= n\n        elif b <= a:\n            b -= n\n        elif a - x >= n:\n            a -= n\n        else:\n            if b - x > n:\n                n -= a - x\n                a = x\n            b -= n\n        print(a * b)", "t = int(input())\nfor i in range(t):\n    (a, b, x, y, n) = list(map(int, input().split()))\n    mina = max(x, a - n)\n    minb = max(y, b - n)\n    if mina <= minb:\n        i = 0\n        if a - n > x:\n            i += n\n        else:\n            i += a - x\n        a = mina\n        minb = max(y, b - (n - i))\n        b = minb\n    else:\n        i = 0\n        if b - n > y:\n            i += n\n        else:\n            i += b - y\n        b = minb\n        mina = max(x, a - (n - i))\n        a = mina\n    print(a * b)", "for _ in range(int(input())):\n    (a, b, x, y, n) = map(int, input().split())\n    m1 = max(a - n, x)\n    m2 = max(b - n, y)\n    m1 = m1 * max(a - n - m1 + b, y)\n    m2 = m2 * max(a - n - m2 + b, x)\n    print(min(m1, m2))", "def solve():\n    loop = int(input())\n    while loop > 0:\n        loop -= 1\n        (a, b, x, y, n) = map(int, input().split())\n        da = a - x\n        db = b - y\n        tt = []\n        if da + db <= n:\n            print(x * y)\n        else:\n            if da < n:\n                temp = n - da\n                a_t = a - da\n                b_t = b - temp\n                tt.append(a_t * b_t)\n            else:\n                tt.append((a - n) * b)\n            if db < n:\n                temp = n - db\n                b_t = b - db\n                a_t = a - temp\n                tt.append(a_t * b_t)\n            else:\n                tt.append((b - n) * a)\n            print(min(tt))\nsolve()", "t = int(input())\nwhile t > 0:\n    (a, b, x, y, n) = [int(a) for a in input().split()]\n    z1 = min(a - x, n)\n    z2 = min(b - y, n)\n    a1 = a - z1\n    b1 = b - z2\n    if a1 <= b1:\n        a = a1\n        b = max(b - (n - z1), y)\n    else:\n        b = b1\n        a = max(a - (n - z2), x)\n    print(a * b)\n    t -= 1", "import sys\nt = int(input())\nfor _ in range(t):\n    (a, b, x, y, n) = map(int, input().split())\n    da = min(n, a - x)\n    db = min(n - da, b - y)\n    ans1 = (a - da) * (b - db)\n    db = min(n, b - y)\n    da = min(n - db, a - x)\n    ans2 = (a - da) * (b - db)\n    print(min(ans1, ans2))", "def main(a, b, x, y, n):\n    beta2 = 999999999\n    alpha2 = 99999999\n    if a >= b:\n        beta = b\n        limb = y\n        alpha = a\n        lima = x\n    else:\n        beta = a\n        limb = x\n        alpha = b\n        lima = y\n    t = beta - n\n    n2 = limb - t\n    if n2 > 0:\n        beta = limb\n        t2 = alpha - n2\n        t3 = alpha - n\n        if t3 >= lima:\n            alpha2 = t3\n            beta2 = t + n\n        if t3 < lima:\n            alpha2 = lima\n            beta2 = max(t + n - (lima - t3), limb)\n        if t2 >= lima:\n            alpha = t2\n        else:\n            alpha = lima\n        return min(alpha * beta, alpha2 * beta2)\n    beta = t\n    return alpha * beta\nk = int(input())\nfor i in range(k):\n    (a, b, x, y, n) = map(int, input().split())\n    print(main(a, b, x, y, n))", "for i in range(int(input())):\n    (a, b, x, y, n) = map(int, input().split())\n    if n >= a - x + (b - y):\n        print(x * y)\n    else:\n        if a - x >= n:\n            c = (a - n) * b\n        else:\n            c = x * (b - (n - (a - x)))\n        if b - y >= n:\n            d = a * (b - n)\n        else:\n            d = (a - (n - (b - y))) * y\n        print(min(c, d))", "def getRes(a, b, x, y, n):\n    d1 = a - x\n    d2 = b - y\n    c1 = min(d1, n)\n    a -= c1\n    n -= c1\n    c2 = min(d2, n)\n    b -= c2\n    n -= c2\n    ans = a * b\n    return ans\n\ndef minProduct(a, b, x, y, n):\n    ans = min(getRes(a, b, x, y, n), getRes(b, a, y, x, n))\n    print(ans)\n    return\ntc = int(input())\nfor _ in range(0, tc):\n    (a, b, x, y, n) = input().split()\n    a = int(a)\n    b = int(b)\n    x = int(x)\n    y = int(y)\n    n = int(n)\n    minProduct(a, b, x, y, n)", "for _ in range(int(input())):\n    (a, b, x, y, n) = map(int, input().split())\n    p = a\n    q = b\n    c = n\n    if n < p - x:\n        p -= n\n        n = 0\n    else:\n        s = p - x\n        p -= s\n        n -= s\n    if n > 0:\n        s = q - y\n        if n < s:\n            q -= n\n        else:\n            q -= s\n    ans = p * q\n    p = a\n    q = b\n    n = c\n    if n < q - y:\n        q -= n\n        n = 0\n    else:\n        s = q - y\n        q -= s\n        n -= s\n    if n > 0:\n        s = p - x\n        if n < s:\n            p -= n\n        else:\n            p -= s\n    ans = min(ans, p * q)\n    print(ans)", "def fun(a, b, x, y, n):\n    k = a - x\n    if n >= k:\n        a = x\n        n = n - k\n    else:\n        a = a - n\n        n = 0\n    k = b - y\n    if n >= k:\n        b = y\n        n = n - k\n    else:\n        b = b - n\n        n = 0\n    return a * b\n\ndef fun1(a, b, x, y, n):\n    k = b - y\n    if n >= k:\n        b = y\n        n = n - k\n    else:\n        b = b - n\n        n = 0\n    k = a - x\n    if n >= k:\n        a = x\n        n = n - k\n    else:\n        a = a - n\n        n = 0\n    return a * b\nfor i in range(int(input())):\n    (a, b, x, y, n) = map(int, input().split())\n    p = fun1(a, b, x, y, n)\n    q = fun(a, b, x, y, n)\n    print(min(p, q))", "for _ in range(int(input())):\n    (a, b, x, y, n) = [int(i) for i in input().split()]\n    if a - x + b - y > n:\n        if a - x >= n:\n            sub1 = (a - n) * b\n        else:\n            sub1 = x * (b - (n - (a - x)))\n        if b - y >= n:\n            sub2 = a * (b - n)\n        else:\n            sub2 = (a - (n - (b - y))) * y\n        print(min([sub1, sub2]))\n    else:\n        print(x * y)", "def prog_name():\n    (a, b, x, y, n) = map(int, input().split())\n    ans1 = ans2 = 0\n    tempa = a\n    tempb = b\n    tempn = n\n    if tempn > tempa - x:\n        tempn -= tempa - x\n        tempa = x\n    else:\n        tempa -= tempn\n        tempn = 0\n    if tempn <= 0:\n        ans1 = tempa * tempb\n    else:\n        if tempn > tempb - y:\n            tempn -= tempb - y\n            tempb = y\n        else:\n            tempb -= tempn\n        ans1 = tempa * tempb\n    if n > b - y:\n        n -= b - y\n        b = y\n    else:\n        b -= n\n        n = 0\n    if n <= 0:\n        ans2 = a * b\n    else:\n        if n > a - x:\n            n -= a - x\n            a = x\n        else:\n            a -= n\n        ans2 = a * b\n    print(min(ans1, ans2))\nt = int(input())\nfor unique in range(t):\n    prog_name()"]