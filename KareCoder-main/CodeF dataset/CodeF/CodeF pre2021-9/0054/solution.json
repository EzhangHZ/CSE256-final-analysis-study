["n = int(input())\nfor i in range(n):\n    s = input()\n    s1 = set(s)\n    (l, m) = ([], [])\n    (c, x) = (0, 0)\n    for i in s1:\n        if s.count(i) == 1:\n            x += 1\n        else:\n            c += 1\n    print(x // 2 + c)", "for _ in range(int(input())):\n    i = input()\n    print(sum((min(2, c) for c in map(i.count, set(i)))) // 2)", "def eachcase():\n    s = input()\n    l = {}\n    for i in s:\n        if i not in l:\n            l[i] = 1\n        else:\n            l[i] += 1\n    r = 0\n    c = 0\n    for v in l:\n        if l[v] == 1:\n            if r == 0:\n                r = 1\n            else:\n                c += 1\n                r = 0\n        else:\n            c += 1\n    print(c)\n\ndef main():\n    tcs = int(input())\n    for tc in range(tcs):\n        eachcase()\nmain()", "for _ in range(int(input())):\n    s = input()\n    w = list(set(s))\n    count = 0\n    r = 0\n    for i in range(len(w)):\n        if s.count(w[i]) >= 2:\n            count += 1\n        else:\n            r += 1\n    print(count + r // 2)", "for _ in range(int(input())):\n    s = input()\n    d = {}\n    cnt = 0\n    for i in s:\n        d[i] = d.get(i, 0) + 1\n    for i in d.values():\n        if i > 2:\n            cnt += 2\n        else:\n            cnt += i\n    print(cnt // 2)", "for s in [*open(0)][1:]:\n    print(sum((min(2, s.count(x)) for x in {*s})) - 1 >> 1)", "import sys\nN = int(200000.0 + 5)\nLEN = 26\nsys.setrecursionlimit(N)\n\ndef charming():\n    s = input()\n    cnt = [0] * LEN\n    for ch in s:\n        cnt[ord(ch) - ord('a')] += 1\n    res = 0\n    more = 0\n    for i in cnt:\n        if i > 1:\n            res += 1\n        elif i == 1:\n            more += 1\n    print(res + more // 2)\nfor t in range(int(input())):\n    charming()", "def solve():\n    s = input()\n    d = dict()\n    for c in s:\n        if c in d:\n            d[c] += 1\n        else:\n            d[c] = 1\n    ans = 0\n    temp = 0\n    for x in d:\n        if d[x] > 1:\n            ans += 1\n        else:\n            temp += 1\n    print(ans + temp // 2)\nt = int(input())\nfor _ in range(t):\n    solve()", "t = int(input())\nfor i in range(t):\n    b = 0\n    c = 0\n    string = str(input())\n    set1 = list(set(string))\n    a = len(set1)\n    for i in range(a):\n        if string.count(set1[i]) >= 2:\n            b += 1\n        else:\n            c += 1\n    print(int(b + c / 2))", "t = int(input())\nfor i in range(t):\n    b = 0\n    c = 0\n    string = str(input())\n    set1 = list(set(string))\n    a = len(set1)\n    for i in range(a):\n        if string.count(set1[i]) >= 2:\n            b += 1\n        else:\n            c += 1\n    print(int(b + c / 2))", "from collections import Counter\nt = int(input())\nwhile t:\n    c = 0\n    t -= 1\n    s = input()\n    a = Counter(s)\n    for i in a:\n        if a[i] > 2:\n            c += 2\n        else:\n            c += a[i]\n    print(c // 2)", "n = int(input())\nfor i in range(n):\n    k = input()\n    s = 'abcdefghijklmnopqrstuvwxyz'\n    m = [0] * len(s)\n    for j in range(len(k)):\n        if m[s.index(k[j])] < 2:\n            m[s.index(k[j])] += 1\n    ans = sum(m)\n    print(ans // 2)", "T = int(input())\nfor i in range(T):\n    d = dict()\n    s = input()\n    for l in s:\n        if l not in d:\n            d[l] = 1\n        else:\n            d[l] += 1\n    count1 = 0\n    count2 = 0\n    for v in d.values():\n        if v == 1:\n            count1 += 1\n        else:\n            count2 += 1\n    print(int(count1 / 2) + count2)", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    mp = defaultdict(int)\n    strx = input()\n    for i in strx:\n        mp[i] += 1\n    c2 = 0\n    c1 = 0\n    for (k, v) in mp.items():\n        if v >= 2:\n            c2 += 1\n        else:\n            c1 += 1\n    print(c1 // 2 + c2)", "def cf_734B(string: str):\n    counts = {}\n    for c in string:\n        counts[c] = counts.get(c, 0) + 1\n    extras = answer = 0\n    for val in counts.values():\n        if val > 1:\n            answer += 1\n        else:\n            extras += 1\n    return answer + extras // 2\nfor _ in range(int(input())):\n    print(cf_734B(input()))", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    s = input()\n    count = defaultdict(int)\n    for c in s:\n        count[c] += 1\n    ans = 0\n    singles = 0\n    for key in count:\n        if count[key] >= 2:\n            ans += 1\n        else:\n            singles += 1\n    ans += singles // 2\n    print(ans)", "import sys\n\ndef input():\n    return sys.stdin.readline().strip()\n\ndef ints():\n    return map(int, input().split())\nT = int(input())\nfor _ in range(T):\n    s = input()\n    count = [0] * 26\n    for i in s:\n        count[ord(i) - ord('a')] += 1\n    t = 0\n    for i in count:\n        t += min(i, 2)\n    print(t // 2)", "def solution():\n    for t in range(int(input())):\n        s = input()\n        n = len(s)\n        ans = 0\n        dic = {}\n        for e in s:\n            if e in dic:\n                dic[e] += 1\n            else:\n                dic[e] = 1\n        dk = sorted(dic.keys())\n        (cnt1, cnt2) = (0, 0)\n        for e in dk:\n            if dic[e] == 1:\n                cnt1 += 1\n            else:\n                cnt2 += 1\n        ans = cnt2 + cnt1 // 2\n        print(ans)\n    return\nsolution()", "for _ in range(int(input())):\n    l = list(input())\n    s = set(l)\n    red = 0\n    gr = 0\n    c = 0\n    for x in s:\n        n = l.count(x)\n        if n >= 2:\n            red = red + 1\n        if n == 1:\n            c = c + 1\n    if c % 2 == 0:\n        red = red + c // 2\n    else:\n        red = red + (c - 1) // 2\n    print(red)", "import math, sys, itertools\nwtf = sys.stdin.read()\nwtf = wtf.strip().split('\\n')\nn = int(wtf[0])\nfor s in wtf[1:]:\n    sp1 = set(s)\n    for si in sp1:\n        s = s.replace(si, '', 1)\n    sp2 = set(s)\n    print((len(sp1) + len(sp2)) // 2)", "for _ in range(int(input())):\n    d = {}\n    s = list(input())\n    for i in s:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    one = []\n    cnt = 0\n    for (k, v) in d.items():\n        if v > 1:\n            cnt += 1\n        else:\n            one += [k]\n    cnt += len(one) // 2\n    print(cnt)", "t = int(input())\nwhile t:\n    s = input()\n    s1 = set(s)\n    (ans, l) = (0, 0)\n    for i in s1:\n        if s.count(i) >= 2:\n            ans += 1\n        else:\n            l += 1\n    ans += l // 2\n    print(ans)\n    t -= 1", "def coloring(s):\n    l = list(set(s))\n    unique_letters = 0\n    repeated_letters = 0\n    for i in range(len(l)):\n        if s.count(l[i]) == 1:\n            unique_letters += 1\n        else:\n            repeated_letters += 1\n    return repeated_letters + unique_letters // 2\nfor _ in range(int(input())):\n    s = str(input())\n    print(coloring(s))", "for s in [*open(0)][1:]:\n    print(sum((min(2, s.count(x)) for x in {*s})) - 1 >> 1)", "n = int(input())\ntext = ''\nlist = []\ncounter = 0\nfor i in range(n):\n    text = input()\n    counter = 0\n    list = []\n    for t in range(len(text)):\n        if text[t] not in list:\n            list.append(text[t])\n            if text.count(text[t]) > 2:\n                counter += 2\n            else:\n                counter += text.count(text[t])\n    print(int(counter / 2))", "t = int(input())\nnatija = []\nfor i in range(t):\n    s = input()\n    k = 0\n    harflar = []\n    juftmas_harflar = 0\n    for i in range(26):\n        harflar.append(0)\n    for c in s:\n        harflar[ord(c) - 97] += 1\n    for i in range(26):\n        if harflar[i] > 1:\n            k += 1\n        elif harflar[i] == 1:\n            juftmas_harflar += 1\n    k += juftmas_harflar // 2\n    natija.append(k)\nfor i in range(t):\n    print(natija[i])", "while True:\n    try:\n        t = eval(input())\n        for i in range(t):\n            list0 = list(input())\n            list1 = list(set(list0))\n            ans = 0\n            for j in list1:\n                if list0.count(j) >= 2:\n                    ans += 2\n                else:\n                    ans += 1\n            print(ans // 2)\n    except:\n        break", "def solve(s):\n    k = 0\n    hash = {}\n    for c in s:\n        if c not in hash:\n            hash[c] = 1\n            k += 1\n        else:\n            hash[c] += 1\n            if hash[c] < 3:\n                k += 1\n    return k // 2\nt = int(input())\nwhile t:\n    s = input()\n    print(solve(s))\n    t -= 1", "t = int(input())\nfor j in range(t):\n    letters = {}\n    s = input()\n    s = list(s)\n    if len(s) < 2:\n        print(0)\n    else:\n        for i in s:\n            if i not in letters:\n                letters[i] = 1\n            elif letters[i] < 2:\n                letters[i] += 1\n        x = letters.values()\n        print(int(sum(x) / 2))", "for i in range(int(input())):\n    s = input()\n    ct1 = ct2 = 0\n    for i in set(s):\n        if s.count(i) >= 2:\n            ct1 += 1\n        else:\n            ct2 += 1\n    print(ct1 + ct2 // 2)", "from collections import defaultdict\ntests = int(input())\nfor i in range(tests):\n    st = input()\n    d = defaultdict(int)\n    for s in st:\n        if d[s] < 2:\n            d[s] += 1\n    print(sum(d.values()) // 2)", "t = int(input())\n\ndef q(l):\n    l.sort()\n    n = len(l)\n    l1 = [0]\n    s = 1\n    ind = 0\n    for i in range(n - 1):\n        if l[i] == l[i + 1]:\n            s += 1\n        else:\n            l1.append(s - sum(l1))\n            ind += 1\n            s += 1\n    l1.append(n - sum(l1))\n    return l1\n\ndef h(l1):\n    sin = 0\n    mult = 0\n    for val in l1:\n        if val == 1:\n            sin += 1\n        elif val > 1:\n            mult += 1\n    return sin // 2 + mult\nfor i in range(t):\n    s = input()\n    l = list(s)\n    print(h(q(l)))", "t = int(input())\nfor _ in range(t):\n    s = input()\n    dic = {}\n    count = 0\n    count1 = 0\n    for i in s:\n        if i in dic:\n            dic[i] += 1\n        else:\n            dic[i] = 1\n    for j in dic:\n        if dic[j] == 1:\n            count1 += 1\n        else:\n            count += 1\n    print(count + count1 // 2)", "for _ in range(int(input())):\n    n = list(input())\n    (c1, c2) = (0, 0)\n    for i in set(n):\n        if n.count(i) == 1:\n            c1 += 1\n        else:\n            c2 += 1\n    print(c1 // 2 + c2)", "for _ in range(int(input())):\n    s = input()\n    ile = 0\n    for a in set(s):\n        ile = ile + 1 if s.count(a) == 1 else ile + 2\n    print(ile // 2)", "class solution:\n\n    def __init__(self, s):\n        self.s = s\n        self.answer = 0\n\n    def caluclation(self):\n        d = {}\n        for i in s:\n            if i not in d:\n                d[i] = 1\n            elif d[i] > 1:\n                pass\n            else:\n                d[i] += 1\n        sum_all = 0\n        for i in d:\n            sum_all += d[i]\n        if sum_all % 2 != 0:\n            sum_all -= 1\n        self.answer = int(sum_all / 2)\nt = int(input())\nfor _ in range(t):\n    s = input()\n    root = solution(s)\n    root.caluclation()\n    print(root.answer)", "for _ in range(int(input())):\n    c = {}\n    for x in input():\n        c[x] = c.get(x, 0) + 1\n    r = 0\n    o = 0\n    for v in c.values():\n        if v > 1:\n            r += 1\n        else:\n            o += 1\n    print(r + o // 2)", "for _ in range(int(input())):\n    n = list(input())\n    (c1, c2) = (0, 0)\n    for i in set(n):\n        if n.count(i) == 1:\n            c1 += 1\n        else:\n            c2 += 1\n    print(c1 // 2 + c2)", "import math\nt = int(input())\nfor _ in range(t):\n    s = input()\n    red = []\n    green = []\n    for l in s:\n        if l not in red:\n            red.append(l)\n        elif l not in green:\n            green.append(l)\n    print((len(red) + len(green)) // 2)", "t = int(input())\nfor r in range(t):\n    str = input()\n    s = set(str)\n    c = 0\n    d = 0\n    while len(s) > 0:\n        e = s.pop()\n        i = str.count(e)\n        if i > 1:\n            d = d + 1\n        else:\n            c = c + 1\n    print(c // 2 + d)", "for _ in range(int(input())):\n    s = input()\n    d = {}\n    cnt = 0\n    for i in s:\n        d[i] = d.get(i, 0) + 1\n    for i in s:\n        if d[i] > 2:\n            cnt += 2\n        else:\n            cnt += d[i]\n        d[i] = 0\n    print(cnt // 2)", "for g in [*open(0)][1:]:\n    g = g.strip()\n    s = set(g)\n    t = 0\n    for c in s:\n        t = t + 1 + 1 * (g.count(c) > 1)\n    print(t // 2)", "t = int(input())\nfor _ in range(0, t):\n    a = input()\n    d = {}\n    m = []\n    for ele in a:\n        if ele in d:\n            d[ele] += 1\n        else:\n            d[ele] = 1\n    for ele in d.values():\n        if ele > 2:\n            m.append(2)\n        else:\n            m.append(ele)\n    c = sum(m)\n    if c % 2 == 0:\n        print(c // 2)\n    else:\n        print((c - 1) // 2)", "n = int(input())\nfor i in range(n):\n    t = []\n    x = input()\n    [t.append(i) for i in x if i not in t]\n    c = 0\n    d = 0\n    for j in t:\n        if x.count(j) >= 2:\n            c += 1\n        else:\n            d += 1\n    ans = c + d // 2\n    print(ans)", "for _ in range(int(input())):\n    d = {}\n    for i in input():\n        d[i] = d.get(i, 0) + 1\n    c = 0\n    m = 0\n    for (i, j) in d.items():\n        if j > 1:\n            c += 1\n        elif j == 1:\n            m += 1\n    print(c + m // 2)", "for i in range(int(input())):\n    s = input()\n    h = set(s)\n    c = 0\n    k = 0\n    for j in h:\n        n = s.count(j)\n        if n >= 2:\n            c = c + 1\n        elif n == 1:\n            k = k + 1\n    print(c + k // 2)", "tests = int(input())\nfor _ in range(tests):\n    dc = dict()\n    for c in input():\n        dc[c] = dc.get(c, 0) + 1\n    cnt = [0, 0, 0]\n    for v in dc.values():\n        if v == 1:\n            cnt[1] += 1\n        else:\n            cnt[2] += 1\n    res = cnt[1] // 2 + cnt[2]\n    print(res)", "for _ in range(int(input())):\n    (a, b, d) = (0, 0, {})\n    for i in input():\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    for i in d:\n        if d[i] >= 2:\n            a += 1\n        else:\n            b += 1\n    print(a + b // 2)", "for _ in range(int(input())):\n    str1 = input()\n    dict1 = {}\n    res = 0\n    for i in str1:\n        try:\n            dict1[i] += 1\n        except:\n            dict1[i] = 1\n    for (k, v) in dict1.items():\n        if v == 1:\n            res += 1\n        elif v >= 2:\n            res += 2\n    print(res // 2)", "for _ in range(int(input())):\n    string = input()\n    dic = {}\n    for i in string:\n        dic[i] = dic.get(i, 0) + 1\n    val = dic.values()\n    count = 0\n    for i in val:\n        if i <= 2:\n            count = count + i\n        else:\n            count = count + 2\n    print(count // 2)", "from collections import Counter\nfor i in range(int(input())):\n    string = input()\n    counter = Counter(string)\n    score = 0\n    count = 0\n    for (a, b) in counter.items():\n        if b >= 2:\n            score += 1\n        elif b == 1:\n            count += 1\n    print(score + count // 2)", "for _ in range(int(input())):\n    n = input()\n    d = dict()\n    for i in n:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    a = []\n    ones = 0\n    ans = 0\n    l = []\n    for key in d.values():\n        l.append(key)\n    for j in l:\n        if j == 1:\n            ones += 1\n        else:\n            ans += 1\n    print(ans + ones // 2)", "t = int(input())\nfor i in range(0, t):\n    s = str(input())\n    c = list(set(s))\n    diff = len(s) - len(c)\n    n = len(s)\n    numof3 = 0\n    arr = []\n    for z in range(0, len(c)):\n        arr.append(c[z])\n    for j in range(0, len(arr)):\n        count = s.count(arr[j])\n        if count >= 3:\n            numof3 += 1\n        if count > 3:\n            n = n - (count - 3)\n    print(numof3 + (n - numof3 * 3) // 2)", "from collections import Counter\nt = int(input())\ntemp = 0\ncount = 0\nstrings = []\nfor i in range(t):\n    temp = input()\n    strings.append(temp)\nfor s in strings:\n    count = 0\n    for n in Counter(s).values():\n        if n > 1:\n            count += 2\n        elif n == 1:\n            count += 1\n    print(count // 2)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    h = {}\n    for i in s:\n        if i in h:\n            h[i] = h[i] + 1\n        else:\n            h[i] = 1\n    single = 0\n    multi = 0\n    for i in h:\n        if h[i] == 1:\n            single = single + 1\n        else:\n            multi = multi + 1\n    res = single // 2 + multi\n    print(res)", "for i in range(int(input())):\n    s = input()\n    (g, r) = (0, 0)\n    for i in set(s):\n        if s.count(i) >= 2:\n            g += 1\n            r += 1\n        elif g > r:\n            r += 1\n        else:\n            g += 1\n    print(min(g, r))", "from sys import stdin\n\ndef solve():\n    seq = stdin.readline().strip()\n    l = []\n    d = {1: 1}\n    for i in seq:\n        if i not in l:\n            l.append(i)\n            d[i] = 1\n        elif i in l and d[i] == 1:\n            l.append(i)\n            d[i] = 2\n    n = len(l)\n    print(n // 2)\nt = int(stdin.readline().strip())\nfor _ in range(t):\n    solve()", "for i in range(int(input())):\n    strn = input()\n    r = 0\n    g = 0\n    all_freq = {}\n    for i in strn:\n        if i in all_freq:\n            all_freq[i] += 1\n        else:\n            all_freq[i] = 1\n    count = 0\n    for key in all_freq:\n        if all_freq[key] >= 2:\n            r += 1\n            g += 1\n        else:\n            count += 1\n    if count % 2 == 0:\n        r += count // 2\n    else:\n        r += (count - 1) // 2\n    print(r)", "for _ in range(int(input())):\n    s = input()\n    dt = {}\n    c = 0\n    l = len(s)\n    for i in s:\n        if i in dt:\n            dt[i] += 1\n        else:\n            dt[i] = 1\n    for i in dt:\n        if dt[i] >= 3:\n            c += 1\n            l -= dt[i]\n    c += l // 2\n    print(c)", "for i in range(int(input())):\n    x = str(input())\n    ans = 0\n    t = 0\n    d = {}\n    for j in x:\n        if d.get(j) != None:\n            d[j] += 1\n        else:\n            d[j] = 1\n    for f in d:\n        if d[f] >= 2:\n            ans += 1\n        elif d[f] == 1:\n            t += 1\n    ans += t // 2\n    print(ans)", "T = int(input())\nwhile T:\n    s = input()\n    longitud = 0\n    letras = {}\n    for c in s:\n        if c not in letras:\n            letras[c] = 1\n            longitud += 1\n        else:\n            letras[c] += 1\n        if letras[c] == 2:\n            longitud += 1\n    ans = longitud // 2\n    print(ans)\n    T -= 1", "t = int(input())\nfor _ in range(t):\n    s = input()\n    a = set()\n    b = set()\n    for c in s:\n        if c in b:\n            a.add(c)\n            if len(a) - len(b) == 2:\n                for x in a:\n                    if x not in b:\n                        b.add(x)\n                        a.remove(x)\n                        break\n        else:\n            b.add(c)\n            if len(b) - len(a) == 2:\n                for x in b:\n                    if x not in a:\n                        a.add(x)\n                        b.remove(x)\n                        break\n    print(min(len(a), len(b)))", "n = int(input())\nfor _ in range(n):\n    s = input()\n    l = len(s)\n    d = {}\n    for i in s:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    for i in d:\n        if d[i] > 2:\n            l = l - (d[i] - 2)\n    print(l // 2)", "t = int(input())\nfor _ in range(t):\n    s = list(input().strip())\n    n = len(s)\n    count = dict()\n    for i in s:\n        count[i] = count.get(i, -2) + 1\n    three = 0\n    for i in count.values():\n        if i > 0:\n            three += i\n    print((n - three) // 2)", "def solve():\n    for i in range(int(input())):\n        s = input()\n        mult = set()\n        solo = set()\n        for c in s:\n            if c in mult:\n                continue\n            elif c in solo:\n                mult.add(c)\n            else:\n                solo.add(c)\n        print(len(mult) + (len(solo) - len(mult)) // 2)\nsolve()", "for i in range(int(input())):\n    a = {}\n    total = 0\n    s = input()\n    a = set(s)\n    for i in a:\n        if s.count(i) == 1:\n            total += 1\n        else:\n            total += 2\n    print(total // 2)", "N = int(input())\nans = [0] * N\nfor j in range(N):\n    s = input()\n    arr = [0] * 26\n    for i in s:\n        symb = ord(i) - 97\n        if arr[symb] < 2:\n            arr[symb] += 1\n    d = 0\n    si = 0\n    for i in range(26):\n        if arr[i] == 2:\n            d += 1\n        if arr[i] == 1:\n            si += 1\n    ans[j] = d + si // 2\nfor i in range(N):\n    print(ans[i])", "for i in range(int(input())):\n    x = input()\n    a = {}\n    for c in x:\n        if c in a:\n            a[c] += 1\n        else:\n            a[c] = 1\n    (k, ans) = (0, 0)\n    for c in a:\n        if a[c] > 1:\n            ans += 1\n        else:\n            k += 1\n    print(ans + k // 2)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    h = {}\n    for each in s:\n        if each in h:\n            h[each] += 1\n        else:\n            h[each] = 1\n    a = 0\n    b = 0\n    for each in h:\n        if h[each] > 1:\n            a += 1\n        elif h[each] == 1:\n            b += 1\n    print(a + b // 2)", "def solve():\n    dic = {}\n    k = 0\n    z = 0\n    s = input()\n    for symbol in s:\n        if symbol not in dic:\n            dic[symbol] = 1\n        else:\n            dic[symbol] += 1\n    for key in dic:\n        if dic[key] == 1:\n            if k > z:\n                z += 1\n            else:\n                k += 1\n        else:\n            k += 1\n            z += 1\n    print(min(k, z))\nn = int(input())\nfor _ in range(n):\n    solve()", "n = int(input())\nl = []\nfor i in range(n):\n    l.append(input())\n\ndef wonderful(a):\n    l1 = []\n    for i in a:\n        if l1.count(i) == 0:\n            l1.append(i)\n    count = 0\n    for i in l1:\n        if a.count(i) >= 2:\n            count += 2\n        if a.count(i) == 1:\n            count += 1\n    if count % 2 == 0:\n        return count // 2\n    elif count % 2 == 1:\n        return (count - 1) // 2\nfor i in l:\n    print(wonderful(i))", "for i in range(int(input())):\n    s = input()\n    n = 0\n    for c in 'abcdefghijklmnopqrstuvwxyz':\n        p = s.count(c)\n        if p == 1:\n            n += 1\n        elif p >= 2:\n            n += 2\n        p = 0\n    print(n // 2)", "for i in range(int(input())):\n    word = input()\n    (c1, c2) = (0, 0)\n    same = []\n    for i in word:\n        if i in same:\n            continue\n        if word.count(i) > 1:\n            c2 += 1\n            same.append(i)\n        else:\n            c1 += 1\n    print(c1 // 2 + c2)", "def answer(w):\n    d = {}\n    for ww in w:\n        try:\n            d[ww] += 1\n        except:\n            d[ww] = 1\n    l = sorted(list(d.values()))[-1::-1]\n    return len([k for k in l if k > 1]) + len([k for k in l if k == 1]) // 2\nt = int(input())\nfor _ in range(t):\n    print(answer(input()))", "t = int(input())\ntmp = []\nfor tt in range(t):\n    s = input()\n    l = len(s)\n    arr = []\n    k = 0\n    if l < 2:\n        tmp.append(0)\n    else:\n        for i in s:\n            cc = s.count(i)\n            if cc < 3:\n                arr.append(cc)\n            else:\n                arr.append(2)\n            s = s.replace(i, '')\n        tmp.append(sum(arr))\nfor c in tmp:\n    print(c // 2)", "t = int(input())\nfor i in range(0, t):\n    d = dict()\n    s = input()\n    n = len(set(s))\n    for j in range(0, len(s)):\n        if d.get(s[j], False) == False:\n            d[s[j]] = 1\n        else:\n            d[s[j]] += 1\n    c1 = 0\n    for i in d.keys():\n        if d[i] == 1:\n            c1 += 1\n    c2 = n - c1\n    print(c2 + c1 // 2)", "for i in range(int(input())):\n    s = input()\n    green = 0\n    red = 0\n    for i in set(s):\n        if s.count(i) >= 2:\n            green = green + 1\n            red = red + 1\n        elif green > red:\n            red = red + 1\n        else:\n            green = green + 1\n    print(min(green, red))", "for i in range(int(input())):\n    sl = {}\n    a = list(input())\n    b = len(a)\n    for el in a:\n        if el not in sl.keys():\n            sl[el] = 1\n        else:\n            sl[el] += 1\n    for el in sl.keys():\n        if sl[el] > 2:\n            b += 2 - sl[el]\n    print(b // 2)", "from collections import Counter\nfor i in range(int(input())):\n    s = input()\n    d = Counter(s)\n    c1 = 0\n    c2 = 0\n    l = list(d.values())\n    for i in range(len(l)):\n        if l[i] > 1:\n            c2 = c2 + 1\n        else:\n            c1 = c1 + 1\n    print(int(c1 / 2) + c2)", "for _ in range(int(input())):\n    s = input()\n    t = ''\n    (rr, gg, c) = (0, 0, 0)\n    for i in s:\n        if s.count(i) > 1:\n            if i not in t:\n                rr += 1\n                t = t + i\n            else:\n                pass\n        else:\n            c += 1\n    c = c // 2\n    print(rr + c)", "for _ in range(int(input())):\n    s = input()\n    l = set(s)\n    (even, first) = (0, 0)\n    for i in l:\n        if s.count(i) > 1:\n            even += 1\n        else:\n            first += 1\n    print(even + first // 2)", "def countPaint(s):\n    lst = [0] * 26\n    for i in s:\n        lst[ord(i) - 97] += 1\n    d = lst.count(0)\n    a = lst.count(1)\n    b = lst.count(2)\n    c = lst.count(3)\n    return a // 2 + b + c + (len(lst) - d - a - b - c)\nt = int(input())\nfor i in range(t):\n    s = input()\n    print(countPaint(s))", "n = int(input())\nfor i in range(0, n):\n    s = input()\n    frq = {}\n    for j in s:\n        if j in frq:\n            frq[j] += 1\n        else:\n            frq[j] = 1\n    s = 0\n    temp = 0\n    for i in frq.keys():\n        if frq[i] >= 2:\n            s += 1\n        else:\n            temp += 1\n    s += temp // 2\n    print(s)", "t = int(input())\nfor k in range(t):\n    s = input()\n    st1 = set()\n    st2 = set()\n    for c in s:\n        if c not in st1:\n            st1.add(c)\n        else:\n            st2.add(c)\n    print(min(len(st1), len(s) // 2, (len(st2) + len(st1)) // 2))", "for i in range(int(input())):\n    s = input()\n    more_than_2 = 0\n    less_than_2 = 0\n    for j in set(s):\n        if s.count(j) >= 2:\n            more_than_2 += 1\n        else:\n            less_than_2 += 1\n    print(more_than_2 + less_than_2 // 2)", "for i in range(int(input())):\n    string = input()\n    count = 0\n    wait = 0\n    list1 = []\n    list2 = []\n    for i in string:\n        if i in list2:\n            continue\n        list2.append(i)\n        if string.count(i) > 1:\n            count += 1\n            string = string.replace(i, '')\n        else:\n            wait += 1\n        if wait % 2 == 0 and wait != 0 and (wait not in list1):\n            list1.append(wait)\n            count += 1\n        if len(string) == wait or len(string) == 0:\n            break\n    print(count)", "tc = int(input())\nfor i in range(tc):\n    x = input()\n    y = x\n    list1 = []\n    for i in y:\n        list1.append(i)\n    list1 = set(list1)\n    str1 = ''\n    for i in list1:\n        str1 += i\n    str2 = ''\n    str3 = []\n    for i in str1:\n        if x.count(i) == 1:\n            str2 += i\n        else:\n            str3 += [i]\n    print(len(str2) // 2 + len(str3))", "for t in range(int(input())):\n    s = input()\n    a = [0 for i in range(27)]\n    for i in s:\n        a[ord(i) - 97] += 1\n    p = 0\n    q = 0\n    for i in a:\n        if i > 1:\n            p += 1\n        elif i == 1:\n            q += 1\n    print(p + q // 2)", "from collections import Counter\n\ndef solve():\n    string = input()\n    counter = Counter(string)\n    red = 0\n    single_count_char = 0\n    for (char, count) in counter.items():\n        if count >= 2:\n            red += 1\n        else:\n            single_count_char += 1\n    red += single_count_char // 2\n    return red\nfor _ in range(int(input())):\n    print(solve())", "ans = []\nfor _ in range(int(input())):\n    (once, more) = (set(), set())\n    lone = pair = 0\n    for i in input():\n        if i in more:\n            continue\n        elif i in once:\n            more.add(i)\n            lone -= 1\n            pair += 1\n        else:\n            once.add(i)\n            lone += 1\n    ans.append(lone // 2 + pair)\nprint('\\n'.join(map(str, ans)))", "from collections import Counter\nfor _ in range(int(input())):\n    s = input()\n    c = Counter(s)\n    a = 0\n    b = 0\n    for i in c.values():\n        if i > 1:\n            a += 1\n        else:\n            b += 1\n    if b % 2 != 0:\n        b -= 1\n    print(a + b // 2)", "import math\nfor _ in range(int(input())):\n    i = input()\n    a = [0] * 26\n    s = 0\n    sum = 0\n    for q in i:\n        a[ord(q) - 97] += 1\n    for w in a:\n        if w > 1:\n            sum += 1\n        elif w == 1:\n            s += 1\n    print(sum + s // 2)", "t = int(input())\nwhile t > 0:\n    x = input()\n    y = len(x)\n    count = 0\n    sum = 0\n    for i in range(0, len(x)):\n        if x.count(x[i]) > 1 and x[i] != ' ':\n            x = x.replace(x[i], ' ')\n            count += 1\n    for i in x:\n        if i != ' ':\n            sum = sum + 1\n    print(count + int(sum / 2))\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    letters = [0 for _ in range(26)]\n    s = input()\n    for i in range(len(s)):\n        letters[ord(s[i]) - 97] += 1\n    count = 0\n    ones = 0\n    for i in range(26):\n        if letters[i] == 1:\n            ones += 1\n        if letters[i] >= 2:\n            count += 1\n    count += ones // 2\n    print(count)", "t = int(input())\nfor i in range(t):\n    s = input()\n    l = len(s)\n    s = list(s)\n    m = set(s)\n    contador = 0\n    li = []\n    for j in m:\n        li.append(s.count(j))\n    for j in li:\n        if j == 1:\n            contador += 1\n    p = len(li) - contador\n    f = int(contador / 2)\n    print(p + f)", "result = []\nfor i in range(int(input())):\n    s = input()\n    count = 0\n    thua = 0\n    test = []\n    for x in s:\n        if x not in test:\n            if s.count(x) >= 2:\n                count += 1\n            if s.count(x) == 1:\n                thua += 1\n            test.append(x)\n    count += int(thua / 2)\n    result.append(count)\nfor r in result:\n    print(r)", "from collections import defaultdict\n\ndef solve(s):\n    if len(s) == 1:\n        return 0\n    ans = 0\n    d = defaultdict(int)\n    for i in s:\n        d[i] += 1\n    ones = 0\n    twos = 0\n    for i in d:\n        if d[i] == 1:\n            ones += 1\n        if d[i] >= 2:\n            twos += 1\n    ans = ones // 2 + twos\n    return ans\nfor _ in range(int(input())):\n    n = input()\n    print(solve(n))", "t = int(input())\nwhile t:\n    string = input()\n    ls = list(string)\n    st = set(string)\n    d = dict()\n    ones = 0\n    ans = 0\n    for letter in st:\n        d[letter] = ls.count(letter)\n    for value in d.values():\n        if value > 1:\n            ans += 1\n        elif value == 1:\n            ones += 1\n    ans += ones // 2\n    print(ans)\n    t -= 1", "t = int(input())\nwhile t:\n    s = input()\n    p = set(s)\n    d = 0\n    c = 0\n    for i in p:\n        m = s.count(i)\n        if m > 1:\n            d += 1\n        if m == 1:\n            c += 1\n    c = c // 2\n    c += d\n    print(c)\n    t -= 1", "def ls():\n    return list(map(int, input().split()))\n\ndef ip():\n    return int(input())\nt = ip()\nfor _ in range(t):\n    s = tuple(input())\n    set_s = set(s)\n    single = 0\n    double = 0\n    for i in set_s:\n        if s.count(i) == 1:\n            single += 1\n        else:\n            double += 1\n    print(double + single // 2)"]