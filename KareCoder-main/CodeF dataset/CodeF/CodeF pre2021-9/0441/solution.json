["t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n\n    def check():\n        suffix_end = n\n        for j in range(n - 1, -1, -1):\n            if j + 1 == arr[j]:\n                suffix_end = j\n            else:\n                break\n        if suffix_end == 0:\n            return 0\n        prefix_end = 0\n        for i in range(n):\n            if i + 1 == arr[i]:\n                prefix_end = i\n            else:\n                break\n        for i in range(prefix_end + 1, suffix_end):\n            if i + 1 == arr[i]:\n                return 2\n        return 1\n    print(check())", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    l = -1\n    r = -1\n    for j in range(n):\n        if lst[j] != j + 1:\n            l = j\n            break\n    for j in range(n - 1, -1, -1):\n        if lst[j] != j + 1:\n            r = j\n            break\n    if l == -1 and r == -1:\n        print(0)\n    else:\n        c = 0\n        for h in range(l, r + 1):\n            if lst[h] == h + 1:\n                c += 1\n                break\n        if c == 0:\n            print(1)\n        else:\n            print(2)", "t = int(input())\nfor test_case in range(1, t + 1):\n    n = int(input())\n    l = list(map(int, input().split()))\n    finished = False\n    l_sorted = 0\n    while l_sorted < n:\n        if l[l_sorted] == l_sorted + 1:\n            l_sorted += 1\n        else:\n            break\n    r_sorted = n - 1\n    while r_sorted > 0:\n        if l[r_sorted] == r_sorted + 1:\n            r_sorted -= 1\n        else:\n            break\n    if l_sorted == n:\n        print('0')\n    else:\n        well_placed = 0\n        for i in range(l_sorted, r_sorted + 1):\n            if l[i] == i + 1:\n                well_placed += 1\n        if well_placed == 0:\n            print('1')\n        else:\n            print('2')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    f = sorted([i for (i, v) in enumerate(arr) if v != i + 1])\n    if len(f) == 0:\n        print(0)\n        continue\n    if f[-1] - f[0] + 1 == len(f):\n        print(1)\n        continue\n    print(2)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = -1\n    e = 0\n    for i in range(1, n + 1):\n        if l[i - 1] != i:\n            s = i\n            break\n    else:\n        print(0)\n    if s != -1:\n        for i in range(n, -1, -1):\n            if l[i - 1] != i:\n                e = i\n                break\n        for i in range(s, e):\n            if l[i - 1] == i:\n                print(2)\n                break\n        else:\n            print(1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    real = list(range(1, n + 1))\n    if real == arr:\n        print(0)\n    else:\n        i = 0\n        while arr[i] == real[i]:\n            i += 1\n        j = n - 1\n        while arr[j] == real[j]:\n            j -= 1\n        flag = True\n        for x in range(i, j + 1):\n            if arr[x] == real[x]:\n                flag = False\n                break\n        if flag:\n            print(1)\n        else:\n            print(2)", "def solve():\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    notSorted = False\n    for i in range(1, n):\n        if a[i - 1] > a[i]:\n            notSorted = True\n    if notSorted == False:\n        print(0)\n        return\n    ii = n - 1\n    jj = 0\n    while jj < n:\n        if a[jj] != jj + 1:\n            break\n        jj += 1\n    while ii >= jj:\n        if a[ii] != ii + 1:\n            break\n        ii -= 1\n    for i in range(jj, ii + 1):\n        if a[i] == i + 1:\n            print(2)\n            return\n    print(1)\nt = int(input())\nfor i in range(t):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    non_matching_indexes = list()\n    for i in range(n):\n        if i + 1 != a[i]:\n            non_matching_indexes.append(i)\n    matching_indexes_cnt = n - len(non_matching_indexes)\n    if matching_indexes_cnt != n:\n        if matching_indexes_cnt == 0:\n            ans = 1\n        elif len(non_matching_indexes) == 1 + (non_matching_indexes[-1] - non_matching_indexes[0]):\n            ans = 1\n        else:\n            ans = 2\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    f = sorted([i for (i, v) in enumerate(arr) if v != i + 1])\n    print(0 if len(f) == 0 else 1 if f[-1] - f[0] + 1 == len(f) else 2)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    cnt = 0\n    end = -1\n    start = -1\n    nstart = -1\n    nend = -1\n    for i in range(len(l)):\n        if i + 1 == l[i]:\n            if start == -1:\n                start = i\n            cnt += 1\n            end = i\n        else:\n            if nstart == -1:\n                nstart = i\n            nend = i\n    if cnt == n:\n        print('0')\n    elif cnt == 0:\n        print('1')\n    elif cnt == end - start + 1 and (start == 0 or end == n - 1):\n        print('1')\n    elif nend - nstart + 1 == n - cnt:\n        print('1')\n    else:\n        print('2')", "import sys\n\ndef minp():\n    return sys.stdin.readline().strip()\n\ndef mint():\n    return int(minp())\n\ndef mints():\n    return map(int, minp().split())\n\ndef solve():\n    n = mint()\n    a = list(mints())\n    first = None\n    for i in range(n):\n        if a[i] != i + 1:\n            first = i\n            break\n    if first is None:\n        print(0)\n        return\n    last = None\n    for i in range(first, n):\n        if a[i] == i + 1:\n            last = i\n            break\n    if last is None:\n        print(1)\n        return\n    for i in range(last, n):\n        if a[i] != i + 1:\n            print(2)\n            return\n    print(1)\nfor i in range(mint()):\n    solve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a == list(range(1, n + 1)):\n        print(0)\n    else:\n        (flag, lrflag) = (False, False)\n        (left, right) = (0, n + 1)\n        if a[0] == 1 or a[n - 1] == n:\n            lrflag = True\n            for (l, num) in enumerate(a, 1):\n                if l == num:\n                    left = l\n                else:\n                    break\n            for (r, i) in zip(reversed(a), reversed(range(1, n + 1))):\n                if r == i:\n                    right = r\n                else:\n                    break\n        for (i, num) in enumerate(a, 1):\n            if i == num and left < i < right:\n                flag = True\n        if lrflag == True and flag == False:\n            print(1)\n        elif lrflag == False and flag == False:\n            print(1)\n        else:\n            print(2)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = 0\n    matching = True\n    for i in range(len(arr)):\n        if arr[i] != i + 1:\n            if matching:\n                count += 1\n            matching = False\n        else:\n            matching = True\n    print(min(count, 2))", "t = int(input())\ncases = []\n\ndef func(a):\n    corrects = []\n    all0 = True\n    all1 = True\n    for i in range(len(a)):\n        if i + 1 == a[i]:\n            corrects.append(1)\n            all0 = False\n        else:\n            corrects.append(0)\n            all1 = False\n    if all1 == True:\n        return 0\n    elif all0 == True:\n        return 1\n    corrects.append(1)\n    trail_of_1 = True\n    trail_counts = 1\n    for i in range(len(corrects)):\n        if corrects[i] == 1 and trail_of_1 == False:\n            trail_counts += 1\n            trail_of_1 = True\n        elif corrects[i] == 0 and trail_of_1 == True:\n            trail_of_1 = False\n    if trail_counts <= 2:\n        return 1\n    else:\n        return 2\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split(' ')]\n    cases.append(a)\nfor a in cases:\n    ans = func(a)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    is_sorted = True\n    for i in range(1, n):\n        if a[i] < a[i - 1]:\n            is_sorted = False\n            break\n    if is_sorted:\n        print(0)\n    else:\n        all_incorrect = True\n        for i in range(n):\n            if a[i] == i + 1:\n                all_incorrect = False\n                break\n        if all_incorrect:\n            print(1)\n        else:\n            i = 0\n            while a[i] == i + 1:\n                i += 1\n            j = n - 1\n            while a[j] == j + 1:\n                j -= 1\n            all_incorrect = True\n            for k in range(i, j + 1):\n                if a[k] == k + 1:\n                    all_incorrect = False\n                    break\n            if all_incorrect:\n                print(1)\n            else:\n                print(2)", "def splEx(s, n):\n    ans = 0\n    prev_not_match = 0\n    for i in range(n):\n        if s[i] - 1 != i:\n            prev_not_match = 1\n        else:\n            if prev_not_match:\n                ans += 1\n                prev_not_match = 0\n            if ans >= 2:\n                break\n    if prev_not_match:\n        ans += 1\n    return min(ans, 2)\nt = int(input())\nfor g in range(t):\n    n = int(input())\n    s = list(map(int, input().split()))\n    print(splEx(s, n))", "from itertools import groupby\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    pos = [A[i] == i + 1 for i in range(n)]\n    cnt = [i for (i, group) in groupby(pos)]\n    c = cnt.count(False)\n    if c == 0:\n        print(0)\n    elif c == 1:\n        print(1)\n    else:\n        print(2)", "def solve(n, a):\n    i = 0\n    while i < n and a[i] == i + 1:\n        i += 1\n    if i == n:\n        return 0\n    while i < n and a[i] != i + 1:\n        i += 1\n    if i == n:\n        return 1\n    while i < n and a[i] == i + 1:\n        i += 1\n    if i == n:\n        return 1\n    return 2\nt = int(input())\nfor i_t in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    print(solve(n, a))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    xs = [int(x) for x in input().split()]\n    all_wrong = True\n    all_right = True\n    streak = False\n    streaks = 0\n    for (i, x) in enumerate(xs):\n        if x == i + 1:\n            if streak:\n                streak = False\n        elif not streak:\n            streak = True\n            streaks += 1\n            if streaks == 2:\n                break\n    else:\n        print(streaks)\n        continue\n    print(2)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    start = 0\n    end = n - 1\n    while start < n:\n        if l[start] == start + 1:\n            start += 1\n        else:\n            break\n    while end >= 0:\n        if l[end] == end + 1:\n            end -= 1\n        else:\n            break\n    if start > end:\n        print(0)\n    else:\n        cando = 1\n        for j in range(start, end + 1):\n            if l[j] == j + 1:\n                print(2)\n                cando = 0\n                break\n        if cando == 1:\n            print(1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    s = 1\n    for i in range(n):\n        if arr[i] != i + 1:\n            if s:\n                s = 0\n                ans += 1\n        else:\n            s = 1\n    print(min(ans, 2))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    t1 = 0\n    t2 = n\n    for i in range(n):\n        if l[i] != i + 1:\n            t1 = i\n            break\n    for i in range(n - 1, -1, -1):\n        if l[i] != i + 1:\n            t2 = i\n            break\n    for i in range(t1, t2):\n        if l[i] == i + 1:\n            c += 1\n    if c == 0:\n        print(1)\n    elif c == n:\n        print(0)\n    else:\n        print(2)", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.insert(0, 0)\n    c = 0\n    el = []\n    for i in range(1, n + 1):\n        if l[i] == i:\n            el.append(i)\n            c += 1\n    el.sort()\n    if c == 0:\n        print(1)\n    elif c == n:\n        print(0)\n    else:\n        if el and el[0] == 1:\n            v = 1\n            while 1:\n                if not el:\n                    break\n                if el[0] == v:\n                    del el[0]\n                    c -= 1\n                else:\n                    break\n                v += 1\n        if el and el[c - 1] == n:\n            v = n\n            el.reverse()\n            while 1:\n                if not el:\n                    break\n                if el[0] == v:\n                    del el[0]\n                    c -= 1\n                else:\n                    break\n                v -= 1\n        if c == 0:\n            print(1)\n        else:\n            print(2)", "def solve(n, ls):\n    k = 0\n    e = True\n    for i in range(n):\n        ex = ls[i] == i + 1\n        if e and (not ex):\n            k += 1\n            if k == 2:\n                break\n        e = ex\n    return k\n\ndef main(istr, ostr):\n    t = int(istr.readline())\n    for _ in range(t):\n        n = int(istr.readline())\n        ls = list(map(int, istr.readline().split()))\n        print(solve(n, ls), file=ostr)\nimport sys\nmain(sys.stdin, sys.stdout)", "import sys\ninput = sys.stdin.readline\nfor z in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    s = 1\n    c = 0\n    for i in range(n):\n        if i + 1 != p[i]:\n            if s:\n                s = 0\n                c += 1\n        else:\n            s = 1\n    print(min(2, c))", "for _ in range(int(input())):\n    input()\n    a = ''.join((str(int(x == i + 1)) for (i, x) in enumerate(map(int, input().split())))).strip('1')\n    print(2 if '1' in a else 1 if a else 0)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = 0\n    for i in range(n):\n        if a[i] == i + 1:\n            x += 1\n    if x == len(a):\n        print(0)\n    elif x == 0:\n        print(1)\n    else:\n        for i in range(n):\n            if a[i] != i + 1:\n                s = i\n                break\n        for i in range(n - 1, s, -1):\n            if a[i] != i + 1:\n                e = i\n                break\n        o = 0\n        for i in range(s + 1, e):\n            if a[i] == i + 1:\n                o = 1\n                break\n        if o == 1:\n            print(2)\n        else:\n            print(1)", "from math import *\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        if a[i] != i + 1:\n            k = i\n            break\n    else:\n        print(ans)\n        continue\n    a.reverse()\n    for i in range(n):\n        if a[i] != n - i:\n            m = n - i - 1\n            break\n    else:\n        print(ans)\n        continue\n    a.reverse()\n    c = 0\n    for i in range(k, m + 1):\n        if a[i] == i + 1:\n            c = c + 1\n    if c == 0:\n        ans = 1\n    else:\n        ans = 2\n    print(ans)", "def func(arr):\n    flag = 0\n    unsort = 0\n    for i in range(len(arr)):\n        if i + 1 == arr[i]:\n            if unsort == 1:\n                flag = 1\n        else:\n            unsort = 1\n            if flag == 1:\n                return 2\n    return unsort\nt = int(input())\nfor i in range(t):\n    a = int(input())\n    arr = list(map(int, input().split()))\n    print(func(arr))", "import math\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    arr = [int(x) for x in input().split(' ')]\n    beg = None\n    end = None\n    index = 0\n    while index < len(arr) - 1:\n        if index + 1 != arr[index]:\n            beg = index\n            break\n        index = index + 1\n    if beg is None:\n        print(0)\n        continue\n    index = len(arr) - 1\n    while index > 0:\n        if index + 1 != arr[index]:\n            end = index\n            break\n        index = index - 1\n    correct = False\n    for i in range(beg + 1, end):\n        if arr[i] == i + 1:\n            correct = True\n            break\n    if correct == False:\n        print(1)\n        continue\n    print(2)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    lis = list(map(int, input().split()))\n    c1 = 0\n    for i in range(n):\n        if lis[i] != i + 1:\n            break\n        else:\n            c1 += 1\n    c2 = 0\n    for i in range(n - 1, -1, -1):\n        if i + 1 != lis[i]:\n            break\n        else:\n            c2 += 1\n    if c1 == n:\n        print(0)\n    else:\n        c = 0\n        for i in range(c1, n - 1 - c2):\n            if lis[i] == i + 1:\n                c += 1\n        if c == 0:\n            print(1)\n        else:\n            print(2)", "def solve():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        s = list(map(int, input().split()))\n        chk = [0] * n\n        for (i, x) in enumerate(s):\n            if i + 1 == x:\n                chk[i] = 1\n        cnt = 0\n        chk.append(1)\n        for i in range(n):\n            if chk[i] == 0 and chk[i + 1] == 1:\n                cnt += 1\n        print(min(cnt, 2))\nsolve()", "for _ in range(int(input())):\n    siz = int(input())\n    (ans, flag) = (0, False)\n    ct = list(map(int, input().split()))\n    for x in range(siz):\n        if ct[x] != x + 1:\n            if not flag:\n                flag = True\n                ans += 1\n                if ans >= 2:\n                    break\n        elif flag:\n            flag = False\n    print(min(ans, 2))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    flag = 0\n    for i in range(n):\n        if l[i] != i + 1:\n            flag = 1\n            break\n    if flag == 0:\n        print(0)\n    else:\n        (f1, f2, flag) = (0, 0, 0)\n        for i in range(n):\n            if l[i] != i + 1:\n                if f2 == 1:\n                    flag = 1\n                    break\n                f1 = 1\n            elif f1 == 1:\n                f2 = 1\n        if flag == 0:\n            print(1)\n        else:\n            print(2)", "import sys\nsys.setrecursionlimit(10 ** 5)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\nfor _ in range(II()):\n    n = II()\n    aa = [0] + LI()\n    ans = 0\n    for i in range(n):\n        if i == aa[i] and i + 1 != aa[i + 1]:\n            ans += 1\n    print(min(2, ans))", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    (i, j) = (0, n - 1)\n    while i < n and i + 1 == lst[i]:\n        i += 1\n    while j > -1 and j + 1 == lst[j]:\n        j -= 1\n    if i > j:\n        print(0)\n    else:\n        c = 0\n        for p in range(i, j + 1):\n            if p + 1 == lst[p]:\n                c += 1\n        if c == 0:\n            print(1)\n        else:\n            print(2)", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    (i, j) = (0, n - 1)\n    while i < n and i + 1 == lst[i]:\n        i += 1\n    while j > -1 and j + 1 == lst[j]:\n        j -= 1\n    if i > j:\n        print(0)\n    else:\n        c = 0\n        for p in range(i, j + 1):\n            if p + 1 == lst[p]:\n                c += 1\n        if c == 0:\n            print(1)\n        else:\n            print(2)", "def solve(n, arr):\n    (intervals, org, dup, lo) = ([], 0, 0, 0)\n    (last, prev_last) = (-1, -1)\n    for i in range(len(arr)):\n        if arr[i] != i + 1:\n            prev_last = last\n            last = 1\n            dup += 1\n        else:\n            prev_last = last\n            last = 2\n            org += 1\n        if last != prev_last and last == 1:\n            lo += 1\n    if org == n:\n        print('0')\n    elif dup == n:\n        print('1')\n    elif lo >= 2:\n        print('2')\n    else:\n        print('1')\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    solve(n, arr)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    res = 0\n    q = 0\n    for i in range(n):\n        if a[i] - 1 != i:\n            q = 1\n        elif q == 1:\n            res += 1\n            q = 0\n        if res >= 2:\n            break\n    if q == 1:\n        res += 1\n    print(min(res, 2))", "for _ in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    (ans, n) = (0, 0)\n    for i in range(a):\n        if b[i] - 1 != i:\n            n = 1\n        else:\n            if n == 1:\n                ans += 1\n            n = 0\n        if ans >= 2:\n            break\n    if n == 1:\n        ans += 1\n    print(min(ans, 2))", "from itertools import groupby\n\ndef solve(ar, n):\n    pos = [ar[i] == i + 1 for i in range(n)]\n    cnt = [key for (key, groups) in groupby(pos)]\n    cnt = cnt.count(False)\n    if cnt == 0:\n        print(0)\n    elif cnt == 1:\n        print(1)\n    else:\n        print(2)\n\ndef read():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        ar = list(map(int, input().strip().split()))\n        solve(ar, n)\nread()", "for i in range(int(input())):\n    n = int(input())\n    l = [int(num) for num in input().split()]\n    p = [j for j in range(n) if l[j] != j + 1]\n    if len(p) == 0:\n        print('0')\n    elif len(p) == p[len(p) - 1] - p[0] + 1:\n        print('1')\n    else:\n        print('2')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    flag = 1\n    for i in range(n):\n        if arr[i] != i + 1:\n            if flag:\n                flag = 0\n                ans += 1\n        else:\n            flag = 1\n    print(min(ans, 2))", "num_test_case = int(input())\nfor case in range(num_test_case):\n    n = int(input())\n    num_list = list(map(int, input().split()))\n    id_list = list(range(1, n + 1))\n    dif_list = []\n    for i in range(n):\n        dif_list.append(id_list[i] - num_list[i])\n    edgeZeroCounter = 0\n    for num in dif_list:\n        if num == 0:\n            edgeZeroCounter += 1\n        else:\n            break\n    for num in reversed(dif_list):\n        if num == 0:\n            edgeZeroCounter += 1\n        else:\n            break\n    fixedPointCounter = 0\n    for num in dif_list:\n        if num == 0:\n            fixedPointCounter += 1\n    if fixedPointCounter == n:\n        answer = 0\n    elif fixedPointCounter == 0 or fixedPointCounter == edgeZeroCounter:\n        answer = 1\n    else:\n        answer = 2\n    print(answer)", "import math\n\ndef main():\n    n = int(input())\n    lst = list(map(int, input().split()))\n    all_true = True\n    all_false = True\n    for i in range(n):\n        if lst[i] == i + 1:\n            all_false = False\n        else:\n            all_true = False\n    if all_false:\n        print(1)\n    elif all_true:\n        print(0)\n    else:\n        cnt = 0\n        prev = True\n        if lst[0] != 1:\n            cnt += 1\n            prev = False\n        for i in range(1, n):\n            if lst[i] != i + 1:\n                if prev:\n                    cnt += 1\n                    prev = False\n            else:\n                prev = True\n        print(min(2, cnt))\nt = int(input())\nfor i in range(t):\n    main()", "t = int(input())\nfor j in range(t):\n    k = s = 0\n    n = int(input())\n    y = n + 1\n    L = map(int, input().split())\n    L = list(L)\n    for i in range(n):\n        if L[i] != i + 1:\n            k = k + 1\n        elif k > 0:\n            y = i\n            break\n    if k == 0:\n        print(0)\n    else:\n        for i in range(y + 1, n):\n            if L[i] != i + 1:\n                s = s + 1\n                break\n    if k > 1 and s == 0:\n        print(1)\n    elif s > 0:\n        print(2)", "t = int(input())\nfor _ in range(t):\n    lenAr = int(input())\n    ar = list(map(int, input().split()))\n    (var1, var2, var3) = (0, 0, 0)\n    for idx in range(lenAr):\n        if ar[idx] != idx + 1:\n            var1 = idx + 1\n            break\n    if not var1:\n        print(0)\n    else:\n        for idx in range(lenAr - 1, -1, -1):\n            if ar[idx] != idx + 1:\n                var2 = idx + 1\n                break\n        for idx in range(var1 - 1, var2):\n            if ar[idx] == idx + 1:\n                var3 = idx + 1\n                break\n        if not var3:\n            print(1)\n        else:\n            print(2)", "t = int(input())\nfor ii in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    unfixSeg = 0\n    end = False\n    for i in range(n):\n        if i + 1 != l[i]:\n            if not end:\n                end = True\n        elif end:\n            unfixSeg += 1\n            end = False\n    if end:\n        unfixSeg += 1\n    if unfixSeg == 0:\n        print(0)\n    elif unfixSeg == 1:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = i = 0\n    while i < n:\n        if a[i] != i + 1:\n            while i < n and a[i] != i + 1:\n                i += 1\n            ans += 1\n        else:\n            i += 1\n    print(ans if ans < 2 else 2)", "for _ in range(int(input())):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    unsortedSubArray = 0\n    f = False\n    for i in range(n):\n        if ls[i] != i + 1:\n            if not f:\n                f = True\n        elif f:\n            unsortedSubArray += 1\n            f = False\n    if f:\n        unsortedSubArray += 1\n    print(min(2, unsortedSubArray))", "for _ in range(int(input())):\n    n = int(input())\n    lst = [int(x) for x in input().split()]\n    k = 0\n    if lst[0] == 1:\n        prev = True\n    else:\n        (k, prev) = (1, False)\n    for i in range(1, n):\n        if lst[i] == i + 1:\n            prev = True\n        else:\n            if prev:\n                k += 1\n            prev = False\n    print(min(k, 2))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for j in range(1, max(a) + 1):\n        if j != a[j - 1]:\n            break\n    for k in range(max(a), 0, -1):\n        if a[k - 1] != k:\n            break\n    v = 0\n    for t in range(j, k + 1):\n        if t == a[t - 1]:\n            v += 1\n    if v == 0 and j >= k:\n        print(v)\n    elif v == 0 and k > j:\n        print(1)\n    else:\n        print(2)", "import sys\nsys.setrecursionlimit(10 ** 5)\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\nfor _ in range(II()):\n    n = II()\n    arr = [0] + LI()\n    ans = 0\n    for i in range(n):\n        if arr[i] == i and arr[i + 1] != i + 1:\n            ans += 1\n    print(min(2, ans))", "for t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    c = 0\n    tilt = False\n    for i in range(n):\n        (ind, val) = (i + 1, arr[i])\n        if ind != val:\n            if not tilt:\n                c = c + 1\n                tilt = True\n        elif tilt:\n            tilt = False\n    if c == 0:\n        ans = 0\n    elif c == 1:\n        ans = 1\n    else:\n        ans = 2\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    left = -1\n    right = n\n    for i in range(n):\n        if a[i] != i + 1:\n            left = i\n            break\n    for i in range(n - 1, -1, -1):\n        if a[i] != i + 1:\n            right = i + 1\n            break\n    if left == -1:\n        print(0)\n    else:\n        cnt = 0\n        for i in range(left, right):\n            if a[i] == i + 1:\n                cnt += 1\n        if cnt == 0:\n            print(1)\n        else:\n            print(2)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = list(map(int, input().split()))\n    ar = []\n    for i in range(n):\n        if s[i] != i + 1:\n            ar.append(i)\n    if len(ar) == 0:\n        print(0)\n    else:\n        bi = False\n        for i in range(1, len(ar)):\n            if ar[i] - ar[i - 1] != 1:\n                bi = True\n        if bi == True:\n            print(2)\n        else:\n            print(1)", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    s = sorted(A)\n    if A == s:\n        print(0)\n        continue\n    ok = True\n    (st, end) = (0, n - 1)\n    for i in range(n):\n        if A[i] == s[i]:\n            st = i\n        else:\n            break\n    for i in range(n - 1, -1, -1):\n        if A[i] == s[i]:\n            end = i\n        else:\n            break\n    for i in range(st + 1, end):\n        if A[i] == s[i]:\n            ok = False\n    if ok:\n        print(1)\n    else:\n        print(2)", "import sys\nimport heapq\ninput = lambda : sys.stdin.readline().strip()\nipnut = input\npprint = lambda x: print(' '.join(map(lambda t: str(t + 1), x)))\n\ndef mex():\n    used = set(a)\n    for i in range(n + 1):\n        if i not in used:\n            return i\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (l, r) = (0, n - 1)\n    while l < r and a[l] == l + 1:\n        l += 1\n    while r > l and a[r] == r + 1:\n        r -= 1\n    ans = 0\n    for i in range(l, r):\n        ans = 1\n        if a[i] == i + 1:\n            ans = 2\n            break\n    print(ans)", "t = int(input())\nfor hatt in range(t):\n    n = int(input())\n    a = [int(num) for num in input().split()]\n    coun = 0\n    if a[0] == 1:\n        prev = True\n    else:\n        coun = 1\n        prev = False\n    for i in range(1, n):\n        if a[i] == i + 1:\n            prev = True\n        else:\n            if prev:\n                coun += 1\n            prev = False\n    print(min(coun, 2))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = []\n    if a[0] == 1:\n        l.append(1)\n    else:\n        l.append(0)\n    for i in range(n):\n        if a[i] == i + 1:\n            if l[-1] == 1:\n                continue\n            else:\n                l.append(1)\n        elif l[-1] == 0:\n            continue\n        else:\n            l.append(0)\n    s = len(l)\n    if s == 1:\n        if l[0] == 1:\n            print(0)\n        else:\n            print(1)\n    elif s == 2:\n        print(1)\n    elif s == 3:\n        if l[0] == 0:\n            print(2)\n        else:\n            print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    idx = []\n    for i in range(n):\n        if i + 1 != l[i]:\n            idx.append(i)\n    if len(idx) == 0:\n        print(0)\n    elif len(idx) == max(idx) - min(idx) + 1:\n        print(1)\n    else:\n        print(2)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    li = [int(i) for i in input().split()]\n    (s, e) = (0, n - 1)\n    while s < n - 1:\n        if li[s] == s + 1:\n            s += 1\n        else:\n            break\n    while e > 0:\n        if li[e] == e + 1:\n            e -= 1\n        else:\n            break\n    ans = 0\n    if s < e:\n        pos = False\n        for i in range(s, e + 1):\n            if li[i] == i + 1:\n                pos = True\n                break\n        if pos:\n            ans = 2\n        else:\n            ans = 1\n    print(ans)\n    t -= 1", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = 0\n    for i in range(n):\n        if d == 0:\n            if a[i] != i + 1:\n                d = 1\n        elif d == 1:\n            if a[i] == i + 1:\n                d = 2\n        elif d == 2:\n            if a[i] != i + 1:\n                d = 3\n                print('2')\n                break\n    else:\n        if d == 0:\n            print('0')\n        else:\n            print('1')", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    arr = map(int, input().split(' '))\n    count = 1\n    group = False\n    for (i, a) in enumerate(arr):\n        if i == 0 and a == 1:\n            group = True\n            count -= 1\n        else:\n            if a == i + 1 and (not group):\n                group = True\n            if a != i + 1 and group:\n                group = False\n                count += 1\n    if count > 2:\n        print(2)\n    else:\n        print(count)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    p = []\n    for i in range(n):\n        if l[i] == i + 1:\n            p.append(i + 1)\n        else:\n            continue\n    if len(p) == n:\n        print(0)\n    elif len(p) == 0:\n        print(1)\n    else:\n        f = 0\n        l = len(p)\n        x = 0\n        y = 0\n        for i in range(l):\n            if p[i] == i + 1:\n                x += 1\n            else:\n                break\n        for i in range(l - 1, -1, -1):\n            if p[i] == n - (l - 1 - i):\n                y += 1\n            else:\n                break\n        if l - x - y > 0:\n            print(2)\n        else:\n            print(1)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [a[i] == i + 1 for i in range(n)] + [1]\n    f = -1\n    sum = 0\n    for i in range(n + 1):\n        if b[i]:\n            if i - f - 1 > 0:\n                sum += 1\n            f = i\n    print(min(2, sum))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (start, ans, c) = (0, 0, 0)\n    end = n\n    for i in range(n - 1, -1, -1):\n        if a[i] != i + 1:\n            end = i + 1\n            break\n        else:\n            end = i\n    for i in range(n):\n        if a[i] != i + 1:\n            start = i\n            break\n        else:\n            start = i\n    if start < end:\n        for i in range(start, end):\n            if a[i] == i + 1:\n                c = 1\n                break\n        if c == 1:\n            print(2)\n        else:\n            print(1)\n    else:\n        print(0)", "t = int(input())\nfor _ in range(t):\n    (n, c) = (int(input()), 0)\n    ans = 0\n    arr = [0] + list(map(int, input().split()))\n    for i in range(1, n + 1):\n        if i != arr[i]:\n            c += 1\n        else:\n            ans += 1 if c else 0\n            c = 0\n    if c:\n        ans += 1\n    if ans == 0:\n        print(0)\n    elif ans == 1:\n        print(1)\n    else:\n        print(2)", "from sys import stdin, stdout\nimport math\nfrom collections import Counter, defaultdict\nLI = lambda : list(map(int, input().split()))\nMAP = lambda : map(int, input().split())\nIN = lambda : int(input())\nS = lambda : input()\n\ndef case():\n    n = IN()\n    a = LI()\n    x = []\n    c0 = c1 = 0\n    for i in range(n):\n        if i + 1 == a[i]:\n            x.append(1)\n            c1 += 1\n        else:\n            x.append(0)\n            c0 += 1\n    if c0 == n:\n        print(1)\n        return\n    elif c1 == n:\n        print(0)\n        return\n    while len(x) and x[0] != 0:\n        x.pop(0)\n    while len(x) and x[-1] == 1:\n        x.pop()\n    if sum(x):\n        print(2)\n    else:\n        print(1)\nfor _ in range(IN()):\n    case()", "t = int(input())\nwhile t:\n    t = t - 1\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    ans = 0\n    a = [0] + a\n    i = 1\n    while i <= n:\n        if i == a[i]:\n            i = i + 1\n            continue\n        j = i + 1\n        while j <= n and j != a[j]:\n            j += 1\n        i = j\n        ans += 1\n    print(min(ans, 2))", "t = int(input())\nfor hatt in range(t):\n    n = int(input())\n    a = [int(num) for num in input().split()]\n    coun = 0\n    if a[0] == 1:\n        prev = True\n    else:\n        coun = 1\n        prev = False\n    for i in range(1, n):\n        if a[i] == i + 1:\n            prev = True\n        else:\n            if prev:\n                coun += 1\n            prev = False\n    print(min(coun, 2))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    idx = []\n    for i in range(n):\n        if i + 1 != l[i]:\n            idx.append(i)\n    if len(idx) == 0:\n        print(0)\n    elif len(idx) == max(idx) - min(idx) + 1:\n        print(1)\n    else:\n        print(2)", "n = int(input())\nfor i2 in range(n):\n    x = int(input())\n    l = list(map(int, input().split()))\n    p = 0\n    p1 = 0\n    p2 = 0\n    k = 0\n    for i in range(x):\n        if l[i] == i + 1:\n            p1 += 1\n        else:\n            break\n    for i in range(x - 1, -1, -1):\n        if l[i] == i + 1:\n            p2 += 1\n        else:\n            break\n    for i in range(p1, x - p2):\n        if l[i] == i + 1:\n            p += 1\n    if p1 == x:\n        print(0)\n    elif p == 0:\n        print(1)\n    else:\n        print(2)", "def solve():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        s = list(map(int, input().split()))\n        chk = [0] * n\n        for (i, x) in enumerate(s):\n            if i + 1 == x:\n                chk[i] = 1\n        cnt = 0\n        chk.append(1)\n        for i in range(n):\n            if chk[i] == 0 and chk[i + 1] == 1:\n                cnt += 1\n        print(min(cnt, 2))\nsolve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(num) for num in input().split()]\n    coun = 0\n    if a[0] == 1:\n        prev = True\n    else:\n        coun = 1\n        prev = False\n    for i in range(1, n):\n        if a[i] == i + 1:\n            prev = True\n        else:\n            if prev:\n                coun += 1\n            prev = False\n    print(min(coun, 2))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(num) for num in input().split()]\n    cnt = 0\n    if a[0] == 1:\n        prev = True\n    else:\n        cnt = 1\n        prev = False\n    for i in range(1, n):\n        if a[i] == i + 1:\n            prev = True\n        else:\n            if prev:\n                cnt += 1\n            prev = False\n    print(min(cnt, 2))", "t = input()\n\ndef get(place):\n    f = 0\n    e = len(place)\n    while f < e - 1 and place[f]:\n        f += 1\n    while e > 0 and place[e - 1]:\n        e -= 1\n    return place[f:e]\nfor opo in range(int(t)):\n    n = int(input())\n    a = input().split()\n    a = [int(i) for i in a]\n    place = [False] * n\n    for i in range(n):\n        if i + 1 == a[i]:\n            place[i] = True\n    c = 0\n    if all(place):\n        print(c)\n    elif not any(get(place)):\n        print(1)\n    else:\n        print(2)", "import math\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    m = 0\n    cc = 0\n    mc = 0\n    for j in range(0, n):\n        if a[j] == j + 1:\n            c = 1\n            m = m + 1\n            cc = 0\n        else:\n            cc = cc + 1\n            if cc == 1:\n                mc = mc + 1\n    if c == 0 or mc == 1:\n        print('1')\n    elif m == n:\n        print('0')\n    else:\n        print('2')", "for _ in range(0, int(input())):\n    (n, a) = (int(input()), list(map(int, input().split())))\n    (i, j, c, cr) = (0, len(a) - 1, 1, n)\n    while i < len(a) and a[i] == i + 1:\n        i += 1\n    while j >= 0 and a[j] == j + 1:\n        j -= 1\n    if i >= j:\n        print(0)\n    else:\n        f = 0\n        for k in range(i, j + 1):\n            if a[k] == k + 1:\n                f = 1\n                break\n        if f == 0:\n            print(1)\n        else:\n            print(2)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    i = 0\n    while i < n:\n        if a[i] - 1 == i:\n            i += 1\n        else:\n            j = i\n            while j < n and a[j] - 1 != j:\n                j += 1\n            i = j\n            c += 1\n    print(min(c, 2))", "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    ans = i = 0\n    c = 1\n    d = n\n    while i < n and c == lis[i]:\n        c += 1\n        i += 1\n    i = n - 1\n    while i >= 0 and d == lis[i]:\n        d -= 1\n        i -= 1\n    for i in range(c - 1, d):\n        if lis[i] == i + 1:\n            ans += 1\n    if c >= d:\n        print(0)\n    elif ans == 0:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (cont, ant) = (0, 0)\n    for i in range(1, n + 1):\n        if a[i - 1] == i:\n            ant = 0\n        elif ant == 0:\n            ant = 1\n            cont += 1\n    print(min(cont, 2))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    arr = list(map(int, input().rstrip().split()))\n    vec = [0] * n\n    sn = n\n    val = 0\n    for i in range(n):\n        if arr[i] == i + 1:\n            vec[i] += 1\n            val += 1\n    (left, right) = (0, 0)\n    while left < n and vec[left] == 1:\n        left += 1\n    while right < n and vec[n - 1 - right] == 1 and (left < n - 1 - right):\n        right += 1\n    sn = n - left - right\n    val = val - left - right\n    if val == sn:\n        print('0')\n    elif val == 0:\n        print('1')\n    else:\n        print('2')\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    f = 0\n    flag = 0\n    g = 0\n    bigflag = 0\n    for i in range(1, n + 1):\n        if l[i - 1] != i:\n            if flag == 0:\n                f = 1\n                g = 1\n            else:\n                bigflag = 1\n                break\n        elif g == 1:\n            flag = 1\n    if f == 0:\n        print(0)\n    elif bigflag == 0:\n        print(1)\n    else:\n        print(2)", "for s in [*open(0)][2::2]:\n    l = list(map(int, s.split()))\n    c = 0\n    s = 1\n    for i in range(len(l)):\n        if i + 1 != l[i]:\n            if s:\n                c += 1\n                s = 0\n        else:\n            s = 1\n    print(min(2, c))", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    has_0 = False\n    has_other = False\n    start = 0\n    while start < n and a[start] - start - 1 == 0:\n        start += 1\n    end = n - 1\n    while end > -1 and a[end] - end - 1 == 0:\n        end -= 1\n    if start == n:\n        print(0)\n    else:\n        for (i, v) in enumerate(a[start:end + 1], start=start):\n            if abs(v - i - 1) == 0:\n                has_0 = True\n            else:\n                has_other = True\n        if has_0 and has_other:\n            print(2)\n        elif has_0:\n            print(0)\n        else:\n            print(1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a == sorted(a):\n        print(0)\n    else:\n        (flag, lrflag) = (False, False)\n        (left, right) = (0, n + 1)\n        if a[0] == 1 or a[n - 1] == n:\n            lrflag = True\n            for (l, num) in enumerate(a, 1):\n                if l == num:\n                    left = l\n                else:\n                    break\n            for (r, i) in zip(reversed(a), reversed(range(1, n + 1))):\n                if r == i:\n                    right = r\n                else:\n                    break\n        for (i, num) in enumerate(a, 1):\n            if i == num and left < i < right:\n                flag = True\n        if lrflag == True and flag == False:\n            print(1)\n        elif lrflag == False and flag == False:\n            print(1)\n        else:\n            print(2)", "t = int(input())\n\ndef number_of_continous_disorder(l):\n    sort_l = sorted(l)\n    count = 0\n    previous_in_disorder = False\n    for i in range(len(l)):\n        if l[i] == sort_l[i]:\n            previous_in_disorder = False\n        elif not previous_in_disorder:\n            count += 1\n            previous_in_disorder = True\n    return count\n\ndef solve():\n    n = int(input())\n    l = list(map(int, input().split()))\n    count = number_of_continous_disorder(l)\n    if count == 0:\n        print(0)\n    elif count == 1:\n        print(1)\n    else:\n        print(2)\n    return\nwhile t:\n    solve()\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a == sorted(a):\n        print(0)\n    else:\n        x = []\n        for i in range(n):\n            if a[i] - 1 != i:\n                x.append(i)\n        if x[-1] - x[0] + 1 == len(x):\n            print(1)\n        else:\n            print(2)", "def solve():\n    N = int(input())\n    A = [int(x) for x in input().split()]\n    ans = 0\n    for i in range(N - 1):\n        if A[i] > A[i + 1]:\n            ans = -1\n    if ans == 0:\n        print(ans)\n        return\n    x = []\n    for i in range(N):\n        if A[i] != i + 1:\n            x.append(i)\n    ans = 1\n    for i in range(len(x) - 1):\n        if x[i] != x[i + 1] - 1:\n            ans = 2\n    print(ans)\n\ndef main():\n    T = int(input())\n    while T != 0:\n        solve()\n        T -= 1\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (s, e, f) = (0, 0, 0)\n    for i in range(n):\n        if a[i] != i + 1:\n            break\n        s += 1\n    for i in range(n - 1, -1, -1):\n        if a[i] != i + 1:\n            break\n        e += 1\n    k = s\n    while k < n - e:\n        if a[k] == k + 1:\n            f = 1\n            break\n        k += 1\n    if s == n:\n        print(0)\n    elif f == 0:\n        print(1)\n    else:\n        print(2)", "import sys\nmod = 10 ** 9 + 7\nINF = float('inf')\n\ndef inp():\n    return int(sys.stdin.readline())\n\ndef inpl():\n    return list(map(int, sys.stdin.readline().split()))\nt = inp()\nfor _ in range(t):\n    n = inp()\n    a = inpl()\n    if a == list(range(1, n + 1)):\n        print(0)\n        continue\n    cnt = True\n    fl = False\n    ff = False\n    for i in range(n):\n        if ff:\n            if i + 1 != a[i]:\n                cnt = False\n        elif fl:\n            if i + 1 == a[i]:\n                ff = True\n        elif i + 1 != a[i]:\n            fl = True\n    print(1 if cnt else 2)", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    p = 0\n    for i in range(n):\n        if l[i] == i + 1:\n            p += 1\n    if p == n:\n        print(0)\n    elif p == 0:\n        print(1)\n    else:\n        for i in range(n):\n            if l[i] != i + 1:\n                s = i\n                break\n        for i in range(n - 1, s, -1):\n            if l[i] != i + 1:\n                e = i\n                break\n        f = 0\n        for i in range(s + 1, e):\n            if l[i] == i + 1:\n                f = 1\n                break\n        if f == 1:\n            print(2)\n        else:\n            print(1)", "t = int(input())\nwhile t:\n    t = t - 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    sorted = 0\n    for i in range(n):\n        if a[i] == i + 1:\n            sorted += 1\n        else:\n            b.append(i + 1)\n    if sorted == n:\n        print(0)\n    elif sorted != n:\n        minb = min(b)\n        maxb = max(b)\n        rangeuns = maxb - minb + 1\n        unsorted = n - sorted\n        if unsorted == rangeuns:\n            print(1)\n        else:\n            print(2)", "ans = ''\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    i = 0\n    j = n - 1\n    flag1 = True\n    flag2 = True\n    falg3 = 0\n    while flag1 or flag2:\n        if i >= j:\n            falg3 = 1\n            break\n        if arr[i] != i + 1:\n            flag1 = False\n        else:\n            i += 1\n        if arr[j] != j + 1:\n            flag2 = False\n        else:\n            j -= 1\n    if falg3:\n        ans += '0\\n'\n    else:\n        cnt = 0\n        while i <= j:\n            if arr[i] == i + 1:\n                cnt += 1\n            i += 1\n        if cnt:\n            ans += '2\\n'\n        else:\n            ans += '1\\n'\nprint(ans)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = ''\n    for i in range(n):\n        if a[i] == i + 1:\n            s += ' '\n        else:\n            s += '1'\n    l = s.split()\n    print(min(2, len(l)))", "def check(a):\n    l = 0\n    r = 0\n    for i in range(n):\n        if a[i] != i + 1:\n            l = i\n            break\n    for j in range(n - 1, -1, -1):\n        if a[j] != j + 1:\n            r = j\n            break\n    for i in range(l, r + 1):\n        if a[i] == i + 1:\n            return 1\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    if a == sorted(a):\n        print(0)\n    elif check(a) == 1:\n        print(2)\n    else:\n        print(1)", "def main(n, lst):\n    (ind0, ind1) = (-1, -1)\n    for i in range(n):\n        if lst[i] != i + 1:\n            if ind0 == -1:\n                ind0 = i\n            if ind1 < i:\n                ind1 = i\n    lst = lst[ind0:ind1 + 1]\n    if ind0 == -1:\n        return 0\n    else:\n        for i in range(ind0, ind1 + 1):\n            if i + 1 == lst[i - ind0]:\n                return 2\n        return 1\nfor _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    print(main(n, lst))", "def main(n, lst):\n    (ind0, ind1) = (-1, -1)\n    for i in range(n):\n        if lst[i] != i + 1:\n            if ind0 == -1:\n                ind0 = i\n            if ind1 < i:\n                ind1 = i\n    lst = lst[ind0:ind1 + 1]\n    if ind0 == -1:\n        return 0\n    else:\n        for i in range(ind0, ind1 + 1):\n            if i + 1 == lst[i - ind0]:\n                return 2\n        return 1\nfor _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    print(main(n, lst))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (f, l, d) = (-1, -1, False)\n    for i in range(n):\n        if a[i] != i + 1:\n            f = i\n            break\n    if f != -1:\n        for i in range(n - 1, f, -1):\n            if a[i] != i + 1 and l == -1:\n                l = i\n            if a[i] == i + 1 and l != -1:\n                d = True\n                break\n    if f == -1:\n        print(0)\n    elif l == -1:\n        print(1)\n    elif d == False:\n        print(1)\n    else:\n        print(2)"]