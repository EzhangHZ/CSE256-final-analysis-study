["import sys\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\n\ndef main():\n    for _ in range(II()):\n        (n, k) = MI()\n        aa = LI()\n        ww = LI()\n        aa.sort()\n        ww.sort(reverse=True)\n        c1 = ww.count(1)\n        ans = sum(aa[n - k:]) + sum(aa[n - c1:])\n        i = 0\n        for w in ww:\n            if w == 1:\n                break\n            ans += aa[i]\n            i += w - 1\n        print(ans)\nmain()", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    (*li,) = map(int, input().split())\n    (*li1,) = map(int, input().split())\n    li.sort(reverse=True)\n    li1.sort()\n    (j, ans) = (0, 0)\n    for i in range(k):\n        if li1[i] == 1:\n            ans += li[i] * 2\n        else:\n            j += li1[i] - 1\n            ans += li[i] + li[k + j - 1]\n    print(ans)", "from sys import stdin\ninput = stdin.readline\nfrom collections import deque\n\ndef f(a, frnd):\n    a = sorted(a, reverse=True)\n    frnd = sorted(frnd)\n    frnd = deque(frnd)\n    hi = len(a) - 1\n    lo = 0\n    ans = 0\n    i = 0\n    while frnd:\n        tf = frnd.popleft()\n        if tf == 1:\n            tf -= 1\n            mx = a[lo]\n            ans += 2 * mx\n            lo += 1\n        else:\n            frnd.appendleft(tf)\n            frnd.reverse()\n            for num in frnd:\n                ans += a[hi] + a[lo]\n                hi = hi - num + 1\n                lo += 1\n            break\n    return ans\nfor _ in range(int(input())):\n    (n, m) = map(int, input().strip().split())\n    t = list(map(int, input().strip().split()))\n    frnd = list(map(int, input().strip().split()))\n    print(f(t, frnd))", "from sys import stdin\ninput = stdin.readline\nfrom collections import deque\n\ndef f(a, frnd):\n    a = sorted(a, reverse=True)\n    frnd = sorted(frnd)\n    frnd = deque(frnd)\n    hi = len(a) - 1\n    lo = 0\n    ans = 0\n    i = 0\n    while frnd:\n        tf = frnd.popleft()\n        if tf == 1:\n            tf -= 1\n            mx = a[lo]\n            ans += 2 * mx\n            lo += 1\n        else:\n            frnd.appendleft(tf)\n            frnd.reverse()\n            for num in frnd:\n                ans += a[hi] + a[lo]\n                hi = hi - num + 1\n                lo += 1\n            break\n    return ans\nfor _ in range(int(input())):\n    (n, m) = map(int, input().strip().split())\n    t = list(map(int, input().strip().split()))\n    frnd = list(map(int, input().strip().split()))\n    print(f(t, frnd))", "def testcase():\n    import sys\n    import heapq\n    input = sys.stdin.readline\n    (n, k) = [int(x) for x in input().strip().split()]\n    A = sorted([int(x) for x in input().strip().split()])\n    W = sorted([int(x) for x in input().strip().split()], reverse=True)\n    ans = 0\n    ones = W.count(1)\n    if ones:\n        ans += sum(A[-ones:]) * 2\n        A = A[:-ones]\n    (l, r) = (0, len(A) - 1)\n    for w in W:\n        if w == 1:\n            break\n        ans += A[l] + A[r]\n        l += w - 1\n        r -= 1\n    print(ans)\n\ndef main():\n    import sys\n    input = sys.stdin.readline\n    t = int(input())\n    for _ in range(t):\n        testcase()\nmain()", "list_ans = []\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    list1 = list(map(int, input().split()))\n    list2 = list(map(int, input().split()))\n    list1.sort(reverse=True)\n    list2.sort()\n    for i in range(k):\n        if list2[i] >= 3:\n            list2 = list2[:i] + list2[i:][::-1]\n            break\n    ans = 0\n    a = b = 0\n    for i in range(k):\n        x = list2[i]\n        if x == 1:\n            ans += list1[a] * 2\n            a += 1\n        elif x == 2:\n            ans += list1[a] + list1[a + 1]\n            a += 2\n        else:\n            ans += list1[a] + list1[-1 - b]\n            a += 1\n            b += x - 1\n    list_ans.append(ans)\nprint(*list_ans, sep='\\n')", "def rationalee(n, k, a, w):\n    a.sort()\n    w.sort()\n    i = 0\n    j = n - 1\n    ans = 0\n    start = 0\n    for y in w:\n        if y == 1:\n            ans += 2 * a[j]\n            j -= 1\n            start += 1\n        else:\n            break\n    w = w[start:]\n    w = w[::-1]\n    for x in w:\n        if x == 1:\n            ans += 2 * a[j]\n            j -= 1\n        else:\n            ans += a[j] + a[i]\n            j -= 1\n            i += x - 1\n    return ans\nt = int(input())\na = []\nfor i in range(t):\n    (n, k) = list(map(int, input().split(' ')))\n    a1 = list(map(int, input().split(' ')))\n    w = list(map(int, input().split(' ')))\n    a.append([n, k, a1, w])\nfor x in a:\n    print(rationalee(*x))", "from sys import maxsize, stdout, stdin, stderr\nmod = int(1000000000.0 + 7)\n\ndef I():\n    return int(stdin.readline())\n\ndef lint():\n    return [int(x) for x in stdin.readline().split()]\n\ndef S():\n    return input().strip()\n\ndef grid(r, c):\n    return [lint() for i in range(r)]\nfrom collections import defaultdict, Counter\nimport math\nfrom itertools import groupby\n\ndef gcd(a, b):\n    while b:\n        a %= b\n        tmp = a\n        a = b\n        b = tmp\n    return a\n\ndef lcm(a, b):\n    return a / gcd(a, b) * b\n\ndef check_prime(n):\n    for i in range(2, n):\n        if n % i == 0:\n            return 0\n    return 1\nt = I()\nfor _ in range(t):\n    (n, k) = lint()\n    a = lint()\n    w = lint()\n    a.sort(reverse=True)\n    w.sort()\n    ans = 0\n    ans = sum(a[:k])\n    j = k - 1\n    for i in range(k):\n        if w[i] == 1:\n            ans += a[i]\n        else:\n            ans += a[j - 1 + w[i]]\n            j = j - 1 + w[i]\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    l = sorted(l)[::-1]\n    w = sorted(w)[::-1]\n    t = w.count(1)\n    z = t\n    ans = 2 * sum(l[:t])\n    b = n - 1\n    for i in range(k - z):\n        ans += l[t] + l[b]\n        t += 1\n        b = b - w[i] + 1\n    print(ans)", "from collections import defaultdict, Counter, deque\nfrom math import inf, sqrt\nfrom functools import lru_cache\nfrom heapq import heappop, heappush, heapify\nfrom bisect import bisect_left, bisect_right\nimport sys\nMod = 10 ** 9 + 7\n\ndef solution():\n    (n, k) = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    parts = list(map(int, input().split()))\n    arr.sort()\n    parts.sort(reverse=True)\n    (l, r) = (0, len(arr) - 1)\n    res = 0\n    while parts and parts[-1] == 1:\n        parts.pop()\n        res += 2 * arr[r]\n        r -= 1\n    parts = parts[::-1]\n    while parts:\n        val = parts.pop()\n        res += arr[l]\n        res += arr[r]\n        r -= 1\n        l += val - 2 + 1\n    return print(res)\n\ndef main():\n    t = 1\n    t = int(input())\n    for _ in range(t):\n        solution()\nimport sys\nimport threading\nsys.setrecursionlimit(10 ** 6)\nthreading.stack_size(1 << 27)\nthread = threading.Thread(target=main)\nthread.start()\nthread.join()", "t = int(input())\nfor tc in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    a.sort(reverse=True)\n    w.sort()\n    (ii, l, r) = (k, 0, n - 1)\n    ans = 0\n    for i in range(k):\n        if w[i] > 1:\n            ii = i\n            break\n        ans = ans + a[l] * 2\n        l = l + 1\n    for u in range(k - 1, ii - 1, -1):\n        i = w[u]\n        ans = ans + a[l] + a[r]\n        r = r - i + 1\n        l = l + 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    line = input().split()\n    int_line = [int(x) for x in line]\n    (n, k) = int_line\n    ns = input().split()\n    ns = [int(x) for x in ns]\n    ws = input().split()\n    ws = [int(x) for x in ws]\n    ns.sort()\n    ws.sort()\n    result = 0\n    num_one = ws.count(1)\n    if num_one:\n        result += 2 * sum(ns[-num_one:])\n        ns = ns[:-num_one]\n        ws = ws[num_one:]\n    ws.reverse()\n    start = 0\n    end = len(ns) - 1\n    for i in range(len(ws)):\n        result += ns[end]\n        end -= 1\n        result += ns[start]\n        start += ws[i] - 1\n    print(result)", "import sys\nfast_reader = sys.stdin.readline\nfast_writer = sys.stdout.write\n\ndef input():\n    return fast_reader().strip()\n\ndef print(*argv):\n    fast_writer(' '.join((str(i) for i in argv)))\n    fast_writer('\\n')\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    a.sort(reverse=True)\n    w.sort()\n    ones = w.count(1)\n    ans = 2 * sum(a[:ones])\n    a = a[ones:]\n    w = w[ones:]\n    w.sort(reverse=True)\n    a.sort()\n    st = 0\n    en = len(a) - 1\n    for i in range(len(w)):\n        ans += a[en] + a[st]\n        en -= 1\n        st += w[i] - 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort(reverse=True)\n    b.sort()\n    ans = sum(a[:k])\n    c = b.count(1)\n    ans += sum(a[:c])\n    for i in b[c:]:\n        k += i - 1\n        ans += a[k - 1]\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    A = list(map(int, input().split()))\n    W = list(map(int, input().split()))\n    A.sort(reverse=True)\n    ans = 0\n    W.sort()\n    (j, l, r) = (k, 0, n - 1)\n    for i in range(n):\n        if W[i] > 1:\n            j = i\n            break\n        ans += 2 * A[i]\n        l += 1\n    for u in range(k - 1, j - 1, -1):\n        i = W[u]\n        ans = ans + A[l] + A[r]\n        r = r - i + 1\n        l = l + 1\n    print(ans)", "n = int(input())\nfor _ in range(n):\n    (n_integers, n_friends) = list(map(int, input().split()))\n    integers = list(map(int, input().split()))\n    gifts = list(map(int, input().split()))\n    integers = sorted(integers, reverse=True)\n    gifts = sorted(gifts)\n    happiness_total = 0\n    for i in range(n_friends):\n        happiness_total += integers[i]\n        if gifts[i] == 1:\n            happiness_total += integers[i]\n    i = n_friends - 1\n    for gift in gifts:\n        if gift != 1:\n            i += gift - 1\n            happiness_total += integers[i]\n    print(happiness_total)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = sorted(list(map(int, input().split())))\n    w = sorted(list(map(int, input().split())))\n    last = n - 1\n    ans = 0\n    for i in w:\n        if i == 1:\n            ans += a[last]\n        ans += a[last]\n        last -= 1\n    fir = 0\n    for i in w[::-1]:\n        if i > 1:\n            ans += a[fir]\n            fir += i - 1\n    print(ans)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = sorted(list(map(int, input().split())))\n    w = sorted(list(map(int, input().split())))\n    last = n - 1\n    ans = 0\n    for i in w:\n        if i == 1:\n            ans += a[last]\n        ans += a[last]\n        last -= 1\n    fir = 0\n    for i in w[::-1]:\n        if i > 1:\n            ans += a[fir]\n            fir += i - 1\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = sorted(map(int, input().split()))[::-1]\n    w = sorted(map(int, input().split()))\n    f = w.count(1)\n    ans = sum(s[:k]) + sum(s[:f])\n    for i in w[f:]:\n        k += i - 1\n        ans += s[k - 1]\n    print(ans)", "t = int(input())\nfor tc in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    a.sort(reverse=True)\n    w.sort()\n    (ii, l, r) = (k, 0, n - 1)\n    ans = 0\n    for i in range(k):\n        if w[i] > 1:\n            ii = i\n            break\n        ans = ans + a[l] * 2\n        l = l + 1\n    for u in range(k - 1, ii - 1, -1):\n        i = w[u]\n        ans = ans + a[l] + a[r]\n        r = r - i + 1\n        l = l + 1\n    print(ans)", "nb_cases = int(input())\nanswer = []\nwhile nb_cases > 0:\n    nb_cases -= 1\n    (n, k) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    w = [int(x) for x in input().split()]\n    w.sort()\n    a.sort(reverse=True)\n    ami = 0\n    happiness = 0\n    nb_w_un = w.count(1)\n    for x in range(nb_w_un):\n        happiness += 2 * a[x]\n    w = w[nb_w_un:]\n    a = a[nb_w_un:]\n    a.sort()\n    w.sort(reverse=True)\n    p_debut = 0\n    p_fin = n - nb_w_un - 1\n    while p_debut <= p_fin:\n        if w[ami] == 1:\n            min_val = a[p_fin]\n            max_val = a[p_fin]\n            p_fin -= 1\n        else:\n            min_val = a[p_debut]\n            max_val = a[p_fin]\n            p_debut += w[ami] - 1\n            p_fin -= 1\n        ami += 1\n        happiness += min_val + max_val\n    answer.append(happiness)\nfor x in answer:\n    print(x)", "from sys import stdin, stdout\nt = int(stdin.readline())\nfor _ in range(t):\n    (n, k) = map(int, stdin.readline().strip().split())\n    a = list(map(int, stdin.readline().strip().split()))\n    w = list(map(int, stdin.readline().strip().split()))\n    w = sorted(w, reverse=True)\n    a = sorted(a)\n    i = 0\n    j = n - 1\n    ans = 0\n    temp = len(w) - 1\n    while temp >= 0 and w[temp] == 1:\n        ans = ans + a[j] * 2\n        j -= 1\n        temp -= 1\n    for ii in range(temp + 1):\n        x = w[ii]\n        ans += a[j]\n        ans += a[i]\n        j = j - 1\n        i = i + (x - 1)\n    print(ans)", "t = int(input())\n\ndef solve():\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    ws = list(map(int, input().split()))\n    arr.sort(reverse=True)\n    ws.sort(reverse=True)\n    ones = ws.count(1)\n    ans = 2 * sum(arr[:ones])\n    (start, end) = (ones, n - 1)\n    for i in range(k - ones):\n        ans += arr[start] + arr[end]\n        start += 1\n        end -= ws[i] - 1\n    return ans\nfor _ in range(t):\n    print(solve())", "def lee(n, m, a, w):\n    if n == m:\n        return 2 * sum(a)\n    a.sort(reverse=True)\n    w.sort()\n    s = 0\n    j = n - 1\n    l = m - 1\n    for i in range(m):\n        if w[i] == 1:\n            s += 2 * a[i]\n        else:\n            s += a[i] + a[j]\n            j = j - w[l] + 1\n            l -= 1\n    return s\nt = int(input())\nfor i in range(t):\n    (n, m) = [int(j) for j in input().split()]\n    a = [int(j) for j in input().split()]\n    w = [int(j) for j in input().split()]\n    print(lee(n, m, a, w))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = sorted(map(int, input().split()))[::-1]\n    w = sorted(map(int, input().split()))\n    f = w.count(1)\n    res = sum(s[:m]) + sum(s[:f])\n    for i in w[f:]:\n        m += i - 1\n        res += s[m - 1]\n    print(res)", "import math\n\ndef tc():\n    (n, k) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    w = [int(x) for x in input().split()]\n    a.sort()\n    w.sort()\n    ans = 0\n    (a, maxes) = (a[:n - k][::-1], a[-k:])\n    n_max_mins = w.count(1)\n    ans += sum(maxes)\n    if n_max_mins:\n        ans += sum(maxes[-n_max_mins:])\n    i = -1\n    for x in w:\n        if x > 1:\n            i += x - 1\n            ans += a[i]\n    return ans\nT = int(input())\nfor _ in range(T):\n    ans = tc()\n    print(ans)", "t = int(input())\nl = []\nfor i in range(t):\n    (m, n) = list(map(int, input().split()))\n    l1 = list(map(int, input().split()))\n    l2 = list(map(int, input().split()))\n    l.append([l1, l2])\nfor j in l:\n    (ii, ans, r, l) = (len(j[1]), 0, len(j[0]) - 1, 0)\n    j[0].sort(reverse=True)\n    j[1].sort()\n    for i in range(len(j[1])):\n        if j[1][i] > 1:\n            ii = i\n            break\n        else:\n            ans += j[0][i] * 2\n            l += 1\n    for p in range(len(j[1]) - 1, ii - 1, -1):\n        q = j[1][p]\n        ans += j[0][r] + j[0][l]\n        l += 1\n        r = r - q + 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    a.sort(reverse=True)\n    w.sort()\n    j = 0\n    sum = 0\n    l = 0\n    v = k\n    r = n - 1\n    for i in range(len(w)):\n        if w[i] > 1:\n            v = i\n            break\n        sum += a[l] * 2\n        l += 1\n    for i in range(k - 1, v - 1, -1):\n        b = w[i]\n        sum += a[l] + a[r]\n        r = r - b + 1\n        l += 1\n    print(sum)", "n = int(input())\nfor _ in range(n):\n    (n_integers, n_friends) = list(map(int, input().split()))\n    integers = list(map(int, input().split()))\n    gifts = list(map(int, input().split()))\n    integers = sorted(integers, reverse=True)\n    gifts = sorted(gifts)\n    happiness_total = 0\n    for i in range(n_friends):\n        happiness_total += integers[i]\n        if gifts[i] == 1:\n            happiness_total += integers[i]\n    i = n_friends - 1\n    for gift in gifts:\n        if gift != 1:\n            i += gift - 1\n            happiness_total += integers[i]\n    print(happiness_total)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    a.sort(reverse=True)\n    w.sort()\n    ans = sum(a[:k])\n    tmp = k - 1\n    for i in range(k):\n        if w[i] == 1:\n            ans += a[i]\n        else:\n            tmp += w[i] - 1\n            ans += a[tmp]\n    print(ans)", "t = int(input())\nfor i in range(t):\n    [n, k] = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    a.sort(reverse=True)\n    w.sort()\n    w0 = len(w)\n    ret = sum(a[:w0]) + sum(a[:w.count(1)])\n    for j in w:\n        if j == 1:\n            continue\n        w0 += j - 1\n        ret += a[w0 - 1]\n    print(ret)", "t = int(input())\nfor _ in range(t):\n    hsum = 0\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    a.sort()\n    a.reverse()\n    ones = 0\n    for we in w:\n        if we == 1:\n            ones += 1\n    hsum += sum(a[:ones]) * 2\n    a = a[ones:]\n    hsum += sum(a[:k - ones])\n    a.reverse()\n    w.sort()\n    w = w[ones:]\n    w.reverse()\n    adders = []\n    beg = 0\n    for we in w:\n        adders.append(beg)\n        beg += we - 1\n    for ad in adders:\n        hsum += a[ad]\n    print(hsum)", "def main():\n    t = int(input())\n    for _ in range(t):\n        (n, k) = map(int, input().split())\n        a = list(map(int, input().split()))\n        w = list(map(int, input().split()))\n        a.sort(reverse=True)\n        ans = sum(a[:k])\n        W = []\n        cnt = 0\n        for i in range(k):\n            if w[i] - 1:\n                W.append(w[i] - 1)\n            else:\n                cnt += 1\n        ans += sum(a[:cnt])\n        a.sort()\n        now = 0\n        W.sort(reverse=True)\n        for x in W:\n            ans += a[now]\n            now += x\n        print(ans)\nmain()", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    w = [int(x) for x in input().split()]\n    a.sort()\n    w.sort()\n    (res_max, res_min) = (0, 0)\n    for x in range(n - 1, n - 1 - k, -1):\n        res_max += a[x]\n    now = 0\n    cnt = 0\n    for x in w:\n        if x == 1:\n            cnt += 1\n    for x in range(n - 1, n - 1 - cnt, -1):\n        res_min += a[x]\n    cnt = k - cnt\n    for x in w[::-1]:\n        if cnt == 0:\n            break\n        res_min += a[now]\n        now += x - 1\n        cnt -= 1\n    print(res_max + res_min)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ints = list(map(int, input().split()))\n    dist = list(map(int, input().split()))\n    ints.sort(reverse=True)\n    dist.sort()\n    ans = sum(ints[:k])\n    ind = k - 1\n    start = 0\n    while start < k and dist[start] == 1:\n        ans += ints[start]\n        start += 1\n    for i in range(start, k):\n        ind += dist[i] - 1\n        ans += ints[ind]\n    print(ans)", "t = int(input())\nfor T in range(t):\n    [n, k] = list(map(int, input().split()))\n    a = sorted(list(map(int, input().split())))\n    w = sorted(list(map(int, input().split())))\n    w.reverse()\n    c = w.count(1)\n    j = 0\n    s = sum(a[-1:-k - 1:-1]) + sum(a[-1:-c - 1:-1])\n    for i in range(k - c):\n        s += a[j]\n        j += w[i] - 1\n    print(s)", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    ar = list(map(int, input().split()))\n    frnds = list(map(int, input().split()))\n    ar.sort()\n    frnds.sort(reverse=True)\n    ans = 0\n    i = 0\n    j = n - k\n    for f in frnds:\n        if f == 1:\n            ans += 2 * ar[j]\n            j += 1\n        else:\n            ans += ar[i] + ar[j]\n            i += f - 1\n            j += 1\n    print(ans)\n    t -= 1", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    w = sorted(list(map(int, input().split())), reverse=True)\n    t = w.count(1)\n    (z, ans, b) = (t, 2 * sum(a[:t]), n - 1)\n    for i in range(k - z):\n        ans += a[t] + a[b]\n        t += 1\n        b = b - w[i] + 1\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = sorted(map(int, input().split()))[::-1]\n    w = sorted(map(int, input().split()))\n    f = w.count(1)\n    res = sum(s[:m]) + sum(s[:f])\n    for i in w[f:]:\n        m += i - 1\n        res += s[m - 1]\n    print(res)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = sorted(map(int, input().split()))[::-1]\n    w = sorted(map(int, input().split()))\n    f = w.count(1)\n    res = sum(s[:m]) + sum(s[:f])\n    for i in w[f:]:\n        m += i - 1\n        res += s[m - 1]\n    print(res)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    lst.sort(reverse=True)\n    weight = list(map(int, input().split()))\n    weight.sort()\n    single = weight.count(1)\n    ans = sum(lst[:k]) + sum(lst[:single])\n    index = k\n    for i in range(k):\n        min_ele = weight[i] - 1\n        if min_ele > 0:\n            ans += lst[index + min_ele - 1]\n            index = index + min_ele\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().strip().split(' '))\n    a = list(map(int, input().strip().split(' ')))\n    w = list(map(int, input().strip().split(' ')))\n    a.sort(reverse=True)\n    w.sort()\n    s = 0\n    c1 = w.count(1)\n    c2 = w.count(2)\n    p = c1 + c2\n    temp = 0\n    for j in range(c1):\n        s += a[j] * 2\n    temp = c1\n    for j in range(c2):\n        s += a[temp]\n        temp += 1\n        s += a[temp]\n        temp += 1\n    temp = c1 + c2 * 2\n    for j in range(k - (c1 + c2)):\n        s += a[temp]\n        temp += 1\n    temp -= 1\n    for j in range(c1 + c2, k):\n        s += a[temp + w[j] - 1]\n        temp = temp + w[j] - 1\n    print(s)", "test = int(input())\nfor _ in range(test):\n    (n, k) = [int(x) for x in input().split()]\n    l = [int(x) for x in input().split()]\n    w = [int(x) for x in input().split()]\n    l.sort()\n    w.sort()\n    ans = 0\n    x = -1 * w.count(1)\n    if x != 0:\n        ans = sum(l[x:])\n        ans = ans * 2\n        l = l[:x]\n        x = -1 * x\n        w = w[x:]\n        k = k - x\n    l.reverse()\n    ans += sum(l[:k])\n    pv = k - 1\n    for i in range(len(w)):\n        w[i] -= 1\n        pv += w[i]\n        ans += l[pv]\n    print(ans)", "def main():\n    t = int(input())\n    for _ in range(t):\n        (n, k) = tuple(map(int, input().split()))\n        a = list(map(int, input().split()))\n        a.sort()\n        w = list(map(int, input().split()))\n        w.sort()\n        s = 0\n        used = 0\n        high_pos = -1\n        low_pos = 0\n        stop_index = 0\n        for (i, weight) in enumerate(w):\n            if weight == 1:\n                s += 2 * a[high_pos]\n                high_pos -= 1\n                continue\n            elif weight == 2:\n                s += a[high_pos] + a[high_pos - 1]\n                high_pos -= 2\n                continue\n            break\n        stop_index = i if weight != 1 and weight != 2 else i + 1\n        for i in range(-1, -len(w) + stop_index - 1, -1):\n            s += a[high_pos]\n            high_pos -= 1\n            s += a[low_pos]\n            low_pos += w[i] - 1\n        print(s)\nmain()", "t = int(input())\nfor _ in range(0, t):\n    (n, k) = map(int, input().split(' '))\n    a = list(map(int, input().split(' ')))\n    b = list(map(int, input().split(' ')))\n    a.sort(reverse=True)\n    b.sort()\n    j = k - 1\n    sum1 = 0\n    cnt1 = 0\n    for ind in b:\n        if ind != 1:\n            j += ind - 1\n            sum1 += a[j]\n        else:\n            cnt1 += 1\n    sum1 += sum(a[:k])\n    sum1 += sum(a[:cnt1])\n    print(sum1)", "import math\nimport collections\nfrom sys import stdin, stdout, setrecursionlimit\nfrom bisect import bisect_left as bsl\nfrom bisect import bisect_right as bsr\nimport heapq as hq\nsetrecursionlimit(2 ** 20)\nt = 1\nt = int(stdin.readline())\nfor _ in range(t):\n    (n, k) = list(map(int, stdin.readline().rstrip().split()))\n    a = list(map(int, stdin.readline().rstrip().split()))\n    w = list(map(int, stdin.readline().rstrip().split()))\n    if n == k:\n        print(2 * sum(a))\n        continue\n    f = 0\n    l = n - 1\n    ans = 0\n    a.sort()\n    w.sort()\n    ptr = 0\n    for ptr in range(k):\n        if w[ptr] > 1:\n            break\n        ans += a[l]\n        l -= 1\n    l = n - 1\n    for i in range(k):\n        ans += a[l]\n        l -= 1\n    i = ptr\n    while i < k:\n        w[i] -= 1\n        ans += a[l - w[i] + 1]\n        l -= w[i]\n        i += 1\n    print(ans)", "def solve():\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    l.sort()\n    x = list(map(int, input().split()))\n    x.sort(reverse=True)\n    c = l[::-1]\n    l.sort()\n    a = x.count(1)\n    (j, s) = (0, 0)\n    for i in range(a):\n        s += 2 * c[i]\n    for i in range(k):\n        if x[i] != 1:\n            s += l[j] + c[a]\n            a += 1\n            j += x[i] - 1\n        else:\n            continue\n    print(s)\nfor _ in range(int(input())):\n    solve()", "tc = int(input())\nfor i in range(tc):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    a.sort(reverse=True)\n    w.sort(reverse=True)\n    x = w.count(1)\n    y = n - 1\n    s = 2 * sum(a[:x])\n    for i in range(k - x):\n        s += a[x] + a[y]\n        x += 1\n        y = y - w[i] + 1\n    print(s)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = sorted(map(int, input().split()))[::-1]\n    w = sorted(map(int, input().split()))\n    f = w.count(1)\n    res = sum(s[:m]) + sum(s[:f])\n    for i in w[f:]:\n        m += i - 1\n        res += s[m - 1]\n    print(res)", "for _ in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    w = [int(x) for x in input().split()]\n    q = w.count(1)\n    a.sort()\n    ans = 0\n    w = sorted(w, reverse=True)\n    if q != 0:\n        ans = sum(a[-q:]) * 2\n        a = a[:-q]\n        w = [x for x in w if x != 1]\n    ind = 0\n    for x in w:\n        ans += a[ind]\n        ind += x - 1\n    ans += sum(a[-len(w):])\n    print(ans)", "N = int(input())\nfor i in range(N):\n    out = 0\n    (ngifts, nusers) = tuple(map(int, input().split()))\n    gifts = list(map(int, input().split()))\n    users = list(map(int, input().split()))\n    gifts.sort()\n    users.sort()\n    one = users.count(1)\n    g1 = 0\n    g2 = ngifts - 1\n    if one:\n        out += sum(gifts[-1 * one:]) * 2\n        g2 -= one\n    for u in range(nusers, one, -1):\n        out += gifts[g1] + gifts[g2]\n        g1 += users[u - 1] - 1\n        g2 -= 1\n    print(out)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    j = k - 1\n    a = sorted(list(map(int, input().split())), reverse=True)\n    w = sorted(list(map(int, input().split())))\n    out = sum(a[:k])\n    for i in range(k):\n        if w[i] == 1:\n            out += a[i]\n        else:\n            j += w[i] - 1\n            out += a[j]\n    print(out)", "I = lambda : map(int, input().split())\nfor i in '*' * int(input()):\n    (n, k) = I()\n    (a, w, e) = (sorted(I(), reverse=1), sorted(I()), 0)\n    q = sum(a[:k])\n    for j in w:\n        k += j - 1\n        q += [a[k - 1], a[e]][j == 1]\n        e += 1\n    print(q)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    l.sort(reverse=True)\n    w.sort()\n    i = 0\n    j = 0\n    r = n - 1\n    p = k\n    ans = 0\n    while i < k and w[i] == 1:\n        ans += l[j] * 2\n        j += 1\n        i += 1\n    p = i\n    for i in range(k - 1, p - 1, -1):\n        ans += l[j] + l[r]\n        r = r - w[i] + 1\n        j += 1\n    print(ans)", "inp = lambda : int(input())\ninpm = lambda : map(int, input().split())\ninpl = lambda : list(inpm())\nl2mn = lambda _n, _m: [[0 for __ in range(_m)] for _ in range(_n)]\nl2n = lambda _n: l2mn(_n, _n)\nINF = int(1e+18)\nMOD = int(1000000000.0) + 7\n\ndef solve():\n    (n, k) = inpm()\n    a = inpl()\n    w = inpl()\n    a.sort()\n    w.sort(reverse=True)\n    res = 0\n    ind = 0\n    one = 0\n    for i in range(k):\n        x = w[i] - 1\n        if x > 0:\n            res += a[ind]\n            ind += x\n        else:\n            one += 1\n    print(res + sum(a[n - k:]) + sum(a[n - one:]))\n\ndef main():\n    t = inp()\n    for i in range(t):\n        solve()\nmain()", "from itertools import groupby\nfrom math import sqrt\nfrom math import floor\n\ndef solve():\n    (n, k) = map(int, input().split())\n    A = list(map(int, input().split()))\n    W = list(map(int, input().split()))\n    A.sort(reverse=True)\n    W.sort()\n    res = 0\n    for i in range(k):\n        res += A[i]\n    l = k - 1\n    for i in range(k):\n        if W[i] == 1:\n            res += A[i]\n        else:\n            l += W[i] - 1\n            res += A[l]\n    print(res)\nfor cnt in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    a = sorted(list(map(int, input().split())), reverse=True)\n    w = sorted(list(map(int, input().split())))\n    s = 0\n    no = -1\n    for i in range(k):\n        if w[i] != 1:\n            no = i\n            break\n        s += 2 * a[i]\n    if no == -1:\n        print(s)\n        continue\n    s += sum(a[no:k])\n    ind = k\n    ce = ind - 1\n    for i in range(no, k):\n        s += a[ce + w[i] - 1]\n        ce += w[i] - 1\n    print(s)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    w = list(map(int, input().split()))\n    w.sort(reverse=True)\n    s = 0\n    for i in w[::-1]:\n        if i == 1:\n            s += a[-1] * 2\n            k -= 1\n            a.pop()\n            w.pop()\n        else:\n            break\n    if len(a) != 0 and len(w) != 0:\n        for i in w[::-1]:\n            s += a[-1]\n            a.pop()\n        f = 0\n        for i in w[::-1]:\n            s += a[(f + i - 1) * -1]\n            f += i - 1\n    print(s)", "t = int(input())\nfor i in range(0, t):\n    (n, k) = map(int, input().split())\n    ln = list(map(int, input().split()))\n    lk = list(map(int, input().split()))\n    ln.sort()\n    ln.reverse()\n    lk.sort()\n    tits = 0\n    c = 0\n    for j in range(0, k):\n        if lk[j] == 1:\n            c = c + 1\n    tits = 2 * sum(ln[0:c])\n    xx = 0\n    for j in range(c, k):\n        tits += ln[j]\n        tits += ln[k + lk[j] - 2 + xx]\n        xx = xx + lk[j] - 1\n    print(tits)", "def max_happiness(n, k, a, w):\n    a.sort()\n    w.sort(reverse=True)\n    ans = 0\n    idx = 0\n    cnt = 0\n    for wi in w:\n        if wi == 1:\n            break\n        cnt += 1\n        ans += a[idx]\n        idx += max(1, wi - 1)\n    ans += sum(a[::-1][k - cnt:k]) + 2 * sum(a[::-1][:k - cnt])\n    return ans\nt = int(input())\nfor _ in range(t):\n    (n, k) = [int(s) for s in input().split(' ')]\n    a = [int(s) for s in input().split(' ')]\n    w = [int(s) for s in input().split(' ')]\n    ans = max_happiness(n, k, a, w)\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    w = sorted(list(map(int, input().split())), reverse=True)\n    t = w.count(1)\n    (z, ans, b) = (t, 2 * sum(a[:t]), n - 1)\n    for i in range(k - z):\n        ans += a[t] + a[b]\n        t += 1\n        b = b - w[i] + 1\n    print(ans)", "(z, w, m) = (input, int, sorted)\nfor _ in range(w(z())):\n    (n, k) = map(w, z().split())\n    (l, p, i) = (m(list(map(w, z().split())))[::-1], m(list(map(w, z().split()))), k - 1)\n    a = l[:k]\n    for j in range(k):\n        if p[j] == 1:\n            a[j] += a[j]\n            continue\n        i += p[j] - 1\n        a[j] += l[i]\n    print(sum(a))", "t = int(input())\nwhile t:\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    arr.sort(reverse=True)\n    w.sort(reverse=True)\n    singles = w.count(1)\n    total = 0\n    for i in range(singles):\n        total += 2 * arr[i]\n    j = n - 1\n    for i in range(k - singles):\n        total += arr[singles] + arr[j]\n        singles += 1\n        j = j - w[i] + 1\n    print(total)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (n, k) = list(map(int, input().split()))\n    s = list(map(int, input().split()))\n    f = list(map(int, input().split()))\n    s.sort(reverse=True)\n    f.sort()\n    start = 0\n    end = k - 1\n    result = 0\n    for j in f:\n        if j == 1:\n            result += s[start] * 2\n        else:\n            end += j - 1\n            result += s[start] + s[end]\n        start += 1\n    print(result)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    n_list = list(map(int, input().split()))\n    f_list = list(map(int, input().split()))\n    list.sort(n_list)\n    list.sort(f_list)\n    ans = 0\n    start = 0\n    end = len(n_list) - 1\n    for x in f_list:\n        if x == 1:\n            ans += 2 * n_list[end]\n        else:\n            ans += n_list[end]\n        end -= 1\n    end += 1\n    for x in f_list:\n        if x == 1:\n            continue\n        end -= x - 1\n        ans += n_list[end]\n    print(ans)", "for i in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = [int(i) for i in input().strip().split(' ')]\n    b = [int(i) for i in input().strip().split(' ')]\n    a.sort()\n    b.sort(reverse=True)\n    l = b.count(1)\n    ans = sum(a[n - x:]) + sum(a[n - l:])\n    i = 0\n    for e in b:\n        if e == 1:\n            break\n        else:\n            ans += a[i]\n            i += e - 1\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    w = sorted(list(map(int, input().split())), reverse=True)\n    t = w.count(1)\n    (z, ans, b) = (t, 2 * sum(a[:t]), n - 1)\n    for i in range(k - z):\n        ans += a[t] + a[b]\n        t += 1\n        b = b - w[i] + 1\n    print(ans)", "t = int(input())\nfor tc in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    a.sort(reverse=True)\n    w.sort()\n    (ii, l, r) = (k, 0, n - 1)\n    ans = 0\n    for i in range(k):\n        if w[i] > 1:\n            ii = i\n            break\n        ans = ans + a[l] * 2\n        l = l + 1\n    for u in range(k - 1, ii - 1, -1):\n        i = w[u]\n        ans = ans + a[l] + a[r]\n        r = r - i + 1\n        l = l + 1\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ar = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    ar.sort(reverse=True)\n    i = 0\n    ans = 0\n    w.sort(reverse=True)\n    for j in range(k - 1, -1, -1):\n        if w[j] == 1:\n            ans += 2 * ar[i]\n            i += 1\n        else:\n            break\n    j = n - 1\n    for ij in range(k - i):\n        ans += ar[i] + ar[j]\n        i += 1\n        j -= w[ij] - 1\n    print(ans)", "n = int(input(''))\nints = []\nfrnds = []\nfor i in range(n):\n    C = input('')\n    t_ints = input('')\n    t_frnds = input('')\n    entries = list(map(int, t_ints.split()))\n    n_entries = list(map(int, t_frnds.split()))\n    ints.append(entries)\n    frnds.append(n_entries)\nfor i in range(n):\n    cnt = 0\n    my_int = ints[i]\n    my_frnds = frnds[i]\n    my_int.sort(reverse=True)\n    my_frnds.sort()\n    index = 0\n    strt = 0\n    for j in range(len(my_frnds)):\n        if my_frnds[j] == 1:\n            cnt = cnt + 2 * my_int[index]\n            index = index + 1\n            strt = strt + 1\n        elif my_frnds[j] == 2:\n            cnt = cnt + my_int[index] + my_int[index + 1]\n            index = index + 2\n            strt = strt + 1\n        else:\n            cnt = cnt + my_int[index]\n            index = index + 1\n    while index < len(my_int):\n        cnt = cnt + my_int[index + my_frnds[strt] - 2]\n        index = index + my_frnds[strt] - 1\n        strt = strt + 1\n    print(cnt)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    a.sort(reverse=True)\n    w.sort()\n    pika = k\n    (p, q) = (0, n - 1)\n    ans = 0\n    for i in range(k):\n        if w[i] > 1:\n            pika = i\n            break\n        ans += a[p] * 2\n        p += 1\n    for i in range(k - 1, pika - 1, -1):\n        ans += a[p] + a[q]\n        q = q - w[i] + 1\n        p += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    list1 = list(map(int, input().split()))\n    list1.sort()\n    wlist = list(map(int, input().split()))\n    wlist.sort()\n    if n == k:\n        print(2 * sum(list1))\n    else:\n        sum1 = 0\n        right = list1[len(list1) - k:]\n        j = len(list1) - k\n        for i in range(len(wlist)):\n            if wlist[i] == 1:\n                sum1 += 2 * list1[len(list1) - i - 1]\n            else:\n                j -= wlist[i] - 1\n                sum1 += list1[j] + list1[len(list1) - i - 1]\n        print(sum1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    lst.sort(reverse=True)\n    weight = list(map(int, input().split()))\n    weight.sort()\n    single = weight.count(1)\n    ans = sum(lst[:single]) + sum(lst[:k])\n    index = k\n    for i in range(k):\n        min_ele = weight[i] - 1\n        if min_ele > 0:\n            ans += lst[index + min_ele - 1]\n            index = index + min_ele\n    print(ans)", "t = int(input())\nfor j in range(0, t):\n    (n, k) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    w = [int(x) for x in input().split()]\n    a = sorted(a)\n    if k == 1:\n        print(a[0] + a[n - 1])\n    elif k == n:\n        print(2 * sum(a))\n    elif 1 not in w:\n        w = sorted(w)\n        w = list(reversed(w))\n        q = [0] * k\n        q[0] = 0\n        for i in range(1, k):\n            q[i] = q[i - 1] + w[i - 1] - 1\n        s = 0\n        for i in range(0, k):\n            s += a[q[i]] + a[n - 1 - i]\n        print(s)\n    else:\n        x = w.count(1)\n        s = 0\n        for i in range(0, x):\n            s += 2 * a[n - i - 1]\n        w = sorted(w)\n        w = list(reversed(w))\n        if k - x >= 2:\n            q = [0] * (k - x)\n            q[0] = 0\n            for i in range(1, k - x):\n                q[i] = q[i - 1] + w[i - 1] - 1\n            for i in range(0, k - x):\n                s += a[q[i]] + a[n - x - 1 - i]\n            print(s)\n        else:\n            s += a[0] + a[n - x - 1]\n            print(s)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = sorted(list(map(int, input().split())))\n    w = sorted(list(map(int, input().split())), reverse=True)\n    x = 0\n    i = 0\n    j = n - 1\n    s = 0\n    for z in range(k - 1, -1, -1):\n        if w[z] == 1:\n            s += 2 * l[j]\n            j -= 1\n        else:\n            break\n    for p in range(k):\n        if w[p] == 1:\n            break\n        s += l[i] + l[j]\n        j -= 1\n        i += w[p] - 1\n    print(s)", "t = int(input())\nfor tc in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    a.sort(reverse=True)\n    w.sort()\n    (ii, l, r) = (k, 0, n - 1)\n    ans = 0\n    for i in range(k):\n        if w[i] > 1:\n            ii = i\n            break\n        ans = ans + a[l] * 2\n        l = l + 1\n    for u in range(k - 1, ii - 1, -1):\n        i = w[u]\n        ans = ans + a[l] + a[r]\n        r = r - i + 1\n        l = l + 1\n    print(ans)", "test = int(input())\nfor _ in range(test):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    a.sort(reverse=True)\n    w.sort()\n    ii = k\n    l = 0\n    r = n - 1\n    ans = 0\n    for i in range(k):\n        if w[i] > 1:\n            ii = i\n            break\n        ans = ans + a[l] * 2\n        l += 1\n    for u in range(k - 1, ii - 1, -1):\n        i = w[u]\n        ans += a[l] + a[r]\n        r = r - i + 1\n        l = l + 1\n    print(ans)", "from sys import stdin, stdout\nimport math, queue, heapq\nfastinput = stdin.readline\nfastout = stdout.write\nt = int(fastinput())\nwhile t:\n    t -= 1\n    (n, k) = map(int, fastinput().split())\n    intt = list((int(i) for i in fastinput().split()))\n    ik = list(map(int, fastinput().split()))\n    intt.sort()\n    ik.sort(reverse=True)\n    s = 0\n    for i in range(k):\n        x = intt.pop()\n        if ik[-1] == 1:\n            s += x * 2\n            ik.pop()\n        else:\n            s += x\n    start = 0\n    for i in ik:\n        s += intt[start]\n        start += i - 1\n    print(s)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    a.sort(reverse=True)\n    s = 0\n    (l, j) = (k, 0)\n    w.sort()\n    for i in range(k):\n        if w[i] == 1:\n            s += 2 * a[j]\n            j += 1\n            continue\n        s += a[j]\n        l += w[i] - 2\n        s += a[l]\n        j += 1\n        l += 1\n    print(s)", "import math\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    l = sorted(l)[::-1]\n    w = sorted(w)[::-1]\n    t = w.count(1)\n    z = t\n    ans = 2 * sum(l[:t])\n    b = n - 1\n    for i in range(k - z):\n        ans += l[t] + l[b]\n        t += 1\n        b = b - w[i] + 1\n    print(ans)", "t = int(input())\nfor tc in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    a.sort(reverse=True)\n    w.sort()\n    (ii, l, r) = (k, 0, n - 1)\n    ans = 0\n    for i in range(k):\n        if w[i] > 1:\n            ii = i\n            break\n        ans = ans + a[l] * 2\n        l = l + 1\n    for u in range(k - 1, ii - 1, -1):\n        i = w[u]\n        ans = ans + a[l] + a[r]\n        r = r - i + 1\n        l = l + 1\n    print(ans)", "for _ in range(int(input())):\n    (n, f) = map(int, input().split())\n    a = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    a.sort()\n    w.sort()\n    ans = 0\n    j = n - 1\n    for i in range(f):\n        if w[i] == 1:\n            ans += a[j]\n        ans += a[j]\n        j -= 1\n        w[i] -= 1\n    for i in range(f):\n        while w[i] > 0:\n            if w[i] == 1:\n                ans += a[j]\n            j -= 1\n            w[i] -= 1\n    print(ans)", "t = int(input())\nfor x in range(t):\n    (n, k) = map(int, input().split(' '))\n    arr = list(map(int, input().split(' ')))\n    w = list(map(int, input().split(' ')))\n    arr.sort()\n    w.sort()\n    summ = sum(arr[n - k:])\n    idx = k - 1\n    for (i, j) in enumerate(w):\n        if j == 1:\n            summ += arr[n - i - 1]\n        else:\n            idx += j - 1\n            summ += arr[n - idx - 1]\n    print(summ)", "def solve(n, k, a, w):\n    ans = 0\n    i = 0\n    j = n - 1\n    count = 0\n    while i < k:\n        if w[i] == 1:\n            count += 1\n            ans += 2 * a[i]\n        else:\n            ans += a[i]\n        i += 1\n    a = a[i:]\n    if count < k:\n        i = count\n        j = w[i] - 2\n        pos = 0\n        while i < k:\n            ans += a[j]\n            i += 1\n            if i < k:\n                j += w[i] - 1\n    return ans\nt = int(input())\nfor we in range(t):\n    (n, k) = map(int, input().split())\n    a = sorted(list(map(int, input().split())))[::-1]\n    w = sorted(list(map(int, input().split())))\n    print(solve(n, k, a, w))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    ppl = list(map(int, input().split()))\n    arr.sort(reverse=True)\n    ppl.sort()\n    total = 0\n    i = k - 1\n    ans = [x for x in arr[:k]]\n    for j in range(k):\n        if ppl[j] == 1:\n            ans[j] += ans[j]\n        else:\n            i += ppl[j] - 1\n            ans[j] += arr[i]\n    print(sum(ans))", "t = int(input())\nwhile t:\n    t = t - 1\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    a.sort(reverse=True)\n    w.sort()\n    (lef, rit, g1) = (0, n - 1, k)\n    happiness = 0\n    for i in range(k):\n        if w[i] > 1:\n            g1 = i\n            break\n        happiness = happiness + a[lef] * 2\n        lef = lef + 1\n    for x in range(k - 1, g1 - 1, -1):\n        s = w[x]\n        happiness = happiness + a[lef] + a[rit]\n        lef = lef + 1\n        rit = rit - s + 1\n    print(happiness)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    a.sort(reverse=True)\n    w.sort()\n    ii = k\n    (l, r) = (0, n - 1)\n    ans = 0\n    for i in range(k):\n        if w[i] == 1:\n            ans += a[l] * 2\n            l += 1\n        else:\n            ii = i\n            break\n    for i in range(k - 1, ii - 1, -1):\n        ans += a[l] + a[r]\n        l += 1\n        r -= w[i] - 1\n    print(ans)", "def list_input():\n    return list(map(int, input().split()))\n\ndef multiple_input():\n    return map(int, input().split())\nfor _ in range(int(input())):\n    (n, k) = multiple_input()\n    a = list_input()\n    w = list_input()\n    if n == k:\n        ans = sum(a) * 2\n    else:\n        w.sort()\n        ans = 0\n        a.sort(reverse=True)\n        for i in range(k):\n            ans += a[i]\n        (i, j) = (k - 1, 0)\n        while i != n - 1:\n            if w[j] == 1:\n                ans += a[j]\n            else:\n                i += w[j] - 1\n                ans += a[i]\n            j += 1\n    print(ans)", "t = int(input())\nfor tc in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    a.sort(reverse=True)\n    w.sort()\n    (ii, l, r) = (k, 0, n - 1)\n    ans = 0\n    for i in range(k):\n        if w[i] > 1:\n            ii = i\n            break\n        ans = ans + a[l] * 2\n        l = l + 1\n    for u in range(k - 1, ii - 1, -1):\n        i = w[u]\n        ans = ans + a[l] + a[r]\n        r = r - i + 1\n        l = l + 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = tuple(map(int, input().split()))\n    a = sorted(list(map(int, input().split())), reverse=True)\n    w = sorted(list(map(int, input().split())))\n    ans = 0\n    k -= 1\n    for (i, el) in enumerate(w):\n        if el == 1:\n            ans += 2 * a[i]\n        else:\n            k += el - 1\n            ans += a[i] + a[k]\n    print(ans)", "def check(integer, friends):\n    friends.sort()\n    integer.sort(reverse=True)\n    m = 0\n    a = 0\n    b = len(friends) - 1\n    for i in range(0, len(friends)):\n        if friends[i] == 1:\n            a += 1\n    for i in range(0, a):\n        m += integer[i]\n    for i in range(0, len(friends)):\n        m += integer[i]\n    for i in range(0, len(friends)):\n        if friends[i] - 1 > 0:\n            b += friends[i] - 1\n            m += integer[b]\n    return m\nc = int(input())\nfor i in range(0, c):\n    a = list(map(int, input().split()))\n    interger_n = a[0]\n    friends_n = a[1]\n    integer = list(map(int, input().split()))\n    friends = list(map(int, input().split()))\n    print(check(integer, friends))", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    a.sort(reverse=True)\n    w.sort()\n    ans = 0\n    start = m\n    l = 0\n    r = n - 1\n    for i in range(m):\n        if w[i] > 1:\n            start = i\n            break\n        ans += a[l] * 2\n        l += 1\n    for d in range(m - 1, start - 1, -1):\n        y = w[d]\n        ans += a[l] + a[r]\n        r = r - y + 1\n        l += 1\n    print(ans)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    a.sort(reverse=True)\n    w.sort(reverse=True)\n    (sum, p) = (0, 0)\n    for i in range(k):\n        if w[i] > 1:\n            sum = sum + a[k - i - 1] + a[n - p - 1]\n            p = p + w[i] - 1\n        else:\n            sum = sum + 2 * a[k - i - 1]\n    print(sum)", "I = lambda : map(int, input().split())\nfor i in '*' * int(input()):\n    (n, k) = I()\n    (a, w, e) = (sorted(I(), reverse=1), sorted(I()), 0)\n    q = sum(a[:k])\n    for j in w:\n        k += j - 1\n        q += [a[k - 1], a[e]][j == 1]\n        e += 1\n    print(q)"]