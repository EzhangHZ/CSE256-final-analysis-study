["from sys import stdin\nip = stdin.readline\n(n, k) = map(int, ip().split())\nalike = []\nblike = []\nboth = []\nfor _ in range(n):\n    (t, a, b) = map(int, ip().split())\n    if a and b:\n        both.append(t)\n    elif a:\n        alike.append(t)\n    elif b:\n        blike.append(t)\nlb = k - len(both)\naln = len(alike)\nbln = len(blike)\nif aln < lb or bln < lb:\n    print('-1')\nelse:\n    alike.sort()\n    blike.sort()\n    both += [alike[i] + blike[i] for i in range(min(aln, bln))]\n    both.sort()\n    print(sum(both[:k]))", "def func():\n    (n, k) = map(int, input().split())\n    (sa, sb, both) = ([], [], [])\n    for _ in range(n):\n        (t, aLike, bLike) = map(int, input().split())\n        if aLike and bLike:\n            both.append(t)\n        elif aLike:\n            sa.append(t)\n        elif bLike:\n            sb.append(t)\n    sa.sort()\n    sb.sort()\n    both.sort()\n    if min(len(sa), len(sb)) + len(both) < k:\n        print(-1)\n        return\n    ans = 2 ** 32\n    common = 0 if len(sa) >= k and len(sb) >= k else k - min(len(sa), len(sb))\n    cur = sum(both[:common]) + sum(sa[:k - common]) + sum(sb[:k - common])\n    ans = min(cur, ans)\n    while common < min(k, len(both)):\n        cur = cur + both[common] - sa[k - common - 1] - sb[k - common - 1]\n        ans = min(cur, ans)\n        common += 1\n    print(ans)\nfunc()", "(n, k) = map(int, input().split())\nalice = []\nbob = []\nboth = []\nfor i in range(n):\n    (t, a, b) = map(int, input().split())\n    if a and b:\n        both.append(t)\n    elif a:\n        alice.append(t)\n    elif b:\n        bob.append(t)\nalice.sort()\nbob.sort()\nfor i in range(min(len(alice), len(bob))):\n    both.append(alice[i] + bob[i])\nif len(both) < k:\n    print(-1)\nelse:\n    both.sort()\n    print(sum(both[:k]))", "from sys import stdin, stdout\nimport math, queue, heapq\nfastinput = stdin.readline\nfastout = stdout.write\nz = 1\nwhile z:\n    z -= 1\n    (n, k) = map(int, fastinput().split())\n    common = []\n    onlyx = []\n    onlyy = []\n    for i in range(n):\n        (t, x, y) = map(int, fastinput().split())\n        if x == 0 and y == 0:\n            continue\n        elif x == 1 and y == 1:\n            common.append(t)\n        elif x == 0 and y == 1:\n            onlyy.append(t)\n        else:\n            onlyx.append(t)\n    onlyy.sort()\n    onlyx.sort()\n    if len(onlyx) > k:\n        onlyx = onlyx[:k]\n    if len(onlyy) > k:\n        onlyy = onlyy[:k]\n    if len(onlyy) + len(common) < k or len(onlyx) + len(common) < k:\n        print(-1)\n    else:\n        for i in range(min(len(onlyx), len(onlyy))):\n            common.append(onlyx[i] + onlyy[i])\n        common.sort()\n        print(sum(common[:k]))", "(n, k) = map(int, input().split())\nalice = []\nbob = []\nboth = []\nfor i in range(n):\n    (t, a, b) = map(int, input().split())\n    if a and b:\n        both.append(t)\n    elif a:\n        alice.append(t)\n    elif b:\n        bob.append(t)\nalice.sort()\nbob.sort()\nfor i in range(min(len(alice), len(bob))):\n    both.append(alice[i] + bob[i])\nif len(both) < k:\n    print(-1)\nelse:\n    both.sort()\n    print(sum(both[:k]))", "def func(n, k):\n    common = []\n    bob = []\n    alice = []\n    for i in range(n):\n        (t, a, b) = map(int, input().split())\n        if a and b:\n            common.append(t)\n        elif a:\n            alice.append(t)\n        elif b:\n            bob.append(t)\n    if len(common) + len(alice) < k or len(common) + len(bob) < k:\n        print(-1)\n        return\n    common.sort()\n    alice.sort()\n    bob.sort()\n    c_num = min(k, len(common))\n    num = k - c_num\n    while c_num != 0 and num < len(alice) and (num < len(bob)) and (common[c_num - 1] > alice[num] + bob[num]):\n        c_num -= 1\n        num += 1\n    print(sum(common[:c_num]) + sum(alice[:num]) + sum(bob[:num]))\nfor i in range(1):\n    (n, k) = map(int, input().split())\n    func(n, k)", "def solution():\n    aLike = []\n    bLike = []\n    bothLike = []\n    (lines, k) = input().strip().split()\n    lines = int(lines)\n    k = int(k)\n    for i in range(lines):\n        (cost, isALike, isBLike) = input().strip().split()\n        cost = int(cost)\n        isALike = isALike == '1'\n        isBLike = isBLike == '1'\n        if isALike and isBLike:\n            bothLike.append(cost)\n        elif isALike:\n            aLike.append(cost)\n        elif isBLike:\n            bLike.append(cost)\n    aLike.sort()\n    bLike.sort()\n    bothLike.sort()\n    aLike.reverse()\n    bLike.reverse()\n    bothLike.reverse()\n    cost = 0\n    while len(bothLike) > 0 and k > 0:\n        if len(aLike) > 0 and len(bLike) > 0:\n            if bothLike[-1] <= aLike[-1] + bLike[-1]:\n                cost += bothLike.pop()\n                k -= 1\n            else:\n                cost += aLike.pop()\n                cost += bLike.pop()\n                k -= 1\n        else:\n            cost += bothLike.pop()\n            k -= 1\n    while k > 0:\n        if len(aLike) > 0 and len(bLike) > 0:\n            cost += aLike.pop()\n            cost += bLike.pop()\n            k -= 1\n        else:\n            return -1\n    return cost\nprint(solution())", "(n, k) = map(int, input().split())\nz = []\nx = []\ny = []\nfor i in range(n):\n    (t, a, b) = map(int, input().split())\n    if a & b:\n        z.append(t)\n    elif a:\n        x.append(t)\n    elif b:\n        y.append(t)\nx.sort()\ny.sort()\nfor i in range(min(len(x), len(y))):\n    z.append(x[i] + y[i])\nprint(-1 if len(z) < k else sum(sorted(z)[:k]))\nnum_inp = lambda : int(input())\narr_inp = lambda : list(map(int, input().split()))\nsp_inp = lambda : map(int, input().split())\nstr_inp = lambda : input()", "import sys\ninput = sys.stdin.readline\n(n, k) = map(int, input().split())\n(a, b, ab) = ([], [], [])\n(prea, preb, preab) = ([0], [0], [0])\nans = []\nfor _ in range(n):\n    (t1, t2, t3) = map(int, input().split())\n    if t2 == t3 == 1:\n        ab.append(t1)\n    elif t2 == 1:\n        a.append(t1)\n    elif t3 == 1:\n        b.append(t1)\nab.sort()\na.sort()\nb.sort()\n(na, nb, nab) = (len(a), len(b), len(ab))\nif nab + min(na, nb) < k:\n    print(-1)\n    sys.exit()\nif na:\n    for x in a:\n        prea.append(prea[-1] + x)\nif nb:\n    for x in b:\n        preb.append(preb[-1] + x)\nif nab:\n    for x in ab:\n        preab.append(preab[-1] + x)\nif na == 0 or nb == 0:\n    if k <= nab:\n        print(preab[k])\n    else:\n        print(-1)\nelse:\n    for x in range(k + 1):\n        if nab >= x and na >= k - x and (nb >= k - x):\n            ans.append(preab[x] + prea[k - x] + preb[k - x])\n    if len(ans) == 0:\n        print(-1)\n    else:\n        print(min(ans))", "R = lambda : map(int, input().split())\ns = sorted\n(n, k) = R()\n(_, u, v, w) = l = [[], [], [], []]\nfor _ in [0] * n:\n    (t, a, b) = R()\n    l[2 * a + b] += (t,)\na = (*map(sum, zip(s(u), s(v))), *w)\nprint((sum(s(a)[:k]), -1)[len(a) < k])", "def solution():\n    s = input().split()\n    n = int(s[0])\n    k = int(s[1])\n    yyLike = []\n    xqLike = []\n    bothLike = []\n    s = 0\n    for i in range(n):\n        line = input().split()\n        cost = int(line[0])\n        if line[1] == '1' and line[2] == '1':\n            bothLike.append(cost)\n        elif line[1] == '1':\n            yyLike.append(cost)\n        elif line[2] == '1':\n            xqLike.append(cost)\n    yyLike.sort()\n    xqLike.sort()\n    bothLike.sort()\n    yyLike.reverse()\n    xqLike.reverse()\n    bothLike.reverse()\n    while k > 0 and len(bothLike) > 0:\n        if len(yyLike) > 0 and len(xqLike) > 0:\n            if bothLike[-1] < yyLike[-1] + xqLike[-1]:\n                s += bothLike.pop()\n                k -= 1\n            else:\n                s += yyLike.pop()\n                s += xqLike.pop()\n                k -= 1\n        else:\n            k -= 1\n            s += bothLike.pop()\n    while k > 0:\n        if len(yyLike) == 0 or len(xqLike) == 0:\n            return -1\n        k -= 1\n        s += yyLike.pop()\n        s += xqLike.pop()\n    return s\nprint(solution())", "def books(alice, bob, both, k, n):\n    if len(alice) + len(both) < k or len(both) + len(bob) < k:\n        return -1\n    alice = sorted(alice)\n    bob = sorted(bob)\n    for i in range(min(len(alice), len(bob))):\n        both.append(alice[i] + bob[i])\n    return sum(sorted(both)[:k])\n(a, b, c) = ([], [], [])\n(x, y) = map(int, input().strip().split())\nfor i in range(x):\n    (t, alice, bob) = map(int, input().strip().split())\n    if alice and bob:\n        c.append(t)\n    elif alice:\n        a.append(t)\n    elif bob:\n        b.append(t)\nprint(books(a, b, c, y, x))", "(n, k) = map(int, input().split())\nal = []\nbo = []\nab = []\nfor _ in range(n):\n    (t, a, b) = map(int, input().split())\n    if a == 1 and b == 1:\n        ab.append(t)\n    elif a == 1:\n        al.append(t)\n    elif b == 1:\n        bo.append(t)\nal.sort()\nbo.sort()\nfor i in range(min(len(al), len(bo))):\n    ab.append(al[i] + bo[i])\nab.sort()\nif len(ab) < k:\n    print(-1)\nelse:\n    print(sum(ab[:k]))", "(n, k) = map(int, input().split())\na = []\nb = []\nc = []\nc1 = []\nfor i in range(n):\n    (q, w, e) = map(int, input().split())\n    if w == 1 and e == 1:\n        c.append(q)\n    if w == 1 and e == 0:\n        a.append(q)\n    if w == 0 and e == 1:\n        b.append(q)\na = sorted(a)\nb = sorted(b)\nfor i in range(min(len(a), len(b))):\n    c.append(a[i] + b[i])\nc = sorted(c)\nif len(c) < k:\n    print(-1)\n    exit(0)\ns = 0\nfor i in range(k):\n    s += c[i]\nprint(s)", "import sys\ninput = sys.stdin.readline\n\ndef solve(alice, bob, both, k):\n    both.sort(key=lambda x: x[0], reverse=True)\n    alice.sort(key=lambda x: x[0], reverse=True)\n    bob.sort(key=lambda x: x[0], reverse=True)\n    count = 0\n    ans = 0\n    while both and alice and bob:\n        if both[-1][0] <= alice[-1][0] + bob[-1][0]:\n            ans += both[-1][0]\n            both.pop()\n        else:\n            ans += alice[-1][0] + bob[-1][0]\n            alice.pop()\n            bob.pop()\n        count += 1\n        if count == k:\n            return ans\n    while both:\n        ans += both[-1][0]\n        both.pop()\n        count += 1\n        if count == k:\n            return ans\n    while alice and bob:\n        ans += alice[-1][0] + bob[-1][0]\n        alice.pop()\n        bob.pop()\n        count += 1\n        if count == k:\n            return ans\n    return -1\n(n, k) = map(int, input().split())\nboth = []\nalice = []\nbob = []\nfor _ in range(n):\n    book = list(map(int, input().split()))\n    if book[1] == 1 and book[2] == 1:\n        both.append(book)\n    elif book[1] == 1:\n        alice.append(book)\n    elif book[2] == 1:\n        bob.append(book)\nif len(both) + min(len(alice), len(bob)) < k:\n    print(-1)\nelse:\n    print(solve(alice, bob, both, k))", "import io, os, math\n\ndef ri():\n    return int(input().strip())\n\ndef rl():\n    return list(map(int, input().strip().split()))\n\ndef Solve():\n    (n, k) = rl()\n    (al, ar) = ([], [])\n    p = []\n    for i in range(n):\n        (t, a, b) = rl()\n        if a == 1 and b == 1:\n            p.append(t)\n        if a == 1 and b == 0:\n            al.append(t)\n        if a == 0 and b == 1:\n            ar.append(t)\n    al.sort()\n    ar.sort()\n    for i in range(min(len(al), len(ar))):\n        p.append(al[i] + ar[i])\n    p.sort()\n    if len(p) < k:\n        print(-1)\n    else:\n        print(sum(p[:k]))\nT = 1\nwhile T:\n    T -= 1\n    Solve()", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().split())\n(n, k) = get_ints()\nboth = []\nAlice = []\nbob = []\nfor _ in range(n):\n    in_list = list(get_ints())\n    (t, a, b) = (in_list[0], in_list[1], in_list[2])\n    if a & b:\n        both.append(t)\n    elif a:\n        Alice.append(t)\n    elif b:\n        bob.append(t)\nAlice.sort()\nbob.sort()\nl = min(len(Alice), len(bob))\nfor i in range(l):\n    both.append(Alice[i] + bob[i])\nif len(both) < k:\n    print(-1)\nelse:\n    both.sort()\n    print(sum(both[:k]))", "(n, k) = [int(x) for x in input().split()]\n(alice, bob, both) = ([], [], [])\nfor i in range(n):\n    (t, a, b) = [int(x) for x in input().split()]\n    if a == 0 and b == 0:\n        continue\n    if a & 1 and b & 1:\n        both.append(t)\n        continue\n    if a & 1:\n        alice.append(t)\n    else:\n        bob.append(t)\nalice.sort()\nbob.sort()\nfor i in range(min(len(alice), len(bob))):\n    both.append(alice[i] + bob[i])\nif len(both) < k:\n    print(-1)\nelse:\n    print(sum(sorted(both)[:k]))", "def solve():\n    (n, k) = map(int, input().split())\n    a1 = []\n    b1 = []\n    ab1 = []\n    for i in range(n):\n        (t, a, b) = map(int, input().split())\n        if a == 1 and b == 1:\n            ab1.append(t)\n        elif a == 1:\n            a1.append(t)\n        elif b == 1:\n            b1.append(t)\n    a1.sort()\n    b1.sort()\n    for i in range(min(len(a1), len(b1))):\n        ab1.append(a1[i] + b1[i])\n    ab1.sort()\n    p = 0\n    qq = len(ab1)\n    if qq < k:\n        print(-1)\n    else:\n        ans = 0\n        for i in range(k):\n            ans += ab1[i]\n        print(ans)\nfor i in range(1):\n    solve()", "(n, k) = map(int, input().split())\nalice = []\nbob = []\ncommon = []\nfor i in range(n):\n    (t, a, b) = map(int, input().split())\n    if a and b:\n        common.append(t)\n    elif a:\n        alice.append(t)\n    elif b:\n        bob.append(t)\nalice.sort()\nbob.sort()\nfor i in range(min(len(alice), len(bob))):\n    common.append(alice[i] + bob[i])\nif len(common) < k:\n    print(-1)\nelse:\n    common.sort()\n    print(sum(common[:k]))", "(n, k) = map(int, input().split())\na = []\nb = []\nab = []\nfor i in ' ' * n:\n    (t, x, y) = map(int, input().split())\n    if x & y:\n        ab += [t]\n    elif x:\n        a += [t]\n    elif y:\n        b += [t]\nfor (i, j) in zip(sorted(a), sorted(b)):\n    ab += [i + j]\nprint(-1 if len(ab) < k else sum(sorted(ab)[:k]))", "(n, k) = map(int, input().split())\nx = []\ny = []\nz = []\nfor i in range(n):\n    (t, a, b) = map(int, input().split())\n    if a and b:\n        x.append(t)\n    elif a == 1:\n        y.append(t)\n    elif b == 1:\n        z.append(t)\ny.sort()\nz.sort()\nfor (p, q) in zip(y, z):\n    x.append(p + q)\nx.sort()\nif len(x) < k:\n    print(-1)\nelse:\n    print(sum(x[:k]))", "def solve():\n    (n, k) = list(map(int, input().split()))\n    a = []\n    b = []\n    both = []\n    alice = 0\n    bob = 0\n    coincidence = 0\n    for i in range(n):\n        (t, a_, b_) = list(map(int, input().split()))\n        if b_ and a_:\n            both.append(t)\n            coincidence += 1\n        elif a_ == 1:\n            a.append(t)\n            alice += 1\n        elif b_ == 1:\n            b.append(t)\n            bob += 1\n    if alice + coincidence < k or bob + coincidence < k:\n        print(-1)\n    else:\n        a.sort()\n        b.sort()\n        for i in range(min(len(a), len(b))):\n            both.append(a[i] + b[i])\n        both.sort()\n        out = sum(both[:k])\n        print(out)\ncases = 1\nfor test in range(cases):\n    solve()", "(n, k) = input().split(' ')\n(n, k) = (int(n), int(k))\nS = []\nfor i in range(n):\n    S.append(input().split(' '))\nA = []\nB = []\nC = []\nfor i in S:\n    if i[1] == '1' and i[2] == '1':\n        C.append(int(i[0]))\n    elif i[1] == '1' and i[2] == '0':\n        A.append(int(i[0]))\n    elif i[1] == '0' and i[2] == '1':\n        B.append(int(i[0]))\nm = min(len(A), len(B))\nif len(C) + m < k:\n    print(-1)\nelse:\n    A.sort()\n    B.sort()\n    for i in range(m):\n        C.append(A[i] + B[i])\n    ans = 0\n    C.sort()\n    for i in range(k):\n        ans += C[i]\n    print(ans)", "import sys\n\ndef swap(x, y, a):\n    temp = a[x]\n    a[x] = a[y]\n    a[y] = temp\n    return a\n\ndef solve():\n    return None\n\ndef main():\n    q = []\n    for line in sys.stdin.readlines():\n        q.append(line)\n    for i in range(len(q)):\n        q[i] = q[i].rstrip().split(' ')\n        q[i] = [int(x) for x in q[i]]\n    k = q[0][1]\n    both = []\n    only_left = []\n    only_right = []\n    for i in range(1, len(q)):\n        if q[i][1] == 1 and q[i][2] == 1:\n            both.append(q[i][0])\n        elif q[i][1] == 1 and q[i][2] == 0:\n            only_left.append(q[i][0])\n        elif q[i][1] == 0 and q[i][2] == 1:\n            only_right.append(q[i][0])\n    only_left.sort()\n    only_right.sort()\n    for i in range(min(len(only_left), len(only_right))):\n        both.append(only_left[i] + only_right[i])\n    both.sort()\n    if len(both) < k:\n        print(-1)\n    else:\n        print(sum(both[:k]))\nmain()", "(n, k) = map(int, input().split())\n(la, lb, lc) = ([], [], [])\nfor _ in range(n):\n    (t, a, b) = map(int, input().split())\n    if a == b == 1:\n        lc.append(t)\n    elif a == 1 and b == 0:\n        la.append(t)\n    elif a == 0 and b == 1:\n        lb.append(t)\nla.sort()\nlb.sort()\nlc.sort()\nt = 0\nln = len(lc)\nif ln >= k:\n    t += sum(lc[:k])\n    (a, b) = (k, k)\n    ln = k\nelse:\n    t += sum(lc)\n    (a, b) = (ln, ln)\nif a + len(la) < k or b + len(lb) < k:\n    print(-1)\nelse:\n    t += sum(la[:k - a]) + sum(lb[:k - b])\n    (u, v) = (k - a, k - b)\n    while u < len(la) and v < len(lb) and (ln > 0):\n        if t - lc[ln - 1] + la[u] + lb[v] < t:\n            t = t - lc[ln - 1] + la[u] + lb[v]\n            u += 1\n            v += 1\n            ln -= 1\n        else:\n            break\n    print(t)", "(n, k) = map(int, input().split())\nz = []\nx = []\ny = []\nfor i in range(n):\n    (t, a, b) = map(int, input().split())\n    if a & b:\n        z.append(t)\n    elif a:\n        x.append(t)\n    elif b:\n        y.append(t)\nx.sort()\ny.sort()\nfor i in range(min(len(x), len(y))):\n    z.append(x[i] + y[i])\nprint(-1 if len(z) < k else sum(sorted(z)[:k]))", "(n, k) = map(int, input().split())\nz = []\nx = []\ny = []\nfor i in range(n):\n    (t, a, b) = map(int, input().split())\n    if a & b:\n        z.append(t)\n    elif a:\n        x.append(t)\n    elif b:\n        y.append(t)\nx.sort()\ny.sort()\nfor i in range(min(len(x), len(y))):\n    z.append(x[i] + y[i])\nprint(-1 if len(z) < k else sum(sorted(z)[:k]))", "(n, k) = map(int, input().split())\nL1 = []\nL2 = []\nL3 = []\nfor i in range(n):\n    (t, a, b) = map(int, input().split())\n    if a == 1 and b == 1:\n        L1.append(t)\n    elif a == 1 and b == 0:\n        L2.append(t)\n    elif a == 0 and b == 1:\n        L3.append(t)\nL3.sort()\nL2.sort()\nfor i in range(min(len(L2), len(L3))):\n    L1.append(L2[i] + L3[i])\nif k <= len(L1):\n    L1.sort()\n    print(sum(L1[:k]))\nelse:\n    print(-1)", "(n, k) = map(int, input().split())\nz = []\nx = []\ny = []\nfor _ in range(n):\n    (t, a, b) = map(int, input().split())\n    if a & b:\n        z.append(t)\n    elif a:\n        x.append(t)\n    elif b:\n        y.append(t)\nx.sort()\ny.sort()\nfor i in range(min(len(x), len(y))):\n    z.append(x[i] + y[i])\nz.sort()\nprint(-1 if len(z) < k else sum(z[:k]))", "(n, k) = map(int, input().split())\n(d, l, a, b) = ([], [], [], [])\nfor _ in range(n):\n    (p, q, r) = map(int, input().split())\n    if q == r:\n        if q == 0:\n            d.append(p)\n        else:\n            l.append(p)\n    elif q == 0 and r == 1:\n        b.append(p)\n    else:\n        a.append(p)\nm = min(len(a), len(b))\nif m + len(l) < k:\n    print(-1)\nelse:\n    a.sort()\n    b.sort()\n    s = [0] * m\n    for i in range(m):\n        s[i] = a[i] + b[i]\n    r = s + l\n    r.sort()\n    print(sum(r[:k]))", "(n, k) = map(int, input().split())\nz = []\nx = []\ny = []\nfor i in range(n):\n    (t, a, b) = map(int, input().split())\n    if a & b:\n        z.append(t)\n    elif a:\n        x.append(t)\n    elif b:\n        y.append(t)\nx.sort()\ny.sort()\nfor i in range(min(len(x), len(y))):\n    z.append(x[i] + y[i])\nprint(-1 if len(z) < k else sum(sorted(z)[:k]))", "(n, k) = map(int, input().split())\nz = []\nx = []\ny = []\nfor i in range(n):\n    (t, a, b) = map(int, input().split())\n    if a & b:\n        z.append(t)\n    elif a:\n        x.append(t)\n    elif b:\n        y.append(t)\nx.sort()\ny.sort()\nfor i in range(min(len(x), len(y))):\n    z.append(x[i] + y[i])\nprint(-1 if len(z) < k else sum(sorted(z)[:k]))", "(n, k) = map(int, input().split())\n(l, l1, l2) = ([], [], [])\nfor i in range(n):\n    (t, a, b) = map(int, input().split())\n    if a == 1 and b == 1:\n        l.append(t)\n    if a == 1 and b == 0:\n        l1.append(t)\n    if a == 0 and b == 1:\n        l2.append(t)\nl1.sort()\nl2.sort()\nfor i in range(min(len(l1), len(l2))):\n    l.append(l1[i] + l2[i])\nl.sort()\nif len(l) < k:\n    print(-1)\nelse:\n    print(sum(l[:k]))", "(n, k) = map(int, input().split())\nl = []\nll = []\nlll = []\nfor i in range(n):\n    (t, a, b) = map(int, input().split())\n    if a == 1 and b == 1:\n        l.append(t)\n    elif a == 1:\n        ll.append(t)\n    elif b == 1:\n        lll.append(t)\nll.sort()\nlll.sort()\nfor i in range(min(len(ll), len(lll))):\n    l.append(ll[i] + lll[i])\nwe = len(l)\nif k > we:\n    print(-1)\nelse:\n    l.sort()\n    ans = 0\n    for i in range(k):\n        ans += l[i]\n    print(ans)", "(n, k) = map(int, input().split())\nz = []\nx = []\ny = []\nfor i in range(n):\n    (t, a, b) = map(int, input().split())\n    if a & b:\n        z.append(t)\n    elif a:\n        x.append(t)\n    elif b:\n        y.append(t)\nx.sort()\ny.sort()\nfor i in range(min(len(x), len(y))):\n    z.append(x[i] + y[i])\nprint(-1 if len(z) < k else sum(sorted(z)[:k]))", "(n, k) = map(int, input().split())\nt = []\na = []\nb = []\nfor i in range(n):\n    (t1, a1, b1) = map(int, input().split())\n    if a1 == 1 and b1 == 1:\n        t.append(t1)\n    elif a1 == 1:\n        a.append(t1)\n    elif b1 == 1:\n        b.append(t1)\na.sort()\nb.sort()\nk1 = min(len(a), len(b))\nfor i in range(k1):\n    t.append(a[i] + b[i])\nans = 0\nt.sort()\nif len(t) < k:\n    print('-1')\nelse:\n    print(sum(t[:k]))", "(n, k) = map(int, input().split())\nz = []\nx = []\ny = []\nfor i in range(n):\n    (t, a, b) = map(int, input().split())\n    if a & b:\n        z.append(t)\n    elif a:\n        x.append(t)\n    elif b:\n        y.append(t)\nx.sort()\ny.sort()\nfor i in range(min(len(x), len(y))):\n    z.append(x[i] + y[i])\nif len(z) < k:\n    print(-1)\nelse:\n    print(sum(sorted(z)[:k]))", "(n, k) = map(int, input().split())\n(both, a, b) = ([], [], [])\nfor i in range(n):\n    (t, al, bl) = map(int, input().split())\n    if al & bl:\n        both.append(t)\n    elif al:\n        a.append(t)\n    elif bl:\n        b.append(t)\na.sort()\nb.sort()\nfor i in range(min(len(a), len(b))):\n    both.append(a[i] + b[i])\nprint(-1 if len(both) < k else sum(sorted(both)[:k]))", "(n, k) = map(int, input().split())\nt = []\na = []\nb = []\nfor i in range(n):\n    (t1, a1, b1) = map(int, input().split())\n    if a1 == 1 and b1 == 1:\n        t.append(t1)\n    elif a1 == 1:\n        a.append(t1)\n    elif b1 == 1:\n        b.append(t1)\na.sort()\nb.sort()\nk1 = min(len(a), len(b))\nfor i in range(k1):\n    t.append(a[i] + b[i])\nt.sort()\nif len(t) < k:\n    print('-1')\nelse:\n    print(sum(t[:k]))", "(n, k) = map(int, input().split())\nt = []\na = []\nb = []\nfor i in range(n):\n    (t1, a1, b1) = map(int, input().split())\n    if a1 == 1 and b1 == 1:\n        t.append(t1)\n    elif a1 == 1:\n        a.append(t1)\n    elif b1 == 1:\n        b.append(t1)\na.sort()\nb.sort()\nk1 = min(len(a), len(b))\nfor i in range(k1):\n    t.append(a[i] + b[i])\nans = 0\nt.sort()\nif len(t) < k:\n    print('-1')\nelse:\n    print(sum(t[:k]))", "(n, k) = map(int, input().split(' '))\ndb = []\na = []\nb = []\nfor i in range(n):\n    (t, A, B) = map(int, input().split(' '))\n    if A == B == 1:\n        db.append(t)\n    elif A == 1:\n        a.append(t)\n    elif B == 1:\n        b.append(t)\na.sort()\nb.sort()\nfor i in range(min(len(a), len(b))):\n    db.append(a[i] + b[i])\nif len(db) < k:\n    print(-1)\nelse:\n    db.sort()\n    print(sum(db[:k]))", "(n, k) = map(int, input().split())\nalice = []\nbob = []\nboth = []\nfor i in range(n):\n    (t, a, b) = map(int, input().split())\n    if a == 1 and b == 1:\n        both.append(t)\n    elif a == 1:\n        alice.append(t)\n    elif b == 1:\n        bob.append(t)\nalice.sort()\nbob.sort()\nl = min(len(alice), len(bob))\nfor i in range(l):\n    both.append(alice[i] + bob[i])\nif len(both) < k:\n    print(-1)\nelse:\n    both.sort()\n    sumi = 0\n    for i in range(k):\n        sumi = sumi + both[i]\n    print(sumi)", "(nb_books, mins) = [int(x) for x in input().split()]\n(x, y, z) = ([], [], [])\nfor i in range(nb_books):\n    (n, a, b) = [int(x) for x in input().split()]\n    if a & b:\n        z.append(n)\n    elif a:\n        x.append(n)\n    elif b:\n        y.append(n)\nx.sort()\ny.sort()\nfor i in range(min(len(x), len(y))):\n    z.append(x[i] + y[i])\nanswer = sum(sorted(z)[:mins])\nprint(-1 if len(z) < mins else answer)", "(n, k) = map(int, input().split())\nq1 = []\nq2 = []\nq3 = []\nfor i in range(n):\n    (a, b, c) = map(int, input().split())\n    if b == 1 and c == 0:\n        q1.append(a)\n    elif b == 0 and c == 1:\n        q2.append(a)\n    elif b == 1 and c == 1:\n        q3.append(a)\nq1.sort()\nq2.sort()\nfor i in range(min(len(q1), len(q2))):\n    q3.append(q1[i] + q2[i])\nif len(q3) < k:\n    print(-1)\nelse:\n    q3.sort()\n    print(sum(q3[:k]))", "(n, k) = map(int, input().split())\n(ab, a, b) = ([], [], [])\nfor _ in range(n):\n    (t, aa, bb) = map(int, input().split())\n    if aa and bb:\n        ab.append(t)\n    elif aa:\n        a.append(t)\n    elif bb:\n        b.append(t)\na.sort()\nb.sort()\nzz = min(len(a), len(b))\nfor i in range(zz):\n    ab.append(a[i] + b[i])\nprint(-1 if len(ab) < k else sum(sorted(ab)[:k]))", "(n, k) = map(int, input().split())\na = []\nb = []\nab = []\nfor i in ' ' * n:\n    (t, x, y) = map(int, input().split())\n    if x & y:\n        ab += [t]\n    elif x:\n        a += [t]\n    elif y:\n        b += [t]\nfor (i, j) in zip(sorted(a), sorted(b)):\n    ab += [i + j]\nif len(ab) < k:\n    print(-1)\nelse:\n    print(sum(sorted(ab)[:k]))", "(n, k) = map(int, input().split())\na = []\nb = []\ns = []\nfor i in ' ' * n:\n    (t, x, y) = map(int, input().split())\n    if x & y:\n        s += [t]\n    elif x:\n        a += [t]\n    elif y:\n        b += [t]\ns += [i + j for (i, j) in zip(sorted(a), sorted(b))]\nprint(-1 if len(s) < k else sum(sorted(s)[:k]))", "R = lambda : map(int, input().split())\ns = sorted\n(n, k) = R()\n(_, u, v, w) = l = [[], [], [], []]\nfor _ in [0] * n:\n    (t, a, b) = R()\n    l[2 * a + b] += (t,)\na = (*map(sum, zip(s(u), s(v))), *w)\nprint((sum(s(a)[:k]), -1)[len(a) < k])", "(n, k) = map(int, input().split())\nar11 = []\nar10 = []\nar01 = []\nfor i in range(n):\n    (t, a, b) = map(int, input().split())\n    if a == 1 and b == 1:\n        ar11.append(t)\n    elif a == 1 and b == 0:\n        ar10.append(t)\n    elif a == 0 and b == 1:\n        ar01.append(t)\nif len(ar11) + min(len(ar10), len(ar01)) >= k:\n    ar10.sort()\n    ar01.sort()\n    for i in range(min(len(ar10), len(ar01))):\n        ar11.append(ar10[i] + ar01[i])\n    ar11.sort()\n    print(sum(ar11[:k]))\nelse:\n    print('-1')", "initial = input().strip().split(' ')\nbooks = int(initial[0])\nlikes = int(initial[1])\nalice_list = []\nbob_list = []\nboth_list = []\nfor i in range(books):\n    line_input = input().strip().split(' ')\n    time = int(line_input[0])\n    alice = int(line_input[1]) == 1\n    bob = int(line_input[2]) == 1\n    if alice and bob:\n        both_list.append(time)\n    elif alice:\n        alice_list.append(time)\n    elif bob:\n        bob_list.append(time)\nalice_list.sort()\nbob_list.sort()\nlength = min(len(alice_list), len(bob_list))\nseparate_list = []\nfor i in range(length):\n    separate_list.append(alice_list[i] + bob_list[i])\ntotal_list = both_list + separate_list\nif len(total_list) < likes:\n    print(-1)\nelse:\n    total_list.sort()\n    total = 0\n    for r in range(likes):\n        total += total_list[r]\n    print(total)", "R = lambda : map(int, input().split())\ns = sorted\n(n, k) = R()\n(_, u, v, w) = l = [[], [], [], []]\nfor _ in [0] * n:\n    (t, a, b) = R()\n    l[2 * a + b] += (t,)\na = (*map(sum, zip(s(u), s(v))), *w)\nprint((sum(s(a)[:k]), -1)[len(a) < k])", "(n, k) = map(int, input().split())\nalice = []\nbob = []\nboth = []\nfor i in range(n):\n    (t, a, b) = map(int, input().split())\n    if a == b == 1:\n        both.append(t)\n    elif a == 1:\n        alice.append(t)\n    elif b == 1:\n        bob.append(t)\nalen = len(alice)\nblen = len(bob)\nmini = min(alen, blen)\nalice.sort()\nbob.sort()\nresult = []\nbot_taken = 0\nab = []\nfor i in range(mini):\n    ab.append(alice[i] + bob[i])\nlast_list = ab + both\nlast_list.sort()\nif len(last_list) < k:\n    print(-1)\nelse:\n    print(sum(last_list[:k]))", "(n, k) = map(int, input().split())\nd = []\nl = []\na = []\nb = []\nfor _ in range(n):\n    (p, q, r) = map(int, input().split())\n    if q == r:\n        if q == 0:\n            d.append(p)\n        else:\n            l.append(p)\n    elif q == 0 and r == 1:\n        b.append(p)\n    else:\n        a.append(p)\nm = min(len(a), len(b))\nif m + len(l) < k:\n    print(-1)\nelse:\n    a.sort()\n    b.sort()\n    s = [0] * m\n    for i in range(m):\n        s[i] = a[i] + b[i]\n    r = s + l\n    r.sort()\n    print(sum(r[:k]))", "(n, k) = map(int, input().split())\na = []\nb = []\nanb = []\nfor i in range(n):\n    (x, y, z) = map(int, input().split())\n    if y == 0 and z == 1:\n        b.append(x)\n    elif y == 1 and z == 0:\n        a.append(x)\n    elif y == 1 and z == 1:\n        anb.append(x)\na.sort()\nb.sort()\nif len(a) < len(b):\n    b = b[:len(a)]\nelse:\n    a = a[:len(b)]\nfor i in range(len(a)):\n    a[i] += b[i]\nanb += a\nanb.sort()\nans = 0\nif len(anb) < k:\n    print(-1)\nelse:\n    print(sum(anb[:k]))", "(n, k) = map(int, input().split())\n(l, l1, l2) = ([], [], [])\nfor i in range(n):\n    (a, b, c) = map(int, input().split())\n    if b == 1 and c == 1:\n        l.append(a)\n    elif b == 1 and c == 0:\n        l1.append(a)\n    elif b == 0 and c == 1:\n        l2.append(a)\nl1.sort()\nl2.sort()\nfor j in range(min(len(l1), len(l2))):\n    l.append(l1[j] + l2[j])\nl.sort()\nif len(l) < k:\n    print(-1)\nelse:\n    print(sum(l[:k]))", "(n, k) = map(int, input().split())\nalice = []\nbob = []\nboth = []\nfor _ in range(n):\n    (x, y, z) = map(int, input().split())\n    if y == 1 and z == 1:\n        both.append(x)\n    elif y == 1:\n        alice.append(x)\n    elif z == 1:\n        bob.append(x)\nalice.sort()\nbob.sort()\nfor i in range(min(len(alice), len(bob))):\n    both.append(alice[i] + bob[i])\nboth.sort()\nif len(both) < k:\n    print(-1)\nelse:\n    print(sum(both[:k]))", "(n, k) = map(int, input().split())\nz = []\nx = []\ny = []\nfor i in range(n):\n    (t, a, b) = map(int, input().split())\n    if a & b:\n        z.append(t)\n    elif a:\n        x.append(t)\n    elif b:\n        y.append(t)\nx.sort()\ny.sort()\nfor i in range(min(len(x), len(y))):\n    z.append(x[i] + y[i])\nprint(-1 if len(z) < k else sum(sorted(z)[:k]))", "R = lambda : map(int, input().split())\ns = sorted\n(n, k) = R()\n(_, u, v, w) = l = [[], [], [], []]\nfor _ in [0] * n:\n    (t, a, b) = R()\n    l[2 * a + b] += (t,)\na = (*map(sum, zip(s(u), s(v))), *w)\nprint((sum(s(a)[:k]), -1)[len(a) < k])", "(n, k) = map(int, input().split())\na = b = c = 0\nm = []\nm1 = []\nm2 = []\nfor i in range(n):\n    (a, b, c) = map(int, input().split())\n    if b == c == 1:\n        m.append(a)\n    elif b > c:\n        m1.append(a)\n    elif b < c:\n        m2.append(a)\nm.sort()\nm1.sort()\nm2.sort()\nfor i in range(min(len(m1), len(m2))):\n    m.append(m1[i] + m2[i])\nm.sort()\nif len(m) < k:\n    print(-1)\nelse:\n    print(sum(m[:k]))", "R = lambda : map(int, input().split())\ns = sorted\n(n, k) = R()\n(_, u, v, w) = l = [[], [], [], []]\nfor _ in [0] * n:\n    (t, a, b) = R()\n    l[2 * a + b] += (t,)\na = (*map(sum, zip(s(u), s(v))), *w)\nprint(sum((s(a) + [-sum(a) - 1])[:k]))", "R = lambda : map(int, input().split())\ns = sorted\n(n, k) = R()\n(_, u, v, w) = l = [[], [], [], []]\nfor _ in [0] * n:\n    (t, a, b) = R()\n    l[2 * a + b] += (t,)\na = (*map(sum, zip(s(u), s(v))), *w)\nprint(sum((s(a) + [-sum(a) - 1])[:k]))", "(n, k) = [int(s) for s in input().split(' ')]\nalice = []\nbob = []\nboth = []\nfor i in range(n):\n    (t, a, b) = list(map(int, input().split(' ')))\n    if a == b == 1:\n        both.append(t)\n    elif a == 1:\n        alice.append(t)\n    elif b == 1:\n        bob.append(t)\n    else:\n        continue\nalice.sort()\nbob.sort()\nfor i in range(min(len(alice), len(bob))):\n    both.append(alice[i] + bob[i])\nboth.sort()\nif k > len(both):\n    print(-1)\nelse:\n    print(sum(both[:k]))", "(n, k) = map(int, input().split(' '))\ndb = []\na = []\nb = []\nfor i in range(n):\n    (t, A, B) = map(int, input().split(' '))\n    if A == B == 1:\n        db.append(t)\n    elif A == 1:\n        a.append(t)\n    elif B == 1:\n        b.append(t)\na.sort()\nb.sort()\nfor i in range(min(len(a), len(b))):\n    db.append(a[i] + b[i])\nif len(db) < k:\n    print(-1)\nelse:\n    db.sort()\n    print(sum(db[:k]))", "(n, k) = map(int, input().split())\nobaja = []\nbob = []\nalice = []\na = 0\nb = 0\nfor i in range(n):\n    (t, a, b) = map(int, input().split())\n    if a == 1:\n        if b == 1:\n            obaja.append(t)\n        else:\n            alice.append(t)\n    elif b == 1:\n        bob.append(t)\nalice = list(sorted(alice))\nbob = list(sorted(bob))\nfor i in range(min(len(alice), len(bob))):\n    obaja.append(alice[i] + bob[i])\nobaja = list(sorted(obaja))\nif len(obaja) < k:\n    print(-1)\nelse:\n    ans = 0\n    for i in range(k):\n        ans += obaja[i]\n    print(ans)", "def solve(n, k, a, b, c):\n    a.sort()\n    b.sort()\n    c.sort()\n    iab = min(k, len(a), len(b))\n    ic = k - iab\n    if ic > len(c):\n        return -1\n    res = 0\n    for i in range(ic):\n        res += c[i]\n    for i in range(iab):\n        res += a[i] + b[i]\n    iab -= 1\n    while ic < len(c) and iab >= 0 and (c[ic] < a[iab] + b[iab]):\n        res -= a[iab] + b[iab] - c[ic]\n        ic += 1\n        iab -= 1\n    return res\ncurrent_str = input().split(' ')\nn = int(current_str[0])\nk = int(current_str[1])\na = []\nb = []\nc = []\nfor i in range(n):\n    current_str = input().split(' ')\n    t = int(current_str[0])\n    aa = int(current_str[1])\n    bb = int(current_str[2])\n    if aa and bb:\n        c.append(t)\n    elif aa:\n        a.append(t)\n    elif bb:\n        b.append(t)\nprint(solve(n, k, a, b, c))", "def solve(n, k, a, b, c):\n    a.sort()\n    b.sort()\n    c.sort()\n    iab = min(k, len(a), len(b))\n    ic = k - iab\n    if ic > len(c):\n        return -1\n    res = 0\n    for i in range(ic):\n        res += c[i]\n    for i in range(iab):\n        res += a[i] + b[i]\n    iab -= 1\n    while ic < len(c) and iab >= 0 and (c[ic] < a[iab] + b[iab]):\n        res -= a[iab] + b[iab] - c[ic]\n        ic += 1\n        iab -= 1\n    return res\ncurrent_str = input().split(' ')\nn = int(current_str[0])\nk = int(current_str[1])\na = []\nb = []\nc = []\nfor i in range(n):\n    current_str = input().split(' ')\n    t = int(current_str[0])\n    aa = int(current_str[1])\n    bb = int(current_str[2])\n    if aa and bb:\n        c.append(t)\n    elif aa:\n        a.append(t)\n    elif bb:\n        b.append(t)\nprint(solve(n, k, a, b, c))", "(n, k) = [int(i) for i in input().split()]\n(a, b, result) = (list(), list(), list())\nfor i in ' ' * n:\n    (t, x, y) = [int(x) for x in input().split()]\n    if x & y:\n        result += [t]\n    elif x:\n        a += [t]\n    elif y:\n        b += [t]\nfor (i, j) in zip(sorted(a), sorted(b)):\n    result += [i + j]\nprint(-1 if len(result) < k else sum(sorted(result)[:k]))", "(n, k) = map(int, input().split())\nboth = []\nalice = []\nbob = []\nfor i in range(n):\n    (t, a, b) = map(int, input().split())\n    if a and b:\n        both.append(t)\n    elif a and (not b):\n        alice.append(t)\n    elif not a and b:\n        bob.append(t)\nalice.sort()\nbob.sort()\nfor i in range(min(len(alice), len(bob))):\n    both.append(alice[i] + bob[i])\nboth.sort()\nif len(both) < k:\n    print(-1)\nelse:\n    s = sum(both[:k])\n    print(s)", "(n, k) = map(int, input().split())\naa = []\nbb = []\nl = []\nfor _ in range(n):\n    (t, a, b) = map(int, input().split())\n    sum1 = 0\n    sum2 = 0\n    if a & b:\n        l.append(t)\n    elif a == 1:\n        aa.append(t)\n    elif b == 1:\n        bb.append(t)\nbb.sort()\naa.sort()\nnn = min(len(aa), len(bb))\nfor i in range(nn):\n    l.append(bb[i] + aa[i])\nif k > len(l):\n    print(-1)\nelse:\n    l.sort()\n    sum1 = 0\n    for i in range(k):\n        sum1 += l[i]\n    print(sum1)", "R = lambda : map(int, input().split())\ns = sorted\n(n, k) = R()\n(_, u, v, w) = l = [[], [], [], []]\nfor _ in [0] * n:\n    (t, a, b) = R()\n    l[2 * a + b] += (t,)\na = (*map(sum, zip(s(u), s(v))), *w)\nprint(sum((s(a) + [-sum(a) - 1])[:k]))", "R = lambda : map(int, input().split())\ns = sorted\n(n, k) = R()\n(_, u, v, w) = l = [[], [], [], []]\nfor _ in [0] * n:\n    (t, a, b) = R()\n    l[2 * a + b] += (t,)\na = (*map(sum, zip(s(u), s(v))), *w)\nprint((sum(s(a)[:k]), -1)[len(a) < k])", "(n, k) = map(int, input().split())\nt11 = []\nt01 = []\nt10 = []\nfor j in range(n):\n    (ti, ai, bi) = map(int, input().split())\n    if ai == 0 and bi == 0:\n        continue\n    elif ai == 1 and bi == 1:\n        t11.append(ti)\n    elif ai == 0 and bi == 1:\n        t01.append(ti)\n    else:\n        t10.append(ti)\nlt11 = len(t11)\nlt10 = len(t10)\nlt01 = len(t01)\nif lt11 + min(lt10, lt01) >= k:\n    t01 = sorted(t01)\n    t10 = sorted(t10)\n    t1 = t0 = tot = 0\n    for i in range(min(lt10, lt01)):\n        t11.append(t10[i] + t01[i])\n    print(sum(sorted(t11)[:k]))\nelse:\n    print('-1')", "(n, k) = map(int, input().split())\nz = []\nx = []\ny = []\nfor i in range(n):\n    (t, a, b) = map(int, input().split())\n    if a & b:\n        z.append(t)\n    elif a:\n        x.append(t)\n    elif b:\n        y.append(t)\nx.sort()\ny.sort()\nfor i in range(min(len(x), len(y))):\n    z.append(x[i] + y[i])\nprint(-1 if len(z) < k else sum(sorted(z)[:k]))", "(n, k) = list(map(int, input().split()))\na = []\nb = []\ncomb = []\nfor _ in range(n):\n    arr = list(map(int, input().split()))\n    if arr[1] == 1 and arr[2] == 1:\n        comb.append(arr[0])\n    elif arr[1] == 1:\n        a.append(arr[0])\n    elif arr[2] == 1:\n        b.append(arr[0])\nif len(a) + len(comb) < k or len(b) + len(comb) < k:\n    print(-1)\n    exit()\na.sort()\nb.sort()\ncomb.sort()\nans = 0\ncnt = 0\ni = 0\nj = 0\nsep = min(len(a), len(b))\njoint = len(comb)\nwhile cnt < k:\n    if i >= sep:\n        ans += comb[j]\n        j += 1\n        cnt += 1\n    elif j >= joint:\n        ans += a[i] + b[i]\n        i += 1\n        cnt += 1\n    elif a[i] + b[i] <= comb[j]:\n        ans += a[i] + b[i]\n        i += 1\n        cnt += 1\n    else:\n        ans += comb[j]\n        j += 1\n        cnt += 1\nprint(ans)", "(n, k) = map(int, input().split())\ny = []\nx = []\nz = []\nfor i in range(n):\n    (a, b, c) = map(int, input().split())\n    if b == 1 and c == 0:\n        x.append(a)\n    if c == 1 and b == 0:\n        y.append(a)\n    if b == 1 and c == 1:\n        z.append(a)\nx = sorted(x)\ny = sorted(y)\nz = sorted(z)\nfor i in range(1, len(x)):\n    x[i] += x[i - 1]\nfor i in range(1, len(y)):\n    y[i] += y[i - 1]\nfor i in range(1, len(z)):\n    z[i] += z[i - 1]\nif len(x) + len(z) < k or len(y) + len(z) < k:\n    print(-1)\nelse:\n    ans = float('inf')\n    if len(x) >= k and len(y) >= k:\n        ans = x[k - 1] + y[k - 1]\n    if len(z) >= k:\n        ans = min(z[k - 1], ans)\n    if x and y:\n        for i in range(len(z)):\n            if k - i - 1 - 1 < len(x) and k - i - 1 - 1 < len(y) and (k - i + 2 >= 0):\n                ans = min(ans, z[i] + x[k - i - 2] + y[k - i - 2])\n    print(ans)", "(n, k) = map(int, input().split())\n(d, l, a, b) = ([], [], [], [])\nfor _ in range(n):\n    (p, q, r) = map(int, input().split())\n    if q == r:\n        if q == 0:\n            d.append(p)\n        else:\n            l.append(p)\n    elif q == 0 and r == 1:\n        b.append(p)\n    else:\n        a.append(p)\nif min(len(a), len(b)) + len(l) < k:\n    print(-1)\nelse:\n    a.sort()\n    b.sort()\n    s = [0] * min(len(a), len(b))\n    for i in range(min(len(a), len(b))):\n        s[i] = a[i] + b[i]\n    r = s + l\n    r.sort()\n    print(sum(r[:k]))", "(n, k) = map(int, input().split())\nl = []\nll = []\nlll = []\nfor i in range(n):\n    (t, a, b) = map(int, input().split())\n    if a == 1 and b == 1:\n        l.append(t)\n    elif a == 1:\n        ll.append(t)\n    elif b == 1:\n        lll.append(t)\nll.sort()\nlll.sort()\nfor i in range(min(len(ll), len(lll))):\n    l.append(ll[i] + lll[i])\nwe = len(l)\nif k > we:\n    print(-1)\nelse:\n    l.sort()\n    ans = 0\n    for i in range(k):\n        ans += l[i]\n    print(ans)", "(n, k) = [int(x) for x in input().split()]\nbooks = []\nbooks_a = []\nbooks_b = []\nfor i in range(n):\n    b = [int(x) for x in input().split()]\n    if b[1] == 1 and b[2] == 1:\n        books.append(b[0])\n    elif b[1] == 1:\n        books_a.append(b[0])\n    elif b[2] == 1:\n        books_b.append(b[0])\nbooks_a = sorted(books_a)\nbooks_b = sorted(books_b)\nz = min(len(books_a), len(books_b))\nfor j in range(z):\n    books.append(books_a[j] + books_b[j])\nbooks = sorted(books)\nans = 0\nif len(books) < k:\n    print(-1)\nelse:\n    for f in range(k):\n        ans += books[f]\n    print(ans)", "(n, k) = map(int, input().split())\na = []\nb = []\ncomman = []\na_ = []\nb_ = []\nfor _ in range(n):\n    (t, ai, bi) = map(int, input().split())\n    a_.append(ai)\n    b_.append(bi)\n    if ai == 1 and bi == 1:\n        comman.append(t)\n    elif ai == 1:\n        a.append(t)\n    elif bi == 1:\n        b.append(t)\na.sort()\nb.sort()\nif a_.count(1) < k or b_.count(1) < k:\n    print(-1)\nelse:\n    s = 0\n    m = min(len(a), len(b))\n    for i in range(m):\n        comman.append(a[i] + b[i])\n    comman.sort()\n    print(sum(comman[:k]))", "def read_ints():\n    line = input()\n    return [int(e) for e in line.strip().split(' ')]\n(n, k) = read_ints()\na = []\nb = []\nt = []\nfor _ in range(n):\n    (it, ia, ib) = read_ints()\n    if ia == 1 and ib == 1:\n        t.append(it)\n    elif ia == 1:\n        a.append(it)\n    elif ib == 1:\n        b.append(it)\na.sort()\nb.sort()\nfor i in range(min(len(a), len(b))):\n    t.append(a[i] + b[i])\nt.sort()\nprint(-1 if len(t) < k else sum(t[:k]))", "(n, k) = input().split()\nn = int(n)\nk = int(k)\nc = []\na = []\nb = []\nfor i in range(n):\n    (t, al, bo) = input().split()\n    if al == '1' and bo == '1':\n        c.append(int(t))\n    elif al == '1':\n        a.append(int(t))\n    elif bo == '1':\n        b.append(int(t))\nif len(c) + len(a) < k or len(c) + len(b) < k:\n    print(-1)\n    quit()\nc.sort()\na.sort()\nb.sort()\nfor i in range(1, len(c)):\n    c[i] = c[i] + c[i - 1]\nfor i in range(1, len(a)):\n    a[i] = a[i] + a[i - 1]\nfor i in range(1, len(b)):\n    b[i] = b[i] + b[i - 1]\nhigh = 2000000000\np = 0\ntempo = 0\nwhile p <= len(c) and p <= k:\n    if p > 0:\n        tempo = c[p - 1]\n    else:\n        tempo = 0\n    dif = k - p\n    if len(a) >= dif and len(b) >= dif:\n        if dif > 0:\n            tempo = tempo + (a[dif - 1] + b[dif - 1])\n        if high >= tempo:\n            high = tempo\n    p = p + 1\nprint(high)", "arr = [int(x) for x in input().split()]\nsize = arr[0]\ntotal = arr[1]\nbook_dict = {'2': [], '10': [], '01': []}\nfor i in range(size):\n    book_arr = [int(x) for x in input().split()]\n    if book_arr[1] == 1 and book_arr[2] == 1:\n        book_dict['2'].append(book_arr[0])\n    elif book_arr[1] == 1 and book_arr[2] == 0:\n        book_dict['10'].append(book_arr[0])\n    elif book_arr[1] == 0 and book_arr[2] == 1:\n        book_dict['01'].append(book_arr[0])\ncount10 = len(book_dict['10'])\ncount01 = len(book_dict['01'])\ncount2 = len(book_dict['2'])\nresult = 0\nbook_dict['10'].sort()\nbook_dict['01'].sort()\nif count10 + count2 >= total and count01 + count2 >= total:\n    for i in range(min(count01, count10)):\n        book_dict['2'].append(book_dict['01'][i] + book_dict['10'][i])\n    book_dict['2'].sort()\n    result = sum(book_dict['2'][:total])\n    print(result)\nelse:\n    print(-1)", "from collections import Counter\n(n, k) = map(int, input().split())\ndat = [list(map(int, input().split())) for _ in range(n)]\nx = [v for (v, a, b) in dat if a and b]\ny = [v for (v, a, b) in dat if a and (not b)]\nz = [v for (v, a, b) in dat if not a and b]\nx.extend((u + v for (u, v) in zip(sorted(y), sorted(z))))\nif len(x) < k:\n    print(-1)\nelse:\n    print(sum(sorted(x)[:k]))", "(n, k) = map(int, input().split())\na = 0\nb = 0\nalike = []\nblike = []\nbothlike = []\nfor _ in range(n):\n    (t, aa, bb) = map(int, input().split())\n    if aa == 1:\n        a += 1\n    if bb == 1:\n        b += 1\n    if aa == 1 and bb == 0:\n        alike.append(t)\n    elif aa == 0 and bb == 1:\n        blike.append(t)\n    elif aa == 1 and bb == 1:\n        bothlike.append(t)\nif a < k or b < k:\n    print(-1)\nelse:\n    alike.sort()\n    blike.sort()\n    la = len(alike)\n    lb = len(blike)\n    ans = 0\n    if la < k and lb >= k:\n        for i in range(la):\n            bothlike.append(alike[i] + blike[i])\n        bothlike.sort()\n        ans = sum(bothlike[:k])\n    elif lb < k and la >= k:\n        for i in range(lb):\n            bothlike.append(alike[i] + blike[i])\n        bothlike.sort()\n        ans = sum(bothlike[:k])\n    elif la >= k and lb >= k:\n        for i in range(k):\n            bothlike.append(alike[i] + blike[i])\n        bothlike.sort()\n        ans = sum(bothlike[:k])\n    else:\n        for i in range(min(la, lb)):\n            bothlike.append(alike[i] + blike[i])\n        bothlike.sort()\n        ans = sum(bothlike[:k])\n    print(ans)", "(n, k) = list(map(int, input().split()))\nal = []\nbl = []\nall = []\nfor bb in range(n):\n    (t, a, b) = list(map(int, input().split()))\n    if a == 1:\n        if b == 1:\n            all.append(t)\n        else:\n            al.append(t)\n    elif b == 1:\n        bl.append(t)\nml = min(len(al), len(bl))\nif len(all) + ml < k:\n    print(-1)\nelse:\n    al = sorted(al)\n    bl = sorted(bl)\n    for j in range(ml):\n        all.append(al[j] + bl[j])\n    all = sorted(all)\n    print(sum(all[:k]))", "(n, k) = map(int, input().split())\na = []\nb = []\nc = []\nc1 = []\nfor i in range(n):\n    (q, w, e) = map(int, input().split())\n    if w == 1 and e == 1:\n        c.append(q)\n    if w == 1 and e == 0:\n        a.append(q)\n    if w == 0 and e == 1:\n        b.append(q)\na = sorted(a)\nb = sorted(b)\nfor i in range(min(len(a), len(b))):\n    c.append(a[i] + b[i])\nc = sorted(c)\nif len(c) < k:\n    print(-1)\n    exit(0)\ns = 0\nfor i in range(k):\n    s += c[i]\nprint(s)", "(n, k) = map(int, input().split())\nalice = []\nbob = []\nboth = []\nfor i in range(n):\n    (t, a, b) = map(int, input().split())\n    if a == 1 and b == 1:\n        both.append(t)\n    elif a == 1:\n        alice.append(t)\n    elif b == 1:\n        bob.append(t)\nalice.sort()\nbob.sort()\nl = min(len(alice), len(bob))\nfor i in range(l):\n    both.append(alice[i] + bob[i])\nif len(both) < k:\n    print(-1)\nelse:\n    both.sort()\n    sumi = 0\n    for i in range(k):\n        sumi = sumi + both[i]\n    print(sumi)", "(n, k) = map(int, input().split())\nl = []\nal = []\nbl = []\nac = bc = 0\nfor i in range(n):\n    (t, a, b) = map(int, input().split())\n    if a == 1 and b == 1:\n        l.append(t)\n        ac += 1\n        bc += 1\n    elif a == 1:\n        al.append(t)\n        ac += 1\n    elif b == 1:\n        bl.append(t)\n        bc += 1\nif ac < k or bc < k:\n    print('-1')\nelse:\n    al.sort()\n    bl.sort()\n    i = 0\n    while i < len(al) and i < len(bl):\n        l.append(al[i] + bl[i])\n        i += 1\n    l.sort()\n    time = 0\n    for i in range(k):\n        time += l[i]\n    print(time)", "(n, k) = map(int, input().split())\na = []\nb = []\nab = []\ncounta = 0\ncountb = 0\nfor x in range(n):\n    (t, p, q) = map(int, input().split())\n    if p == 1 and q == 1:\n        counta = counta + 1\n        countb = countb + 1\n        ab.append(t)\n    elif p == 1 and q != 1:\n        counta = counta + 1\n        a.append(t)\n    elif q == 1 and p != 1:\n        countb = countb + 1\n        b.append(t)\nif counta >= k and countb >= k:\n    a.sort()\n    b.sort()\n    for x in range(min(len(a), len(b))):\n        ab.append(a[x] + b[x])\n    res = 0\n    ab.sort()\n    for x in range(k):\n        res = res + ab[x]\n    print(res)\nelse:\n    print(-1)", "(n, k) = list(map(int, input().split()))\nx = []\ny = []\nz = []\nfor i in range(n):\n    (t, a, b) = list(map(int, input().split()))\n    if a == 1 and b == 1:\n        z.append(t)\n    elif a == 0 and b == 1:\n        y.append(t)\n    elif a == 1 and b == 0:\n        x.append(t)\nx1 = len(x)\ny1 = len(y)\nz1 = len(z)\nif min(x1, y1) + z1 < k:\n    print(-1)\nelse:\n    x.sort()\n    y.sort()\n    s = min(x1, y1)\n    i = 0\n    while i < s:\n        z.append(x[i] + y[i])\n        i += 1\n    z.sort()\n    print(sum(z[:k]))", "(n, k) = input().split()\nn = int(n)\nk = int(k)\nc = []\na = []\nb = []\nfor i in range(n):\n    (t, al, bo) = input().split()\n    if al == '1' and bo == '1':\n        c.append(int(t))\n    elif al == '1':\n        a.append(int(t))\n    elif bo == '1':\n        b.append(int(t))\nif len(c) + len(a) < k or len(c) + len(b) < k:\n    print(-1)\n    quit()\nc.sort()\na.sort()\nb.sort()\nfor i in range(1, len(c)):\n    c[i] = c[i] + c[i - 1]\nfor i in range(1, len(a)):\n    a[i] = a[i] + a[i - 1]\nfor i in range(1, len(b)):\n    b[i] = b[i] + b[i - 1]\nhigh = 2147483640\np = 0\ntempo = 0\nwhile p <= len(c) and p <= k:\n    if p > 0:\n        tempo = c[p - 1]\n    else:\n        tempo = 0\n    dif = k - p\n    if len(a) >= dif and len(b) >= dif:\n        if dif > 0:\n            tempo = tempo + (a[dif - 1] + b[dif - 1])\n        if high >= tempo:\n            high = tempo\n    p = p + 1\nprint(high)", "a11 = []\na10 = []\na01 = []\n(n, m) = map(int, input().split())\nfor i in range(n):\n    (a, b, c) = map(int, input().split())\n    if b == 1:\n        if c == 1:\n            a11.append(a)\n        else:\n            a10.append(a)\n    elif c == 1:\n        a01.append(a)\n    else:\n        pass\nln1 = len(a11)\nln2 = len(a10)\nln3 = len(a01)\nif ln1 + ln2 < m or ln1 + ln3 < m:\n    print('-1')\nelse:\n    a11.sort()\n    a10.sort()\n    a01.sort()\n    p1 = p2 = 0\n    cnt = 0\n    for i in range(m):\n        if p1 < ln1 and p2 < min(ln2, ln3):\n            if a11[p1] <= a10[p2] + a01[p2]:\n                cnt += a11[p1]\n                p1 += 1\n            else:\n                cnt += a10[p2] + a01[p2]\n                p2 += 1\n        elif p1 < ln1:\n            cnt += a11[p1]\n            p1 += 1\n        else:\n            cnt += a10[p2] + a01[p2]\n            p2 += 1\n    print(cnt)", "(n, k) = map(int, input().split())\na = []\nb = []\nab = []\nans = 0\nfor _ in range(n):\n    (t1, a1, b1) = map(int, input().split())\n    if a1 == 1 and b1 == 1:\n        ab.append(t1)\n    elif a1 == 1 and b1 == 0:\n        a.append(t1)\n    elif a1 == 0 and b1 == 1:\n        b.append(t1)\n    else:\n        pass\na.sort()\nb.sort()\nab.sort()\nif len(ab) + len(a) < k or len(ab) + len(b) < k:\n    print('-1')\nelse:\n    (lena, lenb, lenab) = (len(a), len(b), len(ab))\n    (i, j) = (0, 0)\n    for _ in range(k):\n        if i < lena and i < lenb and (j < lenab):\n            if a[i] + b[i] < ab[j]:\n                ans += a[i] + b[i]\n                i += 1\n            else:\n                ans += ab[j]\n                j += 1\n        elif i < lena and i < lenb:\n            ans += a[i] + b[i]\n            i += 1\n        else:\n            ans += ab[j]\n            j += 1\n    print(ans)"]