["import sys\nreader = (s.rstrip() for s in sys.stdin)\ninput = reader.__next__\n\ndef gift():\n    for _ in range(t):\n        n = int(input())\n        A = [int(a) - 1 for a in input().split()]\n        C = [0] * n\n        for a in A:\n            C[a] += 1\n        (l, r) = (0, n - 1)\n        for i in range(n):\n            if C[i] != 1:\n                break\n            if A[l] == i:\n                l += 1\n            elif A[r] == i:\n                r -= 1\n            else:\n                break\n        a0 = min(C)\n        k = min(i + 1, n - 1) if C[i] else i\n        ans = str(a0) + '0' * (n - k - 1) + '1' * k\n        yield ans\nt = int(input())\nans = gift()\nprint(*ans, sep='\\n')", "from sys import stdin\nT = int(stdin.readline().strip())\nfor casos in range(T):\n    n = int(stdin.readline().strip())\n    s = list(map(int, stdin.readline().strip().split()))\n    if n == 1:\n        print('1')\n        continue\n    cnt = [0 for i in range(n + 2)]\n    for i in s:\n        cnt[i] += 1\n    ans = '1'\n    for i in range(1, n + 1):\n        if cnt[i] != 1:\n            ans = '0'\n            break\n    aux = ''\n    if cnt[1] > 0:\n        aux += '1'\n        next = 2\n        pos1 = 0\n        pos2 = n - 1\n        for i in range(2, n):\n            if s[pos1] == i - 1 and cnt[i - 1] == 1 and (cnt[i] > 0):\n                pos1 += 1\n                aux += '1'\n            elif s[pos2] == i - 1 and cnt[i - 1] == 1 and (cnt[i] > 0):\n                pos2 -= 1\n                aux += '1'\n            else:\n                while len(aux) < n - 1:\n                    aux += '0'\n                break\n    else:\n        aux = '0' * (n - 1)\n    ans += aux[::-1]\n    print(ans)", "from sys import stdin\nip = stdin.readline\nfor _ in range(int(ip())):\n    n = int(ip())\n    a = [int(i) - 1 for i in ip().split()]\n    cnt = [0] * n\n    ans = [0] * n\n    for i in a:\n        cnt[i] += 1\n    ans[0] = 0 if cnt.count(0) > 0 else 1\n    ans[n - 1] = int(cnt[0] > 0)\n    (l, r) = (0, n - 1)\n    for i in range(1, n):\n        j = i - 1\n        if cnt[j] == 1 and cnt[i]:\n            if a[l] == j:\n                l += 1\n            elif a[r] == j:\n                r -= 1\n            else:\n                break\n            ans[n - i - 1] = 1\n        else:\n            break\n    print(*ans, sep='')", "import sys\nimport math\ninput = sys.stdin.readline\n\ndef pi():\n    return int(input())\n\ndef pl():\n    return int(input(), 16)\n\ndef ti():\n    return list(map(int, input().split()))\n\ndef ts():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef main():\n    D()\ncount = [0 for i in range(300005)]\n\ndef D():\n    t = pi()\n    while t:\n        t -= 1\n        n = pi()\n        a = ti()\n        res = [0 for i in range(n)]\n        mn = 9999999999\n        mx = 0\n        for i in range(n):\n            mn = min(mn, a[i])\n            mx = max(mx, a[i])\n        for i in range(mx + 1):\n            count[i] = 0\n        f = 0\n        for i in range(n):\n            count[a[i]] += 1\n            if count[a[i]] > 1:\n                f = 1\n        if f != 1:\n            res[0] = 1\n        l = 0\n        r = n - 1\n        for i in range(n - 1, -1, -1):\n            nxt = n - i\n            if count[nxt] != 0:\n                res[i] = 1\n            count[nxt] -= 1\n            if count[nxt] == 0 and ((a[l] == nxt or a[r] == nxt) and count[nxt + 1] != 0):\n                if a[l] == nxt:\n                    l += 1\n                if a[r] == nxt:\n                    r -= 1\n                continue\n            break\n        print(*res, sep='')\nmain()", "from collections import deque\nfor iii in range(int(input())):\n    d = deque()\n    f = 1\n    n = int(input())\n    m = {i + 1: 0 for i in range(n)}\n    s = map(int, input().split())\n    for i in s:\n        m[i] += 1\n        if m[i] != 1:\n            f = 0\n        d.append(i)\n    res = [0 for i in range(n)]\n    if f:\n        res[0] = 1\n    if m[1]:\n        res[-1] = 1\n    for i in range(n, 2, -1):\n        a = d.pop()\n        if len(d):\n            b = d.popleft()\n        else:\n            b = -2\n        if a == n - i + 1 and m[n - i + 2] and (m[n - i + 1] == 1):\n            d.appendleft(b)\n            res[i - 2] += 1\n        elif b == n - i + 1 and m[n - i + 2] and (m[n - i + 1] == 1):\n            d.append(a)\n            res[i - 2] += 1\n        else:\n            break\n    print(*res, sep='')", "from collections import deque\nfor iii in range(int(input())):\n    d = deque()\n    f = 1\n    n = int(input())\n    m = {i + 1: 0 for i in range(n)}\n    s = map(int, input().split())\n    for i in s:\n        m[i] += 1\n        if m[i] != 1:\n            f = 0\n        d.append(i)\n    res = [0 for i in range(n)]\n    if f:\n        res[0] = 1\n    if m[1]:\n        res[-1] = 1\n    for i in range(n, 2, -1):\n        a = d.pop()\n        b = d.popleft() if len(d) else -2\n        if a == n - i + 1 and m[n - i + 2] and (m[n - i + 1] == 1):\n            d.appendleft(b)\n            res[i - 2] += 1\n        elif b == n - i + 1 and m[n - i + 2] and (m[n - i + 1] == 1):\n            d.append(a)\n            res[i - 2] += 1\n        else:\n            break\n    print(*res, sep='')", "from collections import deque\nt = int(input())\nwhile t:\n    d = deque()\n    t -= 1\n    f = 1\n    n = int(input())\n    m = {i + 1: 0 for i in range(n)}\n    s = map(int, input().split())\n    for i in s:\n        m[i] += 1\n        if m[i] != 1:\n            f = 0\n        d.append(i)\n    res = [0 for i in range(n)]\n    if f:\n        res[0] = 1\n    if m[1]:\n        res[-1] = 1\n    for i in range(n, 2, -1):\n        a = d.pop()\n        if len(d):\n            b = d.popleft()\n        else:\n            b = -2\n        if a == n - i + 1 and m[n - i + 2] and (m[n - i + 1] == 1):\n            d.appendleft(b)\n            res[i - 2] += 1\n        elif b == n - i + 1 and m[n - i + 2] and (m[n - i + 1] == 1):\n            d.append(a)\n            res[i - 2] += 1\n        else:\n            break\n    for i in res:\n        print(i, end='')\n    print()", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = defaultdict(list)\n    ans = []\n    for i in range(n):\n        d[a[i]].append(i)\n        ans.append(1)\n    up = n - 1\n    down = 0\n    flag = False\n    for k in range(1, n):\n        if len(d[k]) == 0 or flag:\n            flag = True\n            if k == 1:\n                ans[n - 1] = 0\n            ans[n - k] = 0\n            continue\n        if k == 1:\n            if len(d[2]) == 0 or len(d[1]) > 1:\n                ans[n - 2] = 0\n            elif a[up] == k:\n                up -= 1\n            elif a[down] == k:\n                down += 1\n            else:\n                ans[n - 2] = 0\n        elif ans[n - k] == 1:\n            if min(a[up], a[down]) == k:\n                if a[up] == k:\n                    up -= 1\n                elif a[down] == k:\n                    down += 1\n            else:\n                ans[n - k - 1] = 0\n        else:\n            ans[n - k - 1] = 0\n        if len(d[k]) > 1:\n            flag = True\n    if flag or len(d[n]) == 0:\n        ans[0] = 0\n    else:\n        ans[0] = 1\n    for i in range(n):\n        print(ans[i], end='')\n    print()"]