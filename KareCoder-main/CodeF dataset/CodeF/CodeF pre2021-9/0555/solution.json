["def getmini(arr):\n    maxi = 1000000000000\n    for i in arr:\n        if i > 0:\n            maxi = min(maxi, i)\n    return maxi\nn = int(input())\narr = list(map(int, input().split()))\nif n == 1:\n    print(arr[0] * arr[0])\n    exit()\nelse:\n    freq = [0 for i in range(21)]\n    for i in arr:\n        b = bin(i)[2:]\n        if len(b) < 21:\n            b = '0' * (21 - len(b)) + b\n        for z in range(21):\n            if b[z] == '1':\n                freq[z] += 1\n    ans = 0\n    while freq.count(0) != 21:\n        cnt = getmini(freq)\n        st = ['0' for i in range(21)]\n        for i in range(21):\n            if freq[i] == 0:\n                pass\n            else:\n                freq[i] -= cnt\n                st[i] = '1'\n        el = int(''.join(st), 2)\n        ans += cnt * pow(el, 2)\n    print(ans)", "def main():\n    n = int(input())\n    nums = [int(x) for x in input().split()]\n    bits = {}\n    for i in range(20):\n        bits[i] = 0\n    for num in nums:\n        x = 0\n        while num > 0:\n            if num % 2 == 1:\n                bits[x] += 1\n                num -= 1\n            num /= 2\n            x += 1\n    mysum = 0\n    temp = []\n    for x in bits:\n        if bits[x] == 0:\n            temp.append(x)\n    for x in temp:\n        bits.pop(x)\n    while len(bits) > 0:\n        temp = []\n        remaining_bits = [x for x in bits]\n        y = min((bits[x] for x in bits))\n        mysum += sum((2 ** x for x in remaining_bits)) ** 2 * y\n        for x in bits:\n            bits[x] -= y\n            if bits[x] == 0:\n                temp.append(x)\n        for x in temp:\n            bits.pop(x)\n    return mysum\noutput = main()\nprint('{0}'.format(output))", "from sys import exit, stdin, stderr\n\ndef rl():\n    return [int(w) for w in stdin.readline().split()]\n(n,) = rl()\na = rl()\nbit_counts = [sum((ai >> i & 1 for ai in a)) for i in range(20)]\nr = 0\nfor i in range(n):\n    x = sum((1 << j for (j, count) in enumerate(bit_counts) if count > i))\n    r += x * x\nprint(r)", "from sys import stdin\n\ndef catch():\n    return [int(v) for v in stdin.readline().split()]\n(b,) = catch()\na = catch()\ncount = [sum((ai >> i & 1 for ai in a)) for i in range(20)]\ntemp = 0\nfor i in range(b):\n    g = sum((1 << j for (j, val) in enumerate(count) if val > i))\n    temp += g * g\nprint(temp)", "from sys import stdin\n\ndef get():\n    return [int(w) for w in stdin.readline().split()]\n(n,) = get()\nara = get()\ncnt = [sum((ai >> i & 1 for ai in ara)) for i in range(20)]\nans = 0\nfor i in range(n):\n    x = sum((1 << j for (j, val) in enumerate(cnt) if val > i))\n    ans += x * x\nprint(ans)", "n = int(input())\na = list(map(int, input().split()))\nb = [0] * n\nfor u in range(20):\n    for i in range(sum((x >> u & 1 for x in a))):\n        b[i] |= 1 << u\nprint(sum((x * x for x in b)))", "from sys import stdin, stdout\n\nclass Solve:\n\n    def solve(self):\n        r = input\n        w = stdout.write\n        n = int(input())\n        a = [int(x) for x in r().split()]\n        a.sort(reverse=True)\n        maxbit = len(bin(a[0])) - 2\n        for i in range(maxbit):\n            op_num = 1 << i\n            ones = 0\n            for j in range(n):\n                b = a[j] & op_num\n                if b:\n                    ones += 1\n            reset_bit = 2 ** maxbit - 1 ^ op_num\n            for j in range(n):\n                if ones:\n                    a[j] |= op_num\n                    ones -= 1\n                else:\n                    a[j] &= reset_bit\n        ans = 0\n        for i in range(n):\n            ans += a[i] ** 2\n        print(ans)\n\ndef main():\n    s = Solve()\n    s.solve()\nmain()", "(n, arra) = (int(input()), list(map(int, input().split())))\ns = [0] * n\nfor i in range(20):\n    x = sum(list(map(lambda x: x >> i & 1, arra)))\n    for k in range(x):\n        s[k] |= 1 << i\nprint(sum(list(map(lambda x: x ** 2, s))))", "def game(n):\n    pow2 = [2 ** i for i in range(20)]\n    t = [0 for i in range(20)]\n    for i in n:\n        for j in range(20):\n            t[j] += 1 if pow2[j] & i > 0 else 0\n    for i in range(len(t) - 1, -1, -1):\n        if t[i] == 0:\n            t = t[:i]\n        else:\n            break\n    if t == []:\n        return 0\n    g = [0 for i in range(max(t))]\n    for i in range(len(t) - 1, -1, -1):\n        c = 2 ** i\n        for j in range(t[i]):\n            g[j] += c\n    return sum([i ** 2 for i in g])\nt = input().strip()\nn = [int(i) for i in input().strip().split()]\nprint(game(n))", "inf = float('inf')\nn = int(input())\nlst = list(map(int, input().split(' ')))\nbit = [0] * 30\nfor j in range(n):\n    x = lst[j]\n    for i in range(30):\n        if x & 1:\n            bit[i] += 1\n        x = x >> 1\ncnt = 0\nwhile True:\n    mn = inf\n    for i in range(30):\n        if bit[i] > 0:\n            if bit[i] < mn:\n                mn = bit[i]\n    if mn == inf:\n        break\n    no = 0\n    for i in range(30):\n        if bit[i] > 0:\n            bit[i] -= mn\n            no += 2 ** i\n    cnt += no * no * mn\nprint(cnt)", "n = int(input())\nar = list(map(int, input().split()))\nans = [0] * n\nfor i in range(20):\n    x = sum(list(map(lambda x: x >> i & 1, ar)))\n    for j in range(x):\n        ans[j] |= 1 << i\na = sum(list(map(lambda x: x ** 2, ans)))\nprint(a)", "(n, arr) = (int(input()), list(map(int, input().split())))\ns = [0] * n\nfor i in range(20):\n    x = sum(list(map(lambda x: x >> i & 1, arr)))\n    for k in range(x):\n        s[k] |= 1 << i\nprint(sum(list(map(lambda x: x ** 2, s))))\nnum_inp = lambda : int(input())\narr_inp = lambda : list(map(int, input().split()))\nsp_inp = lambda : map(int, input().split())\nstr_inp = lambda : input()", "(n, ar) = (int(input()), list(map(int, input().split())))\nans = [0] * n\nfor i in range(20):\n    x = sum(list(map(lambda x: x >> i & 1, ar)))\n    for j in range(x):\n        ans[j] |= 1 << i\nprint(sum(list(map(lambda x: x ** 2, ans))))", "(n, ar) = (int(input()), list(map(int, input().split())))\nans = [0] * n\nfor i in range(20):\n    x = sum(list(map(lambda x: x >> i & 1, ar)))\n    for j in range(x):\n        ans[j] |= 1 << i\nprint(sum(list(map(lambda x: x ** 2, ans))))", "(n, arr) = (int(input()), list(map(int, input().split())))\ns = [0] * n\nfor i in range(20):\n    x = sum(list(map(lambda x: x >> i & 1, arr)))\n    for k in range(x):\n        s[k] |= 1 << i\nprint(sum(list(map(lambda x: x ** 2, s))))", "(n, arr) = (int(input()), list(map(int, input().split())))\ns = [0] * n\nfor i in range(20):\n    x = sum(list(map(lambda x: x >> i & 1, arr)))\n    for k in range(x):\n        s[k] |= 1 << i\nprint(sum(list(map(lambda x: x ** 2, s))))", "(n, arr) = (int(input()), list(map(int, input().split())))\ns = [0] * n\nfor i in range(20):\n    x = sum(list(map(lambda x: x >> i & 1, arr)))\n    for k in range(x):\n        s[k] |= 1 << i\nprint(sum(list(map(lambda x: x ** 2, s))))", "(n, arr) = (int(input()), list(map(int, input().split())))\ns = [0] * n\nfor i in range(20):\n    x = sum(list(map(lambda x: x >> i & 1, arr)))\n    for k in range(x):\n        s[k] |= 1 << i\nprint(sum(list(map(lambda x: x ** 2, s))))", "n = int(input())\nar = list(map(int, input().split()))\nans = [0] * n\nfor i in range(20):\n    x = sum(list(map(lambda x: x >> i & 1, ar)))\n    for j in range(x):\n        ans[j] |= 1 << i\na = sum(list(map(lambda x: x ** 2, ans)))\nprint(a)", "n = int(input())\na = [int(v) for v in input().split()]\np = 1\nb = [0] * n\nfor j in range(20):\n    s = 0\n    for v in a:\n        if v & p:\n            s = s + 1\n    for k in range(0, s):\n        b[k] = b[k] | p\n    p = p << 1\ns = 0\nfor v in b:\n    s = s + v * v\nprint(s)", "(n, arr) = (int(input()), list(map(int, input().split())))\ns = [0] * n\nfor i in range(20):\n    x = sum(list(map(lambda x: x >> i & 1, arr)))\n    for k in range(x):\n        s[k] |= 1 << i\nprint(sum((x * x for x in s)))", "n = int(input())\nar = list(map(int, input().split()))\nans = [0] * n\nfor i in range(20):\n    x = sum(list(map(lambda x: x >> i & 1, ar)))\n    for j in range(x):\n        ans[j] |= 1 << i\na = sum(list(map(lambda x: x ** 2, ans)))\nprint(a)", "n = int(input())\nar = list(map(int, input().split()))\ns = [0] * n\nfor i in range(20):\n    v = sum(list(map(lambda v: v >> i & 1, ar)))\n    for h in range(v):\n        s[h] |= 1 << i\nprint(sum(list(map(lambda k: k ** 2, s))))", "(n, arr) = (int(input()), list(map(int, input().split())))\ns = [0] * n\nfor i in range(20):\n    x = sum(list(map(lambda x: x >> i & 1, arr)))\n    for k in range(x):\n        s[k] |= 1 << i\nprint(sum(list(map(lambda x: x ** 2, s))))", "(n, arra) = (int(input()), list(map(int, input().split())))\ns = [0] * n\nfor i in range(20):\n    x = sum(list(map(lambda x: x >> i & 1, arra)))\n    for k in range(x):\n        s[k] |= 1 << i\nprint(sum(list(map(lambda x: x ** 2, s))))"]