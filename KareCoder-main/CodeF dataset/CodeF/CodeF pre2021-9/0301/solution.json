["import sys\ninput = lambda : sys.stdin.readline()\nint_arr = lambda : list(map(int, input().split()))\nstr_arr = lambda : list(map(str, input().split()))\nget_str = lambda : map(str, input().split())\nget_int = lambda : map(int, input().split())\nget_flo = lambda : map(float, input().split())\nmod = 1000000007\n\ndef solve(n, arr):\n    arr.sort()\n    a = arr[-1] * arr[-2] * arr[-3] * arr[-4] * arr[-5]\n    b = arr[0] * arr[1] * arr[-1] * arr[-2] * arr[-3]\n    c = arr[0] * arr[1] * arr[2] * arr[3] * arr[-1]\n    print(max(a, b, c))\nfor _ in range(int(input())):\n    n = int(input())\n    arr = int_arr()\n    solve(n, arr)", "import math\nfor i in [*open(0)][2::2]:\n    a = sorted(map(int, i.split(' ')))\n    print(max((math.prod(a[:i] + a[i - 5:]) for i in range(5))))", "for e in [*open(0)][2::2]:\n    l = sorted(map(int, e.split()))\n    print(max(l[0] * l[1] * l[2] * l[3] * l[-1], l[0] * l[1] * l[-3] * l[-2] * l[-1], l[-5] * l[-4] * l[-3] * l[-2] * l[-1]))", "import sys\ninput = lambda : sys.stdin.readline()\nint_arr = lambda : list(map(int, input().split()))\nstr_arr = lambda : list(map(str, input().split()))\nget_str = lambda : map(str, input().split())\nget_int = lambda : map(int, input().split())\nget_flo = lambda : map(float, input().split())\nmod = 1000000007\n\ndef solve(n, arr):\n    arr.sort()\n    a = arr[-1] * arr[-2] * arr[-3] * arr[-4] * arr[-5]\n    b = arr[0] * arr[1] * arr[-1] * arr[-2] * arr[-3]\n    c = arr[0] * arr[1] * arr[2] * arr[3] * arr[-1]\n    print(max(a, b, c))\nfor _ in range(int(input())):\n    n = int(input())\n    arr = int_arr()\n    solve(n, arr)", "import sys\n\ndef get_ints():\n    return list(map(int, sys.stdin.readline().strip().split()))\nsys.setrecursionlimit(20000)\nT = int(input())\nfor _ in range(T):\n    n = get_ints()[0]\n    A = get_ints()\n    A.sort()\n    x = A[-1] * A[-2] * A[-3] * A[-4] * A[-5]\n    y = A[-1] * A[-2] * A[-3] * A[0] * A[1]\n    z = A[-1] * A[0] * A[1] * A[2] * A[3]\n    print(max([x, y, z]))", "import sys\n\ndef product(lst):\n    prod = lst[0]\n    for i in range(1, len(lst)):\n        prod *= lst[i]\n    return prod\n\ndef answer2(n, a):\n    if n == 5:\n        return product(a)\n    a.sort(reverse=True)\n    lst = []\n    lst.append(a[0])\n    lptr = 1\n    rptr = n - 1\n    while len(lst) < 5:\n        lprod = a[lptr] * a[lptr + 1]\n        rprod = a[rptr] * a[rptr - 1]\n        if lprod >= rprod or a[0] < 0:\n            lst.append(a[lptr])\n            lst.append(a[lptr + 1])\n            lptr += 2\n        else:\n            lst.append(a[rptr])\n            lst.append(a[rptr - 1])\n            rptr -= 2\n    return product(lst)\n\ndef main():\n    t = int(input())\n    while t:\n        n = int(sys.stdin.readline())\n        a = [int(i) for i in sys.stdin.readline().split()]\n        print(answer2(n, a))\n        t -= 1\n    return\nmain()", "import sys\ninput = lambda : sys.stdin.readline()\nint_arr = lambda : list(map(int, input().split()))\nstr_arr = lambda : list(map(str, input().split()))\nget_str = lambda : map(str, input().split())\nget_int = lambda : map(int, input().split())\nget_flo = lambda : map(float, input().split())\nmod = 1000000007\n\ndef solve(n, arr):\n    arr.sort()\n    a = arr[-1] * arr[-2] * arr[-3] * arr[-4] * arr[-5]\n    b = arr[0] * arr[1] * arr[-1] * arr[-2] * arr[-3]\n    c = arr[0] * arr[1] * arr[2] * arr[3] * arr[-1]\n    print(max(a, b, c))\nfor _ in range(int(input())):\n    n = int(input())\n    arr = int_arr()\n    solve(n, arr)", "import math\nfor i in [*open(0)][2::2]:\n    a = sorted(map(int, i.split(' ')))\n    print(max((math.prod(a[:i] + a[i - 5:]) for i in range(5))))", "from sys import stdin\nfrom math import prod\ninput = stdin.readline\nfor test in range(int(input())):\n    n = int(input())\n    lst = sorted(list(map(int, input().strip().split())), reverse=True)\n    a = prod(lst[0:1] + lst[n - 4:n])\n    b = prod(lst[0:3] + lst[n - 2:n])\n    c = prod(lst[0:5])\n    print(max(a, b, c))", "from sys import *\nfrom collections import Counter\ninput = lambda : stdin.readline()\nint_arr = lambda : list(map(int, stdin.readline().strip().split()))\nstr_arr = lambda : list(map(str, stdin.readline().split()))\nget_str = lambda : map(str, stdin.readline().strip().split())\nget_int = lambda : map(int, stdin.readline().strip().split())\nget_float = lambda : map(float, stdin.readline().strip().split())\nmod = 1000000007\nsetrecursionlimit(1000)\nfor _ in range(int(input())):\n    n = int(input())\n    arr = sorted(int_arr())\n    frst = arr[-1] * arr[-2] * arr[-3] * arr[-4] * arr[-5]\n    scnd = arr[0] * arr[1] * arr[-1] * arr[-2] * arr[-3]\n    third = arr[0] * arr[1] * arr[2] * arr[3] * arr[-1]\n    print(max((frst, scnd, third)))", "for i in [*open(0)][2::2]:\n    a = sorted(map(int, i.split()))\n    print(max(a[-1] * a[-2] * a[-3] * a[-4] * a[-5], a[-1] * a[-2] * a[-3] * a[1] * a[0], a[-1] * a[3] * a[2] * a[1] * a[0]))", "from sys import stdin\nfrom math import prod\ninput = stdin.readline\nfor test in range(int(input())):\n    n = int(input())\n    lst = sorted(list(map(int, input().strip().split())), reverse=True)\n    if lst[0] == 0:\n        print(0)\n    elif lst[0] < 0:\n        print(prod(lst[:5]))\n    else:\n        a = prod(lst[0:1] + lst[n - 4:n])\n        b = prod(lst[0:3] + lst[n - 2:n])\n        c = prod(lst[0:5])\n        print(max(a, b, c))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().rstrip().split()))\n    l.sort()\n    ans = max(l[0] * l[1] * l[-1] * l[-2] * l[-3], l[0] * l[1] * l[2] * l[3] * l[-1], l[-1] * l[-2] * l[-3] * l[-4] * l[-5])\n    print(ans)", "result = []\nfor i in range(int(input())):\n    n = int(input()) - 1\n    nos = list(map(int, input().split()))\n    nos.sort()\n    rhs = 0\n    lhs = 0\n    final = []\n    chosed = 0\n    if nos[n] < 0:\n        final.append(n)\n        final.append(n - 1)\n        final.append(n - 2)\n        final.append(n - 3)\n        final.append(n - 4)\n    else:\n        while chosed < 5:\n            if lhs + 1 not in final and chosed < 4 and (nos[lhs] * nos[lhs + 1] > nos[n - rhs] * nos[n - rhs - 1]):\n                final.append(lhs)\n                final.append(lhs + 1)\n                lhs += 2\n                chosed += 2\n            else:\n                final.append(n - rhs)\n                rhs += 1\n                chosed += 1\n    r = nos[final[0]] * nos[final[1]] * nos[final[2]] * nos[final[3]] * nos[final[4]]\n    result.append(str(r))\nprint('\\n'.join(result))", "import math\nfor s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    print(max((math.prod(a[:i] + a[i - 5:]) for i in (0, 2, 4))))", "for e in [*open(0)][2::2]:\n    l = sorted(map(int, e.split()))\n    print(max(l[0] * l[1] * l[2] * l[3] * l[-1], l[0] * l[1] * l[-3] * l[-2] * l[-1], l[-5] * l[-4] * l[-3] * l[-2] * l[-1]))", "for _ in ' ' * int(input()):\n    input()\n    a = sorted(list(map(int, input().split())))\n    print(max(a[0] * a[1] * a[2] * a[3] * a[-1], a[-1] * a[-2] * a[-3] * a[-4] * a[-5], a[0] * a[1] * a[-2] * a[-3] * a[-1]))", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(max(a[0] * a[1] * a[-3] * a[-1] * a[-2], a[0] * a[1] * a[2] * a[3] * a[-1], a[-1] * a[-2] * a[-3] * a[-4] * a[-5]))", "import math\nfor s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    print(max((math.prod(a[:i] + a[i - 5:]) for i in (0, 2, 4))))", "import sys\ninput = lambda : sys.stdin.readline().rstrip('\\r\\n')\nfor _ in range(int(input())):\n    n = int(input())\n    l = sorted(list(map(int, input().split())))\n    ans = -1e+18\n    ans = max(ans, l[-5] * l[-4] * l[-3] * l[-2] * l[-1])\n    ans = max(ans, l[0] * l[-4] * l[-3] * l[-2] * l[-1])\n    ans = max(ans, l[0] * l[1] * l[-3] * l[-2] * l[-1])\n    ans = max(ans, l[0] * l[1] * l[2] * l[-2] * l[-1])\n    ans = max(ans, l[0] * l[1] * l[2] * l[3] * l[-1])\n    ans = max(ans, l[0] * l[1] * l[2] * l[3] * l[4])\n    print(ans)", "for testcase in range(int(input())):\n    n = int(input())\n    vals = sorted(map(int, input().split()))\n    neg_4_pos_1 = vals[0] * vals[1] * vals[2] * vals[3] * vals[-1]\n    neg_2_pos_3 = vals[0] * vals[1] * vals[-1] * vals[-2] * vals[-3]\n    all_neg_pos = vals[-1] * vals[-2] * vals[-3] * vals[-4] * vals[-5]\n    print(max(neg_4_pos_1, neg_2_pos_3, all_neg_pos))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    f = list(map(int, input().split()))\n    f.sort()\n    print(max(f[0] * f[1] * f[2] * f[3] * f[-1], f[0] * f[1] * f[-3] * f[-2] * f[-1], f[-5] * f[-4] * f[-3] * f[-2] * f[-1]))", "from sys import stdin, exit, setrecursionlimit\nfrom collections import deque\ninput = stdin.readline\nlmi = lambda : list(map(int, input().split()))\nmi = lambda : map(int, input().split())\nsi = lambda : input().strip('\\n')\nssi = lambda : input().strip('\\n').split()\nmod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    n = int(input())\n    a = lmi()\n    a.sort()\n    if all((i <= 0 for i in a)):\n        print(a[-5] * a[-4] * a[-3] * a[-2] * a[-1])\n    else:\n        print(max(a[0] * a[1] * a[-1] * a[-2] * a[-3], a[0] * a[1] * a[-1] * a[2] * a[3], a[-1] * a[-2] * a[-3] * a[-4] * a[-5]))", "import math\nfor s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    print(max((math.prod(a[:i] + a[i - 5:]) for i in (0, 2, 4))))", "t = int(input())\nresults = []\nfor i in range(t):\n    n = int(input())\n    vals = input().split()\n    a = [int(val) for val in vals]\n    if n == 5:\n        results.append(a[0] * a[1] * a[2] * a[3] * a[4])\n    else:\n        a.sort()\n        prod1 = a[-1] * a[-2] * a[-3] * a[-4] * a[-5]\n        prod2 = a[0] * a[1] * a[-1] * a[-2] * a[-3]\n        prod3 = a[0] * a[1] * a[2] * a[3] * a[-1]\n        results.append(max(prod1, prod2, prod3))\nfor result in results:\n    print(result)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(max([a[n - 1] * a[n - 2] * a[n - 3] * a[n - 4] * a[n - 5], a[0] * a[1] * a[n - 1] * a[n - 2] * a[n - 3], a[0] * a[1] * a[2] * a[3] * a[n - 1]]))", "x = int(input())\nfor i in range(0, x):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    print(max(a[-1] * a[-2] * a[-3] * a[-4] * a[-5], a[-1] * a[-2] * a[-3] * a[0] * a[1], a[-1] * a[0] * a[1] * a[2] * a[3]))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    l = [a[0] * a[1] * a[n - 1] * a[n - 2] * a[n - 3], a[0] * a[1] * a[2] * a[3] * a[n - 1], a[n - 5] * a[n - 4] * a[n - 1] * a[n - 2] * a[n - 3]]\n    print(max(l))", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    ans = max(a[0] * a[1] * a[2] * a[3] * a[-1], a[0] * a[1] * a[-3] * a[-2] * a[-1], a[-5] * a[-4] * a[-3] * a[-2] * a[-1])\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    ls = list(map(int, input().split()))\n    ls = sorted(ls)\n    ans = max(ls[-1] * ls[-2] * ls[-3] * ls[-4] * ls[-5], ls[0] * ls[1] * ls[-1] * ls[-2] * ls[-3], ls[0] * ls[1] * ls[2] * ls[3] * ls[-1])\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    c0 = a[-1] * a[-2] * a[-3] * a[-4] * a[-5]\n    c1 = a[0] * a[-1] * a[-2] * a[-3] * a[-4]\n    c2 = a[0] * a[1] * a[-1] * a[-2] * a[-3]\n    c3 = a[0] * a[1] * a[2] * a[-1] * a[-2]\n    c4 = a[0] * a[1] * a[2] * a[3] * a[-1]\n    c5 = a[0] * a[1] * a[2] * a[3] * a[4]\n    print(max(c0, c1, c2, c3, c4, c5))", "def main_function():\n    tests = range(int(input()))\n    ans = []\n    for test in tests:\n        n = int(input())\n        a = sorted([int(i) for i in input().split(' ')])\n        if max(a) == 0:\n            print(0)\n        elif max(a) < 0:\n            print(a[-1] * a[-2] * a[-3] * a[-4] * a[-5])\n        elif len(a) == 5:\n            print(a[0] * a[1] * a[2] * a[3] * a[4])\n        elif min(a) >= 0:\n            print(a[-1] * a[-2] * a[-3] * a[-4] * a[-5])\n        else:\n            first_element = max(a)\n            a.pop()\n            if a[0] * a[1] > a[-1] * a[-2]:\n                second_and_third = a[0] * a[1]\n                a.pop(0)\n                a.pop(0)\n            else:\n                second_and_third = a[-1] * a[-2]\n                a.pop()\n                a.pop()\n            if a[0] * a[1] > a[-1] * a[-2]:\n                fourth_and_fifth = a[0] * a[1]\n                a.pop(0)\n                a.pop(0)\n            else:\n                fourth_and_fifth = a[-1] * a[-2]\n                a.pop()\n                a.pop()\n            print(first_element * second_and_third * fourth_and_fifth)\nmain_function()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split(' ')]\n    a.sort()\n    p1 = a[0] * a[1] * a[2] * a[3] * a[-1]\n    p2 = a[0] * a[1] * a[-3] * a[-2] * a[-1]\n    p3 = a[-5] * a[-4] * a[-3] * a[-2] * a[-1]\n    ans = max(p1, p2, p3)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    v = a[-1] * a[-2] * a[-3] * a[-4] * a[-5]\n    v1 = a[0] * a[1] * a[-1] * a[-2] * a[-3]\n    v2 = a[0] * a[1] * a[2] * a[3] * a[-1]\n    print(max(v, v1, v2))", "I = lambda : map(int, input().split())\nfor _ in [0] * int(input()):\n    n = int(input())\n    a = list(I())\n    a.sort()\n    x = 1\n    if a[0] >= 0 or a[-1] <= 0:\n        for i in range(n - 5, n, 1):\n            x = a[i] * x\n    else:\n        c = [0] * 3\n        c[0] = a[0] * a[1] * a[-1] * a[-2] * a[-3]\n        c[1] = a[-1] * a[-2] * a[-3] * a[-4] * a[-5]\n        c[2] = a[0] * a[1] * a[-1] * a[2] * a[3]\n        x = max(c)\n    print(x)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(max(a[0] * a[1] * a[2] * a[3] * a[-1], a[-1] * a[-2] * a[-3] * a[-4] * a[-5], a[0] * a[1] * a[-2] * a[-3] * a[-1], a[0] * a[1] * a[2] * a[-2] * a[-1], a[0] * a[-4] * a[-3] * a[-2] * a[-1]))", "for _ in range(int(input())):\n    num = int(input())\n    array = sorted(list(map(int, input().split())))\n    first_two = array[0] * array[1] * array[-1] * array[-2] * array[-3]\n    first_four = array[0] * array[1] * array[2] * array[3] * array[-1]\n    last_two = array[-1] * array[-2] * array[0] * array[1] * array[2]\n    last_four = array[-1] * array[-2] * array[-3] * array[-4] * array[0]\n    first_five = array[0] * array[1] * array[2] * array[3] * array[4]\n    last_five = array[-1] * array[-2] * array[-3] * array[-4] * array[-5]\n    ans = max(first_two, first_four, last_two, last_four, first_five, last_five)\n    print(ans)", "t = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    list1 = [int(num) for num in input().split()]\n    list1.sort()\n    pro1 = 1\n    for i in range(n - 1, n - 5 - 1, -1):\n        pro1 = pro1 * list1[i]\n    pro2 = list1[0] * list1[1] * list1[n - 1] * list1[n - 2] * list1[n - 3]\n    pro3 = list1[0] * list1[1] * list1[2] * list1[3] * list1[n - 1]\n    print(max([pro1, pro2, pro3]))", "for t in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    first = a[-1] * a[-2] * a[-3] * a[-4] * a[-5]\n    second = a[0] * a[1] * a[-1] * a[-2] * a[-3]\n    third = a[0] * a[1] * a[2] * a[3] * a[-1]\n    print(max(first, second, third))", "for t in range(int(input())):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    first = a[-1] * a[-2] * a[-3] * a[-4] * a[-5]\n    second = a[0] * a[1] * a[-1] * a[-2] * a[-3]\n    third = a[0] * a[1] * a[2] * a[3] * a[-1]\n    print(max(first, second, third))", "def prod(a):\n    product = 1\n    for x in a:\n        product *= x\n    return product\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    shot1 = prod(a[-5:])\n    shot2 = prod(a[-3:] + a[:2])\n    shot3 = prod(a[-1:] + a[:4])\n    print(max(shot3, shot2, shot1))", "def solve():\n    res = []\n    for _ in range(int(input())):\n        n = int(input())\n        l = list(map(lambda x: int(x), input().split(' ')))\n        mul = 1\n        if n == 5:\n            for ll in l:\n                mul = mul * ll\n            res.append(mul)\n        else:\n            l.sort()\n            res.append(max(l[0] * l[1] * l[2] * l[3] * l[4], l[-1] * l[-2] * l[-3] * l[-4] * l[-5], l[0] * l[1] * l[2] * l[3] * l[-1], l[-1] * l[-2] * l[-3] * l[-4] * l[0], l[0] * l[1] * l[2] * l[-2] * l[-1], l[-1] * l[-2] * l[-3] * l[0] * l[1], l[0] * l[1] * l[-3] * l[-2] * l[-1], l[-1] * l[-2] * l[0] * l[1] * l[2]))\n    return res\nfor s in solve():\n    print(s)", "import math\nfor s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    print(max((math.prod(a[:i] + a[i - 5:]) for i in range(5))))", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    a = sorted(map(int, stdin.readline().split()))\n    res = a[-1]\n    i = 0\n    j = -2\n    for _ in range(2):\n        if res * a[i] * a[i + 1] > res * a[j] * a[j - 1]:\n            res *= a[i] * a[i + 1]\n            i += 2\n        else:\n            res *= a[j] * a[j - 1]\n            j -= 2\n    print(res)", "for _ in range(int(input())):\n    n = input()\n    l = sorted([int(x) for x in input().split(' ')])\n    x = l[-5] * l[-4] * l[-3] * l[-2] * l[-1]\n    y = l[0] * l[1] * l[-3] * l[-2] * l[-1]\n    z = l[0] * l[1] * l[2] * l[3] * l[-1]\n    print(max([x, y, z]))", "def maximise_product():\n    n = int(input())\n    arr = [int(j) for j in input().split()]\n    arr.sort()\n    left_product_1 = arr[0] * arr[1] * arr[-1] * arr[-2] * arr[-3]\n    left_product_2 = arr[0] * arr[1] * arr[2] * arr[3] * arr[-1]\n    res = 1\n    for i in range(n - 1, n - 6, -1):\n        res *= arr[i]\n    if res < left_product_1:\n        res = left_product_1\n    if res < left_product_2:\n        res = left_product_2\n    print(res)\nt = int(input())\nfor i in range(0, t):\n    maximise_product()", "def prod(arr):\n    p = 1\n    for a in arr:\n        p *= a\n    return p\nfor _ in range(int(input())):\n    n = int(input())\n    array = list(map(int, input().split()))\n    array.sort()\n    p1 = prod(array[:4]) * array[-1]\n    p2 = prod(array[:2]) * prod(array[n - 3:])\n    p3 = prod(array[n - 5:])\n    print(max(p1, p2, p3))", "def sortval(n):\n    return abs(n)\nfor _ in range(int(input())):\n    __ = input()\n    arr = list(map(int, input().split()))\n    arr.sort()\n    parr = [1, 1, 1, 1, 1, 1]\n    parr[0] *= arr[0]\n    parr[0] *= arr[1]\n    parr[0] *= arr[2]\n    parr[0] *= arr[3]\n    parr[0] *= arr[4]\n    parr[1] *= arr[0]\n    parr[1] *= arr[1]\n    parr[1] *= arr[2]\n    parr[1] *= arr[3]\n    parr[1] *= arr[-1]\n    parr[2] *= arr[0]\n    parr[2] *= arr[1]\n    parr[2] *= arr[2]\n    parr[2] *= arr[-2]\n    parr[2] *= arr[-1]\n    parr[3] *= arr[0]\n    parr[3] *= arr[1]\n    parr[3] *= arr[-3]\n    parr[3] *= arr[-2]\n    parr[3] *= arr[-1]\n    parr[4] *= arr[0]\n    parr[4] *= arr[-4]\n    parr[4] *= arr[-3]\n    parr[4] *= arr[-2]\n    parr[4] *= arr[-1]\n    parr[5] *= arr[-5]\n    parr[5] *= arr[-4]\n    parr[5] *= arr[-3]\n    parr[5] *= arr[-2]\n    parr[5] *= arr[-1]\n    print(max(parr))", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    arr.sort(reverse=True)\n    a = arr[0] * arr[1] * arr[2] * arr[3] * arr[4]\n    b = arr[0] * arr[1] * arr[2] * arr[n - 1] * arr[n - 2]\n    c = arr[0] * arr[n - 1] * arr[n - 2] * arr[n - 3] * arr[n - 4]\n    print(max(a, b, c))", "from sys import stdin\n\nclass Input:\n\n    def __init__(self):\n        self.next = self.readline()\n\n    def readline(self):\n        return stdin.readline().strip()\n\n    def line(self):\n        try:\n            return self.next\n        finally:\n            self.next = self.readline()\n\n    def array(self, sep=' ', cast=int):\n        return list(map(cast, self.line().split(sep=sep)))\n\n    def known_tests(self):\n        (num_of_cases,) = self.array()\n        for case in range(num_of_cases):\n            yield self\n\n    def unknown_tests(self):\n        while self.next:\n            yield self\n\nclass Problem:\n\n    def __init__(self, input):\n        (n,) = input.array()\n        a = input.array()\n        a.sort()\n        ans = max(a[0] * a[1] * a[2] * a[3] * a[4], a[0] * a[1] * a[2] * a[3] * a[-1], a[0] * a[1] * a[2] * a[-2] * a[-1], a[0] * a[1] * a[-3] * a[-2] * a[-1], a[0] * a[-4] * a[-3] * a[-2] * a[-1], a[-5] * a[-4] * a[-3] * a[-2] * a[-1])\n        print(ans)\nfor tc in Input().known_tests():\n    Problem(tc)", "import sys\ninput = sys.stdin.readline\nins = lambda : input().rstrip()\nini = lambda : int(input().rstrip())\ninm = lambda : map(int, input().rstrip().split())\ninl = lambda : list(map(int, input().split()))\nout = lambda x, s='\\n': print(s.join(map(str, x)))\nt = ini()\nfor _ in range(t):\n    n = ini()\n    a = sorted(inl())\n    ans = 1\n    if n == 5:\n        for i in range(5):\n            ans *= a[i]\n    else:\n        tmp = []\n        count = 2\n        for i in range(0, n, 2):\n            if count == 0 or a[i] >= 0 or a[i + 1] >= 0:\n                break\n            tmp.append(a[i] * a[i + 1])\n            count -= 1\n        tmp2 = a[-1] * a[-2] * a[-3]\n        ans = -(3 * 10 ** 3) ** 5 - 1\n        if len(tmp) >= 2:\n            ans = max(ans, tmp[0] * tmp[1] * a[-1])\n        if len(tmp) >= 1:\n            ans = max(ans, tmp[0] * tmp2)\n        ans = max(ans, tmp2 * a[-4] * a[-5])\n    print(ans)", "import math\nfor s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    print(max((math.prod(a[:i] + a[i - 5:]) for i in (0, 2, 4))))", "t = int(input())\noutputs = []\nfor i in range(t):\n    amount = int(input())\n    items = [int(i) for i in input().split()]\n    if amount == 5:\n        outputs.append(items[0] * items[1] * items[2] * items[3] * items[4])\n    else:\n        items.sort()\n        outputs.append(max(items[0] * items[1] * items[2] * items[3] * items[-1], items[0] * items[1] * items[-1] * items[-2] * items[-3], items[-1] * items[-2] * items[-3] * items[-4] * items[-5]))\nfor out in outputs:\n    print(out)", "from sys import stdin\nfrom functools import reduce\nt = int(stdin.readline())\nfor _ in range(t):\n    n = int(stdin.readline())\n    a = [int(y) for y in stdin.readline().split()]\n    sorted_a = sorted(a)\n    print(max(reduce(lambda x, y: x * y, sorted_a[-5:]), max(reduce(lambda x, y: x * y, sorted_a[:2] + sorted_a[-3:]), reduce(lambda x, y: x * y, sorted_a[:4] + sorted_a[-1:]))))", "for i in range(int(input())):\n    k = int(input())\n    spic = list(map(int, input().split()))\n    spic = sorted(spic)\n    print(max(spic[-1] * spic[-2] * spic[-3] * spic[-4] * spic[-5], spic[0] * spic[1] * spic[-1] * spic[-2] * spic[-3], spic[0] * spic[1] * spic[2] * spic[3] * spic[-1]))", "from sys import stdin, stdout\nt = int(stdin.readline())\nwhile t:\n    t -= 1\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    a.sort()\n    result = float('-inf')\n    for i in range(5):\n        _5th = (n - 1 + i) % n\n        _4th = (n - 2 + i) % n\n        _3rd = (n - 3 + i) % n\n        _2nd = (n - 4 + i) % n\n        _1st = (n - 5 + i) % n\n        result = max(result, a[_1st] * a[_2nd] * a[_3rd] * a[_4th] * a[_5th])\n    print(result)", "for _ in range(int(input())):\n    n = int(input())\n    arr = sorted(list(map(int, input().split())))\n    neg_4_pos_1 = arr[0] * arr[1] * arr[2] * arr[3] * arr[-1]\n    neg_2_pos_3 = arr[0] * arr[1] * arr[-1] * arr[-2] * arr[-3]\n    neg_0_pos_5 = arr[-1] * arr[-2] * arr[-3] * arr[-4] * arr[-5]\n    print(max(neg_4_pos_1, neg_0_pos_5, neg_2_pos_3))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(max(a[0] * a[1] * a[2] * a[3] * a[-1], a[0] * a[1] * a[-3] * a[-1] * a[-2], a[-1] * a[-2] * a[-3] * a[-4] * a[-5]))", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(max(a[0] * a[1] * a[2] * a[3] * a[-1], a[0] * a[1] * a[2] * a[-2] * a[-1], a[0] * a[1] * a[-3] * a[-2] * a[-1], a[-5] * a[-4] * a[-3] * a[-2] * a[-1]))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = list(map(int, input().split()))\n    s.sort(reverse=True)\n    for i in s:\n        if i >= 0:\n            break\n    else:\n        print(s[0] * s[1] * s[2] * s[3] * s[4])\n        continue\n    print(max(s[1] * s[2] * s[3] * s[4], s[1] * s[2] * s[-1] * s[-2], s[-4] * s[-1] * s[-2] * s[-3]) * s[0])", "import sys\nfrom collections import defaultdict, deque\nsys.setrecursionlimit(10 ** 6)\n\ndef prod(nums):\n    product = 1\n    for x in nums:\n        product *= x\n    return product\nn = int(input())\nfor _ in range(n):\n    k = input()\n    nums = list(map(int, input().split()))\n    nums.sort()\n    take5 = prod(nums[-5:])\n    take3 = prod(nums[-3:] + nums[:2])\n    take1 = prod(nums[-1:] + nums[:4])\n    maximum = max(take5, take3, take1)\n    print(maximum)", "def prod(a):\n    product = 1\n    for x in a:\n        product *= x\n    return product\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    zeros = a.count(0)\n    if n - zeros < 5:\n        print(0)\n    elif n == 5:\n        s = 1\n        for x in a:\n            s *= x\n        print(s)\n    else:\n        a.sort()\n        shot1 = prod(a[-5:])\n        shot2 = prod(a[-3:] + a[:2])\n        shot3 = prod(a[-1:] + a[:4])\n        print(max(shot3, shot2, shot1))", "import sys\nimport math\nfrom decimal import *\n\ndef I():\n    return int(sys.stdin.readline())\n\ndef IL():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef ILS():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef solve():\n    tt = I()\n    for ii in range(tt):\n        n = I()\n        l = IL()\n        l.sort()\n        an1 = l[0] * l[1] * l[-1] * l[-2] * l[-3]\n        an2 = l[0] * l[1] * l[2] * l[3] * l[-1]\n        an3 = l[-5] * l[-4] * l[-3] * l[-2] * l[-1]\n        ans = max(an1, an2, an3)\n        print(ans)\n        pass\nsolve()", "import sys\nfrom collections import defaultdict\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    lis.sort(reverse=True)\n    x = 1\n    y = 1\n    z = 1\n    for i in range(5):\n        x *= lis[i]\n    for i in range(3):\n        y *= lis[i]\n    for i in range(n - 2, n):\n        y *= lis[i]\n    z = lis[0]\n    for i in range(n - 4, n):\n        z *= lis[i]\n    print(max(x, y, z))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    f = list(map(int, input().split()))\n    f.sort()\n    print(max(f[0] * f[1] * f[2] * f[3] * f[-1], f[0] * f[1] * f[-3] * f[-2] * f[-1], f[-5] * f[-4] * f[-3] * f[-2] * f[-1]))", "cases = int(input())\nout = []\nfor case in range(cases):\n    n = int(input())\n    array = [int(s) for s in input().split()]\n    array.sort()\n    l = 0\n    r = len(array) - 1\n    s = max(array[l] * array[l + 1] * array[l + 2] * array[l + 3] * array[l + 4], array[l] * array[l + 1] * array[l + 2] * array[l + 3] * array[r], array[l] * array[l + 1] * array[l + 2] * array[r - 1] * array[r], array[l] * array[l + 1] * array[r - 2] * array[r - 1] * array[r], array[l] * array[r - 3] * array[r - 2] * array[r - 1] * array[r], array[r - 4] * array[r - 3] * array[r - 2] * array[r - 1] * array[r])\n    out.append(str(s))\nprint('\\n'.join(out))", "import sys\nsys.setrecursionlimit(2147483647)\ninput = sys.stdin.readline\n\ndef solve(t, A):\n    pos = []\n    negas = []\n    ans = []\n    for a in A:\n        if a >= 0:\n            pos.append(a)\n        else:\n            negas.append(-1 * a)\n    pos = sorted(pos)\n    rev_pos = pos[::-1]\n    negas = sorted(negas)\n    rev_negas = negas[::-1]\n    for i in range(6):\n        if len(pos) >= i and len(negas) >= 5 - i:\n            p = 1\n            if i % 2 == 0:\n                for k in pos[:i]:\n                    p *= k\n                for k in negas[:5 - i]:\n                    p *= -1 * k\n            else:\n                for k in rev_pos[:i]:\n                    p *= k\n                for k in rev_negas[:5 - i]:\n                    p *= -1 * k\n            ans.append(p)\n    return max(ans)\n\ndef main():\n    n = int(input())\n    ans = []\n    for _ in range(n):\n        t = int(input())\n        ans.append(solve(t, list(map(int, input().split(' ')))))\n    for r in ans:\n        print(r)\nmain()", "t = int(input())\nres = []\nfor i in range(t):\n    s = int(input())\n    arr = sorted([int(x) for x in input().split()])\n    n1 = arr[len(arr) - 5] * arr[len(arr) - 4] * arr[len(arr) - 3] * arr[len(arr) - 2] * arr[len(arr) - 1]\n    n2 = arr[len(arr) - 4] * arr[len(arr) - 3] * arr[len(arr) - 2] * arr[len(arr) - 1] * arr[0]\n    n3 = arr[len(arr) - 3] * arr[len(arr) - 2] * arr[len(arr) - 1] * arr[0] * arr[1]\n    n4 = arr[len(arr) - 2] * arr[len(arr) - 1] * arr[0] * arr[1] * arr[2]\n    n5 = arr[len(arr) - 1] * arr[0] * arr[1] * arr[2] * arr[3]\n    res.append(max(n1, n2, n3, n4, n5))\nfor e in res:\n    print(e)", "t = int(input())\nresults = []\nfor i in range(t):\n    n = int(input())\n    vals = input().split()\n    a = [int(val) for val in vals]\n    if n == 5:\n        results.append(a[0] * a[1] * a[2] * a[3] * a[4])\n    else:\n        a.sort()\n        prod_max = a[-1] * a[-2] * a[-3] * a[-4] * a[-5]\n        for j in range(1, 5):\n            prod = a[-1 + j] * a[-2 + j] * a[-3 + j] * a[-4 + j] * a[-5 + j]\n            if prod > prod_max:\n                prod_max = prod\n        results.append(prod_max)\nfor result in results:\n    print(result)", "t = int(input())\nresults = []\nfor i in range(t):\n    n = int(input())\n    vals = input().split()\n    a = [int(val) for val in vals]\n    if n == 5:\n        results.append(a[0] * a[1] * a[2] * a[3] * a[4])\n    else:\n        a.sort()\n        prod1 = a[-1] * a[-2] * a[-3] * a[-4] * a[-5]\n        prod2 = a[0] * a[1] * a[-1] * a[-2] * a[-3]\n        prod3 = a[0] * a[1] * a[2] * a[3] * a[-1]\n        results.append(max(prod1, prod2, prod3))\nfor result in results:\n    print(result)", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted(map(int, input().split()))\n    if a[-1] < 0:\n        print(a[-1] * a[-2] * a[-3] * a[-4] * a[-5])\n    else:\n        print(max(a[-1] * a[0] * a[1] * a[2] * a[3], a[-1] * a[-2] * a[-3] * a[0] * a[1], a[-1] * a[-2] * a[-3] * a[-4] * a[-5]))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    mx = a[0] * a[1] * a[2] * a[3] * a[n - 1]\n    mx = max(mx, a[0] * a[1] * a[n - 3] * a[n - 2] * a[n - 1])\n    mx = max(mx, a[n - 5] * a[n - 4] * a[n - 3] * a[n - 2] * a[n - 1])\n    print(mx)", "for i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    print(max(arr[0] * arr[1] * arr[2] * arr[3] * arr[4], arr[0] * arr[1] * arr[2] * arr[3] * arr[-1], arr[0] * arr[1] * arr[2] * arr[-2] * arr[-1], arr[0] * arr[1] * arr[-3] * arr[-2] * arr[-1], arr[0] * arr[-4] * arr[-3] * arr[-2] * arr[-1], arr[-5] * arr[-4] * arr[-3] * arr[-2] * arr[-1]))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    numbers = list(map(int, input().split()))\n    numbers.sort()\n    a = numbers[-1] * numbers[-2] * numbers[-3] * numbers[-4] * numbers[-5]\n    b = numbers[0] * numbers[1] * numbers[2] * numbers[3] * numbers[-1]\n    c = numbers[0] * numbers[1] * numbers[-1] * numbers[-2] * numbers[-3]\n    print(max([a, b, c]))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    v = list(map(int, input().split()))\n    pro = 1\n    v.sort()\n    ans1 = v[n - 1] * v[n - 2] * v[n - 3] * v[n - 4] * v[n - 5]\n    ans2 = v[0] * v[1] * v[n - 1] * v[n - 2] * v[n - 3]\n    ans3 = v[0] * v[1] * v[2] * v[3] * v[n - 1]\n    print(max(ans1, ans2, ans3))", "def syn(a):\n    s = 1\n    for i in a:\n        s *= i\n    return s\n\ndef main():\n    n = int(input())\n    a = sorted([int(i) for i in input().split()])\n    mx = syn(a[:5])\n    for i in range(5):\n        if syn(a[0:i] + a[-5 + i:]) > mx:\n            mx = syn(a[0:i] + a[-5 + i:])\n    print(mx)\nfor i in range(int(input())):\n    main()", "from functools import reduce\nt = int(input())\nfor i in range(t):\n    n = input()\n    a = list(map(int, input().split()))\n    if len(a) == 5:\n        print(reduce(lambda x, y: x * y, a))\n    else:\n        a.sort()\n        a_copy = a.copy()\n        a_copy.reverse()\n        a1 = reduce(lambda x, y: x * y, a_copy[:5])\n        a2 = reduce(lambda x, y: x * y, a[:5])\n        a3 = reduce(lambda x, y: x * y, a[:4]) * a[len(a) - 1]\n        a4 = reduce(lambda x, y: x * y, a[:2]) * reduce(lambda x, y: x * y, a_copy[:3])\n        print(max(max(a1, a2), max(a4, a3)))", "from math import *\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom collections import Counter as ctr\nfrom collections import deque as dq\nfrom array import array\nfrom re import search\nli = lambda : list(map(int, input().split()))\narr = lambda a: array('i', a)\nbi = lambda n: bin(n).replace('0b', '')\nyn = lambda f: print('NYOE S'[f::2])\nsbstr = lambda a, s: search('.*'.join(a), s)\n\ndef solve():\n    for _ in range(int(input())):\n        n = int(input())\n        a = li()\n        a.sort()\n        print(max((prod(a[:i] + a[i - 5:]) for i in [0, 2, 4])))\nsolve()", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    if n == 5:\n        print(a[0] * a[1] * a[2] * a[3] * a[4])\n        continue\n    pos = []\n    neg = []\n    for k in a:\n        if k >= 0:\n            pos.append(k)\n        else:\n            neg.append(k)\n    neg.sort()\n    pos.sort(reverse=True)\n    l_neg = len(neg)\n    l_pos = len(pos)\n    if l_neg <= 1:\n        print(pos[0] * pos[1] * pos[2] * pos[3] * pos[4])\n        continue\n    if l_pos == 0:\n        print(neg[-1] * neg[-2] * neg[-3] * neg[-4] * neg[-5])\n        continue\n    if l_pos == 1:\n        print(pos[0] * neg[1] * neg[2] * neg[3] * neg[0])\n        continue\n    r = []\n    if l_neg >= 4:\n        r.append(pos[0] * neg[0] * neg[1] * neg[2] * neg[3])\n    if l_pos >= 5:\n        r.append(pos[0] * pos[1] * pos[2] * pos[3] * pos[4])\n    if l_pos >= 3:\n        r.append(pos[0] * pos[1] * pos[2] * neg[0] * neg[1])\n    print(max(r))", "from functools import reduce\ntest_cases = int(input())\n\ndef handle() -> str:\n    input()\n    values = sorted([int(s) for s in input().split(' ')])\n    max_value = float('-inf')\n    max_value = max(max_value, reduce(lambda x, y: x * y, values[-5:]))\n    max_value = max(max_value, reduce(lambda x, y: x * y, values[:2] + values[-3:]))\n    max_value = max(max_value, reduce(lambda x, y: x * y, values[:4] + values[-1:]))\n    return max_value\nfor _ in range(test_cases):\n    print(handle())", "import sys\n\ndef minp():\n    return sys.stdin.readline().strip()\n\ndef mint():\n    return int(minp())\n\ndef mints():\n    return map(int, minp().split())\n\ndef solve():\n    n = mint()\n    a = []\n    b = []\n    zero = False\n    for i in mints():\n        if i < 0:\n            a.append(i)\n        elif i > 0:\n            b.append(i)\n        else:\n            zero = True\n    a.sort()\n    b.sort(reverse=True)\n    r = None\n    for i in range(6):\n        if len(a) >= i and len(b) >= 5 - i:\n            x = 1\n            if i % 2 == 1:\n                for j in range(-1, -i - 1, -1):\n                    x *= a[j]\n                for j in range(-1, -(5 - i) - 1, -1):\n                    x *= b[j]\n            else:\n                for j in range(i):\n                    x *= a[j]\n                for j in range(5 - i):\n                    x *= b[j]\n            if r == None or x > r:\n                r = x\n    if zero:\n        if r == None or 0 > r:\n            r = 0\n    print(r)\nfor i in range(mint()):\n    solve()", "import sys\ninput = sys.stdin.readline\nfrom collections import defaultdict\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = float('-inf')\n    cur = 1\n    for i in range(n - 1, n - 6, -1):\n        cur *= a[i]\n    ans = max(ans, cur)\n    cur = 1\n    for i in range(n - 1, n - 4, -1):\n        cur *= a[i]\n    cur *= a[0] * a[1]\n    ans = max(ans, cur)\n    cur = 1\n    for i in range(4):\n        cur *= a[i]\n    cur *= a[-1]\n    ans = max(ans, cur)\n    print(ans)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    x = int(input())\n    (*li,) = map(int, input().split())\n    li.sort()\n    a = li[-1] * li[-2] * li[-3] * li[-4] * li[-5]\n    b = li[-1] * li[-2] * li[-3] * li[0] * li[1]\n    c = li[-1] * li[-2] * li[-3] * li[0] * li[-4]\n    d = li[-1] * li[-2] * li[2] * li[0] * li[1]\n    e = li[-1] * li[2] * li[3] * li[0] * li[1]\n    f = li[4] * li[2] * li[3] * li[0] * li[1]\n    print(max(a, b, c, d, e, f))", "for i in range(int(input())):\n    n = int(input())\n    number = sorted(map(int, input().split(' ')))\n    p_1 = number[0] * number[1] * number[n - 1] * number[n - 2] * number[n - 3]\n    p_2 = number[0] * number[1] * number[2] * number[3] * number[n - 1]\n    p_3 = number[n - 1] * number[n - 2] * number[n - 3] * number[n - 4] * number[n - 5]\n    print(max(p_1, p_2, p_3))", "import math\nimport sys\nimport collections\nimport bisect\nimport time\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\nfor t in range(int(input())):\n    n = int(input())\n    arr = get_list()\n    arr.sort()\n    if max(arr) == 0:\n        print(0)\n        continue\n    if max(arr) < 0:\n        ans = 1\n        d = 0\n        for i in range(n - 1, -1, -1):\n            ans *= arr[i]\n            d += 1\n            if d == 5:\n                break\n        print(ans)\n        continue\n    case1 = arr[0] * arr[1] * arr[2] * arr[3] * arr[-1]\n    case2 = arr[-1] * arr[-2] * arr[-3] * arr[-4] * arr[-5]\n    case3 = arr[-1] * arr[-2] * arr[-3] * arr[0] * arr[1]\n    print(max(case1, case2, case3))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(max(a[0] * a[1] * a[2] * a[3] * a[-1], a[0] * a[1] * a[-3] * a[-1] * a[-2], a[-1] * a[-2] * a[-3] * a[-4] * a[-5]))", "for t in range(int(input())):\n    n = int(input())\n    l = sorted(list(map(int, input().split())))\n    ans = []\n    ans.append(l[-1] * l[-2] * l[-3] * l[-4] * l[-5])\n    ans.append(l[0] * l[1] * l[-1] * l[-2] * l[-3])\n    ans.append(l[0] * l[1] * l[2] * l[3] * l[-1])\n    ans.append(l[0] * l[1] * l[2] * l[3] * l[4])\n    print(max(ans))", "n = int(input())\nwhile n:\n    x = int(input())\n    ans = 1\n    temp = 1\n    arr = sorted([int(i) for i in input().split()])\n    a = arr[-1] * arr[-2] * arr[-3] * arr[-4] * arr[-5]\n    b = arr[0] * arr[1] * arr[-1] * arr[-2] * arr[-3]\n    c = arr[0] * arr[1] * arr[2] * arr[3] * arr[-1]\n    print(max(a, b, c))\n    n -= 1", "t = int(input())\nfor w in range(t):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    l.sort()\n    print(max(l[0] * l[1] * l[2] * l[3] * l[-1], l[0] * l[1] * l[-3] * l[-2] * l[-1], l[-1] * l[-2] * l[-3] * l[-4] * l[-5]))", "from functools import *\nfrom operator import *\nfor s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    print(max((reduce(mul, a[:i], 1) * reduce(mul, a[i - 5:], 1) for i in range(5))))", "results = []\nfor i in range(int(input())):\n    input()\n    a = list(map(int, input().split()))\n    if len(a) == 5:\n        results.append(a[0] * a[1] * a[2] * a[3] * a[4])\n    else:\n        a = sorted(a)\n        maxA = a[-5] * a[-4] * a[-3] * a[-2] * a[-1]\n        for i in range(5):\n            maxA = max(maxA, a[-5 + i] * a[-4 + i] * a[-3 + i] * a[-2 + i] * a[-1 + i])\n        results.append(maxA)\nfor i in results:\n    print(i)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(max(a[-1] * a[-2] * a[-3] * a[-4] * a[-5], a[-1] * a[-2] * a[-3] * a[1] * a[0], a[-1] * a[3] * a[2] * a[1] * a[0]))", "t = int(input())\nList = []\nfor i in range(t):\n    n = int(input())\n    List = [int(s) for s in input().split()]\n    List.sort()\n    print(max(List[0] * List[1] * List[2] * List[3] * List[4], List[-1] * List[-2] * List[-3] * List[-4] * List[-5], List[0] * List[1] * List[2] * List[3] * List[-1], List[0] * List[1] * List[2] * List[-1] * List[-2], List[0] * List[1] * List[-3] * List[-2] * List[-1], List[0] * List[-4] * List[-3] * List[-2] * List[-1]))", "import math\nfor i in range(int(input())):\n    n = input()\n    a = sorted(map(int, input().split()))\n    print(max((math.prod(a[:i] + a[i - 5:]) for i in (0, 2, 4))))", "def solve(n, a):\n    a.sort()\n    ans = float('-inf')\n    for i in range(5):\n        p1 = (i - 1) % n\n        p2 = (i - 2) % n\n        p3 = (i - 3) % n\n        p4 = (i - 4) % n\n        p5 = (i - 5) % n\n        val = a[p1] * a[p2] * a[p3] * a[p4] * a[p5]\n        ans = max(ans, val)\n    return ans\nfor t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(n, a))", "def prod(arr):\n    ans = 1\n    for a in arr:\n        ans *= a\n    return ans\nt = int(input())\nbuf = []\nfor _ in range(t):\n    n = int(input())\n    aaa = list(map(int, input().split()))\n    if n == 5:\n        buf.append(prod(aaa))\n        continue\n    minus = []\n    zeros_cnt = 0\n    plus = []\n    for a in aaa:\n        if a < 0:\n            minus.append(a)\n        elif a == 0:\n            zeros_cnt += 1\n        else:\n            plus.append(a)\n    minus.sort()\n    plus.sort()\n    if len(plus) == 0:\n        if zeros_cnt > 0:\n            buf.append(0)\n        else:\n            buf.append(prod(minus[-5:]))\n    else:\n        ans = 0\n        if len(plus) >= 5:\n            ans = max(ans, prod(plus[-5:]))\n        if len(minus) >= 2 and len(plus) >= 3:\n            ans = max(ans, prod(minus[:2]) * prod(plus[-3:]))\n        if len(minus) >= 4 and len(plus) >= 1:\n            ans = max(ans, prod(minus[:4]) * prod(plus[-1:]))\n        buf.append(ans)\nprint('\\n'.join(map(str, buf)))", "from functools import *\nfrom operator import *\nfor s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    print(max((reduce(mul, a[:i], 1) * reduce(mul, a[i - 5:], 1) for i in range(5))))", "t = int(input())\nfor _ in range(1, t + 1):\n    l = int(input())\n    ar = list(map(int, input().split()))\n    ar.sort()\n    res = max(ar[l - 1] * ar[l - 2] * ar[l - 3] * ar[l - 4] * ar[l - 5], ar[l - 1] * ar[l - 2] * ar[l - 3] * ar[0] * ar[1], ar[l - 1] * ar[2] * ar[3] * ar[0] * ar[1])\n    print(res)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    if n == 5:\n        print(a[0] * a[1] * a[2] * a[3] * a[4])\n    else:\n        r = a[n - 1]\n        if r >= 0:\n            if a[0] * a[1] > a[n - 2] * a[n - 3]:\n                r *= a[0] * a[1]\n                if a[2] * a[3] > a[n - 2] * a[n - 3]:\n                    r *= a[2] * a[3]\n                else:\n                    r *= a[n - 2] * a[n - 3]\n            else:\n                r = r * a[n - 2] * a[n - 3]\n                if a[0] * a[1] > a[n - 4] * a[n - 5]:\n                    r *= a[0] * a[1]\n                else:\n                    r *= a[n - 4] * a[n - 5]\n        else:\n            r *= a[n - 2] * a[n - 3] * a[n - 4] * a[n - 5]\n        print(r)", "for s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    r = -1 << 58\n    for i in range(5):\n        p = 1\n        for x in a[:i] + a[i - 5:]:\n            p *= x\n        r = max(r, p)\n    print(r)"]