["import sys\ninput = sys.stdin.readline\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = input()\n    b = input()\n    scheck = []\n    pos = 0\n    pos1 = n - 1\n    reverse = 0\n    for j in range(n - 1, -1, -1):\n        if not reverse:\n            if a[pos] != b[j]:\n                scheck.append(j + 1)\n            else:\n                scheck.append(1)\n                scheck.append(j + 1)\n            pos += 1\n            reverse = 1\n        else:\n            if a[pos1] != b[j]:\n                scheck.append(1)\n                scheck.append(j + 1)\n            else:\n                scheck.append(j + 1)\n            pos1 -= 1\n            reverse = 0\n    print(len(scheck), *scheck)", "list_ans = []\nfor _ in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    list1 = []\n    for i in range(n):\n        if i % 2 == 0:\n            x = a[i // 2]\n        else:\n            x = str(1 - int(a[n - 1 - i // 2]))\n        if x == b[-1 - i]:\n            list1.append(1)\n            list1.append(n - i)\n        else:\n            list1.append(n - i)\n    s = [len(list1)] + list1\n    list_ans.append(' '.join(map(str, s)))\nfor item in list_ans:\n    print(item)", "str1 = 'First'\nstr2 = 'Second'\n\ndef rev(c, cnt):\n    if cnt % 2 == 0:\n        return c\n    if c == '0':\n        c = '1'\n    else:\n        c = '0'\n    return c\n\ndef solve():\n    n = int(input())\n    a = input()\n    b = input()\n    ans = list()\n    (l, r) = (0, n - 1)\n    for i in range(n):\n        if i % 2 == 0:\n            if rev(a[l], i) == b[n - i - 1]:\n                ans.append(1)\n            l += 1\n        else:\n            if rev(a[r], i) == b[n - i - 1]:\n                ans.append(1)\n            r -= 1\n        ans.append(n - i)\n    print(len(ans), sep=' ', end=' ')\n    for num in ans:\n        print(num, sep=' ', end=' ')\n    print()\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        solve()\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    ans = []\n    cur = a[0]\n    inv = 0\n    in0 = 0\n    arr = [0] * n\n    ar1 = [i for i in range(1, (n + 1) // 2 + 1)]\n    ar2 = [i for i in range(n, (n + 1) // 2, -1)]\n    na = []\n    for i in range(len(ar2)):\n        na.append(ar1[i] - 1)\n        na.append(ar2[i] - 1)\n    if n % 2 == 1:\n        na.append(ar1[-1] - 1)\n    cnt = 0\n    for i in range(n - 1, -1, -1):\n        tmp = a[na[cnt]]\n        if cnt % 2 == 1:\n            cur = '0' if tmp == '1' else '1'\n        else:\n            cur = tmp\n        if b[i] == cur:\n            ans.append(1)\n            ans.append(i + 1)\n        else:\n            ans.append(i + 1)\n        inv += 1\n        cnt += 1\n    print(len(ans), end=' ')\n    for i in ans:\n        print(i, end=' ')\n    print()", "def find(s1, s2):\n    if len(s1) == 1:\n        if s1 == s2:\n            return []\n        else:\n            return [1]\n    indices = [-1] * len(s1)\n    cur = len(s1) - 1\n    val = 0\n    for i in range(len(s1)):\n        indices[cur] = val\n        cur -= 2\n        val += 1\n        if cur < 0:\n            break\n    if indices[0] == -1:\n        cur = 0\n        for i in range(len(s1)):\n            indices[cur] = val\n            val += 1\n            cur += 2\n            if cur > len(s1) - 1:\n                break\n    else:\n        cur = 1\n        for i in range(len(s1)):\n            indices[cur] = val\n            val += 1\n            cur += 2\n            if cur > len(s1) - 1:\n                break\n    ans = []\n    temp = 1\n    for i in range(len(s1) - 1, -1, -1):\n        if (int(s1[indices[i]]) + temp) % 2 == int(s2[i]) % 2:\n            ans += [i + 1]\n        else:\n            ans += [1, i + 1]\n        temp += 1\n    return ans\nANS = []\nfor _ in range(int(input())):\n    input()\n    s1 = input()\n    s2 = input()\n    ans = find(s1, s2)\n    ans = [str(x) for x in ans]\n    ans = [str(len(ans))] + ans\n    ANS += [' '.join(ans)]\nprint('\\n'.join(ANS))"]