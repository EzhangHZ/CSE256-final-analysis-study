["def res(strOfPlusesAndMinuses):\n    total = nPluses = nMinuses = 0\n    for i in range(len(strOfPlusesAndMinuses)):\n        if strOfPlusesAndMinuses[i] == '+':\n            nPluses += 1\n            total += 1\n        elif nPluses == nMinuses:\n            total += i + 2\n        else:\n            nMinuses += 1\n            total += 1\n    return total\nnTestCases = int(input())\ntestCases = tuple((input() for x in range(nTestCases)))\ntuple((print(res(testCase)) for testCase in testCases))", "def my_code(s):\n    res = 0\n    temp = 0\n    for i in range(len(s)):\n        if s[i] == '+':\n            res += 1\n            temp += 1\n        elif temp > 0:\n            res += 1\n            temp -= 1\n        else:\n            res += 2\n            res += i\n    return res\nfor i in range(int(input())):\n    print(my_code(input()))", "def solve():\n    t = int(input())\n    for i in range(t):\n        s = input()\n        n = len(s)\n        acc = 0\n        last_break = 0\n        res = n\n        for i in range(n):\n            acc += 1 if s[i] == '+' else -1\n            if acc < last_break:\n                last_break = acc\n                res += i + 1\n        print(res)\nsolve()", "import random\n\ndef naive(ss):\n    res = 0\n    init = 0\n    s = ' ' + ss\n    for init in range(100000):\n        cur = init\n        ok = True\n        for i in range(1, len(s)):\n            res += 1\n            if s[i] == '+':\n                cur += 1\n            else:\n                cur -= 1\n            if cur < 0:\n                ok = False\n                break\n        if ok:\n            break\n    return res\n\ndef optimal(s):\n    n = len(s)\n    ans = 0\n    curr = 0\n    m = 0\n    for i in range(n):\n        if s[i] == '+':\n            m += 1\n            curr += 1\n        elif m > 0:\n            m -= 1\n            curr += 1\n        else:\n            curr += 1\n            ans += curr\n    ans += curr\n    return ans\nt = int(input())\nfor i in range(t):\n    s = input()\n    print(optimal(s))", "def solve():\n    s = input()\n    ans = 0\n    cur = 0\n    for i in range(0, len(s)):\n        if s[i] == '+':\n            cur += 1\n        else:\n            cur -= 1\n        if cur < 0:\n            cur = 0\n            ans += i + 1\n    if ans > 0:\n        return ans + len(s)\n    return len(s)\n\ndef main():\n    t = int(input())\n    while t:\n        print(solve())\n        t -= 1\nmain()", "from math import ceil\n\ndef solve():\n    S = input()\n    res = 0\n    s = 0\n    for i in range(len(S)):\n        if S[i] == '-':\n            s -= 1\n            if s < 0:\n                res += i + 1\n                s += 1\n        else:\n            s += 1\n    res += len(S)\n    print(res)\nfor cnt in range(int(input())):\n    solve()", "def solve(s):\n    diff = 0\n    cnt = len(s)\n    for (i, c) in enumerate(s):\n        diff += 1 if c == '+' else -1\n        if diff < 0:\n            diff = 0\n            cnt += i + 1\n    return cnt\nt = int(input())\nfor i_t in range(t):\n    s = input()\n    print(solve(s))", "from sys import stdin, stdout\nLI = lambda : list(map(int, input().split()))\nMAP = lambda : map(int, input().split())\nIN = lambda : int(input())\nS = lambda : input()\nimport math\n\ndef p(a):\n    print(' '.join(list(map(str, a))))\nfrom collections import Counter\n\ndef solve():\n    s = S()\n    l = len(s)\n    res = 0\n    cur = 0\n    for x in range(l):\n        if s[x] == '+':\n            cur += 1\n        else:\n            cur -= 1\n            if cur < 0:\n                res += x + 1\n                cur = 0\n    print(l + res)\nfor i in range(IN()):\n    solve()", "import sys\ninput = sys.stdin.readline\n\ndef testcase():\n    ans = 0\n    p = 0\n    c = 0\n    S = input().strip()\n    for s in S:\n        if c < 0:\n            c += 1\n        p += 1\n        if s == '+':\n            c += 1\n        else:\n            c -= 1\n        if c >= 0:\n            continue\n        ans += p\n    else:\n        if c >= 0:\n            ans += p\n        elif c < 0:\n            ans += len(S) * abs(c)\n    print(ans)\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        testcase()\nmain()", "t = int(input())\n\ndef pam(s):\n    res = 0\n    cur = 0\n    j = 1\n    for i in s:\n        res += 1\n        if i == '+':\n            cur += 1\n        else:\n            cur -= 1\n        if cur < 0:\n            cur = 0\n            res = res + j\n        j += 1\n    return res\nli = []\nfor i in range(t):\n    li = li + [input()]\nfor i in li:\n    print(pam(i))", "def calc(s):\n    cum = 0\n    low = 0\n    out = len(s)\n    for (i, c) in enumerate(s):\n        if c == '+':\n            cum += 1\n        else:\n            cum -= 1\n        if cum < low:\n            out += i + 1\n            low = cum\n    return out\nfor _ in range(int(input())):\n    print(calc(input()))", "import sys\nimport string\nfrom heapq import *\nfrom bisect import *\nfrom collections import Counter, defaultdict\nfrom math import fsum, sqrt, gcd, ceil, factorial\nfrom operator import *\nfrom itertools import accumulate\ninf = float('inf')\nflush = lambda : sys.stdout.flush\ncomb = lambda x, y: factorial(x) // factorial(y) // factorial(x - y)\nen = lambda x: list(enumerate(x))\nip = lambda : input()\nii = lambda : int(input())\nr = lambda : map(int, input().split())\nrr = lambda : list(r())\n\ndef solve():\n    s = ip()\n    c = 0\n    ans = 0\n    for (j, i) in enumerate(s, 1):\n        c += 1 if i == '+' else -1\n        if c < 0:\n            ans += j\n            c += 1\n    print(ans + len(s))\nfor _ in range(ii()):\n    solve()", "from sys import stdin, stdout\nLI = lambda : list(map(int, input().split()))\nMAP = lambda : map(int, input().split())\nIN = lambda : int(input())\nS = lambda : input()\nimport math\n\ndef p(a):\n    print(' '.join(list(map(str, a))))\nfrom collections import Counter\n\ndef solve():\n    s = S()\n    l = len(s)\n    res = 0\n    cur = 0\n    for x in range(l):\n        if s[x] == '+':\n            cur += 1\n        else:\n            cur -= 1\n            if cur < 0:\n                res += x + 1\n                cur += 1\n    print(l + res)\nfor i in range(IN()):\n    solve()", "def checker(s):\n    result = len(s)\n    (cur, mx) = (0, 0)\n    for i in range(len(s)):\n        if s[i] == '+':\n            cur += 1\n        else:\n            cur -= 1\n        if mx > cur:\n            mx = cur\n            result += i + 1\n    return result\nfor _ in range(int(input())):\n    t = input()\n    print(checker(t))", "def pandm(string):\n    res = len(string)\n    curr = 0\n    m = 0\n    for i in range(0, len(string)):\n        if string[i] == '+':\n            curr += 1\n        else:\n            curr -= 1\n        if curr < m:\n            m = curr\n            res += i + 1\n    return res\nt = int(input())\nfor i in range(t):\n    print(pandm(input()))", "for _ in range(int(input())):\n    n = input()\n    ans = 0\n    count = 0\n    pos = 0\n    for i in n:\n        count += 1\n        if i is '-':\n            if pos:\n                pos -= 1\n            else:\n                ans += count\n        else:\n            pos += 1\n    print(ans + count)", "def main():\n    t = int(input())\n    for _ in range(t):\n        needed_cur = 0\n        res = 0\n        index = 1\n        string = input()\n        for x in string:\n            res += 1\n            if x == '+':\n                needed_cur += 1\n            else:\n                needed_cur -= 1\n                if needed_cur < 0:\n                    needed_cur += 1\n                    res += index\n            index += 1\n        print(res)\nmain()", "def count(s):\n    res = 0\n    cur = 0\n    for i in range(len(s)):\n        res += 1\n        if s[i] == '+':\n            cur += 1\n        else:\n            cur -= 1\n        if cur < 0:\n            res += i + 1\n            cur = 0\n    return res\nfor _ in range(int(input())):\n    print(count(input()))", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    cur = 0\n    ans = n\n    for (i, v) in enumerate(s):\n        if v == '-':\n            if cur > 0:\n                cur -= 1\n            else:\n                ans += i + 1\n        else:\n            cur += 1\n    print(ans)", "def parse(string, res):\n    cur = 0\n    for i in range(0, len(string)):\n        if s[i] == '+':\n            cur += 1\n        elif s[i] == '-':\n            cur -= 1\n        if cur < 0:\n            res += i + 1\n            cur = 0\n    return res\nt = int(input())\nfor i in range(0, t):\n    s = input()\n    res = parse(s, len(s))\n    print(res)", "def p(s):\n    res = 0\n    best = 0\n    cur = 0\n    ans = len(s)\n    for i in range(len(s)):\n        res += 1\n        if s[i] == '+':\n            cur += 1\n        else:\n            cur -= 1\n        if cur < best:\n            ans += i + 1\n            best = cur\n    return ans\nfor t in range(int(input())):\n    s = input().strip()\n    print(p(s))", "for _ in range(int(input())):\n    s = input()\n    curr = 0\n    res = 0\n    for i in range(0, len(s)):\n        if s[i] == '-':\n            if curr > 0:\n                curr -= 1\n            else:\n                res += i + 1\n        else:\n            curr += 1\n    res += len(s)\n    print(res)", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    ans = n\n    t = 0\n    for i in range(n):\n        if s[i] == '-':\n            if t > 0:\n                t -= 1\n            else:\n                ans += i + 1\n        else:\n            t += 1\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    ans = n\n    t = 0\n    for i in range(n):\n        if s[i] == '-':\n            if t > 0:\n                t -= 1\n            else:\n                ans += i + 1\n        else:\n            t += 1\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    ans = n\n    t = 0\n    for i in range(n):\n        if s[i] == '-':\n            if t > 0:\n                t -= 1\n            else:\n                ans += i + 1\n        else:\n            t += 1\n    print(ans)", "def pluses_minuses(s):\n    l = len(s)\n    p = 0\n    res = 0\n    for i in range(l):\n        if s[i] == '+':\n            p += 1\n            if i == l - 1:\n                return res + l\n            continue\n        elif s[i] == '-':\n            if p > 0:\n                p -= 1\n                if i == l - 1:\n                    return res + l\n                continue\n            else:\n                res += i + 1\n                if i == l - 1:\n                    return res + l\nt = int(input())\na = []\nfor i in range(t):\n    a.append(input())\nfor x in a:\n    print(pluses_minuses(x))", "import sys\n\ndef answer(s):\n    res = 0\n    summ = 0\n    for i in range(len(s)):\n        if s[i] == '+' and summ >= 0:\n            summ += 1\n        elif s[i] == '+' and summ < 0:\n            summ = 1\n        else:\n            summ -= 1\n        if summ >= 0:\n            res += 1\n        else:\n            res += 1 + (i + 1)\n    return res\n\ndef main():\n    t = int(input())\n    while t:\n        s = sys.stdin.readline().rstrip()\n        print(answer(s))\n        t -= 1\n    return\nmain()", "import math\n\ndef main_function():\n    test_cases = range(int(input()))\n    for test_case in test_cases:\n        s = list(input())\n        counter = 0\n        min_val = 0\n        collector = 0\n        m = 0\n        for i in range(len(s)):\n            if s[i] == '-':\n                counter -= 1\n            else:\n                counter += 1\n            if counter < 0 and s[i] == '-':\n                collector += i + 1\n                counter += 1\n                m = i + 1\n        collector += len(s)\n        print(collector)\nmain_function()", "t = int(input())\nfor _ in range(t):\n    s = input()\n    n = len(s)\n    (df, res) = (0, 0)\n    for i in range(n):\n        if s[i] == '-':\n            if df > 0:\n                df -= 1\n            else:\n                res += i + 1\n        else:\n            df += 1\n    print(res + n)", "t = int(input())\nwhile t > 0:\n    s = input()\n    (cp, ans) = (0, 0)\n    for i in range(len(s)):\n        if s[i] == '+':\n            cp += 1\n        elif cp > 0:\n            cp -= 1\n        else:\n            ans += i + 1\n    ans += len(s)\n    print(ans)\n    t -= 1", "n = int(input())\nfor x in range(n):\n    s = input()\n    ans = len(s)\n    t = 0\n    for i in range(len(s)):\n        if s[i] == '-':\n            if t > 0:\n                t -= 1\n            else:\n                ans += i + 1\n        else:\n            t += 1\n    print(ans)", "def infnty():\n    ix = 0\n    while True:\n        yield ix\n        ix += 1\n\ndef sim(s):\n    res = 0\n    for init in infnty():\n        cur = init\n        ok = True\n        for c in s:\n            res += 1\n            if c == '+':\n                cur += 1\n            elif c == '-':\n                cur -= 1\n            if cur < 0:\n                ok = False\n                break\n        if ok:\n            break\n    return res\n\ndef sim2(s):\n    res = 0\n    net = 0\n    for (i, c) in enumerate(s):\n        res += 1\n        if c == '-':\n            if net <= 0:\n                res += i + 1\n            net -= 1\n        if c == '+':\n            if net < 0:\n                net = 0\n            net += 1\n    return res\ncases = ['--+-', '++--+-', '-', '--', '---', '----', '-----', '+', '++', '+++', '++++', '+++++', '+-', '+--', '+---', '-+', '-++', '-+++', '-+', '--+', '---+', '----+', '+-', '++-', '+++-', '++++-', '++-', '++--', '++---', '++----', '--+', '+-+', '-+-', '--++', '-++-', '+--+', '+-+-', '-+--', '---+-', '----+-', '---+--', '----+--', '---+-+--', '---+++-+-+---+--']\nt = int(input().strip())\nfor _ in range(t):\n    s = input().strip()\n    print(sim2(s))", "t = int(input())\nfor _ in range(t):\n    s = input()\n    ans = len(s)\n    final = 0\n    for i in range(len(s)):\n        if s[i] == '-':\n            if final > 0:\n                final -= 1\n            else:\n                ans += i + 1\n        else:\n            final += 1\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    ans = n\n    t = 0\n    for i in range(n):\n        if s[i] == '-':\n            if t > 0:\n                t -= 1\n            else:\n                ans += i + 1\n        else:\n            t += 1\n    print(ans)", "for case in range(int(input())):\n    signs = input()\n    res = 0\n    sum = 0\n    for (i, sign) in enumerate(signs):\n        if sign == '+':\n            sum += 1\n        else:\n            sum -= 1\n        if sum < 0:\n            res += i + 1\n            sum = 0\n    print(res + len(signs))", "import sys\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\n\ndef main():\n    for _ in range(II()):\n        s = SI()\n        cur = 0\n        fir = [0] * len(s)\n        for (i, c) in enumerate(s):\n            if c == '+':\n                cur += 1\n            else:\n                cur -= 1\n            if cur < 0 and fir[cur] == 0:\n                fir[cur] = i + 1\n        print(sum(fir) + len(s))\nmain()", "for _ in range(int(input())):\n    s = input()\n    (r, v) = (0, 0)\n    for i in range(len(s)):\n        if s[i] == '+':\n            v += 1\n            r += 1\n            continue\n        if v != 0:\n            v -= 1\n            r += 1\n        else:\n            r += i + 2\n    print(r)", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    ans = n\n    t = 0\n    for i in range(n):\n        if s[i] == '-':\n            if t > 0:\n                t -= 1\n            else:\n                ans += i + 1\n        else:\n            t += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    s = list(input())\n    l = len(s)\n    curr = 0\n    ans = 0\n    for i in range(l):\n        if s[i] == '-':\n            if curr == 0:\n                ans += i + 1\n            else:\n                curr -= 1\n        else:\n            curr += 1\n    ans += l\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    (cur, mn, res) = (0, 0, len(s))\n    for i in range(len(s)):\n        cur += 1 if s[i] == '+' else -1\n        if cur < mn:\n            mn = cur\n            res += i + 1\n    print(res)", "for _ in range(int(input())):\n    s = input()\n    c = 0\n    ans = 0\n    for i in range(len(s)):\n        if s[i] == '-' and c == 0:\n            ans += i + 1\n        elif s[i] == '-' and c > 0:\n            c -= 1\n        elif s[i] == '+':\n            c += 1\n    print(ans + len(s))", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    answer = n\n    t = 0\n    for i in range(n):\n        if s[i] == '-':\n            if t > 0:\n                t -= 1\n            else:\n                answer += i + 1\n        else:\n            t += 1\n    print(answer)", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    answer = n\n    t = 0\n    for i in range(n):\n        if s[i] == '-':\n            if t > 0:\n                t -= 1\n            else:\n                answer += i + 1\n        else:\n            t += 1\n    print(answer)", "for i in range(int(input())):\n    s = input()\n    k = 0\n    res = 0\n    for i in range(len(s)):\n        if s[i] == '-':\n            if k == 0:\n                res = res + i + 2\n            else:\n                res = res + 1\n                k = k - 1\n        else:\n            res = res + 1\n            k = k + 1\n    print(res)", "for _ in range(int(input())):\n    s = input()\n    (cur, mn, res) = (0, 0, len(s))\n    for i in range(len(s)):\n        cur += 1 if s[i] == '+' else -1\n        if cur < mn:\n            mn = cur\n            res += i + 1\n    print(res)", "def solve(s):\n    res = 0\n    pending = 0\n    cur = 0\n    for i in range(len(s)):\n        cur += 1 if s[i] == '+' else -1\n        if cur + pending == -1:\n            res += i + 1\n            pending += 1\n    res += len(s)\n    print(res)\nt = int(input())\nfor i in range(t):\n    s = input()\n    solve(s)", "for _ in range(int(input())):\n    a = input()\n    cnt = 0\n    tot = 0\n    for i in range(len(a)):\n        if a[i] == '-':\n            tot -= 1\n        else:\n            tot += 1\n        if tot < 0:\n            tot = 0\n            cnt += i + 2\n        else:\n            cnt += 1\n    print(cnt)", "for _ in range(int(input())):\n    s = input()\n    (cur, mn, res) = (0, 0, len(s))\n    for i in range(len(s)):\n        cur += 1 if s[i] == '+' else -1\n        if cur < mn:\n            mn = cur\n            res += i + 1\n    print(res)", "for _ in range(int(input())):\n    x = 0\n    s = input()\n    p = 0\n    n = len(s)\n    for i in range(n):\n        if s[i] == '+':\n            p += 1\n        elif p > 0:\n            p -= 1\n        elif p == 0:\n            x += i + 1\n    print(x + n)", "def main():\n    t = int(input())\n    for _ in range(t):\n        s = input()\n        prev = 0\n        prefix = [0] * len(s)\n        for (i, c) in enumerate(s):\n            if c == '+':\n                prefix[i] = max(prev + 1, 1)\n            else:\n                prefix[i] = prev - 1\n            prev = prefix[i]\n        result = 0\n        for (i, p) in enumerate(prefix):\n            if p < 0:\n                result += i + 1\n        result += len(s)\n        print(result)\nmain()", "t = int(input())\nfor _ in range(t):\n    L = list(input())\n    res = 0\n    count = 0\n    for n in range(len(L)):\n        if L[n] == '-':\n            if count == 0:\n                res += n + 2\n            else:\n                res += 1\n                count -= 1\n        else:\n            res += 1\n            count += 1\n    print(res)", "for _ in range(int(input())):\n    s = input()\n    st = []\n    n = len(s)\n    cur = 0\n    res = 0\n    for i in range(n):\n        if s[i] == '+':\n            cur += 1\n            st.append(s[i])\n        else:\n            cur += 1\n            if st:\n                st.pop()\n            else:\n                res += cur\n    print(res + cur)", "import math\nt = int(input(''))\nwhile t > 0:\n    s = list(input(''))\n    plus_count = 0\n    flag = 0\n    base = len(s)\n    ans = 0\n    paths = []\n    count = 0\n    for j in range(0, len(s), 1):\n        if s[j] == '-':\n            if count == 0:\n                paths.append(j + 1)\n            elif count > 0:\n                count -= 1\n        else:\n            count += 1\n    ans = sum(paths) + base\n    print(ans)\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    s = list(input())\n    l = len(s)\n    curr = 0\n    ans = 0\n    for i in range(l):\n        if s[i] == '-':\n            if curr == 0:\n                ans += i + 1\n            else:\n                curr -= 1\n        else:\n            curr += 1\n    ans += l\n    print(ans)", "for _ in range(int(input())):\n    s = list(input())\n    l = len(s)\n    curr = 0\n    ans = 0\n    for i in range(l):\n        if s[i] == '-':\n            if curr == 0:\n                ans += i + 1\n            else:\n                curr -= 1\n        else:\n            curr += 1\n    ans += l\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    abtk = 0\n    ans = 0\n    a = 0\n    for i in s:\n        if i == '-':\n            if abtk == 0:\n                ans += a + 1\n            else:\n                abtk -= 1\n        else:\n            abtk += 1\n        a += 1\n    ans += len(s)\n    print(ans)", "for i in range(int(input())):\n    s = input()\n    l = res = len(s)\n    t = 0\n    for j in range(l):\n        if s[j] == '-':\n            if t > 0:\n                t -= 1\n            else:\n                res += j + 1\n        else:\n            t += 1\n    print(res)", "for i in range(int(input())):\n    s = list(input())\n    res = 0\n    counter = 0\n    for i in range(len(s)):\n        if s[i] == '+':\n            res = res + 1\n            counter = counter + 1\n        elif counter > 0:\n            res = res + 1\n            counter = counter - 1\n        else:\n            res = res + i + 2\n    print(res)", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    answer = n\n    t = 0\n    for i in range(n):\n        if s[i] == '-':\n            if t > 0:\n                t -= 1\n            else:\n                answer += i + 1\n        else:\n            t += 1\n    print(answer)", "n = int(input())\nfor _ in range(n):\n    s = input()\n    l = len(s)\n    res = l\n    t = 0\n    for i in range(l):\n        if s[i] == '-':\n            if t <= 0:\n                res += i + 1\n            else:\n                t -= 1\n        else:\n            t += 1\n    print(res)", "for _ in range(int(input())):\n    s = input()\n    (cur, mn, res) = (0, 0, len(s))\n    for i in range(len(s)):\n        cur += 1 if s[i] == '+' else -1\n        if cur < mn:\n            mn = cur\n            res += i + 1\n    print(res)", "for _ in range(int(input())):\n    s = input()\n    (cur, mn, res) = (0, 0, len(s))\n    for i in range(len(s)):\n        cur += 1 if s[i] == '+' else -1\n        if cur < mn:\n            mn = cur\n            res += i + 1\n    print(res)", "for _ in range(int(input())):\n    s = input()\n    (cur, mn, res) = (0, 0, len(s))\n    for i in range(len(s)):\n        cur += 1 if s[i] == '+' else -1\n        if cur < mn:\n            mn = cur\n            res += i + 1\n    print(res)", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    sum_ = 0\n    mn = 0\n    ans = 0\n    for i in range(n):\n        sum_ += 1 if s[i] == '+' else -1\n        if sum_ < mn:\n            mn = sum_\n            ans += i + 1\n    ans += n\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    l = [+(c == '+') for c in s]\n    n = len(s)\n    c = 0\n    ans = 0\n    for i in range(len(l)):\n        if l[i]:\n            c += 1\n        elif c:\n            c -= 1\n        else:\n            ans += i + 1\n    print(ans + n)", "for t in range(int(input())):\n    s = input().strip()\n    cur = 0\n    ans = len(s)\n    for i in range(len(s)):\n        if s[i] == '+':\n            cur += 1\n        else:\n            cur -= 1\n        if cur < 0:\n            ans += i + 1\n            cur = 0\n    print(ans)", "for _ in range(int(input())):\n    (res, temp) = (0, 0)\n    for i in range(len((s := input()))):\n        (res, temp) = (res + 1, temp + 1) if s[i] == '+' else (res + 1, temp - 1) if temp > 0 else (res + 2 + i, temp)\n    print(res)", "for t in range(int(input())):\n    s = input()\n    (cur, mn, res) = (0, 0, len(s))\n    for i in range(len(s)):\n        cur += 1 if s[i] == '+' else -1\n        if cur < mn:\n            mn = cur\n            res += i + 1\n    print(res)", "t = int(input())\nfor _ in range(t):\n    s = list(input())\n    l = len(s)\n    curr = 0\n    ans = 0\n    for i in range(l):\n        if s[i] == '-':\n            if curr == 0:\n                ans += i + 1\n            else:\n                curr -= 1\n        else:\n            curr += 1\n    ans += l\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    s = list(input())\n    l = len(s)\n    curr = 0\n    ans = 0\n    for i in range(l):\n        if s[i] == '-':\n            if curr == 0:\n                ans += i + 1\n            else:\n                curr -= 1\n        else:\n            curr += 1\n    ans += l\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    s = list(input())\n    l = len(s)\n    curr = 0\n    ans = 0\n    for i in range(l):\n        if s[i] == '-':\n            if curr == 0:\n                ans += i + 1\n            else:\n                curr -= 1\n        else:\n            curr += 1\n    ans += l\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    s = list(input())\n    l = len(s)\n    curr = 0\n    ans = 0\n    for i in range(l):\n        if s[i] == '-':\n            if curr == 0:\n                ans += i + 1\n            else:\n                curr -= 1\n        else:\n            curr += 1\n    ans += l\n    print(ans)", "T = int(input())\nfor t in range(T):\n    s = list(input())\n    l = len(s)\n    cur = 0\n    ans = 0\n    for i in range(l):\n        if s[i] == '+':\n            cur += 1\n        elif cur == 0:\n            ans += i + 1\n        else:\n            cur -= 1\n    ans += l\n    print(ans)", "n = int(input())\nfor _ in range(n):\n    s = input()\n    l = len(s)\n    res = l\n    t = 0\n    for i in range(l):\n        if s[i] == '-':\n            if t <= 0:\n                res += i + 1\n            else:\n                t -= 1\n        else:\n            t += 1\n    print(res)", "for _ in range(int(input())):\n    s = input()\n    (cur, mn, res) = (0, 0, len(s))\n    for i in range(len(s)):\n        cur += 1 if s[i] == '+' else -1\n        if cur < mn:\n            mn = cur\n            res += i + 1\n    print(res)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    s = input()\n    ans = 0\n    cur = 0\n    for i in range(len(s)):\n        if s[i] == '+':\n            cur += 1\n        else:\n            cur -= 1\n        if cur < 0:\n            cur += 1\n            ans += i + 1\n    print(ans + len(s))", "for t in range(int(input())):\n    s = input()\n    (cur, mn, res) = (0, 0, len(s))\n    for i in range(len(s)):\n        cur += 1 if s[i] == '+' else -1\n        if cur < mn:\n            mn = cur\n            res += i + 1\n    print(res)", "for _ in range(int(input())):\n    s = input()\n    (cur, mn, res) = (0, 0, len(s))\n    for i in range(len(s)):\n        cur += 1 if s[i] == '+' else -1\n        if cur < mn:\n            mn = cur\n            res += i + 1\n    print(res)", "def res(s):\n    pos = 0\n    neg = 0\n    count = 0\n    ret = 0\n    ind = 0\n    for c in s:\n        ind += 1\n        if c == '+':\n            pos += 1\n        else:\n            neg += 1\n        count += 1\n        if neg > pos:\n            ret += count\n            pos += 1\n        if ind == len(s) and neg <= pos:\n            ret += count\n    return ret\nfor _ in range(int(input())):\n    print(res(input()))", "t = int(input())\nfor i in range(t):\n    s = input()\n    cur = 0\n    res = 0\n    for i in range(len(s)):\n        if s[i] == '+':\n            cur += 1\n        else:\n            cur -= 1\n        if cur < 0:\n            res += i + 1\n            cur = 0\n    else:\n        print(res + len(s))", "for _ in range(int(input())):\n    s = input()\n    (cur, mn, res) = (0, 0, len(s))\n    for i in range(len(s)):\n        cur += 1 if s[i] == '+' else -1\n        if cur < mn:\n            mn = cur\n            res += i + 1\n    print(res)", "import sys\n\ndef fi():\n    return sys.stdin.readline()\nfor _ in range(int(fi())):\n    s = fi().strip('\\n')\n    counter = 0\n    ans = 0\n    for i in range(len(s)):\n        if s[i] == '-':\n            counter -= 1\n        else:\n            counter += 1\n        if counter < 0:\n            ans += i + 1\n            counter = 0\n    ans += len(s)\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    (cur, mn, res) = (0, 0, len(s))\n    for i in range(len(s)):\n        cur += 1 if s[i] == '+' else -1\n        if cur < mn:\n            mn = cur\n            res += i + 1\n    print(res)", "for _ in range(int(input())):\n    s = str(input())\n    c = 0\n    ans = 0\n    for i in range(len(s)):\n        if s[i] == '+':\n            c += 1\n        else:\n            c -= 1\n            if c < 0:\n                ans += i + 1\n                c = 0\n    if c >= 0:\n        ans += len(s)\n    print(ans)", "t = int(input())\nfor k in range(t):\n    s = input()\n    plus = s.count('+')\n    minus = s.count('-')\n    x = plus - minus\n    sum = 0\n    ans = 0\n    for i in range(len(s)):\n        if s[i] == '+':\n            sum += 1\n        else:\n            sum -= 1\n        if sum < 0:\n            sum = 0\n            ans += i + 1\n    print(ans + len(s))", "from collections import Counter\ncases = int(input())\nfor t in range(cases):\n    s = input()\n    check = 0\n    counter = 1\n    res = 0\n    for i in s:\n        if i == '-':\n            check -= 1\n        else:\n            check += 1\n        if check == -1:\n            res += counter\n            check = 0\n        counter += 1\n    res += counter - 1\n    print(res)", "for _ in range(int(input())):\n    str = input()\n    qi = out = 0\n    for i in range(len(str)):\n        if str[i] == '+':\n            qi += 1\n        else:\n            qi -= 1\n        if qi < 0:\n            out += i + 1\n            qi = 0\n    print(out + len(str))", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    cur = 0\n    res = 0\n    for i in range(n):\n        if s[i] == '+':\n            cur += 1\n        else:\n            cur -= 1\n        if cur < 0:\n            res = res + i + 1\n            cur = 0\n    print(res + n)", "for _ in range(int(input())):\n    str = input()\n    qi = out = 0\n    for i in range(len(str)):\n        if str[i] == '+':\n            qi += 1\n        else:\n            qi -= 1\n        if qi < 0:\n            out += i + 1\n            qi = 0\n    print(out + len(str))", "for _ in range(int(input())):\n    r = input()\n    s = out = 0\n    for i in range(len(r)):\n        if r[i] == '+':\n            s += 1\n        else:\n            s -= 1\n        if s < 0:\n            out += i + 1\n            s = 0\n    print(out + len(r))", "n = int(input())\nfor i in range(n):\n    s = input()\n    c = 0\n    ans = 0\n    for k in range(len(s)):\n        if s[k] == '+':\n            c += 1\n        else:\n            c -= 1\n        if c < 0:\n            c = 0\n            ans += k + 1\n    print(ans + len(s))", "for _ in range(int(input())):\n    s = input()\n    res = 0\n    val = 0\n    init = 0\n    for (x, i) in zip(s, range(1, len(s) + 1)):\n        if x == '+':\n            val += 1\n        elif x == '-':\n            val -= 1\n        if val < 0:\n            res += i\n            val = 0\n    res += len(s)\n    print(res)", "t = int(input())\nwhile t:\n    t -= 1\n    s = input()\n    ans = 0\n    buf = 0\n    for i in range(len(s)):\n        if s[i] == '-' and buf > 0:\n            buf -= 1\n        elif s[i] == '-':\n            ans += i + 1\n        else:\n            buf += 1\n    print(ans + len(s))", "t = int(input())\nfor i in range(t):\n    s = input()\n    cur = 0\n    res = 0\n    for i in range(len(s)):\n        if s[i] == '+':\n            cur += 1\n        else:\n            cur -= 1\n        if cur < 0:\n            res += i + 1\n            cur = 0\n    else:\n        print(res + len(s))", "for _ in range(int(input())):\n    s = input()\n    (cur, mn, res) = (0, 0, len(s))\n    for i in range(len(s)):\n        cur += 1 if s[i] == '+' else -1\n        if cur < mn:\n            cur = 0\n            res += i + 1\n    print(res)", "for _ in range(int(input())):\n    s = input()\n    (cur, mn, res) = (0, 0, len(s))\n    for i in range(len(s)):\n        cur += 1 if s[i] == '+' else -1\n        if cur < mn:\n            mn = cur\n            res += i + 1\n    print(res)", "kk = int(input())\nwhile kk:\n    li = list(input())\n    q = w = 0\n    kk -= 1\n    for i in range(len(li)):\n        if li[i] == '+':\n            q += 1\n        else:\n            q -= 1\n        if q < 0:\n            w += i + 1\n            q += 1\n    print(w + len(li))", "for _ in range(int(input())):\n    s = input()\n    (cur, mn, res) = (0, 0, len(s))\n    for i in range(len(s)):\n        cur += 1 if s[i] == '+' else -1\n        if cur < mn:\n            mn = cur\n            res += i + 1\n    print(res)"]