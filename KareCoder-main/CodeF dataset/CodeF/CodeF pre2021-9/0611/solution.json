["import sys\ninp = sys.stdin.readline\n\ndef input():\n    return inp().strip()\nflush = sys.stdout.flush\n\ndef iin():\n    return int(input())\n\ndef lin():\n    return list(map(int, input().split()))\n\ndef main():\n    (n, m, p) = lin()\n    a = lin()\n    b = lin()\n    ans = 0\n    for (i, j) in enumerate(a):\n        if j % p != 0:\n            ans += i\n            break\n    for (i, j) in enumerate(b):\n        if j % p != 0:\n            ans += i\n            break\n    print(ans)\nmain()", "import sys\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\n\ndef main():\n    (n, m, p) = MI()\n    aa = LI()\n    bb = LI()\n    for (i, a) in enumerate(aa):\n        if a % p:\n            break\n    for (j, b) in enumerate(bb):\n        if b % p:\n            break\n    print(i + j)\nmain()", "import math, sys\nfrom collections import Counter, defaultdict, deque\nfrom sys import stdin, stdout\ninput = stdin.readline\nli = lambda : list(map(int, input().split()))\n\ndef case():\n    (n, m, p) = li()\n    a = li()\n    b = li()\n    (x, y) = (-1, -1)\n    for i in range(n):\n        if a[i] % p != 0:\n            x = i\n            break\n    for i in range(m):\n        if b[i] % p != 0:\n            y = i\n            break\n    print(x + y)\nfor _ in range(1):\n    case()", "import bisect\nimport heapq\nimport math\nimport random\nimport sys\nfrom collections import Counter, defaultdict, deque\nfrom decimal import ROUND_CEILING, ROUND_HALF_UP, Decimal\nfrom functools import lru_cache, reduce\nfrom itertools import combinations, combinations_with_replacement, product, permutations\nfrom operator import add, mul, sub\nsys.setrecursionlimit(100000)\ninput = sys.stdin.readline\nINF = 2 ** 62 - 1\n\ndef read_int():\n    return int(input())\n\ndef read_int_n():\n    return map(int, input().split())\n\ndef read_float():\n    return float(input())\n\ndef read_float_n():\n    return list(map(float, input().split()))\n\ndef read_str():\n    return input().strip()\n\ndef read_str_n():\n    return list(map(str, input().split()))\n\ndef error_print(*args):\n    print(*args, file=sys.stderr)\n\ndef mt(f):\n    import time\n\n    def wrap(*args, **kwargs):\n        s = time.time()\n        ret = f(*args, **kwargs)\n        e = time.time()\n        error_print(e - s, 'sec')\n        return ret\n    return wrap\n\n@mt\ndef slv(N, M, P, A, B):\n    for (i, a) in enumerate(A):\n        if a % P != 0:\n            break\n    andi = i\n    for (i, b) in enumerate(B):\n        if b % P != 0:\n            break\n    bndi = i\n    error_print(andi, bndi)\n    return andi + bndi\n\ndef main():\n    (N, M, P) = read_int_n()\n    A = read_int_n()\n    B = read_int_n()\n    print(slv(N, M, P, A, B))\nmain()", "def main_function():\n    (n, m, p) = list(map(int, input().split(' ')))\n    first_sequence = list(map(int, input().split(' ')))\n    second_sequence = list(map(int, input().split(' ')))\n    coefficient = 0\n    for i in range(len(first_sequence)):\n        if first_sequence[i] % p != 0:\n            coefficient = i\n            break\n    for i in range(len(second_sequence)):\n        if second_sequence[i] % p != 0:\n            coefficient += i\n            break\n    return coefficient\nprint(main_function())", "from sys import stdin, stdout\n\ndef main():\n    (n, m, p) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    for i in range(n):\n        if a[i] % p != 0:\n            ind1 = i\n            break\n    for i in range(m):\n        if b[i] % p != 0:\n            ind2 = i\n            break\n    print(ind1 + ind2)\nmain()", "(n, m, p) = map(int, input().split())\na = map(int, input().split())\nb = map(int, input().split())\n\ndef f(arr):\n    for (i, x) in enumerate(arr):\n        if x % p != 0:\n            return i\nprint(f(a) + f(b))", "import bisect\nimport heapq\nimport math\nimport random\nimport sys\nfrom collections import Counter, defaultdict, deque\nfrom decimal import ROUND_CEILING, ROUND_HALF_UP, Decimal\nfrom functools import lru_cache, reduce\nfrom itertools import combinations, combinations_with_replacement, product, permutations\nfrom operator import add, mul, sub\nsys.setrecursionlimit(100000)\ninput = sys.stdin.readline\nINF = 2 ** 62 - 1\n\ndef read_int():\n    return int(input())\n\ndef read_int_n():\n    return list(map(int, input().split()))\n\ndef read_float():\n    return float(input())\n\ndef read_float_n():\n    return list(map(float, input().split()))\n\ndef read_str():\n    return input().strip()\n\ndef read_str_n():\n    return list(map(str, input().split()))\n\ndef error_print(*args):\n    print(*args, file=sys.stderr)\n\ndef mt(f):\n    import time\n\n    def wrap(*args, **kwargs):\n        s = time.time()\n        ret = f(*args, **kwargs)\n        e = time.time()\n        error_print(e - s, 'sec')\n        return ret\n    return wrap\n\n@mt\ndef slv(N, M, P, A, B):\n    for (i, a) in enumerate(A):\n        if a % P != 0:\n            break\n    andi = i\n    for (i, b) in enumerate(B):\n        if b % P != 0:\n            break\n    bndi = i\n    error_print(andi, bndi)\n    return andi + bndi\n\ndef main():\n    (N, M, P) = read_int_n()\n    A = read_int_n()\n    B = read_int_n()\n    print(slv(N, M, P, A, B))\nmain()", "from sys import stdin, stdout\nimport math, sys\nfrom itertools import permutations, combinations\nfrom collections import defaultdict, deque, OrderedDict\nimport bisect as bi\nimport heapq\n\ndef I():\n    return int(input())\n\ndef In():\n    return map(int, input().split())\n\ndef main():\n    try:\n        (n, m, p) = In()\n        a = list(In())\n        b = list(In())\n        for x in range(n):\n            if a[x] % p != 0:\n                break\n        for y in range(m):\n            if b[y] % p != 0:\n                break\n        print(x + y)\n    except:\n        pass\nM = 998244353\nP = 1000000007\nmain()", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    (N, M, P) = [int(x) for x in input().split()]\n    A = [int(x) for x in input().split()]\n    B = [int(x) for x in input().split()]\n    ans = 0\n    for (i, a) in enumerate(A):\n        if a % P != 0:\n            ans = i\n            break\n    for (i, b) in enumerate(B):\n        if b % P != 0:\n            ans += i\n            break\n    print(ans)\nmain()", "import sys\n(n, m, p) = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\n\ndef get(x):\n    for (i, e) in enumerate(x):\n        if e % p:\n            return i\nprint(get(a) + get(b))", "import sys\n\ndef input():\n    return sys.stdin.readline()[:-1]\n(n, m, p) = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\n\ndef get(x):\n    for (i, e) in enumerate(x):\n        if e % p:\n            return i\nprint(get(a) + get(b))", "(n, m, p) = map(int, input().split())\nf = list(map(int, input().split()))\ng = list(map(int, input().split()))\nan = 0\nan2 = 0\nfor i in range(n):\n    if f[i] % p != 0:\n        an = i\n        break\nfor i in range(m):\n    if g[i] % p != 0:\n        an2 = i\n        break\nprint(an + an2)", "def main():\n    (n, m, p) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    i = 0\n    j = 0\n    for k in range(n):\n        if a[k] % p != 0:\n            i = k\n            break\n    for k in range(m):\n        if b[k] % p != 0:\n            j = k\n            break\n    ans = i + j\n    print(ans)\nmain()", "import sys\n(n, m, p) = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\n\ndef get(x):\n    for (i, e) in enumerate(x):\n        if e % p:\n            return i\nprint(get(a) + get(b))", "(n, m, p) = map(int, input().split())\nP = list(map(int, input().split()))\nQ = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    if P[i] % p:\n        ans += i\n        break\nfor i in range(m):\n    if Q[i] % p:\n        ans += i\n        break\nprint(ans)", "from math import ceil, sqrt, gcd, log, floor\nfrom collections import deque\n\ndef ii():\n    return int(input())\n\ndef si():\n    return input()\n\ndef mi():\n    return map(int, input().strip().split(' '))\n\ndef li():\n    return list(mi())\n\ndef msi():\n    return map(str, input().strip().split(' '))\n\ndef lsi():\n    return list(msi())\n(n, m, p) = mi()\na = li()\nb = li()\nfor i in range(n):\n    if gcd(a[i], p) == 1:\n        x = i\n        break\nfor i in range(m):\n    if gcd(b[i], p) == 1:\n        y = i\n        break\nprint(x + y)", "(n, m, p) = map(int, input().split())\nf = list(map(int, input().split()))\ng = list(map(int, input().split()))\n(fi, gi) = (0, 0)\nfor i in range(n):\n    if f[i] % p:\n        fi = i\n        break\nfor i in range(m):\n    if g[i] % p:\n        gi = i\n        break\nprint(fi + gi)", "def ii():\n    return int(input())\n\ndef mii():\n    return map(int, input().split())\n\ndef lmii():\n    return list(mii())\n\ndef main():\n    (x, y, m) = mii()\n    a = lmii()\n    b = lmii()\n    ans1 = ans2 = -1\n    for i in range(x):\n        if a[i] % m != 0 and ans1 == -1:\n            ans1 = i\n    for i in range(y):\n        if b[i] % m != 0 and ans2 == -1:\n            ans2 = i\n    print(ans2 + ans1)\nmain()", "import math\n(n, m, p) = map(int, input().split())\narr = list(map(int, input().split()))\nbrr = list(map(int, input().split()))\nans = 0\nfor i in range(len(arr)):\n    if arr[i] % p:\n        ans = i\n        break\nfor i in range(len(brr)):\n    if brr[i] % p:\n        ans += i\n        break\nprint(ans)", "import sys\n\ndef f():\n    (n, m, p) = [int(s) for s in input().split()]\n    A = [int(s) for s in sys.stdin.readline().split()]\n    B = [int(s) for s in sys.stdin.readline().split()]\n    i = 0\n    while not A[i] % p:\n        i += 1\n    j = 0\n    while not B[j] % p:\n        j += 1\n    s = i + j\n    print(s)\nf()", "(m, n, p) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nk1 = 0\nk2 = 0\nfor i in range(len(a)):\n    if a[i] % p != 0:\n        k1 = i\n        break\nfor i in range(len(b)):\n    if b[i] % p != 0:\n        k2 = i\n        break\nprint(k1 + k2)", "import sys\nimport math\nimport itertools\n(n, m, p) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nida = 0\nidb = 0\nfor i in range(n):\n    if a[i] % p != 0:\n        ida = i\n        break\nfor i in range(m):\n    if b[i] % p != 0:\n        idb = i\n        break\nprint(ida + idb)", "import sys\n(n, m, p) = map(int, sys.stdin.readline().split())\na = list(map(int, sys.stdin.readline().split()))\nb = list(map(int, sys.stdin.readline().split()))\nfor i in range(n):\n    if a[i] % p != 0:\n        temp1 = i\n        break\nfor j in range(m):\n    if b[j] % p != 0:\n        temp2 = j\n        break\nprint(temp1 + temp2)", "(n, m, p) = map(int, input().split())\nf_x = list(map(int, input().split()))\ng_x = list(map(int, input().split()))\nfor i in range(n):\n    if f_x[i] % p != 0:\n        a = i\n        break\nfor i in range(m):\n    if g_x[i] % p != 0:\n        b = i\n        break\nprint(a + b)", "(n, m, k) = map(int, input().split())\nls = list(map(int, input().split()))\narr = list(map(int, input().split()))\nfor i in range(len(ls)):\n    if ls[i] % k != 0:\n        x = i\n        break\nfor j in range(len(arr)):\n    if arr[j] % k != 0:\n        y = j\n        break\nprint(x + y)", "(n, m, p) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nfor i in range(n):\n    if a[i] % p != 0:\n        break\nfor j in range(m):\n    if b[j] % p != 0:\n        break\nprint(i + j)", "(n, m, p) = map(int, input().split())\narr_1 = list(map(int, input().split()))\narr_2 = list(map(int, input().split()))\nfor i in range(n):\n    if arr_1[i] % p != 0:\n        d1 = i\n        break\nfor j in range(m):\n    if arr_2[j] % p != 0:\n        d2 = j\n        break\nprint(d1 + d2)", "t = list(map(int, input().split(' ')))\np = int(t[2])\na = list(map(int, input().split(' ')))\nb = list(map(int, input().split(' ')))\nans = 0\nt = 0\nfor i in a:\n    if i % p != 0:\n        ans += t\n        break\n    t += 1\nt = 0\nfor i in b:\n    if i % p != 0:\n        ans += t\n        break\n    t += 1\nprint('%d' % ans)", "from sys import stdin\nlines = stdin.readlines()\n(n, m, p) = map(int, lines[0].strip().split())\na = list(map(int, lines[1].strip().split()))\nb = list(map(int, lines[2].strip().split()))\n(ta, tb) = (-1, -1)\nfor i in range(n):\n    if a[i] % p != 0:\n        ta = i\n        break\nfor j in range(m):\n    if b[j] % p != 0:\n        tb = j\n        break\nprint(ta + tb)", "(n, m, p) = map(int, input().strip().split())\n(a, b) = [list(map(int, input().strip().split())) for i in range(2)]\n(s1, s2) = (0, 0)\nfor i in range(n):\n    if a[i] % p:\n        s1 = i\n        break\nfor i in range(m):\n    if b[i] % p:\n        s2 = i\n        break\nprint(s1 + s2)", "from sys import stdin\ninput = stdin.readline\n(n, m, p) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ni = j = 0\nfor i in range(n):\n    if a[i] % p != 0:\n        break\nfor j in range(m):\n    if b[j] % p != 0:\n        break\nprint(i + j)", "(n, m, p) = map(int, input().split())\nf = tuple(map(int, input().split()))\ng = tuple(map(int, input().split()))\nfor i in range(n):\n    if f[i] % p != 0:\n        ind1 = i\n        break\nfor i in range(m):\n    if g[i] % p != 0:\n        ind2 = i\n        break\nprint(ind1 + ind2)", "(n, m, p) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nfor i in range(n):\n    if a[i] % p != 0:\n        break\nfor j in range(m):\n    if b[j] % p != 0:\n        break\nprint(i + j)", "from math import *\n(n, m, p) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nk = a[0]\nr = b[0]\nfor i in range(n):\n    if a[i] % p != 0:\n        k = i\n        break\nfor i in range(m):\n    if b[i] % p != 0:\n        l = i\n        break\nprint(k + l)", "(n, m, p) = map(int, input().split())\nP = list(map(int, input().split()))\nQ = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    if P[i] % p:\n        ans += i\n        break\nfor i in range(m):\n    if Q[i] % p:\n        ans += i\n        break\nprint(ans)", "(n, m, p) = map(int, input().split())\nar1 = list(map(int, input().split()))\nar2 = list(map(int, input().split()))\n(p1, p2) = (0, 0)\nfor i in range(len(ar1)):\n    if ar1[i] % p != 0:\n        p1 = i\n        break\nfor i in range(len(ar2)):\n    if ar2[i] % p != 0:\n        p2 = i\n        break\nprint(p1 + p2)", "import sys\nimport math\nread = lambda : list(map(int, sys.stdin.readline().strip().split()))\n(n, m, p) = read()\na = read()\nb = read()\nx = -1\ny = -1\nfor i in range(n):\n    if a[i] % p != 0:\n        x = i\n        break\nfor i in range(m):\n    if b[i] % p != 0:\n        y = i\n        break\nprint(x + y)", "import sys\n\ndef rint():\n    return map(int, sys.stdin.readline().split())\n\ndef input():\n    return sys.stdin.readline().rstrip('\\n')\n\ndef oint():\n    return int(input())\n(n, m, p) = rint()\na = list(rint())\nb = list(rint())\nans = 0\nfor i in range(n):\n    if a[i] % p:\n        ans += i\n        break\nfor i in range(m):\n    if b[i] % p:\n        ans += i\n        break\nprint(ans)", "def R():\n    return map(int, input().split())\n\ndef I():\n    return int(input())\n\ndef S():\n    return str(input())\n\ndef L():\n    return list(R())\nfrom collections import Counter\nimport math\nimport sys\nfrom itertools import permutations\nimport bisect\n(n, m, p) = R()\na = L()\nb = L()\nfor i in range(n):\n    if a[i] % p != 0:\n        break\nfor j in range(m):\n    if b[j] % p != 0:\n        break\nprint(i + j)", "(n, m, p) = map(int, input().split())\nln = []\nln = list(map(int, input().split()))\nlm = []\nlm = list(map(int, input().split()))\na = 0\nb = 0\nfor i in range(0, len(ln)):\n    if ln[i] % p != 0:\n        a = i\n        break\nfor i in range(0, len(lm)):\n    if lm[i] % p != 0:\n        b = i\n        break\nprint(a + b)", "(n, m, p) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nfor i in range(n):\n    if a[i] % p != 0:\n        break\nfor j in range(m):\n    if b[j] % p != 0:\n        break\nprint(i + j)", "(n, m, p) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nai = 0\nbi = 0\nfor i in range(n):\n    if a[i] % p != 0:\n        ai = i\n        break\nfor i in range(m):\n    if b[i] % p != 0:\n        bi = i\n        break\nprint(ai + bi)", "import sys\nimport math\n\ndef alele():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef ilele():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef input():\n    return sys.stdin.readline().strip()\n(n, m, p) = ilele()\nc = 0\nA = alele()\nB = alele()\nfor i in range(n):\n    if A[i] % p != 0:\n        c += i\n        break\nfor i in range(m):\n    if B[i] % p != 0:\n        c += i\n        break\nprint(c)", "import sys\ninf = int(100000000.0)\n(n, m, p) = map(int, sys.stdin.readline().split())\nlis1 = list(map(int, sys.stdin.readline().split()))\nlis2 = list(map(int, sys.stdin.readline().split()))\nc1 = 0\nfor i in range(n):\n    if lis1[i] % p:\n        c1 = i\n        break\nc2 = 0\nfor i in range(m):\n    if lis2[i] % p:\n        c2 = i\n        break\nprint(c1 + c2)", "import sys\ninput = sys.stdin.readline\n(n, m, p) = map(int, input().split())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nfor i in range(n):\n    if A[i] % p != 0:\n        s = i\n        break\nfor i in range(m):\n    if B[i] % p != 0:\n        t = i\n        break\nprint(s + t)", "from sys import stdin\nreadline = stdin.readline\n(n, m, p) = map(int, readline().split())\ndata = map(int, readline().split())\ndatb = map(int, readline().split())\n(inda, indb) = (0, 0)\nfor x in data:\n    if x % p != 0:\n        break\n    inda = inda + 1\nfor x in datb:\n    if x % p != 0:\n        break\n    indb = indb + 1\nprint(indb + inda)", "(n, m, p) = map(int, input().split())\nar = list(map(int, input().split()))\nbr = list(map(int, input().split()))\nn1 = -1\nn2 = -1\nfor i in range(n):\n    if ar[i] % p != 0:\n        n1 = i\n        break\nfor i in range(m):\n    if br[i] % p != 0:\n        n2 = i\n        break\nprint(n1 + n2)", "from sys import stdin\n(n, m, p) = map(int, input().split())\narr = list(map(int, input().strip().split()))[:n]\narr1 = list(map(int, input().strip().split()))[:m]\narr2 = [n + m]\nai = 0\nbi = 0\nfor i in range(n):\n    if arr[i] % p != 0:\n        ai = i\n        break\nfor j in range(m):\n    if arr1[j] % p != 0:\n        bi = j\n        break\nprint(ai + bi)", "(n, m, p) = map(int, input().split(' '))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ni = j = 0\nfor i in range(n):\n    if a[i] % p != 0:\n        fir = i\n        break\nfor i in range(m):\n    if b[i] % p != 0:\n        sec = i\n        break\nprint(fir + sec)", "R = lambda : list(map(int, input().split()))\n(n, m, p) = R()\n(a, b) = (R(), R())\ni = 0\nj = 0\nwhile a[i] % p == 0:\n    i += 1\nwhile b[j] % p == 0:\n    j += 1\nprint(i + j)", "import sys\ninput = sys.stdin.readline\n(n, m, p) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nfor i in range(n):\n    if a[i] % p != 0:\n        ap = i\n        break\nfor j in range(m):\n    if b[j] % p != 0:\n        bp = j\n        break\nprint(ap + bp)", "import sys\nimport bisect\nimport heapq\nfrom math import *\nfrom collections import defaultdict as dd\nfrom collections import deque\nfrom collections import Counter as c\nfrom itertools import combinations as comb\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\nmod = pow(10, 9) + 7\nmod2 = 998244353\n\ndef data():\n    return sys.stdin.readline().strip()\n\ndef out(var):\n    sys.stdout.write(var)\n\ndef l():\n    return list(map(int, data().split()))\n\ndef sl():\n    return list(map(str, data().split()))\n\ndef sp():\n    return map(int, data().split())\n\ndef ssp():\n    return map(str, data().split())\n\ndef l1d(n, val=0):\n    return [val for i in range(n)]\n\ndef l2d(n, m, val=0):\n    return [[val for i in range(n)] for j in range(m)]\n(n, m, p) = sp()\na = l()\nb = l()\nfor i in range(n):\n    if a[i] % p != 0:\n        break\nfor j in range(m):\n    if b[j] % p != 0:\n        break\nout(str(i + j))", "(n, m, p) = list(map(int, input().strip().split(' ')))\na = list(map(int, input().strip().split(' ')))\nb = list(map(int, input().strip().split(' ')))\nans = -1\nfor i in range(n):\n    if a[i] % p != 0:\n        ans = i\n        break\nfor i in range(m):\n    if b[i] % p != 0:\n        ans += i\n        break\nprint(ans)", "from sys import stdin\n\ndef func():\n    return\n(n, m, p) = map(int, stdin.readline().split())\narr1 = list(map(int, stdin.readline().split()))\narr2 = list(map(int, stdin.readline().split()))\n(a, b) = (0, 0)\nfor i in range(n):\n    if arr1[i] % p != 0:\n        a = i\n        break\nfor i in range(m):\n    if arr2[i] % p != 0:\n        b = i\n        break\nprint(a + b)", "from bisect import bisect_left, bisect_right, insort\nimport sys\nimport heapq\nfrom math import *\nfrom collections import defaultdict as dd\nfrom collections import deque\n\ndef data():\n    return sys.stdin.readline().strip()\n\ndef mdata():\n    return map(int, data().split())\n(n, m, p) = mdata()\na = list(mdata())\nb = list(mdata())\nfor i in range(min(n, m)):\n    if a[i] % p != 0 or b[i] % p != 0:\n        if a[i] % p != 0:\n            if b[i] % p != 0:\n                print(i + i)\n            else:\n                ind = 0\n                for j in range(i + 1, m):\n                    if b[j] % p != 0:\n                        ind = j\n                        break\n                print(i + ind)\n        else:\n            ind = 0\n            for j in range(i + 1, n):\n                if a[j] % p != 0:\n                    ind = j\n                    break\n            print(i + ind)\n        break", "import sys\nimport bisect\nimport heapq\nfrom math import *\nfrom collections import defaultdict as dd\nfrom collections import deque\nfrom collections import Counter as c\nfrom itertools import combinations as comb\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\nmod = pow(10, 9) + 7\nmod2 = 998244353\n\ndef data():\n    return sys.stdin.readline().strip()\n\ndef out(var):\n    sys.stdout.write(var)\n\ndef l():\n    return list(map(int, data().split()))\n\ndef sl():\n    return list(map(str, data().split()))\n\ndef sp():\n    return map(int, data().split())\n\ndef ssp():\n    return map(str, data().split())\n\ndef l1d(n, val=0):\n    return [val for i in range(n)]\n\ndef l2d(n, m, val=0):\n    return [[val for i in range(n)] for j in range(m)]\n(n, m, p) = sp()\na = l()\nb = l()\nfor i in range(n):\n    if a[i] % p != 0:\n        break\nfor j in range(m):\n    if b[j] % p != 0:\n        break\nout(str(i + j))", "(N, M, P) = map(int, input().split())\nX = list(map(int, input().split()))\nY = list(map(int, input().split()))\nfor (i, x) in enumerate(X):\n    if x % P != 0:\n        break\nfor (j, y) in enumerate(Y):\n    if y % P != 0:\n        break\nprint(i + j)", "(n, m, p) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ni = 0\nwhile a[i] % p == 0:\n    i += 1\nj = 0\nwhile b[j] % p == 0:\n    j += 1\nprint(i + j)", "(n, m, p) = map(int, input().split(' '))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ni = j = 0\nwhile a[i] % p == 0:\n    i += 1\nwhile b[j] % p == 0:\n    j += 1\nprint(i + j)", "(n, m, p) = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ni = j = 0\nwhile a[i] % p == 0:\n    i += 1\nwhile b[j] % p == 0:\n    j += 1\nprint(i + j)", "(n, m, p) = map(int, input().split(' '))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ni = j = 0\nwhile a[i] % p == 0:\n    i += 1\nwhile b[j] % p == 0:\n    j += 1\nprint(i + j)", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\n(N, M, P) = map(int, input().split())\nA = [int(a) for a in input().split()]\nB = [int(a) for a in input().split()]\nfor (i, a) in enumerate(A):\n    if a % P:\n        for (j, b) in enumerate(B):\n            if b % P:\n                print(i + j)\n                exit()", "from random import randint\nimport sys\n(n, m, p) = list(map(int, input().strip().split()))\nf = list(map(int, input().strip().split()))\ng = list(map(int, input().strip().split()))\nfor i in range(len(f)):\n    if f[i] % p != 0:\n        break\nj = 0\nwhile g[j] % p == 0:\n    j += 1\nprint(i + j)", "import math\nq = 1\nfor _ in range(q):\n    (n, m, p) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = -1\n    for i in range(n):\n        if a[i] % p != 0:\n            x = i\n            break\n    for i in range(m):\n        if b[i] % p != 0:\n            x += i\n            break\n    print(x)", "from bisect import bisect_left, bisect_right, insort\nimport sys\nimport heapq\nfrom math import *\nfrom collections import defaultdict as dd\nfrom collections import deque\n\ndef data():\n    return sys.stdin.readline().strip()\n\ndef mdata():\n    return map(int, data().split())\n(n, m, p) = mdata()\na = list(mdata())\nb = list(mdata())\nind1 = ind2 = 0\nfor i in range(n):\n    if a[i] % p != 0:\n        ind1 = i\n        break\nfor i in range(m):\n    if b[i] % p != 0:\n        ind2 = i\n        break\nprint(ind1 + ind2)", "(n, m, p) = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\nfor i in range(n):\n    if a[i] % p != 0:\n        ar = i\n        break\nfor i in range(m):\n    if b[i] % p != 0:\n        br = i\n        break\nprint(ar + br)", "R = lambda : list(map(int, input().split()))\n(n, m, p) = R()\n(a, b) = (R(), R())\ni = 0\nj = 0\nwhile a[i] % p == 0:\n    i += 1\nwhile b[j] % p == 0:\n    j += 1\nprint(i + j)", "(n, m, p) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ni = j = 0\nwhile a[i] % p == 0:\n    i += 1\nwhile b[j] % p == 0:\n    j += 1\nprint(i + j)", "R = lambda : list(map(int, input().split()))\n(n, m, p) = R()\n(a, b) = (R(), R())\ni = 0\nj = 0\nwhile a[i] % p == 0:\n    i += 1\nwhile b[j] % p == 0:\n    j += 1\nprint(i + j)", "R = lambda : list(map(int, input().split()))\n(n, m, p) = R()\n(a, b) = (R(), R())\ni = 0\nj = 0\nwhile a[i] % p == 0:\n    i += 1\nwhile b[j] % p == 0:\n    j += 1\nprint(i + j)", "(n, m, p) = map(int, input().split(' '))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ni = j = 0\nwhile a[i] % p == 0:\n    i += 1\nwhile b[j] % p == 0:\n    j += 1\nprint(i + j)", "(n, m, p) = map(int, input().split())\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\n(r, s) = (0, 0)\nfor i in range(n):\n    if a[i] % p != 0:\n        r = i\n        break\nfor i in range(m):\n    if b[i] % p != 0:\n        s = i\n        break\nprint(r + s)", "import sys\ninput = sys.stdin.readline\n(n, m, p) = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nai = 0\nbi = 0\nfor i in range(0, len(a)):\n    if a[i] % p != 0:\n        ai = i\n        break\nfor j in range(0, len(b)):\n    if b[j] % p != 0:\n        bi = j\n        break\nprint(ai + bi)", "(n, m, p) = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ni = 0\nwhile a[i] % p == 0:\n    i += 1\na = i\ni = 0\nwhile b[i] % p == 0:\n    i += 1\nb = i\nprint(a + b)", "(n, m, p) = map(int, input().split())\naa = [int(i) % p for i in input().split()]\nbb = [int(i) % p for i in input().split()]\n(aaa, bbb) = (-1, -1)\nfor i in range(0, n):\n    if aa[i]:\n        aaa = i\n        break\nfor i in range(0, m):\n    if bb[i]:\n        bbb = i\n        break\nprint(aaa + bbb)", "R = lambda : list(map(int, input().split()))\n(n, m, p) = R()\n(a, b) = (R(), R())\ni = 0\nj = 0\nwhile a[i] % p == 0:\n    i += 1\nwhile b[j] % p == 0:\n    j += 1\nprint(i + j)", "import sys\nl = [int(index) for index in sys.stdin.readline().split()]\n(n, m, p) = (l[0], l[1], l[2])\na = [int(index) for index in sys.stdin.readline().split()]\nb = [int(index) for index in sys.stdin.readline().split()]\nans = 0\nfor i in range(len(a)):\n    if a[i] % p != 0:\n        ans += i\n        break\nfor i in range(len(b)):\n    if b[i] % p != 0:\n        ans += i\n        break\nsys.stdout.write(str(ans))", "(n, m, p) = map(int, input().split(' '))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ni = j = 0\nwhile a[i] % p == 0:\n    i += 1\nwhile b[j] % p == 0:\n    j += 1\nprint(i + j)", "import sys\n(n, m, p) = map(int, sys.stdin.readline().split(' '))\na = list(map(int, sys.stdin.readline().split()))\nb = list(map(int, sys.stdin.readline().split()))\ni = j = 0\nwhile a[i] % p == 0:\n    i += 1\nwhile b[j] % p == 0:\n    j += 1\nprint(i + j)", "import sys\n\ndef neo():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef neo1():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef input():\n    return sys.stdin.readline().strip()\n(n, m, p) = neo1()\n(A, B) = (neo(), neo())\ni = 0\nj = 0\nwhile A[i] % p == 0:\n    i += 1\nwhile B[j] % p == 0:\n    j += 1\nprint(i + j)", "I = input\n(n, m, p) = map(int, I().split())\na = list(map(int, I().split()))\nb = list(map(int, I().split()))\ni = 0\nwhile a[i] % p == 0:\n    i += 1\na = i\ni = 0\nwhile b[i] % p == 0:\n    i += 1\nb = i\nprint(a + b)", "import sys\n\ndef input():\n    return sys.stdin.readline().strip()\n(n, m, p) = map(int, input().split())\ni = 0\nfor v in map(int, input().split()):\n    if v % p != 0:\n        break\n    i += 1\nfor v in map(int, input().split()):\n    if v % p != 0:\n        break\n    i += 1\nprint(i)", "(n, m, p) = map(int, input().split())\nA = [int(i) % p == 0 for i in input().split()]\nB = [int(i) % p == 0 for i in input().split()]\nfor (i, a) in enumerate(A):\n    if not a:\n        ans = i\n        break\nfor (i, b) in enumerate(B):\n    if not b:\n        ans += i\n        break\nprint(ans)", "(a, b, p) = map(int, input().split())\n\ndef k(x):\n    return bool(int(x) % p)\n(x, y) = (list(map(k, input().split())), list(map(k, input().split())))\nprint(x.index(True) + y.index(True))", "(n, m, p) = map(int, input().split())\nc1 = 0\nfor i in input().split():\n    if int(i) % p != 0:\n        break\n    c1 += 1\nc2 = 0\nfor j in input().split():\n    if int(j) % p != 0:\n        break\n    c2 += 1\nprint(c1 + c2)", "R = lambda : list(map(int, input().split()))\n(n, m, p) = R()\n(a, b) = (R(), R())\ni = 0\nwhile a[i] % p == 0:\n    i += 1\nj = 0\nwhile b[j] % p == 0:\n    j += 1\nprint(i + j)"]