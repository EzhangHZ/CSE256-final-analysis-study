["def main():\n    (n, k) = map(int, input().split())\n    pp = [int(a) - 1 for a in input().split()]\n    chainhead = [True] * n\n    follower = [None] * n\n    for _ in range(k):\n        (x, y) = map(int, input().split())\n        if follower[x - 1]:\n            print(0)\n            return\n        else:\n            follower[x - 1] = y - 1\n            chainhead[y - 1] = False\n    chain = list(range(n))\n    cd = [0] * n\n    for i in range(n):\n        if chainhead[i]:\n            f = follower[i]\n            d = 1\n            while f != None:\n                cd[f] = d\n                d += 1\n                chain[f] = i\n                f = follower[f]\n    chainparents = [[] for _ in range(n)]\n    ccount = [0] * n\n    for i in range(n):\n        if pp[i] != -1:\n            if chain[i] != chain[pp[i]]:\n                chainparents[chain[i]].append(chain[pp[i]])\n                ccount[chain[pp[i]]] += 1\n            elif cd[pp[i]] > cd[i]:\n                print(0)\n                return\n    s = [i for i in range(n) if chainhead[i] and ccount[i] == 0]\n    l = []\n    res = []\n    while s:\n        v = s.pop()\n        l.append(v)\n        for p in chainparents[v]:\n            ccount[p] -= 1\n            if ccount[p] == 0:\n                s.append(p)\n    if any((ccount[i] != 0 for i in range(n))):\n        print(0)\n        return\n    for h in l[::-1]:\n        c = h\n        while c != None:\n            res.append(c + 1)\n            c = follower[c]\n    print(' '.join(map(str, res)))\nmain()"]