["z = int(input())\nfor i in range(z):\n    odd = [0, 0, 0]\n    even = [0, 0, 0]\n    y = input()\n    ans = 0\n    for ll in range(len(y)):\n        ans += 1\n        if ll & 1 == 0:\n            if y[ll] == '?':\n                even[1] += 1\n            elif y[ll] == '1':\n                even[0] += 1\n        elif y[ll] == '?':\n            odd[1] += 1\n        elif y[ll] == '1':\n            odd[0] += 1\n        if odd[0] + odd[1] - even[0] >= 3 and ll >= 5:\n            break\n        elif even[0] + even[1] - odd[0] >= 3 and ll >= 5:\n            break\n        if odd[0] + odd[1] - even[0] >= 2 and ll >= 6:\n            break\n        elif even[0] + even[1] - odd[0] >= 2 and ll >= 7:\n            break\n    if ans == 10:\n        if y[-1] == '1':\n            odd[0] -= 1\n        elif y[-1] == '?':\n            odd[1] -= 1\n        if odd[0] + odd[1] - even[0] > 0:\n            print(9)\n        else:\n            print(10)\n    else:\n        print(ans)", "import math, sys\ninput = sys.stdin.readline\nS = lambda : input().rstrip()\nI = lambda : int(S())\nM = lambda : map(int, S().split())\nL = lambda : list(M())\nmod1 = 1000000007\nmod2 = 998244353\nfor _ in range(I()):\n    s = list(S())\n    a = 0\n    b = 0\n    ra = 5\n    rb = 5\n    even = 0\n    odd = 0\n    ans = 10\n    flag = 1\n    for i in range(10):\n        if i % 2 == 0:\n            ra -= 1\n            if s[i] == '1':\n                a += 1\n            elif s[i] == '?':\n                even += 1\n        else:\n            rb -= 1\n            if s[i] == '1':\n                b += 1\n            elif s[i] == '?':\n                odd += 1\n        if a + even - b > rb or b + odd - a > ra:\n            print(i + 1)\n            flag = 0\n            break\n    if flag:\n        print(ans)", "import sys\n\ndef get_ints():\n    return list(map(int, sys.stdin.readline().strip().split()))\nsys.setrecursionlimit(20000)\nT = int(input())\nfor i in range(T):\n    s = sys.stdin.readline()\n    team1_max_lead = 0\n    team2_max_lead = 0\n    for i in range(1, 10 + 1):\n        if i % 2 == 1:\n            if s[i - 1] == '1':\n                team1_max_lead += 1\n                team2_max_lead -= 1\n            elif s[i - 1] == '0':\n                pass\n            else:\n                team1_max_lead += 1\n            if team1_max_lead > (10 - i) // 2 + 1 or team2_max_lead > (10 - i) // 2:\n                print(i)\n                break\n        else:\n            if s[i - 1] == '1':\n                team2_max_lead += 1\n                team1_max_lead -= 1\n            elif s[i - 1] == '0':\n                pass\n            else:\n                team2_max_lead += 1\n            if team1_max_lead > (10 - i) / 2 or team2_max_lead > (10 - i) / 2:\n                print(i)\n                break\n        if i == 10:\n            print(10)", "for i in range(int(input())):\n    s = input()\n    a = b = c1 = c2 = 0\n    for i in range(10):\n        if s[i] == '1':\n            if i % 2:\n                b += 1\n            else:\n                a += 1\n        elif s[i] == '?':\n            if i % 2:\n                c2 += 1\n            else:\n                c1 += 1\n        if b + (9 - i) - (9 - i) // 2 < a + c1 or a + (9 - i) // 2 < b + c2:\n            print(i + 1)\n            break\n    else:\n        print(10)", "for s in [*open(0)][1:]:\n    p = q = i = 0\n    j = 1\n    while i < 10 and p < 13 - i >> 1 and (q < 12 - i >> 1):\n        p += j * (s[i] in '1' + (i % 2 ^ 1) * '?')\n        q -= j * (s[i] in '1' + i % 2 * '?')\n        i += 1\n        j = -j\n    print(i)", "def penalty(array):\n    array = list(array)\n    a_1s = 0\n    a_qs = 0\n    a__s = 5\n    b_1s = 0\n    b_qs = 0\n    b__s = 5\n    for x in range(0, 10):\n        if x % 2 == 0:\n            if array[x] == '1':\n                a_1s += 1\n            elif array[x] == '?':\n                a_qs += 1\n            a__s -= 1\n        else:\n            if array[x] == '1':\n                b_1s += 1\n            elif array[x] == '?':\n                b_qs += 1\n            b__s -= 1\n        if a_1s + a_qs > b_1s + b__s or b_1s + b_qs > a_1s + a__s:\n            return x + 1\n    return 10\nt = int(input())\nfor _ in range(t):\n    l = input()\n    print(penalty(l))", "f = lambda : j * (s[i] in '1' + '?' * j)\nfor s in [*open(0)][1:]:\n    a = b = i = 0\n    j = 1\n    while (i < 10) * (a < 13 - i >> 1) * (b < 12 - i >> 1):\n        a += f()\n        j = -j\n        b += f()\n        i += 1\n    print(i)", "import sys\nimport math\ninput = sys.stdin.readline\nimp = 'IMPOSSIBLE'\nt = int(input())\nfor test in range(t):\n    r = input()\n    j = 0\n    d = 0\n    jm = 0\n    dm = 0\n    je = 5\n    de = 5\n    res = 10\n    for i in range(10):\n        if i % 2 == 0:\n            je -= 1\n        else:\n            de -= 1\n        if r[i] == '1':\n            if i % 2 == 0:\n                j += 1\n            else:\n                d += 1\n        elif r[i] == '?':\n            if i % 2 == 0:\n                jm += 1\n            else:\n                dm += 1\n        if j + jm > d + de:\n            res = i + 1\n            break\n        if d + dm > j + je:\n            res = i + 1\n            break\n    print(res)", "for _ in range(int(input())):\n    s = input()\n    shot1 = 0\n    shot2 = 0\n    f1 = s[::2]\n    f2 = s[1::2]\n    f11 = f1[:3]\n    f21 = f2[:3]\n    if '0' not in f11 and '1' not in f21 or ('1' not in f11 and '0' not in f21):\n        print(6)\n        continue\n    f11 = f1[:4]\n    f21 = f2[:3]\n    if f11.count('1') + f11.count('?') > f21.count('1') + 2 or f21.count('1') + f21.count('?') > f11.count('1') + 1:\n        print(7)\n        continue\n    f11 = f1[:4]\n    f21 = f2[:4]\n    if f11.count('1') + f11.count('?') > f21.count('1') + 1 or f21.count('1') + f21.count('?') > f11.count('1') + 1:\n        print(8)\n        continue\n    f11 = f1[:5]\n    f21 = f2[:4]\n    if f11.count('1') + f11.count('?') > f21.count('1') + 1 or f21.count('1') + f21.count('?') > f11.count('1'):\n        print(9)\n        continue\n    print(10)", "for s in [*open(0)][1:]:\n    a = b = i = 0\n    j = 1\n    while i < 10 and (11 - i) // 2 >= a and ((10 - i) // 2 >= b):\n        a += j * (s[i] in '1' + (i % 2 ^ 1) * '?')\n        b -= j * (s[i] in '1' + i % 2 * '?')\n        i += 1\n        j = -j\n    print(i)", "for s in [*open(0)][1:]:\n    a = b = i = 0\n    j = 1\n    while i < 10 and a < 13 - i >> 1 and (b < 12 - i >> 1):\n        a += j * (s[i] in '1' + (i % 2 ^ 1) * '?')\n        b -= j * (s[i] in '1' + i % 2 * '?')\n        i += 1\n        j = -j\n    print(i)", "f = lambda : j * (s[i] in '1' + '?' * j)\nfor s in [*open(0)][1:]:\n    a = b = i = 0\n    j = 1\n    while (i < 10) * (a < 13 - i >> 1) * (b < 12 - i >> 1):\n        a += f()\n        j = -j\n        b += f()\n        i += 1\n    print(i)", "def winner(game_state, winner_team):\n    win = 0\n    los = 0\n    no_of_los = 0\n    av_los = 5\n    for j_win in range(len(game_state)):\n        if j_win % 2 == winner_team - 1:\n            if game_state[j_win] == '1' or game_state[j_win] == '?':\n                win = win + 1\n        else:\n            if game_state[j_win] == '1':\n                los = los + 1\n            elif game_state[j_win] == '0' or game_state[j_win] == '?':\n                no_of_los = no_of_los + 1\n            av_los = 5 - (los + no_of_los)\n        abc = win - los\n        if abc > av_los:\n            end_point = j_win + 1\n            break\n    else:\n        end_point = j_win + 1\n    return end_point\n\ndef main():\n    n = int(input(''))\n    lis = [''] * n\n    lis_a = [0] * n\n    for i in range(n):\n        lis[i] = lis[i] + input('')\n    for i in range(len(lis)):\n        end_point1 = winner(lis[i], 1)\n        end_point2 = winner(lis[i], 2)\n        if end_point1 < end_point2:\n            print(end_point1)\n        else:\n            print(end_point2)\nmain()", "def fun(r, rr):\n    ct = 0\n    cm = 0\n    i = 0\n    m = 0\n    vb = 10\n    ii = 0\n    for t in range(10):\n        if t % 2 == 0:\n            ii += 1\n            q = a[t]\n            if a[t] == '?':\n                q = r\n            cm += int(q)\n            m += 1\n            nb = 5 - ii + cm\n            if cm > vb or ct > nb:\n                break\n        else:\n            i += 1\n            q = a[t]\n            if a[t] == '?':\n                q = rr\n            ct += int(q)\n            vb = 5 - i + ct\n            m += 1\n            if vb < cm or ct > nb:\n                break\n    return m\nfor _ in range(int(input())):\n    a = input()\n    e = fun(1, 0)\n    ee = fun(0, 1)\n    print(min(e, ee))", "for tc in range(int(input())):\n    s = input()\n    (p1, p2) = (20, 20)\n    (p1win, p2win) = (0, 0)\n    for i in range(10):\n        if i % 2 == 0:\n            if s[i] == '1' or s[i] == '?':\n                p1win += 1\n        elif s[i] == '1':\n            p2win += 1\n        if p1win > p2win + (10 - i) // 2:\n            p1 = i + 1\n            break\n    (p1win, p2win) = (0, 0)\n    for i in range(10):\n        if i % 2 == 0:\n            if s[i] == '1':\n                p1win += 1\n        elif s[i] == '1' or s[i] == '?':\n            p2win += 1\n        p1pos = p1win + (10 - i) // 2 - (i % 2 == 0)\n        if p2win > p1pos:\n            p2 = i + 1\n            break\n    if p1 == p2 and p1 == 20:\n        print(10)\n    else:\n        print(min(p1, p2))", "n = int(input())\nfor i in range(n):\n    s = input()\n    a = 0\n    b = 0\n    a1 = 0\n    b1 = 0\n    for i in range(len(s)):\n        if i % 2 == 0 and (s[i] == '?' or s[i] == '1'):\n            a += 1\n        if i % 2 == 0 and s[i] == '1':\n            a1 += 1\n        if i % 2 != 0 and (s[i] == '?' or s[i] == '1'):\n            b += 1\n        if i % 2 != 0 and s[i] == '1':\n            b1 += 1\n        if a - b1 > 5 - (i + 1) // 2 or b - a1 > 5 - (i + 2) // 2:\n            print(i + 1)\n            break\n    else:\n        print(10)", "T = int(input())\n\ndef splits(string):\n    return [char for char in string]\nfor j in range(T):\n    kicks = splits(input())\n    goal_1 = 0\n    goal_2 = 0\n    answer_1 = 10\n    answer_2 = 10\n    for i in range(len(kicks)):\n        if i % 2 == 0:\n            if kicks[i] == '1':\n                goal_1 += 1\n            if kicks[i] == '?':\n                goal_1 += 1\n        elif kicks[i] == '1':\n            goal_2 += 1\n        if goal_1 - goal_2 > (10 - i) // 2 or goal_2 - goal_1 > (9 - i) // 2:\n            answer_1 = i + 1\n            break\n    goal_1 = 0\n    goal_2 = 0\n    for i in range(len(kicks)):\n        if i % 2 == 0:\n            if kicks[i] == '1':\n                goal_1 += 1\n        else:\n            if kicks[i] == '1':\n                goal_2 += 1\n            if kicks[i] == '?':\n                goal_2 += 1\n        if goal_1 - goal_2 > (10 - i) // 2 or goal_2 - goal_1 > (9 - i) // 2:\n            answer_2 = i + 1\n            break\n    print(min(answer_1, answer_2))", "t = int(input())\n\ndef can_stop(first_score, second_score, num_kicks):\n    if second_score < first_score and num_kicks % 2 == 1:\n        return abs(first_score - (second_score + 1)) > (10 - num_kicks) // 2\n    return abs(first_score - second_score) > (10 - num_kicks) // 2\nfor i in range(t):\n    s = input()\n    first_score = 0\n    second_score = 0\n    first_case = 1\n    while first_case < 10:\n        if first_case % 2 == 1 and s[first_case - 1] != '0':\n            first_score += 1\n        elif first_case % 2 == 0 and s[first_case - 1] == '1':\n            second_score += 1\n        if can_stop(first_score, second_score, first_case):\n            break\n        first_case += 1\n    first_score = 0\n    second_score = 0\n    second_case = 1\n    while second_case < 10:\n        if second_case % 2 == 1 and s[second_case - 1] == '1':\n            first_score += 1\n        elif second_case % 2 == 0 and s[second_case - 1] != '0':\n            second_score += 1\n        if can_stop(first_score, second_score, second_case):\n            break\n        second_case += 1\n    print(min(first_case, second_case))", "for _ in range(int(input())):\n    s = input()\n    ans = 9\n    (ans1, ans2) = (0, 0)\n    for i in range(10):\n        if i % 2 == 0:\n            if s[i] != '0':\n                ans1 += 1\n        elif s[i] == '1':\n            ans2 += 1\n        if ans1 > ans2 + (10 - i) // 2:\n            ans = min(ans, i)\n        if ans2 > ans1 + (9 - i) // 2:\n            ans = min(ans, i)\n    (ans1, ans2) = (0, 0)\n    for i in range(10):\n        if i % 2 == 1:\n            if s[i] != '0':\n                ans2 += 1\n        elif s[i] == '1':\n            ans1 += 1\n        if ans1 > ans2 + (10 - i) // 2:\n            ans = min(ans, i)\n        if ans2 > ans1 + (9 - i) // 2:\n            ans = min(ans, i)\n    print(ans + 1)", "for s in [*open(0)][1:]:\n    p = q = i = 0\n    j = 1\n    while i < 10 and p < 13 - i >> 1 and (q < 12 - i >> 1):\n        p += j * (s[i] in '1' + (i % 2 ^ 1) * '?')\n        q -= j * (s[i] in '1' + i % 2 * '?')\n        i += 1\n        j = -j\n    print(i)", "def f():\n    T = int(input())\n    for _ in range(T):\n        s = input()\n        idx = solve(s)\n        print(idx + 1)\n\ndef solve(s):\n    n = len(s)\n    (A_min, A_max) = (0, 0)\n    (B_min, B_max) = (0, 0)\n    for i in range(n):\n        c = 0\n        try:\n            c = int(s[i])\n        except:\n            pass\n        if i % 2 == 0:\n            A_min += c\n            if s[i] == '?':\n                A_max += 1\n            else:\n                A_max += c\n        else:\n            B_min += c\n            if s[i] == '?':\n                B_max += 1\n            else:\n                B_max += c\n        A_remain = 5 - (i + 2) // 2\n        B_remain = 5 - (i + 1) // 2\n        if A_max > B_min + B_remain:\n            return i\n        if B_max > A_min + A_remain:\n            return i\n    return 9\nf()", "def solve_test(s):\n    variants = set()\n    new_s = ''.join((c if c != '?' else '1' if i % 2 == 1 else '0' for (i, c) in enumerate(s, 1)))\n    variants.add(new_s)\n    new_s = ''.join((c if c != '?' else '0' if i % 2 == 1 else '1' for (i, c) in enumerate(s, 1)))\n    variants.add(new_s)\n    result = 10\n    for s in variants:\n        scores = [0, 0]\n        left = [5, 5]\n        for (i, c) in enumerate(s):\n            pl = i % 2\n            left[pl] -= 1\n            if c == '1':\n                scores[pl] += 1\n            if scores[0] > scores[1] + left[1] or scores[1] > scores[0] + left[0]:\n                result = min(result, i + 1)\n                break\n    return result\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        s = input()\n        print(solve_test(s))\nmain()", "for _ in range(int(input())):\n    s = input()\n    p1 = 0\n    p2 = 0\n    r1 = 5\n    r2 = 5\n    d1 = 0\n    d2 = 0\n    flag = 0\n    for i in range(10):\n        if i % 2 == 0:\n            if s[i] == '1':\n                p1 += 1\n            elif s[i] == '?':\n                d1 += 1\n            r1 -= 1\n            if p1 + d1 > p2 + r2 or p2 + d2 > p1 + r1:\n                print(i + 1)\n                flag = 1\n                break\n        else:\n            if s[i] == '1':\n                p2 += 1\n            elif s[i] == '?':\n                d2 += 1\n            r2 -= 1\n            if p1 + d1 > p2 + r2 or p2 + d2 > p1 + r1:\n                print(i + 1)\n                flag = 1\n                break\n    if not flag:\n        print(10)", "for _ in range(int(input())):\n    s = input()\n    a = 0\n    b = 0\n    ra = 5\n    rb = 5\n    ca = 0\n    cb = 0\n    ans = 10\n    for i in range(10):\n        if i % 2 == 0:\n            ra -= 1\n            if s[i] == '1':\n                a += 1\n            elif s[i] == '?':\n                ca += 1\n        else:\n            rb -= 1\n            if s[i] == '1':\n                b += 1\n            elif s[i] == '?':\n                cb += 1\n        if ca + a - b > rb or cb + b - a > ra:\n            ans = i + 1\n            break\n    print(ans)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    s = input().strip()\n    a = 0\n    b = 0\n    for i in range(10):\n        if i % 2 == 0:\n            if s[i] == '1':\n                a += 1\n            elif s[i] == '0':\n                pass\n            else:\n                a += 1\n        elif s[i] == '1':\n            b += 1\n        elif s[i] == '0':\n            pass\n        else:\n            pass\n        if 5 - (i + 1) // 2 < a - b:\n            break\n    an = i\n    a = 0\n    b = 0\n    for i in range(10):\n        if i % 2 == 0:\n            if s[i] == '1':\n                a += 1\n            elif s[i] == '0':\n                pass\n            else:\n                a += 0\n        elif s[i] == '1':\n            b += 1\n        elif s[i] == '0':\n            pass\n        else:\n            b += 1\n        if 5 - (i + 2) // 2 < b - a:\n            break\n    an = min(an, i)\n    print(an + 1)", "def solve():\n    s = input()\n    left = [5, 5]\n    diff = 0\n    for (i, a) in enumerate(s):\n        team = i & 1\n        left[team] -= 1\n        if a == '?':\n            left[not team] -= 1\n        elif a == '1':\n            diff += (-1) ** team\n        for winner in (0, 1):\n            if diff * (-1) ** winner > left[not winner]:\n                return i + 1\n    return 10\nt = int(input())\nfor __ in range(t):\n    print(solve())", "def decide(p1, p2, q1, q2, k1, k2):\n    return p1 + q1 > k2 + p2 or p2 + q2 > k1 + p1\n\ndef process(s):\n    p1 = 0\n    p2 = 0\n    q1 = 0\n    q2 = 0\n    k1 = 2\n    k2 = 2\n    for i in range(6):\n        if i % 2 == 0:\n            if s[i] == '1':\n                p1 += 1\n            elif s[i] == '?':\n                q1 += 1\n        elif s[i] == '1':\n            p2 += 1\n        elif s[i] == '?':\n            q2 += 1\n    if decide(p1, p2, q1, q2, k1, k2):\n        return 6\n    for i in range(6, 10):\n        if i % 2 == 0:\n            k1 -= 1\n            if s[i] == '1':\n                p1 += 1\n            elif s[i] == '?':\n                q1 += 1\n        else:\n            k2 -= 1\n            if s[i] == '1':\n                p2 += 1\n            elif s[i] == '?':\n                q2 += 1\n        if decide(p1, p2, q1, q2, k1, k2):\n            return i + 1\n    return 10\nt = int(input())\nfor i in range(t):\n    s = input()\n    print(process(s))", "import sys\nimport math\nmod = 10 ** 9 + 7\nLI = lambda : [int(k) for k in input().split()]\ninput = lambda : sys.stdin.readline().rstrip()\nIN = lambda : int(input())\nS = lambda : input()\nr = range\nfor t in r(IN()):\n    s = S()\n    t1 = 0\n    t2 = 0\n    t1n = 0\n    t1x = 0\n    t2n = 0\n    t2x = 0\n    for i in range(1, 11):\n        t1l = 5 - (i + 1) // 2\n        t2l = 5 - i // 2\n        if i % 2:\n            if s[i - 1] == '1':\n                t1n += 1\n                t1x += 1\n            elif s[i - 1] == '?':\n                t1x += 1\n        elif s[i - 1] == '1':\n            t2n += 1\n            t2x += 1\n        elif s[i - 1] == '?':\n            t2x += 1\n        if t2x > t1n + t1l:\n            print(i)\n            break\n        elif t1x > t2n + t2l:\n            print(i)\n            break\n    else:\n        print(10)", "def solve():\n    s = input()\n    odd = 0\n    cnt = 0\n    even = 0\n    cnt1 = 0\n    ok = 0\n    i = 0\n    for i in range(len(s)):\n        if i % 2 == 0:\n            if s[i] == '1':\n                even += 1\n            elif s[i] == '?':\n                cnt += 1\n        elif s[i] == '1':\n            odd += 1\n        elif s[i] == '?':\n            cnt1 += 1\n        if odd + cnt1 > even + (9 - i) / 2:\n            return i + 1\n            ok = 1\n        if even + cnt > odd + (10 - i) / 2:\n            return i + 1\n            ok = 1\n    if not ok:\n        return i + 1\nfor i in range(int(input())):\n    print(solve())", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    score = input().strip()\n    minA = maxA = minB = maxB = 0\n    ans = 10\n    for i in range(10):\n        if i % 2:\n            if score[i] == '1':\n                minB += 1\n                maxB += 1\n            elif score[i] == '?':\n                maxB += 1\n        elif score[i] == '1':\n            minA += 1\n            maxA += 1\n        elif score[i] == '?':\n            maxA += 1\n        chanceA = 4 - i // 2\n        chanceB = 4 - (i - 1) // 2\n        if maxA > minB + chanceB or maxB > minA + chanceA:\n            ans = i + 1\n            break\n    print(ans)", "def solve(s1):\n    (m, o) = (0, 0)\n    ans = 10\n    for (i, it) in enumerate(s1):\n        if i % 2:\n            if s1[i] == '1':\n                o += 1\n        elif s1[i] != '0':\n            m += 1\n        left = 10 - i - 1\n        (m1, o1) = (left // 2, (left + 1) // 2)\n        if m > o + o1:\n            ans = min(ans, i + 1)\n            break\n    (m, o) = (0, 0)\n    for (i, it) in enumerate(s1):\n        if i % 2:\n            if s1[i] != '0':\n                o += 1\n        elif s1[i] == '1':\n            m += 1\n        left = 10 - i - 1\n        (m1, o1) = (left // 2, (left + 1) // 2)\n        if m + m1 < o:\n            ans = min(ans, i + 1)\n            break\n    return ans\nfor case in range(int(input())):\n    s1 = input()\n    ans = solve(s1)\n    print(ans)", "def solve(s):\n    s1 = s.copy()\n    s2 = s.copy()\n    first = 0\n    second = 0\n    (ans1, ans2) = (-1, -1)\n    (p1, p2) = (5, 5)\n    for i in range(10):\n        if i % 2 == 0:\n            if s[i] == '?':\n                s1[i] = '1'\n                s2[i] = '0'\n        elif s[i] == '?':\n            s1[i] = '0'\n            s2[i] = '1'\n    for i in range(10):\n        if i % 2 == 0:\n            p1 -= 1\n            if s1[i] == '1':\n                first += 1\n        else:\n            p2 -= 1\n            if s1[i] == '1':\n                second += 1\n        if p2 + second < first:\n            ans1 = i + 1\n            break\n        if p1 + first < second:\n            ans1 = i + 1\n            break\n    first = 0\n    second = 0\n    (p1, p2) = (5, 5)\n    for i in range(10):\n        if i % 2 == 0:\n            p1 -= 1\n            if s2[i] == '1':\n                first += 1\n        else:\n            p2 -= 1\n            if s2[i] == '1':\n                second += 1\n        if p2 + second < first:\n            ans2 = i + 1\n            break\n        if p1 + first < second:\n            ans2 = i + 1\n            break\n    if ans1 == -1:\n        ans1 = 10\n    if ans2 == -1:\n        ans2 = 10\n    return min(ans1, ans2)\nfor _ in range(int(input())):\n    s = list(input())\n    print(solve(s))", "for _ in range(int(input())):\n    s = input()\n    t1 = s[::2]\n    t2 = s[1::2]\n    c1 = 0\n    c2 = 0\n    r1 = 5\n    r2 = 5\n    a1 = -1\n    for i in range(5):\n        if t1[i] in '1?':\n            c1 += 1\n        r1 -= 1\n        if c1 > c2 + r2:\n            a1 = i * 2 + 1\n            break\n        if t2[i] == '1':\n            c2 += 1\n        r2 -= 1\n        if c1 > c2 + r2:\n            a1 = i * 2 + 2\n            break\n        if i == 4:\n            a1 = 10\n    c1 = 0\n    c2 = 0\n    r1 = 5\n    r2 = 5\n    a2 = -1\n    for i in range(5):\n        if t1[i] in '1':\n            c1 += 1\n        r1 -= 1\n        if c2 > c1 + r1:\n            a2 = i * 2 + 1\n            break\n        if t2[i] in '1?':\n            c2 += 1\n        r2 -= 1\n        if c2 > c1 + r1:\n            a2 = i * 2 + 2\n            break\n        if i == 4:\n            a2 = 10\n    print(min(a1, a2))", "def fun(s):\n    first = [0, 0]\n    second = [0, 0]\n    for i in range(1, 11):\n        if s[i - 1] == '1' and i % 2 != 0:\n            first[0] += 1\n            second[0] += 1\n        elif s[i - 1] == '1' and i % 2 == 0:\n            first[1] += 1\n            second[1] += 1\n        elif s[i - 1] == '?' and i % 2 != 0:\n            first[0] += 1\n        elif s[i - 1] == '?' and i % 2 == 0:\n            second[1] += 1\n        if (10 - i + 1) // 2 + first[1] < first[0]:\n            return i\n        if (10 - i) // 2 + second[0] < second[1]:\n            return i\n    return 10\nt = int(input())\nfor i in range(t):\n    s = input()\n    print(fun(s))", "t = int(input())\nwhile t > 0:\n    s = str(input())\n    s1 = s[0] + s[2] + s[4] + s[6] + s[8]\n    s2 = s[1] + s[3] + s[5] + s[7] + s[9]\n    s1a = [0, 0, 0, 0]\n    s2a = [0, 0, 0, 0]\n    f = 0\n    for i in range(5):\n        if s1a[3] > s2a[1] + 5 - i or s2a[3] > s1a[1] + 5 - i:\n            print(2 * i)\n            f = 1\n            break\n        if s1[i] == '0':\n            s1a[0] += 1\n        elif s1[i] == '1':\n            s1a[1] += 1\n        else:\n            s1a[2] += 1\n        s1a[3] = s1a[1] + s1a[2]\n        if s1a[3] > s2a[1] + 5 - i or s2a[3] > s1a[1] + 4 - i:\n            print(2 * i + 1)\n            f = 1\n            break\n        if s2[i] == '0':\n            s2a[0] += 1\n        elif s2[i] == '1':\n            s2a[1] += 1\n        else:\n            s2a[2] += 1\n        s2a[3] = s2a[1] + s2a[2]\n    if f == 0:\n        print(10)\n    t = t - 1", "for t in range(int(input())):\n    s = input()\n    (p, q) = (s[0::2], s[1::2])\n    (c, d, u1, u2) = (0, 0, 0, 0)\n    (r1, r2) = (5, 5)\n    for i in range(len(s)):\n        if s[i] == '1':\n            if i % 2 == 0:\n                c += 1\n            else:\n                d += 1\n        elif s[i] == '?':\n            if i % 2 == 0:\n                u1 += 1\n            else:\n                u2 += 1\n        if i % 2 == 0:\n            r1 -= 1\n        else:\n            r2 -= 1\n        if c + u1 > d + r2:\n            print(i + 1)\n            break\n        elif d + u2 > c + r1:\n            print(i + 1)\n            break\n    else:\n        print(10)", "import math\nmod = 1000000007\nfrom sys import stdin, stdout\nfor abcd in range(int(input())):\n    s = stdin.readline().strip('\\n')\n    x = y = a = b = 0\n    li = []\n    for i in range(10):\n        if i % 2 == 0:\n            if s[i] == '1':\n                x += 1\n            elif s[i] == '?':\n                a += 1\n        elif s[i] == '1':\n            y += 1\n        elif s[i] == '?':\n            b += 1\n        p = [x, y, a, b]\n        li.append(p)\n    y = 0\n    for i in range(5, 10):\n        if i % 2 == 0:\n            c = 1\n            d = 0\n        else:\n            c = 0\n            d = 1\n        if li[i][0] + li[i][2] > li[i][1] + (9 - i + c) // 2:\n            y = 1\n            break\n        if li[i][1] + li[i][-1] > li[i][0] + (9 - i + d) // 2:\n            y = 1\n            break\n    if y == 0:\n        print(10)\n        continue\n    print(i + 1)", "import sys\nInput = sys.stdin.readlines()\nOutput = ''\ntests = int(Input[0])\nfor t in range(tests):\n\n    def f(s):\n        (sa, sb, ca, cb) = (0, 0, 5, 5)\n        for i in range(10):\n            if i & 1:\n                sa += s[i]\n                ca -= 1\n            else:\n                sb += s[i]\n                cb -= 1\n            if sa + ca < sb or sb + cb < sa:\n                return i + 1\n        return 10\n    s = Input[t + 1].strip()\n    a = [1 if s[i] == '1' else 0 if s[i] == '0' else i & 1 for i in range(10)]\n    b = [1 if s[i] == '1' else 0 if s[i] == '0' else 1 ^ i & 1 for i in range(10)]\n    ans = min(f(a), f(b))\n    Output += str(ans) + '\\n'\nprint(Output)", "for s in [*open(0)][1:]:\n    a = b = i = 0\n    j = 1\n    while (i < 10) * (a < 13 - i >> 1) * (b < 12 - i >> 1):\n        a += j * (s[i] in '1' + (i % 2 ^ 1) * '?')\n        b -= j * (s[i] in '1' + i % 2 * '?')\n        i += 1\n        j = -j\n    print(i)", "for s in [*open(0)][1:]:\n    a = b = i = 0\n    j = 1\n    while (i < 10) * (a < 13 - i >> 1) * (b < 12 - i >> 1):\n        a += j * (s[i] in '1' + '?' * j)\n        b -= j * (s[i] in '1' + '?' * -j)\n        i += 1\n        j = -j\n    print(i)", "for s in [*open(0)][1:]:\n    a = b = i = 0\n    j = 1\n    while (i < 10) * (a < 13 - i >> 1) * (b < 12 - i >> 1):\n        a += j * (s[i] in '1' + '?' * j)\n        j = -j\n        b += j * (s[i] in '1' + '?' * j)\n        i += 1\n    print(i)", "for i in range(int(input())):\n    s = input()\n    a = b = c1 = c2 = 0\n    for i in range(10):\n        if s[i] == '1':\n            if i % 2:\n                b += 1\n            else:\n                a += 1\n        elif s[i] == '?':\n            if i % 2:\n                c2 += 1\n            else:\n                c1 += 1\n        if b + (9 - i) - (9 - i) // 2 < a + c1 or a + (9 - i) // 2 < b + c2:\n            print(i + 1)\n            break\n    else:\n        print(10)", "import math\nt = int(input())\nfor _ in range(t):\n    s = list(input())\n    counta = 0\n    countb = 0\n    lefta = 5\n    leftb = 5\n    ans = 10\n    for i in range(10):\n        if i % 2 == 0:\n            if s[i] == '1' or s[i] == '?':\n                counta += 1\n            lefta -= 1\n        else:\n            if s[i] == '1':\n                countb += 1\n            leftb -= 1\n        if counta - countb > leftb:\n            ans = min(ans, i + 1)\n    counta = 0\n    countb = 0\n    lefta = 5\n    leftb = 5\n    for i in range(10):\n        if i % 2 == 0:\n            if s[i] == '1':\n                counta += 1\n            lefta -= 1\n        else:\n            if s[i] == '1' or s[i] == '?':\n                countb += 1\n            leftb -= 1\n        if countb - counta > lefta:\n            ans = min(ans, i + 1)\n    print(ans)", "for u in range(int(input())):\n    s = input()\n    a = 0\n    b = 0\n    ans = 10\n    for i in range(len(s)):\n        if i % 2:\n            if s[i] != '0':\n                a += 1\n        elif s[i] == '1':\n            b += 1\n        res = 9 - i\n        if a - res // 2 > b:\n            ans = min(ans, i + 1)\n            break\n    a = 0\n    b = 0\n    for i in range(len(s)):\n        if i % 2 == 0:\n            if s[i] != '0':\n                b += 1\n        elif s[i] == '1':\n            a += 1\n        res = 9 - i\n        if b - (res + 1) // 2 > a:\n            ans = min(ans, i + 1)\n            break\n    print(ans)", "f = lambda : j * (s[i] in '1' + '?' * j)\nfor s in [*open(0)][1:]:\n    a = b = i = 0\n    j = 1\n    while (i < 10) & (a < 13 - i >> 1) & (b < 12 - i >> 1):\n        a += f()\n        j = -j\n        b += f()\n        i += 1\n    print(i)", "import sys\ninput = sys.stdin.readline\n\ndef S():\n    return input()\n\ndef I():\n    return int(S())\n\ndef M():\n    return map(int, S().split())\n\ndef L():\n    return list(M())\nt = int(input())\nfor p in range(t):\n    l = list(S())\n    (first_score, second_score, neutal) = (0, 0, 0)\n    chances1 = 5\n    chances2 = 5\n    ans = 10\n    for i in range(10):\n        if i % 2 == 0:\n            if l[i] == '?' or l[i] == '1':\n                first_score += 1\n            chances1 -= 1\n        else:\n            if l[i] == '1':\n                second_score += 1\n            chances2 -= 1\n        if first_score > chances2 + second_score:\n            ans = i + 1\n            break\n        if second_score > chances1 + first_score:\n            ans = i + 1\n            break\n    (first_score, second_score, neutal) = (0, 0, 0)\n    chances1 = 5\n    chances2 = 5\n    ans2 = 10\n    for i in range(10):\n        if i % 2 == 1:\n            if l[i] == '?' or l[i] == '1':\n                second_score += 1\n            chances2 -= 1\n        else:\n            if l[i] == '1':\n                first_score += 1\n            chances1 -= 1\n        if first_score > chances2 + second_score:\n            ans2 = i + 1\n            break\n        if second_score > chances1 + first_score:\n            ans2 = i + 1\n            break\n    print(min(ans, ans2))", "def test():\n    x = 10\n    s = input()\n    s = 'q' + s\n    a = 0\n    b = 0\n    for i in range(1, 11):\n        if i % 2 == 1:\n            if s[i] == '1' or s[i] == '?':\n                a += 1\n            if (10 - i + 1) // 2 + b < a:\n                x = min(x, i)\n        else:\n            if s[i] == '1':\n                b += 1\n            if (10 - i) // 2 + b < a:\n                x = min(x, i)\n    a = 0\n    b = 0\n    for i in range(1, 11):\n        if i % 2 == 1:\n            if s[i] == '1':\n                a += 1\n            if (10 - i) // 2 + a < b:\n                x = min(x, i)\n        else:\n            if s[i] == '1' or s[i] == '?':\n                b += 1\n            if (10 - i) // 2 + a < b:\n                x = min(x, i)\n    print(x)\nt = int(input())\nwhile t:\n    test()\n    t -= 1", "f = lambda : j * (s[i] in '1' + '?' * j)\nfor s in [*open(0)][1:]:\n    a = b = i = 0\n    j = 1\n    while (i < 10) * (a < 13 - i >> 1) * (b < 12 - i >> 1):\n        a += f()\n        j = -j\n        b += f()\n        i += 1\n    print(i)", "r = lambda : j * (s[i] in '1' + '?' * j)\nfor s in [*open(0)][1:]:\n    a = b = i = 0\n    j = 1\n    while (i < 10) * (a < 13 - i >> 1) * (b < 12 - i >> 1):\n        a += r()\n        j = -j\n        b += r()\n        i += 1\n    print(i)", "def min_penalty_balls(pred_res):\n    team_a_certain = 0\n    team_a_uncertain = 0\n    team_b_certain = 0\n    team_b_uncertain = 0\n    for (i, r) in enumerate(pred_res):\n        if i % 2 == 0:\n            if r == '1':\n                team_a_certain += 1\n            elif r == '?':\n                team_a_uncertain += 1\n        elif r == '1':\n            team_b_certain += 1\n        elif r == '?':\n            team_b_uncertain += 1\n        max_a = team_a_certain + team_a_uncertain\n        min_b = (10 - i) / 2 + team_b_certain\n        if max_a > min_b:\n            print(i + 1)\n            break\n        max_b = team_b_certain + team_b_uncertain\n        min_a = (9 - i) / 2 + team_a_certain\n        if max_b > min_a:\n            print(i + 1)\n            break\n        if i == 9:\n            print(10)\nt = int(input())\nfor _ in range(t):\n    min_penalty_balls(input())", "r = int(input().strip())\nfor _ in range(r):\n    var = ([0, 0, 5], [0, 0, 5])\n    s = input()\n    for (i, c) in enumerate(s):\n        t = i % 2\n        if c != '0':\n            var[t][0] += 1\n        if c == '1':\n            var[t][1] += 1\n        var[t][2] -= 1\n        if var[0][0] - var[1][1] > var[1][2] or var[1][0] - var[0][1] > var[0][2]:\n            print(i + 1)\n            break\n    else:\n        print(10)", "t = int(input())\npred_list = []\nfor i in range(t):\n    pred_list.append(input())\nfor pred in pred_list:\n    a_win = 0\n    b_win = 0\n    a_lose = 0\n    b_lose = 0\n    remain_a = 5\n    remain_b = 5\n    for (i, chance) in enumerate(pred):\n        if i % 2 == 0:\n            if chance == '1' or chance == '?':\n                a_win += 1\n        else:\n            remain_b -= 1\n            if chance == '1':\n                b_lose += 1\n        if a_win - b_lose > remain_b:\n            print(i + 1)\n            break\n        if i % 2 == 0:\n            remain_a -= 1\n            if chance == '1':\n                a_lose += 1\n        elif chance == '1' or chance == '?':\n            b_win += 1\n        if b_win - a_lose > remain_a:\n            print(i + 1)\n            break\n    else:\n        print(10)", "for i in range(int(input())):\n    s = input()\n    a = b = c1 = c2 = 0\n    for i in range(10):\n        if s[i] == '1':\n            if i % 2:\n                b += 1\n            else:\n                a += 1\n        elif s[i] == '?':\n            if i % 2:\n                c2 += 1\n            else:\n                c1 += 1\n        if b + (9 - i) - (9 - i) // 2 < a + c1 or a + (9 - i) // 2 < b + c2:\n            print(i + 1)\n            break\n    else:\n        print(10)", "t = int(input())\n\ndef solve():\n    s = list(input())\n    ans = 10\n    s1 = s.copy()\n    for i in range(10):\n        if s1[i] == '?':\n            if i % 2 == 0:\n                s1[i] = '1'\n            else:\n                s1[i] = '0'\n    team1 = 0\n    team2 = 0\n    rem = 5\n    for i in range(10):\n        if i % 2 == 0:\n            team1 += int(s1[i])\n        else:\n            team2 += int(s1[i])\n            rem -= 1\n        maxTeam2 = rem + team2\n        if team1 > maxTeam2:\n            ans = i + 1\n            break\n    s2 = s.copy()\n    for i in range(10):\n        if s2[i] == '?':\n            if i % 2 == 0:\n                s2[i] = '0'\n            else:\n                s2[i] = '1'\n    team1 = 0\n    team2 = 0\n    rem = 5\n    for i in range(10):\n        if i % 2 == 1:\n            team1 += int(s2[i])\n        else:\n            team2 += int(s2[i])\n            rem -= 1\n        if team1 > rem + team2:\n            ans = min(ans, i + 1)\n            break\n    print(ans)\nfor i in range(t):\n    solve()", "f = lambda : j * (s[i] in '1' + '?' * j)\nfor s in [*open(0)][1:]:\n    a = b = i = 0\n    j = 1\n    while (i < 10) * (a < 13 - i >> 1) * (b < 12 - i >> 1):\n        a += f()\n        j = -j\n        b += f()\n        i += 1\n    print(i)", "t = int(input())\ntestes = []\nfor i in range(t):\n    l = input()\n    testes.append(l)\nfor i in range(t):\n    ok = 0\n    gol_team1 = 0\n    gol_team2 = 0\n    team1_joker = 0\n    team2_joker = 0\n    for j in range(0, 6, 2):\n        if testes[i][j] == '1':\n            gol_team1 += 1\n        elif testes[i][j] == '?':\n            team1_joker += 1\n    for j in range(1, 6, 2):\n        if testes[i][j] == '1':\n            gol_team2 += 1\n        elif testes[i][j] == '?':\n            team2_joker += 1\n    for j in range(6, 10):\n        if gol_team2 + team2_joker - gol_team1 > (10 - j) // 2:\n            print(j)\n            ok = 1\n            break\n        if gol_team1 + team1_joker - gol_team2 > (11 - j) // 2:\n            print(j)\n            ok = 1\n            break\n        if j % 2 == 0:\n            if testes[i][j] == '1':\n                gol_team1 += 1\n            elif testes[i][j] == '?':\n                team1_joker += 1\n        elif testes[i][j] == '1':\n            gol_team2 += 1\n        elif testes[i][j] == '?':\n            team2_joker += 1\n    if ok == 0:\n        print(10)", "f = lambda : j * (s[i] in '1' + '?' * j)\nfor s in [*open(0)][1:]:\n    a = b = i = 0\n    j = 1\n    while (i < 10) * (a < 13 - i >> 1) * (b < 12 - i >> 1):\n        a += f()\n        j = -j\n        b += f()\n        i += 1\n    print(i)", "def solve(s):\n    a = 0\n    b = 0\n    ag = bg = 5\n    g = 0\n    at = bt = 0\n    while g < 10 and (a <= b + bg and b <= a + ag and (at <= bt + bg) and (bt <= at + ag)):\n        cg = s[g]\n        if g % 2 == 0:\n            ag -= 1\n        else:\n            bg -= 1\n        if cg == '1' and g % 2 == 0:\n            a += 1\n            at += 1\n        elif cg == '1' and g % 2 != 0:\n            b += 1\n            bt += 1\n        elif cg == '?' and g % 2 == 0:\n            a += 1\n            at += 0\n        elif cg == '?' and g % 2 != 0:\n            bt += 1\n            b += 0\n        g += 1\n    return g\nt = int(input())\nl = []\nfor _i in range(t):\n    st = input()\n    t = solve(st)\n    l.append(t)\nfor i in l:\n    print(i)", "import math\nt = int(input())\nfor i in range(t):\n    s = list(input())\n    (t1, t2) = (0, 0)\n    (c1, c2) = (5, 5)\n    (q1, q2) = (0, 0)\n    for j in range(10):\n        if j % 2 == 0:\n            if s[j] == '1':\n                t1 += 1\n            if s[j] == '?':\n                q1 += 1\n            c1 -= 1\n        else:\n            if s[j] == '1':\n                t2 += 1\n            if s[j] == '?':\n                q2 += 1\n            c2 -= 1\n        if j >= 5:\n            if t1 + q1 - t2 > c2:\n                break\n            elif t2 + q2 - t1 > c1:\n                break\n    print(j + 1)", "t = int(input())\nfor j in range(t):\n    ch = input()\n    (a, b, ai, bi, ap, bp) = (0, 0, 0, 0, 5, 5)\n    for i in range(10):\n        w = i\n        if i % 2 == 0:\n            ap -= 1\n        else:\n            bp -= 1\n        if ch[i] == '1':\n            if i % 2 == 0:\n                a += 1\n            else:\n                b += 1\n        elif ch[i] == '?':\n            if i % 2 == 0:\n                ai += 1\n            else:\n                bi += 1\n        if a + ai - b > bp:\n            break\n        if b + bi - a > ap:\n            break\n    print(w + 1)", "def penalty(pen: str):\n    len_pen = len(pen)\n    (sum_first, q_first) = (0, 0)\n    (sum_second, q_second) = (0, 0)\n    for i in range(len_pen):\n        if i % 2 == 0:\n            if pen[i] != '?':\n                sum_first += int(pen[i])\n            else:\n                q_first += 1\n        elif pen[i] != '?':\n            sum_second += int(pen[i])\n        else:\n            q_second += 1\n        if sum_first + q_first > len_pen // 2 - (1 + i) // 2 + sum_second or sum_second + q_second > (len_pen - 1 - i) // 2 + sum_first:\n            return i + 1\n    return len_pen\nn = int(input())\nfor i in range(n):\n    print(penalty(input()))", "for _ in range(int(input())):\n    m1 = 10\n    m2 = 10\n    pen = list(input())\n    vin1 = []\n    vin2 = []\n    for i in range(10):\n        if pen[i] == '?':\n            vin1.append((i + 1) % 2)\n            vin2.append(i % 2)\n        else:\n            vin1.append(int(pen[i]))\n            vin2.append(int(pen[i]))\n    goals = [0, 0]\n    for i in range(10):\n        goals[i % 2] += vin1[i]\n        if goals[0] > (10 - i) // 2 + goals[1]:\n            m1 = i + 1\n            break\n    goals = [0, 0]\n    for i in range(10):\n        goals[i % 2] += vin2[i]\n        if goals[1] > (9 - i) // 2 + goals[0]:\n            m2 = i + 1\n            break\n    print(min(m1, m2))", "for _ in range(int(input())):\n    s = input()\n    one_best = [0 for x in range(10)]\n    common = [0 for x in range(10)]\n    two_best = [0 for x in range(10)]\n    (team1, team2, bo, bt) = (0, 0, 0, 0)\n    (one_rem, two_rem) = (5, 5)\n    for i in range(10):\n        if i == 0 or i % 2 == 0:\n            if s[i] == '1':\n                one_best[i] += 1\n                common[i] += 1\n            elif s[i] == '?':\n                one_best[i] += 1\n        elif i == 1 or i % 2 != 0:\n            if s[i] == '1':\n                two_best[i] += 1\n                common[i] += 1\n            elif s[i] == '?':\n                two_best[i] += 1\n    for i in range(10):\n        if i == 0 or i % 2 == 0:\n            team1 += one_best[i]\n            bo += common[i]\n            one_rem -= 1\n        elif i == 1 or i % 2 != 0:\n            team2 += two_best[i]\n            bt += common[i]\n            two_rem -= 1\n        if team1 - bt > two_rem or team2 - bo > one_rem:\n            print(i + 1)\n            break\n    else:\n        print(10)", "f = lambda : j * (s[i] in '1' + '?' * j)\nfor s in [*open(0)][1:]:\n    a = b = i = 0\n    j = 1\n    while (i < 10) * (a < 13 - i >> 1) * (b < 12 - i >> 1):\n        a += f()\n        j = -j\n        b += f()\n        i += 1\n    print(i)", "for _ in range(int(input())):\n    a = list(input())\n    b = a[:]\n    for i in range(10):\n        if a[i] == '?':\n            if i % 2 == 0:\n                a[i] = '1'\n            else:\n                a[i] = '0'\n    al = bl = 5\n    acnt = bcnt = 0\n    m = 353434\n    for i in range(10):\n        if i % 2 == 0:\n            acnt += int(a[i])\n            al -= 1\n            if bcnt + bl < acnt or acnt + al < bcnt:\n                m = i + 1\n                break\n        else:\n            bcnt += int(a[i])\n            bl -= 1\n            if bcnt + bl < acnt or acnt + al < bcnt:\n                m = i + 1\n                break\n    else:\n        m = 10\n    for i in range(10):\n        if b[i] == '?':\n            if i % 2 == 0:\n                b[i] = '0'\n            else:\n                b[i] = '1'\n    al = bl = 5\n    acnt = bcnt = 0\n    for i in range(10):\n        if i % 2 == 0:\n            acnt += int(b[i])\n            al -= 1\n            if bcnt + bl < acnt or acnt + al < bcnt:\n                m = min(i + 1, m)\n                break\n        else:\n            bcnt += int(b[i])\n            bl -= 1\n            if bcnt + bl < acnt or acnt + al < bcnt:\n                m = min(i + 1, m)\n                break\n    else:\n        m = min(m, 10)\n    print(m)", "import sys, random, bisect\nfrom collections import deque, defaultdict, Counter\nfrom heapq import heapify, heappop, heappush\nfrom math import gcd\nmod = int(1000000000.0 + 7)\ninf = int(1e+20)\ninput = lambda : sys.stdin.readline().rstrip()\nmi = lambda : map(int, input().split())\nli = lambda : list(mi())\nii = lambda : int(input())\npy = lambda : print('YES')\npn = lambda : print('NO')\nt = ii()\n\ndef check(s, f):\n    s = list(s)\n    for (i, c) in enumerate(s):\n        if c == '?':\n            s[i] = 1 if i % 2 == f % 2 else 0\n    a = [int(s[i]) for i in range(0, 10, 2)][::-1]\n    b = [int(s[i]) for i in range(1, 10, 2)][::-1]\n    ca = cb = 0\n    for i in range(1, 11):\n        if i % 2 == 1:\n            ca += a.pop()\n        else:\n            cb += b.pop()\n        if ca > cb + len(b) or cb > ca + len(a):\n            return i\n    return 10\nfor _ in range(t):\n    s = input()\n    print(min(check(s, 0), check(s, 1)))", "t = int(input())\nfor x in range(t):\n    s = input()\n    t1 = 0\n    t2 = 0\n    for a in range(len(s)):\n        if s[a] == '1':\n            if a % 2 == 0:\n                t1 += 1\n                t2 -= 1\n            else:\n                t1 -= 1\n                t2 += 1\n        elif s[a] == '?':\n            if a % 2 == 0:\n                t1 += 1\n            else:\n                t2 += 1\n        if int((10 - a) / 2) < t1:\n            print(a + 1)\n            break\n        elif int((10 - a - 1) / 2) < t2:\n            print(a + 1)\n            break\n        elif a == 9:\n            print(10)", "from sys import stdin, stdout\n\ndef read():\n    return stdin.readline().strip()\n\ndef read_int():\n    return [int(i) for i in read().split()]\n\ndef write(s):\n    stdout.write(s)\n\ndef count(s):\n    score = [0] * 5\n    for i in range(10):\n        if s[i] == '1':\n            score[i & 1] += 1\n        if i & 1:\n            if score[1] > score[0] + (10 - i) // 2:\n                return i + 1\n            if score[1] + (9 - i) // 2 < score[0]:\n                return i + 1\n        else:\n            if score[0] > score[1] + (10 - i) // 2:\n                return i + 1\n            if score[0] + (9 - i) // 2 < score[1]:\n                return i + 1\n    return 10\nfor _ in range(int(read())):\n    s = read()\n    t = s\n    s = [s[i] if s[i] != '?' else '1' if i & 1 else '0' for i in range(len(s))]\n    t = [t[i] if t[i] != '?' else '0' if i & 1 else '1' for i in range(len(s))]\n    print(min(count(s), count(t)))", "t = int(input())\nfor i in range(t):\n    s = input()\n    s1 = s\n    s = list(s)\n    s1 = list(s1)\n    ans0 = 10\n    ans1 = 10\n    for j in range(10):\n        if j % 2 == 0 and s[j] == '?':\n            s[j] = '1'\n        if j % 2 == 1 and s[j] == '?':\n            s[j] = '0'\n    for j in range(10):\n        if j % 2 == 1 and s1[j] == '?':\n            s1[j] = '1'\n        if j % 2 == 0 and s1[j] == '?':\n            s1[j] = '0'\n    cnt1 = 0\n    cnt2 = 0\n    for j in range(10):\n        if j % 2 == 0 and s[j] == '1':\n            cnt1 += 1\n        if j % 2 == 1 and s[j] == '1':\n            cnt2 += 1\n        if cnt1 > cnt2 + (10 - j) // 2:\n            ans0 = j + 1\n            break\n    cnt1 = 0\n    cnt2 = 0\n    for j in range(10):\n        if j % 2 == 1 and s1[j] == '1':\n            cnt1 += 1\n        if j % 2 == 0 and s1[j] == '1':\n            cnt2 += 1\n        if cnt1 > cnt2 + (10 - j - 1) // 2:\n            ans1 = j + 1\n            break\n    ans0 = min(ans0, ans1)\n    print(ans0)", "from sys import stdin, stdout\n\ndef main():\n    for _ in range(int(input())):\n        s = input()\n        first = 0\n        second = 0\n        (f1, s1) = (5, 5)\n        r = 0\n        for (i, v) in enumerate(s):\n            if i % 2 == 0:\n                if v == '1' or v == '?':\n                    first += 1\n                f1 -= 1\n            else:\n                if v == '1':\n                    second += 1\n                s1 -= 1\n            if first > second:\n                if first - second > s1:\n                    r = i + 1\n                    break\n            elif second - first > f1:\n                r = i + 1\n                break\n        else:\n            r = 10\n        (f1, s1) = (5, 5)\n        (first, second) = (0, 0)\n        r1 = 0\n        for (i, v) in enumerate(s):\n            if i % 2 == 0:\n                if v == '1':\n                    first += 1\n                f1 -= 1\n            else:\n                if v == '1' or v == '?':\n                    second += 1\n                s1 -= 1\n            if first > second:\n                if first - second > s1:\n                    r1 = i + 1\n                    break\n            elif second - first > f1:\n                r1 = i + 1\n                break\n        else:\n            r1 = 10\n        print(min([r, r1]))\nmain()", "def func(str, x, y):\n    (a, b) = (0, 0)\n    for i in range(1, 11):\n        if i % 2 != 0:\n            if str[i - 1] == '1':\n                a += 1\n            elif str[i - 1] == '?':\n                a += x\n            else:\n                a += 0\n        elif str[i - 1] == '1':\n            b += 1\n        elif str[i - 1] == '?':\n            b += y\n        else:\n            b += 0\n        if i >= 6 and i % 2 == 0:\n            if abs(a - b) > 2 and i == 6:\n                return i\n            elif abs(b - a) > 1 and i == 8:\n                return i\n        elif i >= 6 and i % 2 != 0:\n            if a - b > 2 and i == 7:\n                return i\n            elif b - a >= 2 and i == 7:\n                return i\n            elif a - b > 1 and i == 9:\n                return i\n            elif b - a >= 1 and i == 9:\n                return i\n    return 10\nt = int(input())\nfor _ in range(t):\n    s = input()\n    c = func(s, 0, 1)\n    d = func(s, 1, 0)\n    print(min(c, d))", "def algo(lst):\n    A = 0\n    B = 0\n    kickA = 0\n    kickB = 0\n    for i in range(len(lst)):\n        if i % 2 == 0:\n            if lst[i] == 1:\n                A += 1\n            kickA += 1\n        else:\n            if lst[i] == 1:\n                B += 1\n            kickB += 1\n        if A > B + 5 - kickB:\n            return i + 1\n        if B > A + 5 - kickA:\n            return i + 1\n    return 10\nfor i in range(int(input())):\n    s = list(input())\n    awin = []\n    bwin = []\n    for i in range(10):\n        if i % 2 == 0:\n            if s[i] == '?':\n                awin.append(1)\n            else:\n                awin.append(int(s[i]))\n        elif s[i] == '?':\n            awin.append(0)\n        else:\n            awin.append(int(s[i]))\n    for i in range(10):\n        if i % 2 == 1:\n            if s[i] == '?':\n                bwin.append(1)\n            else:\n                bwin.append(int(s[i]))\n        elif s[i] == '?':\n            bwin.append(0)\n        else:\n            bwin.append(int(s[i]))\n    print(min(algo(awin), algo(bwin)))", "t = int(input())\nwhile t:\n    s = input()\n    sa = 0\n    sb = 0\n    ta = 5\n    tb = 5\n    winA = 0\n    for i in range(10):\n        if i % 2 == 0:\n            if s[i] == '1' or s[i] == '?':\n                sa += 1\n            ta -= 1\n        else:\n            if s[i] == '1':\n                sb += 1\n            tb -= 1\n        if sa > sb + tb:\n            break\n    winA = i + 1\n    sa = 0\n    sb = 0\n    ta = 5\n    tb = 5\n    winB = 0\n    for i in range(10):\n        if i % 2 == 0:\n            if s[i] == '1':\n                sa += 1\n            ta -= 1\n        else:\n            if s[i] == '1' or s[i] == '?':\n                sb += 1\n            tb -= 1\n        if sb > sa + ta:\n            break\n    winB = i + 1\n    print(min(winA, winB))\n    t -= 1", "t = int(input())\nfor z in range(t):\n    s = input()\n    t1 = 0\n    t2 = 0\n    q1 = 0\n    q2 = 0\n    ans1 = 10\n    ans2 = 10\n    c1 = 0\n    c2 = 0\n    for i in range(0, 10):\n        if i % 2 == 0:\n            c1 += 1\n            if s[i] == '1':\n                t1 += 1\n            if s[i] == '?':\n                q1 += 1\n        else:\n            c2 += 1\n            if s[i] == '1':\n                t2 += 1\n        if t1 + q1 > 5 + t2 - c2:\n            ans1 = i + 1\n            break\n    c1 = 0\n    c2 = 0\n    t1 = 0\n    t2 = 0\n    for i in range(0, 10):\n        if i % 2 == 0:\n            c1 += 1\n            if s[i] == '1':\n                t1 += 1\n        else:\n            c2 += 1\n            if s[i] == '1':\n                t2 += 1\n            if s[i] == '?':\n                q2 += 1\n        if t2 + q2 > 5 + t1 - c1:\n            ans2 = i + 1\n            break\n    print(min(ans1, ans2))", "testn = input()\ntests = []\nfor n in range(0, int(testn)):\n    tests += [input()]\n\ndef check_done(s1, s2, k1, k2):\n    return s1 > s2 + k2 or s2 > s1 + k1\n\ndef odd(n):\n    return n % 2 != 0\n\ndef t1(test):\n    s1 = 0\n    s2 = 0\n    k1 = 5\n    k2 = 5\n    n = 1\n    for x in test:\n        if odd(n):\n            if x == '1' or x == '?':\n                s1 += 1\n                k1 += -1\n            else:\n                k1 += -1\n        elif x == '1':\n            s2 += 1\n            k2 += -1\n        else:\n            k2 += -1\n        if check_done(s1, s2, k1, k2) == True:\n            return n\n        n += 1\n    return 10\n\ndef t2(test):\n    s1 = 0\n    s2 = 0\n    k1 = 5\n    k2 = 5\n    n = 1\n    for x in test:\n        if odd(n):\n            if x == '1':\n                s1 += 1\n                k1 += -1\n            else:\n                k1 += -1\n        elif x == '1' or x == '?':\n            s2 += 1\n            k2 += -1\n        else:\n            k2 += -1\n        if check_done(s1, s2, k1, k2) == True:\n            return n\n        n += 1\n    return 10\nfor test in tests:\n    print(min([t1(test), t2(test)]))", "import math\nt = int(input())\nfor p in range(t):\n    s = str(input())\n    n = len(s)\n    count1 = 0\n    count2 = 0\n    c1 = 0\n    c2 = 0\n    f = 0\n    if s.count('0') == 10 or s.count('1') == 10:\n        print(10)\n    else:\n        for i in range(0, n):\n            if i % 2 == 0:\n                if s[i] == '1' or s[i] == '?':\n                    count1 += 1\n                if s[i] == '1':\n                    c1 += 1\n            else:\n                if s[i] == '1' or s[i] == '?':\n                    count2 += 1\n                if s[i] == '1':\n                    c2 += 1\n            if i % 2 == 0:\n                if c2 + math.ceil((n - i - 1) / 2) < count1:\n                    print(i + 1)\n                    f = 1\n                    break\n                elif c1 + (n - i - 1) // 2 < count2:\n                    print(i + 1)\n                    f = 1\n                    break\n            elif c2 + math.floor((n - i - 1) / 2) < count1:\n                print(i + 1)\n                f = 1\n                break\n            elif c1 + math.ceil((n - i - 1) // 2) < count2:\n                print(i + 1)\n                f = 1\n                break\n        if f == 0:\n            print(10)", "def min_penalty_balls(pred_res):\n    team_a_certain = 0\n    team_a_uncertain = 0\n    team_b_certain = 0\n    team_b_uncertain = 0\n    for (i, r) in enumerate(pred_res):\n        if i % 2 == 0:\n            if r == '1':\n                team_a_certain += 1\n            elif r == '?':\n                team_a_uncertain += 1\n        elif r == '1':\n            team_b_certain += 1\n        elif r == '?':\n            team_b_uncertain += 1\n        max_a = team_a_certain + team_a_uncertain\n        min_b = (10 - i) / 2 + team_b_certain\n        if max_a > min_b:\n            print(i + 1)\n            break\n        max_b = team_b_certain + team_b_uncertain\n        min_a = (9 - i) / 2 + team_a_certain\n        if max_b > min_a:\n            print(i + 1)\n            break\n        if i == 9:\n            print(10)\nt = int(input())\nfor _ in range(t):\n    min_penalty_balls(input())", "for _ in [0] * int(input()):\n    a = list(input())\n    k = sa = sb = 0\n    x = 10\n    for i in range(10):\n        val = a[i]\n        sa = int(k == 0) * (int(val == '?') + int(val == '1')) + sa\n        sb = int(k == 1) * int(val == '1') + sb\n        k = 1 - k\n        if sa > sb + (5 - (i + 1) // 2) or sb > sa + (5 - (i + 2) // 2):\n            x = i + 1\n            break\n    k = sa = sb = 0\n    for i in range(10):\n        val = a[i]\n        sb = int(k == 1) * (int(val == '?') + int(val == '1')) + sb\n        sa = int(k == 0) * int(val == '1') + sa\n        k = 1 - k\n        if sa > sb + (5 - (i + 1) // 2) or sb > sa + (5 - (i + 2) // 2):\n            x = min(i + 1, x)\n            break\n    print(x)", "t = int(input())\n\ndef solve():\n    s = input()\n    case1 = 0\n    res1 = 10\n    for i in range(10):\n        if i % 2 == 0:\n            if s[i] == '?':\n                case1 += 1\n            else:\n                case1 += int(s[i])\n        elif s[i] != '?':\n            case1 -= int(s[i])\n        if case1 > (10 - i) // 2:\n            res1 = i + 1\n            break\n    case2 = 0\n    res2 = 10\n    for i in range(10):\n        if i % 2 == 0:\n            if s[i] != '?':\n                case2 -= int(s[i])\n        elif s[i] == '?':\n            case2 += 1\n        else:\n            case2 += int(s[i])\n        if case2 > (9 - i) // 2:\n            res2 = i + 1\n            break\n    print(min(res1, res2))\nfor _ in range(t):\n    solve()", "def p(s):\n    ap = 0\n    az = 5\n    bp = 0\n    bz = 5\n    for i in range(10):\n        if s[i] == '1':\n            if i % 2 == 0:\n                ap += 1\n            else:\n                bp += 1\n        if i % 2 == 0:\n            az -= 1\n        else:\n            bz -= 1\n        if ap > bp + bz or ap + az < bp:\n            return i + 1\n    else:\n        return 10\nT = int(input())\nfor _ in range(T):\n    S = input()\n    s1 = ''\n    s2 = ''\n    for i in range(10):\n        if S[i] == '?':\n            if i % 2 == 0:\n                s1 += '1'\n                s2 += '0'\n            else:\n                s1 += '0'\n                s2 += '1'\n        else:\n            s1 += S[i]\n            s2 += S[i]\n    print(min(p(s1), p(s2)))", "T = int(input().strip())\n\ndef calculateScore(s1, s2):\n    sc1 = s1[0] + s1[1] + s1[2]\n    sc2 = s2[0] + s2[1] + s2[2]\n    i1 = 3\n    i2 = 3\n    if abs(sc1 - sc2) == 3:\n        return 6\n    sc1 += s1[3]\n    if sc1 - sc2 == 3 or sc2 - sc1 == 2:\n        return 7\n    sc2 += s2[3]\n    if abs(sc1 - sc2) == 2:\n        return 8\n    sc1 += s1[4]\n    if sc1 - sc2 == 2 or sc2 - sc1 == 1:\n        return 9\n    return 10\nfor t in range(T):\n    S = str(input().strip())\n    s1 = []\n    s2 = []\n    for i in range(0, 10, 2):\n        if S[i] == '?' or S[i] == '1':\n            s1.append(1)\n        else:\n            s1.append(0)\n    for i in range(1, 10, 2):\n        if S[i] == '?' or S[i] == '0':\n            s2.append(0)\n        else:\n            s2.append(1)\n    n1 = calculateScore(s1, s2)\n    s1 = []\n    s2 = []\n    for i in range(0, 10, 2):\n        if S[i] == '?' or S[i] == '0':\n            s1.append(0)\n        else:\n            s1.append(1)\n    for i in range(1, 10, 2):\n        if S[i] == '?' or S[i] == '1':\n            s2.append(1)\n        else:\n            s2.append(0)\n    n2 = calculateScore(s1, s2)\n    print(min(n1, n2))", "def main():\n    for _ in range(int(input())):\n        s = input()\n        (a, b) = (''.join([s[i] for i in range(0, 10, 2)]), ''.join([s[i] for i in range(1, 10, 2)]))\n        (g1, b1) = (a.replace('?', '1', a.count('?')), a.replace('?', '0', a.count('?')))\n        (g2, b2) = (b.replace('?', '1', b.count('?')), b.replace('?', '0', b.count('?')))\n        (c1, c2) = (0, 0)\n        ans = [10]\n        for i in range(10):\n            if i % 2 == 0:\n                c1 += 1 if g1[i // 2] == '1' else 0\n                if c1 > c2 + (5 - i // 2):\n                    ans.append(i + 1)\n                    break\n            else:\n                c2 += 1 if b2[i // 2] == '1' else 0\n                if c1 > c2 + (4 - i // 2):\n                    ans.append(i + 1)\n                    break\n        (c1, c2) = (0, 0)\n        for i in range(10):\n            if i % 2 == 0:\n                c1 += 1 if b1[i // 2] == '1' else 0\n                if c2 > c1 + (4 - i // 2):\n                    ans.append(i + 1)\n                    break\n            else:\n                c2 += 1 if g2[i // 2] == '1' else 0\n                if c2 > c1 + (4 - i // 2):\n                    ans.append(i + 1)\n                    break\n        print(min(ans))\nmain()", "from math import floor\nfor i in range(int(input())):\n    my_str = str(input())\n    team0_sum = 0\n    team1_sum = 0\n    team0_mb = 0\n    team1_mb = 0\n    ans = 10\n    for ind in range(0, 10):\n        if ind % 2 == 0:\n            if my_str[ind] != '?':\n                team0_sum += int(my_str[ind])\n            else:\n                team0_mb += 1\n        elif my_str[ind] != '?':\n            team1_sum += int(my_str[ind])\n        else:\n            team1_mb += 1\n        if team0_mb + team0_sum > team1_sum + (10 - ind) // 2 or team1_mb + team1_sum > team0_sum + floor((10 - ind - 1) / 2):\n            ans = ind + 1\n            break\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    t1 = tb1 = tb2 = t2 = 0\n    flag = 1\n    for i in range(len(s)):\n        if s[i] != '?':\n            if i % 2 == 1:\n                t2 += int(s[i])\n            else:\n                t1 += int(s[i])\n        elif i % 2 == 1:\n            tb2 += 1\n        else:\n            tb1 += 1\n        kl1 = (9 - i) // 2\n        kl2 = (10 - i) // 2\n        if t1 + tb1 > t2 + kl2:\n            print(i + 1)\n            flag = 0\n            break\n        if t2 + tb2 > t1 + kl1:\n            print(i + 1)\n            flag = 0\n            break\n    if flag:\n        print(i + 1)", "for _ in range(int(input())):\n    s = input()\n    nta = 5\n    ntb = 5\n    nga = 0\n    ngb = 0\n    count1 = 0\n    i = 1\n    while i < 11:\n        if nga - ngb > ntb or ngb - nga > nta:\n            break\n        if s[i - 1] == '1':\n            if i & 1 != 0:\n                nga += 1\n            else:\n                ngb += 1\n        elif s[i - 1] == '?':\n            if i & 1 != 0:\n                nga += 1\n        count1 += 1\n        if i & 1 == 1:\n            nta -= 1\n        else:\n            ntb -= 1\n        i += 1\n    nta = 5\n    ntb = 5\n    nga = 0\n    ngb = 0\n    count2 = 0\n    i = 1\n    while i < 11:\n        if nga - ngb > ntb or ngb - nga > nta:\n            break\n        if s[i - 1] == '1':\n            if i & 1 != 0:\n                nga += 1\n            else:\n                ngb += 1\n        elif s[i - 1] == '?':\n            if i & 1 == 0:\n                ngb += 1\n        count2 += 1\n        if i & 1 == 1:\n            nta -= 1\n        else:\n            ntb -= 1\n        i += 1\n    print(min(count1, count2))", "def cal(k):\n    p = 0\n    q = 0\n    pl = 0\n    ql = 0\n    for i in range(10):\n        if k[i] == '1':\n            if i % 2 == 0:\n                p += 1\n            else:\n                q += 1\n        if i % 2 == 0:\n            pl += 1\n        else:\n            ql += 1\n        if p > q:\n            if 5 - ql < p - q:\n                break\n        elif 5 - pl < q - p:\n            break\n    return i + 1\nfor _ in range(int(input())):\n    s = input()\n    s1 = list(s)\n    m = 0\n    n = 0\n    for i in range(10):\n        if s1[i] == '?':\n            if i % 2 == 0:\n                s1[i] = '1'\n            else:\n                s1[i] = '0'\n    m = cal(s1)\n    s2 = list(s)\n    for i in range(10):\n        if s2[i] == '?':\n            if i % 2 != 0:\n                s2[i] = '1'\n            else:\n                s2[i] = '0'\n    n = cal(s2)\n    print(min(m, n))", "for case in range(int(input())):\n    s = input()\n    n = len(s)\n    count_a = 0\n    count_b = 0\n    for i in range(n):\n        if s[i] == '?' or (i % 2 == 0 and s[i] == '0') or (i % 2 == 1 and s[i] == '1'):\n            count_a += 1\n        if s[i] == '?' or (i % 2 == 0 and s[i] == '1') or (i % 2 == 1 and s[i] == '0'):\n            count_b += 1\n        if 2 * count_a > n or 2 * count_b > n:\n            print(i + 1)\n            break\n    else:\n        print(n)", "def score(s, player):\n    score = [0]\n    for (i, c) in enumerate(s):\n        score.append(score[-1] + int(c) if i % 2 == player else score[-1])\n    score.pop(0)\n    return score\nt = int(input())\nfor _ in range(t):\n    s = input()\n    a_worst = score(s.replace('?', '0'), player=0)\n    b_worst = score(s.replace('?', '0'), player=1)\n    a_best = score(s.replace('?', '1'), player=0)\n    b_best = score(s.replace('?', '1'), player=1)\n    a_best_possible = [a + p for (a, p) in zip(a_worst, [4, 4, 3, 3, 2, 2, 1, 1, 0, 0])]\n    b_best_possible = [b + p for (b, p) in zip(b_worst, [5, 4, 4, 3, 3, 2, 2, 1, 1, 0])]\n    for (i, (a, b)) in enumerate(zip(a_best_possible, b_best)):\n        if a < b:\n            break\n    for (j, (b, a)) in enumerate(zip(b_best_possible, a_best)):\n        if b < a:\n            if j < i:\n                i = j\n            break\n    print(i + 1)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    a = 0\n    b = 0\n    a1 = 0\n    b1 = 0\n    rema = 5\n    remb = 5\n    for i in range(10):\n        if i % 2 == 0:\n            if s[i] == '1':\n                a += 1\n            if s[i] == '?':\n                a1 += 1\n            rema -= 1\n        if i % 2 == 1:\n            if s[i] == '1':\n                b += 1\n            if s[i] == '?':\n                b1 += 1\n            remb -= 1\n        if a + a1 > remb + b or b + b1 > rema + a:\n            print(i + 1)\n            break\n        if i == 9:\n            print(i + 1)", "r = int(input().strip())\nfor _ in range(r):\n    var = ([0, 0, 5], [0, 0, 5])\n    s = input()\n    for (i, c) in enumerate(s):\n        if c != '0':\n            var[i % 2][0] += 1\n        if c == '1':\n            var[i % 2][1] += 1\n        var[i % 2][2] -= 1\n        if var[0][0] - var[1][1] > var[1][2] or var[1][0] - var[0][1] > var[0][2]:\n            print(i + 1)\n            break\n    else:\n        print(10)", "t = int(input())\nfor i in range(t):\n    s = input()\n    p1 = 0\n    p2 = 0\n    r1 = 5\n    r2 = 5\n    ans1 = 0\n    for i in range(10):\n        if i % 2 == 0:\n            if s[i] == '?' or s[i] == '1':\n                p1 += 1\n                r1 -= 1\n            else:\n                r1 -= 1\n        elif s[i] == '1':\n            p2 += 1\n            r2 -= 1\n        else:\n            r2 -= 1\n        if p1 > r2 + p2:\n            ans1 = i + 1\n            break\n    p1 = 0\n    p2 = 0\n    r1 = 5\n    r2 = 5\n    ans2 = 0\n    for i in range(10):\n        if i % 2 != 0:\n            if s[i] == '?' or s[i] == '1':\n                p2 += 1\n                r2 -= 1\n            else:\n                r2 -= 1\n        elif s[i] == '1':\n            p1 += 1\n            r1 -= 1\n        else:\n            r1 -= 1\n        if p2 > r1 + p1:\n            ans2 = i + 1\n            break\n    if ans1 > 0 and ans2 > 0:\n        print(min(ans1, ans2))\n    elif ans1 > 0:\n        print(ans1)\n    elif ans2 > 0:\n        print(ans2)\n    else:\n        print(10)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    s = input().strip()\n    for i in range(0, len(s)):\n        (a, b) = (0, 0)\n        for j in range(0, i, 2):\n            a += s[j] != '0'\n        for j in range(1, i, 2):\n            b += s[j] == '1'\n        for j in range(1, 10, 2):\n            b += j >= i\n        if b < a:\n            print(i)\n            return\n        (a, b) = (0, 0)\n        for j in range(0, i, 2):\n            a += s[j] == '1'\n        for j in range(0, 10, 2):\n            a += j >= i\n        for j in range(1, i, 2):\n            b += s[j] != '0'\n        if a < b:\n            print(i)\n            return\n    print(10)\nfor i in range(int(input())):\n    solve()", "from collections import *\nfrom math import *\nTT = int(input())\nfor y in range(TT):\n    s = input()\n    ans = 0\n    minna = minnb = maxxa = maxxb = 0\n    foo = 1\n    rema = remb = 5\n    for i in range(10):\n        foo ^= 1\n        ans += 1\n        if foo:\n            if s[i] == '1':\n                minna += 1\n                maxxa += 1\n            elif s[i] == '0':\n                pass\n            else:\n                maxxa += 1\n            rema -= 1\n        else:\n            if s[i] == '1':\n                minnb += 1\n                maxxb += 1\n            elif s[i] == '0':\n                pass\n            else:\n                maxxb += 1\n            remb -= 1\n        if maxxb - minna > rema or maxxa - minnb > remb:\n            break\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    c = [[0] * 2 for _ in range(12)]\n    for (j, i) in enumerate(s):\n        if i == '1':\n            c[j][0] = c[j - 2][0] + 1\n            c[j][1] = c[j - 2][1]\n        elif i == '?':\n            c[j][1] = 1 + c[j - 2][1]\n            c[j][0] = c[j - 2][0]\n        else:\n            (c[j][0], c[j][1]) = (c[j - 2][0], c[j - 2][1])\n    flag = 10\n    (t1, t2) = (5, 5)\n    for i in range(len(c)):\n        if i & 1:\n            t1 -= 1\n        else:\n            t2 -= 1\n        if c[i][1] + c[i][0] > c[i - 1][0] + t1 or c[i - 1][0] + c[i - 1][1] > c[i][0] + t2:\n            flag = i\n            break\n    print(min(10, flag + 1))"]