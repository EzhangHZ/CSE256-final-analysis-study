["def main():\n    n = int(input())\n    arrays = []\n    for _ in range(n):\n        (a, b) = [int(x) for x in input().split()]\n        arrays.append((a, b))\n    for array in arrays:\n        (a, b) = array\n        if a == b:\n            a = 2 * a\n            b = 2 * b\n            area = a * b\n            print(area)\n        elif a > b:\n            b = 2 * b\n            if b > a:\n                diff = b - a\n                a += diff\n                area = a * b\n                print(area)\n            elif b < a:\n                diff = a - b\n                b += diff\n                area = a * b\n                print(area)\n            else:\n                area = a * b\n                print(area)\n        elif a < b:\n            a = 2 * a\n            if a > b:\n                diff = a - b\n                b += diff\n                area = a * b\n                print(area)\n            elif a < b:\n                diff = b - a\n                a += diff\n                area = a * b\n                print(area)\n            else:\n                area = a * b\n                print(area)\n        else:\n            pass\nmain()", "for _ in [*open(0)][1:]:\n    (a, b) = map(int, _.split())\n    print(max(max(a, b) ** 2, min(a, b) ** 2 * 4))", "for s in [*open(0)][1:]:\n    a = (*map(int, s.split()),)\n    print(max(*a, 2 * min(a)) ** 2)", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(max(max(a, b), 2 * min(a, b)) ** 2)", "for i in [*open(0)][1:]:\n    (a, b) = map(int, i.split())\n    if a > b:\n        (a, b) = (b, a)\n    print(4 * a * a if 2 * a > b else b * b)", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\ntestCases = int(input())\nwhile testCases != 0:\n    (a, b) = get_ints()\n    if b > a:\n        switchy = a\n        a = b\n        b = switchy\n    if a >= 2 * b:\n        print(int(a * a))\n    else:\n        print(int(4 * b * b))\n    testCases -= 1", "output_list = []\ncases = int(input())\nfor i in range(cases):\n    this_case = [int(x) for x in input().split(' ')]\n    square_apatoto_size = min(this_case) * 2\n    square_apatoto_size_er_index = this_case.index(min(this_case))\n    if square_apatoto_size_er_index == 1:\n        posaindex = 0\n    else:\n        posaindex = 1\n    if square_apatoto_size >= this_case[posaindex]:\n        output_list.append(square_apatoto_size * square_apatoto_size)\n    else:\n        output_list.append(this_case[posaindex] * this_case[posaindex])\nprint('\\n'.join((str(x) for x in output_list)))", "t = int(input())\nout = []\nfor i in range(t):\n    ab = input().split()\n    a = int(ab[0])\n    b = int(ab[1])\n    m = min(a, b)\n    n = max(a, b)\n    if m * 2 >= n:\n        out.append((m * 2) ** 2)\n    else:\n        out.append(n ** 2)\nfor i in out:\n    print(i)", "for sameer in [*open(0)][1:]:\n    a = (*map(int, sameer.split()),)\n    print(max(*a, 2 * min(a)) ** 2)", "cases = int(input())\nsol = []\nwhile cases > 0:\n    (a, b) = [int(num) for num in input().split()]\n    min = a if a < b else b\n    max = a if a >= b else b\n    if max / min <= 2:\n        sol.append(min * 2 * (min * 2))\n    else:\n        sol.append(max * max)\n    cases -= 1\nfor s in sol:\n    print(s)", "for s in [*open(0)][1:]:\n    a = (*map(int, s.split()),)\n    print(max(*a, 2 * min(a)) ** 2)", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(max(max(a, b), 2 * min(a, b)) ** 2)", "def solve(a, b):\n    return pow(min(max(2 * a, b), max(a, 2 * b)), 2)\nt = int(input())\nresults = list()\nfor _ in range(0, t):\n    (a, b) = map(int, input().split(' '))\n    results.append(solve(a, b))\nfor result in results:\n    print(result)", "def solve():\n    (a, b) = [int(i) for i in input().split()]\n    return max(max(a, b), min(a, b) * 2) ** 2\nt = int(input())\nans = []\nwhile t:\n    ans.append(str(solve()))\n    t -= 1\nprint('\\n'.join(ans))", "x = int(input())\nfirst = []\nsec = []\nfor i in range(0, x):\n    (a, b) = map(int, input().split())\n    first.append(a)\n    sec.append(b)\nfor i in range(0, x):\n    if first[i] >= sec[i]:\n        if sec[i] * 2 >= first[i]:\n            print((sec[i] * 2) ** 2)\n        else:\n            print(first[i] ** 2)\n    if sec[i] > first[i]:\n        if first[i] * 2 > sec[i]:\n            print((first[i] * 2) ** 2)\n        else:\n            print(sec[i] ** 2)", "for s in [*open(0)][1:]:\n    a = (*map(int, s.split()),)\n    print(max(*a, 2 * min(a)) ** 2)", "import sys\nt = int(sys.stdin.readline().strip())\nfor _ in range(t):\n    (a, b) = map(int, sys.stdin.readline().strip().split())\n    s = min(max(a + a, b + b), max(2 * a, b), max(2 * b, a))\n    print(s * s)", "for s in [*open(0)][1:]:\n    a = (*map(int, s.split()),)\n    print(max(*a, 2 * min(a)) ** 2)", "for s in [*open(0)][1:]:\n    a = (*map(int, s.split()),)\n    print(max(*a, 2 * min(a)) ** 2)", "N = int(input())\nR = []\nfor I in range(N):\n    s = input().split()\n    s = list(map(int, s))\n    A = (min(s) * 2) ** 2\n    if s[1] * s[0] * 2 <= A:\n        R.append(A)\n    else:\n        R.append(max(s) ** 2)\nfor j in R:\n    print(j)", "n = int(input())\nanswers = []\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    height = min(a, b) * 2\n    width = max(a, b)\n    if height >= width:\n        answers.append(str(height ** 2))\n    else:\n        answers.append(str(width ** 2))\nprint('\\n'.join(answers))", "from sys import stdin\n\ndef main():\n    t = int(stdin.readline())\n    while t > 0:\n        (a, b) = stdin.readline().split(' ')\n        a = int(a)\n        b = int(b)\n        minS = min(a, b)\n        maxS = max(a, b)\n        print(pow(max(2 * minS, maxS), 2))\n        t = t - 1\n    stdin.close()\nmain()", "print(*[max(max(ab), 2 * min(ab)) ** 2 for ab in (list(map(int, input().split())) for _ in range(int(input())))], sep='\\n')", "ab = []\nfor i in range(int(input())):\n    ab.append(list(map(int, input().split())))\nfor x in ab:\n    x.sort()\n    (a, b) = (x[0], x[1])\n    if 1 not in x:\n        t = a * 2\n        if t > b:\n            print(t * t)\n        else:\n            print(b * b)\n    elif a != b:\n        print(max(x) * max(x))\n    else:\n        print((a + b) * (a + b))", "num_case = input()\ncases = []\nfor i in range(int(num_case)):\n    case = input().split()\n    case = [int(i) for i in case]\n    cases.append(case)\nfor i in range(int(num_case)):\n    case = cases[i]\n    side_l = 0\n    if min(case) * 2 > max(case):\n        side_l = min(case) * 2\n    else:\n        side_l = max(case)\n    print(side_l ** 2)", "n = int(input())\ndims = [input().split(' ') for i in range(n)]\ndims2 = []\nfor x in dims:\n    dims2.append([int(x[0]), int(x[1])])\nfor dim in dims2:\n    if 2 * min(dim) > max(dim):\n        print(4 * min(dim) * min(dim))\n    else:\n        print(max(dim) ** 2)", "t = int(input())\np = 0\nz = []\nfor q in range(0, t):\n    [a, b] = input().split()\n    a = int(a)\n    b = int(b)\n    z.append([a, b])\nfor (a, b) in z:\n    if a > b:\n        s = b * 2\n        if s > a:\n            p = s ** 2\n        elif s < a:\n            p = a ** 2\n        elif s == a:\n            p = a ** 2\n    if a < b:\n        s = a * 2\n        if s > b:\n            p = s ** 2\n        elif s < b:\n            p = b ** 2\n        elif s == b:\n            p = b ** 2\n    if a == b:\n        c = a * 2\n        p = c ** 2\n    print(p)", "t = int(input())\nres = []\nfor i in range(t):\n    arr = [int(x) for x in input().split()]\n    (a, b) = (arr[0], arr[1])\n    (c, d) = (min(a, b), max(a, b))\n    if c * 2 >= d:\n        res.append(c * c * 4)\n    elif c * 2 < d:\n        res.append(d * d)\n    else:\n        res.append(c * c * 4)\nfor i in range(len(res)):\n    print(res[i])", "import sys\ntests = int(sys.stdin.readline().split()[0])\nfor test in range(tests):\n    numbers = [int(i) for i in sys.stdin.readline().split()]\n    (a, b) = (numbers[0], numbers[1])\n    min_side = min(a, b)\n    max_side = max(a, b)\n    if 2 * min_side <= max_side:\n        print(max_side ** 2)\n    else:\n        print((2 * min_side) ** 2)", "t = int(input())\na = []\nfor _ in range(t):\n    a.append(tuple(map(int, input().split(' '))))\nfor c in a:\n    print(min(max(2 * c[1], c[0]), max(2 * c[0], c[1])) ** 2)", "t = int(input())\nlst = []\nfor i in range(t):\n    b = input().split(' ')\n    a = int(b[0])\n    b = int(b[1])\n    if a < b:\n        minD = a\n        maxD = b\n    else:\n        minD = b\n        maxD = a\n    if minD * 2 > maxD:\n        lst.append((minD * 2) ** 2)\n    else:\n        lst.append(maxD ** 2)\nfor i in lst:\n    print(i)", "for i in [*open(0)][1:]:\n    (a, b) = map(int, i.split())\n    print(min(max(a * 2, b), max(a, b * 2)) ** 2)", "t = int(input())\nres = []\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    res.append(min(max(2 * a, b), max(2 * b, a)) ** 2)\nfor el in res:\n    print(el)", "t = int(input())\nlst = []\n\ndef m(a, b):\n    if b * 2 > a:\n        f = (b * 2) ** 2\n    else:\n        f = a ** 2\n    return f\nfor i in range(t):\n    (xx, yy) = input().split()\n    x = int(xx)\n    y = int(yy)\n    if x > y:\n        k = m(x, y)\n    else:\n        k = m(y, x)\n    lst.append(k)\nfor i in lst:\n    print(int(i))", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(max(max(a, b), 2 * min(a, b)) ** 2)", "case = int(input())\nres = []\nfor i in range(case):\n    arr = list(map(int, input().split()))\n    if arr[0] > arr[1]:\n        temp = arr[0]\n        arr[0] = arr[1]\n        arr[1] = temp\n    a = arr[0]\n    b = arr[1]\n    if a == b:\n        res.append(a * a * 4)\n    elif 2 * a <= b:\n        res.append(b * b)\n    else:\n        res.append(2 * a * (2 * a))\nfor i in res:\n    print(i)", "numberOfTestCases = int(input())\nresult = []\nfor i in range(numberOfTestCases):\n    (a, b) = map(int, input().split(' '))\n    if a < b:\n        (a, b) = (b, a)\n    if a == b:\n        area = a ** 2 * 4\n    elif a >= 2 * b:\n        area = a ** 2\n    else:\n        area = (2 * b) ** 2\n    result.append(area)\nfor j in result:\n    print(j)", "n = int(input())\nlis = []\nfor j in range(n):\n    li = [int(x) for x in input().split()]\n    li.sort()\n    if li[0] * 2 == li[1]:\n        lis.append(li[1] * li[1])\n    else:\n        li[0] *= 2\n        if li[0] > li[1]:\n            lis.append(li[0] * li[0])\n        elif li[1] > li[0]:\n            lis.append(li[1] * li[1])\nfor i in lis:\n    print(i)", "n = int(input())\ni = 0\noutput = []\nwhile i < n:\n    (a, b) = map(int, input().split())\n    if a > b:\n        if 2 * b > a:\n            output.append((2 * b) ** 2)\n        else:\n            output.append(a ** 2)\n    elif a < b:\n        if 2 * a > b:\n            output.append((2 * a) ** 2)\n        else:\n            output.append(b ** 2)\n    else:\n        output.append(4 * b ** 2)\n    i += 1\nfor x in output:\n    print(x)", "for i in [*open(0)][1:]:\n    (a, b) = map(int, i.split())\n    print(max(max(a, b), 2 * min(a, b)) ** 2)", "n = int(input())\nl = []\nfor i in range(0, n):\n    s = [int(x) for x in input().split()]\n    l.append(s)\nfor k in range(0, n):\n    p = min(l[k][0], l[k][1])\n    p1 = max(l[k][0], l[k][1])\n    if 2 * p > p1:\n        print(4 * p * p)\n    else:\n        print(p1 * p1)", "for s in [*open(0)][1:]:\n    a = (*map(int, s.split()),)\n    print(max(*a, 2 * min(a)) ** 2)", "for s in [*open(0)][1:]:\n    (a, b) = sorted(map(int, s.split()))\n    print(max(b, 2 * a) ** 2)", "t = int(input())\na = []\nfor i in range(t):\n    l = [int(i) for i in input().split(' ')]\n    l.sort()\n    if l[0] == l[1] or l[0] > l[1] // 2:\n        s = 2 * l[0]\n    else:\n        s = l[1]\n    a.append(s)\nfor i in a:\n    print(i * i)", "n = int(input())\nans = []\nfor i in range(n):\n    xy = input().split()\n    x = int(xy[0])\n    y = int(xy[1])\n    m = min(x, y)\n    m *= 2\n    m = max(m, max(x, y))\n    ans.append(m ** 2)\nfor j in ans:\n    print(j)", "t = int(input())\nl = []\nfor i in range(t):\n    (a, b) = [int(a) for a in input().split()]\n    if a <= b and a >= b / 2:\n        l.append(4 * a * a)\n    elif a >= b and b >= a / 2:\n        l.append(4 * b * b)\n    elif a < b and a < b / 2:\n        l.append(b * b)\n    elif b < a and b < a / 2:\n        l.append(a * a)\nfor _ in range(t):\n    print(l[_])", "import sys\n\ndef in_int():\n    return int(sys.stdin.readline())\n\ndef in_str():\n    return sys.stdin.readline().rstrip()\n\ndef in_map_int():\n    return map(int, sys.stdin.readline().split())\n\ndef in_arr_int():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef in_arr_str():\n    return sys.stdin.readline().split()\n\ndef is_prime(n):\n    for i in range(2, int(n ** (1 / 2)) + 1):\n        if n % i == 0:\n            return True\n    return False\n\ndef solve(a, b):\n    (mn, mx) = (min(a, b), max(a, b))\n    if mn * 2 >= mx:\n        return 4 * mn * mn\n    return mx * mx\n\ndef main():\n    t = in_int()\n    for _ in range(t):\n        (a, b) = in_map_int()\n        print(solve(a, b))\nmain()", "from sys import stdin, stdout\nfrom math import ceil\ninp = int(stdin.readline())\narr = []\nfor i in range(inp):\n    dimensions = [int(i) for i in stdin.readline().split()]\n    arr.append(dimensions)\n\ndef minimal_square(array):\n    for i in arr:\n        area = i[0] * i[1] * 2\n        minimum = min(i[0] * 2, i[1] * 2)\n        if minimum ** 2 >= area:\n            print(minimum ** 2)\n        else:\n            print(max(i[0], i[1]) ** 2)\nminimal_square(arr)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return list(map(int, input().split()))\nt = inp()\nfor i in range(t):\n    arr = inlt()\n    print(max(max(arr), min(arr) * 2) ** 2)", "import sys\nfor i in range(int(sys.stdin.readline())):\n    (a, b) = map(int, sys.stdin.readline().split())\n    print(max(min(a, b) * 2, a, b) ** 2)", "import sys\nfor i in range(int(sys.stdin.readline())):\n    l = [int(x) for x in sys.stdin.readline().split()]\n    print(max(min(l[0], l[1]) * 2, l[0], l[1]) ** 2)", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(max(max(a, b), 2 * min(a, b)) ** 2)", "t = int(input())\nresult = []\nfor i in range(t):\n    v = [int(x) for x in input().split(' ')]\n    if v[0] < v[1]:\n        tmp = v[0]\n        v[0] = v[1]\n        v[1] = tmp\n    canh = max(2 * v[1], v[0])\n    result.append(canh * canh)\nfor i in result:\n    print(i)", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(max(max(a, b), 2 * min(a, b)) ** 2)", "def sq(sides):\n    if sides[0] >= sides[1]:\n        (a, b) = sides\n    else:\n        (a, b) = sides[::-1]\n    if 2 * b >= a:\n        ans = 4 * b ** 2\n    else:\n        ans = a ** 2\n    return ans\noutputs = []\nn = int(input())\nfor i in range(n):\n    s = [int(j) for j in input().split()]\n    output = sq(s)\n    outputs.append(output)\nfor o in outputs:\n    print(o)", "import math\nans = ''\nfor _ in range(int(input())):\n    nk = list(map(int, input().split()))\n    a = nk[0]\n    b = nk[1]\n    s = min(max(a * 2, b), max(a, b * 2))\n    ans += str(s * s) + '\\n'\nprint(ans)", "import sys\nf_in = sys.stdin\nf_out = sys.stdout\nn = int(f_in.readline())\nfor i in range(n):\n    rectangle = f_in.readline().split(' ')\n    a = int(rectangle[0])\n    b = int(rectangle[1])\n    if b > a:\n        t = a\n        a = b\n        b = t\n    if a > 2 * b:\n        answer = a * a\n    else:\n        answer = 4 * b * b\n    f_out.write(str(answer) + '\\n')", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef main():\n    n = inp()\n    for i in range(n):\n        (a, b) = invr()\n        res = max(min(2 * a, 2 * b), a, b)\n        ans = res ** 2\n        print(ans)\nmain()", "answer = []\nfor j in range(int(input())):\n    (a, b) = map(int, input().split())\n    storona = max(a, b)\n    if 2 * min(a, b) <= storona:\n        answer.append(storona ** 2)\n    else:\n        answer.append((2 * min(a, b)) ** 2)\nfor j in answer:\n    print(j)", "t = int(input())\nres = []\nfor i in range(t):\n    inp = input().split()\n    a = int(inp[0])\n    b = int(inp[1])\n    if a < b:\n        sq = max(b, a + a)\n    else:\n        sq = max(a, b + b)\n    res.append(sq * sq)\nfor i in res:\n    print(i)", "from sys import stdin, stdout\n\ndef solution():\n    (a, b) = [int(x) for x in stdin.readline().rstrip().split()]\n    if 2 * min(a, b) < max(a, b):\n        return max(a, b) ** 2\n    else:\n        return (2 * min(a, b)) ** 2\ncases = int(stdin.readline())\nfor i in range(cases):\n    print(solution())", "def main():\n    count = input()\n    a = [[] for i in range(int(count))]\n    for i in range(len(a)):\n        inputstr = input()\n        a[i] = inputstr.split()\n    for x in range(len(a)):\n        l = int(a[x][0])\n        w = int(a[x][1])\n        if l < w:\n            min = l\n            max = w\n        else:\n            min = w\n            max = l\n        if max > 2 * min:\n            print(max * max)\n        else:\n            print(2 * min * (2 * min))\nmain()", "k = int(input())\nlst = []\nfor i in range(k):\n    (a, b) = map(int, input().split())\n    if a < b and a + a >= b:\n        res = a * a * 4\n        lst.append(res)\n    elif b < a and b + b >= a:\n        res = b * b * 4\n        lst.append(res)\n    elif b < a and b + b <= a:\n        res = a * a\n        lst.append(res)\n    elif a < b and a + a <= b:\n        res = b * b\n        lst.append(res)\n    elif a == b:\n        res = a * a * 4\n        lst.append(res)\nfor i in range(len(lst)):\n    print(lst[i])", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (l, b) = map(int, input().split())\n    (mini, maxi) = (min(l, b), max(l, b))\n    if mini * 2 > maxi:\n        print((2 * mini) ** 2)\n    else:\n        print(maxi ** 2)", "def answer():\n    n = int(input())\n    c_out = []\n    while n:\n        a = input().split()\n        a = [int(x) for x in a]\n        (l1, l2) = (min(a[0], a[1]), max(a[0], a[1]))\n        length = max(2 * l1, l2)\n        c_out.append(length ** 2)\n        n -= 1\n    for x in c_out:\n        print(x)\nanswer()", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(max(max(a, b), 2 * min(a, b)) ** 2)", "Answers = []\nfor i in range(int(input())):\n    X = list(map(int, input().split()))\n    Answers.append(str(max(min(X) * 2, max(X)) ** 2))\nprint('\\n'.join(Answers))", "import sys\n\ndef min_square(*inp):\n    min_num = min(inp[0], inp[1])\n    max_num = max(inp[0], inp[1])\n    double_min = min_num * 2\n    side = max(double_min, max_num)\n    return side ** 2\n\ndef main():\n    output = ''\n    no_of_test_cases = int(input())\n    for i in range(no_of_test_cases):\n        case_input = input()\n        sq = min_square(*[int(ele) for ele in str(case_input).split(' ')])\n        output += str(sq) + '\\n'\n    return output\nprint(main())", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(max(max(a, b), 2 * min(a, b)) ** 2)", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(max(max(a, b), 2 * min(a, b)) ** 2)", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(max(max(a, b), 2 * min(a, b)) ** 2)", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(max(max(a, b), 2 * min(a, b)) ** 2)", "def solve(a, b):\n    return pow(min(max(2 * a, b), max(a, 2 * b)), 2)\nt = int(input())\nresults = list()\nfor i in range(0, t):\n    (a, b) = list(map(int, input().split(' ')))\n    results.append(solve(a, b))\nfor result in results:\n    print(result)", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(max(max(a, b), 2 * min(a, b)) ** 2)", "def res(a, b):\n    return pow(min(max(2 * a, b), max(a, 2 * b)), 2)\nt = int(input())\nl = []\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    l.append(res(a, b))\nfor i in l:\n    print(i)", "n = int(input())\n(a, b) = ([], [])\ni = 0\nwhile i < n:\n    tmp = input().split(' ')\n    a.append(int(tmp[0]))\n    b.append(int(tmp[1]))\n    i += 1\ni = 0\nwhile i < n:\n    print(max(2 * min(a[i], b[i]), max(a[i], b[i])) ** 2)\n    i += 1", "import sys, os.path\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nsys.setrecursionlimit(10 ** 5)\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef solve():\n    (a, b) = MI()\n    if a == b:\n        print((2 * a) ** 2)\n    elif a > b and 2 * b >= a:\n        print((2 * b) ** 2)\n    elif a > b and 2 * b < a:\n        print(a ** 2)\n    elif b > a and 2 * a >= b:\n        print((2 * a) ** 2)\n    else:\n        print(b ** 2)\nfor _ in range(II()):\n    solve()", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(max(max(a, b), 2 * min(a, b)) ** 2)", "num = int(input())\nans = []\nfor i in range(num):\n    (a, b) = [int(x) for x in input().split(' ')]\n    if a < b / 2:\n        ans.append(b * b)\n    elif a >= b / 2 and a < b * 2:\n        c = min(a, b)\n        ans.append(4 * c * c)\n    elif a >= b * 2:\n        ans.append(a * a)\nfor i in range(num):\n    print(ans[i])", "t = int(input())\nlist_new = []\nfor i in range(0, t):\n    list1 = [int(i) for i in input().split()]\n    a = max(list1)\n    b = min(list1)\n    if a == b:\n        list_new.append((a * 2) ** 2)\n    elif a < 2 * b:\n        list_new.append((2 * b) ** 2)\n    elif a >= 2 * b:\n        list_new.append(a ** 2)\nfor i in list_new:\n    print(i)", "n = int(input())\nx = [list(map(int, input().split())) for _ in range(n)]\nfor ad in x:\n    if min(ad) * 2 > max(ad):\n        print((min(ad) * 2) ** 2)\n    else:\n        print(max(ad) ** 2)", "a = int(input())\ns = []\nfor i in range(a):\n    b = input().split(' ')\n    b[0] = int(b[0])\n    b[1] = int(b[1])\n    c = 2 * min(b)\n    if c >= max(b):\n        s.append(c ** 2)\n    else:\n        s.append(max(b) ** 2)\nfor j in range(a):\n    print(s[j])", "n = int(input())\nalist = []\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    if a // b >= 2 or b // a >= 2:\n        c = max(a, b)\n        size = c * c\n        alist.append(size)\n    else:\n        c = min(a, b)\n        size = 4 * c * c\n        alist.append(size)\nfor i in alist:\n    print(i)", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print(max(max(a, b), 2 * min(a, b)) ** 2)", "res = []\nt = int(input())\nfor i in range(t):\n    (a, b) = [int(i) for i in input().split()]\n    if a == b:\n        res.append((a * 2) ** 2)\n    elif a < b:\n        if a * 2 >= b:\n            res.append((a * 2) ** 2)\n        else:\n            res.append(b ** 2)\n    elif b * 2 >= a:\n        res.append((b * 2) ** 2)\n    else:\n        res.append(a ** 2)\nfor i in range(t):\n    print(res[i])", "for s in [*open(0)][1:]:\n    (a, b) = sorted(map(int, s.split()))\n    print((a + a) ** 2 if a + a >= b else b * b)", "t = int(input())\ntestResult = []\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    testResult.append(pow(min(max(2 * a, b), max(a, 2 * b)), 2))\nfor i in testResult:\n    print(i)", "t = int(input())\nfor i in range(t):\n    (l, b) = map(int, input().split())\n    s = min(l, b)\n    g = max(l, b)\n    s = s * 2\n    if s < g:\n        print(g * g)\n    else:\n        print(s * s)", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if a > b:\n        (a, b) = (b, a)\n    if 2 * a > b:\n        print(2 * a * (2 * a))\n    else:\n        print(b * b)", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if a == b:\n        print(a * b * 4)\n        continue\n    if a > b:\n        (a, b) = (b, a)\n    if 4 * a * a >= 2 * a * b:\n        print(4 * a * a)\n    else:\n        print(2 * a * b + b * (b - 2 * a))", "t = int(input())\nwhile t:\n    (a, b) = map(int, input().split())\n    n = min(a, b)\n    m = max(a, b)\n    if 4 * (n * n) > m * m:\n        print(4 * (n * n))\n    else:\n        print(m * m)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if a == b:\n        print(4 * a * b)\n        continue\n    if a > b:\n        (a, b) = (b, a)\n    if 4 * (a * a) >= 2 * (a * b):\n        print(4 * a * a)\n    else:\n        print(2 * a * b + b * (b - 2 * a))", "n = int(input())\ni = 1\nwhile i <= n:\n    (x, y) = input().split()\n    x = int(x)\n    y = int(y)\n    if x > y:\n        if 2 * y > x:\n            hasil = 4 * y * y\n        else:\n            hasil = x * x\n    elif 2 * x > y:\n        hasil = 4 * x * x\n    else:\n        hasil = y * y\n    print(hasil)\n    i = i + 1", "t = int(input())\nfor _ in range(t):\n    (l, w) = map(int, input().split())\n    if l < w:\n        (l, w) = (w, l)\n    len = max(w * 2, l)\n    print(len * len)", "x = int(input())\nfor i in range(x):\n    arr = list(map(int, input().split()))\n    w = arr[0]\n    h = arr[1]\n    if w * 2 >= h and w < h:\n        s = (w * 2) ** 2\n    elif h * 2 >= w and h < w:\n        s = (h * 2) ** 2\n    elif h == w:\n        s = (h * 2) ** 2\n    else:\n        s = max(w, h) ** 2\n    print(s)", "def area_check(w, h):\n    width = max(w, h)\n    height = min(w, h)\n    if width >= 2 * height:\n        return width ** 2\n    else:\n        return (2 * height) ** 2\ntest_case = int(input())\nx = 0\nwhile x < test_case:\n    x += 1\n    (w, h) = list(map(int, input().split()))\n    print(area_check(w, h))", "t = int(input())\nfor x in range(t):\n    (a, b) = map(int, input().split())\n    if a > b:\n        (a, b) = (b, a)\n    m = max(a * 2, b)\n    print(m * m)"]