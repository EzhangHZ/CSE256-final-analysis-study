["T = int(input())\nfor t in range(T):\n    (n, m) = [int(i) for i in input().split()]\n    l = []\n    for i in range(n):\n        s = input()\n        l.append(s)\n    flag = 1\n    count = 0\n    for i in range(1, n):\n        count = 0\n        for j in range(m):\n            if l[i][j] != l[0][j]:\n                count += 1\n        if count > 1:\n            flag = 0\n            break\n    if flag == 1:\n        print(l[0])\n    else:\n        index = 0\n        while index < m and flag == 0:\n            flag = 1\n            s = list(l[0])\n            temp = []\n            for i in range(n):\n                count = 0\n                for j in range(m):\n                    if j != index:\n                        if l[i][j] != l[0][j]:\n                            count += 1\n                            ind = j\n                if count == 1:\n                    temp.append(l[i])\n                elif count > 1:\n                    flag = 0\n                    break\n            if flag == 1:\n                ex = temp[0][index]\n                for i in range(len(temp)):\n                    if temp[i][index] != ex:\n                        flag = 0\n                        break\n                if flag == 1:\n                    s[index] = ex\n                    x = ''\n                    for i in range(m):\n                        x += s[i]\n                    print(x)\n            index += 1\n        if flag == 0:\n            print(-1)", "import math\nimport sys\n\ndef diff(s1, s2, ignore):\n    ans = 0\n    for i in range(0, m):\n        if i != ignore:\n            ans += s1[i] != s2[i]\n    return ans\n\ndef solve(a):\n    for diff0 in range(0, m):\n        s = list(a[0])\n        for i in range(1, n):\n            d = diff(s, a[i], diff0)\n            if d > 1:\n                s = None\n                break\n            elif d == 1:\n                if diff0 < m:\n                    s[diff0] = a[i][diff0]\n                    diff0 += m\n                else:\n                    continue\n        if s is not None:\n            break\n    if s is None:\n        return '-1'\n    return ''.join(s)\nt = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    a = [input() for i in range(n)]\n    print(solve(a))", "def find(a, b):\n    c = 0\n    for (x, y) in zip(a, b):\n        c += x != y\n    return c\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = [input() for i in range(n)]\n    res = True\n    ans = ''\n    for i in range(m):\n        s = a[0][:i] + '?' + a[0][i + 1:]\n        temp = a[0]\n        res = True\n        for j in range(n):\n            if find(s, a[j]) > 1:\n                temp = a[0][:i] + a[j][i] + a[0][i + 1:]\n                break\n        for j in range(n):\n            if find(temp, a[j]) > 1:\n                res = False\n                break\n        if res:\n            ans = temp\n            break\n    print([-1, ans][min(len(ans), 1)])", "t = int(input())\n\ndef chk(s0, s):\n    m = len(s[0])\n    for s1 in s[1:]:\n        d = sum((1 for i in range(m) if s0[i] != s1[i]))\n        if d > 1:\n            return False\n    return True\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    s = []\n    for _ in range(n):\n        s.append(input())\n    tmp = [s[0]]\n    res = -1\n    for i in range(m):\n        for j in range(26):\n            c = chr(j + ord('a'))\n            if c == s[0][i]:\n                continue\n            new = s[0][:i] + c + s[0][i + 1:]\n            tmp.append(new)\n    for v in tmp:\n        if chk(v, s):\n            res = v\n            break\n    print(res)", "def find(a, b):\n    c = 0\n    for (x, y) in zip(a, b):\n        c += x != y\n    return c\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(input())\n    res = True\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            res &= find(a[i], a[j]) < 3\n    if not res:\n        print(-1)\n        continue\n    ans = ''\n    for i in range(m):\n        if len(ans):\n            break\n        s = a[0][:i] + '?' + a[0][i + 1:]\n        t = list(s)\n        temp = a[0]\n        for j in range(n):\n            if find(s, a[j]) > 1:\n                t[i] = a[j][i]\n                temp = ''.join(t)\n                break\n        res = True\n        for j in range(n):\n            if find(temp, a[j]) > 1:\n                res = False\n                break\n        if res:\n            ans = temp\n            break\n    if not len(ans):\n        print(-1)\n        continue\n    print(ans)", "import copy\nt = int(input())\n\ndef dist(s, t):\n    diff = 0\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            diff += 1\n    return diff\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    A = []\n    for _ in range(n):\n        s = list(input())\n        A.append(s)\n    maxdist = 0\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            d = dist(A[i], A[j])\n            if d > maxdist:\n                maxdist = d\n            if d == 2:\n                imem = i\n                jmem = j\n        if maxdist >= 3:\n            break\n    if maxdist <= 1:\n        print(''.join(A[0]))\n    elif maxdist >= 3:\n        print('-1')\n    else:\n        a = A[imem]\n        b = A[jmem]\n        inds = []\n        for i in range(m):\n            if a[i] != b[i]:\n                inds.append(i)\n        c = copy.copy(a)\n        d = copy.copy(b)\n        c[inds[0]] = b[inds[0]]\n        d[inds[0]] = a[inds[0]]\n        (a, b) = (c, d)\n        mda = 0\n        mdb = 0\n        for i in range(n):\n            da = dist(a, A[i])\n            db = dist(b, A[i])\n            if da > mda:\n                mda = da\n            if db > mdb:\n                mdb = db\n        if mda <= 1:\n            print(''.join(a))\n        elif mdb <= 1:\n            print(''.join(b))\n        else:\n            print('-1')", "def check(first):\n    for i in l:\n        cnt = 0\n        for j in range(n):\n            if i[j] != first[j]:\n                cnt += 1\n        if cnt > 1:\n            return False\n    return True\nfor _ in range(int(input())):\n    (q, n) = map(int, input().split())\n    first = list(input())\n    l = []\n    for i in range(q - 1):\n        l.append(list(input()))\n    chk = check(first)\n    if not chk:\n        for i in l:\n            for j in range(n):\n                if i[j] != first[j]:\n                    chk = check(first[:j] + [i[j]] + first[j + 1:])\n                if chk:\n                    first[j] = i[j]\n                    break\n            if chk:\n                break\n    print(''.join(first) if chk else -1)", "def diff(ideal, dummy):\n    ans = 0\n    for i in range(len(ideal)):\n        if ideal[i] != dummy[i]:\n            ans += 1\n    return ans\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        s = input()\n        arr.append(s)\n    s = arr[0]\n    ok = False\n    for i in range(m):\n        for j in range(1, 27):\n            t = [i for i in s]\n            t[i] = chr(96 + j)\n            t = ''.join(t)\n            ok = True\n            for x in range(1, n):\n                if diff(t, arr[x]) > 1:\n                    ok = False\n                    break\n            if ok:\n                print(t)\n                break\n        if ok:\n            break\n    if not ok:\n        print(-1)", "for T in range(int(input())):\n    (n, m) = [int(x) for x in input().split()]\n    arr = []\n    for i in range(n):\n        arr.append(list(input()))\n    if n == 1:\n        print(*arr[0], sep='')\n        continue\n    first = arr[0]\n    done = 0\n    for i in range(m):\n        prev = first[i]\n        for j in range(97, 97 + 26):\n            ch = chr(j)\n            first[i] = ch\n            bad = 0\n            for k in range(1, n):\n                bad = 0\n                for pos in range(m):\n                    if first[pos] != arr[k][pos]:\n                        bad += 1\n                        if bad > 1:\n                            break\n                if bad > 1:\n                    break\n            if bad > 1:\n                continue\n            else:\n                print(*first, sep='')\n                done = 1\n                break\n        if done:\n            break\n        else:\n            first[i] = prev\n    if not done:\n        print(-1)", "import io, os, math\n\ndef ri():\n    return int(input().strip())\n\ndef rl():\n    return list(map(int, input().strip().split()))\n\ndef Check(ans, strs):\n    for i in range(len(strs)):\n        cnt = 0\n        for j in range(len(ans)):\n            if ans[j] != strs[i][j]:\n                cnt += 1\n        if cnt > 1:\n            return False\n    return True\n\ndef Solve():\n    (n, m) = rl()\n    strs = [input().strip() for i in range(n)]\n    for i in range(n):\n        if Check(strs[i], strs):\n            print(strs[i])\n            return\n    for i in range(m):\n        for j in range(0, 26):\n            tmp = strs[0][:i] + chr(j + ord('a')) + strs[0][i + 1:]\n            if Check(tmp, strs):\n                print(tmp)\n                return\n    print(-1)\nT = ri()\nwhile T:\n    T -= 1\n    Solve()", "import sys\nimport math\nimport collections\nimport threading\n\ndef diffcnt(s1, s2):\n    diff = 0\n    for i in range(len(s1)):\n        if s1[i] != s2[i]:\n            diff += 1\n    return diff\n\ndef main():\n    (n, m) = map(int, input().split())\n    a = [input() for _ in range(n)]\n    if n == 1:\n        print(a[0])\n        return\n    (z1, z2) = (a[0], a[1])\n    for i in range(n):\n        found = False\n        for j in range(n):\n            if i == j:\n                continue\n            if diffcnt(a[i], a[j]) == 2:\n                (z1, z2) = (a[i], a[j])\n                found == True\n        if found:\n            break\n    diff = 0\n    (c1, c2) = ('', '')\n    for i in range(m):\n        if z1[i] == z2[i]:\n            c1 += z1[i]\n            c2 += z2[i]\n            continue\n        diff += 1\n        if diff > 2:\n            print(-1)\n            return\n        if diff == 1:\n            c1 += z1[i]\n            c2 += z2[i]\n        else:\n            c1 += z2[i]\n            c2 += z1[i]\n    cand = [c1, c2, z1, z2]\n    for c in cand:\n        goodc = True\n        for w in a:\n            diff = 0\n            for i in range(m):\n                if w[i] != c[i]:\n                    diff += 1\n            if diff > 1:\n                goodc = False\n                break\n        if goodc:\n            print(c)\n            return\n    print(-1)\ntn = int(input())\nfor _ in range(tn):\n    main()", "def f(a):\n    for i in range(m):\n        for j in range(26):\n            b = a[0:i] + chr(ord('a') + j) + a[i + 1:m]\n            ans = 1\n            for k in range(N):\n                if check(b, n[k]) > 1:\n                    ans = 0\n                    break\n            if ans:\n                print(b)\n                return\n    print(-1)\n    return\n\ndef check(a, b):\n    k = 0\n    for i in range(len(a)):\n        if a[i] != b[i]:\n            k += 1\n    return k\nt = int(input())\nfor i in range(t):\n    (N, m) = list(map(int, input().split()))\n    n = []\n    for i in range(N):\n        n.append(input())\n    f(n[0])", "from collections import defaultdict\n\ndef res(a):\n    s = a[0]\n    t = False\n    for i in range(m):\n        b = s[i]\n        for j in range(ord('a'), ord('z') + 1):\n            s = s[:i] + chr(j) + s[i + 1:]\n            t = True\n            for u in range(n):\n                c = 0\n                for v in range(m):\n                    if a[u][v] != s[v]:\n                        c += 1\n                if c > 1:\n                    t = False\n                    break\n            if t:\n                break\n        if t:\n            break\n        s = s[:i] + b + s[i + 1:]\n    if t:\n        print(s)\n    else:\n        print(-1)\nfor _ in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    a = [input() for i in range(n)]\n    res(a)", "def main():\n    letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n    t = int(input())\n    for _ in range(t):\n        (n, m) = list(map(int, input().split()))\n        strings = []\n        for __ in range(n):\n            strings.append(input())\n        impossible = False\n        for index in range(m):\n            for letter in letters:\n                first = strings[0][:index] + letter + strings[0][index + 1:]\n                for string in strings[1:]:\n                    level_of_difference = 0\n                    for i in range(m):\n                        if string[i] != first[i]:\n                            level_of_difference += 1\n                    if level_of_difference > 1:\n                        impossible = True\n                        break\n                    elif level_of_difference <= 1:\n                        impossible = False\n                if not impossible:\n                    break\n            if not impossible:\n                break\n        if impossible:\n            print('-1')\n        else:\n            print(first)\nmain()", "def check(li, t, n, m):\n    for i in range(n):\n        see = li[i]\n        diff = 0\n        for j in range(m):\n            if see[j] != t[j]:\n                diff += 1\n        if diff > 1:\n            return False\n    return True\n\ndef solve():\n    (n, m) = [int(x) for x in input().split()]\n    li = []\n    for i in range(n):\n        li.append(input())\n    s = li[0]\n    for i in range(m):\n        for j in range(97, 123, 1):\n            new = s[:i] + chr(j) + s[i + 1:]\n            if check(li, new, n, m):\n                print(new)\n                return\n    print(-1)\n    return\nt = int(input())\nfor i in range(t):\n    solve()", "letters = list('abcdefghijklmnopqrstuvwxyz')\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    strings = set()\n    for i in range(n):\n        strings.add(input())\n    word = strings.pop()\n    answer = ''\n    for i in range(m):\n        for letter in letters:\n            answer = word[:i] + letter + word[i + 1:]\n            for string in strings:\n                flag = -1\n                for j in range(m):\n                    if string[j] != answer[j]:\n                        flag += 1\n                if flag > 0:\n                    answer = ''\n                    break\n            else:\n                i = m\n                break\n        if i == m:\n            break\n    print(answer if len(answer) else -1)", "import math\nt = int(input())\n\ndef check(n, m, l, temp):\n    for i in range(n):\n        count = 0\n        for j in range(m):\n            if l[i][j] != temp[j]:\n                count += 1\n            if count > 1:\n                return False\n    return True\nfor q in range(t):\n    (n, m) = map(int, input().split())\n    l = []\n    for i in range(n):\n        l.append(list(input()))\n    ans = l[0]\n    ttt = False\n    for i in range(m):\n        for j in range(26):\n            temp = ans[:]\n            temp[i] = chr(97 + j)\n            if check(n, m, l, temp):\n                print(''.join(temp))\n                ttt = True\n                break\n        if ttt == True:\n            break\n    if ttt == False:\n        print(-1)", "t = int(input())\n\ndef check(n, m, a, s):\n    flag = 0\n    for i in a:\n        c = 0\n        for j in range(m):\n            if i[j] != s[j]:\n                c += 1\n        if c > 1:\n            flag += 1\n            break\n    if flag:\n        return False\n    else:\n        return True\n\ndef fun(n, m, a):\n    ans = ''\n    ap = 'qwertyuiopasdfghjklzxcvbnm'\n    ap = list(ap)\n    ap.sort()\n    for i in range(m):\n        ans = ''\n        ans += a[0]\n        flag = 0\n        for j in ap:\n            ans = ans[0:i] + j + ans[i + 1:]\n            if check(n, m, a, ans):\n                flag += 1\n                break\n        if flag:\n            print(ans)\n            break\n        elif i == m - 1:\n            print(-1)\nwhile t:\n    t -= 1\n    (n, m) = map(int, input().split())\n    a = []\n    for i in range(n):\n        b = input()\n        a.append(b)\n    fun(n, m, a)", "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10 ** 7)\n    from collections import Counter, deque\n    from itertools import combinations, permutations, accumulate, groupby, product\n    from bisect import bisect_left, bisect_right\n    from heapq import heapify, heappop, heappush\n    import math\n    t = int(input())\n    alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    for _ in range(t):\n        (n, m) = map(int, input().split())\n        s = [list(input().rstrip()) for _ in range(n)]\n        res = -1\n        for i in range(m):\n            if res != -1:\n                continue\n            temp = s[0][:]\n            for j in range(26):\n                if res != -1:\n                    continue\n                temp[i] = alphabet[j]\n                for k in range(1, n):\n                    diff = 0\n                    for c in range(m):\n                        if temp[c] != s[k][c]:\n                            diff += 1\n                    if diff >= 2:\n                        break\n                else:\n                    res = temp\n        if res == -1:\n            print(-1)\n        else:\n            print(''.join(res))\nmain()", "def solution():\n    (n, m) = map(lambda x: int(x), input().split())\n    a = []\n    for i in range(n):\n        a.append(input())\n    answer = list(a[0])\n    for pos in range(m):\n        saved_char = answer[pos]\n        for letter in range(26):\n            answer[pos] = chr(ord('a') + letter)\n            is_wrong_letter = False\n            for i in range(n):\n                errors_cnt = 0\n                for j in range(m):\n                    if answer[j] != a[i][j]:\n                        errors_cnt += 1\n                if errors_cnt > 1:\n                    is_wrong_letter = True\n                if is_wrong_letter:\n                    break\n            if not is_wrong_letter:\n                print(''.join(answer))\n                return\n        answer[pos] = saved_char\n    print('-1')\nt = int(input())\nfor _ in range(t):\n    solution()", "t = int(input())\n\ndef check(strings):\n    for i in range(1, n):\n        c = 0\n        for j in range(m):\n            if strings[0][j] != strings[i][j]:\n                c += 1\n        if c > 1:\n            return 0\n    return 1\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    strings = list()\n    for i in range(n):\n        x = input()\n        strings.append(list(x))\n    for i in range(m):\n        flag = 0\n        temp = strings[0][i]\n        for j in range(97, 123):\n            strings[0][i] = chr(j)\n            if check(strings):\n                print(''.join(strings[0]))\n                flag = 0\n                break\n            else:\n                flag = 1\n        strings[0][i] = temp\n        if flag == 0:\n            break\n    if flag:\n        print(-1)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = [input() for _ in range(n)]\n    for i in range(m):\n        v = 0\n        for l in range(26):\n            p = s[0][:i] + chr(97 + l) + s[0][i + 1:]\n            t = 0\n            for u in s:\n                r = 0\n                for h in range(m):\n                    if u[h] != p[h]:\n                        if r:\n                            t = 1\n                            break\n                        else:\n                            r = 1\n                if t:\n                    break\n            else:\n                print(p)\n                v = 1\n                break\n        if v:\n            break\n    else:\n        print(-1)", "import math\n\ndef dist(a, b):\n    ans = 0\n    for i in range(len(a)):\n        if a[i] != b[i]:\n            ans += 1\n    return ans\n\ndef check(words, candidate):\n    for word in words:\n        if dist(word, candidate) > 1:\n            return False\n    return True\n\ndef main():\n    (n, m) = (int(x) for x in input().split())\n    words = [input() for i in range(n)]\n    candidate = list(words[0])\n    if check(words, ''.join(candidate)):\n        return ''.join(candidate)\n    for i in range(len(candidate)):\n        candidate = list(words[0])\n        for char in range(ord('a'), ord('z') + 1):\n            candidate[i] = chr(char)\n            if check(words, candidate):\n                return ''.join(candidate)\n    return '-1'\nt = int(input())\nwhile t > 0:\n    t -= 1\n    ans = main()\n    print(ans)", "def check(s, n, m, res):\n    for k in range(n):\n        st = s[k]\n        c = 0\n        for l in range(m):\n            if st[l] != res[l]:\n                c += 1\n        if c > 1:\n            return False\n    return True\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = []\n    for i in range(n):\n        s.append(input())\n    res = list(s[0])\n    f = 0\n    for i in range(m):\n        res = list(s[0])\n        for j in range(26):\n            res[i] = chr(ord('a') + j)\n            if check(s, n, m, res):\n                print(''.join(res))\n                f = 1\n                break\n        if f == 1:\n            break\n    if f == 0:\n        print(-1)", "def check(li, t, n, m):\n    for i in range(n):\n        see = li[i]\n        diff = 0\n        for j in range(m):\n            if see[j] != t[j]:\n                diff += 1\n        if diff > 1:\n            return False\n    return True\n\ndef solve():\n    (n, m) = [int(x) for x in input().split()]\n    li = []\n    for i in range(n):\n        li.append(input())\n    s = li[0]\n    if check(li, s, n, m):\n        print(s)\n        return\n    else:\n        for i in range(m):\n            for j in range(97, 123, 1):\n                new = s[:i] + chr(j) + s[i + 1:]\n                if check(li, new, n, m):\n                    print(new)\n                    return\n        else:\n            print(-1)\n            return\nt = int(input())\nfor i in range(t):\n    solve()", "def getString(stringArray):\n    n = len(stringArray)\n    if n == 1:\n        return stringArray[0]\n    m = len(stringArray[0])\n    possibleTemplates = []\n    first = stringArray[0]\n    for i in range(m):\n        possibleTemplates.append(first[:i] + '*' + first[i + 1:])\n    for word in possibleTemplates:\n        for i in range(97, 97 + 26):\n            word2 = word.replace('*', chr(i))\n            ok = True\n            for j in range(n):\n                differenceCount = 0\n                for k in range(m):\n                    if stringArray[j][k] != word2[k]:\n                        differenceCount += 1\n                if differenceCount > 1:\n                    ok = False\n                    break\n            if ok:\n                return word2\n    return '-1'\nt = int(input())\nfor _ in range(t):\n    (n, m) = [int(x) for x in input().split()]\n    stringArray = []\n    for i in range(n):\n        stringArray.append(input())\n    print(getString(stringArray))", "from sys import stdin, setrecursionlimit as srl\nfrom threading import stack_size, Thread\nsrl(int(1000000000.0) + 7)\nstack_size(int(100000000.0))\n\ndef conf(a, b):\n    cnt = 0\n    for i in range(len(a)):\n        if a[i] != b[i]:\n            cnt += 1\n    return cnt\n\ndef check(x, s):\n    for i in s:\n        if conf(i, x) > 1:\n            return 0\n    return 1\n\ndef solve():\n    t = int(input())\n    for _ in range(t):\n        ans = -1\n        (n, m) = map(int, input().split())\n        s = []\n        end = 0\n        for i in range(n):\n            s.append(input())\n        for i in range(m):\n            sg = s[0]\n            for j in range(ord('a'), ord('z') + 1):\n                try:\n                    x = sg[:i] + chr(j) + sg[i + 1:]\n                except:\n                    x = sg[:i] + chr(j)\n                end = check(x, s)\n                if end:\n                    ans = x\n                    break\n            if end:\n                break\n        print(ans)\nglobal ans\nThread(target=solve).start()", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    ls = []\n    for i in range(n):\n        ls.append(list(input()))\n    ans = -1\n    for i in range(m):\n        startchar = 'a'\n        st = ls[0][:]\n        for j in range(26):\n            st[i] = chr(ord(startchar) + j)\n            done = True\n            for k in range(1, n):\n                cnt = 0\n                f = 0\n                for p in range(m):\n                    if ls[k][p] != st[p]:\n                        cnt += 1\n                    if cnt == 2:\n                        f = 1\n                        break\n                if f == 1:\n                    done = False\n                    break\n            if done:\n                ans = st\n                break\n        if ans != -1:\n            break\n    if ans == -1:\n        print(ans)\n    else:\n        print(''.join(ans))", "def checkValid(a, s):\n    for i in range(len(a)):\n        count = 0\n        for j in range(len(a[0])):\n            if a[i][j] != s[j]:\n                count += 1\n        if count > 1:\n            return 0\n    return 1\nfor x in range(int(input())):\n    a = []\n    (n, m) = map(int, input().split())\n    for y in range(n):\n        a.append(input())\n    s = a[0]\n    var = 0\n    var1 = 0\n    for i in range(len(s)):\n        for j in range(97, 123):\n            arr = list(s)\n            arr[i] = chr(j)\n            s = ''.join(arr)\n            if checkValid(a, s) == 1:\n                print(s)\n                var = 1\n                break\n            else:\n                s = a[0]\n        if var == 1:\n            var1 = 1\n            break\n    if var1 == 0:\n        print('-1')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = [input() for _ in range(n)]\n    for i in range(m):\n        v = 0\n        for l in range(26):\n            p = s[0][:i] + chr(97 + l) + s[0][i + 1:]\n            t = 0\n            for u in s:\n                r = 0\n                for h in range(m):\n                    if u[h] != p[h]:\n                        if r:\n                            t = 1\n                            break\n                        else:\n                            r = 1\n                if t:\n                    break\n            else:\n                print(p)\n                v = 1\n                break\n        if v:\n            break\n    else:\n        print(-1)", "def check(a, final):\n    count = 0\n    for i in range(len(a)):\n        for j in range(len(final)):\n            if final[j] != a[i][j]:\n                count += 1\n        if count > 1:\n            return False\n        else:\n            count = 0\n    return True\ntest = int(input())\nwhile test != 0:\n    (n, m) = [int(x) for x in input().split()]\n    a = []\n    for i in range(n):\n        a.append(input())\n    final = a[0]\n    flag = 0\n    for i in range(m):\n        for j in range(97, 123):\n            x = chr(j)\n            final = final[:i] + x + final[i + 1:]\n            if check(a, final) == True:\n                print(final)\n                flag = 1\n                break\n        final = final[:i] + a[0][i] + final[i + 1:]\n        if flag == 1:\n            break\n    if flag == 0:\n        print(-1)\n    test -= 1", "def check(a, final):\n    count = 0\n    for i in range(len(a)):\n        for j in range(len(final)):\n            if final[j] != a[i][j]:\n                count += 1\n        if count > 1:\n            return False\n        else:\n            count = 0\n    return True\ntest = int(input())\nwhile test != 0:\n    (n, m) = [int(x) for x in input().split()]\n    a = []\n    for i in range(n):\n        a.append(input())\n    final = a[0]\n    flag = 0\n    for i in range(m):\n        for j in range(97, 123):\n            x = chr(j)\n            final = final[:i] + x + final[i + 1:]\n            if check(a, final) == True:\n                print(final)\n                flag = 1\n                break\n        final = final[:i] + a[0][i] + final[i + 1:]\n        if flag == 1:\n            break\n    if flag == 0:\n        print(-1)\n    test -= 1", "import sys\nimport math\nimport collections\nfrom sys import stdin, stdout, setrecursionlimit\nimport bisect as bs\nsetrecursionlimit(2 ** 20)\nM = 10 ** 9 + 7\nT = int(stdin.readline())\n\ndef check(s1, s2):\n    co = 0\n    for i in range(m):\n        if s1[i] != s2[i]:\n            co += 1\n    if co > 1:\n        return False\n    return True\nfor _ in range(T):\n    (n, m) = list(map(int, stdin.readline().split()))\n    ss = []\n    for i in range(n):\n        ss.append(list(stdin.readline().strip('\\n')))\n    res = False\n    for i in range(m):\n        for a in range(26):\n            c = chr(ord('a') + a)\n            t = ss[0].copy()\n            t[i] = c\n            cc = 0\n            for j in range(1, n):\n                if not check(t, ss[j]):\n                    break\n                cc += 1\n            if cc == n - 1:\n                res = True\n                break\n        if res:\n            break\n    if res:\n        print(''.join(t))\n        continue\n    print(-1)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = [list(input()) for _ in range(n)]\n    for i in range(m):\n        s = 0\n        for j in range(26):\n            x = chr(97 + j)\n            u = 1\n            for k in range(1, n):\n                c = 0\n                for l in range(m):\n                    if i == l:\n                        if not a[k][l] == x:\n                            c += 1\n                    elif not a[0][l] == a[k][l]:\n                        c += 1\n                if c > 1:\n                    u = 0\n                    break\n            if u == 1:\n                ans = a[0]\n                ans[i] = chr(97 + j)\n                print(''.join(ans))\n                s = 1\n                break\n        if s == 1:\n            break\n    if not s == 1:\n        print(-1)", "def solve():\n    alphas = list('abcdefghijklmnopqrstuvwxyz')\n    (n, m) = map(int, input().split())\n    strings = [input() for i in range(n)]\n    s = strings[0]\n    que = []\n    for i in range(m):\n        for j in range(26):\n            if i == 0:\n                que.append(alphas[j] + s[i + 1:])\n            elif i == m - 1:\n                que.append(s[:i] + alphas[j])\n            else:\n                que.append(s[:i] + alphas[j] + s[i + 1:])\n\n    def judge(string):\n        flag = True\n        for v in strings:\n            cnt = 0\n            for j in range(m):\n                cnt += string[j] != v[j]\n            if cnt > 1:\n                flag = False\n                break\n        return flag\n    for st in que:\n        if judge(st) == True:\n            print(st)\n            return\n    print(-1)\n    return\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        solve()\n    return\nmain()", "def checkIfOk(str, arr):\n    for i in range(len(arr)):\n        t = 0\n        for g in range(len(arr[0])):\n            if arr[i][g] != str[g]:\n                t += 1\n        if t >= 2:\n            return False\n    return True\n\ndef generate(str, arr):\n    letters = 'abcdefghijklmnopqrstuvwxyz'\n    for i in range(len(str)):\n        for g in range(26):\n            newStr = str[:]\n            newStr[i] = letters[g]\n            res = checkIfOk(newStr, arr)\n            if res:\n                return newStr\n                break\n        else:\n            continue\n    else:\n        return False\nfor i in range(int(input())):\n    (am, l) = list(map(int, input().split()))\n    strs = []\n    for i in range(am):\n        strs.append(list(input()))\n    out = generate(strs[0], strs)\n    print(''.join(out) if out else -1)", "import sys\ninput = sys.stdin.readline\nI = lambda : list(map(int, input().split()))\n\ndef check(s, x):\n    for i in x:\n        h = 0\n        for j in range(len(s)):\n            h += int(i[j] != s[j])\n        if h > 1:\n            return False\n    return True\nfor _ in range(int(input())):\n    (a, b) = I()\n    l = []\n    for i in range(a):\n        l.append(input())\n    an = list(l[0])[:b]\n    x = list(an)\n    for i in range(b):\n        for j in 'abcdefghijklmnopqrstuvwxyz':\n            an[i] = j\n            if check(an, l):\n                print(''.join(an))\n                an = 1\n                break\n        if an == 1:\n            break\n        an = list(x)\n    if an != 1:\n        print(-1)", "import math\nimport string\n\ndef change(s, j, c):\n    return s[:j] + c + s[j + 1:]\n\ndef check(b, a, n, m):\n    for i in range(n):\n        count = 0\n        for j in range(m):\n            if b[i][j] != a[j]:\n                count += 1\n            if count > 1:\n                return 0\n    return 1\n\ndef solve():\n    (n, m) = map(int, input().split())\n    b = []\n    for i in range(n):\n        b.append(input())\n    s = b[0]\n    flag = 0\n    for k in range(m):\n        if flag == 1:\n            break\n        for c in string.ascii_lowercase:\n            new = change(s, k, c)\n            if check(b, new, n, m):\n                flag = 1\n                print(new)\n                break\n    if flag == 0:\n        print(-1)\nfor t in range(int(input())):\n    solve()", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split(' '))\n    arr = []\n    for i in range(n):\n        s = input()\n        arr.append(s)\n    f = 0\n    for i in arr:\n        flag = 0\n        for j in arr:\n            cnt = 0\n            for k in range(m):\n                if i[k] != j[k]:\n                    cnt += 1\n            if cnt > 1:\n                flag = 1\n                break\n        if flag == 0:\n            f = 1\n            break\n    if f == 1:\n        print(i)\n    else:\n        s = []\n        for i in arr[0]:\n            s.append(i)\n        q = 'abcdefghijklmnopqrstuvwxyz'\n        f = 0\n        for j in range(m):\n            for i in q:\n                s[j] = i\n                flag = 0\n                for k in arr:\n                    cnt = 0\n                    for k1 in range(m):\n                        if s[k1] != k[k1]:\n                            cnt += 1\n                    if cnt > 1:\n                        flag = 1\n                        break\n                if flag == 0:\n                    f = 1\n                    break\n            if f == 1:\n                f = 2\n                break\n            s[j] = arr[0][j]\n        if f == 2:\n            ans = ''\n            for i in s:\n                ans = ans + i\n            print(ans)\n        else:\n            print(-1)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split(' '))\n    arr = []\n    for i in range(n):\n        s = input()\n        arr.append(s)\n    f = 0\n    for i in arr:\n        flag = 0\n        for j in arr:\n            cnt = 0\n            for k in range(m):\n                if i[k] != j[k]:\n                    cnt += 1\n            if cnt > 1:\n                flag = 1\n                break\n        if flag == 0:\n            f = 1\n            break\n    if f == 1:\n        print(i)\n    else:\n        s = []\n        for i in arr[0]:\n            s.append(i)\n        q = 'abcdefghijklmnopqrstuvwxyz'\n        f = 0\n        for j in range(m):\n            for i in q:\n                s[j] = i\n                flag = 0\n                for k in arr:\n                    cnt = 0\n                    for k1 in range(m):\n                        if s[k1] != k[k1]:\n                            cnt += 1\n                    if cnt > 1:\n                        flag = 1\n                        break\n                if flag == 0:\n                    f = 1\n                    break\n            if f == 1:\n                f = 2\n                break\n            s[j] = arr[0][j]\n        if f == 2:\n            ans = ''\n            for i in s:\n                ans = ans + i\n            print(ans)\n        else:\n            print(-1)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = [None] * n\n    for i in range(n):\n        a[i] = input()\n    now = a[0]\n    ans = []\n    for i in range(m):\n        for j in range(27):\n            err = 0\n            for k in range(1, n):\n                e = 0\n                for q in range(m):\n                    if i == q:\n                        if a[k][q] != chr(ord('a') + j):\n                            e = e + 1\n                    elif a[k][q] != a[0][q]:\n                        e = e + 1\n                if e > 1:\n                    err = err + 1\n                    break\n            if err == 0:\n                ans = [i, chr(ord('a') + j)]\n                break\n        if len(ans) != 0:\n            break\n    if len(ans) == 0:\n        print(-1)\n    else:\n        for i in range(m):\n            if i == ans[0]:\n                print(ans[1], end='')\n            else:\n                print(a[0][i], end='')\n        print()", "def f(s, n, m, A):\n    res = True\n    for i in range(n):\n        cnt = 0\n        for j in range(m):\n            if s[j] != A[i][j]:\n                cnt += 1\n        if cnt > 1:\n            res = False\n            break\n    return res\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    A = [list(input()) for _ in range(n)]\n    ans = -1\n    for j in range(m):\n        s = [0] * m\n        for k in range(m):\n            s[k] = A[0][k]\n        for x in range(26):\n            s[j] = chr(x + 97)\n            if f(s, n, m, A):\n                ans = ''.join(s)\n                break\n        if ans != -1:\n            break\n    print(ans)", "import copy\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    strings = []\n    for _ in range(n):\n        strings.append(input())\n    candidate = strings[0]\n    successful = False\n    for i in range(m):\n        for j in range(26):\n            candidate = candidate[:i] + chr(ord('a') + j) + candidate[i + 1:]\n            doesItWork = True\n            for k in range(1, n):\n                distanceCount = 0\n                for l in range(m):\n                    if candidate[l] != strings[k][l]:\n                        distanceCount += 1\n                if distanceCount >= 2:\n                    doesItWork = False\n                    break\n            if doesItWork:\n                successful = True\n                break\n            candidate = candidate[:i] + strings[0][i] + candidate[i + 1:]\n        if successful:\n            break\n    if successful:\n        print(candidate)\n    else:\n        print(-1)", "import sys\nimport math\nimport itertools\nimport random\nfrom collections import deque\n\ndef solve():\n    (n, m) = map(int, input().split())\n    s = [input() for _ in range(n)]\n    for i in range(m):\n        ans = list(s[0])\n        for j in range(26):\n            ans[i] = chr(j + ord('a'))\n            if check(ans, n, m, s):\n                ans = ''.join(ans)\n                print(ans)\n                return\n    print(-1)\n\ndef check(ans, n, m, s):\n    for i in range(n):\n        cnt = 0\n        for j in range(m):\n            if s[i][j] != ans[j]:\n                cnt += 1\n        if cnt > 1:\n            return False\n    return True\nt = int(input())\nwhile t > 0:\n    solve()\n    t -= 1", "import string\n\ndef isvalid(word):\n    for i in range(n):\n        differences = 0\n        for j in range(m):\n            if word[j] != strings[i][j]:\n                differences += 1\n        if differences > 1:\n            return False\n    return True\n\ndef solve():\n    alphabet = string.ascii_lowercase\n    if isvalid(strings[0]):\n        return strings[0]\n    for i in range(m):\n        s = strings[0].copy()\n        for j in range(len(alphabet)):\n            s[i] = alphabet[j]\n            if isvalid(s):\n                return s\n    return '-1'\ntestcases = int(input())\nfor i in range(testcases):\n    (n, m) = map(int, input().split())\n    strings = []\n    for j in range(n):\n        strings.append(list(input()))\n    print(''.join(solve()))", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    s = []\n    for _ in range(n):\n        s.append(input())\n    ans = list(s[0])\n    l = []\n    for i in range(m):\n        for j in range(26):\n            ans[i] = chr(j + 97)\n            l.append(''.join(ans))\n        ans[i] = s[0][i]\n    nf = 0\n    for i in l:\n        flag = 0\n        for j in s:\n            ct = 0\n            for k in range(m):\n                if j[k] != i[k]:\n                    ct += 1\n            if ct > 1:\n                flag = 1\n                break\n        if flag == 0:\n            print(''.join(i))\n            nf = 1\n            break\n    if nf == 0:\n        print('-1')", "alpha = 'abcdefghijklmnopqrstuvwxyz'\nt = int(input())\nfor _ in range(0, t):\n    (n, m) = map(int, input().split())\n    aa = []\n    for _ in range(0, n):\n        s = input()\n        aa.append(s)\n    ok = False\n    for i in range(0, m):\n        for j in alpha:\n            ans = list(aa[0])\n            ans[i] = j\n            ok = True\n            for ii in range(0, n):\n                diff = 0\n                for jj in range(0, m):\n                    if ans[jj] != aa[ii][jj]:\n                        diff += 1\n                if diff > 1:\n                    ok = False\n                    break\n            if ok:\n                break\n        if ok:\n            break\n    if ok:\n        print(''.join(ans))\n    else:\n        print(-1)", "for t in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    mat = []\n    for i in range(n):\n        mat += [input()]\n    if n == 1:\n        print(mat[0])\n        continue\n    elif k == 1:\n        print('a')\n        continue\n    done = False\n    for ch in range(k):\n        for new_c in 'abcdefghijklmnopqrstuvwxyz':\n            if not done:\n                ans = mat[0]\n                ans = ans[:ch] + new_c + ans[ch + 1:]\n                good = True\n                for i in range(n):\n                    count = 0\n                    for j in range(k):\n                        if mat[i][j] != ans[j]:\n                            count += 1\n                    if count > 1:\n                        good = False\n                        break\n                if good:\n                    print(ans)\n                    done = True\n    if not done:\n        print(-1)", "Q = ['a', 'b', 'a', 'b']\nN = int(input())\nfor i in range(0, N):\n    p = input().rstrip().split(' ')\n    L = []\n    n = int(p[0])\n    m = int(p[1])\n    for j in range(0, n):\n        s1 = input().rstrip()\n        x = list(s1)\n        L.append(x)\n    tot = -1\n    L = list(L)\n    A = list(L[0])\n    B = list(L[0])\n    for j in range(0, 1):\n        for k in range(0, len(A)):\n            B = list(L[0])\n            for O in range(0, 26):\n                AA = chr(O + 97)\n                B[k] = AA\n                GQ = 0\n                for U in range(0, len(L)):\n                    G = L[U]\n                    ans = 0\n                    for H in range(0, len(G)):\n                        if G[H] != B[H]:\n                            ans += 1\n                    if ans > 1:\n                        GQ = 1\n                        break\n                if GQ == 0:\n                    tot = ''.join(B)\n                    break\n            if tot != -1:\n                break\n        if tot != -1:\n            break\n    print(tot)", "Q = ['a', 'b', 'a', 'b']\nN = int(input())\nfor i in range(0, N):\n    p = input().rstrip().split(' ')\n    L = []\n    n = int(p[0])\n    m = int(p[1])\n    for j in range(0, n):\n        s1 = input().rstrip()\n        x = list(s1)\n        L.append(x)\n    tot = -1\n    L = list(L)\n    A = list(L[0])\n    B = list(L[0])\n    for j in range(0, 1):\n        for k in range(0, len(A)):\n            B = list(L[0])\n            for O in range(0, 26):\n                AA = chr(O + 97)\n                B[k] = AA\n                GQ = 0\n                for U in range(0, len(L)):\n                    G = L[U]\n                    ans = 0\n                    for H in range(0, len(G)):\n                        if G[H] != B[H]:\n                            ans += 1\n                    if ans > 1:\n                        GQ = 1\n                        break\n                if GQ == 0:\n                    tot = ''.join(B)\n                    break\n            if tot != -1:\n                break\n        if tot != -1:\n            break\n    print(tot)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = [input() for _ in range(n)]\n    found = False\n    for i in range(m):\n        for c in range(26):\n            sol = list(a[0])\n            sol[i] = chr(c + ord('a'))\n            sol = ''.join(sol)\n            found = True\n            for j in range(n):\n                d = 0\n                for k in range(m):\n                    if sol[k] != a[j][k]:\n                        d += 1\n                if d > 1:\n                    found = False\n                    break\n            if found:\n                break\n        if found:\n            break\n    if found:\n        print(sol)\n    else:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    a = [input() for _ in range(n)]\n    found = False\n    for i in range(m):\n        for c in range(26):\n            sol = list(a[0])\n            sol[i] = chr(c + ord('a'))\n            sol = ''.join(sol)\n            found = True\n            for j in range(n):\n                d = 0\n                for k in range(m):\n                    if sol[k] != a[j][k]:\n                        d += 1\n                if d > 1:\n                    found = False\n                    break\n            if found:\n                break\n        if found:\n            break\n    if found:\n        print(sol)\n    else:\n        print(-1)", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    for i in range(n):\n        l.append(input())\n    if n < 2:\n        print(l[0])\n    elif m < 2:\n        print('a')\n    else:\n        done = False\n        for i in range(m):\n            for j in 'abcdefghijklmnopqrstuvwxyz':\n                if not done:\n                    ans = l[0]\n                    ans = ans[:i] + j + ans[i + 1:]\n                    good = True\n                    for x in range(n):\n                        count = 0\n                        for y in range(m):\n                            if ans[y] != l[x][y]:\n                                count += 1\n                        if count > 1:\n                            good = False\n                            break\n                    if good:\n                        print(ans)\n                        done = True\n                        break\n        if not done:\n            print('-1')", "import sys\nimport heapq\nimport random\nimport collections\nfrom functools import lru_cache\n\ndef solve(grid):\n\n    @lru_cache(maxsize=None)\n    def test_string(test):\n        for strn in grid:\n            if sum([1 for (a, b) in zip(test, strn) if a != b]) > 1:\n                return False\n        return True\n    for strn in grid:\n        for (i, s) in enumerate(strn):\n            for other in grid:\n                test = strn[:i] + other[i] + strn[i + 1:]\n                if test_string(test):\n                    return test\n    return -1\n\ndef console(*args):\n    print('\\x1b[36m', *args, '\\x1b[0m', file=sys.stderr)\n    return\nfor case_num in range(int(input())):\n    (nrows, _) = list(map(int, input().split()))\n    grid = []\n    for _ in range(nrows):\n        grid.append(input())\n    res = solve(grid)\n    print(res)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = [input() for _ in range(n)]\n    found = False\n    for i in range(m):\n        for c in range(26):\n            sol = list(a[0])\n            sol[i] = chr(c + ord('a'))\n            sol = ''.join(sol)\n            found = True\n            for j in range(n):\n                d = 0\n                for k in range(m):\n                    if sol[k] != a[j][k]:\n                        d += 1\n                if d > 1:\n                    found = False\n                    break\n            if found:\n                break\n        if found:\n            break\n    print(sol) if found else print(-1)", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    for i in range(n):\n        l.append(input())\n    if n < 2:\n        print(l[0])\n    elif m < 2:\n        print('a')\n    else:\n        done = False\n        for i in range(m):\n            for j in 'abcdefghijklmnopqrstuvwxyz':\n                if not done:\n                    ans = l[0]\n                    ans = ans[:i] + j + ans[i + 1:]\n                    good = True\n                    for x in range(n):\n                        count = 0\n                        for y in range(m):\n                            if ans[y] != l[x][y]:\n                                count += 1\n                        if count > 1:\n                            good = False\n                            break\n                    if good:\n                        print(ans)\n                        done = True\n                        break\n        if not done:\n            print('-1')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = [input() for _ in range(n)]\n    found = False\n    for i in range(m):\n        for c in range(26):\n            sol = list(a[0])\n            sol[i] = chr(c + ord('a'))\n            sol = ''.join(sol)\n            found = True\n            for j in range(n):\n                d = 0\n                for k in range(m):\n                    if sol[k] != a[j][k]:\n                        d += 1\n                if d > 1:\n                    found = False\n                    break\n            if found:\n                break\n        if found:\n            break\n    print(sol) if found else print(-1)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = [input() for _ in range(n)]\n    found = False\n    for i in range(m):\n        for c in range(26):\n            sol = list(a[0])\n            sol[i] = chr(c + ord('a'))\n            sol = ''.join(sol)\n            found = True\n            for j in range(n):\n                d = 0\n                for k in range(m):\n                    if sol[k] != a[j][k]:\n                        d += 1\n                if d > 1:\n                    found = False\n                    break\n            if found:\n                break\n        if found:\n            break\n    print(sol) if found else print(-1)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = []\n    for i in range(n):\n        s = str(input())\n        l.append(s)\n    for z in range(m):\n        for i in range(26):\n            k = list(l[0])\n            k[z] = chr(ord('a') + i)\n            found = True\n            for j in range(n):\n                d = 0\n                for x in range(m):\n                    if l[j][x] != k[x]:\n                        d += 1\n                if d > 1:\n                    found = False\n                    break\n            if found:\n                break\n        if found:\n            break\n    if found:\n        print(''.join(k))\n    else:\n        print(-1)", "from math import *\nt = int(input())\nwhile t > 0:\n    (n, m) = [int(x) for x in input().split()]\n    a = []\n    for i in range(n):\n        s = input()\n        a.append(s)\n    for k in range(m):\n        for l in range(26):\n            s = ''\n            for i in range(m):\n                if i == k:\n                    s = s + chr(l + 97)\n                else:\n                    s = s + a[0][i]\n            flag = 0\n            for i in range(n):\n                c = 0\n                for j in range(m):\n                    if a[i][j] != s[j]:\n                        c += 1\n                    if c > 1:\n                        flag = 1\n                        break\n                if flag == 1:\n                    break\n            if flag == 0:\n                ans = s\n                break\n        if flag == 0:\n            break\n    if flag == 0:\n        print(s)\n    else:\n        print(-1)\n    t -= 1", "from collections import defaultdict\nt = int(input())\n\ndef can(m, n, ans, A):\n    found = True\n    for i in range(n):\n        diff = 0\n        for j in range(m):\n            if ans[j] != A[i][j]:\n                diff += 1\n            if diff > 1:\n                found = False\n                break\n    return found\nfor _ in range(t):\n    (n, m) = map(int, input().split(' '))\n    A = [input() for _ in range(n)]\n    found = False\n    for i in range(m):\n        for j in range(26):\n            ans = list(A[0])\n            ans[i] = chr(ord('a') + j)\n            found = can(m, n, ans, A)\n            if found:\n                break\n        if found:\n            break\n    if found:\n        print(''.join(ans))\n    else:\n        print(-1)", "T = int(input())\n\ndef fn_check(arr, n, m):\n    first = arr[0]\n    res = []\n    for i in range(m):\n        for j in range(26):\n            res.append(first[:i] + chr(j + 97) + first[i + 1:])\n    for s in res:\n        found = True\n        for c in arr[1:]:\n            count = 0\n            for j in range(m):\n                if s[j] != c[j]:\n                    count += 1\n            if count > 1:\n                found = False\n        if found:\n            return s\n    return -1\nfor t in range(T):\n    (n, m) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        arr.append(input())\n    print(fn_check(arr, n, m))", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split(' '))\n    A = [input() for _ in range(n)]\n    found = False\n    for i in range(m):\n        for j in range(26):\n            ans = list(A[0])\n            ans[i] = chr(ord('a') + j)\n            found = True\n            for k in range(n):\n                diff = 0\n                for p in range(m):\n                    if ans[p] != A[k][p]:\n                        diff += 1\n                    if diff > 1:\n                        found = False\n                        break\n            if found:\n                break\n        if found:\n            break\n    if found:\n        print(''.join(ans))\n    else:\n        print(-1)", "def diff(a, b):\n    d = 0\n    for i in range(len(a)):\n        if a[i] != b[i]:\n            d += 1\n    return d\nfor i in range(int(input())):\n    (n, m) = map(int, input().split())\n    strings = [input() for _ in range(n)]\n    ans = list(strings[0])\n    find = True\n    for j in range(m):\n        ans = list(strings[0])\n        for k in range(26):\n            ans[j] = chr(ord('a') + k)\n            count = 0\n            for s in strings:\n                if diff(ans, s) <= 1:\n                    count += 1\n            if count == n:\n                find = False\n                break\n        if not find:\n            break\n    if not find:\n        print(''.join(ans))\n    else:\n        print(-1)", "def comparision(st1, st2, m):\n    error = 0\n    for i in range(m):\n        if st1[i] != st2[i]:\n            error += 1\n    return error <= 1\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    for i in range(n):\n        s = list(input())\n        a.append(s)\n    correct_ans = []\n    for j in range(m):\n        ans = a[0].copy()\n        for k in range(26):\n            ans[j] = chr(97 + k)\n            count = 0\n            for elem in a:\n                if comparision(ans, elem, m):\n                    count += 1\n            if count == n:\n                correct_ans = ans\n                break\n        if correct_ans:\n            break\n    if correct_ans:\n        print(''.join(correct_ans))\n    else:\n        print(-1)", "def true_str(s1, s2, m):\n    true_s = 0\n    for i in range(m):\n        if s1[i] != s2[i]:\n            true_s += 1\n    return true_s <= 1\n\ndef all_str(s, m):\n    all_s = []\n    for i in range(m):\n        for j in range(ord('a'), ord('z') + 1):\n            all_s.append(s[:i] + chr(j) + s[i + 1:])\n    return all_s\nt = int(input())\nfor k in range(t):\n    (n, m) = list(map(int, input().split()))\n    list_str = []\n    for i in range(n):\n        list_str.append(input())\n    lh = all_str(list_str[0], m)\n    ans = False\n    i = 0\n    while i < len(lh) and (not ans):\n        j = 0\n        count_true = 0\n        while j < n:\n            if true_str(lh[i], list_str[j], m):\n                count_true += 1\n            j += 1\n        if count_true == n:\n            ans = True\n        else:\n            i += 1\n    if ans:\n        print(lh[i])\n    else:\n        print(-1)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    first = input()\n    words = dict()\n    for i in range(m):\n        for j in range(26):\n            key = first[:i] + chr(97 + j) + first[i + 1:]\n            words[key] = 0\n    for i in range(1, n):\n        word = input()\n        for x in words:\n            t = 0\n            for j in range(m):\n                if word[j] != x[j]:\n                    t += 1\n            if t <= 1:\n                words[x] += 1\n    for x in words:\n        if words[x] == n - 1:\n            print(x)\n            break\n    else:\n        print(-1)", "from collections import defaultdict\n\ndef check(ans):\n    for i in range(n):\n        diff = 0\n        for j in range(m):\n            if arr_str[i][j] != ans[j]:\n                diff += 1\n        if diff >= 2:\n            return False\n    return True\n\ndef solve():\n    for i in range(n):\n        for j in range(m):\n            (ans, a) = (arr_str[i].copy(), ord('a'))\n            for char in range(a, a + 26):\n                ans[j] = chr(char)\n                if check(ans):\n                    return ''.join(ans)\n    return -1\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    arr_str = defaultdict(list)\n    for i in range(n):\n        arr_str[i] = list(input())\n    print(solve())", "def good(ans):\n    for i in range(n):\n        count = 0\n        for j in range(m):\n            if ans[j] != s[i][j]:\n                count += 1\n        if count > 1:\n            return 0\n    return 1\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = [0] * n\n    for i in range(n):\n        s[i] = input()\n    ans = '-1'\n    fg = 0\n    for i in range(n):\n        for j in range(m):\n            for k in range(ord('a'), ord('z') + 1):\n                temp = s[i][:j] + chr(k) + s[i][j + 1:]\n                if good(temp):\n                    ans = temp\n                    fg = 1\n                    break\n            if fg == 1:\n                break\n        if fg == 1:\n            break\n    print(ans)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, m) = map(int, input().split())\n    l = []\n    for i in range(n):\n        l.append(input())\n    f = 0\n    for i in range(m):\n        x = []\n        for j in range(m):\n            x.append(l[0][j])\n        for j in range(26):\n            x[i] = chr(97 + j)\n            c = 0\n            for k in range(n):\n                c1 = 0\n                for y in range(m):\n                    if x[y] != l[k][y]:\n                        c1 += 1\n                if c1 <= 1:\n                    c += 1\n            if c == n:\n                for k in range(m):\n                    f = 1\n                    print(x[k], end='')\n                print()\n                break\n        if f == 1:\n            break\n    if f == 0:\n        print(-1)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    if n == 1:\n        print(input())\n    else:\n        ls = []\n        for _ in range(n):\n            ls.append(list(input()))\n        first = ls[0]\n        flag = 0\n        ans = []\n        for i in range(m):\n            tem = first[i]\n            for char in range(97, 123):\n                first[i] = chr(char)\n                ma = 0\n                count = 0\n                for j in range(1, n):\n                    count = 0\n                    for k in range(m):\n                        if first[k] != ls[j][k]:\n                            count += 1\n                    ma = max(ma, count)\n                if ma == 0 or ma == 1:\n                    flag = 1\n                    ans = first\n                    break\n                if flag == 1:\n                    break\n            if flag == 1:\n                break\n            first[i] = tem\n        if flag == 1:\n            print(''.join(ans))\n        else:\n            print(-1)"]