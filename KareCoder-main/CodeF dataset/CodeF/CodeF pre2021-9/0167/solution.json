["for _ in [*open(0)][2::2]:\n    arr = list(map(int, _.split()))\n    print(['NO', 'YES'][len([i for i in arr if i % 2 == 0]) in [0, len(arr)]])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    field = list(map(int, input().split()))\n    min_lvl = min(field)\n    for i in range(len(field)):\n        field[i] = field[i] - min_lvl\n    var_check = True\n    div = None\n    for i in range(len(field)):\n        if i == 0:\n            div = field[i] % 2\n            continue\n        if field[i] % 2 != div:\n            var_check = False\n            break\n    if var_check:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if len(a) == 1:\n        print('YES')\n    else:\n        check = 1\n        for i in range(1, n):\n            if (a[i] - a[0]) % 2 != 0:\n                check = 0\n                break\n        if check == 0:\n            print('NO')\n        else:\n            print('YES')", "t = int(input())\nfor i in range(t):\n    col = int(input())\n    even = odd = 0\n    ele = input()\n    arr = ele.split()\n    for i in range(0, len(arr)):\n        arr[i] = int(arr[i])\n    for q in range(col):\n        if arr[q] % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    if odd == col or even == col:\n        print('YES')\n    else:\n        print('NO')", "def tetris(array):\n    num = array[0] % 2\n    for a in array:\n        if a % 2 != num:\n            return False\n    return True\ntestCases = int(input())\nfor t in range(testCases):\n    n = int(input())\n    array = list(map(int, input().split()))\n    if tetris(array):\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    n = int(input())\n    b = True\n    c = [int(x) for x in input().split()]\n    a = c[0] % 2\n    for j in range(len(c)):\n        if c[j] % 2 != a:\n            print('NO')\n            b = False\n            break\n    if b:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = input().split()\n    lst = [int(i) for i in lst]\n    for i in range(1, n):\n        if lst[i] % 2 != lst[i - 1] % 2:\n            print('NO')\n            break\n    else:\n        print('YES')", "t = int(input())\n\ndef q(l, n):\n    if n == 1:\n        return 'YES'\n    else:\n        for i in range(n - 1):\n            if l[i] % 2 != l[i + 1] % 2:\n                return 'NO'\n        return 'YES'\nfor i in range(t):\n    n = int(input())\n    i = input().split()\n    l = list(map(int, i))\n    print(q(l, n))", "for i in range(int(input())):\n    n = int(input())\n    cnto = sum(list(map(lambda x: int(x) % 2, input().split())))\n    print('YES' if cnto == 0 or cnto == n else 'NO')", "import sys\n\ndef solve():\n    sys.stdin.readline().rstrip('\\n')\n    arr = sys.stdin.readline().rstrip('\\n').split(' ')\n    arr = [int(_) for _ in arr]\n    res = 0\n    for x in arr:\n        if x % 2 == 0:\n            res += 1\n    if res == 0 or res == len(arr):\n        print('YES')\n    else:\n        print('NO')\nT = int(sys.stdin.readline().rstrip('\\n'))\nfor i in range(T):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    o = 0\n    e = 0\n    for i in a:\n        if i & 1:\n            o += 1\n        else:\n            e += 1\n    if o == n or e == n:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = 'NO'\n    l = list(map(int, input().split()))\n    if all((i % 2 == l[0] % 2 for i in l)):\n        a = 'YES'\n    print(a)", "for _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    c = 0\n    for i in range(len(lst)):\n        if lst[0] % 2 == 0:\n            if lst[i] % 2 == 0:\n                c += 1\n        elif lst[i] % 2 != 0:\n            c += 1\n    if c == len(lst):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    blocks = list(map(int, input().split()))\n    count = 0\n    for x in range(n):\n        if blocks[x] % 2 == 0:\n            count += 1\n    if count < n and count != 0:\n        print('NO')\n    else:\n        print('YES')", "p = int(input())\nwhile p:\n    (n, x) = (int(input()), 0)\n    a = list(map(int, input().split()))\n    m = min(a)\n    for i in range(n):\n        a[i] -= m\n    for i in range(n):\n        if a[i] % 2:\n            x = 1\n            break\n    if x:\n        print('NO')\n    else:\n        print('YES')\n    p -= 1", "for test in range(int(input())):\n    col = int(input())\n    sps = input().split()\n    for a in range(len(sps)):\n        sps[a] = int(sps[a])\n    num = max(sps)\n    out_qdr = 0\n    for n in sps:\n        if n == num:\n            continue\n        out_qdr = (num - n) % 2\n        if out_qdr > 0:\n            print('NO')\n            break\n    if out_qdr == 0:\n        print('YES')", "for i in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    if all((i % 2 == x[0] % 2 for i in x)):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = tuple(map(int, input().split()))\n    f = True\n    for i in range(n - 1):\n        if abs(lst[i] - lst[i + 1]) % 2:\n            print('NO')\n            f = False\n            break\n    if f:\n        print('YES')", "n = int(input())\nfor x in range(n):\n    dim = int(input())\n    size = list(map(int, input().split()))\n    y = min(size)\n    size = [x - y for x in size]\n    i = 1\n    if size == [0] * dim:\n        i = 1\n    else:\n        for a in size:\n            if a % 2 != 0:\n                i = 0\n                break\n    if i == 0:\n        print('NO')\n    else:\n        print('YES')", "def isAllEven(initialColumns):\n    for i in initialColumns:\n        if i % 2 != 0:\n            return False\n    return True\n\ndef isAllOdd(initialColumns):\n    for i in initialColumns:\n        if i % 2 == 0:\n            return False\n    return True\n\ndef canFinilize(nColum, initialColumns):\n    if nColum <= 1:\n        return True\n    elif initialColumns[0] % 2 == 0:\n        return isAllEven(initialColumns)\n    else:\n        return isAllOdd(initialColumns)\nt = int(input())\nfor i in range(t):\n    nColum = int(input())\n    initialColumns = [int(x) for x in input().split()]\n    if canFinilize(nColum, initialColumns):\n        print('YES')\n    else:\n        print('NO')", "n_tests = int(input())\nfor n in range(n_tests):\n    n_col = int(input())\n    h = [int(x) for x in input().split()]\n    if n_col == 1:\n        print('YES')\n    else:\n        if h[0] % 2 == 0:\n            even = True\n        else:\n            even = False\n        possible = True\n        for i in h:\n            if even:\n                if i % 2 != 0:\n                    print('NO')\n                    possible = False\n                    break\n                else:\n                    continue\n            elif i % 2 != 0:\n                continue\n            else:\n                print('NO')\n                possible = False\n                break\n        if possible:\n            print('YES')", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    array = input().split(' ')\n    intArray = [int(numericString) for numericString in array]\n    first = intArray[0] % 2\n    isPossible = True\n    for i in intArray:\n        if i % 2 == first:\n            continue\n        else:\n            isPossible = False\n            break\n    if isPossible:\n        print('YES')\n    else:\n        print('NO')", "cases_count = int(input())\nfor case in range(cases_count):\n    col_count = int(input())\n    cols = [int(i) for i in input().split(' ')]\n    if all((height % 2 == 0 for height in cols)) or all((height % 2 == 1 for height in cols)):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    colunasAltura = [int(p) for p in input().split()]\n    impar = 0\n    par = 0\n    for i in colunasAltura:\n        if i % 2 == 0:\n            par += 1\n        else:\n            impar += 1\n    if par > 0 and impar > 0:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    cc = int(input())\n    a = [int(x) for x in str(input()).split(' ')]\n    m = min(a)\n    a = map(lambda x: x - m, a)\n    b = any((x % 2 != 0 for x in a))\n    if b:\n        print('NO')\n    else:\n        print('YES')", "n_tests = int(input())\nfor i in range(n_tests):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    min_level = min(arr)\n    result = list(filter(lambda l: (l - min_level) % 2 != 0, arr))\n    if len(result):\n        print('NO')\n    else:\n        print('YES')", "def verify(arr, parity):\n    if len(arr) > 1:\n        for i in range(len(arr)):\n            if arr[i] % 2 != parity:\n                return False\n    return True\n\ndef main():\n    ncases = int(input())\n    for i in range(ncases):\n        ncol = int(input())\n        arr = [int(i) for i in input().split()]\n        parity = arr[0] % 2\n        if verify(arr, parity):\n            print('YES')\n        else:\n            print('NO')\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    odd = 0\n    even = 0\n    for ai in a:\n        if ai % 2:\n            odd = 1\n        elif not ai % 2:\n            even = 1\n    if even and odd:\n        print('NO')\n    else:\n        print('YES')", "for i in range(int(input())):\n    n = int(input())\n    cnto = sum(list(map(lambda x: int(x) % 2, input().split())))\n    print('YES' if cnto == 0 or cnto == n else 'NO')", "def main():\n    for _ in range(int(input())):\n        input()\n        if len(set((int(i) % 2 for i in input().split()))) == 1:\n            print('YES')\n        else:\n            print('NO')\nmain()", "t = int(input())\nfor i in range(t):\n    flag = True\n    n = int(input())\n    a = list(map(int, input().split()))\n    for j in range(n - 1):\n        if a[j] % 2 != a[j + 1] % 2:\n            print('NO')\n            flag = False\n            break\n    if flag:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    flag = 0\n    for i in a:\n        if i % 2 != a[0] % 2:\n            flag = 1\n    if flag:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    flag = False\n    for i in range(n - 1):\n        t = abs(arr[i] - arr[i + 1])\n        if t != 0 and t % 2:\n            print('NO')\n            flag = True\n            break\n    if not flag:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    flag = False\n    for i in range(n - 1):\n        t = abs(arr[i] - arr[i + 1])\n        if t != 0 and t % 2:\n            print('NO')\n            flag = True\n            break\n    if not flag:\n        print('YES')", "for run in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    if lst[0] % 2 == 0:\n        odd = False\n    else:\n        odd = True\n    for i in range(1, n):\n        if odd and lst[i] % 2 != 1:\n            odd = 'x'\n            print('NO')\n            break\n        if odd == False and lst[i] % 2 != 0:\n            odd = 'x'\n            print('NO')\n            break\n    if odd != 'x':\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    o = sum((x % 2 for x in a))\n    e = n - o\n    if o == 0 or e == 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    if li[0] % 2 == 0:\n        c = 0\n        for i in range(1, n):\n            if li[i] % 2 == 1:\n                c = 1\n                break\n        if c == 0:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        c = 0\n        for i in range(1, n):\n            if li[i] % 2 == 0:\n                c = 1\n                break\n        if c == 0:\n            print('YES')\n        else:\n            print('NO')", "answer = []\nfor t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    parity = [0] * n\n    for i in range(n):\n        if a[i] % 2 == 0:\n            parity[i] = 1\n    if sum(parity) == 0 or sum(parity) == n:\n        answer.append('YES')\n    else:\n        answer.append('NO')\nprint('\\n'.join(answer))", "for _ in range(int(input())):\n    n = int(input())\n    tetris = list(map(int, input().split()))\n    odd = 0\n    even = 0\n    for x in tetris:\n        if x % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    if odd > 0 and even == 0:\n        print('YES')\n    elif odd == 0 and even > 0:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    n = int(input())\n    cnto = sum(list(map(lambda x: int(x) % 2, input().split())))\n    print('YES' if cnto == 0 or cnto == n else 'NO')", "res = ''\nfor _ in range(int(input())):\n    n = int(input())\n    heights = tuple(map(int, input().split()))\n    status = 'YES\\n'\n    for (i, v) in enumerate(heights):\n        if i == 0:\n            continue\n        elif abs(v - heights[i - 1]) % 2 != 0:\n            status = 'NO\\n'\n            break\n    res += status\nprint(res)", "for i in range(int(input())):\n    n = int(input())\n    cnto = sum(list(map(lambda x: int(x) % 2, input().split())))\n    print('YES' if cnto == 0 or cnto == n else 'NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = sum(list(map(lambda x: int(x) % 2, input().split())))\n    print('YES' if a == 0 or a == n else 'NO')", "t = int(input())\nfor _ in range(t):\n    n = input()\n    a = [int(x) % 2 for x in input().split()]\n    if a.count(0) and a.count(1):\n        print('NO')\n    else:\n        print('YES')", "from sys import exit\nfor _ in range(int(input())):\n    done = False\n    n = int(input())\n    a = [int(_) for _ in input().split()]\n    parity = a[0] % 2\n    for i in range(1, n):\n        if a[i] % 2 != parity:\n            print('NO')\n            done = True\n            break\n    if not done:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(n):\n        a[i] %= 2\n    k = list(set(a))\n    if len(k) == 1:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    f = 0\n    for i in range(len(a)):\n        if abs(a[i] - a[i - 1]) % 2 != 0:\n            f = 1\n            break\n    print('NO' if f == 1 else 'YES')", "def tetris():\n    cases = int(input())\n    for case in range(cases):\n        columns_num = input()\n        columns = list(map(int, input().split()))\n        highest = max(columns)\n        found = False\n        for column in columns:\n            if (highest - column) % 2 == 1:\n                found = True\n                break\n        if found:\n            print('NO')\n        else:\n            print('YES')\ntetris()", "n = int(input())\nl1 = []\nl2 = []\nfor i in range(n):\n    l1.append(int(input()))\n    l2.append([int(x) for x in input().split()])\nfor i in range(n):\n    a = 0\n    b = 0\n    for j in l2[i]:\n        if j % 2 == 0:\n            a = a + 1\n        else:\n            b = b + 1\n    if min(a, b) == 0:\n        print('YES')\n    else:\n        print('NO')\nprint()", "def gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\nfrom collections import Counter\nimport math\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = []\n    for i in range(n):\n        x.append(l[i] % 2)\n    if len(set(x)) == 1:\n        print('YES')\n    else:\n        print('NO')", "import sys\nfor i in range(int(sys.stdin.readline())):\n    s = int(sys.stdin.readline())\n    ls = [int(a) for a in sys.stdin.readline().split()]\n    par = 1\n    if ls[0] % 2 == 0:\n        par = 0\n    f = True\n    for i in ls:\n        if i % 2 != par:\n            f = False\n            break\n    if f:\n        print('YES')\n        continue\n    print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    odd = 0\n    even = 0\n    for i in a:\n        if i % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    if odd == 0 or even == 0:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    n = int(input())\n    print('YNEOS'[sum((int(i) % 2 for i in input().split())) % n != 0::2])", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    (n, a) = (int(input()), (int(i) for i in input().split()))\n    res = 'YES' if len(Counter((i & 1 for i in a))) == 1 else 'NO'\n    print(res)", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    a = list(map(int, input().split()))\n    check = True\n    for j in range(m - 1):\n        if abs(a[j] - a[j + 1]) % 2 == 1:\n            check = False\n    if check == False:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    if n == 1:\n        print('YES')\n        continue\n    a = max(l)\n    shan = 0\n    for e in l:\n        if a - e & 1:\n            shan = 1\n            break\n    if shan:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    od = 0\n    ev = 0\n    for i in li:\n        if i % 2 == 0:\n            ev += 1\n        else:\n            od += 1\n    if od > 0 and ev == 0:\n        print('YES')\n    elif ev > 0 and od == 0:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    n = int(input())\n    cnto = sum(list(map(lambda x: int(x) % 2, input().split())))\n    print('YES' if cnto == 0 or cnto == n else 'NO')", "def solve(n, iarr):\n    maxh = max(iarr)\n    for e in iarr:\n        if maxh - e & 1:\n            return 'NO'\n    return 'YES'\nT = int(input())\nfor t in range(T):\n    n = int(input())\n    iarr = list(map(int, input().split()))\n    print(solve(n, iarr))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input().split(' ')\n    for p in range(n):\n        s[p] = int(s[p])\n    modu = s[0] % 2\n    som = False\n    for k in range(n):\n        if s[k] % 2 != modu:\n            print('NO')\n            som = True\n            break\n    if not som:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    flag = True\n    m = max(arr)\n    for i in range(n):\n        if m - arr[i] & 1:\n            flag = False\n            break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    values = [int(x) for x in input().split()]\n    rem = values[0] % 2\n    for i in range(1, len(values)):\n        if rem != values[i] % 2:\n            print('NO')\n            break\n    else:\n        print('YES')", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    odd = 0\n    even = 0\n    for i in range(len(a)):\n        if a[i] % 2 == 0:\n            even = even + 1\n        else:\n            odd = odd + 1\n    if odd == len(a) or even == len(a):\n        print('YES')\n    else:\n        print('NO')\n    t = t - 1", "for i in range(int(input())):\n    n = int(input())\n    cnto = sum(list(map(lambda x: int(x) % 2, input().split())))\n    print('YES' if cnto == 0 or cnto == n else 'NO')", "for test_case in range(int(input())):\n    n_cols = int(input())\n    cols_list = list(map(int, input().split()[:n_cols]))\n    cols_list.sort()\n    diff_list = []\n    for i in range(n_cols - 1, 0, -1):\n        diff_list.append(cols_list[i] - cols_list[i - 1])\n    for j in diff_list:\n        if j % 2 != 0:\n            print('NO')\n            break\n    else:\n        print('YES')", "liczbaTestow = int(input())\nfor x in range(liczbaTestow):\n    liczbaKolumn = int(input())\n    napis = input().split()\n    if len(napis) == liczbaKolumn:\n        lista = []\n        for y in range(len(napis)):\n            lista.append(int(napis[y]))\n        najmniejsza = int(lista[0])\n        for z in range(len(lista)):\n            if int(lista[z]) < najmniejsza:\n                najmniejsza = int(lista[z])\n        nowaLista = []\n        for k in range(len(lista)):\n            if int(lista[k]) > 0:\n                nowaLista.append(int(lista[k]) - najmniejsza)\n        logika = True\n        for l in range(len(nowaLista)):\n            if int(nowaLista[l]) % 2 != 0:\n                logika = False\n                break\n        if logika == True:\n            print('YES')\n        else:\n            print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))[:n]\n    o = 0\n    e = 0\n    for i in lst:\n        if i % 2 == 0:\n            e = e + 1\n        else:\n            o = o + 1\n    if e == n or o == n:\n        print('YES')\n    else:\n        print('NO')", "def answer(n, ary):\n    for i in range(n - 1):\n        if ary[i] % 2 != ary[i + 1] % 2:\n            return 'NO'\n    return 'YES'\n\ndef main():\n    t = int(input())\n    n = [0] * t\n    ary = []\n    for j in range(t):\n        n[j] = int(input())\n        ary.append([int(i) for i in input().split()])\n    for j in range(t):\n        print(answer(n[j], ary[j]))\nmain()", "for i in range(int(input())):\n    n = int(input())\n    cnto = sum(list(map(lambda x: int(x) % 2, input().split())))\n    print('YES' if cnto == 0 or cnto == n else 'NO')", "for i in range(int(input())):\n    n = int(input())\n    cnto = sum(list(map(lambda x: int(x) % 2, input().split())))\n    print('YES' if cnto == 0 or cnto == n else 'NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = list(map(int, input().split()))\n    o = 0\n    for i in x:\n        if i % 2:\n            o += 1\n    if o == n or o == 0:\n        print('YES')\n    else:\n        print('NO')", "tap = int(input())\nfor _ in range(tap):\n    num = int(input())\n    x = list(map(int, input().split()))\n    o = 0\n    for i in x:\n        if i % 2:\n            o = o + 1\n    if o == num or o == 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in a:\n        if i % 2 != a[0] % 2:\n            print('NO')\n            break\n    else:\n        print('YES')", "pp = print\nli = list\ntp = tuple\nbg = 1000000000.0\nsg = -1000000000.0\nrd = round\nss = sorted\nsj = ''.join\nnl = '\\n'\n\ndef solve():\n    a = int(input())\n    b = [*map(int, input().split())]\n    for i in b:\n        if i % 2 != b[0] % 2:\n            print('NO')\n            break\n    else:\n        print('YES')\n\ndef main():\n    for i in range(int(input())):\n        solve()\nmain()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    odd = 0\n    even = 0\n    for i in range(n):\n        if l[i] % 2 == 0:\n            odd += 1\n        else:\n            even += 1\n    if odd == n or even == n:\n        print('YES')\n    else:\n        print('NO')", "cases = int(input())\nwhile cases:\n    cases -= 1\n    num = int(input())\n    arr = list(map(int, input().split()))\n    odds = sum((1 for i in arr if i % 2 != 0))\n    if odds == 0 or odds == num:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    sum = 0\n    for i in l:\n        if i % 2 == 0:\n            ans += 1\n        elif i % 2 != 0:\n            sum += 1\n    if ans == n or sum == n:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    p = 0\n    for i in l:\n        p += i % 2\n    if p == 0 or p == n:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    p = a[0] % 2\n    full = True\n    for i in a[1:]:\n        if i % 2 != p:\n            full = False\n    if full:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    n = int(input())\n    h = sum(map(lambda i: int(i) % 2, input().split()))\n    if h == 0 or h == n:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t:\n    (even, odd) = (0, 0)\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(n):\n        if a[i] % 2 == 0:\n            even = 1\n        else:\n            odd = 1\n    if even + odd == 1:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "for cases in range(int(input())):\n    k = int(input())\n    lst = list(map(int, input().split()))\n    odd = []\n    even = []\n    for i in range(k):\n        if lst[i] % 2 == 0:\n            even.append(lst[i])\n        else:\n            odd.append(lst[i])\n    if len(odd) == k:\n        print('YES')\n    elif len(even) == k:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    flag = 0\n    if n == 1:\n        print('YES')\n    else:\n        m = min(a)\n        for i in a:\n            if m - i != 0 and abs(m - i) % 2 != 0:\n                flag = 1\n                break\n            if abs(m - i) == 1:\n                flag = 1\n                break\n        if flag == 1:\n            print('NO')\n        else:\n            print('YES')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if a[0] % 2 == 0:\n        k = 0\n    else:\n        k = 1\n    bool = True\n    for x in a:\n        if (x + k) % 2 != 0:\n            print('NO')\n            bool = False\n            break\n    if bool:\n        print('YES')", "def fun(ls, n):\n    mn = min(ls)\n    for i in ls:\n        if (i - mn) % 2 != 0:\n            print('NO')\n            return\n    print('YES')\nT = int(input())\nfor _ in range(T):\n    n = list(input())\n    ls = list(map(int, input().split()))\n    fun(ls, n)", "t = int(input())\nwhile t:\n    even = odd = 0\n    n = int(input())\n    l = list(map(int, input().split()))\n    for i in l:\n        if i % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    if even > 0 and odd > 0:\n        print('NO')\n    else:\n        print('YES')\n    t -= 1", "for i in range(int(input())):\n    a = int(input())\n    l = list(map(int, input().split()))\n    if all([i % 2 == 0 for i in l]) or all([i % 2 != 0 for i in l]):\n        print('YES')\n    else:\n        print('NO')", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    z = list(map(int, input().split()))\n    z = sorted(z)\n    l = []\n    p = min(z)\n    l = [p] * n\n    for i in range(n):\n        l[i] = z[i] - l[i]\n    k = 0\n    for i in range(n):\n        k = math.gcd(k, l[i])\n    if k % 2 == 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor inh in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    od = False\n    ev = False\n    if a[0] % 2 == 0:\n        ev = True\n    else:\n        od = True\n    ans = True\n    if ev:\n        for i in range(0, n):\n            k = a[i]\n            if k % 2 != 0:\n                ans = False\n                break\n    if od:\n        for i in range(0, n):\n            k = a[i]\n            if k % 2 == 0:\n                ans = False\n                break\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\n\ndef in_int():\n    return int(input())\n\ndef in_list():\n    return list(map(int, input().split()))\n\ndef in_str():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef in_ints():\n    return map(int, input().split())\nt = in_int()\nfor tt in range(t):\n    n = in_int()\n    a = in_list()\n    odd = False\n    even = False\n    for x in a:\n        if x % 2 == 0:\n            even = True\n        else:\n            odd = True\n    if not (odd and even):\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    n = int(input())\n    cnto = sum(list(map(lambda x: int(x) % 2, input().split())))\n    print('YES' if cnto == 0 or cnto == n else 'NO')", "for i in range(int(input())):\n    n = int(input())\n    cnto = sum(list(map(lambda x: int(x) % 2, input().split())))\n    print('YES' if cnto == 0 or cnto == n else 'NO')"]