["from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    input()\n    (n, m) = map(int, input().split())\n    a = []\n    flag = 'YES'\n    for _ in range(m):\n        (b, c) = map(int, input().split())\n        a.append([c, b])\n    if m % 2:\n        print('NO')\n        continue\n    a.sort()\n    for x in range(0, m, 2):\n        if a[x][1] == a[x + 1][1]:\n            if (a[x + 1][0] - a[x][0]) % 2 == 0:\n                flag = 'NO'\n                break\n        elif (a[x + 1][0] - a[x][0]) % 2 == 1:\n            flag = 'NO'\n            break\n        if x != 0 and a[x - 1][0] == a[x][0]:\n            flag = 'NO'\n            break\n    print(flag)", "def puzzle(allPoint):\n    n = len(allPoint)\n    if n % 2 == 1:\n        return 'NO'\n    allPoint.sort()\n    while allPoint:\n        (l1, r1) = allPoint.pop()\n        (l2, r2) = allPoint.pop()\n        if l1 == l2:\n            continue\n        if (l1 + r1) % 2 == (l2 + r2) % 2:\n            return 'NO'\n        if allPoint and l2 == allPoint[-1][0]:\n            return 'NO'\n    return 'YES'\nt = int(input())\nfor qwq in range(t):\n    input()\n    ll = list(map(int, input().split()))\n    allPoint = []\n    for i in range(ll[1]):\n        cin = list(map(int, input().split()))\n        allPoint.append((cin[1], cin[0]))\n    print(puzzle(allPoint))", "t = int(input())\nfor ti in range(t):\n    tr = input()\n    (n, m) = map(int, input().split())\n    l = []\n    for i in range(m):\n        (a, b) = map(int, input().split())\n        l.append((a, b))\n    l.sort(key=lambda x: x[1])\n    p = (-1, -1)\n    sta = 0\n    ans = True\n    for i in l:\n        if sta == 0:\n            if p[1] == i[1]:\n                ans = False\n                break\n            p = i\n            sta = 1\n        else:\n            if i[0] != p[0]:\n                if p[1] - i[1] & 1:\n                    ans = False\n                    break\n                else:\n                    sta = 0\n            elif p[1] - i[1] & 1:\n                sta = 0\n            elif p[1] == i[1]:\n                sta = 0\n            else:\n                ans = False\n                break\n            p = i\n    if sta:\n        ans = False\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    non = input()\n    (n, m) = map(int, input().split())\n    blocks = []\n    for b in range(m):\n        (x, y) = map(int, input().split())\n        blocks.append((x, y))\n    if m % 2 == 1:\n        print('NO')\n        continue\n    blocks.sort(key=lambda x: x[1])\n    i = 0\n    while i < m - 1:\n        (block1, block2, block3) = (blocks[i], blocks[i + 1], (0, -1))\n        if i < m - 2:\n            block3 = blocks[i + 2]\n        if block1[1] == block2[1]:\n            i += 2\n            continue\n        elif block2[1] == block3[1]:\n            print('NO')\n            break\n        if block1[0] == block2[0]:\n            if (block2[1] - block1[1]) % 2 == 0:\n                print('NO')\n                break\n            else:\n                i += 2\n                continue\n        elif (block2[1] - block1[1]) % 2 == 1:\n            print('NO')\n            break\n        else:\n            i += 2\n            continue\n    if i >= m:\n        print('YES')", "for _ in range(int(input())):\n    input()\n    (n, m) = map(int, input().split())\n    a = []\n    f = 1\n    for i in range(m):\n        (x, y) = map(int, input().split())\n        a.append([y, x])\n    if m % 2:\n        print('NO')\n        continue\n    a.sort()\n    for i in range(0, m, 2):\n        if a[i][1] == a[i + 1][1]:\n            if (a[i + 1][0] - a[i][0]) % 2 == 0:\n                f = 0\n                break\n        elif (a[i + 1][0] - a[i][0]) % 2 == 1:\n            f = 0\n            break\n        if i != 0 and a[i - 1][0] == a[i][0]:\n            f = 0\n            break\n    if f == 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    space = input()\n    (n, m) = map(int, input().split())\n    block = []\n    for i in range(m):\n        block.append(list(map(int, input().split())))\n    block.sort(key=lambda x: x[1])\n    before = -1\n    if m % 2 != 0:\n        print('NO')\n        continue\n    for ind in range(m):\n        (i, j) = block[ind]\n        if ind < m - 1:\n            if before != -1 and block[ind][1] == block[ind + 1][1]:\n                break\n        if before == -1:\n            before = (i + j) % 2\n        elif (i + j) % 2 == 1 - before:\n            before = -1\n        else:\n            break\n    if before == -1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    input()\n    (n, m) = map(int, input().split())\n    a = []\n    flag = 'YES'\n    for _ in range(m):\n        (b, c) = map(int, input().split())\n        a.append([c, b])\n    if m % 2:\n        print('NO')\n        continue\n    a.sort()\n    for x in range(0, m, 2):\n        if a[x][1] == a[x + 1][1]:\n            if (a[x + 1][0] - a[x][0]) % 2 == 0:\n                flag = 'NO'\n                break\n        elif (a[x + 1][0] - a[x][0]) % 2 == 1:\n            flag = 'NO'\n            break\n        if x != 0 and a[x - 1][0] == a[x][0]:\n            flag = 'NO'\n            break\n    print(flag)", "t = int(input())\nfor _ in range(t):\n    a = input()\n    (n, m) = map(int, input().split())\n    block = []\n    for i in range(m):\n        (a, b) = map(int, input().split())\n        block.append((b, a))\n    block.sort()\n\n    def no():\n        print('NO')\n\n    def yes():\n        print('YES')\n\n    def main():\n        flag = 0\n        ne = 0\n        last = 0\n        while ne < m:\n            if ne + 1 < m and block[ne][0] == block[ne + 1][0]:\n                if flag == 0:\n                    last = block[ne][0]\n                    ne += 2\n                    continue\n                else:\n                    return no()\n            cur = block[ne][0]\n            if flag == 0:\n                flag = block[ne][1]\n            elif block[ne][1] != flag:\n                if (cur - last) % 2:\n                    return no()\n                else:\n                    flag = 0\n            elif (cur - last) % 2:\n                flag = 0\n            else:\n                return no()\n            last = block[ne][0]\n            ne += 1\n        if flag == 0:\n            return yes()\n        else:\n            return no()\n    main()", "for _ in range(int(input())):\n    input()\n    (n, m) = map(int, input().split())\n    a = []\n    flag = 'YES'\n    for _ in range(m):\n        (b, c) = map(int, input().split())\n        a.append([c, b])\n    if m % 2:\n        print('NO')\n        continue\n    a.sort()\n    for x in range(0, m, 2):\n        if a[x][1] == a[x + 1][1]:\n            if (a[x + 1][0] - a[x][0]) % 2 == 0:\n                flag = 'NO'\n                break\n        elif (a[x + 1][0] - a[x][0]) % 2 == 1:\n            flag = 'NO'\n            break\n        if x != 0 and a[x - 1][0] == a[x][0]:\n            flag = 'NO'\n            break\n    print(flag)", "try:\n    t = int(input())\n    for _ in range(t):\n        input()\n        (n, m) = [int(i) for i in input().split()]\n        if m % 2 == 1:\n            for iii in range(m):\n                input()\n            print('NO')\n            continue\n        block = {}\n        ind = []\n        for iii in range(m):\n            (a, b) = [int(i) - 1 for i in input().split()]\n            ind.append(b)\n            if b in block:\n                block[b] = 'b'\n            elif a == 0:\n                block[b] = 'u'\n            else:\n                block[b] = 'd'\n        ind.sort()\n        sit = 'b'\n        (prei, pind) = (-1, -1)\n        for i in ind:\n            if prei == i:\n                continue\n            if sit + block[i] == 'bb':\n                continue\n            elif sit + block[i] in ('uu', 'dd'):\n                if (i - pind) % 2 == 1:\n                    print('NO')\n                    break\n                else:\n                    sit = 'b'\n            elif sit + block[i] in ('ud', 'du'):\n                if (i - pind) % 2 == 0:\n                    print('NO')\n                    break\n                else:\n                    sit = 'b'\n            elif sit + block[i] == 'bd':\n                sit = 'u'\n            elif sit + block[i] == 'bu':\n                sit = 'd'\n            elif sit + block[i] in ('ub', 'db'):\n                print('NO')\n                break\n            (pind, prei) = (i, i)\n        else:\n            if sit == 'b':\n                print('YES')\n            else:\n                print('NO')\nexcept Exception as e:\n    print(e)", "import sys\n\ndef input():\n    return sys.stdin.readline().strip()\n\ndef mint():\n    return int(input())\n\ndef mints():\n    return map(int, input().split())\nfor t in range(mint()):\n    input()\n    (n, m) = mints()\n    a = [None] * m\n    for i in range(m):\n        (r, c) = mints()\n        a[i] = (c, r - 1)\n    a.sort()\n    b = []\n    i = 0\n    while i < m:\n        (c, r) = a[i]\n        i += 1\n        x = 1 << r\n        if i < m and a[i][0] == c:\n            x |= 1 << a[i][1]\n            i += 1\n        b.append((c, x))\n    bad = False\n    while len(b) > 0:\n        (c, p) = b[-1]\n        if p == 3:\n            b.pop()\n        elif len(b) < 2 or b[-2][1] != p ^ (c - b[-2][0] + 1) % 2 * 3:\n            bad = True\n            break\n        else:\n            b.pop()\n            b.pop()\n    if bad:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    input()\n    (n, m) = map(int, input().split())\n    a = []\n    f = 1\n    for i in range(m):\n        (x, y) = map(int, input().split())\n        a.append([y, x])\n    if m % 2:\n        print('NO')\n        continue\n    a.sort()\n    for i in range(0, m, 2):\n        if a[i][1] == a[i + 1][1]:\n            if (a[i + 1][0] - a[i][0]) % 2 == 0:\n                f = 0\n                break\n        elif (a[i + 1][0] - a[i][0]) % 2 == 1:\n            f = 0\n            break\n        if i != 0 and a[i - 1][0] == a[i][0]:\n            f = 0\n            break\n    if f == 1:\n        print('YES')\n    else:\n        print('NO')", "ans = []\n\ndef read():\n    return int(input())\n\ndef readline():\n    return list(map(int, input().split()))\n\ndef readmore():\n    return map(int, input().split())\nx_test = 1\nif x_test == 0:\n    x_test = 1\nelse:\n    x_test = int(input())\nfor _ in range(x_test):\n    emptyline = input()\n    (n, m) = readmore()\n    if m % 2:\n        print('NO')\n        for i in range(m):\n            input()\n        continue\n    L = []\n    for i in range(m):\n        (y, x) = readmore()\n        L.append([x, y])\n    L.sort()\n    result = 'YES'\n    k = 1\n    for i in range(1, m):\n        if k == 0:\n            k = 1\n            continue\n        dx = L[i][0] - L[i - 1][0]\n        dy = L[i][1] - L[i - 1][1]\n        c1 = dx % 2\n        c2 = dy % 2\n        if c1 ^ c2:\n            if i + 1 < m and L[i + 1][0] == L[i][0]:\n                result = 'NO'\n                break\n            k = 0\n        else:\n            result = 'NO'\n            break\n    if k:\n        result = 'NO'\n    print(result)\nans = str(ans)\nlls = len(ans)\n_ans = ans[1:lls - 1].replace(', ', '\\n')\nprint(_ans)", "t = int(input())\nfor _ in range(t):\n    input()\n    (n, m) = map(int, input().split())\n    arr = []\n    for i in range(m):\n        (a, b) = map(int, input().split())\n        arr.append([b, a])\n    if m % 2 == 1:\n        print('NO')\n    else:\n        black = 0\n        white = 0\n        su = []\n        for i in arr:\n            if (i[0] + i[1]) % 2 == 0:\n                black = black + 1\n            else:\n                white = white + 1\n            su.append(i[0] + i[1])\n        if black != white:\n            print('NO')\n        else:\n            sta = []\n            su.sort()\n            boo = True\n            for i in range(len(su)):\n                if len(sta) == 0:\n                    sta.append(su[i])\n                elif abs(sta[0] - su[i]) % 2 == 1:\n                    sta.pop()\n                else:\n                    boo = False\n                    break\n            if boo == False:\n                print('NO')\n            else:\n                jj = []\n                arr.sort()\n                cnt = 0\n                for i in arr:\n                    cnt = cnt + 1\n                    if len(jj) == 0:\n                        jj.append(i[0])\n                    elif jj[0] != i[0]:\n                        jj.pop()\n                        jj.append(i[0])\n                    elif cnt % 2 == 1:\n                        boo = False\n                        break\n                if boo == False:\n                    print('NO')\n                else:\n                    print('YES')"]