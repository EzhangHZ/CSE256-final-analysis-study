["t = int(input())\nk = []\nfor i in range(1667):\n    if i % 3 != 0 and i % 10 != 3:\n        k.append(i)\nfor i in range(t):\n    n = int(input())\n    print(k[n - 1])", "l = [1]\nfor i in range(1, 1667):\n    if i % 3 != 0 and i % 10 != 3:\n        l.append(i)\na = int(input())\nfor j in range(a):\n    j = int(input())\n    print(l[j])", "def init():\n    for i in range(10000):\n        if i % 3 != 0 and i % 10 != 3:\n            a.append(i)\n\ndef solve():\n    k = int(input())\n    print(a[k - 1])\na = []\ninit()\nt = int(input())\nwhile t:\n    t -= 1\n    solve()", "l = []\nfor i in range(1800):\n    b = str(i)\n    if i % 3 == 0 or b[-1] == '3':\n        pass\n    else:\n        l.append(i)\nfor _ in range(int(input())):\n    k = int(input())\n    print(l[k - 1])", "l = []\nfor i in range(1667):\n    b = str(i)\n    if i % 3 == 0 or b[-1] == '3':\n        pass\n    else:\n        l.append(i)\nfor _ in range(int(input())):\n    k = int(input())\n    print(l[k - 1])", "n = int(input())\nlst = []\ni = 1\nwhile len(lst) < 1001:\n    if i % 3 != 0 and i % 10 != 3:\n        lst.append(i)\n    i += 1\nfor i in range(n):\n    test = int(input())\n    print(lst[test - 1])", "numbers = []\nfor k in range(1, 2000):\n    if str(k)[-1] == '3' or k % 3 == 0:\n        pass\n    else:\n        numbers.append(k)\nt = int(input())\nK = []\nfor i in range(1, t + 1):\n    k = int(input())\n    K.append(k)\nfor k in K:\n    print(numbers[k - 1])", "(i, a) = (1, [])\nwhile len(a) < 1000:\n    if i % 3 != 0 and i % 10 != 3:\n        a.append(i)\n    i += 1\nfor t in range(int(input())):\n    print(a[int(input()) - 1])", "class Solution:\n\n    def __init__(self):\n        self.ans = []\n        i = 0\n        count = 1\n        while i != 1003:\n            if count % 3 != 0:\n                if str(count)[-1] != '3':\n                    i += 1\n                    self.ans.append(count)\n            count += 1\n\n    def find(self):\n        t = int(input())\n        for i in range(t):\n            x = int(input())\n            print(self.ans[x - 1])\nobj = Solution()\nobj.find()", "list1 = []\nfor i in range(1, 1700):\n    if i % 3 != 0 and i % 10 != 3:\n        list1.append(i)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print(list1[n - 1])", "t = int(input())\narr = []\nm = 2000\nfor j in range(1, m + 1):\n    if j % 3 != 0 and j % 10 != 3:\n        arr.append(j)\nfor i in range(t):\n    k = int(input())\n    print(arr[k - 1])", "t = int(input())\nc = []\nfor x in range(1, 1667):\n    if x % 10 != 3 and x % 3 != 0:\n        c.append(x)\nfor x in range(t):\n    print(c[int(input()) - 1])", "T = int(input())\ncount = 0\nnr = 0\nv = {}\nwhile count < 1000:\n    count += 1\n    nr += 1\n    if nr % 3 == 0 or nr % 10 == 3:\n        nr += 1\n    if nr % 3 == 0 or nr % 10 == 3:\n        nr += 1\n    v[count] = nr\nfor _ in range(T):\n    x = int(input())\n    print(v[x])", "t = int(input())\nlst = []\nk = 0\nfor j in range(1667):\n    if j % 3 != 0 and j % 10 != 3:\n        lst.append(j)\nlst1 = []\nfor i in range(t):\n    n = int(input())\n    lst1.append(n)\nfor i in range(t):\n    print(lst[lst1[i] - 1])", "t = int(input())\nk = []\nfor i in range(t):\n    k.append(int(input()))\ns = set(range(1, max(k) * 2))\ns.difference_update(set(range(3, max(k) * 2, 3)))\ns.difference_update(set(range(13, max(k) * 2, 10)))\ns = list(s)\ns.sort()\nfor c in k:\n    print(s[c - 1])", "t = int(input())\nindexes = [int(input()) for i in range(t)]\nposld = [0]\ncurrent_num = 1\nwhile len(posld) != max(indexes) + 1:\n    if current_num % 3 == 0 or current_num % 10 == 3:\n        pass\n    else:\n        posld.append(current_num)\n    current_num += 1\nfor i in range(t):\n    print(posld[indexes[i]])", "t = int(input())\nnumarr = []\nfor n in range(5000):\n    if n % 3 == 0:\n        pass\n    elif str(n)[-1] == '3':\n        pass\n    else:\n        numarr += [n]\nfor _ in range(t):\n    x = int(input())\n    print(numarr[x - 1])", "t = int(input())\nl = []\nfor i in range(t):\n    n = int(input())\n    l.append(n)\nm = max(l)\nk = []\ncount = 0\nj = 1\nwhile count < m:\n    p = list(str(j))\n    if j % 3 != 0:\n        if p[len(p) - 1] != '3':\n            k.append(j)\n            count += 1\n    j += 1\nfor i in range(t):\n    print(k[l[i] - 1])", "n = int(input())\nlist1 = []\nlist2 = []\nfor i in range(n):\n    num = int(input())\n    list1.append(num)\nfor j in range(1700):\n    strj = str(j)\n    if j % 3 == 0 or [*strj][-1] == '3':\n        pass\n    elif j % 3 != 0 or [*strj][-1] != '3':\n        list2.append(j)\nfor val in list1:\n    print(list2[val - 1])", "k = int(input())\nuser_input = []\nfor i in range(k):\n    user_input.append(int(input()))\nuser_max = max(user_input)\ntarget_array = []\ncurrent_num = 0\nfor i in range(user_max):\n    while True:\n        current_num += 1\n        if current_num % 3 != 0 and current_num % 10 != 3:\n            target_array.append(current_num)\n            break\nfor i in user_input:\n    print(target_array[i - 1])", "t = int(input())\nlike_numbers = []\nfor x in range(1, 1667):\n    if x % 3 != 0 and x % 100 % 10 != 3:\n        like_numbers.append(x)\nfor test in range(t):\n    test = int(input())\n    print(like_numbers[test - 1])", "def dislikeOfThrees():\n    check = [x for x in range(1667) if x % 3 and str(x)[-1] != '3']\n    n = int(input())\n    for i in range(n):\n        print(check[int(input()) - 1])\n    return\ndislikeOfThrees()", "t = int(input())\nlst = []\nfor i in range(1, 2000):\n    if i % 3 != 0 and i % 10 != 3:\n        lst.append(i)\nfor i in range(t):\n    n = int(input())\n    print(lst[n - 1])", "lst = []\nfor i in range(1, 1667):\n    if i % 3 != 0 and str(i)[-1] != '3':\n        lst.append(i)\n    else:\n        pass\nt = int(input())\nfor i in range(t):\n    ele = int(input())\n    print(lst[ele - 1])", "l = []\nfor i in range(1, 2001):\n    if i % 3 != 0 and i % 10 != 3:\n        l.append(i)\nfor _ in range(int(input())):\n    n = int(input())\n    print(l[n - 1])", "n = int(input())\nl = 1\ne = 1\nsequence = []\nwhile l <= 1000:\n    if e % 3 != 0 and e % 10 != 3:\n        sequence.append(e)\n        l += 1\n    e += 1\nfor i in range(n):\n    k = int(input())\n    print(sequence[k - 1])", "t = int(input())\narr = []\nfor i in range(1, int(10000.0)):\n    if len(arr) >= 1000:\n        break\n    if i % 3 == 0 or i % 10 == 3:\n        continue\n    else:\n        arr.append(i)\nfor i in range(t):\n    k = int(input())\n    print(arr[k - 1])", "arr = []\nfor i in range(2000):\n    if i % 10 != 3 and i % 3 != 0:\n        arr.append(i)\nfor _ in range(int(input())):\n    print(arr[int(input()) - 1])", "a = []\nnt = int(input())\nfor i in range(nt):\n    a.append(int(input()))\nl = []\nfor i in range(1667):\n    if i % 3 != 0 and str(i)[-1] != '3':\n        l.append(i)\nfor i in a:\n    print(l[i - 1])", "t = int(input())\nlis1 = []\nfor i in range(t):\n    a = int(input())\n    lis1.append(a)\nslis1 = sorted(lis1)\nr = slis1[len(lis1) - 1]\nnewlis1 = []\ncounter = 0\n\ndef sumOfDigits(counter):\n    s = 0\n    for d in str(counter):\n        s += int(d)\n    return s\nfor i in range(r):\n    counter += 1\n    while counter % 10 == 3 or sumOfDigits(counter) % 3 == 0:\n        counter += 1\n    newlis1.append(counter)\nfor i in range(len(lis1)):\n    print(newlis1[lis1[i] - 1])", "n = []\nfor i in range(1, 1700):\n    if i % 3 != 0 and i % 10 != 3:\n        n.append(i)\nT = int(input())\nfor t in range(T):\n    d = int(input())\n    print(n[d - 1])", "def main() -> None:\n    ans = []\n    cur = 1\n    while len(ans) != 1000:\n        if cur % 3 != 0 and cur % 10 != 3:\n            ans.append(cur)\n        cur += 1\n    for test in range(int(input())):\n        k = int(input())\n        print(ans[k - 1])\nmain()", "n = int(input())\na = []\nfor _ in range(n):\n    a.append(int(input()))\na1 = max(a)\nb1 = 1\nb2 = 1\nc = {}\nwhile b1 <= a1:\n    if b2 % 3 != 0 and b2 % 10 != 3:\n        c[b1] = b2\n        b1 += 1\n        b2 += 1\n    else:\n        b2 += 1\nfor i in a:\n    print(c[i])", "a = [i for i in range(1, 10000) if not (i % 3 == 0 or i % 10 == 3)]\nT = int(input())\nfor _ in range(T):\n    k = int(input())\n    print(a[k - 1])", "def search_numbers():\n    solve = []\n    cont = 0\n    n = 1\n    while cont <= 1000:\n        if not (n % 3 == 0 or n % 10 == 3):\n            cont += 1\n            solve.append(n)\n        n += 1\n    return solve\nnumbers = search_numbers()\nt = int(input())\nfor _ in range(t):\n    k = int(input())\n    print(numbers[k - 1])", "t = int(input())\ni = []\nwhile len(i) < 1000:\n    for j in range(10000):\n        if j % 3 != 0 and j % 10 != 3:\n            i.append(j)\nfor _ in range(t):\n    n = int(input())\n    print(i[n - 1])", "lst = [0]\ni = 1\nwhile len(lst) <= 1000:\n    if i % 3 != 0 and i % 10 != 3:\n        lst.append(i)\n    i += 1\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print(lst[n])", "t = int(input())\nl = []\nfor i in range(1, 2000):\n    if i % 10 != 3 and i % 3 != 0:\n        l.append(i)\nfor j in range(t):\n    k = int(input())\n    print(l[k - 1])", "x = 0\nn = 1\nli = []\nwhile x <= 1000:\n    if n % 3 != 0 and n % 10 != 3:\n        li.append(n)\n        x += 1\n    n += 1\nt = int(input())\nfor j in range(t):\n    k = int(input())\n    print(li[k - 1])", "count = 1\nn = 1\nnumber_holder = []\nwhile count <= 1000:\n    if n % 3 != 0 and n % 10 != 3:\n        number_holder.append(n)\n        count += 1\n    n += 1\nt = int(input(''))\nfor i in range(t):\n    k = int(input(''))\n    print(number_holder[k - 1])", "x = int(input())\nl = [i for i in range(10000) if i % 3 != 0 and i % 10 != 3]\nfor i in range(x):\n    z = int(input())\n    print(l[z - 1])", "ref = []\ncur = 1\nfor _ in range(1000):\n    while cur % 10 == 3 or not cur % 3:\n        cur += 1\n    ref.append(cur)\n    cur += 1\nfor _ in range(int(input())):\n    print(ref[int(input()) - 1])", "def solution():\n    for t in range(int(input())):\n        k = int(input())\n        ans = 0\n        for i in range(1, k + 1):\n            ans += 1\n            while ans % 3 == 0 or ans % 10 == 3:\n                ans += 1\n        print(ans)\n    return\nsolution()", "ls = [i for i in range(1, 1800) if i % 3 != 0 and str(i)[-1] != '3']\nfor _ in range(int(input())):\n    n = int(input())\n    print(ls[n - 1])", "a = []\nfor i in range(1, 1667):\n    if i % 3 != 0 and i % 10 != 3:\n        a.append(i)\nt = int(input())\nfor h in range(t):\n    k = int(input())\n    print(a[k - 1])", "a = []\nfor i in range(1, 1667):\n    d = str(i)\n    if len(d) == 1:\n        if i % 3 != 0 and i != 3:\n            a.append(i)\n    elif i % 3 != 0 and d[len(d) - 1:] != '3':\n        a.append(i)\nt = int(input())\nfor i in range(t):\n    k = int(input())\n    print(a[k - 1])", "a = list(range(2000))\na = [x for x in a if x % 3 != 0 and x % 10 != 3]\nn = int(input())\nfor _ in range(n):\n    x = int(input())\n    print(a[x - 1])", "arr = []\ni = 0\nwhile len(arr) < 1000:\n    i += 1\n    if i % 3 == 0 or i % 10 == 3:\n        continue\n    else:\n        arr.append(i)\nt = int(input())\nfor _ in range(t):\n    print(arr[int(input()) - 1])", "ans = []\n\ndef like(d):\n    return d % 3 and d % 10 != 3\ncur = 1\nwhile len(ans) < 2000:\n    if like(cur):\n        ans.append(cur)\n    cur += 1\nfor _ in range(int(input())):\n    print(ans[int(input()) - 1])", "array = []\ncount = 0\ni = 1\nwhile count < 1000:\n    while i % 3 == 0 or i % 10 == 3:\n        i += 1\n    array.append(i)\n    i += 1\n    count += 1\nfor _ in range(int(input())):\n    n = int(input())\n    print(array[n - 1])", "a = []\nfor i in range(1, 1667):\n    if i % 3 != 0 and str(i)[-1] != '3':\n        a.append(i)\n\ndef solve():\n    n = int(input())\n    return a[n - 1]\nt = int(input())\nans = []\nwhile t:\n    ans.append(str(solve()))\n    t -= 1\nprint('\\n'.join(ans))", "a = []\nfor i in range(1, 1667):\n    if i % 3 != 0 and str(i)[-1] != '3':\n        a.append(i)\n\ndef solve():\n    return a[int(input()) - 1]\nt = int(input())\nans = []\nwhile t:\n    ans.append(str(solve()))\n    t -= 1\nprint('\\n'.join(ans))", "t = int(input())\nl = []\nfor i in range(t):\n    n = int(input())\n    l.append(n)\nm = max(l)\nk = []\ncount = 0\nj = 1\nwhile count < m:\n    p = list(str(j))\n    if j % 3 != 0:\n        if p[len(p) - 1] != '3':\n            k.append(j)\n            count += 1\n    j += 1\nfor i in range(t):\n    print(k[l[i] - 1])", "for i in range(int(input())):\n    k = int(input())\n    u = 0\n    for j in range(1, 5000):\n        if j % 3 != 0 and j % 10 != 3:\n            u += 1\n            if u == k:\n                print(j)\n                break", "test = input()\ntest = int(test)\nl = []\nfor i in range(1, 1669):\n    if i % 3 == 0 or i % 10 == 3:\n        continue\n    else:\n        l.append(i)\nfor i in range(test):\n    k = int(input())\n    print(l[k - 1])", "from itertools import count, islice\nt = int(input())\nfor _ in range(t):\n    k = int(input())\n    gen = (i for i in count(start=1) if i % 3 != 0 and i % 10 != 3)\n    res = next(islice(gen, k - 1, None), None)\n    print(res)", "n = int(input())\nl = []\nfor i in range(1, 1667):\n    if i % 3 != 0 and i % 10 != 3:\n        l.append(i)\nfor i in range(n):\n    x = int(input())\n    print(l[x - 1])", "t = int(input())\na = [1]\ns = []\nfor i in range(t):\n    n = int(input()) - 1\n    if n < len(a):\n        s.append(a[n])\n    else:\n        j = len(a) - 1\n        k = 1\n        while len(a) <= n:\n            if not ((a[j] + k) % 3 == 0 or [*str(a[j] + k)][-1] == '3'):\n                a.append(a[j] + k)\n            k += 1\n        s.append(a[n])\nfor i in s:\n    print(i)", "t = int(input())\nnumbers = []\ni = 1\nwhile len(numbers) < 1000:\n    if i % 3 and i % 10 != 3:\n        numbers.append(i)\n    i += 1\nfor _ in range(t):\n    k = int(input())\n    print(numbers[k - 1])", "l = []\nfor i in range(1, 10001):\n    if i % 3 != 0 and i % 10 != 3:\n        l.append(i)\nt = int(input())\nfor j in range(t):\n    k = int(input())\n    print(l[k - 1])", "a = []\nfor i in range(1, 1667):\n    if i % 3 != 0 and i % 10 != 3:\n        a.append(i)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print(a[n - 1])", "def seq():\n    res = []\n    for i in range(1, 2000):\n        if i % 3 != 0 and str(i)[-1] != '3':\n            res.append(i)\n    return res\n\ndef main():\n    res = seq()\n    t = int(input())\n    for _ in range(t):\n        k = int(input())\n        print(res[k - 1])\nmain()", "from itertools import count, islice\npositions = list(map(int, open(0).read().split()[1:]))\nsequence = list(islice(filter(lambda x: (x - 3) % 10, filter(3 .__rmod__, count(-1))), None, max(positions) + 1))\nprint(*map(sequence.__getitem__, positions), sep='\\n')", "print(*map(lambda x: (x := int(x)) + int((x + (y := (int((z := (x / 18)) + 0.5) + int(z + 1 / 6))) - 1) / 2) + y, open(0).read().split()[1:]), sep='\\n')", "arr = list(range(1, 1667))\nfor i in arr:\n    if str(i)[-1] == '3':\n        arr.remove(i)\nfor i in arr:\n    if i % 3 == 0:\n        arr.remove(i)\nre = []\na = int(input())\nfor i in range(a):\n    temp = int(input())\n    re.append(arr[temp - 1])\nfor i in re:\n    print(i)", "t = int(input())\nb = []\nl = 1\nfor i in range(t):\n    k = int(input())\n    while k > len(b):\n        if l % 3 != 0 and l % 10 != 3:\n            b.append(l)\n        l += 1\n    print(b[k - 1])", "class Solution:\n\n    def __init__(self):\n        self.ans = []\n        i = 0\n        count = 1\n        while i != 1003:\n            if count % 3 != 0:\n                if str(count)[-1] != '3':\n                    i += 1\n                    self.ans.append(count)\n            count += 1\n\n    def find(self):\n        t = int(input())\n        for i in range(t):\n            x = int(input())\n            print(self.ans[x - 1])\nobj = Solution()\nobj.find()", "a = []\nfor i in range(1, 1667):\n    if i % 10 != 3 and i % 3 != 0:\n        a.append(i)\nfor _ in range(int(input())):\n    print(a[int(input()) - 1])", "arr = [0]\nj = 1\nfor i in range(1, 1667):\n    if i % 3 != 0:\n        if i % 10 != 3:\n            arr.append(i)\nfor _ in range(int(input())):\n    print(arr[int(input())])", "n = int(input())\nl = []\nfor i in range(n):\n    l.append(int(input()))\nmx = max(l)\nans = []\none = 1\nptr = 0\nwhile ptr < mx:\n    t = False\n    while one % 3 == 0 or str(one)[-1] == '3':\n        one += 1\n        t = True\n    if not t:\n        ans.append(one)\n        one += 1\n        ptr += 1\nfor i in l:\n    print(ans[i - 1])", "class Solution:\n\n    def __init__(self):\n        self.ans = []\n        i = 0\n        count = 1\n        while i != 1003:\n            if count % 3 != 0:\n                if str(count)[-1] != '3':\n                    i += 1\n                    self.ans.append(count)\n            count += 1\n\n    def find(self):\n        t = int(input())\n        for i in range(t):\n            x = int(input())\n            print(self.ans[x - 1])\nobj = Solution()\nobj.find()", "arr = [i for i in range(1, 1667) if i % 3 != 0 and i % 10 != 3]\nfor _ in range(int(input())):\n    k = int(input())\n    print(arr[k - 1])", "n = int(input())\ncol = 0\nlis = []\nwhile n != col:\n    k = int(input())\n    gen = [i for i in range(1, 2 * k) if i % 3 != 0 and i % 10 != 3]\n    lis.append(gen[k - 1])\n    col += 1\nfor i in lis:\n    print(i)", "def three(n):\n    g = 1\n    for i in range(2, n + 1):\n        g += 1\n        while g % 3 == 0 or g % 10 == 3:\n            g += 1\n    return g\nt = int(input())\nfor i in range(t):\n    k = int(input())\n    print(three(k))", "polycrap = [i for i in range(1, 10001) if i % 10 != 3 and i % 3 != 0]\nfor _ in range(int(input())):\n    k = int(input())\n    print(polycrap[k - 1])", "polycrap = [i for i in range(1, 10001) if i % 10 != 3 and i % 3 != 0]\nfor _ in range(int(input())):\n    k = int(input())\n    print(polycrap[k - 1])", "l = []\nfor x in range(1, 2001):\n    if x % 3 == 0 or x % 10 == 3:\n        continue\n    else:\n        l.append(x)\nfor _ in range(int(input())):\n    k = int(input())\n    print(l[k - 1])", "t = int(input())\nans = []\nques = []\nposs = []\nfor i in range(t):\n    ques.append(int(input()))\nm = max(ques)\nI = 1\nwhile I <= m * 2:\n    if I % 3 != 0 and I % 10 != 3:\n        poss.append(I)\n    I += 1\nfor i in ques:\n    print(poss[i - 1])", "a = int(input())\ns = []\nfor i in range(a):\n    b = int(input())\n    s.append(b)\nx = []\nfor i in range(1, 10000):\n    if i % 10 != 3 and i % 3 != 0:\n        x.append(i)\nfor i in s:\n    print(x[i - 1])", "num = []\nfor i in range(1, 1667):\n    if i % 3 != 0 and i % 10 != 3:\n        num.append(i)\nfor _ in range(int(input())):\n    print(num[int(input()) - 1])", "t = int(input())\nwhile t:\n    m = int(input())\n    c = 0\n    for i in range(1, 2 * m + 1):\n        if i % 3 != 0 and i % 10 != 3:\n            c += 1\n        if c == m:\n            print(i)\n            break\n    t = t - 1", "n = int(input())\nwhile n:\n    m = int(input())\n    c = 0\n    for i in range(1, 2 * m + 1):\n        if i % 3 != 0 and i % 10 != 3:\n            c += 1\n        if c == m:\n            print(i)\n            break\n    n = n - 1", "t = int(input())\nl = []\nfor i in range(1, 1668):\n    if i % 3 != 0 and i % 10 != 3:\n        l.append(i)\nfor i in range(t):\n    n = int(input())\n    print(l[n - 1])", "a = []\nfor i in range(2000):\n    if i % 3 == 0 or i % 10 == 3:\n        pass\n    else:\n        a.append(i)\nfor _ in range(int(input())):\n    n = int(input())\n    print(a[n - 1])", "ans = []\nfor i in range(0, 2000):\n    if i % 3 == 0 or i % 10 == 3:\n        continue\n    else:\n        ans.append(i)\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    print(ans[n - 1])", "a = []\nfor i in range(1, 10000):\n    if i % 3 == 0 or (i // 10 > 0 and i % 10 == 3):\n        k = 1\n    else:\n        a.append(i)\nt = int(input())\ni = 0\nfor i in range(t):\n    h = int(input())\n    print(a[h - 1])", "s = int(input())\nlst = []\nfor i in range(1, 1670):\n    i = str(i)\n    if int(i) % 3 != 0:\n        if i.endswith('3'):\n            pass\n        else:\n            lst.append(i)\n    else:\n        pass\nlst1 = []\nfor j in range(s):\n    s2 = int(input())\n    lst1.append(lst[s2 - 1])\nfor q in lst1:\n    print(q)", "t = int(input())\nlike_integers = []\nfor i in range(2000):\n    if (i % 3 != 0) & (i % 10 != 3):\n        like_integers.append(i)\nfor i in range(t):\n    k = int(input())\n    print(like_integers[k - 1])", "t = int(input())\na = [1]\nfor _ in range(t):\n    k = int(input())\n    if k <= len(a):\n        print(a[k - 1])\n    else:\n        x = a[len(a) - 1]\n        while len(a) < k:\n            x += 1\n            if x % 3 != 0 and x % 10 != 3:\n                a.append(x)\n        print(a[k - 1])", "t = int(input())\narray = [0] * t\nfor i in range(t):\n    array[i] = int(input())\nmaxarray = max(array)\nresult = [0]\nnow = 0\ni = 0\nwhile i <= maxarray:\n    now += 1\n    if now % 10 == 3 or now % 3 == 0:\n        pass\n    else:\n        result.append(now)\n        i += 1\nfor item in array:\n    print(result[item])", "A = []\nB = ['hehehe']\nfor i in range(int(input())):\n    A.append(int(input()))\nx = 0\na = 1\nwhile x < max(A):\n    if str(a)[-1] != '3' and int(a) % 3 != 0:\n        B.append(a)\n        x += 1\n    a += 1\nfor i in A:\n    print(B[i])", "l = []\nfor i in range(1, 10000):\n    if i % 3 != 0 and i % 10 != 3:\n        l.append(i)\nt = int(input())\nwhile t:\n    n = int(input())\n    print(l[n - 1])\n    t -= 1", "numbers_he_likes = []\nfor i in range(1, 1667):\n    if i % 3 != 0 and i % 10 != 3:\n        numbers_he_likes.append(i)\nfor _ in range(int(input())):\n    num = int(input())\n    print(numbers_he_likes[num - 1])", "import sys\ninput = sys.stdin.readline\nmemo = []\ni = 1\nwhile len(memo) < 1000:\n    if i % 3 == 0 or str(i)[-1] == '3':\n        i += 1\n        continue\n    memo.append(i)\n    i += 1\nT = int(input())\nfor _ in range(T):\n    K = int(input())\n    print(memo[K - 1])", "l = []\ni = 1\nwhile len(l) < 1000:\n    if i % 3 != 0 and i % 10 != 3:\n        l.append(i)\n    i += 1\nfor i in range(int(input())):\n    n = int(input())\n    print(l[n - 1])", "def solve():\n    k = int(input())\n    curr_num = 0\n    num_written = 0\n    while True:\n        curr_num += 1\n        if curr_num % 3 == 0 or curr_num % 10 == 3:\n            continue\n        else:\n            num_written += 1\n        if num_written == k:\n            break\n    print(curr_num)\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    k = int(input())\n    index = 1\n    num = 1\n    while index <= k:\n        if num % 3 != 0 and num % 10 != 3:\n            index += 1\n        num += 1\n    print(num - 1)", "t = int(input())\nfor i in range(t):\n    lis = []\n    n = int(input())\n    i = 1\n    cnt = 1\n    while cnt <= n:\n        if i % 3 != 0 and i % 10 != 3:\n            lis.append(i)\n            cnt += 1\n        i += 1\n    print(lis[-1])"]