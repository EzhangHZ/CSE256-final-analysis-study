["import sys\nsys.setrecursionlimit(10 ** 5)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\n\ndef main():\n    seg = ['1110111', '0010010', '1011101', '1011011', '0111010', '1101011', '1101111', '1010010', '1111111', '1111011']\n    seg = [int(s, 2) for s in seg]\n    (n, k) = MI()\n    ss = [SI() for _ in range(n)]\n    dp = [1] * (n + 1)\n    mask = (1 << k + 1) - 1\n    for i in range(n - 1, -1, -1):\n        a = int(ss[i], 2)\n        pre = dp[i + 1]\n        value = 0\n        for (d, b) in enumerate(seg):\n            if a & b != a:\n                continue\n            delta = bin(b ^ a).count('1')\n            value |= pre << delta\n        dp[i] = value & mask\n    if dp[0] >> k & 1 == 0:\n        print(-1)\n        exit()\n    ans = []\n    for i in range(n):\n        a = int(ss[i], 2)\n        for d in range(9, -1, -1):\n            b = seg[d]\n            if a & b != a:\n                continue\n            delta = bin(b ^ a).count('1')\n            if delta > k:\n                continue\n            if dp[i + 1] >> k - delta & 1:\n                ans.append(d)\n                k -= delta\n                break\n    print(*ans, sep='')\nmain()"]