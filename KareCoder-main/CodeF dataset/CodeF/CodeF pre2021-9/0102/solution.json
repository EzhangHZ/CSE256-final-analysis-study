["for s in [*open(0)][2::2]:\n    t = set()\n    for x in map(int, s.split()):\n        t |= {x + (x in t)}\n    print(len(t))", "for s in [*open(0)][2::2]:\n    t = set()\n    for x in map(int, s.split()):\n        t |= {x + (x in t)}\n    print(len(t))", "for s in [*open(0)][2::2]:\n    t = set()\n    for x in map(int, s.split()):\n        t |= {x + (x in t)}\n    print(len(t))", "for s in [*open(0)][2::2]:\n    t = set()\n    for x in map(int, s.split()):\n        t |= {x + (x in t)}\n    print(len(t))", "for s in [*open(0)][2::2]:\n    t = set()\n    for x in map(int, s.split()):\n        t |= {x + (x in t)}\n    print(len(t))", "for s in [*open(0)][2::2]:\n    t = set()\n    for x in map(int, s.split()):\n        t |= {x + (x in t)}\n    print(len(t))", "for s in [*open(0)][2::2]:\n    t = set()\n    for x in map(int, s.split()):\n        t |= {x + (x in t)}\n    print(len(t))", "for s in [*open(0)][2::2]:\n    t = set()\n    for x in map(int, s.split()):\n        t |= {x + (x in t)}\n    print(len(t))", "result = []\nfor t in range(int(input())):\n    n = int(input())\n    nos = list(map(int, input().split()))\n    h = {}\n    for i in nos:\n        if i in h:\n            if i + 1 not in h:\n                h[i + 1] = 1\n        else:\n            h[i] = 1\n    result.append(str(len(h)))\nprint('\\n'.join(result))", "result = []\nfor t in range(int(input())):\n    n = int(input())\n    nos = list(map(int, input().split()))\n    h = set()\n    for i in nos:\n        if i in h:\n            if i + 1 not in h:\n                h.add(i + 1)\n        else:\n            h.add(i)\n    result.append(str(len(h)))\nprint('\\n'.join(result))", "for s in [*open(0)][2::2]:\n    t = set()\n    for x in map(int, s.split()):\n        t |= {x + (x in t)}\n    print(len(t))", "import sys, random, bisect\nfrom collections import deque, defaultdict\nfrom heapq import heapify, heappop, heappush\nfrom itertools import permutations\nfrom math import gcd, log\nMOD = int(1000000000.0 + 7)\nINF = int(1e+20)\ninput = lambda : sys.stdin.readline().rstrip()\nmi = lambda : map(int, input().split())\nli = lambda : list(mi())\nn = int(input())\nfor _ in range(n):\n    m = int(input())\n    vis = set()\n    arr = li()\n    for i in arr:\n        if i not in vis:\n            vis.add(i)\n        else:\n            vis.add(i + 1)\n    print(len(vis))", "for s in [*open(0)][2::2]:\n    t = set()\n    for x in map(int, s.split()):\n        t |= {x + (x in t)}\n    print(len(t))", "from sys import stdin\nfrom collections import Counter\nfrom math import pow, sqrt, factorial, log10, log\nfrom itertools import permutations, combinations, combinations_with_replacement\ninput = stdin.readline\n\ndef solve(n, a):\n    prv = 0\n    res = 0\n    ok = 0\n    for i in a:\n        res += i != prv\n        ok |= i == prv\n        if prv + 1 < i:\n            res += ok\n            ok = 0\n        prv = i\n    res += ok\n    print(res)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    solve(n, a)", "for s in [*open(0)][2::2]:\n    t = set()\n    for x in map(int, s.split()):\n        t |= {x + (x in t)}\n    print(len(t))", "for s in [*open(0)][2::2]:\n    t = set()\n    for x in map(int, s.split()):\n        t |= {x + (x in t)}\n    print(len(t))", "for s in [*open(0)][2::2]:\n    t = set()\n    for x in map(int, s.split()):\n        t |= {x + (x in t)}\n    print(len(t))", "for s in [*open(0)][2::2]:\n    t = {-1}\n    for x in map(int, s.split()):\n        t |= {x + (x in t)}\n    print(len(t) - 1)", "for i in [*open(0)][2::2]:\n    l = [*map(int, i.split())]\n    s = set()\n    for i in range(len(l)):\n        if l[i] in s:\n            s.add(l[i] + 1)\n        else:\n            s.add(l[i])\n    print(len(s))", "L = []\n\ndef solve(t):\n    for i in range(t):\n        n = int(input())\n        arr = set()\n        for i in map(int, input().split()):\n            if i in arr:\n                i += 1\n            arr.add(i)\n        L.append(len(arr))\nt = int(input())\nsolve(t)\nfor i in L:\n    print(i)", "def msc(size):\n    lista = list(map(int, input().split()))\n    new = []\n    tar1 = 0\n    tar2 = 0\n    for i in range(size):\n        if tar1 == lista[i] and tar2 != lista[i]:\n            new.append(lista[i] + 1)\n            (tar1, tar2) = (lista[i] + 1, tar1)\n        if tar1 != lista[i] and tar2 != lista[i]:\n            new.append(lista[i])\n            (tar1, tar2) = (lista[i], tar1)\n    return len(new)\n\ndef main():\n    case = int(input())\n    resp = [0] * case\n    for i in range(case):\n        size = int(input())\n        resp[i] = msc(size)\n    for i in range(case):\n        print(resp[i])\nmain()", "def msc(size):\n    lista = list(map(int, input().split()))\n    new = []\n    tar1 = -1\n    tar2 = -1\n    for i in range(size):\n        if tar1 == lista[i] and tar2 != lista[i]:\n            new.append(lista[i] + 1)\n            (tar1, tar2) = (lista[i] + 1, tar1)\n        if tar1 != lista[i] and tar2 != lista[i]:\n            new.append(lista[i])\n            (tar1, tar2) = (lista[i], tar1)\n    return len(new)\n\ndef main():\n    case = int(input())\n    resp = [0] * case\n    for i in range(case):\n        size = int(input())\n        resp[i] = msc(size)\n    for i in range(case):\n        print(resp[i])\nmain()", "for s in [*open(0)][2::2]:\n    t = set()\n    for x in map(int, s.split()):\n        t |= {x + (x in t)}\n    print(len(t))", "import sys\ninput = sys.stdin.readline\nins = lambda : input().rstrip()\nini = lambda : int(input().rstrip())\ninm = lambda : map(int, input().rstrip().split())\ninl = lambda : list(map(int, input().split()))\nout = lambda x, s='\\n': print(s.join(map(str, x)))\nt = ini()\nfor _ in range(t):\n    n = ini()\n    a = sorted(inl())\n    b = [0] * (2 * n + 2)\n    ans = 0\n    for i in a:\n        if b[i] == 0:\n            ans += 1\n            b[i] = 1\n        elif b[i + 1] == 0:\n            ans += 1\n            b[i + 1] = 1\n    print(ans)", "for s in [*open(0)][2::2]:\n    t = set()\n    for x in map(int, s.split()):\n        t |= {x + (x in t)}\n    print(len(t))", "import sys\ninput = sys.stdin.readline\ninputLines = sys.stdin.readlines\n\ndef readIntList():\n    return list(map(int, input().split()))\n\ndef readStrList():\n    return list(map(lambda x: x.strip(), inputLines()))\n\ndef indexOf(l: list, elem: int):\n    return l.index(elem) if elem in l else -1\n\ndef lastIndexOf(l: list, elem: int):\n    indexes = [idx for (idx, val) in enumerate(l) if val == elem]\n    return max(indexes) if len(indexes) > 0 else -1\n\ndef solution():\n    for _ in range(int(input())):\n        n = int(input())\n        arr = readIntList()\n        for i in range(1, n):\n            if arr[i - 1] == arr[i] and (i == n - 1 or arr[i] < arr[i + 1]):\n                arr[i] += 1\n        print(len(set(arr)))\nsolution()", "for s in [*open(0)][2::2]:\n    t = set()\n    for x in map(int, s.split()):\n        t |= {x + (x in t)}\n    print(len(t))", "t = int(input())\nresult = []\nfor i in range(0, t):\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    b = [a[0]]\n    for j in range(1, n - 1):\n        if a[j - 1] == a[j] and a[j] != a[j + 1]:\n            a[j] += 1\n    if a[-1] in a[:-1]:\n        a[-1] += 1\n    an = set(a)\n    result.append(str(len(an)))\nprint('\\n'.join(result))", "def get_ans(notes):\n    freq = {}\n    ans = 0\n    for i in notes:\n        if i not in freq:\n            freq[i] = 1\n            ans += 1\n        elif i + 1 not in freq:\n            ans += 1\n            freq[i + 1] = 1\n        else:\n            freq[i + 1] += 1\n    return ans\nt = int(input())\nanswers = []\nfor _ in range(t):\n    n = int(input())\n    notes = list(map(int, input().split()))\n    answers.append(get_ans(notes))\nfor ans in answers:\n    print(ans)", "res = ''\nfor _ in range(int(input())):\n    n = int(input())\n    arr = tuple(map(int, input().split()))\n    s = set()\n    ans = 0\n    for i in arr:\n        if i in s:\n            if i + 1 not in s:\n                s.add(i + 1)\n                ans += 1\n        else:\n            s.add(i)\n            ans += 1\n    res += '%d\\n' % ans\nprint(res)", "def func(n, a):\n    d = {}\n    for i in a:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    di = {}\n    for i in d:\n        if d[i] == 1:\n            if i not in di:\n                di[i] = 1\n            elif i + 1 not in d:\n                di[i + 1] = 1\n            else:\n                di[i + 1] = 1 + d[i + 1]\n            continue\n        di[i] = d[i] - 1\n        if i + 1 not in d:\n            di[i + 1] = 1\n        else:\n            di[i + 1] = 1 + d[i + 1]\n    return len(di)\nt = int(input())\nl = []\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l.append([n, a])\nfor i in range(len(l)):\n    print(func(l[i][0], l[i][1]))", "result = []\nfor _ in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    before = l[0]\n    cnt = 1\n    for i in range(1, n, 1):\n        if l[i] > before:\n            before = l[i]\n            cnt += 1\n        elif l[i] == before:\n            before += 1\n            cnt += 1\n    result.append(cnt)\nprint(*result, sep='\\n')", "t = int(input())\nres = []\nfor i in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    check = [0 for j in range(2 * n + 1)]\n    count = 0\n    for j in range(n):\n        if check[arr[j] - 1] == 0:\n            check[arr[j] - 1] = 1\n            count = count + 1\n        elif check[arr[j]] == 0:\n            check[arr[j]] = 1\n            count = count + 1\n    res.append(count)\nfor i in range(len(res)):\n    print(res[i])", "t = int(input())\nans = []\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    sp = [0] * (max(a) + 2)\n    for i in range(len(a) - 1, -1, -1):\n        if sp[a[i] + 1] == 0:\n            sp[a[i] + 1] = 1\n        elif sp[a[i]] == 0:\n            sp[a[i]] = 1\n    ans.append(sp.count(1))\nfor i in ans:\n    print(i)", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    was = set()\n    for i in x:\n        if i in was:\n            if i + 1 in was:\n                pass\n            else:\n                was.add(i + 1)\n        else:\n            was.add(i)\n    print(len(was))", "import math\nimport sys\nimport itertools\nimport fractions\nwtf = sys.stdin.read()\nwtf = wtf.strip().split('\\n')\nfor t in [wtf[i:i + 2] for i in range(1, len(wtf), 2)]:\n    n = int(t[0])\n    X = list(map(int, t[1].split()))\n    tmp = []\n    for i in range(1, n):\n        if X[i - 1] == X[i] and (i + 1 < n and X[i + 1] != X[i] or i + 1 == n):\n            X[i] += 1\n    print(len(set(X)))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    A = set()\n    for i in a:\n        if i in A:\n            i += 1\n        A.add(i)\n    print(len(A))", "def solve(n, nums):\n    hash = {}\n    ans = 0\n    for num in nums:\n        if num not in hash:\n            hash[num] = 1\n            ans += 1\n        elif num + 1 not in hash:\n            hash[num + 1] = 1\n            ans += 1\n    return ans\nt = int(input())\nwhile t:\n    n = int(input())\n    nums = list(map(int, input().split()))\n    print(solve(n, nums))\n    t -= 1", "for k in range(int(input())):\n    input()\n    a = list(map(int, input().split()))\n    co = 1\n    cu = a[0]\n    for r in a[1:]:\n        if cu < r:\n            co += 1\n            cu = r\n        elif cu == r:\n            co += 1\n            cu = r + 1\n    print(co)", "for i in range(int(input())):\n    input()\n    x = list(map(int, input().split()))\n    se = set()\n    for _ in x:\n        if _ in se:\n            se.add(_ + 1)\n        else:\n            se.add(_)\n    print(len(se))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    last_note = -1\n    result = 0\n    for el in a:\n        if el > last_note:\n            result += 1\n            last_note = el\n        elif el == last_note:\n            result += 1\n            last_note += 1\n    print(result)", "for _ in range(int(input())):\n    n = int(input())\n    melody = map(int, input().split())\n    final = set()\n    for note in melody:\n        if note in final:\n            note += 1\n        final.add(note)\n    print(len(final))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = list(map(int, input().split(' ')))\n    s = set()\n    for a in x:\n        if a not in s:\n            s.add(a)\n        else:\n            s.add(a + 1)\n    print(len(s))", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    st = set()\n    for x in map(int, input().split()):\n        if x in st:\n            x += 1\n        st.add(x)\n    print(len(st))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = set()\n    ans = 0\n    for i in l:\n        if i in s:\n            i += 1\n            if i not in s:\n                s.add(i)\n                ans += 1\n        else:\n            ans += 1\n            s.add(i)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    x = sorted(list(map(int, input().split(' '))))\n    s = set()\n    for i in x:\n        if i in s:\n            s.add(i + 1)\n        else:\n            s.add(i)\n    print(len(s))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = set()\n    num = map(int, input().split())\n    for j in num:\n        if j in s:\n            s.add(j + 1)\n        else:\n            s.add(j)\n    print(len(s))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = set()\n    for i in l:\n        if i in s:\n            s.add(i + 1)\n        else:\n            s.add(i)\n    print(len(s))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(1, n):\n        if a[i] <= a[i - 1]:\n            a[i] += 1\n    print(len(set(a)))", "def solve(arr):\n    n = len(arr)\n    dp = [[1, arr[0]]] + [None for i in range(n - 1)]\n    for i in range(1, n):\n        (ans, M) = dp[i - 1]\n        if arr[i] > M:\n            dp[i] = [ans + 1, arr[i]]\n        elif arr[i] == M:\n            dp[i] = [ans + 1, arr[i] + 1]\n        else:\n            dp[i] = [ans, M]\n    return dp[-1][0]\nt = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    ans.append(solve(arr))\nfor i in ans:\n    print(i)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = set()\n    for i in range(n):\n        if l[i] in s:\n            s.add(l[i] + 1)\n        else:\n            s.add(l[i])\n    print(len(s))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = set()\n    for i in range(n):\n        if l[i] in s:\n            s.add(l[i] + 1)\n        else:\n            s.add(l[i])\n    print(len(s))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = set()\n    for j in a:\n        if j not in b:\n            b.add(j)\n        else:\n            b.add(j + 1)\n    print(len(b))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    dict1 = {}\n    dict1[a[0]] = 1\n    for i in range(1, n):\n        if a[i] in dict1:\n            dict1[a[i] + 1] = 1\n        else:\n            dict1[a[i]] = 1\n    print(len(dict1))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    seen = set()\n    for el in arr:\n        if el in seen and el + 1 in seen:\n            continue\n        elif el in seen:\n            seen.add(el + 1)\n        else:\n            seen.add(el)\n    print(len(seen))", "import sys\n\ndef main():\n    res = ''\n    input = sys.stdin.readline\n    print = sys.stdout.write\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        osn = set()\n        for i in range(n):\n            cur = a[i]\n            if cur in osn:\n                osn.add(cur + 1)\n            osn.add(cur)\n        sub_res = str(len(osn)) + '\\n'\n        res += sub_res\n    print(res)\nmain()", "from sys import stdin\nip = stdin.readline\nfor _ in range(int(ip())):\n    n = int(ip())\n    a = list(map(int, ip().split()))\n    ans = set()\n    for i in a:\n        if i in ans:\n            ans.add(i + 1)\n        else:\n            ans.add(i)\n    print(len(ans))", "from sys import stdin, stdout\nn = int(stdin.readline())\nfor _ in range(n):\n    ll = int(stdin.readline())\n    l = list(map(int, stdin.readline().split()))\n    s = set()\n    for x in l:\n        if x not in s:\n            s.add(x)\n        else:\n            s.add(x + 1)\n    print(len(s))", "for s in [*open(0)][2::2]:\n    t = set()\n    for x in map(int, s.split()):\n        t |= {x + (x in t)}\n    print(len(t))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    notes = list(map(int, input().split()))\n    s = set()\n    for note in notes:\n        if note not in s:\n            s.add(note)\n        elif note + 1 not in s:\n            s.add(note + 1)\n    print(len(s))", "innum = lambda : int(input())\ninmul = lambda : map(int.input().split())\ninstr = lambda : str(input())\ninarr = lambda : list(map(int, input().split()))\n\ndef solve():\n    n = innum()\n    a = inarr()\n    d = {}\n    for i in a:\n        if i in d:\n            d[i + 1] = d.get(i + 1, 0) + 1\n        else:\n            d[i] = 1\n    print(len(d))\n\ndef main():\n    t = 1\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "for s in [*open(0)][2::2]:\n    p = r = f = 0\n    t = []\n    for x in [*map(int, s.split()), 300000.0]:\n        if x > p:\n            l = len({*t})\n            r += l + (l < len(t))\n            t = [x]\n        else:\n            t += (x,)\n        p = x + 1\n    print(r)", "for i in range(int(input())):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    s = set()\n    for j in nums:\n        if j in s:\n            s.add(j + 1)\n        else:\n            s.add(j)\n    print(len(s))", "from collections import defaultdict\nmaxi = 0\n\ndef maximise(l, pos):\n    pass\n\ndef solve():\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    s = set()\n    for i in l:\n        a = i\n        if a in s:\n            a += 1\n        s.add(a)\n    print(len(s))\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    A = [int(x) for x in input().split()]\n    S = set()\n    for a in A:\n        if a not in S:\n            S.add(a)\n        else:\n            S.add(a + 1)\n    print(len(S))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    l = set()\n    for j in range(n):\n        b = a[j]\n        if b not in l:\n            l.add(b)\n        else:\n            a[j] = a[j] + 1\n            l.add(b + 1)\n    print(len(l))", "from math import *\nfrom math import factorial as fact, comb as ncr\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom array import array\nfrom collections import Counter as ctr\nfrom collections import deque as dq\nli = lambda : list(map(int, input().split()))\narr = lambda a: array('i', a)\nbi = lambda n: bin(n).replace('0b', '')\nyn = lambda f: print('NYOE S'[f::2])\n\ndef temp():\n    for _ in range(int(input())):\n        n = int(input())\n        a = arr(li())\n        b = set()\n        if n == 1:\n            print(1)\n        else:\n            for i in a:\n                if i in b:\n                    b.add(i + 1)\n                else:\n                    b.add(i)\n            print(len(b))\n\ndef solve():\n    for _ in range(int(input())):\n        n = int(input())\n        a = li()\n        a.sort(reverse=True)\n        a = arr(a)\n        b = arr(list(set(a)))\n        c = len(b)\n        print(c)\ntemp()", "cases = int(input())\nwhile cases:\n    n = input()\n    arr = map(int, input().split())\n    cases -= 1\n    seen = set()\n    for i in arr:\n        if i in seen and i + 1 not in seen:\n            seen.add(i + 1)\n        elif i not in seen:\n            seen.add(i)\n    print(len(seen))", "t = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    mas = [0] * (2 * n + 10)\n    inp = list(map(int, input().split()))\n    for j in range(n):\n        mas[inp[j]] += 1\n    res = 0\n    for j in range(2 * n + 10):\n        if mas[j] > 0:\n            res += 1\n        if mas[j] > 1:\n            mas[j] -= 1\n            mas[j + 1] += 1\n    if mas[-1] > 0:\n        res += 1\n    ans.append(res)\nfor i in ans:\n    print(i)", "def Last_minute_enhancements():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        arr[-1] += 1\n        for i in range(n - 1, -1, -1):\n            if i < n - 1 and arr[i + 1] - arr[i] > 1:\n                arr[i] += 1\n        print(len(set(arr)))\nLast_minute_enhancements()", "cases = int(input())\nfor i in range(cases):\n    length = int(input())\n    song = [int(word) for word in input().split()]\n    for note in range(len(song) - 1):\n        if song[note] >= song[note + 1]:\n            song[note + 1] += 1\n    counter = len(set(song))\n    print(counter)", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = set()\n    for i in l:\n        if i in s:\n            i += 1\n        s.add(i)\n    print(len(s))", "for _ in [0] * int(input()):\n    n = int(input())\n    r = list(map(int, input().split()))\n    for i in range(n - 1):\n        if r[i] >= r[i + 1]:\n            r[i + 1] += 1\n    print(len(set(r)))", "for _ in range(int(input())):\n    n = int(input())\n    c = set()\n    a = list(map(int, input().split()))\n    for i in range(n):\n        if a[i] not in c:\n            c.add(a[i])\n        else:\n            c.add(a[i] + 1)\n    print(len(c))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    st = set()\n    st.add(arr[0])\n    for i in arr[1:]:\n        if i in st:\n            st.add(i + 1)\n        else:\n            st.add(i)\n    print(len(st))", "for _ in range(int(input())):\n    input()\n    song = [int(x) for x in input().split()]\n    song.sort(reverse=True)\n    diversity = 0\n    previous = float('inf')\n    for i in song:\n        if i + 1 < previous:\n            previous = i + 1\n            diversity += 1\n        elif i < previous:\n            previous = i\n            diversity += 1\n    print(diversity)", "import sys\ninput = lambda : sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split())) + [1000000000]\n    count = len(set(a)) - 1\n    s = 0\n    for i in range(1, n + 1):\n        if a[i] == a[i - 1]:\n            s = 1\n        if a[i] >= a[i - 1] + 2 and s > 0:\n            count += 1\n            s = 0\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = set()\n    for i in l:\n        if i in s:\n            s.add(i + 1)\n        else:\n            s.add(i)\n    print(len(s))", "for _ in range(int(input())):\n    a = set()\n    n = input()\n    n = list(map(int, input().split()))\n    for i in n:\n        if i in a:\n            a.add(i + 1)\n        else:\n            a.add(i)\n    print(len(a))", "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    li = set()\n    c = 0\n    for i in lis:\n        if i in li:\n            li.add(i + 1)\n        else:\n            li.add(i)\n    print(len(li))", "for _ in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    li = set()\n    c = 0\n    for i in lis:\n        if i in li:\n            li.add(i + 1)\n        else:\n            li.add(i)\n    print(len(li))", "for _ in range(int(input())):\n    input()\n    s = [int(i) for i in input().split()]\n    for i in range(1, len(s)):\n        if s[i] <= s[i - 1]:\n            s[i] += 1\n    print(len(set(s)))", "for i in range(int(input())):\n    n = int(input())\n    s = [int(i) for i in input().split()]\n    for j in range(n - 1):\n        if s[j] >= s[j + 1]:\n            s[j + 1] += 1\n    print(len(set(s)))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    seen = set()\n    for i in range(len(nums)):\n        if nums[i] not in seen:\n            seen.add(nums[i])\n        elif nums[i] + 1 not in seen:\n            seen.add(nums[i] + 1)\n    print(len(seen))", "def calculate(myList):\n    distinct = set()\n    for i in myList:\n        if i not in distinct:\n            distinct.add(i)\n        elif i + 1 not in distinct:\n            distinct.add(i + 1)\n    return len(distinct)\nt = int(input())\nanswer = []\nfor i in range(t):\n    n = int(input())\n    l = map(int, input().split())\n    answer.append(calculate(l))\nfor i in answer:\n    print(i)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    A = set()\n    for i in a:\n        if i in A:\n            i += 1\n        A.add(i)\n    print(len(A))", "for j in range(int(input())):\n    n = int(input())\n    s = set()\n    a = [int(i) for i in input().split()]\n    for i in a:\n        if i in s:\n            s.add(i + 1)\n        else:\n            s.add(i)\n    print(len(s))", "def solve(arr):\n    res = [arr[0]]\n    for e in arr[1:]:\n        last_e = res[-1]\n        if last_e == e:\n            e += 1\n        if last_e < e:\n            res.append(e)\n    print(len(res))\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    solve(arr)", "def fun(ls, num):\n    count = 0\n    set1 = set()\n    for i in range(num):\n        if ls[i] in set1:\n            if ls[i] + 1 in set1:\n                continue\n            else:\n                set1.add(ls[i] + 1)\n                count += 1\n        else:\n            set1.add(ls[i])\n            count += 1\n    print(count)\nipt = int(input())\nfor i in range(ipt):\n    num = int(input())\n    ls = input().split()\n    ls = list(map(int, ls))\n    fun(ls, num)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    notes = list(map(int, input().split()))\n    s = set()\n    for note in notes:\n        if note not in s:\n            s.add(note)\n        elif note + 1 not in s:\n            s.add(note + 1)\n    print(len(s))", "def solve():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    s = set()\n    for x in a:\n        if x in s:\n            s.add(x + 1)\n        else:\n            s.add(x)\n    print(len(s))\nt = int(input())\nfor _ in range(t):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    A = set()\n    for i in a:\n        if i in A:\n            i += 1\n        A.add(i)\n    print(len(A))", "for _ in range(int(input())):\n    n = int(input())\n    ans = 0\n    s = sorted(list(map(int, input().split(' '))))\n    s2 = set()\n    for i in s:\n        s2.add(i + 1 if i in s2 else i)\n    print(len(s2))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    res = set()\n    for i in l:\n        if i in res:\n            res.add(i + 1)\n        else:\n            res.add(i)\n    print(len(res))", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    prev = 0\n    cnt = 0\n    for cur in map(int, input().split()):\n        if cur == prev:\n            cur += 1\n            cnt += 1\n        elif cur < prev:\n            cur = prev\n        else:\n            cnt += 1\n        prev = cur\n    print(cnt)", "for _ in range(int(input())):\n    n = int(input())\n    song = [int(i) for i in input().split()]\n    song.sort(reverse=True)\n    n = set()\n    for i in song:\n        if i + 1 not in n:\n            n.add(i + 1)\n        else:\n            n.add(i)\n    print(len(n))"]