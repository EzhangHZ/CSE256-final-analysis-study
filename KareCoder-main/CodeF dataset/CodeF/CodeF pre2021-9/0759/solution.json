["t = int(input())\nMaxn = 210000\nwhile t > 0:\n    t -= 1\n    (n, k) = map(int, input().split())\n    d = [0] * (n + 1)\n    bj = [0] * (n + 1)\n    flag = [0] * (n + 1)\n    to = [[]]\n    for i in range(0, n):\n        to.append([])\n    for i in range(1, n):\n        (u, v) = map(int, input().split())\n        to[u].append(v)\n        to[v].append(u)\n        d[u] += 1\n        d[v] += 1\n    if k == 1:\n        print(n - 1)\n        continue\n    que = []\n    for i in range(1, n + 1):\n        if d[i] == 1:\n            bj[to[i][0]] += 1\n            flag[i] = 1\n    for i in range(1, n + 1):\n        if bj[i] >= k:\n            que.append(i)\n    ans = 0\n    while len(que):\n        now = que.pop()\n        ans += 1\n        bj[now] -= k\n        if bj[now] >= k:\n            que.append(now)\n            continue\n        if bj[now]:\n            continue\n        sxz = 0\n        nh = 0\n        for i in to[now]:\n            if flag[i] == 0:\n                sxz += 1\n                nh = i\n        if sxz == 1:\n            flag[now] = 1\n            bj[nh] += 1\n            if bj[nh] == k:\n                que.append(nh)\n    print(ans)", "import collections\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    g = collections.defaultdict(list)\n    for j in range(n - 1):\n        (x, y) = map(int, input().split())\n        g[x].append(y)\n        g[y].append(x)\n    if k == 1:\n        print(n - 1)\n    else:\n        leaf = {}\n        a = set()\n        b = {}\n        l = {}\n        for v in g:\n            p = 0\n            q = 0\n            for u in g[v]:\n                q = q + 1\n                if len(g[u]) == 1:\n                    p = p + 1\n                    leaf[u] = 1\n            if p >= k:\n                a.add(v)\n            b[v] = p\n            l[v] = q\n        c = 0\n        while a != set():\n            p = a.pop()\n            te = b[p] // k\n            c = c + te\n            if b[p] % k == 0 and l[p] - te * k == 1:\n                leaf[p] = 1\n                b[p] = 0\n                l[p] = 1\n                for v in g[p]:\n                    if v not in leaf:\n                        b[v] = b[v] + 1\n                        if b[v] >= k:\n                            a.add(v)\n                        break\n            else:\n                b[p] = b[p] - te * k\n                l[p] = l[p] - te * k\n        print(c)"]