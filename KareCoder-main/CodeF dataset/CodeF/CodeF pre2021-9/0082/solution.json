["n1 = int(input())\nfor z in range(n1):\n    a = []\n    c = 0\n    (n, m) = map(int, input().split(' '))\n    for i in range(n):\n        a.append(input())\n    for i in range(n - 1):\n        if a[i][m - 1] != 'D':\n            c += 1\n    for i in range(m - 1):\n        if a[n - 1][i] != 'R':\n            c += 1\n    print(c)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (row, col) = map(int, input().split())\n    p = []\n    for i in range(row):\n        s = input()\n        p.append(s)\n    c = 0\n    for i in range(row - 1):\n        if p[i][col - 1] == 'R':\n            c += 1\n    for i in range(col - 1):\n        if p[row - 1][i] == 'D':\n            c += 1\n    print(c)", "t = int(input())\nfor i in range(t):\n    (n, m) = [int(x) for x in input().split()]\n    count = 0\n    for j in range(n):\n        row = input()\n        if j == n - 1:\n            for val in row:\n                if val == 'D':\n                    count += 1\n        elif row[m - 1] == 'R':\n            count += 1\n    print(count)", "from math import gcd\nfrom sys import stdin\nfrom collections import Counter, deque\ninput = stdin.readline\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    c = 0\n    for i in range(n - 1):\n        a = list(input())\n        if a[m - 1] == 'R':\n            c = c + 1\n    a = list(input())\n    for i in range(len(a)):\n        if a[i] == 'D':\n            c = c + 1\n    print(c)", "t = int(input())\nfor i in range(t):\n    (n, m) = input().split()\n    (n, m) = (int(n), int(m))\n    cnt = 0\n    for i in range(n):\n        linee = input()\n        if linee[-1] != 'D':\n            cnt += 1\n    for i in linee:\n        if i != 'R':\n            cnt += 1\n    print(cnt - 2)", "for _ in range(int(input())):\n    (r, c) = map(int, input().split())\n    ans = 0\n    for __ in range(r):\n        s = input()\n        if s[-1] == 'R':\n            ans += 1\n    for d in s:\n        if d == 'D':\n            ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (r, c) = tuple(map(int, input().split()))\n    count = 0\n    for j in range(r):\n        row = list(input())\n        if j < r - 1 and row[c - 1] == 'R':\n            count += 1\n        if j == r - 1:\n            for k in range(c):\n                if row[k] == 'D':\n                    count += 1\n    print(count)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    last_column = []\n    for i in range(n - 1):\n        last_column.append(input()[m - 1])\n    last_row = input()\n    last_column.append(last_row[m - 1])\n    print(last_row.count('D') + last_column.count('R'))", "tests = int(input())\nfor i in range(tests):\n    (n, m) = list(map(int, input().split()))\n    edge_down = []\n    edge_right = []\n    for i in range(n):\n        x = input()\n        edge_right += x[-1]\n        if i == n - 1:\n            edge_down += x\n    c = 0\n    for i in edge_down:\n        if i == 'D':\n            c += 1\n    for i in edge_right:\n        if i == 'R':\n            c += 1\n    print(c)", "t = int(input())\nwhile t:\n    t -= 1\n    c = 0\n    (n, m) = map(int, input().split())\n    for i in range(n):\n        s = input()\n        if s[m - 1] == 'R':\n            c += 1\n    c += s.count('D')\n    print(c)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    count = 0\n    for i in range(n):\n        temp = input()\n        if temp[-1] == 'R':\n            count += 1\n    count += temp.count('D')\n    print(count)", "t = int(input())\nfor tt in range(t):\n    s = input()\n    n = [int(i) for i in s.split()]\n    RR = 0\n    CC = 0\n    for i in range(n[0] - 1):\n        r = input()\n        if r[n[1] - 1] == 'R':\n            RR += 1\n    q = input()\n    for i in range(len(q) - 1):\n        if q[i] == 'D':\n            CC += 1\n    print(RR + CC, end='')\n    if tt != t - 1:\n        print()", "t = int(input())\nfor k in range(t):\n    s = input().split(' ')\n    n = int(s[0])\n    m = int(s[1])\n    c = 0\n    for i in range(n - 1):\n        s = input()\n        if s[m - 1] == 'R':\n            c += 1\n    s = input()\n    for i in range(m - 1):\n        if s[i] == 'D':\n            c += 1\n    print(c)", "t = int(input())\nc = []\nfor _ in range(t):\n    changes = 0\n    (n, m) = list(map(int, input().split()))\n    for i in range(n):\n        row = input()\n        if i != n - 1 and row[-1] == 'R':\n            changes += 1\n        elif i == n - 1:\n            changes += row.count('D')\n    c.append(changes)\nfor _ in c:\n    print(_)", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    answer = 0\n    for i in range(n):\n        a = input()\n        if i == n - 1:\n            answer += a.count('D')\n        elif a[-1] == 'R':\n            answer += 1\n    print(answer)", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    arr = []\n    for i in range(a):\n        arr.append(input())\n    count = 0\n    for i in range(a - 1):\n        if arr[i][-1] != 'D':\n            count += 1\n    for i in range(b - 1):\n        if arr[-1][i] != 'R':\n            count += 1\n    print(count)", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    arr = []\n    for i in range(a):\n        arr.append(input())\n    count = 0\n    for i in range(a - 1):\n        if arr[i][-1] != 'D':\n            count += 1\n    for i in range(b - 1):\n        if arr[-1][i] != 'R':\n            count += 1\n    print(count)", "t = int(input())\ni = 0\nwhile i < t:\n    i += 1\n    k = 0\n    (n, m) = map(int, input().split())\n    for j in range(n):\n        s = input()\n        if j != n - 1 and s[-1] == 'R':\n            k = k + 1\n    for j2 in range(m - 1):\n        if s[j2] == 'D':\n            k += 1\n    print(k)", "for _ in range(int(input())):\n    (n, m) = [int(x) for x in input().split()]\n    a = []\n    for i in range(n):\n        a.append(input())\n    c = 0\n    for i in range(m - 1):\n        if a[n - 1][i] == 'D':\n            c += 1\n    for i in range(n - 1):\n        if a[i][m - 1] == 'R':\n            c += 1\n    print(c)", "for _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    l = []\n    for i in range(m):\n        l.append(list(map(str, input().strip())))\n    cnt = 0\n    if m == 1:\n        for x in range(n):\n            if l[0][x] != 'R':\n                cnt += 1\n        print(cnt - 1)\n    else:\n        for x in range(n - 1):\n            if l[m - 1][x] != 'R':\n                cnt += 1\n        for y in range(m - 1):\n            if l[y][n - 1] == 'R':\n                cnt += 1\n        print(cnt)", "def solve(n, m, nums):\n    ans = 0\n    for i in range(m):\n        if nums[n - 1][i] == 'D':\n            ans += 1\n    for i in range(n):\n        if nums[i][m - 1] == 'R':\n            ans += 1\n    return ans\nt = int(input())\nwhile t:\n    (n, m) = list(map(int, input().split()))\n    nums = []\n    for i in range(n):\n        nums.append(list(input()))\n    print(solve(n, m, nums))\n    t -= 1", "while True:\n    try:\n        t = eval(input())\n        for i in range(t):\n            (n, m) = map(int, input().split())\n            list0 = []\n            cnt = 0\n            for j in range(n):\n                list0.append(input())\n                if list0[j][m - 1] == 'R':\n                    cnt += 1\n                if j == n - 1:\n                    for k in range(m):\n                        if list0[j][k] == 'D':\n                            cnt += 1\n            print(cnt)\n    except:\n        break", "for _ in [0] * int(input()):\n    (n, m) = map(int, input().split())\n    arr = [list(input()) for i in [0] * n]\n    print(len([j for j in range(n - 1) if arr[j][m - 1] != 'D']) + len([k for k in range(m - 1) if arr[n - 1][k] != 'R']))", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    matrix = []\n    for i in range(n):\n        row = input()\n        matrix.append(row)\n    c = 0\n    if n == 1 and m == 1:\n        print(0)\n    elif n == 1:\n        for i in range(m - 1):\n            if matrix[0][i] != 'R':\n                c += 1\n        print(c)\n    elif m == 1:\n        for i in range(n - 1):\n            if matrix[i][0] != 'D':\n                c += 1\n        print(c)\n    else:\n        if matrix[n - 1][0] != 'R':\n            c += 1\n        if matrix[0][m - 1] != 'D' and n != 1:\n            c += 1\n        for i in range(1, m - 1):\n            if matrix[n - 1][i] != 'R':\n                c += 1\n        for i in range(1, n - 1):\n            if matrix[i][m - 1] != 'D':\n                c += 1\n        print(c)", "t = int(input())\nfor case in range(t):\n    inp = list(map(int, str.split(input(), ' ')))\n    n = inp[0]\n    m = inp[1]\n    ans = 0\n    a = [0] * n\n    for i in range(n):\n        a[i] = list(input())\n    for i in range(n):\n        if a[i][m - 1] == 'R':\n            ans += 1\n    for j in range(m):\n        if a[n - 1][j] == 'D':\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        arr.append(list(input()))\n    count = 0\n    for i in range(n - 1):\n        if arr[i][-1] == 'R':\n            count += 1\n    for i in range(m - 1):\n        if arr[-1][i] == 'D':\n            count += 1\n    print(count)", "def solve():\n    (n, m) = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(input()))\n    ans = 0\n    for i in range(n):\n        ans += a[i][m - 1] == 'R'\n    for i in range(m):\n        ans += a[n - 1][i] == 'D'\n    print(ans)\ntst = int(input())\nfor i in range(tst):\n    solve()", "n = int(input())\nfor i in range(n):\n    x = map(int, input().split())\n    (a, b) = x\n    c = 0\n    for j in range(a - 1):\n        a = input()\n        if a[-1] == 'R':\n            c += 1\n    y = input()\n    print(y.count('D') + c)", "t = int(input())\nfor _ in range(t):\n    inp = input().split()\n    n = int(inp[0])\n    m = int(inp[1])\n    lst = []\n    for i in range(n):\n        rw = input()\n        lst.append(rw)\n    cnt = 0\n    for i in lst[-1]:\n        if i == 'D':\n            cnt += 1\n    for i in lst:\n        if i[-1] == 'R':\n            cnt += 1\n    print(cnt)", "for _ in range(int(input())):\n    (n, m) = [int(j) for j in input().split()]\n    w = []\n    count = 0\n    for i in range(n):\n        s = input()\n        w.append(s)\n    for i in range(n - 1):\n        if w[i][m - 1] == 'R':\n            count += 1\n    for i in range(m - 1):\n        if w[n - 1][i] == 'D':\n            count += 1\n    print(count)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    belts = [list(input()) for i in range(n)]\n    changes = belts[n - 1].count('D')\n    for i in range(n):\n        if belts[i][m - 1] == 'R':\n            changes += 1\n    print(changes)", "import math\nt = int(input())\nfor z in range(t):\n    (n, m) = map(int, input().split())\n    a = []\n    ans = 0\n    for i in range(n):\n        p = input()\n        if p[-1] == 'R':\n            ans += 1\n        if i == n - 1:\n            x = p.count('D')\n            ans += x\n    print(ans)", "for t in range(int(input())):\n    (n, m) = list(map(int, str.split(input())))\n    lists = []\n    for _ in range(n):\n        lists.append(list(input()))\n    rslt = 0\n    for i in range(n):\n        for j in range(m):\n            if i == n - 1 and j < m - 1 and (lists[i][j] != 'R'):\n                rslt += 1\n            if j == m - 1 and i < n - 1 and (lists[i][j] != 'D'):\n                rslt += 1\n    print(rslt)", "t = int(input())\nfor _ in range(0, t):\n    inputs = [int(num) for num in input().split()]\n    n = inputs[0]\n    m = inputs[1]\n    grid = []\n    for i in range(0, n):\n        s = input()\n        grid.append([letter for letter in s])\n    c = 0\n    for i in range(0, n - 1):\n        if grid[i][m - 1] == 'R':\n            c += 1\n    for i in range(0, m - 1):\n        if grid[n - 1][i] == 'D':\n            c += 1\n    print(c)", "def main():\n    (r, c) = list(map(int, input().split()))\n    grid = [input() for _ in range(r)]\n    count = 0\n    for i in range(len(grid) - 1):\n        if grid[i][-1] != 'D':\n            count += 1\n    for i in grid[-1][:-1]:\n        if i != 'R':\n            count += 1\n    return count\nfor i in range(int(input())):\n    print(main())", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    p = []\n    for i in range(n):\n        k = input()\n        p.append(k)\n    count = 0\n    for i in range(len(p)):\n        if p[i][-1] == 'R':\n            count = count + 1\n    u = p[-1]\n    for i in range(len(u)):\n        if u[i] == 'D':\n            count = count + 1\n    print(count)", "def solve():\n    T = int(input())\n    for i in range(T):\n        (n, m) = map(int, input().split())\n        a = []\n        for i in range(n):\n            s = input()\n            s = list(s)\n            a.append(s)\n        ans = 0\n        for i in a:\n            if i[m - 1] == 'R':\n                ans += 1\n        for i in a[n - 1]:\n            if i == 'D':\n                ans += 1\n        print(ans)\nsolve()", "t1 = int(input())\nfor _ in range(t1):\n    (n, m) = map(int, input().split())\n    p = 0\n    for i in range(n):\n        s = str(input())\n        if s[m - 1] == 'R':\n            p += 1\n        elif s[m - 1] == 'C':\n            for j in s:\n                if j == 'D':\n                    p += 1\n    print(p)", "for _ in range(int(input())):\n    (n, m) = list(map(int, input().split(' ')))\n    s = ''\n    count = 0\n    for i in range(n):\n        s = input()\n        if i < n - 1:\n            if s[-1] != 'D':\n                count += 1\n        else:\n            for j in s:\n                if j != 'R' and j != 'C':\n                    count += 1\n    print(count)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    for j in range(n):\n        a.append(input())\n    c = 0\n    for j in a[n - 1]:\n        if j == 'D':\n            c = c + 1\n    for j in a:\n        if j[m - 1] == 'R':\n            c = c + 1\n    print(c)", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = []\n    for j in range(n):\n        a.append(input())\n    c = 0\n    for j in a[n - 1]:\n        if j == 'D':\n            c = c + 1\n    for j in a:\n        if j[m - 1] == 'R':\n            c = c + 1\n    print(c)", "t = int(input())\nfor _ in range(t):\n    count = 0\n    (n, m) = map(int, input().split())\n    l = []\n    for i in range(n):\n        x = list(input())\n        l.append(x)\n    for i in range(n - 1):\n        if l[i][-1] == 'R':\n            count += 1\n    for i in range(m - 1):\n        if l[-1][i] == 'D':\n            count += 1\n    print(count)", "a = int(input())\nfor g in range(a):\n    (b, u) = [int(r) for r in input().split()]\n    o = 0\n    for j in range(b):\n        x = input()\n        if x[-1] == 'R':\n            o += 1\n    o += x.count('D')\n    print(o)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    (l, cnt) = ([], 0)\n    for i in range(n):\n        l.append(input())\n    for i in l:\n        if i[-1] == 'R':\n            cnt += 1\n    print(cnt + l[-1].count('D'))", "n = int(input())\nfor _ in range(n):\n    (row, col) = map(int, input().split())\n    arr = []\n    for _ in range(row):\n        temp = input()\n        ar = []\n        for i in range(col):\n            ar.append(temp[i])\n        arr.append(ar)\n    count = 0\n    for i in range(row):\n        if arr[i][col - 1] == 'R':\n            count += 1\n    for i in range(col):\n        if arr[row - 1][i] == 'D':\n            count += 1\n    print(count)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    grid = []\n    min = 0\n    for i in range(n):\n        grid.append(input())\n    for i in range(n):\n        if grid[i][m - 1] == 'R':\n            min += 1\n        if i == n - 1:\n            min += grid[i].count('D')\n    print(min)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    matrix = []\n    for i in range(n):\n        matrix.append(list(input()))\n    res = 0\n    for i in range(n - 1):\n        if matrix[i][-1] == 'D':\n            pass\n        else:\n            res += 1\n    for i in range(m - 1):\n        if matrix[-1][i] == 'R':\n            pass\n        else:\n            res += 1\n    print(res)", "for _ in range(int(input())):\n    (r, c) = map(int, input().split())\n    ls = [[j for j in input()] for i in range(r)]\n    print(sum([1 for i in ls if i[-1] == 'R']) + ls[-1].count('D'))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    mat = []\n    for i in range(n):\n        mat.append(list(input()))\n    ans = 0\n    for i in range(n - 1):\n        if mat[i][-1] != 'D':\n            ans += 1\n    for j in range(m - 1):\n        if mat[-1][j] != 'R':\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    ns = [list(input()) for _ in range(n)]\n    res = 0\n    for i in range(n - 1):\n        if ns[i][-1] == 'R':\n            res += 1\n    for i in range(m - 1):\n        if ns[-1][i] == 'D':\n            res += 1\n    print(res)", "num = int(input())\nwhile num:\n    (n, m) = input().split()\n    change = 0\n    for i in range(int(n)):\n        row = input()\n        if row[int(m) - 1] == 'R':\n            change += 1\n        if i == int(n) - 1:\n            for j in row:\n                if j == 'D':\n                    change += 1\n    print(change)\n    num -= 1", "tc = int(input())\nfor p in range(tc):\n    (a, b) = map(int, input().split())\n    ar = []\n    for i in range(a):\n        row = list(input())\n        ar.append(row)\n    count = 0\n    if a == 1 and b == 1:\n        if ar[0][0] == 'C':\n            count = 0\n    elif a == 1 and b != 1:\n        for i in ar:\n            for j in i:\n                if j == 'D':\n                    count = count + 1\n    elif a != 1 and b == 1:\n        for i in ar:\n            for j in i:\n                if j == 'R':\n                    count = count + 1\n    else:\n        for i in ar:\n            if i[-1] == 'R':\n                count += 1\n        for j in ar[-1]:\n            if j == 'D':\n                count += 1\n    print(count)", "t = int(input())\na = []\nfor i in range(t):\n    s = 0\n    (n, m) = list(map(int, input().split()))\n    for i in range(n - 1):\n        t = input()\n        if t[-1] == 'R':\n            s += 1\n    t = input()\n    for i in range(m - 1):\n        if t[i] == 'D':\n            s += 1\n    a.append(s)\nprint(*a, sep='\\n')", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    count = 0\n    for i in range(n):\n        s = input()\n        if s[m - 1] == 'R':\n            count += 1\n        if i == n - 1:\n            count += s.count('D')\n    print(count)", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    l = []\n    for j in range(a):\n        s = input()\n        k = list(s)\n        l.append(k)\n    count = 0\n    for j in range(0, a - 1):\n        if l[j][b - 1] == 'R':\n            count += 1\n    for j in range(0, b - 1):\n        if l[a - 1][j] == 'D':\n            count += 1\n    print(count)", "for x in range(int(input())):\n    c = 0\n    l = []\n    (a, b) = map(int, input().split())\n    for _ in range(a):\n        l.append(input())\n    for i in l:\n        if i[-1] == 'R':\n            c += 1\n    temp = l[-1]\n    c += temp.count('D')\n    print(c)", "for _ in range(int(input())):\n    c = 0\n    (n, m) = map(int, input().split())\n    for i in range(n):\n        a = input()\n        if a[-1] == 'R':\n            c += 1\n    c += a.count('D')\n    print(c)", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    arr = [][:m]\n    for i in range(n):\n        st = input()\n        arr.append(st)\n    count = 0\n    for j in range(n - 1):\n        if arr[j][m - 1] == 'R':\n            count += 1\n    for j in range(m - 1):\n        if arr[n - 1][j] == 'D':\n            count += 1\n    print(count)", "for _ in range(int(input())):\n    (n, m) = [int(x) for x in input().split()]\n    a = []\n    for i in range(n):\n        a.append([i for i in input()])\n    c = a[-1].count('D')\n    for i in range(n):\n        if a[i][-1] == 'R':\n            c += 1\n    print(c)", "t = int(input())\nfor _ in range(t):\n    count = 0\n    (n, m) = map(int, input().split())\n    a = [input() for _ in range(n)]\n    for i in range(m):\n        if a[n - 1][i] == 'D':\n            count += 1\n    for i in range(n):\n        if a[i][m - 1] == 'R':\n            count += 1\n    print(count)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, list(input().split()))\n    p = 0\n    for i in range(n - 1):\n        if input()[-1] == 'R':\n            p += 1\n    l = input()\n    for i in range(m - 1):\n        if l[i] == 'D':\n            p += 1\n    print(p)", "t = int(input())\nfor i in range(t):\n    x = input()\n    n = int(x.split()[0])\n    m = int(x.split()[1])\n    k = 0\n    for j in range(n - 1):\n        y = input()\n        if y[-1] == 'R':\n            k = k + 1\n    z = input()\n    for j in range(m - 1):\n        if z[j] == 'D':\n            k = k + 1\n    print(k)", "t = int(input())\nout = []\nfor _ in range(t):\n    (r, c) = map(int, input().split())\n    mat = []\n    for _ in range(r):\n        mat.append(list(input()))\n    count = 0\n    for i in range(c):\n        if mat[r - 1][i] == 'D':\n            count = count + 1\n    for i in range(r):\n        if mat[i][c - 1] == 'R':\n            count = count + 1\n    out.append(count)\nfor i in out:\n    print(i)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    ans = 0\n    for i in range(n):\n        curr = input()\n        if curr[len(curr) - 1] == 'R':\n            ans += 1\n        if i == n - 1:\n            ans += curr.count('D')\n    print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    count = 0\n    ans = ''\n    for i in range(n - 1):\n        s = input()\n        ans += s\n    last = input()\n    count_last = last.count('D')\n    for i in range(m - 1, (n - 1) * m, m):\n        if ans[i] != 'D':\n            count += 1\n    print(count + count_last)", "for _ in range(int(input())):\n    (n, m) = list(map(int, input().split(' ')))\n    (a, c) = ([], 0)\n    if n == 1:\n        print(input().count('D'))\n    elif m == 1:\n        for i in range(n):\n            if input() == 'R':\n                c += 1\n        print(c)\n    else:\n        for i in range(n):\n            a.append(input())\n        for i in range(n - 1):\n            if a[i][-1] == 'R':\n                c += 1\n        c += a[-1].count('D')\n        print(c)", "n = int(input())\nfor i in range(n):\n    (a, l) = [int(x) for x in input().split()]\n    c = 0\n    for i in range(a):\n        w = input()\n        if w[-1] == 'R':\n            c += 1\n    if 'D' in w:\n        c += w.count('D')\n    print(c)", "for _ in range(int(input())):\n    (m, n) = map(int, input().split())\n    ct = 0\n    for i in range(m):\n        a = input()\n        if a[-1] == 'R':\n            ct += 1\n    for z in a:\n        if z == 'D':\n            ct += 1\n    print(ct)", "t = int(input())\nfor i in range(t):\n    (n, m) = list(map(int, input().split()))\n    (res, lt) = ([], [])\n    c = 0\n    for i in range(n):\n        x = input()\n        l = []\n        l[:] = x\n        res.append(x)\n        lt.append(x[-1])\n    c = lt.count('R') + res[-1].count('D')\n    print(c)", "t = int(input())\nfor z in range(t):\n    (n, m) = map(int, input().split())\n    a = [list(input()) for i in range(n)]\n    kol = 0\n    for i in range(n):\n        if a[i][-1] == 'R':\n            kol += 1\n    for i in range(m):\n        if a[-1][i] == 'D':\n            kol += 1\n    print(kol)", "t = int(input())\nfor _ in range(t):\n    (n, m) = [int(i) for i in input().strip().split()]\n    mat = []\n    Rs_in_last_column = 0\n    for row in range(n):\n        mat.append(input())\n        if mat[row][m - 1] == 'R':\n            Rs_in_last_column += 1\n    Ds_in_last_row = 0\n    for col in range(m):\n        if mat[n - 1][col] == 'D':\n            Ds_in_last_row += 1\n    print(Rs_in_last_column + Ds_in_last_row)", "t = int(input())\nfor i in range(t):\n    (m, n) = map(int, input().split())\n    mat = []\n    for j in range(m):\n        arr = []\n        s = input()\n        for k in s:\n            arr.append(k)\n        mat.append(arr)\n    c = 0\n    c1 = 0\n    for x in range(n):\n        if mat[m - 1][x] == 'D':\n            c += 1\n    for y in range(m):\n        if mat[y][n - 1] == 'R':\n            c1 += 1\n    print(c + c1)", "for i in range(int(input())):\n    (n, m) = tuple(map(int, input().split()))\n    t = 0\n    for j in range(1, n + 1):\n        n1 = input()\n        if j == n:\n            t += n1.count('D')\n        elif n1[-1] == 'R':\n            t += 1\n    print(t)", "t = int(input())\nfor i in range(t):\n    (m, n) = map(int, input().split())\n    list1 = [input() for i in range(m)]\n    ans = sum((l[-1] == 'R' for l in list1)) + list1[-1].count('D')\n    print(ans)", "def solve(matrix, n, m):\n    count = 0\n    for i in range(m - 1):\n        if matrix[n - 1][i] == 'D':\n            count += 1\n    for i in range(n - 1):\n        if matrix[i][m - 1] == 'R':\n            count += 1\n    return count\nt = int(input())\nfor i in range(t):\n    (n, m) = [int(x) for x in input().split()]\n    matrix = []\n    for i in range(n):\n        s = input()\n        matrix.append(list(s))\n    print(solve(matrix, n, m))", "t = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().split()))\n    count = 0\n    for i in range(n - 1):\n        row = input()\n        if row[-1] == 'R':\n            count += 1\n    row = input()\n    for x in row:\n        if x == 'D':\n            count += 1\n    print(count)", "def solve(l, n, m):\n    ans = 0\n    if m > 1:\n        for i in range(m - 1):\n            if l[n - 1][i] == 'D':\n                ans += 1\n    if n > 1:\n        for i in range(n - 1):\n            if l[i][m - 1] == 'R':\n                ans += 1\n    return ans\nt = int(input())\nfor i in range(t):\n    l = []\n    (n, m) = map(int, input().split(' '))\n    for qwe in range(n):\n        l.append(input())\n    print(solve(l, n, m))", "def solve():\n    (n, m) = [int(i) for i in input().split()]\n    ans = 0\n    for i in range(n):\n        a = input()\n        if i == n - 1:\n            ans += a.count('D')\n        if a[-1] == 'R':\n            ans += 1\n    return ans\nt = int(input())\nans = []\nwhile t:\n    ans.append(str(solve()))\n    t -= 1\nprint('\\n'.join(ans))", "def solve(n, m, grid):\n    to_be_changed = 0\n    for i in range(0, m):\n        if grid[n - 1][i] == 'D':\n            to_be_changed += 1\n    for j in range(0, n):\n        if grid[j][m - 1] == 'R':\n            to_be_changed += 1\n    return to_be_changed\nt = int(input())\nfor i in range(0, t):\n    (n, m) = map(int, input().split())\n    grid = list()\n    for j in range(0, n):\n        row = input()\n        grid.append(row)\n    print(solve(n, m, grid))", "num = int(input())\nfor i in range(num):\n    arr = input()\n    arr = arr.split(' ')\n    n = int(arr[0])\n    m = int(arr[1])\n    count = 0\n    for j in range(n):\n        text = input()\n        if j != n - 1:\n            if text[m - 1] != 'D':\n                count += 1\n        else:\n            for k in range(m - 1):\n                if text[k] != 'R':\n                    count += 1\n    print(count)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    lst = [input() for i in range(n)]\n    print(lst[-1].count('D') + sum((i[-1] == 'R' for i in lst)))", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    lst = [input() for i in range(n)]\n    print(lst[-1].count('D') + sum((i[-1] == 'R' for i in lst)))", "T = int(input())\nfor case in range(T):\n    (n, m) = map(int, input().split())\n    ans = 0\n    for i in range(n - 1):\n        a = input()\n        if a[-1] == 'R':\n            ans += 1\n    a = input()[:-1]\n    ans += a.count('D')\n    print(ans)", "val = int(input())\nfor i in range(val):\n    (n, m) = list(map(int, input().split()))\n    down = []\n    right = []\n    for i in range(n):\n        x = input()\n        right += x[-1]\n        if i == n - 1:\n            down += x\n    c = 0\n    for i in down:\n        if i == 'D':\n            c += 1\n    for i in right:\n        if i == 'R':\n            c += 1\n    print(c)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    res = 0\n    i = j = 0\n    val = []\n    for _ in range(n):\n        val.append(list(input()))\n    while i < n:\n        if val[i][m - 1] == 'R':\n            res += 1\n        i += 1\n    while j < m:\n        if val[n - 1][j] == 'D':\n            res += 1\n        j += 1\n    print(res)", "for i in range(int(input())):\n    arr1 = [int(_) for _ in input().split()]\n    f1 = []\n    l = []\n    for j in range(arr1[0]):\n        arr2 = [*input()]\n        f1.append(arr2[-1])\n        l.append(arr2)\n    f2 = l[-1]\n    c1 = f1.count('R')\n    c2 = f2.count('D')\n    print(c1 + c2)", "for i in range(int(input())):\n    a = input().split()\n    s = 0\n    for j in range(int(a[0])):\n        b = input()\n        if b[int(a[1]) - 1] == 'R' and j != int(a[0]) - 1:\n            s += 1\n        if j == int(a[0]) - 1:\n            s += b.count('D')\n    print(s)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    s = [input() for i in range(a)]\n    t = 0\n    for i in s:\n        if i[-1] == 'R':\n            t += 1\n    t += s[-1].count('D')\n    print(t)", "a = int(input())\nfor i in range(0, a):\n    (n, m) = map(int, input().split())\n    c = 0\n    for i in range(0, n):\n        l = input()\n        if l[m - 1] == 'R':\n            c += 1\n    c += l.count('D')\n    print(c)", "I = input\nfor _ in [0] * int(I()):\n    r = 0\n    for _ in [0] * int(I().split()[0]):\n        s = I()\n        r += s[-1] == 'R'\n    print(r + s.count('D'))", "for i in range(int(input())):\n    (x, y) = map(int, input().split())\n    count = 0\n    for j in range(x):\n        a = input()\n        if a[-1] == 'R':\n            count += 1\n        if j == x - 1:\n            count += a.count('D')\n    print(count)", "t = int(input())\nfor _ in range(t):\n    a = []\n    ans = 0\n    (n, m) = map(int, input().split())\n    for i in range(n):\n        x = input()\n        a.append(x)\n    if n == 1 and m == 1:\n        print(0)\n    else:\n        for k in range(n):\n            if a[k][-1] == 'R':\n                ans += 1\n        y = a[-1].count('D')\n        ans += y\n        print(ans)", "t = int(input())\nfor _ in range(0, t):\n    (n, m) = map(int, input().split())\n    c = 0\n    for i in range(0, n - 1):\n        s = str(input())\n        if s[-1] == 'R':\n            c += 1\n    s = str(input())\n    c += s.count('D')\n    print(c)", "for t in range(int(input())):\n    arr = list(map(int, input().strip().split()))[:2]\n    n = arr[0]\n    m = arr[1]\n    change = 0\n    for x in range(n):\n        s = input()\n        if not x == n - 1:\n            if s[m - 1] == 'R':\n                change += 1\n        else:\n            for i in range(m):\n                if s[i] == 'D':\n                    change += 1\n    print(change)", "t = int(input())\nfor _ in range(t):\n    (n, m) = list(map(int, input().split()))\n    grid = []\n    for _ in range(n):\n        grid.append(input())\n    count = 0\n    for i in range(n):\n        if grid[i][m - 1] == 'R':\n            count += 1\n    for i in range(m):\n        if grid[n - 1][i] == 'D':\n            count += 1\n    print(count)", "a = int(input())\nfor i in range(0, a):\n    (n, m) = map(int, input().split())\n    c = 0\n    for i in range(0, n):\n        l = input()\n        if l[m - 1] == 'R':\n            c += 1\n    c += l.count('D')\n    print(c)"]