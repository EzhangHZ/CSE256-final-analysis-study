["from math import sqrt, log, ceil, gcd\nimport sys\nfrom random import randint as r\n\ndef solve():\n    (n, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    st = set(lst)\n    dif = len(st)\n    if k == 1:\n        if dif > 1:\n            print(-1)\n            return\n        print(1)\n        return\n    if k >= dif:\n        print(1)\n        return\n    print(1 + ceil((dif - k) / (k - 1)))\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k == 1 and len(set(a)) == 1:\n        print(1)\n    elif k == 1:\n        print(-1)\n    elif len(set(a)) <= k:\n        print(1)\n    else:\n        print(max(1, (len(set(a)) + k - 2 - 1) // (k - 1)))", "t = int(input())\nfor l in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if len(set(a)) > k and k == 1:\n        print(-1)\n    elif k >= len(set(a)):\n        print(1)\n    else:\n        print(max(1, (len(set(a)) + k - 3) // (k - 1)))", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = map(int, input().split())\n    diff = 0\n    last = next(a)\n    for v in a:\n        if last != v:\n            diff += 1\n        last = v\n    if k == 1:\n        if diff:\n            print(-1)\n        else:\n            print(1)\n    else:\n        print(max(1, (diff + k - 2) // (k - 1)))", "import math\nx = int(input())\nfor i in range(x):\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    d = dict()\n    for key in a:\n        if key in d:\n            d[key] += 1\n        else:\n            d[key] = 1\n    z = len(d)\n    if k == 1:\n        if z == 1:\n            print(1)\n        else:\n            print(-1)\n    elif z > k:\n        ans = 1\n        z -= k\n        ans += math.ceil(z / (k - 1))\n        print(ans)\n    else:\n        print(1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = len(set(map(int, input().split())))\n    if k == 1 and a > 1:\n        print(-1)\n    elif k >= a:\n        print(1)\n    else:\n        print(1 + (a - 2) // (k - 1))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    s = set(lst)\n    l = len(s)\n    if k == 1 and l > 1:\n        print(-1)\n    elif k == 1 and l == 1:\n        print(1)\n    elif k < l:\n        if (l - 1) % (k - 1) == 0:\n            print((l - 1) // (k - 1))\n        else:\n            print((l - 1) // (k - 1) + 1)\n    elif k >= l:\n        print(1)", "import sys\nimport math\nMOD = 1000000007\n\ndef solve():\n    pass\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = len(set(a))\n    if k >= c:\n        print(1)\n    elif k == 1:\n        print(-1)\n    else:\n        print(math.ceil((c - 1) / (k - 1)))", "from math import ceil\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    discrete = len(set(arr))\n    if k == 1:\n        print((1, -1)[discrete != 1])\n        continue\n    else:\n        print(max(0, ceil((discrete - k) / (k - 1))) + 1)", "from math import ceil\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    discrete = len(set(arr))\n    if k == 1:\n        print((1, -1)[discrete != 1])\n        continue\n    else:\n        print(max(0, ceil((discrete - k) / (k - 1))) + 1)", "from math import ceil\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    discrete = len(set(arr))\n    if k == 1:\n        print((1, -1)[discrete != 1])\n        continue\n    else:\n        print(max(1, ceil((discrete - 1) / (k - 1))))", "import math\n\ndef array_sum(n, k, l):\n    c = 0\n    s = set(l)\n    ans = 0\n    last = None\n    if k == 1:\n        if len(s) > 1:\n            return -1\n        else:\n            return 1\n    for i in range(len(s)):\n        c += 1\n        if c == k:\n            if i == len(s) - 1:\n                ans = ans\n            else:\n                ans += 1\n            c = 1\n    if ans == 0:\n        return 1\n    else:\n        return 1 + ans\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    print(array_sum(n, k, l))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    elems = len(set([*map(int, input().split())]))\n    if k == 1 and elems > 1:\n        print(-1)\n    elif k >= elems:\n        print(1)\n    else:\n        print(max(1, (elems - 1 + k - 2) // (k - 1)))", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    d = dict()\n    ans = 0\n    for i in a:\n        if i not in d:\n            d[i] = 1\n    l = len(d.keys())\n    if k == 1:\n        if l == 1:\n            print(1)\n        else:\n            print(-1)\n    elif k >= l:\n        print(1)\n    else:\n        l -= k\n        ans = 1 + math.ceil(l / (k - 1))\n        print(ans)", "from math import ceil\n\ndef check(a):\n    b = [bool(a[i] == a[i + 1]) for i in range(n - 1)]\n    return False not in b\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k == 1:\n        if check(a):\n            print(1)\n        else:\n            print(-1)\n    elif check(a):\n        print(1)\n    else:\n        x = []\n        for i in range(1, n):\n            x.append(a[i] - a[i - 1])\n        c = 0\n        for i in x:\n            if i != 0:\n                c += 1\n        print(ceil(c / (k - 1)))", "import math\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    N = len(set(a))\n    if N <= k:\n        print(1)\n    elif N > 1 and k < 2:\n        print(-1)\n    else:\n        print(math.ceil((N - k) / (k - 1)) + 1)", "def solve():\n    t = inp()\n    for _ in range(t):\n        (n, k) = mul()\n        l = len(set(seq()))\n        if k == 1:\n            if l > 1:\n                print('-1')\n            else:\n                print('1')\n        else:\n            total = 1\n            l -= k if l > k else l\n            total += ceil(l / (k - 1))\n            print(total)\nimport sys\nimport math\nimport bisect\nfrom sys import stdin, stdout\nfrom math import gcd, floor, sqrt, log\nfrom collections import defaultdict as dd\nfrom bisect import bisect_left as bl, bisect_right as br\ninp = lambda : int(input())\nstrng = lambda : input().strip()\njn = lambda x, l: x.join(map(str, l))\nstrl = lambda : list(input().strip())\nmul = lambda : map(int, input().strip().split())\nmulf = lambda : map(float, input().strip().split())\nseq = lambda : list(map(int, input().strip().split()))\nceil = lambda x: int(x) if x == int(x) else int(x) + 1\nceildiv = lambda x, d: x // d if x % d == 0 else x // d + 1\nflush = lambda : stdout.flush()\nstdstr = lambda : stdin.readline()\nstdint = lambda : int(stdin.readline())\nstdpr = lambda x: stdout.write(str(x))\nsolve()", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().strip().split())\n    l = len(set(list(map(int, input().strip().split()))))\n    if k == 1:\n        if l > 1:\n            print('-1')\n        else:\n            print('1')\n    else:\n        total = 1\n        l -= k if l > k else l\n        total += math.ceil(l / (k - 1))\n        print(total)", "from math import ceil\n\ndef main():\n    for _ in range(int(input())):\n        (n, k) = tuple(map(int, input().split()))\n        a = list(map(int, input().split()))\n        if k == 1:\n            if min(a) == max(a):\n                print(1)\n            else:\n                print(-1)\n        else:\n            c = 0\n            for i in range(n - 1):\n                if a[i] != a[i + 1]:\n                    c += 1\n            if c == 0:\n                c += 1\n            print(ceil(c / (k - 1)))\nmain()", "from math import ceil as f\nfor _ in ' ' * int(input()):\n    (n, k) = map(int, input().split())\n    z = set(map(int, input().split()))\n    p = len(z)\n    if p > 1 and k == 1:\n        print(-1)\n    elif p == 1:\n        print(1)\n    else:\n        print(1 + f((p - k) / (k - 1)))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = set(a)\n    n1 = len(s)\n    if len(s) == 1:\n        print(1)\n        continue\n    if k == 1 and n1 > 1:\n        print(-1)\n    else:\n        for i in range(1000):\n            if k * i - (i - 1) >= n1:\n                print(i)\n                break", "for _ in ' ' * int(input()):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if len(set(a)) > 1 and k == 1:\n        print(-1)\n    elif len(set(a)) <= k:\n        print(1)\n    else:\n        print(1 + (len(set(a)) - 2) // (k - 1))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = sorted(set(map(int, input().split())))\n    if len(l) > 1 and k == 1:\n        print(-1)\n        continue\n    if k >= len(l):\n        print(1)\n        continue\n    print(-((1 - len(l)) // (k - 1)))", "import sys\nz = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, z().split())\n    a = [*map(int, z().split())]\n    s = len(set(a))\n    print(1 - 2 * (s > 1) if k < 2 else max(1, -((1 - s) // (k - 1))))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    a = len(set(arr)) - 1\n    if k == 1:\n        if a:\n            print(-1)\n        else:\n            print(1)\n    else:\n        print(1 + max(0, (a - 1) // (k - 1)))", "import math\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    st = len(set(l))\n    if k == 1 and st != 1:\n        print(-1)\n    elif k >= st:\n        print(1)\n    else:\n        print(1 + (st - 2) // (k - 1))", "t = int(input())\nfor nbt in range(t):\n    (n, k) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    nbc = len(set(a)) - 1\n    if k == 1:\n        if nbc:\n            print(-1)\n        else:\n            print(1)\n    else:\n        print(1 + max(0, (nbc - 1) // (k - 1)))", "import sys\n\ndef main():\n    T = int(input())\n    for ti in range(T):\n        (n, k) = map(int, input().split())\n        A = set((int(v) for v in input().split()))\n        if k == 1:\n            if len(A) == 1:\n                print(1)\n            else:\n                print(-1)\n            continue\n        if len(A) == 1:\n            print(1)\n        else:\n            print((len(A) - 3 + k) // (k - 1))\nmain()", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    length = len(set(input().split(' ')))\n    if k == 1 and length > 1:\n        print(-1)\n    elif k >= length:\n        print(1)\n    else:\n        length -= k\n        k -= 1\n        print((length + k - 1) // k + 1)", "from math import *\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = set(a)\n    m = len(s)\n    ans = 0\n    if k == 1:\n        if m == 1:\n            print(1)\n        else:\n            print(-1)\n    elif m <= k:\n        print(1)\n    else:\n        ans = 1\n        p = ceil((m - k) / (k - 1))\n        ans = ans + p\n        print(ans)", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    l = len(set(a))\n    if k == 1:\n        if l > k:\n            print(-1)\n        else:\n            print(1)\n    else:\n        coun = 0\n        while l > 0:\n            if coun == 0:\n                l -= k\n            else:\n                l -= k - 1\n            coun += 1\n        print(coun)", "t = int(input())\nans = []\nfor _ in range(t):\n    (n, k) = [int(i) for i in input().split()]\n    A = [int(i) for i in input().split()]\n    if k == 1:\n        if len(set(A)) != 1:\n            ans += [-1]\n        else:\n            ans += [1]\n    elif len(set(A)) <= k:\n        ans += [1]\n    else:\n        if (len(set(A)) - k) % (k - 1) == 0:\n            add = 0\n        else:\n            add = 1\n        ans += [(len(set(A)) - k) // (k - 1) + 1 + add]\nfor i in ans:\n    print(i)", "import math\nt = int(input())\nwhile t:\n    t = t - 1\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = len(set(a))\n    ans = 0\n    if b <= k:\n        ans = 1\n    elif k == 1 and b != 1:\n        ans = -1\n    else:\n        b -= k\n        ans = math.ceil(b / (k - 1))\n        ans += 1\n    print(ans)", "import math\n\ndef main():\n    t = int(input())\n    for t_ in range(t):\n        (n, k) = list(map(int, input().split(' ')))\n        a = list(map(int, input().split(' ')))\n        s = set(a)\n        if k == 1:\n            if len(s) == 1:\n                print(1)\n            else:\n                print(-1)\n        elif len(s) == 1:\n            print(1)\n        else:\n            print(int(math.ceil((len(s) - 1) / (k - 1))))\nmain()", "import math\n\ndef main():\n    t = int(input())\n    for t_ in range(t):\n        (n, k) = list(map(int, input().split(' ')))\n        a = list(map(int, input().split(' ')))\n        s = set(a)\n        if k == 1:\n            if len(s) == 1:\n                print(1)\n            else:\n                print(-1)\n        elif len(s) == 1:\n            print(1)\n        else:\n            print(int(math.ceil((len(s) - 1) / (k - 1))))\nmain()", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k == 1:\n        if len(set(a)) == 1:\n            print(1)\n        else:\n            print(-1)\n        continue\n    count = 0\n    c = 1\n    flag = True\n    for i in range(n - 1):\n        if a[i] != a[i + 1]:\n            count += 1\n    print(max((count + k - 2) // (k - 1), 1))", "import math\nt = int(input())\nfor _ in range(0, t):\n    ss = set()\n    ls1 = list(map(int, input().split()))\n    ls = list(map(int, input().split()))\n    elements = len(set(ls))\n    k = ls1[1]\n    if k == 1:\n        if elements > 1:\n            print(-1)\n        else:\n            print(1)\n    else:\n        ans = 1\n        elements -= k\n        k -= 1\n        while elements > 0:\n            elements -= k\n            ans += 1\n        print(ans)", "import math\nt = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    if k == 1:\n        if len(set(a)) == 1:\n            print(1)\n        else:\n            print(-1)\n    elif len(set(a)) <= k:\n        print(1)\n    else:\n        c = 0\n        for i in range(len(a) - 1):\n            if a[i] != a[i + 1]:\n                c += 1\n        print(math.ceil(c / (k - 1)))\n    t = t - 1", "import math\nfor z in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    if len(set(a)) > 1 and k == 1:\n        print('-1')\n    else:\n        p = len(set(a))\n        cnt = 1\n        p -= k\n        while p > 0:\n            cnt += 1\n            p -= k - 1\n        print(cnt)", "import math\nT = int(input())\nfor _ in range(T):\n    (n, k) = tuple(map(int, input().split()))\n    x = list(map(int, input().split()))\n    s = set()\n    for i in range(len(x)):\n        s.add(x[i])\n    if k == 1:\n        if len(s) > 1:\n            print(-1)\n        else:\n            print(1)\n    elif k > len(s):\n        print(1)\n    else:\n        print(math.ceil((len(s) - k) / (k - 1)) + 1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = sorted(set(map(int, input().split())))\n    if len(l) > 1 and k == 1:\n        print(-1)\n        continue\n    if k >= len(l):\n        print(1)\n        continue\n    print(-((1 - len(l)) // (k - 1)))", "def solve():\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(1)\n        return\n    diff = 1\n    ans = 1\n    for (i, v) in enumerate(a):\n        if i > 0:\n            if v == a[i - 1]:\n                continue\n            else:\n                diff += 1\n                if diff > k:\n                    ans += 1\n                    diff = 2\n    if diff > k:\n        print(-1)\n    else:\n        print(ans)\n    return\n\ndef main():\n    t = 1\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a1 = set(a)\n    d = len(a1)\n    j = 0\n    m = 0\n    tot = 0\n    while tot < d and k - (j > 0) > 0:\n        t = k - (j > 0)\n        tot += t\n        m += 1\n        j += 1\n    if tot < d:\n        print(-1)\n    else:\n        print(m)", "import math\nt = int(input())\nwhile t != 0:\n    t -= 1\n    (n, k) = map(int, input().split())\n    li = list(map(int, input().split()))\n    dic = {}\n    c = 0\n    for i in li:\n        if i not in dic:\n            dic[i] = 1\n            c += 1\n    if k == 1 and c > 1:\n        print('-1')\n    elif k == c:\n        print('1')\n    elif c < k:\n        print('1')\n    elif c > k and k != 1:\n        c = c - k\n        jk = math.ceil(c / (k - 1))\n        print(jk + 1)", "for _ in range(int(input())):\n    [n, k] = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    output = 0\n    if k == 1:\n        if len(set(arr)) > 1:\n            print(-1)\n        else:\n            print(1)\n    else:\n        j = len(set(arr))\n        j -= k\n        output += 1\n        if j > 0:\n            output += j // (k - 1)\n            if j % (k - 1) != 0:\n                output += 1\n        print(output)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    g = [0] * 105\n    for j in range(n):\n        g[a[j]] = g[a[j]] + 1\n    c = 0\n    for j in range(105):\n        if g[j] > 0:\n            c = c + 1\n    if c <= k:\n        print('1')\n    elif k == 1 and c > 1:\n        print('-1')\n    else:\n        if (c - 1) % (k - 1) == 0:\n            c = (c - 1) // (k - 1)\n        else:\n            c = (c - 1) // (k - 1) + 1\n        print(c)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    s = set(arr)\n    l = len(s)\n    if k == 1:\n        if l > 1:\n            print(-1)\n        else:\n            print(1)\n    elif l <= k:\n        print(1)\n    elif (l - k) % (k - 1) == 0:\n        print(1 + (l - k) // (k - 1))\n    else:\n        print(2 + (l - k) // (k - 1))", "import math\nt = int(input())\nfor j in range(0, t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    d = 0\n    if k == 1:\n        for i in range(0, n - 1):\n            if a[i] != a[i + 1]:\n                d = -1\n                print(-1)\n                break\n        if d != -1:\n            print(1)\n    else:\n        rt = set(a)\n        yz = len(rt)\n        if yz <= k:\n            print(1)\n        else:\n            uu = 1\n            yz = yz - k\n            if yz % (k - 1) == 0:\n                uu += yz // (k - 1)\n            else:\n                uu += yz // (k - 1) + 1\n            print(uu)", "import math\ntest = int(input())\nfor q in range(test):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    x = set()\n    if k == 1:\n        if a[0] != a[n - 1]:\n            print(-1)\n            continue\n        else:\n            print(1)\n            continue\n    ans = 0\n    i = 0\n    while i < n:\n        x.add(a[i])\n        if len(x) == k + 1:\n            x = set()\n            x.add(a[i])\n            ans = 1\n            break\n        i += 1\n    if i == n:\n        print(1)\n        continue\n    for j in range(i, n):\n        x.add(a[j])\n    ans += math.ceil(len(x) / (k - 1))\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a = list(set(a))\n    a.sort()\n    count = 1\n    if k == 1 and len(a) > 1:\n        print(-1)\n    else:\n        while sum(a) != 0:\n            if len(a) < k:\n                count += 1\n                break\n            max_ele = a[k - 1]\n            for i in range(len(a)):\n                if a[i] >= max_ele:\n                    a[i] -= max_ele\n                elif a[i] < max_ele:\n                    a[i] = 0\n            a = list(set(a))\n            a.sort()\n            count += 1\n        print(count - 1)", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    a = set(a)\n    count = len(a)\n    ans = 0\n    if k == 1 and count > 1:\n        print(-1)\n    else:\n        ans = 1\n        count -= k\n        k -= 1\n        while count > 0:\n            count -= k\n            ans += 1\n        print(ans)\n    t -= 1", "for _ in range(int(input())):\n    (N, M) = [int(i) for i in input().split(' ')]\n    A = [int(i) for i in input().split(' ')]\n    count = 1\n    for i in range(1, N):\n        if A[i] != A[i - 1]:\n            count += 1\n    if M == 1:\n        if count == 1:\n            print(1)\n        else:\n            print(-1)\n    elif M >= count:\n        print(1)\n    else:\n        ans = 0\n        count -= M\n        ans = 1\n        if count % (M - 1) == 0:\n            ans += count // (M - 1)\n            print(ans)\n        else:\n            ans += count // (M - 1) + 1\n            print(ans)", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s = list(map(int, input().split()))\n    setlen = len(list(set(s)))\n    if k == 1:\n        if setlen > 1:\n            print(-1)\n            continue\n    if k >= setlen:\n        print(1)\n        continue\n    setlen -= 1\n    k -= 1\n    print(math.ceil(setlen / k))", "for i in range(int(input())):\n    (n, k) = [int(num) for num in input().split()]\n    x = list(map(int, input().split()))\n    if len(set(x)) <= k:\n        print(1)\n    elif k < 2:\n        print(-1)\n    else:\n        c = len(set(x))\n        c1 = c - k\n        c1 = c1 // (k - 1)\n        if (c - k) % (k - 1) == 0:\n            print(c1 + 1)\n        else:\n            print(c1 + 2)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a1 = set(list(map(int, input().split())))\n    d = len(a1)\n    j = 0\n    m = 0\n    tot = 0\n    while tot < d and k - (j > 0) > 0:\n        t = k - (j > 0)\n        tot += t\n        m += 1\n        j += 1\n    print(-1) if tot < d else print(m)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    d = len(set(list(map(int, input().split()))))\n    j = 0\n    m = 0\n    tot = 0\n    while tot < d and k - (j > 0) > 0:\n        t = k - (j > 0)\n        tot += t\n        m += 1\n        j += 1\n    print(-1) if tot < d else print(m)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    temp = len(set(a))\n    if k != 1:\n        r = temp + k - 3\n        print(max(1, r // (k - 1)))\n    elif temp == 1:\n        print(1)\n    else:\n        print(-1)", "def solve(A, n, k):\n    prev = -1\n    dist = []\n    for it in A:\n        if it != prev:\n            dist.append(it)\n            prev = it\n    td = len(dist)\n    if k == 1:\n        if td == 1:\n            return 1\n        else:\n            return -1\n    if td <= k:\n        return 1\n    ans = (td - 2) // (k - 1) + 1\n    return ans\nfor case in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = solve(a, n, k)\n    print(ans)", "import sys\nsys.setrecursionlimit(10 ** 5)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\nfor _ in range(II()):\n    (n, k) = MI()\n    aa = LI()\n    cnt = 0\n    for i in range(n - 1):\n        if aa[i] != aa[i + 1]:\n            cnt += 1\n    if cnt == 0:\n        print(1)\n        continue\n    if k == 1:\n        print(-1)\n        continue\n    ans = (cnt + k - 2) // (k - 1)\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    A = [int(x) for x in input().split()]\n    if k == 1:\n        flag = 0\n        for i in A:\n            if A[0] != i:\n                flag = 1\n        if flag == 1:\n            print(-1)\n        else:\n            print(1)\n    else:\n        x = set(A)\n        if len(x) <= k:\n            print(1)\n        else:\n            print(max(1, (len(x) - 1 + (k - 2)) // (k - 1)))", "def solve():\n    case = int(input())\n    for _case in range(case):\n        (n, k) = map(int, input().split())\n        li = list(map(int, input().split()))\n        number = 1\n        for i in range(1, n):\n            if li[i] != li[i - 1]:\n                number += 1\n        if number == 1:\n            print(1)\n        elif k == 1:\n            print(-1)\n        else:\n            print((number - 2) // (k - 1) + 1)\nsolve()", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    unique = 0\n    prev_element = -1\n    for element in map(int, input().split()):\n        if element != prev_element:\n            unique += 1\n            prev_element = element\n    if k >= unique:\n        print(1)\n    elif k == 1:\n        print(-1)\n    else:\n        print(1 + math.ceil((unique - k) / (k - 1)))", "import sys\n\ndef minp():\n    return sys.stdin.readline().strip()\n\ndef mint():\n    return int(minp())\n\ndef mints():\n    return map(int, minp().split())\n\ndef solve():\n    (n, k) = mints()\n    p = -5\n    q = -1\n    for i in mints():\n        if i != p:\n            q += 1\n        p = i\n    if k == 1:\n        if q > 0:\n            print(-1)\n        else:\n            print(1)\n        return\n    print(max((q + k - 2) // (k - 1), 1))\nfor i in range(mint()):\n    solve()", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    aS = set(a)\n    u = len(aS)\n    answer = 0\n    if 0 not in aS:\n        u -= min(k - 1, u - 1)\n        answer += 1\n    k -= 1\n    if k == 0:\n        if u == 1:\n            print(answer)\n        else:\n            print(-1)\n    else:\n        allSame = (u + k - 2) // k\n        print(answer + allSame)", "import sys\nimport math\n\ndef swap(x, y, a):\n    temp = a[x]\n    a[x] = a[y]\n    a[y] = temp\n    return a\n\ndef solve():\n    return None\n\ndef main():\n    q = []\n    for line in sys.stdin.readlines():\n        q.append(line)\n    for i in range(len(q)):\n        q[i] = q[i].rstrip().split(' ')\n        q[i] = [int(x) for x in q[i]]\n    for i in range(1, len(q), 2):\n        n = q[i][0]\n        k = q[i][1]\n        a = q[i + 1]\n        u = len(set(a))\n        if k == 1 and u != 1:\n            print(-1)\n        elif k == 1 or u == 1:\n            print(1)\n        else:\n            ret = math.ceil((u - k) / (k - 1))\n            print(ret + 1)\nmain()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr = list(set(arr))\n    arr.sort()\n    n = len(arr)\n    if k >= 1 and n == 1:\n        print(1)\n        continue\n    if k == 1 and n > 1:\n        print(-1)\n        continue\n    c = len(arr) - 1\n    ans = c / (k - 1)\n    if int(ans) == ans:\n        ans = int(ans)\n    else:\n        ans = int(ans) + 1\n    print(ans)", "from math import ceil\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    l = len(set(a))\n    if k == 1:\n        print(1 - 2 * (l > 1))\n    else:\n        print(max(1, ceil((l - 1) / (k - 1))))", "for __ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    h = len(set(a))\n    count = 0\n    if k == 1:\n        if h == 1:\n            print(1)\n        else:\n            print(-1)\n    else:\n        for i in range(0, n - 1):\n            if a[i + 1] - a[i] != 0:\n                count += 1\n        if count == 0:\n            print(1)\n        elif count % (k - 1) != 0:\n            print(count // (k - 1) + 1)\n        else:\n            print(count // (k - 1))", "game = int(input())\nfor i in range(game):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = set(a)\n    p = len(b)\n    q = 0\n    count = 0\n    j = 1\n    if k == 1:\n        if p == 1:\n            print(1)\n        else:\n            print(-1)\n    elif p <= k:\n        print(1)\n    else:\n        q = p - k\n        while (q - 0.1) // ((k - 1) * j) != 0:\n            count += 1\n            j += 1\n        print(count + 2)", "t = int(input())\nfor tc in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if len(set(a)) <= k:\n        print(1)\n    elif k == 1:\n        print(-1)\n    else:\n        print(int((len(set(a)) - k - 0.1) // (k - 1) + 2))", "import sys\n\ndef rs():\n    return sys.stdin.readline().rstrip()\n\ndef ri():\n    return int(sys.stdin.readline())\n\ndef ria():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef ws(s):\n    sys.stdout.write(s + '\\n')\n\ndef wi(n):\n    sys.stdout.write(str(n) + '\\n')\n\ndef wia(a):\n    sys.stdout.write(' '.join([str(x) for x in a]) + '\\n')\n\ndef ceil(x, y=1):\n    return int(-(-x // y))\nimport math\nfrom collections import defaultdict\nfor _ in range(ri()):\n    (n, k) = ria()\n    l = ria()\n    s = set(l)\n    if k == 1 and len(s) > 1:\n        wi(-1)\n    elif k == 1 and len(s) == 1:\n        wi(1)\n    else:\n        x = len(s)\n        if x <= k:\n            wi(1)\n        else:\n            x -= k\n            k -= 1\n            wi(1 + math.ceil(x / k))", "import math\n\ndef solve(a, n, k):\n    st = set(a)\n    if k == 1 and len(st) == 1:\n        return 1\n    if k == 1 and len(st) != 1:\n        return -1\n    return max(1, 1 + math.ceil((len(st) - k) / (k - 1)))\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(solve(a, n, k))", "t = int(input())\nfor nbt in range(t):\n    (n, k) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    nbc = len(set(a)) - 1\n    if k == 1:\n        if nbc:\n            print(-1)\n        else:\n            print(1)\n    else:\n        print(1 + max(0, (nbc - 1) // (k - 1)))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = set(map(int, input().split()))\n    if len(l) > 1 and k == 1:\n        print(-1)\n        continue\n    if k >= len(l):\n        print(1)\n        continue\n    print(-((1 - len(l)) // (k - 1)))", "import sys\nz = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, z().split())\n    a = [*map(int, z().split())]\n    s = len(set(a))\n    if k < 2:\n        print(1 - 2 * (s > 1))\n    else:\n        print(max(1, -((1 - s) // (k - 1))))", "from math import ceil\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    st = list(set(a))\n    size = len(st)\n    if size == k:\n        print(1)\n        continue\n    if k == 1:\n        print(-1)\n    else:\n        size -= k\n        if size < 0:\n            print(1)\n        else:\n            print(1 + ceil(size / (k - 1)))", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    a = len(set(l))\n    if k == 1:\n        if a == 1:\n            print(1)\n        else:\n            print(-1)\n    else:\n        print(max(1, math.ceil((a - 1) / (k - 1))))", "import math\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    a = len(set(l))\n    if k == 1:\n        if a == 1:\n            print(1)\n        else:\n            print(-1)\n    else:\n        print(max(1, math.ceil((a - 1) / (k - 1))))", "from math import ceil\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    d = len(set(a))\n    if k == 1:\n        if d == 1:\n            print(1)\n        else:\n            print(-1)\n    else:\n        print(max(1, ceil((d - 1) / (k - 1))))", "PI = 3.141592653589793\nINF = 999999999\nMOD = 1000000007\nimport math\n\ndef add(x, y):\n    return (x + y) % MOD\n\ndef sub(x, y):\n    return (x - y + MOD) % MOD\n\ndef mul(x, y):\n    return x * y % MOD\n\ndef gcd(x, y):\n    if y == 0:\n        return x\n    return gcd(y, x % y)\n\ndef lcm(x, y):\n    return x * y // gcd(x, y)\n\ndef power(x, y):\n    res = 1\n    x %= MOD\n    while y != 0:\n        if y & 1:\n            res = mul(res, x)\n        y >>= 1\n        x = mul(x, x)\n    return res\n\ndef mod_inv(n):\n    return power(n, MOD - 2)\n\ndef prob(p, q):\n    return mul(p, power(q, MOD - 2))\n\ndef ii():\n    return int(input())\n\ndef li():\n    return [int(i) for i in input().split()]\n\ndef ls():\n    return [i for i in input().split()]\nfor t in range(ii()):\n    t += 1\n    (n, k) = li()\n    a = li()\n    dist = 1\n    for i in range(1, n):\n        if a[i] != a[i - 1]:\n            dist += 1\n    if k == 1:\n        if dist == 1:\n            print(1)\n        else:\n            print(-1)\n    else:\n        print(max(1, math.ceil((dist - 1) / (k - 1))))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().strip().split(' '))\n    lst = list(map(int, input().strip().split(' ')))\n    l = len(list(set(lst)))\n    if k == 1 and l > 1:\n        print(-1)\n    else:\n        j = 1\n        while True:\n            p1 = k * j - (j - 1)\n            p2 = k * (j + 1) - j\n            if l <= p1:\n                print(j)\n                break\n            elif l > p1 and l <= p2:\n                print(j + 1)\n                break\n            else:\n                j += 1", "import collections\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = len(collections.Counter(a))\n    if c <= k:\n        print(1)\n    elif k == 1:\n        print(-1)\n    else:\n        m = (c - 1) // (k - 1)\n        if m * (k - 1) + 1 < c:\n            m += 1\n        print(m)", "from collections import defaultdict\nfor i1 in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    dict = defaultdict(int)\n    for i in l:\n        dict[i] += 1\n    p = len(dict)\n    if k >= p:\n        print(1)\n        continue\n    if k == 1:\n        print(-1)\n        continue\n    else:\n        ans = 1\n        check = (p - k) / (k - 1)\n        if check == int(check):\n            ans += int(check)\n        else:\n            ans += int(check) + 1\n        print(ans)", "from collections import Counter\n\ndef solve(n, k, a, count):\n    if count <= k:\n        return 1\n    if k == 1:\n        if count != 1:\n            return -1\n        return 1\n    c = 0\n    m = 0\n    l = 0\n    s = set()\n    for i in range(n):\n        if a[i] - l not in s:\n            s.add(a[i] - l)\n        c += 1\n        if len(s) == k or c == n:\n            m += 1\n            s = set()\n            s.add(0)\n            l = a[i]\n            c = 0\n    if len(s) > 1:\n        m += 1\n    return m\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    p = Counter(a)\n    count = len(p)\n    print(solve(n, k, a, count))", "import os\nimport math\ntrue = True\nfalse = False\nfrom functools import reduce\nis_dev = 'vscode' in os.environ\nif is_dev:\n    inF = open('in.txt', 'r')\n    outF = open('out.txt', 'w')\n\ndef ins():\n    return list(map(int, input_().split(' ')))\n\ndef inss():\n    return list(input_().split(' '))\n\ndef input_():\n    if is_dev:\n        return inF.readline()[:-1]\n    else:\n        return input()\n\ndef ranin():\n    return range(int(input_()))\n\ndef print_(data):\n    if is_dev:\n        outF.write(str(data) + '\\n')\n    else:\n        print(data)\nfor _ in range(int(input_())):\n    (n, k) = ins()\n    a = ins()\n    unique_a_count = len(set(a))\n    if k == 1:\n        print_(-1 if unique_a_count > 1 else 1)\n    elif unique_a_count - k <= 0:\n        print_(1)\n    else:\n        unique_a_count -= k\n        print_(math.ceil(unique_a_count / (k - 1)) + 1)\nif is_dev:\n    outF.close()\n\n    def compare_file():\n        print(open('out.txt', 'r').read() == open('outactual.txt', 'r').read())\n    compare_file()", "def solution(n, k, a):\n    res = 1\n    if k == 1:\n        for i in range(1, n):\n            if a[i] != a[0]:\n                return -1\n        return 1\n    cnt = 1\n    cur = a[0]\n    for index in range(1, n):\n        if cur == a[index]:\n            continue\n        if cnt == k:\n            res += 1\n            cnt = 1\n        cnt += 1\n        cur = a[index]\n    return res\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(solution(n, k, a))", "from collections import Counter\nfrom math import ceil\nt = int(input())\nwhile t:\n    (n, k) = [int(x) for x in input().split()]\n    arr = [int(x) for x in input().split()]\n    count = Counter(arr)\n    pp = len(count)\n    if k >= pp:\n        print(1)\n    elif k == 1:\n        print(-1)\n    else:\n        print(1 + ceil((pp - k) / (k - 1)))\n    t -= 1", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    d = 0\n    for i in range(n - 1):\n        if l[i] < l[i + 1]:\n            d += 1\n    if d == 0:\n        print(1)\n    elif k == 1:\n        print(-1)\n    else:\n        print(int((d + k - 2) / (k - 1)))", "from collections import Counter\nimport math\nimport sys\nfrom bisect import bisect, bisect_left, bisect_right\n\ndef input():\n    return sys.stdin.readline().strip()\n\ndef INT():\n    return int(input())\n\ndef MAP():\n    return map(int, input().split())\n\ndef LIST(N=None):\n    return list(MAP()) if N is None else [INT() for i in range(N)]\n\ndef mod():\n    return 10 ** 9 + 7\nfor i in range(INT()):\n    (n, k) = MAP()\n    arr = LIST()\n    arr1 = list(set(arr))\n    if len(arr1) != 1 and k == 1:\n        print(-1)\n    elif k == 1 and len(arr1) == 1:\n        print(1)\n    else:\n        length = len(arr1)\n        ans = 0\n        if length == 1:\n            print(1)\n        else:\n            while length > 1:\n                length -= k - 1\n                ans += 1\n            print(ans)", "testCase = int(input())\n\ndef func(arr, k):\n    (t, cnt) = (-1, 0)\n    for i in range(len(arr)):\n        if arr[i] != t:\n            cnt += 1\n        t = arr[i]\n        if cnt == k + 1:\n            return [0] * i + [j - arr[i - 1] for j in arr[i:]]\n    return [0] * len(arr)\nfor tc in range(testCase):\n    (m, flag) = (0, 0)\n    (n, k) = map(int, input().split())\n    num = list(map(int, input().split()))\n    while num.count(0) != len(num):\n        t = num.copy()\n        num = func(num, k)\n        if t == num:\n            flag = 1\n            break\n        m += 1\n    print(-1 if flag else m)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    count = 1\n    for i in range(1, n):\n        if a[i] != a[i - 1]:\n            count += 1\n    if count == 1:\n        print(1)\n    elif k == 1:\n        print(-1)\n    elif (count - 1) % (k - 1) == 0:\n        print((count - 1) // (k - 1))\n    else:\n        print((count - 1) // (k - 1) + 1)", "for _ in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    lst = [int(i) for i in input().split()]\n    m = len(set(lst)) - 1\n    if k == 1:\n        print(-1 if m else 1)\n    else:\n        print(1 + max(0, (m - 1) // (k - 1)))", "import math\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = len(set(input().split()))\n    if k == 1:\n        if a > 1:\n            print(-1)\n        else:\n            print(1)\n    else:\n        print(math.ceil((a - 1) / (k - 1)) or 1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = set(map(int, input().split()))\n    if len(l) == 1:\n        print(1)\n    elif k == 1:\n        print(-1)\n    else:\n        print((len(l) - 2 + (k - 1)) // (k - 1))", "import sys\nfrom sys import stdin, stdout\nfrom math import ceil, floor, sqrt, log, log2, log10\nfrom collections import Counter\nint_max = float('inf')\nint_min = -float('inf')\nANS = []\ninput = stdin.readline\n\ndef solve():\n    pass\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if k == 1:\n        if len(set(arr)) == 1:\n            print(1)\n        else:\n            print(-1)\n            continue\n    else:\n        if len(set(arr)) == 1:\n            print(1)\n            continue\n        a = []\n        for i in range(n - 1):\n            a.append(arr[i + 1] - arr[i])\n        c = a.count(0)\n        c = len(a) - c\n        print(ceil(c / (k - 1)))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if k == 1:\n        f = True\n        for i in range(1, n):\n            if a[i] != a[i - 1]:\n                f = False\n        if f:\n            print(1)\n        else:\n            print(-1)\n        continue\n    m = [[0] * n]\n    sum_arr = [0] * n\n    i = 1\n    m[0][0] = a[0]\n    cur_b = 0\n    last = 0\n    while True:\n        temp_k = k - 1\n        tt = False\n        while temp_k != 0:\n            if a[i] != a[i - 1]:\n                temp_k -= 1\n            m[cur_b][i] = a[i] - last\n            i += 1\n            if i == n:\n                tt = True\n                break\n        if tt:\n            break\n        l_i = n\n        for j in range(i, n):\n            m[cur_b][j] = m[cur_b][i - 1]\n            if a[j] != a[j - 1] and l_i == n:\n                l_i = j\n        i = l_i\n        if i == n:\n            break\n        cur_b += 1\n        m.append([0] * n)\n    print(len(m))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    inp = [int(j) for j in input().split()]\n    cnt = 0\n    flag = 0\n    while 1:\n        temp = list(set(inp))\n        temp.sort()\n        if len(temp) >= k:\n            minVal = temp[k - 1]\n        else:\n            minVal = temp[-1]\n        if minVal == 0:\n            if len(temp) <= 1:\n                break\n            else:\n                flag = 1\n                break\n        for i in range(n):\n            if inp[i] - minVal < 0:\n                inp[i] = 0\n            else:\n                inp[i] = inp[i] - minVal\n        cnt += 1\n    if flag == 1:\n        print(-1)\n    else:\n        print(cnt)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    l = len(set(a))\n    if l == 1:\n        print(1)\n    elif l <= k:\n        print(1)\n    elif k == 1 and l != 1:\n        print(-1)\n    else:\n        ans = 0\n        sumi = -1\n        while sumi != 0:\n            sumi = 0\n            ans += 1\n            nc = k\n            s = a[0]\n            for z in range(n):\n                if nc:\n                    if s != a[z]:\n                        nc -= 1\n                        if nc:\n                            s = a[z]\n                a[z] -= s\n                sumi += a[z]\n        print(ans)"]