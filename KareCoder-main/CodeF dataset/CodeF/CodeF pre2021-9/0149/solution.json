["from sys import stdin\nT = int(stdin.readline())\nfor t in range(T):\n    nums = [int(x) for x in stdin.readline().split()]\n    nums.sort()\n    print(nums[0] * nums[2])", "for _ in [*open(0)][1:]:\n    a = sorted(list(map(int, _.split())))\n    print(a[0] * a[2])", "for l in [*open(0)][1:]:\n    b = sorted([*map(int, l.split())])\n    print(b[0] * b[2])", "testcase = int(input())\nresult = []\nwhile testcase:\n    sides = input()\n    sides = sides.split(' ')\n    sides = list(map(int, sides))\n    sides.sort()\n    area = sides[0] * sides[2]\n    result.append(str(area))\n    testcase -= 1\nprint('\\n'.join(result))", "t = int(input())\nans = ''\nfor j in range(t):\n    a = sorted([int(i) for i in input().split()])\n    ans += str(a[0] * a[2]) + '\\n'\nprint(ans)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef invr():\n    return list(map(int, input().split()))\nt = inp()\nwhile t:\n    a = invr()\n    a.sort()\n    print(a[0] * a[2])\n    t -= 1", "for l in [*open(0)][1:]:\n    b = sorted([*map(int, l.split())])\n    print(b[0] * b[2])", "import math\nimport sys\nimport itertools\nimport fractions\nwtf = sys.stdin.read()\nwtf = wtf.strip().split('\\n')\nfor t in wtf[1:]:\n    A = sorted(map(int, t.split()))\n    print(A[0] * A[2])", "import sys\ninput = sys.stdin.readline\ninputLines = sys.stdin.readlines\n\ndef readIntList():\n    return list(map(int, input().split()))\n\ndef readStrList():\n    return list(map(lambda x: x.strip(), inputLines()))\n\ndef indexOf(l: list, elem):\n    return l.index(elem) if elem in l else -1\n\ndef lastIndexOf(l: list, elem):\n    indexes = [idx for (idx, val) in enumerate(l) if val == elem]\n    return max(indexes) if len(indexes) > 0 else -1\n\ndef solution():\n    for _ in range(int(input())):\n        l = readIntList()\n        l.sort()\n        print(l[0] * l[2])\nsolution()", "n = int(input())\nt = []\nfor i in range(n):\n    x = list(map(int, input().split()))\n    x.sort()\n    t.append(x)\nfor j in t:\n    print(j[0] * j[2])", "import sys\ninput = sys.stdin.readline\ninputLines = sys.stdin.readlines\n\ndef readIntList():\n    return list(map(int, input().split()))\n\ndef readStrList():\n    return list(map(lambda x: x.strip(), inputLines()))\n\ndef indexOf(l: list, elem):\n    return l.index(elem) if elem in l else -1\n\ndef lastIndexOf(l: list, elem):\n    indexes = [idx for (idx, val) in enumerate(l) if val == elem]\n    return max(indexes) if len(indexes) > 0 else -1\n\ndef solution():\n    for _ in range(int(input())):\n        l = readIntList()\n        l.sort()\n        print(min(l[0], l[1]) * l[2])\nsolution()", "import sys, io, os, math\nfrom math import ceil, log, gcd, inf\nfrom itertools import permutations\nmod = 1000000007\n\ndef printlist(n):\n    sys.stdout.write(' '.join(map(str, n)) + '\\n')\nprintf = lambda n: sys.stdout.write(str(n) + '\\n')\n\ndef printns(n):\n    sys.stdout.write(str(n))\n\ndef intinp():\n    return int(sys.stdin.readline())\n\ndef strinp():\n    return sys.stdin.readline()\n\ndef arrinp():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef mulinp():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef flush():\n    return sys.stdout.flush()\n\ndef power_two(x):\n    return 1 << x\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef solve():\n    a = arrinp()\n    a.sort()\n    print(a[0] * a[2], end='\\n')\n    return\n\ndef main():\n    tc = intinp()\n    while tc:\n        solve()\n        tc -= 1\nmain()", "import sys\nimport math\n\ndef scan(input_type='int'):\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef solution():\n    for _ in range(int(input())):\n        a = scan()\n        a.sort()\n        print(a[0] * a[2])\nsolution()", "test_cases = input()\nsegment_array = []\nfor i in range(int(test_cases)):\n    segment = input().split(' ')\n    segment = [int(number) for number in segment]\n    segment.sort()\n    segment_array.append(segment)\nfor segment in segment_array:\n    print(segment[0] * segment[2])", "t = int(input())\ncases = []\nwhile t > 0:\n    cases.append([int(x) for x in input().split(' ')])\n    t -= 1\nfor case in cases:\n    case.sort()\n    print(min(case[0], case[1]) * min(case[2], case[3]))", "import math\nn = int(input())\nl1 = [0]\nfor i in range(n):\n    (a, b, c, d) = map(int, input().split())\n    minimum = min(a, b, c, d)\n    arr = [a, b, c, d]\n    arr.sort(reverse=False)\n    area = minimum * arr[2]\n    l1.append(area)\nfor i in range(n):\n    print(l1[i + 1])", "from sys import stdin\n\ndef main():\n    (readln, out) = (stdin.readline, list())\n    for i in range(int(readln())):\n        a = sorted(map(int, readln().split()))\n        out.append(a[0] * a[2])\n    print(*out, sep='\\n')\nmain()", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    A = list(map(int, input().split()))\n    A.sort()\n    print(A[0] * A[2])", "import sys\ntest_count = int(sys.stdin.readline())\ntests = []\nfor _ in range(test_count):\n    tests.append(sys.stdin.readline())\nfor test in tests:\n    values = sorted(map(int, test.strip().split(' ')))\n    answer = values[0] * values[2]\n    sys.stdout.write(f'{answer}\\n')", "t = int(input())\ntest = []\nfor i in range(t):\n    x = input().split()\n    test.append(x)\ni = 0\nfor i in range(t):\n    a = sorted(list(map(int, test[i])))\n    print(a[0] * a[2])", "import sys\nsys.setrecursionlimit(1000000)\nfrom collections import defaultdict, deque, Counter\nfrom itertools import permutations\nfrom math import sqrt, gcd, pi, factorial\nfrom functools import reduce\nfrom sys import stdin\nfrom bisect import bisect_right, bisect_left\nfrom copy import copy\n\ndef solve(a):\n    a = sorted(a)\n    return a[0] * a[2]\nt = int(input())\nanss = [0 for _ in range(t)]\nfor i in range(t):\n    a = list(map(int, input().split()))\n    anss[i] = solve(a)\nfor ans in anss:\n    print(ans)", "import sys\nimport math\nimport collections\nimport bisect\nimport string\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\nfor t in range(int(input())):\n    arr = get_list()\n    arr.sort()\n    print(arr[0] * arr[2])", "for i in [sorted([int(x) for x in input().split(' ')]) for _ in range(int(input()))]:\n    print(i[0] * i[2])", "from sys import stdin\nfrom collections import Counter\nfrom math import pow, sqrt, factorial, log10, log\nfrom itertools import permutations, combinations, combinations_with_replacement\ninput = stdin.readline\n\ndef solve(a):\n    a.sort()\n    c = min(a[:2])\n    d = min(a[2:])\n    print(c * d)\nt = int(input())\nfor i in range(t):\n    a = list(map(int, input().split()))\n    solve(a)", "No_of_testcases = int(input())\nlist1 = []\nfor i in range(0, No_of_testcases):\n    list1.append(list(map(int, input().split())))\nfor i in list1:\n    j = sorted(i)\n    print(j[0] * j[2])", "t = int(input())\narr = []\nfor _ in range(t):\n    a = input()\n    a = a.split(' ')\n    a = [int(k) for k in a]\n    a.sort()\n    arr.append(a)\nfor i in arr:\n    print(i[0] * i[2])", "n = int(input())\nres = []\nfor i in range(n):\n    b = [int(x) for x in input().split()]\n    b.sort()\n    res.append(b[0] * b[2])\nfor i in res:\n    print(i)", "cnt = int(input())\nrounds = []\n\ndef get_area(narr):\n    narr.sort()\n    print(narr[0] * narr[2])\nfor i in range(0, cnt):\n    rounds.append(input().split(' '))\nfor r in rounds:\n    get_area(list(map(int, r)))", "t = int(input())\nanswers = []\nfor i in range(t):\n    arr = []\n    arr.append(input().split())\n    arr2 = []\n    for i in range(len(arr[0])):\n        arr2.append(int(arr[0][i]))\n    arr2.sort(reverse=True)\n    max_area = arr2[1] * arr2[3]\n    answers.append(max_area)\nfor i in answers:\n    print(i)", "import math\nfrom collections import defaultdict\nfrom sys import stdin\ninput = stdin.readline\nT = int(input())\nfor _ in range(T):\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[0] * a[2])", "t = int(input())\nout = ''\nwhile t > 0:\n    arr = [int(item) for item in input().split()]\n    arr.sort()\n    a1 = min(arr[0], arr[2]) * min(arr[1], arr[3])\n    a2 = min(arr[0], arr[1]) * min(arr[2], arr[3])\n    out += str(max(a1, a2))\n    t = t - 1\n    out += '\\n'\nprint(out)", "def insertion_sort(l):\n    for i in range(len(l)):\n        for j in range(i):\n            k = i - j\n            if l[k] < l[k - 1]:\n                (l[k], l[k - 1]) = (l[k - 1], l[k])\n    return l\n\ndef main_function():\n    return '\\n'.join([str(t[0] * t[2]) for t in [insertion_sort([int(k) for k in input().split(' ')]) for i in range(int(input()))]])\nprint(main_function())", "ans = []\n\ndef solve(arr):\n    arr = sorted(arr, key=lambda x: x)\n    return arr[0] * arr[2]\nk = int(input())\narr = []\nfor i in range(k):\n    arr.append([int(x) for x in input().split()])\nfor i in range(len(arr)):\n    print(solve(arr[i]))", "for _ in range(int(input())):\n    arr = list(map(int, input().split()))\n    arr.sort()\n    print(arr[0] * arr[2])", "for _ in [0] * int(input()):\n    w = sorted(map(int, input().split()))\n    print(w[0] * w[2])", "t = int(input())\nfor _ in range(t):\n    a = sorted([int(x) for x in input().split()])\n    print(a[0] * a[2])", "t = int(input())\nfor _ in range(t):\n    a = [int(i) for i in input().split()]\n    a.sort()\n    print(a[0] * a[-2])", "import math\ntt = int(input())\nfor i in range(tt):\n    list1 = list(map(int, input().split()))[:4]\n    list1.sort()\n    ans = list1[0] * list1[2]\n    print(ans)", "n = int(input())\nfor i in range(n):\n    x = list(map(int, input().split()))\n    x.sort()\n    print(x[0] * x[2])", "test_cases = int(input())\nwhile test_cases != 0:\n    numbers = input().split()\n    numbers_int = []\n    for i in numbers:\n        numbers_int.append(int(i))\n    numbers_int.sort()\n    print(numbers_int[0] * numbers_int[2])\n    test_cases -= 1", "test_cases = int(input())\nwhile test_cases != 0:\n    numbers = input().split()\n    numbers_int = []\n    for i in numbers:\n        numbers_int.append(int(i))\n    numbers_int.sort()\n    print(numbers_int[0] * numbers_int[2])\n    test_cases -= 1", "for _ in range(int(input())):\n    arr = list(map(int, input().split()))\n    arr.sort()\n    area = arr[0] * arr[2]\n    print(area)", "def solve(nums):\n    nums.sort()\n    return nums[0] * nums[2]\nt = int(input())\nwhile t:\n    nums = list(map(int, input().split()))\n    print(solve(nums))\n    t -= 1", "t = int(input())\nwhile t != 0:\n    a = list(map(int, input().strip().split()))\n    a.sort()\n    print(a[0] * a[2])\n    t -= 1", "t = int(input())\nfor i in range(t):\n    l = list(map(int, input().split()))\n    l.sort()\n    print(l[0] * l[-2])", "for _ in range(int(input())):\n    arr = sorted(list(map(int, input().split())))\n    print(arr[0] * arr[2])", "for t in range(int(input())):\n    a = sorted(list(map(int, input().split())))\n    print(a[0] * a[2])", "t = int(input())\nwhile t:\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[0] * a[2])\n    t -= 1", "t = int(input())\nwhile t:\n    a = [int(i) for i in input().split()]\n    a.sort()\n    n = len(a)\n    print(a[0] * a[n - 2])\n    t = t - 1", "import math\nt = int(input())\nfor z in range(t):\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = a[0] * a[2]\n    print(ans)", "for i in range(int(input(''))):\n    a = list(map(int, input().split(' ')))\n    a.sort()\n    ans = a[0] * a[2]\n    print(ans)", "for _ in range(int(input())):\n    data = sorted(map(int, input().split()))\n    print(data[0] * data[2])", "for _ in range(int(input())):\n    arr = list(map(int, input().split()))\n    arr.sort()\n    print(arr[0] * arr[2])", "for _ in ' ' * int(input()):\n    (a, b, c, d) = sorted(map(int, input().split()))\n    print(a * c)", "for i in range(int(input())):\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[-2] * a[0])", "for _ in range(int(input())):\n    numbers = [int(x) for x in input().split(' ')]\n    numbers.sort()\n    print(numbers[0] * numbers[2])", "try:\n    for i in range(int(input())):\n        a = [int(i) for i in input().split()]\n        a.sort()\n        print(a[0] * a[2])\nexcept:\n    pass", "n = int(input())\nfor i in range(n):\n    l = input()\n    l = l.split()\n    s = [int(l[0]), int(l[1]), int(l[2]), int(l[3])]\n    s.sort()\n    a = s[0] * s[2]\n    print(a)", "for i in range(int(input())):\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[-2] * a[0])", "for i in range(int(input())):\n    arr = [int(i) for i in input().split()]\n    arr.sort()\n    mini = arr[0]\n    maxi = arr[-2]\n    print(mini * maxi)", "qc = int(input())\nfor qq in range(qc):\n    t = list(map(int, input().split()))\n    t.sort()\n    print(t[0] * t[2])", "for _ in range(int(input())):\n    a = sorted(map(int, input().split()))\n    print(a[0] * a[2])", "for t in range(int(input())):\n    L = [int(X) for X in input().split()]\n    L.sort()\n    area = L[0] * L[2]\n    print(area)", "t = int(input())\nfor i in range(0, t):\n    array = input().split()\n    array = [int(x) for x in array]\n    array.sort()\n    print(array[0] * array[2])", "for _ in range(int(input())):\n    a = [int(j) for j in input().split()]\n    a.sort()\n    print(a[0] * a[2])", "for _ in range(int(input())):\n    lengths = sorted(map(int, input().split()))\n    print(lengths[0] * lengths[2])", "for _ in range(int(input())):\n    l = list(map(int, input().split()))\n    l.sort()\n    print(l[0] * l[-2])", "for i in range(0, int(input())):\n    n = list(map(int, input().split()))\n    n.sort()\n    print(n[0] * n[2])", "for i in range(int(input())):\n    seg = [int(x) for x in input().split(' ')]\n    seg.sort()\n    base = seg[0]\n    height = seg[-2]\n    print(base * height)", "t = int(input())\nfor i in range(t):\n    l = list(map(int, input().split()))\n    l.sort()\n    area = l[2] * l[0]\n    print(area)", "import math\ntt = int(input())\nfor i in range(tt):\n    list1 = list(map(int, input().split()))[:4]\n    list1.sort()\n    ans = list1[0] * list1[2]\n    print(ans)", "for _ in range(0, int(input())):\n    (a, b, c, d) = sorted(map(int, input().split()))\n    print(min(a, b) * min(c, d))", "n = int(input())\nfor i in range(n):\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[0] * a[2])", "for _ in range(int(input())):\n    x = list(map(int, input().split()))\n    x.sort()\n    print(x[0] * x[2])", "import math\nk = 1\nalfabet = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6, 'g': 7, 'h': 8, 'i': 9, 'j': 10, 'k': 11, 'l': 12, 'm': 13, 'n': 14, 'o': 15, 'p': 16, 'q': 17, 'r': 18, 's': 19, 't': 20, 'u': 21, 'v': 22, 'w': 23, 'x': 24, 'y': 25, 'z': 26}\nwhile k > 0:\n    n = int(input())\n    for j in range(0, n):\n        lista = list(map(int, input().split()))\n        lista.sort()\n        rasp = min(lista[3], lista[2]) * lista[0]\n        print(rasp)\n    k = k - 1", "t = int(input())\nlis = []\nfor i in range(t):\n    segments = input()\n    seg = segments.split()\n    for b in seg:\n        lis.append(int(b))\n    lis.sort()\n    print(lis[0] * lis[2])\n    lis = []", "a = int(input())\nfor i in range(a):\n    lst = list(map(int, input().split()))\n    lst.sort()\n    print(lst[0] * lst[2])", "import math\nx = int(input())\nfor i in range(x):\n    num = input()\n    lst = list(map(int, num.strip().split()))\n    lst.sort()\n    print(lst[0] * lst[2])", "n = int(input())\nfor _ in range(n):\n    s = [int(x) for x in input().split()]\n    s.sort()\n    print(int(s[0] * s[2]))", "ncases = int(input().strip())\nfor i in range(ncases):\n    currints = list(map(int, input().strip().split()))\n    currints.sort()\n    print(currints[0] * currints[2])", "for t in range(int(input())):\n    length = list(map(int, input().split()))\n    length.sort()\n    print(length[0] * length[2])", "for z in range(int(input())):\n    l = sorted([int(x) for x in input().split()])\n    print(l[0] * l[2])", "for t in range(int(input())):\n    L = [int(X) for X in input().split()]\n    L.sort()\n    area = L[0] * max(L[1], L[2])\n    print(area)", "def fun(ls):\n    ls = sorted(ls)\n    print(ls[0] * ls[2])\nT = int(input())\nfor i in range(T):\n    ls = list(map(int, input().split()))\n    fun(ls)", "for i in range(int(input())):\n    a = [int(j) for j in input().split()]\n    a.sort()\n    print(a[0] * a[2])", "n = int(input())\nwhile n:\n    l = list(map(int, input().split()))\n    l.sort()\n    print(l[0] * l[-2])\n    n -= 1", "for _ in range(int(input())):\n    l = [int(i) for i in input().split()]\n    l.sort()\n    print(l[0] * l[2])", "n = int(input())\nfor i in range(n):\n    arr = []\n    arr = list(map(int, input().split(' ')))\n    arr.sort()\n    ans = arr[0] * arr[2]\n    print(ans)", "a = int(input())\nfor i in range(a):\n    lst = list(map(int, input().split()))\n    lst.sort()\n    print(lst[0] * lst[2])", "for i in range(int(input())):\n    a = sorted([int(a) for a in input().split()])\n    print(a[0] * a[2])", "for i in range(int(input())):\n    a = sorted([int(a) for a in input().split()])\n    print(a[0] * a[2])", "t = int(input())\nfor i in range(t):\n    lst = list(map(int, input().strip().split()))[:4]\n    new = sorted(lst)\n    print(new[0] * new[2])", "t = int(input())\nfor i in range(t):\n    (a, b, c, d) = [int(x) for x in input().split()]\n    arr = [a, b, c, d]\n    arr.sort()\n    print(arr[0] * arr[2])", "for _ in range(int(input())):\n    l = list(map(int, input().split()))\n    l.sort()\n    x = min(l[2], l[3])\n    y = min(l[0], l[1])\n    print(x * y)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    arr = list(map(int, input().split()))\n    arr.sort()\n    print(arr[0] * arr[2])", "for test in range(int(input())):\n    (a, b, c, d) = sorted(list(map(int, input().split())), reverse=True)\n    print(b * d)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    lst = list(map(int, input().split()))\n    lst.sort()\n    print(lst[0] * lst[2])", "t = int(input())\nfor _ in range(t):\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[0] * a[2])", "T = int(input())\nfor i in range(T):\n    A = sorted(list(map(int, input().split())))\n    result = A[0] * A[2]\n    print(result)"]