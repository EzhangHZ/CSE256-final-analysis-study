["from itertools import permutations\n\ndef solution(n, m, mat):\n    sol = []\n    if m % 2 == 1:\n        print('YES')\n        for i in range(m + 1):\n            sol.append(i % 2 + 1)\n        print(*sol)\n        return\n    elif n == 2 and mat[0][1] != mat[1][0]:\n        print('NO')\n        return\n    elif n == 2:\n        print('YES')\n        for i in range(m + 1):\n            sol.append(i % 2 + 1)\n        print(*sol)\n        return\n    else:\n        for [u, v] in [[0, 1], [0, 2], [1, 2]]:\n            if mat[u][v] == mat[v][u]:\n                print('YES')\n                for i in range(m + 1):\n                    sol.append([u, v][i % 2] + 1)\n                print(*sol)\n                return\n        for [u, v, w] in permutations([0, 1, 2]):\n            if mat[u][v] == mat[v][w]:\n                left = [[v + 1, w + 1, v + 1, u + 1][i % 4] for i in range((m - 2) // 2)]\n                left.reverse()\n                middle = [u + 1, v + 1, w + 1]\n                right = [[v + 1, u + 1, v + 1, w + 1][i % 4] for i in range((m - 2) // 2)]\n                sol += left\n                sol += middle\n                sol += right\n                print('YES')\n                print(*sol)\n                return\nT = int(input())\nfor t in range(T):\n    [n, m] = list(map(int, input().split()))\n    mat = [input() for _ in range(n)]\n    solution(n, m, mat)", "from itertools import permutations\n\ndef solution(n, m, mat):\n    sol = []\n    if m % 2 == 1:\n        print('YES')\n        for i in range(m + 1):\n            sol.append(i % 2 + 1)\n        print(*sol)\n        return\n    elif n == 2 and mat[0][1] != mat[1][0]:\n        print('NO')\n        return\n    elif n == 2:\n        print('YES')\n        for i in range(m + 1):\n            sol.append(i % 2 + 1)\n        print(*sol)\n        return\n    else:\n        for [u, v] in [[0, 1], [0, 2], [1, 2]]:\n            if mat[u][v] == mat[v][u]:\n                print('YES')\n                for i in range(m + 1):\n                    sol.append([u, v][i % 2] + 1)\n                print(*sol)\n                return\n        for [u, v, w] in permutations([0, 1, 2]):\n            if mat[u][v] == mat[v][w]:\n                left = [[v + 1, w + 1, v + 1, u + 1][i % 4] for i in range((m - 2) // 2)]\n                left.reverse()\n                middle = [u + 1, v + 1, w + 1]\n                right = [[v + 1, u + 1, v + 1, w + 1][i % 4] for i in range((m - 2) // 2)]\n                sol += left + middle + right\n                print('YES')\n                print(*sol)\n                return\nfor t in range(int(input())):\n    [n, m] = list(map(int, input().split()))\n    solution(n, m, [input() for _ in range(n)])", "import sys\ninput = sys.stdin.readline\nfrom itertools import permutations\n\ndef solution(n, m, mat):\n    sol = []\n    if m % 2 == 1:\n        print('YES')\n        for i in range(m + 1):\n            sol.append(i % 2 + 1)\n        print(*sol)\n        return\n    elif n == 2 and mat[0][1] != mat[1][0]:\n        print('NO')\n        return\n    elif n == 2:\n        print('YES')\n        for i in range(m + 1):\n            sol.append(i % 2 + 1)\n        print(*sol)\n        return\n    else:\n        for [u, v] in [[0, 1], [0, 2], [1, 2]]:\n            if mat[u][v] == mat[v][u]:\n                print('YES')\n                for i in range(m + 1):\n                    sol.append([u, v][i % 2] + 1)\n                print(*sol)\n                return\n        for [u, v, w] in permutations([0, 1, 2]):\n            if mat[u][v] == mat[v][w]:\n                left = [[v + 1, w + 1, v + 1, u + 1][i % 4] for i in range((m - 2) // 2)]\n                left.reverse()\n                middle = [u + 1, v + 1, w + 1]\n                right = [[v + 1, u + 1, v + 1, w + 1][i % 4] for i in range((m - 2) // 2)]\n                sol += left\n                sol += middle\n                sol += right\n                print('YES')\n                print(*sol)\n                return\nT = int(input())\nfor t in range(T):\n    [n, m] = list(map(int, input().split()))\n    mat = [input() for _ in range(n)]\n    solution(n, m, mat)"]