["t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    print(k + (k - 1) // (n - 1))", "for i in range(int(input())):\n    (n, k) = input().split()\n    n = int(n)\n    k = int(k)\n    if k % (n - 1) == 0:\n        solution = n * (k // (n - 1)) - 1\n    else:\n        solution = n * (k // (n - 1)) + k % (n - 1)\n    print(solution)", "for s in [*open(0)][1:]:\n    (n, k) = map(int, s.split())\n    print(k + (k - 1) // (n - 1))", "import math\nfrom sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    c = k - (n - 1) * (k // (n - 1))\n    if c == 0:\n        c = -1\n    print(n * (k // (n - 1)) + c)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    rem = k % (n - 1)\n    q = k // (n - 1)\n    if rem == 0:\n        print(q * n - 1)\n    else:\n        print(q * n + rem)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k < n:\n        result = k\n    else:\n        result = k // (n - 1) * n\n        rem = k % (n - 1)\n        rem -= 1 if rem == 0 else 0\n        result += rem\n    print(result)", "for _ in ' ' * int(input()):\n    (n, k) = input().split()\n    (n, k) = (int(n), int(k))\n    print(k + (k - 1) // (n - 1))", "t = int(input())\nfor tc in range(t):\n    (n, k) = map(int, input().split())\n    print((k - 1) // (n - 1) + k)", "for _ in range(int(input())):\n    (n, k) = [int(i) for i in input().split()]\n    print(k + (k - 1) // (n - 1))", "Test = int(input())\nfor t in range(Test):\n    (N, K) = list(map(int, input().split()))\n    Aux = int((K - 1) / (N - 1))\n    print(Aux + K)", "t = int(input())\nfor _ in range(t):\n    (n, k) = (int(i) for i in input().split(' '))\n    print(k + (k - 1) // (n - 1))", "kol = int(input())\nG = 0\nstart = 0\nrez = []\nfor i in range(0, kol):\n    start = 0\n    (n, k) = map(int, input().split())\n    G = k // (n - 1)\n    if G > 0:\n        start = G * n\n        if k % (n - 1) == 0:\n            start -= 1\n    start += k % (n - 1)\n    rez.append(start)\nfor j in rez:\n    print(j)", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    x = (b - 1) // (a - 1)\n    print(x + b)", "t = int(input())\nlst0 = []\nfor i in range(t):\n    (n, k) = input().split()\n    n = int(n)\n    k = int(k)\n    lst0.append(k + (k - 1) // (n - 1))\nfor i in range(len(lst0)):\n    print(int(lst0[i]))", "from sys import stdin\nimport math\n\ndef solve(n, k):\n    return k + math.ceil(k / (n - 1)) - 1\nntests = int(stdin.readline())\nwhile len((line := stdin.readline().split())) == 2:\n    (n, k) = (int(line[0]), int(line[1]))\n    print(solve(n, k))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if k < n:\n        print(k)\n    else:\n        val1 = k // (n - 1)\n        val2 = n * val1\n        if k % (n - 1) == 0:\n            print(val2 - 1)\n        else:\n            print(val2 + k % (n - 1))", "import sys\nimport collections\ninput = sys.stdin.readline\nt = int(input())\nvalues = []\nfor i in range(t):\n    (n, k) = list(map(int, input().split(' ')))\n    values.append((n, k))\nfor (n, k) in values:\n    r = k + (k - 1) / (n - 1)\n    print(int(r))", "n = int(input())\nk = 0\nl = []\nwhile k <= n - 1:\n    xx = [int(i) for i in input().split()]\n    l.append(xx)\n    k += 1\nfor t in l:\n    a = t[0]\n    b = t[1]\n    if b % (a - 1) == 0:\n        c = b % (a - 1) + int(b / (a - 1)) * a - 1\n    else:\n        c = b % (a - 1) + int(b / (a - 1)) * a\n    print(str(c))", "t = int(input())\nlist = []\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    need = (k - 1) // (n - 1)\n    list.append(k + need)\nfor i in list:\n    print(i)", "n = int(input())\npairs = []\nfor i in range(n):\n    pairs.append([int(x) for x in input().split()])\nfor pair in pairs:\n    (n, k) = pair\n    print(n * (k // (n - 1)) + (k % (n - 1) or -1))", "def main():\n    x = int(input())\n    array = [str(input()).split() for _ in range(x)]\n    for (n, k) in array:\n        (n, k) = (int(n), int(k))\n        var = k + (k - 1) // (n - 1)\n        print(var)\nmain()", "t = int(input())\nfor _ in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    a = k % (n - 1)\n    b = k // (n - 1)\n    if a == 0:\n        print(b * n - 1)\n    else:\n        print(b * n + a)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(k + (k - 1) // (n - 1))", "meh = int(input())\nfor i in range(meh):\n    (x, y) = input().split()\n    if int(y) % (int(x) - 1) == 0:\n        print(int(y) // (int(x) - 1) - 1 + int(y))\n    else:\n        print(int(y) // (int(x) - 1) + int(y))", "t = int(input())\nfor i in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    if k % (n - 1) != 0:\n        print(k + k // (n - 1))\n    else:\n        print(k + k // (n - 1) - 1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(1 + n * ((k + (n - 2)) // (n - 1) - 1) + (k - ((k + (n - 2)) // (n - 1) - 1) * (n - 1) - 1))", "for _ in range(int(input())):\n    (n, k) = input().split()\n    n = int(n)\n    k = int(k)\n    q = k // (n - 1)\n    r = k % (n - 1)\n    result = q * n - 1\n    if r:\n        result += r + 1\n    print('\\t', result)", "import math\na = int(input(''))\nfor i in range(a):\n    dat = list(map(int, input('').split()))\n    x = math.ceil(dat[1] / (dat[0] - 1))\n    print(str(dat[1] + x - 1))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    ans = (k - 1) // (n - 1) + k\n    print(ans)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    print((k - 1) // (n - 1) + k)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    print((k - 1) // (n - 1) + k)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    sol = (k - 1) // (n - 1) + k\n    print(sol)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    sol = (k - 1) // (n - 1) + k\n    print(sol)", "n = int(input())\nfor i in range(n):\n    (p, q) = map(int, input().split())\n    if p <= q:\n        if q % (p - 1) == 0:\n            print(q // (p - 1) * p - 1)\n        else:\n            print(q // (p - 1) * p + q % (p - 1))\n    else:\n        print(q)", "n = int(input())\nfor i in range(n):\n    (p, q) = map(int, input().split())\n    if p <= q:\n        if q % (p - 1) == 0:\n            print(q // (p - 1) * p - 1)\n        else:\n            print(q // (p - 1) * p + q % (p - 1))\n    else:\n        print(q)", "n = int(input())\nfor i in range(n):\n    (p, q) = map(int, input().split())\n    if p <= q:\n        if q % (p - 1) == 0:\n            print(q // (p - 1) * p - 1)\n        else:\n            print(q // (p - 1) * p + q % (p - 1))\n    else:\n        print(q)", "import math\nm = []\nn = int(input())\nfor i in range(0, n):\n    m.append([int(j) for j in input().split()])\nfor i in range(n):\n    print(m[i][1] + math.floor((m[i][1] - 1) / (m[i][0] - 1)))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    result = (k - 1) // (n - 1) + k\n    print(result)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    result = (k - 1) // (n - 1) + k\n    print(result)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    result = (k - 1) // (n - 1) + k\n    print(result)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    result = (k - 1) // (n - 1) + k\n    print(result)", "tc = int(input())\nfor i in range(tc):\n    (n, k) = map(int, input().split())\n    result = (k - 1) // (n - 1) + k\n    print(result)", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    x = b // (a - 1)\n    if b % (a - 1) == 0:\n        print(b + x - 1)\n    else:\n        print(b + x)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = k // (n - 1) * n - 1\n    b = k // (n - 1) * n + 1\n    rem = k % (n - 1)\n    if rem == 0:\n        print(a)\n    elif rem == 1:\n        print(b)\n    else:\n        print(b + rem - 1)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    ans = (k - 1) // (n - 1) + k\n    print(ans)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(k + (k - 1) // (n - 1))", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    print(b // (a - 1) * a + b % (a - 1) if b % (a - 1) != 0 else b // (a - 1) * a + b % (a - 1) - 1)", "x = int(input(''))\nfor i in range(x):\n    arr = input('').split(' ')\n    n = int(arr[0])\n    k = int(arr[1])\n    ans = (n * k - 1) // (n - 1)\n    print(ans)", "t = int(input())\na = []\nfor i in range(t):\n    (ni, ki) = map(int, input().split())\n    if ki % (ni - 1) == 0:\n        numi = ki // (ni - 1) * ni - 1\n    else:\n        numi = ki // (ni - 1) * ni + ki % (ni - 1)\n    a.append(numi)\nfor i in range(t):\n    print(a[i])", "def f():\n    T = int(input())\n    for _ in range(T):\n        (n, k) = [int(c) for c in input().split()]\n        print(solve_bsearch(n, k))\n\ndef solve(n, k):\n    return k + (k - 1) // (n - 1)\n\ndef solve_bsearch(n, k):\n    left = 1\n    right = 2 ** 32\n    while left < right:\n        mid = (left + right) // 2\n        non_divisable_cnt = mid - mid // n\n        if k <= non_divisable_cnt:\n            right = mid\n        else:\n            left = mid + 1\n    return left\nf()", "import math\n\ndef kthNonDivisible(N, K):\n    return K + math.floor((K - 1) / (N - 1))\nt = int(input())\nlst = []\nfor i in range(t):\n    (N, K) = input().split()\n    N = int(N)\n    K = int(K)\n    output = kthNonDivisible(N, K)\n    lst.append(output)\nprint(*lst, sep='\\n')", "N = int(input())\nans = []\nfor i in range(N):\n    nk = input().split()\n    n = int(nk[0])\n    k = int(nk[1])\n    if n == 2:\n        ans.append(n * k - 1)\n        continue\n    T = k % n\n    t = k // n\n    k += t\n    vax = T + t\n    while True:\n        if vax > n:\n            k += vax // n\n            vax = vax // n + vax % n\n        else:\n            break\n    if k % n == 0:\n        k += 1\n    ans.append(int(k))\nfor i in ans:\n    print(i)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(k + (k - 1) // (n - 1))", "import math\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    print(k + (k - 1) // (n - 1))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    div = 0\n    div = k // (n - 1)\n    if k % (n - 1) == 0:\n        div = k // (n - 1) - 1\n    num = div * n\n    num = num + (k - div * (n - 1))\n    print(num)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    if n == k:\n        print(n + 1)\n    elif n > k:\n        print(k)\n    else:\n        c = k // (n - 1)\n        r = k % (n - 1)\n        if r == 0:\n            ans = n * c - 1\n        else:\n            ans = n * c + r\n        print(ans)", "t = int(input())\ni = 0\nwhile i < t:\n    iterlist = [int(b) for b in input().split()]\n    hue = iterlist[0] * (iterlist[1] // (iterlist[0] - 1)) + iterlist[1] % (iterlist[0] - 1)\n    if iterlist[1] % (iterlist[0] - 1) == 0:\n        print(hue - 1)\n    else:\n        print(hue)\n    i += 1", "t = int(input())\nfor i in range(t):\n    [n, k] = [int(c) for c in input().split()]\n    y = k % (n - 1)\n    x = (k - y) / (n - 1)\n    if y == 0:\n        print(int(x * n - 1))\n    else:\n        print(int(x * n + y))", "def a(n, k):\n    step = n - 1\n    num = k / step\n    a = k % step\n    if num % 1 == 0:\n        print(n * int(num) - 1)\n    else:\n        print(n * int(num) + a)\n\ndef inp():\n    return list(map(int, input().split(' ')))\nb = int(input())\nd = []\nfor i in range(b):\n    d.append(inp())\nfor i in d:\n    a(i[0], i[1])", "t = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split(' ')))\n    print((k - 1) * n // (n - 1) + 1)", "t = int(input())\nl = []\nfor i in range(t):\n    (n, k) = list(map(int, input().split()))\n    div = k // (n - 1)\n    ex = k % (n - 1)\n    ans = n * div + ex\n    if ex == 0:\n        ans -= 1\n    print(ans)", "t = int(input())\nans = []\nfor i in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    if k < n:\n        ans.append(k)\n    else:\n        c = k // (n - 1) * n\n        k %= n - 1\n        c += k\n        if k == 0:\n            c -= 1\n        ans.append(c)\nfor i in ans:\n    print(i)", "for s in [*open(0)][1:]:\n    (n, k) = map(int, s.split())\n    print(k + (k - 1) // (n - 1))", "import math\nt = int(input())\nfor i in range(t):\n    nk = list(map(int, input().split()))\n    n = nk[0]\n    k = nk[1]\n    bucket = math.ceil(k / (n - 1))\n    first = n * (bucket - 1) + 1\n    index = (bucket - 1) * (n - 1) + 1\n    shift = k - index\n    answer = first + shift\n    print(answer)", "import math\nt = int(input())\nfor i in range(t):\n    nk = list(map(int, input().split()))\n    n = nk[0]\n    k = nk[1]\n    bucket = math.ceil(k / (n - 1))\n    first = n * (bucket - 1) + 1\n    index = (bucket - 1) * (n - 1) + 1\n    shift = k - index\n    answer = first + shift\n    print(answer)", "def nondiv(n, k):\n    return int(k + int(k - 1) / (n - 1))\nt = int(input())\nfor i in range(t):\n    (n, k) = input().split()\n    (a, b) = (int(n), int(k))\n    print(nondiv(a, b))", "import math\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    n = n * (k / (n - 1))\n    print(math.ceil(n) - 1)", "for __ in range(int(input())):\n    (n, k) = map(int, input().split())\n    need = (k - 1) // (n - 1)\n    print(k + need)", "from operator import ior\nfrom functools import reduce\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    li = []\n    ans = 0\n    if k % (n - 1) == 0:\n        ans = k // (n - 1) - 1\n    else:\n        ans = k // (n - 1)\n    print(ans + k)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    ans = k + (k - 1) // (n - 1)\n    print(ans)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(k + (k - 1) // (n - 1))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    x = k / (n - 1)\n    if (x + k) % n == 0:\n        print(int(x + k - 1))\n    else:\n        print(int(x + k))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    y = k / (n - 1)\n    if (y + k) % n == 0:\n        print(int(y + k - 1))\n    else:\n        print(int(y + k))", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    print(m + (m - 1) // (n - 1))", "for i in range(int(input())):\n    (n, m) = map(int, input().split())\n    print(m + (m - 1) // (n - 1))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    print(k + (k - 1) // (n - 1))", "import math\n\ndef ans(a, b):\n    c = math.ceil(b / (a - 1)) * (a - 1) - a + math.ceil(b / (a - 1))\n    if b % (a - 1) == 0:\n        c = c + a - 1\n        print(c)\n    else:\n        c = c + b % (a - 1)\n        print(c)\nn = int(input())\nl2 = []\nfor i in range(n):\n    l2.append([int(x) for x in input().split()])\nfor i in range(n):\n    ans(l2[i][0], l2[i][1])\nprint()", "nb_t = int(input())\nfor _ in range(nb_t):\n    (n, k) = map(int, input().split())\n    print(k + (k - 1) // (n - 1))", "t = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    if k % (n - 1) != 0:\n        g = k // (n - 1)\n        print(n * g + k % (n - 1))\n    else:\n        g = k // (n - 1)\n        print(n * g - 1)", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    d = b // a\n    ans = (b + d) // a\n    while ans != d:\n        d = (b + ans) // a\n        ans = (d + b) // a\n    print(b + ans)", "def getKthNonDivisibleByN(n, k):\n    p = n - 1\n    mod = k % p\n    d = k // p\n    ans = d * n + mod\n    if k % p == 0:\n        ans = ans - 1\n    return ans\ntc = int(input())\nfor pos in range(tc):\n    (n, k) = input().split(' ')\n    (n, k) = [int(n), int(k)]\n    print(getKthNonDivisibleByN(n, k))", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().strip().split())\n    e = 0.1\n    res = int((k - e) // (n - 1)) + k\n    print(res)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ans = k + (k - 1) // (n - 1)\n    print(ans)", "import math\ntt = input()\nt = int(tt)\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    i = 1\n    cnt = 1\n    if n > k:\n        ans2 = k\n    elif n == k:\n        ans2 = k + 1\n    elif k % n == 0:\n        ans2 = math.ceil(n / (n - 1) * k) - 1\n        if ans2 % n == 0:\n            ans2 += 2\n    elif k % n != 0:\n        ans1 = n / (n - 1) * k\n        ans2 = math.ceil(ans1) - 1\n    ans = round(ans2)\n    print(ans)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (n, k) = list(map(int, input().split()))\n    ans = k\n    ans += (k - 1) // (n - 1)\n    print(ans)", "for s in [*open(0)][1:]:\n    (n, k) = map(int, s.split())\n    k -= 1\n    print(k // (n - 1) * n + k % (n - 1) + 1)", "for s in [*open(0)][1:]:\n    (n, k) = map(int, s.split())\n    print(k + (k - 1) // (n - 1))", "for s in [*open(0)][1:]:\n    (n, k) = map(int, s.split())\n    print(k + (k - 1) // (n - 1))", "t = int(input())\nfor s in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    print(k + (k - 1) // (n - 1))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    i = k // (n - 1)\n    j = k % (n - 1)\n    if j != 0:\n        print(n * i + j)\n    else:\n        print(n * i - 1)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    print(k + (k - 1) // (n - 1))", "t = int(input())\nwhile t > 0:\n    (n, k) = map(int, input().split())\n    print(k + (k - 1) // (n - 1))\n    t -= 1", "T = int(input())\nfor t in range(T):\n    (N, K) = map(int, input().strip().split(' '))\n    ans = (K - 1) // (N - 1)\n    print(K + ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().strip().split())\n    print(k + (k - 1) // (n - 1))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(k + (k - 1) // (n - 1))", "for _ in range(int(input())):\n    (n, k) = map(int, input().strip().split())\n    print(k + (k - 1) // (n - 1))"]