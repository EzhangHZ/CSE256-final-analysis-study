["for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    if '0' in s:\n        i = s.index('0')\n        if i < n // 2:\n            print(i + 1, n, i + 2, n)\n        else:\n            print(1, i + 1, 1, i)\n    else:\n        print(1, n // 2, n // 2 + 1, n // 2 + n // 2)", "for _ in range(int(input())):\n    n = int(input())\n    s = ' ' + input()\n    if '0' in s:\n        i = s.index('0')\n        if i <= n // 2:\n            print(i, n, i + 1, n)\n        else:\n            print(1, i, 1, i - 1)\n    else:\n        print(1, n // 2, 2, n // 2 + 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    if '0' in s:\n        i = s.index('0')\n        if i < n // 2:\n            print(i + 1, n, i + 2, n)\n        else:\n            print(1, i + 1, 1, i)\n    else:\n        print(1, n - 1, 2, n)", "t = int(input())\nfor l in range(t):\n    n = int(input())\n    s = input()\n    if s.count('0') == 0:\n        print(1, n - 1, 2, n)\n    else:\n        s1 = ''\n        j = 0\n        for i in range(len(s)):\n            if s[i] == '0':\n                if i >= n // 2:\n                    print(1, i + 1, 1, i)\n                    break\n                else:\n                    print(i + 2, len(s), i + 1, len(s))\n                    break", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    if '0' in s:\n        x = s.find('0')\n        if x < n // 2:\n            print(x + 1, n, x + 2, n)\n        else:\n            print(1, x + 1, 1, x)\n    else:\n        print(1, n // 2, n // 2 + 1, n // 2 + n // 2)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    size = n // 2\n    if '0' not in s:\n        (l1, r1, l2, r2) = (1, size, 2, size + 1)\n    else:\n        i = s.index('0') + 1\n        if i <= size:\n            (l1, r1, l2, r2) = (i, n, i + 1, n)\n        else:\n            (l1, r1, l2, r2) = (1, i, 1, i - 1)\n    print(l1, r1, l2, r2)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    size = n // 2\n    if '0' not in s:\n        (l1, r1, l2, r2) = (1, size, 2, size + 1)\n    else:\n        i = s.index('0') + 1\n        if i <= size:\n            (l1, r1, l2, r2) = (i, n, i + 1, n)\n        else:\n            (l1, r1, l2, r2) = (1, i, 1, i - 1)\n    print(l1, r1, l2, r2)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    size = n // 2\n    if '0' not in s:\n        (l1, r1, l2, r2) = (1, size, 2, size + 1)\n    else:\n        i = s.index('0') + 1\n        if i <= size:\n            (l1, r1, l2, r2) = (i, n, i + 1, n)\n        else:\n            (l1, r1, l2, r2) = (1, i, 1, i - 1)\n    print(l1, r1, l2, r2)", "for _ in range(int(input())):\n    n = int(input())\n    ring = input()\n    if ring.count('0') == 0:\n        print(1, n - 1, 2, n)\n    else:\n        x = ring.index('0')\n        print(x + 1, n, x + 2, n) if x + 1 <= n // 2 else print(1, x + 1, 1, x)", "def f():\n    n = int(input())\n    s = input()\n    for i in range(n):\n        if s[i] == '0':\n            if i < n // 2:\n                print(i + 1, n, i + 2, n)\n                return\n            else:\n                print(1, i + 1, 1, i)\n                return\n    print(1, n - 1, 2, n)\nt = int(input())\nwhile t:\n    f()\n    t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    str = input()\n    flag = 0\n    for j in range(n):\n        if str[j] == '0':\n            flag = 1\n            if j >= n // 2:\n                print(1, j + 1, 1, j)\n                break\n            else:\n                print(j + 2, n, j + 1, n)\n                break\n    if flag != 1:\n        if n % 2 == 0:\n            print(1, n // 2, n // 2 + 1, n)\n        else:\n            print(1, n // 2, n // 2 + 2, n)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    A = input()\n    if '0' not in A:\n        print(1, n - 1, 2, n)\n    else:\n        k = A.index('0')\n        k += 1\n        if k - 1 < n // 2:\n            print(k, n, k + 1, n)\n        else:\n            print(1, k, 1, k - 1)", "T = int(input())\n\ndef convert(s):\n    s = s[::-1]\n    ans = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            ans += 1 << i\n    return ans\n\ndef solve():\n    n = int(input())\n    s = input()\n    k = s.find('0')\n    if k == -1:\n        print(1, n // 2, n // 2 + 1, n // 2 * 2)\n    elif k < n // 2:\n        print(k + 1, n, k + 2, n)\n    else:\n        print(1, k + 1, 1, k)\nfor i in range(T):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    k = s.find('0')\n    if k == -1:\n        print(1, n // 2, n // 2 + 1, n // 2 * 2)\n    elif k < n // 2:\n        print(k + 1, n, k + 2, n)\n    else:\n        print(1, k + 1, 1, k)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    if '0' in s:\n        if s.index('0') < n // 2:\n            print(s.index('0') + 1, n, s.index('0') + 2, n)\n        else:\n            print(1, s.index('0') + 1, 1, s.index('0'))\n    else:\n        print(1, n - 1, 2, n)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    l = int(input())\n    n = input()\n    if '0' in n:\n        for i in range(l):\n            if n[i] == '0':\n                x = i + 1\n                break\n        if x <= l // 2:\n            print(x + 1, l, x, l)\n        else:\n            print(1, x, 1, x - 1)\n    else:\n        print(1, l // 2, 2, l // 2 + 1)", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    s = sys.stdin.readline()\n    if s.count('0') == 0:\n        print('1' + ' ' + str(n - 1) + ' ' + '2' + ' ' + str(n))\n    else:\n        ind = s.index('0')\n        if ind + 1 <= n // 2:\n            print(str(ind + 1) + ' ' + str(n) + ' ' + str(ind + 2) + ' ' + str(n))\n        else:\n            print('1' + ' ' + str(ind + 1) + ' ' + '1' + ' ' + str(ind))", "for _ in range(int(input())):\n    l = int(input())\n    r = input()\n    if '0' in r:\n        i = r.index('0') + 1\n        if i <= l // 2:\n            print(i, l, i + 1, l)\n        else:\n            print(1, i, 1, i - 1)\n    else:\n        print(1, l // 2, 2, l // 2 + 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    if '0' in s:\n        ind = s.find('0')\n        if ind + 1 <= n // 2:\n            print(ind + 1, n, ind + 2, n)\n        else:\n            print(1, ind + 1, 1, ind)\n    else:\n        print(1, n // 2 * 2, 1, n // 2)", "for q in range(int(input())):\n    d = int(input())\n    n = ' ' + input()\n    if '0' in n:\n        c = n.index('0')\n        if c <= d // 2:\n            print(c, d, c + 1, d)\n        else:\n            print(1, c, 1, c - 1)\n    else:\n        print(1, d // 2, 2, d // 2 + 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = ' ' + input()\n    if '0' in s:\n        i = s.index('0')\n        if i <= n // 2:\n            print(i, n, i + 1, n)\n        else:\n            print(1, i, 1, i - 1)\n    else:\n        print(1, n // 2, 2, n // 2 + 1)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    A = input()\n    if '0' not in A:\n        print(1, n - 1, 2, n)\n    else:\n        k = A.index('0')\n        if k < n // 2:\n            print(k + 2, n, k + 1, n)\n        else:\n            print(1, k + 1, 1, k)", "for _ in range(int(input())):\n    n = int(input())\n    s = ' ' + input()\n    if '0' in s:\n        i = s.index('0')\n        if i <= n // 2:\n            print(i, n, i + 1, n)\n        else:\n            print(1, i, 1, i - 1)\n    else:\n        print(1, n // 2, 2, n // 2 + 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    if '0' in s:\n        i = s.index('0')\n        if i < n // 2:\n            print(i + 1, n, i + 2, n)\n        else:\n            print(1, i + 1, 1, i)\n    else:\n        print(1, n // 2, n // 2 + 1, n // 2 + n // 2)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    k = s.find('0')\n    if k == -1:\n        print(1, n // 2, n // 2 + 1, n // 2 * 2)\n    elif k < n // 2:\n        print(k + 1, n, k + 2, n)\n    else:\n        print(1, k + 1, 1, k)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    k = s.find('0')\n    if k == -1:\n        print(1, n // 2, n // 2 + 1, n // 2 * 2)\n    elif k < n // 2:\n        print(k + 1, n, k + 2, n)\n    else:\n        print(1, k + 1, 1, k)", "t = int(input())\nfor w in range(t):\n    n = int(input())\n    num = input()\n    ln = len(num)\n    if '0' in num:\n        f0 = num.find('0')\n        if f0 > ln // 2 - 1:\n            print(1, f0 + 1, 1, f0)\n        else:\n            print(f0 + 1, ln, f0 + 2, ln)\n    else:\n        print(1, ln - 1, 2, ln)", "from math import ceil\nfor i in range(int(input())):\n    n = int(input())\n    arr = list(input())\n    if '0' not in arr:\n        print(1, n // 2, ceil(n / 2) + 1, 2 * n // 2)\n    else:\n        idx = arr.index('0')\n        if idx < n // 2:\n            print(idx + 1, n, idx + 2, n)\n        else:\n            print(1, idx + 1, 1, idx)", "tt = int(input())\nfor _ in range(tt):\n    n = int(input())\n    s = input()\n    i = s.find('0')\n    if i == -1:\n        m = n - n % 2\n        j = m // 2\n        print(1, m, 1, j)\n    elif i < n // 2:\n        print(i + 2, n, i + 1, n)\n    else:\n        print(1, i + 1, 1, i)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    (l1, lr1, l2, lr2) = (-1, -1, -1, -1)\n    mid = n // 2\n    seg = False\n    if n % 2 == 0:\n        for j in range(n):\n            if s[j] == '0':\n                if j + 1 > mid:\n                    print(1, j + 1, 1, j)\n                else:\n                    print(j + 1, n, j + 2, n)\n                seg = True\n                break\n    else:\n        for j in range(n):\n            if s[j] == '0':\n                if j + 1 > mid:\n                    print(1, j + 1, 1, j)\n                else:\n                    print(j + 1, n, j + 2, n)\n                seg = True\n                break\n    if not seg:\n        print(1, n - 1, 2, n)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    (l1, lr1, l2, lr2) = (-1, -1, -1, -1)\n    mid = n // 2\n    seg = False\n    for j in range(n):\n        if s[j] == '0':\n            if j + 1 > mid:\n                print(1, j + 1, 1, j)\n            else:\n                print(j + 1, n, j + 2, n)\n            seg = True\n            break\n    if not seg:\n        print(1, n - 1, 2, n)", "import sys\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    if '0' not in s:\n        print(1, n - 1, 2, n)\n    else:\n        x = s.index('0') + 1\n        if x > n // 2:\n            print(1, x, 1, x - 1)\n        else:\n            print(x, n, x + 1, n)", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    k = int(sys.stdin.readline())\n    data = sys.stdin.readline().rstrip()\n    idx = -1\n    for i in range(len(data)):\n        if data[i] == '0':\n            idx = i + 1\n            break\n    if idx == -1:\n        print(f'1 {k - 1} 2 {k}')\n    else:\n        mid = k // 2\n        if idx <= mid:\n            print(f'{idx} {k} {idx + 1} {k}')\n        else:\n            print(f'{1} {idx} {1} {idx - 1}')", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    k = s.find('0')\n    if k == -1:\n        print(1, n // 2, n // 2 + 1, n // 2 * 2)\n    elif k < n // 2:\n        print(k + 1, n, k + 2, n)\n    else:\n        print(1, k + 1, 1, k)", "for u in range(int(input())):\n    n = int(input())\n    x = input()\n    if len(set(x)) == 1:\n        print(1, n - 1, 2, n)\n    else:\n        a = x[:n // 2]\n        b = x[n // 2 + 1:]\n        if '0' in a:\n            idx = a.index('0')\n            print(idx + 1, n, idx + 2, n)\n        elif '0' in x:\n            idx = x.index('0')\n            print(1, idx + 1, 1, idx)", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    k = s.find('0')\n    if k == -1:\n        print(1, n // 2, n // 2 + 1, n // 2 * 2)\n    elif k < n // 2:\n        print(k + 1, n, k + 2, n)\n    else:\n        print(1, k + 1, 1, k)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    k = s.find('0')\n    if k == -1:\n        print(1, n // 2, n // 2 + 1, n // 2 * 2)\n    elif k < n // 2:\n        print(k + 1, n, k + 2, n)\n    else:\n        print(1, k + 1, 1, k)", "for _ in range(int(input())):\n    n = int(input())\n    ring = input()\n    if ring.count('0') == 0:\n        print(1, n - 1, 2, n)\n    else:\n        x = ring.index('0')\n        print(x + 1, n, x + 2, n) if x + 1 <= n // 2 else print(1, x + 1, 1, x)", "from collections import defaultdict as D\nfrom math import *\nfrom sys import stdin, stdout\nimport itertools\nMOD = 10 ** 9 + 7\nMAX = 10 ** 18 + 1\nMIN = -MAX\n\ndef reshape(count, val=0):\n    return [val for i in range(count)]\n\ndef vec_read():\n    return list(map(int, stdin.readline().split()))\n\ndef read():\n    return map(int, stdin.readline().split())\n\ndef get_string():\n    return stdin.readline().strip()\n\ndef solve():\n    n = int(input())\n    s = str(input())\n    if '0' not in s:\n        print(1, n - 1, 2, n)\n        return\n    ind = s.find('0') + 1\n    if ind <= n // 2:\n        print(ind, n, ind + 1, n)\n    else:\n        print(1, ind, 1, ind - 1)\n\ndef test_cases():\n    t = int(input())\n    while t:\n        solve()\n        t -= 1\ntest_cases()", "for _ in range(int(input())):\n    n = int(input())\n    ring = input()\n    if ring.count('0') == 0:\n        print(1, n - 1, 2, n)\n    else:\n        x = ring.index('0')\n        print(x + 1, n, x + 2, n) if x + 1 <= n // 2 else print(1, x + 1, 1, x)", "for i in range(int(input())):\n    n = int(input())\n    a = list(input())\n    if '0' in a:\n        ind = a.index('0')\n        if ind + 1 >= n // 2 + 1:\n            print(1, ind + 1, 1, ind)\n        else:\n            print(ind + 1, n, ind + 2, n)\n    else:\n        print(1, n - 1, 2, n)", "for _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    if '0' not in s:\n        print(1, n - 1, 2, n)\n    else:\n        i = s.index('0')\n        if i >= n // 2:\n            print(1, i + 1, 1, i)\n        else:\n            print(i + 1, n, i + 2, n)", "import math\ndebug = True\n\ndef pprint(*args, delimeter='#', amount=10):\n    if debug:\n        print('{0} DEBUG {0}'.format(delimeter * amount))\n        print(*args)\n        print('{0} ----- {0}'.format('-' * amount))\n\ndef solve():\n    n = int(input())\n    s = list(input())\n    for i in range(n // 2):\n        if s[i] == '0':\n            print(i + 1, n, i + 2, n)\n            return\n    for i in range(n // 2, n):\n        if s[i] == '0':\n            print(1, i + 1, 1, i)\n            return\n    print(1, n - 1, 2, n)\nt = int(input())\nwhile t > 0:\n    t -= 1\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    s = ' ' + input()\n    if '0' in s:\n        i = s.index('0')\n        if i <= n // 2:\n            print(i, n, i + 1, n)\n        else:\n            print(1, i, 1, i - 1)\n    else:\n        print(1, n // 2, 2, n // 2 + 1)", "def doWork():\n    k = int(input())\n    s = input()\n    ind = s.find('0')\n    if ind == -1:\n        print(1, k - 1, 2, k)\n    elif ind < k // 2:\n        print(ind + 2, k, ind + 1, k)\n    else:\n        print(1, ind + 1, 1, ind)\nt = int(input())\nfor _ in range(t):\n    doWork()", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    x = n // 2\n    if '0' in s:\n        a = s.index('0') + 1\n        if a <= x:\n            print(a, n, a + 1, n)\n        else:\n            print(1, a, 1, a - 1)\n    else:\n        print(1, x, 2, x + 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = ' ' + input()\n    if '0' in s:\n        i = s.index('0')\n        if i <= n // 2:\n            print(i, n, i + 1, n)\n        else:\n            print(1, i, 1, i - 1)\n    else:\n        print(1, n // 2, 2, n // 2 + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    flag = False\n    for j in range(n):\n        if s[j] == '0':\n            flag = True\n            if j < n // 2:\n                print(j + 2, n, j + 1, n)\n                break\n            elif j >= n // 2:\n                print(1, j + 1, 1, j)\n                break\n    if flag == False:\n        print(1, n - 1, 2, n)", "testcases = int(input())\nwhile testcases:\n    d = int(input())\n    num = input()\n    if '0' in num:\n        index = num.find('0')\n        if index + 1 <= d // 2:\n            l1 = index\n            r1 = d - 1\n            l2 = l1 + 1\n            r2 = d - 1\n        else:\n            l1 = 0\n            l2 = 0\n            r1 = index\n            r2 = r1 - 1\n    else:\n        l1 = 0\n        r1 = d - 2\n        l2 = 1\n        r2 = d - 1\n    print(l1 + 1, r1 + 1, l2 + 1, r2 + 1)\n    testcases -= 1", "from sys import stdin, setrecursionlimit, maxsize\nfrom collections import deque\nfrom heapq import *\nfrom math import sqrt, gcd\ninput = stdin.readline\nsetrecursionlimit(10 ** 5)\nfor _ in range(int(input())):\n    n = int(input())\n    s = input().strip()\n    solved = 0\n    for i in range(n):\n        if s[i] == '0':\n            solved = 1\n            if i >= n // 2:\n                print(1, i + 1, 1, i)\n                break\n            else:\n                print(i + 2, n, i + 1, n)\n                break\n    if solved == 0:\n        print(1, n - 1, 2, n)", "import sys\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    if '0' not in s:\n        print(1, n - 1, 2, n)\n    else:\n        x = s.index('0') + 1\n        if x > n // 2:\n            print(1, x, 1, x - 1)\n        else:\n            print(x, n, x + 1, n)", "for _ in range(int(input())):\n    n = int(input())\n    s = ' ' + input()\n    if '0' in s:\n        i = s.index('0')\n        if i <= n // 2:\n            print(i, n, i + 1, n)\n        else:\n            print(1, i, 1, i - 1)\n    else:\n        print(1, n // 2, 2, n // 2 + 1)", "t = int(input())\nfor w in range(t):\n    n = int(input())\n    st = input()\n    find = False\n    for i in range(n // 2):\n        if st[i] == '0':\n            print(i + 1, n, i + 2, n, sep=' ')\n            find = True\n            break\n    if not find:\n        for i in range(n // 2, n):\n            if st[i] == '0':\n                print(1, i + 1, 1, i, sep=' ')\n                find = True\n                break\n    if not find:\n        print(1, n - 1, 2, n, sep=' ')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    index = s.find('0')\n    if index == -1:\n        print('{} {} {} {}'.format(1, n - 1, 2, n))\n    elif index + 1 <= int(n / 2):\n        print('{} {} {} {}'.format(index + 1, n, index + 2, n))\n    else:\n        print('{} {} {} {}'.format(1, index + 1, 1, index))", "def solve(cnt, num):\n    if '0' in num[:int(cnt / 2)]:\n        print(num.index('0') + 1, cnt, num.index('0') + 2, cnt)\n        return\n    if '0' in num[int(cnt / 2):]:\n        print(1, num.index('0', int(cnt / 2)) + 1, 1, num.index('0', int(cnt / 2)))\n        return\n    print(1, cnt - 1, 2, cnt)\nfor _ in range(int(input())):\n    solve(int(input()), input())", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    s = input()\n    if s.count('0'):\n        pos = s.index('0')\n        if pos >= n // 2:\n            print(1, pos + 1, 1, pos)\n        else:\n            print(pos + 1, n, pos + 2, n)\n    else:\n        print(1, n - 1, 2, n)", "def solve(n, binaryString):\n    for i in range(n):\n        if binaryString[i] == '0':\n            if i < n // 2:\n                print(i + 1, n, i + 2, n)\n            else:\n                print(1, i + 1, 1, i)\n            return\n    print(2, n // 2 + 1, 1, n // 2)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    binaryString = input()\n    solve(n, binaryString)", "import sys\nimport math\nfrom bisect import bisect_right as br\nfrom itertools import combinations as cb\n\ndef int_arr():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef str_arr():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef input():\n    return sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    n = int(input())\n    st = input()\n    if '0' not in st:\n        print(1, math.ceil(n // 2), 2, math.ceil(n // 2) + 1)\n        continue\n    else:\n        ind = st.index('0') + 1\n        if ind <= math.ceil(n // 2):\n            print(ind, n, ind + 1, n)\n        else:\n            print(1, ind, 1, ind - 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    if '0' not in s:\n        print(1, n - 1, 2, n)\n    else:\n        x = s.index('0') + 1\n        if x > n // 2:\n            print(1, x, 1, x - 1)\n        else:\n            print(x, n, x + 1, n)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    if '0' in s:\n        ind = s.find('0')\n        if ind + 1 <= n // 2:\n            print(ind + 1, n, ind + 2, n)\n        else:\n            print(1, ind + 1, 1, ind)\n    else:\n        print(1, n // 2 * 2, 1, n // 2)", "for _ in range(int(input())):\n    n = int(input())\n    s = ' ' + input()\n    if '0' in s:\n        i = s.index('0')\n        if i <= n // 2:\n            print(i, n, i + 1, n)\n        else:\n            print(1, i, 1, i - 1)\n    else:\n        print(1, n // 2, 2, n // 2 + 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = ' ' + input()\n    if '0' in s:\n        i = s.index('0')\n        if i <= n // 2:\n            print(i, n, i + 1, n)\n        else:\n            print(1, i, 1, i - 1)\n    else:\n        print(1, n // 2, 2, n // 2 + 1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    size = n // 2\n    if '0' not in s:\n        (l1, r1, l2, r2) = (1, size, 2, size + 1)\n    else:\n        i = s.index('0') + 1\n        if i <= size:\n            (l1, r1, l2, r2) = (i, n, i + 1, n)\n        else:\n            (l1, r1, l2, r2) = (1, i, 1, i - 1)\n    print(l1, r1, l2, r2)", "def getlistint():\n    return list(map(int, stdin.readline().split()))\n\ndef getmapint():\n    return map(int, stdin.readline().split())\n\ndef getliststr():\n    return list(stdin.readline().split())\n\ndef getint():\n    return int(stdin.readline().strip())\n\ndef getstr():\n    return stdin.readline().strip()\n\ndef pr(s):\n    stdout.write(str(s) + '\\n')\n\ndef prlist(l):\n    stdout.write(' '.join(list(map(str, l))) + '\\n')\nfrom sys import stdin, stdout\nfor _ in range(getint()):\n    n = getint()\n    s = getstr()\n    if '0' in s:\n        idx = s.index('0')\n        if idx + 1 <= n // 2:\n            pr(str(idx + 2) + ' ' + str(n) + ' ' + str(idx + 1) + ' ' + str(n))\n        else:\n            pr('1 ' + str(idx + 1) + ' ' + '1 ' + str(idx))\n    else:\n        pr('1 ' + str(n - 1) + ' ' + '2 ' + str(n))", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    s = input()\n    solved = False\n    for i in range(n):\n        if s[i] == '0':\n            solved = True\n            if i >= n // 2:\n                print(1, i + 1, 1, i)\n                break\n            else:\n                print(i + 2, n, i + 1, n)\n                break\n    if not solved:\n        print(1, n - 1, 2, n)", "t = int(input())\nfor _ in range(t):\n    k = int(input())\n    s = input()\n    (l1, r1, l2, r2) = (0, 0, 0, 0)\n    for i in range(k):\n        if s[i] == '0':\n            if i >= k // 2:\n                l1 = 1\n                r1 = i + 1\n                l2 = 1\n                r2 = i\n                break\n            elif k - i - 1 >= k // 2:\n                l1 = i + 1\n                r1 = k\n                l2 = i + 2\n                r2 = k\n                break\n    if l1:\n        print(l1, r1, l2, r2)\n    else:\n        print(1, k - 1, 2, k)", "from collections import deque\nT = int(input())\nset1 = set([1, 4, 6, 8, 9])\nprime = [False] * 100\n\ndef solve():\n    n = int(input())\n    s = input()\n    solved = False\n    for i in range(n):\n        if s[i] == '0':\n            if i >= n // 2:\n                print(1, i + 1, 1, i)\n            else:\n                print(i + 2, n, i + 1, n)\n            solved = True\n            break\n    if not solved:\n        print(1, n - 1, 2, n)\nfor _ in range(T):\n    solve()", "from math import floor\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    for i in range(1, n + 1):\n        if int(s[i - 1]) == 0:\n            if i <= floor(n / 2):\n                print(i, n, i + 1, n)\n                break\n            else:\n                print(1, i, 1, i - 1)\n                break\n    else:\n        print(1, n - 1, 2, n)", "t = int(input())\nwhile t:\n    n = int(input())\n    s = input()\n    if '0' not in s:\n        print(1, n // 2, n - n // 2 + 1, n)\n    else:\n        for i in range(n):\n            if s[i] == '0':\n                if i >= n // 2:\n                    print(1, i + 1, 1, i)\n                else:\n                    print(i + 1, n, i + 2, n)\n                break\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    s = ' ' + input()\n    if '0' in s:\n        i = s.index('0')\n        if i <= n // 2:\n            print(i, n, i + 1, n)\n        else:\n            print(1, i, 1, i - 1)\n    else:\n        print(1, n // 2, 2, n // 2 + 1)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    m = n // 2 - 1\n    f = 0\n    zero = []\n    for i in range(n):\n        if s[i] == '0':\n            zero.append(i)\n    if len(zero) == 0:\n        if n % 2 == 0:\n            print(1, n // 2, n // 2 + 1, n)\n        else:\n            print(1, n // 2, n // 2 + 2, n)\n    elif zero[0] <= m:\n        print(zero[0] + 1, n, zero[0] + 2, n)\n    else:\n        print(1, zero[0] + 1, 1, zero[0])"]