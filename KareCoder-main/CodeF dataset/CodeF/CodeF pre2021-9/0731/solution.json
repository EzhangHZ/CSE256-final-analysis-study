["def get_primes(n):\n    res = [2]\n    arr = [True] * ((n - 1) // 2)\n    i = 0\n    for i in range(len(arr)):\n        if arr[i]:\n            a = i * 2 + 3\n            res.append(a)\n            for ii in range(i + a, len(arr), a):\n                arr[ii] = False\n    return res\nn = int(input())\nprimes = get_primes(n)\nres = ['1'] * min(n - 1, len(primes))\nleft = n - 1 - len(res)\nii = 2\nwhile left > 0:\n    for a in primes:\n        if ii * a <= n:\n            res.append(str(ii))\n            left -= 1\n        else:\n            break\n        if ii % a == 0 or left == 0:\n            break\n    ii += 1\nprint(' '.join(res))", "def get_primes(n):\n    res = [2]\n    arr = [True] * ((n - 1) // 2)\n    i = 0\n    for i in range(len(arr)):\n        if arr[i]:\n            a = i * 2 + 3\n            res.append(a)\n            for ii in range(i + a, len(arr), a):\n                arr[ii] = False\n    return res\nn = int(input())\nprimes = get_primes(n)\nres = ['1'] * min(n - 1, len(primes))\nleft = n - 1 - len(res)\nii = 2\nwhile left > 0:\n    for a in primes:\n        if ii * a <= n:\n            res.append(str(ii))\n            left -= 1\n        else:\n            break\n        if ii % a == 0 or left == 0:\n            break\n    ii += 1\nprint(' '.join(res))", "def solve(n):\n    nums = [1] * (n + 1)\n    p = 2\n    while p * p <= n:\n        if nums[p] == 1:\n            for i in range(p * 2, n + 1, p):\n                nums[i] = max(nums[i], p, i // p)\n        p += 1\n    return sorted(sorted(nums[2:]))\nn = int(input())\nprint(' '.join([str(x) for x in solve(n)]))", "n = int(input())\narr = [1] * (n + 1)\np = 2\nwhile p * p <= n:\n    if arr[p] == 1:\n        for i in range(p * 2, n + 1, p):\n            arr[i] = max(arr[i], p, i // p)\n    p += 1\narr.sort()\nprint(' '.join([str(x) for x in arr[2:]]))", "N = int(input())\nprimes = [0] * (N + 1)\nprimes[0] = -1\nprimes[1] = -1\nfor i in range(2, N + 1):\n    if primes[i] == 0:\n        primes[i] = 1\n        for j in range(i * 2, N + 1, i):\n            primes[j] = -1\nprimes = [i for (i, p) in enumerate(primes) if p == 1]\nres = [0] * (N + 1)\nres[0] = 0\nres[1] = 1\nfor p in primes:\n    res[p] = 1\nfor p in primes:\n    for j in range(p * 2, N + 1, p):\n        if res[j] == 0:\n            res[j] = max(p, j // p)\nprint(' '.join(map(str, sorted(res[2:]))))", "N = int(input())\nprimes = [0] * (N + 1)\nfor i in range(2, N + 1):\n    if primes[i] == 0:\n        primes[i] = 1\n        for j in range(i * 2, N + 1, i):\n            primes[j] = -1\nprimes = [i for (i, p) in enumerate(primes) if p == 1]\nres = [0] * (N + 1)\nfor p in primes:\n    res[p] = 1\nfor p in primes:\n    for j in range(p * 2, N + 1, p):\n        if res[j] == 0:\n            res[j] = max(p, j // p)\nprint(' '.join(map(str, sorted(res[2:]))))"]