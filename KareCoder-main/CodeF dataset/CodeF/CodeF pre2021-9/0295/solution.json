["for s in [*open(0)][2::2]:\n    a = (-1, *map(int, s.split()))\n    print(sum((i + j == x * a[j] for (i, x) in enumerate(a) for j in range(-i % x, i, x))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((i + j == x * a[j] for (i, x) in enumerate(a, 2) for j in range(-i % x, i - 2, x))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((i + j == x * a[j] for (i, x) in enumerate(a, 2) for j in range(-i % x, i - 2, x))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((i + j == x * a[j] for (i, x) in enumerate(a, 2) for j in range(-i % x, i - 2, x))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((i + j == x * a[j] for (i, x) in enumerate(a, 2) for j in range(-i % x, i - 2, x))))", "for s in [*open(0)][2::2]:\n    a = (-1, *map(int, s.split()))\n    print(sum((i + j == x * a[j] for (i, x) in enumerate(a) for j in range(-i % x, i, x))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((i + j == x * a[j] for (i, x) in enumerate(a, 2) for j in range(-i % x, i - 2, x))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((i + j == x * a[j] for (i, x) in enumerate(a, 2) for j in range(-i % x, i - 2, x))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((i + j == x * a[j] for (i, x) in enumerate(a, 2) for j in range(-i % x, i - 2, x))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((i + j == x * a[j] for (i, x) in enumerate(a, 2) for j in range(-i % x, i - 2, x))))", "for s in [*open(0)][2::2]:\n    a = (-1, *map(int, s.split()))\n    print(sum((i + j == x * a[j] for (i, x) in enumerate(a) for j in range(-i % x, i, x))))", "for s in [*open(0)][2::2]:\n    a = (-1, *map(int, s.split()))\n    print(sum((i + j == x * a[j] for (i, x) in enumerate(a) for j in range(-i % x, i, x))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((i + j == x * a[j] for (i, x) in enumerate(a, 2) for j in range(-i % x, i - 2, x))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((i + j == x * a[j] for (i, x) in enumerate(a, 2) for j in range(-i % x, i - 2, x))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((i + j == x * a[j] for (i, x) in enumerate(a, 2) for j in range(-i % x, i - 2, x))))", "for s in [*open(0)][2::2]:\n    a = (-1, *map(int, s.split()))\n    print(sum((i + j == x * a[j] for (i, x) in enumerate(a) for j in range(-i % x, i, x))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((i + j == x * a[j] for (i, x) in enumerate(a, 2) for j in range(-i % x, i - 2, x))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((i + j == x * a[j] for (i, x) in enumerate(a, 2) for j in range(-i % x, i - 2, x))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((i + j == x * a[j] for (i, x) in enumerate(a, 2) for j in range(-i % x, i - 2, x))))", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for (i, x) in enumerate(a, 2):\n        for j in range(-i % x, i - 2, x):\n            if i + j == x * a[j]:\n                ans += 1\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((i + j + 2 == x * a[j] for (i, x) in enumerate(a) for j in range(-(i + 2) % x, i, x))))", "from math import *\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom collections import Counter as ctr\nfrom collections import deque as dq\nfrom array import array\nfrom re import search\nli = lambda : list(map(int, input().split()))\narr = lambda a: array('i', a)\nbi = lambda n: bin(n).replace('0b', '')\nyn = lambda f: print('NYOE S'[f::2])\nsbstr = lambda a, s: search('.*'.join(a), s)\n\ndef solve():\n    for _ in range(int(input())):\n        n = int(input())\n        a = [-1] + li()\n        print(sum((i + j == x * a[j] for (i, x) in enumerate(a) for j in range(-i % x, i, x))))\nsolve()", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((x * a[j - 1] == i + j for (i, x) in enumerate(a, 1) for j in range(-i % x or x, i, x))))", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((i + j == x * a[j - 1] for (i, x) in enumerate(a, 1) for j in range(-i % x or x, i, x))))", "n = int(input())\n\ndef check():\n    k = int(input())\n    nums = list(map(int, input().split()))\n    counter = 0\n    for (_index, num) in enumerate(nums):\n        index = _index + 1\n        start = (2 * index - 1) // num * num - index\n        while start > 0:\n            if nums[start - 1] * num == start + index:\n                counter += 1\n            start -= num\n    return counter\nfor i in range(n):\n    print(check())", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    r = i = 0\n    for x in a:\n        i += 1\n        for j in range(-i % x or x, i, x):\n            r += x * a[j - 1] == i + j\n    print(r)", "for k in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    answer = 0\n    for (i, t) in enumerate(a, 2):\n        for j in range(-i % t, i - 2, t):\n            if i + j == t * a[j]:\n                answer += 1\n    print(answer)", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    r = i = 0\n    for x in a:\n        i += 1\n        for j in range(-i % x or x, i, x):\n            r += x * a[j - 1] == i + j\n    print(r)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.insert(0, 0)\n    pairs = 0\n    for i in range(2, n + 1):\n        j = (i // a[i] + 1) * a[i] - i\n        for k in range(j, i, a[i]):\n            if a[i] * a[k] == i + k:\n                pairs += 1\n    print(pairs)", "x = int(input())\nwhile x > 0:\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.insert(0, 0)\n    r = 0\n    for i in range(2, n + 1):\n        j = (i // a[i] + 1) * a[i] - i\n        for k in range(j, i, a[i]):\n            if a[i] * a[k] == i + k:\n                r += 1\n    print(r)\n    x -= 1", "for _ in range(int(input())):\n    n = int(input())\n    count = 0\n    a = [0] + list(map(int, input().split()))\n    for j in range(1, n + 1):\n        start = a[j] - j % a[j]\n        for i in range(start, j, a[j]):\n            if a[j] * a[i] == i + j:\n                count += 1\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    L = [x for x in map(int, input().split())]\n    s = 0\n    for i in range(1, n + 1):\n        j0 = L[i - 1] - i % L[i - 1]\n        for j in range(j0, i, L[i - 1]):\n            if L[i - 1] * L[j - 1] == i + j:\n                s += 1\n    print(s)", "def main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        arr = [(a[i], i + 1) for i in range(n)]\n        arr.sort()\n        cnt = 0\n        L = 0\n        R = n - 1\n        while L < R:\n            target = 2 * n / arr[L][0]\n            (l, r) = (L, R)\n            while l < r:\n                m = l + (r - l) // 2\n                if arr[m][0] > target:\n                    r = m\n                else:\n                    l = m + 1\n            R = l\n            (ai, i) = arr[L]\n            for k in range(L + 1, R + 1):\n                (aj, j) = arr[k]\n                if ai * aj == i + j:\n                    cnt += 1\n            L += 1\n        print(cnt)\nwhile True:\n    try:\n        main()\n    except:\n        break", "for _ in range(int(input())):\n    n = int(input())\n    a = [10 ** 18] + list(map(int, input().split()))\n    ans = 0\n    for j in range(n, 0, -1):\n        ma = j + j - 1\n        for i_plus_j in range(ma - ma % a[j], j, -a[j]):\n            if a[i_plus_j - j] == i_plus_j // a[j]:\n                ans += 1\n    print(ans)", "T = int(input())\nfor k in range(T):\n    n = int(input())\n    a = [0]\n    a.extend(map(int, input().split()))\n    ans = 0\n    for i in range(1, n + 1):\n        st = ((a[i] - i) % a[i] + a[i]) % a[i]\n        for j in range(st, i, a[i]):\n            if i + j == a[i] * a[j]:\n                ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    b.append(a[0])\n    cnt = 0\n    for i in range(1, len(a)):\n        cur = a[i]\n        for z in range(cur - (i + 1) % cur - 1, i + 1, cur):\n            if z < len(b):\n                if b[z] * cur == z + i + 2:\n                    cnt += 1\n        b.append(cur)\n    print(cnt)", "for _ in range(int(input())):\n    n = int(input())\n    lst = [0]\n    lst1 = [int(x) for x in input().split()]\n    lst.extend(lst1)\n    sum = 0\n    for j in range(1, n + 1):\n        x = (j + j - 1) % lst[j]\n        x += 1\n        i = j - x\n        while i > 0:\n            if lst[j] * lst[i] == i + j:\n                sum += 1\n            i -= lst[j]\n    print(sum)", "T = int(input())\nfor case in range(0, T):\n    n = int(input())\n    a = [0]\n    s = input().split()\n    for i in range(0, n):\n        a.append(int(s[i]))\n    ans = 0\n    for i in range(1, n + 1):\n        for j in range(a[i] - i % a[i], n + 1, a[i]):\n            if j >= i:\n                pass\n            elif a[i] * a[j] == i + j:\n                ans += 1\n    print(ans)", "def pair(a):\n    ans = 0\n    dd = {}\n    for (i, n) in enumerate(a):\n        i = i + 1\n        m = 1\n        while m * n <= 2 * i - 1:\n            if m in dd and dd[m] + i == m * n:\n                ans += 1\n            m += 1\n        dd[n] = i\n    return ans\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    a = [int(a) for a in s.split(' ')]\n    print(pair(a))", "import sys\ninput = sys.stdin.readline\n\ndef pleasantPairs(n, arr):\n    res = 0\n    for j in range(1, n + 1):\n        if arr[j] >= 2 * j:\n            continue\n        tmp = 1\n        while tmp * arr[j] < 2 * j:\n            i = tmp * arr[j] - j\n            if i > 0 and arr[i] == tmp:\n                res += 1\n            tmp += 1\n    return res\n\ndef main():\n    for t in range(int(input())):\n        n = int(input())\n        arr = [-1]\n        for i in input().split():\n            arr.append(int(i))\n        print(pleasantPairs(n, arr))\nmain()", "def sol(A):\n    count = 0\n    dic = {}\n    dic[A[0]] = 0\n    for i in range(1, len(A)):\n        m = (2 * i + 1) // A[i]\n        for ai in range(1, m + 1):\n            if i + 2 <= ai * A[i] < 2 * i + 2 and ai in dic and (ai * A[i] == dic[ai] + 1 + (i + 1)):\n                count += 1\n        dic[A[i]] = i\n    return count\nx = int(input())\nfor _ in range(x):\n    y = int(input())\n    A = list(map(int, input().split()))\n    print(sol(A))", "import math\n\ndef pleasantPairs(n, array):\n    ans = 0\n    array = [0] + array\n    for x in range(1, n + 1):\n        f = (2 * x - array[x]) // array[x] + 1\n        start = array[x] * f + array[x] - x\n        for y in range(start, n + 1, array[x]):\n            if array[x] * array[y] == x + y:\n                ans += 1\n    return ans\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(pleasantPairs(n, l))", "def rez():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    arr.insert(0, 0)\n    for i in range(1, n + 1):\n        for j in range(arr[i] - i, n + 1, arr[i]):\n            if j > 0 and i < j:\n                if arr[i] * arr[j] == i + j:\n                    ans += 1\n    print(ans)\nfor t in range(int(input())):\n    rez()", "def rez():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    arr.insert(0, 0)\n    for i in range(1, n + 1):\n        for j in range(arr[i] - i, n + 1, arr[i]):\n            if j > 0 and i < j:\n                if arr[i] * arr[j] == i + j:\n                    ans += 1\n    print(ans)\nfor t in range(int(input())):\n    rez()", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    count = 0\n    for j in range(1, n):\n        if (j + 1) // l[j] == 0:\n            i = l[j] - (j + 1)\n        else:\n            i = l[j] - (j + 1) % l[j]\n        while i < j + 1:\n            if l[i - 1] == (i + j + 1) // l[j]:\n                count += 1\n            i += l[j]\n    print(count)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().strip().split()]\n    d = {a[0]: 1}\n    count = 0\n    for i in range(1, n):\n        min_p = i + 2\n        max_p = 2 * (i + 1) - 1\n        k = i // a[i]\n        if k == 0:\n            k = 1\n        while a[i] * k <= max_p:\n            temp = a[i] * k - (i + 1) - 1\n            if a[temp] == k and temp < i and (temp >= 0):\n                count += 1\n            k += 1\n    print(count)", "def soluciona():\n    contador = 0\n    n = int(input())\n    a = list(map(int, input().split()))\n    for j in range(n):\n        for k in range(a[j] - j - 2, n, a[j]):\n            if a[j] * a[k] == j + k + 2 and j < k:\n                contador += 1\n    print(contador)\n    pass\nfor _ in range(int(input())):\n    soluciona()", "from math import ceil\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    c = 0\n    for i in range(1, n + 1):\n        start = arr[i - 1] * ceil(i / arr[i - 1])\n        for j in range(start, 2 * i, arr[i - 1]):\n            if j - i - 1 >= 0 and arr[j - i - 1] == j / arr[i - 1]:\n                c += 1\n    print(c)", "from functools import *\nfrom math import *\nfrom sys import *\nfrom itertools import *\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.insert(0, -1)\n    ans = 0\n    for i in range(1, n + 1, 1):\n        for j in range(a[i] - i, n + 1, a[i]):\n            if a[i] * a[j] == i + j and i < j:\n                ans += 1\n    print(ans)\nt = int(input())\nfor case in range(t):\n    solve()", "def f(A):\n    x = 0\n    for i in range(n):\n        for j in range(A[i] - 2 - i, n, A[i]):\n            if i < j:\n                if i + j + 2 == A[i] * A[j]:\n                    x = x + 1\n    return x\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(f(l))", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = [0]\n    lst.extend(list(map(int, input().split())))\n    tot = 0\n    for i in range(1, n + 1):\n        num = lst[i]\n        startMul = i * 2 // num + 1\n        startInd = startMul * num - i\n        while startInd <= n:\n            if lst[startInd] == startMul:\n                tot += 1\n            startInd += num\n            startMul += 1\n    print(tot)", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = [0]\n    lst.extend(list(map(int, input().split())))\n    tot = 0\n    for i in range(1, n + 1):\n        num = lst[i]\n        startMul = i * 2 // num + 1\n        startInd = startMul * num - i\n        while startInd <= n:\n            if lst[startInd] == startMul:\n                tot += 1\n            startInd += num\n            startMul += 1\n    print(tot)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(len([i for i in range(n) for j in range(a[i] - i - 2, n, a[i]) if a[i] * a[j] == i + j + 2 and i < j]))", "def solve(n, a):\n    a = [0] + a\n    ans = 0\n    for i in range(1, n + 1):\n        for m in range(a[i], 200000, a[i]):\n            j = m - i\n            if j > n:\n                break\n            if j <= i:\n                continue\n            if a[i] * a[j] == i + j:\n                ans += 1\n    return ans\nfor t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(n, a))", "def multiples(x, y, a):\n    z = x - y % x - 1 + y // x * x\n    if z < y:\n        z = z + x\n    m = 0\n    for i in range(z, len(a), x):\n        if x * a[i] == y + i + 1:\n            m += 1\n    return m\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    t = 0\n    for i in range(n - 1):\n        t += multiples(a[i], i + 1, a)\n    print(t)", "def main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        ans = 0\n        for i in range(n):\n            if a[i] <= i + n + 1:\n                for j in range(a[i] - i - 2, n, a[i]):\n                    if a[i] * a[j] == i + j + 2 and j > i:\n                        ans += 1\n        print(ans)\nmain()", "def func():\n    count = 0\n    for i in range(1, n + 1):\n        for j in range(a[i] - i, n + 1, a[i]):\n            if j < 0:\n                continue\n            if i + j == a[i] * a[j] and i < j:\n                count += 1\n    print(count)\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.insert(0, -10 ** 7)\n    func()", "def func1(a, n):\n    counter = 0\n    for i in range(n):\n        for j in range(a[i] - i - 2, n, a[i]):\n            if a[j] * a[i] == j + i + 2 and j > i:\n                counter += 1\n    print(counter)\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        func1(a, n)\nmain()", "def getPairs(arr, n):\n    ans = 0\n    for i in range(1, n + 1):\n        temp = arr[i] - i\n        while temp <= n:\n            if temp <= i:\n                temp += arr[i]\n                continue\n            if arr[i] * arr[temp] == i + temp:\n                ans += 1\n            temp += arr[i]\n    return ans\nN = int(input())\nfor i in range(N):\n    n = int(input())\n    arr = [0] + list(map(int, input().rstrip().split()))\n    print(getPairs(arr, n))", "import math\n\ndef Solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.insert(0, 0)\n    count = 0\n    i = 1\n    while i <= n - 1:\n        k1 = i % a[i]\n        k2 = a[i] - k1\n        while k2 <= i:\n            k2 += a[i]\n        j = k2\n        while j <= n:\n            if i + j == a[i] * a[j]:\n                count += 1\n            j += a[i]\n        i += 1\n    print(count)\nq = int(input())\nwhile q > 0:\n    Solve()\n    q -= 1", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(len([j for j in range(n) for k in range(a[j] - j - 2, n, a[j]) if a[j] * a[k] == j + k + 2 and j < k]))", "from math import floor\n\ndef main():\n    n = int(input())\n    a = ['_'] + [int(x) for x in input().split()]\n    ans = 0\n    for i in range(1, n + 1):\n        j = a[i] - i\n        if j < i:\n            k = 2 * i // a[i]\n            j = k * a[i] - i + a[i]\n        while j <= n:\n            if a[i] * a[j] == i + j:\n                ans += 1\n            j += a[i]\n    print(ans)\nt = int(input())\nfor _ in range(t):\n    main()", "def solve():\n    ans = 0\n    for i in range(N):\n        a = A[i]\n        max_b = min(a, (N + i + 1) // a + 1)\n        for b in range(max_b, 0, -1):\n            p = a * b\n            j = p - i - 2\n            if 0 <= j < N and i != j and (A[j] * A[i] == p):\n                ans += 1\n    return ans\ntest_cases = int(input())\nfor test_case in range(test_cases):\n    N = int(input())\n    A = list(map(int, input().split()))\n    print(solve())", "import math\n\ndef main_function():\n    tests = range(int(input()))\n    for test in tests:\n        n = int(input())\n        a = [int(i) for i in input().split(' ')]\n        b = []\n        a_greater_ind = []\n        ind_greater_a = []\n        counter = 0\n        for i in range(len(a)):\n            ind = i + 1\n            b.append((a[i], ind))\n        b.sort(key=lambda x: x[0])\n        for i in range(len(b)):\n            (a_i, ind_i) = b[i]\n            for j in range(i + 1, len(b)):\n                (a_j, ind_j) = b[j]\n                if a_j * a_i > 2 * n:\n                    break\n                if a_i * a_j == ind_i + ind_j:\n                    counter += 1\n        print(counter)\nmain_function()", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a1 = input().split()\n    a = [int(x) for x in a1]\n    cont = 0\n    for i in range(0, n):\n        p = a[i]\n        for j in range(i + p - 2 * (i + 1) % p, n, p):\n            if p * a[j] == i + j + 2:\n                cont += 1\n    print(cont)", "list_ans = []\nfor _ in range(int(input())):\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 1):\n        x = list1[i]\n        for j in range(((2 * i + 2) // x + 1) * x - i - 2, n, x):\n            if x * list1[j] == i + j + 2:\n                ans += 1\n    list_ans.append(ans)\nfor item in list_ans:\n    print(item)", "def main():\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        c = 0\n        for i in range(n):\n            ans = a[i] - (i + 2)\n            if a[i] - (i + 1) <= i:\n                while ans <= i:\n                    ans += a[i]\n            if ans < n:\n                for j in range(ans, n, a[i]):\n                    if j != i:\n                        if a[i] * a[j] == i + j + 2:\n                            c += 1\n        print(c)\nmain()", "import sys\nimport math\nstdin = sys.stdin\nni = lambda : int(ns())\nna = lambda : list(map(int, stdin.readline().split()))\nns = lambda : stdin.readline().rstrip()\nt = ni()\n\ndef main():\n    count = 0\n    n = ni()\n    A = na()\n    for i in reversed(range(n)):\n        for (j, J) in enumerate(range(A[i], 2 * n, A[i])):\n            if J - i - 2 < i and J - i - 2 >= 0:\n                if A[J - i - 2] == j + 1:\n                    count += 1\n    print(count)\nfor _ in range(t):\n    main()", "def f(ar):\n    n = len(ar)\n    ar = [0] + ar\n    cnt = 0\n    for i in range(1, len(ar)):\n        fac = ar[i]\n        j = ar[i] - i\n        while fac - i <= n:\n            if j < i and j >= 1 and (j <= n) and (ar[i] * ar[j] == i + j):\n                cnt += 1\n            fac += ar[i]\n            j = fac - i\n    return cnt\nfor i in range(int(input())):\n    a = input()\n    lst = list(map(int, input().strip().split()))\n    print(f(lst))", "def f(ar):\n    n = len(ar)\n    ar = [0] + ar\n    cnt = 0\n    for i in range(1, len(ar)):\n        fac = ar[i]\n        j = ar[i] - i\n        while fac - i <= n:\n            if j < i and j >= 1 and (j <= n) and (ar[i] * ar[j] == i + j):\n                cnt += 1\n            fac += ar[i]\n            j = fac - i\n    return cnt\nfor i in range(int(input())):\n    a = input()\n    lst = list(map(int, input().strip().split()))\n    print(f(lst))", "def getPairs(arr, n):\n    ans = 0\n    for i in range(1, n + 1):\n        tmp = arr[i] - i\n        while tmp <= n:\n            if tmp <= i:\n                tmp += arr[i]\n                continue\n            if arr[i] * arr[tmp] == i + tmp:\n                ans += 1\n            tmp += arr[i]\n    return ans\nN = int(input())\nfor i in range(N):\n    n = int(input())\n    arr = [0] + list(map(int, input().rstrip().split()))\n    print(getPairs(arr, n))", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(len([j for j in range(n) for k in range(a[j] - j - 2, n, a[j]) if a[j] * a[k] == j + k + 2 and j < k]))", "def main():\n    n = int(input())\n    for i in range(n):\n        t = int(input())\n        a = list(map(int, input().split()))\n        c = 0\n        for i in range(1, t + 1):\n            for j in range(a[i - 1] - i, t + 1, a[i - 1]):\n                if a[i - 1] * a[j - 1] == i + j and i < j:\n                    c += 1\n        print(c)\nmain()", "import math\n\ndef lerp(val, lb, ub, lv, uv):\n    return lv + (val - lb) * (uv - lv) / (ub - lb)\n\ndef get_ints():\n    return list(map(int, input().split()))\n\ndef get_floats():\n    return list(map(float, input().split()))\nfor _ in range(int(input())):\n    N = int(input())\n    a = get_ints()\n    count = 0\n    for j in range(1, N):\n        i = 0\n        m = 1\n        while 1:\n            i = m * a[j] - j - 2\n            if i >= j:\n                break\n            if i < 0:\n                m += 1\n                continue\n            if m == a[i]:\n                count += 1\n            m += 1\n    print(count)", "from bisect import *\nimport math\n\ndef solve(arr):\n    work = [(val, index) for (index, val) in enumerate(arr)]\n    work.sort()\n    ctr = 0\n    prevPosn = len(work)\n    for x in range(len(work)):\n        (cand1val, cand1idx) = work[x]\n        upperLim = int(math.ceil(len(work) / cand1val)) * 2\n        posn = bisect_left(work, (upperLim, 0), 0, min(prevPosn + 2, len(work)))\n        for y in range(min(posn + 1, len(work) - 1), x, -1):\n            (cand2val, cand2idx) = work[y]\n            if cand1val * cand2val == cand1idx + cand2idx + 2:\n                ctr += 1\n        prevPosn = posn\n    return ctr\nt = int(input())\nfor test in range(1, t + 1):\n    _ = int(input())\n    arr = map(int, input().split())\n    print(f'{solve(arr)}')", "n = int(input())\nfor _ in range(n):\n    amount = int(input())\n    l = list(input().split())\n    l = list(map(int, l))\n    count = 0\n    for i in range(amount):\n        if i == 0:\n            continue\n        j = 0\n        t = 0\n        while True:\n            t += l[i]\n            j = t - 2 - i\n            if j < 0:\n                continue\n            if j >= i:\n                break\n            if l[i] * l[j] == i + j + 2:\n                count += 1\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        start = i - (i + 1) % a[i] * 2 + a[i]\n        aim = (i + 1) // a[i] * 2 + 1\n        while start <= i:\n            start += a[i]\n            aim += 1\n        for j in range(start, n, a[i]):\n            if a[j] == aim:\n                count += 1\n            aim += 1\n    print(count)", "def main(r):\n    return r\n\ndef fun(a):\n    while a > 0:\n        a -= 1\n        ar = [0]\n        n = int(input())\n        l = list(map(int, input().split()))\n        for i in l:\n            ar.append(i)\n        c = 0\n        for i in range(1, n + 1):\n            j = ar[i]\n            j -= i % ar[i]\n            while j <= n:\n                if i != j and i + j == ar[i] * ar[j]:\n                    c += 1\n                j += ar[i]\n        print(main(c // 2))\na = int(input())\nfun(a)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.insert(0, 0)\n    count = 0\n    for i in range(1, n + 1):\n        for j in range(a[i] - i, n + 1, a[i]):\n            if j > i:\n                if i + j == a[i] * a[j]:\n                    count += 1\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    ans = 0\n    was = {}\n    for i in range(n):\n        j = 1\n        while s[i] * j <= 2 * (i + 1):\n            if j not in was:\n                j += 1\n                continue\n            if s[i] * j == i + was[j] + 1:\n                ans += 1\n            j += 1\n        was[s[i]] = i + 1\n    print(ans)", "for k in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.insert(0, 0)\n    cnt = 0\n    for i in range(1, n + 1):\n        now = a[i] - i\n        for j in range(now, n + 1, a[i]):\n            if i < j and i + j == a[i] * a[j]:\n                cnt += 1\n    print(cnt)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.insert(0, 0)\n    ans = 0\n    for i in range(1, n + 1):\n        start = l[i] - i\n        for j in range(start, n + 1, l[i]):\n            if j >= 0:\n                if l[i] * l[j] == i + j and i < j:\n                    ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    c = 0\n    n = int(input())\n    a = list(map(int, input().split()))\n    for i in range(n):\n        for j in range(a[i] - i - 2, n, a[i]):\n            if a[i] * a[j] == i + j + 2 and i < j:\n                c += 1\n    print(c)", "for _ in range(int(input())):\n    x = int(input())\n    zoop = list(map(int, input().split()))\n    zoop.insert(0, 0)\n    ans = 0\n    for i in range(1, len(zoop)):\n        for j in range(zoop[i] - i, len(zoop), zoop[i]):\n            if j >= 0:\n                if zoop[i] * zoop[j] == i + j and i < j:\n                    ans += 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 3\n    count = 0\n    for i in range(n):\n        for j in range(a[i] - i - 2, n, a[i]):\n            if a[i] * a[j] == i + j + 2 and i < j:\n                count += 1\n    print(count)", "for y in range(int(input())):\n    len_set = int(input())\n    set_numbers = [int(x) for x in input().split()]\n    k = 0\n    for i in range(len_set):\n        for j in range(set_numbers[i] - i - 2, len_set, set_numbers[i]):\n            if i + j + 2 == set_numbers[i] * set_numbers[j] and i < j:\n                k += 1\n    print(k)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 3\n    count = 0\n    for i in range(n):\n        for j in range(a[i] - i - 2, n, a[i]):\n            if i >= j:\n                continue\n            if a[i] * a[j] == i + j + 2:\n                count += 1\n    print(count)", "for cases in range(int(input())):\n    n = int(input())\n    k = 0\n    ls = list(map(int, input().split()))\n    for i in range(n):\n        for j in range(ls[i] - i - 2, n, ls[i]):\n            if ls[i] * ls[j] == i + j + 2 and j > i:\n                k += 1\n    print(k)", "from collections import defaultdict\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    cnt = 0\n    m = defaultdict(list)\n    for (i, x) in enumerate(a):\n        y = 1\n        while y * x < 2 * (i + 1):\n            if y in m and y * x - i - 1 in m[y]:\n                cnt += 1\n            y += 1\n        m[x].append(i + 1)\n    print(cnt)", "T = int(input())\nfrange = range\nfprint = print\nfint = int\nfmap = map\nfinput = input\nfor i in frange(T):\n    n = fint(finput())\n    arr = list(fmap(fint, finput().split()))\n    ans = 0\n    arr = [0] + arr\n    for i in frange(1, n + 1):\n        for j in frange(arr[i] - i, n + 1, arr[i]):\n            if j >= 0:\n                if arr[i] * arr[j] == i + j and i < j:\n                    ans += 1\n    fprint(ans)", "for _ in range(int(input())):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        for j in range(nums[i] - i - 2, n, nums[i]):\n            if nums[i] * nums[j] == i + j + 2 and i < j:\n                count += 1\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l = [0] + l\n    ans = 0\n    for i in range(1, n):\n        a = l[i]\n        for j in range(a - i % a, n + 1, a):\n            if j > i and l[j] == (i + j) // a:\n                ans += 1\n    print(ans)", "import sys\nimport math\nimport random\nfrom queue import PriorityQueue as PQ\nfrom bisect import bisect_left as BSL\nfrom bisect import bisect_right as BSR\nfrom collections import OrderedDict as OD\nfrom collections import Counter\nfrom itertools import permutations\nmod = 1000000007\nsys.setrecursionlimit(1000000)\ntry:\n    sys.stdin = open('actext.txt', 'r')\n    OPENFILE = 1\nexcept:\n    pass\n\ndef get_ints():\n    return map(int, input().split())\n\ndef palindrome(s):\n    mid = len(s) // 2\n    for i in range(mid):\n        if s[i] != s[len(s) - i - 1]:\n            return False\n    return True\n\ndef check(i, n):\n    if 0 <= i < n:\n        return True\n    else:\n        return False\n\ndef solve(arr, n):\n    counter = 0\n    for (num, i) in enumerate(arr):\n        num = num + 1\n        val = 1\n        j = 0\n        while val <= n:\n            val = i * j - num\n            if 1 <= val <= n and arr[val - 1] == j and (val > num):\n                counter += 1\n            j += 1\n    print(counter)\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    arr = list(get_ints())\n    solve(arr, n)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    r = 0\n    for i in range(1, n + 1):\n        v = a[i - 1]\n        for j in range(1, 4 * n):\n            x = v * j - i\n            if x > n:\n                break\n            if x > 0 and x != i and (a[x - 1] == j):\n                r += 1\n    print(r // 2)\nfor i in range(int(input())):\n    solve()", "for k in range(int(input())):\n    count = 0\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.insert(0, 0)\n    for i in range(1, len(a) - 1):\n        v = a[i]\n        j = a[i] - i\n        while j <= i:\n            j += v\n        for j in range(j, len(a), v):\n            if a[i] * a[j] == i + j:\n                count += 1\n    print(count)", "for _ in range(int(input())):\n    (n, c, a) = (int(input()), 0, [0] + list(map(int, input().split())))\n    for i in range(1, n):\n        b = a[i]\n        for j in range(i - 2 * i % b + b, n + 1, b):\n            c += b * a[j] == i + j\n    print(c)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.insert(0, 0)\n    count = 0\n    for i in range(1, n + 1):\n        for j in range(a[i] - i, n + 1, a[i]):\n            if j > 0:\n                if i + j == a[i] * a[j] and i < j:\n                    count += 1\n    print(count)", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    c = 0\n    for i in range(n):\n        for j in range(a[i] - i - 2, n, a[i]):\n            if i + j + 2 == a[i] * a[j] and i < j and (j > 0):\n                c += 1\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        if a[i] <= i + n + 1:\n            for j in range(a[i] - i - 2, n, a[i]):\n                if a[i] * a[j] == i + j + 2 and j > i:\n                    c += 1\n    print(c)"]