["for _ in range(int(input())):\n    n = int(input())\n    a = [map(int, input().split()) for _ in range(n)]\n    (x, y) = map(sorted, zip(*a))\n    if n % 2:\n        print(1)\n    else:\n        k = n // 2\n        print((x[k] - x[k - 1] + 1) * (y[k] - y[k - 1] + 1))", "t = int(input())\n\ndef solve(x):\n    x.sort()\n    return x[len(x) // 2] - x[(len(x) - 1) // 2] + 1\nfor i in range(t):\n    n = int(input())\n    (x, y) = ([], [])\n    for j in range(n):\n        (px, py) = map(int, input().split())\n        x.append(px)\n        y.append(py)\n    print(solve(x) * solve(y))", "for _ in range(int(input())):\n    n = int(input())\n    (x, y) = ([], [])\n    for i in range(n):\n        (x1, y1) = map(int, input().split())\n        x.append(x1)\n        y.append(y1)\n    (x.sort(), y.sort())\n    ans = x[n // 2] - x[(n - 1) // 2] + 1\n    ans *= y[n // 2] - y[(n - 1) // 2] + 1\n    print(ans)", "t = int(input())\n\ndef solve(x):\n    x.sort()\n    return x[len(x) // 2] - x[(len(x) - 1) // 2] + 1\nfor i in range(t):\n    n = int(input())\n    (x, y) = ([], [])\n    for j in range(n):\n        (px, py) = map(int, input().split())\n        x.append(px)\n        y.append(py)\n    print(solve(x) * solve(y))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = []\n    y = []\n    for j in range(n):\n        b = list(map(int, input().split()))\n        x.append(b[0])\n        y.append(b[1])\n    if n % 2 == 1:\n        print(1)\n    else:\n        x.sort()\n        y.sort()\n        print((x[n // 2] - x[n // 2 - 1] + 1) * (y[n // 2] - y[n // 2 - 1] + 1))", "t = int(input())\n\ndef solve(x):\n    x.sort()\n    return x[len(x) // 2] - x[(len(x) - 1) // 2] + 1\nfor i in range(t):\n    n = int(input())\n    (x, y) = ([], [])\n    for j in range(n):\n        (px, py) = map(int, input().split())\n        x.append(px)\n        y.append(py)\n    print(solve(x) * solve(y))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = []\n    y = []\n    for j in range(n):\n        b = list(map(int, input().split()))\n        x.append(b[0])\n        y.append(b[1])\n    if n % 2 != 0:\n        print(1)\n    else:\n        x.sort()\n        y.sort()\n        print((x[n // 2] - x[n // 2 - 1] + 1) * (y[n // 2] - y[n // 2 - 1] + 1))", "t = int(input())\n\ndef solve(x):\n    x.sort()\n    return x[len(x) // 2] - x[(len(x) - 1) // 2] + 1\nfor i in range(t):\n    n = int(input())\n    (x, y) = ([], [])\n    for j in range(n):\n        (px, py) = map(int, input().split())\n        x.append(px)\n        y.append(py)\n    print(solve(x) * solve(y))", "def main(h, n):\n    if n % 2 == 1:\n        return 1\n    (x, y) = ([], [])\n    solns = 0\n    for hh in h:\n        x.append(hh[0])\n        y.append(hh[1])\n    x.sort()\n    y.sort()\n    if x[0] == x[-1] and y[0] == y[-1]:\n        return 1\n    elif y[0] == y[-1]:\n        return x[n // 2] - x[(n - 1) // 2] + 1\n    elif x[0] == x[-1]:\n        return y[n // 2] - y[(n - 1) // 2] + 1\n    else:\n        return (x[n // 2] - x[(n - 1) // 2] + 1) * (y[n // 2] - y[(n - 1) // 2] + 1)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    h = []\n    for j in range(n):\n        (x, y) = input().split()\n        h.append([int(x), int(y)])\n    print(main(h, n))", "T = int(input())\nfor t in range(T):\n    N = int(input())\n    points = []\n    for i in range(N):\n        (x, y) = [int(k) for k in input().split()]\n        points.append((x, y))\n    xs = sorted([p[0] for p in points])\n    ys = sorted([p[1] for p in points])\n    x_l = len(xs)\n    y_l = len(ys)\n    x_count = 0\n    if x_l % 2 == 0:\n        x_count = xs[x_l // 2] - xs[x_l // 2 - 1] + 1\n    else:\n        x_count = 1\n    y_count = 0\n    if y_l % 2 == 0:\n        y_count = ys[y_l // 2] - ys[y_l // 2 - 1] + 1\n    else:\n        y_count = 1\n    print(x_count * y_count)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = [0] * n\n    y = [0] * n\n    for j in range(n):\n        (x1, y1) = map(int, input().split())\n        x[j] = x1\n        y[j] = y1\n    ans = 0\n    x.sort()\n    y.sort()\n    if n % 2 == 0:\n        lo = int((n - 2) / 2)\n        hi = int(n / 2)\n        if x[lo] == x[hi] and y[lo] == y[hi]:\n            ans = 1\n        elif x[lo] == x[hi]:\n            ans = y[hi] - y[lo] + 1\n        elif y[lo] == y[hi]:\n            ans = x[hi] - x[lo] + 1\n        else:\n            ans = (x[hi] - x[lo] + 1) * (y[hi] - y[lo] + 1)\n        print(ans)\n    else:\n        print(1)", "t = int(input())\n\ndef solve(x):\n    x.sort()\n    return x[len(x) // 2] - x[(len(x) - 1) // 2] + 1\nfor i in range(t):\n    n = int(input())\n    (x, y) = ([], [])\n    for j in range(n):\n        (px, py) = map(int, input().split())\n        x.append(px)\n        y.append(py)\n    print(solve(x) * solve(y))", "for tt in range(int(input())):\n    n = int(input())\n    x = []\n    y = []\n    for i in range(n):\n        (dx, dy) = map(int, input().split())\n        x.append(dx)\n        y.append(dy)\n    x.sort()\n    y.sort()\n    if n % 2 == 0:\n        print((x[n // 2] - x[n // 2 - 1] + 1) * (y[n // 2] - y[n // 2 - 1] + 1))\n    else:\n        print(1)", "for _ in range(int(input())):\n    n = int(input())\n    x = []\n    y = []\n    for i in range(n):\n        (x1, y1) = map(int, input().split())\n        x.append(x1)\n        y.append(y1)\n    if n % 2 != 0:\n        print(1)\n    else:\n        x.sort()\n        y.sort()\n        z = n // 2\n        q = x[z] - x[z - 1] + 1\n        w = y[z] - y[z - 1] + 1\n        print(q * w)", "for t in range(int(input())):\n    n = int(input())\n    x = []\n    y = []\n    for i in range(n):\n        (x0, y0) = [int(x) for x in input().split()]\n        x.append(x0)\n        y.append(y0)\n    if n % 2 == 1:\n        print(1)\n    else:\n        x.sort()\n        y.sort()\n        print((x[n // 2] - x[n // 2 - 1] + 1) * (y[n // 2] - y[n // 2 - 1] + 1))", "p = lambda : list(map(int, input().split()))\nT = p()[0]\nfor _ in range(T):\n    N = p()[0]\n    x = [0] * N\n    y = [0] * N\n    for i in range(N):\n        (x[i], y[i]) = p()\n    x.sort()\n    y.sort()\n    print((x[N // 2] - x[(N - 1) // 2] + 1) * (y[N // 2] - y[(N - 1) // 2] + 1))", "def solve(x):\n    x.sort()\n    return x[len(x) // 2] - x[(len(x) - 1) // 2] + 1\nfor _ in range(int(input())):\n    n = int(input())\n    (x, y) = ([], [])\n    for j in range(n):\n        (px, py) = map(int, input().split())\n        x.append(px)\n        y.append(py)\n    print(solve(x) * solve(y))", "import math as m\n\ndef count(zoz, x, y):\n    poc = 0\n    for i in zoz:\n        poc += abs(x - i[0])\n        poc += abs(y - i[1])\n    return poc\nres = []\nfor _ in range(int(input())):\n    n = int(input())\n    xes = []\n    yes = []\n    for i in range(n):\n        sur = [int(x) for x in input().split()]\n        xes.append(sur[0])\n        yes.append(sur[1])\n    xes.sort()\n    yes.sort()\n    x = xes[int(len(xes) / 2)] - xes[int((len(xes) - 1) / 2)] + 1\n    y = yes[int(len(yes) / 2)] - yes[int((len(yes) - 1) / 2)] + 1\n    res.append(x * y)\nfor i in res:\n    print(i)", "for _ in range(int(input())):\n    n = int(input())\n    x = [0] * n\n    y = [0] * n\n    for i in range(n):\n        tmp = list(map(int, input().split()))\n        x[i] = tmp[0]\n        y[i] = tmp[1]\n    ans = 1\n    x.sort()\n    y.sort()\n    if n % 2 == 0:\n        k = x[n // 2] - x[n // 2 - 1] + 1\n        k2 = y[n // 2] - y[n // 2 - 1] + 1\n        ans = k * k2\n    print(ans)", "nb_test = int(input())\nfor _ in range(nb_test):\n    nb_home = int(input())\n    homes = []\n    X = []\n    Y = []\n    for _ in range(nb_home):\n        homes.append(list(map(int, input().split())))\n    if nb_home % 2 != 0:\n        print(1)\n        continue\n    for coord in range(nb_home):\n        X.append(homes[coord][0])\n        Y.append(homes[coord][1])\n    X.sort()\n    Y.sort()\n    print((X[len(X) // 2] - X[len(X) // 2 - 1] + 1) * (Y[len(Y) // 2] - Y[len(Y) // 2 - 1] + 1))", "def solve(n, X, Y):\n    if n % 2 != 0:\n        return 1\n    X.sort()\n    Y.sort()\n    return (X[n // 2] - X[n // 2 - 1] + 1) * (Y[n // 2] - Y[n // 2 - 1] + 1)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    X = []\n    Y = []\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        X.append(x)\n        Y.append(y)\n    print(solve(n, X, Y))", "t = int(input())\n\ndef solve(x):\n    x.sort()\n    return x[len(x) // 2] - x[(len(x) - 1) // 2] + 1\nfor i in range(t):\n    n = int(input())\n    (x, y) = ([], [])\n    for j in range(n):\n        (px, py) = map(int, input().split())\n        x.append(px)\n        y.append(py)\n    print(solve(x) * solve(y))", "import math\nfor t in range(int(input())):\n    n = int(input())\n    lis = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        lis.append((a + 1, b + 1))\n    a = []\n    b = []\n    for i in lis:\n        a.append(i[0])\n        b.append(i[1])\n    a.sort()\n    b.sort()\n    if n & 1:\n        print(1)\n    else:\n        x = a[(n + 1) // 2] - a[(n - 1) // 2] + 1\n        y = b[(n + 1) // 2] - b[(n - 1) // 2] + 1\n        print(x * y)", "import collections\nimport sys\nimport math\ninput = sys.stdin.readline\nfrom bisect import bisect_left\nfrom bisect import bisect_right\nfrom functools import cmp_to_key\nfrom collections import defaultdict\nfrom collections import deque\nimport heapq\n\ndef solve():\n    t = int(input())\n    while t:\n        t -= 1\n        n = int(input())\n        (x, y) = ([], [])\n        for _ in range(n):\n            (a, b) = list(map(int, input().split()))\n            x.append(a)\n            y.append(b)\n        x.sort()\n        y.sort()\n        if n % 2 != 0:\n            print(1)\n            continue\n        c = n // 2\n        d = n // 2 - 1\n        print((x[c] - x[d] + 1) * (y[c] - y[d] + 1))\n\ndef main():\n    solve()\nmain()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = []\n    y = []\n    for j in range(n):\n        b = list(map(int, input().split()))\n        x.append(b[0])\n        y.append(b[1])\n    x.sort()\n    y.sort()\n    if n % 2 == 1:\n        print(1)\n    else:\n        print((x[n // 2] - x[n // 2 - 1] + 1) * (y[n // 2] - y[n // 2 - 1] + 1))", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nfrom collections import defaultdict\nimport math\nfor _ in range(int(input())):\n    N = int(input())\n    (X, Y) = ([], [])\n    for _ in range(N):\n        (x, y) = map(int, input().split())\n        X.append(x)\n        Y.append(y)\n    if N % 2:\n        print(1)\n    else:\n        X.sort()\n        Y.sort()\n        ans = (X[N // 2] - X[N // 2 - 1] + 1) * (Y[N // 2] - Y[N // 2 - 1] + 1)\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = []\n    y = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        x.append(a)\n        y.append(b)\n    x.sort()\n    y.sort()\n    if n % 2 == 1:\n        print(1)\n    else:\n        x1 = x[n // 2]\n        x2 = x[n // 2 - 1]\n        y1 = y[n // 2]\n        y2 = y[n // 2 - 1]\n        print((abs(x2 - x1) + 1) * (abs(y2 - y1) + 1))", "for _ in range(int(input())):\n    n = int(input())\n    x = []\n    y = []\n    for i in range(n):\n        l = input().split(' ')\n        x.append(int(l[0]))\n        y.append(int(l[1]))\n    x.sort()\n    y.sort()\n    res = 1\n    if n % 2 == 0:\n        res *= x[n // 2] - x[n // 2 - 1] + 1\n        res *= y[n // 2] - y[n // 2 - 1] + 1\n    print(res)", "t = int(input())\nfor case in range(t):\n    n = int(input())\n    hx = []\n    hy = []\n    for _ in range(n):\n        (xi, yi) = map(int, input().split())\n        hx.append(xi)\n        hy.append(yi)\n    if n % 2:\n        print(1)\n    else:\n        hx.sort()\n        hy.sort()\n        p = 1\n        p *= hx[n // 2] - hx[n // 2 - 1] + 1\n        p *= hy[n // 2] - hy[n // 2 - 1] + 1\n        print(p)", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    lx = []\n    ly = []\n    for i in range(n):\n        (x, y) = list(map(int, input().split()))\n        lx.append(x)\n        ly.append(y)\n    lx.sort()\n    ly.sort()\n    if len(lx) % 2 == 1:\n        nx = 1\n    else:\n        nx = lx[len(lx) // 2] - lx[len(lx) // 2 - 1] + 1\n    if len(ly) % 2 == 1:\n        ny = 1\n    else:\n        ny = ly[len(ly) // 2] - ly[len(ly) // 2 - 1] + 1\n    print(nx * ny)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    xs = []\n    ys = []\n    for _ in range(n):\n        (x, y) = tuple(map(int, input().split()))\n        (xs.append(x), ys.append(y))\n    xs = sorted(xs)\n    ys = sorted(ys)\n    if n % 2 == 0:\n        f_x = xs[n // 2] - xs[n // 2 - 1] + 1\n    else:\n        f_x = 1\n    if n % 2 == 0:\n        f_y = ys[n // 2] - ys[n // 2 - 1] + 1\n    else:\n        f_y = 1\n    print(f_x * f_y)", "def yerin(n, x, y):\n    if n % 2 == 1:\n        return 1\n    else:\n        if x[int(n / 2) - 1] == x[int(n / 2)]:\n            a = 1\n        else:\n            a = 1 - x[int(n / 2) - 1] + x[int(n / 2)]\n        if y[int(n / 2) - 1] == y[int(n / 2)]:\n            b = 1\n        else:\n            b = 1 - y[int(n / 2) - 1] + y[int(n / 2)]\n        return a * b\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    x = []\n    y = []\n    for j in range(n):\n        (p, q) = map(int, input().split())\n        x.append(p)\n        y.append(q)\n    x.sort()\n    y.sort()\n    print(yerin(n, x, y))", "from math import floor, ceil\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    pos = []\n    for j in range(n):\n        (x, y) = [int(a) for a in input().split()]\n        pos.append((x, y))\n    xarr = sorted([p[0] for p in pos])\n    yarr = sorted([p[1] for p in pos])\n    if n % 2 == 1:\n        ans = 1\n    else:\n        if xarr[n // 2 - 1] != xarr[n // 2]:\n            xans = xarr[n // 2] - xarr[n // 2 - 1] + 1\n        else:\n            xans = 1\n        if yarr[n // 2 - 1] != yarr[n // 2]:\n            yans = yarr[n // 2] - yarr[n // 2 - 1] + 1\n        else:\n            yans = 1\n        ans = xans * yans\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = []\n    y = []\n    for _ in range(n):\n        (a, b) = map(int, input().split())\n        x.append(a)\n        y.append(b)\n    if n % 2 == 1:\n        print(1)\n    else:\n        x.sort()\n        y.sort()\n        print((x[n // 2] - x[n // 2 - 1] + 1) * (y[n // 2] - y[n // 2 - 1] + 1))", "def solve() -> int:\n    n = int(input())\n    xs = []\n    ys = []\n    for _ in range(0, n):\n        coordinate = input().split()\n        xs.append(int(coordinate[0]))\n        ys.append(int(coordinate[1]))\n    if n % 2 == 1:\n        return 1\n    else:\n        xs.sort()\n        ys.sort()\n        dx = xs[n // 2] - xs[n // 2 - 1] + 1\n        dy = ys[n // 2] - ys[n // 2 - 1] + 1\n        return dx * dy\nt = int(input())\nfor _ in range(0, t):\n    ans = solve()\n    print(ans)\npass", "t = int(input())\nfor case in range(t):\n    n = int(input())\n    x = []\n    y = []\n    for i in range(n):\n        (a, b) = [int(j) for j in input().split()]\n        x.append(a)\n        y.append(b)\n    res = 1\n    if n % 2 == 1:\n        print(res)\n    else:\n        x.sort()\n        y.sort()\n        ind1 = n // 2 - 1\n        ind2 = n // 2\n        numx = x[ind2] - x[ind1] + 1\n        numy = y[ind2] - y[ind1] + 1\n        res = numx * numy\n        print(res)", "n = int(input())\nans = []\nfor i in range(n):\n    a = int(input())\n    x = []\n    y = []\n    for j in range(a):\n        (k, l) = (int(num) for num in input().split())\n        x.append(k)\n        y.append(l)\n    if a % 2 == 1:\n        ans.append(1)\n        continue\n    x.sort()\n    y.sort()\n    ans.append((x[a // 2] - x[a // 2 - 1] + 1) * (y[a // 2] - y[a // 2 - 1] + 1))\nfor i in ans:\n    print(i)", "result = []\ncases = int(input())\nfor i in range(cases):\n    n = int(input())\n    xarr = [0] * n\n    yarr = [0] * n\n    for j in range(n):\n        (x, y) = map(int, input().split(' '))\n        xarr[j] = x\n        yarr[j] = y\n    xarr.sort()\n    yarr.sort()\n    ax = xarr[n // 2]\n    ay = yarr[n // 2]\n    if n % 2 != 0:\n        result.append(1)\n    else:\n        if ax == xarr[n // 2 - 1]:\n            m = 1\n        else:\n            m = ax - xarr[n // 2 - 1] + 1\n        if ay == yarr[n // 2 - 1]:\n            l = 1\n        else:\n            l = ay - yarr[n // 2 - 1] + 1\n        result.append(m * l)\nfor _ in result:\n    print(_)", "def solve(X, Y, n):\n    X = sorted(X)\n    Y = sorted(Y)\n    if n % 2 == 1:\n        return 1\n    else:\n        return (X[n // 2] - X[n // 2 - 1] + 1) * (Y[n // 2] - Y[n // 2 - 1] + 1)\nt = int(input())\nfor tc in range(t):\n    n = int(input())\n    X = []\n    Y = []\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        X.append(x)\n        Y.append(y)\n    result = solve(X, Y, n)\n    print(result)", "for _ in range(int(input())):\n    n = int(input())\n    x = []\n    y = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        x.append(a)\n        y.append(b)\n    if n % 2 == 1:\n        print(1)\n        continue\n    x.sort()\n    y.sort()\n    ans = (x[n // 2] - x[n // 2 - 1] + 1) * (y[n // 2] - y[n // 2 - 1] + 1)\n    print(ans)", "def manh(x1, y1, x2, y2):\n    return abs(x1 - x2) + abs(y1 - y2)\nt = int(input())\nans = []\nfor _ in range(t):\n    n = int(input())\n    a = []\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        a.append((x, y))\n    if n == 1:\n        ans.append(1)\n        continue\n    a.sort(key=lambda e: e[0])\n    if n % 2 == 0:\n        cx = a[(n - 1) // 2 + 1][0] - a[(n - 1) // 2][0] + 1\n    else:\n        cx = 1\n    a.sort(key=lambda e: e[1])\n    if n % 2 == 0:\n        cy = a[(n - 1) // 2 + 1][1] - a[(n - 1) // 2][1] + 1\n    else:\n        cy = 1\n    ans.append(cx * cy)\nfor i in ans:\n    print(i)", "def solve(n, point):\n    for i in range(2):\n        point[i].sort()\n    res = []\n    for i in range(2):\n        if n % 2 == 0:\n            res.append((point[i][(n - 1) // 2], point[i][n // 2]))\n        else:\n            res.append(point[i][n // 2])\n    if n % 2 == 0:\n        ans = (abs(res[0][0] - res[0][1]) + 1) * (abs(res[1][0] - res[1][1]) + 1)\n    else:\n        ans = 1\n    return ans\nt = int(input())\nwhile t:\n    n = int(input())\n    point = [[], []]\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        point[0].append(x)\n        point[1].append(y)\n    print(solve(n, point))\n    t -= 1", "from collections import defaultdict\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    able = 1\n    lst = []\n    dct = defaultdict(int)\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        lst.append((a, b))\n    lst.sort()\n    if n % 2:\n        x1 = lst[n // 2][0]\n        x2 = lst[n // 2][0]\n    else:\n        x1 = lst[n // 2 - 1][0]\n        x2 = lst[n // 2][0]\n    lst.sort(key=lambda tup: tup[1])\n    if n % 2:\n        y1 = lst[n // 2][1]\n        y2 = lst[n // 2][1]\n    else:\n        y1 = lst[n // 2 - 1][1]\n        y2 = lst[n // 2][1]\n    ans = (x2 - x1 + 1) * (y2 - y1 + 1)\n    print(ans)", "import math\n\ndef getint():\n    return [int(i) for i in input().split()]\n\ndef getstr():\n    return [str(i) for i in input().split()]\n\ndef solve():\n    n = int(input())\n    x = []\n    y = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        x.append(a)\n        y.append(b)\n    x.sort()\n    y.sort()\n    ans1 = 0\n    ans2 = 0\n    if n % 2 == 0:\n        ans1 = x[n // 2] - x[n // 2 - 1] + 1\n        ans2 = y[n // 2] - y[n // 2 - 1] + 1\n        print(ans1 * ans2)\n    else:\n        print(1)\nfor _ in range(int(input())):\n    solve()", "n1 = int(input())\nfor _ in range(n1):\n    n = int(input())\n    (x, y) = ([], [])\n    for _ in range(n):\n        t = [int(item) for item in input().split()]\n        x.append(t[0])\n        y.append(t[1])\n    x.sort()\n    y.sort()\n    if n % 2 == 1:\n        ans = 1\n    else:\n        ansx = x[int(n / 2)] - x[int(n / 2 - 1)] + 1\n        ansy = y[int(n / 2)] - y[int(n / 2 - 1)] + 1\n        ans = ansx * ansy\n    print(ans)", "tc = int(input())\nwhile tc > 0:\n    a = []\n    b = []\n    n = int(input())\n    for i in range(n):\n        (x, y) = map(int, input().strip().split())\n        a.append(x)\n        b.append(y)\n    a.sort()\n    b.sort()\n    m = n // 2\n    if n % 2 == 1:\n        print(1)\n    else:\n        print((a[m] - a[m - 1] + 1) * (b[m] - b[m - 1] + 1))\n    tc = tc - 1", "for _ in range(int(input())):\n    n = int(input())\n    x = []\n    y = []\n    if n % 2 == 0:\n        for i in range(n):\n            (x1, y1) = map(int, input().split())\n            x.append(x1)\n            y.append(y1)\n        x = sorted(x)\n        y = sorted(y)\n        medx = x[n // 2] - x[n // 2 - 1] + 1\n        medy = y[n // 2] - y[n // 2 - 1] + 1\n        print(medx * medy)\n    else:\n        for i in range(n):\n            (x1, y1) = map(int, input().split())\n            x.append(x1)\n            y.append(y1)\n        print(1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    xx = []\n    yy = []\n    for x in range(n):\n        a = [int(z) for z in input().split()]\n        xx.append(a[0])\n        yy.append(a[1])\n    xx = sorted(xx)\n    yy = sorted(yy)\n    f = (n + 1) // 2\n    s = (n + 2) // 2\n    print((abs(xx[f - 1] - xx[s - 1]) + 1) * (abs(yy[f - 1] - yy[s - 1]) + 1))", "T = int(input())\nwhile T > 0:\n    T -= 1\n    n = int(input())\n    x = []\n    y = []\n    for i in range(n):\n        (a, b) = list(map(int, input().split()))\n        x.append(a)\n        y.append(b)\n    x.sort()\n    y.sort()\n    if n % 2 == 0:\n        xs = x[n // 2] - x[n // 2 - 1] + 1\n        ys = y[n // 2] - y[n // 2 - 1] + 1\n        print(xs * ys)\n    else:\n        print(1)", "class Solution:\n\n    def decide_loc(self, rows, cols):\n        row = sorted(rows)\n        col = sorted(cols)\n        if len(row) % 2 == 0:\n            return (row[int((len(row) - 1) / 2) + 1] - row[int((len(row) - 1) / 2)] + 1) * (col[int((len(row) - 1) / 2) + 1] - col[int((len(row) - 1) / 2)] + 1)\n        else:\n            return 1\ns = Solution()\nn = int(input())\nfor i in range(n):\n    t = int(input())\n    rows = []\n    cols = []\n    for indx in range(t):\n        st = input()\n        row = int(st.split()[0])\n        col = int(st.split()[1])\n        rows.append(row)\n        cols.append(col)\n    print(s.decide_loc(rows, cols))", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    a = []\n    b = []\n    for i in range(0, n):\n        (x, y) = map(int, input().split())\n        a.append(x)\n        b.append(y)\n    a.sort()\n    b.sort()\n    if n % 2 == 1:\n        print(1)\n    else:\n        print((a[n // 2] - a[n // 2 - 1] + 1) * (b[n // 2] - b[n // 2 - 1] + 1))\n    t = t - 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    (x, y) = ([0] * n, [0] * n)\n    for i in range(n):\n        (x[i], y[i]) = list(map(int, input().split()))\n    x.sort()\n    y.sort()\n    if n % 2:\n        ans = 1\n    else:\n        half = n // 2\n        xways = x[half] - x[half - 1] + 1\n        yways = y[half] - y[half - 1] + 1\n        ans = xways * yways\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    x = []\n    y = []\n    for _ in range(n):\n        (a, b) = map(int, input().split())\n        x.append(a)\n        y.append(b)\n    if n % 2 == 1:\n        print(1)\n    else:\n        x.sort()\n        y.sort()\n        print((x[n // 2] - x[n // 2 - 1] + 1) * (y[n // 2] - y[n // 2 - 1] + 1))", "def solve(x):\n    x.sort()\n    ans = x[len(x) // 2] - x[(len(x) - 1) // 2] + 1\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    (x, y) = ([], [])\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        x.append(a)\n        y.append(b)\n    ans = solve(x) * solve(y)\n    print(ans)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    (x, y, l) = ([], [], [])\n    for i in range(n):\n        l.append(list(map(int, input().split())))\n        x.append(l[-1][0])\n        y.append(l[-1][1])\n    if n % 2 == 1:\n        print(1)\n        continue\n    else:\n        x.sort()\n        y.sort()\n        (x1, x2) = (x[n // 2], x[n // 2 - 1])\n        (y1, y2) = (y[n // 2], y[n // 2 - 1])\n        print((x1 - x2 + 1) * (y1 - y2 + 1))", "def solve(arr):\n    arr.sort()\n    n = len(arr)\n    return arr[n // 2] - arr[(n - 1) // 2] + 1\nfor _ in range(int(input())):\n    n = int(input())\n    (x, y) = ([0] * n, [0] * n)\n    for i in range(n):\n        (x[i], y[i]) = map(int, input().split())\n    print(solve(x) * solve(y))", "t = int(input())\nfor j in range(0, t):\n    n = int(input())\n    points = []\n    for i in range(0, n):\n        l = [int(x) for x in input().split()]\n        points.append([l[0], l[1]])\n    x = []\n    y = []\n    for i in points:\n        x.append(i[0])\n        y.append(i[1])\n    x.sort()\n    y.sort()\n    length = len(x)\n    if length % 2 == 0:\n        median2x = x[length // 2]\n        median1x = x[length // 2 - 1]\n        val1 = median2x - median1x - 1 + 2\n        median2y = y[length // 2]\n        median1y = y[length // 2 - 1]\n        val2 = median2y - median1y - 1 + 2\n        ans = val2 * val1\n    else:\n        ans = 1\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    x = []\n    y = []\n    for i in range(n):\n        (c, d) = map(int, input().split())\n        x.append(c)\n        y.append(d)\n    x.sort()\n    y.sort()\n    if n & 1:\n        print(1)\n    else:\n        c = int(n / 2)\n        print((x[c] - x[c - 1] + 1) * (y[c] - y[c - 1] + 1))", "def yerin(n, x, y):\n    if n % 2 == 1:\n        return 1\n    else:\n        if x[int(n / 2) - 1] == x[int(n / 2)]:\n            a = 1\n        else:\n            a = 1 - x[int(n / 2) - 1] + x[int(n / 2)]\n        if y[int(n / 2) - 1] == y[int(n / 2)]:\n            b = 1\n        else:\n            b = 1 - y[int(n / 2) - 1] + y[int(n / 2)]\n        return a * b\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    x = []\n    y = []\n    for j in range(n):\n        (p, q) = map(int, input().split())\n        x.append(p)\n        y.append(q)\n    x.sort()\n    y.sort()\n    print(yerin(n, x, y))", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    (x, y) = ([], [])\n    (d, e) = (0, 0)\n    for i in range(n):\n        (X, Y) = map(int, input().split())\n        x.append(X)\n        y.append(Y)\n    x.sort()\n    y.sort()\n    if len(x) % 2 == 0:\n        d = x[n // 2] - x[n // 2 - 1] + 1\n    else:\n        d = 1\n    if len(y) % 2 == 0:\n        e = y[n // 2] - y[n // 2 - 1] + 1\n    else:\n        e = 1\n    print(d * e)", "t = int(input())\n\ndef solve(x):\n    x.sort()\n    return x[len(x) // 2] - x[(len(x) - 1) // 2] + 1\nfor i in range(t):\n    n = int(input())\n    (x, y) = ([], [])\n    for j in range(n):\n        (px, py) = map(int, input().split())\n        x.append(px)\n        y.append(py)\n    print(solve(x) * solve(y))", "for _ in range(int(input())):\n    n = int(input())\n    x = []\n    y = []\n    for i in range(n):\n        (xi, yi) = map(int, input().split())\n        x.append(xi)\n        y.append(yi)\n    if n % 2 != 0:\n        print(1)\n    else:\n        x.sort()\n        y.sort()\n        tx = x[n // 2] - x[n // 2 - 1] + 1\n        ty = y[n // 2] - y[n // 2 - 1] + 1\n        print(tx * ty)", "def solve(x, y, n):\n    if n % 2 == 0:\n        a = median(x)\n        b = median(y)\n        return a * b\n    else:\n        return 1\n\ndef median(arr):\n    arr.sort()\n    n = len(arr)\n    x = arr[n // 2 - 1]\n    y = arr[n // 2]\n    return y - x + 1\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = list()\n    y = list()\n    for _ in range(n):\n        (a, b) = map(int, input().split())\n        x.append(a)\n        y.append(b)\n    print(solve(x, y, n))", "def solve(x, y, n):\n    if n % 2 == 0:\n        a = median(x)\n        b = median(y)\n        return a * b\n    else:\n        return 1\n\ndef median(arr):\n    arr.sort()\n    n = len(arr)\n    x = arr[n // 2 - 1]\n    y = arr[n // 2]\n    return y - x + 1\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = list()\n    y = list()\n    for _ in range(n):\n        (a, b) = map(int, input().split())\n        x.append(a)\n        y.append(b)\n    print(solve(x, y, n))", "for _ in range(int(input())):\n    n = int(input())\n    x = [0] * n\n    y = [0] * n\n    for i in range(n):\n        (x[i], y[i]) = map(int, input().split())\n    if n % 2:\n        print(1)\n    else:\n        x.sort()\n        y.sort()\n        mid = n // 2\n        print((x[mid] - x[mid - 1] + 1) * (y[mid] - y[mid - 1] + 1))", "def solve(x):\n    x.sort()\n    return x[len(x) // 2] - x[(len(x) - 1) // 2] + 1\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    coordinates_x = []\n    coordinates_y = []\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        coordinates_x.append(x)\n        coordinates_y.append(y)\n    print(solve(coordinates_x) * solve(coordinates_y))", "gt = lambda : list(map(int, input().split()))\n\ndef pos(ar):\n    if len(ar) & 1 == 1:\n        return 1\n    ar.sort()\n    m = len(ar) // 2\n    return ar[m] - ar[m - 1] + 1\n\ndef run():\n    n = int(input())\n    x = []\n    y = []\n    for i in range(n):\n        (xx, yy) = gt()\n        x.append(xx)\n        y.append(yy)\n    print(pos(x) * pos(y))\nexec('run();' * int(input()))", "def solve():\n    n = int(input())\n    houses = []\n    for i in range(n):\n        t = list(map(int, input().split()))\n        houses.append(t)\n    if len(houses) % 2 != 0:\n        print(1)\n    else:\n        houses.sort(key=lambda x: x[1])\n        mid = int(n / 2)\n        t1 = houses[mid][1] - houses[mid - 1][1] + 1\n        houses.sort(key=lambda x: x[0])\n        t2 = houses[mid][0] - houses[mid - 1][0] + 1\n        print(t1 * t2)\nt = int(input())\nfor i in range(t):\n    solve()", "cases = int(input())\nfor _ in range(cases):\n    n = int(input())\n    a = []\n    b = []\n    for __ in range(n):\n        (x, y) = map(int, input().split())\n        a.append(x)\n        b.append(y)\n    if n & 1:\n        print(1)\n        continue\n    a.sort()\n    b.sort()\n    print((a[n // 2] - a[n // 2 - 1] + 1) * (b[n // 2] - b[n // 2 - 1] + 1))", "import sys\nimport math\nfrom collections import Counter\nreadln = sys.stdin.readline\n\ndef write(obj):\n    sys.stdout.write(str(obj))\n\ndef readint():\n    return int(readln().strip())\n\ndef readints():\n    return map(int, readln().split())\n\ndef readstr():\n    return readln().strip()\n\ndef readstrs():\n    return readln().split()\n\ndef write(obj):\n    sys.stdout.write(str(obj))\n\ndef dbg(*args):\n    if __debug__:\n        print(' '.join(map(str, args)))\n\ndef solve():\n    n = readint()\n    xs = []\n    ys = []\n    for _ in range(n):\n        (x, y) = readints()\n        xs.append(x)\n        ys.append(y)\n\n    def get_range(arr):\n        mid = len(arr) // 2\n        if len(arr) % 2 == 0:\n            return arr[mid] - arr[mid - 1] + 1\n        else:\n            return 1\n    xs = sorted(xs)\n    ys = sorted(ys)\n    return get_range(xs) * get_range(ys)\nt = readint()\nfor _ in range(t):\n    ret = solve()\n    if type(ret) in [int, str]:\n        write(ret)\n    else:\n        write('\\n'.join(ret))\n    write('\\n')", "def solve():\n    n = int(input())\n    (a, b) = ([], [])\n    for _ in range(n):\n        (x, y) = map(int, input().split())\n        a.append(x)\n        b.append(y)\n    a.sort()\n    b.sort()\n    xx = abs(a[n // 2] - a[(n - 1) // 2]) + 1\n    yy = abs(b[n // 2] - b[(n - 1) // 2]) + 1\n    print(xx * yy)\ntt = int(input())\nfor _ in range(tt):\n    solve()", "t = int(input())\nfor z in range(t):\n    n = int(input())\n    x = []\n    y = []\n    for i in range(n):\n        inp = input().split()\n        x.append(int(inp[0]))\n        y.append(int(inp[1]))\n\n    def nbof(x, n):\n        x.sort()\n        if n % 2 == 1:\n            return 1\n        return x[int(n / 2)] - x[int((n - 1) / 2)] + 1\n    print(nbof(x, n) * nbof(y, n))", "t = int(input())\nfor i in range(t):\n    xx = []\n    yy = []\n    n = int(input())\n    for j in range(n):\n        (x, y) = map(int, input().split())\n        xx.append(x)\n        yy.append(y)\n    xx.sort()\n    yy.sort()\n    c = 0\n    d = 0\n    if n % 2 == 0:\n        c = xx[n // 2] - xx[(n - 1) // 2] + 1\n        d = yy[n // 2] - yy[(n - 1) // 2] + 1\n        print(c * d)\n    else:\n        print(1)", "R1 = lambda : list(map(int, input().split()))\nR2 = lambda : int(input())\nt = R2()\nfor _ in range(t):\n    n = R2()\n    (X, Y) = ([], [])\n    s = 1\n    for _ in range(n):\n        (x, y) = R1()\n        X.append(x)\n        Y.append(y)\n    for e in (X, Y):\n        n = len(e)\n        e.sort()\n        s *= e[n // 2] - e[(n - 1) // 2] + 1\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    x_map = dict()\n    y_map = dict()\n    min_y = 1000000001\n    min_x = 1000000001\n    for _ in range(n):\n        (x, y) = map(int, input().split())\n        if y in y_map:\n            y_map[y] += 1\n        else:\n            y_map[y] = 1\n        if x in x_map:\n            x_map[x] += 1\n        else:\n            x_map[x] = 1\n        min_y = min(y, min_y)\n        min_x = min(x, min_x)\n    best_y = 1\n    best_x = 1\n    if n % 2 == 1:\n        print(1)\n        continue\n    last_y = min_y\n    left = 0\n    for y in sorted(y_map):\n        if left == n // 2:\n            best_y = y - last_y + 1\n        if left >= n // 2:\n            break\n        left += y_map[y]\n        last_y = y\n    last_x = min_x\n    left = 0\n    for x in sorted(x_map):\n        if left == n // 2:\n            best_x = x - last_x + 1\n        if left >= n // 2:\n            break\n        left += x_map[x]\n        last_x = x\n    print(best_x * best_y)", "def main(a, b):\n    n = len(a)\n    a.sort()\n    b.sort()\n    if n % 2 == 0:\n        x = n // 2\n        y = n // 2 - 1\n    else:\n        return 1\n    return (a[x] - a[y] + 1) * (b[x] - b[y] + 1)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [0] * n\n    b = [0] * n\n    for j in range(n):\n        str_arr = input().split(' ')\n        arr = [int(num) for num in str_arr]\n        a[j] = arr[0]\n        b[j] = arr[1]\n    print(main(a, b))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    (xs, ys) = ([], [])\n    for i in range(n):\n        (x, y) = list(map(int, input().split()))\n        xs.append(x)\n        ys.append(y)\n    xs.sort()\n    ys.sort()\n    if n % 2 == 0:\n        a = xs[n // 2] - xs[n // 2 - 1] + 1\n        b = ys[n // 2] - ys[n // 2 - 1] + 1\n        print(a * b)\n    else:\n        print(1)", "t = int(input())\nfor z in range(t):\n    x_arr = []\n    y_arr = []\n    n = int(input())\n    for i in range(n):\n        (x, y) = map(int, input().split())\n        x_arr.append(x)\n        y_arr.append(y)\n    x_arr.sort()\n    y_arr.sort()\n    if n % 2 == 1:\n        print(1)\n    else:\n        print((x_arr[n // 2] - x_arr[n // 2 - 1] + 1) * (y_arr[n // 2] - y_arr[n // 2 - 1] + 1))", "def median(arr):\n    if len(arr) % 2 != 0:\n        return (arr[len(arr) // 2], arr[len(arr) // 2])\n    return (arr[len(arr) // 2 - 1], arr[len(arr) // 2])\nfor _ in range(int(input())):\n    n = int(input())\n    x = []\n    y = []\n    for i in range(n):\n        (a, b) = map(int, input().split())\n        x.append(a)\n        y.append(b)\n    x.sort()\n    y.sort()\n    count = 1\n    (a, b) = median(x)\n    count *= b - a + 1\n    (a, b) = median(y)\n    count *= b - a + 1\n    print(count)", "def solve(z):\n    return z[n // 2] + 1 - z[-1 - n // 2]\nfor _ in range(int(input())):\n    n = int(input())\n    (x, y) = map(sorted, zip(*(map(int, input().split()) for _ in range(n))))\n    print(solve(x) * solve(y))", "def solve(z):\n    return z[n // 2] + 1 - z[(n - 1) // 2]\nfor _ in range(int(input())):\n    n = int(input())\n    (x, y) = map(sorted, zip(*(map(int, input().split()) for _ in range(n))))\n    print(solve(x) * solve(y))", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    xlist = []\n    ylist = []\n    for j in range(n):\n        l1 = input().split(' ')\n        x = int(l1[0])\n        y = int(l1[1])\n        xlist.append(x)\n        ylist.append(y)\n    if n % 2 == 1:\n        print(1)\n    else:\n        xlist.sort()\n        ylist.sort()\n        mid = n // 2 - 1\n        xd = xlist[mid + 1] - xlist[mid] + 1\n        yd = ylist[mid + 1] - ylist[mid] + 1\n        print(xd * yd)", "def solve(x):\n    x.sort()\n    return x[len(x) // 2] - x[(len(x) - 1) // 2] + 1\nfor i in range(int(input())):\n    px = []\n    py = []\n    for j in range(int(input())):\n        (x, y) = map(int, input().split())\n        px.append(x)\n        py.append(y)\n    print(solve(px) * solve(py))", "for _ in range(int(input())):\n    n = int(input())\n    x = [0] * n\n    y = [0] * n\n    for i in range(n):\n        house = list(map(int, input().split()))\n        (x[i], y[i]) = (house[0], house[1])\n    ans = 1\n    x.sort()\n    y.sort()\n    if n % 2 == 0:\n        kx = x[n // 2] - x[n // 2 - 1] + 1\n        ky = y[n // 2] - y[n // 2 - 1] + 1\n        ans = kx * ky\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = []\n    for _ in range(n):\n        arr.append(list(map(int, input().split())))\n    if n % 2 == 1:\n        print(1)\n    else:\n        x = []\n        y = []\n        for i in arr:\n            x.append(i[0])\n            y.append(i[1])\n        x.sort()\n        y.sort()\n        ans = (x[n // 2] - x[n // 2 - 1] + 1) * (y[n // 2] - y[n // 2 - 1] + 1)\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [0] * (n + 1)\n    b = [0] * (n + 1)\n    for i in range(1, n + 1):\n        (x, y) = map(int, input().split())\n        a[i] = x\n        b[i] = y\n    a.sort()\n    b.sort()\n    if n % 2 == 1:\n        print('1', end='\\n')\n        continue\n    ans = (a[n // 2 + 1] - a[n // 2] + 1) * (b[n // 2 + 1] - b[n // 2] + 1)\n    print(ans, end='\\n')", "def solve():\n    n = int(input())\n    (x, y) = ([], [])\n    for _ in range(n):\n        (xi, yi) = list(map(int, input().split()))\n        x.append(xi)\n        y.append(yi)\n    (x, y) = (sorted(x), sorted(y))\n    return (x[n // 2] - x[(n - 1) // 2] + 1) * (y[n // 2] - y[(n - 1) // 2] + 1)\nt = int(input())\nfor _ in range(t):\n    print(solve())", "for _ in range(int(input())):\n    n = int(input())\n    x = []\n    y = []\n    for i in range(n):\n        (xi, yi) = map(int, input().split())\n        x.append(xi)\n        y.append(yi)\n    x.sort()\n    y.sort()\n    if n % 2 == 1:\n        print(1)\n        continue\n    dx = x[n // 2] - x[n // 2 - 1] + 1\n    dy = y[n // 2] - y[n // 2 - 1] + 1\n    print(dx * dy)", "import sys\nt = int(sys.stdin.readline().strip())\nfor _ in range(t):\n    n = int(sys.stdin.readline().strip())\n    (xs, ys) = ([], [])\n    for __ in range(n):\n        (x, y) = map(int, sys.stdin.readline().strip().split())\n        xs.append(x)\n        ys.append(y)\n    if n % 2 == 1:\n        print(1)\n        continue\n    xs.sort()\n    ys.sort()\n    med = int(n / 2)\n    print((ys[med] - ys[med - 1] + 1) * (xs[med] - xs[med - 1] + 1))", "def median(x):\n    x.sort()\n    if len(x) % 2 == 1:\n        return 1\n    else:\n        return x[len(x) // 2] - x[(len(x) - 1) // 2] + 1\nfor _ in range(int(input())):\n    x = int(input())\n    x1 = []\n    y1 = []\n    for i in range(x):\n        (a, b) = map(int, input().split())\n        x1.append(a)\n        y1.append(b)\n    ans1 = median(x1)\n    ans2 = median(y1)\n    print(ans1 * ans2)", "def solve(n, x):\n    a = x[(n - 1) // 2]\n    b = x[n // 2]\n    return b - a + 1\nfor _ in range(int(input())):\n    n = int(input())\n    xs = []\n    ys = []\n    for i in range(n):\n        (x, y) = list(map(int, input().split()))\n        xs.append(x)\n        ys.append(y)\n    xs.sort()\n    ys.sort()\n    print(solve(n, xs) * solve(n, ys))", "t = int(input())\n\ndef ans(x):\n    x.sort()\n    return x[len(x) // 2] - x[(len(x) - 1) // 2] + 1\nfor i in range(t):\n    n = int(input())\n    x = []\n    y = []\n    for j in range(n):\n        (a, b) = map(int, input().split())\n        x.append(a)\n        y.append(b)\n    print(ans(x) * ans(y))", "question_num = int(input())\nans = []\nfor i in range(question_num):\n    point_num = int(input())\n    x_list = []\n    y_list = []\n    for j in range(point_num):\n        [x, y] = [int(str1) for str1 in input().split()]\n        x_list.append(x)\n        y_list.append(y)\n    if point_num % 2:\n        ans.append(1)\n        continue\n    x_list.sort()\n    y_list.sort()\n    x_num = x_list[point_num // 2] - x_list[point_num // 2 - 1] + 1\n    y_num = y_list[point_num // 2] - y_list[point_num // 2 - 1] + 1\n    ans.append(x_num * y_num)\nfor an in ans:\n    print(an)", "def fun(a, b, val):\n    a = sorted(a)\n    b = sorted(b)\n    if val % 2 != 0:\n        print(1)\n    else:\n        median1 = val // 2\n        median2 = median1 - 1\n        x_median1 = a[median1]\n        x_median2 = a[median2]\n        y_median1 = b[median1]\n        y_median2 = b[median2]\n        x_med = x_median1 - x_median2 + 1\n        y_med = y_median1 - y_median2 + 1\n        print(x_med * y_med)\nT = int(input())\nfor i in range(T):\n    val = int(input())\n    X = []\n    Y = []\n    for i in range(val):\n        (x, y) = list(map(int, input().split()))\n        X.append(x)\n        Y.append(y)\n    fun(X, Y, val)", "def kol(a, n):\n    a.sort()\n    return a[n // 2] - a[(n - 1) // 2] + 1\nfor i in range(int(input())):\n    (n, x, y) = (int(input()), [], [])\n    for j in range(n):\n        (x1, y1) = map(int, input().split())\n        x += [x1]\n        y += [y1]\n    print(kol(x, n) * kol(y, n))"]