["for s in [*open(0)][2::2]:\n    print(*dict.fromkeys(s.split()))", "from collections import OrderedDict\nfor _ in range(int(input())):\n    input()\n    print(' '.join([str(i) for i in OrderedDict.fromkeys(list(map(int, input().split()))).keys()]))", "for s in [*open(0)][2::2]:\n    print(*dict.fromkeys(s.split()))", "num_test = input()\nsolutions = []\nfor i in range(0, int(num_test)):\n    n = input()\n    string_2n = input()\n    string_2n_list = string_2n.split(' ')\n    solution = []\n    char_set = set()\n    for char in string_2n_list:\n        if char not in char_set:\n            char_set.add(char)\n            solution.append(char)\n    solutions.append(' '.join(solution))\nfor solution in solutions:\n    print(solution)", "def solve():\n    t = int(input())\n    for _ in range(t):\n        n = int(input()) * 2\n        m = input().split()\n        s = set()\n        ans = []\n        for i in range(n):\n            if m[i] not in s:\n                ans.append(m[i])\n            s.add(m[i])\n        print(' '.join(ans))\nsolve()", "t = int(input(''))\nfor i in range(t):\n    input('')\n    result_holder = ''\n    numbers = list(dict.fromkeys(map(int, input('').split(' '))))\n    for num in numbers:\n        result_holder += str(num) + ' '\n    print(result_holder.strip())", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    s = set()\n    for i in range(1, n + 1):\n        s.add(i)\n    r = ''\n    for x in a:\n        if x in s:\n            r += str(x) + ' '\n            s.remove(x)\n    print(r[:-1])", "for _ in range(int(input())):\n    n = int(input())\n    a = input().split()\n    used = set()\n    res = []\n    for c in a:\n        if c not in used:\n            used.add(c)\n            res.append(c)\n    print(*res)", "count = int(input())\nfor _ in range(count):\n    d = int(input())\n    a = input().split()\n    b = []\n    for i in a:\n        if i not in b:\n            b.append(i)\n    i = ' '.join(b)\n    print(i)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input().split(' ')\n    r = []\n    for i in range(2 * n):\n        if s[i] not in r:\n            r.append(s[i])\n    r = ' '.join(r)\n    print(r)", "tc = int(input())\nfor i in range(tc):\n    x = int(input())\n    y = list(map(int, input().split()))\n    z = []\n    str1 = ''\n    for i in y:\n        if i not in z:\n            z.append(i)\n    for i in z:\n        str1 += str(i) + ' '\n    print(str1)", "def sort():\n    L = input('')\n    p = input('')\n    l = p.split(' ')\n    a = l\n    if len(a) == 1 or len(a) == 1:\n        return None\n    t = []\n    for i in a:\n        if str(i) not in t:\n            t.append(str(i))\n    print(' '.join(t))\na = int(input(' '))\nfor i in range(a):\n    sort()", "for i in range(int(input())):\n    n = input()\n    arr = input().split()\n    ans = []\n    for k in arr:\n        if k not in ans:\n            ans.append(k)\n        if len(ans) == int(n):\n            break\n    print(' '.join(ans))", "def solve(n, nums):\n    hash = [False] * (n + 1)\n    ans = []\n    for num in nums:\n        if not hash[num]:\n            ans.append(str(num))\n            hash[num] = True\n    return ' '.join(ans)\nt = int(input())\nwhile t:\n    n = int(input())\n    nums = list(map(int, input().split()))\n    print(solve(n, nums))\n    t -= 1", "import sys\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    q = []\n    seq = []\n    for x in arr:\n        if not q or q[0] != x:\n            q.append(x)\n        else:\n            q.pop(0)\n            seq.append(x)\n    print(' '.join((str(s) for s in seq)))", "for _ in range(int(input())):\n    n = int(input())\n    l = input().split()\n    lst = []\n    for i in l:\n        if i not in lst:\n            lst.append(i)\n            if len(lst) == n:\n                break\n    print(*lst)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(j) for j in input().split()]\n    lst = []\n    for j in a:\n        if j not in lst:\n            lst.append(j)\n    print(' '.join((str(j) for j in lst)))", "t = int(input())\nfor turn in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    actually = []\n    for i in range(n):\n        q = a.pop(0)\n        actually.append(q)\n        a.remove(q)\n    print(' '.join(map(str, actually)))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    s = input().split()\n    b = []\n    a = []\n    for i in s:\n        if i not in b:\n            a.append(i)\n            b.append(i)\n    print(*a, sep=' ')", "n = int(input())\nl = []\nfor _ in range(n):\n    l.append([int(input()), list(map(int, input().split(' ')))])\nfor c in l:\n    a = []\n    for i in c[1]:\n        if i not in a:\n            a.append(i)\n    print(' '.join(list(map(str, a))))", "for t in range(int(input())):\n    (n, v) = (int(input()), [])\n    f = [False] * (n + 1)\n    for x in map(int, input().split()):\n        if not f[x]:\n            v.append(x)\n            f[x] = True\n    print(' '.join(map(str, v)))", "for i in range(int(input())):\n    permutation_length = int(input())\n    merged_permutation = input().split()\n    permutation = dict.fromkeys(merged_permutation)\n    print(' '.join(permutation.keys()))", "for s in [*open(0)][2::2]:\n    print(*dict.fromkeys(s.split()))", "for i in range(int(input())):\n    lenn = int(input())\n    list1 = list(map(int, input().split()))\n    output = ''\n    helper = []\n    for i in list1:\n        if i not in helper:\n            output += str(i) + ' '\n            helper.append(i)\n    print(output)", "t = int(input())\nfor caso in range(t):\n    n = int(input())\n    nums = list(map(int, input().split(' ')))\n    print(*list(dict.fromkeys(nums)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [i for i in input().split()]\n    c = []\n    for i in a:\n        if i not in c:\n            c.append(i)\n            if len(c) == n:\n                break\n    print(' '.join(c))", "for s in [*open(0)][2::2]:\n    print(*dict.fromkeys(s.split()))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = []\n    for x in l:\n        if x not in a:\n            a.append(x)\n        if len(a) == n:\n            break\n    print(*a)", "t = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    p = input().split()[::-1]\n    listnum = tuple(set(p))\n    for num in listnum:\n        p.pop(p.index(num))\n    p = p[::-1]\n    ans.append(p)\nfor case in ans:\n    print(' '.join(case).strip())", "a = int(input())\narr = []\nfor i in range(a):\n    b = int(input())\n    c = [int(i) for i in str(input()).split()]\n    d = list(dict.fromkeys(c))\n    arr.append(d)\nfor i in arr:\n    for o in i:\n        print(o, end=' ')\n    print('')", "t = int(input().strip())\nfor i in range(t):\n\n    def restore_permutation(perm):\n        h = [0] * (len(perm) // 2)\n        res = []\n        for n in perm:\n            if not h[n - 1]:\n                res.append(n)\n                h[n - 1] = 1\n        print(*res)\n    _ = int(input().strip())\n    p = [int(x) for x in input().strip().split()]\n    restore_permutation(p)", "n = int(input())\nfor _ in range(n):\n    c = int(input())\n    df = list(input().split())\n    d = []\n    for x in range(c * 2):\n        if df[x] not in d:\n            d.append(df[x])\n    print(' '.join(d))", "n = int(input())\nfor i in range(n):\n    w = int(input())\n    l = [int(x) for x in input().split()]\n    l = list(dict.fromkeys(l))\n    print(*l, sep=' ')", "num = int(input())\nfor i in range(num):\n    lenz = input()\n    arr = input()\n    arr = arr.split(' ')\n    res = []\n    for j in range(len(arr)):\n        if arr[j] not in res:\n            res.append(arr[j])\n    print(' '.join(res))", "t = int(input())\nresult = []\nfor i in range(t):\n    n = int(input())\n    tab = input().split(' ')\n    test = []\n    for j in tab:\n        if j not in test:\n            test.append(j)\n    result.append(' '.join(test))\nfor i in result:\n    print(i)", "def double(array):\n    set_array = set(array)\n    for c in set_array:\n        array.remove(c)\n        continue\n    return array\nn = int(input())\nfor i in range(n):\n    k = int(input())\n    lst = list(map(int, input().split()))\n    print(*double(lst))", "def solve():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    w = {}\n    for i in a:\n        if i in w:\n            continue\n        w[i] = 1\n    return ' '.join([str(i) for i in list(w)])\nt = int(input())\nans = []\nwhile t:\n    ans.append(str(solve()))\n    t -= 1\nprint('\\n'.join(ans))", "for _ in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    l = list(set(s))\n    res = []\n    for i in s:\n        if i in l:\n            res.append(i)\n            l.remove(i)\n    print(' '.join(map(str, res)))", "for i in [*open(0)][2::2]:\n    print(*dict.fromkeys(map(int, i.split())))", "from collections import Counter\nfor i in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    c = Counter(b)\n    d = ''\n    for i in c:\n        d += str(i)\n        d += ' '\n    print(d)", "t = int(input())\nfor i in range(t):\n    y = int(input())\n    a = dict.fromkeys(map(int, input().split()))\n    print(*a)", "import sys\ninput = sys.stdin.readline\noutput = sys.stdout.write\n\ndef main():\n    tests = int(input().rstrip())\n    for i in range(tests):\n        i = int(input().rstrip())\n        list_ = list(map(int, input().rstrip().split()))\n        unper = []\n        s = 0\n        while i > 0:\n            num = list_[s]\n            if num not in unper:\n                unper.append(num)\n                i -= 1\n            s += 1\n        for j in unper:\n            output(str(j) + ' ')\n        output('\\n')\nmain()", "from functools import reduce\nfor _ in range(int(input())):\n    n = int(input())\n    a = []\n    b = 0\n    c = set()\n    for i in input().split():\n        if i in c:\n            pass\n        else:\n            a.append(i)\n            b += 1\n            c.add(i)\n    print(' '.join(a))", "inp = int(input())\nfor i in range(inp):\n    leng = int(input())\n    seq = input().split(' ')\n    arr = []\n    dic = {}\n    for j in seq:\n        if j not in dic:\n            dic[j] = True\n        else:\n            arr.append(j)\n    print(' '.join(arr))", "for i in [*open(0)][2::2]:\n    print(*dict.fromkeys(map(int, i.split())))", "for s in [*open(0)][2::2]:\n    print(*dict.fromkeys(s.split()))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = input()\n    x = list(map(int, x.split()))\n    arr = []\n    for i in x:\n        if i not in arr:\n            arr.append(i)\n    ans = ' '.join(map(str, arr))\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    l = dict.fromkeys(map(int, input().split()))\n    print(*l)", "t = int(input())\nfor _ in range(0, t):\n    _ = input()\n    x = input().split()\n    f = []\n    a = []\n    for i in x:\n        if i in f:\n            continue\n        else:\n            f.append(i)\n            a.append(i)\n    print(' '.join(a))", "for i in range(int(input())):\n    a = int(input())\n    b = list(map(str, input().split()))\n    result = []\n    for j in b:\n        if j not in result:\n            result.append(j)\n    print(' '.join(result))", "for i in range(int(input())):\n    a = int(input())\n    b = list(map(str, input().split()))\n    result = []\n    for j in b:\n        if j not in result:\n            result.append(j)\n    print(' '.join(result))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = []\n    for i in l:\n        if i not in s:\n            s.append(i)\n    print(*s)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = []\n    for i in l:\n        if i not in s:\n            s.append(i)\n    print(*s)", "for i in range(int(input())):\n    n = int(input())\n    li = list(map(int, input().split()))\n    dict = {}\n    for i in li:\n        if i in dict:\n            continue\n        else:\n            dict.update({i: 1})\n    for i in dict:\n        print(i, end=' ')\n    print()", "for i in range(int(input())):\n    k = int(input())\n    li = list(map(int, input().split()))\n    dict = {}\n    for i in li:\n        if i in dict:\n            continue\n        else:\n            dict.update({i: 1})\n    for i in dict:\n        print(i, end=' ')\n    print()", "for i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = []\n    freq = {}\n    for i in l:\n        if i in freq:\n            freq[i] += 1\n            a.append(i)\n        else:\n            freq[i] = 1\n    print(*a)", "t = int(input())\nwhile t != 0:\n    n = int(input())\n    k = []\n    l = list(map(int, input().split()))\n    for i in l:\n        if i not in k:\n            k.append(i)\n    print(*k)\n    t -= 1", "for i in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    a = []\n    for i in x:\n        if i not in a:\n            a.append(i)\n    print(*a)", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    li = []\n    for j in arr:\n        if j not in li:\n            li.append(j)\n    print(*li)", "for i in range(int(input())):\n    l = []\n    n = int(input())\n    k = list(map(int, input().split()))\n    for i in k:\n        if i not in l:\n            l.append(i)\n    print(*l)", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = input().split()\n    set_a = list(set(a))\n    s = ''\n    i = 0\n    while len(set_a) != 0:\n        if a[i] in set_a:\n            s = s + a[i] + ' '\n            set_a.remove(a[i])\n        i = i + 1\n    print(s)", "from collections import Counter\nfor i in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = Counter(l)\n    lul = list(c.keys())\n    print(*lul)", "def solve():\n    n = int(input())\n    arr = [int(x) for x in input().split(' ')]\n    d = []\n    for i in arr:\n        if i not in d:\n            d.append(i)\n    print(' '.join([str(x) for x in d]))\nfor i in range(int(input())):\n    solve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = map(int, input().split(' '))\n    s = []\n    for i in l:\n        if i not in s:\n            s.append(i)\n    print(' '.join((str(i) for i in s)))", "import sys\nfor i in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    first = set()\n    ans = []\n    for val in arr:\n        if val not in first:\n            ans.append(val)\n            first.add(val)\n    print(*ans)", "import math\na = int(input())\nfor i in range(a):\n    b = int(input())\n    ar = list(map(int, input().strip().split()))\n    br = []\n    for i in ar:\n        if i not in br:\n            br.append(i)\n            print(i, end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    ans = [0] * n\n    L = []\n    for num in arr:\n        if ans[num - 1]:\n            continue\n        ans[num - 1] = 1\n        L.append(str(num))\n    print(' '.join(L))", "t = int(input())\nfor j in range(t):\n    input()\n    r = []\n    a = list(input().split())\n    for i in a:\n        if i not in r:\n            r.append(i)\n    print(' '.join(r))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    res = list()\n    for i in a:\n        if i not in res:\n            res.append(i)\n    print(*res)", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    b = n * 2\n    a = [0] * b\n    a = list(map(int, input().split()))\n    k = n + 1\n    cnt = [0] * k\n    output = ''\n    for i in range(b):\n        if cnt[a[i]] == 0:\n            output += str(a[i]) + ' '\n            cnt[a[i]] = 1\n    print(output)", "for s in [*open(0)][2::2]:\n    print(*dict.fromkeys(s.split()))", "for _ in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    output = []\n    s = ''\n    for i in b:\n        if i not in output:\n            output.append(i)\n    for i in output:\n        s += str(i) + ' '\n    print(s)", "t = int(input())\nj = []\nr = []\na = []\no = []\ni = 0\nwhile i < t:\n    n = int(input())\n    x = list(map(int, input().split()))\n    k = set(x)\n    for v in k:\n        r.append(v)\n    for u in r:\n        y = x.index(u)\n        a.append(y)\n        c = sorted(a)\n    del a[0:n]\n    for z in c:\n        p = x[z]\n        o.append(p)\n    del r[0:n]\n    i = i + 1\n    print(' '.join((str(f) for f in o)))\n    del o[0:n]", "for i in range(int(input())):\n    n = int(input())\n    print(*list(dict.fromkeys(map(int, input().split()))))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    per = list(map(int, input().split()))\n    s = set()\n    ans = ''\n    for i in range(n * 2):\n        if per[i] not in s:\n            s.add(per[i])\n            ans += str(per[i]) + ' '\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input().split()\n    f = 0\n    k = ''\n    for j in s:\n        if s.index(j) == f:\n            k += j + ' '\n        f += 1\n    print(k)", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    cnt = [True] * (n + 1)\n    ans = []\n    for i in range(2 * n):\n        if cnt[a[i]]:\n            ans.append(a[i])\n            cnt[a[i]] = False\n    print(*ans)\nt = int(input())\nfor _ in range(t):\n    solve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    for i in range(2 * n):\n        if str(a[i]) not in b:\n            b.append(str(a[i]))\n        if len(b) == n:\n            break\n    print(' '.join(b))", "for _ in range(int(input())):\n    n = int(input())\n    f = [0] * (n + 1)\n    l = list(map(int, input().split()))\n    ans = []\n    for i in l:\n        if f[i] == 0:\n            f[i] = 1\n            ans.append(str(i))\n    print(' '.join(ans))", "t = int(input())\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    d = {}\n    lst = []\n    for i in arr:\n        if i not in d:\n            d[i] = 1\n    for i in d.keys():\n        lst.append(i)\n    for i in lst:\n        print(i, end=' ')\n    print()\n    t -= 1", "from collections import OrderedDict\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    p = list(map(int, input().split()))\n    p = list(OrderedDict.fromkeys(p))\n    print(*p, sep=' ')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    empty = []\n    for i in a:\n        if i not in empty:\n            empty.append(i)\n    print(*empty)", "test_cases = int(input())\nfor i in range(test_cases):\n    a_length = int(input()) * 2\n    a = [int(i) for i in input().split()]\n    p = []\n    for j in range(a_length):\n        if a[j] not in p:\n            p.append(a[j])\n    print(*p)", "t = int(input())\nfor i in range(t):\n    _ = input()\n    x = input().split()\n    ans = []\n    while len(x) > 0:\n        ans.append(x[0])\n        del x[0]\n    ans = list(dict.fromkeys(ans))\n    print(*ans)", "from math import *\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    p = []\n    for i in range(2 * n):\n        if l[i] not in p:\n            p.append(l[i])\n        else:\n            continue\n    print(*p)", "for i in range(int(input())):\n    n = int(input())\n    doubleP = list(map(int, input().split()))\n    singleP = []\n    for j in doubleP:\n        inMyList = j in singleP\n        if not inMyList:\n            singleP.append(j)\n    for j in singleP:\n        print(j, end=' ')\n    print()", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    list2 = []\n    for i in list1:\n        if i not in list2:\n            print(i, end=' ')\n            list2.append(i)\n    print()\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    ans = []\n    for i in range(2 * n):\n        if a[i] not in ans:\n            ans.append(a[i])\n    print(*ans)", "(a, d) = (int(input()), [])\nfor i in range(0, a):\n    b = int(input())\n    c = [int(i2) for i2 in input().split(' ')]\n    f = [0] * 50\n    for i2 in range(0, b * 2):\n        f[c[i2] - 1] += 1\n    for i2 in range(0, 50):\n        for i3 in range(0, f[i2] // 2):\n            del c[c.index(i2 + 1)]\n    d.append(c)\nfor i in range(0, len(d)):\n    print(*d[i])", "t = int(input())\nlst = []\nfor _ in range(t):\n    g = int(input())\n    l = input().split()\n    a = []\n    for x in l:\n        if not x in a:\n            a.append(x)\n    lst.append(a)\nfor x in lst:\n    print(*x)", "loopcount = int(input())\nfor loop in range(loopcount):\n    a = int(input())\n    x = input()\n    x = x.split(' ')\n    x = list(map(int, x))\n    output = []\n    for i in x:\n        if i not in output:\n            output.append(i)\n    print(' '.join(map(str, output)))", "for _ in range(int(input())):\n    n = int(input())\n    (l1, p) = ([], [])\n    l1 = list(map(int, input().split()))\n    for i in l1:\n        if i not in p:\n            p.append(i)\n            print(i, end=' ')\n    print()", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    op = [0] * (n + 1)\n    k = []\n    for i in range(0, len(a)):\n        if op[a[i]] == 0:\n            k.append(a[i])\n            op[a[i]] = 1\n        else:\n            continue\n    print(*k)", "for t in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr1 = []\n    for i in range(2 * n):\n        if arr[i] not in arr1:\n            arr1.append(arr[i])\n    for i in range(len(arr1)):\n        print(arr1[i], end=' ')\n    print('')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    li = []\n    for i in arr:\n        if i not in li:\n            li.append(i)\n    print(*li)", "def restorer_list(l):\n    out = []\n    for i in l:\n        if i not in out:\n            out.append(i)\n    print(*out)\nfor _ in range(int(input())):\n    n = int(input())\n    restorer_list(list(map(int, input().split())))"]