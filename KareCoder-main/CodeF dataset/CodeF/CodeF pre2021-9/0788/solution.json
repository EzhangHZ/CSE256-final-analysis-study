["import sys\ninput = lambda : sys.stdin.readline().rstrip()\nmod = 1000000007\n(n, k) = map(int, input().split())\nBC = [1] * (2 * k + 1)\nfor i in range(1, 2 * k + 1):\n    BC[i] = BC[i - 1] * (n - i + 1) * pow(i, mod - 2, mod) % mod\nS = [[0] * k for _ in range(2 * k - 1)]\nS[0][0] = 1\nfor i in range(1, 2 * k - 1):\n    for j in range(1 + i // 2):\n        S[i][j] = (i + 1) * S[i - 1][j]\n        if j:\n            S[i][j] += (i + 1) * S[i - 2][j - 1]\n        S[i][j] %= mod\nDP = [1] * (k + 1)\nDP[1] = n * (n - 1) // 2 % mod\nfor i in range(2, k + 1):\n    DP[i] = DP[i - 2]\n    for t in range(1, i + 1):\n        value = S[i + t - 2][t - 1] * BC[i + t] % mod\n        DP[i] += value\n        DP[i] %= mod\nprint(*DP[1:])", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nmod = 1000000007\n(n, k) = map(int, input().split())\nBC = [1] * (2 * k + 1)\nfor i in range(1, 2 * k + 1):\n    BC[i] = BC[i - 1] * (n - i + 1) * pow(i, mod - 2, mod) % mod\nS = [[0] * k for _ in range(2 * k - 1)]\nS[0][0] = 1\nfor i in range(1, 2 * k - 1):\n    for j in range(1 + i // 2):\n        S[i][j] = (i + 1) * S[i - 1][j]\n        if j:\n            S[i][j] += (i + 1) * S[i - 2][j - 1]\n        S[i][j] %= mod\nDP = [1] * (k + 1)\nDP[1] = n * (n - 1) // 2 % mod\nfor i in range(2, k + 1):\n    DP[i] = DP[i - 2]\n    for t in range(1, i + 1):\n        value = S[i + t - 2][t - 1] * BC[i + t] % mod\n        DP[i] += value\n        DP[i] %= mod\nprint(*DP[1:])", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nmod = 1000000007\n(n, k) = map(int, input().split())\nBC = [1] * (2 * k + 1)\nfor i in range(1, 2 * k + 1):\n    BC[i] = BC[i - 1] * (n - i + 1) * pow(i, mod - 2, mod) % mod\nS = [[0] * k for _ in range(2 * k - 1)]\nS[0][0] = 1\nfor i in range(1, 2 * k - 1):\n    for j in range(1 + i // 2):\n        S[i][j] = (i + 1) * S[i - 1][j]\n        if j:\n            S[i][j] += (i + 1) * S[i - 2][j - 1]\n        S[i][j] %= mod\nDP = [1] * (k + 1)\nDP[1] = n * (n - 1) // 2 % mod\nfor i in range(2, k + 1):\n    DP[i] = DP[i - 2]\n    for t in range(1, i + 1):\n        value = S[i + t - 2][t - 1] * BC[i + t] % mod\n        DP[i] += value\n        DP[i] %= mod\nprint(*DP[1:])", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nmod = 1000000007\n(n, k) = map(int, input().split())\nBC = [1] * (2 * k + 1)\nfor i in range(1, 2 * k + 1):\n    BC[i] = BC[i - 1] * (n - i + 1) * pow(i, mod - 2, mod) % mod\nS = [[0] * k for _ in range(2 * k - 1)]\nS[0][0] = 1\nfor i in range(1, 2 * k - 1):\n    for j in range(1 + i // 2):\n        S[i][j] = (i + 1) * S[i - 1][j]\n        if j:\n            S[i][j] += (i + 1) * S[i - 2][j - 1]\n        S[i][j] %= mod\nDP = [1] * (k + 1)\nDP[1] = n * (n - 1) // 2 % mod\nfor i in range(2, k + 1):\n    DP[i] = DP[i - 2]\n    for t in range(1, i + 1):\n        value = S[i + t - 2][t - 1] * BC[i + t] % mod\n        DP[i] += value\n        DP[i] %= mod\nprint(*DP[1:])"]