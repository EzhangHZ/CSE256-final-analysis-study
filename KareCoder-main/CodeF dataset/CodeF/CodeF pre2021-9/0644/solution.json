["def res(n):\n    nu = s = 1\n    for i in range(n):\n        nu = nu * (2 * n - i) % m\n        s = s * (i + 1) % m\n    return nu * pow(s, m - 2, m) % m\nm = 998244353\nn = int(input())\nfg = sorted(list(map(int, input().split())))\nf = abs(sum(fg[:n]) - sum(fg[n:]))\nprint(f * res(n) % m)", "def ncr(n, r, p):\n    num = 1\n    den = 1\n    for i in range(r):\n        num = num * (n - i) % p\n        den = den * (i + 1) % p\n    return num * pow(den, p - 2, p) % p\n\ndef solve(n, a):\n    a.sort()\n    M = 998244353\n    ss = sum(a[:n])\n    ls = sum(a[n:])\n    return (ls - ss) * ncr(2 * n, n, M) % M\nn = int(input())\na = list(map(int, input().split()))\nprint(solve(n, a))", "def ncr(n, r):\n    num = 1\n    den = 1\n    for i in range(r):\n        num = num * (n - i) % m\n        den = den * (i + 1) % m\n    p = num * pow(den, m - 2, m) % m\n    return p\nm = 998244353\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nan = abs(sum(a[:n]) - sum(a[n:]))\ns = an * ncr(2 * n, n) % m\nprint(s)", "(md, n) = (998244353, int(input()))\narr = sorted(list(map(int, input().split())))\nsigma = (sum(arr[n:]) - sum(arr[:n])) % md\n(up, dn) = (1, 1)\nfor i in range(1, n + 1):\n    up = up * (n + i) % md\n    dn = dn * i % md\nprint(sigma * up % md * pow(dn, md - 2, md) % md)", "n = int(input())\na = list(map(int, input().split()))\nx = sorted(a[0:n])\ny = sorted(a[n:], reverse=True)\nM = 998244353\nSum = sum(map(lambda z, c: abs(z - c), x, y)) % M\ncount = Sum\nfor i in range(n * 2, n, -1):\n    count = count * i % M\nfact = 1\nfor i in range(2, n + 1):\n    fact = fact * i % M\nprint(pow(fact, M - 2, M) * count % M)", "def res(n):\n    nu = s = 1\n    for i in range(n):\n        nu = nu * (2 * n - i) % m\n        s = s * (i + 1) % m\n    return nu * pow(s, m - 2, m) % m\nm = 998244353\nn = int(input())\nfg = sorted(list(map(int, input().split())))\nf = abs(sum(fg[:n]) - sum(fg[n:]))\nprint(f * res(n) % m)", "m = 998244353\nn = int(input())\nl = sorted(map(int, input().split()))\nN = 2 * n\nt = 1\na = (sum(l[n:]) - sum(l[:n])) % m\nfor i in range(n):\n    a = a * (N - i) % m\nfor i in range(1, n + 1):\n    t = t * i % m\nprint(pow(t, m - 2, m) * a % m)", "m = 998244353\nn = int(input())\nl = sorted(map(int, input().split()))\nN = 2 * n\nt = 1\na = (sum(l[n:]) - sum(l[:n])) % m\nfor i in range(n):\n    a = a * (N - i) % m\nfor i in range(1, n + 1):\n    t = t * i % m\nprint(pow(t, m - 2, m) * a % m)", "(N, MOD) = (300005, 998244353)\nf = [1] * N\nfor i in range(1, N):\n    f[i] = f[i - 1] * i % MOD\nn = int(input())\nar = sorted(list(map(int, input().split())))\ne = (-sum(ar[:n]) + sum(ar[-n:])) % MOD\ne = e * f[2 * n] % MOD\ne = e * pow(f[n], MOD - 2, MOD) % MOD\ne = e * pow(f[n], MOD - 2, MOD) % MOD\nprint(e)", "n = int(input())\nl = sorted(map(int, input().split()))\ntot = sum(l[n:]) - sum(l[:n])\nMOD = 998244353\nfact = [1]\nfor i in range(1, 2 * n + 1):\n    fact.append(fact[-1] * i % MOD)\ntot *= fact[2 * n]\ninv = pow(fact[n], MOD - 3, MOD)\ntot *= inv\nprint(tot % MOD)", "m = 998244353\nn = int(input())\nl = sorted(map(int, input().split()))\nN = 2 * n\nt = 1\na = (sum(l[n:]) - sum(l[:n])) % m\nfor i in range(n):\n    a = a * (N - i) % m\nfor i in range(1, n + 1):\n    t = t * i % m\nprint(pow(t, m - 2, m) * a % m)", "def ncr(n, r, p):\n    num = den = 1\n    for i in range(r):\n        num = num * (n - i) % p\n        den = den * (i + 1) % p\n    return num * pow(den, p - 2, p) % p\n\ndef solve(n, a):\n    a.sort()\n    M = 998244353\n    ss = sum(a[:n])\n    ls = sum(a[n:])\n    diff = (ls - ss) % M\n    return diff * ncr(2 * n, n, M) % M\nn = int(input())\na = list(map(int, input().split()))\nprint(solve(n, a))", "(M, n, a) = (998244353, int(input()), sorted(list(map(int, input().split()))))\n(s, t) = ((sum(a[n:]) - sum(a[:n])) % M, 1)\nfor i in range(1, n + 1):\n    s = s * (2 * n - i + 1) % M\n    t = t * i % M\nprint(pow(t, M - 2, M) * s % M)", "(M, n, a) = (998244353, int(input()), sorted(list(map(int, input().split()))))\n(s, t) = ((sum(a[n:]) - sum(a[:n])) % M, 1)\nfor i in range(1, n + 1):\n    s = s * (2 * n - i + 1) % M\n    t = t * i % M\nprint(pow(t, M - 2, M) * s % M)", "(M, n, a) = (998244353, int(input()), sorted(list(map(int, input().split()))))\n(s, t) = ((sum(a[n:]) - sum(a[:n])) % M, 1)\nfor i in range(1, n + 1):\n    s = s * (2 * n - i + 1) % M\n    t = t * i % M\nprint(pow(t, M - 2, M) * s % M)", "def ncr(n, r, p):\n    num = den = 1\n    for i in range(r):\n        num = num * (n - i) % p\n        den = den * (i + 1) % p\n    return num * pow(den, p - 2, p) % p\nn = int(input())\na = sorted(list(map(int, input().split())))\nans = 0\nfor i in range(n):\n    ans += abs(a[i] - a[2 * n - 1 - i]) % 998244353\nprint(ncr(2 * n, n, 998244353) * ans % 998244353)", "def mod_fact(n, m):\n    ans = 1\n    for i in range(1, n + 1):\n        ans = ans % m * (i % m) % m\n    return ans\n\ndef mod_div(a, b, md):\n    a %= md\n    b %= md\n    return a * pow(b, md - 2, md) % md\nMOD = 998244353\nn = int(input())\narr = list(map(int, input().split()))\narr.sort()\nsu = abs(sum(arr[:n]) - sum(arr[n:])) % MOD\ncombs = mod_div(mod_fact(2 * n, MOD), pow(mod_fact(n, MOD), 2, MOD), MOD)\nprint(su * combs % MOD)", "def pwm(a, n, md):\n    p = 1\n    while n:\n        if n & 1:\n            p = p * a % md\n        a = a * a % md\n        n >>= 1\n    return p\nn = int(input())\nar = list(map(int, input().split()))\nar.sort()\nans = 0\nnom = 1\ndnom = 1\nmod = 998244353\nfor i in range(0, n):\n    ans = (ans + ar[i + n] - ar[i]) % mod\n    nom = nom * (i + n + 1) % mod\n    dnom = dnom * (i + 1) % mod\nprint(ans * nom % mod * pwm(dnom, mod - 2, mod) % mod)", "def ncr(n, r, p):\n    num = den = 1\n    for i in range(r):\n        num = num * (n - i) % p\n        den = den * (i + 1) % p\n    return num * pow(den, p - 2, p) % p\nn = int(input())\na = sorted(list(map(int, input().split())))\nans = 0\nfor i in range(n):\n    ans += abs(a[i] - a[2 * n - 1 - i])\nfac = ncr(2 * n, n, 998244353)\nprint(fac * ans % 998244353)", "n = int(input())\ns = list(map(int, input().split()))\ns = sorted(s)\nk = 0\nfor i in range(n):\n    k -= s[i]\n    k += s[i + n]\n    k = k % 998244353\ns = k\nm = 1\nfor i in range(1, n + 1):\n    s = s * (2 * n + 1 - i) % 998244353\n    m = m * i % 998244353\nprint(pow(m, 998244353 - 2, 998244353) * s % 998244353)", "n = int(input())\nar = sorted(list(map(int, input().split())))\nans = 0\nnom = 1\ndnom = 1\nmod = 998244353\nfor i in range(n):\n    ans = (ans + ar[i + n] - ar[i]) % mod\n    nom = nom * (i + n + 1) % mod\n    dnom = dnom * (i + 1) % mod\nprint(ans * nom % mod * pow(dnom, mod - 2, mod) % mod)", "import sys\nimport math, bisect\nsys.setrecursionlimit(10 ** 5)\nfrom itertools import groupby, accumulate\nfrom heapq import heapify, heappop, heappush\nfrom collections import deque, Counter, defaultdict\nI = lambda : int(sys.stdin.readline())\nneo = lambda : map(int, sys.stdin.readline().split())\nNeo = lambda : list(map(int, sys.stdin.readline().split()))\nn = I()\nA = Neo()\nmod = 998244353\nfact = [1]\nfor i in range(1, 2 * n + 1):\n    fact += [fact[-1] * i % mod]\n(B, C) = (A[0::2], A[1::2])\nB.sort()\nC.sort(reverse=True)\nAns = 0\nfor (i, j) in zip(B, C):\n    Ans += abs(i - j)\n    Ans = Ans % mod\nAns = Ans * fact[2 * n] * pow(fact[n] * fact[n], mod - 2, mod) % mod\nprint(Ans)", "n = int(input())\nar = sorted(list(map(int, input().split())))\nans = 0\nnom = 1\ndnom = 1\nmod = 998244353\nfor i in range(n):\n    ans = (ans + ar[i + n] - ar[i]) % mod\n    nom = nom * (i + n + 1) % mod\n    dnom = dnom * (i + 1) % mod\nprint(ans * nom % mod * pow(dnom, mod - 2, mod) % mod)", "MOD = 998244353\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nfor i in range(2 * n):\n    a[i] %= MOD\nsum = 0\nt = 1\nfor i in range(n):\n    sum += a[i + n] - a[i]\n    sum %= MOD\nfor i in range(1, n + 1):\n    sum = sum * (2 * n - i + 1) % MOD\n    t = t * i % MOD\nprint(pow(t, MOD - 2, MOD) * sum % MOD)", "MOD = 998244353\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nfor i in range(2 * n):\n    a[i] %= MOD\nsum = 0\nt = 1\nfor i in range(n):\n    sum += a[i + n] - a[i]\n    sum %= MOD\nfor i in range(1, n + 1):\n    sum = sum * (2 * n - i + 1) % MOD\n    t = t * i % MOD\nprint(pow(t, MOD - 2, MOD) * sum % MOD)", "n = int(input())\nz = sorted(map(int, input().split()))\nmod = 998244353\nfact = [1] * (2 * n + 1)\nfor i in range(1, 2 * n + 1):\n    fact[i] = fact[i - 1] * i % mod\ninv = [0] * (2 * n + 1)\ninv[2 * n] = pow(fact[i], mod - 2, mod)\nfor i in range(2 * n - 1, -1, -1):\n    inv[i] = inv[i + 1] * (i + 1) % mod\n\ndef ncr(n, r):\n    return fact[n] * inv[n - r] % mod * inv[r] % mod % mod\n(a, b) = (0, 0)\nfor i in range(n):\n    a += z[i]\nfor j in range(n, 2 * n):\n    b += z[j]\nt = b - a\nprint(ncr(2 * n, n) * t % mod)", "n = int(input())\nm = 998244353\na = list(map(int, input().split()))\na.sort()\nnum = (sum(a[n:]) - sum(a[:n])) % m\nden = 1\nfor i in range(1, n + 1):\n    num = num * (2 * n - i + 1) % m\n    den = den * pow(i, m - 2, m) % m\nprint(den * num % m)", "n = int(input())\nm = 998244353\na = list(map(int, input().split()))\na.sort()\nnum = (sum(a[n:]) - sum(a[:n])) % m\nden = 1\nfor i in range(1, n + 1):\n    num = num * (2 * n - i + 1) % m\n    den = den * pow(i, m - 2, m) % m\nprint(den * num % m)", "import bisect\nimport collections\nimport copy\nimport functools\nimport heapq\nimport itertools\nimport math\nimport random\nimport re\nimport sys\nimport time\nimport string\nfrom typing import List\nsys.setrecursionlimit(99999)\nn = int(input())\narr = list(map(int, input().split()))\narr.sort()\nmod = 998244353\n\ndef inv(p):\n    return pow(p, mod - 2, mod)\nans = sum(arr[n:]) - sum(arr[:n])\nans %= mod\nfor i in range(n):\n    ans = ans * (n + i + 1) % mod\nfor i in range(n):\n    ans = ans * inv(i + 1) % mod\nprint(ans)"]