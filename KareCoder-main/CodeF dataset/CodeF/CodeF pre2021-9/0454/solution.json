["y = lambda : map(int, input().split())\nfor _ in range(int(input())):\n    (n, x) = y()\n    a = [*y()]\n    if all((i == x for i in a)):\n        print(0)\n        continue\n    if x in a or sum(a) == x * n:\n        print(1)\n        continue\n    print(2)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    A = list(map(int, input().split()))\n    c = A.count(x)\n    if c == n:\n        print(0)\n    else:\n        s = sum(A)\n        if s // n == s / n and s // n == x:\n            print(1)\n        elif x in A:\n            print(1)\n        else:\n            print(2)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    mas = sorted(list(map(int, input().split())))\n    s = set(mas)\n    if x in s and len(s) == 1:\n        print(0)\n    elif sum(mas) - x * len(mas) == 0 or x in s:\n        print(1)\n    else:\n        print(2)", "def kill(arr, k):\n    ans = 0\n    for i in arr:\n        ans += k - i\n    if arr.count(k) == len(arr):\n        return 0\n    if ans == 0:\n        return 1\n    if arr.count(k) >= 1:\n        return 1\n    return 2\nfor i in range(int(input())):\n    (a, b) = map(int, input().strip().split())\n    lst = list(map(int, input().strip().split()))\n    print(kill(lst, b))", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    sa = sum(a)\n    (ma, mi) = (max(a), min(a))\n    yes = x in a\n    if ma == mi == x:\n        print(0)\n    elif yes:\n        print(1)\n    elif sa == x * n:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    sa = sum(a)\n    (ma, mi) = (max(a), min(a))\n    yes = x in a\n    if ma == mi == x:\n        print(0)\n    elif yes:\n        print(1)\n    elif sa == x * n:\n        print(1)\n    else:\n        print(2)", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    Sum = sum(arr)\n    cnt = 0\n    for i in arr:\n        if i == x:\n            cnt += 1\n    if cnt == n:\n        print(0)\n    elif cnt >= 1 or Sum == n * x:\n        print(1)\n    else:\n        print(2)", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    d = sum([t - x for t in arr])\n    if arr.count(x) == len(arr):\n        print(0)\n    elif x in arr:\n        print(1)\n    elif d == 0:\n        print(1)\n    else:\n        print(2)", "t = int(input())\nfor q in range(t):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    z = 0\n    flag = 0\n    while a[z] == m:\n        if z == n - 1:\n            flag = 1\n            break\n        z += 1\n    if flag == 1:\n        print(0)\n    elif flag == 0 and sum(a) / n == m:\n        print(1)\n    elif m in a:\n        print(1)\n    else:\n        print(2)", "test_num = int(input())\n\ndef solve():\n    (n, x) = map(int, input().split())\n    accounts = list(map(int, input().split()))\n    has_equal = False\n    has_unequal = False\n    acc_sum = 0\n    for account in accounts:\n        if account == x:\n            has_equal = True\n        else:\n            has_unequal = True\n        acc_sum += account\n    if not has_unequal:\n        print(0)\n    elif has_equal or acc_sum == n * x:\n        print(1)\n    else:\n        print(2)\nfor i in range(test_num):\n    solve()", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    eq = all([i == k for i in a])\n    if eq:\n        print(0)\n    elif s == k * n or k in a:\n        print(1)\n    else:\n        print(2)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    a = [ele - x for ele in a]\n    if a == [0] * n:\n        print(0)\n    elif 0 in a:\n        print(1)\n    elif sum(a) == 0:\n        print(1)\n    else:\n        print(2)", "for i in range(int(input())):\n    (n, x) = [int(x) for x in input().split()]\n    s = list(map(int, input().split()))\n    if len(set(s)) == 1 and s[0] == x:\n        print(0)\n    elif sum(s) == n * x or x in s:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    f0 = not max(a) == min(a) == x\n    print(f0 * ((x not in a and sum(a) != x * n) + 1))", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    if all([ele == x for ele in l]):\n        print(0)\n        continue\n    if sum(l) == n * x or any([ele == x for ele in l]):\n        print(1)\n        continue\n    print(2)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if a.count(x) == n:\n        print(0)\n    else:\n        s = 0\n        for i in a:\n            s += x - i\n        if s == 0 or x in a:\n            print(1)\n        else:\n            print(2)", "for ii in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    s = sum([x - i for i in a if i <= x])\n    d = sum([i - x for i in a if i > x])\n    if a.count(x) == n:\n        print(0)\n    elif s == d:\n        print(1)\n    elif n == 1 or x in a:\n        print(1)\n    else:\n        print(2)", "def solve(n, x, arr):\n    s = set(arr)\n    if len(list(s)) == 1:\n        if list(s)[0] == x:\n            return 0\n        else:\n            return 2\n    else:\n        if x in s:\n            return 1\n        sm = 0\n        for i in range(n):\n            sm += x - arr[i]\n        if sm == 0:\n            return 1\n        return 2\nt = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split(' '))\n    arr = list(map(int, input().split(' ')))\n    print(solve(n, x, arr))", "t = int(input())\nfor i in range(t):\n    (num, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = set(l)\n    if s == set([x]):\n        print(0)\n    elif x in s or sum(l) == num * x:\n        print(1)\n    else:\n        print(2)", "import math\nfrom heapq import heappush, heappop, heapify\nimport random\nimport string\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right, insort\nimport sys\ninput = sys.stdin.readline\nS = lambda : input().rstrip()\nI = lambda : int(S())\nM = lambda : map(int, S().split())\nL = lambda : list(M())\nH = 1000000000 + 7\nfor _ in range(I()):\n    (n, x) = M()\n    l = L()\n    s = 0\n    if max(l) == min(l) == x:\n        print(0)\n        continue\n    for i in range(n):\n        s += x - l[i]\n    if s == 0 or x in l:\n        print(1)\n    else:\n        print(2)", "t = int(input())\nc = []\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    if len(set(l)) == 1 and x in l:\n        print(0)\n    elif sum(l) == n * x or x in l:\n        print(1)\n    else:\n        print(2)", "def Solve(data, y):\n    x = set(data)\n    if len(x) == 1 and y in x:\n        return 0\n    elif y in x:\n        return 1\n    elif sum(data) - len(data) * y == 0:\n        return 1\n    else:\n        return 2\n\ndef main():\n    t = int(input())\n    while t > 0:\n        t -= 1\n        (n, x) = map(int, input().split())\n        data = list(map(int, input().split()))\n        print(Solve(data, x))\nmain()", "t = int(input())\nq = []\nfor i in range(t):\n    l = list(input().split())\n    n = int(l[0])\n    x = int(l[1])\n    m = list(map(int, list(input().split())))\n    if m.count(x) == n:\n        q.append(0)\n    elif sum(m) == x * n or m.count(x) > 0:\n        q.append(1)\n    else:\n        q.append(2)\nfor i in q:\n    print(i)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    print((0, 2 - (x in l or sum(l) == x * n))[l != [x] * n])", "def kill(arr, k):\n    ans = 0\n    for i in arr:\n        ans += k - i\n    if arr.count(k) == len(arr):\n        return 0\n    if ans == 0:\n        return 1\n    if arr.count(k) >= 1:\n        return 1\n    return 2\nfor i in range(int(input())):\n    (a, b) = map(int, input().strip().split())\n    lst = list(map(int, input().strip().split()))\n    print(kill(lst, b))", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    left = 0\n    right = 0\n    mid = 0\n    for i in range(n):\n        if a[i] < x:\n            left += x - a[i]\n        elif a[i] > x:\n            right += a[i] - x\n        else:\n            mid += 1\n    if mid == n:\n        print(0)\n    elif mid > 0 or left == right:\n        print(1)\n    else:\n        print(2)", "t = int(input())\nns = []\nxs = []\narrs = []\nfor _ in range(t):\n    enter = input().split(' ')\n    enter = [int(x) for x in enter]\n    ns.append(enter[0])\n    xs.append(enter[1])\n    arrs.append([int(x) for x in input().split(' ')])\nfor i in range(t):\n    n = ns[i]\n    x = xs[i]\n    arr = arrs[i]\n    all_equal = True\n    difference = 0\n    is_in = False\n    for a in arr:\n        if x - a != 0:\n            all_equal = False\n        else:\n            is_in = True\n        difference += x - a\n    if all_equal == True:\n        print(0)\n    elif difference == 0 or is_in == True:\n        print(1)\n    else:\n        print(2)", "from sys import stdin\nt = int(stdin.readline())\nfor i in range(t):\n    (n, x) = map(int, stdin.readline().split())\n    arr = list(map(int, stdin.readline().split()))\n    diff_arr = [0 for i in range(n)]\n    count_zero = 0\n    for j in range(n):\n        diff_arr[j] = x - arr[j]\n        if diff_arr[j] == 0:\n            count_zero += 1\n    if count_zero == n:\n        print(0)\n    elif sum(diff_arr) == 0 or count_zero >= 1:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(0 if a == [x] * n else 1 if x in a or sum((x - y for y in a[1:])) == a[0] - x else 2)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = -1\n    tot = a.count(x)\n    acc = sum(a)\n    if tot == n:\n        ans = 0\n    elif tot == 0:\n        if acc // n == x and acc % n == 0:\n            ans = 1\n        else:\n            ans = 2\n    else:\n        ans = 1\n    print(ans)", "def solve(ratings, n, r):\n    if ratings.count(r) == n:\n        print(0)\n    elif ratings.count(r) > 0:\n        print(1)\n    elif sum(ratings) == r * n:\n        print(1)\n    else:\n        print(2)\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        (n, r) = list(map(int, input().split()))\n        solve(list(map(int, input().split())), n, r)\nmain()", "rl = lambda : list(map(int, input().split()))\nrn = lambda : int(input())\nrns = lambda : map(int, input().split())\nfor _ in range(rn()):\n    (n, k) = rns()\n    l = rl()\n    if l.count(k) == n:\n        print(0)\n    elif l.count(k) > 0 or sum([k - i for i in l]) == 0:\n        print(1)\n    else:\n        print(2)", "def main():\n    t = eval(input())\n    for cas in range(t):\n        (n, x) = map(int, input().split())\n        arr = list(map(int, input().split()))\n        flag = True\n        flagg = False\n        tol = 0\n        for i in arr:\n            if i != x:\n                flag = False\n            else:\n                flagg = True\n            tol += i\n        if flag:\n            print(0)\n        elif tol == x * n:\n            print(1)\n        elif flagg:\n            print(1)\n        else:\n            print(2)\nmain()", "def main():\n    (n, vir) = map(int, input().split(' '))\n    grade = [i for i in map(int, input().split(' '))]\n    if grade.count(vir) == n:\n        return 0\n    elif vir in grade and sum(grade) != vir * n:\n        return 1\n    elif sum(grade) == vir * n:\n        return 1\n    else:\n        return 2\nn = int(input())\nres = []\nfor i in range(n):\n    res.append(main())\nfor i in res:\n    print(i)", "I = lambda : map(int, input().split())\n(t,) = I()\nexec('n,x=I();*s,=I();print([0,2-(x in s or sum(s)==x*n)][{*s}!={x}]);' * t)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    if x in l and len(set(l)) == 1:\n        print(0)\n    elif x in l or n * x == sum(l):\n        print(1)\n    else:\n        print(2)", "t = int(input())\nfor tt in range(t):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if len(set(a)) == 1 and m in a:\n        print(0)\n    elif sum(a) == n * m or m in a:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(0 if a == [x] * n else 1 if x in a or sum((x - y for y in a[1:])) == a[0] - x else 2)", "def main():\n    (n, x) = map(int, input().split())\n    lst = list(map(int, input().split()))\n    all_x = True\n    one = False\n    sm = 0\n    for i in lst:\n        if i != x:\n            all_x = False\n        if i == x:\n            one = True\n        sm += i - x\n    if all_x:\n        print(0)\n    elif sm != 0 and (not one):\n        print(2)\n    else:\n        print(1)\nt = int(input())\nfor i in range(t):\n    main()", "def solve():\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if all((i == x for i in a)):\n        print(0)\n    else:\n        average = sum(a) / n\n        if x == average or x in a:\n            print(1)\n        else:\n            print(2)\nruns = int(input())\nwhile runs > 0:\n    solve()\n    runs -= 1", "t = int(input())\nfor i in range(t):\n    (num, aim) = map(int, input().split())\n    l = tuple(map(int, input().split()))\n    s = set(l)\n    if s == set([aim]):\n        print(0)\n    elif aim in s or sum(l) == num * aim:\n        print(1)\n    else:\n        print(2)", "def solve():\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = []\n    for y in a:\n        if y != x:\n            b.append(y)\n    if len(b) == 0:\n        return 0\n    s = 0\n    for y in b:\n        s += x - y\n    if s == 0 or x in a:\n        return 1\n    return 2\nt = int(input())\ni = 0\nwhile i < t:\n    print(solve())\n    i += 1", "def solve(n, x, acc):\n    count_x = sum([1 if a == x else 0 for a in acc])\n    if count_x == n:\n        return 0\n    if count_x > 0 or n * x == sum(acc):\n        return 1\n    return 2\nt = int(input())\nfor _ in range(t):\n    (n, x) = tuple(map(int, input().strip().split()))\n    acc = list(map(int, input().strip().split()))\n    print(solve(n, x, acc))", "from math import pow\nt = int(input())\nfor _ in range(t):\n    inp = list(map(int, input().split()))\n    (n, x) = (inp[0], inp[1])\n    a = list(map(int, input().split()))\n    s = sum(a)\n    if s % n == 0 and s // n == x or x in a:\n        for i in range(n):\n            if a[i] != x:\n                print(1)\n                break\n            if i == n - 1:\n                print(0)\n    else:\n        print(2)", "def match(kj, accounts):\n    count = 0\n    for k in accounts:\n        if kj == k:\n            count += 1\n    return count\n\ndef average(accounts):\n    return sum(accounts) / len(accounts)\n\ndef solve(n, kj, accounts):\n    match_count = match(kj, accounts)\n    avg = average(accounts)\n    if match_count == n:\n        return 0\n    elif match_count > 0:\n        return 1\n    elif avg == kj:\n        return 1\n    return 2\ncases = int(input())\nfor k in range(cases):\n    (n, x) = [int(i) for i in input().split(' ')]\n    accounts = [int(i) for i in input().split(' ')]\n    print(solve(n, x, accounts))", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if a == [x] * n:\n        print(0)\n    elif sum((i - x for i in a)) == 0 or x in a:\n        print(1)\n    else:\n        print(2)", "for _ in ' ' * int(input()):\n    (n, k) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    print(0 if all([i == k for i in a]) else 1 if sum(a) == k * n or k in a else 2)", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    s = 0\n    q = list(set(a))\n    if len(q) == 1 and q[0] == k:\n        print('0')\n    elif sum(a) / n == k or k in a:\n        print('1')\n    else:\n        print('2')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    if x == a[0] and a.count(x) == n:\n        print(0)\n        continue\n    (neg, pos) = (0, 0)\n    for i in a:\n        if i < x:\n            neg += x - i\n        else:\n            pos += i - x\n    if neg == pos or x in a:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    (n, x) = [int(i) for i in input().split()]\n    a = [int(i) for i in input().split()]\n    if x in a and max(a) == min(a):\n        print(0)\n    elif x in a or sum(a) / n == x:\n        print(1)\n    else:\n        print(2)", "def solve():\n    (n, x) = map(int, input().split())\n    nums = list(map(int, input().split()))\n    nums.sort()\n    if nums[0] == nums[-1] and nums[0] == x:\n        print(0)\n        return\n    if sum(nums) == x * n:\n        print(1)\n        return\n    if x in nums:\n        print(1)\n        return\n    if nums.count(x) >= 2:\n        print(1)\n        return\n    else:\n        print(2)\nt = int(input())\nwhile t:\n    solve()\n    t -= 1", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    _sum = 0\n    if arr.count(x) == len(arr):\n        print(0)\n        continue\n    for i in arr:\n        _sum += x - i\n    if _sum == 0 or arr.count(x) > 0:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in a:\n        if i == x:\n            count += 1\n    if count == n:\n        print('0')\n    elif count != 0:\n        print('1')\n    elif sum(a) / n == x:\n        print('1')\n    else:\n        print('2')", "t = int(input())\nfor i in range(t):\n    x = 0\n    (n, k) = map(int, input().split())\n    a = list(map(int, input().split()))\n    for j in range(n):\n        x = x + a[j]\n    if k in a or k == x / n:\n        if a.count(a[0]) == n and a[0] == k:\n            print('0')\n        else:\n            print('1')\n    else:\n        print('2')", "def killJoy(x, n, ratings):\n    initialInfection = 0\n    for rating in ratings:\n        if rating == x:\n            initialInfection += 1\n    if initialInfection == n:\n        return 0\n    if initialInfection >= 1:\n        return 1\n    summ = sum(ratings)\n    if summ == x * n:\n        return 1\n    return 2\nt = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    ratings = list(map(int, input().split()))\n    print(killJoy(x, n, ratings))", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    s = sorted(map(int, input().split()))\n    if len(set(s)) == 1 and s[0] == x:\n        print(0)\n    elif s.count(x) or sum(s) == x * n:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    if l.count(x) == len(l):\n        print(0)\n    elif l.count(x) > 0 or sum(l) == n * x:\n        print(1)\n    else:\n        print(2)", "t = int(input())\nw = []\nfor i in range(t):\n    (n, x) = input().split()\n    x = int(x)\n    n = int(n)\n    r = list(map(int, input().split()))\n    boo = True\n    for i in r:\n        if i != x:\n            boo = False\n            break\n    if boo == True:\n        w.append(0)\n    else:\n        ras = 0\n        for i in r:\n            ras = ras + x - i\n        if ras == 0:\n            w.append(1)\n        else:\n            cc = 0\n            for i in r:\n                if i == x:\n                    cc = cc + 1\n            if cc >= 1:\n                w.append(1)\n            else:\n                w.append(2)\nfor i in w:\n    print(i)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    l = list(map(int, input().split()))\n    if sum(l) == n * k:\n        f = 0\n        for i in l:\n            if i != k:\n                f = 1\n        if f == 1:\n            print(1)\n        else:\n            print(0)\n    else:\n        f = 0\n        for i in l:\n            if i == k:\n                f = 1\n        if f == 1:\n            print(1)\n        else:\n            print(2)", "def solve():\n    (n, x) = map(int, input().strip().split())\n    a = list(map(int, input().strip().split()))\n    s = 0\n    found_1 = 0\n    for i in a:\n        if i == x:\n            found_1 += 1\n        s += i\n    if found_1 == n:\n        print(0)\n    elif found_1 > 0 or s == x * n:\n        print(1)\n    else:\n        print(2)\nt = int(input().strip())\nfor _ in range(t):\n    solve()", "for _ in ' ' * int(input()):\n    (n, k) = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    print(0 if all([i == k for i in a]) else 1 if sum(a) == k * n or k in a else 2)", "def is_already_infected(ratings, x):\n    for i in ratings:\n        if i != x:\n            return False\n    return True\n\ndef solve():\n    (n, x) = [int(x) for x in input().split(' ')]\n    ratings = [int(x) for x in input().split(' ')]\n    if is_already_infected(ratings, x):\n        print(0)\n        return\n    if x in ratings:\n        print(1)\n        return\n    changes = 0\n    for i in ratings:\n        changes += i - x\n    if changes == 0:\n        print(1)\n    else:\n        print(2)\nfor i in range(int(input())):\n    solve()", "for t in range(int(input())):\n    (n, x) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = True\n    c = False\n    ans = 2\n    if sum(a) / n == x:\n        ans = 1\n    for i in a:\n        if i != x:\n            b = False\n        if i == x:\n            c = True\n    if c:\n        ans = 1\n    if b:\n        ans = 0\n    print(ans)", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    (n, x) = map(int, stdin.readline().split())\n    arr = list(map(int, stdin.readline().split()))\n    ans = []\n    for ele in arr:\n        ans.append(x - ele)\n    k = ans.count(0)\n    if k == n:\n        print(0)\n    elif k > 0:\n        print(1)\n    elif sum(ans) == 0:\n        print(1)\n    else:\n        print(2)", "import sys\nimport math\ninput = sys.stdin.readline\nt = int(input())\nfor x in range(t):\n    (n, x) = map(int, input().split(' '))\n    A = list(map(int, input().split(' ')))\n    total = sum(A)\n    unique = set(A)\n    has_infected = x in A\n    if len(unique) == 1 and A[0] == x:\n        print(0)\n    elif x * n == total or has_infected:\n        print(1)\n    else:\n        print(2)", "l = []\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = [x - a[i] for i in range(n)]\n    if sum(s) == 0:\n        if len(set(a)) == 1:\n            if a[0] == x:\n                l.append(0)\n            else:\n                l.append(2)\n        else:\n            l.append(1)\n    elif x in a:\n        l.append(1)\n    else:\n        l.append(2)\nfor i in l:\n    print(i)", "t = int(input())\nc = []\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    if len(set(l)) == 1 and x in l:\n        print(0)\n    elif sum(l) == n * x or x in l:\n        print(1)\n    else:\n        print(2)", "for i in range(int(input())):\n    (n, x) = map(int, input().split())\n    ls = [int(a) for a in input().split()]\n    ls.sort()\n    x1 = ls.count(x)\n    if x1 == n:\n        print(0)\n    elif x1 >= n / 2:\n        print(1)\n    elif x1 > 0:\n        print(1)\n    elif sum(ls) / len(ls) == x:\n        print(1)\n    else:\n        print(2)", "import sys\nimport math\nfrom math import inf, gcd\nfrom functools import *\nfrom itertools import *\nfrom collections import *\nfrom typing import *\nsys.setrecursionlimit(10 ** 7)\nt = int(input())\nfor i in range(t):\n    (n, x) = (int(s) for s in input().split())\n    a = [int(s) for s in input().split()]\n    if all((j == x for j in a)):\n        print(0)\n    elif sum((j - x for j in a)) == 0 or any((j == x for j in a)):\n        print(1)\n    else:\n        print(2)", "t = int(input())\nfor i in range(0, t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = [0] * n\n    sum = 0\n    m = 0\n    for i in range(0, n):\n        if a[i] == x:\n            m = 1\n    for i in range(0, n):\n        a[i] = x - a[i]\n    if a == b:\n        print(0)\n    else:\n        for i in range(0, n):\n            sum = sum + a[i]\n        if sum == 0 or m == 1:\n            print(1)\n        else:\n            print(2)", "import sys\nfrom sys import stdin, stdout\nfrom math import ceil, floor, sqrt, log, log2, log10\nfrom collections import Counter\nint_max = float('inf')\nint_min = -float('inf')\nANS = []\ninput = stdin.readline\n\ndef solve(n, x, arr):\n    if set(arr) == set([x]):\n        return 0\n    g = 0\n    summ = 0\n    for i in range(n):\n        summ += arr[i] - x\n        if arr[i] == x:\n            g = 1\n            break\n    if summ == 0 or g == 1:\n        return 1\n    else:\n        return 2\nt = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    ANS.append(str(solve(n, x, arr)))\nprint('\\n'.join(ANS))", "from sys import stdin, stdout\nfrom math import *\ntesting = True\n\ndef tp(s='\\n'):\n    if testing:\n        stdout.write(s)\n\ndef main():\n    t = int(stdin.readline())\n    for _ in range(t):\n        (n, k) = [int(i) for i in stdin.readline().split()]\n        accounts = [int(i) for i in stdin.readline().split()]\n        total = 0\n        all_k = True\n        any_k = False\n        for i in range(n):\n            if accounts[i] != k:\n                all_k = False\n            else:\n                any_k = True\n            total += accounts[i]\n        if all_k:\n            print(0)\n        elif total == k * n or any_k:\n            print(1)\n        else:\n            print(2)\nmain()", "def testcase():\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    if arr.count(x) == n:\n        print(0)\n    else:\n        mark = [False for _ in arr]\n        for i in range(n):\n            if arr[i] == x:\n                mark[i] = True\n        marks = mark.count(True)\n        total = sum(arr)\n        if x == 0:\n            if marks > 0 or total == 0:\n                print(1)\n            else:\n                print(2)\n        elif marks > 0 or total / x == n:\n            print(1)\n        else:\n            print(2)\n    return\nt = int(input())\nfor _ in range(t):\n    testcase()", "def read_line(type=int):\n    return list(map(type, input().split()))\nt = int(input())\nfor _ in range(t):\n    (n, x) = read_line()\n    d = read_line()\n    s = set(d)\n    ans = 0\n    diff = list(map(lambda i: i - x, d))\n    if len(s) == 1 and x in s:\n        ans = 0\n    elif sum(diff) == 0:\n        ans = 1\n    elif x in d:\n        ans = 1\n    else:\n        ans = 2\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in a:\n        if i == x:\n            count += 1\n    if count == n:\n        print(0)\n        continue\n    if count > 0:\n        print(1)\n        continue\n    total = 0\n    for i in a:\n        total += x - i\n    if total == 0:\n        print(1)\n    else:\n        print(2)", "def solve():\n    (n, x) = map(int, input().split())\n    p = list(map(int, input().split()))\n    ok = True if x in p else False\n    if p == [x] * n:\n        print(0)\n    elif ok:\n        print(1)\n    else:\n        k = 0\n        for i in p[:n - 1]:\n            k += i - x\n        p[-1] += k\n        if p[-1] == x:\n            print(1)\n        else:\n            print(2)\n    return\n\ndef main():\n    t = 1\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    if a.count(x) == n:\n        print(0)\n    elif sum(a) == n * x or x in a:\n        print(1)\n    else:\n        print(2)", "def inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nt = inp()\nfor _ in range(t):\n    x = inlt()[1]\n    accts = inlt()\n    s = set(accts)\n    if x in s:\n        if len(s) == 1:\n            print(0)\n        else:\n            print(1)\n    elif sum([x - num for num in accts]) == 0:\n        print(1)\n    else:\n        print(2)", "import collections\n\ndef solution(n, x, a):\n    if a == [x] * n:\n        return 0\n    elif sum(a) == x * n:\n        return 1\n    elif x in a:\n        return 1\n    else:\n        return 2\nt = int(input())\nfor _ in range(t):\n    (n, x) = list(map(int, input().split(' ')))\n    a = list(map(int, input().split(' ')))\n    print(solution(n, x, a))", "def ans(a, n, k):\n    same = 0\n    for i in a:\n        if i == k:\n            same += 1\n    if same == n:\n        return 0\n    if sum(a) % n == 0 and sum(a) // n == k:\n        return 1\n    if same > 0:\n        return 1\n    return 2\nm = int(input())\nfor i in range(m):\n    brr = input().split()\n    n = int(brr[0])\n    k = int(brr[1])\n    arr = input().split()\n    a = []\n    for i in arr:\n        a.append(int(i))\n    print(ans(a, n, k))", "import math\nfor z in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = [int(i) for i in input().split()]\n    if len(set(a)) == 1 and a[0] == x:\n        print(0)\n    elif x in a:\n        print(1)\n    elif sum(a) == x * n:\n        print(1)\n    else:\n        print(2)", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    arr = list(map(int, input().split()))\n    res = 0\n    cnt = 0\n    for i in arr:\n        res += i - x\n    if arr.count(x) == n:\n        print(0)\n    elif res == 0 or arr.count(x) > 0:\n        print(1)\n    else:\n        print(2)", "for w in range(int(input())):\n    (n, x) = tuple(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = []\n    count = 0\n    for i in range(n):\n        b.append(a[i] - x)\n        if a[i] == x:\n            count += 1\n    if count == n:\n        print(0)\n    elif count >= 1 or sum(b) == 0:\n        print(1)\n    else:\n        print(2)", "t = int(input())\nfor test in range(t):\n    (n, x) = [int(i) for i in input().split()]\n    arr = [int(i) for i in input().split()]\n    base_inf = 0\n    diff = 0\n    for a in arr:\n        if a == x:\n            base_inf += 1\n        else:\n            diff += a - x\n    if base_inf == n:\n        print(0)\n    elif diff == 0 or base_inf >= 1:\n        print(1)\n    else:\n        print(2)", "for j in range(int(input())):\n    (n, x) = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    cnt = 0\n    s = 0\n    for i in l:\n        if i == x:\n            cnt += 1\n        s += i - x\n    if cnt == n:\n        print(0)\n    elif cnt > 0:\n        print(1)\n    elif s == 0:\n        print(1)\n    else:\n        print(2)", "t = int(input())\nfor i in range(0, t):\n    (a, b) = map(int, input().split())\n    arr = list(map(int, input().strip().split()))[:a]\n    ct = 0\n    summ = 0\n    for j in arr:\n        if j == b:\n            ct += 1\n        summ = summ + (j - b)\n    if ct == a:\n        ans = 0\n    elif summ == 0 or ct > 0:\n        ans = 1\n    else:\n        ans = 2\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    v = list(map(int, input().split()))\n    sum = 0\n    zero = 1\n    one = 0\n    for i in v:\n        if i != k:\n            zero = 0\n        else:\n            one = 1\n        sum += i - k\n    if zero:\n        print(0)\n    elif one or not sum:\n        print(1)\n    else:\n        print(2)", "t = int(input())\nfor a in range(t):\n    (n, x) = map(int, input().split())\n    a = list(map(int, input().split()))\n    hasX = False\n    sumAtFirst = 0\n    countX = 0\n    for integer in a:\n        sumAtFirst += x - integer\n        if integer == x:\n            hasX = True\n            countX += 1\n    if countX == n:\n        print(0)\n    elif sumAtFirst == 0:\n        print(1)\n    elif hasX:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    rate_change = 0\n    (n, x) = map(int, input().split())\n    acc = list(map(int, input().split()))\n    acc1 = []\n    for i in acc:\n        if i != x:\n            acc1.append(i)\n    if not acc1:\n        print(0)\n        continue\n    if len(acc1) < n:\n        print(1)\n        continue\n    for i in acc1:\n        rate_change += i - x\n    if rate_change == 0:\n        print(1)\n    else:\n        print(2)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split(' '))\n    l = list(map(int, input().split(' ')))\n    (flag1, flag2) = (False, False)\n\n    def count(n, x, l):\n        l.sort()\n        if l.count(x) == n:\n            return 0\n        elif l.count(x) > 0:\n            return 1\n        elif sum(l) % n == 0 and sum(l) // n == x:\n            return 1\n        else:\n            return 2\n    print(count(n, x, l))", "for t in range(int(input())):\n    o = list(map(int, input().split()))\n    n = o[0]\n    x = o[1]\n    (flag, sum) = (int(0), int(0))\n    a = list(map(int, input().split()))\n    for i in range(n):\n        if a[i] == x:\n            flag += 1\n        sum += a[i]\n    if flag == n:\n        print(0)\n    elif flag > 0 or (sum % n == 0 and sum // n == x):\n        print(1)\n    else:\n        print(2)", "t = int(input())\nfor i in range(t):\n    (num, aim) = map(int, input().split())\n    l = tuple(map(int, input().split()))\n    s = set(l)\n    if s == set([aim]):\n        print(0)\n    elif aim in s or sum(l) == num * aim:\n        print(1)\n    else:\n        print(2)", "from sys import stdin, stdout\nfor _ in range(int(stdin.readline())):\n    (n, inf) = list(map(int, stdin.readline().split()))\n    a = list(map(int, stdin.readline().split()))\n    diff = [inf - v for v in a]\n    flag = sm = 0\n    for v in diff:\n        if v != 0:\n            flag = 1\n        sm += v\n    if flag == 0:\n        print(0)\n    elif inf in a or (flag == 1 and sm == 0):\n        print(1)\n    else:\n        print(2)", "t = int(input())\nfor _ in range(t):\n    (num, x) = map(int, input().split())\n    l = list(map(int, input().split()))\n    p = 0\n    n = 0\n    s = 0\n    for i in l:\n        if i > x:\n            p += i - x\n        elif i == x:\n            s += 1\n        else:\n            n += x - i\n    if s == num:\n        print('0')\n    elif s > 0 or p == n:\n        print('1')\n    else:\n        print('2')", "t = int(input())\nn = []\nx = []\na = []\nfor i in range(t):\n    (ni, xi) = map(int, input().split())\n    k = list(map(int, input().split()))\n    n.append(ni)\n    x.append(xi)\n    a.append(k)\n\ndef fun(n, x, a):\n    su = 0\n    flag = 1\n    nom = 0\n    for i in range(n):\n        su += a[i] - x\n        if a[i] != x:\n            flag = 0\n        if a[i] == x:\n            nom = 1\n    if flag:\n        return 0\n    else:\n        if nom == 1:\n            return 1\n        if su == 0:\n            return 1\n        else:\n            return 2\nfor i in range(t):\n    r = fun(n[i], x[i], a[i])\n    print(r)", "def process():\n    (n, x) = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    nz = 1\n    atl_0 = 0\n    for i in range(n):\n        a[i] = a[i] - x\n        if a[i] != 0:\n            nz = 0\n        if a[i] == 0:\n            atl_0 = 1\n    if nz == 1:\n        print(0)\n        return\n    if sum(a) == 0 or atl_0 == 1:\n        print(1)\n    else:\n        print(2)\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        process()\nmain()", "for _ in range(int(input())):\n    (n, x) = input().split()\n    n = int(n)\n    x = int(x)\n    l = list(map(int, input().split()))\n    countx = 0\n    netsum = 0\n    for i in l:\n        if i == x:\n            countx += 1\n        netsum += x - i\n    if countx == n:\n        print(0)\n    elif netsum == 0 or countx != 0:\n        print(1)\n    else:\n        print(2)"]