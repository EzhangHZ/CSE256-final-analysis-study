["ll = lambda : map(int, input().split())\nt = lambda : int(input())\nss = lambda : input()\nlx = lambda x: map(int, input().split(x))\n\ndef f():\n    n = t()\n    s = ss()\n    a = 0\n    b = 0\n    c = 0\n    if n % 2 == 1:\n        print(-1)\n        return\n    for i in s:\n        if i == '(':\n            a += 1\n        elif i == ')':\n            a -= 1\n            if a < 0:\n                c += 2\n    print(c if a == 0 else -1)\nf()", "def resort(seq):\n    if seq.count('(') != seq.count(')'):\n        print('-1')\n        return\n    count = 0\n    state = 0\n    prev = 0\n    for i in seq:\n        if i == '(':\n            state += 1\n        else:\n            state -= 1\n        if state < 0:\n            count += 1\n        elif state == 0 and prev < 0:\n            count += 1\n        prev = state\n    if state != 0:\n        print(-1)\n    else:\n        print(count)\nseq_length = input()\nresort(input())", "def order_brackets(s):\n    opening = 0\n    closing = 0\n    nano = 0\n    for i in s:\n        if i == ')':\n            if opening > 0:\n                opening -= 1\n            else:\n                closing += 1\n        elif closing > 0:\n            closing -= 1\n            nano += 1\n        else:\n            opening += 1\n    if opening != closing:\n        print(-1)\n    else:\n        print(nano * 2)\nn = input()\ns = input()\norder_brackets(s)", "def solver(arr):\n    t = 0\n    cnt = 0\n    for i in arr:\n        if i == '(':\n            if cnt < 0:\n                t += 2\n            cnt += 1\n        else:\n            cnt -= 1\n    if cnt == 0:\n        return t\n    else:\n        return -1\ni = int(input())\narr = input()\nprint(solver(arr))", "def brackets():\n    num = int(input())\n    if num % 2 == 1:\n        print(-1)\n    else:\n        risultato = 0\n        brackets = input()\n        c = 0\n        for i in brackets:\n            if i == ')':\n                c -= 1\n                if c < 0:\n                    risultato += 2\n            elif i == '(':\n                c += 1\n        if c != 0:\n            print(-1)\n        else:\n            print(risultato)\nbrackets()", "def brackets():\n    num = int(input())\n    risultato = 0\n    brackets = input()\n    c = 0\n    for i in brackets:\n        if i == ')':\n            c -= 1\n            if c < 0:\n                risultato += 2\n        elif i == '(':\n            c += 1\n    if c != 0:\n        print(-1)\n    else:\n        print(risultato)\nbrackets()", "n = int(input())\ns = input()\nbal = 0\nans = 0\nfor i in s:\n    if i == '(':\n        bal += 1\n    else:\n        bal -= 1\n        if bal < 0:\n            ans += 2\nif bal != 0:\n    print(-1)\nelse:\n    print(ans)", "def brackets():\n    num = int(input())\n    risultato = 0\n    brackets = input()\n    c = 0\n    for i in brackets:\n        if i == ')':\n            c -= 1\n            if c < 0:\n                risultato += 2\n        elif i == '(':\n            c += 1\n    if c != 0:\n        print(-1)\n    else:\n        print(risultato)\nbrackets()", "from sys import stdin, stdout\nLI = lambda : list(map(int, input().split()))\nMAP = lambda : map(int, input().split())\nIN = lambda : int(input())\nS = lambda : input()\nimport math\nfrom collections import Counter\n\ndef solve():\n    n = IN()\n    s = S()\n    a = 0\n    b = 0\n    for i in s:\n        if i == '(':\n            b += 1\n        else:\n            b -= 1\n            if b < 0:\n                a += 2\n    if b != 0:\n        print(-1)\n    else:\n        print(a)\nfor i in range(1):\n    solve()", "n = int(input())\nstring = input()\n\ndef checkio(n, string):\n    if n % 2 != 0:\n        return -1\n    opens_counter = string.count('(')\n    closes_counter = string.count(')')\n    if opens_counter != closes_counter:\n        return -1\n    uncorrect_counter = 0\n    counter = 0\n    for i in range(len(string)):\n        if string[i] == '(':\n            counter += 1\n        elif counter > 0:\n            counter -= 1\n        else:\n            counter -= 1\n            uncorrect_counter += 1\n    return uncorrect_counter * 2\nprint(checkio(n, string))", "(n, s, p, a) = (int(input()), input(), 0, 0)\nfor i in s:\n    if i == '(':\n        p += 1\n    else:\n        p -= 1\n        a += 2 if p < 0 else 0\nprint('-1' if p else a)", "def solve(S):\n    res = s = 0\n    last_non_neg = -2\n    for (i, c) in enumerate(S):\n        s += 1 if c == '(' else -1\n        if s < 0:\n            if last_non_neg == -2:\n                last_non_neg = i - 1\n        elif s == 0:\n            if last_non_neg != -2:\n                res += i - last_non_neg\n            last_non_neg = -2\n    return res if s == 0 else -1\ninput()\ns = input().strip()\nprint(solve(s))", "n = int(input())\ns = input()\nif s.count('(') != s.count(')'):\n    print(-1)\nelse:\n    bal = 0\n    answer = 0\n    for i in s:\n        if i == '(':\n            bal += 1\n        else:\n            bal -= 1\n            if bal < 0:\n                answer += 2\n    print(answer)", "n = int(input())\ns = input()\na = 0\nb = 0\nfor i in s:\n    if i == '(':\n        if a < 0:\n            b += 2\n        a += 1\n    else:\n        a -= 1\nif a == 0:\n    print(b)\nelse:\n    print(-1)", "t = int(input())\ns = input()\nc = 0\nr = 0\nfor i in s:\n    if i == '(':\n        c += 1\n    else:\n        c += -1\n        if c < 0:\n            r += 2\nif c != 0:\n    print(-1)\nelse:\n    print(r)", "n = int(input())\ns = input()\n(a, b) = (0, 0)\nfor chr in s:\n    if chr == '(':\n        a += 1\n    else:\n        a -= 1\n        if a < 0:\n            b += 2\nif a != 0:\n    b = -1\nprint(b)", "(n, s, p, a) = (int(input()), input(), 0, 0)\nfor i in s:\n    if i == '(':\n        p += 1\n    else:\n        p -= 1\n        a += 2 if p < 0 else 0\nprint('-1' if p else a)", "def main_function():\n    n = int(input())\n    s = list(input())\n    counter_1 = 0\n    counter_2 = 0\n    for i in s:\n        if i == ')':\n            counter_2 += 1\n        else:\n            counter_1 += 1\n    if counter_1 != counter_2:\n        print(-1)\n    else:\n        is_started = False\n        one_counter = 0\n        another_counter = 0\n        final_counter = 0\n        if n % 2 == 1:\n            print(-1)\n        else:\n            for i in range(n):\n                if s[i] == '(':\n                    one_counter += 1\n                else:\n                    one_counter -= 1\n                if not is_started:\n                    if one_counter < 0:\n                        another_counter = 1\n                        is_started = True\n                else:\n                    another_counter += 1\n                    if one_counter < 0:\n                        pass\n                    else:\n                        final_counter += another_counter\n                        another_counter = 0\n                        is_started = False\n            print(final_counter)\nmain_function()", "n = int(input())\ns = input()\ncnt = 0\nans = 0\nfor i in s:\n    if i == '(':\n        if cnt < 0:\n            ans += 2\n        cnt += 1\n    else:\n        cnt -= 1\nif cnt == 0:\n    print(ans)\nelse:\n    print(-1)", "(n, s, p, a) = (int(input()), input(), 0, 0)\nfor i in s:\n    if i == '(':\n        p += 1\n    else:\n        p -= 1\n        a += 2 if p < 0 else 0\nprint('-1' if p else a)", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    N = int(input())\n    S = input().strip()\n    x = S.count('(')\n    y = S.count(')')\n    if x != y:\n        print(-1)\n        return\n    score = 0\n    ans = 0\n    cnt = 0\n    for s in S:\n        cnt += 1\n        if s == ')':\n            if score - 1 == 0:\n                cnt = 0\n            score -= 1\n        else:\n            if score + 1 == 0:\n                ans += cnt\n                cnt = 0\n            score += 1\n    print(ans)\nmain()", "n = int(input())\ns = input()\n(o, c) = (0, 0)\nss = 0\nfor i in s:\n    if i == ')':\n        c += 1\n    else:\n        o += 1\n        if c >= o:\n            ss += 2\nif o == c:\n    print(ss)\nelse:\n    print(-1)", "t = int(input())\ns = input()\nc = 0\nr = 0\nfor i in s:\n    if i == '(':\n        c += 1\n    else:\n        c += -1\n        if c < 0:\n            r += 2\nif c != 0:\n    print(-1)\nelse:\n    print(r)", "def checker(n, s):\n    if n % 2 == 1 or s.count(')') != s.count('('):\n        return -1\n    (count1, count2, flag) = (0, 0, 0)\n    for i in range(n):\n        if s[i] == '(':\n            count1 += 1\n        else:\n            count1 -= 1\n        if count1 == 0:\n            flag = 0\n        if count1 < 0:\n            count2 += 1\n            if flag == 0:\n                count2 += 1\n                flag = 1\n    return count2\nm = int(input())\nt = input()\nprint(checker(m, t))", "t = int(input())\ns = input()\nc = 0\nr = 0\nfor i in s:\n    if i == '(':\n        c += 1\n    else:\n        c += -1\n        if c < 0:\n            r += 2\nif c != 0:\n    print(-1)\nelse:\n    print(r)", "n = int(input())\ns = list(input())\ncount = 0\nans = 0\nfor i in s:\n    if i == '(':\n        if count < 0:\n            ans += 2\n        count += 1\n    else:\n        count -= 1\nif count == 0:\n    print(ans)\nelse:\n    print(-1)", "n = int(input())\ns = input()\nbal = 0\nans = 0\nfor i in s:\n    if i == '(':\n        bal += 1\n    else:\n        bal -= 1\n        if bal < 0:\n            ans += 2\nif bal != 0:\n    print(-1)\nelse:\n    print(ans)", "from collections import deque, defaultdict, Counter\nfrom bisect import bisect_left, bisect\nimport math\n\ndef test_case():\n    n = int(input())\n    s = input()\n    if s.count('(') != s.count(')'):\n        return -1\n    count = 0\n    flag = False\n    last = -1\n    ans = 0\n    for i in range(n):\n        if s[i] == '(':\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            if flag:\n                ans += i - last\n            last = i\n            flag = False\n        if count < 0:\n            flag = True\n    return ans\nret = test_case()\nif ret != None:\n    print(ret)", "n = int(input())\ns = input()\nbal = 0\nans = 0\nfor i in s:\n    if i == '(':\n        bal += 1\n    else:\n        bal -= 1\n        if bal < 0:\n            ans += 2\nif bal != 0:\n    ans = -1\nprint(ans)", "n = int(input())\ns = input()\nc = 0\nq = 0\nfor i in range(len(s)):\n    if s[i] == '(':\n        c += 1\n    else:\n        c += -1\n        if c < 0:\n            q = q + 2\nif c != 0:\n    print(-1)\nelse:\n    print(q)", "def checker(n, s):\n    l = 0\n    r = 0\n    i = 0\n    ans = 0\n    while i < n:\n        while s[i] == '(':\n            if l != 0:\n                l -= 1\n                i += 1\n            else:\n                r += 1\n                i += 1\n            if i == n:\n                break\n        if i == n:\n            break\n        while s[i] == ')':\n            l += 1\n            if l > r:\n                ans += 1\n            else:\n                r -= 1\n                l -= 1\n            i += 1\n            if i == n:\n                break\n    if l != 0 or r != 0:\n        return -1\n    else:\n        return 2 * ans\nn = int(input())\ns = str(input())\nprint(checker(n, s))", "x = input()\nstring = input()\nopened = 0\nclosed = 0\noperations = 0\nfor c in string:\n    if c == '(':\n        opened += 1\n    else:\n        closed += 1\n        if closed > opened:\n            operations += 1\nif opened != closed:\n    print(-1)\nelse:\n    print(operations * 2)", "n = int(input())\na = input()\ncount = 0\ntime = 0\nfor element in a:\n    if element == '(':\n        count += 1\n    elif element == ')':\n        count -= 1\n        if count < 0:\n            time += 2\nif count != 0:\n    print(-1)\nelse:\n    print(time)", "x = input()\nstring = input()\nopen_bracket = 0\nclose_bracket = 0\noperations = 0\nfor c in string:\n    if c == '(':\n        open_bracket += 1\n    else:\n        close_bracket += 1\n        if close_bracket > open_bracket:\n            operations += 1\nif open_bracket != close_bracket:\n    print(-1)\nelse:\n    print(operations * 2)", "import sys\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\n\ndef main():\n    n = II()\n    s = SI()\n    aa = []\n    a = 0\n    for c in s:\n        if c == '(':\n            a += 1\n        else:\n            a -= 1\n        aa.append(a)\n    if aa[-1] != 0:\n        print(-1)\n        exit()\n    pa = 1\n    ans = 0\n    for a in aa:\n        if a < 0:\n            ans += 1\n        elif pa < 0:\n            ans += 1\n        pa = a\n    print(ans)\nmain()", "size = int(input())\ns = input()\ns1 = list(s)\na = 0\nb = 0\ncount = 0\nfor i in s1:\n    if i == '(':\n        a = a + 1\n    else:\n        b = b + 1\n        if b > a:\n            count = count + 1\nif a != b:\n    print('-1')\nelse:\n    print(count * 2)", "n = int(input())\ns = input()\nc = 0\nr = 0\nfor i in s:\n    if i == '(':\n        c += 1\n    else:\n        c += -1\n        if c < 0:\n            r += 2\nif c != 0:\n    print(-1)\nelse:\n    print(r)", "size = int(input())\ns = input()\ns1 = list(s)\na = 0\nb = 0\ncount = 0\nfor i in s1:\n    if i == '(':\n        a = a + 1\n    else:\n        b = b + 1\n        if b > a:\n            count = count + 1\nif a != b:\n    print('-1')\nelse:\n    print(count * 2)", "n = int(input())\ns = input()\nbal = 0\nans = 0\nfor i in s:\n    if i == '(':\n        bal += 1\n    else:\n        bal -= 1\n        if bal < 0:\n            ans += 2\nif bal != 0:\n    print(-1)\nelse:\n    print(ans)", "n = int(input())\ns = input()\nc0 = s.count('(')\nc1 = s.count(')')\nif c0 != c1:\n    print(-1)\nelse:\n    c = 0\n    l = 0\n    r = 0\n    for j in range(n):\n        if s[j] == '(':\n            l += 1\n        else:\n            r += 1\n        if l == r:\n            if s[j] == '(':\n                c += l * 2\n                l = 0\n                r = 0\n            else:\n                l = 0\n                r = 0\n    print(c)", "n = int(input())\ns = str(input())\n(x, y, ans, z) = (int(0), int(0), int(0), int(0))\nfor i in s:\n    if i == '(':\n        x += 1\n        z += 1\n    else:\n        y += 1\n        if z > 0:\n            z -= 1\n    if x == y:\n        if z != 0:\n            ans += x + y\n        (x, y, z) = (0, 0, 0)\nif x != y:\n    print(-1)\nelse:\n    print(ans)", "def Solve(n):\n    s = input()\n    c = 0\n    for ch in s:\n        if ch == '(':\n            c += 1\n        else:\n            c -= 1\n    if c:\n        print(-1)\n        return\n    ans = 0\n    pos = 0\n    i = 0\n    flag = True\n    for ch in s:\n        if ch == '(':\n            c += 1\n        else:\n            c -= 1\n        if c < 0:\n            flag = False\n        if not c:\n            if flag:\n                pos = i + 1\n            else:\n                flag = True\n                ans += i - pos + 1\n                pos = i + 1\n        i += 1\n    print(ans)\nSolve(int(input()))", "from sys import stdin as sin\n\ndef aint():\n    return int(input())\n\ndef amap():\n    return map(int, sin.readline().split())\n\ndef alist():\n    return list(map(int, sin.readline().split()))\n\ndef astr():\n    return input()\nn = aint()\ns = input()\nst = []\nleft = 0\nright = 0\nstart = -1\nans = 0\nfor i in range(n):\n    if s[i] == '(':\n        left += 1\n    else:\n        right += 1\n        if left < right:\n            if start == -1:\n                start = i\n    if start != -1 and left == right:\n        ans += i - start + 1\n        start = -1\nif left == right:\n    print(ans)\nelse:\n    print(-1)", "size = int(input())\ns = input()\ns1 = list(s)\na = 0\nb = 0\ncount = 0\nfor i in s1:\n    if i == '(':\n        a = a + 1\n    else:\n        b = b + 1\n        if b > a:\n            count = count + 1\nif a != b:\n    print('-1')\nelse:\n    print(count * 2)", "size = int(input())\ns = input()\ns1 = list(s)\na = 0\nb = 0\ncount = 0\nfor i in s1:\n    if i == '(':\n        a = a + 1\n    else:\n        b = b + 1\n        if b > a:\n            count = count + 1\nif a != b:\n    print('-1')\nelse:\n    print(count * 2)", "import sys\n\ndef main(n, s):\n    if s.count('(') != s.count(')'):\n        return -1\n    res = 0\n    stk = []\n    (l_cnt, r_cnt) = (0, 0)\n    for (i, c) in enumerate(s):\n        if c == '(':\n            l_cnt += 1\n            stk.append('(')\n        else:\n            r_cnt += 1\n            if stk and stk[-1] == '(':\n                stk.pop()\n            else:\n                stk.append(')')\n        if l_cnt == r_cnt:\n            if stk:\n                res += l_cnt + r_cnt\n                stk = []\n            (l_cnt, r_cnt) = (0, 0)\n    return res\nn = int(input())\ns = input()\nres = main(n, s)\nprint(res)", "n = int(input())\ns = str(input())\nif n % 2 == 1 or s.count('(') != n // 2:\n    print(-1)\n    exit()\nans = 0\nl = 0\nbad = False\ncount = 0\nfor i in range(n):\n    if s[i] == '(':\n        count += 1\n        if bad and count == 0:\n            ans += i - l + 1\n            bad = False\n    else:\n        if count == 0:\n            l = i\n            bad = True\n        count -= 1\nprint(ans)", "from sys import stdin, stdout\n\ndef main():\n    n = int(input())\n    s = input()\n    (nc, no) = (0, 0)\n    c = 0\n    ans = 0\n    for i in range(n):\n        if s[i] == ')':\n            nc += 1\n        if s[i] == '(':\n            no += 1\n        if nc > no and c == 0:\n            c = 1\n            index = i\n        if nc == no and c == 1:\n            ans += i - index + 1\n            c = 0\n    if no != nc:\n        print(-1)\n    else:\n        print(ans)\nmain()", "n = int(input())\ns = input()\ncnt = ans = 0\nfor i in s:\n    if i == '(':\n        cnt -= 1\n        if cnt >= 0:\n            ans += 1\n    elif i == ')':\n        cnt += 1\n        if cnt > 0:\n            ans += 1\nif cnt == 0:\n    print(ans)\nelse:\n    print(-1)", "def fn():\n    diff = 0\n    ans = 0\n    f = 'p'\n    n = int(input())\n    s = input()\n    if len(s) % 2 == 1:\n        return -1\n    for i in range(n):\n        if s[i] == '(':\n            diff += 1\n        elif s[i] == ')':\n            diff -= 1\n        if diff >= 0:\n            f = 'p'\n            continue\n        elif diff < 0:\n            ans += 1\n            if f == 'p':\n                f = 'n'\n                ans += 1\n    if diff == 0:\n        return ans\n    else:\n        return -1\nprint(fn())", "n = int(input())\ns = input()\nif n % 2 != 0 or s.count(')') != s.count('('):\n    print(-1)\nelse:\n    x = 0\n    need = 0\n    for i in range(n):\n        if s[i] == '(':\n            x += 1\n        else:\n            if x <= 0:\n                need += 2\n            x -= 1\n    print(need)", "n = int(input())\ns = input()\nans = 0\nlow = 0\ntotal = 0\nfor high in range(n):\n    if s[high] == '(':\n        total += 1\n    else:\n        total -= 1\n    if total == 0:\n        if s[low] == ')':\n            ans += high - low + 1\n        low = high + 1\n        total = 0\nif total != 0:\n    print(-1)\nelse:\n    print(ans)", "N = int(input())\nS = input()\ncnt = 0\nl = 0\nfor s in S:\n    if s == '(':\n        if l == -1:\n            cnt += 1\n        l += 1\n    else:\n        l -= 1\n    if l < 0:\n        cnt += 1\nif l == 0:\n    print(cnt)\nelse:\n    print(-1)", "(n, s) = (int(input()), input())\n(a, r) = (0, 0)\nfor _ in s:\n    a += -1 if _ == ')' else 1\n    if a < 0 or (a == 0 and _ == '('):\n        r += 1\nprint(r if a == 0 else -1)", "n = int(input())\ns = input()\nx = 0\ny = 0\np = 0\nfor i in s:\n    if i == '(':\n        x += 1\n        if y != 0:\n            x -= 1\n            y -= 1\n            p += 2\n    else:\n        y += 1\n        if x != 0:\n            x -= 1\n            y -= 1\nif x == 0 and y == 0:\n    print(p)\nelse:\n    print(-1)", "n = int(input())\np = input()\nans = 0\ntemp = 0\nfor i in p:\n    if i == ')':\n        temp -= 1\n    else:\n        temp += 1\n        if temp == 0:\n            ans += 1\n    if temp < 0:\n        ans += 1\nif temp != 0:\n    print(-1)\nelse:\n    print(ans)", "n = int(input())\ns = input()\nc = 0\nq = 0\nfor i in range(len(s)):\n    if s[i] == '(':\n        c += 1\n    else:\n        c += -1\n        if c < 0:\n            q = q + 2\nif c != 0:\n    print(-1)\nelse:\n    print(q)", "l = int(input())\nst = input()\nflg1 = 0\nflg2 = 0\ni = 0\nc = 0\nfor i in range(l):\n    if st[i] == '(':\n        flg1 = flg1 + 1\n        if flg1 == 0 and flg2 == 1:\n            c = c + (i - k) + 1\n            flg2 = 0\n    else:\n        flg1 = flg1 - 1\n        if flg2 == 0:\n            k = i\n        if flg1 < 0:\n            flg2 = 1\nif flg1 < 0 or flg1 > 0:\n    print('-1')\nelse:\n    print(c)", "i = int(input())\ns = input()\nif s.count(')') != s.count('(') or i % 2 == 1:\n    print(-1)\nelse:\n    ans = t = pr = 0\n    for x in range(i):\n        if s[x] == ')':\n            ans -= 1\n        else:\n            ans += 1\n        if t == 0 and ans < 0:\n            t = x + 1\n        if t != 0 and ans == 0:\n            pr += x - t + 2\n            t = 0\n    print(pr)", "(n, b, a, r) = (int(input()), input(), 0, 0)\nfor c in b:\n    a += -1 if c == ')' else 1\n    if a < 0 or (a == 0 and c == '('):\n        r += 1\nprint(r if a == 0 else -1)", "n = int(input())\ns = input()\nif s.count('(') != s.count(')'):\n    print(-1)\nelse:\n    a = 0\n    c = 0\n    for item in s:\n        if item == ')':\n            a -= 1\n        else:\n            a += 1\n        if a < 0 or (a == 0 and item == '('):\n            c += 1\n    print(c)", "def main():\n    n = int(input())\n    s = input()\n    if n % 2:\n        print(-1)\n        return\n    mi = 0\n    cnt = 0\n    ans = 0\n    last = 0\n    o = 0\n    c = 0\n    for (idx, i) in enumerate(s):\n        if i == '(':\n            cnt += 1\n            o += 1\n        else:\n            cnt -= 1\n            c += 1\n            mi = min(mi, cnt)\n        if cnt == 0:\n            if mi < 0:\n                ans += idx - last + 1\n            last = idx + 1\n            mi = 0\n    if o != c:\n        print(-1)\n    else:\n        print(ans)\n    return\nmain()", "n = int(input())\ns = input()\nc1 = 0\nc2 = 0\nans = 0\nfor i in range(len(s)):\n    if s[i] == ')':\n        c1 = c1 + 1\n    else:\n        c2 = c2 + 1\n        if c1 >= c2:\n            ans = ans + 2\nif c1 == c2:\n    print(ans)\nelse:\n    print(-1)", "input()\ns = list(input())\na = 0\ncnt = 0\nif s.count(')') != s.count('('):\n    print(-1)\nelse:\n    for item in s:\n        if a < 0 or (a == 0 and item == ')'):\n            cnt += 1\n        if item == '(':\n            a += 1\n        else:\n            a -= 1\n    print(cnt)", "num_of_par = int(input())\ndata = list(input())\ncounter = 0\nresult = 0\nfor item in data:\n    if item == '(':\n        if counter == -1:\n            result += 1\n        counter += 1\n    else:\n        counter -= 1\n    if counter < 0:\n        result += 1\nif counter != 0:\n    print('-1')\nelse:\n    print(result)", "input()\ns = input()\nt = 0\nl = 0\ne = -1\nfor i in range(len(s)):\n    if s[i] == '(':\n        l += 1\n        if l == 0:\n            t += i - e + 1\n    elif s[i] == ')':\n        l -= 1\n        if l == -1:\n            e = i\nif l != 0:\n    print(-1)\nelse:\n    print(t)", "n = int(input())\nA = input()\nj = 0\nl = 0\nfor i in A:\n    if i == ')':\n        j -= 1\n    else:\n        j += 1\n    if j < 0:\n        l += 1\n    elif j == 0 and i == '(':\n        l += 1\nif j == 0:\n    print(l)\nelse:\n    print(-1)", "n = int(input())\nseq = list(input())\nif n % 2 == 1:\n    print(-1)\nelse:\n    s = 0\n    res = 0\n    for c in seq:\n        if c == '(':\n            s += 1\n        elif c == ')':\n            s -= 1\n        if s < 0:\n            res += 1\n        elif s == 0 and c == '(':\n            res += 1\n    if s != 0:\n        print(-1)\n    else:\n        print(res)", "n = int(input())\nseq = input()\ncounter = 0\nbad_counter = 0\nprev_counter = 0\nfor s in seq:\n    if s == '(':\n        counter += 1\n    else:\n        counter -= 1\n    if counter < 0 or (counter == 0 and prev_counter == -1):\n        bad_counter += 1\n    prev_counter = counter\nif counter != 0:\n    print(-1)\nelse:\n    print(bad_counter)", "n = int(input())\ns = input()\nstack = []\nstack2 = []\npair = 0\nif s.count(')') != s.count('('):\n    print(-1)\nelse:\n    for i in s:\n        if i == '(':\n            stack2.append(i)\n        if i == ')':\n            if stack2:\n                del stack2[-1]\n            else:\n                stack.append(i)\n        elif stack and i == '(':\n            del stack[-1]\n            del stack2[-1]\n            pair += 2\n    print(pair)", "from collections import Counter\nn = int(input())\nif n & 1:\n    input()\n    print(-1)\nelse:\n    x = input()\n    d = Counter(x)\n    if d['('] != d[')']:\n        print(-1)\n    else:\n        op = 0\n        cl = 0\n        c = 0\n        for i in x:\n            if i == '(':\n                op += 1\n            else:\n                cl += 1\n                if cl > op:\n                    c += 1\n        print(c * 2)", "counter = 0\nt = 0\nleng = input()\nfor i in input():\n    if i == '(':\n        counter += 1\n    else:\n        counter += -1\n    if counter < 0 or (counter == 0 and i == '('):\n        t += 1\nif counter == 0:\n    print(t)\nelse:\n    print(-1)", "n = int(input())\nl = list(input())\na = '('\nb = ')'\n(count1, count2) = (0, 0)\nc = 0\nfor i in range(n):\n    if l[i] == a:\n        count1 += 1\n    else:\n        count2 += 1\n        if count2 > count1:\n            c += 1\nif count1 != count2:\n    print(-1)\nelse:\n    print(2 * c)", "n = int(input())\ns = input()\ncur = 0\nans = 0\nlast = -1\nfor i in range(n):\n    if s[i] == '(':\n        cur += 1\n        if cur == 0:\n            ans += i - last\n    else:\n        cur -= 1\n    if cur >= 0:\n        last = i\nif cur != 0:\n    print(-1)\n    exit()\nprint(ans)", "n = int(input())\ns = input()\nans = 0\nlow = 0\ntotal = 0\nfor high in range(n):\n    if s[high] == '(':\n        total += 1\n    else:\n        total -= 1\n    if total == 0:\n        if s[high] == '(':\n            total -= 1\n        else:\n            total += 1\n        if total < 0:\n            ans += high - low + 1\n        low = high + 1\n        total = 0\nif total != 0:\n    print(-1)\nelse:\n    print(ans)", "_ = input()\ns = input()\nbalance = 0\nresult = 0\nfor c in s:\n    prev = balance\n    if c == '(':\n        balance += 1\n    else:\n        balance -= 1\n    if balance < 0:\n        result += 1\n    elif balance == 0 and prev < 0:\n        result += 1\nif balance != 0:\n    print(-1)\nelse:\n    print(result)", "n = int(input())\ns = input()\nif s.count(')') != s.count('('):\n    print(-1)\n    exit()\nans = 0\np = 0\nf = 0\nfor i in range(n):\n    if s[i] == ')':\n        p -= 1\n    else:\n        p += 1\n    if p < 0 and (not f):\n        st = i - 1\n        f = 1\n    elif p == 0 and f:\n        ans += i - st\n        f = 0\nprint(ans)", "n = int(input())\nstring = input()\nif string.count('(') != string.count(')'):\n    print(-1)\nelse:\n    stack = ['#']\n    res = 0\n    res = 0\n    f = 0\n    for s in string:\n        if s == '(' and f == 0:\n            stack.append(s)\n        elif s == '(':\n            res += 1\n            f -= 1\n        elif stack[-1] == '(':\n            stack.pop()\n        else:\n            res += 1\n            f += 1\n    print(res)", "n = int(input())\ns = list(input())\nif s.count('(') != s.count(')'):\n    print(-1)\nelse:\n    x = 0\n    length = 0\n    cnt = 0\n    for i in s:\n        if i == ')':\n            x -= 1\n            length += 1\n            if x == 0:\n                length = 0\n        else:\n            x += 1\n            length += 1\n            if x == 0:\n                cnt += length\n                length = 0\n    print(cnt)", "n = int(input())\ns = input()\nc1 = 0\nc2 = 0\nc = 0\nfor i in range(n):\n    if s[i] == '(':\n        c1 += 1\n        if c1 == c2:\n            c += c1 + c2\n            c1 = 0\n            c2 = 0\n    elif c1 == 0 or c1 < c2:\n        c2 += 1\n    else:\n        c1 -= 1\nif c1 != c2:\n    print(-1)\nelse:\n    print(c)", "l = int(input())\ns = input()\nclose = 0\nopen = 0\nx = 0\nchange = False\nfor i in s:\n    if i == '(':\n        open += 1\n    else:\n        close += 1\n    if close > open:\n        change = True\n        x += 1\n    if open == close and change:\n        x += 1\n        change = False\nif open != close:\n    print(-1)\nelse:\n    print(x)", "from sys import stdin\na = int(stdin.readline())\nc = stdin.readline()\ncount = 0\ncount2 = 0\nrecord = 0\nfor b in range(0, a):\n    if c[b] == '(':\n        if count < 0:\n            count2 += 1\n        count += 1\n        if count == 0:\n            record += count2\n            count2 = 0\n    else:\n        count -= 1\n        if count < 0:\n            count2 += 1\nif count != 0:\n    print(-1)\nelse:\n    print(record)", "n = int(input())\ns = input()\nopen = 0\nclose = 0\nans = 0\nif s.count('(') != s.count(')'):\n    print(-1)\nelse:\n    for i in range(n):\n        if s[i] == '(':\n            open += 1\n        else:\n            close += 1\n            if open >= close:\n                close -= 1\n                open -= 1\n            else:\n                ans += 2\n    print(ans)", "n = int(input())\nS = input()\nans = 0\ncount = 0\nop = float('inf')\nfor (i, x) in enumerate(S):\n    if x == '(':\n        count += 1\n    elif x == ')':\n        count -= 1\n        if count == -1:\n            op = i\n    if count == 0:\n        if op < i:\n            ans += i - op + 1\n            op = float('inf')\nif count != 0:\n    print(-1)\nelse:\n    print(ans)", "import sys\n\ndef split(word):\n    return [char for char in word]\n\ndef check(string, strLen):\n    countClose = 0\n    countOpen = 0\n    counter = 0\n    isClose = False\n    if string.count('(') != string.count(')'):\n        return -1\n    else:\n        for (n, i) in enumerate(string):\n            if i == '(':\n                countOpen += 1\n            elif i == ')':\n                countClose += 1\n            if countOpen == 0 and countClose == 1:\n                isClose = True\n            if countOpen == countClose or strLen - 1 == n:\n                if isClose:\n                    isClose = False\n                    counter += countOpen\n                    counter += countClose\n                countOpen = 0\n                countClose = 0\n        return counter\nuserInput = sys.stdin.readlines()\nstrLen = len(userInput[1])\nstring = split(userInput[1])\nprint(check(string, strLen))", "n = int(input())\ns = input()\nb = 0\nlast = -1\nans = 0\nfor x in range(n):\n    if s[x] == '(':\n        b += 1\n    else:\n        b -= 1\n    if b < 0 and last == -1:\n        last = x\n    if b == 0 and last != -1:\n        ans += x - last + 1\n        last = -1\nif b != 0:\n    ans = -1\nprint(ans)", "n = int(input())\ns = str(input())\n(res, bf) = (0, 0)\nif n % 2 != 0:\n    print('-1')\nelse:\n    for i in range(n):\n        if s[i] == ')':\n            bf = bf - 1\n        else:\n            bf = bf + 1\n            if bf == 0:\n                res = res + 1\n        if bf < 0:\n            res = res + 1\n    if bf == 0:\n        print(res)\n    else:\n        print('-1')", "qtd = int(input())\nseq = input()\n(op, cl) = (list(), list())\ncont = 0\nfor el in seq:\n    if el == '(':\n        if len(cl) > 0:\n            cl.pop()\n            cont += 2\n        else:\n            op.append(el)\n    elif len(op) > 0:\n        op.pop()\n    else:\n        cl.append(el)\nprint(cont if not len(op) and (not len(cl)) else -1)", "(n, s) = (int(input()), input())\n(cc, cur, ix) = (0, 0, -1)\nfor i in range(n):\n    prev = cur\n    cur += 1 if s[i] == '(' else -1\n    if cur == 0:\n        if prev < 0:\n            cc += i - ix\n        ix = i\nprint(-1 if cur else cc)", "n = int(input())\ns = input()\ncnt = 0\nflag = 0\nans = 0\npre = 0\ni = 1\nfor c in s:\n    if c == '(':\n        cnt += 1\n    else:\n        cnt -= 1\n    if cnt == 0 and c == '(':\n        ans += i - pre + 1\n    if cnt == -1 and c == ')':\n        pre = i\n    i += 1\nif cnt == 0:\n    print(ans)\nelse:\n    print(-1)", "n = int(input())\ns = input()\nl = 0\nr = 0\ncnt = 0\nans = 0\nfor i in s:\n    if i == ')':\n        cnt -= 1\n        l += 1\n        if cnt < 0:\n            ans += 1\n    else:\n        cnt += 1\n        r += 1\n        if cnt <= 0:\n            ans += 1\nif l == r:\n    print(ans)\nelse:\n    print('-1')", "n = int(input())\ns = input()\nt = 0\nr = 0\ncs = 0\nfor (i, c) in enumerate(s):\n    if c == '(':\n        t += 1\n    else:\n        t -= 1\n    if t < 0:\n        cs += 1\n    elif t == 0 and cs > 0:\n        r += cs + 1\n        cs = 0\nif t != 0:\n    print(-1)\nelse:\n    print(r)", "import math, sys\nfrom collections import Counter, defaultdict, deque\nfrom sys import stdin, stdout\ninput = stdin.readline\nli = lambda : list(map(int, input().split()))\n\ndef case():\n    n = int(input())\n    s = input().strip()\n    if n % 2 != 0:\n        print(-1)\n        exit()\n    a = []\n    c = 0\n    for i in range(0, n):\n        if s[i] == '(':\n            if len(a) != 0 and a[-1] == ')':\n                c += 2\n                a.pop()\n            else:\n                a.append('(')\n        elif len(a) != 0 and a[-1] == '(':\n            a.pop()\n        else:\n            a.append(')')\n    if len(a) != 0:\n        print(-1)\n    else:\n        print(c)\nfor _ in range(1):\n    case()", "n = int(input())\nl = input()\nif n % 2 == 1 or l.count('(') != n // 2:\n    print(-1)\n    exit(0)\ns = 0\nt = 0\nfor i in range(n):\n    if l[i] == '(':\n        if t == -1:\n            s += 1\n        t += 1\n    else:\n        t -= 1\n    if t < 0:\n        s += 1\nprint(s)", "n = int(input())\ns = str(input())\n(res, bf) = (0, 0)\nfor i in range(n):\n    if s[i] == ')':\n        bf = bf - 1\n    else:\n        bf = bf + 1\n        if bf == 0:\n            res = res + 1\n    if bf < 0:\n        res = res + 1\nif bf == 0:\n    print(res)\nelse:\n    print('-1')", "n = int(input())\ns = str(input())\n(res, bf) = (0, 0)\nflag = True\nif n % 2 != 0:\n    print('-1')\nelse:\n    for i in range(n):\n        if s[i] == ')':\n            bf = bf - 1\n        else:\n            bf = bf + 1\n            if bf == 0:\n                res = res + 1\n                flag = False\n        if bf < 0:\n            res = res + 1\n    if bf == 0:\n        print(res)\n    else:\n        print('-1')", "n = int(input())\ns = input()\noutput = 0\ncount = 0\nif s.count('(') != s.count(')'):\n    print(-1)\nelse:\n    for i in range(n):\n        last = count\n        if s[i] == '(':\n            count += 1\n        else:\n            count += -1\n        if count < 0 or last < 0:\n            output += 1\n    print(output)", "(n, s) = (int(input()), input())\n(cc, cur, ix) = (0, 0, -1)\nfor i in range(n):\n    prev = cur\n    cur += 1 if s[i] == '(' else -1\n    if cur == 0:\n        if prev < 0:\n            cc += i - ix\n        ix = i\nprint(-1 if cur else cc)", "n = input()\ns = input()\nif len(s) % 2 or s.count(')') != len(s) // 2:\n    print(-1)\nelse:\n    ans = 0\n    stack = 0\n    i = 0\n    while i < len(s):\n        c = s[i]\n        if c == ')':\n            if stack:\n                stack -= 1\n            else:\n                incorrect = 1\n                ans += 1\n                while incorrect:\n                    ans += 1\n                    i += 1\n                    incorrect += [-1, 1][s[i] == ')']\n        else:\n            stack += 1\n        i += 1\n    print(ans)"]