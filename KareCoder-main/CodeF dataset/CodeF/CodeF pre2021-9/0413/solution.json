["for s in [*open(0)][2::2]:\n    l = list(map(int, s.split()))\n    n = len(l) - 1\n    print(max(max(l) * n - sum(l), -1 * sum(l) % n))", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    (*a,) = map(int, input().split())\n    k = max(ceil(sum(a) / (n - 1)), max(a))\n    ans = (n - 1) * k - sum(a)\n    print(ans)", "import math\n\ndef toyBlocks(n, array):\n    s = sum(array)\n    k = max(math.ceil(s / (n - 1)), max(array))\n    ans = k * (n - 1) - s\n    return ans\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(toyBlocks(n, l))", "from math import ceil\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    summ = sum(a)\n    x = max(ceil(summ / (n - 1)), max(a))\n    print((n - 1) * x - summ)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    S = sum(arr)\n    mv = max(arr)\n    v2 = S // (n - 1) + 1 if S % (n - 1) else S // (n - 1)\n    return (n - 1) * max(mv, v2) - S\nfor _ in range(int(input())):\n    print(solve())", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = max(max(a), (sum(a) + n - 2) // (n - 1))\n    print(k * (n - 1) - sum(a))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = max(max(a), (sum(a) + n - 2) // (n - 1))\n    print(int(k * (n - 1) - sum(a)))", "def solve(x, ls):\n    s = max(max(ls), (sum(ls) + x - 2) // (x - 1))\n    return s * (x - 1) - sum(ls)\nn = int(input())\nfor i in range(0, n):\n    x = int(input())\n    ls = list(map(int, input().strip().split(' ')))\n    print(solve(x, ls))", "test = int(input())\nfor _ in range(test):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = sum(arr)\n    d = s // (n - 1)\n    if s % (n - 1) == 0:\n        d -= 1\n    print((n - 1) * max(max(arr), d + 1) - s)", "for s in [*open(0)][2::2]:\n    l = list(map(int, s.split()))\n    n = len(l) - 1\n    print(max(max(l) * n - sum(l), -1 * sum(l) % n))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = max(l) * (n - 1)\n    total = sum(l)\n    val = total // (n - 1)\n    if total <= x:\n        print(x - total)\n    elif val * (n - 1) == total:\n        print(0)\n    else:\n        print((val + 1) * (n - 1) - total)", "for s in [*open(0)][2::2]:\n    l = list(map(int, s.split()))\n    n = len(l) - 1\n    print(max(max(l) * n - sum(l), -1 * sum(l) % n))", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    total = arr[-1] * (n - 1)\n    cur_sum = sum(arr[1:])\n    if total == cur_sum:\n        if arr[0] % (n - 1) == 0:\n            print(0)\n        else:\n            print(math.ceil(arr[0] / (n - 1)) * (n - 1) - arr[0])\n    else:\n        add = total - cur_sum\n        if add <= arr[0]:\n            arr[0] -= add\n            if arr[0] == 0 or arr[0] % (n - 1) == 0:\n                print(0)\n            else:\n                print(math.ceil(arr[0] / (n - 1)) * (n - 1) - arr[0])\n        else:\n            print(add - arr[0])", "import math\nn = int(input())\nfor i in range(n):\n    a = int(input())\n    blocks = [int(x) for x in list(input().split(' '))]\n    blocks.sort()\n    total = 0\n    for j in blocks:\n        total += j\n    k = max(math.ceil(total / (a - 1)), blocks[a - 1])\n    print(k * (a - 1) - total)", "import math\nfrom bisect import *\nR = lambda : map(int, input().split())\n(t,) = R()\nwhile t:\n    t -= 1\n    (n,) = list(R())\n    arr = list(R())\n    m = max(arr)\n    s = sum(arr)\n    avg = math.ceil(s / (n - 1))\n    ans = max(avg, m) * (n - 1) - s\n    print(ans)", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    boxes = list(map(int, input().split()))\n    boxes.sort()\n    total = sum(boxes)\n    blocks = math.ceil(total / (n - 1))\n    count = blocks if boxes[-1] <= blocks else boxes[-1]\n    count *= n - 1\n    print(count - total)", "for u in range(int(input())):\n    n = int(input())\n    x = [int(i) for i in input().split()]\n    s = sum(x)\n    if s % (n - 1) == 0:\n        k = sum(x) // (n - 1)\n    else:\n        k = sum(x) // (n - 1) + 1\n    k = max(k, max(x))\n    ans = k * (n - 1) - s\n    print(ans)", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    s = sum(a)\n    k = max(math.ceil(s / (n - 1)), a[n - 1])\n    print(k * (n - 1) - s)", "inn = lambda : int(input())\ninm = lambda : map(int, input().split())\nins = lambda : str(input())\nina = lambda : list(map(int, input().split()))\n\ndef solve():\n    n = inn()\n    a = ina()\n    m = max(a)\n    s = sum(a)\n    n -= 1\n    print(max((s + n - 1) // n, m) * n - s)\n\ndef main():\n    t = 1\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "t = int(input())\nfor z in range(t):\n    N = int(input())\n    A = list(map(int, input().split()))\n    ans = max(max(A) * (N - 1) - sum(A), -sum(A) % (N - 1))\n    print(ans)", "from math import sqrt, log, ceil\nimport sys\nfrom random import randint as r\n\ndef solve():\n    n = int(input())\n    l = sorted(map(int, input().split()))\n    mx = l[n - 1]\n    temp = max(ceil(sum(l) / (n - 1)), mx)\n    print((n - 1) * temp - sum(l))\nfor _ in range(int(input())):\n    solve()", "for i in range(int(input())):\n    n = int(input())\n    m = list(map(int, input().split()))\n    s = sum(m)\n    maxi = max(m)\n    if s < maxi * (n - 1):\n        print(maxi * (n - 1) - s)\n    else:\n        s -= maxi * (n - 1)\n        l = s % (n - 1)\n        if l == 0:\n            print(0)\n        else:\n            print(n - 1 - l)", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    m = a[n - 1]\n    s = sum(a)\n    av = s // (n - 1)\n    c = 0\n    if s % (n - 1) != 0:\n        c = n - 1 - s % (n - 1)\n        av += 1\n    if m > av:\n        c += (m - av) * (n - 1)\n    print(c)", "import math\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    a.sort()\n    k = sum(a)\n    p = math.ceil(k / (n - 1))\n    q = max(a[len(a) - 1], p)\n    op = q * (n - 1)\n    print(op - k)", "from math import ceil\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        sum_ = 0\n        max1 = 0\n        n = int(input())\n        inp = input().split(' ')\n        for ai in inp:\n            ai = int(ai)\n            sum_ += ai\n            if ai >= max1:\n                max1 = ai\n        k = max(max1, ceil(sum_ / (n - 1)))\n        result = k * (n - 1) - sum_\n        print(result)\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    m = max(l)\n    s = sum(l)\n    if s % (n - 1) == 0:\n        p = s // (n - 1)\n    else:\n        p = 1 + s // (n - 1)\n    if p >= m:\n        print((n - 1) * p - s)\n    else:\n        print(m * (n - 1) - s)", "for _ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    mx = max(ar)\n    sm = sum(ar)\n    rem = sm % (n - 1)\n    div = sm // (n - 1)\n    if rem != 0:\n        rem = n - 1 - rem\n        div += 1\n    if div < mx:\n        rem += (n - 1) * (mx - div)\n    print(rem)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    x = n - 1\n    r = math.ceil(s / x)\n    p = x * r\n    z = max(a)\n    if z > r:\n        p = z * (n - 1)\n    print(p - s)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    summ = sum(arr)\n    max1 = max(arr)\n    ele = max(math.ceil(summ / (n - 1)), max1)\n    print(ele * (n - 1) - summ)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    x = max(a)\n    y = max(x, math.ceil(s / (n - 1)))\n    print(y * (n - 1) - s)", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    (s, m) = (sum(a), max(a))\n    ans = max(m, math.ceil(s / (n - 1))) * (n - 1) - s\n    print(ans)", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split(' ')))\n    sum_ = sum(l)\n    divide = math.ceil(sum_ / (n - 1))\n    k = max(divide, max(l))\n    print(k * (n - 1) - sum_)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = sum(l)\n    m = max(l)\n    m2 = max(m, math.ceil(s / (n - 1)))\n    print(m2 * (n - 1) - s)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    m = max(a)\n    k = math.ceil(s / (n - 1))\n    print(max(k, m) * (n - 1) - s)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    n = n - 1\n    print(max(max(a) * n - sum(a), -1 * sum(a) % n))", "import math\nt = int(input())\nfor q in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    z = max(a)\n    s = 0\n    for i in a:\n        s += z - i\n    req = s - z\n    if req < 0:\n        a = math.ceil(-req / (n - 1))\n        req = a * (n - 1) + req\n        print(req)\n    else:\n        print(req)", "def ceil(a, b):\n    return (a + b - 1) // b\n\ndef ans(main, a):\n    if main < a:\n        a = a - main\n        return ceil(a, n - 1) * (n - 1) - a\n    elif main > a:\n        return main - a\n    else:\n        return 0\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    m = a[n - 1]\n    main = 0\n    for i in range(1, n):\n        main += m - a[i]\n    print(ans(main, a[0]))", "for _ in range(int(input())):\n    n = int(input())\n    boxes = list(map(int, input().split()))\n    k = max(max(boxes), (sum(boxes) + n - 2) // (n - 1))\n    print(k * (n - 1) - sum(boxes))", "import math\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    a.sort()\n    op = max(math.ceil(sum(a) / (n - 1)), a[-1])\n    io = op * (n - 1)\n    print(io - sum(a))", "from math import ceil\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        k = sum(a)\n        k = max(ceil(sum(a) / (n - 1)), max(a))\n        print(k * (n - 1) - sum(a))\nmain()", "N = int(200000.0)\na = [0 for i in range(N + 5)]\n\ndef solve():\n    t = int(input())\n    for tc in range(t):\n        n = int(input())\n        b = input().split()\n        for i in range(n):\n            a[i] = int(b[i])\n        s = 0\n        k2 = -1000000000.0\n        for i in range(n):\n            s += a[i]\n            k2 = max(k2, a[i])\n        k1 = int(s / (n - 1))\n        if s % (n - 1) > 0:\n            k1 += 1\n        k = max(k1, k2)\n        ans = k * (n - 1) - s\n        print(ans)\nsolve()", "T = int(input())\nfor t in range(T):\n    N = int(input())\n    arr = [int(k) for k in input().split()]\n    sorted_arr = sorted(arr)\n    maximum = sorted_arr[-1]\n    total = sum(arr)\n    s = max((N - 1) * maximum, total)\n    while s % (N - 1) != 0:\n        s += 1\n    print(s - total)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    s = sum(nums)\n    ma = max(nums)\n    (lim, r) = divmod(s, n - 1)\n    if r:\n        lim += 1\n    print(max(lim, ma) * (n - 1) - s)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    a = 0\n    s = sum(l)\n    if s % (n - 1) == 0:\n        m = max(l)\n        if m > s // (n - 1):\n            print(a + (m - s // (n - 1)) * (n - 1))\n        else:\n            print(a)\n    else:\n        a += n - 1 - s % (n - 1)\n        s += a\n        m = max(l)\n        if m > s // (n - 1):\n            print(a + (m - s // (n - 1)) * (n - 1))\n        else:\n            print(a)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    max_ = max(a)\n    max_ = max(max_, -1 * (-s // (n - 1)))\n    abe = (n - 1) * max_\n    abe = abs(abe - s)\n    print(abe)", "def solve(n, boxes):\n    maxx = max(boxes)\n    sum_cubes = sum(boxes)\n    if n == 2:\n        return 0\n    to_add = 0\n    left_to_fill = maxx * (n - 2) - (sum_cubes - maxx)\n    if left_to_fill > 0:\n        return left_to_fill\n    while (sum_cubes + to_add) % (n - 1):\n        to_add += 1\n    return to_add\n\ndef run():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        boxes = tuple(map(int, input().split()))\n        print(solve(n, boxes))\nrun()", "from math import ceil\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    print(max(max(a), ceil(s / (n - 1))) * (n - 1) - s)", "import math\nfor z in range(int(input())):\n    n = int(input())\n    v = [int(i) for i in input().split()]\n    s = sum(v)\n    large = max(v)\n    p = int(s / (n - 1))\n    if s % (n - 1):\n        p += 1\n    print(int(max(p, large) * (n - 1) - s))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ma = max(a)\n    total = sum(a)\n    ans = ma * (n - 1) - total\n    if ans < 0:\n        ans = n - 1 - total % (n - 1)\n        if ans == n - 1:\n            ans = 0\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ma = max(a)\n    total = sum(a)\n    ans = ma * (n - 1) - total\n    if ans < 0:\n        ans = n - 1 - total % (n - 1)\n        if ans == n - 1:\n            ans = 0\n    print(ans)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = sum(l)\n    m = max(l)\n    m2 = max(m, math.ceil(s / (n - 1)))\n    print(m2 * (n - 1) - s)", "import sys\n\ndef main():\n    test_cases = int(sys.stdin.readline())\n    for _ in range(test_cases):\n        N = int(sys.stdin.readline())\n        A = [int(i) for i in sys.stdin.readline().split()]\n        K = max(max(A), (sum(A) + N - 2) // (N - 1))\n        print(K * (N - 1) - sum(A))\nmain()", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = sum(l)\n    m = max(l)\n    m = max(m, ceil(s / (n - 1)))\n    print(m * (n - 1) - s)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = max(a)\n    b = sum(a)\n    if c * (n - 1) >= b:\n        print(c * (n - 1) - b)\n    else:\n        print((b % (n - 1) > 0) * (n - 1 - b % (n - 1)))", "def main():\n    for _ in range(int(input())):\n        (n, aa) = (int(input()) - 1, list(map(int, input().split())))\n        (s, mi, ma) = (sum(aa), min(aa), max(aa))\n        print(max(ma, (s + n - 1) // n) * n - s)\nmain()", "def read():\n    return [int(x) for x in input().split()]\n(ca,) = read()\nfor _ in range(ca):\n    (n,) = read()\n    x = read()\n    s = sum(x)\n    print(max((s + n - 2) // (n - 1), max(x)) * (n - 1) - s)", "import math\ntc = int(input())\nwhile tc > 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    su = sum(a)\n    ma = max(a)\n    dis = math.ceil(su / (n - 1))\n    if dis >= ma:\n        print(dis * (n - 1) - su)\n    else:\n        print(ma * (n - 1) - su)\n    tc -= 1", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    m = max(a)\n    k = math.ceil(s / (n - 1))\n    if k >= m:\n        print(k * (n - 1) - s)\n    else:\n        print(m * (n - 1) - s)", "for p in [*open(0)][2::2]:\n    l = list(map(int, p.split()))\n    n = len(l) - 1\n    print(max(max(l) * n - sum(l), -1 * sum(l) % n))", "from math import ceil\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    boxes = list(map(int, input().split()))\n    summary = sum(boxes)\n    k = max(ceil(summary / (n - 1)), max(boxes))\n    print(k * (n - 1) - summary)", "t = int(input())\n\ndef up(x, n):\n    if x % n == 0:\n        return x / n\n    else:\n        return x // n + 1\nfor i in range(t):\n    n = int(input())\n    li = list(map(int, input().split()))\n    a = sum(li)\n    if up(a, n - 1) >= max(li):\n        print(int((n - 1) * up(a, n - 1) - a))\n    else:\n        b = max(li)\n        print(int(b * (n - 1) - a))", "for s in [*open(0)][2::2]:\n    l = list(map(int, s.split()))\n    n = len(l) - 1\n    print(max(max(l) * n - sum(l), -1 * sum(l) % n))", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = (sum(a) + n - 2) // (n - 1)\n    m = max(a)\n    k = max(b, m)\n    print(abs(k * (n - 1) - sum(a)))", "import math\nT = int(input())\nfor t in range(T):\n    n = int(input())\n    s = [int(x) for x in input().split()]\n    S = sum(s)\n    ms = max(s)\n    ss = math.ceil(S / (n - 1))\n    print(max(ss * (n - 1) - S, ms * (n - 1) - S))", "import sys\n\ndef minp():\n    return sys.stdin.readline().strip()\n\ndef mint():\n    return int(minp())\n\ndef mints():\n    return map(int, minp().split())\n\ndef solve():\n    n = mint()\n    a = list(mints())\n    s = sum(a)\n    m = max(a)\n    r = max((s + (n - 2)) // (n - 1), m) * (n - 1)\n    print(r - s)\nfor i in range(mint()):\n    solve()", "t = int(input())\nanswer = []\nfor _ in range(t):\n    n = int(input())\n    liste = list(map(int, input().split(' ')))\n    S = sum(liste)\n    quotient = S // (n - 1)\n    if quotient >= max(liste):\n        if S % (n - 1) == 0:\n            var = 0\n        else:\n            var = (n - 1) * (quotient + 1) - S\n    else:\n        var = (n - 1) * max(liste) - S\n    answer.append(str(var))\nprint('\\n'.join(answer))", "import sys\nimport math\nfrom collections import Counter, defaultdict\nLI = lambda : list(map(int, input().split()))\nMAP = lambda : map(int, input().split())\nIN = lambda : int(input())\nS = lambda : input()\n\ndef case():\n    n = IN()\n    a = LI()\n    ans = sum(a)\n    m = max(a)\n    if m * (n - 1) >= ans:\n        print(m * (n - 1) - ans)\n    else:\n        print(math.ceil(ans / (n - 1)) * (n - 1) - ans)\nfor _ in range(IN()):\n    case()", "for s in [*open(0)][2::2]:\n    l = list(map(int, s.split()))\n    n = len(l) - 1\n    print(max(max(l) * n - sum(l), -1 * sum(l) % n))", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    m = max(a)\n    k = n - 1\n    if s <= m * k:\n        return m * k - s\n    r = s - m * k\n    if r % k == 0:\n        return 0\n    return k - r % k\nt = int(input())\ni = 0\nwhile i < t:\n    print(solve())\n    i += 1", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = max(l) * (n - 1)\n    if x > sum(l):\n        print(x - sum(l))\n    elif sum(l) % (n - 1) == 0:\n        print(0)\n    else:\n        print(n - 1 - sum(l) % (n - 1))", "import math\nfor t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    cnt = 0\n    for i in a:\n        cnt += m - i\n    mn = min(a)\n    cnt -= m - mn\n    if cnt == mn:\n        ans = 0\n    elif cnt > mn:\n        ans = cnt - mn\n    else:\n        k = math.ceil((mn - cnt) / (n - 1))\n        ans = k * (n - 1) + cnt - mn\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    val = l[-1]\n    v1 = (n - 1) * val\n    s = sum(l)\n    if v1 > s:\n        print(v1 - s)\n    elif s == v1:\n        print(0)\n    elif s % (n - 1) == 0:\n        print(0)\n    else:\n        print(n - 1 - s % (n - 1))", "import math\nfor x in range(int(input())):\n    n = int(input())\n    m = list(map(int, input().split()))\n    f = max(max(m), math.ceil(sum(m) / (n - 1)))\n    print(f * (n - 1) - sum(m))", "t = int(input())\nimport math\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    x = max(a)\n    y = max(x, math.ceil(s / (n - 1)))\n    print(y * (n - 1) - s)", "t = int(input())\n(l, m) = ([], [])\n(s, s1, s2) = (0, 0, 0)\nfor i in range(t):\n    l = []\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    l.sort()\n    b = l[n - 1]\n    s1 = (n - 1) * b\n    s2 = sum(l)\n    if s1 >= s2:\n        s = s1 - s2\n    else:\n        s2 = s2 - s1\n        s2 = s2 % (n - 1)\n        if s2 == 0:\n            s = 0\n        else:\n            s = n - 1 - s2\n    m.append(s)\n    s = s1 = s2 = 0\nfor i in m:\n    print(i)", "def run():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        boxes = tuple(map(int, input().split()))\n        maxx = max(boxes)\n        sum_cubes = sum(boxes)\n        if n == 2:\n            print(0)\n            continue\n        to_add = 0\n        left_to_fill = maxx * (n - 2) - (sum_cubes - maxx)\n        if left_to_fill > 0:\n            print(left_to_fill)\n            continue\n        while True:\n            if (sum_cubes + to_add) % (n - 1) == 0 and to_add >= left_to_fill:\n                break\n            to_add += 1\n        print(to_add)\nrun()", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    m = max(arr)\n    s = sum(arr)\n    s1 = s\n    val = m * (n - 1)\n    if s < val:\n        s = val\n    mod = s % (n - 1)\n    if mod != 0:\n        s += n - 1 - mod\n    print(s - s1)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    s = sum(a)\n    t = m * (n - 1) - s\n    print(t if t >= 0 else math.ceil(s / (n - 1)) * (n - 1) - s)", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().strip().split()))[:n]\n    maxi = max(arr)\n    sum_arr = sum(arr)\n    distribute_val = ceil(sum_arr / (n - 1))\n    distribute_val = max(distribute_val, maxi)\n    more_req = distribute_val * (n - 1) - sum_arr\n    print(more_req)", "import math\nfor case in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = sum(arr)\n    mx = max(arr)\n    k = math.ceil(s / (n - 1))\n    ans = 0\n    if mx > k:\n        ans = mx * (n - 1) - s\n    else:\n        ans = k * (n - 1) - s\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = max(a) * (n - 1)\n    s = sum(a)\n    q = s // (n - 1)\n    r = s % (n - 1)\n    if r > 0:\n        q += 1\n    print(max(max(a), q) * (n - 1) - s)", "for _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split(' ')]\n    tot = sum(a)\n    L = max(a)\n    J = None\n    if tot < (n - 1) * L:\n        J = (n - 1) * L\n    elif tot % (n - 1) == 0:\n        J = tot\n    else:\n        J = (int(tot / (n - 1)) + 1) * (n - 1)\n    print(J - tot)", "cases = int(input())\nfor k in range(cases):\n    n = int(input())\n    boxes = [int(k) for k in input().split()]\n    max_box = max(boxes)\n    sum_box = sum(boxes)\n    if n == 2:\n        print(0)\n    elif sum_box > max_box * (n - 1):\n        print(-sum_box % (n - 1))\n    else:\n        print(max_box * (n - 1) - sum_box)", "import math as m\nfor _ in range(int(input())):\n    (n, a) = (int(input()), list(map(int, input().split())))\n    print(max(max(a), m.ceil(sum(a) / (n - 1))) * (n - 1) - sum(a))", "t = int(input())\nimport math\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    x = max(a)\n    y = max(x, math.ceil(s / (n - 1)))\n    print(y * (n - 1) - s)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(max(math.ceil(sum(a) / (n - 1)) * (n - 1) - sum(a), abs(max(a) * (n - 1)) - sum(a)))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    summ = sum(arr)\n    maxx = max(arr)\n    if summ > maxx * (n - 1):\n        print((n - 1 - summ) % (n - 1))\n    else:\n        print(maxx * (n - 1) - summ)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    k = max(l)\n    if k * (n - 1) - sum(l) >= 0:\n        print(k * (n - 1) - sum(l))\n    else:\n        print((k * (n - 1) - sum(l)) % (n - 1))", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    x = sum(a)\n    k = math.ceil(x / (n - 1))\n    if k >= m:\n        print(k * (n - 1) - x)\n    else:\n        print(m * (n - 1) - x)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    s = sum(arr)\n    inc = n - 1 - s % (n - 1)\n    if inc == n - 1:\n        inc = 0\n    print(max(inc, max(arr) * (n - 1) - s))", "import math\nt = int(input())\nwhile t > 0:\n    t = t - 1\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    Sum = sum(arr)\n    Max = max(arr)\n    up = int(math.ceil(Sum / (n - 1)))\n    if Max > up:\n        print((n - 1) * Max - Sum)\n    else:\n        print((n - 1) * up - Sum)", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = sum(l)\n    b = n - 1\n    req = math.ceil(s / b)\n    ns = b * req\n    if req >= max(l):\n        print(ns - s)\n    else:\n        u = max(l) * b\n        print(u - s)", "def solve():\n    n = int(input().strip())\n    l = [int(x) for x in input().strip().split()]\n    toys = sum(l)\n    needed = max(l) * (n - 1)\n    if needed >= toys:\n        return needed - toys\n    if toys % (n - 1) == 0:\n        return 0\n    return n - 1 - toys % (n - 1)\nfor _ in range(int(input().strip())):\n    print(solve())", "for _ in range(int(input())):\n    (n, lst) = (int(input()), sorted(map(int, input().split(' ')), reverse=True))\n    (sami, samd) = (sum(lst[1:]), lst[0] * (n - 1))\n    ans = samd - sami - lst[0]\n    if ans < 0:\n        ans += abs(ans) // (n - 1) * (n - 1)\n        if ans < 0:\n            ans += n - 1\n    print(ans)", "t = int(input())\nimport math\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    x = max(a)\n    y = max(x, math.ceil(s / (n - 1)))\n    print(y * (n - 1) - s)", "from math import ceil\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    print(max(max(a), ceil(s / (n - 1))) * (n - 1) - s)"]