["for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    m = 10 ** 9 + 7\n    print(n ** k % m)", "list_ans = []\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    list_ans.append(n ** k % int(1000000000.0 + 7))\nprint(*list_ans, sep='\\n')", "def func():\n    (n, k) = map(int, input().split())\n    print(n ** k % (10 ** 9 + 7))\nt = int(input())\nfor i in range(t):\n    func()", "def func():\n    (n, k) = map(int, input().split())\n    print(n ** k % (10 ** 9 + 7))\nt = int(input())\nfor i in range(t):\n    func()", "t = int(input())\nfor i in range(t):\n    (n, k) = input().split()\n    (n, k) = [int(n), int(k)]\n    ans = pow(n, k, 1000000007)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    ans = n ** k\n    print(ans % 1000000007)", "import math\n\ndef solve():\n    (n, k) = map(int, input().split())\n    ans = 1\n    for i in range(k):\n        ans = ans * n % 1000000007\n    print(ans)\ntst = int(input())\nfor i in range(tst):\n    solve()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(pow(n, k, 1000000007))", "mod = 10 ** 9 + 7\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    print(n ** k % mod)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(n ** k % (10 ** 9 + 7))", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    print(pow(n, k, 10 ** 9 + 7))", "for _ in ' ' * int(input()):\n    print(pow(*map(int, input().split()), 10 ** 9 + 7))", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    zxc = n + 1 - 1\n    mod = 10 ** 9 + 7\n    for i in range(k - 1):\n        n = n * zxc % mod\n    print(n)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    print(n ** k % (10 ** 9 + 7))", "import math\n\ndef solve(n, k):\n    MOD = 10 ** 9 + 7\n    return n ** k % MOD\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    ans = solve(n, k)\n    print(ans)", "t = int(input())\ntmp = []\nfor i in range(t):\n    tmp.append(input().split(' '))\nfor i in tmp:\n    a = int(i[0]) ** int(i[1])\n    print(a % (1000000000 + 7))", "MOD = 1000000007\nT = int(input())\nfor t in range(T):\n    (n, k) = map(int, input().split())\n    ans = 1\n    for i in range(k):\n        ans *= n\n        ans %= MOD\n    print(ans)", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(n ** k % mod)", "mod = pow(10, 9) + 7\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(pow(n, k, mod))", "t = int(input())\nMOD = 1000000000.0 + 7\nwhile t:\n    t = t - 1\n    (n, k) = map(int, input().split())\n    val = 1\n    for i in range(0, k):\n        val = int(val * n % MOD)\n    print(val)", "for _ in range(int(input())):\n    l = list(map(int, input().split(' ')))\n    c = 1\n    for i in range(l[1]):\n        c = c * l[0]\n        c = c % (1000000000.0 + 7)\n    print(int(c))", "t = int(input())\nfor i in range(t):\n    (n, k) = str(input()).split()\n    print(int(n) ** int(k) % (10 ** 9 + 7))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    mod = 10 ** 9 + 7\n    ans = 1\n    for i in range(k):\n        ans = ans * n % mod\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    mod = 10 ** 9 + 7\n    print(n ** k % mod)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(pow(n, k, 1000000007))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(pow(n, k, 10 ** 9 + 7))", "mod = 10 ** 9 + 7\n\ndef func():\n    print(pow(n, k, mod))\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    func()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ans = n\n    for i in range(k - 1):\n        ans = ans * n % (1000000000.0 + 7)\n    print(int(ans))", "import math\n\ndef main_function():\n    test_cases = range(int(input()))\n    for test_case in test_cases:\n        (n, k) = [int(i) for i in input().split(' ')]\n        const = 10 ** 9 + 7\n        print(n ** k % const)\nmain_function()", "t = int(input())\nfor _ in range(t):\n    (n, k) = list(map(int, input().split()))\n    print(n ** k % (10 ** 9 + 7))", "import sys\n\ndef readnum():\n    input = sys.stdin.readline\n    a = list(map(int, input().split()))\n    return a\n\ndef printf(val):\n    sys.stdout.write(str(val) + '\\n')\n\ndef power(a, b, mod):\n    if b == 1:\n        return a\n    if b == 0:\n        return 1\n    ans = power(a, b // 2, mod)\n    ans *= ans\n    if b % 2:\n        ans *= a\n    ans = ans % mod\n    return ans\nt = readnum()[0]\nfor _ in range(t):\n    (n, k) = readnum()\n    print(power(n, k, 10 ** 9 + 7))", "t = int(input())\nwhile t > 0:\n    (n, k) = [int(i) for i in input().split(' ')]\n    i = 1\n    max = 1000000000.0 + 7\n    result = 1\n    while i <= k:\n        result = result * n % max\n        i += 1\n    print(int(result))\n    t -= 1", "from sys import stdin\ninput = stdin.readline\nfrom collections import Counter\nfrom itertools import accumulate\nimport operator\nimport math\n\ndef solve():\n    (n, k) = [int(char) for char in input().split()]\n    return n ** k % (10 ** 9 + 7)\nfor _ in range(int(input())):\n    print(solve())", "for t in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    print(pow(n, k) % (pow(10, 9) + 7))", "def solve():\n    (n, k) = map(int, input().split())\n    ans = 1\n    ans = ans * n ** k % 1000000007\n    print(ans)\ntst = int(input())\nfor i in range(tst):\n    solve()", "for _ in [0] * int(input()):\n    (n, k) = map(int, input().split())\n    print(n ** k % (7 + 10 ** 9))", "t = int(input())\nfor _ in range(0, t):\n    inputs = [int(num) for num in input().split()]\n    n = inputs[0]\n    k = inputs[1]\n    ans = n ** k\n    print(ans % (10 ** 9 + 7))", "t = int(input())\nfor i in range(t):\n    [n, k] = list(map(int, input().split(' ')))\n    print(n ** k % 1000000007)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(n ** k % 1000000007)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split(' '))\n    nr = n ** k\n    sol = nr % (10 ** 9 + 7)\n    print(sol)", "for pratyush in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    print(n ** k % (10 ** 9 + 7))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    print(a ** b % (10 ** 9 + 7))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    print(n ** k % (10 ** 9 + 7))", "T = int(input())\nfor TT in range(T):\n    aaa = input().split(' ')\n    n = int(aaa[0])\n    k = int(aaa[1])\n    print(pow(n, k, int(1000000000.0 + 7)))", "t = int(input())\nwhile t:\n    (n, k) = list(map(int, input().split()))\n    MOD = pow(10, 9) + 7\n    print(pow(n, k) % MOD)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    zxc = n + 1 - 1\n    mod = 10 ** 9 + 7\n    for i in range(k - 1):\n        n = n * zxc % mod\n    print(n)", "mod = 1000000007\nfor ik in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(pow(n, k, mod))", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    print(a ** b % 1000000007)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(n ** k % 1000000007)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(n ** k % (10 ** 9 + 7))", "MOD = int(1000000000.0 + 7)\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(n ** k % MOD)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(pow(n, k, 1000000007))", "t = int(input())\nfor i in range(t):\n    (n, k) = input().split()\n    n = int(n)\n    k = int(k)\n    print(pow(n, k, 1000000007))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(n ** k % 1000000007)", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        (n, k) = map(int, input().split())\n        mod = 10 ** 9 + 7\n        ans = pow(n, k, mod)\n        print(ans)\nmain()", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    print(n ** k % 1000000007)", "mod = 10 ** 9 + 7\nT = int(input())\nfor _ in range(T):\n    (n, k) = [int(x) for x in input().split()]\n    result = pow(n, k, mod)\n    print(result)", "mod = 10 ** 9 + 7\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    ans = 1\n    for x in range(k):\n        ans = ans * n % mod\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    ans = n ** k % 1000000007\n    print(ans)", "mod = 10 ** 9 + 7\n\ndef p(base, pow):\n    if pow == 1:\n        return base\n    elif pow % 2:\n        return base * p(base, pow // 2) ** 2 % mod\n    else:\n        return p(base, pow // 2) ** 2 % mod\nn = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    print(p(a, b) % mod)", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().strip().split()))\n    ans = n ** k % (10 ** 9 + 7)\n    print(ans)", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    (n, k) = map(int, input().split())\n    p = n ** k % 1000000007\n    print(p)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, k) = map(int, input().split())\n    print(pow(n, k, int(1000000000.0 + 7)))\nfor i in range(int(input())):\n    solve()", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    ans = n ** k\n    ans = ans % (10 ** 9 + 7)\n    print(ans)", "n = int(input())\nfor _ in range(n):\n    (a, b) = map(int, input().split())\n    print(a ** b % (10 ** 9 + 7))", "m = 10 ** 9 + 7\nq = int(input())\nfor i in range(q):\n    w = input().split()\n    n = int(w[0])\n    k = int(w[1])\n    ans = 1\n    for j in range(k):\n        ans = ans * n % m\n    print(ans)", "t = int(input())\nmodulo = 10 ** 9 + 7\nfor _ in range(t):\n    (n, k) = [int(i) for i in input().split(' ')]\n    result = 1\n    for i in range(k):\n        result = result * n % modulo\n    print(result)", "import math\nn_tests = int(input())\nfor test in range(n_tests):\n    (n, k) = input().split()\n    n = int(n)\n    k = int(k)\n    reseni = 1\n    for kek in range(0, k):\n        reseni *= n\n    reseni = reseni % (10 ** 9 + 7)\n    print(reseni)", "MOD = 10 ** 9 + 7\nt = int(input().strip())\nfor _ in range(t):\n    (n, k) = input().strip().split()\n    (n, k) = (int(n), int(k))\n    r = 1\n    for i in range(k):\n        r = r * n % MOD\n    print(r)", "def read():\n    (n, k) = map(int, input().split())\n    solve(n, k)\n\ndef solve(n, k):\n    ans = pow(n, k, mod=1000000007)\n    print(ans)\nt = int(input())\nfor tc in range(t):\n    read()", "for _ in range(int(input())):\n    mod = pow(10, 9) + 7\n    ans = 1\n    (n, k) = map(int, input().split())\n    for i in range(k):\n        ans *= n % mod\n        ans %= mod\n    print(ans % mod)", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    m = 10 ** 9 + 7\n    print(pow(n, k, m))", "T = int(input())\nfor _ in range(T):\n    (N, K) = map(int, input().split())\n    print(N ** K % (10 ** 9 + 7))", "t = int(input())\nfor t_ in range(t):\n    (n, k) = map(int, input().split())\n    print(n ** k % 1000000007)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    print(pow(n, m, 10 ** 9 + 7))", "P = 1000000007\n\ndef solve(n, k):\n    if n == 2:\n        return 2 * 2 ** (k - 1)\n    else:\n        prod = 1\n        for _ in range(k):\n            prod = prod * n % P\n        return prod\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split(' '))\n    print(solve(n, k))", "t = int(input())\nfor iii in range(t):\n    (n, k) = map(int, input().split())\n    print(pow(n, k, int(1000000000.0 + 7)))", "from math import factorial, ceil, pow, sqrt, floor\nfrom sys import stdin, stdout\nmod = 1000000007\nfor _ in range(int(stdin.readline())):\n    (n, k) = map(int, stdin.readline().split())\n    shan = 1\n    for i in range(k):\n        shan = shan * n % mod\n    print(shan)", "import sys, math, bisect\ninf = float('inf')\nmod = 10 ** 9 + 7\n\ndef lcm(a, b):\n    return int(a / math.gcd(a, b) * b)\n\ndef gcd(a, b):\n    return int(math.gcd(a, b))\n\ndef binarySearch(a, x):\n    i = bisect.bisect_left(a, x)\n    if i != len(a) and a[i] == x:\n        return i\n    else:\n        return -1\n\ndef lowerBound(a, x):\n    i = bisect.bisect_left(a, x)\n    if i:\n        return i - 1\n    else:\n        return -1\n\ndef upperBound(a, x):\n    i = bisect.bisect_right(a, x)\n    if i != len(a) + 1 and a[i - 1] == x:\n        return i - 1\n    else:\n        return -1\n\ndef freq(a, x):\n    z = upperBound(a, x) - lowerBound(a, x)\n    if z <= 0:\n        return 0\n    return z\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ans = 1\n    for i in range(k):\n        ans = ans * n % mod\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    print(pow(n, k, 1000000007))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(pow(n, k, 10 ** 9 + 7))", "MOD = 10 ** 9 + 7\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    print(pow(n, k, MOD))", "T = int(input())\nfor x in range(T):\n    a = [int(y) for y in input().split()]\n    n = a[0]\n    k = a[1]\n    b = n ** k\n    print(b % 1000000007)", "t = int(input())\nm = 10 ** 9 + 7\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    print(n ** k % m)", "mod = int(1000000000.0) + 7\n\ndef pow(a, b):\n    prod = 1\n    for i in range(b):\n        prod = prod * a % mod\n    return prod\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(pow(n, k))", "t = int(input())\nfor i in range(t):\n    (n, k) = list(map(int, input().split()))\n    print(n ** k % 1000000007)", "mod = 1000000007\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ans = 1\n    for x in range(1, k + 1):\n        ans = ans * n % mod\n    print(ans)", "mod = int(10 ** 9) + 7\nfor _ in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    print(pow(n, k, mod))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, k) = map(int, input().split())\n    ans = n\n    for i in range(1, k):\n        ans = ans * n % 1000000007\n    print(ans)", "t = int(input())\nfor i in range(t):\n    line = input().split(' ')\n    n = int(line[0])\n    k = int(line[1])\n    mod = 10 ** 9 + 7\n    ans = n\n    for i in range(k - 1):\n        ans = n * ans % mod\n    print(ans)", "for s in [*open(0)][1:]:\n    print(pow(*map(int, s.split()), 10 ** 9 + 7))", "def main():\n    for _ in range(int(input())):\n        (n, m) = tuple(map(int, input().split()))\n        print(n ** m % 1000000007)\nmain()", "t = int(input())\nfor i in range(t):\n    (n, k) = input().split()\n    n = int(n)\n    k = int(k)\n    m = 1000000007\n    ans = pow(n, k) % m\n    print(ans)", "mod = 10 ** 9 + 7\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(pow(n, k, mod))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(pow(n, k, 1000000007))", "def getarray():\n    return list(map(int, input().split()))\n\ndef getints():\n    return map(int, input().split())\n\ndef getint():\n    return int(input())\nmod = 10 ** 9 + 7\n\ndef solve():\n    (n, k) = getints()\n    ans = 1\n    for i in range(k):\n        ans = ans * n % mod\n    print(ans)\nfor t in range(getint()):\n    solve()", "T = int(input())\nfor TT in range(T):\n    aaa = input().split(' ')\n    n = int(aaa[0])\n    k = int(aaa[1])\n    print(pow(n, k, int(1000000000.0 + 7)))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    print(n ** k % 1000000007)", "mod = 10 ** 9 + 7\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    print(pow(n, k, mod))", "m = 1000000007\nn = int(input())\nfor _ in range(n):\n    l = input().split()\n    n = int(l[0])\n    k = int(l[1])\n    print(pow(n, k, m))"]