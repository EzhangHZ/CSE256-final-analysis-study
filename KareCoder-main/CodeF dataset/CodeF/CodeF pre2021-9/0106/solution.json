["for t in range(int(input())):\n    n = int(input())\n    a = [str(x) for x in input().split()]\n    a = a[::-1]\n    print(' '.join(a))", "t = int(input())\nfor i in range(t):\n    input()\n    p = input().split(' ')\n    p.reverse()\n    print(' '.join(p))", "for t in range(int(input())):\n    input()\n    print(' '.join(input().split()[::-1]))", "def func():\n    t = int(input())\n    for _ in range(t):\n        _ = int(input())\n        lst = input().strip().split()\n        print(' '.join(lst[::-1]))\nfunc()", "import math\nt = int(input(''))\nfor i in range(t):\n    n = int(input(''))\n    a = list(map(int, input('').split()))\n    a.reverse()\n    print(' '.join(map(str, a)))", "def solve():\n    out = []\n    no_of_test_cases = int(input())\n    for i in range(no_of_test_cases):\n        no_of_elements = int(input())\n        permutation = input().split()\n        permutation.reverse()\n        print(' '.join((str(x) for x in permutation)))\nsolve()", "for _ in range(int(input())):\n    n = int(input())\n    print(' '.join(reversed(input().split())))", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    sx = x[::-1]\n    print(' '.join([str(i) for i in sx]))", "t1 = int(input())\nfor _ in range(t1):\n    n = int(input())\n    t = ''\n    a = list(map(str, input().split()))\n    a.reverse()\n    for i in a:\n        t += i + ' '\n    print(t[:-1])", "def solve():\n    n = int(input())\n    a = [int(i) for i in input().split()][::-1]\n    return ' '.join([str(i) for i in a])\nt = int(input())\nans = []\nwhile t:\n    ans.append(str(solve()))\n    t -= 1\nprint('\\n'.join(ans))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    n = list(map(int, input().split()))\n    n.reverse()\n    print(' '.join(map(str, n)))", "TC = int(input())\nfor ti in range(TC):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(' '.join(map(str, l[::-1])))", "def get_primeFactor(n):\n    res = [1]\n    x = 2\n    while x * x <= n:\n        while n % x == 0:\n            res.append(x)\n            n //= x\n        x += 1\n    if n > 1:\n        res.append(n)\n    return res\n\ndef getFactor(n):\n    res = {1}\n    x = 2\n    while x * x <= n:\n        if n % x == 0:\n            res.add(x)\n            res.add(n // x)\n        x += 1\n    return res\nfor _ in range(int(input())):\n    input()\n    ar = reversed(list(map(int, input().split())))\n    res = ' '.join((str(i) for i in ar))\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    p = [int(x) for x in input().split()]\n    p.reverse()\n    print(' '.join((repr(y) for y in p)))", "s = input()\nwhile True:\n    try:\n        s = input()\n        s = ' '.join(list(map(str, list(map(int, input().split(' ')))[::-1])))\n        print(s)\n    except:\n        break", "import sys\nT = int(sys.stdin.readline())\nfor i in range(T):\n    N = int(sys.stdin.readline())\n    nums = list(map(int, sys.stdin.readline().split()))\n    print(' '.join([str(x) for x in reversed(nums)]))", "import sys\nT = int(sys.stdin.readline())\nfor i in range(T):\n    N = int(sys.stdin.readline())\n    nums = list(map(int, sys.stdin.readline().split()))\n    print(' '.join([str(x) for x in nums[::-1]]))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = arr[::-1]\n    print(' '.join((str(e) for e in s)))", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(input().split())\n    a.reverse()\n    print(' '.join(a))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    li = input().split()\n    print(' '.join(li[::-1]))", "import math\nimport sys\nimport itertools\nimport fractions\nwtf = sys.stdin.read()\nwtf = wtf.strip().split('\\n')\nfor t in [wtf[i:i + 2] for i in range(1, len(wtf), 2)]:\n    n = int(t[0])\n    P = list(map(int, t[1].split()))\n    print(' '.join(map(str, P[::-1])))", "for s in [*open(0)][2::2]:\n    print(*s.split()[::-1])", "for s in [*open(0)][2::2]:\n    print(*s.split()[::-1])", "for s in [*open(0)][2::2]:\n    print(*s.split()[::-1])", "def main(args):\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        m = list(input().split())\n        m.reverse()\n        print(' '.join(m))\nimport sys\nsys.exit(main(sys.argv))", "for w in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    print(' '.join((str(x) for x in a[::-1])))", "def main():\n    answers = []\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        p = list(map(int, input().split()))\n        p.reverse()\n        answers.append(p)\n    for answer in answers:\n        print(' '.join(map(str, answer)))\nmain()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.reverse()\n    print(' '.join(map(str, a)))", "def solve():\n    n = int(input())\n    p = list(input().split())\n    p.reverse()\n    print(' '.join(p))\nruns = int(input())\nwhile runs > 0:\n    solve()\n    runs -= 1", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    data = [d for d in sys.stdin.readline().split()]\n    print(' '.join(data[::-1]))", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    arr = input()\n    print(' '.join(list(reversed(arr.split(' ')))))", "for t in range(int(input())):\n    n = int(input())\n    print(' '.join(reversed(input().split())))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = input()\n    permutation = input().strip().split(' ')\n    print(' '.join(reversed(permutation)))", "def main():\n    trials = input()\n    for i in range(int(trials)):\n        input()\n        perm = input().split()\n        perm.reverse()\n        print(' '.join(perm))\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    print(' '.join(list(reversed(input().split()))))", "def algo(n, arr):\n    return ' '.join(reversed(arr))\nfor _ in range(int(input())):\n    n = int(input())\n    arr = input().split()\n    ans = algo(n, arr)\n    print(ans)", "for i in range(int(input())):\n    l = int(input().rstrip())\n    lis = list(input().split())\n    lis.reverse()\n    ans = ' '.join(lis)\n    print(ans)", "inp = ''\nt = int(input())\nfor i in range(t):\n    n = input()\n    p = input().split()\n    p = p[::-1]\n    print(' '.join(p))", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = list(input().split())\n    print(' '.join(reversed(a)))", "from sys import stdin, stdout\nt = int(stdin.readline())\nfor i in range(t):\n    n = int(stdin.readline())\n    p = stdin.readline().split()\n    p.reverse()\n    print(' '.join(p))", "T = int(input())\nfor i in range(T):\n    n = int(input())\n    s = list(input().strip().split(' '))\n    s = s[::-1]\n    print(' '.join(s).strip())", "t = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    st = list(map(str, input().split(' ')))\n    st.reverse()\n    ans.append(' '.join(st))\nfor ass in ans:\n    print(ass)", "for _ in range(int(input())):\n    n = int(input())\n    arr = input().split()\n    print(' '.join(arr[::-1]))", "def forge_perm(arr):\n    return arr[::-1]\nn = int(input())\nfor i in range(n):\n    size = int(input())\n    arr = list(input().split())\n    result = forge_perm(arr)\n    res = ' '.join(result)\n    print(res)", "def perm(arr):\n    return ' '.join(arr[::-1])\nt = int(input())\nfor u in range(t):\n    x = input()\n    print(perm(list(input().strip().split())))", "n = int(input())\nfor i in range(n):\n    k = int(input())\n    L = [i for i in input().strip('\\r').split(' ')]\n    L.reverse()\n    print(' '.join(L))", "def solve(A):\n    pass\nt = int(input())\nres = []\nwhile t:\n    length = int(input())\n    arr = input().split(' ')\n    res.append(list(reversed(arr)))\n    t -= 1\nfor r in res:\n    s = ' '.join(r)\n    print(s)", "for _ in range(int(input())):\n    input()\n    print(' '.join(input().split()[::-1]))", "n = int(input())\nfor i in range(n):\n    m = int(input())\n    list1 = list(map(int, input().split()))\n    list1.reverse()\n    print(' '.join((str(i) for i in list1)))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = reversed(a)\n    b = list(map(str, b))\n    print(' '.join(b))", "for _ in range(int(input())):\n    n = int(input())\n    w = input().split()\n    print(*w[::-1])", "for _ in range(int(input())):\n    n = int(input())\n    l = input().split()\n    l = l[::-1]\n    print(*l)", "for s in [*open(0)][2::2]:\n    print(*s.split()[::-1])", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    print(*p[::-1])", "a = int(input())\nfor i in range(0, a):\n    b = int(input())\n    arr = list(map(int, input().split()))\n    arr = arr[::-1]\n    print(' '.join(map(str, arr)))", "for t in range(int(input())):\n    input()\n    print(' '.join(input().split()[::-1]))", "for i in range(int(input())):\n    n = int(input())\n    m = reversed(list(map(str, input().split())))\n    print(' '.join(m))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    num_list = input().split()\n    num_list.reverse()\n    print(' '.join(num_list))", "def run():\n    output = []\n    for i in range(int(input())):\n        _ = input()\n        rev = input().split()\n        rev.reverse()\n        output.append(' '.join(rev))\n    print('\\n'.join(output))\nrun()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    mas = list(map(int, input().split()))\n    print(' '.join(map(str, mas[::-1])))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    p = list(map(int, input().split()))\n    np = p[::-1]\n    print(' '.join(map(str, np)))", "def inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nt = inp()\nres = []\nfor i in range(t):\n    n = inp()\n    l = inlt()\n    l.reverse()\n    print(' '.join([str(x) for x in l]))", "import sys\n\ndef swap(x, y, a):\n    temp = a[x]\n    a[x] = a[y]\n    a[y] = temp\n    return a\n\ndef solve():\n    return None\n\ndef main():\n    q = []\n    for line in sys.stdin.readlines():\n        q.append(line)\n    for i in range(len(q)):\n        q[i] = q[i].rstrip().split(' ')\n        q[i] = [int(x) for x in q[i]]\n    for i in range(1, len(q), 2):\n        a = q[i + 1]\n        a = a[::-1]\n        a = [str(i) for i in a]\n        print(' '.join(a))\nmain()", "def main(input_path=0):\n    with open(input_path) as f:\n        t = int(f.readline().strip())\n        for _ in range(t):\n            n = int(f.readline().strip())\n            permutation = f.readline().strip().split(' ')\n            print(' '.join(reversed(permutation)))\nmain()", "t = int(input())\nfor case in range(t):\n    n = int(input())\n    a = input().split(' ')\n    print(' '.join(a[::-1]))", "import sys\nimport math\nL = []\nL1 = []\nres = []\nuserIn = int(input())\nfor i in range(0, userIn):\n    userIn2 = int(input())\n    x = list(map(str, input().split()))\n    L.append(x)\nfor i in range(0, len(L)):\n    L[i].reverse()\n    res.append(L[i])\nfor i in range(0, len(res)):\n    print(' '.join(res[i]))", "a = int(input())\ni = 0\nwhile i < a:\n    z = input()\n    arr = input().split(' ')\n    i += 1\n    print(' '.join(arr[::-1]))", "for i in range(int(input())):\n    n = int(input())\n    print(' '.join(list(input().split())[::-1]))", "for i in range(int(input())):\n    n = int(input())\n    p = input().split()\n    print(' '.join(p[::-1]))", "from itertools import permutations\nn = int(input())\nfor i in range(n):\n    m = int(input())\n    x = input().split()\n    o = [x[i] + x[i + 1] for i in range(len(x) - 1)]\n    if len(x) % 2 == 0:\n        y = x[::-1]\n        print(' '.join(y))\n    elif len(x) % 2 == 1:\n        y = x[::-1]\n        p = permutations(y)\n        for key in p:\n            q = [key[i] + key[i + 1] for i in range(len(key) - 1)]\n            if q.sort() == o.sort():\n                print(' '.join(key))\n                break", "t = int(input())\nnlist = []\npermutations = []\nfor _ in range(t):\n    nlist.append(int(input()))\n    permutations.append(list(input().split()))\nfor per in permutations:\n    per.reverse()\n    print(' '.join(per))", "n = int(input(''))\n\ndef search(List, newList, length, sig, oList):\n    if len(newList) == length and newList != oList:\n        newSig = [int(newList[e]) + int(newList[e + 1]) for e in range(len(newList)) if e < len(newList) - 1]\n        newSig.sort()\n        valid = True\n        for i in range(length):\n            if oList[i] == newList[i]:\n                valid = False\n                break\n        if valid and newSig == sig:\n            return newList\n    i = 0\n    for char in List:\n        ll = List.copy()\n        del ll[i]\n        ret = search(ll, newList + [char], length, sig, oList)\n        if ret:\n            return ret\n        i += 1\n    return None\nfor _ in range(n):\n    l = input('')\n    p = input('').split(' ')\n    p.reverse()\n    print(' '.join(p))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    perm = input().split()\n    print(' '.join(perm[::-1]))", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef out(ret):\n    print(ret)\n\ndef outlt(ret):\n    print(' '.join(list(map(str, ret))))\n\nclass Solution:\n\n    def main(self, p):\n        return p[::-1]\nt = inp()\nsolution = Solution()\nfor _ in range(t):\n    n = inp()\n    p = inlt()\n    outlt(solution.main(p))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = input().split()[::-1]\n    ans = ''\n    for i in a:\n        ans += i + ' '\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    list1 = list(map(str, input().split()))\n    list2 = list1[-1::-1]\n    print(' '.join(list2))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = arr[::-1]\n    print(' '.join(map(str, arr)))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(input().split())\n    arr = [arr[-i] for i in range(1, n + 1)]\n    print(' '.join(arr))", "for _ in range(int(input())):\n    n = int(input())\n    print(' '.join(reversed(input().split())))", "t = int(input())\nfor j in range(0, t):\n    n = int(input())\n    a = list(map(str, input().split()))\n    a.reverse()\n    print(' '.join(a))", "for s in [*open(0)][2::2]:\n    print(*s.split()[::-1])", "for s in [*open(0)][2::2]:\n    print(*s.split()[::-1])", "for T in range(int(input())):\n    n = int(input())\n    l = input().split()\n    print(*l[::-1])", "for q in [*open(0)][2::2]:\n    print(*q.split()[::-1])", "for i in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    print(*list(reversed(b)))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    p = [int(i) for i in input().split()]\n    print(*p[::-1])", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = a[::-1]\n    print(*a)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(*l[::-1])", "for i in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    print(*l[::-1])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = list(map(int, input().split(' ')))\n    print(*s[::-1])", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    print(*list(map(int, input().split()))[::-1])", "for _ in range(int(input())):\n    n = int(input())\n    print(*list(map(int, input().split()))[::-1])", "for _ in range(int(input())):\n    n = int(input())\n    x = list(map(int, input().split()))\n    y = x[::-1]\n    print(*y)", "for _ in [0] * int(input()):\n    input()\n    print(*[*map(int, input().split())][::-1])", "for i in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    print(*b[::-1])", "for i in range(int(input())):\n    n = int(input())\n    (*a,) = map(int, input().split())\n    print(*a[::-1])", "for i in range(int(input())):\n    n = int(input())\n    (*a,) = map(int, input().split())\n    print(*a[::-1])", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.reverse()\n    print(' '.join(map(str, a)))"]