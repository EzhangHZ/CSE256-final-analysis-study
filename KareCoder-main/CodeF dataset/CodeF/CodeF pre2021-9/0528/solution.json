["for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    initial = list(map(int, input().split()))\n    final = list(map(int, input().split()))\n    painters = list(map(int, input().split()))\n    last = painters[-1]\n    if last in final:\n        x = 0\n        to_be_painted = {}\n        for i in range(n):\n            if initial[i] != final[i]:\n                if final[i] in to_be_painted:\n                    to_be_painted[final[i]].append(i + 1)\n                else:\n                    to_be_painted[final[i]] = [i + 1]\n                if final[i] == last:\n                    x = i + 1\n        if x == 0:\n            x = final.index(last) + 1\n        ans = []\n        for p in painters:\n            if p in to_be_painted:\n                ans.append(str(to_be_painted[p].pop(0)))\n                if not to_be_painted[p]:\n                    del to_be_painted[p]\n            else:\n                ans.append(str(x))\n        if not to_be_painted.keys():\n            print('YES')\n            print(' '.join(ans))\n        else:\n            print('NO')\n    else:\n        print('NO')", "def solve(n, m, a, b, c):\n    weNeedDict = {}\n    for i in range(n):\n        if a[i] != b[i]:\n            if b[i] not in weNeedDict:\n                weNeedDict[b[i]] = [i]\n            else:\n                weNeedDict[b[i]].append(i)\n    avail = {}\n    for i in c:\n        if i not in avail:\n            avail[i] = 1\n        else:\n            avail[i] += 1\n    for i in weNeedDict:\n        if i not in avail:\n            return False\n        if avail[i] < len(weNeedDict[i]):\n            return False\n    if c[m - 1] not in set(b):\n        return False\n    if c[m - 1] not in weNeedDict:\n        lastPos = b.index(c[m - 1]) + 1\n    else:\n        lastPos = weNeedDict[c[m - 1]][0] + 1\n    answer = []\n    for i in c:\n        if i in weNeedDict:\n            pos = weNeedDict[i].pop()\n            answer.append(pos + 1)\n            if not weNeedDict[i]:\n                weNeedDict.__delitem__(i)\n        else:\n            answer.append(lastPos)\n    return answer\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    answer = solve(n, m, a, b, c)\n    if answer:\n        print('YES')\n        for i in answer:\n            print(i, end=' ')\n        print()\n    else:\n        print('NO')", "def solve():\n    d = dict()\n    pd = dict()\n    o = b.index(c[-1])\n    for i in range(m):\n        if c[i] in pd:\n            pd[c[i]] += 1\n        else:\n            pd[c[i]] = 1\n    for i in range(n):\n        if a[i] != b[i]:\n            if b[i] in d:\n                d[b[i]].append(i)\n            else:\n                d[b[i]] = [i]\n        else:\n            b[i] = 0\n    for (k, v) in d.items():\n        if k in pd:\n            if pd[k] < len(v):\n                return ('NO', [])\n        else:\n            return ('NO', [])\n    if c[-1] in b:\n        o = b.index(c[-1])\n    order = []\n    for i in range(m):\n        if c[i] in d:\n            if len(d[c[i]]) != 0:\n                order.append(d[c[i]][-1] + 1)\n                d[c[i]].pop()\n            else:\n                order.append(o + 1)\n        else:\n            order.append(o + 1)\n    return ('YES', order)\nt = int(input())\nfor z in range(t):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    if c[-1] not in b:\n        print('NO')\n    else:\n        (p, q) = solve()\n        if p == 'NO':\n            print('NO')\n        else:\n            print('YES')\n            print(*q)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    last = c[-1]\n    if last in b:\n        idx = -1\n        for i in range(n):\n            if b[i] == last:\n                idx = i\n                break\n        ch = [[] for i in range(n + 1)]\n        ans = [-1 for i in range(m)]\n        for i in range(n):\n            if a[i] != b[i]:\n                ch[b[i]].append(i + 1)\n        if ch[last]:\n            ans[-1] = ch[last].pop()\n            idx = ans[-1] - 1\n        else:\n            ans[-1] = idx + 1\n        for i in range(m - 1):\n            if ch[c[i]]:\n                ans[i] = ch[c[i]].pop()\n            else:\n                ans[i] = idx + 1\n        if all((not ch[i] for i in range(n + 1))):\n            print('YES')\n            print(*ans)\n        else:\n            print('NO')\n    else:\n        print('NO')", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    f = list(map(int, input().split()))\n    s = list(map(int, input().split()))\n    an = list(map(int, input().split()))\n    l = [[] for i in range(a + 1)]\n    sa = 0\n    bsa = 0\n    amo = 0\n    for i in range(a):\n        if s[i] == an[-1] and (sa == 0 or f[i] != s[i]):\n            sa = i + 1\n        if f[i] != s[i]:\n            l[s[i]].append(i)\n            amo += 1\n    if sa == 0:\n        print('NO')\n        continue\n    ans = []\n    for i in range(1, b + 1):\n        if len(l[an[-i]]) > 0:\n            ans.append(l[an[-i]][-1] + 1)\n            l[an[-i]].pop()\n            amo -= 1\n        else:\n            ans.append(sa)\n    if amo != 0:\n        print('NO')\n    else:\n        ans.reverse()\n        print('YES')\n        for i in ans:\n            print(i, end=' ')\n        print()", "import sys\nt = int(input())\nwhile t > 0:\n    (n, m) = map(int, input().split())\n    a1 = [[] for i in range(0, n + 1)]\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    for i in range(0, n):\n        if b[i] != a[i]:\n            a1[b[i]].append(i)\n    special_color = c[m - 1]\n    if len(a1[special_color]) == 0:\n        for i in range(0, n):\n            if b[i] == special_color:\n                a1[special_color].append(i)\n                break\n    if len(a1[special_color]) == 0:\n        print('NO')\n    else:\n        ans = list()\n        for i in range(0, m):\n            if len(a1[c[i]]) != 0:\n                ans.append(a1[c[i]][0] + 1)\n                if c[i] != special_color or len(a1[special_color]) > 1 or i == m - 1:\n                    a1[c[i]].remove(a1[c[i]][0])\n            else:\n                ans.append(a1[special_color][0] + 1)\n        check = 0\n        for i in range(0, n + 1):\n            if len(a1[i]) != 0:\n                check = 1\n                break\n        if check == 1:\n            print('NO')\n        else:\n            print('YES')\n            for i in ans:\n                print(i, end=' ')\n            print('')\n    t -= 1", "p = lambda : list(map(int, input().split()))\nr = print\ng = range\nl = len\nfor _ in '.' * p()[0]:\n    (N, M) = p()\n    L = N + 1\n    A = p()\n    B = p()\n    C = p()[::-1]\n    X = [[] for i in g(L)]\n    Y = [[] for i in g(L)]\n    for i in g(N):\n        if A[i] == B[i]:\n            X[A[i]].append(i + 1)\n        else:\n            Y[B[i]].append(i + 1)\n    P = []\n    for i in g(M):\n        c = C[i]\n        if l(Y[c]):\n            P.append(Y[c].pop())\n        elif i:\n            P.append(P[0])\n        elif l(X[c]):\n            P.append(X[c][0])\n        else:\n            Y[0].append(-1)\n            P.append(0)\n    if sum([l(Y[i]) for i in g(L)]) < 1:\n        r('YES')\n        r(*P[::-1])\n    else:\n        r('NO')"]