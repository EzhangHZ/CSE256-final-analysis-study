["for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    g = [input() for _ in range(n)]\n    a = [('RW' * m)[:m], ('WR' * m)[:m]]\n\n    def chk():\n        for i in range(n):\n            for j in range(m):\n                if g[i][j] != '.' and g[i][j] != a[i % 2][j]:\n                    return False\n        return True\n    if chk():\n        print('YES')\n        for i in range(n):\n            print(a[i % 2])\n    else:\n        (a[0], a[1]) = (a[1], a[0])\n        if chk():\n            print('YES')\n            for i in range(n):\n                print(a[i % 2])\n        else:\n            print('NO')", "for _ in [0] * int(input()):\n    (n, m) = map(int, input().split())\n    w = [input() for i in range(n)]\n    s = [('RW' * m)[:m], ('WR' * m)[:m]]\n\n    def check():\n        for i in range(n):\n            for j in range(m):\n                if w[i][j] != '.' and w[i][j] != s[i % 2][j]:\n                    return False\n        else:\n            return True\n    if check():\n        print('YES')\n        for i in range(n):\n            print(s[i % 2])\n    else:\n        (s[0], s[1]) = (s[1], s[0])\n        if check():\n            print('YES')\n            for i in range(n):\n                print(s[i % 2])\n        else:\n            print('NO')", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    matrix = [input() for _ in range(n)]\n    s = [('RW' * m)[:m], ('WR' * m)[:m]]\n\n    def check():\n        for i in range(n):\n            for j in range(m):\n                if matrix[i][j] != '.' and matrix[i][j] != s[i % 2][j]:\n                    return False\n        return True\n    if check():\n        print('YES')\n        for i in range(n):\n            print(s[i % 2])\n    else:\n        (s[0], s[1]) = (s[1], s[0])\n        if check():\n            print('YES')\n            for i in range(n):\n                print(s[i % 2])\n        else:\n            print('NO')", "def solve():\n    (n, m) = map(int, input().split())\n    v1 = 'WR' * (m // 2) + 'W' * (m % 2)\n    v2 = 'RW' * (m // 2) + 'R' * (m % 2)\n    m1 = []\n    m2 = []\n    for i in range(n):\n        if i % 2:\n            m1.append(v1)\n            m2.append(v2)\n        else:\n            m1.append(v2)\n            m2.append(v1)\n    matched_v = set()\n    for i in range(n):\n        s = input()\n        for j in range(m):\n            if s[j] in ('W', 'R'):\n                if s[j] == m1[i][j]:\n                    matched_v.add(1)\n                else:\n                    matched_v.add(2)\n    if len(matched_v) == 2:\n        print('NO')\n        return\n    print('YES')\n    try:\n        matched_v = tuple(matched_v)[0]\n        if matched_v == 1:\n            print(*m1, sep='\\n')\n        else:\n            print(*m2, sep='\\n')\n    except:\n        print(*m1)\nfor _ in range(int(input())):\n    solve()", "n = int(input())\n\ndef solve():\n    (r, w) = list(map(int, input().split()))\n    matrix = []\n    for i in range(r):\n        line = input()\n        matrix.append(line)\n    odd = set()\n    even = set()\n    for i in range(r):\n        for j in range(w):\n            if i % 2 == j % 2:\n                odd.add(matrix[i][j])\n            else:\n                even.add(matrix[i][j])\n    if 'R' in odd and 'W' in odd or ('R' in even and 'W' in even) or ('W' in even and 'W' in odd) or ('R' in even and 'R' in odd):\n        print('NO')\n        return\n    else:\n        print('YES')\n        if 'R' in even or 'W' in odd:\n            t = 'RW' * (w + 2)\n            for i in range(r):\n                if i % 2 == 0:\n                    print(t[1:w + 1])\n                else:\n                    print(t[:w])\n        else:\n            t = 'WR' * (w + 2)\n            for i in range(r):\n                if i % 2 == 0:\n                    print(t[1:w + 1])\n                else:\n                    print(t[:w])\nfor i in range(n):\n    solve()", "def f(n, m, l, x):\n    if x:\n        p = 'R'\n    else:\n        p = 'W'\n    old = p\n    for i in range(n):\n        for j in range(m):\n            if l[i][j] == p:\n                if p == 'R':\n                    p = 'W'\n                else:\n                    p = 'R'\n            elif l[i][j] == '.':\n                l[i][j] = p\n                if p == 'R':\n                    p = 'W'\n                else:\n                    p = 'R'\n            else:\n                return [False, 0]\n        if old == 'W':\n            p = 'R'\n        else:\n            p = 'W'\n        old = p\n    return [True, l]\nfor i in range(int(input())):\n    (n, m) = map(int, input().split())\n    lx1 = []\n    for i in range(n):\n        lx1.append(list(input()))\n    lx2 = [x[:] for x in lx1]\n    a = f(n, m, lx1, True)\n    if a[0] == False:\n        b = f(n, m, lx2, False)\n        if b[0] == False:\n            print('NO')\n        else:\n            l = b[1]\n            print('YES')\n            for i in l:\n                print(''.join(i))\n    else:\n        l = a[1]\n        print('YES')\n        for i in l:\n            print(''.join(i))", "from collections import Counter, deque\nfrom itertools import accumulate, product, groupby\nimport operator\nimport math\nfrom functools import reduce\n\ndef solve():\n    (n, m) = [int(char) for char in input().split()]\n    grid = []\n    for r in range(n):\n        row = [char for char in input()]\n        grid.append(row)\n    method_1 = False\n    method_2 = False\n    for (r, c) in product(range(n), range(m)):\n        char = grid[r][c]\n        if char == '.':\n            continue\n        if (r + c) % 2 == 0:\n            if char == 'W':\n                method_1 = True\n            else:\n                method_2 = True\n        elif char == 'W':\n            method_2 = True\n        else:\n            method_1 = True\n    if method_1 and method_2:\n        print('NO')\n        return\n    print('YES')\n    if method_1:\n        for x in range(n):\n            line = ''\n            for y in range(m):\n                line += 'W' if (x + y) % 2 == 0 else 'R'\n            print(line)\n    else:\n        for x in range(n):\n            line = ''\n            for y in range(m):\n                line += 'R' if (x + y) % 2 == 0 else 'W'\n            print(line)\nfor _ in range(int(input())):\n    solve()", "def f(n, m, l, x):\n    if x:\n        p = 'R'\n    else:\n        p = 'W'\n    old = p\n    for i in range(n):\n        for j in range(m):\n            if l[i][j] == p:\n                if p == 'R':\n                    p = 'W'\n                else:\n                    p = 'R'\n            elif l[i][j] == '.':\n                l[i][j] = p\n                if p == 'R':\n                    p = 'W'\n                else:\n                    p = 'R'\n            else:\n                return [False, 0]\n        if old == 'W':\n            p = 'R'\n        else:\n            p = 'W'\n        old = p\n    return [True, l]\nfor i in range(int(input())):\n    (n, m) = map(int, input().split())\n    lx1 = []\n    for i in range(n):\n        lx1.append(list(input()))\n    lx2 = [x[:] for x in lx1]\n    a = f(n, m, lx1, True)\n    if a[0] == False:\n        b = f(n, m, lx2, False)\n        if b[0] == False:\n            print('NO')\n        else:\n            l = b[1]\n            print('YES')\n            for i in l:\n                print(''.join(i))\n    else:\n        l = a[1]\n        print('YES')\n        for i in l:\n            print(''.join(i))", "from collections import Counter, deque\nfrom itertools import accumulate, product, groupby\nimport operator\nimport math\nfrom functools import reduce\n\ndef solve():\n    (R, C) = [int(char) for char in input().split()]\n    board = []\n    for r in range(R):\n        row = [char for char in input()]\n        board.append(row)\n    (w1, w2) = (False, False)\n    for x in range(R):\n        for y in range(C):\n            char = board[x][y]\n            if char != '.':\n                if (x + y) % 2 == 0:\n                    if char == 'W':\n                        w1 = True\n                    else:\n                        w2 = True\n                elif char == 'W':\n                    w2 = True\n                else:\n                    w1 = True\n    if w1 and w2:\n        print('NO')\n        return\n    else:\n        print('YES')\n        if w1:\n            for x in range(R):\n                line = ''\n                for y in range(C):\n                    line += 'W' if (x + y) % 2 == 0 else 'R'\n                print(line)\n        else:\n            for x in range(R):\n                line = ''\n                for y in range(C):\n                    line += 'R' if (x + y) % 2 == 0 else 'W'\n                print(line)\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = [' ' for i in range(n)]\n    a = [' ' for i in range(n)]\n    b = [' ' for i in range(n)]\n    for i in range(n):\n        l[i] = input()\n        if i % 2 == 0:\n            a[i] = 'RW' * (m // 2)\n            a[i] += 'R' * (m - 2 * (m // 2))\n            b[i] = 'WR' * (m // 2)\n            b[i] += 'W' * (m - 2 * (m // 2))\n        else:\n            b[i] = 'RW' * (m // 2)\n            b[i] += 'R' * (m - 2 * (m // 2))\n            a[i] = 'WR' * (m // 2)\n            a[i] += 'W' * (m - 2 * (m // 2))\n    c1 = 1\n    c2 = 1\n    for i in range(n):\n        for j in range(m):\n            if l[i][j] != '.':\n                if l[i][j] != a[i][j]:\n                    c1 = 0\n                    break\n        if c1 == 0:\n            break\n    for i in range(n):\n        for j in range(m):\n            if l[i][j] != '.':\n                if l[i][j] != b[i][j]:\n                    c2 = 0\n                    break\n        if c2 == 0:\n            break\n    if c1 + c2 > 0:\n        print('YES')\n    else:\n        print('NO')\n    if c1 != 0:\n        for i in range(n):\n            print(a[i])\n    elif c2 != 0:\n        for i in range(n):\n            print(b[i])", "for _ in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    l = []\n    for i in range(n):\n        s = input()\n        l.append(list(s))\n\n    def check(a, b):\n        t = True\n        for i in range(n):\n            if i % 2 == 0:\n                t = True\n            else:\n                t = False\n            for j in range(m):\n                if t:\n                    if l[i][j] == b:\n                        return False\n                elif l[i][j] == a:\n                    return False\n                t ^= True\n        return True\n\n    def fun(a, b):\n        t = True\n        for i in range(n):\n            if i % 2 == 0:\n                t = True\n            else:\n                t = False\n            for j in range(m):\n                if t:\n                    l[i][j] = a\n                else:\n                    l[i][j] = b\n                t ^= True\n    flag = check('R', 'W')\n    if flag:\n        fun('R', 'W')\n    else:\n        flag = check('W', 'R')\n        if flag:\n            fun('W', 'R')\n    if flag:\n        print('YES')\n        for i in range(n):\n            print(''.join(l[i]))\n    else:\n        print('NO')", "from collections import Counter, deque\nfrom itertools import accumulate, product, groupby\nimport operator\nimport math\nfrom functools import reduce\n\ndef solve():\n    (R, C) = [int(char) for char in input().split()]\n    board = []\n    for r in range(R):\n        row = [char for char in input()]\n        board.append(row)\n    (w1, w2) = (False, False)\n    for x in range(R):\n        for y in range(C):\n            if board[x][y] != '.':\n                if (board[x][y] == 'W') == ((x + y) % 2 == 0):\n                    w1 = True\n                else:\n                    w2 = True\n    if w1 and w2:\n        print('NO')\n        return\n    else:\n        print('YES')\n        if w1:\n            for x in range(R):\n                line = ''\n                for y in range(C):\n                    line += 'W' if (x + y) % 2 == 0 else 'R'\n                print(line)\n        else:\n            for x in range(R):\n                line = ''\n                for y in range(C):\n                    line += 'R' if (x + y) % 2 == 0 else 'W'\n                print(line)\nfor _ in range(int(input())):\n    solve()", "test_case_num = int(input())\nRED_EVEN = 'RW' * 1000\nRED_ODD = 'WR' * 1000\nfor _ in range(test_case_num):\n    inp = input().split()\n    n = int(inp[0])\n    m = int(inp[1])\n    Red_even = True\n    Red_odd = True\n    for i in range(n):\n        line = input()\n        line_pos = i % 2 == 0\n        for j in range(m):\n            if line[j] == 'R':\n                if j % 2 == 0:\n                    if line_pos:\n                        Red_odd = False\n                    else:\n                        Red_even = False\n                elif line_pos:\n                    Red_even = False\n                else:\n                    Red_odd = False\n            elif line[j] == 'W':\n                if j % 2 == 0:\n                    if line_pos:\n                        Red_even = False\n                    else:\n                        Red_odd = False\n                elif line_pos:\n                    Red_odd = False\n                else:\n                    Red_even = False\n    if Red_even:\n        print('YES')\n        for i in range(n):\n            if i % 2 == 0:\n                print(RED_EVEN[:m])\n            else:\n                print(RED_ODD[:m])\n    elif Red_odd:\n        print('YES')\n        for i in range(n):\n            if i % 2 == 0:\n                print(RED_ODD[:m])\n            else:\n                print(RED_EVEN[:m])\n    else:\n        print('NO')", "iter = int(input())\nfor iters in range(iter):\n    (n, m) = input().split(' ')\n    (n, m) = (int(n), int(m))\n    array = ['.' * m] * n\n    for i in range(n):\n        array[i] = input()\n        valid = True\n        found1 = False\n        R = 0\n        W = 0\n    for i in range(n):\n        for j in range(m):\n            if found1 == False:\n                if array[i][j] == '.':\n                    pass\n                elif array[i][j] == 'R':\n                    R = (i + j) % 2\n                    W = (R + 1) % 2\n                    found1 = True\n                else:\n                    R = (i + j + 1) % 2\n                    W = (R + 1) % 2\n                    found1 = True\n            elif array[i][j] == '.':\n                pass\n            elif array[i][j] == 'R':\n                if (i + j) % 2 != R:\n                    valid = False\n                    break\n                else:\n                    continue\n            elif (i + j) % 2 != W:\n                valid = False\n                break\n            else:\n                continue\n        if valid == False:\n            break\n    if valid == False:\n        print('NO')\n    else:\n        print('YES')\n        if R == 1:\n            even = 'W'\n            odd = 'R'\n        else:\n            odd = 'W'\n            even = 'R'\n        first_Row = (even + odd) * (m // 2) + even * (m % 2)\n        second_row = (odd + even) * (m // 2) + odd * (m % 2)\n        for i in range(n):\n            if i % 2 == 0:\n                print(first_Row)\n            else:\n                print(second_row)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    check = False\n    l = []\n    m1 = []\n    m2 = []\n    mx1 = True\n    mx2 = True\n    for i in range(n):\n        a = input()\n        l.append(a)\n    s = 'RW' * m\n    for i in range(n):\n        if i % 2 == 0:\n            m1.append(s[:m])\n            m2.append(s[1:m + 1])\n        else:\n            m1.append(s[1:m + 1])\n            m2.append(s[:m])\n    for i in range(n):\n        for j in range(m):\n            if l[i][j] != '.' and l[i][j] != m1[i][j]:\n                check = True\n                mx1 = False\n                break\n        if check:\n            break\n    if mx1:\n        print('YES')\n        for i in range(n):\n            print(m1[i])\n    else:\n        check = False\n        for i in range(n):\n            for j in range(m):\n                if l[i][j] != '.' and l[i][j] != m2[i][j]:\n                    check = True\n                    mx2 = False\n                    break\n            if check:\n                break\n        if mx2:\n            print('YES')\n            for i in range(n):\n                print(m2[i])\n        else:\n            print('NO')", "import math\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        arr.append(input())\n    st = ''\n    for i in range(m):\n        if i % 2 == 0:\n            st += 'R'\n        else:\n            st += 'W'\n    st1 = st[1:]\n    if m % 2 == 0:\n        st1 += 'R'\n    else:\n        st1 += 'W'\n    isst = True\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '.':\n                continue\n            if i % 2 == 0:\n                if arr[i][j] != st[j]:\n                    isst = False\n                    break\n            elif arr[i][j] != st1[j]:\n                isst = False\n                break\n    isst1 = True\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == '.':\n                continue\n            if i % 2 != 0:\n                if arr[i][j] != st[j]:\n                    isst1 = False\n                    break\n            elif arr[i][j] != st1[j]:\n                isst1 = False\n                break\n    if not (isst1 or isst):\n        print('NO')\n    else:\n        print('YES')\n        if isst:\n            for i in range(n):\n                if i % 2 == 0:\n                    print(st)\n                else:\n                    print(st1)\n        else:\n            for i in range(n):\n                if i % 2 != 0:\n                    print(st)\n                else:\n                    print(st1)", "for _ in range(0, int(input())):\n    (n, m) = map(int, input().split())\n    sr = 0\n    f = False\n    for r in range(0, n):\n        for (i, x) in enumerate(input()):\n            if x == 'W' and i % 2 == r % 2 or (x == 'R' and i % 2 != r % 2):\n                f = True\n                if sr == 0 or sr == 1:\n                    sr = 1\n                else:\n                    sr = -1\n            if x == 'R' and i % 2 == r % 2 or (x == 'W' and i % 2 != r % 2):\n                f = True\n                if sr == 0 or sr == 2:\n                    sr = 2\n                else:\n                    sr = -1\n    if sr == -1:\n        print('NO')\n    else:\n        print('YES')\n        w = sr % 2\n        for i in range(0, n):\n            if i % 2 == w:\n                print(('RW' * m)[:m])\n            else:\n                print(('WR' * m)[:m])", "tests = int(input())\nfor _ in range(tests):\n    (n, m) = list(map(int, input().split()))\n    rw = -1\n    res = True\n    for i in range(n):\n        s = list(input())\n        if not res:\n            continue\n        for j in range(m):\n            if not res:\n                break\n            if s[j] == 'R':\n                if rw == -1:\n                    rw = i + j & 1\n                elif rw != i + j & 1:\n                    res = False\n                    break\n            elif s[j] == 'W':\n                if rw == -1:\n                    rw = i + j + 1 & 1\n                elif rw != i + j + 1 & 1:\n                    res = False\n                    break\n    if not res:\n        print('NO')\n    else:\n        if rw == -1:\n            rw = 0\n        print('YES')\n        for i in range(n):\n            print(''.join([['R', 'W'][j + i + 1 & 1 == rw] for j in range(m)]))", "for i in range(int(input())):\n    (y, x) = map(int, input().split())\n    m = [input() for i in range(y)]\n    r = [''.join(('RW'[(i + j) % 2] for j in range(x))) for i in range(y)]\n    w = [''.join(('WR'[(i + j) % 2] for j in range(x))) for i in range(y)]\n    if all((m[i][j] == '.' or m[i][j] == r[i][j] for i in range(y) for j in range(x))):\n        print('YES')\n        [print(i) for i in r]\n    elif all((m[i][j] == '.' or m[i][j] == w[i][j] for i in range(y) for j in range(x))):\n        print('YES')\n        [print(i) for i in w]\n    else:\n        print('NO')", "def generate_flag(first_row_is_white, colors):\n    flag = []\n    for i in range(n):\n        new_row = []\n        for j in range(m):\n            selected_color = (j + i + first_row_is_white) % 2\n            new_row.append(colors[selected_color])\n        flag.append(new_row)\n    return flag\n\ndef print_flag(flag):\n    for row in flag:\n        print(''.join(row))\n\ndef compare_flags(generated_flag, given_flag):\n    for (row_1, row_2) in zip(generated_flag, given_flag):\n        for (color_1, color_2) in zip(row_1, row_2):\n            if color_2 != '.' and color_1 != color_2:\n                return False\n    return True\nCOLORS = 'WR'\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    first_option = generate_flag(True, COLORS)\n    second_option = generate_flag(False, COLORS)\n    given_flag = []\n    for i in range(n):\n        row = list(input())\n        given_flag.append(row)\n    if compare_flags(first_option, given_flag):\n        print('YES')\n        print_flag(first_option)\n    elif compare_flags(second_option, given_flag):\n        print('YES')\n        print_flag(second_option)\n    else:\n        print('NO')", "def switch(c):\n    return 'R' if c == 'W' else 'W'\n\ndef task():\n    (n, m) = map(int, input().split())\n    grid = []\n    for _ in range(n):\n        grid.append(list(input()))\n    first = None\n    for i in range(n):\n        for j in range(m):\n            if grid[i][j] != '.':\n                c = grid[i][j]\n                if j % 2 == 1:\n                    c = switch(c)\n                if i % 2 == 1:\n                    c = switch(c)\n                first = c\n                break\n    if not first:\n        first = 'R'\n    result = []\n    for i in range(n):\n        fC = first\n        res = ''\n        for j in range(m):\n            if grid[i][j] != '.' and grid[i][j] != fC:\n                print('NO')\n                return\n            res += fC\n            fC = switch(fC)\n        result.append(res)\n        first = switch(first)\n    print('YES')\n    for r in result:\n        print(r)\nt = int(input())\nfor _ in range(t):\n    task()", "tests = int(input())\nfor _ in range(tests):\n    (n, m) = list(map(int, input().split()))\n    rw = -1\n    res = True\n    for i in range(n):\n        s = list(input())\n        if not res:\n            continue\n        for j in range(m):\n            if not res:\n                break\n            if s[j] == 'R':\n                if rw == -1:\n                    rw = i + j & 1\n                elif rw != i + j & 1:\n                    res = False\n                    break\n            elif s[j] == 'W':\n                if rw == -1:\n                    rw = i + j + 1 & 1\n                elif rw != i + j + 1 & 1:\n                    res = False\n                    break\n    if not res:\n        print('NO')\n    else:\n        if rw == -1:\n            rw = 0\n        print('YES')\n        for i in range(n):\n            print(''.join([['R', 'W'][j + i + 1 & 1 == rw] for j in range(m)]))", "t = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    ans1 = []\n    ans2 = []\n    for i in range(n):\n        if m % 2 == 0:\n            row1 = 'RW' * (m // 2)\n            row2 = 'WR' * (m // 2)\n        else:\n            row1 = 'RW' * (m // 2) + 'R'\n            row2 = 'WR' * (m // 2) + 'W'\n        if i % 2 == 0:\n            ans1.append(row1)\n            ans2.append(row2)\n        else:\n            ans1.append(row2)\n            ans2.append(row1)\n    sum1 = 0\n    sum2 = 0\n    count = 0\n    for i in range(n):\n        inp = input()\n        for j in range(m):\n            if inp[j] != '.':\n                count += 1\n                if inp[j] == ans1[i][j]:\n                    sum1 += 1\n                else:\n                    sum2 += 1\n            else:\n                pass\n    if sum1 == count:\n        print('YES')\n        for i in ans1:\n            print(i)\n    elif sum2 == count:\n        print('YES')\n        for i in ans2:\n            print(i)\n    else:\n        print('NO')", "for t in range(int(input())):\n    (N, M) = tuple(map(int, input().split()))\n    A = [input() for n in range(N)]\n    t = None\n    flag = False\n    for n in range(N):\n        for m in range(M):\n            if A[n][m] == '.':\n                continue\n            p = ((A[n][m] == 'W') - n - m) % 2\n            if t == None:\n                t = p\n            elif t != p:\n                flag = True\n                break\n        if flag:\n            break\n    if flag:\n        print('NO')\n    else:\n        print('YES')\n        if t == None:\n            t = 0\n        for n in range(N):\n            R = ''\n            for m in range(M):\n                if (t + n + m) % 2:\n                    R += 'W'\n                else:\n                    R += 'R'\n            print(R)", "for t in range(int(input())):\n    (N, M) = tuple(map(int, input().split()))\n    A = [input() for n in range(N)]\n    t = None\n    flag = False\n    for n in range(N):\n        for m in range(M):\n            if A[n][m] == '.':\n                continue\n            p = ((A[n][m] == 'W') - n - m) % 2\n            if t == None:\n                t = p\n            elif t != p:\n                flag = True\n                break\n        if flag:\n            break\n    if flag:\n        print('NO')\n    else:\n        print('YES')\n        if t == None:\n            t = 0\n        for n in range(N):\n            R = ''\n            for m in range(M):\n                if (t + n + m) % 2:\n                    R += 'W'\n                else:\n                    R += 'R'\n            print(R)", "def solve():\n    (n, m) = (int(x) for x in input().split())\n    field = [list(input()) for _ in range(n)]\n    all_rw = True\n    all_wr = True\n    for i in range(n):\n        for j in range(m):\n            if (i + j) % 2 == 0 and field[i][j] == 'R':\n                all_wr = False\n            if (i + j) % 2 == 1 and field[i][j] == 'W':\n                all_wr = False\n            if (i + j) % 2 == 1 and field[i][j] == 'R':\n                all_rw = False\n            if (i + j) % 2 == 0 and field[i][j] == 'W':\n                all_rw = False\n    precalc = 'RW' * m\n    if all_rw:\n        print('YES')\n        for i in range(n):\n            if i % 2 == 0:\n                print(precalc[:m])\n            else:\n                print(precalc[1:m + 1])\n        return\n    if all_wr:\n        print('YES')\n        for i in range(n):\n            if i % 2 == 1:\n                print(precalc[:m])\n            else:\n                print(precalc[1:m + 1])\n        return\n    print('NO')\nt = int(input())\nfor _ in range(t):\n    solve()", "t = int(input())\nfor i in range(t):\n    (N, M) = tuple(map(int, input().split()))\n    X = [input() for n in range(N)]\n    x = None\n    flag = False\n    for n in range(N):\n        for m in range(M):\n            if X[n][m] == '.':\n                continue\n            p = ((X[n][m] == 'W') - n - m) % 2\n            if x == None:\n                x = p\n            elif x != p:\n                flag = True\n                break\n        if flag:\n            break\n    if flag:\n        print('NO')\n    else:\n        print('YES')\n        if x == None:\n            x = 0\n        for n in range(N):\n            R = ''\n            for m in range(M):\n                if (x + n + m) % 2:\n                    R += 'W'\n                else:\n                    R += 'R'\n            print(R)", "part = {'R': 'W', 'W': 'R'}\n\ndef show(M):\n    for li in M:\n        print(*li)\n    print()\n\ndef make(n, m, c):\n    M = [[None] * m for i in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if (i + j) % 2:\n                M[i][j] = part[c]\n            else:\n                M[i][j] = c\n    return M\n\ndef check(A, B, n, m):\n    for i in range(n):\n        for j in range(m):\n            if A[i][j] != B[i][j] and B[i][j] != '.':\n                return False\n    return True\n\ndef solve(Arr, n, m):\n    for char in ['R', 'W']:\n        M = make(n, m, char)\n        if check(M, Arr, n, m):\n            print('YES')\n            for li in M:\n                print(''.join(li))\n            return\n    print('NO')\nfor case in range(int(input())):\n    (n, m) = map(int, input().split())\n    Arr = []\n    for i in range(n):\n        li = list(input())\n        Arr.append(li)\n    solve(Arr, n, m)", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    a = [list(input()) for i in range(n)]\n    o = ''\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 'R':\n                if (i + j) % 2 == 0:\n                    o = 'R'\n                else:\n                    o = 'W'\n                break\n            elif a[i][j] == 'W':\n                if (i + j) % 2 == 0:\n                    o = 'W'\n                else:\n                    o = 'R'\n                break\n        else:\n            continue\n        break\n    if o == '':\n        o = 'R'\n    reo = 'W' if o == 'R' else 'R'\n    for i in range(n):\n        for j in range(m):\n            if (i + j) % 2 == 0:\n                k = o\n            else:\n                k = reo\n            if a[i][j] in 'WR' and k != a[i][j]:\n                print('NO')\n                break\n            else:\n                a[i][j] = k\n        else:\n            continue\n        break\n    else:\n        print('YES')\n        for i in range(n):\n            print(''.join(a[i]))", "for t in range(int(input())):\n    (N, M) = tuple(map(int, input().split()))\n    A = [input() for n in range(N)]\n    t = None\n    flag = False\n    for n in range(N):\n        for m in range(M):\n            if A[n][m] == '.':\n                continue\n            p = ((A[n][m] == 'W') - n - m) % 2\n            if t == None:\n                t = p\n            elif t != p:\n                flag = True\n                break\n        if flag:\n            break\n    if flag:\n        print('NO')\n    else:\n        print('YES')\n        if t == None:\n            t = 0\n        for n in range(N):\n            R = ''\n            for m in range(M):\n                if (t + n + m) % 2:\n                    R += 'W'\n                else:\n                    R += 'R'\n            print(R)", "n = eval(input())\nfor t in range(n):\n    (N, M) = tuple(map(int, input().split()))\n    A = [input() for n in range(N)]\n    t = None\n    flag = False\n    for n in range(N):\n        for m in range(M):\n            if A[n][m] == '.':\n                continue\n            p = ((A[n][m] == 'W') - n - m) % 2\n            if t == None:\n                t = p\n            elif t != p:\n                flag = True\n                break\n        if flag:\n            break\n    if flag:\n        print('NO')\n    else:\n        print('YES')\n        if t == None:\n            t = 0\n        for n in range(N):\n            R = ''\n            for m in range(M):\n                if (t + n + m) % 2:\n                    R += 'W'\n                else:\n                    R += 'R'\n            print(R)", "s = ['RW', 'WR']\nfor _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l = [input() for i in range(n)]\n    a = [(s[i & 1] * m)[:m] for i in range(n)]\n    c = [(s[i + 1 & 1] * m)[:m] for i in range(n)]\n    (b, d) = (1, 1)\n    for i in range(len(l)):\n        for j in range(len(l[i])):\n            if l[i][j] != '.' and l[i][j] != a[i][j]:\n                b = 0\n            if l[i][j] != '.' and l[i][j] != c[i][j]:\n                d = 0\n    print('YES' if b or d else 'NO')\n    if b:\n        print(*a, sep='\\n')\n    elif d:\n        print(*c, sep='\\n')", "for t in range(int(input())):\n    (N, M) = tuple(map(int, input().split()))\n    AA = [input() for n in range(N)]\n    t = None\n    flag = False\n    for n in range(N):\n        for m in range(M):\n            if AA[n][m] == '.':\n                continue\n            p = ((AA[n][m] == 'W') - n - m) % 2\n            if t == None:\n                t = p\n            elif t != p:\n                flag = True\n                break\n        if flag:\n            break\n    if flag:\n        print('NO')\n    else:\n        print('YES')\n        if t == None:\n            t = 0\n        for n in range(N):\n            R = ''\n            for m in range(M):\n                if (t + n + m) % 2:\n                    R += 'W'\n                else:\n                    R += 'R'\n            print(R)", "for t in range(int(input())):\n    (N, M) = tuple(map(int, input().split()))\n    A = [input() for n in range(N)]\n    t = None\n    flag = False\n    for n in range(N):\n        for m in range(M):\n            if A[n][m] == '.':\n                continue\n            p = ((A[n][m] == 'W') - n - m) % 2\n            if t == None:\n                t = p\n            elif t != p:\n                flag = True\n                break\n        if flag:\n            break\n    if flag:\n        print('NO')\n    else:\n        print('YES')\n        if t == None:\n            t = 0\n        for n in range(N):\n            R = ''\n            for m in range(M):\n                if (t + n + m) % 2:\n                    R += 'W'\n                else:\n                    R += 'R'\n            print(R)", "loop = int(input())\nwhile loop > 0:\n    loop -= 1\n    (a, b) = map(int, input().split())\n    str = []\n    for i in range(a):\n        str.append(input())\n    rsum = -1\n    wsum = -1\n    brk = True\n    for i in range(0, a):\n        if brk:\n            for j in range(0, b):\n                if str[i][j] == 'R' and rsum < 0:\n                    rsum = i + j\n                    brk = False\n                    break\n                elif str[i][j] == 'W' and wsum < 0:\n                    wsum = i + j\n                    brk = False\n                    break\n        else:\n            break\n    res = []\n    if rsum >= 0:\n        for i in range(a):\n            s = ''\n            for j in range(b):\n                if (i + j) % 2 == rsum % 2:\n                    s += 'R'\n                else:\n                    s += 'W'\n            res.append(s)\n    else:\n        for i in range(a):\n            s = ''\n            for j in range(b):\n                if (i + j) % 2 == wsum % 2:\n                    s += 'W'\n                else:\n                    s += 'R'\n            res.append(s)\n    inv = False\n    for i in range(a):\n        for j in range(b):\n            if str[i][j] != '.' and str[i][j] != res[i][j]:\n                inv = True\n    if inv:\n        print('NO')\n    else:\n        print('YES')\n        for i in res:\n            print(i)", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    flag = []\n    for i in range(n):\n        flag.append(input())\n    white = False\n    done = False\n    valid = True\n    for i in range(n):\n        for j in range(m):\n            if flag[i][j] == '.':\n                continue\n            c1 = flag[i][j] == 'W' and (i + j) % 2 == 0\n            c2 = flag[i][j] == 'R' and (i + j) % 2 == 1\n            if not done:\n                white = c1 or c2\n                done = True\n            else:\n                d1 = white and (c1 or c2)\n                d2 = not white and (not c1 and (not c2))\n                if not d1 and (not d2):\n                    valid = False\n                    break\n        if not valid:\n            break\n    if not valid:\n        print('NO')\n        continue\n    res = [[None] * m for _ in range(n)]\n    for i in range(n):\n        for j in range(m):\n            res[i][j] = 'RW'[(i + j) % 2 ^ white]\n    print('YES')\n    for row in res:\n        print(''.join(row))", "for t in range(int(input())):\n    (n, m) = map(int, input().split())\n    k = []\n    l = []\n    l3 = []\n    l1 = 'RW'\n    l2 = 'WR'\n    ll1 = 0\n    ll2 = 0\n    for i in range(n):\n        k.append(input())\n    for i in range((n + 1) // 2):\n        k1 = l1 * m\n        k2 = l2 * m\n        l.append(k1[:m])\n        l.append(k2[:m])\n        l3.append(k2[:m])\n        l3.append(k1[:m])\n    for i in range(n):\n        for j in range(m):\n            if k[i][j] == '.':\n                continue\n            else:\n                if k[i][j] == 'R':\n                    if l[i][j] != 'R' and ll1 == 0:\n                        ll1 = -1\n                    if l3[i][j] != 'R' and ll2 == 0:\n                        ll2 = -1\n                if k[i][j] == 'W':\n                    if l[i][j] != 'W' and ll1 == 0:\n                        ll1 = -1\n                    if l3[i][j] != 'W' and ll2 == 0:\n                        ll2 = -1\n    if ll1 == -1 and ll2 == -1:\n        print('NO')\n    elif ll1 == 0:\n        print('YES')\n        for i in range(n):\n            print(l[i])\n    else:\n        print('YES')\n        for i in range(n):\n            print(l3[i])", "test = int(input())\n\ndef createTable(n, m, k):\n    ans = []\n    for i in range(n):\n        t = []\n        count = k if i % 2 == 0 else 1 - k\n        for j in range(m):\n            t.append(count)\n            count = 1 - count\n        ans.append(t)\n    w = []\n    for i in range(n):\n        t = ''\n        for j in range(m):\n            if ans[i][j]:\n                t += 'W'\n            else:\n                t += 'R'\n        w.append(t)\n    return w\n\ndef same(a, b):\n    (n, m) = (len(a), len(a[0]))\n    for i in range(n):\n        for j in range(m):\n            if b[i][j] == '.':\n                continue\n            elif b[i][j] != a[i][j]:\n                return False\n    return True\nfor _ in range(test):\n    (n, m) = map(int, input().split())\n    matrix = []\n    for i in range(n):\n        matrix.append(input())\n    white = createTable(n, m, 0)\n    red = createTable(n, m, 1)\n    if same(white, matrix):\n        print('YES')\n        for i in range(n):\n            print(white[i])\n    elif same(red, matrix):\n        print('YES')\n        for i in range(n):\n            print(red[i])\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, m) = map(int, input().split())\n    orientation = ['R', 'W']\n    fixed = False\n    flag = True\n    for i in range(n):\n        row = input()\n        for j in range(m):\n            if row[j] == '.':\n                continue\n            if not fixed:\n                if orientation[(i + j) % 2] != row[j]:\n                    orientation.reverse()\n                fixed = True\n            elif orientation[(i + j) % 2] != row[j]:\n                flag = False\n    if not flag:\n        print('NO')\n        return\n    print('YES')\n    for i in range(n):\n        for j in range(m):\n            print(end=orientation[(i + j) % 2])\n        print()\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    R = []\n    W = []\n    for i in range(a):\n        s = input()\n        for j in range(b):\n            if s[j] == 'R':\n                R.append([i, j])\n            elif s[j] == 'W':\n                W.append([i, j])\n    l = []\n    for _ in range(a):\n        l.append(['*' for i in range(b)])\n    for i in range(a):\n        for j in range(b):\n            if (i + j) % 2 == 0:\n                l[i][j] = 'R'\n            else:\n                l[i][j] = 'W'\n    flag = True\n    for i in R:\n        if l[i[0]][i[1]] != 'R':\n            flag = False\n            break\n    if flag:\n        for i in W:\n            if l[i[0]][i[1]] != 'W':\n                flag = False\n                break\n    if flag:\n        print('YES')\n        for i in l:\n            print(''.join(i))\n    else:\n        flag = True\n        for i in range(a):\n            for j in range(b):\n                if (i + j) % 2 != 0:\n                    l[i][j] = 'R'\n                else:\n                    l[i][j] = 'W'\n        for i in R:\n            if l[i[0]][i[1]] != 'R':\n                flag = False\n                break\n        if flag:\n            for i in W:\n                if l[i[0]][i[1]] != 'W':\n                    flag = False\n                    break\n        if flag:\n            print('YES')\n            for i in l:\n                print(''.join(i))\n        else:\n            print('NO')", "t = int(input())\nfor i in range(t):\n    (n, m) = map(int, input().split())\n    flag = []\n    for i in range(n):\n        flag.append(input())\n    white = False\n    done = False\n    valid = True\n    for i in range(n):\n        for j in range(m):\n            if flag[i][j] == '.':\n                continue\n            c1 = flag[i][j] == 'W' and (i + j) % 2 == 0\n            c2 = flag[i][j] == 'R' and (i + j) % 2 == 1\n            if not done:\n                white = c1 or c2\n                done = True\n            else:\n                d1 = white and (c1 or c2)\n                d2 = not white and (not c1 and (not c2))\n                if not d1 and (not d2):\n                    valid = False\n                    break\n        if not valid:\n            break\n    if not valid:\n        print('NO')\n        continue\n    res = [[None] * m for _ in range(n)]\n    for i in range(n):\n        for j in range(m):\n            res[i][j] = 'RW'[(i + j) % 2 ^ white]\n    print('YES')\n    for row in res:\n        print(''.join(row))", "for _ in range(int(input())):\n    (n, m) = list(map(int, input().split()))\n    g = []\n    for i in range(n):\n        g.append(input())\n    mat1 = []\n    mat2 = []\n    flag = True\n    for i in range(n):\n        s1 = ''\n        s2 = ''\n        if flag:\n            s1 += 'R'\n            s2 += 'W'\n        else:\n            s1 += 'W'\n            s2 += 'R'\n        for j in range(1, m):\n            if s1[j - 1] == 'W':\n                s1 += 'R'\n                s2 += 'W'\n            else:\n                s1 += 'W'\n                s2 += 'R'\n        mat1.append(s1)\n        mat2.append(s2)\n        flag = not flag\n    f1 = True\n    f2 = True\n    for i in range(n):\n        for j in range(m):\n            if g[i][j] == '.':\n                continue\n            else:\n                if g[i][j] != mat1[i][j]:\n                    f1 = False\n                if g[i][j] != mat2[i][j]:\n                    f2 = False\n    if f1:\n        print('YES')\n        for i in mat1:\n            print(i)\n    elif f2:\n        print('YES')\n        for i in mat2:\n            print(i)\n    else:\n        print('NO')", "t = int(input())\n\ndef fn(m, o):\n    arr = ''\n    if o:\n        for i in range(m):\n            if o == 1:\n                arr += 'W'\n                o = 0\n            else:\n                arr += 'R'\n                o = 1\n    else:\n        for i in range(m):\n            if o == 0:\n                arr += 'R'\n                o = 1\n            else:\n                arr += 'W'\n                o = 0\n    return arr\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    arr = []\n    for i in range(n):\n        arr.append(input())\n    k = 0\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == 'R':\n                if (i + j) % 2:\n                    k = 1\n                else:\n                    k = 0\n                break\n            if arr[i][j] == 'W':\n                if (i + j) % 2:\n                    k = 0\n                else:\n                    k = 1\n                break\n    ans = []\n    for i in range(n):\n        ans.append(fn(m, k))\n        if k:\n            k = 0\n        else:\n            k = 1\n    l = []\n    b = 1\n    for i in range(n):\n        for j in range(m):\n            if arr[i][j] == 'R' and ans[i][j] != 'R':\n                b = 0\n            if arr[i][j] == 'W' and ans[i][j] != 'W':\n                b = 0\n    if b:\n        print('YES')\n        for i in range(n):\n            print(ans[i])\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, m) = map(int, input().split())\n    orientation = ['R', 'W']\n    fixed = False\n    flag = True\n    for i in range(n):\n        row = input()\n        for j in range(m):\n            if row[j] == '.':\n                continue\n            if not fixed:\n                if orientation[(i + j) % 2] != row[j]:\n                    orientation.reverse()\n                fixed = True\n            elif orientation[(i + j) % 2] != row[j]:\n                flag = False\n    if not flag:\n        print('NO')\n        return\n    print('YES')\n    for i in range(n):\n        for j in range(m):\n            print(end=orientation[(i + j) % 2])\n        print()\nfor _ in range(int(input())):\n    solve()", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    l1 = []\n    l2 = []\n    l3 = []\n    for _ in range(n):\n        l3.append(input())\n    for i in range(n):\n        s1 = s2 = ''\n        for j in range(m):\n            if i % 2 == 0 and j % 2 == 0 or (i % 2 != 0 and j % 2 != 0):\n                s1 += 'R'\n                s2 += 'W'\n            else:\n                s1 += 'W'\n                s2 += 'R'\n        l1.append(s1)\n        l2.append(s2)\n    bool1 = bool2 = True\n    for i in range(n):\n        for j in range(m):\n            if l3[i][j] != '.':\n                if l3[i][j] == l2[i][j]:\n                    bool2 = bool2 and True\n                else:\n                    bool2 = bool2 and False\n                if l3[i][j] == l1[i][j]:\n                    bool1 = bool1 and True\n                else:\n                    bool1 = bool1 and False\n    if bool1 == bool2 == False:\n        print('NO')\n    elif bool1 or (bool1 and bool2):\n        print('YES')\n        for i in range(n):\n            print(l1[i])\n    elif bool2:\n        print('YES')\n        for i in range(n):\n            print(l2[i])", "def solve():\n    (n, m) = map(int, input().split())\n    flag1 = True\n    flag2 = True\n    s1 = [[0] * n for _ in range(n)]\n    s = [[0] * m for _ in range(n)]\n    for i in range(n):\n        s1[i] = list(input())\n    for i in range(n):\n        for j in range(m):\n            if (i + j) % 2 == 0:\n                s[i][j] = 'W'\n            else:\n                s[i][j] = 'R'\n            if s1[i][j] != '.' and s[i][j] != s1[i][j]:\n                flag1 = False\n    for i in range(n):\n        for j in range(m):\n            if (i + j) % 2 == 0:\n                s[i][j] = 'R'\n            else:\n                s[i][j] = 'W'\n            if s1[i][j] != '.' and s[i][j] != s1[i][j]:\n                flag2 = False\n    if flag2:\n        print('YES')\n        for i in range(n):\n            print(''.join(s[i]))\n    elif flag1:\n        print('YES')\n        for i in range(n):\n            for j in range(m):\n                if (i + j) % 2 == 0:\n                    s[i][j] = 'W'\n                else:\n                    s[i][j] = 'R'\n        for i in range(n):\n            print(''.join(s[i]))\n    else:\n        print('NO')\nfor _ in range(int(input())):\n    solve()"]