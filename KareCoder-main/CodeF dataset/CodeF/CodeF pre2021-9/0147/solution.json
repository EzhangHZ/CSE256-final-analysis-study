["for _ in [*open(0)][1:]:\n    (a, b, x, y) = map(int, _.split())\n    print(max(x * b, (a - x - 1) * b, y * a, (b - y - 1) * a))", "m = int(input())\nl = []\nfor i in range(m):\n    (a, b, x, y) = map(int, input().split())\n    x += 1\n    y += 1\n    t1 = (a - x) * b\n    t2 = (x - 1) * b\n    t3 = (b - y) * a\n    t4 = (y - 1) * a\n    l.append(max(t1, t2, t3, t4))\nfor i in l:\n    print(i)", "import math\nimport sys\nimport itertools\nimport fractions\nwtf = sys.stdin.read()\nwtf = wtf.strip().split('\\n')\nfor t in wtf[1:]:\n    (a, b, x, y) = map(int, t.split())\n    ans = []\n    if x - 1 >= 0:\n        ans.append(x * b)\n    if x + 1 < a:\n        ans.append((a - x - 1) * b)\n    if y - 1 >= 0:\n        ans.append(y * a)\n    if y + 1 < b:\n        ans.append((b - y - 1) * a)\n    print(max(ans))", "import math\nimport sys\ninput = sys.stdin.readline\n\ndef print(x, end='\\n'):\n    sys.stdout.write(str(x) + end)\nt = int(input())\nwhile t:\n    t -= 1\n    (a, b, x, y) = map(int, input().split())\n    area = max(x * b, a * y)\n    area1 = max((a - x - 1) * b, a * (b - y - 1))\n    print(max(area, area1))", "import sys\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\n\ndef main():\n    t = II()\n    for _ in range(t):\n        (a, b, x, y) = MI()\n        print(max(x * b, (a - x - 1) * b, a * y, a * (b - y - 1)))\nmain()", "from sys import stdin\n\ndef main():\n    t = int(stdin.readline().strip())\n    for i in range(t):\n        (a, b, x, y) = [int(y) for y in stdin.readline().strip().split()]\n        print(max(x * b, (a - 1 - x) * b, a * y, a * (b - 1 - y)))\nmain()", "t = int(input())\nr = ''\nfor i in range(t):\n    (a, b, x, y) = input().split()\n    a = int(a)\n    b = int(b)\n    x = int(x)\n    y = int(y)\n    s1 = x * b\n    s2 = y * a\n    s3 = (a - x - 1) * b\n    s4 = (b - y - 1) * a\n    s = max(s1, s2, s3, s4)\n    r += str(s) + '\\n'\nprint(r)", "t = int(input())\nfor i in range(t):\n    [a, b, x, y] = list(map(int, input().split(' ')))\n    print(max((a - x - 1) * b, (b - y - 1) * a, x * y, a * y, b * x))", "for _ in range(int(input())):\n    (a, b, x, y) = [*map(int, input().split())]\n    print(max(a * max(y, b - y - 1), b * max(x, a - x - 1)))", "for t in range(int(input())):\n    (a, b, x, y) = map(int, input().split())\n    print(max((a - x - 1) * b, (b - y - 1) * a, a * y, b * x))", "t = int(input())\nfor _ in range(t):\n    (a, b, x, y) = map(int, input().split())\n    print(max(a * (b - y - 1), a * y, (a - x - 1) * b, x * b))", "for _ in range(int(input())):\n    (a, b, x, y) = map(int, input().split())\n    print(max(x * b, (a - x - 1) * b, a * y, a * (b - y - 1)))", "t = int(input())\nfor _ in range(t):\n    (m, n, a, b) = map(int, input().split())\n    a = max(m - a - 1, a)\n    b = max(n - b - 1, b)\n    print(max(m * b, n * a))", "for i in [0] * int(input()):\n    (a, b, x, y) = map(int, input().split())\n    u = x * b\n    d = (a - 1 - x) * b\n    r = y * a\n    l = (b - 1 - y) * a\n    print(max(u, d, r, l))", "for _ in range(int(input())):\n    (a, b, x, y) = map(int, input().split())\n    a1 = x * b\n    a2 = b * (a - x - 1)\n    a3 = a * y\n    a4 = a * (b - y - 1)\n    print(max(a1, a2, a3, a4))", "for _ in ' ' * int(input()):\n    (a, b, c, d) = map(int, input().split())\n    print(max(a * d, b * c, a * (b - d - 1), b * (a - c - 1)))", "for _ in [0] * int(input()):\n    (a, b, x, y) = map(int, input().split())\n    print(max(b * x, b * (a - x - 1), a * y, a * (b - y - 1)))", "def solve():\n    for _ in range(int(input())):\n        (a, b, x, y) = map(int, input().split())\n        num1 = x * b\n        num2 = y * a\n        num3 = (a - x - 1) * b\n        num4 = (b - y - 1) * a\n        print(max(num1, num2, num3, num4))\nsolve()", "def matchArea(w, h, x, y):\n    xArea = x * h if x + 1 > w / 2 else (w - x - 1) * h\n    yArea = y * w if y + 1 > h / 2 else (h - y - 1) * w\n    return xArea if xArea > yArea else yArea\nn = int(input())\ns = ''\nfor i in range(n):\n    (a, b, x, y) = map(int, input().split(' '))\n    s += str(matchArea(a, b, x, y)) + '\\n'\nprint(s[0:-1])", "from sys import stdin\n\ndef solve(a, b, x, y):\n    ans = max(x * b, (a - x - 1) * b, y * a, (b - y - 1) * a)\n    return ans\n\ndef main():\n    t = int(stdin.readline().strip())\n    for _ in range(t):\n        (a, b, x, y) = map(int, stdin.readline().strip().split())\n        print(solve(a, b, x, y))\nmain()", "import sys\ninput = sys.stdin.readline\nn = int(input())\nwhile n:\n    n -= 1\n    (a, b, x, y) = map(int, input().split())\n    rv = max(x - 0, a - 1 - x)\n    cv = max(y - 0, b - 1 - y)\n    print(max(rv * b, cv * a))", "t = int(input())\nfor i in range(t):\n    (a, b, x, y) = map(int, input().split())\n    print(max(b * x, b * (a - x - 1), a * y, a * (b - y - 1)))", "t = int(input())\nfor tt in range(t):\n    (a, b, x, y) = map(int, input().split())\n    a1 = x * b\n    a2 = (a - x - 1) * b\n    a3 = a * (b - y - 1)\n    a4 = a * y\n    print(max(a1, max(a2, max(a3, a4))))", "t = int(input())\nfor i in range(t):\n    (a, b, x, y) = input().split(' ')\n    a = int(a)\n    b = int(b)\n    x = int(x)\n    y = int(y)\n    x += 1\n    y += 1\n    aa = a * (y - 1)\n    bb = a * abs(b - y)\n    cc = b * (x - 1)\n    dd = b * abs(a - x)\n    ans = max(aa, bb)\n    ans = max(ans, cc)\n    ans = max(ans, dd)\n    print(ans)", "from sys import stdin\ninput = stdin.readline\nt = int(input())\nfor _ in range(t):\n    (a, b, x, y) = list(map(int, input().split()))\n    print(max(x * b, a * (b - 1 - y), y * a, b * (a - 1 - x)))", "def get_result(length, height, x, y):\n    l1 = x - 1\n    l2 = length - x\n    h1 = height - y\n    h2 = y - 1\n    s1 = h1 * l1\n    s2 = h1 * l2\n    s3 = h2 * l1\n    s4 = h2 * l2\n    return max(s1 + s2 + h1, s1 + s3 + l1, s3 + s4 + h2, s2 + s4 + l2)\ncount = int(input())\nresults = []\nfor i in range(count):\n    (a, b, c, d) = map(int, input().split())\n    result = get_result(a, b, c + 1, d + 1)\n    results.append(result)\nfor i in results:\n    print(i)", "t = int(input())\ntest_list = []\nans = []\nfor i in range(0, t):\n    case = input()\n    test_list.append(case.split())\nfor j in test_list:\n    a = int(j[0])\n    b = int(j[1])\n    x = int(j[2])\n    y = int(j[3])\n    first = a * y\n    second = b * x\n    third = a * (b - (y + 1))\n    fourth = b * (a - (x + 1))\n    max_list = [first, second, third, fourth]\n    ans.append(max(max_list))\nfor i in ans:\n    print(i)", "t = int(input())\nu = []\nfor i in range(0, t):\n    a = [int(i) for i in input().split()]\n    s1 = a[2] * a[1]\n    s2 = a[3] * a[0]\n    s3 = (a[0] - a[2] - 1) * a[1]\n    s4 = (a[1] - a[3] - 1) * a[0]\n    d = [s1, s2, s3, s4]\n    u.append(max(d))\nfor i in u:\n    print(i)", "import sys\nimport math\nget_string = lambda : sys.stdin.readline().strip()\nget_int_list = lambda : list(map(int, sys.stdin.readline().strip().split()))\nget_intList_from_str = lambda : list(map(int, list(sys.stdin.readline().strip())))\nget_charList_from_str = lambda : list(sys.stdin.readline().strip())\nget_char_list = lambda : sys.stdin.readline().strip().split()\nget_int = lambda : int(sys.stdin.readline())\npt = lambda x: sys.stdout.write(str(x))\nfor _ in range(get_int()):\n    (a, b, x, y) = get_int_list()\n    area = max((a - x - 1) * b, x * b, y * a, (b - y - 1) * a)\n    print(area)", "t = int(input())\nans = []\nfor i in range(t):\n    ls = [int(ls) for ls in input().split()]\n    (a, b, x, y) = (ls[0], ls[1], ls[2], ls[3])\n    ans.append(max(a * (b - 1 - y), a * y, b * (a - x - 1), b * x))\nfor i in ans:\n    print(i)", "import sys\nn = int(sys.stdin.readline())\nfor _ in range(n):\n    (a, b, x, y) = [int(d) for d in sys.stdin.readline().split()]\n    s = max([x * b, (a - x - 1) * b, a * y, a * (b - y - 1)])\n    print(s)", "import sys\ninput = sys.stdin.readline\nfor ti in range(int(input())):\n    (a, b, x, y) = [int(x) for x in input().strip().split()]\n    print(max(x * b, a * y, (a - x - 1) * b, a * (b - y - 1)))", "import sys\nfrom collections import defaultdict, deque\ninp = sys.stdin.readline\nread = lambda : list(map(int, inp().split()))\n\ndef a():\n    ans = ''\n    for _ in range(read()[0]):\n        (a, b, x, y) = read()\n        x += 1\n        y += 1\n        ans += str(max((a - x) * b, (x - 1) * b, a * (b - y), a * (y - 1))) + '\\n'\n    print(ans)\na()", "s = []\nt = int(input())\nfor jjjh in range(0, t):\n    x = input()\n    xx = x.split()\n    a = int(xx[0])\n    b = int(xx[1])\n    x = int(xx[2]) + 1\n    y = int(xx[3]) + 1\n    r = []\n    if a == 1 and b != 1:\n        r.append(y - 1)\n        r.append(b - y)\n        s.append(max(r))\n    elif b == 1 and a != 1:\n        r.append(x - 1)\n        r.append(a - x)\n        s.append(max(r))\n    else:\n        if x > a / 2:\n            f = x - 1\n        else:\n            f = a - x\n        if y > b / 2:\n            z = y - 1\n        else:\n            z = b - y\n        r.append(f * b)\n        r.append(z * a)\n        s.append(max(r))\nfor i in s:\n    print(i)", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    line = sys.stdin.readline().split()\n    (a, b) = (int(line[0]), int(line[1]))\n    (x, y) = (int(line[2]), int(line[3]))\n    opt1 = max(x, a - x - 1) * b\n    opt2 = a * max(y, b - y - 1)\n    print(max(opt1, opt2))", "t = int(input())\nfor n in range(1, t + 1):\n    list = []\nfor n in range(1, t + 1):\n    (a, b, x, y) = input().split()\n    x = int(x)\n    y = int(y)\n    a = int(a)\n    b = int(b)\n    list.append(max(x * b, (a - x - 1) * b, a * y, a * (b - y - 1)))\nfor n in list:\n    print(n)", "cases = int(input())\nresult = []\nfor i in range(cases):\n    (c, r, x, y) = map(int, input().split())\n    result.append(max(x * r, (c - x - 1) * r, y * c, (r - y - 1) * c))\nfor i in result:\n    print(i)", "for i in range(int(input())):\n    (a, b, c, d) = map(int, input().split())\n    k = a * d\n    l = b * c\n    m = b * (a - c - 1)\n    n = a * (b - d - 1)\n    print(max(k, l, m, n))", "for i in range(int(input())):\n    (a, b, x, y) = map(int, input().split())\n    print(max(a * (b - y - 1), (a - x - 1) * b, b * x, a * y))", "t = int(input())\nwhile t > 0:\n    t = t - 1\n    (a, b, x, y) = map(int, input().split())\n    lst = []\n    lst.append(a * y)\n    lst.append(b * x)\n    x = x + 1\n    y = y + 1\n    x = a - x\n    y = b - y\n    lst.append(a * y)\n    lst.append(b * x)\n    print(max(lst))", "def solve():\n    (a, b, x, y) = map(int, input().split())\n    print(max(max(x, a - x - 1) * b, max(y, b - y - 1) * a))\nt = int(input())\nfor _ in range(t):\n    solve()", "for i in range(int(input())):\n    (a, b, x, y) = map(int, input().split())\n    print(max(max(x, a - 1 - x) * b, a * max(y, b - 1 - y)))", "for i in range(int(input())):\n    (a, b, x, y) = map(int, input().split())\n    print(max(max(x, a - 1 - x) * b, a * max(y, b - 1 - y)))", "for i in range(int(input())):\n    (a, b, c, d) = map(int, input().split())\n    print(max(max(c, a - c - 1) * b, max(d, b - d - 1) * a))", "N = int(input())\nfor _ in range(N):\n    (a, b, x, y) = [int(i) for i in input().split()]\n    rect1 = (a - x - 1) * b\n    rect2 = x * b\n    rect3 = (b - y - 1) * a\n    rect4 = y * a\n    print(max(rect1, rect2, rect3, rect4))", "t = int(input())\nif 1 <= t <= 10 ** 4:\n    for i in range(t):\n        (a, b, x, y) = input().split()\n        a = int(a)\n        b = int(b)\n        x = int(x)\n        y = int(y)\n        p = x + 1\n        q = y + 1\n        r = p * b\n        s = q * a\n        u = x * b\n        v = y * a\n        w = a * b\n        if p <= a / 2 and q <= b / 2:\n            m = w - r\n            n = w - s\n            if m > n:\n                print(m)\n            else:\n                print(n)\n        if p <= a / 2 and q > b / 2:\n            z = a * b - r\n            if z >= v:\n                print(z)\n            elif v > z:\n                print(v)\n        if p > a / 2 and q <= b / 2:\n            z = a * b - s\n            if z >= u:\n                print(z)\n            elif z < u:\n                print(u)\n        if p > a / 2 and q > b / 2:\n            if u >= v:\n                print(u)\n            elif v > u:\n                print(v)", "for i in range(int(input())):\n    (a, b, x, y) = map(int, input().split())\n    print(max(max(x, a - 1 - x) * b, a * max(y, b - 1 - y)))", "def f():\n    l1 = input().split(' ')\n    a = int(l1[0])\n    b = int(l1[1])\n    x = int(l1[2]) + 1\n    y = int(l1[3]) + 1\n    m = max((a - x) * b, (x - 1) * b, (b - y) * a, (y - 1) * a)\n    print(m)\n    return 0\nrow = int(input())\nfor r in range(row):\n    f()", "t = int(input())\nfor _ in range(t):\n    (a, b, x, y) = (int(i) for i in input().split())\n    res = max(x * b, (a - x - 1) * b, y * a, (b - y - 1) * a)\n    print(res)", "for run in range(int(input())):\n    (a, b, x, y) = map(int, input().split())\n    left = x * b\n    right = (a - 1 - x) * b\n    top = a * y\n    down = a * (b - 1 - y)\n    print(max(left, right, top, down))", "for run in range(int(input())):\n    (a, b, x, y) = map(int, input().split())\n    left = x * b\n    right = (a - 1 - x) * b\n    top = a * y\n    down = a * (b - 1 - y)\n    print(max(left, right, top, down))", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        (A, B, X, Y) = [int(x) for x in input().split()]\n        ma = 0\n        ma = max(X * B, ma)\n        ma = max(Y * A, ma)\n        ma = max((A - X - 1) * B, ma)\n        ma = max((B - Y - 1) * A, ma)\n        print(ma)\nmain()", "t = int(input())\ntest_cases = [input() for i in range(t)]\n\ndef solve(test_case):\n    (x, y, a, b) = map(int, test_case.split())\n    print(max(x * max(b, y - b - 1), y * max(a, x - a - 1)))\nfor test_case in test_cases:\n    solve(test_case)", "t = int(input(''))\ntr = [0] * t\nfor x in range(0, t):\n    nekaj = input('').split()\n    a = int(nekaj[0])\n    b = int(nekaj[1])\n    pa = int(nekaj[2]) + 1\n    pb = int(nekaj[3]) + 1\n    rezultat = 0\n    rezultat = (a - pa) * b\n    if rezultat < (b - pb) * a:\n        rezultat = (b - pb) * a\n    if rezultat < (pb - 1) * a:\n        rezultat = (pb - 1) * a\n    if rezultat < (pa - 1) * b:\n        rezultat = (pa - 1) * b\n    tr[x] = rezultat\nfor y in range(0, t):\n    print(tr[y])", "t = int(input())\nvec = []\nfor i in range(t):\n    (a, b, x, y) = [int(j) for j in input().split(' ')]\n    vec.append(max(max(a - x - 1, x) * b, max(b - y - 1, y) * a))\nfor j in vec:\n    print(j)", "t = int(input())\nls = []\nfor i in range(t):\n    (a, b, x, y) = map(int, input().split())\n    m = max(x * b, (a - x - 1) * b, y * a, (b - y - 1) * a)\n    ls.append(m)\nfor i in ls:\n    print(i)", "def main():\n    from sys import stdin, stdout\n    for _ in range(int(stdin.readline())):\n        (a, b, x, y) = map(int, stdin.readline().split())\n        ans = max([x * b, (a - x - 1) * b, y * a, (b - y - 1) * a])\n        stdout.write(str(ans) + '\\n')\nmain()", "def machine(li):\n    listresult = []\n    f = li[0]\n    c = li[1]\n    x = li[2]\n    y = li[3]\n    r = calcrigth(c, y)\n    l = calcleft(c, r)\n    d = calcdown(f, x)\n    u = calcup(f, d)\n    tr = f * r\n    listresult.append(tr)\n    tl = f * l\n    listresult.append(tl)\n    td = c * d\n    listresult.append(td)\n    tu = c * u\n    listresult.append(tu)\n    return max(listresult)\n\ndef calcrigth(c, y):\n    return c - y - 1\n\ndef calcleft(c, r):\n    return c - r - 1\n\ndef calcup(f, d):\n    return f - d - 1\n\ndef calcdown(f, x):\n    return f - x - 1\nmilist = []\nlistint = []\nt = int(input())\nfor i in range(t):\n    listnum = []\n    milist = input().split()\n    for nums in milist:\n        listnum.append(int(nums))\n    listint.append(listnum)\nfor i in range(t):\n    print(machine(listint[i]))", "n = int(input())\nc = 0\nl1 = []\nwhile c < n:\n    l = list(map(int, input().split()))\n    l[2] = l[2] + 1\n    l[3] = l[3] + 1\n    l1.append(max(list([(l[2] - 1) * l[1], (l[3] - 1) * l[0], (l[0] - l[2]) * l[1], (l[1] - l[3]) * l[0]])))\n    c = c + 1\nfor i in l1:\n    print(i)", "p = []\nn = int(input())\nfor i in range(n):\n    l = list(map(int, input().split()))\n    a = max(l[0] - l[2] - 1, l[0] - (l[0] - l[2]))\n    b = max(l[1] - l[3] - 1, l[1] - (l[1] - l[3]))\n    (a, b) = (a * l[1], b * l[0])\n    k = max(a, b)\n    p.append(k)\nfor j in p:\n    print(j)", "t = int(input())\nsolutions = []\nfor i in range(t):\n    string = str(input())\n    st = string.split()\n    a = int(st[0])\n    b = int(st[1])\n    x = int(st[2])\n    y = int(st[3])\n    case1 = (b - y - 1) * a\n    case2 = y * a\n    case3 = x * b\n    case4 = (a - x - 1) * b\n    case = max(case1, case2, case3, case4)\n    solutions.append(case)\nfor solution in solutions:\n    print(solution)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (a, b, m, n) = map(int, input().split())\n    print(max(max(m, a - m - 1) * b, max(n, b - n - 1) * a))", "def area(data):\n    lx = data[0]\n    ly = data[1]\n    x = data[2] + 1\n    y = data[3] + 1\n    if lx - x < x:\n        ans1 = (x - 1) * ly\n    else:\n        ans1 = (lx - x) * ly\n    if ly - y < y:\n        ans2 = (y - 1) * lx\n    else:\n        ans2 = (ly - y) * lx\n    return max(ans1, ans2)\nn = int(input())\ndata = []\nanswer = []\nfor i in range(0, n):\n    data = list(map(int, input().split()))\n    answer.append(area(data))\nfor i in range(0, len(answer)):\n    print(answer[i])", "def calc(a, b, x, y):\n    return max(max(x, a - x - 1) * b, max(y, b - y - 1) * a)\nN = int(input())\ncases = []\nfor _ in range(N):\n    cases.append(map(int, input().split()))\nfor (a, b, x, y) in cases:\n    print(calc(a, b, x, y))", "n = input('')\nfinal_output = []\nfor i in range(int(n)):\n    the_string = input('')\n    (a, b, x, y) = the_string.split()\n    a = int(a)\n    b = int(b)\n    x = int(x)\n    y = int(y)\n    max_width = a\n    max_height = b\n    if x > a - x - 1:\n        max_width = x\n    else:\n        max_width = a - x - 1\n    if y > b - y - 1:\n        max_height = y\n    else:\n        max_height = b - y - 1\n    a1 = b * max_width\n    a2 = a * max_height\n    output = max(a1, a2)\n    final_output.append(output)\nfor x in final_output:\n    print(x)", "result = []\n\ndef main():\n    n = int(input())\n    for i in range(0, n):\n        m = list(map(int, input().split()))\n        r1 = (m[0] - m[2] - 1) * m[1]\n        r2 = (m[1] - m[3] - 1) * m[0]\n        r3 = (m[2] - 1 + 1) * m[1]\n        r4 = (m[3] - 1 + 1) * m[0]\n        result.append(max(r1, r2, r3, r4))\n    for i in result:\n        print(i)\nmain()", "import math\nt = int(input())\nans = []\nfor i in range(t):\n    (a, b, x, y) = input().split()\n    a = int(a)\n    b = int(b)\n    x = int(x)\n    y = int(y)\n    area = max(b * max(x, a - 1 - x), a * max(y, b - 1 - y))\n    ans.append(area)\nfor i in range(len(ans)):\n    print(ans[i])", "n = int(input())\nl = []\nfor i in range(n):\n    (x, y, x1, y1) = map(int, input().split())\n    a = x1 * y\n    b = x * y1\n    c = x * (y - y1 - 1)\n    d = (x - x1 - 1) * y\n    l.append(max(a, b, c, d))\nfor i in l:\n    print(i)", "t = int(input())\nresult = []\nfor _ in range(t):\n    (a, b, x, y) = map(int, input().split())\n    x += 1\n    y += 1\n    areaArr = [(a - x) * b, a * (b - y), (x - 1) * b, a * (y - 1)]\n    result.append(max(areaArr))\nfor x in result:\n    print(x)", "no = int(input())\nres = []\nfor i in range(no):\n    (a, b, x, y) = map(int, input().split())\n    x += 1\n    y += 1\n    left = (x - 1) * b\n    right = (a - x) * b\n    above = a * (y - 1)\n    below = (b - y) * a\n    mm = max(left, right, above, below)\n    res.append(mm)\nfor i in res:\n    print(i)", "for t in range(int(input())):\n    (a, b, x, y) = [int(elem) for elem in input().split(' ')]\n    print(max(y * a, (b - y - 1) * a, b * (a - x - 1), b * x))", "for tc in range(0, int(input())):\n    (a, b, x, y) = map(int, input().split())\n    mx = max((b - (y + 1)) * a, b * x, a * y, b * (a - (x + 1)))\n    print(mx)", "num_tries = int(input())\nfor i in range(num_tries):\n    (a, b, x, y) = input().split()\n    a = int(a)\n    b = int(b)\n    x = int(x)\n    y = int(y)\n    max_area = max((b - y - 1) * a, y * a, x * b, (a - x - 1) * b)\n    print(max_area)", "t = int(input())\nfor i in range(t):\n    (a, b, x, y) = map(int, input().split())\n    a1 = a * max(b - y - 1, y)\n    a2 = b * max(a - x - 1, x)\n    print(max(a1, a2))", "def solve(a, b, x, y):\n    area1 = a * y\n    area2 = a * (b - y - 1)\n    area3 = b * x\n    area4 = b * (a - x - 1)\n    return max(area1, area2, area3, area4)\nT = int(input())\nfor t in range(T):\n    (a, b, x, y) = tuple(map(int, input().split()))\n    print(solve(a, b, x, y))", "for _ in range(int(input())):\n    (x, y, px, py) = [int(i) for i in input().split()]\n    mx_p = 0\n    if x > 0:\n        if y * px > mx_p:\n            mx_p = y * px\n        if x > px + 1:\n            p = y * (x - (px + 1))\n            if p > mx_p:\n                mx_p = p\n    if y > 0:\n        if x * py > mx_p:\n            mx_p = x * py\n        if y > py + 1:\n            p = x * (y - (py + 1))\n            if p > mx_p:\n                mx_p = p\n    print(mx_p)", "t = int(input())\nfor i in range(t):\n    l = [0, 0, 0, 0]\n    (a, b, x, y) = input().split()\n    a = int(a)\n    b = int(b)\n    x = int(x)\n    y = int(y)\n    l[0] = x * b\n    l[1] = (a - 1 - x) * b\n    l[2] = a * y\n    l[3] = a * (b - 1 - y)\n    print(max(l))", "t = int(input())\nwhile t:\n    (a, b, x, y) = map(int, input().split())\n    print(max(max(x, a - 1 - x) * b, a * max(y, b - 1 - y)))\n    t -= 1", "for ctr in range(int(input())):\n    (a, b, x, y) = map(int, input().split())\n    print(max(max(x, a - 1 - x) * b, a * max(y, b - 1 - y)))", "for i in range(int(input())):\n    (n, m, a, b) = map(int, input().split())\n    print(max(max(n * b, m * a), max(n * (m - 1 - b), m * (n - 1 - a))))", "t = int(input())\nfor _ in range(t):\n    (a, b, x, y) = [int(x) for x in input().split()]\n    c = max(x, a - x - 1) * b\n    d = a * max(y, b - y - 1)\n    print(max(c, d))", "for _ in range(0, int(input())):\n    (a, b, x, y) = map(int, input().split())\n    print(max(max(a - 1 - x, x) * b, max(b - 1 - y, y) * a))", "t = int(input())\nfor i in range(t):\n    (a, b, c, d) = [int(x) for x in input().split()]\n    print(max(max(c, a - 1 - c) * b, max(d, b - 1 - d) * a))", "t = int(input())\nabxy = [list(map(int, input().split())) for _ in range(t)]\nfor abxyi in abxy:\n    ai = abxyi[0]\n    bi = abxyi[1]\n    xi = abxyi[2]\n    yi = abxyi[3]\n    amax = max(xi, ai - xi - 1)\n    bmax = max(yi, bi - yi - 1)\n    print(max(amax * bi, ai * bmax))", "for i in range(int(input())):\n    q = []\n    (a, b, x, y) = [int(z) for z in input().split()]\n    if b - y - 1 > 0:\n        q.append((b - y - 1) * a)\n    if y > 0:\n        q.append(y * a)\n    if a - x - 1 > 0:\n        q.append((a - x - 1) * b)\n    if x > 0:\n        q.append(x * b)\n    print(max(q))", "T = int(input())\nins = []\nouts = []\nfor i in range(T):\n    (a, b, x, y) = [int(x) for x in input().split(' ')]\n    p = a * y\n    q = a * (b - y - 1)\n    r = b * x\n    s = b * (a - x - 1)\n    outs.append(max([p, q, r, s]))\nfor i in outs:\n    print(i)", "l = int(input(''))\nk = []\nfor i in range(l):\n    (a, b, x, y) = map(int, input('').split())\n    x += 1\n    y += 1\n    m = 0\n    if a - x >= x:\n        m = a - x\n    else:\n        m = x - 1\n    k.append(m * b)\n    if b - y >= y:\n        m = b - y\n    else:\n        m = y - 1\n    k.append(m * a)\nfor i in range(0, len(k), 2):\n    print(max(k[i], k[i + 1]))", "l = []\nfor i in range(int(input())):\n    (a, b, c, d) = map(int, input().split())\n    (c1, d1) = (c + 1, d + 1)\n    l.append(max((a - c1) * b, (b - d1) * a, c * b, d * a))\nfor i in l:\n    print(i)", "t = int(input())\nresult = []\nfor i in range(t):\n    (a, b, x, y) = map(int, input().split())\n    k = max(b * x, b * (a - x - 1), a * y, a * (b - y - 1))\n    result.append(k)\nfor i in range(t):\n    print(result[i])", "import sys\n\ndef techo(num):\n    if float(num) - int(num) != 0:\n        return int(num) + 1\n    else:\n        return num\nt = int(input())\nfor case in range(t):\n    line = sys.stdin.readline().strip().split(' ')\n    a = int(line[0])\n    b = int(line[1])\n    x = int(line[2])\n    y = int(line[3])\n    if x + 1 > techo(float(a) / 2):\n        if y + 1 > techo(float(b) / 2):\n            if x * b > a * y:\n                print(x * b)\n            else:\n                print(a * y)\n        elif x * b > a * (b - (y + 1)):\n            print(x * b)\n        else:\n            print(a * (b - (y + 1)))\n    elif y + 1 > techo(float(b) / 2):\n        if (a - x - 1) * b > a * y:\n            print((a - x - 1) * b)\n        else:\n            print(a * y)\n    elif (a - 1 - x) * b > a * (b - 1 - y):\n        print((a - 1 - x) * b)\n    else:\n        print(a * (b - 1 - y))", "from bisect import bisect_left as bl, bisect_right as br, insort\nimport sys\nimport heapq\nfrom math import *\nfrom collections import defaultdict as dd, deque\n\ndef data():\n    return sys.stdin.readline().strip()\n\ndef mdata():\n    return map(int, data().split())\nfor i in range(int(input())):\n    (a, b, x, y) = mdata()\n    print(max(max(a - x - 1, x) * b, max(b - y - 1, y) * a))", "ilosc = int(input())\ntab = []\nfor i in range(ilosc):\n    (a, b, xa, xb) = [int(x) for x in input().split()]\n    tab.append(max((a - (xa + 1)) * b, xb * a, xa * b, (b - (xb + 1)) * a))\nfor j in range(len(tab)):\n    print('\\n', tab[j])", "cases = int(input())\nwhile cases:\n    cases -= 1\n    (a, b, x, y) = map(int, input().split())\n    x = min(x, a - x - 1)\n    y = min(y, b - y - 1)\n    print(max((b - y - 1) * a, (a - x - 1) * b))", "t = int(input())\nfor i in range(t):\n    (a, b, x, y) = map(int, input().split())\n    p = max(x, a - x - 1)\n    q = max(y, b - y - 1)\n    print(max(p * b, q * a))", "t = int(input())\nwhile t > 0:\n    (a, b, x, y) = input().split()\n    a = int(a)\n    b = int(b)\n    x = int(x)\n    y = int(y)\n    m = y * a\n    if m < (b - y - 1) * a:\n        m = (b - y - 1) * a\n    if m < x * b:\n        m = x * b\n    if m < (a - x - 1) * b:\n        m = (a - x - 1) * b\n    print(m)\n    t -= 1", "for t in range(int(input())):\n    (x, y, a, b) = map(int, input().split())\n    (c, d) = (x - a, y - b)\n    a += 1\n    b += 1\n    print(max((x - a) * y, x * (y - b), (x - c) * y, x * (y - d)))", "for i in range(int(input())):\n    (n, m, a, b) = map(int, input().split())\n    print(max(max(n * b, m * a), max(n * (m - 1 - b), m * (n - 1 - a))))", "t = int(input())\nfor i in range(t):\n    (a, b, x, y) = map(int, input().split())\n    r = [a * y, b * x, a * (b - y - 1), b * (a - x - 1)]\n    print(max(r))", "for _ in range(int(input())):\n    (a, b, x, y) = map(int, input().split())\n    x += 1\n    y += 1\n    print(max((a - x) * b, (b - y) * a, (x - 1) * b, (y - 1) * a))", "def get_max_rectangle_area(a, b, x, y):\n    return max((a - x - 1) * b, x * b, (b - y - 1) * a, y * a)\n\ndef get_input():\n    return [int(x) for x in input().split()]\n\ndef main():\n    test_cases = int(input())\n    for i in range(test_cases):\n        test_case = get_input()\n        print(get_max_rectangle_area(test_case[0], test_case[1], test_case[2], test_case[3]))\nmain()"]