["for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    deg = [0] * (n + 1)\n    for i in range(n - 1):\n        (a, b) = map(int, input().split())\n        deg[a] += 1\n        deg[b] += 1\n    if deg[x] <= 1:\n        print('Ayush')\n    elif n % 2 == 1:\n        print('Ashish')\n    else:\n        print('Ayush')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    count = 0\n    for i in range(n - 1):\n        (u, v) = map(int, input().split())\n        if u == x or v == x:\n            count += 1\n    if n == 1 and x == 1:\n        print('Ayush')\n    elif count == 1:\n        print('Ayush')\n    elif n % 2 == 0:\n        print('Ayush')\n    elif n % 2 == 1:\n        print('Ashish')", "t = lambda : map(int, input().split())\nfor _ in range(int(input())):\n    (n, x) = t()\n    w = 0\n    for i in range(n - 1):\n        if x in list(t()):\n            w += 1\n    print('Ayush' if w <= 1 or n % 2 == 0 else 'Ashish')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    s = sum((x in map(int, input().split()) for _ in range(n - 1)))\n    print('Ayush' if s <= 1 or n % 2 == 0 else 'Ashish')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    s = sum((x in map(int, input().split()) for _ in range(n - 1)))\n    print('Ayush' if s <= 1 or n % 2 == 0 else 'Ashish')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    s = sum((x in map(int, input().split()) for _ in range(n - 1)))\n    print('Ashish' if s > 1 & n % 2 == 1 else 'Ayush')", "t = int(input())\nfrom collections import defaultdict\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    dic = defaultdict(list)\n    for j in range(0, n - 1):\n        (a, b) = map(int, input().split())\n        dic[a].append(b)\n        dic[b].append(a)\n    if len(dic[k]) <= 1:\n        print('Ayush')\n    elif (n - 3) % 2 == 0:\n        print('Ashish')\n    else:\n        print('Ayush')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    s = sum((x in map(int, input().split()) for _ in range(n - 1)))\n    print('Ashish' if s > 1 & n % 2 == 1 else 'Ayush')", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    dic = {}\n    for j in range(1, n + 1):\n        dic[j] = 0\n    for j in range(n - 1):\n        (u, v) = map(int, input().split())\n        dic[u] += 1\n        dic[v] += 1\n    if dic[x] <= 1:\n        print('Ayush')\n    elif n == 1:\n        print('Ayush')\n    elif n % 2 != 0:\n        print('Ashish')\n    else:\n        print('Ayush')", "t = int(input())\nfor _ in range(t):\n    (n, x) = [int(x) for x in input().split()]\n    indeg_x = 0\n    for i in range(n - 1):\n        edge = [int(x) for x in input().split()]\n        if x in edge:\n            indeg_x += 1\n    if indeg_x <= 1 or n % 2 == 0:\n        print('Ayush')\n    else:\n        print('Ashish')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = 0\n    for i in range(n - 1):\n        (u, v) = map(int, input().split())\n        if u == x or v == x:\n            a += 1\n    print(['Ashish', 'Ayush'][(n - 3) % 2 or a < 2])", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    x = 0\n    for i in range(n - 1):\n        (a, b) = list(map(int, input().split()))\n        if k == a or k == b:\n            x += 1\n    if x == 1 or x == 0:\n        print('Ayush')\n    elif n % 2 == 0:\n        print('Ayush')\n    else:\n        print('Ashish')", "for tc in range(int(input())):\n    (n, k) = map(int, input().split())\n    deg = [0] * (n + 1)\n    for i in range(n - 1):\n        (u, v) = map(int, input().split())\n        deg[u] += 1\n        deg[v] += 1\n    print('Ayush' if deg[k] <= 1 or n % 2 == 0 else 'Ashish')", "import math\nz = int(input())\nfor contorr in range(z):\n    (n, x) = list(map(int, input().split()))\n    cate = 0\n    for i in range(n - 1):\n        (a, b) = list(map(int, input().split()))\n        if a == x or b == x:\n            cate += 1\n    if cate == 1 or n == 1:\n        print('Ayush')\n    elif n % 2 == 0:\n        print('Ayush')\n    else:\n        print('Ashish')", "n = int(input())\nfor i in range(n):\n    (t, x) = map(int, input().split())\n    ans = 0\n    for i in range(0, t - 1):\n        (a, b) = map(int, input().split())\n        if a == x or b == x:\n            ans += 1\n    if ans <= 1:\n        print('Ayush')\n    elif t % 2 == 1:\n        print('Ashish')\n    else:\n        print('Ayush')", "import sys\ninput = lambda : sys.stdin.readline().strip()\nt = int(input())\nwhile t:\n    t -= 1\n    (n, x) = map(int, input().split())\n    adj = [[] for _ in range(n)]\n    for i in range(n - 1):\n        (u, v) = map(int, input().split())\n        u -= 1\n        v -= 1\n        adj[u].append(v)\n        adj[v].append(u)\n    if len(adj[x - 1]) == 1 or n <= 2:\n        print('Ayush')\n    elif n % 2 == 1:\n        print('Ashish')\n    else:\n        print('Ayush')", "ans = []\ntests_count = int(input())\nfor test in range(tests_count):\n    tree = dict()\n    (n, x) = map(int, input().split())\n    for edge in range(n - 1):\n        (u, v) = map(int, input().split())\n        tree[u] = tree.get(u, [])\n        tree[u].append(v)\n        tree[v] = tree.get(v, [])\n        tree[v].append(u)\n    global_count = max(len(tree.get(x, [])) - 2, 0)\n    last_node = set()\n    last_node.add(x)\n    for node_near_x in tree.get(x, []):\n        count = 0\n        curr = [node_near_x]\n        while True:\n            new_curr = []\n            for node in curr:\n                last_node.add(node)\n                count += 1\n                for child in tree[node]:\n                    if child in last_node:\n                        continue\n                    new_curr.append(child)\n            curr = new_curr\n            if len(curr) == 0:\n                break\n        global_count += count - 1\n    if len(tree.get(x, [])) <= 1 or global_count % 2 == 1:\n        ans.append('Ayush')\n    else:\n        ans.append('Ashish')\nprint(*ans, sep='\\n')", "import sys\nimport math\nfrom bisect import bisect_right as br\nimport threading\n\ndef int_arr():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef str_arr():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef input():\n    return sys.stdin.readline().strip()\nfor _ in range(int(input())):\n    (n, e) = int_arr()\n    cnt = 0\n    for i in range(n - 1):\n        (x, y) = int_arr()\n        if e == x or e == y:\n            cnt += 1\n    if cnt == 1 or n - 1 == 0:\n        print('Ayush')\n    elif (n - 2) % 2 == 0:\n        print('Ayush')\n    else:\n        print('Ashish')", "for t in range(int(input())):\n    (n, x) = map(int, input().split())\n    s = sum((x in map(int, input().split()) for a in range(n - 1)))\n    print('Ashish' if s > 1 & n % 2 == 1 else 'Ayush')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = 0\n    for i in range(n - 1):\n        (u, v) = map(int, input().split())\n        if u == x or v == x:\n            a += 1\n    if a < 2:\n        print('Ayush')\n    else:\n        print(['Ashish', 'Ayush'][(n - 3) % 2])", "def rl():\n    return list(map(int, input().split()))\n\ndef ri():\n    return int(input())\n\ndef rm():\n    return map(int, input().split())\nt = ri()\n\ndef solve():\n    (n, x) = rm()\n    a = 0\n    for i in range(n - 1):\n        (u, v) = rm()\n        if u == x or v == x:\n            a += 1\n    if a == 1 or n == 1:\n        return 'Ayush'\n    if (n - 2) % 2 == 0:\n        return 'Ayush'\n    else:\n        return 'Ashish'\nfor i in range(t):\n    print(solve())", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    d = 0\n    for i in range(n - 1):\n        (a, b) = map(int, input().split())\n        if a == x or b == x:\n            d = d + 1\n    if d <= 1:\n        print('Ayush')\n    elif n % 2:\n        print('Ashish')\n    else:\n        print('Ayush')", "def solve():\n    (n, x) = input().split()\n    n = int(n)\n    x = int(x)\n    cnt = 0\n    if n == 1:\n        return 'Ayush'\n    for i in range(0, n - 1):\n        (u, v) = input().split()\n        u = int(u)\n        v = int(v)\n        if u == x or v == x:\n            cnt += 1\n    if cnt == 1:\n        return 'Ayush'\n    elif (n - 3) % 2 == 0:\n        return 'Ashish'\n    else:\n        return 'Ayush'\nT = int(input())\nfor i in range(T):\n    print(solve())", "from sys import stdin, stdout\nimport collections, heapq, bisect, math\ninput = stdin.readline\n\ndef rint():\n    return int(input())\n\ndef rstr():\n    return input().strip()\n\ndef rlstr():\n    return list(input().strip().split())\n\ndef rlint():\n    return list(map(int, input().split()))\n\ndef main():\n    (n, x) = rlint()\n    indegree = 0\n    for _ in range(n - 1):\n        (u, v) = rlint()\n        if u == x:\n            indegree += 1\n        if v == x:\n            indegree += 1\n    if indegree <= 1 or (n - 1) % 2 == 1:\n        print('Ayush')\n    else:\n        print('Ashish')\nfor _ in range(rint()):\n    main()", "for t in range(int(input())):\n    (n, x) = map(int, input().split())\n    d = [0] * (n + 1)\n    a = {}\n    m = n - 1\n    for i in range(m):\n        (u, v) = map(int, input().split())\n        d[u] += 1\n        d[v] += 1\n    if d[x] == 1 or n == 1:\n        print('Ayush')\n    elif n % 2:\n        print('Ashish')\n    else:\n        print('Ayush')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = {i: [] for i in range(1, n + 1)}\n    for i in range(n - 1):\n        (u, v) = map(int, input().split())\n        l[u].append(v)\n        l[v].append(u)\n    if len(l[x]) == 1 or len(l[x]) == 0:\n        print('Ayush')\n    elif n % 2 == 1:\n        print('Ashish')\n    else:\n        print('Ayush')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    state = 0\n    for _ in range(n - 1):\n        (u, v) = map(int, input().split(' '))\n        if u == k or v == k:\n            state += 1\n    if n == 1:\n        print('Ayush')\n    elif state == 1:\n        print('Ayush')\n    else:\n        x = n - (state + 1)\n        if x % 2 != 0:\n            curr = 'Ayush'\n            p = 'Ashish'\n        else:\n            curr = 'Ashish'\n            p = 'Ayush'\n        if state % 2 == 0:\n            ans = curr\n        else:\n            ans = p\n        print(ans)", "from collections import defaultdict\n\ndef Winner(degree, n, x):\n    if n == 1:\n        return 'Ayush'\n    if degree[x] <= 1:\n        return 'Ayush'\n    if n % 2 != 0:\n        return 'Ashish'\n    return 'Ayush'\nt = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    degree = dict()\n    for i in range(n - 1):\n        (u, v) = map(int, input().split())\n        degree[v] = degree.get(v, 0) + 1\n        degree[u] = degree.get(u, 0) + 1\n    print(Winner(degree, n, x))", "for test in range(int(input())):\n    (n, x) = map(int, input().split())\n    adj = {}\n    for i in range(n - 1):\n        (a, b) = map(int, input().split())\n        if a not in adj:\n            adj[a] = []\n        if b not in adj:\n            adj[b] = []\n        adj[a].append(b)\n        adj[b].append(a)\n    if len(adj.get(x, [])) <= 1 or n % 2 == 0:\n        print('Ayush')\n    else:\n        print('Ashish')", "from sys import stdin, stdout\nimport collections, heapq, bisect, math\ninput = stdin.readline\n\ndef rint():\n    return int(input())\n\ndef rstr():\n    return input().strip()\n\ndef rlstr():\n    return list(input().strip().split())\n\ndef rlint():\n    return list(map(int, input().split()))\n\ndef main():\n    (n, x) = rlint()\n    indegree = [0] * n\n    for _ in range(n - 1):\n        (u, v) = rlint()\n        indegree[v - 1] += 1\n        indegree[u - 1] += 1\n    if indegree[x - 1] <= 1 or (n - 1) % 2 == 1:\n        print('Ayush')\n    else:\n        print('Ashish')\nfor _ in range(rint()):\n    main()", "t = int(input())\n\ndef dfs(x, cnt):\n    vis[x] = 1\n    for i in dic[x]:\n        if vis[i] == 0:\n            cnt = dfs(i, cnt)\n    return cnt + 1\nfor _ in range(t):\n    (n, x) = [int(a) for a in input().split(' ')]\n    if n == 1:\n        print('Ayush')\n        continue\n    dic = {}\n    vis = [0] * (n + 1)\n    vis[0] = 1\n    for _ in range(n - 1):\n        (u, v) = [int(a) for a in input().split(' ')]\n        if u not in dic:\n            dic[u] = []\n        if v not in dic:\n            dic[v] = []\n        dic[u].append(v)\n        dic[v].append(u)\n    if len(dic[x]) <= 1:\n        print('Ayush')\n        continue\n    cnt = dfs(x, 0)\n    if cnt % 2 == 1:\n        print('Ashish')\n    else:\n        print('Ayush')", "def tree(l, arr, n):\n    if l == 1:\n        return 'Ayush'\n    paths = {}\n    cnts = {}\n    for (x, y) in arr:\n        paths[x] = paths.get(x, []) + [y]\n        paths[y] = paths.get(y, []) + [x]\n        cnts[x] = cnts.get(x, 0) + 1\n        cnts[y] = cnts.get(y, 0) + 1\n    ans = 0\n    for i in range(1, l + 1):\n        if i != n and i not in paths[n]:\n            ans += 1\n    if cnts[n] == 1:\n        return 'Ayush'\n    ans += cnts[n]\n    if ans % 2 != 0:\n        return 'Ayush'\n    else:\n        return 'Ashish'\nfor i in range(int(input())):\n    blanck = []\n    (a, b) = map(int, input().strip().split())\n    for x in range(a - 1):\n        (m, n) = map(int, input().strip().split())\n        blanck.append([m, n])\n    print(tree(a, blanck, b))", "for i in range(int(input())):\n    (n, x) = map(int, input().split())\n    d = [[] for i in range(n + 1)]\n    for i in range(n - 1):\n        (u, v) = map(int, input().split())\n        d[u].append(v)\n        d[v].append(u)\n    d = len(d[x])\n    if d < 2 or not n & 1:\n        print('Ayush')\n    else:\n        print('Ashish')", "import sys\nreadline = sys.stdin.readline\nns = lambda : readline().rstrip()\nni = lambda : int(readline().rstrip())\nnm = lambda : map(int, readline().split())\nnl = lambda : list(map(int, readline().split()))\n\ndef solve():\n    (n, k) = nm()\n    k -= 1\n    G = [list() for _ in range(n)]\n    for _ in range(n - 1):\n        (u, v) = nm()\n        u -= 1\n        v -= 1\n        G[u].append(v)\n        G[v].append(u)\n    if len(G[k]) <= 1:\n        print('Ayush')\n        return\n    print('Ayush' if n + 1 & 1 else 'Ashish')\n    return\nT = int(input())\nfor _ in range(T):\n    solve()", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    s = sum((x in map(int, input().split()) for _ in range(n - 1)))\n    print('Ayush' if s <= 1 or n % 2 == 0 else 'Ashish')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    s = sum((x in map(int, input().split()) for _ in range(n - 1)))\n    print('Ayush' if s <= 1 or n % 2 == 0 else 'Ashish')", "import sys\ninput = sys.stdin.readline\n\ndef I():\n    return input().strip()\n\ndef II():\n    return int(input().strip())\n\ndef LI():\n    return [*map(int, input().strip().split())]\nimport string, math, time, functools, random, fractions\nfrom heapq import heappush, heappop, heapify\nfrom bisect import bisect_left, bisect_right\nfrom collections import deque, defaultdict, Counter, OrderedDict\nfrom itertools import permutations, combinations, groupby\nfor _ in range(II()):\n    (n, x) = LI()\n    z = 0\n    for i in range(n - 1):\n        (u, v) = LI()\n        if u == x or v == x:\n            z += 1\n    if z <= 1:\n        print('Ayush')\n    elif n % 2 == 1:\n        print('Ashish')\n    else:\n        print('Ayush')", "from sys import stdin\ninput = stdin.readline\nfor __ in range(int(input())):\n    (n, root) = map(int, input().split())\n    cnt = 0\n    for _ in range(n - 1):\n        t = [int(x) for x in input().split()]\n        if root in t:\n            cnt += 1\n    if n <= 2 or cnt == 1:\n        print('Ayush')\n        continue\n    print('Ashish' if n % 2 else 'Ayush')", "mod = int(1000000000.0) + 7\n\ndef sp(n):\n    if n == 1:\n        return input()\n    else:\n        return map(str, input().split())\n\ndef np(n):\n    if n == 1:\n        return int(input())\n    else:\n        return map(int, input().split())\nw = ['Ayush', 'Ashish']\nfor _ in range(0, int(input())):\n    (n, x) = np(2)\n    k = 0\n    for i in range(0, n - 1):\n        (a, b) = np(2)\n        if a == x or b == x:\n            k += 1\n    ans = 0\n    if n == 1 or k == 1:\n        print(w[0])\n    else:\n        t = (n - k - 1) % 2 + k % 2\n        print(w[1 - t % 2])", "from sys import stdin, stdout\nt = int(stdin.readline())\nfor _ in range(t):\n    (n, x) = map(int, stdin.readline().split())\n    cnt = 0\n    seen = set()\n    for _ in range(n - 1):\n        (a, b) = map(int, stdin.readline().split())\n        if a > b:\n            (a, b) = (b, a)\n        if (a, b) in seen:\n            continue\n        seen.add((a, b))\n        if a == x or b == x:\n            cnt += 1\n    if cnt <= 1 or n % 2 == 0:\n        print('Ayush')\n    else:\n        print('Ashish')", "t = int(input())\nwhile t:\n    t -= 1\n    (n, x) = [int(i) for i in input().split()]\n    x -= 1\n    graph = [[] for i in range(n)]\n    for i in range(n - 1):\n        (u, v) = [int(i) for i in input().split()]\n        graph[u - 1].append(v - 1)\n        graph[v - 1].append(u - 1)\n    if len(graph[x]) == 1 or n == 1:\n        print('Ayush')\n    elif n % 2 == 1:\n        print('Ashish')\n    else:\n        print('Ayush')", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    f = list()\n    for i in range(n - 1):\n        f.append(set(map(int, input().split())))\n    front = {x}\n    n_front = set()\n    for p in f[:]:\n        c = front & p\n        if c:\n            n_front.add((p - c).pop())\n            f.remove(p)\n    front = n_front\n    if len(front) <= 1:\n        print('Ayush')\n        continue\n    if (n - 1) % 2:\n        print('Ayush')\n    else:\n        print('Ashish')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    deg = 0\n    for _ in range(n - 1):\n        (u, v) = map(int, input().split())\n        if x in [u, v]:\n            deg += 1\n    print('Ayush' if deg <= 1 or n % 2 == 0 else 'Ashish')", "for _ in range(int(input())):\n    xs = {1: set()}\n    (n, x) = map(int, input().split())\n    for _ in range(n - 1):\n        (i, j) = map(int, input().split())\n        if i not in xs:\n            xs[i] = {j}\n        if j not in xs:\n            xs[j] = {i}\n        xs[i].add(j)\n        xs[j].add(i)\n    if len(xs[x]) <= 1:\n        print('Ayush')\n    else:\n        print('Ayush') if len(xs) % 2 == 0 else print('Ashish')", "t = int(input())\nfor tc in range(t):\n    s = input().split()\n    (n, x) = (int(s[0]), int(s[1]))\n    num = [[] for i in range(n + 1)]\n    for i in range(n - 1):\n        s1 = input().split()\n        (si, ei) = (int(s1[0]), int(s1[1]))\n        num[si].append(ei)\n        num[ei].append(si)\n    di = len(num[x])\n    if di <= 1:\n        print('Ayush')\n    else:\n        re = n - di - 1\n        if re % 2 == 0:\n            if di % 2 == 0:\n                print('Ashish')\n            else:\n                print('Ayush')\n        elif di % 2 != 0:\n            print('Ashish')\n        else:\n            print('Ayush')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    ar = [0] * n\n    for _ in range(n - 1):\n        (t, v) = map(int, input().split())\n        ar[t - 1] += 1\n        ar[v - 1] += 1\n    if ar[x - 1] <= 1:\n        print('Ayush')\n    else:\n        print('Ayush' if not n % 2 else 'Ashish')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    ar = 0\n    for _ in range(n - 1):\n        (t, v) = map(int, input().split())\n        if t == x or v == x:\n            ar += 1\n    if ar <= 1:\n        print('Ayush')\n    else:\n        print('Ayush' if not n % 2 else 'Ashish')", "for t in range(int(input())):\n    (n, x) = map(int, input().split())\n    s = 0\n    for i in range(n - 1):\n        if x in list(map(int, input().split())):\n            s += 1\n    if n < 3 or s == 1 or (n - 3) % 2 != 0:\n        print('Ayush')\n    else:\n        print('Ashish')", "t = int(input())\nfor ii in range(t):\n    (n, x) = map(int, input().split())\n    graph = [[] for i in range(n)]\n    for i in range(n - 1):\n        (a, b) = map(int, input().split())\n        graph[a - 1].append(b - 1)\n        graph[b - 1].append(a - 1)\n    if len(graph[x - 1]) <= 1:\n        print('Ayush')\n    elif (n - 1) % 2:\n        print('Ayush')\n    else:\n        print('Ashish')", "def inp():\n    return map(int, input().split())\n\ndef solve():\n    (n, x) = inp()\n    a = [[] for _ in range(n + 1)]\n    for i in range(n - 1):\n        (z, y) = inp()\n        a[z].append(y)\n        a[y].append(z)\n    if len(a[x]) <= 1 or n % 2 == 0:\n        return 'Ayush'\n    return 'Ashish'\n\ndef main():\n    t = int(input())\n    while t:\n        print(solve())\n        t -= 1\nmain()", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = [0] * 10000\n    for i in range(n - 1):\n        (a, b) = map(int, input().split())\n        l[a] += 1\n        l[b] += 1\n    if n == 1 or l[x] == 1:\n        print('Ayush')\n    elif n % 2 == 1:\n        print('Ashish')\n    else:\n        print('Ayush')", "t = int(input())\nwhile t:\n    t = t - 1\n    (n, x) = map(int, input().split())\n    l = []\n    leaf = 0\n    for w in range(n - 1):\n        edge = list(map(int, input().split()))\n        (u, v) = (edge[0], edge[1])\n        if v == x or u == x:\n            leaf += 1\n        l.append(edge)\n    if n == 1:\n        print('Ayush')\n    elif leaf == 1:\n        print('Ayush')\n    elif n % 2 == 0:\n        print('Ayush')\n    else:\n        print('Ashish')", "from sys import stdin, stdout\nfor i in range(int(input())):\n    (n, x) = map(int, input().split())\n    l = [[] for i in range(n)]\n    for i in range(n - 1):\n        (u, v) = map(int, input().split())\n        l[u - 1].append(v - 1)\n        l[v - 1].append(u - 1)\n    le = len(l[x - 1])\n    if le == 0 or le == 1 or n % 2 == 0:\n        print('Ayush')\n    else:\n        print('Ashish')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    count = 0\n    for i in range(n - 1):\n        (xx, yy) = map(int, input().split())\n        if xx == x or yy == x:\n            count += 1\n    if count < 2 or n % 2 == 0:\n        print('Ayush')\n    else:\n        print('Ashish')", "def readTree(n):\n    adj = [set() for i in range(n + 1)]\n    for i in range(n - 1):\n        (u, v) = map(int, input().split())\n        adj[u].add(v)\n        adj[v].add(u)\n    return adj\n\ndef solve():\n    (n, x) = map(int, input().split())\n    adj = readTree(n)\n    if len(adj[x]) <= 1:\n        print('Ayush ')\n        return\n    elif (n - 3) % 2 == 0:\n        print('Ashish')\n        return\n    else:\n        print('Ayush')\n        return\nt = int(input())\nfor i in range(t):\n    solve()", "t = int(input())\nfor you in range(t):\n    l = input().split()\n    n = int(l[0])\n    x = int(l[1])\n    adj = [[] for i in range(n + 1)]\n    for i in range(n - 1):\n        l = input().split()\n        u = int(l[0])\n        v = int(l[1])\n        adj[u].append(v)\n        adj[v].append(u)\n    if n == 1 or len(adj[x]) == 1:\n        print('Ayush')\n    elif n % 2 == 0:\n        print('Ayush')\n    else:\n        print('Ashish')", "t = int(input())\nfor _ in range(t):\n    (n, x) = [int(i) for i in input().split()]\n    degree = 0\n    for i in range(n - 1):\n        (x1, y) = [int(i) for i in input().split()]\n        if x1 == x or y == x:\n            degree += 1\n    if degree <= 1:\n        print('Ayush')\n    elif (n - 3) % 2 == 0:\n        print('Ashish')\n    else:\n        print('Ayush')", "import sys\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\n\ndef main():\n    for _ in range(II()):\n        (n, x) = MI()\n        deg = 0\n        for _ in range(n - 1):\n            (u, v) = MI()\n            if u == x or v == x:\n                deg += 1\n        if deg < 2 or n - 3 & 1:\n            print('Ayush')\n        else:\n            print('Ashish')\nmain()", "t = int(input())\nwhile t:\n    t -= 1\n    (n, x) = map(int, input().split())\n    l = [[] for i in range(n + 1)]\n    for _ in range(n - 1):\n        (a, b) = map(int, input().split())\n        l[a].append(b)\n        l[b].append(a)\n    leng = len(l[x])\n    if leng == 1 or n == 1:\n        print('Ayush')\n    elif (n - 1) % 2 == 0:\n        print('Ashish')\n    else:\n        print('Ayush')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    v = [[] for i in range(n + 1)]\n    c = 0\n    for i in range(n - 1):\n        (a, b) = map(int, input().split())\n        if a == k or b == k:\n            c += 1\n        v[b].append(a)\n    if c < 2:\n        print('Ayush')\n    elif n % 2 != 0:\n        print('Ashish')\n    else:\n        print('Ayush')", "for _ in range(int(input())):\n    (n, x) = list(map(int, input().split()))\n    arr = []\n    child = []\n    for i in range(n - 1):\n        (a, b) = map(int, input().split())\n        arr.append(a)\n        arr.append(b)\n        if a == x:\n            child.append(b)\n        elif b == x:\n            child.append(a)\n    arr = list(set(arr))\n    if len(child) == 0 or len(child) == 1:\n        print('Ayush')\n    elif (len(arr) - 2) % 2 == 0:\n        print('Ayush')\n    else:\n        print('Ashish')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    neighbors = [[] for _ in range(n)]\n    for _ in range(n - 1):\n        (u, v) = map(int, input().split())\n        neighbors[u - 1].append(v - 1)\n        neighbors[v - 1].append(u - 1)\n    x -= 1\n    if len(neighbors[x]) < 2:\n        print('Ayush')\n        continue\n    if n % 2 == 1:\n        print('Ashish')\n    else:\n        print('Ayush')", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    adj = [[] for i in range(n + 1)]\n    for __ in range(1, n):\n        (u, v) = map(int, input().split())\n        adj[u].append(v)\n        adj[v].append(u)\n    if n == 1 or n == 2:\n        print('Ayush')\n        continue\n    if len(adj[x]) == 1:\n        print('Ayush')\n    elif n % 2:\n        print('Ashish')\n    else:\n        print('Ayush')", "for i in range(int(input())):\n    (n, x) = map(int, input().split())\n    xbonds = 0\n    for j in range(n - 1):\n        (a, b) = map(int, input().split())\n        if a == x or b == x:\n            xbonds += 1\n    if n == 1:\n        print('Ayush')\n    elif xbonds == 1:\n        print('Ayush')\n    elif n % 2 == 0:\n        print('Ayush')\n    else:\n        print('Ashish')", "t = int(input())\nfor i in range(t):\n    dict = {}\n    s = input().split()\n    n = int(s[0])\n    x = int(s[1])\n    for j in range(n):\n        dict[j + 1] = []\n    for j in range(n - 1):\n        s = input().split()\n        a = int(s[0])\n        b = int(s[1])\n        dict[a].append(b)\n        dict[b].append(a)\n    count = 0\n    if len(dict[x]) <= 1:\n        print('Ayush')\n        count += 1\n    elif n % 2 == 0:\n        print('Ayush')\n    else:\n        print('Ashish')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    a = [0] * (n + 1)\n    for j in range(n - 1):\n        (q, w) = map(int, input().split())\n        a[q] += 1\n        a[w] += 1\n    print('Ayush' if n == 1 or a[x] == 1 or n % 2 == 0 else 'Ashish')", "t = int(input())\nfor tt in range(t):\n    (n, x) = map(int, input().strip().split())\n    l = [[] for i in range(n + 1)]\n    deg = [0] * (n + 1)\n    if n == 1 and x == n:\n        print('Ayush')\n        continue\n    for i in range(n - 1):\n        (a, b) = map(int, input().strip().split())\n        l[a].append(b)\n        l[b].append(a)\n        deg[a] += 1\n        deg[b] += 1\n    nod = 0\n    if deg[x] == 1:\n        print('Ayush')\n        continue\n    if n % 2 == 0:\n        print('Ayush')\n    else:\n        print('Ashish')", "t = int(input())\nfor i in range(t):\n    (n, x) = [int(m) for m in input().split()]\n    depth = 0\n    for j in range(n - 1):\n        (a, b) = [int(m) for m in input().split()]\n        if a == x or b == x:\n            depth += 1\n    if depth <= 1:\n        print('Ayush')\n    elif (n - 3) % 2 == 0:\n        print('Ashish')\n    else:\n        print('Ayush')", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    count = 0\n    for i in range(n - 1):\n        (a, b) = map(int, input().split())\n        if a == x or b == x:\n            count += 1\n    if n == 1 or count == 1 or n % 2 == 0:\n        print('Ayush')\n    else:\n        print('Ashish')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    group = [[] for i in range(n + 1)]\n    for _ in range(n - 1):\n        (u, v) = map(int, input().split())\n        group[u].append(v)\n        group[v].append(u)\n    if len(group[x]) <= 1:\n        print('Ayush')\n    elif n % 2 == 0:\n        print('Ayush')\n    else:\n        print('Ashish')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    s = sum((x in map(int, input().split()) for _ in range(n - 1)))\n    print('Ayush' if s <= 1 or n % 2 == 0 else 'Ashish')", "for t in range(int(input())):\n    level_1_nodes = 0\n    (n, x) = map(int, input().split(' '))\n    deg = [0] * (n + 1)\n    for i in range(n - 1):\n        (u, v) = map(int, input().split(' '))\n        if u == x or v == x:\n            level_1_nodes += 1\n            deg[u] += 1\n            deg[v] += 1\n    if deg[x] <= 1:\n        print('Ayush')\n    else:\n        other_nodes = n - 1 - level_1_nodes\n        if other_nodes % 2 == 0:\n            if level_1_nodes % 2 == 0:\n                print('Ashish')\n            else:\n                print('Ayush')\n        elif level_1_nodes % 2 == 0:\n            print('Ayush')\n        else:\n            print('Ashish')", "t = int(input())\nfor _ in range(t):\n    (n, X) = [int(x) for x in input().split()]\n    deg = 0\n    for _ in range(n - 1):\n        (x, y) = [int(x) for x in input().split()]\n        if x == X or y == X:\n            deg += 1\n    if deg <= 1:\n        winner = 'Ayush'\n    elif (n - 3) % 2 == 0:\n        winner = 'Ashish'\n    elif (n - 3) % 2 == 1:\n        winner = 'Ayush'\n    print(winner)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    data = [[] for i in range(n + 1)]\n    for _ in range(n - 1):\n        (u, v) = map(int, input().split())\n        data[u].append(v)\n        data[v].append(u)\n    if len(data[x]) <= 1:\n        print('Ayush')\n    elif n % 2 == 0:\n        print('Ayush')\n    else:\n        print('Ashish')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    d = 0\n    for i in range(n - 1):\n        (u, v) = map(int, input().split())\n        if x == u or x == v:\n            d += 1\n    if d < 2 or n % 2 == 0:\n        print('Ayush')\n    else:\n        print('Ashish')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    s = sum((x in map(int, input().split()) for _ in range(n - 1)))\n    print('Ayush' if s <= 1 or n % 2 == 0 else 'Ashish')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    x -= 1\n    graph = {i: [] for i in range(n)}\n    for i in range(n - 1):\n        (u, v) = map(lambda x: int(x) - 1, input().split())\n        graph[u].append(v)\n        graph[v].append(u)\n    if len(graph[x]) <= 1:\n        print('Ayush')\n    elif n % 2 == 1:\n        print('Ashish')\n    else:\n        print('Ayush')", "t = int(input())\nfor i in range(t):\n    deg = []\n    (n, x) = map(int, input().split(' '))\n    for i in range(n + 1):\n        deg.append(0)\n    for i in range(n - 1):\n        (u, v) = map(int, input().split(' '))\n        deg[u] += 1\n        deg[v] += 1\n    if deg[x] <= 1 or n % 2 == 0:\n        print('Ayush')\n    else:\n        print('Ashish')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    s = sum((x in map(int, input().split()) for _ in range(n - 1)))\n    print('Ayush' if s <= 1 or n % 2 == 0 else 'Ashish')", "t = int(input())\nwhile t > 0:\n    (n, x) = map(int, input().split())\n    degree = [0] * (n + 1)\n    for i in range(n - 1):\n        (u, v) = map(int, input().split())\n        degree[u] += 1\n        degree[v] += 1\n    if degree[x] <= 1:\n        print('Ayush')\n    elif n % 2:\n        print('Ashish')\n    else:\n        print('Ayush')\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (n, x) = list(map(int, input().split()))\n    degree = set()\n    for __ in range(n - 1):\n        (u, v) = map(int, input().split())\n        if u == x:\n            degree.add(v)\n        if v == x:\n            degree.add(u)\n    if len(degree) <= 1:\n        print('Ayush')\n    elif (n - 3) % 2 == 0:\n        print('Ashish')\n    else:\n        print('Ayush')", "t = int(input())\n\ndef solve():\n    (n, x) = map(int, input().split())\n    d = 0\n    for i in range(n - 1):\n        (a, b) = map(int, input().split())\n        if a == x or b == x:\n            d += 1\n    if d <= 1 or n % 2 == 0:\n        print('Ayush')\n    else:\n        print('Ashish')\nfor i in range(t):\n    solve()", "def f(n, x, A):\n    if n == 1:\n        return 'Ayush'\n    degx = 0\n    for i in A:\n        for j in i:\n            if j == x:\n                degx += 1\n    if degx == 1:\n        return 'Ayush'\n    elif n % 2 == 0:\n        return 'Ayush'\n    else:\n        return 'Ashish'\nt = int(input())\nfor i in range(t):\n    [n, x] = input().split(' ')\n    A = []\n    for i in range(int(n) - 1):\n        A.append(input().split(' '))\n    print(f(int(n), x, A))", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    s = sum((x in map(int, input().split()) for _ in range(n - 1)))\n    print('Ayush' if s <= 1 or n % 2 == 0 else 'Ashish')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    s = sum((x in map(int, input().split()) for _ in range(n - 1)))\n    print('Ashish' if s > 1 & n % 2 == 1 else 'Ayush')", "t = int(input())\nfor test in range(t):\n    (n, x) = map(int, input().split(' '))\n    deg = 0\n    for i in range(n - 1):\n        (a, b) = map(int, input().split(' '))\n        if a == x or b == x:\n            deg += 1\n    if deg <= 1 or n % 2 == 0:\n        print('Ayush')\n    else:\n        print('Ashish')", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    v = 0\n    if n == 1:\n        print('Ayush')\n    else:\n        for i in range(n - 1):\n            (a, b) = map(int, input().split())\n            if a == x or b == x:\n                v = v + 1\n        if v != 1:\n            mv = n - 1\n        else:\n            mv = 1\n        if mv % 2 == 0:\n            print('Ashish')\n        else:\n            print('Ayush')", "def leaves(m, n):\n    count = 0\n    for i in m:\n        if count >= 2:\n            break\n        if i[0] == n or i[1] == n:\n            count += 1\n    if len(m) <= 1 or count == 1:\n        return 'Ayush'\n    elif (len(m) - 2) % 2 == 0:\n        return 'Ashish'\n    else:\n        return 'Ayush'\nfor i in range(int(input().strip())):\n    mass = []\n    t = [int(d) for d in input().strip().split()]\n    for j in range(t[0] - 1):\n        g = [int(d) for d in input().strip().split()]\n        mass.append(g)\n    print(leaves(mass, t[1]))", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    p = [0] * (n + 1)\n    for i in range(n - 1):\n        (u, v) = map(int, input().split())\n        p[u] += 1\n        p[v] += 1\n    if n == 1 or p[x] == 1:\n        print('Ayush')\n    elif n % 2:\n        print('Ashish')\n    else:\n        print('Ayush')", "def main():\n    SIN = lambda : map(int, input().split())\n    LIN = lambda : list(map(int, input().split()))\n    t = int(input())\n    for _ in range(t):\n        (n, x) = SIN()\n        deg = [0] * (n + 1)\n        for i in range(n - 1):\n            (j, k) = SIN()\n            deg[j] += 1\n            deg[k] += 1\n        if deg[x] == 1 or n % 2 == 0 or n == 1:\n            print('Ayush')\n        else:\n            print('Ashish')\n    return\nmain()", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    d = 0\n    for _ in range(n - 1):\n        if x in map(int, input().split()):\n            d += 1\n    if d > 1:\n        print('Ashish' if n % 2 else 'Ayush')\n    else:\n        print('Ayush')", "for x in range(int(input())):\n    (n, x) = map(int, input().split())\n    x -= 1\n    deg = [0 for i in range(n)]\n    for i in range(n - 1):\n        (a, b) = map(int, input().split())\n        deg[a - 1] += 1\n        deg[b - 1] += 1\n    if deg[x] <= 1 or n % 2 == 0:\n        print('Ayush')\n    else:\n        print('Ashish')", "for i in range(int(input())):\n    (n, x) = map(int, input().split())\n    c = 0\n    for j in range(n - 1):\n        (a, b) = map(int, input().split())\n        if a == x or b == x:\n            c = c + 1\n    if n == 1:\n        print('Ayush')\n    elif c == 1:\n        print('Ayush')\n    elif n % 2 == 0:\n        print('Ayush')\n    else:\n        print('Ashish')", "for i in range(int(input())):\n    (n, x) = [int(x) for x in input().split()]\n    if n == 1:\n        print('Ayush')\n    else:\n        cnt = 0\n        for i in range(n - 1):\n            (a, b) = [int(x) for x in input().split()]\n            if a == x or b == x:\n                cnt += 1\n        if cnt == 1:\n            print('Ayush')\n        else:\n            print(['Ayush', 'Ashish'][n - 2 & 1])", "import sys\n\ndef I():\n    return sys.stdin.readline().rstrip()\nfor tc in range(1, 1 + int(I())):\n    (n, x) = map(int, I().split())\n    c = 0\n    for _ in range(n - 1):\n        (u, v) = map(int, I().split())\n        if x in [u, v]:\n            c += 1\n    if c > 1:\n        print('Ayush' if n % 2 == 0 else 'Ashish')\n    else:\n        print('Ayush')", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    deg = [0] * n\n    for j in range(n - 1):\n        (a, b) = map(int, input().split())\n        deg[a - 1] += 1\n        deg[b - 1] += 1\n    if n == 1 or n == 2:\n        print('Ayush')\n    elif deg[x - 1] == 1:\n        print('Ayush')\n    elif (n - 3) % 2 == 0:\n        print('Ashish')\n    else:\n        print('Ayush')", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    mat = [[] for i in range(n + 1)]\n    for i in range(n - 1):\n        (a, b) = map(int, input().split())\n        mat[a].append(b)\n        mat[b].append(a)\n    if len(mat[x]) < 2:\n        print('Ayush')\n    elif n - 2 & 1:\n        print('Ashish')\n    else:\n        print('Ayush')", "T = int(input())\nfor t in range(T):\n    (n, x) = map(int, input().rstrip().split())\n    counter = 0\n    for l in range(n - 1):\n        (a, b) = map(int, input().rstrip().split())\n        if a == x or b == x:\n            counter += 1\n    if n % 2 == 0 or counter <= 1:\n        print('Ayush')\n    else:\n        print('Ashish')"]