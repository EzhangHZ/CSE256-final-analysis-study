["import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, m) = map(int, input().split())\n    e = dict()\n    same = 0\n    diff = 0\n    res = []\n    for i in range(m):\n        a = input().split()\n        c = a[0]\n        if c == '+':\n            u = int(a[1])\n            v = int(a[2])\n            c = a[3]\n            z = e.get((v, u), None)\n            if z == c:\n                same += 1\n            elif z is not None:\n                diff += 1\n            e[u, v] = c\n        elif c == '-':\n            u = int(a[1])\n            v = int(a[2])\n            c = e[u, v]\n            del e[u, v]\n            z = e.get((v, u), None)\n            if z == c:\n                same -= 1\n            elif z is not None:\n                diff -= 1\n        else:\n            c = int(a[1])\n            if c % 2 == 1:\n                if diff + same > 0:\n                    res.append('YES')\n                else:\n                    res.append('NO')\n            elif same > 0:\n                res.append('YES')\n            else:\n                res.append('NO')\n    print('\\n'.join(res))\nsolve()", "def solve():\n    (n, m) = map(int, input().split())\n    e = dict()\n    same = 0\n    diff = 0\n    res = []\n    for i in range(m):\n        a = input().split()\n        c = a[0]\n        if c == '+':\n            u = int(a[1])\n            v = int(a[2])\n            c = a[3]\n            z = e.get((v, u), None)\n            if z == c:\n                same += 1\n            elif z is not None:\n                diff += 1\n            e[u, v] = c\n        elif c == '-':\n            u = int(a[1])\n            v = int(a[2])\n            c = e[u, v]\n            del e[u, v]\n            z = e.get((v, u), None)\n            if z == c:\n                same -= 1\n            elif z is not None:\n                diff -= 1\n        else:\n            c = int(a[1])\n            if c % 2 == 1:\n                if diff + same > 0:\n                    res.append('YES')\n                else:\n                    res.append('NO')\n            elif same > 0:\n                res.append('YES')\n            else:\n                res.append('NO')\n    print('\\n'.join(res))\nsolve()", "def solve():\n    (n, m) = map(int, input().split())\n    e = dict()\n    same = 0\n    diff = 0\n    res = []\n    for i in range(m):\n        a = input().split()\n        c = a[0]\n        if c == '+':\n            u = int(a[1])\n            v = int(a[2])\n            c = a[3]\n            z = e.get((v, u), None)\n            if z == c:\n                same += 1\n            elif z is not None:\n                diff += 1\n            e[u, v] = c\n        elif c == '-':\n            u = int(a[1])\n            v = int(a[2])\n            c = e[u, v]\n            del e[u, v]\n            z = e.get((v, u), None)\n            if z == c:\n                same -= 1\n            elif z is not None:\n                diff -= 1\n        else:\n            c = int(a[1])\n            if c % 2 == 1:\n                res.append('YES' if diff + same > 0 else 'NO')\n            else:\n                res.append('YES' if same > 0 else 'NO')\n    print('\\n'.join(res))\nsolve()", "def solve():\n    (n, m) = map(int, input().split())\n    e = dict()\n    same = 0\n    diff = 0\n    res = []\n    for i in range(m):\n        a = input().split()\n        c = a[0]\n        if c == '+':\n            u = int(a[1])\n            v = int(a[2])\n            c = a[3]\n            z = e.get((v, u), None)\n            if z == c:\n                same += 1\n            elif z is not None:\n                diff += 1\n            e[u, v] = c\n        elif c == '-':\n            u = int(a[1])\n            v = int(a[2])\n            c = e[u, v]\n            del e[u, v]\n            z = e.get((v, u), None)\n            if z == c:\n                same -= 1\n            elif z is not None:\n                diff -= 1\n        else:\n            c = int(a[1])\n            if c % 2 == 1:\n                res.append('YES' if diff + same > 0 else 'NO')\n            else:\n                res.append('YES' if same > 0 else 'NO')\n    print('\\n'.join(res))\nsolve()", "def solve():\n    (n, m) = map(int, input().split())\n    e = dict()\n    same = 0\n    diff = 0\n    res = []\n    for i in range(m):\n        a = input().split()\n        c = a[0]\n        if c == '+':\n            u = int(a[1])\n            v = int(a[2])\n            c = a[3]\n            z = e.get((v, u), None)\n            if z == c:\n                same += 1\n            elif z is not None:\n                diff += 1\n            e[u, v] = c\n        elif c == '-':\n            u = int(a[1])\n            v = int(a[2])\n            c = e[u, v]\n            del e[u, v]\n            z = e.get((v, u), None)\n            if z == c:\n                same -= 1\n            elif z is not None:\n                diff -= 1\n        else:\n            c = int(a[1])\n            if c % 2 == 1:\n                if diff + same > 0:\n                    res.append('YES')\n                else:\n                    res.append('NO')\n            elif same > 0:\n                res.append('YES')\n            else:\n                res.append('NO')\n    print('\\n'.join(res))\nsolve()", "(n, m) = map(int, input().split())\n(rev, same) = (0, 0)\nnow = {}\na = [set() for _ in range(n + 1)]\nfor i in range(m):\n    b = input().split()\n    x = b[0]\n    if x == '+':\n        (u, v, w) = (int(b[1]), int(b[2]), b[3])\n        a[u].add(v)\n        now[u, v] = w\n        if (v, u) in now:\n            rev += 1\n            if now[v, u] == w:\n                same += 1\n    elif x == '-':\n        (u, v) = (int(b[1]), int(b[2]))\n        if (v, u) in now:\n            rev -= 1\n            if now[v, u] == now[u, v]:\n                same -= 1\n        a[u].remove(v)\n        del now[u, v]\n    else:\n        k = int(b[1])\n        if k & 1:\n            ans = 'YES' if same or rev else 'NO'\n        else:\n            ans = 'YES' if same else 'NO'\n        print(ans)"]