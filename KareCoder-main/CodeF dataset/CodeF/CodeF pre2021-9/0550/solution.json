["import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    if n == 1:\n        return 'Bob'\n    cnt = 0\n    v = n\n    while v % 2 == 0:\n        v //= 2\n        cnt += 1\n    if v > 1:\n        return 'Alice' if cnt > 0 else 'Bob'\n    else:\n        return 'Alice' if cnt % 2 == 0 else 'Bob'\nfor _ in range(int(input())):\n    print(solve())", "import sys\nimport math\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    if n % 2 == 1:\n        print('Bob')\n    elif math.log2(n) == int(math.log2(n)):\n        if int(math.log2(n)) % 2 == 1:\n            print('Bob')\n        else:\n            print('Alice')\n    else:\n        print('Alice')", "import sys\n\ndef inp():\n    return sys.stdin.readline().rstrip('\\r\\n')\n\ndef N():\n    return int(inp())\n\ndef testcase(t):\n    for p in range(t):\n        solve()\nbad = set()\nfor i in range(1, 40, 2):\n    bad.add(2 ** i)\n\ndef solve():\n    n = N()\n    if n % 2:\n        print('Bob')\n        return\n    if n in bad:\n        print('Bob')\n        return\n    print('Alice')\ntestcase(N())", "import sys\ninput = sys.stdin.readline\n\ndef check(n):\n    if n % 2 == 1:\n        return False\n    cnt = 0\n    while n % 2 == 0:\n        n //= 2\n        cnt += 1\n    if cnt % 2 == 1 and n == 1:\n        return False\n    return True\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    if check(n):\n        print('Alice')\n    else:\n        print('Bob')", "ans = []\nfor _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 1:\n        ans.append('Bob')\n        continue\n    cnt = 0\n    while n % 2 == 0:\n        n //= 2\n        cnt += 1\n    if n != 1 or cnt % 2 == 0:\n        ans.append('Alice')\n    else:\n        ans.append('Bob')\nprint('\\n'.join(ans))", "import sys\nimport os\nif 'CP_LOCAL' in os.environ:\n    sys.stdin = open('codeforces/input.txt', 'r')\n    sys.stdout = open('codeforces/output.txt', 'w')\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef solve(n):\n    if n <= 3:\n        return 'Bob'\n    if n % 2 == 1:\n        return 'Bob'\n    elif n & n - 1 == 0:\n        c = 0\n        while n != 1:\n            c += 1\n            n //= 2\n        return 'Bob' if c % 2 == 1 else 'Alice'\n    else:\n        return 'Alice'\nT = inp()\nfor _ in range(T):\n    n = inp()\n    print(solve(n))", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    if n % 2:\n        winner = 'Bob'\n    else:\n        k = 0\n        while n % 2 == 0:\n            n //= 2\n            k += 1\n        if n == 1:\n            if k % 2:\n                winner = 'Bob'\n            else:\n                winner = 'Alice'\n        else:\n            winner = 'Alice'\n    print(winner)", "import sys, math\ninput = lambda : sys.stdin.readline().rstrip()\nI = lambda : [*map(int, input().split())]\nfor t in range(I()[0]):\n    (n,) = I()\n    if n & 1:\n        print('Bob')\n    elif not (n and (not n & n - 1)):\n        print('Alice')\n    else:\n        cnt = 0\n        while n % 2 == 0:\n            n //= 2\n            cnt += 1\n        if cnt & 1:\n            print('Bob')\n        else:\n            print('Alice')", "import sys\nfrom math import log2\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    if n % 2 == 1:\n        print('Bob')\n        continue\n    x = log2(n)\n    if int(x) == x:\n        print('Alice' if x % 2 == 0 else 'Bob')\n    else:\n        print('Alice')", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 1:\n        print('Bob')\n    elif n % 2 == 0 and bin(n)[2:].count('1') != 1:\n        print('Alice')\n    else:\n        m = int(math.log(n, 2))\n        if m % 2 == 0:\n            print('Alice')\n        else:\n            print('Bob')", "import bisect\nfrom collections import *\nfrom itertools import *\nimport math\nimport heapq\nimport sys\nfrom pprint import pprint\ninput = sys.stdin.readline\nsys.setrecursionlimit(10000)\n\ndef inp():\n    return int(input())\n\ndef inlist():\n    return list(map(int, input().split()))\n\ndef instring():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invariable():\n    return map(int, input().split())\n\nclass Solution:\n\n    def is_even(self, x):\n        return x % 2 == 0\n\n    def main(self, n):\n        if not self.is_even(n):\n            return False\n        res = 0\n        while self.is_even(n):\n            n /= 2\n            res += 1\n        return True if n > 1 else res % 2 == 0\nt = inp()\noutputs = []\nfor _ in range(t):\n    n = inp()\n    output = Solution().main(n)\n    outputs.append('Alice' if output else 'Bob')\nfor o in outputs:\n    print(o)", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        t = math.log2(n)\n        if math.floor(t) == math.ceil(t):\n            if t % 2 == 0:\n                print('Alice')\n            else:\n                print('Bob')\n        else:\n            print('Alice')\n    else:\n        print('Bob')", "powers_of_two = [pow(2, degree) for degree in range(31)]\nfor _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 1 or (n in powers_of_two and powers_of_two.index(n) % 2 == 1):\n        print('Bob')\n    else:\n        print('Alice')", "def win():\n    print('Alice')\n\ndef lose():\n    print('Bob')\nt = int(input())\nfor T in range(t):\n    n = int(input())\n    if n & 1:\n        lose()\n        continue\n    p = format(n, 'b')[::-1]\n    if p.count('1') == 1:\n        if p.find('1') & 1:\n            lose()\n            continue\n    win()", "for _ in range(int(input())):\n    n = int(input())\n    c = 0\n    if n % 2 == 1:\n        print('Bob')\n    else:\n        while n % 2 == 0:\n            c += 1\n            n //= 2\n        if n != 1 or c % 2 == 0:\n            print('Alice')\n        else:\n            print('Bob')", "def main():\n    for _ in range(int(input())):\n        n = int(input())\n        if n % 2 == 1:\n            print('Bob')\n        else:\n            f = 0\n            while n % 2 == 0:\n                n //= 2\n                f += 1\n            if n != 1 or f % 2 == 0:\n                print('Alice')\n            else:\n                print('Bob')\nmain()", "for i in range(int(input())):\n    n = int(input())\n    print(['Alice', 'Bob'][n % 2 or (bin(n)[2:].count('1') == 1 and (len(bin(n)) + 1) % 2)])", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    if n % 2 == 1:\n        print('Bob')\n    else:\n        c = 0\n        while n % 2 == 0:\n            c += 1\n            n = n // 2\n        if n > 1:\n            print('Alice')\n        elif c % 2 == 0:\n            print('Alice')\n        else:\n            print('Bob')", "def ss(n):\n    if n % 2 == 1:\n        return 'Bob'\n    else:\n        a = 0\n        while n > 0 and n % 2 == 0:\n            a += 1\n            n = n // 2\n        if n > 1:\n            return 'Alice'\n        else:\n            if a % 2 == 0:\n                return 'Alice'\n            return 'Bob'\nfor i in range(int(input())):\n    n = int(input())\n    print(ss(n))", "def second_wins(n: int):\n    if n <= 3:\n        return True\n    if n & 1:\n        return True\n    p2 = 0\n    while n & 1 == 0:\n        p2 += 1\n        n >>= 1\n    if n > 1:\n        return False\n    else:\n        return p2 & 1\n\ndef solve():\n    n = int(input())\n    print('Bob' if second_wins(n) else 'Alice')\n\ndef main():\n    t = int(input())\n    for __ in range(t):\n        solve()\nmain()", "from sys import stdin, stdout\nfrom heapq import heapify, heappush, heappop, heappushpop\nfrom collections import defaultdict as dd, deque as dq, Counter as C\nfrom bisect import bisect_left as bl, bisect_right as br\nfrom itertools import combinations as cmb, permutations as pmb\nfrom math import factorial as f, ceil, gcd, sqrt, log, inf\nmi = lambda : map(int, input().split())\nii = lambda : int(input())\nli = lambda : list(map(int, input().split()))\nmati = lambda r: [li() for _ in range(r)]\nlcm = lambda a, b: a * b // gcd(a, b)\nMOD = 10 ** 9 + 7\n\ndef soe(n):\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while p * p <= n:\n        if prime[p] == True:\n            for i in range(p * p, n + 1, p):\n                prime[i] = False\n        p += 1\n    return prime\n\ndef ncr(n, r):\n    (p, k) = (1, 1)\n    if n - r < r:\n        r = n - r\n    if r != 0:\n        while r:\n            (p, k) = (p * n, k * r)\n            m = gcd(p, k)\n            (p, k) = (p // m, k // m)\n            (n, r) = (n - 1, r - 1)\n    else:\n        p = 1\n    return p\n\ndef solve():\n    n = ii()\n    c = 0\n    if n % 2 == 1:\n        print('Bob')\n        return\n    while n % 2 == 0:\n        n //= 2\n        c += 1\n    if n > 1:\n        print('Alice')\n    elif c % 2 == 0:\n        print('Alice')\n    else:\n        print('Bob')\nfor _ in range(ii()):\n    solve()", "def solve(n):\n    if n & 1:\n        return 'Bob'\n    else:\n        cnt = 0\n        while n % 2 == 0:\n            n = n // 2\n            cnt += 1\n        if n > 1:\n            return 'Alice'\n        elif cnt % 2 == 1:\n            return 'Bob'\n        else:\n            return 'Alice'\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print(solve(n))", "def suresh(n):\n    if n & 1 == 1:\n        return 'Bob'\n    count = 0\n    while n & 1 == 0:\n        n //= 2\n        count += 1\n    if n > 1:\n        return 'Alice'\n    if count & 1 != 0:\n        return 'Bob'\n    return 'Alice'\nfor t in range(int(input())):\n    n = int(input())\n    print(suresh(n))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 2 == 1:\n        print('Bob')\n    else:\n        while n % 4 == 0:\n            n //= 4\n        if n == 2:\n            print('Bob')\n        else:\n            print('Alice')", "t = int(input())\nfor _ in range(0, t):\n    n = int(input())\n    if n & 1:\n        print('Bob')\n    else:\n        x = 0\n        while n % 2 == 0:\n            n = n // 2\n            x = x + 1\n        if n > 1:\n            print('Alice')\n        elif x % 2 == 1:\n            print('Bob')\n        else:\n            print('Alice')", "for _ in range(int(input())):\n    n = int(input())\n    if n & 1:\n        print('Bob')\n    else:\n        t = 0\n        while n % 2 == 0:\n            n = n / 2\n            t += 1\n        if n > 1:\n            print('Alice')\n        elif t % 2:\n            print('Bob')\n        else:\n            print('Alice')", "import math\n\ndef isPowerOfTwo(x):\n    return x and (not x & x - 1)\nt = int(input())\nfor hh in range(0, t):\n    n = int(input())\n    if n == 1 or n == 2 or n == 3:\n        print('Bob')\n    elif n % 2 == 0:\n        if isPowerOfTwo(n):\n            cnt = math.log2(n)\n            if cnt % 2 == 0:\n                print('Alice')\n            else:\n                print('Bob')\n        else:\n            print('Alice')\n    else:\n        print('Bob')", "def f(n):\n    if n == 2:\n        return True\n    else:\n        return not f(n // 2)\nN = int(input())\nfor _ in range(N):\n    n = int(input())\n    if n % 2:\n        print('Bob')\n    else:\n        t = n\n        while t & 1 == 0:\n            t >>= 1\n        if t != 1:\n            print('Alice')\n        else:\n            print('Alice' if not f(n) else 'Bob')", "for _ in range(int(input())):\n    n = int(input())\n    k = 0\n    f = 1\n    if n & 1:\n        f = 0\n    else:\n        while n % 2 == 0:\n            n = n / 2\n            k = k + 1\n        if n == 1 and k % 2 == 1:\n            f = 0\n    print(['Bob', 'Alice'][f])", "from math import log2\nfor i in range(int(input())):\n    n = int(input())\n    if n % 2 != 0:\n        print('Bob')\n    elif n & n - 1 != 0:\n        print('Alice')\n    else:\n        a = int(log2(n))\n        if a % 2 == 0:\n            print('Alice')\n        else:\n            print('Bob')", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 1:\n        print('Bob')\n    elif n and (not n & n - 1):\n        if int(math.log(n, 2)) % 2 == 0:\n            print('Alice')\n        else:\n            print('Bob')\n    else:\n        print('Alice')", "tests = int(input())\nfor _ in range(tests):\n    i = 1\n    test = int(input())\n    if test & 1 == 1:\n        print('Bob')\n    elif test & test - 1 == 0:\n        while 1 << i <= test:\n            i += 1\n        i -= 1\n        if i & 1 == 1:\n            print('Bob')\n        else:\n            print('Alice')\n    else:\n        print('Alice')", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    if n % 2 != 0:\n        print('Bob')\n    elif n and (not n & n - 1):\n        if math.log(n, 2) % 2 == 0:\n            print('Alice')\n        else:\n            print('Bob')\n    elif n % 2 == 0:\n        print('Alice')", "d = {}\nd[1] = 'Bob'\nd[2] = 'Bob'\nd[3] = 'Bob'\nd[4] = 'Alice'\nd[5] = 'Bob'\n\ndef check(n):\n    c = 0\n    while n % 2 == 0:\n        c = c + 1\n        n = n // 2\n    if n != 1:\n        return 'Alice'\n    elif c % 2 == 0:\n        return 'Alice'\n    else:\n        return 'Bob'\n\ndef find(n):\n    if n in d:\n        return d[n]\n    elif n % 2 == 1:\n        return 'Bob'\n    else:\n        return check(n)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(find(n))", "for _ in range(int(input())):\n    n = int(input())\n    k = 0\n    win = 1\n    if n & 1:\n        win = 0\n    else:\n        while n % 2 == 0:\n            n = n / 2\n            k = k + 1\n        if n == 1 and k % 2 == 1:\n            win = 0\n    print(['Bob', 'Alice'][win])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        c = 0\n        while n % 2 == 0:\n            c = c + 1\n            n = n // 2\n        if n == 1:\n            if c % 2 == 0:\n                print('Alice')\n            else:\n                print('Bob')\n        else:\n            print('Alice')\n    else:\n        print('Bob')", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 1:\n        print('Bob')\n    else:\n        x = math.log10(n) / math.log10(2)\n        if math.ceil(x) == math.floor(x):\n            if x % 2 == 0:\n                print('Alice')\n            else:\n                print('Bob')\n        else:\n            print('Alice')", "import math\nimport collections\nfrom itertools import permutations\nfrom itertools import combinations\n\ndef prob():\n    n = int(input())\n    if n % 2 == 1:\n        print('Bob')\n        return\n    ct = 0\n    while n % 2 == 0:\n        n = n // 2\n        ct += 1\n    if n > 1:\n        print('Alice')\n    elif ct % 2 == 0:\n        print('Alice')\n    else:\n        print('Bob')\nt = 1\nt = int(input())\nfor _ in range(0, t):\n    prob()", "def solve(n):\n    if n % 2 == 1:\n        return 'Bob'\n    exp = 0\n    while n % 2 == 0:\n        exp += 1\n        n //= 2\n    if n > 1:\n        return 'Alice'\n    if exp % 2 == 0:\n        return 'Alice'\n    return 'Bob'\nfor _ in range(int(input())):\n    n = int(input())\n    print(solve(n))", "prime = [2, 3, 5]\n\ndef solve(n):\n    if n % 2:\n        return 'Bob'\n    c = 0\n    while n % 2 == 0:\n        c += 1\n        n = n // 2\n    if n == 1:\n        if c % 2:\n            return 'Bob'\n        return 'Alice'\n    else:\n        return 'Alice'\nfor case in range(int(input())):\n    n = int(input())\n    ans = solve(n)\n    print(ans)", "def solve():\n    n = int(input())\n    if n == 1:\n        return 'Bob'\n    if n & n - 1 == 0:\n        cnt = 0\n        while n != 1:\n            cnt += 1\n            n = n >> 1\n        if cnt & 1:\n            return 'Bob'\n        return 'Alice'\n    if n & 1:\n        return 'Bob'\n    return 'Alice'\nfor _ in range(int(input())):\n    print(solve())", "def solve(n):\n    if n % 2 == 1:\n        return 'Bob'\n    exp = 0\n    while n % 2 == 0:\n        exp += 1\n        n //= 2\n    if n > 1:\n        return 'Alice'\n    if exp % 2 == 0:\n        return 'Alice'\n    return 'Bob'\nfor _ in range(int(input())):\n    n = int(input())\n    print(solve(n))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        count = 0\n        while n % 2 == 0:\n            count = count + 1\n            n = n // 2\n        if n > 1 or count % 2 == 0:\n            print('Alice')\n        else:\n            print('Bob')\n    else:\n        print('Bob')", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2:\n        print('Bob')\n        continue\n    c = 0\n    while n % 2 == 0:\n        c += 1\n        n = n // 2\n    if n > 1 or c % 2 == 0:\n        print('Alice')\n    else:\n        print('Bob')", "for i in range(int(input())):\n    n = int(input())\n    print(['Alice', 'Bob'][n % 2 or (bin(n)[2:].count('1') == 1 and (len(bin(n)) + 1) % 2)])", "powers_of_two = [pow(2, degree) for degree in range(31)]\nfor _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 1 or n == 1:\n        print('Bob')\n    elif n in powers_of_two:\n        if powers_of_two.index(n) % 2 == 1:\n            print('Bob')\n        else:\n            print('Alice')\n    else:\n        print('Alice')", "from math import log2, floor\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 2 == 1:\n        print('Bob')\n    elif log2(n) == floor(log2(n)):\n        if floor(log2(n)) % 2 == 1:\n            print('Bob')\n        else:\n            print('Alice')\n    else:\n        print('Alice')", "def solve(n):\n    c = 0\n    if n % 2:\n        return 'Bob'\n    while n % 2 == 0:\n        n = n // 2\n        c += 1\n    if n > 1:\n        return 'Alice'\n    elif c % 2:\n        return 'Bob'\n    return 'Alice'\nfor case in range(int(input())):\n    n = int(input())\n    ans = solve(n)\n    print(ans)", "import math\n\ndef solve(case):\n    if case % 2 == 1 or (case & case - 1 == 0 and int(math.log(case, 2)) % 2 == 1):\n        return 'Bob'\n    return 'Alice'\nnum_cases = int(input())\ncases = []\nfor k in range(num_cases):\n    case = int(input())\n    print(solve(case))", "tests = int(input())\n\ndef Solve(tests):\n    for i in range(int(tests)):\n        n = int(int(input()))\n        if n % 2 == 1:\n            print('Bob')\n        else:\n            f = 0\n            while n % 2 == 0:\n                n = n / 2\n                f += 1\n            if n != 1 or f % 2 == 0:\n                print('Alice')\n            else:\n                print('Bob')\nSolve(tests)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n % 2 == 1:\n        print('Bob')\n        continue\n    count = 0\n    while n % 2 == 0:\n        count += 1\n        n /= 2\n    if n > 1:\n        print('Alice')\n    elif count % 2 == 0:\n        print('Alice')\n    else:\n        print('Bob')", "from math import log2\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n & n - 1 == 0 and n > 1:\n        if log2(n) % 2 == 0:\n            print('Alice')\n        else:\n            print('Bob')\n    elif n % 2 == 1:\n        print('Bob')\n    else:\n        print('Alice')", "T = int(input())\nfor i in range(0, T):\n    n = int(input())\n    p = 2\n    while p < n:\n        p *= 4\n    if p == n or n % 2 == 1:\n        print('Bob')\n    else:\n        print('Alice')", "for _ in range(int(input())):\n    n = int(input())\n    nn = n\n    cnt = 0\n    while nn % 2 == 0:\n        nn = nn // 2\n        cnt += 1\n    if nn == 1:\n        if cnt % 2 == 1 or cnt == 0:\n            print('Bob')\n        else:\n            print('Alice')\n    elif n % 2 == 0:\n        print('Alice')\n    else:\n        print('Bob')", "t = int(input())\nfor task in range(t):\n    n = int(input())\n    even = 0\n    while n % 2 == 0:\n        even += 1\n        n = n // 2\n    if even == 0 or (n == 1 and even % 2 == 1):\n        print('Bob')\n    else:\n        print('Alice')", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2:\n        print('Bob')\n    else:\n        c = 0\n        while n % 2 == 0:\n            n = n // 2\n            c += 1\n        if n > 1:\n            print('Alice')\n        elif c % 2 == 1:\n            print('Bob')\n        else:\n            print('Alice')", "import math\n\ndef solve():\n    n = int(input())\n    if n & 1:\n        print('Bob')\n    else:\n        c = 0\n        while n % 2 == 0:\n            n //= 2\n            c += 1\n        if n > 1:\n            print('Alice')\n        elif c % 2:\n            print('Bob')\n        else:\n            print('Alice')\nt = int(input())\nfor z in range(t):\n    solve()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n & 1:\n        print('Bob')\n    else:\n        c = 0\n        while n % 2 == 0:\n            n = n // 2\n            c += 1\n        if n > 1:\n            print('Alice')\n        elif c % 2:\n            print('Bob')\n        else:\n            print('Alice')", "for _ in range(int(input())):\n    n = int(input())\n    if n & 1:\n        print('Bob')\n    else:\n        ct = 0\n        while n % 2 == 0:\n            n //= 2\n            ct += 1\n        if n > 1:\n            print('Alice')\n        elif ct % 2:\n            print('Bob')\n        else:\n            print('Alice')", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2:\n        print('Bob')\n    else:\n        c = 0\n        while n % 2 == 0:\n            n /= 2\n            c += 1\n        if n > 1:\n            print('Alice')\n        elif c % 2:\n            print('Bob')\n        else:\n            print('Alice')", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2 != 0:\n        print('Bob')\n    else:\n        count = 0\n        while n % 2 == 0:\n            n /= 2\n            count += 1\n        if n > 1:\n            print('Alice')\n        elif count % 2 == True:\n            print('Bob')\n        else:\n            print('Alice')", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    if n % 2 == 1:\n        print('Bob')\n    else:\n        count = 0\n        while n % 2 == 0:\n            n /= 2\n            count += 1\n        if n > 1:\n            print('Alice')\n        elif count % 2 == 1:\n            print('Bob')\n        else:\n            print('Alice')\n    t = t - 1", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    if n % 2 == 1:\n        print('Bob')\n    else:\n        c = 0\n        while n % 2 == 0:\n            n //= 2\n            c += 1\n        if n == 1:\n            if c % 2 == 0:\n                print('Alice')\n            else:\n                print('Bob')\n        else:\n            print('Alice')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n % 2 == 1:\n        print('Bob')\n    else:\n        cnt = 0\n        while n % 2 == 0:\n            n = n // 2\n            cnt += 1\n        if n != 1 or cnt % 2 == 0:\n            print('Alice')\n        else:\n            print('Bob')", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 1:\n        print('Bob')\n    else:\n        f = 0\n        while n % 2 == 0:\n            n //= 2\n            f += 1\n        if n != 1 or f % 2 == 0:\n            print('Alice')\n        else:\n            print('Bob')", "import math as m\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    if n % 2 == 1:\n        print('Bob')\n        continue\n    cnt = 0\n    while n % 2 == 0:\n        cnt += 1\n        n /= 2\n    if n > 1:\n        print('Alice')\n    elif cnt % 2 == 0:\n        print('Alice')\n    else:\n        print('Bob')", "for _ in range(int(input())):\n    n = int(input())\n    c = 0\n    if n % 2 == 1:\n        print('Bob')\n        continue\n    while n % 2 == 0:\n        c = c + 1\n        n = n / 2\n    if n > 1:\n        print('Alice')\n    elif c % 2 == 0:\n        print('Alice ')\n    else:\n        print('Bob')", "T = int(input())\nfor tc in range(T):\n    n = int(input())\n    res = 0\n    if n % 2 == 1:\n        res = 1\n    else:\n        nc = n\n        pow2 = 0\n        while nc % 2 == 0:\n            nc = nc // 2\n            pow2 += 1\n        if nc == 1:\n            if pow2 % 2 == 0:\n                res = 0\n            else:\n                res = 1\n        else:\n            res = 0\n    if res == 0:\n        print('Alice')\n    else:\n        print('Bob')", "from math import log2\nfor _ in range(int(input())):\n    n = int(input())\n    if n & 1:\n        print('Bob')\n    elif log2(n) % 1 == 0:\n        if int(log2(n)) & 1:\n            print('Bob')\n        else:\n            print('Alice')\n    else:\n        print('Alice')", "import math\nfor i in range(int(input())):\n    n = int(input())\n    if n % 2:\n        print('Bob')\n    elif 2 ** int(math.log(n, 2)) == n:\n        if int(math.log(n, 2)) % 2:\n            print('Bob')\n        else:\n            print('Alice')\n    else:\n        print('Alice')", "import math\ntry:\n    for _ in range(int(input())):\n        n = int(input())\n        if n % 2 != 0:\n            print('Bob')\n        elif 2 ** int(math.log(n, 2)) == n:\n            if int(math.log(n, 2)) % 2 == 0:\n                print('Alice')\n            else:\n                print('Bob')\n        else:\n            print('Alice')\nexcept e:\n    pass", "import math\n\ndef is_power(x, y):\n    if x == 1:\n        return y == 1\n    p = 1\n    while p < y:\n        p *= x\n    return p == y\n\ndef f():\n    T = int(input())\n    for t in range(T):\n        n = int(input())\n        if n % 2 == 1:\n            print('Bob')\n        elif is_power(2, n) == False:\n            print('Alice')\n        elif int(math.log(n) / math.log(2)) % 2 == 1:\n            print('Bob')\n        else:\n            print('Alice')\nf()", "import math\nimport collections\nfrom itertools import permutations\nfrom itertools import combinations\n\ndef prob():\n    n = int(input())\n    if n % 2 == 1:\n        print('Bob')\n        return\n    ct = 0\n    while n % 2 == 0:\n        n = n // 2\n        ct += 1\n    if n > 1 or ct % 2 == 0:\n        print('Alice')\n    else:\n        print('Bob')\nt = 1\nt = int(input())\nfor _ in range(0, t):\n    prob()", "def solve(n):\n    if n % 2 == 1:\n        return 'Bob'\n    count = 0\n    while n % 2 == 0:\n        count += 1\n        n /= 2\n    if n > 1:\n        return 'Alice'\n    if count % 2 == 0:\n        return 'Alice'\n    return 'Bob'\nfor t in range(int(input())):\n    n = int(input())\n    print(solve(n))", "for _ in range(int(input())):\n    n = int(input())\n    cnt = 0\n    if n % 2 == 1:\n        print('Bob')\n        continue\n    while n % 2 == 0:\n        cnt += 1\n        n //= 2\n    if n > 1 or cnt % 2 == 0:\n        print('Alice')\n    else:\n        print('Bob')", "import math\nn = int(input())\nwhile n > 0:\n    n = n - 1\n    value = int(input())\n    if value == 1 or value == 2:\n        print('Bob')\n        continue\n    if value % 2 == 0:\n        if math.log2(value) == int(math.log2(value)):\n            value = int(math.log2(value))\n            if value % 2 == 0:\n                print('Alice')\n            else:\n                print('Bob')\n        else:\n            print('Alice')\n        continue\n    else:\n        print('Bob')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n % 2:\n        print('Bob')\n        continue\n    cnt = 0\n    while not n % 2:\n        cnt += 1\n        n //= 2\n    if n > 1:\n        print('Alice')\n    elif not cnt % 2:\n        print('Alice')\n    else:\n        print('Bob')", "for _ in range(int(input())):\n    n = int(input())\n\n    def fun(n):\n        if n % 2 == 1:\n            return 2\n        c = 0\n        while n % 2 == 0:\n            c += 1\n            n //= 2\n        if n > 1:\n            return 1\n        if c % 2 == 0:\n            return 1\n        return 2\n    if fun(n) == 1:\n        print('Alice')\n    else:\n        print('Bob')", "POWER_OF_2 = [2 ** i for i in range(32)]\n\ndef solve(N):\n    if N & 1 == 1:\n        return 'Bob'\n    for i in range(32):\n        if POWER_OF_2[i] == N:\n            if i & 1 == 1:\n                return 'Bob'\n            else:\n                return 'Alice'\n    return 'Alice'\nT = int(input())\nfor t in range(T):\n    N = int(input())\n    print(solve(N))", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    c = 0\n    if n % 2 == 1:\n        print('Bob')\n    else:\n        x = math.log2(n)\n        y = math.ceil(x)\n        if x == y:\n            while n != 2:\n                c = c + 1\n                n = n / 2\n            if c % 2 == 0:\n                print('Bob')\n            else:\n                print('Alice')\n        else:\n            print('Alice')", "def power2(n):\n    if n == 1 or n == 2:\n        return 1\n    elif n == 4:\n        return 0\n    times = 0\n    while n != 1:\n        if n % 2 == 0:\n            n = n // 2\n            times += 1\n        else:\n            return -1\n    return times\nfor t in range(int(input())):\n    n = int(input())\n    check = power2(n)\n    if check != -1:\n        if check == 1:\n            print('Bob')\n        elif check == 0:\n            print('Alice')\n        elif check % 2 == 0:\n            print('Alice')\n        elif check % 2 != 0:\n            print('Bob')\n    elif n % 2 == 0:\n        print('Alice')\n    else:\n        print('Bob')", "import sys\n\ndef main():\n    pass\n\ndef binary(n):\n    return bin(n).replace('0b', '')\n\ndef decimal(s):\n    return int(s, 2)\n\ndef isPrime(n):\n    if n == 1:\n        return False\n    else:\n        root = int(n ** 0.5)\n        root += 1\n        for i in range(2, root):\n            if n % i == 0:\n                return False\n        return True\n\ndef lts(l):\n    s = ''.join(map(str, l))\n    return s\n1000000007\nmod = int(1000000000.0) + 7\n\ndef sinp():\n    return sys.stdin.readline().strip()\n\ndef zinp():\n    return int(input())\n\ndef zzinp():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef llinp():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef p(xyz):\n    print(xyz)\n\ndef p2(a, b):\n    print(a, b)\nfor _ in range(zinp()):\n    n = zinp()\n    if n & 1:\n        print('Bob')\n    else:\n        m = 0\n        while n % 2 == 0:\n            n = n // 2\n            m += 1\n        if n > 1:\n            print('Alice')\n        elif m % 2:\n            print('Bob')\n        else:\n            print('Alice')", "for _ in range(int(input())):\n    n = int(input())\n    k = 0\n    f = 1\n    if n & 1:\n        f = 0\n    else:\n        while n % 2 == 0:\n            n = n / 2\n            k = k + 1\n        if n == 1 and k % 2 == 1:\n            f = 0\n    print(['Bob', 'Alice'][f])", "for _ in range(int(input())):\n    n = int(input())\n    if n & 1 == 1:\n        print('Bob')\n    else:\n        ct = 0\n        while n % 2 == 0:\n            n /= 2\n            ct += 1\n        if n > 1:\n            print('Alice')\n        elif ct % 2 == 1:\n            print('Bob')\n        else:\n            print('Alice')", "for _ in range(int(input())):\n    n = int(input())\n    c = 0\n    ans = 'Alice'\n    while n % 2 == 0:\n        c += 1\n        n = n // 2\n    if n == 1 and c % 2 == 1 or (n % 2 == 1 and c == 0):\n        ans = 'Bob'\n    print(ans)", "for testis in range(int(input())):\n    n = int(input())\n    if n & 1:\n        print('Bob')\n    else:\n        ct = 0\n        while n % 2 == 0:\n            n //= 2\n            ct += 1\n        if n > 1:\n            print('Alice')\n        elif ct % 2:\n            print('Bob')\n        else:\n            print('Alice')", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 1:\n        print('Bob')\n        continue\n    c = 0\n    while n % 2 == 0:\n        c += 1\n        n /= 2\n    if n > 1:\n        print('Alice')\n    elif c % 2 == 0:\n        print('Alice')\n    else:\n        print('Bob')", "import math\ntry:\n    for _ in range(int(input())):\n        n = int(input())\n        if n % 2 != 0:\n            print('Bob')\n        elif 2 ** int(math.log(n, 2)) == n:\n            if int(math.log(n, 2)) % 2:\n                print('Bob')\n            else:\n                print('Alice')\n        else:\n            print('Alice')\nexcept e:\n    pass", "for _ in range(int(input())):\n    n = int(input())\n    if n % 2 == 0:\n        f = 0\n        while n % 2 == 0:\n            n = n // 2\n            f += 1\n        if f % 2 == 0 or n != 1:\n            print('Alice')\n        else:\n            print('Bob')\n    else:\n        print('Bob')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        n /= 2\n        bob = True\n        while n > 1:\n            if n % 4:\n                bob = False\n                break\n            n //= 4\n        if bob:\n            print('Bob')\n        else:\n            print('Alice')\n    else:\n        print('Bob')", "def solve(n):\n    if n % 2:\n        return 'Bob'\n    pw = 0\n    while n % 2 == 0:\n        pw += 1\n        n = n // 2\n    if n > 1:\n        return 'Alice'\n    else:\n        if pw % 2:\n            return 'Bob'\n        return 'Alice'\nfor caser in range(int(input())):\n    n = int(input())\n    ans = solve(n)\n    print(ans)", "import random\nfor i in range(int(input())):\n    n = int(input())\n    if n % 2 == 1:\n        print('Bob')\n    else:\n        f = 0\n        while n % 2 == 0:\n            n = n / 2\n            f += 1\n        if n != 1 or f % 2 == 0:\n            print('Alice')\n        else:\n            print('Bob')", "for i in range(int(input())):\n    n = int(input())\n    if n % 2 == 1:\n        print('Bob')\n    else:\n        f = 0\n        while n % 2 == 0:\n            n = n / 2\n            f += 1\n        if n != 1 or f % 2 == 0:\n            print('Alice')\n        else:\n            print('Bob')", "import math\n\ndef sol(A):\n    if A % 2 != 0:\n        return 'Bob'\n    else:\n        count = 0\n        while A % 2 == 0:\n            A = A // 2\n            count += 1\n        if A > 1:\n            return 'Alice'\n        elif count % 2 == 0:\n            return 'Alice'\n        else:\n            return 'Bob'\nx = int(input())\nfor _ in range(x):\n    y = int(input())\n    print(sol(y))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    if n & 1 == 1:\n        print('Bob')\n    else:\n        c = 0\n        while n % 2 == 0:\n            n = n / 2\n            c = c + 1\n        if n > 1:\n            print('Alice')\n        elif c % 2 != 0:\n            print('Bob')\n        else:\n            print('Alice')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    k = 0\n    if n % 2 == 1:\n        print('Bob')\n    else:\n        while n % 2 == 0:\n            k += 1\n            n /= 2\n        if n % 2 == 1 and n != 1:\n            print('Alice')\n        elif k % 2 == 0:\n            print('Alice')\n        else:\n            print('Bob')", "for _ in range(int(input())):\n    n = int(input())\n    if n == 1 or n == 2 or n == 3:\n        print('Bob')\n    elif n & n - 1 == 0:\n        cnt = 0\n        while n > 1:\n            n = n // 2\n            cnt += 1\n        if cnt % 2 == 0:\n            print('Alice')\n        else:\n            print('Bob')\n    elif n % 2 == 0:\n        print('Alice')\n    else:\n        print('Bob')", "for _ in range(int(input())):\n    n = int(input())\n    m = n\n    p = 0\n    while m % 2 == 0:\n        m = m // 2\n        p += 1\n    if m == 1:\n        if p == 0 or p % 2 != 0:\n            print('Bob')\n        else:\n            print('Alice')\n    elif n % 2 != 0:\n        print('Bob')\n    else:\n        print('Alice')", "for testcase in range(int(input())):\n    n = int(input())\n    if n % 2 != 0:\n        print('Bob')\n        continue\n    (k, m) = (0, n)\n    while True:\n        m = m // 2\n        if m == 0:\n            break\n        k = k + 1\n    if n != 2 ** k or k % 2 == 0:\n        print('Alice')\n    else:\n        print('Bob')", "arr = [1]\nfor i in range(33):\n    arr.append(arr[-1] * 2)\nfor _ in range(int(input())):\n    n = int(input())\n    if n % 2 != 0:\n        print('Bob')\n    else:\n        f = -1\n        for i in range(len(arr)):\n            if arr[i] == n:\n                f = i\n        if f == -1:\n            print('Alice')\n        elif f % 2 == 0:\n            print('Alice')\n        else:\n            print('Bob')"]