["def main(r):\n    n = int(input())\n    a = input()\n    b = input()\n    st = 0\n    end = n - 1\n    ln = 0\n    swaps = ''\n    if len(a) == 1:\n        if a == b:\n            print(0)\n        else:\n            print('1 1')\n        return\n    else:\n        for i in range(0, n):\n            if i % 2 == 0:\n                if a[st] == b[-(1 + i)]:\n                    ln += 1\n                    swaps += '1 '\n                st += 1\n            else:\n                if a[end] != b[-(1 + i)]:\n                    swaps += '1 '\n                    ln += 1\n                end -= 1\n            ln += 1\n            swaps += str(n - i) + ' '\n        print(ln, swaps)\nt = int(input())\nfor i in range(t):\n    main(i)", "import sys\nr = sys.stdin.readline\n\ndef revAndnot(bit, idx):\n    tmp = ''\n    for i in range(idx):\n        tmp += '1' if bit[i] == '0' else '0'\n    return tmp[::-1] + bit[idx:]\nfor _ in range(int(r())):\n    n = int(r())\n    a = r().strip()\n    b = r().strip()\n    ans = []\n    flip = False\n    idx = 0\n    for i in range(n - 1, -1, -1):\n        if flip ^ (a[idx] == b[i]):\n            ans.append(str(1))\n        ans.append(str(i + 1))\n        if flip:\n            idx -= i\n        else:\n            idx += i\n        flip ^= True\n    print(len(ans), end=' ')\n    print(' '.join(ans))", "import math\nfrom sys import stdin, stdout\nfor _ in range(int(input())):\n    n = int(input())\n    s1 = list(input())\n    s2 = list(input())\n    ans = []\n    c = 0\n    f = 0\n    j = 0\n    for i in range(n - 1, -1, -1):\n        if f == 0:\n            if s1[j] == s2[i]:\n                ans.append(str(1))\n                c += 1\n        elif s1[j] != s2[i]:\n            ans.append(str(1))\n            c += 1\n        ans.append(str(i + 1))\n        c += 1\n        if f == 0:\n            f = 1\n            k = n - 1 - j\n            j = k\n        else:\n            f = 0\n            k = n - 1 - j\n            j = k + 1\n    print(str(c) + ' ' + ' '.join(ans))", "def find(s1, s2):\n    if len(s1) == 1:\n        if s1 == s2:\n            return []\n        else:\n            return [1]\n    indices = [-1] * len(s1)\n    cur = len(s1) - 1\n    val = 0\n    for i in range(len(s1)):\n        indices[cur] = val\n        cur -= 2\n        val += 1\n        if cur < 0:\n            break\n    if indices[0] == -1:\n        cur = 0\n        for i in range(len(s1)):\n            indices[cur] = val\n            val += 1\n            cur += 2\n            if cur > len(s1) - 1:\n                break\n    else:\n        cur = 1\n        for i in range(len(s1)):\n            indices[cur] = val\n            val += 1\n            cur += 2\n            if cur > len(s1) - 1:\n                break\n    ans = []\n    temp = 1\n    for i in range(len(s1) - 1, -1, -1):\n        if (int(s1[indices[i]]) + temp) % 2 == int(s2[i]) % 2:\n            ans += [i + 1]\n        else:\n            ans += [1, i + 1]\n        temp += 1\n    return ans\nANS = []\nfor _ in range(int(input())):\n    input()\n    s1 = input()\n    s2 = input()\n    ans = find(s1, s2)\n    ans = [str(x) for x in ans]\n    ans = [str(len(ans))] + ans\n    ANS += [' '.join(ans)]\nprint('\\n'.join(ANS))", "import sys\ninput = sys.stdin.readline\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = input()\n    b = input()\n    scheck = []\n    pos = 0\n    pos1 = n - 1\n    reverse = 0\n    for j in range(n - 1, -1, -1):\n        if not reverse:\n            if a[pos] != b[j]:\n                scheck.append(j + 1)\n            else:\n                scheck.append(1)\n                scheck.append(j + 1)\n            pos += 1\n            reverse = 1\n        else:\n            if a[pos1] != b[j]:\n                scheck.append(1)\n                scheck.append(j + 1)\n            else:\n                scheck.append(j + 1)\n            pos1 -= 1\n            reverse = 0\n    print(len(scheck), *scheck)", "def task():\n    n = int(input())\n    a = input()\n    b = input()\n    answer = []\n    j = len(b) - 1\n    for i in range(len(a)):\n        if i % 2 == 0:\n            i1 = i // 2\n        else:\n            i1 = n - 1 - i // 2\n        c = a[i1]\n        if i % 2 != 0:\n            c = '0' if c == '1' else '1'\n        if c == b[j]:\n            answer.append(1)\n        answer.append(j + 1)\n        j -= 1\n    print(len(answer), end=' ')\n    print(*answer)\nn = int(input())\nfor _ in range(n):\n    task()", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    l1 = input()\n    l2 = input()\n    ans = []\n    revert = False\n    index = -1\n    for i in range(n):\n        if i % 2 == 0:\n            index += 1\n            c1 = index\n        else:\n            c1 = n - index - 1\n        if l1[c1] != l2[n - i - 1]:\n            if i % 2 == 0:\n                ans.append(n - i)\n            else:\n                ans.append(1)\n                ans.append(n - i)\n        elif i % 2 == 0:\n            ans.append(1)\n            ans.append(n - i)\n        else:\n            ans.append(n - i)\n    print(len(ans), end=' ')\n    print(*ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(input())\n    brr = list(input())\n    a = 0\n    b = n - 1\n    k = 0\n    ans = []\n    for i in range(n - 1, -1, -1):\n        if k == 0:\n            if arr[a] == brr[i]:\n                ans.append(1)\n            ans.append(i + 1)\n            k = 1\n            a += 1\n        else:\n            if arr[b] != brr[i]:\n                ans.append(1)\n            ans.append(i + 1)\n            k = 0\n            b -= 1\n    print(len(ans), *ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    flag = 0\n    lft = 0\n    rht = n - 1\n    res = []\n    for i in range(n - 1, -1, -1):\n        if flag == 0:\n            if b[i] == a[lft]:\n                res.append(1)\n            lft += 1\n        else:\n            if b[i] != a[rht]:\n                res.append(1)\n            rht -= 1\n        res.append(i + 1)\n        flag = 1 - flag\n    print(len(res), *res)", "def get_flipped(x, flips):\n    if flips % 2 == 0:\n        return x\n    else:\n        return '0' if x == '1' else '1'\n\ndef solve():\n    n = int(input().strip())\n    a = input().strip()\n    b = input().strip()\n    ar = []\n    for i in range(n):\n        this_bit = b[n - i - 1]\n        first_bit = get_flipped(a[i // 2] if i % 2 == 0 else a[n - 1 - i // 2], i)\n        if first_bit == this_bit:\n            ar.append(1)\n        ar.append(n - i)\n    print(len(ar), *ar)\nt = int(input().strip())\nfor _ in range(t):\n    solve()", "def solve(ls1, ls2, debug=0):\n    n = len(ls1)\n    result = []\n    for i in range(n):\n        if i % 2:\n            j = -1 - i // 2\n            x = ls1[j] ^ 1\n        else:\n            j = i // 2\n            x = ls1[j]\n        y = ls2[-i - 1]\n        if debug:\n            print(f'i: {i}, j: {j}, x: {x}, y: {y}')\n        if x == y:\n            result.append(1)\n        result.append(n - i)\n    return result\n\ndef main(istr, ostr):\n    t = int(istr.readline())\n    for _ in range(t):\n        n = int(istr.readline())\n        ls1 = list(map(int, istr.readline().strip()))\n        ls2 = list(map(int, istr.readline().strip()))\n        result = solve(ls1, ls2)\n        print(len(result), *result, file=ostr)\nimport sys\nmain(sys.stdin, sys.stdout)", "for _ in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input()))\n    l2 = list(map(int, input()))\n    flip = False\n    idx = 0\n    ans = []\n    for i in range(n - 1, -1, -1):\n        if flip ^ (l1[idx] == l2[i]):\n            ans.append(1)\n        ans.append(i + 1)\n        if flip:\n            idx -= i\n        else:\n            idx += i\n        flip = not flip\n    print(len(ans), *ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, list(input())))\n    b = list(map(int, list(input())))\n    ans = []\n    a0 = a[0]\n    j = n - 1\n    k = 1\n    for i in range(n - 1, -1, -1):\n        if b[i] == a0:\n            ans.append(1)\n        ans.append(i + 1)\n        if (n - i) % 2 == 1:\n            a0 = (a[j] + 1) % 2\n            j -= 1\n        else:\n            a0 = a[k]\n            k += 1\n    print(len(ans), *ans)", "str1 = 'First'\nstr2 = 'Second'\n\ndef rev(c, cnt):\n    if cnt % 2 == 0:\n        return c\n    if c == '0':\n        c = '1'\n    else:\n        c = '0'\n    return c\n\ndef solve():\n    n = int(input())\n    a = input()\n    b = input()\n    ans = list()\n    (l, r) = (0, n - 1)\n    for i in range(n):\n        if i % 2 == 0:\n            if rev(a[l], i) == b[n - i - 1]:\n                ans.append(1)\n            l += 1\n        else:\n            if rev(a[r], i) == b[n - i - 1]:\n                ans.append(1)\n            r -= 1\n        ans.append(n - i)\n    print(len(ans), sep=' ', end=' ')\n    for num in ans:\n        print(num, sep=' ', end=' ')\n    print()\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        solve()\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, list(input())))\n    b = list(map(int, list(input())))\n    array = []\n    a0 = a[0]\n    j = n - 1\n    k = 1\n    for i in range(n - 1, -1, -1):\n        if b[i] == a0:\n            array.append(1)\n        array.append(i + 1)\n        if (n - i) % 2 == 1:\n            a0 = (a[j] + 1) % 2\n            j -= 1\n        else:\n            a0 = a[k]\n            k += 1\n    print(len(array), *array)", "from collections import deque\n\ndef f(v):\n    if v == '1':\n        return '0'\n    else:\n        return '1'\n\ndef e(x):\n    if x % 2 == 0:\n        return a[x // 2]\n    else:\n        return f(a[-(x // 2 + 1)])\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(input())\n    b = list(input())\n    m = []\n    i = 1\n    while i <= n:\n        if e(i - 1) == b[-i]:\n            m.append(1)\n            m.append(n - i + 1)\n        else:\n            m.append(n - i + 1)\n        i += 1\n    print(len(m), *m)", "for tc in range(int(input())):\n    n = int(input())\n    A = input()\n    B = input()\n    steps = []\n    for i in range(n):\n        if i % 2 == 0:\n            if A[int(i / 2)] != B[n - 1 - i]:\n                steps.append(n - i)\n            else:\n                steps.append(1)\n                steps.append(n - i)\n        elif A[n - 1 - int(i / 2)] == B[n - 1 - i]:\n            steps.append(n - i)\n        else:\n            steps.append(1)\n            steps.append(n - i)\n    print(len(steps), end=' ')\n    for i in steps:\n        print(i, end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    a = []\n    b = []\n    a1 = list(input())\n    b1 = list(input())\n    for i in a1:\n        a.append(int(i))\n    for i in b1:\n        b.append(int(i))\n    pos1 = 0\n    pos2 = n - 1\n    reverse = 0\n    ans = []\n    for i in range(n - 1, -1, -1):\n        if not reverse:\n            if a[pos1] == b[i]:\n                ans.append(1)\n            ans.append(i + 1)\n            reverse = 1\n            pos1 += 1\n        else:\n            if a[pos2] != b[i]:\n                ans.append(1)\n            ans.append(i + 1)\n            reverse = 0\n            pos2 -= 1\n    print(len(ans), end=' ')\n    for i in ans:\n        print(i, end=' ')\n    print()", "for _ in range(int(input())):\n    n = int(input())\n    A = input()\n    B = input()\n    a = []\n    b = []\n    for i in A:\n        a.append(i)\n    for i in B:\n        b.append(i)\n    c = []\n    cnt = 0\n    x = 0\n    y = n - 1\n    for i in range(n - 1, -1, -1):\n        if cnt % 2 == 0:\n            if b[i] == '1':\n                if a[x] == '1':\n                    c.append(1)\n                    c.append(i + 1)\n                else:\n                    c.append(i + 1)\n            elif a[x] == '0':\n                c.append(1)\n                c.append(i + 1)\n            else:\n                c.append(i + 1)\n            x += 1\n        else:\n            if b[i] == '1':\n                if a[y] == '0':\n                    c.append(1)\n                    c.append(i + 1)\n                else:\n                    c.append(i + 1)\n            elif a[y] == '1':\n                c.append(1)\n                c.append(i + 1)\n            else:\n                c.append(i + 1)\n            y -= 1\n        cnt += 1\n    print(len(c), end=' ')\n    for i in c:\n        print(i, end=' ')\n    print()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    ans = []\n    cur = a[0]\n    inv = 0\n    in0 = 0\n    arr = [0] * n\n    ar1 = [i for i in range(1, (n + 1) // 2 + 1)]\n    ar2 = [i for i in range(n, (n + 1) // 2, -1)]\n    na = []\n    for i in range(len(ar2)):\n        na.append(ar1[i] - 1)\n        na.append(ar2[i] - 1)\n    if n % 2 == 1:\n        na.append(ar1[-1] - 1)\n    cnt = 0\n    for i in range(n - 1, -1, -1):\n        tmp = a[na[cnt]]\n        if cnt % 2 == 1:\n            cur = '0' if tmp == '1' else '1'\n        else:\n            cur = tmp\n        if b[i] == cur:\n            ans.append(1)\n            ans.append(i + 1)\n        else:\n            ans.append(i + 1)\n        inv += 1\n        cnt += 1\n    print(len(ans), end=' ')\n    for i in ans:\n        print(i, end=' ')\n    print()", "from sys import stdin\nfrom collections import defaultdict\ninput = stdin.readline\nT = int(input())\nfor t in range(1, T + 1):\n    n = int(input())\n    s = input()\n    res = []\n    a = [0] * (n + 1)\n    b = [0] * (n + 1)\n    for i in range(1, n + 1):\n        a[i] = int(s[i - 1])\n    s = input()\n    for i in range(1, n + 1):\n        b[i] = int(s[i - 1])\n    (l, r, cal) = (1, n, 0)\n    for h in range(1, n + 1):\n        if a[l] ^ cal == b[n + 1 - h]:\n            a[l] ^= 1\n            res.append(1)\n        if l <= r:\n            res.append(r - l + 1)\n            l += 1\n        else:\n            res.append(l - r + 1)\n            l -= 1\n        (l, r) = (r, l)\n        cal ^= 1\n    print(len(res), end=' ')\n    for x in res:\n        print(x, end=' ')\n    print()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(input())\n    a = list(map(int, a))\n    b = list(input())\n    b = list(map(int, b))\n    c = []\n    lst1 = []\n    i = 0\n    j = n - 1\n    idx = 0\n    while len(c) < n:\n        if idx % 2 == 0:\n            c.append(a[i])\n            i += 1\n            idx += 1\n        else:\n            if a[j] == 0:\n                c.append(1)\n            else:\n                c.append(0)\n            j -= 1\n            idx += 1\n    ans = 0\n    for i in range(n):\n        if c[i] == b[n - i - 1]:\n            ans += 2\n            lst1.append(1)\n            lst1.append(n - i)\n        else:\n            ans += 1\n            lst1.append(n - i)\n    print(ans, end=' ')\n    for i in range(len(lst1)):\n        print(lst1[i], end=' ')\n    print()", "def flip(a, flip):\n    if flip % 2 == 0:\n        return a\n    elif a == 1:\n        return 0\n    else:\n        return 1\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, list(input())))\n    b = list(map(int, list(input())))\n    i = 0\n    j = n - 1\n    ans = []\n    flipp = 0\n    while j >= 0:\n        if flip(a[i], flipp) != b[j]:\n            ans.append(j + 1)\n        else:\n            ans.append(1)\n            ans.append(j + 1)\n        flipp += 1\n        if i == 0:\n            a.pop(0)\n            i = j - 1\n        else:\n            a.pop()\n            i = 0\n        j -= 1\n    ans.insert(0, len(ans))\n    print(*ans)"]