["def solve():\n    n = int(input())\n    numbers = [10]\n    power = 1\n    mod = 998244353\n    for i in range(2, n + 1):\n        numbers.append(9 * (9 * i + 2) * power % mod)\n        power = power * 10 % mod\n    s = reversed(list(map(str, numbers)))\n    print(' '.join(s))\n\ndef modpow(base, exponent, mod):\n    res = 1\n    power = base\n    while exponent > 0:\n        if exponent & 1:\n            res = res * power % mod\n        power = power * power % mod\n        exponent //= 2\n    return res\nsolve()", "def read_int():\n    return int(input().strip())\n\ndef read_ints():\n    return list(map(int, input().strip().split(' ')))\n\ndef brute_solve():\n    from collections import Counter\n    from itertools import groupby\n    n = 6\n    counter = Counter()\n    for i in range(10 ** n):\n        for (k, vs) in groupby(f'{i:06}'):\n            vs = list(vs)\n            counter[len(vs)] += 1\n    print(counter)\n\ndef solve():\n    n = read_int()\n    total = [0] * (n + 1)\n    power_of_ten = 1\n    mod = 998244353\n    for k in range(n, 0, -1):\n        if k == n:\n            total[k] = 10\n        elif k == n - 1:\n            total[k] = 180\n        else:\n            power_of_ten = power_of_ten * 10 % mod\n            total[k] = (99 + 81 * (n - k)) * power_of_ten % mod\n    return ' '.join((str(t) for t in total[1:]))\nprint(solve())", "def f(n):\n    if n == 1:\n        return '10'\n    if n == 2:\n        return '180 10'\n    s = 10 + 180\n    p = 90\n    g = [0] * (n - 2) + [180, 10]\n    m = 998244353\n    for i in range(n - 3, -1, -1):\n        g[i] = ((s + p) * 10 - s) % m\n        s = (s + g[i]) % m\n        p = p * 10 % m\n    return ' '.join(map(str, g))\n\ndef main():\n    n = int(input())\n    print(f(n))\nmain()", "n = int(input())\nif n == 1:\n    print('10')\nelse:\n    res = ['10']\n    a = 11\n    b = 9 / 10\n    for i in range(n - 1, 0, -1):\n        a += 9\n        b = b * 10 % 998244353\n        res.append(str(int(a * b % 998244353)))\n    print(' '.join(res[::-1]))", "n = int(input())\nans = [10, 180]\nif n <= 2:\n    print(' '.join([str(i) for i in ans[:n][::-1]]))\n    exit()\nm = 1\nMOD = 998244353\nfor i in range(n - 2):\n    m *= 10\n    m %= MOD\n    nxt = ans[-1] * 10 + 81 * m\n    nxt %= MOD\n    ans.append(nxt)\nprint(' '.join([str(i) for i in ans[::-1]]))", "n = int(input())\nr = 998244353\nstore = 1\nlst = [10]\nfor k in range(n - 1, 0, -1):\n    s = ((n - k - 1) * 81 * store + 18 * store * 10) % r\n    store = store * 10 % r\n    lst.append(s)\nprint(' '.join([str(i) for i in reversed(lst)]))", "n = int(input().strip())\nmod_base = 998244353\npow10 = 10\nans = []\ncum = 0\ncumcum = 0\nfor i in range(1, n + 1):\n    ans.append((i * pow10 - cumcum) % mod_base)\n    cum = (cum + ans[-1]) % mod_base\n    cumcum = (cumcum + ans[-1] + cum) % mod_base\n    pow10 = pow10 * 10 % mod_base\nprint(' '.join(map(str, reversed(ans))))", "import sys\nMOD = 998244353\nn = int(input())\nif n == 1:\n    print('10')\n    sys.exit(0)\np9 = 90\np8 = 81\nls = ['10', '180']\nfor free in range(2, n):\n    r = 10 * (p9 * 2 + p8 * (free - 1))\n    p9 *= 10\n    p9 %= MOD\n    p8 *= 10\n    p8 %= MOD\n    ls.append(str(r % MOD))\nls = ls[::-1]\nprint(' '.join(ls))", "import sys\nMOD = 998244353\nn = int(input())\nif n == 1:\n    print('10')\n    sys.exit(0)\np9 = 90\np8 = 81\nls = ['10', '180']\nfor free in range(2, n):\n    r = 10 * (p9 * 2 + p8 * (free - 1))\n    p9 *= 10\n    p9 %= MOD\n    p8 *= 10\n    p8 %= MOD\n    ls.append(str(r % MOD))\nls = ls[::-1]\nprint(' '.join(ls))", "n = int(input())\nblocks = []\nlist_of_powers = [1]\nprev = 1\nfor _ in range(n):\n    prev = prev * 10 % 998244353\n    list_of_powers.append(prev)\nfor i in range(n):\n    if i == 0:\n        blocks.append(10)\n    else:\n        blocks.append(18 * list_of_powers[i] + (i - 1) * 81 * list_of_powers[i - 1])\nfor i in range(n):\n    blocks[i] = str(blocks[i] % 998244353)\nblocks = blocks[::-1]\nprint(' '.join(blocks))", "import sys\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nns = lambda : readline().rstrip()\nni = lambda : int(readline().rstrip())\nnm = lambda : map(int, readline().split())\nnl = lambda : list(map(int, readline().split()))\nprn = lambda x: print(*x, sep='\\n')\n\ndef solve():\n    n = ni()\n    mod = 998244353\n    l = list()\n    res = 0\n    inc = 0\n    t = 1\n    for i in range(n):\n        res += inc\n        t = t * 10 % mod\n        c = t * (i + 1) % mod\n        a = (c - res) % mod\n        l.append(a)\n        res = (res + a) % mod\n        inc = (inc + a) % mod\n    print(*l[::-1])\nsolve()", "import sys\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nns = lambda : readline().rstrip()\nni = lambda : int(readline().rstrip())\nnm = lambda : map(int, readline().split())\nnl = lambda : list(map(int, readline().split()))\nprn = lambda x: print(*x, sep='\\n')\n\ndef solve():\n    n = ni()\n    mod = 998244353\n    l = list()\n    res = 0\n    inc = 0\n    t = 1\n    for i in range(n):\n        res += inc\n        t = t * 10 % mod\n        c = t * (i + 1) % mod\n        a = (c - res) % mod\n        l.append(a)\n        res = (res + a) % mod\n        inc = (inc + a) % mod\n    print(*l[::-1])\nsolve()", "n = int(input())\nlas = 9\nsu = 10\na = []\na.append(10)\nmod = 998244353\nfor i in range(1, n):\n    las = las * 10 % mod\n    a.append((su * 9 + las) % mod)\n    su = (su + a[i]) % mod\nfor i in range(n - 1, 0, -1):\n    print(a[i], end=' ')\nprint(a[0])", "MOD = 998244353\np = [1] * 200005\nfor i in range(1, 200005):\n    p[i] = p[i - 1] * 10 % MOD\nn = int(input())\nfor i in range(1, n):\n    res = 2 * 10 * 9 * p[n - i - 1]\n    res += (n - 1 - i) * 10 * 9 * 9 * p[n - i - 2]\n    print(res % MOD, end=' ')\nprint(10)", "MOD = 998244353\np = [1] * 200005\nfor i in range(1, 200005):\n    p[i] = p[i - 1] * 10 % MOD\nn = int(input())\nfor i in range(1, n):\n    res = 2 * 10 * 9 * p[n - i - 1]\n    res += (n - 1 - i) * 10 * 9 * 9 * p[n - i - 2]\n    print(res % MOD, end=' ')\nprint(10)", "from sys import stdin\ninput = stdin.readline\nn = int(input())\ndp = [0, 10, 180]\ns = 190\npx = 1000\npy = 100\nfor x in range(3, n + 1):\n    dp.append((x * px - (x - 1) * py - s) % 998244353)\n    s += dp[-1]\n    py = px\n    px = px * 10 % 998244353\nfor x in dp[n:0:-1]:\n    print(x, end=' ')", "MOD = 998244353\np = [1] * 200005\nfor i in range(1, 200005):\n    p[i] = p[i - 1] * 10 % MOD\nn = int(input())\nfor i in range(1, n):\n    res = 2 * 10 * 9 * p[n - i - 1]\n    res += (n - 1 - i) * 10 * 9 * 9 * p[n - i - 2]\n    print(res % MOD, end=' ')\nprint(10)", "MOD = 998244353\npower = [1] * 200005\nfor i in range(1, 200005):\n    power[i] = power[i - 1] * 10 % MOD\nn = int(input())\nfor i in range(1, n):\n    res = 180 * power[n - i - 1]\n    res += 810 * (n - i - 1) * power[n - i - 2]\n    print(res % MOD, end=' ')\nprint(10)", "import sys\nn = int(input())\nk = 1\nans = [10]\ns = 10\nr = 10\nx = 100\nMOD_NUM = 998244353\nwhile k < n:\n    new = (k + 1) * x - (s + r)\n    r += new\n    s += r\n    k += 1\n    x *= 10\n    r %= MOD_NUM\n    s %= MOD_NUM\n    x %= MOD_NUM\n    while new < 0:\n        new += MOD_NUM\n    ans.append(new % MOD_NUM)\nprint(*ans[::-1])", "mod = 998244353\nn = int(input())\npow10 = [1] * (n + 1)\nfor i in range(n):\n    pow10[i + 1] = pow10[i] * 10 % mod\nfor len in range(1, n):\n    ans = 18 * pow10[n - len] % mod\n    ans = (ans + (n - len - 1) * 81 * pow10[n - len - 1]) % mod\n    print(ans, end=' ')\nprint(10)", "MOD = 998244353\np = [1] * 200005\nfor i in range(1, 200005):\n    p[i] = p[i - 1] * 10 % MOD\nn = int(input())\nfor i in range(1, n):\n    res = 2 * 10 * 9 * p[n - i - 1]\n    res += (n - 1 - i) * 10 * 9 * 9 * p[n - i - 2]\n    print(res % MOD, end=' ')\nprint(10)", "mod = 998244353\nn = int(input())\np = [1] * n\nfor i in range(1, n):\n    p[i] = p[i - 1] * 10 % mod\nfor i in range(1, n):\n    res = 2 * 9 * 10 * p[n - i - 1]\n    res += (n - i - 1) * 9 * 9 * 10 * p[n - i - 2]\n    print(res % mod, end=' ')\nprint(10)", "MOD = 998244353\np = [1] * 200005\nfor i in range(1, 200005):\n    p[i] = p[i - 1] * 10 % MOD\nn = int(input())\nfor i in range(1, n):\n    res = 2 * 10 * 9 * p[n - i - 1]\n    res += (n - 1 - i) * 10 * 9 * 9 * p[n - i - 2]\n    print(res % MOD, end=' ')\nprint(10)", "import sys\nMOD = 998244353\nn = int(sys.stdin.readline().rstrip())\ntable = [None] * (n + 1)\ntable[0] = 1\nfor i in range(n):\n    table[i + 1] = table[i] * 10 % MOD\n\ndef main():\n    s = [None] * (n + 1)\n    t = [None] * (n + 1)\n    res = [None] * (n + 1)\n    res[0] = s[0] = t[0] = 0\n    for i in range(1, n + 1):\n        res[i] = (i * table[i] % MOD - t[i - 1]) % MOD\n        res[i] %= MOD\n        s[i] = (s[i - 1] + res[i]) % MOD\n        t[i] = (t[i - 1] + res[i] + s[i]) % MOD\n    return res[1:][::-1]\nans = main()\nprint(*ans, sep=' ')", "n = int(input())\nMOD = 998244353\np = [1] * 200002\nfor i in range(1, 200002):\n    p[i] = p[i - 1] * 10 % MOD\nsu = [0] + [10] + [180] + [0] * n\nsum = 190\nfor i in range(3, n + 1):\n    su[i] = (p[i] * i - 2 * sum - p[i - 2] * (i - 2)) % MOD\n    sum += su[i] % MOD\nfor i in range(n, 0, -1):\n    print(su[i], end=' ')", "MOD = 998244353\np = [1] * 200005\nfor i in range(1, 200005):\n    p[i] = p[i - 1] * 10 % MOD\nn = int(input())\nfor i in range(1, n):\n    res = 2 * 10 * 9 * p[n - i - 1]\n    res += (n - 1 - i) * 10 * 9 * 9 * p[n - i - 2]\n    print(res % MOD, end=' ')\nprint(10)", "MOD = 998244353\np = [1] * 200005\nfor i in range(1, 200005):\n    p[i] = p[i - 1] * 10 % MOD\nn = int(input())\nfor i in range(1, n):\n    res = 2 * 10 * 9 * p[n - i - 1]\n    res += (n - 1 - i) * 10 * 9 * 9 * p[n - i - 2]\n    print(res % MOD, end=' ')\nprint(10)", "MOD = 998244353\np = [1] * 200005\nfor i in range(1, 200005):\n    p[i] = p[i - 1] * 10 % MOD\nn = int(input())\nfor i in range(1, n):\n    res = 2 * 10 * 9 * p[n - i - 1]\n    res += (n - 1 - i) * 10 * 9 * 9 * p[n - i - 2]\n    print(res % MOD, end=' ')\nprint(10)", "MOD = 998244353\np = [1] * 200005\nfor i in range(1, 200005):\n    p[i] = p[i - 1] * 10 % MOD\nn = int(input())\nfor i in range(1, n):\n    res = 2 * 10 * 9 * p[n - i - 1]\n    res += (n - 1 - i) * 10 * 9 * 9 * p[n - i - 2]\n    print(res % MOD, end=' ')\nprint(10)", "MOD = 998244353\np = [1] * 200005\nfor i in range(1, 200005):\n    p[i] = p[i - 1] * 10 % MOD\nn = int(input())\nfor i in range(1, n):\n    res = 2 * 10 * 9 * p[n - i - 1]\n    res += (n - 1 - i) * 10 * 9 * 9 * p[n - i - 2]\n    print(res % MOD, end=' ')\nprint(10)", "MOD = 998244353\np = [1] * 200005\nfor i in range(1, 200005):\n    p[i] = p[i - 1] * 10 % MOD\nn = int(input())\nfor i in range(1, n):\n    res = 2 * 10 * 9 * p[n - i - 1]\n    res += (n - 1 - i) * 10 * 9 * 9 * p[n - i - 2]\n    print(res % MOD, end=' ')\nprint(10)", "MOD = 998244353\np = [1] * 200005\nfor i in range(1, 200005):\n    p[i] = p[i - 1] * 10 % MOD\nn = int(input())\nfor i in range(1, n):\n    res = 2 * 10 * 9 * p[n - i - 1]\n    res += (n - 1 - i) * 10 * 9 * 9 * p[n - i - 2]\n    print(res % MOD, end=' ')\nprint(10)", "MOD = 998244353\np = [1] * 200005\nfor i in range(1, 200005):\n    p[i] = p[i - 1] * 10 % MOD\nn = int(input())\nfor i in range(1, n):\n    res = 2 * 10 * 9 * p[n - i - 1]\n    res += (n - 1 - i) * 10 * 9 * 9 * p[n - i - 2]\n    print(res % MOD, end=' ')\nprint(10)", "MOD = 998244353\np = [1] * 200005\nfor i in range(1, 200005):\n    p[i] = p[i - 1] * 10 % MOD\nn = int(input())\nfor i in range(1, n):\n    res = 2 * 10 * 9 * p[n - i - 1]\n    res += (n - 1 - i) * 10 * 9 * 9 * p[n - i - 2]\n    print(res % MOD, end=' ')\nprint(10)", "MOD = 998244353\np = [1] * 200005\nfor i in range(1, 200005):\n    p[i] = p[i - 1] * 10 % MOD\nn = int(input())\nfor i in range(1, n):\n    res = 2 * 10 * 9 * p[n - i - 1]\n    res += (n - 1 - i) * 10 * 9 * 9 * p[n - i - 2]\n    print(res % MOD, end=' ')\nprint(10)", "MOD = 998244353\np = [1] * 200005\nfor i in range(1, 200005):\n    p[i] = p[i - 1] * 10 % MOD\nn = int(input())\nfor i in range(1, n):\n    res = 2 * 10 * 9 * p[n - i - 1]\n    res += (n - 1 - i) * 10 * 9 * 9 * p[n - i - 2]\n    print(res % MOD, end=' ')\nprint(10)", "MOD = 998244353\np = [1] * 200005\nfor i in range(1, 200005):\n    p[i] = p[i - 1] * 10 % MOD\nn = int(input())\nfor i in range(1, n):\n    res = 2 * 10 * 9 * p[n - i - 1]\n    res += (n - 1 - i) * 10 * 9 * 9 * p[n - i - 2]\n    print(res % MOD, end=' ')\nprint(10)", "MOD = 998244353\np = [1] * 200005\nfor i in range(1, 200005):\n    p[i] = p[i - 1] * 10 % MOD\nn = int(input())\nfor i in range(1, n):\n    res = 2 * 10 * 9 * p[n - i - 1]\n    res += (n - 1 - i) * 10 * 9 * 9 * p[n - i - 2]\n    print(res % MOD, end=' ')\nprint(10)", "def cout(x):\n    print(x, end=' ')\n    return\nfrom sys import stdin, stdout\nn = int(input())\nmod = 998244353\n(t, a) = (10, 10)\n(v, pot) = ([10], 10)\nfor i in range(2, n + 1):\n    t += a\n    t %= mod\n    pot *= 10\n    pot %= mod\n    x = (i * pot - t) % mod\n    a += x\n    a %= mod\n    t += x\n    t %= mod\n    v.append(x % mod)\nv.reverse()\nfor i in range(len(v)):\n    cout(v[i])", "n = int(input())\nans = [0] * n\nans[0] = 10\nmi = 10\nc = 0\nmod = 998244353\np = 10\nfor i in range(2, n + 1):\n    p *= 10\n    p %= mod\n    a = (p % mod - mi) % mod\n    a *= i\n    a %= mod\n    a += c\n    a %= mod\n    ans[i - 1] = a\n    mi += a\n    mi %= mod\n    c += a * (i - 1)\n    c %= mod\nprint(*ans[::-1])", "n = int(input())\na = []\np = 998244353\na.append(10)\nd = 10\ns = 10\nfor i in range(n - 1):\n    a.append((d * 10 * (i + 2) - d * (i + 1) - s) % p)\n    d = d * 10 % p\n    s = (s + a[-1]) % p\nq = ''\nfor i in range(len(a) - 1):\n    q += str(a[-1 - i])\n    q += ' '\nprint(q + '10')", "MOD = 998244353\np = [1] * 200005\nfor i in range(1, 200005):\n    p[i] = p[i - 1] * 10 % MOD\nn = int(input())\nfor i in range(1, n):\n    res = 2 * 10 * 9 * p[n - i - 1]\n    res += (n - 1 - i) * 10 * 9 * 9 * p[n - i - 2]\n    print(res % MOD, end=' ')\nprint(10)", "MOD = 998244353\np = [1] * 200005\nfor i in range(1, 200005):\n    p[i] = p[i - 1] * 10 % MOD\nn = int(input())\nfor i in range(1, n):\n    res = 2 * 10 * 9 * p[n - i - 1]\n    res += (n - 1 - i) * 10 * 9 * 9 * p[n - i - 2]\n    print(res % MOD, end=' ')\nprint(10)", "n = int(input())\na = []\nm = 1\ns = 10\nmod = 998244353\nfor i in range(n):\n    f = s * m % mod\n    a.append(f)\n    s += 9\n    m = m * 10 % mod\nx = 0\nfor i in range(len(a)):\n    a[i] = mod + a[i] - x\n    while a[i] < 0:\n        a[i] += mod\n    a[i] %= mod\n    x = x + a[i]\n    x %= mod\na.reverse()\nfor i in a:\n    print(i, end=' ')\nprint('')", "n = int(input())\nM = 998244353\npow10 = []\nfor i in range(n):\n    if i == 0:\n        pow10.append(1)\n    else:\n        pow10.append(pow10[i - 1] * 10 % M)\nfor i in range(n, 0, -1):\n    if i != 1 and i != 2:\n        print((9 * i * pow10[i - 1] % M - 9 * (i - 2) * pow10[i - 2] % M) % M, end=' ')\n    if i == 1:\n        print('10', end=' ')\n    if i == 2:\n        print('180', end=' ')\nprint()", "MOD = 998244353\np = [1] * 200005\nfor i in range(1, 200005):\n    p[i] = p[i - 1] * 10 % MOD\nn = int(input())\nfor i in range(1, n):\n    res = 2 * 10 * 9 * p[n - i - 1]\n    res += (n - 1 - i) * 10 * 9 * 9 * p[n - i - 2]\n    print(res % MOD, end=' ')\nprint(10)", "mod = 998244353\np = [1] * 200002\nfor i in range(1, 200002):\n    p[i] = p[i - 1] * 10 % mod\nn = int(input())\nfor i in range(1, n):\n    res = 2 * 10 * 9 * p[n - i - 1] % mod\n    res = (res + (n - i + 1 - 2) * 10 * 9 * 9 * p[n - i - 2]) % mod\n    print(res, end=' ')\nprint(10)", "MOD = 998244353\npow10 = [1] * (2 * 10 ** 5 + 1)\nfor i in range(1, 2 * 10 ** 5 + 1):\n    pow10[i] = pow10[i - 1] * 10\n    pow10[i] %= MOD\nn = int(input())\nfor i in range(1, n):\n    print((2 * pow10[n - i - 1] * 9 + max(0, n - i - 1) * pow10[max(0, n - i - 2)] * 81) * 10 % MOD, end=' ')\nprint(10)", "printn = lambda x: print(x, end='')\ninn = lambda : int(input())\ninl = lambda : list(map(int, input().split()))\ninm = lambda : map(int, input().split())\nins = lambda : input().strip()\nDBG = True\nBIG = 10 ** 18\nR = 998244353\n\ndef ddprint(x):\n    if DBG:\n        print(x)\nn = inn()\npw = [1] * (n + 1)\nfor i in range(1, n + 1):\n    pw[i] = pw[i - 1] * 10 % R\npad = ''\nfor i in range(1, n - 1):\n    x = 10 * (9 * 9 * (n - i - 1) * pw[n - i - 2] + 9 * 2 * pw[n - i - 1]) % R\n    printn(pad + str(x))\n    pad = ' '\nif n >= 2:\n    printn(pad + '180')\n    pad = ' '\nprintn(pad + '10')\nprint('')", "ans = []\nmod = 998244353\nn = int(input())\nfor l in range(1, n):\n    ans.append(str(pow(10, n - l - 1, mod) * 9 * (11 + 9 * (n - l)) % mod))\nans.append('10')\nprint(' '.join(ans))", "n = int(input())\nans = [10, 180]\nif n <= 2:\n    print(*ans[:n][::-1])\nelse:\n    for i in range(3, n + 1):\n        k = pow(10, i - 2, 998244353) * (180 + (i - 2) * 81)\n        ans.append(k % 998244353)\n    print(*ans[::-1])", "n = int(input())\nans = [10]\nc = 10\ncs = 20\nfor i in range(n - 1):\n    y = i + 2\n    x = pow(10, y, 998244353)\n    s = x * y % 998244353\n    nans = (s - cs) % 998244353\n    c = (c + nans) % 998244353\n    cs = (cs + nans + c) % 998244353\n    ans.append(nans)\nprint(' '.join(map(str, ans[::-1])))", "n = int(input())\nfor i in range(n - 1):\n    block = pow(10, n - i - 2, 998244353)\n    block *= 180 + 81 * (n - i - 2)\n    print(block % 998244353, end=' ')\nprint(10)", "n = int(input())\na = [10]\ns = 10\nw = 10\nm = 998244353\nfor i in range(2, n + 1):\n    e = (i * pow(10, i, m) % m - (w + s)) % m\n    s += e\n    w += s\n    s %= m\n    w %= m\n    a += [e]\nprint(*a[::-1])", "n = int(input())\nx = [10]\nsm = 10\nwsm = 10\nmod = 998244353\nfor i in range(2, n + 1):\n    nex = (i * pow(10, i, mod) % mod - (wsm + sm)) % mod\n    sm += nex\n    wsm += sm\n    sm %= mod\n    wsm %= mod\n    x += [nex]\nprint(*x[::-1])", "N = int(input())\narr = [10]\nC = 0\nK = 10\nmod = 998244353\nfor i in range(2, N + 1):\n    arr.append((i * pow(10, i, mod) % mod - 2 * K - C) % mod)\n    C = (C + K) % mod\n    K = (K + arr[-1]) % mod\nprint(*arr[::-1])", "n = int(input())\nx = [10]\ns = 10\nw = 10\nm = 998244353\nfor i in range(2, n + 1):\n    e = (i * pow(10, i, m) % m - (w + s)) % m\n    s += e\n    w += s\n    s %= m\n    w %= m\n    x += [e]\nprint(*x[::-1])", "n = int(input())\na = [10]\nc = 0\nk = 10\nmd = 998244353\nfor i in range(2, n + 1):\n    a.append((i * pow(10, i, md) % md - 2 * k - c) % md)\n    c = (c + k) % md\n    k = (k + a[-1]) % md\nprint(*a[::-1])", "p = 998244353\nn = int(input())\na = [0]\nconst = 0\ncumsum = 0\nfor i in range(1, n + 1):\n    total = i * pow(10, i, p) % p\n    new = (total - const) % p\n    a.append(new)\n    const += cumsum + 2 * new\n    const %= p\n    cumsum += new\n    cumsum %= p\na.reverse()\na.pop()\nprint(*a)", "p = 998244353\nn = int(input())\na = [0]\nconst = 0\ncumsum = 0\nfor i in range(1, n + 1):\n    total = i * pow(10, i, p) % p\n    new = (total - const) % p\n    a.append(new)\n    const += cumsum + 2 * new\n    const %= p\n    cumsum += new\n    cumsum %= p\na.reverse()\na.pop()\nprint(*a)", "m = 998244353\nn = int(input())\na = [0] * n\nans = [0] * n\ni = n\nqp = 0\ns = 0\nwhile i >= 1:\n    p = n - i + 1\n    q = p * pow(10, p, m)\n    ans[p - 1] = q - qp - s\n    qp = q\n    s += ans[p - 1]\n    ans[p - 1] = ans[p - 1] % m\n    i -= 1\nprint(*ans[::-1])", "def power(x, y, p):\n    res = 1\n    x = x % p\n    while y > 0:\n        if y & 1:\n            res = res * x % p\n        y = y >> 1\n        x = x * x % p\n    return res\nn = int(input())\nfor k in range(1, n + 1):\n    if k != n:\n        x = pow(10, n - k - 1, 998244353)\n        print(int(2 * 9 * 10 * x + (n - k - 1) * 81 * x) % 998244353, end=' ')\n    else:\n        print(10)", "n = int(input())\nmod = 998244353\npsum = [0] * (n + 3)\nvalue = [0] * (n + 2)\nsubs = [0] * (n + 2)\nfor i in range(n, 0, -1):\n    subs[i] = (subs[i + 1] + psum[i + 2] + 2 * value[i + 1]) % mod\n    value[i] = ((n - i + 1) * pow(10, n - i + 1, mod) - subs[i]) % mod\n    psum[i] = (psum[i + 1] + value[i]) % mod\nprint(*value[1:-1])", "mod = 998244353\nn = int(input())\nprev = [0] * (n + 3)\nval = [0] * (n + 2)\ns = [0] * (n + 2)\nfor i in range(n, 0, -1):\n    s[i] = (s[i + 1] + prev[i + 2] + 2 * val[i + 1]) % mod\n    val[i] = ((n - i + 1) * pow(10, n - i + 1, mod) - s[i]) % mod\n    prev[i] = (prev[i + 1] + val[i]) % mod\nfor i in range(1, n + 1):\n    print(val[i], end=' ')", "n = int(input())\nmod = 998244353\narr = [10]\nprefix = 10\nsubtract = 10\nfor i in range(2, n + 1):\n    prefix = (prefix + subtract) % mod\n    ans = i * pow(10, i, mod) % mod\n    ans = (ans - prefix) % mod\n    subtract = (subtract + ans) % mod\n    prefix = (prefix + ans) % mod\n    arr.append(ans)\narr = arr[::-1]\nfor i in arr:\n    print(i, end=' ')", "n = int(input())\ndp = [0] * (n + 1)\nmod = 998244353\ndp[n] = 10\nfor i in range(n - 1, 0, -1):\n    dp[i] = (n - i + 1) * pow(10, n - i + 1, mod) % mod\npsum = [0] * (n + 2)\nvalue = [0] * (n + 1)\nsubs = [0] * (n + 1)\nvalue[n] = dp[n]\npsum[n] = dp[n]\nfor i in range(n - 1, 0, -1):\n    subs[i] = (subs[i + 1] + psum[i + 2] + 2 * value[i + 1]) % mod\n    value[i] = (dp[i] - subs[i]) % mod\n    psum[i] = (psum[i + 1] + value[i]) % mod\nprint(*value[1:])", "n = int(input())\nM = 998244353\nb = []\nfor p in range(1, n + 1):\n    m = n - p\n    c = 2 * 9 * pow(10, m - 1, M) + (m - 1) * 9 * 9 * pow(10, m - 2, M) % M if m else 1\n    b.append(c % M)\nprint(' '.join([str(10 * _ % M) for _ in b]))", "import math\nimport sys\nread = sys.stdin.readline\nn = int(read())\nmod = 998244353\nret = []\nfor i in range(1, n):\n    ways = 0\n    if i + 2 <= n:\n        ways += (n - (i + 2) + 1) * 10 * 9 * 9 * pow(10, n - (i + 2), mod)\n    ways += 10 * 9 * pow(10, n - (i + 1), mod) * 2\n    ways %= mod\n    ret.append(ways)\nret.append(10)\nprint(' '.join(map(str, ret)))", "from sys import stdin\ninput = stdin.readline\nn = int(input())\ndp = [0, 10, 180]\ns = 190\nfor x in range(3, n + 1):\n    dp.append((x * pow(10, x, 998244353) - (x - 1) * pow(10, x - 1, 998244353) - s) % 998244353)\n    s += dp[-1]\nfor x in dp[n:0:-1]:\n    print(x, end=' ')", "from sys import stdin\ninput = stdin.readline\nn = int(input())\ndp = [0, 10, 180]\ns = 190\nfor x in range(3, n + 1):\n    dp.append((x * pow(10, x, 998244353) - (x - 1) * pow(10, x - 1, 998244353) - s) % 998244353)\n    s += dp[-1]\nfor x in dp[n:0:-1]:\n    print(x, end=' ')", "n = int(input())\nMOD = 998244353\nfor k in range(1, n):\n    t = ((n - k - 1) * 81 * pow(10, n - k - 2, MOD) * 10 + 10 * 9 * pow(10, n - k - 1, MOD) * 2) % MOD\n    print(t, end=' ')\nprint(10)", "n = int(input())\nmod = 998244353\noutput = []\nfor i in range(1, n + 1):\n    if i == n:\n        output.append(10)\n    elif i == n - 1:\n        output.append(180)\n    else:\n        a1 = 2 * 9 * 10 * pow(10, n - i - 1, mod)\n        a2 = (n - i - 1) * 10 * 9 * 9 * pow(10, n - i - 2, mod)\n        output.append((a1 + a2) % mod)\nprint(*output)", "mod = 998244353\nn = int(input())\nfor i in range(1, n):\n    res = 2 * 10 * 9 * pow(10, n - i - 1, mod)\n    res += (n - 1 - i) * 10 * 9 * 9 * pow(10, n - i - 2, mod)\n    print(res % mod, end=' ')\nprint(10)"]