["import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    x = s.count('10')\n    y = s.count('01')\n    tmp = n - x - y\n    if tmp == 1:\n        print(0)\n    elif n % 2 == 0:\n        print(tmp // 2)\n    else:\n        print(math.ceil(tmp / 2))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    print(n // 2 - max(s.count('10'), s.count('01')))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    print(n // 2 - max(s.count('10'), s.count('01')))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()[:-1]\n    a = s.count('01')\n    b = s.count('10')\n    print(n // 2 - max(a, b))", "for t in range(int(input())):\n    n = int(input())\n    s = input()\n    c = s.count('01') + s.count('10')\n    print((n - c) // 2)", "for t in range(int(input())):\n    n = int(input())\n    s = input()\n    c = s.count('01') + s.count('10')\n    print((n - c) // 2)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    x = s.count('10')\n    y = s.count('01')\n    print((n - x - y) // 2)", "import math\n\ndef main_function():\n    test_cases = range(int(input()))\n    for test in test_cases:\n        n = int(input())\n        s = input()\n        v_0_1 = 0\n        v_1_0 = 0\n        for i in range(len(s) - 1):\n            if s[i] == '1' and s[i + 1] == '0':\n                v_1_0 += 1\n            elif s[i] == '0' and s[i + 1] == '1':\n                v_0_1 += 1\n        print(n // 2 - max(v_1_0, v_0_1))\nmain_function()", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    s = input().strip()\n    s1 = '1' + s + '0'\n    s2 = '0' + s + '1'\n    cnt1 = cnt2 = 0\n    for i in range(n + 1):\n        if s1[i] == s1[i + 1]:\n            cnt1 += 1\n        if s2[i] == s2[i + 1]:\n            cnt2 += 1\n    return min(cnt1 // 2, cnt2 // 2)\nfor _ in range(int(input())):\n    print(solve())", "from math import ceil\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    s = input()\n    count = 0\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            count += 1\n    print(ceil(count / 2))\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    p = 0\n    for i in range(n - 1):\n        p += s[i] == s[i + 1]\n    print((p + 1) // 2)", "import math\nn = int(input())\nfor k in range(n):\n    l = int(input())\n    s = input()\n    print(l // 2 - max(s.count('10'), s.count('01')))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    print(n // 2 - max(s.count('10'), s.count('01')))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    print(n // 2 - max(s.count('10'), s.count('01')))", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    s = str(input())\n    a = s.count('10')\n    b = s.count('01')\n    h = n // 2\n    print(h - max([a, b]))", "import math\nfor t in range(int(input())):\n    n = int(input())\n    a = input()\n    count = 0\n    for i in range(n - 1):\n        if a[i] == a[i + 1]:\n            count += 1\n    print(math.ceil(count / 2))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input().rstrip()\n    c = f = 0\n    if s[0] == '0':\n        s1 = '01' * (n // 2)\n    else:\n        s1 = '10' * (n // 2)\n    for i in range(n):\n        if s[i] != s1[i]:\n            if f == 0:\n                c += 1\n                f = 1\n        else:\n            f = 0\n    print(c)", "def func():\n    n = int(input())\n    for _ in range(n):\n        k = int(input())\n        s = input()\n        x = 0\n        for i in range(k - 1):\n            if s[i] == s[i + 1]:\n                x += 1\n        if x % 2 == 0:\n            print(x // 2)\n        else:\n            print(x // 2 + 1)\nfunc()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    s = list(s)\n    count = 0\n    for j in range(1, n):\n        if s[j] == s[j - 1]:\n            count += 1\n    print((count + 1) // 2)", "def read_int():\n    return int(input())\n\ndef read_ints():\n    return map(int, input().split(' '))\nt = read_int()\nfor case_num in range(t):\n    n = read_int()\n    s = input()\n    tot = 0\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            tot += 1\n    print((tot + 1) // 2)", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    s = str(input())\n    ans = 0\n    for i in range(len(s) - 1):\n        if s[i] == s[i + 1]:\n            ans = ans + 1\n    print((ans + 1) // 2)\n    t = t - 1", "for i in range(int(input())):\n    n = int(input())\n    s = input()\n    if s[0] == '0':\n        z = '1' + s + '0'\n        c = 0\n        for i in range(1, len(z)):\n            if z[i - 1] == z[i]:\n                c += 1\n        print(c // 2)\n    elif s[0] == '1':\n        z = '0' + s + '1'\n        c = 0\n        for i in range(1, len(z)):\n            if z[i - 1] == z[i]:\n                c += 1\n        print(c // 2)", "def rx():\n    return [s.rstrip() for s in open(0)]\n\ndef f(w):\n    c = 0\n    for i in range(len(w) - 1):\n        if w[i] == w[i + 1]:\n            c += 1\n    return (c + 1) // 2\nfor s in rx()[2::2]:\n    print(f(s))", "import sys\n\ndef ceil(a, b):\n    return -(-a // b)\n\ndef answer(n, s):\n    pcnt = 0\n    for i in range(1, n):\n        if s[i] == s[i - 1]:\n            pcnt += 1\n    return ceil(pcnt, 2)\n\ndef main():\n    t = int(input())\n    while t:\n        n = int(sys.stdin.readline())\n        s = sys.stdin.readline().rstrip()\n        print(answer(n, s))\n        t -= 1\n    return\nmain()", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    s = input()\n    S = sum([int(s[i] == s[i - 1]) for i in range(1, N)])\n    print(S // 2 + S % 2)", "import math\n\ndef solve():\n    n = int(input())\n    s = input()\n    count_zeroes = 0\n    count_ones = 0\n    current_ones = 0\n    current_zeroes = 0\n    for i in range(1, n):\n        if s[i] == '1' and s[i - 1] == '1':\n            current_ones += 1\n        else:\n            count_ones += current_ones\n            current_ones = 0\n        if s[i] == '0' and s[i - 1] == '0':\n            current_zeroes += 1\n        else:\n            count_zeroes += current_zeroes\n            current_zeroes = 0\n    count_ones += current_ones\n    count_zeroes += current_zeroes\n    return max(count_ones, count_zeroes)\nt = int(input())\nwhile t > 0:\n    t -= 1\n    print(solve())", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    c = 1\n    for i in range(1, n):\n        if a[i] == a[i - 1]:\n            c += 1\n    print(c // 2)", "def read_int():\n    return int(input())\n\ndef read_ints():\n    return map(int, input().split(' '))\nt = read_int()\nfor case_num in range(t):\n    n = read_int()\n    s = input()\n    tot = 0\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            tot += 1\n    print((tot + 1) // 2)", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    x = y = 0\n    for i in range(n - 1):\n        if a[i] == '0' and a[i + 1] == '0':\n            x += 1\n        if a[i] == '1' and a[i + 1] == '1':\n            y += 1\n    print(max(x, y))", "def get(s: str) -> int:\n    (cnt1, cnt2) = (0, 0)\n    is_cnt1_change = False\n    is_cnt2_change = False\n    for i in range(len(s)):\n        if i % 2 == 1:\n            if int(s[i]) == 1:\n                if not is_cnt1_change:\n                    cnt1 += 1\n                    is_cnt1_change = True\n                is_cnt2_change = False\n            else:\n                if not is_cnt2_change:\n                    cnt2 += 1\n                    is_cnt2_change = True\n                is_cnt1_change = False\n        elif int(s[i]) == 1:\n            if not is_cnt2_change:\n                cnt2 += 1\n                is_cnt2_change = True\n            is_cnt1_change = False\n        else:\n            if not is_cnt1_change:\n                cnt1 += 1\n                is_cnt1_change = True\n            is_cnt2_change = False\n    return min(cnt1, cnt2)\nn = int(input())\nfor i in range(n):\n    slen = int(input())\n    s = input()\n    print(get(s))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    s = list(s)\n    count = 0\n    for j in range(1, n):\n        if s[j] == s[j - 1]:\n            count += 1\n    print((count + 1) // 2)", "t = int(input())\nfor i in range(t):\n    n = input()\n    s = input()\n    knots = 0\n    for i in range(len(s) - 1):\n        if s[i] == s[i + 1]:\n            knots += 1\n    print(int((knots + 1) / 2))", "from math import ceil\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    s = input()\n    count = 0\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            count += 1\n    print(ceil(count / 2))\n    t -= 1", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    c = 0\n    c1 = 0\n    for j in range(n - 1):\n        if s[j] == '1' and s[j + 1] == '1':\n            c = c + 1\n        if s[j] == '0' and s[j + 1] == '0':\n            c1 = c1 + 1\n    print(max(c, c1))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    count = 0\n    for i in range(n - 1):\n        if s[i + 1] == s[i]:\n            count += 1\n    print(int(count / 2) if not count % 2 else int(count / 2) + 1)", "cs = int(input())\nfor i in range(cs):\n    n = int(input())\n    s = input()\n    fz = int(0)\n    sum1 = int(0)\n    sum2 = int(0)\n    for j in range(n):\n        if s[j] == '0':\n            fz += 1\n        else:\n            if fz > 0:\n                sum1 += fz - 1\n            fz = 0\n    fz = 0\n    for j in range(n):\n        if s[j] == '1':\n            fz += 1\n        else:\n            if fz > 0:\n                sum2 += fz - 1\n            fz = 0\n    print(max(sum1, sum2), end='')\n    if i != cs - 1:\n        print()", "cs = int(input())\nfor i in range(cs):\n    n = int(input())\n    s = input()\n    fz = int(0)\n    sum1 = int(0)\n    sum2 = int(0)\n    for j in range(n):\n        if s[j] == '0':\n            fz += 1\n        else:\n            if fz > 0:\n                sum1 += fz - 1\n            fz = 0\n    fz = 0\n    for j in range(n):\n        if s[j] == '1':\n            fz += 1\n        else:\n            if fz > 0:\n                sum2 += fz - 1\n            fz = 0\n    print(max(sum1, sum2), end='')\n    if i != cs - 1:\n        print()", "for _ in [0] * int(input()):\n    n = int(input())\n    s = input()\n    k = p = 0\n    for i in range(n - 1):\n        if s[i] == '1' and s[i + 1] == '1':\n            k = k + 1\n        if s[i] == '0' and s[i + 1] == '0':\n            p = p + 1\n    print(max(k, p))", "t = int(input())\nfor l in range(0, t):\n    n = int(input())\n    s = input()\n    (n1, n0) = (0, 0)\n    for i in range(0, n - 1):\n        if s[i] == '1' and s[i + 1] == '1':\n            n1 += 1\n        elif s[i] == '0' and s[i + 1] == '0':\n            n0 += 1\n    if n1 > n0:\n        print(n1)\n    else:\n        print(n0)", "for w in [*open(0)][2::2]:\n    c = 1\n    for i in range(len(w) - 1):\n        if w[i] == w[i + 1]:\n            c += 1\n    print(c // 2)", "import io, os\nimport sys\nfrom sys import stdin\nfrom bisect import bisect_left, bisect_right\nfrom collections import defaultdict, deque, namedtuple\nfrom math import gcd, ceil, floor, factorial\nfrom itertools import combinations, permutations\ninput = sys.stdin.readline\n\ndef work(n, s, pat):\n    t = 0\n    ans = 0\n    for i in range(n):\n        if s[i] != pat[i]:\n            t += 1\n        else:\n            ans += min(1, t)\n            t = 0\n    ans += min(1, t)\n    return ans\n\ndef main():\n    test = int(input())\n    for idt in range(test):\n        n = int(input())\n        s = input().strip('\\r\\n')\n        pat1 = '01' * (n // 2)\n        pat2 = '10' * (n // 2)\n        t1 = work(n, s, pat1)\n        t2 = work(n, s, pat2)\n        print(min(t1, t2))\n    return\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    (zo, oz) = (s.count('01'), s.count('10'))\n    if zo == n or oz == n:\n        print(0)\n    else:\n        m = min(zo, oz)\n        t = n - 2 * (oz + zo - m)\n        print(t // 2)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    c = 0\n    if s[0] == '0':\n        c = s.count('01')\n    else:\n        c = s.count('10')\n    print(n // 2 - c)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    a = s.count('10')\n    b = s.count('01')\n    c = int((n - a - b) / 2)\n    print(c)", "for s in [*open(0)][2::2]:\n    print(len(s) // 2 - len(s.replace(s[0], ' ').split()))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    a = s.count('10')\n    b = s.count('01')\n    print((n - a - b) // 2)", "for s in [*open(0)][2::2]:\n    print(len(s) // 2 - s.count(s[0] + '01'[s[0] < '1']))", "def solve():\n    n = int(input())\n    s = input()\n    answer = (n - s.count('10') - s.count('01')) // 2\n    print(answer)\nt = int(input())\nwhile t:\n    solve()\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    ja_alternado = s.count('01') + s.count('10')\n    print((n - ja_alternado) // 2)", "test_cases = int(input())\nfor _ in range(test_cases):\n    lenght = int(input())\n    bin_string = input()\n    num_10 = bin_string.count('10')\n    num_01 = bin_string.count('01')\n    aux = lenght - num_10 - num_01\n    print(aux // 2)", "import math\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        tam_string = int(input())\n        string = input()\n        par1 = string.count('01')\n        par2 = string.count('10')\n        resp = tam_string - (par1 + par2)\n        print(resp // 2)\nmain()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    min = n / 2\n    s = input()\n    if s[0] == '1':\n        num = s.count('10')\n    else:\n        num = s.count('01')\n    min -= num\n    print(int(min))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    if s[0] == '1':\n        min = s.count('10')\n    else:\n        min = s.count('01')\n    min = n / 2 - min\n    print(int(min))", "import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\nfrom sys import maxsize\n\ndef solve():\n    for _ in range(get_int()):\n        n = get_int()\n        s = get_string()\n        print((n - s.count('10') - s.count('01')) // 2)\nsolve()", "n = int(input())\nfor _ in range(n):\n    a = float(input())\n    b = str(input())\n    print(int((a - b.count('10') - b.count('01')) // 2))", "for s in [*open(0)][2::2]:\n    print(len(s) // 2 - s.count(s[0] + '01'[s[0] < '1']))", "for p in [*open(0)][2::2]:\n    print(len(p) // 2 - p.count(p[0] + '01'[p[0] < '1']))", "for s in [*open(0)][2::2]:\n    print(len(s) // 2 - s.count(s[0] + '01'[s[0] < '1']))", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    a = s.count('01')\n    b = s.count('10')\n    numRepetidos = n - a - b\n    print(math.floor(numRepetidos / 2))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    c = 0\n    c1 = 0\n    for i in range(len(s) - 1):\n        if s[i] == s[i + 1]:\n            if s[i] == '0':\n                c += 1\n            else:\n                c1 += 1\n    print(max(c, c1))", "t = int(input())\nfor j in range(0, t):\n    n = int(input())\n    inp_str = input()\n    ind = 0\n    m = True\n    last = inp_str[0]\n    c = 0\n    while ind < n - 1:\n        if inp_str[ind] == inp_str[ind + 1]:\n            c += 1\n        ind += 1\n    if c % 2 == 0:\n        print(c // 2)\n    else:\n        print(c // 2 + 1)", "from math import *\na = int(input())\nfor x in range(a):\n    c = int(input())\n    b = input()\n    d = 0\n    for y in range(c - 1):\n        if b[y] == b[y + 1]:\n            d += 1\n    print(ceil(d / 2))", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    s = input()\n    S = sum([int(s[i] == s[i - 1]) for i in range(1, N)])\n    print(S // 2 + S % 2)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    count = 0\n    if s[0] == '1' and s[-1] == '1':\n        count += 1\n    i = 0\n    while i < n - 1:\n        if s[i] == '1' and s[i + 1] == '1':\n            count += 1\n        i += 1\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    prev = 0\n    maxm = 0\n    count = 0\n    for i in s:\n        if i == '1':\n            maxm += 1\n        else:\n            prev = maxm\n            maxm = 0\n        if prev > 1:\n            count += prev - 1\n            prev = 0\n    counti = 0\n    maxm = 0\n    prev = 0\n    for i in s:\n        if i == '0':\n            maxm += 1\n        else:\n            prev = maxm\n            maxm = 0\n        if prev > 1:\n            counti += prev - 1\n            prev = 0\n    print(max(count, counti))", "import math\ntc = int(input())\nwhile tc:\n    length = input()\n    string = input()\n    chars = [x for x in string]\n    count = 0\n    for x in range(len(chars) - 1):\n        if chars[x] == chars[x + 1]:\n            count += 1\n    print(math.ceil(count / 2))\n    tc -= 1", "import math, random, time\nfrom collections import *\nfrom itertools import *\n\ndef ass(a, b):\n    print(f'Assertion error: {a} != {b}' if a != b else 'OK')\n\ndef nr():\n    return int(input())\n\ndef nrs():\n    return [int(i) for i in input().split()]\n\ndef nrss(n):\n    return [nrs() for _ in range(n)]\n\ndef word():\n    return input()\n\ndef words():\n    return [w for w in input().split()]\n\ndef rx():\n    return [s.rstrip() for s in open(0)]\n\ndef nrx(s):\n    return int(s)\n\ndef nrxs(s):\n    return [int(i) for i in s.split()]\n\ndef wrx(s):\n    return s\n\ndef wrxs(s):\n    return [w for w in s.split()]\n\ndef dump(lst):\n    for (i, item) in enumerate(lst):\n        print(i, item)\n\ndef binsearch(arr, a, b):\n    m = (a + b) // 2\n    if a >= b:\n        return a - 1 if arr[a] == 0 else a\n    return binsearch(arr, a, m - 1) if arr[m] == 0 else binsearch(arr, m + 1, b)\n\ndef gcd(x, y):\n    return x if y == 0 else gcd(y, x % y)\n\ndef lcm(x, y):\n    return x * y // gcd(x, y)\n\ndef sign(a):\n    return 0 if a == 0 else int(a / abs(a))\n\ndef f(w):\n    b0 = 0\n    b1 = 0\n    for i in range(len(w) - 1):\n        s = w[i:i + 2]\n        if s == '00':\n            b0 += 1\n        if s == '11':\n            b1 += 1\n    return max(b0, b1)\nfor s in rx()[2::2]:\n    print(f(wrx(s)))", "def alternate_string(n, s):\n    low = 1\n    high = n - 2\n    flag1 = flag2 = 0\n    for i in range(n - 1):\n        if s[low] == '0' and s[low - 1] == '1':\n            flag1 += 1\n        if s[high] == '0' and s[high + 1] == '1':\n            flag2 += 1\n        low += 1\n        high -= 1\n    return n // 2 - max(flag1, flag2)\nfor i in range(int(input())):\n    n = int(input())\n    s = input()\n    print(alternate_string(n, s))", "for _ in range(int(input())):\n    n = int(input())\n    l = input()\n    c = 0\n    for i in range(n - 1):\n        if l[i] != l[i + 1]:\n            c += 1\n    print((n - c) // 2)", "def swap_func(s):\n    oneCount = 0\n    zeroCount = 0\n    for i in range(len(s)):\n        if i + 1 < len(s):\n            if s[i] == '1' and s[i + 1] == '1':\n                oneCount += 1\n            if s[i] == '0' and s[i + 1] == '0':\n                zeroCount += 1\n    min_swap = max(oneCount, zeroCount)\n    return min_swap\nt = int(input())\ntemp_arr = []\nfor i in range(t):\n    n = int(input())\n    s = str(input())\n    min_swap = swap_func(s)\n    temp_arr.append(min_swap)\nfor j in temp_arr:\n    print(j)", "def func_name(temp_input1):\n    x = 0\n    y = 0\n    for i in range(len(temp_input1)):\n        if i + 1 < len(temp_input1):\n            if temp_input1[i] == '1' and temp_input1[i + 1] == '1':\n                x += 1\n            if temp_input1[i] == '0' and temp_input1[i + 1] == '0':\n                y += 1\n    min_value = max(x, y)\n    return min_value\nt = int(input())\ntemp_array = []\nfor i in range(t):\n    temp_input = int(input())\n    temp_input1 = input()\n    min_value = func_name(temp_input1)\n    print(min_value)", "def ii():\n    return int(input())\n\ndef li():\n    return [int(i) for i in input().split()]\nfor tt in range(ii()):\n    N = ii()\n    s = input()\n    zm = 0\n    zo = 0\n    for i in range(N - 1):\n        if s[i] == '0':\n            if s[i] == s[i + 1]:\n                zm += 1\n        elif s[i] == s[i + 1]:\n            zo += 1\n    print(max(zm, zo))", "def solve(s):\n    ans = 0\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            ans += 1\n    return ans // 2\nfor t in range(int(input())):\n    n = int(input())\n    s = input()\n    if n <= 2:\n        print('0')\n    else:\n        s1 = '1' + s + '0'\n        s2 = '0' + s + '1'\n        print(min(solve(s1), solve(s2)))", "from math import *\nfrom collections import *\nfrom functools import *\nfrom bisect import *\nfrom itertools import *\nfrom heapq import *\nfrom statistics import *\ninf = float('inf')\nninf = -float('inf')\nip = input\nalphal = 'abcdefghijklmnopqrstuvwxyz'\nalphau = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\ndef ipl():\n    return list(map(int, input().split()))\n\ndef ipn():\n    return int(input())\n\ndef ipf():\n    return float(input())\n\ndef solve():\n    n = ipn()\n    s = ip()\n    print(n // 2 - max(s.count('01'), s.count('10')))\nfor _ in range(ipn()):\n    solve()", "cs = int(input())\nfor i in range(cs):\n    n = int(input())\n    s = input()\n    fz = int(0)\n    sum1 = int(0)\n    sum2 = int(0)\n    for j in range(n):\n        if s[j] == '0':\n            fz += 1\n        else:\n            if fz > 0:\n                sum1 += fz - 1\n            fz = 0\n    fz = 0\n    for j in range(n):\n        if s[j] == '1':\n            fz += 1\n        else:\n            if fz > 0:\n                sum2 += fz - 1\n            fz = 0\n    print(max(sum1, sum2), end='')\n    if i != cs - 1:\n        print()", "cs = int(input())\nfor i in range(cs):\n    n = int(input())\n    s = input()\n    fz = int(0)\n    sum1 = int(0)\n    sum2 = int(0)\n    for j in range(n):\n        if s[j] == '0':\n            fz += 1\n        else:\n            if fz > 0:\n                sum1 += fz - 1\n            fz = 0\n    fz = 0\n    for j in range(n):\n        if s[j] == '1':\n            fz += 1\n        else:\n            if fz > 0:\n                sum2 += fz - 1\n            fz = 0\n    print(max(sum1, sum2), end='')\n    if i != cs - 1:\n        print()", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    d = 0\n    e = 0\n    for i in range(1, n):\n        if s[i - 1] == s[i] == '1':\n            d += 1\n        if s[i - 1] == s[i] == '0':\n            e += 1\n    print(max(d, e))", "for pratyush in range(int(input())):\n    n = int(input())\n    s = str(input())\n    (a, b, x, y) = ('1' + s + '0', '0' + s + '1', 0, 0)\n    for i in range(n + 1):\n        if a[i] == a[i + 1]:\n            x += 1\n        if b[i] == b[i + 1]:\n            y += 1\n    print(min(x // 2, y // 2))", "n = int(input())\nfor i in range(n):\n    (c1, c2) = (0, 0)\n    m = input()\n    s = input()\n    for j in range(len(s) - 1):\n        if s[j] == '1' and s[j + 1] == '1':\n            c1 += 1\n        elif s[j] == '0' and s[j + 1] == '0':\n            c2 += 1\n    print(max(c1, c2))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    s = input()\n    ans0 = 0\n    ans1 = 0\n    for i in range(len(s) - 1):\n        if s[i] == s[i + 1] and s[i] == '0':\n            ans0 += 1\n        if s[i] == s[i + 1] and s[i] == '1':\n            ans1 += 1\n    print(max(ans1, ans0))", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    b = a.count('10')\n    c = a.count('01')\n    print((n - b - c) // 2)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    print((n - s.count('10') - s.count('01')) // 2)", "from sys import stdin\nimport math\nrl = stdin.readline\n\ndef main(n, s):\n    nb_pairs = 0\n    for i in range(1, n):\n        if s[i] == s[i - 1]:\n            nb_pairs += 1\n    print(math.ceil(nb_pairs / 2))\nt = int(rl())\ncases = [(int(rl()), rl().rstrip()) for _ in range(t)]\nfor (n, s) in cases:\n    main(n, s)", "for s in [*open(0)][2::2]:\n    print(len(s) - 1 - s.count('01') - s.count('10') >> 1)", "for s in [*open(0)][2::2]:\n    print(len(s) // 2 - sum(map(bool, s.split(s[-2]))) + 1)", "for _ in range(int(input())):\n    (n, s) = (int(input()), input())\n    print((n - s.count('10') - s.count('01')) // 2)", "testes = int(input())\nwhile testes:\n    testes -= 1\n    tamanho = int(input())\n    string = input()\n    corretos = string.count('01') + string.count('10')\n    errados = tamanho - corretos\n    print(errados // 2)", "n = int(input())\nfor _ in range(n):\n    a = float(input())\n    b = str(input())\n    print(int((a - b.count('10') - b.count('01')) // 2))", "for _ in ' ' * int(input()):\n    n = int(input())\n    s = input()\n    print(n // 2 - max(s.count('10'), s.count('01')))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    ans = n // 2 - max(s.count('10'), s.count('01'))\n    print(ans)", "for s in [*open(0)][2::2]:\n    print(len(s) // 2 - s.count(s[0] + '01'[s[0] < '1']))", "def solve():\n    n = int(input())\n    s = input()\n    c = 0\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            c += 1\n    return (c + 1) // 2\nfor _ in range(int(input())):\n    print(solve())", "def solve():\n    n = int(input())\n    s = str(input())\n    s1 = '1' + s + '0'\n    s2 = '0' + s + '1'\n    (dif1, dif2) = (0, 0)\n    for i in range(1, n + 2):\n        if s1[i - 1] == s1[i]:\n            dif1 += 1\n        if s2[i - 1] == s2[i]:\n            dif2 += 1\n    print(min(dif1 // 2, dif2 // 2))\nt = int(input())\nfor q in range(t):\n    solve()", "t = int(input())\n\ndef doWork(a):\n    m = 0\n    for i in range(1, len(a)):\n        if int(a[i - 1]) == int(a[i]):\n            m += 1\n    if m % 2 == 0:\n        return int(m / 2)\n    else:\n        return int((m + 1) / 2)\nfor i in range(t):\n    n = int(input())\n    a = input()\n    print(doWork(a))", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    (contiguous1, sub1, contiguous0, sub0) = (0, 0, 0, 0)\n    for i in range(1, n):\n        if s[i] == '1' and s[i] == s[i - 1]:\n            sub1 += 1\n            contiguous0 += sub0\n            sub0 = 0\n        if s[i] == '0' and s[i] == s[i - 1]:\n            sub0 += 1\n            contiguous1 += sub1\n            sub1 = 0\n        else:\n            contiguous1 += sub1\n            contiguous0 += sub0\n            sub0 = 0\n            sub1 = 0\n    print(max(contiguous1, contiguous0))", "def solve(n, s):\n    count = 0\n    for i in range(n):\n        if s[i] == s[(i + 1) % n]:\n            count += 1\n    return count // 2\nT = int(input())\nfor t in range(T):\n    n = int(input())\n    s = input()\n    ans = solve(n, s)\n    print(ans)", "def solve(s, n, c):\n    count = 0\n    s = s.split(c)\n    for i in s:\n        if len(i) > 1:\n            count += len(i) - 1\n    return count\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    print(max(solve(s, n, '0'), solve(s, n, '1')))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    x = s.replace('01', '')\n    ans = len(x) // 2\n    y = s.replace('10', '')\n    ans2 = len(y) // 2\n    print(min(ans, ans2))"]