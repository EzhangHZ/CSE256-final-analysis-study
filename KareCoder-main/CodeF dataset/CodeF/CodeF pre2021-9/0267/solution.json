["import math\n\ndef how_time(x, d):\n    return x + math.ceil(d / (x + 1.0))\n\ndef main():\n    EPS = 0.001\n    t = int(input())\n    while t > 0:\n        t -= 1\n        (n, d) = map(int, input().split())\n        if math.sqrt(d) - int(math.sqrt(d)) < EPS and how_time(int(math.sqrt(d) - 1), d) <= n:\n            print('YES')\n            continue\n        l = 0\n        r = n\n        while r - l > 2:\n            m1 = int((2 * l + r) / 3)\n            m2 = math.ceil((l + 2 * r) / 3)\n            if how_time(m1, d) > how_time(m2, d):\n                l = m1\n            else:\n                r = m2\n        if how_time(l, d) <= n or how_time(r, d) <= n or how_time((l + r) / 2, d) <= n:\n            print('YES')\n        else:\n            print('NO')\nmain()", "import math\nfor i in range(0, int(input())):\n    (n, d) = map(int, input().split())\n    x = int(pow(d, 0.5)) - 1\n    if (d <= n) | (math.ceil(x + d / (x + 1)) <= n):\n        print('YES')\n    else:\n        print('NO')", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    (n, d) = map(int, input().split())\n    if d <= n:\n        print('YES')\n    else:\n        z = int(d ** 0.5)\n        den1 = d / (z + 1)\n        ans1 = ceil(den1) + z\n        den2 = d / z\n        ans2 = ceil(den2) + z - 1\n        den3 = d / (z + 2)\n        ans3 = ceil(den3) + z + 1\n        if min(ans1, ans2, ans3) > n:\n            print('NO')\n        else:\n            print('YES')", "import math\nt = int(input())\nfor i in range(t):\n    (n, d) = map(int, input().split())\n    x = math.ceil(2.0 * math.sqrt(1.0 * d) - 1)\n    if d <= n or x <= n:\n        print('YES')\n    else:\n        print('NO')", "import math\nt = int(input())\nwhile t:\n    t = t - 1\n    (n, d) = map(int, input().split())\n    x = math.ceil(2 * math.sqrt(d) - 1)\n    if d <= n or x <= n:\n        print('YES')\n    else:\n        print('NO')", "from math import *\nt = int(input())\nfor i in range(t):\n    (n, d) = map(int, input().split())\n    x = int(sqrt(d)) - 1\n    if int(sqrt(d)) - 1 + ceil(d / (x + 1)) <= n:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    print('YNEOS'[4 * d > (n + 1) ** 2::2])", "cnt = int(input())\nfor i in range(cnt):\n    (n, d) = [int(i) for i in input().split()]\n    D = (n + 1) ** 2 - 4 * d\n    print('YES' if D >= 0 else 'NO')", "import sys\ninput = sys.stdin.readline\nimport math\nfor _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    x = int(d ** 0.5)\n    if n >= math.ceil(d / x) + x - 1:\n        print('YES')\n    else:\n        print('NO')", "exec(int(input()) * \"n,d=map(int,input().split());print('YNEOS'[4*d>(n+1)**2::2]);\")", "import math\nfor _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    (l, r) = (0, n)\n    while l < r:\n        m = l + (r - l) // 2\n        temp = m + math.ceil(d / (m + 1))\n        if temp > n:\n            l = m + 1\n        else:\n            print('YES')\n            break\n    else:\n        print('NO')", "t = int(input())\nfor e in range(t):\n    (n, d) = list(map(int, input().split()))\n    l = 0\n    r = n\n    a = []\n    eps = 1e-06\n    while r - l > 1:\n        m1 = int(l + (r - l) / 3 - 1e-09)\n        m2 = int(l + (r - l) / 3 * 2 - 1e-09)\n        if m1 + d / (m1 + 1) > m2 + d / (m2 + 1):\n            l = l + (r - l) / 3\n        elif m1 + d / (m1 + 1) < m2 + d / (m2 + 1):\n            r = l + (r - l) / 3 * 2\n        elif m1 + d / (m1 + 1) <= min(n, d):\n            a = 'YES'\n            break\n        else:\n            l = l + (r - l) / 3\n            r = l + (r - l) / 3 * 2\n    if l != 0:\n        q = int(l - 1e-09) + 1\n    else:\n        q = 0\n    if a == 'YES' or q + d / (q + 1) <= min(n, d):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    (n, d) = map(int, input().split())\n    if d <= n:\n        print('YES')\n    else:\n        x = (n - 1) / 2\n        if d > (n - x) * (x + 1):\n            print('NO')\n        else:\n            print('YES')", "import math\nt = int(input())\nwhile t:\n    (n, d) = map(int, input().split())\n    if (n + 1) ** 2 >= 4 * d:\n        print('YES')\n    else:\n        print('NO')\n    t -= 1", "for i in range(int(input())):\n    (n, d) = map(int, input().split())\n    print('NO') if (1 - n) ** 2 - 4 * (d - n) < 0 else print('YES')", "from math import ceil, floor, sqrt\n\ndef time(x, d):\n    return x + ceil(d / (x + 1))\nfor _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    cands = [floor(sqrt(d) - 1), ceil(sqrt(d) - 1)]\n    if min([time(cand, d) for cand in cands]) <= n:\n        print('YES')\n    else:\n        print('NO')", "import math\nn = 0\nd = 0\n\ndef get(x):\n    return x + d / (x + 1)\nfor i in range(int(input())):\n    (n, d) = map(int, input().split())\n    (l, r) = (0, n)\n    while l + 2 < r:\n        m1 = (l * 2 + r) // 3\n        m2 = (l + r * 2) // 3\n        if get(m1) > get(m2):\n            l = m1\n        else:\n            r = m2\n    timer1 = get(l)\n    timer2 = get(r)\n    timer3 = get((l + r) // 2)\n    if min(timer1, timer2, timer3) <= n:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    input_str = input()\n    n = int(input_str.split(' ')[0])\n    d = int(input_str.split(' ')[1])\n    delta = (n + 1) ** 2 - 4 * d\n    if delta < 0:\n        print('NO')\n        continue\n    xmin = (n - 1 - delta ** 0.5) / 2\n    xmax = (n - 1 + delta ** 0.5) / 2\n    start_x = int(max(xmin, 0))\n    end_x = int(xmax) + 1\n    get_results = False\n    for x in range(start_x, end_x):\n        check = x + int(d / (x + 1)) + int(d % (x + 1) > 0)\n        if check <= n:\n            get_results = True\n            break\n    if get_results:\n        print('YES')\n    else:\n        print('NO')", "from math import ceil\nfrom math import sqrt\nt = int(input())\ns = {}\nfor i in range(t):\n    (n, d) = map(int, input().split())\n    s[i] = [n, d]\nfor (key, value) in s.items():\n    n = int(value[0])\n    d = int(value[1])\n    if d > n:\n        total = ceil(2.0 * sqrt(1.0 * d) - 1)\n        if total <= n:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('YES')", "import sys\nimport math\n\ndef ceil(a, b):\n    return -(-a // b)\n\ndef answer(n, d):\n    sqrtd = int(math.sqrt(d))\n    if ceil(d, sqrtd) + (sqrtd - 1) <= n:\n        return 'YES'\n    else:\n        return 'NO'\n    return\n\ndef main():\n    T = int(input())\n    while T:\n        (n, d) = [int(i) for i in sys.stdin.readline().split()]\n        print(answer(n, d))\n        T -= 1\n    return\nmain()", "from math import ceil\nfor t in range(int(input())):\n    (n, d) = map(int, input().split())\n    ans = 'NO'\n    for x in range((n - 1) // 2, (n - 1) // 2 + 3):\n        if x + ceil(d / (x + 1)) <= n:\n            ans = 'YES'\n            break\n    print(ans)", "import math\nfor _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    if math.floor(math.sqrt(d) - 1) + math.ceil(d / (math.floor(math.sqrt(d) - 1) + 1)) <= n or math.ceil(math.sqrt(d) - 1) + math.ceil(d / (math.ceil(math.sqrt(d) - 1) + 1)) <= n:\n        print('YES')\n        continue\n    else:\n        print('NO')", "import math as ma\nfor i in ' ' * int(input()):\n    (n, m) = map(int, input().split())\n    if n >= m:\n        print('YES')\n    else:\n        print(['YES', 'NO'][n // 2 + ma.ceil(m / (n // 2 + 1)) > n])", "for _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    if n % 2 == 0:\n        if d % (n // 2 + 1) == 0:\n            x = d // (n // 2 + 1)\n        else:\n            x = d // (n // 2 + 1) + 1\n        if n // 2 + x <= n:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        if d % (n // 2 + 1) == 0:\n            x = d // (n // 2 + 1)\n        else:\n            x = d // (n // 2 + 1) + 1\n        if d % (n // 2 + 2) == 0:\n            y = d // (n // 2 + 2)\n        else:\n            y = d // (n // 2 + 2) + 1\n        if n // 2 + x <= n or n // 2 + 1 + y <= n:\n            print('YES')\n        else:\n            print('NO')", "def find_suppose_time(x, case):\n    (n, d) = case\n    return x + d / (x + 1)\n\ndef injure_into_case(case: list):\n    (needed, now) = case\n    (left, right) = (0, needed)\n    while right - left > 20:\n        suppose_left = left + (right - left) // 3\n        suppose_right = right - (right - left) // 3\n        if find_suppose_time(suppose_left, case) <= find_suppose_time(suppose_right, case):\n            right = suppose_right\n        elif find_suppose_time(suppose_left, case) > find_suppose_time(suppose_right, case):\n            left = suppose_left\n    best_time = min([find_suppose_time(i, case) for i in range(left, right + 1)])\n    return best_time <= needed\ncases = [[int(i) for i in input().split()] for j in range(int(input()))]\nfor case in cases:\n    print('YES' if injure_into_case(case) else 'NO')", "def f(x):\n    y = x + 1\n    return x + d / y\nfor _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    if d <= n:\n        print('YES')\n    else:\n        left = 0\n        right = d + n\n        for i in range(300):\n            middle1 = left + (right - left) / 3\n            middle2 = right - (right - left) / 3\n            a = f(middle1)\n            b = f(middle2)\n            if a == b:\n                (left, right) = (middle1, middle2)\n            elif a < b:\n                right = middle2\n            else:\n                left = middle1\n        if f(left) <= n or f(right) <= n:\n            print('YES')\n        else:\n            print('NO')", "from math import *\n\ndef time(x):\n    return x + d / (x + 1)\nt = int(input())\nfor tt in range(t):\n    (n, d) = map(int, input().split())\n    l = 0\n    r = n\n    for i in range(300):\n        m1 = (l * 2 + r) / 3\n        m2 = (r * 2 + l) / 3\n        if time(m1) > time(m2):\n            l = m1\n        else:\n            r = m2\n    a = round(l)\n    if a + ceil(d / (a + 1)) <= n:\n        print('YES')\n    else:\n        print('NO')", "import math\nfor _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    if n >= d:\n        print('YES')\n    else:\n        x = n // 2\n        if x + math.ceil(d / (x + 1)) <= n:\n            print('YES')\n        else:\n            print('NO')", "import math\n\ndef solve(n, d):\n    if d <= n:\n        return 'YES'\n    l = 0\n    r = n\n    while l < r:\n        mid = (l + r) // 2\n        if math.ceil(d / (mid + 1)) + mid <= n:\n            return 'YES'\n        r = mid\n    return 'NO'\nq = int(input())\nwhile q:\n    (n, d) = map(int, input().split(' '))\n    print(solve(n, d))\n    q -= 1", "for i in range(int(input())):\n    (n, d) = map(int, input().split())\n    print('NO') if (1 - n) ** 2 - 4 * (d - n) < 0 else print('YES')", "from math import sqrt\nT = int(input())\nfor _ in range(T):\n    (n, d) = map(int, input().split())\n    x = max(int(sqrt(d)) - 1, 0)\n    if x + (d + x) // (x + 1) <= n:\n        print('YES')\n    else:\n        print('NO')", "import math\nfor _ in range(int(input())):\n    (n, d) = list(map(int, input().split()))\n    x = int(d ** 0.5 - 1)\n    k = x + math.ceil(d / (x + 1))\n    if k <= n:\n        print('YES')\n    else:\n        print('NO')", "import math\nq = int(input())\nfor i in range(q):\n    (n, d) = map(int, input().split())\n    w = math.sqrt(d)\n    if w != int(w):\n        w = int(w) + 1\n    else:\n        w = int(w)\n    if d % w == 0:\n        k = d // w\n    else:\n        k = d // w + 1\n    if n >= w - 1 + k:\n        print('YES')\n    else:\n        print('NO')", "from math import ceil\nT = int(input())\nfor _ in range(T):\n    (n, d) = map(int, input().split())\n    x = (n - 1) // 2\n    if x + ceil(d / (x + 1)) <= n:\n        print('YES')\n    elif x + 1 + ceil(d / (x + 2)) <= n:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (n, d) = map(int, input().split())\n    x = (n - 1) ** 2\n    y = 4 * (d - n)\n    if x - y >= 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    w = (n - 1) ** 2\n    q = 4 * (d - n)\n    if w >= q:\n        print('YES')\n    else:\n        print('NO')", "import math\nx = int(input())\nfor i in range(x):\n    (a, b) = map(int, input().split())\n    t = int(math.sqrt(b))\n    r = 0\n    for j in range(max(t - 2, 0), t + 2):\n        if j + 1 + (b - 1) // (j + 1) <= a:\n            print('YES')\n            r = 1\n            break\n    if r == 0:\n        print('NO')", "import math\nt = int(input())\nfor j in range(t):\n    (n, k) = list(map(int, input().split()))\n    i = 0\n    i += math.floor(math.sqrt(k)) - 1\n    k = math.ceil(k / (i + 1))\n    if n - i < k:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nwhile t:\n    (n, d) = map(int, input().split())\n    if d <= n:\n        print('YES')\n    else:\n        disc = (n - 1) ** 2 - 4 * (d - n)\n        if disc < 0:\n            print('NO')\n        else:\n            disc = disc ** 0.5\n            a = (n - 1 + disc) / 2\n            b = (n - 1 - disc) / 2\n            if a < 0:\n                print('NO')\n            elif a - b >= 0:\n                print('YES')\n    t -= 1", "import math\nfor t in range(int(input())):\n    (n, d) = list(map(int, input().split()))\n    if n % 2 == 0:\n        x = n // 2 - 1\n    else:\n        x = n // 2\n    ans = x + int(math.ceil(d / (x + 1)))\n    if ans <= n:\n        print('YES')\n    else:\n        print('NO')", "from math import ceil\nfor n in range(int(input())):\n    (x, y) = map(int, input().split())\n    if x >= y:\n        print('YES')\n    else:\n        p = x // 2\n        q = p + ceil(y / (p + 1))\n        if q <= x:\n            print('YES')\n        else:\n            print('NO')", "import math\nimport sys\nnn = sys.stdin.readline()\nnn = int(nn)\ni = 0\nwhile i < nn:\n    i = i + 1\n    nline = sys.stdin.readline()\n    nline = nline.strip()\n    lst = nline.split()\n    n = lst[0]\n    n = int(n)\n    d = lst[1]\n    d = int(d)\n    j = math.ceil(n / 2)\n    k = 0\n    klep = j + d\n    if d <= n:\n        print('YES')\n        continue\n    while j > 1:\n        j = j - 1\n        nd = math.ceil(d / (j + 1))\n        nklep = j + nd\n        if j + nd <= n:\n            print('YES')\n            k = 1\n            break\n        elif nklep <= klep:\n            klep = nklep\n        else:\n            k = 0\n            break\n    if k == 0:\n        print('NO')", "for t in range(int(input())):\n    (n, d) = [int(i) for i in input().split()]\n    if d <= n:\n        print('YES')\n    elif (1 - n) ** 2 - 4 * (d - n) >= 0:\n        print('YES')\n    else:\n        print('NO')", "def checker(n, d):\n    t = n // 2\n    result = t * (t + 1)\n    if n % 2 != 0:\n        result += t + 1\n    return 'YES' if d <= result else 'NO'\nfor _ in range(int(input())):\n    (N, D) = [int(i) for i in input().split()]\n    print(checker(N, D))", "from math import *\nt = int(input())\nfor i in range(t):\n    (n, d) = input().split()\n    n = int(n)\n    d = int(d)\n    flag = False\n    for j in range(max(0, int(sqrt(d)) - 5), min(int(sqrt(d)) + 6, n + 1)):\n        if j + ceil(d / (j + 1)) <= n:\n            flag = True\n            break\n    if flag == True:\n        print('YES')\n    else:\n        print('NO')", "from math import *\nt = int(input(''))\nfor i in range(t):\n    e = input('')\n    L = [int(i) for i in e.split()]\n    n = L[0]\n    d = L[1]\n    if d <= n:\n        print('YES')\n    else:\n        x = sqrt(d)\n        x1 = int(x) - 1\n        x2 = x1 + 1\n        Test1 = True\n        Test2 = True\n        a1 = d / (x1 + 1)\n        a2 = d / (x2 + 1)\n        if a2 - int(a2) != 0.0:\n            a2 = int(a2) + 1\n        if a1 - int(a1) != 0.0:\n            a1 = int(a1) + 1\n        if x1 + a1 > n:\n            Test1 = False\n        if x2 + a2 > n:\n            Test2 = False\n        if Test1 == False and Test2 == False:\n            print('NO')\n        else:\n            print('YES')", "from math import ceil\nt = int(input())\nfor q in range(t):\n    (n, d) = map(int, input().split())\n    x = n // 2\n    y = ceil(d / (x + 1))\n    if x + y <= n:\n        print('YES')\n    else:\n        print('NO')", "import math\nt = int(input())\nfor _ in range(t):\n    (n, d) = map(int, input().split(' '))\n    if d <= n:\n        print('YES')\n    elif (n - 1) ** 2 + 4 * (n - d) < 0:\n        print('NO')\n    else:\n        x = ((n - 1) ** 2 + 4 * (n - d)) ** 0.5\n        x = (x + n - 1) // 2\n        if x <= n - 1:\n            print('YES')\n        else:\n            print('NO')", "from math import sqrt\n\ndef main():\n    for _ in range(int(input())):\n        (n, d) = map(int, input().split())\n        x = int(sqrt(d) - 1)\n        print(('NO', 'YES')[x + (d + x) // (x + 1) <= n])\nmain()", "exec(int(input()) * \"n,d=map(int,input().split());print('YNEOS'[4*d>(n+1)**2::2]);\")", "t = int(input())\nfrom math import sqrt\n\ndef up(x):\n    if x == int(x):\n        return x\n    else:\n        return int(x) + 1\nfor iii in range(t):\n    (n, d) = map(int, input().split())\n    c = 0\n    k = int(sqrt(d)) - 1\n    li = [x + up(d / (1 + x)) for x in range(k, k + 2)]\n    m = min(li)\n    if m <= n:\n        print('YES')\n    else:\n        print('NO')", "import math\nt = int(input())\nfor i in range(t):\n    (n, d) = map(int, input().split())\n    x = n // 2\n    y = math.ceil(d / (x + 1))\n    if x + y <= n:\n        print('YES')\n    else:\n        print('NO')", "for _ in [0] * int(input()):\n    (has, run_for) = [int(x) for x in input().split()]\n    can_do = has // 2 + run_for / (has // 2 + 1)\n    print(['NO', 'YES'][can_do <= has])", "import math\n\ndef fnc(x, d):\n    return x + math.ceil(d / (x + 1))\nfor _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    if (n + 1) ** 2 >= 4 * d:\n        print('YES')\n    else:\n        print('NO')", "def test(x, d, n):\n    temp = d / (x + 1)\n    if int(temp) != temp:\n        temp = int(temp) + 1\n    if temp + x <= n:\n        return True\n    else:\n        return False\nn = int(input())\nfor i in range(n):\n    raw = input().split()\n    [n, d] = [int(x) for x in raw]\n    a1 = test(int(d ** 0.5) - 1, d, n) or test(int(d ** 0.5), d, n)\n    if a1 == True:\n        print('YES')\n    else:\n        print('NO')", "import math\nt = int(input())\nfor _ in range(t):\n    (n, m) = map(int, input().split())\n    n = (n - 1) ** 2 - 4 * (m - n)\n    if n >= 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    x = max(0, n // 2 - 1)\n    if x + (d + x) // (x + 1) > n:\n        x += 1\n        if x + (d + x) // (x + 1) > n:\n            print('NO')\n        else:\n            print('YES')\n    else:\n        print('YES')", "import math\n\ndef func(d, mid):\n    return mid + math.ceil(d / (mid + 1))\nfor tt in range(int(input())):\n    (n, d) = list(map(int, input().split()))\n    if n >= d:\n        print('YES')\n        continue\n    ans = d + 1\n    for i in range(int(d ** 0.5 - 3), int(d ** 0.5 + 5)):\n        if i >= 1 and i <= d:\n            ans = min(ans, func(d, i))\n    if n >= ans:\n        print('YES')\n    else:\n        print('NO')", "def can_do(n, d):\n    D = 1 + 2 * n + n ** 2 - 4 * d\n    return D >= 0\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        (n, d) = map(int, input().split())\n        if can_do(n, d):\n            print('YES')\n        else:\n            print('NO')\nmain()", "import math\nt = int(input())\nfor i in range(t):\n    (n, d) = map(int, input().split())\n    x = int(math.sqrt(d)) - 1\n    if x + d / (x + 1) <= n:\n        print('YES')\n    else:\n        print('NO')", "import math\nt = int(input())\nfor i in range(t):\n    (n, d) = map(int, input().split())\n    if math.ceil(2 * math.sqrt(d) - 1) <= n:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nimport math\nfor i in range(t):\n    (n, d) = map(int, input().split())\n    if n >= math.sqrt(d) * 2 - 1:\n        print('YES')\n    else:\n        print('NO')", "import math\nT = int(input())\nfor _ in range(T):\n    (a, b) = map(int, input().split())\n    if a >= b:\n        print('YES')\n        continue\n    y = math.ceil(math.sqrt(b))\n    ans = math.ceil(b / (y - 1)) + y - 2\n    if math.ceil(b / y) + y - 1 < math.ceil(b / (y - 1)) + y - 2:\n        ans = math.ceil(b / y) + y - 1\n    if a >= ans:\n        print('YES')\n    else:\n        print('NO')", "from math import ceil\nfor _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    x = int(d ** 0.5) - 1\n    print('NO' if all((x + ceil(d / (x + 1)) > n for x in (x, x + 1))) else 'YES')", "for t in range(int(input())):\n    (n, d) = map(int, input().split())\n    if n >= d:\n        print('YES')\n    else:\n        sqrt = int(pow(d, 0.5))\n        need = sqrt - 1 + int(d / sqrt) + int(d / sqrt != int(d / sqrt))\n        if need <= n:\n            print('YES')\n        else:\n            print('NO')", "from math import sqrt, ceil, floor\nt = int(input())\nfor _ in range(t):\n    (n, d) = list(map(int, input().split()))\n    if d <= n:\n        print('YES')\n    else:\n        x = sqrt(d) - 1\n        x0 = ceil(x)\n        x1 = floor(x)\n        if x0 + ceil(d / (x0 + 1)) <= n:\n            print('YES')\n        elif x1 + ceil(d / (x1 + 1)) <= n:\n            print('YES')\n        else:\n            print('NO')", "class Solve:\n    n = d = 0\n\n    def bsearch(self, l, r):\n        if l > r:\n            return 'NO'\n        mid = (l + r) // 2\n        xdiv = self.d // (mid + 1) + (1 if self.d % (mid + 1) else 0)\n        if mid + xdiv <= self.n:\n            return 'YES'\n        elif mid >= xdiv:\n            return self.bsearch(l, mid - 1)\n        else:\n            return self.bsearch(mid + 1, r)\n\n    def solve(self):\n        if self.d <= self.n:\n            return 'YES'\n        return self.bsearch(1, self.n)\n\ndef main():\n    for _ in [0] * int(input()):\n        s = Solve()\n        (s.n, s.d) = map(int, input().split())\n        print(s.solve())\nmain()", "for t in range(int(input())):\n    (n, d) = [int(i) for i in input().split()]\n    if d <= n:\n        print('YES')\n    elif (1 - n) ** 2 - 4 * (d - n) >= 0:\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nimport math\nfor i in range(T):\n    (n, d) = map(int, input().split())\n    if d <= n:\n        print('YES')\n        continue\n    else:\n        x = math.ceil(d ** 0.5) - 1\n        if x + math.ceil(d / (x + 1)) <= n:\n            print('YES')\n        else:\n            print('NO')", "from math import ceil, sqrt\nfor i in range(int(input())):\n    (n, d) = map(int, input().split())\n    if n >= ceil(2 * sqrt(d) - 1):\n        print('YES')\n    else:\n        print('NO')", "T = int(input())\nimport math\nfor i in range(T):\n    (n, d) = [int(x) for x in input().split()]\n    if d <= 20:\n        flag = False\n        for h in range(0, d + 1):\n            if h + math.ceil(d / (h + 1)) <= n:\n                print('YES')\n                flag = True\n                break\n        if not flag:\n            print('NO')\n    else:\n        t = int(math.sqrt(d))\n        flag = False\n        for j in range(t - 3, t + 3):\n            if j + math.ceil(d / (j + 1)) <= n:\n                print('YES')\n                flag = True\n                break\n        if not flag:\n            if n == 1:\n                if d == 1:\n                    print('YES')\n                else:\n                    print('NO')\n            else:\n                print('NO')", "import math\nt = int(input())\nfor _ in range(t):\n    (n, d) = map(int, input().split())\n    print('YES' if math.ceil(2 * math.sqrt(d) - 1) <= n else 'NO')", "import math\n\ndef check(n, d):\n    ms = math.sqrt(d)\n    f = math.floor(ms)\n    c = math.ceil(ms)\n    if math.ceil(f + d / f - 1) <= n or math.ceil(c + d / c - 1) <= n:\n        return 1\n    return 0\nfor _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    if d <= n or check(n, d):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    x = input()\n    (n, d) = (int(x.split(' ')[0]), int(x.split(' ')[1]))\n    res = (n + 1) * (n + 1) - 4 * d\n    if res >= 0:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    i = (a - 1) ** 2 - 4 * (b - a)\n    if i >= 0:\n        print('YES')\n    else:\n        print('NO')", "inp = lambda : map(int, input().split())\nfor _ in range(int(input())):\n    (n, d) = inp()\n    print('YNEOS'[4 * d > (n + 1) ** 2::2])", "for i in range(int(input())):\n    (n, d) = map(int, input().split())\n    if (n + 1) ** 2 >= 4 * d:\n        print('YES')\n    else:\n        print('NO')", "import math as m\ntc = int(input())\nwhile tc > 0:\n    (n, d) = map(int, input().split())\n    e = m.sqrt(d)\n    e = m.ceil(e - 1.0)\n    f = m.floor(e - 1.0)\n    if m.ceil(e + d / (e + 1)) <= n or m.ceil(f + d / (f + 1)) <= n:\n        print('YES')\n    else:\n        print('NO')\n    tc -= 1", "from math import sqrt\nfor _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    if 2 * sqrt(d) <= n + 1:\n        print('YES')\n    else:\n        print('NO')", "for t in range(int(input())):\n    (n, d) = map(int, input().split())\n    p = n // 2 + d / (n // 2 + 1)\n    print(['NO', 'YES'][p <= n])", "def check(n, d):\n    if (n // 2 + 1) * (n // 2 - n) + d <= 0 or (n // 2 + 2) * (n // 2 - n + 1) + d <= 0:\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nfor x in range(t):\n    (n, d) = map(int, input().split())\n    check(n, d)", "def check(n, d):\n    if (n // 2 + 1) * (n // 2 - n) + d <= 0:\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nfor x in range(t):\n    (n, d) = map(int, input().split())\n    check(n, d)", "t = int(input())\nfor x in range(t):\n    (n, d) = map(int, input().split())\n    if (n // 2 + 1) * (n // 2 - n) + d <= 0:\n        print('YES')\n    else:\n        print('NO')", "import math as m\nI = input\npr = print\nfor _ in range(int(I())):\n    (n, d) = map(int, I().split())\n    pr('YNEOS'[m.ceil(2 * m.sqrt(d)) - 1 > n::2])", "def f(d, lol):\n    soln = d / (lol + 1)\n    if soln > d / (lol + 1):\n        return soln + 1\n    return soln\nfor _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    lol = int(d ** 0.5) - 1\n    ceil = f(d, lol)\n    lol2 = lol + ceil\n    if lol2 <= n:\n        print('YES')\n    else:\n        print('NO')", "a = int(input())\nr = 0\nc = list()\nwhile r < a:\n    b = [int(b) for b in input().split()]\n    if b[0] >= b[1]:\n        c.append('YES')\n    else:\n        d = b[0] // 2\n        if b[1] % (d + 1) == 0 and d + b[1] // (d + 1) <= b[0] or (b[1] % (d + 1) != 0 and d + 1 + b[1] // (d + 1) <= b[0]):\n            c.append('YES')\n        else:\n            c.append('NO')\n    r = r + 1\nr = 0\nwhile r < a:\n    print(c[r])\n    r = r + 1", "import math\n\ndef deadline():\n    cases = int(input())\n    program = []\n    for i in range(cases):\n        program.append(list(map(int, input().split())))\n    for i in range(len(program)):\n        if program[i][1] <= program[i][0]:\n            print('YES')\n            continue\n        L = 1\n        R = program[i][0] - 1\n        found = False\n        while L <= R:\n            mid = L + int((R - L) / 2)\n            temp = program[i][0] - mid\n            temp_opt = math.ceil(program[i][1] / (mid + 1))\n            if temp >= temp_opt:\n                print('YES')\n                found = True\n                break\n            elif temp < temp_opt:\n                L = mid + 1\n            else:\n                R = mid - 1\n        if not found:\n            print('NO')\ndeadline()", "from math import ceil, sqrt\n\ndef total_days(x, d_):\n    return x + ceil(d_ / (x + 1))\nt = int(input())\nfor i in range(t):\n    (n, d) = map(int, input().split())\n    x_min = ceil(sqrt(d) - 1)\n    min_days_required = total_days(x_min, d)\n    if min_days_required > n:\n        print('NO')\n    else:\n        print('YES')", "import math\nt = int(input())\nfor i in range(0, t):\n    (n, d) = [int(j) for j in input().split()]\n    minSUM = math.ceil(2 * math.sqrt(d) - 1)\n    if n >= minSUM:\n        print('YES')\n    else:\n        print('NO')", "from math import ceil\nfor _ in range(int(input())):\n    (n, d) = map(int, input().split())\n    if d <= n:\n        print('YES')\n    else:\n        dn = n // 2\n        f = 0\n        for i in range(dn, n):\n            if i + ceil(d / (i + 1)) <= n:\n                f = 1\n                print('YES')\n                break\n            else:\n                break\n        if f != 1:\n            for i in range(dn, n):\n                if i + ceil(d / (i + 1)) <= n:\n                    f = 1\n                    print('YES')\n                    break\n                else:\n                    break\n        if f == 0:\n            print('NO')", "def check_root(n, d):\n    return n * n + 2 * n + 1 >= 4 * d\nt = int(input())\nwhile t:\n    t = t - 1\n    (n, d) = map(int, input().split())\n    if check_root(n, d):\n        print('YES')\n    else:\n        print('NO')", "import sys, math\nI = sys.stdin.readline\nans = ''\nfor _ in range(int(I())):\n    (n, d) = map(int, I().split())\n    if n >= d:\n        ans += 'YES\\n'\n    else:\n        x = 1 + math.ceil(d / 2)\n        y = math.floor(n / 2) + math.ceil(d / (math.floor(n / 2) + 1))\n        if x <= n or y <= n:\n            ans += 'YES\\n'\n        else:\n            ans += 'NO\\n'\nprint(ans)", "import math\n\ndef check(n, d):\n    return n * n + 2 * n + 1 >= 4 * d\nt = int(input())\nwhile t:\n    t -= 1\n    (n, d) = map(int, input().split())\n    if check(n, d):\n        print('YES')\n    else:\n        print('NO')"]