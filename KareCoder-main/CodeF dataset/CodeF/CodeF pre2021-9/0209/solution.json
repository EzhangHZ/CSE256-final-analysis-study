["def answer(n, ary):\n    ary.sort(reverse=True)\n    tgt = n\n    sum = 1\n    for i in range(n):\n        if ary[i] <= tgt:\n            sum += tgt\n            return sum\n        else:\n            tgt -= 1\n    return sum\n\ndef main():\n    t = int(input())\n    n = [0] * t\n    ary = [0] * t\n    for j in range(t):\n        n[j] = int(input())\n        ary[j] = [int(i) for i in input().split()]\n    for j in range(t):\n        print(answer(n[j], ary[j]))\nmain()", "import math\nt = int(input())\nans = []\nfor x in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    maxgrannies = 1\n    a.sort()\n    for x in range(n):\n        if x + 1 >= a[x]:\n            maxgrannies = x + 2\n        else:\n            continue\n    ans.append(maxgrannies)\nfor a in ans:\n    print(a)", "for _ in range(int(input())):\n    n = int(input())\n    arr = sorted(list(map(int, input().split())))\n    ans = 1\n    for i in range(n):\n        if arr[i] <= i + 1:\n            ans = i + 2\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = [0] + sorted(list(map(int, input().split())))\n    max_ = n\n    for i in range(n, -1, -1):\n        if a[i] <= i:\n            max_ = i\n            break\n    print(max_ + 1)", "def main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    ans = 1\n    for i in range(0, n):\n        if arr[i] <= i + 1:\n            ans = i + 1 + 1\n    print(ans)\nt = int(input())\nfor _ in range(t):\n    main()", "n = int(input())\nfor i in range(0, n):\n    a = int(input())\n    t = 0\n    l = [int(x) for x in input().split()]\n    l.sort()\n    for j in range(a - 1, -1, -1):\n        if l[j] <= j + 1:\n            ans = j + 2\n            print(ans)\n            t = 1\n            break\n    if t == 0:\n        print(1)", "test = int(input())\nfor i in range(test):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    arr.sort()\n    size = len(arr)\n    flag = True\n    c = 0\n    for i in range(size - 1, -1, -1):\n        val = arr[i]\n        if val <= size:\n            print(size + 1)\n            c = 1\n            break\n        else:\n            size -= 1\n    if c == 0:\n        print(1)", "for s in [*open(0)][2::2]:\n    i = r = 0\n    for x in sorted(map(int, s.split())):\n        i += 1\n        r = (i, r)[x > i]\n    print(r + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    for j in range(n):\n        if a[j] > n:\n            n -= 1\n    print(n + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    for j in range(n):\n        if a[j] > n:\n            n -= 1\n    print(n + 1)", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    for i in range(n - 1, -1, -1):\n        if a[i] <= i + 1:\n            return i + 2\n    return 1\nfor t in range(0, int(input())):\n    print(solve())", "def babushka(v, u):\n    for i in range(v - 1, -1, -1):\n        if u[i] <= i + 1:\n            return i + 2\n    return 1\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    b = sorted([int(__) for __ in input().split()])\n    print(babushka(n, b))", "t = int(input())\nres = []\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    f = 0\n    for i in range(n - 1, -1, -1):\n        if a[i] <= i + 1:\n            f = 1\n            res.append(i + 2)\n            break\n    if f == 0:\n        res.append(1)\nfor i in res:\n    print(i)", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    for i in range(a - 1, -1, -1):\n        if l[i] <= i + 1:\n            print(i + 2)\n            break\n    else:\n        print(1)", "n = int(input())\nfor i in range(n):\n    s = int(input())\n    found = True\n    babushki = sorted(list(map(int, input().split())))\n    for i in range(s - 1, -1, -1):\n        if babushki[i] <= i + 1:\n            print(i + 2)\n            found = False\n            break\n    if found:\n        print(1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [0]\n    a += list(map(int, input().split()))\n    a.sort()\n    while n < a[n] and n >= 0:\n        n -= 1\n    print(n + 1)", "import sys\ninput = sys.stdin.readline\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    L = sorted(map(int, input().split()))\n    ans = 1\n    for i in range(n):\n        if i + 1 >= L[i]:\n            ans = i + 2\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split(' ')]\n    arr.sort()\n    res = 1\n    for i in range(n - 1, -1, -1):\n        if arr[i] <= i + 1:\n            res = i + 2\n            break\n    print(res)", "for t in range(int(input())):\n    n = int(input())\n    a = sorted([int(i) for i in input().split()])\n    k = 1\n    for i in range(n):\n        if a[i] <= i + 1:\n            k = i + 2\n    print(k)", "def solve():\n    n = int(input())\n    a = sorted(map(int, input().split()))\n    for i in range(n - 1, -1, -1):\n        if a[i] <= i + 1:\n            print(i + 2)\n            return\n    print(1)\nn = int(input())\nwhile n:\n    solve()\n    n -= 1", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    res = n + 1\n    for i in range(n - 1, -1, -1):\n        if a[i] <= i + 1:\n            break\n        res -= 1\n    print(res)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    w = [int(k) for k in input().split()]\n    w.sort()\n    while n and w[-1] > n:\n        w.pop()\n        n -= 1\n    print(n + 1)", "def getCnt(l: list) -> int:\n    cnt = len(l) + 1\n    for i in range(len(l) - 1, -1, -1):\n        if l[i] > cnt - 1:\n            cnt -= 1\n        else:\n            break\n    return cnt\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    l = list(map(lambda x: int(x), input().strip().split()))\n    l.sort()\n    print(getCnt(l))\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    _list = list(map(int, input().split()))\n    _list.sort()\n    count = 1\n    _result = 1\n    for key in _list:\n        count += 1\n        if count > key:\n            _result = count\n    print(_result)", "I = input\nfor _ in range(int(I())):\n    n = int(I())\n    for i in sorted(map(int, I().split()), reverse=True):\n        if i > n:\n            n -= 1\n        else:\n            print(n + 1)\n            break\n    else:\n        print(1)", "for num in range(int(input())):\n    an = int(input())\n    al = list(map(int, input().split()))\n    al.sort()\n    temp = 1\n    gc = 1\n    for i in range(len(al) - 1):\n        if gc >= al[i]:\n            gc += 1\n            temp += 1\n        else:\n            temp += 1\n            if temp >= al[i + 1]:\n                gc = temp\n    if gc >= al[-1]:\n        gc += 1\n    print(gc)", "for num in range(int(input())):\n    an = int(input())\n    al = list(map(int, input().split()))\n    al.sort()\n    temp = 1\n    gc = 1\n    for i in range(len(al) - 1):\n        if gc >= al[i]:\n            gc += 1\n            temp += 1\n        else:\n            temp += 1\n            if temp >= al[i + 1]:\n                gc = temp\n    if gc >= al[-1]:\n        gc += 1\n    print(gc)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    x = 1\n    for i in range(len(a)):\n        if i + 1 >= a[i]:\n            x = i + 1 + 1\n    print(x)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    ar.sort()\n    total = n\n    for i in range(n - 1, -1, -1):\n        if ar[i] > total:\n            total -= 1\n    print(total + 1)", "def main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    ans = 1\n    for i in range(0, n):\n        if arr[i] <= i + 1:\n            ans = i + 1 + 1\n    print(ans)\nt = int(input())\nfor _ in range(t):\n    main()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    max_a = len(a)\n    for value in a[::-1]:\n        if value > max_a:\n            max_a -= 1\n        else:\n            break\n    print(max_a + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    count = 1\n    for i in range(len(a) - 1, -1, -1):\n        if a[i] <= i + 1:\n            count += i + 1\n            break\n    print(count)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    for j in range(n):\n        if a[j] > n:\n            n -= 1\n        else:\n            break\n    print(n + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    for j in range(n):\n        if a[j] > n:\n            n -= 1\n        else:\n            break\n    print(n + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = sorted(list(map(int, input().split())), reverse=True)\n    for j in range(n):\n        if a[j] > n:\n            n -= 1\n    print(n + 1)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort(reverse=True)\n    v = 0\n    for j in range(len(l)):\n        if l[j] > n - v:\n            v += 1\n    print(n + 1 - v)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    while n and a[-1] > n:\n        a.pop()\n        n -= 1\n    print(n + 1)", "t = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    lst.sort()\n    no_granny = 1\n    c = 0\n    j = 0\n    while j < n:\n        if no_granny + c >= lst[j]:\n            no_granny += 1 + c\n            c = 0\n        else:\n            c += 1\n        j += 1\n    ans.append(no_granny)\nfor item in ans:\n    print(item)", "t = int(input())\nfor a in range(t):\n    n = int(input())\n    bt = list(map(int, input().split()))\n    bt.sort()\n    if bt[0] >= 1:\n        ans = 1\n        temp = 1\n        for a in bt:\n            temp += 1\n            if temp > a:\n                ans = temp\n        print(ans)\n    else:\n        print(1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    a.sort(reverse=True)\n    for (i, v) in enumerate(a):\n        if v <= n - i:\n            print(n - i + 1)\n            break\n    else:\n        print(1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().strip().split()]\n    a.sort(reverse=True)\n    for (i, v) in enumerate(a):\n        if n - i >= v:\n            print(n - i + 1)\n            break\n    else:\n        print(1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    arr.sort()\n    p = False\n    i = n - 1\n    while i >= 0:\n        if arr[i] <= i + 1:\n            ans = i + 2\n            p = True\n            break\n        i -= 1\n    if p:\n        print(ans)\n    else:\n        print(1)", "def main():\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(sorted(map(int, input().split())))\n        for i in reversed(range(n)):\n            if a[i] <= i + 1:\n                print(i + 2)\n                break\n        else:\n            print(1)\nmain()", "import sys\n\ndef ints():\n    return list(map(int, sys.stdin.readline().strip().split()))\ntc = int(input())\nwhile tc:\n    tc -= 1\n    n = int(input())\n    ls = ints()\n    ls.sort()\n    ans = 1\n    temp = 1\n    for item in ls:\n        if item <= temp:\n            ans = temp + 1\n        temp += 1\n    print(ans)", "m = int(input())\nfor i in range(m):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    s = 1\n    for j in range(n):\n        if l[j] <= j + 1:\n            s = j + 2\n    print(s)", "for _ in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    b.sort()\n    l = 1\n    for i in range(a):\n        if b[i] <= i + 1 and b[i] <= a:\n            l = i + 2\n    print(l)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    while l:\n        if l[-1] <= n:\n            break\n        else:\n            l.pop()\n            n -= 1\n    print(n + 1)", "res = ''\nfor _ in range(int(input())):\n    n = int(input())\n    grannies = list(map(int, input().split()))\n    grannies.sort(reverse=True)\n    cant_come = 0\n    for granny in grannies:\n        if granny > n - cant_come:\n            cant_come += 1\n        else:\n            break\n    res += '%d\\n' % (n - cant_come + 1)\nprint(res)", "for cases in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    count = n + 1\n    lst.sort()\n    for i in range(n - 1, -1, -1):\n        if lst[i] > count - 1:\n            count -= 1\n        else:\n            continue\n    print(count)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    ans = 1\n    c = 0\n    for i in range(n):\n        if ans + c >= l[i]:\n            ans = ans + c + 1\n            c = 0\n        else:\n            c += 1\n    print(ans)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    p = 1\n    for i in range(n):\n        if a[i] <= i + 1:\n            p = i + 2\n    print(p)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    array = list(map(int, input().rstrip().split()))\n    array.sort()\n    for i in range(n - 1, -1, -1):\n        if 1 + i >= array[i]:\n            print(i + 2)\n            break\n    else:\n        print(1)", "t = int(input())\nfor tt in range(t):\n    count_of_grandma_friends = int(input())\n    list_of_grandma_friends = list(map(int, input().split()))\n    list_of_grandma_friends = sorted(list_of_grandma_friends)\n    count_of_outside_grandmas = 1\n    have_to_out = 0\n    for i in range(len(list_of_grandma_friends)):\n        may_to_out = i + 1\n        if may_to_out >= list_of_grandma_friends[i]:\n            have_to_out = may_to_out\n    count_of_outside_grandmas += have_to_out\n    print(count_of_outside_grandmas)", "t = int(input())\nfor x in range(t):\n    l = int(input())\n    gran = list(map(int, input().split()))\n    gran.sort()\n    m = l\n    total = 1\n    for i in range(l - 1, -1, -1):\n        if gran[i] <= m:\n            total += 1\n        else:\n            m -= 1\n    print(total)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 1\n    for i in range(n, 0, -1):\n        if a[i - 1] <= i:\n            ans = i + 1\n            break\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort(reverse=True)\n    intialG = n\n    for i in arr:\n        if i <= intialG:\n            break\n        intialG -= 1\n    print(intialG + 1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    arr.sort()\n    ans = 1\n    for i in range(n - 1, -1, -1):\n        if arr[i] <= i + 1:\n            ans = i + 2\n            break\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    lst = input().split()\n    lst = [int(i) for i in lst]\n    dct = {}\n    for i in lst:\n        dct[i] = dct.get(i, 0) + 1\n    mx = 1\n    ans = 1\n    for i in sorted(dct.keys()):\n        ans += dct[i]\n        if ans - 1 >= i:\n            mx = max(mx, ans)\n    print(mx)", "test = int(input())\nfor _ in range(test):\n    n = int(input())\n    alist = map(int, input().split())\n    adict = {}\n    for i in alist:\n        if i in adict:\n            adict[i] += 1\n        else:\n            adict[i] = 1\n    asort = sorted(adict.items(), key=lambda x: x[0])\n    count = 1\n    nanny = 1\n    need = 0\n    for i in asort:\n        nanny += i[-1]\n        need = i[0]\n        if nanny - 1 >= need:\n            count = nanny\n    print(count)", "import sys\nsys.setrecursionlimit(10 ** 5)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\n\ndef main():\n    for _ in range(II()):\n        n = II()\n        aa = LI()\n        aa.sort()\n        for i in range(n - 1, -1, -1):\n            if aa[i] <= i + 1:\n                print(i + 2)\n                break\n        else:\n            print(1)\nmain()", "def main():\n    from sys import stdin\n    from sys import stdout\n    input = stdin.readline\n    print = stdout.write\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        a.sort()\n        possible_counter = 1\n        counter = 0\n        for i in range(n):\n            if possible_counter >= a[i]:\n                counter = possible_counter\n            possible_counter += 1\n        print(f'{counter + 1}\\n')\nmain()", "t = int(input())\nk = []\nfor i in range(t):\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    for j in range(len(a) - 1, -1, -1):\n        if j + 2 > a[j]:\n            k.append(j + 2)\n            break\n    else:\n        k.append(1)\nprint(*k, sep='\\n')", "import sys\nreadline = sys.stdin.readline\nns = lambda : readline().rstrip()\nni = lambda : int(readline().rstrip())\nnm = lambda : map(int, readline().split())\nnl = lambda : list(map(int, readline().split()))\n\ndef solve():\n    n = ni()\n    a = nl() + [0]\n    a.sort()\n    for i in range(n, -1, -1):\n        if a[i] <= i:\n            print(i + 1)\n            break\n    return\nT = int(input())\nfor _ in range(T):\n    solve()", "for s in [*open(0)][2::2]:\n    a = sorted(map(int, s.split()))\n    print(max([1] + [i + 2 for (i, x) in enumerate(a) if x < i + 2]))", "t = int(input())\np = []\nq = []\nfor i in range(t):\n    k = int(input())\n    h = list(map(int, input().split()))\n    p.append(h)\n    q.append(k)\n\ndef granny(l_arr, arr):\n    o = []\n    for i in range(l_arr):\n        if arr[i] <= l_arr:\n            o.append(arr[i])\n    if o:\n        count = []\n        for i in range(max(o)):\n            count.append(0)\n        for i in range(len(o)):\n            count[o[i] - 1] += 1\n        su = sum(count)\n        for i in range(len(count) - 1, -1, -1):\n            retval = 0\n            if su >= i + 1:\n                retval = su\n                break\n            else:\n                su = su - count[i]\n    else:\n        retval = 0\n    return retval + 1\nfor i in range(t):\n    y = granny(q[i], p[i])\n    print(y)", "t = int(input())\nans = []\nfor k in range(t):\n    n = int(input())\n    l = [0] + sorted([int(i) for i in input().split()])\n    maxi = 0\n    for i in range(1, len(l)):\n        if l[i] <= i:\n            maxi = i\n    ans.append(maxi + 1)\nfor i in ans:\n    print(i)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = 1\n    arr.sort()\n    i = n - 1\n    while i >= 0 and arr[i] > i + 1:\n        arr.pop()\n        i = i - 1\n    print(len(arr) + 1)", "t = int(input())\nfor j in range(t):\n    c = 0\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    for j in range(n):\n        if arr[j] <= j + 1:\n            c = j + 1\n    print(c + 1)", "for _ in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    b = sorted(b)\n    c = 1\n    for i in range(a):\n        if b[i] <= i + 1:\n            c = i + 2\n    print(c)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    c = 1 + n\n    for i in range(n - 1, -1, -1):\n        if c <= arr[i]:\n            c -= 1\n        else:\n            print(c)\n            break\n    else:\n        print(c)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    a.sort()\n    ans = 0\n    for i in range(0, n):\n        if a[i] <= i + 1:\n            ans = i + 1\n    print(ans + 1)", "from sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    for x in a[::-1]:\n        if x <= n:\n            break\n        else:\n            n -= 1\n    print(n + 1)", "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10 ** 6)\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        an = sorted([int(x) for x in input().strip().split()])\n        ind = -1\n        for (i, a) in enumerate(an):\n            if i + 1 >= a:\n                ind = i\n        print(ind + 2)\nmain()", "import sys\nfor t in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    a = sorted(map(int, sys.stdin.readline().split()))\n    for i in reversed(range(n)):\n        if a[i] <= i + 1:\n            sys.stdout.write(f'{i + 2}\\n')\n            break\n    else:\n        sys.stdout.write(f'1\\n')", "n = int(input())\nl1 = []\nfor i in range(n):\n    a = int(input())\n    b = list(map(int, input().split()))\n    l1.append(b)\nfor i in l1:\n    i.sort()\n    for j in range(len(i) - 1, -1, -1):\n        if i[j] <= j + 1:\n            print(j + 2)\n            break\n    else:\n        print('1')", "import math\nfrom sys import stdin, stdout\n\ndef L():\n    return list(map(int, stdin.readline().split()))\n\ndef In():\n    return map(int, stdin.readline().split())\n\ndef I():\n    return int(stdin.readline())\n\ndef main():\n    for i in range(I()):\n        n = I()\n        l = L()\n        l = sorted(l, reverse=True)\n        ans = n + 1\n        for i in l:\n            if i < ans:\n                break\n            else:\n                ans -= 1\n        print(ans)\nmain()", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nfor _ in range(inp()):\n    len_ = inp()\n    list_ = sorted(inlt(), reverse=True)\n    for idx in range(len_):\n        if list_[idx] <= len_ - idx:\n            print(len_ - idx + 1)\n            break\n    else:\n        print(1)", "from collections import defaultdict\nimport sys\nimport math\nsys.setrecursionlimit(1000000)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\np2S = lambda x: print(*x, sep=' ')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\n\ndef main():\n    for _ in range(II()):\n        a = II()\n        b = LI()\n        b.sort()\n        ans = 1\n        for i in range(a - 1, -1, -1):\n            if i + 1 >= b[i]:\n                ans += i + 1\n                break\n        print(ans)\nmain()", "text = [*open(0)]\nfor s in text[2::2]:\n    flag = 1\n    l = sorted(map(int, s.strip().split()), reverse=True)\n    for i in range(len(l)):\n        if len(l) - i >= l[i]:\n            flag = 0\n            print(len(l) - i + 1)\n            break\n    if flag:\n        print(1)", "a = int(input())\nstore = [1] * a\nfor i in range(a):\n    number = int(input())\n    b = input()\n    count = 1 + number\n    c = [int(x) for x in b.split()]\n    c.sort()\n    for j in range(len(c)):\n        k = -(j + 1)\n        if c[k] >= count:\n            count = count - 1\n        elif count == 1 or c[k] < count:\n            store[i] = count\n            break\nfor i in range(a):\n    print(store[i])", "from sys import stdin\nt = int(stdin.readline())\nfor _ in range(t):\n    n = int(stdin.readline())\n    l = list(map(int, stdin.readline().split()))\n    l = sorted(l)\n    ind = len(l)\n    for i in range(ind - 1, -1, -1):\n        if l[i] > i + 1:\n            del l[i]\n        else:\n            break\n    print(len(l) + 1)", "ans = []\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().strip().split()))[:n]\n    a.sort()\n    j = n\n    while True:\n        if j == 0:\n            ans.append(1)\n            break\n        if a[j - 1] <= j:\n            ans.append(j + 1)\n            break\n        else:\n            j -= 1\nfor i in ans:\n    print(i)", "import sys, math\nI = sys.stdin.readline\nans = ''\nfor _ in range(int(I())):\n    n = int(I())\n    arr = list(map(int, I().split()))\n    arr.sort(reverse=True)\n    x = 1\n    i = 0\n    while i < n:\n        if arr[i] > n - i:\n            i += 1\n        else:\n            x = n - i + 1\n            break\n    ans += str(x) + '\\n'\nprint(ans)", "for s in [*open(0)][2::2]:\n    print(max((i * (x <= i) for (i, x) in enumerate(sorted(map(int, s.split())), 1))) + 1)", "from sys import stdin\nt = int(stdin.readline().strip())\nfor _ in range(t):\n    n = int(stdin.readline().strip())\n    a = list(map(int, stdin.readline().strip().split()))\n    a.sort()\n    result = 0\n    for (index, number) in enumerate(a):\n        count = index + 1\n        if count >= number:\n            result = count\n    print(result + 1)", "(t, n) = (int(input()), [])\n(a, k) = ([None for i in range(t)], [1] * t)\nfor i in range(t):\n    n.append(int(input()))\n    a[i] = sorted(list(map(int, input().split())))\n    for j in range(n[i] - 1, -1, -1):\n        if a[i][j] <= j + 1:\n            k[i] += j + 1\n            break\nprint(*k, sep='\\n')", "t = int(input())\nl = []\nfor i in range(t):\n    n = int(input())\n    a = []\n    a = [int(x) for x in input().split()]\n    d = 1\n    a.sort()\n    for k in range(n - 1, -1, -1):\n        people = k + 1\n        if a[k] <= people:\n            d = k + 2\n            break\n    l.append(d)\nfor x in l:\n    print(x)", "import random\n\ndef ans_finder(nakhre, n):\n    real_count = 1\n    nakhre.sort()\n    for i in range(n):\n        if nakhre[i] <= i + 1:\n            real_count = i + 2\n    return real_count\nt = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    nakhre = [int(i) for i in input().split()]\n    ans.append(ans_finder(nakhre, n))\nfor i in ans:\n    print(i)", "import sys\nimport math\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    s = list(s[:len(s)])\n    if s[-1] == '\\n':\n        del s[-1]\n    return s\n\ndef invr():\n    return map(int, input().split())\n\ndef f(n, a):\n    cg = 1\n    a.sort()\n    ps = 0\n    pos = 0\n    while pos < n:\n        if cg >= a[pos]:\n            cg += 1\n        else:\n            while pos - ps + cg < a[pos]:\n                pos += 1\n                if pos >= n:\n                    return cg\n            cg += pos - ps + 1\n            ps = pos\n        ps += 1\n        pos += 1\n    return cg\n    return ()\nt = inp()\nresult = []\nfor i in range(t):\n    n = inp()\n    a = inlt()\n    result.append(f(n, a))\nfor i in range(t):\n    print(result[i])", "import sys, bisect\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    al = list(map(int, input().split()))\n    al.sort()\n    cur = 1\n    ans = 1\n    for i in range(n):\n        if al[i] <= cur:\n            ans = cur + 1\n        cur += 1\n    print(ans)\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        solve()\nmain()", "for w in range(int(input())):\n    n = int(input())\n    a = sorted((int(x) for x in input().split()))\n    b = [j + 1 >= a[j] for j in range(n)]\n    for (x, y) in enumerate(reversed(b)):\n        if y:\n            print(n + 1 - x)\n            break\n    else:\n        print(1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    guest = 0\n    for i in range(n):\n        if i + 1 >= a[i]:\n            guest = i + 1\n    print(guest + 1)", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    sum = 0\n    for i in range(0, len(a)):\n        sum += a[i]\n    my_sum = sum\n    k = 0\n    while 1:\n        flag = 0\n        sum = my_sum\n        for i in range(0, len(a) - k):\n            if a[len(a) - i - 1] <= len(a) - i:\n                k += len(a) - i\n                flag = 1\n                break\n            sum -= a[i]\n        if k == n:\n            break\n        if flag == 0:\n            break\n    print(k + 1)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    w = sorted(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        if w[i] <= i + 1:\n            if i + 1 > c:\n                c = i + 1\n    print(c + 1)", "from sys import stdin, stderr\n\ndef rl():\n    return [int(w) for w in stdin.readline().split()]\n(t,) = rl()\nfor _ in range(t):\n    (n,) = rl()\n    a = rl()\n    a.sort()\n    print(1 + max([i + 1 for (i, x) in enumerate(a) if x <= i + 1] + [0]))", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    _ = input()\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    for (i, ai) in enumerate(a, 1):\n        if ai <= i:\n            ans = i\n    print(ans + 1)", "def time(nk, n):\n    nk.sort()\n    oh = []\n    while len(nk) > 0:\n        if nk[-1] <= n:\n            oh.append(n + 1)\n            break\n        else:\n            nk.pop(-1)\n            n = n - 1\n    if len(oh) == 1:\n        return oh[0]\n    else:\n        return 1\nt = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    nk = list(map(int, input().rstrip().split()))\n    r = time(nk, n)\n    ans.append(r)\nfor i in ans:\n    print(i)", "import sys\n\ndef solve():\n    return None\n\ndef main():\n    q = []\n    for line in sys.stdin.readlines():\n        q.append(line)\n    for i in range(len(q)):\n        q[i] = q[i].rstrip().split(' ')\n        q[i] = [int(x) for x in q[i]]\n    for i in range(1, len(q), 2):\n        a = q[i + 1]\n        total = 1\n        h = {}\n        for i in a:\n            if i not in h:\n                h[i] = 1\n            else:\n                h[i] += 1\n        key_l = []\n        for key in h.keys():\n            key_l.append(key)\n        key_l.sort(reverse=True)\n        total += sum(h.values())\n        for i in key_l:\n            if total > i:\n                break\n            else:\n                total -= h[i]\n        print(total)\nmain()"]