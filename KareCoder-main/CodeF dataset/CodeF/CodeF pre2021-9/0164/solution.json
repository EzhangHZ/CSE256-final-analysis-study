["for s in [*open(0)][1:]:\n    print(max(6, int(s) + 1) // 2 * 5)", "for s in [*open(0)][1:]:\n    print(max(6, int(s) + 1) // 2 * 5)", "import sys, math\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    if n <= 6:\n        print(15)\n    elif n <= 8:\n        print(20)\n    elif n <= 10:\n        print(25)\n    elif n % 2 == 0:\n        print(5 * n // 2)\n    else:\n        print(5 * (n + 1) // 2)", "for s in [*open(0)][1:]:\n    print(max(6, int(s) + 1) // 2 * 5)", "T = int(input())\nans = []\nfor test in range(T):\n    n = int(input())\n    if n < 6:\n        case = 15\n    else:\n        val1 = (n - 1) // 2\n        case = 5 + val1 * 5\n    ans.append(case)\nfor t in ans:\n    print(t)", "for s in [*open(0)][1:]:\n    print(max(6, int(s) + 1) // 2 * 5)", "def solve(n):\n    if n <= 6:\n        return 15\n    return (n + 1) // 2 * 5\ns = ''\nfor case in range(int(input())):\n    n = int(input())\n    s += str(solve(n)) + '\\n'\nprint(s)", "import sys\nI = sys.stdin\nO = sys.stdout\ninputs = [int(z) for z in I.readline().split()][0]\nfor _ in range(inputs):\n    friends = [int(z) for z in I.readline().split()][0]\n    if friends % 2 == 1:\n        friends += 1\n    O.write(str(max(friends, 6) // 2 * 5))\n    O.write('\\n')", "for s in [*open(0)][1:]:\n    print(max(6, int(s) + 1) // 2 * 5)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    print(max(6, n + 1) // 2 * 5)\n    t -= 1", "n = int(input())\nl = []\nres = []\nfor i in range(n):\n    l.append(int(input()))\nfor i in l:\n    mod = i % 6\n    div = i // 6\n    if mod == 0:\n        res.append(i // 6 * 15)\n    else:\n        reste = (div + 1) * 6 - i\n        if div >= 1:\n            if reste == 1:\n                res.append((div + 1) * 15)\n            elif reste == 2:\n                res.append((div - 1) * 15 + 25)\n            elif reste == 3:\n                res.append((div - 1) * 15 + 25)\n            elif reste == 4:\n                res.append((div - 1) * 15 + 20)\n            elif reste == 5:\n                res.append((div - 1) * 15 + 20)\n        else:\n            res.append(15)\nprint(*res, sep='\\n')", "t = int(input())\nl = []\nfor i in range(t):\n    n = int(input())\n    val = 0\n    if n < 7:\n        val = 15\n    elif n < 9:\n        val = 20\n    elif n < 11:\n        val = 25\n    elif n % 10 == 0:\n        val = n // 10 * 25\n    else:\n        r = n % 10\n        val = n // 10 * 25\n        if r == 9:\n            val = val + 25\n        elif r == 7 or r == 8:\n            val = val + 20\n        elif r == 5 or r == 6:\n            val = val + 15\n        elif r == 3 or r == 4:\n            val = val + 10\n        else:\n            val = val + 5\n    l.append(val)\nfor i in l:\n    print(i)", "for s in [*open(0)][1:]:\n    print(max(6, int(s) + 1) // 2 * 5)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    if n <= 10:\n        if n <= 6:\n            return 15\n        elif n <= 8:\n            return 20\n        else:\n            return 25\n    r = n % 10\n    if r == 0:\n        return 25 * (n // 10)\n    elif r <= 2:\n        return 30 + 25 * ((n - 10) // 10)\n    elif r <= 4:\n        return 35 + 25 * ((n - 10) // 10)\n    elif r <= 6:\n        return 15 + 25 * (n // 10)\n    elif r <= 8:\n        return 20 + 25 * (n // 10)\n    else:\n        return 25 * (n // 10 + 1)\nfor _ in range(int(input())):\n    print(solve())", "for s in [*open(0)][1:]:\n    print(max(6, int(s) + 1) // 2 * 5)", "t = int(input())\nch = ''\nfor i in range(t):\n    n = int(input())\n    if n <= 6:\n        res = 15\n    elif n == 7 or n == 8:\n        res = 20\n    elif n < 10:\n        res = 25\n    elif n % 10 == 0:\n        res = n // 10 * 25\n    elif n % 8 == 0:\n        res = n // 8 * 20\n    elif n % 6 == 0:\n        res = n // 6 * 15\n    elif n % 10 > 0:\n        mod = n % 10\n        if mod <= 2:\n            res = (n // 10 - 1) * 25 + 15 + 15\n        elif mod <= 4:\n            res = (n // 10 - 1) * 25 + 15 + 20\n        elif mod <= 6:\n            res = n // 10 * 25 + 15\n        elif mod <= 8:\n            res = n // 10 * 25 + 20\n        else:\n            res = n // 10 * 25 + 25\n    if i == t - 1:\n        ch += str(res)\n    else:\n        ch += str(res) + '\\n'\nprint(ch)", "def pizzaForces(l):\n    for el in l:\n        if el <= 6:\n            print(15)\n        else:\n            if el % 2 != 0:\n                el += 1\n            result = int(el * 2.5)\n            resmod = result % 5\n            if resmod < 3:\n                result -= resmod\n            else:\n                result += 5 - resmod\n            print(result)\nt = int(input())\nl = []\nfor i in range(t):\n    l.append(int(input()))\npizzaForces(l)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = n % 8\n    b = n // 8 * 20\n    if a == 0:\n        pass\n    elif a <= 2:\n        b += 5\n    elif a <= 4:\n        b += 10\n    elif a <= 6:\n        b += 15\n    else:\n        b += 20\n    if n <= 6:\n        b = 15\n    elif n <= 8:\n        b = 20\n    elif n <= 10:\n        b = 25\n    print(b)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n <= 6:\n        print(15)\n        continue\n    print(5 * (n + n % 2) // 2)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    if n % 2 == 1:\n        n += 1\n    n //= 2\n    if n % 5 == 0:\n        print(n * 25 // 5)\n    elif n % 5 == 1:\n        if n == 1:\n            print(15)\n        else:\n            print((n - 6) * 25 // 5 + 15 + 15)\n    elif n % 5 == 2:\n        if n == 2:\n            print(15)\n        else:\n            print((n - 7) * 25 // 5 + 15 + 20)\n    else:\n        print(n * 5)\nfor i in range(int(input())):\n    solve()", "import sys\n\ndef rall():\n    return sys.stdin.readlines()\n\ndef rl():\n    return sys.stdin.readline().strip()\n\ndef rl_types(types):\n    str_list = [x for x in sys.stdin.readline().strip().split(' ')]\n    return [types[i](str_list[i]) for i in range(len(str_list))]\n\ndef pr(something):\n    sys.stdout.write(str(something) + '\\n')\n\ndef pra(array):\n    sys.stdout.write(' '.join([str(x) for x in array]) + '\\n')\n\ndef solve(array):\n    return array\nNT = int(rl())\n(NS, NM, NL) = (6, 8, 10)\n(TS, TM, TL) = (15, 20, 25)\nfor ti in range(NT):\n    n = int(rl())\n    if n % 2 == 1:\n        n += 1\n    nl = n // NL\n    nr = n - nl * NL\n    if nr in [NS, NM]:\n        t = n // 2 * 5\n    elif nl == 0:\n        t = TS\n    else:\n        t = n // 2 * 5\n    pr(t)", "t = int(input())\nans = []\nfor i in range(t):\n    x = int(input())\n    if x < 6:\n        ans.append(15)\n    elif x >= 6 and x % 2 == 0:\n        ans.append(x * 5 // 2)\n    elif x >= 6 and x % 2 == 1:\n        ans.append((x - 1) * 5 // 2 + 5)\nprint(*ans, sep='\\n')", "for s in [*open(0)][1:]:\n    print(max(15, (int(s) + 1) // 2 * 5))", "from sys import stdin\ninput = stdin.readline\nrn = lambda : int(input())\nrns = lambda : map(int, input().split())\nrl = lambda : list(map(int, input().split()))\nrs = lambda : input().strip()\nYN = lambda x: print('YES') if x else print('NO')\nmod = 10 ** 9 + 7\nfrom math import ceil\nfor _ in range(rn()):\n    n = rn()\n    if n < 7:\n        print(15)\n    elif n < 9:\n        print(20)\n    elif n < 11:\n        print(25)\n    else:\n        ans = 2 * (n - (n & 1)) + n // 2\n        ans += 5 * (n & 1)\n        print(int(ans))", "import sys\nimport math\ninput = sys.stdin.readline\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    ans = 0\n    if n <= 6:\n        ans = 15\n    else:\n        if n % 2 != 0:\n            n += 1\n        ans = n * 5 // 2\n    print(ans)", "for s in [*open(0)][1:]:\n    print(max(15, (int(s) + 1) // 2 * 5))", "import sys\ninput = sys.stdin.readline\nR = lambda : map(int, input().split())\nI = lambda : int(input())\nS = lambda : input().rstrip('\\n')\nL = lambda : list(R())\nfor _ in range(I()):\n    n = I()\n    if n <= 6:\n        print(15)\n        continue\n    ans = n // 6 * 15\n    if n % 6:\n        if n % 6 <= 2:\n            ans = ans + 5\n        elif n % 6 <= 4:\n            ans = ans + 10\n        else:\n            ans += 15\n    print(ans)", "def cal1(n):\n    if n % 6 == 0:\n        time = n // 6 * 15\n    elif n % 8 == 0:\n        time = n // 8 * 20\n    elif n % 10 == 0:\n        time = n // 10 * 25\n    elif n % 8 == 6:\n        time = n // 8 * 20\n        time += 15\n    elif n < 6:\n        time = 15\n    elif n < 8:\n        time = 20\n    elif n < 10:\n        time = 25\n    elif n < 12:\n        time = n // 6 * 15\n        if n % 6 > 0:\n            time += 15\n    elif n < 15:\n        time = n // 8 * 20\n        if n % 8 > 0:\n            time += 15\n    else:\n        time = n // 10 * 25\n        rod = n % 10\n        if rod >= 9:\n            time += 25\n        elif rod > 6:\n            time += 20\n        elif rod > 0:\n            time += 15\n    return time\n\ndef cal(n):\n    if n <= 6:\n        return 15\n    elif n % 2 == 0:\n        return n // 2 * 5\n    else:\n        return n // 2 * 5 + 5\nn = int(input())\nd = []\nfor i in range(n):\n    x = int(input())\n    time = str(cal(x))\n    d.append(time)\nprint('\\n'.join(d))", "for s in [*open(0)][1:]:\n    print(max(6, int(s) + 1) // 2 * 5)", "import sys\ninput_file = sys.stdin\noutput_file = sys.stdout\nfor i in range(int(input_file.readline())):\n    n = int(input_file.readline())\n    if n % 2 == 1:\n        n += 1\n    output_file.write(str(max(n, 6) // 2 * 5) + '\\n')", "file = open(0)\n(t, tcs) = (int(file.readline()), list(map(int, file.read().splitlines())))\nfor tc in tcs:\n    if 0 < tc < 6:\n        print('15')\n        continue\n    if tc % 2:\n        print(int(tc // 2 * 5 + 5))\n    else:\n        print(int(tc // 2 * 5))", "for s in [*open(0)][1:]:\n    print(max(6, int(s) + 1) // 2 * 5)", "import sys\n\ndef minimumMinute(a):\n    if a < 6:\n        return 15\n    if a % 2 == 1:\n        return minimumMinute(a + 1)\n    if a % 6 == 0:\n        return int(a / 6) * 15\n    if a % 6 == 2:\n        return int((a - 2) / 6 - 1) * 15 + 20\n    if a % 6 == 4:\n        return int((a - 4) / 6 - 1) * 15 + 25\nn = int(sys.stdin.readline())\ncases = [0] * n\nfor i in range(0, n):\n    cases[i] = int(sys.stdin.readline())\nfor i in range(0, n):\n    print(minimumMinute(cases[i]))", "from sys import stdin, stdout\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    n = max(n, 6)\n    n += 1\n    print(n // 2 * 5)", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    if n <= 6:\n        sys.stdout.write('15\\n')\n    else:\n        sys.stdout.write('%d\\n' % ((n + n % 2) * 5 // 2))", "for s in [*open(0)][1:]:\n    print(max(6, int(s) + 1) // 2 * 5)", "def exec():\n    m = []\n    t = int(input())\n    for i in range(t):\n        m.append(int(input()))\n    for i in m:\n        print(main(i))\n\ndef main(x):\n    q = x // 6\n    r = x % 6\n    if q < 1:\n        return 15\n    elif r == 0:\n        return q * 15\n    elif r <= 2:\n        return 15 * q + 5\n    elif r <= 4:\n        return 15 * q + 10\n    else:\n        return 15 * (q + 1)\nexec()", "def minimumTime(x):\n    a = x // 6\n    r = x % 6\n    if x <= 6:\n        return 15\n    elif r == 0:\n        return a * 15\n    elif r != 0 and r <= 2:\n        return a * 15 + 5\n    elif r != 0 and r <= 4:\n        return a * 15 + 10\n    else:\n        return (a + 1) * 15\nn = int(input())\ntestCase = []\nfor _ in range(n):\n    e = int(input())\n    testCase.append(e)\nans = []\nfor i in range(n):\n    ans.append(minimumTime(testCase[i]))\n    print(ans[i])", "for s in [*open(0)][1:]:\n    print(max(6, int(s) + 1) // 2 * 5)", "for s in [*open(0)][1:]:\n    print(max(6, int(s) + 1) // 2 * 5)", "for res in [*open(0)][1:]:\n    print(max(15, (int(res) + 1) // 2 * 5))", "for s in [*open(0)][1:]:\n    n = int(s)\n    n = max(6, n + n % 2)\n    print(n // 2 * 5)", "w = int(input())\nl = []\nfor i in range(w):\n    k = int(input())\n    l.append(k)\nfor i in l:\n    if i <= 6:\n        print(15)\n    elif i == 7 or i == 8:\n        print(20)\n    else:\n        a = (i - 7) // 2\n        print((a + 4) * 5)", "from decimal import Decimal\ntestcases = int(input())\nlist_cases = []\nfor x in range(testcases):\n    list_cases.append(int(input()))\nfor i in list_cases:\n    if i < 6:\n        print(int(6 * Decimal(2.5)))\n        continue\n    elif i % 2:\n        print(round((i + 1) * Decimal(2.5)))\n    else:\n        print(round(i * Decimal(2.5)))", "import math\nimport sys\nimport itertools\nimport fractions\nwtf = sys.stdin.read()\nwtf = wtf.strip().split('\\n')\nt = int(wtf[0])\nfor s in wtf[1:]:\n    n = int(s)\n    if n % 2 != 0:\n        n += 1\n    if n <= 6:\n        print('15')\n    else:\n        print(int(n // 2 * 5))", "num_of_orders = int(input())\nlist_of_orders = []\nfor order in range(num_of_orders):\n    list_of_orders.append(int(input()))\nfor order in list_of_orders:\n    time = 0\n    if 0 < order <= 6:\n        time = 15\n    if 6 < order <= 8:\n        time = 20\n    if 8 < order <= 10:\n        time = 25\n    if order >= 10:\n        if order % 2 == 1:\n            order += 1\n        time = order * 5 // 2\n    print(time)", "def calculate(n):\n    if n <= 6:\n        return 15\n    elif n > 6 and n % 2 != 0:\n        n += 1\n        b = n // 2 * 5\n        return b\n    elif n > 6 and n % 2 == 0:\n        b = n // 2 * 5\n        return b\nt = int(input())\nl = []\nfor i in range(t):\n    n = int(input())\n    l.append(n)\nfor i in range(len(l)):\n    print(calculate(l[i]))", "n = int(input())\nresult = []\nfor i in range(n):\n    x = int(input())\n    if x % 2 == 1:\n        x += 1\n    time = round(5 * x // 2)\n    if time < 15:\n        time = 15\n    result.append(time)\nfor i in result:\n    print(i)", "n = int(input())\nl2 = []\nfor i in range(n):\n    l2.append(int(input()))\nfor i in l2:\n    if i % 2 != 0:\n        i = i + 1\n    if i <= 6:\n        print(15)\n    else:\n        print(5 * i // 2)", "from math import *\nfrom collections import defaultdict as dt\nfrom sys import stdin\ninp = lambda : stdin.readline().strip()\nI = lambda : int(inp())\nM = lambda : map(int, inp().split())\nL = lambda : list(M())\nmod = 1000000007\ninf = 100000000000000000000\nss = 'abcdefghijklmnopqrstuvwxyz'\n\ndef solve():\n    n = I()\n    x = n // 6\n    y = n // 8\n    z = n // 10\n    p = n % 6\n    q = n % 8\n    r = n % 10\n    if n <= 6:\n        print(15)\n    elif n % 6 == 0:\n        print(15 * (n // 6))\n    elif n % 8 == 0:\n        print(20 * (n // 8))\n    elif n % 10 == 0:\n        print(25 * (n // 10))\n    elif p == 1:\n        print(15 * (x - 1) + 20)\n    elif p == 2:\n        print(15 * (x - 1) + 20)\n    elif p == 3 or p == 4:\n        print(15 * (x - 1) + 25)\n    else:\n        print(15 * (x + 1))\ntt = 1\ntt = I()\nfor _ in range(tt):\n    solve()", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = n // 6\n    b = c = 0\n    temp = n % 6\n    while temp > 0 and a > 0:\n        if temp == 5:\n            a += 1\n            temp -= 5\n        elif temp >= 3:\n            c += 1\n            a -= 1\n            temp -= 4\n        elif temp >= 1:\n            b += 1\n            a -= 1\n            temp -= 2\n    if temp > 0:\n        a += 1\n    print(a * 15 + b * 20 + c * 25)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef main():\n    T = inp()\n    while T > 0:\n        n = inp()\n        if n <= 6:\n            print(15)\n            T -= 1\n            continue\n        ans = (n // 6 - 1) * 15\n        n = 6 + n % 6\n        if n == 6:\n            ans += 15\n        elif n <= 8:\n            ans += 20\n        elif n <= 10:\n            ans += 25\n        else:\n            ans += 30\n        print(ans)\n        T -= 1\nmain()", "import sys\ninput = sys.stdin.readline\na = int(input())\nfor _ in range(a):\n    t = int(input())\n    if t <= 6:\n        print(15)\n    else:\n        print((t + 1) // 2 * 5)", "for s in [*open(0)][1:]:\n    print(max(6, int(s) + 1) // 2 * 5)", "for s in [*open(0)][1:]:\n    print(max(6, int(s) + 1) // 2 * 5)", "for s in [*open(0)][1:]:\n    print(max(6, int(s) + 1) // 2 * 5)", "t = int(input())\nn = []\nfor i in range(t):\n    ni = int(input())\n    n.append(ni)\nfor i in n:\n    r = i % 6\n    a = i // 6\n    if i <= 6:\n        s = 15\n    elif r == 0:\n        s = a * 15\n    elif r != 0 and r <= 2:\n        s = a * 15 + 5\n    elif r != 0 and r <= 4:\n        s = a * 15 + 10\n    else:\n        s = (a + 1) * 15\n    print(s)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    if n <= 6:\n        print(15)\n    elif n % 2 == 0:\n        print(n // 2 * 5)\n    else:\n        print((n + 1) // 2 * 5)", "import sys\nimport math\nimport collections\nfrom os import path\nfrom collections import defaultdict\nmod = 10 ** 9 + 7\nsys.setrecursionlimit(10 ** 6)\nif path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\ntest = int(sys.stdin.readline().rstrip())\nwhile test > 0:\n    test -= 1\n    n = int(sys.stdin.readline().rstrip())\n    ans = 0\n    if n < 7:\n        ans = 15\n    else:\n        if n % 2 != 0:\n            n += 1\n        ans = n * 5 // 2\n    print(ans)", "import sys\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef LI1():\n    return list(map(int1, sys.stdin.readline().split()))\n\ndef LLI1(rows_number):\n    return [LI1() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline().rstrip()\ninf = 10 ** 16\nmd = 10 ** 9 + 7\n\ndef solve():\n    n = II()\n    if n <= 6:\n        return 15\n    elif n % 2 == 1:\n        return int((n + 1) // 2 * 5)\n    else:\n        return int(n // 2 * 5)\nfor _ in range(II()):\n    print(int(solve()))", "t = int(input())\ntestcases = [int(input()) for _ in range(t)]\nfor n in testcases:\n    if n <= 6:\n        print(15)\n    else:\n        n = (n + 1) // 2\n        print(n * 5)", "inputs = []\nwhile True:\n    try:\n        line = input()\n    except EOFError:\n        break\n    inputs.append(line)\nt = inputs[0]\nfor i in range(1, int(t) + 1):\n    if int(inputs[i]) <= 6:\n        print(15)\n    else:\n        print((int(inputs[i]) + 1) // 2 * 5)", "def get_time(n):\n    if n == 0:\n        return 0\n    elif 1 <= n <= 6:\n        return 15\n    total = 0\n    total += n // 6 * 15\n    n = n % 6\n    if n == 0:\n        return total\n    elif 1 <= n <= 2:\n        return total - 15 + 20\n    elif 3 <= n <= 4:\n        return total - 15 + 25\n    return total + 15\nnum_cases = int(input())\ncases = []\nfor i in range(num_cases):\n    cases.append(int(input()))\nfor n in cases:\n    print(get_time(n))", "n = int(input())\na = []\nfor p in range(n):\n    a.append(int(input()))\nfor q in range(n):\n    if a[q] <= 6:\n        print(15)\n    elif a[q] % 2 == 0:\n        print(int(a[q] // 2 * 5))\n    else:\n        print(int((a[q] + 1) // 2 * 5))", "def pizza(x):\n    if x <= 6:\n        time = 15\n    else:\n        time = x // 6 * 15\n        if x % 6 == 1 or x % 6 == 2:\n            time += 5\n        elif x % 6 == 3 or x % 6 == 4:\n            time += 10\n        elif x % 6 == 5:\n            time += 15\n    return print(int(time))\ntestnum = int(input())\nk = 0\ntestlist = []\nwhile k < testnum:\n    testlist.append(int(input()))\n    k += 1\nfor ele in testlist:\n    pizza(ele)", "import sys\ntokens = ''.join(sys.stdin.readlines()).split()[::-1]\n\ndef next():\n    return tokens.pop()\n\ndef nextInt():\n    return int(next())\n\ndef nextFloat():\n    return float(next())\n\ndef getIntArray(n):\n    return [nextInt() for _ in range(n)]\n\ndef getFloatArray(n):\n    return [nextFloat() for _ in range(n)]\n\ndef getStringArray(n):\n    return [next() for _ in range(n)]\nflush = sys.stdout.flush\ntestcase = True\n\ndef solve(testcase):\n    N = nextInt()\n    if N % 2 == 1:\n        N += 1\n    N = max(N, 6)\n    print(N * 5 // 2)\ntestcaseCount = nextInt() if testcase else 1\nfor tc in range(testcaseCount):\n    solve(tc + 1)\nassert not tokens", "import sys\ninput = sys.stdin.readline\n\ndef mp():\n    return map(int, input().split())\n\ndef lmp():\n    return list(map(int, input().split()))\n\ndef mps(A):\n    return [tuple(map(int, input().split())) for _ in range(A)]\nimport math\nimport bisect\nfrom copy import deepcopy as dc\nfrom itertools import accumulate\nfrom collections import Counter, defaultdict, deque\n\ndef ceil(U, V):\n    return (U + V - 1) // V\n\ndef modf1(N, MOD):\n    return (N - 1) % MOD + 1\ninf = int(1e+20)\nmod = int(1000000000.0 + 7)\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n <= 6:\n        print(15)\n    elif n % 2 == 0:\n        print(n * 5 // 2)\n    else:\n        n += 1\n        print(n * 5 // 2)", "import sys\ninput = iter(sys.stdin.read().splitlines()).__next__\n\ndef solve(N):\n    if N < 6:\n        return 15\n    m6 = N // 6\n    rem = N % 6\n    if rem == 0:\n        return m6 * 15\n    elif rem == 1 or rem == 2:\n        return (m6 - 1) * 15 + 20\n    elif rem == 3 or rem == 4:\n        return (m6 - 1) * 15 + 25\n    elif rem == 5:\n        return (m6 + 1) * 15\nTC = int(input())\nfor tc in range(TC):\n    N = int(input())\n    res = solve(N)\n    print(res)", "import sys\nfrom math import ceil, floor, modf, sqrt\nfrom collections import deque\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_array():\n    return list(get_ints())\n\ndef input():\n    return sys.stdin.readline().strip()\n\ndef gcd(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return x\n\ndef findans(n):\n    if n <= 6:\n        return 15\n    times = n // 6\n    firstcost = (times - 1) * 15\n    rem = 6 + n % 6\n    seccost = 0\n    if rem == 6 or rem == 12 or rem == 11:\n        seccost = int(ceil(rem / 6)) * 15\n    elif rem == 7 or rem == 8:\n        seccost = 20\n    else:\n        seccost = 25\n    return firstcost + seccost\nT = int(input())\nwhile T > 0:\n    n = int(input())\n    print(findans(n))\n    T -= 1", "import math as m\nimport sys\nfor _ in range(int(input())):\n    n = int(sys.stdin.readline())\n    if n <= 6:\n        print(15)\n        continue\n    x = n // 6\n    y = n % 6\n    if y == 1 or y == 2:\n        ans = str((x - 1) * 15 + 20)\n    elif y == 4 or y == 3:\n        ans = str((x - 1) * 15 + 25)\n    elif y == 5:\n        ans = str((x + 1) * 15)\n    else:\n        ans = str(x * 15)\n    print(ans)", "t = int(input())\nresult = []\nfor i in range(t):\n    r = 0\n    n = int(input().strip())\n    if n <= 6:\n        r = 15\n    elif n % 2 == 0:\n        r = n * 5 // 2\n    else:\n        r = (n + 1) * 5 // 2\n    result.append(r)\nfor i in result:\n    print(i)", "from sys import stdin\nfrom collections import defaultdict\nfrom math import ceil\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    if n <= 6:\n        print(15)\n    else:\n        if n % 2:\n            n += 1\n        print(n // 2 * 5)", "import os\nimport math\nimport sys\nfrom collections import Counter\nparse_input = lambda : sys.stdin.readline().rstrip('\\r\\n')\n\ndef func(n):\n    if n <= 6:\n        return 15\n    if 6 < n <= 8:\n        return 20\n    if 8 < n <= 10:\n        return 25\n    if n % 6 == 0:\n        return int(n // 6 * 15)\n    elif n % 6 == 5:\n        return int((n // 6 + 1) * 15)\n    elif n % 6 == 4 or n % 6 == 3:\n        return int((n // 6 - 1) * 15 + 25)\n    elif n % 6 == 2 or n % 6 == 1:\n        return int((n // 6 - 1) * 15 + 20)\n\ndef main():\n    n_cases = int(parse_input())\n    for i in range(n_cases):\n        n = int(parse_input())\n        print(func(n))\nmain()", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    if n <= 6:\n        print(15)\n    elif n % 2 == 0:\n        print(int(n // 2 * 5))\n    else:\n        print(int((n + 1) // 2 * 5))", "t = int(input())\nm = []\nfor i in range(t):\n    n = int(input())\n    if n <= 6:\n        m.append(15)\n    elif n % 2 == 1:\n        n += 1\n        m.append(n // 2 * 5)\n    else:\n        m.append(n // 2 * 5)\nfor num in m:\n    print(num)", "t = int(input())\ntestcases = [int(input()) for _ in range(t)]\nfor n in testcases:\n    if n <= 6:\n        print(15)\n        continue\n    n = (n + 1) // 2\n    print(5 * n)", "import math\nnum = int(input())\nip = []\nfor _ in range(num):\n    temp = int(input())\n    ip.append(temp)\n\ndef time(n):\n    num6 = math.ceil(n / 6)\n    rem6 = n % 6\n    num8 = 0\n    num10 = 0\n    if n > 6:\n        if rem6 in [1, 2]:\n            num6 = num6 - 2\n            num8 = 1\n        if rem6 in [3, 4]:\n            num6 = num6 - 2\n            num10 = 1\n    output = num6 * 15 + num8 * 20 + num10 * 25\n    return output\nfor _ in ip:\n    print(time(_))", "for s in [*open(0)][1:]:\n    print(max(6, int(s) + 1) // 2 * 5)", "def entrada():\n    test_case = int(input())\n    friends = list()\n    for i in range(test_case):\n        friends.append(int(input()))\n    runcode(friends)\n\ndef runcode(lisst):\n    for _ in lisst:\n        print(int(pizzaForce(_)))\n\ndef pizzaForce(num):\n    if num < 6:\n        return 15\n    elif num % 2 == 0:\n        return int(num / 2) * 5\n    else:\n        return int((num + 1) / 2) * 5\nentrada()", "def main(N):\n    if N <= 6:\n        return 15\n    elif N <= 8:\n        return 20\n    elif N <= 10:\n        return 25\n    else:\n        (small, medium, large) = (0, 0, 0)\n        large = N // 10\n        if 0 < N % 10 <= 2:\n            large -= 1\n            small += 2\n        elif 2 < N % 10 <= 4:\n            large -= 1\n            small += 1\n            medium += 1\n        elif 4 < N % 10 <= 6:\n            small += 1\n        elif 6 < N % 10 <= 8:\n            medium += 1\n        elif 8 < N % 10 <= 9:\n            large += 1\n        return small * 15 + medium * 20 + large * 25\nt = int(input())\nans = []\nfor i in range(t):\n    N = int(input())\n    ans.append(main(N))\nfor i in ans:\n    print(i)", "t = int(input())\nl = []\nfor i in range(t):\n    n = int(input())\n    y = n % 6\n    x = int(n / 6)\n    if n <= 6:\n        c = 15\n        l.append(c)\n    else:\n        if y == 1 or y == 2:\n            c = x * 15 + 5\n            l.append(c)\n        if y == 3 or y == 4:\n            c = x * 15 + 10\n            l.append(c)\n        if y == 5:\n            c = (x + 1) * 15\n            l.append(c)\n        if y == 0:\n            c = x * 15\n            l.append(c)\nfor i in l:\n    print(i)", "import sys\ninput_file = sys.stdin\noutput_file = sys.stdout\nfor i in range(int(input_file.readline())):\n    n = int(input_file.readline())\n    if n % 2 == 1:\n        n += 1\n    output_file.write(str(int(max(n, 6) // 2 * 5)) + '\\n')", "import sys\ninput_file = sys.stdin\noutput_file = sys.stdout\nfor i in range(int(input_file.readline())):\n    n = int(input_file.readline())\n    if n % 2 == 1:\n        n += 1\n    output_file.write(str(max(n, 6) // 2 * 5) + '\\n')", "n = int(input())\nl = []\nfor i in range(n):\n    t = int(input())\n    l.insert(i, t)\nfor i in l:\n    m = int(i / 2)\n    k = i * 2\n    t = m + k\n    if t <= 15:\n        print(15)\n    elif t % 5 == 0:\n        print(t)\n    else:\n        x = 5 - t % 5\n        t = t + x\n        print(t)", "import sys\n\ndef minimumMinute(a):\n    if a < 6:\n        return 15\n    if a % 2 == 1:\n        return minimumMinute(a + 1)\n    if a % 6 == 0:\n        return int(a / 6) * 15\n    if a % 6 == 2:\n        return int((a - 2) / 6 - 1) * 15 + 20\n    if a % 6 == 4:\n        return int((a - 4) / 6 - 1) * 15 + 25\nn = int(sys.stdin.readline())\ncases = [0] * n\nfor i in range(0, n):\n    cases[i] = int(sys.stdin.readline())\nfor i in range(0, n):\n    print(minimumMinute(cases[i]))", "t = int(input())\nout = []\ntime = 0\nfor i in range(t):\n    n = int(input())\n    x = n % 10\n    diff = x + 10\n    x = int(n / 10) - 1\n    if n % 6 == 0:\n        out.append(15 * int(n / 6))\n        continue\n    elif n % 8 == 0:\n        out.append(20 * int(n / 8))\n        continue\n    elif n % 10 == 0:\n        out.append(25 * int(n / 10))\n        continue\n    elif n <= 6:\n        out.append(15)\n        continue\n    elif n > 6 and n <= 8:\n        out.append(20)\n        continue\n    elif n > 8 and n <= 10:\n        out.append(25)\n        continue\n    elif diff <= 12:\n        time = 30\n    elif diff <= 14:\n        time = 35\n    elif diff <= 16:\n        time = 40\n    elif diff <= 18:\n        time = 45\n    elif diff <= 20:\n        time = 50\n    time = time + x * 25\n    out.append(time)\nfor i in range(t):\n    print(int(out[i]))", "count = int(input())\nlist_1 = [6, 8, 10]\nlist_2 = [15, 20, 25]\nfor _ in range(count):\n    a = int(input())\n    if a % 10 == 0:\n        a = a // 10 * 25\n        print(a)\n    elif a < 15:\n        if a <= 6:\n            print(15)\n        elif 6 < a <= 8:\n            print(20)\n        elif 8 < a < 11:\n            print(25)\n        elif 8 < a < 13:\n            print(30)\n        else:\n            print(35)\n    else:\n        e = a // 10\n        e_1 = a - e * 10 + 10\n        e -= 1\n        if 10 < e_1 < 13:\n            print(25 * e + 30)\n        if 12 < e_1 < 15:\n            print(25 * e + 35)\n        if 14 < e_1 < 17:\n            print(25 * e + 40)\n        if 16 < e_1 < 19:\n            print(25 * e + 45)\n        if 18 < e_1:\n            print(25 * e + 50)", "import math\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        print(case())\n\ndef case():\n    n = int(input())\n    if n <= 6:\n        return 15\n    if n % 6 == 0 or n % 8 == 0 or n % 10 == 0:\n        return n * 2 + n // 2\n    if n % 6 <= 2:\n        return int(n // 6 * 15 - 15 + 20)\n    elif n % 6 <= 4:\n        return int(n // 6 * 15 - 15 + 25)\n    else:\n        return int(n // 6 * 15 + 15)\nmain()", "T = int(input())\nfor t in range(T):\n    n = int(input())\n    if n % 2 == 1:\n        n += 1\n    if n <= 6:\n        print(15)\n        continue\n    print(n // 2 * 5)", "t = int(input())\nfor i in range(t):\n    friend = int(input())\n    print(max(15, (friend + 1) // 2 * 5))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = y = 0\n    x = int(n / 6)\n    y = n % 6\n    if n <= 6:\n        print('15')\n    elif y == 0:\n        s = x * 15\n        print(s)\n    elif y <= 2:\n        s = x * 15 + 5\n        print(s)\n    elif y <= 4:\n        s = x * 15 + 10\n        print(s)\n    else:\n        x = x + 1\n        s = x * 15\n        print(s)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    x = y = 0\n    x = int(n / 6)\n    y = n % 6\n    if n <= 6:\n        print('15')\n    elif y == 0:\n        s = x * 15\n        print(s)\n    elif y <= 2:\n        s = x * 15 + 5\n        print(s)\n    elif y <= 4:\n        s = x * 15 + 10\n        print(s)\n    else:\n        x = x + 1\n        s = x * 15\n        print(s)", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    if n <= 6:\n        print('15')\n        continue\n    d = (n + 1) // 2 * 5\n    print(d)", "T = int(input())\nfor i in range(T):\n    j = int(input())\n    if j <= 6:\n        print(15)\n    else:\n        print(int((j + j % 2) // 2 * 5))", "t = int(input())\nfor i in range(t):\n    a = int(input())\n    if a % 2 != 0:\n        a += 1\n    r = a // 2 * 5\n    if r <= 15:\n        print(15)\n    else:\n        print(r)", "t = int(input())\nwhile t:\n    n = int(input())\n    print(max(6, n + 1) // 2 * 5)\n    t -= 1"]