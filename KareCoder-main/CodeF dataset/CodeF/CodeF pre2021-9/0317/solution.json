["import sys\n\ndef minp():\n    return sys.stdin.readline().strip()\n\ndef mint():\n    return int(minp())\n\ndef mints():\n    return map(int, minp().split())\n\ndef solve():\n    n = mints()\n    p = 0\n    r = 0\n    for i in mints():\n        if i < p:\n            r += p - i\n        p = i\n    print(r)\nfor i in range(mint()):\n    solve()", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((x - y for (x, y) in zip(a, a[1:]) if x > y)))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = a[-1]\n    ans = 0\n    for i in a[::-1]:\n        if i < m:\n            m = i\n        if i > m:\n            ans += i - m\n            m = i\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    m = 0\n    for i in range(1, n):\n        if a[i - 1] <= a[i]:\n            m = max(m, a[i])\n        else:\n            ans += a[i - 1] - a[i]\n    print(ans)", "t = int(input())\n\ndef doWork(a):\n    out = 0\n    for i in range(1, len(a)):\n        if a[i - 1] > a[i]:\n            out += a[i - 1] - a[i]\n    return out\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    print(doWork(a))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = 0\n    x = [max(0, l[i] - l[i + 1]) for i in range(n - 1)]\n    print(sum(x))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(sum((max(a[i - 1] - a[i], 0) for i in range(1, n))))", "for _ in range(int(input())):\n    input()\n    lst = list(map(int, input().split()))\n    (l, r) = (0, 0)\n    for i in lst:\n        l += max(0, r - i)\n        r = i\n    print(l)", "for _ in range(int(input())):\n    i = int(input())\n    l = list(map(int, input().split()))\n    print(sum((max(l[x - 1] - l[x], 0) for x in range(1, i))))", "import math\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 1):\n        ans += max(0, a[i] - a[i + 1])\n    return ans\nt = int(input())\nwhile t > 0:\n    t -= 1\n    print(solve())", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 1):\n        ans += max(a[i] - a[i + 1], 0)\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    ans = list(map(int, input().split()))\n    cnt = 0\n    for i in range(0, n - 1):\n        cnt += max(0, ans[i] - ans[i + 1])\n    print(cnt)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    for i in range(n - 1):\n        if a[i] > a[i + 1]:\n            s += a[i] - a[i + 1]\n    print(s)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 1):\n        ans += max(0, a[i] - a[i + 1])\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().rstrip().split()))\n    count = 0\n    for e in range(n - 1):\n        count += max(0, arr[e] - arr[e + 1])\n    print(count)", "for pratyush in range(int(input())):\n    (n, s) = (int(input()), 0)\n    a = list(map(int, input().split()))\n    for i in range(n - 1):\n        s += max(a[i] - a[i + 1], 0)\n    print(s)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 1):\n        ans += max(arr[i] - arr[i + 1], 0)\n    print(ans)", "for _ in range(int(input())):\n    input()\n    a = list(map(int, input().split()))\n    previous = a[-1]\n    it = 0\n    for el in reversed(a[:-1]):\n        if el > previous:\n            it += el - previous\n        previous = el\n    print(it)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 1, 0, -1):\n        if a[i - 1] > a[i]:\n            ans += a[i - 1] - a[i]\n    print(ans)", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 1, 0, -1):\n        if a[i - 1] > a[i]:\n            ans += a[i - 1] - a[i]\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    for i in range(n - 1):\n        if a[i] > a[i + 1]:\n            s += a[i] - a[i + 1]\n    print(s)", "list_ans = []\nfor _ in range(int(input())):\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 1):\n        if list1[i] > list1[i + 1]:\n            ans += list1[i] - list1[i + 1]\n    list_ans.append(ans)\nprint(*list_ans, sep='\\n')", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()),)\n    print(sum((max(0, x - y) for (x, y) in zip(a, a[1:]))))", "for _ in range(int(input())):\n    n = int(input())\n    val = list(map(int, input().strip().split()))\n    p = 0\n    ans = 0\n    for i in val:\n        if i < p:\n            ans += p - i\n        p = i\n    print(ans, end='\\n')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    count = 0\n    p = 0\n    for i in l:\n        if p > i:\n            count += p - i\n        p = i\n    print(count)", "import sys\n\ndef answer(n, a):\n    cnt = 0\n    for i in range(1, n):\n        if a[i] - a[i - 1] < 0:\n            cnt += a[i - 1] - a[i]\n    return cnt\n\ndef main():\n    t = int(input())\n    while t:\n        n = int(input())\n        a = [int(i) for i in sys.stdin.readline().split()]\n        print(answer(n, a))\n        t -= 1\n    return\nmain()", "t = int(input())\nfor x in range(t):\n    l = int(input())\n    sup = list(map(int, input().split()))\n    op = flag = 0\n    for i in range(1, l):\n        op += max(0, sup[i - 1] - sup[i])\n    print(op)", "t = int(input())\nfor k in range(0, t):\n    n = int(input())\n    a = list(map(int, input().strip().split()))[:n]\n    if n == 1:\n        print(0)\n        continue\n    max1 = -1\n    diff = 0\n    for i in range(1, n):\n        if a[i] - a[i - 1] < 0:\n            diff += a[i - 1] - a[i]\n    print(diff)", "test = int(input())\nfor t in range(test):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 1):\n        ans += max(0, a[i] - a[i + 1])\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    res = 0\n    n = int(input())\n    arr = list(map(int, input().split()))\n    if arr == sorted(arr):\n        print(0)\n        continue\n    else:\n        for i in range(1, n):\n            if arr[i - 1] > arr[i]:\n                res += arr[i - 1] - arr[i]\n    print(res)", "import sys\nsys.setrecursionlimit(10 ** 5)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\nfor _ in range(II()):\n    n = II()\n    aa = LI()\n    pa = aa[-1]\n    ans = 0\n    for a in aa[-2::-1]:\n        if a > pa:\n            ans += a - pa\n        pa = a\n    print(ans)", "def main():\n    n = int(input())\n    for i in range(n):\n        solve()\n\ndef solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    count = 0\n    index = 0\n    prev = arr[0]\n    while index < n:\n        if arr[index] < prev:\n            count += prev - arr[index]\n        prev = arr[index]\n        index += 1\n    print(count)\nmain()", "for case in range(int(input())):\n    n = int(input())\n    heights = [i for i in map(int, input().split())]\n    diffs = [heights[i + 1] - heights[i] for i in range(n - 1)]\n    print(sum((j for j in diffs if j < 0)) * -1)", "res = ''\nfor _ in range(int(input())):\n    input()\n    a = [int(x) for x in input().split()]\n    a = a[::-1]\n    r = 0\n    for (r1, r2) in zip(a, a[1:]):\n        if r2 > r1:\n            r += r2 - r1\n    res += f'{r}\\n'\nprint(res)", "def waterSlide(a, size):\n    steps = 0\n    for i in range(size - 1):\n        if a[i] > a[i + 1]:\n            steps += a[i] - a[i + 1]\n    return steps\ntests = int(input())\nfor i in range(tests):\n    size = int(input())\n    slides = list(map(int, input().split()))\n    print(waterSlide(slides, size))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(sum((a[i - 1] - a[i] for i in range(1, n) if a[i - 1] > a[i])))", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(len(a) - 1):\n        ans += max(a[i] - a[i + 1], 0)\n    print(ans)", "T = int(input())\nfor case in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(1, n):\n        if a[i] < a[i - 1]:\n            ans += a[i - 1] - a[i]\n    print(ans)", "from math import *\nfrom collections import *\nfrom functools import *\nfrom bisect import *\nfrom itertools import *\nfrom heapq import *\nfrom statistics import *\ninf = float('inf')\nninf = -float('inf')\nip = input\nalphal = 'abcdefghijklmnopqrstuvwxyz'\nalphau = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\ndef ipl():\n    return list(map(int, input().split()))\n\ndef ipn():\n    return int(input())\n\ndef ipf():\n    return float(input())\n\ndef solve():\n    n = ipn()\n    a = ipl()\n    r = 0\n    for i in range(n - 1):\n        r += max(0, a[i] - a[i + 1])\n    print(r)\nfor _ in range(ipn()):\n    solve()", "t = int(input())\nfor k in range(0, t):\n    n = int(input())\n    a = list(map(int, input().strip().split()))[:n]\n    if n == 1:\n        print(0)\n        continue\n    diff = 0\n    for i in range(1, n):\n        if a[i] - a[i - 1] < 0:\n            diff += a[i - 1] - a[i]\n    print(diff)", "t = int(input())\nfor k in range(0, t):\n    n = int(input())\n    a = list(map(int, input().strip().split()))[:n]\n    diff = 0\n    for i in range(1, n):\n        if a[i] - a[i - 1] < 0:\n            diff += a[i - 1] - a[i]\n    print(diff)", "def solve():\n    n = int(input())\n    arr = [int(i) for i in input().split()]\n    ok = 0\n    ans = 0\n    for i in range(0, len(arr) - 1):\n        if arr[i] > arr[i + 1]:\n            ans += arr[i] - arr[i + 1]\n    print(ans)\ntest = int(input())\nwhile test:\n    solve()\n    test -= 1", "for s in [*open(0)][2::2]:\n    a = (*map(int, s.split()[::-1]),)\n    print(sum((max(0, y - x) for (x, y) in zip(a, a[1:]))))", "def solve(x):\n    s = 0\n    for j in range(1, len(x)):\n        if x[j] < x[j - 1]:\n            s += x[j - 1] - x[j]\n    return s\nfor i in range(int(input())):\n    x = int(input())\n    l = list(map(int, input().split()))\n    ans = solve(l)\n    print(ans)", "i = int(input())\nfor _ in range(i):\n    k = input()\n    inputlist = [int(k) for k in input().split(' ')]\n    inputlist.reverse()\n    totad = 0\n    added = 0\n    last = inputlist[0]\n    for inputi in inputlist:\n        if inputi > last:\n            totad += inputi - last\n        last = inputi\n    print(totad)", "def main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        s = list(map(int, input().split()))\n        if n == 1:\n            print(0)\n            continue\n        for i in range(n - 1):\n            if s[i + 1] < s[i]:\n                start = i + 1\n                s.append(s[i])\n                break\n        else:\n            print(0)\n            continue\n        mm = s[start - 1]\n        cnt = 0\n        for i in range(start, n):\n            if s[i] > mm:\n                mm = s[i]\n                s[n] = mm\n            if s[i + 1] > s[i]:\n                if s[i + 1] > mm:\n                    cnt += mm - s[i]\n                else:\n                    cnt += s[i + 1] - s[i]\n        print(cnt)\nmain()", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    (*a,) = map(int, input().split())\n    a = a[::-1]\n    c = 0\n    for i in range(n - 1):\n        if a[i + 1] > a[i]:\n            c += a[i + 1] - a[i]\n    print(c)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    ls = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 1):\n        ans += max(0, ls[i] - ls[i + 1])\n    print(ans)\nT = int(input())\nfor _ in range(T):\n    solve()", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    n = int(input())\n    ls = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 1):\n        ans += max(0, ls[i] - ls[i + 1])\n    print(ans)\nT = int(input())\nfor _ in range(T):\n    solve()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    min1 = l[0]\n    max1 = 0\n    c = 0\n    flag = 0\n    for i in range(n - 1, 0, -1):\n        if l[i] < l[i - 1]:\n            c += l[i - 1] - l[i]\n    print(c)", "for s in [*open(0)][2::2]:\n    r = p = 0\n    for x in map(int, s.split()):\n        r += max(0, p - x)\n        p = x\n    print(r)", "def checker(n, lst):\n    result = 0\n    for i in range(n - 1):\n        if lst[i] > lst[i + 1]:\n            result += lst[i] - lst[i + 1]\n    return result\nfor _ in range(int(input())):\n    m = int(input())\n    a = [int(i) for i in input().split()]\n    print(checker(m, a))", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(-1, -n, -1):\n        if a[i] < a[i - 1]:\n            ans += a[i - 1] - a[i]\n    print(ans)\nfor _ in range(int(input())):\n    solve()", "def solve(n, arr):\n    ans = 0\n    for i in range(n - 1):\n        ans += max(arr[i] - arr[i + 1], 0)\n    return ans\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    print(solve(n, arr))", "def solve():\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    res = 0\n    for i in range(1, n):\n        res += max(arr[i - 1] - arr[i], 0)\n    print(res)\nt = int(input())\nfor _ in range(t):\n    solve()", "kase = int(input().strip())\nwhile kase > 0:\n    kase = kase - 1\n    n = map(int, input().strip().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    for (i, aj) in enumerate(a[1:]):\n        if a[i] > aj:\n            ans = ans + a[i] - aj\n    print(ans)", "kase = int(input().strip())\nwhile kase > 0:\n    kase = kase - 1\n    n = int(input().strip())\n    a = [int(ai) for ai in input().split()]\n    ans = 0\n    for (i, aj) in enumerate(a[1:]):\n        if a[i] > aj:\n            ans = ans + a[i] - aj\n    print(ans)", "t = int(input())\nfor test in range(0, t):\n    n = int(input())\n    heights = list(map(int, input().split(' ')))\n    result = 0\n    stack = [heights[0]]\n    for height in heights:\n        if height > stack[-1]:\n            result += stack[0] - stack[-1]\n            stack.clear()\n        stack.append(height)\n    result += stack[0] - stack[-1]\n    print(result)", "for _ in range(int(input())):\n    input()\n    r = 0\n    m = 0\n    for i in map(int, input().split()):\n        r += max(0, m - i)\n        m = i\n    print(r)", "for _ in range(int(input())):\n    n = int(input())\n    r = 0\n    m = 0\n    for i in map(int, input().split()):\n        r += max(0, m - i)\n        m = i\n    print(r)", "def sol(l):\n    ans = 0\n    for i in range(1, len(l)):\n        ans += max(l[i - 1] - l[i], 0)\n    print(ans)\nk = int(input())\nfor i in range(k):\n    input()\n    lis = list(map(int, input().split(' ')))\n    sol(lis)", "def sol(l):\n    ans = 0\n    for i in range(1, len(l)):\n        ans += max(l[i - 1] - l[i], 0)\n    print(ans)\nk = int(input())\nfor i in range(k):\n    input()\n    lis = list(map(int, input().split(' ')))\n    sol(lis)", "def sol(l):\n    ans = 0\n    for i in range(1, len(l)):\n        ans += max(l[i - 1] - l[i], 0)\n    print(ans)\nk = int(input())\nfor i in range(k):\n    input()\n    lis = list(map(int, input().split(' ')))\n    sol(lis)", "def waterSlide(a, size):\n    steps = 0\n    for i in range(size - 1):\n        if a[i] > a[i + 1]:\n            steps += a[i] - a[i + 1]\n    return steps\ntests = int(input())\nfor i in range(tests):\n    size = int(input())\n    slides = list(map(int, input().split()))\n    print(waterSlide(slides, size))", "from collections import Counter\nfor _ in range(int(input())):\n    input()\n    array = [int(i) for i in input().split()]\n    ans = 0\n    prev = array[-1]\n    for i in array[::-1]:\n        if i > prev:\n            ans += i - prev\n        prev = i\n    print(ans)", "for s in [*open(0)][2::2]:\n    r = p = 0\n    for x in map(int, s.split()):\n        r += max(0, p - x)\n        p = x\n    print(r)", "for s in [*open(0)][2::2]:\n    r = p = 0\n    for x in map(int, s.split()):\n        r += max(0, p - x)\n        p = x\n    print(r)", "for i in ' ' * int(input()):\n    input()\n    (q, w) = (0, 0)\n    for i in map(int, input().split()):\n        q += max(0, w - i)\n        w = i\n    print(q)", "for _ in range(int(input())):\n    n = int(input())\n    op = 0\n    w = 0\n    for i in map(int, input().split()):\n        op += max(0, w - i)\n        w = i\n    print(op)", "def min_operation(n, l):\n    s = 0\n    l.reverse()\n    for i in range(n - 1):\n        if l[i] < l[i + 1]:\n            s += l[i + 1] - l[i]\n    return s\nfor t in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(min_operation(n, l))", "def waterslide(arr):\n    ans = 0\n    for i in range(0, len(arr) - 1):\n        ans += max(arr[i] - arr[i + 1], 0)\n    return ans\nt = int(input())\nfor u in range(t):\n    y = input()\n    print(waterslide(list(map(int, input().strip().split()))))", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    x = 0\n    for i in range(n - 1):\n        x += max(0, l[i] - l[i + 1])\n    print(x)", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in range(n - 1):\n        ans += max(l[i] - l[i + 1], 0)\n    print(ans)", "import sys\nIn = sys.stdin.readline\nt = int(In())\nfor _ in range(t):\n    n = int(In())\n    out = 0\n    l = list(map(int, In().split()))\n    for i in range(n - 1):\n        out += max(0, l[i] - l[i + 1])\n    print(out)", "int_inp = lambda : int(input())\nstrng = lambda : input().strip()\nstrl = lambda : list(input().strip())\nmul = lambda : map(int, input().strip().split())\nmulf = lambda : map(float, input().strip().split())\nseq = lambda : list(map(int, input().strip().split()))\nimport math\nfrom collections import Counter, defaultdict\nfor _ in range(int_inp()):\n    k = int_inp()\n    m = seq()\n    pre = -1\n    j = 0\n    l = 0\n    for i in m:\n        if i < pre:\n            l += pre2 - i\n        j += 1\n        pre = i\n        pre2 = max(pre, i)\n    print(l)", "for _ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))[:n]\n    k = 0\n    s = 0\n    for i in range(n):\n        s = s + max(0, k - ar[i])\n        k = ar[i]\n    print(s)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    li = list(map(int, input().strip().split()))\n    if sorted(li) == li:\n        print(0)\n    else:\n        l = []\n        for j in range(1, len(li)):\n            if li[j] < li[j - 1]:\n                l.append(abs(li[j] - li[j - 1]))\n        print(sum(l))", "def waterSlide(*args):\n    args = list(args)\n    no = 0\n    i = len(args) - 1\n    while i > 0:\n        if args[i] < args[i - 1]:\n            no = no + args[i - 1] - args[i]\n            i = i - 1\n        else:\n            i = i - 1\n    return no\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    ht = list(map(int, input().split()))\n    print(waterSlide(*ht))", "def solution(arr):\n    ans = 0\n    for i in range(1, len(arr)):\n        if arr[i - 1] > arr[i]:\n            ans = ans + arr[i - 1] - arr[i]\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    print(solution(arr))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = a[0]\n    c = 0\n    for i in range(n):\n        if a[i] > m:\n            m = a[i]\n        else:\n            c = c + (m - a[i])\n            m = a[i]\n    print(c)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = 0\n    g = a[0]\n    for i in range(1, n):\n        if a[i - 1] > a[i]:\n            c += a[i - 1] - a[i]\n    print(c)", "for _ in range(int(input())):\n    z = input()\n    ans = 0\n    a = [int(i) for i in input().split()]\n    for i in range(len(a) - 1):\n        if a[i] > a[i + 1]:\n            ans += abs(a[i] - a[i + 1])\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    li = list(map(int, input().strip().split()))\n    if sorted(li) == li:\n        print(0)\n    else:\n        l = []\n        for j in range(1, len(li)):\n            if li[j] < li[j - 1]:\n                l.append(abs(li[j] - li[j - 1]))\n        print(sum(l))", "for _ in range(int(input())):\n    n = int(input())\n    num = list(map(int, input().split()))\n    pre = num[0]\n    out = 0\n    for i in range(1, n):\n        if num[i] < pre:\n            out += pre - num[i]\n        pre = num[i]\n    print(out)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n\n    def solve(n, l):\n        if n == 1:\n            return 0\n        ans = 0\n        m = 0\n        for i in range(n):\n            if l[i] >= m:\n                m = l[i]\n            else:\n                ans += max(0, l[i - 1] - l[i])\n        return ans\n    print(solve(n, l))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    res = 0\n    last = 0\n    for i in range(n):\n        if a[i] < last:\n            res += -a[i] + last\n        last = a[i]\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    l = [int(x) for x in input().split()]\n    maxi = l[0]\n    ans = 0\n    for i in range(1, len(l)):\n        if l[i] >= maxi:\n            maxi = l[i]\n            continue\n        else:\n            ans += maxi - l[i]\n            maxi = l[i]\n    print(ans)", "def getNumber(n, arr):\n    count = 0\n    i = 1\n    while i < n:\n        if arr[i] < arr[i - 1]:\n            count = count + (arr[i - 1] - arr[i])\n        i += 1\n    return count\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(getNumber(n, a))", "testCases = int(input())\nheights = []\nfor i in range(testCases):\n    input()\n    heights.append(list(map(int, input().split(' '))))\nfor x in heights:\n    ans = 0\n    for i in range(len(x) - 1):\n        ans += max(0, x[i] - x[i + 1])\n    print(ans)", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((max(0, int(x) - int(y)) for (x, y) in zip(a, a[1:]))))", "for s in [*open(0)][2::2]:\n    a = s.split()\n    print(sum((max(0, int(x) - int(y)) for (x, y) in zip(a, a[1:]))))", "import sys\nfrom decimal import Decimal\nimport math\nfrom itertools import combinations, product\nimport bisect\nfrom collections import Counter, deque, defaultdict\nMOD = 10 ** 6 + 7\nINF = 10 ** 9\nPI = 3.141592653589793\n\ndef read_str():\n    return sys.stdin.readline().strip()\n\ndef read_int():\n    return int(sys.stdin.readline().strip())\n\ndef read_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef read_str_list():\n    return list(sys.stdin.readline().strip().split())\n\ndef read_int_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef lcm(a: int, b: int) -> int:\n    return a * b // math.gcd(a, b)\n\ndef Main():\n    for _ in range(read_int()):\n        n = read_int()\n        a = read_int_list()\n        ans = []\n        for i in range(1, n):\n            if a[i - 1] > a[i]:\n                ans.append(a[i - 1] - a[i])\n        print(sum(ans))\nMain()", "for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l1 = []\n    for i in range(1, n):\n        l1.append(l[i] - l[i - 1])\n    a = 0\n    for p in l1:\n        if p < 0:\n            a += -p\n    print(a)", "for s in [*open(0)][2::2]:\n    r = p = 0\n    for x in map(int, s.split()):\n        r += max(0, p - x)\n        p = x\n    print(r)", "t = int(input())\nwhile t:\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(1, n):\n        ans += max(a[i - 1] - a[i], 0)\n    print(ans)\n    t -= 1", "t = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    for (j, k) in enumerate(a[:-1]):\n        if k > a[j + 1]:\n            s += k - a[j + 1]\n    ans.append(s)\nfor i in ans:\n    print(i)", "t = int(input())\nfor test in range(0, t):\n    n = int(input())\n    heights = list(map(int, input().split(' ')))\n    heights = [heights[0]] + heights + [heights[-1]]\n    peak = None\n    prev_height = heights[0]\n    changes = 0\n    for index in range(1, n + 1):\n        cur_height = heights[index]\n        if cur_height > prev_height and peak is not None:\n            changes += peak - prev_height\n            peak = None\n        elif cur_height < prev_height and peak is None:\n            peak = prev_height\n        prev_height = cur_height\n    if peak is not None:\n        changes += peak - prev_height\n    print(changes)", "t = int(input())\nfor test in range(0, t):\n    n = int(input())\n    heights = list(map(int, input().split(' ')))\n    print(sum((max(0, heights[i] - heights[i + 1]) for i in range(0, n - 1))))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    stack = arr[0]\n    maxx = -10\n    ans = 0\n    for i in range(1, n):\n        if arr[i] < stack:\n            if stack > maxx:\n                maxx = stack\n            stack = arr[i]\n        elif arr[i] >= stack:\n            if maxx != -10:\n                ans += abs(maxx - stack)\n            stack = arr[i]\n            maxx = -10\n    if maxx != -10:\n        ans += abs(maxx - stack)\n    print(ans)"]