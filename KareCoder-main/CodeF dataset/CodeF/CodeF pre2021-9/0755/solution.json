["from heapq import *\nimport sys\nF = 9 ** 99\np = lambda : map(int, sys.stdin.readline().split())\na = abs\n(N, M) = p()\n(A, B, C, D) = p()\ne = []\ng = [set() for _ in range(M + 2)]\nfor i in range(M):\n    (x, y) = p()\n    g[0].add((i + 2, min(a(x - A), a(y - B))))\n    g[i + 2].add((1, a(x - C) + a(y - D)))\n    e.append((i + 2, x, y))\nfor k in [1, 2]:\n    e.sort(key=lambda x: x[k])\n    for ((b, G, H), (i, x, y)) in zip(e, e[1:]):\n        c = x - G if k < 2 else y - H\n        g[i].add((b, c))\n        g[b].add((i, c))\nd = [F] * (M + 2)\nq = [(0, 0)]\nd[0] = 0\nwhile q:\n    (c, v) = heappop(q)\n    if d[v] < c:\n        continue\n    for (t, e) in g[v]:\n        if d[v] + e < d[t]:\n            d[t] = d[v] + e\n            heappush(q, (d[t], t))\nprint(min(d[1], a(D - B) + a(C - A)))"]