["for s in [*open(0)][2::2]:\n    print(len(set(s.split())))", "for i in [*open(0)][2::2]:\n    print(len({*i.split()}))", "for i in [*open(0)][2::2]:\n    print(len(set([*map(int, i.split())])))", "for i in [*open(0)][2::2]:\n    print(len({*i.split()}))", "for i in [*open(0)][2::2]:\n    print(len({*i.split()}))", "ans = []\nfor _ in range(int(input())):\n    input()\n    ans.append(str(len(set(input().split()))))\nprint('\\n'.join(ans))", "fptr = open(0)\nfor _ in range(int(next(fptr))):\n    n = int(next(fptr))\n    print(len(set(map(int, next(fptr).split()))))", "import sys\ninput = sys.stdin.readline\noutput = sys.stdout.write\n\ndef main():\n    tests = int(input().rstrip())\n    for i in range(tests):\n        input()\n        nums = set(map(int, input().rstrip().split()))\n        ans = str(len(nums))\n        output(ans)\n        output('\\n')\nmain()", "fptr = open(0)\nfor _ in range(int(next(fptr))):\n    n = int(next(fptr))\n    a = set(map(int, next(fptr).split()))\n    print(len(a))", "for i in [*open(0)][2::2]:\n    print(len({*i.split()}))", "for s in [*open(0)][2::2]:\n    print(len(set(list(map(int, s.split())))))", "for i in [*open(0)][2::2]:\n    print(len({*i.split()}))", "for s in [*open(0)][2::2]:\n    print(len(set(s.split())))", "for s in [*open(0)][2::2]:\n    print(len(set(list(map(int, s.split())))))", "for s in [*open(0)][2::2]:\n    print(len(set(s.split())))", "import sys, math, itertools\nwtf = sys.stdin.read()\nwtf = wtf.strip().split('\\n')\nfor t in [wtf[i:i + 2] for i in range(1, len(wtf), 2)]:\n    n = int(t[0])\n    A = set(map(int, t[1].split()))\n    print(len(A))", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n = int(sys.stdin.readline())\n    st = set(map(int, sys.stdin.readline().split()))\n    print(len(st))", "def func(n):\n    for _ in range(n):\n        int(input())\n        m = list(map(int, input().split()))\n        k.append(str(len(set(m))))\n    print('\\n'.join(k))\nk = []\nfunc(int(input()))", "t = int(input())\nres = []\nfor i in range(t):\n    n = int(input())\n    a = set(input().split(' '))\n    res.append(len(a))\nfor i in res:\n    print(i)", "for s in [*open(0)][2::2]:\n    print(len(set(map(int, s.split()))))", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\ntest = inp()\nfor k in range(test):\n    n = inp()\n    arr = inlt()\n    temp = set(arr)\n    print(len(temp))", "for s in [*open(0)][2::2]:\n    l = list(map(int, s.split()))\n    l = len(set(l))\n    print(l)", "my_value = []\nfor i in range(int(input())):\n    num = int(input())\n    lis = set(map(int, input().split()))\n    l = len(lis)\n    my_value.append(l if num >= l else num)\nfor i in my_value:\n    print(i)", "s = ''\nfor i in range(int(input())):\n    input()\n    s = s + str(len({i for i in input().split()})) + '\\n'\nprint(s)", "def solve():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    return len(set(a))\nt = int(input())\nans = []\nwhile t:\n    ans.append(str(solve()))\n    t -= 1\nprint('\\n'.join(ans))", "input = __import__('sys').stdin.readline\nprint = __import__('sys').stdout.write\nfor _ in range(int(input())):\n    n = int(input())\n    l = set(input().split())\n    print(str(len(l)) + '\\n')", "import sys\nT = int(sys.stdin.readline())\nfor i in range(T):\n    N = int(sys.stdin.readline())\n    nums = list(map(int, sys.stdin.readline().split()))\n    print(len(set(nums)))", "for i in [*open(0)][2::2]:\n    print(len(set([*map(int, i.split())])))", "t = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    a = input().split()\n    a = set(a)\n    ans.append(len(a))\nfor i in ans:\n    print(i)", "m = int(input())\nl = []\nfor i in range(m):\n    t = int(input())\n    a = input().split()\n    l.append(len(set(a)))\nfor i in l:\n    print(i)", "res = ''\nfor _ in range(int(input())):\n    n = int(input())\n    arr = set(map(int, input().split()))\n    res += '%d\\n' % len(arr)\nprint(res)", "t = int(input())\nanswer = []\nwhile t != 0:\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    l = list(set(a))\n    answer.append(len(l))\n    t = t - 1\nprint('\\n'.join(map(str, answer)))", "import sys\nimport heapq\ninput = sys.stdin.readline\nfrom collections import Counter, defaultdict\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef main():\n    length = inp()\n    array = inlt()\n    print(len(set(array)))\nt = inp()\nfor _ in range(t):\n    main()", "n = int(input())\nans = []\nfor i in range(n):\n    m = int(input())\n    mimd = [int(j) for j in input().split()]\n    mimd = set(mimd)\n    mimd = list(mimd)\n    ans.append(len(mimd))\nfor i in ans:\n    print(i)", "t = int(input())\nA = []\nfor i in range(t):\n    n = int(input())\n    a = [int(p) for p in input().split()]\n    A.append(a)\nfor i in range(t):\n    arr = A[i]\n    print(len(set(arr)))", "import sys\n\ndef main():\n    t = int(sys.stdin.readline())\n    count = {}\n    for i in range(t):\n        sys.stdin.readline()\n        ans = set(map(int, sys.stdin.readline().split()))\n        sys.stdout.write(f'{len(ans)}\\n')\nmain()", "import sys\nt = int(sys.stdin.readline().rstrip())\nout = []\nwhile t > 0:\n    n = int(sys.stdin.readline().rstrip())\n    arr = list(map(int, sys.stdin.readline().rstrip().split(' ')))\n    var = len(set(arr))\n    out.append(var)\n    t = t - 1\nfor var2 in out:\n    print(var2)", "import sys\nt = int(sys.stdin.readline().strip())\nfor i in range(0, t):\n    len1 = int(sys.stdin.readline().strip())\n    array = list(map(int, sys.stdin.readline().strip().split()))\n    print(len(set(array)))", "n = int(input())\nsol = []\nfor i in range(n):\n    x = input()\n    nums = [int(x) for x in input().split()]\n    nums = set(nums)\n    sol.append(len(nums))\nfor i in sol:\n    print(i)", "t = int(input())\nanswers = []\nfor i in range(t):\n    n = int(input())\n    a = set(map(int, input().split(' ')))\n    answers.append(len(a))\nfor answer in answers:\n    print(answer)", "from sys import stdin, stdout\n\ndef main():\n    t = int(stdin.readline())\n    for tc in range(0, t):\n        n = int(stdin.readline())\n        a = list(map(int, stdin.readline().rstrip().split()))\n        s = set()\n        for x in a:\n            s.add(x)\n        print(len(s))\nmain()", "t = int(input())\nk = []\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k.append(len(set(a)))\nfor i in k:\n    print(i)", "import sys\nfor t in range(int(sys.stdin.readline())):\n    sys.stdin.readline()\n    a = set()\n    res = 0\n    for e in sys.stdin.readline().split():\n        if e not in a:\n            a.add(e)\n    sys.stdout.write('{}\\n'.format(len(a)))", "from sys import stdin\na = int(stdin.readline())\nfor k in range(0, a):\n    b = int(stdin.readline())\n    c = stdin.readline().split()\n    d = set(c)\n    e = len(d)\n    print(e)", "a = int(input())\nfor i in range(a):\n    list1 = []\n    b = input()\n    list1 = input().split()\n    list1 = list(set(list1))\n    print(len(list1))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list()\n    l = input().split()\n    print(len(set(l)))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input().split()\n    print(len(set(sorted(a))))", "for i in range(int(input())):\n    n = int(input())\n    print(len(set(input().split())))", "t = int(input())\nwhile t:\n    n = int(input())\n    l = input().split()\n    l = set(l)\n    m = len(l)\n    print(m)\n    t -= 1", "for i in range(int(input())):\n    n = int(input())\n    print(len(set(list(input().split()))))", "for x in range(int(input())):\n    input()\n    print(len(set(input().split())))", "for _ in range(int(input())):\n    input()\n    print(len(set(input().split())))", "for _ in range(int(input())):\n    input()\n    print(len(set(input().split())))", "n = int(input())\nfor i in range(n):\n    input()\n    print(len(set(input().split())))", "import sys\nfrom math import *\nfrom collections import defaultdict\nfrom queue import deque\nfrom heapq import heappush, heappop\nlines = [line.strip() for line in sys.stdin.readlines()]\nt = int(lines[0])\nfor tt in range(t):\n    n = int(lines[1 + tt * 2])\n    xs = list(map(int, lines[2 + tt * 2].split()))\n    print(len(set(xs)))", "def examA():\n    T = I()\n    ans = []\n    for _ in range(T):\n        x = I()\n        ans.append([1, x - 1])\n    for v in ans:\n        print(' '.join(map(str, v)))\n    return\n\ndef examB():\n    T = I()\n    ans = []\n    for _ in range(T):\n        N = I()\n        A = LI()\n        A = set(A)\n        cur = len(A)\n        ans.append(cur)\n    for v in ans:\n        print(v)\n    return\n\ndef examC():\n    T = I()\n    ans = []\n    for _ in range(T):\n        cur = 0\n        ans.append(cur)\n    for v in ans:\n        print(v)\n    return\n\ndef examD():\n    ans = 0\n    print(ans)\n    return\n\ndef examE():\n    ans = 0\n    print(ans)\n    return\n\ndef examF():\n    ans = 0\n    print(ans)\n    return\nimport sys, bisect, itertools, heapq, math, random\nfrom copy import deepcopy\nfrom heapq import heappop, heappush, heapify\nfrom collections import Counter, defaultdict, deque\n\ndef I():\n    return int(sys.stdin.readline())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LSI():\n    return list(map(str, sys.stdin.readline().split()))\n\ndef LS():\n    return sys.stdin.readline().split()\n\ndef SI():\n    return sys.stdin.readline().strip()\nglobal mod, mod2, inf, alphabet, _ep\nmod = 10 ** 9 + 7\nmod2 = 998244353\ninf = 10 ** 18\n_ep = 10 ** (-12)\nalphabet = [chr(ord('a') + i) for i in range(26)]\nsys.setrecursionlimit(10 ** 6)\nexamB()", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        N = int(input())\n        A = [int(x) for x in input().split()]\n        print(len(list(set(A))))\nmain()", "def calc(a):\n    return len(set(a))\nN = int(input())\ncases = []\nfor _ in range(N):\n    _ = input()\n    cases.append(list(map(int, input().split())))\nfor c in cases:\n    print(calc(c))", "import sys\nI = sys.stdin.readline\nfor _ in range(int(I())):\n    n = int(I())\n    arr = list(map(int, I().split()))\n    arr.sort()\n    a = set()\n    for i in arr:\n        a.add(i)\n    print(len(a))", "t = int(input())\nak = []\nfor i in range(t):\n    n = int(input())\n    a = input()\n    b = list(map(int, a.split()))\n    x = set(b)\n    ak.append(len(x))\nfor k in ak:\n    print(k)", "trials = int(input())\nans = []\nfor i in range(trials):\n    n = int(input())\n    A = input()\n    A = [int(i) for i in A.split()]\n    ans.append(len(list(set(A))))\nfor i in ans:\n    print(i)", "t = int(input())\nout = []\nfor i in range(0, t):\n    n = int(input())\n    lis = list(map(int, input().split(' ')))\n    lis2 = set(lis)\n    lis2 = list(lis2)\n    out.append(len(lis2))\nfor k in out:\n    print(k)", "def run_arr(arr, num):\n    s = set(arr)\n    print(min(len(s), num))\n\ndef run():\n    n = int(input())\n    arrs = []\n    nums = []\n    for _ in range(n):\n        nums.append(int(input()))\n        arr = list(map(int, input().split()))\n        arrs.append(arr)\n    for i in range(n):\n        run_arr(arrs[i], nums[i])\nrun()", "import sys\nfrom collections import Counter\n\ndef main():\n    for _ in range(int(sys.stdin.readline())):\n        n = int(sys.stdin.readline())\n        l = [int(y) for y in sys.stdin.readline().split()]\n        d = Counter(l)\n        print(len(d))\nmain()", "t = int(input())\nans = []\nfor i in range(t):\n    n = int(input())\n    s = set()\n    ls = list(map(int, input().split()))\n    for j in range(len(ls)):\n        s.add(ls[j])\n    ans.append(len(s))\nfor i in range(t):\n    print(ans[i])", "final = list()\nt = int(input())\nfor j in range(t):\n    n = int(input())\n    count = 0\n    di = dict()\n    data = input()\n    for i in data.split():\n        di[i] = di.get(i, 0) + 1\n    lst = sorted(di.keys())\n    l = len(lst)\n    final.append(l)\nfor k in final:\n    print(k)", "import math, string, itertools, fractions, heapq, collections, re, array, bisect, sys, copy, functools\nsys.setrecursionlimit(10 ** 7)\ninf = 10 ** 20\neps = 1.0 / 10 ** 10\nmod = 10 ** 9 + 7\nmod2 = 998244353\ndd = [(-1, 0), (0, 1), (1, 0), (0, -1)]\nddn = [(-1, 0), (-1, 1), (0, 1), (1, 1), (1, 0), (1, -1), (0, -1), (-1, -1)]\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI():\n    return [list(map(int, l.split())) for l in sys.stdin.readlines()]\n\ndef LI_():\n    return [int(x) - 1 for x in sys.stdin.readline().split()]\n\ndef LF():\n    return [float(x) for x in sys.stdin.readline().split()]\n\ndef LS():\n    return sys.stdin.readline().split()\n\ndef I():\n    return int(sys.stdin.readline())\n\ndef F():\n    return float(sys.stdin.readline())\n\ndef S():\n    return input()\n\ndef pf(s):\n    return print(s, flush=True)\n\ndef pe(s):\n    return print(str(s), file=sys.stderr)\n\ndef JA(a, sep):\n    return sep.join(map(str, a))\n\ndef JAA(a, s, t):\n    return s.join((t.join(map(str, b)) for b in a))\n\ndef main():\n    t = I()\n    rr = []\n    for _ in range(t):\n        n = I()\n        a = LI()\n        rr.append(len(set(a)))\n    return JA(rr, '\\n')\nprint(main())", "def main(a):\n    return len(set(a))\nt = int(input())\ncases = []\nfor i in range(t):\n    n = int(input())\n    cases.append(list(map(int, input().replace(',', ' ').split())))\nfor case in cases:\n    print(main(case))", "n = int(input())\ncount = []\nfor i in range(0, n):\n    n1 = int(input())\n    l = []\n    l = list(map(int, input().split(' ')[:n1]))\n    s = set(l)\n    count.append(len(s))\n    n1 = 0\nfor i in range(0, len(count)):\n    print(count[i])", "t = int(input())\nans = ''\nfor i in range(t):\n    n = int(input())\n    p = sorted([int(j) for j in input().split()])\n    k = 0\n    for j in range(n - 1):\n        if p[j] == p[j + 1]:\n            k += 1\n        else:\n            pass\n    ans += str(n - k) + '\\n'\nprint(ans)", "for _ in range(int(input())):\n    n = int(input())\n    print(len(set(input().split())))", "for _ in range(int(input())):\n    input()\n    print(len(set(input().split())))", "s = int(input())\nfor i in range(s):\n    b = int(input())\n    print(len(set(input().split())))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(len(set(input().split())))", "n = int(input())\nb = []\nfor i in range(n):\n    x = int(input())\n    y = list(map(int, input().split()))\n    z = set(y)\n    b.append(len(z))\nfor i in b:\n    print(i)", "for _ in range(int(input())):\n    no = int(input())\n    print(len(set(input().split())))", "t = int(input())\nfor _ in range(0, t):\n    n = input()\n    a = set(input().split())\n    print(len(a))", "for i in range(int(input())):\n    a = int(input())\n    b = input().split()\n    b = set(b)\n    print(len(b))", "for _ in range(int(input())):\n    int(input())\n    print(len(set(input().split())))", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    val = input().rsplit()\n    arr = set(val)\n    print(len(arr))\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    seq = set(map(int, input().split(' ')))\n    print(len(seq))", "for i in range(int(input())):\n    n = input()\n    li = list(map(int, input().split()))\n    print(len(set(li)))", "a = input()\nfor i in range(int(a)):\n    x = int(input())\n    l = input().split()\n    print(len(set(l)))", "loopcount = int(input())\nfor loop in range(loopcount):\n    a = input()\n    x = input()\n    x = x.split(' ')\n    x = list(map(int, x))\n    c = set()\n    for i in x:\n        c.add(i)\n    print(len(c))", "test = int(input())\nfor x in range(test):\n    n = int(input())\n    l = list(map(int, input().split()))\n    print(len(set(l)))", "for j in range(int(input())):\n    n = int(input())\n    T = set(input().split())\n    print(len(T))", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))[:n]\n    print(len(set(arr)))", "for i in range(int(input())):\n    n = int(input())\n    l = set(map(int, input().split()))\n    print(len(l))", "for _ in range(int(input())):\n    n = int(input())\n    print(len(set(map(int, input().split()))))", "total = int(input())\nfor i in range(total):\n    n = int(input())\n    input_list = input().split()\n    counter = 1\n    input_list.sort()\n    for j in range(n - 1):\n        if input_list[j] != input_list[j + 1]:\n            counter += 1\n    print(counter)", "t = int(input())\nwhile t > 0:\n    input()\n    values = input().rsplit(' ')\n    numberset = set(values)\n    print(len(numberset))\n    t -= 1", "for i in range(int(input())):\n    n = int(input())\n    arr = set(map(int, input().split()))\n    print(len(arr))", "for i in range(int(input())):\n    input()\n    print(len(set(input().split())))", "t = int(input())\nfor x in range(t):\n    length = int(input())\n    arr = [int(j) for j in input().split()]\n    arr = set(arr)\n    print(len(arr))", "t = int(input())\nfor _ in range(t):\n    input()\n    nums = map(int, input().split())\n    print(len(set(nums)))", "def main():\n    for _ in range(int(input())):\n        n = int(input())\n        setA = set(map(int, input().split()))\n        print(len(setA))\nmain()"]