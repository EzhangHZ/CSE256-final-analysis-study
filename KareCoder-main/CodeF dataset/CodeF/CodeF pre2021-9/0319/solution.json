["import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        print(k % n if k % n != 0 else n)\n    else:\n        x = ((k - 1) // (n // 2) + k) % n\n        print(x % n if x % n != 0 else n)", "import sys\npin = sys.stdin.readline\nfor T in range(int(pin())):\n    (N, K) = map(int, pin().split())\n    if N % 2 == 0:\n        print((K - 1) % N + 1)\n    else:\n        M = N // 2\n        L = (K - 1) // M + (K - 1)\n        print(L % N + 1)", "from sys import stdin\ninput = stdin.readline\n\ndef main():\n    test = int(input())\n    for _ in range(test):\n        (n, k) = map(int, input().split())\n        k = k - 1\n        half = n // 2\n        ans = (k + n % 2 * (k // half)) % n + 1\n        print(ans)\nmain()", "from math import sqrt\nimport operator\nimport sys\ninf = sys.stdin\ninput = inf.readline\n\ndef read_one_int():\n    return int(input().rstrip('\\n'))\n\ndef read_list_of_ints():\n    res = [int(val) for val in input().rstrip('\\n').split(' ')]\n    return res\n\ndef read_str():\n    return input().rstrip()\n\ndef check_seq(n, k):\n    k -= 1\n    res = (k + n % 2 * (k // (n // 2))) % n + 1\n    return res\n\ndef main():\n    cnt = read_one_int()\n    for _ in range(cnt):\n        (n, k) = read_list_of_ints()\n        res = check_seq(n, k)\n        print(res)\nmain()", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, k) = map(int, input().split())\n    ans = k - 1\n    if n % 2:\n        ans += (k - 1) // (n // 2)\n    ans %= n\n    return ans + 1\nfor _ in range(int(input())):\n    print(solve())", "import sys\ninput = sys.stdin.readline\n\ndef solution(n, k):\n    if n % 2 == 0:\n        print((k - 1) % n + 1)\n    else:\n        jumps = (k - 1) // ((n - 1) // 2)\n        print((k - 1 + jumps) % n + 1)\nT = int(input())\nfor t in range(T):\n    (n, k) = map(int, input().split())\n    solution(n, k)", "import math as m\ni = int(input())\ninp = []\nfor a in range(0, i):\n    inp.append([int(x) for x in input().split()])\nfor [n, k] in inp:\n    k = k - 1\n    if n % 2 == 0:\n        print(k % n + 1)\n    else:\n        s = (n - 1) // 2\n        skips = k // s\n        print((k + skips) % n + 1)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    for i in range(int(input())):\n        (n, k) = map(int, input().split())\n        if n % 2 == 0:\n            print(1 + (k - 1) % n)\n        else:\n            p = n // 2\n            print(1 + (k - 1 + (k - 1) // p) % n)\nsolve()", "import sys\nfrom sys import stdin, stdout\nimport math\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef code(n, k):\n    if n % 2 == 0:\n        a = k % n\n        if a == 0:\n            return n\n        else:\n            return a\n    else:\n        s = n // 2\n        sn = (k - 1) // s\n        a = (k + sn) % n\n        if a == 0:\n            return n\n        else:\n            return a\nt = int(input())\nfor i in range(t):\n    (n, k) = get_ints()\n    ans = code(n, k)\n    print(ans)", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        (n, k) = map(int, input().split())\n        if n % 2 == 0:\n            ans = k % n\n        else:\n            m = n // 2\n            p = (k - 1) // m\n            q = (k - 1) % m\n            place_a_p = (n - m * p) % n\n            place_b_p = place_a_p + 1\n            ans = (place_b_p + q) % n\n        if ans == 0:\n            ans = n\n        print(ans)\nmain()", "result = []\ncases = int(input())\nfor i in range(cases):\n    (n, k) = map(int, input().split(' '))\n    if n % 2 == 0:\n        result.append((k - 1) % n + 1)\n    else:\n        skip = (k - 1) // (n // 2)\n        result.append((k + skip - 1) % n + 1)\nfor _ in result:\n    print(_)", "def read_input(filename: str=None) -> None:\n    from sys import stdin\n    stdin = open(filename) if filename else stdin\n    cases = int(stdin.readline())\n    while cases:\n        cases = cases - 1\n        (size, target) = tuple(map(int, stdin.readline().split()))\n        if not size % 2:\n            print((target - 1) % size + 1)\n            continue\n        (position, distance) = ((target - 1) % size + 1, size // 2)\n        collisions = 0 if distance > target - 1 else (target - 1) // distance\n        print((position - 1 + collisions) % size + 1)\n\ndef main():\n    read_input()\nmain()", "import sys\n\ndef int_inp():\n    return int(sys.stdin.readline())\nt = int_inp()\nfor _ in range(t):\n    (n, k) = map(int, sys.stdin.readline().strip().split())\n    if n % 2 == 0:\n        x = k % n\n    else:\n        r = (k - 1) // (n // 2)\n        x = (k + r) % n\n    if x == 0:\n        x += n\n    print(x)", "from sys import stdin\n\ndef main():\n    cases = int(stdin.readline().strip())\n    while cases:\n        (n, k) = map(int, stdin.readline().split())\n        if n % 2 != 0:\n            k = k % (n * (n // 2))\n            if k % (n * (n // 2)) == 0:\n                k = n * (n // 2)\n            if k <= n // 2:\n                print(k)\n            else:\n                aux = k - (n // 2 + 1)\n                if k % n == 0:\n                    p = n\n                else:\n                    p = k % n\n                res = (p + aux // (n // 2) + 1) % n\n                if res != 0:\n                    print(res)\n                else:\n                    print(n)\n        elif k % n != 0:\n            print(k % n)\n        else:\n            print(n)\n        cases -= 1\nmain()", "import sys\nimport bisect\n\ndef solve():\n\n    def mymod(k, n):\n        k %= n\n        return n if k == 0 else k\n    (n, k) = list(map(int, sys.stdin.readline().rstrip().split(' ')))\n    if n % 2 == 0:\n        res = mymod(k, n)\n        print(res)\n        return\n    rotation = n // 2 * n\n    rot_pos = mymod(k, rotation)\n    group = (rot_pos - 1) // n\n    start = group * 2 + 1\n    group_pos = mymod(rot_pos, n)\n    delta = group_pos > n // 2 - group\n    delta += group_pos > n // 2 * 2 - group\n    print(mymod(start + group_pos - 1 + delta, n))\nt = int(sys.stdin.readline().rstrip())\nfor _ in range(t):\n    solve()", "trails = int(input())\nanswer_list = []\nfor x in range(trails):\n    numbers = input().split(' ')\n    n = int(numbers[0])\n    k = int(numbers[1])\n    if n % 2 == 0:\n        answer = (k - 1) % n + 1\n        answer_list.append(answer)\n    else:\n        diff = k - 1\n        flored = diff // ((n - 1) / 2)\n        answer = int((diff + flored) % n + 1)\n        answer_list.append(answer)\nfor g in answer_list:\n    print(g)", "for s in [*open(0)][1:]:\n    (n, t) = [*map(int, s.split())]\n    t -= 1\n    print((t + (n & 1) * t // (n // 2)) % n + 1)", "import sys\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\nf_inf = float('inf')\nMOD = 10 ** 9 + 7\n\ndef solve():\n    (n, k) = map(int, input().split())\n    k -= 1\n    res = (k + n % 2 * (k // (n // 2))) % n + 1\n    print(res)\nt = int(input())\nfor _ in range(t):\n    solve()", "for s in [*open(0)][1:]:\n    (n, k) = map(int, s.split())\n    k -= 1\n    print((k + n % 2 * k // (n // 2)) % n + 1)", "for s in [*open(0)][1:]:\n    (n, k) = map(int, s.split())\n    k -= 1\n    print((k + n % 2 * k // (n // 2)) % n + 1)", "t = int(input())\nres = []\nfor _ in range(t):\n    (n, k) = [int(x) for x in input().split()]\n    if n % 2 == 0:\n        a = k % n\n        if a == 0:\n            a = n\n        res.append(a)\n    else:\n        if k == 1:\n            b = 0\n        else:\n            b = (k - 1) // ((n - 1) / 2)\n        a = (k + b) % n\n        if a == 0:\n            a = n\n        res.append(int(a))\nfor i in res:\n    print(i)", "import sys\nfrom math import gcd\n\ndef debug(*args):\n    print(*args, file=sys.stderr)\n\ndef read_str():\n    return sys.stdin.readline().strip()\n\ndef read_int():\n    return int(sys.stdin.readline().strip())\n\ndef read_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef read_str_split():\n    return list(sys.stdin.readline().strip())\n\ndef read_int_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef Main():\n    t = read_int()\n    for _ in range(t):\n        (n, k) = read_ints()\n        if n % 2 == 0:\n            if k % n == 0:\n                print(n)\n            else:\n                print(k % n)\n        else:\n            x = n // 2 + 1\n            dist = x - 1\n            y = dist * n // gcd(dist, n)\n            z = k % y\n            ans = (z + (z - 1) // dist) % n\n            if ans == 0:\n                print(n)\n            else:\n                print(ans)\nMain()", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        print(k % n) if k % n != 0 else print(n)\n    else:\n        cycle = (n - 1) // 2\n        if k <= cycle:\n            print(k)\n            continue\n        k -= 1\n        k = k % (n * (n - 1) // 2)\n        k += k // cycle\n        print(k % n + 1)", "for s in [*open(0)][1:]:\n    (n, k) = map(int, s.split())\n    k -= 1\n    print((k + n % 2 * k // (n // 2)) % n + 1)", "n = int(input())\nans = []\nfor i in range(n):\n    (a, b) = (int(num) for num in input().split())\n    if a % 2 == 0:\n        if b % a == 0:\n            ans.append(a)\n            continue\n        ans.append(b % a)\n    else:\n        if (a + 1) // 2 - 1 == 0:\n            ans.append(1)\n            continue\n        time = b // ((a + 1) // 2 - 1)\n        if b % ((a + 1) // 2 - 1) == 0:\n            time -= 1\n        b += time\n        if b % a == 0:\n            ans.append(a)\n            continue\n        else:\n            ans.append(b % a)\nfor i in ans:\n    print(i)", "import sys\nfor _ in range(int(sys.stdin.readline())):\n    (n, k) = map(int, sys.stdin.readline().strip().split())\n    if n % 2 == 0:\n        print(k % n if k % n else n)\n        continue\n    period = n // 2\n    conflict = (k - 1) // period\n    print((k + conflict) % n if (k + conflict) % n else n)", "answers = []\n\ndef solve(n, k):\n    if n % 2 == 0:\n        if k <= n:\n            answers.append(k)\n        elif k % n == 0:\n            answers.append(n)\n        else:\n            answers.append(k % n)\n        return\n    else:\n        first = n // 2 + 1\n        repeat = n // 2\n        if k < first:\n            answers.append(k)\n            return\n        if (k - first) % repeat == 0:\n            if k % n == 0:\n                answers.append(2)\n                return\n            else:\n                k = k % n\n                req = n - k + 1\n                if req + 1 <= n:\n                    answers.append(req + 1)\n                else:\n                    answers.append(1)\n        else:\n            rem = (k - first) % repeat\n            pos = k - rem\n            temp = None\n            if pos % n == 0:\n                temp = 2\n            else:\n                pos = pos % n\n                req = n - pos + 1\n                if req + 1 <= n:\n                    temp = req + 1\n                else:\n                    temp = 1\n            if temp + rem <= n:\n                answers.append(temp + rem)\n            else:\n                temp = (temp + rem) % n\n                if temp == 0:\n                    answers.append(n)\n                else:\n                    answers.append(temp)\nT = int(input())\nwhile T:\n    (n, k) = [int(x) for x in input().split()]\n    solve(n, k)\n    T -= 1\nfor ans in answers:\n    print(ans)", "test_cases = int(input())\nres = []\nfor test in range(test_cases):\n    st = input()\n    ls = st.split()\n    n = int(ls[0])\n    k = int(ls[1])\n    if n % 2 == 0:\n        if k % n == 0:\n            res.append(n)\n        else:\n            res.append(k % n)\n    else:\n        k1 = k - 1\n        div = n // 2\n        quo = k1 // div\n        rem = k1 % div\n        po1 = quo * div + 1\n        v1 = 0\n        if po1 % n == 0:\n            v1 = 1\n        else:\n            v1 = n - po1 % n + 1\n        if (v1 + rem + 1) % n == 0:\n            res.append(n)\n        else:\n            res.append((v1 + rem + 1) % n)\nfor value in res:\n    print(value)", "def solve(n, k):\n    if n % 2 == 0:\n        x = k % n\n        if x == 0:\n            return n\n        else:\n            return x\n    y = n // 2\n    if k % y == 0:\n        rm = (k - 1) // y\n    else:\n        rm = k // y\n    x = (k % n + rm) % n\n    if x == 0:\n        pos = n\n    else:\n        pos = x\n    return pos\nt = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split(' '))\n    print(solve(n, k))", "import sys\nimport math\nimport bisect\nfast_reader = sys.stdin.readline\nfast_writer = sys.stdout.write\n\ndef input():\n    return fast_reader().strip()\n\ndef print(*argv):\n    fast_writer(' '.join((str(i) for i in argv)))\n    fast_writer('\\n')\nfor T in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        mod = k % n\n        if mod == 0:\n            print(n)\n        else:\n            print(mod)\n    elif k <= n // 2:\n        print(k)\n    else:\n        X = n // 2\n        shift = k // X\n        if k // X == k / X:\n            shift -= 1\n        k += shift\n        if k % n != 0:\n            print(k % n)\n        else:\n            print(n)", "from sys import stdin as stin, stdout as stout, setrecursionlimit as srl\nfrom collections import defaultdict as dd, Counter, deque as dq\nimport math\n\ndef get_ints():\n    return map(int, stin.readline().split())\n\ndef get_list():\n    return list(map(int, stin.readline().split()))\n\ndef get_int():\n    return int(stin.readline())\n\ndef get_str():\n    return stin.readline()\nfor t in range(get_int()):\n    (n, k) = get_ints()\n    if n % 2 == 0:\n        k = k - 1\n        ans = k % n\n        print(ans + 1)\n    else:\n        a = n\n        b = 1\n        if k <= n // 2 + 1:\n            if k <= n // 2:\n                print(k)\n            else:\n                print(k + 1)\n        else:\n            s = n // 2\n            c = k - (s + 1)\n            r = c % s\n            q = c // s\n            if r == 0:\n                print((k % n + q) % n + 1)\n            else:\n                print((k % n + q) % n + 1)", "import os, sys, time, collections, math, pprint, itertools as it, operator as op, bisect as bs, functools as fn\n(maxx, localsys, mod) = (float('inf'), 0, int(1000000000.0 + 7))\nnCr = lambda n, r: reduce(mul, range(n - r + 1, n + 1), 1) // factorial(r)\nceil = lambda n, x: (n + x - 1) // x\n(osi, oso) = ('/home/priyanshu/Documents/cp/input.txt', '/home/priyanshu/Documents/cp/output.txt')\nif os.path.exists(osi):\n    sys.stdin = open(osi, 'r')\n    sys.stdout = open(oso, 'w')\ninput = sys.stdin.readline\n\ndef maps():\n    return map(int, input().split())\nfor __ in range(int(input())):\n    (n, k) = maps()\n    k -= 1\n    collisions = k // (n // 2)\n    print((k + n % 2 * collisions) % n + 1)", "def catPosition(spots, k):\n    if spots % 2 == 0:\n        return k % spots + 1\n    else:\n        return (k // (spots // 2) + k) % spots + 1\ntests = int(input())\nfor test in range(tests):\n    temp = input().split()\n    print(catPosition(int(temp[0]), int(temp[1]) - 1))", "T = int(input())\nwhile T:\n    T -= 1\n    (n, k) = map(int, input().split())\n    k -= 1\n    if n & 1:\n        t = n >> 1\n        rnd = k // t\n        pos = rnd * (t + 1) % n\n        pos = (pos + k - t * rnd) % n + 1\n    else:\n        pos = k % n + 1\n    print(pos)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    k -= 1\n    if n % 2 == 0:\n        ans = k\n    else:\n        ans = k + k // ((n - 1) // 2)\n    print(1 + ans % n)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2 == 1:\n        k = k + (k - 1) // (n // 2)\n    print(k % n if k % n != 0 else n)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2:\n        d = n // 2\n        print((k + (k - 1) // d - 1) % n + 1)\n    else:\n        print((k - 1) % n + 1)", "I = lambda : map(int, input().split())\nfor _ in [0] * int(input()):\n    (n, h) = I()\n    mid = (n + 1) // 2\n    if n % 2 == 1 and h >= mid:\n        h = h + (h - mid) // (mid - 1) + 1\n    b = (h - 1) % n + 1\n    print(b)", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    k -= 1\n    a = n // 2\n    g = k // a\n    e = k + g\n    print([k % n + 1, e % n + 1][n % 2])", "for t in range(int(input())):\n    (n, k) = map(int, input().split())\n    k -= 1\n    print((k + n % 2 * (k // (n // 2))) % n + 1)", "t = int(input())\nwhile t:\n    (n, k) = [int(i) for i in input().split()]\n    if n % 2 == 0:\n        if k % n == 0:\n            print(n)\n        else:\n            print(k % n)\n    else:\n        a = 0\n        if k % n != 0:\n            a = n + 1 - k % n\n        else:\n            a = 1\n        clash = n // 2\n        if (k - 1) % clash == 0:\n            if a == n:\n                print(1)\n            else:\n                print(a + 1)\n        else:\n            diff = (k - 1) % clash\n            temp = 0\n            if a == n:\n                temp = 1\n            else:\n                temp = a + 1\n            x = temp + 2 * diff\n            if x > n:\n                if x % n == 0:\n                    x = n\n                else:\n                    x = x % n\n            print(x)\n    t -= 1", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().split())\n    k -= 1\n    if n % 2 == 0:\n        print(k % n + 1)\n    else:\n        s = k // (n // 2)\n        print((k + s) % n + 1)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().split())\n    k -= 1\n    if n % 2 == 0:\n        print(k % n + 1)\n    else:\n        s = k // (n // 2)\n        print((k + s) % n + 1)", "t = int(input())\nfor t in range(t):\n    values = input()\n    values = values.split()\n    s = int(values[0])\n    h = int(values[1])\n    h = h - 1\n    if s % 2 == 0:\n        pos = int(h % s)\n        print(pos + 1)\n    else:\n        mid = int(s / 2)\n        pos = int(int(int(h / mid) + h) % s)\n        print(pos + 1)", "t = int(input())\nfor t in range(t):\n    values = input()\n    values = values.split()\n    s = int(values[0])\n    h = int(values[1])\n    h = h - 1\n    if s % 2 == 0:\n        pos = int(h % s)\n        print(pos + 1)\n    else:\n        mid = int(s / 2)\n        pos = int(int(int(h / mid) + h) % s)\n        print(pos + 1)", "def solve(n, k):\n    if k % n == 0:\n        print(n)\n    else:\n        print(k % n)\nfor pratyush in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    if n % 2:\n        x = n // 2\n        y = (k - 1) // x\n        k += y\n    solve(n, k)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        print(n if k % n == 0 else k % n)\n    else:\n        d = (k - 1) // (n // 2)\n        ans = (k + d) % n\n        if ans == 0:\n            ans = n\n        print(n if ans == 0 else ans)", "t = int(input())\nfor x in range(t):\n    (n, k) = [int(i) for i in input().split(' ')]\n    if n % 2 == 0:\n        answer = (k - n) % n\n    elif k >= n // 2 + 1:\n        answer = (k + (k - 1) // (n // 2)) % n\n    else:\n        answer = k\n    if answer == 0:\n        print(n)\n    else:\n        print(answer)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    k -= 1\n    ans = k % n\n    if n & 1 == 1:\n        mid = n // 2\n        ans = (k // mid + k) % n\n    print(ans + 1)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if n % 2:\n        diff = n // 2\n        if k - diff <= 0:\n            print(k)\n        else:\n            ans = (k - 1) % n\n            same = (k - 1) // (n // 2)\n            print((ans + same) % n + 1)\n    else:\n        print((k - 1) % n + 1)", "import math\nimport sys\nimport os.path\nif os.path.exists('input_file.txt'):\n    sys.stdin = open('input_file.txt', 'r')\n    sys.stdout = open('output_file.txt', 'w')\nfor i in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        anss = k % n\n        if anss == 0:\n            print(n)\n        else:\n            print(k % n)\n    else:\n        st = n // 2\n        no = math.ceil(k / st) - 1\n        no %= n\n        ans = k % n\n        ans += no\n        ans %= n\n        if ans == 0:\n            print(n)\n        else:\n            print(ans)", "t = int(input())\nfor __ in range(t):\n    (n, k) = [int(e) for e in input().split()]\n    k -= 1\n    print((k + n % 2 * k // (n // 2)) % n + 1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n & 1:\n        c = k - (n // 2 + 1)\n        if c < 0:\n            print(k % n)\n        elif c == 0:\n            print(k + 1)\n        else:\n            c = c // (n // 2) + 1\n            c = (c % n + k % n) % n\n            if c == 0:\n                print(n)\n            else:\n                print(c)\n    else:\n        x = k % n\n        if x == 0:\n            print(n)\n        else:\n            print(x)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    k -= 1\n    if n % 2 == 0:\n        print(k % n + 1)\n    else:\n        mid = n // 2\n        ans = (k // mid + k) % n\n        print(ans + 1)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    k = k - 1\n    f = n // 2\n    print((k + n % 2 * (k // f)) % n + 1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    ans = k - 1\n    if n % 2:\n        ans += (k - 1) // (n // 2)\n    print(ans % n + 1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    k -= 1\n    if n & 1:\n        d = k // (n // 2)\n        print((k + d) % n + 1)\n    else:\n        print(k % n + 1)", "import sys\nimport math\ninf = float('inf')\n\ndef lcm(a, b):\n    return int(a / math.gcd(a, b) * b)\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    k = k - 1\n    if n % 2 != 0:\n        d = n // 2\n        a = k // d\n        print((k + a) % n + 1)\n    else:\n        print(k % n + 1)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        k = k - 1\n        print(k % n + 1)\n    else:\n        k = k - 1\n        ans = (k // (n // 2) + k) % n + 1\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        if k % n == 0:\n            print(n)\n        else:\n            print(k % n)\n    else:\n        k -= 1\n        x = n // 2\n        y = k // x\n        print((y + k) % n + 1)", "def create_new_cycle(spots, hour):\n    repetition = (spots - 1) / 2\n    cycle_size = repetition * spots\n    base_number = hour % cycle_size\n    if base_number == 0:\n        base_number = cycle_size\n    if base_number % repetition == 0:\n        sub = base_number\n    else:\n        sub = base_number + (repetition - base_number % repetition)\n    sub = int(sub / repetition) - 1\n    current_spot = (hour + sub) % spots\n    if current_spot == 0:\n        current_spot = spots\n    print(current_spot)\nt = int(input())\nfor i in range(t):\n    numbers = list((int(num) for num in input().split(' ')))\n    (spots, hour) = (numbers[0], numbers[1])\n    if spots % 2 == 0:\n        if hour % spots == 0:\n            print(spots)\n        else:\n            print(hour % spots)\n    else:\n        create_new_cycle(spots, hour)", "t = int(input())\nfor idx in range(t):\n    nk = input()\n    nks = list(map(int, nk.split(' ')))\n    j = nks[0] // 2\n    if nks[0] % 2 == 0:\n        if nks[1] % nks[0] == 0:\n            print(nks[0])\n        else:\n            print(nks[1] % nks[0])\n    else:\n        j = (nks[1] - 1) // j\n        nks[1] += j\n        if nks[1] % nks[0] == 0:\n            print(nks[0])\n        else:\n            print(nks[1] % nks[0])", "from math import ceil\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        if k % n == 0:\n            print(n)\n        else:\n            print(k % n)\n    elif (k + ceil(k / (n // 2)) - 1) % n == 0:\n        print(n)\n    else:\n        print((k + ceil(k / (n // 2)) - 1) % n)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        rem = k % n\n        if rem == 0:\n            print(n)\n        else:\n            print(rem)\n    else:\n        a = n // 2 + 1\n        d = n // 2\n        num = (k - a) // d\n        num += 1\n        rem = k % n\n        if rem == 0:\n            ans = n\n        else:\n            ans = rem\n        ans += num\n        rem = ans % n\n        if rem == 0:\n            print(n)\n        else:\n            print(rem)", "for case in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        print((k - 1) % n + 1)\n    else:\n        p = (k - n // 2 - 1) // (n // 2)\n        print(((k - 1) % n + p + 1) % n + 1)", "import math\nloops = int(input())\nfor x in range(loops):\n    temp = input().split(' ')\n    spots = int(temp[0])\n    hours = int(temp[1])\n    if hours == 1:\n        print(1)\n    elif spots % 2 == 0:\n        loc = hours\n        loc = loc % spots\n        if loc == 0:\n            loc = spots\n        print(loc)\n    else:\n        loc = 1\n        hours = hours - 1\n        jumps = spots // 2\n        loc = loc + hours + hours // jumps\n        loc = loc % spots\n        if loc == 0:\n            loc = spots\n        print(loc)", "q = int(input())\nfor queries in range(0, q):\n    (n, k) = map(int, input().split())\n    k -= 1\n    if n % 2 == 0:\n        print(k % n + 1)\n    else:\n        print((k % n + k // (n // 2)) % n + 1)", "t = int(input())\nfor j in range(t):\n    nums = input().split()\n    n = int(nums[0])\n    k = int(nums[1])\n    if n % 2 == 0:\n        if k % n == 0:\n            print(n)\n        else:\n            print(k % n)\n    else:\n        r = k % ((n - 1) / 2)\n        if r == 0:\n            r = (n - 1) / 2\n        place = 2 * r - k\n        if place % n == 0:\n            print(n)\n        else:\n            print(int(place % n))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a % 2 == 0:\n        x = b % a\n        if x == 0:\n            print(a)\n        else:\n            print(x)\n    else:\n        x = (b + (b - 1) // ((a - 1) // 2)) % a\n        if x == 0:\n            print(a)\n        else:\n            print(x)", "t = int(input())\nfor case in range(t):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        print(1 + (k - 1) % n)\n    else:\n        freq = (n + 1) // 2 - 1\n        b = 1 + (k + (k - 1) // freq - 1) % n\n        print(b)", "for i in range(int(input())):\n    (n, k) = map(int, input().split())\n    k = k - 1\n    if n % 2 == 0:\n        print(1 + k % n)\n    else:\n        x = k // ((n - 1) // 2)\n        print(1 + (k + x) % n)", "t = int(input())\nfor i in range(t):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        v = (k - 1) % n + 1\n    else:\n        v = (k + (k - 1) // ((n - 1) // 2) - 1) % n + 1\n    print(v)", "def calc():\n    [n, k] = list(map(int, input().split(' ')))\n    if n % 2 == 0:\n        ans = (k - 1) % n + 1\n        print(ans)\n    else:\n        skips = (k - 1) // (n // 2)\n        ans = (k - 1 + skips) % n + 1\n        print(ans)\nt = int(input())\nfor i in range(t):\n    calc()", "T = int(input())\nfor test_case in range(T):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        print((k - 1) % n + 1)\n    else:\n        print((k - 1 + (k - 1) // (n // 2)) % n + 1)", "for _ in ' ' * int(input()):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        print((k - 1) % n + 1)\n    else:\n        t = n // 2\n        i = (k - 1) % (n * t)\n        print((i + i // t) % n + 1)", "t = int(input())\nfor i in range(t):\n    (n, k) = (int(x) for x in input().split(' '))\n    if n % 2 == 0:\n        ans = k % n\n        if ans > 0:\n            print(ans)\n        else:\n            print(n)\n    else:\n        p = n // 2\n        cnt = (k - 1) // p\n        ans = (k + cnt) % n\n        if ans > 0:\n            print(ans)\n        else:\n            print(n)", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().strip().split()))\n    if n % 2 == 0:\n        print(1 + (k - 1) % n)\n    else:\n        print(1 + (k - 1 + (k - 1) // (n // 2)) % n)", "t = int(input())\n\ndef get_answer(n, k):\n    if n % 2 == 0:\n        return k % n if k % n > 0 else n\n    else:\n        loop = k % (n // 2 * n)\n        if loop == 0:\n            return n - 1\n        add = (loop - 1) // (n // 2)\n        step = (loop + add) % n\n        return step if step > 0 else n\nfor _ in range(t):\n    (n, k) = tuple(map(int, input().split()))\n    print(get_answer(n, k))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        if k % n == 0:\n            print(n)\n        else:\n            print(k % n)\n    else:\n        x = n // 2 + 1\n        y = n - x\n        c = (k - x) // y + 1\n        if k >= x:\n            k += c\n        if k % n == 0:\n            print(n)\n        else:\n            print(k % n)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    b = 1\n    if n % 2 == 0:\n        x = k % n\n        if x == 0:\n            x = n\n        print(x)\n    elif k < n // 2 + 1:\n        print(k)\n    else:\n        x = k % n\n        if x == 0:\n            x = n\n        c = n // 2\n        m = (k - 1) // c\n        x += m\n        if x == 0:\n            x = n\n            print(x)\n        else:\n            print(n if x % n == 0 else x % n)", "n = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    b -= 1\n    if a % 2 != 1:\n        print(b % a + 1)\n    else:\n        print((b % a + b // (a // 2)) % a + 1)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    A = n\n    B = 1\n    if n % 2 == 0:\n        ans = k % n\n        if ans == 0:\n            ans = n\n    elif n % 2 == 1:\n        if n == 3:\n            a = k % n\n            if a == 1:\n                ans = 1\n            elif a == 2:\n                ans = 3\n            elif a == 0:\n                ans = 2\n        else:\n            a = (k - 1) // (n // 2)\n            if k < n // 2 + 1:\n                ans = k\n            elif k - 1 == n // 2:\n                ans = k + 1\n            else:\n                ans = k % n + a\n        b = ans // n\n        ans -= n * b\n        if ans == 0:\n            ans = n\n    print(ans)", "t = int(input())\nfor a in range(1, t + 1):\n    (n, k) = map(int, input().split())\n    k = k - 1\n    if n % 2 == 0:\n        print(k % n + 1)\n    else:\n        print((k % n + k // (n // 2)) % n + 1)", "from math import *\nt = int(input())\nfor _ in range(t):\n    (spots, k) = map(int, input().split())\n    if spots % 2 == 1:\n        thing = spots // 2\n        period = thing * spots\n        block = ceil(k / thing)\n        if block % 2 == 1:\n            start = block // 2 + 1\n        else:\n            maxx = spots // 2 + 1\n            start = maxx + block // 2\n        if k % thing != 0:\n            ans = start + k % thing - 1\n        else:\n            ans = start + thing - 1\n        ans = ans % spots\n        if ans == 0:\n            ans = spots\n    else:\n        thing = k % spots\n        if thing == 0:\n            ans = spots\n        else:\n            ans = thing\n    print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    k = k - 1\n    if n % 2 != 0:\n        d = n // 2\n        r = k // d\n        print((k + r) % n + 1)\n    else:\n        print(k % n + 1)", "for _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    a = n\n    b = 1\n    if n % 2 == 0:\n        x = k % n\n        if x == 0:\n            print(n)\n        else:\n            print(x)\n    else:\n        mid = n // 2 + 1\n        rem = k % (mid - 1)\n        if rem == 0:\n            rem = -1\n        x = k // (mid - 1)\n        mid *= x\n        mid += rem\n        ans = mid % n\n        if ans == 0:\n            ans = n\n        print(ans)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    k -= 1\n    if n % 2 == 0:\n        print(k % n + 1)\n    else:\n        print((k % n + k // (n // 2)) % n + 1)", "t = int(input())\nwhile t:\n    t -= 1\n    (n, k) = map(int, input().split())\n    if n % 2 == 0:\n        print(1 + (k - 1) % n)\n    else:\n        print(1 + (k - 1 + (k - 1) // (n // 2)) % n)", "import math\nt = int(input())\nfor t in range(t):\n    (p, q) = map(int, input().split())\n    if p % 2 != 0:\n        q1 = p // 2\n        q1 = q // q1\n        if q % (p // 2) == 0:\n            q1 = q1 - 1 + q % p\n            q1 = q1 % p\n            if q1 != 0:\n                print(q1)\n            else:\n                print(p)\n        else:\n            q = q % p\n            q1 = (q1 + q) % p\n            if q1 != 0:\n                print(q1)\n            else:\n                print(p)\n    elif q % p == 0:\n        print(p)\n    else:\n        print(q % p)", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    A = n\n    B = 1\n    if n % 2 == 0:\n        if k % n == 0:\n            B = n\n        else:\n            B = k % n\n    else:\n        temp = (k - 1) // (n // 2) + k\n        if temp % n == 0:\n            B = n\n        else:\n            B = temp % n\n    print(B)", "for _ in range(int(input())):\n    (n, k) = [int(x) for x in input().split()]\n    if n % 2 == 0:\n        if k % n == 0:\n            print(n)\n        else:\n            print(k % n)\n    else:\n        m = n // 2\n        add = (k - 1) // m\n        k += add\n        if k > n:\n            if k % n == 0:\n                print(n)\n            else:\n                print(k % n)\n        else:\n            print(k)", "import math\n\ndef solve(n, k):\n    if n % 2 == 0:\n        k = k % n\n        if k == 0:\n            return n\n        return k\n    else:\n        m = math.ceil(n / 2)\n        d = math.floor(n / 2)\n        if k < m:\n            return k\n        elif k == m:\n            return (m + 1) % (n + 1)\n        else:\n            target = (k - m) // d + 1\n            res = k + target\n            res = res % n\n            if res == 0:\n                return n\n            return res\nt = int(input())\nfor _ in range(t):\n    (n, k) = map(int, input().split())\n    print(solve(n, k))", "for __ in range(int(input())):\n    (n, k) = [int(e) for e in input().split()]\n    k -= 1\n    print((k + n % 2 * k // (n // 2)) % n + 1)", "def solution(n, k):\n    if n % 2 == 0:\n        return k % n + 1\n    else:\n        mid = n // 2\n        ans = (k // mid + k) % n\n        return ans + 1\nfor i in range(int(input())):\n    (a, k) = input().split()\n    (a, k) = (int(a), int(k))\n    print(solution(a, k - 1))"]