["import sys\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_list():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_list_string():\n    return list(map(str, sys.stdin.readline().strip().split()))\n\ndef get_string():\n    return sys.stdin.readline().strip()\n\ndef get_int():\n    return int(sys.stdin.readline().strip())\n\ndef get_print_int(x):\n    sys.stdout.write(str(x) + '\\n')\n\ndef get_print(x):\n    sys.stdout.write(x + '\\n')\n\ndef solve():\n    for _ in range(get_int()):\n        (n, k) = get_ints()\n        a = get_string()\n        b = get_string()\n        (temp1, temp2) = ([0] * 26, [0] * 26)\n        for i in a:\n            temp1[ord(i) - 97] += 1\n        for i in b:\n            temp2[ord(i) - 97] += 1\n        f = 0\n        count = 0\n        for i in range(26):\n            d = temp1[i] - temp2[i]\n            if d == 0:\n                continue\n            if abs(d) % k == 1:\n                f = 1\n                break\n            count += d // k\n            if count < 0:\n                f = 1\n                break\n        if f:\n            get_print('No')\n        else:\n            get_print('Yes')\nsolve()", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [0] * 26\n    for x in input():\n        a[ord(x) - 97] += 1\n    for x in input():\n        a[ord(x) - 97] -= 1\n    a = [x for x in a if x != 0]\n    t = 0\n    pas = True\n    for x in a:\n        if abs(x) % k == 0 and t > -1:\n            t += x\n        else:\n            pas = False\n            break\n    print('Yes' if pas else 'No')", "for j in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    c = [0] * 26\n    for i in input():\n        c[ord(i) - 97] += 1\n    for i in input():\n        c[ord(i) - 97] -= 1\n    c = [i for i in c if i != 0]\n    d = 0\n    for i in c:\n        if abs(i) % k == 0 and d >= 0:\n            d += i\n        else:\n            print('No')\n            break\n    else:\n        print('Yes')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [0] * 26\n    for x in input():\n        a[ord(x) - 97] += 1\n    for x in input():\n        a[ord(x) - 97] -= 1\n    a = [x for x in a if x != 0]\n    t = 0\n    pas = True\n    for x in a:\n        if abs(x) % k == 0 and t > -1:\n            t += x\n        else:\n            pas = False\n            break\n    print('Yes' if pas else 'No')", "for _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    a = [0] * 26\n    for x in input():\n        a[ord(x) - 97] += 1\n    for x in input():\n        a[ord(x) - 97] -= 1\n    a = [x for x in a if x != 0]\n    t = 0\n    pas = True\n    for x in a:\n        if abs(x) % k == 0 and t > -1:\n            t += x\n        else:\n            pas = False\n            break\n    print('Yes' if pas else 'No')", "def solve(a, b, k, n):\n    a.sort()\n    b.sort()\n    indexA = 0\n    indexB = 0\n    curr = 0\n    while indexA < n and indexB < n:\n        if a[indexA] > b[indexB] and curr == 0:\n            return 'No'\n        elif a[indexA] < b[indexB]:\n            if indexA + k - 1 < n and a[indexA + k - 1] == a[indexA]:\n                curr += k\n                indexA += k\n            else:\n                return 'No'\n        elif a[indexA] > b[indexB] and curr > 0:\n            if indexB + k - 1 < n and b[indexB + k - 1] == b[indexB]:\n                curr -= k\n                indexB += k\n            else:\n                return 'No'\n        else:\n            indexA += 1\n            indexB += 1\n    while indexB < n:\n        if indexB + k - 1 < n and b[indexB + k - 1] == b[indexB]:\n            curr -= k\n            indexB += k\n        else:\n            return 'No'\n    return 'Yes'\nfor _ in range(int(input())):\n    (n, k) = list(map(int, input().split()))\n    a = list(input())\n    b = list(input())\n    print(solve(a, b, k, n))", "for _ in range(int(input())):\n    (n, k) = map(int, input().split(' '))\n    c = [0] * 26\n    for i in input():\n        c[ord(i) - 97] += 1\n    for i in input():\n        c[ord(i) - 97] -= 1\n    c = [i for i in c if i != 0]\n    a = 0\n    for i in c:\n        if abs(i) % k == 0 and a >= 0:\n            a += i\n        else:\n            print('No')\n            break\n    else:\n        print('Yes')", "import sys, threading\ninput = sys.stdin.readline\nscanner = lambda : int(input())\nstring = lambda : input().rstrip()\nmp = lambda : map(int, input().split())\nml = lambda : list(mp())\nget_float = lambda : map(float, input().split())\n\ndef dmain():\n    sys.setrecursionlimit(1000000)\n    threading.stack_size(1024000)\n    thread = threading.Thread(target=main)\n    thread.start()\n\ndef solve():\n\n    def geti(x):\n        return ord(x) - ord('a')\n    (n, k) = ml()\n    s1 = input()\n    s2 = input()\n    dct1 = [0] * 26\n    dct2 = [0] * 26\n    for i in range(n):\n        dct1[geti(s1[i])] += 1\n        dct2[geti(s2[i])] += 1\n    test = 0\n    extra = 0\n    for i in range(26):\n        if dct2[i]:\n            take = min(dct2[i], dct1[i])\n            dct2[i] -= take\n            dct1[i] -= take\n            if dct2[i]:\n                if dct2[i] % k != 0:\n                    test = 1\n                    break\n                need = dct2[i] // k\n                if extra < need:\n                    test = 1\n                    break\n                extra -= need\n        extra += dct1[i] // k\n    if test:\n        print('No')\n    else:\n        print('Yes')\nt = scanner()\nfor i in range(t):\n    solve()", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (n, k) = map(int, input().split())\n    s1 = input().rstrip()\n    s2 = input().rstrip()\n    c1 = [0] * 26\n    c2 = [0] * 26\n    for i in s1:\n        c1[ord(i) - 97] += 1\n    for i in s2:\n        c2[ord(i) - 97] += 1\n    ans = 'Yes'\n    for i in range(0, 25):\n        if c1[i] == 0 and c2[i] == 0:\n            continue\n        elif c1[i] < c2[i] or (c1[i] - c2[i]) % k > 0:\n            ans = 'No'\n            break\n        c1[i + 1] += c1[i] - c2[i]\n    print(ans)"]