["(n, k) = map(lambda x: int(x), input().split())\nv = list(map(lambda x: int(x), input().split()))\nv.sort()\nk += 1\nq = 0\ns = 0\nwhile len(v) > 0 and q >= 0:\n    s += q\n    q += v.pop()\nv.append(q)\nd = len(v) % k - 1\nfor i in range(len(v)):\n    if d >= i % k:\n        p = len(v) // k - i // k\n    else:\n        p = len(v) // k - i // k - 1\n    s += v[len(v) - i - 1] * p\nprint(s)", "import sys\ninput = lambda : sys.stdin.readline()\n\ndef RL():\n    return map(int, sys.stdin.readline().split())\n\ndef RLL():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef N():\n    return int(input())\n\ndef print_list(l):\n    print(' '.join(map(str, l)))\n(n, k) = RL()\na = RLL()\na.sort()\np = list(range(n))\nif k > 0:\n    s = [0]\n    for i in a[::-1]:\n        s.append(i + s[-1])\n    s = s[1:][::-1]\n    delta = 0\n    r = k\n    now = 0\n    for i in range(1, n):\n        p[i] -= delta\n        if p[i] == now:\n            continue\n        if s[i] >= 0:\n            for i in range(i + 1, n):\n                p[i] -= delta\n            break\n        delta += 1\n        p[i] = now\n        r -= 1\n        if r == 0:\n            r = k\n            now += 1\nres = 0\nfor i in range(n):\n    res += p[i] * a[i]\nprint(res)", "(n, k) = map(int, input().split())\na = sorted(list(map(int, input().split())))\np = list(range(n))\nif k > 0:\n    s = [0]\n    for i in a[::-1]:\n        s.append(i + s[-1])\n    s = s[1:][::-1]\n    delta = 0\n    r = k\n    now = 0\n    for i in range(1, n):\n        p[i] -= delta\n        if p[i] == now:\n            continue\n        if s[i] >= 0:\n            for i in range(i + 1, n):\n                p[i] -= delta\n            break\n        delta += 1\n        p[i] = now\n        r -= 1\n        if r == 0:\n            r = k\n            now += 1\nres = 0\nfor i in range(n):\n    res += p[i] * a[i]\nprint(res)", "(n, k) = map(int, input().split())\na = sorted(list(map(int, input().split())))\np = list(range(n))\nres = 0\nif k > 0:\n    s = [0]\n    for i in a[::-1]:\n        s.append(i + s[-1])\n    s = s[1:][::-1]\n    delta = 0\n    r = k\n    now = 0\n    for i in range(1, n):\n        p[i] -= delta\n        if p[i] == now:\n            continue\n        if s[i] >= 0:\n            for i in range(i + 1, n):\n                p[i] -= delta\n            break\n        delta += 1\n        p[i] = now\n        r -= 1\n        if r == 0:\n            r = k\n            now += 1\nfor i in range(n):\n    res += p[i] * a[i]\nprint(res)", "(n, k) = map(lambda x: int(x), input().split())\nv = list(map(lambda x: int(x), input().split()))\nv.sort()\nq = 0\ns = 0\nwhile len(v) > 0 and q >= 0:\n    s += q\n    q += v.pop()\nv.append(q)\nv = v[min(len(v), k + 1):]\nfor i in range(len(v)):\n    if len(v) % (k + 1) - 1 >= i % (k + 1):\n        p = len(v) // (k + 1) - i // (k + 1) + 1\n    else:\n        p = len(v) // (k + 1) - i // (k + 1)\n    i = len(v) - i - 1\n    s += v[i] * p\nprint(s)", "(n, k) = map(lambda x: int(x), input().split())\nv = list(map(lambda x: int(x), input().split()))\nv.sort()\nq = 0\ns = 0\nwhile len(v) > 0 and q >= 0:\n    s += q\n    q += v.pop()\nv.append(q)\nfor i in range(len(v)):\n    if len(v) % (k + 1) - 1 >= i % (k + 1):\n        p = len(v) // (k + 1) - i // (k + 1)\n    else:\n        p = len(v) // (k + 1) - i // (k + 1) - 1\n    i = len(v) - i - 1\n    s += v[i] * p\nprint(s)"]