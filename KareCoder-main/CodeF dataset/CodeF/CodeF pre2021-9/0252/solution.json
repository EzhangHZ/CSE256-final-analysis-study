["import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (x, y, z) = map(int, input().split())\n    (a, b, c) = map(int, input().split())\n    print(min(z, b, z + x - c) * 2)", "list_ans = []\nfor _ in range(int(input())):\n    (x1, y1, z1) = map(int, input().split())\n    (x2, y2, z2) = map(int, input().split())\n    if z2 <= x1:\n        list_ans.append(2 * min(y2, z1))\n    elif z2 <= x1 + z1:\n        list_ans.append(2 * min(y2, z1 + x1 - z2))\n    else:\n        list_ans.append(-2 * (z2 - x1 - z1))\nfor item in list_ans:\n    print(item)", "def ternary(x1, y1, z1, x2, y2, z2):\n    ans = 0\n    if z1 <= y2:\n        ans += 2 * z1\n        y2 -= z1\n        z1 = 0\n    else:\n        ans += 2 * y2\n        z1 -= y2\n        y2 = 0\n    if y1 + z2 >= (x1 + x2 + y1 + y2 + z1 + z2) // 2:\n        ans += (y1 + z2 - (x1 + x2 + y1 + y2 + z1 + z2) // 2) * -2\n    return ans\nt = int(input())\nfinal = []\nfor _ in range(t):\n    (x1, y1, z1) = map(int, input().split())\n    (x2, y2, z2) = map(int, input().split())\n    final.append(ternary(x1, y1, z1, x2, y2, z2))\nfor _ in range(t):\n    print(final[_])", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (x, y, z) = map(int, input().split())\n    (a, b, c) = map(int, input().split())\n    print(min(z, b, z + x - c) * 2)", "import sys\ninput = sys.stdin.readline\nfor n in range(int(input())):\n    (x, y, z) = map(int, input().split())\n    (x1, y1, z1) = map(int, input().split())\n    ans = 0\n    if x >= z1:\n        x -= z1\n        z1 = 0\n    else:\n        z1 -= x\n        x = 0\n    if y >= x1:\n        y -= x1\n        x1 = 0\n    else:\n        x1 -= y\n        y = 0\n    if z >= y1:\n        z -= y1\n        ans += 2 * y1\n        y1 = 0\n    else:\n        y1 -= z\n        ans += 2 * z\n        z = 0\n    if y >= z1:\n        y -= z1\n        ans += -2 * z1\n    else:\n        z1 -= y\n        ans += -2 * y\n    print(ans)", "t = int(input())\nans = ''\nfor _ in range(t):\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    A = min(a[2], b[1])\n    B = max(0, b[2] - a[2] - a[0] + A)\n    ans += str(2 * (A - B)) + '\\n'\nprint(ans)", "import sys\ninput = lambda : sys.stdin.readline()\nint_arr = lambda : list(map(int, input().split()))\nstr_arr = lambda : list(map(str, input().split()))\nget_str = lambda : map(str, input().split())\nget_int = lambda : map(int, input().split())\nget_flo = lambda : map(float, input().split())\nmod = 1000000007\n\ndef solve():\n    pass\nfor i in range(int(input())):\n    (a, b, c) = get_int()\n    (x, y, z) = get_int()\n    res = 0\n    if z > 0:\n        z -= a\n        if z <= 0:\n            a = abs(z)\n            z = 0\n        else:\n            a = 0\n    if z > 0:\n        z -= c\n        if z <= 0:\n            c = abs(z)\n            z = 0\n        else:\n            c = 0\n    if c > 0 and y > 0:\n        if c > y:\n            res += 2 * y\n        else:\n            res += 2 * c\n    print(res - 2 * z)", "import sys\nimport os\n\ndef get_inp():\n    return sys.stdin.readline().strip()\n\ndef get_inps():\n    return sys.stdin.readline().strip().split()\n\ndef println(str):\n    return sys.stdout.write(str + '\\n')\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\nt = int(get_inp())\nwhile (t := (t - 1)) >= 0:\n    (x1, y1, z1) = map(int, get_inps())\n    (x2, y2, z2) = map(int, get_inps())\n    sum = min(z1, y2) * 2\n    if z1 <= y2:\n        temp = z1\n        z1 -= z1\n        y2 -= temp\n    else:\n        temp = y2\n        z1 -= y2\n        y2 -= temp\n    if z2 <= x1:\n        temp = z2\n        z2 -= z2\n        x1 -= z2\n    else:\n        temp = x1\n        z2 -= x1\n        x1 -= temp\n    if z2 <= z1:\n        z1 -= z2\n        z2 -= z2\n    else:\n        z2 -= z1\n        z1 -= z1\n    if y1 <= y2:\n        y2 -= y1\n        y1 -= y1\n    else:\n        y1 -= y2\n        y2 -= y2\n    if x2 <= y1:\n        y1 -= x2\n        x2 -= x2\n    else:\n        x2 -= y1\n        y1 -= y2\n    y1 = max(0, y1)\n    if z2 > 0:\n        sum = sum - min(z2, y1) * 2\n    print(sum)", "import sys\nimport os\n\ndef get_inp():\n    return sys.stdin.readline().strip()\n\ndef get_inps():\n    return sys.stdin.readline().strip().split()\n\ndef println(str):\n    return sys.stdout.write(str + '\\n')\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\nt = int(get_inp())\nwhile (t := (t - 1)) >= 0:\n    (x1, y1, z1) = map(int, get_inps())\n    (x2, y2, z2) = map(int, get_inps())\n    sum = min(z1, y2) * 2\n    m = min(z1, y2)\n    z1 -= m\n    y2 -= m\n    m = min(z2, x1)\n    z2 -= m\n    x1 -= m\n    m = min(z2, z1)\n    z2 -= m\n    z1 -= m\n    m = min(y2, y1)\n    y2 -= m\n    y1 -= m\n    m = min(x2, y1)\n    x2 -= m\n    y1 -= m\n    y1 = max(0, y1)\n    if z2 > 0:\n        sum = sum - min(z2, y1) * 2\n    print(sum)", "from sys import *\ninput = lambda : stdin.readline()\nint_arr = lambda : list(map(int, stdin.readline().strip().split()))\nstr_arr = lambda : list(map(str, stdin.readline().split()))\nget_str = lambda : map(str, stdin.readline().strip().split())\nget_int = lambda : map(int, stdin.readline().strip().split())\nget_float = lambda : map(float, stdin.readline().strip().split())\nmod = 1000000007\nsetrecursionlimit(1000)\nfor _ in range(int(input())):\n    (x1, y1, z1) = get_int()\n    (x2, y2, z2) = get_int()\n    tot = 0\n    if z2 > x1:\n        z2 -= x1\n        x1 = 0\n        if z2 > z1:\n            z2 -= z1\n            z1 = 0\n            if z2 > y1:\n                z2 -= y1\n                tot -= y1 * 2\n                y1 = 0\n            else:\n                tot -= z2 * 2\n                y1 -= z2\n                z2 = 0\n        else:\n            z1 -= z2\n            z2 = 0\n    if z1 > y2 and y2 != 0:\n        tot += y2 * 2\n        z1 -= y2\n        y2 = 0\n    elif y2 != 0:\n        tot += z1 * 2\n        y2 -= z1\n        z1 = 0\n    print(tot)", "r = int(input())\na = []\nfor i in range(r):\n    (x1, y1, z1) = str(input()).split()\n    (x2, y2, z2) = str(input()).split()\n    (x1, y1, z1) = (int(x1), int(y1), int(z1))\n    (x2, y2, z2) = (int(x2), int(y2), int(z2))\n    k = 0\n    if z1 > 0:\n        k += 2 * min(z1, y2)\n        t = min(z1, y2)\n        z1 -= t\n        y2 -= t\n    if z1 > 0:\n        t = min(z1, z2)\n        z1 -= t\n        z2 -= t\n    if z1 > 0:\n        t = min(z1, x2)\n        z1 -= t\n        x2 -= t\n    if y1 > 0:\n        t = min(y1, y2)\n        y1 -= t\n        y2 -= t\n    if y1 > 0:\n        t = min(y1, x2)\n        y1 -= t\n        x2 -= t\n    if y1 > 0:\n        k -= 2 * min(y1, z2)\n        t = min(y1, z2)\n        y1 -= t\n        z2 -= t\n    a.append(k)\nfor u in range(len(a)):\n    print(a[u])", "def answer(x1, y1, z1, x2, y2, z2):\n    sum = min(z1, y2) * 2\n    extra_ones = max(y2 - z1, 0)\n    sum -= min(max(y1 - (x2 + extra_ones), 0), z2) * 2\n    return sum\n\ndef main():\n    t = int(input())\n    x1 = [0] * t\n    y1 = [0] * t\n    z1 = [0] * t\n    x2 = [0] * t\n    y2 = [0] * t\n    z2 = [0] * t\n    for j in range(t):\n        (x1[j], y1[j], z1[j]) = [int(i) for i in input().split()]\n        (x2[j], y2[j], z2[j]) = [int(i) for i in input().split()]\n    for j in range(t):\n        print(answer(x1[j], y1[j], z1[j], x2[j], y2[j], z2[j]))\nmain()", "import sys\nimport bisect\ninput = sys.stdin.readline\nins = lambda : input().rstrip()\nini = lambda : int(input().rstrip())\ninm = lambda : map(int, input().rstrip().split())\ninl = lambda : list(map(int, input().split()))\nout = lambda x: print('\\n'.join(map(str, x)))\nans = []\nt = ini()\nfor _ in range(t):\n    a = inl()\n    b = inl()\n    x = min(a[2], b[1])\n    tmp = x * 2\n    a[2] -= x\n    b[1] -= x\n    x = min(b[2], a[2] + a[0])\n    b[2] = max(0, b[2] - x)\n    a[2] = max(0, a[2] - x)\n    tmp -= min(b[2], a[1]) * 2\n    ans.append(tmp)\nout(ans)", "t = int(input())\nans = []\nwhile t:\n    (x1, y1, z1) = map(int, input().split())\n    (x2, y2, z3) = map(int, input().split())\n    c = 0\n    abp = min(z1, y2)\n    c = c + abp * 2\n    z3 = z3 - min(z3, x1)\n    y1 = y1 - min(x2, y1)\n    abn = min(z3, y1)\n    c = c - abn * 2\n    ans.append(c)\n    t = t - 1\nfor i in ans:\n    print(i)", "for _ in range(int(input())):\n    (x1, y1, z1) = map(int, input().split())\n    (x2, y2, z2) = map(int, input().split())\n    c = min(z1, y2)\n    z1 -= c\n    y2 -= c\n    res = c * 2\n    if x1 + z1 < z2:\n        res -= (z2 - x1 - z1) * 2\n    print(res)", "t = int(input())\nfor _ in range(t):\n    (x1, y1, z1) = map(int, input().split())\n    (x2, y2, z2) = map(int, input().split())\n    c = 0\n    if z1 > y2:\n        c = 2 * y2\n        z1 -= y2\n        y2 = 0\n        if z1 >= z2:\n            z1 -= z2\n            z2 = 0\n        else:\n            z2 -= z1\n            z1 = 0\n            if x1 >= z2:\n                x1 -= z2\n                z2 = 0\n            else:\n                z2 -= x1\n                x1 = 0\n                c -= 2 * z2\n                z2 = 0\n    else:\n        c = 2 * z1\n        y2 -= z1\n        z1 = 0\n        if y1 >= y2:\n            y1 -= y2\n            y2 = 0\n            if y1 >= x2:\n                y1 -= x2\n                x2 = 0\n                c -= 2 * y1\n    print(c)", "def tran(nk, arr):\n    if arr[2] > nk[0]:\n        if nk[2] < arr[1]:\n            p = arr[2] - nk[0]\n            return min(arr[1], nk[2]) * 2 - 2 * p\n        else:\n            pm = nk[2] - arr[1]\n            p = arr[2] - nk[0]\n            if pm > p:\n                return min(arr[1], nk[2]) * 2\n            else:\n                return min(arr[1], nk[2]) * 2 - 2 * (p - pm)\n    else:\n        return min(arr[1], nk[2]) * 2\nt = int(input())\nans = []\nfor i in range(t):\n    nk = list(map(int, input().rstrip().split()))\n    arr = list(map(int, input().rstrip().split()))\n    r = tran(nk, arr)\n    ans.append(r)\nfor i in ans:\n    print(i)", "import sys\ninputlines = sys.stdin.readlines()\nnumber_of_testcases = int(inputlines[0])\nfor i in range(number_of_testcases):\n    (x1, y1, z1) = list(map(int, inputlines[2 * i + 1].split(' ')))\n    (x2, y2, z2) = list(map(int, inputlines[2 * i + 2].split(' ')))\n    minimum = min(z1, y2)\n    sum = 2 * minimum\n    z1 -= minimum\n    y2 -= minimum\n    z2 -= z1\n    z2 -= x1\n    if z2 > 0:\n        sum = sum - z2 * 2\n    print(sum)", "import sys, math\nfrom collections import deque, defaultdict\nimport operator as op\nfrom functools import reduce\nsys.setrecursionlimit(10 ** 6)\nI = sys.stdin.readline\n\ndef ii():\n    return int(I().strip())\n\ndef li():\n    return list(map(int, I().strip().split()))\n\ndef mi():\n    return map(int, I().strip().split())\n\ndef ncr(n, r):\n    r = min(r, n - r)\n    numer = reduce(op.mul, range(n, n - r, -1), 1)\n    denom = reduce(op.mul, range(1, r + 1), 1)\n    return numer // denom\n\ndef gcd(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return x\n\ndef main():\n    ans = ''\n    for _ in range(int(ii())):\n        (x, y, z) = mi()\n        (x1, y1, z1) = mi()\n        total = min(y1, z)\n        y1 -= total\n        z -= total\n        tmp2 = x\n        if z > 0:\n            tmp2 += z\n        neg = 0\n        if z1 > tmp2:\n            neg = z1 - tmp2\n        x = total * 2 - neg * 2\n        ans += str(x) + '\\n'\n    print(ans)\nmain()", "import sys\ninput = sys.stdin.readline\nI = lambda : list(map(int, input().split()))\n(m,) = I()\nwhile m:\n    m -= 1\n    (a, b, c) = I()\n    (x, y, z) = I()\n    if a >= z:\n        print(2 * min(c, y))\n    elif a + c == z:\n        print(0)\n    elif a + c > z:\n        print(2 * min(y, c - (z - a)))\n    else:\n        print(2 * (a + c - z))", "from sys import stdin\ninput = lambda : stdin.readline().strip()\nfor _ in range(int(input())):\n    (x1, y1, z1) = list(map(int, input().split()))\n    (x2, y2, z2) = list(map(int, input().split()))\n    sum1 = min([z1, y2])\n    z1 = z1 - sum1\n    sum1 = sum1 * 2\n    b = min([z2, x1])\n    z2 = z2 - b\n    b = min([z2, z1])\n    z2 = z2 - b\n    if z2 == 0:\n        print(sum1)\n    else:\n        print(sum1 - z2 * 2)", "u = int(input())\nlis = []\nfor i in range(u):\n    (na0, na1, na2) = map(int, input().split())\n    (nb0, nb1, nb2) = map(int, input().split())\n    if nb0 >= na1:\n        if nb1 >= na2:\n            lis.append(na2 * 2)\n        else:\n            lis.append(nb1 * 2)\n    elif na1 - nb0 > nb1:\n        d = na1 - nb0 - nb1\n        if nb2 >= d:\n            lis.append(-2 * d)\n        else:\n            lis.append(0)\n    elif na1 - nb0 == nb1:\n        lis.append(0)\n    elif na2 != 0:\n        e = nb1 - (na1 - nb0)\n        if e >= na2:\n            lis.append(na2 * 2)\n        else:\n            lis.append(e * 2)\n    else:\n        lis.append(0)\nfor i in lis:\n    print(i)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    (x1, y1, z1) = [int(x) for x in input().split()]\n    (x2, y2, z2) = [int(x) for x in input().split()]\n    num_pos = min(z1, y2)\n    if y2 > z1:\n        left_ones = y2 - z1\n    else:\n        left_ones = 0\n    num_neg = max(y1 - left_ones - x2, 0)\n    print(num_pos * 2 - num_neg * 2)", "for _ in range(int(input())):\n    (x1, y1, z1) = map(int, input().split())\n    (x2, y2, z2) = map(int, input().split())\n    t = min(y1, x2)\n    y1 -= t\n    x2 -= t\n    t = min(x1, z2)\n    x1 -= t\n    z2 -= t\n    c = 2 * min(z1, y2) - 2 * min(y1, z2)\n    print(c)", "def Solve():\n    for t in range(int(input())):\n        (a0, a1, a2) = map(int, input().split())\n        (b0, b1, b2) = map(int, input().split())\n        f = 0\n        f += min(a2, b1) * 2\n        (a2, b1) = (a2 - min(a2, b1), b1 - min(a2, b1))\n        while b2 > 0:\n            if a2 > 0:\n                (b2, a2) = (b2 - min(a2, b2), a2 - min(a2, b2))\n            elif a0 > 0:\n                (b2, a0) = (b2 - min(a0, b2), a0 - min(a0, b2))\n            else:\n                f += min(a1, b2) * -2\n                (b2, a1) = (b2 - min(a1, b2), a1 - min(a1, b2))\n        print(f)\nSolve()", "for p in range(int(input())):\n    (a, b, c) = list(map(int, input().split()))\n    (x, y, z) = list(map(int, input().split()))\n    z -= a\n    if z < 0:\n        z = 0\n    if c >= z:\n        c -= z\n        s = min(c, y) * 2\n    else:\n        z -= c\n        s = min(z, b) * 2 * -1\n    print(s)", "t = int(input())\nfor i in range(t):\n    (x1, y1, z1) = (int(i) for i in input().split())\n    (x2, y2, z2) = (int(i) for i in input().split())\n    s = 2 * min(z1, y2) - 2 * max(0, min(z2 - x1, z2 - x1 - z1 + y2))\n    print(s)", "for n in range(int(input())):\n    (x, y, z) = map(int, input().split())\n    (x1, y1, z1) = map(int, input().split())\n    ans = 0\n    if x >= z1:\n        x -= z1\n        z1 = 0\n    else:\n        z1 -= x\n        x = 0\n    if y >= x1:\n        y -= x1\n        x1 = 0\n    else:\n        x1 -= y\n        y = 0\n    if z >= y1:\n        z -= y1\n        ans += 2 * y1\n        y1 = 0\n    else:\n        y1 -= z\n        ans += 2 * z\n        z = 0\n    if y >= z1:\n        y -= z1\n        ans += -2 * z1\n    else:\n        z1 -= y\n        ans += -2 * y\n    print(ans)", "for n in range(int(input())):\n    (x, y, z) = map(int, input().split())\n    (x1, y1, z1) = map(int, input().split())\n    ans = 0\n    if x >= z1:\n        x -= z1\n        z1 = 0\n    else:\n        z1 -= x\n        x = 0\n    if y >= x1:\n        y -= x1\n        x1 = 0\n    else:\n        x1 -= y\n        y = 0\n    if z >= y1:\n        z -= y1\n        ans += 2 * y1\n        y1 = 0\n    else:\n        y1 -= z\n        ans += 2 * z\n        z = 0\n    if y >= z1:\n        y -= z1\n        ans += -2 * z1\n    else:\n        z1 -= y\n        ans += -2 * y\n    print(ans)", "for _ in range(int(input())):\n    (x, y, z) = map(int, input().split())\n    (a, b, c) = map(int, input().split())\n    print(min(z, b, z + x - c) * 2)", "import sys\nsys.setrecursionlimit(10 ** 5)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\nfor _ in range(II()):\n    (x1, y1, z1) = MI()\n    (x2, y2, z2) = MI()\n    c2 = min(z1, y2)\n    z1 -= c2\n    y2 -= c2\n    zero = min(x1 + z1, z2)\n    z2 -= zero\n    ans = 2 * (c2 - z2)\n    print(ans)", "output = []\nfor i in range(int(input())):\n    z = 0\n    x = input().split()\n    a = int(x[0])\n    b = int(x[1])\n    c = int(x[2])\n    x = input().split()\n    d = int(x[0])\n    e = int(x[1])\n    f = int(x[2])\n    g = min(c, e)\n    c -= g\n    e -= g\n    z += g * 2\n    g = min(c, f)\n    c -= g\n    f -= g\n    g = min(f, a)\n    a -= g\n    f -= g\n    z -= min(b, f) * 2\n    output.append(z)\nprint('\\n'.join([str(i) for i in output]))", "def ternary(x1, y1, z1, x2, y2, z2):\n    ans = 0\n    if z1 >= y2:\n        ans += 2 * y2\n        z1 -= y2\n        y2 = 0\n    else:\n        ans += 2 * z1\n        y2 -= z1\n        z1 = 0\n    if z2 >= z1:\n        z2 -= z1\n        z1 = 0\n    else:\n        z2 = 0\n        z1 -= z2\n    if z2 >= x1:\n        z2 -= x1\n        x1 = 0\n    else:\n        z2 = 0\n        x1 -= z2\n    if z2 != 0:\n        if z2 >= y1:\n            ans -= 2 * y1\n            z2 -= y1\n            y1 = 0\n        else:\n            ans -= 2 * z2\n            y1 -= z2\n            z2 = 0\n    if y2 >= y1:\n        y2 -= y1\n        y1 = 0\n    else:\n        y1 -= y2\n        y2 = 0\n    return ans\nt = int(input())\na = []\nfor i in range(t):\n    (x1, y1, z1) = list(map(int, input().split(' ')))\n    (x2, y2, z2) = list(map(int, input().split(' ')))\n    a.append([x1, y1, z1, x2, y2, z2])\nfor x in a:\n    print(ternary(*x))", "from sys import stdin, stdout\nfor _ in range(int(stdin.readline())):\n    (a0, a1, a2) = list(map(int, stdin.readline().split()))\n    (b0, b1, b2) = list(map(int, stdin.readline().split()))\n    used2 = min(a2, b1)\n    neg = b2 - (a2 - used2 + a0)\n    if neg < 0:\n        neg = 0\n    print(2 * (used2 - neg))", "nums = int(input())\nA = []\nB = []\nfor i in range(nums):\n    A.append(input().split())\n    B.append(input().split())\nfor zumba in range(nums):\n    (A_0, A_1, A_2) = [int(ciccio) for ciccio in A[zumba]]\n    (B_0, B_1, B_2) = [int(ciccio) for ciccio in B[zumba]]\n    A_2_bar = A_2 - min(A_2, B_1)\n    print(2 * min(A_2, B_1) - 2 * max(0, B_2 - A_0 - A_2_bar))", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    a = list(map(int, stdin.readline().split()))\n    b = list(map(int, stdin.readline().split()))\n    ans = 0\n    k = min(a[2], b[1])\n    ans += 2 * k\n    a[2] -= k\n    b[1] -= k\n    if a[2] == 0:\n        if a[1] > b[1]:\n            a[1] -= b[1]\n            if a[1] > b[0]:\n                a[1] -= b[0]\n                ans -= 2 * a[1]\n    elif b[2] > a[2]:\n        b[2] -= a[2]\n        if b[2] > a[0]:\n            b[2] -= a[0]\n            ans -= 2 * b[2]\n    print(ans)", "n = int(input())\na = []\nb = []\nfor i in range(n):\n    a.append([int(j) for j in input().split()])\n    b.append([int(j) for j in input().split()])\nfor i in range(n):\n    if b[i][2] >= a[i][0] + a[i][2]:\n        print(-(b[i][2] - a[i][0] - a[i][2]) * 2)\n    elif b[i][2] > a[i][0]:\n        k = a[i][0] + a[i][2] - b[i][2]\n        print((max(b[i][1], k) - abs(b[i][1] - k)) * 2)\n    else:\n        print((max(b[i][1], a[i][2]) - abs(b[i][1] - a[i][2])) * 2)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nt = inp()\nfor i in range(t):\n    m = 0\n    (x0, x1, x2) = invr()\n    (y0, y1, y2) = invr()\n    m = min(x0, y2)\n    x0 -= m\n    y2 -= m\n    m = min(x1, y0)\n    x1 -= m\n    y0 -= m\n    m = min(x2, y1)\n    x2 -= m\n    y1 -= m\n    s = 0\n    s = s + 2 * m\n    s = s - 2 * min(x1, y2)\n    print(s)", "t = int(input())\nfor q in range(t):\n    (x1, y1, z1) = map(int, input().split())\n    (x2, y2, z2) = map(int, input().split())\n    total = 0\n    if z1 >= y2:\n        total += y2 * 2\n        z1 = z1 - y2\n        y2 = 0\n    else:\n        total += z1 * 2\n        z1 = 0\n        y2 = y2 - z1\n    if z2 > x1 + z1:\n        z2 = z2 - (x1 + z1)\n        total = total - z2 * 2\n    print(total)", "t = int(input())\nfor _ in range(t):\n    (a0, a1, a2) = map(int, input().split())\n    (b0, b1, b2) = map(int, input().split())\n    ans = 0\n    ans = min(a2, b1)\n    if b1 > a2:\n        b1 -= a2\n        a2 = 0\n    else:\n        a2 -= b1\n        b1 = 0\n    if b2 > a0:\n        b2 -= a0\n        a0 = 0\n    else:\n        a0 -= b2\n        b2 = 0\n    if a2 >= b2:\n        print(ans * 2)\n    else:\n        ans -= b2 - a2\n        print(ans * 2)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor i in range(t):\n    (x1, y1, z1) = [int(c) for c in input().split()]\n    (x2, y2, z2) = [int(c) for c in input().split()]\n    ans = 0\n    if z1 > 0 and y2 > 0:\n        ans += min(z1, y2) * 2\n        b = min(z1, y2)\n        z1 -= b\n        y2 -= b\n    if z1 > 0 and z2 > 0:\n        b = min(z1, z2)\n        z1 -= b\n        z2 -= b\n    if x1 > 0 and z2 > 0:\n        b = min(x1, z2)\n        x1 -= b\n        z2 -= b\n    if y1 > 0 and z2 > 0:\n        ans -= min(y1, z2) * 2\n    print(ans)", "import sys\nread = lambda : sys.stdin.readline().strip()\n\ndef getSum(x1, y1, z1, x2, y2, z2):\n    if z2 <= x1:\n        return min(z1, y2) * 2\n    else:\n        z2 = z2 - x1\n        x1 = 0\n        if z1 >= z2:\n            return min(z1 - z2, y2) * 2\n        else:\n            z2 = z2 - z1\n            z1 = 0\n            return -2 * min(y1, z2)\nfor _ in range(int(read())):\n    (x1, y1, z1) = map(int, read().split())\n    (x2, y2, z2) = map(int, read().split())\n    print(getSum(x1, y1, z1, x2, y2, z2))", "from sys import stdin\nip = stdin.readline\nfor _ in range(int(ip())):\n    (u, v, w) = map(int, ip().split())\n    (x, y, z) = map(int, ip().split())\n    ans = 0\n    vx = min(v, x)\n    v -= vx\n    x -= vx\n    uz = min(u, z)\n    u -= uz\n    z -= uz\n    wy = min(w, y)\n    w -= wy\n    y -= wy\n    ans += 2 * wy\n    if v >= z:\n        ans -= 2 * z\n    else:\n        ans -= 2 * v\n    print(ans)", "for _ in range(int(input())):\n    (x1, y1, z1) = map(int, input().split())\n    (x2, y2, z2) = map(int, input().split())\n    a = min(z1, y2)\n    y2 -= a\n    b = y1 - (x2 + y2)\n    print(2 * (a - b) if b > 0 else 2 * a)", "t = int(input())\nfor i in range(t):\n    sum1 = 0\n    (x1, y1, z1) = input().split()\n    x1 = int(x1)\n    y1 = int(y1)\n    z1 = int(z1)\n    (x2, y2, z2) = input().split()\n    x2 = int(x2)\n    y2 = int(y2)\n    z2 = int(z2)\n    if z1 >= y2:\n        sum1 = sum1 + 2 * y2\n        z1 = z1 - y2\n        y2 = 0\n        z2 = z2 - z1\n    else:\n        sum1 = sum1 + 2 * z1\n        y2 = y2 - z1\n        z1 = 0\n    if z2 > x1:\n        z2 = z2 - x1\n    else:\n        z2 = 0\n    if z2 >= y1:\n        sum1 = sum1 - 2 * y1\n    else:\n        sum1 = sum1 - 2 * z2\n    print(sum1)", "t = int(input())\nfor i in range(t):\n    (x1, y1, z1) = map(int, input().split())\n    (x2, y2, z2) = map(int, input().split())\n    Sum = 0\n    sub = 0\n    if z1 <= y2:\n        Sum = 2 * z1\n        z1 = 0\n    else:\n        Sum = 2 * y2\n        z1 = z1 - y2\n    if z1 + x1 <= z2:\n        z2 = z2 - (z1 + x1)\n        sub = 2 * z2\n    print(Sum - sub)", "def solve():\n    (x1, y1, z1) = map(int, input().split())\n    (x2, y2, z2) = map(int, input().split())\n    if z2 == 0:\n        return min(z1, y2) * 2\n    temp = min(x1, z2)\n    x1 -= temp\n    z2 -= temp\n    if x2 >= y1:\n        z2 = 0\n        y1 = 0\n        return min(y2, z1) * 2\n    y1 -= x2\n    if z1 >= z2:\n        z1 -= z2\n        return min(y2, z1) * 2\n    z2 -= z1\n    return min(z2, y1) * 2 * -1\nt = int(input())\nwhile t != 0:\n    res = solve()\n    print(res)\n    t -= 1", "t = int(input())\nans = []\nfor i in range(t):\n    (x1, y1, z1) = [int(i) for i in input().split()]\n    (x2, y2, z2) = [int(i) for i in input().split()]\n    totol = 0\n    total = 2 * min(z1, y2)\n    z1 -= min(z1, y2)\n    if z2 > x1 + z1:\n        total -= 2 * min(z2 - x1 - z1, y1)\n    ans.append(total)\nfor i in ans:\n    print(i)", "ls = []\nt = int(input())\nfor z in range(t):\n    count = 0\n    x = list(map(int, input().rstrip().split()))\n    y = list(map(int, input().rstrip().split()))\n    x2 = x[2]\n    y2 = y[2]\n    x1 = x[1]\n    y1 = y[1]\n    x0 = x[0]\n    y0 = y[0]\n    val2 = min(x2, y1)\n    count += 2 * val2\n    x2 -= val2\n    y1 -= val2\n    val2 = min(y2, x0)\n    x0 -= val2\n    y2 -= val2\n    val2 = min(y2, x2)\n    x2 -= val2\n    y2 -= val2\n    if y2 > 0:\n        count -= 2 * y2\n    ls.append(count)\nfor i in ls:\n    print(i)", "t = int(input())\nlista = []\nfor i in range(t):\n    summa = 0\n    (a0, a1, a2) = [int(q) for q in input().split()]\n    (b0, b1, b2) = [int(q) for q in input().split()]\n    summa += 2 * min(a2, b1) + -2 * max(0, b2 - (a0 + max(0, a2 - b1)))\n    lista.append(summa)\nfor i in lista:\n    print(i)", "from sys import stdin, stdout\nimport math, queue, heapq\nfastinput = stdin.readline\nfastout = stdout.write\nt = int(fastinput())\nwhile t:\n    t -= 1\n    (x, y, z) = map(int, fastinput().split())\n    (x1, y1, z1) = map(int, fastinput().split())\n    ans = 0\n    if x >= z1:\n        x -= z1\n        z1 = 0\n        ans += 2 * min(z, y1)\n        print(ans)\n    else:\n        z1 -= x\n        if z1 >= z:\n            z1 -= z\n            z = 0\n            print(-2 * z1)\n        else:\n            z -= z1\n            print(2 * min(z, y1))", "n = int(input())\nS = []\nfor i in range(n):\n    res = 0\n    (x1, y1, z1) = map(int, input().split())\n    (x2, y2, z2) = map(int, input().split())\n    p = min(z1, y2)\n    z1 -= p\n    y2 -= p\n    res += 2 * p\n    t = min(x1, z2)\n    x1 -= t\n    z2 -= t\n    if z2 > z1:\n        res = res - 2 * (z2 - z1)\n    S.append(res)\nfor k in S:\n    print(k)", "n = int(input(''))\narr1 = []\narr2 = []\nfor i in range(n):\n    arr1.append(list(map(int, input().split())))\n    arr2.append(list(map(int, input().split())))\nfor i in range(n):\n    t1 = arr1[i]\n    t2 = arr2[i]\n    [x1, y1, z1] = t1\n    [x2, y2, z2] = t2\n    s = 0\n    u2 = min(z1, y2)\n    s += u2 * 2\n    if u2 == z1:\n        u22 = min(z2, x1)\n        if u22 == x1:\n            s -= min(z2 - u22, y1) * 2\n    else:\n        l2 = z1 - u2\n        u2 = min(l2, z2)\n        if u2 == l2:\n            u0 = min(x1, z2 - u2)\n            if u0 == x1:\n                s -= (z2 - u2 - u0) * 2\n    print(s)", "l = []\nfor _ in range(int(input())):\n    (x1, y1, z1) = list(map(int, input().split()))\n    (x2, y2, z2) = list(map(int, input().split()))\n    c = 0\n    if z1 >= y2:\n        c = c + 2 * y2\n        z1 = z1 - y2\n        y2 = 0\n        if x1 + z1 >= z2:\n            l.append(c)\n        else:\n            l.append(c - 2 * min(z2 - z1 - x1, y1))\n    else:\n        c = c + 2 * z1\n        z1 = 0\n        y2 = y2 - z1\n        if z2 <= x1:\n            l.append(c)\n        else:\n            l.append(c - 2 * min(z2 - x1, y1))\nfor i in l:\n    print(i)", "from sys import stdin, stdout\nfrom collections import Counter\nfrom itertools import permutations\nimport bisect\nimport math\nI = lambda : map(int, stdin.readline().split())\nI1 = lambda : stdin.readline()\nfor _ in range(int(I1())):\n    (x1, y1, z1) = I()\n    (x2, y2, z2) = I()\n    x = min(z1, y2)\n    z1 -= x\n    y2 -= x\n    ans = x * 2\n    z2 -= min(z2, x1 + z1)\n    print(ans - z2 * 2)", "def ternary(a, b):\n    maxsum = 0\n    common = min(a[2], b[1])\n    a[2] -= common\n    b[1] -= common\n    maxsum += 2 * common\n    common = min(a[0], b[2])\n    a[0] -= common\n    b[2] -= common\n    common = min(a[2], b[2])\n    a[2] -= common\n    b[2] -= common\n    common = min(a[1], b[2])\n    a[1] -= common\n    b[2] -= common\n    maxsum -= 2 * common\n    return maxsum\n\ndef takeInput(a, b, testcases):\n    for i in range(testcases):\n        a.append(list(map(int, input().split())))\n        b.append(list(map(int, input().split())))\na = []\nb = []\ntestcases = int(input())\ntakeInput(a, b, testcases)\nfor i in range(testcases):\n    print(ternary(a[i], b[i]))", "def TernarySequence(a, b):\n    Total = 0\n    MaxPlus = min(a[2], b[1])\n    a[2] -= MaxPlus\n    b[1] -= MaxPlus\n    Total += MaxPlus * 2\n    MaxSubtraction = max(0, b[2] - a[2] - a[0])\n    Total -= MaxSubtraction * 2\n    return Total\nt = int(input())\nResult = list()\nfor i in range(t):\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    Result.append(TernarySequence(a, b))\nfor r in Result:\n    print(r)", "n = int(input())\nvalues_a = []\nvalues_b = []\n\ndef fa(x):\n    if x < 0:\n        return 0\n    else:\n        return x\nfor x in range(n):\n    (a, b, c) = map(int, input().split())\n    _tuple = (a, b, c)\n    values_a.append(_tuple)\n    (d, e, f) = map(int, input().split())\n    _tuple = (d, e, f)\n    values_b.append(_tuple)\nfor i in range(n):\n    max_sum = 2 * min(values_a[i][2], values_b[i][1])\n    min_sub = 2 * fa(values_b[i][2] - values_a[i][2] + min(values_a[i][2], values_b[i][1]) - values_a[i][0])\n    print(max_sum - min_sub)", "import sys\nimport bisect\ninput = sys.stdin.readline\nins = lambda : input().rstrip()\nini = lambda : int(input().rstrip())\ninm = lambda : map(int, input().rstrip().split())\ninl = lambda : list(map(int, input().split()))\nout = lambda x: print('\\n'.join(map(str, x)))\nans = []\nt = ini()\nfor _ in range(t):\n    a = inl()\n    b = inl()\n    x = min(a[2], b[1])\n    tmp = x * 2\n    a[2] -= x\n    b[1] -= x\n    x = min(b[2], a[2])\n    b[2] = max(0, b[2] - x)\n    a[2] = max(0, a[2] - x)\n    x = min(b[2], a[0])\n    b[2] = max(0, b[2] - x)\n    a[0] = max(0, a[0] - x)\n    tmp -= min(b[2], a[1]) * 2\n    ans.append(tmp)\nout(ans)", "def process(a, b, c, d, e, f):\n    s = 0\n    m2 = min(c, e)\n    s += 2 * m2\n    c -= m2\n    e -= m2\n    f -= c\n    f -= a\n    if f > 0:\n        s -= 2 * f\n    return s\n\ndef main():\n    n = int(input())\n    results = []\n    for i in range(n):\n        (f0, f1, f2) = list(map(int, input().split()))\n        (s0, s1, s2) = list(map(int, input().split()))\n        results.append(process(f0, f1, f2, s0, s1, s2))\n    for i in results:\n        print(i)\nmain()", "import sys\n\ndef Ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef Strs():\n    return map(str, sys.stdin.readline().strip().split())\n\ndef Array():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef Str():\n    return sys.stdin.readline().strip()\n\ndef Int():\n    return int(sys.stdin.readline().strip())\n\ndef MOD():\n    return 1000000007\nn = Int()\nfor i in range(n):\n    (a0, a1, a2) = Ints()\n    (b0, b1, b2) = Ints()\n    total = 0\n    if a2 != 0 and b1 != 0:\n        value = min(a2, b1)\n        total += 2 * value\n        a2 -= value\n        b1 -= value\n    if a2 != 0 and b2 != 0:\n        value = min(a2, b2)\n        a2 -= value\n        b2 -= value\n    if a1 != 0 and b1 != 0:\n        value = min(a1, b1)\n        a1 -= value\n        b1 -= value\n    if a0 != 0 and b2 != 0:\n        value = min(a0, b2)\n        a0 -= value\n        b2 -= value\n    if a1 != 0 and b0 != 0:\n        value = min(a1, b0)\n        a1 -= value\n        b0 -= value\n    if a1 != 0 and b2 != 0:\n        value = min(a1, b2)\n        total -= 2 * value\n        a1 -= value\n        b2 -= value\n    print(total)", "from collections import Counter, defaultdict, deque\nimport sys\ninput = sys.stdin.readline\n\ndef solve():\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    ans = 0\n    good = min(a[2], b[1])\n    a[2] -= good\n    ans += 2 * good\n    b[1] -= good\n    z = min(a[0], b[2])\n    b[2] -= z\n    a[0] -= z\n    t = min(a[2], b[2])\n    a[2] -= t\n    b[2] -= t\n    ans -= 2 * b[2]\n    print(ans)\ntt = int(input())\nfor test in range(tt):\n    solve()", "t = int(input())\nfor _ in range(t):\n    (x1, y1, z1) = map(int, input().split())\n    (x2, y2, z3) = map(int, input().split())\n    q = min(z1, y2)\n    cnt = 2 * q\n    z1 -= q\n    y2 -= q\n    w = min(x1, z3)\n    z3 -= w\n    x1 -= w\n    e = min(z1, z3)\n    z3 -= e\n    z1 -= e\n    if z3 > 0:\n        e = min(y1, z3)\n        cnt = cnt - 2 * e\n    print(cnt)", "cases = int(input())\nwhile cases:\n    cases -= 1\n    (zero, one, two) = map(int, input().split())\n    (zero2, one2, two2) = map(int, input().split())\n    ans = 0\n    two_mn = min(two, one2)\n    ans += two_mn * 2\n    one2 -= two_mn\n    two -= two_mn\n    rem = two2 - (two + zero)\n    ans -= max(rem, 0) * 2\n    print(ans)", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    (x, y, z) = map(int, input().split())\n    s = 2 * min(c, y)\n    q = c - min(c, y)\n    r = q + a\n    if z > r:\n        z = z - r\n    else:\n        z = 0\n    n = -2 * min(z, b)\n    print(s + n, end='\\n')", "for i in range(int(input())):\n    (x1, y1, z1) = map(int, input().split())\n    (x2, y2, z2) = map(int, input().split())\n    m = min(z1, y2)\n    z1 -= m\n    s = 2 * m\n    m = min(x1 + z1, z2)\n    z2 -= m\n    if z2 > 0:\n        s -= z2 * 2\n    print(s)", "t = int(input())\nfor i in range(t):\n    (a, b, c) = [int(k) for k in input().split()]\n    (x, y, z) = [int(k) for k in input().split()]\n    n = x + y + z\n    q = min(c, y)\n    q += min(n - b - q - z, 0)\n    print(q * 2)", "t = int(input())\nfor i in range(t):\n    (x1, y1, z1) = map(int, input().split())\n    (x2, y2, z2) = map(int, input().split())\n    s = 0\n    if z2 <= x1:\n        z2 = 0\n    else:\n        z2 = z2 - x1\n    if z1 >= y2:\n        z1 = z1 - y2\n        s = y2 * 2\n    else:\n        s = z1 * 2\n        z1 = 0\n    if z1 < z2:\n        z2 = z2 - z1\n        z1 = 0\n        s = s - z2 * 2\n    print(s)", "from math import *\nfrom math import factorial as fact, comb as ncr\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom collections import Counter as ctr\nfrom collections import deque as dq\nfrom array import array\nfrom re import search\nli = lambda : list(map(int, input().split()))\narr = lambda a: array('i', a)\nbi = lambda n: bin(n).replace('0b', '')\nyn = lambda f: print('NYOE S'[f::2])\nsbstr = lambda a, s: search('.*'.join(a), s)\n\ndef solve():\n    for _ in range(int(input())):\n        a = li()\n        b = li()\n        s = 0\n        p = min(a[2], b[1])\n        a[2] -= p\n        b[1] -= p\n        s += 2 * p\n        p = min(a[2], b[2])\n        a[2] -= p\n        b[2] -= p\n        p = min(a[0], b[2])\n        a[0] -= p\n        b[2] -= p\n        p = min(a[1], b[2])\n        s -= 2 * p\n        print(s)\nsolve()", "for _ in [0] * int(input()):\n    a = list(map(lambda x: int(x), input().split()))\n    b = list(map(lambda x: int(x), input().split()))\n    sum = 0\n    if a[2] >= b[1]:\n        a[2] -= b[1]\n        sum += 2 * b[1]\n        b[1] = 0\n    else:\n        b[1] -= a[2]\n        sum += 2 * a[2]\n        a[2] = 0\n    if a[2] >= b[2]:\n        a[2] -= b[2]\n        b[2] = 0\n    else:\n        b[2] -= a[2]\n        a[2] = 0\n    if b[2] >= a[0]:\n        b[2] -= a[0]\n        a[0] = 0\n    else:\n        b[2] = 0\n    if b[2] >= a[1]:\n        b[2] -= a[1]\n        sum -= 2 * a[1]\n    else:\n        sum -= 2 * b[2]\n        b[2] = 0\n    print(sum)", "import math\nfor i in range(0, int(input())):\n    (x1, y1, z1) = map(int, input().split())\n    (x2, y2, z2) = map(int, input().split())\n    min0 = min(x1, z2)\n    x1 -= min0\n    z2 -= min0\n    min0 = min(y1, x2)\n    y1 -= min0\n    x2 -= min0\n    min0 = min(y1, y2)\n    y1 -= min0\n    y2 -= min0\n    min1 = min(z1, y2)\n    z1 -= min1\n    y2 -= min1\n    min0 = min(z1, z2)\n    z1 -= min0\n    z2 -= min0\n    min2 = min(y1, z2)\n    print(2 * min1 - 2 * min2)", "t = int(input())\nfor _ in range(t):\n    (x0, x1, x2) = list(map(int, input().split()))\n    (y0, y1, y2) = list(map(int, input().split()))\n    r = 0\n    m = min(x0, y2)\n    x0 -= m\n    y2 -= m\n    m = min(x1, y0)\n    x1 -= m\n    y0 -= m\n    m = min(x2, y1)\n    x2 -= m\n    y1 -= m\n    r += 2 * m\n    r -= 2 * min(x1, y2)\n    print(r)", "iter = int(input())\nfor _ in range(iter):\n    (x1, y1, z1) = list(map(int, input().split(' ')))\n    (x2, y2, z2) = list(map(int, input().split(' ')))\n    ans = 0\n    ans += min(z1, y2) * 2\n    t = z1\n    z1 -= min(z1, y2)\n    y2 -= min(t, y2)\n    z2 -= min(z1, z2)\n    z2 -= min(z2, x1)\n    y1 -= min(y1, x2)\n    ans -= min(z2, y1) * 2\n    print(ans)", "for _ in range(int(input())):\n    (a, b, c) = map(int, input().split())\n    (d, e, f) = map(int, input().split())\n    print(min(c, e) * 2 - max(0, min(f - a - (c - min(c, e)), b)) * 2)", "def seq(l1, l2):\n    s = 0\n    m1 = min(l1[0], l2[2])\n    l1[0] -= m1\n    l2[2] -= m1\n    m2 = min(l1[1], l2[0])\n    l1[1] -= m2\n    l2[0] -= m2\n    m3 = min(l1[2], l2[1])\n    l1[2] -= m2\n    l2[1] -= m2\n    s += 2 * m3\n    m4 = min(l1[1], l2[2])\n    s -= 2 * m4\n    print(s)\nt = int(input())\nl = []\nfor i in range(t):\n    s1 = list(map(int, input().split()))\n    s2 = list(map(int, input().split()))\n    l.append([s1, s2])\nfor j in l:\n    seq(j[0], j[1])", "import sys\nfrom math import sqrt, gcd, ceil, log, floor\nfrom bisect import bisect, bisect_left\nfrom collections import defaultdict, Counter, deque\nfrom heapq import heapify, heappush, heappop\ninput = sys.stdin.readline\nread = lambda : list(map(int, input().strip().split()))\nMOD = 10 ** 9 + 7\n\ndef main():\n    ans_ = ''\n    for _ in range(int(input())):\n        (x1, y1, z1) = read()\n        (x2, y2, z2) = read()\n        ans = 0\n        ans += 2 * min(z1, y2)\n        z1 = max(0, z1 - min(z1, y2))\n        ans -= 2 * max(0, z2 - (x1 + z1))\n        ans_ += str(ans) + '\\n'\n    print(ans_)\nmain()", "cases = int(input())\nanswers = [0] * cases\nfor i in range(cases):\n    (a, b, c) = input().split()\n    (a0, a1, a2) = (int(a), int(b), int(c))\n    (a, b, c) = input().split()\n    (b0, b1, b2) = (int(a), int(b), int(c))\n    if a2 <= b1:\n        answers[i] += a2 * 2\n        b1 -= a2\n        a2 = 0\n    else:\n        answers[i] += b1 * 2\n        a2 -= b1\n        b1 = 0\n    temp = min(a1, b0)\n    a1 -= temp\n    b0 -= temp\n    temp = min(a0, b2)\n    a0 -= temp\n    b2 -= temp\n    if b2 <= a0:\n        a0 -= b2\n        b2 = 0\n    else:\n        b2 -= a0\n        a0 = 0\n    if b2 <= a2:\n        a2 -= b2\n        b2 = 0\n    else:\n        b2 -= a2\n        a2 = 0\n    answers[i] -= min(a1, b2) * 2\nfor i in range(cases):\n    print(answers[i])", "t = int(input())\nwhile t > 0:\n    (a, b, c) = map(int, input().split())\n    (x, y, z) = map(int, input().split())\n    ans = 0\n    minn = min(c, y)\n    ans += minn * 2\n    c -= minn\n    y -= minn\n    maxx = max(0, z - a - c)\n    ans -= maxx * 2\n    print(ans)\n    t -= 1", "t = int(input())\nfor _ in range(t):\n    (x1, y1, z1) = map(int, input().split())\n    (x2, y2, z3) = map(int, input().split())\n    q = min(z1, y2)\n    cnt = 2 * q\n    z1 -= q\n    y2 -= q\n    w = min(x1, z3)\n    z3 -= w\n    x1 -= w\n    e = min(z1, z3)\n    z3 -= e\n    z1 -= e\n    if z3 > 0:\n        e = min(y1, z3)\n        cnt = cnt - 2 * e\n    print(cnt)", "for t in range(int(input())):\n    (x1, y1, z1) = map(int, input().split())\n    (x2, y2, z2) = map(int, input().split())\n    sm = 0\n    two1 = min(z1, y2)\n    sm += 2 * two1\n    z1 -= two1\n    y2 -= two1\n    one0 = min(y1, x2)\n    y1 -= one0\n    x2 -= one0\n    one1 = min(y1, y2)\n    y1 -= one1\n    y2 -= one1\n    one2 = min(z2, y1)\n    sm -= 2 * one2\n    z2 -= one2\n    y1 -= one2\n    print(sm)", "for y in range(int(input())):\n    (a0, a1, a2) = map(int, input().split())\n    (b0, b1, b2) = map(int, input().split())\n    sum = 0\n    q = min(a0, b2)\n    a0 -= q\n    b2 -= q\n    p = min(a1, b0)\n    a1 -= p\n    b0 -= p\n    m = min(a2, b1)\n    sum += 2 * m\n    a2 -= m\n    b1 -= m\n    sum -= 2 * min(a1, b2)\n    print(sum)", "t = int(input())\nfor t1 in range(t):\n    (x0, x1, x2) = map(int, input().split())\n    (y0, y1, y2) = map(int, input().split())\n    m = min(x0, y2)\n    x0 -= m\n    y2 -= m\n    m = min(x1, y0)\n    x1 -= m\n    y0 -= m\n    m = min(x2, y1)\n    ans = 0\n    x2 -= m\n    y1 -= m\n    ans += 2 * m\n    ans -= 2 * min(x1, y2)\n    print(ans)", "import sys\n\ndef rs():\n    return sys.stdin.readline().rstrip()\n\ndef ri():\n    return int(sys.stdin.readline())\n\ndef ria():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef ws(s):\n    sys.stdout.write(s + '\\n')\n\ndef wi(n):\n    sys.stdout.write(str(n) + '\\n')\n\ndef wia(a):\n    sys.stdout.write(' '.join([str(x) for x in a]) + '\\n')\nimport math\nfrom collections import defaultdict\nfor _ in range(ri()):\n    (x, y, z) = ria()\n    (a, b, c) = ria()\n    k = min(z, b)\n    cnt = 2 * k\n    z -= k\n    b -= k\n    if z != 0:\n        k = min(z, c)\n        z -= k\n        c -= k\n    if z != 0:\n        k = min(z, a)\n        z -= k\n        c -= k\n    k = min(y, b)\n    y -= k\n    b -= k\n    if y != 0:\n        k = min(y, a)\n        y -= k\n        a -= k\n    if y != 0:\n        k = min(y, c)\n        cnt = cnt - 2 * k\n        y -= k\n        c -= k\n    print(cnt)", "def main():\n    for tt in range(int(input())):\n        (x0, x1, x2) = map(int, input().split())\n        (y0, y1, y2) = map(int, input().split())\n        k = min(x2, y1)\n        g = 0\n        if y2 > x0:\n            g = y2 - x0\n            if k == x2:\n                g = g\n            elif k < x2:\n                r = x2 - k\n                if r >= g:\n                    g = 0\n                else:\n                    g = g - r\n        print(k * 2 - g * 2)\nmain()", "import sys\ninput = sys.stdin.readline\nfrom collections import Counter\n\ndef read():\n    (X1, Y1, Z1) = map(int, input().strip().split())\n    (X2, Y2, Z2) = map(int, input().strip().split())\n    return (X1, Y1, Z1, X2, Y2, Z2)\n\ndef solve(X1, Y1, Z1, X2, Y2, Z2):\n    C = 0\n    m = min(Z1, Y2)\n    C += 2 * m\n    Z1 -= m\n    Y2 -= m\n    m = min(Z1, Z2)\n    Z1 -= m\n    Z2 -= m\n    m = min(Z1, X2)\n    Z1 -= m\n    X2 -= m\n    m = min(Y1, Y2)\n    Y1 -= m\n    Y2 -= m\n    m = min(Y1, X2)\n    Y1 -= m\n    X2 -= m\n    m = min(Y1, Z2)\n    C -= 2 * m\n    Y1 -= m\n    Z2 -= m\n    return C\nT = int(input().strip())\nfor t in range(T):\n    inputs = read()\n    print('%s' % solve(*inputs))", "from sys import stdin, stdout\nI = stdin.readline\nfor _ in range(int(I())):\n    a = list(map(int, I().split()))\n    b = list(map(int, I().split()))\n    temp = min(a[2], b[1])\n    ans = temp * 2\n    a[2] -= temp\n    b[1] -= temp\n    temp = min(a[2], b[2])\n    a[2] -= temp\n    b[2] -= temp\n    temp = min(a[0], b[2])\n    a[0] -= temp\n    b[2] -= temp\n    temp = min(a[1], b[2])\n    ans -= temp * 2\n    print(ans)", "import sys\n\ndef rs():\n    return sys.stdin.readline().rstrip()\n\ndef ri():\n    return int(sys.stdin.readline())\n\ndef ria():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef ws(s):\n    sys.stdout.write(s + '\\n')\n\ndef wi(n):\n    sys.stdout.write(str(n) + '\\n')\n\ndef wia(a):\n    sys.stdout.write(' '.join([str(x) for x in a]) + '\\n')\nimport math\nfrom collections import defaultdict\nfor _ in range(ri()):\n    (x, y, z) = ria()\n    (a, b, c) = ria()\n    k = min(z, b)\n    cnt = 2 * k\n    z -= k\n    b -= k\n    if z != 0:\n        k = min(z, c)\n        z -= k\n        c -= k\n    if z != 0:\n        k = min(z, a)\n        z -= k\n        c -= k\n    k = min(y, b)\n    y -= k\n    b -= k\n    if y != 0:\n        k = min(y, a)\n        y -= k\n        a -= k\n    if y != 0:\n        k = min(y, c)\n        cnt = cnt - 2 * k\n        y -= k\n        c -= k\n    print(cnt)", "import sys\nI = lambda : int(input())\nreadline = lambda : sys.stdin.readline().strip('\\n')\nRM = readgen = lambda : map(int, readline().split(' '))\nfor _ in range(I()):\n    (a, b) = ([*RM()], [*RM()])\n    summ = 0\n    minn = min(a[2], b[1])\n    a[2] -= minn\n    b[1] -= minn\n    summ += minn\n    minn = min(a[0], b[2])\n    a[0] -= minn\n    b[2] -= minn\n    minn = min(a[2], b[2])\n    a[2] -= minn\n    b[2] -= minn\n    minn = min(a[1], b[2])\n    a[2] -= minn\n    b[2] -= minn\n    summ -= minn\n    print(summ * 2)\nquit()\nfor _ in range(I()):\n    (n, k) = RM()\n    if n <= k:\n        print(k - n)\n    else:\n        print((n - k) % 2)", "t = int(input())\nwhile t > 0:\n    (x0, x1, x2) = map(int, input().split())\n    (y0, y1, y2) = map(int, input().split())\n    total = 0\n    m = min(x0, y2)\n    y2 -= m\n    m = min(x1, y0)\n    x1 -= m\n    m = min(x2, y1)\n    total += 2 * m\n    total -= 2 * min(x1, y2)\n    print(total)\n    t = t - 1", "t = int(input())\nwhile t > 0:\n    (x0, x1, x2) = map(int, input().split())\n    (y0, y1, y2) = map(int, input().split())\n    total = 0\n    a = min(x0, y2)\n    y2 -= a\n    b = min(x1, y0)\n    x1 -= b\n    m = min(x2, y1)\n    total += 2 * m\n    total -= 2 * min(x1, y2)\n    print(total)\n    t = t - 1", "for y in range(int(input())):\n    (a0, a1, a2) = map(int, input().split())\n    (b0, b1, b2) = map(int, input().split())\n    sum = 0\n    m = min(a2, b1)\n    sum += 2 * m\n    a2 -= m\n    b1 -= m\n    p = min(a1, b0)\n    a1 -= p\n    b0 -= p\n    q = min(a0, b2)\n    a0 -= q\n    b2 -= q\n    sum -= 2 * min(a1, b2)\n    print(sum)", "for _ in range(int(input())):\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    x = 2 * min(b[1], a[2])\n    y = a[0] + (a[2] - min(b[1], a[2]))\n    if b[2] <= y:\n        print(x)\n    else:\n        print(x - 2 * (b[2] - y))", "import sys\ninp = sys.stdin.readline\nfor n in range(int(input())):\n    (x, y, z) = map(int, input().split())\n    (x1, y1, z1) = map(int, input().split())\n    ans = 0\n    if x >= z1:\n        x -= z1\n        z1 = 0\n    else:\n        z1 -= x\n        x = 0\n    if y >= x1:\n        y -= x1\n        x1 = 0\n    else:\n        x1 -= y\n        y = 0\n    if z >= y1:\n        z -= y1\n        ans += 2 * y1\n        y1 = 0\n    else:\n        y1 -= z\n        ans += 2 * z\n        z = 0\n    if y >= z1:\n        y -= z1\n        ans += -2 * z1\n    else:\n        z1 -= y\n        ans += -2 * y\n    print(ans)", "for _ in range(int(input())):\n    (x1, y1, z1) = map(int, input().split())\n    (x2, y2, z2) = map(int, input().split())\n    s = 0\n    s += min(z1, y2) * 2\n    z1 -= s // 2\n    y2 -= s // 2\n    s -= max(z2 - z1 - x1, 0) * 2\n    print(s)", "import math\n\ndef main():\n    (one, two, three) = map(int, input().split())\n    (one1, two2, three3) = map(int, input().split())\n    sm = 0\n    dif = min(two2, three)\n    sm += 2 * dif\n    three -= dif\n    two2 -= dif\n    if three + one > 0:\n        three3 = max(0, three3 - (three + one))\n    sm -= three3 * 2\n    print(sm)\nt = int(input())\nfor i in range(t):\n    main()"]