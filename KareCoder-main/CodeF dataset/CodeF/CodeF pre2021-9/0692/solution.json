["(n, m, k) = map(int, input().split())\nif k > 4 * n * m - 2 * n - 2 * m:\n    print('NO')\n    exit(0)\nelse:\n    print('YES')\nj = 1\nans = []\nif m - 1 > 0:\n    ans.append((m - 1, 'R'))\n    ans.append((m - 1, 'L'))\nwhile j < n:\n    ans.append((1, 'D'))\n    j += 1\n    if m - 1 > 0:\n        ans.append((m - 1, 'R'))\n    if m - 1 > 0:\n        ans.append((m - 1, 'UDL'))\nif n - 1 > 0:\n    ans.append((n - 1, 'U'))\nanswer = []\nL = 0\ni = 0\nwhile L < k:\n    if k - L >= ans[i][0] * len(ans[i][1]):\n        answer.append(ans[i])\n        L += ans[i][0] * len(ans[i][1])\n        i += 1\n    else:\n        break\nif k != L:\n    if (k - L) // len(ans[i][1]) != 0:\n        answer.append(((k - L) // len(ans[i][1]), ans[i][1]))\n    L += (k - L) // len(ans[i][1]) * len(ans[i][1])\n    if k != L:\n        answer.append((1, ans[i][1][:k - L]))\nprint(len(answer))\nfor i in answer:\n    print(*i)", "import sys\n(n, m, k) = map(int, input().split())\nsave_k = k\nif k > 4 * n * m - 2 * n - 2 * m:\n    print('NO')\n    sys.exit()\narr = []\nfor i in ['R', 'L']:\n    if k < 1:\n        break\n    arr.append((m - 1, i))\n    k -= m - 1\nfor i in range(n - 1):\n    if k < 1:\n        break\n    arr.append((1, 'D'))\n    arr.append((m - 1, 'R'))\n    arr.append((m - 1, 'UDL'))\n    k -= 4 * m - 3\nif k > 0:\n    arr.append((k, 'U'))\nk = save_k\nans = []\nfor (i, j) in arr:\n    if i == 0:\n        continue\n    if k > i * len(j):\n        ans.append((i, j))\n        k -= i * len(j)\n        continue\n    if k // len(j) != 0:\n        ans.append((k // len(j), j))\n    if k % len(j) != 0:\n        ans.append((1, j[:k % len(j)]))\n    break\nprint(f'YES\\n{len(ans)}')\nfor (i, j) in ans:\n    print(i, j)"]