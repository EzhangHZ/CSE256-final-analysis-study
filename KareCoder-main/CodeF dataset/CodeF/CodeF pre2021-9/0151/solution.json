["import sys\ndata = [int(x) for x in sys.stdin.read().strip().split('\\n')]\ntable = [0] * 50\ni = 1\nj = 1\nfor z in range(50):\n    i = i + 2 ** j\n    table[z] = i\n    j += 1\nfor x in data[1:]:\n    for y in table:\n        if x % y == 0:\n            print(x // y)\n            break", "from cmath import log\nimport sys, threading\ninput = sys.stdin.readline\n\ndef print(*args, end='\\n', sep=' ') -> None:\n    sys.stdout.write(sep.join(map(str, args)) + end)\n\ndef Solve():\n    solved = dict()\n    for t in range(int(input())):\n        n = int(input())\n        if n not in solved.keys():\n            for i in range(2, n):\n                x = n / (2 ** i - 1)\n                if int(x) == x:\n                    print(int(x))\n                    solved[n] = int(x)\n                    break\n        else:\n            print(solved[n])\nthreading.stack_size(10 ** 5)\nthreading.Thread(target=Solve).start()", "for s in [*open(0)][1:]:\n    n = int(s)\n    k = 3\n    while n % k:\n        k = k * 2 + 1\n    print(n // k)", "ans = []\nsms = [2 ** k - 1 for k in range(2, 30)]\nfor _ in range(int(input())):\n    n = int(input())\n    for x in sms:\n        if n % x == 0:\n            ans.append(int(n / x))\n            break\nfor a in ans:\n    print(a)", "for s in [*open(0)][1:]:\n    (n, k) = (int(s), 3)\n    while n % k:\n        k -= ~k\n    print(n // k)", "import sys\ndata = [int(x) for x in sys.stdin.read().strip().split('\\n')]\ntable = [0] * 100\ni = 1\nj = 1\nfor z in range(100):\n    i = i + 2 ** j\n    table[z] = i\n    j += 1\nfor x in data[1:]:\n    for y in table:\n        if x % y == 0:\n            print(x // y)\n            break", "import sys\ndata = [int(x) for x in sys.stdin.read().strip().split('\\n')]\ntable = [0] * 30\ni = 1\nj = 1\nfor z in range(30):\n    i = i + 2 ** j\n    table[z] = i\n    j += 1\nfor x in data[1:]:\n    for y in table:\n        if x % y == 0:\n            print(x // y)\n            break", "ks = [2 ** i - 1 for i in range(2, 30)]\no = []\nfor i in [0] * int(input()):\n    n = int(input())\n    for j in ks:\n        if n % j == 0:\n            o.append(int(n / j))\n            break\n[print(i) for i in o]", "inputs = []\noutputs = []\nk_max = 100\nj_old = -1\nfor _ in range(int(input())):\n    inputs.append(int(input()))\n\ndef find_k(k):\n    if k >= 0:\n        result = 2 ** k + find_k(k - 1)\n    else:\n        result = 0\n    return result\nfor j in inputs:\n    if j != j_old:\n        for i in range(1, k_max):\n            x = j / find_k(i)\n            if int(x) == x:\n                print(int(x))\n                break\n        j_old = j\n    else:\n        print(int(x))", "t = int(input())\nres = []\ni = 1\nind = []\nwhile i <= 10 ** 9:\n    ind.append(i)\n    i *= 2\npref = []\nfor i in range(len(ind)):\n    if i == 0:\n        pref.append(ind[i])\n        continue\n    pref.append(ind[i] + pref[i - 1])\npref.pop(0)\nfor j in range(t):\n    n = int(input())\n    for el in pref:\n        if n % el == 0:\n            res.append(n // el)\n            break\nfor el in res:\n    print(el)", "for s in [*open(0)][1:]:\n    (n, k) = (int(s), 3)\n    while n % k:\n        k = k - ~k\n    print(n // k)", "for s in [*open(0)][1:]:\n    (n, k) = (int(s), 3)\n    while n % k:\n        k -= ~k\n    print(n // k)", "for s in [*open(0)][1:]:\n    (n, k) = (int(s), 3)\n    while n % k:\n        k -= ~k\n    print(n // k)", "for h in [*open(0)][1:]:\n    (n, k) = (int(h), 3)\n    while n % k:\n        k -= ~k\n    print(n // k)", "for s in [*open(0)][1:]:\n    (n, k) = (int(s), 3)\n    while n % k:\n        k -= ~k\n    print(n // k)", "for s in [*open(0)][1:]:\n    (n, k) = (int(s), 3)\n    while n % k:\n        k -= ~k\n    print(n // k)", "import sys\ndata = [int(x) for x in sys.stdin.read().strip().split('\\n')]\ntable = [0] * 1000\ni = 1\nj = 1\nfor z in range(1000):\n    i = i + 2 ** j\n    table[z] = i\n    j += 1\nfor x in data[1:]:\n    for y in table:\n        if x % y == 0:\n            print(x // y)\n            break", "for s in [*open(0)][1:]:\n    (n, k) = (int(s), 3)\n    while n % k:\n        k -= ~k\n    print(n // k)", "for s in [*open(0)][1:]:\n    (n, k) = (int(s), 3)\n    while n % k:\n        k -= ~k\n    print(n // k)", "inputs = []\noutputs = []\nk_max = 100\nj_old = -1\nfor _ in range(int(input())):\n    inputs.append(int(input()))\n\ndef find_k(k):\n    if k >= 0:\n        result = 2 ** k + find_k(k - 1)\n    else:\n        result = 0\n    return result\nfor j in inputs:\n    if j != j_old:\n        for i in range(1, k_max):\n            x = j / find_k(i)\n            if int(x) == x:\n                print(int(x))\n                break\n        j_old = j\n    else:\n        print(int(x))", "for s in [*open(0)][1:]:\n    (n, k) = (int(s), 3)\n    while n % k:\n        k -= ~k\n    print(n // k)", "for s in [*open(0)][1:]:\n    (n, k) = (int(s), 3)\n    while n % k:\n        k -= ~k\n    print(n // k)", "for s in [*open(0)][1:]:\n    (n, k) = (int(s), 3)\n    while n % k:\n        k -= ~k\n    print(n // k)", "for s in [*open(0)][1:]:\n    (n, k) = (int(s), 3)\n    while n % k:\n        k -= ~k\n    print(n // k)", "for s in [*open(0)][1:]:\n    (n, k) = (int(s), 3)\n    while n % k:\n        k -= ~k\n    print(n // k)", "for s in [*open(0)][1:]:\n    (n, k) = (int(s), 3)\n    while n % k:\n        k -= ~k\n    print(n // k)", "t = int(input())\na = []\nfor i in range(t):\n    a.append(int(input()))\nb = []\nfor j in range(2, 500):\n    b.append(2 ** j - 1)\nfor i in range(t):\n    summ = a[i]\n    for elem in b:\n        if summ % elem == 0:\n            print(summ // elem)\n            break", "import sys\n\ndef f(x, k):\n    su = 0\n    ii = 1\n    for i in range(k):\n        su += x * ii\n        ii = ii * 2\n    return su\ns = []\nfor i in range(28):\n    s.append(f(1, i + 2))\ndata = list(map(int, sys.stdin.readlines()))\nfor i in range(data[0]):\n    ip = data[i + 1]\n    for j in range(28):\n        if not ip % s[j]:\n            print(ip // s[j])\n            break", "for s in [*open(0)][1:]:\n    n = int(s)\n    k = 3\n    while n % k:\n        k = k * 2 + 1\n    print(n // k)", "for s in [*open(0)][1:]:\n    n = int(s)\n    k = 3\n    while n % k:\n        k = k * 2 + 1\n    print(n // k)", "import sys\ninput = sys.stdin.readline\ninputLines = sys.stdin.readlines\n\ndef readIntList():\n    return list(map(int, input().split()))\n\ndef readStrList():\n    return list(map(lambda x: x.strip(), inputLines()))\n\ndef indexOf(l: list, elem):\n    return l.index(elem) if elem in l else -1\n\ndef lastIndexOf(l: list, elem):\n    indexes = [idx for (idx, val) in enumerate(l) if val == elem]\n    return max(indexes) if len(indexes) > 0 else -1\n\ndef distinct(l: list):\n    used = set()\n    return [x for x in l if x not in used and (used.add(x) or True)]\n\ndef solution():\n    for _ in range(int(input())):\n        n = int(input())\n        m = 3\n        z = 4\n        while True:\n            if n % m == 0:\n                print(int(n / m))\n                break\n            m += z\n            z *= 2\nsolution()", "for s in [*open(0)][1:]:\n    (n, k) = (int(s), 3)\n    while n % k:\n        k -= ~k\n    print(n // k)", "for s in [*open(0)][1:]:\n    (n, k) = (int(s), 3)\n    while n % k:\n        k -= ~k\n    print(n // k)", "for s in [*open(0)][1:]:\n    (n, k) = (int(s), 3)\n    while n % k:\n        k -= ~k\n    print(n // k)", "for s in [*open(0)][1:]:\n    (n, k) = (int(s), 3)\n    while n % k:\n        k -= ~k\n    print(n // k)", "t = int(input())\nst = []\nfor i in range(1, 31):\n    st.append(2 ** (i + 1) - 1)\nl = []\nfor i in range(t):\n    n = int(input())\n    i = 0\n    while n % st[i] != 0:\n        i += 1\n    l.append(n // st[i])\nprint('\\n'.join(map(str, l)))", "for s in [*open(0)][1:]:\n    (n, k) = (int(s), 3)\n    while n % k:\n        k -= ~k\n    print(n // k)", "for s in [*open(0)][1:]:\n    (n, k) = (int(s), 3)\n    while n % k:\n        k -= ~k\n    print(n // k)", "t = int(input())\nc = []\nfor x in range(t):\n    c.append(int(input()))\nq = []\nfor x in range(2, 31):\n    q.append(2 ** x - 1)\nfor x in range(len(c)):\n    for y in range(31):\n        if c[x] % q[y] == 0:\n            print(c[x] // q[y])\n            break", "import math\nimport sys\nfrom collections import *\ninput = sys.stdin.readline\n\ndef solve(num):\n    i = 4\n    while i - 1 <= num:\n        if num % (i - 1) == 0:\n            print(num // (i - 1))\n            return\n        else:\n            i = i * 2\ntest = int(input())\nwhile test:\n    test = test - 1\n    num = int(input())\n    solve(num)", "for r in [*open(0)][1:]:\n    (n, k) = (int(r), 3)\n    while n % k:\n        k -= ~k\n    print(n // k)", "a = [2 ** i - 1 for i in range(2, 31)]\nt = int(input())\nb = []\nfor i in range(t):\n    x = int(input())\n    count = 0\n    while x >= a[count]:\n        if x % a[count] == 0:\n            b.append(x // a[count])\n            break\n        count += 1\nprint(*b, sep='\\n')", "for s in [*open(0)][1:]:\n    (n_sravya_18, k) = (int(s), 3)\n    while n_sravya_18 % k:\n        k -= ~k\n    print(n_sravya_18 // k)", "for s in [*open(0)][1:]:\n    (n, k) = (int(s), 3)\n    while n % k:\n        k -= ~k\n    print(n // k)", "for s in [*open(0)][1:]:\n    (n, k) = (int(s), 3)\n    while n % k:\n        k -= ~k\n    print(n // k)", "for s in [*open(0)][1:]:\n    (n, k) = (int(s), 3)\n    while n % k:\n        k -= ~k\n    print(n // k)", "from sys import stdin\ninput = stdin.readline\n\ndef solve(n: int) -> int:\n    k = 3\n    while True:\n        if n % k == 0:\n            return n // k\n        k = k * 2 + 1\nt = int(input())\nfor i in range(t):\n    print(solve(int(input())))", "lim = 1000000000.0\na = []\n(k, sum) = (1, 1)\nwhile sum + pow(2, k) <= lim:\n    sum += pow(2, k)\n    a.append(sum)\n    k += 1\n\ndef solve():\n    n = int(input())\n    for i in a:\n        if n % i == 0:\n            print(n // i)\n            return\nt = int(input())\nfor i in range(t):\n    solve()", "def solve(n):\n    k = 2\n    while True:\n        if n % (2 ** k - 1) == 0:\n            return int(n / (2 ** k - 1))\n        k += 1\nt = int(input())\nresult = list()\nfor _ in range(t):\n    n = int(input())\n    result.append(solve(n))\nfor i in result:\n    print(i)", "t = int(input())\nwhile t != 0:\n    t -= 1\n    x = int(input())\n    a = 3\n    while x % a != 0:\n        a = (a + 1) * 2 - 1\n    print(x // a)", "t = int(input())\nlist_ans = []\nfor i in range(t):\n    s = int(input())\n    for x in range(2, 36):\n        if s % (2 ** x - 1) == 0:\n            list_ans.append(int(s / (2 ** x - 1)))\n            break\nfor item in list_ans:\n    print(item)", "t = int(input())\nlist_ans = []\nfor i in range(t):\n    s = int(input())\n    for x in range(2, 36):\n        if s % (2 ** x - 1) == 0:\n            list_ans.append(int(s / (2 ** x - 1)))\n            break\nfor item in list_ans:\n    print(item)", "ans = []\nfor _ in range(int(input())):\n    n = int(input())\n    for k in range(2, 30):\n        if n % (2 ** k - 1) == 0:\n            ans.append(int(n / (2 ** k - 1)))\n            break\nfor a in ans:\n    print(a)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    x = 1\n    while True:\n        x = x << 1\n        x += 1\n        if n % x == 0:\n            print(n // x)\n            break", "for _ in range(int(input())):\n    n = int(input())\n    y = 3\n    while n % y != 0:\n        y = 1 + y * 2\n    print(n // y)", "n = int(input())\nfor _ in range(n):\n    a = int(input())\n    dziel = 3\n    while a % dziel != 0:\n        dziel = dziel * 2 + 1\n    print(int(a / dziel))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    for i in range(2, 30):\n        val = (1 << i) - 1\n        if n % val == 0:\n            print(n // val)\n            break", "def f():\n    T = int(input())\n    for _ in range(T):\n        n = int(input())\n        for k in range(2, 30):\n            divider = 2 ** k - 1\n            if n % divider == 0:\n                result = n // divider\n                print(result)\n                break\nf()", "for i in range(int(input())):\n    n = int(input())\n    a = 2\n    xs = 3\n    while n % xs != 0:\n        a *= 2\n        xs += a\n    print(n // xs)", "t = int(input())\nn = []\nfor i in range(t):\n    n = int(input())\n    ans = 3\n    while n % ans != 0:\n        ans += ans + 1\n    print(n // ans)", "def main():\n    t = int(input())\n    for i in range(t):\n        z = 1\n        n = int(input())\n        for i in range(1, n):\n            z += 2 ** i\n            if n % z == 0:\n                print(int(n / z))\n                break\n            else:\n                continue\nmain()", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n = int(input())\n    for i in range(2, 30):\n        if n % (2 ** i - 1) == 0:\n            x = int(n / (2 ** i - 1))\n            break\n    print(x)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    f = 2\n    num = 3\n    while n % num != 0:\n        f *= 2\n        num += f\n    print(n // num)", "n = int(input())\nlist = []\nfor e in range(n):\n    num = int(input())\n    k = 3\n    while k:\n        value = 2 ** (k - 1) - 1\n        if num % value == 0:\n            x = num // value\n            list.append(str(x))\n            break\n        k += 1\nprint('\\n'.join(list))", "from cmath import log\nimport sys, threading\ninput = sys.stdin.readline\n\ndef print(*args, end='\\n', sep=' ') -> None:\n    sys.stdout.write(sep.join(map(str, args)) + end)\n\ndef Solve():\n    for t in range(int(input())):\n        n = int(input())\n        for i in range(2, n):\n            x = n / (2 ** i - 1)\n            if int(x) == x:\n                print(int(x))\n                break\nthreading.stack_size(10 ** 5)\nthreading.Thread(target=Solve).start()", "n = int(input())\nans = []\nfor i in range(n):\n    ele = int(input())\n    for i in range(2, 40):\n        pw = 2 ** i - 1\n        if ele % pw == 0:\n            k = ele / pw\n            ans.append(int(k))\n            break\nfor ele in ans:\n    print(ele, end='\\n')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    p = 2\n    s = 3\n    while n % s != 0:\n        p *= 2\n        s += p\n    print(n // s, '\\n')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    k = 2\n    s = 3\n    while n % s != 0:\n        k *= 2\n        s += k\n    print(n // s)", "for _ in range(int(input())):\n    number = int(input())\n    x = 4\n    total = 3\n    while number % total != 0:\n        total += x\n        x <<= 1\n    print(number // total)", "t = int(input())\nanswers = []\nfor f in range(t):\n    n = int(input())\n    for k in range(2, int(100000000.0)):\n        p = 2 ** k - 1\n        if n % p == 0:\n            answers.append(int(n / p))\n            break\nfor answer in answers:\n    print(answer)", "MOD = 10 ** 9 + 7\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 9)\n\ndef main():\n    test = int(input())\n    for iteration in range(test):\n        n = int(input())\n        for i in range(2, 31):\n            wh = 2 ** i - 1\n            if n % wh == 0:\n                print(n // wh)\n                break\nmain()", "pow = [1]\nfor i in range(1, 31):\n    pow.append(pow[-1] + 2 ** i)\nfor i in range(int(input())):\n    n = int(input())\n    for j in pow[1:]:\n        if n % j == 0:\n            print(n // j)\n            break", "vals = []\nfor k in range(70):\n    vals.append(2 ** k)\nfor i in range(1, len(vals)):\n    vals[i] = vals[i] + vals[i - 1]\nvals = vals[1:]\nfor _ in range(int(input())):\n    n = int(input())\n    for i in vals:\n        if n % i == 0:\n            print(n // i)\n            break", "t = int(input())\nseries = [2 ** k - 1 for k in range(2, 50) if 2 ** k - 1 <= 10 ** 9]\nfor tt in range(t):\n    n = int(input())\n    for s in series:\n        if n % s == 0:\n            print(n // s)\n            break", "times = int(input())\nans = []\nfor i in range(times):\n    num = int(input())\n    div = 3\n    for k in range(100):\n        if num % div == 0:\n            ans.append(num / div)\n            break\n        else:\n            div = div * 2 + 1\nfor i in ans:\n    print(int(i))", "import math\na = []\nfor i in range(2, 30):\n    a.append(2 ** i - 1)\nfor _ in range(int(input())):\n    n = int(input())\n    for k in a:\n        if n % k == 0:\n            print(n // k)\n            break", "from sys import stdin, exit, setrecursionlimit\nfrom collections import deque\nsetrecursionlimit(10000000)\ninput = stdin.readline\nlmi = lambda : list(map(int, input().split()))\nmi = lambda : map(int, input().split())\nsi = lambda : input().strip('\\n')\nssi = lambda : input().strip('\\n').split()\npowers = [1]\nfor i in range(32):\n    powers.append(powers[-1] * 2)\nfor _ in range(int(input())):\n    a = int(input())\n    for i in range(2, 33):\n        if a % (powers[i] - 1) == 0:\n            print(a // (powers[i] - 1))\n            break", "t = int(input())\ntmp = []\nx = 1\nsum_x = 1\nfor i in range(0, 32):\n    x *= 2\n    sum_x += x\n    tmp.append(sum_x)\nfor i in range(0, t):\n    n = int(input())\n    for s in tmp:\n        if n % s == 0:\n            print(n // s)\n            break", "def main():\n    t = int(input())\n    for turn in range(t):\n        n = int(input())\n        k = 2\n        x = 1\n        l = True\n        while l:\n            x += k\n            if n % x == 0:\n                print(n // x)\n                l = False\n            else:\n                k *= 2\n    return 0\nmain()", "l = []\ni = 2\nn = 4\nwhile n <= 1000000000:\n    l.append(n - 1)\n    i += 1\n    n *= 2\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    for i in l:\n        if n % i == 0:\n            print(n // i)\n            break\n    t -= 1", "l = []\ni = 2\nn = 4\nwhile n <= 1000000000:\n    l.append(n - 1)\n    i += 1\n    n *= 2\nt = int(input())\nwhile t > 0:\n    n = int(input())\n    for i in l:\n        if n % i == 0:\n            print(n // i)\n            break\n    t -= 1", "def read_int():\n    return int(input().strip())\n\ndef read_ints():\n    return list(map(int, input().strip().split(' ')))\n\ndef solve():\n    n = read_int()\n    p = 4\n    while n % (p - 1) != 0:\n        p *= 2\n    return n // (p - 1)\nT = read_int()\nfor _ in range(T):\n    print(solve())", "a = [3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767, 65535, 131071, 262143, 524287, 1048575, 2097151, 4194303, 8388607, 16777215, 33554431, 67108863, 134217727, 268435455, 536870911]\nfor _ in range(int(input())):\n    n = int(input())\n    for i in a:\n        if n % i == 0:\n            print(n // i)\n            break", "a = [2 ** k - 1 for k in range(2, 31)]\nt = int(input())\nfor tc in range(t):\n    n = int(input())\n    flag = False\n    for ele in a:\n        if n % ele == 0:\n            ans = n // ele\n            flag = True\n            break\n    print(ans)", "k = 1\na = []\nwhile 2 ** k < 10 ** 9:\n    k += 1\n    a.append(2 ** k - 1)\nt = int(input())\nfor i in range(t):\n    p = int(input())\n    for j in a:\n        if p % j == 0:\n            g = p / j\n            break\n    print(int(g))", "dp = []\nx = 2\nwhile x <= 10 ** 9:\n    x *= 2\n    dp.append(x - 1)\nfor _ in range(int(input())):\n    n = int(input())\n    for y in dp:\n        if n % y == 0:\n            print(n // y)\n            break", "def candies(num):\n    i = 1\n    k = 2\n    while True:\n        i = i + k\n        if num % i == 0:\n            return num // i\n        k *= 2\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print(candies(n))", "x = [2 ** i - 1 for i in range(2, 30)]\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    for j in x:\n        if n % j == 0:\n            print(n // j)\n            break", "def solve():\n    n = int(input())\n    s = 1\n    t = 2\n    for _ in range(40):\n        s += t\n        if n % s == 0:\n            return n // s\n        t *= 2\n\ndef main():\n    for _ in range(int(input())):\n        print(solve())\nmain()", "def testCase(n):\n    multi = 4\n    div = 3\n    while n % div != 0:\n        div += multi\n        multi *= 2\n    return n // div\n\ndef main():\n    t = int(input())\n    while t > 0:\n        n = int(input())\n        print(testCase(n))\n        t -= 1\nmain()", "import sys, os.path\nsys.setrecursionlimit(10 ** 5)\n\ndef i():\n    return sys.stdin.readline().strip()\n\ndef ii():\n    return int(sys.stdin.readline())\n\ndef li():\n    return list(sys.stdin.readline().strip())\n\ndef mii():\n    return map(int, sys.stdin.readline().split())\n\ndef lii():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef solve():\n    a = ii()\n    for k in range(2, 30):\n        if a % (2 ** k - 1) == 0:\n            print(int(a / (2 ** k - 1)))\n            return False\nfor _ in range(ii()):\n    solve()", "t = int(input())\nl = [3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767, 65535, 131071, 262143, 524287, 1048575, 2097151, 4194303, 8388607, 16777215, 33554431, 67108863, 134217727, 268435455, 536870911]\nfor i in range(t):\n    n = int(input())\n    if n in l:\n        print(1)\n    else:\n        for i in l:\n            if n % i == 0:\n                print(n // i)\n                break", "n = int(input())\nsquares = [3]\nfor i in range(2, 31):\n    squares.append(squares[-1] + 2 ** i)\nfor i in range(n):\n    tmp = int(input())\n    for sq in squares:\n        if tmp % sq == 0:\n            print(int(tmp / sq))\n            break", "n = int(input())\nsquares = []\nfor i in range(2, 31):\n    squares.append(2 ** i - 1)\nfor i in range(n):\n    tmp = int(input())\n    for sq in squares:\n        if tmp % sq == 0:\n            print(int(tmp / sq))\n            break", "t = int(input())\n\ndef f(k):\n    s = 1\n    if k == 1:\n        return s\n    s = 2 * f(k - 1) + 1\n    return s\na = []\nfor i in range(2, 30):\n    a.append(f(i))\nfor i in range(t):\n    n = int(input())\n    if n in a:\n        print(1)\n    else:\n        j = 0\n        while n % a[j] != 0:\n            j += 1\n        else:\n            print(n // a[j])", "import math\nt = int(input())\nres = []\nfor i in range(t):\n    n = int(input())\n    k = 2\n    while True:\n        s = 2 ** k - 1\n        if n % s == 0:\n            res.append(n // s)\n            break\n        k += 1\nfor i in res:\n    print(i)", "t = int(input())\nif 1 <= t <= 10 ** 9:\n    for temporary in range(t):\n        n = int(input())\n        unknown = 3\n        for a in range(2, 10 ** 5):\n            if n % unknown == 0:\n                x = n / unknown\n                print(int(x))\n                break\n            unknown = unknown * 2 + 1", "import sys\nimport math\n\ndef scan(input_type='int'):\n    if input_type == 'int':\n        return list(map(int, sys.stdin.readline().strip().split()))\n    else:\n        return list(map(str, sys.stdin.readline().strip()))\n\ndef solution():\n    for _ in range(int(input())):\n        n = int(input())\n        i = 4\n        while True:\n            x = n / (i - 1)\n            y = n // (i - 1)\n            i *= 2\n            if x == y:\n                break\n        print(y)\nsolution()", "viuu = []\nans = 1\nfor i in range(1, 30):\n    ans += 2 ** i\n    viuu.append(ans)\nm = int(input())\nfor i in range(m):\n    n = int(input())\n    for j in range(29):\n        if n % viuu[j] == 0:\n            print(n // viuu[j])\n            break", "for _ in range(int(input())):\n    k = 1\n    n = int(input())\n    while 1:\n        k = k * 2 + 1\n        if n % k == 0:\n            print(n // k)\n            break"]