["import sys\n\ndef read_input(input_path=None):\n    if input_path is None:\n        f = sys.stdin\n    else:\n        f = open(input_path, 'r')\n    (a, b, c, d) = map(int, f.readline().split())\n    return (a, b, c, d)\n\ndef f(x):\n    if x < 1:\n        return 0\n    else:\n        return x * (x + 1) * (x + 2) // 6\n\ndef sol(a, b, c, d):\n    ans = (a + 2 * b - c) * (b + 1 - a) * (c + 1 - b) // 2 + f(c - a - b) - f(c - 2 * b - 1) - f(b + c - d - 1) + f(a + c - d - 2) + f(2 * b - d - 2) - f(a + b - d - 3)\n    return [f'{ans}']\n\ndef solve(input_path=None):\n    return sol(*read_input(input_path))\n\ndef main():\n    for line in sol(*read_input()):\n        print(f'{line}')\nmain()", "[a, b, c, d] = input().split(' ')\na = int(a)\nb = int(b)\nc = int(c)\nd = int(d)\n\ndef f(x):\n    if x < 1:\n        return 0\n    else:\n        return x * (x + 1) * (x + 2) // 6\nprint((a + 2 * b - c) * (b + 1 - a) * (c + 1 - b) // 2 + f(c - a - b) - f(c - 2 * b - 1) - f(b + c - d - 1) + f(a + c - d - 2) + f(2 * b - d - 2) - f(a + b - d - 3))", "[a, b, c, d] = input().split(' ')\na = int(a)\nb = int(b)\nc = int(c)\nd = int(d)\nans = (a + 2 * b - c) * (b + 1 - a) * (c + 1 - b) // 2\nif a + b - c < 0:\n    ans += (c - a - b) * (c - a - b + 1) * (c - a - b + 2) // 6\nif 2 * b - c < 0:\n    ans -= (c - 2 * b - 1) * (c - 2 * b) * (c - 2 * b + 1) // 6\nif b > d + 1 - c:\n    ans -= (b + c - d - 1) * (b + c - d) * (b + c - d + 1) // 6\nif a > d + 1 - c:\n    ans += (a + c - d) * (a + c - d - 1) * (a + c - d - 2) // 6\nif 2 * b - c > d + 1 - c:\n    ans += (2 * b - d) * (2 * b - d - 1) * (2 * b - d - 2) // 6\nif a + b - c > d + 1 - c:\n    ans = (d + 1 - c) * (b + 1 - a) * (c + 1 - b)\nprint(ans)", "[a, b, c, d] = input().split(' ')\na = int(a)\nb = int(b)\nc = int(c)\nd = int(d)\n\ndef f(x):\n    if x < 1:\n        return 0\n    else:\n        return x * (x + 1) * (x + 2) // 6\nans = (a + 2 * b - c) * (b + 1 - a) * (c + 1 - b) // 2 + f(c - a - b) - f(c - 2 * b - 1) - f(b + c - d - 1) + f(a + c - d - 2) + f(2 * b - d - 2)\nif a + b - c > d + 1 - c:\n    ans = (d + 1 - c) * (b + 1 - a) * (c + 1 - b)\nprint(ans)", "def main():\n    (a, b, c, d) = map(int, input().split())\n    cnt = [0] * (b + c + 1)\n    mid1 = min(a + c, 2 * b)\n    mid2 = max(a + c, 2 * b)\n    for z in range(c + 1, b + c + 1):\n        if z < a + b:\n            continue\n        if z > 2 * c:\n            continue\n        if z < mid1:\n            cnt[z] = z - a - b + 1\n        elif z > mid2:\n            cnt[z] = b + c - z + 1\n        else:\n            cnt[z] = mid1 - a - b + 1\n    cum = [0] * (b + c + 2)\n    for z in range(b + c, c, -1):\n        cum[z] = cum[z + 1] + cnt[z]\n    res = sum(cum[c + 1:d + 2])\n    return res\nprint(main())", "def check(a, b, c, d):\n    ans = 0\n    for z in range(c, d + 1):\n        z_ans = 0\n        for x in range(a, b + 1):\n            for y in range(b, c + 1):\n                if x + y > z:\n                    z_ans += 1\n        print(z, z_ans)\n        ans += z_ans\n    print(ans)\n(a, b, c, d) = map(int, input().split())\nans = 0\nh = c - b + 1\nw = b - a + 1\nfor z in range(c, d + 1):\n    if b + c <= z:\n        break\n    if a + b > z:\n        ans += h * w\n        continue\n    e = z + 1 - b\n    f = z + 1 - a\n    if e < b:\n        if f < c:\n            ans += h * w - (e - a) * (f - b + 1) // 2\n        else:\n            ans += (b - e + 1) * h + h * (h - 1) // 2\n    elif f < c:\n        ans += (c - f + 1) * w + w * (w - 1) // 2\n    else:\n        ans += (h + b - e) * (h + b - e + 1) // 2\nprint(ans)", "(a, b, c, d) = map(int, input().split())\ns = 0\nfor z in range(c, min(d + 1, b + c)):\n    if z - a <= c:\n        s += (b - a + 1) * (c - max(b - 1, z - a))\n        if z - a >= b:\n            x = min(z - a - b + 1, b - a)\n            s += (b - a) * x - (x - 1) * x / 2\n    elif z - a > c:\n        x = min(b + c - z, c - b + 1)\n        s += (b + c - z) * x - (x - 1) * x / 2\nprint(int(s))", "def solve():\n    (a, b, c, d) = [int(x) for x in input().split()]\n    (count, left) = (0, b)\n    for z in range(c, d + 1):\n        x = z - left + 1\n        while x > b and left <= c:\n            left += 1\n            x = z - left + 1\n        if x < a:\n            x = a\n        if left > c:\n            break\n        avail = b - x + 1\n        l = x - a\n        count += avail * (c - left + 1)\n        if c - left + 1 == l:\n            l -= 1\n            count += l * (l + 1) // 2\n        elif c - left + 1 < l:\n            l = c - left + 1\n            l -= 1\n            count += l * (l + 1) // 2\n        else:\n            l -= 1\n            count += l * (l + 1) // 2\n            l += 1\n            count += l * (c - left + 1 - l)\n    print(count)\nsolve()", "import math\narr = [0] * 1000001\nt = 1\nfor _ in range(t):\n    x = input().split()\n    list1 = [int(i) for i in x]\n    a = list1[0]\n    b = list1[1]\n    c = list1[2]\n    d = list1[3]\n    j = 1\n    for i in range(c + 1, b + c + 1):\n        if j < d - c + 1:\n            arr[i] = j\n            j += 1\n        else:\n            arr[i] = d - c + 1\n    ans = 0\n    j = 1\n    for i in range(a + b, min(2 * b, a + c)):\n        ans += arr[i] * j\n        j += 1\n    for i in range(min(2 * b, a + c), max(2 * b, a + c) + 1):\n        ans += arr[i] * min(b - a + 1, c - b + 1)\n    j = 1\n    for i in range(b + c, max(2 * b, a + c), -1):\n        ans += arr[i] * j\n        j += 1\n    print(ans)", "import sys\n\ndef solve():\n    input = sys.stdin.readline\n    (A, B, C, D) = map(int, input().split())\n    ans = 0\n    fib = [0] * (D + 1)\n    fib[1] = 1\n    for i in range(2, D + 1):\n        if i <= C - B + 1:\n            fib[i] = fib[i - 1] + i\n        else:\n            fib[i] = fib[i - 1] + (C - B + 1)\n    for z in range(C, D + 1):\n        if B + C <= z:\n            continue\n        else:\n            xlow = z - C + 1\n            pN = B - xlow + 1\n            psubN = A - xlow\n            if xlow >= A:\n                ans += fib[pN]\n            else:\n                ans += fib[pN] - fib[psubN]\n    print(ans)\n    return 0\nsolve()", "import sys\n\ndef read_integer():\n    return int(sys.stdin.readline())\n\ndef read_integers():\n    return [int(x) for x in sys.stdin.readline().split(' ')]\n\ndef print_integers(nums):\n    print(' '.join([str(x) for x in nums]))\n\ndef f1(i, a, b, c, d):\n    ret = 0\n    for j in range(b, c + 1):\n        ret += max(0, min(d, i + j - 1) - max(c, j - i + 1) + 1)\n    return ret\n\ndef f2(i, a, b, c, d):\n    if c + i - 1 <= d:\n        top = c + i - 1 - c + 1\n        bottom = max(1, b + i - 1 - c + 1)\n        num = top - bottom + 1\n        return (top + bottom) * num // 2\n    else:\n        ret = (c + i - 1 - d) * (d - c + 1)\n        if b + i - 2 > d:\n            ret -= (b + i - 2 - d) * (d - c + 1)\n        else:\n            ret += (d - c + 1 + 1) * (d - c + 1) // 2\n            if b + i - 1 > c:\n                ret -= (b + i - 2 - c + 1 + 1) * (b + i - 2 - c + 1) // 2\n        return ret\n\ndef func(a, b, c, d):\n    ans = 0\n    for i in range(a, b + 1):\n        r = f2(i, a, b, c, d)\n        ans += r\n    print(ans)\nfunc(*read_integers())", "(a, b, c, d) = map(int, input().split())\nprint(sum(((min(d + 1, i) - c) * (min(i - b, b) - max(i - c, a) + 1) for i in range(max(a + b, c + 1), c + b + 1))))", "def main():\n    (a, b, c, d) = map(int, input().split())\n    q = c - b + 1\n    su = 0\n    d = min(d, b + c - 1)\n    for z in range(c, d + 1):\n        ma = q - max(b, z - b + 1) + b\n        minx = max(a, z - c + 1)\n        l = q - max(b, z - minx + 1) + b\n        if l == ma:\n            su += ma * (b - minx + 1)\n        elif b - minx + 1 >= ma - l + 1:\n            su += (b - minx + 1 - ma + l - 1) * ma\n            su += sun(ma, l)\n        else:\n            su += sun(b - minx + 1, l)\n    print(su)\n\ndef sun(a, b):\n    return (a + b) * (a - b + 1) // 2\nmain()", "from collections import defaultdict\nfrom math import log2, floor, sqrt\nfrom pprint import pprint\nfrom bisect import bisect_left, bisect_right\nmod = pow(10, 9) + 7\ndict = defaultdict(int)\n\ndef fun(a, b, c, d):\n    z = list(range(c, d + 1))\n    lis = list(range(a + b, b + c + 1))\n    length = len(lis)\n    numbers = [1] * length\n    mina = min(b - a + 1, c - b + 1)\n    for i in range(1, length):\n        if i < length / 2 and i < mina:\n            numbers[i] = numbers[i - 1] + 1\n        elif i > length - mina:\n            numbers[i] = numbers[i - 1] - 1\n        else:\n            numbers[i] = numbers[i - 1]\n    for i in range(length - 2, -1, -1):\n        numbers[i] += numbers[i + 1]\n    numbers.append(0)\n    suma = 0\n    for i in z:\n        theta = bisect_right(lis, i)\n        suma += numbers[theta]\n    print(suma)\n(a, b, c, d) = map(int, input().split())\nfun(a, b, c, d)", "import sys\nI = sys.stdin.readline\n\ndef read_ints():\n    return list(map(int, I().split(' ')))\n\ndef sum_up_to(num):\n    return num * (num + 1) // 2\n\ndef solve():\n    (a, b, c, d) = read_ints()\n    ans = 0\n    for z in range(c, d + 1):\n        p = max(z + 1 - b, b)\n        if p > c:\n            break\n        x_base = z - p + 1\n        if x_base < a:\n            x_base = a\n        y_range = c - p\n        x_range = min(x_base - a, y_range)\n        l = b - x_base + 1\n        r = l + x_range\n        ans += sum_up_to(r) - sum_up_to(l - 1)\n        ans += (b - a + 1) * (y_range - x_range)\n    return ans\nprint(solve())", "(a, b, c, d) = map(int, input().split())\nMin1 = max(c + 1, a + b)\ncnt = 0\nfor i in range(Min1, b + c + 1):\n    cntZ = min(d, i - 1) - c + 1\n    cntXY = min(b, i - b) - max(a, i - c) + 1\n    cnt = cnt + cntZ * cntXY\nprint(cnt)", "(a, b, c, d) = list(map(int, input().split()))\n(rows, columns, maxEntry) = (c - b + 1, b - a + 1, d - c + 1)\n(count, prev) = (0, 0)\nfor n in range(1, a):\n    prev += rows - sorted([n - maxEntry, rows, 0])[1] - max(0, rows - n)\nfor n in range(a, b + 1):\n    prev += rows - sorted([n - maxEntry, rows, 0])[1] - max(0, rows - n)\n    count += prev\nprint(count)", "def main():\n    t = 1\n    for _ in range(t):\n        (a, b, c, d) = map(int, input().split())\n        ans = 0\n        for i in range(b, c + 1):\n            mix = min(b, max(a, c - i + 1))\n            mx = min(b, max(a, d - i + 1))\n            if mx + i <= c:\n                continue\n            ok = min(d, mx + i - 1) - c + 1\n            l = min(ok, mix + i - c)\n            l -= 1\n            ans += ok * (ok + 1) // 2\n            ans -= l * (l + 1) // 2\n            ans += (b - mx) * ok\n        print(ans)\n    return\nmain()", "import sys\nsum = 0\n(a, b, c, d) = map(int, input().split())\nfor i in range(max(a + b, c + 1), c + b + 1):\n    sum += (min(d + 1, i) - c) * (min(i - b, b) - max(i - c, a) + 1)\nprint(sum)", "def main():\n    (a, b, c, d) = map(int, input().split())\n    ans = 0\n    for x in range(a, b + 1):\n        k = max(c + 1 - x, b)\n        p = min(d - c + 1, x)\n        q = min(d - c + 1, x + k - c)\n        ans += p * (p + 1) // 2 - q * (q - 1) // 2 + (c - k - p + q) * p\n    print(ans)\nmain()", "(a, b, c, d) = map(int, input().split())\nans = int(0)\nfor i in range(c, d + 1):\n    bi = b\n    delta1 = i - b + 1\n    if delta1 <= a:\n        ans += (c - b + 1) * (b - a + 1)\n        continue\n    if delta1 > b:\n        bi = bi + delta1 - b\n        delta1 = b\n    if bi > c:\n        continue\n    ost = c - bi + 1\n    if delta1 - ost + 1 < a:\n        ans += (b + 1 - a + (b + 1 - delta1)) * (b + 1 - a - (b + 1 - delta1) + 1) // 2\n        ans += (a - (delta1 - ost + 1)) * (b - a + 1)\n    else:\n        ans += (b + 1 - (delta1 - ost + 1) + (b + 1 - delta1)) * (b + 1 - (delta1 - ost + 1) - (b + 1 - delta1) + 1) // 2\nprint(ans)", "(a, b, c, d) = map(int, input().split())\ns = 0\nfor z in range(c, d + 1):\n    if b + c <= z:\n        break\n    u = min(b + b, a + c)\n    v = max(b + b, a + c)\n    if z >= v:\n        s += (b + c - z) * (b + c - z + 1) // 2\n    elif u <= z:\n        s += (b + c - v) * (b + c - v + 1) // 2 + (min(c - b, b - a) + 1) * (v - z)\n    elif z >= a + b:\n        s += (c - b + 1) * (b - a + 1) - (z - a - b + 2) * (z - b - a + 1) // 2\n    else:\n        s += (c - b + 1) * (b - a + 1)\nprint(s)", "(a, b, c, d) = map(int, input().split())\nans = 0\nfor z in range(c, d + 1):\n    if b + c > z:\n        ans += (b - a + 1) * (c - b + 1)\n        if z >= a + b:\n            ans -= (z - a - b + 1) * (z - a - b + 2) // 2\n            if a + c <= z:\n                ans += (z - a - c) * (z - a - c + 1) // 2\n            if b + b <= z:\n                ans += (z - b - b) * (z - b - b + 1) // 2\nprint(ans)", "(a, b, c, d) = map(int, input().split())\nans = 0\nfor xy in range(c + 1, b + c + 1):\n    if xy < a + b:\n        continue\n    temp = 0\n    if xy - b > b:\n        temp = min(b - a, c - (xy - b)) + 1\n    else:\n        temp = min(xy - b - a, c - b) + 1\n    ans += (min(d + 1, xy) - c) * temp\nprint(ans)", "l = list(map(int, input().split(' ')))\nans = 0\n\ndef ssum(n):\n    return n * (n + 1) // 2\na = l[0]\nb = l[1]\nc = l[2]\nd = l[3]\nfor x in range(a, b + 1):\n    yy = c - x + 1\n    yyy = d - x + 1\n    if yy < b:\n        yy = b\n    if yyy >= c:\n        yyy = c\n        ans += x * (yyy - yy + 1) - c * (yyy - yy + 1) + (ssum(yyy) - ssum(yy - 1))\n    if yyy < c:\n        if yyy >= yy:\n            ans += x * (yyy - yy + 1) - c * (yyy - yy + 1) + (ssum(yyy) - ssum(yy - 1))\n            ans += (d - c + 1) * (c - yyy)\n        if yyy < yy:\n            ans += (d - c + 1) * (c - yy + 1)\nprint(ans)", "x = input().split(' ')\nA = int(x[0])\nB = int(x[1])\nC = int(x[2])\nD = int(x[3])\n\ndef gauss_count(n):\n    if n <= 0:\n        return 0\n    return n * (n + 1) // 2\ncount = 0\nfor z in range(C, D + 1):\n    if A + B > z:\n        count += (B - A + 1) * (C - B + 1)\n        continue\n    x0 = z - C + 1\n    y0 = z - B + 1\n    incl1 = gauss_count(B - x0 + 1)\n    excl1 = gauss_count(A - x0)\n    excl2 = gauss_count(B - y0)\n    count += max(0, incl1 - excl1 - excl2)\nprint(count)", "st = input()\ngetting = ''\nnum = []\nfor i in st:\n    if i == ' ':\n        num.append(int(getting))\n        getting = ''\n    else:\n        getting += i\nnum.append(int(getting))\nA = num[0]\nB = num[1]\nC = num[2]\nD = num[3]\nans = 0\nif C - B > B - A:\n    min = B - A\nelse:\n    min = C - B\n\ndef large(add):\n    if add <= C:\n        return 0\n    elif add > C and add <= D:\n        return add - C\n    else:\n        return D - C + 1\n\ndef combin(sum):\n    if sum < min + 1:\n        return sum + 1\n    elif sum > C - A - min - 1:\n        return C - A - sum + 1\n    else:\n        return min + 1\nfor i in range(C - A + 1):\n    ans = ans + large(i + A + B) * combin(i)\nprint(f'{ans}')", "def func(z, a, b, c):\n    if c + b <= z:\n        return 0\n    yMin = z - b + 1\n    if yMin < b:\n        yMin = b\n    xMax = max(z + 1 - yMin, a)\n    num = min([c - yMin + 1, xMax - a + 1])\n    s = b - xMax + 1\n    res = (s + s + num - 1) * num // 2\n    res += max(c - yMin + 1 - (xMax - a + 1), 0) * (b - a + 1)\n    return res\n(a, b, c, d) = map(int, input().split())\nans = 0\nfor z in range(c, d + 1):\n    ans += func(z, a, b, c)\nprint(ans)", "(A, B, C, D) = map(int, input().split())\nans = 0\nbg = max(C + 1, A + B)\nfor i in range(bg, B + C + 1):\n    res = i - A - B\n    (x, y) = (A, B)\n    if res > B - A:\n        x = B\n        res -= B - A\n    else:\n        x += res\n        res = 0\n    y += res\n    ans += (min(x - A, C - y) + 1) * (min(i - 1, D) - C + 1)\nprint(ans)", "def f(n):\n    if n <= 0:\n        return 0\n    return n * (n + 1) // 2\n(a, b, c, d) = [int(x) for x in input().split()]\nans = 0\nfor z in range(c, d + 1):\n    ans += f(b + c - z) - f(2 * b - z - 1) - f(a + c - z - 1) + (2 * b - z - 1 > b - a) * f(2 * b - z - 2 + a - b)\nprint(ans)", "def f(n):\n    if n <= 0:\n        return 0\n    return n * (n + 1) // 2\n(a, b, c, d) = [int(x) for x in input().split()]\nans = 0\nfor z in range(c, d + 1):\n    ans += f(b + c - z) - f(2 * b - z - 1) - f(a + c - z - 1) + (2 * b - z - 1 > b - a) * f(2 * b - z - 2 + a - b)\nprint(ans)", "(a, b, c, d) = map(int, input().split())\n\ndef ncombi(n):\n    if n <= 0:\n        return 0\n    else:\n        return n * (n + 1) // 2\nans = 0\nfor x in range(c, d + 1):\n    ans += ncombi(b + c - x) - ncombi(2 * b - x - 1) - ncombi(a + c - x - 1) + (2 * b - x - 1 > b - a) * ncombi(2 * b - x - 2 + a - b)\nprint(ans)", "def f(n):\n    if n <= 0:\n        return 0\n    return n * (n + 1) // 2\n(a, b, c, d) = map(int, input().split())\nans = 0\nfor z in range(c, d + 1):\n    ans += f(b + c - z) - f(2 * b - z - 1) - f(a + c - z - 1) + (2 * b - z - 1 > b - a) * f(2 * b - z - 2 + a - b)\nprint(ans)", "(a, b, c, d) = [int(i) for i in input().split()]\nresult = 0\nfor x in range(a, b + 1):\n    k = max(c + 1 - x, b)\n    p = min(d - c + 1, x)\n    q = min(d - c + 1, x + k - c)\n    result += p * (p + 1) // 2 - q * (q - 1) // 2 + (c - k - p + q) * p\nprint(result)", "(a, b, c, d) = map(int, input().split())\narr = [0] * max(b + c + 2, d + 1)\nfor i in range(a, b + 1):\n    arr[i + b] += 1\n    arr[i + c + 1] += -1\nprefix = [0] * max(b + c + 2, d + 1)\ncurr = 0\nfor i in range(len(arr)):\n    curr += arr[i]\n    prefix[i] = curr\nprefix2 = [0] * max(b + c + 2, d + 1)\ncurr = 0\nfor i in range(len(arr) - 1, -1, -1):\n    curr += prefix[i]\n    prefix2[i] = curr\nprint(sum(prefix2[c + 1:d + 2]))", "(a, b, c, d) = map(int, input().split())\ncount = 0\nfor s in range(max(a + b, c), b + c + 1):\n    m = max(min(s - b, b) - max(s - c, a) + 1, 0)\n    n = max(min(s - 1, d) - c + 1, 0)\n    count += m * n\nprint(count)", "(a, b, c, d) = list(map(int, input().split()))\ny = c\notvet = 0\nfor x in range(a, b + 1):\n    z = x + y - 1\n    tr_xy = min(z, d) - c + 1\n    y_kolvo = min(z - c, c - b)\n    y_v_z = max(0, min(z - d, y_kolvo))\n    an = tr_xy - y_kolvo + y_v_z\n    otvet += y_v_z * tr_xy + (tr_xy * tr_xy + tr_xy - an * an + an) // 2\nprint(otvet)", "(a, b, c, d) = [int(x) for x in input().split()]\nif a == b == c == d:\n    print('1')\nelse:\n    p = b + c - (a + b)\n    arr = [0 for x in range(0, p + 1)]\n    for i in range(a, b + 1):\n        arr[i + b - (a + b)] = arr[i + b - (a + b)] + 1\n        if i + c + 1 - (a + b) < len(arr):\n            arr[i + c + 1 - (a + b)] = arr[i + c + 1 - (a + b)] - 1\n    for j in range(1, len(arr)):\n        arr[j] = arr[j] + arr[j - 1]\n    for k in range(len(arr) - 2, -1, -1):\n        arr[k] = arr[k] + arr[k + 1]\n    count = 0\n    for m in range(c, d + 1):\n        if m - (a + b) >= len(arr) - 1:\n            count += 0\n        elif m - (a + b) < 0:\n            count += arr[0]\n        else:\n            count += arr[m + 1 - (a + b)]\n    print(count)", "import sys\n(A, B, C, D) = map(int, sys.stdin.readline().split())\n\ndef count(n):\n    upper = min(B - A, C - B) + 1\n    est = min(n - A, C) - max(B, n - B) + 1\n    return min(upper, est)\nans = 0\nfor rest in range(max(A + B, C + 1), B + C + 1):\n    num_avail_z = min(D - C + 1, rest - C)\n    ans += num_avail_z * count(rest)\nprint(ans)", "l = list(map(int, input().split()))\nlt = [0] * (l[1] + l[2] + 2)\nfor i in range(l[0], l[1] + 1):\n    lt[i + l[1]] += 1\n    lt[i + l[2] + 1] -= 1\nfor i in range(1, l[1] + l[2] + 2):\n    lt[i] += lt[i - 1]\nc = 0\nfor i in range(len(lt)):\n    if i > l[2]:\n        c += lt[i] * (min(i, l[3] + 1) - l[2])\nprint(c)", "import math\nimport collections\nfrom sys import stdin, stdout, setrecursionlimit\nimport bisect as bs\n(a, b, c, d) = list(map(int, stdin.readline().split()))\nans = [0] * (b + c + 5)\nfor i in range(b - a + 1):\n    ans[a + b + i] += 1\n    ans[a + b + i + c - b + 1] -= 1\nfor i in range(1, b + c + 5):\n    ans[i] = ans[i] + ans[i - 1]\nfin = 0\nfor i in range(c, b + c + 1, 1):\n    fin += ans[i] * (min(i, d + 1) - c)\nprint(fin)", "(A, B, C, D) = [int(i) for i in input().split()]\nans = 0\nfor x in range(A, B + 1):\n    ans += max(0, C - max(D - x + 1, B) + 1) * (D - C + 1)\n    m = max(0, min(C, D - x) - max(B, C - x + 1) + 1)\n    ans += m * (x - C)\n    ans += m * (min(C, D - x) + max(B, C - x + 1)) // 2\nprint(ans)", "(a, b, c, d) = [int(x) for x in input().split()]\nans = 0\nfor xpy in range(a + b, b + c + 1):\n    v = min(b - a + 1, c - b + 1, min(xpy - a - b + 1, b + c - xpy + 1))\n    l = c\n    r = min(xpy - 1, d)\n    ans += v * max(0, r - l + 1)\nprint(ans)", "(a, b, c, d) = map(int, input().split())\nans = 0\narr = [0] * (2 * d + 5)\nfor i in range(a, b + 1):\n    arr[i + b] += 1\n    arr[i + c + 1] -= 1\ns = 0\nfor ii in range(2 * d + 5):\n    s += arr[ii]\n    if c < ii:\n        ans += min(ii - c, d - c + 1) * s\nprint(ans)", "(A, B, C, D) = map(int, input().split())\nans = 0\nfor z in range(C, D + 1):\n    y_STEPS = {0: B, 1: max(B, z - B), 2: max(B, min(C, z - A + 1)), 3: C}\n    y_MIN = min(max(0, 2 * B - z), B - A + 1)\n    y_MAX = max(0, min(B - A + 1, C + B - z))\n    ans += (y_STEPS[3] - y_STEPS[2]) * y_MAX\n    ans += (y_MIN + y_MAX) * (y_STEPS[2] - y_STEPS[1] + 1) // 2\nprint(ans)", "(A, B, C, D) = map(int, input().split())\nans = 0\nfor z in range(C, D + 1):\n    y_STEPS = {0: B, 1: max(B, z - B), 2: max(B, min(C, z - A + 1)), 3: C}\n    y_MIN = min(max(0, 2 * B - z), B - A + 1)\n    y_MAX = max(0, min(B - A + 1, C + B - z))\n    ans += (y_STEPS[3] - y_STEPS[2]) * y_MAX\n    ans += (y_MIN + y_MAX) * (y_STEPS[2] - y_STEPS[1] + 1) // 2\nprint(ans)"]