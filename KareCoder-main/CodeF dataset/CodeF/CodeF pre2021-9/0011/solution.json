["num_cases: int = int(input())\nfor _ in range(num_cases):\n    num_days: int = int(input())\n    order: str = input()\n    s = set()\n    s.add(order[0])\n    distracted: bool = False\n    for i in range(1, len(order)):\n        if order[i - 1] != order[i] and order[i] in s:\n            distracted = True\n            break\n        s.add(order[i])\n    if distracted:\n        print('NO')\n    else:\n        print('YES')", "n = int(input())\nfor _ in range(n):\n    input()\n    cannot = []\n    s = input()\n    for i in range(1, len(s)):\n        if s[i - 1] != s[i]:\n            cannot.append(s[i - 1])\n        if s[i] in cannot:\n            print('NO')\n            break\n    else:\n        print('YES')", "n = int(input())\nfor i in range(n):\n    length = int(input())\n    string = input()\n    d = [string[0]]\n    cur = string[0]\n    ans = True\n    for j in range(1, length):\n        if string[j] in d:\n            if string[j] != cur:\n                ans = False\n                break\n            else:\n                cur = string[j]\n        else:\n            d.append(string[j])\n            cur = string[j]\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "from itertools import *\nfor s in [*open(0)][2::2]:\n    print('YNEOS'[len([*groupby(s)]) > len({*s})::2])", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    for i in range(1, len(s)):\n        if s[i] in s[:i] and s[i] != s[i - 1]:\n            print('NO')\n            break\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    for i in range(1, len(s)):\n        if s[i] in s[:i] and s[i] != s[i - 1]:\n            print('NO')\n            break\n    else:\n        print('YES')", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    s = input()\n    a = [0] * 26\n    for (j, i) in enumerate(s):\n        if a[ord(i) - 65] and s[j - 1] != s[j]:\n            print('NO')\n            break\n        a[ord(i) - 65] = 1\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    j = 1\n    l1 = []\n    for i in range(1, len(s)):\n        if s[i - 1] != s[i]:\n            if s[i] in l1:\n                j = 0\n                break\n            else:\n                l1.append(s[i - 1])\n    if j == 1:\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    (junk, tasks) = (input(), input())\n    visited_tasks = []\n    ans = 'YES'\n    for (i, t) in enumerate(tasks):\n        if t in visited_tasks:\n            if tasks[i] != tasks[i - 1]:\n                ans = 'NO'\n                break\n        else:\n            visited_tasks.append(t)\n    print(ans)", "n = int(input())\nfor _ in range(n):\n    num = int(input())\n    s = input()\n    ans = 'YES'\n    for i in range(1, len(s)):\n        if s[i] in s[:i] and s[i] != s[i - 1]:\n            ans = 'NO'\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    alphabet_fixe = s[0]\n    l = [s[0]]\n    for j in range(1, n):\n        if s[j] != alphabet_fixe:\n            alphabet_fixe = s[j]\n            l.append(s[j])\n    if len(set(l)) == len(l):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    alphabet_fixe = s[0]\n    l = [s[0]]\n    for j in range(1, n):\n        if s[j] != alphabet_fixe:\n            alphabet_fixe = s[j]\n            l.append(s[j])\n    if len(set(l)) == len(l):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    alphabet_fixe = s[0]\n    l = [s[0]]\n    for j in range(1, n):\n        if s[j] != alphabet_fixe:\n            alphabet_fixe = s[j]\n            l.append(s[j])\n    if len(set(l)) == len(l):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    v = set()\n    i = 0\n    while i < n:\n        if s[i] not in v:\n            v.add(s[i])\n            while i + 1 < n and s[i] == s[i + 1]:\n                i += 1\n        else:\n            break\n        i += 1\n    if i == n:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    l = []\n    flag = 0\n    i = 0\n    while i < n:\n        if s[i] not in l:\n            l.append(s[i])\n        elif s[i - 1] != s[i]:\n            flag = 1\n        if flag == 1:\n            break\n        i += 1\n    if flag == 1:\n        print('NO')\n    else:\n        print('YES')", "from itertools import *\nfor s in [*open(0)][2::2]:\n    print('YNEOS'[len([*groupby(s)]) > len({*s})::2])", "t = int(input())\nfor i in range(t):\n    ans = 0\n    a = int(input())\n    st = list(str(input()))\n    l = [st[0]]\n    for j in range(a):\n        if l[-1] == st[j] or st[j] not in l:\n            l.append(st[j])\n            ans += 0\n        else:\n            ans += 1\n    print('YES') if ans == 0 else print('NO')", "t = int(input())\nwhile t > 0:\n    t -= 1\n    b = False\n    n = int(input())\n    m = input()\n    set1 = set({})\n    set1.add(m[0])\n    for i in range(1, len(m)):\n        if m[i - 1] != m[i]:\n            l = len(set1)\n            set1.add(m[i])\n            if len(set1) == l:\n                b = True\n                break\n    if b:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    if len(a) == len(set(a)):\n        print('YES')\n    elif len(a) != len(set(a)):\n        for i in range(len(a) - 1):\n            if a[i] == a[i + 1]:\n                continue\n            elif a[i] in a[i + 1:]:\n                print('NO')\n                break\n        else:\n            print('YES')", "n = int(input())\nr = []\nwhile n > 0:\n    finish = []\n    q = int(input())\n    tareas = input()\n    for i in range(q):\n        if i == q - 1:\n            if tareas[i] in finish:\n                r.append('NO')\n            else:\n                r.append('YES')\n        elif tareas[i] in finish:\n            r.append('NO')\n            break\n        elif tareas[i] != tareas[i + 1]:\n            finish.append(tareas[i])\n    n -= 1\nfor i in r:\n    print(i)", "def solve(s: str) -> str:\n    aux = ''\n    d = {}\n    for i in range(len(s)):\n        if s[i] not in d:\n            d[s[i]] = 1\n            aux = s[i]\n        elif s[i] in d:\n            if aux == s[i]:\n                d[s[i]] += 1\n            else:\n                return 'NO'\n    return 'YES'\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    print(solve(s))", "t1 = int(input())\nfor i in range(t1):\n    n = int(input())\n    b = ''\n    c = 0\n    s = list(input())\n    a = []\n    for i in s:\n        if b != i:\n            l = i in a\n            if l == False:\n                a.append(i)\n                b = i\n            else:\n                print('NO')\n                c = 1\n                break\n    if c == 0:\n        print('YES')", "from itertools import *\nfor s in [*open(0)][2::2]:\n    print('YNEOS'[len([*groupby(s)]) > len({*s})::2])", "for _ in range(int(input())):\n    a = int(input())\n    b = input()\n    c = ''\n    g = 0\n    for i in range(len(b)):\n        if b[i] not in c:\n            c += b[i]\n        elif b[i] != c[-1] and b[i] in c:\n            g = 1\n            break\n        else:\n            c += b[i]\n    if g == 0:\n        print('YES')\n    else:\n        print('NO')", "def do_not_be_distracted(str):\n    lista_n_repetidas = []\n    for c in str:\n        if c not in lista_n_repetidas:\n            lista_n_repetidas.append(c)\n    verificadas = []\n    for i in range(len(lista_n_repetidas)):\n        for j in range(len(str) - 1):\n            if str[j] not in verificadas:\n                if str[j] != str[j + 1]:\n                    verificadas.append(str[j])\n                    c = j\n                    f = len(str) - 1\n                    for k in range(c, len(str) - 1):\n                        if str[c] == str[f]:\n                            return 'NO'\n                        else:\n                            f -= 1\n    return 'YES'\nn = int(input())\nfor l in range(n):\n    d = int(input())\n    str = input()\n    print(do_not_be_distracted(str))", "for _ in range(int(input())):\n    n = int(input())\n    m = input()\n    for i in range(1, len(m)):\n        if m[i] in m[:i] and m[i] != m[i - 1]:\n            print('NO')\n            break\n    else:\n        print('YES')", "def transforma_em_lista(lista):\n    minha = []\n    for c in lista:\n        minha.append(c)\n    return minha\n\ndef remove_excesso(valores):\n    indices = []\n    for v in range(len(valores) - 1):\n        if valores[v] == valores[v + 1]:\n            indices.append(v + 1)\n    for p in range(len(indices) - 1, -1, -1):\n        valores.pop(indices[p])\n    return valores\n\ndef compara(lista):\n    for valor in lista:\n        compara = lista.count(valor)\n        if compara > 1:\n            return 'NO'\n    return 'YES'\nn = int(input())\nfor c in range(n):\n    days = int(input())\n    str = transforma_em_lista(input())\n    lista_pronta = remove_excesso(str)\n    print(compara(lista_pronta))", "rodadas = int(input())\nfor a in range(rodadas):\n    numeroDias = int(input())\n    dias = input()\n    contador = 0\n    for b in range(numeroDias):\n        for c in range(b + 1, numeroDias, 1):\n            if dias[b] == dias[c] and dias[c - 1] != dias[c]:\n                print('NO')\n                contador = 1\n                break\n        if contador == 1:\n            break\n        if b == numeroDias - 1 and contador == 0:\n            print('YES')", "for h in [*open(0)][2::2]:\n    f = 1\n    z = list(set(h))\n    for s in z:\n        x = h.index(s)\n        y = len(h) - h[::-1].index(s)\n        if y - x == h.count(s):\n            continue\n        else:\n            f = 0\n            break\n    if f == 1:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    flag = 1\n    for i in range(n - 1):\n        if s[i] != s[i + 1]:\n            t = s.rfind(s[i])\n            if t != i:\n                flag = 0\n                break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    lst = []\n    flag = 1\n    lst.append(s[0])\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            continue\n        else:\n            lst.append(s[i])\n    while lst:\n        if lst.pop(0) in lst:\n            print('NO')\n            flag = 0\n            break\n    if flag == 0:\n        continue\n    else:\n        print('YES')", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    s = input()\n    l = []\n    flag = 0\n    prev = s[0]\n    l.append(prev)\n    for i in range(1, n):\n        if s[i] not in l:\n            l.append(s[i])\n        elif s[i] in l and prev != s[i]:\n            flag = 1\n            break\n        prev = s[i]\n    if flag == 1:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    res = 'YES'\n    s = input()\n    for j in range(1, n):\n        if s[j] in s[:j] and s[j] != s[j - 1]:\n            res = 'NO'\n    print(res)", "def main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        tasks = input()\n        visited = []\n        flag = 0\n        for i in range(1, n):\n            if tasks[i] != tasks[i - 1]:\n                if tasks[i - 1] not in visited:\n                    visited.append(tasks[i - 1])\n                else:\n                    flag = 1\n                    break\n        if flag == 0 and tasks[-1] not in visited:\n            print('YES')\n        else:\n            print('NO')\nmain()", "for i in range(int(input())):\n    n = int(input())\n    p = input()\n    c = p\n    y = 0\n    f = True\n    d = 'YES'\n    z = list(set(p))\n    for i in range(len(z)):\n        while True:\n            x = p.find(z[i])\n            if x != -1:\n                p = p[0:x] + ' ' + p[x + 1:]\n                if x - y == 1 or f:\n                    f = False\n                    y = x\n                    continue\n                else:\n                    d = 'NO'\n                    break\n            else:\n                break\n        if d == 'NO':\n            print(d)\n            break\n        p = c\n        f = True\n        y = 0\n    if d == 'YES':\n        print(d)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = str(input())\n    l = list(s)\n    nb = len(set(l))\n    nn = 0\n    for j in range(n - 1):\n        if s[j] != s[j + 1]:\n            nn += 1\n    if n == 1:\n        print('YES')\n    elif nb > nn:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    for j in range(1, len(s)):\n        if s[j] in s[:j] and s[j] != s[j - 1]:\n            print('NO')\n            break\n    else:\n        print('YES')", "from itertools import *\nfor s in [*open(0)][2::2]:\n    print('YNEOS'[len([*groupby(s)]) > len({*s})::2])", "n = int(input())\n\ndef func(_list, val):\n    for k in range(length - 1, -1, -1):\n        if val == _list[k]:\n            return k\n    return 0\nfor i in range(n):\n    length = int(input())\n    string = input()\n    str_list = [*string]\n    flag = 0\n    for j in range(length - 1):\n        a = func(str_list, str_list[j])\n        if str_list[j] != str_list[j + 1] and a - j > 1:\n            flag = 1\n            break\n    if flag == 1:\n        print('NO')\n    else:\n        print('YES')", "from itertools import *\nfor s in [*open(0)][2::2]:\n    print('YNEOS'[len([*groupby(s)]) > len({*s})::2])", "def solve(n, s):\n    d = {}\n    seen = s[0]\n    d[s[0]] = 1\n    for i in range(1, n):\n        current = s[i]\n        if current == seen:\n            d[current] += 1\n            seen = current\n        elif current in d.keys():\n            if d[current] > 0:\n                return 'NO'\n        else:\n            d[current] = 1\n            seen = current\n    return 'YES'\nfor _ in range(int(input())):\n    n = int(input())\n    s = list(input())\n    print(solve(n, s))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = str(input())\n    for i in range(1, len(s)):\n        if s[i] in s[:i] and s[i] != s[i - 1]:\n            print('NO')\n            break\n    else:\n        print('YES')", "import sys\nN = int(200000.0 + 5)\nsys.setrecursionlimit(N)\n\ndef charming():\n    n = int(input())\n    s = input()\n    vis = set()\n    vis.add(s[0])\n    for i in range(1, n):\n        if s[i] == s[i - 1]:\n            continue\n        elif s[i] in vis:\n            print('NO')\n            return\n        else:\n            vis.add(s[i])\n    print('YES')\nfor t in range(int(input())):\n    charming()", "for i in range(int(input())):\n    n = int(input())\n    d = list(input())\n    w = 0\n    for j in d:\n        t = d.count(j)\n        if d[d.index(j):d.index(j) + t].count(j) != t:\n            print('NO')\n            w = 1\n            break\n    if w == 0:\n        print('YES')", "def task_list(liste):\n    tasks = [liste[i] for i in range(0, len(liste) - 1) if liste[i + 1] != liste[i]]\n    tasks = tasks + list(liste[-1])\n    if len(set(tasks)) == len(tasks):\n        return 'YES'\n    else:\n        return 'NO'\ntests = int(input())\nfor i in range(tests):\n    length = int(input())\n    print(task_list(str(input())))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    tasks = input()\n    j = 0\n    while j < n - 1:\n        if tasks[j] == tasks[j + 1]:\n            pass\n        elif tasks[j] in tasks[j + 1:n]:\n            print('NO')\n            break\n        j += 1\n    if j == n - 1:\n        print('YES')", "tst = int(input())\narr = []\nvals = []\nfor i in range(0, tst):\n    ln = int(input())\n    s = input()\n    vals.append(s)\nfor lst in vals:\n    good = 'YES'\n    for i in set(lst):\n        one = lst.find(i) + 1\n        last = lst.rfind(i) + 1\n        if lst.count(i) <= last - one:\n            good = 'NO'\n            break\n    arr.append(good)\nfor i in arr:\n    print(i)", "cases = int(input())\nfor i in range(cases):\n    days = int(input())\n    tasks = input()\n    solved_tasks = []\n    suspicious = True\n    for j in range(days - 1):\n        if tasks[j] in solved_tasks:\n            suspicious = False\n            break\n        if tasks[j] != tasks[j + 1]:\n            solved_tasks.append(tasks[j])\n    if tasks[-1] in solved_tasks:\n        suspicious = False\n    if suspicious == True:\n        print('YES')\n    else:\n        print('NO')", "test_cases = int(input())\nfor i in range(test_cases):\n    num_letters = int(input())\n    letters_list = input()\n    cur_letter = letters_list[0]\n    finished_tasks = []\n    suspicious = False\n    for letter in letters_list:\n        if letter in finished_tasks:\n            suspicious = True\n            break\n        if letter == cur_letter:\n            continue\n        else:\n            finished_tasks.append(cur_letter)\n            cur_letter = letter\n    if not suspicious:\n        print('YES')\n    else:\n        print('NO')", "def sol(s):\n    for _ in range(len(s)):\n        if s[_] * s.count(s[_]) not in s:\n            return 'NO'\n    return 'YES'\nt = int(input())\nfor _ in range(t):\n    n = input()\n    s = input()\n    print(sol(s))", "for _ in range(int(input())):\n    n = int(input())\n    arr = input()\n    (last_char, past_char) = (None, set())\n    flag = True\n    for i in range(n):\n        curr = arr[i]\n        if curr == last_char:\n            past_char.add(curr)\n        elif curr not in past_char:\n            past_char.add(last_char)\n            last_char = curr\n        else:\n            flag = False\n            break\n    if flag is True:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(0, t):\n    encontradas = []\n    n = int(input())\n    h = 0\n    letras = input()\n    l = letras[0]\n    a = True\n    encontradas.append(l)\n    for joh in range(1, n):\n        if letras[joh] != letras[joh - 1] and letras[joh] in encontradas:\n            print('NO')\n            a = False\n            break\n        if letras[joh] not in encontradas:\n            encontradas.append(letras[joh])\n    if a == True:\n        print('YES')", "def get_problem_status(tasks):\n    st = set()\n    codes = list(map(ord, tasks))\n    n = len(tasks)\n    for i in range(n - 1):\n        curr = codes[i]\n        ne = codes[i + 1]\n        if curr - ne != 0:\n            st.add(curr)\n            if ne in st:\n                return 'NO'\n    return 'YES'\ntests = int(input())\nfor i in range(tests):\n    n = int(input())\n    tasks = input()\n    if n == 1:\n        print('YES')\n    else:\n        print(get_problem_status(tasks))", "def checkArray(array):\n    result = True\n    for (index, item) in enumerate(array[2:]):\n        if item in array[:index + 1]:\n            result = False\n            break\n    return result\nimport re\ntestcases = int(input())\nfor test_index in range(testcases):\n    length = int(input())\n    input_str = input()\n    pattern = re.compile('(.)\\\\1{1,}', re.DOTALL)\n    input_str = pattern.sub('\\\\1', input_str)\n    array = list(input_str)\n    print('YES' if checkArray(array) else 'NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    x = s[0]\n    for i in range(1, len(s)):\n        if s[i - 1] != s[i]:\n            x += s[i]\n    print('YES' if len(x) == len(set(x)) else 'NO')", "def problems_checker(problems):\n    clear_data = []\n    for i in problems:\n        if clear_data == [] or i != clear_data[-1]:\n            clear_data.append(i)\n    if len(clear_data) == len(set(clear_data)):\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    p = input()\n    problems_checker(p)", "t = int(input())\nfor x in range(t):\n    l = int(input())\n    n = input()\n    for i in range(1, len(n)):\n        if n[i] in n[:i] and n[i] != n[i - 1]:\n            print('NO')\n            break\n    else:\n        print('YES')", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    str_ = input()\n    str_list = []\n    str_list.append(str_[0])\n    flag = 0\n    for j in range(0, n):\n        if str_[j] == str_list[-1]:\n            flag = 1\n        elif str_list.count(str_[j]) == 1:\n            flag = 0\n            break\n        else:\n            str_list.append(str_[j])\n            flag = 1\n    if flag == 0:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    l = [0 for i in range(26)]\n    n = int(input())\n    s = input()\n    l[ord(s[0]) - 65] = 1\n    for i in range(1, n):\n        if s[i] != s[i - 1] and l[ord(s[i]) - 65]:\n            print('NO')\n            break\n        elif s[i] != s[i - 1]:\n            l[ord(s[i]) - 65] = 1\n    else:\n        print('YES')", "num1 = int(input())\nfor i in range(num1):\n    num2 = int(input())\n    list1 = []\n    a = input()\n    a0 = a[0]\n    for j in range(num2):\n        if a0 == a[j]:\n            continue\n        else:\n            list1.append(a0)\n            a0 = a[j]\n    list1.append(a[len(a) - 1])\n    set1 = set(list1)\n    if len(set1) == len(list1):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    s = input()\n    c = 0\n    for i in range(n - 1):\n        if s[i] != s[i + 1]:\n            if s[i + 1] in s[:i + 1]:\n                c = c + 1\n                break\n    if s[n - 1] in s[:n - 1] and s[n - 2] != s[n - 1]:\n        c = c + 1\n    if c == 0:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\nfor i in range(n):\n    t = int(input())\n    s = input()\n    if s[-1] == 'a':\n        s += 'b'\n    else:\n        s += 'a'\n    l = []\n    t = True\n    for i in range(1, len(s)):\n        if s[i] in l:\n            t = False\n        elif s[i] != s[i - 1]:\n            l.append(s[i - 1])\n    if t:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    word = input()\n    (arr, i) = ([-1 for i in range(26)], 0)\n    while i < n:\n        if arr[ord(word[i]) - 65] != -1 and i - 1 >= 0 and (word[i] != word[i - 1]):\n            print('NO')\n            break\n        arr[ord(word[i]) - 65] = i\n        i += 1\n    if i >= n:\n        print('YES')", "for i in range(int(input())):\n    n = int(input())\n    s = 'YES'\n    l = list(map(str, input()))\n    d = []\n    for i in range(n - 1):\n        if l[i] != l[i + 1]:\n            d.append(l[i])\n        if l[i + 1] in d:\n            s = 'NO'\n            break\n    print(s)", "T = int(input())\nwhile T:\n    n = int(input())\n    task = input()\n    num = [0 for i in range(30)]\n    task = list(task)\n    l = len(task)\n    ok = True\n    for i in range(0, l):\n        u = ord(task[i]) - ord('A')\n        if i and task[i] != task[i - 1] and num[u]:\n            ok = False\n        num[u] = 1\n    print('YES' if ok else 'NO')\n    T -= 1", "def fun(n, s):\n    l = []\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            continue\n        elif s[i] not in l and s[i + 1] not in l:\n            l.append(s[i])\n        else:\n            return 'NO'\n    return 'YES'\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    print(fun(n, s))", "t = int(input())\nwhile t:\n    n = int(input())\n    tasks = str(input())\n    temp = ''\n    t_before = '.'\n    s = False\n    for i in range(0, n):\n        if t_before != tasks[i]:\n            for j in range(0, len(temp)):\n                if tasks[i] == temp[j]:\n                    s = True\n                    break\n            if not s:\n                temp += tasks[i]\n                t_before = tasks[i]\n            else:\n                break\n    if s:\n        print('NO')\n    else:\n        print('YES')\n    t -= 1", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    for i in range(1, len(s)):\n        if s[i] in s[:i] and s[i] != s[i - 1]:\n            print('NO')\n            break\n    else:\n        print('YES')", "for j in range(int(input())):\n    n = int(input())\n    s = input()\n    for i in range(1, len(s)):\n        if s[i] in s[:i] and s[i] != s[i - 1]:\n            print('NO')\n            break\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    m = input()\n    for i in range(1, len(m)):\n        if m[i] in m[:i] and m[i] != m[i - 1]:\n            print('NO')\n            break\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    s = list(s)\n    for j in range(len(s)):\n        temp = j\n        c = 0\n        b = 0\n        for k in range(j + 1, len(s)):\n            if s[j] == s[k]:\n                if k - temp == 1:\n                    temp = k\n                else:\n                    c = 1\n            if c == 1:\n                print('NO')\n                b = 1\n                break\n        if b == 1:\n            break\n    else:\n        print('YES')", "for i in range(int(input())):\n    n = int(input())\n    a = input()\n    f = 0\n    for i in range(n - 1):\n        if a[i + 1] != a[i]:\n            if a[i + 1] in a[:i + 1]:\n                print('NO')\n                f = 1\n                break\n    if f == 0:\n        print('YES')", "for i in range(int(input())):\n    x = int(input())\n    s = list(input())\n    for j in range(1, x):\n        if s[j] in s[:j] and s[j] != s[j - 1]:\n            print('NO')\n            break\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    a = [s[i] for i in range(n - 1) if s[i] != s[i + 1]]\n    a.append(s[-1])\n    print('YES' if len(a) == len(set(a)) else 'NO')", "for p in range(int(input())):\n    n = int(input())\n    s = str(input())\n    (d, x) = ({}, '0')\n    for a in s:\n        if d.get(a) and x != a:\n            print('NO')\n            break\n        else:\n            d[a] = 1\n        x = a\n    else:\n        print('YES')", "t = int(input())\nfor x in range(t):\n    n = int(input())\n    s = input()\n    for i in range(1, len(s)):\n        if s[i] in s[:i] and s[i] != s[i - 1]:\n            print('NO')\n            break\n    else:\n        print('YES')", "def isSuspicious(tasks, n):\n    checker = [[0, 0] for _ in range(26)]\n    checker[ord(tasks[0]) - ord('A')][0] == 1\n    for i in range(1, n):\n        if checker[ord(tasks[i]) - ord('A')][1]:\n            return 'NO'\n        checker[ord(tasks[i]) - ord('A')][0] = 1\n        if tasks[i - 1] != tasks[i]:\n            checker[ord(tasks[i - 1]) - ord('A')][1] = 1\n    return 'YES'\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    tasks = input()\n    print(isSuspicious(tasks, n))", "n = int(input())\nwhile n > 0:\n    f = int(input())\n    s = input()\n    c = 0\n    for i in range(f - 1):\n        if s[i] == s[i + 1]:\n            continue\n        for j in range(i + 1, f):\n            if s[i] == s[j]:\n                c += 1\n                break\n        if c > 0:\n            break\n    if c > 0:\n        print('NO')\n    else:\n        print('YES')\n    n -= 1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    output = 'YES'\n    str = input()\n    str_dict = {}\n    for i in range(1, n):\n        if str_dict.get(str[i], False):\n            output = 'NO'\n            break\n        if str[i - 1] != str[i]:\n            str_dict[str[i - 1]] = True\n    print(output)", "def main():\n    for t in range(int(input())):\n        n = int(input())\n        s = input()\n        flag = True\n        i = 0\n        while i < n:\n            x = s[i]\n            while i < n and s[i] == x:\n                i += 1\n            j = i\n            while j < n:\n                if s[j] == x:\n                    flag = False\n                    break\n                j += 1\n            if not flag:\n                break\n        print('YES' if flag else 'NO')\nmain()", "n = int(input())\nfor i in range(n):\n    a = int(input())\n    s = input()\n    s1 = []\n    flag = True\n    for j in range(a - 1):\n        if s[j + 1] in s1:\n            flag = False\n            break\n        if s[j] != s[j + 1]:\n            s1.append(s[j])\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "def teacher(s):\n    seen = set([s[0]])\n    for i in range(1, len(s)):\n        if s[i] in seen and s[i] != s[i - 1]:\n            return False\n        seen.add(s[i])\n    return True\nfor _ in range(int(input())):\n    n = int(input())\n    s = input()\n    print('YES' if teacher(s) else 'NO')", "m = int(input())\nfor t in range(m):\n    n = int(input())\n    a = input()\n    f = 0\n    for i in range(1, n):\n        if a[i] != a[i - 1] and a[i] in a[0:i]:\n            f = 1\n            break\n    if f == 0:\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    input()\n    k = input()\n    c = 0\n    for i in range(len(k) - 1):\n        if k[i] != k[i + 1]:\n            c += 1\n    if c == len(set(k)) - 1:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    string = input()\n    found = False\n    for j in range(n - 1):\n        first = string[j]\n        second = string[j + 1]\n        if first != second:\n            if string[j + 1:].find(first) != -1:\n                found = True\n    if found == True:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(0, int(input())):\n    n = int(input())\n    s = input()\n    arr = []\n    arr.append(s[0])\n    for i in range(0, n):\n        if arr[-1] != s[i]:\n            arr.append(s[i])\n    l = len(arr)\n    cl = len(set(arr))\n    if l == cl:\n        print('YES')\n    else:\n        print('NO')", "test_cases = int(input())\nfor t in range(test_cases):\n    n = int(input())\n    task_order = input()\n    seen = []\n    flag = True\n    i = 0\n    while i < len(task_order):\n        letter = task_order[i]\n        if letter not in seen:\n            seen.append(letter)\n        else:\n            flag = False\n            break\n        while True:\n            i += 1\n            if i == len(task_order) or letter != task_order[i]:\n                break\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    l = [0]\n    n = int(input())\n    s = input()\n    for j in range(n):\n        d = s[j]\n        if l[-1] != d:\n            if d in l:\n                print('NO')\n                f = False\n                break\n            else:\n                l.append(d)\n                f = True\n    if f:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    ls = [0] * 26\n    ele = s[0]\n    flag = 0\n    for i in range(1, len(s)):\n        if ele == s[i]:\n            continue\n        elif ls[ord(s[i]) - 65] == 0:\n            ele = s[i]\n            ls[ord(s[i - 1]) - 65] = 1\n        else:\n            flag = 1\n            break\n    if flag == 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nwhile t > 0:\n    n = int(input())\n    s = input()\n    for i in range(1, len(s)):\n        if s[i] in s[:i] and s[i] != s[i - 1]:\n            print('NO')\n            break\n    else:\n        print('YES')\n    t -= 1", "T = int(input())\nfor t in range(1, T + 1):\n    n = int(input())\n    s = input().strip()\n    solved = set()\n    cur = None\n    sus = False\n    for el in s:\n        if el == cur:\n            continue\n        else:\n            solved.add(cur)\n            if el in solved:\n                sus = True\n            cur = el\n    print('NO' if sus else 'YES')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    tasks = input()\n    check = set(tasks[0])\n    last = tasks[0]\n    suspicious = False\n    for i in range(1, n):\n        if tasks[i] != last and tasks[i] in check:\n            suspicious = True\n            break\n        check.add(tasks[i])\n        last = tasks[i]\n    if suspicious:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    word = input()\n    (arr, i) = ([-1 for i in range(26)], 0)\n    while i < n:\n        if arr[ord(word[i]) - 65] != -1 and i - 1 >= 0 and (word[i] != word[i - 1]):\n            print('NO')\n            break\n        arr[ord(word[i]) - 65] = i\n        i += 1\n    if i >= n:\n        print('YES')", "b = []\nfor i in range(int(input())):\n    a = str()\n    n = int(input())\n    a = str(input())\n    k = 1\n    for x in range(1, n):\n        if a[x - 1] != a[x]:\n            k = k + 1\n    a = ''.join(set(a))\n    if len(a) != k:\n        b.append('NO')\n    else:\n        b.append('YES')\nprint(*b, sep='\\n')"]