["import math\nlist_ans = []\nfor _ in range(int(input())):\n    n = int(input())\n    list1 = list(map(int, input().split()))\n    ans = 0\n    a = 0\n    b = list1[-1]\n    for i in range(n - 2, -1, -1):\n        if list1[i] - b > a:\n            a = list1[i] - b\n        elif list1[i] < b:\n            b = list1[i]\n    list_ans.append(math.ceil(math.log(a + 1, 2)))\nfor item in list_ans:\n    print(item)", "import sys\nimport math\n\ndef answer(n, a):\n    curr_step = 0\n    if n == 1:\n        return 0\n    mx = a[0]\n    mxd = 0\n    for i in range(1, n):\n        if a[i] > mx:\n            mx = a[i]\n        d = mx - a[i]\n        if d > mxd:\n            nsf0 = math.floor(math.log2(d)) + 1\n            mxd = 2 ** nsf0 - 1\n    return int(math.log2(mxd + 1))\n\ndef main():\n    t = int(sys.stdin.readline())\n    while t:\n        n = int(sys.stdin.readline())\n        a = tuple(map(int, sys.stdin.readline().split()))\n        print(answer(n, a))\n        t -= 1\n    return\nmain()", "def solve(a):\n    maxdiff = 0\n    lastmax = a[0]\n    for ni in range(1, len(a)):\n        if a[ni] > lastmax:\n            lastmax = a[ni]\n        else:\n            maxdiff = max(maxdiff, lastmax - a[ni])\n    p = 0\n    while maxdiff > 0:\n        p += 1\n        maxdiff //= 2\n    return p\nt = int(input())\nans = []\nfor ti in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    ans.append(solve(a))\nfor a in ans:\n    print(a)", "def main_function():\n    import sys\n    input = sys.stdin.readline\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        current_max_num = a[0]\n        max_difference = 0\n        for el in a:\n            if el < current_max_num:\n                max_difference = max(max_difference, current_max_num - el)\n            else:\n                current_max_num = el\n        if max_difference == 0:\n            print(0)\n        else:\n            print(len(bin(max_difference)) - 2)\nmain_function()", "import sys\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\n\ndef main():\n    for _ in range(II()):\n        inf = 10 ** 9 + 7\n        n = II()\n        aa = LI()\n        mx = -inf\n        mxd = -inf\n        for (i, a) in enumerate(aa):\n            d = mx - a\n            if d > mxd:\n                mxd = d\n            if a > mx:\n                mx = a\n        if mxd > 0:\n            print(mxd.bit_length())\n        else:\n            print(0)\nmain()", "import sys\nimport math as m\n\ndef calculateT(argList):\n    value = argList[0]\n    maxValue = 0\n    for i in range(1, len(argList)):\n        maxValue = max(maxValue, value - argList[i])\n        value = max(value, argList[i])\n    if maxValue == 0:\n        return 0\n    else:\n        return int(m.log(maxValue, 2)) + 1\n\ndef main():\n    counter = 0\n    t = 0\n    n = 0\n    a = []\n    for input in sys.stdin:\n        counter += 1\n        if counter == 1:\n            t = int(input)\n        elif counter % 2 == 0:\n            n = int(input)\n        else:\n            a = [int(m) for m in input.split()]\n            print(calculateT(a))\nmain()", "import sys\nimport math\nfor _ in range(int(sys.stdin.readline())):\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    b = a[0]\n    c = 0\n    for i in range(1, n):\n        if a[i] > b:\n            b = a[i]\n        elif c < b - a[i]:\n            c = b - a[i]\n    if c == 0:\n        print(0)\n    else:\n        print(math.floor(math.log(c, 2)) + 1)", "import math\nn = int(input())\nfor _ in range(n):\n    m = int(input())\n    lis = [int(x) for x in input().split(' ')]\n    cur_max = lis[0]\n    diff_max = -10000000000.0\n    for i in range(1, len(lis)):\n        diff = cur_max - lis[i]\n        if diff_max < diff:\n            diff_max = diff\n        if lis[i] > cur_max:\n            cur_max = lis[i]\n    print(int(math.log2(diff_max) + 1) if diff_max > 0 else 0)", "t = int(input())\nimport math\nfor i in range(t):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    ma = lis[0]\n    ans = []\n    for j in range(1, len(lis)):\n        if lis[j] < ma:\n            ans.append(ma - lis[j])\n        else:\n            ma = lis[j]\n    if len(ans) == 0:\n        print(0)\n    else:\n        print(math.ceil(math.log(max(ans) + 1, 2)))", "import math\n\ndef poweredAddition(n, arr):\n    used = [-1]\n    diffs = []\n    ans = 0\n    for i in range(1, len(arr)):\n        if arr[i] < arr[i - 1]:\n            ans = max(ans, int(1 + math.log2(arr[i - 1] - arr[i])))\n            arr[i] = arr[i - 1]\n    return ans\nnumCases = int(input())\ncases = []\nfor i in range(numCases):\n    n = int(input())\n    vals = [int(x) for x in input().split(' ')]\n    cases.append([n, vals])\nfor k in cases:\n    answer = poweredAddition(k[0], k[1])\n    print(answer)", "t = int(input())\nwhile t:\n    t -= 1\n    input()\n    a = list(map(int, input().split()))\n    (x, m, d) = (0, -1000000000.0, 0)\n    for i in a:\n        m = max(m, i)\n        d = max(d, m - i)\n    print(d.bit_length())", "t = int(input())\nwhile t:\n    t -= 1\n    input()\n    a = list(map(int, input().split()))\n    (x, m, d) = (0, -1000000000.0, 0)\n    for i in a:\n        d = max(d, (m := max(m, i)) - i)\n    print(d.bit_length())", "def f(L):\n    maxm = 0\n    n = len(L)\n    for i in range(n - 1):\n        if L[i + 1] < L[i]:\n            maxm = max(maxm, L[i] - L[i + 1])\n            L[i + 1] = L[i]\n    if maxm == 0:\n        return 0\n    return len(bin(maxm)) - 2\nn = int(input())\nfor i in range(n):\n    m = int(input())\n    L = list(map(int, input().split()))\n    print(f(L))", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    max = a[0]\n    for i in range(n):\n        if max < a[i]:\n            max = a[i]\n        b.append(max)\n    max = 0\n    for i in range(n):\n        if max < b[i] - a[i]:\n            max = b[i] - a[i]\n    print(0 if max == 0 else len(bin(max)[2:]))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    w = [int(k) for k in input().split()]\n    mx = -10 ** 10\n    res = 0\n    for j in w:\n        res = max(res, mx - j)\n        mx = max(mx, j)\n    print(len(bin(res)[2:]) if res > 0 else 0)", "import math\n\ndef get_max_Gap(arr):\n    mx = arr[0]\n    mx_gap = 0\n    for i in range(len(arr)):\n        mx_gap = max(mx_gap, mx - arr[i])\n        mx = max(mx, arr[i])\n    return mx_gap\n\ndef solution():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        mx = get_max_Gap(arr)\n        if mx != 0:\n            res = math.ceil(math.log2(mx + 1))\n            print(res)\n        else:\n            print(0)\nimport sys\nimport threading\nsys.setrecursionlimit(1 << 30)\nthreading.stack_size(1 << 27)\nthread = threading.Thread(target=solution)\nthread.start()\nthread.join()", "from sys import stdin, stdout\n\ndef f(a, n):\n    ans = 0\n    m = a[0]\n    for i in range(1, n):\n        if m > a[i]:\n            x = m - a[i]\n            bi = len(bin(x)) - 2\n            if bi > ans:\n                ans = bi\n            if m < a[i]:\n                m = a[i]\n        else:\n            m = a[i]\n    print(ans)\nt = int(stdin.readline())\nfor _ in range(t):\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    f(a, n)", "import sys\nimport math\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nt = inp()\nfor c in range(0, t):\n    a = inp()\n    la = inlt()\n    ld = []\n    m = -1000000000000\n    for d in range(0, a):\n        m = max(m, la[d])\n        ld.append(la[d] - m)\n    if min(ld) == 0:\n        print('0')\n    else:\n        print(str(math.ceil(math.log2(abs(min(ld)) + 1))))", "from math import log\nfrom math import ceil\nT = int(input())\nk = [0] * T\nls = [0] * T\nfor t in range(T):\n    k[t] = int(input())\n    ls[t] = [int(i) for i in input().split(' ')]\n\ndef mins(l):\n    l0 = []\n    m = l[-1]\n    for i in range(len(l) - 1, -1, -1):\n        if l[i] < m:\n            m = l[i]\n        l0.append(m)\n    l0.reverse()\n    return l0\n\ndef ans(l):\n    if len(l) == 1:\n        return 0\n    n = mins(l)\n    m = 0\n    for i in range(len(n)):\n        x = l[i] - n[i]\n        if x > m:\n            m = x\n    return ceil(log(1 + m, 2))\nfor t in range(T):\n    print(ans(ls[t]))", "import math\nfor i in range(int(input())):\n    n = int(input())\n    lis = list(map(int, input().split()))\n    cmax = lis[0]\n    maxi = 0\n    for i in lis:\n        if i > cmax:\n            cmax = i\n        maxi = max(maxi, cmax - i)\n    if maxi == 0:\n        print(0)\n    else:\n        print(int(math.log2(maxi)) + 1)", "import math\nt = int(input())\nans = []\n\ndef solve(a, n):\n    b = a[:]\n    maxtime = 0\n    time = 0\n    for x in range(1, n):\n        if b[x - 1] > b[x]:\n            time = math.ceil(math.log(b[x - 1] - b[x] + 1) / math.log(2))\n            maxtime = max(time, maxtime)\n            b[x] = b[x - 1]\n    return maxtime\nfor x in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans.append(solve(a, n))\nfor a in ans:\n    print(a)", "import math\nt = int(input())\nans = 0\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    m = a[0]\n    ans = 0\n    for i in range(1, n):\n        m = max(m, a[i])\n        if a[i] < m:\n            d = m - a[i]\n            ans = max(ans, int(math.log2(d)) + 1)\n    print(ans)", "t = int(input())\nwhile t:\n    t -= 1\n    input()\n    a = list(map(int, input().split()))\n    (x, m, d) = (0, -1000000000.0, 0)\n    for i in a:\n        d = max(d, (m := max(m, i)) - i)\n    print(d.bit_length())", "import math\nt = int(input())\nwhile t:\n    n = int(input())\n    lst = input().split()\n    prev = int(lst[0])\n    maxdiff = 0\n    for i in range(1, n):\n        curr = int(lst[i])\n        maxdiff = max(maxdiff, prev - curr)\n        prev = max(prev, curr)\n    if maxdiff == 0:\n        print(0)\n    else:\n        print(int(math.log2(maxdiff)) + 1)\n    t = t - 1", "from sys import *\nt = int(stdin.readline())\nimport math\nfor _ in range(t):\n    mxd = 0\n    mx = 0\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split(' ')))\n    for i in range(1, n, 1):\n        d = a[i] - a[i - 1]\n        if d >= 0:\n            continue\n        if -d < mxd:\n            a[i] = a[i - 1]\n            continue\n        l = int(math.log(-d, 2)) + 1\n        mx = l\n        mxd = 2 ** l\n        a[i] = a[i - 1]\n    print(mx)", "def f(a):\n    max_val = a[0]\n    diff = 0\n    size = len(a)\n    for i in range(size):\n        if max_val < a[i]:\n            max_val = a[i]\n        diff = max(diff, max_val - a[i])\n    if diff == 0:\n        return 0\n    n = 0\n    b = 1\n    while b - 1 < diff:\n        b *= 2\n        n += 1\n    return n\nm = int(input())\nres = []\nfor _ in range(m):\n    n = int(input())\n    a = list(map(int, input().split()))\n    res.append(f(a))\nfor s in res:\n    print(s)", "from math import log\nfrom math import ceil\nT = int(input())\nls = [0] * T\nfor t in range(T):\n    input()\n    ls[t] = [int(i) for i in input().split(' ')]\n\ndef mins(l):\n    l0 = []\n    m = l[-1]\n    for i in range(len(l) - 1, -1, -1):\n        if l[i] < m:\n            m = l[i]\n        l0.append(m)\n    return l0\n\ndef ans(l):\n    n = mins(l)\n    m = 0\n    for i in range(len(n)):\n        x = l[i] - n[len(n) - 1 - i]\n        if x > m:\n            m = x\n    return ceil(log(1 + m, 2))\nfor t in range(T):\n    print(ans(ls[t]))", "def solve(arr):\n    diff = 0\n    start = arr[0]\n    i = 1\n    while i < len(arr):\n        if arr[i] > start:\n            start = arr[i]\n        else:\n            diff = max(diff, start - arr[i])\n        i += 1\n    if diff == 0:\n        return 0\n    return len(format(diff, 'b'))\nt = int(input())\nans = []\nfor s in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    ans.append(solve(arr))\nfor it in ans:\n    print(it)", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    a = arr[0]\n    T = 0\n    for j in range(1, n):\n        if a < arr[j]:\n            a = arr[j]\n        else:\n            T = max(T, a - arr[j])\n    ans = math.log2(T + 1)\n    if ans > int(ans):\n        ans = int(ans) + 1\n    else:\n        ans = int(ans)\n    print(ans)", "from math import log2\n\ndef solve(n, arr):\n    ans = 0\n    for i in range(1, n):\n        if arr[i] < arr[i - 1]:\n            ans = max(ans, int(log2(arr[i - 1] - arr[i])) + 1)\n            arr[i] = arr[i - 1]\n    return ans\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(solve(n, arr))", "def next_pow(num):\n    b = bin(num)[2:]\n    if b.count('1') == 1:\n        return len(b) - 1\n    else:\n        return len(b) - 1\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    score = 0\n    m = arr[0]\n    for i in range(1, n):\n        d = arr[i] - m\n        if d < 0:\n            k = next_pow(abs(d))\n            if k + 1 > score:\n                score = k + 1\n        if arr[i] > m:\n            m = arr[i]\n    return score\nfor _ in range(int(input())):\n    print(main())", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    max_diff = -10 ** 9\n    mx = -10 ** 9\n    for i in a:\n        mx = max(mx, i)\n        max_diff = max(max_diff, mx - i)\n    print(int(math.log(max_diff + 1, 2) + 0.999999999))", "from math import *\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom collections import Counter as ctr\nfrom collections import deque as dq\nfrom array import array\nfrom re import search\nli = lambda : list(map(int, input().split()))\narr = lambda a: array('i', a)\nbi = lambda n: bin(n).replace('0b', '')\nyn = lambda f: print('NYOE S'[f::2])\nsbstr = lambda a, s: search('.*'.join(a), s)\n\ndef solve():\n    for _ in range(int(input())):\n        n = int(input())\n        a = li()\n        s = 0\n        m = a[0]\n        for i in range(1, n):\n            if a[i] < m:\n                sr = m - a[i]\n                a[i] = m\n                if sr > 2 ** s - 1:\n                    s = ceil(log(sr + 1, 2))\n            else:\n                m = a[i]\n        print(s)\nsolve()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = a.copy()\n    for i in range(n - 1):\n        if b[i] > b[i + 1]:\n            b[i + 1] = b[i]\n    s = max([b[i] - a[i] for i in range(n)])\n    print(len(bin(s)) - 2 if s != 0 else 0)", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    c = 0\n    for j in range(1, len(l)):\n        if l[j] - l[j - 1] < 0:\n            c = max(c, int(math.log(l[j - 1] - l[j], 2)) + 1)\n            l[j] = l[j - 1]\n    print(c)", "import math\nt = int(input())\nans = []\n\ndef solve(a, n):\n    b = a[:]\n    maxtime = 0\n    time = 0\n    for x in range(1, n):\n        if b[x - 1] > b[x]:\n            time = math.floor(math.log(b[x - 1] - b[x]) / math.log(2)) + 1\n            maxtime = max(time, maxtime)\n            b[x] = b[x - 1]\n    return maxtime\nfor x in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans.append(solve(a, n))\nfor a in ans:\n    print(a)", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = 0\n    mx = a[0]\n    for i in range(1, n):\n        if mx - a[i] > d:\n            d = mx - a[i]\n        if a[i] > mx:\n            mx = a[i]\n    ans = 0\n    c = 0\n    p = 1\n    while c < d:\n        c += p\n        p *= 2\n        ans += 1\n    return ans\nt = int(input())\nfor i in range(t):\n    print(solve())", "import math\n\ndef solve(arr):\n    res = 0\n    prev_max = arr[0]\n    for i in arr[1:]:\n        if i < prev_max:\n            res = max(res, math.ceil(math.log(prev_max - i + 1) / math.log(2)))\n        prev_max = max(i, prev_max)\n    print(res)\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    solve(arr)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = a[0]\n    b = 0\n    for x in a:\n        m = max(m, x)\n        b = max(b, m - x)\n    s = 0\n    while b > 0:\n        b >>= 1\n        s += 1\n    print(s)", "import sys\nfrom math import sqrt, floor\nfrom collections import deque, Counter\ninp = sys.stdin.readline\nread = lambda : list(map(int, inp().split()))\n\ndef a():\n    ans = ''\n    for _ in range(int(inp())):\n        ans += inp()\n    print(ans)\n\ndef b():\n    ans = ''\n    for _ in range(int(inp())):\n        n = int(inp())\n        arr = deque(sorted(read()))\n        arr2 = deque()\n        for i in range(n // 2):\n            arr2.appendleft(arr.pop())\n            arr2.appendleft(arr.popleft())\n        if arr:\n            arr2.appendleft(arr.pop())\n        print(*arr2)\n\ndef c():\n    ans = ''\n    for _ in range(int(inp())):\n        n = int(inp())\n        arr = read()\n        mi = 0\n        prev = arr[0]\n        for i in range(1, n):\n            curr = arr[i]\n            if curr < prev:\n                mi = max(mi, len(bin(prev - curr)[2:]))\n            else:\n                prev = curr\n        ans += str(mi) + '\\n'\n    print(ans)\nc()", "from math import log2, sqrt\nR = lambda : map(int, input().split(' '))\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        arr = R()\n        max_diff = 0\n        prev = next(arr)\n        max_num = prev\n        for i in arr:\n            if max_num < i:\n                max_num = i\n            else:\n                max_diff = max(max_diff, max_num - i)\n        if max_diff == 0:\n            print(0)\n        else:\n            print(len(bin(max_diff)) - 2)\nmain()", "import sys\nfrom collections import defaultdict, deque\nfrom math import sqrt\n\ndef input():\n    return sys.stdin.readline()[:-1]\n\ndef solve():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    dif = 0\n    mx = a[0]\n    for i in range(0, n):\n        mx = max(mx, a[i])\n        dif = max(dif, mx - a[i])\n    x = [x for x in bin(dif)[2:]]\n    if '1' not in x:\n        print(0)\n    else:\n        print(len(x))\nt = int(input())\nfor _ in range(t):\n    solve()", "import sys\n\ndef main():\n    res = ''\n    input = sys.stdin.readline\n    t = int(input())\n    for _ in range(t):\n        sub_res = 0\n        n = int(input())\n        a = list(map(int, input().split()))\n        for i in range(1, n):\n            if a[i] < a[i - 1]:\n                k = len(bin(a[i - 1] - a[i])) - 2\n                if k > sub_res:\n                    sub_res = k\n                a[i] = a[i - 1]\n        res += str(sub_res) + '\\n'\n    print(res)\nmain()", "import sys\ninput = sys.stdin.readline\nt = int(input())\nout = []\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    big = l[0]\n    need = 0\n    for v in l:\n        if v < big:\n            need = max(need, big - v)\n        else:\n            big = v\n    curr = 0\n    p = 0\n    while p < need:\n        curr += 1\n        p *= 2\n        p += 1\n    out.append(curr)\nprint('\\n'.join(map(str, out)))", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = a[0]\n    g = 0\n    for x in a:\n        if c < x:\n            c = x\n        else:\n            g = max(g, c - x)\n    return g.bit_length()\nt = int(input())\nfor _ in range(t):\n    print(solve())", "for i in range(int(input())):\n    input()\n    max_num = float('-inf')\n    max_diff = 0\n    for j in map(int, input().split()):\n        if j > max_num:\n            max_num = j\n        else:\n            max_diff = max(max_diff, max_num - j)\n    if max_diff == 0:\n        print(0)\n    else:\n        print(len(bin(max_diff)) - 2)", "import math\n\ndef solve(x):\n    return math.floor(math.log2(x))\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = list(map(int, input().split(' ')))\n    time = -1\n    for i in range(1, n):\n        if arr[i] < arr[i - 1]:\n            x = arr[i - 1] - arr[i]\n            arr[i] = arr[i - 1]\n            cnt = solve(x)\n            if cnt > time:\n                time = cnt\n    print(time + 1)", "for _ in ' ' * int(input()):\n    a = int(input())\n    b = list(map(int, input().split()))\n    s = j = 0\n    for i in range(1, a):\n        if b[i - 1] > b[i]:\n            s = max(s, b[i - 1] - b[i])\n            b[i] = b[i - 1]\n    while s:\n        j += 1\n        s //= 2\n    print(j)", "from cmath import sqrt\nimport math\nfrom collections import defaultdict, deque, Counter\nfrom functools import reduce\nfrom sys import stdin\ninput = stdin.readline\nfor _ in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    mx = 0\n    for i in range(1, n):\n        if a[i] < a[i - 1]:\n            t = math.floor(math.log2(a[i - 1] - a[i])) + 1\n            a[i] = a[i - 1]\n            mx = max(mx, t)\n    print(mx)", "def min_2(n):\n    if n == 0:\n        return 0\n    ans = 1\n    x = 1\n    while n > x:\n        n -= x\n        ans += 1\n        x *= 2\n    return ans\nfor t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    temp = -10 ** 9\n    max_d = 0\n    for i in range(len(a)):\n        if a[i] == temp:\n            pass\n        elif temp < a[i]:\n            temp = a[i]\n        else:\n            max_d = max(max_d, temp - a[i])\n    print(min_2(max_d))", "import math\n\ndef helper(diff):\n    time = math.ceil(math.log2(diff + 1))\n    return time\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    res = 0\n    for i in range(1, n):\n        if arr[i - 1] > arr[i]:\n            x = helper(arr[i - 1] - arr[i])\n            res = max(res, x)\n            arr[i] = arr[i - 1]\n    print(res)", "for _ in range(int(input())):\n    n = int(input())\n    l1 = list(map(int, input().split()))\n    answer = 0\n    max_so_far = l1[0]\n    for i in range(1, n):\n        if l1[i] >= max_so_far:\n            max_so_far = l1[i]\n        else:\n            answer = max(answer, (max_so_far - l1[i]).bit_length())\n    print(answer)", "import sys\nlines = sys.stdin.readlines()\nT = int(lines[0].strip())\nfor t in range(T):\n    n = int(lines[2 * t + 1].strip())\n    nums = list(map(int, lines[2 * t + 2].strip().split(' ')))\n    maxSec = 0\n    tmpMax = nums[0]\n    for i in range(1, n):\n        if nums[i] < tmpMax:\n            diff = bin(tmpMax - nums[i])[2:]\n            maxSec = max(maxSec, len(diff))\n        else:\n            tmpMax = nums[i]\n    print(maxSec)", "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 6)\n\ndef in_int():\n    return int(input())\n\ndef in_list():\n    return list(map(int, input().split()))\n\ndef in_str():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef in_ints():\n    return map(int, input().split())\nt = in_int()\nimport math\nfrom operator import itemgetter\nfor tt in range(t):\n    n = in_int()\n    a = in_list()\n    pre = a[0]\n    mx = 0\n    for xx in a[1:]:\n        pre = max(pre, xx)\n        mx = max(mx, pre - xx)\n    if mx == 0:\n        print(0)\n    else:\n        xx = mx\n        p = 1\n        while xx > 0:\n            p = xx & -xx\n            xx -= p\n        p = math.log2(p)\n        print(int(p) + 1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    t = 0\n    peak = -10 ** 9\n    for i in a:\n        if i > peak:\n            peak = i\n        else:\n            t = max(t, (peak - i).bit_length())\n    print(t)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    t = 0\n    peak = -10 ** 9\n    for i in a:\n        if i > peak:\n            peak = i\n        else:\n            t = max(t, peak - i)\n    print(t.bit_length() if t else '0')", "def powered(n, x):\n    cur = x[0]\n    dif = 0\n    for v in x:\n        if v > cur:\n            cur = v\n        else:\n            dif = max(dif, cur - v)\n    res = 0\n    while dif:\n        res += 1\n        dif //= 2\n    return res\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    x = list(map(int, input().split()))\n    print(powered(n, x))", "def msb(num):\n    cnt = 0\n    while num > 0:\n        num >>= 1\n        cnt += 1\n    return cnt\nt = int(input(''))\nfor i in range(t):\n    n = int(input(''))\n    a = []\n    curr_input = input('')\n    for j in curr_input.split(' '):\n        a.append(int(j))\n    prev = a[0] if len(a) > 0 else 0\n    max_diff = 0\n    for num in a[1:]:\n        curr = 0\n        if num < prev:\n            curr = prev - num\n        prev = curr + num\n        max_diff = max(max_diff, curr)\n    print(msb(max_diff))", "t = int(input())\nwhile t:\n    t -= 1\n    input()\n    a = list(map(int, input().split()))\n    (x, m, d) = (0, -1000000000.0, 0)\n    for i in a:\n        m = max(m, i)\n        d = max(d, m - i)\n    while d:\n        d //= 2\n        x += 1\n    print(x)", "from math import ceil, log2\nfor x in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    res = 0\n    cur = 0\n    for x in range(1, n):\n        if arr[x] < arr[x - 1]:\n            res = max(res, int(log2(arr[x - 1] - arr[x])) + 1)\n            arr[x] = arr[x - 1]\n    print(res)", "import math\nimport bisect\n\ndef printf(str):\n    print(str, end=' ')\ntest_case = int(input())\nt = 0\nwhile t < test_case:\n    t += 1\n    n = int(input())\n    ipt = input().split()\n    a = list(map(int, ipt))\n    mx = 0\n    for i in range(1, n):\n        if a[i] < a[i - 1]:\n            x = a[i - 1] - a[i]\n            x = int(math.floor(math.log2(x))) + 1\n            a[i] = a[i - 1]\n            mx = max(mx, x)\n    print(mx)", "import math\nT = int(input())\nfor _ in range(T):\n    elements = int(input())\n    arr = input().split()\n    first_element = int(arr[0])\n    max_second = 0\n    calculations = False\n    for el in arr[1:]:\n        el = int(el)\n        if el < first_element:\n            calculations = True\n            diff = int(math.log2(first_element - el))\n            if diff > max_second:\n                max_second = diff\n        else:\n            first_element = el\n    if calculations:\n        print(max_second + 1)\n    else:\n        print(0)", "I = input\nfor _ in [0] * int(I()):\n    I()\n    m = -1000000000.0\n    l = 0\n    for x in map(int, I().split()):\n        m = max(m, x)\n        l = max(l, m - x)\n    print(l and len(f'{l:b}'))", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    diff = -1\n    var = arr[0]\n    i = 1\n    while i < n:\n        while i < n and arr[i] < var:\n            new_d = var - arr[i]\n            if diff < new_d:\n                diff = new_d\n            i += 1\n        if i == n:\n            break\n        var = arr[i]\n        i += 1\n    if diff == -1:\n        print(0)\n        continue\n    ans = math.floor(math.log2(diff)) + 1\n    print(ans)", "(i, tmp) = (1, 1)\nx = [1]\nwhile tmp < 1000000000:\n    tmp *= 2\n    x.append(x[i - 1] + tmp)\n    i += 1\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    if n > 1:\n        max_diff = 0\n        for i in range(1, n):\n            if a[i - 1] > a[i]:\n                max_diff = max(max_diff, a[i - 1] - a[i])\n                a[i] = a[i - 1]\n        if max_diff > 0:\n            ans = next((idx for (idx, y) in enumerate(x) if y >= max_diff)) + 1\n    print(ans)", "import sys\nimport math\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, sys.stdin.readline().split()))\n    lst = [0] * n\n    curr_max = arr[0]\n    for i in range(len(arr)):\n        if arr[i] < curr_max:\n            lst[i] = curr_max - arr[i]\n        curr_max = max(curr_max, arr[i])\n    s = max(lst)\n    print(int(math.log(s, 2)) + 1 if s else 0)", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    T = 0\n    prev = a[0]\n    for i in range(1, n):\n        diff = a[i] - prev\n        if diff >= 0:\n            prev = a[i]\n        else:\n            T = max(T, int(1 + math.log2(-diff)))\n    print(T)", "t = int(input())\nfor k in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(1, n):\n        tmp = a[i - 1] - a[i]\n        if tmp > 0:\n            ans = max(ans, len(bin(tmp)) - 2)\n            a[i] = a[i - 1]\n    print(ans)", "import sys\nimport math\n\ndef func(d):\n    return math.ceil(math.log2(d + 1))\n\ndef process(A):\n    s = 0\n    m = A[0]\n    for i in range(1, len(A)):\n        if A[i] > m:\n            m = A[i]\n        elif A[i] < m:\n            s1 = func(m - A[i])\n            s = max(s, s1)\n    print(s)\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\n\ndef f(a, n):\n    return True\n\ndef is_permutation(arr):\n    for e in range(1, len(arr) + 1):\n        if e not in arr:\n            return False\n    return True\nt = inp()\nfor i in range(t):\n    n = inp()\n    A = inlt()\n    process(A)", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    maxi = a[0]\n    fin = 0\n    for i in range(1, n):\n        if a[i] > maxi:\n            maxi = a[i]\n        elif maxi - a[i] > fin:\n            fin = maxi - a[i]\n    if fin <= 2:\n        print(fin)\n    else:\n        print(int(math.log(fin, 2)) + 1)", "import sys\nimport math\n\ndef solve(A):\n    max_so_far = -2 ** 32\n    min_diff = 0\n    for i in range(len(A)):\n        if A[i] < max_so_far:\n            min_diff = max(min_diff, max_so_far - A[i])\n        else:\n            max_so_far = A[i]\n    return int(math.log(min_diff, 2)) + 1 if min_diff != 0 else 0\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    A = [int(x) for x in sys.stdin.readline().split(' ')]\n    print(solve(A))", "for _ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    x = 0\n    for i in range(n - 1):\n        y = ar[i + 1] - ar[i]\n        if y < 0:\n            x = max(x, len(bin(-y)) - 2)\n            ar[i + 1] = ar[i]\n    print(x)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n    else:\n        mini = 0\n        i = 1\n        mark = 0\n        f = 0\n        while i < n:\n            if a[i] >= a[i - 1] and f == 0:\n                mark = i\n                i += 1\n                continue\n            elif a[i] < a[mark]:\n                i += 1\n                f = 1\n                continue\n            else:\n                last = i\n                d = a[mark] - min(a[mark:last])\n                if d > mini:\n                    mini = d\n                f = 0\n                i += 1\n                mark = last\n        if mark != n - 1:\n            d = a[mark] - min(a[mark:])\n            if d > mini:\n                mini = d\n        if mini != 0:\n            ans = len(bin(mini)[2:])\n            print(ans)\n        else:\n            print(0)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mdiff = 0\n    mnum = a[0]\n    for i in range(n):\n        if mnum < a[i]:\n            mnum = a[i]\n        else:\n            mdiff = max(mdiff, mnum - a[i])\n    if mdiff == 0:\n        print(0)\n    else:\n        print(len(bin(mdiff)) - 2)", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    lst = list(map(int, input().split()))\n    s = 0\n    m = lst[0]\n    for i in range(1, n):\n        if lst[i] < m:\n            s = max(s, abs(m - lst[i]))\n        else:\n            m = lst[i]\n    if s != 0:\n        b = math.ceil(math.log(s + 1, 2))\n        print(b)\n    else:\n        print(0)", "import math\nt = int(input())\nwhile t:\n    t = t - 1\n    n = int(input())\n    a = input().split()\n    arr = list()\n    for i in a:\n        arr.append(int(i))\n    mx = arr[0]\n    mx_diff = 0\n    for i in range(1, n, 1):\n        if arr[i] > mx:\n            mx = arr[i]\n        if mx - arr[i] > mx_diff:\n            mx_diff = mx - arr[i]\n    if mx_diff > 0:\n        print(int(math.log(mx_diff, 2)) + 1)\n    else:\n        print('0')", "from math import log2\nfor _ in range(int(input())):\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in range(1, n):\n        if l[i - 1] > l[i]:\n            ans = max(ans, int(log2(l[i - 1] - l[i])) + 1)\n            l[i] = l[i - 1]\n    print(ans)", "import math\nn = input()\nn = int(n)\nfor i in range(n):\n    l = int(input())\n    x = input()\n    arr = x.split(' ')\n    minV = -(1 << 32)\n    res = 0\n    for j in arr:\n        j = int(j)\n        if j < minV:\n            t = math.ceil(math.log2(minV - j + 1))\n            res = max(t, res)\n        else:\n            minV = j\n    print(res)", "I = input\nfor _ in [0] * int(I()):\n    I()\n    m = -1000000000.0\n    l = 0\n    for x in map(int, I().split()):\n        m = max(m, x)\n        l = max(l, m - x)\n    print(l and len(f'{l:b}'))", "(A, B) = (int, input)\nfor k in range(A(B())):\n    n = A(B())\n    a = list(map(A, B().split()))\n    ans = 0\n    for i in range(1, n):\n        tmp = a[i - 1] - a[i]\n        if tmp > 0:\n            ans = max(ans, len(bin(tmp)) - 2)\n            a[i] = a[i - 1]\n    print(ans)", "I = input\nfor _ in [0] * int(I()):\n    I()\n    m = -1000000000.0\n    l = 0\n    for x in map(int, I().split()):\n        m = max(m, x)\n        l = max(l, m - x)\n    print(l and len(f'{l:b}'))", "I = input\nfor _ in range(int(I())):\n    I()\n    m = -1000000000.0\n    l = 0\n    for x in map(int, I().split()):\n        m = max(m, x)\n        l = max(l, m - x)\n    print(l and len(f'{l:b}'))", "tests = int(input())\nfor t in range(tests):\n    ans = 0\n    n = int(input())\n    num_arr = list(map(int, input().split(' ')))\n    for i in range(n - 1):\n        diff = num_arr[i + 1] - num_arr[i]\n        if diff >= 0:\n            continue\n        else:\n            diff = -diff\n            num_arr[i + 1] = num_arr[i]\n            ans = max(ans, diff.bit_length())\n    print(ans)", "import math\nT = int(input())\nfor t in range(T):\n    n = int(input())\n    a = [int(e) for e in input().split()]\n    m = a[0]\n    diff = 0\n    for i in range(1, len(a)):\n        if m - a[i] > diff:\n            diff = m - a[i]\n        if a[i] > m:\n            m = a[i]\n    if diff == 0:\n        print(0)\n    else:\n        print(int(math.log2(diff)) + 1)", "for _ in range(int(input())):\n    size = int(input())\n    (array, time, check) = (list(map(int, input().split())), -1000000000.0, 0)\n    for x in array:\n        time = max(time, x)\n        check = max(check, time - x)\n    print(check and len(f'{check:b}'))", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    c = a[0]\n    g = 0\n    for x in a:\n        if c < x:\n            c = x\n        else:\n            g = max(g, c - x)\n    return g.bit_length()\nt = int(input())\nfor _ in range(t):\n    print(solve())", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    x = list(map(int, input().split()))\n    cnt = 0\n    for j in range(n - 1):\n        if x[j] > x[j + 1]:\n            p = int(math.log2(x[j] - x[j + 1]))\n            p = p + 1\n            x[j + 1] = x[j]\n            if p > cnt:\n                cnt = p\n    print(cnt)", "T = int(input())\nfor t in range(T):\n    N = int(input())\n    A = [int(_) for _ in input().split()]\n    max_so_far = A[0]\n    answer = 0\n    for i in range(1, N):\n        el = A[i]\n        max_so_far = max(max_so_far, el)\n        answer = max(answer, (max_so_far - el).bit_length())\n    print(answer)", "T = int(input())\nimport math\nfor t in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    max_diff = 0\n    last = a[0]\n    for i in range(1, len(a)):\n        if a[i] < last:\n            diff = last - a[i]\n            max_diff = max(diff, max_diff)\n        else:\n            last = a[i]\n    if max_diff == 0:\n        print(0)\n    else:\n        res = int(math.log2(max_diff)) + 1\n        print(res)", "z = int(input())\nwhile z:\n    z -= 1\n    n = int(input())\n    a = list(map(int, input().strip().split(' ')))\n    t = 0\n    last = a[0]\n    for i in range(1, n):\n        if a[i] >= last:\n            last = a[i]\n        else:\n            d = last - a[i]\n            x = len(bin(d)[2:])\n            if x > t:\n                t = x\n    print(t)", "import math\nR1 = lambda : list(map(int, input().split()))\nR2 = lambda : int(input())\nt = R2()\nfor _ in range(int(t)):\n    (n, a) = (R2(), R1())\n    l = a[0]\n    ans = -10000000000.0\n    for i in range(1, n):\n        if l > a[i]:\n            ans = max(ans, l - a[i])\n        else:\n            l = a[i]\n    if ans <= 0:\n        print(0)\n    else:\n        print(int(math.log2(ans)) + 1)", "from math import log2\nT = int(input())\nfor t in range(T):\n    n = int(input())\n    a = list(map(int, input().split()))\n    maxGap = 0\n    maxVal = -1000000000\n    for i in range(n):\n        maxVal = max(maxVal, a[i])\n        maxGap = max(maxGap, maxVal - a[i])\n    if maxGap == 0:\n        print(0)\n        continue\n    print(int(log2(maxGap)) + 1)", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    c = 0\n    for x in range(1, n):\n        if a[x] < a[x - 1]:\n            c = max(a[x - 1] - a[x], c)\n            a[x] = a[x - 1]\n    if c == 0:\n        print(0)\n    else:\n        print(int(math.log(c, 2)) + 1)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = a[0]\n    d = 0\n    for y in a:\n        d = max(d, x - y)\n        x = max(x, y)\n    v = 0\n    while d:\n        v += 1\n        d //= 2\n    print(v)", "from math import ceil, log2\n\ndef pow2(diff):\n    return ceil(log2(diff))\nfor _ in range(int(input())):\n    n = int(input())\n    vals = [int(i) for i in input().split(' ')]\n    mx = -1\n    for i in range(n - 1):\n        if vals[i] > vals[i + 1]:\n            k = pow2(vals[i] - vals[i + 1])\n            if vals[i + 1] + (1 << k) - 1 >= vals[i]:\n                k -= 1\n            vals[i + 1] = vals[i]\n            mx = max(mx, k + 1)\n    print(max(mx, 0))", "t = int(input())\nfor test_case in range(t):\n    n = int(input())\n    array = list(map(int, input().split()))\n    max_diff = 0\n    max_val = array[0]\n    for i in range(1, len(array), 1):\n        if array[i] < max_val:\n            max_diff = max(max_diff, max_val - array[i])\n        else:\n            max_val = array[i]\n    cnt = 0\n    if max_diff > 0:\n        j = 1\n        cnt = 1\n        while max_diff > j:\n            cnt += 1\n            j = j * 2 + 1\n    print(cnt)", "import math\n\ndef solveAll():\n    nbCases = int(input())\n    for _ in range(nbCases):\n        case = readCase()\n        print(solve(case))\n\ndef readCase():\n    input()\n    return [int(x) for x in input().split()]\n\ndef solve(nums):\n    currentMax = -math.inf\n    largestGap = -math.inf\n    for num in nums:\n        largestGap = max(largestGap, currentMax - num)\n        currentMax = max(currentMax, num)\n    if largestGap <= 0:\n        return 0\n    return len(format(largestGap, 'b'))\nsolveAll()"]