["for p in [0] * int(input()):\n    x = int(input().split()[1])\n    a = []\n    s = 0\n    for c in input():\n        a += (x - s,)\n        s += 1 - 2 * int(c)\n    print(sum((y * s >= y % s == 0 for y in a)) if s else -(0 in a))", "def solve(n, x, s):\n    p = []\n    (z_count, o_count) = (s.count('0'), s.count('1'))\n    b = 0\n    for c in s:\n        if c == '0':\n            b += 1\n        else:\n            b -= 1\n        p.append(b)\n    res = 0\n    if z_count == o_count:\n        if x in p:\n            res = -1\n    else:\n        if x == 0:\n            res += 1\n        diff = p[-1]\n        for x0 in p:\n            if diff > 0:\n                if x0 <= x:\n                    tmp = x - x0\n                    if tmp % diff == 0:\n                        res += 1\n            if diff < 0:\n                if x0 >= x:\n                    tmp = x - x0\n                    if tmp % diff == 0:\n                        res += 1\n    print(res)\nt = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    s = input()\n    solve(n, x, s)", "class Solution(object):\n\n    def __init__(self):\n        pass\n\n    def apply(self, s, x):\n        b = 0\n        prefix = []\n        for c in s:\n            if c == '1':\n                b -= 1\n            else:\n                b += 1\n            prefix.append(b)\n        s = 0\n        for nm in prefix:\n            if b == 0:\n                if nm == x:\n                    return -1\n            elif (x - nm) % b == 0 and (x - nm) * b >= 0:\n                s += 1\n        if x == 0:\n            s += 1\n        return s\n\ndef main():\n    sol = Solution()\n    t = int(input())\n    for i in range(t):\n        info = input().split()\n        n = int(info[0])\n        x = int(info[1])\n        s = input()\n        print(sol.apply(s, x))\n    return 0\nmain()", "def count_pref(string, X):\n    bal = 0\n    cnt = 0\n    for c in string:\n        if bal == X:\n            cnt += 1\n        if c == '1':\n            bal -= 1\n        else:\n            bal += 1\n    return cnt\n\ndef count_all(string, X, delta):\n    bal = 0\n    cnt = 0\n    for c in string:\n        if bal <= X and delta >= 0 or (bal >= X and delta <= 0):\n            if abs(bal - X) % abs(delta) == 0:\n                cnt += 1\n        if c == '1':\n            bal -= 1\n        else:\n            bal += 1\n    return cnt\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    s = input()\n    ones = s.count('1')\n    zeros = n - ones\n    if zeros == ones:\n        if count_pref(s, x) != 0:\n            print(-1)\n        else:\n            print(0)\n    else:\n        print(count_all(s, x, zeros - ones))", "import math\nimport sys\n\ndef listinput():\n    return list(map(int, input().split(' ')))\n\ndef main():\n    answer = ''\n    for test in range(int(input())):\n        (n, x) = listinput()\n        s = input()\n        mset = dict()\n        balance = 0\n        isin = False\n        mset[0] = 1\n        for letter in s:\n            if letter == '0':\n                balance += 1\n            else:\n                balance -= 1\n            if mset.get(balance, None) == None:\n                mset[balance] = 1\n            else:\n                mset[balance] += 1\n            if balance == x:\n                isin = True\n        mset[balance] -= 1\n        am_of_x = 0\n        if balance == 0:\n            if isin:\n                answer += '-1 \\n'\n            else:\n                answer += '0 \\n'\n        else:\n            for key in mset.keys():\n                if (x - key) % balance == 0 and (x - key) // balance >= 0:\n                    am_of_x += mset[key]\n            answer += str(am_of_x) + '\\n'\n        pass\n    print(answer)\nmain()", "def solve(n, x, s):\n    s = list(s)\n    k = []\n    v = 0\n    for i in s:\n        v += 1 if i == '0' else -1\n        k.append(v)\n    l = k[-1]\n    t = 0\n    if l == 0:\n        if x in k:\n            return -1\n        elif x == 0:\n            return 1\n        else:\n            return 0\n    else:\n        if x == 0:\n            t += 1\n        for i in k:\n            if (l >= 0 and i <= x or (l <= 0 and i >= x)) and (x - i) % l == 0:\n                t += 1\n    return t\n\ndef main():\n    for _ in range(int(input())):\n        (n, x) = list(map(int, input().split()))\n        s = input()\n        print(solve(n, x, s))\nmain()", "def solve(s, x):\n    prefs = [0]\n    for c in s:\n        prefs.append(prefs[-1] + (1 if c == '0' else -1))\n    if prefs[-1] == 0 and x in prefs:\n        print(-1)\n    elif prefs[-1] == 0:\n        print(0)\n    else:\n        n = 0 if x else 1\n        for p in prefs[1:]:\n            n += (x - p) % prefs[-1] == 0 and (x - p) * prefs[-1] >= 0\n        print(n)\nt = int(input())\nfor _ in range(t):\n    (n, x) = (int(_) for _ in input().split())\n    s = input().strip()\n    solve(s, x)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    s = input()\n    ans = int(x == 0)\n    ct = s.count('0') - s.count('1')\n    z = 0\n    for i in s:\n        z += 1 if i == '0' else -1\n        if z == x and ct == 0:\n            ans = -1\n            break\n        if z == x or ((x - z) * ct > 0 and (x - z) % ct == 0):\n            ans += 1\n    print(ans)", "for t in range(int(input())):\n    (n, x) = [int(i) for i in input().split()]\n    s = input()\n    l = []\n    zero = 0\n    one = 0\n    for i in s:\n        if i == '1':\n            one += 1\n        else:\n            zero += 1\n        l.append(zero - one)\n    add = l[-1]\n    if add == 0:\n        if x in l:\n            print(-1)\n        else:\n            print(1 if x == 0 else 0)\n    else:\n        res = 0\n        for i in l:\n            if (x - i) % add == 0 and (x - i) // add >= 0:\n                res += 1\n        if x == 0:\n            res += 1\n        print(res)", "def InfinitePrefix(n, x, s):\n    rec = [0] * n\n    for (i, c) in enumerate(s):\n        if c == '0':\n            rec[i] = rec[i - 1] + 1\n        else:\n            rec[i] = rec[i - 1] - 1\n    loop = rec[-1]\n    res = 0\n    if x == 0:\n        res = 1\n    if loop == 0:\n        for r in rec:\n            if x == r:\n                return -1\n        return res\n    for r in rec:\n        if (x - r) % loop == 0 and (x - r) // loop >= 0:\n            res += 1\n    return res\nt = int(input())\nfor _ in range(t):\n    (n, x) = [int(s) for s in input().split(' ')]\n    s = input()\n    print(InfinitePrefix(n, x, s))", "import math\nfor _ in range(int(input())):\n    (n, x) = list(map(int, input().split()))\n    s = input()\n    l = []\n    z = 0\n    o = 0\n    for j in s:\n        if j is '0':\n            z += 1\n        else:\n            o += 1\n        l.append(z - o)\n    d = z - o\n    if d == 0:\n        res = math.inf if x in l else 0\n    elif d > 0:\n        res = sum((1 for i in l if x >= i and (x - i) % d == 0))\n    else:\n        res = sum((1 for i in l if x <= i and (i - x) % (-1 * d) == 0))\n    if x == 0:\n        res += 1\n    print(-1 if res == math.inf else res)", "def solve():\n    (n, x) = map(int, input().split())\n    s = input()\n    ql = [0]\n    for (i, s_i) in enumerate(s):\n        ql.append(ql[i] + (1 if s_i == '0' else -1))\n    ql = ql[1:]\n    sol = 1 if x == 0 else 0\n    for i in ql:\n        if ql[-1] == 0:\n            if i == x:\n                sol = -1\n        else:\n            need = x - i\n            if need % ql[-1] == 0 and need // ql[-1] >= 0:\n                sol += 1\n    print(sol)\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "def solve():\n    (n, x) = map(int, input().split())\n    s = input()\n    q = [0]\n    for (i, s_i) in enumerate(s):\n        q.append(q[i] + (1 if s_i == '0' else -1))\n    q = q[1:]\n    sol = 1 if x == 0 else 0\n    for i in q:\n        if q[-1] == 0:\n            if i == x:\n                sol = -1\n        else:\n            need = x - i\n            if need % q[-1] == 0 and need * q[-1] >= 0:\n                sol += 1\n    print(sol)\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "def solve():\n    (n, x) = map(int, input().split())\n    s = input()\n    if s.count('0') == s.count('1'):\n        cnt = 0\n        if x == 0:\n            print(-1)\n            return\n        for i in range(n):\n            if s[i] == '0':\n                cnt += 1\n            else:\n                cnt -= 1\n            if cnt == x:\n                print('-1')\n                return\n        print(0)\n        return\n    else:\n        d = s.count('0') - s.count('1')\n        cnt = 0\n        ans = 0\n        for i in range(n):\n            if s[i] == '0':\n                cnt += 1\n            else:\n                cnt -= 1\n            if (x - cnt) * d > 0:\n                if abs(cnt - x) % d == 0:\n                    ans += 1\n            if x - cnt == 0:\n                ans += 1\n        if x == 0:\n            ans += 1\n        print(ans)\n        return\ntest = int(input())\nfor _ in range(test):\n    solve()", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    str = input()\n    pre = ans = int(0)\n    sum = str.count('0') - str.count('1')\n    if sum == 0:\n        for ch in str:\n            if pre == x:\n                ans = -1\n                break\n            if ch == '0':\n                pre = pre + 1\n            else:\n                pre = pre - 1\n    else:\n        for ch in str:\n            if (x - pre) % sum == 0 and (x - pre) / sum >= 0:\n                ans = ans + 1\n            if ch == '0':\n                pre = pre + 1\n            else:\n                pre = pre - 1\n    print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    s = input()\n    y = s.count('0') - s.count('1')\n    z = 0\n    inf = False\n    ans = 0\n    if x == 0:\n        ans = 1\n    for i in s:\n        z += (i == '0') - (i == '1')\n        if y == 0 and z == x:\n            inf = True\n            print('-1')\n            break\n        if x - z == 0 or ((x - z) * y > 0 and (x - z) % y == 0):\n            ans += 1\n    if not inf:\n        print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    s = input()\n    diff = s.count('0') - s.count('1')\n    (z, o, ans) = (0, 0, 0)\n    if x == 0:\n        ans = 1\n    for c in s:\n        if c == '0':\n            z += 1\n        else:\n            o += 1\n        k = x - z + o\n        if k == 0 and diff == 0 or (diff != 0 and k % diff == 0 and (k // diff >= 0)):\n            ans += 1\n    if z == o and ans > 0:\n        ans = -1\n    print(ans)", "from collections import defaultdict\n\ndef balance_is_realizable(imbalance, x, balance):\n    if imbalance >= 0:\n        return x - balance >= 0\n    else:\n        return x - balance <= 0\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        (n, x) = tuple((int(o) for o in input().split()))\n        string = input()\n        balances_to_occurrences = defaultdict(int)\n        imbalance = 0\n        s = 0\n        for char in string:\n            if char == '0':\n                imbalance += 1\n            else:\n                imbalance -= 1\n            balances_to_occurrences[imbalance] += 1\n        if imbalance == 0:\n            if x in balances_to_occurrences or x == 0:\n                print(-1)\n            else:\n                print(0)\n        else:\n            for (balance, occurrences) in balances_to_occurrences.items():\n                if (x - balance) % imbalance == 0 and balance_is_realizable(imbalance, x, balance):\n                    s += occurrences\n            if x == 0:\n                s += 1\n            print(s)\nmain()", "sd = []\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    s = input()\n    bal = []\n    b = 0\n    for c in s:\n        if c == '0':\n            b += 1\n        else:\n            b -= 1\n        bal.append(b)\n    ans = 0\n    for d in bal:\n        if x == d and b == 0:\n            ans = -1\n            break\n        elif b != 0:\n            if (x - d) % b == 0 and (x - d) // b >= 0:\n                ans += 1\n    if x == 0 and ans != -1:\n        ans += 1\n    sd.append(str(ans))\nprint('\\n'.join(sd))", "import sys\nread = lambda : list(map(int, sys.stdin.readline().strip().split()))\nfor i in range(int(input())):\n    (n, x) = read()\n    count = 0\n    s = []\n    for i in input():\n        count += [1, -1][i == '1']\n        s.append(count)\n    if count == 0:\n        if x == 0 or x in s:\n            print(-1)\n        else:\n            print(0)\n    else:\n        ans = [0, 1][x == 0]\n        for i in s:\n            if (x - i) % count == 0 and (x - i) // count >= 0:\n                ans += 1\n        print(ans)", "for _ in range(int(input())):\n    (n, m) = map(int, input().split())\n    s = 0\n    c = {}\n    for b in map(int, input()):\n        if b:\n            s -= 1\n        else:\n            s += 1\n        c[s] = c.get(s, 0) + 1\n    ans = 0\n    if s:\n        for (k, v) in c.items():\n            if 0 == (m - k) % s:\n                y = (m - k) // s\n                if y >= 0:\n                    ans += v\n        if not m:\n            ans += 1\n    else:\n        ans = -1 if m in c else 0\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    s = str(input())\n    cnt = s.count('0') - s.count('1')\n    bal = ans = 0\n    for i in range(len(s)):\n        if cnt == 0:\n            if bal == x:\n                ans = -1\n                break\n        elif abs(x - bal) % abs(cnt) == 0:\n            if (x - bal) / cnt >= 0:\n                ans += 1\n        if s[i] == '0':\n            bal += 1\n        else:\n            bal -= 1\n    print(ans)", "def solve(string, target):\n    balances = []\n    balance = 0\n    for digit in string:\n        balance += 1 if digit == '0' else -1\n        balances.append(balance)\n    count = 1 if target == 0 else 0\n    for balance in balances:\n        if balances[-1] == 0:\n            if balance == target:\n                return -1\n        elif target % balances[-1] == balance % balances[-1]:\n            if (target - balance) // balances[-1] >= 0:\n                count += 1\n    return count\nfor T in range(int(input())):\n    (n, x) = map(int, input().split())\n    print(solve(input(), x))", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    s = input()\n    a = list(map(int, s))\n    sum = 0\n    cntO = a.count(0)\n    total = cntO - (n - cntO)\n    bal = 0\n    ans = 0\n    isInf = False\n    for i in range(len(a)):\n        if total == 0:\n            if bal == x:\n                isInf = True\n        elif abs(x - bal) % total == 0:\n            if (x - bal) // total >= 0:\n                ans += 1\n        if a[i] == 0:\n            bal += 1\n        else:\n            bal -= 1\n    if isInf:\n        print(-1)\n    else:\n        print(ans)", "def mi():\n    return map(int, input().split())\n\ndef gcd(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return x\nfor _ in range(int(input())):\n    (n, x) = mi()\n    a = list(input())\n    b = [0] * n\n    (oc, zc) = (0, 0)\n    for i in range(n):\n        if a[i] == '1':\n            oc += 1\n        else:\n            zc += 1\n        b[i] = zc - oc\n    if b[-1] == 0:\n        if x in b:\n            print(-1)\n        else:\n            print(0)\n    else:\n        c = b[-1]\n        ans = 0\n        for i in range(n):\n            if c != 0 and (b[i] - x) % c == 0 and ((x - b[i]) / c >= 0):\n                ans += 1\n        if x == 0:\n            ans += 1\n        print(ans)", "I = input\nfor _ in [0] * int(I()):\n    x = int(I().split()[1])\n    a = []\n    s = 0\n    for c in I():\n        a += (x - s,)\n        s += 1 - 2 * int(c)\n    print(sum((y * s >= 0 == y % s for y in a)) if s else -(0 in a))", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        (N, X) = [int(x) for x in input().split()]\n        S = input().strip()\n        ans = 0\n        ansa = []\n        for s in S:\n            if int(s) == 0:\n                ans += 1\n                ansa.append(ans)\n            else:\n                ans -= 1\n                ansa.append(ans)\n        if X in ansa and ansa[-1] == 0:\n            print(-1)\n        else:\n            pans = 0\n            if X == 0:\n                pans += 1\n            if ansa[-1] > 0:\n                for a in ansa:\n                    if X - a >= 0 and (X - a) % ansa[-1] == 0:\n                        pans += 1\n                print(pans)\n            elif ansa[-1] < 0:\n                for a in ansa:\n                    if a - X >= 0 and (a - X) % abs(ansa[-1]) == 0:\n                        pans += 1\n                print(pans)\n            else:\n                for a in ansa:\n                    if a == X:\n                        pans += 1\n                print(pans)\nmain()", "I = input\nfor _ in [0] * int(I()):\n    x = int(I().split()[1])\n    a = []\n    s = 0\n    for c in I():\n        a += (x - s,)\n        s += 1 - 2 * int(c)\n    print(sum((y * s >= y % s == 0 for y in a)) if s else -(0 in a))", "for _ in range(int(input())):\n    (n, x) = list(map(int, input().split()))\n    s = list(map(int, input()))\n    kek = dict()\n    cnt = 0\n    for elem in s:\n        if elem == 1:\n            cnt -= 1\n        else:\n            cnt += 1\n        if cnt in kek:\n            kek[cnt] += 1\n        else:\n            kek[cnt] = 1\n    ans = 0\n    if x == 0:\n        ans = 1\n    if cnt == 0:\n        for elem in kek:\n            if elem == x or x == 0:\n                ans = -1\n                break\n    if ans == -1:\n        ans = -1\n    elif cnt != 0:\n        for elem in kek:\n            if (x - elem) % cnt == 0 and (x - elem) // cnt >= 0:\n                ans += kek[elem]\n    print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    s = input()\n    y = s.count('0') - s.count('1')\n    z = 0\n    can = True\n    ans = 1 if x == 0 else 0\n    for i in s:\n        if i == '0':\n            z += 1\n        else:\n            z -= 1\n        if y == 0 and z == x:\n            print(-1)\n            can = False\n            break\n        if z == x or ((x - z) * y > 0 and (x - z) % y == 0):\n            ans += 1\n    if can:\n        print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    ans = 0\n    if x == 0:\n        ans += 1\n    s = input()\n    cost = [0 for i in range(n + 1)]\n    for i in range(len(s)):\n        if s[i] == '0':\n            cost[i + 1] = cost[i] + 1\n        else:\n            cost[i + 1] = cost[i] - 1\n    cost_i = cost[1:]\n    i = 0\n    total_cost = cost[len(s)]\n    if total_cost == 0:\n        if x in cost_i:\n            ans = -1\n        else:\n            ans = 0\n    elif total_cost > 0:\n        for c in cost_i:\n            if (x - c) % total_cost == 0 and x >= c:\n                ans += 1\n    else:\n        for c in cost_i:\n            if (x - c) % total_cost == 0 and x <= c:\n                ans += 1\n    print(ans)", "for _ in range(int(input())):\n    (x, y) = [int(x) for x in input().split()]\n    s = input()\n    b = s.count('0') - s.count('1')\n    (z, ans) = (0, 0)\n    flag = False\n    if y == 0:\n        ans = 1\n    for i in s:\n        z += (i == '0') - (i == '1')\n        if b == 0 and z == y:\n            flag = True\n            print(-1)\n            break\n        if z == y or ((y - z) * b > 0 and abs(y - z) % abs(b) == 0):\n            ans += 1\n    if not flag:\n        print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    s = input()\n    y = s.count('0') - s.count('1')\n    z = 0\n    can = True\n    ans = 1 if x == 0 else 0\n    for i in s:\n        if i == '0':\n            z += 1\n        else:\n            z -= 1\n        if y == 0 and z == x:\n            print(-1)\n            can = False\n            break\n        if z == x or ((x - z) * y > 0 and (x - z) % y == 0):\n            ans += 1\n    if can:\n        print(ans)", "t = int(input())\nfor you in range(t):\n    l = input().split()\n    n = int(l[0])\n    x = int(l[1])\n    s = input()\n    numof1 = 0\n    numof0 = 0\n    count = 0\n    countoffull = 0\n    for i in s:\n        if i == '0':\n            countoffull += 1\n        else:\n            countoffull -= 1\n    ans = 0\n    for i in range(n):\n        if s[i] == '1':\n            numof1 += 1\n        else:\n            numof0 += 1\n        if countoffull == 0:\n            if x == numof0 - numof1:\n                ans = -1\n                break\n        elif (x - numof0 + numof1) % countoffull == 0 and (x - (numof0 - numof1)) // countoffull >= 0:\n            ans += 1\n    if x == 0 and ans != -1:\n        ans += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    ar = input()\n    score = 0\n    li = []\n    for i in range(n):\n        if ar[i] == '1':\n            score -= 1\n        else:\n            score += 1\n        li.append(score)\n    ans = 0\n    if x in li and score == 0:\n        print(-1)\n    else:\n        if score == 0:\n            ans += li.count(x)\n        else:\n            for i in range(n):\n                if (x - li[i]) % score == 0 and (x - li[i]) // score >= 0:\n                    ans += 1\n        if x == 0:\n            ans += 1\n        print(ans)", "t = int(input())\nfor you in range(t):\n    l = input().split()\n    n = int(l[0])\n    x = int(l[1])\n    s = input()\n    numof1 = 0\n    numof0 = 0\n    count = 0\n    countoffull = 0\n    for i in s:\n        if i == '0':\n            countoffull += 1\n        else:\n            countoffull -= 1\n    ans = 0\n    for i in range(n):\n        if s[i] == '1':\n            numof1 += 1\n        else:\n            numof0 += 1\n        if countoffull == 0:\n            if x == numof0 - numof1:\n                ans = -1\n                break\n        elif (x - numof0 + numof1) % countoffull == 0 and (x - (numof0 - numof1)) // countoffull >= 0:\n            ans += 1\n    if x == 0 and ans != -1:\n        ans += 1\n    print(ans)", "for _ in range(int(input())):\n    a = input().split(' ')\n    n = int(a[0])\n    x = int(a[1])\n    a = input()\n    values = []\n    curr = 0\n    for i in range(len(a)):\n        if a[i] == '0':\n            curr = curr + 1\n            values.append(curr)\n        else:\n            curr = curr - 1\n            values.append(curr)\n    diff = values[-1]\n    if diff == 0:\n        count = 0\n        for i in range(len(values)):\n            if values[i] == x:\n                count = 1\n                break\n        if count == 1:\n            print(-1)\n        else:\n            print(0)\n        continue\n    maxval = max(values)\n    minval = min(values)\n    count = 0\n    if x == 0:\n        count = 1\n    if diff < 0:\n        for i in range(len(values)):\n            if values[i] > x:\n                if (values[i] - x) % diff == 0:\n                    count = count + 1\n            elif values[i] == x:\n                count = count + 1\n    else:\n        for i in range(len(values)):\n            if values[i] < x:\n                if (x - values[i]) % diff == 0:\n                    count = count + 1\n            elif values[i] == x:\n                count = count + 1\n    print(count)", "def solve(dp, n, x):\n    if dp[n] == 0:\n        for i in range(n):\n            if dp[i] == x:\n                return -1\n        return 0\n    else:\n        cnt = 0\n        for i in range(n):\n            if (x - dp[i]) * dp[n] >= 0 and (x - dp[i]) % dp[n] == 0:\n                cnt += 1\n        return cnt\nfor t in range(int(input())):\n    (n, x) = map(int, input().split(' '))\n    s = input()\n    dp = list((0 for x in range(n + 1)))\n    count = 0\n    for i in range(n):\n        if s[i] == '0':\n            count += 1\n        else:\n            count -= 1\n        dp[i + 1] = count\n    ans = solve(dp, n, x)\n    print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    s = input()\n    y = s.count('0') - s.count('1')\n    z = 0\n    inf = False\n    ans = 0\n    if x == 0:\n        ans = 1\n    for i in s:\n        z += (i == '0') - (i == '1')\n        if y == 0 and z == x:\n            inf = True\n            print(-1)\n            break\n        if x - z == 0 or ((x - z) * y > 0 and (x - z) % y == 0):\n            ans += 1\n    if not inf:\n        print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    s = input()\n    y = s.count('0') - s.count('1')\n    z = 0\n    inf = False\n    ans = 0\n    if x == 0:\n        ans = 1\n    for i in s:\n        z += (i == '0') - (i == '1')\n        if y == 0 and z == x:\n            inf = True\n            print(-1)\n            break\n        if x - z == 0 or ((x - z) * y > 0 and abs(x - z) % abs(y) == 0):\n            ans += 1\n    if not inf:\n        print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    s = input()\n    arr = []\n    bal = 0\n    for a in s:\n        if a == '0':\n            bal += 1\n        else:\n            bal -= 1\n        arr += [bal]\n    count = 0\n    bal2 = arr[-1]\n    arr2 = []\n    for a in s:\n        if a == '0':\n            bal += 1\n        else:\n            bal -= 1\n        arr2 += [bal]\n    if arr[0] == arr2[0]:\n        if x in arr:\n            print(-1)\n        else:\n            print(0)\n        continue\n    elif arr[0] < arr2[0]:\n        diff = arr2[0] - arr[0]\n        for a in arr:\n            if a <= x and (a - x) % diff == 0:\n                count += 1\n    else:\n        diff = arr[0] - arr2[0]\n        for a in arr:\n            if x <= a and (x - a) % diff == 0:\n                count += 1\n    if x == 0:\n        count += 1\n    print(count)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    s = input()\n    ans = 0\n    if x == 0:\n        ans += 1\n    count = [0] * (n * 2 + 5)\n    c = 0\n    for i in range(n):\n        if s[i] == '0':\n            c += 1\n        else:\n            c -= 1\n        count[c] += 1\n    if c == 0 and x == 0:\n        print(-1)\n    elif c == 0:\n        if -n <= x <= n:\n            if count[x] > 0:\n                print(-1)\n            else:\n                print(0)\n        else:\n            print(0)\n    else:\n        if c > 0:\n            if x > n:\n                x -= (x - n - 1) // c * c + c\n            while -n <= x <= n:\n                ans += count[x]\n                x -= c\n        else:\n            if x < -n:\n                x += (-n - x - 1) // -c * -c - c\n            while -n <= x <= n:\n                ans += count[x]\n                x -= c\n        if x == 0:\n            ans += 1\n        print(ans)", "import sys\n\ndef minp():\n    return sys.stdin.readline().strip()\n\ndef mint():\n    return int(minp())\n\ndef mints():\n    return map(int, minp().split())\n\ndef solve():\n    (n, x) = mints()\n    s = minp()\n    p = 0\n    all = dict()\n    m = int(1000000000.0)\n    M = int(-1000000000.0)\n    for i in range(n):\n        all[p] = all.get(p, 0) + 1\n        m = min(m, p)\n        M = max(M, p)\n        if s[i] == '0':\n            p += 1\n        else:\n            p -= 1\n    if p == 0:\n        if x in all:\n            print(-1)\n        else:\n            print(0)\n        return\n    ss = 1\n    if p < 0:\n        p = -p\n        (m, M) = (-M, -m)\n        ss = -1\n        x = -x\n    do = max((x - M) // p, 0)\n    r = 0\n    while x - do * p >= m:\n        y = ss * (x - p * do)\n        if y in all:\n            r += all[y]\n        do += 1\n    print(r)\nfor i in range(mint()):\n    solve()", "def solve(n, x, s):\n    ss = [0] * n\n    if s[0] == '0':\n        ss[0] = 1\n    else:\n        ss[0] = -1\n    for i in range(1, n):\n        if s[i] == '0':\n            ss[i] = ss[i - 1] + 1\n        else:\n            ss[i] = ss[i - 1] - 1\n    cnts = {}\n    for i in range(n):\n        if ss[i] in cnts:\n            cnts[ss[i]] += 1\n        else:\n            cnts[ss[i]] = 1\n    if ss[-1] == 0:\n        if x in cnts:\n            return -1\n        else:\n            return 0\n    ans = 0\n    if x == 0:\n        ans += 1\n    for k in cnts.keys():\n        if (x - k) % ss[-1] == 0 and (x - k) * ss[-1] >= 0:\n            ans += cnts[k]\n    return ans\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        (n, x) = [int(i) for i in input().split()]\n        s = input().strip()\n        print(solve(n, x, s))\nmain()", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    s = input()\n    cnt = {}\n    cnt['0'] = 0\n    cnt['1'] = 0\n    balance = []\n    for ch in s:\n        cnt[ch] += 1\n        balance.append(cnt['0'] - cnt['1'])\n    m = balance[n - 1]\n    q = 0\n    if m == 0:\n        if x in balance:\n            q = -1\n        else:\n            q = balance.count(x)\n    else:\n        for b in balance:\n            k = (x - b) // m\n            if k >= 0 and k * m + b == x:\n                q += 1\n    if x == 0 and q != -1:\n        q += 1\n    print(q)", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    (n, m) = list(map(int, sys.stdin.readline().split()))\n    re = 0\n    if m == 0:\n        re += 1\n    s = sys.stdin.readline().split()[0]\n    n_sum = []\n    for (i, c) in enumerate(s):\n        if i == 0:\n            n_sum.append(1 if c == '0' else -1)\n        else:\n            n_sum.append(n_sum[i - 1] + (1 if c == '0' else -1))\n    cycle = n_sum[-1:][0]\n    if cycle == 0:\n        flag = False\n        for i in n_sum:\n            if i == m:\n                flag = True\n                break\n        if flag:\n            print(-1)\n        else:\n            print(0)\n        continue\n    for i in n_sum:\n        if (m - i) % cycle == 0 and int((m - i) / cycle) >= 0:\n            re += 1\n    print(re)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    s = input()\n    tab = [0]\n    (a, b) = (0, 0)\n    for i in range(n):\n        if s[i] == '0':\n            a += 1\n        else:\n            b += 1\n        tab.append(a - b)\n    diff = a - b\n    count = 0\n    if diff != 0:\n        if x == 0:\n            count += 1\n        for i in range(1, n + 1):\n            if tab[i] < x and diff > 0:\n                if tab[i] % diff == x % diff:\n                    count += 1\n            elif tab[i] > x and diff < 0:\n                if tab[i] % diff == x % diff:\n                    count += 1\n            elif tab[i] == x:\n                count += 1\n    else:\n        for i in range(n + 1):\n            if tab[i] == x:\n                count = -1\n    print(count)", "def calc(s, x):\n    orig = [-1]\n    if s[0] == '0':\n        orig = [1]\n    for i in range(1, len(s)):\n        if s[i] == '0':\n            orig.append(orig[-1] + 1)\n        else:\n            orig.append(orig[-1] - 1)\n    (diff, cum) = ([], orig[-1])\n    res = 0\n    if x == 0:\n        res = 1\n    for i in range(len(s)):\n        if orig[i] == x:\n            res += 1\n        if s[i] == '0':\n            cum += 1\n        else:\n            cum -= 1\n        diff = cum - orig[i]\n        if diff == 0 and orig[i] == x:\n            return -1\n        elif diff == 0 and orig[i] != x:\n            continue\n        n = (x - orig[i]) / diff\n        if n % 1 == 0 and n > 0:\n            res += 1\n    return res\nN = int(input())\ncases = []\nfor _ in range(N):\n    (_, x) = map(int, input().split())\n    s = input()\n    cases.append([s, x])\nfor (s, x) in cases:\n    print(calc(s, x))", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    s = input()\n    bal = [0] * (n + 1)\n    for i in range(1, n + 1):\n        if s[i - 1] == '0':\n            bal[i] = bal[i - 1] + 1\n        else:\n            bal[i] = bal[i - 1] - 1\n    mult = bal[-1]\n    ans = 0\n    if mult == 0:\n        if x in bal[1:]:\n            print(-1)\n        else:\n            print(0)\n    else:\n        for num in bal[1:]:\n            if (x - num) % mult == 0 and (x - num) / mult >= 0:\n                ans += 1\n        if x == 0:\n            ans += 1\n        print(ans)", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    s = list(map(int, list(input())))\n    c01 = 0\n    for j in range(n):\n        if s[j] == 0:\n            c01 = c01 + 1\n        else:\n            c01 = c01 - 1\n    res = 0\n    k = 0\n    flag = 0\n    for j in range(n):\n        if c01 == 0:\n            if k == x:\n                flag = 1\n                print(-1)\n                break\n        elif c01 > 0:\n            if x >= k and (x - k) % c01 == 0:\n                res = res + 1\n        elif k >= x and (k - x) % c01 == 0:\n            res = res + 1\n        if s[j] == 0:\n            k = k + 1\n        else:\n            k = k - 1\n    if flag == 0:\n        print(res)", "T = int(input())\nfor o in range(T):\n    (n, d) = map(int, input().split())\n    s = input()\n    num = [0] * (2 * n + 1)\n    now = 0\n    for i in s:\n        if i == '0':\n            num[now + n] += 1\n            now += 1\n        elif i == '1':\n            num[now + n] += 1\n            now -= 1\n    if now == 0:\n        if d <= n and d >= -n and (num[d + n] > 0):\n            print(-1)\n        else:\n            print(0)\n    elif d > n and now < 0 or (d < -n and now > 0):\n        print(0)\n    elif d > n or d < -n:\n        ans = 0\n        if now < 0:\n            now = -now\n        d %= now\n        d = (d + now) % now\n        for i in range(-n, n):\n            if (i % now + now) % now == d:\n                ans += num[i + n]\n        print(ans)\n    else:\n        ans = 0\n        while d >= -n and d <= n:\n            ans += num[d + n]\n            d -= now\n        print(ans)", "import sys\nt = int(input())\nfor e in range(t):\n    (n, x) = map(int, input().split())\n    dp = [0 for i in range(n + 1)]\n    s = input()\n    cur = 0\n    for i in range(n):\n        if s[i] == '0':\n            cur += 1\n        else:\n            cur -= 1\n        dp[i + 1] = cur\n    if dp[-1] == 0:\n        if min(dp) <= x <= max(dp):\n            print(-1)\n        else:\n            print(0)\n        continue\n    cnt = 0\n    for i in range(n):\n        diff = x - dp[i]\n        if diff * dp[-1] >= 0 and diff % dp[-1] == 0:\n            cnt += 1\n    print(cnt)", "t = int(input())\nfor q in range(t):\n    (n, x) = map(int, input().split())\n    s = input()\n    c0 = 0\n    c1 = 0\n    d = [0]\n    for i in range(n):\n        if s[i] == '0':\n            c0 += 1\n        else:\n            c1 += 1\n        d.append(c0 - c1)\n    if d[-1] == 0:\n        if x in d:\n            print(-1)\n        else:\n            print(0)\n    else:\n        ans = 0\n        l = d[-1]\n        for i in range(n):\n            if (x - d[i]) % l == 0 and (x - d[i]) // l >= 0:\n                ans += 1\n        print(ans)", "t = int(input().strip())\nfor _ in range(t):\n    (n, x) = map(int, input().strip().split())\n    s = input().strip()\n    (the_max, the_min, cur) = (-100010, 100010, 0)\n    cost = dict()\n    for (index, i) in enumerate(s, 1):\n        if i == '1':\n            cur -= 1\n            if cur < the_min:\n                the_min = cur\n        else:\n            cur += 1\n            if cur > the_max:\n                the_max = cur\n        cost[index] = cur\n    if cur == 0:\n        if x == 0:\n            print(-1)\n        elif x > 0:\n            if the_max >= x:\n                print(-1)\n            else:\n                print(0)\n        elif the_min <= x:\n            print(-1)\n        else:\n            print(0)\n    else:\n        ans = 1 if x == 0 else 0\n        for i in range(1, n + 1):\n            re = x - cost[i]\n            if re // cur >= 0 and re % cur == 0:\n                ans += 1\n        print(ans)", "t = int(input())\nfor i in range(t):\n    (n, x) = list(map(int, input().split()))\n    s = input()\n    win = [0 for i in range(n)]\n    diff = s.count('0') - s.count('1')\n    val = 0\n    ct = 1 if x == 0 else 0\n    for c in range(n):\n        if s[c] == '0':\n            val += 1\n        else:\n            val -= 1\n        win[c] = x - val\n    for c in range(n):\n        if win[c] == 0 and diff == 0:\n            ct = -1\n            break\n        elif diff != 0 and win[c] % diff == 0 and (win[c] // diff >= 0):\n            ct += 1\n    print(ct)", "import sys\nt = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    s = input()\n    count = 0\n    balance = 0\n    for i in range(n):\n        if s[i] == '0':\n            balance += 1\n        else:\n            balance -= 1\n        if balance == x:\n            count += 1\n    if balance == 0:\n        if count > 0:\n            print(-1)\n        else:\n            print(0)\n        continue\n    else:\n        count = 0\n        total_balance = balance\n        balance = 0\n        for i in range(n):\n            if (x - balance) % total_balance == 0 and (x - balance) // total_balance >= 0:\n                count += 1\n            if s[i] == '0':\n                balance += 1\n            else:\n                balance -= 1\n        print(count)", "for _ in range(int(input())):\n    (n, x) = [int(i) for i in input().split()]\n    s = input()\n    arr = [0] * n\n    if s[0] == '0':\n        arr[0] = 1\n    else:\n        arr[0] = -1\n    for i in range(1, n):\n        if s[i] == '0':\n            arr[i] = arr[i - 1] + 1\n        else:\n            arr[i] = arr[i - 1] - 1\n    count = 0\n    if arr[n - 1] == 0:\n        b = False\n        for f in arr:\n            if f == x:\n                b = True\n                break\n        if b:\n            print(-1)\n        else:\n            print(0)\n    else:\n        for f in arr:\n            if (x - f) % arr[n - 1] == 0:\n                if (x - f) // arr[n - 1] >= 0:\n                    count += 1\n        if x == 0:\n            count += 1\n        print(count)", "for i in range(int(input())):\n    (n, x) = map(int, input().split())\n    s = input()\n    count0 = 0\n    l = []\n    for j in range(n):\n        if s[j] == '0':\n            count0 += 1\n            l.append(count0)\n        else:\n            count0 -= 1\n            l.append(count0)\n    a = s.count('0')\n    b = len(s) - a\n    k = a - b\n    if a == b and x == 0:\n        print(-1)\n    elif a == b and x in l:\n        print(-1)\n    elif a == b and x not in l:\n        print(0)\n    else:\n        flag = 0\n        for j in l:\n            c = (x - j) / k\n            if c == int(c) and c >= 0:\n                flag += 1\n        if x == 0:\n            print(flag + 1)\n        else:\n            print(flag)", "t = int(input())\nfor _ in range(t):\n    (n, x) = map(int, input().split())\n    s = input()\n    b = [0] * n\n    if s[0] == '1':\n        b[0] = -1\n    else:\n        b[0] = 1\n    for i in range(1, n):\n        if s[i] == '1':\n            b[i] = b[i - 1] - 1\n        else:\n            b[i] = b[i - 1] + 1\n    if b[n - 1] == 0:\n        if x in b:\n            print(-1)\n        else:\n            print(0)\n    else:\n        count = 0\n        if x == 0:\n            count += 1\n        for i in range(n):\n            d = x - b[i]\n            if d * b[n - 1] >= 0 and d % b[n - 1] == 0:\n                count += 1\n        print(count)", "import sys, array\nt = int(input())\nwhile t:\n    (n, x) = map(int, sys.stdin.readline().split())\n    s = sys.stdin.readline().replace('\\n', '')\n    a = array.array('i', range(n))\n    cz = 0\n    co = 0\n    ans = 0\n    for i in range(n):\n        if s[i] == '0':\n            cz += 1\n            a[i] = cz - co\n        else:\n            co += 1\n            a[i] = cz - co\n    if x == 0:\n        if a[n - 1] == 0:\n            ans = -1\n        elif a[n - 1] > 0:\n            for each in a:\n                if each == 0 or (each < 0 and abs(each) % a[n - 1] == 0):\n                    ans += 1\n        elif a[n - 1] < 0:\n            for each in a:\n                if each == 0 or (each > 0 and abs(each) % abs(a[n - 1]) == 0):\n                    ans += 1\n        if ans >= 0:\n            ans += 1\n    elif a[n - 1] == 0:\n        if x in a:\n            ans = -1\n        else:\n            ans = 0\n    elif a[n - 1] > 0:\n        for each in a:\n            if each == x or (each < x and (x - each) % abs(a[n - 1]) == 0):\n                ans += 1\n    else:\n        for each in a:\n            if each == x or (each > x and (each - x) % abs(a[n - 1]) == 0):\n                ans += 1\n    print(ans)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (n, x) = map(int, input().split())\n    s = input()\n    cs = []\n    z = 0\n    o = 0\n    for j in range(n):\n        if s[j] == '1':\n            o += 1\n        else:\n            z += 1\n        cs.append(z - o)\n    le = cs[-1]\n    f = 0\n    for j in cs:\n        if le != 0:\n            if (x - j) % le == 0 and (x - j) * le >= 0:\n                f += 1\n        elif x == j:\n            f += 1\n    if f > 0 and le == 0:\n        print(-1)\n    else:\n        if x == 0:\n            f += 1\n        print(f)", "for t in range(int(input())):\n    (n, x) = map(int, input().split())\n    s = input()\n    if s[0] == '1':\n        a = [-1]\n    else:\n        a = [1]\n    for i in range(1, n):\n        if s[i] == '0':\n            a.append(a[i - 1] + 1)\n        else:\n            a.append(a[i - 1] - 1)\n    g = 0\n    for i in range(n):\n        if a[i] == x:\n            g = 1\n            break\n    if g == 1 and a[n - 1] == 0:\n        print(-1)\n    elif a[n - 1] == 0:\n        print(0)\n    else:\n        tot = 0\n        if x == 0:\n            tot = 1\n        for i in range(n):\n            if a[i] == x:\n                tot += 1\n            else:\n                g = x - a[i]\n                if g % a[n - 1] == 0 and g * a[n - 1] >= 0:\n                    tot += 1\n        print(tot)", "nn = int(input())\nfor i in range(nn):\n    (n, x) = [int(i) for i in input().split(' ')]\n    s = input()\n    k0 = s.count('0')\n    k1 = s.count('1')\n    if k0 - k1 == 0 and x == 0:\n        print(-1)\n        continue\n    rez = 0\n    if x == 0:\n        rez = 1\n    b = 0\n    bal = []\n    for j in range(n):\n        if s[j] == '1':\n            b -= 1\n        else:\n            b += 1\n        bal.append(b)\n    if s[0] == '1':\n        b -= 1\n    else:\n        b += 1\n    shag = b - bal[0]\n    if shag != 0:\n        for j in range(n):\n            if (x - bal[j]) % shag == 0 and (bal[j] == x or abs(bal[j] + shag - x) <= abs(bal[j] - x)):\n                rez += 1\n    else:\n        for j in range(n):\n            if bal[j] == x:\n                rez += 1\n        if rez > 0:\n            rez = -1\n    print(rez)", "n = int(input())\nfor i in range(n):\n    [n, x] = [*map(int, input().split())]\n    s = [int(i) for i in input()]\n    diffs = [0] * (n + 1)\n    acc = 0\n    for j in range(n):\n        acc = acc + 1 if s[j] == 0 else acc - 1\n        diffs[j + 1] = acc\n    b = diffs[-1]\n    if b == 0:\n        if x in diffs:\n            print(-1)\n        else:\n            print(0)\n        continue\n    res = 0\n    for v in range(n):\n        if (x - diffs[v]) % b == 0 and (x - diffs[v]) // b >= 0:\n            res += 1\n    print(res)", "import sys\nt = int(input())\nfor e in range(t):\n    (n, x) = map(int, input().split())\n    dp = [0 for i in range(n + 1)]\n    s = input()\n    cur = 0\n    for i in range(n):\n        if s[i] == '0':\n            cur += 1\n        else:\n            cur -= 1\n        dp[i + 1] = cur\n    if dp[-1] == 0:\n        if min(dp) <= x <= max(dp):\n            print(-1)\n        else:\n            print(0)\n        continue\n    cnt = 0\n    for i in range(n):\n        diff = x - dp[i]\n        if diff * dp[-1] >= 0 and diff % dp[-1] == 0:\n            cnt += 1\n    print(cnt)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    s = input()\n    (a, b) = (0, 0)\n    count = 0\n    z = []\n    for i in range(n):\n        if s[i] == '0':\n            a += 1\n        else:\n            b += 1\n        z.append(a - b)\n    if x == 0:\n        count += 1\n        count += z.count(0)\n        if z[-1] == 0:\n            count = -1\n        else:\n            for i in range(len(z)):\n                if (x - z[i]) % z[-1] == 0 and z[-1] * (x - z[i]) > 0:\n                    count += 1\n    elif z[-1] == 0:\n        for i in range(len(z)):\n            if x == z[i]:\n                count += 1\n        if count > 0:\n            count = -1\n    else:\n        for i in range(len(z)):\n            if x == z[i]:\n                count += 1\n        for i in range(len(z)):\n            if (x - z[i]) % z[-1] == 0 and z[-1] * (x - z[i]) > 0:\n                count += 1\n    print(count)", "t = int(input())\n\ndef int_map(c):\n    return 1 if c == '0' else -1\nfor _ in range(t):\n    (n, x) = list(map(int, input().split()))\n    s = list(map(int_map, input()))\n    bal = [0] * n\n    cnt = 1 if x == 0 else 0\n    b = 0\n    for i in range(n):\n        b += s[i]\n        bal[i] = b\n        if bal[i] == x:\n            cnt += 1\n    if b == 0:\n        if cnt > 0:\n            cnt = -1\n    else:\n        for i in range(n):\n            rest = x - bal[i]\n            k = rest // b\n            if rest % b == 0 and k > 0:\n                cnt += 1\n    print(cnt)", "t = int(input())\nfor i in range(t):\n    ch = input()\n    L = [int(i) for i in ch.split()]\n    n = L[0]\n    x = L[1]\n    L2 = n * [0]\n    ch = input()\n    y = 0\n    for i in range(n):\n        if ch[i] == '0':\n            y += 1\n        else:\n            y -= 1\n        L2[i] = y\n    if L2[-1] == 0:\n        nb = 0\n        for i in range(n):\n            if L2[i] == x:\n                nb += 1\n        if nb > 0:\n            print(-1)\n        else:\n            print(0)\n    else:\n        nb = 0\n        if L2[-1] * x > 0 and x % L2[-1] == 0 or x == 0:\n            nb = 1\n        for i in range(n - 1):\n            if x == L2[i] or ((x - L2[i]) % L2[-1] == 0 and (x - L2[i]) * L2[-1] > 0):\n                nb += 1\n        print(nb)", "for _ in range(int(input())):\n    (x, y) = [int(x) for x in input().split()]\n    s = input()\n    (b, z, ans, flag) = (s.count('0') - s.count('1'), 0, 0, False)\n    if y == 0:\n        ans = 1\n    for elem in s:\n        z += (elem == '0') - (elem == '1')\n        if b == 0 and z == y:\n            flag = True\n            print(-1)\n            break\n        if z == y or ((y - z) * b > 0 and abs(y - z) % abs(b) == 0):\n            ans += 1\n    if not flag:\n        print(ans)", "for t in range(int(input())):\n    ans = 0\n    (n, x) = [int(j) for j in input().split()]\n    s = input()\n    l = [0] * n\n    last = 0\n    for i in range(n):\n        if s[i] == '0':\n            l[i] = last + 1\n            last += 1\n        else:\n            l[i] = last - 1\n            last -= 1\n    for i in range(n):\n        if l[n - 1] != 0:\n            if (x - l[i]) % l[n - 1] == 0 and (x - l[i]) * l[n - 1] >= 0:\n                ans += 1\n        elif x - l[i] == 0:\n            ans = -1\n            break\n    if x == 0 and ans != -1:\n        ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    ls = input().split()\n    n = int(ls[0])\n    x = int(ls[1])\n    s = input()\n    if s[0] == '0':\n        bal = [1]\n    else:\n        bal = [-1]\n    for j in range(1, n):\n        if s[j] == '0':\n            bal.append(bal[j - 1] + 1)\n        else:\n            bal.append(bal[j - 1] - 1)\n    cnt = 0\n    e = False\n    if x == 0:\n        cnt += 1\n    for j in bal:\n        if x == j:\n            if bal[n - 1] == 0:\n                cnt = -1\n                break\n            else:\n                cnt += 1\n        if bal[n - 1] > 0:\n            if x > j and (x - j) % bal[n - 1] == 0:\n                cnt += 1\n        elif bal[n - 1] < 0:\n            if x < j and (j - x) % bal[n - 1] == 0:\n                cnt += 1\n    print(cnt)", "t = int(input())\nfor tt in range(t):\n    (n, x) = map(int, input().split())\n    s = input()\n    cnt = [0 for i in range(n + 1)]\n    for i in range(1, n + 1):\n        cnt[i] = cnt[i - 1]\n        if s[i - 1] == '0':\n            cnt[i] += 1\n        else:\n            cnt[i] -= 1\n    ans = 0\n    if x == 0:\n        ans = 1\n    for i in range(1, n + 1):\n        if cnt[n] != 0 and (x - cnt[i]) % cnt[n] == 0 and ((x - cnt[i]) // cnt[n] >= 0):\n            ans += 1\n        elif x == cnt[i]:\n            ans = -1\n            break\n    print(ans)", "from sys import stdin\nt = int(stdin.readline().strip())\nfor tt in range(t):\n    (n, m) = map(int, stdin.readline().strip().split())\n    s = stdin.readline().strip()\n    bal = 0\n    men = 0\n    may = 0\n    cnt = 0\n    arr = [0 for i in range(n + 10)]\n    arr1 = [0 for i in range(n + 10)]\n    for i in range(n):\n        if s[i] == '0':\n            bal += 1\n        else:\n            bal -= 1\n        if bal >= 0:\n            arr[bal] += 1\n        else:\n            arr1[-bal] += 1\n        if bal == m:\n            cnt += 1\n    ans = 0\n    if cnt > 0 and bal == 0:\n        print(-1)\n        continue\n    if cnt == 0 and bal == 0:\n        print(0)\n        continue\n    for i in range(n + 10):\n        dif = m - i\n        if dif % bal == 0 and bal * dif >= 0:\n            ans += arr[i]\n    for i in range(1, n + 10):\n        dif = m + i\n        if dif % bal == 0 and bal * dif >= 0:\n            ans += arr1[i]\n    if m == 0:\n        ans += 1\n    print(ans)", "for _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    string = input()\n    diff = []\n    count_0 = 0\n    count_1 = 0\n    for i in range(n):\n        if string[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        diff.append(count_0 - count_1)\n    period = diff[-1]\n    ans = 0\n    if x == 0:\n        ans += 1\n    if period == 0:\n        if x in diff:\n            ans = -1\n    else:\n        for i in range(n):\n            if (x - diff[i]) / period >= 0 and (x - diff[i]) / period == int((x - diff[i]) / period):\n                ans += 1\n    print(ans)", "import sys\ninput = sys.stdin.readline\nQ = int(input())\nQuery = []\nfor _ in range(Q):\n    (N, X) = map(int, input().split())\n    A = input().rstrip()\n    Query.append((N, X, A))\nfor (N, X, A) in Query:\n    tmp = 0\n    Max = 0\n    Min = 0\n    T = [0]\n    for a in A:\n        if int(a):\n            tmp -= 1\n        else:\n            tmp += 1\n        T.append(tmp)\n        Max = max(Max, tmp)\n        Min = min(Min, tmp)\n    cycle = T.pop()\n    if cycle == 0:\n        ans = 0\n        for t in T:\n            if t == X:\n                ans = -1\n                break\n    else:\n        ans = 0\n        for t in T:\n            if (t - X) % cycle == 0 and (t - X) // cycle <= 0:\n                ans += 1\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, x) = [int(x) for x in input().split()]\n    s = input()\n    (one, zero, lol) = (0, 0, 0)\n    if x == 0:\n        lol = 1\n    (l1, l2) = ([], [])\n    for i in range(n):\n        if s[i] == '1':\n            one += 1\n        else:\n            zero += 1\n        l1.append(one)\n        l2.append(zero)\n    gotcha = 0\n    for i in range(n):\n        p = l2[i] - l1[i]\n        if one == zero:\n            if x == p:\n                gotcha += 1\n        else:\n            a = x - p\n            a = a / (zero - one)\n            if a == int(a) and a >= 0:\n                gotcha += 1\n    if gotcha > 0 and one == zero:\n        print('-1')\n    else:\n        print(gotcha + lol)", "t = int(input())\nfor _ in range(t):\n    (n, x) = list(map(int, input().split()))\n    s = list(map(int, input()))\n    bal = [0] * (n + 1)\n    cnt = 1 if x == 0 else 0\n    for i in range(n):\n        if s[i] == 0:\n            bal[i + 1] = bal[i] + 1\n        else:\n            bal[i + 1] = bal[i] - 1\n        if bal[i + 1] == x:\n            cnt += 1\n    b = bal[-1]\n    if b == 0 and cnt > 0:\n        print(-1)\n    elif b == 0 and cnt == 0:\n        print(0)\n    elif b != 0:\n        for i in range(n):\n            rest = x - bal[i + 1]\n            k = rest // b\n            if rest % b == 0 and k > 0:\n                cnt += 1\n        print(cnt)\n    else:\n        print(cnt)", "for t in range(int(input())):\n    ans = 0\n    (n, x) = [int(j) for j in input().split()]\n    s = input()\n    l = [0] * n\n    last = 0\n    for i in range(n):\n        if s[i] == '0':\n            l[i] = last + 1\n            last += 1\n        else:\n            l[i] = last - 1\n            last -= 1\n    for i in range(n):\n        if l[n - 1] != 0:\n            if (x - l[i]) % l[n - 1] == 0 and (x - l[i]) * l[n - 1] >= 0:\n                ans += 1\n        elif x - l[i] == 0:\n            ans = -1\n            break\n    if x == 0 and ans != -1:\n        ans += 1\n    print(ans)", "t = input()\nt = int(t)\nres = []\nn = []\nx = []\ns = []\nfor i in range(t):\n    (n1, x1) = input().split()\n    s1 = str(input())\n    (n1, x1) = (int(n1), int(x1))\n    n.append(n1)\n    x.append(x1)\n    s.append(s1)\nfor i in range(t):\n    b = []\n    b.append(1 - 2 * int(s[i][0]))\n    for j in range(1, n[i]):\n        b.append(b[j - 1] + 1 - 2 * int(s[i][j]))\n    inc = int(b[-1])\n    if inc == 0:\n        if b.count(x[i]):\n            res.append(-1)\n        else:\n            res.append(0)\n        continue\n    if inc > 0:\n        cnt = 0\n        for j in range(n[i]):\n            if (x[i] - b[j]) % inc == 0 and x[i] - b[j] >= 0:\n                cnt += 1\n        res.append(cnt)\n        continue\n    if inc < 0:\n        cnt = 0\n        for j in range(n[i]):\n            if (x[i] - b[j]) % inc == 0 and x[i] - b[j] <= 0:\n                cnt += 1\n        res.append(cnt)\n        continue\nfor i in range(t):\n    if res[i] != -1:\n        res[i] += int(1 - bool(x[i]))\nfor i in range(t):\n    print(res[i])", "t = int(input())\nfor i in range(t):\n    (n, x) = list(map(int, input().strip().split()))\n    a = input()\n    b = []\n    s = 0\n    for j in range(n):\n        if a[j] == '0':\n            s = s + 1\n            b.append(s)\n        else:\n            s = s - 1\n            b.append(s)\n    c = 0\n    e = 1\n    for j in range(n):\n        if b[n - 1] != 0:\n            if (x - b[j]) % b[n - 1] == 0 and (x - b[j]) // b[n - 1] >= 0:\n                c = c + 1\n        if b[j] == x and b[n - 1] == 0:\n            e = 0\n    if x == 0:\n        c = c + 1\n    if e == 1:\n        print(c)\n    else:\n        print(-1)", "t = int(input())\nfor q in range(t):\n    (l, x) = map(int, input().split())\n    s = input()\n    pref = [0 for i in range(l)]\n    for k in range(l):\n        if s[k] == '0':\n            pref[k] = 1 + pref[k - 1]\n        else:\n            pref[k] = pref[k - 1] - 1\n    isEx = False\n    answ = 0\n    if pref[l - 1] == 0 and x in pref:\n        answ = -1\n    else:\n        if x == 0:\n            answ = 1\n        for i in range(l):\n            if x - pref[i] == 0:\n                answ += 1\n            elif pref[l - 1] != 0:\n                if (x - pref[i]) % pref[l - 1] == 0 and (x - pref[i]) / pref[l - 1] > 0:\n                    answ += 1\n    print(answ)", "t = int(input())\nfor i in range(t):\n    (a, b) = [int(z) for z in input().split(' ')]\n    s = input()\n    c = 0\n    m = -10 ** 10\n    n = 10 ** 10\n    q = []\n    M = b % a\n    ans = 0\n    for j in range(a):\n        if s[j] == '0':\n            c += 1\n        else:\n            c -= 1\n        m = max(m, c)\n        n = min(n, c)\n        q.append(c)\n    Q = [0] * (2 * len(q) + 1)\n    for j in range(a):\n        Q[q[j] + a] += 1\n    if c == 0 and b <= m and (b >= n):\n        print(-1)\n    elif c == 0:\n        print(0)\n    else:\n        Z = 0\n        for j in Q:\n            if (b - (Z - a)) % c == 0 and (b - Z + a) * c >= 0:\n                ans += j\n            Z += 1\n        if b == 0:\n            print(ans + 1)\n        else:\n            print(ans)", "def pp(a, b, c):\n    i = 0\n    j = 1000000000\n    while i <= j:\n        m = (i + j) // 2\n        x = b + m * c\n        if x == a:\n            return True\n        if x > a:\n            if c > 0:\n                j = m - 1\n            else:\n                i = m + 1\n        elif c > 0:\n            i = m + 1\n        else:\n            j = m - 1\n    return False\n\ndef ss(n, x, s):\n    ans = 0\n    a = s.count('0')\n    b = n - a\n    p = 0\n    q = 0\n    for i in s:\n        if i == '0':\n            p += 1\n        else:\n            q += 1\n        if a == b and p - q == x:\n            return -1\n        if pp(x, p - q, a - b):\n            ans += 1\n    if x == 0:\n        if a == b:\n            return -1\n        ans += 1\n    return ans\nfor _ in range(int(input())):\n    (n, x) = map(int, input().split())\n    s = str(input())\n    print(ss(n, x, s))"]