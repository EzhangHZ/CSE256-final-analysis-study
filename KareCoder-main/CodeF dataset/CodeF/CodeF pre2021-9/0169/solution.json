["for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print((d := abs(a - b)), d and min(a % d, -a % d))", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print((d := abs(a - b)), d and min(a % d, -a % d))", "import sys\nlines = sys.stdin.read().strip().split('\\n')\nfor line in lines[1:]:\n    (a, b) = map(int, line.strip().split())\n    if b < a:\n        (a, b) = (b, a)\n    if a == b:\n        print('0 0')\n    else:\n        dif = b - a\n        r = a % dif\n        move = r if r * 2 < dif else dif - r\n        print(f'{dif} {move}')", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print((d := abs(a - b)), d and min(a % d, -a % d))", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print((d := abs(a - b)), d and min(a % d, -a % d))", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print((d := abs(a - b)), d and min(a % d, -a % d))", "import sys, math\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if b == a:\n        print(0, 0)\n    elif b > a:\n        print(b - a, min(b - a - a % (b - a), a % (b - a)))\n    else:\n        b = a ^ b\n        a = a ^ b\n        b = a ^ b\n        print(b - a, min(b - a - a % (b - a), a % (b - a)))", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print((d := abs(a - b)), d and min(a % d, -a % d))", "t = int(input())\npairs_of_numbers = []\nfor i in range(t):\n    numbers = input()\n    two_numbers = numbers.split(' ')\n    pairs_of_numbers.append(two_numbers)\nfor pair in pairs_of_numbers:\n    a = int(pair[0])\n    b = int(pair[1])\n    max_excitement = abs(a - b)\n    if max_excitement == 0:\n        print('0 0')\n    else:\n        modulo_1 = a % max_excitement\n        modulo_2 = max_excitement - modulo_1\n        min_steps = min(modulo_1, modulo_2)\n        print(f'{max_excitement} {min_steps}')", "trails = int(input())\nanswer_list = []\nfor x in range(trails):\n    numbers = input().split(' ')\n    n = int(numbers[0])\n    k = int(numbers[1])\n    if n == k:\n        tup = (0, 0)\n        answer_list.append(tup)\n        continue\n    answer_ex = abs(k - n)\n    mod = n % answer_ex\n    if mod > answer_ex / 2:\n        ans_st = answer_ex - mod\n    else:\n        ans_st = mod\n    answer = (answer_ex, ans_st)\n    answer_list.append(answer)\nfor g in answer_list:\n    print(g[0], end=' ')\n    print(g[1])", "t = int(input())\nans = []\nfor i in range(t):\n    ip = input()\n    ip = ip.split(' ')\n    (x, y) = (int(ip[0]), int(ip[1]))\n    (x1, y1) = (x, y)\n    gcd = abs(x - y)\n    if gcd == 0:\n        ans.append('{} {}'.format(0, 0))\n        continue\n    c = 0\n    mul = int(x / gcd)\n    ans.append('{} {}'.format(gcd, min(abs(gcd * mul - x), abs(gcd * (mul + 1) - x))))\nfor i in range(t):\n    print(ans[i])", "def s_a():\n    t = int(input())\n    arr = []\n    for i in range(t):\n        (a, b) = tuple([int(x) for x in input().split()])\n        (a1, b1) = (a, b)\n        d = abs(a - b)\n        if d == 0:\n            arr.append('0 0')\n        elif d == 1:\n            arr.append('1 0')\n        else:\n            i = 0\n            m = a % d\n            if m <= d // 2:\n                i = m\n            else:\n                i = d - m\n            arr.append('{} {}'.format(d, i))\n    for el in arr:\n        print(el)\ns_a()", "import math\nimport sys\n\ndef scan():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef solution():\n    for _ in range(int(input())):\n        (a, b) = scan()\n        if a == b:\n            print(0, 0)\n        else:\n            d = abs(a - b)\n            print(d, min(a % d, (d - a) % d))\nsolution()", "def process(x, y):\n    if x > y:\n        (m, c) = (y, x - y)\n    else:\n        (m, c) = (x, y - x)\n    if c == 0:\n        return (0, 0)\n    elif m % c == 0:\n        return (c, 0)\n    else:\n        t = int(m / c)\n        return (c, min(m - t * c, (t + 1) * c - m))\nn = int(input())\ninput_list = list()\nfor _ in range(n):\n    s = input().strip().split()\n    input_list.append((int(s[0]), int(s[1])))\nfor (x, y) in input_list:\n    (a, b) = process(x, y)\n    print('%s %s' % (a, b))", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print((d := abs(a - b)), d and min(a % d, -a % d))", "import math\nn = int(input())\nresults = []\nfor i in range(n):\n    cur_input = [int(j) for j in input().split(' ')]\n    a = max(cur_input[0], cur_input[1])\n    b = cur_input[0] + cur_input[1] - a\n    if a == b:\n        results.append([0, 0])\n        continue\n    if b == 0:\n        results.append([a, 0])\n        continue\n    diff = a - b\n    if b >= diff:\n        if b % diff > diff / 2:\n            results.append([diff, diff - b % diff])\n        else:\n            results.append([diff, b % diff])\n    elif b == 1:\n        results.append([diff, 1])\n    else:\n        results.append([diff, min(b, diff - b)])\nfor arr in results:\n    print(f'{arr[0]} {arr[1]}')", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    g = abs(a - b)\n    if g == 0:\n        print(0, 0)\n        continue\n    print(g, min(a % g, g - a % g))", "for _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    if x == y:\n        print(0, 0)\n    elif x != y:\n        common_divisor = abs(x - y)\n        count = x % common_divisor\n        temp_answer = min(count, common_divisor - count)\n        print(common_divisor, temp_answer)", "from math import *\nn = int(input(''))\nA = []\nB = []\nfor i in range(n):\n    (a, b) = input('').split(' ')\n    (a, b) = (int(a), int(b))\n    A.append(a)\n    B.append(b)\nfor i in range(n):\n    a = A[i]\n    b = B[i]\n    d = abs(a - b)\n    if d == 1:\n        print('1 0')\n    elif d == 0:\n        print('0 0')\n    elif a % d != 0:\n        ad = floor(a / d) * d\n        au = ceil(a / d) * d\n        print(d, min(abs(ad - a), abs(au - a)))\n    else:\n        print(d, ' ', 0)", "import math\ntestcase = int(input())\nresults = []\nfor x in range(testcase):\n    (a, b) = [int(j) for j in input().split()]\n    if a == b:\n        tup = (0, 0)\n        results.append(tup)\n    else:\n        diff = abs(a - b)\n        m = min(a % diff, diff - a % diff)\n        tup = (diff, m)\n        results.append(tup)\nfor o in results:\n    stringlist = [str(k) for k in o]\n    print(' '.join(stringlist))", "import sys, math\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if b == a:\n        print(0, 0)\n    elif b > a:\n        print(b - a, min(b - a - a % (b - a), a % (b - a)))\n    else:\n        t = a\n        a = b\n        b = t\n        print(b - a, min(b - a - a % (b - a), a % (b - a)))", "import sys, math\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    (x, y) = map(int, input().split())\n    a = min(x, y)\n    b = max(x, y)\n    if b == a:\n        print(0, 0)\n    else:\n        print(b - a, min(b - a - a % (b - a), a % (b - a)))", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print((d := abs(a - b)), d and min(a % d, -a % d))", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print((d := abs(a - b)), d and min(a % d, -a % d))", "t = int(input())\nans = []\nfor i in range(t):\n    (a, b) = tuple(map(int, input().split()))\n    maks = max(a, b)\n    diff = abs(a - b)\n    moves = 0\n    if diff == 0:\n        moves = diff\n    elif maks % diff > (maks // diff + 1) * diff - maks:\n        moves = (maks // diff + 1) * diff - maks\n    else:\n        moves = maks % diff\n    ans.append([str(diff), str(moves)])\nfor case in tuple(ans):\n    print(' '.join(case).strip())", "t = int(input())\nresults = []\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if a > b:\n        res = a - b\n        current = b % res\n    elif a < b:\n        res = b - a\n        current = a % res\n    if a != b:\n        if current > res - current:\n            results.append((res, res - current))\n        else:\n            results.append((res, current))\n    else:\n        results.append((0, 0))\nfor i in range(t):\n    print(results[i][0], results[i][1])", "import sys\ninput = sys.stdin.readline\nT = int(input())\nfor _ in range(T):\n    answer = 0\n    (a, b) = map(int, input().split())\n    if a < b:\n        (a, b) = (b, a)\n    diff = a - b\n    if diff == 0:\n        answer = 0\n    else:\n        answer = min(b, a % diff)\n        answer = min(answer, diff - a % diff)\n    print(diff, answer)", "import math\nfrom sys import stdin, stdout\nfrom collections import defaultdict, Counter, deque\nfor _ in range(int(stdin.readline())):\n    (a, b) = map(int, stdin.readline().split())\n    if a == b:\n        print('0 0')\n    elif abs(a - b) == 1:\n        print('1 0')\n    else:\n        gc = abs(a - b)\n        if a > b:\n            (a, b) = (b, a)\n        print(gc, min(abs(gc - a % gc), a % gc))", "import random\nimport math\nimport sys\nparse_input = lambda : sys.stdin.readline().rstrip('\\r\\n')\n\ndef func(a, b):\n    if a == b:\n        return (0, 0)\n    if abs(a - b) == 1:\n        return (1, 0)\n    if a > 0 and b > 0:\n        e = abs(a - b)\n        gcd = math.gcd(a, b)\n        if e == gcd:\n            return (e, 0)\n        else:\n            max_e = max(gcd, e)\n        moves = min(min(a, b) % max_e, max_e - min(a, b) % max_e)\n        return (max_e, moves)\n    elif a == 0 or b == 0:\n        return (max(a, b), 0)\n\ndef main():\n    n_cases = int(parse_input())\n    for i in range(n_cases):\n        (a, b) = [int(i) for i in parse_input().split()]\n        (max_e, moves) = func(a, b)\n        print('{} {}'.format(max_e, moves))\nmain()", "from sys import stdin\ninput = stdin.readline\nrn = lambda : int(input())\nrns = lambda : map(int, input().split())\nrl = lambda : list(map(int, input().split()))\nrs = lambda : input().strip()\nYN = lambda x: print('YES') if x else print('NO')\nmod = 10 ** 9 + 7\nfor _ in range(rn()):\n    (a, b) = rns()\n    c = abs(a - b)\n    if c == 0:\n        print(0, 0)\n    else:\n        print(c, min((c - a % c) % c, a % c))", "d = input()\na = [0] * int(d)\nb = [0] * int(d)\nfor i in range(int(d)):\n    (a[i], b[i]) = map(int, input().split())\nfor i in range(0, int(d)):\n    m = abs(a[i] - b[i])\n    if m == 0:\n        print(0, 0)\n    elif m == 1:\n        print(1, 0)\n    elif a[i] % m == 0:\n        print(m, 0)\n    else:\n        print(m, min(m - a[i] % m, a[i] % m))", "w = int(input())\nflag = 0\nl = []\nfor i in range(w):\n    t = list(map(int, input().split()))\n    l.append(t)\nfor i in l:\n    i.sort()\n    gcd = i[1] - i[0]\n    if gcd == 0:\n        print('0 0')\n    else:\n        ans = min(i[0] % gcd, i[1] % gcd, abs(i[0] % gcd - gcd), abs(i[1] % gcd - gcd))\n        print(gcd, ans)", "t = int(input())\nfor _ in range(t):\n    (a, b) = list(map(int, input().split()))\n    diff = abs(a - b)\n    if a > b:\n        print(diff, min(diff - a % diff, b % diff))\n    elif b > a:\n        print(diff, min(diff - b % diff, a % diff))\n    else:\n        print(0, 0)", "t = int(input())\nfor i in range(t):\n    (a, b) = input().split()\n    a = int(a)\n    b = int(b)\n    ans = abs(a - b)\n    ans2 = 0\n    if ans != 0:\n        ans2 = a % ans\n        if ans2 > ans - ans2:\n            ans2 = ans - ans2\n    print(str(ans) + ' ' + str(ans2))", "n = int(input())\nl2 = []\nfor i in range(n):\n    l2.append([int(x) for x in input().split()])\nfor i in range(n):\n    a = l2[i][0]\n    b = l2[i][1]\n    if a == b:\n        print(0, 0)\n    elif abs(a - b) == 1:\n        print(1, 0)\n    elif min(a, b) == 0:\n        print(max(a, b), 0)\n    else:\n        c = abs(a - b)\n        if a % c == b % c:\n            print(c, min(c - a % c, a % c))\nprint()", "import sys\ninput = iter(sys.stdin.read().splitlines()).__next__\n\ndef solve(a, b):\n    d = abs(a - b)\n    if d == 0:\n        return (0, 0)\n    m = min(a - a // d * d, (a + d - 1) // d * d - a)\n    return (d, m)\nTC = int(input())\nfor tc in range(TC):\n    (a, b) = map(int, input().split())\n    res = solve(a, b)\n    print('%d %d' % res)", "import math\nfrom collections import deque, defaultdict\nfrom math import sqrt, ceil, factorial, floor, inf, gcd\nimport bisect\nimport sys\nimport random\nimport heapq\n\ndef get_array():\n    return list(map(int, sys.stdin.readline().strip().split()))\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef input():\n    return sys.stdin.readline().strip()\nfrom types import GeneratorType\n\ndef bootstrap(f, stack=[]):\n\n    def wrappedfunc(*args, **kwargs):\n        if stack:\n            return f(*args, **kwargs)\n        else:\n            to = f(*args, **kwargs)\n            while True:\n                if type(to) is GeneratorType:\n                    stack.append(to)\n                    to = next(to)\n                else:\n                    stack.pop()\n                    if not stack:\n                        break\n                    to = stack[-1].send(to)\n            return to\n    return wrappedfunc\nfor _ in range(int(input())):\n    (a, b) = get_ints()\n    if a == b:\n        print(0, 0)\n        continue\n    max_ans = abs(b - a)\n    k = max_ans - a % max_ans\n    print(max_ans, min(a % max_ans, k))", "def getlistint():\n    return list(map(int, stdin.readline().split()))\n\ndef getmapint():\n    return map(int, stdin.readline().split())\n\ndef getliststr():\n    return list(stdin.readline().split())\n\ndef getint():\n    return int(stdin.readline().strip())\n\ndef getstr():\n    return stdin.readline().strip()\n\ndef pr(s):\n    stdout.write(str(s) + '\\n')\n\ndef prlist(l):\n    stdout.write(' '.join(list(map(str, l))) + '\\n')\nfrom sys import stdin, stdout\nfrom math import gcd\nfor _ in range(getint()):\n    (a, b) = getmapint()\n    (a, b) = (min(a, b), max(a, b))\n    m = b - a\n    if gcd(a, b) != m and gcd(a, b) != b:\n        k = b // m * m\n        steps = min(b - k, k + m - b)\n        pr(str(m) + ' ' + str(steps))\n    else:\n        pr(str(m) + ' 0')", "t = int(input())\nret = []\nfor _ in range(t):\n    (a, b) = [int(x) for x in input().split()]\n    if a == b:\n        ret.append('0 0')\n    else:\n        if a < b:\n            (a, b) = (b, a)\n        d = a - b\n        q = a // d\n        v1 = q * d\n        v2 = v1 + d\n        mn = min(a - v1, v2 - a)\n        ret.append(str(d) + ' ' + str(mn))\nprint('\\n'.join(ret))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == b:\n        print(0, 0)\n    else:\n        diff = abs(a - b)\n        if a % diff:\n            if a % diff > diff / 2:\n                print(diff, diff - a % diff)\n            else:\n                print(diff, a % diff)\n        else:\n            print(diff, 0)", "a = int(input())\nfor i in range(0, a):\n    (b, c) = [int(x) for x in input().split()]\n    if b == c:\n        print(0, 0)\n    elif b == 0 or c == 0:\n        print(max(b, c), 0)\n    else:\n        d = abs(b - c)\n        count = min(c % d, d - c % d)\n        print(d, count)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = abs(a - b)\n    m = 0\n    if c != 0:\n        m = a % c\n    print(c, min(m, c - m))", "from math import *\nn = int(input())\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    if a == b:\n        print(0, 0)\n    else:\n        g = abs(a - b)\n        m = min(a % g, g - a % g)\n        print(g, m)", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if a == b:\n        print(str(0) + ' ' + str(0))\n    else:\n        g = abs(a - b)\n        moves = min(a % g, g - a % g)\n        print(str(g) + ' ' + str(moves))", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if a == b:\n        print(str(0) + ' ' + str(0))\n    else:\n        g = abs(a - b)\n        moves = min(a % g, g - a % g)\n        print(str(g) + ' ' + str(moves))", "num = int(input())\nfor i in range(num):\n    arr = input().split()\n    a = int(arr[0])\n    b = int(arr[1])\n    m = abs(a - b)\n    n = 0\n    if m != 0:\n        n = a % m\n    print(m, min(n, m - n))", "t = int(input())\nfor i in range(0, t):\n    (a, b) = map(int, input().split())\n    if a != b:\n        c = abs(a - b)\n        r = a % c\n        print(c, min(r, c - r))\n    else:\n        print(0, 0)", "for run in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == b:\n        print(0, 0)\n    else:\n        excitment = abs(a - b)\n        moves = min(a % excitment, excitment - a % excitment)\n        print(excitment, moves)", "def excitement(a, b):\n    if a == b:\n        return [0, 0]\n    gcd = max(a, b) - min(a, b)\n    moves = max(a, b) % gcd\n    if moves > gcd // 2:\n        moves = gcd - moves\n    return [gcd, moves]\nans = []\nt = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    ans.append(excitement(a, b))\nfor i in ans:\n    i = list(map(str, i))\n    print(' '.join(i))", "import sys\nfrom math import ceil, floor, modf, sqrt\nfrom collections import deque\n\ndef get_ints():\n    return map(int, sys.stdin.readline().strip().split())\n\ndef get_array():\n    return list(get_ints())\n\ndef input():\n    return sys.stdin.readline().strip()\n\ndef gcd(x, y):\n    while y:\n        (x, y) = (y, x % y)\n    return x\nT = int(input())\nwhile T > 0:\n    (x, y) = get_ints()\n    diff = abs(x - y)\n    if diff == 0:\n        print(0, 0)\n        T -= 1\n        continue\n    a1 = x % diff\n    a2 = y % diff\n    print(diff, min(diff - a1, a1))\n    T -= 1", "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    (n, m) = map(int, sys.stdin.readline().split())\n    if n == m:\n        print(0, 0)\n    else:\n        a = abs(n - m)\n        if n % a:\n            (x, y) = (min(n % a, a - n % a), min(m % a, a - m % a))\n            print(a, min(x, y))\n        else:\n            print(a, 0)", "import sys\ninput = lambda : sys.stdin.readline()\nint_arr = lambda : list(map(int, input().split()))\nstr_arr = lambda : list(map(str, input().split()))\nget_str = lambda : map(str, input().split())\nget_int = lambda : map(int, input().split())\nget_flo = lambda : map(float, input().split())\nmod = 1000000007\n\ndef solve():\n    pass\nfor _ in range(int(input())):\n    (a, b) = get_int()\n    if a == b:\n        print(0, 0)\n    else:\n        diff = abs(a - b)\n        m = a % diff\n        print(diff, min(diff - m, m))", "from sys import stdin, setrecursionlimit\nfrom collections import defaultdict\nfrom math import gcd\nsetrecursionlimit(10 ** 7)\nfor _ in range(int(stdin.readline())):\n    (a, b) = map(int, stdin.readline().split())\n    if a == b:\n        print(0, 0)\n        continue\n    if a < b:\n        (a, b) = (b, a)\n    temp_ans = a - b\n    if gcd(a, b) == temp_ans:\n        ans = (temp_ans, 0)\n    else:\n        temp = b % temp_ans\n        ans = (temp_ans, min(b, temp_ans - temp, temp))\n    print(ans[0], ans[1])", "import math\nimport sys\nfrom functools import reduce\nimport decimal\nsys.setrecursionlimit(10 ** 9)\ndecimal.getcontext().rounding = decimal.ROUND_HALF_UP\n\ndef rounding(n):\n    return int(decimal.Decimal(f'{n}').to_integral_value())\n\ndef factors(n):\n    return set(reduce(list.__add__, ([i, n // i] for i in range(1, int(n ** 0.5) + 1) if n % i == 0)))\n\ndef inp():\n    return sys.stdin.readline().strip()\n\ndef map_inp(v_type):\n    return map(v_type, inp().split())\n\ndef list_inp(v_type):\n    return list(map_inp(v_type))\nfor _ in range(int(inp())):\n    (a, b) = map_inp(int)\n    diff = abs(a - b)\n    if diff < 2:\n        print(diff, 0)\n    else:\n        temp1 = a // diff\n        temp2 = min(abs(a - diff * temp1), abs(a - diff * (temp1 + 1)))\n        print(diff, temp2)", "n = int(input())\nl = []\nfor _ in range(n):\n    (a, b) = map(int, input().split())\n    (a, b) = (max(a, b), min(a, b))\n    d = a - b\n    if d == 0:\n        nb_op = 0\n    else:\n        nb_op = min(d - a % d, a % d, b)\n    l.append(str(d) + ' ' + str(nb_op))\nprint('\\n'.join(l))", "from sys import stdin, setrecursionlimit, maxsize\nfrom collections import deque\nfrom math import gcd\ninput = stdin.readline\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == b:\n        print(0, 0)\n    else:\n        g = abs(a - b)\n        m = min(a % g, g - a % g)\n        print(g, m)", "x = []\nt = int(input())\nfor ti in range(t):\n    l = [int(l) for l in input().split()]\n    x.append(l)\nfor j in range(t):\n    a = x[j][0]\n    b = x[j][1]\n    d = 0\n    if a > b:\n        d = a - b\n    else:\n        d = b - a\n    if d == 0:\n        print('0 0')\n        continue\n    else:\n        print(d, min(a % d, d - a % d))", "import sys\nfrom sys import stdin, stdout\nfrom math import ceil, floor, sqrt, log, log2, log10\nfrom collections import Counter\nint_max = float('inf')\nint_min = -float('inf')\nANS = []\ninput = stdin.readline\n\ndef solve():\n    pass\nt = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if a == b:\n        print(0, 0)\n    else:\n        print(abs(a - b), min(a % abs(a - b), abs(a - b) - a % abs(a - b)))\nprint('\\n'.join(ANS))", "t = int(input(''))\nimport math\n(i, it, a, b) = (0, 0, t * [0], t * [0])\nwhile i < t:\n    (a[i], b[i]) = map(int, input().split())\n    i += 1\nfor i in range(0, t):\n    diff = abs(a[i] - b[i])\n    if diff != 0:\n        lol = a[i] % diff\n        if lol < diff / 2:\n            print(diff, lol)\n        else:\n            print(diff, diff - lol)\n    else:\n        print(0, 0)", "from math import gcd\nn = int(input())\npairs = [None] * n\ngcds = [0] * n\nsteps = [0] * n\nfor i in range(n):\n    pairs[i] = list(map(int, input().split()))\nfor i in range(n):\n    a = min(pairs[i][0], pairs[i][1])\n    b = max(pairs[i][0], pairs[i][1])\n    if not a == b:\n        g = b - a\n        gcds[i] = g\n        steps[i] = min(a % g, g - a % g)\n    print(gcds[i], steps[i])", "N = int(input())\narr = []\narr = [[0 for j in range(2)] for i in range(N)]\nfor i in range(N):\n    (a, b) = map(int, input().split())\n    if a != b:\n        dif = abs(a - b)\n        mod1 = a % dif\n        mod2 = dif - a % dif\n        arr[i][0] = dif\n        arr[i][1] = min(mod1, mod2)\nfor i in range(N):\n    print(str(arr[i][0]) + ' ' + str(arr[i][1]))", "import sys\nimport math\nimport collections\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    if a == b:\n        print(0, end=' ')\n        print(0)\n    else:\n        diff = max(a, b) - min(a, b)\n        if b > a:\n            (a, b) = (b, a)\n        maxvalue = diff\n        maxmoves = min(b % diff, diff - b % diff)\n        print(diff, end=' ')\n        print(maxmoves)", "import math\n\ndef _1543a(a, b):\n    if a != b:\n        d = abs(a - b)\n        c = min(a, b)\n        i = 0\n        while i * d < c:\n            i += 1\n        if i * d - c > c - (i - 1) * d:\n            noo = c - (i - 1) * d\n        else:\n            noo = i * d - c\n        return str(d) + ' ' + str(noo)\n    else:\n        return '0 0'\nt = int(input())\ninpt = []\nanswers = []\nfor i in range(t):\n    inp = input()\n    inpt.append(inp)\nfor i in inpt:\n    a = int(i.split()[0])\n    b = int(i.split()[1])\n    answers.append(_1543a(a, b))\nfor i in answers:\n    print(i)", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    (c, d) = (max(a, b), min(a, b))\n    diff = c - d\n    if diff == 0:\n        print(0, 0)\n    elif d % diff == 0:\n        print(diff, 0)\n    else:\n        m = d // diff\n        ans = min(d - m * diff, (m + 1) * diff - d)\n        print(diff, ans)", "import sys\nimport math\nlines = []\nis_stdin = False\nis_stdin = True\nif is_stdin:\n    for line in sys.stdin:\n        lines.append(line.strip())\nelse:\n    with open('./myin.txt', 'r') as f:\n        for line in f.readlines():\n            lines.append(line.strip())\nN = int(lines.pop(0))\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    a %= b\n    return gcd(b, a)\nwhile N > 0:\n    N -= 1\n    n = lines.pop(0)\n    pieces = n.split(' ')\n    a = pieces[0]\n    b = pieces[1]\n    a = int(a)\n    b = int(b)\n    if a == b:\n        print('0 0')\n        continue\n    if a < b:\n        tmp = a\n        a = b\n        b = tmp\n    excite = a - b\n    left = b // excite\n    right = left + 1\n    left_b = left * excite\n    right_b = right * excite\n    moves = min(b - left_b, right_b - b)\n    print('{} {}'.format(excite, moves))", "from math import ceil, floor\n\ndef main():\n    import sys\n    input = sys.stdin.readline\n    for _ in range(int(input())):\n        (a, b) = map(int, input().split())\n        d = abs(a - b)\n        if d > 0:\n            m = abs(a - floor(a / d) * d) if abs(a - floor(a / d) * d) < abs(ceil(a / d) * d - a) else abs(ceil(a / d) * d - a)\n            print(d, m)\n        else:\n            print(0, 0)\nmain()", "import math\nfrom sys import stdin\n\ndef A():\n    t = int(stdin.readline())\n    while t:\n        t -= 1\n        d = [int(x) for x in stdin.readline().split()]\n        (a, b) = (d[0], d[1])\n        gcd = math.gcd(a, b)\n        if gcd == a == b:\n            print(0, end=' ')\n            print(0)\n        else:\n            g = abs(a - b)\n            m = min(a % g, g - a % g)\n            print(g, end=' ')\n            print(m)\nA()", "from collections import deque\nimport heapq\nfrom math import sqrt\nimport operator\nfrom operator import itemgetter\nimport sys\nimport copy\ninf_var = 0\nif inf_var == 1:\n    inf = open('input.txt', 'r')\nelse:\n    inf = sys.stdin\ninput = inf.readline\n\ndef read_one_int():\n    return int(input().rstrip('\\n'))\n\ndef read_one_float():\n    return float(input().rstrip('\\n'))\n\ndef read_list_of_ints():\n    res = [int(val) for val in input().rstrip('\\n').split(' ')]\n    return res\n\ndef read_str():\n    return input().rstrip()\n\ndef main():\n    tests = read_one_int()\n    for _ in range(tests):\n        (a, b) = read_list_of_ints()\n        if a < b:\n            (a, b) = (b, a)\n        gcd = a - b\n        if gcd == 0:\n            print('{} {}'.format(0, 0))\n            continue\n        oper_cnt_1 = a % gcd\n        oper_cnt_2 = None\n        if oper_cnt_1 != 0:\n            oper_cnt_2 = gcd - oper_cnt_1\n        if oper_cnt_2 is not None:\n            oper_cnt = min(oper_cnt_2, oper_cnt_1)\n        else:\n            oper_cnt = oper_cnt_1\n        print('{} {}'.format(gcd, oper_cnt))\nmain()", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print((d := abs(a - b)), d and min(a % d, -a % d))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == b:\n        print(0, 0)\n        continue\n    if abs(a - b) == 1:\n        print(1, 0)\n        continue\n    c = abs(a - b)\n    d = a // c\n    e = d + 1\n    if a - c * d <= c * e - a:\n        print(c, a - c * d)\n    else:\n        print(c, c * e - a)", "for s in [*open(0)][1:]:\n    (a, b) = map(int, s.split())\n    print((d := abs(a - b)), d and min(a % d, -a % d))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == b:\n        print(0, 0)\n    else:\n        dif = abs(a - b)\n        print(dif, min(a % dif, dif - a % dif))", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    r = abs(a - b)\n    s = 0\n    if a == b:\n        print(0, 0)\n    else:\n        print(r, min(r - a % r, a % r))", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (a, b) = map(int, input().split())\n    y = abs(a - b)\n    if y == 0:\n        print(0, 0)\n    else:\n        z = min(a % y, y - a % y)\n        print(y, z)", "t = int(input())\ni = 0\nA = []\nwhile 0 <= i < t:\n    i = i + 1\n    k = 2\n    (a, b) = map(int, input().split())\n    c = max(a, b)\n    d = min(a, b)\n    if c == d:\n        A.append('0 0')\n    else:\n        q = c - d\n        if d % q >= q / 2:\n            s = q - d % q\n        else:\n            s = d % q\n        A.append(str(q) + ' ' + str(s))\nk = -1\nwhile -1 <= k < t - 1:\n    k = k + 1\n    print(A[k])", "def cf_730A(a: int, b: int):\n    diff = abs(b - a)\n    if not diff:\n        return (diff, diff)\n    else:\n        return (diff, min(a - a // diff * diff, (a // diff + 1) * diff - a))\nfor _ in range(int(input())):\n    print(*cf_730A(*map(int, input().split())))", "for i in range(int(input())):\n    (a, b) = map(int, input().split())\n    x = abs(a - b)\n    if x == 0:\n        print(0, 0)\n    else:\n        print(x, min(a % x, x - a % x))", "for tc in range(int(input())):\n    (a, b) = [int(x) for x in input().split()]\n    if a > b:\n        (a, b) = (b, a)\n    if a == b:\n        print(0, 0)\n        continue\n    diff = b - a\n    move = min(a % diff, diff - a % diff)\n    print(diff, move)", "t = int(input())\nfor _ in range(t):\n    (a, b) = map(int, input().split())\n    if a == b:\n        print(0, 0)\n    else:\n        g = abs(a - b)\n        steps = min(a % g, g - a % g)\n        print(g, steps)", "t = int(input())\nfor i in range(t):\n    (a, b) = [int(x) for x in input().split()]\n    if a == b:\n        print(0, 0)\n    else:\n        (a, b) = (max(a, b), min(a, b))\n        if a % (a - b) == 0:\n            print(a - b, 0)\n        else:\n            res = min(a % (a - b), a - b - a % (a - b))\n            print(a - b, res)", "import math\nfor i in range(int(input())):\n    (a, b) = list(map(int, input().split()))\n    if a == b:\n        print('0', '0')\n    else:\n        g = abs(a - b)\n        print(g, min(a % g, (g - a) % g))", "n = int(input())\nfor i in range(n):\n    (a, b) = [int(x) for x in input().split()]\n    best_gcd = abs(a - b)\n    if best_gcd == 0:\n        min_steps = 0\n    else:\n        target_1 = best_gcd * (a // best_gcd + 1) - a\n        target_2 = best_gcd * (b // best_gcd + 1) - b\n        target_3 = a % best_gcd\n        target_4 = b % best_gcd\n        min_steps = min(target_1, target_2, target_3, target_4)\n    print(best_gcd, min_steps)", "n = int(input())\nfor i in range(n):\n    (a, b) = [int(x) for x in input().split()]\n    best_gcd = abs(a - b)\n    if best_gcd == 0:\n        min_steps = 0\n    else:\n        target_1 = best_gcd * (a // best_gcd + 1) - a\n        target_3 = a % best_gcd\n        min_steps = min(target_1, target_3)\n    print(best_gcd, min_steps)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == b:\n        print(0, 0)\n    else:\n        mx = abs(a - b)\n        mn = min(a % mx, (mx - a) % mx)\n        print(mx, mn)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == b:\n        print(0, 0)\n    else:\n        Max = abs(a - b)\n        Min = min(a % Max, (Max - a) % Max)\n        print(Max, Min)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == b:\n        print(0, 0)\n    else:\n        h = abs(b - a)\n        k = min(a, b) % abs(b - a)\n        if k > h // 2:\n            k = h - k\n        print(h, k)", "from math import gcd, ceil\nfor _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    if a == b:\n        print('%d %d' % (0, 0))\n    else:\n        if a > b:\n            (a, b) = (b, a)\n        ans = b - a\n        steps = 0\n        r = a % ans\n        if r >= ans / 2:\n            steps = ceil(a / ans) * ans - a\n        else:\n            steps = r\n        print('%d %d' % (ans, steps))", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if a == b:\n        print(0, 0)\n    else:\n        diff = abs(a - b)\n        s = min(a % diff, diff - a % diff)\n        print(diff, s)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    c = abs(a - b)\n    m = 0\n    if c != 0:\n        m = a % c\n    print(c, min(m, c - m))", "import math\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        print(case())\n\ndef case():\n    (a, b) = sorted(list(map(int, input().split())))\n    d = b - a\n    if d == 0:\n        return '0 0'\n    if d == 1:\n        return '1 0'\n    return f'{d} {min(a % d, d - a % d)}'\nmain()", "t = int(input())\nfor i in range(t):\n    (a, b) = input().split()\n    a = int(a)\n    b = int(b)\n    gcd = 0\n    if a > b:\n        gcd = a - b\n    else:\n        gcd = b - a\n    if a == b:\n        print('0  0')\n    elif gcd == 1:\n        print('1  0')\n    else:\n        m = a % gcd\n        if m == 0:\n            print(gcd, m)\n        else:\n            m1 = m\n            n = gcd - m\n            if m1 > n:\n                m = n\n            else:\n                m = m1\n            print(gcd, m)", "t = int(input())\nfor i in range(t):\n    (a, b) = input().split()\n    a = int(a)\n    b = int(b)\n    gcd = 0\n    if a > b:\n        gcd = a - b\n    else:\n        gcd = b - a\n    if a == b:\n        print('0  0')\n    elif gcd == 1:\n        print('1  0')\n    else:\n        m = a % gcd\n        if m == 0:\n            print(gcd, m)\n        else:\n            m1 = m\n            n = gcd - m\n            if m1 > n:\n                m = n\n            else:\n                m = m1\n            print(gcd, m)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    r = abs(a - b)\n    s = 0\n    if a == b:\n        print(0, 0)\n    else:\n        print(r, min(r - a % r, a % r))", "n = int(input())\nfor i in range(0, n):\n    (a, b) = map(int, input().split())\n    x = abs(a - b)\n    if x == 0:\n        print(0, 0)\n    else:\n        y = min(a % x, x - a % x)\n        print(x, y)", "test = int(input())\nfor _ in range(test):\n    (a, b) = map(int, input().split())\n    if a == b:\n        print(0, 0)\n        continue\n    gcd = abs(a - b)\n    rem = max(a, b) % gcd\n    print(gcd, min(rem, gcd - rem))", "import math\nt = int(input())\nwhile t:\n    (a, b) = map(int, input().split())\n    if a == b:\n        print(0, 0)\n    else:\n        g = abs(a - b)\n        ans = min(a % g, g - a % g)\n        print(g, ans)\n    t -= 1", "t = int(input())\nfor i in range(t):\n    (a, b) = map(int, input().split())\n    if a != b:\n        c = abs(a - b)\n        d = b % c\n        e = abs(c - d)\n        print(c, min(d, e))\n    else:\n        print(0, 0)", "for _ in range(int(input())):\n    (a, b) = map(int, input().split())\n    m = abs(a - b)\n    if m == 0:\n        print(0, 0)\n        continue\n    small = min(a, b)\n    lower = small // m * m\n    upper = lower + m\n    o = min(small - lower, upper - small)\n    print(m, o)", "t = int(input())\nfor i in range(t):\n    (a, b) = [int(k) for k in input().split()]\n    if b == a:\n        print(0, 0)\n    else:\n        x = abs(b - a)\n        (a, b) = sorted([a, b])\n        print(x, min(a % x, x - a % x))"]