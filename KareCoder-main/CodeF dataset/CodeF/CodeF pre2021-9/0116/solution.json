["tests = int(input())\nfor test in range(tests):\n    (n, c0, c1, h) = map(int, input().split())\n    s = input()\n    count_0 = s.count('0')\n    count_1 = s.count('1')\n    print(min(c0 * count_0 + c1 * count_1, count_0 * h + n * c1, count_1 * h + n * c0))", "for _ in range(int(input())):\n    (n, c0, c1, h) = map(int, input().split())\n    diff = abs(c0 - c1)\n    s = list(input())\n    cost = 0\n    n0 = 0\n    n1 = 0\n    for i in range(n):\n        if s[i] == '0':\n            cost = cost + c0\n            n0 = n0 + 1\n        else:\n            cost = cost + c1\n            n1 = n1 + 1\n    if h >= diff:\n        print(cost)\n    elif c0 < c1 and diff == c1 - c0:\n        print(c0 * n + n1 * h)\n    elif c1 < c0 and diff == c0 - c1:\n        print(c1 * n + n0 * h)\n    else:\n        print(cost)", "for i in range(int(input())):\n    (n, c0, c1, h) = map(int, input().split())\n    s = input()\n    a = s.count('1') * c1\n    b = s.count('0') * c0\n    c = a + b\n    if c1 > c0:\n        ans1 = s.count('1') * h\n        ab = ans1 + n * c0\n        print(min(c, ab))\n    elif c1 < c0:\n        ans1 = s.count('0') * h\n        ab = ans1 + n * c1\n        print(min(c, ab))\n    elif c1 == c0:\n        print(c)", "for i in range(int(input())):\n    (n, c0, c1, h) = map(int, input().split())\n    s = input()\n    z0 = s.count('0')\n    z1 = s.count('1')\n    print(min(z0 * c0 + z1 * c1, z1 * h + n * c0, z0 * h + n * c1))", "for _ in range(int(input())):\n    (n, c0, c1, h) = list(map(int, input().split()))\n    s = input()\n    pay = 0\n    for i in s:\n        if i == '1':\n            pay += min(c1, h + c0)\n        else:\n            pay += min(c0, h + c1)\n    print(pay)", "for i in range(int(input())):\n    (n, c0, c1, h) = map(int, input().split())\n    z = input()\n    x = z.count('0')\n    y = z.count('1')\n    if c0 > c1 + h:\n        print(n * c1 + x * h)\n    elif c1 > c0 + h:\n        print(n * c0 + y * h)\n    else:\n        print(c0 * x + c1 * y)", "for i in range(int(input())):\n    (n, c0, c1, h) = map(int, input().split())\n    s = input()\n    count_0 = s.count('0')\n    count_1 = len(s) - count_0\n    if c0 + h < c1:\n        print(c0 * count_0 + (c0 + h) * count_1)\n    elif c1 + h < c0:\n        print(c1 * count_1 + (c1 + h) * count_0)\n    else:\n        print(c0 * count_0 + c1 * count_1)", "import io, os\nimport sys\nfrom sys import stdin\nfrom bisect import bisect_left, bisect_right\nfrom collections import defaultdict, deque, namedtuple\nfrom math import gcd, ceil, floor, factorial\nfrom itertools import combinations, permutations\ninput = sys.stdin.readline\n\ndef work():\n    ans = 0\n    return\n\ndef main():\n    test = int(input())\n    for idt in range(test):\n        (n, c0, c1, h) = map(int, input().split())\n        s = input().strip('\\r\\n')\n        ans = 0\n        for (i, ch) in enumerate(s):\n            if ch == '0':\n                ans += min(c0, c1 + h)\n            else:\n                ans += min(c1, c0 + h)\n        print(ans)\n    return\nmain()", "t = int(input(''))\nfor i in range(t):\n    (n, c0, c1, h) = map(int, input('').split())\n    s = input('')\n    if c0 > c1:\n        d = s.count('1')\n        b = s.count('0')\n        c = c1\n        a = c0\n    else:\n        d = s.count('0')\n        b = s.count('1')\n        c = c0\n        a = c1\n    Min = 100000000\n    for j in range(0, b + 1):\n        Min = min(Min, j * h + (d + j) * c + (b - j) * a)\n    print(Min)", "tests = int(input())\nfor test in range(tests):\n    (n, c0, c1, h) = map(int, input().split())\n    s = input()\n    count_0 = s.count('0')\n    count_1 = s.count('1')\n    print(min(c0 * count_0 + c1 * count_1, count_0 * h + n * c1, count_1 * h + n * c0))", "cases = int(input())\nfor a in range(cases):\n    b = input()\n    (n, c1, c2, h) = map(int, b.split(' '))\n    s = str(input())\n    res = 0\n    if abs(c2 - c1) > h:\n        if c2 > c1:\n            for x in s:\n                if x == '1':\n                    res += h\n            res += n * c1\n        else:\n            for x in s:\n                if x == '0':\n                    res += h\n            res += n * c2\n    else:\n        for y in s:\n            if y == '0':\n                res += c1\n            else:\n                res += c2\n    print(res)", "a = int(input())\ncnt_0 = 0\ncnt_1 = 0\ncnt1 = 0\ncnt2 = 0\nby = ''\nother = ''\nfor i in range(a):\n    (n, c0, c1, h) = map(int, input().split())\n    stg = input()\n    cnt_0 = stg.count('0')\n    cnt_1 = stg.count('1')\n    cnt1 = cnt_0 * c0 + cnt_1 * c1\n    if c0 > c1:\n        cnt2 = n * c1 + h * cnt_0\n    elif c1 > c0:\n        cnt2 = n * c0 + h * cnt_1\n    elif c1 == c0:\n        cnt2 = n * c0\n    print(min(cnt1, cnt2))", "for _ in [0] * int(input()):\n    (n, zero, one, h) = map(int, input().split())\n    r = [*map(int, list(input()))]\n    one_in_r = r.count(1)\n    zero_in_r = n - one_in_r\n    if zero > one + h:\n        print(n * one + zero_in_r * h)\n    elif one > zero + h:\n        print(n * zero + one_in_r * h)\n    else:\n        print(zero * zero_in_r + one * one_in_r)", "t = int(input())\nfor _ in range(t):\n    (n, c0, c1, h) = map(int, input().split())\n    s = input()\n    print(min(n * c0 + h * s.count('1'), n * c1 + h * s.count('0'), c0 * s.count('0') + c1 * s.count('1')))", "t = int(input())\nwhile t:\n    (n, c0, c1, h) = map(int, input().split())\n    s = input()\n    a = s.count('1') * c1\n    b = s.count('0') * c0\n    df = a + b\n    if c1 > c0:\n        ans1 = s.count('1') * h\n        ab = ans1 + n * c0\n        print(min(df, ab))\n    elif c1 < c0:\n        ans1 = s.count('0') * h\n        ab = ans1 + n * c1\n        print(min(df, ab))\n    elif c1 == c0:\n        print(df)\n    t -= 1", "for _ in range(int(input())):\n    (n, c0, c1, h) = [int(i) for i in input().split()]\n    s = list(input())\n    if h >= abs(c1 - c0):\n        print(s.count('0') * c0 + s.count('1') * c1)\n    elif max(c0, c1) == c1:\n        print(c0 * n + s.count('1') * h)\n    else:\n        print(s.count('0') * h + c1 * n)", "for i in range(int(input())):\n    (n, a, b, h) = map(int, input().split())\n    s = input()\n    print(s.count('0') * min(h + b, a) + s.count('1') * min(h + a, b))", "t = int(input())\nfor i in range(t):\n    (n, c0, c1, h) = map(int, input().split())\n    s = input()\n    count0 = 0\n    count1 = 0\n    for j in range(n):\n        if s[j] == '0':\n            count0 += 1\n        else:\n            count1 += 1\n    a = n * c1 + count0 * h\n    b = n * c0 + count1 * h\n    c = count1 * c1 + count0 * c0\n    print(min(a, b, c))", "x = int(input())\nfor _ in range(x):\n    (n, c, b, a) = [int(i) for i in input().split()]\n    s = input()\n    x = s.count('0') * min(a + b, c) + s.count('1') * min(a + c, b)\n    print(x)", "def min_price(s, c0, c1, h):\n    best_c0 = c0\n    best_c1 = c1\n    if c0 > c1:\n        if c1 + h < c0:\n            best_c0 = c1 + h\n    elif c1 > c0:\n        if c0 + h < c1:\n            best_c1 = c0 + h\n    price = s.count('0') * best_c0 + s.count('1') * best_c1\n    return price\nt = int(input())\nfor _ in range(t):\n    (n, c0, c1, h) = map(int, input().split())\n    s = input()\n    print(min_price(s, c0, c1, h))", "for _ in range(int(input())):\n    (n, c0, c1, h) = map(int, input().split())\n    s = input()\n    if c0 == c1:\n        print(n * c0)\n    elif c0 > c1:\n        zero = s.count('0')\n        one = s.count('1')\n        if h * zero + zero * c1 < zero * c0:\n            print(zero * c1 + one * c1 + zero * h)\n        else:\n            print(zero * c0 + one * c1)\n    else:\n        zero = s.count('0')\n        one = s.count('1')\n        if h * one + one * c0 < one * c1:\n            print(one * c0 + zero * c0 + one * h)\n        else:\n            print(zero * c0 + one * c1)", "n = int(input())\nfor i in range(n):\n    (n, c0, c1, h) = map(int, input().split())\n    string = str(input())\n    cost = 0\n    for char in string:\n        if char == '0':\n            cost += min(c0, c1 + h)\n        else:\n            cost += min(c1, c0 + h)\n    print(cost)", "tt = int(input())\narrow = []\nwhile tt > 0:\n    w = input()\n    w = w.split()\n    n = int(w[0])\n    c0 = int(w[1])\n    c1 = int(w[2])\n    h = int(w[3])\n    a = input()\n    n0 = a.count('0')\n    n1 = a.count('1')\n    s01 = c0 * n0 + c1 * n1\n    s0 = h * n1 + len(a) * c0\n    s1 = h * n0 + len(a) * c1\n    ans = min(s01, s0, s1)\n    arrow.append(ans)\n    tt -= 1\nfor i in range(len(arrow)):\n    print(arrow[i])", "t = int(input())\nwhile t > 0:\n    t -= 1\n    (n, a, b, h) = (int(i) for i in input().strip().split(' '))\n    x = 0\n    y = 0\n    s = input()\n    l = len(s)\n    for i in s:\n        if i == '0':\n            x += 1\n        if i == '1':\n            y += 1\n    if h + a < b:\n        print(a * l + h * y)\n    elif h + b < a:\n        print(b * l + h * x)\n    else:\n        print(a * x + b * y)", "for i in range(int(input())):\n    (n, c0, c1, h) = map(int, input().split())\n    s = input()\n    a = s.count('1')\n    b = s.count('0')\n    if c0 + h < c1:\n        ch1 = h * a\n        print(ch1 + n * c0)\n    elif c1 + h < c0:\n        ch0 = h * b\n        print(ch0 + n * c1)\n    else:\n        print(c0 * b + c1 * a)", "for _ in range(int(input())):\n    arr = [int(_) for _ in input().split()]\n    val = input()\n    v1 = arr[0] * arr[1] + val.count('1') * arr[3]\n    v2 = arr[0] * arr[2] + val.count('0') * arr[3]\n    v3 = arr[1] * val.count('0') + arr[2] * val.count('1')\n    print(min(v1, v2, v3))", "for _ in range(int(input())):\n    (n, c0, c1, h) = list(map(int, input().split(' ')))\n    s = input()\n    (a, b) = (s.count('0'), s.count('1'))\n    print(min(c0 * a + c1 * b, a * h + n * c1, b * h + n * c0))", "t = int(input())\nfor i in range(t):\n    x = input()\n    n = int(x.split()[0])\n    c0 = int(x.split()[1])\n    c1 = int(x.split()[2])\n    h = int(x.split()[3])\n    s = input()\n    n0 = 0\n    for j in range(n):\n        if s[j] == '0':\n            n0 += 1\n    n1 = n - n0\n    if c0 == c1:\n        print(c0 * n)\n    elif c0 > c1:\n        print(n1 * c1 + n0 * min(h + c1, c0))\n    else:\n        print(n0 * c0 + n1 * min(h + c0, c1))", "n_tests = int(input())\nfor test in range(n_tests):\n    (length, c0_coins, c1_coins, change_coins) = [int(i) for i in input().split()]\n    text = input()\n    cost = 0\n    for char in text:\n        cost += min(change_coins + c0_coins, c1_coins) if char == '1' else min(change_coins + c1_coins, c0_coins)\n    print(cost)", "for _ in range(int(input())):\n    (n, c0, c1, h) = map(int, input().split())\n    ans = 0\n    l = input()\n    for elem in l:\n        if elem == '1':\n            if c1 > h + c0:\n                ans += h + c0\n            else:\n                ans += c1\n        elif c0 > h + c1:\n            ans += h + c1\n        else:\n            ans += c0\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, c0, c1, h) = [int(elem) for elem in input().split(' ')]\n    s = input()\n    if c0 > c1:\n        if c0 - c1 > h:\n            print(h * s.count('0') + n * c1)\n        else:\n            print(c0 * s.count('0') + c1 * s.count('1'))\n    elif c1 > c0:\n        if c1 - c0 > h:\n            print(h * s.count('1') + n * c0)\n        else:\n            print(c0 * s.count('0') + c1 * s.count('1'))\n    else:\n        print(c0 * s.count('0') + c1 * s.count('1'))", "t = int(input())\nfor i in range(t):\n    (n, c0, c1, h) = map(int, input().split())\n    s = input()\n    sum1 = 0\n    if c0 > h + c1:\n        c0 = c1 + h\n    if c1 > c0 + h:\n        c1 = c0 + h\n    for j in range(n):\n        if s[j] == '0':\n            sum1 += c0\n        else:\n            sum1 += c1\n    print(sum1)", "for _ in range(int(input())):\n    (n, c0, c1, h) = map(int, input().split())\n    s = input()\n    if h < abs(c0 - c1):\n        print([n * c0 + h * s.count('1'), s.count('0') * h + c1 * n][c0 > c1])\n    else:\n        print(s.count('0') * c0 + c1 * s.count('1'))", "for i in range(int(input())):\n    (n, c0, c1, h) = map(int, input().split(' '))\n    st = list(input())\n    y = st.count('0')\n    z = st.count('1')\n    a = c0 * y + c1 * z\n    if y <= z:\n        x = h * y\n        ans1 = c1 * n + x\n        x2 = h * z\n        ans2 = c0 * n + x2\n        finans = min(ans1, ans2)\n        print(min(a, finans))\n    elif z <= y:\n        x = h * z\n        ans1 = c0 * n + x\n        x2 = h * y\n        ans2 = c1 * n + x2\n        finans = min(ans1, ans2)\n        print(min(a, finans))", "t = int(input())\nfor i in range(t):\n    temp = [int(x) for x in input().split()]\n    n = temp[0]\n    c0 = temp[1]\n    c1 = temp[2]\n    h = temp[3]\n    s = input()\n    if min(c0, c1) + h < max(c0, c1):\n        if c0 < c1:\n            print(h * s.count('1') + n * c0)\n        else:\n            print(h * s.count('0') + n * c1)\n    else:\n        x = s.count('0')\n        print(c0 * x + c1 * (n - x))", "inn = lambda : int(input())\ninm = lambda : map(int, input().split())\nins = lambda : str(input())\nina = lambda : list(map(int, input().split()))\n\ndef solve():\n    (n, c0, c1, h) = inm()\n    s = ins()\n    a = 0\n    b = 0\n    for i in s:\n        a += i == '0'\n        b += i == '1'\n    ans = float('inf')\n    for x in range(-n, n + 1):\n        if a + x > n or b - x < 0 or a + x < 0 or (b - x > n):\n            continue\n        ans = min(ans, c0 * (a + x) + c1 * (b - x) + h * abs(x))\n    print(ans)\n\ndef main():\n    t = 1\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "for _ in range(int(input())):\n    (n, c0, c1, h) = map(int, input().split())\n    s = str(input())\n    k = n * c0 + s.count('1') * h\n    l = n * c1 + s.count('0') * h\n    m = s.count('0') * c0 + s.count('1') * c1\n    print(min(k, l, m))", "for _ in range(int(input())):\n    (n, c0, c1, h) = map(int, input().split())\n    s = input()\n    ones = s.count('1')\n    zeroes = n - ones\n    if c0 + h == c1 or c1 + h == c0 or (c1 + h > c0 and c0 + h > c1):\n        print(zeroes * c0 + ones * c1)\n    elif c0 + h < c1:\n        print(n * c0 + ones * h)\n    elif c1 + h < c0:\n        print(n * c1 + zeroes * h)", "for i in range(int(input())):\n    (n, c0, c1, h) = map(int, input().split())\n    s = input()\n    zero = s.count('0')\n    one = s.count('1')\n    res0 = n * c0 + one * h\n    res1 = n * c1 + zero * h\n    res2 = zero * c0 + one * c1\n    print(min(res0, res1, res2))", "def number_of_1(binary):\n    binary = list(binary)\n    numb_of_1 = 0\n    for i in binary:\n        if i == '1':\n            numb_of_1 += 1\n    return numb_of_1\n\ndef number_of_0(binary):\n    binary = list(binary)\n    numb_of_0 = 0\n    for i in binary:\n        if i == '0':\n            numb_of_0 += 1\n    return numb_of_0\nn = int(input())\nfor i in range(n):\n    (n, c0, c1, h) = input().split()\n    c0 = int(c0)\n    c1 = int(c1)\n    h = int(h)\n    binary = input()\n    numb_of_0 = number_of_0(binary)\n    numb_of_1 = number_of_1(binary)\n    answer = 0\n    if c0 < h + c1:\n        answer = answer + c0 * numb_of_0\n    else:\n        answer = answer + (c1 + h) * numb_of_0\n    if c1 < h + c0:\n        answer = answer + c1 * numb_of_1\n    else:\n        answer = answer + (c0 + h) * numb_of_1\n    print(answer)", "t = int(input())\nfor _ in range(t):\n    (n, c0, c1, h) = map(int, input().split())\n    s = input()\n    cost = 0\n    for el in s:\n        if el == '0':\n            if c0 > c1 + h:\n                cost += c1 + h\n            else:\n                cost += c0\n        if el == '1':\n            if c1 > c0 + h:\n                cost += c0 + h\n            else:\n                cost += c1\n    print(cost)", "t = int(input())\nfor i in range(t):\n    (n, c0, c1, h) = input().split(' ')\n    (n, c0, c1, h) = (int(n), int(c0), int(c1), int(h))\n    digits = input()\n    digit0 = digits.count('0')\n    digit1 = n - digit0\n    if h >= c0 and h >= c1:\n        print(digit0 * c0 + digit1 * c1)\n    elif c0 <= h and c1 > h:\n        if c0 + h < c1:\n            print(digit0 * c0 + digit1 * (c0 + h))\n        else:\n            print(digit0 * c0 + digit1 * c1)\n    elif c0 > h and c1 <= h:\n        if c1 + h < c0:\n            print(digit0 * (c1 + h) + digit1 * c1)\n        else:\n            print(digit0 * c0 + digit1 * c1)\n    elif c1 < c0 and c1 + h < c0:\n        print(digit0 * (h + c1) + digit1 * c1)\n    elif c0 < c1 and c0 + h < c1:\n        print(digit0 * c0 + digit1 * (h + c0))\n    else:\n        print(digit0 * c0 + digit1 * c1)", "for ti in range(int(input())):\n    (n, c0, c1, h) = map(int, input().split())\n    s = input()\n    n1 = s.count('1')\n    n0 = s.count('0')\n    print(n1 * min(c1, h + c0) + n0 * min(c0, h + c1))", "def min_change(n_cList, s):\n    n = n_cList[0]\n    c0 = n_cList[1]\n    c1 = n_cList[2]\n    h = n_cList[3]\n    answer = 0\n    for i in range(len(s)):\n        if s[i] == '0':\n            answer += min(c0, c1 + h)\n        else:\n            answer += min(c1, c0 + h)\n    return answer\nt = int(input())\nans_arr = []\nfor i in range(t):\n    n_cList = list(map(int, input().split()))\n    s = str(input())\n    ans = min_change(n_cList, s)\n    ans_arr.append(ans)\nfor j in ans_arr:\n    print(j)", "t = int(input())\nfor _ in range(t):\n    (n, c0, c1, h) = map(int, input().split())\n    s = input()\n    res = 0\n    for i in range(n):\n        if s[i] == '0':\n            res += min(c0, c1 + h)\n        else:\n            res += min(c1, c0 + h)\n    print(res)", "t = int(input())\nfor i in range(t):\n    (n, c0, c1, h) = map(int, input().split(' '))\n    s = input()\n    z = s.count('0')\n    one = s.count('1')\n    a = c0 * z + c1 * one\n    for i in range(1, z + 1):\n        t = i * h + c0 * (z - i) + c1 * (one + i)\n        a = min(t, a)\n    for i in range(1, one + 1):\n        t = i * h + c0 * (z + i) + c1 * (one - i)\n        a = min(t, a)\n    print(a)", "t = int(input())\nfor i in range(t):\n    k = input().split()\n    n = int(k[0])\n    a0 = int(k[1])\n    a1 = int(k[2])\n    h = int(k[3])\n    s = input()\n    c0 = s.count('0')\n    c1 = s.count('1')\n    print(c0 * min(a0, a1 + h) + c1 * min(a0 + h, a1))", "t = int(input())\nwhile t:\n    (n, c0, c1, h) = map(int, input().split())\n    s = input()\n    ans = 0\n    for i in range(len(s)):\n        if s[i] == '0':\n            ans += min(c0, c1 + h)\n        else:\n            ans += min(c1, c0 + h)\n    print(ans)\n    t -= 1", "for _ in range(int(input())):\n    (n, c0, c1, h) = map(int, input().split())\n    s = input()\n    if c0 == c1:\n        a = s.count('0')\n        b = s.count('1')\n        c = a * c0 + b * c1\n        d = a * c0 + b * c1\n        print(min(c, d))\n    elif c0 > c1:\n        a = s.count('0')\n        b = s.count('1')\n        c = a * c0 + b * c1\n        d = a * h + (a + b) * c1\n        print(min(c, d))\n    else:\n        a = s.count('1')\n        b = s.count('0')\n        c = a * c1 + b * c0\n        d = a * h + (a + b) * c0\n        print(min(c, d))", "for i in range(int(input())):\n    (n, c0, c1, h) = map(int, input().split())\n    strings = input()\n    x = strings.count('0')\n    y = strings.count('1')\n    cost_1 = x * c1 + y * c1 + x * h\n    cost_2 = y * c1 + x * c0\n    cost_3 = y * c0 + x * c0 + y * h\n    result = min(cost_1, cost_2, cost_3)\n    print(result)", "for _ in range(int(input())):\n    (n, c0, c1, h) = map(int, input().split())\n    s = input()\n    zero = s.count('0')\n    one = s.count('1')\n    cost = zero * c0 + one * c1\n    ans = cost\n    for i in range(zero):\n        cost1 = (zero - (i + 1)) * c0 + (one + i + 1) * c1 + h * (i + 1)\n        ans = min(cost1, ans)\n    for i in range(one):\n        cost1 = (zero + (i + 1)) * c0 + (one - (i + 1)) * c1 + h * (i + 1)\n        ans = min(ans, cost1)\n    print(ans)", "for i in range(int(input())):\n    (n, c0, c1, h) = map(int, input().split())\n    s = input()\n    c = s.count('0')\n    a = s.count('1')\n    print(min(c * c0 + a * c1, n * c0 + h * a, h * c + c1 * n))", "for tc in range(int(input())):\n    (n, c0, c1, h) = [int(i) for i in input().strip().split(' ')]\n    s = [int(i) for i in input()]\n    s1 = sum(s)\n    s0 = n - s1\n    if c0 > c1 + h:\n        c0 = c1 + h\n    elif c1 > c0 + h:\n        c1 = c0 + h\n    res = s0 * c0 + s1 * c1\n    print(res)", "t = int(input())\nfor _ in range(t):\n    (a, b, c, d) = map(int, input().split())\n    s = input()\n    c = min(c, d + b)\n    b = min(b, d + c)\n    print(s.count('0') * b + s.count('1') * c)", "for tc in range(int(input())):\n    (n, c0, c1, h) = [int(i) for i in input().strip().split()]\n    s = [int(i) for i in input()]\n    a = sum(s)\n    b = n - a\n    if c0 > c1 + h:\n        c0 = c1 + h\n    elif c1 > c0 + h:\n        c1 = c0 + h\n    res = b * c0 + a * c1\n    print(res)", "t = int(input())\nfor i in range(t):\n    (n, c0, c1, h) = [int(x) for x in input().split()]\n    s = input()\n    z = s.count('0')\n    o = s.count('1')\n    if c0 == c1:\n        print(c0 * len(s))\n    elif c1 > c0:\n        k = z * c0 + o * c1\n        m = z * c0 + o * c0 + o * h\n        if k <= m:\n            print(k)\n        else:\n            print(m)\n    elif c0 > c1:\n        k = z * c0 + o * c1\n        m = z * h + z * c1 + o * c1\n        if k <= m:\n            print(k)\n        else:\n            print(m)", "for i in range(int(input())):\n    (n, c0, c1, h) = map(int, input().split())\n    s = input()\n    q = s.count('1')\n    print(min(q * c1 + (n - q) * c0, q * (h + c0) + (n - q) * c0, q * c1 + (n - q) * (h + c1)))", "PI = 3.141592653589793\nINF = 999999999\nMOD = 1000000007\nimport random\n\ndef add(x, y):\n    return (x + y) % MOD\n\ndef sub(x, y):\n    return (x - y + MOD) % MOD\n\ndef mul(x, y):\n    return x * y % MOD\n\ndef gcd(x, y):\n    if y == 0:\n        return x\n    return gcd(y, x % y)\n\ndef lcm(x, y):\n    return x * y // gcd(x, y)\n\ndef power(x, y):\n    res = 1\n    x %= MOD\n    while y != 0:\n        if y & 1:\n            res = mul(res, x)\n        y >>= 1\n        x = mul(x, x)\n    return res\n\ndef mod_inv(n):\n    return power(n, MOD - 2)\n\ndef prob(p, q):\n    return mul(p, power(q, MOD - 2))\n\ndef ii():\n    return int(input())\n\ndef li():\n    return [int(i) for i in input().split()]\n\ndef ls():\n    return [i for i in input().split()]\nfor t in range(ii()):\n    (n, c0, c1, h) = li()\n    s = input()\n    zer = s.count('0')\n    on = s.count('1')\n    print(min(c0 * zer + c1 * on, n * c0 + h * on, n * c1 + h * zer))", "for i in range(int(input())):\n    (n, c_0, c_1, h) = map(int, input().split())\n    l = input()\n    p = 0\n    m = 0\n    if c_0 > c_1:\n        c = l.count('0')\n        m = c_0 * c + c_1 * (len(l) - c)\n        for i in range(c):\n            p = m - c_0 + (c_1 + h)\n            if p < m:\n                m = p\n            else:\n                break\n    elif c_1 >= c_0:\n        c = l.count('1')\n        m = c_1 * c + c_0 * (len(l) - c)\n        for i in range(c):\n            p = m - c_1 + (c_0 + h)\n            if p < m:\n                m = p\n            else:\n                break\n    print(m)\n    print()", "for _ in range(int(input())):\n    (n, c0, c1, h) = map(int, input().split())\n    s = str(input())\n    one = s.count('1')\n    zero = s.count('0')\n    ans = zero * min(c0, c1 + h) + one * min(c1, c0 + h)\n    print(ans)", "for _ in range(int(input())):\n    (n, c0, c1, h) = map(int, input().split())\n    s = input()\n    b = s.count('1')\n    a = s.count('0')\n    print(min(b * c1 + a * c0, b * h + n * c0, a * h + n * c1))", "n = int(input())\nfor i in range(n):\n    inQ = input()\n    Q = inQ.split()\n    n = int(Q[0])\n    c0 = int(Q[1])\n    c1 = int(Q[2])\n    h = int(Q[3])\n    char = input()\n    ans = 0\n    for i in range(len(char)):\n        if char[i] == '0':\n            ans += min(c0, c1 + h)\n        else:\n            ans += min(c1, c0 + h)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    (n, c0, c1, h) = [int(j) for j in input().split()]\n    binary_string = input()\n    result = 0\n    for i in range(len(binary_string)):\n        if binary_string[i] == '0':\n            result += min(c0, c1 + h)\n        else:\n            result += min(c1, c0 + h)\n    print(result)", "for _ in range(int(input())):\n    (n, c0, c1, h) = map(int, input().split())\n    s = input()\n    temp = c0 * s.count('0') + c1 * s.count('1')\n    if c0 == c1:\n        print(temp)\n    elif c0 > c1:\n        c = s.count('0')\n        for i in range(n):\n            if s[i] == '0':\n                s = s.replace(s[i], '1')\n        cost = c * h + s.count('1') * c1\n        print(min(temp, cost))\n    else:\n        c = s.count('1')\n        for i in range(n):\n            if s[i] == '1':\n                s = s.replace(s[i], '0')\n        cost = c * h + s.count('0') * c0\n        print(min(temp, cost))", "m = int(input())\nl = []\nfor i in range(m):\n    (n, c1, c2, h) = map(int, input().split())\n    s = input()\n    a = len(s)\n    a0 = s.count('0')\n    a1 = s.count('1')\n    if c1 == c2:\n        l.append(a * c1)\n    elif c1 < c2:\n        l.append(min(a1 * h + a * c1, a0 * c1 + a1 * c2))\n    else:\n        l.append(min(a0 * h + a * c2, a1 * c2 + a0 * c1))\nfor i in l:\n    print(i)", "for _ in range(int(input())):\n    (n, c0, c1, h) = map(int, input().split())\n    s = str(input())\n    if c0 == c1:\n        print(c0 * len(s))\n    else:\n        a = c0 * len(s) + h * s.count('1')\n        b = c1 * len(s) + h * s.count('0')\n        c = c0 * s.count('0') + c1 * s.count('1')\n        print(min(a, b, c))", "for _ in range(0, int(input())):\n    (n, c0, c1, h) = map(int, input().split())\n    d = {}\n    d['0'] = [c0, 0]\n    d['1'] = [c1, 0]\n    t = 0\n    i = sorted(d, key=d.get)\n    c = input().count('0')\n    d['0'][1] = c\n    d['1'][1] = n - c\n    (a, b) = i\n    t += d[a][0] * d[a][1]\n    if d[b][0] > h + d[a][0]:\n        t += (h + d[a][0]) * d[b][1]\n    else:\n        t += d[b][0] * d[b][1]\n    print(t)", "t = int(input())\nfor _ in range(t):\n    (n, c0, c1, h) = [int(i) for i in input().split()]\n    s = input()\n    zeros = 0\n    ones = 0\n    coins = 0\n    remain = 0\n    exp = 0\n    chp = 0\n    for c in s:\n        if c is '0':\n            zeros += 1\n        else:\n            ones += 1\n    if c0 > c1:\n        coins += ones * c1\n        exp = c0\n        chp = c1\n        remain = zeros\n    elif c0 < c1:\n        coins += zeros * c0\n        exp = c1\n        chp = c0\n        remain = ones\n    else:\n        coins = zeros * c0 + ones * c1\n        print(coins)\n        continue\n    if exp * remain < remain * (chp + h):\n        coins += exp * remain\n    else:\n        coins += remain * (chp + h)\n    print(coins)", "t = int(input())\nfor inh in range(0, t):\n    (n, a, b, h) = map(int, input().split())\n    s = input()\n    zer = s.count('0')\n    one = s.count('1')\n    if a == b:\n        print(n * a)\n    elif a < b:\n        if a + h < b:\n            print(a * n + h * one)\n        else:\n            print(a * zer + b * one)\n    elif b + h < a:\n        print(b * n + h * zer)\n    else:\n        print(b * one + a * zer)", "k = []\nfor _ in range(int(input())):\n    (n, c0, c1, h) = map(int, input().split())\n    s = input('')\n    if c0 + h < c1:\n        k.append(n * c0 + h * s.count('1'))\n    elif c1 + h < c0:\n        k.append(n * c1 + h * s.count('0'))\n    else:\n        k.append(c0 * s.count('0') + c1 * s.count('1'))\nfor i in k:\n    print(i)", "I = input\nfor _ in range(int(I())):\n    (n, a, b, c) = map(int, I().split())\n    s = I()\n    x = s.count('0')\n    if b < a:\n        (a, b) = (b, a)\n        x = n - x\n    print(x * a + (n - x) * min(c + a, b))", "for _ in range(int(input())):\n    (n, o, l, h) = map(int, input().split())\n    x = list(map(int, input().strip()))\n    print(x.count(0) * min(o, l + h) + x.count(1) * min(l, o + h))", "for i in range(int(input())):\n    (n, c0, c1, h) = map(int, input().split())\n    s = input()\n    z0 = s.count('0')\n    z1 = s.count('1')\n    print(min(z0 * c0 + z1 * c1, z1 * h + n * c0, z0 * h + n * c1))", "from math import *\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom collections import Counter as ctr\nfrom collections import deque as dq\nfrom array import array\nfrom re import search\nli = lambda : list(map(int, input().split()))\narr = lambda a: array('i', a)\nbi = lambda n: bin(n).replace('0b', '')\nyn = lambda f: print('NYOE S'[f::2])\nsbstr = lambda a, s: search('.*'.join(a), s)\n\ndef solve():\n    for _ in range(int(input())):\n        (n, c0, c1, h) = li()\n        s = input()\n        cost = 0\n        if h < c0 - c1:\n            print(s.count('0') * h + c1 * n)\n        elif h < c1 - c0:\n            print(s.count('1') * h + c0 * n)\n        else:\n            print(s.count('0') * c0 + s.count('1') * c1)\nsolve()", "def minCoin(n, c0, c1, h, s):\n    if c0 == c1:\n        return c0 * n\n    elif c0 < c1:\n        if c0 + h >= c1:\n            return c0 * s.count('0') + c1 * s.count('1')\n        else:\n            return c0 * s.count('0') + (c0 + h) * s.count('1')\n    elif c1 + h >= c0:\n        return c1 * s.count('1') + c0 * s.count('0')\n    else:\n        return c1 * s.count('1') + (c1 + h) * s.count('0')\nt = int(input())\nfor i in range(t):\n    (n, c0, c1, h) = [int(x) for x in input().split()]\n    s = input()\n    print(minCoin(n, c0, c1, h, s))", "tests = int(input())\nfor test in range(tests):\n    (n, c0, c1, h) = map(int, input().split())\n    s = input()\n    count_0 = s.count('0')\n    count_1 = s.count('1')\n    print(min(count_0 * c0 + count_1 * c1, count_0 * h + n * c1, count_1 * h + n * c0))", "tests = int(input())\nfor test in range(tests):\n    (n, c0, c1, h) = map(int, input().split())\n    s = input()\n    count_0 = s.count('0')\n    count_1 = s.count('1')\n    print(min(c0 * count_0 + c1 * count_1, count_0 * h + n * c1, count_1 * h + n * c0))", "for _ in range(int(input())):\n    (n, c0, c1, h) = map(int, input().split())\n    arr = list(map(int, input()))\n    count0 = arr.count(0)\n    count1 = n - count0\n    nc = count1 * c1 + count0 * c0\n    if count1 * h + n * c0 < nc:\n        print(n * c0 + count1 * h)\n    elif count0 * h + n * c1 < nc:\n        print(count1 * c1 + count0 * h + count0 * c1)\n    else:\n        print(count0 * c0 + count1 * c1)", "t = int(input())\nfor i in range(t):\n    s = list(map(int, input().split(' ')))\n    n = s[0]\n    c0 = s[1]\n    c1 = s[2]\n    h = s[3]\n    b = input()\n    b0 = 0\n    b1 = 0\n    for c in b:\n        if c == '0':\n            b0 += 1\n        else:\n            b1 += 1\n    c = 0\n    if abs(c0 - c1) <= h:\n        c = c0 * b0 + c1 * b1\n    elif c0 > c1:\n        c = b0 * h + n * c1\n    else:\n        c = n * c0 + b1 * h\n    print(c)", "import sys\nimport math\nimport bisect\nimport functools\nfrom functools import lru_cache\nfrom sys import stdin, stdout\nfrom math import gcd, floor, sqrt, log, ceil\nfrom heapq import heappush, heappop, heapify\nfrom collections import defaultdict as dd\nfrom collections import Counter as cc\nfrom bisect import bisect_left as bl\nfrom bisect import bisect_right as br\n\ndef lcm(a, b):\n    return abs(a * b) // math.gcd(a, b)\nsys.setrecursionlimit(100000000)\nintinp = lambda : int(input().strip())\nstripinp = lambda : input().strip()\nfltarr = lambda : list(map(float, input().strip().split()))\nintarr = lambda : list(map(int, input().strip().split()))\nceildiv = lambda x, d: x // d if x % d == 0 else x // d + 1\nMOD = 1000000007\ntests = int(input())\nfor test in range(tests):\n    (n, c0, c1, h) = map(int, input().split())\n    s = input()\n    count_0 = s.count('0')\n    count_1 = s.count('1')\n    print(min(count_0 * c0 + count_1 * c1, count_0 * h + n * c1, count_1 * h + n * c0))\nnum_cases = 1\nfor _ in range(num_cases):\n    pass", "for x in range(int(input())):\n    (n, a, b, h) = map(int, input().split())\n    s = input()\n    money = 0\n    for y in s:\n        if y == '0':\n            money += min(a, h + b)\n        if y == '1':\n            money += min(b, a + h)\n    print(money)", "for _ in range(int(input())):\n    (n, c0, c1, h) = map(int, input().split())\n    diff = abs(c0 - c1)\n    s = list(input())\n    cost = 0\n    n0 = 0\n    n1 = 0\n    for i in range(n):\n        if s[i] == '0':\n            cost = cost + c0\n            n0 = n0 + 1\n        else:\n            cost = cost + c1\n            n1 = n1 + 1\n    print(min(cost, c1 * n + n0 * h, c0 * n + n1 * h))", "def solve():\n    (n, c0, c1, h) = [int(x) for x in input().split()]\n    s = input()\n    if abs(c0 - c1) <= h:\n        print(s.count('0') * c0 + s.count('1') * c1)\n    else:\n        print(n * min(c0, c1) + h * s.count('0' if c0 > c1 else '1'))\nt = int(input())\nwhile t:\n    t -= 1\n    solve()", "for i in range(int(input())):\n    (n, co, c1, h) = map(int, input().split())\n    s = str(input())\n    ans = 0\n    for i in s:\n        if i == '0':\n            ans += min(co, h + c1)\n        elif i == '1':\n            ans += min(c1, h + co)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    (n, c0, c1, h) = list(map(int, input().split()))\n    s = input()\n    ans = 0\n    for i in range(n):\n        if s[i] == '0':\n            ans += min(c0, c1 + h)\n        else:\n            ans += min(c1, c0 + h)\n    print(ans)", "import sys\nread = sys.stdin.readline\nwrite = sys.stdout.write\ntestCaseCount = int(read())\ntestCases = []\ni = 0\nwhile i < testCaseCount:\n    testCases.append([read()[0:-1], read()[0:-1]])\n    i = i + 1\nfor caseNum in range(testCaseCount):\n    (strLen, price0, price1, changePrice) = map(int, testCases[caseNum][0].split())\n    num0 = 0\n    num1 = 0\n    cost = 0\n    for i in range(strLen):\n        if testCases[caseNum][1][i] == '0':\n            num0 += 1\n        if testCases[caseNum][1][i] == '1':\n            num1 += 1\n    if price0 - price1 > changePrice:\n        cost = price1 * (num0 + num1) + num0 * changePrice\n    elif price1 - price0 > changePrice:\n        cost = price0 * (num0 + num1) + num1 * changePrice\n    else:\n        cost = price0 * num0 + price1 * num1\n    write(str(cost) + '\\n')", "from math import *\nn = int(input())\nwhile n:\n    (x, y, z, d) = [int(i) for i in input().split()]\n    ans = 0\n    s = str(input())\n    for i in s:\n        if i == '0':\n            ans += min(y, z + d)\n        else:\n            ans += min(y + d, z)\n    print(ans)\n    n -= 1", "for _ in range(int(input())):\n    (n, c0, c1, h) = map(int, input().split())\n    li = list(input())\n    ones = li.count('1')\n    zeros = li.count('0')\n    re = []\n    re.append(c0 * n + ones * h)\n    re.append(c1 * n + zeros * h)\n    re.append(c0 * zeros + c1 * ones)\n    print(min(re))", "for i in range(int(input())):\n    (n, c0, c1, h) = map(int, input().split())\n    s = input()\n    z0 = s.count('0')\n    z1 = s.count('1')\n    print(min(z0 * c0 + z1 * c1, z1 * h + n * c0, z0 * h + n * c1))", "t = int(input())\nfor _ in range(t):\n    (n, c0, c1, h) = map(int, input().split())\n    s = input()\n    if c0 - c1 > h:\n        print(h * s.count('0') + n * c1)\n    elif c1 - c0 > h:\n        print(h * s.count('1') + n * c0)\n    else:\n        print(c1 * s.count('1') + c0 * s.count('0'))", "t = int(input())\nfor _ in range(t):\n    (n, c0, c1, h) = (int(i) for i in input().split())\n    s = input()\n    (_, ones) = ((zeros := s.count('0')), n - zeros)\n    res = min(zeros * c0 + ones * c1, n * c0 + h * ones, n * c1 + h * zeros)\n    print(res)", "T = int(input())\nfor t in range(T):\n    (x, c0, c1, h) = map(int, input().split())\n    S = input()\n    if c0 > c1:\n        if h + c1 < c0:\n            c0 = h + c1\n    elif c1 > c0:\n        if h + c0 < c1:\n            c1 = h + c0\n    P = 0\n    for s in S:\n        if s == '0':\n            P += c0\n        elif s == '1':\n            P += c1\n    print(P)", "for _ in range(int(input())):\n    (n, c0, c1, h) = input().split()\n    (n, c0, c1, h) = (int(n), int(c0), int(c1), int(h))\n    s = input()\n    n0 = 0\n    n1 = s.count('1')\n    n0 = n - n1\n    ans = 0\n    if h >= c0 and h >= c1 or c0 == c1:\n        ans = n0 * c0 + n1 * c1\n    elif c0 > c1:\n        ans = min(n0 * h + n * c1, n0 * c0 + n1 * c1)\n    elif c1 > c0:\n        ans = min(n1 * h + n * c0, c0 * n0 + c1 * n1)\n    print(ans)", "import sys\nfirst = True\nsecond = False\nT = int(input())\nfor line in sys.stdin:\n    if first:\n        (n, c, c1, h) = map(int, line.strip().split())\n        first = False\n        second = True\n        continue\n    if second:\n        s = line.strip()\n        coins = 0\n        if c < c1 and c1 - c > h:\n            for x in range(n):\n                if s[x] == '1':\n                    coins += h\n                    coins += c\n                else:\n                    coins += c\n        elif c > c1 and c - c1 > h:\n            for x in range(n):\n                if s[x] == '0':\n                    coins += h\n                    coins += c1\n                else:\n                    coins += c1\n        else:\n            for x in range(n):\n                if s[x] == '0':\n                    coins += c\n                else:\n                    coins += c1\n        second = False\n        first = True\n    print(coins)", "def buy_string(listOfNum, string):\n    zeroCount = 0\n    oneCount = 0\n    for i in range(listOfNum[0]):\n        if string[i] == '0':\n            zeroCount += 1\n        else:\n            oneCount += 1\n    cost = zeroCount * listOfNum[1] + oneCount * listOfNum[2]\n    if listOfNum[1] + listOfNum[3] < listOfNum[2]:\n        cost -= oneCount * (listOfNum[2] - listOfNum[1] - listOfNum[3])\n    elif listOfNum[2] + listOfNum[3] < listOfNum[1]:\n        cost -= zeroCount * (listOfNum[1] - listOfNum[2] - listOfNum[3])\n    print(cost)\nnumCases = int(input(''))\nfor i in range(numCases):\n    tempList = input('').split(' ')\n    tempList = [int(x) for x in tempList]\n    tempString = input('')\n    buy_string(tempList, tempString)", "def solution(n, c0, c1, h, s):\n    s = [int(e) for e in str(s)]\n    if c1 > c0 and h < c1 - c0:\n        return sum((c0 + h if e else c0 for e in s))\n    elif c0 > c1 and h < c0 - c1:\n        return sum((c1 if e else c1 + h for e in s))\n    else:\n        return sum((c1 if e else c0 for e in s))\nt = int(input())\nfor _ in range(t):\n    (n, c0, c1, h) = [int(e) for e in input().split(' ')]\n    s = input()\n    print(solution(n, c0, c1, h, s))", "for _ in range(int(input())):\n    (n, c0, c1, h) = map(int, input().split())\n    p = input()\n    a = p.count('0')\n    b = p.count('1')\n    print(min((h + c0) * b + c0 * a, c1 * b + (h + c1) * a, c1 * b + c0 * a))", "for _ in range(int(input())):\n    (n, co, cl, h) = map(int, input().split())\n    s = input()\n    zeros = 0\n    ones = 0\n    for i in s:\n        if i == '0':\n            zeros += 1\n        else:\n            ones += 1\n    ans = min(n * co + h * ones, n * cl + h * zeros, zeros * co + ones * cl)\n    print(ans)", "for _ in range(int(input())):\n    (n, c0, c1, h) = map(int, input().split())\n    s = input()\n    a = s.count('0')\n    b = s.count('1')\n    if c0 <= c1:\n        if c1 > c0 + h:\n            print(n * c0 + h * b)\n        else:\n            print(c0 * a + b * c1)\n    elif c0 > c1 + h:\n        print(n * c1 + h * a)\n    else:\n        print(c0 * a + b * c1)"]