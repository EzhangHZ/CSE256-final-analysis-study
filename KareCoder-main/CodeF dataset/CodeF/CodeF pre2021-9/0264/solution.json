["import sys\ninput = sys.stdin.readline\n\ndef solve():\n    s = input().strip()\n    n = ans = len(s)\n    st = cnt = 0\n    for i in range(n):\n        if s[i] == 'A':\n            st += 1\n        elif st:\n            st -= 1\n            ans -= 2\n        else:\n            cnt += 1\n    return ans - cnt // 2 * 2\nfor _ in range(int(input())):\n    print(solve())", "import sys\ninput = lambda : sys.stdin.readline().strip()\nfor EOFError in range(int(input())):\n    FloatingPointError = input()\n    KeyError = 0\n    for LookupError in FloatingPointError:\n        if LookupError == 'B' and KeyError != 0:\n            KeyError -= 1\n        else:\n            KeyError += 1\n    print(KeyError)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    s = input()[:-1]\n    (c, d) = (0, 0)\n    for i in s[::-1]:\n        if i == 'A':\n            if d == 0:\n                c += 1\n            else:\n                d = max(d - 1, 0)\n        else:\n            d += 1\n    if d % 2:\n        c += 1\n    print(c)", "from collections import defaultdict, Counter, deque\nfrom math import sqrt, log10, log, floor, factorial, gcd\nfrom bisect import bisect_left, bisect_right\nfrom itertools import permutations, combinations\nimport sys, io, os\ninput = sys.stdin.readline\ninf = float('inf')\nmod = 10 ** 9 + 7\n\ndef yn(a):\n    print('YES' if a else 'NO')\nceil = lambda a, b: (a + b - 1) // b\nt = int(input())\nfor test in range(t):\n    s = input().strip()\n    l = 0\n    for i in s:\n        if not l or i != 'B':\n            l += 1\n        else:\n            l -= 1\n    print(l)", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    s = input().strip('\\n')\n    li = [s[0]]\n    for i in range(1, len(s)):\n        if s[i] == 'B':\n            if len(li) > 0:\n                li.pop()\n            else:\n                li.append(s[i])\n        else:\n            li.append(s[i])\n    print(len(li))", "def abbb(array):\n    array = list(array)\n    stack = []\n    for x in array:\n        if not stack:\n            stack.append(x)\n        elif stack[-1] == 'A' and x == 'B':\n            stack.pop()\n        elif stack[-1] == 'B' and x == 'B':\n            stack.pop()\n        else:\n            stack.append(x)\n    return len(stack)\nt = int(input())\nfinal = []\nfor _ in range(t):\n    final.append(abbb(input()))\nfor _ in range(t):\n    print(final[_])", "def bombed(s):\n    (i, j) = (0, len(s) - 1)\n    t = 0\n    q = 0\n    while j >= 0:\n        if s[j] == 'B':\n            t += 1\n        elif t > 0:\n            t -= 1\n        else:\n            q += 1\n        j -= 1\n    return q + t % 2\nres = []\nfor _ in range(int(input())):\n    res.append(bombed(input()))\nprint(*res, sep='\\n')", "from sys import stdin\ninput = stdin.readline\nfor test in range(int(input())):\n    s = input().strip()\n    l = 0\n    for i in s:\n        if i == 'B' and l != 0:\n            l -= 1\n        else:\n            l += 1\n    print(l)", "for s in [*open(0)][1:]:\n    (q, w, s) = (0, 0, s.replace('\\n', ''))\n    for i in s:\n        if i == 'A':\n            q += 1\n        elif q:\n            q -= 1\n        else:\n            w += 1\n    print(q + w % 2)", "import sys\ninput = sys.stdin.readline\na = int(input())\nfor x in range(a):\n    b = input()\n    t = []\n    h = []\n    n = 0\n    m = 0\n    for y in b:\n        if y == 'B':\n            if n == 0 and m == 0:\n                m += 1\n            elif n > 0:\n                n -= 1\n            elif m > 0:\n                m -= 1\n        if y == 'A':\n            n += 1\n    print(m + n)", "n = int(input())\nlst = []\n\ndef fun(str):\n    lst1 = list(str)\n    lst2 = []\n    for i in range(0, len(lst1)):\n        if lst1[i] == 'B':\n            if lst2 == []:\n                lst2.append(i)\n            else:\n                lst2.pop()\n        else:\n            lst2.append(i)\n    return len(lst2)\nfor i in range(0, n):\n    str1 = input()\n    A = fun(str1)\n    lst.append(A)\nfor item in lst:\n    print(item)", "import sys\nimport math\ninput = sys.stdin.readline\n\ndef algo(s):\n    ans = 0\n    for c in s:\n        if c == 'B' and ans != 0:\n            ans -= 1\n        else:\n            ans += 1\n    return ans\nfor _ in range(int(input())):\n    string = input().strip()\n    res = algo(string)\n    print(res)", "def solution(t: int, arr: [str]) -> [int]:\n    result = []\n    for n in arr:\n        stack = []\n        for j in n:\n            if j == 'A' or len(stack) <= 0:\n                stack.append(j)\n            else:\n                stack.pop()\n        result.append(len(stack))\n    return result\n\ndef main():\n    t = int(input())\n    arr = [input() for i in range(t)]\n    print('\\n'.join([str(i) for i in solution(t, arr)]))\nmain()", "t = int(input())\nbuf = []\nfor _ in range(t):\n    s = input()\n    ans = 0\n    rem = 0\n    for c in s[::-1]:\n        if c == 'B':\n            rem += 1\n        elif rem == 0:\n            ans += 1\n        else:\n            rem -= 1\n    ans += rem % 2\n    buf.append(ans)\nprint('\\n'.join(map(str, buf)))", "import sys\nfrom collections import deque\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\nf_inf = float('inf')\nmod = 10 ** 9 + 7\n\ndef resolve():\n    t = int(input())\n    for _ in range(t):\n        S = input().rstrip()\n        que = deque()\n        for s in S:\n            if que and (que[-1] == 'A' and s == 'B' or (que[-1] == 'B' and s == 'B')):\n                que.pop()\n            else:\n                que.append(s)\n        print(len(que))\nresolve()", "import sys\ntests = int(sys.stdin.readline())\nfor i in range(tests):\n    string = sys.stdin.readline().strip()\n    a_balance = 0\n    b_count = 0\n    lost_count = 0\n    for c in string:\n        if c == 'A':\n            a_balance += 1\n        if c == 'B':\n            if a_balance > 0:\n                a_balance -= 1\n            else:\n                b_count += 1\n    res = a_balance + b_count % 2\n    print(res)", "def main():\n    import sys\n    input = sys.stdin.readline\n    for _ in range(int(input())):\n        s = input().strip()\n        t = []\n        for i in range(len(s) - 1, -1, -1):\n            if s[i] == 'B':\n                t.append(s[i])\n            elif t and t[-1] == 'B':\n                t.pop()\n            else:\n                t.append('A')\n        ans = len(t)\n        i = 0\n        while i < len(t) - 1:\n            if t[i] == 'B' and t[i + 1] == 'B':\n                ans -= 2\n                i += 2\n            else:\n                i += 1\n        print(ans)\n    return 0\nmain()", "import os\nimport sys\ninput = sys.stdin.readline\n\ndef main():\n    num = 0\n    s = input()\n    num = int(s)\n    for _ in range(num):\n        string = input()\n        ab_index = []\n        rs = []\n        for (i, s) in enumerate(string):\n            if s == 'A':\n                ab_index.append(i)\n                rs.append(1)\n            elif s == 'B':\n                if len(ab_index) > 0:\n                    rs[ab_index[-1]] = 0\n                    ab_index.pop()\n                    rs.append(0)\n                else:\n                    ab_index.append(i)\n                    rs.append(1)\n        print(sum(rs))\nmain()", "l = []\nfor _ in range(int(input())):\n    a = list(input())\n    n = len(a)\n    if len(a) == 1:\n        l.append(1)\n    else:\n        sum = 0\n        countb = 0\n        for i in range(n - 1, -1, -1):\n            if a[i] == 'A':\n                if countb == 0:\n                    sum = sum + 1\n                else:\n                    countb = countb - 1\n            else:\n                countb = countb + 1\n        sum = sum + countb % 2\n        l.append(sum)\nfor i in l:\n    print(i)", "import sys\ninput = sys.stdin.readline\n\ndef inp():\n    return int(input())\n\ndef inlt():\n    return list(map(int, input().split()))\n\ndef insr():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef invr():\n    return map(int, input().split())\nfor i in range(inp()):\n    b_count = 0\n    string = str(input())\n    stack = []\n    for letter in string:\n        if letter == 'A':\n            stack.append('A')\n        elif letter == 'B' and stack:\n            stack.pop()\n        elif letter == 'B':\n            b_count += 1\n    print(len(stack) + b_count % 2)", "import sys\ninput = sys.stdin.readlines()\n\ndef ABBB(str):\n    ans = len(str)\n    stack = []\n    for char in str:\n        stack.append(char)\n        while len(stack) > 1 and stack[-1] == 'B':\n            ans -= 2\n            stack.pop()\n            stack.pop()\n    return ans\nnum_test_cases = int(input[0])\ntest_cases = input[1:]\nfor case in test_cases:\n    print(ABBB(case.strip()))", "t = int(input())\nfor k in range(t):\n    s = input()\n    ans = 0\n    for i in s:\n        if i == 'B' and ans != 0:\n            ans -= 1\n        else:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    (s, w) = (input(), 0)\n    for i in s:\n        if i == 'B' and w != 0:\n            w -= 1\n        else:\n            w += 1\n    print(w)", "t = int(input())\nfor i in range(t):\n    s = input()\n    res = 0\n    for i in range(len(s)):\n        if s[i] == 'B' and res != 0:\n            res -= 1\n        else:\n            res += 1\n    print(res)", "for l in range(int(input())):\n    c = 0\n    for i in input():\n        c = c - 1 if i == 'B' and c != 0 else c + 1\n    print(c)", "for t in range(int(input())):\n    s = input()\n    cA = 0\n    for i in s:\n        if i == 'B' and cA != 0:\n            cA -= 1\n        else:\n            cA += 1\n    print(cA)", "for _ in range(int(input())):\n    (s, ans) = (input(), 0)\n    for i in s:\n        ans = ans - 1 if i == 'B' and ans != 0 else ans + 1\n    print(ans)", "t = int(input())\nfor e in range(t):\n    s = input()\n    out = 0\n    for l in s:\n        if out != 0 and l == 'B':\n            out -= 1\n        else:\n            out += 1\n    print(out)", "q = int(input())\nfor i in range(q):\n    w = input()\n    e = 0\n    for i in w:\n        if e > 0 and i == 'B':\n            e -= 1\n        else:\n            e += 1\n    print(e)", "TC = int(input())\nfor tc in range(TC):\n    s = input()\n    ans = 0\n    for i in s:\n        if i == 'B' and ans != 0:\n            ans -= 1\n        else:\n            ans += 1\n    print(ans)", "import sys\n\ndef minp():\n    return sys.stdin.readline().strip()\n\ndef mint():\n    return int(minp())\n\ndef mints():\n    return map(int, minp().split())\n\ndef solve():\n    l = []\n    for c in minp():\n        l.append(c)\n        while len(l) > 1 and l[-1] == 'B':\n            l.pop()\n            l.pop()\n    print(len(l))\nfor i in range(mint()):\n    solve()", "import sys\nt = int(input())\nfor i in range(t):\n    s = list(sys.stdin.readline().strip())\n    n = len(s)\n    a = 0\n    b = 0\n    for j in range(n):\n        if s[j] == 'A':\n            a = a + 1\n        elif a > 0:\n            a = a - 1\n        else:\n            b = b + 1\n    b = b % 2\n    print(a + b)", "import sys\nt = int(sys.stdin.readline().strip())\nfor j in range(t):\n    q = []\n    ans = 0\n    s = sys.stdin.readline().strip()\n    for i in s:\n        if len(q) == 0:\n            q.append(i)\n        elif q[-1] == 'A' and i == 'B':\n            q.pop(-1)\n            ans += 2\n        elif q[-1] == 'B' and i == 'B':\n            q.pop(-1)\n            ans += 2\n        else:\n            q.append(i)\n    print(len(s) - ans)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    count = 0\n    for c in s:\n        if c == 'A':\n            count += 1\n        elif count == 0:\n            count += 1\n        else:\n            count -= 1\n    print(count)", "for _ in range(int(input())):\n    ad = input()\n    i = 0\n    for a in ad:\n        if a == 'B' and i != 0:\n            i -= 1\n        else:\n            i += 1\n    print(i)", "def solve(s):\n    not_destroyed = 1\n    for i in range(1, len(s)):\n        if s[i] == 'B':\n            if not_destroyed == 0:\n                not_destroyed = 1\n                continue\n            not_destroyed = max(not_destroyed - 1, 0)\n        else:\n            not_destroyed += 1\n    print(not_destroyed)\nt = int(input())\nfor test in range(t):\n    solve(input())\n\ndef q_1360_C():\n\n    def solve(n, nums):\n        evens = 0\n        odds = 0\n        for n in nums:\n            if n % 2 == 0:\n                evens += 1\n            else:\n                odds += 1\n        if evens % 2 == 0 and odds % 2 == 0:\n            print('YES')\n            return\n        if evens % 2 != odds % 2:\n            print('NO')\n            return\n        nums = sorted(nums)\n        for i in range(len(nums) - 1):\n            if abs(nums[i] - nums[i + 1]) == 1:\n                print('YES')\n                return\n        print('NO')\n    t = int(input())\n    for test in range(t):\n        solve(n=int(input()), nums=[int(w) for w in input().split()])", "t = int(input())\nfor i in range(t):\n    n = input()\n    k = 0\n    for j in n:\n        if j == 'B' and k != 0:\n            k -= 1\n        else:\n            k += 1\n    print(k)", "TC = int(input())\nfor tc in range(TC):\n    s = input()\n    ans = 0\n    for i in s:\n        if i == 'B' and ans != 0:\n            ans -= 1\n        else:\n            ans += 1\n    print(ans)", "import sys\nimport heapq\n\nclass Solution:\n\n    def process(self, S):\n        n = len(S)\n        stack = []\n        for i in range(n):\n            skip = 0\n            if stack:\n                if S[i] != 'A':\n                    stack.pop()\n                    skip = 1\n                    while len(stack) > 2:\n                        if stack[-1] != 'A':\n                            stack.pop()\n                            stack.pop()\n                        else:\n                            break\n            if not skip:\n                stack.append(S[i])\n        print(len(stack))\n\ndef main():\n    lines = sys.stdin.readlines()\n    n = int(lines[0])\n    for i in range(1, n + 1):\n        Solution().process(lines[i].strip())\nmain()", "for _ in range(int(input())):\n    s = input()\n    ca = 0\n    for each in s:\n        if not ca or each == 'A':\n            ca += 1\n        else:\n            ca -= 1\n    print(ca)", "for _ in range(int(input())):\n    c = 0\n    for i in input():\n        c = c - 1 if i == 'B' and c != 0 else c + 1\n    print(c)", "for _ in range(int(input())):\n    l = input()\n    a = 0\n    for i in l:\n        if i == 'B' and a != 0:\n            a -= 1\n        else:\n            a += 1\n    print(a)", "t = int(input())\nfor _ in range(t):\n    str = input()\n    count = 0\n    for s in str:\n        if s == 'A' or not count:\n            count += 1\n        else:\n            count -= 1\n    print(count)", "for _ in range(int(input())):\n    c = 0\n    for i in input():\n        c = c - 1 if i == 'B' and c != 0 else c + 1\n    print(c)", "for _ in range(int(input())):\n    ad = input()\n    i = 0\n    for a in ad:\n        if a == 'B' and i != 0:\n            i -= 1\n        else:\n            i += 1\n    print(i)", "tc = int(input())\nfor t in range(tc):\n    s = input()\n    count = 0\n    for i in s:\n        if i == 'A' or count == 0:\n            count = count + 1\n        else:\n            count = count - 1\n    print(count)", "for _ in range(int(input())):\n    st = input()\n    ans = 0\n    for i in st:\n        if i == 'B' and ans != 0:\n            ans -= 1\n        else:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    st = input()\n    ans = 0\n    for i in st:\n        if i == 'B' and ans != 0:\n            ans -= 1\n        else:\n            ans += 1\n    print(ans)", "n = int(input())\nfor i in range(n):\n    s = input()\n    stack = []\n    for letter in s:\n        if len(stack) > 0:\n            if letter == 'B':\n                stack.pop()\n            else:\n                stack.append(letter)\n        else:\n            stack.append(letter)\n    print(len(stack))", "n = int(input())\nfor i in range(n):\n    s = input()\n    stack = []\n    for letter in s:\n        if len(stack) > 0:\n            if letter == 'B':\n                stack.pop()\n            else:\n                stack.append(letter)\n        else:\n            stack.append(letter)\n    print(len(stack))", "t = int(input())\nfor _ in range(t):\n    s = input()\n    a = 0\n    for i in range(len(s)):\n        if s[i] == 'B' and a != 0:\n            a -= 1\n        else:\n            a += 1\n    print(a)", "for _ in range(int(input())):\n    (s, ans) = (input(), 0)\n    for i in s:\n        if i == 'B' and ans != 0:\n            ans -= 1\n        else:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    (a, b) = (0, 0)\n    for i in s:\n        if i == 'A':\n            a += 1\n        elif a:\n            a -= 1\n        elif b:\n            b -= 1\n        else:\n            b += 1\n    print(a + b)", "for i in range(int(input())):\n    s = input()\n    ans = 0\n    for j in s:\n        if j == 'B' and ans != 0:\n            ans -= 1\n        else:\n            ans += 1\n    print(ans)", "TC = int(input())\nfor tc in range(TC):\n    s = input()\n    ans = 0\n    for i in s:\n        if i == 'B' and ans != 0:\n            ans -= 1\n        else:\n            ans += 1\n    print(ans)", "test_case = int(input())\nfor i in range(test_case):\n    str1 = input()\n    ans = 0\n    for s in str1:\n        if s == 'B' and ans != 0:\n            ans -= 1\n        else:\n            ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    str = input()\n    result = 0\n    for c in str:\n        if c == 'B' and result != 0:\n            result -= 1\n        else:\n            result += 1\n    print(result)", "for _ in range(int(input())):\n    c = 0\n    for i in input():\n        c = c - 1 if i == 'B' and c != 0 else c + 1\n    print(c)", "n = int(input())\nfor _ in range(n):\n    line = input()\n    res = 0\n    for c in line:\n        if c == 'B' and res > 0:\n            res -= 1\n        else:\n            res += 1\n    print(res)", "TC = int(input())\nfor tc in range(TC):\n    s = input()\n    ans = 0\n    for i in s:\n        if i == 'B' and ans != 0:\n            ans -= 1\n        else:\n            ans += 1\n    print(ans)", "TC = int(input())\nfor tc in range(TC):\n    s = input()\n    ans = 0\n    for i in s:\n        if i == 'B' and ans != 0:\n            ans -= 1\n        else:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    l = list(input())\n    c = 0\n    for x in l:\n        if x == 'B' and c != 0:\n            c -= 1\n        else:\n            c += 1\n    print(c)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    count = 0\n    for c in s:\n        if c == 'A':\n            count += 1\n        elif count == 0:\n            count += 1\n        else:\n            count -= 1\n    print(count)", "for _ in range(int(input())):\n    string = input()\n    ans = 0\n    for i in string:\n        if i == 'B' and ans != 0:\n            ans -= 1\n        else:\n            ans += 1\n    print(ans)", "TC = int(input())\nfor tc in range(TC):\n    s = input()\n    ans = 0\n    for i in s:\n        if i == 'B' and ans != 0:\n            ans -= 1\n        else:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    a = input()\n    c = 0\n    for i in a:\n        if i == 'B' and c > 0:\n            c -= 1\n        else:\n            c += 1\n    print(c)", "for _ in range(int(input())):\n    s = input()\n    ans = 0\n    for i in s:\n        if i == 'B' and ans != 0:\n            ans -= 1\n        else:\n            ans += 1\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n    a = b = 0\n    for i in s:\n        if i == 'A':\n            a += 1\n        elif i == 'B':\n            if a > 0:\n                a -= 1\n            elif a == 0:\n                b += 1\n        b %= 2\n    print(a + b)", "t = int(input())\nfor i in range(t):\n    s = input()\n    stack = []\n    for j in s:\n        if j == 'B' and len(stack) > 0:\n            stack.pop()\n        else:\n            stack.append(j)\n    print(len(stack))", "t = int(input())\nwhile t:\n    s = input()\n    ans = []\n    for val in s:\n        if len(ans) > 0 and val == 'B':\n            ans.pop()\n        else:\n            ans.append(val)\n    print(len(ans))\n    t -= 1", "tests = int(input())\nfor _ in range(tests):\n    s = input()\n    res = 0\n    q = []\n    for c in s:\n        if not q or c == 'A':\n            q.append(c)\n        elif q:\n            res += 2\n            del q[-1]\n        else:\n            q.append(c)\n    print(len(s) - res)", "TC = int(input())\nfor tc in range(TC):\n    s = input()\n    ans = 0\n    for i in s:\n        if i == 'B' and ans != 0:\n            ans -= 1\n        else:\n            ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    stack = []\n    s = input()\n    for letter in s:\n        if letter == 'B':\n            if len(stack) != 0:\n                stack.pop()\n            else:\n                stack.append('B')\n        else:\n            stack.append('A')\n    print(len(stack))", "import os, sys, io, math\nfrom tokenize import Triple\nfrom array import array\nfrom math import *\nI = lambda : [*map(int, sys.stdin.readline().split())]\nIS = lambda : input()\nIN = lambda : int(input())\nIF = lambda : float(input())\nfor _ in range(IN()):\n    s = IS()\n    res = 0\n    for i in s:\n        if i == 'B' and res != 0:\n            res -= 1\n        else:\n            res += 1\n    print(res)", "n = int(input())\nfor k in range(n):\n    c = 0\n    a = input()\n    for i in range(len(a)):\n        if c != 0 and a[i] == 'B':\n            c -= 1\n        else:\n            c += 1\n    print(c)", "for l in range(int(input())):\n    c = 0\n    for i in input():\n        c = c - 1 if i == 'B' and c != 0 else c + 1\n    print(c)", "from sys import stdin, stdout\nimport math, bisect\nfrom collections import Counter, deque, defaultdict\nL = lambda : list(map(int, stdin.readline().strip().split()))\nM = lambda : map(int, stdin.readline().strip().split())\nI = lambda : int(stdin.readline().strip())\nS = lambda : stdin.readline().strip()\nC = lambda : stdin.readline().strip().split()\n\ndef pr(a):\n    return ' '.join(list(map(str, a)))\n\ndef solve():\n    s = S()\n    a = []\n    for i in range(len(s)):\n        if a and (a[-1] + s[i] == 'AB' or a[-1] + s[i] == 'BB'):\n            a.pop()\n        else:\n            a += [s[i]]\n    print(len(a))\nfor _ in range(I()):\n    solve()", "for i in range(int(input())):\n    s = input()\n    ca = 0\n    for each in s:\n        if each == 'A':\n            ca += 1\n        elif ca and each == 'B':\n            ca -= 1\n        else:\n            ca += 1\n    print(ca)", "CASES = int(input())\nfor _ in range(CASES):\n    s = input()\n    length = len(s)\n    extra = 0\n    for i in s:\n        if i == 'A':\n            extra += 1\n        elif i == 'B' and extra != 0:\n            length -= 2\n            extra -= 1\n        else:\n            extra += 1\n    print(extra)", "n = int(input())\nfor i in range(0, n):\n    ch = input()\n    c = 0\n    for i in ch:\n        if i == 'B' and c != 0:\n            c -= 1\n        else:\n            c = c + 1\n    print(c)", "t = int(input())\nwhile t > 0:\n    s = str(input())\n    ans = 0\n    for i in s:\n        if i == 'B' and ans != 0:\n            ans = ans - 1\n        else:\n            ans = ans + 1\n    print(ans)\n    t = t - 1", "import math\nfor _ in range(int(input())):\n    s = input()\n    cnt = 0\n    for i in s:\n        if i == 'B' and cnt != 0:\n            cnt -= 1\n        else:\n            cnt += 1\n    print(cnt)", "TC = int(input())\nfor tc in range(TC):\n    s = input()\n    ans = 0\n    for i in s:\n        if i == 'B' and ans != 0:\n            ans -= 1\n        else:\n            ans += 1\n    print(ans)", "for i in range(int(input())):\n    s = input()\n    (x, y) = (0, 0)\n    for j in range(len(s)):\n        if s[j] == 'A':\n            x += 1\n        elif x:\n            x -= 1\n        elif y:\n            y -= 1\n        else:\n            y += 1\n    print(x + y)", "t = int(input())\nfor _ in range(t):\n    s = input()\n    st = []\n    for i in s:\n        if i == 'A':\n            st.append('A')\n        elif len(st):\n            st.pop(-1)\n        else:\n            st.append('B')\n    print(len(st))", "from collections import deque\nfor t in range(int(input())):\n    S = input()\n    q = deque(S[0])\n    for i in range(1, len(S)):\n        if S[i] == 'A':\n            q.append('A')\n        elif len(q) > 0:\n            q.pop()\n        else:\n            q.append('B')\n    print(len(q))", "quant_testes = int(input())\nfor c in range(quant_testes):\n    entrada = input()\n    ordem = []\n    for char in entrada:\n        if ordem == []:\n            ordem.append(char)\n        elif ordem[-1] == 'A' and char == 'B':\n            ordem.pop()\n        elif ordem[-1] == 'B' and char == 'B':\n            ordem.pop()\n        else:\n            ordem.append(char)\n    print(len(ordem))", "T = int(input())\nfor t in range(T):\n    s = list(input())\n    count = 0\n    for i in range(len(s)):\n        if s[i] == 'B' and count != 0:\n            count = count - 1\n        else:\n            count = count + 1\n    print(count)", "TC = int(input())\nfor tc in range(TC):\n    s = input()\n    ans = 0\n    for i in s:\n        if i == 'B' and ans != 0:\n            ans -= 1\n        else:\n            ans += 1\n    print(ans)", "N = int(input())\nfor _ in range(N):\n    s = input()\n    ans = 0\n    for i in s:\n        if i == 'B' and ans != 0:\n            ans -= 1\n        else:\n            ans += 1\n    print(ans)", "n = int(input())\nfor j in range(n):\n    s = input()\n    ans = 0\n    for i in s:\n        if i == 'B' and ans != 0:\n            ans -= 1\n        else:\n            ans += 1\n    print(ans)", "t = int(input())\nfor i in range(t):\n    k = 0\n    s = input()\n    for j in range(len(s)):\n        if k > 0 and s[j] == 'B':\n            k -= 1\n        else:\n            k += 1\n    print(k)", "TC = int(input())\nfor tc in range(TC):\n    s = input()\n    ans = 0\n    for i in s:\n        if i == 'B' and ans != 0:\n            ans -= 1\n        else:\n            ans += 1\n    print(ans)", "TC = int(input())\nfor tc in range(TC):\n    s = input()\n    ans = 0\n    for i in s:\n        if i == 'B' and ans != 0:\n            ans -= 1\n        else:\n            ans += 1\n    print(ans)", "def solve(s):\n    countb = 0\n    counta = 0\n    lasta = 0\n    first = True\n    for c in s:\n        if c == 'A':\n            lasta = counta\n            counta += 1\n            first = False\n        elif first:\n            countb += 1\n        else:\n            lasta = counta\n            counta -= 1\n            if lasta == 1 and counta == 0:\n                first = True\n    if counta > 0:\n        return countb % 2 + counta\n    else:\n        return (countb - counta) % 2\nt = int(input())\nfor i in range(t):\n    s = input()\n    print(solve(s))", "for _ in range(int(input())):\n    s = input()\n    chars = 0\n    for i in s:\n        if i == 'B' and chars != 0:\n            chars -= 1\n        else:\n            chars += 1\n    print(chars)", "CASES = int(input())\nfor _ in range(CASES):\n    s = input()\n    length = len(s)\n    extra = 0\n    for i in s:\n        if i == 'A':\n            extra += 1\n        elif i == 'B' and extra != 0:\n            length -= 2\n            extra -= 1\n        else:\n            extra += 1\n    print(length)", "for _ in range(int(input())):\n    n = input()\n    count = 0\n    for i in n:\n        if i == 'B' and count != 0:\n            count = count - 1\n        else:\n            count = count + 1\n    print(count)"]