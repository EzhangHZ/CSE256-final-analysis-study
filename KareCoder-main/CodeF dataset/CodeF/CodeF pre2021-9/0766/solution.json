["n = int(input())\nm = [0] * 4\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    a %= 4\n    b %= 4\n    if a == 0 and b == 0:\n        m[0] += 1\n    elif a == 0 and b == 2:\n        m[1] += 1\n    elif a == 2 and b == 0:\n        m[2] += 1\n    else:\n        m[3] += 1\nans = 0\nfor i in range(4):\n    for j in range(4):\n        if i == j:\n            ans += m[i] * (m[i] - 1) * (m[i] - 2) // 6\n        else:\n            ans += m[i] * (m[i] - 1) // 2 * m[j]\nprint(ans)", "n = int(input())\nnum = [0, 0, 0, 0]\nfor _ in range(n):\n    (x, y) = map(int, input().split())\n    num[bool(x & 2) + (y & 2)] += 1\nprint(n * (n - 1) * (n - 2) // 6 - num[0] * num[1] * num[2] - num[0] * num[1] * num[3] - num[0] * num[2] * num[3] - num[1] * num[2] * num[3])", "n = int(input())\nnum = [0, 0, 0, 0]\nfor _ in range(n):\n    (x, y) = map(int, input().split())\n    num[bool(x & 2) + (y & 2)] += 1\nprint(n * (n - 1) * (n - 2) // 6 - num[0] * num[1] * num[2] - num[0] * num[1] * num[3] - num[0] * num[2] * num[3] - num[1] * num[2] * num[3])", "from collections import defaultdict\n\ndef c2(x):\n    return x * (x - 1) // 2\n\ndef c3(x):\n    return x * (x - 1) * (x - 2) // 6\nwhile True:\n    try:\n        counts = defaultdict(int)\n        n = int(input().strip())\n        for _ in range(n):\n            (x, y) = map(int, input().strip().split())\n            counts[x % 4, y % 4] += 1\n        ans = c3(counts[0, 0]) + c3(counts[0, 2]) + c3(counts[2, 0]) + c3(counts[2, 2])\n        ans += c2(counts[0, 0]) * (n - counts[0, 0]) + c2(counts[0, 2]) * (n - counts[0, 2]) + c2(counts[2, 0]) * (n - counts[2, 0]) + c2(counts[2, 2]) * (n - counts[2, 2])\n        print(ans)\n    except EOFError:\n        break", "n = int(input())\nnum = [0, 0, 0, 0]\nfor _ in range(n):\n    (x, y) = map(int, input().split())\n    num[bool(x & 2) + (y & 2)] += 1\nprint(n * (n - 1) * (n - 2) // 6 - num[0] * num[1] * num[2] - num[0] * num[1] * num[3] - num[0] * num[2] * num[3] - num[1] * num[2] * num[3])"]