["import array\nimport collections\nimport itertools\nimport sys\nimport time\nMOD = 998244353\n\ndef main():\n    st = time.time()\n    (n, k) = list(map(int, input().split()))\n    all_input = list(map(int, sys.stdin.read().split()))\n    print('Read', time.time() - st, file=sys.stderr)\n    rev = array.array('L', [1] * (n + 1))\n    for i in range(2, n + 1):\n        (quot, rem) = divmod(MOD, i)\n        rev[i] = -quot * rev[rem] % MOD\n    c_nk = array.array('L', [0] * (n + 1))\n    c_nk[k] = 1\n    for i in range(k + 1, n + 1):\n        c_nk[i] = c_nk[i - 1] * i * rev[i - k] % MOD\n    print('Binom', time.time() - st, file=sys.stderr)\n    events = collections.Counter(sorted(itertools.chain((pos * 2 for pos in all_input[::2]), (pos * 2 + 1 for pos in all_input[1::2]))))\n    print('Sort', time.time() - st, file=sys.stderr)\n    cnt = 0\n    res = 0\n    for (typ, grp_cnt) in events.items():\n        if typ % 2 == 0:\n            res -= c_nk[cnt]\n            cnt += grp_cnt\n            res += c_nk[cnt]\n        else:\n            cnt -= grp_cnt\n    print('Calc', time.time() - st, file=sys.stderr)\n    print(res % MOD)\nmain()", "import math\nm = 998244353\n(n, k) = map(int, input().split())\nfact = [1]\nfor i in range(1, n + 1):\n    fact.append(fact[-1] * i % m)\nifactn = pow(fact[-1], m - 2, m)\nifact = [ifactn] * (n + 1)\nfor i in range(n - 1, -1, -1):\n    ifact[i] = ifact[i + 1] * (i + 1) % m\nchoose = []\nfor i in range(k - 1, n + 1):\n    choose.append(fact[i] * ifact[k - 1] % m * ifact[i - k + 1] % m)\nevent = []\nfor i in range(n):\n    inp = input().split()\n    event.append(int(inp[0]) * 2)\n    event.append(int(inp[1]) * 2 + 1)\nevent.sort()\nval = 0\ncurr = 0\nfor e in event:\n    if e % 2 == 0:\n        curr += 1\n    else:\n        if curr >= k:\n            val = (val + choose[curr - k]) % m\n        curr -= 1\nprint(val)", "import sys\nz = sys.stdin.readline\nM = 998244353\n(n, k) = map(int, z().split())\ns = []\ne = []\nv = [1]\nv2 = []\nfor i in range(1, n + 1):\n    v.append(v[-1] * i % M)\nv2.append(pow(v[-1], M - 2, M))\nfor i in range(n):\n    v2.append(v2[-1] * (n - i) % M)\nv2 = v2[::-1]\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    s.append(a)\n    e.append(b)\ns.sort()\ne.sort()\ns.append(2 * M)\ne.append(2 * M)\nsi = ei = t = r = 0\nwhile si + ei < n + n:\n    while si < n and s[si] <= e[ei]:\n        si += 1\n        t += 1\n    while ei < n and e[ei] < s[si]:\n        ei += 1\n        t -= 1\n        if t >= k - 1:\n            r = (r + v[t] * v2[k - 1] * v2[t - k + 1]) % M\nprint(r)", "import math\nm = 998244353\n(n, k) = map(int, input().split())\nfact = [1]\nfor i in range(1, n + 1):\n    fact.append(fact[-1] * i % m)\nifactn = pow(fact[-1], m - 2, m)\nifact = [ifactn] * (n + 1)\nfor i in range(n - 1, -1, -1):\n    ifact[i] = ifact[i + 1] * (i + 1) % m\nchoose = []\nfor i in range(k - 1, n + 1):\n    choose.append(fact[i] * ifact[k - 1] % m * ifact[i - k + 1] % m)\nevent = []\nfor i in range(n):\n    inp = input().split()\n    event.append(int(inp[0]) * 2)\n    event.append(int(inp[1]) * 2 + 1)\nevent.sort()\nval = 0\ncurr = 0\nfor e in event:\n    if e % 2 == 0:\n        curr += 1\n    else:\n        if curr >= k:\n            val = (val + choose[curr - k]) % m\n        curr -= 1\nprint(val)", "import math\nm = 998244353\n(n, k) = map(int, input().split())\nfact = [1]\nfor i in range(1, n + 1):\n    fact.append(fact[-1] * i % m)\nifactn = pow(fact[-1], m - 2, m)\nifact = [ifactn] * (n + 1)\nfor i in range(n - 1, -1, -1):\n    ifact[i] = ifact[i + 1] * (i + 1) % m\nchoose = []\nfor i in range(k - 1, n + 1):\n    choose.append(fact[i] * ifact[k - 1] % m * ifact[i - k + 1] % m)\nevent = []\nfor i in range(n):\n    inp = input().split()\n    event.append(int(inp[0]) * 2)\n    event.append(int(inp[1]) * 2 + 1)\nevent.sort()\nval = 0\ncurr = 0\nfor e in event:\n    if e % 2 == 0:\n        curr += 1\n    else:\n        if curr >= k:\n            val = (val + choose[curr - k]) % m\n        curr -= 1\nprint(val)", "import sys\nz = sys.stdin.readline\nM = 998244353\n(n, k) = map(int, z().split())\ns = []\ne = []\nv = [1]\nv2 = []\nfor i in range(1, n + 1):\n    v.append(v[-1] * i % M)\nv2.append(pow(v[-1], M - 2, M))\nfor i in range(n):\n    v2.append(v2[-1] * (n - i) % M)\nv2 = v2[::-1]\nfor i in range(n):\n    (a, b) = map(int, input().split())\n    s.append(a)\n    e.append(b)\ns.sort()\ne.sort()\ns.append(2 * M)\ne.append(2 * M)\nsi = ei = t = r = 0\nwhile si + ei < n + n:\n    while si < n and s[si] <= e[ei]:\n        si += 1\n        t += 1\n    while ei < n and e[ei] < s[si]:\n        ei += 1\n        t -= 1\n        if t >= k - 1:\n            r = (r + v[t] * v2[k - 1] * v2[t - k + 1]) % M\nprint(r)", "import array\nimport collections\nimport itertools\nimport sys\nimport time\nMOD = 998244353\n\ndef main():\n    st = time.time()\n    (n, k) = list(map(int, input().split()))\n    all_input = array.array('L', map(int, sys.stdin.read().split()))\n    print('Read', time.time() - st, file=sys.stderr)\n    rev = array.array('L', [1] * (n + 1))\n    for i in range(2, n + 1):\n        (quot, rem) = divmod(MOD, i)\n        rev[i] = -quot * rev[rem] % MOD\n    c_nk = array.array('L', [0] * (n + 1))\n    c_nk[k] = 1\n    for i in range(k + 1, n + 1):\n        c_nk[i] = c_nk[i - 1] * i * rev[i - k] % MOD\n    print('Binom', time.time() - st, file=sys.stderr)\n    events = collections.Counter(sorted(itertools.chain((pos * 2 for pos in itertools.islice(all_input, None, None, 2)), (pos * 2 + 1 for pos in itertools.islice(all_input, 1, None, 2)))))\n    print('Sort', time.time() - st, file=sys.stderr)\n    cnt = 0\n    res = 0\n    for (typ, grp_cnt) in sorted(events.items()):\n        if typ % 2 == 0:\n            res -= c_nk[cnt]\n            cnt += grp_cnt\n            res += c_nk[cnt]\n        else:\n            cnt -= grp_cnt\n    print('Calc', time.time() - st, file=sys.stderr)\n    print(res % MOD)\nmain()", "import array\nimport itertools\nimport sys\nimport time\nMOD = 998244353\n\ndef main():\n    st = time.time()\n    (n, k) = list(map(int, input().split()))\n    all_input = array.array('L', map(int, sys.stdin.read().split()))\n    (l, r) = (all_input[::2], all_input[1::2])\n    print('Read', time.time() - st, file=sys.stderr)\n    fact = array.array('L', [1] * (n + 1))\n    rev = array.array('L', [1] * (n + 1))\n    r_fact = array.array('L', [1] * (n + 1))\n    for i in range(2, n + 1):\n        fact[i] = fact[i - 1] * i % MOD\n        rev[i] = (MOD - MOD // i * rev[MOD % i] % MOD) % MOD\n        r_fact[i] = r_fact[i - 1] * rev[i] % MOD\n    print('Fact', time.time() - st, file=sys.stderr)\n    sorted_events = sorted(itertools.chain((pos * 2 for pos in l), (pos * 2 + 1 for pos in r)))\n    print('Sort', time.time() - st, file=sys.stderr)\n    cnt = 0\n    res = 0\n    for (typ, grp) in itertools.groupby(sorted_events):\n        grp_cnt = sum((1 for _ in grp))\n        if typ % 2 == 0:\n            res -= fact[cnt] * r_fact[cnt - k] if cnt >= k else 0\n            cnt += grp_cnt\n            res += fact[cnt] * r_fact[cnt - k] if cnt >= k else 0\n        else:\n            cnt -= grp_cnt\n    print('Calc', time.time() - st, file=sys.stderr)\n    print(res * r_fact[k] % MOD)\nmain()"]