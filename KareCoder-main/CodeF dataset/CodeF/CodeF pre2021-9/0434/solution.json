["from sys import stdin, stdout\nimport sys\nimport math\nimport itertools\nfrom collections import defaultdict\nsys.setrecursionlimit(10 ** 6)\n\ndef main():\n    t = int(stdin.readline().strip())\n    for j in range(1, t + 1):\n        (n, a, b) = map(int, stdin.readline().split())\n        if a == 1:\n            if (n - 1) % b == 0:\n                print('Yes')\n            else:\n                print('No')\n            continue\n        if b == 0:\n            if n % a == 0:\n                print('Yes')\n            else:\n                print('No')\n            continue\n        temp = 1\n        while temp <= n:\n            if (n - temp) % b == 0:\n                print('Yes')\n                break\n            else:\n                temp *= a\n        if temp > n:\n            print('No')\nmain()", "import sys\nimport math as mt\ninput = sys.stdin.readline\n\ndef solution(n, a, b):\n    tmp = 1\n    if a == 1:\n        if (n - 1) % b == 0:\n            return 'Yes'\n        else:\n            return 'No'\n    while tmp <= n:\n        if (n - tmp) % b == 0:\n            return 'Yes'\n        tmp *= a\n    return 'No'\n\ndef main():\n    for _ in range(int(input())):\n        print(solution(*map(int, input().split())))\nmain()", "import sys\ninput = sys.stdin.readline\n\ndef solution(n, a, b):\n    tmp = 1\n    if a == 1:\n        if (n - 1) % b == 0:\n            return 'Yes'\n        else:\n            return 'No'\n    while tmp <= n:\n        if (n - tmp) % b == 0:\n            return 'Yes'\n        tmp *= a\n    return 'No'\n\ndef main():\n    for _ in range(int(input())):\n        print(solution(*map(int, input().split())))\nmain()", "import sys\ninput = sys.stdin.readline\n\ndef print(x, end='\\n'):\n    sys.stdout.write(str(x) + end)\n\ndef get_int():\n    return int(input())\n\ndef get_list_ints():\n    return list(map(int, input().split()))\n\ndef get_char_list():\n    s = input()\n    return list(s[:len(s) - 1])\n\ndef get_tuple_ints():\n    return tuple(map(int, input().split()))\n\ndef print_iterable(p):\n    print(' '.join(map(str, p)))\n\ndef main():\n    t = get_int()\n    for i in range(t):\n        (n, a, b) = get_tuple_ints()\n        if a == 1:\n            if (n - 1) % b == 0:\n                print('Yes')\n            else:\n                print('No')\n        else:\n            t = 1\n            flag = 0\n            while t <= n:\n                if t % b == n % b:\n                    flag = 1\n                    break\n                t = t * a\n            if flag == 1:\n                print('Yes')\n            else:\n                print('No')\nmain()", "from collections import deque\nimport heapq\nfrom math import sqrt\nimport operator\nfrom operator import itemgetter\nimport sys\nimport copy\ninf_var = 0\nif inf_var == 1:\n    inf = open('input.txt', 'r')\nelse:\n    inf = sys.stdin\ninput = inf.readline\n\ndef read_one_int():\n    return int(input().rstrip('\\n'))\n\ndef read_one_float():\n    return float(input().rstrip('\\n'))\n\ndef read_list_of_ints():\n    res = [int(val) for val in input().rstrip('\\n').split(' ')]\n    return res\n\ndef read_str():\n    return input().rstrip()\n\ndef main():\n    tests = read_one_int()\n    for _ in range(tests):\n        (n, a, b) = read_list_of_ints()\n        if n == 1 or b == 1:\n            print('Yes')\n            continue\n        if a == 1:\n            if (n - 1) % b:\n                print('No')\n            else:\n                print('Yes')\n            continue\n        cur_m = 1\n        res = 'No'\n        while cur_m <= n:\n            if n % b == cur_m % b:\n                res = 'Yes'\n                break\n            cur_m *= a\n        print(res)\nmain()", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, a, b) = map(int, input().split())\n    c = 1\n    while c <= n:\n        if (n - c) % b == 0:\n            print('Yes')\n            return\n        if a == 1:\n            break\n        c *= a\n    print('No')\nfor i in range(int(input())):\n    solve()", "from sys import stdin, stdout\nimport sys\nimport math\nimport itertools\nfrom collections import defaultdict\nsys.setrecursionlimit(10 ** 6)\nt = int(stdin.readline().strip())\nfor j in range(1, t + 1):\n    (n, a, b) = map(int, stdin.readline().split())\n    if a == 1:\n        if (n - 1) % b == 0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        t = 1\n        while t <= n:\n            if (n - t) % b == 0:\n                print('Yes')\n                break\n            t = t * a\n        else:\n            print('No')", "list_ans = []\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    s = 1\n    if a == 1:\n        if (n - 1) % b == 0:\n            list_ans.append('Yes')\n        else:\n            list_ans.append('No')\n    else:\n        while s <= n:\n            if (n - s) % b == 0:\n                list_ans.append('Yes')\n                break\n            else:\n                s *= a\n        else:\n            list_ans.append('No')\nprint(*list_ans, sep='\\n')", "from sys import stdin, setrecursionlimit, maxsize\ninput = stdin.readline\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    res = 0\n    if a == 1:\n        if (n - 1) % b == 0:\n            res = 1\n    else:\n        x = 1\n        while x <= n:\n            if x % b == n % b:\n                res = 1\n                break\n            x *= a\n    print('Yes' if res else 'No')", "import sys\n\nclass FastIO:\n\n    def next(self):\n        return sys.stdin.readline().split('\\n')[0]\n\n    def nextint(self):\n        return int(sys.stdin.readline().split('\\n')[0])\n\n    def print(self, d):\n        sys.stdout.write(str(d))\n\n    def println(self, d):\n        sys.stdout.write(str(d) + '\\n')\n\n    def printls(self, d, p):\n        for i in d:\n            sys.stdout.write(str(i) + p)\nsc = FastIO()\nfor _ in range(sc.nextint()):\n    (n, a, b) = map(int, sc.next().split())\n    ans = 'No'\n    i = 1\n    if a == 1:\n        if (n - 1) % b == 0:\n            ans = 'Yes'\n    else:\n        while n >= i:\n            if (n - i) % b == 0:\n                ans = 'Yes'\n                break\n            i = i * a\n    sc.println(ans)", "import sys\ninput = sys.stdin.readline\nT = int(input())\nfor _ in range(T):\n    (n, a, b) = map(int, input().split())\n    flg = False\n    if b == 1:\n        flg = True\n    elif a == 1:\n        if n % b == 1:\n            flg = True\n    else:\n        temp = 1\n        while n >= temp:\n            if n % b == temp % b:\n                flg = True\n                break\n            else:\n                temp *= a\n    if flg:\n        print('Yes')\n    else:\n        print('No')", "import sys\ninput = lambda : sys.stdin.readline().rstrip('\\r\\n')\nfor _ in range(int(input())):\n    (n, a, b) = [int(x) for x in input().split()]\n    if a == 1:\n        if (n - 1) % b == 0:\n            print('Yes')\n        else:\n            print('No')\n        continue\n    f = False\n    curr = 1\n    while curr <= n:\n        if (n - curr) % b == 0:\n            f = True\n            break\n        curr *= a\n    if f:\n        print('Yes')\n    else:\n        print('No')", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    (n, a, b) = map(int, stdin.readline().split())\n    temp = 1\n    flag = False\n    while temp <= n:\n        if (n - temp) % b == 0:\n            flag = True\n            break\n        temp *= a\n        if a == 1:\n            break\n    print('Yes') if flag else print('No')", "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(3 * 10 ** 5)\n\ndef inp():\n    return int(input())\n\ndef st():\n    return input().rstrip('\\n')\n\ndef lis():\n    return list(map(int, input().split()))\n\ndef ma():\n    return map(int, input().split())\nt = inp()\nwhile t:\n    t -= 1\n    (n, a, b) = ma()\n    if a == 1:\n        if (n - 1) % b:\n            print('No')\n        else:\n            print('Yes')\n    else:\n        x = 1\n        s = 'No'\n        while x <= n:\n            if x % b == n % b:\n                s = 'Yes'\n                break\n            x *= a\n        print(s)", "t = int(input())\nans = []\nfor i in range(t):\n    res = False\n    (n, a, b) = map(int, input().split())\n    a_pow = 1\n    if a == 1:\n        ans.append((n - a_pow) % b == 0)\n    else:\n        while a_pow <= n:\n            if (n - a_pow) % b == 0:\n                res = True\n                break\n            a_pow *= a\n        ans.append(res)\nfor r in ans:\n    if r:\n        print('Yes')\n    else:\n        print('No')", "import math\nimport sys\nfrom functools import reduce\n\ndef factors(n):\n    return set(reduce(list.__add__, ([i, n // i] for i in range(1, int(n ** 0.5) + 1) if n % i == 0)))\n\ndef inp():\n    return sys.stdin.readline().strip()\n\ndef map_inp(v_type):\n    return map(v_type, inp().split())\n\ndef list_inp(v_type):\n    return list(map_inp(v_type))\nfor _ in range(int(inp())):\n    (n, a, b) = map_inp(int)\n    if a == 1:\n        if n % b == 1 or b == 1:\n            print('Yes')\n        else:\n            print('No')\n    elif b == 1:\n        print('Yes')\n    elif n % b == 1:\n        print('yes')\n    else:\n        ans = 'No'\n        r = 1\n        while r <= n:\n            if n % b == r % b:\n                ans = 'Yes'\n                break\n            r *= a\n        print(ans)", "t = int(input())\nT = []\nfor i in range(t):\n    T.append(tuple(map(int, input().split(' '))))\nfor testCase in T:\n    (n, a, b) = testCase\n    if a == 1:\n        if (n - 1) % b == 0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        m = 1\n        flag = 0\n        while m <= n:\n            if m % b == n % b:\n                flag = 1\n                break\n            m *= a\n        if flag:\n            print('Yes')\n        else:\n            print('No')", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, a, b) = map(int, input().split())\n    if b == 1:\n        return 'Yes'\n    if a == 1:\n        return 'Yes' if (n - 1) % b == 0 else 'No'\n    cnt = 0\n    while a ** cnt <= n:\n        if a ** cnt % b == n % b:\n            return 'Yes'\n        cnt += 1\n    return 'No'\nfor _ in range(int(input())):\n    print(solve())", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    (n, a, b) = map(int, input().split())\n    if b == 1:\n        return 'Yes'\n    if a == 1:\n        return 'Yes' if (n - 1) % b == 0 else 'No'\n    cnt = 0\n    while a ** cnt <= n:\n        if (n - a ** cnt) % b == 0:\n            return 'Yes'\n        cnt += 1\n    return 'No'\nfor _ in range(int(input())):\n    print(solve())", "import sys\ninput = sys.stdin.readline\nT = int(input())\nfor _ in range(T):\n    (N, A, B) = map(int, input().split())\n    if N == 1 or B == 1:\n        print('Yes')\n        continue\n    if A == 1:\n        print('Yes' if (N - 1) % B == 0 else 'No')\n        continue\n    from collections import defaultdict\n    d = {}\n    a = 1\n    while a <= N:\n        if a % B not in d:\n            d[a % B] = a\n        a *= A\n    if N % B not in d:\n        print('No')\n    else:\n        print('Yes' if d[N % B] <= N else 'No')", "def solve(n, a, b):\n    if a == 1:\n        return 'Yes' if n % b == 1 or b == 1 else ' No'\n    tmp = 1\n    while tmp <= n:\n        if (n - tmp) % b == 0:\n            return 'Yes'\n        tmp *= a\n    return 'No'\nfor t in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    print(solve(n, a, b))", "def void():\n    (n, a, b) = map(int, input().split())\n    if a == 1:\n        if (n - 1) % b == 0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        i = 1\n        valid = False\n        while i <= n:\n            if (n - i) % b == 0:\n                valid = True\n                break\n            i *= a\n        if valid:\n            print('Yes')\n        else:\n            print('No')\nfor i in range(int(input())):\n    void()", "def ggwp(n, a, b):\n    if a == 1:\n        if (n - 1) % b == 0:\n            return 'Yes'\n        else:\n            return 'No'\n    op = 1\n    while op <= n:\n        if op % b == n % b:\n            return 'Yes'\n        op *= a\n    return 'No'\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    print(ggwp(n, a, b))", "def in_set(n, a, b):\n    if a == 1:\n        return n % b == 1 or b == 1\n    x = 1\n    while x <= n:\n        if x % b == n % b:\n            return True\n        x *= a\n    return False\nq = int(input())\nfor i in range(q):\n    (n, a, b) = map(int, input().split())\n    print('Yes' if in_set(n, a, b) else 'No')", "def check(n, a, b):\n    if b == 1:\n        return True\n    if a == 1:\n        return n % b == 1\n    x = 1\n    while x <= n:\n        if x % b == n % b:\n            return True\n        x *= a\n    return False\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        (n, a, b) = [int(word) for word in input().split()]\n        if check(n, a, b):\n            print('Yes')\n        else:\n            print('No')\nmain()", "def solve(n, a, b):\n    if b == 1:\n        return 'Yes'\n    if a == 1:\n        if n % b == 1:\n            return 'Yes'\n        else:\n            return 'No'\n    x = 1\n    while x <= n:\n        if n % b == x % b:\n            return 'Yes'\n        x = x * a\n    return 'No'\nN = int(input())\nfor _ in range(N):\n    a = list(map(int, input().split(' ')))\n    print(solve(a[0], a[1], a[2]))", "t = int(input())\n\ndef solve(n, a, b):\n    if a == 1:\n        if (n - 1) % b == 0:\n            return 'Yes'\n        else:\n            return 'No'\n    ans = 'No'\n    ax = 1\n    while ax <= n:\n        if (n - ax) % b == 0:\n            ans = 'Yes'\n            break\n        ax *= a\n    return ans\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    print(solve(n, a, b))", "def solve():\n    (n, a, b) = map(int, input().split())\n    ap = 1\n    if a == 1 and n == 1:\n        return 'Yes'\n    if a == 1 and (n - 1) % b == 0:\n        return 'Yes'\n    if a == 1 and (n - 1) % b != 0:\n        return 'No'\n    while True:\n        if ap > n:\n            return 'No'\n        rem = n - ap\n        if rem % b == 0:\n            return 'Yes'\n        ap = ap * a\nt = int(input())\nfor _ in range(t):\n    print(solve())", "def prb(n, a, b):\n    if a == 1:\n        if (n - 1) % b == 0:\n            return 'Yes'\n        else:\n            return 'No'\n    t = 1\n    while t <= n:\n        if (n - t) % b == 0:\n            return 'Yes'\n        t *= a\n    return 'No'\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    print(prb(n, a, b))", "t = int(input())\nfor i in range(t):\n    (n, a, b) = map(int, input().split())\n    if b == 1:\n        print('Yes')\n        continue\n    if a == 1:\n        print('Yes' if n % b == 1 else 'No')\n    else:\n        p = 1\n        r = n % b\n        valid = False\n        while p <= n:\n            if r == p % b:\n                valid = True\n                break\n            p = p * a\n        if valid:\n            print('Yes')\n        else:\n            print('No')", "t = int(input())\nfor i in range(t):\n    w = input().split()\n    n = int(w[0])\n    a = int(w[1])\n    b = int(w[2])\n    if a == 1:\n        if (n - 1) % b == 0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        t = 1\n        flag = 0\n        while t <= n:\n            if t % b == n % b:\n                flag = 1\n                break\n            t = t * a\n        if flag == 1:\n            print('Yes')\n        else:\n            print('No')", "import math\nimport heapq\n\ndef solve(n, a, b):\n    if b == 1:\n        return 'Yes'\n    t = 1\n    while t <= n:\n        if t % b == n % b:\n            return 'Yes'\n        if a == 1:\n            break\n        t *= a\n    return 'No'\nT = int(input())\nfor t in range(T):\n    (n, x, y) = list(map(int, input().split()))\n    res = solve(n, x, y)\n    print(res)", "def void():\n    (n, a, b) = map(int, input().split())\n    if a == 1:\n        if (n - 1) % b == 0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        i = 1\n        valid = False\n        while i <= n:\n            if (n - i) % b == 0:\n                valid = True\n                break\n            i *= a\n        if valid:\n            print('Yes')\n        else:\n            print('No')\nfor i in range(int(input())):\n    void()", "def void():\n    (n, a, b) = map(int, input().split())\n    if a == 1:\n        if (n - 1) % b == 0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        i = 1\n        valid = False\n        while i <= n:\n            if (n - i) % b == 0:\n                valid = True\n                break\n            i *= a\n        if valid:\n            print('Yes')\n        else:\n            print('No')\nfor i in range(int(input())):\n    void()", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    m = n % b\n    if a == 1:\n        if (n - 1) % b == 0:\n            print('Yes')\n        else:\n            print('No')\n        continue\n    x = 1\n    while x <= n:\n        if x % b == m:\n            print('Yes')\n            break\n        x *= a\n    else:\n        print('No')", "t = int(input())\nfor j in range(0, t):\n    (n, a, b) = [int(x) for x in input().split()]\n\n    def check(n, a, b):\n        l = 1\n        if a == 1:\n            if (n - 1) % b == 0:\n                return 'Yes'\n            else:\n                return 'No'\n        while n >= l:\n            if (n - l) % b == 0:\n                return 'Yes'\n            l *= a\n        if n < l:\n            return 'No'\n    print(check(n, a, b))", "def solve(x, a, b):\n    if a == 1:\n        if (x - 1) % b == 0:\n            return 'Yes'\n        return 'No'\n    an = 1\n    while an <= x:\n        if (x - an) % b == 0:\n            return 'Yes'\n        an *= a\n    return 'No'\nt = int(input())\nfor i in range(t):\n    (x, a, b) = map(int, input().split())\n    print(solve(x, a, b))", "def pam(n, a, b):\n    if (n - 1) % b == 0:\n        return 'Yes'\n    if a == 1:\n        return 'No'\n    p = 1\n    while p <= n:\n        if (n - p) % b == 0:\n            return 'Yes'\n        p *= a\n    return 'No'\nfor t in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    print(pam(n, a, b))", "t = int(input())\nfor i in range(t):\n    w = input().split()\n    n = int(w[0])\n    a = int(w[1])\n    b = int(w[2])\n    if a == 1:\n        if (n - 1) % b == 0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        t = 1\n        flag = 0\n        while t <= n:\n            if t % b == n % b:\n                flag = 1\n                break\n            t = t * a\n        if flag == 1:\n            print('Yes')\n        else:\n            print('No')", "t = int(input())\nfor i in range(t):\n    w = input().split()\n    n = int(w[0])\n    a = int(w[1])\n    b = int(w[2])\n    if a == 1:\n        if (n - 1) % b == 0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        t = 1\n        flag = 0\n        while t <= n:\n            if t % b == n % b:\n                flag = 1\n                break\n            t = t * a\n        if flag == 1:\n            print('Yes')\n        else:\n            print('No')", "t = int(input())\nfor _ in range(t):\n    (n, a, b) = map(int, input().split())\n    if a == 1:\n        if (n - 1) % b == 0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        t = 1\n        flag = 0\n        while t <= n:\n            if t % b == n % b:\n                flag = 1\n                break\n            t *= a\n        if flag == 1:\n            print('Yes')\n        else:\n            print('No')", "t = int(input())\nfor i in range(t):\n    w = input().split()\n    n = int(w[0])\n    a = int(w[1])\n    b = int(w[2])\n    if a == 1:\n        if (n - 1) % b == 0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        t = 1\n        flag = 0\n        while t <= n:\n            if t % b == n % b:\n                flag = 1\n                break\n            t = t * a\n        if flag == 1:\n            print('Yes')\n        else:\n            print('No')", "t = int(input())\nfor i in range(t):\n    w = input().split()\n    n = int(w[0])\n    a = int(w[1])\n    b = int(w[2])\n    if a == 1:\n        if (n - 1) % b == 0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        t = 1\n        flag = 0\n        while t <= n:\n            if t % b == n % b:\n                flag = 1\n                break\n            t = t * a\n        if flag == 1:\n            print('Yes')\n        else:\n            print('No')", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    if a == 1:\n        if (n - 1) % b == 0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        t = 1\n        while t <= n:\n            if (n - t) % b == 0:\n                print('Yes')\n                break\n            t = t * a\n        else:\n            print('No')", "import sys\n\ndef inp():\n    return sys.stdin.readline().rstrip('\\r\\n')\n\ndef void():\n    (n, a, b) = map(int, input().split())\n    if a == 1:\n        if (n - 1) % b == 0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        i = 1\n        valid = False\n        while i <= n:\n            if (n - i) % b == 0:\n                valid = True\n                break\n            i *= a\n        if valid:\n            print('Yes')\n        else:\n            print('No')\nfor i in range(int(input())):\n    void()", "def solve(n, a, b):\n    if a == 1:\n        if b == 1:\n            return 'Yes'\n        if n % b == 1:\n            return 'Yes'\n        return 'No'\n    cur = 1\n    while cur <= n:\n        left = n - cur\n        if left % b == 0:\n            return 'Yes'\n        cur *= a\n    return 'No'\nfor case in range(int(input())):\n    (n, a, b) = list(map(int, input().split()))\n    ans = solve(n, a, b)\n    print(ans)", "def check(n, a, b):\n    end = n\n    if a == 1:\n        if n % b == 1 % b:\n            return 'Yes'\n        else:\n            return 'No'\n    z = 1\n    while z <= end:\n        if n % b == z % b:\n            return 'Yes'\n            break\n        else:\n            z = z * a\n    return 'No'\nt = int(input())\nfor i in range(t):\n    (n, a, b) = map(int, input().split())\n    print(check(n, a, b))", "n = int(input())\n\ndef check(n, a, b):\n    if a == 1:\n        if (n - 1) % b == 0:\n            return 'Yes'\n        else:\n            return 'No'\n    if b == 1:\n        return 'Yes'\n    x = 1\n    while x <= n:\n        if (n - x) % b == 0:\n            return 'Yes'\n        x *= a\n    return 'No'\nfor m in range(n):\n    l = list(map(int, input().split()))\n    (n, a, b) = (l[0], l[1], l[2])\n    print(check(n, a, b))", "t = int(input())\nfor i in range(t):\n    w = input().split()\n    n = int(w[0])\n    a = int(w[1])\n    b = int(w[2])\n    if a == 1:\n        if (n - 1) % b == 0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        t = 1\n        flag = 0\n        while t <= n:\n            if t % b == n % b:\n                flag = 1\n                break\n            t = t * a\n        if flag == 1:\n            print('Yes')\n        else:\n            print('No')", "t = int(input())\nfor i in range(t):\n    w = input().split()\n    n = int(w[0])\n    a = int(w[1])\n    b = int(w[2])\n    if a == 1:\n        if (n - 1) % b == 0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        t = 1\n        flag = 0\n        while t <= n:\n            if t % b == n % b:\n                flag = 1\n                break\n            t = t * a\n        if flag == 1:\n            print('Yes')\n        else:\n            print('No')", "t = int(input())\nfor i in range(t):\n    w = input().split()\n    n = int(w[0])\n    a = int(w[1])\n    b = int(w[2])\n    if a == 1:\n        if (n - 1) % b == 0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        t = 1\n        flag = 0\n        while t <= n:\n            if (n - t) % b == 0:\n                flag = 1\n                break\n            t = t * a\n        if flag == 1:\n            print('Yes')\n        else:\n            print('No')", "for _ in range(int(input())):\n    (s, a, b) = map(int, input().split())\n    cnt = 1\n    while True:\n        if cnt > s:\n            print('No')\n            break\n        if (s - cnt) % b == 0:\n            print('Yes')\n            break\n        cnt *= a\n        if a == 1:\n            print('No')\n            break", "t = int(input())\nfor i in range(t):\n    w = input().split()\n    n = int(w[0])\n    a = int(w[1])\n    b = int(w[2])\n    if a == 1:\n        if (n - 1) % b == 0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        t = 1\n        flag = 0\n        while t <= n:\n            if t % b == n % b:\n                flag = 1\n                break\n            t = t * a\n        if flag == 1:\n            print('Yes')\n        else:\n            print('No')", "t = int(input())\nfor i in range(t):\n    w = input().split()\n    n = int(w[0])\n    a = int(w[1])\n    b = int(w[2])\n    if a == 1:\n        if (n - 1) % b == 0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        t = 1\n        flag = 0\n        while t <= n:\n            if t % b == n % b:\n                flag = 1\n                break\n            t = t * a\n        if flag == 1:\n            print('Yes')\n        else:\n            print('No')", "t = int(input())\nfor i in range(t):\n    w = input().split()\n    n = int(w[0])\n    a = int(w[1])\n    b = int(w[2])\n    if a == 1:\n        if (n - 1) % b == 0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        t = 1\n        flag = 0\n        while t <= n:\n            if t % b == n % b:\n                flag = 1\n                break\n            t = t * a\n        if flag == 1:\n            print('Yes')\n        else:\n            print('No')", "import functools\nt = int(input())\n\ndef deal(mem, n, a, b):\n    print(n)\n    if n in mem:\n        return mem[n]\n    if n == 1 or b == 1 or (n - 1) % b == 0:\n        return True\n    if a == 1:\n        return False\n    res = False\n    if n % a == 0:\n        res |= deal(mem, n // a, a, b)\n    if n > b:\n        res |= deal(mem, n - b, a, b)\n    mem[n] = res\n    return res\nfor i in range(t):\n    items = input().split(' ')\n    n = int(items[0])\n    a = int(items[1])\n    b = int(items[2])\n    if a == 1:\n        if (n - 1) % b == 0:\n            print('Yes')\n        else:\n            print('No')\n        continue\n    else:\n        x = 1\n        while 1:\n            if (n - x) % b == 0:\n                print('Yes')\n                break\n            x *= a\n            if x > n:\n                print('No')\n                break\n        continue", "t = int(input())\nfor i in range(t):\n    w = input().split()\n    n = int(w[0])\n    a = int(w[1])\n    b = int(w[2])\n    if a == 1:\n        if (n - 1) % b == 0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        t = 1\n        flag = 0\n        while t <= n:\n            if t % b == n % b:\n                flag = 1\n                break\n            t = t * a\n        if flag == 1:\n            print('Yes')\n        else:\n            print('No')", "t = int(input())\nfor i in range(t):\n    w = input().split()\n    n = int(w[0])\n    a = int(w[1])\n    b = int(w[2])\n    if a == 1:\n        if (n - 1) % b == 0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        t = 1\n        flag = 0\n        while t <= n:\n            if t % b == n % b:\n                flag = 1\n                break\n            t = t * a\n        if flag == 1:\n            print('Yes')\n        else:\n            print('No')", "t = int(input())\nfor i in range(t):\n    w = input().split()\n    n = int(w[0])\n    a = int(w[1])\n    b = int(w[2])\n    if a == 1:\n        if (n - 1) % b == 0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        t = 1\n        flag = 0\n        while t <= n:\n            if t % b == n % b:\n                flag = 1\n                break\n            t = t * a\n        if flag == 1:\n            print('Yes')\n        else:\n            print('No')", "def check(n, a, b):\n    end = n\n    if a == 1:\n        if (n - 1) % b == 0:\n            return 'Yes'\n        else:\n            return 'No'\n    z = 1\n    while z <= n:\n        if (n - z) % b == 0:\n            return 'Yes'\n            break\n        z = z * a\n    return 'No'\nt = int(input())\nfor i in range(t):\n    (n, a, b) = map(int, input().split())\n    print(check(n, a, b))", "def check(n, a, b):\n    end = n\n    if a == 1:\n        if (n - 1) % b == 0:\n            return 'Yes'\n        else:\n            return 'No'\n    z = 1\n    while z <= n:\n        if (n - z) % b == 0:\n            return 'Yes'\n            break\n        else:\n            z = z * a\n    return 'No'\nt = int(input())\nfor i in range(t):\n    (n, a, b) = map(int, input().split())\n    print(check(n, a, b))", "def gen_set(a, b, n):\n    seed = 1\n    while seed <= n:\n        yield seed\n        seed *= a\n\ndef check(num, a, b):\n    for x in gen_set(a, b, num):\n        if (num - x) % b == 0:\n            return True\n    return False\n\ndef solve():\n    (n, a, b) = [int(x) for x in input().split()]\n    if b == 1:\n        return 'Yes'\n    if a == 1:\n        if (n - 1) % b == 0:\n            return 'Yes'\n        return 'No'\n    if check(n, a, b):\n        return 'Yes'\n    return 'No'\nfor _ in range(int(input())):\n    print(solve())", "def solve(n, a, b):\n    power = a\n    while power <= n:\n        x = n - power\n        if x % b == 0:\n            return 'Yes'\n        power *= a\n    return 'No'\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    if a == 1:\n        if (n - 1) % b != 0:\n            print('No')\n        else:\n            print('Yes')\n    elif (n - 1) % b == 0:\n        print('Yes')\n    else:\n        print(solve(n, a, b))", "for _ in range(int(input())):\n    (n, a, b) = list(map(int, input().split()))\n    if a == 1:\n        if (n - 1) % b == 0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        m = 1\n        flag = False\n        while m <= n:\n            if m % b == n % b:\n                flag = True\n                break\n            m *= a\n        if flag:\n            print('Yes')\n        else:\n            print('No')", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    ans = 'No'\n    i = 1\n    if a == 1:\n        if (n - 1) % b == 0:\n            ans = 'Yes'\n    else:\n        while n >= i:\n            if (n - i) % b == 0:\n                ans = 'Yes'\n                break\n            i = i * a\n    print(ans)", "t = int(input())\nfor i in range(t):\n    inp = input().split(' ')\n    n = int(inp[0])\n    a = int(inp[1])\n    b = int(inp[2])\n    r = n % b\n    s = 1\n    flag = False\n    if b == 1:\n        flag = True\n    elif a == 1:\n        flag = r == 1\n    else:\n        while n > 0:\n            if s == r:\n                flag = True\n                break\n            s = s * a % b\n            n = n // a\n            if s == 1:\n                break\n    if flag:\n        print('Yes')\n    else:\n        print('No')", "t = int(input())\nfor ll in range(t):\n    (n, a, b) = map(int, input().split(' '))\n    if a == 1:\n        if n % b == 1 % b:\n            print('Yes')\n            continue\n        else:\n            print('No')\n            continue\n    w = 1\n    while w <= n:\n        if (n - w) % b == 0:\n            print('Yes')\n            n = -1\n            break\n        else:\n            w *= a\n    if n != -1:\n        print('No')", "t = int(input())\nwhile t > 0:\n    x = input()\n    y = x.split()\n    n = int(y[0])\n    a = int(y[1])\n    b = int(y[2])\n    flag = False\n    if a == 1:\n        if (n - 1) % b == 0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        k = 1\n        while k <= n:\n            if k % b == n % b:\n                flag = True\n                break\n            k = k * a\n        if flag:\n            print('Yes')\n        else:\n            print('No')\n    t -= 1", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    if a == 1:\n        if (n - 1) % b == 0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        t = 1\n        flag = 0\n        while t <= n:\n            if t % b == n % b:\n                flag = 1\n                break\n            t = t * a\n        if flag == 1:\n            print('Yes')\n        else:\n            print('No')", "t = int(input())\nfor i in range(t):\n    w = input().split()\n    n = int(w[0])\n    a = int(w[1])\n    b = int(w[2])\n    if a == 1:\n        if (n - 1) % b == 0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        t = 1\n        flag = 0\n        while t <= n:\n            if t % b == n % b:\n                flag = 1\n                break\n            t = t * a\n        if flag == 1:\n            print('Yes')\n        else:\n            print('No')", "for _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    ans = 'No'\n    i = 1\n    if a == 1:\n        if (n - 1) % b == 0:\n            ans = 'Yes'\n    else:\n        while n >= i:\n            if (n - i) % b == 0:\n                ans = 'Yes'\n                break\n            i = i * a\n    print(ans)", "t = int(input())\nfor i in range(t):\n    w = input().split()\n    n = int(w[0])\n    a = int(w[1])\n    b = int(w[2])\n    if a == 1:\n        if (n - 1) % b == 0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        t = 1\n        flag = 0\n        while t <= n:\n            if t % b == n % b:\n                flag = 1\n                break\n            t = t * a\n        if flag == 1:\n            print('Yes')\n        else:\n            print('No')", "t = int(input())\nfor i in range(t):\n    w = input().split()\n    n = int(w[0])\n    a = int(w[1])\n    b = int(w[2])\n    if a == 1:\n        if (n - 1) % b == 0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        t = 1\n        flag = 0\n        while t <= n:\n            if t % b == n % b:\n                flag = 1\n                break\n            t = t * a\n        if flag == 1:\n            print('Yes')\n        else:\n            print('No')", "def in_set(n, a, b):\n    if n == 1 or n % b == 1 or b == 1:\n        return True\n    x = 1\n    while x <= n and a > 1:\n        if x % b == n % b:\n            return True\n        x *= a\n    return False\nq = int(input())\nfor i in range(q):\n    (n, a, b) = map(int, input().split())\n    print('Yes' if in_set(n, a, b) else 'No')", "t = int(input())\nfor i in range(t):\n    w = input().split()\n    n = int(w[0])\n    a = int(w[1])\n    b = int(w[2])\n    if a == 1:\n        if (n - 1) % b == 0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        t = 1\n        flag = 0\n        while t <= n:\n            if t % b == n % b:\n                flag = 1\n                break\n            t = t * a\n        if flag == 1:\n            print('Yes')\n        else:\n            print('No')", "def ggwp(n, a, b):\n    if a == 1:\n        if (n - 1) % b == 0:\n            return 'Yes'\n        else:\n            return 'No'\n    op = 1\n    while op <= n:\n        if op % b == n % b:\n            return 'Yes'\n        op *= a\n    return 'No'\nfor _ in range(int(input())):\n    (n, a, b) = map(int, input().split())\n    print(ggwp(n, a, b))", "t = int(input())\nwhile t:\n    (n, x, y) = map(int, input().split())\n    if x == 1:\n        if (n - 1) % y == 0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        p = 1\n        flag = 0\n        while p <= n:\n            if (n - p) % y == 0:\n                flag = 1\n                break\n            p *= x\n        if flag == 1:\n            print('Yes')\n        else:\n            print('No')\n    t -= 1"]