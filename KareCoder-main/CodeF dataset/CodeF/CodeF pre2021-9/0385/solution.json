["def topic(n, t, s):\n    c = []\n    x = 0\n    for i in range(n):\n        c.append(t[i] - s[i])\n    c.sort()\n    i = 0\n    j = len(c) - 1\n    while i < j:\n        if c[i] > -c[j]:\n            x += j - i\n            j -= 1\n        else:\n            i += 1\n    print(x)\nn = int(input())\narr = input()\na = arr.split()\na = list(map(int, a))\narr2 = input()\nb = arr2.split()\nb = list(map(int, b))\ntopic(n, a, b)", "from operator import sub\nfrom bisect import bisect_right\n\ndef main():\n    nTopics = int(input())\n    differencesInInterest = list(map(sub, map(int, input().split()), map(int, input().split())))\n    differencesInInterest.sort()\n    return nGoodPairsOfTopics(nTopics, differencesInInterest)\n\ndef nGoodPairsOfTopics(nTopics, differencesInInterest):\n    if differencesInInterest[-1] < 1:\n        return 0\n    iLast = bisect_right(differencesInInterest, 0) - 1\n    return sum((i - bisect_right(differencesInInterest, -differencesInInterest[i]) for i in range(nTopics - 1, iLast, -1)))\nprint(main())", "def f(a):\n    lo = len(a) - 1\n    ans = 0\n    for i in range(0, len(a)):\n        hi = i\n        while lo > hi:\n            if a[hi] + a[lo] > 0:\n                break\n            else:\n                lo -= 1\n        if lo > hi:\n            ans += lo - hi\n    return ans\nn = input()\na = [*map(int, input().strip().split())]\nb = [*map(int, input().strip().split())]\na = list(map(lambda x, y: x - y, a, b))\na.sort(reverse=True)\nprint(f(a))", "from bisect import bisect_right\n\ndef main():\n    nTopics = int(input())\n    differencesInInterest = [teacher_sInterest - students_Interest for (teacher_sInterest, students_Interest) in zip(map(int, input().split()), map(int, input().split()))]\n    differencesInInterest.sort()\n    return nGoodPairsOfTopics(nTopics, differencesInInterest)\n\ndef nGoodPairsOfTopics(nTopics, differencesInInterest):\n    if differencesInInterest[-1] < 1:\n        return 0\n    iLast = bisect_right(differencesInInterest, 0) - 1\n    return sum((i - bisect_right(differencesInInterest, -differencesInInterest[i]) for i in range(nTopics - 1, iLast, -1)))\nprint(main())", "def f(a):\n    lo = len(a) - 1\n    ans = 0\n    for i in range(0, len(a)):\n        hi = i\n        while lo > hi:\n            if a[hi] + a[lo] > 0:\n                break\n            else:\n                lo -= 1\n        if lo > hi:\n            ans += lo - hi\n    return ans\nn = input()\na = [*map(int, input().strip().split())]\nb = [*map(int, input().strip().split())]\na = list(map(lambda x, y: x - y, a, b))\na.sort(reverse=True)\nprint(f(a))", "def answer(array):\n    array = sorted(array, reverse=True)\n    (left, right, counter) = (0, len(array) - 1, 0)\n    while left <= right:\n        if array[left] + array[right] > 0:\n            counter += right - left\n            left += 1\n        else:\n            right -= 1\n    return counter\nsize = int(input())\nstud = list(map(int, input().split()))\nteach = list(map(int, input().split()))\narray = []\nfor i in range(size):\n    array.append(stud[i] - teach[i])\nprint(answer(array))", "n = int(input())\narr = list(map(int, input().split()))\nbrr = list(map(int, input().split()))\ncrr = [arr[i] - brr[i] for i in range(n)]\ncrr.sort(reverse=True)\ni = 0\nj = n - 1\nans = 0\nct = n - 1\nwhile i < j:\n    if crr[i] + crr[j] > 0:\n        ans += ct\n        ct -= 1\n        i += 1\n    else:\n        ct -= 1\n        j -= 1\nprint(ans)", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = sorted([a[i] - b[i] for i in range(n)])\nans = 0\nl = 0\nr = n - 1\nwhile l < r:\n    if c[l] + c[r] > 0:\n        ans += r - l\n        r -= 1\n    else:\n        l += 1\nprint(ans)", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = sorted([a[i] - b[i] for i in range(n)])\nans = 0\nl = 0\nr = n - 1\nwhile l < r:\n    if c[l] + c[r] > 0:\n        ans += r - l\n        r -= 1\n    else:\n        l += 1\nprint(ans)", "from operator import sub\n\ndef main():\n    j = int(input()) - 1\n    l = sorted(map(sub, map(int, input().split()), map(int, input().split())))\n    i = r = 0\n    while i < j:\n        a = -l[i]\n        while i < j and a < l[j]:\n            r += j - i\n            j -= 1\n        a = -l[j]\n        while i < j and a >= l[i]:\n            i += 1\n    print(r)\nmain()", "def solve(teach, stu):\n    diffs = []\n    for i in range(len(teach)):\n        diffs.append(teach[i] - stu[i])\n    diffs = sorted(diffs)\n    ans = 0\n    (i, j) = (0, len(diffs) - 1)\n    while i < j:\n        if diffs[j] + diffs[i] > 0:\n            ans += j - i\n            j -= 1\n        else:\n            i += 1\n    return ans\nn = int(input())\nteach = [int(x) for x in input().split()]\nstu = [int(x) for x in input().split()]\nprint(solve(teach, stu))", "import sys\ninput = sys.stdin.readline\n\ndef solve(a, b):\n    arr = []\n    for (i, j) in zip(a, b):\n        arr.append(i - j)\n    arr.sort()\n    res = 0\n    l = 0\n    r = len(arr) - 1\n    while l < r:\n        if arr[l] + arr[r] > 0:\n            res += r - l\n            r -= 1\n        else:\n            l += 1\n    print(res)\nn = input()\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nsolve(a, b)", "n = int(input())\na = list(map(int, input().split(' ')))\nb = list(map(int, input().split(' ')))\narray = sorted([i - j for (i, j) in zip(a, b)], reverse=True)\n(i, j) = (0, n - 1)\ntot = 0\nwhile i <= j:\n    if array[i] + array[j] > 0:\n        tot += j - i\n        i += 1\n    else:\n        j -= 1\nprint(tot)", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ndelta = sorted([ai - bi for (ai, bi) in zip(a, b)], reverse=True)\n(l, r) = (0, n - 1)\ncnt = 0\nct = n - 1\nwhile l < r:\n    if delta[l] + delta[r] > 0:\n        cnt += ct\n        ct -= 1\n        l += 1\n    else:\n        ct -= 1\n        r -= 1\nprint(cnt)", "import sys\nfrom math import sqrt, floor, factorial, gcd\nfrom collections import deque, Counter\ninp = sys.stdin.readline\nread = lambda : list(map(int, inp().strip().split()))\n\ndef solve():\n    n = int(inp())\n    d = [i - j for (i, j) in zip(read(), read())]\n    d.sort(reverse=True)\n    (i, j) = (0, n - 1)\n    ans = 0\n    while i < j:\n        if d[i] + d[j] <= 0:\n            j -= 1\n        else:\n            ans += abs(i - j)\n            i += 1\n    print(ans)\nsolve()", "from operator import sub\n\ndef main():\n    j = int(input()) - 1\n    l = sorted(map(sub, map(int, input().split()), map(int, input().split())))\n    i = r = 0\n    while i < j:\n        while i < j and l[i] + l[j] > 0:\n            r += j - i\n            j -= 1\n        while i < j and l[i] + l[j] <= 0:\n            i += 1\n    print(r)\nmain()", "import sys\n\ndef answer(n, a, b):\n    d = []\n    for i in range(n):\n        d.append(a[i] - b[i])\n    d.sort(reverse=True)\n    ngr0 = 0\n    neq0 = 0\n    for i in range(n):\n        if d[i] > 0:\n            ngr0 += 1\n        elif d[i] == 0:\n            neq0 += 1\n        else:\n            break\n    nlt0 = n - ngr0 - neq0\n    cnt = 0\n    if ngr0 >= 2:\n        cnt = ngr0 * (ngr0 - 1) // 2\n    if neq0 > 0:\n        cnt += neq0 * ngr0\n    lptr = 0\n    rptr = n - 1\n    while lptr <= rptr and d[rptr] < 0:\n        while d[lptr] + d[rptr] > 0:\n            lptr += 1\n        cnt += lptr\n        rptr -= 1\n    return cnt\n\ndef main():\n    n = int(input())\n    a = [int(i) for i in sys.stdin.readline().split()]\n    b = [int(i) for i in sys.stdin.readline().split()]\n    print(answer(n, a, b))\n    return\nmain()", "def answer(array):\n    array = sorted(array, reverse=True)\n    (left, right, counter) = (0, len(array) - 1, 0)\n    while left < right:\n        if array[left] + array[right] > 0:\n            counter += right - left\n            left += 1\n        else:\n            right -= 1\n    return counter\nsize = int(input())\nstud = list(map(int, input().split()))\nteach = list(map(int, input().split()))\narray = []\nfor i in range(size):\n    array.append(stud[i] - teach[i])\nprint(answer(array))", "import math\nfrom sys import stdin\ninput = stdin.readline\nn = int(input())\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\nd = []\nfor i in range(n):\n    d.append(a[i] - b[i])\nd.sort(reverse=True)\nc = 0\nl = -1\nfor i in range(n):\n    if d[i] > 0:\n        while d[l] + d[i] <= 0:\n            l = l - 1\n        c = c + (n - i + l)\n    else:\n        break\nprint(c)", "n = int(input())\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\nc = sorted([a[i] - b[i] for i in range(n)])\nans = 0\npol = [x for x in c if x > 0]\nif len(pol) > 0:\n    pol = pol[0]\n    left = right = c.index(pol)\nelse:\n    print(0)\n    exit(0)\nwhile right < n:\n    if left != 0:\n        if c[left - 1] + c[right] >= 1:\n            left -= 1\n        else:\n            ans += right - 1 - left + 1\n            right += 1\n    else:\n        ans += right - 1 - left + 1\n        right += 1\nprint(ans)", "(n,) = map(int, input().split())\na = sorted((x - y for (x, y) in zip(map(int, input().split()), map(int, input().split()))))\n(r, d) = (0, n)\nwhile d:\n    f = a[n - d] + a[n - 1] > 0\n    r += f * d - f\n    n -= f\n    d -= 1\nprint(r)", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\narr = [a[i] - b[i] for i in range(n)]\narr.sort(reverse=True)\nr = n - 1\nres = 0\nfor i in range(n):\n    while r > i and arr[i] + arr[r] <= 0:\n        r -= 1\n    if r - i > 0:\n        res += r - i\nprint(res)", "def solve(n, teacher, students):\n    result = 0\n    interests = [teacher[i] - students[i] for i in range(n)]\n    interests.sort()\n    begin = 0\n    end = n - 1\n    while begin != end:\n        if interests[begin] + interests[end] > 0:\n            result += end - begin\n            end -= 1\n        else:\n            begin += 1\n    return result\n\ndef main():\n    n = int(input())\n    teacher = list(map(int, input().split()))\n    students = list(map(int, input().split()))\n    result = solve(n, teacher, students)\n    print(result)\n    return 0\nmain()", "I = lambda : map(int, input().split())\nn = int(input())\na = sorted([i - j for (i, j) in zip(I(), I())])\n(l, r, res) = (0, n - 1, 0)\nwhile l < r:\n    if a[l] + a[r] > 0:\n        res += r - l\n        r -= 1\n    else:\n        l += 1\nprint(res)", "from collections import Counter\nfrom operator import sub\nR1 = lambda : list(map(int, input().split()))\nR2 = lambda : int(input())\nR3 = lambda : Counter(map(int, input().split()))\nn = R2()\nc = sorted(map(sub, R1(), R1()))\ni = s = 0\nj = n - 1\nwhile i < j:\n    if c[i] + c[j] > 0:\n        s += j - i\n        j -= 1\n    else:\n        i += 1\nprint(s)", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = sorted([a[i] - b[i] for i in range(n)], reverse=True)\nans = 0\ni = 0\nj = n - 1\nwhile i < j:\n    if c[i] + c[j] <= 0:\n        j -= 1\n    else:\n        ans += j - i\n        i += 1\nprint(ans)", "import bisect\n\ndef cast(cre, typ):\n    return type(typ)(map(cre, typ))\n\ndef range_sum(n):\n    return int(n * (n + 1) / 2)\n\ndef solution():\n    n = int(input())\n    (a, b) = (cast(int, input().split()), cast(int, input().split()))\n    c = sorted([a[i] - b[i] for i in range(n)])\n    ans = range_sum(n - 1)\n    cnt = 0\n    for i in range(n - 1):\n        if c[i] > 0:\n            break\n        cnt += bisect.bisect_right(c, -c[i]) - (i + 1)\n    print(ans - cnt)\nsolution()", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nfor i in range(n):\n    a[i] = a[i] - b[i]\na.sort()\ncnt = 0\nl = 0\nh = n - 1\nwhile l < h:\n    if a[l] + a[h] > 0:\n        cnt += h - l\n        h -= 1\n    else:\n        l += 1\nprint(cnt)", "n = int(input())\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\nc = sorted([a[i] - b[i] for i in range(n)])\nans = 0\npol = [x for x in c if x > 0]\nif len(pol) > 0:\n    pol = pol[0]\n    left = right = c.index(pol)\nelse:\n    print(0)\n    exit(0)\nwhile right < n:\n    if left != 0:\n        if c[left - 1] + c[right] >= 1:\n            left -= 1\n        else:\n            ans += right - 1 - left + 1\n            right += 1\n    else:\n        ans += right - 1 - left + 1\n        right += 1\nprint(ans)", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = sorted([a[i] - b[i] for i in range(n)])\ni = 0\nj = n - 1\nres = 0\nwhile i < j:\n    if c[j] + c[i] > 0:\n        res += j - i\n        j -= 1\n    else:\n        i += 1\nprint(res)", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\narr = [0] * n\nfor i in range(n):\n    arr[i] = a[i] - b[i]\narr.sort()\nans = 0\n(l, r) = (0, n - 1)\nwhile l < r:\n    if arr[l] + arr[r] > 0:\n        ans += r - l\n        r -= 1\n    else:\n        l += 1\nprint(ans)", "def sol():\n    N = int(input())\n    A = list(map(int, input().split(' ')))\n    B = list(map(int, input().split(' ')))\n    sub = [A[i] - B[i] for i in range(len(A))]\n    sub.sort(reverse=True)\n    r = len(A) - 1\n    pair_total = 0\n    for l in range(len(A)):\n        if sub[l] <= 0:\n            break\n        while sub[l] + sub[r] <= 0:\n            r -= 1\n        pair_total += r - l\n    print(pair_total)\nsol()", "I = lambda : map(int, input().split())\nn = int(input())\ndict = sorted([i - j for (i, j) in zip(I(), I())])\n(ans, l, r) = (0, 0, n - 1)\nwhile l < r:\n    if dict[l] + dict[r] > 0:\n        ans += r - l\n        r -= 1\n    else:\n        l = l + 1\nprint(ans)", "def topics(n, t, s):\n    diffs = []\n    for i in range(n):\n        diffs.append(t[i] - s[i])\n    diffs.sort()\n    right = n - 1\n    left = 0\n    sm = 0\n    while left < right:\n        while left < right and diffs[right] + diffs[left] <= 0:\n            left += 1\n        sm += right - left\n        right -= 1\n    return sm\nn = int(input())\nt = [int(i) for i in input().split(' ')]\ns = [int(i) for i in input().split(' ')]\nprint(topics(n, t, s))", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\na = list(map(lambda x1, x2: x1 - x2, a, b))\na.sort()\np1 = 0\np2 = n - 1\nc = 0\nwhile p1 < p2:\n    if a[p1] + a[p2] > 0:\n        c += p2 - p1\n        p2 -= 1\n    else:\n        p1 += 1\nprint(c)", "n = int(input())\na = sorted([x - y for (x, y) in zip(map(int, input().split()), map(int, input().split()))])\nl = 0\nr = n - 1\nans = 0\nwhile l < r:\n    if a[l] + a[r] > 0:\n        ans = ans + r - l\n        r = r - 1\n    else:\n        l = l + 1\nprint(ans)", "tamanho = int(input())\nlistasub = sorted((i - j for (i, j) in zip(map(int, input().split()), map(int, input().split()))))\ninicio = 0\nfim = tamanho - 1\nresposta = 0\nwhile inicio < fim:\n    if listasub[inicio] + listasub[fim] > 0:\n        resposta += fim - inicio\n        fim -= 1\n    else:\n        inicio += 1\nprint(resposta)", "import sys\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep='\\n')\n\ndef II():\n    return int(sys.stdin.readline())\n\ndef MI():\n    return map(int, sys.stdin.readline().split())\n\ndef LI():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef LLI(rows_number):\n    return [LI() for _ in range(rows_number)]\n\ndef SI():\n    return sys.stdin.readline()[:-1]\n\ndef main():\n    n = II()\n    aa = LI()\n    bb = LI()\n    dd = [a - b for (a, b) in zip(aa, bb)]\n    dd.sort()\n    ans = 0\n    j = n\n    for (i, d) in enumerate(dd):\n        while j - 1 > i and d + dd[j - 1] > 0:\n            j -= 1\n        if j <= i:\n            ans += (n - i) * (n - i - 1) // 2\n            break\n        ans += n - j\n    print(ans)\nmain()", "n = int(input())\narr = list(map(int, input().split()))\nls = list(map(int, input().split()))\narr = [arr[i] - ls[i] for i in range(n)]\narr.sort()\nstart = 0\nend = n - 1\ncount = 0\nwhile end > start:\n    if arr[start] + arr[end] <= 0:\n        start += 1\n    else:\n        count += end - start\n        end -= 1\nprint(count)", "n = int(input())\narr = list(map(int, input().split()))\nls = list(map(int, input().split()))\narr = [arr[i] - ls[i] for i in range(n)]\narr.sort()\nstart = 0\nend = n - 1\ncount = 0\nwhile end > start:\n    if arr[start] + arr[end] <= 0:\n        start += 1\n    else:\n        count += end - start\n        end -= 1\nprint(count)", "R = lambda : map(int, input().split())\n(n,) = R()\na = sorted((x - y for (x, y) in zip(R(), R())))\nr = i = 0\nj = n - 1\nwhile i < j:\n    if a[i] + a[j] > 0:\n        r += j - i\n        j -= 1\n    else:\n        i += 1\nprint(r)", "def findPairs(arr, n):\n    l = 0\n    r = n - 1\n    result = 0\n    while l < r:\n        if arr[l] + arr[r] > 0:\n            result += r - l\n            l += 1\n        else:\n            r -= 1\n    return result\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nk = [a[i] - b[i] for i in range(n)]\nk.sort(reverse=True)\nprint(findPairs(k, n))", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ndif = list(map(lambda x, y: x - y, a, b))\ndif.sort()\nleft = 0\nright = len(dif) - 1\ntotal = 0\nwhile left < right:\n    if dif[left] + dif[right] > 0:\n        total += right - left\n        right -= 1\n    else:\n        left += 1\nprint(total)", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nl = [x - y for (x, y) in zip(a, b)]\nl.sort()\nz = l.count(0)\np = sum((1 for x in l if x > 0))\nm = n - z - p\nidx = n\ncnt = p * (p - 1) // 2 + z * p\nfor i in range(m):\n    while l[idx - 1] + l[i] > 0:\n        idx -= 1\n    cnt += n - idx\nprint(cnt)", "n = int(input())\nli = sorted((i - j for (i, j) in zip(map(int, input().split()), map(int, input().split()))))\nl = 0\nr = n - 1\ns = 0\nwhile l < r:\n    if li[l] + li[r] > 0:\n        s += r - l\n        r -= 1\n    else:\n        l += 1\nprint(s)", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = []\nfor i in range(n):\n    c.append(a[i] - b[i])\nc.sort()\ni = 0\nj = n - 1\nans = 0\nwhile j > i:\n    if c[j] + c[i] > 0:\n        ans += j - i\n        j -= 1\n    else:\n        i += 1\nprint(ans)", "import bisect\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = sorted([i - j for (i, j) in zip(a, b)])\nans = 0\nfor i in range(n):\n    if c[i] > 0:\n        ans += i - bisect.bisect(c, -c[i])\nprint(ans)", "from bisect import bisect_right\nn = int(input())\nai = [*map(int, input().split())]\nbi = [*map(int, input().split())]\nk = [i - j for (i, j) in zip(ai, bi)]\nk.sort()\nans = 0\nfor i in k:\n    if i > 0:\n        ans -= 1\n    ans += n - bisect_right(k, -i)\nprint(ans // 2)", "R = lambda : map(int, input().split())\n(n,) = R()\na = sorted((x - y for (x, y) in zip(R(), R())))\nr = 0\nd = n\nwhile d:\n    f = a[n - d] + a[n - 1] > 0\n    r += f * d - f\n    n -= f\n    d -= 1\nprint(r)", "n = int(input())\nteacher = list(map(int, input().split()))\nstudent = list(map(int, input().split()))\nstore = []\nfor i in range(n):\n    store.append(teacher[i] - student[i])\nstore.sort()\n(l, r) = (0, n - 1)\nres = 0\nwhile l < r:\n    cur = store[r] + store[l]\n    if cur > 0:\n        res += r - l\n        r -= 1\n    else:\n        l += 1\nprint(res)", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nl = [x - y for (x, y) in zip(a, b)]\nl.sort()\nz = l.count(0)\np = sum((1 for x in l if x > 0))\nm = n - z - p\nidx = n\ncnt = p * (p - 1) // 2 + z * p\nfor i in range(m):\n    while l[idx - 1] + l[i] > 0:\n        idx -= 1\n    cnt += n - idx\nprint(cnt)", "def helper(n, a, b):\n    c = []\n    for i in range(n):\n        c.append(a[i] - b[i])\n    c = sorted(c)\n    p1 = 0\n    p2 = n - 1\n    count = 0\n    while p2 > p1:\n        x1 = c[p1]\n        x2 = c[p2]\n        if x1 + x2 > 0:\n            count += p2 - p1\n            p2 -= 1\n        else:\n            p1 += 1\n    return count\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(helper(n, a, b))", "t = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nfor i in range(t):\n    a[i] -= b[i]\na.sort()\nleft = 0\ncount = 0\nright = t - 1\nwhile left < right:\n    if a[left] + a[right] > 0:\n        count += right - left\n        right -= 1\n    else:\n        left += 1\nprint(count)", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nl = [x - y for (x, y) in zip(a, b)]\nl.sort()\nz = l.count(0)\np = sum((1 for x in l if x > 0))\nm = n - z - p\nidx = n\ncnt = p * (p - 1) // 2 + z * p\nfor i in range(m):\n    while l[idx - 1] + l[i] > 0:\n        idx -= 1\n    cnt += n - idx\nprint(cnt)", "def pair(ne, a, b):\n    ans = 0\n    p = []\n    lp = 0\n    n = []\n    ln = 0\n    z = 0\n    for i in range(ne):\n        if a[i] > b[i]:\n            p.append(a[i] - b[i])\n            lp += 1\n        elif a[i] == b[i]:\n            z += 1\n        else:\n            n.append(b[i] - a[i])\n            ln += 1\n    ans += lp * z\n    p.sort()\n    n.sort()\n    i = 0\n    j = 0\n    while i < ln and j < lp:\n        if n[i] < p[j]:\n            ans += lp - j\n            i += 1\n        elif n[i] >= p[j]:\n            j += 1\n    ans += lp * (lp - 1) // 2\n    return ans\nn = int(input())\na = list(map(int, input().split(' ')))\nb = list(map(int, input().split(' ')))\nprint(pair(n, a, b))", "n = int(input())\nteachers = [int(x) for x in input().split()]\nstudents = [int(x) for x in input().split()]\nabstracts = [teachers[i] - students[i] for i in range(n)]\nabstracts.sort()\ncount = 0\n(p, q) = (0, n - 1)\nwhile p < q:\n    s = abstracts[p] + abstracts[q]\n    if s > 0:\n        count += q - p\n        q -= 1\n    else:\n        p += 1\nprint(count)", "import sys\nfrom math import gcd, sqrt\nsys.setrecursionlimit(10 ** 5)\ninf = float('inf')\nen = lambda x: list(enumerate(x))\nii = lambda : int(input())\nr = lambda : map(int, input().split())\nrr = lambda : list(r())\nn = ii()\na = rr()\nb = rr()\n\ndef CountPairs(arr, n):\n    arr.sort()\n    count = 0\n    l = 0\n    r = n - 1\n    while l < r:\n        if arr[l] + arr[r] > 0:\n            count += r - l\n            r -= 1\n        else:\n            l += 1\n    return count\narr = [i - j for (i, j) in zip(a, b)]\nprint(CountPairs(arr, len(arr)))", "n = int(input())\na = map(int, input().split())\nb = map(int, input().split())\nc = [p[0] - p[1] for p in zip(a, b)]\nc.sort()\nres = 0\ni = 0\nj = len(c) - 1\nwhile True:\n    while i < j and c[i] + c[j] > 0:\n        j -= 1\n    if i >= j:\n        break\n    res += n - j - 1\n    i += 1\nres += n - i - 1\nres += (n - i - 1) * (n - i - 2) // 2\nprint(res)", "n = int(input())\nl = [[0] * n] * 1\ns = [[0] * n] * 1\nm = [[0] * n] * 1\ni = 0\nl[0] = input().split(' ')\nl[0] = [int(j) for j in l[i]]\ns[0] = input().split(' ')\ns[0] = [int(j) for j in s[i]]\nflag = 0\nfor i in range(n):\n    m[0][i] = l[0][i] - s[0][i]\nx = 0\ny = n - 1\nm[0].sort()\nwhile x < y:\n    if m[0][x] + m[0][y] > 0:\n        if x >= y:\n            break\n        flag = flag + y - x\n        y = y - 1\n    else:\n        x = x + 1\nprint(flag)", "from bisect import bisect_left\n\ndef pairOfTopics(n, a, b):\n    l = []\n    for x in range(n):\n        l.append(a[x] - b[x])\n    l.sort()\n    ans = 0\n    for x in range(n - 1):\n        i = bisect_left(l, 0 - l[x] + 1, x + 1, n)\n        ans += n - i\n    return ans\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprint(pairOfTopics(n, a, b))", "import bisect\nn = int(input())\na = list(map(int, input().strip().split()))\nb = list(map(int, input().strip().split()))\ndiff = []\nfor i in range(n):\n    diff.append(a[i] - b[i])\ndiff.sort()\nres = 0\nfor i in range(n):\n    if diff[i] <= 0:\n        continue\n    pos = bisect.bisect_left(diff, -diff[i] + 1)\n    res += i - pos\nprint(res)", "R = lambda : map(int, input().split())\n(n,) = R()\na = sorted((x - y for (x, y) in zip(R(), R())))\nr = 0\nfor d in range(n, 1, -1):\n    if a[n - d] + a[n - 1] > 0:\n        r += d - 1\n        n -= 1\nprint(r)", "def main():\n    n = int(input())\n    a = (int(e) for e in input().split(' '))\n    b = (int(e) for e in input().split(' '))\n    d = [e[0] - e[1] for e in zip(a, b)]\n    d.sort(reverse=True)\n    (i, j, ans) = (0, len(d) - 1, 0)\n    while i < j:\n        if d[i] + d[j] > 0:\n            ans += j - i\n            i += 1\n        else:\n            j -= 1\n    print(ans)\nmain()", "n = int(input())\na = sorted(list((a - b for (a, b) in zip(map(int, input().split()), map(int, input().split())))))\nl = 0\nr = n - 1\ncnt = 0\nwhile l < r:\n    if a[l] + a[r] > 0:\n        cnt += r - l\n        r -= 1\n    else:\n        l += 1\nprint(cnt)", "n = int(input())\na = list(map(int, input().strip().split(' ')))\nb = list(map(int, input().strip().split(' ')))\nfor i in range(n):\n    a[i] = a[i] - b[i]\na.sort(reverse=True)\nnop = 0\nlast = n - 1\nfor i in range(0, last + 1):\n    while a[last] + a[i] <= 0 and last > i:\n        last -= 1\n    nop += last - i\n    if last <= i:\n        break\nprint(nop)", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\narr = [x - y for (x, y) in zip(a, b)]\narr.sort()\ni = 0\nj = n - 1\nans = 0\nwhile i < j:\n    if arr[i] + arr[j] > 0:\n        ans += j - i\n        j -= 1\n    else:\n        i += 1\nprint(ans)", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nk = len(a)\nans = 0\nc = [a[i] - b[i] for i in range(k)]\nc.sort()\n(lo, hi) = (0, k - 1)\nwhile lo <= hi:\n    if c[lo] + c[hi] > 0:\n        ans += hi - lo\n        hi -= 1\n    else:\n        lo += 1\nprint(ans)", "from bisect import bisect_right\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nx = [i - j for (i, j) in zip(a, b)]\nx.sort()\nans = 0\nfor i in x:\n    if i > 0:\n        ans -= 1\n    ans += n - bisect_right(x, -i)\nprint(ans // 2)", "n = int(input())\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\nc = []\nfor i in range(n):\n    c.append(a[i] - b[i])\nc.sort()\npos = n\nfor i in range(n):\n    if c[i] > 0:\n        pos = i\n        break\ni = 0\nj = n - 1\nans = 0\nwhile c[i] < 0 and i < j:\n    while c[i] + c[j] > 0 and i < j:\n        j -= 1\n    ans = ans + (n - 1 - j)\n    i += 1\nwhile i < n:\n    if c[i] != 0:\n        break\n    ans = ans + (n - pos)\n    i += 1\nval = n - i\nans = ans + val * (val - 1) // 2\nprint(ans)", "import sys\ninput = sys.stdin.readline\nn = input()\na = [int(x) for x in input().strip().split()]\nb = [int(x) for x in input().strip().split()]\nd = [a[i] - b[i] for i in range(len(a))]\nd.sort()\n(s, e, ans) = (0, len(d) - 1, 0)\nwhile s < e:\n    if d[s] + d[e] <= 0:\n        s += 1\n    else:\n        ans += e - s\n        e -= 1\nprint(ans)", "def sol(a, b):\n    n = len(a)\n    diff = []\n    for i in range(len(a)):\n        diff.append(a[i] - b[i])\n    diff.sort()\n    (i, j) = (0, len(diff) - 1)\n    ans = 0\n    while i < j:\n        if diff[i] + diff[j] <= 0:\n            i += 1\n        else:\n            ans += j - i\n            j -= 1\n    return ans\nn = int(input())\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\nprint(sol(a, b))", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nz = [a[i] - b[i] for i in range(n)]\nz.sort()\n(i, j, r) = (n - 1, 0, 0)\nwhile i >= j:\n    while j < n and z[i] + z[j] <= 0:\n        j += 1\n    if i > j:\n        r += i - j\n    i -= 1\nprint(r)", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nl = [x - y for (x, y) in zip(a, b)]\nl.sort()\nz = l.count(0)\np = sum((1 for x in l if x > 0))\nm = n - z - p\nidx = n\ncnt = p * (p - 1) // 2 + z * p\nfor i in range(m):\n    while l[idx - 1] + l[i] > 0:\n        idx -= 1\n    cnt += n - idx\nprint(cnt)", "R = lambda : map(int, input().split())\n(n,) = R()\na = sorted((x - y for (x, y) in zip(R(), R())))\nr = i = j = 0\nwhile i + j < n:\n    if a[i] + a[n - j - 1] > 0:\n        j += 1\n    else:\n        r += j\n        i += 1\nprint(r + j * (j - 1) // 2)", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = [0] * n\nfor i in range(n):\n    c[i] = a[i] - b[i]\nc.sort()\nx = 0\nk = 0\nfor i in range(n - 1, -1, -1):\n    while x < i and c[x] + c[i] <= 0:\n        x = x + 1\n    if x == i:\n        break\n    k += i - x\nprint(k)", "n = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = []\nfor (a, b) in zip(A, B):\n    C.append(a - b)\nC.sort()\ni = n - 1\nj = 0\npair = 0\nwhile j < i:\n    if C[j] + C[i] > 0:\n        pair += i - j\n        i -= 1\n    else:\n        j += 1\nprint(pair)", "R = lambda : map(int, input().split())\n(n,) = R()\na = sorted((x - y for (x, y) in zip(R(), R())))\nr = 0\nd = n\nwhile d:\n    if a[n - d] + a[n - 1] > 0:\n        r += d - 1\n        n -= 1\n    d -= 1\nprint(r)", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = [a[i] - b[i] for i in range(n)]\nc.sort()\nif c[0] > 0:\n    print((n - 1) * n // 2)\nelse:\n    pairs = 0\n    l = 0\n    r = n - 1\n    while l < r:\n        if c[l] + c[r] > 0:\n            pairs += r - l\n            r -= 1\n        else:\n            l += 1\n    print(pairs)", "def arr():\n    return [int(i) for i in input().split()]\nn = int(input())\na = arr()\nb = arr()\nc = [i - j for (i, j) in zip(a, b)]\nc.sort()\nans = 0\n(i, j) = (0, n - 1)\nwhile i <= j:\n    while i < n and c[i] + c[j] <= 0:\n        i += 1\n    if j >= i:\n        ans += j - i\n    j -= 1\nprint(ans)", "n = int(input())\nlst = list(map(int, input().split()))\narr = list(map(int, input().split()))\ndiff = [lst[i] - arr[i] for i in range(n)]\ndiff.sort()\nnumOfPair = 0\ni = 0\nj = n - 1\nwhile i < j:\n    if diff[i] + diff[j] > 0:\n        numOfPair += j - i\n        j -= 1\n    else:\n        i += 1\nprint(numOfPair)", "n = int(input())\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\nc = [i - j for (i, j) in zip(a, b)]\nc.sort()\n(i, j, res) = (0, n - 1, 0)\nwhile i <= j:\n    while i < n and c[i] + c[j] <= 0:\n        i += 1\n    if j >= i:\n        res += j - i\n    j -= 1\nprint(res)", "x = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nfor i in range(x):\n    a[i] = a[i] - b[i]\na.sort()\nleft = 0\nright = x - 1\ncount = 0\nwhile left < right:\n    if a[left] + a[right] > 0:\n        count = count + right - left\n        right = right - 1\n    else:\n        left = left + 1\nprint(count)", "import sys\nI = sys.stdin.readline\nn = int(I())\na = list(map(int, I().split()))\nb = list(map(int, I().split()))\nc = []\nfor i in range(n):\n    c.append(a[i] - b[i])\nc.sort(reverse=True)\ni = 0\nj = n - 1\nans = 0\nwhile i < j:\n    if c[j] + c[i] > 0:\n        ans += j - i\n        i += 1\n    else:\n        j -= 1\nprint(ans)", "n = int(input())\na = list(map(int, input().strip().split(' ')))\nb = list(map(int, input().strip().split(' ')))\nfor i in range(n):\n    a[i] = a[i] - b[i]\na.sort(reverse=True)\nnop = 0\nlast = n - 1\nfor i in range(0, last + 1):\n    while a[last] + a[i] <= 0 and last > i:\n        last -= 1\n    nop += last - i\n    if last <= i:\n        break\nprint(nop)", "q = int(input())\nw = list(map(int, input().split()))\ne = list(map(int, input().split()))\nfor i in range(q):\n    w[i] = w[i] - e[i]\nw = sorted(w)\ni = 0\nj = q - 1\nt = 0\nwhile j > i:\n    if w[i] + w[j] > 0:\n        t += j - i\n        j -= 1\n    else:\n        i += 1\nprint(t)", "import bisect\nn = int(input())\nalist = [int(a) for a in input().split()]\nblist = [int(a) for a in input().split()]\nclist = [alist[i] - blist[i] for i in range(len(alist))]\nclist.sort()\ngood = 0\nl = 0\nr = n - 1\nwhile l < r:\n    if clist[l] + clist[r] > 0:\n        good += r - l\n        r += -1\n    else:\n        l += 1\nprint(good)", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = [i - j for (i, j) in zip(a, b)]\nc.sort()\ni = 0\nj = n - 1\nans = 0\nwhile i <= j:\n    while i < n and c[i] + c[j] <= 0:\n        i += 1\n    if j >= i:\n        ans += j - i\n    j -= 1\nprint(ans)", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nfor i in range(n):\n    a[i] = a[i] - b[i]\na.sort()\nl = 0\nh = n - 1\ncnt = 0\nwhile l < h:\n    if a[l] + a[h] > 0:\n        cnt += h - l\n        h -= 1\n    else:\n        l += 1\nprint(cnt)", "n = int(input())\nl = list(map(int, input().split()))\nm = list(map(int, input().split()))\nfor i in range(n):\n    l[i] -= m[i]\nl.sort()\ni = 0\nj = n - 1\ncount = 0\nwhile j > i:\n    if l[j] + l[i] > 0:\n        count += j - i\n        j -= 1\n    else:\n        i += 1\nprint(count)", "n = int(input())\nlist1 = list(map(int, input().split()))\nlist2 = list(map(int, input().split()))\ndiff = list()\nfor i in range(n):\n    diff.append(list1[i] - list2[i])\ndiff.sort()\ncount = 0\ni = 0\nj = n - 1\nwhile i < j:\n    if diff[i] + diff[j] > 0:\n        count += j - i\n        j -= 1\n    else:\n        i += 1\nprint(count)", "import math\nt = int(input())\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\narr = [a[i] - b[i] for i in range(t)]\narr.sort()\np = 0\nans = 0\nj = t - 1\nfor ii in range(t):\n    i = arr[ii]\n    if i > 0:\n        p += t - ii\n        break\n    while arr[j] + i > 0:\n        j -= 1\n    ans += t - j - 1\nprint(math.comb(p, 2) + ans)", "R = lambda : map(int, input().split())\n(n,) = R()\na = sorted((x - y for (x, y) in zip(R(), R())))\nr = 0\nd = n\nwhile d:\n    f = a[n - d] + a[n - 1] > 0\n    r += f * d - f\n    n -= f\n    d -= 1\nprint(r)", "from collections import Counter\nR1 = lambda : list(map(int, input().split()))\nR2 = lambda : int(input())\nR3 = lambda : Counter(map(int, input().split()))\nn = R2()\n(a, b) = (R1(), R1())\nc = [0] * n\nfor i in range(n):\n    c[i] = a[i] - b[i]\nc.sort()\ni = s = 0\nj = n - 1\nwhile i < j:\n    if c[i] + c[j] > 0:\n        s += j - i\n        j -= 1\n    else:\n        i += 1\nprint(s)", "size = int(input())\nteacher = input().split()\nstudents = input().split()\ndiff = []\nfor i in range(size):\n    diff.append(int(teacher[i]) - int(students[i]))\ndiff = sorted(diff, reverse=True)\nstart = 0\nlast = len(diff) - 1\nanswer = 0\nwhile start < last and diff[start] >= 0:\n    num = diff[start] + diff[last]\n    if num <= 0:\n        last -= 1\n    else:\n        answer += last - start\n        start += 1\nprint(answer)", "import bisect, math\nn = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = []\nfor i in range(n):\n    C.append(A[i] - B[i])\nC.sort()\nans = 0\nfor i in range(n):\n    if C[i] > 0:\n        k = bisect.bisect_left(C, 1 - C[i])\n        ans += i - k\nprint(ans)", "from sys import stdin\ntry:\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().rstrip().split()))\n    b = list(map(int, stdin.readline().rstrip().split()))\n    arr = [a[i] - b[i] for i in range(n)]\n    arr.sort()\n    (count, start) = (0, 0)\n    end = n - 1\n    while start < end:\n        if arr[start] + arr[end] <= 0:\n            start += 1\n        else:\n            count += end - start\n            end -= 1\n    print(count)\nexcept:\n    pass", "R = lambda : map(int, input().split())\n(n,) = R()\na = sorted((x - y for (x, y) in zip(R(), R())))\nr = i = j = 0\nwhile i + j < n:\n    if a[i] + a[-j - 1] > 0:\n        j += 1\n    else:\n        r += j\n        i += 1\nprint(r + j * (j - 1) // 2)", "n = int(input())\na = [int(s) for s in input().split()]\nb = [int(s) for s in input().split()]\narr = [a[i] - b[i] for i in range(len(a))]\ni = 0\nj = n - 1\narr.sort()\ncount = 0\nwhile i < j:\n    if arr[i] + arr[j] > 0:\n        count += j - i\n        j -= 1\n    else:\n        i += 1\nprint(count)", "k = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nfor i in range(k):\n    b[i] = a[i] - b[i]\nb.sort()\ns = 0\n(x, y) = (0, k - 1)\nwhile x < y:\n    if b[y] + b[x] > 0:\n        s += y - x\n        y -= 1\n    else:\n        x += 1\nprint(s)", "n = int(input())\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\nc = [a[x] - b[x] for x in range(n)]\ncnt = 0\nc.sort()\ns = 0\ne = n - 1\nwhile s != e:\n    if c[e] + c[s] > 0:\n        cnt += e - s\n        e -= 1\n    else:\n        s += 1\nprint(cnt)"]