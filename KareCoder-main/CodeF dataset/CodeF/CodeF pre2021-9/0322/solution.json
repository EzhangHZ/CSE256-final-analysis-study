["import sys\nimport heapq\nfrom collections import Counter\nimport bisect\n\ndef load_sys():\n    return sys.stdin.readlines()\n\ndef load_local():\n    with open('input.txt', 'r') as f:\n        input = f.readlines()\n    return input\n\ndef f(n, a, b):\n    h = []\n    (ones, zeros) = (0, 0)\n    for (x, y) in zip(list(a), list(b)):\n        if x == '0':\n            zeros += 1\n        else:\n            ones += 1\n        if h and (x == y) != h[-1]:\n            return 'NO'\n        if not h:\n            h.append(x == y)\n        if zeros == ones:\n            h = []\n    if h and h[0] == False:\n        return 'NO'\n    return 'YES'\ninput = load_sys()\nfor i in range(1, len(input), 3):\n    n = int(input[i])\n    a = input[i + 1]\n    b = input[i + 2]\n    print(f(n, a, b))", "import sys\n\ndef Main():\n    t = int(sys.stdin.readline().strip())\n    for _ in range(t):\n        n = int(sys.stdin.readline().strip())\n        a = list(sys.stdin.readline().strip())\n        b = list(sys.stdin.readline().strip())\n        one = a.count('1')\n        zero = a.count('0')\n        flag = False\n        for i in range(n - 1, -1, -1):\n            now = a[i]\n            if flag:\n                if now == '1':\n                    now = '0'\n                else:\n                    now = '1'\n            if now != b[i] and one == zero:\n                flag = not flag\n            elif now == b[i]:\n                pass\n            else:\n                break\n            if a[i] == '1':\n                one -= 1\n            else:\n                zero -= 1\n        else:\n            print('YES')\n            continue\n        print('NO')\nMain()", "import math as m\ni = int(input())\ninp = []\nfor a in range(0, int(i)):\n    input()\n    inp += [[input(), input()]]\n\ndef equal_count(s):\n    c0 = 0\n    c1 = 0\n    for c in s:\n        if c == '0':\n            c0 += 1\n        else:\n            c1 += 1\n    return c0 == c1\n\ndef logic(a, b):\n    n = len(a)\n    S = a[0] == b[0]\n    partitions = []\n    isSame = []\n    partition = [a[0]]\n    for i in range(1, n):\n        same = a[i] == b[i]\n        if same == S:\n            partition += [a[i]]\n        else:\n            partitions += [partition]\n            isSame += [S]\n            S = not S\n            partition = [a[i]]\n    partitions += [partition]\n    isSame += [S]\n    l = len(isSame)\n    for i in range(l - 1, -2, -1):\n        if i == -1:\n            return 'YES'\n        elif not isSame[i]:\n            break\n    for j in range(i + 1):\n        if not equal_count(partitions[j]):\n            return 'NO'\n    return 'YES'\nfor i in inp:\n    (a, b) = (i[0], i[1])\n    print(logic(a, b))", "import sys\ninput = lambda : sys.stdin.readline()\nint_arr = lambda : list(map(int, input().split()))\nstr_arr = lambda : list(map(str, input().split()))\nget_str = lambda : map(str, input().split())\nget_int = lambda : map(int, input().split())\nget_flo = lambda : map(float, input().split())\nmod = 1000000007\n\ndef solve(n, a, b):\n    (o, z) = (0, 0)\n    for i in range(n):\n        if a[i] == '1':\n            o += 1\n        else:\n            z += 1\n    flag = 0\n    for i in range(n - 1, -1, -1):\n        if a[i] != b[i]:\n            if flag == 0:\n                if o != z:\n                    print('NO')\n                    return\n                flag = 1\n        elif flag == 1:\n            if o != z:\n                print('NO')\n                return\n            flag = 0\n        if flag == 0:\n            if a[i] == '1':\n                o -= 1\n            else:\n                z -= 1\n        elif a[i] == '1':\n            z -= 1\n        else:\n            o -= 1\n    else:\n        print('YES')\nfor _ in range(int(input())):\n    n = int(input())\n    a = str(input())[:-1]\n    b = str(input())[:-1]\n    solve(n, a, b)", "def solve():\n    l = int(input())\n    a = str(input())\n    b = str(input())\n    a1 = a + '0'\n    b1 = b + '0'\n    poss = 0\n    for i in range(l):\n        if a[i] == '1':\n            poss = poss + 1\n        else:\n            poss = poss - 1\n        if poss != 0:\n            if a1[i] == b1[i] and a1[i + 1] != b1[i + 1] or (a1[i] != b1[i] and a1[i + 1] == b1[i + 1]):\n                print('NO')\n                return\n    print('YES')\n\ndef main():\n    t = int(input())\n    while t > 0:\n        t = t - 1\n        solve()\nmain()", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    revert = False\n    (zeros_a, ones_a) = (a.count('0'), a.count('1'))\n    for i in range(n - 1, -1, -1):\n        if not (not revert and a[i] == b[i] or (revert and a[i] != b[i])):\n            if zeros_a != ones_a:\n                print('NO')\n                break\n            revert = not revert\n        if a[i] == '0':\n            zeros_a -= 1\n        else:\n            ones_a -= 1\n    else:\n        print('YES')", "def main(a, b, n):\n    ps = []\n    s = 0\n    for i in range(n):\n        if a[i] == '1':\n            s += 1\n        else:\n            s -= 1\n        ps.append(s)\n    sign = True\n    for i in range(n - 1, -1, -1):\n        if sign and a[i] != b[i] or (not sign and a[i] == b[i]):\n            if ps[i] != 0:\n                return 'NO'\n            else:\n                sign = not sign\n    return 'YES'\nnn = int(input())\nfor _ in range(nn):\n    n = int(input())\n    a = input()\n    b = input()\n    print(main(a, b, n))", "answers = []\n\ndef solve(n, a, b):\n    if a == b:\n        answers.append('YES')\n        return\n    zeroA = 0\n    oneA = 0\n    zeroB = 0\n    oneB = 0\n    for ele in a:\n        if ele == '0':\n            zeroA += 1\n        else:\n            oneA += 1\n    for ele in b:\n        if ele == '0':\n            zeroB += 1\n        else:\n            oneB += 1\n    if zeroB != zeroA:\n        answers.append('NO')\n        return\n    store = {}\n    count0 = 0\n    count1 = 0\n    for (i, ele) in enumerate(a):\n        if ele == '0':\n            count0 += 1\n        else:\n            count1 += 1\n        if count1 == count0:\n            store[i] = 1\n    flipped = 0\n    for i in range(n - 1, -1, -1):\n        if flipped == 0:\n            if b[i] == a[i]:\n                continue\n            if i not in store:\n                answers.append('NO')\n                return\n            flipped = 1\n        else:\n            if b[i] != a[i]:\n                continue\n            if i not in store:\n                answers.append('NO')\n                return\n            flipped = 0\n    answers.append('YES')\nT = int(input())\nwhile T:\n    n = int(input())\n    a = input()\n    b = input()\n    solve(n, a, b)\n    T -= 1\nfor ans in answers:\n    print(ans)", "def solve():\n    n = int(input())\n    for _ in range(n):\n        l = int(input())\n        (a, b) = (input(), input())\n        ao = a.count('1')\n        state = True\n        for j in range(l - 1, -1, -1):\n            if b[j] != a[j] and state or (a[j] == b[j] and (not state)):\n                if ao != j - ao + 1:\n                    print('NO')\n                    break\n                state = not state\n            if a[j] == '1' and state or (a[j] == '0' and (not state)):\n                ao -= 1\n        else:\n            print('YES')\nsolve()", "t = int(input())\n\ndef go(a, b):\n    if a == b:\n        return 'YES'\n    else:\n        zero = a.count('0')\n        one = a.count('1')\n        cnt = 0\n        i = len(a) - 1\n        while i >= 0:\n            c = a[i]\n            if cnt % 2 != 0:\n                if c == '0':\n                    c = '1'\n                else:\n                    c = '0'\n            if c == b[i]:\n                if c == '0':\n                    zero -= 1\n                else:\n                    one -= 1\n            elif one == zero:\n                if c == '0':\n                    zero -= 1\n                else:\n                    one -= 1\n                cnt += 1\n                (one, zero) = (zero, one)\n            else:\n                return 'NO'\n            i -= 1\n        return 'YES'\nfor i in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    print(go(a, b))", "inn = lambda : int(input())\ninm = lambda : map(int, input().split())\nins = lambda : str(input())\nina = lambda : list(map(int, input().split()))\n\ndef solve():\n    n = inn()\n    a = ins()\n    b = ins()\n    pref = [0] * n\n    pref[0] = 1 if a[0] == '0' else -1\n    for i in range(1, n):\n        pref[i] = pref[i - 1] + (1 if a[i] == '0' else -1)\n    flip = 0\n    for i in range(n - 1, -1, -1):\n        if flip:\n            if a[i] != b[i]:\n                continue\n            elif pref[i] == 0:\n                flip = 1 - flip\n            else:\n                print('NO')\n                return\n        elif a[i] == b[i]:\n            continue\n        elif pref[i] == 0:\n            flip = 1 - flip\n        else:\n            print('NO')\n            return\n    print('YES')\n\ndef main():\n    t = 1\n    t = int(input())\n    for _ in range(t):\n        solve()\nmain()", "for i in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    zero = 0\n    one = 0\n    inv = False\n    valid = True\n    for i in range(0, n):\n        if inv:\n            if a[i] == b[i]:\n                inv = False\n                if zero != one:\n                    valid = False\n                    break\n        elif a[i] != b[i]:\n            inv = True\n            if zero != one:\n                valid = False\n                break\n        if a[i] == '0':\n            zero += 1\n        else:\n            one += 1\n    if valid:\n        if inv and zero != one:\n            print('NO')\n        else:\n            print('YES')\n    else:\n        print('NO')", "a = '010101010101'\nb = '100110011010'\n\ndef answer(a, b):\n    a = a + '0'\n    b = b + '0'\n    count = prefix = x = 0\n    for i in range(len(a) - 1):\n        if a[i] == '1':\n            x += 1\n        elif a[i] == '0':\n            x -= 1\n        if (a[i] == b[i]) != (a[i + 1] == b[i + 1]) and x != 0:\n            return 'NO'\n    return 'YES'\nt = int(input())\nfor w in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    print(answer(a, b))", "def solve():\n    n = int(input())\n    s = input()\n    t = input()\n    sum = 0\n    prev = -1\n    for i in range(n):\n        if s[i] == '0':\n            sum += 1\n        else:\n            sum -= 1\n        if sum == 0:\n            type = 0\n            for j in range(prev + 1, i + 1):\n                if s[j] == t[j]:\n                    if type == -1:\n                        print('NO')\n                        return\n                    type = 1\n                else:\n                    if type == 1:\n                        print('NO')\n                        return\n                    type = -1\n            prev = i\n    for i in range(prev + 1, n):\n        if s[i] != t[i]:\n            print('NO')\n            return\n    print('YES')\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        solve()\nmain()", "def rev_st(st):\n    return ['1' if i == '0' else '0' for i in st]\n\ndef func():\n    i = 0\n    count_0 = 0\n    count_1 = 0\n    flag = True\n    while i < n:\n        if a[i] == b[i]:\n            if a[i] == '1':\n                count_1 += 1\n            else:\n                count_0 += 1\n            i += 1\n        else:\n            if count_0 == count_1:\n                pass\n            else:\n                flag = False\n                break\n            while i < n and a[i] != b[i]:\n                if a[i] == '1':\n                    count_1 += 1\n                else:\n                    count_0 += 1\n                i += 1\n            if count_0 == count_1:\n                pass\n            else:\n                flag = False\n                break\n    if flag:\n        print('YES')\n    else:\n        print('NO')\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(input())\n    b = list(input())\n    func()", "def solve():\n    n = int(input())\n    a = input()\n    b = input()\n    c1 = 0\n    c2 = 0\n    f = 0\n    for i in range(n):\n        if a[i] == '1':\n            c1 += 1\n        else:\n            c2 += 1\n    for i in range(n - 1, -1, -1):\n        if a[i] != b[i]:\n            if f == 0:\n                if c1 != c2:\n                    print('NO')\n                    return\n                f = 1\n        elif f == 1:\n            if c1 != c2:\n                print('NO')\n                return\n            f = 0\n        if f == 0:\n            if a[i] == '1':\n                c1 -= 1\n            else:\n                c2 -= 1\n        elif a[i] == '1':\n            c2 -= 1\n        else:\n            c1 -= 1\n    print('YES')\nt = int(input())\nwhile t:\n    solve()\n    t -= 1", "n = int(input())\ndata = []\nfor _ in range(n):\n    l = int(input())\n    a = input()\n    b = input()\n    data.append((l, a, b))\n\ndef func(dp):\n    x = dp[0]\n    a = list(dp[1][::-1])\n    b = list(dp[2][::-1])\n    ones_in_a = 0\n    for i in range(x):\n        if a[i] == '1':\n            ones_in_a += 1\n    zeroes_in_a = x - ones_in_a\n    no_times_operation_done = 0\n    for i in range(x):\n        if no_times_operation_done % 2 != 0:\n            if a[i] == '1':\n                a[i] = '0'\n            else:\n                a[i] = '1'\n        if a[i] != b[i] and zeroes_in_a == ones_in_a:\n            no_times_operation_done += 1\n            if a[i] == '1':\n                zeroes_in_a -= 1\n                a[i] = '0'\n            else:\n                ones_in_a -= 1\n                a[i] = '1'\n        elif a[i] == '1':\n            ones_in_a -= 1\n        else:\n            zeroes_in_a -= 1\n    if a == b:\n        print('YES')\n    else:\n        print('NO')\nfor data_point in data:\n    func(data_point)", "for _ in range(int(input())):\n    n = int(input())\n    a = input() + '0'\n    b = input() + '0'\n    c = 0\n    for i in range(n):\n        c += 1 if a[i] == '0' else -1\n        if (a[i] == b[i]) != (a[i + 1] == b[i + 1]) and c != 0:\n            print('NO')\n            break\n    else:\n        print('YES')", "def func(n, a, b):\n    aone = a.count('1')\n    bone = b.count('1')\n    if aone != bone:\n        print('NO')\n        return ''\n    arr = [-1 for x in range(n)]\n    one = 0\n    zero = 0\n    for i in range(n):\n        if a[i] == '0':\n            zero += 1\n        elif a[i] == '1':\n            one += 1\n        arr[i] = 1 if zero == one else 0\n    flag = 0\n    for i in range(n - 1, -1, -1):\n        if flag == 0:\n            if a[i] != b[i] and arr[i] != 1:\n                print('NO')\n                return ''\n            elif a[i] == b[i]:\n                pass\n            elif a[i] != b[i] and arr[i] == 1:\n                flag = 1\n        elif flag == 1:\n            if a[i] == b[i] and arr[i] != 1:\n                print('NO')\n                return ''\n            elif a[i] != b[i]:\n                pass\n            elif a[i] == b[i] and arr[i] == 1:\n                flag = 0\n    print('YES')\n    return ''\nfor _ in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    func(n, a, b)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    flag = 0\n    (zero, one) = (a.count('0'), a.count('1'))\n    for i in range(n - 1, -1, -1):\n        if not (not flag and a[i] == b[i] or (flag and a[i] != b[i])):\n            if zero != one:\n                print('NO')\n                break\n            flag = not flag\n        if a[i] == '0':\n            zero -= 1\n        else:\n            one -= 1\n    else:\n        print('YES')", "def match(n, a, b):\n    count = 0\n    a += '0'\n    b += '0'\n    for i in range(n):\n        count += 2 * (ord(a[i]) - ord('0')) - 1\n        if (a[i] == b[i]) != (a[i + 1] == b[i + 1]) and count != 0:\n            return False\n    return True\nt = int(input())\nfor i in range(t):\n    print('YES' if match(int(input()), input(), input()) else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(input())\n    b = list(input())\n    iv = 0\n    x = a.count('1')\n    y = a.count('0')\n    for i in range(n - 1, -1, -1):\n        if (a[i] != b[i]) == (iv % 2 == 0):\n            if x != y:\n                print('NO')\n                break\n            else:\n                iv += 1\n        if (a[i] == '1') == (iv % 2 != 1):\n            x -= 1\n        else:\n            y -= 1\n    else:\n        print('YES')", "import re\n\ndef invert(string):\n    ans = ''\n    for i in string:\n        ans += '0' if i == '1' else '1'\n    return ans\n\ndef main_code():\n    length = int(input())\n    string1 = input()\n    string2 = input()\n    one_count = 0\n    zero_count = 0\n    method = ''\n    last_i = 0\n    for i in range(length):\n        if string1[i] == '0':\n            zero_count += 1\n        else:\n            one_count += 1\n        if zero_count == one_count and one_count != 0:\n            if not (string1[last_i:i + 1] == string2[last_i:i + 1] or string1[last_i:i + 1] == invert(string2[last_i:i + 1])):\n                print('NO')\n                method = 'OVER'\n                break\n            last_i = i + 1\n    if method == '':\n        if not string1[last_i:] == string2[last_i:]:\n            print('NO')\n        else:\n            print('YES')\nfor i in range(int(input())):\n    main_code()", "for q in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    i = 0\n    x = {'0': 0, '1': 0}\n    possible = True\n    while i < n:\n        if a[i] != b[i]:\n            if x['0'] != x['1']:\n                possible = False\n                break\n            else:\n                while i < n and a[i] != b[i]:\n                    x[a[i]] += 1\n                    i += 1\n                if x['0'] != x['1']:\n                    possible = False\n                    break\n        else:\n            x[a[i]] += 1\n            i += 1\n    if possible:\n        print('YES')\n    else:\n        print('NO')", "def bit(n, s1, s2):\n    cnt = 0\n    s1 += '0'\n    s2 += '0'\n    for i in range(n):\n        cnt += 2 * (ord(s1[i]) - ord('0')) - 1\n        if (s1[i] == s2[i]) != (s1[i + 1] == s2[i + 1]) and cnt != 0:\n            return False\n    return True\nfor i in range(0, int(input())):\n    if bit(int(input()), input(), input()):\n        print('YES')\n    else:\n        print('NO')", "def solve(n, a, b):\n    a.append('0')\n    b.append('0')\n    count = 0\n    for i in range(n):\n        count += (a[i] == '1') - (a[i] == '0')\n        if (a[i] == b[i]) != (a[i + 1] == b[i + 1]) and count != 0:\n            return 'NO'\n    return 'YES'\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(input())\n    b = list(input())\n    print(solve(n, a, b))", "def solve(n, a, b):\n    flip = False\n    symm = [0] * (n + 1)\n    for i in range(n):\n        symm[i + 1] = symm[i] + (1 if a[i] == '1' else -1)\n    for i in range(n - 1, -1, -1):\n        x = a[i] if not flip else '0' if a[i] == '1' else '1'\n        if x != b[i]:\n            if symm[i + 1] != 0:\n                return 'NO'\n            else:\n                flip ^= True\n    return 'YES'\nT = int(input())\nfor case in range(T):\n    N = int(input())\n    (A, B) = (input(), input())\n    res = solve(N, A, B)\n    print(f'{res}')", "def flipTheBits(n, a, b):\n    if a == b:\n        return 'YES'\n    changeArray = []\n    z = 0\n    o = 0\n    for x in range(n):\n        if a[x] == b[x]:\n            if x == 0 or a[x - 1] == b[x - 1]:\n                continue\n            else:\n                changeArray.append(x - 1)\n        elif x == 0 or a[x - 1] != b[x - 1]:\n            continue\n        else:\n            changeArray.append(x - 1)\n    if a[-1] != b[-1]:\n        changeArray.append(n - 1)\n    i = 0\n    for x in range(n):\n        if a[x] == '0':\n            z += 1\n        else:\n            o += 1\n        if i < len(changeArray) and x == changeArray[i]:\n            i += 1\n            if z == o:\n                continue\n            else:\n                return 'NO'\n    return 'YES'\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(input())\n    b = list(input())\n    print(flipTheBits(n, a, b))", "import sys\n\ndef can_obtain(src, tgt):\n    assert len(src) == len(tgt)\n    n = len(src)\n    can_swap = [False] * n\n    counts = [0] * 2\n    for idx in range(n):\n        counts[src[idx]] += 1\n        can_swap[idx] = counts[0] == counts[1]\n    parity = 0\n    for idx in range(n - 1, -1, -1):\n        if src[idx] ^ parity != tgt[idx]:\n            if can_swap[idx]:\n                parity ^= 1\n            else:\n                return False\n    return True\n\ndef read_num():\n    return list(map(int, sys.stdin.readline().strip()))\ntest_count = int(sys.stdin.readline().strip())\nfor _ in range(test_count):\n    _ = sys.stdin.readline()\n    (src, tgt) = (read_num(), read_num())\n    print('YES' if can_obtain(src, tgt) else 'NO')", "def nnot(s):\n    q = s.replace('0', '#')\n    q = q.replace('1', '0')\n    return q.replace('#', '1')\n\ndef check(s1, s2):\n    return s1 == s2 or s1 == nnot(s2)\n\ndef solve(n, a, b):\n    (c1, c0) = (0, 0)\n    al = []\n    for i in range(n):\n        ch = a[i]\n        if ch == '0':\n            c0 += 1\n        else:\n            c1 += 1\n        if c1 == c0:\n            al.append(i)\n    (ll, pp) = (0, 0)\n    for i in al:\n        pp = i + 1\n        if not check(a[ll:pp], b[ll:pp]):\n            return 'NO'\n        ll = pp\n    if a[pp:] == b[pp:]:\n        return 'YES'\n    return 'NO'\ntc = int(input())\nfor _ in range(tc):\n    n = int(input())\n    a = input()\n    b = input()\n    print(solve(n, a, b))", "def ii():\n    return int(input())\n\ndef li():\n    return [int(i) for i in input().split()]\nfor t in range(ii()):\n    n = ii()\n    a = input()\n    b = input()\n    ones = 0\n    zeros = 0\n    mat = a[0] == b[0]\n    if a[0] == '0':\n        zeros += 1\n    else:\n        ones += 1\n    flag = 1\n    N = n\n    for i in range(N - 1, -1, -1):\n        if a[i] != b[i]:\n            n = i\n            break\n    if a == b:\n        print('YES')\n    else:\n        for i in range(1, n + 1):\n            if mat == 0 and a[i] == b[i]:\n                mat = 1\n                if zeros != ones:\n                    flag = 0\n                    break\n            if mat == 1 and a[i] != b[i]:\n                mat = 0\n                if zeros != ones:\n                    flag = 0\n                    break\n            if a[i] == '0':\n                zeros += 1\n            else:\n                ones += 1\n        if zeros != ones:\n            flag = 0\n        if flag == 0:\n            print('NO')\n        else:\n            print('YES')", "def Work():\n    n = int(input())\n    a = str(input())\n    b = str(input())\n    psbl = [0] * n\n    o = 0\n    z = 0\n    for i in range(n):\n        if a[i] == '0':\n            z += 1\n        else:\n            o += 1\n        if o == z:\n            psbl[i] = 1\n    i = n - 1\n    f = 0\n    while i > -1:\n        if a[i] == b[i] and f == 0:\n            i -= 1\n        elif a[i] != b[i] and f == 1:\n            i -= 1\n        elif psbl[i]:\n            f += 1\n            f %= 2\n            --i\n        else:\n            print('NO')\n            return\n    print('YES')\nt = int(input())\nfor _ in range(t):\n    Work()", "for _ in range(int(input())):\n    n = int(input())\n    a = list(input())\n    b = list(input())\n    ans = 'YES'\n    (a1, a2) = (a.count('1'), a.count('0'))\n    (b1, b2) = (b.count('1'), b.count('0'))\n    if a1 != b1 or b2 != a2:\n        print('NO')\n    else:\n        (r, o) = (0, 0)\n        a1 = 0\n        for i in range(n):\n            if a[i] == b[i]:\n                o += 1\n            else:\n                r += 1\n            if a[i] == '0':\n                a1 -= 1\n            else:\n                a1 += 1\n            if a1 == 0:\n                if r != 0 and o != 0:\n                    ans = 'NO'\n                    break\n                else:\n                    (r, o) = (0, 0)\n        if a1 != 0 and r != 0:\n            ans = 'NO'\n        print(ans)", "for q in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    i = 0\n    x = {'0': 0, '1': 0}\n    possible = True\n    while i < n:\n        if a[i] != b[i]:\n            if x['0'] != x['1']:\n                possible = False\n                break\n            else:\n                while i < n and a[i] != b[i]:\n                    x[a[i]] += 1\n                    i += 1\n                if x['0'] != x['1']:\n                    possible = False\n                    break\n        else:\n            x[a[i]] += 1\n            i += 1\n    if possible:\n        print('YES')\n    else:\n        print('NO')", "def check(s, s_n):\n    good = [False for _ in range(len(s))]\n    c0 = 0\n    c1 = 0\n    for i in range(len(s)):\n        if i > 0 and s[i] == s_n[i] and (s[i - 1] != s_n[i - 1]):\n            if not good[i - 1]:\n                return False\n        if i > 0 and s[i] != s_n[i] and (s[i - 1] == s_n[i - 1]):\n            if not good[i - 1]:\n                return False\n        if s[i] == '1':\n            c1 += 1\n        else:\n            c0 += 1\n        if c1 == c0:\n            good[i] = True\n    if s[-1] != s_n[-1]:\n        return good[-1]\n    return True\nn = int(input())\nfor _ in range(n):\n    input()\n    s = input()\n    s_n = input()\n    if check(s, s_n):\n        print('YES')\n    else:\n        print('NO')", "def sv():\n    n = int(input())\n    a = [1 if c == '1' else -1 for c in input()]\n    b = [1 if c == '1' else -1 for c in input()]\n    c1 = sum((1 for c in a if c == 1))\n    m = 1\n    for i in range(n - 1, -1, -1):\n        if a[i] * m != b[i]:\n            if c1 != i + 1 - c1:\n                return False\n            m *= -1\n        if a[i] == 1:\n            c1 -= 1\n    return True\nTC = int(input())\nfor tc in range(TC):\n    print('YES' if sv() else 'NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    z = a.count('0')\n    o = a.count('1')\n    f = 0\n    flag = 0\n    for i in range(n - 1, -1, -1):\n        if f == 0:\n            if a[i] != b[i]:\n                if z == o:\n                    f = 1\n                    temp = z\n                    z = o\n                    o = z\n                else:\n                    flag = 1\n                    break\n                if a[i] == '1':\n                    z -= 1\n                else:\n                    o -= 1\n            elif a[i] == '1':\n                o -= 1\n            else:\n                z -= 1\n        elif a[i] == b[i]:\n            if z == o:\n                f = 0\n                temp = z\n                z = o\n                o = z\n            else:\n                flag = 1\n                break\n            if a[i] == '1':\n                o -= 1\n            else:\n                z -= 1\n        elif a[i] == '1':\n            z -= 1\n        else:\n            o -= 1\n    if flag == 1:\n        print('NO')\n    else:\n        print('YES')", "def func(a, b, l):\n    a1 = a.count('1')\n    a0 = l - a1\n    switch = 0\n    for i in range(l - 1, -1, -1):\n        if switch == 1:\n            if a[i] == '0':\n                a[i] = '1'\n            else:\n                a[i] = '0'\n        if a[i] != b[i]:\n            if a1 != a0:\n                return 'NO'\n            else:\n                if switch == 0:\n                    switch = 1\n                else:\n                    switch = 0\n                if a[i] == '0':\n                    a[i] = '1'\n                else:\n                    a[i] = '0'\n                (a1, a0) = (a0, a1)\n        if a[i] == '0':\n            a0 -= 1\n        else:\n            a1 -= 1\n    return 'YES'\nfor h in range(int(input())):\n    l = int(input())\n    a = list(input())\n    b = list(input())\n    print(func(a, b, l))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    j = n - 1\n    while j >= 0 and a[j] == b[j]:\n        j -= 1\n    if j < 0:\n        print('YES')\n    else:\n        one = a[:j + 1].count('1')\n        zero = a[:j + 1].count('0')\n        flag = 1\n        ans = 1\n        while j >= 0:\n            if flag == 1:\n                if one == zero:\n                    while j >= 0 and a[j] != b[j]:\n                        if a[j] == '1':\n                            one -= 1\n                        else:\n                            zero -= 1\n                        j -= 1\n                else:\n                    ans = 0\n                    print('NO')\n                    break\n                if j >= 0:\n                    flag = 0\n            if flag == 0:\n                if one == zero:\n                    while j >= 0 and a[j] == b[j]:\n                        if a[j] == '1':\n                            one -= 1\n                        else:\n                            zero -= 1\n                        j -= 1\n                else:\n                    ans = 0\n                    print('NO')\n                    break\n                if j >= 0:\n                    flag = 1\n        if ans == 1:\n            print('YES')", "k = int(input())\nfor i in range(k):\n    n = int(input())\n    a = input()\n    b = input()\n    (zeros, ones) = (a.count('0'), a.count('1'))\n    swapped = False\n    i = n - 1\n    while i > -1:\n        if a[i] == b[i] and (not swapped) or (a[i] != b[i] and swapped):\n            if a[i] == '0':\n                zeros -= 1\n            else:\n                ones -= 1\n            i -= 1\n        elif zeros == ones:\n            swapped = not swapped\n        else:\n            break\n    print('NO' if i != -1 else 'YES')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    a = a + ' '\n    b = b + ' '\n    count = prefix = x = 0\n    for j in range(n):\n        if a[j] == '1':\n            x = x + 1\n        else:\n            x = x - 1\n        count = x\n        if (a[j] == b[j]) != (a[j + 1] == b[j + 1]) and count != 0:\n            prefix = 1\n            break\n    if prefix == 1:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    a += '0'\n    b += '0'\n    cnt = pr = x = 0\n    for j in range(0, n):\n        if a[j] == '1':\n            x += 1\n        else:\n            x -= 1\n        cnt = x\n        if (a[j] == b[j]) != (a[j + 1] == b[j + 1]) and cnt != 0:\n            pr = 1\n            break\n    if pr == 1:\n        print('NO')\n    else:\n        print('YES')", "import sys\nimport math\nimport random\nfrom queue import PriorityQueue\n\ndef get_ints():\n    return map(int, input().split())\n\ndef palindrome(s):\n    mid = len(s) // 2\n    for i in range(mid):\n        if s[i] != s[len(s) - i - 1]:\n            return False\n    return True\n\ndef solve(a, b, n):\n    invflg = 0\n    i = n - 1\n    inv = [False for i in range(n)]\n    count0 = 0\n    count1 = 0\n    for i in range(n):\n        if a[i] == '0':\n            count0 += 1\n        else:\n            count1 += 1\n        if count0 == count1:\n            inv[i] = True\n        else:\n            inv[i] = False\n    while i >= 0:\n        if invflg == 0:\n            if a[i] == b[i]:\n                i -= 1\n            else:\n                if inv[i] == False:\n                    print('NO')\n                    return\n                invflg = 1\n                i -= 1\n        elif invflg == 1:\n            if a[i] != b[i]:\n                i -= 1\n            else:\n                if inv[i] == False:\n                    print('NO')\n                    return\n                invflg = 0\n                i -= 1\n    print('YES')\nt = int(input())\nfor tt in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    solve(a, b, n)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    a = a + ' '\n    b = b + ' '\n    count = prefix = x = 0\n    for j in range(n):\n        if a[j] == '1':\n            x = x + 1\n        else:\n            x = x - 1\n        count = x\n        if (a[j] == b[j]) != (a[j + 1] == b[j + 1]) and count != 0:\n            prefix = 1\n            break\n    if prefix == 1:\n        print('NO')\n    else:\n        print('YES')", "def solve(a: str, b: str) -> bool:\n    if a == b:\n        return True\n    flipped = list(map(lambda bit: '0' if bit == '1' else '1', a))\n    flip_count = 0\n    flippable = [False] * len(a)\n    count_1 = 0\n    for i in range(len(a)):\n        if a[i] == '1':\n            count_1 += 1\n        if count_1 * 2 == i + 1:\n            flippable[i] = True\n    cur = a\n    cur_index = len(a) - 1\n    while True:\n        while cur[cur_index] == b[cur_index]:\n            cur_index -= 1\n            if cur_index == -1:\n                return True\n        if flippable[cur_index]:\n            if flip_count % 2 == 0:\n                cur = flipped\n            else:\n                cur = a\n            flip_count += 1\n            cur_index -= 1\n            if cur_index == -1:\n                return True\n        else:\n            return False\n    return True\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    if solve(a, b):\n        print('YES')\n    else:\n        print('NO')", "for _ in range(int(input())):\n    n = int(input())\n    a = input() + '0'\n    b = input() + '0'\n    c = 0\n    ans = True\n    for i in range(n):\n        c = c + ((a[i] == '1') - (a[i] == '0'))\n        if (a[i] == b[i]) != (a[i + 1] == b[i + 1]) and c != 0:\n            print('NO')\n            ans = False\n            break\n    if ans:\n        print('YES')", "T = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = input().split()[0]\n    b = input().split()[0]\n    a_counts = [0, 0]\n    equal = True\n    fine = True\n    for i in range(n):\n        if equal:\n            if a[i] == b[i]:\n                a_counts[int(a[i])] += 1\n            else:\n                if a_counts[0] != a_counts[1]:\n                    fine = False\n                    print('NO')\n                    break\n                equal = False\n                a_counts = [0, 0]\n                a_counts[int(a[i])] += 1\n        elif a[i] != b[i]:\n            a_counts[int(a[i])] += 1\n        else:\n            if a_counts[0] != a_counts[1]:\n                fine = False\n                print('NO')\n                break\n            equal = True\n            a_counts = [0, 0]\n            a_counts[int(a[i])] += 1\n    if fine:\n        if not equal and a_counts[0] != a_counts[1]:\n            print('NO')\n        else:\n            print('YES')", "def calc():\n    n = int(input())\n    a = input()\n    b = input()\n    dp0 = [0] * n\n    dp1 = [0] * n\n    if a[0] == '0':\n        dp0[0] = 1\n        dp1[0] = 0\n    else:\n        dp0[0] = 0\n        dp1[0] = 1\n    for i in range(1, n):\n        if a[i] == '0':\n            dp0[i] = dp0[i - 1] + 1\n            dp1[i] = dp1[i - 1]\n        else:\n            dp0[i] = dp0[i - 1]\n            dp1[i] = dp1[i - 1] + 1\n    flip = False\n    for i in range(n):\n        j = -i - 1\n        if not flip:\n            if a[j] != b[j]:\n                if dp0[j] == dp1[j]:\n                    flip = True\n                else:\n                    print('NO')\n                    return\n        elif a[j] == b[j]:\n            if dp0[j] == dp1[j]:\n                flip = False\n            else:\n                print('NO')\n                return\n    print('YES')\nt = int(input())\nfor k in range(t):\n    calc()", "from collections import Counter\n\ndef all_diff(x, y):\n    for i in range(len(x)):\n        if x[i] == y[i]:\n            return False\n    return True\n\ndef solve(n, a, b):\n    dj = -1\n    for j in range(n, 0, -1):\n        if a[j - 1] != b[j - 1]:\n            dj = j\n            break\n    if dj == -1:\n        return 'YES'\n    a = a[:dj]\n    b = b[:dj]\n    if len(a) % 2 > 0:\n        return 'NO'\n    ca = Counter(a)\n    cb = Counter(b)\n    if ca['0'] != ca['1'] or cb['0'] != cb['1']:\n        return 'NO'\n    cnts = []\n    (x, y) = (0, 0)\n    for i in range(len(a)):\n        if a[i] == '0':\n            x += 1\n        else:\n            y += 1\n        if x == y:\n            cnts.append(i)\n    for j in range(len(cnts), 0, -1):\n        idx = cnts[j - 1]\n        if j == 1:\n            x = a[:idx + 1]\n            y = b[:idx + 1]\n        else:\n            idx2 = cnts[j - 2]\n            x = a[idx2 + 1:idx + 1]\n            y = b[idx2 + 1:idx + 1]\n        if x != y and (not all_diff(x, y)):\n            return 'NO'\n    return 'YES'\nt = int(input())\nfor ti in range(t):\n    n = int(input())\n    a = input().strip()\n    b = input().strip()\n    res = solve(n, a, b)\n    print(res)", "import math\ncases = int(input())\nfor c in range(cases):\n    moves = int(input())\n    string1 = input()\n    string2 = input()\n    count = 0\n    count0 = string1.count('0')\n    count1 = string1.count('1')\n    boolean = True\n    inverse = False\n    for i in range(len(string1) - 1, -1, -1):\n        if not inverse and string1[i] != string2[i]:\n            if count0 != count1:\n                boolean = False\n                break\n            inverse = not inverse\n            count += 1\n        elif inverse and string1[i] == string2[i]:\n            if count0 != count1:\n                boolean = False\n                break\n            inverse = not inverse\n            count += 1\n        if string1[i] == '1':\n            count1 -= 1\n        else:\n            count0 -= 1\n    if boolean and count <= moves:\n        print('YES')\n    else:\n        print('NO')", "def solve(s, r):\n    zer = []\n    one = []\n    temp = 0\n    (z, o) = (0, 0)\n    l = len(s) - 1\n    l1 = l\n    for i in range(l + 1):\n        if s[i] == '0':\n            z += 1\n            zer.append(z)\n            one.append(o)\n        else:\n            o += 1\n            zer.append(z)\n            one.append(o)\n    for i in range(l + 1):\n        if s[l1] != r[l1] and temp == 0:\n            if zer[l1] != one[l1]:\n                return 'NO'\n            else:\n                temp = 1\n        if s[l1] == r[l1] and temp == 1:\n            if zer[l1] != one[l1]:\n                return 'NO'\n            else:\n                temp = 0\n        l1 -= 1\n    return 'YES'\nfor i in range(int(input())):\n    n = int(input())\n    s = list(input())\n    r = list(input())\n    if s == r:\n        print('YES')\n    else:\n        res = solve(s, r)\n        print(res)", "def solve_problem(x, y, n):\n    if x == y:\n        print('YES')\n        return\n    same = [True if x[i] == y[i] else False for i in range(n)]\n    mustSwitch = set()\n    for i in range(n - 1):\n        if same[i] != same[i + 1]:\n            mustSwitch.add(i + 1)\n    if not same[-1]:\n        mustSwitch.add(n)\n    canSwitch = set()\n    previousOnes = 0\n    previousZeros = 0\n    for i in range(n):\n        if previousOnes == previousZeros and i % 2 == 0:\n            canSwitch.add(i)\n        if x[i] == '1':\n            previousOnes += 1\n        else:\n            previousZeros += 1\n    if previousOnes == previousZeros:\n        canSwitch.add(n)\n    if mustSwitch.issubset(canSwitch):\n        print('YES')\n    else:\n        print('NO')\n\ndef solve():\n    t = int(input())\n    for i in range(0, t):\n        n = int(input())\n        x = input()\n        y = input()\n        solve_problem(x, y, n)\nsolve()", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    z = 0\n    o = 0\n    if a[0] == b[0]:\n        check = 0\n    else:\n        check = 1\n    ans = 1\n    for i in range(n):\n        if a[i] == '0':\n            z += 1\n        else:\n            o += 1\n        if check == 0:\n            if a[i] != b[i]:\n                check = -1\n        elif check == 1:\n            if a[i] == b[i]:\n                check = -1\n        if o == z:\n            if check == -1:\n                ans = 0\n                break\n            else:\n                ans = 1\n            if i < n - 1 and a[i + 1] == b[i + 1] or i == n - 1:\n                check = 0\n            else:\n                check = 1\n    if check != 0:\n        ans = 0\n    if ans:\n        print('YES')\n    else:\n        print('NO')", "try:\n    for _ in range(int(input())):\n        n = int(input())\n        a = input()\n        b = input()\n        a = a.replace(' ', '')\n        b = b.replace(' ', '')\n        a = list(a)\n        b = list(b)\n        count_one = a.count('1')\n        count_zero = a.count('0')\n        result = 0\n        j = n - 1\n        temp = 0\n        while 1:\n            if temp % 2 == 0:\n                while j >= 0:\n                    if a[j] != b[j]:\n                        break\n                    if a[j] == '1':\n                        count_one -= 1\n                    else:\n                        count_zero -= 1\n                    j -= 1\n                if j == -1:\n                    result = 1\n                    break\n                elif count_zero != count_one:\n                    result = 0\n                    break\n            else:\n                while j >= 0:\n                    if a[j] == b[j]:\n                        break\n                    if a[j] == '0':\n                        count_one -= 1\n                    else:\n                        count_zero -= 1\n                    j -= 1\n                if j == -1:\n                    result = 1\n                    break\n                elif count_zero != count_one:\n                    result = 0\n                    break\n            temp += 1\n        if result == 0:\n            print('NO')\n        else:\n            print('YES')\nexcept EOFError:\n    print(' ')", "import sys\nimport math\ninf = float('inf')\n\ndef lcm(a, b):\n    return int(a / math.gcd(a, b) * b)\nfor _ in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    changed = False\n    count_1 = 0\n    count_0 = 0\n    for i in range(n):\n        if a[i] == '1':\n            count_1 += 1\n        else:\n            count_0 += 1\n    flag = True\n    for i in range(n - 1, -1, -1):\n        if changed:\n            if a[i] != b[i]:\n                pass\n            elif count_0 == count_1:\n                changed = False\n            else:\n                flag = False\n                break\n        elif not changed:\n            if a[i] == b[i]:\n                pass\n            elif count_0 == count_1:\n                changed = True\n            else:\n                flag = False\n                break\n        if a[i] == '1':\n            count_1 -= 1\n        else:\n            count_0 -= 1\n    if flag:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    a += '0'\n    b += '0'\n    cnt = pr = x = 0\n    for j in range(0, n):\n        if a[j] == '1':\n            x += 1\n        else:\n            x -= 1\n        cnt = x\n        if (a[j] == b[j]) != (a[j + 1] == b[j + 1]) and cnt != 0:\n            pr = 1\n            break\n    if pr == 1:\n        print('NO')\n    else:\n        print('YES')", "for _ in range(int(input())):\n    n = int(input())\n    a = input() + '0'\n    b = input() + '0'\n    c = 0\n    ans = True\n    for i in range(n):\n        c = c + ((a[i] == '1') - (a[i] == '0'))\n        if (a[i] == b[i]) != (a[i + 1] == b[i + 1]) and c != 0:\n            print('NO')\n            ans = False\n            break\n    if ans:\n        print('YES')", "def solve():\n    n = input()\n    a = input()\n    b = input()\n    parts = []\n    c0 = 0\n    c1 = 0\n    last_part = 0\n    for j in range(len(a)):\n        if a[j] == '1':\n            c1 += 1\n        else:\n            c0 += 1\n        if c0 == c1:\n            parts.append((last_part, j))\n            last_part = j + 1\n    if len(parts) == 0:\n        if a == b:\n            return 'YES'\n        else:\n            return 'NO'\n    for k in range(0, len(parts), 1):\n        part = parts[k]\n        start = part[0]\n        end = part[1]\n        t = 1\n        if a[start] != b[start]:\n            t = 0\n        for j in range(start, end + 1, 1):\n            tt = 1\n            if a[j] != b[j]:\n                tt = 0\n            if tt != t:\n                return 'NO'\n    last_part = parts[len(parts) - 1]\n    end = last_part[1] + 1\n    if a[end:] != b[end:]:\n        return 'NO'\n    return 'YES'\nt = int(input())\nfor i in range(t):\n    print(solve())", "def fun(a, b, n):\n    a_s = []\n    b_s = []\n    one = 0\n    zero = 0\n    ind = 0\n    for j in range(n):\n        if a[j] == '0':\n            zero += 1\n        else:\n            one += 1\n        if one == zero:\n            a_s.append(a[ind:j + 1])\n            b_s.append(b[ind:j + 1])\n            ind = j + 1\n    for j in range(len(a_s)):\n        if a_s[j][0] == b_s[j][0]:\n            continue\n        else:\n            s = ''\n            for k in range(len(a_s[j])):\n                if a_s[j][k] == '1':\n                    s += '0'\n                else:\n                    s += '1'\n            a_s[j] = s\n    ans = ''\n    for j in range(len(a_s)):\n        ans += a_s[j]\n    ans += a[ind:n]\n    if ans == b:\n        return 'YES'\n    else:\n        return 'NO'\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    print(fun(a, b, n))", "import sys, math\n\ndef compute(l, a, b):\n    (a_c, b_c) = (sum(a), sum(b))\n    swap_a = 0\n    for i in range(l)[::-1]:\n        if a[i] ^ swap_a != b[i]:\n            if a_c != b_c:\n                return 'NO'\n            swap_a ^= 1\n            a_c = i - a_c + 1\n        a_c -= a[i] ^ swap_a\n        b_c -= b[i]\n    return 'YES'\nfor _ in '_' * int(input()):\n    print(compute(int(input()), [*map(int, input())], [*map(int, input())]))", "def f(l, a, b):\n    crnt = 0\n    odd = [0] * l\n    table = [False] * l\n    s = 0\n    for i in range(l):\n        if a[i] != b[i]:\n            odd[i] = 1\n        t = 1 if a[i] == '1' else -1\n        s += t\n        if s == 0:\n            table[i] = True\n    for i in range(l - 1, -1, -1):\n        if odd[i] == crnt:\n            continue\n        elif table[i]:\n            crnt = 1 - crnt\n        else:\n            print('NO')\n            break\n    else:\n        print('YES')\nn = int(input())\nfor _ in range(n):\n    l = int(input())\n    a = input()\n    b = input()\n    f(l, a, b)", "def readInt():\n    return int(input())\n\ndef readInts():\n    return [int(x) for x in input().split()]\n\ndef readString():\n    return input().rstrip()\n\ndef readCase():\n    n = readInt()\n    a = readString()\n    b = readString()\n    return (n, a, b)\n\ndef find_flip_points(s):\n    allowed = []\n    score = 0\n    for bit in s:\n        score += 1 if bit == '1' else -1\n        allowed.append(score == 0)\n    return allowed\n\ndef solve(n, a, b):\n    flips = 0\n    allowed = find_flip_points(a)\n    for p in range(n - 1, -1, -1):\n        if flips % 2 == 0:\n            match = a[p] == b[p]\n        else:\n            match = a[p] != b[p]\n        if not match:\n            if not allowed[p]:\n                return 'NO'\n            else:\n                flips += 1\n    return 'YES'\ncases = readInt()\nfor case in range(cases):\n    print(solve(*readCase()))", "for _ in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    if a == b:\n        print('YES')\n        continue\n    s = ''\n    one = 0\n    zero = 0\n    j = 0\n    flag = True\n    for i in range(n):\n        if a[i] == '1':\n            one += 1\n            s += '0'\n        else:\n            zero += 1\n            s += '1'\n        if one == zero:\n            if s[j:i + 1] != b[j:i + 1] and a[j:i + 1] != b[j:i + 1]:\n                print('NO')\n                flag = False\n                break\n            j = i + 1\n    if flag == True:\n        if a[j:] == b[j:]:\n            print('YES')\n        else:\n            print('NO')", "def solve():\n    n = int(input())\n    s1 = input()\n    s2 = input()\n    if s1 == s2:\n        print('YES')\n        return\n    res = []\n    (one, zero) = (0, 0)\n    j = 0\n    for i in range(n):\n        if s1[i] == '0':\n            zero += 1\n        else:\n            one += 1\n        if zero == one:\n            res.append([j, i])\n            j = i + 1\n    lst = list(s1)\n    for i in res:\n        st = i[0]\n        end = i[1]\n        if s1[st] == s2[st]:\n            continue\n        else:\n            for j in range(st, end + 1):\n                if s1[j] == '0':\n                    lst[j] = '1'\n                else:\n                    lst[j] = '0'\n    s1 = ''.join((i for i in lst))\n    if s1 == s2:\n        print('YES')\n    else:\n        print('NO')\nt = int(input())\nwhile t > 0:\n    t -= 1\n    solve()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    zeros = a.count('0')\n    ones = a.count('1')\n    swaps = 0\n    f = True\n    for j in range(0, n):\n        i = n - j - 1\n        if a[i] == b[i]:\n            if swaps % 2 != 0:\n                if zeros != ones:\n                    f = False\n                else:\n                    swaps += 1\n        elif swaps % 2 == 0:\n            if zeros != ones:\n                f = False\n            else:\n                swaps += 1\n        if a[i] == '0':\n            zeros -= 1\n        else:\n            ones -= 1\n        if not f:\n            break\n    if f:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    cnt = []\n    ini = 0\n    if a == b:\n        print('YES')\n        continue\n    for j in range(n):\n        if a[j] == '0':\n            ini += 1\n        cnt += [ini]\n    if a[-1] != b[-1]:\n        bool = False\n        x = cnt[-1]\n        y = n - cnt[-1]\n        if x != y:\n            print('NO')\n            continue\n    else:\n        bool = True\n    bool1 = True\n    for k in range(n - 1, -1, -1):\n        if bool == True and a[k] == b[k]:\n            continue\n        elif bool == True and a[k] != b[k]:\n            bool = False\n            x = cnt[k]\n            y = k + 1 - x\n            if y != x:\n                print('NO')\n                bool1 = False\n                break\n        elif bool == False and a[k] == b[k]:\n            bool = True\n            x = cnt[k]\n            y = k + 1 - x\n            if y != x:\n                print('NO')\n                bool1 = False\n                break\n    if bool1 == False:\n        continue\n    else:\n        print('YES')\n        continue", "def recur(n, a, b):\n    l = []\n    x = 0\n    y = 0\n    for i in a:\n        if i == '0':\n            x += 1\n        else:\n            y += 1\n        l.append([x, y])\n    x = 0\n    for i in range(n - 1, -1, -1):\n        if a[i] != b[i] and x % 2 == 0 or (a[i] == b[i] and x % 2 == 1):\n            if l[i][0] != l[i][1]:\n                return False\n            x += 1\n    return True\nfor _ in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    if recur(n, a, b):\n        print('YES')\n    else:\n        print('NO')", "x = int(input())\nwhile x > 0:\n    k = int(input())\n    s = input()\n    s1 = input()\n    (a, b, c) = (0, 0, 1)\n    for i in range(k):\n        if s[i] == '1':\n            a += 1\n        else:\n            b += 1\n    f = 0\n    for i in range(k - 1, -1, -1):\n        if s[i] != s1[i]:\n            if f == 0:\n                if a != b:\n                    print('NO')\n                    c = 0\n                    break\n                f = 1\n        elif f == 1:\n            if a != b:\n                print('NO')\n                c = 0\n                break\n            f = 0\n        if f == 0:\n            if s[i] == '1':\n                a -= 1\n            else:\n                b -= 1\n        elif s[i] == '1':\n            b -= 1\n        else:\n            a -= 1\n    if c == 1:\n        print('YES')\n    x -= 1", "for y in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    p0 = a.count('0')\n    p1 = n - p0\n    q0 = b.count('0')\n    q1 = n - q0\n    if p0 == q0:\n        foo = 0\n        flag = 0\n        for i in range(n - 1, -1, -1):\n            if foo == 0:\n                if a[i] == b[i]:\n                    pass\n                elif p0 == p1:\n                    foo ^= 1\n                else:\n                    flag = 1\n                if a[i] == '1':\n                    p1 -= 1\n                else:\n                    p0 -= 1\n            else:\n                if a[i] != b[i]:\n                    pass\n                elif p0 == p1:\n                    foo ^= 1\n                else:\n                    flag = 1\n                if a[i] == '1':\n                    p1 -= 1\n                else:\n                    p0 -= 1\n        if flag == 0:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')", "x = int(input())\nfor i in range(x):\n    n = int(input())\n    s = input()\n    m = input()\n    d = 0\n    b = []\n    for j in range(n):\n        if s[j] == '0':\n            d = d + 1\n        else:\n            d = d - 1\n        b.append(d)\n    y = 0\n    r = 0\n    for k in range(n - 1, -1, -1):\n        t = 0\n        if y:\n            if s[k] != m[k]:\n                t = 1\n            else:\n                t = 0\n        elif s[k] != m[k]:\n            t = 0\n        else:\n            t = 1\n        if t == 0 and b[k]:\n            r = 1\n            break\n        if t == 0:\n            if y == 0:\n                y = 1\n            else:\n                y = 0\n    if r:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input() + '0'\n    b = input() + '0'\n    cnt = 0\n    flag = True\n    for i in range(n):\n        if a[i] == '0':\n            cnt += 1\n        else:\n            cnt -= 1\n        if (a[i] != b[i] and a[i + 1] == b[i + 1] or (a[i] == b[i] and a[i + 1] != b[i + 1])) and cnt != 0:\n            print('NO')\n            flag = False\n            break\n    if flag:\n        print('YES')", "for j in range(int(input())):\n    a = int(input())\n    b = input() + '0'\n    c = input() + '0'\n    d = 0\n    for i in range(0, a):\n        d += 1 if b[i] == '0' else -1\n        if (b[i] == c[i] and b[i + 1] != c[i + 1] or (c[i] != b[i] and c[i + 1] == b[i + 1])) and d != 0:\n            print('NO')\n            break\n    else:\n        print('YES')", "def recur(n, a, b):\n    l = []\n    x = 0\n    y = 0\n    for i in a:\n        if i == '0':\n            x += 1\n        else:\n            y += 1\n        l.append([x, y])\n    x = 0\n    for i in range(n - 1, -1, -1):\n        if a[i] != b[i] and x % 2 == 0:\n            if l[i][0] != l[i][1]:\n                return False\n            x += 1\n        elif a[i] == b[i] and x % 2 == 1:\n            if l[i][0] != l[i][1]:\n                return False\n            x += 1\n    return True\nfor _ in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    if recur(n, a, b):\n        print('YES')\n    else:\n        print('NO')", "def solve():\n    l = int(input())\n    s1 = list(map(int, input()))\n    s2 = list(map(int, input()))\n    if s1 == s2:\n        print('YES')\n        return\n    zeroes = ones = 0\n    for i in range(l):\n        if s1[i] == 0:\n            zeroes += 1\n        else:\n            ones += 1\n    xored = False\n    for i in range(l - 1, -1, -1):\n        if s1[i] ^ xored != s2[i]:\n            if i % 2:\n                if zeroes != ones:\n                    print('NO')\n                    return\n                else:\n                    xored = not xored\n            else:\n                print('NO')\n                return\n        if s1[i] == 0:\n            zeroes -= 1\n        else:\n            ones -= 1\n    print('YES')\nt = int(input())\nfor _ in range(t):\n    solve()", "def check(a, ind):\n    co = 0\n    for i in range(ind + 1):\n        if a[i] == '0':\n            co += 1\n        else:\n            co -= 1\n    return co\nt = int(input())\nfor T in range(t):\n    n = int(input())\n    a = list(input())\n    b = list(input())\n    i = len(a) - 1\n    sw = 0\n    c = 0\n    good = 0\n    c = check(a, len(a) - 1)\n    while i >= 0:\n        if sw == 0:\n            if a[i] == b[i]:\n                pass\n            else:\n                sw = 1\n                if c == 0:\n                    pass\n                else:\n                    good = 1\n                    break\n        elif sw == 1:\n            if a[i] != b[i]:\n                pass\n            else:\n                sw = 0\n                if c == 0:\n                    pass\n                else:\n                    good = 1\n                    break\n        if a[i] == '0':\n            c -= 1\n        elif a[i] == '1':\n            c += 1\n        i -= 1\n    if good == 1:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    z = a.count('0')\n    o = n - z\n    ans = 1\n    flag = 1\n    i = n - 1\n    while i >= 0:\n        if flag == 1:\n            if a[i] == b[i]:\n                if a[i] == '1':\n                    o -= 1\n                else:\n                    z -= 1\n                i -= 1\n                continue\n            if z != o:\n                ans = 0\n                break\n            flag = 0\n            if a[i] == '1':\n                o -= 1\n            else:\n                z -= 1\n        else:\n            if a[i] != b[i]:\n                if a[i] == '1':\n                    o -= 1\n                else:\n                    z -= 1\n                i -= 1\n                continue\n            if z != o:\n                ans = 0\n                break\n            flag = 1\n            if a[i] == '1':\n                o -= 1\n            else:\n                z -= 1\n        i -= 1\n    if ans == 1:\n        print('YES')\n    else:\n        print('NO')", "import sys\nT = int(input())\n\ndef invert(s):\n    a = ''\n    for i in s:\n        a += '0' if i == '1' else '1'\n    return a\n\ndef determine(a, b):\n    n = len(a)\n    if n % 2:\n        if not a[-1] == b[-1]:\n            return 'NO'\n    lastBalance = -1\n    bba = 0\n    bbb = 0\n    for i in range(n):\n        bba += 1 if a[i] == '0' else -1\n        bbb += 1 if b[i] == '0' else -1\n        if bba == 0 or bbb == 0:\n            if not bba == bbb:\n                return 'NO'\n            aa = a[lastBalance + 1:i + 1]\n            bb = b[lastBalance + 1:i + 1]\n            if not (aa == bb or aa == invert(bb)):\n                return 'NO'\n            lastBalance = i\n    aa = a[lastBalance + 1:]\n    bb = b[lastBalance + 1:]\n    if not aa == bb:\n        return 'NO'\n    return 'YES'\nfor t in range(T):\n    input()\n    a = input()\n    b = input()\n    print(determine(a, b))", "k = int(input())\nfor i in range(k):\n    n = int(input())\n    a = input()\n    b = input()\n    (zeros, ones) = (0, 0)\n    for i in a:\n        if i == '0':\n            zeros += 1\n        else:\n            ones += 1\n    swapped = False\n    failed = False\n    i = n - 1\n    while i > -1:\n        if a[i] == b[i] and (not swapped) or (a[i] != b[i] and swapped):\n            if a[i] == '0':\n                zeros -= 1\n            else:\n                ones -= 1\n            i -= 1\n        elif zeros == ones:\n            swapped = not swapped\n        else:\n            break\n    print('NO' if i != -1 else 'YES')", "for _ in range(int(input())):\n    n = int(input())\n    a = list(input())\n    b = list(input())\n    zero = a.count('0')\n    one = a.count('1')\n    flag = 0\n    for i in range(n - 1, -1, -1):\n        if int(a[i]) ^ flag != int(b[i]):\n            if zero != one:\n                print('NO')\n                break\n            flag = 1 - flag\n        if a[i] == '0':\n            zero -= 1\n        else:\n            one -= 1\n    else:\n        print('YES')", "def rev(l, s, e):\n    cl = ''\n    for i in range(s, e + 1):\n        if l[i] == '1':\n            cl += '0'\n        else:\n            cl += '1'\n    return cl\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    x1 = input()\n    x2 = input()\n    num0 = 0\n    num1 = 0\n    li = 0\n    nl = False\n    for j in range(n):\n        if x1[j] == '1':\n            num1 += 1\n        else:\n            num0 += 1\n        if num0 == num1:\n            if x1[li:j + 1] == x2[li:j + 1] or rev(x1, li, j) == x2[li:j + 1]:\n                li = j + 1\n            else:\n                nl = True\n                break\n        if j == n - 1 and li != j + 1:\n            if x1[li:j + 1] != x2[li:j + 1]:\n                nl = True\n    if nl:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input() + ' '\n    b = input() + ' '\n    count = prefix = x = 0\n    for j in range(n):\n        if a[j] == '1':\n            x = x + 1\n        else:\n            x = x - 1\n        count = x\n        if (a[j] == b[j]) != (a[j + 1] == b[j + 1]) and count != 0:\n            prefix = 1\n            break\n    if prefix == 1:\n        print('NO')\n    else:\n        print('YES')", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    length = int(input())\n    a = input().rstrip()\n    b = input().rstrip()\n    zero = 0\n    one = 0\n    avail = set()\n    for i in range(length):\n        if a[i] == '1':\n            one += 1\n        else:\n            zero += 1\n        if zero == one:\n            avail.add(i)\n    trans = 1\n    while length > 0:\n        if trans:\n            if a[length - 1] != b[length - 1]:\n                if length - 1 in avail:\n                    trans = 0\n                else:\n                    break\n            else:\n                length -= 1\n        elif a[length - 1] == b[length - 1]:\n            if length - 1 in avail:\n                trans = 1\n            else:\n                break\n        else:\n            length -= 1\n    if length:\n        print('NO')\n    else:\n        print('YES')", "for i in range(int(input())):\n    n = int(input())\n    a = input()\n    req = input()\n    d = {'0': 0, '1': 0}\n    for i in range(n):\n        d[a[i]] += 1\n    i = n - 1\n    diff = 0\n    f = 0\n    while i >= 0:\n        if a[i] == req[i]:\n            if diff == 0:\n                d[a[i]] -= 1\n            else:\n                if d['0'] == d['1']:\n                    if diff == 1:\n                        diff = 0\n                    else:\n                        diff = 1\n                else:\n                    f = 1\n                    break\n                d[a[i]] -= 1\n        elif diff == 0:\n            if d['0'] == d['1']:\n                diff = 1\n            else:\n                f = 1\n                break\n            d[a[i]] -= 1\n        else:\n            d[a[i]] -= 1\n        i -= 1\n    if f == 1:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    (a, b) = (a + '0', b + '0')\n    count = 0\n    for i in range(n):\n        val = a[i]\n        if val == '1':\n            count += 1\n        else:\n            count -= 1\n        if (a[i] == b[i]) != (a[i + 1] == b[i + 1]) and count != 0:\n            print('NO')\n            break\n    else:\n        print('YES')", "for p in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    a += '0'\n    b += '0'\n    (f, p) = (0, 0)\n    for i in range(n):\n        if a[i] == '1':\n            x = 1\n        else:\n            x = 0\n        if a[i] == '0':\n            y = 1\n        else:\n            y = 0\n        f += x - y\n        if a[i] == b[i]:\n            w = 1\n        else:\n            w = 0\n        if a[i + 1] == b[i + 1]:\n            z = 1\n        else:\n            z = 0\n        if w != z and f != 0:\n            p = 1\n            print('NO')\n            break\n    if not p:\n        print('YES')", "t = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    a = input()\n    b = input()\n    zero = []\n    one = []\n    (x, y) = (0, 0)\n    for i in a:\n        if i == '0':\n            x += 1\n        else:\n            y += 1\n        zero.append(x)\n        one.append(y)\n    k = n - 1\n    tmp = False\n    while k >= 0:\n        if tmp == False:\n            if a[k] != b[k]:\n                if zero[k] != one[k]:\n                    break\n                else:\n                    (zero, one) = (one, zero)\n                    tmp = True\n        elif a[k] == b[k]:\n            if zero[k] != one[k]:\n                break\n            else:\n                (zero, one) = (one, zero)\n                tmp = False\n        k -= 1\n    if k < 0:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = input()\n    b = input()\n    a += '0'\n    b += '0'\n    cnt = [0] * n\n    pr = x = 0\n    for j in range(0, n):\n        if a[j] == '1':\n            x += 1\n        else:\n            x -= 1\n        cnt[j] = x\n    for j in range(0, n):\n        if (a[j] == b[j]) != (a[j + 1] == b[j + 1]) and cnt[j] != 0:\n            pr = 1\n            break\n    if pr == 1:\n        print('NO')\n    else:\n        print('YES')", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    real = input()\n    final = input()\n    flipped_real = real\n    flipped_real = flipped_real.replace('1', '2')\n    flipped_real = flipped_real.replace('0', '1')\n    flipped_real = flipped_real.replace('2', '0')\n    count = 0\n    i = 0\n    last = -1\n    temp = []\n    for char in real:\n        if char == '0':\n            count += 1\n        else:\n            count -= 1\n        if count == 0:\n            last = i\n            temp.append(i)\n        i += 1\n    if real[last + 1:] != final[last + 1:]:\n        print('NO')\n        continue\n    flag = 0\n    start = 0\n    for i in range(len(temp)):\n        end = temp[i] + 1\n        if real[start:end] != final[start:end] and flipped_real[start:end] != final[start:end]:\n            print('NO')\n            flag = 1\n            break\n        start = end\n    if flag == 0:\n        print('YES')", "import sys, os.path\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nfor _ in range(int(input())):\n    n = int(input())\n    a = input()\n    b = input()\n    if n == 1:\n        if a == b:\n            print('YES')\n        else:\n            print('NO')\n    elif a == b:\n        print('YES')\n    else:\n        prefix = []\n        one = 0\n        for i in range(n):\n            if a[i] == '1':\n                one += 1\n            else:\n                one -= 1\n            prefix.append(one)\n        flag = True\n        count = 0\n        for i in range(n - 1, -1, -1):\n            if a[i] != b[i]:\n                if count % 2 == 1:\n                    continue\n                elif prefix[i] == 0:\n                    count += 1\n                else:\n                    flag = False\n                    break\n            elif count % 2 != 0:\n                if prefix[i] == 0:\n                    count += 1\n                else:\n                    flag = False\n                    break\n        if flag:\n            print('YES')\n        else:\n            print('NO')", "cases = input()\ncases = int(cases)\nfor c in range(0, cases):\n    n = input()\n    n = int(n)\n    a = input()\n    b = input()\n    acopy = [ch for ch in a]\n    ones_a = a.count('1')\n    ones_b = b.count('1')\n    if ones_a != ones_b:\n        print('NO')\n        continue\n    currvaluea = a.count('0') - ones_a\n    swic = False\n    ok = True\n    for z in range(0, n):\n        z = n - z - 1\n        curr = acopy[z]\n        if b[z] != a[z] and (not swic) or (b[z] == a[z] and swic):\n            if z % 2 == 0 or currvaluea != 0:\n                print('NO')\n                ok = False\n                break\n            swic = not swic\n        if curr == '0':\n            currvaluea = currvaluea - 1\n        else:\n            currvaluea = currvaluea + 1\n    if ok:\n        print('YES')", "def solve(A, B):\n    count0 = 0\n    count1 = 0\n    for a in A:\n        if a == 1:\n            count1 += 1\n        else:\n            count0 += 1\n    flag = 0\n    for i in reversed(range(len(A))):\n        if flag == 0:\n            if A[i] != B[i]:\n                if count0 != count1:\n                    return 'NO'\n                (count0, count1) = (count1, count0)\n                flag = 1\n        elif flag == 1:\n            if A[i] == B[i]:\n                if count0 != count1:\n                    return 'NO'\n                (count0, count1) = (count1, count0)\n                flag = 0\n        if A[i] == flag:\n            count0 -= 1\n        else:\n            count1 -= 1\n    return 'YES'\nx = int(input())\nfor _ in range(x):\n    a = int(input())\n    A = list(map(int, input()))\n    B = list(map(int, input()))\n    print(solve(A, B))", "k = int(input())\nfor i in range(k):\n    n = int(input())\n    a = input()\n    b = input()\n    (zeros, ones) = (0, 0)\n    for i in a:\n        if i == '0':\n            zeros += 1\n        else:\n            ones += 1\n    swapped = False\n    failed = False\n    i = n - 1\n    if i == 0:\n        print('YES' if a == b else 'NO')\n        continue\n    while i > -1:\n        if a[i] == b[i] and (not swapped) or (a[i] != b[i] and swapped):\n            if a[i] == '0':\n                zeros -= 1\n            else:\n                ones -= 1\n            i -= 1\n        elif zeros == ones:\n            swapped = not swapped\n        else:\n            failed = True\n            break\n    print('NO' if failed else 'YES')"]